是的，能行。只要你（或是其他主持会议的人）严格限定会议的时 间不要过长。
会议的形式为：
1) 开发主管介绍最新情况。例如即将发生的事件信息。
2) 大循环。每个产品组都有一个人汇报他们上周完成的工作，这 周计划完成的工作，及碰到的问题。其他人也会作报告（配置管理 领导，QA 领导等）
3) 其他人都可以自由补充任何信息，或者提问问题。
这是个发布概要信息的论坛，而不是提供讨论或者反映问题的场 所。只要保证这一点，15 分钟常常就足够了。有时我们也会超时，但极少会占用 30 分钟以上的时间。如果出现了热烈的讨论，我就 会打断它，请感兴趣的人在会后留下继续讨论。为什么我们要进行全体的脉动会议呢？因为我们发现团体层次上 的 Scrum of Scrums 主要以报告形式进行，很少出现真正的讨论。另外，在这个圈子以外，有许多人都对这种信息非常感兴趣。基本 上大家都想知道其他团队在做些什么。所以我们想，既然已经打算 聚到一起，花时间来告诉彼此每个团队都在干什么，那为什么不让 所有人都参加呢。
116 | 硝烟中的 SCRUM 和 XP
交错的每日例会
如果有太多的 Scrum 团队参与单个产品的开发，而且他们都在同一 时刻进行每日例会，那你就遇到问题了。产品负责人（以及像我一
样爱管闲事的家伙）因此每天只能参加一个团队的每日例会。
所以我们要求团队避免在同一时刻进行每日例会。
上面的例子中，我们是这样安排的：每日例会不在团队房间中进行，而是安排在不同的房间。每个会议大约 15 分钟，但是每个团队在 房间中都可以使用 30 分钟的时间，以备他们会稍稍超出一点儿时 间。这种做法超级有效，原因有二：
1.像产品负责人和我这样的人可以在一个早上参加所有的例 会。想清楚了解到当前的 sprint 进展状况，有什么严重的 风险，这是最好的方式。
2.团队成员可以参加其他团队的例会。这种情况不常发生，不过有时两个团队会在相似的环境下工作，所以会有几个
人参加彼此的例会来保持同步。
它的缺点是减少了团队的自由度——他们无法选择他们自己喜欢
的时间开例会。不过这一直没成为我们的问题。
我们怎样管理多个 SCRUM 团队| 117 
救火团队
曾经有那么一次，在一个大型产品的开发过程中，我们实施不了 Scrum，因为团队成员花了太多时间来救火——拼命忙着修复早期 版本中的 bug。这是个恶性循环，影响很坏，他们花了太多时间救 火，最后根本没有时间进行前瞻性的工作来防火（改进设计、自动
化测试、创建监控工具与警报工具等）。
我们创建了一个专门的救火团队，一个专门的 Scrum 团队，从而解 决了这个问题。Scrum 团队的工作是（带着产品负责人的祝愿）稳定系统，有效防 火。
救火团队（实际上我们管他们叫“支持团队”）有两项工作。1) 救火。
2) 保护 Scrum 团队远离各种干扰，包括挡开那些不知从何而来的、增加临时特性的要求。
救火团队被安排在离门最近的地方，Scrum 团队坐在房间的最里 面。所以救火团队可以真正地从物理上保护 Scrum 团队，使他们不 会受到急切的销售人员或者怒气冲冲的客户的干扰。
两个团队中都有高级工程师，这样一个团队就不会过于依赖另一个
团队的核心人员。
这实际上也是对解决 Scrum 自行启动问题的一种尝试。如果团队的 工作计划总是只能安排一天之内的工作，那我们怎么开始做 Scrum 呢？就像上面所讲述的那样，我们的策略是分割团队。
这种方式效果很好。因为 Scrum 团队有了空间努力工作，所以他们 最后能够稳定系统。同时救火队员也完全放弃了预先计划的想法，他们完全是针对外部反应展开工作，只管修复即将出现的下一个问
题。
118 | 硝烟中的 SCRUM 和 XP
当然，Scrum 团队也不是完全远离干扰。救火团队常常需要 Scrum 团队中核心人员的帮助，在最糟糕的状况下，甚至会需要整个团队。
但无论如何，经过几个月以后，这个系统达到了足够稳定的状态，然后我们解散了救火团队，另外创建了一个新的 Scrum 团队。救火 队员们很高兴把已经磨损的头盔放到一边，加入到 Scrum 团队中。
是否拆分产品 backlog？
假设你有一个产品和两个 Scrum 团队，那应该有几个产品 backlog 呢？多少个产品负责人？我们曾经为此评估过三个模型。选择不 同，sprint 计划会议的形式就会有很大差异。
策略 1：一个产品负责人，一个 backlog 
这就是“只能有一个”的模型，也是我们最推崇的模型。
这种模型的优点是：你可以让团队根据产品负责人当前的优先级来这种模型的优点是：你可以让团队根据产品负责人当前的优先级来
自行管理。产品负责人关注他所需要的东西，团队决定怎么分割工
作。
我们怎样管理多个 SCRUM 团队| 119 
说得更具体一些，我们来看看这个团队 sprint 计划会议的举行方式：Sprint 计划会议在一个外部的会议中心举行。
在会议开始之前，产品负责人指定一面墙壁用做“产品 backlog 墙”，把故事贴在上面（以索引卡的形式），按相对优先级的顺序排序。他不断往上面贴故事，直到贴满为止。通常他贴上去的东西都要比 一个 sprint 中所能完成的条目多。
每个 Scrum 团队各自选择墙上的一块空白区域，贴上自己团队的名 字。那就是他们的“团队墙”。然后他们从最高优先级的故事开始，从产品 backlog 墙上把故事逐一挪到他们自己的团队墙上。
这个过程可以用下面的图片来描述，图中的黄色箭头表示故事卡从 产品 backlog 墙移动到团队墙的过程。120 | 硝烟中的 SCRUM 和 XP
在会议进行中，产品负责人与团队会针对索引卡进行讨论、把它们
在团队之间移动、上下挪动以调整优先级、把它们拆分成更小的条
目，等等。过上大概一小时左右，每个团队就会在自己的团队墙上
形成一个 sprint backlog 的初步候选版本。然后团队便会独立工作，
进行时间估算，把故事拆分成任务。
我们怎样管理多个 SCRUM 团队| 121 
整个过程显得特别嘈杂混乱，令人筋疲力尽，但同样也效果很好，很有趣，也是个社会交往的过程。到结束时，所有团队通常都会得 到足够的信息来启动他们的 sprint。
策略 2：一个产品负责人，多个 backlog 
在这种策略中，产品负责人会维护多个产品 backlog，每个团队对 应一个。我们没有真正试过这种方式，不过差点儿就这么做了。这 是我们的后备方案，以防第一种策略失败。它的劣势在于，产品负责人要把故事分配给团队，而这项工作交给 团队自己处理会更好。
122 | 硝烟中的 SCRUM 和 XP
策略 3：多个产品负责人，每人一个产品 backlog 
它跟第二个策略有点像，每个团队都有一个产品 backlog，但每个 团队也都有一个产品负责人！
我们没有用过这种方式，也许永远也不会用。
如果两个产品 backlog 都对应同一个代码库，那两个产品负责人可 能会发生严重的利害冲突。
我们怎样管理多个 SCRUM 团队| 123 
如果两个产品 backlog 所对应代码库不同，那这样做，就跟把整个 产品分成不同的子产品然后独立运作毫无二致。也就表示着我们回 到了每个团队一个产品的情况，这样处理起来既愉快又轻松。
代码分支代码分支
有多个团队在同一个代码库基础上工作，我们就势必会碰到 SCM（软件配置管理）系统中的代码分支问题。现在已经有很多关于处 理多人协同工作问题的书和论文了；所以我这里也就不再谈什么细 节。我也没有什么新东西或者革命性的观点，下面会总结一下我们 团队到目前为止学到的最重要的一些经验。
	主线（或者主干）的状态要严格保持一致：最起码所有的 	东西都要能够进行编译，所有的单元测试都可以通过。每 	时每刻都能创建一个可以工作的发布版本。如果可以做到 	持续构建系统在每晚进行构建，并把结果自动部署到测试 	环境中就更好了。
	给每个版本打上标记（tag）。无论什么时候，只要是为验 	收测试进行发布，或是发布到产品环境，在主线中就应该 	进行版本标记，用来精确标识所发布的内容。这便意味着 	在将来的任一时刻，你都可以回退到某个历史版本中，创 	建一个维护分支。	只在必需的时候创建分支。这里有一条很好的规则：如果 	你无法在不违反现有代码基线策略的情况下使用该代码基 	线，那么只有在这种情况下，才能创建新的代码基线。如 	果摸不准是什么情况，那就不要创建分支。为什么？因为 	每个活动分支都会增加复杂性，提高管理成本。
	将分支主要用于分离不同的生命周期。无论你是否决定让 	每个团队在他们自己的代码基线上进行编码，如果你打算 	在同一个代码基线上将短期的修复版与长时间的变化进行 	合并，到时候就会发现：要发布这个短期的修复版绝非易 	事！
	经常同步。如果你在分支上工作，那么只要有了一些代码 	可以构建，就应该与主线进行同步。在每天的编码工作开
124 | 硝烟中的 SCRUM 和 XP
始之前，都把代码从主线同步到分支上，这样你的分支就
可以与其他团队所做出的变化保持更新。如果会产生让你
觉得生不如死的合并情况，那也只能接受这种现实，因为觉得生不如死的合并情况，那也只能接受这种现实，因为
等下去的结果只会更糟。
多团队回顾
如果有多个团队开发同一个产品，我们怎样做 sprint 回顾呢？
在 sprint 演示结束以后，大家鼓掌、相拥，然后每个团队立刻回到 自己的房间，或者办公室之外的某个舒适场所。他们各自的回顾方 式与我在“我们怎样做 sprint 回顾”中描述的情况并没什么不同。
在 sprint 计划会议上（因为我们在同一个产品中使用的是同步的 sprint，所以所有团队均会参加），第一件事情就是让每个团队中 找出一个发言人，站起来总结他们回顾中得出的关键点。每个团队 都有 5 分钟的时间。然后我们会进行大约 10 到 20 分钟的开放讨论。之后稍作休整，开始真正的 sprint 计划。
我们没有试过其它方式，这样已经足够了。不过最大的缺点就是 在回顾之后，计划会议之前没有休整时间（参见“sprints之间的 休整时刻”）。对于单个团队的产品，我们就不会在 sprint 计划会议上对回顾进行 总结了。因为这没有必要，每个人都参与了真正的回顾会议。
InfoQ 中文站.NET 社区 
 和微软其它企业开发解决方案 
16 
我们怎样管理地理位置上分布的团队 
如果团队成员处于不同地理位置该怎么办？Scrum 和 XP 的大部分“魔力”要想发挥作用，团队的成员们最好身处同地紧密协作、可 以结对编程，而且能做到每日面对面交流。
我们有一些分散的团队，也有些团队成员时时在家工作。
我们的策略很简单：就是想尽办法来把物理位置上分散的团队成员 之间的沟通带宽增至最大。我不只是说每秒传递多少兆字节（当然 这也很重要），还包括含义更广的沟通带宽：
	能够一起结对编程。
	能够在每日例会上面对面交流。
	在任何时候都能够面对面讨论。
	可以真正地碰面与交往。
	整个团队可以主动举行会议。	可以真正地碰面与交往。
	整个团队可以主动举行会议。
	团队对 sprint backlog、sprint 燃尽图、产品 backlog 和其他 	信息传递设施有相同的理解。
我们还采取过其他一些措施（或者是正在试着实施，到现在还没有 全都用到过）：
	•	每一台工作站前面都配备网络摄像头和耳麦。