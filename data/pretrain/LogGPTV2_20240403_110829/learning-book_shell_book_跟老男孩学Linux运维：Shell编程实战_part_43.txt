把脚本中的功能和配置明确分开，主脚本只用于实现程序主干，加载配置及加载函
数等功能实现应尽量封装在子函数中。
规范代码树如下。
[rooteoldboy seripts]tree
1--bin
---
## Page 302
234显老男孩掌 Linux 运维：Shell 编程实战
--ipsecct1
1--conf
1
--ipsec.cfg
=
func
functions
3directories,3files
14.5.2缩进规范
在使用条件语句时，每进行一层循环或是循环内部的操作时，就使用一个缩进，缩
进一般用TAB键或加空格，本书推荐采用4个空格缩进。
范例14-5：写出脚本缩进规范。
if [ -d oldboy_dir ]
then
if[-foldboy_file]
cd oldboy_dir
then
echo *DoSth*
fi
cd..
fi
范例14-6：给出系统脚本函数的缩进示例。
Confirm whether we really want to run this service
confirm(){
[-x/usr/bin/rhgb-client14/usr/bin/rhgb-client --detai18=yes
while1;do
if strstr S*yY·*Sanswer1（*Sansver*]；then
Jensue peax
elif strstr S*cc*Sanswer*;then
rm -f /var/run/confirm
[-x/usr/bin/rhgb-client ]&&/usr/bin/rbgb-client --detai1s=nc
u
elif strstr S*nN**Sanswer*;then
f1
done
提示：可调整vim实现自动缩进，建议缩进4个空格。
---
## Page 303
第14章Shell瞬本开发规范285
14.6Shell脚本的变量及文件检查规范
脚本中要检查配置项是否为空、是否可执行等，尤其是对于一些重要的、会影响下
面脚本正常运行的配置项，必须要进行是否为空等的检查，避免配置文件中出现遗漏等
问题。
范例14-7：针对字符串变量进行判断。
if[-n*S(FILE_PATH)*]
then
echo *Do something*
fi
范例14-8：给出HTTP脚本变量的定义方式。
httpd=$ (HTTPD-/usr/sbin/httpd)
prog-httpd
pidfile=S(PIDFILE-/var/run/httpd.pid)
1ockfile=S(LOcKFILE-/var/1ock/subsys/httpd)
提示：这样的定义可以防止变量出现空值，这是前面第4章讲解的变量子串的特殊
知识。
---
## Page 304
Linux
第15章
Shell脚本的调试
本章为大家讲解Shell脚本的调试知识，掌握了Shell脚本的调试技巧，可以让我
们在开发大型脚本时做到事半功倍。虽然掌握Shell脚本的调试技巧很重要，但是如果
能掌握并养成前面各个章节提到的Shell脚本开发的规范和习惯，就可以从源头上降低
开发脚本的错误率，从而降低脚本调试的难度和时间，达到未雨网缪的效果，这也是老
男孩常说的平时应多学习好的习惯、规范和制度。不过，在讲解Shell脚本的调试之前，
我们还是先来看几个常见的错误范例。
15.1常见Shell脚本错误范例
15.1.1if条件语句缺少结尾关键字
范例15-1：if条件语句缺少结尾关键字引起的错误。
[root@oldboy scripts]# cat 15_1.sh
if[10-1t12]
=:/bin/sh
then
echo *Yes,10 is less than 12*
执行结果如下：
[root@oldboy scripts]ah 15_1.sh
15_1.sh:line 5:syntax error:unexg
pected end ot tile
---
## Page 305
第15章Shell脚本的调试287
结果给出了提示，第5行存在语法错误：这不是所期待的（意外的）文件结尾。根
据这个提示，我们知道脚本的尾部有问题，仔细观察发现，原来是缺少了f结尾。
说明：在Shell脚本开发中，脚本缺少fi关键字是很常见的问题。另外，当执行脚
本时提示输出错误后，不要只看那些提示的错误行，而是要观察整个相关的
代码段。
Shell脚本解释器一般不会对脚本错误进行精确的定位，而是在试图结束一
个语句时进行错误统计，因此，掌握语法并养成良好的规范和习惯就显得很
重要。
15.1.2循环语句缺少关键字
for、while、until和case语句中的错误是指实际语句段不正确，也许是漏写或拼错
了固定结构中的一个保留字。
范例15-2：循环结构语句中缺少关键字引起的错误。
[root9oldboy scripts]# cat -n 15_2.sh
2while true
uxd）.x1-o -----=
5
..p--peus0oe-uu--8-I-xn=x
if“Sstatug=“200*][*sok*=“Ok*]：the这里故意设置成缺引号。
o --- 
8[1-d*SDBPATH*]&&mkdir SDBPATH
9for dbame nSMrMD-e*show database;*1sed1,2d’|egrep v*my8g1schema
10
11
do
SMYDUMP SdbnameIgzip >SDBPATH/S(dbname)_S(date +F).8ql.gz
12done
执行结果如下：
[root9o1dboy scripts]# sh 15_3.sh
15_3.sh: 1ine 7: unexpected EoF while 1ooking for matching *.
15_3.sh: line 13: syntax error: unexpected end of file
我们明明看到是第5行少了个双引号，但是报错的是第7行。原因是第7行和第13
行调用了第5行的sock路径。
范例15-4：成对的符号（中括号）落了单导致的错误。
[root@oldboy scripts] cat -n 15_4.sh
1#1/bin/sh
DBPATH=/server/backup
3
4
MYPASS=o1dboy123
5s0CKET=*/data/3306/my8ql.8ock*
ST.P-]8
=>这里缺了个后率个中括号“1”
9for dbname in SHYCMD -e *shov databases;*Ised *1,2d*legrep v*nysql|schoma
10do
11
SHYDUMP $dbnane1gzip >SDBPATH/S(dbnane)_S(date +F).sql.gz
12done
执行结果如下：
[root8oldboy acripts]sh 15_4.sh
15_4.sh:1ine 8:[:missing ]
>这个错误提示银准
15.1.4中括号两端没空格
范例15-5：中括号两端没空格导致的错误。
---
## Page 307
第15章Shel脚本的调试289
[rooteoldboy seripts]#cat-n 15_5.sh
1
1/bin/bash
2
3
a=3
4b=1
5if[Sa-1tSb]=>中括号表达式两墙无空格
6
then
echo *Yes,$a >= Sb*
10fi
执行结果如下：
[root@o1dboy scripts]#sh 15_5.sh
15_5.sh: 1ine 5:[3:command not found
15.1.5Shell语法调试小结
Shell的语法调试并不是很智能，报错也不是很精准，因此就需要我们在开发规范
和书写脚本上多下工夫，企业里的Shell脚本大多都是比较短的，因此，开发起来也相
对轻松。
如果能在开发过程中，重视书写习惯、开发规范和开发制度，那么就会减少脚本调
试的难度和次数，提升开发效率。此外，要对Shell的基本语法十分熟练，这样才能更
好地利用脚本调试。
此外，写脚本的思路要清晰，否则将给调试带来困难。可采用的思路如下：
首先思考开发框架，尽量模块化开发，复杂的脚本要简单化、分段实现。并采用打
游戏的思想（第一关、第二关、第三关）去完善框架结构。
然后利用函数分模块开发，语法结构如下：
面数1（）
函数2（）
nain()
main s*
使用dos2unix格式化后的结果。
dos2unix: converting file while.sh to UNIx format ...
[root@oldboy scripts]#cat -v while.sh
1/bin/bash
function:while-3example
this script is created by oldboy.
version:1.1
#!/bin/sh
i=1
sun=0
while((i<=100）)
do
((sum=sum+i))
（（i++))
done
printf *totalsum is 1$sum\n*
提示：正常了。H消失了。windows下代码的换行特和Linux下的不一样，导致了本例的问题。
[root8oldboy scripts]# sh while.sh
totalsum is :5050
如果没有安装dos2unix，则用下面的命令进行安装：
yum install dos2unix -y
15.2.2使用echo命令调试
echo命令是最有用的调试脚本的工具之一。一般应在可能出现问题的脚本的重要部分
加人ccho命令，例如在变量读取或修改操作的前后加入ccho命令，并紧挨着退出命令exit。
---
## Page 309
第15章Shell脚本的调试29l
范例15-7：利用echo调试一个简单的判断脚本。
[root0oldboy script8]cat-nIf-judgenum4-debug.sh
1!/bin/bash
2
created by oldboy
3
#date:20100918
4
read-p*pls input two num:*ab
#function:int compare
6echoSaSb#<增加打印输出，确认变量值是否特合要求。
5
7
exit
<退出脚本，目的是不执行后面的代码。
8
[qS-]T6
if（（Sa<Sb ））
11
then
12
elif [sa-eq Sb]
echo '$a<$b*
13
14
then
15
qs=es.ou
16
else
17
qs<es.ou
18fi
执行结果如下：
[root8oldboy scripts]sh if-judgenum4-debug.sh
pls input two num:99 88
88<66
这个调试方法不是Shell的专利，PHP、ASP、Perl、Python等语言都可以使用这样
简单又好用的调试方法。
15.2.3使用bash命令参数调试