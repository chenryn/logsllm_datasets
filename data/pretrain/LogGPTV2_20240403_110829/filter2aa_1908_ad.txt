### Managing Identification Namespaces and Reconciling Incompatible Standards

Suppliers must manage their own identification namespaces and reconcile incompatible standards and practices. As Software Bill of Materials (SBOM) is an emerging technology, suppliers are still learning how to share this data with their customers. Fortunately, many suppliers already have trusted channels for software updates and support, though not all are automated or flexible. Several promising technologies have emerged or are being developed to facilitate the discovery, access, and automated ingestion of SBOM data.

### Promising Technologies for SBOM Data Management

1. **Manufacturer Usage Descriptor (MUD):** This mechanism allows a device to communicate important information about itself on the network, including network functionality and, notably, SBOMs.
2. **Digital Bill of Materials (DBOM):** This solution supports multiple attestations about an open-ended set of supply chain data, including SBOMs, and enforces sharing and access policies around these attestations.
3. **OpenC2:** A standardized language for the command and control of cyber defense technologies, OpenC2 is being adapted to handle, process, and act on SBOM data.

### Centralized Repositories for SBOMs

SBOMs can also be managed by trusted third parties, which introduces both strengths and weaknesses associated with centralization. Challenges include establishing trust and securing funding sources. One benefit of centralization is that collectively stored SBOMs in a repository can be easily queried by other applications and systems, providing insights into systematic risks facing organizations, ecosystems, or even entire countries. This can facilitate coordinated vulnerability disclosure and help prioritize security research or hardening practices. However, there are concerns that adversaries might exploit this centralized data to target critical components. Further research is needed to determine the optimal structure and incentives for sharing, protecting, and using SBOM data.

### Integrating SBOM into Broader Supply Chain Security

SBOM should not be viewed as a unique security phenomenon but as another practice supporting the broader effort to secure the supply chain. This data can be linked to more supply chain data in the software domain and tied to hardware data. Hardware offers features such as a hardware root-of-trust and greater end-to-end assurance. Risks to the hardware supply chain pose their own challenges, and hardware-specific metadata should be integrated into overall supply chain risk management along with SBOM data.

### Standardization and Future Directions

As SBOM technology, tools, and practices mature, standards organizations should consider integrating them into voluntary, consensus-based standards. The development of SBOM has been iterative, focusing on what works and allowing for rapid innovation. Given its cross-organizational nature, it is crucial to demonstrate feasibility and scalability before formalizing standards. As evidence of successful widespread implementation accumulates, sectors and standards experts should codify the technology and practices into international standards.

### Conclusion

This report is the result of input from stakeholders across government, private sector, and academia. The minimum elements of an SBOM are a starting point based on current capabilities. As additional elements become feasible, tested, and built into tools, they should be added to the minimum elements. These elements will be key inputs into the Federal Government’s efforts to improve the security and integrity of the software supply chain, particularly for critical software. Executive Order 14028 outlines next steps, including specific guidance, standards, procedures, or criteria. The Federal Government should encourage or develop resources on implementing SBOMs, potentially involving sector-specific or technology-specific details. Building on and expanding public-private partnerships will be essential.

### Methodology

The Executive Order on Improving the Nation’s Cybersecurity directed the Department of Commerce, in coordination with the National Telecommunications and Information Administration (NTIA), to publish the minimum elements for an SBOM. NTIA published a Notice and Request for Comments (RFC) on the minimum elements, receiving approximately 88 comments from stakeholders. Additionally, NTIA conducted interviews with 32 Federal government officials. The NTIA multistakeholder process on software component transparency, initiated in 2018, provided valuable insights for this activity.

### Glossary

- **Authenticity:** The property that data originated from its purported source.
- **Author:** An entity that creates an SBOM. If the author and supplier are different, the author makes claims about components created or included by the supplier.
- **Component:** A unit of software defined by a supplier at the time the component is built, packaged, or delivered.
- **Consumer:** An entity that obtains SBOMs. An entity can be both a supplier and consumer.
- **Dependency:** Characterizes the relationship where an upstream component X is included in software Y.
- **Downstream:** Refers to how a component is subsequently used in other pieces of software at a later stage in the supply chain.
- **Integrity:** Guarding against improper information modification or destruction.
- **Lifecycle Phase:** The stage in the software lifecycle where an SBOM is generated.
- **Open-source software:** Software that can be accessed, used, modified, and shared by anyone.
- **Pedigree:** Data on the origins of components and the process under which they came together.
- **Provenance:** Data about the chain of custody of the software and all constituent components.
- **SBOM (Software Bill of Materials):** A formal record containing the details and supply chain relationships of various components used in building software.
- **Software-as-a-Service (SaaS):** The capability provided to the consumer to use the provider’s applications running on a cloud infrastructure.
- **Subcomponent:** Constituent part(s) of a component.
- **Supplier:** An entity that creates, defines, and identifies components and produces associated SBOMs.
- **Transitive Dependency:** Characterizes the relationship where if an upstream component X is included in software Y and component Z is included in component X, then component Z is included in software Y.
- **Upstream:** Refers to the origins of components or subcomponents at an earlier stage in the supply chain.

### Acronym List

- **CPE:** Common Platform Enumeration
- **CPU:** Central Processing Unit
- **EO:** Executive Order
- **NIST:** National Institute of Standards and Technology
- **NTIA:** National Telecommunications and Information Administration
- **OSS:** Open-Source Software
- **PSIRT:** Product Security Incident Response Team
- **PURL:** Package Uniform Resource Locator
- **RFC:** Request for Comments
- **SBOM:** Software Bill of Materials
- **SPDX:** Software Package Data eXchange
- **SWID:** Software Identification
- **VEX:** Vulnerability Exploitability eXchange

---

This revised version aims to enhance clarity, coherence, and professionalism while maintaining the original content's intent and structure.