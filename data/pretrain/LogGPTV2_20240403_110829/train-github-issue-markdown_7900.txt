ICE when accessing a non-existent enum variant through a reference.
Test case 1 (`Bar` is a struct, not even an enum):
    fn foo(t: &T) {}
    struct Bar;
    fn main() { 
        foo(&Bar::Baz);
    }
Test case 2 (Bar::Baz is a non-existent enum variant):
    fn foo(t: &T) {}
    enum Bar {
        NotBaz
    }
    fn main() { 
        foo(&Bar::Baz);
    }
ICE backtrace:
    error: internal compiler error: unexpected panic
    note: the compiler unexpectedly panicked. this is a bug.
    note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports
    note: run with `RUST_BACKTRACE=1` for a backtrace
    thread 'rustc' panicked at 'path not fully resolved: PathResolution { base_def: DefTy(DefId { krate: 0, node: 12 }, false), last_private: LastMod(AllPublic), depth: 1 }', C:/bot/slave/nightly-dist-rustc-win-64/build/src/librustc\middle\def.rs:81
    stack backtrace:
       1:         0x711b8f12 - sys::backtrace::write::hdb51798d383e2c695rs
       2:         0x711c2376 - rt::unwind::register::hef1903092323c9734Yv
       3:         0x71185220 - rt::unwind::begin_unwind_inner::h2fa0652062c22375eWv
       4:         0x71185c27 - rt::unwind::begin_unwind_fmt::h13657eb4ac5da50ekVv
       5:           0xee0c56 - middle::ty::resolve_expr::h51d7abf3a2732b230v6
       6:          0x1026a06 - middle::ty::expr_kind::he8d8b524640e8d6b6x6
       7:          0x10267f9 - middle::ty::expr_is_lval::h9fe5b61c1e6534c03w6
       8:          0x163fff5 - check::UnresolvedTypeAction...std..clone..Clone::clone::hf4c3a245578662abVEp
       9:          0x161ae79 - check::callee::CallResolution.DeferredCallResolution::resolve::he161ac943e0493a8hcm
      10:          0x161884a - check::FnCtxt.AstConv::projected_ty::h240f52ba63e8d53aBNo
      11:          0x16173ef - check::FnCtxt.AstConv::projected_ty::h240f52ba63e8d53aBNo
      12:          0x166c818 - check::UnresolvedTypeAction...std..clone..Clone::clone::hf4c3a245578662abVEp
      13:          0x162f1e1 - check::GatherLocalsVisitor.Visitor::visit_item::h575c0a1a31f9fe703Rn
      14:          0x161525a - check::FnCtxt.AstConv::projected_ty::h240f52ba63e8d53aBNo
      15:          0x162abac - check::CheckItemBodiesVisitor.Visitor::visit_item::h93ccea520f14b38cXEn
      16:          0x1628d8f - check::CheckItemBodiesVisitor.Visitor::visit_item::h93ccea520f14b38cXEn
      17:          0x16dec1b - check_crate::hc2ca7a846886762c5CC
      18:          0x16d7c29 - check_crate::hc2ca7a846886762c5CC
      19:         0x652e24a2 - driver::phase_3_run_analysis_passes::h6baa270e309301b6tGa
      20:         0x652c2b40 - driver::compile_input::h26af5f3f80d0ca83Qba
      21:         0x65378e23 - run_compiler::h08ad06f8fc43c8db65b
      22:         0x653769af - run::h3d20f7e70be2f675M5b
      23:         0x65375f69 - run::h3d20f7e70be2f675M5b
      24:         0x711f727c - rust_try
      25:         0x711f7259 - rust_try
      26:         0x653761e5 - run::h3d20f7e70be2f675M5b
      27:         0x711c0624 - sys::process2::Command::cwd::h53354db0f20fd45brGu
      28:         0x775a59cd - BaseThreadInitThunk
    Could not compile `rust-test`.
    To learn more, run the command again with --verbose.
## Meta
    rustc 1.1.0-nightly (7bd71637c 2015-05-06) (built 2015-05-06)
    binary: rustc
    commit-hash: 7bd71637ca40910dbd310813a19abf76db84f8f6
    commit-date: 2015-05-06
    build-date: 2015-05-06
    host: x86_64-pc-windows-gnu
    release: 1.1.0-nightly