产品生态
生态
专有云
云市场 公有云
集团业务 混合云
业务
业务
专家
服务
RDS 中台
SaaS
QBI,DataV
分级存储：
...
OLTP + OLAP 本地
数据传输、
迁移服务
OSS表：并行读写、压缩、行存、列存
ODPS，ADS 阿里云OSS (海量分布式对象存储) 对象存储
Others ... ...
mybatis
http://www.mybatis.org/mybatis-3/configuration.html
mybatis等框架，不支持的语法都可以通过UDF来实现，例如批量更新。
https://github.com/digoal/blog/blob/master/201712/20171214_01.md
类型映射
mysql, pg
• MySQL 'enum' THEN LOWER(CONCAT(c.COLUMN_NAME, '_t'))
• MySQL 'tinyint' THEN 'smallint'
• MySQL 'mediumint' THEN 'integer'
• MySQL 'tinyint unsigned' THEN 'smallint'
• MySQL 'smallint unsigned' THEN 'integer'
• MySQL 'mediumint unsigned' THEN 'integer'
• MySQL 'int unsigned' THEN 'bigint'
• MySQL 'bigint unsigned' THEN 'numeric(20)'
• MySQL 'double' THEN 'double precision'
• MySQL 'float' THEN 'real'
• MySQL 'datetime' THEN 'timestamp'
• MySQL 'longtext' THEN 'text'
• MySQL 'mediumtext' THEN 'text'
• MySQL 'blob' THEN 'bytea'
• MySQL 'mediumblob' THEN 'bytea'
语法差异
mysql, pg
• 类型、语法差异详情：
• https://github.com/digoal/blog/blob/master/201801/20180117_01.md
• https://github.com/digoal/blog/blob/master/201801/20180117_02.md
• 常见mysql,pg 语法差异
– mysql: [LIMIT {[offset,] row_count | row_countOFFSET offset}]
– pg: [ LIMIT { count| ALL } ] [ OFFSET start[ ROW | ROWS ] ]
• PG扩展语法、操作符、函数、类型、索引接口、插件
– https://www.postgresql.org/docs/10/static/sql-commands.html
– https://www.postgresql.org/docs/10/static/functions.html
– https://www.postgresql.org/docs/10/static/datatype.html
– B-tree, hash, GiST, SP-GiST, GIN, and BRIN, bloom.
• https://www.postgresql.org/docs/10/static/sql-createindex.html
– https://www.postgresql.org/docs/10/static/contrib.html
阿里巴巴内部应用
淘宝、新零售、
菜鸟、公共平
台、飞猪、
阿里云、优酷、
YUNOS、智慧
阿里妈妈、
城市、蚂蚁、
B2B
未来酒店、阿
里云孵化器
高德、淘点点
目录
• 产品介绍
• 生态介绍
• 应用案例
• 开发、管理实践
• 数据库原理
• 参考文档
OLTP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
点查，KEY值查询 1亿 112 69万 0.16毫秒
键值更新 1亿 56 22万 0.25毫秒
合并写入(有则更新、无则写入) 1亿 56 22.8万 0.245毫秒
秒杀-单条记录并发更新 1 56 23万 0.48毫秒
空间包含，菜鸟精准分包、共享单车.等 1亿个多边形 112 27.9万 0.4毫秒
搜索空间附近对象，LBS，O2O 10亿个经纬度点 112 13.7万 0.8毫秒
空间数据、位置更新(滴、菜鸟、饿) 1亿 56 18万 0.3毫秒
图式搜索（N度搜索、最短路径） 50亿，3度搜索，单次响应2.1毫秒 64 1万 6.6 毫秒
OLTP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
全文检索、写入、实时索引 500万词库，每行64个词，并发写入 56 9.3万 0.6毫秒
数组、写入、实时索引 500万词库，每行64个词，并发写入 56 10万 0.5毫秒
前后模糊查询、实时索引、并发写 128个随机字符 56 14.4万 0.38毫秒
字符串查询、前缀like 'x%' 1亿，128个随机字符 112 14万 0.8毫秒
字符串查询、后缀like '%x' 1亿，128个随机字符 112 17.8万 0.63毫秒
字符串查询、前后百分号like '%x%' 1亿，128个随机字符 56 8.1万 0.68毫秒
字符串查询、相似查询similary(str, 'xx') 1亿，128个随机字符 56 1531 35毫秒
字符串查询、全文检索ts @@ tsquery 1亿 56 5.14万 1毫秒
OLTP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
文本特征向量搜索 1亿海明码 56 4.9万 1.14毫秒
数组相似搜索 1亿，每行24个数组元素 56 1909 29毫秒
时序数据并发写入(含时序索引) 批量写入313.7 万行/s，单步写入27.3万 56 3137 17.8毫秒
行/s。
区间查询，返回5万条记录 1亿（3160万行/s 吞吐） 16 630 25毫秒
返回N条，可按比例计算响应时间。
IN\EXISTS 查询 1亿，IN(1,10,100,...100万个元素) 1毫秒~ 380毫秒
NOT IN 查询(无需索引) parallel Hashjoin 1亿，NOT IN(1,10,100,...100万个元素) 0.8秒~ 1.8秒
NOT EXISTS 查询(无需索引) parallel 1亿，NOT exists(100万个元素) 0.9秒~ 1.2秒
Hashjoin
OLTP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
流式处理-阅后即焚-消费 395.2 万行/s 56 3952 14毫秒
10亿，消费
物联网-阅后即焚-读写并测 写入：193万行/s，消费：418万行/s 56
物理网-阅后即焚-JSON+函数流计算-读 写入：180万行/s，消费：145.8万行/s 56
写并测
单表，无索引，单事务单条写入 单行110字节 56 26万 0.2毫秒
单表，有索引，单事务单条写入 单行110字节 56 10万 0.5毫秒
单表，无索引，单事务多条批量写入 单行110字节，每次提交1000条 56 180万 30.9毫秒
行/s
单表，有索引，单事务多条批量写入 单行110字节，每次提交1000条 56 16.7万 334毫秒
行/s
OLTP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
多表，无索引，单事务单条写入 动态SQL成为瓶颈 56 18万行/s 0.3毫秒
多表，有索引，单事务单条写入 动态SQL成为瓶颈 56 17万行/s 0.3毫秒
多表，无索引，单事务多条写入 每次提交1000条 56 262.7万行/s 21毫秒
多表，有索引，单事务多条写入 每次提交1000条 56 145万行/s 38毫秒
无日志多表，无索引，单事务多条写入 每次提交1000条 56 813万行/s 6.8毫秒
无日志多表，有索引，单事务多条写入 每次提交1000条 56 733万行/s 7.6毫秒
OLAP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
多表JOIN 10张1000万的表 112 10万 1.08毫秒
大表JOIN、统计 2张1亿，1张100万 56 2.2万 2.5毫秒
大表OUTER JOIN、统计 1千万 OUTER JOIN 1亿 1千万left join 1亿：11秒
反之：8秒
用户画像-数组包含、透视 1亿，每行16个标签 56 1773 31毫秒
用户画像-数组相交、透视 1亿，每行16个标签 56 113 492毫秒
用户画像-varbitx 1万行，2000亿BIT ，与或非 2.5秒
用户画像-多字段任意搜索\聚合、透视 1亿，32个字段，任意字段组合查询 56 3.6万 1.56毫秒
物联网-线性数据-区间实时聚合、统计 1万传感器，10亿记录 56 6266 8.9毫秒
OLAP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
排序 1亿 32 1.4秒
建索引 1亿 PG 10: 38秒；PG11: 15.5秒
并行扫描 1亿 32 0.88秒
并行聚合 1亿 32 0.9秒
并行过滤 1亿 32 1秒
并行JOIN+聚合 1000 万JOIN 1000万 32 PG 10: 5.4秒；PG 11: 1秒
并行JOIN+聚合 1亿JOIN 1亿(双表过滤到1000万) 32 PG 10: 6.3秒；PG 11: 1.2秒
并行JOIN+聚合 1亿JOIN 1亿(单表过滤到1000万) 32 PG 10: 8.5秒；PG 11: 2秒
并行JOIN+聚合 1亿 JOIN 1亿(无条件JOIN) 32 PG 10: 58.3秒；PG 11: 10.7秒
并行JOIN+聚合 10亿JOIN 10亿(双表过滤到1000万) 32 PG 10: 12秒；PG 11: 1秒
OLAP Benchmark(56 Core ECS, PG 10)
CASE 数据量 并发 TPS 平均响应时间
并行HASHAGG 10亿(PG 11) 64 11秒
VOPS + 异步并行 10亿，聚合查询（PG 10） 56 2秒
多表并行扫描 2亿(PG 11) 64 0.6 秒
(parallelappend)
求TOP-K 100亿(PG 11) 64 40秒
OLAP Benchmark(56 Core ECS, PG 10)
测试详情：
https://github.com/digoal/blog/blob/master/201711/readme.md
https://github.com/digoal/blog/blob/master/201801/20180102_04.md
https://github.com/digoal/blog/blob/master/201802/20180204_01.md
https://github.com/digoal/blog/blob/master/201802/20180204_03.md
https://github.com/digoal/blog/blob/master/201802/20180201_01.md
https://github.com/digoal/blog/blob/master/201802/20180202_02.md
https://github.com/digoal/blog/blob/master/201802/20180210_01.md
https://github.com/digoal/blog/blob/master/201808/20180823_01.md
HDB PG OLAP Benchmark(1 Host)
CASE 数据量 并发 TPS 平均响应时间
非分布键group by , TOP-K 10亿、列存、压缩、101个元素 1 1.8秒
非分布键count(distinct) 10亿、列存、压缩、101个元素 1 1.8秒
非分布键order by, TOP-K 10亿、行存、压缩、索引 1 50毫秒
非分布键JOIN，group by，TOP-K 10亿、列存、压缩、101个元素 1 56秒
非分布键JOIN，count(distinct) 10亿、列存、压缩、101个元素 1 53秒
非分布键JOIN，orderby, TOP-K 10亿、列存、压缩 1 141秒
分布键group by, TOP-K 10亿、列存、压缩、10亿元素 1 1.67秒
分布键orderby, TOP-K 10亿、行存、压缩、索引 1 42毫秒
分布键JOIN, order by , TOP-K 10亿、列存、压缩、10亿元素 1 119秒
HDB PG OLAP Benchmark(50 Hosts)
CASE 数据量 并发 TPS 平均响应时间
海量数据导入，走OSS（带统计干扰时） 100亿，5.5TB，单行576字节。  array[?,?,...]
– arr && array[?,?,...]
– not arr @> array[?,?,...]
• 搜索加速
– GIN倒排，(标签元素倒排索引)
– udf1(标签s) -> [1维数组] , udf2(标签s)->[2维数组]
案例
几万列、
• xx生物科技
超过单表
– 几万列浮点
列宽
– 几十万行
– 100GB左右
– 计算任意组合(物种、序列分段)的欧氏空间距离
– 采用float8[]存储几万列浮点，UDF，计算XX距离。
案例 架构设计、代码、实操手册
-
• 数组类型和操作符、函数、索引
– https://www.postgresql.org/docs/10/static/arrays.html
– https://www.postgresql.org/docs/10/static/functions-array.html
• 多重含义数组UDF检索
– https://github.com/digoal/blog/blob/master/201801/20180124
_02.md
• 生物科技
– https://github.com/digoal/blog/blob/master/201712/20171227
_01.md
搜索
Case2( - GIN)
• 搜索需求分类：
– 全文检索
– 模糊搜索、前缀、后缀、前后模糊
– 相似搜索
– 任意字段组合搜索
搜索
Case2( - GIN)
案例
• XXX域名服务
– 模糊查询、相似查询
– 10亿级记录模糊搜索
• XXX某CRM系统
– 任意字段全文检索、模糊查询
– 词汇(phase)查询
难以加速
– 10亿级记录多字段任意组合搜索
难以同步一致性
• 新零售-营销、分销链路
– 多值类型检索
– 10亿级记录数组&|搜索
• QA（医疗行业、搜索、知识库）
– 相似问题、相似地址、相似病例。。。
• GA
– 车牌模糊搜索
痛点
• 全文检索无法支持"模糊查询"
– （例如域名并非分词）
• 数据库与搜索引擎一致性维护麻烦
云产品方案、效果
• RDS PG
– gin 倒排索引，
• 支持多值类型、多字段任意条件检索
– bloom索引
• 支持多字段任意组合等值条件过滤
– 多索引 bitmap scan
• 多个索引合并扫描
– pg_trgm 支持
• 模糊查询、相似查询、正则查询
– zhparser中文分词插件支持中文分词
全文检索技术 支持精排、
微调
ranking
字符串 分词
存储 倒排
tree
token_type:dict(s) row1 token1:
mapping, To synomn
in dict tsvector rowID?,...
...
parser 自定义
dictionary +
to row2 token2
dictionary
token
tsvector rowID?,...
...
...
Convert
row3 token2
tsvector rowID?,...
lexemes