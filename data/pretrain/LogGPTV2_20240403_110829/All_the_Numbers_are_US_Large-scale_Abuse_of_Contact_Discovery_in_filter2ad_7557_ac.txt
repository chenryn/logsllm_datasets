### Large-Scale Enumeration Attacks with Different Setups

#### WhatsApp
Since WhatsApp is closed-source, we use the official Android application in an emulator and control the user interface using the Android UI Automator framework. Our process involves the following steps:
1. **Contact Insertion**: We insert 60,000 new phone numbers into the device's address book.
2. **Contact Discovery**: We start the client to initiate contact discovery.
3. **Data Extraction**: After synchronization, we automatically extract profile information about registered users by iterating through the contact list.
4. **Account Registration**: New accounts are manually registered using phone numbers obtained from the free Hushed [1] application.

Interestingly, if a number provided by Hushed was previously registered by another user, the WhatsApp account, including group memberships, is "inherited." A non-negligible percentage of the accounts we registered had been in active use, with personal and/or group messages arriving after account takeover. This presents a significant privacy risk for these users, comparable to or worse than issues associated with disposable email addresses [33]. We did not use such accounts for our crawling attempts.

#### Signal
The Android client of Signal is open-source, allowing us to extract the requests for registration and contact discovery and perform them efficiently using a Python script. Our approach includes:
1. **Manual Registration**: We manually register new clients.
2. **API Calls**: We use the authentication tokens created upon registration to make subsequent calls to the contact discovery API.
3. **Hashing**: Signal uses truncated SHA-1 hashes of the phone numbers in the contact discovery request. The response from the Signal server is either an error message if the rate limit has been reached, or the hashes of the phone numbers registered with Signal.

#### Telegram
Interactions with the Telegram service can be made through the official library TDLib [76], which is available for many systems and programming languages. To create a functioning client, each project using TDLib must be registered with Telegram to receive an authentication token, which can be done with minimal effort. Our process includes:
1. **Client Setup**: We use the C++ version of TDLib to perform registration and contact discovery.
2. **Additional Information**: We potentially download additional information about Telegram users.
3. **Phone Number Authentication**: The registration of phone numbers is done manually by requesting a phone call to authenticate the number.

### Ethical and Legal Considerations
We extensively query the contact discovery services of major mobile messengers, which we believe is the only way to reliably estimate the success of our attacks in the real world. Similar considerations have been made in previous works that evaluate attacks by crawling user data from production systems (e.g., [82]). We do not interfere with the smooth operation of the services or negatively affect other users. In coordination with the legal department of our institution, we design the data collection process as a pipeline creating only aggregate statistics to preserve user privacy and comply with all requirements under the European General Data Protection Regulation (GDPR) [56], especially the data minimization principle (Article 5c) and regulations of the collection of data for scientific use (Article 89). Privacy-sensitive information such as profile pictures is never stored, and all data processing is performed on a dedicated local machine.

### Rate Limits and Abuse Protection
Each messenger applies different types of protection mechanisms to prevent abuse of the contact discovery service.

**WhatsApp**:
- **Rate Limit Structure**: WhatsApp uses a leaky bucket structure. Our experiments in September 2019 show that accounts get banned when excessively using the contact discovery service.
- **Bucket Size and Leak Rate**: We estimate the bucket size to be close to 120,000 contacts, with a stable crawling rate of 60,000 new numbers per day. There seems to be no total limit of contacts per account; some of our test accounts were able to check over 2.8 million different numbers.

**Signal**:
- **Rate Limit Structure**: According to the source code [47], Signal servers use a leaky bucket structure with a bucket size of 50,000 contacts and a leak rate of approximately 200,000 new numbers per day.
- **No Bans**: Requests simply fail if the limits are exceeded and can be tried again later. There is no global limit for an account since the server does not store the contacts or hashes.
- **Legacy and New API**: While we use the legacy API, current Android clients also sync with the new API based on Intel SGX. Both APIs have the same rate limits, allowing an attacker to double the effective crawling rate.
- **Profile Picture Download**: Separate rate limits exist for downloading encrypted profile pictures, with a leaky bucket size of 4,000 and a leak rate of around 180 profiles per hour.

**Telegram**:
- **Contact Limit**: Telegram allows each account to add a maximum of 5,000 contacts, irrespective of the rate. Once this limit is exceeded, each account is limited to 100 new numbers per day.
- **Bans**: More requests result in a rate limit error, with multiple violations resulting in a ban from the contact discovery service.
- **Batch Size and Delay**: The batch size for contact requests is 100, and performing consecutive requests with a delay of less than ≈8.3 seconds results in an immediate ban from the service.
- **Privacy Issue Response**: In response to a privacy issue discovered in August 2019 [14], where group members with hidden phone numbers can be identified through enumeration attacks, Telegram stated that once phone numbers are banned from contact discovery, they can only sync 5 contacts per day. We were unable to reproduce this behavior. Following our responsible disclosure, Telegram detailed additional defenses not triggered by our experiments (cf. § VIII).

### Exposed User Data
All three messengers differ significantly regarding the amount of user data exposed.

**WhatsApp**:
- **Discoverability**: Users registered with WhatsApp can always be discovered by anyone through their phone number.
- **Customizable Settings**: The app has customizable settings for the profile picture, About text, and Last Seen information. The default for all these settings is Everybody, with options being My Contacts or Nobody.
- **Profile Picture Access**: In recent Android versions, it is no longer possible to save the profile picture of users through the UI, but it is possible to create screenshots through the Android Debug Bridge (ADB).
- **Status Text**: The status text can be read out through the UI Automator framework by accessing the text fields in the contact list view.

**Signal**:
- **Privacy Focus**: Signal exposes almost no information about users through the contact discovery service. The only information available is their ability to receive voice and video calls.
- **Encrypted Profile Pictures**: It is possible to retrieve the encrypted profile picture of registered users through a separate API call, if they have set any [84]. However, the user name and avatar can only be decrypted if the user has consented explicitly and has exchanged at least one message with the requester [45].

**Telegram**:
- **User Information**: Telegram exposes a variety of information through the contact discovery process, including first, last, and user names, a short bio, a hint when the user was last online, all profile pictures (up to 100), and the number of common groups.
- **Privacy Settings**: Some of this information can be restricted to contacts only by changing the default privacy settings of the account.
- **Importer Count**: Telegram discloses information about numbers not registered with the service through an integer labeled `importer_count`. According to the API documentation [75], it indicates how many registered users store a particular number in their address book and is 0 for registered numbers. This count represents the current state of a number and decrements when users remove the number from their contacts. It is a source of interesting metadata for surveillance and increases the efficiency of compiling comprehensive databases of likely active numbers for conducting sales or phishing calls.

### Evaluation Approach
We perform random lookups for mobile phone numbers in the US and collect statistics about the number of registered users and the information exposed by them. The number space consists of 505.7 million mobile phone numbers (cf. § II-B). We assume that almost all users sign up for these messengers with mobile numbers and exclude landline and VoIP numbers from our search space. The US numbering plan currently includes 301 3-digit area codes, split into 1,000 subranges of 10,000 numbers each. Only 50,573 of the 301,000 possible subranges are currently in use for mobile phone numbers. To reach our crawling targets, we select numbers evenly from all subranges. While the enumeration success rate could be increased by using telephone number lists or directories, this would come at the expense of lower coverage.

### Crawling Results
The messengers have different rate limits, amounts of available user information, and setup complexities, resulting in different crawling speeds and number space coverage, and affecting the type of statistics that can be generated.

**WhatsApp**:
- **Accounts and Duration**: For WhatsApp, we use 25 accounts over 34 days, each testing 60,000 numbers daily, allowing us to check 10% of all US mobile phone numbers.
- **Public Profile Pictures**: For a subset of discovered users, we check if they have public profile pictures by comparing their thumbnails to the default icon.
- **Success Rate**: Our data shows that 5 million out of 50.5 million checked numbers are registered with WhatsApp, resulting in an average success rate of 9.8% for enumerating random mobile phone numbers.
- **Non-Uniform Distribution**: The highest average for a single area code is 35.4% for 718 (New York) and 35% for 305 (Florida), with 209 subranges having a success rate higher than 50% (the maximum is 67% for a prefix in Florida).
- **Extrapolation**: Extrapolating this data, we estimate the total number of WhatsApp accounts registered to US mobile phone numbers to be around 49.6 million.

**Comparison Table**

| Messengers | Contact Discovery Method | Rate Limits | Our Crawling Method | # US Numbers Checked | Coverage of US Numbers | Success Rate for Random US Number | # US Users Found | # US Users (estimated) | Default Privacy Settings / Information Exposure | Profile Picture | Status | Last Online | Option to Hide Being Online | Option to Disable Contact Discovery |
|------------|--------------------------|-------------|---------------------|----------------------|------------------------|----------------------------------|-----------------|-----------------------|------------------------------------------------|-----------------|--------|-------------|------------------------------|-----------------------------------|
| WhatsApp   | Clear                    | 60k / d     | UI Automator        | 46.2 M               | 10%                    | 9.8%                             | 5.0 M           | 49.6 M                | Public                                         | Public          | Public | Public      | No                           | No                                |
| Signal     | Hashing                  | 120k / d    | (Legacy) API        | 505.7 M              | 100%                   | 0.5%                             | 2.5 M           | 2.5 M                 | Explicit Share                                 | -               | -      | -           | Yes                          | Yes                               |
| Telegram   | Clear                    | 5k + (100 / d) | API                | 0.1 M                | <0.02%                 | 0.9%                             | 908             | 4.6 M                 | Public                                         | Public          | Public | Public      | Yes                          | No                                |

**Cross-Messenger Statistics for US Users**

| Users of | WhatsApp | Signal | Telegram |
|----------|----------|--------|----------|
| WhatsApp | -        | 42.3%  | 46.5%    |
| Signal   | 2.2%     | -      | 5.3%     |
| Telegram | 5.1%     | 8.6%   | -        |

Our data shows that 5 million out of 50.5 million checked numbers are registered with WhatsApp, resulting in an average success rate of 9.8% for enumerating random mobile phone numbers. The highest average for a single area code is 35.4% for 718 (New York) and 35% for 305 (Florida), while there are 209 subranges with a success rate higher than 50% (the maximum is 67% for a prefix in Florida). The non-uniform user distribution across the phone number space can be exploited to increase the initial success rate when enumerating entire countries, as shown in Fig. 2 for the US: with 20% effort, it is possible to discover more than 50% of the registered users. Extrapolating this data allows us to estimate the total number of WhatsApp accounts registered to US mobile phone numbers to be around 49.6 million. While there are no official numbers, our findings provide a robust estimate of the user base.