large-scale enumeration attacks with different setups.
WhatsApp. Because WhatsApp is closed source, we run
the ofﬁcial Android application in an emulator, and use
the Android UI Automator framework to control the user
interface. First, we insert 60,000 new phone numbers into the
address book of the device, then start the client to initiate the
contact discovery. After synchronization, we can automatically
extract proﬁle information about the registered users by stepping
through the contact list. New accounts are registered manually
following the standard sign-up procedure with phone numbers
obtained from the free Hushed [1] application.
Interestingly,
if the number provided by Hushed was
previously registered by another user, the WhatsApp account
is “inherited”, including group memberships. A non-negligible
percentage of the accounts we registered had been in active
use, with personal and/or group messages arriving after account
takeover. This in itself presents a signiﬁcant privacy risk for
these users, comparable to (and possibly worse than) privacy
issues associated with disposable email addresses [33]. We did
not use such accounts for our crawling attempts.
Signal. The Android client of Signal is open-source, which
allows us to extract the requests for registration and contact
discovery, and perform them efﬁciently through a Python script.
We register new clients manually and use the authentication
tokens created upon registration to perform subsequent calls to
the contact discovery API. Signal uses truncated SHA-1 hashes
of the phone numbers in the contact discovery request9. The
response from the Signal server is either an error message if
the rate limit has been reached, or the hashes of the phone
numbers registered with Signal.
Telegram. Interactions with the Telegram service can be
made through the ofﬁcial library TDLib [76], which is available
for many systems and programming languages. In order to
create a functioning client, each project using TDLib has to
be registered with Telegram to receive an authentication token,
which can be done with minimal effort. We use the C++ version
to perform registration and contact discovery, and to potentially
download additional information about Telegram users. The
registration of phone numbers is done manually by requesting
a phone call to authenticate the number.
D. Ethical and Legal Considerations
We excessively query the contact discovery services of
major mobile messengers, which we think is the only way
to reliably estimate the success of our attacks in the real
world. Similar considerations were made in previous works
that evaluate attacks by crawling user data from production
systems (e.g., [82]). We do not interfere with the smooth
operation of the services or negatively affect other users.
In coordination with the legal department of our institution,
we design the data collection process as a pipeline creating only
aggregate statistics to preserve user privacy and to comply with
all requirements under the European General Data Protection
Regulation (GDPR) [56], especially the data minimization
principle (Article 5c) and regulations of the collection of data
for scientiﬁc use (Article 89). Privacy sensitive information
such as proﬁle pictures are never stored, and all data processing
is performed on a dedicated local machine.
E. Rate Limits and Abuse Protection
Each messenger applies different types of protection mech-
anisms to prevent abuse of the contact discovery service10.
WhatsApp. WhatsApp does not disclose how it protects
against data scraping. Our experiments in September 2019
show that accounts get banned when excessively using the
contact discovery service. We observe that the rate limits have
a leaky bucket structure, where new requests ﬁll a virtual
bucket of a certain size, which slowly empties over time
according to a speciﬁed leak rate. Once a request exceeds
the currently remaining bucket size, the rate limit is reached,
and the request will be denied. We estimate the bucket size to
be close to 120,000 contacts, while our crawling was stable
when checking 60,000 new numbers per day. There seems to be
no total limit of contacts per account: some of our test accounts
were able to check over 2.8 million different numbers.
Signal. According to the source code [47], the Signal
servers use a leaky bucket structure. However, the parameters
are not publicly available. Our measurements show that
the bucket size is 50,000 contacts, while the leak rate is
approximately 200,000 new numbers per day. There are no
bans for clients that exceed these limits: The requests simply
fail, and can be tried again later. There is no global limit for
an account, as the server does not store the contacts or hashes,
and thus cannot determine how many different numbers each
account has already checked.
While we only use Signal’s hashing-based legacy API,
current Android clients also sync with the new API based
on Intel SGX and compare the results. We found that the
9We use the legacy API; the new Intel SGX service does not use hashes.
10There might be additional protections not triggered by our experiments.
6
new API has the same rate limits as the legacy API, allowing
an attacker to use both with different inputs, and thus double
the effective crawling rate.
Signal clients use an additional API to download encrypted
proﬁle pictures of discovered contacts. Separate rate limits exist
to protect this data, with a leaky bucket size of 4,000 and a
leak rate of around 180 proﬁles per hour.
Telegram. The mechanism used by Telegram to limit the
contact discovery process differs from WhatsApp and Signal.
Telegram allows each account to add a maximum of 5,000 con-
tacts, irrespective of the rate. Once this limit is exceeded, each
account is limited to 100 new numbers per day. More requests
result in a rate limit error, with multiple violations resulting in
the ban of the phone number from the contact discovery service.
The batch size for contact requests is 100 and performing
consecutive requests with a delay of less than ≈8.3 s results in
an immediate ban from the service.
In a response to the privacy issue discovered in Au-
gust 2019 [14], where group members with hidden phone
numbers can be identiﬁed through enumeration attacks, Tele-
gram stated that once phone numbers are banned from contact
discovery, they can only sync 5 contacts per day. We were
not able to reproduce this behavior. Following our responsible
disclosure, Telegram detailed additional defenses not triggered
by our experiments (cf. § VIII).
F. Exposed User Data
All three messengers differ signiﬁcantly regarding the
amount of user data that is exposed.
WhatsApp. Users registered with WhatsApp can always
be discovered by anyone through their phone number, yet the
app has customizable settings for the proﬁle picture, About text,
and Last Seen information. The default for all these settings
is Everybody, with the other options being My Contacts
or Nobody. In recent Android versions it is no longer possible to
save the proﬁle picture of users through the UI, but it is possible
to create screenshots through the Android Debug Bridge (ADB).
The status text can be read out through the UI Automator
framework by accessing the text ﬁelds in the contact list view.
Signal. The Signal messenger is primarily focused on user
privacy, and thus exposes almost no information about users
through the contact discovery service. The only information
available about registered users is their ability to receive voice
and video calls. It is also possible to retrieve the encrypted
proﬁle picture of registered users through a separate API call,
if they have set any [84]. However, user name and avatar can
only be decrypted if the user has consented to this explicitly
for the user requesting the information and has exchanged at
least one message with them [45].
Telegram. Telegram exposes a variety of information about
users through the contact discovery process. It is possible
to access ﬁrst,
last, and user name, a short bio (similar
to WhatsApp’s About), a hint when the user was last online,
all proﬁle pictures of the user (up to 100), and the number of
common groups. Some of this information can be restricted to
contacts only by changing the default privacy settings of the
account. There is also additional management information (such
as the Telegram ID), which we do not detail here.
Surprisingly, Telegram also discloses information about
numbers not registered with the service through an integer
7
Optimized Crawling
Random Crawling
Success Rate
s
r
e
s
u
d
n
u
o
f
f
o
%
100
50
0
20
0
% of checked registrable US mobile phone numbers
40
60
80
100
Figure 2: Optimized crawling compared to random crawling
based on the non-uniform distribution of registered WhatsApp
users across the US mobile phone number space.
labeled importer_count. According to the API documen-
tation [75], it indicates how many registered users store a
particular number in their address book, and is 0 for registered
numbers11. Importantly, it represents the current state of a
number, and thus decrements once users remove the number
from their contacts. As such, the importer_count is
a source of interesting meta data when keeping a speciﬁc
target under surveillance. Also, when crawlers attempt to
compile comprehensive databases of likely active numbers for
conducting sales or phishing calls (as motivated in § I), having
access to the importer_count increases the efﬁciency. And
ﬁnally, numbers with non-zero values are good candidates to
check on other messengers.
G. Our Evaluation Approach
We perform random lookups for mobile phone numbers
in the US and collect statistics about the number of reg-
istered users, as well as the information exposed by them.
The number space consists of 505.7 million mobile phone
numbers (cf. § II-B). We assume that almost all users sign up
for these messengers with mobile numbers, and thus exclude
landline and VoIP numbers from our search space. The US
numbering plan currently includes 301 3-digit area codes, which
are split into 1,000 subranges of 10,000 numbers each. These
subranges are handed out individually to phone companies, and
only 50,573 of the 301,000 possible subranges are currently
in use for mobile phone numbers. To reach our crawling
targets, we select numbers evenly from all subranges. While the
enumeration success rate could be increased by using telephone
number lists or directories as used for telephone surveys [44],
this would come at the expense of lower coverage.
H. Our Crawling Results
The messengers have different rate limits, amount of
available user information, and setup complexity. This results
in different crawling speeds and number space coverage, and
affects the type of statistics that can be generated.
WhatsApp. For WhatsApp we use 25 accounts12 over 34
days, each testing 60,000 numbers daily, which allows us to
check 10 % of all US mobile phone numbers. For a subset
of discovered users, we also check if they have public proﬁle
pictures by comparing their thumbnails to the default icon.
11Telegram clients use this count to suggest contacts who would beneﬁt the
most from registering.
12Less than 100 for Signal due to the overhead of running Android emulators.
47.4%
1.9%
Washington D.C.
3.8%
0.1%
(a) WhatsApp;
ing 10 % of all possible US mobile phone numbers.
the popularity is estimated based on enumerat-
(b) Signal; Washington D.C. numbers are more than twice as likely
to be registered with Signal than for any other area in the US.
Figure 3: Number of registered WhatsApp and Signal accounts of US states and Washington D.C. in relation to their population.
Messengers
Contact Discovery Method
Rate Limits
Our Crawling Method
# US Numbers Checked
Coverage of US Numbers
Success Rate for Random US Number
# US Users Found
# US Users (estimated)
Default Privacy Settings /
Information Exposure
Proﬁle Picture
Status
Last Online
Option to Hide Being Online
Option to Disable Contact Discovery
WhatsApp
Signal
Telegram
Clear
60k / d
UI Automator
Hashing
120k / d
(Legacy) API
5k + (100 / d)
Clear
API
46.2 M
10 %
9.8 %
5.0 M
49.6 M
Public
Public
Public


505.7 M
100 %
0.5 %
2.5 M
2.5 M
Explicit Share
–
–


0.1 M
<0.02 %
0.9 %
908
4.6 M
Public
Public
Public


Table III: Comparison of surveyed messengers.
Users of
WhatsApp
Signal
Telegram
also use
WhatsApp
Signal
Telegram
–
42.3 %
46.5 %
2.2 %
–
5.3 %
5.1 %
8.6 %
–
Table IV: Cross-messenger statistics for US users.
Our data shows that 5 million out of 50.5 million checked
numbers are registered with WhatsApp, resulting in an average
success rate of 9.8 % for enumerating random mobile phone
numbers. The highest average for a single area code is 35.4 %
for 718 (New York) and 35 % for 305 (Florida), while there
are 209 subranges with a success rate higher than 50 % (the
maximum is 67 % for a preﬁx in Florida). The non-uniform user
distribution across the phone number space can be exploited
to increase the initial success rate when enumerating entire
countries, as shown in Fig. 2 for the US: with 20 % effort it is
possible to discover more than 50 % of the registered users.
Extrapolating this data allows us to estimate the total number
of WhatsApp accounts registered to US mobile phone numbers
to be around 49.6 million. While there are no ofﬁcial numbers