Hi, I was wondering if there is any planned support for "reflecting a vector"
in Three.js's vector2.js or vector3.js files? An example would be knowing both
an incoming vector and a normal to a plane or surface, then calculating the
outgoing vector after the vector intersects that plane.
Here is an older GameDev page devoted to the mathematical implementation:
http://www.gamedev.net/topic/360411-reflection-off-a-line/
Should be easy to add to your vector.js library (maybe 2 or 3 lines of code
max).
Concrete example: Incoming ball strikes a non-axis-aligned wall, and we need
to know the outgoing ball direction. Maybe the final code that the Three.js
user could type would be something like: vector.Reflect(plane Normal).
Would be a simple but very helpful function, especially if you are not wanting
to add a hefty physics collision response engine to your project, and are just
looking for a simple but effective solution that looks correct.
Thanks!