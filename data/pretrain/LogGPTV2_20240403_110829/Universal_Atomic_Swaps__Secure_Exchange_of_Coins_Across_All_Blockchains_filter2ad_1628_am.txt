### 优化后的文本

在区块链 B 上，当 P1 开始计算 ΠVTS.ForceOp 时，对于 i ∈ [n]：

1. **生成交换锁**：
   - 首先，P0 和 P1 执行以下步骤来生成交换锁：
     - P1 生成 tx (1)swpd,i, sk (1)swp,i := txpk (1)swpd,i pk (01)i 对于 i ∈ [n] 并将其发送给 P0。
2. **n-to-˜n 交换锁生成**：
   - 对于每个 k ∈ ˜n，双方运行一个 n-to-1 交换的锁生成实例。第 k 个实例如下：
     - **交换锁阶段 - n-to-˜n 交换**：
       - Party P0 生成 pk (0)swpd,k, sk (0)swpd,k, v(0)k
       - Party P0 继续生成 tx (0)swpd,k, v(1)k
       - 双方运行 2PC 协议 Γ3 来计算 (cid:96)kk ← mLock，该协议执行以下步骤：
         - 以公共输入 swpd,k, pk (0)swpd,k, pk (1)swpd,k, c(01)k, c(10)k, {c(01)j, c(10)j}j∈[n] 从 P0 接收，并以私有输入 sk (01)1,j, d(01)1,j, sk (10)1,k, d(10)1,k 从 P1 接收。
         - 对所有 j ∈ [n]，检查是否 sk (01)0,j ⊕ d(01)0,j = ΠC.Open(sk (01)1,j, c(01)j) 并中止否则。
         - 检查是否 sk (10)0,k ⊕ d(10)0,k = ΠC.Open(sk (10)1,k, c(10)k) 并中止否则。
         - 对于 j ∈ [n]，计算 σ(1)swp,j ← ΠDS.Sign(sk (01)0,j ⊕ sk (01)1,j, tx (1)swp,j)
         - 计算 σ(0)swp,k ← ΠDS.Sign(sk (10)0,k ⊕ sk (10)1,k, tx (0)swp,k)
         - 计算 (cid:96)kk ← mLock
         - 2PC 协议 Γ3 首先将 (cid:96)kk 输出给 P1。
         - 如果上述步骤成功，Γ3 将 σ(0)swp,k 输出给 P0。
3. **最终结果**：
   - 最终，P0 获得 σ(0)swp,1, . . . , σ(0)swp,˜n 并将其发送给 P1。
   - P1 获得 ((cid:96)k1, . . . , (cid:96)k˜n)。

### 混合执行过程

#### 混合 H5
与 H4 相同，但所有在冻结币阶段收到的共享打开信息都被替换为随机字符串。具体来说，d(01)A,i 对于所有 i ∈ [n] 和 d(10)A,j 对于所有 j ∈ [˜n] 被替换为随机字符串。

#### 混合 H6
与 H5 相同，但所有由冻结币阶段生成的承诺 c(01) 替换为对 0λ 的承诺。

#### 混合 H7
与 H6 相同，但现在对于所有 k ∈ [˜n]，锁 (cid:96)kk 在模拟中被硬编码，通过首先在模拟中硬编码签名 σ(1)swp,j 对于 j ∈ [˜n]。这里 σ(1)swp,i 是在密钥 pk (01)swp,j 下的签名，σ(0)swp,k 是在密钥 pk (10)swp,k 下的签名。

#### 混合 H8
与 H7 相同，但如果在某个 q8 会话中，对手输出 σ∗ 使得 ΠDS.Vf(pk (01)swp,k, tx (0)swp,k, σ∗) = 1 对于某些 k ∈ [˜n]，并且 S ← mRel(swkd, σ∗) 对于所有 i ∈ [n] 和 c(10)swp,j 是对 tx (0)swp,j 的签名，模拟中止并输出特殊符号 abort1。这种情况发生在对手输出有效签名使得诚实用户 P1 通过 tx (0)swp,k 向对手付款，但无法通过计算所有交易的有效签名完成交换时。

#### 混合 H9
与 H8 相同，但如果在某个 q9 会话中，在诚实的 P0 发起交换之前，对手 A 输出一个签名 σ∗ 使得对于某些 i ∈ [n]，ΠDS.Vf(pk (01)swp,i, tx (1)swp,i, σ∗) = 1，模拟中止并输出特殊符号 abort2。这种情况发生在对手能够在 P0 发起交换过程之前正确释放锁时。

#### 混合 H10
与 H9 相同，但如果在某个会话 q10 中，敌对方（例如 P0）在时间 T0 之前发布 tx (0)rfnd,i, σ(0)rfnd,i 到链上，模拟器中止并输出 abort3。类似地，如果 P1 是腐败方并在时间 T1 之前发布 tx (1)rfnd,k, σ(1)rfnd,k 到链上。

#### 混合 H11
与 H10 相同，但如果 P0 是腐败方且在某个会话 q11 中，模拟器获得 σ(1)rfnd,i ← ΠVTS.ForceOpC (1)rfnd,i 并在链上发布，且 ΠDS.Vf(pk (10)swp,i, tx (1)rfnd,i, σ(1)rfnd,i) = 0，模拟器中止并输出 abort4。类似地，如果 P1 是腐败方。

### 模拟器 S
模拟器 S 的执行定义为与理想功能 Fswap 交互，并从 Fswap 接收消息 (swap1, id, V, ˜V, PK, ˜PK, ˜SK, U1) 和 (swap2, id, V, ˜V, PK, ˜PK, SK, U0)。它按照 H9 的执行方式模拟对手的视图。如果模拟的视图偏离了理想功能的执行，我们注意到模拟必须已经中止（如上述混合中的中止情况所讨论）。

### 不可区分性论证
- **H0 ≈c H1 和 H1 ≈c H2 和 H2 ≈c H3**：不可区分性来自冻结币阶段和交换锁阶段中 2PC 协议的安全性。2PC 密钥派生协议的安全性保证了 S2pc,1 的存在，2PC 签名生成协议的安全性保证了 S2pc,2 的存在，2PC 锁生成算法的安全性保证了 S2pc,3 的存在。
- **H3 ≡ H4**：注意，给定承诺方案 ΠC 是安全的。

希望这些改进使文本更加清晰、连贯和专业。