Bonfire task:  
Drop the elements of an array (first argument), starting from the front, until
the predicate (second argument) returns true.
* * *
It's possible to solve this bonfire without completing all of the objectives.  
One of the objectives is that you should continue **until** the second
argument is true. But even if you never stop, you can still pass the bonfire.
Look at the code example below:
    function drop(arr, func) {
      return arr.filter(func);
    }
    drop([1, 2, 3, 1], function (n) {return n < 2; });
This will continue filtering, giving you the wrong answer. But since no test
case checks if the code actually continues past the first _false_ value, it
will pass.
* * *
If I was unclear, then feel free to ask what I meant. :)