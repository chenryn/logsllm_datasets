C’s tree topology above node a. Our algorithm seeks to
identify shared branching points. Two tree topologies can
then be merged accordingly. Note that in this ﬁgure, the
internal nodes have been labelled only to facilitate in the
problem description here and that meaningful labels do not
result from any end-to-end single-source topology identiﬁca-
tion algorithm.
Our inference technique assumes: (1) Interior switches or
routers cannot be relied upon to respond to queries. If por-
tions of the network (for example the IP routers) do respond,
then it is straightforward to incorporate the information in
(2) The topology perceived from
the discovery procedure.
each source is a tree. This requires that any load balancing
or routing changes over the measurement period do not af-
fect the logical multiple-source topology. In order to make
this assumption more reasonable, we seek to limit probing
and keep the measurement period as short as possible. (3)
The routers and switches in the topology obey a ﬁrst-in ﬁrst-
out policy for packets of the same class. This is necessary
to ensure that probe packets do not frequently experience
reordering when traversing the same route.
2.1 Organization
In Section 3 of the paper, we describe the measurement
methodology, commencing with a description and idealized
analysis of a simpliﬁed two-receiver scenario. The section
proceeds to conduct a more detailed analysis with more re-
alistic assumptions, and extends the framework to multiple
receiver networks. Potential extensions to the methodology
are also described. Section 4 presents results from an ex-
periment conducted on a LAN and an experiment over the
Internet, two scenarios that present very diﬀerent types of
challenges. Section 5 discusses some limitations of the pro-
cedure and includes concluding remarks.
3. METHODOLOGY AND MEASUREMENT
FRAMEWORK
3.1 A Simpliﬁed Description and Analysis
In this ﬁrst description of the framework, we will perform
analysis assuming no cross-traﬃc and clock synchronization
between the sources, in order to motivate the technique and
highlight the intuition behind it. In Section 3.3, we will relax
these assumptions and conduct a more careful analysis with
cross-traﬃc eﬀects included.
We begin by exploring the simple case of a two-sender,
two-receiver network. In such a network, under the assump-
tions outlined above, there are four possible entry scenarios,
as depicted in Figure 3. Our measurement framework in this
simple case proceeds as follows (in trees with more receivers,
the framework is a straightforward extension). To make
the n-th measurement, we send two packets from source A,
spaced some small time diﬀerence ∆t apart, with the ﬁrst
packet being sent at time tn. The ﬁrst packet, which we
label pA,1, is destined for receiver 1; the second, pA,2, for
receiver 2. We also send two packets from source C, again
spaced by ∆t. The ﬁrst packet of this pair is sent at time
tn + vn, where vn is an oﬀset time. The ﬁrst packet, pC,1, is
sent to receiver 1 and the second, pC,2, to receiver 2.
Figure 4(a) depicts this setup for the scenario in which
the branching point is common to both sources (we will call
this the shared scenario). Denote the ﬁxed portion of the
delay (transmission and propagation) of packet pA,1 from
source A to the joining point dA,1, and that of packet pC,1
from source C by dC,1. Denote the corresponding quantities
A
1
A
C
a
a
C
a
a
C
a
a
A
a
2
1
2
(a)
(b)
A
C
a
a
a
a
1
2
1
2
(c)
(d)
Figure 3: The four possible entry cases for a two-
sender, two-receiver network. The black circles in-
dicate entry points. Although depicted as lying in
the middle of links in the C-topology, these entry
points can coincide with the children nodes. For ex-
ample, in (a), the entry point can be the a node,
but it must lie below the C node. The dashed lines
are used to indicate entry paths only, so the topol-
ogy of the source A tree is not depicted except in
(a). Case (a) has a common branching point for the
two sources; in cases (b), (c) and (d), the branching
points diﬀer.
for the second packets sent by each source by dA,2 and dC,2,
respectively. Since the joining point is the same in the shared
scenario, dA,1 = dA,2 = dA and dC,1 = dC,2 = dC. The
arrival time of packet pA,1 at the joining point is tn + dA,1,
whereas that of packet pC,1 is tn + vn + dC,1. The arrival
times of packets pA,2 and pC,2 are tn+∆t+dA,2 and tn +vn +
∆t + dC,2. If we now examine the arrival order of packets
at the two receivers, we see that pA,1 arrives before pC,1 if
vn > (dA,1 − dC,1). Similarly packet pA,2 arrives before pC,2
if vn > (dA,2 − dC,2).
We say that a measurement records a reverse-ordering
event if the order of packet arrivals (comparing the packet
from A to the packet from C) is not the same at the two
receivers.
In the shared branching point scenario, since
dA,1 = dA,2 and dC,1 = dC,2, the order of arrivals at the
two receivers will be exactly the same, irrespective of the
oﬀset vn. There will be no occurrences of reverse-ordering
events.
Now consider one of the unshared scenarios in which the
branching is not common (case (b) in Figure 3).
In this
case, the joining points diﬀer, so the ﬁxed delays are (almost
always) not equal, i.e., dA,1 (cid:1)= dA,2 and dC,1 (cid:1)= dC,2 (see
Figure 4(b)). If the probes are sent at the same times as
tn + vn +     t
tn + vn
dC = dC,1 = dC,2
tn  +    t
tn
A
dA,1 = dA,2 = dA
C
a
a
A
dA,2
dC,2
C
a
a
dC,1
dA,1
a
1
2
1
2
(a)
(b)
Figure 4: The measurement process. (a) Measure-
ment for a topology in which the branching point
is common. The packets next to each source are
labelled with send times. The dA and dC labels cor-
respond to the ﬁxed delay component (transmission
and propagation) of the indicated paths. (b) In this
case the branching points are not common, the join-
ing points diﬀer, so the ﬁxed delay components dA,1
and dA,2 are unlikely to be equal.
above, then packet pA,1 arrives at its joining point at tn +
dA,1, and packet pC,1 arrives at time tn + vn + dC,1. Packet
pA,2 arrives at its joining point at time tn + ∆t + dA,2 and
packet pC,2 at time tn +vn +∆t+dC,2. Let d1 = (dA,1−dC,1)
and d2 = (dA,2 − dC,2). If we compare the arrival orderings
at the two receivers, we see that the orderings diﬀer when
d1  p/(min(BA, BC )), where p is the
probe size, and BA and BC are the bottleneck bandwidths
of the paths from the respective sources to the joining point.
As an example, for p = 40 bytes and BA = 1Mbps, we have
∆t > 320 microseconds. In practice, we set ∆t substantially
larger than this to avoid as much as possible the bunching
eﬀects of cross-traﬃc.
The procedure just described enables us to distinguish
between entry scenario (a) and entry scenarios (b)-(d) (re-
ferring to Figure 3). However, we cannot determine from
these measurements exactly which of (b)-(d) is in eﬀect. In
Section 3.5, we will see that when there are more receivers
in the network, it is often possible to combine the results of
pairwise tests to resolve the uncertainty. We establish con-
ditions for identiﬁability (localization to a single link) of the
entry points.
3.2 Timing issues
The two main timing tasks involve performing an approx-
imate synchronization of the sources at the beginning of the
experiment and in keeping them on track during the exper-
iment. Timing is not an issue at the receivers, because they
simply record packet orderings.
Unless some form of synchronization is performed, the
sending times of the sources will be oﬀset from one another
as a result of clock diﬀerences [17]. There will be a con-
stant oﬀset c1 (in addition to the random oﬀset v1) between
the sending times of the very ﬁrst probes due to the oﬀsets
between the clocks of the two sources.
In turn, the eﬀec-
tive range of the total random oﬀset distribution becomes
−D + c1, . . . , D + c1 rather than −D, . . . , D. If we choose
D such that this range still encompasses the much smaller
oﬀset region where reverse-ordering events potentially oc-
cur then the results of the experiment are unaﬀected by the
constant oﬀset.
If the send times are calculated naively from system clocks,
then network timing protocols can induce large, unexpected
shifts in relative oﬀsets when recalibration occurs. Clock
skew also arises from the physical machines having diﬀer-
ent internal system clock rates. The technique described
in [17] can eliminate these problems, but as yet our proce-
dure does not incorporate it. Over an experiment lasting
a few minutes, clock drift can mean that the n-th probes
are (approximately) separated by vn + c1 + c2n, and for the
ﬁnal (N -th) probe, c2N is of the order of several hundred
microseconds. The drift means that the true oﬀset distri-
bution is not completely uniform, but for sizeable D, it is a
suﬃcient approximation. In fact, the use of a uniform distri-
bution is not critical to the analysis; a distribution suﬃces if
it satisﬁes the property that the ratio of the density at any
two points in the range is suﬃciently close to one.
Aside from the initial constant oﬀset c1, and the drift oﬀ-
set c2, substantial additional oﬀsets can be incurred if the
operating system swaps out the source process during an
experiment. We overcome this by assigning each probe a
sequence number based on the diﬀerence between the time
when the experiment began and when the probe is being
sent. We ﬁnd that the amount of time necessary to per-
form some system tasks is not necessarily deterministic, but
always within a small range (on the order of microseconds).
g2
(cid:0)(cid:0)(cid:0)
v - d2 (cid:0)(cid:0)(cid:0)
p(g1 , g2)
g2
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
v - d1
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
v - d1
v
p(g1 , g2)
g1
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
(cid:0)(cid:0)(cid:0)
v - d1
v
g1
(a)
(b)
Figure 5: Cross-traﬃc and timing eﬀects on ordering observations. (a) An example of how the likelihood
of an ordering oﬀset is determined for the shared scenario according to (1). The contours depict the joint
probability distribution p(g1, g2), which are the delay diﬀerences due to cross-traﬃc and timing error. For
an oﬀset v, the probability of a reverse-ordering event r(v) is determined by the fraction of the distribution
lying in the hashed regions. As v varies, the meeting point of the two subregions of integration traverses the
dashed line, which passes through the origin and has slope 1. (b) The determination of the probability of a
reverse-ordering event in the unshared case according to (3). In this case, as v varies, the meeting point of
the subregions of integration traverses a line of slope 1 oﬀset from the origin by d2 − d1.
While discrepancies between send-times of the ﬁrst pack-
ets in corresponding pairs are evaded by choosing parameter
D to be suﬃciently large, it is important that the ∆t values
at the two sources are approximately the same. However,
since ∆t is only of the order of a few milliseconds, clock skew
induces a maximum discrepancy of a few microseconds.
In the analysis that follows, we absorb all errors incurred
by all timing discrepancies in noise terms that also include
cross-traﬃc delays. An additional factor to consider in a
more thorough analysis is the potential for reordering of
successive probes traversing the same path can, arising, for
example, as a result of multiple parallel physical connec-
tions between routers. We assume that these events are
rare, because they can only occur when the packets are very
closely spaced, a situation that is common in our measure-
ment framework for only a very small range of oﬀsets. Such
reordering has the eﬀect of very slightly increasing the prob-
ability of a reverse-ordering event.
3.3 A More Detailed Analysis
We now revisit the analysis of the arrival times for the
shared scenario of the two-receiver network, incorporating
cross-traﬃc eﬀects. The arrival times at the joining point(s)
are:
pA,1(n)
pC,1(n)
pA,2(n)
pC,2(n)
:
:
:
:
tA,1(n) = tn + dA,1 + gA,1(n)
tC,1(n) = tn + vn + dC,1 + gC,1(n)
tA,2(n) = tn + ∆t + dA,2 + gA,2(n)
tC,2(n) = tn + ∆t + vn + dC,2 + gC,2(n)
Here gA,1(n) and gC,1(n) represent the combination of tim-
ing errors and cross-traﬃc delays experienced by the ﬁrst
packets sent from each source, and gA,2(n) and gC,2(n) are
the corresponding quantities for the second packets. These
terms include only the delays incurred on the path(s) to the
joining point(s).
Let us ﬁrst consider the shared scenario. If packet pA,1(n)
arrives before pC,1(n) then dA,1 + gA,1(n)  d1 + g1(n). In order for a
reverse-ordering event to occur, packet pA,2(n) must arrive
after pC,2(n). With d2 = dA,2 − dC,2 as before, and g2(n) =
gA,2(n)− gC,2(n), a reverse-ordering event occurs only when
vn < d1 + g2(n), since d1 = d2 in the shared scenario. By
reversing the inequalities, we obtain the expressions for the
requirements for a reverse-ordering event when packet pC,1
arrives ﬁrst. If we consider a ﬁxed oﬀset v, the probability
that a reverse-ordering event occurs is:
Z
v−d1
Z ∞
−∞
Z ∞
Z
v−d1
v−d1
r(v) =
p(g1, g2) dg1 dg2 +
v−d1
−∞
p(g1, g2) dg1 dg2.
(1)
The nature of this integration is depicted in Figure 5(a). At
each oﬀset point v, there is a region where an (g1, g2) com-
bination causes an reverse-ordering event. The total proba-
bility of a reverse-ordering event is then:
Z
f =
1
2D
D
−D
r(v)dv.