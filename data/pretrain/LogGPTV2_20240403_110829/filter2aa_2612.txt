▪
• Relatively Easy to Exploit
• Easily Automated  
• Usually not monitored
▪
▪
▪
▪ Kerberos
▪ Kerberos Delegation
▪
▪ Focus on High Privileges
▪ Malicious JIT administration
▪
▪
▪
• Ticket based authentication protocol
Domain User
AS
TGS
KDC
TGT
TGS
LSASS (KERBEROS)
AES256
AES128
RC4
DES
ST
TGT
TGT
App Server
ST
▪
• Why?
• An application reusing user credentials
• Web server accessing a SQL DB
• How?
• Request tickets on behalf of the user
User1
Web Server
SQL Server
DC
User1 
Authentication
User1
Ticket
Delegated
▪
▪
• Delegation to any service
▪
• Kerberos Only (S4U2Proxy)
• Protocol Transition (S4U2Self +
S4U2Proxy)
Domain Account
or 
Local System Access
NO ACCESS
PIVOTING
PRIVILEGED
FULL CONTROL
ACLs
Brute Force
GPOs
Kerberoasting
CONSTRAINED DELEGATION
GPO TAMPERING
BUSTED!
Pass-The-Hash
Pass-The-Ticket
BloodHound
GoFetch
Domain Admin
Enterprise Admin
▪
• Dump NTDS.dit (VSS, DRSUAPI)
• Golden ticket
• Skeleton key
▪
• Replication requests from a non-DC machine
• Detect crafted tickets 
• Encryption downgrade 
▪
• Accounts holding permanent high privileges serve as valuable 
targets for attackers
• JIT Administration
• High privileges are required to perform an operation
• Get the required privileges for a limited amount of time
• When the time period expires, the high privileges are revoked
• Reduces the attack surface
▪
• Get administrative access for a limited time
• Perform malicious operations
• Leave no traces behind to avoid detection
▪
• Delegation scenario
• AdminSDHolder scenario 1
• AdminSDHolder scenario 2
▪
• Object Ownership
• Discretionary Access Control List (DACL)
• Access control entries (ACE)
DACL
User SID
Security Group SIDs
User Rights
Access Token
Deny ACEs
Allow ACEs
Inherited Deny ACEs
Inherited Allow ACEs
LSA Matches SIDs from
The access Token with
SIDs in the ACEs
▪
• Add a new machine account
• Set machine owner to a malicious account
• Owner can edit the ACL of the object
▪
• GPO Tampering: “Enable accounts to be trusted for 
delegation”
▪
• DACL Modification:
• Add ‘GenericAll’ ACE for malicious_user on new machine
▪
• Allow delegation to krbtgt
• Request ‘Administrator’ TGT
• Remove footprints:
• Remove delegation
• Revert ACL
• Perform malicious operations 
▪
• Persistence can be obtained by ACL modification of 
privileged groups – such as ‘Domain Admins’
• Problem: AdminSDHolder!
▪
• SDProp overrides the ACLs of protected groups & users with 
the AdminSDHolder ACL
• Runs periodically (default: 1 hour)
• Result: malicious_user loses his permission
• Protected accounts:
• Enterprise Admins
• Domain Admins
• Administrators
• …
▪
• The following groups can be excluded from the AdminSDHolder
protection:
•
Bit
Group to Exclude
Binary Value
Hexadecimal Value
0
Account Operators
0001
1
1
Server Operators
0010
2
2
Print Operators
0100
4
3
Backup Operators
1000
8
▪
• Add ACEs to excluded groups
• SDProp will not affect the new ACL
• Malicious JIT at any time!
▪
• Change the owner of the AdminSDHolder object
• Still not allowed to modify group memberships
▪
• Just before SDProp is scheduled to run
• Add malicious_user to the AdminSDHolder ACL
▪
• SDProp adds malicious ACE 
to protected objects
▪
• Add malicious_user to ‘Domain Admins’ group
• Obtain administrative TGT
• Revert (erase footprints)
• Remove malicious_user from AdminSDHolder’s ACL
• Force SDProp to run: removes malicious ACE from protected groups
• Remove malicious_user from ‘Domain Admins’ group*
• Entire operation can be automated to run in seconds!
▪
• ‘Account is sensitive and cannot be delegated’
• GPO: ‘Enable accounts to be trusted for delegation’
• Monitor accounts trusted for delegation
• ‘AllowedToDelegateTo’ attribute
▪
• ACL 
• Owner
• Excluded groups