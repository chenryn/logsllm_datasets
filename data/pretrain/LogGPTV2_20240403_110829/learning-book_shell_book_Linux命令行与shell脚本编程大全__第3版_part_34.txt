的命令。
 PageDowm （或Ctrl+F）：下翻一屏。
 PageUp（或Ctrl+B）：上翻一屏。
口G：移到缓冲区的最后一行。
num G：移动到缓冲区中的第num行。
gg：移到缓冲区的第一行。
vim编辑器在普通模式下有个特别的功能叫命令行模式。命令行模式提供了一个交互式命令
行，可以输人额外的命令来控制vim的行为。要进人命令行模式，在普通模式下按下冒号键。光
标会移动到消息行，然后出现冒号，等待输人命令。
在命令行模式下有几个命令可以将缓冲区的数据保存到文件中并退出vim。
口q：如果未修改缓冲区数据，退出。
口q!：取消所有对缓冲区数据的修改并退出。
wfilename：将文件保存到另一个文件中。
wg：将缓冲区数据保存到文件中并退出。
了解了这些基本的vim命令后，你可能就理解为什么有人会痛恨vim编辑器了。要想发挥出vim
的全部威力，你必须知道大量晦涩的命令。不过只要了解了一些基本的vim命令，无论是什么环
境，你都能快速在命令行下直接修改文件。一旦适应了敲人命令，在命令行下将数据和编辑命令
一起输人就跟第二天性一样自然，再回过头使用鼠标反倒觉得奇怪了。
---
## Page 200
10.1vim编辑器
185
10.1.3编辑数据
在插人模式下，你可以向缓冲区插人数据。然而有时将数据输人到缓冲区中后，你需要再对
其进行添加或删除。在普通模式下，vim编辑器提供了一些命令来编辑缓冲区中的数据。表10-1
列出了一些常用的vim编辑命令。
表10-1vim编辑命令
命
描述
X
删除当前光标所在位置的字符
d4
删除当前光标所在行
删除当前光标所在位置的单词
删除当前光标所在位置至行尾的内容
删除当前光标所在行行尾的换行符（拼接行）
U
撤销前一编辑命令
司
在当前光标后追加数据
入
在当前光标所在行行尾追加数据
 char
用char替换当前光标所在位置的单个字符
R text
用text覆盖当前光标所在位置的数据，直到按下ESC键
有些编辑命令允许使用数字修饰符来指定重复该命令多少次。比如，命令2x会删除从光标当
前位置开始的两个字符，命令5dd会删除从光标当前所在行开始的5行。
说明在vim编辑器的善通模式下使用退格键（Backspace键）和副除键（Delete键）时妥留心。
vim编辑器通常会将删除键识别成x命令的功能，删除当前光标所在位置的字符。vim编辑
器在普通模式下通常不识别退格键。
10
10.1.4复制和粘贴
现代编辑器的标准功能之一是剪切或复制数据，然后粘贴在文本的其他地方。vim编辑器也
可以这么做。
剪切和粘贴相对容易一些。你已经看到表10-1中用来从缓冲区中删除数据的命令。但vim在
删除数据时，实际上会将数据保存在单独的一个寄存器中。可以用p命令取回数据。
举例来说，可以用ad命令删除一行文本，然后把光标移动到缓冲区的某个要放置该行文本的
位置，然后用p命令。该命令会将文本插人到当前光标所在行之后。可以将它和任何删除文本的
命令一起搭配使用。
复制文本则要稍微复杂点。vim中复制命令是y（代表yank）可以在y后面便用和a命令相同
的第二字符（yw表示复制一个单词，y$表示复制到行尾）。在复制文本后，把光标移动到你想放
---
## Page 201
186第10章使用编辑器
置文本的地方，输人p命令。复制的文本就会出现在该位置。
复制的复杂之处在于，由于不会影响到你复制的文本，你没法知道到底发生了什么。你无法
确定到底复制了什么东西，直到将它粘贴到其他地方才能明白。但vim还有另外一个功能来解决
这个间题。
可视模式会在你移动光标时高亮显示文本。可以用可视模式选取要复制的文本。要进入可视
模式，应移动光标到要开始复制的位置，并按下v键。你会注意到光标所在位置的文本已经被高
亮显示了。下一步，移动光标来覆盖你想要复制的文本（甚至可以问下移动儿行来复制更多行的
文本）。在移动光标时，vim会高亮显示复制区域的文本。在覆盖了要复制的文本后，按y键来激
活复制命令。现在寄存器中已经有了要复制的文本，移动光标到你要放置的位置，使用p命令来
粘贴。
10.1.5查找和替换
可以使用vim查找命令来轻松查找缓冲区中的数据。要输人一个查找字符串，就按下斜线（/）
键。光标会跑到消息行，然后vim会显示出斜线。在输人你要查找的文本后，按下回车键。vim
编辑器会采用以下三种回应中的一种。
口如果要查找的文本出现在光标当前位置之后，则光标会跳到该文本出现的第一个位置。
口如果要查找的文本未在光标当前位置之后出现，则光标会绕过文件末尾，出现在该文本
所在的第一个位置（并用一条消息指明）。
口输出一条错误消息，说明在文件中没有找到要查找的文本。
要继续查找同一个单词，按下斜线键，然后按回车键。或者使用n键，表示下一个（next）。
替换命令允许你快速用另一个单词来替换文本中的某个单词。必须进入命令行模式才能使用
替换命令。替换命令的格式是：
18/o1d/neα/
vim编辑器会跳到o1a第一次出现的地方，并用new来答换。可以对替换命令作一些修改来替
换多处文本。
：s/old/new/g：一行命令替换所有old。
:n,ms/o1d/new/g：替换行号n和m之间所有o1d。
：s/old/new/g：替换整个文件中的所有old。
口：s/old/new/gc：替换整个文件中的所有old，但在每次出现时提示。
如你所见，对一个命令行文本编轴器面言，vim包含了不少高级功能。由于每个Linux发行版
都会包含它，所以应该至少了解一下vim编辑器的一些基本用法。这样一来，不管所处的环境如
何，你总能编辑脚本。
---
## Page 202
10.2nano 编辑器
187
10.2nano编辑器
vim是一款复杂的编辑器，功能强大，面nano就简单多了。作为一款简单易用的控制台模式
文本编辑器，nano很适合对此类编辑器有需求的用户。对Linux命令行新手来说，它用起来也很
不错。
nano文本编辑器是Unix系统的Pico编辑器的克隆版。尽管Pico也是一款简单轻便的文本编辑
器，但是它并没有采用GPL许可协议。nano文本编辑器不仅采用了GPL许可协议，而且还加人了
GNU项目。
大多数Linux发行版默认都安装了nano文本编辑器。和这款编辑器有关的一切都很简单。要
在命令行下使用nano打开文件，可以这样：
S nano nyprog.c
如果启动nano的时候没有指定文件名，或者指定的文件不存在，nano会开辟一段新的缓冲区
进行编辑。如果你在命令行中指定了一个已有的文件，nano会将该文件的全部内容读人缓冲区，
以备编辑，如图10-2所示。
6hmm8 Z.8.9
tinclnds Cat4ie.bo
jnt anin()
int fectorial-11
for(i-1: i<- mmber: i+)
factoria1 = faitee la1 • 1:
10
et Hett
图10-2nano的主窗口
注意，在nano编辑器窗口的底部显示了各种命令以及简要的描述。这些命令是nano的控制命
令。脱字符（^）表示Ctrl键。因此，x表示的就是组合键Ctrl+X。
跨门尽管nano控制命令在列出组合键的时候使用的是大写字母，但是在使用的时候，大小写
字母都没有问题
---
## Page 203
188
第10章使用编辑器
把所有的基本命令都放在眼前实在是太棒了。再也不用去记哪些控制命令能干哪些事情了。
表10-2列出了多种nano的控制命令。
表10-2nano控制命令
CTRL+C
显示光标在文本编辑缓冲区中的位置
CTRL+G
量示nano的主帮助窗口
CTRL+J
CTRLX
调整当前文本段落
剪切文本行，并将其保存在募切缓冲区
CTRL+0
将当前文本编辑线冲区的内容写人文件
CTRL+R
将文件读人当前文本编辑缓冲区
CTRL+7
启动可用的拼写检查器
CTRL+U
将剪切缓冲区中的内容放入当前行
CTRL+V
翻动到文本编辑缓冲区中的下一页内容
CTRL+
在文本编辑线冲区中搜索单词成短语
CTRL+X
关闭当前文本编辑缓冲区，退出nano，返回shell
CTRL+Y
翻动到文本编辑缓冲区中的上一页内容
表10-2中列出的控制命令都是你必不可少的。如果除此之外还需要更强大的控制功能，nano
也能满足你。在nano文本编辑器中输人Ctrl+G会显示出主帮助窗口，其中包含了更多的控制命令。
failed：Error invoking“Spel1·，下面是一些解决方法。利用第9章中学到的知识，
在你使用的Linux发行版中安装拼写检查器软件包aspell。
如果aspell没能解决问题，以超级用户的身份编辑/etc/nanorc文件（使用你喜欢的文本编辑
器）。找到文件的最后一行#setspeller“aspel1-x-c*，删除行首的宇符#。保
存并退出。
另外一些强大的功能可以通过命令行获得。可以使用命令行选项来控制nano编辑器的特性，
例如编辑之前创建备份文件。输人man nano来了解nano的这些命令行启动选项。
作为控制台模式文本编辑器，vim和nano为你在强大和简洁之间提供了一种选择。不过两者
都无法提供图形化编辑功能。有一些文本编辑器可以存在于两种模式中（控制台模式和图形化模
式），下节将一探究竞。
10.3emacs编辑器
emacs编辑器是一款极其流行的编辑器，甚至比Unix出现的都早。开发人员对它爱不释手，
于是就将其移植到了Unix环境中，现在也移植到了Linux环境中。跟vi很像，emacs编辑器一开始
---
## Page 204
10.3emacs编辑器
189
也是作为控制台编辑器，但如今已经迁移到了图形化世界。
emacs编辑器仍然提供最早的命令行模式编辑器，但现在也能使用图形化窗口在图形化环境
中编辑文本。在从命令行启动emacs编辑器时，编辑器会判断是否有可用的图形化会话，以便启
动图形模式。如果没有，它会以控制台模式启动。
本节将介绍控制台模式和图形模式的emacs编辑器，这样你就知道如何使用任意一种了。
10.3.1检查emacs软件包
很多发行版默认并没有安装emacs。你可以像下面这样使用which和/或yum1ist命令检查
一下自己所用的基于Red Hat的发行版。
S vhich emacs
*gb/9tT/xen/) uT αoua ou iuotua/utq/san/
/bin1 /usr/ local /bi.n1 /lbin1 /usr/bin1 /usr/local /slbin1
/usr/sbin1 /sbin1/home/Christine/bin)
S yun list enacs
Available Packages
 - + + J
enacs ,x86_64
1 :23 .125.e1.6
base
emacs编辑器软件包目前并没有安装在CentOS发行版中。不过，还是可以把它安装上的（关
于如何显示已安装软件的更多讨论，请参见第9章）。
对于基于Debian的发行版，可以使用which和/或apt-cacheshow命令来检查emacs编辑器
软件包的安装情况，在Ubuntu发行版中的演示如下。
S vhich emacs
S sudo apt-cache show emacs
Priority1 optional
Fackage1 emace
Section: editors
Installed-Size1 25
10
Description-en1 GNU Emacs editor (metapackage)
[- - . ]
GNU Emacs is the exteneible self-doeumenting text editor.
This is a metapackage that will always depend on the latest
Description-md5 : 21fb7da111336097a2378959f6d6e6a8
recommended Bmses release.
Buge1 https1//bugs launchpad.net/ubuntu/+filebug
Origin: Vbuntu
Supported1 5y
which命令的执行方式在这里有点不一样。当它没有找到已安装的命令时，直接返回的就是
bash shell提示符。在演示所用的Ubuntu发行版中，emacs编辑器软件包是选装的，但也可以进行
安装。下面显示了在Ubuntu上安装emacs编辑器。
S sudo apt-get install emacs
---
## Page 205
190
第10章使用编辑器
Reading package liats... Done
Bu11ding dependency tree
Reading state information... Done
The following extra packagea wi1l be installed:
[ - . . ]
Install enacsencommon for emacs24
enacsen-comnon: Handllng Lnstal1 of emacsen flavor emacs24
Hxote /usr/share/emacs24/α1te11ap/Gebian-ataxtup e1c
Hrote /etc/emacs24/αlte=staxt ,d/00deblanvara,elc
Processing txiggera foz 1lbc-bln (2.190ubuntu6) --*
Setting up emace (45,0ubuntu1)
 which enacs
/usr/bln/enaca
现在再使用which命令的话，它就会显示出emacs程序的位置。这说明该Ubuntu发行版已经
可以使用emacs编辑器了。
就CentOS发行版面言，可以使用yum安装命令来安装emacs编辑器。
[gudo] passvord for Chxiatine:
S sudo yun install enacs
Setting up Inatall Process
[ - . . ]
Resolving Dependencies
[ - . . ]
Installed:
emacs.x86_64 1:23.125.e16
Dependency Installed:
emacg=comnon.x86_64 1 :23.1-25 .e16
1ibotf,x86_64 0: 0.9 .93 .1,e16
m17ndbdataf11es.noarch 0:1.5.51.1,e16
Complete!
S which enacs
/uax/bin/enaca
 yun list enacs
Inatalled Packages
[ -. . ]
enacs.x86_64
1 :23 . 125 . e16
Fbase
将emacs编辑器成功安装到你的Linux发行版之后，就可以开始学习它的各种功能了。我们先
从控制台中的使用开始吧。
10.3.2在控制台中使用emacs
控制台模式版本的emacs要使用大量按键命令来执行编辑功能。emacs编辑器使用包括控制键
---
## Page 206
10.3emacs 编辑器
16]
（PC键盘上的Ctrl键）和Meta键的按键组合。在大多数终端仿真器中，Meta键被映射到了Alt键。
emacs官方文档将Ctrl键缩写为C-，而Meta键缩写为M-。所以，如果你要输人Ctrl+x组合键，文档
会显示成C-x。为了避免冲突，本章将会沿用这种写法。
1. emacs基础
要在命令行用emacs编辑文件，输人：
S emacs myprog.c
随emacs控制台模式窗口一起出现的是一段简短的介绍以及帮助界面。不要紧张，只要按下
任意键，emacs会将文件加载到工作缓冲区并显示文本，如图10-3所示。
[nt ais()
for(1=t: I (: waler: I+)
factoria1 = factoria1 • 1:
图10-3用控制台模式的emacs编辑器编辑文件
你会注意到，在控制台模式窗口的顶部出现的是一个典型的菜单栏。遗憾的是，这个菜单栏
无法在控制台模式中使用，只能用于图形模式。
10