### 1. Introduction to Hardcore Bit Encryption

From [10], it follows that for a function \( f \), the product \( x \oplus r \) is a hardcore bit, meaning it cannot be guessed with non-negligible advantage by any polynomial-time probabilistic (PPT) adversary given \( (f, f(x), r) \), where \( r \) is chosen uniformly at random from \(\{0, 1\}^n\) and \( x \) is drawn from a distribution such that \( f \) is one-way (i.e., hard to invert).

To encrypt a plaintext bit \( b \) using a trapdoor function \( f \) and a properly distributed \( x \), we generate \( (x, r) \) for a uniformly random \( r \) and compute the ciphertext as the triple \( (b \oplus (x \oplus r), f(x), r) \). Here, \(\oplus\) denotes the exclusive-or operation. Clearly, without the trapdoor, \( b \) is as hard to guess as the hardcore bit of \( f \).

### 2. Information-Theoretic Interactive Hashing (I-H) Protocol

There exists a constant-round information-theoretic I-H protocol [5, Sec. 5] with similar communication costs. However, its security requirements are stricter than ours, making it unsuitable for our schemes. On the positive side, this result suggests that improvements for IT-IH are possible in principle.

### 3. Efficient Oblivious Transfer (OT) from Trapdoor Permutations

Assume a secure (according to Definition 3) implementation of C-IH (referred to as "IH" for short) is available as a black-box. Let \(\{\phi_i : \{0, 1\}^n \to \{0, 1\}^n\}_{i \in I}\) be a collection of trapdoor permutations (TDP) according to Definition 1. Define \( f_i^h(x, b) \) as the hardcore bit encryption of a bit \( b \) using a permutation \( \phi_i \) as the trapdoor function and some \( x \in \{0, 1\}^n \).

**Protocol 1:**
- **Sender (S)** has inputs \( b_0, b_1 \in_R \{0, 1\} \).
- **Receiver (R)** has no input.

1. S picks \( i \in_R I \) and the corresponding trapdoor \( t \), then sends \( i \) to R.
2. a) R generates \( x \in_R \{0, 1\}^n \) and computes \( y = \phi_i(x) \).
   b) R inputs \( y \) to IH, so both S and R obtain \( (y_0, y_1) \) as output, where the output strings are assigned to \( y_j \) according to lexicographic order.
3. a) For \( j = 0, 1 \): S uses \( t \) to compute \( x_j = \phi_i^{-1}(y_j) \) and sends \( f_i^h(x_j, b_j) \) to R.
   b) R computes \( c = \mathbb{I}_{j}[y_j = y] \), decrypts \( b_c \), and outputs \( (c, b_c) \).

**Proposition 1:** Protocol 1 is a secure implementation of 1-2 OT according to Definition 4 with information-theoretic receiver-security, assuming the existence of trapdoor permutations as described in Section 2.1. The proof can be found in the full version of this paper [19].

**Efficiency Analysis:**
- Protocol 1 itself has one round.
- The IH protocol contributes \( n - 1 \) rounds, resulting in \( n \) rounds in total.
- The lower bound for oblivious transfer based on TDP in a black-box manner is \(\Omega(n / \log n)\) rounds [14, Sec. 7.3]. Thus, our protocol has near-optimal round complexity.
- Considering the work in [17], which shows that the proof in [20] works for a modified C-IH with \( O(n / \log n) \) rounds, we believe, but do not formally prove, that our protocol can be shown to be round-optimal.

### 4. OT from Coding Assumptions

Assume a secure (according to Definition 2) implementation of IT-IH (referred to as "IH" for short) is available as a black-box. When a binary matrix is input into IH, it is represented as a bit string by concatenating the rows. Denote the standard part of a generating \( k \times n \) matrix \( M \) by \( \text{St}(M) \in \{0, 1\}^{k \times (n-k)} \). Let \( \text{Enc}_{pk}(b) \) be a hardcore bit encryption of a bit \( b \) using the McEliece encryption with a public key \( pk \in \text{PK} \). The string \( x \) is generated uniformly at random by the encrypting player, and its mention is omitted for simplicity.

**Protocol 2:**
- **Sender (S)** has inputs \( b_0, b_1 \in_R \{0, 1\} \).
- **Receiver (R)** has no input.
- Both players agree on a default value \( v \in \{0, 1\} \).

1. a) R generates a random \( pk \in \text{PK} \), computes \( \text{St}(pk) \), and inputs it into IH. Both S and R obtain outputs \( (w_0, w_1) \) assigned according to lexicographic order.
   b) For \( i = 0, 1 \): Both players parse \( w_i \) as an element of \( \{0, 1\}^{k \times (n-k)} \) and compute \( K_i = [I_k | w_i] \).
2. For \( i = 0, 1 \): S sends \( \text{Enc}_{K_i}(b_i) \) to R.
   - R computes \( c = \mathbb{I}_{i}[K_i = pk] \) and decrypts \( b_c \).
   - If the decryption fails, R outputs \( (c, v) \). Otherwise, R outputs \( (c, b_c) \).

**Proposition 2:** Protocol 2 is a secure implementation of 1-2 OT according to Definition 4 under Assumptions 1-3. The proof can be found in the full version of this paper [19].

**Efficiency Analysis:**
- IT-IH requires \( O(m^2) \) bits of communication and \(\Omega(m^2)\) rounds for \( m \)-bit inputs.
- Plugging it into Protocol 2 yields \( O(n^4) \) bits of communication cost. Given that typical \( n \) is at least 1024 bits, our protocol is of strictly theoretical interest.

### 5. Acknowledgments

We thank the anonymous reviewers of this conference for their helpful comments. We also thank the anonymous reviewer from Crypto 2009 for expressing doubts about the necessity of commitment in our second protocol. Our thanks go to Nicolas Sendrier, Pierre-Louis Cayrel, Robert Niebuhr, Ludovic Perret, and Jeroen van de Graaf for reading this manuscript and providing insightful comments.

### 6. References

[1] D. Beaver. Precomputing oblivious transfer. In D. Coppersmith, editor, CRYPTO, volume 963 of Lecture Notes in Computer Science, pages 97–109. Springer, 1995.

[2] C. Cachin, C. Créepeau, and J. Marcil. Oblivious transfer with a memory-bounded receiver. In FOCS, pages 493–502, 1998.

[3] R. Canetti, editor. Theory of Cryptography, Fifth Theory of Cryptography Conference, TCC 2008, New York, USA, March 19-21, 2008, volume 4948 of Lecture Notes in Computer Science. Springer, 2008.

[4] C. Créepeau. Equivalence between two flavors of oblivious transfers. In C. Pomerance, editor, CRYPTO, volume 293 of Lecture Notes in Computer Science, pages 350–354. Springer, 1987.

[5] Y. Z. Ding, D. Harnik, A. Rosen, and R. Shaltiel. Constant-round oblivious transfer in the bounded storage model. J. Cryptology, 20(2):165–202, 2007. Conference version appears at TCC '04.

[6] R. Dowsley, J. van de Graaf, J. Müller-Quade, and A. C. A. Nascimento. Oblivious transfer based on the McEliece assumptions. In R. Safavi-Naini, editor, ICITS, volume 5155 of Lecture Notes in Computer Science, pages 107–117. Springer, 2008.

[7] D. Engelbert, R. Overbeck, and A. Schmidt. A summary of McEliece-type cryptosystems and their security. Journal of Mathematical Cryptology, 1(2):151–199, 2007.

[9] O. Goldreich. Foundations of Cryptography - Volume 2 (Basic Applications). Cambridge University Press, 2004.

[10] O. Goldreich and L. A. Levin. A hard-core predicate for all one-way functions. In STOC, pages 25–32. ACM, 1989.

[11] O. Goldreich, S. Micali, and A. Wigderson. How to play any mental game or a completeness theorem for protocols with honest majority. In STOC, pages 218–229. ACM, 1987.

[12] I. Haitner. Implementing oblivious transfer using collection of dense trapdoor permutations. In M. Naor, editor, TCC, volume 2951 of Lecture Notes in Computer Science, pages 394–409. Springer, 2004.

[13] I. Haitner. Semi-honest to malicious oblivious transfer - the black-box way. In Canetti [3], pages 412–426.

[14] I. Haitner, J. J. Hoch, O. Reingold, and G. Segev. Finding collisions in interactive protocols - a tight lower bound on the round complexity of statistically-hiding commitments. In FOCS, pages 669–679. IEEE Computer Society, 2007.

[15] I. Haitner and O. Reingold. A new interactive hashing theorem. In IEEE Conference on Computational Complexity, pages 319–332, 2007.

[16] K. Kobara, K. Morozov, and R. Overbeck. Coding-based oblivious transfer. In J. Calmet, W. Geiselmann, and J. Müller-Quade, editors, MMICS, volume 5393 of Lecture Notes in Computer Science, pages 142–156. Springer, 2008.

[17] T. Koshiba and Y. Seri. Round-efficient one-way permutation based perfectly concealing bit commitment scheme. ECCC, TR06-093, July 2006. Available at: http://eccc.hpi-web.de/eccc-reports/2006/TR06-093/.

[18] R. J. McEliece. A public key cryptosystem based on algebraic coding theory. DSN progress report, 42-44:114–116, 1978.

[19] K. Morozov and G. Savvides. Computational oblivious transfer and interactive hashing. Cryptology ePrint Archive, February 2009. Available at: http://eprint.iacr.org/2009/074.pdf.

[20] M. Naor, R. Ostrovsky, R. Venkatesan, and M. Yung. Perfect zero-knowledge arguments for NP using any one-way permutation. J. Cryptology, 11(2):87–108, 1998.

[21] R. Ostrovsky, R. Venkatesan, and M. Yung. Fair games against an all-powerful adversary. In AMS DIMACS Series in Discrete Mathematics and Theoretical Computer Science, pages 155–169, 1993.

[22] M. O. Rabin. How to exchange secrets by oblivious transfer. Technical report, Aiken Computation Laboratory, Harvard University, 1981. TR-81.

[23] G. Savvides. Interactive Hashing and reductions between Oblivious Transfer variants. PhD thesis, School of Computer Science, McGill University, Montreal, Canada, 2007.

[24] N. Sendrier. On the security of the McEliece public-key cryptosystem. In M. Blaum, P. G. Farrell, and H. C. A. van Tilborg, editors, Information, Coding and Mathematics, pages 141–163. Kluwer, 2002. Proceedings of Workshop honoring Prof. Bob McEliece on his 60th birthday.

[8] S. Even, O. Goldreich, and A. Lempel. A randomized protocol for signing contracts. Commun. ACM, 28(6):637–647, 1985.

[25] S. Wiesner. Conjugate coding. SIGACT News, 15(1):78–88, 1983.