---
## Page 520
释这些值。有些范围列要求的是文字值，但大部分都允许通配符或其他特定值。
进行组合，
求，语句。其中包括权限表访问范围列里的合法值的类型、来自不同权限表的各个权限值如何
的权限了。第二阶段将一直持续到你与服务器的连接断开为止。
行该语句的访问权限。首先检查限制值的原因在于：如果你已经达到上限，就没必要再检查你
句数目”和“每小时更新数目”的限制。其次，服务器会检查权限表，以验证你是否有足够的执
安全连接，客户端程序和服务器还会对它们之间的通信进行加密。
接
你的名字以及你的身份认证凭证（如密码）相匹配的行。如果找不到相匹配的行，你就无法连
13.4.1
候。此时，服务器会查看user 表，看能否找到这样一个行，即与你用来连接服务器的主机、
13.4
13.3.5权限表资源管理列
500
在第二阶段，服务器会对执行的每一条语句做两项检查。首先，
。女
每个访问范围列都有一些约束规则，用来定义哪些类型值是合法的，以及服务器会如何解
MySQL服务器对客户端的访问控制分为两个阶段。第一阶段发生在你试图连接服务器的时
接下来将详细讨论MySQL服务器将权限表的行与以下两项相匹配的规则：连入客户端请
如果所有检查都没问题，那么服务器会建立连接，你可以进入第二阶段。如果你建立的是
如果能找到，服务器还会检查user表的 SSL列和资源管理列。
与账户限制设置有关的更多信息请参考13.2.2.5节。
如果重新启动MySQL服务器，那么所有当前计数会被重置为零。当重新加载权限表或者执行FLUSH
Host
口max_connections。表示允许给定账户在一小时内连接服务器的最大次数。当该值为o时，
在user表里，可以利用下面各列对任何给定MySQL账户的可用服务器资源的大小进行限定。
口
口
口
口
口
■TCP环回接口，即IP地址为127.0.0.1或：：1的那个接口。它在所有系统上都有效。
■命名管道或共享内存，在Windows上。
■Unix套接字文件，在Unix上。
机。当客户端从本地主机连接一个服务器的本地网络接口时，便属于这一情况，定义如下。
Host列的值可以是主机名或IP地址（IPv4或IPv6 都可以)。值1ocalhost代表本地主
关列要求的凭证是否相匹配。如果不匹配，服务器会拒绝该连接。
如果user表的行表明需要进行安全连接，那么服务器会确定你所提供的凭证与SSL相
如果你已达到每小时连接数目限制或同时连接数目限制，服务器会拒绝该连接。
服务器如何控制客户端访问
如果该值大于o，则其优先级会高于max_user_connections系统变量。
为o，服务器会根据max_user_connections系统变量的全局值来确定并发连接的上限值。
max_user_connections。表示允许给定账户同时进行连接的客户端的最大数目。如果该值
句。当该值为0时，表示“无限制”
max_updates。其作用与max_questions相似，但更为具体。它适用于那些修改数据的语
示“无限制”
max_questions。表示允许给定账户在一小时内执行语句的最大数目。当该值为o时，表
表示“无限制”。虽然其名字与max_connections系统变量同名，但两者毫无关联。
第13章安全性与访问控制
访问范围列的内容
以及服务器在给定权限表内搜索行的顺序。
，它会检查“每小时执行语
---
## Page 521
 Table_name、Column_name和Routine_name
口
这些列值必须分别为普通的表名、列名或存储例程名。列值需要与指定的名字精确匹配。
名字精确匹配。不允许使用模式和空白值。
tables_priv 和 procs-priv 表里，Db 值必须是普通的数据库名。它们需要与指定的
指定的通配符。当值为%或空白时，表示可以与任何数据库相匹配。在columns_priv、
在db表里，指定Db值时，可以使用普通字符，也可以使用SQL模式字符“%”或“”
客户端会被当作匿名用户。
当根据user表来验证进入连接时，如果第一个匹配的行包含的User 值为空白，那么该
为%的用户相匹配，这可能不是你想要的。
必须与指定的名字精确匹配。特别地，当User 值为%时，并不是表示空白。它会与名字
用户名必须为文字值或空白(空)。空白值可以匹配任何名字，即为“匿名”。否则，它
User
IPv6地址不支持子网掩码。
设置为1，可以有多个这样的8位，其余位设置为0。
255.255.0.0、255.255.255.0或255.255.255.255。也就是说，开头的8位必须都
何客户端主机。可把这种编号当作一种通配符。子网掩码的取值必须为255.0.0.0、
(24-bit）的网络编号，该编号能匹配IP地址前24位（bit）的值等于192.168.128的任
些位必须匹配该网络编号。例如，192.168.128.0/255.255.255.0指定了一个24-位
db.Host 值。
查 host 表，以获得更多的信息”。不过，host 表现在已过时，因此不应再使用空白的
里的任何主机。
10.0.%将匹配B类子网10.0里的任何主机，而192.168.3.%将匹配C类子网192.168.3
example.com域里的任何主机，而%.edu将匹配任何教育机构里的任何主机。同样地，
SQL 模式字符既可用于主机名，也可用于IP 地址。例如，%.example.com 将匹配
对
如
义与在语句里使用的LIKE操作符一样（不允许使用 REGEXP所用的正则表达式类型)。
这两种情况下，连接操作都会使用TCP/IP。
从本地主机进行连接
?
C:\>mysql
此外，如果 bob 在
为localhost的那个行相匹配：
bob在Unix或Windows里使用以下命令中的任意一个从本地主机进行连接，就能与值
对应：一个行的 Host 值为 localhost，另一个行的值为 cobra.example.com。如果
设，本地主机名为 cobra.example.com，并且user 表里有两个行与名为bob的用户相
如果客户端使用主机的真实名字或IP地址进行连接，就不会与 localhost 相匹配。
Db
寸于 IPv4主机值，还可以指定一个带子网掩码的网络编号，以指明客户端IP地址的哪
果Host的值为%，则可以与任何主机相匹配，并且允许用户从任何地方进行连接。在
mysql
>n
旨定Host的值时，可以使用通配符。可以使用SQL模式字符“%”和“_”，它们的意
mysql
mysql
-u
bob
bob
接，就能与 Host 列值为 cobra.example.com 的那个行相匹配。在
bob --protocol=pipe
bob-h
Windows上像下面这样进行连接，就能与localhost行相匹配：
13.4服务器如何控制客户端访问
501
假
---
## Page 522
源自每个客户端的每一条语句的权限时。其实不然，整个过程相当快，因为服务器实际上并不
会拒绝执行该语句。
tables_priv、columns_priv和procs_priv表，确定你是否有足够的执行该语句的权限。
器便会执行它。
那么它会把该行里的权限添加到你的全局权限里。如果最终结果足以执行那条语句，那么服务
全局权限。如果你有这样的全局权限，并且它们足以让你执行该语句，那么服务器便会执行它。
限，或者徒劳地搜索完所有这些表。具体的检查流程如下所示。
会检查你是否具备足够的执行这条语句的访问权限。服务器确定你权限的办法是，逐个检查
13.4.2
user、db、tables_priv、columns_priv和procs_priv表，直到服务器确定你有足够的
大小写
理，依赖于运行服务器的那台主机上的文件系统的大小写区分情况（通常情况下，Unix里区分
的是，Db列和Table_name列的值总是区分大小写的，即使SQL语句中数据库名和表名的处
502
以上描述无疑使访问检查看起来像是一个相当复杂的过程，尤其是当你想到服务器会核查
。（4）如果服务器在检查完所有表之后，发现你仍然没有足够的执行该语句的权限，那么它
（3）如果你的全局权限和你的数据库级权限加到一起还不够的话，服务器会检查
(2）如果你的全局权限不足，服务器会在db表里查找与你相匹配的行。如果服务器找到了
如果采用布尔方式来表达，服务器对权限表的各种权限进行组合的过程如下：
（1）当你开始连接时，服务器会在user表里检查匹配到的的那个行，以确认你拥有哪些
每当执行一条SQL语句时，服务器会检查你是否已经达到你语句资源的上限。这些上限是
服务器在处理各个访问范围列时，是否要区分大小写的情况如表13-7所示。需要特别注意
user OR db oR tables_priv OR columns_priv or procs_priv
Routine_type
，Windows里不区分大小写）。
User列指定的那些值相似。
列。Proxied_host 和 Proxied_user 表示的是被代理账户，其值与前面为 Host 列和
这两列存在于proxies_priv表中,该表还拥有可以表示代理用户账户的Host 列和User
Proxied_host 和 Proxied_user
列的值，可以唯一性地标识出 Db列所指定的那个数据库里的存储例程。
字是适用于存储函数，还是适用于存储过程。利用 Routine_name 列和 Routine_type
此列的值只能是·FUNCTION'或者·PROCEDURE'，用来表示行中 Routine_name 列里的名
不允许使用模式和空白值。
第13章安全性与访问控制
语句访问验证
Routine_name
Column_name
Table_name
Password
User、Proxied_user
Host、Proxied_host
列
表13-7
权限表访问范围列的大小写区分情况
是否区分大小写
是是是是否否
否
权
杳
---
## Page 523
管理员在安装部署完一个新服务器时，user表里会默认包含root 行和匿名用户行。优秀的管
存在的问题，至少从它在MySQL邮件列表里出现的频率来判断是这样的。该问题是，MySQL
何种顺序搜索user表的行是很有用的。它还展示了如何解决一个对新安装的MySQL来说普遍
13.4.4
后再匹配User值，而不是以相反的顺序进行匹配。
被匹配到，但是这些行的优先级顺序如下所示：
户端从某台IP地址为192.168.3.14的主机进行连接时，所有Host列为下面这些值的行都会
度较高的模式。这意味着，当从某台名为boa.example.com的主机进行连接时，如果有两
对于模式，服务器更喜欢使用字面值，相对于特定程度较低的模式，服务器更喜欢使用特定
它不是按字面顺序排序的，或者更准确地说，仅在一定程度上如此。请牢记这样一个原则：相
是以 Host 列为主的，因此 Host 值相同的行会排在一起，然后再根据User 值进行排序。不过、
排序顺序很重要，尤其是user 表的。许多尝试理解 MySQL安全性的人，似乎都会卡在这个
是否能够找到与进入连接相匹配的行。在哪个行中找到第一个匹配，就确定使用哪个行。了解
问题上。
13.4.3访问范围列匹配顺序
到相应的权限表修改操作上，然后自动刷新这些表在内存里的副本。
句来建立或修改用户账户时，可以不用告知服务器重新加载权限表。
命令，即可达到这一效果。
FLUSH PRIVILEGES 语句，或者执行 mysqladmin flush-privileges 或 mysqladmin reload
但解决办法很简单：在直接修改权限表之后，记得告知服务器重新加载它们的内容即可。执行
用户成功连接服务器。这经常令许多新手管理员（甚至包括某些经验丰富的管理员！）很困惑，
user表添加新行的方式来增加新的MySQL用户，那么此操作自身便不能使新行里指定的那个
改权限表的内容，那么服务器并不会注意到这个改变。例如，如果你通过使用INSERT 语句向
过程中，服务器
端执行的各条语句进行权限检查时，不用去检查这些类型的信息。这意味着，在整个访问检查
否存在资源限制，账户是否有表级、列级或例程级权限。如果都没有，它便会知道，在对客户
能。此外，权限越简单，访问检查速度越快。当服务器把权限表读入内存时，它会留意账户是
存，然后使用内存里的副本来对语句进行权限检查。这种做法可以显著提升访问检查操作的性
会针对每一条语句去权限表里查找信息。而是在服务器启动时，就已经将这些表的内容读入内
本节将描述一个特定场景，说明：为何说在服务器对连接尝试进行验证时，了解服务器以
当服务器读取 user 表的内容时，它会根据 Host 列和User 列的值对行进行排序。排序时
MySQL服务器会按照某种特定方式对权限表里的行进行排序，然后依次检查这些行，看
使用权限表在内存里的副本来实现权限检查，会产生一个严重的负面影响：如果你直接值
需要记住的另一个原则是：当服务器尝试匹配user 表里的行时，它会先匹配Host 值，然
192.%
192.168.8
192.168.3.14
权限难题
器可以省掉某些步骤。
13.4服务器如何控制客户端访问
，服务器会把这些语句映射
503
会
样
个
修
查
户
---
## Page 524
后，user 表将包含下面的行：
户身份从本地服务器进行连接。在管理员使用前面所示的 GRANT 语句为用户fred 创建账户之
这样的行（仅列出了Host列和 User列的值）：
cobra.example.com上运行mysql_install_db脚本以初始化权限表时，user 表将包含下面
服务器在验证客户连接时是如何使用user 表中的行的。例如，在Unix 里，当在主机
码 cocoa），因此密码匹配会失败。
试之所以失败，是因为当服务器对用户 fred 进行身份认证时，匿名用户的其中一个行在匹配
初始化user 表里也会有这些行。（与user表初始行有关的信息请参考12.1节。)第二个连接尝
在 Unix里，这种行是由初始化脚本 mysql_install_db 创建的；Windows 发行版所包含的预
fred 提供了正确的密码也不行：
顺
boa.example.com进行远程连接时，尝试能成功：
独服务器主机除外！假设服务器的主机名为cobra.example.com，当fred尝试从主机
名的主机部分，以便让该用户可以从任何地方进行连接。
同的主机连接到服务器。最省事的做法是：创建新账户时，在GRANT语句里把“”作为账
任何密码。现在，假设这位系统管理员想要创建一个新账户，让它所对应的用户可以从多台不
理员通常会为root 账户分配密码，但是对匿名用户常会置之不理（如果不加以提醒），不设置
一
504
序上会优先于用户fred 的行。该匿名用户行要求用户在连接时不使用密码（而不是要求否
一台主机进行连接。不幸的是，可能出现的结果却是：fred 能够从任何一台主机进行连接，唯
要弄清为何会出现这种情况，需要考虑两件事情：MySQL的权限表在开始时是如何建立的；
前面几行使用户能够以root身份从本地服务器进行连接。
如果你的user表里包含任何默认的匿名用户行，并且其用户名为空，就会出现这个问题，
ERROR 1045 (28000): Access denied for user 'fred'@'localhost'
%mysql-p -ufred-h localhost sampdb
但是当 fred 尝试从服务器主机cobra.example.com进行本地连接时，尝试会失败，即使
Enter password:cocoa
%mysql -p -u fred -h cobra.example.comsampdb
上面这条语句的本意是想将 sampdb 数据库的所有权限都授予用户 fred，使其能够从任何