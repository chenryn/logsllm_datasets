**Kai Hackemesser** opened **SPR-8583** and commented:

I have converted the web application context and servlet context from XML to Java configuration. The `web.xml` file has been updated according to the online documentation. I am using the `@Autowired` annotation in the servlet configuration to inject the required beans for the form controllers. Additionally, I have autowired the web application context configuration class, as I need to retrieve some fields annotated with `@Value` by calling type-conversion methods. However, the autowiring seems to fail, resulting in `NullPointerExceptions` when the methods of the web application context configuration class are called.

During debugging, I observed that the web application context is being built using the configuration class, and the fields I want to access are populated correctly. However, the `@Autowired` field in the configuration class is `null` when a `@Bean`-annotated method tries to use it.

Here are some relevant code snippets from our project:

### `web.xml`
```xml
<context-param>
    <param-name>contextClass</param-name>
    <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
</context-param>
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>com.ourcompany.ServletConfig</param-value>
</context-param>

<servlet>
    <servlet-name>appServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </init-param>
    <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>com.ourcompany.ApplicationConfig</param-value>
    </init-param>
</servlet>
```

### `ServletConfig.java`
```java
@Configuration
@ImportResource("classpath:/META-INF/iem/servletPropertyConfigurer.xml")
public class ServletConfig {

    @Autowired
    private ApplicationConfig applicationConfig;

    @Bean
    public DbStatsController dbStatsController() {
        DbStatsController controller = new DbStatsController();
        controller.setManageUrl(applicationConfig.getDatabaseManageUrl());
        return controller;
    }
}
```

### `ApplicationConfig.java`
```java
@Configuration("applicationConfig")
@ImportResource({
    "classpath:/META-INF/..." 
})
public class ApplicationConfig {

    @Value("${database.manage.url}")
    private String databaseManageUrl;

    public String getDatabaseManageUrl() {
        return databaseManageUrl;
    }
}
```

According to the Spring documentation, a configuration class can be autowired like any other bean. However, in this case, the autowiring does not work, and no `BeanNotFound` or similar exception is thrown. Instead, a `NullPointerException` occurs when trying to access the autowired field.

* * *

**Issue Links:**
  * #13226 unresolvable circular reference when bean defined in XML config refers to bean defined in outer Java config ( _ **"duplicates"**_ )