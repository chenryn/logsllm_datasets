# Client Behavior and Feed Characteristics of RSS: A Publish-Subscribe System for Web Micronews

## Authors
Hongzhou Liu, Venugopalan Ramasubramanian, and Emin Gün Sirer  
Department of Computer Science, Cornell University, Ithaca, NY 14853  
{liuhz, ramasv, egs}@cs.cornell.edu

## Abstract
Despite the significant research interest in publish-subscribe (pub-sub) systems over the past decade, few established benchmarks exist, and there is limited understanding of how these systems are used in practice. This paper examines RSS, a widely used pub-sub system for web micronews. Through a 45-day trace study at a medium-sized academic department and periodic polling of approximately 100,000 RSS feeds, we analyze the characteristics of RSS content and usage. Our findings show that RSS workloads share similarities with web traffic in terms of content size and popularity. Feeds are typically small (less than 10KB), with a heavy-tailed distribution, and feed popularity follows a power-law distribution. The update rate of RSS feeds varies widely; 55% of feeds are updated hourly, while 25% show no updates for several days. Additionally, most RSS updates involve only minor changes, with 64% of updates affecting less than three lines of the XML content. This paper provides an in-depth analysis of RSS, the first widely deployed pub-sub system, and offers insights for the design of next-generation pub-sub systems.

## 1. Introduction
Publish-subscribe (pub-sub) systems [1, 5, 6, 8, 9, 12, 13, 15] have gained widespread acceptance in various applications, including information delivery, sensor monitoring, auction systems, and air traffic control. Previous research has focused on system architecture, event notification, and content filtering algorithms, but little attention has been given to the actual workload and client behavior in pub-sub systems.

This paper addresses these questions by examining RSS, the first widely deployed pub-sub system, which is used for disseminating web micronews. The RSS architecture is straightforward: clients subscribe to feeds of interest and periodically poll the feeds for updates. RSS content is encoded in XML and displayed using a feed reader or an RSS-integrated web browser. Many news media support RSS feeds, and information such as website announcements and blog updates is often distributed via RSS. The integration of RSS into web browsers has significantly increased its popularity.

In this study, we analyze the feed characteristics and client behavior in the RSS system using data collected through passive logging and active polling. We recorded a 45-day trace from the Department of Computer Science at Cornell University, involving 158 different RSS users subscribing to 667 feeds. We also actively polled 99,714 feeds listed in the syndic8.com directory every hour for 84 hours. Our analysis focuses on feed popularity, user behavior, and content properties, providing valuable insights into the design of future pub-sub systems.

## 2. Background and Related Work
### 2.1. Publish-Subscribe Systems
Pub-sub systems consist of three main components: subscribers, publishers, and an event delivery infrastructure. Subscribers express their interest in specific events, while publishers generate events. The infrastructure matches events with subscriber interests and delivers them accordingly. Pub-sub systems can be categorized into topic-based and content-based. In topic-based systems, subscribers specify their interest by subscribing to predefined topics, while in content-based systems, subscribers use event filters to specify their interests.

### 2.2. RSS
RSS is a web content syndication system that propagates XML documents containing short descriptions of web news. Clients access RSS feeds via HTTP URLs, and RSS readers check and display the feed contents periodically. Most RSS readers poll feeds once per hour by default. Newer versions of RSS include features like TTL, SkipDay, and SkipHour to help readers determine when and how often to poll. However, many RSS providers impose rate limits to prevent overloading their servers.

### 2.3. Related Work
Previous research on pub-sub systems has focused on efficient event delivery mechanisms. Examples include Isis [8], Linda spaces [5], T-space [9], SIENA [6], Gryphon [12], TIBCO [13], Astrolabe [15], and Herald [4]. The Joint Battlespace Infosphere project [1] is another example, designed for large-scale deployment. Recent systems like FeedTree [11] and CorONA [10] aim to reduce the load on RSS feed providers through cooperative polling. This paper presents the first measurement study of a widely-deployed pub-sub system.

## 3. Measurement Methodology
We collected data using two methods: passive logging of a 45-day user activity at the Department of Computer Science, Cornell University, and active polling of nearly 100,000 feeds every hour for 84 hours.

### 3.1. Passive Logging
We developed a software tool to trace RSS traffic and installed it at the network border of our department. The department has about 600 graduate students, faculty, and staff, with a network separate from transient users. We traced user activity over 45 days, from March 22 to May 3, 2005, and recorded all RSS-related traffic. Table 1 summarizes the trace data.

### 3.2. Active Polling
We obtained a list of 99,714 RSS feeds from syndic8.com and polled these feeds every hour for 84 hours. We set a download timeout of 20 seconds and retried requests up to four times if the response was not received. We successfully fetched 3,682,043 snapshots, averaging about 36.9 snapshots per feed. Table 2 summarizes the results of the active polling.

## 4. Survey Results
We analyzed the RSS system's characteristics using the trace data and periodic snapshots, focusing on feed characteristics, update patterns, and client behavior.

### 4.1. Feed Characteristics
#### 4.1.1. Feed Popularity
Figure 1 shows the popularity of RSS feeds based on the number of requests, following a Zipf (power law) distribution with α = 1.37. The most popular feed (BBC news) received 12,203 requests, while many feeds received only a single request. Figure 2 plots the popularity based on the number of subscribers, also following a Zipf distribution (α = 0.5).

#### 4.1.2. Feed Format and Version
RSS is the dominant format, with more than 98% of the feeds in RSS. A small 2% use Atom [2]. Figure 3 breaks down the RSS feeds by version, showing that Version 2.0 is the most popular, accounting for more than 60% of the feeds.

#### 4.1.3. Feed Size
Figure 4 shows the cumulative distribution function (CDF) of feed sizes. RSS feeds are typically small, with a median size of about 5.8 KB and most feeds being less than 10 KB.

### 4.2. Update Patterns
#### 4.2.1. Update Rate
The update rate of RSS feeds varies widely. 55% of feeds are updated hourly, while 25% show no updates for several days.

#### 4.2.2. Amount of Change
Most RSS updates involve minor changes, with 64% of updates affecting less than three lines of the XML content. This suggests that fetching only the "deltas" instead of the entire feed could save a significant amount of bandwidth.

### 4.3. Client Behavior
#### 4.3.1. Polling Behavior
Over a third of clients fetch feeds manually, while the rest use automated RSS tools. Among the automated users, more than half poll feeds hourly, which is the default setting for most RSS readers.

#### 4.3.2. Subscription Patterns
Enabling RSS content servers to provide feed-specific polling rates to RSS readers could be more efficient than expecting clients to configure their readers.

## 5. Conclusion
This paper provides a detailed analysis of RSS, the first widely deployed pub-sub system, and offers insights into its workload and client behavior. Our findings highlight the similarities between RSS and web workloads, the variability in update rates, and the potential for bandwidth savings through delta-based updates. These insights can inform the design of next-generation pub-sub systems.

---

**Tables and Figures**

**Table 1: Summary of User Traces**
- Trace length: 45 days
- Number of clients: 158
- Number of feeds: 667
- Number of requests: 61,935
- Note: Clients are identified by a secure cryptographic hash of their IPs.

**Table 2: Summary of Active Polling**
- Polling period: 84 hours
- Number of feeds: 99,714
- Number of snapshots: 3,682,043
- Bytes received: 57 GB

**Figure 1: Feeds Ranked by the Number of Requests**
- Shows the popularity of RSS feeds based on the number of requests, following a Zipf distribution.

**Figure 2: Feeds Ranked by the Number of Subscribers**
- Shows the popularity of RSS feeds based on the number of subscribers, also following a Zipf distribution.

**Figure 3: Distribution of RSS Version**
- Breaks down the RSS feeds by version, showing Version 2.0 as the most popular.

**Figure 4: CDF of Feed Size**
- Shows the cumulative distribution function of feed sizes, indicating that most RSS feeds are small (less than 10 KB).