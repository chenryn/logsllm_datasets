# The House That Knows You: User Authentication Based on IoT Data

**Authors:**
- Talha Ongun, Northeastern University, PI:EMAIL
- Alina Oprea, Northeastern University, PI:EMAIL
- Cristina Nita-Rotaru, Northeastern University, PI:EMAIL
- Mihai Christodorescu, Visa Research, PI:EMAIL
- Negin Salajegheh, Visa Research, PI:EMAIL
- Oliver Spohngellert, Northeastern University, PI:EMAIL

## Abstract
Home-based Internet of Things (IoT) devices have become increasingly popular, with many households adopting smart sensors, locks, and voice-based assistants. Given the limitations of existing authentication techniques, we explore new opportunities for user authentication in smart home environments. Specifically, we design a novel authentication method based on behavioral features extracted from user interactions with IoT devices. We conduct an IRB-approved user study in our university's IoT lab over three weeks, collecting network traffic from multiple users interacting with 15 IoT devices. We extract a large number of features to capture user activity and experiment with various classification algorithms. Additionally, we design an ensemble classifier using two models with disjoint sets of features. Our results show that the ensemble model can classify six users with 86% accuracy and five users with 97% accuracy.

## 1. Introduction
User authentication is a critical challenge in security, and while numerous solutions have been proposed, the search for the perfect solution continues. Traditional methods include passwords, hardware tokens, and biometrics. Passwords, despite their widespread use, have well-documented limitations [13, 19, 29]. Multi-factor authentication (MFA) using hardware tokens or different channels (e.g., email, SMS) enhances security but introduces usability issues and additional latency [10, 26]. Biometric-based authentication, such as facial recognition, fingerprints, and retina scans, is widely used but faces challenges like revocation and user impersonation [31].

The proliferation of IoT devices, including sensors, locks, entertainment devices, and voice-based personal assistants, has made authentication in smart homes more complex. These devices are fundamentally different from personal devices, and traditional authentication methods may not be applicable or may disrupt the natural flow of interaction. Deploying screens or input pads for each device is impractical or costly. Some devices, like Amazon Echo Dot, offer voice-based biometric authentication, but this can be spoofed, and privacy concerns may make users uncomfortable [21].

One opportunity in smart home environments is the relatively small number of users, typically ranging from two to six members. Multi-class classification algorithms can be trained for such small sets, and with minimal effort, it can be ensured that adversaries do not interfere during training. However, designing user authentication methods for household IoT devices presents several challenges, including supporting a diverse set of devices, maintaining user privacy, and supporting a variety of policies. Detailed user behavior data, such as device logs, tend to be device-specific and invasive in terms of privacy.

Our approach addresses these challenges by using the network traffic from the home router as the data source. To preserve user privacy, we collect and leverage information from the headers of HTTPS packets, which include minimal details (timing, ports, bytes sent and received) with low risk to user privacy. Additionally, to protect user privacy, we perform model training and testing locally in the user’s home rather than in the cloud. This implies that the authentication module must reside in the smart home. To address the mismatch between user-level and network-level semantics, we observe network traffic over a continuous time window and design a machine learning (ML) model that uses features aggregated over a recent time window to predict the user in the room. Finally, we train a multi-class classifier to predict the likelihood that a certain user is in the room, based on historical data obtained in controlled settings and then used at testing time to classify users by generating real-time authentication scores.

## 2. Preliminaries and Background
### 2.1 User Authentication
User authentication is a fundamental security process that has been extensively studied. Traditional methods are based on what users know (e.g., passwords), what they have (e.g., hardware token), or what they are (e.g., biometrics). Despite extensive research highlighting password limitations [13, 19, 29], passwords remain the de-facto standard for authentication in corporate and home environments. Users often choose weak passwords and reuse them across services [3], and critical services do not always deploy proper password protection, increasing the risk of data breaches [1]. Multi-factor authentication (MFA) methods, which use hardware tokens or different channels (e.g., email, SMS), enhance security but reduce usability and introduce latency [10, 26]. Biometric-based authentication, such as keystroke dynamics, fingerprints, facial recognition, and voice recognition, provides a convenient and reliable way to identify users [7, 20, 30], but revocation and user impersonation are significant challenges, along with privacy implications [31].

Behavior-based authentication offers a safer and more convenient way to identify users based on their unique behavior. Such methods build behavioral models based on how users interact with devices like smartphones, tablets, or touch screens. In the context of mobile devices, several systems for continuous authentication have been designed, leveraging features such as call logs, browser history, application usage, and location [23, 25]. User authentication based on WiFi signals from IoT devices has also been explored [24]. These systems can be integrated into MFA to increase confidence in user authentication.

### 2.2 Problem Definition
With the widespread adoption of IoT devices in households, new challenges and opportunities arise. We aim to design usable, behavior-based authentication models for users naturally interacting with IoT devices in their homes or familiar environments. Our goal is to create a lightweight authentication module for smart homes that uses information extracted from monitoring user interactions with IoT devices. The system should accurately identify each user from a fixed set of known users based on their behavioral characteristics. User privacy is a primary consideration, and we aim to leverage a minimum number of attributes universally applicable to a range of IoT devices from different manufacturers. We focus on authentication based on behavioral features extracted from network traffic generated by IoT devices in a smart home. The system would learn from historical observations and create user profiles during a training phase. At testing time, the authentication module generates an authentication score mapped to the likelihood that a certain user is in the room based on the most recent observation of IoT device activity. The authentication module needs to observe users during a contiguous observation window to capture a sequence of user actions. The authentication scores can be used by higher-level applications to create flexible authorization policies that support various levels of risk.

### 2.3 Adversarial Model
We consider two main classes of adversaries:
- **Local Adversaries:** These adversaries might be in close proximity or inside the home environment, interacting with some IoT devices. This model captures visitors, neighbors, kids, or roommates sharing the home. We aim to prevent such adversaries from performing actions like changing smart lock settings or making purchases on Alexa on behalf of real users.
- **Remote Adversaries:** These adversaries do not directly access IoT devices but could compromise user machines and accounts by exploiting vulnerabilities. They are motivated to impersonate real users to gain access to sensitive devices or perform harmful actions. Remote attackers can inject network traffic into the smart home, either through a malicious app on a user’s smartphone or by sending traffic to the home router. The adversary is aware of standard network protocols and applications but does not have full knowledge of the exact user behavior.

We assume that adversaries are not present during ML training, which guarantees that the trained ML models for user authentication are trustworthy. Both types of adversaries might act at testing time to influence the ML model's decision. We assume that adversaries have limited interaction with the IoT home devices and cannot perfectly imitate users in their behavior. Data collection and the authentication module reside in a trusted device, such as the home router or a server. Compromising the authentication system by physically accessing it or intercepting communications is outside our scope.

## 3. System Design
### 3.1 Design Goals
In designing our system for user authentication in smart homes, we set the following goals:
- **Operate in a Smart Home Environment with Multiple Users:** The system should be used in a smart home environment with several users actively interacting with diverse IoT devices. The average American household size in 2018 was 2.53, with most households (98.66%) having at most six members. The system should provide good accuracy in classifying users from a small set of previously seen users.
- **Support Multiple Heterogeneous IoT Devices:** IoT devices are extremely heterogeneous and diverse. The challenge is to design a flexible, general monitoring platform that supports devices from different manufacturers and can be easily extended as new devices become available. Network traffic is more general and likely to support the diversity of IoT devices.
- **Maintain User Privacy:** User privacy is a crucial design consideration. The system should work without access to user personal identifiable information (PII). Most network traffic of IoT devices is over HTTPS, with encrypted payloads in the transmitted packets.
- **Capture User Actions for Behavioral Modeling:** User behavior is defined by their interaction with devices and applications, resulting in several packets disseminated over the network. An approach based on more general information, like network traffic, needs to map low-level information from network packets to higher-level user actions (e.g., brewing coffee or changing smart lock settings) to capture user behavior. This is challenging as a single action can generate many packets addressed to different external destinations.
- **Measure Authentication Confidence:** Most systems for access control and authorization need to decide whether a user is allowed to access a critical resource. Our goal is to create an authentication service that continuously generates authentication scores. These scores should provide a measure of authentication confidence, which higher-level authorization systems can leverage. For example, to perform a high-value financial transaction, the authorization system could set the authentication score threshold at 0.95 and require another authentication factor (e.g., SMS).

### 3.2 System Overview
**Our Approach:** We address the challenges raised by our design goals by using the IoT devices' network traffic from the home router. To preserve user privacy, we collect the headers of HTTPS packets, which include minimal information such as timing, ports, destination address, and bytes sent and received, posing low risk to user privacy. Additionally, to protect user privacy, we perform model training and testing locally in the user’s home rather than in the cloud. This implies that the authentication module must reside in the smart home. To address the mismatch between user-level and network-level data, we observe network traffic over a continuous time window and design an ML model that uses features aggregated over a recent time window to predict the user in the room. Finally, we train a multi-class classifier to predict the likelihood that a certain user is in the room based on the most recent activities.

**System Architecture:** Figure 1 provides an overview of our system architecture. We installed 15 IoT devices in the IoT lab at our institution and used the existing monitoring infrastructure to collect pcap files from all these devices. We conducted an IRB-approved user study with multiple users participating in data collection over three weeks. During the training period, we used labeled data of user sessions and extracted features from HTTP headers over a continuous time window (with varying length). We designed and tested multiple ML classification algorithms to achieve good accuracy in identifying users. During regular user interaction, the authentication module continuously receives data from the most recent observation window and computes an authentication score for each user. The score is made available to upper-level authorization systems that can implement flexible policies according to the level of risk tolerated. For example, these policies can be used for local services such as logging into a laptop, performing operations on IoT devices, or accessing cloud services, such as performing financial transactions.

## 4. Experimental Evaluation
Our experimental evaluation shows that a Gradient Boosting classifier achieves 81% precision and 80% recall in classifying six users based on IoT device features. For five users, the precision and recall are both 92% for a 25-minute observation window. We also designed a high-confidence ensemble classifier with two models trained on disjoint sets of features (one on 420 device features and the second on 2910 domain features). The ensemble generates an authentication score only when the two models agree on the prediction. An ensemble of two Gradient Boosting models achieves an F1 score of 0.86 for six users and 0.97 for five users (at the cost of not generating scores in 16 out of 91 sessions).

## 5. Related Work
[This section will discuss related work in the field of user authentication, particularly focusing on IoT and behavior-based authentication methods.]

## 6. Conclusion
[This section will summarize the key findings and contributions of the paper, and suggest future directions for research.]

## Appendix
[This section will include additional results and supplementary information.]

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text. It organizes the content into clear sections, refines the language, and ensures a logical flow of ideas.