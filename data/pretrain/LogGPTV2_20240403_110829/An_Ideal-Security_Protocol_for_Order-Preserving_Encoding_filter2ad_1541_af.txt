a value, its performance depends on the network latency
between the client and the server. To evaluate this, we
considered two scenarios. The ﬁrst is a worst-case scenario
where the client encrypts one value at a time; this forces the
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:52:32 UTC from IEEE Xplore.  Restrictions apply. 
application to suffer the network latency for each value. The
second is an application with a parallel workload that allows
it to encrypt multiple values at the same time, so that the
network latency can be amortized and overlapped for multiple
values; to ensure there is always enough parallel work to
keep the pipeline full, we used 5,000 concurrent threads.
Fig. 11 shows the results. As expected, the single-threaded
client’s performance drops as the network latency increases.
However, mOPE maintains high throughput for a concurrent
client that performs multiple operations in parallel.
d
n
o
c
e
s
r
e
p
d
e
t
p
y
r
c
n
e
s
m
e
t
I
104
103
102
101
100
Concurrent client
Single-threaded client
0
10
20
30
40
50
Roundtrip latency (msec)
Figure 11. Throughput of mOPE as a function of the client-server network
latency, for a single-threaded client and for a concurrent client that performs
multiple encryptions in parallel.
C. Storage and ciphertext sizes
To evaluate the storage cost of mOPE, we measured the
size of the on-disk representation of mOPE’s B-tree. On
average, we found that mOPE stores 40 bytes per encrypted
value, when encrypting 64-bit values.
D. Ciphertext update cost
To understand the impact of ciphertext updates in mOPE,
we measured the average number of existing ciphertexts
updated in a database when encrypting a new value. Fig. 12
shows the results. We can see that the number of rewrites
is around 2–4, and grows slowly as the number of items in-
creases. This shows that mOPE’s order-preserving encodings
are relatively stable, and do not change often as new values
are encrypted. A sequential workload incurs fewer rewrites,
because our 4-way B-tree ﬁlls nodes from left to right, and
incurs fewer rebalancings when inserting increasing values.
To understand the cost of ciphertext updates in a real
system, we used mOPE to encrypt data in a SQL database. We
analyzed the throughput of the scheme on both a sequential
workload and on a trace of INSERT and UPDATE queries
from TPC-C, an industry-standard database benchmark (as
mentioned in §VIII, we issue only one query at a time).
Fig. 13 shows the throughput when ciphertexts are updated in
the database (using our transformation summaries) and when
the ciphertexts are not updated. Overall, the cost of ciphertext
5
4
3
2
1
d
e
t
p
y
r
c
n
e
m
e
t
i
r
e
p
s
e
t
a
d
p
U
0
101
Random workload
Sequential workload
102
103
104
105
106
Number of items encrypted
Figure 12. Number of ciphertexts updated for each additional item encrypted
in mOPE, as a function of the total number of encrypted items.
updates is modest. We can see that for the sequential
workload, rewrites cause a small drop in throughput of
less than 15%. For TPC-C, the cost of rewrites is even
smaller because TPC-C inserts a large number of repeating
values, which do not modify mOPE’s tree, and thus do not
trigger rewrites. For TPC-C, the ﬁrst few values take longer
to encrypt because they are unique, and later throughput
increases due to repetitions.
104
103
d
n
o
c
e
s
r
e
p
s
e
i
r
e
u
Q
102
101
TPC-C queries without rewrites
TPC-C queries with rewrites
Sequential inserts, without rewrites
Sequential inserts, with rewrites
102
103
104
105
106
Number of items encrypted
Figure 13. Throughput of SQL queries per second for sequential INSERT
queries and for the TPC-C mix of INSERT and UPDATE queries, as a function
of the database size.
XI. CONCLUSION
We presented mOPE, the ﬁrst order-preserving encoding
scheme that achieves ideal IND-OCPA security, where an
adversary learns nothing but the order of elements based on
the ciphertexts. mOPE uses the idea of mutable ciphertexts,
and we show that mutable ciphertexts are required to achieve
IND-OCPA. We propose a stronger notion of same-time
OPE security that allows an adversary to learn only the order
of elements present in an encrypted database at the same
time, and present an extension of mOPE, called stOPE, that
achieves this stronger deﬁnition. We also present versions of
mOPE and stOPE that protect against a malicious server
476476
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:52:32 UTC from IEEE Xplore.  Restrictions apply. 
by using Merkle hashing. Finally, we show that mOPE
achieves good performance both in microbenchmarks and in
the context of an encrypted database running TPC-C queries,
and that it outperforms the state-of-the-art OPE scheme by
1-2 orders of magnitude.
ACKNOWLEDGMENTS
We thank Emily Stark, the anonymous reviewers, and our
shepherd, Sr ¯dan ˇCapkun, for their feedback. This work was
supported by NSF award IIS-1065219 and by Google.
REFERENCES
[1] D. Agrawal, A. El Abbadi, F. Emekci, and A. Metwally.
Database management as a service: Challenges and opportu-
nities. In ICDE, 2009.
[2] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu. Order
preserving encryption for numeric data. In ACM SIGMOD,
2004.
[3] G. W. Ang, J. H. Woelfel, and T. P. Woloszyn. System
and method of sort-order preserving tokenization. US Patent
Application 13/450,809, 2012.
[4] G. Antoshenkov, D. Lomet, and J. Murray. Order preserving
compression. In ICDE, 1996.
[5] C. Binnig, S. Hildenbrand, and F. Färber. Dictionary-based
order-preserving string compression for main memory column
stores. In ACM SIGMOD, 2009.
[6] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill. Order-
preserving symmetric encryption. In EUROCRYPT, 2009.
[7] A. Boldyreva, N. Chenette, and A. O’Neill. Order-preserving
encryption revisited: improved security analysis and alternative
solutions. In CRYPTO, 2011.
[8] D. Boneh and B. Waters. Conjunctive, subset, and range
queries on encrypted data. In Theory of Cryptography, 2007.
http://www.
[9] CipherCloud. Tokenization for cloud data.
ciphercloud.com/tokenization-cloud-data.aspx.
[10] R. Falkenrath and P. Rosenzweig. Encryption, not restriction,
is the key to safe cloud computing. Nextgov, 2012. http:
//www.nextgov.com/cloud-computing/2012/10/o/58608/.
[11] K. Fraser and T. Harris. Concurrent programming without
locks. ACM TOCS, 25(2), 2007.
[12] Gazzang. Gazzang zNcrypt: Transparent data encryption to
ﬁt your cloud. http://www.gazzang.com/products/zncrypt.
[13] T. Ge and S. B. Zdonik. Fast, secure encryption for indexing
in a column-oriented DBMS. In ICDE, 2007.
[14] C. Gentry. Fully homomorphic encryption using ideal lattices.
In ACM STOC, 2009.
[15] C. Gentry, S. Halevi, and N. P. Smart. Homomorphic
evaluation of the AES circuit. Cryptology ePrint Archive,
Report 2012/099, 2012.
[16] O. Goldreich. Foundations of Cryptography: Volume I Basic
Tools. Cambridge University Press, 2001.
[17] O. Goldreich. Foundations of Cryptography: Volume II Basic
Applications. Cambridge University Press, 2004.
[18] O. Goldreich, S. Micali, and A. Wigderson. How to play any
mental game. In ACM STOC, 1987.
[19] H. Hacigümü¸s, B. Iyer, C. Li, and S. Mehrotra. Executing SQL
over encrypted data in the database-service-provider model.
In ACM SIGMOD, 2002.
[20] H. Kadhem, T. Amagasa, and H. Kitagawa. MV-OPES:
Multivalued-order preserving encryption scheme: A novel
scheme for encrypting integer value to many different values.
IEICE Trans. on Info. and Systems, E93.D(9), 2010.
[21] H. Kadhem, T. Amagasa, and H. Kitagawa. A secure and
efﬁcient order preserving encryption scheme for relational
databases. In International Conference on Knowledge Man-
agement and Information Sharing, 2010.
[22] V. Kolesnikov and A. Shikfa. On the limits of privacy provided
by order-preserving encryption. Bell Labs Technical Journal,
17(3), 2012.
[23] S. Lee, T.-J. Park, D. Lee, T. Nam, and S. Kim. Chaotic
order preserving encryption for efﬁcient and secure queries
on databases. IEICE Trans. on Info. and Systems, E92.D(11),
2009.
[24] X. Liangliang, O. Bastani, and D. Lin. Security analysis
for order preserving encryption schemes. Technical Report
UTDCS-01-12, University of Texas at Dallas, 2012.
[25] I.-L. Y. Liangliang Xiao and D. Lin. Security analysis for
an order preserving encryption scheme. Technical Report
UTDCS-06-10, University of Texas at Dallas, 2010.
[26] D. Liu and S. Wang. Programmable order-preserving secure
index for encrypted database query. In IEEE International
Conference on Cloud Computing, 2012.
[27] D. Liu and S. Wang. Nonlinear order preserving index
for encrypted database query in service cloud environments.
Concurrency and Computation: Practice and Experience,
2013.
[28] Y. Lu. Privacy-preserving logarithmic-time search on en-
crypted data in cloud. In NDSS, 2012.
[29] R. C. Merkle. A certiﬁed digital signature. In CRYPTO, 1989.
[30] G. Özsoyoglu, D. A. Singer, and S. S. Chung. Anti-tamper
databases: Querying encrypted databases. In IFIP WG 11.3
Working Conf. on Database and Applications Security, 2003.
[31] O. Pandey and Y. Rouselakis. Property preserving symmetric
encryption. In EUROCRYPT, 2012.
[32] Perspecsys.
The PRS server: Data protection for
http://www.perspecsys.com/
cloud
perspecsys-cloud-protection-gateway/.
applications.
[33] R. A. Popa, C. M. S. Redﬁeld, N. Zeldovich, and H. Balakr-
ishnan. CryptDB: Protecting conﬁdentiality with encrypted
query processing. In ACM SOSP, 2011.
[34] R. A. Popa, F. H. Li, and N. Zeldovich. An ideal-security
protocol for order-preserving encoding. Cryptology ePrint
Archive, Mar. 2013. http://eprint.iacr.org/.
[35] F. Y. Rashid. Salesforce.com acquires SaaS encryption provider
Navajo Systems. eWeek.com, 2011.
[36] E. Shi, J. Bethencourt, T.-H. H. Chan, D. Song, and A. Perrig.
Multi-dimension range query over encrypted data. In IEEE
Symposium on Security and Privacy, 2007.
[37] Vormetric. Cloud encryption. http://www.vormetric.com/
products/encryption/cloud-encryption/.
[38] L. Xiao, I.-L. Yen, and D. T. Huynh. Extending order
preserving encryption for multi-user systems. Cryptology
ePrint Archive, Report 2012/192, 2012.
[39] L. Xiao, I.-L. Yen, and D. T. Huynh. A note for the ideal order-
preserving encryption object and generalized order-preserving
encryption. Cryptology ePrint Archive, Report 2012/350, 2012.
[40] D. Yum, D. Kim, J. Kim, P. Lee, and S. Hong. Order-
preserving encryption for non-uniformly distributed plaintexts.
In Intl. Workshop on Information Security Applications, 2011.
477477
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:52:32 UTC from IEEE Xplore.  Restrictions apply.