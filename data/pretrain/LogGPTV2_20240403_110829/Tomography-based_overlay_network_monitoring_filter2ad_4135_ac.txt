### 优化后的文本

#### 矩阵秩缺陷问题中的线性独立行和列
矩阵 \( G \) 由 \( k \) 行组成，分别对应于 \( G \) 和 \( b \)。在秩缺陷问题中，通常使用秩揭示分解（rank-revealing decompositions）来计算线性独立的行和列 [14]。对于一个 \( r \times s \) 的稠密矩阵且其秩为 \( k \)，常见的秩揭示分解方法包括完全选主元的高斯消去法（如 [25] 中所用）、带列选主元的 QR 分解以及奇异值分解（SVD）。前两种方法的时间复杂度为 \( O(rks) \)，而 SVD 的时间复杂度为 \( O(rs^2) \)。

我们的矩阵 \( G \) 非常稀疏，即每行只有少量非零元素。对于许多稀疏问题，秩揭示分解可以比稠密情况更快地计算出来。然而，具体的时间复杂度强烈依赖于问题的结构，稀疏矩阵的高效秩揭示分解仍然是一个开放的研究领域 [17, 21]。

#### 行选择算法
我们使用一种基于 QR 过程的变体（见 Algorithm 1）来选择行 [14, p.223]。该过程逐步构建分解：
\[
\bar{G}^T = QR
\]
其中 \( Q \in \mathbb{R}^{s \times k} \) 是具有正交列的矩阵，\( R \in \mathbb{R}^{k \times k} \) 是上三角矩阵。我们不显式存储 \( Q \)，而是将其表示为 \( R^{-1} \bar{G}^T \)。这个想法类似于经典的 Gram-Schmidt 算法：当检查每一行时，我们减去由之前行张成的空间中的任何分量，使得剩余部分与所有之前的行正交。如果剩余部分为零，则该行是线性相关的；否则，我们扩展分解。

在实际应用中，我们使用了一种变体算法，该算法利用了 LAPACK 库中的优化例程 [4] 并同时检查多行。处理每个向量的时间复杂度主要由求解三角系统以计算 \( \hat{R}_{12} \) 所需的时间决定，这需要 \( O(k^2) \) 的时间。整个算法的总时间复杂度为 \( O(rk^2) \)，并且界内的常数较小：在一个 1.5 GHz 的 Pentium 4 处理器上，我们的代码处理 \( n = 350 \) (即 \( r = 61075 \)) 和 \( k = 2958 \) 的问题大约需要十分钟。存储 \( R \) 因子所需的内存成本约为 \( k^2/2 \) 个单精度浮点数。

当 \( k \) 超过 10000 时，\( O(k^2) \) 的内存需求变得过高。我们注意到，如果叠加端主机的数量较少或我们放宽原始问题陈述，稠密分解方法可能仍然可行。

**Algorithm 1: Path (row) selection algorithm**
```pseudo
procedure SelectPath(G)
1 for every row v in G do
    ˆR12 := R−T ¯GvT = QT vT
2
    ˆR22 := (cid:11)v(cid:11)2 − (cid:11) ˆR12(cid:11)2
3
    if ˆR22 (cid:12)= 0 then
        Mark v as a measurement path
4
    end
    ˆG := (cid:20) ¯G
    v(cid:21)
    R := (cid:20)R ˆR12
    ˆR22(cid:21)
    0
end
```

#### 路径损耗计算
我们用于选择测量路径的 QR 分解也用于计算欠定系统 (7) 的解。为了选择唯一的解 \( x_G \) 满足 \( \bar{G}x_G = \bar{b} \)，我们施加额外的约束条件 \( x_G = \bar{G}^T y \)。然后可以计算：
\[
y := R^{-1} R^{-T} \bar{b}
\]
\[
x_G := \bar{G}^T y
\]
这是一种标准的方法，用于找到欠定系统的最小范数解（见 [14, 11]）。计算的主要成本在于求解两个三角线性系统以得到 \( y \)，这需要 \( O(k^2) \) 的时间。一旦计算出 \( x_G \)，我们可以计算 \( b := Gx_G \)，并从中推断出其余路径的损耗率。

#### 对网络拓扑测量误差的容忍度
我们的技术对网络拓扑测量误差具有容错性，因为我们的目标是估计端到端路径的损耗率，而不是内部链路的损耗率。例如，路由器的别名解析不佳可能会将一条物理链路呈现为多条链路。最坏的情况下，我们未能识别这些链路会导致更多的路径测量，因为 \( G \) 的秩更高。但我们仍能准确估计路径损耗率，这一点已在互联网实验中得到了验证 [7]。

#### 拓扑变化
在正常运行过程中，新的链路可能出现或消失，端主机之间的路由路径可能发生变化，主机可能进入或退出叠加网络。这些变化可能导致 \( G \) 中的行或列被添加或删除，或者 \( G \) 中的条目发生变化。我们设计了一系列高效的算法来添加/删除端主机并处理路由变化。我们增量地向 \( G \) 和 \( \bar{G} \) 添加/删除路径，每次路径变化最多需要 \( O(k^2) \) 的时间（见 [7]）。

#### 健壮性和实时响应
在某些情况下，叠加监测系统可能无法为某些路径提供实时损耗率估计。这种情况可能发生在刚刚检测到路由变化时，或者测量节点崩溃，或者某些节点刚刚加入或离开叠加网络。在我们增量设置新的测量路径并收集结果之前，短时间内有些路径的损耗率无法计算。然而，我们仍然可以返回计算损耗率的边界（见第 5 节）。例如，我们可以检查不可计算路径上的所有链路是否都被 \( \bar{G} \) 覆盖，如果是这样，我们可以快速给出一个上限（尽管可能是悲观的）。此外，这种边界对于某些应用来说可能已经足够。

### 讨论
在本节中，我们将框架推广到仅在受限测量下推断路径损耗率边界。

我们注意到，除了方程 (4) 之外，未知的 \( x_j \) 必须满足不等式 \( x_j \leq 0 \)。虽然我们在当前工作中没有使用这些不等式，但它们可以与 (4) 结合起来，从上下界两方面限制故障概率。例如，损失概率 \( l_j \) 受限于包含链路 \( j \) 的最不损失路径的损失概率。更一般地，我们有以下定理：

**定理 2.** 设 \( v \in \{0, 1\}^s \) 表示一个具有损失概率 \( p \) 的网络路径，设 \( w = G^T c \) 对于某个 \( c \in \mathbb{R} \)（即 \( w \in \text{Range}(G^T) \)）。则
1. 如果 \( v \leq w \) 元素逐项成立，则 \( \log(1 - p) \geq c^T b \)
2. 如果 \( v \geq w \) 元素逐项成立，则 \( \log(1 - p) \leq c^T b \)

**证明.** 在第一种情况下，\( v \leq w \) 使得 \( v - w \leq 0 \) 元素逐项成立。由于 \( x \leq 0 \) 元素逐项成立，因此 \( (v - w)^T x \geq 0 \)，或 \( v^T x \geq w^T x \)。我们知道 \( \log(1 - p) = v^T x \) 从 (3) 得出，并且 \( w^T x = c^T Gx = c^T b \)。通过替换，我们有 \( \log(1 - p) \geq c^T b \)。第二种情况几乎是相同的。

原则上，我们可以通过求解两个线性规划问题来计算路径损耗率的良好上下界：
1. 最大化 \( c_u^T b \) 使得 \( G^T c_u \geq v \)
2. 最小化 \( c_l^T b \) 使得 \( G^T c_l \leq v \)

那么 \( 1 - \exp(c_l^T b) \leq p \leq 1 - \exp(c_u^T b) \)。当 \( v \in \text{Range}(G^T) \) 时，我们有 \( v = G^T c_u = G^T c_l \)，此时边界是紧的。虽然这种方法似乎提供了可能最优的路径损耗概率边界，但我们尚未在实践中应用该技术。

### 结论
本文提出了一种基于层析成像的叠加网络监测系统。对于 \( n \) 个端主机的叠加网络，\( O(n^2) \) 个路径空间可以用 \( O(n \log n) \) 个路径基底来表征。我们选择性地监测这些基底路径，然后使用测量结果推断所有其他路径的损耗率。仿真和在互联网上的实际实现表明，我们的技术能够实现准确的损耗率估计。

为了更高效地选择监控路径，我们计划研究使用迭代方法 [5, 17] 如 CGNE 或 GMRES 来选择行并计算损耗率向量。在初步实验中，路径矩阵 \( G \) 已经表现出了良好的条件数，这表明迭代方法可能收敛得很快。我们还正在应用第 5 节中的不等式边界进行诊断，以检测在端到端拥塞发生时哪些链路或路径段出现故障。

### 参考文献
[1] Adams, A., et al. The use of end-to-end multicast measurements for characterizing internal network behavior. In IEEE Communications (May, 2000).

[2] Adler, M., et al. Tree layout for internal network characterizations in multicast networks. In 3rd International Workshop on Networked Group Communication (NGC) (2001).

[3] Andersen, D. G., Balakrishnan, H., Kaashoek, M. F., and Morris, R. Resilient overlay networks. In Proc. of ACM SOSP (2001).

[4] Anderson, E., et al. LAPACK Users’ Guide, third ed. Society for Industrial and Applied Mathematics, Philadelphia, PA, 1999.

[5] Barrett, R., et al. Templates for the Solution of Linear Systems: Building Blocks for Iterative Methods, 2nd Edition. SIAM, Philadelphia, PA, 1994.

[6] Bu, T., Duffield, N., Presti, F., and Towsley, D. Network tomography on general topologies. In ACM SIGMETRICS (2002).

[7] Chen, Y., Bindel, D., Song, H., and Katz, R. H. Tomography-based overlay network monitoring. Tech. Rep. UCB//CSD-03-1252, University of California, Berkeley, 2003.

[8] Chen, Y., Lim, K., Overton, C., and Katz, R. H. On the stability of network distance estimation. In ACM SIGMETRICS Performance Evaluation Review (PER) (Sep. 2002).

[9] Coates, M., Castro, R., and Nowak, R. Maximum likelihood identification of network topology from edge-based unicast measurements. In ACM SIGMETRICS (2002).

[10] Coates, M., Hero, A., Nowak, R., and Yu, B. Internet Tomography. IEEE Signal Processing Magazine 19, 3 (2002), 47–65.

[11] Demmel, J. Applied Numerical Linear Algebra. SIAM, 1997.

[12] Faloutsos, M., Faloutsos, P., and Faloutsos, C. On power-law relationship of the Internet topology. In ACM SIGCOMM (1999).

[13] Francis, P., et al. IDMaps: A global Internet host distance estimation service. IEEE/ACM Trans. on Networking (Oct. 2001).

[14] Golub, G., and Loan, C. V. Matrix Computations. The Johns Hopkins University Press, 1989.

[15] Govindan, R., and Tangmunarunkit, H. Heuristics for Internet map discovery. In IEEE INFOCOM (2000).

[16] Labovitz, C., Ahuja, A., Abose, A., and Jahanian, F. An experimental study of delayed Internet routing convergence. In Proc. of ACM SIGCOMM (2000).

[17] Meyer, C., and Pierce, D. Steps toward an iterative rank-revealing method. Tech. Rep. ISSTECH-95-013, Boeing Information and Support Services, 1995.

[18] Ng, T. S. E., and Zhang, H. Predicting Internet network distance with coordinates-based approaches. In Proc.of IEEE INFOCOM (2002).

[19] Ozmutlu, H. C., Gautam, N., and Barton, R. Managing end-to-end network performance via optimized monitoring strategies. Journal of Network and System Management, Special Issue on Management of Converged Networks 10, 1 (2002).

[20] Padmanabhan, V., Qiu, L., and Wang, H. Server-based inference of Internet performance. In IEEE INFOCOM (2003).

[21] Pierce, D., and Lewis, J. Sparse multifrontal rank revealing QR factorization. SIAM Journal on Matrix Analysis and Applications 18, 1 (January 1997).

[22] PlanetLab. http://www.planet-lab.org/.

[23] Ratnasamy, S., et al. Topologically-aware overlay construction and server selection. In Proc. of IEEE INFOCOM (2002).

[24] Rubenstein, D., Kurose, J. F., and Towsley, D. F. Detecting shared congestion of flows via end-to-end measurement. IEEE/ACM Transactions on Networking 10, 3 (2002).

[25] Shavitt, Y., Sun, X., Wool, A., and Yener, B. Computing the unmeasured: An algebraic approach to Internet mapping. In IEEE INFOCOM (2001).

[26] Tangmunarunkit, H., et al. Network topology generators: Degree-based vs structural. In ACM SIGCOMM (2002).

[27] Zhang, Y., et al. On the constancy of Internet path properties. In Proc. of SIGCOMM Internet Measurement Workshop (2001).