（（sum=sum+i））/dev/nu11=i))
#/dev/nul1<-判新金额是否为整数。
if [s?-ne 0]
<如果返回值不为0，即不是整数，则打印提示输入整数。
chen
echo
*then noney your input is error,must be int.*
else
sum=$((Ssun+Smoney))
#<==将金额加到总费用累。
#<==如果返回值为0，即表示金额为整数，则进行充值操作。
echo·资前余额为：Ssum
#<=打印充值后的金额。
fi
sendInfo()(
<定义发送短信的函数。
if[ $(sun)
-1t Smsg_fee ]
如果总费用小于15（单条短信的费用），则
打印then后面的提示。
then
printf·余额不足：Ssum，请光，n*
else
#<==如果总费用大于15（单条娅信的费用）则进入while循环。
while true
#<==注意这里的条件为真。
do
read-p·请输入短信内容（不能有空格）：nsg
<==提示用户输入要发送的信息。
（（g-Bgws-unss））s=wng
<==
减掉短信的费用。
printf *Send *$neg* successfully!\n*
<==打印成功发进短信的提示。
printf·当前余额为：S8umn*
<==打印当前余额。
if [$sum -1t $msg_fee ]
=如果总费用小于单条费用。
then
printf·余额不足，剩余Ssum分\n<则打印余额不足。
return1
<==跳出循环和函数。
fi
done
fi
main() (
<==定义主函数
vhile true
<==开始执行持续借环，条件始终为真，注意当条件始终为真时，
就要想办法在循环里如入跳出循环的命令。
do
menu
<==执行菜单函数。
read-p·请输入数字选择：·men
<==接收用户输入。
case *Smen* in
1)
<==当用户的输入为1，表示想充值了，则加载recharge充值函数。
recharge
2 )
<==当用户的输入为2，表示想发消息了，则加载nendInfo函数
sendInfo
3 )
<当用户的验入为3，则表示想退出了。
exit 1
*)
<==当用户的输入为其他懂，给出正确的输入提示。
printf·选择错误，必须是（11213}\n*
08ac
---
## Page 221
第10章while 循环和until循环的应用实践283
done
UTUW
<=最后执行主函数 main。
执行结果如下：
[root@oldboy scripts]#sh 10_5_1.sh
前余额为15分，每条短信需要15分
#<==执行脚本后，打印菜单，供用户选择。
2.发消息
1.充值
请输入数字选择：2
<==选择2。
请输入短信内容（不能有空格）：oldboy
<==短信内容为oldboy。
Send oldboy successfully!
前余为：0
余额不足，剩余0分
前余额为0分，每条短信需要15分
1.充值
2.发消息
3.退出
请输入数字选择：1
请验入金额充值：16
#<==选择1。
<输入充值金额。
当前余额为：16
当前余额为16分，每条规信需要15分
1.充值
2.发消惠
3.退出
请输入数字选择：2
请输入短信内容（不能有空格）：oldgir1
Send oldgirl
出前余额为：1
successfully!
余额不足，剩余1分
当前余额为1分，每条短信需要15分
1.充值
2.发消息
3.通出
请输入数字选择：3
参考答案4（专业脚本，来自学员二麻）：
[root@o1dboy scripts]cat 10_5_2.sh
1/bin/sh
TOTAL=500
<==定文总的手机费用，为了测试方便初始值为500。
---
## Page 222
204跟老男孩学Linux运维：Shell 编程实战
MSG_FEE=499
#<==定义一条短信费用，为了测试方便初始值为499，即发一条就得充值。