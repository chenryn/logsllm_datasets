only difﬁcult but also time-consuming for humans, with com-
pletion time of ≈10 seconds on average. While behavioral
CAPTCHAs are available, they suffer from privacy issues. A
prevalent example, reCAPTCHA [18], works by analyzing
user behavioral data (which requires sharing this data with
the CAPTCHA provider) and claims to work more efﬁciently
if used on multiple pages. In contrast, CACTI can provide
at least the equivalent of abuse-prevention as CAPTCHAs,
whilst minimizing the burden on users and offering strong
privacy guarantees.
Human presence detection. Human presence refers to
determining whether speciﬁc actions were performed by a
human. VButton [46] proposes a system design based on
ARM’s TrustZone [25]. Secure detection of human presence
is achieved by setting the display and the touch input periph-
erals as secure peripherals which can only be controlled by
the TEE while VButton UI is displayed. With a secure I/O
mechanism in place, user actions can be authenticated to orig-
inate from VButton UI by a remote server using software
attestation. Similarly, Not-a-Bot [42] designs a system based
on TPMs by tagging each network request with an attestation
assuring that the request has been performed not long after
a keyboard or mouse input by the user. Unfortunately, Intel
SGX does not support secure I/O and it is not currently possi-
ble to implement similar systems on devices with only Intel
SGX support. SGXIO [60] proposes an architecture for creat-
ing secure paths to I/O devices from enclaves using a trusted
stack which contains a hypervisor, I/O drivers and an enclave
for trusted boot. In addition, an untrusted VM hosts secure ap-
plications. The communication between secure applications
and drivers are encrypted using keys generated at the end of
the local attestation process. Unfortunately, the implementa-
tion of this system is not yet available. Fidelius [37] protects
user secrets from a compromised browser or OS by protecting
the path from the input and output peripherals to the hardware
enclave. Similar to SGXIO, this is a promising step towards
general-purpose trusted UI. If trusted UI capabilities do be-
come widely available on TEEs, these can complement our
CACTI design (e.g., providing stronger assurance of human
presence).
Privacy Pass. Privacy Pass [35] implements a browser ex-
tension to reduce the burden of CAPTCHAs for legitimate
users when visiting websites served by Cloudﬂare. When
a user solves a CAPTCHA, Cloudﬂare sends the user mul-
tiple anonymous cryptographic tokens, which the user can
later “spend” to access Cloudﬂare-operated services without
encountering additional CAPTCHAs Although Privacy Pass
signiﬁcantly beneﬁts benign users, it could still be exploited
by CAPTCHA farms. Additionally, Privacy Pass’ is currently
limited to Cloudﬂare users.
9 Conclusion & Future Work
CACTI is a novel approach for leveraging client-side TEEs
to help legitimate clients avoid solving CAPTCHAs on the
Web. The unforgeable yet privacy-preserving rate-proofs gen-
erated by the TEE provide strong assurance that the client
is not behaving abusively. Our proof-of-concept implemen-
tation demonstrates that rate-proofs can be generated in less
than 0.25 seconds on commodity hardware, and that CACTI
reduces data transfer by more than 98% compared to existing
CAPTCHA schemes. As for future work, we plan to employ
optimization techniques discussed in Section 7, implement
and evaluate CACTI on ARM TrustZone using OpenEnclave,
and explore new types of web security applications that are
enabled using client-side TEEs.
Acknowledgements
We thank the anonymous reviewers for their valuable com-
ments on prior versions of this paper. The ﬁrst author was
2576    30th USENIX Security Symposium
USENIX Association
supported in part by The Nakajima Foundation. The work of
UCI was supported in part by: NSF Award #:1840197, NSF
Award # 1956393, NCAE-C CCR 2020 Award #: H98230-
20-1-0345, as well as UCI VCR and School of ICS Seed
Funding Awards. The third author was supported by a US-UK
Fulbright Cyber Security Scholar Award.
References
[1] AntiCAPTCHA. https://anti-captcha.com/mainpage, [Online]
Accessed: 2020-05-22.
[2] Chrome Native Messaging Protocol.
https://developer.chrome.com/extensions/
nativeMessaging#native-messaging-host-protocol, [Online]
Accessed: 2020-02-09.
[3] Chrome Notiﬁcations.
https://developer.chrome.com/apps/notifications, [Online]
Accessed: 2020-02-14.
[4] Cloudﬂare Rate Limiting.
https://www.cloudflare.com/rate-limiting/, [Online]
Accessed: 2020-05-19.
[5] EPID SDK. https://github.com/Intel-EPID-SDK/epid-sdk,
[Online] Accessed: 2020-02-14.
[6] Google Chrome. https://www.google.com/chrome/, [Online]
Accessed: 2020-02-11.
[7] hCaptcha. https://www.hcaptcha.com/, [Online] Accessed:
2020-05-21.
[8] Intel Dynamic Application Loader Developer Guide: Monotonic
Counters. https://software.intel.com/en-us/
dal-developer-guide-features-monotonic-counters,
[Online] Accessed: 2020-02-05.
[9] Intel Integrated Performance Primitives Cryptography.
https://github.com/intel/ipp-crypto, [Online] Accessed:
2020-05-28.
[10] Intel NUC Kit NUC7PJYH.
https://ark.intel.com/content/www/us/en/ark/products/
126137/intel-nuc-kit-nuc7pjyh.html, [Online] Accessed:
2020-02-11.
[11] Intel Pentium Processor G4400. https:
//ark.intel.com/content/www/us/en/ark/products/88179/
intel-pentium-processor-g4400-3m-cache-3-30-ghz.html,
[Online] Accessed: 2020-05-19.
[12] JSMN JSON Parser. https://github.com/zserge/jsmn, [Online]
Accessed: 2020-02-13.
[13] Mbed TLS. https://github.com/ARMmbed/mbedtls, [Online]
Accessed: 2020-02-14.
[14] Moving from reCAPTCHA to hCaptcha. https://blog.
cloudflare.com/moving-from-recaptcha-to-hcaptcha/,
[Online] Accessed: 2020-05-19.
[15] Native Messaging. https:
//developer.chrome.com/extensions/nativeMessaging,
[Online] Accessed: 2020-02-13.
[16] Open Enclave SDK. https://openenclave.io/sdk/, [Online]
Accessed: 2020-02-14.
[17] Package captcha. https://github.com/dchest/captcha, [Online]
Accessed: 2020-05-21.
[18] reCAPTCHA.
https://www.google.com/recaptcha/intro/v3.html, [Online]
Accessed: 2020-02-05.
[19] reCAPTCHA v2.
https://developers.google.com/recaptcha/docs/display,
[Online] Accessed: 2020-02-13.
[20] runtime.Port. https:
//developer.chrome.com/extensions/runtime#type-Port,
[Online] Accessed: 2020-02-12.
[21] svg captcha. https://github.com/produck/svg-captcha,
[Online] Accessed: 2020-05-21.
[22] Top 10 Captcha Solving Services Compared.
https://prowebscraper.com/blog/
top-10-captcha-solving-services-compared/, [Online]
Accessed: 2020-05-22.
[23] Using Privacy Pass with Cloudﬂare.
https://support.cloudflare.com/hc/en-us/articles/
115001992652-Using-Privacy-Pass-with-Cloudflare,
[Online] Accessed: 2020-06-01.
[24] I. Anati, S. Gueron, S. Johnson, and V. Scarlata. Innovative technology
for CPU based attestation and sealing. In Proceedings of the 2nd
international workshop on hardware and architectural support for
security and privacy, volume 13, page 7. ACM New York, NY, USA,
2013.
[25] ARM Holdings. ARM Security Technology, Building a Secure System
using TrustZone Technology, 2009.
[26] G. Ateniese, J. Camenisch, M. Joye, and G. Tsudik. A Practical and
Provably Secure Coalition-Resistant Group Signature Scheme. In
M. Bellare, editor, Advances in Cryptology — CRYPTO 2000, pages
255–270, Berlin, Heidelberg, 2000. Springer Berlin Heidelberg.
[27] M. H. Au, W. Susilo, and Y. Mu. Constant-size dynamic k-TAA. In
International conference on security and cryptography for networks,
pages 111–125. Springer, 2006.
[28] E. Brickell, J. Camenisch, and L. Chen. Direct anonymous attestation.
In Proceedings of the 11th ACM conference on Computer and
communications security, pages 132–145, 2004.
[29] E. Brickell, L. Chen, and J. Li. A static difﬁe-hellman attack on
several direct anonymous attestation schemes. In International
Conference on Trusted Systems, pages 95–111. Springer, 2012.
[30] E. Brickell and J. Li. Enhanced Privacy ID: A Direct Anonymous
Attestation Scheme with Enhanced Revocation Capabilities. In
Proceedings of the 2007 ACM Workshop on Privacy in Electronic
Society, WPES ’07, page 21–30, New York, NY, USA, 2007.
Association for Computing Machinery.
[31] E. Bursztein, S. Bethard, C. Fabry, J. C. Mitchell, and D. Jurafsky.
How good are humans at solving CAPTCHAs? A large scale
evaluation. In 2010 IEEE symposium on security and privacy, pages
399–413. IEEE, 2010.
[32] C.-M. Cheng, H. Kung, and K.-S. Tan. Use of spectral analysis in
defense against DoS attacks. In Global Telecommunications
Conference, 2002. GLOBECOM’02. IEEE, volume 3, pages
2143–2148. IEEE, 2002.
[33] J. Danisevskis. Android Protected Conﬁrmation: Taking transaction
security to the next level.
https://developer.android.com/training/articles/
security-android-protected-confirmation, [Online]
Accessed: 2020-02-05.
[34] R. Datta, J. Li, and J. Z. Wang. IMAGINATION: a robust image-based
CAPTCHA generation system. In Proceedings of the 13th annual
ACM international conference on Multimedia, pages 331–334, 2005.
[35] A. Davidson, I. Goldberg, N. Sullivan, G. Tankersley, and F. Valsorda.
Privacy pass: Bypassing internet challenges anonymously.
Proceedings on Privacy Enhancing Technologies, 2018(3):164–180,
2018.
USENIX Association
30th USENIX Security Symposium    2577
[36] X. Ding and G. Tsudik. Initializing trust in smart devices via presence
attestation. Computer Communications, 131:35 – 38, 2018.
[37] S. Eskandarian, J. Cogan, S. Birnbaum, P. C. W. Brandon, D. Franke,
F. Fraser, G. Garcia, E. Gong, H. T. Nguyen, T. K. Sethi, V. Subbiah,
M. Backes, G. Pellegrino, and D. Boneh. Fidelius: Protecting user
secrets from compromised browsers. In 2019 IEEE Symposium on
Security and Privacy (SP), pages 264–280, 2019.
[38] C. A. Fidas, A. G. Voyiatzis, and N. M. Avouris. On the necessity of
user-friendly CAPTCHA. In Proceedings of the SIGCHI Conference
on Human Factors in Computing Systems, pages 2623–2626, 2011.
[39] H. Gao, W. Wang, and Y. Fan. Divide and conquer: an efﬁcient attack
on Yahoo! CAPTCHA. In 2012 IEEE 11th International Conference
on Trust, Security and Privacy in Computing and Communications,
pages 9–16. IEEE, 2012.
[40] P. Golle. Machine learning attacks against the Asirra CAPTCHA. In
Proceedings of the 15th ACM conference on Computer and
communications security, pages 535–542, 2008.
[41] R. Gossweiler, M. Kamvar, and S. Baluja. What’s up CAPTCHA? A
CAPTCHA based on image orientation. In Proceedings of the 18th
international conference on World wide web, pages 841–850, 2009.
[42] R. Gummadi, H. Balakrishnan, P. Maniatis, and S. Ratnasamy.
Not-a-Bot: Improving Service Availability in the Face of Botnet
Attacks. In NSDI, volume 9, pages 307–320, 2009.
[43] M. Hoekstra, R. Lal, P. Pappachan, V. Phegade, and J. Del Cuvillo.
Using innovative instructions to create trustworthy software solutions.
HASP@ ISCA, 11(10.1145):2487726–2488370, 2013.
[44] C. A. Kerrache, N. Lagraa, C. T. Calafate, and A. Lakas. TFDD: A
trust-based framework for reliable data delivery and DoS defense in
VANETs. Vehicular Communications, 9:254–267, 2017.
[45] A. Leung, L. Chen, and C. J. Mitchell. On a possible privacy ﬂaw in
direct anonymous attestation (DAA). In International Conference on
Trusted Computing, pages 179–190. Springer, 2008.
[46] W. Li, S. Luo, Z. Sun, Y. Xia, L. Lu, H. Chen, B. Zang, and H. Guan.
Vbutton: Practical attestation of user-driven operations in mobile apps.
In Proceedings of the 16th Annual International Conference on Mobile
Systems, Applications, and Services, pages 28–40, 2018.
[47] X. Liu, X. Yang, and Y. Lu. To ﬁlter or to authorize: Network-layer
DoS defense against multimillion-node botnets. In Proceedings of the
ACM SIGCOMM 2008 conference on Data communication, pages
195–206, 2008.
[48] F. McKeen, I. Alexandrovich, A. Berenzon, C. V. Rozas, H. Shaﬁ,
V. Shanbhogue, and U. R. Savagaonkar. Innovative instructions and
software model for isolated execution. Hasp@ isca, 10(1), 2013.
[49] G. Mori and J. Malik. Recognizing objects in adversarial clutter:
Breaking a visual CAPTCHA. In 2003 IEEE Computer Society
Conference on Computer Vision and Pattern Recognition, 2003.
Proceedings., volume 1, pages I–I. IEEE, 2003.
[50] M. Motoyama, K. Levchenko, C. Kanich, D. McCoy, G. M. Voelker,
and S. Savage. Re: CAPTCHAs-Understanding CAPTCHA-Solving
Services in an Economic Context. In USENIX Security Symposium,
volume 10, page 3, 2010.
[51] X. Ouyang, B. Tian, Q. Li, J.-y. Zhang, Z.-M. Hu, and Y. Xin. A novel
framework of defense system against DoS attacks in wireless sensor
networks. In 2011 7th International Conference on Wireless
Communications, Networking and Mobile Computing, pages 1–5.
IEEE, 2011.
[52] T. Peng, C. Leckie, and K. Ramamohanarao. Survey of network-based
defense mechanisms countering the DoS and DDoS problems. ACM
Computing Surveys (CSUR), 39(1):3–es, 2007.
[53] P. Perlegos. DoS defense in structured peer-to-peer networks.
Computer Science Division, University of California, 2004.
[54] C. Priebe, K. Vaswani, and M. Costa. EnclaveDB: A secure database
using SGX. In 2018 IEEE Symposium on Security and Privacy (SP),
pages 264–278. IEEE, 2018.
[55] J. Protzenko, B. Parno, A. Fromherz, C. Hawblitzel, M. Polubelova,
K. Bhargavan, B. Beurdouche, J. Choi, A. Delignat-Lavaud,
C. Fournet, N. Kulatova, T. Ramananandro, A. Rastogi, N. Swamy,
C. Wintersteiger, and S. Zanella-Beguelin. EverCrypt: A Fast, Veriﬁed,
Cross-Platform Cryptographic Provider. Cryptology ePrint Archive,
Report 2019/757, 2019.
[56] C. Rudolph. Covert identity information in direct anonymous
attestation (DAA). In IFIP International Information Security
Conference, pages 443–448. Springer, 2007.
[57] M. Sanghavi and S. Doshi. Progressive captcha, Apr. 30 2009. US
Patent App. 11/929,716.
[58] L. von Ahn, M. Blum, N. J. Hopper, and J. Langford. CAPTCHA:
Using Hard AI Problems for Security. In E. Biham, editor, Advances
in Cryptology — EUROCRYPT 2003, pages 294–311, Berlin,
Heidelberg, 2003. Springer Berlin Heidelberg.
[59] J. Z. Wang, R. Datta, and J. Li. Image-based CAPTCHA generation
system, Apr. 19 2011. US Patent 7,929,805.
[60] S. Weiser and M. Werner. SGXIO: Generic trusted I/O path for Intel
SGX. In Proceedings of the Seventh ACM on Conference on Data and
Application Security and Privacy, pages 261–268, 2017.
[61] J. Yan and A. S. El Ahmad. A Low-cost Attack on a Microsoft
CAPTCHA. In Proceedings of the 15th ACM conference on Computer
and communications security, pages 543–554, 2008.
[62] Z. Zhang, X. Ding, G. Tsudik, J. Cui, and Z. Li. Presence Attestation:
The Missing Link in Dynamic Trust Bootstrapping. In Proceedings of
the 2017 ACM SIGSAC Conference on Computer and
Communications Security, CCS ’17, page 89–102, New York, NY,
USA, 2017. Association for Computing Machinery.
2578    30th USENIX Security Symposium
USENIX Association