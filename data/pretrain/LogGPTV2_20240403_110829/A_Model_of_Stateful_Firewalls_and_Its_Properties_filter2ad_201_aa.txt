title:A Model of Stateful Firewalls and Its Properties
author:Mohamed G. Gouda and
Alex X. Liu
A Model of Stateful Firewalls and its Properties
Mohamed G. Gouda
and
Alex X. Liu1
Department of Computer Sciences,
The University of Texas at Austin,
Austin, Texas 78712-1188, U.S.A.
Email: {gouda, alex}@cs.utexas.edu
Abstract
We propose the ﬁrst model of stateful ﬁrewalls. In this
model, each stateful ﬁrewall has a variable set called the
state of the ﬁrewall, which is used to store some packets
that the ﬁrewall has accepted previously and needs to re-
member in the near future. Each stateful ﬁrewall consists of
two sections: a stateful section and a stateless section. Upon
receiving a packet, the ﬁrewall processes it in two steps. In
the ﬁrst step, the ﬁrewall augments the packet with an ad-
ditional ﬁeld called the tag, and uses the stateful section to
compute the value of this ﬁeld according to the current state
of the ﬁrewall. In the second step, the ﬁrewall compares
the packet together with its tag value against a sequence of
rules in the stateless section to identify the ﬁrst rule that the
packet matches: the decision of this rule determines the fate
of the packet. Our model of stateful ﬁrewalls has several
favorable properties. First, despite its simplicity, it can ex-
press a variety of state tracking functionalities. Second, it
allows us to inherit the rich results in stateless ﬁrewall de-
sign and analysis. Third, it provides backward compatibil-
ity such that a stateless ﬁrewall can also be speciﬁed using
our model. This paper goes beyond proposing this state-
ful ﬁrewall model itself. A signiﬁcant portion of this paper
is devoted to analyzing the properties of stateful ﬁrewalls
that are speciﬁed using our model. We outline a method for
verifying whether a ﬁrewall is truly stateful. The method
is based on the three properties of ﬁrewalls: conforming,
grounded, and proper. We show that if a ﬁrewall satisﬁes
these three properties, then the ﬁrewall is truly stateful.
1 Introduction
Serving as the ﬁrst line of defense against unauthorized
and potentially malicious trafﬁc, ﬁrewalls have been widely
1Alex X. Liu is the corresponding author of this paper.
deployed in most businesses and institutions for securing
private networks. A ﬁrewall is placed at the point of entry
between a private network and the outside Internet so that
all incoming and outgoing packets have to pass through it.
The function of a ﬁrewall is to map each incoming or out-
going packet to one of a set of predeﬁned decisions, such as
accept or discard. Based on how a decision is made for ev-
ery packet, ﬁrewalls are categorized into stateless ﬁrewalls
and stateful ﬁrewalls. If a ﬁrewall decides the fate of every
packet solely by examining the packet itself, then the ﬁre-
wall is called a stateless ﬁrewall. If a ﬁrewall decides the
fate of some packets not only by examining the packet it-
self but also by examining the packets that the ﬁrewall has
accepted previously, then the ﬁrewall is called a stateful ﬁre-
wall. Using a stateful ﬁrewall to protect a private network,
one can achieve ﬁner access control by tracking the commu-
nication state between the private network and the outside
Internet. For example, a stateful ﬁrewall can refuse to ac-
cept any packet from a remote host to a local host unless the
local host has previously sent a packet to the remote host.
Although a variety of stateful ﬁrewall products have
been available and deployed on the Internet for some time,
such as Cisco PIX Firewalls [4], Cisco Reﬂexive ACLs [5],
CheckPoint FireWall-1 [3] and Netﬁlter/IPTables [13], no
model for specifying stateful ﬁrewalls exists. The lack of
such a model constitutes a signiﬁcant impediment for fur-
ther development of stateful ﬁrewall technologies. First,
without a model, it is difﬁcult to conduct research on state-
ful ﬁrewalls. This explains why so little research on state-
ful ﬁrewalls has been done so far.
In contrast, beneﬁt-
ing from the well-established rule based model of stateless
ﬁrewalls, the research results for stateless ﬁrewalls have
been numerous. People have known how to design state-
less ﬁrewalls [2, 7, 8, 10] and how to analyze stateless ﬁre-
walls [1, 6, 9, 11, 12, 16]. But the question of how to design
and analyze stateful ﬁrewalls remains unanswered. Second,
because there is no speciﬁcation model for stateful ﬁrewalls,
in existing stateful ﬁrewall products, state tracking func-
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Michigan State University. Downloaded on October 21, 2009 at 22:54 from IEEE Xplore.  Restrictions apply. 
tionalities have been hard coded and different vendors hard
code different state tracking functionalities. For example,
the Cisco PIX Firewalls do not track the state for ICMP
packets. Consequently, it is hard for the administrator of
such a ﬁrewall to track the Ping [14] protocol. Last, without
a speciﬁcation model, it is difﬁcult to analyze the properties
of stateful ﬁrewalls. For example, it is difﬁcult to analyze
the properties of existing stateful ﬁrewalls because some of
the functions of these ﬁrewalls are hard coded while others
are speciﬁed by their administrators. All in all, a speciﬁca-
tion model for stateful ﬁrewalls is greatly needed.
In this paper, we propose the ﬁrst stateful ﬁrewall model.
In our ﬁrewall model, each ﬁrewall has a variable set called
the state of the ﬁrewall, which is used to store some pack-
ets that the ﬁrewall has accepted previously and needs to
remember in the near future. Each ﬁrewall consists of two
sections: a stateful section and a stateless section. Each sec-
tion consists of a sequence of rules. For every packet, the
stateful section is used to check whether the state has a pre-
vious packet that may affect the fate of the current packet.
To store this checking result, we assume that each packet
has an additional ﬁeld called the tag. The stateless section
is used to decide the fate of each packet based on the infor-
mation in the packet itself and its tag value.
Our stateful ﬁrewall model has the following favorable
properties. First, it can express a variety of state tracking
functionalities. Using a set of packets to record communi-
cation state provides a great deal of ﬂexibility in expressing
state tracking functionalities since the state of a communi-
cation protocol is characterized by packets. In a sense, our
stateful ﬁrewall model captures the essence of communica-
tion states. Second, because we separate a ﬁrewall into a
stateful section and a stateless section, we can inherit the
existing rich results in designing and analyzing stateless
ﬁrewalls because a stateless section alone is in fact a full-
ﬂedged stateless ﬁrewall. Third, our model is simple, easy
to use, easy to understand, and easy to implement. Last, our
model is a generalization of the current stateless ﬁrewall
model. Although our model is intended to specify stateful
ﬁrewalls, it can also be used to specify stateless ﬁrewalls,
simply by leaving the stateful section empty and keeping
the state empty.
This paper goes beyond proposing the stateful ﬁrewall
model itself. A signiﬁcant portion of this paper is devoted to
analyzing the properties of stateful ﬁrewalls that are spec-
iﬁed using our model. We outline a method for verifying
that a ﬁrewall is truly stateful. The method is based on three
properties of ﬁrewalls: conforming, grounded, and proper.
We show that if a ﬁrewall satisﬁes these three properties,
then the ﬁrewall is truly stateful.
The rest of this paper proceeds as follows. In Section
2, we introduce the syntax and semantics of our ﬁrewall
model. In Section 3, we give two examples of stateful ﬁre-
walls that are speciﬁed using our model. In Section 4, we
discuss how to remove packets that are no longer needed
from the state of a ﬁrewall. In Section 5, we study the issues
related to ﬁrewall states. In Section 6, we present a method
for verifying that a ﬁrewall is truly stateful. In Section 7,
we give concluding remarks.
For simplicity, in the rest of this paper, we use “ﬁrewall”
to mean “stateful ﬁrewall” unless otherwise speciﬁed.
2 Firewall Model
In this section, we introduce our ﬁrewall model through
an example of a simple ﬁrewall that resides on the gateway
router depicted in Figure 1. This router has two interfaces:
interface 0, which connects the router to the outside Inter-
net, and interface 1, which connects the router to a private
network.
Firewall
(Gateway Router)
Mail Server
(IP: 192.1.2.3)
Host 1
Host 2
Internet
                0       1
EM
ISC
C
OS
Y
ST
S
A private network
Figure 1. A ﬁrewall for a private network
This ﬁrewall tracks the Ping protocol (Packet Internet
Groper Protocol) [14] to counter “smurf” attacks. The Ping
protocol is used by a host to determine whether another host
is up. When a host A wants to test whether a host B is up,
A sends to B a series of ICMP (Internet Control Message
Protocol) ping (i.e., echo request) packets. All of these ping
packets have the same ID but different sequence numbers.
When B receives from A a ping packet with ID x and se-
quence number y, B sends back to A a pong (i.e., echo
reply) packet with the same ID x and the same sequence
number y. The “smurf” attack, a type of Denial of Service
attack, works as follows. An attacker sends a ping packet,
whose source IP address has been forged to be the IP ad-
dress of a victim host, to the broadcast address of a subnet-
work. Subsequently, every host on the subnetwork will send
a pong packet to the victim host.
One way to counter “smurf” attacks for a private network
is to use a ﬁrewall to discard every incoming pong packet
unless the packet corresponds to a previous ping packet sent
from the private network. Suppose that we want to conﬁg-
ure the ﬁrewall in Figure 1 in such a fashion. When a pong
packet arrives, the ﬁrewall needs to check whether it has
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Michigan State University. Downloaded on October 21, 2009 at 22:54 from IEEE Xplore.  Restrictions apply. 
2
Stateful Section:
R1 : I ∈ {0} ∧ P ∈ {icmp} ∧ T ∈ {pong} ∧ S = D(cid:1) ∧ D = S(cid:1) ∧ ID = ID
Stateless Section:
r1 : I ∈ {1} ∧ P ∈ {icmp}∧T ∈ {ping}∧tag ∈ all → accept; insert
∧tag ∈ all → accept
r2 : I ∈ {1} ∧ P ∈ all
r3 : I ∈ {0} ∧ P ∈ {icmp}∧T ∈ {pong}∧tag ∈ {1}→ accept
r4 : I ∈ {0} ∧ P ∈ {icmp}∧T ∈ {pong}∧tag ∈ {0}→ discard
r5 : I ∈ {0} ∧ P ∈ all
∧tag ∈ all → accept
∧T ∈ all
∧T ∈ all
(cid:1) ∧ SN = SN
(cid:1) → tag := 1
Figure 2. Tracking the Ping protocol
seen the corresponding ping packet. This requires the ﬁre-
wall to remember the ping packets sent from the private net-
work to the outside. In our ﬁrewall model, each ﬁrewall has
a variable set called the state. The state of a ﬁrewall con-
tains the packets that the ﬁrewall has accepted previously
and needs to remember in the near future. In this ﬁrewall
example, we store in the state of the ﬁrewall the ping pack-
ets that are sent from the private network to the outside In-
ternet.
In our ﬁrewall model, each ﬁrewall consists of two sec-
tions: a stateful section and a stateless section. The stateful
section is used to check each packet against the state. The
stateless section is used to decide the fate of a packet af-
ter the packet has been checked against the state. To store
the checking result of the stateful section for each packet,
we assume that each packet has an additional ﬁeld called
the tag. The value of the tag ﬁeld of a packet is an integer,
whose initial value is zero. The domain of this tag ﬁeld de-
pends on how many possible tag values that a ﬁrewall needs.
In the above ﬁrewall example, when a packet arrives, if it is
a pong packet and its corresponding ping packet is in the
state, then the tag ﬁeld of the packet is assigned 1; other-
wise the tag ﬁeld of the packet retains the initial value of
0. Therefore, the domain of the tag ﬁeld in this example is
[0, 1].
We deﬁne a packet over the ﬁelds F1,··· , Fd to be a d-
tuple (p1,··· , pd) where each pi is in the domain D(Fi)
of ﬁeld Fi, and each D(Fi) is an interval of nonnegative
integers. For example, the domain of the source address in
an IP packet is [0, 232).
The stateful section of a ﬁrewall consists a sequence of
rules where each rule is called a stateful rule. A stateful rule
is of the form
d, tag(cid:1)) → tag := x
1,··· , F
P (F1,··· , Fd, F
(cid:1)
(cid:1)
1,··· , F
where P (F1,··· , Fd, F
d, tag(cid:1)) is a predicate over
(cid:1)
(cid:1)
(p1,··· , pd)
F1,··· , Fd, F
1,··· , F
d, tag(cid:1)
(cid:1)
(cid:1)
matches the above rule iff (if and only if) there exists a
(cid:1) in the state of the
packet (p
ﬁrewall such that P (p1,··· , pd, p
(cid:1)) is true. The
meaning of this stateful rule is as follows. Given a packet p
(cid:1)
d) with tag value t
1,··· , p
(cid:1)
A packet
.
1,··· , p
(cid:1)
(cid:1)