### System Information
- OpenCV Python version: 4.7.0
- Operating System / Platform: Ubuntu 22.04
- OpenVINO version: 2022.2.0 (specific version required)
- Python version: 3.9.16 (highest version supported by OpenVINO 2022.2.0)

### Detailed Description
I am working in a virtual environment named `py3.9_openvino_env`. I followed the instructions with the following CMake flags:

```sh
-D BUILD_INFO_SKIP_EXTRA_MODULES=ON \
-D BUILD_EXAMPLES=OFF \
-D BUILD_JASPER=OFF \
-D BUILD_JAVA=OFF \
-D BUILD_JPEG=ON \
-D BUILD_APPS_LIST=version \
-D BUILD_opencv_apps=ON \
-D BUILD_opencv_java=OFF \
-D BUILD_OPENEXR=OFF \
-D BUILD_PNG=ON \
-D BUILD_TBB=OFF \
-D BUILD_WEBP=OFF \
-D BUILD_ZLIB=ON \
-D WITH_1394=OFF \
-D WITH_CUDA=OFF \
-D WITH_EIGEN=OFF \
-D WITH_GPHOTO2=OFF \
-D WITH_GSTREAMER=ON \
-D OPENCV_GAPI_GSTREAMER=OFF \
-D WITH_GTK_2_X=OFF \
-D WITH_IPP=OFF \
-D WITH_JASPER=OFF \
-D WITH_LAPACK=OFF \
-D WITH_MATLAB=OFF \
-D WITH_MFX=ON \
-D WITH_OPENCLAMDBLAS=OFF \
-D WITH_OPENCLAMDFFT=OFF \
-D WITH_OPENEXR=OFF \
-D WITH_OPENJPEG=OFF \
-D WITH_QUIRC=OFF \
-D WITH_TBB=OFF \
-D WITH_TIFF=OFF \
-D WITH_VTK=OFF \
-D WITH_WEBP=OFF \
-D CMAKE_USE_RELATIVE_PATHS=ON \
-D CMAKE_SKIP_INSTALL_RPATH=ON \
-D ENABLE_BUILD_HARDENING=ON \
-D ENABLE_CONFIG_VERIFICATION=ON \
-D ENABLE_PRECOMPILED_HEADERS=OFF \
-D ENABLE_CXX11=ON \
-D INSTALL_PDB=ON \
-D INSTALL_TESTS=ON \
-D INSTALL_C_EXAMPLES=ON \
-D INSTALL_PYTHON_EXAMPLES=ON \
-D CMAKE_INSTALL_PREFIX=install \
-D OPENCV_SKIP_PKGCONFIG_GENERATION=ON \
-D OPENCV_SKIP_PYTHON_LOADER=OFF \
-D OPENCV_SKIP_CMAKE_ROOT_CONFIG=ON \
-D OPENCV_GENERATE_SETUPVARS=OFF \
-D OPENCV_BIN_INSTALL_PATH=bin \
-D OPENCV_INCLUDE_INSTALL_PATH=include \
-D OPENCV_LIB_INSTALL_PATH=lib \
-D OPENCV_CONFIG_INSTALL_PATH=cmake \
-D OPENCV_3P_LIB_INSTALL_PATH=3rdparty \
-D OPENCV_SAMPLES_SRC_INSTALL_PATH=samples \
-D OPENCV_DOC_INSTALL_PATH=doc \
-D OPENCV_OTHER_INSTALL_PATH=etc \
-D OPENCV_LICENSES_INSTALL_PATH=etc/licenses \
-D OPENCV_INSTALL_FFMPEG_DOWNLOAD_SCRIPT=ON \
-D BUILD_opencv_world=OFF \
-D BUILD_opencv_python2=OFF \
-D BUILD_opencv_python3=ON \
-D PYTHON3_PACKAGES_PATH=install/python/python3 \
-D PYTHON3_LIMITED_API=ON \
-D HIGHGUI_PLUGIN_LIST=all \
-D OPENCV_PYTHON_INSTALL_PATH=python \
-D CPU_BASELINE=SSE4_2 \
-D OPENCV_IPP_GAUSSIAN_BLUR=ON \
-D WITH_OPENVINO=ON \
-D VIDEOIO_PLUGIN_LIST=gstreamer,mfx \
-D CMAKE_EXE_LINKER_FLAGS=-Wl,--allow-shlib-undefined \
-D CMAKE_BUILD_TYPE=Release ~/opencv
```

After the installation, I do not see "Intel Inference Engine" listed under "Other third-party libraries":

```sh
$ python -c "import cv2; print(cv2.__file__)"
/home/user0/py3.9_openvino_env/lib/python3.9/site-packages/cv2/__init__.py

$ python -c "import cv2; print(cv2.getBuildInformation())"
General configuration for OpenCV 4.7.0 =====================================
  Version control:               4.7.0-dirty
  Extra modules:
    Location (extra):            /io/opencv_contrib/modules
    Version control (extra):     4.7.0
...
  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /io/_skbuild/linux-x86_64-3.7/cmake-build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /io/_skbuild/linux-x86_64-3.7/cmake-build/3rdparty/ippicv/ippicv_lnx/iw
    VA:                          NO
    Lapack:                      YES (/lib64/libopenblas.so)
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.19.1)
  OpenCL:                        YES (no extra features)
    Include path:                /io/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load
...
```

When running a test code (provided below, a simple test to check if the model is read correctly), I encounter an error:

```sh
$ python opencv_app.py
Traceback (most recent call last):
  File "/home/user0/Downloads/model_files/opencv_app.py", line 19, in 
    net = cv2.dnn.readNetFromModelOptimizer(bin=model_bin, xml=config_xml)
cv2.error: OpenCV(4.7.0) /io/opencv/modules/dnn/src/plugin_wrapper.impl.hpp:313: error: (-213:The function/feature is not implemented) Backend (plugin) is not available: 'openvino' in function 'createPluginDNNNetworkBackend'
```

Reviewing the changelog, I noticed that OpenCV 4.6.0 has initial support for OpenVINO 2022.1, which is one version older than the one I am using. Could this behavior be due to the fact that OpenVINO 2022.2 is not explicitly supported by OpenCV yet?

P.S. I also tried another set of instructions, but the Intel Inference Engine still does not appear in `cv2.getBuildInformation()`:

```sh
$ echo $ngraph_DIR
/home/user0/intel/openvino_2022.2.0/runtime/cmake
```

### Steps to Reproduce
**Code: `opencv_app.py`**

```python
import cv2

model_bin = '/home/user0/Downloads/model/FP16/ssd_mobilenet_v1_coco.bin'
config_xml = '/home/user0/Downloads/model/FP16/ssd_mobilenet_v1_coco.xml'

net = cv2.dnn.readNetFromModelOptimizer(bin=model_bin, xml=config_xml)
net.setPreferableBackend(cv2.dnn.DNN_BACKEND_INFERENCE_ENGINE)
net.setPreferableTarget(cv2.dnn.DNN_TARGET_MYRIAD)
```

The `.bin` and `.xml` files are included in `ssd_mobilenet_v1_coco.zip`, which is distributed by OpenVINO. I used the OpenVINO tools `omz_downloader` to download the original TensorFlow model files and `omz_converter` to convert them to the IR format (.bin & .xml).

**Error:**

```sh
$ python opencv_app.py
Traceback (most recent call last):
  File "/home/user0/Downloads/model/opencv_app.py", line 19, in 
    net = cv2.dnn.readNetFromModelOptimizer(bin=model_bin, xml=config_xml)
cv2.error: OpenCV(4.7.0) /io/opencv/modules/dnn/src/plugin_wrapper.impl.hpp:313: error: (-213:The function/feature is not implemented) Backend (plugin) is not available: 'openvino' in function 'createPluginDNNNetworkBackend'
```

### Issue Submission Checklist
- I am reporting an issue, not asking a question.
- I have checked the problem with documentation, FAQ, open issues, forum.opencv.org, Stack Overflow, etc., and have not found any solution.
- I have updated to the latest OpenCV version, and the issue persists.
- There is reproducer code and related data files (videos, images, ONNX, etc.).