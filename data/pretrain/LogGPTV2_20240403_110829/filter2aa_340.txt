DNS - Devious Name 
Services
Destroying Privacy & 
Anonymity Without Your 
Consent
Jim Nitterauer
Senior Security Specialist
Disclaimer
Information disclosed in this presentation is intended to 
help improve your security & privacy posture and should 
not be used for unethical purposes
The concepts presented are in no way meant to imply 
original research on my part or on the part of my 
employer
Information presented here is gathered from public and 
private sources with proper references and credit 
provided where applicable
The views expressed in this talk are not necessarily the 
views of my employer
Why Am I Here?
Why Am I here?
http://bestvpnprovider.co/wp-content/uploads/2015/01/VPN-Blocked-in-China-The-Great-Firewall-Strikes-Again.png
Why Am I here?
Thank You
Thank You
@jack_daniel
from your 
@BSidesLV family 
Agenda
Review DNS, EDNS0 extensions and Option Codes
Discuss the Rationale for EDNS0 Use
Examine EDNS Client Subnet (ECS)
Review DNS Resolver Support
Examine Tools & Procedures for Testing
Discuss Privacy Implications of EDNS0 OPT Codes
Discuss Potential for Abuse
Questions & answers
Goals for Today
Understand the basics about EDNS OPT RRs
Understand the potential threat to your privacy
Have direction for detecting the use of EDNS OPTs
Be able to better insure your online privacy
Brief History of DNS
Brief History of DNS
Introduced in 1983 by Paul Mockapetris & Jon 
Postel
Information Sciences Institute – USC
RFC 882 & RFC 883 both updated by RFC 973 in 
1986
Obsoleted by two RFCs in 1987
• RFC 1034 – Describes the data structure and exchange of data
• RFC 1035 – Describes record and infrastructure format
Brief History of DNS
Distributed database
Main components
• Namespace
• Resource Records (RRs)
• Resolvers
• Name Servers
Brief History of DNS
• Defining Master (Primary) / Slave 
(Secondary) relationship
• Adding Notify
• Adding IXFR (Incremental Zone Transfers)
Improved 
DNS by 
Image from https://technet.microsoft.com/en-us/library/bb962069.tcpipm09_big(l=en-us).gif
Brief History of DNS
• Implementing Dynamic Updates – RFC 
2136
• Adding Extension Mechanisms for DNS 
(EDNS0) - RFC 2671  & RFC 6891
Improved 
DNS by
Brief History of DNS
• Adding clarifications - RFC 2181
• Implementing provisions for 
negative responses - RFC 2308
Improved 
DNS by
Brief History of DNS
• Implementing DNS Security 
(DNSSEC) - RFC 2535 now RFC 6840
• Promoting the use of EDNS OPT 
Codes
Improved 
DNS by
Brief History of DNS
https://webhostinggeeks.com/guides/dns/DNS_221215.pdf
EDNS RFC 2671 & 6891
RFC 2671 proposed by Paul Vixie in 1999`
Replaced by RFC 6891 in 2013
Overcomes 512 byte UDP packet size limit
Support required for certain modern DNS features
Defines transport standards
Defines option format & assignments
EDNS Option Codes
• See https://www.iana.org/assignments/dns-
parameters/dns-parameters.xhtml#dns-
parameters-11
Long list of 
RFCs and Drafts
• 11 RFCs
• 3 Drafts
There are 
approximately 
17 codes in use
• Future expansion
• Don’t confuse w/ Opcode
65,535 possible 
code 
assignments
EDNS Option Codes
• Extends RCODE field from 4 to 12 
bytes
Resource 
Record Type 41
• EDNS(0) Defines OPT Record
RFC 6891
• Defines support for DNSSEC
RFC 3225
EDNS Option Codes
OPT Resource Record Format
EDNS Option Codes
OPT Record TTL Field
EDNS Option Codes
OPT RR RDATA Structure
EDNS Option Codes
EDNS Option Codes
https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11
EDNS Option Codes
Additional Drafts
https://www.ietf.org/id/
EDNS Option Codes
0
Reserved
1
LLQ
Draft (expired)
DNS Long Lived Queries
Apple
2
UL
Draft (expired)
Dynamic DNS Update Leases
Apple
3
NSID
RFC 5001
DNS Name Server Identifier
ISC
4
Draft - Expired
5
DAU
RFC 6975
DNSSEC
NIST
6
DHU
RFC 6975
DNSSEC
NIST
7
N3U
RFC 6975
DNSSEC
NIST
8
ECS
RFC 7871
EDNS Client Subnet
Google Akamai
9
EDNS EXP
RFC 7314
SOA Expire Identifier
ISC
Review of OPT Option Codes
Code
Name
Status 
Description
Vendor
EDNS Option Codes
10
COOKIE
RFC 7873
DNS Cookies
ISC, Huawei
11
EDNS-TCP
RFC 7828
TCP Keepalive
Red Hat, Dyn, ISC
12
PADDING
RFC 7830
Random Padding
GmbH
13
CHAIN
RFC 7901
CHAIN Query Requests
Red Hat
14
EDNS KEY
RFC 8145
DNSSEC
Verisign, Google, ICANN
26946
DEVICEID
Experimental
Umbrella Device ID
Cisco
Proposed Drafts
UA
ISP LOC
Draft
ISP Location  in DNS
CNNIC
UA
CLIENT ID
Draft
Client ID in Forwarded DNS
Charter, Akamai
Review of OPT Option Codes
Code
Name
Status 
Description
Vendor
EDNS Use Cases
OPT Option Codes 5,6 & 7
• All related to DNSSEC implementation
• Let’s resolvers know which cryptographic algorithm was used to 
generate the digital signature
• Specifies a way for validating end-system resolvers to tell a server 
in a DNS query which digital signature and/or hash algorithms 
they support
• OPT 5 – DNSSEC Algorithm Understood (DAU) 
• OPT 6 – DS Hash Understood (DHU)
• OPT 7 – NSEC3 Hash Understood (N3U)
EDNS Use Cases
• Client subnet in DNS queries
• EDNS Client Subnet (ECS)
• Let’s all resolvers know the IPv4 WAN or IPv6 address subnet of 
the requester
• Developed to enable Content Delivery Networks via DNS
• We will look at bit more into the details shortly
OPT Option Code 8
EDNS Use Cases
• DeviceID
• Used by Cisco Umbrella (Formerly OpenDNS)
• Sends the following data
– Organization ID
– Remote “Internal” IP
– Remote IPv6
• Built into Umbrella Client or Umbrella enabled gateways
• https://docs.umbrella.com/developer/networkdevices-
api/identifying-dns-traffic2
OPT Option Code 26946
EDNS Use Cases
• ISP Location in DNS Queries
• Proposed by China Internet Network Information Center (CNNIC)
• draft-pan-dnsop-edns-isp-location-01
• Claims to be an improvement to privacy
• EIL data includes
– Country
– Area
– ISP
Draft ISP Location
EDNS Use Cases
• Client ID in Forwarded DNS Queries
• Proposed by Akamai
• draft-tale-dnsop-edns0-clientid-01
• Purpose is to provide more precise client identity
• Ex
– Parental control
– Domain access restriction
– Compromise attribution
Draft Client ID
EDNS Client Subnet
• Draft-vandergaast-edns-client-subnet-00
Initial Draft
• C. Contavalli & W. van der Gaast – Google
• S. Leach – Verisign
• D. Rodden – Neustar
Submitted January 
27th, 2011
• Note the date
• Ironic that it was changed on Independence Day
Revision 02 
submitted on July 4th, 
2013 
• Draft-ietf-dnsop-edns-client-subnet-01
• Added - D. Lawrence – Akamai & W. Kumari – Google
Resubmitted May 
26th, 2015
EDNS Client Subnet
•July 6th, 2015
Revision 02 
•August 24th, 2015
Revision 03 
•September 25th, 2015
Revision 04 
Revision 05 •December 14th, 2015
EDNS Client Subnet
•December 15th, 2015
Revision 06
•March 21st, 2016
Revision 07
•April 19th, 2016
Revision 08
•May, 2016
RFC 7871
EDNS Client Subnet
• Number WO2013164007 A1
• Jan Seedorf & Mayutan 
Arumaithurai - Nec Europe Ltd.
Patent 
submitted 
April 30th, 
2012
• U.S. Patent number 
US20150134730 A1
• Interesting precedent
Still shows as 
Application 
so not 
granted
EDNS Client Subnet
Client 
• Checks cache
• Sends request to 
resolver
Resolver
• Checks cache or 
forwards to root
• If resolver supports 
ECS, sending IP is 
packaged into OPT RR 
Data
Authoritative
• Supplies answer
• If ECS aware, it sends 
back a geo-appropriate 
answer
Client 
• Receives best route 
based upon 
geolocation
• All on same subnet get 
same answer
EDNS Client Subnet
EDNS Client Subnet
Authoritative 
• Google
• Akamai
• NS1
• OpenDNS
• UltraDNS
• PowerDNS
• BIND 9.11
• Amazon CloudFront
Recursive
• Unbound 1.6.2
• PowerDNS
• Google
• OpenDNS
• BIND 9.11
• Amazon CloudFront
EDNS Client Subnet
Tools For Evaluating Use
• No registry showing name service provider 
support ECS compliant DNS records
• You are relegated reading provider tech 
material or asking
• A Faster Internet is not current
Name 
Service 
Providers
• Again no listing or registry.
• Rely upon material provided by the DNS 
provider to uncover support
• A Faster Internet is not current
Recursive 
Providers
Tools For Evaluating Use
• Targets the name server – 8.8.8.8
• Returns a JSON packet
• https://www.ietf.org/mail-
archive/web/dnsop/current/msg16055.html
dig @8.8.8.8 
+short -t txt edns-
client-sub.net
• Targets x.x.x.x
• Supplies ECS data y.y.y.y
• Check OPT PSEUDOSECTION
• CLIENT-SUBNET: y.y.y.y/M1/M2
• M1 is Source Netmask
• M2 is Scope Netmask
dig @x.x.x.x –t ns 
avaliddomain.com 
+subnet=y.y.y.y
Tools For Evaluating Use
Tools For Evaluating Use
Tools For Evaluating Use
• Configure to capture DNS traffic
• Forward to Graylog instance Beats input
Install Packetbeat 
on your local DNS 
resolvers
• Configure Beats input 
• Validate data collection
Build a Graylog 
instance (or 
download VM)
• Tag all DNS messages w/ data in 
packetbeat_dns_opt_subnet field
• Correlate to source & destination IPs
Create a Stream
Tools For Evaluating Use
Tools For Evaluating Use
• Run on AD DNS server or span port
• Or open TCP dump file from Linux host
Capture on local 
interface
• Remember there are 65,535 possible OPTS
• See what else lurks in your DNS!
Filter by 
dns.opt.code == 
8 
• Full IP of requester
• Subnet mask
• Scope mask (all IPs in this mask would get same 
response)
Note the data 
included in 
RRDATA
Tools For Evaluating Use
Tools For Evaluating Use
https://svn.nmap.org/nmap/scripts/dns-client-subnet-scan.nse
Was developed before dig had +subnet= option added
May prove useful for isolated testing
Tools For Evaluating Use
• Download Alexa Top 1 Million sites -
http://s3.amazonaws.com/alexa-static/top-1m.csv.zip
• Get 2nd column containing domain names to a new file
• Run dig to get the nameservers for each domain to a new file
• Sort that file and remove duplicates
• Use Python script to query each nameserver & supply ECS data
• Parse the options returned and record any that return 
ClientSubnetOption (or any other option)
Tools For Evaluating Use
• ARSoft.Tools.Net
• Did not find others that supported OPT record 
manipulation
.NET
• Dnspython (Nomium project)
• Twisted Matrix (limited but growing support)
• Getdns-python-bindings
• Pydig
Python
• NET_DNS2
PHP
DNS Packages Supporting EDNS OPT
Tools For Evaluating Use
• Has some DNS functionality for 
manipulating OPT RR data
• Only DNSSEC related info (RFC 
2671)
• None for working with Option 
Codes
Scapy
Privacy & Security Implications
Privacy & Security Implications
Leaks IP 
information
To every DNS 
server touched
First server 
may not honor 
subnet 
restriction
If /32 then all 
DNS can be 
attributed to 
source IP
Leaks 
other data
Many OPTs 
are proprietary 
w/ no insight 
into data sent
Could be MAC 
addresses, 
credentials, 
etc.
Anyone in path 
could capture 
that data
No 
disclosure
Use not well 
documented or 
advertised
Implementers 
can track data 
w/o your 
knowledge
You have no 
easy means of 
opting out
Privacy & Security Implications
Can return 
data to 
client
From any DNS 
server touched 
my request
Data returned 
might have 
unexpected 
impact
Malware could 
use this for C&C 
traffic
Data shared 
can be 
manipulated
Ex. Using dig, 
subnet can 
easily be 
spoofed
Could lead to 
erroneous 
attribution
Particularly 
dangerous if law 
enforcement is 
involved
Third party 
data 
recipients
Can buy info 
regarding your 
DNS habits
Competitors and 
unethical 
hackers can as 
well
Privacy as it 
relates to DNS is 
dead w/o extra 
measures
Privacy & Security Implications
Example Correct Configuration in Unbound
Privacy & Security Implications
Example Incorrect Configuration in Unbound
Privacy & Security Implications
• Know what’s normal
• Route ALL DNS to known resolvers
• Lock out non validated DNS at edge
• Disable EDNS(0)
• Monitor DNS logs or full PCAP
• Create IPS rules as needed
• Enforce DNSSEC (Stuff will break!)
Defensive 
Options
Privacy & Security Implications
• Create DNS w/ forged OPT data
• Use full VPN tunnel
• Tor past that safe end point
• Account for IPv6 traffic as well
• Use TorGhost (Only IPv4)
• Test w/ Wireshark or TCPDump
Offensive 
Options
Privacy & Security Implications
• Making DNS Stealth
– Build DNSCrypt Resolver in cloud
– VPN All Traffic from Router to trusted VPN
– On client, route all traffic through Tor over VPN w/ TorGhost or similar
– Install dnscrypt-proxy on Kali
– Set your /etc/resolv.conf nameserver to 127.0.2.1
– Configure local DNS forwarder to connect to your virtual resolver
Summary
• Allow CDN via DNS
• Enables DNSSEC
• DNS responses can in response to DDoS
• Signature of compromise can be attributed to device
OPT data have 
several useful 
purposes
• All servers in DNS can track data
• No standard has been developed for opting out
• Forwarding EDNS OPT compromises privacy
• No mechanism to verify OPT data is accurate
OPT data use 
have privacy 
concerns
• Data could be easily spoofed
• Data mining
• Botnet C&C
• Data exfiltration 
OPT data have 
potential for 
abuse
Wrap Up
• Questions & Answers
• Contact Info
– PI:EMAIL
– @jnitterauer
– https://www.linkedin.com/in/jnitterauer
– 850-932-5338 ext. 6468