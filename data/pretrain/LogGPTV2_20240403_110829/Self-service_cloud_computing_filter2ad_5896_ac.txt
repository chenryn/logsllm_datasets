### Privilege Model in the Secure Service Cloud (SSC)

#### Table 1: Actors and Operations in the Privilege Model
| Actor | VM Control (C) | Privacy-Sensitive (P) | Read-Only (R) | Build-Only (B) | Virtual I/O (I) | Platform Config. (L) |
|-------|----------------|----------------------|---------------|----------------|-----------------|----------------------|
| Sdom0 | X              | X                    | X             | X              | X               | X                    |
| domB  | -              | -                    | -             | X              | -               | -                    |
| Udom0 | X              | X                    | X             | -              | X               | -                    |
| SD/MTSD | X            | X                    | X             | -              | X               | -                    |

**Note:** Each "X" in the table indicates that the actor can perform the corresponding operation.

#### Table 2: Actors, Objects, and Operations in the Privilege Model
| Object | Sdom0 | domB | Udom0 | SD | MTSD | UdomU |
|--------|-------|------|-------|----|------|-------|
| L      | C,R,I | B    | C,R,I | C,R,I | C,R,I | R,I   |
| C,P,R,I| -     | -    | C,P,R,I| R,I | C,P,R,I| R,I   |
| C,P,R,I| -     | -    | C,P,R,I| R,I | C,P,R,I| R,I   |
| C,P,R,I| -     | -    | C,P,R,I| R,I | C,P,R,I| R,I   |
| C,P,R,I| -     | -    | C,P,R,I| R,I | C,P,R,I| R,I   |
| C,P,R,I| -     | -    | C,P,R,I| R,I | C,P,R,I| R,I   |

**Note:** Each column represents an actor performing an operation, while each row represents the object on which the operation is performed. Operations are abbreviated as shown in Table 1.

### Detailed Operations

1. **Read-Only Operations (R):**
   - These operations expose non-private information of a VM to the requester, such as the number of vCPUs, RAM allocation, and physical parameters of the host.

2. **Build-Only Operations (B):**
   - These include privacy-sensitive operations and certain operations used only during VM initialization.

3. **Virtual I/O Operations (I):**
   - These set up event channels and grant tables to share memory and notifications in a controlled manner for I/O.

4. **Platform Configurations (L):**
   - These manage the physical host, including programming the interrupt controller or clock sources.

### Additional Considerations

VMMs also handle hardware device administration, assigning PCI devices and interrupts to different VMs. In dynamic cloud environments, this may be less common due to VM checkpointing and migration, and is left for future work in the SSC privilege model.

### Privileges of Key Actors

- **Sdom0:**
  - Has privileges to perform VM control, read-only, virtual I/O, and platform operations.
  - VM control allows provisioning VMs for execution on physical hardware.
  - Retains access to read-only data for basic management, such as listing VMs in a client meta-domain.
  - Executes backend drivers for virtual devices and must perform virtual I/O operations for all domains.
  - Controls and configures physical hardware.

- **domB:**
  - Performs build-only operations, which include some privacy-sensitive tasks.
  - Hypercalls from domB on target domains are checked to ensure the domain is still being built, preventing privacy-sensitive operations on client VMs after they are built.

- **Udom0:**
  - Can perform privacy-sensitive and read-only operations on VMs in its meta-domain.
  - Can pause/unpause and destroy VMs in its meta-domain but cannot control scheduling.
  - Can perform virtual I/O operations for UdomUs in its meta-domain.
  - Can delegate specific privileges to SDs and MTSDs.
  - Operations are restricted to its meta-domain, and it cannot perform VM control, privacy-sensitive, or virtual I/O operations on MTSDs in its meta-domain.

### Implementation

The privilege model was implemented using the Xen Security Modules (XSM) framework, which places hooks in the Xen hypervisor to enforce security policies. The model can be refined to allow more granular control, such as restricting SDs to view or modify specific memory pages.

### Virtual I/O in SSC

- **Device Drivers:**
  - Execute within Sdom0, requiring clients to depend on Sdom0 for I/O.
  - Client privacy is protected via modifications to XenStore, allowing domB to create subtrees for new VMs and giving Udom0 access to subtrees of VMs in its meta-domain.

- **Grant Tables:**
  - Used for fine-grained control over virtual I/O, allowing meta-domains to communicate with backend drivers in Sdom0.
  - Client payloads are encrypted to protect privacy.

- **XenStore:**
  - Resides within Sdom0, which can potentially launch denial-of-service attacks.
  - Techniques for protecting XenStore, such as factoring it into a separate domain, can be employed.

### Regulatory Compliance Using MTSDs

- **MTSDs:**
  - Execute within a client meta-domain and request specific privileges to perform compliance checks.
  - Clients can inspect the manifest to decide if the requested privileges are acceptable.
  - MTSDs are limited in their ability to transmit information outside the meta-domain, with communication restricted to a stream of bits indicating compliance status.

### Evaluation

- **Goals:**
  - Demonstrate the flexibility of the SSC model in enabling various virtualization-based services.
  - Compare the performance of these services against traditional, dom0-based counterparts.

- **Experimental Setup:**
  - Conducted on a Dell PowerEdge R610 system with 24GB RAM, eight 2.3GHz Xeon cores, Fusion-MPT SAS drives, and a Broadcom NetXtreme II gigabit NIC.
  - All VMs were configured with 2GB RAM and 2 virtual CPUs.
  - Experimental results averaged over five executions, with standard deviations reported.

- **Results:**
  - The cost of building domains in SSC was comparable to traditional Xen, demonstrating the feasibility and efficiency of the SSC model.

This structured and detailed explanation provides a clear and professional overview of the SSC privilege model and its implementation.