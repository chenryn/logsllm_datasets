428
有关 APT， 要记住的一个重点是， 它们可 以针对 任何公司 而不只 是政府。
5. 识别脆弱性
在识别有价值的资产和潜在威胁后 ， 组织将执行漏洞分析。 换句话说， 试图发现这些系统在潜
在威胁面前的弱点。 在访问控制的情境下， 漏洞分析试图识别不同访问控制机制的优缺点 ， 以及利
用 了弱点的潜在威胁。
脆弱性分析是一个持续的过程， 包括技术和管理措施 。 在较大的组织中， 可能会有特定的人把
脆弱性分析作为一项全职工作。 他们定期进行漏洞扫描， 寻找各种各样的漏洞并报告结果。 在规模
较小的组织中， 网络管理员可以定期运行脆弱性扫描 ， 如每周或每月 一次。
风险分析通常会包括脆弱性分析， 评价系统和环境的 己知威胁和漏洞， 然后就是利用漏洞的渗
透测试。
1 4.2.2 常见的访问控制攻击
访问控制攻击试图绕过访问控制方法。 第 1 3 章提到过， 访问控制始于识别和授权， 访 问控制攻
击往往试图窃取用户凭证。 攻击者窃取了用户凭证后， 就可以通过登录用户和访问用户 的资源进行
在线模拟攻击。 其他情况下 ， 访问控制可以绕过身份认证机制而只 窃取数据， 就像本章前面提到的
索尼攻击一样。
本书涵盖了 多种攻击， 下面将介绍一些与访 问 控制直接相 关的常见攻击。
第 14 章 控制和监控访问
1 . 访问聚合攻击
访问聚合是指收集多个非敏感信息块， 并将它们结合起来获得敏感信息。 换句话说， 一个人或
一个组织可 以 收集有关系统的 多个事实 ， 然后使用这些事实发动袭击。
侦察攻击是访问 聚合攻击， 它结合多种工具来识别系统的多个元素， 如 IP 地址、 开放端口 、 运
行服务、 操作系统等。 攻击者还对数据库进行聚合攻击。 第 20章"软件开发安全" 涵盖了 聚合攻击
和推理攻击， 间接允许使用 聚合和推理技术实现对数据的未授权访 问 。
结合深度防御 、 " 知其所需 " 和最小特权原则有助于防止聚合攻击。
2. 密码攻击
如第 1 章 中所述， 密码是最弱形式的认证。 如果攻击者成功发动密码攻击， 攻击者可以访问账
户 和授权给账户 的所有资源。 如果攻击者发现根或管理员密码， 攻击者可以访问任何其他账户及其
资源。 如果攻击者在戒备森严的环境中发现特权账号的密码， 环境的安全性就不能再被完全信任。
攻击者可以创建其他账户或后 门来访问系统。 组织可能不会接受风险， 而是选择重建整个系统。
强大的密码有助于防止密码攻击， 这种密码包括至少 8 个字符， 并至少有 4 个字符类型(大写字
母、 小写字母、 数字和特殊字符)中的三个。 随着密码破解者的本事越来越大， 有些人认为强密码必
须至少有 1 5 个字符， 尽管普通用户 很难相信。 安全专家通常知道怎样让密码变得强大， 而很多用户
不知道， 用 户使用一种字符类型的短密码是很常见的。 例如， 攻击者发布了他们从前面提到的一次
索尼攻击中盗取的账户 信息。
微软在开发安全方面的 最有价值专家 Troy Hlmt 分析 了 这些密码(www.troyhunt.coml20111
06lbrieιsony-passworιana1ysis.h恤1)。 分析表明 ， 用得最多的 1 0 个密码是 seinfe1d、 password、 wmner、
1 23456、 P呻1e、 sweeps、 contest、 princess、 maggIe 和 94520 攻击者可以使用一种常见的密码破解
工具在不超过几秒钟 的时间 内 发现这些密码。
注意 :
大多数安全专家知道他们不应该使用 简单的密码， 如 123456 这种。 然而， 安全专 家仍然有时会
忘记， 用 户 创 建这些 简单密码是因 为 他们 没有 意识到风险。 许 多 终端用 户 从安全培训 中 受益。
以下部分使用字典攻击、 暴力攻击、 彩虹表攻击和嗅探方法描述了 常见的密码。 有些攻击对于
网络账户来说是可能的 。 然而 ， 更常见的是， 攻击者窃取账户 数据库后离线破解密码。
字典攻击
字典攻击通过使用预定义数据库或常见预定义密码列表中所有可能的密码来发现密码。 换句话
说， 攻击者会从通常可以在字典中找到的单词数据库开始。 字典攻击数据库还包括经常用作密码的
字符组合， 但可能不会在字典中找到 。 例如， 可能会在许多密码破解字典中看到之前提到的在索尼
账户 数据库 中找到的密码列表。
此外， 字典攻击经常会扫描差别构建式密码。 差别构建式密码是之前用过的密码， 但仅有一个
字符不同。 例如， passwordl 是对 password 更改一个字符后的密码， 其他的 Password、 l password
和 passXword 也是。 攻击者在生成彩虹表时经常使用这种方法(在本章后面讨论)。
提示 :
有些人认为使用 外国 字词作为 密码不容易遭受字典攻击。 但是， 密码Z颇丰字典会包括外国 字词 ，
而 且通常也是这么 做的 。
429
430
CISSP 官方学习指南(第 7 版)
暴力攻击
暴力攻击(又称蛮力攻击)试图通过系统尝试所有可能的宇母、 数字和符号组合来发现用户 账户
的密码。 攻击者通常不会手动输入这些， 而是借助程序， 可 以通过编程的方式尝试所有的组合。 混
合攻击一般是先进行字典攻击 ， 然后用差别构建式密码执行一种暴力攻击 。
密码越长、 越复杂， 暴力攻击耗时越长、 造价越高。 随着可能性的增加， 执行一次详尽攻击的
成本也在上升 。 换句话说， 密码越长越多 ， 包括的字符类型就越多 ， 对暴力攻击就越安全 。
密码和用户名存储在受保护系统的账户数据库文件中 。 然而 ， 密码不是作为纯文本存储， 系统
和应用程序通常会散列密码 ， 并只存储散列值。
当用户用散列 密码进行身份认证时 ， 会发生 以下三个步骤:
( 1) 用 户 输入凭据 ， 如用户名和密码。
(2) 用 户 的系统散列密码并发送散列到身份认证系统。
(3) 身份认证系统将这个散列与存储在密码数据库文件中 的散列进行比较。 如果匹配的话， 就
表示用户输入 了 正确的密码。
这提供了两个重要的保护。 密码不以明文在网络中传输， 因为它们容易遭受嗅探攻击。 密码数
据库不 以 明文存储密码， 因 为攻击者更容易 发现密码， 如果他们访问到密码数据库 的话。
然而， 密码攻击工具会寻找创建了和存储在账户数据库文件中的条 目相同的散列值的密码。 如
果成功了， 就可 以使用密码登录到账户 。
例如， 假设密码 IPassed 的存储散列值是 lA5C7G(尽管实际散列将会更长)。 暴力密码工具将会
猜到密码、 计算散列， 并将其与存储的散列值进行比较。 这也被称为比较分析。 当密码破解工具找
到一个匹配的散列值时， 就表明猜测的密码很可能就是原始密码。 在这种情况下， 该工具会破解出
密码 。
如果两个单独的密码创建了相同的散列 ， 就会导致碰撞 。 碰撞是不理想的 ， 在理想情况下碰撞
是不可能发生的， 但一些散列函数(如 MD5)不可能不遇到碰撞。 这就使攻击者创建了一个和存储在
账户数据库文件 中 的散列密码有相 同散列 的 不同密码。
根据现代计算机的进行速度和采用分布式计算的能力， 暴力攻击对一些强大的密码甚至都是成
功的。 实 际发现密码的时间取决于用于散列它们的算法和计算机的性能。
许多攻击者在暴力攻击中使用 图形处理单元(GPU) 。 一般来说， 许多 GPU 比 台式电脑中的大多
数 CPU 有更强的处理能力。 Blogger Vijay Devakumar 使用 旧 的基于 CPU 的解密工具 Cain & Abel 和
新的基于 GPU 的工具 ighash即u 来运行一些测试。 报道称， Cain & Abel 用 了 l 小时 30 分钟来追踪
一个 6 字符密码， 而 ighashgpu 破解相 同 的密码花了不到 4 秒时间。
提示 :
攻击者有足够的时间可以使用 离线的强力攻击发现任何密码. 然而， 更长的 密码导致更长的时
间 ， 这使得攻击者z颇丰它们 不可行。 例如， 一个使用 4 种字符类型 的 12 字符密码可能需要数千年的
时 间 来破解。
生日攻击
生 日攻击关注于寻找碰撞， 其名称来 自于一种称为生 日 悖论的统计现象 。 生 日悖论认为， 如果
把 23 个人关在一个房间 ， 那么任何两人同一天生 日 的可能性有 50%。 这不是指的同一年， 而是指
同样的月 份和日期， 如 3 月 30 日 。
第 14 章 控制和监控访问
闰年有2月 29 日 ， 一年有 366 天 。 如果有 367 人在一个房间里， 就会有 100%的机会获得至少
两个有相同生 日 的人。 将这个房间 的人数减少到 23 . 仍然有 50%的机会让任何两人有相同的生日。
这类似于发现具有相同散列的任何两个密码。 如果一个散列函数只能创造 366 个不同的散列，
那么攻击者(他只有 23 个散列样本)有 50%的机会发现两个密码有相同 的散列。 散列算法可以创建超
过 366 个不同的散列 ， 但关键是， 生日攻击方法不需要对所有可能的散列进行匹配。
从另一个角度来看， 想象你一个人在房间里， 你想寻找和你同一天出生的人。 在本例中 ， 你需
要房间 中有 253 人， 才能达到找到有相同生 日 的人 50%的概率 。 即使需要房间里有更多的人， 也不
需要房间 里有 366 人 以找到匹配。
同样， 一些工具有可能会提出另一个创建了与给定散列相同散列的密码 。 例如， 如果知道管理
员账户密码的散列是 l A5C7G. 一些工具可以识别一个将会创建相同散列 l A5C7G 的密码。 不一定
是相 同 的密码， 但如果可 以创建相 同 的散列 ， 就和原始密码一样有效。
可 以通过使用带有足够位数的散列算法(使碰撞变得在计算上不可能)和用盐(在 " 彩虹表攻击"
一节进行讨论)来降低生 日攻击的成功性。 曾 经有一段时间. MD5(使用 128 位)被认为是不受碰撞影
响的。 然而， 随着计算能力不断提高. MD5 并不是免碰撞的。 S队-3(安全散列算法版本 3 的简称)
可 以使用 多达 512 位的密钥， 并被认为能够防御生 日 攻击和碰撞， 至少现在是这样。 计算能力不断
提高， 所以在某种程度上. SHA-3 将被替换为另一个散列算法， 它用更长的散列和/或更强的密码学
方法创建散 列 。
彩虹表攻击
通过猜测 、 散列， 然后与有效的密码散列进行比较来寻找密码需要很长时间。 然而， 彩虹表可
以通过使用大型预先计算的散列数据库来减少时间。 攻击者猜测密码(用字典攻击或暴力攻击)、 对
其进行散列 ， 然后把猜到的密码和所猜到密码的散列放入彩虹表中 。
密码破译器可以将彩虹表中 的每个散列和被盗密码数据库文件的散列进行比较。 传统的密码破
解工具必须在对比散列之前猜测密码并对其进行散列 。 然而， 当使用彩虹表时， 密码破译器猜测和
计算散列不会花费任何时间 。 只是在找到匹配之前对散列进行比较。 这可以大大减少破解密码所花
费的时间 。
提示 :
许多 不 同 的彩虹表都是可以免费下载的。有着使用 4 种字符类型 的 14 字符密码的散列 的彩虹表
大约是 7.5 GB 大小 。 尽管下载需要花一些时间， 但攻击者愿意等待。 然而， 使用 1 5 个字符或更多
字符的 密码将击败大多 数彩虹表攻击。
许多系统一般通过 " 撒盐 " 密码来减少彩虹表攻击的有效性。 盐是一组随机位， 在散列前加到
密码中 。 加密方法在散列前就加入附加位， 使攻击者更难以使用彩虹表破解密码。 然而， 考虑到足