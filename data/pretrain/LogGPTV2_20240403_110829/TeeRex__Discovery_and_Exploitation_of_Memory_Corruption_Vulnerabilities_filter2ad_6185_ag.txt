dovich, and M Frans Kaashoek. “Linux Kernel Vulnerabilities: State-
of-the-art Defenses and Open Problems”. In: Proceedings of the
Second Asia-Paciﬁc Workshop on Systems. APSys ’11. ACM, 2011.
DOI: 10.1145/2103799.2103805.
Shuo Chen, Jun Xu, and Emre Can Sezer. “Non-Control-Data Attacks
Are Realistic Threats”. In: Proceedings of the 14th USENIX Security
Symposium. 2005. URL: https://www.usenix.org/conference/
14th - usenix - security - symposium / non - control - data -
attacks-are-realistic-threats.
[15]
[16] Xiaoxin Chen, Tal Garﬁnkel, E. Christopher Lewis, Pratap Subrah-
manyam, Carl A. Waldspurger, Dan Boneh, Jeffrey S. Dwoskin, and
Dan R. K. Ports. “Overshadow: a virtualization-based approach to
retroﬁtting protection in commodity operating systems”. In: Proceed-
ings of the 13th International Conference on Architectural Support
for Programming Languages and Operating Systems, ASPLOS. 2008.
DOI: 10.1145/1346281.1346284.
James A. Clause, Wanchun Li, and Alessandro Orso. “Dytan: a
generic dynamic taint analysis framework”. In: Proceedings of the
ACM/SIGSOFT International Symposium on Software Testing and
Analysis, ISSTA. 2007. DOI: 10.1145/1273463.1273490.
[17]
[18] Victor Costan and Srinivas Devadas. “Intel SGX Explained”. In:
(2016). URL: https://eprint.iacr.org/2016/086.
856    29th USENIX Security Symposium
USENIX Association
[19] Mark Cox. Red Hat’s Top 11 Most Serious Flaw Types for 2009. Feb.
2010. URL: https://awe.com/mark/blog/20100216.html.
[21]
[20] CyberLink. PowerDVD Ultra Requirements. URL: https://www.
cyberlink.com/products/powerdvd-ultra/spec_en_US.html
(visited on 11/14/2019).
Lucas Davi, Ahmad-Reza Sadeghi, Daniel Lehmann, and Fabian
Monrose. “Stitching the Gadgets: On the Ineffectiveness of Coarse-
Grained Control-Flow Integrity Protection”. In: Proceedings of the
23rd USENIX Security Symposium, USENIX Security. 2014. URL:
https://www.usenix.org/conference/usenixsecurity14/
technical-sessions/presentation/davi.
[23]
[22] Ran Duan, Long Li, Shi Jia, Yu Ding, Yulong Zhang, Yueqiang Cheng,
Lenx Wei, and Tanghui Chen. Apache Teaclave Rust-SGX SDK -
Samplecode “tls/tlsclient”. URL: https://github.com/apache/
incubator - teaclave - sgx - sdk / tree / master / samplecode /
tls/tlsclient (visited on 02/28/2020).
Tyler Durden. “Bypassing PaX ASLR protection”. In: Phrack Maga-
zine 59.9 (2002). URL: http://phrack.org/issues/59/9.html.
Efﬁcient TLS termination inside Intel SGX enclaves for existing ap-
plications: lsds/TaLoS. Aug. 7, 2019. URL: https://github.com/
lsds/TaLoS (visited on 08/27/2019).
Przemyslaw Frasunek. Full Disclosure Mailing List Archives:
FreeBSD 7.0 - 7.2 pseudofs null pointer dereference. Sept. 2010.
URL: https://seclists.org/fulldisclosure/2010/Sep/107
(visited on 11/13/2019).
[24]
[25]
[28]
[27]
[26] David Gens, Simon Schmitt, Lucas Davi, and Ahmad-Reza Sadeghi.
“K-Miner: Uncovering Memory Corruption in Linux”. In: Proceed-
ings 2018 Network and Distributed System Security Symposium,
NDSS. 2018. DOI: 10.14722/ndss.2018.23326.
Enes Göktas, Elias Athanasopoulos, Herbert Bos, and Georgios Por-
tokalidis. “Out of Control: Overcoming Control-Flow Integrity”. In:
2014 IEEE Symposium on Security and Privacy, S&P. 2014. DOI:
10.1109/SP.2014.43.
Lee Harrison, Hayawardh Vijayakumar, Rohan Padhye, Koushik Sen,
Michael Grace, Rohan Padhye, Caroline Lemieux, Koushik Sen, Lau-
rent Simon, Hayawardh Vijayakumar, et al. “PARTEMU: Enabling
Dynamic Analysis of Real-World TrustZone Software Using Emu-
lation”. In: Proceedings of the 29th USENIX Security Symposium
(USENIX Security 2020) (To Appear). 2020. URL: https://www.
usenix.org/conference/usenixsecurity20/presentation/
harrison.
Sean Heelan, Tom Melham, and Daniel Kroening. “Gollum: Modular
and Greybox Exploit Generation for Heap Overﬂows in Interpreters”.
In: Proceedings of the 2019 ACM SIGSAC Conference on Computer
and Communications Security, CCS. 2019. DOI: 10.1145/3319535.
3354224.
[29]
[30] Matthew Hoekstra, Reshma Lal, Pradeep Pappachan, Vinay Phegade,
and Juan del Cuvillo. “Using innovative instructions to create trust-
worthy software solutions”. In: The Second Workshop on Hardware
and Architectural Support for Security and Privacy, HASP. 2013. DOI:
10.1145/2487726.2488370.
[31] Hong Hu, Zheng Leong Chua, Sendroiu Adrian, Prateek Saxena, and
Zhenkai Liang. “Automatic Generation of Data-Oriented Exploits”.
In: 24th USENIX Security Symposium, USENIX Security. 2015. URL:
https://www.usenix.org/conference/usenixsecurity15/
technical-sessions/presentation/hu.
[32] Hong Hu, Zheng Leong Chua, Zhenkai Liang, and Prateek Saxena.
“Identifying Arbitrary Memory Access Vulnerabilities in Privilege-
Separated Software”. In: Computer Security - 20th European Sym-
posium on Research in Computer Security, Proceedings, Part II, ES-
ORICS. 2015. DOI: 10.1007/978-3-319-24177-7_16.
[35]
[34]
[33] Hong Hu, Shweta Shinde, Sendroiu Adrian, Zheng Leong Chua, Pra-
teek Saxena, and Zhenkai Liang. “Data-Oriented Programming: On
the Expressiveness of Non-control Data Attacks”. In: IEEE Sympo-
sium on Security and Privacy, S&P. 2016. DOI: 10.1109/SP.2016.
62.
Intel. Demo Programs for the GNU* Multiple Precision Arithmetic
Library* for Intel R(cid:13) Software Guard Extensions. URL: https://
github.com/intel/sgx-gmp-demo/ (visited on 10/10/2019).
Intel. Intel 64 and IA-32 Architectures Software Developer’s Manual,
Combined Volumes 3 (3A, 3B, and 3C): System Programming Guide.
2019. URL: https://software.intel.com/sites/default/
files/managed/a4/60/325384-sdm-vol-3abcd.pdf.
Intel. Intel R(cid:13) Software Guard Extensions SDK for Linux*. URL:
https : / / 01 . org / intel - software - guard - extensions (vis-
ited on 08/20/2019).
Intel R(cid:13) 64 and IA-32 Architectures Software Developer’s Manual,
Volume 3D: System Programming Guide, Part 4. Order Number
332831-065US. Intel. Dec. 2017.
[36]
[37]
[39]
[38] Kyriakos K. Ispoglou, Bader AlBassam, Trent Jaeger, and Mathias
Payer. “Block Oriented Programming: Automating Data-Only At-
tacks”. In: Proceedings of the 2018 ACM SIGSAC Conference on
Computer and Communications Security, CCS. 2018. DOI: 10.1145/
3243734.3243739.
Todd Jackson, Babak Salamat, Andrei Homescu, Karthikeyan Mani-
vannan, Gregor Wagner, Andreas Gal, Stefan Brunthaler, Christian
Wimmer, and Michael Franz. “Compiler-Generated Software Diver-
sity”. In: Moving Target Defense. Vol. 54. Advances in Information
Security. 2011. DOI: 10.1007/978-1-4614-0977-9_4.
Simon Johnson. Intel R(cid:13) SGX and Side-Channels. Feb. 2018. URL:
https://software.intel.com/en-us/articles/intel-sgx-
and-side-channels (visited on 10/10/2019).
[40]
[43]
[42]
[41] Vasileios P. Kemerlis, Georgios Portokalidis, and Angelos D.
Keromytis. “kGuard: Lightweight Kernel Protection against Return-
to-User Attacks”. In: Proceedings of the 21th USENIX Security Sym-
posium. 2012. URL: https : / / www . usenix . org / conference /
usenixsecurity12 / technical - sessions / presentation /
kemerlis.
James C King. “Symbolic execution and program testing”. In: Com-
mun. ACM 19.7 (July 1976). ISSN: 0001-0782. DOI: 10 . 1145 /
360248.360252.
Per Larsen, Andrei Homescu, Stefan Brunthaler, and Michael Franz.
“SoK: Automated Software Diversity”. In: Proceedings of the 35th
IEEE Symposium on Security and Privacy. 2014. DOI: 10.1109/SP.
2014.25.
Jae-Hyuk Lee, Jin Soo Jang, Yeongjin Jang, Nohyun Kwak, Yeseul
Choi, Changho Choi, Taesoo Kim, Marcus Peinado, and Brent
ByungHoon Kang. “Hacking in Darkness: Return-oriented Program-
ming against Secure Enclaves”. In: 26th USENIX Security Sym-
posium, USENIX Security. 2017. URL: https : / / www . usenix .
org / conference / usenixsecurity17 / technical - sessions /
presentation/lee-jaehyuk.
[44]
[45] David Lie, Chandramohan A. Thekkath, and Mark Horowitz. “Im-
plementing an untrusted operating system on trusted hardware”. In:
Proceedings of the 19th ACM Symposium on Operating Systems Prin-
ciples 2003, SOSP. 2003. DOI: 10.1145/945445.945463.
[46] Chi-Keung Luk, Robert S. Cohn, Robert Muth, Harish Patil, Artur
Klauser, P. Geoffrey Lowney, Steven Wallace, Vijay Janapa Reddi,
and Kim M. Hazelwood. “Pin: building customized program analysis
tools with dynamic instrumentation”. In: Proceedings of the ACM
SIGPLAN 2005 Conference on Programming Language Design and
Implementation. 2005. DOI: 10.1145/1065010.1065034.
USENIX Association
29th USENIX Security Symposium    857
[47] Aravind Machiry, Eric Gustafson, Chad Spensky, Christopher Salls,
Nick Stephens, Ruoyu Wang, Antonio Bianchi, Yung Ryn Choe,
Christopher Kruegel, and Giovanni Vigna. “BOOMERANG: Exploit-
ing the Semantic Gap in Trusted Execution Environments”. In: 24th
Annual Network and Distributed System Security Symposium, NDSS.
2017. DOI: 10.14722/ndss.2017.23227.
[49]
[48] Moxie Marlinspike. Technology preview: Private contact discovery
for Signal. Sept. 26, 2017. URL: https : / / signal . org / blog /
private-contact-discovery/ (visited on 10/10/2019).
Jonathan M McCune, Bryan J Parno, Adrian Perrig, Michael K Reiter,
and Hiroshi Isozaki. “Flicker: An execution infrastructure for TCB
minimization”. In: ACM SIGOPS Operating Systems Review. Vol. 42.
4. ACM. 2008. DOI: 10.1145/1357010.1352625.
Frank McKeen, Ilya Alexandrovich, Alex Berenzon, Carlos V. Rozas,
Hisham Shaﬁ, Vedvyas Shanbhogue, and Uday R. Savagaonkar. “In-
novative instructions and software model for isolated execution”. In:
The Second Workshop on Hardware and Architectural Support for Se-
curity and Privacy, HASP. 2013. DOI: 10.1145/2487726.2488368.
[51] Microsoft. Data Execution Prevention (DEP). 2006. URL: http :
[50]
[52]
[53]
//support.microsoft.com/kb/875352/EN-US/.
PaX Team. PaX: PAGEEXEC Design. URL: https : / / pax .
grsecurity.net/docs/pageexec.txt (visited on 08/23/2019).
Jannik Pewny, Philipp Koppe, and Thorsten Holz. “STEROIDS for
DOPed Applications: A Compiler for Automated Data-Oriented Pro-
gramming”. In: IEEE European Symposium on Security and Privacy,
EuroS&P. 2019. DOI: 10.1109/EuroSP.2019.00018.
[55]
[54] Dan R. K. Ports and Tal Garﬁnkel. “Towards Application Security
on Untrusted Operating Systems”. In: 3rd USENIX Workshop on Hot
Topics in Security, HotSec. 2008. URL: http://www.usenix.org/
events/hotsec08/tech/full%5C_papers/ports/ports.pdf.
Felix Schuster, Manuel Costa, Cédric Fournet, Christos Gkantsidis,
Marcus Peinado, Gloria Mainar-Ruiz, and Mark Russinovich. “VC3:
Trustworthy Data Analytics in the Cloud Using SGX”. In: 2015 IEEE
Symposium on Security and Privacy, S&P. 2015. DOI: 10.1109/SP.
2015.10.
Jaebaek Seo, Byoungyoung Lee, Seong Min Kim, Ming-Wei Shih,
Insik Shin, Dongsu Han, and Taesoo Kim. “SGX-Shield: Enabling
Address Space Layout Randomization for SGX Programs”. In: 24th
Annual Network and Distributed System Security Symposium, NDSS.
2017. DOI: 10.14722/ndss.2017.23037.
[56]
[57] Hovav Shacham. “The geometry of innocent ﬂesh on the bone: return-
into-libc without function calls (on the x86)”. In: Proceedings of the
2007 ACM Conference on Computer and Communications Security,
CCS. 2007. DOI: 10.1145/1315245.1315313.
[58] Yan Shoshitaishvili et al. “SOK: (State of) The Art of War: Offensive
Techniques in Binary Analysis”. In: IEEE Symposium on Security
and Privacy, S&P. 2016. DOI: 10.1109/SP.2016.17.
[59] Kevin Z. Snow, Fabian Monrose, Lucas Davi, Alexandra Dmitrienko,
Christopher Liebchen, and Ahmad-Reza Sadeghi. “Just-In-Time Code
Reuse: On the Effectiveness of Fine-Grained Address Space Layout
Randomization”. In: Proceedings of the 34th IEEE Symposium on
Security and Privacy, S&P. 2013. DOI: 10.1109/SP.2013.45.
[60]
Laszlo Szekeres, Mathias Payer, Tao Wei, and Dawn Song. “SoK:
Eternal War in Memory”. In: 2013 IEEE Symposium on Security and
Privacy, S&P. 2013. DOI: 10.1109/SP.2013.13.
[62]
[61] Chia-che Tsai, Donald E. Porter, and Mona Vij. “Graphene-SGX: A
Practical Library OS for Unmodiﬁed Applications on SGX”. In: 2017
USENIX Annual Technical Conference, USENIX ATC. 2017. URL:
https : / / www . usenix . org / conference / atc17 / technical -
sessions/presentation/tsai.
Jo Van Bulck, Marina Minkin, Oﬁr Weisse, Daniel Genkin, Baris
Kasikci, Frank Piessens, Mark Silberstein, Thomas F Wenisch, Yu-
val Yarom, and Raoul Strackx. “Foreshadow: Extracting the keys to
the intel SGX kingdom with transient out-of-order execution”. In:
27th USENIX Security Symposium, USENIX Security. 2018. URL:
https://www.usenix.org/conference/usenixsecurity18/
presentation/bulck.
[63]
[64]
[65]
Jo Van Bulck, David Oswald, Eduard Marin, Abdulla Aldoseri, Flavio
D Garcia, and Frank Piessens. “A Tale of Two Worlds: Assessing the
Vulnerability of Enclave Shielding Runtimes”. In: Proceedings of the
2019 ACM SIGSAC Conference on Computer and Communications
Security, CCS. 2019. DOI: 10.1145/3319535.3363206.
Jo Van Bulck, Frank Piessens, and Raoul Strackx. “SGX-Step: A
Practical Attack Framework for Precise Enclave Execution Control”.
In: Proceedings of the 2Nd Workshop on System Software for Trusted
Execution, SysTEX. 2017. DOI: 10.1145/3152701.3152706.
Jo Van Bulck, Nico Weichbrodt, Rüdiger Kapitza, Frank Piessens, and
Raoul Strackx. “Telling Your Secrets without Page Faults: Stealthy
Page Table-Based Attacks on Enclaved Execution”. In: 26th USENIX
Security Symposium, USENIX Security. 2017. URL: https : / /
www.usenix.org/conference/usenixsecurity17/technical-
sessions/presentation/van-bulck.
[66] Victor van der Veen, Dennis Andriesse, Manolis Stamatogiannakis, Xi
Chen, Herbert Bos, and Cristiano Giuffrida. “The Dynamics of Inno-
cent Flesh on the Bone: Code Reuse Ten Years Later”. In: Proceedings
of the 2017 ACM SIGSAC Conference on Computer and Communica-
tions Security, CCS. 2017. DOI: 10.1145/3133956.3134026.
[67] Huibo Wang, Pei Wang, Yu Ding, Mingshen Sun, Yiming Jing, Ran
Duan, Long Li, Yulong Zhang, Tao Wei, and Zhiqiang Lin. “Towards
Memory Safe Enclave Programming with Rust-SGX”. In: Proceed-
ings of the 2019 ACM SIGSAC Conference on Computer and Commu-
nications Security, CCS. 2019. DOI: 10.1145/3319535.3354241.
[68] wolfSSL Linux Enclave Example. URL: https : / / github . com /
wolfSSL/wolfssl-examples/tree/master/SGX_Linux (visited
on 10/10/2019).
[69] wolfSSL: a small, fast, portable implementation of TLS/SSL for em-
bedded devices to the cloud. Oct. 10, 2019. URL: https://github.
com/wolfSSL/wolfssl (visited on 08/27/2019).
[70] Yuanzhong Xu, Weidong Cui, and Marcus Peinado. “Controlled-
Channel Attacks: Deterministic Side Channels for Untrusted Op-
erating Systems”. In: 2015 IEEE Symposium on Security and Privacy,
S&P. 2015. DOI: 10.1109/SP.2015.45.
[71] Michal Zalewski. American Fuzzing Lop (AFL). 2019. URL: http:
//lcamtuf.coredump.cx/afl/ (visited on 11/13/2019).
858    29th USENIX Security Symposium
USENIX Association