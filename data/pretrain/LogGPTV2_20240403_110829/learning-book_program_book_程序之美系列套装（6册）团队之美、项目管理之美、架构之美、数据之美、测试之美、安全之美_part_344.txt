[Z] Knuth,Donald E.The Art of Computer
Programming, Vol.2:Seminumerical Algorithms,Third Edition,Addison
Wesley， 1998.
[8]若您有兴趣：xi=tan（π（0.1i-0.5））。
[2] Knuth,Donald E.The Art of Computer
Programming,Vol.2:Seminumerical Algorithms,Third Edition,Addison-
Wesley， 1998.
结论
评估各种RNG的测试在体现了复杂性的同时也体现了统一秩序。根
据美的古典定义，这种测试是美的。RNG的复杂来自于，用确定的
1964
---
## Page 1966
程序作出不确定的假象。RNG的测试至少与被测对象是同等复杂
的。这些测试复杂的原因就是，我们很少能描述出一个RNG的绝对
行为，而只好满足于描述生成器应该达到的通常行为。
在测试随机数生成器中的几个统一原则：
测试归纳为指明一些统计数据应经常位于某个范围之内。你期望的
“经常”越苛刻，你的范围一定会越厂。
非均匀RNG转换了均匀RNG的输出。如果你对你的非均匀RNG有信
心，那么你只需要测试非均匀RNG的分布属性。继承自均匀RNG的
更微妙的随机属性不需要很仔细的测试。
对随机序列的精确分析要求更进一步的统计，此外通过下面这个简
单的观察我们还能走得更远：一个正态分布的取样经常位于其均值
的两倍或三倍标准差之间。
我们不必过于关注测试通过率。一个正确的发生器通常会通过测
试，而一个有问题的生成器则通常测试失败。
第11章以变化为中心的测试
Murali Nandigama
测试的美不在于你付出了多少努力，而在于测试是否有效。知道要
测试什么是一种美，知道正在测试什么是一种美。在这一章中，我
们要讨论的是与高效率测试方法相关的技术。不管是传统的瀑布模
型、增量模型或螺旋模型，或者是现代的敏捷模型和测试驱动开发
（TDD）模型，测试活动涵盖了软件开发生命周期的各个方面。
项目管理的最新趋势之一，是持续集成框架的应用。这种框架的特
点，是频繁地执行软件产品开发中的各种活动，包括更改的代码与
源代码库的集成、产品生成，以及运行大批现有测试以验证代码更
改的正确性。尽管这个概念与以往的详尽测试方法相近，一向被认
为难以实现，硬件配置和降低成本方面的最新进展使这种方法成为
可能。但在最常见的情况下，并发项目不会有足够的测试用例提供
100%的代码覆盖率。因此，如果更改的代码是在现有测试套件没有
覆盖的部分，代码覆盖率低于100%，这种方法的有效性就值得怀疑
了。这个方法是否是最好的策略，还是应采取一种以变化为中心的
1965
---
## Page 1967
测试方法（change-centric testing），这是我们在本章考查的主要问
题。
以变化为中心的测试方法的核心，是捕获代码变化造成的直接影响
和间接影响，并且执行能真正测试到累积的改动的测试用例。除以
变化为中心的测试之外，我们也应执行一部分通用功能和集成测
试，以确保代码的整体正确性。这种方法还揭示了没有测试用例覆
盖的代码区，以便进行针对性的测试开发。
在图11-1所示的例子中，一个可执行程序中有很多方法。黑色阴影
中的方法代表了代码的实际变化。灰色阴影中的方法代表第二级变
化，这些方法直接依赖于被改动的方法。浅灰色阴影中的方法代表
了改变的方法造成的第三级影响。除了这些标出来的方法，可执行
程序的其他部分没有受到影响。所以理论上说，如果我们能找出涉
及被标出的方法的测试用例，我们就测试到了所有的变化。
可执行状态空间
F60
F1
F40
F12
F2
F20
1966
---
## Page 1968
图11-1可执行程序中代码改变的影响范围
这种策略，比起对每个改变运行可执行程序的所有测试用例或一个
固定的、庞大的测试集而不考虑这些测试是否涉及了被改变的源代
码，效率要高出很多倍。
如何建立由文档驱动的、以变化为中心的测试框架
新项目可以相当轻松地建立以文档驱动的、以变化为中心的测试过
程。在许多典型的项目中，大部分功能说明书中的需求是从下面这
些文件中提炼的：市场需求文档（MRD）或产品需求文档
（PRD），以及由PRD生成的用户界面实体模型或框线图（wire
frame）。让我们标出UI实体模型中的各个部件，并确保这些标注被
包括在功能说明书中。请看图11-2，这里描述的是一个数据操作的
示例项目。
在这个例子中，一个示例界面框线图包括五个选项卡、三个文件操
作控件和三个窗口操作控件。每个选项卡版面的右上角，有一个提
示信息图标，按需求规定，用于提供与上下文相关的帮助。此外，
版面的底部提供了一个调试窗口，代替了通常的状态栏。
F-001F-002
2F-003F-004F-005
F-006
F-007
SamsleUI Win:Frame
Landing PageCreateControldit ControlData EntryQuery Tab
←800-
Help
This is the page where the basic information on how to use the widget is described. Described
also are the remaining tabs and the major functions associated with the tabs. Clicking on the
information icon located at the top right-hand corner provides context specific help based on the
tab you are in. Help window will apear as a separate pop up.
Debug information is available in the status bar at the bottom of the window.
Help text is shown in RED color and info text is shown in BLUE color.
F-010
F-009
M
1967
---
## Page 1969
图11-2图形用户界面的框线图示例
应用程序所有主要的功能区都标记有顺序关键词。每个功能又包含
一个或多个任务，所有这些任务都用主功能的顺序关键词的标记进
行标识，例如F-008001、F-008002等。
当为每个功能并发用例（或功能测试用例）时，从这些用例的标
记，可以识别测试用例场景所针对的功能区。
每当与该功能区对应的代码作更改签入时，适当的识别标记应该作
为签入信息的一部分记入源代码控制系统。
在这种情况下，质量保证人员不仅可以在可执行文件上运行单元测
试、冒烟测试、夜间测试、功能测试和基本验收测试（BAT），还
可以从源代码控制系统中查询签入的功能标识，确保运行所有与这
些功能有关的测试。
在开发或维护期间，每当一个缺陷被发现时，开发人员应将功能标
识一起写入更改签入日志，从而质量保证人员可以根据功能标识查
询发生的更改，保证运行对应的测试。任何针对缺陷修正开发的测
试用例，也应遵循同样的命名方式。
以上是一个高度简化和抽象了的以变化为中心的测试过程。这种方
法由文档驱动，是在新项目中应用以变化为中心的测试的理想方
式。
但在现实中，软件开发的生命周期要复杂得多。我们可能遇到以前
的项目留下来的代码，可能遇到从开源代码库中为企业定制的产
品，还有可能遇到可执行程序包含第三方开发的模块。
此外，敏捷开发方法（如XP和Scrum）使用选代的产品开发过程
可能根本就没有完整或定稿的需求文件、高层设计文档，以及框线
图设计稿。
在这种情况下，我们如何实现以变化为中心的测试呢？
复杂代码开发模式中以变化为中心的测试
在复杂的、多年多人的软件开发周期中，我们常常不仅继承已有代
码，还有以前存在的测试套件。并且，测试用例与源代码文件通常
1968
---
## Page 1970
没有明确的对应关系。很多项目组实际上没有任何文件，也没有任
何可追溯资料（用来标识测试库中的各个测试用例可以覆盖到可执
行程序的哪个部分）。
但是，许多项目组按照标准的命名约定，为源代码和测试代码建立
分层目录，如图11-3所示，提供了一些测试与源代码高层对应关系
的线索。
但这种关联可能并不是真实的测试套件与可执行程序功能关系的再
现。因此，根据代码模块中的代码变动运行测试套件，在这样的前
提下充其量只是最佳猜测，不能保证是一个好的以变化为中心的测
试方式。
RSXBLMen
accessiblewrap.h
nsXUL.TreeAccessiblewrap.cpp
nsxuLTreeAccessiblewrap.h
[..feeds.xnl
other
-
pageInfo.css
Makefile.in
pageInfo.xul
pageInfo.js
nsAccessNiodemrap.cpp
nsAccessNodelirap.h
nsAccessibleRelationwrap.h
safeMode.]s
security.]s
nsAccessiblewrag.co
nsAccessibLearap.h
sanitize.js
safeMode.xul
nsDocAccessibleMrap.h
sanitize.xul
sanitizeoialog.js
sanitize0ialog.css
nsHTmTableaccessiblewrap.h
softwareupdateoverLay-xul
nsRootAccessiblemfrap.cpp
tabbrowser.css
sataccessiblerap.h
abh
rowser,xnl
nsTestAccesssblerap.h
test
nsxXuMenuAccessiblewrap.h
lokefile.in
nsxuLTreeAccessiblewrap.h
browser alltabslistener.j5
alltabslistener.htst
xforns
Makefile.in
browser_bug384198.js