### Attacks and Normal Background Traffic
On a Class B network with approximately 10 web servers, this approach successfully filtered out 95% of all remote-to-local alerts.

**Keywords:** Intrusion detection, vulnerability, attack, network, signature, false alarm, scan, probe, DoS, worm, exploit, Internet, patch

## 1. Introduction
Intrusion detection systems (IDS) are not used in isolation. They are typically employed alongside defensive mechanisms such as frequent installation of software updates or patches to eliminate known vulnerabilities, firewalls, and vulnerability scanning to identify known vulnerabilities on protected machines. In recent years, the cost and difficulty of implementing these defenses have decreased significantly, making them more widespread. Low-cost personal firewalls are now available to protect individual hosts, and vulnerability scanners that catalog issues in large networks have become more capable and comprehensive, with almost daily updates in their detection rules. Additionally, software patches have become easier to install, and many modern operating systems include mechanisms to automatically apply security patches and other updates. The purpose of this paper is to assess the impact of these defensive techniques on the utility of network intrusion detection systems.

This paper focuses on network-based IDS that detect known attacks using separate signatures for each attack and on the use of these systems to detect successful attacks where remote attackers compromise monitored machines (remote-to-local attacks). It was motivated by anecdotal evidence suggesting that these important attack types are rarely detected by network-based IDS. On well-protected sites, network-based IDS detect scans, some denial of service (DoS) attacks, and failed remote-to-local attacks, but they rarely detect successful remote-to-local system compromises. This occurs even though there are many signatures for such attacks, with hundreds to thousands of unsuccessful remote-to-local attacks per day, and analysts spend hours each day examining alerts.

This paper has two main goals. The first is to analyze how defensive techniques interact with network intrusion detection to determine when these systems will detect successful remote-to-local attacks. The second is to demonstrate that knowledge of the defensive posture of a site can enhance the utility of network intrusion detection by reducing the number of alerts that analysts must examine to detect system compromises.

The remainder of this paper first reviews the key characteristics of the most common type of network-based IDS. It also describes the use of firewalls to protect internal machines and to isolate, in a Demilitarized Zone (DMZ), systems that offer network services to the public. Following this, the importance of detecting and responding to remote-to-local attacks is discussed in relation to the utility of detecting and responding to other types of attacks commonly found by network IDS, including DoS and reconnaissance or scan attacks.

The concepts of “windows of vulnerability” and “windows of visibility” are then introduced. These represent time intervals when protected hosts can be compromised by exploiting recently discovered vulnerabilities and when these compromises will be detected by network intrusion detection systems. A detailed timeline analysis follows for eight important vulnerabilities. Each timeline indicates when vulnerabilities were announced, when software patches, intrusion detection signatures, and vulnerability scanner rules were available, and when vulnerabilities enabled major Internet worm incidents. The implications of these timelines for well-protected hosts in a DMZ where no hosts have known vulnerabilities are then discussed, and statistics on the frequency of discovery of serious vulnerabilities are presented. These show it is feasible to update server software whenever serious vulnerabilities are discovered for a small number of hosts. The implications of these analyses for poorly protected sites and for normal sites with many protected hosts are then discussed. The paper then focuses on an analysis of intrusion detection alerts at one site to demonstrate that knowledge of known vulnerabilities for protected hosts can be used to prioritize alerts and focus on those that may represent successful system compromises. This is followed by a summary and discussion of further issues.

## 2. Network-Based Intrusion Detection Systems
Network-based IDS that use signatures to detect known attacks are prevalent because they can monitor many hosts with a single IDS, and no changes are required on the monitored hosts. Descriptions and evaluations of research, commercial, and open-source network-based systems are available in [13,15,18,25]. These systems rely on signatures or rules to detect known attacks by comparing the contents of captured packets to these signatures or rules. For example, to determine if an attacker is attempting to access a backdoor file left behind by the CodeRed worm [2], the string “scripts/root.exe” could be searched for in incoming traffic on TCP port 80. Signature-based systems generally do not detect new attacks. In some instances, a new attack may be detected using an old signature [13,15], but this appears to be infrequent and usually occurs only for attacks such as buffer overflows that exploit similar vulnerabilities. A new attack is typically not detected unless a new signature is developed for that attack and installed in the IDS. Network-based IDS often do not distinguish between successful attacks and failed attempted attacks. For example, for the above CodeRed backdoor signature, the signature may create an alert whenever an external user attempts to execute the backdoor “root.exe” file, whether or not the executable exists or runs successfully.

Evaluations of IDS referenced above noted many practical limitations, including failing to match signatures when the network traffic load is too high, producing many false alarms, and being vulnerable to insertion and evasion attacks described in [20]. The initial analysis in this paper assumes an ideal IDS without these practical limitations. It will be assumed that a network-based IDS issues an alert whenever an attacker attempts to exploit a known vulnerability, that there are no alerts for attacks exploiting novel vulnerabilities, that there are no false alarms, and that after a new attack signature is installed, all instances of that attack are detected.

The initial analysis also focuses on secure networks where internal machines are behind a well-configured firewall, only a small number of machines in a DMZ provide public networked services, and a network IDS monitors traffic between the protected network and the Internet. This configuration is common at many government, educational, and commercial sites and influences system administrators to be most concerned about the security of the small number of vulnerable machines in the DMZ rather than the many more machines located behind a firewall.

## 3. The Importance of Successful Remote-to-Local Attacks
Table 1 categorizes three types of remote attacks: remote-to-local, DoS, and scan.

| Attack Type | Description |
|-------------|-------------|
| **Remote-to-Local** | A remote attacker obtains privileges on a protected local machine that are normally reserved for local users and inaccessible to remote users. |
| **DoS** | Denies access to a network service. |
| **Scan** | Obtains information about hosts and network services. |

These three categories of attacks are generally considered the most important types that can be detected using network-based IDS. Remote-to-local or privilege-gaining attacks allow remote users to obtain privileges they are normally denied. The most serious remote-to-local attacks provide attackers with root-level privileges on Unix hosts and Administrator privileges on Microsoft Windows hosts. DoS attacks deny access to a network service. Episodic DoS attacks send a small number of packets to induce a software or protocol fault, while continuous DoS attacks consume a resource by sending a continuous stream of packets. Scan or reconnaissance attacks provide an attacker with information about hosts and network services. Other important attack categories, such as “abuse of Internet privileges” and “poor security practices” (e.g., connecting to restricted web sites, downloading restricted material, using telnet instead of SSH), are not included in Table 1 because these behaviors are site-specific and can be detected using traffic monitoring.

Table 2 shows the importance of these three attack types by considering the potential damage, the most common local site-specific response, the response cost, and the effect of the response on other, future attackers who launch an identical attack against the same victim. This table applies only to known old attacks where software patches are available to prevent exploitation of the known vulnerability.

| Attack Type | Potential Damage | Immediate Local Response | Response Cost | Effect on Future Attackers |
|-------------|------------------|--------------------------|---------------|---------------------------|
| **Successful Remote-to-Local and Episodic DoS** | High | Shutdown, Analyze, Cleanup, Patch | High | Block This Attack Type |
| **Failed Remote-to-Local and Episodic DoS (Probe)** | None | Record/Block Source | Low | Record/Block Source |
| **Scan** | None | Record/Block Source | Low | Record/Block Source |
| **Continuous DoS** | Moderate | None | None | None |

This paper focuses on the detection of successful remote-to-local attacks because they are the most damaging and have enabled recent worldwide Internet security incidents, including many worms and DDoS attacks [2,3,6,7,8,12,23]. Detecting these attacks as they occur allows system administrators to react by shutting down and cleaning up the compromised systems and protecting against future attacks by installing software upgrades and patches. Such rapid action can prevent theft of corporate data, monetary loss from theft of financial information, and much longer downtimes caused by further compromises launched from the initial compromised machine. The dollar amount of losses due to remote-to-local attacks reported in [19] is roughly 5 to 35 times greater than that of DoS attacks, depending on whether the cost of “Theft of proprietary information” is added to the cost of “System penetration by outsider” when assessing the cost of remote-to-local attacks. While these attacks can cause the most severe damage, they are also the easiest to prevent from reoccurring. IDS can detect the initial remote connection for these attacks or post-compromise actions, including communications from the attacker, attempts to compromise other hosts, scanning from the compromised host, and packet streams sent from compromised hosts participating in DoS attacks. Detecting the initial remote connection simplifies the response and lessens the damage.

The next two rows in Table 2 contain failed remote-to-local and failed episodic DoS attacks (often called probes) and scan or reconnaissance attacks. Both types of attacks provide an attacker with information about remote hosts and network services but do no damage to the victim. Responses are also often ineffective in preventing future scans or probes. These attacks are ubiquitous and are enabled by many automated tools. Our experience on three separate Class B address spaces is that it is common to observe more than 40 separate scans per day from as many different sources, with hundreds to thousands of packets sent from each source to non-existent IP addresses. The Snort IDS [21] also often detects thousands of remote-to-local attacks each day. On one well-protected DMZ, careful hand verification of these alerts demonstrated that all were either caused by failed attacks or normal background traffic. Detecting scans and failed remote-to-local attacks provides situational awareness and sometimes indirectly detects previously successful remote-to-local attacks by identifying internal compromised machines that are scanning external hosts. The often-suggested response of blocking packets from external scanning or probing hosts may or may not be effective. It will block a novice attacker who scans and then attacks from the same source address but not more capable attackers who scan from compromised machines. It will also not block an attacker who uses public lists of IP addresses to find target machines or an attacker who falsifies the source IP address for probes. A non-local response not shown in Table 2 is to contact the system administrator of the external scanning machine. This can be extremely effective when possible but requires identifying the location of the scanning machine and gaining the cooperation of an unknown administrator. Detecting probes and scans thus provides some situational awareness and protection from simple attacks from the same source, but it does not usually protect against future attacks of the same type from different sources.

Continuous DoS attacks are the third category in Table 2. Distributed DoS (DDoS) attacks, where the attacker first compromises many hosts using remote-to-local attacks and installs agents that simultaneously send packets to one victim, have become a major concern in the past few years [6]. Although they don’t typically damage the target site, they prevent others from completing online purchases and obtaining information and can cause loss of revenue [19]. IDS are useful to detect continuous DoS attacks, but such attacks are relatively easy to detect at the victim by traffic monitoring tools, including many tools used for network management. Blocking packets from the attack sources stops these attacks. Local blocking at a victim site will stop the current attack but not necessarily prevent future attacks of the same type. More global responses that involve modifying the Internet infrastructure can limit the severity of these types of attacks, but this requires cooperation across many sites. IDS are thus not necessary to detect DoS attacks, and stopping an ongoing DoS attack provides little protection against future DoS attacks. Alternatively, detecting the original remote-to-local attacks used to create a group of agents can prevent these attacks.

In summary, remote-to-local attacks are the single most important category of known attacks that a network-based IDS can detect. They have the potential to inflict the most damage, and installing software patches prevents other attackers from exploiting the same vulnerability. Detecting probes and scans provides situational awareness, but these attacks do no damage. Detecting continuous DoS attacks is important, but often possible without IDS and does not lead to as great a financial loss as successful host compromises [19].

## 4. Windows of Vulnerability and Visibility
The ability to detect and respond to successful remote-to-local attacks depends on details concerning when vulnerabilities are discovered and publicized, when software patches or other fixes are made available and installed, and when signatures are made available and installed in IDS. Figure 1 shows the primary events that determine if successful remote-to-local attacks will be detected and two of the many possible orderings of events. In both timelines, a new vulnerability is discovered, and an exploit is developed that makes use of this vulnerability. After this, the following events occur:

- **Window of Vulnerability:** The time interval during which a protected host can be compromised by exploiting a recently discovered vulnerability.
- **Window of Visibility:** The time interval during which a compromise will be detected by a network IDS.

A detailed timeline analysis follows for eight important vulnerabilities. Each timeline indicates when vulnerabilities were announced, when software patches, intrusion detection signatures, and vulnerability scanner rules were available, and when vulnerabilities enabled major Internet worm incidents. The implications of these timelines for well-protected hosts in a DMZ where no hosts have known vulnerabilities are then discussed, and statistics on the frequency of discovery of serious vulnerabilities are presented. These show it is feasible to update server software whenever serious vulnerabilities are discovered for a small number of hosts. The implications of these analyses for poorly protected sites and for normal sites with many protected hosts are then discussed. The paper then focuses on an analysis of intrusion detection alerts at one site to demonstrate that knowledge of known vulnerabilities for protected hosts can be used to prioritize alerts and focus on those that may represent successful system compromises. This is followed by a summary and discussion of further issues.