title:Fixing ally's growing pains with velocity modeling
author:Adam Bender and
Rob Sherwood and
Neil Spring
Fixing Ally’s Growing Pains with Velocity Modeling
Adam Bender
Dept. of Computer Science
University of Maryland
College Park, MD, USA
PI:EMAIL
Rob Sherwood
Dept. of Computer Science
University of Maryland
College Park, MD, USA
PI:EMAIL
Neil Spring
Dept. of Computer Science
University of Maryland
College Park, MD, USA
PI:EMAIL
ABSTRACT
Mapping the router topology is an important component of
Internet measurement. Alias resolution, the process of map-
ping IP addresses to routers, is critical to accurate Internet
mapping. Ally, a popular alias resolution tool, was devel-
oped to resolve aliases in individual ISPs, but its probabilis-
tic accuracy and need to send O(n2) probes to infer aliases
among n IP addresses make it unappealing for large-scale
Internet mapping. In this paper, we present RadarGun, a
tool that uses IP identiﬁer velocity modeling to improve the
accuracy and scalability of the Ally-based resolution tech-
nique. We provide analytical bounds on Ally’s accuracy and
validate our predicted aliases against Ally. Additionally, we
show that velocity modeling requires only O(n) probes and
thus scales to Internet-sized mapping eﬀorts.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network
Operations—Network monitoring; C.2.1 [Computer-Com-
munication Networks]: Network Architecture and De-
sign—Network topology
General Terms
Measurement, Experimentation
Keywords
Alias resolution, IP identiﬁer, Velocity modeling, Ally
1.
INTRODUCTION
Measured network topologies have proven useful for di-
agnosis [8, 11, 19], modeling [9, 10], and simulation of new
protocols [20]. Yet their accurate construction, especially at
Internet scale, remains diﬃcult. We focus here on a speciﬁc
problem within this context: alias resolution, the process of
recognizing which of a set of IP addresses belong to inter-
faces on the same router.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’08, October 20–22, 2008, Vouliagmeni, Greece.
Copyright 2008 ACM 978-1-60558-334-1/08/10 ...$5.00.
Traceroute,
including variants modiﬁed to aid Internet
mapping [1, 3, 15], provides lists of IP addresses and ad-
jacencies between them. However, more useful is the set
of routers and their connections. As routers have many in-
terfaces, each with a diﬀerent IP address, alias resolution
is required to construct the many-to-one mapping of ad-
dresses (aliases) to routers. Constructing an accurate map-
ping is vital [7]. False aliases cause disparate addresses to be
grouped and entirely separate parts of a network to be con-
nected. False negatives can inﬂate path diversity estimates:
one path through each unresolved alias rather than a single
path through a single router [19].
Both types of errors are possible. Ally, the Rocketfuel [17]
tool for alias resolution, suﬀers from false positives and neg-
atives; Rocketfuel notes that the lack of completeness of
prior techniques led to even more false negatives. Analyt-
ical alias resolution [6], while able to resolve aliases for in-
terface addresses that are unresponsive to probes, appears
to have both types of error. Alias resolution by aligning
the addresses from the record-route IP option can also be
error-prone because of heterogeneous implementations [14].
Additionally, current probing methods do not scale to
Internet-sized topologies. To ﬁnd pairs of interface addresses
that share an IP identiﬁer (IP ID) counter (which we de-
possible
scribe in more detail below), Ally probes each of
combinations of n addresses, requiring O(n2) probes. In ad-
dition to being impractically slow for large values of n, rate
limiting and non-static networks compound inaccuracies.
´
`
n
2
In this paper, we describe a scalable, accurate method for
applying the IP ID alias resolution test en masse. To im-
prove the accuracy of alias resolution, we developed a tool,
RadarGun, that models the rate at which an interface’s IP
ID increases. By conducting an informed probing of ad-
dresses to recover IP identiﬁers, we can avoid several pitfalls.
First, many routers rate limit ICMP responses, making them
temporarily unresponsive when probed by Ally. RadarGun
can control the rate at which probes are transmitted and
collect enough probes from each address that a few missing
packets do not aﬀect the model. Second, diﬀerent routers
may advance through IP identiﬁers at diﬀerent rates: some
appear “busier” than others. Those with a fast counter may
skip thresholds hard-coded into Ally, causing false negatives.
We evaluate our technique against reliable aliases and
Ally-tested non-aliases to show correctness of inferences. We
quantify the number of probes required and how closely they
must be spaced and compute how much bandwidth would be
required to resolve aliases among 500,000 addresses. Finally,
we describe some interesting behaviors of the IP identiﬁer
counters, showing what appear to be periodic updates.
2. RELATED WORK
Pansiot and Grad [12] ﬁrst noticed the importance of
alias resolution in network mapping. Their technique sends
probes to an IP address and discovers an alias if the re-
sponse has a diﬀerent source address than the destination
of the probe: the source of the response is believed to be
an alias for the destination of the probe. Govindan and
Tangmunarunkit [5] extended this technique through source
routing to increase completeness.
Rocketfuel [17] introduced the “Ally” technique, which at-
tempts to detect whether two interface addresses share an
IP identiﬁer counter. The IP identiﬁer is a 16-bit ﬁeld in the
IP header that allows fragmented packets to be reassembled;
each fragment retains the unique identiﬁer of the original
packet. This identiﬁer allows an endhost to collect the frag-
ments that derive from the original packet and reconstruct
them into the original datagram. A common technique for
enforcing this uniqueness is to use a counter, which wraps
to 0 when it reaches its maximum value (216 − 1). If the two
addresses share a counter, the interfaces have the same host
processor and IP stack, and must be aliases. We present de-
tails of how Ally determines if two addresses share a counter
in Section 3.
Although Ally is able to resolve aliases that the source-
address technique could not (because this implementation
decision appeared more common than altering the source
address), it has major shortcomings. Primarily, the number
of probes required increases with the square of the number of
addresses; in principle, every address must be compared to
every other. Additionally, Ally is subject to false negatives
with busy routers (Section 3.1).
Recent research has shown alternative methods for ﬁnd-
ing aliases. These methods are motivated by an inability to
solicit responses from some router IP addresses. For exam-
ple, addresses in the Abilene backbone are not responsive
to UDP probes. Gunes and Sarac noted that incomplete or
erroneous alias resolution can signiﬁcantly alter the proper-
ties of the measured topologies [7] and proposed methods
to infer aliases that use common addressing practice [6]. In
prior work [14, 15], we noted the potential for using the
record route IP option to ﬁnd aliases during the execution
of a traceroute. While the record route technique discovered
11% of the total aliases, Ally still contributed the bulk.
Each of these techniques has strengths and weaknesses.
Although Ally might completely resolve those addresses that
respond, it has potential to produce false positives (if coun-
ters happen to have similar values when probed) and false
negatives (if a single counter increments quickly or probes
are lost). Rocketfuel [17] advised verifying each putative
alias at a later time with the expectation that such “ac-
cidental” aliases would be disproven. Even so, Teixeira et
al. [19] reported signiﬁcant errors in the alias resolution of
Rocketfuel-measured maps that alter the appearance of path
diversity when compared to real topologies. Feamster et
al. [4] used an implementation of Ally in which each test
was repeated 100 times and the majority opinion used to
determine an alias. These issues and uses suggest rethink-
ing this alias resolution method so that errors are avoided.
Bellovin [2] presented a similar problem: identifying dis-
tinct counters in packets that share a source address to
count the number of hosts behind network address trans-
lators. His technique created a list of IP ID sequences; each
observed packet would either be matched to an existing se-
D
I
P
I
 7000
 6500
 6000
 5500
 5000
 4500
 4000
 3500
205.124.244.150
207.98.64.66
 0
 50
 100  150  200  250  300  350  400
Time (s)
Figure 1: Two IP IDs that produce false positives
between time 150 and 210
63.218.14.46
D
I
P
I
 70000
 60000
 50000
 40000
 30000
 20000
 10000
 0
 0
 50  100  150  200  250  300  350  400  450
Time (s)
Figure 2: Router with quickly-increasing IP ID,
causing false negatives when probed by Ally
quence based on time and ID value, or would be the start of
a new sequence. The idea is that each sequence corresponds
to a host behind the NAT.
3. ALLY: ALIAS RESOLUTION WITH IP ID
Ally tests if two addresses, A and B, are interfaces on
the same router by sending a UDP packet to each address.
The destination(s) respond to each probe with an ICMP
“port unreachable” error. Ally records the IP ID of each
response packet. Let the IP IDs be idA,1 and idB,1.
If
the IP IDs of the ﬁrst are “close enough,” speciﬁcally, if
idA,1 − 10 < idB,1 < idA,1 + 200, Ally sends another pair of
probes to the same addresses, though in reverse order. The
“close enough” test is repeated for the second probe pair,
idA,2 and idB,2. If both tests pass, and both idA,1 < idA,2
and idB,1 < idB,2, then A and B are marked as aliases. If
the IP IDs observed from either pair of probes fail the test,
then A and B are classiﬁed as non-aliases.
3.1 Ally’s Shortcomings
While Rocketfuel [17] notes that Ally is subject to false
positives, we show that it is susceptible to false negatives
as well. False positives occur when two diﬀerent routers
happen to have similar IP ID values when they are probed.
Figure 1 shows such a case, extracted from our dataset of
IP IDs sampled over time. For any two probes sent in the
range of time demarcated by the vertical lines, Ally will infer
a false alias.
On the other hand, if the IP ID counter of a router in-
creases rapidly, then the observed IP IDs from that router
may not fall within the range that Ally expects. Thus two in-
terfaces on the same router may be classiﬁed as non-aliases.
Figure 2 shows a router whose IP ID was observed to in-
crease by almost 800 every second, implying it sources nearly
800 packets per second. If any probe packet is delayed by
more than 250 milliseconds, the router’s IP ID counter may
have incremented beyond Ally’s threshold. In addition, we
observe some routers who do not use a counter for the IP
ID values. IP ID-based techniques cannot be used to infer
aliases among these routers.
Ally was created with the intention of mapping only indi-
vidual ISPs. Problems arise when extending Ally to Internet-
scale topologies. Namely, whenever Ally attempts to infer
an alias between interfaces A and B, Ally requires fresh val-
ues of idA,1 and idB,1. Thus, for every possible alias pair
among n addresses, between two and four probes are sent,
´
`
n
meaning up to 4
2
total probes are required.
In addition, rate-limiting by routers presents a signiﬁcant
problem. If a router limits the rate at which it issues ICMP
packets, Ally resorts to a weaker test, because it cannot
receive paired responses. We measure the responsiveness of
routers in Section 4.1.
4. VELOCITY MODELING