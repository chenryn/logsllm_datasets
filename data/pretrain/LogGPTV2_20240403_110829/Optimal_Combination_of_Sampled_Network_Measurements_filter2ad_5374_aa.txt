title:Optimal Combination of Sampled Network Measurements
author:Nick G. Duffield and
Carsten Lund and
Mikkel Thorup
Optimal Combination of Sampled Network Measurements
AT&T Labs–Research, 180 Park Avenue, Florham Park, New Jersey, 07932, USA
Nick Dufﬁeld
Mikkel Thorup
{duffield,lund,mthorup}research.att.com
Carsten Lund
Abstract
IP network trafﬁc is commonly measured at multiple points
in order that all trafﬁc passes at least one observation point.
The resulting measurements are subsequently joined for
network analysis.
Many network management applications use measured
trafﬁc rates (differentiated into classes according to some
key) as their input data. But two factors complicate the
analysis. Trafﬁc can be represented multiple times in the
data, and the increasing use of sampling during measure-
ment means some classes of trafﬁc may be poorly repre-
sented.
In this paper, we show how to combine sampled trafﬁc
measurements in way that addresses both of the above is-
sues. We construct trafﬁc rate estimators that combine data
from different measurement datasets with minimal or close
to minimal variance. This is achieved by robust adaptation
to the estimated variance of each constituent. We motivate
the method with two applications: estimating the interface-
level trafﬁc matrix in a router, and estimating network-level
ﬂow rates from measurements taken at multiple routers.
1
Introduction
1.1 Background
The increasing speed of network links makes it infeasible to
collect complete data on all packets or network ﬂows. This
is due to the costs and scale of the resources that would
be required to accommodate the data in the measurement
infrastructure. These resources are (i) processing cycles at
the observation point (OP) which are typically scarce in a
router; (ii) transmission bandwidth to a collector; and (iii)
storage capacity and processing cycles for querying and
analysis at the collector.
These constraints motivate reduction of
the data.
Of three classical methods—ﬁltering, aggregation and
sampling—the ﬁrst two require knowing the trafﬁc features
of interest in advance, whereas only sampling allows the re-
tention of arbitrary detail while at the same time reducing
data volumes. Sampling also has the desirable property of
being simple to implement and quick to execute, giving it
an advantage over recently developed methods for comput-
ing compact approximate aggregates such as sketches [14].
Sampling is used extensively in trafﬁc measurement.
sFlow [17] sends packet samples directly to a collector. In
Trajectory Sampling, each packet is selected either at all
points on its path or none, depending on the result of apply-
ing a hash function to the packet content [3]. In Sampled
NetFlow [1], packets are sampled before the formation of
ﬂow statistics, in order to reduce the speed requirements
for ﬂow cache lookup. Several methods focus measure-
ments on the small proportion of longer trafﬁc ﬂows that
contain a majority of packets. An adaptive packet sam-
pling scheme for keeping ﬂow statistics in routers which
includes a binning scheme to keep track of ﬂows of differ-
ent lengths is proposed in [7]. Sample and Hold [8] samples
new ﬂow cache instantiations, so preferentially sampling
longer ﬂows. RATE [12] keeps statistics only on those
ﬂows which present successive packets to the router, and
uses these to infer statistics of the original trafﬁc. Packet
sampling methods are currently being standardized in the
Packet Sampling (PSAMP) Working Group of the Internet
Engineering Task Force [15]. Flow records can themselves
be sampled within the measurement infrastructure, either at
the collector, or at intermediate staging points. Flow-size
dependent sampling schemes have been proposed [4, 5, 6]
to avoid the high variance associated with uniform sam-
pling of ﬂows with a heavy tailed length distribution.
1.2 Motivation
Multiple Trafﬁc Measurements. This paper is motivated
by the need to combine multiple and possibly overlapping
samples of network trafﬁc for estimation of the volumes or
rates of matrix elements and other trafﬁc components. By a
trafﬁc component we mean a (maximal) set of packets shar-
ing some common property (such as a ﬂow key), present
in the network during a speciﬁed time frame. Trafﬁc OPs
USENIX Association
Internet Measurement Conference 2005  
91
can be different routers, or different interfaces on the same
router. Reasons for taking multiple measurements include:
(i) all trafﬁc must pass at least one OP; (ii) measurements
must be taken at a speciﬁed set of OPs; and (iii) network
trafﬁc paths must be directly measured.
Sampling and Heterogeneity. Trafﬁc analysis often re-
quires joining the various measurement datasets, while at
the same time avoiding multiple counting. Sampling in-
troduces further complexity since quantities deﬁned for the
original trafﬁc (e.g. trafﬁc matrix elements) can only be es-
timated from the samples. Estimation requires both renor-
malization of trafﬁc volumes in order to take account of
sampling, and analysis of the inherent estimator variability
introduced through sampling.
Depending on the sampling algorithm used, the propor-
tion of trafﬁc sampled from a given trafﬁc component may
depend on (i) the sampling rate (e.g. when sampling uni-
formly) and/or (ii) the proportion of that component in the
underlying trafﬁc (e.g. when taking a ﬁxed number of sam-
ples from a trafﬁc population). Spatial heterogeneity in
trafﬁc rates and link speeds presents a challenge for esti-
mating trafﬁc volumes, since a trafﬁc component may not
be well represented in measurements all points, and sam-
pling rates can differ systematically across the network. For
example, the sampling rate at a lightly loaded access link
may be higher than at a heavily loaded core router. Changes
in background trafﬁc rates (e.g. due to attacks or rerouting)
can cause temporal heterogeneity in the proportion of traf-
ﬁc sampled.
Combining Estimates. This paper investigates how best
to combine multiple estimates of a given trafﬁc component.
Our aim is to minimize the variability of the combined es-
timate. We do this by taking a weighted average of the
component estimates that takes account of their variances.
Naturally, this approach requires that the variance of each
component is known, or can at least be estimated from the
measurements themselves. A major challenge in this ap-
proach is that inaccurate estimates of the variance of the
components can severely impair the accuracy of the combi-
nation. We propose robust solutions that adapt to estimated
variances while bounding the impact of their inaccuracies.
What are the advantages of adapting to estimated vari-
ances, and combining multiple estimates? Why not simply
use the estimate with lowest variance? The point of adapta-
tion is that the lowest variance estimate cannot generally be
identiﬁed in advance, while combining multiple estimates
gains signiﬁcant reduction in variance.
The component estimators are aggregates of individual
measurements. Their variances can be estimated provided
the sampling parameters in force at the time of measure-
ment are known. This is possible when sampling parame-
ters are reported together the measurements, e.g., as is done
by Cisco Sampled NetFlow [2]. The estimated variance is
additive over the measurements. This follows from a sub-
tle but important point: we treat the underlying trafﬁc as
a single ﬁxed sample path rather than a statistical process.
The only variance is due to sampling, which can be imple-
mented to be independent over each packet or ﬂow record.
Consequently, variance estimates can be aggregated along
with the estimates themselves, even if the underlying sam-
pling parameters change during the period of aggregation.
We now describe two scenarios in which multiple over-
lapping trafﬁc measurement datasets are produced,
in
which our methodology can be usefully applied. We also
mention a potential third application, although we do not
pursue it in this paper.
1.3 Router Matrix Estimation
Router Measurements and Matrix Elements. Appli-
cations such as trafﬁc engineering often entail determin-
ing trafﬁc matrices, either between ingress-egress interface
pairs of a router, or at ﬁner spatial scales, e.g., at the routing
preﬁx level or subnet level matrices for trafﬁc forwarded
through a given ingress-egress interface pair. A common
approach to trafﬁc matrix estimation is for routers to trans-
mit reports (e.g. packet samples or NetFlow statistics) to
a remote collector, where aggregation into matrix elements
(MEs) is performed.
Observation Points and Sampling Within a Router.
The choice of OPs within the router can have a great effect
on the accuracy of trafﬁc matrices estimated from samples.
Consider the following alternatives:
• Router-level Sampling:
all trafﬁc at the router is
treated as a single stream to be sampled. We assume
ingress and egress interface can be attributed to the
measure trafﬁc, e.g., as reported by NetFlow.
• Unidirectional Interface-level Sampling:
trafﬁc is
sampled independently in one direction (incoming or
outgoing) of each interface.
• Bidirectional Interface-level Sampling: trafﬁc is sam-
pled independently in both interface directions.
Comparing Sampling at the Observation Points. Ac-
curate estimation of an ME requires sufﬁciently many ﬂows
to be sampled from it. For example, in uniform sampling
with probability p, the relative standard deviation for un-
biased estimation of the total bytes of n ﬂows behaves
roughly as ∼ 1/
np. We propose two classes of impor-
tant MEs:
√
(i) Large matrix elements: these form a signiﬁcant propor-
tion of the total router trafﬁc.
(ii) Relatively large matrix elements: these form a signif-
icant proportion of the trafﬁc on either or both of their
ingress or egress router interfaces. (We use the terms small
and relatively small in an obvious way).
92
Internet Measurement Conference 2005
USENIX Association
Gravity Model Example. In this case the ME mxy from
interface x to interface y is proportional to M in
y where
M in and M out denote the interface input and output totals;
see [13, 18]. The large MEs mxy are those for which both
M in
are large. The relatively large MEs are those
for which either M in
(or both) are large.
x and M out
x M out
y
x or M out
y
Router level sampling is good for estimating large MEs,
but not those that are only relatively large at the router
level. This is because the sampling rate is independent of its
ingress and egress interfaces. In the gravity model, router
sampling is good for estimating the “large-to-large” MEs,
are large)
(i.e.
but not good for estimating “large-to-small” and “small-to-
large” (and “small-to-small”) MEs.
those mxy for which both M in
x and M out
y
Unidirectional interface-level sampling offers some im-
provement, since one can use a higher sampling rate on
interfaces that carry less trafﬁc. However, unidirectional
sampling, say on the ingress direction, will not help in get-
ting sufﬁcient samples from a small interface-to-interface
trafﬁc ME whose ingress is on an interface that carries a
high volume of trafﬁc.
In the gravity model, “large-to-
small” (and “small-to-small”) MEs would be problematic
with ingress sampling.
Only bidirectional interface-level sampling can give a
representative sample of small but relatively large MEs.
Two different estimates of the MEs could be formed, one
by selecting from an ingress interface all samples destined
for a given egress interface, and one by selecting from an
egress interface all samples from a given input interface.
The two estimates are then combined using the method pro-
posed in this paper.
The effectiveness of router or interface level sampling
for estimating large or relatively large MEs depends on the
sampling rates employed and/or the resources available for
storing the samples in each case.
If router level and in-
terface level sampling are employed, three estimates (from
router, ingress and egress sampling) can be combined. In
both the three-way and two-way combinations, no prior
knowledge is required of sampling parameters or the sizes
of the MEs or their sizes relative to the trafﬁc streams from
which they are sampled.
Resources and Realization. The total number of sam-
ples taken is a direct measure of the memory resources em-
ployed. We envisage two realizations in which our analysis
is useful. Firstly, for router based resources, the question
is how to allocate a given amount of total router memory
between router based and interface based sampling. The
second realization is for data collection and analysis. Al-
though storage is far cheaper than in the router case, there
is still a premium on query execution speed. Record sam-
pling reduces query execution time. The question becomes
how many samples of each type (interface or router) should
be used by queries.
1.4 Network Matrix Estimation Problem
The second problem that we consider is combining mea-
surements taken at multiple routers across a network. One
approach is to measure at all edge interfaces, i.e., access
routers and peering points. Except for trafﬁc destined
to routers themselves, trafﬁc is sampled at both ingress
and egress to the network. Estimating trafﬁc matrices be-
tween edges is then analogous to the problem of estimating
ingress-egress MEs in a single router from bidirectional in-
terface samples.
Once measurement and packet sampling capabilities be-
come standardized through the PSAMP and Internet Proto-
col Flow Information eXport (IPFIX) [11] Working Groups
of the IETF, measurements could be ubiquitously available
across network routers. Each trafﬁc ﬂow would potentially
be measured at all routers on its path. With today’s path
lengths, this might entail up to 30 routers [16]. However,
control of the total volume of data trafﬁc may demand that
the sampling rate at each OP be quite low; estimates from
a single OP may be quite noisy. The problem for analysis
is how to combine these noisy estimates to form a reliable
one.
1.5 Parallel Samples
Multiple sampling methods may be used to match differ-
ent applications to the statistical features of the trafﬁc. For
example, the distribution of bytes and packet per ﬂow has
been found to be heavy-tailed; see [10]. For this reason,
sampling ﬂow records with a non-uniform probability that
is higher for longer ﬂows leads to more accurate estimation
of the total trafﬁc bytes than uniform sampling; see [4]. On
the other hand, estimates of the number of ﬂows are more
accurate with uniform sampling. When multiple sampling
methods are used, it is desirable to exploit all samples gen-
erated by both methods if this reduces estimator variance.
1.6 Outline
Section 2 describes the basic model for trafﬁc sampling,
then describes a class of minimum variance convex com-
bination estimators. The pathologies that arise when using
these with estimated variance are discussed. Section 3 pro-
poses two regularized estimators that avoid these patholo-
gies. Section 4 recapitulates two closely related sam-
ple designs for size dependent sampling of ﬂow records,
and applies the general form of the regularized estimators
from Section 3 in each case. The remainder of the pa-
per is concerned with experimental evaluation of the reg-
ularized size-dependent estimators for combining samples
of ﬂow records. Section 5 evaluates their performance in
the router interface-level trafﬁc matrix estimation problem
of Section 1.3, and demonstrates the beneﬁts of including
interface-level samples in the combination. Section 6 eval-
uates performance of the regularized estimators in the net-
USENIX Association
Internet Measurement Conference 2005  
93
work matrix estimation problem of Section 1.4 and shows
how they provide a robust combination estimates under
wide spatial variation in the underlying sampling rate. We
conclude in Section 7.
2 Combining Estimators
2.1 Models for Trafﬁc and Sampling
Consider n trafﬁc ﬂows labelled by i = 1, 2, . . . , n, with
byte sizes xi. We aim to estimate the byte total X =
i=1 xi. Each ﬂow i can be sampled at one of m OPs,
Pn
giving rise to estimators bX1, . . . bXm of X as follows. Let
pij > 0 be the probability that ﬂow i is selected at OP j. In
general pij will be a function of the size xi, while its depen-
dence on j reﬂects the possible inhomogeneity of sampling
parameters across routers.
by pij compensates for the fact that the ﬂow may not be
Let χij be the indicator of selection, i.e., χij = 1 when
the ﬂow i is selected in measurement j, and 0 otherwise.
Then eachbxij = χijxi/pij is an unbiased estimator of xi,
i.e., E[bxij] = xi for all measurements j. Renormalization
selected. Clearly bXj =Pn
i=1bxij is an unbiased estimator
the randomness in the bXi arises only from sampling. We
bXj are independent.
assume that the sampling decisions (the χij) for each ﬂow
i at each of the m OPs are independent; it follows that the
of X. Note the xi are considered deterministic quantities;
2.3 Average Combination Estimator
estimator is unbiased since the λj are independent
Here λj = 1/m hence bX = m−1Pm
j=1 bXj. This
E[bX] = Pm
j=1 λjE[bXj] = X. It has variance Var(bX) =
m−2Pm
However, it suffers from sensitivity of Var(bX) to one con-
stituent estimator bXj having large variance vj, due to. e.g.,
j=1 vj. This estimator is very simple to compute.
a small sampling rate. The average estimator is special case
of the following class of estimator.
:
2.4
When λj is independent of bXj, bX is unbiased, since
Independent {λj} and {bXj}.