CREATEVIEW—Constructsavirtualtable
CREATEVIEWviewASSELECTquery
Inputs
view Thenameofaviewtobecreated.
query AnSQLquerywhichwillprovidethecolumnsandrowsoftheview.
RefertotheSELECTstatementformoreinformationaboutvalidarguments.
Outputs
CREATE Themessagereturnediftheviewissuccessfullycreated.
ERROR: Relation’view’alreadyexists Thiserroroccursiftheviewspecifiedalreadyexists
inthedatabase.
NOTICEcreate:attributenamed "column"hasanunknowntype Theviewwillbecreated
havingacolumn withanunknown typeif you do notspecifyit. For example,thefollowing
commandgivesawarning:
CREATE VIEW vista AS SELECT ’Hello World’
whereasthiscommanddoesnot:
CREATE VIEW vista AS SELECT text ’Hello World’
328 APPENDIXD. REFERENCEMANUAL
Description
CREATE VIEW will define a view of a table or class. This view is not physicallymaterialized.
Specifically,aqueryrewriteretrieveruleisautomaticallygeneratedtosupportretrieveoperations
onviews.
Notes
Currently,viewsarereadonly.
UsetheDROPVIEWstatementtodropviews.
Usage
CreateaviewconsistingofallComedyfilms:
CREATE VIEW kinds AS
SELECT *
FROM films
WHERE kind = ’Comedy’;
SELECT *
FROM kinds;
code | title | did | date_prod | kind | len
-------+---------------------------+-----+------------+--------+-------
UA502 | Bananas | 105 | 1971-07-13 | Comedy | 01:22
C_701 | There’s a Girl in my Soup | 107 | 1970-06-11 | Comedy | 01:36
(2 rows)
Compatibility
SQL92
SQL92specifiessomeadditionalcapabilitiesfortheCREATEVIEWstatement:
CREATEVIEWview[column[,...] ] AS
SELECTexpression[AScolname][,...]
FROMtable
[WHEREcondition]
[WITH[CASCADE|LOCAL]CHECKOPTION]
TheoptionalclausesforthefullSQL92commandare:
CHECKOPTION Thisoptionistodowithupdatableviews. AllINSERTsandUPDATEsonthe
viewwillbe checkedto ensuredatasatisfytheview-definingcondition. If theydo not, the
updatewillberejected.
D.27. CREATEDB 329
LOCAL Checkforintegrityonthisview.
CASCADE Checkforintegrityon thisviewandonanydependentview. CASCADE isassumed
ifneitherCASCADEnorLOCALisspecified.
D.27 createdb
Name
createdb—CreateanewPostgresdatabase
createdb[options]dbname[description]
Inputs
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport Specifiesthe InternetTCP/IP port or local Unix domain socket file extensionon
whichthepostmasterislisteningforconnections.
-U,–usernameusername Usernametoconnectas.
-W,–password Forcepasswordprompt.
-e,–echo Echothequeriesthatcreatedbgeneratesandsendstothebackend.
-q,–quiet Donotdisplayaresponse.
-D,–locationdatadir Specifiesthealternatedatabaselocationforthisdatabaseinstallation. This
isthelocationoftheinstallationsystemtables,notthelocationofthisspecificdatabase,which
maybedifferent.
-E,–encodingencoding Specifiesthecharacterencodingschemetobeusedwiththisdatabase.
dbname Specifiesthe nameof thedatabaseto becreated. Thenamemust beuniqueamongall
Postgres databases in this installation. The default is to create a database with the same
nameasthecurrentsystemuser.
description Thisoptionallyspecifiesacommenttobeassociatedwiththenewlycreateddatabase.
Theoptions-h,-p,-U,-W,and-earepassedonliterallytopsql.
330 APPENDIXD. REFERENCEMANUAL
Outputs
CREATEDATABASE Thedatabasewassuccessfullycreated.
createdb:Databasecreationfailed. (Saysitall.)
createdb:Commentcreationfailed.(Databasewascreated.) Thecomment/descriptionfor
thedatabasecouldnotbecreated. thedatabaseitselfwillhavebeencreatedalready. Youcan
usetheSQLcommandCOMMENTONDATABASEtocreatethecommentlateron.
If there is an error condition, the backend error message will be displayed. See CREATE
DATABASEandpsqlforpossibilities.
Description
createdb creates a new Postgres database. The user who executes this command becomes the
databaseowner.
createdb is a shell script wrapper around the SQL command CREATE DATABASE via the
Postgresinteractiveterminalpsql. Thus,thereisnothingspecialaboutcreatingdatabasesviathis
orothermethods. Thismeansthatthepsqlmustbefoundbythescriptandthatadatabaseserver
is runningatthetargetedhost. Also,anydefaultsettingsandenvironmentvariablesavailableto
psqlandthelibpqfront-endlibrarydoapply.
Usage
Tocreatethedatabasedemousingthedefaultdatabaseserver:
$ createdb demo
CREATE DATABASE The response is the same as you would have gotten from running the
CREATEDATABASESQLcommand.
Tocreatethedatabasedemousingthepostmasteronhosteden,port5000,usingtheLATIN1
encodingschemewithalookattheunderlyingquery:
$ createdb -p 5000 -h eden -E LATIN1 -e demo
or
CREATE DATABASE "demo" WITH ENCODING = ’LATIN1’ CREATE DATABASE
D.28. CREATELANG 331
D.28 createlang
Name
createlang—AddanewprogramminglanguagetoaPostgresdatabase
createlang[connectionoptions][langname[dbname]]
createlang[connectionoptions]–list|-l[dbname]
Inputs
createlangacceptsthefollowingcommandlinearguments:
langname Specifies the name of the backend programming language to be defined. createlang
willpromptforlangnameifitisnotspecifiedonthecommandline.
-d,–dbname dbname Specifieswhichdatabasethelanguageshouldbeadded.
-l,–list Showsalistofalreadyinstalledlanguagesinthetargetdatabase(whichmustbespecified).
createlangalsoacceptsthefollowingcommandlineargumentsforconnectionparameters:
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport Specifiesthe InternetTCP/IP port or local Unix domain socket file extensionon
whichthepostmasterislisteningforconnections.
-U,–usernameusername Usernametoconnectas.
-W,–password Forcepasswordprompt.
Outputs
Most error messages are self-explanatory. If not, run createlang with the –echo option and see
undertherespectiveSQLcommandfordetails. Checkalsounderpsqlformorepossibilities.
Description
createlangisautilityforaddinganewprogramminglanguagetoaPostgresdatabase. createlang
currentlyacceptstwolanguages,plsqlandpltcl.
AlthoughbackendprogramminglanguagescanbeaddeddirectlyusingseveralSQLcommands,
itisrecommendedto usecreatelangbecauseitperformsanumberofchecksandismuch easier
touse. SeeCREATELANGUAGEformore.
Notes
Usedroplangtoremovealanguage.
332 APPENDIXD. REFERENCEMANUAL
Usage
Toinstallpltcl:
$ createlang pltcl
D.29 createuser
Name
createuser—CreateanewPostgresuser
createuser[options][username]
Inputs
-h,–hosthost Specifiesthehostnameofthemachineonwhichthepostmasterisrunning.
-p,–portport Specifiesthe InternetTCP/IP port or local Unix domain socket fileextension on
whichthepostmasterislisteningforconnections.
-e,–echo Echothequeriesthatcreatedbgeneratesandsendstothebackend.
-q,–quiet Donotdisplayaresponse.
-d,–createdb Allowsthenewusertocreatedatabases.
-D,–no-createdb Forbidsthenewusertocreatedatabases.
-a,–adduser Allowsthenewusertocreateotherusers.
-A,–no-adduser Forbidsthenewusertocreateotherusers.
-P, –pwprompt Ifgiven,createuserwillissueapromptforthepasswordofthenewuser. Thisis
notnecessaryifyoudonotplanonusingpasswordauthentication.
-i,–sysid uid Allows you to picka non-default userid for thenew user. This isnot necessary,
butsomepeoplelikeit.
username Specifies the name of the Postgres user to be created. This name must be unique
amongallPostgresusers.
Youwillbepromptedforanameandothermissinginformationifitisnotspecifiedonthecommand
line. The options -h, -p, and -e, are passed on literally to psql. The psql options -U and -W are
availableaswell,buttheirusecanbeconfusinginthiscontext.
D.30. DECLARE 333
Outputs
CREATEUSER Alliswell.
createuser:creationofuser"username"failed Something went wrong. The user was not
created.
Ifthereisanerrorcondition, thebackenderrormessagewillbedisplayed. SeeCREATE USER
andpsqlforpossibilities.
Description
createusercreatesanewPostgresuser. Onlyuserswithusesupersetinthepg_shadowclasscan
createnewPostgresusers.
createuserisashellscriptwrapperaroundtheSQLcommandCREATEUSERviathePostgres
interactive terminal psql. Thus, there is nothing special about creating users via this or other
methods. This means that the psql must be found by the script and that a database server is
runningatthetargetedhost. Also,anydefaultsettingsandenvironmentvariablesavailabletopsql
andthelibpqfront-endlibrarydoapply.
Usage
Tocreateauserjoeonthedefaultdatabaseserver:
$ createuser joe
Is the new user allowed to create databases? (y/n) n
Shall the new user be allowed to create more new users? (y/n) n
CREATE USER
Tocreatethesame userjoe usingthepostmasteron hosteden,port5000,avoidingtheprompts
andtakingalookattheunderlyingquery:
$ createuser -p 5000 -h eden -D -A -e joe
CREATE USER "joe" NOCREATEDB NOCREATEUSER CREATE USER
D.30 DECLARE
Name
DECLARE—Definesacursorfortableaccess
DECLAREcursorname[BINARY][INSENSITIVE][SCROLL]
CURSORFORquery
[FOR{READONLY|UPDATE[OFcolumn[,...] ] ]
334 APPENDIXD. REFERENCEMANUAL
Inputs
cursorname ThenameofthecursortobeusedinsubsequentFETCHoperations.
BINARY Causesthecursortofetchdatainbinaryratherthanintextformat.
INSENSITIVE SQL92 keyword indicating that data retrieved from the cursor should be unaf-
fected by updates from other processes or cursors. Since cursor operations occur within
transactionsinPostgresthisisalwaysthecase. Thiskeywordhasnoeffect.
SCROLL SQL92 keyword indicating that data may be retrieved in multiple rows per FETCH
operation. SincethisisallowedatalltimesbyPostgresthiskeywordhasnoeffect.
query An SQL query which will provide the rows to be governed by the cursor. Refer to the
SELECTstatementforfurtherinformationaboutvalidarguments.
READONLY SQL92keywordindicatingthatthecursorwillbeusedinareadonlymode. Since
thisistheonlycursoraccessmodeavailableinPostgresthiskeywordhasnoeffect.
UPDATE SQL92 keywordindicatingthatthecursorwillbeusedtoupdatetables. Sincecursor
updates are not currently supported in Postgres this keyword provokes an informational
errormessage.
column Column(s)tobeupdated. SincecursorupdatesarenotcurrentlysupportedinPostgres
theUPDATEclauseprovokesaninformationalerrormessage.
Outputs
SELECT ThemessagereturnediftheSELECTisrunsuccessfully.
NOTICE BlankPortalAssignName:portal"cursorname"alreadyexists This error occurs
ifcursornameisalreadydeclared.
ERROR: Namedportalsmayonlybeusedinbegin/endtransactionblocks This error oc-
cursifthecursorisnotdeclaredwithinatransactionblock.
Description
DECLAREallowsausertocreatecursors,whichcanbeusedtoretrieveasmallnumberofrows
at a time out of a larger query. Cursors can return data either in text or in binary format using
FETCH.
Normalcursorsreturndataintextformat,eitherASCIIoranotherencodingschemedepending
onhowthePostgresbackendwasbuilt. Sincedataisstorednativelyinbinaryformat,thesystem
mustdoaconversiontoproducethetextformat. Inaddition,textformatsareoftenlargerinsize
than the correspondingbinaryformat. Once the information comes backin textform, theclient
D.30. DECLARE 335
applicationmayneedtoconvertitto abinaryformattomanipulateit. BINARYcursorsgiveyou
backthedatainthenativebinaryrepresentation.
Asanexample,ifaqueryreturnsavalueofonefromanintegercolumn,youwouldgetastring
of ’1’ with a default cursor whereas with a binary cursor you would get a 4-byte value equal to
control-A(ˆA).
BINARYcursorsshouldbeusedcarefully. Userapplicationssuchaspsqlarenotawareofbinary
cursorsandexpectdatatocomebackinatextformat.
Stringrepresentationisarchitecture-neutralwhereasbinaryrepresentationcandifferbetween
differentmachinearchitecturesandPostgresdoesnotresolvebyteorderingorrepresentationissuesfor
binarycursors. Therefore,ifyourclientmachineandservermachineusedifferentrepresentations
(e.g.,"big-endian"versus"little-endian"),youwillprobablynotwantyourdatareturnedin binary
format. However, binary cursors may be a little more efficient since there is less conversion
overhead in the server to client data transfer. Tip: If you intend to display the data in ASCII,
gettingitbackinASCIIwillsaveyousomeeffortontheclientside.
Notes
Cursorsareonlyavailableintransactions. UsetoBEGIN,COMMIT andROLLBACK todefinea
transactionblock.
In SQL92 cursors are only available in embedded SQL (ESQL) applications. The Postgres
backend does not implement an explicit OPEN cursor statement; a cursor is considered to be
openwhenitisdeclared. However,ecpg,theembeddedSQLpreprocessorforPostgres,supports
theSQL92cursorconventions,includingthoseinvolvingDECLAREandOPENstatements.
Usage
Todeclareacursor:
DECLARE liahona CURSOR FOR
SELECT * FROM films;
Compatibility
SQL92
SQL92 allows cursors only in embedded SQL and in modules. Postgres permits cursors to be
usedinteractively. SQL92 allows embeddedor modular cursors to update databaseinformation.
AllPostgrescursorsarereadonly. TheBINARYkeywordisaPostgresextension.
336 APPENDIXD. REFERENCEMANUAL
D.31 DELETE
Name
DELETE—Removesrowsfromatable
DELETEFROMtable[WHEREcondition]
Inputs
table Thenameofanexistingtable.
condition ThisisanSQLselectionquerywhichreturnstherowswhicharetobedeleted.
RefertotheSELECTstatementforfurtherdescriptionoftheWHEREclause.
Outputs
DELETEcount Messagereturnedifitemsaresuccessfullydeleted. Thecountisthenumberof
rowsdeleted.
Ifcountis0,norowsweredeleted.
Description
DELETEremovesrowswhichsatisfytheWHEREclausefromthespecifiedtable.
If the condition (WHERE clause) is absent, the effect is to delete all rows in the table. The
resultisavalid,butemptytable. Tip: TRUNCATEisaPostgresextensionwhichprovidesafaster
mechanismtoremoveallrowsfromatable.
Youmusthavewriteaccesstothetableinordertomodifyit,aswellasreadaccesstoanytable
whosevaluesarereadinthecondition.
Usage
Removeallfilmsbutmusicals:
DELETE FROM films
WHERE kind <> ’Musical’;
SELECT * FROM films;
code | title | did | date_prod | kind | len
-------+---------------------------+-----+------------+---------+-------
UA501 | West Side Story | 105 | 1961-01-03 | Musical | 02:32
TC901 | The King and I | 109 | 1956-08-11 | Musical | 02:13
WD101 | Bed Knobs and Broomsticks | 111 | | Musical | 01:57
(3 rows)
D.32. DROPAGGREGATE 337
Clearthetablefilms:
DELETE FROM films;
SELECT * FROM films;
code | title | did | date_prod | kind | len
------+-------+-----+-----------+------+-----
(0 rows)
Compatibility
SQL92
SQL92allowsapositionedDELETEstatement:
DELETE FROM table WHERE CURRENT OF cursor
wherecursoridentifiesanopencursor. InteractivecursorsinPostgresareread-only.
D.32 DROP AGGREGATE
Name
DROPAGGREGATE—Removesthedefinitionofanaggregatefunction
DROPAGGREGATEnametype
Inputs
name Thenameofanexistingaggregatefunction.
type Thetypeofanexistingaggregatefunction. (RefertothePostgreSQLUser’sGuideforfurther