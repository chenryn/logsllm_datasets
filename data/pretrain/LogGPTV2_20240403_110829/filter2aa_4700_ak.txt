                    // WARNING: Store size is inaccurate
            *(undefined *)puVar16 = *(undefined *)puVar14;
                    // WARNING: Store size is inaccurate
            *(undefined *)(puVar17 + -4) = auVar19;
            uVar10 = uVar10 - 0x20;
            puVar15 = puVar14;
            puVar17 = puVar16;
            uVar11 = param_3;
          } while ((uVar10 & 0xffffffe0) != 0);
        }
      }
    }
    while ((uVar10 & 0xfffffffc) != 0) {
      puVar16 = puVar16 + -1;
      puVar14 = puVar14 + -1;
      *puVar16 = *puVar14;
      uVar10 = uVar10 - 4;
    }
    while (uVar10 != 0) {
      puVar16 = (undefined4 *)((int)puVar16 - 1);
      puVar14 = (undefined4 *)((int)puVar14 + -1);
      *(undefined *)puVar16 = *(undefined *)puVar14;
      uVar10 = uVar10 - 1;
    }
    return CONCAT44(uVar11,param_1);
  }
  uVar10 = param_3;
  puVar18 = param_1;
  if (0x1f > 1 & 1) != 0) {
LAB_00403f7d:
        if (uVar10 == 0) goto LAB_00403fe0;
        param_3 = uVar10 >> 5;
        while (param_3 != 0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 2);
                    // WARNING: Store size is inaccurate
          *(undefined *)puVar18 = *(undefined *)param_2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 2) = auVar19;
          param_2 = param_2 + 4;
          puVar18 = puVar18 + 4;
          param_3 = param_3 - 1;
        }
        goto LAB_00403fab;
      }
LAB_00403cd7:
      uVar10 = (uint)param_1 & 3;
      puVar18 = param_1;
      while (uVar10 != 0) {
        *(undefined *)puVar18 = *(undefined *)param_2;
        param_3 = param_3 - 1;
        param_2 = (undefined8 *)((int)param_2 + 1);
        puVar18 = (undefined8 *)((int)puVar18 + 1);
        uVar10 = (uint)puVar18 & 3;
      }
    }
    else {
      uVar10 = param_3;
      puVar18 = param_1;
      if ((DAT_0041ec78 >> 1 & 1) != 0) {
        while (uVar10 != 0) {
          uVar10 = uVar10 - 1;
          *(undefined *)puVar18 = *(undefined *)param_2;
          param_2 = (undefined8 *)((int)param_2 + 1);
          puVar18 = (undefined8 *)((int)puVar18 + 1);
        }
        return CONCAT44(param_3,param_1);
      }
      if (((((uint)param_1 ^ (uint)param_2) & 0xf) == 0) && ((DAT_0041e010 >> 1 & 1) != 0)) {
        puVar18 = param_1;
        if (((uint)param_2 & 0xf) != 0) {
          uVar11 = 0x10 - ((uint)param_2 & 0xf);
          param_3 = param_3 - uVar11;
          uVar10 = uVar11 & 3;
          puVar18 = param_1;
          while (uVar10 != 0) {
            *(undefined *)puVar18 = *(undefined *)param_2;
            param_2 = (undefined8 *)((int)param_2 + 1);
            puVar18 = (undefined8 *)((int)puVar18 + 1);
            uVar10 = uVar10 - 1;
          }
          uVar11 = uVar11 >> 2;
          while (uVar11 != 0) {
            *(uint *)puVar18 = *(uint *)param_2;
            param_2 = (undefined8 *)((int)param_2 + 4);
            puVar18 = (undefined8 *)((int)puVar18 + 4);
            uVar11 = uVar11 - 1;
          }
        }
        uVar10 = param_3 & 0x7f;
        param_3 = param_3 >> 7;
        while (param_3 != 0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 2);
                    // WARNING: Load size is inaccurate
          auVar2 = *(undefined *)(param_2 + 4);
                    // WARNING: Load size is inaccurate
          auVar3 = *(undefined *)(param_2 + 6);
                    // WARNING: Store size is inaccurate
          *(undefined *)puVar18 = *(undefined *)param_2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 2) = auVar19;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 4) = auVar2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 6) = auVar3;
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          auVar19 = *(undefined *)(param_2 + 10);
                    // WARNING: Load size is inaccurate
          auVar2 = *(undefined *)(param_2 + 0xc);
                    // WARNING: Load size is inaccurate
          auVar3 = *(undefined *)(param_2 + 0xe);
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 8) = *(undefined *)(param_2 + 8);
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 10) = auVar19;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 0xc) = auVar2;
                    // WARNING: Store size is inaccurate
          *(undefined *)(puVar18 + 0xe) = auVar3;
          param_2 = param_2 + 0x10;
          puVar18 = puVar18 + 0x10;
          param_3 = param_3 - 1;
        }
        goto LAB_00403f7d;
      }
      if (((DAT_0041ec78 & 1) == 0) || (((uint)param_1 & 3) != 0)) goto LAB_00403cd7;
      puVar18 = param_1;
      if (((uint)param_2 & 3) == 0) {
        if (((uint)param_1 >> 2 & 1) != 0) {
          uVar8 = *(undefined4 *)param_2;
          param_3 = param_3 - 4;
          param_2 = (undefined8 *)((int)param_2 + 4);
          *(undefined4 *)param_1 = uVar8;
          param_1 = (undefined8 *)((int)param_1 + 4);
        }
        if (((uint)param_1 >> 3 & 1) != 0) {
          uVar1 = *param_2;
          param_3 = param_3 - 8;
          param_2 = param_2 + 1;
          *param_1 = uVar1;
          param_1 = param_1 + 1;
        }
        if (((uint)param_2 & 7) == 0) {
                    // WARNING: Load size is inaccurate
          puVar18 = param_2 + -1;
          auVar19 = *(undefined *)(param_2 + -1);
          do {
            puVar13 = puVar18;
                    // WARNING: Load size is inaccurate
            auVar2 = *(undefined *)(puVar13 + 2);
            param_3 = param_3 - 0x30;
                    // WARNING: Load size is inaccurate
            auVar3 = *(undefined *)(puVar13 + 4);
                    // WARNING: Load size is inaccurate
            auVar4 = *(undefined *)(puVar13 + 6);
                    // WARNING: Store size is inaccurate
            *(undefined *)param_1 = SUB3216(ZEXT2032(CONCAT416(0x40,auVar19)) >> 0x40,0);
                    // WARNING: Store size is inaccurate
            *(undefined *)(param_1 + 2) = SUB3216(ZEXT2032(CONCAT416(0x40,auVar2)) >> 0x40,0);
                    // WARNING: Store size is inaccurate
            *(undefined *)(param_1 + 4) = SUB3216(ZEXT2032(CONCAT416(0x40,auVar3)) >> 0x40,0);
            param_1 = param_1 + 6;
            puVar18 = puVar13 + 6;
            auVar19 = auVar4;
          } while (0x2f > 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
            iVar9 = (int)param_2 + -4;
            auVar19 = *(undefined *)((int)param_2 + -4);
            do {
              iVar12 = iVar9;
                    // WARNING: Load size is inaccurate
              auVar2 = *(undefined *)(iVar12 + 0x10);
              param_3 = param_3 - 0x30;
                    // WARNING: Load size is inaccurate
              auVar3 = *(undefined *)(iVar12 + 0x20);
                    // WARNING: Load size is inaccurate
              auVar4 = *(undefined *)(iVar12 + 0x30);
                    // WARNING: Store size is inaccurate
              *(undefined *)param_1 = SUB2016(CONCAT416(0x20,auVar19) >> 0x20,0);
                    // WARNING: Store size is inaccurate
              *(undefined *)(param_1 + 2) = SUB2016(CONCAT416(0x20,auVar2) >> 0x20,0);
                    // WARNING: Store size is inaccurate
              *(undefined *)(param_1 + 4) = SUB2016(CONCAT416(0x20,auVar3) >> 0x20,0);
              param_1 = param_1 + 6;
              iVar9 = iVar12 + 0x30;
              auVar19 = auVar4;
            } while (0x2f > 0x60,0);
                    // WARNING: Store size is inaccurate
              *(undefined *)(param_1 + 2) = SUB3216(ZEXT2032(CONCAT416(0x60,auVar2)) >> 0x60,0);
                    // WARNING: Store size is inaccurate
              *(undefined *)(param_1 + 4) = SUB3216(ZEXT2032(CONCAT416(0x60,auVar3)) >> 0x60,0);
              param_1 = param_1 + 6;
              iVar9 = iVar12 + 0x30;
              auVar19 = auVar4;
            } while (0x2f > 2 & 1) != 0) {
          uVar8 = *(undefined4 *)puVar13;
          param_3 = param_3 - 4;
          puVar13 = (undefined8 *)((int)puVar13 + 4);
          *(undefined4 *)param_1 = uVar8;
          param_1 = (undefined8 *)((int)param_1 + 4);
        }
        if ((param_3 >> 3 & 1) != 0) {
          param_3 = param_3 - 8;
          *param_1 = *puVar13;
        }
                    // WARNING: Could not recover jumptable at 0x00403cd5. Too many branches
                    // WARNING: Treating indirect jump as call
        uVar20 = (*(code *)(&switchdataD_00403d14)[param_3])();
        return uVar20;
      }
    }
    uVar10 = param_3;
    if (0x1f > 2;
      while (uVar10 != 0) {
        uVar10 = uVar10 - 1;
        *(uint *)puVar18 = *(uint *)param_2;
        param_2 = (undefined8 *)((int)param_2 + 4);
        puVar18 = (undefined8 *)((int)puVar18 + 4);
      }
      switch(param_3 & 3) {
      case 0:
        return CONCAT44(param_3,param_1) & 0x3ffffffff;
      case 1:
        *(undefined *)puVar18 = *(undefined *)param_2;
        return CONCAT44(param_3,param_1) & 0x3ffffffff;
      case 2:
        *(undefined *)puVar18 = *(undefined *)param_2;
        *(undefined *)((int)puVar18 + 1) = *(undefined *)((int)param_2 + 1);
        return CONCAT44(param_3,param_1) & 0x3ffffffff;
      case 3:
        *(undefined *)puVar18 = *(undefined *)param_2;
        *(undefined *)((int)puVar18 + 1) = *(undefined *)((int)param_2 + 1);
        *(undefined *)((int)puVar18 + 2) = *(undefined *)((int)param_2 + 2);
        return CONCAT44(param_3,param_1) & 0x3ffffffff;
      }
    }
  }
LAB_00403fab:
  if ((uVar10 & 0x1f) != 0) {
    uVar11 = (uVar10 & 0x1f) >> 2;
    while (uVar11 != 0) {
      param_3 = *(uint *)param_2;
      *(uint *)puVar18 = param_3;
      puVar18 = (undefined8 *)((int)puVar18 + 4);
      param_2 = (undefined8 *)((int)param_2 + 4);
      uVar11 = uVar11 - 1;
    }
    uVar10 = uVar10 & 3;
    while (uVar10 != 0) {
      *(undefined *)puVar18 = *(undefined *)param_2;
      param_2 = (undefined8 *)((int)param_2 + 1);
      puVar18 = (undefined8 *)((int)puVar18 + 1);
      uVar10 = uVar10 - 1;
    }
  }
LAB_00403fe0:
  return CONCAT44(param_3,param_1);
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
int __cdecl FUN_00404024(int param_1,undefined8 *param_2,uint *param_3,byte *param_4)
{
  code *pcVar1;
  int iVar2;
  undefined8 *puVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  uint uVar5;
  undefined4 local_14;
  pcVar1 = DAT_0041ed20;
  iVar4 = 0;
  if (((param_3[1] == 0) || (*(char *)(param_3[1] + 8) == 0)) ||
     ((param_3[2] == 0 && (-1 < (int)*param_3)))) {
    iVar4 = 0;
    goto LAB_0040414d;
  }
  uVar5 = *param_3;
  if (-1 < (int)uVar5) {
    param_2 = (undefined8 *)((int)param_2 + param_3[2] + 0xc);
  }
  if ((((char)uVar5 < 0) && ((*param_4 & 0x10) != 0)) && (DAT_0041ed20 != (code *)0x0)) {
    _guard_check_icall();
    iVar2 = (*pcVar1)();
LAB_0040409b:
    if ((iVar2 == 0) || (param_2 == (undefined8 *)0x0)) {
LAB_0040415d:
      _terminate();
      pcVar1 = (code *)swi(3);
      iVar4 = (*pcVar1)();
      return iVar4;
    }
    *(int *)param_2 = iVar2;
  }
  else {
    if ((uVar5 & 8) != 0) {
      iVar2 = *(int *)(param_1 + 0x18);
      goto LAB_0040409b;
    }
    if ((*param_4 & 1) == 0) {
      if (*(int *)(param_4 + 0x18) == 0) {
        if ((*(int *)(param_1 + 0x18) != 0) && (param_2 != (undefined8 *)0x0)) {
          uVar5 = *(uint *)(param_4 + 0x14);
          puVar3 = (undefined8 *)___AdjustPointer(*(int *)(param_1 + 0x18),(int *)(param_4 + 8));
          FUN_00405050(param_2,puVar3,uVar5);
          goto LAB_0040414d;
        }
        goto LAB_0040415d;
      }
      if ((*(int *)(param_1 + 0x18) == 0) || (param_2 == (undefined8 *)0x0)) goto LAB_0040415d;
      iVar4 = (uint)((*param_4 & 4) != 0) + 1;
      goto LAB_0040414d;
    }
    if ((*(int *)(param_1 + 0x18) == 0) || (param_2 == (undefined8 *)0x0)) goto LAB_0040415d;
    FUN_00405050(param_2,*(undefined8 **)(param_1 + 0x18),*(uint *)(param_4 + 0x14));
    if ((*(int *)(param_4 + 0x14) != 4) || (*(int *)param_2 == 0)) goto LAB_0040414d;
    iVar2 = *(int *)param_2;
  }
  iVar2 = ___AdjustPointer(iVar2,(int *)(param_4 + 8));
  *(int *)param_2 = iVar2;
LAB_0040414d:
  *in_FS_OFFSET = local_14;
  return iVar4;
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
void __cdecl FUN_00404163(int param_1,undefined8 *param_2,uint *param_3,byte *param_4)
{
  int iVar1;
  undefined8 *puVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  undefined4 local_14;
  puVar2 = param_2;
  if (-1 < (int)*param_3) {
    puVar2 = (undefined8 *)((int)param_2 + param_3[2] + 0xc);
  }
  iVar1 = FUN_00404024(param_1,param_2,param_3,param_4);
  if (iVar1 == 1) {
    iVar1 = ___AdjustPointer(*(int *)(param_1 + 0x18),(int *)(param_4 + 8));
    FUN_00404d49(puVar2,*(undefined **)(param_4 + 0x18),iVar1);
  }
  else {
    if (iVar1 == 2) {
      uVar3 = 1;
      iVar1 = ___AdjustPointer(*(int *)(param_1 + 0x18),(int *)(param_4 + 8));
      FUN_00404d59(puVar2,*(undefined **)(param_4 + 0x18),iVar1,uVar3);
    }
  }
  *in_FS_OFFSET = local_14;
  return;
}
void __cdecl
FUN_004041fc(EHExceptionRecord *param_1,undefined8 *param_2,undefined4 param_3,undefined4 param_4,
            int param_5,uint *param_6,byte *param_7,int *param_8,int param_9,undefined8 *param_10)
{
  void *pvVar1;
  if (param_7 != (byte *)0x0) {
    FUN_00404163((int)param_1,param_2,param_6,param_7);
  }
  if (param_10 == (undefined8 *)0x0) {
    param_10 = param_2;
  }
  _UnwindNestedFrames((EHRegistrationNode *)param_10,param_1);
  FUN_00404bc7((int)param_2,param_4,param_5,*param_8);
  FUN_00404e16((int)param_2,param_5,param_8[1] + 1);
  pvVar1 = (void *)FUN_00404967((int)param_1,(int)param_2,param_3,param_5,param_6[3],param_9,0x100);
  if (pvVar1 != (void *)0x0) {
    _JumpToContinuation(pvVar1,(EHRegistrationNode *)param_2);
  }
  return;