with Ettus Research USRP B200 mini via cable, sampling at
5 MHz (brighter colors indicate higher signal amplitude).
the microprocessor. The software-defined radio (SDR) that we use to
capture the radio emissions is tuned to fchan +2· fclock, where fchan
is the Bluetooth channel’s center frequency (2.4 GHz) and fclock
the frequency of the microprocessor’s clock (64 MHz). Figure 3
shows the resulting spectrogram. Even while the microprocessor
is idle and only the radio is active (i.e., in the first step of the
experiment) we see an “echo” of the data transmitted by the radio.
(Note that the frequency we are tuned to is offset from the actual
Bluetooth channel by 128 MHz.) Moreover, as soon as we run AES
on the microprocessor, the spectrogram changes significantly, even
allowing us to detect individual executions of the algorithm. Further
analysis of those additional signal components reveals that details of
the AES computations are amplitude-modulated onto the Bluetooth
carrier signal, and that the leaked information is observable even
from a distance; in the time domain, we can clearly distinguish
the ten rounds of the tinyAES implementation of AES-128 (see
Figure 4).
In order to show the sensitivity of the leaked information we
demonstrate a key recovery attack in the next section; afterwards,
DigitalAnalog/RFDQQDigital-to-analog AES-128 Leak  SubstrateTX offTX onTX on + AESPacketboundariesOne of the AEScomputationsBluetoothmodulationFigure 4: Time-domain signal from our target; the ten
rounds of AES-128 are clearly visible.
we characterize the channel and explain the microelectronic charac-
eristics that cause the leak.
4 COMPLETE KEY RECOVERY ATTACK
In this section we describe a full key recovery attack against AES on
Nordic Semiconductor nRF52832, a commercial Bluetooth chip. The
chip is used in many systems, for instance in the Rigado BDM3012 or
the RedBear BLE Nano v23. The nRF52832 is commonly used in IoT
applications and embeds a Cortex-M4 microcontroller allowing for
single chip solutions. Note, however, that our attack is not specific
to this particular chip: in Section 6 we discuss other devices that
are possibly vulnerable.
The goal of the attack is to recover the key of an AES computation
carried out by the processor of the target chip, using only the radio
signal that the chip emits and knowledge of the plaintexts. (An
analogous attack can be carried out against the ciphertexts.) We
first describe the experimental setup, then detail trace collection
and processing, and finally show how to recover the key.
4.1 Experimental setup
The physical setup consists of two main components: the target chip
and an SDR to collect the traces, placed in an anechoic test chamber
at a distance of 10 m from each other, as shown in Figure 5. The chip
runs periodic AES encryptions with a fixed key and random plain-
texts, using the tinyAES implementation included in the Nordic
Semiconductor SDK4. Moreover, the chip is configured to modulate
and transmit random data according to the Bluetooth standard on
a fixed channel without Adaptive Frequency Hopping (AFH).
On the receiving side, we use an antenna with a gain of 24 dB
(TP-Link TL-ANT2424B) and two low noise amplifiers with a gain
of 20 dB (Minicircuits ZEL 1724 LNA), followed by a DC Block to
2FCC ID 2AA9B04, https://fccid.io/2AA9B04
3FCC ID 2AKGS-MBN2, https://fccid.io/2AKGS-MBN2
4Available at https://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/
nRF5-SDK.
4
Figure 5: Experimental setup for a long-distance screaming-
channel attack (10 m).
stop any direct current components after the amplifiers. The signals
are then received by an Ettus Research USRP N210 populated with
an SBX daughter board. The radio is tuned to frequency fchan +2fclk,
i.e., the frequency of the Bluetooth channel as per the Bluetooth
standard increased by two times the clock frequency of the target
device’s CPU. The choice of frequency is based on considerations
that we present in Section 5; it is essentially a consequence of how
the leaked information from the CPU is modulated onto the output
signal of the radio. We sample at 5 MHz; we found this bandwidth
to be sufficient for the attack.
The result of running the first step of the attack in this setup
is a capture of the emitted signal’s in-phase and quadrature (I/Q)
components over time, spanning many AES computations of the
chip’s CPU.
4.2 Trace separation and alignment
Well-known side-channel techniques such as correlation or tem-
plate attacks are based on aligned traces of the leaking signal, each
covering a single execution of the computation under attack. Con-
cretely, in order to apply such attacks to our signal, we need to
partition it into individual traces, each spanning a single AES com-
putation, and align the traces.
In a first step, we use a coarse-grained trigger mechanism to
recognize individual computations, partially inspired by [11]. By
manual analysis we identified a frequency component in the signal
of our target device that is only present just before AES runs (re-
lated to a specific piece of code present in the program). Therefore,
amplitude demodulation of the trigger component yields a rough
trigger signal from the received emissions, which we square to am-
plify the triggering effect. We cut the original capture accordingly,
obtaining traces that each correspond more or less to a single run
of AES. However, for a successful attack we need precisely aligned
traces, so the next step is to fine-tune trace alignment.
To this end, we iteratively shift each trace in time, maximizing
correlation with a “prototype trace”. The prototype is the point-wise
mean of all traces aligned so far. Intuitively, averaging aligned traces
removes random noise, so aligning new traces with the prototype
becomes easier as we average over more and more traces.
0.00.20.40.60.8Time (ms)0.20.40.60.81.0Amplitude (normalized)The result of partition and alignment is a set of precisely aligned
traces, i.e., time-domain signals emitted by the target device at
fchan + 2fclk, each covering the time of a single AES computation.
This dataset is suitable for known key-recovery techniques, such
as correlation and template attacks.
4.3 Key recovery
The final step of the attack is to use the collected traces to recover
the AES key. At this point our data is sufficiently similar to the
traces employed in power and EM attacks, so that we can use the
same algorithms with only small modifications. In fact, the novelty
of our attack is the process of deriving traces from mere radio
signals. This forms the basis for CRA and TRA attacks, whereas
existing algorithms can be used for key recovery. However, in order
to demonstrate a full attack from start to finish we briefly discuss
the application of well-known techniques for key recovery from
our traces.
Our implementation is a slightly modified version of the attack
code from the ChipWhisperer project [40], originally designed for
analyzing power traces. We have successfully executed a template
attack on our traces, achieving full key recovery. Specifically, we
attack the first round of the SubBytes step in AES. The attack needs
around 70 000 traces for (offline) template creation, enabling the
actual attack to succeed with only 428 traces. A single trace contains
the average of 500 measurements of the same encryption.
5 ANALYSIS
We have introduced the concept of screaming channels and demon-
strated their exploitability. In this section we focus on explaining the
physical effects underlying the channel before showing additional
experiments in the next section.
5.1 Overview
Screaming channels originate from the interplay of different factors
at the physical level in complex mixed-signal circuits. Figure 6
provides an overview of the main steps that lead to a leak via radio;
we briefly describe each of the factors before discussing them in
detail.
When software runs on a processor, or a specialized hardware
block carries out its function, the underlying digital electronic
components are very active. As logic entities take 0 and 1 values,
transistors switch from low to high voltage values and vice versa.
The intense switching activity leads to sharp voltage and current
variations that are correlated with the logic data being processed
by the system. This correlation lays the ground for many side-
channel attacks, as unintended effects can be measured (typically
indirectly) and analyzed: for example, power side channels [31],
conventional EM side channels [5] or Simple Photonic Emission
Analysis (SPEA) [? ] are based on such measurements. More gener-
ally, the effects on current and voltage are unintended outcomes
of the digital circuit’s normal operation, and are therefore called
digital noise. The clock signal is a particularly strong source of
digital noise: since it is responsible for synchronizing the circuit at
a given frequency it is one of the fastest switching signals in the
circuit. Moreover, it is a non-ideal square wave that exhibits many
harmonics at multiples of the fundamental frequency.
The digital noise propagates inside and outside the circuit. This
process is strongly dependent its characteristics in the frequency
domain. Propagation channels typically only allow a certain band of
frequencies to pass. The information leak that we are interested in is
present in several copies at different frequencies. As a consequence,
it is very likely to be admitted through at least one noise propagation
path in the circuit. We refer to this effect as spectrum spraying.
Among the different ways of noise propagation the most relevant
to mixed-signal circuits is substrate coupling [12]. The substrate is
the “bulk” silicon on which the chip is manufactured. Depending on
the frequency, the noise flows through a mainly resistive, capacitive,
or inductive path to the analog transistors. EMC literature usually
calls the digital circuit the aggressor and the analog part the victim.
As previously explained, information about the digital circuit’s
activity leaks into other parts of the circuit, and components of
the leak are likely to reach the analog portion of the chip. In par-
ticular, they reach the radio transmission chain, and they contain
frequencies in the range of the radio’s baseband signal. The leak
thus couples with the baseband signal, with the mixer, or with
the Voltage Controlled Oscillator (VCO) that is part of the carrier-
frequency synthesizer. In any case the result is unintended am-
plitude/frequency modulation of the carrier. Literature discusses
different kinds of substrate coupling and their effects on different
transmitters [12]. Capacitive coupling with the VCO, which leads
to amplitude modulation of its output, is a model that fits our ex-
perimental results on the Nordic Semiconductors nRF52832. We
leave the in-depth investigation of substrate coupling in this chip as
future work. The leak (i.e., the modulated carrier) is then amplified
by a power amplifier and radiated by the antenna over a potentially
very long distance.
We now discuss each of the steps in detail: the generation of
digital noise, its frequency characteristics, its propagation into other
parts of the circuit, and finally its emanation via the radio.
5.2 Noise generation
Logic gates are built with the Complementary Metal Oxide Semi-
conductor (CMOS) technology.5 CMOS transistors are used in their
non-linear region and act as switches that connect the output either
to the power supply (high) or to the ground (low). Since the output
is a parasitic capacitive load, it consumes a spike Ir from the supply
when rising to high, and it sinks a spike If to the ground when
falling to low. Moreover, for a short time window during the transi-
tion, the transistors connect the supply to the ground, consuming
a spike Isc of short-circuit current over their parasitic resistance.
The current consumption is therefore correlated with the value
of the output: At the power supply, the consumption is Isc + Ir
in the case of a rising transition and Isc in the case of a falling
transition; ideally, there is no consumption if the value does not
switch. Figure 7 summarizes the effect. Building on these observa-
tions, the Hamming weight and Hamming distance models correlate
the power consumption with the current value of a register or its
transition, respectively; they are widely used in the side-channel
literature.
5While BJT technology is often used for analog chips, mixed-design chips almost
exclusively rely on CMOS [7].
5
Figure 6: Steps that lead to the radio transmission of the digital circuit’s switching activity, assuming a clock frequency of
64 MHz and a radio channel centered at 2.4 GHz. The Fourier transforms illustrate the process in the frequency domain.
Figure 7: Current sourced by the power supply during the
switching of a CMOS inverter.
5.3 Spectrum spraying
It is interesting to analyze the noise in the frequency domain, as it
helps explaining its propagation through the circuit.
Intuitively, the idea behind frequency analysis is that a time-
domain signal can be seen as the composition of many pure sine
waves at different frequencies (i.e., frequency components), and
the Fourier transform is a way to switch between the time and
frequency domains. One of the most important sources of noise in a
digital circuit is the clock signal, which (ideally) is a square periodic
signal. The Fourier transform of a periodic signal is composed of a
component at the fundamental frequency, plus several harmonics
at its multiples which depend on the shape of the base period. The
“sharper” the changes in the time domain, as it is the case for a square
wave, the higher the frequencies of the individual components. For
example, the Fourier transform of the idealized clock (i.e., a square
wave) is:
∞
2 sin(n2π f0T)
n
(1)
n=−∞
δ(f − n f0),
X(f ) =
is the fundamental frequency and δ(f − n f0) is a
where f0 = 1
T
harmonic component at frequency n f0 with amplitude 2 sin(n2π f0T)
.
Thus, a square wave is composed of an infinite number of sine wave
components.
If such a signal is amplitude modulated, then each of the har-
monics is, so that the modulation is “spread” over the spectrum. In
other words, each sine wave component acts as a distinct carrier
n
for the modulating signal. Recall that, if a modulating signal x(t)
modulates a carrier e−i2π f0T with frequency f0, then its spectrum
X(f ) is shifted to X(f − f0) (i.e., at the carrier’s frequency).
We will now describe the precise mechanics of how data signals
behave as modulating signals, spreading their sensitive information
over the spectrum. Suppose that a data signal is coupled with a
harmonic of the clock (e.g., through parasitic capacitance), and the
sum of the two enters the input of a Metal Oxide Semiconductor
(MOS) transistor in some logic gate. When such a transistor is in
the saturation region, the current that flows through it is quadratic
in the input voltage:
Ids = α(Vдs − Vth)2
(2)
where д,s,d represent the gate, source, and drain terminals, α and
Vth are constants that depend on physical parameters, and Vds >
Vдs −Vth is the condition for being in the saturation region. Because