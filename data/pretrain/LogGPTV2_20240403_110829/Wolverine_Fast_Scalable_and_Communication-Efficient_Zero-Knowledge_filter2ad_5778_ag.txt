DECO [62] allows third-party proofs of data provenance for
TLS connections, i.e., it allows a client to prove that certain
data originated at a particular website. (We conﬁrmed with
the authors that interactive ZK proofs can also be used in
their system.) One example considered by DECO is where
a customer proves the existence of price discrimination by
proving in zero knowledge that it was sent a price exceeding
a certain threshold. Proving this statement involves a boolean
circuit containing roughly 163,000 AND gates. In the original
paper [62], a ZK proof for this statement was implemented
using libSNARK; this resulted in a short proof but required
high computational overhead. When running over a 10 Mbps
network, Wolverine is able to reduce the execution time of
the ZK-proof component by 45×, resulting in a 9× end-to-
end improvement in the overall DECO protocol.
A blind Certiﬁcate Authority (CA) is able to issue a valid
certiﬁcate binding a party with an associated public key, with-
out learning the party’s identity. A recent proposal of a blind
CA [56] required a ZK proof of a statement corresponding to
2We leave incorporating stacked garbling into Wolverine as a future work.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:45 UTC from IEEE Xplore.  Restrictions apply. 
1085
224228229230Bit-lengthofthewitness0500100015002000Runningtime(s)10Mbps,854ns/bit50Mbps,185ns/bit100Mbps,104ns/bit224228229230NumberofANDgatesinthecircuit0500100015002000Runningtime(s)10Mbps,1.31µs/gate50Mbps,0.50µs/gate100Mbps,0.46µs/gate5791113151719DepthofMerkletree2327211Runningtime(s)10Mbps50Mbps100Mbps681012141618DepthofMerkletree0.000.250.500.751.00Memoryusage(GB)Fig. 11: Performance of Wolverine for arithmetic circuits.
Fig. 12: Using Wolverine for matrix multiplication.
a boolean circuit with roughly 2.5 million AND gates. The
existing implementation used a ZK proof based on the MPC-
in-the-head approach; the proof took more than 70 seconds
to execute over a 10 Mbps network. Plugging Wolverine into
their protocol, we improve the communication complexity by
30× and the execution time by 20×, compared to the original
protocol [56] for CA-proof generation.
2) Zero-Knowledge Proofs for Arithmetic Circuits: We also
evaluated Wolverine for arithmetic circuits over Fp with p =
261−1 using our VOLE implementation shown in Section V-A.
In this setting we check correctness of multiplication gates
using the ﬁrst optimization described in Section III-B, and we
use the ﬁrst approach discussed in Section II-A for batched
opening of authenticated values.
Performance. Similar to the boolean case, we study the
performance of Wolverine as a function of the witness length
and circuit size; the experimental results are reported in in Fig-
ure 11. As the communication complexity is inherently higher
for the arithmetic case than the boolean setting (since each
ﬁeld element is 61 bits long), we benchmarked performance
in higher-bandwidth networks. Wolverine can execute proofs
at a rate of about 1 million multiplication gates per second
in a 500 Mbps network, and roughly 200,000 multiplication
gates per second in a 50 Mbps.
We are not aware of any memory-efﬁcient ZK protocol
that natively works with arithmetic circuits. While one could
always convert an arithmetic circuit to a boolean circuit, this
will generally impose signiﬁcant overhead.
Example 1: Matrix multiplication. We apply our ZK pro-
to prove knowledge of two n × n matrices whose
tocol
product is a publicly known matrix. While the problem itself
is meaningless, it has been used as a benchmark in prior
work [10], [55], [58], [63]. We experimented with n ranging
from 64–768 (with the witness ranging from 8,192 to over
1 million ﬁeld elements), using a matrix-multiplication circuit
corresponding to the naive O(n3)-time algorithm. The time
and memory usage of Wolverine are shown in Figure 12. The
memory usage of Wolverine grows slowly as n increases, and
never exceeds 350 MB.
As shown in Table I, our protocol is 2× faster than Spartan
but 5× slower than Virgo. Importantly, however, the prover
memory of Wolverine is only 3% of that used by Virgo and
0.5% of that needed by Spartan.
Example 2: Solutions to lattice problems. Various prior
works have explored ZK proofs for the Short Integer Solution
(SIS) problem. Here, we have public A ∈ Zn×m
and t ∈ Zn
q ,
q
Our ZK protocol Wolverine (ms)
[4]
50 Mbps
100 Mbps
500 Mbps
10 Gbps
10 Gbps
74
63
55
55
1228
TABLE VII: Running time of Wolverine vs. the protocol by
Baum and Nof [4] for proving knowledge of an SIS solution. The
solution is assumed to be a binary vector.
Protocol
Communication
BLS [11] Aurora [12]
384 KB
233 KB
ENS [30]
53 KB
Ours
32.8 KB
TABLE VIII: Communication complexity of Wolverine vs. ded-
icated protocols for proving knowledge of an SIS solution. The
solution is assumed to be a vector over {−1, 0, 1}. Numbers for prior
work are taken from Esgin et al. [30].
and the prover’s goal is to convince the veriﬁer that it knows a
short s such that As = t mod q. We evaluate Wolverine based
on different notions of shortness for s as explained next.
Baum and Nof [4] recently showed a ZK proof for SIS in
the case where s ∈ {0, 1}m is a binary vector. We compare
Wolverine to their protocol in Table VII. In our experiments,
we use q ≈ 261, n = 1024, and m = 4096 to align with the
parameters used by Baum and Nof; those parameters are also
sufﬁcient for the somewhat homomorphic encryption scheme
used for the SPDZ setup phase [19]. As shown in Table VII,
our protocol is over 16× more efﬁcient than the protocol of
Baum and Nof even when run over a much slower network.
In Table VIII, we compare Wolverine with other ZK proofs
for SIS [11], [12], [30] that apply when s ∈ {−1, 0, 1}m.
Here we ﬁx q ≈ 232, n = 2048, and m = 1024 to align
with prior work. We see that Wolverine uses only 60% of the
communication compared to the best prior work. (We are not
able to compare the running time, since it was not reported
by prior work.)
ACKNOWLEDGEMENTS
This material is based upon work supported in part by
DARPA under Contract No. HR001120C0087. The views,
opinions, and/or ﬁndings expressed are those of the author(s)
and should not be interpreted as representing the ofﬁcial
views or policies of the Department of Defense or the U.S.
Government. Work of Kang Yang is supported by the National
Natural Science Foundation of China (Grant No. 61932019).
Distribution Statement “A” (Approved for Public Release,
Distribution Unlimited).
REFERENCES
[1] S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubramaniam, “Ligero:
Lightweight sublinear arguments without a trusted setup,” in ACM Conf.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:45 UTC from IEEE Xplore.  Restrictions apply. 
1086
224228229230Numberofﬁeldelementsforawitness0500100015002000Runningtime(s)50Mbps,1.38µs/element100Mbps,1.17µs/element500Mbps,1.10µs/element222226227228Numberofmultiplicationgatesinacircuit0500100015002000Runningtime(s)50Mbps,5.52µs/gate100Mbps,2.97µs/gate500Mbps,1.04µs/gate0200400600800Numberofcolumns0100020003000Runningtime(s)50Mbps100Mbps500Mbps200400600800Numberofcolumns200250300350400Memoryusage(MB)on Computer and Communications Security (CCS) 2017. ACM Press,
2017, pp. 2087–2104.
[2] T. Araki, A. Barak, J. Furukawa, T. Lichter, Y. Lindell, A. Nof, K. Ohara,
A. Watzman, and O. Weinstein, “Optimized honest-majority MPC for
malicious adversaries - breaking the 1 billion-gate per second barrier,”
in IEEE Symp. Security and Privacy 2017.
IEEE, 2017, pp. 843–862.
[3] C. Baum, A. J. Malozemoff, M. Rosen, and P. Scholl, “Mac’n’cheese:
Zero-knowledge proofs for arithmetic circuits with nested disjunctions,”
Cryptology ePrint Archive, Report 2020/1410, 2020, https://eprint.iacr.
org/2020/1410.
[4] C. Baum and A. Nof, “Concretely-efﬁcient zero-knowledge arguments
for arithmetic circuits and their application to lattice-based cryptog-
raphy,” in Intl. Conference on Theory and Practice of Public Key
Cryptography 2020, Part I, ser. LNCS. Springer, 2020, pp. 495–526.
[5] D. Beaver, “Efﬁcient multiparty protocols using circuit randomization,”
in Advances in Cryptology—Crypto 1991, ser. LNCS. Springer, 1992,
pp. 420–432.
[6] E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev, “Scalable
zero knowledge with no trusted setup,” in Advances in Cryptology—
Crypto 2019, Part III, ser. LNCS, vol. 11694.
Springer, 2019, pp.
701–732.
[7] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza,
“SNARKs for C: Verifying program executions succinctly and in zero
knowledge,” in Advances in Cryptology—Crypto 2013, Part II, ser.
LNCS, vol. 8043. Springer, 2013, pp. 90–108.
[8] E. Ben-Sasson, A. Chiesa, M. Riabzev, N. Spooner, M. Virza, and
N. P. Ward, “Aurora: Transparent succinct arguments for R1CS,” in
Advances in Cryptology—Eurocrypt 2019, Part I, ser. LNCS, vol. 11476.
Springer, 2019, pp. 103–128.
[9] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza, “Succinct non-
interactive zero knowledge for a von neumann architecture,” in USENIX
Security Symposium 2014. USENIX Association, 2014, pp. 781–796.
[10] J. Bootle, A. Cerulli, P. Chaidos, J. Groth, and C. Petit, “Efﬁcient zero-
knowledge arguments for arithmetic circuits in the discrete log setting,”
in Advances in Cryptology—Eurocrypt 2016, Part II, ser. LNCS, vol.
9666. Springer, 2016, pp. 327–357.
[11] J. Bootle, V. Lyubashevsky, and G. Seiler, “Algebraic techniques for
short(er) exact lattice-based zero-knowledge proofs,” in Advances in
Cryptology—Crypto 2019, Part I, ser. LNCS, vol. 11692.
Springer,
2019, pp. 176–202.
[12] C. Boschini, J. Camenisch, M. Ovsiankin, and N. Spooner, “Efﬁcient
post-quantum SNARKs for RSIS and RLWE and their applications to
privacy,” in PQCrypto 2020. Springer, Apr. 9–11 2020, pp. 247–267.
[13] E. Boyle, G. Couteau, N. Gilboa, and Y. Ishai, “Compressing vector
OLE,” in ACM Conf. on Computer and Communications Security
(CCS) 2018. ACM Press, 2018, pp. 896–912.
[14] E. Boyle, G. Couteau, N. Gilboa, Y. Ishai, L. Kohl, P. Rindal, and
P. Scholl, “Efﬁcient two-round OT extension and silent non-interactive
secure computation,” in ACM Conf. on Computer and Communications
Security (CCS) 2019. ACM Press, 2019, pp. 291–308.
[15] E. Boyle, G. Couteau, N. Gilboa, Y. Ishai, L. Kohl, and P. Scholl,
“Efﬁcient pseudorandom correlation generators: Silent OT extension and
more,” in Advances in Cryptology—Crypto 2019, Part III, ser. LNCS,
vol. 11694. Springer, 2019, pp. 489–518.
[16] E. Boyle, G. Couteau, N. Gilboa, Y. Ishai, and M. Orr`u, “Homomorphic
secret sharing: Optimizations and applications,” in ACM Conf. on
Computer and Communications Security (CCS) 2017. ACM Press,
2017, pp. 2105–2122.
[17] E. Boyle, N. Gilboa, and Y. Ishai, “Function secret sharing,” in Advances
in Cryptology—Eurocrypt 2015, Part II, ser. LNCS, vol. 9057. Springer,
2015, pp. 337–367.
[18] ——, “Function secret sharing: Improvements and extensions,” in ACM
Conf. on Computer and Communications Security (CCS) 2016. ACM
Press, 2016, pp. 1292–1303.
[19] Z. Brakerski, C. Gentry, and V. Vaikuntanathan, “(Leveled) fully homo-
morphic encryption without bootstrapping,” in ITCS 2012. Cambridge,
MA, USA: Association for Computing Machinery, Jan. 8–10, 2012, pp.
309–325.
[20] B. B¨unz, J. Bootle, D. Boneh, A. Poelstra, P. Wuille, and G. Maxwell,
“Bulletproofs: Short proofs for conﬁdential transactions and more,” in
IEEE Symp. Security and Privacy 2018.
IEEE, 2018, pp. 315–334.
[21] B. B¨unz, B. Fisch, and A. Szepieniec, “Transparent SNARKs from
DARK compilers,” in Advances in Cryptology—Eurocrypt 2020, Part I,
ser. LNCS, vol. 12105. Springer, 2020, pp. 677–706.
[22] R. Canetti, “Universally composable security: A new paradigm for
cryptographic protocols,” in 42nd Annual Symposium on Foundations
of Computer Science (FOCS).
IEEE, 2001, pp. 136–145.
[23] M. Chase, D. Derler, S. Goldfeder, C. Orlandi, S. Ramacher, C. Rech-
berger, D. Slamanig, and G. Zaverucha, “Post-quantum zero-knowledge
and signatures from symmetric-key primitives,” in ACM Conf. on
Computer and Communications Security (CCS) 2017. ACM Press,
2017, pp. 1825–1842.
[24] A. Chiesa, D. Ojha, and N. Spooner, “Fractal: Post-quantum and trans-
parent recursive proofs from holography,” in Advances in Cryptology—
Eurocrypt 2020, Part I, ser. LNCS, vol. 12105.
Springer, 2020, pp.
769–793.
[25] R. Cramer, I. Damg˚ard, D. Escudero, P. Scholl, and C. Xing, “SPD
Z
2k : Efﬁcient MPC mod 2k for dishonest majority,” in Advances in
Cryptology—Crypto 2018, Part II, ser. LNCS, vol. 10992.
Springer,
2018, pp. 769–798.
[26] I. Damg˚ard, V. Pastro, N. P. Smart, and S. Zakarias, “Multiparty
computation from somewhat homomorphic encryption,” in Advances in
Cryptology—Crypto 2012, ser. LNCS, vol. 7417. Springer, 2012, pp.
643–662.
[27] L. de Castro, C. Juvekar, and V. Vaikuntanathan, “Fast vector oblivious
linear evaluation from ring learning with errors,” Cryptology ePrint
Archive, Report 2020/685, 2020, https://eprint.iacr.org/2020/685.
[28] C. de Saint Guilhem, L. De Meyer, E. Orsini, and N. P. Smart, “BBQ:
Using AES in picnic signatures,” in Annual International Workshop on
Selected Areas in Cryptography (SAC) 2019, ser. LNCS.
Springer,
2019, pp. 669–692.
[29] S. Dittmer, Y. Ishai, and R. Ostrovsky, “Line-point zero knowledge and
its applications,” Cryptology ePrint Archive, Report 2020/1446, 2020,
https://eprint.iacr.org/2020/1446.
[30] M. F. Esgin, N. K. Nguyen, and G. Seiler, “Practical exact proofs from
lattices: New techniques to exploit fully-splitting rings,” 2020.
[36] O. Goldreich, S. Micali, and A. Wigderson, “How to play any mental
game or A completeness theorem for protocols with honest majority,” in
19th Annual ACM Symposium on Theory of Computing (STOC). ACM
Press, 1987, pp. 218–229.
[37] ——, “Proofs that yield nothing but their validity or all languages in
NP have zero-knowledge proof systems,” J. ACM, vol. 38, no. 3, pp.
691–729, 1991.
[38] S. Goldwasser, Y. T. Kalai, and G. N. Rothblum, “Delegating computa-
tion: interactive proofs for muggles,” in 40th Annual ACM Symposium
on Theory of Computing (STOC). ACM Press, 2008, pp. 113–122.
[39] S. Goldwasser, S. Micali, and C. Rackoff, “The knowledge complexity
of interactive proof-systems (extended abstract),” in 17th Annual ACM
Symposium on Theory of Computing (STOC). ACM Press, 1985, pp.
291–304.
[40] J. Groth, “Short pairing-based non-interactive zero-knowledge ar-
guments,” in Advances in Cryptology—Asiacrypt 2010, ser. LNCS.
Springer, 2010, pp. 321–340.
[41] C. Hazay, E. Orsini, P. Scholl, and E. Soria-Vazquez, “TinyKeys: A
new approach to efﬁcient multi-party computation,” in Advances in
Cryptology—Crypto 2018, Part III, ser. LNCS, vol. 10993. Springer,
2018, pp. 3–33.
[42] D. Heath and V. Kolesnikov, “Stacked garbling for disjunctive zero-
knowledge proofs,” in Advances in Cryptology—Eurocrypt 2020,
Part III, ser. LNCS, vol. 12107. Springer, 2020, pp. 569–598.
[43] Y. Huang, D. Evans, J. Katz, and L. Malka, “Faster secure two-
party computation using garbled circuits,” in USENIX Security Sym-
posium 2011. USENIX Association, 2011.
[31] T. K. Frederiksen, J. B. Nielsen, and C. Orlandi, “Privacy-free garbled
circuits with applications to efﬁcient zero-knowledge,” in Advances in
Cryptology—Eurocrypt 2015, Part II, ser. LNCS, vol. 9057. Springer,
2015, pp. 191–219.
[32] R. Gennaro, C. Gentry, B. Parno, and M. Raykova, “Quadratic span pro-
grams and succinct NIZKs without PCPs,” in Advances in Cryptology—
Eurocrypt 2013, ser. LNCS. Springer, 2013, pp. 626–645.
[33] I. Giacomelli, J. Madsen, and C. Orlandi, “ZKBoo: Faster zero-
knowledge for Boolean circuits,” in USENIX Security Symposium 2016.
USENIX Association, 2016, pp. 1069–1083.
[34] N. Gilboa, “Two party RSA key generation,” in Advances
in
Cryptology—Crypto 1999, ser. LNCS, vol. 1666. Springer, 1999, pp.
116–129.
[35] O. Goldreich, S. Goldwasser, and S. Micali, “How to construct random
functions,” J. ACM, vol. 33, no. 4, pp. 792–807, Oct. 1986.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:31:45 UTC from IEEE Xplore.  Restrictions apply. 
1087
[44] R. Impagliazzo, L. A. Levin, and M. Luby, “Pseudo-random generation
from one-way functions (extended abstracts),” in 21st Annual ACM
Symposium on Theory of Computing (STOC). ACM Press, 1989, pp.
12–24.
[45] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank, “Extending oblivious
transfers efﬁciently,” in Advances in Cryptology—Crypto 2003, ser.
LNCS, vol. 2729. Springer, 2003, pp. 145–161.