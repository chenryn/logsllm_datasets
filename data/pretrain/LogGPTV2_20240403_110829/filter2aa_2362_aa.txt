Fuzzing for Software 
Security Testing and
Quality Assurance
For a list of related Artech House titles, please turn to the back of this book.
Fuzzing for Software 
Security Testing and
Quality Assurance
Ari Takanen
Jared DeMott
Charlie Miller
artechhouse.com
Library of Congress Cataloging-in-Publication Data
A catalog record for this book is available from the U.S. Library of Congress.
British Library Cataloguing in Publication Data
A catalogue record for this book is available from the British Library.
ISBN 13: 978-1-59693-214-2
Cover design by Igor Valdman
© 2008 ARTECH HOUSE, INC.
685 Canton Street
Norwood, MA 02062
All rights reserved. Printed and bound in the United States of America. No part of this
book may be reproduced or utilized in any form or by any means, electronic or 
mechanical, including photocopying, recording, or by any information storage and 
retrieval system, without permission in writing from the publisher.
All terms mentioned in this book that are known to be trademarks or service marks 
have been appropriately capitalized. Artech House cannot attest to the accuracy of this
information. Use of a term in this book should not be regarded as affecting the validity 
of any trademark or service mark.
10 9 8 7 6 5 4 3 2 1
This book is dedicated to our families and friends . . .
. . . and also to all quality assurance specialists and security experts 
who are willing to share their knowledge and expertise 
to enable others to learn and improve their skills.
Contents
Foreword
xv
Preface
xix
Acknowledgments
xxi
CHAPTER 1
Introduction
1
1.1
Software Security
2
1.1.1
Security Incident
4
1.1.2
Disclosure Processes
5
1.1.3
Attack Surfaces and Attack Vectors
6
1.1.4
Reasons Behind Security Mistakes
9
1.1.5
Proactive Security
10
1.1.6
Security Requirements
12
1.2
Software Quality
13
1.2.1
Cost-Benefit of Quality
14
1.2.2
Target of Test
16
1.2.3
Testing Purposes
17
1.2.4
Structural Testing
19
1.2.5
Functional Testing
21
1.2.6
Code Auditing
21
1.3
Fuzzing
22
1.3.1
Brief History of Fuzzing
22
1.3.2
Fuzzing Overview
24
1.3.3
Vulnerabilities Found with Fuzzing
25
1.3.4
Fuzzer Types
26
1.3.5
Logical Structure of a Fuzzer
29
1.3.6
Fuzzing Process
30
1.3.7
Fuzzing Frameworks and Test Suites
31
1.3.8
Fuzzing and the Enterprise
32
1.4
Book Goals and Layout
33
CHAPTER 2
Software Vulnerability Analysis
35
2.1
Purpose of Vulnerability Analysis
36
2.1.1
Security and Vulnerability Scanners
36
vii
2.2
People Conducting Vulnerability Analysis
38
2.2.1
Hackers
40
2.2.2
Vulnerability Analysts or Security Researchers
40
2.2.3
Penetration Testers
41
2.2.4
Software Security Testers
41
2.2.5
IT Security
41
2.3
Target Software
42
2.4
Basic Bug Categories
42
2.4.1
Memory Corruption Errors
42
2.4.2
Web Applications
50
2.4.3
Brute Force Login
52
2.4.4
Race Conditions
53
2.4.5
Denials of Service
53
2.4.6
Session Hijacking
54
2.4.7
Man in the Middle
54
2.4.8
Cryptographic Attacks
54
2.5
Bug Hunting Techniques
55
2.5.1
Reverse Engineering
55
2.5.2
Source Code Auditing
57
2.6
Fuzzing
59
2.6.1
Basic Terms
59
2.6.2
Hostile Data
60
2.6.3
Number of Tests
62
2.7
Defenses
63
2.7.1
Why Fuzzing Works
63
2.7.2
Defensive Coding
63
2.7.3
Input Verification
64
2.7.4
Hardware Overflow Protection
65
2.7.5
Software Overflow Protection
66
2.8
Summary
68
CHAPTER 3
Quality Assurance and Testing
71
3.1
Quality Assurance and Security
71
3.1.1
Security in Software Development
72
3.1.2
Security Defects
73
3.2
Measuring Quality
73
3.2.1
Quality Is About Validation of Features
73
3.2.2
Quality Is About Finding Defects
76
3.2.3
Quality Is a Feedback Loop to Development
76
3.2.4
Quality Brings Visibility to the Development Process
77
3.2.5
End Users’ Perspective
77
3.3
Testing for Quality
77
3.3.1
V-Model
78
3.3.2
Testing on the Developer’s Desktop
79
3.3.3
Testing the Design
79
viii
Contents
3.4
Main Categories of Testing
79
3.4.1
Validation Testing Versus Defect Testing
79
3.4.2
Structural Versus Functional Testing
80
3.5
White-Box Testing
80
3.5.1
Making the Code Readable
80
3.5.2
Inspections and Reviews
80
3.5.3
Code Auditing
81
3.6
Black-Box Testing
83
3.6.1
Software Interfaces
84
3.6.2
Test Targets
84
3.6.3
Fuzz Testing as a Profession
84
3.7
Purposes of Black-Box Testing
86
3.7.1
Conformance Testing
87
3.7.2
Interoperability Testing
87
3.7.3
Performance Testing
87
3.7.4
Robustness Testing
88
3.8
Testing Metrics
88
3.8.1
Specification Coverage
88
3.8.2
Input Space Coverage
89
3.8.3
Interface Coverage
89
3.8.4
Code Coverage
89
3.9
Black-Box Testing Techniques for Security
89
3.9.1
Load Testing
89
3.9.2
Stress Testing
90
3.9.3
Security Scanners
90