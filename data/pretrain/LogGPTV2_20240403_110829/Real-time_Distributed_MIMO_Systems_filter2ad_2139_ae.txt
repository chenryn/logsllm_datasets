no phase calibration. The ﬁnal system is MegaMIMO 2.0
with a ﬁxed manually chosen gain setting (this is sim-
ilar to MegaMIMO in USRPs). We repeat the exper-
iment 10 times and change the client locations across
runs. We compare the network throughput obtained by
the system in all three settings.
Results: Fig. 8 shows the network throughput in
each of the three scenarios described above. The follow-
ing points are worth noting.
• MegaMIMO 2.0 with an operating AGC, and both
magnitude and phase calibration, achieves the highest
throughput among all the systems.
• We compare MegaMIMO 2.0 with a system with an
operating AGC where we turn oﬀ the phase calibra-
tion but still apply the magnitude calibration based
on the rated AGC gain. That is, we assume that an
AGC gain of X dB scales the signal magnitude by
20 (as described in §5.2), and correct for it accord-
10
ingly. We use this reference because ignoring mag-
nitude calibration completely makes the beamform-
ing extremely sensitive even to small changes in AGC
X
422
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
Feedback (30ms)
Feedback (100ms)
Feedback (300ms)
Reciprocity
Feedback (30ms)
Feedback (100ms)
Feedback (300ms)
Reciprocity
 50
 100
Throughput (Mbps)
 150
 200
 250
 50
 100
Throughput (Mbps)
 150
 200
 250
(a) Environmental Mobility
(b) Client Mobility
Figure 9: CDF of user throughput of a 4x4 distributed MIMO in mobile scenarios using
MegaMIMO 2.0’s real-time PHY with reciprocity, and MegaMIMO 2.0’s real-time PHY but with
explicit feedback at diﬀerent intervals. The ﬁgure shows that MegaMIMO 2.0’s real-time PHY can react to
changing environments and deliver a distributed MIMO system even in the presence of mobility. The ﬁgure also shows
that reciprocity based distributed MIMO always outperforms explicit feedback based systems. At low feedback rates,
the feedback based systems suﬀer from stale channel information. At high feedback rates, the systems have fresh
channel information but have high overhead.
gain during channel estimation at any of the APs (the
impact of gain errors is analyzed in §5.2 in a diﬀer-
ent context). Since this system does not correct for
phase, it sometimes experiences extremely large errors
and therefore has higher variance than the full-ﬂedged
MegaMIMO 2.0 system. Additionally, it loses perfor-
mance because of diﬀerences between the actual hard-
ware gain and the nominal hardware gain intended by
the AGC.
• Finally, the system with lowest performance is the one
with manually assigned gain control. This is because
one cannot pick a single gain value for a large sys-
tem that will allow all master-slave and all client-AP
links to function at reasonable SNRs across a vari-
ety of topologies. As a result, this system too has low
throughput and high variance.
8.3 Real-time Performance
In this section, we evaluate whether MegaMIMO 2.0
can deliver a distributed MIMO system capable of op-
erating in real-time.
Method: We consider dynamic environments com-
mon in indoor settings. We introduce dynamism into the
system in two ways. In the ﬁrst case, all the nodes are
static, but there is mobility in the environment due to
moving people. In the second case, we introduce addi-
tional mobility by moving the nodes themselves. Specif-
ically, the clients in the testbed are moved by either
mounting them on Roomba robots, or by walking hu-
mans. The client mobility speeds change from one run
to another and are in the range [0.2m/s, 1m/s].
We deploy 4 nodes acting as APs in our testbed,
and 4 nodes acting as clients. We compare two schemes:
distributed MIMO with explicit channel feedback, and
distributed MIMO with reciprocity. Note that both
schemes are running MegaMIMO 2.0’s real-time PHY
with all of its components (AGC, calibration etc., nec-
essary to deal with mobility) and diﬀer only with the
mechanism for tracking the channels. We compute the
throughput of individual nodes under 4 scenarios: reci-
procity based distributed MIMO where the clients send
uplink traﬃc about 10% of the time (i.e. 90% of the
traﬃc is downlink traﬃc), and explicit feedback at three
diﬀerent feedback intervals: 30 ms, 100 ms, and 300 ms.
We run this experiment for several hours. We repeat
it for various topologies and the entire range of 802.11
SNRs.
Result: Figs. 9(a) and (b) plot the CDF of the
throughput obtained by each client in the various sce-
narios. A few of points are worth noting.
• First, MegaMIMO 2.0’s real-time PHY can support
dynamic environments, and adapt to both moving de-
vices and people. In particular, a four-AP distributed
MIMO system running MegaMIMO 2.0 delivers a me-
dian throughput of 120Mb/s and a maximum through-
put of 194 Mb/s to four mobile clients.
• Second, as expected, reciprocity based distributed
MIMO obtains the highest throughput in both sce-
narios: dynamic environment and dynamic clients.
The median throughput gain of reciprocity based dis-
tributed MIMO over explicit feedback ranges from
20% to 6x in when the device is mobile, and 10%
to 6x when device is static yet people are moving
around. Further, explicit feedback systems with in-
frequent feedback (100-300 ms) get signiﬁcantly lower
throughput than the case of reciprocity, in spite of
having signiﬁcantly lower channel feedback overhead.
This is because they suﬀer from stale channel informa-
tion since mobility causes the actual channels to de-
viate from the reported channels faster than the feed-
back interval. In fact, explicit feedback with intervals
of 100-300 ms suﬀers from extremely low throughput
between 35-50% of the time because of channel stale-
423
ness. Explicit feedback at a high rate (30 ms) is also
worse than reciprocity. In this case the APs have fresh
channel information, but explicit feedback suﬀers a
throughput loss due to the overhead of feedback.
• The performance of the explicit feedback system in
Figs. 9(a) and (b) is worse than the simulation results
of a 4×4 system in Fig. 1. This is because the simu-
lation results do not account for the impact of stale
channel information on the behavior of distributed
MIMO systems.
• Overall the empirical results show the importance of
using reciprocity even in a relatively small 4×4 dis-
tributed MIMO system. Since the feedback overhead
increases quadratically with the size of distributed
MIMO, we expect that reciprocity is even more es-
sential for larger systems.
8.4 Performance in a Static Environment
Finally, we check MegaMIMO 2.0’s performance in
static settings to ensure that our implementation sup-
ports the gains expected from distributed MIMO in
static environments.
Method: We deploy 4 nodes acting as APs in our
testbed, and 4 nodes acting as clients. We compare
MegaMIMO 2.0 with reciprocity to traditional 802.11.
The network has both uplink and downlink traﬃc with
uplink traﬃc creating ≈10% of the load. We perform
this experiment for 15 diﬀerent runs, and change the
clients’ locations from one run to another. We evaluate
the throughput of each of these three schemes in three
SNR ranges: low (6-12 dB), medium (12-18 dB), and
high (18+ dB).
Result: Fig. 10 shows that MegaMIMO 2.0 with
reciprocity achieves about 3.6× gain with 4 transmit-
ters. This is compatible with the behavior expected from
distributed MIMO since this system can deliver 4 pack-
ets to 4 clients concurrently. The ﬁgure also shows that
this behavior is consistent across the whole range of
802.11 SNRs.
9. Future Work
In this paper, we discuss the architecture and imple-
mentation of a practical full-ﬂedged real-time PHY and
real-time MAC layer for distributed MIMO. This sys-
tem can serve as a building block to address the next
set of questions that need to be tackled for distributed
MIMO.
Speciﬁcally, for a joint transmission, the distributed
MIMO PHY receives the master, set of slaves, and the
set of clients as an input. It is the responsibility of a
higher (non real-time) MAC layer to pick this set of
APs and clients based on the current traﬃc patterns, as
well as the channels between diﬀerent APs and clients,
in order to optimize network fairness and throughput.
Additionally, this MAC layer will also determine which
among the APs will act as a master for any given trans-
mission. Ideally, the master would be picked to be at the
center of the transmission cluster so that it can be heard
)
s
p
b
M
t
(
e
a
R
a
a
D
k
n
L
t
i
Traditional 802.11
Reciprocity
250
200
150
100
50
0
6-12 dB
12-18 dB
SNR 
>18dB
reciprocity.
Figure 10: Comparison of throughput obtained
with traditional 802.11, and MegaMIMO 2.0
with
that
MegaMIMO 2.0’s implementation can scale throughput
linearly with the number of nodes. At all SNRs, the
throughput of MegaMIMO 2.0 with 4 nodes is 3.6× the
throughput of a single 802.11 link.
shows
ﬁgure
The
with good SNR by all other APs and clients. The MAC
layer can utilize the measured channel information for
doing so.
10. Conclusion
This paper presents MegaMIMO 2.0, the ﬁrst full
ﬂedged real-time PHY capable of supporting distributed
MIMO. MegaMIMO 2.0 is 802.11 compatible, and ad-
dresses various key practical issues required for a practi-
cal PHY layer that can operate across diverse SNRs and
channel conditions. Further, it extends the 802.11 PHY
interface to support a MAC layer capable of distributed
MIMO, and can therefore serve as a building block for
a full stack distributed MIMO system. We believe that
MegaMIMO 2.0 represents a signiﬁcant step forward in
bringing distributed MIMO closer to practice.
Acknowledgments: We thank the NETMIT group,
Arthur Berger, our reviewers and our shepherd, Deepak
Ganesan, for their insightful comments. This work is
funded by NSF. We thank members of the MIT Center
for Wireless Networks and Mobile Computing: Amazon,
Cisco, Google, Intel, Mediatek, Microsoft, ST Microelec-
tronics and Telefonica for their interest and support.
11. References
[1] An Introduction to pCell.
http://www.rearden.com/artemis/
An-Introduction-to-pCell-White-Paper-150224.pdf.
Artemis, February 2015.
[2] O. Abari, H. Rahul, and D. Katabi. AirShare:
Distributed Coherent Transmission Made Seamless. In
IEEE INFOCOM 2015, Hong Kong, China, April 2015.
[3] S. Aeron and V. Saligrama. Wireless Ad Hoc
Networks: Strategies and Scaling Laws for the Fixed
SNR Regime. IEEE Transactions on Inf. Theor.,
53(6), 2007.
[4] H. Balan, R. Rogalin, A. Michaloliakos, K. Psounis,
and G. Caire. AirSync: Enabling Distributed Multiuser
MIMO With Full Spatial Multiplexing. Networking,
424
IEEE/ACM Transactions on, 21(6):1681–1695, Dec
2013.
[5] A. Bourdoux, B. Come, and N. Khaled. Non-reciprocal
transceivers in OFDM/SDMA systems: impact and
mitigation. In Radio and Wireless Conference, 2003.
RAWCON ’03. Proceedings, pages 183–186, Aug 2003.
[6] 5G live test: Multipoint Connectivity with Distributed
MIMO.
https://www.youtube.com/watch?v=jCO68dPoNwA.
Ericsson Inc.
[7] A. Forenza, R. W. H. Jr., and S. G. Perlman. System
and Method For Distributed Input-Distributed Output
Wireless Communications. U.S. Patent Application
number 20090067402.
[8] M. Guillaud, D. Slock, and R. Knopp. A practical
method for wireless channel reciprocity exploitation
through relative calibration. In Signal Processing and
Its Applications, 2005. Proceedings of the Eighth
International Symposium on, volume 1, pages 403–406,
August 2005.
[9] A. Ozgur, O. Leveque, and D. Tse. Hierarchical
Cooperation Achieves Optimal Capacity Scaling in Ad
Hoc Networks. IEEE Trans. on Info. Theor., 2007.
[10] E. Perahia and R. Stacey. Next Generation Wireless
LANs: 802.11n and 802.11ac. Cambridge University
Press, 2013.
[11] H. Rahul, S. Kumar, and D. Katabi. MegaMIMO:
Scaling Wireless Capacity with User Demands. In
ACM SIGCOMM 2012, Helsinki, Finland, August
2012.
[12] C. Shepard, H. Yu, N. Anand, E. Li, T. Marzetta,
R. Yang, and L. Zhong. Argos: Practical
many-antenna base stations. In Proceedings of the 18th
Annual International Conference on Mobile Computing
and Networking, Mobicom ’12, pages 53–64, New York,
NY, USA, 2012. ACM.
[13] J. Shi, Q. Luo, and M. You. An eﬃcient method for
enhancing TDD over the air reciprocity calibration. In
Wireless Communications and Networking Conference
(WCNC), 2011 IEEE, pages 339–344, March 2011.
[14] O. Simeone, O. Somekh, H. Poor, and S. Shamai.
Distributed MIMO in multi-cell wireless systems via
ﬁnite-capacity links. In ISCCSP, 2008.
[15] D. Tse and P. Vishwanath. Fundamentals of Wireless
Communications. Cambridge University Press, 2005.
[16] S. Venkatesan et al. A WiMAX-based implementation
of network MIMO for indoor wireless. EURASIP, ’09.
[17] V. Yenamandra and K. Srinivasan. Vidyut: Exploiting
power line infrastructure for enterprise wireless
networks. In Proceedings of the 2014 ACM Conference
on SIGCOMM, SIGCOMM ’14, pages 595–606, New
York, NY, USA, 2014. ACM.
425