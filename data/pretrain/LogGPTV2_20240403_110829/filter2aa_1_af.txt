    The State of the Industry
    Bug bounties are currently one of the most popular ways for organizations to receive feedback about security bugs. Large corporations, like PayPal and Facebook, as well as government agencies like the US Department of Defense, have all embraced the idea. Yet not too long ago, reporting a vulnerability to a company would have more likely landed you in jail than gotten you a reward.
    “漏洞赏金目前是企业收到安全漏洞反馈的最流行方式之一。像PayPal和Facebook这样的大公司，以及美国国防部这样的政府机构都拥抱了这个想法。但是不久以前，向公司报告漏洞可能更有可能让你进监狱而不是得到奖励。”
    In 1995, Netscape launched the first-ever bug bounty program. The company encouraged users to report bugs found in its brand-new browser, the Netscape Navigator 2.0, introducing the idea of crowdsourced security testing to the internet world. Mozilla launched the next corporate bug bounty program nine years later, in 2004, inviting users to identify bugs in the Firefox browser.
    1995年，Netscape推出了首个赏金计划。该公司鼓励用户报告发现的漏洞，这些漏洞存在于其全新的浏览器—Netscape Navigator 2.0 中。介绍众包安全测试的概念，成为了互联网世界的一股清流。而Mozilla公司则于9年后（即2004年）推出了下一个公司赏金计划，邀请用户鉴定Firefox浏览器中的漏洞。
    But it was not until the 2010s that offering bug bounties become a popular practice. That year, Google launched its program, and Facebook followed suit in 2011. These two programs kick-started the trend of using bug bounties to augment a corporation’s in-house security infrastructure.
    但直到2010年代，提供漏洞赏金成为一种流行的做法。那一年，谷歌启动了它的计划，Facebook在2011年也效仿了这种做法。这两个计划开启了利用漏洞赏金来增强公司内部安全基础设施的趋势。
    As bug bounties became a more well-known strategy, bug-bounty-as-a-service
     platforms
    emerged. These platforms help companies set up and operate their programs. For example, they provide a place for companies to host their programs, a way to process reward payments, and a centralized place to communicate with bug bounty hunters.
    随着漏洞赏金成为更为流行的策略，漏洞赏金作为服务的平台出现了。这些平台帮助公司建立和运营其程序。例如，他们提供公司托管其程序的地方，处理奖励付款的方式以及与漏洞赏金猎人进行集中交流的中心化平台。
    The two largest of these platforms, HackerOne and Bugcrowd, both launched in 2012. After that, a few more platforms, such as Synack, Cobalt, and Intigriti, came to the market. These platforms and managed bug bounty services allow even companies with limited resources to run a security program. Today, large corporations, small startups, nonprofits, and government agencies alike have adopted bug bounties as an additional security measure and a fundamental piece of their security policies. You can read more about the history of bug bounty programs at
     https://en.wikipedia.org/wiki/Bug_bounty_program
    .
    其中最大的两个平台是HackerOne和Bugcrowd，它们都在2012年推出。此后，还有一些平台，如Synack、Cobalt和Intigriti，进入了市场。这些平台和托管漏洞赏金服务，使得即使是资源有限的公司也能够运营安全计划。今天，大型企业、小型初创企业、非营利组织和政府机构都采用漏洞赏金作为额外的安全措施和安全策略的基本组成部分。您可以在https://en.wikipedia.org/wiki/Bug_bounty_program上了解更多关于漏洞赏金计划的历史。
    The term
     security program
    usually refers to information security policies, procedures, guidelines, and standards in the larger information security industry. In this book, I use
     program
    or
     bug bounty program
    to refer to a company’s bug bounty operations. Today, tons of programs exist, all with their unique characteristics, benefits, and drawbacks. Let’s examine these.
    安全计划一般指更广泛的信息安全行业中的信息安全政策、程序、指南和标准。在本书中，我用“计划”或“赏金计划”来指代公司的赏金计划操作。目前有很多这样的计划，每个计划都有其独特的特点、好处和缺陷。让我们来看看这些内容。
    Asset Types
    In the context of a bug bounty program, an
     asset
    is an application, website, or product that you can hack. There are different types of assets, each with its own characteristics, requirements, and pros and cons. After considering these differences, you should choose a program with assets that play to your strengths, based on your skill set, experience level, and preferences.
    在漏洞赏金计划的背景下，资产是指您可以攻击的应用程序、网站或产品。有不同类型的资产，每种都有其自身的特点、要求和优缺点。在考虑这些差异之后，您应该选择一个拥有能够发挥您优势的资产的计划，基于您的技能水平、经验水平和个人偏好。
    Social Sites and Applications
    Anything labeled
     social
    has a lot of potential for vulnerabilities, because these applications tend to be complex and involve a lot of interaction among users, and between the user and the server. That’s why the first type of bug bounty program we’ll talk about targets social websites and applications. The term
     social application
    refers to any site that allows users to interact with each other. Many programs belong to this category: examples include the bug bounty program for HackerOne and programs for Facebook, Twitter, GitHub, and LINE.
    任何标记为社交的应用程序都有很多潜在漏洞，因为这些应用程序往往很复杂，并涉及用户之间以及用户与服务器之间的大量交互。这就是为什么我们要谈论的第一类漏洞赏金计划针对社交网站和应用程序。社交应用程序一词指的是任何允许用户相互交互的网站。许多计划属于此类别：例如HackerOne的漏洞赏金计划以及Facebook，Twitter，GitHub和LINE的计划。
    Social applications need to manage interactions among users, as well as each user’s roles, privileges, and account integrity. They are typically full of potential for critical web vulnerabilities such as insecure direct object references (IDORs), info leaks, and account takeovers. These vulnerabilities occur when many users are on a platform, and when applications mismanage user information; when the application does not validate a user’s identity properly, malicious users can assume the identity of others.
    社交应用需要管理用户间的交互，以及每个用户的角色、权限和账户完整性。它们通常充满了严重网络漏洞的潜力，例如不安全的直接对象引用(IDORs)，信息泄漏和帐户控制。当许多用户在平台上时，这些漏洞就会发生，当应用程序处理用户信息不当时，当应用程序未正确验证用户身份时，恶意用户可以冒充他人的身份。
    These complex applications also often provide a lot of user input opportunities. If input validation is not performed properly, these applications are prone to injection bugs, like SQL injection (SQLi) or cross-site scripting (XSS).
    这些复杂的应用程序通常提供了许多用户输入的机会。如果输入验证不正确，这些应用程序就容易出现注入漏洞，如SQL注入（SQLi）或跨站点脚本（XSS）。
    If you are a newcomer to bug bounties, I recommend that you start with social sites. The large number of social applications nowadays means that if you target social sites, you’ll have many programs to choose from. Also, the complex nature of social sites means that you’ll encounter a vast attack surface with which to experiment. (An application’s
     attack surface
    refers to all of the application’s different points that an attacker can attempt to exploit.) Finally, the diverse range of vulnerabilities that show up on these sites means that you will be able to quickly build a deep knowledge of web security.
    如果你是bug赏金的新手，我建议你从社交网站开始。现今社交应用的数量庞大，如果你攻击社交网站，就会有许多项目可供选择。此外，社交网站的复杂性意味着你将遇到广泛的攻击面供你进行实验。（应用程序的攻击面是指攻击者可以尝试利用的应用程序中的所有不同点。）最后，这些网站上出现的各种漏洞的多样性意味着你将能够快速建立对Web安全的深入了解。
    The skill set you need to hack social programs includes the ability to use a proxy, like the Burp Suite proxy introduced in
     Chapter 4
    , and knowledge about web vulnerabilities such as XSS and IDOR. You can learn more about these in Chapters
     6
    and
     10
    . It’s also helpful to have some JavaScript programming skills and knowledge about web development. However, these skills aren’t required to succeed as a hacker.
    黑客社交计划所需要的技能包括使用代理器，例如第4章介绍的Burp Suite代理器，以及关于Web漏洞（如XSS和IDOR）的知识。你可以在第6章和第10章了解更多。具备一些JavaScript编程技能和Web开发知识也会很有帮助。然而，这些技能并不是成为黑客所必需的。
    But these programs have a major downside. Because of the popularity of their products and the low barrier of entry, they’re often very competitive and have many hackers hunting on them. Social media platforms such as Facebook and Twitter are some of the most targeted programs.
    但是这些程序有一个主要的缺点。由于他们的产品受到欢迎并且准入门槛较低，他们通常非常有竞争力，并且有许多黑客在追捕他们。像Facebook和Twitter这样的社交媒体平台是一些最受攻击的程序。
    General Web Applications
     General
     web applications
    are also a good target for beginners. Here, I am referring to any web applications that do not involve user-to-user interaction. Instead, users interact with the server to access the application’s features. Targets that fall into these categories can include static websites, cloud applications, consumer services like banking sites, and web portals of Internet of Things (IoT) devices or other connected hardware. Like social sites, they
    are also quite diverse and lend themselves well to a variety of skill levels. Examples include the programs for Google, the US Department of Defense, and Credit Karma.
    一般的网站应用也是初学者的好目标。这里，我指的是不涉及用户之间互动的任何网站应用。相反，用户与服务器进行交互以访问应用程序的功能。这些目标可以包括静态网站、云应用程序、诸如银行网站的消费者服务以及物联网设备或其他连接硬件的Web门户。就像社交网站一样，它们也相当多样化，适合各种技能水平。例如谷歌、美国国防部和信用卡业务。
    That said, in my experience, they tend to be a little more difficult to hack than social applications, and their attack surface is smaller. If you’re looking for account takeovers and info leak vulnerabilities, you won’t have as much luck because there aren’t a lot of opportunities for users to interact with others and potentially steal their information. The types of bugs that you’ll find in these applications are slightly different. You’ll need to look for server-side vulnerabilities and vulnerabilities specific to the application’s technology stack. You could also look for commonly found network vulnerabilities, like subdomain takeovers. This means you’ll have to know about both client-side and server-side web vulnerabilities, and you should have the ability to use a proxy. It’s also helpful to have some knowledge about web development and programming.
    在我的经验中，相对于社交应用，它们更难被黑客攻击，攻击面也更小。如果你想寻找账户被接管和信息泄漏的漏洞，可能会没有那么多机会，因为用户与其他人互动的机会并不多，也不太可能被窃取信息。你能在这些应用中找到的漏洞类型稍有不同。你需要寻找服务器端漏洞和与应用技术栈相关的漏洞。你也可以寻找常见的网络漏洞，比如子域名接管。这意味着你需要了解客户端和服务器端的Web漏洞，并应该具备使用代理的能力。对Web开发和编程有一些了解也会很有帮助。
    These programs can range in popularity. However, most of them have a low barrier of entry, so you can most likely get started hacking right away!
    这些程序的受欢迎程度可能不同。然而，它们大多数都有低门槛，所以你很有可能可以立即开始黑客攻击！
    Mobile Applications (Android, iOS, and Windows)
    After you get the hang of hacking web applications, you may choose to specialize in
     mobile applications
    . Mobile programs are becoming prevalent; after all, most web apps have a mobile equivalent nowadays. They include programs for Facebook Messenger, the Twitter app, the LINE mobile app, the Yelp app, and the Gmail app.
    当您熟悉了如何攻击Web应用程序后，可以选择专攻移动应用程序。移动应用程序越来越普及；毕竟，现在大多数Web应用程序都有移动等价物。它们包括Facebook Messenger、Twitter应用程序、LINE移动应用程序、Yelp应用程序和Gmail应用程序等程序。
    Hacking mobile applications requires the skill set you’ve built from hacking web applications, as well as additional knowledge about the structure of mobile apps and programming techniques related to the platform. You should understand attacks and analysis strategies like certificate pinning bypass, mobile reverse engineering, and cryptography.
    黑掉移动应用程序需要你在黑掉网页应用程序中所建立的技能组合，加上对于移动应用的结构和与该平台相关的编程技巧的额外知识。你应该了解攻击和分析策略，例如证书固定绕过、移动应用逆向工程和密码学。
    Hacking mobile applications also requires a little more setup than hacking web applications, as you’ll need to own a mobile device that you can experiment on. A good mobile testing lab consists of a regular device, a rooted device, and device emulators for both Android and iOS. A
     rooted
     device
    is one for which you have admin privileges. It will allow you to experiment more freely, because you can bypass the mobile system’s safety constraints. An
     emulator
    is a virtual simulation of mobile environments that you run on your computer. It allows you to run multiple device versions and operating systems without owning a device for each setup.
    黑客攻击移动应用程序需要比攻击网页应用程序多一点设置，因为您需要拥有一台可以进行实验的移动设备。一个好的移动测试实验室包括普通设备、已Root过的设备以及Android和iOS的设备仿真器。已Root过的设备是您拥有管理员权限的设备，它将允许您更自由地进行实验，因为您可以绕过移动系统的安全限制。仿真器是您在计算机上运行的移动环境的虚拟模拟。它允许您运行多个设备版本和操作系统，而无需为每个设置拥有一个设备。
    For these reasons, mobile applications are less popular among bug bounty hunters than web applications. However, the higher barrier of entry for mobile programs is an advantage for those who do participate. These programs are less competitive, making it relatively easy to find bugs.
    因此，移动应用程序比起网站应用程序，对于漏洞赏金猎人而言不太受欢迎。然而，移动程序的入门门槛较高对于参与者是一种优势。这类程序竞争较少，相对更容易发现漏洞。
    APIs
     Application programming interfaces (
     APIs
     )
    are specifications that define how other applications can interact with an organization’s assets, such as to retrieve or alter their data. For example, another application might be able
    to retrieve an application’s data via HyperText Transfer Protocol (HTTP) messages to a certain endpoint, and the application will return data in the format of Extensible Markup Language (XML) or JavaScript Object Notation (JSON) messages.
    应用程序编程接口（API）是指定其他应用程序如何与组织的资产进行交互的规范，例如检索或更改它们的数据。例如，另一个应用程序可以通过超文本传输协议（HTTP）消息到达特定的终端点来检索应用程序的数据，应用程序将以可扩展标记语言（XML）或JavaScript对象表示法（JSON）消息的格式返回数据。
    Some programs put a heightened focus on API bugs in their bug bounty programs if they’re rolling out a new version of their API. A secure API implementation is key to preventing data breaches and protecting customer data. Hacking APIs requires many of the same skills as hacking web applications, mobile applications, and IoT applications. But when testing APIs, you should focus on common API bugs like data leaks and injection flaws.
    一些程序将在其漏洞赏金计划中加大对API漏洞的重视，尤其是当他们推出新版本的API时。安全的API实现对于防止数据泄露和保护客户数据非常重要。黑客攻击API需要许多与黑客攻击Web应用程序、移动应用程序和物联网应用程序相同的技能。但在测试API时，应集中关注常见的API漏洞，如数据泄漏和注入漏洞。
    Source Code and Executables
    If you have more advanced programming and reversing skills, you can give
     source code
    and
     executable
     programs
    a try. These programs encourage hackers to find vulnerabilities in an organization’s software by directly providing hackers with an open source codebase or the binary executable. Examples include the Internet Bug Bounty, the program for the PHP language, and the WordPress program.
    如果你具备更高级的编程和逆向技能，可以尝试使用源代码和可执行程序。这些程序直接为黑客提供开源代码库或二进制可执行文件，鼓励他们发现组织软件中的漏洞。例如，Internet Bug Bounty、PHP语言程序和WordPress程序等。
    Hacking these programs can entail analyzing the source code of open source projects for web vulnerabilities and fuzzing binaries for potential exploits. You usually have to understand coding and computer science concepts to be successful here. You’ll need knowledge of web vulnerabilities, programming skills related to the project’s codebase, and code analysis skills. Cryptography, software development, and reverse engineering skills are helpful.
    侵入这些程序可能涉及分析开源项目的源代码，以查找Web漏洞，并对潜在的漏洞进行模糊测试。在此，您通常需要了解编码和计算机科学概念才能成功。您需要了解Web漏洞，与项目代码库相关的编程技能以及代码分析技能。加密，软件开发和反向工程技能也会有所帮助。
    Source code programs may sound intimidating, but keep in mind that they’re diverse, so you have many to choose from. You don’t have to be a master programmer to hack these programs; rather, aim for a solid understanding of the project’s tech stack and underlying architecture. Because these programs tend to require more skills, they are less competitive, and only a small proportion of hackers will ever attempt them.
    源代码程序可能听起来很可怕，但请记住它们是多样的，所以你有很多选择。你不必成为一名高手程序员来攻击这些程序; 相反，目标是对项目的技术堆栈和基础架构有扎实的了解。因为这些程序往往需要更多的技能，它们竞争力较小，只有少部分黑客会尝试攻击它们。
    Hardware and IoT
    Last but not least are hardware and IoT programs. These programs ask you to hack devices like cars, smart televisions, and thermostats. Examples include the bug bounty programs of Tesla and Ford Motor Company.
    最后还有硬件和物联网项目。这些项目要求你攻击诸如汽车、智能电视和恒温器等设备。例如特斯拉和福特汽车的漏洞赏金计划。
    You’ll need highly specific skills to hack these programs: you’ll often have to acquire a deep familiarity with the type of device that you’re hacking, in addition to understanding common IoT vulnerabilities. You should know about web vulnerabilities, programming, code analysis, and reverse engineering. Also, study up on IoT concepts and industry standards such as digital signing and asymmetric encryption schemes. Finally, cryptography, wireless hacking, and software development skills will be helpful too.
    你需要具备高度具体的技能才能攻击这些程序: 你经常需要深入了解你要攻击的设备类型，以及理解常见的物联网漏洞。你应该了解网络漏洞、编程、代码分析和逆向工程。此外，学习物联网概念和行业标准，如数字签名和非对称加密方案。最后，密码学、无线网络攻击和软件开发技能也会很有帮助。
    Although some programs will provide you with a free device to hack, that often applies to only the select hackers who’ve already established a relationship with the company. To begin hacking on these programs, you might need the funds to acquire the device on your own.
    虽然一些程序可能提供免费的设备供你使用，但这通常只适用于已经与公司建立关系的特定黑客。要开始在这些程序上进行黑客攻击，你可能需要自己拥有获取设备的资金。
    Since these programs require specialized skills and a device, they tend to be the least competitive.
    由于这些程序需要专业技能和设备，它们往往是竞争最少的。
    Bug Bounty Platforms
    Companies can host bug bounty programs in two ways: bug bounty platforms and independently hosted websites.
    公司可以通过两种方式托管漏洞悬赏计划：漏洞悬赏平台和独立托管的网站。
     Bug bounty platforms
    are websites through which many companies host their programs. Usually, the platform directly awards hackers with reputation points and money for their results. Some of the largest bug bounty platforms are HackerOne, Bugcrowd, Intigriti, Synack, and Cobalt.
    漏洞赏金平台是许多公司托管其项目的网站。通常，该平台直接授予黑客声誉积分和金钱作为奖励。一些最大的漏洞赏金平台是HackerOne，Bugcrowd，Intigriti，Synack和Cobalt。
    Bug bounty platforms are an intermediary between hackers and security teams. They provide companies with logistical assistance for tasks like payment and communication. They also often offer help managing the incoming reports by filtering, deduplicating, and triaging bug reports for companies. Finally, these platforms provide a way for companies to gauge a hacker’s skill level via hacker statistics and reputation. This allows companies that do not wish to be inundated with low-quality reports to invite experienced hackers to their private programs. Some of these platforms also screen or interview hackers before allowing them to hack on programs.
    漏洞赏金平台是黑客和安全团队之间的中介机构。他们提供物流协助，如支付和通信等任务的公司。他们还经常提供帮助，通过过滤、去重和筛选漏洞报告来管理来自公司的报告。最后，这些平台通过黑客统计和声誉提供一种公司评估黑客技能水平的方法。这使得那些不希望被低质量报告淹没的公司可以邀请经验丰富的黑客参加他们的私人计划。其中一些平台还会在允许他们攻击计划之前对黑客进行筛选或面试。
    From the hacker’s perspective, bug bounty platforms provide a centralized place to submit reports. They also offer a seamless way to get recognized and paid for your findings.
    从黑客的角度来看，漏洞赏金平台提供了一个集中的地方来提交报告。它们还提供了一种轻松的方式来获得对您的发现的认可和报酬。
    On the other hand, many organizations host and manage their bug bounty programs without the help of platforms. Companies like Google, Facebook, Apple, and Medium do this. You can find their bug bounty policy pages by visiting their websites, or by searching “
     CompanyName
    bug bounty program” online.
    另一方面，许多组织在没有平台的帮助下托管和管理他们的漏洞悬赏程序。像谷歌、Facebook、苹果和Medium这样的公司就是这样做的。您可以通过访问他们的网站或在网上搜索“CompanyName漏洞悬赏计划”来找到他们的漏洞悬赏政策页面。
    As a bug bounty hunter, should you hack on a bug bounty platform? Or should you go for companies’ independently hosted programs?
    作为一名悬赏赏金猎人，你应该在Bug悬赏平台上进行攻击吗？还是应该去攻击公司独立托管的程序？
    The Pros . . .
    The best thing about bug bounty platforms is that they provide a lot of transparency into a company’s process, because they post disclosed reports, metrics about the programs’ triage rates, payout amounts, and response times. Independently hosted programs often lack this type of transparency. In the bug bounty world,
     triage
    refers to the confirmation of vulnerability.
    漏洞赏金平台的最大优点在于它们为公司的流程提供了很多透明度，因为它们发布了已披露的报告，关于程序分类率、支付金额和响应时间的指标。独立托管的程序通常缺乏这种透明度。在漏洞赏金世界中，分类是指漏洞确认的过程。
    You also won’t have to worry about the logistics of emailing security teams, following up on reports, and providing payment and tax info every time you submit a vulnerability report. Bug bounty programs also often have reputation systems that allow you to showcase your experience so you can gain access to invite-only bug bounty programs.
    你也不必担心电邮安全团队的物流问题、跟进报告、每次提交漏洞报告时提供付款和税收信息。漏洞赏金计划通常还有声誉系统，让你展示经验，因此可以获得邀请制的漏洞赏金计划的入场资格。
    Another pro of bug bounty platforms is that they often step in to provide conflict resolution and legal protection as a third party. If you submit a report to a non-platform program, you have no recourse in the final bounty decision.
    Ultimately, you can’t always expect companies to pay up or resolve reports in the current state of the industry, but the hacker-to-hacker feedback system that platforms provide is helpful.
    Bug赏金平台的另一个优点是它们通常作为第三方介入，提供冲突解决和法律保护。如果您向非平台计划提交报告，则在最终赏金决定中没有追索权。最终，您并不能总是期望公司支付或解决报告在当前行业状态下的问题，但平台提供的黑客反馈系统是有帮助的。
    . . . and the Cons
    However, some hackers avoid bug bounty platforms because they dislike how those platforms deal with reports. Reports submitted to platform-managed bug bounty programs often get handled by
     triagers
    , third-party employees who often aren’t familiar with all the security details about a company’s product. Complaints about triagers handling reports improperly are common.
    然而，一些黑客避开漏洞赏金平台，因为他们不喜欢这些平台处理报告的方式。提交给平台管理的漏洞赏金计划的报告通常由筛选员处理，这些第三方员工通常不熟悉公司产品的所有安全细节。有关筛选员不当处理报告的投诉很普遍。
    Programs on platforms also break the direct connection between hackers and developers. With a direct program, you often get to discuss the vulnerability with a company’s security engineers, making for a great learning experience.
    平台上的程序也会破坏黑客和开发人员之间的直接联系。对于直接的程序，您经常可以与公司的安全工程师讨论漏洞，从而获得很好的学习经验。
    Finally, public programs on bug bounty platforms are often crowded, because the platform gives them extra exposure. On the other hand, many privately hosted programs don’t get as much attention from hackers and are thus less competitive. And for the many companies that do not contract with bug bounty platforms, you have no choice but to go off platforms if you want to participate in their programs.
    “最后，漏洞赏金平台上的公开计划通常很拥挤，因为平台为它们提供了额外的曝光率。另一方面，许多私人托管的计划得不到来自黑客的太多关注，因此竞争较少。对于许多不与漏洞赏金平台签约的公司，如果您想参加他们的计划，您别无选择，只能离开平台。”
    Scope, Payouts, and Response Times
    What other metrics should you consider when picking a program, besides its asset types and platform? On each bug bounty program’s page, metrics are often listed to help you assess the program. These metrics give insight into how easily you might be able to find bugs, how much you might get paid, and how well the program operates.
    除资产类型和平台之外，选择方案时应考虑哪些其他指标？在每个漏洞赏金计划的页面上，通常列出了一些指标来帮助您评估该计划。这些指标揭示了您可能能够轻松发现漏洞的难度程度、您可能获得的报酬金额以及该程序运行的程度。
    Program Scope
    First, consider the scope. A program’s
     scope
    on its policy pages specifies what and how you are allowed to hack. There are two types of scopes: asset and vulnerability. The
     asset scope
    tells you which subdomain, products, and applications you can hack. And the
     vulnerability scope
    specifies which vulnerabilities the company will accept as valid bugs.
    首先考虑范围。一个程序在其策略页面上的范围指定了您被允许进行攻击的内容和方式。两种类型的范围：资产和漏洞。资产范围告诉您可以攻击哪些子域、产品和应用程序。而漏洞范围指定公司将接受哪些漏洞作为有效的错误。
    For example, the company might list the subdomains of its website that are in and out of scope:
    例如，公司可能列出其网站的子域名，明确界定在范围内和范围外的内容：
     In-scope assets
    范围内的资产
      a.example.com
      b.example.com
      c.example.com
      users.example.com
      landing.example.com
     Out-of-scope assets
    超出范围的资产
      dev.example.com
      test.example.com
    Assets that are listed as in scope are the ones that you are allowed to hack. On the other hand, assets that are listed as out of scope are off-limits to bug bounty hunters. Be extra careful and abide by the rules! Hacking an out-of-scope asset is illegal.
    在范围内的资产是你被允许攻击的资产。另一方面，被列为不在范围内的资产是禁止赏金猎人攻击的。请格外小心并遵守规定！攻击不在范围内的资产是违法的。
    The company will also often list the vulnerabilities it considers valid bugs:
    公司还经常列出其认为有效的漏洞：
     In-scope vulnerabilities
    在范围内的漏洞
     All except the ones listed as out of scope
     Out-of-scope vulnerabilities
    超出范围的漏洞
     Self-XSS
     Clickjacking
     Missing HTTP headers and other best practices without direct security impact
     Denial-of-service attacks
     Use of known-vulnerable libraries, without proof of exploitability
     Results of automated scanners, without proof of exploitability
    The out-of-scope vulnerabilities that you see in this example are typical of what you would find in bug bounty programs. Notice that many programs consider non-exploitable issues, like violations of best practice, to be out of scope.
    在此示例中看到的超出范围漏洞是赏金计划中常见的。请注意，许多计划认为不可利用的问题（如违反最佳实践）超出了范围。
    Any program with large asset and vulnerability scopes is a good place to start for a beginner. The larger the asset scope, the larger the number of target applications and web pages you can look at. When a program has a big asset scope, you can often find obscure applications that are overlooked by other hackers. This typically means less competition when reporting bugs.
    任何覆盖范围大且具有易受攻击性的程序对初学者来说都是一个良好的起点。资产范围越大，你能够察看的目标应用程序和网页就越多。当一个程序覆盖范围较广时，你通常可以找到其他黑客忽略的不常见的应用程序。这意味着在报告漏洞时会有更少的竞争。
    The larger the vulnerability scope, the more types of bugs the organization is willing to hear reports about. These programs are a lot easier to find bugs in, because you have more opportunities, and so can play to your strengths.
    随着风险范围的扩大，组织愿意接受关于更多类型的漏洞报告。这些程序更容易发现漏洞，因为您有更多机会，可以发挥自己的优势。
    Payout Amounts
    The next metric you should consider is the program’s
     payout amounts