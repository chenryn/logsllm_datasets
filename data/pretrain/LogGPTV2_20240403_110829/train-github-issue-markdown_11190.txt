##### System information (version)
  * OpenCV => 3.4
  * Operating System / Platform => Windows 7 64 Bit
  * Compiler => python 3.5.5 / IPyhton 6.5
##### Detailed description
I am reading videostream from a webcam and that works fine for raw YUY2
format, the default.  
But i want to do some testing between YUY2 and MJPG and try to reconfigure
camera to send my MJPG, but i still only get YUY2.
The camera and system can do both as i can see it with AMCap / e-CAMViewer.
Might be related to #7013
##### Steps to reproduce
    def decode_fourcc(v):
            v = int(v)
            return "".join([chr((v >> 8 * i) & 0xFF) for i in range(4)])
    def do(self):
            print("Testing fps performance with 2592x1944")       
            self.cv2_cap.set(cv2.CAP_PROP_FRAME_WIDTH, 2592)
            self.cv2_cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1944)
            str = "actual forcc format: " + decode_fourcc(self.cv2_cap.get(cv2.CAP_PROP_FOURCC))               
            print (str)
            self.file.write(str + '\n')
    #        self.measureFps()
            print("setting to MJPEG and doing FPS measurement again")
            ret = self.cv2_cap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))
            time.sleep(1)
            print (ret)
            str = "actual forcc format: " + decode_fourcc(self.cv2_cap.get(cv2.CAP_PROP_FOURCC))               
            print (str)
            self.measureFps()
the output generated is:
    Testing fps performance with 2592x1944
    actual forcc format: YUY2
    setting to MJPEG and doing FPS measurement again
    True
    actual forcc format: YUY2
    Time taken : 2.484999895095825 seconds
    Estimated frames per second : 2.012072519547206
AMCap working with YUY2:  
![amcap_03_yuy2](https://user-
images.githubusercontent.com/42960704/45022450-8de23400-b034-11e8-9560-8657c24333e4.jpg)
AMCap Settings:  
![amcap_02_settings](https://user-
images.githubusercontent.com/42960704/45022451-8de23400-b034-11e8-83f9-c704a9802d8d.jpg)
AMCap working with MJPG:  
![amcap_01_mjpg](https://user-
images.githubusercontent.com/42960704/45022452-8de23400-b034-11e8-84ca-d53eb12d7e05.jpg)