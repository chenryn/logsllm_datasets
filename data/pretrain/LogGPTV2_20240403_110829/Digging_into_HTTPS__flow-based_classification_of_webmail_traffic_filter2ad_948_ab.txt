tions into (scalar) features, used for our preliminary classiﬁcation
results.
323webmail
non mail
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 200
 400
 600
 800
 1000
IP distance
F
D
C
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
webmail
non mail
 0.2
 0.4
 0.6
 0.8
 1
correlation coefficient
Figure 1: Distance to closest known legacy mail server.
Figure 2: Correlation between activity proﬁles of web (mail or
non-mail) servers and their closest legacy mail server.
cations. For example, inferring periodicity of sessions could trans-
late into a powerful tool for distinguishing between “user-invoked”
and “machine-generated” (e.g., AJAX) trafﬁc and for extracting
ﬂow-level signatures associated with different applications. Also,
studying the mix of well-known services within a subnet may pro-
vide hints for the existence of other unknown services in the same
subnet. Finally, although we will focus on HTTPS trafﬁc when in-
troducing our features (motivated also by the earlier observations
about webmail trafﬁc), we stress that the techniques we describe
are applicable to both HTTP and HTTPS ﬂow traces.
3.1 Service proximity
The Internet mail system relies on the interplay of multiple ser-
vices or protocols, including SMTP, IMAP, POP, and webmail. We
have observed that if there exists a POP, IMAP, or SMTP server
within a certain domain or subnet, there is a high chance to ﬁnd a
webmail server in the same subnet. This is often due to network
planning reasons. Since legacy mail delivery trafﬁc and respective
servers can be easily and reliably identiﬁed using port-based clas-
siﬁcation [17], we can use their existence to infer webmail servers
in the vicinity.
To verify our assumption of server proximity, we detect all mail
servers in the SWITCH network relying on port numbers. Overall,
we ﬁnd 300 SMTP, 140 IMAP/S, and 176 POP/S servers. More-
over, we use our top500 data set, see Section 2. For every HTTPS
server we compute the IP address distance, which is simply the in-
teger difference between two IP addresses towards the closest mail
server. Our assumption is that legacy mail servers are closer to
webmail than other HTTPS servers. Figure 1 shows the observed
distance for webmail and non-mail HTTPS servers (e.g. WWW,
VPN, Skype) found among the top500 servers.
We observe that almost 60% of the webmail servers have a dis-
tance very close to the minimum, i.e., smaller than 10 IP addresses,
while only 5% of the non-mail servers are in this range. Moreover,
more than 90% of the webmail servers have a distance smaller than
200 IP addresses. These numbers indicate that webmail servers are
substantially more likely than non-mail servers to be in the neigh-
borhood of a legacy mail server.
3.2 Client base behavior
While Section 3.1 studies direct correlations between servers
(i.e., how close they are), here we propose to analyze the entire
client base of a server. We have found pronounced patterns for the
following two properties: (i) the daily and weekly access patterns
of HTTPS servers (Section 3.2.1), and (ii) the duration of client
connections (Section 3.2.2).
3.2.1 Daily and weekly proﬁle
It is well-known that Internet trafﬁc as a whole has diurnal and
weekly patterns. Different applications may also have their own
speciﬁc access patterns. For example, people access their e-mail
frequently and often in a scheduled way, i.e., ﬁrst thing in the morn-
ing, whereas they access other web applications, such as online
banking or Skype, in a substantially different way. More impor-
tantly, we expect client activity to be more balanced during the day
for servers that have a worldwide user base (e.g., a web page) than
for webmail servers with a local user base. For example, everyone
can access the website of ETH Zurich, but only a limited group of
people can use the webmail platform of ETH Zurich.
To quantify these differences, we use the activity proﬁle of known
IMAP and POP servers as a reference point and evaluate how it
compares with the activity proﬁle of unknown web servers in their
vicinity. Our expectation is that IMAP and POP diurnal and weekly
patterns will be more similar to webmail than to non-mail server
patterns. In line with the observations of Section 3.1, we compare
an unknown server to the closest legacy mail server in the same sub-
net. If there is no such server, we compare to the highest-volume
legacy mail server in the same autonomous system.
Speciﬁcally, to compare two activity proﬁles, we partition a given
time interval (in our case one week) into bins of one hour and count
for every hour the number of client sessions that access the two
servers. This way we derive two vectors of equal length that de-
scribe the proﬁle of the servers. To measure statistical dependence
between the proﬁles, we compute the Spearman’s rank correlation
coefﬁcient [24] of the two vectors. The Spearman’s coefﬁcient has
two useful properties. First, it is a rank correlation measure and
therefore it effectively normalizes the two vectors. Second, it cap-
tures (non)-linear correlations between the two proﬁles, i.e., if the
activity intensity of two proﬁles increases/decreases together.
If
two proﬁles are strongly correlated then the coefﬁcient tends to 1.
The resulting value is used as input to our classiﬁer (Section 4).
To demonstrate the efﬁciency of this feature, Figure 2 plots the
distribution of Spearman’s correlation coefﬁcient when comparing
the activity proﬁles of all top500 HTTPS services with the pro-
ﬁle of the closest mail server. For more than 90% of the webmail
servers the correlation coefﬁcient is higher than 0.6 while this per-
centage is only about 50% for non-mail servers.
324webmail
non mail
F
D
C
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 50
 100
 150
 200
duration [s]
Figure 3: Median of session duration.
3.2.2 Session duration
A second characteristic of user behavior is how long clients nor-
mally use a service. We speculate that webmail users generally take
some time to read and answer their e-mails and may even keep the
browser window open to wait for incoming messages. Hence, ac-
cess duration for a webmail service should be higher, on average,
than the one for a normal webpage. To capture the access duration
of a service we consider sessions as described in Section 2. By
deﬁning session duration as the time between the start of the ﬁrst
session ﬂow and the start of the last session ﬂow, we ignore poten-
tial TCP timeouts. Since we are interested in typical user behavior,
we use the median across all session duration samples for a given
server.
Figure 3 displays the distribution of the median duration for our
top500 servers. Again, we ﬁnd signiﬁcant differences between
the client behavior of a webmail server and other non-mail servers.
While the median session duration of a webmail service is shorter
than 25s for only some 20% of the webmail servers, almost 90% of
non-mail servers experience such short median access times. Al-
though there exist some non-mail servers with long session du-
rations (these are mainly VPN servers), the overall differences in
access duration are sufﬁciently pronounced to use this as another
feature for classifying webmail trafﬁc.
3.3 Periodicity
The activity proﬁles of Section 3.2.1 capture ﬂuctuations in client
activity over long time periods such as one week. We now inves-
tigate the existence of higher frequency time patterns. The advent
of AJAX-based technologies, which heavily rely on asynchronous
interactions between clients and servers, has led to an increase in
exchanged messages. Many of today’s webmail solutions check pe-
riodically (e.g., every 5 minutes) for incoming messages and update
the browser window if necessary. This is in line with the experience
provided by mail programs such as Outlook or Thunderbird. Our
idea is to leverage such periodicity that we expect to be visible in
our ﬂow-based data in order to classify e-mail related web trafﬁc.
Using Wireshark and Firebug we analyze the communi-
cation triggered by different webmail implementations. We ﬁnd
evidence of distinct periodicity in the sense that even during idle
times a synchronization message is sent at regular time intervals.
This also results in a new observed ﬂow between client and server
at the same time intervals. Nevertheless, capturing this periodicity
requires some signal processing.
 0.2
 0.15
 0.1
 0.05
 0
 0.2
 0.15
 0.1
 0.05
 0
 0.2
 0.15
 0.1
 0.05
 0
 0.2
 0.15
 0.1
 0.05
 0
OWA
HORDE
WWW
Skype
 0  100  200  300  400  500  600  700  800  900 1000
Lag [s]
Figure 4: Autocorrelation of ﬂow inter-arrival times.
We observe that webmail sessions are composed of noisy user-
invoked trafﬁc, resulting from activities such as sending e-mails or
browsing folders, and evident machine-generated periodic trafﬁc.
To recover the periodicity buried in the signal, we start by ﬁltering
out all short sessions, since they are not useful for identifying peri-
odic behaviors that repeat infrequently, e.g., every 5 minutes. For a
server under study, we keep all sessions and respective ﬂows with
a duration higher than 1, 800s, which corresponds to six 5-minute
intervals. We then split each session into time bins of 1s and count
the number of ﬂows that start within a bin. This is repeated for
every client of the server under study. Then, we compute the au-
tocorrelation function and average the autocorrelation signals over
the entire client base of a particular server, in order to smooth the
signal and obtain a server-level behavior.
The plots in Figure 4 display the results for four different types
of servers from our top500 class. Evidently, webmail applica-
tions show pronounced peaks at regular intervals, i.e., OWA at 60s
and Horde at 300s, while web and Skype trafﬁc does not show this
pattern. Note that we observe similar periodic patterns for other
webmail applications such as GMail or Yahoo!.
Although it is trivial to assess periodicity visually based on auto-
correlation signals, we still need to introduce a simple metric that
quantiﬁes periodicity and can be used by a classiﬁer. To this end,
we consider the energies of different frequencies in the autocorrela-
tion function. By cutting off small time lags (e.g., below 200s) and
high time lags (e.g., above 400s), we mitigate the impact of noise.
Then, we compare the maximum and median signal levels that we
observe within this time interval. High ratios are a strong indicator