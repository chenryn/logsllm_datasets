### 文本优化

#### 1. 导入文件编辑与系统映像列表查看
- **导入文件内容**：
  ```bash
  # 编辑导入文件，内容如下所示
  ```
- **切换用户并查看映像列表**：
  ```bash
  [root@mal data]# ll Centos6.5-x86_64-Desktop.qcow2
  -rw-r--r-- 1 root root 4236247040 Jul 7 11:02 Centos6.5-x86_64-Desktop.qcow2
  [oneadmin@mal ~]$ onedatastore list
  [oneadmin@mal ~]$ cat centos.one
  ```

#### 2. 切换用户和查看权限
- **切换用户**：
  ```bash
  [root@mal data]# su - oneadmin
  ```
- **查看权限**：
  ```bash
  [oneadmin@mal ~]$ ls -l Centos6.5-x86_64-Desktop.qcow2
  -rw-r--r-- 1 root root 4236247040 Jul 7 11:02 Centos6.5-x86_64-Desktop.qcow2
  ```

#### 3. 查看映像列表
- **命令输出**：
  ```bash
  [oneadmin@mal ~]$ oneimage list
  ID USER GROUP NAME TYPE SIZE PER STAT RVMS
  0 oneadmin oneadmin CentOS6.5-x86_64-Desktop OS 15G No used
  ```

#### 4. 导入映像到default数据存储
- **创建映像**：
  ```bash
  [oneadmin@mal ~]$ oneimage create centos.one --datastore default
  ```
- **检查映像状态**：
  ```bash
  [oneadmin@mal ~]$ oneimage list
  ID USER GROUP NAME TYPE SIZE PER STAT RVMS
  1 oneadmin oneadmin CentOS6.5-x86_64-Desktop OS 15G No lock
  ```

#### 5. 使用Sunstone添加映像
- **步骤**：
  1. 在Sunstone界面左侧选择“虚拟资源”中的“映像管理”。
  2. 单击列表上方的加号，弹出创建映像窗口。
  3. 输入名称、描述，选择数据仓库并在路径中输入映像位置。
  4. 单击“创建”按钮。

#### 6. 创建虚拟网络
- **步骤**：
  1. 在Sunstone界面左侧选择“基础设施”中的“虚拟网络”。
  2. 单击列表上方的加号，弹出创建虚拟网络窗口。
  3. 输入名称、网桥和网络模式。
  4. 单击“创建”按钮。

#### 7. 创建模板
- **步骤**：
  1. 在Sunstone界面左侧选择“虚拟资源”中的“模板管理”。
  2. 单击列表上方的加号，弹出创建模板页面。
  3. 输入模板名称、Hypervisor类型（如KVM）。
  4. 选择磁盘映像和虚拟网络。
  5. 单击“创建”按钮。

#### 8. 创建并访问虚拟机
- **步骤**：
  1. 在Sunstone界面左侧选择“虚拟资源”中的“虚机管理”。
  2. 单击列表上方的加号，弹出创建虚拟机页面。
  3. 输入虚拟机名称并选择模板。
  4. 单击“创建”按钮。
  5. 虚拟机创建完成后，可以在虚拟机列表中查看状态。
  6. 当虚拟机处于运行状态时，可以通过VNC客户端或网页控制台访问。

#### 9. 小结
- **OpenNebula介绍**：
  OpenNebula是一个功能强大的开源云计算平台，尽管目前国内使用较少，但预计未来会有更多用户采用。本章介绍了OpenNebula的基本情况及其在CentOS 7中的安装和配置。

#### 10. 文件管理命令示例
- **cp命令**：
  ```bash
  # 复制单个文件
  cp /usr/local/nginx/conf/nginx.conf /backup/nginx.conf

  # 复制多个文件
  cp /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.20150412 /backup/

  # 复制目录
  cp -R /usr/local/nginx/conf /backup/conf

  # 显示执行过程
  cp -v /usr/local/nginx/conf/nginx.conf /backup/nginx.conf
  ```

- **mv命令**：
  ```bash
  # 移动文件
  mv /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.bak

  # 重命名文件
  mv /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.new

  # 移动目录
  mv /usr/local/nginx/conf /usr/local/nginx/conf.bak
  ```

通过上述优化，文本变得更加清晰、连贯和专业。希望这些改进对你有所帮助！