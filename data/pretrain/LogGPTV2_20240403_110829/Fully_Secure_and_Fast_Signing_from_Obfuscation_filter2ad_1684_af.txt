Hugo Krawcyzk and Tal Rabin. Chameleon signatures. In Network and Distributed Systems
Security Symposium, 2000.
Allison Lewko and Brent Waters. New proof methods for attribute-based encryption: Achieving
full security through selective techniques. In Reihaneh Safavi-Naini and Ran Canetti, editors,
Advances in Cryptology CRYPTO 2012, volume 7417 of Lecture Notes in Computer Science,
pages 180–198. Springer Berlin Heidelberg, 2012.
[MP12]
Daniele Micciancio and Chris Peikert. Trapdoors for lattices: Simpler, tighter, faster, smaller.
In Advances in Cryptology–EUROCRYPT 2012, pages 700–718. Springer, 2012.
[PHGR13] B. Parno, J. Howell, C. Gentry, and M. Raykova. Pinocchio: Nearly practical veriﬁable compu-
tation. In Security and Privacy (SP), 2013 IEEE Symposium on, pages 238–252, May 2013.
[Seo14]
[SW14]
Jae Hong Seo. Short signatures from diﬃe-hellman, revisited: Sublinear public key, CMA
security, and tighter reduction. Cryptology ePrint Archive, Report 2014/138, 2014. http:
//eprint.iacr.org/.
Amit Sahai and Brent Waters. How to use indistinguishability obfuscation: Deniable encryption,
and more. In Proceedings of the 46th Annual ACM Symposium on Theory of Computing, STOC
’14, pages 475–484, New York, NY, USA, 2014. ACM.
A Puncturable PRF from Large Width GGM
There have been several prior constructions [BW13, BGI14, KPTZ13] of puncturable PRFs from the tree-
based construction of [GGM86]. In this section we show a simple extension to a 2c-ary tree for some constant
c. One can view this as an application of the Dwork-Naor [DN94] put into the [GGM86] context. The primary
motivation of this construction is in the construction of PRFs from PRGs which have a large cost to seed,
however then transform input relatively quickly. In this case is it reasonable to consider a value c > 1.
18
A.1 Puncturable PRFs from [GGM86] via [DN94]
Let the puncturable PRF have message size l bits and output size λ bits. Consider a construction where
an input message is broken into l/c words each of size c-bits. Thus we can write x = w1 . . . wd where
wi ∈ {0, 1}c and d = l/c.4. Let G be a PRG with input size λ bits and output size λ · 2c bits. Clearly c
should be a small constant, due to the exponentially dependency in the output size. We deﬁne auxiliary
functions Gw : {0, 1}λ → {0, 1}λ as follows: G(x) = G1(x)(cid:107)G2(x)(cid:107) . . .(cid:107)G2c(x).
Construction
• Setup(1λ) : Let K be a random λ-bit string. Output key K.
• Puncture(K, x) :
Write x ∈ {0, 1}l as w1 . . . wd.
for i = 1 to d do
for w ∈ {0, 1}c\{wi} do
FK,i,w ← Gw(Gwi−1 . . . Gw2(Gw1(K)) . . .))
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}. Output key K{x}.
• Eval(K{x}, y) :
if y = x then
output ⊥
else
end if
Let x = w1 . . . wd.
Write y = w1 . . . wi−1ww(cid:48)
Output Gw(cid:48)
(. . . Gw(cid:48)
(Gw(cid:48)
d−1
d
i+1 . . . w(cid:48)
d where w (cid:54)= wi.
(FK,i,w) . . .)).
i+1
Security
Theorem 2. The above scheme is a selectively secure puncturable PRF if G is a secure PRG stretching λ
bits to λ · 2c bits.
Proof. We prove the above theorem by deﬁning the following sequence of hybrids.
Hybrid 1
1. Choose K at random in {0, 1}λ.
2. Receive an l-bit message x, to be punctured on.
3. Puncture K on x as follows
Let x = w1 . . . wd.
for i = 1 to d do
for w ∈ {0, 1}c\{wi} do
FK,i,w ← Gw(Gwi−1 . . . Gw2(Gw1(K)) . . .))
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}.
4. Send key K{x}.
5. Send Gwd(Gwd−1(. . . Gw1(K) . . .)).
4Note that inputs can always be zero padded to ensure l is a multiple of c
19
Hybrid 2[j] : j ∈ [0, d]
1. Choose K at random in {0, 1}λ.
2. Receive an l-bit message x, to be punctured on.
3. Puncture K on x as follows
Let x = w1 . . . wd.
for i = 1 to j do
for w ∈ {0, 1}c\{wi} do
$← {0, 1}λ
FK,i,w
end for
end for
Let y $← {0, 1}λ.
for i = j + 1 to d do
for w ∈ {0, 1}c\{wi} do
FK,i,w ← Gw(Gwi−1 . . . Gwj+1(y)) . . .))
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}.
4. Send key K{x}.
5. Send Gwd(Gwd−1(. . . Gwj+1(y) . . .)).
Hybrid 3
1. Choose K at random in {0, 1}λ.
2. Receive an l-bit message x, to be punctured on.
3. Puncture K on x as follows
Let x = w1 . . . wd.
for i = 1 to d do
for w ∈ {0, 1}c\{wi} do
$← {0, 1}λ
FK,i,w
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}.
4. Send key K{x}.
5. Let y(cid:48) $← {0, 1}λ. Send y(cid:48).
Hybrid 4[j] : j ∈ [0, d]
1. Choose K at random in {0, 1}λ.
2. Receive an l-bit message x, to be punctured on.
3. Puncture K on x as follows
Let x = w1 . . . wd.
for i = 1 to d − j do
for w ∈ {0, 1}c\{wi} do
$← {0, 1}λ
FK,i,w
end for
end for
Let y $← {0, 1}λ.
for i = d + 1 − j to d do
for w ∈ {0, 1}c\{wi} do
20
FK,i,w ← Gw(Gwi−1 . . . Gwj+1(y)) . . .))
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}.
4. Send key K{x}.
5. Let y(cid:48) $← {0, 1}λ. Send y(cid:48).
Hybrid 5
1. Choose K at random in {0, 1}λ.
2. Receive an l-bit message x, to be punctured on.
3. Puncture K on x as follows
Let x = w1 . . . wd.
for i = 1 to d do
for w ∈ {0, 1}c\{wi} do
FK,i,w ← Gw(Gwi−1 . . . Gw2(Gw1(K)) . . .))
end for
end for
Let K{x} = (FK,i,w)i∈[1,d],w∈{0,1}l\{wi}.
4. Send key K{x}.
5. Let y(cid:48) $← {0, 1}λ. Send y(cid:48).
− AdvHybrid2[j]
A
=  for j ∈ [1, d].
Claim 9. Suppose there exists a PPT adversary A such that AdvHybrid2[j−1]
Then the advantage of A in distinguishing the output of G is at least .
Proof. B receives point x = w1 . . . wd from A. B receives PRG challenge z = z1 . . . z2c, where z is either the
output of G on string y, or is a truly random string of length λ · 2c. B sets FK,i,w
$← {0, 1}λ : i  j, w ∈ {0, 1}l\{wi}.
Lastly B sends Gwd(Gwd−1( . . . Gwj+1(zw) . . . )). If z = G(y), then B is in Hybrid 2[j − 1], otherwise if z is
truly random, then B is in Hybrid 2[j]. It follows the advantage of B in distinguishing the output of G is
.
Claim 10. Suppose there exists a PPT adversary A such that AdvHybrid4[j−1]
Then the advantage of A in distinguishing the output of G is at least .
Proof. B receives point x = w1 . . . wd from A. B receives PRG challenge z = z1 . . . z2c, where z is either the
output of G on string y, or is a truly random string of length λ · 2c. B sets FK,i,w
$← {0, 1}λ : i > d − j. B
sets FK,d−j,w = zw : w ∈ {0, 1}l\{wd−j}. B sets FK,i,w = Gw(Gwi−1(. . . Gwd+1−j (zw) . . .)) : i > d − j, w ∈
{0, 1}l\{wi}. Lastly B sends Gwd(Gwd−1(. . . Gwd+1−j (zw) . . .)). If z = G(y), then B is in Hybrid 4[j − 1],
otherwise if z is truly random, then B is in Hybrid 4[j]. It follows the advantage of B in distinguishing the
output of G is .
=  for j ∈ [1, d].
− AdvHybrid4[j]
A
A
A
First observe that the Hybrids in each of the following pairs of are identical: (1, 2[0]), (2[d], 3), (3, 4[0])
and (4[d], 5). Thus claims 5 and 6 imply that the advantage of any PPT adversary in distinguishing Hybrids
1 and 5 is at most 2d · P RG, where P RG is the maximal distinguishing adversary of any adversary in
distinguishing the output of the PRG. On the other hand, any adversary distinguishing Hybrids 1 and 5
distinguishes the output of the puncturable PRF. Since P RG is neglgible by assumption, it follows that no
adversary has more than a negligible advantage in distinguishing the output of the puncturable PRF.
21
B Proof of Security of Variable-Length Domain Puncturable PRF
Theorem 3. The scheme given in Section 5 is a selectively secure puncturable PRF if G is a secure PRG
stretching λ bits to 3λ bits.
Proof. We prove the above theorem by deﬁning the following sequence of hybrids.
Hybrid 1
1. Choose K at random in {0, 1}λ.
2. Receive an v-bit message x, to be punctured on.
3. Puncture K on x as follows
Write x as b1 . . . bv, where v ≤ l.