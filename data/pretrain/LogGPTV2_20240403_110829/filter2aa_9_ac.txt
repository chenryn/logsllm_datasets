### 优化后的文本

#### 服务器与客户端的文件重命名过程

- **97号包**：
  - 客户端：“请将原来的 `wireshark.xlsx` 文件重命名为 `6AF04530.tmp`。”

- **98号包**：
  - 服务器：“重命名完成。”

- **103号包**：
  - 客户端：“请将临时文件 `DCD652B.tmp` 重命名为 `wireshark.xlsx`。”

- **104号包**：
  - 服务器：“重命名完成。”

从上述通信中可以看出，原始的 `wireshark.xlsx` 文件被重命名为临时文件 `6AF04530.tmp`。而之前创建的另一个临时文件 `DCD652B.tmp` 被重命名为新的 `wireshark.xlsx`。经过这些步骤后，我们得到了一个包含新内容的 `wireshark.xlsx` 文件，以及一个临时文件 `6AF04530.tmp`（即原来的 `wireshark.xlsx`）。随后，`6AF04530.tmp` 被删除（见图6）。

**图6**

微软之所以设计如此复杂的保存流程，是因为它带来了很多好处。然而，复杂的设计也增加了出错的可能性。一旦某个步骤出错，整个保存过程就可能失败。例如，常见的错误信息“…is currently in use. Try again later”通常是由文件被占用引起的，但也可能是由于 Excel 的 Bug 或杀毒软件造成的。只有深入理解保存过程中的细节，才能找到问题的根本原因。

Wireshark 是获取这些细节的强大工具，任何通过网络进行的操作都可以在 Wireshark 中查看。有了这一利器，许多问题都能迎刃而解。

### 技巧分享

在我刚开始学习 Wireshark 时，遇到了很多困难，差点放弃。那时最希望的是有前辈能指点迷津，但四处求教却鲜有收获。即使到了今天，中文资料依然非常稀缺。因此，我总结了一些技巧，希望能帮助初学者少走弯路。

#### 一、抓包技巧

1. **只抓包头**：
   - 一般情况下，每个包的最大长度为 1514 字节，启用 Jumbo Frame 后可达 9000 字节以上。大多数时候，我们只需要 IP 头或 TCP 头即可分析。
   - 在 Wireshark 中，可以通过单击菜单栏上的 Capture -> Options，在弹出的窗口中定义 “Limit each packet to” 的值来实现。我通常设置为 80 字节，这样可以包括 TCP 层、网络层和数据链路层的信息（见图1）。
   - 如果涉及应用层，应加上应用层协议头的长度。如果不确定不同协议头的长度，可以设置较大的值，如 200 字节。

   **图1**

2. **只抓必要的包**：
   - 服务器上的网络连接可能非常多，但我们只需其中一小部分。Wireshark 的 Capture Filter 可以在抓包时过滤掉不需要的包。例如，我们只对 IP 地址为 `10.32.200.131` 的包感兴趣，可以在 Wireshark 上设置 Capture Filter 为 `host 10.32.200.131`（见图2）。
   
   **图2**

   使用 `tcpdump` 命令抓包时，也可以用 `host` 参数达到相同效果。例如：
   ```bash
   [root@server_1 /]# tcpdump -i eth0 host 10.32.200.131 -w /tmp/tcpdump.cap
   ```

3. **为每步操作打标记**：
   - 为了使包更易读，可以在每步操作之间插入特定的标记。例如，在 Windows 上抓包时，可以使用以下步骤：
     1. `ping -n 1 -l 1`
     2. 操作步骤1
     3. `ping -n 1 -l 2`
     4. 操作步骤2
     5. `ping -n 1 -l 3`
     6. 操作步骤3

   如图3所示，通过这种方式，我们可以轻松定位到具体的步骤。

   **图3**

#### 二、个性化设置

1. **时间显示格式**：
   - 我经常需要参照服务器上的日志时间，因此将 Wireshark 的时间显示格式调整为与服务器一致。可以通过单击 View -> Time Display Format -> Date and Time of Day 来设置（见图4）。

   **图4**

2. **自定义颜色**：
   - 不同类型的网络包可以设置不同的颜色。例如，网络管理员可能会将 OSPF 协议相关的包设为显眼的颜色。可以通过 View -> Coloring Rules 来设置颜色。如果同事已经有一套适合你工作的配色方案，可以导出并导入到你的 Wireshark 中（见图5）。

   **图5**

3. **更多设置**：
   - 更多详细的设置可以在 Edit -> Preferences 窗口中完成。例如，单击 Protocols -> TCP 可以看到多个 TCP 相关选项。如果你经常需要对 Sequence Number 进行加减运算，可以选中 Relative sequence numbers（见图6）。

   **图6**

4. **时区设置**：
   - 如果你在其他时区的服务器上抓包，然后下载到本地分析，最好将本地电脑的时区设为与抓包服务器一致。这样，Wireshark 显示的时间才能与服务器日志时间匹配（见图7）。

   **图7**

#### 三、过滤技巧

1. **按协议过滤**：
   - 如果已知某个协议发生问题，可以直接用协议名称进行过滤。例如，Windows Domain 的身份验证问题，如果已知使用 Kerberos 协议，可以在 Filter 框中输入 `Kerberos` 进行过滤（见图8）。

   **图8**

2. **IP 地址加端口号过滤**：
   - 最常用的过滤方式是 IP 地址加端口号。除了手动输入过滤表达式，还可以右键单击感兴趣的包，选择 Follow TCP/UDP Stream 自动过滤（见图10）。

   **图10**

3. **鼠标辅助过滤**：
   - 右键单击 Wireshark 上感兴趣的内容，选择 Prepare a Filter -> Selected，会在 Filter 框中自动生成过滤表达式。在有复杂需求时，还可以选择 And、Or 等选项生成组合过滤表达式（见图12）。

   **图12**

4. **保存过滤后的包**：
   - 可以将过滤后的网络包保存为新文件，以便于操作。单击 File -> Save As，选中 Displayed 选项再保存，得到的新文件就是过滤后的部分（见图13）。

   **图13**

有时候，保存后的文件打开时会显示很多错误，这是因为过滤后得到的不再是完整的 TCP Stream。因此，在选择 Displayed 选项时要慎重考虑。

希望这些技巧能够帮助你更好地使用 Wireshark，提高工作效率。