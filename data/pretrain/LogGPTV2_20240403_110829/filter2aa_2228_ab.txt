Debugging pretty annoying, trampoline addresses jitter
Control ﬂow depends on DRs, so no BPM/BPX
No call stack, i.e. back tracing difﬁcult
We can´t execute until return, difﬁcult to tell who called us
No direct call between subs, less X-Refs
Absence of ret instructions confuses disassembler
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Impact of Trampolines
Impact on RE
Debugging pretty annoying, trampoline addresses jitter
Control ﬂow depends on DRs, so no BPM/BPX
No call stack, i.e. back tracing difﬁcult
We can´t execute until return, difﬁcult to tell who called us
No direct call between subs, less X-Refs
Absence of ret instructions confuses disassembler
But: Once understood we get perfect call stack
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Ease Impact of Trampolines
Idea
Fix trampoline addresses
Use kernel mode driver
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Ease Impact of Trampolines
Idea
Fix trampoline addresses
Use kernel mode driver
Driver
1
Turn RDTSC into privileged instruction (TSD ﬂag, CR4
register)
2
Hook IDT
3
Return zero upon exception if
Exception from user mode
Instruction was RDTSC
else jump to original handler
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Reclaiming the Debug Registers (1)
Usage of DRs
DRM system uses DRs for storage
Uses SetThreadContext API
Debugger cannot use hardware breakpoints (crash or no
break)
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Reclaiming the Debug Registers (1)
Usage of DRs
DRM system uses DRs for storage
Uses SetThreadContext API
Debugger cannot use hardware breakpoints (crash or no
break)
Strategy
But we need BPMs for our strategy!
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Reclaiming the Debug Registers (2)
Use API Hooking
Hook into Set/GetThreadContext API
Redirect modiﬁcations to internal storage
DRM System cannot modify DRs anymore!
Debugger can use DRs
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Reclaiming the Debug Registers (2)
Use API Hooking
Hook into Set/GetThreadContext API
Redirect modiﬁcations to internal storage
DRM System cannot modify DRs anymore!
Debugger can use DRs
Really?
Hardware breakpoints still don’t work!
Why?
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Context Emulation
Problem
Modiﬁcation of EIP depends on DRs
Two thread contexts: kernel mode vs. internal storage
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Context Emulation
Problem
Modiﬁcation of EIP depends on DRs
Two thread contexts: kernel mode vs. internal storage
Hook KiUserExceptionDispatcher
If fake exception, execute re-implemented
KiUserExceptionDispatcher:
1
Pass fake context, DR values from internal storage
2
On return copy modiﬁcations to real context
3
Apply context via NtContinue
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
KiUserExceptionDispatcher - Re-implemented
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
KiUserExceptionDispatcher - Re-implemented
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
KiUserExceptionDispatcher - Re-implemented
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
KiUserExceptionDispatcher - Re-implemented
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
KiUserExceptionDispatcher - Re-implemented
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Summary
Situation after Countermeasures
DRM System cannot modify DRs - API hook
Exception handler gets expected values -
KiUserExceptionDispatcher patch
Our debugger can use hardware breakpoints!
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
P-Code Machine Overview
Machine Properties
Stack based with result register
256 ﬁxed size opcodes (1 byte)
Opcodes interleaved with data (ASN.1)
Allocate memory in host machine
High-level opcodes (load opcodes, call into other modules,
music decoding)
Low level opcodes, emulate virtual CPU
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Loading of Opcodes
Opcode Module Files
Special module which contains P-Code machine
Contain native code + opcodes
Decompressed at runtime
No PE, no IAT, no sections, etc.
Relocation table + some ﬁxed imports (MSVCRT)
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Obfuscation in the P-Code Machine
Executing Opcodes
Per-module random pool
Randomize opcode  opcode handler
Descramble opcodes with PRNG in machine
Garbage data interleaved with opcodes
Data parsed via ASN.1
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Impact of the P-Code Machine
Static RE Difﬁcult
Understand machine itself ﬁrst
Different meaning of opcodes per module
ASN.1 parsing
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Impact of the P-Code Machine
Static RE Difﬁcult
Understand machine itself ﬁrst
Different meaning of opcodes per module
ASN.1 parsing
Debugging Difﬁcult
Low signal to noise ratio (big "handler loop")
Even lower due to opcode descrambling
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
P-Code Machine in IDA
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Strategies to ﬁnd Decryption Algorithm + Keysetup
1
Write custom Disassembler (Expensive Strategy)
Many handlers
Long and complex high level handlers
Re-assemble randomization, descrambling, garbage
instructions, ASN.1
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Strategies to ﬁnd Decryption Algorithm + Keysetup
1
Write custom Disassembler (Expensive Strategy)
Many handlers
Long and complex high level handlers
Re-assemble randomization, descrambling, garbage
instructions, ASN.1
2
Trace until key written to memory (Brute Force Strategy)
Single-step via debugger script
Slow, but reaches code writing key
Not so clever
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Strategies to ﬁnd Decryption Algorithm + Keysetup
1
Write custom Disassembler (Expensive Strategy)
Many handlers
Long and complex high level handlers
Re-assemble randomization, descrambling, garbage
instructions, ASN.1
2
Trace until key written to memory (Brute Force Strategy)
Single-step via debugger script
Slow, but reaches code writing key
Not so clever
3
Use emulation (Cool Strategy)
Use CPU emulation (PyEmu, x86 Emu for IDA, ...)
Fast, very ﬂexible
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Strategies to ﬁnd Decryption Algorithm + Keysetup
4
Use BPMs / Attack machine memory (Lazy Strategy)
Use what we have
Exploit machine memory management
Filebuffer size 0x1800, DES keyschedule size 0x80
Set BP, ﬁre when keysetup memory allocated
Set BPM, ﬁre when keysetup written
Back-trace from there
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
Overview
Trampolines
Debug Registers
P-Code Machine
Strategies to ﬁnd Decryption Algorithm + Keysetup
4
Use BPMs / Attack machine memory (Lazy Strategy)
Use what we have
Exploit machine memory management
Filebuffer size 0x1800, DES keyschedule size 0x80
Set BP, ﬁre when keysetup memory allocated
Set BPM, ﬁre when keysetup written
Back-trace from there
Keen Disappointment
Decryption and keysetup in native code! High-level handlers!
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Outline
1
Introduction
About DRMs
Approaching the DRM
2
SEH Basics
Overview
Exception Dispatching
3
Anti-RE Techniques
Overview
Trampolines
Debug Registers
P-Code Machine
4
Decrypting the Content
The Algorithm
Demo
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Keysetup Algorithm
Key Derivation
Hash some ﬁles
Use different hash algorithms
Different key for every music ﬁle
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Decryption Algorithm
Decrypt content with DES-CBC (Cipher Block Chaining)
IV from DRM ﬁle
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Demo
Demo
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Conclusion
Summary
Overall: good protection
BPMs led us to success, P-Code machine almost useless!
Implementation weaknesses
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Conclusion
Summary
Overall: good protection
BPMs led us to success, P-Code machine almost useless!
Implementation weaknesses
Room for Improvements
1
Transform more native code to P-Code
2
Make P-Code machine more complex (nesting, more
obfuscation, ...)
3
Improve (very) weak debugger detection
4
Use DRs, let control ﬂow depend on BPM/BPX
5
...
Jan Newger
Anti-RE Techniques in DRM Code
Introduction
SEH Basics
Anti-RE Techniques
Decrypting the Content
The Algorithm
Demo
Thanks for your Attention!
Questions?
Jan Newger
Anti-RE Techniques in DRM Code