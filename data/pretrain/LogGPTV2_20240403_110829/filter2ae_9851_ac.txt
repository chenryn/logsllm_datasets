READ_SYNC_SETTINGS：允许应用程序读取同步设置。
READ_SYNC_STATS：允许应用程序读取同步统计信息。
READ_VOICEMAIL：允许应用程序读取系统中的语音信箱。
REBOOT：需要重新启动设备。
RECEIVE_BOOT_COMPLETED：允许应用程序收到ACTION_BOOT_COMPLETED在系统完成启动后广播的应用程序 。
RECEIVE_MMS：允许应用程序监视传入的彩信。
RECEIVE_SMS：允许应用程序接收短信。
RECEIVE_WAP_PUSH：允许应用程序接收WAP推送消息。
RECORD_AUDIO：允许应用程序录制音频。
REORDER_TASKS：允许应用程序更改任务的Z顺序。
REQUEST_COMPANION_RUN_IN_BACKGROUND：允许随播应用在后台运行。REQUEST_COMPANION_USE_DATA_IN_BACKGROUND：允许随播应用在后台使用数据。
REQUEST_DELETE_PACKAGES：允许应用程序请求删除包。
REQUEST_IGNORE_BATTERY_OPTIMIZATIONS：许可申请必须持有才能使用
ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS。
REQUEST_INSTALL_PACKAGES：允许应用程序请求安装软件包。
RESTART_PACKAGES：此常数在API级别8中已弃用restartPackage(String) 。不再支持API。
SEND_RESPOND_VIA_MESSAGE：允许应用程序（电话）向其他应用程序发送请求，以处理来电期间的响应通过消息动作。
SEND_SMS：允许应用程序发送短信。
SET_ALARM：允许应用程序广播Intent为用户设置闹钟。
SET_ALWAYS_FINISH：允许应用程序控制是否在后台放置活动时立即完成。
SET_ANIMATION_SCALE：修改全局动画缩放因子。
SET_DEBUG_APP：配置应用程序进行调试。
SET_PREFERRED_APPLICATIONS：这个常数在API级别7中已被弃用。不再有用，
addPackageToPreferred(String) 有关详细信息。
SET_PROCESS_LIMIT：允许应用程序设置可以运行的最大数量（不需要的）应用程序进程。
SET_TIME：允许应用程序设置系统时间。
SET_TIME_ZONE：允许应用程序设置系统时区。
SET_WALLPAPER：允许应用设置壁纸。
SET_WALLPAPER_HINTS：允许应用程序设置壁纸提示。SIGNAL_PERSISTENT_PROCESSES：允许应用程序请求将信号发送到所有持久进程。
STATUS_BAR：允许应用程序打开，关闭或禁用状态栏及其图标。
SYSTEM_ALERT_WINDOW：允许应用使用类型创建窗口 TYPE_APPLICATION_OVERLAY，显示在所有其他应用程序的顶部。
TRANSMIT_IR：允许使用设备的红外发射器（如果有的话）。
UNINSTALL_SHORTCUT：不再支持此权限。
UPDATE_DEVICE_STATS：允许应用程序更新设备统计信息。
USE_FINGERPRINT：允许应用使用指纹硬件。
USE_SIP：允许应用程序使用SIP服务。
VIBRATE：允许访问振动器。
WAKE_LOCK：允许使用PowerManager WakeLock来防止处理器进入睡眠状态或屏幕变暗。
WRITE_APN_SETTINGS：允许应用程序写入apn设置。
WRITE_CALENDAR：允许应用程序写入用户的日历数据。
WRITE_CALL_LOG：允许应用程序写入（而不是读取）用户的通话记录数据。
WRITE_CONTACTS：允许应用程序写入用户的联系人数据。
WRITE_EXTERNAL_STORAGE：允许应用程序写入外部存储。
WRITE_GSERVICES：允许应用修改Google服务地图。
WRITE_SECURE_SETTINGS：允许应用程序读取或写入安全系统设置。
WRITE_SETTINGS：允许应用程序读取或写入系统设置。
WRITE_SYNC_SETTINGS：允许应用程序写入同步设置。
WRITE_VOICEMAIL：允许应用程序修改和删除系统中现有的语音信箱。
## **0x05 apk文件获取AndroidManifest.xml文件**
1.解压apk文件
首先需要下载apk文件，使用压缩软件直接解压缩即可，解压成功后会在apk目录中生存一个AndroidManifest.xml文件，如图1所示。使用记事本或者IE等打开该文件后，其内容为乱码，如图2所示。
图1 AndroidManifest.xml文件
图2文件内容为乱码
2.使用androguard进行转码
androguard可以下载最新版本，也可以下载1.9版本。
将AndroidManifest.xml文件复制到androguard目录，我使用的是PentestBox-with-Metasploit-v2.2平台。到E:\Tools\测试平台\PentestBox-with-Metasploit-v2.2\bin\androidsecurity\androguard目录下使用命令：
androaxml.py -i AndroidManifest.xml -o new.WoCloud.AndroidManifest.xml
即可解码内容。
## **0x06.apktool反编译apk**
前面通过压缩文件直接解压会导致部分文件未经过编码，因此会出现乱码，经过编译的文件可以很好的进行查看，下面介绍使用apktool进行反编译apk程序，执行效果如下图所示。
1.下载apktool.jar
2.将一下脚本保存为apktool.bat
    @echo off
    if "%PATH_BASE%" == "" set PATH_BASE=%PATH%
    set PATH=%CD%;%PATH_BASE%;
    java -jar -Duser.language=en "%~dp0\apktool.jar" %*
3.反编译程序
（1）直接用java进行反编译：java -jar apktool.jar d test.apk
（2）使用bat脚本进行编译：apktool -f d test.apk //覆盖已有的反编译程序及其目录
apktool d test.apk
注意：apktool.bat和apktool_2.2.4.jar在同一个目录，且下载的apktool_2.2.4.jar需要重命名为apktool.jar
## **0x07. AndroidManifest.xml 默认设置漏洞**
1.配置文件中的默认设置allowBackup风险
（1）安全风险描述
Android API Level 8及其以上Android系统提供了为应用程序数据的备份和恢复功能，此功能的开关决定于该应用程序中
AndroidManifest.xml文件中的
allowBackup属性值，其属性值默认是True。当allowBackup标志为true时，用户即可通过adb backup和adb
restore来进行对应用数据的备份和恢复，这可能会带来一定的安全风险。当设置该属性值为true，adb
backup容许任何一个能够打开USB调试开关的人从Android手机中复制应用数据到外设，一旦应用数据被备份之后，所有应用数据都可被读取；同时adb
restore 容许用户指定一个恢复的数据来源（即备份的应用数据）来恢复应用程序数据的创建。因此，当一个应用数据被备份之后，用户即可在其他 Android
手机或模拟器上安装同一个应用，以及通过恢复该备份的应用数据到该设备上，在该设备上打开该应用即可恢复到被备份的应用程序的状态。
对于目前大多数手机来说，一旦存在该漏洞，容易导致个人通讯录、微信、QQ聊天信息、短信等敏感信息泄露；通过将备份程序在模拟手机上恢复后，可以直接进行店家扫描支付（店家扫描支付不需要支付密码）容易造成财产损失。
（2）影响范围
Android API 等级8（Android 2.2 - 2.2.3）以及以上系统，目前绝大部分系统都受影响。下面给出Android
API等级对应按照系统以及名称对应的图标名称：
API等级1： Android 1.0
API等级2： Android 1.1 Petit Four 花式小蛋糕
API等级3： Android 1.5 Cupcake 纸杯蛋糕
API等级4： Android 1.6 Donut 甜甜圈
API等级5： Android 2.0 Éclair 松饼
API等级6： Android 2.0.1 Éclair 松饼
API等级7： Android 2.1 Éclair 松饼
API等级8： Android 2.2 - 2.2.3 Froyo 冻酸奶
API等级9： Android 2.3 - 2.3.2 Gingerbread 姜饼
API等级10：Android 2.3.3-2.3.7 Gingerbread 姜饼
API等级11：Android 3.0 Honeycomb 蜂巢
API等级12：Android 3.1 Honeycomb 蜂巢
API等级13：Android 3.2 Honeycomb 蜂巢
API等级14：Android 4.0 - 4.0.2 Ice Cream Sandwich 冰激凌三明治
API等级15：Android 4.0.3 - 4.0.4 Ice Cream Sandwich 冰激凌三明治
API等级16：Android 4.1 Jelly Bean 糖豆
API等级17：Android 4.2 Jelly Bean 糖豆
API等级18：Android 4.3 Jelly Bean 糖豆
API等级19：Android 4.4 KitKat 奇巧巧克力棒
API等级20 : Android 4.4W KitKat with wearable extensions 奇巧巧克力棒
API等级21：Android 5.0-5.0.2 Lollipop 棒棒糖
（3）测试流程（以sina.weibo为例）
​ 测试环境：Windows 7，ADB 调试工具；物理接触目标手机1，连接手机1到 PC 端
手机1和手机2均未被 ROOT，开启 USB 调试；不用安装其它应用，不启动被测试的应用。连接安装开启USB调试手机1
到PC端，在PC自动（也可以提前）安装好手机驱动后，启动命令行界面输入以下命令：
l adb devices
#显示已连接的设备列表，测试手机是否正常连接
l adb backup -nosystem -noshared -apk -f com.sina.weibo.abcom.sina.weibo
#-nosystem表示不备份系统应用，-noshared表示不备份应用存储在SD中的数据，-apk表示备份应用APK安装包，
-f表示备份的.ab文件路径和文件名，最后是要备份应用的packageName
l 点击手机1确认备份界面的“备份我的数据”
l 等待备份完成，至此微博客户端数据成功备份为 com.sina.weibo.ab 文件
l 断开手机1的连接
l 连接手机2 ，在命令行界面下输入以下命令：
l adb kill-server #关闭ADB
l adb devices #重新启动ADB，检测手机2是否成功连接
l adb restore com.sina.weibo.ab
l 点击手机2确认恢复界面的“恢复我的数据”
l 等待恢复完成
l 打开手机2中新安装的微博客户端，测试可正常登录手机1中帐号执行各种操作，且长期有效。
（4）安全防护
显示设置android:allowBackup=false，使用android:restoreAnyVersion的默认值。
（5）检测漏洞
使用apktool等工具反编译apk后，查看AndroidManifest.xml文件，查找allowBackup，如果其值为ture，则表示存在漏洞，如下图所示。
2.Debuggable默认设置风险
原理：android:debuggable属性用于指定应用程序是否能够被调试，如果设置其为true，那么其将能够被java调试工具（jdb）调试，信息和代码都将可能会被获取和修改。
防护：系统默认其为false，使用系统默认设置。