`contiguous（持​​​​​​​续​​​​​​​）`{.literal}
策​​​​​​​略​​​​​​​要​​​​​​​求​​​​​​​新​​​​​​​的​​​​​​​扩​​​​​​​展​​​​​​​要​​​​​​​和​​​​​​​现​​​​​​​有​​​​​​​的​​​​​​​扩​​​​​​​展​​​​​​​相​​​​​​​邻​​​​​​​。​​​​​​​如​​​​​​​果​​​​​​​没​​​​​​​有​​​​​​​足​​​​​​​够​​​​​​​的​​​​​​​可​​​​​​​用​​​​​​​扩​​​​​​​展​​​​​​​来​​​​​​​满​​​​​​​足​​​​​​​分​​​​​​​配​​​​​​​请​​​​​​​求​​​​​​​，`normal（标​​​​​​​准​​​​​​​）`{.literal}分​​​​​​​配​​​​​​​策​​​​​​​略​​​​​​​就​​​​​​​无​​​​​​​法​​​​​​​使​​​​​​​用​​​​​​​它​​​​​​​们​​​​​​​，而​​​​​​​
`anywhere（任​​​​​​​意​​​​​​​）`{.literal}分​​​​​​​配​​​​​​​策​​​​​​​略​​​​​​​会​​​​​​​使​​​​​​​用​​​​​​​它​​​​​​​们​​​​​​​，即​​​​​​​使​​​​​​​不​​​​​​​惜​​​​​​​通​​​​​​​过​​​​​​​将​​​​​​​两​​​​​​​个​​​​​​​条​​​​​​​带​​​​​​​放​​​​​​​在​​​​​​​同​​​​​​​一​​​​​​​个​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​中​​​​​​​降​​​​​​​低​​​​​​​性​​​​​​​能​​​​​​​。​​​​​​​`cling（粘​​​​​​​贴​​​​​​​）`{.literal}分​​​​​​​配​​​​​​​策​​​​​​​略​​​​​​​会​​​​​​​将​​​​​​​新​​​​​​​的​​​​​​​扩​​​​​​​展​​​​​​​放​​​​​​​到​​​​​​​同​​​​​​​一​​​​​​​个​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​中​​​​​​​作​​​​​​​为​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​相​​​​​​​同​​​​​​​条​​​​​​​带​​​​​​​中​​​​​​​现​​​​​​​有​​​​​​​的​​​​​​​扩​​​​​​​展​​​​​​​使​​​​​​​用​​​​​​​。​​​​​​​可​​​​​​​使​​​​​​​用​​​​​​​
`vgchange`{.command} 命​​​​​​​令​​​​​​​修​​​​​​​改​​​​​​​这​​​​​​​些​​​​​​​策​​​​​​​略​​​​​​​。​​​​​​​
:::
::: para
一​​​​​​​般​​​​​​​说​​​​​​​来​​​​​​​，分​​​​​​​配​​​​​​​策​​​​​​​略​​​​​​​只​​​​​​​在​​​​​​​很​​​​​​​特​​​​​​​殊​​​​​​​的​​​​​​​情​​​​​​​况​​​​​​​下​​​​​​​，也​​​​​​​就​​​​​​​是​​​​​​​说​​​​​​​您​​​​​​​需​​​​​​​要​​​​​​​指​​​​​​​定​​​​​​​非​​​​​​​常​​​​​​​规​​​​​​​或​​​​​​​者​​​​​​​非​​​​​​​标​​​​​​​准​​​​​​​扩​​​​​​​展​​​​​​​分​​​​​​​配​​​​​​​的​​​​​​​时​​​​​​​候​​​​​​​才​​​​​​​会​​​​​​​使​​​​​​​用​​​​​​​`标​​​​​​​准​​​​​​​`{.literal}策​​​​​​​略​​​​​​​以​​​​​​​外​​​​​​​的​​​​​​​策​​​​​​​略​​​​​​​。​​​​​​​
:::
[]{#LVM_CLI.html#idm139761022656368
.indexterm}[]{#LVM_CLI.html#idm139761028954288 .indexterm}
::: para
LVM 卷​​​​​​​组​​​​​​​和​​​​​​​基​​​​​​​本​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​是​​​​​​​包​​​​​​​含​​​​​​​在​​​​​​​ `/dev`{.filename}
目​​​​​​​录​​​​​​​的​​​​​​​设​​​​​​​备​​​​​​​专​​​​​​​用​​​​​​​文​​​​​​​件​​​​​​​目​​​​​​​录​​​​​​​树​​​​​​​中​​​​​​​的​​​​​​​，布​​​​​​​局​​​​​​​如​​​​​​​下​​​​​​​：
:::
``` screen
/dev/vg/lv/
```
::: para
例​​​​​​​如​​​​​​​：如​​​​​​​果​​​​​​​您​​​​​​​创​​​​​​​建​​​​​​​两​​​​​​​个​​​​​​​卷​​​​​​​组​​​​​​​ `myvg1`{.filename} 和​​​​​​​
`myvg2`{.filename}，每​​​​​​​个​​​​​​​带​​​​​​​三​​​​​​​个​​​​​​​名​​​​​​​为​​​​​​​ `lvo1`{.filename}、​​​​​​​`lvo2`{.filename}
和​​​​​​​ `lvo3`{.filename} 的​​​​​​​逻​​​​​​​辑​​​​​​​卷​​​​​​​，那​​​​​​​么​​​​​​​就​​​​​​​要​​​​​​​创​​​​​​​建​​​​​​​六​​​​​​​个​​​​​​​设​​​​​​​备​​​​​​​专​​​​​​​用​​​​​​​文​​​​​​​件​​​​​​​：
:::
``` screen
/dev/myvg1/lv01
/dev/myvg1/lv02
/dev/myvg1/lv03
/dev/myvg2/lv01
/dev/myvg2/lv02
/dev/myvg2/lv03
```
[]{#LVM_CLI.html#idm139761063017584 .indexterm}
::: para
64 位​​​​​​​ CPU 中​​​​​​​ LVM 的​​​​​​​最​​​​​​​大​​​​​​​设​​​​​​​备​​​​​​​大​​​​​​​小​​​​​​​为​​​​​​​ 8EB。​​​​​​​
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#VG_create_cluster}4.3.2. 在​​​​​​​群​​​​​​​集​​​​​​​中​​​​​​​创​​​​​​​建​​​​​​​卷​​​​​​​组​​​​​​​ {.title}
:::
[]{#LVM_CLI.html#idm139761063014288
.indexterm}[]{#LVM_CLI.html#idm139761063012848
.indexterm}[]{#LVM_CLI.html#idm139761057909520 .indexterm}
::: para
在​​​​​​​群​​​​​​​集​​​​​​​环​​​​​​​境​​​​​​​中​​​​​​​使​​​​​​​用​​​​​​​ `vgcreate`{.command}
命​​​​​​​令​​​​​​​创​​​​​​​建​​​​​​​卷​​​​​​​组​​​​​​​就​​​​​​​如​​​​​​​同​​​​​​​在​​​​​​​单​​​​​​​一​​​​​​​节​​​​​​​点​​​​​​​中​​​​​​​创​​​​​​​建​​​​​​​卷​​​​​​​组​​​​​​​。​​​​​​​
:::
::: para
默​​​​​​​认​​​​​​​情​​​​​​​况​​​​​​​下​​​​​​​，在​​​​​​​所​​​​​​​有​​​​​​​可​​​​​​​访​​​​​​​问​​​​​​​共​​​​​​​享​​​​​​​存​​​​​​​储​​​​​​​的​​​​​​​计​​​​​​​算​​​​​​​机​​​​​​​中​​​​​​​都​​​​​​​可​​​​​​​看​​​​​​​到​​​​​​​ CLVM
在​​​​​​​共​​​​​​​享​​​​​​​存​​​​​​​储​​​​​​​中​​​​​​​创​​​​​​​建​​​​​​​的​​​​​​​卷​​​​​​​组​​​​​​​。​​​​​​​但​​​​​​​有​​​​​​​可​​​​​​​能​​​​​​​在​​​​​​​使​​​​​​​用​​​​​​​带​​​​​​​ `-c n`{.option} 选​​​​​​​项​​​​​​​的​​​​​​​
`vgcreate`{.command} 命​​​​​​​令​​​​​​​创​​​​​​​建​​​​​​​的​​​​​​​本​​​​​​​地​​​​​​​卷​​​​​​​组​​​​​​​，只​​​​​​​能​​​​​​​在​​​​​​​群​​​​​​​集​​​​​​​的​​​​​​​一​​​​​​​个​​​​​​​节​​​​​​​点​​​​​​​中​​​​​​​看​​​​​​​到​​​​​​​。​​​​​​​
:::
::: para
当​​​​​​​在​​​​​​​群​​​​​​​集​​​​​​​环​​​​​​​境​​​​​​​中​​​​​​​执​​​​​​​行​​​​​​​以​​​​​​​下​​​​​​​命​​​​​​​令​​​​​​​时​​​​​​​，创​​​​​​​建​​​​​​​的​​​​​​​卷​​​​​​​组​​​​​​​对​​​​​​​执​​​​​​​行​​​​​​​该​​​​​​​命​​​​​​​令​​​​​​​的​​​​​​​节​​​​​​​点​​​​​​​来​​​​​​​说​​​​​​​是​​​​​​​本​​​​​​​地​​​​​​​的​​​​​​​。​​​​​​​该​​​​​​​命​​​​​​​令​​​​​​​创​​​​​​​建​​​​​​​一​​​​​​​个​​​​​​​名​​​​​​​为​​​​​​​
`vg1`{.literal} 的​​​​​​​卷​​​​​​​组​​​​​​​，其​​​​​​​中​​​​​​​包​​​​​​​含​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​ `/dev/sdd1`{.literal} 和​​​​​​​
`/dev/sde1`{.literal}。​​​​​​​
:::
``` screen
vgcreate -c n vg1 /dev/sdd1 /dev/sde1
```
::: para
You can change whether an existing volume group is local or clustered
with the `-c`{.option} option of the `vgchange`{.command} command, which
is described in [第 4.3.7 节
"修​​​​​​​改​​​​​​​卷​​​​​​​组​​​​​​​参​​​​​​​数​​​​​​​"](#LVM_CLI.html#VG_change){.xref}.
:::
::: para
您​​​​​​​可​​​​​​​以​​​​​​​使​​​​​​​用​​​​​​​ `vgs`{.command} 命​​​​​​​令​​​​​​​查​​​​​​​看​​​​​​​现​​​​​​​有​​​​​​​卷​​​​​​​组​​​​​​​是​​​​​​​否​​​​​​​为​​​​​​​群​​​​​​​集​​​​​​​卷​​​​​​​组​​​​​​​，如​​​​​​​是​​​​​​​则​​​​​​​会​​​​​​​显​​​​​​​示​​​​​​​
`c`{.literal} 属​​​​​​​性​​​​​​​。​​​​​​​以​​​​​​​下​​​​​​​命​​​​​​​令​​​​​​​显​​​​​​​示​​​​​​​卷​​​​​​​组​​​​​​​ `VolGroup00`{.literal} 和​​​​​​​
`testvg1`{.literal} 的​​​​​​​属​​​​​​​性​​​​​​​。​​​​​​​在​​​​​​​这​​​​​​​个​​​​​​​示​​​​​​​例​​​​​​​中​​​​​​​，`VolGroup00`{.literal}
不​​​​​​​是​​​​​​​群​​​​​​​集​​​​​​​的​​​​​​​，而​​​​​​​ `testvg1`{.literal} 是​​​​​​​群​​​​​​​集​​​​​​​的​​​​​​​，如​​​​​​​ `Attr`{.literal}
标​​​​​​​题​​​​​​​下​​​​​​​的​​​​​​​ `c`{.literal} 属​​​​​​​性​​​​​​​所​​​​​​​示​​​​​​​。​​​​​​​
:::
``` screen
[root@doc-07]# vgs
  VG            #PV #LV #SN Attr   VSize  VFree
  VolGroup00      1   2   0 wz--n- 19.88G    0
  testvg1         1   1   0 wz--nc 46.00G 8.00M
```
::: para
For more information on the `vgs`{.command} command, see [第 4.3.4 节
"显​​​​​​​示​​​​​​​卷​​​​​​​组​​​​​​​"](#LVM_CLI.html#VG_display){.xref}[第 4.9 节 "为​​​​​​​ LVM
自​​​​​​​定​​​​​​​义​​​​​​​报​​​​​​​告​​​​​​​"](#LVM_CLI.html#custom_report){.xref}, and the
`vgs`{.command} man page.
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#VG_grow}4.3.3. 在​​​​​​​卷​​​​​​​组​​​​​​​中​​​​​​​添​​​​​​​加​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​ {.title}
:::
[]{#LVM_CLI.html#idm139761022616928
.indexterm}[]{#LVM_CLI.html#idm139761022615520
.indexterm}[]{#LVM_CLI.html#idm139761022614080
.indexterm}[]{#LVM_CLI.html#idm139761022612640 .indexterm}
::: para
To add additional physical volumes to an existing volume group, use the
`vgextend`{.command} command. The `vgextend`{.command} command increases
a volume group\'s capacity by adding one or more free physical volumes.
:::
::: para
以​​​​​​​下​​​​​​​命​​​​​​​令​​​​​​​可​​​​​​​将​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​ `/dev/sdf1`{.literal} 添​​​​​​​加​​​​​​​到​​​​​​​卷​​​​​​​组​​​​​​​ `vg1`{.literal} 中​​​​​​​。​​​​​​​
:::
``` screen
vgextend vg1 /dev/sdf1
```
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#VG_display}4.3.4. 显​​​​​​​示​​​​​​​卷​​​​​​​组​​​​​​​ {.title}
:::
[]{#LVM_CLI.html#idm139761018862816
.indexterm}[]{#LVM_CLI.html#idm139761018861376 .indexterm}
::: para
您​​​​​​​可​​​​​​​以​​​​​​​使​​​​​​​用​​​​​​​两​​​​​​​个​​​​​​​命​​​​​​​令​​​​​​​来​​​​​​​显​​​​​​​示​​​​​​​ LVM 卷​​​​​​​组​​​​​​​的​​​​​​​属​​​​​​​性​​​​​​​：`vgs`{.command} 和​​​​​​​
`vgdisplay`{.command}。​​​​​​​
:::
::: para
The `vgscan`{.command} command will also display the volume groups,
although its primary purpose is to scan all the disks for volume groups
and rebuild the LVM cache file. For information on the
`vgscan`{.command} command, see [第 4.3.5 节
"为​​​​​​​卷​​​​​​​组​​​​​​​扫​​​​​​​描​​​​​​​磁​​​​​​​盘​​​​​​​来​​​​​​​建​​​​​​​立​​​​​​​缓​​​​​​​存​​​​​​​文​​​​​​​件​​​​​​​"](#LVM_CLI.html#vgscan){.xref}.
:::
::: para
The `vgs`{.command} command provides volume group information in a
configurable form, displaying one line per volume group. The
`vgs`{.command} command provides a great deal of format control, and is
useful for scripting. For information on using the `vgs`{.command}
command to customize your output, see [第 4.9 节 "为​​​​​​​ LVM
自​​​​​​​定​​​​​​​义​​​​​​​报​​​​​​​告​​​​​​​"](#LVM_CLI.html#custom_report){.xref}.
:::
[]{#LVM_CLI.html#idm139761022406880 .indexterm}
::: para
`vgdisplay`{.command}
命​​​​​​​令​​​​​​​以​​​​​​​固​​​​​​​定​​​​​​​格​​​​​​​式​​​​​​​显​​​​​​​示​​​​​​​卷​​​​​​​组​​​​​​​属​​​​​​​性​​​​​​​（比​​​​​​​如​​​​​​​大​​​​​​​小​​​​​​​、​​​​​​​扩​​​​​​​展​​​​​​​、​​​​​​​物​​​​​​​理​​​​​​​卷​​​​​​​数​​​​​​​量​​​​​​​等​​​​​​​等​​​​​​​）。​​​​​​​下​​​​​​​面​​​​​​​的​​​​​​​例​​​​​​​子​​​​​​​就​​​​​​​是​​​​​​​对​​​​​​​卷​​​​​​​组​​​​​​​
`new_vg`{.literal} 执​​​​​​​行​​​​​​​ `vgdisplay`{.command}
命​​​​​​​令​​​​​​​时​​​​​​​的​​​​​​​输​​​​​​​出​​​​​​​结​​​​​​​果​​​​​​​。​​​​​​​如​​​​​​​果​​​​​​​您​​​​​​​没​​​​​​​有​​​​​​​指​​​​​​​定​​​​​​​卷​​​​​​​组​​​​​​​，那​​​​​​​么​​​​​​​就​​​​​​​会​​​​​​​列​​​​​​​出​​​​​​​所​​​​​​​有​​​​​​​现​​​​​​​有​​​​​​​的​​​​​​​卷​​​​​​​组​​​​​​​。​​​​​​​
:::
``` screen
# vgdisplay new_vg
  --- Volume group ---
  VG Name               new_vg
  System ID
  Format                lvm2
  Metadata Areas        3
  Metadata Sequence No  11
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                3
  Act PV                3
  VG Size               51.42 GB
  PE Size               4.00 MB
  Total PE              13164
  Alloc PE / Size       13 / 52.00 MB
  Free  PE / Size       13151 / 51.37 GB
  VG UUID               jxQJ0a-ZKk0-OpMO-0118-nlwO-wwqd-fD5D32
```
:::
::: section
::: titlepage