compact, battery-operated device. Many also incorporate a 1090ES
receiver—all three receivers we examined do.
Some receivers also include an Attitude and Heading Reference
System (AHRS) module, which provides aircraft attitude (pitch and
635roll) as well as magnetic heading using solid-state accelerometers
and magnetometers. AHRS information is displayed in the style of a
modern Primary Flight Display (PFD) and is marketed as a backup
to primary ﬂight instruments. The Stratus 2 unit shown in Figure 2
(left) is a battery-powered receiver incorporating a GPS, UAT, and
1090ES receiver and an AHRS module.
Nearly all receivers communicate with the tablet using either
WiFi or Bluetooth. A wireless link reduces clutter and allows the
receiver to be placed more conveniently inside the cockpit.
2.3 Aeronautical Information Apps
The receiver provides all information to an aeronautical informa-
tion app running on the tablet. Modern aeronautical information
apps evolved from Electronic Flight Bags (EFBs), electronic re-
placements for paper documents carried by pilots. An EFB includes
aeronautical charts, approach plates, aircraft manuals, and check-
lists. EFBs replace several pounds of paper and provide an efﬁcient
interface to these documents. The simplest EFBs are nothing more
than PDF viewers, while more sophisticated EFBs provide features
such as interactive checklists.
Because they were already familiar to pilots, EFBs provided a
natural place to add real-time data from aeronautical information
services. The emergence of low-cost GPS receivers and the intro-
duction of services such as ADS-B and FIS-B brought more kinds
of information to what are now known by the general term aviation
apps. Such applications promise to improve general aviation safety
by providing pilots with more information to aid in-ﬂight decision-
making. There is a real danger, however, that pilots will come to rely
on these apps while neglecting more basic skills. Such apps may
also engender a false sense of security, leading pilots to cut corners
in pre-ﬂight preparation or to be less vigilant in ﬂight [4, 15].
The problem of over-reliance on automation has garnered con-
siderable attention in the aviation safety community. In this work,
we take pilot reliance on an MCIS, to a greater or lesser degree, as
given. From a computer security point of view, we would prefer to
make these systems more secure rather than rely solely on a pilot’s
ability to make critical decisions under pressure.
2.4 Mobile Computing Environment
Aeronautical information apps run on ordinary consumer tablet
PCs. By far the most popular choice is an iPad, although several
aviation apps are available for Android also. Of the apps we ex-
amined, only Garmin Pilot has an Android version with the same
functionality as the iOS version.
2.5 Government Regulations
In the United States, use of mobile computing devices in the
cockpit is regulated by the FAA. The FAA has been open to the
use of EFBs and has issued detailed guidance on their use [17–
19]. Broadly speaking, portable EFBs, that is, EFB systems not
integrated into the aircraft, do not require software certiﬁcation.
(Airborne software systems are normally certiﬁed to the RTCA DO-
178B standard.) However, air carrier use of such EFBs requires FAA
approval—use in general aviation does not.
Furthermore, EFBs used by air carriers are prohibited from show-
ing “own-ship position.” That is, they may not display the location
of the aircraft on an aeronautical chart or procedure plate. General
aviation use carries no such restriction, and indeed, all of the apps
we examine provide “own-ship position.” See Figure 2 (center and
right). Regarding such use, the FAA only warns, “The EFB system
does not replace any system or equipment (e.g. navigation, com-
munication, or surveillance system) that is required by 14 CFR part
91” [17].
Figure 3: Components of a mobile cockpit information system.
3. RELATED WORK
To our knowledge, we are the ﬁrst to consider the security of mo-
bile cockpit information systems. With the rise of mobile computing
devices, there has been considerable work on mobile security [2, 42],
most of which has focused on security issues internal to the platform.
In our security analysis, we lean on the numerous studies of mobile
malware [22, 58, 65, 66] to motivate our malicious app attacker
model (Section 4.2). The technique of using the mobile device itself
to attack a peripheral was used by Frisby et al. [24] to attack mobile
point-of-sale terminals.
Firmware update attacks have been used on printers [8], medical
devices [26], batteries [35], voting machines [1], among others.
Attacks on Bluetooth and WiFi are too numerous to mention.
Integrity attacks on GPS and ADS-B have already been discussed
in Section 2.1.
4. SECURITY MODEL
In this section, we describe the MCIS threat model. Our moti-
vation is an attacker intent on disrupting the ﬂight of a particular
aircraft. An attacker can attack a target directly by manipulating
information presented by the MCIS to the pilot of the target aircraft.
This is the mode of attack implicit in most of the scenarios we de-
scribe in Section 5. An attacker can also attack the target indirectly
by manipulating information presented to pilots of nearby aircraft.
In this regime, the aircraft with the compromised MCIS becomes a
guided weapon used to attack another aircraft.
We begin our security analysis with a description of the attack
surfaces of an MCIS.
4.1 Attack Targets
An MCIS is made up of several discrete components linked by
communication channels, illustrated in Figure 3. The receiver, app,
tablet, and aeronautical information services have already been de-
scribed in Section 2. The remaining service, the App Data Provider,
is a subscription service providing up-to-date information not dis-
seminated via the aforementioned aeronautical information services.
(In all cases we examined, the App Data Provider is the same as
the app developer.) This additional information, which includes the
aeronautical charts and procedure plates displayed to the pilot, is
updated on the ground, over a normal Internet connection.
An attack on an MCIS entails attacking one or more of the com-
ponents or channels shown in Figure 3. We describe possible attacks
against each channel or against the receiver or app directly, what an
attacker might gain from each, and the steps necessary to protect
it. We do not discuss attacks on the information services (GPS,
ADS-B, TIS-B, FIS-B) themselves, which have been considered in
636prior work (see Section 2.1). Instead, we focus on attacks unique to
the MCIS platform.
Table 1 lists the information provided by an MCIS, along with
the conventional source of each piece of information. A successful
attack would allow an attacker to control or deny access to one or
more of these variables. Our next task is to deﬁne how a successful
attack on a component or channel would affect these variables. In
Section 5 we consider scenarios in which an attacker controls one or
more of these variables, and the potential outcome of such attacks.
We consider only attacks on the integrity and availability of a
component or communication channel. Attacks on secrecy/privacy
are less of a concern, because most of the information involved is
not conﬁdential in nature. We also note that we do not consider
issues of receiver or app reliability, a distinct but separate concern
in an environment like an aircraft cockpit.
Receiver to App channel. In all three of the MCISes we examined,
the receiver communicates with the app on the mobile computer
wirelessly, using either Bluetooth or WiFi. With the exception of
EFB data, which is preloaded before ﬂight, all information presented
to the pilot must be sent over this channel. The channel may also be
used to control some functions of the receiver and to send ﬁrmware
updates to the device.
The simplest class of attacks involves denying access to the chan-
nel (e.g., by jamming). This would deny the pilot access to every-
thing except EFB data. However, such an attack is easily detected,
although it may be misattributed to receiver failure. A more subtle at-
tack would be to selectively deny access to speciﬁc information; this
attack would require the channel to be unencrypted or vulnerable to
packet timing/size attacks. In the absence of proper authentication,
an attacker could tamper with all information sent over this channel.
Finally, in the absence of replay protection, the channel would be
vulnerable to selective replay of old information.
App to Internet channel. This channel is used to retrieve EFB
information as well as app updates and receiver ﬁrmware updates.
By denying access to this channel, an attacker would be able to
prevent EFB updates and potential security-related ﬁrmware updates.
If a failure to update EFB data is not properly indicated, the pilot
may be unaware she is lacking important ﬂight information.1 In
the absence of proper authentication, an attacker could tamper with
EFB data.
Receiver. The receiver provides the app with non-EFB information
shown in Table 1. Attacks on receiver availability are similar to
attacks on the receiver to app channel availability; however, in some
cases, they may be easier to carry out (e.g., via battery drain attacks).
A successful attack on receiver integrity is much more serious. An
attacker would be able to impersonate the receiver, and thus provide
arbitrary non-EFB data to the app. Reﬂashing device ﬁrmware is
the most common means of compromising device integrity, and
this is the most serious attack we consider in Section 6. However,
reﬂashing alone does not automatically imply integrity compromise,
if the app validates the authenticity of the data from the receiver.
Unless the attacker can also learn the keying material used by the
legitimate ﬁrmware to sign updates, reﬂashing alone will only result
in a denial of device availability.
App and tablet PC. The tablet is the sole MCIS interface to the
user. A successful attack on app availability would deprive the pilot
of all MCIS information. Compromising app or tablet PC integrity
would give an attacker complete control over information presented
1At least one incident in the Aviation Safety Reporting System
(ASRS) database describes a pilot violating airspace ﬂight restric-
tions because of a silent update failure (ACN 1091530).
to the pilot. This is the most serious attack on an MCIS. Fortunately,
recent progress in mobile platform security, most notably code
signing, has made such attacks difﬁcult. Nevertheless, security
problems still remain. Compounding the problem is that in many
cases, the tablet PC may be used for non-aviation purposes, exposing
it to additional malware risks.
4.2 Attacker Model
An attacker’s ability to carry out attacks on parts of the MCIS
described above depend on the attacker’s technical capabilities. We
consider ﬁve classes of attacker deﬁned by the level of access to the
MCIS under attack. We assume that an attacker has the technical
skills and equipment of a properly motivated graduate student, and
is only limited by his access to the target MCIS. These ﬁve types of
access are:
Brief proximity. Brief proximity is the weakest class, granting an
attacker brief physical proximity to the receiver for a few minutes
while the receiver is powered. This allows the attacker access to
the wireless communication channels, which he may use to gain
lasting control over the MCIS. Such access might be arranged while
the pilot is preparing for ﬂight on the ground. A properly secured
receiver to app communication channel and properly implemented
aeronautical information service receiver components can protect
against such an attack.
Brief access. Brief access grants an attacker physical access to the
receiver for a few minutes. Brief access implies brief proximity.
Physical access is a fairly powerful capability that includes the
ability to replace the device with an attacker-controlled facsimile or
render the MCIS inoperable. To defend against such an attack, the
app must be able to detect receiver tampering. (See discussion of
receiver integrity in Section 4.1.) The pilot should also have a way
of detecting tablet PC tampering or replacement.
Time-of-use proximity. Time-of-use proximity grants an attacker
physical proximity to the MCIS while it is in use. Practically, this
requires either a tracking directional antenna or the ability to plant a
device on the aircraft. Time-of-use proximity implies brief proxim-
ity. At a minimum, an attacker with time-of-use proximity can jam
all communication links, denying access to all real-time information.
Update man-in-the-middle. An attacker with update man-in-the-
middle capability has control over the Internet connection between
the tablet and the app data provider. Such access might be arranged
by enticing the user to use an attacker-controlled WiFi access point.
At a minimum, a man-in-the-middle attacker can deny the app access
to the app data provider. A properly secured channel between app
and app data provider would prevent tampering with EFB data and
any receiver ﬁrmware updates sent to the app.
Collocated app. The collocated app capability allows an attacker
to install an app on the tablet device. We assume the attacker can
arrange for the app to be executing when the device is in use. (See
Section 6.5 for a description of the demonstration attack app we
developed.) An attacker might gain such a capability through social
engineering, by exploiting a vulnerability in the tablet operating
system, or by gaining control of an already installed app.
In the ideal case, any combination of the above capabilities would
allow an attacker no more than the ability to deny use of the MCIS.
If the necessary security measures are absent or are not implemented
properly, an attacker could gain the ability to tamper with MCIS
data presented to the pilot.
637MCIS source
GPS
AHRS
AHRS
GPS
FIS-B
FIS-B
FIS-B
Conventional source
Variable
Altimeter, ATC, visual
Altitude
Attitude indicator, visual
Attitude
Heading indicator, compass
Heading
VOR/ILS/DME ind., ATC, visual
Position
ATIS/ASOS/AWOS, ATC, brief
Alt. setting
ATIS/ASOS/AWOS, ATC, brief
Wx (general)
Wx (spatial)
Visual, brief
Other aircraft ADS-B/TIS-B Visual, ATC
Procedures
Terrain
Printed procedures
Printed charts
EFB
EFB
Table 1: Elements of situation awareness provided by an MCIS
and conventional sources of the same information. Sources that
are both continuous and direct are shown in boldface.
5. RISK ASSESSMENT
What happens when an attack against an MCIS succeeds? In
this section, we consider the impact of a successful attack on ﬂight
safety. Most attacks on safety-critical systems considered by the
research community have attacked a control system, which give
an attacker direct control over the controlled process. Our case is
different. An MCIS is an information system without direct control
of the aircraft. By gaining control over an MCIS, an attacker gains
control over the information presented to the pilot; it is up to the
pilot to act on that information.
We reason about the effect of such attacks in the framework of
Hazard Analysis. The ﬂavor we use is most closely aligned with
the FAA’s usage [20, Appendix C]. (Stamatis [53] provides a more
general introduction to Risk Analysis and the elements used here.)
In our context, a hazard is a successful attack resulting in attacker-
controlled information being presented to the pilot by the MCIS. A
hazard scenario is a sequence of events leading from the hazard to
an undesirable system outcome. With each scenario, we associate a
likelihood and a severity; the combination of the two is often termed
the risk associated with the scenario. Likelihood, which may be
quantitative (e.g., a probability) or qualitative, is the likelihood of
the undesirable outcome given the hazard. That is, the attack on
the MCIS is assumed to succeed, allowing the attacker to control
some of the information displayed by the MCIS. The environmental
conditions are ﬁxed by the scenario. The likelihood is understood to
be over all general aviation pilots and their preferred aircraft.