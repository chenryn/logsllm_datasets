I've been messing with it all night to see if I can isolate the problem.
What I've come up with is it seems to fire partially, but the function call
doesn't bubble up to any of the Table components.
In `table-row.js` the following code runs when I click a TableRowColumn:  
(lines 179 to 183)
    _onCellClick: function _onCellClick(e, columnIndex) {
        if (this.props.selectable && this.props.onCellClick) this.props.onCellClick(e, this.props.rowNumber, columnIndex);
        e.ctrlKey = true;
        this._onRowClick(e);
      },
This does then call `_onRowClick` in `table-row.js`:  
(lines 166 to 169)
    _onRowClick: function _onRowClick(e) {
        console.log("table-row") //Ignore this. My test logging.
        if (this.props.onRowClick) this.props.onRowClick(e, this.props.rowNumber);
      },
My component code looks like this:
                  Filename
                  Experiment
                  Date created
                {this.props.rows.map(function(row) {
                  return (
                      {row.name}
                      {row.experiment}
                      {row.created}
                  );
                }, this)} // you can pass an arg to define 'this' in the callback!
I'm able to get onCellClick to work just fine, but onRowClick doesn't work if
I place it on the `,  or `
One of the things I've noticed is that `table.js` doesn't make any mention of
onRowClick. `table-body.js` makes some mention of `onRowClick`, but it has
different intentions than the similar `onCellClick` code in the same file.
In `table-body.js` lines 194 to 203:
    _onRowClick(e, rowNumber) {
        console.log("poop")
        e.stopPropagation();
        if (this.props.selectable) {
          // Prevent text selection while selecting rows.
          window.getSelection().removeAllRanges();
          this._processRowSelection(e, rowNumber);
        }
      },
(lines 293 to 296):
      _onCellClick(e, rowNumber, columnNumber) {
        e.stopPropagation();
        if (this.props.onCellClick) this.props.onCellClick(rowNumber, this._getColumnId(columnNumber));
      },
I've tried messing with material-ul source a bit, but haven't yet found a fix.
I'm missing something, but I don't know what I'm missing.