# 优化后的文本

## 图5：无状态网络设置下的端到端加密延迟，其中(b)是DOD-DSSE和传统DSSE的放大视图，在(a)中难以观察。

### 比较与分析
DOD-DSSE提供了次线性运行时间，而传统DSSE则实现了最佳安全性。为了减轻由于ODICT的最佳搜索/更新时间特性导致的信息泄露，我们应用了一种平均填充策略。我们还分析了上述方案的渐近通信复杂度。传统DSSE的带宽开销为O(r)，其中r是与搜索/更新查询相关的数据数量[26]。在ODS方法中，关键字-文件对被打包成4KB块，总块数记为B。对于搜索/更新操作，OMAT和ODICT传输的块数分别为s · c · O(log B)和s′ · c· O(log B)，其中c = 4是Path ORAM中的桶大小[24]，s和s′是检索足够结果所需的通信轮数[25]。在DOD-DSSE中，带宽复杂度为4 · O(N)，其中N是DOD-DSSE支持的最大唯一关键字/文件数量。

### 实际性能测试
基于之前的渐近通信分析，我们在实践中对DOD-DSSE及其同类产品进行了基准测试。图4a和4b展示了使用无状态Amazon EC2服务器的各种数据结构大小的实际端到端加密延迟（即加密、传输延迟）。可以看到，由于额外的查询，DOD-DSSE产生了较小的常数通信开销（比传统DSSE慢4倍）。然而，它比ODICT和OMAT分别快约50倍和210倍，后者在大数据结构上执行操作分别需要42秒和167秒。这表明尽管ODS方法的渐近复杂度看起来非常高效，但隐藏的常数（如c、s、s′）实际上对通信开销有很大贡献，如表1和图4a所示。

### 网络延迟和吞吐量的影响
为了研究网络通信和密码操作对端到端延迟的影响，我们检查了DOD-DSSE的成本。我们发现大部分延迟是由于网络传输造成的，其与密码操作的比例约为8:1。为了进一步研究网络延迟和吞吐量对DOD-DSSE及其同类产品的影响，我们设置了两个地理位置位于州外的EC2服务器，导致网络延迟和吞吐量分别为31毫秒和30 Mbps。如图5b所示，这种地理分布的无状态环境使得DOD-DSSE和传统DSSE分别比州内设置慢约200毫秒和100毫秒。由于ODS方法需要多次通信轮才能执行搜索或更新操作，因此更慢的网络延迟和吞吐量显著影响了ODICT和OMAT的性能。在这种设置下，DOD-DSSE现在比ODICT和OMAT分别快170倍和690倍。与州内配置相比，ODICT和OMAT都比其州内版本慢4.5倍，这意味着它们分别需要12.78分钟和3.2分钟来完成一个操作（图5a）。

### 存储成本
最后，我们分析了DOD-DSSE的存储成本。在本研究中实验的最大数据集（即9 × 10^11个关键字-文件对），DOD-DSSE需要大约35 MB的客户端存储空间来存储所有必要的信息，例如对称密钥、Tf、Tw和全局计数器数组。即使资源受限的设备（如智能手机或平板电脑）也能轻松满足这一需求。表2显示了不同数据集大小下，DOD-DSSE及其同类产品在服务器端所需加密数据结构的总大小。DOD-DSSE所需的存储空间分别是传统DSSE和OMAT的8倍和2倍，但仍远小于使用字典的ODICT。考虑到DOD-DSSE在效率、存储成本和安全方面相对于传统DSSE和基于ORAM的方法的优势，我们的方案很可能是隐私关键云计算的理想安全-性能折衷DSSE方案。

## 相关工作
### 可搜索加密 (SE)
第一个可搜索加密由Song等人在[20]中提出，并随后出现了几个仅能搜索静态文件集合的方案（如[6, 8]）。Kamara等人提出了第一个DSSE方案[13]，随后出现了提供各种性能和安全特性的DSSE方案，如小泄漏[21, 26]、扩展查询类型的可扩展搜索[5, 4]和高效率[17]。

所有DSSE方案都会泄露数据结构访问模式，包括搜索模式和更新模式（见第1.1节）。Liu等人[15]指出，搜索模式会泄露大量关于查询关键字的信息。Bosch等人[2]开发了一种隐藏搜索模式的DSSE，但这需要每次搜索查询时重新加密并传输整个加密数据结构，因此似乎不实用。Islam等人[11]表明，如果攻击者事先知道一些关键字/文件对的信息，可以从访问模式中获取大量关于查询和关键字的信息。更新模式根据所使用的数据结构类型和其他安全-性能权衡泄露信息[26]：最高效的DSSE[13]实现的安全性最低。[12]和[4]中的方案实现了更高的隐私。最近，Yavuz和Guajardo[26]提出了一种泄漏较少信息的方案。

### 私有信息检索 (PIR)
私有信息检索 (PIR) 是从公共（未加密）数据库服务器检索数据项而不向服务器透露具体访问项的任务（如[7, 9]）。相比之下，在我们的设置中，DSSE数据结构是加密的（而不是公开的），并且对每个用户都是私有的。在这两种设置中，都有基本协议的分布式（多服务器）版本。

### 义务随机存取内存 (ORAM)
ORAM允许客户端对外包数据库进行任意查询而不泄露任何访问模式。因此，它可以用于DSSE中对加密数据结构的义务访问。早期的ORAM方案[18]非常昂贵，但近年来在ORAM构建方面取得了进展（如[23, 19, 24, 25, 22]）。最高效且流行的ORAM方案是Path ORAM[24]，它提供了最优带宽/处理成本。尽管有所改进，但正如最近的研究[21, 4, 16, 1]所示，ORAM在可搜索加密中并不实用，因为它引入了大量带宽开销和高延迟。

### 义务数据结构 (ODS)
ODS是专门为数据结构的义务访问设计的位置型ORAM（如Path ORAM）的具体实例[25]。类似于递归ORAM，ODS减少了客户端存储成本，但增加了通信轮数和带宽开销。因此，ODS也不适用于大型DSSE数据结构。

### 多云义务存储
Stefanov等人[22]提出了一种使用两个非串通服务器的ORAM方案，以减少客户端带宽成本。这种方法与我们的不同之处在于，两个服务器需要执行计算和彼此通信。我们只将服务器用作基本存储单元，因此它们只需要具备传输和接收请求数据的功能。

## 结论
本文提出了一种新的针对可搜索加密目的的加密数据结构上的义务访问方案，称为DOD-DSSE。DOD-DSSE同时实现了高安全性和实用的加密搜索/更新操作。通过保证查询不可链接，DOD-DSSE封堵了来自数据结构访问模式的关键信息泄露，因此提供了比传统DSSE方案更高的安全性。同时，DOD-DSSE在加密数据结构上的搜索/更新操作速度比使用基于ORAM的技术（如ODS与Path ORAM）快两个数量级。这些特性使DOD-DSSE成为隐私关键云计算应用中理想的、实用的可搜索加密替代方案。

## 致谢
感谢Gabriel Hackebeil、Daniel Lin以及匿名审稿人提供的宝贵意见和建议，帮助提高了论文的质量。

## 参考文献
[此处省略具体的参考文献列表]

---

希望以上优化后的文本能够更加清晰、连贯和专业。如果有任何进一步的需求或修改，请告诉我！