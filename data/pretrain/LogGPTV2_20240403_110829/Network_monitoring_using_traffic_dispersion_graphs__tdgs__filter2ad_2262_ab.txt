2006-03-03/13:00
2004-06-01/17:30
2003-01-15/10:00
tracer.csl.sony.co.jp
www.nlanr.net
www.caida.org
Duration Unique IPs Unique Dst. Port Numbers
TCP=62,463 UDP=64,727
TCP=65,536 UDP=63,560
TCP=65,536 UDP=62,369
1,041,622
6,520,862
3,463,366
2 h
1 h
1 h
5-tuple Flows Mbps(Kpkt/s)
4,670,259
23,623,601
22,109,673
31.0(9.7)
1,726.2(226.6)
590.1(128.1)
Table 1: Our set of publicly available backbone traces from WIDE, CAIDA (OC48) and the Abilene Network (ABIL).
used in this paper (Table 1) are captured on a single bidi-
rectional link and hence reveal only the node interactions
that cross the monitoring point. If TDGs are implemented
on a ﬁrewall or router, they will most likely see exactly
that. Therefore, the analysis of TDGs derived from one
point of observation is probably appropriate when consid-
ering practical deployment. Clearly, the TDGs formed by
traces taken at a single point are inherently bipartite. We
realize, of course, that observing all the network interac-
tions, say within an enterprise network, would provide an
even more complete view of the network.
TDG Visualization: Traditionally, visualization of traf-
ﬁc in monitoring tools has largely been limited to visualizing
measures of traﬃc volumes on a per ﬂow basis. By contrast,
we show that TDGs lend themselves to simple graphical vi-
sualizations of interaction patterns. For example, the graphs
in Fig. 1 show a simple set of TDGs, where we ﬁlter the
edges for distinct Port Numbers. The observation intervals
for these graphs were chosen so as to capture good visual
details for each TDG. Studying these TDGs (Fig. 1), we
can quickly reach the following conclusions, which we have
corroborated with a number of similar visualizations:
(i) TDGs are not a single family of graphs. We can
see that TDGs have signiﬁcant visual and structural diﬀer-
ences, which we quantify with graph metrics in Table 2. This
characteristic is what gives TDGs descriptive power, as we
discuss later in more detail.
(ii) TDGs capture many interesting patterns of node
interactions. We can identify several distinctive structures
and patterns in TDGs, which are indicative of the behavior
of diﬀerent applications.
Node degrees - The degrees of various nodes and their con-
nectivity in a TDG helps us in visually determining the type
of relationship between the nodes.
In general, the TDGs
corresponding to protocols with a prevalence of client-server
interactions, such as DNS (Fig. 1(b)) and HTTP (Fig. 1(a)),
are dominated by a few high degree nodes whereas the TDG
of the popular peer-to-peer application WinMX has many
similar degree nodes (Fig. 1(c)).
Node roles - In many TDGs, the role of a node can be
inferred from the direction of its edges (not easily distin-
guishable at this visualization scale). For example, Fig. 1(a)
presents an HTTP TDG. This makes it easy to spot Web
servers for example, since they are “pointed to” by edges
(non zero in-degree). Also, most hosts have either zero in-
degree or zero out-degree, indicating that they act either
solely as a server or solely as a client. Interestingly, how-
ever, there are a few nodes with both non-zero in-degree
and out-degree, which can correspond to HTTP proxies or
Web caching systems.
Node chains - Long undirected chains of nodes are very
common in TDGs of peer-to-peer applications like WinMX
shown in Fig. 1(c) and are mostly non-existent in the TDGs
of other applications. This shows that a node u can be linked
to node v via a signiﬁcant number of hops (intermediate IP
hosts).
Node communities and their sizes - There are many dis-
joint components in each of the TDGs. This is in contrast
to many other types of graphs such as the Internet topology
or the web-page graph [10]. Also, as we will see later on, the
number of connected components and the size of the largest
component varies a lot across diﬀerent TDGs. For example,
note the diﬀerences in the distribution of the sizes of vari-
ous components in the HTTP TDG which has many small
subgraphs.
Discussion: Although our goal here is to visually examine
the various properties of TDGs, good visualization methods
have their own value.
In fact, eﬀective visualization and
human monitoring can often be a more viable alternative
to complicated automated methods for anomaly detection.
While visualization is useful by itself, if TDGs are to be
used for application monitoring, it is important to translate
visual intuition into quantitative measures.
4. QUANTIFYING TDG PROPERTIES
In this section, we present a series of fundamental graph
metrics computed over real-traﬃc TDGs. A set of experi-
mental results is summarized in Table 2. Graphs are calcu-
lated over 12 consecutive, disjoint, 300-second-long observa-
TDG
Nodes
Edges
OC48-HTTP
OC48-SMTP
OC48-DNS
OC48-WinMX
ABIL-HTTP
ABIL-SMTP
ABIL-DNS
ABIL-Blubster
WIDE-HTTP
WIDE-SMTP
WIDE-DNS
WIDE-NetBIOS
109,090(1,432)
138,301(874)
6,913(76)
22,025(384)
8,890(225)
30,308(3204)
7,191(162)
21,307(428)
1,640(85)
9,799(146)
52,126(1109)
33,593(599)
30,196(3,168)
8,512(312)
91,851(4,987)
16,106(506)
10,922(10,512)
12,590(10,675)
2,242(61)
9,830(321)
3,486(887)
3,061(203)
18,799(613)
3,475(892)
Avg. Degree
2.536(0.023)
2.835(0.027)
4.733(0.039)
7.560(0.171)
1.993(0.014)
2.367(0.049)
8.619(0.366)
19.667(0.768)
2.389(0.102)
2.732(0.148)
3.825(0.026)
1.993(0.028)
InO(%)
0.09(0.01)
3.41(0.21)
11.00(0.21)
28.68(0.56)
0.48(0.10)
7.03(0.43)
24.12(2.13)
52.96(4.08)
0.22(0.08)
4.52(0.49)
6.99(0.24)
0.02(0.04)
OnlyIn(%)
40.76(1.49)
45.70(0.87)
36.43(0.39)
35.39(1.17)
76.79(2.49)
56.02(1.07)
24.62(1.58)
41.37(2.82)
71.96(7.96)
55.31(1.40)
40.95(0.55)
97.82(0.55)
MDR
0.070(0.002)
0.051(0.002)
0.085(0.004)
0.035(0.012)
0.082(0.033)
0.026(0.007)
0.101(0.002)
0.218(0.024)
0.155(0.230)
0.152(0.036)
0.432(0.006)
0.081(0.023)
GCC(%)
61.24(2.19)
79.92(0.96)
97.99(0.23)
98.99(0.16)
36.08(9.88)
79.58(1.52)
97.53(0.18)
99.49(0.01)
57.46(13.88)
91.04(1.71)
98.85(0.20)
9.74(2.76)
MAX Depth
2(0)
2.9(0.57)
3.5(0.53)
3.9(0.57)
2.2(0.42)
3.1(0.32)
3.8(0.63)
4.3(0.48)
2(0)
2.4(0.5)
2.3(0.7)
1.1(0.3)
Table 2: Measured features (averages) for TDGs generated within a 300 sec time window. Values in parenthesis provide the standard deviation
for the measured quantity after generating each TDG twelve times; each for every 300 seconds-long disjoint interval of an one-hour-long traces
(12x300sec=1hour).Info: Blubster(P2P) TDG: UDP Port 41170, WinMX(P2P) TDG: UDP Port 6257.
(a) HTTP Vs eDonkey
(b) NetBIOS Vs SMTP
(c) DNS Vs WinMX
Figure 2: Empirical Complementary Cumulative Distribution Functions (CCDF), P (X > x), of the degrees of various TDGs from trace
OC48. Stability of measured distributions, across disjoint intervals (one curve for every 300 sec), is shown by the multiple overlapping curves.
of a dominant node in the graph e.g., a busy server. As
shown in Table 2, DNS always has a very high degree node
indicating the presence of a dominant DNS server. However,
high MDR can also reveal the existence of malicious activ-
ity. For example, in the HTTP TDG of the WIDE backbone
trace, the relatively high MDR is due to the presence of ma-
licious heavy scanning activity in the trace.
Directionality: This metric captures the percentage of
nodes in the graph that have: (a) only in-degree (sinks),
(b) only out-degree (sources), or (c) both in- and out-degree
(InO). Nodes with InO are both initiators and “receptors” of
communications, and hence act both as clients and servers.
For example, in the OC48 trace, we see that HTTP has
practically zero percent of such nodes (pure client server
application), while the P2P protocols WinMX (UDP Port
6257) and Blubster (UDP Port 41170) have 28% and 53%,
respectively, of nodes with “dual” role. The importance of di-
rectionality is also shown for the NetBIOS (UDP Port 137)
where we have address-space scan activity.
In this TDG,
there is a large amount of nodes with only in-degree (IP
address being scanned). As we can see from Table 2, this
behavior is unique for NetBIOS.
Size of Giant Connected Component (GCC): We use