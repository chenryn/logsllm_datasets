  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: dubbo2.7.x GenericInvoke dubbo2.5.x
  * Operating System version: all
  * Java version: 1.8/1.7
java serialization
### Steps to reproduce this issue
Too simple , we can make any exception
In this code
       if (result.hasException()
                            && !(result.getException() instanceof GenericException)) {
                        return new RpcResult(new GenericException(result.getException()));
                    }
We wrap all exceptions to GenericException.  
But dubbo 2.7.x rename package to apache, so to make a new class like
    @Deprecated
    public class GenericException extends org.apache.dubbo.rpc.service.GenericException {
        public GenericException() {
        }
        public GenericException(String exceptionClass, String exceptionMessage) {
            super(exceptionClass, exceptionMessage);
        }
        public GenericException(Throwable cause) {
            super(cause);
        }
    }
No serialVersionUID is provided!
Pls. provide [GitHub address] to reproduce this issue.
### Expected Result
GenericException can be handled by consumer!
### Actual Result
What actually happens?
If there is an exception, please attach the exception trace:
    Caused by: java.util.concurrent.ExecutionException: org.apache.dubbo.remoting.RemotingException: java.io.InvalidClassException: com.alibaba.dubbo.rpc.service.GenericException; local class incompatible: stream classdesc serialVersionUID = -1182299763306599962, local class serialVersionUID = -9195665492488780691
    java.io.InvalidClassException: com.alibaba.dubbo.rpc.service.GenericException; local class incompatible: stream classdesc serialVersionUID = -1182299763306599962, local class serialVersionUID = -9195665492488780691
            at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)
            at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1843)
            at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)
            at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2000)
            at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)
            at java.io.ObjectInputStream.readObject(ObjectInputStream.java:422)
            at org.apache.dubbo.common.serialize.java.JavaObjectInput.readObject(JavaObjectInput.java:75)
            at org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.handleException(DecodeableRpcResult.java:144)
            at org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:86)
            at org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult.decode(DecodeableRpcResult.java:112)
            at org.apache.dubbo.rpc.protocol.dubbo.DubboCodec.decodeBody(DubboCodec.java:92)
            at org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:122)
            at org.apache.dubbo.remoting.exchange.codec.ExchangeCodec.decode(ExchangeCodec.java:82)
            at org.apache.dubbo.rpc.protocol.dubbo.DubboCountCodec.decode(DubboCountCodec.java:48)
            at org.apache.dubbo.remoting.transport.netty4.NettyCodecAdapter$InternalDecoder.decode(NettyCodecAdapter.java:90)
            at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)
            at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:441)
            at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)
            at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
            at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
            at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)
            at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)
            at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)
            at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)
            at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)
            at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
            at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:682)
            at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:617)
            at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:534)
            at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
            at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:906)
            at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
            at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
            at java.lang.Thread.run(Thread.java:748)