### III. Design Considerations

#### A. Ideal File Sharing System
In this section, we first outline the characteristics of an ideal file sharing system to highlight the desired features, introduce necessary notation, and define a formal access control model. We then describe the attacker model, which helps us deduce a set of functional, performance, and security objectives. Finally, we review related work to demonstrate that no existing solution fully meets these objectives.

1. **System Overview:**
   - The file system owner (FSO) manages multiple users (U) who wish to share files through a cloud-hosted file sharing system.
   - The FSO provides an authentication service, issuing authentication tokens with identity information to all users. For simplicity, we use a certificate authority (CA) as the authentication service and certificates as the authentication tokens.
   - Users store these tokens and use them to establish a secure channel with an enclave running at the cloud provider. This channel is used for various file and directory operations without requiring special hardware.
   - Operations include: creating, updating, moving, downloading, and removing files; creating, listing, moving, and removing directories; setting permissions for individual users or groups; creating and managing groups; and changing group memberships.
   - Authentication and authorization are separated, with authorization based on the identity information in the token.

2. **Formal Access Control Model:**
   - **Users (U):** Set of individual users.
   - **Groups (G):** Set of individual groups, with each user having a default group \( g_u \).
   - **Permissions (P):** Set of individual permissions \( p \in \{ \text{read}, \text{write}, \text{deny} \} \).
   - **Files (FC, FD):** Sets of stored content files and directory files, respectively.
   - **File System (FS):** Union of content and directory files.
   - **User-Group Relationship (rG):** \( (u, g) \in rG \) indicates user \( u \) is a member of group \( g \).
   - **Permission-Group-File Relationship (rP):** \( (p, g, f) \in rP \) indicates group \( g \) has permission \( p \) for file \( f \).
   - **Inheritance (rI):** \( f \in rI \) indicates file \( f \) inherits permissions from its parent.
   - **File Ownership (rFO):** \( (g, f) \in rFO \) indicates group \( g \) owns file \( f \).
   - **Group Ownership (rGO):** \( (g1, g2) \in rGO \) indicates group \( g1 \) owns group \( g2 \).

3. **Expected Features:**
   1. **Immediate Revocation:** Permission or membership updates, especially revocations, are enforced instantly without re-encrypting files.
   2. **Constant Ciphertexts:** Each file has a constant number of ciphertexts, independent of permissions and group memberships.
   3. **Confidentiality and Integrity:** Protection of content files, file system structure, permissions, existing groups, and group memberships.
   4. **Storage Space Reduction:** Deduplication of files and use of the same encrypted files for different groups.
   5. **Rollback Protection:** Prevention of rollback attacks on individual files and the entire file system.

#### B. Attacker Model
- **Trusted CA:** The CA securely creates and provisions certificates for users. All users trust the CA's public key.
- **Attacker Capabilities:** An attacker controlling multiple users should only have the union of permissions of the controlled users.
- **Cloud Provider Threats:** The cloud provider is assumed to be malicious, capable of monitoring and altering data, rolling back the file system, and sending arbitrary requests to the enclave.
- **TEE Protection:** Only the enclave data and code are protected by a TEE and are not accessible to the attacker. The code contains a hard-coded copy of the CA’s public key.
- **Side-Channel Attacks:** While SGX is vulnerable to side-channel attacks, mitigations and detections are orthogonal to our research and thus not considered further.
- **Out-of-Scope Threats:** Hardware attacks and Denial of Service (DoS) are out of scope.

#### C. Design Objectives
Based on the ideal file sharing system and the attacker model, Table II outlines the functional, performance, and security objectives for a secure and flexible file sharing system.

#### D. Related Work
- **TEE-Based Key-Value Stores:** These systems use enclaves for authentication, secure data transmission, and data confidentiality and integrity. However, they do not support data sharing and dynamic access control.
- **Cryptographic Access Control Mechanisms:**
  - **Hybrid Encryption (HE):** Files are encrypted with a unique symmetric key, and the key is encrypted with the public keys of authorized users.
  - **Identity-Based Encryption (IBE):** Uses arbitrary strings as public keys.
  - **Attribute-Based Encryption (ABE):** Enables fine-grained access control based on attributes.
  - **Broadcast Encryption (BE):** Allows a broadcaster to send messages to a subset of users.
  - **Identity-Based Broadcast Encryption (IBBE):** Combines IBE and BE, allowing encryption under a public key for receivers identified by arbitrary strings.
- **File Sharing Systems:**
  - **Cryptographically Protected Systems:** Use HE, IBE, ABE, BE, or IBBE, but often fail to meet immediate revocation and constant ciphertext requirements.
  - **TEE-Supported Systems:** Some use cryptographic mechanisms but also face challenges in meeting all objectives.
- **Comparison:** Table III classifies SeGShare and related work based on the objectives defined in Table II.

### Tables

#### Table II: Expected Functional (Fx), Performance (Px), and Security Objectives (Sx)

| Objective | Description |
|-----------|-------------|
| F1        | File sharing with individual users / groups |
| F2        | Dynamic permissions / group memberships |
| F3        | Users set permissions |
| F4        | Separate read and write permissions |
| F5        | Users (and administrators) do not need special hardware |
| F6        | Non-interactive permission / membership updates |
| F7        | Multiple file owners / group owners |
| F8        | Permissions can be inherited from parent directory |
| F9        | Deduplication of encrypted files |
| P1        | Constant client storage |
| P2        | Group-based permission definition |
| P3        | File permissions / group membership revocations do not require re-encryption of content or directory files |
| P4        | Constant number of ciphertexts for content and directory files |
| P5        | Different groups can access the same encrypted file |
| S1        | Protect confidentiality of content files / file system structure / permissions / existing groups / group memberships |
| S2        | Protect integrity of content files / file system structure / permissions / existing groups / group memberships |
| S3        | End-to-end protection of user files |
| S4        | Immediate revocation |
| S5        | Protection against rollback of individual files / whole file system |

#### Table III: Classification of SeGShare and Related Work Based on Objectives Defined in Table II

| System | Based On | F1 | F2 | F3 | F4 | F5 | F6 | F7 | F8 | F9 | F10 | P1 | P2 | P3 | P4 | P5 | S1 | S2 | S3 | S4 | S5 |
|--------|----------|----|----|----|----|----|----|----|----|----|-----|----|----|----|----|----|----|----|----|----|----|
| [10]   | IBE, ABE |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [19]   | HE       |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [16]   | BE       |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [23]   | ABE      |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [20]   | HE       |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [22]   | HE       |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [24]   | IBBE     |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [25]   | IBBE     |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [26]   | NEXUS    |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| [27]   | Pesos    |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✗  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |
| SeGShare | None    |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |  ✓  |

This revised text aims to provide a clearer, more structured, and professional presentation of the design considerations, including the ideal file sharing system, attacker model, design objectives, and related work.