title:Generic Construction of Publicly Verifiable Predicate Encryption
author:Chuting Tan and
Zoe Lin Jiang and
Xuan Wang and
Siu-Ming Yiu and
Jun-bin Fang and
Jin Li and
Yabin Jin and
Jiajun Huang
Generic Construction of Publicly Veriﬁable Predicate
Encryption
Chuting Tan
Harbin Institute of Technology
Shenzhen Graduate School
Shenzhen 518055, China
PI:EMAIL
∗
Zoe L.jiang
Harbin Institute of Technology
Shenzhen Graduate School,
and Guangdong Provincial
Key Laboratory of High
Performance Computing
Shenzhen 518055, China
PI:EMAIL
Xuan Wang
†
Harbin Institute of Technology
Shenzhen Graduate School,
Public Service Platform of
Mobile Internet Application
Security Industry
Shenzhen 518055, China
PI:EMAIL
S.M. Yiu
The University of Hong Kong
HKSAR, China
PI:EMAIL
Junbin Fang
Jinan University
Guangzhou, 510632, China
PI:EMAIL
Jin Li
Guangzhou University
Guangzhou, 510006, China
PI:EMAIL
Yabin Jin
Harbin Institute of Technology
Shenzhen Graduate School
Shenzhen 518055, China
PI:EMAIL
Jiajun Huang
Harbin Institute of Technology
Shenzhen Graduate School
Shenzhen 518055, China
PI:EMAIL
ABSTRACT
There is an increasing trend for data owners to store their
data in a third-party cloud server and buy the service from
the cloud server to provide information to other users. To
ensure conﬁdentiality, the data is usually encrypted. There-
fore, a searching scheme for encrypted data (without de-
crypting the data) with privacy preserving property is of
paramount importance. Predicate encryption (PE) is one
of the attractive solutions due to its attribute-hiding merit.
Also, as the cloud service provider is not always trusted,
verifying the searched results is also crucial. In this paper,
we ﬁrst propose a generic construction for a Publicly Ver-
iﬁable Predicate Encryption (PVPE) scheme which allows
users to verify the results returned by the server. We then
prove the security of the PVPE scheme by reducing it to
the security of PE. To make the scheme more practical, we
further improve the PVPE scheme to reduce both the com-
munication and computation overheads with a trade-oﬀ of
having a small probability that the veriﬁcation may fail.
∗joint ﬁrst author
†Corresponding author
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’16, May 30-June 03, 2016, Xi’an, China
c(cid:13) 2016 ACM. ISBN 978-1-4503-4233-9/16/05. . . $15.00
DOI: http://dx.doi.org/10.1145/2897845.2897919
Keywords
predicate encryption; publicly veriﬁable computation; cloud
computation
1.
INTRODUCTION
Advances in networking technology and an increase in the
need for computing resources have prompted many organiza-
tions to outsource their storage and computing needs. This
new economic and computing model is commonly achievable
by cloud computing [16]. With the advent of cloud comput-
ing, data owners are motivated to outsource their complex
data management systems from local sites to the commer-
cial public cloud for greater ﬂexibility and economic sav-
ings. However to protect data privacy, sensitive data has to
be encrypted before outsourcing, which obsoletes traditional
data utilization based on plaintext keyword search. Thus,
enabling an encrypted cloud data search service (without
decrypting the data) is of paramount importance.
The notion of Predicate Encryption (PE) was explicitly
presented by Katz, etc. [17] as a generalized (ﬁne-grained)
notion of encryption that covers Identity-Based Encryption
(IBE) [8], Hidden-Vector Encryption (HVE) [9] and Attribute-
Based Encryption (ABE) [14, 5]. The characteristics of PE
include attribute-hiding and supporting multiple search cri-
teria which are suitable for searching encrypted data.
Informally, a secret key skf in a predicate encryption
scheme corresponds to a predicate f ∈ F. A sender as-
sociates a ciphertext c ∈ C with an attribute set I ∈ Σ; the
ciphertext c associated with the attribute set I can be de-
crypted by the secret key skf corresponding to the predicate
f if and only if f (I) = 1, meaning that I satisﬁes f . In ad-
dition, a security notion for PE, attribute-hiding, which is
stronger than the basic security requirement (payload hid-
889ing) was deﬁned in [17]. Roughly speaking, attribute hiding
requires that the ciphertext conceals the associated attribute
as well as the plaintext, while payload hiding only requires
that the ciphertext conceals the plaintext.
Traditional PE assumes that the cloud server is trustable,
which may not be valid from a practical point of view. Thus,
in this paper, we provide veriﬁability for PE which can verify
the searched results returned by the cloud server.
1.1 Our Result
In this paper, we ﬁrst propose a generic construction of
a Publicly Veriﬁable Predicate Encryption (PVPE) scheme.
In the proposed scheme, all users could verify whether or
not the cloud has faithfully executed the searching and re-
turned the correct results. To decrease both communication
and computation overheads for data owner, we further pro-
pose an improved PVPE which can achieve the properties
discussed below with high probability.
In the proposed scheme, two randomly-generated plain-
texts m0 and m1 will be encrypted using any PE for veriﬁ-
cation: one encryption for ciphertext c0 corresponding with
I and the other for ciphertext c1 corresponding to I. Ob-
viously, only one of the two encrypted ciphertexts could be
decrypted successfully. If both ciphertexts can be decrypted
successfully or the decryption fails for both, it means that
the cloud server is cheating. Based on this concept, we pro-
pose two schemes to achieve the features to verify the cor-
rectness, integrity and creditability of the results from the
cloud server.
Integrity Verification.
Correctness Verification. It means whether the re-
turned results satisfy the predicate. To achieve it, data
owner chooses random m, then encrypts m to generate ci-
phertext C using the predicate encryption scheme and pub-
lishes a veriﬁcation key vk = g(m) (g is a one-way function).
It means that whether all
results satisfying the predicate are returned by the cloud
server. There may be a situation that the cloud returns
only part of results without the awareness of users. For in-
tegrity veriﬁcation, the cloud server is required to return all
g(m) for veriﬁcation. Considering the eﬃciency, we use one
bloom ﬁlter for the veriﬁable keys set of f (I) = 0, and the
other for that of f (I) = 1.
Creditability Verification. It means that if the cloud
system returns no matched result, it may be true if f (I) =
0. However, there may be the case that the cloud refuses
to oﬀer results even if f (I) = 1. Therefore, user requires
to verify that there is indeed no satisﬁed results with high
probability.
1.2 Related Work
Predicate encryption. In 2000, Song et al.
[22] pro-
posed the ﬁrst encryption algorithm that allows keyword
searching on encrypted data. The ﬁrst applicable query on
encrypted data on server side was proposed in 2002 [15].
Thereafter, many signiﬁcant advances [15, 6, 10, 1] of pro-
cessing queries on encrypted data are put forward by re-
searchers. The public keyword search (PEKS) [7] was pro-
posed in 2004, but it only can process equality test [2, 6]. A
variety of excellent schemes about query on encrypted data
are investigated in succession.
In 2007, Shi [21] proposed how to implement the predi-
cate encryption in the interval query and made decryption
interval time complexity reduced successfully by a binary
tree.
In the same year, Boneh and Waters [9] proposed
the Hide-Vector encryption in predicate encryption schemes
that supports the conjunctive, subsets, and range queries.
Katz et al. [17] constructed the predicate encryption scheme
that supported disjunctions, polynomial equations, and in-
ner products. After that, Okamoto and Takashima proposed
an adaptively-secure encryption scheme that supports inner
products. In 2011, Zhu et al. [23] extended PEKS to support
predicate privacy that is based on the idea of randomization,
then they identiﬁed a new type of attacks, named as statis-
tical guessing attacks, to ﬁght PEKS. So they introduced a
new concept called statistics privacy. It makes the balance
between statistics privacy and storage eﬃciency.
In 2014,
Gorbunov et al. [13] constructed a leveled predicate encryp-
tion scheme for all circuits. It is based on the hardness of
the sub-exponential learning with errors (LWE) problem.
The traditional predicate encryption mentioned above does
not have the veriﬁcation function, and the eﬃciency is not
high. We now extend the traditional predicate encryption
algorithm to support public veriﬁcation on the searching re-
sults.
Verifiable Computation. Publicly veriﬁability enables
data owner to generate a public veriﬁcation key vk for any-
one to check the validity of the output from the cloud server.
In 1995, Kilian [18] ﬁrst introduced the concept of veriﬁable
computation. Until 2010, Gennaro et al. [12] formalized the
notion of Veriﬁable Computation. They presented a protocol
on the non-interactive computing that enables a computa-
tionally weak client to outsource the computation to more
powerful but untrusted server. In 2011, Benabbas et al. [4]
presented the ﬁrst practical veriﬁable computation scheme
for high degree polynomial functions by studying the prob-
lem of computing on large datasets that are stored on an
untrusted server.
Parno et al. [3] established an important relation between
veriﬁable computation (VC) and attribute-based encryption
(ABE) in 2012. They showed how to construct a VC scheme
with public delegation and public veriﬁability from any ABE
scheme. In 2013, Li et al. [19] focused on the public veriﬁ-
cation model, the computation result can be veriﬁed by any
other client using the public veriﬁcation key in the model.
In the same year, Parno et al.
[20] proposed a veriﬁcation
scheme for outsourced computation of polynomial functions,
which ensures the privacy of outsourcing data.
In 2014,
Fiore et al. [11] studied the problem on veriﬁable delegation
of computation on encrypted data, and supported eﬃciently
veriﬁable computation on encrypted data.
1.3 Paper Organization
Section 2 reviews the deﬁnes of predicate encryption and
bloom ﬁlter. Section 3 presents the generic construction of
PVPE and deduces its security to the security of PE. Section
4 proposes an improved PVPE to decrease communication
and computation overhead using bloom ﬁlters. Section 5