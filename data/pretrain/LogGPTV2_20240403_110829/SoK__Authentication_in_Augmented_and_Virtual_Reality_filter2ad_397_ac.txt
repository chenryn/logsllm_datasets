4.8
4.6
4.4
4.3
4.2
4
3.9
4.7
4.3
4
4.2
3.8
3.7
2.9
2.6
3
2.9
g
n
i
t
a
r
e
g
a
r
e
v
a
5
4
3
2
1
pwd
pattern
paired acct.
paired dev.
iris
Fig. 2. Average user ratings of authentication methods on scale 1 to 5: 1=“Not
secure at all” or “Very hard to use”; 5=“Very secure” or “Very easy to use”.
Users only ranked methods they have used before on the speciﬁc type of
device. No participants had used iris on VR.
On the other hand, the ten users who believe AR/VR are less
vulnerable note that the screen on the head-mounted device
is hidden from others, meaning traditional shoulder surﬁng
attacks are not feasible. There is “no risk of someone looking
over your shoulder to see what you are typing,” as P020 (M,25-
34) notes. Moreover, some VR users are less worried about
shoulder surﬁng because they don’t think VR devices will be
used in public. Five participants comment that authentication
on their devices is safe because they use the device only at
home and/or alone. P011 (M,25-34) describes,
“[S]omeone could theoretically track your controller po-
sition to infer your password. But I use VR in my home
alone, so I am not any more concerned about password
entry than I would be for any other computer application.”
Users also have privacy concerns about authenticating on
AR and VR devices. Though users believe iris scan to be
the most usable authentication mechanism on AR, three users
indicate concerns with the collection of their biometric data.
Further, six users are worried about providing private account
information and other private data to companies with poor
reputations. For example, P139 vents about paired accounts:
“[T]he lack of control over my own data is frustrating.”
Perceived usability. We summarize users’ most prevalent
usability concerns about authentication on AR/VR devices.
Virtual keyboard woes. While a password is the most
popular authentication mechanism on both AR and VR de-
vices, it also receives the most negative feedback from our
participants (Fig. 2). For usability, the mean score (out of ﬁve)
for passwords is 2.6 for AR (SD = 1.42) and 2.9 for VR
(SD = 1.26). The root of the problem for many users is the
virtual keyboard. Fifty-nine responses indicate that using the
virtual keyboard is challenging and takes too much physical
eﬀort. To type on a virtual keyboard in VR, users typically
need to use the virtual laser extended from their controllers
to point to the keys and press a button on the controller
to select the key. “It usually requires slowly going through
each character on a rendered keyboard and it is just zero
fun” (P057: M,25-34). The typing experience in AR is even
worse since it requires gesture interaction. To top it oﬀ, three
users (P001, P016, P048) note that AR and VR have minimal
support for password managers, meaning the user must type
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:50 UTC from IEEE Xplore.  Restrictions apply. 
5271
their password every time they authenticate.
Accessibility issues. Four participants express accessibility
concerns with the virtual keyboard: “Typing on a virtual
keyboard is tolerable for the average user, but can be outright
impossible for those with physical disabilities” (P109: gender
not disclosed (ND), 18-24). Moreover, P078 (M,18-24) and
P021 (M,18-24) speciﬁcally have diﬃculties typing with shaky
hands. P021 explains his workaround: “Pointing and clicking
at a keyboard without stable hands can make it diﬃcult. I
have my own work around involving stepping back, resetting
my POV, and stepping closer to the keyboard.” These extra
steps for adaptation add more eﬀort to an already cumber-
some process, and may even prevent some users from using
AR/VR altogether. As P139 (M,25-34) explains, “Sometimes
authentication itself feels like a barrier to entry.”
Perceived usability of non-password methods. Iris scan
holds the highest usability scores for AR, while unlock pattern
is the highest for VR (Fig. 2). AR users prefer to use a
paired device—e.g., by scanning a QR code on their phone—
over an unlock pattern for both usability and security. Paired
accounts such as Facebook accounts have low usability scores
(mean = 3.7, SD = 1.25) on AR devices; this is because paired
accounts often require a user to enter a password associated
with that account using the virtual keyboard. In contrast, users
appreciate that the other methods require little to no user eﬀort.
As P054 (M,35-44) notes, using iris scan to authenticate is
“easy, keeping your eyes open...” Moreover, users appreciate
that paired accounts (3) or paired devices (1) require infrequent
authentication. For example, after setting up a paired account,
“I’m already logged into those accounts, so I don’t have to
type my password in again” (P050: ND, 35-44).
IV. Deriving Properties for AR/VR Authentication Methods
Our user survey provided key insights into users’ and devel-
opers’ experiences with AR and VR authentication. Here, we
distill this information into a set of desired properties for AR
and VR authentication mechanisms. In Sections V and VI, we
leverage these properties to evaluate the AR/VR authentication
methods used in practice and proposed in literature.
least
We combed through the responses, codes, and themes that
resulted from our user survey to identify a list of properties
desired by users and developers. We included any concern
or topic that was noted by at
two respondents. We
took a fairly generous approach to including properties; for
example, because the code “Not accessible” appears in four
responses, our evaluation considers accessibility for a range of
disabilities. Through repeated discussion amongst the authors,
we deﬁned the requirements for a method to oﬀer each desired
property, as well as (in some cases) requirements for a method
to quasi-oﬀer the property.
A. Properties for Evaluation
In all, we identiﬁed twenty properties of interest to users and
developers and organized them into four categories: deploy-
ment, usability, accessibility, and security & privacy. Where
applicable, we took inspiration from Bonneau et al. [16] in
naming and organizing our desired properties. Appendix D
contains precise deﬁnitions of each property and outlines our
reasoning for including each property.
Deployability. Developers prefer authentication methods
that are OS-Supported and Platform-Agnostic, characteristics
which simplify the development experience. They also value
eﬃciency, which we code as Low-Power-Consumption. Addi-
tionally, users feel more secure using Mature methods (ones
that are well-tested and have a good security history).
Usability. Users mention several usability woes, usually
regarding the virtual keyboard. From this, we identiﬁed
that users value methods which have Infrequent-Errors and
are Eﬃcient-to-Use, Physically-Eﬀortless, Easy-to-Learn, and
Acceptable-in-Public. Multiple users mentioned how some
methods require a secondary device, indicating that whether a
method has Nothing-to-Carry is important to users. Finally, a
method should be Memorywise-Eﬀortless since several users
mentioned the ease or diﬃculty of remembering secrets.
Accessibility. These arose from the concerns of four users
(P021, P078, P109, P139). Though these users primarily
mentioned physical disabilities, we extended their general
concern for accessibility to cover ﬁve types of disabil-
ity: Accessible-Visual, Accessible-Hearing, Accessible-Speech,
Accessible-Mobility, and Accessible-Cognitive.
Security & privacy. Users worry that their passwords and
PINs are guessable, or that their actions could reveal a secret
to onlookers; thus, a method should be Resilient-to-Guessing
and Resilient-to-Physical-Observation. Since users mention
privacy concerns, particularly with iris scanning, it is best if a
method Protects-User-Privacy. Finally, many users feel more
secure if methods are Multi-Factor.
B. Properties Unique to AR/VR
Though all of these properties are valuable, some have
particular importance on AR and VR devices. Our user study
revealed ﬁve such properties. Importantly,
these properties
are not covered in Bonneau et al.’s seminal framework [16].
First, AR and VR devices are quite power-constrained—e.g.,
the HoloLens 2 has a battery life of just 2-3 hours [3].
Thus, a method must be Low-Power-Consumption, especially
when these devices are used away from home. Similarly,
as the future of personal devices, AR/VR will be used in
public places and interactions with the devices will be visible
to external observers. Thus, it is critical that methods are
Acceptable-in-Public or users will be inclined to use other
methods. For further deployability, it is crucial that AR and
VR authentication mechanisms are OS-Supported so devel-
opers use them in practice. Finally, AR and VR can take
advantage of myriad sensors for biometric authentication. This
means they have the unprecedented opportunity to use Multi-
Factor methods—as we show in Section VI, some prior work
has already taken this leap [55], [76], [81]. However, it is
also critical to consider whether these authentication methods
Protect-User-Privacy. Bonneau et al. discuss the possibility
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:50 UTC from IEEE Xplore.  Restrictions apply. 
6272
of combining methods, but do not consider methods that are
multi-factor by design; AR and VR should be held to a higher
standard and methods designed to be multi-factor should be
encouraged. The emergence of these new properties, and their
importance to an AR/VR context, validates our suspicion that
a framework speciﬁc to AR and VR is needed.
We note that our participants surface several of the same
properties as those in Bonneau et al.’s framework, indicating
that these properties are still useful in evaluating AR and
VR authentication methods. Importantly,
though, we must
interpret these properties from the perspective of AR and VR.
Consider the property Platform-Agnostic. Bonneau et al. focus
on whether methods are compatible with existing passwords;
for AR and VR, the emphasis should be on whether a method
can be used on other devices at all. This factor is important
to take into consideration given the unique opportunity for
biometric authentication on AR and VR. Similarly, Bonneau
et al. consider a method quasi-Nothing-to-Carry if it requires a
smartphone because the user likely carries a phone with them
at all times; since the community envisions AR/VR to be stan-
dalone devices, we must consider an AR/VR authentication
method that requires a smartphone as Something-to-Carry.
V. Authentication in Existing AR and VR Applications
We now explore the current state of AR and VR authentica-
tion mechanisms in practice—in particular, the authentication
mechanisms used in current HoloLens 2 and HTC Vive apps.
We ﬁrst identify which authentication methods are in use,
then evaluate these incumbent authentication methods using
the criteria we derived in Section IV. In Section VI, we use
this data as ground truth in our evaluation of recently-proposed
authentication mechanisms for AR and VR.
A. Evaluating Incumbent Authentication Methods
We analyzed apps on the HTC Vive (a VR device) and the
HoloLens 2 (an AR device) and evaluated the authentication
methods they use according to our properties from Section IV.
For each device, we ﬁrst reviewed the process of au-
thenticating to the device itself. We then investigated the
authentication mechanisms used in apps on these devices. On
each device, we conducted two rounds of review to ensure
good coverage of diﬀerent types of apps and authentication
methods available on the device. We ﬁrst focused on the most
popular apps available on the device by analyzing the top three
apps in every category of the device’s app store. For HTC Vive,
we used the top apps ranked by popularity on Viveport [9];
for HoloLens, we relied on the number of user ratings on the
Microsoft Store.
The ﬁrst round, as we will discuss, revealed that most
popular apps on these devices do not use authentication. Thus,
in our second round, we dug deeper into authentication-heavy
categories. For each device, we created a shortlist of app
categories that most frequently used authentication in the ﬁrst
round. For the HTC Vive, we randomly selected 8 apps in
each of these categories and analyzed them just as we did in
the ﬁrst round. For the HoloLens, we speciﬁcally looked at
HoloLens-native apps, since we hypothesized that apps made
for AR might leverage authentication methods better suited
for AR. For each of the authentication-heavy categories, we
analyzed every HoloLens-native application in that category.
We summarize the types of authentication we found in Fig. 3.
Evaluation. We evaluated each incumbent method using the
properties from Section IV. Two authors individually evalu-
ated every mechanism we identiﬁed, then discussed to come to
a consensus. Importantly, we focused on the implementation
of each incumbent method on AR/VR devices. For example,
using a password is not overwhelmingly error-prone on a
computer or mobile device, but our user study showed that
users experience frequent errors when entering a password on
AR or VR (due to diﬃculties with the virtual keyboard). Thus,
in our evaluation, passwords do not oﬀer Infrequent-Errors.
B. Authentication on HTC Vive
Device authentication. A user ﬁrst signs into their Steam
account on a PC with a username and password. Then, the
user launches SteamVR [7] on the PC to use the HTC Vive
headset. The headset then prompts the user to log into their
Viveport account on the PC using a username and password;
once they do so, they are granted access to their Viveport
library on both PC and headset and can start using apps.
App authentication. In round one, we analyzed three apps in
each of the twenty categories on Viveport. Since apps can have
multiple categories, this came out to thirty-six unique apps.
Only eight apps (22%) use authentication: six use a password
and two use a paired account (Fig. 3). Both apps which use a
paired account are connected to the user’s Viveport account,
which is already signed in when the user launches the app.
Our targeted analysis yielded similar results. In this round,
we focused on four categories that had at least one app with
authentication in round one or that we believed were likely to
use authentication: Business, Video, Productivity, and Social.
We randomly sampled eight apps from each category for a
total of twenty-one unique apps. In this round, 52% of apps
use authentication, a higher percentage than in the ﬁrst round.
However, the types of authentication we found are the same:
ﬁve apps use passwords, ﬁve use paired accounts, and one app
oﬀers both a password and a paired account. Viveport is the
only paired account oﬀered. It is usually automatically signed
in when the user starts the app, except for in one app [2],
where the user has to log into their Viveport account again on
the VR device after the app has launched.
C. Authentication on HoloLens 2
Device authentication. A user ﬁrst signs into their Microsoft
account on the headset using a username and password. To
do this, HoloLens projects a virtual keyboard in view of the
wearer, then the user moves their hand to “press” the virtual
keys and enter their credentials. Upon initial setup, the user
can set up iris scanning on the device; afterward, a user can
unlock the device by simply putting it on, looking forward,
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:50 UTC from IEEE Xplore.  Restrictions apply. 
7273
HTC Vive
HoloLens 2
Popular Targeted
21
11
36
8
Popular Targeted
45
37
76
22
Total
178
78
6
2
-
-
-
-
-
-
-