### 文本优化

**摘要：**

电子邮件相关的端口被屏蔽的频率是其他端口的两倍以上 [3]。Reis 等人使用基于 JavaScript 的“网页触发器”来检测 HTTP 传输的 HTML 文档中的修改 [20]。在访问其测试网站的约 50,000 个唯一 IP 地址中，大约有 0.1% 经历了内容修改。Nottingham 提供了一个针对 XMLHttpRequest 实现的缓存保真度测试 [18]，分析了多种缓存属性，包括 HTTP 头值、内容验证和新鲜度、缓存新鲜度以及变体处理。NetPolice [28] 通过多个终端点在同一 ISP 内传输应用层流量到相同 ISP 出口点的方式，测量了 18 家大型 ISP 对几种流行服务的流量差异化。他们发现对不同类型服务存在明显的优先待遇。最后，在 Netalyzr 发布之后，Huang 等人发布了一款智能手机网络测试工具，用于检测隐藏代理和服务封锁，该工具的测试方法受到了 Netalyzr 的启发 [13]。

**表 3: 前 20 家 ISP 检测到的策略**
| 国家 | 运营商 | 会话数 | 阻止（%） | SMTP | MSSQL | DNS 通配符 | 类型 | PPPoE（%） | 中等 |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| US | Comcast | 14,765 | 99 | 37 | 64 | www | 33 | Cable | 8 |
| US | RoadRunner | 6,321 | 99 | 64 | 84 | www | 55 | Cable | 21 |
| US | Verizon | 4,341 | 99 | 88 | 36 | all | 69 | DSL | 74 |
| US | SBC | 3,363 | 99 | 96 | 13 | all | 19 | DSL | 77 |
| DE | Deutsche Telekom | 2,694 | 99 | all | all | all | 80 | DSL | 22 |
| US | Cox Cable | 2,524 | 99 | all | all | all | 5 | Cable | 6 |
| US | Charter Comm. | 1,888 | 99 | all | all | all | 5 | Cable | 49 |
| US | Qwest | 1,502 | 99 | all | all | all | 74 | DSL | 69 |
| UK | BE Un Limited | 1,439 | 99 | all | all | all | 67 | DSL | 7 |
| US | BellSouth | 1,257 | 99 | all | all | all | 80 | DSL | 59 |
| ES | Telefonica | 1,206 | 99 | all | all | all | 5 | DSL | 5 |
| DE | Arcor | 1,206 | 99 | all | all | all | 79 | DSL | 79 |
| US | Shaw Cable | 1,198 | 99 | all | all | all | 10 | Cable | 10 |
| UK | British Telecom | 1,098 | 99 | all | all | all | 7 | DSL | 7 |
| DE | Alice DSL | 1,080 | 99 | all | all | all | 52 | DSL | 52 |
| IT | Telecom Italia | 1,075 | 99 | all | all | all | 76 | Fiber | 76 |
| UK | Virgin Media | 1,028 | 99 | all | all | all | 93 | Cable | 93 |
| CA | Rogers Cable | 994 | 99 | all | all | all | 95 | Cable | 95 |
| US | Optimum Online | 983 | 99 | all | all | all | 18 | Cable | 18 |
| US | Comcast Business | 847 | 99 | all | all | all | 59 | Cable | 59 |

注释：当超过 5% 的会话显示出口过滤时，我们将其标记为阻止。WIN 对应于 Windows 服务（TCP 135/139/445）。我们根据路径 MTU 为 1492 B 推断出 PPPoE。

**地址保真度：**

Casado 和 Freeman 研究了使用公共服务器所看到的客户端 IP 地址来识别客户端的可靠性 [4]。他们的基本方法与我们的方法有些相似，即使用主动的 Web 内容记录和测量各种连接属性，但在用户进行测量的过程方面存在显著差异。他们在几个网站上嵌入了一个 iframe“网页 bug”，导致数据收集范围较窄——用户必须偶然访问这些网站，并且不知道正在进行机会性测量。他们发现，60% 的观察到的客户端位于 NAT 后面，通常每个 NAT 转换不超过七个客户端，而 15% 的客户端通过 HTTP 代理到达，这些代理通常来自不同的地理区域。Maier 等人 [15] 发现 DHCP 基于地址重用的情况非常频繁，50% 的地址每天至少分配两次。

**未来工作：**

Netalyzr 的主要目标是为广泛的用户提供全面的网络功能测试套件。为此，我们正在增强测试报告，使其对非技术用户更加易读，并与德国、波兰、英国和美国的网站合作，将 Netalyzr 推广给更多样化的受众。

此外，我们正在开发一些额外的测试，预计将在不久的将来部署，包括一个命令行客户端以使 Netalyzr 可以包含在大型测试套件中，一个路径 MTU 跟踪路由以找到路径 MTU 故障的位置，对 NAT 提供的 DNS 代理进行高级 DNS 探测，以及一个 IPv6 测试套件，包括 IPv6 差分延迟、路径 MTU、跟踪路由和服务可达性。

**总结：**

Netalyzr 系统展示了开发一种基于浏览器的工具的可能性，该工具可以为最终用户的网络连接提供详细的诊断、发现和调试。运行 Netalyzr 小程序的访客进行了 130,000 次测量会话，涉及 99,000 个公共 IP 地址。Netalyzr 通过详细报告向个别用户揭示具体问题，使他们能够理解并可能解决这些问题，并为边缘网络行为的广泛纵向调查奠定了基础。一些系统性问题包括碎片化困难、路径 MTU 发现的不可靠性、DNSSEC 部署的限制、遗留网络块、接入设备的频繁过度缓冲、许多客户端的 DNS 性能差以及对 DNS 结果的故意操纵。我们认为这些结果对实现者和运营商具有重要意义，并已收到多家组织关于我们发现的具体询问。

Netalyzr 仍在积极使用中，我们旨在无限期地支持它，作为一个持续的服务，以阐明边缘网络的中立性、安全性和性能。

**致谢：**

我们衷心感谢 Netalyzr 用户使这项研究成为可能，并感谢我们的 Beta 测试人员提供了宝贵的评论和反馈。特别感谢 Mark Allman、Paul Barford、Scott Bradner、John Brzozowski、Randy Bush、Niels Bakker、Richard Clayton、Chris Cowart、Keith Dawson、Adrian Dimcev、Holger Dreger、Brandon Enright、Kevin Fall、Carrie Gates、Andrei Gurtov、Mark Handley、Theodore Hong、Kelly Kane、Matthew Kogan、Keith Medcalf、Thomas Narten、Michael Ross、Chris Switzer、Wooter Wijngaards 和 Richard Woundy。感谢 Amazon.com 支持我们在 EC2 上的部署。本研究得到了国家科学基金会的支持，资助项目编号为 NSF CNS-0722035、NSF-0433702 和 CNS-0905631，并获得了 Google 的额外支持。

**参考文献：**

[1] D. Ardelean, E. Blanton, and M. Martynov. Remote active queue management. In NOSSDAV ’08: Proceedings of the 18th International Workshop on Network and Operating Systems Support for Digital Audio and Video, pages 21–26, New York, NY, USA, 2008. ACM.

[2] J. Bennett, C. Partridge, and N. Shectman. Packet reordering is not pathological network behavior. IEEE/ACM Transactions on Networking (TON), 7:789–798, 1999.

[3] R. Beverly, S. Bauer, and A. Berger. The Internet’s Not a Big Truck: Toward Quantifying Network Neutrality. In Proc. PAM, 2007.

[4] M. Casado and M. Freedman. Peering through the Shroud: The Effect of Edge Opacity on IP-based Client Identification. In Proc. NSDI, 2007.

[5] Chad R. Dougherty. CERT Vulnerability Note VU 800113: Multiple DNS implementations vulnerable to cache poisoning, July 2008.

[6] What ports are blocked by Comcast High-Speed Internet? http://lite.help.comcast.net/content/faq/What−ports−are−blocked−by−Comcast−High−Speed−Internet.

[7] D. Dagon, M. Antonakakis, P. Vixie, T. Jinmei, and W. Lee. Increased DNS Forgery Resistance Through 0x20-bit Encoding. In Proc. CCS, 2008.

[8] M. Dischinger, A. Haeberlen, K. P. Gummadi, and S. Saroiu. Characterizing Residential Broadband Networks. In Proc. IMC, 2007.

[9] M. Dischinger, A. Mislove, A. Haeberlen, and K. Gummadi. Detecting BitTorrent Blocking. In Proc. IMC, 2008.

[10] R. Erzs and R. Bush. Clarifications to the DNS Specification. RFC 2181, IETF, July 1997.

[11] M. Fauenfelder. How to get rid of Vimax ads. http://boingboing.net/2009/01/16/how−to−get−rid−of−vi.html, January 2009.

[12] R. Giobbi. CERT Vulnerability Note VU 435052: Intercepting proxy servers may incorrectly rely on HTTP headers to make connections, February 2009.

[13] J. Huang, Q. Xu, B. Tiwana, and M. Mao. The UMich Smartphone 3G Test. http://www.eecs.umich.edu/3gtest/.

[14] C. Kent and J. Mogul. Fragmentation considered harmful. ACM SIGCOMM Computer Communication Review, 25(1):87, 1995.

[15] G. Maier, A. Feldmann, V. Paxson, and M. Allman. On dominant characteristics of residential broadband internet traffic. In Proc. IMC, 2009.

[16] M. Mathis and J. Heffner. Packetization Layer Path MTU Discovery. RFC 4821, IETF, March 2007.

[17] Mozilla. Effective TLD names. http://mxr.mozilla.org/mozilla−central/source/netwerk/dns/src/effective_tld_names.dat.

[18] M. Nottingham. XMLHttpRequest Caching Tests. http://www.mnot.net/javascript/xmlhttprequest/cache.html, December 2008.

[19] V. Paxson. An analysis of using reflectors for distributed denial-of-service attacks. ACM SIGCOMM Computer Communication Review, 31(3):38–47, 2001.

[20] C. Reis, S. Gribble, T. Kohno, and N. Weaver. Detecting In-Flight Page Changes with Web Tripwires. In Proc. NSDI, 2008.

[21] A. Ritacco, C. Wills, and M. Claypool. How’s My Network? A Java Approach to Home Network Measurement. In ICCCN 2009, pages 1–7. IEEE, 2009.

[22] S. Saroiu, P. Gummadi, S. Gribble, et al. A measurement study of peer-to-peer file sharing systems. In Proceedings of Multimedia Computing and Networking, volume 2002, page 152, 2002.

[23] P. Savola. MTU and Fragmentation Issues with In-the-Network Tunneling. RFC 4459, 2006.

[24] M. Tariq, M. Motiwala, N. Feamster, and M. Ammar. Detecting network neutrality violations with causal inference. In Proc. Emerging Networking Experiments and Technologies, 2009.

[25] P. Vixie. Extension Mechanisms for DNS (EDNS0). RFC 2671, IETF, August 1999.

[26] Wikipedia. http://en.wikipedia.org/wiki/Usage_share_of_operating_systems, January 2010.

[27] Wikipedia. http://en.wikipedia.org/wiki/Usage_share_of_web_browsers, January 2010.

[28] Y. Zhang, Z. M. Mao, and M. Zhang. Detecting traffic differentiation in backbone ISPs with NetPolice. In Proc. IMC, 2009.