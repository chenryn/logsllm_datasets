let us present an example.
We consider the same ft presented
in Ex. 2, for which we do not have
a speciﬁc vector b to check against.
We choose again MCS(etop) as our
formula χ. In order to compute all the
mcss for etop, we ﬁrst construct the corresponding bdd
BT(MCS(etop)), then we apply AllSat [29]. We walk
down the bdd and collect all the nodes in paths that lead
to the terminal labelled with 1. By doing so, we obtain two
(cid:2) which respectively contain (0, 1)
diﬀerent vectors b and b
(cid:2)
(cid:2)
and (1, 0) as the values for b1, b2 and b
2, representing
1, b
the diﬀerent assignments that satisfy our formula given
the speciﬁc ft T. The ﬁgure in this paragraph represents
the bdd for MCS(etop): both the paths that represent
satisfying assignments for χ are highlighted.
E. Computing a satisfying fault tree
Overview:
In this section we will brieﬂy discuss the
following problem: given a vector b and a formula χ, we
want to compute at least one ft T such that b , T |= χ.
Observations: A more trivial approach could consist in
trying to satisfy the given formula by keeping the values of
bes ﬁxed - as given in b - and trying out all possible truth
assignments for the other variables in the given χ, until
χ is satisﬁed. However, this procedure does not guarantee
that the resulting structure of the ft will be meaningful.
More complex procedures - out of the scope of this paper -
can infer the structure of a ft from given vector(s) b while
also considering other relevant properties of the tree, like
its complexity and the number of elements e.g., employing
genetic algorithms [31].
VI. Counterexamples
Overview:
If a formula does not hold, it is important
to know why this property fails. Counterexamples provide
such diagnostic information. Given a formula χ that is not
satisﬁed by the vector b , a counterexample is simply a new
(cid:2) with minimal modiﬁcations s.t. it does satisfy χ.
vector b
We present an algorithm to compute such counterexamples
(see Algo. 4). In so doing, we can provide counterexamples
for signiﬁcant properties that can be captured by BFL.
IW
H3
CP/R
CR
CP
Since the most common qualitative analyses on fts in-
volve mcss and mpss, we will focus on counterexamples
and present patterns for these operators. For example,
suppose we believe that the failure of {IW , H3 , IT} is a
mcs for the tle in T on the
right. Clearly, {IW , H3 , IT} is not
an mcs for T: it is a cut set but
not minimal. As highlighted in the
ﬁgure, a suitable counterexample is
a mcs contained in {IW , H3 , IT},
i.e., {IW , H3}.
Counterexamples: We present our algorithm to com-
pute counterexamples and a corresponding deﬁnition:
Algorithm 4 Compute a counterexample b
, T |= χ, given b, T and χ, s.t. b , T (cid:9)|= χ.
(cid:2)
b
Input: Boolean vector b, ft T and a formula χ
Output: counterexample vector b
Method:
compute BT(χ) via Algo. 1
if 1 (cid:9)∈ Wt then:
end if
Starting from bdd root,
while current node wi of BT(χ) (cid:9)∈ Wt do:
return
(cid:2) s.t.
H2
IT
(cid:2)
w
(cid:2)
i = wi
if bi ∈ b = 0 then:
wi = Low(wi)
(cid:2)
i = 0
b
else if bi ∈ b = 1 then:
wi = High(wi)
(cid:2)
i = 1
b
end if
if Lab(wi) = 0 then:
if bi ∈ b = 0 then:
(cid:2)
wi = High(w
i)
(cid:2)
i = 1
b
else if bi ∈ b = 1 then:
(cid:2)
wi = Low(w
i)
(cid:2)
i = 0
b
end if
end if
end while
set all values b
values as according bi
return b
(cid:2)
(cid:2)
i which have not been set to the same
(cid:2)
(cid:2) such that b
, T |= χ. Further, for all b
(cid:2)
i with b
i+1, . . .), T (cid:9)|= χ.
(cid:2)
(cid:2)
(cid:2)
i−1, bi, b
1, . . . , b
Deﬁnition 7. Given a FT T, a Boolean vector b and a
formula χ such that b , T (cid:9)|= χ, a counterexample is a new
i (cid:9)= bi
(cid:2)
vector b
we have that (b
The reason for Def. 7 is as follows: If we have a vector b
such that with this vector the ft and the formula are not
(cid:2) in such a way that the
fulﬁlled, we want modify b to a b
ft and formula is indeed fulﬁlled. We also do not want to
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:18:37 UTC from IEEE Xplore.  Restrictions apply. 
448
(cid:2), but one in which
consider a completely diﬀerent vector b
the modiﬁcations performed are as small as possible. For
this reason, we require that we cannot change the value of
(cid:2) such that they are the same as in b without
variables in b
invalidating the ft/formula combination. Algo. 4 works
as follows: We compute BT(χ) as perAlgo. 1. Starting
with the ﬁrst variable in the variable order of the bdd,
we walk down the bdd. We follow the Low branch if
the according value in b is 0 and the High branch if it
is 1. If we do not end up at the 0 node, we continue
with the next variable. If however we end up at the 0
node, we revise our decision and instead take the other
branch of the bdd node. Decisions taken when descending
the bdd are stored in vector b
(cid:2). For all bdds diﬀerent
(cid:2) such that 1) it fulﬁls the
from 0, we thus compute a b
ft/formula combination and 2) the variable values where
it diﬀers from b cannot be changed without invalidating
the formula.
Deﬁnition 8. A pattern is a BFL formula where non-
terminal symbols might be present. A pattern matches a
formula whenever a valid BFL formula can be generated
from that pattern.
e2
e4
e5
e1
e3
In light of Algo. 4 and making use of
patterns, we present a vector b , a tree T
— represented on the right — and one
or more example formulae χ. We then
construct a representation of failure
propagation of bes inT with respect to the truth as-
signments in b . In case b does not satisfy χ for T, we
present a new status vector that satisﬁes χ for T, via
Algo. 4. Furthermore, we represent this counterexample
and show how failure propagation on T diﬀers between the
example and its corresponding counterexample. Table I
collects example formulae, their visualization with respect
to given vectors, and corresponding counterexamples, both
visualized in T and represented as vectors. Let us consider
mcss and mpss. There are two general cases in which b
does not satisfy MCS(φ) or MPS(φ):
1) If b is a cut set/path set for χ, but is not minimal.
2) If b is not a mcs/mps for χ, i.e. it lacks elements.
Let pattern1 ::= MCS(φ) and
Patterns 1 and 2:
pattern2 ::= MPS(φ). Consider T and let the vector b
represent the ordered Boolean values for e2, e4, e5. For
χ = MCS(e1) and b representing respectively the failure
of e4 and e2, e4, e5 we would have the following vectors
Pattern
Example χ
Ex. vector
Ex. representation
Cex. vector
Cex. representation
pattern1 ::= MCS(φ)
MCS(e1)
pattern2 ::= MPS(φ)
MPS(e1)
b = (0, 1, 0)
b = (1, 1, 1)
b = (1, 0, 1)
b = (0, 0, 0)
pattern3 ::= MCS(φ1)∧ . . .∧MCS(φn)
MCS(e1) ∧ MCS(e3)
b = (0, 1, 0)
pattern4 ::= MPS(φ1)∧ . . .∧MPS(φn)
MPS(e1) ∧ MPS(e3)
b = (1, 0, 1)
e1
e1
e1
e1
e1
e1
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e2
e2
e2
e2
e2
e2
b(cid:2) = (1, 1, 0)
b(cid:2) = (1, 0, 1)
b(cid:2) = (1, 0, 0)
b(cid:2) = (0, 1, 1)
b(cid:2) = (1, 1, 0)
b(cid:2) = (1, 0, 0)
e1
e1
e1
e1
e1
e1
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e3
e4
e5
e2
e2
e2
e2
e2
e2
Table I: A collection of patterns, exempliﬁcations through given χ and b, and the respective counterexamples.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:18:37 UTC from IEEE Xplore.  Restrictions apply. 
449
(cid:2) = (1, 1, 0) for the former and
as counterexamples: b
(cid:2) = (1, 0, 1) for the latter. While for χ = MPS(e1)
b
and b representing respectively events e4 and e2, e4, e5
being operational, we would have the following vectors
(cid:2) = (1, 0, 0) for the former and
as counterexamples: b
(cid:2) = (0, 1, 1) for the latter.
b
Patterns 3 and 4: Let pattern3 ::= MCS(φ1) ∧ . . . ∧
MCS(φn) and pattern4 ::= MPS(φ1) ∧ . . . ∧ MPS(φn).
Given a ft T and a vector b , these two patterns allow
us to check whether a given b represents a mcs/mps
for n gates in T. Given T and b representing the failure
of e4, we can check if b is a mcs for both e1 and e3 i.e.,
χ = MCS(e1)∧MCS(e3). The failure of e4 is not suﬃcient,
(cid:2) = (1, 1, 0).
thus we present a counterexample vector b
The same procedure applied to mpss can be seen in
pattern4. Given the same ft and b representing e4 being
operational, we observe that b does not represent a mps
for both e1 and e3 i.e., χ = MPS(e1) ∧ MPS(e3). We
(cid:2) = (1, 0, 0). Table I collects
present a counterexample b
these examples, alongside their graphical representations.
VII. COVID Case Study: Analysis
Overview:
In this section we discuss the case study of T
in Fig. 2 in light of the procedures described in Sec. V and
Sec. VI. For every property presented in Sec. IV, we discuss
whether it holds for the given tree in Fig. 2. Furthermore,
we present possible additional steps in the analysis of T
by leveraging the expressiveness of BFL. We then present
a meaningful excerpt of Fig. 2. Storm model checker [32]
is used in order to retrieve mcss/mpss whenever the cor-
responding operators appear in the following properties.
Analysis:
• Is an infected surface suﬃcient for the transmission
of COVID? ∀(IS ⇒ MoT)
DT
CVT
CIS
MoT
AT
IS
MH2
H1
H5
CT
This property does not
hold for the (sub)tree
we are considering (see
ﬁgure on the right). In
fact, the failure of IS
alone is not suﬃcient
for MoT to fail. We can
gather more informa-
tion about the role IS
has in the failure of MoT by computing mcss for MoT
and ﬁlter for IS: (cid:2)MCS(MoT) ∧ IS(cid:3). The result is a single
mcs containing {IS, H1 , H5}. From this information we
can infer that an infected surface paired with a surface dis-
infection error and the non-respect of outbreak procedures
is suﬃcient for the transmission of COVID.
• Does the occurrence of Mode of Transmission require
human errors? ∀(MoT ⇒ (H1 ∨H2 ∨H3 ∨H4 ∨H5))
Checking this property would return False. In fact, there
are cases in which MoT would occur without the need of
any human error. E.g., in case of Droplet Transmission
(DT) or Airborne Transmission (AT).