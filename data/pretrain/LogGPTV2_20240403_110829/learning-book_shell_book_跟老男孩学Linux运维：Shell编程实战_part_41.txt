array=(I am oldboy teacher velcome to oldboy training class)
2）计算变量内容的长度，这在前文已经讲解过了。常见方法有4种：
[root@oldboy scripts] char=oldboy
[root@oldboy scripts]echo Schar|wc -L
[rooteoldboy 8cripts]echo S（#char)
[root8oldboy scripts] expr length $char
[root@oldboy scripts] echo Scharlawk'(print length($0))
6
方法1：通过数组方法来实现。
arr=(I an oldboy teacher velcone to oldboy training class)
for ((i=0;i<$(#arr[*]);i++))
do
if[s（#arr[Si]}-1t 6]
then
fi
done
for word in S（arr[*])
echo
do
if1expr 1ength Sword-1t 61:then
echo Sword
fi
done
说明：本例给出了用两种for循环打印数组元素的方法。
方法2：使用for循环列举取值列表法。
for word in I am oldboy teacher velcome to oldboy training class
---
## Page 287
第13章Shel数组的应用实线269
#<=看起来有点初级吧。
do
if 1echo Swordlwc -L'-1t 61:then
fi
done
chare=*I am oldboy teacher welcome to oldboy training clas8*
<=定义字符串可以。
for word in Schars
do
if[echo Swordlwc-L-1t6]jthen
fi
echo $word
done
方法3：通过awk循环实现：
[rooteoldboy scripts]# chars=*I an oldboy teacher welcome to oldboy training
cla8s*
[rooteo1dboy scripts]#echo $charslawk·（for（i=1i<=NF;i++）if(1ength（$i）<=6）
几种方法的输出结果统一为：
oldboy
am
to
oldboy
class
范例13-5：批量检查多个网站地址是否正常。
要求：
1）使用Shell数组的方法实现，检测策略尽量模拟用户访问。
2）每10秒进行一次全部检测，无法访问的输出报警。
3）待检测的地址如下。
http:/blog.oldboyedu.com
http:/blog.etiantian.org
http:/oldboy.blog.51cto.com
http:/10.0.0.7
解题思路：
1）把URL定义成数组，形成函数。
2）编写URL检查脚本函数，传入数组的元素，即URL。
3）组合实现整个案例，编写main主函数（即执行函数），每隔10秒检查一次。
---
## Page 288
2跟老男孩学Linux运维：Shell编程实战
下面的参考答案采用了Shell数组的方法，同时检测多个URL是否正常，并给出专
业的展示效果（同范例10-7，即给出了数组的用法，有需要的读者可以回看）：
[root@oldboy scripts]# cat 10_7_2.sh
this script is created by oldboy.
1/bin/bash
e_mai1:313337419qq.com
function:case example
version:1.3
./etc/init.d/functions
check_count-0
url_1ist=(
<定义检测的URL数组，包含多个URL地址。
http://b1og.o1dboyedu .com
http://blog.etiantian.org
http://o1dboy.b1og.51cto.com
http://10.0.0.7
function wait()
<==定义3，2，1例计时通数。
echo-n·3秒后，执行检查URL操作.
for（（i=0;i<3;i++）)
do
done
echo
function check_ur1 ()
<==定义检测URL的函数。
wait
<-执行例计时函数。
for（（i=0：i<echo s（url_1ist[*]）)；i++））<==循环数组元素。
do
<检测是否可以访问数组元素的地址。
if [ s？-eq 0]
<=如果返四值为0，则表示访问成功。
then
action“s（ur1_1ist[Si])·/bin/true<==优雅地基示成功结果。
action*S（url_list[si])-/bin/false<==优雅地显示失败结果。
done
fi
((check_count++))
<==检测次数加1。
main()(
while true
<定又主函数。
<开启一个持续环。
dlo
check_ur1
<==加截检测ur1的函数。
---check count:$（check_count)--
sleep 10
<==间歌10秒
---
## Page 289
第13章Shell数组的应用实践2I
<=调用主函数运行程序。
执行结果如图13-1所示。
iwntlath-cre
图13-1检测数组内URL输出的专业效果图
提示：实际使用时，一些基础的函数脚本（例如，加颜色的函数）是放在函数文件
里的（例如，放在/etc/init.d/functions里），与执行的脚本内容部分分离，
这样看起来会更清爽，大型的语言程序都是这样开发的。
范例13-6：开发一个守护进程脚本，每30秒监控一次MySQL主从复制是否异常
（包括不同步及延迟），如果有异常，则发送短信报警，并发送邮件给管理员存档（此为
生产实战案例）。
提示：如果没主从复制的环境，可以把下面的文本放到文件里读取来模拟主从复制
的状态。
............................ro............................
Slave_Io_State: Waiting for master to send event
Master_User: rep
Master_Host: 10.0.0.51
Master_Port: 3306
Connect_Retry:60
Master_Log_File:mysql-bin.000013
Read_Master_Log_Pos:502547
Relay_Log_File:relay-bin.000013
Relay_Log_Pos:251
Relay_Master_Log_File:mysql-bin.000013
Slave_IO_Running：Yes<-IO线程状为必须为Yes
Slave_SQL_Running: Yes
<=SQL线程税为必策为Yes
Replicate_Do_DB:
Replicate_Ignore_DB:mysq]
Replicate_Do_Table:
---
## Page 290
272跟老男孩学 Linux运维：Shell 编程实战
Replicate_Ignore_Table:
Replicate_Hi1d_Ignore_7able:
Replicate_Wild_Do_Table:
Last_Errno: 0
Skip_Counter:0
Last_Error:
Exec_Master_Log_Pos:502547
Relay_Log_Space: 502986
Until_Condition: None
Until_Log_Pile:
Until_Log_Pos:0
Master_SSL_Allowed:No
Haster_SSL_CA_File:
Master_SSL_CA_Path:
Master_SsL_Cert:
Haster_SSL_Cipher:
Master_SSL_Key:
Seconds_Behind_Haster: 0
<==和主库比较间步延迟的秒数，这个参数很重要。
Master_SSL_Verify_Server_Cert: No
Last_Io_Error:
Last_Io_Errno: 0
Last_SQL_Errno: 0
Last_sQL_Error:
解题思路：
1）判断主从复制是否异常，主要是检测如下参数对应的值。
Slave_IO_Running：Yes<=-IO线程状态必须为Yes
Slave_SQL_Running：Yes<SQL线程状态必须为Yes
Seconds_Behind_Master：0<==和主库比较同步延迟的秒数，这个参数很重要。
2）读取状态数据或状态文件，然后取出对应的值，和正确的值进行比对，如果不
符合，则表示存在故障，即调用报警脚本报警。
3）如果想要更专业，还可以在主从不同步时，查看相应的错误号，判断对应的错误
号以自动修复主从复制故障（也可以通过在配置文件里的配置参数来实现自动忽略故障）。
以下为参考答案。
首先给出模拟数据（注意，使用时要去掉中文注释）。
[root8oldboy scripts]#cat slave.1og
Slave_Io_State: Waiting for naster to send event
Master_Host: 10.0.0.51
Master_User: rep
Master_Port:3306
Connect_Retry:60
Haster_Log_File: mysql-bin.000013
Read_Master_Log_Pos: 502547
---
## Page 291
第13章Shel数组的应用实践23
Relay_Log_File: relay-bin.000013
Relay_Log_Pos:251
Relay_Master_Log_File:nysql-bin.000013
Replicate_Do_DB:
Replicate_Ignore_DB:mysq1
Replicate_Do_Table:
Replicate_Ignore_Table:
Replicate_Wild_Do_Table:
Replicate_Wild_Ignore_Table:
Last_Errno:0
Last_Error:
Skip_Counter:0
Exec_Maater_Log_Pos:502547
Relay_Log_Space:
Until_Condition: None
Until_Log_Pile:
Until_Log_Pos:
0
Master_SSL_A11owed: No
Master_SSL_CA_Path:
Master_SSL_CA_File:
Master_sSL_Cipher:
Haster_SSL_Cert 1
Haster_sSL_Key:
Seconds_Behind_Master: 0
Kaster_SsL_Verify_Server_Cert: No
Last_Io_Errno: 0
Last_Io_Error:
Last_sQL_Errno:0
Last_sQL_Error:
然后开发脚本，有多种方法，下面分别给出各个参考方法。
方法1：
[root9oldboy scripts]awk-F:/_Running|_Behind/(print SNF)slave.1og
<==获取所有复制相关的秋态值，脚本里使用mlave.log时注意完全路径。
Yes
0
[root8oldboy scripts]cat 13_6_1.sh
count=0
<-获取所有复制相关的状态值赋并值给数组status。
for（（1=0:1<s（#status[*1）：1++））#<==环教细元素。
do
<==如果数组元素值不为YeB或0中的任意一个，那就表示复制出放障了。
then
let count+=1
<==误数加1。
---
## Page 292
274跟老男孩学Linux运维：Shell编程实战
fi
done
1f[Scount-ne01：then<==只要错误数不等于0，就表示状态佳肯定是有间超的。
echo*mysgl replcation is failed*
<==提示复制出现问题。
el8e
echo*mysqlreplcationissuces*<==否则提示复制正常。
fi
说明：本答案是为了引导读者学习，因此没有加每30秒的条件。
测试结果如下：
[root@oldboy scripts] sh 13_6_1.sh
[rooteoldboy scripts]sed-1s#Slave_Io_Running:YesSlave_Io_Running：
mysql replcation is sucess
Nog′slave.1og
#<==模拟IO线程收障
[root8o1dboy scripts]# sh 13_6_1.sh
mysqlreplcation is failed
方法2：本方法和方法1实现的功能差不多，但是开发手法更高大上一些。
[rooteoldboy scripts]cat 13_6_2.sh
1/bin/bash
CheckDb() (
for((i=0:i<S(#status[*]);i++))
do
count=0
then
let count+=1
fi
if[Scount-ne 0 ]:then
done
echo*myagl replcation is failed*
return 1
else
echo*mysql replcation is sucess*
return 0
f.1
main ()(
while true
do
CheckDb
 d8
done
main
---
## Page 293
第13章Shell数组的应用实践27
测试结果如下：
[root@oldboy scripts] sed -i*s#Slave_Io_Running: No#Slave_Io_Running:
Yes#g'slave.1og#<=模拟IO线程恢复正常。
[xoot9o1dboy scripts]#sh 13_6_2.sh
mysql replcation is sucess
mysql replcation i8 sucess
myeqlreplcation i8 suce88
]
Nog'8lave.log
<==提示复制出现问题。
[root8oldboy scripts]sh 13_6_2.sh
nysgl replcation is failed