1
Linux下echo计算哈希的坑
因为遇到好⼏次了，每次都忘记，搞得要怀疑⼈⽣⼏分钟，故简单记录下避免下次⼜⼊坑。
linux下常⽤的计算的哈希命令: 
md5sum  
sha256sum  
但是这两个命令读取的是参数指定的⽂件名，或者是标准的输⼊。
那么如果我们想加密单个字符串的时候，⼀般会这样利⽤管道符来使⽤: 
1.  echo '123' |md5sum  
2.  echo '123'|sha256sum  
得到的是: 
123 -> md5 -> ba1f2511fc30423bdbb183fe33f3dd0f  
123 -> sha256 -> 181210f8f9c779c26da1d9b2075bde0127302ee0e3fca38c9a83f5b1dd
8e5d3b  
我们使⽤Python计算下就可以发现⼀个有趣的现象: 
2
真是情况是: 
123 -> md5 -> 202cb962ac59075b964b07152d234b70  
123\n  对应的才是  ba1f2511fc30423bdbb183fe33f3dd0f ，那么问题出在了哪⾥呢? 
观察图⽚可以看到输出换⾏了，原因就是: 默认的echo输出会在字符串的末尾加上⼀个换⾏符 
那么怎么解决这个问题呢，通过查看 man echo ，可以知道加上  -n 参数就可以不输出末尾的的换⾏
符
问题解决: 
Python
复制代码
import hashlib
print(hashlib.md5("123".encode()).hexdigest())
print(hashlib.md5("123\n".encode()).hexdigest())
1
2
3
3