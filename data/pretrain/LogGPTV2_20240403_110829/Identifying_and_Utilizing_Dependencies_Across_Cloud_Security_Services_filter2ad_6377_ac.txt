of CSP1,k over CSP2,k for a particular SLO k. Similarly,
CSP1,k/CSCk indicates the relative rank of CSP1,k over
CSCk, which speciﬁes whether CSP1,k satisﬁes CSCk re-
quirements or not. This results in a one to one comparison
matrix (CM) of size (n + 1) × (n + 1) if there is a total of n
CSPs and one CSC for each SLO such that:
CMk =
.
.
.
CSP1,k
CSP1,k/CSP1,k
CSPn,k/CSP1,k
CSCk/CSP1,k
CSCk
CSPn,k
. . .
. . . CSP1,k/CSPn,k CSP1,k/CSCk
. . .
. . . CSPn,k/CSPn,k CSPn,k/CSCk
CSCk/CSCk
. . . CSCk/CSPn,k
.
.
.
.
.
.
(2)
The relative ranking of all the Cloud providers and the cus-
tomer for each SLO is calculated as a priority vector (PV)
of the CM. The PV is an approximation eigenvector of the
CM. The PV indicates a numerical ranking of providers that
speciﬁes an order of preference among them, as indicated by
the ratios of numerical values.
P Vk = (cid:0) CSP1,k CSP2,k
N1,k
N2,k
. . . CSPn,k CSCk
Nu,k
. . .
Nn,k
(3)
(cid:1)
Where N1 is a numerical value representing the relative rank
of CSP1 to other CSPs as well as the CSC regarding an
SLO. Nu is the relative rank of the CSC required security
level with respect to the security levels oﬀered by the CSPs.
Phase 4. Services Aggregation
In the ﬁnal phase, we follow up with a bottom-up aggre-
gation to give an overall assessment of the security levels
and a ﬁnal ranking of the CSPs (cf., Figure 7). To achieve
that, the priority vector of each SLO (Phase 3) is aggregated
with their relative normalized weights (dependency impor-
tance level) speciﬁed in Phase 2. This aggregation process is
repeated for all the SLOs in the hierarchy with their relative
weights.
P Vaggregated =(cid:2)P Vk1
(cid:3) .(cid:2)W(cid:3)T
. . . P Vkn
(4)
Where W is the set of normalized weights of diﬀerent SLOs
such that W = wk1 , wk2 , . . . , wkn . Note that the weights
are normalized to satisfy the AHP requirements. P Vk1 is
the PV calculated for SLO k1. P Vaggregated is the aggre-
gated PV which shows the ranking of all the CSPs based on
the customer-deﬁned requirements and weights. We demon-
strate and validate the framework presented in this section
using a real-world case study in Section 4.
4. CASE STUDY: SECURITY EVALUATION
This section shows an empirical validation of the proposed
framework through two scenarios that use real world sec-
SLA information derived from the Cloud Security Alliance’s
STAR repository [8].
4.1 The Customer Perspective: Security
Comparison of CSPs
This initial validation scenario demonstrates how a Cloud
customer can apply the framework presented in this paper
to compare side-by-side three diﬀerent CSPs based on their
advertised secSLAs (compliant with the hierarchy of Fig-
ure 2) and with respect to a particular set of security re-
quirements (also expressed as a secSLA). Table 2 presents a
sample dataset used for this scenario which is based on the
information available in the CSA STAR repository, where
the values associated to 15 SLOs for the three selected CSPs
are presented.
In order to perform a comprehensive vali-
dation, the selected SLOs comprised both qualitative and
quantitative metrics. The qualitative metrics are speciﬁed
as security levels (cf., Deﬁnition 1) such as monthly, weekly,
and daily denoted as security levels level1, level2 and level3,
1
3
3
3
2
3
,
,
. Furthermore, no, yes metrics
which are modeled as
are denoted as level0, level1 respectively. All CSPs secu-
rity SLOs are normalized to the customer requirements to
eliminate masquerading5. Furthermore, Table 2 shows two
sets of Cloud customer requirements used as a baseline for
comparing the selected CSPs:
1) In the Table 2 column marked as Case I, the customer
requirements are expressed at a per-SLO granular level.
This represents a security-expert customer where the cus-
tomer speciﬁes his/her requirements at Case I “req” col-
umn. After that the customer secSLA is validated to
check if each constraint between two dependent SLOs is
satisﬁed and at the end of the validation showing the
conﬂicts found. The customer then resolves the SLO
conﬂicts by specifying new values to the SLOs causing
conﬂicts. These new values are shown at Case I “rev ”
column in Table 2.
2) The column marked as Case II shows a set of require-
ments on SLOs that do not depend on any other SLO
(identiﬁed using the DSM). These set of SLOs is used
to model the customer requirements for the remaining
SLOs. This might be the case of a novice or basic cus-
tomer who can not specify all the secSLA SLOs and re-
solve the SLO conﬂicts if any is found.
5The masquerading eﬀect happens when the overall ag-
gregated security level values mostly depend on those ser-
vices with a high-number of SLOs, thus negatively aﬀecting
groups with fewer, although possibly more critical, provi-
sions.
335Table 2: Case Study: Excerpt of secSLA’s from CSPs and customer requirements.
Cloud secSLA based on CSA STAR [8]
CSPs
category lvl category
lvl category
Services
SLO
3
3
3
2
2
2
3
Root
3
3
3
Audit &
Compli-
ance
AC
Business
Continu-
ity
BC
Interface
Security
IS
Planning
AC1
Independent
Audits
AC2
Regulatory
Mapping
AC3
Testing
BC2
Policy
BC11
2 AC2.3
3 AC2.1
lvl name
dep.
2 AC1.1 Dep1
3 AC1.2 Dep2
Dep1
Dep3
3 AC2.2 Dep4
Dep4
Dep5
1 AC2.4 Dep6
1 AC3.1
1 AC3.2
2 AC3.1 Dep3
2 AC3.2 Dep5
3 AC3.3
1 BC2.1 Dep7
1 BC2.2 Dep6
3 BC11.1 Dep7
3 BC11.2
Regulatory 2 AC3.1
Mapping
2 AC3.2
3 AC3.3
2
AC3
Application
Security
1
IS1
IS1.1 Dep8
Dep8
Dep2
IS1.2
CSP1 CSP2 CSP3
yes
level2
yes
level2
yes
level3
yes
no
no
yes
yes
yes
yes
yes
yes
lvl
2
2
3
3
2
1
1
no
yes
yes
yes
yes
level1
yes
yes
yes
level2
yes
yes
level1
yes
yes
no
yes
no
level2
yes
no
yes
level3
yes
no
level2
yes
yes
yes
yes
yes
level3
yes
no
yes
level3
yes
yes
level3
1 weekly weekly daily
1
level2
level2
level3
1 AC3.1
yes
yes
yes
yes
Customer (CSC)
Case I
Case II
rev
yes
req
yes
level3
yes
no
yes
yes
yes
yes
yes
yes
level3
no
no
yes
level3
yes
yes
level3
weekly daily
yes
level3
yes
yes
yes
level3
no
yes
level3
daily
level3
Finally, we consider dependencies between services and SLOs
which are going to be validated using the validation model
presented in Section 3.2 such that:
v
.
SLO dependencies:
• AC2.1 is medium dependent on AC1.1 (this depen-