Backup and Restore
 PITR
 解读recovery.conf文件
 示例文件在 $PGHOME/share/recovery.conf.sample
 restore_command -- 还原归档文件的命令
 recovery_target_name | recovery_target_time | recovery_target_xid
恢复到什么目标,其中recovery_target_name是使用pg_create_restore_point()生成
的.
 recovery_target_inclusive (目标为时间和xid时可配置是否恢复到(包含|接近但不包
含)指定的时间点或XID)
 recovery_target_timeline (恢复到哪个时间线,或latest表示直到最大的时间线)
 pause_at_recovery_target (恢复到指定点后暂停恢复, 一般可用于连到数据库去检
测是否已经到达了想要恢复的时间点, 没到达的话可以关闭数据库调整恢复目标点,
继续恢复, 直到到了想要的点后, 使用pg_xlog_replay_resume()来停止恢复并激活
数据库) 打开hot_standby才能使用.
 基于单个表空间 / 数据库的还原和恢复
 http://blog.163.com/digoal@126/blog/static/16387704020123261422581/
Backup and Restore
 例子
 http://blog.163.com/digoal@126/blog/static/1638770402012431063591/
如果要使用基础备份1
恢复到这个时间点,
recovery_target_timeline=2
恢复后激
或latest
活tL发生
timeLine=2
改变
timeLine=1
假设这是
pg_create_restore_point('test2')
假设这是
基础备份 pg_create_restore_point('test1')
1
WAL日志持续归档
HA and Replication
 传统HA, 共享存储
 缺点, 存储或者链接存储的线路甚至HBA卡都会成为故障点, 所以HA并不HA.
 通常需要靠存储复制或文件系统异机镜像来应对存储层面的故障.
 PostgreSQL流复制带来了新的解决方案
 LVS+PG流复制可以组成读负载均衡的场景
 PG流复制还可以应用于异地容灾的场景
 PG流复制可以作为HA的一部分, 通过VIP漂移和激活同步 standby可以做到极高的
数据可靠性和高可用.
 PgCloud, 一种不依赖虚拟化和集中式存储的思路
 http://blog.163.com/digoal@126/blog/static/1638770402011111422518103/
HA and Replication
 异步流复制原理
2
Standby
archlog xlog
1
WalRcvData->receivedUpto
Primary
startup
postmaster wal receiver
PM_SHUTDOWN_2
process
send
PMSignal
WalRcvData->conninfo wal sender
3
WalRcvData->receiveStart
recover
read
fork
postmaster
datafiles XLOG
WAL buffer write
fork
read
write
wal writer
APP Other backend processes
Parameter Tuning :
Primary
max_wal_senders
wal_sender_delay ( The sleep is interrupted by transaction commit )
wal_keep_segments
vacuum_defer_cleanup_age ( the number of transactions by which VACUUM and HOT updates
will defer cleanup of dead row versions. )
Standby
hot_standby
# wal apply & SQL on standby conflict reference parameter
max_standby_archive_delay
( the maximum total time allowed to apply any one WAL segment's data. )
max_standby_streaming_delay
( the maximum total time allowed to apply WAL data once
it has been received from the primary server )
wal_receiver_status_interval
( minimum frequency, The standby will report the last transaction log position
it has written, the last position it has flushed to disk, and the last position it has applied.)
hot_standby_feedback
(send feedback to the primary about queries currently executing on the standby. )
HA and Replication
 同步流复制原理 1. Many standbys
2. Only one sync standby at the same time
2
Standby(s) 3. Sync wide:
Cluster
Database
archlog xlog
User
Session
1 Transaction
WalRcvData->receivedUpto
Primary
startup
postmaster wal receiver
PM_SHUTDOWN_2
process
PMSignal
WalRcvData->conninfo wal sender
3
WalRcvData->receiveStart
recover
read
fork
postmaster
datafiles XLOG
WAL buffer write
fork
read
write
wal writer
APP Other backend processes
waiting/releasing
HA and Replication
Parameter Tuning :
Primary
max_wal_senders
wal_sender_delay
wal_keep_segments
vacuum_defer_cleanup_age
synchronous_replication
synchronous_standby_names
( primary_conninfo in standby’s primary_conninfo )
Standby
hot_standby
max_standby_archive_delay
max_standby_streaming_delay
wal_receiver_status_interval
hot_standby_feedback
HA and Replication
 流复制hot_standby演示
 规划主机, 网络, 存储, 同步主备机器的时间
 生成主库
 配置主库postgresql.conf, pg_hba.conf
 新建replication角色
 配置hot_standby .pgpass, 数据目录
 使用pg_basebackup创建备库基础备份
 配置备库recovery.conf, postgresql.conf
 启动hot_standby
 测试, 新建用户, 表空间, 数据库, schema, 数据表.
 使用pgbench进行压力测试
 角色切换测试
 PostgreSQL 9.2 级联流复制
 http://blog.163.com/digoal@126/blog/static/1638770402012012361519/
HA and Replication
数据库复制技术
基于触发器的复制
slony-I, bucardo, londiste
基于SQL分发的复制
pgpool, continue
基于PAGE改变日志的复制
流复制, 归档复制
Scale-Out
 PG-XC
http://blog.163.com/digoal@126/blog/static/16387704020121952051174/
 pl/proxy
http://blog.163.com/digoal@126/blog/static/163877040201192535630895/
http://www.tudou.com/programs/view/TcluEJ4ZfPA/
 pgpool-II
http://pgfoundry.org/projects/pgpool/
Monitoring Database Activity
 long sql
 lock
 unused index
 dead tuples ratio
 server load
 server rtps
 server wtps
 server iowait
 server swap page in/out
 server process/s
 error | warning log
 pg_stat_statements
 CPU used by one SQL
 Use PostgreSQL collect and analyze Operation System statistics
 http://blog.163.com/digoal@126/blog/static/163877040201211354145701/
Procedure Language
 支持多种语言, perl, python, tcl , plpgsql等.
 plpgsql函数在PostgreSQL中作为一个事务处理, 当触发了exception时, exception中的内容
作为另一个事务.
 Debug plpgsql Function
 http://blog.163.com/digoal@126/blog/static/163877040201222011550296/
 PostgreSQL 2-PC Transaction
 http://blog.163.com/digoal@126/blog/static/16387704020111141103578/
Additional Supplied Modules
 去哪里找模块
 http://pgxn.org/
 http://pgfoundry.org/
 http://www.postgresql.org/docs/9.1/static/contrib.html
 比较常用的模块
 auto_explain -- 自动记录超过设定运行时间的SQL执行时的执行计划
 http://blog.163.com/digoal@126/blog/static/16387704020115825612145/
 dblink -- 数据库链接, 可用于链接远程数据库
 http://www.postgresql.org/docs/9.1/static/dblink.html
 file_fdw -- 基于文件创建外部表
 http://blog.163.com/digoal@126/blog/static/163877040201141641148311/
 pageinspect -- 用于查看表或索引的PAGE以及ITEM的信息
 http://blog.163.com/digoal@126/blog/static/16387704020114273265960/
 pg_archivecleanup -- 清除归档的模块
 http://blog.163.com/digoal@126/blog/static/16387704020110445753526/
Additional Supplied Modules
 比较常用的模块
 pgbench -- 压力测试模块
 http://blog.163.com/digoal@126/blog/static/163877040201151534631313/
 pg_buffercache -- 查看buffer信息的模块
 http://blog.163.com/digoal@126/blog/static/16387704020115149458640/
 pg_freespacemap -- 查看freespacemap信息的模块
 http://www.postgresql.org/docs/9.1/static/pgfreespacemap.html
 pgrowlocks -- 查看行锁的模块
 http://blog.163.com/digoal@126/blog/static/1638770402011515105557166/
 pg_stat_statements -- 统计数据库执行的SQL语句的次数以及CPU开销的模块
 http://www.postgresql.org/docs/9.1/static/pgstatstatements.html
 pgstattuple -- 获得tuple级统计信息的模块
 http://www.postgresql.org/docs/9.1/static/pgstattuple.html
Additional Supplied Modules
 比较常用的模块
 pg_test_fsync -- 调用各种OS同步写接口的测试模块
 http://blog.163.com/digoal@126/blog/static/163877040201141795025354/
 pg_trgm -- 可用于近似度匹配的模块
 http://blog.163.com/digoal@126/blog/static/163877040201191882553803/
 pg_upgrade -- 基于catalog的变更升级模块, 通常比pg_dump升级速度快很多倍.
 http://www.postgresql.org/docs/9.1/static/pgupgrade.html
 Foreign data wrapper -- 建立外部表的模块
 -- 参见day1的fdw章节
 pgfincore -- 模拟持久化缓存的模块
 http://blog.163.com/digoal@126/blog/static/163877040201062944945126/
 http://blog.163.com/digoal@126/blog/static/1638770402011630102117658/
 http://blog.163.com/digoal@126/blog/static/16387704020120524144140/
 其他常见的支持PostgreSQL的外围软件
 全文检索Sphinx, 地理信息PostGIS
Tuning case
 PostgreSQL性能优化综合案例
 http://blog.163.com/digoal@126/blog/static/163877040201221382150858/
 http://blog.163.com/digoal@126/blog/static/163877040201221333411196/
Thanks
 关于本PPT有问题请发邮件至 PI:EMAIL
 保持联系, 个人QQ: 276732431
 群: 3336901
 【参考】
 《PostgreSQL 9.1.3 Manual》
 《PostgreSQL 9 Administration Cookbook》
 《PostgreSQL 9.0 High Performance》
 【更多内容请关注】
 http://blog.163.com/digoal@126/
中国2012PostgreSQL用户大会
 地点: 北京人民大学
 时间: 6月14-17号
 内容简介:
 本次大会将邀请到社区的核心组员MagnusHagander,主要开发人员Simon Rigg、
PG-XC的首席架构师铃木幸一(SuzukiKoichi)及其他海外专家为本次大会分享最前
沿的PostgreSQL方面的信息，同时还有业界的资深人员作相关演讲。
 PG-XC峰会
 数据库应用分会场
 内核开发分会场
 管理与性能调优分会场
 PostgreSQL ACE颁奖
 主题: 开放征集中