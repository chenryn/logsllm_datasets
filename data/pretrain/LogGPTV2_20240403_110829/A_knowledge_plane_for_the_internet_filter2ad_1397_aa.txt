title:A knowledge plane for the internet
author:David D. Clark and
Craig Partridge and
J. Christopher Ramming and
John Wroclawski
A Knowledge Plane for the Internet 
David D. Clark*, Craig Partridgeo, J. Christopher Ramming† and John T. Wroclawski* 
*M.I.T Lab for Computer Science 
200 Technology Square 
Cambridge, MA 02139 
{ddc,jtw}@lcs.mit.edu 
oBBN Technologies 
10 Moulton St 
Cambridge, MA 02138 
†SRI International 
333 Ravenswood Avenue 
Menlo Park, CA 94205 USA 
PI:EMAIL 
PI:EMAIL 
ABSTRACT 
We  propose  a  new  objective  for  network  research:  to  build  a 
fundamentally  different  sort  of  network  that  can  assemble  itself 
given  high  level  instructions,  reassemble  itself  as  requirements 
change,  automatically  discover  when  something  goes  wrong,  and 
automatically fix a detected problem or explain why it cannot do so.  
We  further  argue  that  to  achieve  this  goal,  it  is  not  sufficient  to 
improve  incrementally on the techniques and algorithms we know 
today. Instead, we propose a new construct, the Knowledge Plane, a 
pervasive system within the network that builds and maintains high-
level  models  of  what  the  network  is  supposed  to  do,  in  order  to 
provide services and advice to other elements of the network. The 
knowledge  plane  is  novel  in  its  reliance  on  the  tools  of  AI  and 
cognitive systems. We argue that cognitive techniques, rather than 
traditional  algorithmic  approaches,  are  best  suited  to  meeting  the 
uncertainties and complexity of our objective. 
Categories and Subject Descriptors 
Network 
C.2.1 
Architecture  and  Design  –  network  communications. 
  C.2.3 
[Computer-Communication  Networks]:  Network  Operations  – 
network  management,  network  monitoring.  C.2.6  [Computer-
Communication Networks]: Internetworking. 
General Terms 
Management, Measurement, Design, Experimentation. 
Keywords 
Cognition; network applications; network configuration; knowledge 
plane. 
[Computer-Communication 
Networks]: 
1.  INTRODUCTION 
The Internet of today is a wonderful success. But success should not 
blind us to the Internet’s limitations. Its emphasis on generality and 
heterogeneity,  the  'narrow-hourglass'  combination  of  a  simple, 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that copies 
bear this notice and the full citation on the first page. To copy otherwise, or 
republish,  to  post  on  servers  or  to  redistribute  to  lists,  requires  prior 
specific permission and/or a fee. 
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany. 
Copyright 2003 ACM 1-58113-735-4/03/0008…$5.00. 
transparent  network  with  rich  end-system  functionality,  and  the 
deeply  embedded  assumption  of  a  decentralized,  multi-
administrative structure are critical strengths, but lead to frustrated 
users  when  something  fails,  and  high  management  overhead  with 
much manual configuration, diagnosis and design.  
Both user and operator frustrations arise from the same fundamental 
design  principle  of  the  Internet—the  simple  and  transparent  core 
with  intelligence  at  the  edges  [1,2].    The  network  carries  data 
without knowing what that data is, or what its purpose is.  If some 
combination  of  events  is  keeping  data  from  getting  through,  the 
edge may recognize that there is a problem, but the core cannot tell 
that something is wrong, because the core has no idea what should 
be  happening.  The  edge  understands  applications,  and  what  their 
expected behavior is; the core only deals with packets. Similarly, a 
network operator interacts with the core in very low-level terms such 
as per-router configuration of routes and policies. There is no way 
for the operator to express, or the network to model, what the high 
level goal of the operator is, and how the low-level decisions relate 
to that high level goal.  
As we design a new sort of network, we must not lose the features of 
the  Internet  that  have  made  it  a  success—its  openness  to  new 
applications,  the  adaptability  of  its  protocols,  and  the  essential 
plasticity basic to its nature.  Yet we must devise a technique that 
marries  these  virtues  to  a  new  goal:  the  ability  of  the  network  to 
know what it is being asked to do, so that it can more and more take 
care of itself, rather than depending on people to attend to it. If the 
network had a high-level view of its design goals and the constraints 
on  acceptable  configurations,  then  it  could  make  many  low-level 
decisions  on  its  own.  It  could  communicate  with  the  network 
designer  in  terms  of  how  well  it  met  the  goals,  rather  than  by 
displaying a mass of router configuration tables. And it could deal 
with changes in the high level requirements by reconfiguring itself.  
We argue that traditional, algorithmic approaches to adaptivity are 
unlikely  to  provide  the  required  sophistication  of  behavior.  The 
approach we take must offer the ability to abstract and isolate high 
level goals from low level actions, to integrate and act on imperfect 
and  conflicting  information,  and  to  learn  from  past  actions  to 
improve  future  performance.  These  properties  are  precisely  those 
required  to  function  effectively  in  the  Internet's  environment  of 
diverse and competing objectives, decentralized control, complexity, 
and dynamic change.  
This paper proposes an approach to network design based on tools 
from AI and cognitive systems. Specifically, we propose a construct, 
a distributed cognitive system that permeates the network, that we 
call the knowledge plane. 
The rest of this paper is organized as follows. Section 2 describes 
the concept of the knowledge plane. It contrasts this concept with 
alternatives,  and  argues  for  the  cognitive  approach.  Section  3  is  a 
discussion of what this construct might do for us—examples of how 
it can make networking better. Section 4 discusses some important 
design  constraints  and  considerations  for  a  knowledge  plane 
architecture. Section 5 outlines the key challenges in our path. 
2.  A Proposal: the Knowledge Plane 
The discussion above hints at a solution in which the network has a 
high-level view of what its purpose is—the goals of its designers, of 
the applications running on it, and of its users.  In an application-
specific network, one approach might be to utilize and embed such 
domain-specific  knowledge  in  the  core  design  of  the  network,  as 
was done in the telephone network. But this defeats a fundamental 
objective of the Internet – its ability to host a broad and changing 
array of applications. Rather than pleasing no one by adding “just a 
little” application knowledge to the Internet’s simple and transparent 
data  transport  plane,  a  better  alternative  is  to  devise  a  separate 
construct that creates, reconciles and maintains the many aspects of 
a high-level view, and then provides services and advice as needed 
to  other  elements of the network. This is the knowledge plane, or 
KP. 
Understanding the precise best path towards this goal is a matter of 
significant research, and this paper neither can nor does propose a 
complete technical description of the knowledge plane. As a start, 
however,  we  sketch  certain  attributes  potentially  central  to  the 
success  of  a  knowledge  plane,  and  consider  how  this  perspective 
differs from today’s practice. These include: 
Edge  involvement:  The  end-to-end  principle  suggests  that  much 
valuable  information  about  network  performance  originates  not  in 
the network, but in the devices and applications that use it. This is 
an  inevitable  and  desirable  consequence  of  the  Internet’s  general-
purpose  data  plane.  It  implies,  however,  that  much  of  the 
“knowledge”  in  the  knowledge  plane  may  be  produced,  managed, 
and consumed at or beyond the “traditional” edge of the network. 
The reach of the knowledge plane is broader than that of traditional 
network management. 
Global perspective: Most management systems are regional — each 
operator  manages  the  part  he  owns.  But  truly  useful  problem 
identification  may  depend  on  correlation  of  observations  from 
different parts of the network. Not only must data from the edges be 
combined  with  data  from  “inside”  the  network,  but  data  from 
different parts of the network may be needed to fully comprehend a 
sequence of events. The knowledge plane would, ideally, be able to 
extend its perspective to the entire global network as required. 
Compositional structure: If the reach of the KP is global, at the same 
time it must be designed to take account of what we may loosely call 
“compositional”  considerations.  A  most  basic  example  is  that  the 
KPs  of  two  unconnected  networks  should  be  capable  of  merging 
their perspective and activities if the networks become connected. 
A corollary of the composition problem is the need to operate in the 
presence of imperfect and conflicting information: some regions will 
desire  to  keep  date  private.  Mutual  distrust  among  some  network 
operators and service providers, and indeed, among any parties that 
jockey  for  economic  advantage,  leads  directly  to  today’s  need  for 
highly  skilled  human  reasoning  to  deduce  and  model  network 
behavior.  The  KP  faces  a  similar  problem:  it  cannot  assume  a 
homogeneous network of shared objectives and shared information. 
Unified approach: One might speculate that the various problems we 
aim to address could most easily be solved by distinct mechanisms, 
working  bottom  up,  perhaps  loosely  tied  together  at  the  top.  In 
contrast, the KP as we conceive it is a single, unified system, with 
common standards and a common framework for “knowledge”. This 
unified  approach  is  needed  because  real  world  knowledge  is  not 
strictly  partitioned  by  task.  We  suggest  that  the  knowledge  plane 
should be structured similarly, based on the knowledge, not the task. 
We believe that while point solutions may be easier to develop, an 
integrated approach will be substantially more effective in the long 
run. 
Cognitive  framework:  The  knowledge  plane  needs  to  make 
judgments  in  the  presence  of  partial  or conflicting information; to 
recognize and mediate conflicts in policies and goals; to respond to 
problems and attacks in better-than-human time frames; to perform 
optimizations  in  high-dimensional  environments  that  are  too 
complicated to be addressed by humans or analytical solutions; and 
to  automate  functions  that  today  must  be  carried  out  by  rare  and 
highly  skilled  network  technicians.  We  therefore  expect  cognitive 
techniques  to  serve  as  the  foundation  of  the  knowledge  plane:  
representation,  learning,  and  reasoning  that  allow  the  knowledge 
plane to be “aware” of the network and its actions in the network. 
We turn now to further discussion of three ideas key to our position: 
the  necessity  of  a  new  construct,  the  desirability  of  a  unified 
knowledge plane, and the value of cognitive tools. 
2.1  Why a New Construct? 
Most  discussions  of  network  architecture 
two 
architectural divisions, or planes: a data plane, over which content is 
forwarded,  and  a  control  or  management  plane,  which  is  used  to 
direct,  measure,  and  repair  the  data  plane.    By  talking  of  a 
“knowledge plane” we are saying a fundamentally new construct is 
required,  rather  than  fitting  knowledge  into  an  existing  plane 
(presumably  the  management  plane).    Why  do  we  believe  a  new 
construct is required? 
If we look at the two existing planes, we find two radically different 
structures.    The  data  plane  (in  almost  any  notable  data  transport 
architecture) uses some form of layering to hide complexity and to 
enable extensibility, interoperability and scalability.  In contrast the 
control and management system is invariably designed to cut across 
the  layering,  giving  visibility  and  access  to  all  the  aspects  of  the 
network,  which  must  be  monitored  and  managed.    And,  indeed, 
because the management plane is all-seeing, it tends to scale poorly 
and to be hard to change. 
The  knowledge  plane  clearly  sits  in  a  different  place.      Since  it 
doesn’t move data directly, it is not the data plane.  And unlike the 
management plane it tends to break down boundaries to provide a 
unified view, rather than partition the world into managed enclaves.  
It is functionally unlike the management plane as well – it is hard to 
envision  the  KP  managing  accounting  records  (reading  them 
occasionally, perhaps, but collecting, storing and processing them, 
no). 
2.2  Why a Unified Approach? 
Consider the example of a user trying to install a new application 
and discovering that it does not work.  One reason might be that the 
ISP of the user has blocked that class of traffic. For the KP to give 
recognize 
information  about  administrative 
the  most  effective  feedback  to  each  party,  it  needs  access  to  the 
configuration constraints set by the ISP, so it can determine the rules 
behind  the  blocking  and  tell  the  user  what  this  implies.  So  it  is 