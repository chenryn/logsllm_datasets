from ASG; 
(Direct 
Alternative) 
Add hedged 
instance into 
ASG; 
(Direct 
Alternative) 
29.9 s2 
29.17 s2 
Table 12.  Recovery Impact for Rolling Upgrade 
Legends 
Recovery Pattern ID 
RP1 
RP2 
RP3 
RP4 
Recovery Pattern 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 
Rewind & Alternative 
Recovery Pattern ID 
RP5 
RP6 
RP7 
RP8 
Recovery Pattern 
Reparation 
Direct Redo 
Direct Alternative 
Farther Undo & Redo 
Process Step 
Errors 
Applicable 
Recovery 
Patterns 
Selected 
Recovery 
Action(Pareto 
Set) 
Recovery 
Impact 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Recovery 
Impact (User 
Constraints) 
Reco
very 
Point 
4 
Step 6. Wait for 
ASG to Start 
New Instance 
VM’ 
Launch 
VM’ fails 
RP1, RP2, 
RP3, RP4, 
RP5, RP6, 
RP7, RP8 
Add hedged 
instance into 
ASG; 
(Direct 
Alternative) 
28.87 s2 
Reco
very 
Point 
5 
Step 7. Register 
New Instance 
with ELB 
Register 
VM’ to 
ELB fails 
RP1, RP3, 
RP5, RP6, 
RP8 
Register new 
instance with 
ELB again; 
28.89 s2 
Register new 
instance with 
ELB again; 
29.98 s2 
(Direct Redo) 
(Direct Redo) 
3)  Satisfying Recovery Requirement R3 
The recovery impact of the selected recovery action is the optimal/acceptable one, which means 
that  its  recovery  impact  is  relatively  small  compared  to  all  other  recovery  actions.  Such 
selection  and  optimization  mechanism  guarantees  that  the  recovery  impact  can  meet  the 
recovery impact objective set by stakeholders. Hence, the requirement that the recovery should 
reduce negative impact is achieved. 
98 
D.  Recovery Reducing Monetary Cost 
1)  Experimental Procedure 
This recovery requirement concerns the monetary cost the recovery incurs on the cloud system. 
We therefore measure recovery monetary cost by performing the rolling upgrade operation on a 
cloud application. There are 8 instances in the cloud application. The instances are attached to 
an  auto  scaling  group  and  are  registered  in  an  elastic  load  balancer.  The  cloud  application 
running  in  the  instances  is  TPC-W  which  is  a  3-tier  web  benchmark  application  running  in 
Tomcat service. The average workload on each instance is 50 query requests per second. For the 
rolling upgrade operation, the rolling granularity is 1, meaning that each time 1 instance will be 
terminated  and  replaced.  We  used  our  own  proprietary  fault  injection  tool  to  inject  faults  for 
each  of  the  five  determined  recovery  points  in  the  rolling  upgrade  operation,  automatically 
determined the applicable recovery patterns based  on the applicable recovery patterns filtering 
method described in section 7.3, and performed recovery using the selected acceptable recovery 
action  based  on  each  of  the  two  recovery  action  selection  methods.  The  faults  injected  are 
described in Table 13. The selection of injected faults is based on our interviews with industry 
and  failure  reports,  and  hence  representative.  The  recovery  monetary  cost  is  calculated  by 
summing  up  the  monetary  cost  incurred  by  each  step  in  the  recovery  action.  We  ran  the 
experiment 30 times, measuring the average recovery monetary cost.  
Table 13.  Faults injected for Rolling Upgrade Operation 
Recovery Point 
Fault injected 
Recovery Point 1 (After Step 3) 
ASG uses unknown LC 
Recovery Point 2 (After Step 4) 
Instance still registered with ELB  
Recovery Point 3 (After Step 5) 
Instance not terminated 
Recovery Point 4 (After Step 6) 
Instance launching fails 
Recovery Point 5 (After Step 7) 
Instance not registered with ELB 
2)  Experimental Results 
Table  14 shows  the  recovery  monetary  cost  of  the  recovery  for  the rolling  upgrade  operation. 
The recovery monetary cost in the table represents the average value of the recovery monetary 
cost  for  30  runs.  The  highest  relative  standard  deviation  is  0%.  For  each  recovery  point,  the 
monetary  cost  of  the  recovery  action  selected  by  the  Pareto  set  search  based  optimization 
method  is  no  greater  than  the  other  applicable  recovery  actions;  the  monetary  cost  of  the 
selected  recovery  action  by  the  user  constraints  based  optimization  method  is  not  necessarily 
less  than  all  the  other  ones,  but  it  is  within  the  monetary  cost  constraint  set  by  business 
stakeholders. 
99 
Table 14.  Recovery Monetary Cost for Rolling Upgrade 
Legends 
Recovery Pattern ID  Recovery Pattern 
RP1 
RP2 
RP3 
RP4 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 
Rewind & Alternative 
Recovery Pattern ID 
RP5 
RP6 
RP7 
RP8 
Recovery Pattern 
Reparation 
Direct Redo 
Direct Alternative 
Farther Undo & Redo 
Recovery 
Point 
Process Step 
Errors 
Applicable 
Recovery 
Patterns 
Selected 
Recovery 
Action(Pareto 
Set) 
Monetary 
Cost 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Monetary 
Cost (User 
Constraint
s) 
Step 1. Create 
New Launch 
Configuration 
LC’ 
Step 2. 
Update Auto 
Scaling 
Group 
Step 3. Sort 
Instances 
Step 4. 
Deregister 
Old Instance 
from ELB 
Recovery 
Point 1 
Recovery 
Point 2 
ASG not 
attached 
with LC’ 
but 
attached 
with LC’’ 
RP1, RP3, 
RP5, RP6 
Update ASG 
again with LC’; 
$0 
(Reparation) 
Update ASG 
again with 
LC’; 
(Reparation) 
$0 
Deregister 
VM from 
ELB fails 
RP1, RP3, 
RP5, RP6, 
RP8 
Deregister old 
instance from 
ELB again; 
$0 
Deregister old 
instance from 
ELB again; 
$0 
(Direct Redo) 
(Direct Redo) 
Recovery 
Point 3 
Step 5. 
Terminate 
Old Instance 
VM 
Terminate 
VM fails 
(too long 
termination 
time) 
RP1, RP2, 
RP3, RP4, 
RP5, RP6, 
RP7, RP8 
Detach VM 
from ASG; 
(Direct 
Alternative) 
$0 
Detach VM 
from ASG; 
(Direct 
Alternative) 
$0 
Recovery 
Point 4 
Step 6. Wait 
for ASG to 
Start New 
Instance VM’ 
Launch 
VM’ fails 
RP1, RP2, 
RP3, RP4, 
RP5, RP6, 
RP7, RP8 
Add hedged 
instance into 
ASG; 
(Direct 