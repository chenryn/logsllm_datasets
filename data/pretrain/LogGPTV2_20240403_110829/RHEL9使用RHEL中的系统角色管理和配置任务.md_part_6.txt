::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   使用 `TLS`{.literal} 可扩展身份验证协议(EAP)进行 802.1X
    网络身份验证.
:::
在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则您必须在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   网络支持 802.1X 网络身份验证。
-   受管节点使用 NetworkManager。
-   control 节点上存在 TLS 身份验证所需的以下文件：
    ::: itemizedlist
    -   客户端密钥存储在 `/srv/data/client.key`{.literal} 文件中。
    -   客户端证书存储在 `/srv/data/client.crt`{.literal} 文件中。
    -   证书颁发机构(CA)证书存储在 `/srv/data/ca.crt`{.literal} 文件中。
    :::
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/enable-802.1x.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with 802.1X authentication
      hosts: node.example.com
      become: true
      tasks:
        - name: Copy client key for 802.1X authentication
          copy:
            src: "/srv/data/client.key"
            dest: "/etc/pki/tls/private/client.key"
            mode: 0600
        - name: Copy client certificate for 802.1X authentication
          copy:
            src: "/srv/data/client.crt"
            dest: "/etc/pki/tls/certs/client.crt"
        - name: Copy CA certificate for 802.1X authentication
          copy:
            src: "/srv/data/ca.crt"
            dest: "/etc/pki/ca-trust/source/anchors/ca.crt"
        - include_role:
            name: rhel-system-roles.network
          vars:
            network_connections:
              - name: enp1s0
                type: ethernet
                autoconnect: yes
                ip:
                  address:
                    - 192.0.2.1/24
                    - 2001:db8:1::1/64
                  gateway4: 192.0.2.254
                  gateway6: 2001:db8:1::fffe
                  dns:
                    - 192.0.2.200
                    - 2001:db8:1::ffbb
                  dns_search:
                    - example.com
                ieee802_1x:
                  identity: user_name
                  eap: tls
                  private_key: "/etc/pki/tls/private/client.key"
                  private_key_password: "password"
                  client_cert: "/etc/pki/tls/certs/client.crt"
                  ca_cert: "/etc/pki/ca-trust/source/anchors/ca.crt"
                  domain_suffix_match: example.com
                state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/enable-802.1x.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_setting-the-default-gateway-on-an-existing-connection-using-system-roles_using-system-roles-to-configure-network-connections}使用系统角色在现有连接上设置默认网关 {.title}
:::
您可以使用网络 RHEL 系统角色设置默认网关。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的完整配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp1s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 IPv4 地址 -
    `198.51.100.20`{.literal}，子网掩码为`/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-connection.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with static IP and default gateway
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp1s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-connection.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-connection.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_configuring-a-static-route-using-rhel-system-roles_using-system-roles-to-configure-network-connections}使用 RHEL 系统角色配置静态路由 {.title}
:::
您可以使用网络 RHEL 系统角色配置静态路由。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的完整配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp7s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 IPv4 地址 -
    `198.51.100.20`{.literal}，子网掩码为`/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   静态路由：
    ::: itemizedlist
    -   `192.0.2.0/24`{.literal}，网关为 `198.51.100.1`{.literal}
    -   `203.0.113.0/24`{.literal}，网关为 `198.51.100.2`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 root
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/add-static-routes.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with static IP and additional routes
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
                route:
                  - network: 192.0.2.0
                    prefix: 24
                    gateway: 198.51.100.1
                  - network: 203.0.113.0
                    prefix: 24
                    gateway: 198.51.100.2
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/add-static-routes.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/add-static-routes.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**验证步骤**
-   显示路由表：
    ``` literallayout