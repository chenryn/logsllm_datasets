Android 11
Android 8.1
Android 8.1
Android 6.0
Android 9.0
Qualcomm MSM8953 Snapdragon 625
Intel XMM 7660 (Apple A12 Bionic)
Mediatek MT6739
HiSilicon Kirin 710
HiSilicon Kirin 620
Intel XMM 7560
Not known
iOS 12
–
–
Table 8: List of tested devices
in Figure 7, the NAS layer procedures are shown in black).
Initial attach. After rebooting, the UE performs a radio setup pro-
cedure. After the radio setup the UE establishes communication
through the RRC layer following the RRC Connection Setup. The
UE starts the NAS attach procedure by sending the attach_request
message. After successful authentication through auth_request and
auth_response messages, the MME moves towards the negotiation of
ciphering and integrity algorithms through the security mode com-
mand procedure. At this point, the NAS level security context is
established between the UE and MME, and the selected encryption
and integrity protection algorithms will be applied to subsequent
NAS massages. The MME concludes the attach procedure by send-
ing attach_accept message with a Globally Unique Temporary Identity
(GUTI) and the UE responds attach_complete message. In case the at-
tach cannot be accepted by the network, the MME shall send an
attach_reject message to the UE including an appropriate cause value.
Later we show how this message is utilized to create a transparent
reset for DIKEUE.
Other procedures. The identification procedure is used to know
the identity, in most cases, the International Mobile Subscriber Iden-
tity (IMSI) of the device. The GUTI reallocation procedure is used
by the MME to reallocate a new GUTI to the UE. The procedure
is started by the MME through sending a GUTI_reallocation and the
UEMME......  RRC Security Mode Command/CompletePaging ......NASRRCNASS1APRRCS1APAttach RequestAuthentication Request/ResponseSecurity Mode Command/CompleteRRC Connection Request/      Setup/Complete        RRC Connection Re-configuration/Complete         Attach Accept/CompleteRRC ReleaseUE IdlePaging RRC Connection Request/      Setup/CompleteService RequestGUTI Reallocation Command/CompleteDownlink NAS Transport/ Uplink NAS TransportTracking Area Change...Tracking Area Update/Accept/CompleteeNodeBAttach RejectIdentity Request/ResponseSession 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1096UE acknowledges with a GUTI_reallocation_complete. The tracking area
update procedure is a standalone procedure that occurs either when
the UE detects a new tracking area (TA) or a periodic TA update
timer has expired. The downlink NAS transport procedure can be
used by the network to send an actual SMS message in the NAS
message.
A.1.2 RRC layer procedures. We now briefly discuss the RRC layer
procedures that are most relevant in the context of our paper (shown
in Figure 7, the RRC layer procedures are shown in blue).
RRC setup. RRC setup procedure is the backdrop of the NAS attach
procedure. The purpose of this procedure is to establish an RRC
connection and to transfer the initial NAS dedicated information
message from the UE to the network.
RRC security activation. RRC layer security is established through
the RRC security activation procedure. The procedure is started
through the RRC_sm_command message from the eNodeB and com-
pleted by the RRC_sm_complete message by the UE.
RRC release. This procedure is used by the network to release the
established radio bearers as well as all radio resources to suspend
the RRC connection.
RRC connection reconfiguration. The purpose of this procedure
is to modify an RRC connection, e.g., to establish/modify/release
radio bearers. As part of the procedure, dedicated NAS information
may be transferred from the network to the UE. Usually, after this
RRC procedure the UE completes the initial attach. To begin this
procedure, the network sends an RRC_reconf message which the UE
replies with RRC_reconf_complete to complete the procedure.
RRC Connection Re-establishment. A UE in RRC Connected
state, for which security has been activated, may initiate the pro-
cedure in order to continue the RRC connection. The procedure initi-
ates from the UE with RRC_con_reest_req and completes with RRC_con_reest,
and RRC_con_reest_complete messages.
A.2 Model checker performance in equivalence
checking
For further analysis, on the timing performance of the FSM equiva-
lence checker, for each output pair, we calculate the time required
for the model checker for repeated queries and take the average of
each round. The results are shown in Figure 8. After each round of
queries, a new invariant is added to the model and the search space
is reduced. In case there are multiple traces for the same input,
and output pair, the model checker goes deeper into FSMs and it
requires much more time. This, in return, contributes to the time
of our FSM equivalence checker.
To evaluate the timing performance of the FSM equivalence
checker, we calculate the time required for all the pairwise deviant
checking 5 times and report the average, max, min, and standard
deviation in Table 10. On an average, it takes our FSM equivalence
checker 42 minutes to find all the deviations. Furthermore, the
timing cost of repeated querying to the model checker is shown in
Figure 8.
Figure 8: Time required for each round of nuXmv query
Third generation partnership project
Android Debug Bridge
Commercial Off-The-Shelf
EPS Encryption Algorithm
EPS Integrity Algorithm
Finite State Machine
A.3 ACRONYMS
3GPP
ADB
C-RNTI Cell Radio Network Temporary Identity
COTS
EEA
EIA
FSM
eNodeB Evolved NodeB
EPC
GUTI
IMSI
LTE
MAC
MitM
NAS
OTA
RNTI
RRC
TMSI
SDR
SUL
UE
USIM
Evolved Packet Core
Globally Unique Temporary Identity
International Mobile Subscriber Identity
Long Term Evolution
Message Authentication Code
Man-in-the-Middle
Non Access Stratum
Over-The-Air
Radio Network Temporary Identity
Radio Resource Control
Temporary Mobile Subscriber Identity
Software Defined Radio
System Under Learning
User Equipment
Universal Subscriber Identity Module
A.4 Additional discussion
Parallelization. Parallelizing model learning by distributing differ-
ent membership queries from a learner to different UEs is plausible.
This necessitates complex coordination for maintaining soundness
and efficiency of learning which is, however, challenging when
inconsistencies are detected due to observational nondeterminism
across different instances. In exceptional cases (e.g., a majority of
the UE instances having their timers fire at the same time), In that
case, it will also take a long time to complete the learning because of
the majority voting mechanism culminating in a wrong result. For
this to resolve, learning has to revert back. Restarting the learning
process from the place of the wrong majority voting result, however,
may end up nullifying the performance gain due to parallelization.
These complex cases require more investigation and thus we leave
it as future work.
 5 6 7 8 9 10 11 12 13 14 15 0 2 4 6 8 10Time (seconds)nuXmv RoundsSession 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1097Enable Tracking Area Update
enable_tau
Message
Enable Attach Request
Identity Request
Authentication Request
Security Mode Command
Attach Accept
Tracking Area Update Accept
GUTI Reallocation Command
Downlink NAS Transport
Paging
Authentication Reject
Tracking Area Update Reject
Enable RRC Connection Request
RRC Connection Setup
RRC Security Mode Command
RRC Connection Reconfiguration
Enable RRC Reestablishment
Enable RRC Measurement Report
RRC Connection Reestablishment
RRC UE Information Request
Input Symbols
(After irrelevant message pruning)
Input Symbols (After final optimiza-
tion)
Output Symbols (Λ)
enable_attach
identity_request_replay±
identity_request_plain_text
identity_request_plain_header
identity_request_protected*
auth_request_replay
auth_request_plain_text
auth_request_protected
auth_request_plain_header
sm_command_replay
sm_command_plain_text
sm_command_plain_header
sm_command_protected
sm_command_null_security
attach_accept_protected
attach_accept_replay
attach_accept_plain_text
attach_accept_plain_header
tau_accept_replay
tau_accept_plain_text
tau_accept_protected
tau_accept_plain_header
GUTI_reallocation_replay
GUTI_reallocation_plain_header
GUTI_reallocation_protected
GUTI_reallocation_plain_text
DL_NAS_tansport_replay
DL_NAS_transport_plain_text
DL_NAS_transport_plain_header
DL_NAS_transport_protected
paging
auth_reject
tau_reject
enable_RRC_con
RRC_connection_setup_replay
RRC_connection_setup_plain_text
RRC_connection_setup_protected
RRC_connection_setup_plain_header
RRC_sm_command_replay
RRC_sm_command_protected
RRC_sm_command_plain_text
RRC_sm_command_plain_header
RRC_sm_command_null_security
RRC_reconf_replay
RRC_reconf_plain_text
RRC_reconf_protected
RRC_reconf_plain_header
enable_RRC_reest
enable_RRC_mea_report
RRC_con_reest_replay
RRC_con_reest_plain_text
RRC_con_reest_protected
RRC_con_reest_plain_header
RRC_ue_info_req_replay
RRC_ue_info_req_protected
RRC_ue_info_req_plain_text
RRC_ue_info_req_plain_header
RRC_release
NAS
enable_attach
attach_request
identity_request_plain_text
identity_response
auth_request_plain_text
sm_command_replay
sm_command_plain_text
sm_command_plain_header
sm_command_protected
sm_command_null_security
attach_accept_protected
attach_accept_plain_text
enable_tau
tau_accept_protected
tau_accept_plain_header
auth_response, auth_MAC_failure, auth_seq_failure
sm_complete, sm_reject
attach_complete
tau_request
tau_complete
GUTI_reallocation_replay
GUTI_reallocation_protected
GUTI_reallocation_complete
DL_NAS_transport_protected
UL_NAS_transport
paging
auth_reject
tau_reject
RRC
enable_RRC_con
RRC_connection_setup_plain_text
RRC_connection_setup_plain_header
RRC_sm_command_replay
RRC_sm_command_plain_text
RRC_sm_command_plain_header
RRC_sm_command_protected
RRC_sm_command_null_security
RRC_reconf_replay
RRC_reconf_plain_text
enable_RRC_reest
enable_RRC_mea_report
RRC_con_reest_plain_text
RRC_con_reest_protected
service_request
null_action
null_action
RRC_con_request
RRC_connection_setup_complete
RRC_sm_failure, RRC_sm_complete
RRC_reconf_complete
RRC_con_reest_req
RRC_mea_report
RRC_con_reest_complete, RRC_con_reest_reject
RRC_ue_info_req_protected
RRC_ue_info_req
RRC Connection Release
Table 9: List of input symbols and possible output symbols for each of them. From the input symbols from predicates column
only blue color symbols are included in the optimized input alphabet set.
*Protected implies ¬is_plain_header(m) meaning the message is integrity protected and encrypted
± Replay messages are only true for protected messages, plain text messages do not have sequence numbers and replay pro-
tection
RRC_release
null_action
Max
82.51
Min
13.08
Time (min)
Mean Median
35.975
41.84
Standard deviation
21.3
Table 10: Performance of FSM equivalence checker.
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1098Deviant behavior to automatic exploitation. DIKEUE automat-
ically provides traces depicting the deviant implementation specific
behavior. This is a concrete evidence of either implementation devi-
ating from the specifications or the standards being underspecified
or containing conflicting specifications. Currently, we manually
construct the attack strategies from these traces, which we plan to
automate in the future.
Session 4B: Wireless, Mobile, and IoT CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1099