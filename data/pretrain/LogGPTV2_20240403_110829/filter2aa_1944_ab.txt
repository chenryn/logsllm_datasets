### Introduction
The following document outlines the capabilities and features of the Subterfuge Project, a tool designed to conduct Man-in-the-Middle (MITM) attacks. The tool has been tested on various platforms, including Yahoo, eBay, Amazon, Facebook, and Twitter, demonstrating its ability to intercept and manipulate HTTPS traffic.

### HTTPS Downgrade Attack
In our test cases, the tool was able to steal information transmitted over HTTPS by downgrading sessions from HTTPS to HTTP. During these captures, a victim using the Google Chrome web browser logged into Facebook.com. The credentials were stolen and displayed in plaintext. The only indication of foul play was a URL that read `www.facebook.com` instead of `https://www.facebook.com`. No certificate errors were presented, and the victim was able to log in as usual, making the theft of login information nearly transparent.

### Web Code Injection
The Subterfuge Project includes a modified version of SSLStrip that leverages its web proxy capabilities. This modification allows data to be tampered with before it reaches the victim's browser, enabling the injection of arbitrary code into the victim's browser session. This can range from a simple JavaScript alert message to more complex exploits like ms10_aurora.

### Extensibility and the Framework
Man-in-the-Middle Attacks are not limited to credential fraud, and neither is Subterfuge. While basic usage involves ARP Poisoning on a Local Area Network (LAN), the framework can initiate a variety of attacks. The Plugin System allows for the addition of extra MITM functionalities without the need to develop new security tools from scratch.

### Future Work
There are several areas for future advancement in the Subterfuge framework. At a fundamental level, the framework can be expanded to include additional features to enhance its effectiveness in testing and exploiting vulnerabilities in the ARP protocol. Additionally, the tool can be modified to work as a payload within an exploitation framework like Metasploit, allowing it to silently and transparently harvest credentials on remote networks and report back to a command and control server.

### Current Progress
The Subterfuge Project is currently in its beta phase. Plans for future development include modules for:

- **Session Hijacking**: Allows a user to masquerade as a victim within a hijacked session.
- **Race Conditions**: Enables Subterfuge to return a modified version of a web page containing a browser exploit, leading to arbitrary code execution on the victim's machine.
- **DNS Spoofing**: Provides false DNS information to redirect victims to alternate locations.
- **Wireless AP Suite**: Offers features such as setting up a fake access point to create a MITM situation, and advanced options to spoof networks that victims have previously connected to.
- **Evilgrade Update Exploitation**: Simplifies the process of spoofing an update server, sending malicious payloads to victims.

### OS Compatibility
The beta version of Subterfuge runs on Linux. However, the creation of installer packages for Windows and Mac operating systems will ensure widespread use of the Subterfuge MITM Framework.

### Custom ARP Spoof Tool
The final version of Subterfuge will incorporate a custom-built Python ARP Spoofing Tool using Scapy. This tool will improve performance, increase stealth, and provide better MITM protection avoidance. It will replace ARPSpoof, allowing for more advanced configurations and dynamic options to thwart certain configurations of Cisco’s Dynamic ARP Inspection protection. It will also decrease network load and enable the attack to blend in with normal network traffic.

### Conclusion
The Subterfuge Framework allows users to bypass many security protocols and policies on computer networks with ease, leading to devastating results for victims. Credential harvesting is particularly damaging because the attacker gains legitimate authentication information. The modular structure of Subterfuge makes it highly extensible, and its simplicity and effectiveness should drive its adoption by network security practitioners. If this tool is released to the public, it will highlight the need for the information security community to address the underlying issue of the trusting nature of the Address Resolution Protocol (ARP).

### The GUI
Subterfuge’s web-based GUI uses AJAX and jQuery to leverage user input as commands. It communicates with a Django backend to seamlessly execute the Python code at the core of the project.

### Command Line Interface
The Command Line Interface (CLI) for Subterfuge allows users to quickly configure and run MITM attacks against a network.

### A Potential Solution: VLANs
VLANs can provide network segmentation, which can prevent MITM attacks. Some routers place different hosts on different VLANs, making them independent of MAC addresses and thus preventing ARP Poisoning Attacks. However, if multiple hosts are on the same VLAN, no additional protection is provided.

### Legacy: Demonstrating Need and Spurring Change
There is a clear need for change in routing equipment. While routers that incorporate VLANs and protect against ARP Spoofing exist, they are uncommon. Manufacturers have little incentive to improve their equipment because the average consumer is unaware of the risks. Subterfuge demonstrates the vulnerabilities in ARP so clearly that consumers will start asking, "Does this product protect me from Subterfuge?" This may provide the impetus for manufacturers to adopt existing technologies to protect against ARP Poisoning attacks.

### References
[1] Barber, R. (2011, August 30). Security Science. Retrieved from Computer Fraud & Security Volume 2001, Issue 3.
[2] Kurose, J. and Ross, K. Computer Networking: A Top-Down Approach. 5th Edition. Addison-Wesley. Page 61
[3] Saltzman, R. (2011, August 30). Security Science. Retrieved from OWASP: http://www.security-science.com/pdf/active-man-in-the-middle.pdf
[4] Leitch, S. (2009). Security Issues Challenging Facebook. Retrieved from Edith Cowan University Research Online: http://ro.ecu.edu.au/cgi/viewcontent.cgi?article=1017&context=ism&sei-redir=1#search=%22facebook%20secure%22
[5] Wagner, R. (2011, August 30). Address Resolution Protocol Spoofing and Man-in-the-Middle Attacks. Retrieved from http://savannah.gatech.edu/people/lthames/dataStore/WormDocs/arppoison.pdf
[6] Norton, D. (2011). An Ettercap Primer. SANS Institute, 1-27.
[7] Marlinspike, M. (2011, August 30). Blackhat. Retrieved from http://blackhat.com/presentations/bh-europe-09/Marlinspike/blackhat-europe-2009-marlinspike-sslstrip-slides.pdf
[8] Song, D. (2012, January 1). Dsniff Frequently Asked Questions. Retrieved from http://www.monkey.org/~dugsong/dsniff/faq.html
[9] Ogle, J. and Wagner, E. (2012, March 8). Hotel Network Security: A Study of Computer Networks in U.S. Hotels. Retrieved from http://www.hotelschool.cornell.edu/research/chr/pubs/reports/abstract-14928.html

**Creativity is inventing, experimenting, growing, taking risks, breaking rules, and having fun.**
~ Mary Lou Cook