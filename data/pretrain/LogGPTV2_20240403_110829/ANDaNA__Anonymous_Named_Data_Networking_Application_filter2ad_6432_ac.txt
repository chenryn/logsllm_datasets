low efﬁcient routing of interest packets, the encrypted
component is encoded at the end of the name with both
ﬂavors.
Asymmetric: To issue an interest, a consumer selects
a pair of ARs and uses their public keys to encrypt the
interest, as described above and in Algorithm 1. A con-
sumer also generates two symmetric keys: k1 and k2
that will be used to encrypt the content packet on the
way back. We use Epk(·) and Ek(·) to denote (CCA-
secure) public key and symmetric encryption schemes,
respectively.
To account for the delay due to extra hops needed
to reach the second AR (and reduce the number of dis-
carded interests), a consumer adds half of the estimated
round trip time (RTT) to the innermost timestamp. Each
AR removes the outermost encryption layer, as detailed
in Algorithm 2. Since Epk(·) is CCA-secure, the decryp-
tion process fails if the ciphertext has been modiﬁed in
transit or was not encrypted under the AR’s public key.
Content corresponding to the encrypted interest is en-
crypted on the way back, as detailed in Algorithm 3, us-
7Technically,
in order to guarantee correctness an encryption
scheme suitable for ANDaNA must also be robust [1]. However, since
CCA-secure encryption schemes used in practice are also robust, we
omit this requirement in the rest of the paper.
Algorithm 1: Encrypted Interest Generation
input : Interest int; Set of (cid:96) ARs and their keys:
R = {(ARi, pki) | 0 < i ≤ (cid:96) , pki ∈ PK}
output: Encrypted interest intpki,pkj ; symmetric keys k1, k2
1: Select (ARi, pki), (ARj , pkj ) from R
2: if ARi = ARj or ARi, ARj are from same organization or
ARi, ARj share the same name preﬁx then
Go to line 1
3:
4: end if
5: k1 ← {0, 1}κ ; k2 ← {0, 1}κ
6: eint = AR2/Epkj (int | k2 | curr timestamp + RT T /2)
7: eint = AR1/Epki (eint | k1 | curr timestamp)
8: Output eint, k1, k2
Algorithm 2: AR Handling of Encrypted Interests
input : Encrypted Interest intpki,pkj , where
pki, pkj ∈ PK ∪ {⊥} (where “⊥” denotes “no
encryption”)
output: Interest intpkj ; symmetric key k1
1: (intpkj , k1, timestamp) = Dski (intpki,pkj )
2: if Step 1 fails or timestamp is not current then
3:
4: else
5:
6:
7: end if
Save tuple (intpki,pkj , intpkj , k1) to internal state
Output intpkj , k1
Discard intpki,pkj
Algorithm 3: AR Content Routing
input : Content: datak2 in response to intpkj , where
pkj ∈ PK ∪ {⊥}
where name in intpk2 matches that in datak2
output: Encrypted data packet datak1,k2
1: Retrieve tuple (intpki,pkj , intpkj , k1) from internal state
2: if k2 (cid:54)= ⊥ then Remove signature and name from datak2
3: Create new empty data packet pkt
4: Set name on pkt as the name on intpki,pkj
5: Set the data in pkt as Ek1 (datak2 )
6: Sign pkt with AR’s key
7: Output pkt as datak1,k2
ing Ek(·) and symmetric keys supplied by the consumer.
Session-based Variant.
This variant aims to reduce
(amortize) the use of public key encryption thus lower-
ing the computational cost and ciphertext size. Before
sending any interests through ephemeral circuits, a con-
sumer (Alice) establishes a shared secret key with each
selected AR. This is done via a 2-packet interest/content
handshake. We do not describe the details of symmet-
ric key setup, since there are standard ways of doing
it. We provide two options: one using Difﬁe-Hellman
key exchange [17], and the other – using SSL/TLS-style
protocol whereby Alice encrypts a key for ARi. Once a
symmetric key kai is shared with ARi, Alice can estab-
lish any number of ephemeral circuits using it as either
ﬁrst or second AR hop. Also at setup time, Alice and
ARi agree on session identiﬁer value – sidai – that is in-
cluded (in cleartext) in subsequent interests so that ARi
can identify the appropriate entry for Alice and kai.
The main advantage of the session-based approach
is better performance: both consumers and routers only
perform symmetric operations after initial key setup.
However, one drawback is that, since the session iden-
tiﬁer sid is not encrypted, packets corresponding to the
same sid are easily linkable.
We note that our design neither encourages nor pre-
vents consumers from mixing asymmetric and session-
based variants for the same or different ephemeral cir-
cuits.
4.2 System and Security Model
In order for our discussion to relate to prior work,
we use the notion of “indistinguishable conﬁgurations”
from the framework introduced in [19]; the actual deﬁ-
nitions are in Section 5.
Our security analysis considers the worst case sce-
nario, i.e., interests being satisﬁed by the content pro-
ducer rather than a router’s cache. While, in normal
conditions, encrypted interests are satisﬁed by caches
only in case of packet loss, fully decrypted interests may
not have to reach to content producers. A system se-
cure in case of cache misses is also secure when interests
are satisﬁed by content cached at routers along the way.
(Recall that, when an interest is satisﬁed by a router’s
cache, it is not forwarded any further.) This limits the
adversary’s ability to observe interests in transit.
lowing actions:
Adversary Goals and Capabilities.
The goal of an
adversary is to link consumers with their actions. In par-
ticular, it may want to determine what content is being
requested by a particular user and/or which users are re-
questing speciﬁc content. A somewhat related goal is
determining which cache (if any) is satisfying a con-
sumer’s requests. Our adversary is local and active: it
controls only a subset of network entities and can per-
form any action usually allowed to such entities. More-
over, it is capable of selectively compromising addi-
tional network entities according to its local information.
Our model allows the adversary to perform the fol-
• Deploy compromised routers: ANDaNA is an
open network, therefore an adversary can deploy
compromised anonymizers and regular routers. As
such, routers may exhibit malicious behavior in-
cluding injection, delay, alteration, or drop trafﬁc.
• Compromise existing routers: An adversary can
select any router (either ARs or regular routers) in
the network and compromise it. As a result, the ad-
versary learns all the private information (e.g. de-
cryption keys, pending decrypted interests, cache
content, etc.) of such router.
• Control content producers: Content producers
are not part of ANDaNA. As such, the network has
no control over them. An adversary can compro-
mise existing content producers or deploy compro-
mised ones and convince users to pull content from
them. We also assume that the content providers
are publicly accessible, and therefore the adversary
is able to retrieve content from them.
• Deploy compromised caches: Similarly to com-
promised content producers, an adversary can com-
promise routers’ cache or deploy its own caches.
The behavior of a compromised cache includes
monitoring cache requests and replying with cor-
rupted data.
• Observe and replay trafﬁc: An adversary can tap
a link carrying anonymized trafﬁc. By doing this
it learns, among other things, packet contents and
trafﬁc patterns. The trafﬁc observed by an adver-
sary can be replayed by any compromised router.
An adversary can iteratively compromise entities of its
choice, and use the information it gathers to determine
what should be compromised next.
In order to make
our model realistic, the time required by an adversary
to compromise or deploy a router, a cache or a con-
tent producer is signiﬁcantly higher that the round-trip
time (RTT) of an anonymized interest and correspond-
ing data. This implies that all the state information re-
covered from a newly compromised router only refers to
packets received after the adversary decides to compro-
mise such router.
A powerful class of attacks against anonymizing net-
works is called ﬁngerprinting [29, 41].
Inter-packet
time intervals are usually not hidden in low latency
onion routing networks because packets are dispatched
as quickly as possible. This behavior can be exploited
by an adversary, who can correlate inter-packet intervals
on two links and use this information to determine if
the observed packets belong to the same consumer [41].
This class of attacks is signiﬁcantly harder to execute on
ANDaNA because of the nature of ephemeral circuits and
because of the use of caches on routers. Ephemeral cir-
cuits do not allow the adversary to gather enough pack-
ets with uniform delays since they are used to transport
only one or a very small number of interests and corre-
sponding data. Active adversaries who can control the
communication link of a content provider can add mea-
surable delays to some of the packets in order to identify
consumers. However, consumers may be able to retrieve
the same content through caches making such attack in-
effective. Throughput ﬁngerprinting consists in measur-
ing the throughput of the circuit used by a consumer to
identify the slowest anonymizer in the consumer’s cir-
cuit [29]. Throughput ﬁngerprinting is difﬁcult to per-
form in ANDaNA since each ephemeral circuit does not
carry enough information to mount an attack.
In par-
ticular, the authors of [29] report that a successful at-
tack requires at least a few minutes of trafﬁc on Tor.
Similarly, ephemeral circuits provide an effective pro-
tection against known attacks such as the predecessor
attack [43].
Consumers, Producers and ARs. Each consumer runs
several processes that generate interests. For our analy-
sis, interests are created by a speciﬁc interface of a host,
and the corresponding content is delivered back to the
same interface. Interest encryption is either performed
on the consumer’s host, or on an entity that routes con-
sumer’s trafﬁc. In the latter case, the channel between
the user and the anonymizing entity is considered se-
cure.
Content is generated by producers, i.e., entities that
can sign data. We do not assume the correspondence
between a producer and a particular host. Content can
be either stored in routers’ caches, at servers or dynami-
cally generated in response to an interest.
ARs perform interests decryption and content encap-
sulation. Each AR advertises a public key for signature
veriﬁcation and one or more public keys for encryption.
ARs must refresh their encryption keys frequently, dis-
carding old keys after a short grace period. In order to
simplify key distribution and allow consumer to imme-
diately trust new public keys from routers, we use a sim-
ple key hierarchy where a long lived public key owned
by the router (the signing key), is used to certify short
lived encryption keys. The signing key may be certiﬁed
by other entities using techniques like web-of-trust or
PKI.
Denial-of-service Attacks. ANDaNA is envisioned as a
public overlay network and is clearly susceptible to DoS
attacks. Since anyone can join ANDaNA as an AR or
use it as a consumer, we make no distinction between
insider and outsider attacks. The adversary can send nu-
merous interests to ARs or construct ephemeral circuits
longer than two hops in order to maximize effective-
ness of attacks. Moreover, it can consume AR resources
by sending malformed encrypted interests that require
ARs to perform expensive and ultimately useless public
key decryption. Similar to Tor, before establishing an
ephemeral circuit, an AR can ask a consumer to solve an
easy-to-verify/expensive-to-solve puzzle. This and sim-
ilar techniques for ANDaNA are subjects of future work.
In a setting with long-lived circuits, such as Tor, disrupt-
ing a node effectively shuts down all circuits that include
it. Due to the short lifespan of our ephemeral circuits,
the same attack on ANDaNA only causes a very small
number of interests/data packets per user to be dropped.
Abuse.
Similar to any other anonymity service,
ANDaNA can be abused for a variety of nefarious pur-
poses. We do not elaborate on this topic. However, exit
policies similar to those in Tor [18] can be used with
ANDaNA based on content names.
5 Security Analysis
In this section we propose a formal model for eval-
uating the security of ANDaNA. We deﬁne consumer
anonymity and unlinkability with respect to an adver-
sary within this model. We ﬁnally provide necessary
and sufﬁcient conditions for anonymity and unlinkabil-
ity. As our analysis shows, we are able to obtain a level
of anonymity comparable to Tor with two — rather than
Tor’s three — ARs thanks to the lack of source addresses
in NDN interests.
In general, efﬁcacy of ANDaNA depends on the in-
ability of the adversary to correlate input and output
of a non-compromised AR, and its inability to observe
all producer and consumers at the same time. Since
ANDaNA is designed for low-latency trafﬁc, we do not
intentionally delay messages or introduce dummy pack-
ets, other than some limited padding. This is similar to
how Tor and other low-latency anonymizing networks
forward trafﬁc, and implies that trafﬁc patterns remain
almost unchanged as they pass through the network [31].
It is well known that, in Tor, this allows the adversary
that observes both ends of a communication ﬂow to con-
ﬁrm a suspected link between them [5, 35]. For this rea-
son, a global passive adversary can violate anonymity
properties of both Tor and ANDaNA. However, we be-
lieve that such an adversary is unrealistic in a geographi-
cally distributed network spanning over multiple admin-
istrative domains, and designing against it would result
in overkill.
We assume that any adversary monitoring all inter-
faces of an AR can correlate entering encrypted trafﬁc
with its exiting, decrypted counterpart using timing in-
formation. However, we believe that the short lifespan
of ephemeral circuits – and therefore the limited num-
ber of related packets traveling through a single AR –
severely limits the adversary’s ability to carry out this