title:Tracing and revoking leaked credentials: accountability in leaking
sensitive outsourced data
author:Hua Deng and
Qianhong Wu and
Bo Qin and
Sherman S. M. Chow and
Josep Domingo-Ferrer and
Wenchang Shi
Tracing and Revoking Leaked Credentials:
Accountability in Leaking Sensitive Outsourced Data
Hua Deng
School of Computer
Wuhan University
Wuhan, P. R. China
PI:EMAIL
Qianhong Wu
Academy of Satellite
Application, Electronic &
Information Engineering
Beihang University, China
PI:EMAIL
Sherman S. M. Chow
Department of
Information Engineering
Chinese University of
Hong Kong, Hong Kong
PI:EMAIL
Josep Domingo-Ferrer
Department of Computer
Engineering and Mathematics
Universitat
Rovira i Virgili, Catalonia
PI:EMAIL
Bo Qin
School of Information
Renmin University of China
Beijing, P. R. China
PI:EMAIL
Wenchang Shi
School of Information
Renmin University of China
Beijing, P. R. China
PI:EMAIL
ABSTRACT
There have been increasing security concerns on the data
stored in clouds. Most existing proposals mainly aim at
guaranteeing that the outsourced data are only accessible
to authorized requestors who have the access credentials.
This paper investigates a trace-and-then-revoke mechanism
of illegal access credential distribution, which serves as an
a posteriori approach to complement existing a priori solu-
tions for securing outsourced data. Our system for tracing
and revoking leaked access credentials, TRLAC, has the fol-
lowing desirable properties: (1) the tracing procedure can
trace at least one dishonest user who illegally distributed an
access credential for decryption; (2) the tracing procedure
is run in a black-box manner; and (3) the tracing proce-
dure does not heavily rely on cooperation from the cloud
service provider. Once the dishonest users have been found,
a revocation mechanism can be called to deprive them of ac-
cess rights. We formally prove the security of TRLAC and
conduct theoretical and experimental analyses. The results
show that the system is secure and eﬃcient to be employed
in cloud storage, and, surprisingly, the introduction of the
tracing feature incurs little outsourcing and access costs.
Categories and Subject Descriptors
E.4 [Data]: Public Key Cryptosystems
Keywords
Cloud computing; Data security; Access control; Credential
leakage tracing
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590342 .
1.
INTRODUCTION
In recent years, cloud computing has emerged as one of the
most promising computing paradigms and attracted signiﬁ-
cant interest in both academia and industry. For example,
it has already been used in many applications such as live
media [33], distributed cooperative work [34], neural net-
work learning [38], mobile health monitoring [19], etc.
In
the context of data storage, a user can outsource a huge
amount of data to a cloud server maintained by a cloud
service provider (CSP). Both the user and any authorized
peers can access (and process) the outsourced data from any-
where anytime. In this way, users can obtain storage and
computing resources on demand without local hardware and
software maintenance burden.
Security and privacy are widely recognized to be one of the
main barriers for the public to accept cloud computing ([31,
21]). Numerous existing approaches (to be reviewed in Sec-
tion II) have been proposed, but most of them are a priori or
only provide outsider security in the sense that only those
who hold some appropriate access credentials can retrieve
the data in plaintext. This is insuﬃcient since the insid-
ers who hold the access credentials may be hacked or may
simply intentionally leak the credentials for other beneﬁts.
Unfortunately, few eﬀorts have been made to facilitate dig-
ital forensics analysis of access credential leakage, although
it is crucial to obtain electronic evidence to bring the case
in a court of law [15]. Countermeasures should be adopted
to trace and then revoke the compromised secret keys to
minimize the exposure risks to future data. This observa-
tion motivates us to investigate an a posteriori approach to
enhance the access control over outsourced data.
Our contribution includes the following aspects. We pro-
pose a generic framework for tracing and revoking leaked
access credentials (TRLAC) to enhance access control over
data outsourced to clouds, which provides a mechanism to
ﬁnd which credentials have been leaked. We instantiate our
framework with a concrete TRLAC scheme by extending an
existing identity-based broadcast encryption [11] and lever-
aging optimal ﬁngerprint codes [24] to encode each autho-
rized user’s access credential (which is the decryption key for
the encryption system). In our TRLAC system, users are
organized in diﬀerent groups and given access credentials as-
sociated with their groups’ identities and ﬁngerprint codes.
Before outsourcing data, the data owners can encrypt them
by specifying a set of groups in which the members can ac-
cess their data. When credential leakage has occurred, even
if multiple credentials are embedded in a pirate decoder box,
a tracing procedure can be run in a black-box manner (with-
out knowing how the illegal access credential was produced)
to trace at least one compromised key among those used
to create the decoder box. The tracing procedure does not
require the help of the CSP, who may not even know that
a tracing procedure has been invoked. When compromised
access credentials are found out by the tracing procedure,
the owners can revoke the privileges associated to those cre-
dentials for accessing the outsourced data.
We conduct a thorough analysis of the proposed TRLAC
scheme. Its security is formally reduced to the security of
the collusion resistance of the underlying ﬁngerprint codes
and the semantic security (against chosen-plaintext attacks)
of the identity-based broadcast encryption scheme. We also
perform a comprehensive performance evaluation. Both the
theoretical analysis and the experimental results conﬁrm
that our scheme can trace illegal access credentials with-
out introducing almost any extra cost to ﬁle creation and
access procedures in cloud storage. Even the cost of the
user admission procedure, which is much aﬀected by the
introduction of tracing, is pretty acceptable to a powerful
key distribution center. The revocation mechanism only re-
quires few computations and we will show empirically that
it is very cost-eﬀective. These advantageous features make
our scheme an outstanding solution to secure sensitive data
that are being outsourced to untrusted clouds.
The rest of this paper is organized as follows. Section 2
reviews the related work in the literature. Section 3 presents
our TRLAC framework and a threat model. We present
our TRLAC construction in Section 4.
In Section 5, the
security of TRLAC is formally analyzed. We evaluate the
performance of our TRLAC system both theoretically and
experimentally in Section 6. Section 7 concludes the paper.
2. RELATED WORK
It is essential for the owners to validate that their data are
kept intact to guarantee availability. Seb´e and Domingo-
Ferrer et al. [27] identiﬁed the requirements to remotely
check integrity of the data stored in a third party. Ate-
niese et al. [1] proposed a model of provable data possession
(PDP) and realized the ﬁrst PDP scheme. In PDP, privacy
concerns have also been studied. The auditing scheme in [32]
enables a third party auditor (TPA) to simultaneously per-
form multiple auditing tasks, without letting the TPA know
the possibility of inferring the data being audited. For en-
terprise uses, anonymity of the uploader also matters, and
that is achieved with the help of a security-mediator in [31],
without letting the mediator link the upload to the identity
of the user, or learn the data being uploaded.
One way to allow only authorized users to access the ser-
vice is authentication. Chow et al. [9] proposed SPICE,
a simple privacy-preserving identity-management for cloud
environment, which provided various features such as del-
egatable veriﬁcation from one CSP to another CSP, yet
not covered by previous privacy-preserving authentication
schemes. Qin et al. [26] proposed an identity-based ad-
mission scheme which simultaneously enables access right
proofs and privacy-preserving data uploads. Even though
cryptographic solutions are employed, it requires trusting
the server to act according to the authentication results.
The standard way to achieve data privacy is to encrypt
the data before they are outsourced. The users allowed to
access the digital content are given access credentials which
are usually secret keys enabling decryption of the encrypted
data. Some early works (e.g., [28]) adopt traditional public
key encryption, such as RSA, to ensure data storage se-
curity in cloud computing, which can be cumbersome re-
garding key management and validation of the public keys
of the receivers before encryption. To circumvent these
problems, Boneh and Franklin proposed the ﬁrst practical
identity-based encryption (IBE) [3], in which the users’ pub-
lic keys are their identities, such as email addresses or tele-
phone numbers. Waters [35] proposed the ﬁrst fully-secure
and eﬃcient IBE scheme in the standard model.
In the
one-to-many encryption scenario, Delerabl´ee [11] presented
an identity-based broadcast encryption (IBBE) to enable a
sender to encrypt his data once by specifying a set of iden-
tities so that the receivers with the speciﬁed identities can
decrypt the same ciphertext. Recent works ([21, 22, 36])
have employed attribute-based encryption to provide ﬂexi-
ble and ﬁne-grained access to encrypted data, although this
is achieved by sacriﬁcing to some extent the eﬃciency of
encryption and decryption.
The encryption of outsourced ﬁles should allow users to
retrieve selected items without downloading and decrypting
the entire ﬁles and then searching locally. This challenging
requirement is usually satisﬁed with searchable encryption
schemes. For some of the latest works with special focus
on the outsourced cloud scenario, Yu et al. [37] presented
a searchable encryption scheme to provide suﬃciently accu-
rate search; Li et al. [20] proposed ranked keyword search-
able encryption to enhance the relevance of the returned
search results; and Cao et al. [7] proposed privacy-preserving
queries over encrypted graph-structured data.
All the aforementioned works only provide a priori ap-
proaches to secure outsourced data. While it is challeng-
ing to enforce digital forensics analysis in cloud computing
due to the separation of the data ownership and its phys-
ical access control, some eﬀorts have been made to trace
leaked decryption keys in a multi-receiver scenario. To ﬁnd
the traitors who leaked decryption keys in broadcast en-
cryption environments, Boneh et al.
([5, 6]) constructed
two schemes built from composite-order bilinear groups to
achieve full collusion resistance. In view of the low eﬃciency
of composite-order bilinear groups, Garg et al.’s construc-
tion [12] is built in prime-order bilinear groups to achieve
more eﬃcient encryption and decryption. Liu et al. [16] pro-
posed in attribute-based encryption environments a traitor
tracing mechanism executed in white-box manner, which can
only capture weak attacks where dishonest users directly
disclose their access credentials. Subsequently, Liu et al.
constructed black-box traceable attribute-based encryption
schemes ([17, 18]) from the Boneh et al.’s constructions ([5,
6]). Thus their schemes also suﬀer from low eﬃciency due to
the composite-order bilinear groups, and the ciphertexts are
sub-linear with the number of total users in system. Boneh
and Naor [4] proposed a paradigm to equip public key cryp-
tosystems with the traitor tracing functionality by exploiting
ﬁngerprint codes. This paradigm supports shorter cipher-
texts and thus it is very suitable for cloud storage systems
when it comes to saving storage space. By applying this
paradigm, Guo et al. [14] presented a tracing mechanism
with short ciphertexts and decryption keys in identity-based
encryption environments.
The issue of leakage of sensitive data in cloud comput-
ing has already attracted some attention. Chow et al. [8]
proposed a dynamic secure provenance scheme which can
record the data ownership as an evidence if there is a dis-
pute later. Tan et al. [30] presented an auditing method-
ology that enables tracking data transferred out of clouds,
and provides a countermeasure in case of data leakage. Pap-
pas et al. [25] proposed a CloudFence framework to provide
data owners with tracking capabilities to independently au-
dit the treatment of their data. Zhang et al. [39] investigated
the threat of leaking data in clouds and presented rule-based
data provenance tracing algorithms to detect actual oper-
ations that have been performed on ﬁles, especially those
which can harm data conﬁdentiality.
When decryption keys are compromised and then revoked,
countermeasures should be taken to prevent access to the
encrypted data that were previously decryptable by the re-
voked keys. Proxy re-encryption (PRE), ﬁrst formulated
by [2], enables a proxy to re-encrypt a ciphertext under
Alice’s public key to a ciphertext under Bob’s public key,
without revealing the underlying message. Green and Ate-
niese [13] and Chu and Tzeng [10] then extended PRE to
identity-based proxy re-encryption (IB-PRE), which allows
an arbitrary string to be used as the public key of a user,
so that a certiﬁcate authority is not required. While pro-
viding such useful properties, PRE and IB-PRE require a
proxy that cannot be fully trusted to enforce re-encryption;
if the proxy is compromised, users risk their data to be ex-
posed. The group signature scheme proposed in [23] also al-
lows membership revocation, but it only focuses on revoking
the anonymity of the signed message rather than revoking
the private keys.
In contrast to the previous researches, we study tracing
leakage of access credentials (equivalent to decryption keys)
in cloud storage and we propose a generic framework for
this purpose. We leverage optimal ﬁngerprint codes to en-
code the decryption keys (assigned to the authorized users)
in identity-based broadcast encryption, so that the leaked
keys can be traced with the unique ﬁngerprints. We also
conduct formal security proofs of the proposed scheme and
perform overhead analysis theoretically and experimentally.
We aim to provide a thorough study of the eﬀect of intro-
ducing tracing of leaked keys on storing conﬁdential ﬁles in