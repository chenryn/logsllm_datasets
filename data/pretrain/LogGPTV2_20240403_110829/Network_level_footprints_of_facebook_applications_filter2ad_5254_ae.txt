applications, we conclude that 𝑑𝑓 constitutes negligible overhead.
(2) Per-application OSN request forwarding delays increase lin-
early with request size. Figure 12 shows that for each application,
𝑑𝑓 increases steadily as request sizes increase. Note that for every
user request to a third-party application, Facebook appends a list of
user speciﬁc parameters to the URL request. Facebook then calcu-
lates a hash of the appended parameters and forwards the modiﬁed
request to the application server. We are not privy to any additional
tasks performed on incoming user requests, and expect that the con-
sistent increase in 𝑑𝑓 is due to transmission delays internal to the
Facebook network. Note also in Figure 12 that plots for individual
applications never overlap or cross. Even though the differences
are of a few milliseconds for small request sizes, these differences
amplify towards larger request sizes. The differences in delays,
however, are not correlated with application popularity.
(3) Per-application OSN request forwarding delays do not vary
with load (request arrival rate). We also analyzed the time varia-
71tion in 𝑑𝑓 , from Dec 27th 2008 to Jan 23rd 2009, for the various
request sizes. We were unable to observe a relationship with third-
party application usage and 𝑑𝑓 . Even though 𝑑𝑓 ﬂuctuated between
times of day and across days, the difference was not appreciable
(per-request size) nor consistent (across weeks). However, we can-
not relate the absence of a pattern in 𝑑𝑓 to overall Facebook Plat-
form usage through our measurements, as they account for only a
fraction of overall trafﬁc on Facebook.
Concluding Remarks: Forwarding delays are fairly small when
request sizes are between 0–1Kb. They also do not vary consis-
tently with application usage (load) and increase only linearly with
increasing request sizes. These delays hence do not have an appre-
ciable effect on users’ interactions with third-party applications.
6.3 OSN Response Processing Delays
Being the intermediary, Facebook parses responses from third-
party application servers before forwarding them to the users, which
incurs additional processing delays (𝑑𝑔). The extent of this delay
may be affected by content type, content size, and characteristics
of target entity.
A key feature of the Facebook Developer Platform is its Face-
book Markup Language (FBML). It facilitates application develop-
ers through quick information rendering for application responses
(through FBML tags), and it disallows use of most traditional Java-
script features and other HTML content considered insecure for
end-users. We study the impact of requesting (allowed) HTML,
Javascript, and other FBML content on 𝑑𝑔 through a number of ex-
periments. In the following, we summarize key observations with
corresponding details of our ﬁndings.
(1) Processing HTML content takes signiﬁcantly less time than
processing Javascript. We compared 𝑑𝑔 for HTML and Javascript
contents by using 200Kb of random HTML and 26Kb of Javascript
content in application responses. Our results show that 𝑑𝑔 for HTML
content was signiﬁcantly smaller (0.01ms/byte) compared to 0.04
ms/byte for Javascript. These stark differences in 𝑑𝑔 exist since
Facebook must ensure legitimacy of every portion of the Javascript
content before forwarding it to the client, Javascript being a more
sophisticated language to verify than HTML. Note that we use mil-
liseconds per byte to make a fair comparison without the bias of
content size.
(2) OSN response processing delay for FBML content targeting
non-user entities is unaffected by the target’s popularity. It also
remains consistent with time. We consider 𝑑𝑔 for FBML tags tar-
geting Facebook networks (non-user entities). In our experiments
with FBML network tags, we compared 𝑑𝑔 values by targeting
Facebook networks with high and low popularity. We used the
applications’ user base to estimate the popularity of the 15,015 to-
tal Facebook networks. We compare 𝑑𝑔 values for processing 250
FBML network tags targeting randomly chosen networks out of
3,000 most popular and 3,000 least popular Facebook networks.
We found that 𝑑𝑔 values for 250 FBML network tags were around
310ms, regardless of networks’ popularity. Furthermore, this pro-
cessing delay did not vary with time in measurements from Dec
27, 2008 to Jan 20, 2009. We had expected FBML network tag
processing delays to be small, due to the small number (15,015)
of total Facebook networks. However, we expected this delay to
vary with overall Facebook Platform usage (i.e., with time of day).
The lack of the latter result is plausible in the presence of a caching
mechanism for FBML tags. We later conﬁrmed this caching be-
havior for FBML network tags by running experiments targeting
the same networks in quick succession.
A vital set of FBML tags target various content (i.e., name, pro-
ﬁle picture, user status) for Facebook users. Given the sheer size
y
a
l
e
D
g
n
i
r
e
d
n
e
R
N
S
O
)
s
d
n
o
c
e
s
i
l
l
i
m
(
2000
1800
1600
1400
1200
1000
800
600
400
200
New York, NY
fb:user−status
fb:user−status cached
fb:profle−pic
fb:profile−pic cached
fb:name
fb:name cached
Greece
London, UK
South Africa
Facebook Network
Figure 13: OSN processing delays (𝑑𝑔) for 250 FBML user tags
targeting users in various Facebook networks. Measurements
taken from Jan 23-25, 2009 evening periods, through User Z on
Hugged. Results were similar for other user accounts and ap-
plications as well. The vertical bars denote minima and max-
ima for the averaged measurements.
of data Facebook must store for its users, one may expect some
form of data segregation to speed up processing delays at the OSN.
We expected this segregation to occur mainly along three lines:
(1) by user geography, represented by a Facebook network, (2) by
user popularity, represented by total mutual Facebook friendships,
and (3) by type of content for the user (name, proﬁle picture, user
status). The following results compared 𝑑𝑔 values for these user-
related FBML tags along these lines of possible data segregation.
(3) FBML user tag processing delays do not vary with target
users’ popularity and network membership. If data on Facebook
is segregated by user geography, membership in a regional Face-
book network should translate into different 𝑑𝑔 values for users in
more popular networks and for users in less popular networks. We
performed experiments with 250 FBML user tags using ﬁve, vari-
ably sized Facebook regional networks, both inside and outside the
U.S.12 Our measurements for 𝑑𝑔 (from Jan 18 – 25, 2009) did not
show any appreciable variation for 𝑑𝑔 across these networks. We
repeated experiments for FBML user tags targeting Facebook users
with different numbers of Facebook friends—measurements (from
the six applications we study) show that the average user has 35
friends, with a standard deviation of 65. To capture different ranges
of popularity of users, we target users with 15 to 50, 400 to 600, and
1,000 to 5,000 friends. Contrary to our expectations, 𝑑𝑔 was similar
(average difference of less than 15ms) across the different ranges
of Facebook friends for the various FBML user tags.
(4) FBML user tag processing times vary with type of FBML tag.
FBML proﬁle picture tags take the longest, whereas FBML user
status tags take the shortest times. We compared 𝑑𝑔 values for
FBML name, proﬁle picture, and user status tags. The results seg-
regated by target user geography (Facebook network), are shown
in Figure 13. The ﬁgure shows that while FBML name tag pro-
cessing delays are around 1, 000ms, delays due to FBML proﬁle
picture and FBML user status tags are about 1, 350ms and 450ms,
respectively. These differences in 𝑑𝑔 are quite stark and consistent
in our measurements. To understand the reason for the high 𝑑𝑔 val-
12The highest contributor to Facebook in terms of number of users.
72ues for FBML proﬁle picture tags, we examined a sample of 100
public Facebook proﬁles across a university network and a regional
network. We found that on average, each Facebook user has 3.64
proﬁle pictures. Facebook blogs [15] indicate that Facebook stores
four different sizes of each user’s proﬁle pictures. This requires a
more elaborate storage mechanism for proﬁle pictures on Facebook
(as compared to, say, users’ real names and dates of birth), and the
high number of total proﬁle pictures explains the higher process-
ing delay for FBML proﬁle picture tags. Furthermore, a user’s
status on Facebook must be updated more often than, say, their
real names and proﬁle pictures. For the 208 Facebook friends of
User Z, we found that users, on average, updated their status more
than twice a day. Because of this higher frequency of updates, user
statuses might require a different read/write mechanism. Lacking
knowledge of the internal Facebook provisioning and architecture,
we surmise this difference is due to a more efﬁcient storage/update
mechanism for Facebook users’ statuses.
(5) Data caching has signiﬁcant effect on FBML tag processing
To gauge the effect of caching on 𝑑𝑔 for FBML user
delays.
tags, we repeated experiments for each FBML user tag in quick
succession with the same set of target Facebook users. The result in
Figure 13 (lower delays for subsequent experiments) demonstrates
that caching of FBML user tags plays signiﬁcant role in repeated
accesses to the same target user’s data, and that content fetches
for our measurements are not all being performed using databases.
Hence caching signiﬁcantly affects our ability to estimate 𝑑𝑔.
Furthermore, among all the experiments reported here, we did
not ﬁnd appreciable (nor consistent) variation in 𝑑𝑔 for requests
made through PL nodes in different geographical locations and
through users with varying popularity13. We thus believe Facebook
does not prioritize user requests based on geography or user pop-
ularity. This is plausible considering the very heavy usage of data
caching on Facebook [15].
(6) OSN response processing time increases linearly with num-
ber of FBML tags. The increased delays show no appreciable
variation across third-party applications and target user charac-
teristics. We measured variation in 𝑑𝑔 using 100 to 1,000 FBML
tags. Figure 14 shows results for FBML name tags for target users
in the large New York Facebook network, as well as small regional
networks such as Pakistan and UAE, alongside results for mixed
networks. We observe an almost linear increase in 𝑑𝑔 from 100 to
1,000 FBML tags, with minor (10ms) differences for different net-
works (that were inconsistent across time). This result suggests that
Facebook does not parallelize processing of FBML tags within in-
dividual requests, which could signiﬁcantly decrease 𝑑𝑔. Moreover,
this trend is common across our applications with similar results for
𝑑𝑔. While the lack of appreciable variation in 𝑑𝑔 across applica-
tions may hint at a lack of application-wise resource provisioning,
caching at the OSN hampers efforts to ascertain this conjecture.
(7) OSN response processing delays vary with time of day but are
not consistent with application usage (load). To examine the ef-
fect of 𝑑𝑔 with actual application load, we compared 𝑑𝑔 values
for the 300 FBML user tags across different times of day (morn-
ings or evenings) from Dec 27, 2008 to Jan 23, 2009. The results
for FBML name tags are shown in Figure 15. Similar to 𝑑𝑓 , we
were unable to ﬁnd a relation with application usage and 𝑑𝑔 for
FBML tags. Note that even though our applications are among the
most popular on Facebook, their trafﬁc may not have been sub-
stantial enough to overwhelm Facebook’s resource provisioning at
any particular time in our trace. Contrary to our ﬁnding for 𝑑𝑓 ,
however, we observe that 𝑑𝑔 values were higher, on average, for
13In terms of number of OSN friends.
y
a
l
e
D
g
n
i
r
e
d
n
e
R
N
S
O
)
s
d
n
o
c
e
s
i
l
l
i
m
(
2500
2000
1500
1000
500
0
Mixed Networks
New York, NY
Pakistan
UAE
100
200
300
400
500
600
Number of Tags
700
800
900
1000
Figure 14: OSN processing delays (𝑑𝑔) for different number
of FBML name tags for users in networks with varied popu-
larity. ‘Mixed networks’ are chosen from 5,000 random users
on Hugged. The New York network is the most popular with
243,162 users on Hugged, followed by UAE with 12,187 and
Pakistan with 6,213 users. Measurements were taken Jan 18-
22, 2009 through User Z on Hugged. Results were similar for
other user accounts and applications as well. The vertical bars
denote minima and maxima for the averaged measurements.
morning (busy) periods and lower for evening periods on the same
days, barring Jan 3, 2009, which appears to be an anomaly whose
cause cannot be ascertained given our PL experiments utilize only
a minute fraction of Facebook’s resources. However, this anomaly
did not occur because of CPU consumption on the PL nodes. To
make the distinction between morning and evening periods clear,
we only show results for days with complete experiment results
(Figure 15).
(8) OSN response processing delays are a signiﬁcant chunk of
total time per user request to third-party applications, for both
realistic average workloads and hypothetical scenarios with vary-
ing size of content. Our previous experiments quantiﬁed 𝑑𝑓 and
𝑑𝑔 for the various hypothetical cases on Facebook. We observed
that while 𝑑𝑓 values are merely 130ms (on average), 𝑑𝑔 values can
be quite signiﬁcant, and vary appreciably with type of content. To
gauge 𝑑𝑔 for real scenarios, we modeled the average workload for
the most visited pages on the six Facebook applications. The aver-
age workload for each application is brieﬂy described below:
∙ Hugged, Holiday Cheers, iSmile, My Angels: Two FBML
name tags and one FBML proﬁle picture tag for 25 Facebook users,
with 80Kb of HTML content and 2Kb of Javascript. The average
workload for all of these applications was similar, differing by one
or two targeted users.
∙ The Streets: One FBML name tag and one FBML proﬁle pic-
ture tag for 25 Facebook users, with 15Kb of HTML content and
0Kb of Javascript.
∙ Pound Puppies: Two FBML name tags and one FBML proﬁle
picture tag for 6 Facebook users each, with 3Kb of Javascript and
25Kb of HTML content.
𝑑𝑔 are:∙ The Streets: 𝑑𝑔 = 44.4% of 1.30s total time.
∙ Hugged: 𝑑𝑔 = 68.8% of 2.21s total time.
∙ Pound Puppies: 𝑑𝑔 = 59.9% of 1.77s total time.
Using these deﬁnitions of average workload, our calculations for
73Content Processed
HTML (200Kb)
Javascript (26Kb)
Avg. Total Time
3.63s
1.99s
Number of Tags
FBML Tags
Name
Proﬁle Picture
User Status
Network Link
25
1.1s
1.11s
1.05s
1.02s
50
1.2s
1.25s
1.10s
1.03s
100
1.35s
1.51s
1.14s
1.05s
150
1.54s
1.75s
1.23s
1.07s
200
1.63s
1.97s
1.29s
1.09s
250
1.81s
2.3s
1.38s
1.1s
Avg. Processing Delay
49.8%
66.3%
Number of Tags
50
25
150
100
250
36.4% 40.5% 47.4% 53.4% 56.4% 60.6%
35.8% 43.3% 52.8% 58.9% 63.7% 68.6%
32.5% 35.6% 37.8% 42.3% 45.1% 48.6%
31.8% 31.2% 32.6% 32.7% 33.5% 33.9%
200
Table 2: Response processing delays as fractions of average total time for user requests for different types of content. The HTML
content was generated randomly. The reported delays have 𝑑𝑝=4ms.
y
a