still effective to stop spam? and How does the choice of the
greylisting threshold affect the delivery of normal emails?.
Is it true that greylisting causes more harm than good? and
ﬁnally, according to our experiments is there a way to use
greylisting to maximize its advantages and reduce its negative
impact?
III. DATASETS AND EXPERIMENTAL
SETUP
In order to measure the efﬁcacy of the two main anti-
spamming techniques analyzed in our study we collected
four different datasets. The ﬁrst two of them are assembled
from the zmap scans.io project [39] and are used to evaluate
the prevalence of nolisting servers. In particular, we used
the DNS Records (ANY) dataset and the Daily Full IPv4
SMTP Banner Grab and StartTLS zmap results. The ﬁrst
dataset contains a DNS lookup for all the domain names
as a results of other types of scans, such as reverse DNS
scan or HTTP requests. This dataset contains 135 millions of
resolved domains. As reported in the ofﬁcial documentation,
the data was collected by issuing a DNS query of type ALL,
even though for our purposes we limited the analysis to the
A and MX records (i.e., mail server query). Since the original
dataset contained several MX records that were not properly
resolved we implemented a parallel scanner to resolve the
missing entries. These missing entries can be found in case
a DNS query is issued to resolve a mail server IP address
(i.e., a MX record) and the reply for this query only contains
the domain name of the mail server but not its IP address.
Consequently the DNS needs to look up again the mail server
564
Malware Family
Cutwail
Kelihos
Darkmailer
Darkmailer(v3)
Total Botnet Spam
Total Global Spam
Percentage of
Botnet Spam in 2014 [12]
46.90%
36.33%
7.21%
2.58%
93.02%
70.69%
Number of
Samples
3
6
1
1
11
Using
nolisting 0.52%
TABLE I: Malware samples used in our experiments
47.73%
One MX
record
domain for obtaining the ﬁnal IP address. The second dataset
for the nolisting analysis contains instead the list of all IPv4
hosts which responded to a SYN packet on port 25. We
labeled those IP hosts as SMTP servers.
For the second set of experiments on the greylisting
technique we built a different dataset. This dataset is used
the impact of the threshold of the waiting time
to test
set by the greylisting method. In particular,
this dataset
contains data collected for over four months (from January
to April 2015) and represents the anonymized log entries
of the mail server of the Computer Science department of
Univerist`a degli Studi di Milano, where greylisting protection
is in use. More in details, this dataset contains, for each
greylisted message, the time of each attempted delivery from
the client. The time between consecutive attempts depends
on the particular conﬁguration of the client MTA software.
The values contained in this dataset depend on the threshold
time of Greylisting mechanism. In our case we considered
the threshold of the mail server of our university, that was
set to 300 seconds.
The last dataset is used to measure the effectiveness
of greylisting and nolisting and contains a set of malware
samples, in form of executable binaries, that belong to the
top malware families responsible for the generation of the
majority of the SPAM on the Internet. A similar distribution
was also reported in 2009 by John et al. [20] in their study of
spamming botnets. In order to collect the malware samples
we proceed in the following way. First of all, based on the
regular reports published by antivirus companies (such as the
Symantec Threat Report 2014 [12]), we identiﬁed the top
four families that contribute to over the 90% of the botnet
spam trafﬁc. Since 76% of the world spam was sent from
botnets, the chosen families account for more than the 70%
of the global spam sent in 2014.
Afterward, we collected the hashes of the malware sam-
ples which belong to those four families from security public
reports and we downloaded the corresponding executable
binaries from several public repositories, including VirusTo-
tal [7], VirusShare [6] and malwr [8]. When possible, we
retrieved several samples of the same family, to account for
possible variations or parallel versions that were active during
the same time period.
After the collection phase, we performed a malware
analysis phase in which each sample was analyzed in an in-
strumented environment composed by two VirtualBox virtual
machines: a Mail Server VM and an Infected VM. The ﬁrst
machine run Postﬁx (and Postgrey for the greylisting tests),
on top of the latest Debian stable, while the second ma-
45.97%
Not using
nolisting
5.78%
DNS
misconf.
Fig. 2: Nolisting mail server statistics
chine run a vanilla Windows 7 installation equipped with
few custom modiﬁcations to block the most common anti-
virtualization techniques adopted by current malware [9],
[26]. All the SMTP trafﬁc produced by each sample was
routed from the infected VM to the Mail Server VM by in-
tercepting all the DNS MX requests and replying with some
bogus MX entries which resolved to our virtual machine.
Each sample was run in a controlled environment for 30
minutes, a sufﬁcient time that permitted us to monitor the
behavior of the malware sample and observe the generated
spam trafﬁc. After this test, we populated our dataset with
only those samples that generated spam trafﬁc in the assigned
analysis period. In Table I we report
the four families
that we were able to analyze, and the number of samples
we collected for each family. Even though the number of
samples collected by our analysis is limited, it is important to
note that according to the Symantec report the spam-related
functionality of each sample in our dataset is representative
for the whole family the malware belong to.
IV. NOLISTING
We start our analysis of nolisting by measuring its global
adoption, i.e., how many email servers on the Internet use
nolisting as a spam protection mechanism. We then move to
answer the most important question: “Is it really effective to
stop spam?”.
A. Worldwide Adoption of Nolisting
First of all, it is important to note that while we often refer
to an individual server protected by nolisting, the protection
is actually applied at the DNS level, and therefore at the
domain granularity. Therefore, as described in Section III,
in order to estimate the number of domains which adopt
nolisting, we combined two datasets obtained by using the
zmap tool [13]: the DNS Records (ANY) (hereinafter simply
565
DNS scan) and the IPv4 SMTP Banner Grab (hereinafter
SMTP scan).
Evaluating whether a domain implements nolisting is a
three step process. First of all, we retrieve from the DNS
scan all the MX records associated with all existing domains
and check their correctness. We then resolve the IP address
of each record, ordered by their priority. Finally, we look-
up the IPs in the SMTP scan dataset to verify whether the
IP in question was accepting SMTP connections at the time
the scan was performed. If the primary MX server is not
present in our list and the secondary is, the domain is a
possible candidate for implementing nolisting. However, it
is also possible that the primary email server was simply
malfunctioning at the time the dataset was collected. To
address this possibility and minimize the errors in our results,
we repeated the same measurement twice, two months apart,
on February 28 and April 25, 2015. If one domain had the
primary email server operational in at least one of the two
datasets, we concluded that it was not using nolisting. If
the primary server was not responding in both cases but the
secondary did, we assumed that the domain was protected
by nolisting (or it had a persistent problem with its primary
record, which is in practice equivalent to nolisting).
Overall, our approach covered 42.6 million email servers,
which resolved to over 49.2 million non-unique IP addresses.
As one would expect, the difference between the two exper-
iments was very small, with a change of only 0.01% in the
number of domains adopting nolisting.
The ﬁnal results are summarized in Figure 2. The pie
chart shows that nearly half (47.8%) of the domains are con-
ﬁgured with only one MX record and the other half (45.9%)
used more than one record but did not use nolisting. For over
5% of the domains we encountered a DNS misconﬁguration,
e.g., we were not able resolve any MX record. Finally, only
0.52% of the domains had (in both scans) a non-responding
email server with the highest priority and a responding one
as a secondary email server. While this percentage may
seem small, it still accounts for over 133 thousand domains.
Moreover, these domains are not necessarily associated to
small companies. In fact, by crosschecking our results with
the domain popularity reported by Alexa [1], we found that
nolisting is adopted by one domain in the top-15 worldwide
ranking, by two in the top-500 and by other two in the top-
1000.
B. Impact on Spam Delivery
With few very large companies and hundred of thousands
of other installations worldwide, we can certainly conclude
that the adoption of nolisting is not negligible. Therefore,
with no previous studies on this subject, it becomes ex-
tremely important
to assess its effectiveness in reducing
spam, and to study whether malware writers adapted to this
technique.
As explained in Section III, we conducted a number
of experiments using the four families that according to
Symantec were responsible for the vast majority of spam
messages in 2014. All the SMTP trafﬁc generated by the
samples was redirected towards our server, whose DNS
SAMPLE
Cutwail:
sample1
sample2
sample3
Kelihos:
sample1
sample2
sample3
sample4
sample5
sample6
Darkmailer:
sample1
Darkmailer(v3):
sample1
GRAYLISTING
NOLISTING






















TABLE II: Effect of nolisting and greylisting on popular
malware families. A  sign indicates that the technique
was effective in preventing the spam messages from being
delivered. A  sign means instead that the technique was
ineffective against that malware family.
server was conﬁgured for this experiment to use nolisting.
In particular, for every MX request it provided an answer
containing two records with different priorities. The primary
record resolved to a machine without a SMTP server, while
the secondary record pointed to a working SMTP machine.
Each malware sample was executed in isolation, and after
each execution we inspected the network traces and the email
server logs to correctly identify the behavior of the family
under analysis. As a ﬁrst result of our experiments we noticed
that all malware samples belonging to the same family shared
the same behavior with respect to nolisting. In other words,
we did not encounter any variations inside the same family
that suggested that the authors modiﬁed the email message
delivery implementation of the malware.
The results of the experiments are summarized in Ta-
ble II. The table shows that nolisting is effective against
one family (Kelihos) but it is currently ineffective against
Cutwail and Darkmailer. Since Kelihos alone is
responsible for over 36% of the botnet-generated spam
messages on the Internet, this already shows that in 2015
nolisting still has a positive impact in reducing spam. How-
ever, knowing whether a technique works is not sufﬁcient if
we do not understand the reason. In fact, it is possible to