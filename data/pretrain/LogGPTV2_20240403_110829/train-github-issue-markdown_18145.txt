# Feature request
`next` creates a `webpack` config and it'd be nice to have access to that.
## Is your feature request related to a problem? Please describe.
Certain other tools, such as `react-styleguidist`, need to know how `webpack`
is configured to work. But `next` abstracts this away and doesn't put it
together until it spins up, so just `require`'ing a static file won't work.
So, `styleguidist` can't share the `webpack` config that `next` uses.
## Describe the solution you'd like
Ideally, it'd be something like the existing `next/whatever` imports.
    const getWebpackConfig = require('next/webpack');
    const webpackConfig = getWebpackConfig({ /* Some information on which one to get (client, server, build, dev) */ });
## Describe alternatives you've considered
It's entirely possible to make an alternative `webpack.config.js`, but there's
no guarantee that it'll stay in sync between versions or with add-on's, and it
requires knowledge of what `next` is doing behind the scenes.
Another idea was to have `next.config.js` write the config to a file on
require, but that can't copy over the functions and class instances in the
config, since they are not serializable.
Since it's not bundled, stuff from `next` can be selectively required to kinda
get the config
    const loadConfig = require('next-server/next-config');
    const getBaseWebpackConfig = require('next/dist/build/webpack-config').default;
    const config = loadConfig(__dirname);
    getBaseWebpackConfig(__dirname, {config, entrypoints: {}}).then(webpackConfig =>
      console.log('Config GET!', webpackConfig),
    );
but that's messy, incomplete, depends on internals, asynchronous, and can
entirely break for any number of reasons.
## Additional context