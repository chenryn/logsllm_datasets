AirPods客户端异构附件名分析 
前⾔ 
嘶吼发了⼀篇⾏业资讯（ https://www.4hou.com/posts/jJAP ），⾥⾯提到AirPods客户端特定附件
名显示不正确问题，攻击者可以让客户端对异常构造的附件名称显示不正确，这种不正确显示会导
致客户端⽤户误打开恶意附件内容。
⽂中也提到影响版本：AirPods客户端3.0.5以上（含），3.1.0.303（不含）以下版本。
所以我们就根据披露的这点⽂字信息，来分析下该问题吧。
漏洞分析 
在下载站找到了⼀个历史版本的安装包（cmclient_3.0.7-155_amd64.exe），安装⼀下即可。
根据已有信息，我们⾸先要明⽩怎样的⽂件名会让⽤户端打开触发，我们⾃⼰构建⼀份带附件的邮
件导出为eml⽂件。
这⾥附件使⽤的是jpg格式，⽤客户端打开eml⽂件，发现附件双击是可以直接打开的，并没有任何
的提示：
那我们再换成exe⽂件看看是否有这个功能：
如下图所示，当附件为exe⽂件时则没有双击可以直接打开的功能，⽽变成了双击另存为：
所以根据资讯信息，我们⼤致能猜到该问题的⽅向是出在了filename这个部分，也就是通过构建让
客户端显示为jpg⽂件，也就有了双击打开的功能，⽽实际打开的⽂件则是exe。
那么这⾥其实就跟Web⽂件上传⼀样，在⽂件名处去构建，NTFS⽂件流、各种符号都尝试⼀下，
发现不⾏。
并且使⽤URL编码的⽅式发⾏，客户端并不会去解码：
那么顺着编码看下去，⾕歌 content-disposition filename url encoding ，顺着找到⼀篇⽂
章：https://stackoverflow.com/questions/93551/how-to-encode-the-filename-parameter-of-
content-disposition-header-in-http
⾥⾯提到返回给浏览器的响应头中，可以将原先的 filename=value 字段变为 filename*=utf-
8''value 格式，前者value编码是不会解码的，⽽后者value浏览器是会⾃动解码的。
并且这个格式是RFC 6266标准中提到的：https://datatracker.ietf.org/doc/html/rfc6266#section-
4.1
在4.3节（ https://datatracker.ietf.org/doc/html/rfc6266#section-4.3 ）也提到两者的区别就是编
码的⽀持：
编码的规范定义在RFC 5987中，⾥⾯也有对应的示
例：https://datatracker.ietf.org/doc/html/rfc5987#section-3.2.2
所以最终我们可以理出这样的格式，其中⽅括号包裹起来的就是可选项：
同理，AirPods客户端本质上就是⼀个浏览器，所以我们构建如下的⽂件字段内容：
打开该邮件，客户端显示为jpg附件：
key*=[charset_encode]'[language]'value
1
Content-disposition: attachment; filename*=''123.exe%00123.jpg
1
但是双击打开，却是以exe形式，并且我们通过ProcessHacker可以看到⽂件的路径：
它是以exe形式存储
在 C:\Users\xxx\AppData\Roaming\Cm\CMClient\temp\noview\acc_0\mail_1658895394\attach\123.ex
e ⽬录下。
路径梳理 
简单总结梳理⼀下路径：
1. 邮件查看，附件以图⽚形式显示；（解码）
2. 双击附件，附件会转储到 Cm\CMClient\temp\noview ⽬录下，但是由于00截断，所以只保存了
前半部分；
3. CreateProcessW打开指定⽂件进程。
触发问题 
⽹传该问题可以⾃动触发，不需要双击附件，我在分析过程中并没有发现这样的功能。但是在⾼版
本的客户端内发现了有类似Webview的功能，没有具体分析，如果可以⾃动触发的话，⼤概率是
Webview渲染的时候⾃动打开了⽂件（file协议），⼤家有什么新的想法欢迎补充。