既然核心是个文件，要制作这个文件给系统使用则需要编译，既然要有编译，当然就得要有源代码啊！ 那么源代码怎么来？基本上，依
据你的 distributions 去挑选的核心源代码来源主要有：
原原本本 distribution 提提供供的的核核心心源源代代码码文文件件
事实上，各主要 distributions 在推出他们的产品时，其实已经都附上了核心源代码了！ 不过因为目前数据量太庞大，因此 SRPM 默认
已经不给映射站下载了！主要的源代码都放置于下面的网站上：
全部的 CentOS 原始 SRPM：http://vault.centos.org/
CentOS 7.1 的 SRPM：http://vault.centos.org/7.1.1503/
CentOS 7.x 开始的版本中，其版本后面会接上释出的日期，因为 CentOS 7.1 是 2015/03 释出的，因此它的下载点就会是在 7.1.1503
啰！1503 指的就是 2015/03 的意思～ 你可以进入上述的网站后，到 updates 目录下，一层一层的往下找，就可以找到 kernel 相关的 SRPM
啰！
你或许会说：既然要重新编译，那么干嘛还要使用原本 distributions 释出的源代码啊？真没创意～ 话不是这么说，因为原本的
distribution 释出的源代码当中，含有他们设置好的默认设置值， 所以，我们可以轻易的就了解到当初他们是如何选择与核心及模块有关的各项
设置项目的参数值， 那么就可以利用这些可以配合我们 Linux 系统的默认参数来加以修改，如此一来， 我们就可以“修改核心，调整到自己喜
欢的样子”啰！而且编译的难度也会比较低一点！
取取得得最最新新的的稳稳定定版版核核心心源源代代码码
虽然使用 distribution 释出的核心 source code 来重新编译比较方便，但是，如此一来， 新硬件所需要的新驱动程序，也就无法借由原
本的核心源代码来编译啊！ 所以啰，如果是站在要更新驱动程序的立场来看，当然使用最新的核心可能会比较好啊！
Linux 的核心目前是由其发明者 Linus Torvalds 所属团队在负责维护的，而其网站在下面的站址上，在该网站上可以找到最新的 kernel
信息！不过，美中不足的是目前的核心越来越大了 （linux-3.10.89.tar.gz 这一版，这一个文件大约 105MB 了！），所以如果你的 ISP 连外很
慢的话，那么使用台湾的映射站台来下载不失为一个好方法：
核心官网：http://www.kernel.org/
交大资科：ftp://linux.cis.nctu.edu.tw/kernel/linux/kernel/
国高中心：ftp://ftp.twaren.net/pub/Unix/Kernel/linux/kernel/
保保留留原原本本设设置置：：利利用用 patch 升升级级核核心心源源代代码码
如果 （1）你曾经自行编译过核心，那么你的系统当中应该已经存在前几个版本的核心源代码， 以及上次你自行编译的参数设置值才
对； （2）如果你只是想要在原本的核心下面加入某些特殊功能， 而该功能已经针对核心源代码推出 patch 补丁文件时。那你该如何进行核心
源代码的更新，以便后续的编译呢？
其实每一次核心释出时，除了释出完整的核心压缩文件之外，也会释出“该版本与前一版本的差异性 patch 文件”， 关于 patch 的制作我
们已经在第二十一章当中提及， 你可以自行前往参考。这里仅是要提供给你的信息是，每个核心的 patch 仅有针对前一版的核心来分析而已，
所以，万一你想要由 3.10.85 升级到 3.10.89 的话，那么你就得要下载 patch-3.10.86, patch-3.10.87, patch-3.10.88, patch-3.10.89 等文件，然
后“依序”一个一个的去进行 patch 的动作后， 才能够升级到 3.10.89 喔！这个重要！不要忘记了。
同样的，如果是某个硬件或某些非官方认定的核心添加功能网站所推出的 patch 文件时，你也必须要了解该 patch 文件所适用的核心版
本，然后才能够进行 patch ，否则容易出现重大错误喔！这个项目对于某些商业公司的工程师来说是很重要的。 举例来说，鸟哥的一个高中同
学在业界服务，他主要是进行类似 Eee PC 开发的计划，然而该计划的硬件是该公司自行推出的！ 因此，该公司必须要自行搭配核心版本来设
计他们自己的驱动程序，而该驱动程序并非 GPL 授权，因此他们就得要自行将驱动程序整合进核心！如果改天他们要将这个驱动程序释出，
那么就得要利用 patch 的方式， 将硬件驱动程序文件释出，我们就得要自行以 patch 来更新核心啦！
在进行完 patch 之后，你可以直接检查一下原本的设置值，如果没有问题， 就可以直接编译，而不需要再重新的选择核心的参数值，这
也是一个省时间的方法啊！ 至于 patch file 的下载，同样是在 kernel 的相同目录下，寻找文件名是 patch 开头的就是了。
其实，不论是从 CentOS 官网取得的 SRPM 或者是从 Linux kernel 官网取得的 tarball 核心源代码，最终都会有一个 tarball 的核心源代码
就是了！ 因此，鸟哥从 linux kernel 官网取得 linux-3.10.89.tar.xz 这个核心文件，这个核心文件的源代码是从下面的网址取得的：
ftp://ftp.twaren.net/pub/Unix/Kernel/linux/kernel/v3.x/linux-3.10.89.tar.xz
核核心心源源代代码码的的解解压压缩缩与与放放置置目目录录
鸟哥这里假设你也是下载上述的链接内的文件，然后该文件放置到 /root 下面。由于 Linux 核心源代码一般建议放置于 /usr/src/kernels/
目录下面，因此你可以这样处理：
[root@study ~]# tar -Jxvf linux-3.10.89.tar.xz -C /usr/src/kernels/
此时会在 /usr/src/kernels 下面产生一个新的目录，那就是 linux-3.10.89 这个目录啰！ 我们在下个小节会谈到的各项编译与设置，都必须
要在这个目录下面进行才行喔！好了，那么这个目录下面的相关文件有啥咚咚？ 下面就来谈谈：
核核心心源源代代码码下下的的次次目目录录
在上述核心目录下含有哪些重要数据呢？基本上有下面这些东西：
arch ：与硬件平台有关的项目，大部分指的是 CPU 的类别，例如 x86, x86_64, Xen 虚拟支持等；
block ：与区块设备较相关的设置数据，区块数据通常指的是大量储存媒体！还包括类似 ext3 等文件系统的支持是否允许等。
crypto ：核心所支持的加密的技术，例如 md5 或者是 des 等等；
Documentation ：与核心有关的一堆说明文档，若对核心有极大的兴趣，要瞧瞧这里！
drivers ：一些硬件的驱动程序，例如显卡、网卡、PCI 相关硬件等等；
firmware ：一些旧式硬件的微指令码 （固件） 数据；
fs ：核心所支持的 filesystems ，例如 vfat, reiserfs, nfs 等等；
include ：一些可让其他程序调用的标头 （header） 定义数据；
init ：一些核心初始化的定义功能，包括挂载与 init 程序的调用等；
ipc ：定义 Linux 操作系统内各程序的沟通；
kernel ：定义核心的程序、核心状态、线程、程序的调度 （schedule）、程序的讯号 （signle） 等
lib ：一些函数库；
mm ：与内存单元有关的各项数据，包括 swap 与虚拟内存等；
net ：与网络有关的各项协定数据，还有防火墙模块 （net/ipv4/netfilter/*） 等等；
security ：包括 selinux 等在内的安全性设置；
sound ：与音效有关的各项模块；
virt ：与虚拟化机器有关的信息，目前核心支持的是 KVM （Kernel base Virtual Machine）
这些数据先大致有个印象即可，至少未来如果你想要使用 patch 的方法加入额外的新功能时， 你要将你的源代码放置于何处？这里就能
够提供一些指引了。当然，最好还是跑到 Documentation 那个目录下面去瞧瞧正确的说明， 对你的核心编译会更有帮助喔！
什么？核心编译还要进行前处理？没错啦！事实上，核心的目的在管理硬件与提供系统核心功能，因此你必须要先找到你的系统硬件，
并且规划你的主机未来的任务，这样才能够编译出适合你这部主机的核心！所以，整个核心编译的重要工作就是在“挑选你想要的功能”。 下面
鸟哥就以自己的一部主机软/硬件环境来说明，解释一下如何处理核心编译啰！
鸟哥的一部主机硬件环境如下 （在虚拟机中，通过 /proc/cpuinfo 及 lspci 观察）：
CPU：Intel（R） Xeon（R） CPU E5-2650
主板芯片组： KVM 虚拟化仿真的主版 （Intel 440FX 相容）
显卡： Red Hat, Inc. QXL paravirtual graphic card
内存： 2.0GB 内存
硬盘： KVM Virtio 界面磁盘 40G （非 IDE/SATA/SAS 喔！）
网卡： Red Hat, Inc Virtio network device
硬件大致如上，至于这部主机的需求，是希望做为未来在鸟哥上课时，可以通过虚拟化功能来处理学生的练习用虚拟机。 这部主机也是
鸟哥用来放置学校上课教材的机器，因此，这部主机的 I/O 需求须要好一点，未来还需要打开防火墙、 WWW 服务器功能、FTP 服务器功能
等，基本上，用途就是一部小型的服务器环境啰。大致上需要这样的功能啦！
了解了硬件相关的数据后，我们还得要处理一下核心源代码下面的残留文件才行！假设我们是第一次编译， 但是我们不清楚到下面载下
来的源代码当中有没有保留目标文件 （*.o） 以及相关的配置文件存在， 此时我们可以通过下面的方式来处理掉这些“编译过程的目标文件以及
配置文件”：
[root@study ~]# cd /usr/src/kernels/linux-3.10.89/
[root@study linux-3.10.89]# make mrproper
请注意，这个动作会将你以前进行过的核心功能选择文件也删除掉， 所以几乎只有第一次执行核心编译前才进行这个动作，其余的时
刻，你想要删除前一次编译过程的残留数据， 只要下达：
[root@study linux-3.10.89]# make clean
因为 make clean 仅会删除类似目标文件之类的编译过程产生的中间文件，而不会删除配置文件！ 很重要的！千万不要搞乱了喔！好
了，既然我们是第一次进行编译，因此，请下达“make mrproper”吧！
不知道你有没有发现 /boot/ 下面存在一个名为 config-xxx 的文件？那个文件其实就是核心功能列表文件！ 我们下面要进行的动作，其实
就是作出该文件！而我们后续小节所要进行的编译动作，其实也就是通过这个文件来处理的！ 核心功能的挑选，最后会在
/usr/src/kernels/linux-3.10.89/ 下面产生一个名为 .config 的隐藏文件， 这个文件就是 /boot/config-xxx 的文件啦！那么这个文件如何创建呢？你
可以通过非常多的方法来创建这个文件！ 常见的方法有：[1]
make menuconfig
最常使用的，是文字模式下面可以显示类似图形接口的方式，不需要启动 X Window 就能够挑选核心功能菜单！
make oldconfig
通过使用已存在的 ./.config 文件内容，使用该文件内的设置值为默认值，只将新版本核心内的新功能选项列出让使用者选择， 可以简化
核心功能的挑选过程！对于作为升级核心源代码后的功能挑选来说，是非常好用的一个项目！
make xconfig
通过以 Qt 为图形接口基础功能的图形化接口显示，需要具有 X window 的支持。例如 KDE 就是通过 Qt 来设计的 X Window，因此你如
果在 KDE 画面中，可以使用此一项目。
make gconfig
通过以 Gtk 为图形接口基础功能的图形化接口显示，需要具有 X window 的支持。例如 GNOME 就是通过 Gtk 来设计的 X Window，因此
你如果在 GNOME 画面中，可以使用此一项目。
make config
最旧式的功能挑选方法，每个项目都以条列式一条一条的列出让你选择，如果设置错误只能够再次选择，很不人性化啊！
大致的功能选择有上述的方法，更多的方式可以参考核心目录下的 README 文件。鸟哥个人比较偏好 make menuconfig 这个项目啦！
如果你喜欢使用图形接口， 然后使用鼠标去挑选所需要的功能时，也能使用 make xconfig 或 make gconfig ，不过需要有相关的图形接口支
持！ 如果你是升级核心源代码并且需要重新编译，那么使用 make oldconfig 会比较适当！
通通过过既既有有的的设设置置来来处处理理核核心心项项目目与与功功能能的的选选择择
如果你跟鸟哥一样懒，那可以这样思考一下。既然我们的 CentOS 7 已经有提供它的核心设置值，我们也只是想要修改一些小细节而
已， 那么能不能以 CentOS 7 的核心功能为底，然后来细部微调其它的设置呢？当然可以啊！你只要这样做即可：
[root@study linux-3.10.89]# cp /boot/config-3.10.0-229.11.1.el7.x86_64 .config
# 上面那个版本请依据你自己的环境来填写～
接下来要开始调整啰！那么如何选择呢？以 make menuconfig 来说，出现的画面会有点像这样：
Tips
注意，你可能会被要求安装好多软件，请自行使用 yum 来安装喔！这里不再介绍了！ 另外：“不要再使用 make mrproper ”喔！因为我们已
经复制了 .config 啊！使用 make mrproper 会将 .config 删除喔！
图24.2.1、make menuconfig 核心功能挑选菜单示意图
看到上面的图示之后，你会发现画面主要分为两大部分，一个是大框框内的反白光柱，另一个则是下面的小框框， 里面有 select, exit
与 help 三个选项的内容。这几个元件的大致用法如下：
“左右方向键”：可以移动最下面的 , , 项目；
“上下方向键”：可以移动上面大框框部分的反白光柱，若该行有箭头 （--->） 则表示该行内部还有其他细项需要来设置的意思；
选定项目：以“上下键”选择好想要设置的项目之后，并以“左右键”选择  之后， 按下“ Enter ”就可以进入该项目去作更进一步的细
部设置啰；
可挑选之功能：在细部项目的设置当中，如果前面有 [ ] 或  符号时，该项目才可以选择， 而选择可以使用“空白键”来选择；
若为 [*]  则表示编译进核心；若为  则表示编译成模块！ 尽量在不知道该项目为何时，且有模块可以选，那么就可以直接选择为模