enable teams and organizations to accelerate their cloud-native capabilities with Observability.
AWS Cloud
DevOps pipeline
Amazon Amazon Amazon Amazon
EKS S3 ECS CloudFront
Engineers Git
repo
AWS Amazon Amazon Amazon
Lambda API Gateway Kinesis SNS
Security by Trend Micro Cloud One
security logs and
MELT MELT MELT MELT
misconfigurations
Observability by
On the top left, engineers develop software by composing applications and storing artifacts
in a Git repository. The applications go into a DevOps CI/CD pipeline where they are released
to different environments. In each environment, the application is tested and promoted to
the next environment where the resources and application are deployed to production.
Trend Micro provides security at each of these different stages. An integrated development
environment (IDE) plugin surfaces information and findings while a developer still has context.
The source repository is continuously scanned, and issues are surfaced with instructions for
the developer to resolve the issue and associated pull-request for one-click mitigation.
28
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Standardized metrics/logs/traces AWS Cloud
Containers
Earlier we looked at the importance of
unified logging and standardization.
sidecar
Amazon EKS Amazon ECS
AWS Lambda functions
AWS Distro for
OpenTelemetry AWS Lambda layer
AWS Lambda
In this diagram, you start with ADOT—for containers, you use the sidecar pattern and for AWS Lambda
you use AWS Lambda layers. As a reminder, OpenTelemetry is a collection of tools, APIs, and SDKs.
You can use it in your solution to instrument, generate, collect, and export telemetry data such as
metrics, logs, and traces to help you analyze your software’s performance and runtime behavior.
All of this happens asynchronously within
OpenTelemetry milliseconds. By using events it doesn’t have to be a
1:1 relationship—a single message could be sent to
millions of mobile de#vi ceIs tnhast tarae slubls crirbeedq. uired packages for instrumentation and to support
application instrumentation tracing with AWS X-Ray
$ pip install opentelemetry-distro[otlp]>=0.24b0 \
opentelemetry-sdk-extension-aws~=2.0 \
Instrumenting an application for opentelemetry-propagator-aws-xray~=1.0
# Automatically install supported Instrumentors for the
traces, metrics, and logs is typically
application's dependencies
a straightforward process: Install the
$ opentelemetry-bootstrap --action=install
SDK, bootstrap the instrumentation, $ OTEL_PROPAGATORS=xray \
and launch the application with the OTEL_PYTHON_ID_GENERATOR=xray \
opentelemetry-instrument python3 ./path/to/your/app.py
OpenTelemetry wrapper.
The example diagram uses auto-instrumentation for Python. There are auto-instrumentation libraries
for Java, Node.js, Ruby, .NET, and Python. Plus, there are SDKs for all major languages, frameworks,
and application servers. A few examples include Spring, Express, and Flask. This example focuses
on traces, but for metrics and logs the process is similar: Import the appropriate SDK, set some
environment variables, and call metric or logging methods for OpenTelemetry.
29
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
OpenTelemetry
for Amazon EKS
After instrumenting the
application, you will need
a collector and exporter.
Luckily this is also fairly
straightforward when
using ADOT.
Amazon EKS has a feature for add-ons: Software that provides operational capabilities in an Amazon
EKS cluster that make it easy for users to operate production-grade clusters in a stable and secure
manner. ADOT support for Amazon EKS is done through an add-on.
You would launch this container and associated configuration as a sidecar on Amazon EKS. Then any
logs, metrics, and traces would be configured to send data to the collector, which would take care of
routing it to the configured destination.
OpenTelemetry
for AWS Lambda
For AWS Lambda, AWS
provides a managed layer
for ADOT Python, which
is a plug-and-play user
experience by automatically
instrumenting an AWS
Lambda function.
To enable auto-instrumentation for an AWS Lambda function:
1. Open the AWS Lambda function you intend to instrument in the AWS console
2. In the Layers in Designer section, choose Add a layer
3. Under specify an ARN, paste the layer ARN, and then choose Add
4. Add the environment variable for the LAMBDA EXECTION WRAPPER and set it to /opt/otel-instrument
30
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Security guardrails with IDE security plugin
Trend Micro Cloud One
Here is an example of a plugin that has
been initiated, performed a manual scan
In the solution architecture we’ve been reviewing,
of a template, and issued an associated
Trend Micro Cloud One’s security guardrails start
report. Notice in the report that risks are
with the developer and are applied at every step
ranked by risk level. The resource flagged
of the software delivery lifecycle. At the workstation, an
has additional information and details
IDE plugin provides fast feedback for developers. In the
on how to mitigate or correct the risk.
code repository, Trend Micro is continuously scanning on
check-ins, such as pull-requests, as well as any time new
vulnerabilities are added to the list of threats.
Within CI/CD, common vulnerabilities and exposures
are checked in the application, container configuration,
and images. Additionally, best practices are also checked
as part of Configuration as Code (CaC) scanning when
using Micro Trend CloudFormation, CDK, or Terraform.
Even after applications are deployed, Trend Micro
continuously checks environments against AWS best
practices. This ensures that drift and risks outside the
CI/CD pipeline are flagged and mitigated.
Git repository CI/CD AWS Cloud
Template Scanner
Deploy
Amazon API Gateway
AWS AWS AWS
Serverless
CodeCommit CodeBuild CodePipeline
Protecting AWS Lambda function AWS Lambda function AWS Lambda
Function 1
Lambda layer Storages
Business logic
Application security
Amazon S3
3311
©© 22002233,, AAmmaazzoonn WWeebb SSeerrvviicceess,, IInncc.. oorr iittss aaffffiilliiaatteess.. AAllll rriigghhttss rreesseerrvveedd..
Open-source
vulnerabilities
Trend Micro also integrates
with your Git repository to
provide Observability into
threats that have been
committed to code.
In this example,
Trend Micro Cloud One
automatically detects
the language and package
manager for the project.
Risk levels are applied and
guidance for correcting the
issue is provided for each
risk identified.
Details about the risk are
on the top screen.
As a developer, you know that getting a list of a few dozen risks
Proactive fixes
doesn’t really help much if you don’t have the time to address
them. This is why Trend Micro issues a pull-request with the fix
already implemented in code, so you only need to check the pull
request, review the change, and merge.
32
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Trend Micro Cloud One built-in security checks
Here is an example of a notification sent by the Trend Micro Cloud One platform for resources that failed
the best practice guardrail checks. On the left is a notification that the configuration for an Amazon
Simple Storage Service (Amazon S3) bucket is missing access logging.
The right-hand example shows a security group has allowed connections to SSH port 22 from anywhere.
The notice raises an alert to an engineer to correct the risk. Trend Micro has over 600 built-in checks.
Fast feedback to development team
The Trend Micro Cloud One
Git
AWS Cloud
repository CI/CD platform also includes checks in
Instances / Virtual Machines
the CI/CD pipeline. Checks in the
Template Scanner
pipeline provide fast feedback to
AWS Serverless/Lambda/Fargate/Containers developers about issues and how
CodeCommit
AWS CodeBuild CodeA PW ipS e line Deploy to address those issues. The CI/CD
Lambda function AWS Lambda checks can also test container
(save the template
s ac sa an nn ae rr t r ife as cu tl )ts Storages templates, container images,
AWS
CloudFormation Amazon S3 AWS CloudFormation templates,
Template
Amazon S3 Terraform templates, open-source
vulnerabilities, and more.
Template Scanner
through the APIs
33
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Sumo Logic Now that we’ve looked at security Observability and how it’s incorporated into
quick setup the solution, let’s turn our attention to end-to-end application Observability.
Amazon EKS DATA COLLECTION ENRICHMENT
Amazon RDS
Host metrics
Host metrics
Elastic Load Balancing
Region
Amazon
AWS Lambda CloudWatch
Namespace
AWS
Amazon DynamoDB
CloudTrail Entity
Amazon API Gateway
Setting up Sumo Logic to quickly provide insights is done through an AWS CloudFormation template,
which is a simple form that sets up the collection of data from an AWS account. Data from Amazon
CloudWatch and AWS CloudTrail are streamed to Sumo Logic and tagged with metadata about
where on AWS the data originated. Because the setup is done through AWS CloudFormation,
collection of newly provisioned AWS resources is automated to save your team valuable time.
You might be wondering why the example solution has Sumo Logic even though we have Amazon
CloudWatch. The reason is that applications in cloud-native are composed of many different services
from both AWS and AWS Partners. To get an end-to-end picture you need to bring in telemetry data
from all different sources—not just AWS. As an example, cloud-native applications that take credit
card payments, tend to use a third-party gateways.
If you are troubleshooting or working to improve performance, you’ll want to have visibility into
those different services, whether they are on AWS or third-party services. Sumo Logic enables you
to centralize and correlate all the different data sources into one tool.
Software development optimization
Out of the box, Sumo Logic provides several dashboards to
get you started. On this screen is an example of the DevOps
research and assessment (DORA) dashboard. The research has
identified four key metrics, which are deployment frequency,
lead time for changes, mean time to recover, and change failure
rate. These metrics provide teams with a way to benchmark
their performance in comparison to other companies.
34
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Observability for developers
Sumo Logic’s Observability platform for developers reduces downtime and solves
customer-impacting issues faster by pulling all of your application data—including logs, metrics,
and traces—from across the entire development lifecycle. Sumo Logic’s integrated analytics
platform seamlessly correlates system issues.
The example on this screen shows several KPIs with color-coded visuals to draw attention to areas
that merit investigation.
The main point?
Observability means getting the full picture of how the business
is doing by correlating all the different streams of data.
35
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Transaction tracing
This is an example of the Sumo Logic Tracing interface, which enables teams to monitor and
troubleshoot transaction execution and performance across a distributed application environment.
Tracing data is fully integrated with logs, metrics, and metadata in order to provide a seamless
end-to-end experience during the process of managing and responding to production incidents,
and to reduce downtime by streamlining root cause analysis. Sumo Logic Tracing supports the
OpenTelemetry standards and is included in ADOT to collect distributed tracing data.
Unified Observability?
Sumo Logic Observability combines logs, metrics, and trace datasets into a single platform and
leverages an entity model that enables users to correlate signals between logs, metrics, and traces
as they go from an alert to root cause. These entities are discovered automatically from the metadata
across logs, metrics, and traces generated by the application and its infrastructure.
36
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Sumo Logic security Information and event management (SIEM)
To tie the Trend Micro Cloud One and Sumo Logic services together, the SIEM becomes the
central hub into which all things security-related are reported. The Trend Micro security
events are sent to the Sumo Logic SIEM to provide a single-pane-of-glass experience.
Threat investigation dashboard
The cloud SIEM ingests and analyzes security telemetry and event logs, but also
reassembles network traffic flows into rich protocol-level network sessions, extracted files,
and security information. Analysts can see raw network traffic details, related connections,
and protocol activity, and gain visibility into East/West network traffic. Sumo Logic’s deep
library of cloud API integrations can pull security telemetry directly from sources such as
VMware Carbon Black, Okta, and AWS GuardDuty.
37
© 2023, Amazon Web Services, Inc. or its affiliates. All rights reserved.
Recap: Observability solution architecture
Let’s review the example Observability solution we have created.
We started with the AWS Cloud and ADOT for instrumentation, standardization, and collection of MELT
data. Then we added Trend Micro for Security Observability and setting guardrails and checks all the way
from the developer, through the CI/CD pipeline, and into the deployed resources in the AWS account.
Lastly, we talked about end-to-end Observability on the Sumo Logic platform—how Sumo Logic brings
all the different sources of telemetry data into a single unified experience. Regardless of whether that
data is from AWS, on-premises, or third-party services, Sumo Logic brings it all together into a single
pane of glass for any role in your organization.
AWS Cloud
DevOps pipeline
Amazon Amazon S3 Amazon Amazon
EKS ECS CloudFront
Engineers Git repo
AWS Amazon API Amazon Amazon
Lambda Gateway Kinesis SNS
Security by Trend Micro Cloud One
security logs and
MELT MELT MELT MELT
misconfigurations
Observability by
3388
©© 22002233,, AAmmaazzoonn WWeebb SSeerrvviicceess,, IInncc.. oorr iittss aaffffiilliiaatteess.. AAllll rriigghhttss rreesseerrvveedd..
Continue your journey with AWS Marketplace
Trend Micro Cloud One and Sumo Logic can be used to build a well-engineered approach to Observability
for your AWS applications. Establishing these capabilities can provide a strong foundation for continuing
to advance through your cloud native journey. You can get started with these tools and others across the
DevOps landscape today in AWS Marketplace.
To get started, visit: https://aws.amazon.com/marketplace/solutions/devops
AWS Marketplace Over 13,000 products from 3,000+ vendors:
Third-party research has found that customers
using AWS Marketplace are experiencing an
average time savings of 49 percent when needing
to find, buy, and deploy a third-party solution.
And some of the highest-rated benefits of using
AWS Marketplace are identified as:
Time to value Buy through AWS Billing using
flexible purchasing options:
• Free trial
Cloud readiness • Pay-as-you-go
of the solution • Hourly | Monthly | Annual | Multi-Year
• Bring your own license (BYOL)
• Seller private offers
• Channel Partner private offers
Return on
Investment
Deploy with multiple deployment options:
• AWS Control Tower
Part of the reason for this is that AWS
• AWS Service Catalog
Marketplace is supported by a team of solution
• AWS CloudFormation (Infrastructure as Code)
architects, security experts, product specialists,
• Software as a Service (SaaS)
and other experts to help you connect with the
• Amazon Machine Image (AMI)
software and resources you need to succeed
• Amazon Elastic Container Service (ECS)
with your applications running on AWS. • Amazon Elastic Kubernetes Service (EKS)
3399
©© 22002233,, AAmmaazzoonn WWeebb SSeerrvviicceess,, IInncc.. oorr iittss aaffffiilliiaatteess.. AAllll rriigghhttss rreesseerrvveedd..
Get started today
Visit aws.amazon.com/marketplace to find, try and buy
software with flexible pricing and multiple deployment
options to support your use case.
https://aws.amazon.com/marketplace/solutions/devops
Authors:
James Bland
Global Tech Lead for DevOps, AWS
Aditya Muppavarapu
Global Segment Leader for DevOps, AWS
40
©© 22002233,, AAmmaazzoonn WWeebb SSeerrvviicceess,, IInncc.. oorr iittss aaffffiilliiaatteess.. AAllll rriigghhttss rreesseerrvveedd..