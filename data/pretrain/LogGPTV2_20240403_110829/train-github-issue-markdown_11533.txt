Version: 0.192.0
## Problem
  1. `autoindent` fails to indent parameter lists. Note: If I hit enter after `fake_function(`, `param=` would be indented 3x -- class > def > foo.
    class Bar(unittest.TestCase):
        def test_indentation(self):
            foo = fake_function(param='hello',
            second_param='world', # should have indented this line
            ) # and this one, too
After saving, `atom-beautify` correctly indents the parameters
    class Bar(unittest.TestCase):
        def test_indentation(self):
            foo = fake_function(param='hello',
                                second_param='world', # fixed!
                                ) # me, too!
  2. But now, `autoindent` fails to reset indentation back to the beginning of the line
            [...]
            foo = fake_function(param='hello',
                                second_param='world',
                                )
                                bar = 'after_continuing typing' # ach!!
Unfortunately `atom-beautify` doesn't quite fix this ever time.
            foo = fake_function(param='hello',
                                second_param='world',
                                )
                bar = 'after_continuing typing'
## Note
I recently updated atom-beautify as an attempt to help resolve the issue, but
I am now getting errors there. The problems mentioned above still exist, but I
will update if anything changes.
## Update
Here's some testing in
#### Sublime3:
    def testing_indentation_in_sublime(some_var):
        first_line = "works"
        second_test = func_indentation(multiple_param,
            auto_indents,
            still_here,
            ) # parenthesis auto matched when typed!
        third_test = alt_indentation(
            looks_just_like above,
            which_was_wrong,
            but_this_works,
            )
            fourth_line = existing_indentation('retry last pasting',
                                           'broken') 
            and_indent_is_kept
        fifth_line = backspace_only_does_one_space('testing existing indent',
                                                   'testing')
        indentation = "working!!"
        if check_nested_indent is not None:
            basic_indent = True
        elif check_indent:
            also_works = True
            if nested:
                so_far = so_good
            else:
                also_good = True
            else:
                uh_oh = 'is this really that hard?'
        return end_of_function
        def still_indented():
            '''sigh.'''
            indentation = 'not perfect here, either (but way better)'
#### Eclipse
    def indent_test_eclipse(some_var):
        first_line = 'smoke test'
        second_test = func_with_param(style_one,
                                      hey_it_works,
                                      )
        back_to_the_beginning = 'holy crap.'
        third_test = func_with_alt_style(
                                         hrmmm,
                                         )
        if nested_indent is not None:
            basic_indent = True
        elif reindents_on_space_not_colon:
            still_okay = True
            if nested:
                so_far = so_good
            else:
                also_good = True
            else:
                must_be_difficult = True
        return end_of_function
    def correctly_indents_after_return():
        '''Woo hoo'''
        return True