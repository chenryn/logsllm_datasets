2019. Insight into insiders and it: A survey of insider threat taxonomies, analysis,
modeling, and countermeasures. ACM Computing Surveys (CSUR) 52, 2 (2019),
1–40.
[30] Nicholas J Hopper, John Langford, and Luis Von Ahn. 2002. Provably secure
steganography. In Annual International Cryptology Conference. Springer, 77–92.
[31] Jong-Uk Hou, Do-Gon Kim, Sunghee Choi, and Heung-Kyu Lee. 2015. 3d print-
scan resilient watermarking using a histogram-based circular shift coding struc-
ture. In Proceedings of the 3rd ACM Workshop on Information Hiding and Multi-
media Security. ACM, New York, NY, USA, 115–121.
[32] Jong-Uk Hou, Do-Gon Kim, and Heung-Kyu Lee. 2017. Blind 3D Mesh Water-
marking for 3D Printed Model by Analyzing Layering Artifact. IEEE Transactions
on Information Forensics and Security (2017).
[33] Amir Houmansadr, Thomas J Riedl, Nikita Borisov, and Andrew C Singer. 2013. I
want my voice to be heard: IP over Voice-over-IP for unobservable censorship
circumvention.. In NDSS.
[34] ASTM International. 2013. F2792-12a-Standard Terminology for Additive Manu-
facturing Technologies. Rapid Manufacturing Association 12 (2013), 10–12.
[35] Satoshi Kanai, Hiroaki Date, and Takeshi Kishinami. 1998. Digital watermarking
for 3D polygons using multiresolution wavelet decomposition. In Proc. Sixth IFIP
WG, Vol. 5. 296–307.
[36] Stefan Katzenbeisser and Fabien Petitcolas. 2015. Information Hiding. Artech
[37] Amin Kharraz, William Robertson, Davide Balzarotti, Leyla Bilge, and Engin
Kirda. 2015. Cutting the gordian knot: A look under the hood of ransomware
attacks. In International Conference on Detection of Intrusions and Malware, and
Vulnerability Assessment. Springer, 3–24.
[38] Eugene Kolodenker, William Koch, Gianluca Stringhini, and Manuel Egele. 2017.
PayBreak: Defense against cryptographic ransomware. In Proceedings of the 2017
ACM on Asia Conference on Computer and Communications Security. 599–611.
[39] Alexandr Kuznetsov, Oleh Stefanovych, Yuriy Gorbenko, Oleksii Smirnov, Victor
Krasnobaev, and Kateryna Kuznetsova. 2019.
Information Hiding Using 3D-
Printing Technology. In 2019 10th IEEE International Conference on Intelligent
Data Acquisition and Advanced Computing Systems: Technology and Applications
(IDAACS), Vol. 2. IEEE, 701–706.
[40] Gerhard C Langelaar, Iwan Setyawan, and Reginald L Lagendijk. 2000. Water-
marking digital image and video data. A state-of-the-art overview. IEEE Signal
processing magazine 17, 5 (2000), 20–46.
[41] Heung-Kyu Lee, Han-Ul Jang, Hak-Yeol Choi, Jeongho Son, Seung-Min Mun,
Dongkyu Kim, Jong-Uk Hou, and Wookhyung Kim. 2017. THREE-DIMENSIONAL
MESH MODEL WATERMARKING METHOD USING SEGMENTATION AND
APPARATUS THEREOF.
https://patents.google.com/patent/
US20170213310A1/en Patent No. US 2017/0213310 A1, Filed December 21, 2016.
[42] Benoît Macq, Patrice Rondao Alface, and Mireia Montanola. 2015. Applicability of
watermarking for intellectual property rights protection in a 3D printing scenario.
In Proceedings of the 20th International Conference on 3D Web Technology. ACM,
New York, NY, USA, 89–95.
[43] Priyanka Mahesh, Akash Tiwari, Chenglu Jin, Panganamala R Kumar,
AL Narasimha Reddy, Satish TS Bukkapatanam, Nikhil Gupta, and Ramesh Karri.
2020. A Survey of Cybersecurity of Digital Manufacturing. Proc. IEEE (2020).
[44] Toshio Motoki. 2013. Method and system for adding and confirming unique code
for output object output from 3D printer. (Oct 2013). https://patents.google.com/
patent/JP6331324B2 Patent No. JP6331324B2, Filed October 21, 2013.
[45] Ryutarou Ohbuchi, Hiroshi Masuda, and Masaki Aono. 1997. Watermarking
three-dimensional polygonal models. In ACM multimedia, Vol. 97. Citeseer, 261–
272.
[46] Ryutarou Ohbuchi, Hiroshi Masuda, and Masaki Aono. 1998. Watermarking three-
dimensional polygonal models through geometric and topological modifications.
IEEE Journal on selected areas in communications 16, 4 (1998), 551–560.
[47] Ryutarou Ohbuchi, Shigeo Takahashi, Takahiko Miyazawa, and Akio Mukaiyama.
2001. Watermarking 3D polygonal meshes in the mesh spectral domain. In
Graphics interface, Vol. 2001. Citeseer, 9–17.
[48] Fabien AP Petitcolas, Ross J Anderson, and Markus G Kuhn. 1999. Information
(Dec 2017).
hiding-a survey. Proc. IEEE 87, 7 (1999), 1062–1078.
[49] Emil Praun, Hugues Hoppe, and Adam Finkelstein. 1999. Robust mesh water-
marking. In Siggraph, Vol. 99. Citeseer, 49–56.
[50] Jaco Prinsloo, Saurabh Sinha, and Basie von Solms. 2019. A Review of Industry
4.0 Manufacturing Process Security Risks. Applied Sciences 9, 23 (2019), 5105.
[51] Niels Provos and Peter Honeyman. 2003. Hide and seek: An introduction to
steganography. IEEE security & privacy 1, 3 (2003), 32–44.
[52] Patrick Roberts. 2018. Where To Find 3D Printed Gun Files. (Aug 2018). https:
//www.recoilweb.com/where-to-find-3d-printed-gun-files-140438.html
[53] Clare Scott. 2019. Treatstock Introduces Watermark 3D Software Solution for IP
Protection of 3D Printable Files. https://3dprint.com/196192/treatstock-watermark-
278RAID ’21, October 6–8, 2021, San Sebastian, Spain
Yampolskiy et al.
3d
[54] Yan Shoshitaishvili, Luca Invernizzi, Adam Doupe, and Giovanni Vigna. 2014. Do
you feel lucky? A large-scale analysis of risk-rewards trade-offs in cyber security.
In Proceedings of the 29th Annual ACM Symposium on Applied Computing. 1649–
1656.
[55] Piyarat Silapasuphakornwong, Hideyuki Torii, Masahiro Suzuki, and Kazutake
Uehira. 2019. 3D Printing Technique That Can Record Information Inside An
Object As Rewritable. In NIP & Digital Fabrication Conference, Vol. 2019. Society
for Imaging Science and Technology, 158–161.
[56] L Sturm, CB Williams, JA Camelio, J White, and R Parker. 2014. Cyber-physical
vunerabilities in additive manufacturing systems. Context 7 (2014), 8.
[57] Olivier Thonnard, Leyla Bilge, Gavin O’Gorman, Seán Kiernan, and Martin Lee.
2012. Industrial espionage and targeted attacks: Understanding the characteristics
of an escalating threat. In International workshop on recent advances in intrusion
detection. Springer, 64–85.
[58] Francesca Uccheddu. 2018. A method for masking instructions programs for
numerical control machines for 3d printing. (Dec 2018). https://patents.google.
com/patent/WO2018122597A1 Patent No. WO2018122597A1, Filed December 30,
2016.
[59] Verizon. 2020.
Technical
https://enterprise.verizon.com/resources/reports/2020-data-breach-
2020 Data Breach Investigations Report.
Report.
investigations-report.pdf
[60] Luis Von Ahn and Nicholas J Hopper. 2004. Public-key steganography. In Inter-
national Conference on the Theory and Applications of Cryptographic Techniques.
Springer, 323–341.
[61] Kai Wang, Guillaume Lavoué, Florence Denis, and Atilla Baskurt. 2008. A com-
prehensive survey on three-dimensional mesh watermarking. IEEE Transactions
on Multimedia 10, 8 (2008), 1513–1527.
[62] Zachary Weinberg, Jeffrey Wang, Vinod Yegneswaran, Linda Briesemeister,
Steven Cheung, Frank Wang, and Dan Boneh. 2012. StegoTorus: a camouflage
proxy for the tor anonymity system. In Proceedings of the 2012 ACM conference
on Computer and communications security. 109–120.
[63] Philipp Winter, Tobias Pulls, and Juergen Fuss. 2013. ScrambleSuit: A polymorphic
network protocol to circumvent censorship. In Proceedings of the 12th ACM
workshop on Workshop on privacy in the electronic society. 213–224.
[64] Terry Wohlers. 2018. Wohlers Report 2017 3D Printing and Additive Manufacturing
State of the Industry Annual Worldwide Progress Report. Wohlers Associates, Inc.,
Fort Collins, Colorado, USA. www.wohlersassociates.com.
[65] Mark Yampolskiy, Wayne King, Gregory Pope, Sofia Belikovetsky, and Yuval
Elovici. 2017. Evaluation of additive and subtractive manufacturing from the se-
curity perspective. In International Conference on Critical Infrastructure Protection.
Springer, 23–44.
[66] Mark Yampolskiy, Wayne E King, Jacob Gatlin, Sofia Belikovetsky, Adam Brown,
Anthony Skjellum, and Yuval Elovici. 2018. Security of Additive Manufacturing:
Attack Taxonomy and Survey. Additive Manufacturing (2018).
[67] Mark Yampolskiy, Anthony Skjellum, Michael Kretzschmar, Ruel A Overfelt,
Kenneth R Sloan, and Alec Yasinsac. 2016. Using 3D Printers as Weapons. Inter-
national Journal of Critical Infrastructure Protection 14 (2016), 58–71.
[68] Adam Young and Moti Yung. 1996. Cryptovirology: Extortion-based security
threats and countermeasures. In Proceedings 1996 IEEE Symposium on Security
and Privacy. IEEE, 129–140.
[69] Adam L. Young and Moti Yung. 1996. The Dark Side of "Black-Box" Cryptography,
or: Should We Trust Capstone?. In Crypto. Springer, 89–103.
[70] Adam L. Young and Moti Yung. 1997. Kleptography: Using Cryptography Against
Cryptography. In Eurocrypt. Springer, 62–74.
[71] Adam L. Young and Moti Yung. 1997. The Prevalence of Kleptographic Attacks
on Discrete-Log Based Cryptosystems. In Crypto. Springer, 264–276.
[72] Adam L. Young and Moti Yung. 2004. Malicious Cryptography: exposing Cryptovi-
rology. Wiley, USA.
[73] Steven Eric Zeltmann, Nikhil Gupta, Nektarios Georgios Tsoutsos, Michail Ma-
niatakos, Jeyavijayan Rajendran, and Ramesh Karri. 2016. Manufacturing and
Security Challenges in 3D Printing. JOM (2016), 1–10.
[74] Li Zhuorong. 2019. A kind of digital watermarking system for stereolithography
art threedimensional model file. (Mar 2019). https://patents.google.com/patent/
CN109903213A Patent No. CN109903213A, Filed March 1, 2019.
A APPENDICES
A.1 Alternative Bit Encoding Primitives
In addition to bit encoding via vertex order in a facet, the STL file
format allows several alternatives that we identified and discarded
for this particular work. Below we outline those alternatives and
provide reasons why we deemed these deficient for the purpose of
data exfiltration. Please note that for other application scenarios,
such as watermarking, these might be more valuable.
First, specifically for ASCII STL files, delimiters (space and tab-
ulator characters) as well as comment characters can be used to
encode information. For example, at the end of every line that does
not contain a comment, a single space added can represent encoded
bit value 0 and two spaces can represent encoded bit value 1, and
any other number of spaces would indicate that this line contain no
valid encoded bit and can be skipped. This is a very simple encoding
scheme that would result in an encoding capacity of up to 7 bits
per facet (corresponding to opening tags facet normal and outer
loop, three vertex entries, and closing tags endloop and endfacet
(see Figure 1); this encoding capacity can be further expanded if
delimiters within the particular lines are used as well. The biggest
drawback of this encoding scheme is that it can be immediately
detected by a simple statistical analysis of the file. Its sanitation
would also be simple by the replacement of any number of spaces
by a single space.
All coordinate values in the description are float pointers and can
be specified using an exponent. This can provide a way to encode
one or more bits at once per value. For example, if 0 is the first
or only character specified before decimal point, it can represent
encoded bit value 0, and if the first number before the decimal point
is non-zero - value 1. The impact of this bit encoding technique on
the 3D printed object is not clear, because it can depend on how the
3D printing software imports and processes the values. This could
cause slight but eventually impactful deviations due to numerical
errors. The biggest drawback of this encoding technique is that
the presence of the encoded bit stream can be easily spotted. The
sanitation is also simple, but its potential impact on the 3D printed
part has to be investigated.
Another alternative for the bit encoding primitive is “flipping”
the facet’s normal. For example, the normal direction following the
right hand rule could represent encoded bit value 0, and if it violates
the rule - bit value 1. As the description indicates, it will violate the
right hand rule and eventually impact the 3D printed object (even
though some AM software simply ignores the specified normal
value and re-calculates it from the vertices defining the facet). For
data exfiltration, it will also provide an easily detectable encoding
approach. Sanitation would require re-calculating and updating
each normal value.
Something similar can be achieved by reversing the direction in
which the vertices are listed. The only advantage of this approach
is that it will increase the encoding capacity, because, in addition
to selectively violating the right hand rule, the bit encoding can be
structured similarly to the approach selected for this paper. The
drawbacks are similar to flipping the normal vector direction - there
is a potential impact on the 3D printed object and the approach is
easily detected. The sanitation as well can be done by re-calculating
normal value; this, however, might also have an impact on the 3D
printed object.
The last encoding alternative that we identified is the represen-
tation of bits of information through the order in which individual
facets are listed. Assuming that no two facets in a STL file have
exactly the same coordinates of all three vertices, facets can be
distinguished from each other, and as such their position in STL
file can represent the encoded value. A simple encoding scheme
based on this observation would be to leave two consecutive facets
279What Did You Add to My Additive Manufacturing Data?
RAID ’21, October 6–8, 2021, San Sebastian, Spain
(a) Original Carrier STL File (Unmodified), loaded
in Cura
(b) Carrier STL File with Embedded Payload,
loaded in Cura
(c) 3D-Printed Model using Original Design File,
front view
(d) 3D-Printed Model using Modified Design File
(with encoded information), front view
Figure 11: Side-by-Side Comparison using Cura Slicer and Lulzbot Taz 6 3D Printer
in their original order to represent bit value 0 and swap them to
represent bit value 1. Whether or not this approach will cause slight
deviations of 3D geometry rooted in numerical errors need to be
investigated; this is a task that is outside of this paper’s scope. The
potential advantage of this encoding technique is that a bit stream
encoded with it might be harder to detect in the STLM file if the
original STL file is not available to the analyst. However, this is
also the biggest drawback of this technique – in order to decode a
bit stream, a recipient needs to have access to the “original” STL
file. Sanitation can be achieved by randomly swapping consecu-
tive facets; like with the encoding itself, the implications of this
approach on the 3D printed object are not clear.
A.2 Verification of 3D-Printability
We verified the ability of the proposed approach to avoid detection
by loading models in two different slicers (Cura and CatalystEx),
and 3D printing both the original design and the carrier file with
encoded secret on two different 3D printers, the Lulzbot Taz 6 and
the Stratasys Dimension Elite.
Figure 11 shows a side-by-side comparison of the STL files loaded
in Cura and then 3D-printed on the Lulzbot Taz 6. Figure 12 shows
a side-by-side comparison of the STL files loaded in CatalystEx and
then 3D-printed on the Stratasys Dimension Elite.
Neither side-by-side comparison of the sliced digital models nor
of the 3D printed objects show indicators of manipulation from
the embedded payload. Therefore, if the detection of the presented
attack depends solely on the ability to 3D print a correct model, it
will fail.
280RAID ’21, October 6–8, 2021, San Sebastian, Spain
Yampolskiy et al.
(a) Original Carrier STL File (Unmodified), loaded
in CatalystEx
(b) Carrier STL File with Embedded Payload,
loaded in CatalystEx
(c) 3D-Printed Model using Original Design File,
front view
(d) 3D-Printed Model using Modified Design File
(with encoded information), front view
(e) 3D-Printed Model using Original Design File,
rear view
(f) 3D-Printed Model using Modified Design File
(with encoded information), rear view
Figure 12: Side-by-Side Comparison using CatalystEx Slicer and Stratasys Dimension Elite 3D Printer
281