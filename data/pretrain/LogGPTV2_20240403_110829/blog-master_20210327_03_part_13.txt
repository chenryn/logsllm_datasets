/*+NestLoop(p1 t1)*/  
EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id   Seq Scan on p1  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Sort  
         Sort Key: p1.id  
         ->  Seq Scan on p1  
               Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Index Scan using t1_pkey on t1  
         Index Cond: (id   Hash  
         ->  Seq Scan on p1  
               Filter: ((id >= 50) AND (id = 50 AND p1.id   Seq Scan on p1  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Seq Scan on p1  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Seq Scan on p1  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Index Scan using p1_pkey on p1  
         Index Cond: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Bitmap Heap Scan on p1  
         Recheck Cond: ((id >= 50) AND (id   Bitmap Index Scan on p1_pkey  
               Index Cond: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Tid Scan on p1  
         TID Cond: (ctid = '(1,1)'::tid)  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Seq Scan on p1  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Index Scan using p1_pkey on p1  
         Index Cond: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Bitmap Heap Scan on p1  
         Recheck Cond: ((id >= 50) AND (id   Bitmap Index Scan on p1_pkey  
               Index Cond: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id = 50 AND p1.id   Tid Scan on p1  
         TID Cond: (ctid = '(1,1)'::tid)  
         Filter: ((id >= 50) AND (id   Index Scan using t1_pkey on t1  
         Index Cond: (id   Index Scan using t2_pkey on t2 "t 2 """  
   ->  Hash  
         ->  Hash Join  
               Hash Cond: ("""t1 )       ".id = "T3".id)  
               ->  Seq Scan on t1 """t1 )        "  
               ->  Hash  
                     ->  Seq Scan on t3 "T3"  
(9 rows)  
-- duplicate hint test  
/*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';  
INFO:  pg_hint_plan: hint syntax error at or near "SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict scan method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict join method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict join method hint.  
INFO:  pg_hint_plan: hint syntax error at or near "Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict set hint.  
INFO:  pg_hint_plan: hint syntax error at or near "Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)"  
DETAIL:  Conflict leading hint.  
LOG:  pg_hint_plan:  
used hint:  
TidScan(t1)  
TidScan(t2)  
MergeJoin(t1 t2)  
Leading(t2 t1)  
Set(enable_mergejoin on)  
Set(enable_seqscan on)  
not used hint:  
duplication hint:  
SeqScan(t1)  
IndexScan(t1)  
BitmapScan(t1)  
SeqScan(t2)  
IndexScan(t2)  
BitmapScan(t2)  
HashJoin(t1 t2)  
NestLoop(t1 t2)  
Leading(t1 t2)  
Set(enable_seqscan off)  
error hint:  
                  QUERY PLAN                     
-----------------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t2.id)  
   ->  Sort  
         Sort Key: t1.id  
         ->  Tid Scan on t1  
               TID Cond: (ctid = '(1,1)'::tid)  
   ->  Sort  
         Sort Key: t2.id  
         ->  Tid Scan on t2  
               TID Cond: (ctid = '(1,1)'::tid)  
(10 rows)  
-- sub query Leading hint test  
SET from_collapse_limit TO 100;  
SET geqo_threshold TO 100;  
EXPLAIN (COSTS false)  
WITH c1_1(id) AS (  
SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id  
)  
SELECT t1_1.id, (  
SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id  
) FROM t1 t1_1, t2 t2_1, t3 t3_1, (  
SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id  
) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (  
SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id   
);  
                                  QUERY PLAN                                    
------------------------------------------------------------------------------  
 Nested Loop  
   InitPlan 1 (returns $0)  
     ->  Aggregate  