title:An IP Traceback Technique against Denial-of-Service Attacks
author:Zhaole Chen and
Moon-Chuen Lee
An IP Traceback Technique against Denial-of-Service Attacks 
Computer Science & Engineering Department, the Chinese University of Hong Kong 
{zlchen, mclee}@cse.cuhk.edu.hk
Zhaole Chen, Moon-Chuen Lee 
Abstract 
detail description of reflector attack is presented in section 
2. This type of attack is more difficult to trace and almost 
all previous traceback techniques cannot handle it.  
Reflector attack [9] belongs to one of the most serious 
types  of  Denial-of-Service  (DoS)  attacks,  which  can 
hardly  be  traced  by  contemporary  traceback  techniques, 
since  the  marked  information  written  by  any  routers 
between the attacker and the reflectors will be lost in the 
replied  packets  from  the  reflectors.  We  propose  in  this 
paper  a  reflective  algebraic  marking  scheme  for  tracing 
DoS  and  DDoS  attacks,  as  well  as  reflector  attacks.  The 
proposed  marking  scheme  contains  three  algorithms, 
namely 
the  marking,  reflection  and  reconstruction 
algorithms, which have been well tested through extensive 
simulation experiments. The results show that the marking 
scheme  can  achieve  a  high  performance  in  tracing  the 
sources  of  the  potential  attack  packets.    In  addition,  it 
produces negligible false positives; whereas other current 
methods  usually  produce  a  certain  amount  of  false 
positives. 
1.
Introduction 
A  Denial-of-Service  (DoS)  attack  is  characterized  by 
an  explicit  attempt  by  an  attacker  to  prevent  legitimate 
users  of  a  service  from  using  the  desired  resources  [10]. 
While  launching  their  attacks,  the  attackers  normally 
generate  a  huge  volume  of  packets  directed  to  the  target 
systems  known  as  victims,  causing  a  network  traffic 
congestion  problem.  Thus  the  legitimate  users  would  be 
prevented  from  gaining  access  to  the  systems  being 
attacked.  This  paper  focuses  on  using  an  innovative 
marking  scheme  to  defend  against  DoS  attacks.  We 
propose  a  methodology,  based  on  a  packet  marking 
technique,  to  trace  DoS  attacks,  especially  reflector 
attacks. 
Reflector  attacks  belong  to  the  category  of  the  most 
serious DoS attacks. Unlike other DoS attacks, the number 
of attack packets sent out by a reflector attacker would be 
amplified many times, flooding the victim’s network. The 
attack packets reaching the victim are not directly from the 
attacker; they are actually generated by some hosts known 
as  reflectors.  When  such  reflectors  receive  the  packets 
from  a  reflector  attack,  they  would  create  many  times 
more  packets  with  a  destination  address  of  the  victim.  A 
reflector  attacks  and 
The  rest  of  this  paper  is  organized  as  follows.  We 
introduce 
traceback 
techniques  proposed  in  the  literature  in  section  2  and 
section  3  respectively.  Section  4  describes  our  traceback 
algorithm. Section 5 analyses the backward  compatibility 
of  our  marking  scheme.  After  showing  the  experiment 
results in section 6, we conclude this paper in section 7. 
related 
2. Reflector attacks 
A  reflector  is  any  IP  host  that  will  return  a  packet  if 
sent a packet [9]. A reflector attack is an indirect attack in 
that  intermediary  nodes  (routers  and  various  servers), 
better  known  as  reflectors,  are  innocently  used  as  attack 
launchers  [11].  Some  major  reflector  attacks  such  as 
smurfing,  SYN  flooding,  RST  flooding,  ICMP  flooding 
and DNS reply flooding are summarized in [11]. We use 
smurfing,  a  typical  reflector  attack,  as  an  example  to 
introduce how a reflector attack is launched.  
With IP spoofing as an intermediate step, the launch of 
a  smurfing  attack  involves  spoofing  a  number  of  ICMP 
echo  (ping)  packets  with  the  victim’s  IP  address  as  the 
source  address  and  a  directed  broadcast  address  as  the 
destination.  This  kind  of  attack  can  consume  a  lot  of 
network  and  host  resources  with  relatively  few  spoofed 
packets. There are three major components constituting a 
reflector  attack—the  attacker,  the  amplifying  subnet  (i.e. 
reflectors), and the victim. The attacker sends ICMP echo 
packets with the victim’s IP address as the source address 
to the broadcast address of an  amplifying  network  as  the 
destination  address.  So  the  packets  appear  to  have  been 
sent  by  the  victim.  Since  they  are  sent  to  a  broadcast 
address  of  a  local  network,  all  the  hosts,  except  those 
whose configuration has been specified not to respond to 
ICMP broadcast packets, in the local network will respond 
to  each  of  the  packets.  Therefore,  smurf  is  a  kind  of 
amplified  DoS  attack.  Because  of  this  amplifying  effect, 
an  individual  reflector  attacker  can  send  the  packets  at  a 
much lower rate compared to the packet rates created  by 
ordinary  DoS  attackers  who  flood  the  victim  directly.  In 
practice,  a  smurf  attacker  can  first  compromise  a  set  of 
hosts called slaves, and then it instructs each slave to send 
ICMP echo packets to a number of amplifying  networks. 
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:51:38 UTC from IEEE Xplore.  Restrictions apply. 
Therefore,  the  attack  can  be  considered  as  a  kind  of 
distributed DoS attack. 
There is another type of reflector attacks which doesn’t 
exploit the amplifying power of subnets. The attacker will 
locate  a  large  number  of  reflectors  to  launch  its  attack. 
Therefore, the attacker has to send request packets to each 
of  the  reflectors.  As  long  as  the  number  of  reflectors  is 
large enough, the attacker can flood the victim. In a direct 
ICMP  ping  flooding  attack,  around  5000  reflectors  are 
needed to flood a victim’s T1 link if each reflector sends a 
query every second [11]. This category of reflector attacks 
is  more  difficult  to  trace  than  the  “amplifying  reflector 
attacks”  since  the  traffic  volume  from  each  link  may  be 
smaller, however, such attacks are much more difficult to 
launch. Therefore, in this paper we focus on the reflector 
attacks which exploit the amplifying effect of subnets. 
 There are some traditional solutions to defend against 
the  reflector  attacks.  For  example,  to  defend  against 
smurfing  attack:  One  solution  is  disabling  the  translation 
of layer 3 broadcasts into layer 2 broadcasts at the border 
router;  that  is,  the  router  will  filter  any  packet  with  a 
broadcast source address. However this will disable many 
useful  services  such  as  ARP,  audio  sharing  and  so  on.  
Another solution is configuring the host not to respond to 
broadcast ping packets or to ignore all ping packets. This 
will  result  in  the  loss  of  the  ICMP  functionality.  So  we 
strongly  recommend  using  IP  traceback  technique  to 
identify the attackers, and then take other measures to stop 
the attacks. 
While  dealing  with  these  types  of  DoS  attacks,  one 
serious problem of the traditional marking schemes is that 
the  information  marked  by  the  routers  between  the 
attacker and the reflectors is lost when the reflectors have 
sent the “reply” packets to the victim after processing the 
attack  packets  at  application  layer.  Thus  the  existing 
marking  schemes  cannot  trace  part  of  the  attack  path, 
namely the sub-path from the reflector to the attacker. 
3. Related work 
Generally  speaking,  there  are  two  major  categories  of 
traceback techniques—one is to trace a single packet, and 
the other is to use a large number of packets for tracing the 
attacker.  Hash-based  traceback  [7],  based  on  the  former 
technique, digests and logs some particular information of 
each  packet  on  the  routers.  The  victim  can  query  its 
upstream  routers  whether  a  certain  packet  has  passed 
through them. This method has two drawbacks: it requires 
a large-scale database on each router to store and manage 
the packets information; the queries must be done before 
the  relevant  records  in  the  database  have  been  updated. 
The  scheme  proposed  in  this  paper  belongs  to  the  latter 
technique. Different IP traceback methods, based on using 
a  large  number  of  packets,  have  been  proposed  in  the 
literature; examples include link testing, ICMP traceback, 
and some packet marking based methods. However, all of 
these methods cannot trace the source of a reflector attack. 
Dean  and  Franklin  proposed  an  algebraic  marking 
scheme  for  IP  traceback  [1],  which  is  based  on  the 
mathematical theory of Linear Algebra and coding theory.
The  main  drawback  of  this  algebraic  marking  scheme  is 
that it is not effective in dealing with multiple attacks. In 
addition,  it  cannot  traceback  reflector  attacks.  Motivated 
by  Dean’s  idea,  we  propose  in  this  paper  a  Reflective 
Algebraic  Marking  Scheme,  which  can  effectively  deal 
with DoS attacks including reflector attacks. Our approach 
has  low  network  and  router  overheads  similar  to  the 
algebraic  marking  scheme;  in  addition,  it  can  efficiently 
perform  IP  traceback  even  in  the  presence  of  multiple 
attacks including reflector attacks.
4. Reflective marking scheme 
In  this  section,  we  introduce  our  reflective  algebraic 
marking  scheme  in  detail.  To  provide  the  necessary 
background for the  presentation  of  the  proposed  method, 
we  give  some  definitions  first,  and  then  the  basic 
assumptions.    Many  of  the  definitions  and  assumptions 
follow the work of Savage et al. [2]. 
R8
A1
R9
R5
R6
R3
A2
R4
R10
R7
R2
R1
V
Figure  1.  An  upstream  routers  map  as  seen  from  the  victim. 
There are two attack paths indicated by the dotted lines.
4.1. Definitions 
Figure  1  depicts  an  upstream  routers  map  from  the 
view  of  the  victim.  We  use  V, R,  and  A  to  denote  the 
victim,  router,  and  attacker  respectively.  An  upstream 
routers  map  is  a  map  describing  the  topology  of  the 
upstream  routers  of  a  single  host.  The  upstream  routers 
map  contains  the  IP  addresses  of  the  upstream  routers. 
Here upstream is used to describe routers viewed from the 
victim. For example,  R9 and  R10 are the upstream routers 
of  A2.  In  this  graph,  there  are  two  attack  paths  that  are 
represented  by  the  dotted  lines,  one  is  (A1 R6 R3 R2 R1),
Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC 2003) 
1063-9527/03 $17.00 © 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:51:38 UTC from IEEE Xplore.  Restrictions apply. 
and the other is (A2 R3 R2 R1). The distance between two 
hosts  means  the  number  of  routers  in  the  attack  path 
between them. For example, in the attack path (A1 R6 R3 R2
R1), the distance between router R6 and the victim is 3. As 
we  know,  some  routers  might  be  compromised  by  the 
attacker and so the marked information in the packets may 
be forged. Thus we limit the traceback problem to finding 
a  candidate  attack  path  that  contains  a  suffix  of  the  real 
attack path, and such suffix is called a valid suffix of that 
path.  For example, path (R6 R3 R2 R1) is a valid suffix of 
the real attack path (A1 R6 R3 R2 R1). We say a traceback 
scheme is robust if the attackers cannot prevent the victim 
from  finding  the  candidate  paths  containing  the  valid 
suffixes of the attack paths. We call a router false positive 
if it is in the reconstructed attack path and not in the real 
attack path. 
4.2. Assumptions 
In  order  to  make  our  marking  scheme  more  practical 
and effective, the following assumptions have been made 
in devising our proposed IP traceback method. 
Attackers are able to generate any packets 
1)
2) Multiple attack paths may exist 
Packets may be reordered or lost 
3)
4)
Routes between the attacker and the victim are fairly stable 
The resources of the routers are limited so that the routers 
5)
cannot perform too much processing per packet.  
Attackers might be aware that they are being traced 
Attackers may send a large number of packets 
Routers  might  be  compromised;  but  the  nearest  routers 
should not be compromised in big proportion. 
6)
7)
8)
The first five assumptions are quite easy to understand 
with the knowledge of current network infrastructure. The 
sixth one is a conservative evaluation of the abilities of the 
attackers. The sophisticated attackers should be aware that 
they are being traced and may send fake packets to make 
the  victim  confused.  So  the  traceback  method  proposed 
must  consider  such  an  ability  of  the  attackers.  Like  the 
probabilistic  marking  scheme  [2],  our  marking  scheme 
marks packets with a very low probability; so it requires a 
certain  number  of  packets,  sent  by  the  attacker,  to 
reconstruct 
the  attack  paths.  If  some  routers  are 
compromised, we  could  only  reconstruct  the  attack  paths 
to  the  corresponding  relevant  comprised  routers  since  a 
compromised router could tamper the information marked 
by  its  upstream  routers.  Therefore,  we  will  use  a  valid 
suffix instead of the entire attack path to assess the robust 
of a traceback technique. One thing to remind  is  that  the 
nearest routers should not be compromised; otherwise they 
can  tamper  any  messages  the  upstream  routers  have 
marked, so that the victim might reconstruct totally wrong 
paths. 
4.3. Reflective Algebraic Marking Scheme 
Given  the  basic  definitions  and  assumptions,  we 
describe  our  specific  marking  scheme  now.  At  first,  we 
introduce  the  basic  mathematical  theory,  and  then  the 
marking, reflection and reconstruction algorithm. 
4.3.1. Basic mathematical theory: 
(cid:170)
1
(cid:171)
1
(cid:171)
(cid:171)
...
(cid:171)
1
(cid:171)
(cid:172)
x
1
x
2
...
x
n
2
x
1
2
x
2
...
2
x
n
...
...
...
...
−
1
−
1
n