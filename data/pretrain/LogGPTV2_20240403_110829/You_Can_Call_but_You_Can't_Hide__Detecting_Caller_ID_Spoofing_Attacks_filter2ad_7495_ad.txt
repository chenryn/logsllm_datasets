Washington. In our experiments, the caller was always in
South Carolina and the callee was in one of the four states.
The result indicates that geographic locations of the caller
and the callee have minor effects on the delay with variance
in delay less than 1.1 seconds in all cases.
Timing Estimation. To verify caller ID, Bob estimates
Alice’s waiting time τv using a Bayesian classiﬁer to decide
whether a call is VALID, SPOOFED or NOTSUPPORTED.
To analyze the performance of our classiﬁer, we collected
more than 3000 instances of calls labelled with appropriate
class, e.g., approximately 1100 VALID, 1100 SPOOFED,
and 800 NOTSUPPORTED instances. Both the VALID and
SPOOFED instances were collected by CallerDec. In
particular, the VALID samples were collected when Al-
ice was indeed calling Bob, and the SPOOFED samples
were collected when Eve spoofed her caller ID. For the
NOTSUPPORTED samples, we asked 10 volunteers to reject
or answer incoming calls at their will. No CallerDec
was installed, but we wrote a customized app to collect
the delay between the start of ringing and the moment of
the users’ operation. From the mean and standard deviation
of the user’s response time (Fig. 9), we observed that the
average response time of an incoming call varied from 5.9
seconds to 10.6 seconds, indicating that it is unlikely to
confuse the user operation with CallerDec responses that
are triggered with no delay.
We divided the dataset into training and test sets at various
proportions p, where p = [0.1 - 0.9]. For instance, with p
= 0.1, 10% (approximately 300 instances) of the dataset
was used for training and the rest 90% (approximately 2700
instances) was used for testing. We use the following metrics
for evaluating CallerDec classiﬁer where 100% is the
desired outcomes for each metric: (a) an accuracy which is
the percentage of correct outcomes of CallerDec, (b) a
precision which is the percentage of correct outcome for a
class out of all CallerDec outcomes for that class (e.g.,
correct VALID outcomes out of all VALID outcomes), and
(c) a recall which is the percentage of correct outcome out
of all correct outcomes for a class. (e.g., correct VALID
outcomes of CallerDec out of all outcomes that should
be VALID).
As depicted in Fig. 10(a), the accuracy of the classiﬁer
is more than 99% even when the percentage of the training
dataset is only 10%, and 99.26% on average. Furthermore,
the precision and recall are fairly constant: a 99.98% pre-
cision and a 98.91% recall when caller ID is VALID, a
100% precision and recall when caller ID is SPOOFED, and
95.62% precision and 99.93% recall when CallerDec is
NOTSUPPORTED. The results also suggest that a small num-
ber of training data are sufﬁcient for efﬁcient classiﬁcation.
In summery, CallerDec can be used effectively to
detect caller ID spooﬁng. It provides high accuracy in caller
ID spooﬁng detection.
Battery Usage Overhead. To evaluate the battery usage
of CallerDec, we measured the millivolts consumed per
hour of the entire phone. In this setup, apart from the default
177177177
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
y
c
a
r
u
c
c
A
1
0.9
0.8
0.7
0.6
0.5
0
50
Training data (%)
(a) accuracy
i
i
n
o
s
c
e
r
P
1
0.9
0.8
0.7
0.6
0.5
0
100
l
l
a
c
e
R
1
0.9
0.8
0.7
0.6
0.5
0
VALID
SPOOFED
NOTSUPPORTED
50
100
Training data (%)
(b) precision
VALID
SPOOFED
NOTSUPPORTED
50
100
Training data (%)
(c) recall
)
r
u
o
h
/
V
m
(
e
g
a
s
U
e
g
a
t
l
o
V
40
30
20
10
0
w/o CallerDec
w CallerDec
no incoming call
10 incoming calls
Scenarios
(d) voltage usage
Figure 10.
Performance of our Bayesian spoof detection classiﬁer where (a) shows the accuracy, (b) shows the precision and (c) shows the recall of
the classiﬁer. Analysis of voltage usage overhead for CallerDec in different scenarios in shown in (d). In voltage measurement experiments, the phone
operated on batteries and the average millivolts used per hour was measured.
apps comes with Android OS, the phone only executed one
battery logger app. Additionally, the Wi-Fi interface was
turned-off in all cases.
Since CallerDec is triggered on demand by incoming
calls, we measured the power consumption of CallerDec
in two experiment setups: no incoming calls; 10 incom-
ing calls per one hour with each call
lasted for ap-
proximately 1 minute. For both setups, we compared the
scenarios that CallerDec was installed with not
in-
stalled; In the case that CallerDec was not installed,
the user answered the calls at a random moment dur-
ing ringing. In the case that CallerDec was installed,
CallerDec became active right after receiving an in-
coming call, and the user answered the calls after he
received the veriﬁcation results. Each experiment lasted for
six hours. We depict the experimental results in Fig. 10(d),
which shows that CallerDec almost consumed no extra
power when CallerDec remained idle. This is because
CallerDec is implemented as a background process with
intent android.intent.action.PHONE_STATE [24]
and the operating system wakes CallerDec only when
there is a new incoming call. In the case of receiving 10
incoming calls, CallerDec consumes little power, i.e.,
approximately 0.01 mV per call, compared to the case
when it was not installed. In summary, CallerDec ensures
spooﬁng detection with almost no extra power consumption.
VI. LIMITATIONS AND FUTURE WORKS
Usability. We agree that the NOTSUPPORTED scenarios
may result
in an unpleasant experience of users due to
answering veriﬁcation calls. However, such scenarios can
be eliminated once both parties install CallerDec. In this
paper, we considered NOTSUPPORTED cases for complete-
ness of our mechanism.
Denial of Service (DoS) Attack. We emphasize that
CallerDec does not create new types of interfaces for
launching DoS attacks. In fact, CallerDec can effectively
address the existing DoS attacks caused by spoofed caller
ID [25] [26], i.e., calling a large number of users by spooﬁng
Alice’s phone number, and thus Alice will receive lots of
calls from these users. As the attacker calls Bob while
spooﬁng Alice’s caller ID, veriﬁcation calls will be directed
to Alice. With the help of CallerDec, the veriﬁcation
process will be carried out automatically as a background
process. Without answering the call, Bob can learn about
the spoofed call and shall ignore it; Alice’s CallerDec
automatically conﬁrms that she didn’t call. This way, the
spoofed calls are automatically handled by CallerDec.
PSTN/VoIP. We believe that CallerDec could be appli-
cable to PSTN and VoIP networks, since CallerDec is
agnostic of network types. Validating CallerDec in PSTN
and VoIP networks is a direction for future work.
VII. RELATED WORK
While the problem of caller ID spooﬁng is generally
known, previously proposed solutions typically require the
cooperation and modiﬁcation of phone provider networks,
which imposes extra cost. For instance, TrustID is a corpo-
rate service offered to banks or large institutions [8] and it
leverages special interfaces with the carriers to detect caller
ID spooﬁng.
Cai [27] proposes a system to validate caller ID in-
formation based on “originating node information” of the
respective call. In his design, a phone network provider
should validate the claimed caller ID information based on
additional meta-data associated with the call. Several ways
of comparing the call’s meta-data with the claimed caller
ID are proposed. However, it does not address the problem
of fake ID providers, which have both incentive and means
to fake most of this meta-data. Additionally, customers must
rely on their respective phone providers to verify the claimed
caller ID.
Another approach is the RealName Registry by Chow
et al. [28]. They propose that telephone providers estab-
lish authenticated name registries within their respective
jurisdictions. Speciﬁcally, customers should register to their
providers and be issued cryptographic certiﬁcates that can
then be validated by the respective callee’s. Note that
this mechanism also allows the reverse authentication of
the callee’s towards the caller. However, while spooﬁng
is a serious issue in many transactions, the cost imposed
by introducing cryptographic authentication and a PKI is
signiﬁcant. This is aggravated by the fact that the proposed
178178178
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply. 
authentication scheme is only useful if widely deployed, so
that unauthenticated calls can be rejected.
PinDrop by Balasubramaniyan et al. [29] determines
the “provenance” of a call by evaluating audio artifacts
introduced by digital encoding and analog noise patterns. As
the call is routed through the network, the different deployed
types of network technology succinctly manipulate the audio
signal, creating a characteristic watermark that can be used
to reconstruct and recognize the employed techniques, and
thus also the path taken by a call. The approach is closest to
our work as it does not require cooperation of the involved
network providers and can be realized on an on-demand
basis, by unilaterally modifying the callee’s device software.
However, PinDrop requires that the receiver answers the
call before the source can be veriﬁed, and cannot by itself
validate the origin of a previously unseen caller ID. As such,
PinDrop is complementary to our scheme. Their approach
could be integrated with ours to increase the detection
certainty once the call was answered, or warn if a known
caller ID originates from an unusual network location.
Piotrowski et al. [30] consider voice spooﬁng as an
extension of caller ID spooﬁng and propose a watermarking
mechanism to mitigate the threat. However, their approach
requires modiﬁcation of both, the caller and callee’s devices
and is therefore mainly useful for closed environments. In
such scenarios, where arbitrary modiﬁcations to the caller
as well as callee can be assumed, a wide range of well-
known cryptographic and steganographic approaches can be
considered (e.g., CryptoPhone [31]).
VIII. CONCLUSION
In this paper, we investigated caller ID spooﬁng attacks
and identiﬁed that it is the network interconnection proto-
cols that make caller ID spooﬁng possible. We designed
an end-to-end solution, which we call CallerDec,
to
detect a spoofed caller ID. CallerDec veriﬁes the caller
ID using a covert channel, which is built on top of the
veriﬁcation call from the callee to the claimed caller, and
CallerDec uses timing estimation together with the call
status for veriﬁcation. We implemented CallerDec in
Android-based phones and validated that CallerDec can
effectively verify caller ID. Although the end-to-end delay
for completing a veriﬁcation takes a few seconds, such delay
can be hidden when the veriﬁcation is performed in parallel
to the voice call.
We studied CallerDec on Android-based phones as
a case study, but CallerDec can be integrated to other
types of phone terminals to protect end users from caller
ID spooﬁng attacks. In addition, the current CallerDec
will conclude NOTSUPPORTED when CallerDec is
not implemented by a phone terminal. We envision that
NOTSUPPORTED can be eliminated once the CallerDec
is supported on all telephone terminals.
REFERENCES
[1] B. Schneier, http://www.schneier.com/blog/archives/2006/03/-
caller_id_spoof.html.
[2] ABCNews, Caller ID Scam Solicits Personal Info, Money.
abcnews.go.com/GMA/Consumer/story?id=3305916, 2007.
[3] D. Cuellar, Pranksters Terrorize Delco Family in “swatting”
Call. WPVI-TV, Philadelphia, PA, 2010.
[4] Rep.
Engel
Anti-Spooﬁng
Bill
Passes
House,
http://engel.house.gov/latest-news1/rep-engel-anti-spooﬁng-
bill-passes-house.
[5] US Congress, Truth in Caller ID Act of 2009. www.gpo.gov.
[6] X-Lite. www.counterpath.com/x-lite.html.
[7] Caller ID Faker-Fake a Call! www.calleridfaker.com.
[8] TrustID. www.trustid.com.
[9] ETSI, UMTS, www.etsi.org.
[10] ——, W-CDMA, www.etsi.org.
[11] AT&T, Voice Networking Solutions, www.business.att.com.
[12] Voxeo, Prophecy IVR Platform Software, www.voxeo.com.
[13] Bevocal Cafe, Supercharge Your Portal.
cafe.bevocal.com.
[14] J. Eisenzopf, What You Need To Know About Voice ASPs,
www.datamation.com.
[15] A. S. Tanenbaum, Computer Networks. Barnes and Noble.
[16] J. Han and M. Kamber, Data Mining: Concepts and Tech-
niques. Elsevier Inc, 2006.
[17] Lincoln Emergency Communications Center Annual Report.
www.lincoln.ne.gov.
[18] Dauphin County Emergency Management Agency Year
Yearly Statistics. www.dauphincounty.org, 2011.
[19] IETF, ETSI TS 122 083, www.etsi.org.
[20] Carnegie Mellon University, CMU Sphinx,
cmus-
phinx.sourceforge.net.
[21] ITU-T, Q.431 Primary rate interface, www.itu.int/rec/T-REC-
I.431-199303-I/en.
[22] QUALCOMM,
the
phase of voice
www.qualcomm.com, Tech. Rep., 2012.
“Circuit-switched
ﬁrst
evolution for mobile LTE devices,”
fallback.
[23] F. Duffy and R. Mercer, “A study of network performance and
customer behavior during direct-distance-dialing call attempts
in the usa,” Bell System Technical Journal, vol. 57, 1978.
[24] GOOGLE, Android OS.
[25] Warrior
Forum,
developer.android.com/index.html.
http://www.warriorforum.com/off-topic-
forum/659448-need-help-someone-using-my-phone-
number.html.
[26] Howard
Forums
Mobile
Community,
http://www.howardforums.com/showthread.php/1466560-
Can-my-phone-number-be-hijacked-to-make-calls.
[27] Y. Cai, Patent Application: Validating Caller ID Information
to Protect Against Caller ID Spooﬁng, 2008.
[28] S. T. Chow, C. Gustave, and D. Vinokurov, “Authenticating
displayed names in telephony,” Bell Labs Journal, 2009.
[29] V. A. Balasubramaniyan, A. Poonawalla, M. Ahamad, M. T.
Hunter, and P. Traynor, “Pindr0p: Using single-ended audio
features to determine call provenance,” in CCS, 2010.
[30] Z. Piotrowski and P. Gajewski, “Voice spooﬁng as an im-
personation attack and the way of protection,” Journal of
Information Assurance and Security, 2007.
[31] GSMK Crypto Phone. www.cryptophone.de.
179179179
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:02:05 UTC from IEEE Xplore.  Restrictions apply.