并通过日志文件记录所有的输入与输出。
实现方法如下：
pexpect 提供了两种途径，
加清晰，下面的代码等价于上面的。
命令作为/bin/bash的参数进行调用，例如：
或通配符“*”，当然，我们可以通过一个技巧来解决这个问题，将存在这三个特殊元字符的
72第二部分高级篇
#cat mylog.txt
以下为mylog.txt日志内容，可以看到pexpect产生的全部输入与输出信息。
child = pexpect.spawn('ssh PI:EMAIL')
下面为一个完整的示例，实现远程 SSH登录，登录成功后显示/home目录文件清单，
child = pexpect.spawn('some_command')
输出到标准输出的方法如下：
有时候调试代码时，
我们可以通过将命令的参数以 Python列表的形式进行替换，从而使我们的语法变成更
child.sendline('ls/home')
child.expect('#')
chi1d.send1ine("U3497DT32t")
child.expect("password:")
#child.logfile =sys.stdout
import pexpect
child.logfile = sys.stdout
child.logfile=fout
fout=file('mylog.txt'，'w')
child.expect(pexpect.EoF)
child =pexpect.spawn('/bin/bash',[-c',shell_cmd])
child.expect(pexpect.EOF)
child = pexpect.spawn('/bin/bash -c"1s -l I grep LOG >logs.txt")
mport
sys
Linux公社 www.linuxidc.com
一种为写到日志文件，另一种为输出到标准输出。写到日志文件的
，希望获取pexpect的输人与输出信息，以便了解匹配的情况。
---
## Page 98
中的索引ID，例如：
位置匹配。
配到pexpect.TIMEOUT；参数searchwindowsize为匹配缓冲区字符串的位置，默认是从开始
素，或者是列表最左边的元素（最小索引ID)，如：
一个列表时，且不止一个表列元素被匹配，则返回的结果是子程序输出最先出现的那个元
TIMEOUT（匹配等待超时）、正则表达式或者前面四种类型组成的列表（List），当pattermn为
当 pexpect.EOF、pexpect.TIMEOUT 作为 expect 的列表参数时，匹配时将返回所处列表
参数timeout指定等待匹配结果的超时时间，单位为秒。当超时被触发时，expect将匹
其中，参数patterm表示字符串、pexpect.EOF（指向缓冲区尾部，
以上代码等价于
import pexpect
方法定义：expect(pattern,timeout=1, searchwindowsize=1)
try:
index=
expect定义了一个子程序输出的匹配规则。
（1）expect 方法
elif index ==3:
elif index ==2:
elif index==1:
default.tar.gz
cc.py
Is/home
[root@sN2013-08-021 ~]# ls /home
Last login:Tue Jan
PI:EMAIL's password: U3497DT32t
dev
do_something_completely_different()
do_some_other_thing()
do_something_else()
do_something()
if index ==0:
index = p.expect(['good','bad'])
p.expect(['good','bad'，pexpect.EOF，pexpect.TIMEOUT])
Linux公社www.linuxidc.com
pypa-setuptoo1s-c508be8585ab
poster-0.8.1.tar.gz
poster-0.8.1
723:05:30 2014 from192.168.1.20
"foo'，
"foobar'])
第5章
系统批量运维管理器pexpect详解
zipfilel.zip
test.sh
tarfile.tar.gz zipfile.zip
，无匹配项）、pexpect.
3
---
## Page 99
logfile=None, cwd=None, env=None)。
方法，不同的是，使用runO可以同时获得命令的输出结果及命令的退出状态，函数定
5.2.2
人键盘。
的内容，after成员保存了最近匹配成功之后的内容。例如：
74第二部分高级篇
参数command可以是系统已知的任意命令，如没有写绝对路径时将会尝试搜索命令的
run是使用pexpect进行封装的调用外部命令的函数，类似于os.system或os.popen
sendeof（）发送eof
sendcontrol（self，char）发送控制字符，如child.sendcontrol（'c'）等价于”ctrl+c”
sendline（self，s=）发送命令，
send(self,
下面这些输人方法的作用都是向子程序发送响应命令，可以理解成代替了我们的标准输
（2）read相关方法
after:password:
before:PI:EMAIL's
运行结果如下：
child.sendline("980405")
child.expect(["password:"])
fout =file('mylog.txt','w)
child = pexpect.spawn('ssh PI:EMAIL')
import sys
expect 方法有两个非常棒的成员：before与 after。before 成员保存了最近匹配成功之前
print"after:"+child.after
print"before:"+child.before
child.logfile =
import pexpect
except TIMEOUT:
except EOF:
run 函数
do_something_completely_different()
do_some_other_thing()
elif index ==1:
do_something_else ()
do_something()
S）发送命令，
Linux公社 www.linuxidc.com
fout
不回车
回车
---
## Page 100
Linux公社微信公众号：linuxidc_com
专题
Linux公社（LinuxIDC.com）设置了有一定影响力的Linux专题栏目。
数据中心，LinuxIDC就是关于Linux的数据中心。
Linux现在已经成为一种广受关注和支持的一种操作系统，IDC是互联网
Linux公社（www.Linuxidc.com）于2006年9月25日注册并开通网站，
Hadoop专题RedHat专题SUSE专题红旗Linux专题CentOS
包括：Ubuntu 专题Fedora专题Android 专题Oracle专题
Linux公社主站网址：
技术。
证、SUSE Linux、Android、Oracle、Hadoop、CentOS、MySQL、
Linux公社是专业的Linux系统门户网站，实时发布最新Linux资讯，包括
欢迎点击这里的链接进入精彩的Linux公社网站
www.Linuxidc.com
inux公社
www.linuxidc.com
搜索微信公众号:linuxidc_Com
源技术教程。
订阅专业的最新Linux资讯及开
微信扫一扫
旗下网站:
Linxidc.com
---
## Page 101
束且出现系统提示符，
与远程主机建立连接，再通过 sendineO方法发送执行的命令，promptO方法等待命令执行结
的操作方法。
5.2.3
路径，events 是一个字典，定义了expect及 sendine方法的对应关系，spawn方式的例子如下：
pxssh 是 pexpect 的派生类，针对在 ssh 会话操作上再做一层封装，提供与基类更加直接
【/home/test/pexpect/ simple1.py 】
下面使用 pxssh 类实现一个 ssh 连接远程主机并执行命令的示例。首先使用 loginO方法
口promptO)等待系统提示符，用于等待命令执行结束。
try:
import getpass
import pxssh
口logoutO断开连接；
口loginO建立 ssh连接；
pxssh常用的三个方法如下：
logfile=None,cwd=None,env=None)
class pexpect.pxssh.pxssh(timeout=30,maxread=2000,
pxssh类定义：
run('scp foo PI:EMAIL:.', events=('(?i)password':mypassword))
from pexpect import*
使用run函数实现如下，是不是更加简洁、精炼了？
child.sendline(mypassword)
child.expect('(?i)password')
frrm pexpect import*
pxssh类
print s.before
s.prompt()
s.sendline ('uptime')
s.login (hostname,
password
username
=pxssh.pxssh()
Linux公社www.linuxidc.com
=
getpass.getpass('please input password:‘）#接收密码输入
raw_input('username:
，最后使用logoutO方法断开连接。
#创建pxssh 对象s
#打印出现系统提示符前的命令输出
#匹配系统提示符
第5章
系统批量运维管理器pexpect详解
searchwindowsize=None
75
---
## Page 102
expectO)方法定义匹配的输出规则，sendlineO)方法执行相关FTP交互命令等，详细源码如下：
载、退出等实现自动化操作，本示例使用pexpect模块的 spawnuO方法执行FTP命令，通过
5.3.1实现一个自动化FTP操作
互，另一个为SSH协议自动化操作，这些都是日常运维中经常遇到的场景。
5.3
76第二部分高级篇
【/home/test/pexpect/ simple2.py】
我们常用FTP协议实现自动化、集中式的文件备份，要求做到账号登录、文件上传与下
child.interact()
#调用interact（）让出控制权，用户可以继续当前的会话手工控制子程序，默认输入“^””字符跳出
sys.stdout.flush()
sys.stdout.write (child.before)
child.expect('ftp>
child.expect（'（?i）password'）#匹配密码输入提示
child.sendline('anonymous')
child=pexpect.spawnu('ftp ftp.openbsd.org')
from
下面介绍两个通过pexpect实现自动化操作的示例，其中一个实现FTP协议的自动交
except pxssh.ExceptionPxssh, e:
child.expect('ftp>
child.sendline('get
child.sendline('bin')
child.expect('ftp>
child.expect('(?i)name.*:
importsys
importpexpect
pexpect 应用示例
print "pxssh failed on login."
print str（e)
s.logout（）#断开ssh连接
print s.before
s.prompt()
s.sendline ('df')
print s.before
s.prompt()
S.sendline ('ls-1')
future_
Linux公社www.linuxidc.com
import unicode_literals#使用unicode编码
robots.txt')
#启用二进制传输模式
#（？i）表示后面的字符串正则匹配忽略大小写
#下载robots.txt文件
运行ftp命令
---
## Page 103
操作。本示例通过使用 spawn()方法执行 ssh、scp命令的思路来实现，具体实现源码如下：
5.3.2
在Linux系统集群运营当中，时常需要批量远程执行Linux命令，并且双向同步文件的
except TIMEOUT:
try:
child.logfile =fout
child=pexpect.spawn('/usr/bin/ssh',
target_file="/data/logs/nginx_access.log"
passwd="H6DSY#*$df32"
user="root"
【/home/test/pexpect/ simple3.py 】
ip="192.168.1.21"
importsys
import pexpect
ftp>#调用interact（）控制项让出，用户可以手工进行交互
Escape character is
26 bytes received in 3.29 secs (0.01 Kbytes/sec)
226Transfercomplete.
227 Entering Passive Mode (129,128,5,191,197,243)
local:robots.txt remote:robots.txt
get robots.txt
运行结果如下：
child.close()
child.sendline('bye')
print "expect TIMEoUT"
print"expect EOF"
远程文件自动打包并下载
fout.close()
child.sendline('exit')
print child.before
child.expect('#')
child.sendline('tar -czf /data/nginx_access.tar.gz'+target_file) #打包nginx
child.expect('#')
child.sendline(passwd)
child.expect('(?i)password')
Linux公社 www.linuxidc.com
#目标主机用户
#定义TIMEOUT异常处理
#定义目标主机
#目标主机密码
#匹配password字符串，（?i）表示不区别大小写
第5章
[user+'@'+ip])
#目标主机 nginx日志文件
系统批量运维管理器pexpect详解
#运行ssh命令
#日志文件
L
---
## Page 104
78第二部分高级篇
except TIMEOUT:
except EOF:
try:
child.logfile=
fout
child
5.2节和5.3节常用类说明与应用案例参考http://pexpect.readthedocs.org/en/latest/。
print"expect EOF"
print"expect
child.expect(pexpect.EoF)
child.sendline(passwd)
child.expect('(?i)password')
/home
file('mylog.txt',a')
pexpect.spawn('/usr/bin/scp"
Linux公社 www.linuxidc.com
fout
TIMEOUT"
#匹配缓冲区EOF（结尾），保证文件复制正常完成
[user+'@'+ip+':/data/nginx_access.tar.
---
## Page 105
装步骤如下：
命令如下（根据用户环境，自行选择pip或easy_install)：
6.1.
SSH协议的功能，官网地址：http://www.paramiko.org，目前最高版本为1.13。
程命令执行、文件传输、中间SSH代理等功能，相对于Pexpect，封装的层次更高，更贴近
paramiko 依赖第三方的 Crypto、Ecdsa 包及 Python开发包 python-devel 的支持，源码安
paramiko支持pip、easy_install或源码安装方式，很方便解决包依赖的问题，具体安装
paramiko是基于Python实现的SSH2远程安全连接，支持认证及密钥方式。可以实现远
#tar-zxvf ecdsa-0.10.tar.gz
check-certificate
easy_install paramiko
pip install paramiko
yum-yinstallpython-devel
 paramiko 的安装
python setup.py install
cd pycrypto-2.6
tar-zxvf pycrypto-2.6.tar.gz
wgethttp://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/pycrypto-2.6.tar.gz
系统批量运维管理器paramiko详解
Linux公社 www.linuxidc.com
第6章
Chpter6
---
## Page 106
exec_commandO方法执行命令，详细源码如下：
80第二部分高级篇
程序的运行结果截图如图6-1所示。
print stdout.read()
ssh=paramiko.SSHClient（）#创建一个ssh客户端client对象
paramiko.util.log_to_file('syslogin.log'） #发送 paramiko 日志到 syslogin.log文件
ssh.close()
stdin,stdout,stderr=ssh.exec_
password='SKJh935yft#
username='root!
hostname='192.168.1.21'
importparamiko
#！/usr/bin/env python
下面介绍一个简单实现远程SSH运行命令的示例。该示例使用密码认证方式，通过
Python 2.6.6(r266:84292,Ju110 2013,22:48:45)
#python