title:Lumpability of fluid models with heterogeneous agent types
author:Giulio Iacobelli and
Mirco Tribastone
Lumpability of Fluid Models with
Heterogeneous Agent Types
Giulio Iacobelli
Mirco Tribastone
Department for Informatics
Ludwig Maximilians University of Munich, Germany
Email: {iacobelli,tribastone}@pst.iﬁ.lmu.de
Abstract—Fluid models have gained popularity in the per-
formance modeling of computing systems and communication
networks. When the model under study consists of many different
types of agents, the size of the associated system of ordinary
differential equations (ODEs) increases with the number of types,
making the analysis more difﬁcult. We study this problem for a
class of models where heterogeneity is expressed as a perturbation
of certain parameters of the ODE vector ﬁeld. We provide
an a-priori bound that relates the solutions of the original,
heterogenous model with that of an ODE system of smaller
size which arises from aggregating system variables concerning
different types of agents. By showing that this bound grows
linearly with the intensity of the perturbation, we provide a
formal justiﬁcation to the intuitive possibility of neglecting small
differences in agents’ behavior as a means to reducing the
dimensionality of the original system.
I.
INTRODUCTION
Fluid (or mean-ﬁeld) techniques have recently found ap-
plications to a large number of stochastic models for the
performance evaluation of computer systems, such as, for
instance, load balancing [24], [9], optical switches [29], vir-
tualized environments [1], and peer-to-peer networks [34]. At
the basis of the ﬂuid approach is the modeling assumption
that the system is comprised of a large number of statistically
identical agents evolving over a set of discrete states. Under
a proper scaling, such a stochastic process converges to a
limit deterministic trajectory solution to a system of ordinary
differential equations (ODEs) [14].
In this paper we study ﬂuid models with explicit hetero-
geneity due to the presence of various types of agents. In
a typical situation, all agents are structurally the same, but
they differ in the rate parameters with which certain actions
are performed. In general, models of this kind can be studied
by describing the overall dynamics for each agent type. For
instance,
in a queueing system with generalized processor
sharing (GPS) discipline [1], in the ﬂuid limit one ODE is
associated with each class of service. Clearly, the analysis of
the resulting model becomes more difﬁcult as the number of
classes increases. This issue is exacerbated when the model
is used for capacity planning purposes and a closed-form
solution is not available, because this involves the computation
of performance indices by repeated numerical ODE integration
with varying parameters.
A natural approach to tackling this problem is by means
of reducing the dimensionality of the system via aggregation.
Given an original ODE system, the objective is to ﬁnd another
one of smaller size whose solution can be related to that of
the original system. Such techniques have been extensively re-
searched in the past, especially outside the context of computer
science and engineering. For instance, Okino and Mavrovouni-
otis [19] offer a review of model reduction of chemical reaction
networks whereas Antoulas focusses on applications in control
theory [2]. The literature can be classiﬁed according to the
following categories:
•
•
•
Lumping operates a projection of the original system
onto one of smaller size [27].
Time-scale analysis considers a separation between
fast and slow activities in the system, e.g., [3] for a
survey.
Sensitivity analysis isolates the variables that have the
most effect on the overall system dynamics (see, e.g.,
references in [19], and [6] for an application).
In this paper, we consider the use of lumping techniques for
the reduction of ﬂuid models with heterogenous agent types.
We do so by ﬁrst reviewing the notion of exact lumpability (as
in [27]) and studying under which conditions a linear mapping
of the variables of a given ODE system yields an aggregated
one that can be analyzed without
incurring any error. In
general, such conditions are too restrictive to enjoy wide
applicability. Recently, however, a similar notion has exploited
to perform model reduction in ODE systems underlying a
stochastic process algebra with massively replicated process
components [28]. In this respect, we show that, unlike [28],
the notion of lumpability used here does not pose constraints
on the initial conditions of the ODE solution, allowing us to
extend the class of applicability of exact aggregation.
Most important, exact lumpability will be used to measure
the degree of heterogeneity of the model under consideration.
This is done by ﬁnding a suitable perturbation of the param-
eters of the original model such that, in the perturbed model,
distinct agent types can be collapsed onto a single variable in a
ODE system which is shown to be exactly lumped with respect
to the perturbed model. Thus, we reduce the dimensionality
of the system by making homogenous, via a perturbation,
originally heterogenous agent types.
Our main result is that we are able to relate the original,
heterogenous model and the lumped one in an approximate
way, which we call ε-lumpability. We provide an error bound
that can be computed a priori, i.e., without having to solve
the original model, which is shown to grow linearly with the
intensity of the perturbation of the original parameters. In
this way, we obtain a formal result that supports the intuitive
978-1-4799-0181-4/13/$31.00 ©2013 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:27 UTC from IEEE Xplore.  Restrictions apply. 
observation that agent
types similar to each other can be
aggregated into a single representative macro-type without
signiﬁcant loss of information for the system dynamics.
Clearly, not every ﬂuid model with heterogenous agent
types is amenable to ε-lumpability. In this paper, we focus
on a class of models for which sufﬁcient criteria are obtained
by checking the structure of the ODE vector ﬁelds in a way
that does not require the computation of an ODE solution.
We show that to such a class belong different kind of models
available in the literature, discussing the following three case
studies of computer and communication systems.
1) A multi-type model of epidemics, originally developed
in [8], whose basic law of interaction has found applica-
tions to network routing protocols (e.g., [33]).
2) A high-level model of bandwidth sharing between hetero-
geneous users, based on [21], [17], [16].
3) A ﬂuid model for a queueing network with GPS disci-
pline, based on [1].
By means of numerical tests, we study repercussion of ε-
lumpability in practice, by comparing the a-posteriori error
of the original model and the lumped one, carrying out a
sensitivity analysis with respect to degree of heterogeneity and
to the size of the lumped system. In the examples examined in
this paper, we ﬁnd that large perturbations in the parameters
can be accommodated, giving rise to negligible a posteriori
errors for all practical purposes of model analysis.
a) Structure of this paper: Section II overviews results
on exact lumpability and introduces a ﬂuid model for band-
width sharing amenable to it, commenting on the differences
with respect to [28]. Section III introduces the notion of ε-
lumpability. The three aforementioned case studies are ana-
lyzed in Section IV, where we discuss how our intuition of
heterogeneity relates to ε-lumpability. The numerical results
are presented in Section V. Section VI discusses related work,
whereas Section VII concludes the paper.
II. EXACT LUMPABILITY
In this section, we ﬁrst report some results about lumpa-
bility for dynamical systems, and we refer the reader to [27]
for a more detailed treatment, as well as for the proofs. This
is then followed by a worked example.
A. Theory Overview
Let n be an integer, E ⊆ Rn, and f : E → Rn be a
Lipschitz continuous vector ﬁeld with constant L, which yields
existence and uniqueness of the solution of the ODE system
(1)
where we use Newton’s dot notation to indicate the derivative
with respect to the variable t, here always intended as time.
Whenever explicit dependence on t is not needed, we shall use
the notation ˙x = f (x) for an autonomous system.
˙x(t) = f (x(t)),
Let ˆn ≤ n be an integer and let M be a ˆn × n real
constant matrix with rank ˆn. Although the results we present
hold for more general matrices, we are mainly concerned with
aggregation matrices, that is, matrices that induce a partition
of the state space and whose entries are either 0 or 1.
Deﬁnition 1. If for all solutions of (1), y(t) := M x(t) obeys
an ODE system
˙y(t) = ˆf (y(t)) ,
(2)
with some function ˆf : E → Rˆn, with E ⊆ Rˆn, then the
system (1) is said to be exactly lumpable to (2) by M.
We conﬁne our analysis over a ﬁnite interval of time where
both (1) and (2) admit a unique solution. The existence of such
an interval follows from the Lipschitz continuity of f, together
with the fact that it is preserved under linear mappings (see
Theorem 2.1, [27]).
The following results can be found in [27]. We emphasize
that, although they were presented for twice continuously
differentiable functions,
the ones we report here are also
satisﬁed when only Lipschitz continuity is required. We ﬁnd it
useful to relax the assumptions on the smoothness of the vector
ﬁeld in order to incorporate dynamics that typically arise in
the modeling of computing systems. For instance, the model
of bandwidth sharing presented in the next section features a
non-differentiable vector ﬁeld due to the presence of minimum
functions.
Theorem 1 (see Theorem 1.2, [27]). The system (1) is exactly
lumpable to (2) by the matrix M if and only if it holds that
M f = ˆf ◦ M.
(3)
In the above equation, “◦” is the operator for function
composition. The left-hand side is the projection of the original
dynamics onto the smaller space. The right-hand side is the
dynamics on the smaller space of the projected variables. Let
¯M ∈ Rn×ˆn denote the generalized right inverse of the matrix
M satisfying
M ¯M = Iˆn ,
where Iˆn ∈ Rˆn×ˆn is the identity matrix.
From Theorem 1 a necessary condition on ˆf, although not
sufﬁcient, can be derived in order for (1) to be exactly lumpable
to (2) by M, that is
ˆf = M f ◦ ¯M .
(4)
Throughout the paper, every time we refer to (2), we will
assume that ˆf is given by (4).
Theorem 2 (see Theorem 1.3, [27]). The ODE system (1) is
exactly lumpable to (2) by M if and only if holds that
M f = (M f ) ◦ ¯M M.
Theorem 3 (see Theorem 1.4, [27]). If (1) is exactly lumpable
to (2) by M, then the right-hand side ˆf of the lumped system
(2) does not depend on the speciﬁc choice of the generalized
inverse of M.
The theorem above characterizes exact lumpability with
respect to the form of ¯M. As will be discussed later, in the case
of ε-lumpability different ¯M will yield different approximate
aggregate systems. The impact of this choice on the actual
error incurred will be discussed in Section V.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:45:27 UTC from IEEE Xplore.  Restrictions apply. 
B. Lumpability for a Fluid Model for Bandwidth Sharing
Although ﬂuid models with heterogeneous agent
types
are not typically amenable to exact lumpability, this notion
will be instrumental for ε-lumpability. Here, we additionally
show that it could be readily used to improve on recent work
on lumpability for ﬂuid models, developed in the context of
process algebra [28]. Let us consider the ODE system
min(x1 + x3, x5)α1 + α2x2,
min(x1 + x3, x5)α1 − α2x2,
˙x1 = − x1
x1 + x3
x1
˙x2 =
x1 + x3
˙x3 = − x3
x1 + x3
x3
min(x1 + x3, x5)α1 + α3x4,
min(x1 + x3, x5)α1 − α3x4,
(5)
x1 + x3
˙x4 =
˙x5 = − min(x1 + x3, x5)α1 + α4x6,
˙x6 = min(x1 + x3, x5)α1 − α4x6,
where α1, . . . , α6 are positive reals. This model may be inter-
preted as follows. There are two classes of clients (variables x1
and x3) which exchange data with a population of servers, x5.
When the transfer occurs, clients change state (respectively, x2
and x4) where they interpose a think time with rates α2 and
α3. After each service, the server goes into sleep, with rate
α4. The basic dynamics for data transfer, consistently with a
number of models already available in the literature (e.g., [21],
[17], [16]), considers α1 as the maximum bandwidth at each
node. The bandwidth-sharing mechanism consists in the two
classes of clients receiving service proportionally to the current
load in the system.
We consider the aggregating matrix M that lumps the two
classes of clients, as follows
0
1
0
0
M =
0
0
0
 1
 ,