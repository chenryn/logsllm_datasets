### Tracing in IBM MQ on AIX and Linux

#### Overview
On AIX and Linux, the `strmqtrc` command is used to control the trace facility. This command allows you to enable or modify tracing with various optional parameters that specify the level of detail.

#### Enabling and Modifying Traces
- **Selective Component Tracing:**
  - Use the `-t` and `-x` parameters to control the amount of trace detail.
  - Specify points to trace using the `-t` parameter or exclude points using the `-x` parameter.
  - Multiple traces with different parameters can run simultaneously if needed.

- **Selective Process Tracing:**
  - Use the `-p` parameter to restrict trace generation to specified named processes.

- **Excluding Message Data:**
  - Use the `-d 0` parameter to prevent IBM MQ from including any message data in its traces.

For detailed information, refer to the `strmqtrc (start trace)` documentation.

#### Stopping Traces
- The `endmqtrc` command is used to stop tracing.
- It ends only the trace described by its parameters.
- Using `endmqtrc` with no parameters stops all early tracing of processes.
- For more information, see `endmqtrc (end trace)`.

#### Formatting Trace Output
- Trace output is unformatted; use the `dspmqrtrc` command to format it before viewing.
- For more information, see `dspmqrtrc (display formatted trace)`.

#### Alternative Tracing on Linux x86-64
- On Linux x86-64 systems, you can use IBM MQ Explorer to start and stop tracing.
- This method traces everything, equivalent to using the commands `strmqtrc -e` and `endmqtrc -e`.

#### Trace Files
- **Files Used:**
  - One file for each entity being traced, where trace information is recorded.
  - One additional file on each machine to provide a reference for shared memory used to start and end tracing.
  - One file to identify the semaphore used when updating the shared memory.

- **File Location:**
  - All client tracing files are created in `/var/mqm/trace`.

- **Note:**
  - Ensure the `/var/mqm/trace` directory is on a local file system separate from the file systems containing your queue managers to avoid outages.
  - The trace directory must have sufficient free space to ensure a complete trace.

- **Trace File Naming:**
  - Trace files are named `AMQppppp.qq.TRC`, where:
    - `ppppp` is the process ID.
    - `qq` is a sequence number starting at 0, incremented until a unique file name is found.
  - SSL trace files are named `AMQ.SSL.TRC` and `AMQ.SSL.TRC.1`. These files cannot be formatted and should be sent unchanged to IBM Support.

- **Handling Large Trace Files:**
  - You can mount a temporary file system over the directory containing trace files or rename the trace directory and create a symbolic link to a different directory.

#### Procedure for Tracing
1. **Set Environment:**
   - If you have multiple IBM MQ installations, set the environment for the desired installation using the `setmqenv` command.
   - Example:
     ```sh
     /opt/mq93/bin/setmqenv -m QMA
     ```

2. **Start Tracing:**
   - Use the `strmqtrc` command.
   - By default, all trace points are enabled, and a default-detail trace is generated.
   - Example:
     ```sh
     strmqtrc -m QMA
     ```

3. **Reproduce the Problem:**
   - Reproduce the problem while tracing is active, keeping the trace as short as possible.
   - Check trace status using `strmqtrc -s`.

4. **Stop Tracing:**
   - Use the `endmqtrc` command to stop tracing immediately after the problem occurs.
   - Example:
     ```sh
     endmqtrc -m QMA
     ```

5. **Format the Traces:**
   - Format the binary trace files using the `dspmqrtrc` command.
   - Example:
     ```sh
     cd /var/mqm/trace
     dspmqrtrc AMQ*.TR?
     ```

6. **Clean Up the Trace Directory:**
   - Clean up the `/var/mqm/trace` directory to reclaim space and prepare for future traces.
   - Save a copy of the binary trace files for as long as you are working with IBM Support, but do not send both binary and formatted traces to IBM.
   - Example:
     ```sh
     rm -f AMQ*.?.TR?
     ```

7. **Collect and Send Traces:**
   - Collect the traces and any other troubleshooting information.
   - If using `runmqras` to collect IBM MQ troubleshooting information, include trace data in the section names specified for the `-section` parameter.
   - Send the traces and other relevant information to IBM.

#### Related Concepts and Tasks
- **FFST: IBM MQ for AIX or Linux:**
  - Describes the First Failure Support Technology (FFST) files for AIX and Linux systems.
- **Collecting Troubleshooting Information:**
  - When opening a case with IBM, include additional IBM MQ troubleshooting information (MustGather data) to help investigate the problem.

#### Tracing with AIX System Trace
- In addition to IBM MQ trace, AIX users can use the standard AIX system trace.
- Note: Use the `aix` option only when directed by IBM service personnel.
- AIX system tracing involves setting the `-o` parameter on the `strmqtrc` command to `aix`, gathering data, and then running the `endmqtrc` command.

#### Example Trace Data
- Extracts from traces for AIX and Linux are provided, showing detailed execution tracing to help analyze problems.

#### Tracing on IBM i
- Tracing on IBM i is nearly identical between server and client installations, with some options available only on server installations.
- Use the `QMQM/STRMQTRC` and `QMQM/ENDMQTRC` programs or the `STRMQTRC`, `ENDMQTRC`, and `DSPMQTRC` commands in Qshell.
- For IBM MQ server installations, the `TRCMQM` command is commonly used to start and stop tracing and specify the type of trace required.

By following these steps and guidelines, you can effectively manage and utilize the trace facility in IBM MQ on AIX and Linux systems.