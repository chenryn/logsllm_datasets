disk.
On AIX and Linux, you use the following commands to control the trace facility:
strmqtrc
On AIX and Linux systems, you enable or modify tracing using the strmqtrc control command. The
command has optional parameters that specify the level of tracing you want. For example:
• For selective component tracing, use the -t and -x parameters to control the amount of trace detail
to record. Specify the points that you want to trace by using the -t parameter or the points you do
not want to trace by using the -x parameter. You can run multiple traces with different parameters
at the same time, if necessary.
• For selective process tracing, use the -p parameter to restrict trace generation to specified named
processes.
• If you need to prevent IBM MQ from including any message data in its traces, use the -d 0
parameter.
For more information, see strmqtrc (start trace).
endmqtrc
To stop tracing, you use the endmqtrc control command. The endmqtrc command ends only the
trace that is described by its parameters. Using endmqtrc with no parameters ends early tracing of all
processes. For more information, see endmqtrc (end trace).
dspmqtrc filename
Trace output is unformatted; use the dspmqtrc control command to format trace output before
viewing. For more information, see dspmqtrc (display formatted trace).
On Linux x86-64 systems, you can alternatively use IBM MQ Explorer to start and stop
tracing. However, you can trace only everything using the function provided, equivalent to using the
commands strmqtrc -e and endmqtrc -e.
The trace facility uses a number of files, which are:
• One file for each entity being traced, in which trace information is recorded.
• One additional file on each machine, to provide a reference for the shared memory used to start and end
tracing.
• One file to identify the semaphore used when updating the shared memory.
Files associated with trace are created in a fixed location in the file tree, which is /var/mqm/trace. All
client tracing takes place to files in this directory.
376 Troubleshooting and Support for IBM MQ
Note: Make sure that the /var/mqm/trace directory is on a local file system that is separate from the
file systems containing your queue managers. Otherwise, you risk an outage if IBM MQ trace fills the file
system that your queue managers are using. The trace directory must have sufficient free space since a
partial trace might not contain the information that IBM Support needs to solve the problem.
Trace files are named AMQppppp.qq.TRC where the variables are:
ppppp
The ID of the process reporting the error.
qq
A sequence number, starting at 0. If the full file name exists, this value is incremented by one until a
unique trace file name is found. A trace file name can exist if a process is reused.
Note:
1.The process identifier can contain fewer, or more, digits than shown in this example.
2.There is one trace file for each process running as part of the entity being traced.
SSL trace files have the names AMQ.SSL.TRC and AMQ.SSL.TRC.1. You cannot format SSL trace files;
send them unchanged to IBM Support.
Note: You can accommodate the production of large trace files by mounting a temporary file system
over the directory that contains your trace files. Alternatively, rename the trace directory and create the
symbolic link /var/mqm/trace to a different directory.
Procedure
1.If you have multiple installations of IBM MQ on a single AIX or Linux system, make sure that your
environment is set for the installation that you want to trace.
For example, if you are tracing a queue manager or application associated with Installation1, then you
must use the setmqenv command to switch to Installation1 before running any of the commands to
start, stop, or format traces, otherwise, your trace will capture no useful information.
Check the /etc/opt/mqm/mqinst.ini file to determine the location of the IBM MQ installations on
your system. Use the setmqenv command to set your environment for the installation you want to
trace.
For example:
Setting your environment for the installation with queue manager QMA
/opt/mq93/bin/setmqenv -m QMA
Setting your environment for installation Installation2
/opt/mq93/bin/setmqenv -n Installation2
2.Start tracing with the strmqtrc command.
By default all trace points are enabled and a default-detail trace is generated. The parameters passed
to strmqtrc control which processes generate trace files and what kinds of data they trace. For
example:
Starting a default detail trace of queue manager QMA
strmqtrc -m QMA
Starting a trace of queue manager QMA with only output data associated with using Transport
Layer Security (TLS) channel security
strmqtrc -m QMA -t ssl
Starting a default detail trace of queue manager QMB with no message data included
strmqtrc -m QMB -d 0
IBM MQ troubleshooting and support 377
Starting an API trace of processes named amqsput with all message data included
strmqtrc -t api -p amqsput -d all
Starting a high detail trace of everything with files that wrap at 100MB
strmqtrc -e -t all -t detail -l 100
For selective component tracing on AIX, use the environment variable
MQS_TRACE_OPTIONS to activate the high detail and parameter tracing functions individually.
Because MQS_TRACE_OPTIONS enables tracing to be active without high detail and parameter tracing
functions, you can use it to reduce the effect on performance and trace size when you are trying to
reproduce a problem with tracing enabled. Typically, MQS_TRACE_OPTIONS must be set in the process
that starts the queue manager, and before the queue manager is started, or it is not recognized. Set
MQS_TRACE_OPTIONS before tracing starts. If it is set after tracing starts it is not recognized.
Note: Only set the environment variable MQS_TRACE_OPTIONS if you have been instructed to do so by
IBM Support.
3.Reproduce the problem while tracing is active, making every attempt to keep the trace as short as
possible.
To check trace status use the -s parameter of the strmqtrc command:
strmqtrc -s
4.Stop tracing with the endmqtrc command.
As soon as the problem has occurred, stop tracing immediately. If you wait to stop the trace, the data
that IBM Support needs might be lost or overwritten. You can stop all traces at once, or you can stop
each trace individually. For example:
Stopping all traces in an installation
endmqtrc -a
Stopping a trace of queue manager QMA
endmqtrc -m QMA
Stopping a trace of processes named amqsput
endmqtrc -p amqsput
5.Format the traces with the dspmqtrc command.
On AIX and Linux, the trace files that IBM MQ generates are binary, and must be formatted before they
can be read. The binary trace files are named like AMQ*.TRC, and if you started a wrapping trace, some
files might also be named like AMQ*.TRS:
cd /var/mqm/trace
dspmqtrc AMQ*.TR?
6.Clean up the trace directory.
Clean up the /var/mqm/trace directory to reclaim space and also to make sure that you are ready to
generate new traces in the future, if necessary. Save a copy of the binary trace files for as long as you
are working with IBM Support, but do not send both binary and formatted traces to IBM. Delete the
binary trace files (except AMQ.SSL.TRC and AMQ.SSL.TRC.1, if present) before sending your trace
files to IBM.
cd /var/mqm/trace
rm -f AMQ*.?.TR?
7.Collect the traces and any other troubleshooting information relating to your problem.
If you are using the runmqras command to collect IBM MQ troubleshooting information and you need
to include trace data, you must include trace in the section names that you specify for the -section
378 Troubleshooting and Support for IBM MQ
parameter. If the traces are very large, you might need to use the -workdirectory option to package
the files in a directory with plenty of free space. For more information, see “Collecting troubleshooting
information automatically with runmqras” on page 303 and “Sending troubleshooting information to
IBM” on page 353.
8.Send the traces and any other troubleshooting information that you have collected for the same
problem to IBM.
For more information, see “Sending troubleshooting information to IBM” on page 353.
Related concepts
“FFST: IBM MQ for AIX or Linux” on page 364
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files for AIX
and Linux systems.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
information described in this section, IBM Support might request further information on a case by case
basis.
Tracing with the AIX system trace
In addition to the IBM MQ trace, IBM MQ for AIX users can use the standard AIX system trace.
Note: You should use the aix option, only when directed to do so by IBM service personnel.
AIX system tracing is a three-step process:
1.Set the -o parameter on the strmqtrc command to aix.
2.Gather the data, then run the endmqtrc command.
3.Format the results.
IBM MQ uses two trace hook identifiers:
X'30D'
This event is recorded by IBM MQ on entry to or exit from a subroutine.
X'30E'
This event is recorded by IBM MQ to trace data such as that being sent or received across a
communications network.
Trace provides detailed execution tracing to help you to analyze problems. IBM service support personnel
might ask for a problem to be re-created with trace enabled. The files produced by trace can be very large
so it is important to qualify a trace, where possible. For example, you can optionally qualify a trace by time
and by component.
There are two ways to run trace:
1.Interactively.
The following sequence of commands runs an interactive trace on the program myprog and ends the
trace.
trace -j30D,30E -o trace.file
->!myprog
->q
2.Asynchronously.
The following sequence of commands runs an asynchronous trace on the program myprog and ends
the trace.
trace -a -j30D,30E -o trace.file
IBM MQ troubleshooting and support 379
myprog
trcstop
You can format the trace file with the command:
trcrpt -t MQ_INSTALLATION_PATH/lib/amqtrc.fmt trace.file > report.file
MQ_INSTALLATION_PATH represents the high-level directory in which IBM MQ is installed.
report.file is the name of the file where you want to put the formatted trace output.
Note: All IBM MQ activity on the machine is traced while the trace is active.
Example trace data for AIX and Linux
Extracts from traces file for AIX and Linux.
Example for AIX
Figure 57 on page 380 shows an extract from an IBM MQ for AIX trace:
Timestamp Process.Thread Trace Ident Trace Data
===========================================================
12:06:32.904335 622742.1 : Header.v02:9.0:AIX 7.2:64:-1:1:GMT
12:06:32.904427 622742.1 : Version : 9.0.0.0 Level : p000-L090514
12:06:32.904540 622742.1 : UTC Date : 05/15/16 Time :
11:06:32.904302
12:06:32.904594 622742.1 : Local Date : 05/15/16 Time :
12:06:32.904302 GMT
12:06:32.904697 622742.1 : PID : 622742 Process : dltmqm_nd (64-bit)
12:06:32.904728 622742.1 : Host : dynamo
12:06:32.904755 622742.1 : Operating System : AIX 7.3
12:06:32.904781 622742.1 : Product Long Name : IBM MQ for AIX
12:06:32.904806 622742.1 : --------------------------------
12:06:32.904832 622742.1 : xtrNullFd: 3, xihTraceFileNum: 5
12:06:32.904916 622742.1 : Data: 0x00000000
12:06:32.904952 622742.1 : Thread stack
12:06:32.904982 622742.1 : -> InitProcessInitialisation
12:06:32.905007 622742.1 : { InitProcessInitialisation
12:06:32.905033 622742.1 : -{ xcsIsEnvironment
12:06:32.905062 622742.1 : xcsIsEnvironment[AMQ_NO_CS_RELOAD] = FALSE
12:06:32.905088 622742.1 : -} xcsIsEnvironment rc=OK
12:06:32.905117 622742.1 : -{ xcsLoadFunction
12:06:32.905145 622742.1 : LibName(libmqmcs_r.a(shr.o))
LoadType(2097200)
12:06:32.905178 622742.1 : General, comms, CS, OAM, or WAS
12:06:32.905204 622742.1 : --{ xcsQueryValueForSubpool
12:06:32.905282 622742.1 : --} xcsQueryValueForSubpool rc=OK
12:06:32.905504 622742.1 : FullPathLibName(/usr/mqm/lib64/
libmqmcs_r.a(shr.o)) loaded with load
12:06:32.905540 622742.1 : --{ xcsGetMem
12:06:32.905575 622742.1 : component:24 function:176 length:2088
options:0 cbmindex:-1 *pointer:110011408
12:06:32.905601 622742.1 : --} xcsGetMem rc=OK
12:06:32.905638 622742.1 : Handle(0) Function(0)
FullPathLibName(/usr/mqm/lib64/libmqmcs_r.a(shr.o))
12:06:32.905665 622742.1 : -} xcsLoadFunction rc=OK
Figure 57. Sample IBM MQ for AIX trace
Example for Linux
Figure 58 on page 381 shows an extract from an IBM MQ for Linux trace:
380 Troubleshooting and Support for IBM MQ
Timestamp Process.Thread Trace Ident Trace Data
===========================================================
11:02:23.643879 1239.1 : Header.v02:9.0:Linux RHEL Server 7
7.2:64:-1:1:GMT
11:02:23.643970 1239.1 : Version : 9.0.0.0 Level : p000-L090514
11:02:23.644025 1239.1 : UTC Date : 05/15/16 Time :
10:02:23.643841
11:02:23.644054 1239.1 : Local Date : 05/15/16 Time :
11:02:23.643841 GMT
11:02:23.644308 1239.1 : PID : 1239 Process : dltmqm (64-bit)
11:02:23.644324 1239.1 : Host : hal1
11:02:23.644334 1239.1 : Operating System : RHEL Server 7 7.2
11:02:23.644344 1239.1 : Product Long Name : IBM MQ for Linux (x86
platform)
11:02:23.644353 1239.1 : --------------------------------
11:02:23.644363 1239.1 : xtrNullFd: 3, xihTraceFileNum: 4
11:02:23.644394 1239.1 : Thread stack
11:02:23.644412 1239.1 : -> InitProcessInitialisation
11:02:23.644427 1239.1 : { InitProcessInitialisation
11:02:23.644439 1239.1 : -{ xcsIsEnvironment
11:02:23.644469 1239.1 : xcsIsEnvironment[AMQ_NO_CS_RELOAD] = FALSE
11:02:23.644485 1239.1 : -} xcsIsEnvironment rc=OK
11:02:23.644504 1239.1 : -{ xcsLoadFunction
11:02:23.644519 1239.1 : LibName(libmqmcs_r.so) LoadType(2097200)
11:02:23.644537 1239.1 : General, comms, CS, OAM, or WAS
11:02:23.644558 1239.1 : --{ xcsQueryValueForSubpool
11:02:23.644579 1239.1 : --} xcsQueryValueForSubpool rc=OK
11:02:23.644641 1239.1 : FullPathLibName(/opt/mqm/lib/
libmqmcs_r.so) loaded with dlopen
11:02:23.644652 1239.1 : --{ xcsGetMem
11:02:23.644675 1239.1 : component:24 function:176 length:8212
options:0 cbmindex:-1 *pointer:0x8065908
11:02:23.644685 1239.1 : --} xcsGetMem rc=OK
11:02:23.644722 1239.1 : Handle((nil)) Function((nil))
FullPathLibName(/opt/mqm/lib/libmqmcs_r.so)
11:02:23.644732 1239.1 : -} xcsLoadFunction rc=OK
11:02:23.644753 1239.1 : SystemPageSize is 4096.
Figure 58. Sample IBM MQ for Linux trace
Tracing on IBM i
On IBM i, tracing is nearly identical between server and client installations. However, some tracing options
are available on server installations only and some options do not apply to a stand-alone client.
About this task
On IBM i, both the server and client support tracing at the IBM i command line by calling the QMQM/
STRMQTRC and QMQM/ENDMQTRC programs, and both support tracing at the IBM i Qshell using the
STRMQTRC, ENDMQTRC and DSPMQTRC commands.
However, only the IBM MQ server installation for IBM i provides the TRCMQM command. Furthermore, a
stand-alone client does not support the -m parameter on either the start or end trace commands, since
there are no queue managers. The runmqras -qmlist parameter is not valid on a stand-alone client for
the same reason.
Related concepts
“FFST: IBM MQ for IBM i” on page 365
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files for IBM i
systems.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
IBM MQ troubleshooting and support 381
information described in this section, IBM Support might request further information on a case by case
basis.
Using trace with IBM MQ server on IBM i
If you have an IBM MQ server installation on IBM i, you can use the TRCMQM command to start and stop
tracing and specify the type of trace that you require. Alternatively, you can control tracing from the IBM
i command line by calling the QMQM/STRMQTRC and QMQM/ENDMQTRC programs, or in the IBM i Qshell
using the STRMQTRC, ENDMQTRC and DSPMQTRC commands.
About this task
Traces can capture the root cause of many IBM MQ problems. It is important to limit how long tracing is
active in order to avoid affecting performance or generating excessively large trace files and filling up your
disk.
Early tracing lets you trace the creation and startup of queue managers. However, early trace can easily
generate large amounts of trace, because it is implemented by tracing all jobs for all queue managers.
If you have an IBM MQ server installation on IBM i, the TRCMQM command is the most commonly used
way of starting and stopping trace. You can use the optional parameters to specify the level of tracing you