# Customizing the Evil Protocol to Exploit an SDN Controller

## Authors
- Feng Xiao, Ph.D. student at Penn State, Cyber Security Lab
- Jianwei Huang, Researcher at Wuhan University
- Peng Liu, Professor at Penn State, Cyber Security Lab

## What is SDN?
Software-Defined Networking (SDN) is an emerging architecture that decouples the network control and forwarding functions, enabling more flexible and programmable network management.

### SDN Components
- **Control Plane**: Manages and configures the network.
- **Data Plane**: Forwards traffic based on the rules set by the control plane.

## Current SDN Landscape
- **Controllers**: Over 15 popular controllers are in use.
- **Projects**: More than 3,000 open-source SDN projects.
- **Contributors**: Data centers, IDCs, telecom companies, and more.

## Overview of SDN Attacks
### Control Plane
- **Topology Tampering**
- **Control Channel Flooding**

### Data Plane
- **Switch OS Hacking**
- **TCAM Flooding**

## Exploiting SDN Like a Hacker
### Decoupled Control and Data Planes
- **Firewall**
- **Load Balancing**
- **Controller**
- **OpenFlow**
- **OVSDB**
- **Control Channel**
- **Switch**
- **Host**
- **Infrastructure**

### Custom Attack
- **Custom Protocol Field (CPF)**: Inserted into legitimate protocol interactions.
  - **Controlled by Data Plane**
  - **Processed by Controller Components**

### Potential Consequences
- **Execute Arbitrary SDN Commands**
- **Steal Confidential Data**
- **Crash or Disrupt Services**
- **Disable Network Functions**

## Threat Model
- **Assumptions**:
  - Hackers do not have direct network access to SDN controllers or applications.
  - The control channel is protected by SSL/TLS.
- **Attack Vectors**:
  - **Compromised Host**: Exploitable if the target network is configured with in-band control.
  - **Compromised Switch**: Vulnerable to multiple remote attacks (e.g., Buffer Overflow [CVE-2016-2074]).

## Attack Workflow
1. **CPF Delivery via Legitimate Protocol Interactions**
   - **Crafted Protocol Message**
2. **Payload Transformation for Final Exploitation**
   - **Payload in Form 1**
   - **Payload in Form N**
3. **Subvert SDN Controller**

## Real-World Exploits
- **Plaintext Key**
- **Command Execution**
- **Path Traversal**
- **XXE (XML External Entity)**
- **XSS (Cross-Site Scripting)**

## Evaluation
- **Controllers**:
  - 5 popular SDN controllers
    - 3 open-source projects (White-box)
    - 2 commercial products (Black-box)
- **Applications**:
  - 54 apps
  - 12 protocols analyzed
  - 476 dangerous function calls identified
- **Vulnerabilities**:
  - 19 zero-day vulnerabilities
  - 24 sophisticated exploit chains constructed

### Impact Analysis
- **Get System Shell**: 1 instance
- **Execute Arbitrary SDN Commands**: 5 instances
- **Steal Confidential Data**: 7 instances
- **Crash/Disrupt Service**: 11 instances

## Zero-Day Profile
- **ONOS Remote Command Execution**

## Conclusions
- This is the first attack that can remotely compromise the SDN software stack, causing multiple kinds of attack effects simultaneously.
- The data-plane-based attack surface is significantly larger than previously known.
- Service-logic-free vulnerabilities in the controller can be exploited in unexpected ways, overcoming the challenges posed by predefined protocol interactions.

## Contact Information
- **Email**: PI:EMAIL
- **Homepage**: [http://fxiao.me](http://fxiao.me)
- **Twitter**: [@f3ixiao](https://twitter.com/f3ixiao)

Thank you!