如果想了解更多关于Asprox的信息，访问下列URL：
●www.toorcon.org/tcx/18_Brown.pdf
xanalysis.blogspot.com/2008/05/asprox-trojan-and-banner82com.html
2.3.4时间延迟
测试应用程序是否存在SQL注入漏洞时，经常发现某一潜在的漏洞难以确认。这可能源
于多种原因，但主要是因为Web应用未显示任何错误，因而无法检索任何数据。
对于这种情况，要想识别漏洞，可以向数据库注入时间延迟，并检查服务器的响应是否也
已经产生了延迟。时间延迟是一种很强大的技术，Web服务器虽然可以隐藏错误或数据，但必
须等待数据库返回结果，因此可用它来确认是否存在SQL注入。该技术尤其适合盲注。
Microsoft SQLServer服务器包含一条向查询引I入延迟的内置命令：WAITFORDELAYhours
minutes:seconds'。例如，向Victim 公司的Web服务器发送下列请求，服务器的响应大概要花
5秒：
http://www, victim.com/basket ,aspx?uid=45;waitfor de1ay *0:0:5*;=-
服务器响应中的延迟使我们确信我们正在向后台数据库注入SQL代码。
MySQL数据库没有与WAITFORDELAY等价的命令，但它可以使用执行时间很长的函数
来引I入延迟。BENCHMARK函数是很好的选择。MySQL的BENCHMARK函数会将一个表达
式执行许多次，它通常被用于评价MySQL执行表达式的速度。根据服务器工作负荷和计算资
源的不同，数据库需要的时间也会有所不同。但如果延迟比较明显，也可使用该技术来识别漏
洞。请看下面的例子：
mysql> SELECT BENCHMARK (10000000, ENCODE(*he11o′, *mom′)) ;
|BENCHMARK (10000000, ENCODE (*he11o′, *mom′))
59
---
## Page 74
SQL注入攻击与防御（第2版）
01
1 row in set (3.65 sec)
执行该查询花费了3.65秒。如果将这段代码注入SQL注入漏洞中，那么将延迟服务器的
响应。如果想进一步延迟响应，只需增加选代的次数即可，如下所示：
http1//www.victim,com/disp1ay-php?id=32; SELECT
BENCHMARK(10000000, ENCODE(*he11o*, *mOm*)) -
在Oracle PL/SQL中，可使用下列指令集创建延迟：
NIS38
DBMS_LOCK, SLEEP (5) ;
END;
DBMS_LOCK.SLEEPO函数可以让一个过程休眠很多秒，但使用该函数存在许多限制。首
先，不能直接将该函数注入子查询中，因为Oracle不支持堆叠查询（stackedquery)。其次，只
有数据库管理员才能使用DBMS_LOCK包。
在OraclePLSQL中有一种更好的办法，可以使用下面的指令以内联方式注人延迟：
http: / /www.victim,com/display-php?id=32 or 1=dbms_pipe,receive_
message (*RDS*, 10)
DBMS_PIPE.RECEIVE_MESSAGE函数将为从RDS管道返回的数据等待10秒。默认情况
下，允许以public权限执行该包。DBMS_LOCK.SLEEPO与之相反，它是一个可以用在SQL
语句中的函数。
在最新版本的 PostgreSQL数据库(8.2及以上版本)中，可以使用pg_slcep函数来引起延迟：
http1 / /www,victim,com/disp1ay-php7id=32: SELECT p9_sleep (10) :=*
2.4自动寻找SQL注入
到目前为止，本章已介绍了多种手动寻找Web应用中SQL注入漏润的技术。该过程涉及
三个任务：
·识别数据输入
·注入数据
●检测响应中的异常
本节将介绍如何适度地目动化该过程，但有些问题需要应用程序进行处理。识别数据输入
是可以自动化的，它只涉及搜索Web站点和寻找GET及POST请求。数据注入也可以自动完
成，因为上一阶段已经获取了发送请求所需要的所有数据。要想自动寻找SQL注入漏洞，主
要问题在于检测远程服务器响应中的异常。
09
---
## Page 75
第2章SQL注入测试
对于人来说，区分错误页面或其他类型的异常非常容易：但对于程序来说，要理解服务器
输出，有时会非常困难。
有些情况下，应用可以很容易地检测到数据库发生了错误：
·Web应用返回由数据库产生的SQL错误
●Web应用返回HTTP 500 错误
·一些SQL盲注场合
但对于其他的情况，应用将很难识别存在的漏洞，而且很可能出现遗漏。因此，我们一定
要理解自动发现SQL注入的局限性和手动测试的重要性。
进一步讲，测试SQL注入漏洞时，还存在另外一个可变因素。应用程序是由人编写的，
因此本质上bug也是由人产生的。查看Web应用时，根据直觉和经验，我们可以感知到哪里
可能存在潜在的漏洞。之所以会这样，是因为我们能理解应用，但对于自动化的工具来说，它
们无法做到这一点。
我们可以很容易识别出Web应用中未完全实现的部分，比如只需阅读页面中“Beta release
一we are still testing”这样的标题。很明显，相对于测试成熟的代码来说，我们此时可能拥有
更多机会来发现有趣的漏洞。
此外，经验会告诉我们，程序员可能忽略了哪部分代码。例如，有些情况会要求用户直接
填写输入字段，这时可能需要对大多数输入字段进行验证。但如果输入是由其他过程产生的，
并且是动态地写到页面上(这时用户可操纵它们)，然后被SQL语句重用，那么此时很少会进行
验证，因为程序员会认为它们来自可信的源。
从另一方面看，自动化的工具比较系统化且考虑周到。它们虽然不理解Web应用的逻辑，
但是却可以非常快地测试出许多潜在的注入点，这一点是人很难做到的。
自动寻找SQL注入的工具
下面将介绍一些用于寻找SQL注入漏洞的商业及免费工具。这里并不打算介绍那些关注
于如何利用漏洞的工具。
1. HP Weblnspect
WcbInspect是一款由 Hewlett-Packard开发的商业工具。虽然可将它用作发现SQL注入的
工具，但其真实目的是完整评估Web站点的安全性。该工具不要求任何技术知识，可用于对
应用服务器和Web应用层进行完整扫描，测试存在的错误配置和漏润。图2-17是该工具运行
时的截图。
WebInspect系统化地分析发送给应用的参数，测试包括跨站脚本(XSS)、远程和本地文件
包含、SQL注入、操作系统命令注入等在内的所有类型的漏洞。还可以使用WebInspect编写
一个测试宏来模拟用户身份验证或其他过程。WebInspect 提供了4种身份验证机制：Basic、
NTLM、Digest 和 Kerberos。WebInspect 还可以解析JavaScript 和 Flash 内容，能够测试 Web 2.0
技术。
↓9
---
## Page 76
SQL注入攻击与防御（第2版）
KHPW
sCopim
(an1re
dLIHE
PU
DTet
9
图 2-17HP Weblnspect
对于SQL注入，WebInspect能检测参数的值并根据参数是字符串还是数字来修改自身的
行为。下面列出了WebInspect识别SQL注入漏洞时发送的注入字符串。
value’ OR
value' OR 5=5 OR 's’=0
●value' AND 5=5 OR 's=0
●value'OR 5=0 OR's'=0
●value' AND 5=0 OR s=0
●0+valuc
●value AND 5=5
value AND 5=0
●value OR 5=5 OR 4=0
●value OR 5=0 OR 4=0
Weblnspect附带有一个名为SQLInjector的工具，可通过它来利用扫描过程中发现的SQL
注入漏洞。SQLInjector包含从远程数据库检索数据的选项，并以图形化的方式提供给用户。
● URL: www8.hp.com/us/en/software/software-solution.html?compURI=tcm:245-936139。
●支持的平台：Microsoft Windows XP Professional SP3、Windows Server 2003 SP2、
Windows Vista SP2、 Windows 7 和I Windows Server 2008 R2。
62
---
## Page 77
第2章SQL注入测试
●要求:Microsoft .NET 3.5 SP1、Microsoft SQL Server 或 Microsoft SQL Server Express
Edition。
·价格：与厂商洽谈。
2. IBM Rational AppScan
AppScan是另一款用于评估Web站点安全性的商业工具，包含了SQL注入评估功能。该
工具的运行方式与Weblnspect相似：搜索目标Web站点并进行大范围的潜在漏洞测试。AppScan
能检测出常规的 SQL注入漏洞和 SQL盲注漏洞，与WebInspect不同的是，它不包含利用漏洞
的工具。表2-7列出了AppScan在推断过程中发送的注入字符串。
表2-7AppScan识别SQL注入漏润时使用的特征值
测试字符串
WF 'SQL “Probe;A-B
'+’somechars
(,mqooj,,oojeq, pue,
having 11--
somechars’+′
mqpoj,oojeq, pue,
1 having 1=1-
somechars"
）
'or' foobar’=foobar'--
Vhaving 11--
‘T'somechars
'or' foobar'foobar')--
)having 1=1--
T
‘and’ foobar’foobar
%a5'having 11
or 76597659
eqooj,,tqoog pue,
|vol
and 79657965
# 1
'exec master.
xp_cmdshell vol-
°vol
and 07965
--sostqeseps.As'oqp tuog 。 1ojos1,
“°vol
/**/or/**/79657965
‘or'foobarfoobar
';select @@ version,1,1,1-*
[o4]
/**/and/*/79657965
'and’foobar’'foobar
*select * from master...ysme
*+*+
/**/and/**/07965
qooy,,qoogpu,
*;select * from sys.dba_users--
AppScan同样提供了宏记录功能来模拟用户行为及输入身份验证凭证。该平台还支持基本
的HTTP和NTLM身份验证以及客户端证书。
AppScan提供了一个非常有趣的功能一优先级提升测试。本质上，可以使用不同的优先
级（例如，未认证、只读和管理员）对同一目标进行测试。之后，AppScan将尝试从低优先级账
户中访问通过高优先级账户才能获得的信息，以此来发现潜在的优先级提升问题。
图2-18是一幅AppScan 扫描过程中的截图。
● URL: www-01.ibm.com/software/awdtools/appscan/。
支持的平台：Microsoft Windows XP Professional SP2、Microsoft Windows 2003、
Microsoft Windows Vista、 Windows 7、 Windows Server 2008 和I 2008 R2 。
·要求：Microsof.NET2.0或3.0（用于某些可选的附加功能）。
·价格：与厂商洽谈。
63
---
## Page 78
SQL注入攻击与防御（第2版）
图 2-18 IBM Rational AppScan
3. HP Scrawlr
Scrawlr是由HP Web 安全研究小组(HP Web Security Research Group)开发的一款免费工具。
Scrawlr搜索指定的URL并分析每个Web页面的参数以便寻找SQL注入漏洞。
HTTP爬虫搜索（crawl）是一种检索Web页面并识别包含在其中的Web链接的操作。该操作
被反复应用到每个识别出的链接上，直到Web站点中所有链接的内容均被检索为止。这就是
Web评估工具创建目标Web站点地图以及搜索引擎建立内容索引的具体过程。在搜索过程中，
Web评估工具还会存储参数信息以供后面测试使用。
输入URL并单击Start后，程序便开始爬行搜索目标Web站点并执行推断过程以发现SQL
注入漏洞。搜索结束后，它会向用户显示结果，如图2-19所示。
L
图 2-19 HP Serawlr
64
---
## Page 79
第2章SQL注入测试
该工具不需要任何技术知识，只需输入想要测试的域名信息即可。由于该工具是从根目录
文件夹开始搜索Web站点，因而不能通过它来测试特定的页面或文件夹。如果要测试的页面
未链接到任何其他页面，那么搜索引将无法找到它，因而也就无法进行测试。
Scrawlr只测试GET参数，所以Web站点中的所有表单都将得不到测试，从而会产生不完