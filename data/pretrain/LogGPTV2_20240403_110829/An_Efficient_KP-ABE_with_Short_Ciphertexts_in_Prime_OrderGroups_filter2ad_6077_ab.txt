...
−(ρ(x))n
 =
0
1
2
h(cid:48)
h(cid:48)
h(cid:48)
...
h(cid:48)
n
kT ag1,x
kT ag2,x
...
kT agn,x
. . .
···
1
cn
c1
c2
c0
cT ag
where cj is coeﬃcients of yj of (cid:81)
0, ...h(cid:48)
ρ(x)∈S∗ (y − ρ(x)) and S∗
is the target set of attributes for the challenge ciphertext.
Moreover, we set h(cid:48)
n are information theoretically hid-
0, ...h(cid:48)
den to the adversary. It means that the values of h(cid:48)
n
are not revealed anywhere else. Therefore, the correlation
between tags in the challenge key (in particular, tags of the
isolated row in the challenge key) and the challenge cipher-
text is information theoretically hidden to the adversary as
the dual system encryption requires.
1.3 Related Works
Although the ﬁrst KP-ABE was introduced by Goyal et
al. [22] under the Decisional Bilinear Diﬃe-Hellman assump-
tion, q-type assumptions were widely used to prove the se-
lective security of Attribute-Based Encryption [42, 36, 7]
as in other public key encryption systems [9, 10, 18, 20].
Although Lewko and Waters [29] demonstrated how q-type
assumptions were able to be utilized to achieve adaptive se-
curity, q-type assumptions are less desirable for the security
of cryptographic primitives. Cheon [16] and Sakemi et al.
[38] show that schemes under q-type assumptions are vul-
nerable in practice.
Several fully secure KP-ABE schemes [27, 28, 4] were in-
troduced in composite order groups. However, it is well
known that composite order groups bring signiﬁcant ineﬃ-
ciency into an encryption system. Guillevic [23] noted that
to achieve 128 bits security in composite order groups, the
size of each group element must be about 10 times larger
than the group element of prime order groups.
In addi-
tion, computing a pairing operation is more than 200 times
slower even if the group order is the product of two primes.
More recently, in [29, 26], this ineﬃciency of composite or-
der group was eased through the use of Dual Pairing Vector
Spaces (DPVS) [32, 34, 33] technique. Essentially, DVPS al-
lows the construction which exhibits key properties of com-
posite order groups, including parameter hiding and orthog-
onality, using prime orders by orthogonal vector spaces, but
DPVS still retains an eﬃciency loss caused by the size of a
vector since the size of parameters and the number of pair-
ing computations normally increases linearly with the size
of the vector in the system. Therefore, it remains a diﬃ-
cult task to construct an ABE achieving more than selective
security under static assumptions without using composite
order groups or DPVS.
More recently, Dual System Groups (DSG) [13] were of-
ten used to construct ABE in prime order groups. In DSG,
the size of parameters of ABE scheme depends on the as-
sumptions they relied on. Agrawal and Chase [3] suggested
KP-ABE scheme with a short ciphertext using dual sys-
tem groups using DSG. In their scheme, they showed that
Attrapadung’s scheme [4] can be featured in prime order
groups under the standard assumption. In their conversion,
one element in composite order groups [4] can be realized
two group elements in prime order groups under the SXDH
(Symmetric eXternal Diﬃe-Hellman) assumption or three
group elements under the more standardized Decisional Lin-
ear (DLIN) assumption.
The ﬁrst fully secure expressive KP-ABE scheme was in-
troduced by Lewko, Okamoto, Sahai, Takashima and Wa-
ters [27] in composite order groups while a selectively secure
scheme was ﬁrst introduced by Goyal et al.
[22] in prime
order groups. Since then, KP-ABE of [27] was developed in
many directions. KP-ABE schemes with a large universe are
suggested in [4, 28, 35]. In a large universe of attributes, KP-
ABE system supports exponentially many attributes. Also,
they support a growing system without changing the initial
set-up. To take beneﬁts of prime order groups, a scheme
825[35] with a large universe also suggested using DPVS. But,
it does not allow multi-use of attributes and constant-size
ciphertexts.
A semi-adaptive security model is suggested by Chen and
Wee [15]. It is a stronger notion than a selective security, but
weaker than an adaptive security. In a semi-adaptive secure
KP-ABE, the adversary is not required to declare its target
before seeing any public parameters, but it must declare the
target before it queries any private key.
Kim et al.
[25] introduced a generic way (i.e. tag based
encoding) to achieve encryption scheme using Water’s dual
system encryption. They generalized Waters’ identity-based
encryption [41] for generic encryption schemes but without a
nested methodology. Therefore, our scheme cannot be ﬁtted
into their framework.
2. BACKGROUND
2.1 Monotone Access Structures [8]
Deﬁnition 1 (Access Structure) Let {P1, ..., Pn} be a set
of parties. A collection A ⊂ 2{P1,...,Pn} is monotone if
∀B, C: if B ∈ A and B ⊂ C, then C ∈ A. An monotone
access structure is a monotone collection A of non-empty
subsets of {P1, ..., Pn}, i.e., A ⊂ 2{P1,...,Pn} \ {}. If the sets
in A, they are called the authorized sets. Otherwise, if the
sets not in A, they are called the unauthorized sets.
Deﬁnition 2 (Linear Secret-Sharing Schemes (LSSS)) A
secret sharing scheme Π over a set of parties P is called
linear (over Zp) if
1. The shares for each party form a vector over Zp.
2. The share-generating matrix A exists for Π. The matrix
A has m rows and (cid:96) columns. For all i = 1, ..., m, the ith
row of A is labelled by a party ρ(x) ( ρ : {1, ..., m} → P ).
When we consider the column vector v = (s, r2, ..., r(cid:96)) ∈ Z(cid:96)
p,
where s is the secret to be shared and r2, ..., r(cid:96) are randomly
selected, then Av is the vector of m shares of the secret s
according to Π. The share (Av)i belongs to party ρ(x).
We point out that, in our KP-ABE scheme, ρ is not nec-
essary to be injective. It means that our KP-ABE scheme
naturally allows multi-use of attributes.
2.2 Bilinear Maps in Prime Order Groups
We brieﬂy describe the important properties of prime or-
der bilinear groups. Let set G as a group generator taking a
security parameter λ as input and outputting a description
of a bilinear group G. For our purposes, we will have G out-
put (p, G1, G2, GT , e) where p are a prime, G1, G2 and GT
are cyclic groups of order p, and e : G1 × G2 → GT is an
eﬃciently computable non-degenerate bilinear map.
We assume that the group operations in G1, G2 and GT as
well as the bilinear map e are eﬃciently computable in poly-
nomial time with respect to λ and that the group descrip-
tions of G1, G2 and GT include generators of the respective
cyclic groups. If G1 = G2, we call e a symmetric pairing and
we use G to denote both G1 and G2 (i.e. e : G × G → GT ).
Otherwise, we call e an asymmetric pairing.
2.3 Complexity Assumptions
Decisional Linear Assumption (DLIN) Given a group
generator G, we deﬁne the following distribution:
G = (p, G, GT , e) R←− G,
g, f, ν R←− G,
c1, c2
R←− Zp,
D = (G, g, f, ν, gc1 , f c2 ), T1 = νc1+c2 , T2
R←− G
We deﬁne an advantage of an algorithm A in breaking DLIN
to be:
AdvDLING,A (λ) := | Pr[A(D, T1) = 1] − Pr[A(D, T2) = 1]|
Decisional Bilinear Diﬃe-Hellman Assumption (DBDH)
Given a group generator G, we deﬁne the following distribu-
tion:
G = (p, G, GT , e) R←− G,
g R←− G,
c1, c2, c3
R←− Zp
D = (G, g, gc1 , gc2 , gc3 ), T1 = e(g, g)c1c2c3 , T2
We deﬁne an advantage of an algorithm A in breaking DBDH
to be:
R←− GT
AdvDBDH
G,A
(λ) := | Pr[A(D, T1) = 1] − Pr[A(D, T2) = 1]|
In our security proofs, we utilize both DLIN and DBDH.
However, it is well known that DLIN implies DBDH [11, 14].
2.4 Key-Policy Attribute-Based Encryption
KP-ABE system is obtained by four PPT algorithms, Setup,
Encrypt, KeyGen and Decrypt. Since we aim to describe a
large universe of attributes, the total number of attributes
in the universe is not necessary for Setup. Setup only needs
the description of the universe of attributes in our deﬁnition
and a maximum number of attributes per ciphertext, n.
Setup(λ, U , n): The setup algorithm takes as input a secu-
rity parameter λ, an attribute universe description U and a
maximum number of attributes per ciphertext, n. It outputs
public parameters PK and a master secret key MSK.
Encrypt(P K, M , S): The encryption algorithm takes as in-
put the public parameters P K, a message M , and a set of
attributes S over the universe of attributes.
KeyGen(M SK, P K, A = (A, ρ)): The key generation algo-
rithm takes as input the master secret key M SK, the public
parameters P K, and an access structure A. It outputs a pri-
vate key SK.
Decrypt(P K, CT , SK): The decryption algorithm takes as
input the public parameters P K, a ciphertext CT , and a
private key SK. If a set of attributes of the ciphertext sat-
isﬁes an access structure of the private key, it outputs the
message M which is encrypted in CT .
2.5 Security Model for KP-ABE
The security model of a semi-adaptive secure KP-ABE is
deﬁned as follows.
Setup The challenger runs Setup algorithm and sends pub-
lic parameters P K to the attacker.
Init After all public parameters are published, the attacker
chooses a target set of attributes S∗ for the challenge cipher-
text and gives it to the challenger.
Phase 1 The attacker queries the challenger for private keys
corresponding to access structures A1, ..., Aq1 .
Challenge The attacker sends two messages M0 and M1
and a set of attributes S∗ such that S∗ does not satisfy any
of the queried access structures, A1, ..., Aq1 to the challenger.
The challenger randomly generates β ∈ {0, 1}, and encrypts
Mb under S∗, producing CT ∗. It responses to the attacker
by sending CT ∗.
826Phase 2 The attacker queries the challenger for private keys
corresponding to sets of access structures Aq1+1, ..., Aq, with
the restriction that none of these are satisﬁed by S∗. Guess
The attacker outputs a guess β(cid:48) for β. The advantage of an
attacker in this game is deﬁned to be Pr[β = β(cid:48)] − 1/2.
Deﬁnition 3 (semi-adaptively secure KP-ABE) A key pol-
icy attribute-based encryption system is semi-adaptively se-
cure if all polynomial time attackers have at most a negligible
advantage in the security game above.
3. KP-ABE WITH SHORT CIPHERTEXTS
We introduce KP-ABE with short ciphertexts in a large
universe U .
In this system, the maximum number of at-
tributes per ciphertext is bounded by n, but the total num-
ber of attributes in the system is not bounded.
In this
scheme, we achieve short ciphertexts using a formula pro-
vided in [7], but leverage an entropy using the nested dual
system encryption instead of a q-type assumption. More-
over, our technique achieve additional improvement in the
scheme. Our scheme is semi-adaptively secure with a large
universe of attributes although the scheme of [7] achieves a
selective security with a small universe.
3.1 Construction
R←− G(λ, p). Then, the algo-
Setup(λ, U , n) First, G and GT
rithm generates g, v, v1, v2, w ∈ G and exponents a1, a2, b, α,
h0, ..., hn ∈ Zp. Let τ1 = vva1
2 . It publishes the
public parameters P K as follows
1 , τ2 = vva2
(g, gb, ga1 , ga2 , gb·a1 , gb·a2 , τ1, τ2, τ b
gh0 , ..., ghn , e(g, g)α·a1·b)
1 , τ b
2 , w,
The algorithm sets MSK := (gα, gα·a1 , v, v1, v2).
c0, ..., cn which are coeﬃcients of y0, ..., yn in (cid:81)
Encrypt(PK, M , S = {Att1, ..., Attu}) the algorithm chooses
s1, s2, t and cT ag from Zp and sets s = s1 + s2. It computes
Atti∈S(y −
Atti), respectively. It outputs a ciphertext CT as follows
CT := (C, C1, C2, C3, C4, C5, C6, C7, E0, E1, cT ag)
where
C = M · (e(g, g)αa1·b)s2 , C1 = (gb)s, C2 = (gb·a1 )s1 ,
C3 = (ga1 )s1 , C4 = (gb·a2 )s2 , C5 = (ga2 )s2 ,
C6 = τ s1
1 τ s2
2 , C7 = (τ b
1 )s1 (τ b
2 )s2 w
−t,
E0 = gt, E1 = ((gh0 )c0 (gh1 )c1 ··· (ghn )cn wcT ag)t.
KeyGen(MSK, PK, A = (A, ρ)) We let Ax denote the xth
row of A and ρ(x) write an attribute associated Ax by the
mapping, ρ. The algorithm randomly chooses r1,x, r2,x, z1,x,
z2,x from Zp for each x ∈ [m], and sets rx = r1,x +r2,x where
A is an m × (cid:96) matrix. It randomly chooses kT agj,x for each
x ∈ [m] and j ∈ [n] from Zp. Then, it randomly selects an (cid:96)
size vector (cid:126)µ of which the ﬁrst coordinate equals to α from
Z(cid:96)
p, and sets λx = Ax(cid:126)µ as the share of Ax. It creates SK as
follows
W3 :=e(E1,
−ωx/T agx )
D7,x
(cid:89)
· e(E0,
cj·ωx/T agx ).
Kj,x
ρ(x)∈S,j=[n]
Otherwise, it aborts. Finally,
Correctness
For the sake of simplicity, we rewrite
.
W1
M = C · W2 · W3
(cid:18) W1,x
(cid:89)
W1
W2 · W3
=
ρ(x)∈S
W2,x · W3,x
where W1,x := e(C1, D1,x)·e(C2, D2,x)··· e(C5, D5,x), W2,x =
e(C6, D6,x) · e(C7, D7,x) and
(cid:32) e(E0,(cid:81)
W3,x :=
j=[n](Kj,x)cj )
e(E1, D7,x)
The computation of W1,x/W2,x is trivial. Also, the similar
computations can be appeared in [41]. We only write the
result of the computation.
W1,x/W2,x = e(g, g)λxa1bs2 e(g, w)r1,xt.
To compute W3,x, we compute
e(E0,
(Kj,x)cj )
= e(gt,
(ghj−h0ρ(x)j
(cid:89)
(cid:89)
j=[n]
j=[n]
wkT agj,x )cj·r1,x )
(cid:80)
(cid:80)
j∈[n] cj ρ(x)j
= e(g, gc1h1+...+cnhn−h0
= e(g, gc1h1+...+cnhn )t·r1,x e(g, g
j∈[n] cj·kT agj,x )t·r1,x
· e(g, w
(cid:80)