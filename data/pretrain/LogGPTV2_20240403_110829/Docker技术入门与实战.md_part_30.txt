第
ubuntu:12.04
Status:Downloaded newer image for registry.mirrors.aliyuncs.com/library/
30868777f275:Download complete
d03a1a9d7555:
9f045ea36057:
53db23c604fd:
5f18d94c3eca:
511136ea3c5a:
0b310e6bf058:Down1oad complete
Pulling repository registry.mirrors.aliyuncs.com/library/ubuntu
$ sudo docker pull registry.mirrors.aliyuncs.com/library/ubuntu:12.04
12秒就下载了ubuntu：latest镜像，还可以手工指定需要下载的版本：
sys
real
ubuntu:latest
Status:Image is up
22093c35d77b:
3680052c0f5c:
e791be0477f2:
ccb62158e970:
511136ea3c5a:
5506de2b643b:Downloadcomplete
Pulling repository registry.mirrors.aliyuncs.com/library/ubuntu
$sudo time docker pull registry.mirrors.aliyuncs.com/library/ubuntu
cd from aly/
第二种方法
er
0m0.007s
0m0.010s
0m12.681s
context to Docker daemon
Download
Download
Download
Download
Download
Download
Download
Download
Download
Download
Download
D
complete
complete
complete
complete
complete
complete
1complete
complete
complete
todate
complete
complete
for
registry.mirrors.aliyuncs.com/library/
2.56kB
第16章在公有云上使用Docker
211
---
## Page 226
pip 安装 OSS driver。
起做成了Docker镜像。以下是快速启动支持OSS的docker-registry的方式：
像数据存储在S3、GCS等云存储上。
管理是Docker的核心，为了保证镜像数据的可靠、可用和安全，docker-registry现在支持镜
支持阿里云OSS的私有仓库
212第二部分实战案例
已经有人给docker-registry开发了针对阿里云OSS的驱动，并把它和docker-registry一
$sudo pip install docker-registry-driver-alioss
读者也可以从https://github.com/docker/docker-registry下载安装docker-registry，并通过
官方在Github上有一个项目docker-registry，
1docker_registry.wi:application
最后启动docker-registry。
oss_accesskey: _env:oss_sEcRET[:your_access_key]
local:&local
接下来配置config.yml。
$sudo docker run
Successfully built
Status:Image is up todate for
22093c35d77b:
3680052c0f5c:
e791be0477f2:
ccb62158e970:
d497ad3926c8:
511136ea3c5a:
5506de2b643b:Downloadcomplete
Pulling repository registry.mirrors.aliyuncs.com/library/ubuntu
-->5506de2b643b
oss_accessid:
oss_bucket:_env:OsS_BUcKET[:default_value]
storage_path:
storage: alioss
5506de2b643b
osskey>
complete
complete
complete
complete
complete
complete
-e OsS_SECRET= -p 5000:5000
registry.mirrors.aliyuncs.com/library/ubuntu:14.04
，专门用于自建Docker的私有镜像库。镜像
-eSTORAGE_PATH=/docker/
---
## Page 227
Docker Registry。QA在测试云服务器上测试容器，通过后提交到私有的Docker Registry。
员在开发过程中从搭建的私有DockerRegistry获取应用需要的基础镜像。
16.3本章小结
之后，可以开发并构造应用容器，测试通过后提交容器为新的镜像并推送到私有的
最后，发布人员下载最新版本镜像并在生产云服务器上部署容器。
首先，运维人员在公有云上搭建私有Docker注册服务器，以存储项目组镜像。开发人
以一个简单的应用开发、测试和发布过程来说明 Docker在公有云上的应用过程。
口利用公有云和Docker的特性更加方便的迁移和扩展应用。
口利用内核级虚拟化，对公有云中服务器资源进行更加高效地利用。
口快速交付和部署。
其实，通过整合公有云的虚拟机和Docker方式，可能获得更多的好处，包括：
公有云已经提供了诸多虚拟化带来的便利，那么在上面使用Docker还有意义吗？
第16章在公有云上使用Docker213
S民笔人个
---
## Page 228
作用，并与大家探讨Docker作为一款‘全栈神器’和，修炼利器·的内涵与外延。
17.1个人学习之道
Docker为企业构建标准化的开发、测试、生产环境。
腾服务器部署，只需专注业务代码的实现即可。
方便的管理这些系统之间的数据连接和共享。
量）和应用程序。系统架构师们也可以使用Docker来快速搭建各种网络架构的系统，且可以
(PC或笔记本）上来搭建各种开发环境，且不必担心破坏个人电脑中的系统环境（如环境变
中切换。这对Linux爱好者来说真是一种福音。此外，读者还可以使用Docker在个人电脑
实现同样的需求。但是Docker正以一种前所未有的方式让我们可以快速在各种Linux发行版
可以完成当年半个月才能完成的工作。当然，我们也可以通过VMware、Virtrbox等工具来
时间。
笔者决定要安装Redhat到最后能正常使用，并完成一些基本的日常操作，花了将近半个月的
后兴冲冲删除了电脑上原本的Windows2000系统，安装完之后，却发现无法访问网络。从
Chilytern
本章节，笔者希望和大家一起探讨Docker在个人技术学习和修炼的过程中起到的积极
而现在，只需要一个命令就可以下载一个操作系统，比如dockerpullcentos7就
本章主要介绍了Docker在个人的学习和技术创业方面的典型应用场景，以及如何使用
目前Docker发展迅速，基于Docker的PaaS平台也层出不穷。这让技术创业者无需折
坐了两个小时的公交车专门到电脑市场，花20块钱买了2张Redhat9的安装盘。回来
笔者在刚接触Docker的时候，曾回想到起自己第一次安装和使用Linux的情景。
Docker实践之道
第17章
---
## Page 229
DockerHub还提供丰富的第三方镜像和Dockerfile。
环境。除此之外，常用数据库，缓存系统，主流Web框架等都有官方的镜像。除此之外，
素降至最低，统一地掌控整个应用的生命周期。
AnyApp，Anywhere，即任何应用，都可以构建，发布，运行于任何环境，将环境的影响因
需折腾系统环境的各种配置。Docker官网的口号就包含了以上含义：Build，Shipand Run
装的问题总是层出不穷。
语言和工具都越来越好学好用。但学习成本仍然居高不下。各大编程语言论坛中关于环境安
先面对的就是其母环境（或者说前置条件）的搭建。虽然随着程序语言和系统程序的发展，
小系统原则，即从变量最少的最小系统开始，循序渐进地学习。
如果将Docker的作用最大化呢？下面，笔者将从三个方面去阐述：
都是利用工具进行创造性工作的匠人。工作若干年后，笔者发现身边的优秀工程师，无一不
17.1.1
是笔者想和大家分享的一个有趣的话题。
弃技术学习，那么被淘汰只是时间问题。所以，如何使用Docker将技术修炼的效能最大化，
遇，往往也可以带来更好的待遇。可见，修炼与不修炼，这是一个伪命题。因为如果彻底放
快速发展的Golang社区。这帮走在技术前沿的Geek，也给个人的职业生涯创造了更多的机
IT界的技术更新和创新注人了新活力。比如润物细无声的Python社区，火热的Ruby社区和
现技术圈内的这类Geek不算少数。而恰恰是这帮热爱技术并乐于实践的Geek，给整个中国
求，对新技术有着持续的好奇心。如果读者经常逛各大IT论坛和社区的话，那么读者会发
目前Docker官方支持的编程语言镜像就有十几种，涵盖所有的主流编程语言的开发
通过Docker的使用，我们可以将精力和注意力都尽快地放在语言本身的学习上，而无
，现实生活中，简单的事物背后往往蕴含着复杂的机制。我们在构建最小系统的时候，首
孔子日：“温故而知新，可以为师矣”。现代软件／运维工程师，与古代的铁匠木匠一样
众所周知，IT新技术的学习往往从HelloWorld开始。这是学习新知识的标准思路：最
1.快速上手HelloWorld
口面向业务编程：快速使用新技术支撑新业务。
口Docker 化的代码仓库：从收集代码，到收集Docker 容器。
口快速上手HelloWorld：去除学习过程中的“噪音”，快速上手开发环境。
口众人拾柴火焰高：使用DockerHub发布开源项目。
口温故而知新：快速人门并建立自已的Docker化的代码库。
笔者将从以下两点出发讨论工程师的修炼之道：
笔者是在技术圈沉浸多年的开源技术爱好者，平时对自己的技能提高有着习惯性地追
温故而知新
第17章Docker实践之道215
---
## Page 230
（容器），轻松的运行单元测试，最终可以快速提交代码至主干（Trunk）。
交至主版本库的。那么，使用Docker发布项目后，任何参与者可以一键运行各种运行环境
果完成编码工作后不进行全面的测试，则无法提供完整的TestCase，
这样可以统一又清晰的管理整个开源项目。
者如果参与开源项目的建设，那么可以通过Docker完成程序的打包，测试，发布和部署。
与到各种开源项目中。这不仅提高了自己，也造福了技术圈中的使用者。笔者在此建议：读
17.1.2众人拾柴火焰高
研究。
口。可见，Docker可以帮助软件工程师面向业务需求，快速了解新技术，或进行各种技术
器。然后，通过docker run运行容器。此时即可使用浏览器访问自定义容器中的API接
pull python，以此为基础，加入 SSH服务，数据库和开发框架，即可构建一个Python容
者在此建议读者去DockerHub搜索适合做API服务器的Python快速开发框架。如docker
程师，熟悉常规网站的后台建设，那么如何快速实现移动应用的RestfulAPI Sever呢？笔
成适当的技术储备。下面，笔者举一些简单的例子说明：若读者是Python技术栈的后端工
技术发展的脚步，是业界关心的问题。
高并发或用户体验问题等。俗话说：站得高，望得远。IT工程师如何高效的提高素养并跟上
唯一不变的编程范式0。现在的IT业界，每年都创造出各种语言和工具来解决各种问题，如
与库》，书中提到一点：MOPMarket/MoneyOriented Programming（面向市场或利润编程）是
运行，调试并复用代码。
停止研发的历史任务，也可以以Docker容器的方式保存。以后遇到类似的需求，可以直接
种‘坑”。而资深工程师接手后，如果拥有Docker化的代码仓库，那么就可以快速完成任务
样是做一件任务，新人接手后首先面对的就是思路和工具的执择，然后需要面对实践中的各
和资深工程师之间的生产力可以有几倍甚至几十倍的差距呢？暂且不论基础技能的差距，同
216第二部分实战案例
笔者根据Docker的特性，给出一个可行方案：使用Docker快速掌握新技术要点并完
笔者在此举例说明：读者加入开源贡献者的队伍后，首先需要搭建统一的开发环境。如
，随着各类开源组织和社区的风靡，软件/运维工程师都可以使用拿手的语言和工具，
常用代码库往往是软件工程师实现高效交付的“绝活”。在技术团队中，为何行业新人
国人编著了一本非常干货的程序员基本素养的书籍叫《程序员的自我修养－链接，构建
3.面向业务编程
2.Docker化的代码仓库
一般而言是无法快速提
---
## Page 231
种不定因素（系统版本，依赖关系）的影响，所以其部署流程的用户体验往往非常繁琐而且
地管理迭代与集成，还可以直接以Docker化的方式（Dockerize）发布产品。
续集成，和快速部署。这种情况下，直接使用Docker建设产品的发布流程，不仅可以方便
产品的Docker化发布
QA）之间的高效沟通协作，以解决以下常见问题：
日已经经常出现在很多技术团队的日常工作中。
营工作必须紧密合作。
合。它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运
于促进开发（应用程序／软件工程）技术运营和质量保障（QA）部门之间的沟通、协作与整
使用Docker助力DevOps
速迭代，以发布切合市场需求的产品。
17.2
Docker化发布特别适用于BS架构的产品。由于BS产品的服务器端的部署往往受到各
由于Docker具有易于部署，跨平台能力强的特性，所以Docker非常适合做自动化的持
从上文引用的维基百科释义可以看出，DevOps的核心理念在于生产团队（研发，运维，
DevOps从一开始的敏捷开发的常用实践方法论，逐渐落地至大量的生产环境。时至今
DevOps（英文Development和Operations的组合）是一组过程、方法与系统的统称，
敏捷开发是一套软件工程方法论。其中有一个重要的概念是DevOps。
本章笔者将从以下两点出发，阐述Docker如何帮助创业团队在以上条件下，做得更快更好：
目前的互联网创业团队往往需要在人力紧缺的情况下快速发布Demo或初版产品，并快
口方便地发布系统：包括部署管理，自动化部署。
口自由地定制系统：包括以上三层的灵活又彻底的自定义。
口完整地封装系统：包括OS系统，Lib环境，App应用，完整的三层封装。
在这种情况下，使用Docker可以满足以下几点：
口现有PaaS虚拟机难以促成开发与运营的协作。
口研发部署流程无法彻底自动化。
口定义简洁明了的研发部署流程需要更多成本与时间。
口业务应用程序成为中心，而不是基础设施。
口生产环境不受开发人员控制。
口更小、更频繁的需求变更。
口产品的 Docker化发布：助力构建各种SaaS、PaaS平台。
口使用Docker助力DevOps：搭建Docker化的DevOps流程。
技术创业之道
第17章Docker实践之道217
用
---
## Page 232
同流程。
因此移植非常方便，不会存在像传统模式那样的环境不一致。图17-1比较了两种模式下的不
的一个第三方库过时了。这样的现象在软件开发中很普遍，已经不适用如今的快速开发和部署。
但到了测试或者生产环境程序无法运行，让开发团队排查，
团队进行测试，没问题后通知部署人员发布到生产环境。
过，提交到代码版本管理库，打包给开发团队进行测试。运维把应用部署到测试环境，开发
17.3.1开发、测试和发布中应用Docker
17.3
PaaS）的标配，而进人各种BS架构产品的发布流程中。
到位，而且安装过程是绝对统一的，环境也是绝对纯净的。
处理。如果使用Docker发布WordPress（即使用官方镜像），确实可以做到一句命令即可安装
以图形化界面的形式进行安装。但是笔者在使用过程中，仍然会遇到一些部署上的问题需要
容易产生错误，需要使用者去解决各种部署环境中的问题。
218第二部分实战案例
在上述过程中涉及到至少三个环境：开发、测试和生产。现实情况是，开发自测没问题，
笔者相信Docker这种无痛部署的方式，会随着Docker逐渐成为云计算平台（或者说
例如，WordPress这种主流的CMS系统，尽管WordPress的安装流程已经极尽简化，并
在Docker模式中，应用是以容器的形式存在，所有和该应用相关的依赖都会在容器中
在传统模式中，开发团队在开发环境中完成软件开发，自己做了一遍单元测试，测试通
中小型企业实践之道
问题修
图17-1两种开发模式下的不同流程的比较
运维部门部署上线
开发服门项目开发
无间题
提交基线
问惠
有问题
修复
经过长时间排查最后发现是测试环境
开发部
进行开发
运维部门制作基证
中
---
## Page 233
开发到测试的流程如图17-2所示。
Tomcat、Weblogic作为中间件服务器，后台数据库使用Oracle、MySQL。在应用Docker之前，
在Docker应用中，项目架构师的作用贯穿整个开发、测试、生产三个环节。
2.操作流程
而Docker正好可以解决这个问题，如图17-3所示。
新地能用一个赶下开完了，
可见因为环境的不一样，开发、测试、
我们假定一个场景，
1.场景示例
本地环境
开发部门
一个200人左右的软件企业，
图17-3利用Docker环境开发的流程
图17-2
项目架构师
测试部服务器
开能鹅代根本胞不起来
、运维三个部门做了很多重复的工作。
传统的开发流程
SVN/GIT
测试部门
主要使用Java作为开发语言，使用
第17章Docker实践之道219
测试部门服务和生产一门
运维部门
得重新做
一次。
---
## Page 234
实际案例讲解Docker在标准化开发、测试、生产环境中的使用。
提供了一些Docker的创新用法。在中小型企业实践部分，笔者从企业生产环境出发，通过
个人学习和技术创业部分，笔者从实践出发，同时基于Docker的特性和设计理念，给读者
17.4本章小结
源的网络不是十分稳定，所以这个问题需要在上线前想好解决办法。
理工具功能并不十分完善，若在生产环境中使用还需要更多的完善，由于国内用户连接官方
iptables 规则、禁止root用户登录、限制普通用户权限以及做好系统日志的记录。
三方工具来加强容器的安全管理。如使用apparmor 对容器的能力进行限制、使用更加严格的
年，在这里仅提供一些建议供大家参考：
17.3.2
建的过程中就可以全部完成转换。
版本的jdk的支持情况时，只需改变base 镜像的jdk设置，然后其他依赖它的镜像在重新创
马上就可以进行测试，消除了部署困难等等难缠的问题。
的软件，只需要向架构师申请修改基础的base镜像的Dockerfile即可。
从内部仓库下载的镜像来进行开发，达到开发环境的充分一致。若开发过程中需要添加的新