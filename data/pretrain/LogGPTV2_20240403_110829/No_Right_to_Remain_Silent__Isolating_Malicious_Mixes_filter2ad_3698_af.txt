The RGB-mix [18] mechanism uses heartbeat loop mes-
sages to detect the (n-1) attacks [45]. Each mix sends heart-
beat messages back to itself, and if the (n-1) attack is de-
tected the mix injects cover trafﬁc to confuse the adversary.
However, the key assumption of the proposed mechanism is
limited only for anonymity among mix peers.
Mixmaster [39] and Mixminion [14] employed an infras-
tructure of pingers [43], special clients sending probe trafﬁc
USENIX Association
28th USENIX Security Symposium    1855
through the different paths in the mix network and recording
publicly the observed reliability of delivery. The users of the
network can use the obtained reliability statistics to choose
which nodes to use.
Recent proposals for anonymous communication have
also employed built-in reliability mechanisms. For example,
the new Loopix [44] mix-network system uses loop cover
trafﬁc to detect (n-1) attacks, both for clients and mixes.
However, this idea is limited to detecting only aggressive
(n-1) attacks, but mix nodes systematically dropping single
packets can operate undetected. Moreover, the authors do not
also specify any after-steps or how to penalize misbehaving
mixes.
The Atom [33] messaging system is an alternative design
to a traditional mix networks and uses trap messages to de-
tect misbehaving servers. The sender submits trap ciphertext
with the ciphertext of a message, and later uses it to check
whether the relaying server modiﬁed the message. However,
the trap message does not detect which mix failed. More-
over, Atom does not describe any technique to exclude mali-
cious servers, and a failed trap only protects against releasing
the secret keys.
Other approaches. The literature on secure electronic elec-
tions has been preoccupied with reliable mixing to ensure
the integrity of election results by using zero-knowledge
proofs [3, 6, 29] of correct shufﬂing to verify that the mix-
ing operation was performed correctly. However,
those
rely on computationally heavy primitives and require re-
encryption mix networks, which signiﬁcantly increase their
performance cost and limits their applicability. On the other
hand, the more ‘efﬁcient’ proofs restrict the size of messages
to a single group element that is too small for email or even
instant messaging.
An alternative approach for verifying the correctness of
the mixing operation were mix-nets with randomized par-
tial checking (RPC) [30]. This cut-and-choose technique de-
tects packet drops in both Chaumian and re-encryption mix-
nets, however, it requires interactivity and considerable net-
work bandwidth. Moreover, the mix nodes have to routinely
disclose information about their input/output relations in or-
der to provide evidence of correct operation, what was later
proven to be ﬂawed [32].
9 Limitations and Future Work
Challenges for making Miranda practical. The Miranda
design includes several signiﬁcant simplifying assumptions,
mainly: (1) ﬁxed set of mixes, (2) majority of benign mixes,
(3) reliable communication and processing, and (4) synchro-
nized clocks. Such assumptions are very limiting in terms
of practical deployment; practical systems, e.g., Tor, cannot
‘assume away’ such issues. Future work should try to avoid
these assumptions, while maintaining tight security analysis
and properties as done in Miranda, or identify any inherent
trade-offs.
Avoiding the clock synchronization assumption seems
easy - simply adopt a secure clock synchronization proto-
col. However, avoiding the other three assumptions ((1) to
(3)) seems much more challenging.
First, consider assumptions (1) and (2), i.e., assuming a
ﬁxed set of mixes with majority of benign mixes. These as-
sumptions are central to Miranda design; since the goal of
Miranda is to provide a way to penalize active attackers. If
the adversary can simply retire penalized malicious nodes
and replace them with new nodes that have an untarnished
reputation, then there is no real gain in even trying to pe-
nalize or expose the adversary, and it becomes hard to argue
why we can even assume most mixes are benign. However, a
practical mixnet must allow a dynamic set of mixes, for both
scalability and churn - mixes joining and leaving over time.
Next, consider the third assumption: reliable communica-
tion and processing.
In practice, communication and pro-
cessing failures will deﬁnitely happen - in particular, as a re-
sult of intentional DoS attacks. We believe that future work
may deal with this signiﬁcant challenge by both minimizing
failures, by designing robust underlying mechanisms such as
highly-resilient transport layer; and reﬁned assumptions and
analysis, e.g., considering incentives and game-theory anal-
ysis, to ensure that the system is robust to ‘reasonable’ levels
of failures.
These issues are signiﬁcant challenges for future research,
essential towards the implementation of Miranda in practical
systems. For example, such research must develop a reason-
able model to allow nodes to join (or re-join), without allow-
ing the adversary to gain majority by adding many mixes, as
in Sybil attacks, and to retain the impact of removing corrupt
mixes.
Extension to Continuous Mixnet. Miranda is designed for
a synchronous mixnet. Recent research in mix networks
showed that continuous-time mixes, especially pool mixes,
may allow anonymity for low latency communication [44].
Future work may investigate how to integrate Miranda with
continuous mixnets such as Loopix [44]. Such integration
would raise challenges, such as, how would a mix know
when it should receive the response from the next mix, esp.
without leaking information to an attacker.
10 Conclusion
In this work, we revisited the problem of protecting mix net-
works against active attacks. The analysis performed showed
that active attacks can signiﬁcantly increase the adversary’s
chances to correctly de-anonymize users. Miranda achieves
much better efﬁciency than previous designs, but at the same
time quickly detects and mitigates active adversaries. Mi-
randa employs previously studied techniques such as packet
1856    28th USENIX Security Symposium
USENIX Association
receipts and loop trafﬁc alongside novel techniques to en-
sure that each dropped packet penalizes the adversary. We
take a new approach of focusing on problematic links be-
tween mixes, instead of mixes themselves. We also investi-
gate how community detection enhances our mechanism ef-
fectively. The overall contribution of our work is an efﬁcient
and scalable detection and mitigation of active attacks. For
additional details, including implementation details and efﬁ-
ciency, see [34].
Acknowledgments
We are grateful to our shepherd, Roger Dingledine, and to
the anonymous reviewers, for their helpful and constructive
feedback. This work was partially supported by the IRIS
Grant Ref: EP/R006865/1 and by an endowment from the
Comcast corporation. The opinions expressed in the paper
are those of the researchers themselves and not of the uni-
versities or sources of support.
References
[1] Nym technologies, 2019. https://nymtech.net/.
[2] Panoramix project, 2019. https://panoramix.me/.
[3] Masayuki Abe. Mix-networks on permutation net-
works. In International Conference on the Theory and
Application of Cryptology and Information Security,
1999.
[4] Dakshi Agrawal and Dogan Kesdogan. Measuring
IEEE Security &
anonymity: The disclosure attack.
Privacy, 2003.
[5] Anonymous. QuicR: extending Quic for resiliency to
extreme packet losses, 2019. Available from the au-
thors.
[6] Stephanie Bayer and Jens Groth.
Efﬁcient zero-
knowledge argument for correctness of a shufﬂe. In Ad-
vances in Cryptology - EUROCRYPT 2012 - 31st An-
nual International Conference on the Theory and Ap-
plications of Cryptographic Techniques, 2012.
[7] Mihir Bellare, Juan A. Garay, and Tal Rabin. Dis-
tributed pseudo-random bit generators : A new way to
In Proceedings of the
speed-up shared coin tossing.
15th Annual ACM Symposium on Principles of Dis-
tributed Computing (PODC), 1996.
[8] Oliver Berthold, Andreas Pﬁtzmann, and Ronny
Standtke. The disadvantages of free mix routes and
how to overcome them. In Designing Privacy Enhanc-
ing Technologies. Springer, 2001.
[9] Nikita Borisov, George Danezis, Prateek Mittal, and
Parisa Tabriz. Denial of service or denial of security?
In Proceedings of the 14th ACM conference on Com-
puter and communications security, 2007.
[10] Carole Cadwalladr and Emma Graham-Harrison. Re-
vealed: 50 million facebook proﬁles harvested for cam-
bridge analytica in major data breach. The Guardian,
2018.
[11] David Chaum.
The dining cryptographers prob-
lem: Unconditional sender and recipient untraceability.
Journal of cryptology, Springer, 1988.
[12] David L Chaum. Untraceable electronic mail, return
addresses, and digital pseudonyms. Communications
of the ACM, 1981.
[13] Henry Corrigan-Gibbs, Dan Boneh, and David Maz-
ières. Riposte: An anonymous messaging system han-
dling millions of users. 2015.
[14] George Danezis, Roger Dingledine, and Nick Mathew-
son. Mixminion: Design of a type iii anonymous re-
mailer protocol. In IEEE Symposium on Security and
Privacy, 2003.
[15] George Danezis and Ian Goldberg. Sphinx: A compact
and provably secure mix format. In 30th IEEE Sympo-
sium on Security and Privacy (S&P), 2009.
[16] George Danezis, Chris Lesniewski-Laas, M. Frans
Kaashoek, and Ross J. Anderson. Sybil-resistant DHT
routing. In 10th European Symposium on Research in
Computer Security ESORICS, 2005.
[17] George Danezis and Prateek Mittal. Sybilinfer: Detect-
ing sybil nodes using social networks. In Proceedings
of the Network and Distributed System Security Sym-
posium, NDSS, 2009.
[18] George Danezis and Len Sassaman. Heartbeat trafﬁc to
counter (n-1) attacks: red-green-black mixes. In Pro-
ceedings of the 2003 ACM workshop on Privacy in the
electronic society, 2003.
[19] Harry Davies. Ted Cruz using ﬁrm that harvested data
on millions of unwitting Facebook users. 2015.
[20] Roger Dingledine, Michael J Freedman, David Hop-
wood, and David Molnar. A reputation system to in-
In International Workshop
crease mix-net reliability.
on Information Hiding, 2001.
[21] Roger Dingledine, Vitaly Shmatikov, and Paul Syver-
son. Synchronous batching: From cascades to free
routes. In International Workshop on Privacy Enhanc-
ing Technologies, 2004.
[22] Roger Dingledine and Paul Syverson. Reliable MIX
cascade networks through reputation. In International
Conference on Financial Cryptography, 2002.
[23] Danny Dolev and H. Raymond Strong. Authenticated
algorithms for byzantine agreement. SIAM Journal on
Computing, 1983.
[24] Nethanel Gelernter, Amir Herzberg, and Hemi Lei-
bowitz. Two cents for strong anonymity: the anony-
mous post-ofﬁce protocol. 2018.
[25] Rosario Gennaro, Stanisław Jarecki, Hugo Krawczyk,
In
and Tal Rabin. Robust threshold DSS signatures.
Advances in Cryptology—EUROCRYPT, 1996.
USENIX Association
28th USENIX Security Symposium    1857
[42] Lasse Overlier and Paul Syverson. Locating hidden
servers. In IEEE Symposium on Security and Privacy,
2006.
[43] Peter Palfrader. Echolot: a pinger for anonymous re-
mailers, 2002.
[44] Ania M. Piotrowska, Jamie Hayes, Tariq Elahi, Se-
bastian Meiser, and George Danezis. The Loopix
anonymity system. In 26th USENIX Security Sympo-
sium, 2017.
[45] Andrei Serjantov, Roger Dingledine, and Paul Syver-
son. From a trickle to a ﬂood: Active attacks on several
mix types. In International Workshop on Information
Hiding, 2002.
[46] Victor Shoup. Practical threshold signatures. In Inter-
national Conference on the Theory and Application of
Cryptographic Techniques, 2000.
[47] Paul Syverson, Gene Tsudik, Michael Reed, and Carl
Landwehr. Towards an analysis of onion routing se-
curity. In Designing Privacy Enhancing Technologies.
Springer, 2001.
[48] Jelle van den Hooff, David Lazar, Matei Zaharia, and
Nickolai Zeldovich. Vuvuzela: scalable private mes-
In Proceedings of
saging resistant to trafﬁc analysis.
the 25th Symposium on Operating Systems Principles,
SOSP. ACM, 2015.
[26] Oded Goldreich, Silvio Micali, and Avi Wigderson.
How to play any mental game or A completeness theo-
rem for protocols with honest majority. In Proceedings
of the 19th Annual ACM Symposium on Theory of Com-
puting, 1987.
[27] Glenn Greenwald and Ewen MacAskill. NSA Prism
program taps in to user data of Apple, Google and oth-
ers. 2013.
[28] Markus Jakobsson. Flash mixing.
In Proceedings of
the 18th ACM symposium on Principles of distributed
computing, 1999.
[29] Markus Jakobsson and Ari Juels. Millimix: Mixing in
small batches. Technical report, DIMACS Technical
report, 1999.
[30] Markus Jakobsson, Ari Juels, and Ronald L Rivest.
Making mix nets robust for electronic voting by ran-
domized partial checking. In USENIX Security Sympo-
sium, 2002.
[31] Don Johnson, Alfred Menezes, and Scott Vanstone.
The elliptic curve digital signature algorithm (ecdsa).
International journal of information security, 2001.
[32] Shahram Khazaei and Douglas Wikström. Random-
In RSA Conference.
ized partial checking revisited.
Springer, 2013.
[33] Albert Kwon, Henry Corrigan-Gibbs, Srinivas De-
vadas, and Bryan Ford. Atom: Horizontally scaling
strong anonymity. In Proceedings of the 26th Sympo-
sium on Operating Systems Principles, 2017.
[34] Hemi Leibowitz, Ania Piotrowska, George Danezis,
and Amir Herzberg. No right to remain silent: Isolat-
ing malicious mixes - full version. https://eprint.
iacr.org/2017/1000.
[35] Shengyun Liu, Christian Cachin, Vivien Quéma, and
Marko Vukolic. Xft: practical fault tolerance beyond
crashes. 2015.
[36] Nancy A Lynch. Distributed algorithms. Elsevier,
1996.
[37] Ralph Merkle. A digital signature based on a conven-
In Advances in Cryptol-
tional encryption function.
ogy—CRYPTO, 1987.
[38] Masashi Mitomo and Kaoru Kurosawa. Attack for ﬂash
In International Conference on the Theory and
mix.
Application of Cryptology and Information Security,
2000.
[39] Ulf Möller, Lance Cottrell, Peter Palfrader, and Len
IETF
Sassaman. Mixmaster protocol – version 2.
Draft, 2004.
[40] Steven J Murdoch. Hot or not: Revealing hidden ser-
vices by their clock skew. In Proceedings of the 13th
ACM conference on Computer and communications se-
curity, 2006.
[41] Steven J Murdoch and George Danezis. Low-cost traf-
ﬁc analysis of Tor. In IEEE Symposium on Security and
Privacy, 2005.
1858    28th USENIX Security Symposium
USENIX Association