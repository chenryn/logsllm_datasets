0 (0.0%)
26,206 (49%)
1,808 (6.9%)
335 (1.3%)
110 (0.4%)
202 (0.8%)
0 (0.0%)
IPv6 Targets
Addresses
784,777
49,008 (6.2%)
2,410 (4.9%)
3,972 (8.1%)
229 (0.5%)
4,869 (9.9%)
22 (0.0%)
ASNs
7,904
3,952 (50%)
152 (3.9%)
55 (1.4%)
19 (0.5%)
182 (4.6%)
4 (0.1%)
Table 3: Number of IP addresses or ASNs for which at least one spoofed-source reached its target (“Category-Inclusive”) or
for which a spoofed-source category was the only one to reached its target (“Category-Exclusive”). Percentages in the “All
Reachable” row represent the fraction of all targets queried, whereas other percentages in other rows represent the fraction
of reachable targets.
Each category of spoofed source independently contributed to
the overall eectiveness of our experiment. Every category resulted
in reaching a target that would not otherwise have been reached,
even considering all other categories combined. Thus, if we had
excluded any category of spoofed addresses from our experiment,
our total number of reachable targets would have been lower—both
by IP address and ASN. This is shown in Table 3, under the heading
“Category-Exclusive.” Notably, had we limited our spoofed sources
to addresses within the same IPv4 /24 (or IPv6 /64) as the target,
with a source address distinct from the destination address, we
would not have discovered 37% of reachable IPv4 addresses or 9%
of reachable IPv4 ASNs. While the query with spoofed loopback
source was handled by relatively few targets, 22 IPv6 addresses and
four ASNs would not have resulted in hits without our inclusion of
this source category.
5 DSAV CASE STUDY: DNS RESOLVERS
While the knowledge that a network lacks DSAV is valuable in and
of itself, in this section we demonstrate how that knowledge might
be used by someone with malicious intent to survey or exploit
vulnerabilities of internal systems.
5.1 Closed Resolvers
Per RFC 5358, “by default, nameservers SHOULD NOT oer recur-
sive service to external networks” [10]. The two primary reasons
for this are safety for others and safety for self. Open resolvers can
be used as unwitting accomplices in attacking others in reection-
based distributed denial-of-service (DDoS) attacks. Additionally,
open resolvers themselves are more exposed to various attacks
which are facilitated by the attacker’s ability to induce recursive-
to-authoritative queries, such as DNS cache poisoning [27]. Thus,
one of the IANA’s rst actions in the wake of the Kaminsky attack
disclosure was to reiterate the need to disable open resolvers [11].
Using the open resolver query (Section 3.5), we classied the re-
solvers we reached as open if we observed a recursive-to-authoritative
query in response to the non-spoofed-source query, and closed oth-
erwise. In total, we classied 340,247 (60%) resolvers as closed and
228,208 (40%) as open. One unfortunate phenomenon conrmed
by these results is that a large number of resolvers continue to
71
operate open to the public, which mirrors the results of recent stud-
ies [31, 38]. However, we emphasize that even reaching an open
resolver with our experiment indicates a lack of DSAV—i.e., because
our spoofed-source query arrived at its destination. The fact that
the resolver responds to any source address is simply an additional
layer of insecurity.
That said, closed resolvers are of particular interest. Because an
attacker can induce recursive-to-authoritative queries with spoofed-
source queries, closed resolvers in a network that lacks DSAV have
little advantage over open resolvers when it comes to cache poi-
soning attacks. The big dierence is that the closed resolvers are
thought to be limiting their query access to trusted clients. The
closed resolvers we identied are all stripped of their rst line of
defense against cache poisoning attacks, all due to their networks’
failure to employ DSAV. Additionally, despite the large presence of
open resolvers, at least one closed resolver was reached in 88% of
ASes that we identied as lacking DSAV. That is, nearly 9 out of 10
networks host a DNS resolver that is thought, falsely, to be limiting
its query access.
5.2 Source Port Randomization
One of the biggest questions driving the current research was
whether systems that were thought to be inaccessible due to re-
wall or access control list exhibited some vulnerability that is less
likely to be seen in a publicly accessible system. To this end, we
investigated one of the most prominent DNS resolver vulnerabil-
ities in recent years: lack of source port randomization [18, 27].
While this vulnerability was disclosed and related patches were
distributed nearly 12 years prior to the writing of this paper, we
hypothesized that there might be some instance of it in the wild,
behind closed doors.
For this part of our analysis, we only analyzed behavior of DNS
resolvers that contacted our authoritative servers directly, i.e., the
source IP address of the query matched the dst label of the query
name. This allowed us to analyze the systems associated with the
target IP addresses, not the systems they might forward to (see
Section 5.4).
To assess the source port randomization of the reachable targets,
we computed the range of source ports for the 10 IPv4 or IPv6 follow-
up queries (see Section 3.5) observed for each target IP address. The
IMC ’20, October 27–29, 2020, Virtual Event, USA
Casey Deccio, Alden Hilton, Michael Briggs, Trevin Avery, and Robert Richardson
port. This option was even included in the conguration le dis-
tributed with the BIND package on at least one OS. However, it was
removed in 2008, in conjunction with the source port vulnerability
disclosure [18, 26].
Due to its historical roots in both software defaults and cong-
uration, port 53 was observed more than any other source port,
being used by 1,308 (34%) of the single-source-port resolvers that
we reached. Other frequently-used source ports were 32768 (12%)
and 32769 (3.8%).
To better understand the cause for the lack of source port ran-
domization, we contacted administrators of several resolvers that
exhibited this behavior. To nd administrator contact information,
we performed a reverse DNS (PTR) lookup of the IP address for each
resolver and then looked up the SOA record for the domain of the
DNS name returned. We used the RNAME (responsible name) eld of
the SOA record as a contact email address for the aected resolver(s).
We then selected 43 administrators, representing 53 (1.4%) of the
resolvers that exhibited xed source port behavior: 40 were selected
randomly—half associated with resolvers using source port 53 and
half associated with resolvers using an unprivileged source port—
and 3 were administrators with whom we had prior acquaintance.
We received responses from just ve administrators, all associated
with systems that used source port 53 exclusively. Three of the
respondents were the administrators that we knew. Two of the ve
conrmed a BIND conguration using xed source port; the others
provided no comment on their conguration. However, three of the
ve administrators communicated to us that their DNS resolvers
were congured to only handle queries from within a designated IP
prex, previously unaware that their systems were reachable with
spoofed-source queries. Anecdotally this conrmed that less-secure
congurations might be tolerated—or even defended—on systems
that are thought to be unreachable by untrusted parties.
5.2.2 Passive Measurement Comparison. To increase condence in
our active measurement analysis, we compared it to passive mea-
surements for the same resolvers. Using the 2018 DITL data [15]
(the 2019 DITL data was inaccessible at the time we ran our anal-
ysis), we collected query information for all of the DNS resolvers
that exhibited zero-range source port behavior. To decrease the
likelihood of false positives, we considered only IP addresses for
which we observed queries that would provide a fair comparison to
our active measurement. Thus, an IP address was included in our
analysis only if we observed one or both of the following from that
IP address: 1) 10 queries for unique query names or 2) one or more
queries exclusively using the same source port that we observed
in the follow-up queries associated with our active measurement.
We analyzed the range of the source ports used by each IP address
over the 48-hour period covered by the 2018 DITL collection.
The results tell an interesting story. First, 1,954 (51%) of the 3,810
DNS resolvers that exhibited no source port variance in connection
with our follow-up queries similarly showed no variance in 2018.
Perhaps more alarming is that 959 (25%) of the DNS resolvers cur-
rently exhibiting no source port variance had at least some element
of source port variation 18 months earlier. That is, their vulnerabil-
ity has actually increased in the past couple of years. The 2018 DITL
data did not include sucient data for us to compare 897 (24%) of
the resolvers that we observed using a single source port.
72
Figure 2: Frequency distribution of source port ranges used
by resolvers reachable with spoofed-source query. The up-
per plot shows the frequency of ranges between 0 and 65,535
(max), and the lower plot shows the frequency of ranges 0
through 3,000 (i.e., a zoomed-in version of the upper plot).
Each bar is broken down by open-closed resolver status.
source port range is a useful heuristic to identify resolvers that are
not randomizing their source ports. It also provides characteristics
that are helpful for identifying OS or software (see Section 5.3).
Figure 2 shows two histograms representing the frequency distri-
bution of source port ranges for the DNS resolvers. The upper plot
shows the frequency of ranges between 0 and 65,535 (max), and the
lower plot shows a zoomed-in version of the upper plot, covering
ranges 0 through 3,000. Additionally, each bar is broken down by its
makeup of open and closed resolvers. There are several prominent
characteristics in Figure 2 that we discuss in the following sections.
5.2.1 Zero Source Port Randomization. We rst focus our attention
on the DNS resolvers with a source port range of zero, i.e., the
left-most bar in either plot of Figure 2. In response to our spoofed-
source follow-up queries, 3,810 resolvers issued 10 queries to our
authoritative servers with no variance in source port! These account
for 1,802 (6%) of all ASes (IPv4 and IPv6) lacking DSAV. It would be
trivial to poison the cache of these resolvers due to the combination
of 1) the capability to induce a query through spoofed-source query
and 2) no source port randomization. With a known source port,
only the query’s 16-bit transaction ID is left to guess; the search
space is reduced from 232 (4.3 billion) to 216 (65,536). More than
half of these resolvers (2,244 or 59%) are closed, meaning that DSAV
would reduce their attack potential.
Lack of source port randomization is rooted in two primary
causes: old software and improper conguration. While most mod-
ern DNS software implementations use random source ports for
DNS queries, many older versions used only a single source port.
For example, the Berkeley Internet Name Domain (BIND) version 8
used a unprivileged port (> 1023), as did versions of Windows DNS
prior to 2008 R2. Versions of BIND prior to BIND 8.1 used port 53
exclusively [26]. Even when default software behaviors changed
such that random source ports were used, custom conguration
options allowed the updated software to designate a single source
Behind Closed Doors
IMC ’20, October 27–29, 2020, Virtual Event, USA
Ineective Source Port Allocation. We now turn our attention
5.2.3
to the non-zero, low-numbered ranges observed in our data. There
were 244 DNS resolvers in 142 ASNs with a source port range
between 1 and 200. For the resolvers in this category, 159 (65%)
yielded source ports that followed a strictly increasing (i.e., non-
random) pattern; of those, 130 wrapped after reaching some some
maximum value. For 34 (14%) of the 244 resolvers, only seven or
fewer unique port values were observed out of the 10 total queries, a
phenomenon that would typically only occur 0.066% of the time—or
1 out of every 1,500—if the size of the pool being selected from was
actually 200. The cases of both non-random port and small port pool
appear to violate RFC 5452, which requires “an unpredictable source
port for outgoing queries from the range of available ports...that
is as large as possible and practicable” [19].
5.3 OS Identication
As part of our case study, we now consider how internal systems
might be surveyed to identify OS and DNS software. While this
knowledge might be valuable in and of itself, sometimes it could
expose other vulnerabilities to an attacker. For example, the Si-
gRed attack was recently disclosed as an attack on all versions of
Windows DNS [36].
Using only the query data associated with our experimental
DNS query activity, we were able to infer OS and DNS software.
The primary methods we applied were: 1) the p0f ngerprinting
tool and 2) observed source port ranges. We applied these methods
both individually and in support of one another. We also used an
experimental lab environment to empirically learn behaviors and
validate our methods.
p0f. We used p0f to analyze the TCP/IP packets associated
5.3.1
with the DNS-over-TCP queries that were elicited by our TCP
follow-up queries (see Section 3.5). p0f uses packet characteristics,
such as IP time-to-live and TCP maximum segment size, to associate
packets with the operating system that produced them. Windows
and Linux systems were among those identied by p0f, consisting
of 5.4% and 2.5% of DNS resolvers, respectively. However, p0f was
only able to categorize about 10% of our resolvers; 90% remained
unclassied.
While p0f struggles to identify the OS of the majority of DNS
targets, it tells us something of those resolvers with a source port
range of zero. According to p0f, the TCP/IP ngerprint of 760 (20%)
of these DNS resolvers matched the characteristics of BaiduSpider,
the Web crawler associated with the prominent Chinese search
engine, Baidu [1]. Another 451 (12%) were identied as Windows
systems—likely pre-2008 R2, for which using a single port is the
default. Of those identied as Windows, 433 (96%) used an unprivi-
leged source port, consistent with Windows DNS behavior. p0f also
identied 160 (66%) of the DNS resolvers with source port range
between 1 and 200 (Section 5.2.3) as Windows systems.
5.3.2 OS-Specific Source Port Ranges. We now use the range of
source ports used by a given resolver to identify OS. The pools
from which many DNS resolver software implementations select
ephemeral ports are, in some cases, specic to OS. If we know the
size of the pool of ephemeral ports for a given OS, we can determine
from the range of even 10 randomly-selected ports whether the
73
associated packets originated from the OS. The probability distri-
bution of range values for a given pool size can be modeled using
a Beta distribution. Given 10 queries from a resolver selecting its
source ports uniformly from the pool, the probability distribution
is Beta( ,  ) with   = 9 and   = 2. This distribution tells us how
likely it is that a given observed range comes from a pool of a given
size.
We experimented with various OSes and DNS software imple-
mentations to observe the pools used for source port selection and
their t against our model. We installed BIND 9.11 on the follow-
ing OSes: FreeBSD 11.3, 12.0, and 12.1; and Ubuntu Linux 10.04,
12.04, 14.04, 16.04, 18.04, 19.04, and 19.10 (Linux kernels 2.6 through
5.3). BIND 9.11 was used because it allocates source ports from the
OS-designated ephemeral port range (see Section 5.3.3). We also