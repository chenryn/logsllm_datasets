### References

1. Springer, 313–331.
2. Yan Huang, David Evans, Jonathan Katz, and Lior Malka. 2011. Faster Secure Two-Party Computation Using Garbled Circuits. In *USENIX Security Symposium*, Vol. 201, 313–331.
3. Mathias Humbert, Erman Ayday, Jean-Pierre Hubaux, and Amalio Telenti. 2013. Addressing the Concerns of the Lacks Family: Quantification of Kin Genomic Privacy. In *Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security*. ACM, 1141–1152.
4. Yuval Ishai, Joe Kilian, Kobbi Nissim, and Erez Petrank. 2003. Extending Oblivious Transfers Efficiently. In *Crypto*, Vol. 2729. Springer, 145–161.
5. Neda Jahanshad, Priya Rajagopalan, Xue Hua, Derrek P. Hibar, Talia M. Nir, Arthur W. Toga, Clifford R. Jack, Andrew J. Saykin, Robert C. Green, Michael W. Weiner, et al. 2013. Genome-Wide Scan of Healthy Human Connectome Discovers SPON1 Gene Variant Influencing Dementia Severity. *Proceedings of the National Academy of Sciences* 110, 12 (2013), 4768–4773.
6. Somesh Jha, Louis Kruger, and Vitaly Shmatikov. 2008. Towards Practical Privacy for Genomic Computation. In *Security and Privacy, 2008. SP 2008. IEEE Symposium on*. IEEE, 216–230.
7. Miran Kim and Kristin Lauter. 2015. Private Genome Analysis Through Homomorphic Encryption. *BMC Medical Informatics and Decision Making* 15, 5 (2015).
8. Vladimir Kolesnikov and Thomas Schneider. 2008. Improved Garbled Circuit: Free XOR Gates and Applications. In *Automata, Languages and Programming*. Springer, 486–498.
9. Yehuda Lindell and Benny Pinkas. 2009. A Proof of Security of Yao’s Protocol for Two-Party Computation. *Journal of Cryptology* 22, 2 (2009), 161–188.
10. An Liu, Kai Zheng, Lu Li, Guanfeng Liu, Lei Zhao, and Xiaofang Zhou. 2015. Efficient Secure Similarity Computation on Encrypted Trajectory Data. In *Data Engineering (ICDE), 2015 IEEE 31st International Conference on*. IEEE, 66–77.
11. Md Safiur Rahman Mahdi, Mohammad Zahidul Hasan, and Noman Mohammed. 2017. Secure Sequence Similarity Search on Encrypted Genomic Data. In *Connected Health: Applications, Systems and Engineering Technologies (CHASE), 2017 IEEE/ACM International Conference on*. IEEE, 205–213.
12. Payman Mohassel and Yupeng Zhang. 2017. SecureML: A System for Scalable Privacy-Preserving Machine Learning. In *2017 IEEE Symposium on Security and Privacy (SP)*. 19–38. https://doi.org/10.1109/SP.2017.12
13. Cancer Genome Atlas Network et al. 2012. Comprehensive Molecular Portraits of Human Breast Tumours. *Nature* 490, 7418 (2012), 61–70.
14. Anna Olivieri, Carlo Sidore, and et al. 2017. Mitogenome Diversity in Sardinians: A Genetic Window onto an Island’s Past. *Molecular Biology and Evolution* 34, 5 (2017), 1230–1239.
15. Pascal Paillier et al. 1999. Public-Key Cryptosystems Based on Composite Degree Residuosity Classes. In *Eurocrypt*, Vol. 99. Springer, 223–238.
16. Suyash S. Shringarpure and Carlos D. Bustamante. 2015. Privacy Risks from Genomic Data-Sharing Beacons. *The American Journal of Human Genetics* 97, 5 (2015), 631–646.
17. Wenhai Sun, Ning Zhang, Wenjing Lou, and Y. Thomas Hou. 2017. When Gene Meets Cloud: Enabling Scalable and Efficient Range Query on Encrypted Genomic Data. In *INFOCOM 2017*. IEEE, 1–9.
18. Bing Wang, Wei Song, Wenjing Lou, and Y. Thomas Hou. 2017. Privacy-Preserving Pattern Matching Over Encrypted Genetic Data in Cloud Computing. In *INFOCOM 2017-IEEE Conference on Computer Communications*. IEEE, 1–9.
19. Shuang Wang, Xiaoqian Jiang, Haixu Tang, Xiaofeng Wang, Diyue Bu, Knox Carey, Stephanie O. M. Dyke, Dov Fox, Chao Jiang, Kristin Lauter, et al. 2017. A Community Effort to Protect Genomic Data Sharing, Collaboration, and Outsourcing. *npj Genomic Medicine* 2, 1 (2017), 33.
20. Xiao Shaun Wang, Yan Huang, Yongan Zhao, Haixu Tang, Xiaofeng Wang, and Diyue Bu. 2015. Efficient Genome-Wide, Privacy-Preserving Similar Patient Query Based on Private Edit Distance. In *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security*. ACM, 492–503.
21. Jun Zhou, Zhenfu Cao, and Xiaolei Dong. 2016. PPOPM: More Efficient Privacy Preserving Outsourced Pattern Matching. In *European Symposium on Research in Computer Security*. Springer, 135–153.
22. Ruiyu Zhu and Yan Huang. 2017. Efficient Privacy-Preserving General Edit Distance and Beyond. Technical Report. *Cryptology ePrint Archive*, Report 2017/683, 2017. http://eprint.iacr.org/2017/683. Accessed 10 April 2017.

### Wagner-Fisher Algorithm

**Algorithm 9: Edit Distance Computation**

**Input:**
- \( X = [a_1, a_2, \ldots, a_{n_1}] \)
- \( Y = [b_1, b_2, \ldots, b_{n_2}] \)

**Output:**
- \( d_{n_1, n_2} \)

1. For \( 0 \leq i \leq n_1 \):
   - \( d_{i, 0} \leftarrow i \)
2. For \( 0 \leq j \leq n_2 \):
   - \( d_{0, j} \leftarrow j \)
3. Set:
   - \( c_{\text{del}} \leftarrow 1 \)
   - \( c_{\text{ins}} \leftarrow 1 \)
4. For \( 1 \leq i \leq n_1 \) and \( 1 \leq j \leq n_2 \):
   - \( c_{\text{sub}} \leftarrow (a_i == b_j) ? 0 : 1 \)
   - \( d_{i, j} \leftarrow \min(d_{i-1, j} + c_{\text{del}}, d_{i, j-1} + c_{\text{ins}}, d_{i-1, j-1} + c_{\text{sub}}) \)
5. Return \( d_{n_1, n_2} \)

**Example:**

\[
\begin{array}{c|cccccc}
  & \epsilon & b_1 & b_2 & b_3 & b_4 & b_5 \\
\hline
\epsilon & 0 & 1 & 2 & 3 & 4 & 5 \\
a_1 & 1 & 0 & 1 & 2 & 3 & 4 \\
a_2 & 2 & 1 & 0 & 1 & 2 & 3 \\
a_3 & 3 & 2 & 1 & 0 & 1 & 2 \\
a_4 & 4 & 3 & 2 & 1 & 0 & 1 \\
\end{array}
\]

The lower-right element \( d_{4,5} = 2 \) is the final result, and the dotted line represents one of the optimal paths.

### Security Analysis

**Assumptions:**
- The secure computation primitives involved in our protocols are secure under the semi-honest model.
- Paillier cryptosystem with distributed decryption is semantically secure.

**Theorem B.1:**
If Paillier cryptosystem with distributed decryption (PCDD) is semantically secure, then the offline phase of the secure shuffling (SSF_off) protocol is secure under the semi-honest adversaries model.

**Proof:**
- **Correctness:** The output is shuffled from \([-u_1 - v_1, \ldots, -u_n - v_n]\) by the permutation function \(\pi\).
- **Security:**
  - **Case 1: A is corrupted.** Construct a simulator \(S_1\) to simulate A's view. \(S_1\) randomly picks integers \(\alpha_1, \ldots, \alpha_n\) from \(\mathbb{Z}_N\) and encrypts them using PCDD. Any PPT adversary cannot distinguish the simulator's encryption from B's encryption due to the semantic security of PCDD.
  - **Case 2: B is corrupted.** Construct a simulator \(S_2\) to simulate the message sent by A. \(S_2\) randomly picks integers \(\beta_1, \ldots, \beta_n\) and \(\gamma_1, \ldots, \gamma_n\) from \(\mathbb{Z}_N\) and encrypts them using PCDD. Any PPT adversary who can distinguish between interaction with A and interaction with \(S_2\) can be used to break the semantic security of PCDD.

**Theorem B.2:**
The online phase of the secure shuffling (SSF_on) protocol is secure under the semi-honest adversaries model.

**Proof:**
- **Correctness:** The function of SSF_on is that A and B input a secret sharing sequence \((x)\), then A outputs a share of the shuffled sequence \((x')\).
- **Security:**
  - The exchanged messages \(L_4\) and \(L_5\) can be simulated by randomly choosing values. Thus, SSF_on is secure under the semi-honest adversaries model.

**Theorem B.3:**
If SSF protocol and ADD-CMP are secure under the semi-honest adversaries model, then the SBC protocol is secure under the semi-honest adversaries model.

**Proof:**
- **Correctness:** The output \((y)\) is assigned according to the relationship between \(x_1\) and \(x_2\).
- **Security:**
  - Present the security proof in a hybrid model where A and B have access to a trusted party (TP) which can realize the function of SSF protocol and ADD-CMP. A and B call TP to run the function of SSF protocol with input \([(x_1), (x_2)]\) for outputting the random permutation result.

This version of the text is more structured, clear, and professional, with proper formatting and consistent citation style.