# **file_put_content和死亡·杂糅代码之缘**
## **\------如何优雅地写一篇文章是我一直以来不解的问题**
之前打了WMCTF，题目还行，只是非预期很快乐，比赛时checkin2感觉很有意思，就来思考个专题；
首先来说，file_put_content大概有三种情形出现；
`file_put_contents($filename,"php_value%20auto_prepend_file%20G:\s1mple.php
同时传入如上的代码，首先来解释$filename的代码，这里引用了string.strip_tags过滤器，可以过滤.htaccess内容的html标签，自然也就消除了死亡代码；$content即闭合死亡代码使其完全消除，并且写入自定义包含文件；实验结果如下所示：
但是这种方法也是具有一定的局限性，首先我们需要知道flag文件的位置，和文件的名字，一般的比赛中可以盲猜 flag.php flag /flag
/flag.php
等等；另外还有个很大的问题是，string.strip_tags过滤器只是可以在php5的环境下顺利的使用，如果题目环境是在php7.3.0以上的环境下，则会发生段错误。导致写不进去；根本来说是php7.3.0中废弃了string.strip_tags这个过滤器；
## 4\. **过滤器编码组合拳**
过滤器组合拳，其实故名思意，就是利用过滤器嵌套过滤器进行过滤，以此达到代码的层层更迭，从而最后写入我们期望的代码；
**先来一种：**
    $filename='php://filter/string.strip_tags|convert.base64-decode/resource=s1mple.php'
    $content='?>PD9waHAgcGhwaW5mbygpOz8+'
可以看到，利用string.strip_tags可以过滤掉html标签，将标签内的所有内容进行删去，然后再进行base64解码，成功写入shell；
但是这种方法有一定的局限性也还是因为string.strip_tags在php7.3.0以上的环境下会发生段错误，从而导致无法写入，但是在php5的环境下则不受此影响；
**再来另外一种**
如果题目的环境是php7的话，那么我们又该如何？这里受一个题目的启发，也可以使用过滤器进行嵌套来做；组合拳；这里三个过滤器叠加之后先进行压缩，然后转小写，最后解压，会导致部分死亡代码错误；则可以写入shell；
    $filename=php://filter/zlib.deflate|string.tolower|zlib.inflate|/resource=s1mple.php
    $content=php://filter/zlib.deflate|string.tolower|zlib.inflate|?>/resource=s1mple.php
如此便可以写入；其原理也很简单，就是利用过滤器嵌套让死亡代码在各种变换之间进行分解扰乱，然后再次写入木马；
这里非常巧合的是内容经过压缩转小写然后解压之后，我们的目的代码并没有发生变化，这也为写入木马奠定了基础；
## **介绍完第一种情况之后，就来介绍第二种情况**
`file_put_contents($content,"`,两者有本质的区别，然而第一种情况下，后面的几种解法，其实从某种程度上来说，也是将其看成了一个变量从而的出的payload；
这里题目环境如果在php7下，wmctf的wp上已经写的很清楚了，有多种方法可以绕过去；这里不再过多的解释；
但是这里想要分享的一个另类的方法，如果题目环境不是在php7下，并且过滤了zlib的话，又该如何去解答，再使用过滤器去压缩和解压就不太可能实现了；这里提供一种我新实验成的方法，利用.htaccess进行预包含，然后读取flag；
    ?content=php://filter/write=string.strip_tags/?>php_value%20auto_prepend_file%20G:\s1mple.php%0a%23/resource=.htaccess
这里可以直接自定义预包含文件，进行测试；结果如下；
再次访问页面即可包含flag文件，进行读取；主要还是利用.htaccess的功效；（之前我也写有文章，感兴趣的师傅可以看看）
## **Base64**
看到这种情况其实也可以想到base64利用，payload：：
`php://filter/convert.base64-decode/PD9waHAgcGhwaW5mbygpOz8+/resource=s1mple.php`或者
`php://filter/convert.base64-decode/resource=PD9waHAgcGhwaW5mbygpOz8+.php`
看起来顺理成章，进行拼接之后就是`<?php