Feature request:  
Coming from Android background, a feature commonly used to perform complex
tasks is annotation processors.
Since Dart usage is moving to the strong side such a feature can enable all
sorts of code generation previous to user code compilation, which is very
valuable to catch errors early on with compilation checks. Some of the
existing Android libraries are starting to pop up, but instead the user has to
manually perform the code generation step and (probably) commit those files to
disk.
  * https://github.com/google/inject.dart/tree/master/example/coffee
  * https://github.com/IdanAizikNissim/Cosmic
Not yet in Flutter there are some good sources for inspiration
  * Android's Room database's highlights come from annotation processor to generate code and validate user code
  * I also have plans to scan the assets and generate code to access them from a class with fields (inspired by Android's asset system - R.drawable.bunny). If an automated tool that runs pre-build is available I can hook into that, but otherwise the only way is to modify packages/flutter_tools (related to #4890)