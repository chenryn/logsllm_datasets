title:Preserving Caller Anonymity in Voice-over-IP Networks
author:Mudhakar Srivatsa and
Ling Liu and
Arun Iyengar
2008 IEEE Symposium on Security and Privacy
Preserving Caller Anonymity in
Voice-over-IP Networks
†
Mudhakar Srivatsa
‡
, Ling Liu
†
and Arun Iyengar
†
IBM T.J. Watson Research Center, Yorktown Heights, NY - 10598
‡
College of Computing, Georgia Institute of Technology, Atlanta, GA - 30332
{msrivats, aruni}@us.ibm.com, PI:EMAIL
Abstract— Applications such as VoIP need to provide
anonymity to clients while maintaining low latency to sat-
isfy quality of service (QoS) requirements. Existing so-
lutions for providing anonymity such as mix networks
are not well suited to applications like VoIP, SSH, and
gaming which require low communication latency. This
paper investigates the problem of on-demand construction
of QoS sensitive routes on anonymizing networks using
the VoIP application. We ﬁrst describe triangulation based
timing analysis attacks on shortest path route set up pro-
tocols. We show that even when a small fraction (∼1%)
of the network is malicious, the adversary can infer the
source (caller) with reasonably high probability. Second,
we describe random walk based route set up protocols that
signiﬁcantly improve anonymity while satisfying latency-
based QoS guarantees. We describe a prototype imple-
mentation of our proposal and show that our protocols
can signiﬁcantly reduce the probability of inferring the
caller. We present a detailed experimental evaluation to
demonstrate our attacks and quantify the performance
and scalability of our guards.
I. INTRODUCTION
Many applications such as VoIP need to provide anony-
mity to clients using the application. Existing approaches
typically use mix networks [10], [17], [12], [16], [8]
which provide good anonymity for high latency com-
munications by routing network trafﬁc through a num-
ber of nodes with random delays and random routes.
However, emerging applications such as VoIP1, SSH,
online gaming, etc have additional quality of service
(QoS) requirements that are hard to be accommodated
by such mix networks; for instance ITU (International
Telecommunication Union) recommends up to 250ms
one-way latency for interactive voice communication2.
1VoIP’s share of worldwide voice trafﬁc has grown from 12.8% in
2003 to an estimated 75% in 2007 [6]
2A case study [29] indicates that latencies up to 250ms are un-
perceivable to human users, while latencies over 400ms signiﬁcantly
deteriorate the quality of voice conversations.
Several authors have pointed out that low latency ap-
plications on mix networks may be vulnerable to timing
analysis attacks [30], [35], [28]. In this paper, we inves-
tigate trade offs between QoS guarantees and anonymity
using VoIP as a sample application. A VoIP network
typically consists of a core proxy network and a set of
clients that connect to the edge of this proxy network
(see Figure 1). We show how the identity of VoIP callers
can be identiﬁed via timing attacks. We then present
solutions for preserving anonymity while satisfying QoS
requirements.
In particular, this paper investigates the problem of on-
demand construction of QoS sensitive routes on anonymiz-
ing networks and makes two contributions. First, we
describe triangulation based timing analysis attacks on
a peer-to-peer broadcast based shortest route set up pro-
tocol. Unlike previous timing analysis attacks [33], [36],
[38], [32], [9], [13], [31] that use inter-packet timing
characteristics, our timing analysis attacks focus exclu-
sively on the execution times of different stages in the
route set up protocol. We show that while the VoIP
route set up protocol meets the QoS requirement (by
setting up the shortest path), it is vulnerable to timing
analysis that can reveal the identity of the caller with
non-trivial probability even when only a small fraction
of the network nodes are malicious (∼1%).
Second, we develop and implement three solutions
to improve the resilience of route set up protocols to
provide anonymity while satisfying latency-based QoS
guarantees. First, we show that naively adding random
delays to network latencies does not alleviate the prob-
lem. We then show that a pure random walk based route
set up protocol can signiﬁcantly reduce the probability
of inferring the caller, although it may blatantly violate
QoS requirements by setting up routes with unbounded
latencies. We describe two hybrid route set up proto-
cols that combine random walk and shortest route set
up protocols with the goal of providing resilience to
978-0-7695-3168-7 /08 $25.00 © 2008 IEEE
DOI 10.1109/SP.2008.10
50
Fig. 1. Anonymizing VoIP Network
triangulation based timing attacks, while satisfying QoS
requirements.
The rest of this paper is organized as follows. We de-
scribe a VoIP network model in Section II. We describe
the triangulation based timing attacks in Section III fol-
lowed by our guards in Section IV. We describe a pro-
totype implementation and present detailed experimental
evaluation to demonstrate our attacks and quantify the
performance and scalability of our guards in Section V.
We discuss related work in Section VI and conclude the
paper in Section VII.
II. PRELIMINARIES: VOIP ROUTE SET UP PROTOCOL
VoIP applications typically use two main protocols: a
Route Set Up protocol for call setup and termination, and
a Real-time Transport Protocol (RTP) for media delivery.
Our work is relevant to peer-to-peer VoIP protocols (such
as Skype [5]) which use route set up protocols similar
to the one described in this section. The route set up
protocol allows a caller to search for a receiver (identiﬁed
by a URL, e.g.: sip:me.xyz.com) and sets up the shortest
route (also called circuit) to the receiver node. RTP may
be used to carry voice trafﬁc between the caller and the
receiver along an established bi-directional voice circuit.
The VoIP route set up protocol typically operates in
four steps. First, the initSearch initiates a route set up
request from a VoIP client src. Second, the processSearch
processes a route set up request at some node on the
VoIP network. Third, the processResult processes the
results of a route set up request at some node on the VoIP
network. Fourth, the finSearch concludes the route set
up procedure. We now describe these four operations in
detail, which are important for understanding triangula-
tion based timing attacks discussed in the next section.
initSearch. A VoIP client src initiates a route set up
for a receiver dst by broadcasting search (searchId,
sipurl = dst.sipurl, ts = curT ime) to all nodes p
∈ ngh(src), where ngh(src) denotes the neighbors of
node src in the VoIP network. The search identiﬁer searchId
is a long randomly chosen unique identiﬁer, and ts de-
notes the time stamp at which the route set up request
was initiated.
processSearch. Let us suppose p receives search
(searchId, sipurl, ts) from its neighbor q. If p has seen
searchId in the recent past then it drops the request.
Otherwise, p checks if sipurl is the URL of a VoIP
client connected to p. If yes, p returns its IP address
using result (searchId, p) to q. Otherwise, p broadcasts
(cid:1) ∈ ngh(p)−{q}
search (searchId, sipurl, ts) to all p
and caches (cid:3)searchId, sipurl, q(cid:4) in its recently seen
has no knowledge of where the route
list. Note that p
set up request is initiated.
(cid:1)
processResult. Let us suppose p receives result(searchId,
q) from q. Note that p has no knowledge as to where
the search result was initiated. p looks up its cache of
recently seen search queries to locate (cid:3)searchId, sipurl,
prev(cid:4). p adds a routing entry (cid:3)sipurl, q(cid:4) and forwards
result (searchId, p) to prev.
finSearch. When src receives result (searchId, q)
from q, it adds a routing entry (cid:3)dst, q(cid:4) to its routing
table. After a successful route set up, the clients src and
dst exchange an end-to-end media encryption key and
switches to the media delivery phase.
The route set up protocol includes the following secu-
rity features: (i) All communication between a node and
its neighbor is encrypted with a shared symmetric key.
(ii) While the above protocol does not directly reveal
src, it exposes dst (namely, dst.sipurl). This is usually
ﬁxed by replacing plain-text dst.sipurl by an encryp-
tion of (searchId, ts, dst.sipurl) using dst’s public
key3. A node p checks if the request matches sipurl
3Public Keys are obtained out-of-band, say, using a trusted certiﬁ-
cation authority
51
by attempting to decrypt dst.sipurl using its private
key4. Additionally, the caller may add its ID (src.sipurl)
signed using src’s private key (and encrypted using dst’s
public key); this allows a receiver dst to respond with a
search result only after verifying the caller ID. (iii) When
the destination node dst receives the route set up request
(processSearch), it adds a random delay (0-250ms)
before sending the search result to its neighbor prev;
this increases the route set up latency but not the route
latency itself and makes it hard for prev to infer that dst
is indeed the destination using the time elapsed between
forwarding the route set up request and receiving the
search result. (iv) Finally, note that if all neighbors of a
node n are malicious, then they can infer if n is indeed
the source or the destination of a VoIP call. However,
we investigate timing analysis attacks with signiﬁcantly
fewer malicious nodes (∼1% of the network size) that
can identify the caller of any VoIP call.
III. CALLER IDENTIFICATION ATTACKS
In this section, we present triangulation based timing
attacks on the VoIP route set up protocol. Similar to
most other threat models for anonymizing networks, we
assume that some network nodes (VoIP proxies) may
be malicious and may collude with one another. The
attacks require at least some knowledge of the VoIP net-
work topology. We present techniques to exploit network
maintenance protocols to discover network topology in
Section III-D. Triangulation based timing attacks op-
erate in three steps: candidate caller detection,
candidate caller ranking, and triangulation.
In the candidate caller detection step, malicious
nodes passively observe the time instants at which they
receive the route set up requests. Each malicious node
(independently) uses this information and the topology
of the VoIP network to deduce a set of candidate callers.
In the candidate caller ranking step, malicious
nodes associate a score with each such candidate caller
s that denotes the likelihood of s being the actual caller.
In the triangulation step, two or more malicious
nodes combine their sets of candidate callers to obtain
a much more concise and yet precise list of candidate
callers.
We describe three timing attacks on the route set up
protocol with increasing sophistication: deterministic tri-
angulation, statistical triangulation and differential trian-
gulation. First, we illustrate triangulation based timing
4dst avoids replay attacks using searchId and ts
attacks in a simpliﬁed setting to highlight the key prop-
erties of such attacks. Concretely, we make two assump-
tions: (i) the network link latencies are deterministic, and
(ii) all nodes in the network have a tightly synchronized
clock. Second, we relax the ﬁrst assumption by showing
how statistical triangulation attacks can operate on statis-
tical link latencies (for arbitrary probability distributions)
using the notion of statistical shortest paths. Third, we
develop differential analysis that can tolerate arbitrary
clock skews. While the ﬁrst two attacks can be thwarted
by simply removing the timestamp ﬁeld ts from the
route set up request, the third attack is completely ag-
nostic to ts.
A. Deterministic Triangulation
In this section, we describe the properties of the broad-
cast based route set up protocol. Then, we use the short-
est path property to develop triangulation based timing
analysis attacks assuming deterministic link latency and
tight clock synchronization.
1) Route Set Up Protocol Properties: By assuming
deterministic latencies of the VoIP network, we observe
two important properties of the route set up protocol:
Lemma 3.1: Let us suppose that the VoIP network
link latencies are deterministic and that all the network
nodes have tightly synchronized clocks. Let dist(x, y)
denote the length of the shortest path between nodes x
and y. The route set up protocol satisﬁes the following
properties:
(i) The protocol establishes the shortest route between
the two nodes src and dst.
(ii) Any node p on the network that receives the route
set up request originated from node src can estimate
dist(src, p).
Proof: A sketch of the proof is provided here.
When p ﬁrst receives a route set up request, that re-
quest must have traversed the shortest route between src
and p. In step processSearch, a peer p can estimate
dist(src, p) using the time stamp ts on the route set
up request and time instant at which the request was
received by peer p. Also, if the peer p received the
ﬁrst route set up request from its neighbor q, then the
shortest route from src to p is via q. Using mathematical
induction on the number of hops traversed by a route
set up request, one can show that the route set up step
(processResult) builds the shortest route src to dst.
Figure 3 illustrates the protocol with src = p1 and dst =
p7. The links in the VoIP network are labeled with link
latencies (assumed to be deterministic). We label each
52
p1
p2
p3
p4
p5
p6
p7
15
0
p1
10
5
2
p4
2
10
p2
5
p3
10
10
p5
5
10
p6
12
5
2
p7
14
Super Peer (VoIP Proxy)
Super Peer (VoIP Proxy)
VoIP Client
Fig. 2. VoIP Network
Fig. 3. Shortest Route Set Up Protocol
Fig. 4.
Caller Lies in Shaded Region
Triangulation Attack Illustration:
requests received by node p is equal to the cardinality of
the resultant set I. The time instant at which p receives
a route set up request from a node v ∈ I is given by
dist(src, v) + evp, where dist(src, v) is the length of
the shortest path from src to v and evp denotes the
latency of the edge from v to p. One can sort these
time instants in ascending order and use distρ(src, p) to
denote the time instant at which the ρth copy of a route
(cid:2)
set up request from src reaches p (1 ≤ ρ ≤ |I|); we
set distρ(src, p) = ∞ for ρ > |I|. Now, we compute
the score for a candidate caller s as scorep(s) =
|distρ(s,p)−(cid:1)dist
p − ts
ρ(src, p) = tρ
p denotes the time instant at which the ρth request
, where (cid:1)dist
(src,p)|+1
ρ
1
ρ
and tρ
is received by p.
node with the time instant at which it received the ﬁrst
route set up request starting with peer p1 at time t = 0.
Evidently, the protocol establishes the shortest route p1
↔ p3 ↔ p6 ↔ p7.
2) Deterministic Triangulation Attack: The determin-
istic shortest path triangulation attack easily follows from
the properties of the route set up protocol. The attack op-
erates in three steps. The candidate caller detection
step operates as follows. Let p be a malicious node that
received a route set up request originating from src at
time ts. The malicious node p can compute dist(s, p) for
all nodes s in the network using Dijkstra’s shortest path
algorithm. Given the time instant tp at which the request
tp − ts. Node p compiles a list of potential callers, de-
noted by S(p), such that for any s ∈ S(p), |dist(s, p)−
was received by peer p, p can estimate (cid:1)dist(src, p) =
(cid:1)dist(src, p)| < , where  is a tuneable parameter. In the
candidate caller ranking step, the peer p com-
putes the score for every node s ∈ S(p) as scorep(s) =
|dist(s,p)−(cid:1)dist(src,p)|+1
, and sorts all nodes in S(p) in the
descending order of their scores. In the triangulation
step, a set of colluding malicious nodes p1, p2, ··· , pn,
compute score(s) =
for every s in S =
∩n
i=1S(pi). Figure 4 illustrates a triangulation with two
malicious nodes p1 and p2.
i=1 scorepi (s)
(cid:2) n
n
1
In addition to the shortest path, a node p may receive
duplicate route set up requests along alternate paths. This
information can be used in a deterministic multi-path
triangulation attack as follows. Let ngh(p) denote the
set of neighbors of node p. Initialize set I = ngh(p).
For every node v ∈ I, we compute the shortest path
from src to v. If node p belongs to the shortest path
from src to v, then we remove node v from the set I.
One can show that the number of copies of route set up
53
B. Statistical Triangulation Attack
P =
(cid:2)
r
i=1 µei, σ2
In this section, we use the notion of statistical shortest
paths [11] to relax the deterministic link latency assump-
tion. Similar to [11], we model link latencies as indepen-
dent distributions characterized by mean µe and variance
(cid:2)
σ2
e. Assuming that the link latencies are independently
distributed, the length of a path P = {e1, e2, ··· , er}, is
r
i=1 σ2
given by (µP =
ei). The notion of
a statistical shortest path is deﬁned using two operators
1) (cid:9) (µ2, σ2
(cid:9) and (cid:10) on path lengths: (µ1, σ2
2) holds if
1) (cid:10) (µ2, σ2
µ1 ≤ µ2 ∧ σ2
2, and the (µ1, σ2
2) holds if
µ1 ≤ µ2 ∧ σ2
≥. The goal of a
2 or µ2 ≤ µ1 ∧ σ2
statistical shortest path algorithm is to compute a list of
Pareto-optimal shortest path lengths from a node src to
a node p on the network. A set of path lengths d1 = (µ1,
σ2
1), d2 = (µ2, σ2
m) is Pareto-optimal