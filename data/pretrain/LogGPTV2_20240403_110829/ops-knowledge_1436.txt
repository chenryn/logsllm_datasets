When coding, I often find it helpful to print the current values of variables to the console. While working with Google App Engine (GAE), I noticed that there isn't a direct equivalent for this. However, I did see that the GAE Launcher includes a Log terminal. Is there a way to write to this terminal or another terminal using GAE?

### Solution:
To enable logging of detailed messages in Google App Engine, you can adjust the logging level. By default, the logging level is set to 'error', which means only error messages are displayed. To see more detailed messages, such as `info` and `warning` levels, you can use the `setLevel` method.

Hereâ€™s how you can do it:

1. **Set the Logging Level:**
   ```python
   import logging

   # Set the logging level to ALL to see all messages
   logging.getLogger().setLevel(logging.ALL)
   ```

2. **Logging Messages:**
   Instead of using `print`, you should use the `logging` module to log messages. For example:
   ```python
   import logging

   # Log an info message
   logging.info('This is an info message')

   # Log a warning message
   logging.warning('This is a warning message')

   # Log an error message
   logging.error('This is an error message')
   ```

3. **Handling `System.out` and `System.err`:**
   Text printed to `System.out` and `System.err` will be captured by the logging system. Specifically, `System.out` is treated as `info` level messages, and `System.err` is treated as `error` level messages. For example:
   ```python
   import sys

   # This will be logged as an info message
   print('This is a print statement')

   # This will be logged as an error message
   print('This is an error message', file=sys.stderr)
   ```

By following these steps, you can effectively use the logging system in Google App Engine to monitor and debug your application.