soft');
的行找出来：
great oaks
MATCH(phrase)AGAINST('time')AS relevance
phrase
phrase
I want you!
Iphrase
Bell，book,and candle
Mr.
big stick
Watson,
come here.
--------
-----
I want you!
2.14使用FULLTFEXT 搜索
+--------
|relevance
1.3253291845321655
1.340062141418457
0
---
## Page 144
尔模式搜索具有以下几个特点。
完成这种类型的搜索，需要在AGAINST（）函数里搜索字符串的后面添加IN BOOLEAN MODE。
2.14.2
样的事情：
符串的后面加上 IN NATURAL LANGUAGE MODE。
mysql> SELECT *FROM apothegm
mysql>
对于布尔模式搜索，还可以为搜索字符串里的单词加上一些修饰符。在单词的前面加上一
口也可以对未被包括在FULLTEXT索引里的那些列，进行布尔模式的全文搜索，只是这样
口搜索可以要求短语里的所有单词都必须是按某种特定的顺序出现。如果想要匹配一个
口“50%规则”
通过使用布尔模式的全文搜索，可以获得对多单词（multiple-word）搜索的更多控制。
AGAINST('hard soft
自然语言模式是默认的全文搜索模式。如果想要显式地指定这个模式，那么可以在搜索字
attribution
Miguel de Cervantes
Alexander Graham Bell
attribution
口
Benjamin Franklin
attribution
做会比对索引过的列进行搜索要慢一些。
短语，那么需要把它用双引号引起来。只有在行包含的那些单词及其顺序与短语里列
搜索出来。
出的内容一致时，才会被认为是匹配上了：
查询结果不再按相关程度排序。
Prov
->AGAINST('+bell-Candle'IN BOOLEANMODE);
-> WHERE MATCH(attribution,phrase)
->AGAINST('bel1′）;
mysql> SELECT *FROM apothegm
Miguel de Cervantes |Bell,
第2章
attribution
布尔模式的全文搜索
SELECT * FROM apothegm
WHERE MATCH(attribution, phrase)
verbs15:1
使用SQL管理数据
”不再起作用。
IN NATURAL LANGUAGE MODE）;
1phrase
But,
It is hard for an empty bag to stand upright
phrase
Bell,book,
Mr.Watson,
phrase
phrase
，即使找到的单词会出现在一半以上的行里，仍然会把它们
soft!whatlight
book,
candle":
----
andcandle
come here. I want you!
turneth
and candle
”但不包含“candle”的行相匹配。
下面这条语句可以完成与前面那个示例完全一
 N N
through yonder window breaks?
away
wrath
布
要
---
## Page 145
所找到的行里。
单词。之所以能找到该行，是因为它包含单词“candle”，而这个单词存在于那个自然语言搜索
是一次查询扩展搜索。这次查询多找到了一行记录，而它并没有包含原始搜索字符串里的那些
例可用于说明整个过程。
在最终的结果里会包
来那些搜索单词一起使用，完成第二阶段的搜索。因为整个搜索单词的集合变得更大了，所以
样。在这次搜索里，那些相关程度最高的行会被用于第二阶段的搜索。这些行里的单词会与原
2.14.3
和“great”的行找出来，而“the”
记为“必需的”也是一样。例如，搜索’+Alexander +the +great‘将把那些包含“Alexander”
就是匹配的。例如，‘soft*'与“sof”、
要想完成这种搜索，
mysql> SELECT *FROM apothegm
mysql>
支持查询扩展的全文搜索会分两个阶段完成搜索。第一阶段搜索与普通的自然语言搜索
与自然语言全文搜索相似，布尔模式的全文搜索也会把所有停用词忽略掉，即使它们被标
在附录C的Match条目里，可以查到所有的布尔模式修饰符。
不过，不能用这个通配符功能来匹配那些比最小索引单词长度还要短的单词。
mySql> SELECT *FROM apothegm WHERE MATCH(phrase)
单词末尾的星号“”是一个通配符，只要行包含的单词是以搜索单词开头的，那么这些行
Alexander Graham Bell
Miguel de Cervantes
attribution
Theodore Roosevelt
Iattribution
Miguel de Cervantes
attribution
William Shakespeare
Alexander Graham BellIMr.Watson,
Robert Burton
Proverbs 15:1
->AGAINST('bell book
->
查询扩展全文搜索
->AGAINST('sOft*
WHERE MATCH(attribution,phrase)
包含一些在第一阶段未被找到，
，第一条查询命令展示的是一次自然语言搜索。第二条查询命令展示的
需要在搜索字符串的后面加上WITHQUERY EXPANSION。
But
phrase
IN BOOLEAN MODE);
Iphrase
Speak softlyand carrya big stick
Bell, book,
phrase
WITH QUERY EXPANSION);
Mr.Watson,
Bell,book;
则会因其是一个停用词而被忽略。
soft! what light through yonder window breaks?
Watson,
phrase)
、“softly”、“softness”等都匹配：
come here.
and candle
come here. I want you!
and candle
come here.I want you!
但文
又与它们有着密切联系的行。
Iwant you!
2.14使用FULLTFEXT 搜索
-------
------
下面这个示
125
---
## Page 146
说明如果想使用myisamchk程序为某个包含有FULLTEXT索引的表重建索引，那么可以参
引，然
启时都能生效，那么最好的办法是把这个设置放到某个选项文件里，如/etc/my.cnf 文件：
的那些单词。默认的最小值和最大值分别是4和84。
小长度和最大长度。在创建FULLTEXT索引I时，会忽略掉其长度超出这两个参数所确定的范围
ft_min_word_len和ft_max_word_len用于确定FULLTExT索引里的那些单词所具有的最
2.14.4
126
（1）把ft_min_word_len变量设置为3，重启服务器。如果想让这个设置在每次服务器重
全文搜索有几个参数是可配置的，并且可以通过设置系统变量的办法进行修改。变量
关于设置系统变量的更多信息请参考附录D。关于使用选项文件的更多信息请参考附录F。
(3）所有在更改参数后新创建的FULLTEXT 索引，将自动使用这个新值。
然后再重建它们，但更为简易有效的办法是执行一次快速修复操作：
假设想要把最小单词长度从4改成3，那么可按以下步骤进行操作。
REPAIR TABLEtbl_name QUICK;
(2）对于那些已经建立了FULLTEXT索引的表，必须重建这些索引。你可以先删除这些索
ft_min_word_len=3
[mysqla]
事项。
考附录F，其中在对myisamchk进行描述时包含了一些与FULLTEXT索引有关的注意
第2章使用SQL管理数据
配置全文搜索引擎
---
## Page 147
会用到的数据值类型。
递给某个函数或者使用某个函数的返回值。下面的INSERT语句能够完成所有这些事情：
个表里的每一个列定义一种类型：
有些时候，数据的类型比较直观。例如，当你用CREATETABLE语句来创建表时，就必须为这
达式的计算，它会产生一个整数值。
数据类型
MySQL里的每一个数值都拥有一个类型。例如，37.4是一个数字，而abc是一个字符串。
MySQL能表示的一般类别的数据值，包括NULL值。
要想高效地使用MySQL，你必须要透彻理解“MySQL是如何处理数据的”。本章将描述你
口MySQL专门为表的列提供的数据类型，以及描述每种数据类型的属性。有些MySQL
INSERT INTO mytbl (int_col, str_col, date_col)
而其他时候，数据的类型则比较隐蔽。例如，有时你会想在表达式里引用文本值，将值传
口它会把整数值20130815赋值给日期列date_col。该赋值操作会出现类型不匹配的问
它会把字符串'a和·b·传递给字符串拼接函数CONCAT（）；然后，将其返回的字符串值
口它会把整数14赋给整型列int_col。
这条语句完成了以下几个操作，每一个操作都会涉及数据类型。
CREATE TABLE mytbl
数20130815转换为日期：2013-08-15。
'ab赋给字符串列str_col。
date_col DATE
题，但由于整数值可以合理地解释为日期值，因此MySQL会执行自动类型转换，将整
int_col
第3章
#日期值列
---
## Page 148
被视为64位的整数。例如，0x10即为十进制数16。关于十六进制值的语法描述请参考3.1.2节。
点的数字序列构成。十六进制值会被默认为字符串，但在进行数值运算的时候，十六进制常量会
3.1.1.1精确值数和近似值数
但12,345,678.90是非法的。
小数位）、定点数或浮点数（可以有小数部分），以及位域值（bit-field value)。
3.1.1
空间值，以及NULL值。
3.1
了严格模式，以及坏数据的处理规则。
SQL模式设置的详细信息请参考2.1节。在本章中，3.2.3节讲到了默认值的处理，3.3节则讲到
句在第1章和第2章都讨论过。如有必要，也可以参考附录E。
了更多的参考信息。
在某些情况下，数据处理取决于两个方面：默认值是如何定义的；当前的SQL模式。关于
本章的示例大量使用了 CREATE TABLE 语句和 ALTER TABLE语句来创建和修改表。这些语
整数可以表示成十进制或十六进制两种格式。在十进制格式下，每个整数由一个不包含小数
，当你指定某个数字时，请不要将逗号作为分隔符包括在内。例如，12345678.90是合法的，
数值是指诸如48、193.62或-2.378E12之类的值。MySQL所能识别的数字包括整数（无
MySQL支持多种常规类别的数据值。其中包括数值、字符串值、
精确值数在使用时与指定值是完全一致的。精确值包括整数（如0、14、-382）和带小数
MySQL支持对精确值数的精确运算，以及对近似值数的近似运算。
作为对本章关于MySQL的数据类型、运算符和函数等内容的补充，附录B和附录C提供
口
口服务器的SQL模式对坏数据值的处理方式有何影响，它又是如何使用“严格”模式拒绝
口
口
本章还将讨论使用这些类型时可能会遇到的一些问题。
数值
数据值类别
存储的那些值的类型时，该如何选择适合的类型，这是很值得了解的事情。
如何为表中的列选择适合的数据类型。在创建表时，以及当有好多个类型都满足你所要
是，如果对MySQL的类型转换规则不熟悉，则可能会造成非常严重的破坏，例如，
值用于与其类型不相同的环境时，这些规则就会发挥作用。理解类型转换什么时候
来检索
MySQL的表达式计算规则是什么。在表达式里，你可以广泛地使用各种运算符和函数