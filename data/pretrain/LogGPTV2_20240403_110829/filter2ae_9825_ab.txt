  6. 通用的Web /云漏洞-想到OWASP Web Top 10
### 设备
接下来是设备，它是IoT技术的游戏规则改变者：）。它与物理世界进行交互，并与虚拟世界进行通信。这是物理世界数据的第一站。鉴于围绕用户隐私存储的用户敏感数据（例如房屋数据，身体数据，个人信息），围绕用户隐私存在着整个争论。将来，设备可能会直接通过其钱包或单独的临时钱包使用用户的加密货币来购买物品，进行维修等。攻击面看起来如下所示
  1. 存储
  2. 认证
  3. 加密
  4. 通讯
  5. 传感器接口
  6. 外围接口
  7. 硬件接口
  8. 人机接口
### 通讯
尽管这不是有形的攻击面，但理想情况下，有形的攻击面将是通信接口和负责通信的各个驱动程序/固件。但是，这需要一个单独的部分，因为IoT生态系统可以在有线以及无线介质上使用的通信协议列表很多。以下是构成通信攻击面的一些区域。
  1. 认证
  2. 加密
  3. 偏离协议标准
  4. 协议实施异常
硬件接口允许实际通信。但是，实际的数据通信/数据包是由软件中实现的上层定义的。因此，在此“攻击表面积”（通信）中，我们将仅讨论协议。尽管协议中的缺陷可能导致对驻留在移动设备，设备或云上的协议端点的攻击，但为清楚起见，我们将其保留为单独的攻击面。这里的列表中有太多标准要提及。但是，我们将列出各种物联网产品中使用的一些常见协议。
### 1.网站
Web或技术术语HTTP（S）是用于通信的最常见协议，并在各处使用。由于网络上的攻击面很大，因此我们专门为此单独输入一个条目。但是，好消息是，由于已经研究了二十多年，因此攻击面，漏洞和缓解技术已基本标准化。在线上有大量资源详细描述了攻击和防护。对于初学者来说，OWASP在其Web
Top
10，测试指南和各种开源工具（[www.owasp.org](https://payatu.com/www.owasp.org)）方面[做得很好](https://payatu.com/www.owasp.org)。
### 2.其他
除了网络之外，还有许多协议，某些协议是特定于域的，有些是通用的，还有一些是出于效率原因。为简洁起见，这里要列出的协议太多了，为简便起见，我们将列出一些通用协议标准，以使您对所使用的协议种类有一个清晰的了解。历史告诉我们，所有协议都有其实施缺陷，协议设计缺陷和配置缺陷。这些需要在渗透测试中进行分析。
  1. CoAP – 
  2. MQTT – 
  3. AMQP – 
  4. WebSocket – 
  5. CANbus – 
  6. Modbus – 
  7. Profibus – 
  8. DNP3 – 
  9. BACNet – 
  10. HL7 – [https://zh.wikipedia.org/wiki/Health_Level_7](https://en.wikipedia.org/wiki/Health_Level_7)
  11. XMPP – 
  12. UPnP – 
  13. DNS
  14. SSH
  15. 
上面的内容应该为您全面概述IoT生态系统的攻击面。既然我们对此有了一个清晰的主意，让我们为设备定义一个详细的攻击面，以便我们知道在标准的IoT渗透测试中到底需要攻击什么。这也有助于物联网安全设计师为物联网产品创建威胁模型。
请注意，我们不会（重新）定义Mobile和Cloud的攻击面，因为您可以在Internet上找到大量描述相同内容的资源。本博客系列的目的是为安全研究人员建立物联网安全性打下桥梁，因此，我们将专注于当前尚无可用或结构化的知识。鉴于我们仍将从我们的角度讨论与物联网生态系统相关的移动和云安全性
### 设备攻击面
好的，让我们这样做：）。以下是IoT攻击面的分离结构化定义。请注意，这是根据我们的理解，并未从其他来源获取。
#### 1.储存
设备使用的存储空间。这可以进一步分为内部和外部，持久性和易失性。
#### 1.1 SD卡
SD卡通常用于存储配置和产品数据。它们也可以用于存储固件更新。这是一个非常有趣的攻击面，我们将在以后的博客文章中讨论通过SD卡可能发生的某些攻击。
#### 1.2个USB
某些产品可能使用USB驱动器来存储与SD卡中相似的数据，以及读取已下载或存储在USB驱动器中的数据。与SD卡类似的攻击也适用于USB存储设备。
#### 1.3非易失性存储器
这些用于各种用途，包括读/写传感器数据，引导程序，固件，凭证，密钥等。在测试硬件板时，查看存储在芯片上的数据至关重要。我们还可以对内存和微控制器之间的通信进行运行时分析，以分析在不同操作期间存储/读取的数据类型。这可以通过使逻辑分析仪嗅探总线通信来实现。在触发设备上的特定操作时，您会发现正在读取/写入的有趣数据。内存芯片有以下几种：
  1. EPROM
  2. EEPROM
  3. 闪存–由于速度和效率较高，因此更常用
![upload
successful](https://images.seebug.org/content/images/2019/09/29/1569741366000-0431_1569660492991.png-w331s)
I2C串行EEPROM
#### 1.4易失性记忆
当谈到易失性内存时，“
RAM”一词立即浮现在脑海中。它们广泛用于PC和嵌入式系统中，并在运行时保存代码和数据。关闭设备电源后，数据将丢失。一些常见的RAM类型如下
  1. SRAM（静态随机存取存储器）–一种RAM，用于保存断电时丢失的数据。
  2. DRAM（动态随机存取存储器）–数据将保留一段时间，直到丢失为止，除非在运行时刷新。这意味着与SRAM相比，即使在芯片加电期间，数据的使用寿命也很短。当芯片断电时，数据也会丢失。
#### 1.5微控制器内部存储器
微控制器还具有自己的内部存储器，通常用于存储代码。这些存储器通常在调试微控制器（例如通过JTAG调试）时可访问。微控制器中使用的各种存储器是：
  1. SRAM
  2. EEPROM
  3. 闪
#### 2.硬件通讯接口
同一块板上的不同硬件组件需要相互交流，并与外界对话。所有这些通信都是使用定义良好的标准硬件通信协议完成的。从攻击者的角度来看，它可以通过嗅探或注入恶意数据使他们深入了解实际的通信。应该分析下面提到的一些最常见的接口，以发现安全问题。
#### 2.1 UART
UART（通用异步接收器发送器）是一个硬件组件，它允许两个硬件外设之间进行异步串行通信。它们可以在同一块板上（例如与电动机或LED屏幕对话的微控制器），也可以在两个不同设备之间（例如与PC对话的设备微控制器）之间。这是一个有趣的攻击面，因为它可能允许通过串行方式对设备进行读/写访问。在许多设备中，板上的UART端口保持开放状态，任何人都可以通过串行端口进行连接和访问，以获得某种类型的控制台，例如简单的外壳，自定义命令行控制台，日志输出等。设备通常具有一组针脚，输出连接到微控制器的UART
RX和TX引脚，用于发送和接收串行数据。
![upload
successful](https://images.seebug.org/content/images/2019/09/29/1569741366000-0431_1569660508930.png-w331s)
典型的4引脚UART端口
#### 2.2单片机调试端口
微控制器具有使用指定的引脚在运行时进行调试的规定，这些引脚连接到板上的引脚输出。这些引脚（端口）供开发人员和设计人员用来调试，读取/写入固件和微控制器内部存储器，并在生产后控制/测试微控制器引脚。鉴于调试端口提供给攻击者的能力和访问权限，这使得调试端口成为最关键的攻击面之一。有一些用于此目的的标准接口如下：
  1. JTAG（联合测试行动小组）：随着微控制器和PCB越来越小，在生产后对其进行测试变得越来越困难。因此，为了有效地在生产后测试电路板，电子行业创建了一个同名协会，并定义了一种在生产后测试电路板的方法。后来改编为IEEE标准1149.1。JTAG协议定义了可用于测试和调试微控制器的标准接口和命令。JTAG定义了四个引脚接口（和一个附加的可选引脚TRST）：
  2. TMS –测试模式选择
  3. TCK –测试时钟
  4. TDI –测试数据输入
  5. TDO –测试数据输出
  6. TRST –测试复位（可选引脚）