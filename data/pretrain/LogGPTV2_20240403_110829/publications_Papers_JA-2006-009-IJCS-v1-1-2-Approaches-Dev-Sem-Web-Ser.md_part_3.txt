nonFunctionalProperties
the operational ability of Web services from
dc#relation hasValue tripFromAustriaDef
endNonFunctionalProperties choreography and orchestration perspectives.
Choreography deals with the interaction that may be
axiom tripFromAustriaDef established with the Web service, while the
definedBy
orchestration deals with the set of functionalities that
forall {?x ,?origin}
(?x memberOf tripFromAustria are required from other Web services.
implies
?x[origin hasValue ?origin] and
The capability of a Web service defines its functionality
?origin[loc#locatedIn hasValue
and includes the following components: non-functional
loc#austria]).
properties, imported ontologies, used mediators, shared
The basic blocks of a WSMO ontology are concepts, variables, precondition, postcondition, assumption, and effect.
relations, functions, instances, and axioms. Concepts are To better understand how these components are used and
defined using a parent-child hierarchy and their attributes, expressed in WSMO an extract [23] of the capabilities of the
including range specification. Relations describe Book Ticket service is shown as follows:
interdependencies between a set of parameters. Functions are
relations that have a unary range beside a set of parameters. capability BookTicketCapability
sharedVariables {?creditCard,
Instances are individuals of concepts or relations, by
?initialBalance, ?trip, ?reservationHolder,
specifying concrete values for attributes or parameters.
?ticket}
Axioms are specified as logical expressions to formalize precondition
domain specific knowledge. definedBy
?reservationRequest[
reservationItem hasValue ?trip,
2. Web service reservationHolder hasValue
Web service descriptions describe the functional and ?reservationHolder
behavioral aspects of a Web service and expose the interface ] memberOf tr#reservationRequest and
?trip memberOf tr#tripFromAustria and
of businesses on the Web. Web services are characterized by a
?creditCard[balance hasValue
set of capabilities which specifies the functionalities provided ?initialBalance
by a Web service. In WSMO, Web services are described ] memberOf po#creditCard.
assumption
from three different perspectives: non-functionality,
definedBy
functionality, and behavior. The following example illustrates
po#validCreditCard(?creditCard)and
the Book Ticket Web Service [23]: (?creditCard[type hasValue
"PlasticBuy"] or
?creditCard[type hasValue
webService
"GoldenCard"]).
_"http://example.org/bookTicketWebService"
...
importsOntology
postcondition
_"http://example.org/tripReservationOntology"
capability BookTicketCapability ...
interface BookTicketInterface effect
...
A Web service definition in WSMO includes five
3. Goals
description elements, namely:
Goals represent user desires and the objectives that a user
• Non-functional properties. Describe a Web service
may have when he checks a Web service. They are described
using the Dublin Core Metadata Element Set.
at a high level and describe functionalities that a Web service
Examples of concepts used include dc:contributor,
should provide from the user perspective.
dc:coverage, dc:creator, and dc:date.
WSMO follows a goal-driven approach. Requests and
• Imported ontologies. Importing ontologies allows a
services are decoupled. A goal includes a requested capability
modular approach for ontology design and are used to
definition (what is required from the service), a requested
specify the semantic meaning of the concepts used in
interface definition (which interface is desired) and some
the service description.
ontology imports for semantic contextualizing of the involved
• Mediators. Ontology mediators are used when an
elements. In WSMO, a goal is described by non-functional
alignment of the imported ontology is necessary, since
properties, imported ontologies, used mediators, requested
when importing ontologies some steps to transform the
capability, and requested interface.
imported ontologies may be necessary.
The following scenario [23] describes the goal of a user
• Capability. A capability defines the Web service by
who wants to buy a ticket from Innsbruck to Venice.
means of its functionality in terms of preconditions,
post-conditions, assumptions, and effects.
• Interface. An interface describes how the functionality
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 15 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
goal
_"http://example.org/havingAReservationInnsbru
ckVenice"
importsOntology {
_"http://example.org/tripReservationOntology
",
_"http://www.wsmo.org/ontologies/locationOnt
ology"}
capability
postcondition
definedBy Fig. 5 Semantics for Web services
?reservation[
reservationHolder hasValue Functional Semantics. The power of Web services can be
?reservationHolder,
achieved only when appropriate services are discovered based
item hasValue ?ticket] memberOf
tr#reservation and on the functional requirements. It has been assumed in several
?ticket[trip hasValue ?trip] memberOf semantic Web service discovery algorithms [24] that the
tr#ticket and
functionality of the services is characterized by their inputs
?trip[origin hasValue loc#innsbruck,
destination hasValue loc#venice] and outputs. Hence these algorithms look for semantic
memberOf tr#trip. matching between inputs and outputs of the services and the
inputs and outputs of requirements. This kind of semantic
4. Mediators
matching may not always retrieve an appropriate set of
Mediators connect possibly heterogeneous resources of a
services that satisfy functional requirements. Though semantic
WSMO description which have structural, semantic, or
matching of inputs and outputs are required, they are not
conceptual incompatibilities. They aim at automatically
sufficient for discovering relevant services. For example, two
handling interoperability problems between different WSMO
services can have the same input/output signature even if they
elements. A mediator declaration includes non-functional
perform entirely different functions. A simple mathematical
properties, imported ontologies, a source component, a target
service that performs the addition of two numbers taking the
component, and a mediation service. There exist four types of
numbers as input and producing the sum as output, will have
mediators:
the same semantic signature as that of another service that
• ontology mediators (ooMediators),
performs the subtraction of two numbers that are provided as
• goals mediators (goMediators), input and gives out their difference value as output. Hence
• Web service-to-goal mediators (woMediators) and matching the semantics of the service signature may result in
• Web service-to-web service mediators (wwMediators). high recall and low precision. As a step towards representing
the functionality of the service for better discovery and
An example of an ooMediators is given below. The selection, the Web services can be annotated with functional
mediator, called owlPersonMediator, imports the target semantics. This can be done by having an ontology called
ontology into the source ontology by resolving all the Functional Ontology in which each concept/class represents a
representation mismatches between the source and the target. well-defined functionality. The intended functionality of each
service can be represented as annotations using this ontology.
ooMediator
"http://example.org/owlPersonMediator"
Data Semantics. All the Web services begin with a set of
source
_"http://daml.umbc.edu/ontologies/ittalks/pers inputs and produce a set of outputs. These are represented in
on/" the signature of the operations in a specification file.
target However, the signature of an operation provides only the
_"http://example.org/tripReservationOntology"
syntactical and structural details of the input/output data.
usesService _"http://example.org/OWL2WSML"
These details (like data types, schema of a XML complex
type) are used for service invocation. To effectively perform
VI. SEMANTICS FOR WEB SERVICES discovery of services, the semantics of the input/output data
has to be taken into account. Hence, if the data involved in
When bringing semantics to Web services, several types of
Web service operation is annotated using an ontology, then
semantics can be considered (illustrated in Fig. 5): Functional
the added data semantics can be used in matching the
Semantics, Data Semantics, QoS Semantics, Execution
semantics of the input/output data of the Web service with the
Semantics, Domain Semantics, and Cultural Semantics. These
semantics of the input/output data of the requirements. The
different types of semantics can be used to represent the
semantic discovery algorithm proposed in [24] uses the
capabilities, requirements, effects and execution of a Web
semantics of the operational data.
service. In this section we describe the nature of Web services
and the need for a different kind of semantics for them.
QoS Semantics. New trading models, such as e-commerce,
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 16 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
require the specification of QoS metrics such as products or service in the registry can be a hit or a miss because UDDI
services to be delivered, deadlines, quality of products, and does not provide domain specific information to assist the
cost of service. In e-commerce and e-business, suppliers and search process.
customers define a binding agreement between the two One approach to enhancing discovery and selection
parties, specifying QoS constraints. The management of QoS algorithms, as well as the interoperability of Web services, is
metrics of semantic Web services directly impacts the success to use domain-specific semantics. Domain semantics are of
of organizations participating in e-commerce. After crucial importance since organizations have different needs,
discovering Web services whose semantics match the characteristics, vocabularies, contexts, standards, and
semantics of the requirements, the next step is to select the protocols. For example, a multinational organization has
most suitable service. Each service can have different quality obviously different needs compared to an organization that
aspects and hence, service selection involves locating the only has a regional base, and a financial organization has
service that provides the best quality criteria match. Service different requirements from a marketing organization [25].
selection is also an important activity in Web service Experience from business process management systems has
composition [21]. This demands management of QoS metrics shown that processes deployed for specific industries have
for Web services. Web services in different domains can have specific characteristics, vocabularies, and semantics.
different quality aspects. For organizations, being able to Numerous processes, deployed for specific domains, have
characterize Web processes based on QoS has several been studied and documented. Examples of specific domains
advantages: a) it allows organizations to translate their vision include bio-informatics [26], genomics [27], healthcare [28],
into their business processes more efficiently, since Web telecommunications [29], military [30], and school
processes can be designed according to QoS metrics, b) it administration [31]. In the future, we may expect to see
allows for the selection and execution of Web processes based industry-specific registries to store Web services with
on their QoS, to better fulfil customer expectations, c) it semantic domain information. Each Web service needs to
makes possible the monitoring of Web processes based on adhere to a semantic domain that establishes the terminology
QoS, and d) it allows for the evaluation of alternative for interacting with other Web services. The development and
strategies when Web process adaptation becomes necessary. exploration of semantic domains is a new concept and will
require extensive research, development, and integration with
Execution Semantics. The execution semantics of a Web actual Web service technologies.
service encompasses the ideas of message sequence,
conversation pattern of Web service execution, flow of Cultural semantics. E-commerce provides a worldwide set
actions, preconditions and effects of Web service invocation, of opportunities and challenges as the Internet economy and
etc. Some of these details may not be meant for sharing and globalization trends eliminate geographical boundaries. Web
some may, depending on the organization and the application services are more likely to succeed when adapted specifically
that is exposed as a Web service. In any case, the execution to the culture in which they are marketed. To make a Web
semantics of these services are not the same for all services service culture aware, it is necessary to develop international
and hence before executing or invoking a service, the cultural semantics and localized cultural semantics.
execution semantics or requirements of the service should be With international cultural semantics, a semantic Web
verified. service is modified and adapted to use an ontology which is
Some of the issues and solutions with regard to execution culturally independent. The objective is to design and
semantics are inherited from traditional workflow implement “culturally and technically” neutral Web services.
technologies. However, the globalization of Web services and Internationalization helps to decrease localization cost and
processes results in additional issues. In e-commerce, using speed up time-to-market by addressing crucial technical,
execution semantics can help in dynamically finding partners aesthetic, cultural, and linguistic issues. For example, if a Web
that will match not only the functional requirements, but also service manipulates numbers, date, time and currencies, it is
the operational requirements like long running interactions necessary to format them in a locale-independent manner.
and complex conversations. Also, a proper model for Internationalization allows semantic Web services to be
execution semantics will help in coordinating activities in subsequently adapted to various languages and regions
transactions that involve multiple parties. without engineering changes. The original independent
ontology is replaced with culture specific ontology.
Domain semantics. With the spread of the Web, on both Localization focuses on adapting details of a Web service to a
the public Internet and private Intranets, Web services will be specific locale. In order to create a product that appeals to the
owned and maintained by different organizations, distributed local culture, successful localization requires the deployment
all around the world. As we have seen, an obvious problem is of ontologies that must take into account region-specific
discovering a particular Web service that may be relevant to factors such as units of measurement (for example, length,
one’s interest. It is hard for users to find the exact service that area, volume, force, pressure), time zones, date formats,
they are looking for because of the large number of Web currencies, national holidays, icons, geographic examples,
service discovery mechanism returns. A search for a Web personal titles, and gender roles.
IJCS VOLUME 1 NUMBER 1 2006 ISSN 1306-4428 17 © 2006 IJCS
INTERNATIONAL JOURNAL OF COMPUTER SCIENCE VOLUME 1 NUMBER 1 2006 ISSN 1306-4428
VII. SEMANTIC WEB SERVICE LIFECYCLE syntactical and structural details of the input/output data.
To effectively perform operations such as the discovery of
The lifecycle of semantic Web services includes the
services, the semantics of the input/output data has to be taken
description/annotation, the advertisement, the discovery, the
into account. Hence, if the data involved in Web service
selection of Web services, the composition of Web services
operation is annotated using an ontology, then the added data
that make up Web processes, and the execution of Web
semantics can be used in matching the semantics of the
services. In this section, we discuss the characteristics of each
input/output data of the Web service with the semantics of the
of these stages.
input/output data of the requirements.
In order to fully harness the power of Web services, their
The Meteor-S Web Service Annotation Framework
functionality must be combined to create Web processes. Web
(MWSAF) [19] provides a framework and a tool to achieve
processes allow representing complex interactions among
automatic and semi-automatic annotation of web services