:::
如果您在 IdM 环境和 Active Directory (AD) 域之间建立了跨林信任，则在 IdM
客户端上检索 AD 用户信息时的信息流与检索 IdM
用户信息时的信息流非常相似，以及联系 AD 用户数据库的额外步骤。
下图是当用户使用 `getent passwd `{.literal}
命令请求 AD 用户信息时，信息流的简化。这个图并没有包括[使用 SSSD 检索
IdM
用户信息时的数据流](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#con_data-flow-when-retrieving-idm-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 SSSD 获取 IdM 用户信息时的数据流"){.link}中讨论的内部详细信息。它侧重于
IdM 客户端上的 SSSD 服务、IdM 服务器上的 SSSD 服务和 AD 域控制器上的
LDAP 数据库之间的通信。
[![A diagram with numbered arrows representing the flow of information
between an IdM client, an IdM server, and an AD Domain Controller. The
following numbered list describes each step in the
process.](images/169_RHEL_IdM_with_SSSD_0621-ad_user_info.png)]{.inlinemediaobject}
::: orderedlist
1.  IdM 客户端为 AD 用户信息查找其本地 SSSD 缓存。
2.  如果 IdM 客户端没有用户信息，或者信息是 stale，客户端上的 SSSD
    服务会联系 IdM 服务器上的 `extdom_extop`{.literal} 插件来执行 LDAP
    扩展操作并请求信息。
3.  IdM 服务器上的 SSSD 服务在其本地缓存中查找 AD 用户信息。
4.  如果 IdM 服务器在其 SSSD
    缓存中没有用户信息，或者其信息为过时，它将执行 LDAP 搜索，以从 AD
    域控制器请求用户信息。
5.  IdM 服务器上的 SSSD 服务从 AD 域控制器接收 AD
    用户信息，并将其存储在其缓存中。
6.  `extdom_extop`{.literal} 插件从 IdM 服务器上的 SSSD
    服务接收信息，该服务完成 LDAP 扩展操作。
7.  IdM 客户端上的 SSSD 服务从 LDAP 扩展操作接收 AD 用户信息。
8.  IdM 客户端将 AD 用户信息存储在其 SSSD
    缓存中，并将信息返回给请求它的应用程序。
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#con_data-flow-when-authenticating-as-a-user-with-sssd-in-idm_assembly_troubleshooting-authentication-with-sssd-in-idm}以 IdM 中的 SSSD 用户身份进行身份验证时的数据流 {.title}
:::
以 IdM 服务器或客户端中的用户身份进行身份验证涉及以下组件：
::: itemizedlist
-   启动身份验证请求的服务，如 sshd 服务。
-   可插拔验证模块 (PAM) 库及其模块。
-   SSSD 服务、其响应者和后端。
-   智能卡读取器（如果配置了智能卡验证）。
-   身份验证服务器：
    ::: itemizedlist
    -   IdM 用户通过 IdM Kerberos 密钥分发中心 (KDC) 进行身份验证。
    -   Active Directory (AD) 用户通过 AD 域控制器 (DC) 进行身份验证。
    :::
:::
下图是用户在尝试通过命令行上的 SSH
服务在本地登录主机期间需要进行身份验证时的简化信息流。
[![A diagram with numbered arrows representing the flow of information
between an IdM client and an IdM server or AD Domain Controller during
an authentication attempt. The following numbered list describes each
step in the
process.](images/169_RHEL_IdM_with_SSSD_0621-authentication.png)]{.inlinemediaobject}
::: orderedlist
1.  使用 `ssh`{.literal} 命令尝试身份验证会触发 `libpam`{.literal} 库。
2.  `libpam`{.literal} 库引用 `/etc/pam.d/`{.literal}
    目录中与请求身份验证尝试的服务对应的 PAM 文件。在本例中，libpam
    库涉及通过本地主机上的 SSH 服务进行身份验证，`libpam`{.literal}
    库检查 `/etc/pam.d/system-auth`{.literal} 配置文件并发现 SSSD PAM 的
    `pam_sss.so`{.literal} 条目：
    ``` literallayout
    auth    sufficient    pam_sss.so
    ```
3.  要确定哪些身份验证方法可用，`libpam`{.literal} 库会打开
    `pam_sss`{.literal} 模块，并将 `SSS_PAM_PREAUTH`{.literal}
    请求发送到 SSSD 服务的 `sssd_pam`{.literal} PAM 响应者。
4.  如果配置了智能卡验证，SSSD 服务会生成一个临时 `p11_child`{.literal}
    进程，以检查智能卡并从中检索证书。
5.  如果为用户配置了智能卡验证，`sssd_pam`{.literal}
    响应程序会尝试将智能卡中的证书与用户匹配。`sssd_pam`{.literal}
    响应器还搜索用户所属的组，因为组成员身份可能会影响访问控制。
6.  `sssd_pam`{.literal} 响应程序将 `SSS_PAM_PREAUTH`{.literal}
    请求发送到 `sssd_be`{.literal}
    后端响应程序，以查看服务器支持的身份验证方法，如密码或双因素身份验证。在
    IdM 环境中，SSSD 服务使用 IPA 响应器，默认的身份验证方法是
    Kerberos。在本例中，用户使用简单的 Kerberos 密码进行身份验证。
7.  `sssd_be`{.literal} 响应器生成一个临时 `krb5_child`{.literal} 进程。
8.  `krb5_child`{.literal} 进程联系 IdM 服务器上的
    KDC，并检查可用的身份验证方法。
9.  KDC 响应请求：
    ::: orderedlist
    1.  `krb5_child`{.literal} 进程评估回复，并将结果发回到
        `sssd_be`{.literal} 后端进程。
    2.  `sssd_be`{.literal} 后端进程会收到结果。
    3.  `sssd_pam`{.literal} 响应器会收到结果。
    4.  `pam_sss`{.literal} 模块会收到结果。
    :::
10. 如果为用户配置了密码身份验证，`pam_sss`{.literal}
    模块将提示用户输入其密码。如果配置了智能卡验证，`pam_sss`{.literal}
    模块会提示用户输入其智能卡 PIN。
11. 模块会发送带有用户名和密码的 `SSS_PAM_AUTHENTICATE`{.literal}
    请求，该请求经过以下操作：
    ::: orderedlist
    1.  `sssd_pam`{.literal} 响应器。
    2.  `sssd_be`{.literal} 后端进程。
    :::
12. `sssd_be`{.literal} 进程生成一个临时 `krb5_child`{.literal}
    进程来联系 KDC。
13. `krb5_child`{.literal} 进程尝试使用用户提供的用户名和密码从 KDC 检索
    Kerberos Ticket Granting Ticket (TGT)。
14. `krb5_child`{.literal} 进程接收身份验证尝试的结果。
15. `krb5_child`{.literal} 进程：
    ::: orderedlist
    1.  将 TGT 存储到凭据缓存中。
    2.  将身份验证结果返回到 `sssd_be`{.literal} 后端进程。
    :::
16. 身份验证结果从 `sssd_be`{.literal} 进程传输到：
    ::: orderedlist
    1.  `sssd_pam`{.literal} 响应器。
    2.  `pam_sss`{.literal} 模块。
    :::
17. `pam_sss`{.literal} 模块使用用户 TGT
    的位置设置环境变量，以便其他应用可以引用它。
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_narrowing-the-scope-of-authentication-issues_assembly_troubleshooting-authentication-with-sssd-in-idm}缩小身份验证问题的范围 {.title}
:::
要成功验证用户，您必须能够使用 SSSD
服务从存储用户信息的数据库检索用户信息。以下流程描述了测试身份验证流程的不同组件的步骤，以便您可以在用户无法登录时缩小身份验证问题的范围。
::: orderedlist
**流程**
1.  验证 SSSD 服务及其进程是否正在运行。
    ``` literallayout
    [root@client ~]# pstree -a | grep sssd
      |-sssd -i --logger=files
      |   |-sssd_be --domain implicit_files --uid 0 --gid 0 --logger=files
      |   |-sssd_be --domain example.com --uid 0 --gid 0 --logger=files
      |   |-sssd_ifp --uid 0 --gid 0 --logger=files
      |   |-sssd_nss --uid 0 --gid 0 --logger=files
      |   |-sssd_pac --uid 0 --gid 0 --logger=files
      |   |-sssd_pam --uid 0 --gid 0 --logger=files
      |   |-sssd_ssh --uid 0 --gid 0 --logger=files
      |   `-sssd_sudo --uid 0 --gid 0 --logger=files
      |-sssd_kcm --uid 0 --gid 0 --logger=files
    ```
2.  验证客户端可以通过 IP 地址联系用户数据库服务器。
    ``` literallayout
    [user@client ~]$ ping 
    ```
    如果此步骤失败，请检查您的网络和防火墙设置是否允许 IdM
    客户端和服务器之间进行直接通信。请参阅[使用和配置
    firewalld](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/using-and-configuring-firewalld_configuring-and-managing-networking){.link}。
3.  验证客户端可以通过完全限定的主机名发现并联系 IdM LDAP 服务器（适用于
    IdM 用户）或 AD 域控制器（ AD 用户）。
    ``` literallayout
    [user@client ~]$ dig -t SRV _ldap._tcp.example.com @
    [user@client ~]$ ping 
    ```
    如果此步骤失败，请检查您的 Dynamic Name Service (DNS) 设置，包括
    `/etc/resolv.conf`{.literal} 文件。请参阅[配置 DNS
    服务器顺序](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/configuring-the-order-of-dns-servers_configuring-and-managing-networking){.link}。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    默认情况下，SSSD 服务会尝试通过 DNS 服务 (SRV) 记录自动发现 LDAP
    服务器和 AD DC。另外，您可以通过在 `sssd.conf`{.literal}
    配置文件中设置以下选项，将 SSSD 服务限制为使用特定的服务器：
    ::: itemizedlist
    -   `ipa_server = `{.literal}
    -   `ad_server = `{.literal}
    -   `ldap_uri = `{.literal}
    :::
    如果使用这些选项，请验证您可以联系它们中列出的服务器。
    :::
4.  验证客户端是否可以对 LDAP 服务器进行身份验证，并使用
    `ldapsearch`{.literal} 命令检索用户信息。
    ::: orderedlist
    1.  如果您的 LDAP 服务器是 IdM 服务器，如
        `server.example.com`{.literal}，检索主机的 Kerberos
        票据，并使用主机 Kerberos 主体进行身份验证数据库搜索：
        ``` literallayout
        [user@client ~]$ kinit -t 'host/PI:EMAIL'
        [user@client ~]$ ldapsearch -LLL -Y GSSAPI -h server.example.com -b “dc=example,dc=com” uid=
        ```
    2.  如果您的 LDAP 服务器是 Active Directory (AD) 域控制器 (DC)，如
        `server.ad.example.com`{.literal}，请检索主机的 Kerberos
        票据，并使用主机 Kerberos 主体执行数据库搜索：
        ``` literallayout
        [user@client ~]$ kinit -t 'CLIENT$@AD.EXAMPLE.COM'
        [user@client ~]$ ldapsearch -LLL -Y GSSAPI -h server.ad.example.com -b “dc=example,dc=com” sAMAccountname=
        ```
    3.  如果您的 LDAP 服务器是普通 LDAP 服务器，且您在
        `sssd.conf`{.literal} 文件中设置了
        `ldap_default_bind_dn`{.literal} 和
        `ldap_default_authtok`{.literal} 选项，请验证是同一个
        `ldap_default_bind_dn`{.literal} 帐户：
        ``` literallayout
        [user@client ~]$ ldapsearch -xLLL -D "cn=ldap_default_bind_dn_value" -W -h ldapserver.example.com -b “dc=example,dc=com” uid=
        ```
    :::
    如果此步骤失败，请验证您的数据库设置是否允许您的主机搜索 LDAP
    服务器。
5.  由于 SSSD 服务使用 Kerberos 加密，因此请以无法登录的用户身份获得
    Kerberos 票据。
    ::: orderedlist
    1.  如果您的 LDAP 服务器是 IdM 服务器：
        ``` literallayout
        [user@client ~]$ kinit 
        ```
    2.  如果 LDAP 服务器数据库是 AD 服务器：
        ``` literallayout
        [user@client ~]$ kinit 
        ```
    :::
    如果此步骤失败，请验证您的 Kerberos
    服务器是否正常运行，所有服务器都已同步其时间，并且用户帐户未被锁定。
6.  验证您是否可以通过命令行检索用户信息。
    ``` literallayout
    [user@client ~]$ getent passwd 
    [user@client ~]$ id 
    ```
    如果此步骤失败，请验证客户端上的 SSSD
    服务是否可以从用户数据库接收信息。检查 `/var/log/messages`{.literal}
    日志文件中的错误。在 SSSD
    服务中启用详细日志记录，收集调试日志，并查看日志以指示问题来源。[*（可选）*]{.emphasis}创建一个红帽技术支持问题单，并提供您收集的故障排除信息。
7.  使用 `sssctl`{.literal} 实用程序验证允许用户登录。
    ``` literallayout
    [user@client ~]$ sssctl user-checks -a auth -s ssh 
    ```
    如果此步骤失败，请验证您的授权设置，如 PAM 配置、IdM HBAC 规则和 IdM
    RBAC 规则。检查 /var/log/secure 和 /var/log/messages
    日志文件中的授权错误。在 SSSD
    服务中启用详细日志记录，收集调试日志，并查看日志以指示问题来源。[*（可选）*]{.emphasis}创建一个红帽技术支持问题单，并提供您收集的故障排除信息。
:::
::: itemizedlist
**其它资源**
-   [在 sssd.conf 文件中为 SSSD
    启用详细日志记录](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_enabling-detailed-logging-for-sssd-in-the-sssdconf-file_assembly_troubleshooting-authentication-with-sssd-in-idm "在 sssd.conf 文件中为 SSSD 启用详细日志记录"){.link}
-   [使用 sssctl 命令为 SSSD
    启用详细的日志记录](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_enabling-detailed-logging-for-sssd-with-the-sssctl-command_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 sssctl 命令为 SSSD 启用详细的日志记录"){.link}
-   [从 SSSD 服务收集调试日志，对 IdM
    服务器的身份验证问题进行故障排除](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-server_assembly_troubleshooting-authentication-with-sssd-in-idm "从 SSSD 服务收集调试日志，对 IdM 服务器的身份验证问题进行故障排除"){.link}
-   [从 SSSD 服务收集调试日志，以对 IdM
    客户端的身份验证问题进行故障排除](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-client_assembly_troubleshooting-authentication-with-sssd-in-idm "从 SSSD 服务收集调试日志，以对 IdM 客户端的身份验证问题进行故障排除"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm}SSSD 日志文件和日志记录级别 {.title}
:::
每个 SSSD 服务登录到 /var/log/sssd/ 目录中自己的日志文件。对于
example.com IdM 域中的 IdM 服务器，其日志文件可能类似如下：
``` literallayout
[root@server ~]# ls -l /var/log/sssd/
total 620
-rw-------.  1 root root      0 Mar 29 09:21 krb5_child.log
-rw-------.  1 root root  14324 Mar 29 09:50 ldap_child.log
-rw-------.  1 root root 212870 Mar 29 09:50 sssd_example.com.log
-rw-------.  1 root root      0 Mar 29 09:21 sssd_ifp.log
-rw-------.  1 root root      0 Mar 29 09:21 sssd_implicit_files.log
-rw-------.  1 root root      0 Mar 29 09:21 sssd.log
-rw-------.  1 root root 219873 Mar 29 10:03 sssd_nss.log
-rw-------.  1 root root      0 Mar 29 09:21 sssd_pac.log
-rw-------.  1 root root  13105 Mar 29 09:21 sssd_pam.log
-rw-------.  1 root root   9390 Mar 29 09:21 sssd_ssh.log
-rw-------.  1 root root      0 Mar 29 09:21 sssd_sudo.log
```
::: section
::: titlepage
## []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#_sssd_log_file_purposes}SSSD 日志文件用途 {.title}
:::