clist(cid:2916)(cid:3167)(cid:3169). clist(cid:2916)(cid:3167)(cid:3169)  contains  all  the  comparable  frequencies  in   
set of a particular node.    Analogous to the ‘adjacency list’, 
is 
(8) 
(7) 
constitute a matrix: 
list, it must first satisfy:   
(cid:2272)  .  The  comparability  lists  of  all  the  natural  frequencies 
.
clist(cid:2916)(cid:3117)(cid:3118)
(cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)(cid:3404)(cid:1743)(cid:1742)(cid:1742)(cid:1742)(cid:1741)clist(cid:2916)(cid:3117)(cid:3117)
clist(cid:2916)(cid:3117)(cid:3174)
clist(cid:2916)(cid:3171)(cid:3174)(cid:1746)(cid:1745)(cid:1745)(cid:1745)(cid:1744)
.
clist(cid:2916)(cid:3118)(cid:3118)
clist(cid:2916)(cid:3118)(cid:3117)
clist(cid:2916)(cid:3118)(cid:3174)
.
.
.
.
.
clist(cid:2916)(cid:3171)(cid:3118)
clist(cid:2916)(cid:3171)(cid:3117)
For a frequency f(cid:2920)(cid:2928)  to be added into f(cid:2919)(cid:2921)’s comparability 
(cid:3627)f(cid:2920)(cid:2928)(cid:3398)f(cid:2919)(cid:2921)(cid:3627)
f(cid:2920)(cid:2928)(cid:3397)f(cid:2919)(cid:2921) (cid:3409)γ% 
where γ%  is a threshold defined by user. Depending on 
the measurement noise, γ    generally ranges from 5 to 15.   
the  error  bar.  The  ranges  defined  by f(cid:2919)(cid:2921)   and f(cid:2920)(cid:2928)   are 
(cid:4670)f(cid:2919)(cid:2921)(cid:3398)γ%·f(cid:2919)(cid:2921) ~f(cid:2919)(cid:2921)(cid:3397)γ%·f(cid:2919)(cid:2921)(cid:4671), (cid:4670)f(cid:2920)(cid:2928)(cid:3398)γ%·f(cid:2920)(cid:2928)~ f(cid:2920)(cid:2928)(cid:3397)γ%·f(cid:2920)(cid:2928)(cid:4671), 
There  are  some  additional  requirements  that f(cid:2920)(cid:2928)  must 
satisfy to be added into clist(cid:2916)(cid:3167)(cid:3169). First, since the comparability 
respectively.  If  these  two  ranges  overlap,  they  satisfy  the 
above equation.   
The equation above can be easily interpreted in terms of 
aims  to  match  natural  frequencies  of  different  sensors,  the 
comparability  list  of  a  natural  frequency  would  not  contain 
natural frequencies from the same sensor. Second, since we 
aim to establish a one-to-one mapping relationship between 
natural  frequencies  among  different  sensors,  frequencies  of 
the same sensor cannot be contained in the same list. Third, 
due to the same reason, the same natural frequency cannot be 
contained in  more  than one  comparability  lists of the  same 
node.    Here,  we  use  three  examples  in  Fig.  11  to  illustrate 
these requirements. Two sensors, S1 and S2, each having two 
natural frequency sets, (cid:1806)(cid:2869)(cid:2880)(cid:4668)f(cid:2869)(cid:2869),f(cid:2869)(cid:2870)(cid:4669), (cid:1806)(cid:2870)(cid:2880)(cid:4668)f(cid:2870)(cid:2869),f(cid:2870)(cid:2870)(cid:4669). Each natural 
frequency  is  represented  as  a  node  in  Fig.  11.  Two 
frequencies  are  connected  if  they  satisfy  Eq.(8).  The 
violations of the three additional requirements are illustrated 
in Fig. 11(a), (b) and (c), respectively, where red X indicates 
the illegal comparability.   
1
1f
2f
1
1f
2
2f
2
1
1f
2f
1
1f
2
2f
2
1
1f
2f
1
1f
2
2f
2
Figure 11 Three typical types of non-comparability 
To  summarize,  given (cid:2272)  and  the  current  comparability 
list of f(cid:2919)(cid:2921)  (denoted  as clist(cid:2916)(cid:3167)(cid:3169)),  a  frequency f(cid:2920)(cid:2928)  must  satisfy 
the following conditions to be added into clist(cid:2916)(cid:3167)(cid:3169): 
(cid:3627)f(cid:2920)(cid:2928)(cid:3398)f(cid:2919)(cid:2921)(cid:3627)
f(cid:2920)(cid:2928)(cid:3397)f(cid:2919)(cid:2921) (cid:3409)γ% 
j(cid:3405)i 
(cid:1482)f(cid:2920)(cid:2962)(β(cid:3405)r),f(cid:2920)(cid:2962)(cid:1489)clist(cid:2916)(cid:3167)(cid:3169) 
(cid:1482)clist(cid:2916)(cid:3167)ℓ(ℓ(cid:3405)k),f(cid:2920)(cid:2928)(cid:1489)clist(cid:2916)(cid:3167)ℓ 
The  pseudo  code  for  calculating (cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)  is  illustrated  in 
(9b)
(9c)
(9d)
(9a) 
Algorithm 1.   
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:42:12 UTC from IEEE Xplore.  Restrictions apply. 
431. 
2. 
3. 
4. 
                end 
Algorithm 1 
5. 
6. 
7. 
8. 
9. 
10.              end 
11.        end                                                                                     
Input: natural frequency sets in (cid:2272)   
Output: (cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930) 
for i =1, i<m, i++      %% for each row of   (cid:2272)   
    for k =1, k<=p, k++        %% for each f(cid:2919)(cid:2921) 
         clist(cid:2916)(cid:3167)(cid:3169)(cid:3404)(cid:1486) 
          for j=i+1, j<m, j++ %%    for each f(cid:2920) (j(cid:3405)i) 
                find f(cid:2920)(cid:2928)  in f(cid:2920)  which minimize 
(cid:3627)(cid:2916)(cid:3168)(cid:3176)(cid:2879)(cid:2916)(cid:3167)(cid:3169)(cid:3627)
                If this distance (cid:3409) γ% 
(cid:2916)(cid:3168)(cid:3176)(cid:2878)(cid:2916)(cid:3167)(cid:3169)                          
                    add the location of   f(cid:2920)(cid:2928)  into clist(cid:2916)(cid:3167)(cid:3169)                        
                    block   f(cid:2920)(cid:2928)  for the use by other frequencies in f(cid:2919) 
12.        Release the block of all the frequencies in f(cid:2919) 
After calculating (cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930), we evaluate the comparability of 
(cid:2280)(cid:2929)(cid:3404)(cid:4670)(cid:2280)(cid:2929)(cid:2869),(cid:2280)(cid:2929)(cid:2870),…,(cid:2280)(cid:2929)(cid:2923)(cid:4671) 
(cid:3404)(cid:4670)(cid:3533)(cid:4698)clist(cid:2916)(cid:3117)(cid:3169)(cid:4698)
,…(cid:3533)(cid:3627)clist(cid:2916)(cid:3171)(cid:3169)(cid:3627)
,(cid:3533)(cid:4698)clist(cid:2916)(cid:3118)(cid:3169)(cid:4698)
(cid:4671) 
(cid:2926)
(cid:2926)
(cid:2926)
(cid:2280)(cid:2929)(cid:2919)   is  the  comparability  evaluated  on  the  ith  sensor 
nodes. A significant smaller (cid:2280)(cid:2929)(cid:2919)  value in (cid:2280)(cid:2929)  indicates that 
(cid:2921)(cid:2880)(cid:2869)
(cid:2921)(cid:2880)(cid:2869)
(cid:2921)(cid:2880)(cid:2869)
(cid:2280)(cid:2929)   is  calculated,  we  calculate 
(denoted  as std((cid:2280)(cid:2929))).      Then  the  sensor  with  minimum 
value  in (cid:2280)(cid:2929)   will  be  deleted. (cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)   and (cid:2280)(cid:2929)   are  then 
until the newly obtained std((cid:2280)(cid:2929))  is smaller than a threshold.   
on  average,  natural  frequencies  of  sensor  i  have  low 
comparability  with  others  and  therefore,  this  sensor  has 
much  larger  chance  to  be  faulty.  We  delete  faulty  sensor 
node  one  by  one  in  an  iterative  manner.    Each  time  when 
its  standard  deviation 
each  sensor  node.  This  can  be  calculated  by  adding  the 
cardinalities of comparability lists of each sensor node:   
updated  using  the  remaining  nodes.  This  procedure  iterates 
13.    end                                             
(10) 
(11) 
list  for  each 
the  comparability 
We  use  an  example  to  illustrate  the  above  frequency 
matching  procedures  in  a  step by  step  manner.  Assume  we 
have  four  sensors  S1~S4,  each 
identifying  5  natural 
frequencies: 
4
(cid:2272)(cid:3404)(cid:3430)1
10
50
21
11
3.9
20
49
30
80(cid:3434) 
0.2 0.9
4
9.5 51
15
6
4
30
Assume  γ(cid:3404)15 , 
frequency in  (cid:2272)  can be obtained using Algorithm 1:   
(cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)(cid:3404)(cid:1743)(cid:1742)(cid:1742)(cid:1742)(cid:1741)
(cid:4668)f(cid:2870)(cid:2869),f(cid:2871)(cid:2871),f(cid:2872)(cid:2869)(cid:4669)
(cid:4668)f(cid:2870)(cid:2870);f(cid:2871)(cid:2872)(cid:4669)
(cid:4668)f(cid:2871)(cid:2870)(cid:4669)
(cid:4668)f(cid:2870)(cid:2871)(cid:4669)
(cid:4668)f(cid:2870)(cid:2873),f(cid:2871)(cid:2873)(cid:4669)
(cid:1746)(cid:1745)(cid:1745)(cid:1745)(cid:1744)
(cid:4668)f(cid:2869)(cid:2870),f(cid:2871)(cid:2871),f(cid:2872)(cid:2869)(cid:4669)
(cid:4668)f(cid:2869)(cid:2873),f(cid:2871)(cid:2873)(cid:4669)
(cid:4668)f(cid:2872)(cid:2872)(cid:4669)
(cid:4668)f(cid:2869)(cid:2871),f(cid:2871)(cid:2872)(cid:4669)
(cid:4668)f(cid:2872)(cid:2869);f(cid:2872)(cid:2871)(cid:4669)
(cid:4668)f(cid:2869)(cid:2869)(cid:4669)
(cid:4668)(cid:4669)
(cid:4668)f(cid:2869)(cid:2871),f(cid:2870)(cid:2870)(cid:4669)
(cid:4668)f(cid:2869)(cid:2870),f(cid:2870)(cid:2869),f(cid:2872)(cid:2869)(cid:4669)
(cid:4668)f(cid:2869)(cid:2873),f(cid:2870)(cid:2873)(cid:4669)
(cid:4668)f(cid:2869)(cid:2870),f(cid:2870)(cid:2869),f(cid:2871)(cid:2871)(cid:4669)
(cid:4668)(cid:4669)
(cid:4668)f(cid:2870)(cid:2871)(cid:4669)
(cid:4668)f(cid:2870)(cid:2872)(cid:4669)
(cid:4668)(cid:4669)
 (cid:2280)(cid:2929)  is calculated as   
(cid:2280)(cid:2929)(cid:3404)(cid:4670)9,10,8,5(cid:4671)(cid:4593) 
std((cid:2280)(cid:2929))(cid:3404)2.16 
Assume  we  require  that  the std((cid:2280)(cid:2929))  should be  smaller 
than 1. From Eq. (11a), S4 has a minimum value in (cid:2280)(cid:2929)  than 
The updated (cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)  is shown in Eq.(14)   
others and this indicates that the natural frequencies from S4 
is  the  most  incomparable  to  others.  S4  is  therefore  deleted. 
(13a)
(13b)
(12) 
(cid:4668)f(cid:2870)(cid:2873),f(cid:2871)(cid:2873)(cid:4669)
(cid:4668)f(cid:2869)(cid:2873),f(cid:2870)(cid:2873)(cid:4669)(cid:4687) 
(cid:4668)f(cid:2869)(cid:2873),f(cid:2871)(cid:2873)(cid:4669)
(cid:4668)f(cid:2870)(cid:2871)(cid:4669)
(cid:2272)(cid:2913)(cid:2922)(cid:2919)(cid:2929)(cid:2930)(cid:3404)(cid:4686) (cid:4668)f(cid:2871)(cid:2870)(cid:4669)
(cid:4668)f(cid:2870)(cid:2869),f(cid:2871)(cid:2871)(cid:4669)
(cid:4668)f(cid:2870)(cid:2870),f(cid:2871)(cid:2872)(cid:4669)
(cid:4668)f(cid:2869)(cid:2870),f(cid:2871)(cid:2871)(cid:4669)
(cid:4668)f(cid:2869)(cid:2871),f(cid:2871)(cid:2872)(cid:4669)
(cid:4668)(cid:4669)
(cid:4668)(cid:4669)
(cid:4668)(cid:4669)
(cid:4668)f(cid:2869)(cid:2869)(cid:4669)
(cid:4668)f(cid:2869)(cid:2871),f(cid:2870)(cid:2870)(cid:4669)
(cid:4668)f(cid:2869)(cid:2870),f(cid:2870)(cid:2869)(cid:4669)
The updated (cid:2280)(cid:2929)  becomes: 
(cid:2280)(cid:2929)(cid:3404)(cid:4670)8,7,7(cid:4671)(cid:4593) 
std((cid:2280)(cid:2929))(cid:3404)0.57 
Since std((cid:2280)(cid:2929))(cid:3407)1 ,  the  iteration  stops.  S4  has  been 
In practice, instead of setting a threshold for std((cid:2280)(cid:2929)), we 
whose removal will not significantly decrease the std((cid:2280)(cid:2929)). 
can  also  stop  the  iteration  by  identifying  the  sensor  node 
identified to be faulty sensor node. 
(15a)
(15b)
(14) 
We will illustrate this method in the next section. 
The  frequency  matching  strategy  can  be  used  to  detect 
faulty  sensor  nodes  since  faulty  sensor  nodes  have 
significantly lower comparability than the healthy ones. Also 
should be noted is that it is possible that the above procedure 
will delete some healthy sensor nodes which either identify 
large percentage of pseudo natural frequencies or omit many 
true  natural  frequencies.  However,  these  sensor  nodes  can 
still be regarded as faulty since data from them will decrease 
the  damage  detection  accuracy.  These  sensor  nodes  should 
be re-located or re-positioned.   
We give a brief description about how many number of 
faulty  nodes  can  be  correctly  detected  using  this  strategy. 
Theoretically  speaking,  for  a  cluster  of  sensor  nodes,  if  all 
natural  frequencies  are  the  same  for  healthy  nodes  but 
randomly distributed for faulty sensor nodes, the maximum 
number  of  faulty  sensor  nodes  that  can  be  identified  is  on 
average ns-2, where ns is the number of sensor nodes in this 
cluster. This indicates that on average, we can detect all the 
faulty  sensor  nodes  in  a  cluster  of  any  size  as  long  as  we 
have 2 healthy sensor nodes. Although the required number 
of  healthy  sensor  nodes  can  be  increased  in  practice,  the 
capability  of  detecting  faulty  sensor  nodes  of  the  proposed 
method is still significant.   
Also  should  be  noted  that  we  assume  that  CHs  are 
healthy  in  this  paper.  However,  in  a  sparse  network,  it  is 
possible  that  some  CHs  will also  give  faulty  readings.  One 
indication  of  the  presence  of  faulty  CHs  is  that  a  large 
number of sensor nodes are detected as faulty nodes.    Once 
this occurs, re-clustering using different CHs is necessary.     
D.  Structural Damage Detection   
After  faulty  sensor  nodes  have been detected,  structural 
damage  detection  is  implemented  using  the  measured  data 
from the remaining sensor nodes. 
In this paper, we adopted mode shape curvature method 
to  identify  structural  damage.  Given  a  mode  shape  vector, 
the  corresponding  mode  shape  curvature  are  calculated 
central  difference  approximation  [19].  The  mode  shape 
curvature has high sensitivity to damage and is able to detect 
structural  damage  even  without  using 
the  references 
identified when structure is healthy.   
One  issue  which  has  not  been  addressed  is  how  to 
calculate the mode shapes. Traditional, the identification of 
mode  shapes are centralized and  require  the aggregation of 
the  raw  data  from  all  the  deployed  sensor  nodes.  This 
centralized  approach  is  not  suitable  for  WSNs.  Remember 
that in section III.B, we designed a distributed method to find 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:42:12 UTC from IEEE Xplore.  Restrictions apply. 
44out  natural  frequency  set  for  each  sensor  node.    Here,  we 
can slightly modify the method and extract mode shapes for 
structural damage identification: after each sensor node in a 
cluster  calculating  the  CSD,  these  CSDs  are  transmitted  to 
the  CH.  The  CH  implements  the  eigen  realization  method 
(ERA)  [20]  to  calculate  mode  shapes  in  this  cluster.  Mode 
shapes  in  different  clusters  are  assembled  together  through 
the overlapping nodes. From the obtained mode shapes, the 
mode shape curvature is calculated. The maximum value of 
the mode shape curvature is the possible damage location. 
It can be seen that identification of mode shapes uses part 
of  the  procedures  when  identify  natural  frequencies.  The 
CSD  functions  which  were  to  be  used  for  sensor  fault 
detection  can  be  utilized  for  damage  detection.  Comparing 
with  methods  where  structural  damage  detection  are 
implemented from scratch after detecting faulty sensor nodes, 
the  cost  associated  with  sensor  fault  detection  in  this 
approach is relatively low.   