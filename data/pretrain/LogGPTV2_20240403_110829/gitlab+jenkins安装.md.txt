。。
0.Gitlab安装
1.安装和配置必要的依赖关系
在CentOS7，下面的命令将在系统防火墙打开HTTP和SSH访问。
systemctl enable sshd postfix
systemctl start sshd postfix
firewall-cmd \--permanent \--add-service=http
systemctl reload firewalld
2.添加gitlab包服务器安装包
curl -sS
https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh
\| sudo bash
yum install gitlab-ce
3.配置并启动
gitlab-ctl reconfigure #启动要蛮久
#  
# Jenkins安装
先安装java
\[root@fabric1 \~\]# yum -y install java #先确保安装java
\[root@fabric1 \~\]# ls
jenkins-2.138.2-1.1.noarch.rpm
\[root@fabric1 \~\]# rpm -ihv jenkins-2.138.2-1.1.noarch.rpm #包提前备好
![](media/image1.png){width="6.436805555555556in"
height="0.5416666666666666in"}
查看状态，默认端口为8080
![](media/image2.png){width="7.024305555555555in"
height="4.277083333333334in"}
![](media/image3.png){width="6.272222222222222in"
height="3.2395833333333335in"}
等待一段时间后输入密码继续
![](media/image4.png){width="7.260416666666667in"
height="4.006944444444445in"}
选择插件安装，建议的插件约20几个，等待其安装完成
![](media/image5.png){width="7.267361111111111in"
height="5.9319444444444445in"}
# Jenkins备份恢复：
安装 ThinBackup插件
![](media/image6.png){width="3.5131944444444443in"
height="1.9590277777777778in"}
配置 ThinBackup
![](media/image7.png){width="4.59375in" height="2.7618055555555556in"}
指定备份文件路径，设置所属组和所属主，
![](media/image8.png){width="7.257638888888889in" height="3.95in"}
恢复：
![](media/image9.png){width="7.261111111111111in"
height="2.0930555555555554in"}
![](media/image10.png){width="5.495138888888889in"
height="3.6527777777777777in"}
![](media/image11.png){width="6.853472222222222in"
height="6.530555555555556in"}
\[root@peer1 jenkins\]# systemctl restart jenkins #重启jenkins生效
Jenkins配置1：
![](media/image12.png){width="7.261111111111111in"
height="2.448611111111111in"}
# Jenkins 忘记admin密码拯救方法
打开安装jenkins的目录发现有一个users的文件夹，发现每一个用户里面就有一个以这个用户名命名的文件夹。打开我常用的那个用户名命名的文件夹，里面有一个config.xml文件，这应该就是用户的一些配置信息了吧。果然在config.xml文件里有用户基本信息。在某一处发现了
这段配置信息，这应该就是加密后的 密码了吧。
![IMG_256](media/image13.png){width="6.864583333333333in"
height="0.8333333333333334in"}
这个用户的密码是123456，那么我把这串加密后的密码复制到admin用户配置文件不就等于修改了admin的密码了。
123456加密后：
#jbcrypt:\$2a\$10\$MiIVR0rr/UhQBqT.bBq0QehTiQVqgNpUGyWW2nJObaVAM/2xSQdSq
修改 /users/admin/comfig.xml 文件后，保存重新启动Jenkins程序。
再以用户名admin 密码123456 成功登录。
此方法未实践成功待查
#  Jenkins管理：
\[root@test jenkins\]# whereis jenkins
jenkins: /usr/lib/jenkins
\[root@test jenkins\]# cd /usr/lib/jenkins/
\[root@test jenkins\]# ls
jenkins.war
启动方式: systemctl start jenkins
admin/123\*\*\*！
![](media/image14.png){width="3.1403893263342084in"
height="1.4642071303587052in"}
### 全局配置：
### 全局工具配置：
Maven的settings.xml文件：
![](media/image15.png){width="6.97240157480315in"
height="4.534722222222222in"}
### Jenkins仓库目录：
/home/Jenkins/workspace #每个项目都有有自己的文件目录，
![](media/image16.png){width="7.268055555555556in"
height="2.679309930008749in"}
### Jenkins构建工作：
1、开发将项目文件合并好到gitlab(192.168.10.245)服务器上,目录为：/var/opt/gitlab/git-data/repositories/chit,
![](media/image17.png){width="7.268055555555556in"
height="2.708138670166229in"}
2、Jenkins利用Maven的pom.xml文件中的命令将代码文件打包成jar包、重命名，放到jenkins服务器的仓库中
Jenkins仓库目录为：/home/Jenkins/workspace
![](media/image18.png){width="7.268055555555556in"
height="0.5535618985126859in"}
https://oapi.dingtalk.com/robot/send?access_token=77a701b016171a5b74185b478e779d8d0b677222be6e5f9534c1d4f3fa50bbcf
https://oapi.dingtalk.com/robot/send?access_token=77a701b016171a5b74185b478e779d8d0b677222be6e5f9534c1d4f3fa50bbcf
### Maven
maven的settings.xml文件：Jenkins在构建Maven项目时需要依靠该配置文件来执行Maven，其配置如下：
![](media/image19.png){width="7.268055555555556in"
height="2.6493471128608923in"}
![](media/image20.png){width="7.268055555555556in"
height="0.6206430446194225in"}
### 新项目中pom.xml文件路径：
以jsb为例
![](media/image21.png){width="7.268055555555556in"
height="1.168568460192476in"}
以kkzg为例
![](media/image22.png){width="7.268055555555556in"
height="0.3877537182852143in"}
在gitlab中也可以查看到pom.xml路径
以jsb为例，在jsb
![](media/image23.png){width="6.590445100612423in"
height="2.6891502624671917in"}
### 配置钉钉机器人通知：
https://im.dingtalk.com/
用网页登录，进入一个群（只能在其中一个群中），添加机器人。
![](media/image24.png){width="6.636169072615923in"
height="3.1037915573053367in"}
复制后粘贴的内容如下：
https://oapi.dingtalk.com/robot/send?access_token=77a701b016171a5b74185b478e779d8d0b677222be6e5f9534c1d4f3fa50bbcf
只需要access_token=
后面的字符串77a701b016171a5b74185b478e779d8d0b677222be6e5f9534c1d4f3fa50bbcf
将字符串复制粘贴到如下：![](media/image25.png){width="5.825529308836395in"
height="1.9985640857392826in"}
Jenkins使用权限
用户：Changhua IT
![](media/image26.png){width="7.268841863517061in"
height="1.3490573053368329in"}
![](media/image27.png){width="7.268055555555556in"
height="1.026314523184602in"}
![](media/image28.png){width="7.268055555555556in"
height="1.6469936570428696in"}
### Jenkins构建个分支的选择
（test-jsb为例）
![](media/image29.png){width="7.259722222222222in"
height="5.799305555555556in"}
# Jenkins远程构建方式
## 方式一：触发远程构建
![](media/image30.png){width="5.717361111111111in"
height="3.061111111111111in"}
![](media/image31.png){width="7.2625in" height="1.6222222222222222in"}
![](media/image32.png){width="5.749305555555556in"
height="4.204166666666667in"}
![](media/image33.png){width="7.2652777777777775in"
height="8.01736111111111in"}
# Jenkins单个项目与maven配置
以借宿宝测试为例
![](media/image34.png){width="5.768055555555556in"
height="4.67959864391951in"}
![](media/image35.png){width="5.768055555555556in"
height="2.7506419510061244in"}
![](media/image36.png){width="5.768055555555556in"
height="1.7390299650043743in"}
![](media/image37.png){width="5.768055555555556in"
height="1.7578412073490814in"}
![](media/image38.png){width="5.768055555555556in"
height="2.9057819335083113in"}
![](media/image39.png){width="5.768055555555556in"
height="3.352831364829396in"}
cd /usr/local/jsb/rest/
cp jsb-rest-1.0.0-SNAPSHOT.jar
/usr/local/jsb/jsbbak/jsb-rest-1.0.0-SNAPSHOT.jar\`date +%Y%m%d%H%M\`
cd /usr/local/jsb/web/
cp jsb-web-1.0.0-SNAPSHOT.jar
/usr/local/jsb/jsbbak/jsb-web-1.0.0-SNAPSHOT.jar\`date +%Y%m%d%H%M\`
以下是jenkins其中一个项目的配置截图：
![](media/image40.png){width="5.768055555555556in"
height="3.215216535433071in"}
![](media/image41.png){width="5.768055555555556in"
height="4.469846894138232in"}
构建前：
![](media/image42.png){width="5.768055555555556in"
height="5.3214315398075245in"}
cd /usr/local/jsb/rest/
cp jsb-rest-1.0.0-SNAPSHOT.jar
/usr/local/jsb/jsbbak/jsb-rest-1.0.0-SNAPSHOT.jar\`date +%Y%m%d%H%M\`
cd /usr/local/jsb/web/
cp jsb-web-1.0.0-SNAPSHOT.jar
/usr/local/jsb/jsbbak/jsb-web-1.0.0-SNAPSHOT.jar\`date +%Y%m%d%H%M\`
构建后
![](media/image43.png){width="5.768055555555556in"
height="5.679932195975503in"}
# 192.168.242全局配置记录
全局配置
![](media/image44.png){width="7.25625in" height="3.338888888888889in"}
![](media/image45.png){width="7.248611111111111in"
height="3.546527777777778in"}
![](media/image46.png){width="7.259722222222222in"
height="3.323611111111111in"}
![](media/image47.png){width="7.259722222222222in"
height="3.5277777777777777in"}
![](media/image48.png){width="7.259722222222222in"
height="3.826388888888889in"}
全局安全配置
![](media/image49.png){width="7.259722222222222in"
height="3.7847222222222223in"}
配置凭据
![](media/image50.png){width="7.259722222222222in" height="1.94375in"}
用户配置：
![](media/image51.png){width="7.264583333333333in"
height="1.3576388888888888in"}
![](media/image21.png){width="7.268055555555556in"
height="1.168568460192476in"}
![](media/image22.png){width="7.268055555555556in"
height="0.3877537182852143in"}