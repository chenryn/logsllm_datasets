### 前言
在前段时间，我对阅读官方文档一直持抵触态度，宁愿通过查看源代码来学习。然而，现在我意识到官方文档的重要性。之前，当我需要自定义动作时，我选择自己研究源码（如：https://b23.tv/NQuKiI），而实际上官方已经提供了详细的文档。

### 新版写法
在新版的文档中，我发现权限认证可以通过注解来实现。我在翻阅源码时注意到，在新版本（3.2.3）中，默认动作已加上了注解，并设置了所需的权限和描述。

### 权限认证漏洞
这让我开始担心是否有人忽略了设置权限或进行权限认证。更糟糕的是，如果他们已经发表了相关文章，并且这些文章已经被许多人参考并应用于实际项目中，后果将不堪设想。经过一番搜索，我发现确实有不少文章没有提及权限验证的内容，其中一篇文章甚至有18万的阅读量，包括知乎上的文章。

### 漏洞验证
幸运的是，Django 的设计要求以 POST 方式请求当前页面进行处理。参考：https://b23.tv/6ZRcEb 或者直接查看源码 \site-packages\django\contrib\admin\options.py: def response_action()。这种设计确保了只有具有职员/管理员身份的用户才能进入后台。为了验证这一点，我创建了一个新的用户并赋予其职员身份，但没有分配任何权限。结果，该用户虽然能够登录到管理站点，但由于没有任何权限，无法看到任何内容。由此可见，Django 的权限验证机制非常可靠。

接着，我为该用户添加了最基本的 view 权限，使其能够查看内容，但仅限于查看。此时，action 功能暴露出来并且可以使用。

### 危害
原本的设计是用户只能查看内容，但由于 action 开发不规范，用户可能越权执行本不应有的操作。尽管这种情况发生的条件较为苛刻，但如果职员账号使用弱密码，风险将大大增加。因此，如果你的站点也存在类似的职员账号，请务必检查 action 是否规范开发。