3.043
3
1
874.9
1034.5
861.7
1050.4
0.905
1.8
847.3
2124.5
895.1
2010.9
1.8
4
2
812
-2096.8
811.6
-2084.8
-1.692
2
830.9
-2735.4
830.1
-2709.4
-2.249
launch a successful safety attack. This is in contrast to the
example in Section IV-C, where the attacker could launch a
successful safety attack by compromising the measurements
of a single train only.
In summary, the above examples suggest that the global
monitoring and BDD can signiﬁcantly limit
the impact
of stealthy FDI attacks on the TPS even if the attacker
can compromise the measurements of multiple trains. To
accomplish a safety attack, the attacker needs to compromise
more trains compared with no BDD.
C. Secondary Attack Detection
In this section, we propose a novel secondary attack
detection (SAD) algorithm that can effectively detect the
onset of an FDI attack that has bypassed the BDD. SAD
requires that the trains’ position data communicated to the
TPS monitor is intact. It is feasible for the TPS monitor to
verify the integrity of the position data. For example, real-
world railway systems invariably provide multiple sources
of train position information including train-borne wheel
sensors, GPS, track-side Balise [29], etc. By cross-checking
position measurements from the multiple sources, we can
readily identify FDI attacks on the position data unless
the attacker succeeds in compromising all the data sources,
which is highly challenging. Such cross checks constitute
the PIV illustrated in Fig. 3. If FDI attacks on the position
data are identiﬁed, the TPS should immediately apply attack
mitigation approaches. Due to space limitation, the details
of attack mitigation are omitted in this paper and can be
found in [30].
The analysis in the previous sections is for a particular
time instant, and the attacker can use the techniques in
Sections IV and V-A to launch attacks continually over
time. Once the SAD detects an attack’s onset, the system
can activate the attack mitigation to render subsequent FDIs
ineffective. Thus, in this section, we focus on analyzing the
property of the system and designing the SAD accordingly
390
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:36:49 UTC from IEEE Xplore.  Restrictions apply. 
for the onset time instant only of an attack.
1) A Discrete Solution Property: The requirement of
intact position data and the design of the SAD algorithm
are based on a key observation as follows. If the attacker
can compromise the trains’ position data, the three equality
conditions Eqs. (5), (13), and (14) that the attacker must
obey form an underdetermined problem with 3N variables
and 2N equations. Since the other conditions that
the
attacker needs to follow (i.e., Eqs. (6) to (11), and (15))
are inequalities, the attacker’s problem of ﬁnding stealthy
FDI attack vectors most likely has inﬁnitely many solutions
that are continuous. However, if the trains’ position data is
intact, the three equality conditions Eqs. (5), (13), and (14)
with s(cid:4) replaced by the known s, will form a determined
problem with 2N variables and 2N equations. As a result,
the attacker’s problem most likely has a ﬁnite number of
discrete solutions2 and the attacker must choose one of them
that is different from the true measurement vector. The SAD
algorithm uses this discrete solution property to detect the
onset of a BDD-stealthy attack.
2) SAD Algorithm: Based on the discrete solution prop-
erty, we design the SAD algorithm as follows.
Algorithm 1 (Secondary Attack Detection Algorithm):
Inputs: Trains’ true positions s, possibly compromised
measurement vector ˜z, intact nodal voltage vector vpr at
the previous time instant
Output: Attack onset detection result
1. Using ˜z, compute Pi = ˜Vi
2. Solve the following constrained optimization problem
˜Ii, i ∈ Ntrains.
||va − vb||p
(16a)
J∗ = min
va(cid:6)=vb
s.t. Y(s)va = ca,
Y(s)vb = cb,
(16b)
(16c)
where ||x||p represents the p-norm of a vector x and
the kth element of cx ∈ R
VNL−vx[k]
Rs
Pk
vx[k] ,
N×1 is given by
if k ∈ Nsub;
,
if k ∈ Ntrains,
3. Extract(cid:11)v from(cid:11)z. If ||(cid:11)v− vpr||p ≤ J∗, report no attack;
where the label x is a or b.
cx[k] =
(cid:3)
(17)
Otherwise, report onset of attack.
In Step 1 of the algorithm, given the possibly compro-
mised measurement vector ˜z, the TPS monitor computes
the actual power absorption or injection of each train. This
follows from Eq. (4). Based on the trains’ true positions
s and powers, in Step 2, the TPS monitor solves the con-
strained optimization problem Eq. (16). The constraints in
2As the determined problem is non-linear, it could yield inﬁnitely many
solutions that are continuous. However, this is not the case for any of the
numerical examples and extensive simulations we conducted. Conﬁrmation
of the discrete solution property by rigorous analysis is left for future work.
391






















Fig. 4: Simulation setup. Sub - Substations, TS - Train stations, W - Trains
departing from the west, E - Trains departing from the east.
Eqs. (16b) and (16c) are compact representations of the BDD
bypass condition given by Eqs. (13) and (14), for two distinct
solutions va and vb. By the observation that
the BDD
bypass condition given the trains’ true positions has discrete
solutions, the J∗ given by Eq. (16) is the minimum distance
deﬁned in p-norm between any two distinct solutions.
In Step 3, the TPS monitor compares the J∗ with the
p-norm distance between the possibly compromised voltage
measurement vector and the intact nodal voltage vector vpr
at the previous time instant, to determine the possible onset
of an attack. This step is based on that, if the attacker
launches a BDD-stealthy attack without tampering with the
trains’ position information, the p-norm distance between
the compromised voltage vector and the voltage vector in
the absence of attack must be no less than J∗. As the
voltage vector in the absence of attack is unknown to the
TPS monitor, a practical approach is to use the vpr that is not
compromised before the onset of the attack. Since the TPS
monitor can run the SAD periodically and frequently (e.g.,
every second), the TPS state will not change signiﬁcantly
over one monitoring time interval. In Section VI, extensive
simulations demonstrate the effectiveness of this practical
approach by comparing it with an oracle approach that uses
the voltage vector at the present time instant in the absence
of attack in Step 3. If and when the onset of an attack is
detected, the TPS switches to an attack mitigation mode [30]
to prevent safety breaches.
VI. SIMULATIONS
Our analyses in the previous sections address a partic-
ular time instant only. In this section, we conduct time-
domain simulations with realistic running proﬁles of trains
to illustrate the impact of FDI attacks. We also show the
effectiveness of the BDD in reducing the impact of the
attacks, and that of the SAD in detecting those attacks that
are BDD-stealthy.
A. Simulation Settings and Methodology
As Fig. 4 illustrates, we simulate a TPS consisting of
four trains (labeled “W1”, “W2”, “E1”, and “E2”), four
substations (labeled “Sub1”,
. . . , “Sub4”), and six train
stations (labeled “TS1”, . . . , “TS6”). The parameters of the
TPS are identical to those in Table I. The positions of the
substations and the train stations are shown in Fig. 4. The
trains “W1” and “W2” start their journeys from “TS1” and
travel from west to east, whereas the trains “E1” and “E2”
start their journeys from “TS6” and travel from east to west.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:36:49 UTC from IEEE Xplore.  Restrictions apply. 
The trains “W1” and “E1” depart at time zero and the trains
“W2” and “E2” depart at the 170th second. At each of the
train stations, the trains stop for a duration of 20 seconds.
Each train follows the same speed proﬁle as shown in the
top part of Fig. 5. The second plot of Fig. 5 shows the trains’
positions over time. Each train switches between traction and
braking modes during the simulation, and its power demand
and regeneration capacity over time are shown in the bottom
plot of Fig. 5. This plot is derived based on mechanical
energy consumption of the train under the speciﬁed running
proﬁle, and with an efﬁciency ratio of 70% for the traction
mode [19] and 40% for the braking mode [31] of converting
kinetic energy into electrical energy. We simulate the TPS
for 800 seconds at a time granularity of one second.
To simulate attacks, the attacker injects an attack vector
computed using the methods given in Sections IV and V
every second. In the absence of BDD, the attacker compro-
mises the voltage and current measurements of all the train
nodes. In the presence of BDD, the attacker tampers with
the voltage and current measurements of all the train and
substation nodes as well as the position information of the
train nodes. The position information of substations cannot
be compromised since their locations are ﬁxed and known a
priori. The maximum errors that the attacker can introduce
to the voltage, current, and position measurements, as de-
scribed in Eqs. (10), (11), and (15), are set as ΔVi = 50 V,
ΔIi = 200 A, and Δsi = 500 m for i ∈ Na, unless
otherwise speciﬁed.
The simulations are carried out
in MATLAB. The
constrained optimization problems are solved using the
fmincon function of MATLAB with the MultiStart
algorithm. In the absence of attack, to compute the sys-
tem state, we use the fmincon with a constant objective
function and the electrical models and trains’ local control
laws presented in Section III as the constraints. We also use
the function to compute the safety attack vectors under the
heuristic approach and the optimal efﬁciency attack vectors.
If at any time instant, the fmincon function returns an
attack vector that is the same as the true system state, the
attacker does not launch an attack. Step 2 of the SAD
algorithm is also implemented using the fmincon function.
Although our analysis in this paper is general and appli-
cable to a TPS network of arbitrary size and topology, for
simulations, we consider a small-scale TPS in Fig. 4. The
rationale is two fold. First, the attacker may ﬁnd it difﬁcult
to coordinate his attacks on a large number of geographically
distributed trains. Computing resources may present another
barrier for large-scale attacks. A more credible scenario is
for the attacker to focus on one or a few trains in a TPS
section. Second, since real-world TPS networks are mostly
radial [16], the impact of a focused and localized attack will
not propagate over long distances. In view of these factors,
we use the small-scale TPS to represent well a TPS section
in a large system.
)
s
/
m
(
d
e
e
p
S
)
m
k
(
n
o
i
t
i
s
o
P
)
W
M
(
r
e
w
o
P
20
10
0
0
10
5
0
0
2
0
-2
0
W1
W2
E1
E2
100
200
300
400
Time (s)
500
600
700
800
100
200
300
400
Time (s)
500
600
700
800
100
200
300
500
600
700
800
Fig. 5: Train speed (top plot), position (middle plot), power demand and
regeneration capacity (bottom plot) over time. Power demand is negative
and regeneration capacity is positive.
400
Time (s)
Moreover, to simplify our simulations, we do not con-
sider overcurrent control. Speciﬁcally, we set the triggering
threshold V Tr
i,min to a low value, so that overcurrent control
will not be activated. As a result, the trains’ speed proﬁles
will not change because the trains need not curtail their
power consumption. Therefore, at any time instant, a train’s
power consumption equals its power demand during accel-
eration. Because of this simpliﬁcation, we do not simulate
attacks on tractioning trains, which would alter the trac-
tioning trains’ power consumption and change their running
proﬁles. Although we can simulate overcurrent control and
attacks on tractioning trains by extending our simulator to
admit changeable running proﬁles, the simulations reported
in this paper already provide interesting understanding and
insights into the impact of attacks and the effectiveness of
countermeasures.
B. Simulation Results
1) Efﬁciency Attacks: The ﬁrst set of simulations eval-
uates the impact of efﬁciency attacks on the TPS without
BDD. Fig. 6 shows the power absorbed/injected by the train
“E1” in the presence and absence of attacks. We can see
that the efﬁciency attacks induce the regenerating trains to
inject less power into the power network (e.g., from 302th
to 315th second for the train “E1”). To calculate the loss in
system efﬁciency, we ignore the time instants when all the
trains are in traction mode, since we do not simulate attacks
on the tractioning trains as discussed in Section VI-A. As a
result, the efﬁciency attacks cause a reduction of 28.3% in
the total energy adsorbed by the substations compared with
the case of no attacks, during the time periods when there
is at least one regenerating train under attack.
The second set of simulations evaluates the impact of
efﬁciency attacks on the TPS with BDD. Fig. 7 shows
the power absorbed/injected in the absence and presence
of attacks. Although the efﬁciency attack can still induce
the regenerating trains to inject less power to the power
network, it causes a reduction of 6.2% only in the total
energy adsorbed by the substations, during the time periods