---
**作者**: Nimisha Mukherjee  
**类别**: 观点  
**评论数据**: 无  
**统计信息**: 
- 评论数: 0
- 收藏次数: 0
- 点赞数: 0
- 分享次数: 0
- 浏览量: 5196
**日期**: 2020年11月12日 01:10:40  
**编辑推荐**: 否  
**摘要**: JavaScript 从最初用于美化网站的工具，逐渐发展成为一门严肃的编程语言。  
**来源链接**: <https://opensource.com/article/20/10/history-javascript>  
**文章ID**: 12813  
**是否为LCTT翻译**: 是  
**大图链接**: /data/attachment/album/202011/12/010945vezib4p1b1ti6pjt.jpg  
**永久链接**: /article-12813-1.html  
**图片链接**: /data/attachment/album/202011/12/010945vezib4p1b1ti6pjt.jpg.thumb.jpg  
**相关文章**:
- 排序: 0
- 文章ID: 12830
**审稿人**: wxy  
**选择者**: lujun9972  
**总结**: JavaScript 从最初用于美化网站的工具，逐渐发展成为一门严肃的编程语言。  
**标签**:
- JavaScript
**缩略图显示**: 否  
**标题**: JavaScript 如何成为一门严肃的编程语言  
**标题图片显示**: 是  
**翻译者**: wxy  
**更新时间**: 2020年11月12日 01:10:40
---

> 从最开始作为一种使网站变得漂亮的方式，JavaScript 已转变为一种严肃的编程语言。

![](/data/attachment/album/202011/12/010945vezib4p1b1ti6pjt.jpg)

JavaScript 的起源可以追溯到1995年，当时在Netscape通信公司工作的Brendan Eich仅用了短短10天就创建了这门语言。自那时起，JavaScript经历了漫长的发展历程，从一个简单的网站美化工具演变成了一种严肃的编程语言。

在早期阶段，JavaScript被认为是一种视觉工具，它使网站变得更加有趣和吸引人。像Jakarta Server Pages（即JSP，以前称为JavaServer Pages）这样的语言被用来处理网页渲染的繁重工作，而JavaScript则主要用于创建基本的交互、视觉增强和动画效果。

长期以来，HTML、CSS和JavaScript之间的界限并不清晰。前端开发主要由这三个部分组成，形成了标准Web技术的“多层蛋糕”。

![](data/attachment/album/202011/12/011044zaggygpwldcynwfa.png "标准 Web 技术的多层蛋糕")
*标准网络技术的“[多层蛋糕](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript)”（Mozilla 开发者网络，[CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)）*

HTML和CSS提供了内容的结构、格式和样式。当网页需要超越静态内容展示时，JavaScript便派上了用场。Ecma国际组织制定了JavaScript规范，而万维网联盟（W3C）则负责HTML和CSS的规范制定。

### JavaScript是如何获得突出地位的

JavaScript之所以成为[最受欢迎的](https://octoverse.github.com/)编程语言之一，其背后有一段漫长的历史。在20世纪90年代，Java是主流语言，JavaScript不可避免地与之进行了比较。许多工程师认为JavaScript不是一门好的编程语言，因为它缺乏面向对象编程的支持。然而，尽管这一点在当时并不明显，但其实JavaScript的对象模型和功能特性在其第一个版本中就已经存在了。

1995年JavaScript匆忙发布后，Netscape将其提交给欧洲计算机制造商协会（ECMA）进行标准化。由此产生了[ECMAScript](https://en.wikipedia.org/wiki/ECMAScript)，这是一个旨在确保不同Web浏览器之间网页互操作性的JavaScript标准。ECMAScript 1于1997年6月问世，帮助推动了JavaScript的标准化进程。

在此期间，PHP和JSP成为了服务器端编程语言的流行选择。JSP作为通用网关接口（CGI）的首选替代方案获得了显著的地位，因为它可以在HTML中嵌入Java代码。虽然JSP很受欢迎，但开发人员发现将Java代码嵌入HTML中并不自然。此外，即使是HTML上的简单文本变化，JSP也需要经历一个耗时的生命周期。在当今的微服务世界中，基于JSP的页面被视为技术债务。

[PHP](https://en.wikipedia.org/wiki/PHP#:~:text=PHP%20development%20began%20in%201994,Interpreter%22%20or%20PHP%2FFI.)的工作原理类似于JSP，但PHP代码以一个通用网关接口（CGI）可执行文件来处理。基于PHP的Web应用比基于JSP的应用更容易部署。总体而言，使用PHP更加容易上手和运行。今天，PHP和JavaScript是创建动态网站最流行的组合之一：PHP作为服务器端脚本，JavaScript作为客户端脚本。

随着2006年[jQuery](https://en.wikipedia.org/wiki/JQuery)的发布，JavaScript的应用范围进一步扩大。jQuery是一个多用途的JavaScript库，简化了繁琐的文档对象模型（DOM）管理、事件处理和[Ajax](https://en.wikipedia.org/wiki/Ajax_(programming))。

2009年[Node.js](https://en.wikipedia.org/wiki/Node.js)的发布是JavaScript发展的转折点。开发者现在可以用JavaScript编写服务器端脚本。随后，2010年发布了[Backbone.js](https://en.wikipedia.org/wiki/Backbone.js)和[AngularJS](https://en.wikipedia.org/wiki/AngularJS)等框架。这导致了使用单一语言进行全栈开发的概念的出现。

2015年，Ecma国际组织发布了ECMAScript 6（ES6），它为编写复杂应用程序增加了重要的新语法，包括类声明。其他新特性还包括迭代器、箭头函数表达式、`let` 和 `const` 关键字、类型化数组、新的集合（映射、集合和WeakMap）、Promise、字符串模板字面量以及其他许多酷炫的功能。后续版本继续添加了更多功能，使JavaScript变得更加强大、精简和可靠。

### 总结

在过去20年里，JavaScript取得了巨大的进步。如今大多数浏览器都在争相满足合规性，因此最新的规范推出得更快。

根据项目需求，有大量稳定的JavaScript框架可供选择，包括最流行的[React](https://reactjs.org/)、[Angular](https://angular.io/)和[Vue.js](https://vuejs.org/)等。在本系列的下一篇文章中，我将深入探讨为什么JavaScript如此受欢迎。

---
**原文作者**: [Nimisha Mukherjee](https://opensource.com/users/nimisha)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**译者**: [wxy](https://github.com/wxy)  
**校对**: [wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。
---