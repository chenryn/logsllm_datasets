alarmTable
alarmTable in the RMON MIB allows you to monitor and poll the following:
• alarmIndex—The index value for alarmTable that identifies a specific entry.
• alarmInterval—The interval, in seconds, over which data is sampled and compared with the rising and
falling thresholds.
• alarmVariable—The MIB variable that is monitored by the alarm entry.
• alarmSampleType—The method of sampling the selected variable and calculating the value to be
compared against the thresholds.
• alarmValue—The value of the variable during the last sampling period. This value is compared with the
rising and falling thresholds.
• alarmStartupAlarm—The alarm sent when the entry is first activated.
• alarmRisingThreshold—The upper threshold for the sampled variable.
• alarmFallingThreshold—The lower threshold for the sampled variable.
• alarmRisingEventIndex—The eventTable entry used when a rising threshold is crossed.
• alarmFallingEventIndex—The eventTable entry used when a falling threshold is crossed.
• alarmStatus—Method for adding and removing entries from the table. It can also be used to change the
state of an entry to allow modifications.
NOTE: If this object is not set to valid, the associated event alarm does not take any action.
jnxRmonAlarmTable
The jnxRmonAlarmTable is a Juniper Networks enterprise-specific extension to alarmTable. It provides
additional operational information and includes the following objects:
• jnxRmonAlarmGetFailCnt—The number of times the internal Get request for the variable monitored by this
entry has failed.
• jnxRmonAlarmGetFailTime—The value of sysUpTime when an internal Get request for the variable monitored
by this entry last failed.
• jnxRmonAlarmGetFailReason—The reason an internal Get request for the variable monitored by this entry
last failed.
690
• jnxRmonAlarmGetOkTime—The value of sysUpTime when an internal Get request for the variable monitored by
this entry succeeded and the entry left the getFailure state.
• jnxRmonAlarmState—The current state of this RMON alarm entry.
To view the Juniper Networks enterprise-specific extensions to the RMON Events and Alarms and Event
MIB, see https://www.juniper.net/documentation/en_US/junos16.1/topics/reference/mibs/mib-jnx-
rmon.txt.
RMON Events
An RMON event allows you to log the crossing of thresholds of other MIB objects. It is defined in
eventTable for the RMON MIB.
This section covers the following topics:
eventTable
eventTable contains the following objects:
• eventIndex—An index that uniquely identifies an entry in eventTable. Each entry defines one event that
is generated when the appropriate conditions occur.
• eventDescription—A comment describing the event entry.
• eventType—Type of notification that the probe makes about this event.
• eventCommunity—Trap group used if an SNMP trap is to be sent. If eventCommunity is not configured, a trap
is sent to each trap group configured with the rmon-alarm category.
• eventLastTimeSent—Value of sysUpTime when this event entry last generated an event.
• eventOwner—Any text string specified by the creating management application or the command-line
interface (CLI). Typically, it is used to identify a network manager (or application) and can be used for
fine access control between participating management applications.
• eventStatus—Status of this event entry.
NOTE: If this object is not set to valid, no action is taken by the associated event entry. When
this object is set to valid, all previous log entries associated with this entry (if any) are deleted.
691
Alarm Thresholds and Events
By setting a rising and a falling threshold for a monitored variable, you can be alerted whenever the
value of the variable falls outside the allowable operational range (see Figure 24 on page 691).
Figure 24: Setting Thresholds
Events are only generated when the alarm threshold is first crossed in any one direction rather than
after each sample interval. For example, if a rising threshold alarm, along with its corresponding event, is
raised, no more threshold crossing events occur until a corresponding falling alarm occurs. This
considerably reduces the quantity of events that are produced by the system, making it easier for
operations staff to react when events do occur.
Before you configure remote monitoring, you should identify what variables need to be monitored and
their allowable operational range. This requires some period of baselining to determine the allowable
operational ranges. An initial baseline period of at least 3 months is not unusual when you first identify
the operational ranges and define thresholds, but baseline monitoring should continue over the life span
of each monitored variable.
SEE ALSO
Juniper Networks Enterprise-Specific MIBs
692
RMON Alarms and Events Configuration
Junos OS supports monitoring routers from remote devices. These values are measured against
thresholds and trigger events when the thresholds are crossed. You configure remote monitoring
(RMON) alarm and event entries to monitor the value of a MIB object.
To configure RMON alarm and event entries, you include statements at the [edit snmp] hierarchy level of
the configuration:
[edit snmp]
rmon {
alarm index {
description text-description;
falling-event-index index;
falling-threshold integer;
falling-threshold-interval seconds;
interval seconds;
rising-event-index index;
rising-threshold integer;
request-type (get-next-request | get-request | walk-request);
sample-type (absolute-value | delta-value);
startup-alarm (falling-alarm | rising-alarm | rising-or-falling-alarm);
syslog-subtag syslog-subtag;
variable oid-variable;
}
event index {
community community-name;
description description;
type type;
}
}
Configure RMON Alarms and Events
IN THIS SECTION
Configure SNMP | 693
693
Configure an Event | 694
Configure an Alarm | 695
The Junos OS supports the Remote Network Monitoring (RMON) MIB (RFC 2819). This allows a
management device to monitor the values of MIB objects, or variables, against configured thresholds.
When the value of a variable crosses a threshold, an alarm and its corresponding event are generated.
The event can be logged and can generate an SNMP trap.
To configure RMON alarms and events using the CLI, perform these tasks:
Configure SNMP
To configure SNMP:
1. Grant read-only access to all SNMP clients:
[edit snmp]
user@switch# set community community-name authorization authorization
For example:
[edit snmp]
user@switch# set community public authorization read-only
2. Grant read-write access to the RMON and jnx-rmon MIBs:
[edit snmp]
user@switch# set view view-name oid object-identifier include
user@switch# set view view-name oid object-identifier include
user@switch# set community community-name authorization authorization view view-name
For example:
[edit snmp]
user@switch# set view rmon-mib-view oid .1.3.6.1.2.1.16 include
user@switch# set view rmon-mib-view oid .1.3.6.1.4.1.2636.13 include
user@switch# set community private authorization read-write view rmon-mib-view
694
OIDs 1.3.6.1.2.1.16 and 1.3.6.1.4.1.2636.13 correspond to the RMON and jnxRmon MIBs.
3. Configure an SNMP trap group:
[edit snmp]
user@switch# set trap-group group-name categories category
user@switch# set trap-group group-name targets address
For example:
[edit snmp]
user@switch# set trap-group rmon-trap-group categories rmon-alarm
user@switch# set trap-group rmon-trap-group targets 192.168.5.5
The trap group rmon-trap-group is configured to send RMON traps to 192.168.5.5.
Configure an Event
To configure an event:
1. Configure an event index, community name, and type:
[edit snmp rmon]
user@switch# set event index community community-name typetype
For example:
[edit snmp rmon]
user@switch# set event 1 community rmon-trap-group type log-and-trap
The event community corresponds to the SNMP trap group and is not the same as an SNMP
community. This event generates an SNMP trap and adds an entry to the logTable in the RMON MIB.
2. Configure a description for the event:
[edit snmp rmon]
user@switch# set event index description description
695
For example:
[edit snmp rmon]
user@switch# set event 1 description “rmon event”
Configure an Alarm
To configure an alarm:
1. Configure an alarm index, the variable to monitor, the rising and falling thresholds, and the
corresponding rising and falling events:
[edit snmp rmon]
user@switch# set alarm index variable oid-variable falling-threshold integer rising-
threshold integer rising-event-index index falling-event-index index
For example:
[edit snmp rmon]
user@switch# set alarm 5 variable .1.3.6.1.4.1.2636.3.1.13.1.8.9.1.0.0 falling-threshold 75
rising-threshold 90 rising-event-index 1 falling-event-index 1
The variable .1.3.6.1.4.1.2636.3.1.13.1.8.9.1.0.0 corresponds to the jnxRmon MIB object
jnxOperatingCPU, which represents the CPU utilization of the Routing Engine. The falling and rising
threshold integers are 75 and 90. The rising and falling events both generate the same event (event
index 1).
2. Configure the sample interval and type and the alarm type:
[edit snmp rmon]
user@switch# set alarm index interval seconds sample-type (absolute-value | delta-value)
startup-alarm (falling-alarm | rising-alarm | rising-or-falling-alarm)
For example:
[edit snmp rmon]
user@switch# set alarm 5 interval 30 sample-type absolute-value startup-alarm rising-or-
falling-alarm
696
The absolute value of the monitored variable is sampled every 30 seconds. The initial alarm can occur
because of rising above the rising threshold or falling below the falling threshold.
Monitor RMON MIB Tables
IN THIS SECTION
Purpose | 696
Action | 696
Meaning | 697
Purpose
Monitor remote monitoring (RMON) alarm, event, and log tables.
Action
To display the RMON tables:
user@switch> show snmp rmon
Alarm
Index Variable description Value State
5 monitor
jnxOperatingCPU.9.1.0.0 5 falling threshold
Event
Index Type Last Event
1 log and trap 2010-07-10 11:34:17 PDT
Event Index: 1
Description: Event 1 triggered by Alarm 5, rising threshold (90) crossed, (variable:
jnxOperatingCPU.9.1.0.0, value: 100)
Time: 2010-07-10 11:34:07 PDT
Description: Event 1 triggered by Alarm 5, falling threshold (75) crossed, (variable:
697
jnxOperatingCPU.9.1.0.0, value: 5)
Time: 2010-07-10 11:34:17 PDT
Meaning
The display shows that an alarm has been defined to monitor jnxRmon MIB object jnxOperatingCPU,
which represents the CPU utilization of the Routing Engine. The alarm is configured to generate an
event that sends an SNMP trap and adds an entry to the logTable in the RMON MIB. The log table
shows that two occurrences of the event have been generated—one for rising above a threshold of 90
percent, and one for falling below a threshold of 75 percent.
SEE ALSO
Configuring RMON Alarms and Events
show snmp rmon
show snmp rmon history
clear snmp statistics
clear snmp history
RMON MIB Event, Alarm, Log, and History Control Tables
Table 59 on page 697 provides each field in the RMON eventTable, the description of the field, and the
corresponding Junos OS statement that you can use to configure the field. The Junos OS statements
reside at the [edit snmp rmon] hierarchy level.
Table 59: RMON Event Table
Field Description Statement [edit snmp
rmon]
eventDescription Text description of this event. description
eventType Type of event (for example, log, trap, or log and trap). type
698
Table 59: RMON Event Table (Continued)
Field Description Statement [edit snmp
rmon]
eventCommunity Trap group to which to send this event, as defined in the community
Junos OS configuration. (This is not the same as the SNMP
community.)
eventOwner Entity (for example, manager) that created this event. —
eventStatus Status of this row (for example, valid, invalid, or —
createRequest).
Table 60 on page 698 provides each field in the RMON alarmTable, the description of the field, and the
corresponding Junos OS statement that you can use to configure the field. The Junos OS statements
reside at the [edit snmp rmon] hierarchy level.
Table 60: RMON Alarm Table
Field Description Statement [edit snmp
rmon]
alarmStatus Status of this row (for example, valid, invalid, or —
createRequest)
alarmInterval Sampling period (in seconds) of the monitored variable interval
alarmVariable Object identifier (OID) and instance of the variable to be —
monitored
alarmValue Actual value of the sampled variable —
alarmSampleType Sample type (absolute or delta changes) sample-type
alarmStartupAlarm Initial alarm (rising, falling, or either) startup-alarm
699
Table 60: RMON Alarm Table (Continued)
Field Description Statement [edit snmp
rmon]
alarmRisingThreshold Rising threshold against which to compare the value rising-threshold
alarmFallingThreshold Falling threshold against which to compare the value falling-threshold
alarmRisingEventIndex Index (row) of the rising event in the event table rising-event-index
alarmFallingEventIndex Index (row) of the falling event in the event table falling-event-index
Table 61 on page 699 provides each field in the jnxRmon jnxRmonAlarmTable, which is an extension to
the RMON alarmTable. You can troubleshoot the RMON agent, rmopd, that runs on a switch by
inspecting the contents of the jnxRmonAlarmTable object.
Table 61: jnxRmon Alarm Table
Field Description
jnxRmonAlarmGetFailCnt Number of times the internal Get request for the variable failed
jnxRmonAlarmGetFailTime Value of the sysUpTime object when the last failure occurred
jnxRmonAlarmGetFailReason Reason why the Get request failed
jnxRmonAlarmGetOkTime Value of the sysUpTime object when the variable moved out of failure state
jnxRmonAlarmState Status of this alarm entry
Table 62 on page 700 provides each field in the RMON historyControlTable, the description of the
field, and the corresponding Junos OS statement that you can use to configure the field. The Junos OS
statements reside at the [edit snmp rmon history] hierarchy level. The historyControlTable controls the
RMON etherHistoryTable.
700
Table 62: RMON History Control Table
Field Description Statement [edit snmp
rmon history]
historyControlDataSour Identifies the source of the data for which historical data was interface
ce collected.
historyControlBucketsR Requested number of discrete time intervals over which data bucket-size
equested is to be saved.
historyControlBucketsG Number of discrete sampling intervals over which data is to —
ranted be saved.
historyControlInterval Interval, in seconds, over which the data is sampled for each interval
bucket.
historyControlOwner Entity that configured this entry. owner
historyControlStatus Status of this entry. —
Minimum RMON Alarm and Event Entry Configuration
To enable RMON on the router, you must configure an alarm entry and an event entry. To do this,
include the following statements at the [edit snmp rmon] hierarchy level:
[edit snmp rmon]
alarm index {
rising-event-index index;
rising-threshold integer;
sample-type type;
variable oid-variable;
}
event index;
701
Configure an RMON Alarm Entry and Its Attributes
IN THIS SECTION
Configure the Alarm Entry | 701
Configure the Description | 702
Configure the Falling Event Index or Rising Event Index | 702
Configure the Falling Threshold or Rising Threshold | 702
Configure the Interval | 703
Configure the Falling Threshold Interval | 703
Configure the Request Type | 704
Configure the Sample Type | 704
Configure the Startup Alarm | 705
Configure the System Log Tag | 705
Configure the Variable | 705
An alarm entry monitors the value of a MIB variable. You can configure how often the value is sampled,
the type of sampling to perform, and what event to trigger if a threshold is crossed.
This section discusses the following topics:
Configure the Alarm Entry
An alarm entry monitors the value of a MIB variable. The rising-event-index, rising-threshold, sample-type,
and variable statements are mandatory. All other statements are optional.
To configure the alarm entry, include the alarm statement and specify an index at the [edit snmp rmon]
hierarchy level:
[edit snmp rmon]
alarm index {
description description;
falling-event-index index;
falling-threshold integer;
falling-threshold-interval seconds;
interval seconds;
rising-event-index index;
702
rising-threshold integer;
sample-type (absolute-value | delta-value);
startup-alarm (falling-alarm | rising alarm | rising-or-falling-alarm);
variable oid-variable;
}
index is an integer that identifies an alarm or event entry.
Configure the Description
The description is a text string that identifies the alarm entry.
To configure the description, include the description statement and a description of the alarm entry at the
[edit snmp rmon alarm index] hierarchy level:
[edit snmp rmon alarm index]
description description;
Configure the Falling Event Index or Rising Event Index
The falling event index identifies the event entry that is triggered when a falling threshold is crossed.
The rising event index identifies the event entry that is triggered when a rising threshold is crossed.
To configure the falling event index or rising event index, include the falling-event-index or rising-event-
index statement and specify an index at the [edit snmp rmon alarm index] hierarchy level:
[edit snmp rmon alarm index]
falling-event-index index;
rising-event-index index;
index can be from 0 through 65,535. The default for both the falling and rising event index is 0.
Configure the Falling Threshold or Rising Threshold
The falling threshold is the lower threshold for the monitored variable. When the current sampled value
is less than or equal to this threshold, and the value at the last sampling interval is greater than this
threshold, a single event is generated. A single event is also generated if the first sample after this entry
becomes valid is less than or equal to this threshold, and the associated startup alarm is equal to falling-
alarm or rising-or-falling-alarm. After a falling event is generated, another falling event cannot be
generated until the sampled value rises above this threshold and reaches the rising threshold. You must
specify the falling threshold as an integer. Its default is 20 percent less than the rising threshold.
703
By default, the rising threshold is 0. The rising threshold is the upper threshold for the monitored
variable. When the current sampled value is greater than or equal to this threshold, and the value at the
last sampling interval is less than this threshold, a single event is generated. A single event is also
generated if the first sample after this entry becomes valid is greater than or equal to this threshold, and
the associated startup-alarm is equal to rising-alarm or rising-or-falling-alarm. After a rising event is
generated, another rising event cannot be generated until the sampled value falls below this threshold
and reaches the falling threshold. You must specify the rising threshold as an integer.