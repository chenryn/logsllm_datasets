    ``` literallayout
    # yum install perf
    ```
2.  使用 `perf kvm stat`{.literal} 命令之一显示您的虚拟化主机的 perf
    统计信息：
    ::: itemizedlist
    -   若要实时监控管理程序，请使用 `perf kvmstat live`{.literal}
        命令。
    -   若要在一段时间内记录管理程序的 perf 数据，请使用
        `perf kvm stat 记录`{.literal}
        命令激活日志记录。命令被取消或中断后，数据保存在
        `perf.data.guest`{.literal} 文件中，可以使用
        `perf kvm stat 报告`{.literal} 命令进行分析。
    :::
3.  分析 `VM-EXIT`{.literal} 事件类型及其分发的 `perf`{.literal}
    输出。例如，`PAUSE_INSTRUCTION`{.literal}
    事件应当不常发生，但在以下输出中，此事件的频繁发生表明主机 CPU
    无法正常处理正在运行的
    vCPU。在这种情况下，请考虑关闭某些活动虚拟机，从这些虚拟机中删除
    vCPU，或者 [调整 vCPU
    的性能](#optimizing-virtual-machine-performance-in-rhel_monitoring-and-managing-system-status-and-performance.html#optimizing-virtual-machine-cpu-performance_optimizing-virtual-machine-performance-in-rhel "优化虚拟机 CPU 性能"){.link}。
    ``` literallayout
    # perf kvm stat report
    Analyze events for all VMs, all VCPUs:
                 VM-EXIT    Samples  Samples%     Time%    Min Time    Max Time         Avg time
      EXTERNAL_INTERRUPT     365634    31.59%    18.04%      0.42us  58780.59us    204.08us ( +-   0.99% )
               MSR_WRITE     293428    25.35%     0.13%      0.59us  17873.02us      1.80us ( +-   4.63% )
        PREEMPTION_TIMER     276162    23.86%     0.23%      0.51us  21396.03us      3.38us ( +-   5.19% )
       PAUSE_INSTRUCTION     189375    16.36%    11.75%      0.72us  29655.25us    256.77us ( +-   0.70% )
                     HLT      20440     1.77%    69.83%      0.62us  79319.41us  14134.56us ( +-   0.79% )
                  VMCALL      12426     1.07%     0.03%      1.02us   5416.25us      8.77us ( +-   7.36% )
           EXCEPTION_NMI         27     0.00%     0.00%      0.69us      1.34us      0.98us ( +-   3.50% )
           EPT_MISCONFIG          5     0.00%     0.00%      5.15us     10.85us      7.88us ( +-  11.67% )
    Total Samples:1157497, Total events handled time:413728274.66us.
    ```
    其他可能会信号 `perf kvm stat`{.literal} 输出中问题的事件类型包括：
    ::: itemizedlist
    -   `INSN_EMULATION`{.literal} - 建议 [虚拟机 I/O
        配置不](#optimizing-virtual-machine-performance-in-rhel_monitoring-and-managing-system-status-and-performance.html#optimizing-virtual-machine-i-o-performance_optimizing-virtual-machine-performance-in-rhel "优化虚拟机 I/O 性能"){.link}
        最佳.
    :::
:::
有关使用 `perf`{.literal} 监控虚拟化性能的更多信息，请参阅
`perf-kvm`{.literal} man page。
::: title
**numastat**
:::
要查看系统当前的 NUMA 配置，您可以使用 `numastat`{.literal}
实用程序，该实用程序通过安装 [**numactl**]{.strong} 软件包来提供。
以下显示了一个有 4 个运行虚拟机的主机，各自从多个 NUMA
节点获取内存。这不是 vCPU
性能的最佳方案，并[保证调整](#optimizing-virtual-machine-performance-in-rhel_monitoring-and-managing-system-status-and-performance.html#configuring-numa-in-a-virtual-machine_optimizing-virtual-machine-cpu-performance "在虚拟机中配置 NUMA"){.link}：
``` literallayout
# numastat -c qemu-kvm
Per-node process memory usage (in MBs)
PID              Node 0 Node 1 Node 2 Node 3 Node 4 Node 5 Node 6 Node 7 Total
---------------  ------ ------ ------ ------ ------ ------ ------ ------ -----
51722 (qemu-kvm)     68     16    357   6936      2      3    147    598  8128
51747 (qemu-kvm)    245     11      5     18   5172   2532      1     92  8076
53736 (qemu-kvm)     62    432   1661    506   4851    136     22    445  8116
53773 (qemu-kvm)   1393      3      1      2     12      0      0   6702  8114
---------------  ------ ------ ------ ------ ------ ------ ------ ------ -----
Total              1769    463   2024   7462  10037   2672    169   7837 32434
```
相反，以下显示单个节点为每个虚拟机提供内存，这效率显著提高。
``` literallayout
# numastat -c qemu-kvm
Per-node process memory usage (in MBs)
PID              Node 0 Node 1 Node 2 Node 3 Node 4 Node 5 Node 6 Node 7 Total
---------------  ------ ------ ------ ------ ------ ------ ------ ------ -----
51747 (qemu-kvm)      0      0      7      0   8072      0      1      0  8080
53736 (qemu-kvm)      0      0      7      0      0      0   8113      0  8120
53773 (qemu-kvm)      0      0      7      0      0      0      1   8110  8118
59065 (qemu-kvm)      0      0   8050      0      0      0      0      0  8051
---------------  ------ ------ ------ ------ ------ ------ ------ ------ -----
Total                 0      0   8072      0   8072      0   8114   8110 32368
```
:::
::: section
::: titlepage
# []{#optimizing-virtual-machine-performance-in-rhel_monitoring-and-managing-system-status-and-performance.html#related-information-optimizing-virtual-machine-performance-in-rhel}相关信息 {.title}
:::
::: itemizedlist
-   当使用 Windows
    作为虚拟机操作系统时，红帽建议应用其他优化措施。详情请查看 [优化
    Windows
    虚拟机](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/installing-and-managing-windows-virtual-machines-on-rhel_configuring-and-managing-virtualization#optimizing-windows-virtual-machines-on-rhel_installing-and-managing-windows-virtual-machines-on-rhel){.link}。
:::
:::
:::
[]{#importance-of-power-management_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#importance-of-power-management_monitoring-and-managing-system-status-and-performance.html#importance-of-power-management_monitoring-and-managing-system-status-and-performance}第 15 章 电源管理的重要性 {.title}
:::
降低计算机系统的整体功耗有助于节省成本。有效地优化每个系统组件的能源消耗包括研究系统执行的不同任务，以及配置每个组件以确保其性能对于该作业是正确的。降低特定组件或整个系统的功耗会导致降低热和性能。
正确的电源管理结果如下：
::: itemizedlist
-   服务器和计算中心的热缩减
-   降低辅助成本，包括冷却、空间、电缆、生成器和不间断电源(UPS)
-   延长笔记本电脑的温度
-   降低碳排放输出
-   满足有关绿色 IT 的政府法规或法律要求，例如，能源之星
-   满足适用于新系统的公司指南
:::
这部分论述了有关 Red Hat Enterprise Linux 系统的电源管理信息。
::: section
::: titlepage
# []{#importance-of-power-management_monitoring-and-managing-system-status-and-performance.html#power-management-basics_importance-of-power-management}电源管理基础知识 {.title}
:::
有效的电源管理基于以下原则：
::: variablelist
[`空闲 CPU 应该只在需要时唤醒`{.literal}]{.term}
:   从 Red Hat Enterprise Linux 6 开始，内核运行
    `无空循环`{.literal}，这意味着之前的定期定时器中断已被按需中断取代。因此，在为新任务排队等待处理前，允许空闲
    CPU 保持空闲状态，并且已进入较低电源状态的 CPU
    可以延长这些状态。但是，如果您的系统有创建不必要的计时器事件的应用，则此功能的优势可能会偏差。轮询事件（如检查卷更改或鼠标移动）是此类事件的示例。
    红帽企业 Linux 包括使用 的工具，您可以根据其 CPU
    使用情况来识别和审核应用程序。如需更多信息，请参阅
    [审计和分析概述](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#audit-and-analysis-overview_importance-of-power-management){.link}
    以及
    [审计工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#tools-for-auditing_importance-of-power-management){.link}。
[`应完全禁用未使用的硬件和设备`{.literal}]{.term}
:   对于具有移动部件的设备，如硬盘。此外，一些应用程序可能会保留未用但已启用的设备\"打开\"；当发生这种情况时，内核会假定设备正在使用中，这可能会阻止设备进入节能状态。
[`低活动应转换为低瓦`{.literal}]{.term}
:   然而，在很多情况下，这要依赖于现代硬件和正确的 BIOS
    配置或现代系统上的 UEFI，包括非 x86
    架构。确保您的系统使用最新的官方固件，并且在 BIOS
    的电源管理或设备配置部分中启用了电源管理功能。需要查找的一些功能包括：
    ::: itemizedlist
    -   ARM64 的协作处理器性能控制(CPPC)支持
    -   IBM Power 系统的 PowerNV 支持
    -   SpeedStep
    -   PowerNow！
    -   cool\'Quiet
    -   ACPI(C-state)
    -   智能
        如果您的硬件支持这些功能，且在 BIOS 中启用了这些功能，Red Hat
        Enterprise Linux 会默认使用它们。
    :::
[`不同类型的 CPU 状态及其作用`{.literal}]{.term}
:   现代 CPU
    与高级配置和电源接口(ACPI)一起提供不同的电源状态。三个不同的状态是：
    ::: itemizedlist
    -   sleep(C-states)
    -   频率和频率（P 状态）
    -   Heat 输出（T 状态或热状态）
        以最低睡眠状态运行的 CPU
        会消耗最少的瓦数，但在需要时将其从该状态调出所需的时间也最少。在极为罕见的情况下，这可能会导致
        CPU 必须在每次进入睡眠时立即唤醒。这种情况会导致 CPU
        永久处于忙碌状态，并且在使用了另一个状态时会失去一些潜在的功耗。
    :::
[`关闭的机器使用最少的电源`{.literal}]{.term}
:   节省电源的最佳方法之一是关闭系统。例如，您的公司可以形成专注于\"绿色
    IT\"意识的企业文化，并在午餐或家门期间关闭机器。您还可以将多个物理服务器合并为一个更大的服务器，并使用红帽企业
    Linux 附带的虚拟化技术将其虚拟化。
:::
:::
::: section
::: titlepage
# []{#importance-of-power-management_monitoring-and-managing-system-status-and-performance.html#audit-and-analysis-overview_importance-of-power-management}审核和分析概述 {.title}
:::
单个系统的详细手动审计、分析和调优通常都是例外，因为这样做所花费的时间和成本通常超过了最后几段系统调优中获得的好处。
但是，对于几乎相同的大量系统执行这些任务一次，您可以为所有系统重复使用相同的设置。例如，考虑数千个桌面系统的部署或机器几乎相同的
HPC
集群。进行审计和分析的另一个原因是，为将来您可以识别系统行为的回归或系统行为变化提供比较基础。如果硬件、BIOS
或软件更新定期进行，并且您希望避免对能耗造成任何意外情况，此分析结果将非常有用。通常，全面的审计和分析可让您更好地了解特定系统上发生的情况。
审计和分析与功耗相关的系统相对较困难，即使有最现代化的系统可用。大多数系统不提供通过软件测量功耗的必要方法。然而，例外情况如下：
::: itemizedlist
-   Hewlett Packard 服务器系统的 ILO
    管理控制台具有一个电源管理模块，您可以通过 Web 进行访问。
-   IBM 在它们的 BladeCenter 电源管理模块中提供了类似的解决方案。
-   在一些 Dell 系统上，IT 助理也提供电源监控功能。
:::
其他供应商可能会为其服务器平台提供类似的功能，但可以看到，没有单一的解决方案受到所有供应商的支持。通常仅需要直接测量功耗，以便尽可能节约成本。
:::
::: section
::: titlepage
# []{#importance-of-power-management_monitoring-and-managing-system-status-and-performance.html#tools-for-auditing_importance-of-power-management}审计工具 {.title}
:::
Red Hat Enterprise Linux 8
提供了工具，您可以使用它们执行系统审核和分析。大多数内容可用作补充信息来源，以方便您验证已经发现的内容或需要有关某些部分的更多深度信息。
许多这些工具也用于性能调优，其中包括：
::: variablelist
[`PowerTOP`{.literal}]{.term}
:   它标识经常唤醒 CPU 的内核和用户空间应用程序的特定组件。以 root
    `用户身份使用 powertop`{.literal} 命令启动 [**PowerTop**]{.strong}
    工具和 `powertop --calibrate`{.literal} 来校准电源估算引擎。如需有关
    PowerTop 的更多信息，[请参阅使用 PowerTOP
    管理功耗](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#managing-power-consumption-with-powertop_monitoring-and-managing-system-status-and-performance){.link}。
[`Diskdevstat 和 netdevstat`{.literal}]{.term}
:   它们是 SystemTap
    工具，可收集有关系统上运行的所有应用的磁盘活动和网络活动的详细信息。利用这些工具收集的统计数据，您可以识别应用程序会浪费大量小
    I/O 操作，而非更少的、更大的操作。以 root
    `用户身份使用 yum install tuned-utils-systemtap kernel-debuginfo`{.literal}
    命令安装 `diskdevstat`{.literal} 和 `netdevstat`{.literal} 工具。
    要查看磁盘和网络活动的详细信息，请使用：
    ``` literallayout
    # diskdevstat
    PID   UID   DEV   WRITE_CNT   WRITE_MIN   WRITE_MAX   WRITE_AVG   READ_CNT   READ_MIN   READ_MAX   READ_AVG   COMMAND
    3575  1000  dm-2   59          0.000      0.365        0.006        5         0.000        0.000      0.000      mozStorage #5
    3575  1000  dm-2    7          0.000      0.000        0.000        0         0.000        0.000      0.000      localStorage DB
    [...]
    # netdevstat
    PID   UID   DEV       XMIT_CNT   XMIT_MIN   XMIT_MAX   XMIT_AVG   RECV_CNT   RECV_MIN   RECV_MAX   RECV_AVG   COMMAND
    3572  991  enp0s31f6    40       0.000      0.882       0.108        0         0.000       0.000       0.000     openvpn
    3575  1000 enp0s31f6    27       0.000      1.363       0.160        0         0.000       0.000       0.000     Socket Thread
    [...]
    ```
    通过这些命令，您可以指定三个参数：update
    `_interval`{.literal}、Total`_duration`{.literal} 和
    `display_histogram`{.literal}。
[`tuned`{.literal}]{.term}
:   它是基于配置文件的系统调优工具，使用 `udev`{.literal}
    设备管理器监控连接的设备，并支持系统设置的静态和动态调优。您可以使用
    `tuned-adm recommend`{.literal}
    命令来确定红帽推荐使用哪种配置集作为最适合特定产品的产品。有关 TuneD
    的更多信息，[请参阅使用
    TuneD](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#getting-started-with-tuned_monitoring-and-managing-system-status-and-performance){.link}
    [和自定义 TuneD
    配置集](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance){.link}。使用
    `powertop2tuned 实用程序`{.literal}，您可以从 `PowerTOP`{.literal}
    建议创建自定义 TuneD 配置集。有关 `powertop2tuned`{.literal}
    实用程序的详情，[请参考优化功耗](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/monitoring_and_managing_system_status_and_performance/index#optimizing-power-consumption_managing-power-consumption-with-powertop){.link}。
[`虚拟内存统计信息(vmstat)`{.literal}]{.term}
:   它由 `procps-ng`{.literal}
    软件包提供。使用此工具，您可以查看有关进程、内存、分页、块
    I/O、陷阱和 CPU 活动的详细信息。
    要查看此信息，请使用：
    ``` literallayout
    $ vmstat
    procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
    r  b  swpd  free    buff   cache   si   so  bi   bo   in  cs  us  sy id  wa  st
    1  0   0   5805576 380856 4852848   0    0  119  73  814  640  2   2 96   0   0
    ```
    使用 `vmstat -a`{.literal}
    命令，您可以显示活动内存和不活动内存。有关其他 `vmstat`{.literal}
    选项的更多信息，请参见 `vmstat`{.literal} man page。
[`iostat`{.literal}]{.term}
:   它由 `sysstat`{.literal} 软件包提供。此工具与 `vmstat`{.literal}
    类似，但仅适用于监控块设备上的 I/O。它还提供更详细的输出和统计数据。
    要监控系统 I/O，请使用：