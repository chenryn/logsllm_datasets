iZooto
PubMatic
PropellerAds
Criteo
AdsTerra
AirPush
HillTopAds
RichPush
AdCash
PushMonetization
Generic Keywords
NotificationrequestPermission
pushmanagersubscribe
addEventListener(’Push’
adsblockkpushcom
Total
URLs
49,769
15,177
11,317
1,582
796
676
647
335
154
115
52
21
12
10
9
URLs
3,965
2,667
263
55
87,622
NPRs
1,168
427
2,933
73
215
278
7
9
5
2
0
3
0
0
5
NPRs
538
158
9
19
5,849
Table 2: URL rankings on Alexa’s top 1M sites
Alexa
Ranking
Request
Notifications
Sent
Notifications
WPN Ads
(# of Sites)
< 5k
< 10k
< 50k
< 100k
< 500k
< 1M
37
93
317
515
1494
2040
21
46
151
230
610
1383
6
8
21
33
90
135
Malicious
WPN Ads
(# of Sites)
3
5
11
14
33
60
6.1.3 Collecting WPNs in Mobile Environment. During our study,
we found that WPN messages sent to mobile devices tended to be
somewhat different that the ones collected by desktop browsers,
in that they were more tailored to mobile users. In particular, ma-
licious mobile WPN messages included fake missed call notifica-
tions, fake amber alerts, “spoofed” Gmail or WhatsApp notifica-
tions, fake FedEx notifications, etc. In addition, we found that these
malicious messages were much more likely to appear on real An-
droid devices, rather than emulated environments (likely due to
some form of emulator detection). Therefore, to automatically col-
lect mobile WPN messages we instrumented a real mobile device.
Specifically, we used a Google Nexus 5 device with 2 GB of RAM
and a 1080×1920 pixels display. The Android version we used was
aosp_shamu-userdebug7.1.1N6F26Y.
As we attempted to scale our PushAdMiner’s mobile WPN crawlers
on a real device, we identified two challenges. First, Docker or other
When Push Comes to Ads:
Measuring the Rise of (Malicious) Push Advertising
container techniques do not support Android, and therefore we
cannot easily visit multiple URLs in parallel with isolated browsing
sessions. Second, we considered to use app cloning techniques [57]
to open multiple browser instances separately in isolated execution
environments. However, the limited computing power of mobile
device restricted us to scale up and visit a large number of URLs
simultaneously. Therefore, we decided to open multiple URLs in
one chromium app but in separate tabs.
Table 3: Measurement Results of Data analysis Module
WPNs
with
Landing
Pages
9,570
2,692
12,262
Desktop
Mobile
Total
WPN
Ad
Campaigns
WPN
Ads
Malicious
WPN Ad
Campaigns
Malicious
WPN
Ads
572
5143
318
2615
6.2 WPN Messages Dataset
We start with the 5,849 initial URLs that we collected as explained
in Section 6.1.1, over 5,697 distinct second-level domain names. By
clicking on WPN messages issued by these initial URLs, we col-
lect an additional 10,898 URLs across 2,269 distinct second-level
domains. When visited, many of these additional URLs presented
our browser with a notification request, which our crawler auto-
matically granted. This brought us to a total of 7,951 URLs that
registered a SW with Push permission and were therefore able to
push notifications to our instrumented browser instances over time.
During the course of about two months (September and October
2019), we were able to collect a total of 21,541 push notification mes-
sages, including 12,441 notifications for the desktop environment
and 9,100 for the mobile environment. PushAdMiner interacted
with each of these WPN messages. However, not all automated
clicks on notification boxes led to a separate landing page. In addi-
tion, some landing pages appeared to cause a crash in the browser’s
tab (but not the browser) in which they rendered, preventing us
from collecting detailed information on those pages (this was likely
due to the fact that our instrumented Chromium browser is not
based on the most recent stable code base). We filtered out these no-
tifications, leaving us with 12,262 WPN messages (9,570 on desktop
and 2,692 on mobile) that when clicked on lead to a valid landing
page. We then used this final set of WPN messages for clustering
process (refer Section 5).
6.3 Data Analysis Results
Summary of findings: Table 3 summarizes the overall results of
our analysis process. From the 12,262 WPN messages mentioned
above, PushAdMiner identified 572 WPN ad campaigns and a total
of 5,143 WPN ads related to these campaigns. Moreover, PushAd-
Miner identified 51% of all WPN ads as malicious. Specifically,
PushAdMiner found 318 (out of 572) campaigns to be malicious; in
aggregate, these malicious campaigns included 2,615 WPN ads.
This is quite a staggering result, in that it appears that ad net-
works that provide WPN ad services are heavily abused to distribute
malicious content. Later, in Section 6.4, we also show that ad block-
ers are ineffective at blocking such ads, which is an additional cause
IMC ’20, October 27–29, 2020, Virtual Event, USA
of concern. In the following sections, we discuss the clustering and
labeling results in more detail.
6.3.1 WPN Clusters and Ad Campaigns. As discussed in section
5.1.1, we cluster the collected WPN messages based on their mes-
sage content and landing page information. After clustering 12,262
WPN messages that led to a valid landing page, we obtained 8,780
WPN clusters, of which 7,731 were singleton clusters containing
only one element (i.e., only one WPN message). Of the remaining
non-singleton clusters, 572 were labeled as WPN ad campaigns,
according to the process described in Section 5. In aggregate, these
WPN ad campaigns pushed 3,213 WPN ad messages to our browsers,
during a period of about two months.
Figure 4 provides some concrete examples of WPN clusters. In
both WPN-C1 and WPN-C2, the respective WPNs were pushed from
multiple sources (i.e., multiple second-level domain names), as also
shown in Figure 4. WPN-C3 included 4 identical WPN messages
pushed by a single source website, a bank, alerting users on their
loan offers. These messages appear to be legitimate, and led back
to the site that pushed them. WPN-C4 is an example of WPN mes-
sage isolated into a singleton cluster. According to the definition
provided in Section 5, we label WPN-C1 and WPN-C2 as WPN ad
campaigns, because the WPNs in each of the clusters deliver very
similar (or the same) message promoting very similar products from
multiple sources. However, WPN-C3 and WPN-C4 do not meet the
definition and are thus not labeled as WPN ad campaign.
6.3.2 Malicious WPN Ad Campaigns. As described in Section 5.2,
we submit landing page URLs related to all WPN messages to
GSB [11] and VT [21]. On our initial scan, less than 1% of the
URLs were detected as malicious by GSB or VT, in aggregate. For
instance, initially VT flagged 108 landing page URLs as malicious,
of which 88 were related to WPN messages labeled by our system
as belonging to ad campaigns. Notice that for VT we consider a
URL as malicious if at least one of the URL detection engine reports
it as malicious, and later manually review all results to filter out
possible false positives. After one month, we submitted the same
set of URLs once again, and we found that 1,388 URLs (11.31%) were
detected by VT, though GSB still only flagged 1% of them.
Table 4: Measurement Results at Stages of Clustering
After WPN
Clustering
After Meta
Clustering
# clusters
# ad-related
clusters
8780
2046
572
224
Total:
# WPN
ads
3213
1930
5143
# known
malicious ads
# additional
malicious ads
758
210
968
367
1280
1647
PushAdMiner relies on label propagation to label WPN mes-
sages and clusters as malicious, based on results from VT and GSB,
as explained in Section 5.2. To limit the chances of amplifying pos-
sible false positives from VT and GSB, we manually verified all
1,388 URLs to check whether they actually led to malicious content.
We were able to confirm that 96.8% of them indeed appeared to be
malicious. Of the remaining 44 URLs that we could not confirm as
malicious, 13 were found to belong to popular benign domains such