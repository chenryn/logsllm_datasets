of DNS resolvers we have access to in Table 2. As shown, we have more coverage
in Europe and North America in comparison to other continents. Our dataset
allows us to access at least 3 DNS backends in 84% of the countries (188) and
at least 2 ASNs in 74% of the countries (188).
Availability of DNS Resolvers. A relevant question is to what extent the
use of DNS forwarders provides any appreciable beneﬁt over just directly query-
ing DNS resolvers that answer external queries. We measured this by taking our
list of (forwarder, resolver) pairs, and measuring what proportion of resolvers
answered queries from our measurement machine located in the US. In the mea-
surement we ran, there were 25,665 distinct resolvers. 75% of the resolvers were
not responsive to a query for our scan domain when asked directly, but did
respond when we queried them via a forwarder.
3.2 Probing DNS Forwarders
We use Google’s gopacket library [17] to develop our DNS cache probing tool,
dmap. As input, dmap takes a list of (forwarder, resolver) pairs from our ﬁltering
process, a list of domains to probe, an exclude-list of IP ranges of owners who
have complained and chosen to be excluded from such probing, and an interval
(which should be chosen less than the smallest authoritative TTL for any of the
domain names being probed). Alternatively, a dmap user can specify a diﬀerent
TTL for each domain name, such as in the case where domain names have vastly
diﬀerent TTLs.
From the (forwarder, resolver) pairs, dmap maintains a subset of active for-
warders that may change over time. At any given time, dmap tries to have two
active forwarders for each resolver. If a forwarder goes oﬄine, or is detected
misbehaving (resolving an RD = 0 query for a random subdomain of our con-
trol domain, returning resolver addresses in two diﬀerent ASes, or returning a
resolver address with a TTL that is not approximately full), then dmap removes
it from the active forwarders list. For each resolver associated with this
434
A. Akhavan Niaki et al.
forwarder, dmap activates an additional forwarder in its list that talks to the
same resolver.
dmap sends a DNS query packet for each domain name to each active for-
warder every interval seconds. dmap probes at a constant rate and iterates over
the space of (forwarder, domain) pairs in a random order using the method of
zmap [15]: generating a cyclic multiplicative group (Z/p for a prime p larger than
twice the product of the number of forwarders and domains). It is unlikely, but
should the size of the set of active forwarders increase beyond this prime, a new
random order will be chosen. At the same interval, dmap continues probing our
scan domain on each forwarder (as in Step 2 in Sect. 3.1) to determine whether
each forwarder continues to respect the RD = 0 ﬂag, and continues to forward
only to resolvers in a single (“Access/transit”) AS. dmap remembers any new
resolvers discovered for a forwarder, and uses this information when maintaining
the set of active forwarders.
At the same time as dmap is sending DNS query packets, it is listening
for DNS responses. DNS responses are ﬁltered to ensure their relevance. DNS
responses containing no answers, or no answers for the exact domain name in
the question are discarded. DNS responses containing error codes are discarded.
All other DNS responses are recorded in a JSON format consistent with that
generated by zmap’s DNS module, except responses to the RD=0 and forwarding
behavior validation queries. The TTL values in the DNS responses allow us to
infer the date and time when the domain name was added to the DNS cache, by
subtracting the response TTL from the record’s authoritative TTL (measured
by a direct query to the domain’s authoritative nameserver).
To ensure that new forwarders to probe are discovered in a timely fashion,
we re-process the latest Censys scan results and re-load these into dmap every
24 h. When these new (forwarder, resolver) pairs are loaded, dmap may begin
probing new forwarders as necessary to ensure that at least two forwarders are
being probed for each resolver.
3.3 Ground Truth Validation
To validate that our methodology can detect and infer timestamps for a nontriv-
ial amount of DNS lookups, we performed a two-part ground truth experiment on
March 23, 2019. We used ∼1,000 RIPE Atlas nodes across 106 countries to send
recursive queries to a single subdomain of our scan domain once per hour with
random start times (using RIPE Atlas’ random function) for 72 h. At the same
time, we used dmap to probe for the same subdomain (across approximately
16,000 DNS forwarders in 187 countries) for a period of 26 h.
In our experiment, only 1,473 unique forwarders ever returned an answer
(i.e., they contacted a resolver that had received a query for our scan subdo-
main). These forwarders used 1,247 unique resolvers in 64 countries.
Multiple Caches are Common. If a forwarder only ever uses a single resolver,
we would expect to observe our domain cached for a total of TTL seconds per
hour in a given resolver. However, we observed this in only 60 of the resolvers we
Cache Me Outside: A New Look at DNS Cache Probing
435
study, with DNS forwarders using four DNS resolvers on average, with a median
value of 2 resolvers.
Because our scan domain is specially conﬁgured to return the resolver
address, we can see which resolver’s cache answered a given probe. However,
when probing a domain with a standard nameserver, we cannot see which
resolver’s cache answered a given probe. Since many forwarders use multiple
caching resolvers (all in a single AS), we must be careful when making cache
inferences.
Timestamp Validation. We cross-checked the timestamps inferred from our
DNS cache probing results with ground truth timestamps from our DNS name-
server logs that show when a resolver actually contacted our nameserver, and
timestamps from our RIPE Atlas measurement logs.
The forwarders showing cache hits in our experiment queried 1,247 unique
resolvers, including resolvers that never handled our queries. We found 1,198
of these resolver IP addresses in our nameserver logs, and compared their log
timestamps with the timestamps inferred from DNS cache probing. We found
that our timestamp inference was accurate to 5 s for 97% of the resolvers we
probed (1,166).
RIPE Atlas Requests. The data from our RIPE Atlas measurement includes:
(1) The RIPE node’s IP address and (2) The base64 encoded DNS question and
answers; recall that a correct answer for our scan subdomain always includes the
resolver address. Thus, the RIPE Atlas data eﬀectively tells us which resolver
contacted our nameserver at which time.
The RIPE Atlas data reﬂects that queries sent by the 1,000 RIPE nodes over
our 72 h experiment caused 5,451 distinct resolvers to query our DNS server. Of
these DNS resolvers, the dmap output reﬂects that we received responses from
forwarders talking to 1,142 of these resolvers. Again, our inferred timestamps
are accurate (per the RIPE Atlas data) to 5 s for 97% (1,100) of the resolvers.
3.4 Ethics
Since our study uses hosts on the Internet that accept queries from arbitrary
sources, care must be taken to avoid overloading (or otherwise causing trou-
ble for) the hosts. This is especially true because many DNS forwarders are in
residential networks [31].
In our experiments, we probe each for-
Sending Queries at a Low Rate.
warder once per DNS TTL period for the set of domains we measure, which
results in a maximum probing of 28 times per minute.
This is less than one query per second. We estimate that this results in less
than 1 KB/sec of bandwidth usage on the forwarder, including the forwarder
receiving our query, the forwarder sending our query to the resolver, the for-
warder receiving the resolver’s response, and the forwarder sending the resolver’s
response to us.
Because of the low rate, we do not expect our queries to cause a notable
loss in performance for the host we are probing, or use a signiﬁcant portion of
436
A. Akhavan Niaki et al.
the host’s bandwidth allotment, or trigger any unwanted attention from ISPs
or network administrators. We note that normal user activity, such as visiting a
website, can sometimes result in multiple DNS queries in a short period, far in
excess of our one query per second scanning rate.
Avoiding Illegal or Controversial Domains. Since we could be using res-
idential networks to forward our queries, there is a concern over the types of
domains we query. Querying a domain name containing controversial or illegal
content may invite unwanted attention from authorities who erroneously inter-
pret our query as evidence of the forwarder’s intent to participate in illegal activ-
ity. Thus, we are careful to exclude any domains that may include objectionable
or censored content, or any domains associated with products or software that
might be illegal in a given jurisdiction.
Privacy Issues. Although we are leveraging end-user systems, our probes
are typically answered from the caches of ISP resolvers. We are thus unable to
determine whether a particular end-user has looked up a particular domain.
4 Case Studies
4.1 Case Study: Netsweeper Device Localization
We applied our DNS cache probing to identify the location of Internet ﬁlter-
ing devices sold by Netsweeper. While these devices are marketed for use in
schools, libraries, and enterprise settings, previous technical work has estab-
lished that these devices are also used to block political and human rights con-
tent on major consumer-facing ISPs in several repressive countries, including
Bahrain, the UAE, Somalia, and Sudan [12]. The previous work used strategies
including scanning the Internet for administrator login pages associated with
Netsweeper deployments, and looking for Netsweeper blockpages in data col-
lected by OONI [1] to localize these devices.
While these techniques produce useful results, they may fail to detect devices
conﬁgured to drop Internet traﬃc rather than inject a blockpage attributable to
Netsweeper, and may not detect installations conﬁgured without a globally acces-
sible administrator login page. This may be especially true going forward, given
increasing security concerns about exposing these login pages: an April 2020
unauthenticated remote code execution vulnerability in Netsweeper’s adminis-
trator login page would have allowed an attacker to hijack a Netsweeper instal-
lation and redirect users to malicious websites [26].
Measuring the proliferation of commercial censorship tools like Netsweeper’s
product can help hold companies to account for selling these tools to abusive
customers, and can sometimes expose cases where technology is resold or trans-
ferred to third parties [20]. Finding additional strategies to localize these devices
is thus highly desirable.
In addition to blocking websites speciﬁed by operators, Netsweeper devices
can communicate with Netsweeper’s servers to download and block lists of
“objectionable” content, such as pornography and gambling sites. Netsweeper’s
Cache Me Outside: A New Look at DNS Cache Probing
437
system documentation [23] mentions that Netsweeper installations run a daemon
called freshnsd that attempts to download updated versions of these URL cate-
gorization lists from update.netsweeper.com (the Netsweeper update domain).
We performed a one-week measurement looking for cache hits on the Netsweeper
update domain. We considered a backend to have a Netsweeper activity if there
were cache hits for the Netsweeper update domain on at least six of the seven
days of our scan.
Results. We compared our cache probing results to results from Censys [14]
during our scan period. We queried Censys using Netsweeper ﬁngerprints from
a previous Citizen Lab study [12]. The Netsweeper activity was matched by IP
addresses in 70 ASNs. Of these 70 ASNs, our DNS cache probing was able to
probe at least one backend in 24 of the ASNs. We found Netsweeper activity
in 10 of these ASNs (roughly 42%). Our cache probing also found Netsweeper
activity on backends in 18 ASNs that did not show up in the Censys results. We
show our results in Table 3, locations are inferred (where possible) from PTR
records of DNS resolver addresses.
Table 3. DNS resolvers with Netsweeper activity.
Censys? Organization
Location(s)
Coun try ASN
Censys? Organization Location(s)
Telstra
iiNet
A1 Telekom
Batelco
Etisalcom
TELUS
ETB
Primenet
Data Ingenious Global
Vodafone Idea
Imagine
QualityNet
2degrees
Sudatel
Du
Saigontourist Cable
×
×
×
×
×
×
Adelaide, SA
Hobart, TAS
USA
Edmonton, AL
209
2572
2914
7018
×
CenturyLink
MOREnet
NTT America
AT&T
7022
Comcast
702
2856
5089
44611
206747
30873
UK
Yemen
UUNET
British Telecom
Virgin Media
×
× Wavenet
×
NCSC
Yemennet
MO
TX
Beaverton, OR
Boston, MA
Denver, CO
Wilmington, DE
Newark, NJ
Lancaster, PA
Manchester
Coun try
Australia
ASN
1221
4739
Austria
India
Bahrain
Canada
Colombia
8447
5416
35457
852
19429
17426
17753
54410
25441
Ireland
Kuwait
9155
New Zealand 23655
15706
Sudan
15802
UAE
Vietnam
45543
One of the puzzling ASNs in which we found Netsweeper activity was ASN
206747, listed as “UK Ministry of Defence,” where we found 64 backends with
Netsweeper activity. On closer inspection, the IP addresses were in a range
belonging to the UK’s National Cyber Security Center (NCSC), which oﬀers
a “Protective DNS” service [8] for national and local government agencies in the
UK. An NCSC blog post explains that the service is designed to detect and block
malware, and that as of 2017, 44 organizations were using the service [9]. Some
UK government agencies use Netsweeper, according to Censys scanning, includ-
ing the Lancashire and Essex local councils. We suspect that these councils (or
other government Netsweeper users in the UK) are using the NSCS’s Protective
DNS service.
Discussion. Of the ASNs showing Netsweeper activity in our DNS cache prob-
ing, but not matching any Netsweeper ﬁngerprints on Censys, some are known to
438
A. Akhavan Niaki et al.
be using Netsweeper based on data from OONI. For example, OONI data shows
evidence of Netsweeper use on Bahraini ISP Batelco and UAE ISP Du, though
no Batelco or Du IPs were seen matching Netsweeper ﬁngerprints in a previous
Citizen Lab study [12]. In Kuwait, two ISPs (FASTtelco and Zain) are known
to use Netsweeper per OONI data and previous Censys scans [12], though there
appears to be relatively little OONI testing on QualityNet, per OONI’s explorer
tool [25]. There appears to be limited (or no) OONI data for some other ISPs,
such as Saigontourist, and Data Ingenious Global Limited [25].
Of course, similar to OONI and Censys data, it is hard to conclude based
on DNS data alone whether Netsweeper installations are deployed ISP-wide, or
within an institutional or enterprise setting using the ISP’s DNS servers. Never-
theless, the fact that DNS cache probing can detect Netsweeper activity that is
not connected to known Censys or OONI results shows that it can be useful as
an additional measurement tool for studying Internet ﬁltering and censorship.
In future work, we plan to examine the update infrastructure associated with
several additional censorship and DPI products.
4.2 Case Study: Tracking the Global Proliferation of Stalkerware
We also applied our DNS cache probing to track the global proliferation of stalk-
erware, a type of generally available spyware that allows an operator to covertly
monitor a target’s devices [19]. While stalkerware applications are often mar-
keted as “employee monitoring” or “child safety monitoring” tools, they also
enable Intimate Partner Surveillance or Violence (IPS or IPV) [10,19,27]. In the
case of IPS, an abuser ﬁrst installs the stalkerware on the victim’s mobile phone.
The installation of the app may cause data from the phone to be sent to the
stalkerware company’s servers, where the abuser can log in to access it. Stalk-
erware applications are generally able to gather data including text messages,
location, and logs of phone calls.