Stat. FL [16] (including two approaches denoted by SSS and
sketch). Table 1 presents the numeric ﬁgures using an exam-
ple parameter setting for intuitive illustration, while Short-
MAC presents similarly distinct advantages in other param-
eter settings. In this example scenario shown in the table,
the guaranteed data-plane packet delivery ratio is θ = 92%.
The communication overhead for a router in ShortMAC is
1 extra ACK for every 3.8 × 104 data packets in an epoch;
the marking cost is 10 bits for the 2-bit MACs in a path
with 5 hops, and the per-path state at each router is 21 bytes
(16-byte symmetric key, 2-byte C good, 1-byte C bad, and 2-
byte per-path SN). Though Barak et al. proved the ne-
cessity of per-path state for a secure fault localization pro-
tocol [16], such a minimal per-path state in ShortMAC is
viable for both intra-domain networks with tens of thou-
sands of routers and the Internet AS-level routing among
We provide the intuition for ShortMAC’s distinct ad-
vantages. PAAI-1 or Stat. FL used either low-rate packet
are estimated from their earlier work [?]. In this example scenario, d = 5, δ = 1%, ρ = 0.5%, Tdr = 1.5%,
served per-link drop rate can deviate further away from ρ,
In the general case with n colluding nodes, we can ﬁrst
a symmetric key is 16 bytes, and ShortMAC uses 2-bit MACs. PAAI-1 speciﬁc parameters include the
and the drop detection threshold Tdr has to tolerate a larger
group adjacent colluding nodes into virtual malicious nodes
“packet sampling rate” set to 0.01, the end-to-end latency set to 25 ms, the source’s sending rate set
deviation (thus being very loose) in order to limit the false
as in Figure 5, resulting in non-adjacent malicious nodes
to 106 packets per second, each packet hash is 128 bits.
(including virtual malicious nodes). Then we can show
positive rate below the given δ. On the other hand, a small
non-adjacent malicious nodes can be detected based on the
N is desired for fast fault localization. We deﬁne Detection
Delay to be the minimum value of N given the required δ.
Despite colluding attackers cannot corrupt packets more
complement the theoretical results derived in the worst case
(α, β)δ−forwarding security where α is given by Lemma 2
 The	
  math	
than the same thresholds as an individual attacker on any
Lemma 2 Dropping Detection and (N, δ)- Fault Local-
scenario (due to multiple mathematical relaxations such as
and β is given by Lemma 1. We also achieve (Ω, θ)-
single link, they can choose to distribute packet dropping
r! ln 2
ization: Given the bound δ on detection false positive and
δ"2
Hoeffding inequality) and constant dropping/injection rates.
across multiple links. In this case, the total packet drop rate
Guaranteed forwarding correctness with Ω equal
to
δ +ln 2
negative rates and drop detection threshold Tdr, the detec-
by colluding attackers increases (and is still bounded) lin-
the number of malicious links in the network, and
Evaluation scenario and attack pattern. Since Short-
early to the number of malicious links in the same path, as
tion delay N is given by: N =
2!Tdr −ρ"2!1−Tdr"d , where
N . where N is derived from Lemma 2
θ = (1 − Tdr)d − β
MAC provides a natural isolation across paths due to
its per-path state, our evaluation focuses on a single
d is the path length. Correspondingly, the fraction of pack-
In Theorem 2, we analyze the protocol overhead with the
 The	
  numbers	
path. Speciﬁcally, we present the result of a 6-hop path
ets α an adversary can drop on one of its malicious links
following three metrics (we further analyze the throughput
(routers f1, f2, f3, f4, f5 and the destination f6) since our
  PAAI-­‐1:	
  X.	
  Zhang,	
  A.	
  Jain,	
  and	
  A.	
  Perrig,	
  “Packet-­‐dropping	
without being detected is limited to: α = 1 − (1 − Tdr)2 +
and latency in Section 8 via real-ﬁeld testing):
PAAI-­‐1	
Protocol	
Sketch	
experiment yields the same observation with other path
N(1−Tdr)d .
We prove the (N, δ)−data-plane fault localization (Def-
Adversary	
  Iden-ﬁca-on	
  on	
  Data-­‐plane	
  security.”	
1) The communication overhead is the fraction of extra
lengths. We simulate both an (i) independent packet cor-
  SSS,	
  Sketch:	
  B.	
  Barak,	
  S.	
  Goldberg,	
  D.	
  Xiao,	
  “Protocols	
  and	
inition 4) and (α, β)δ−forwarding security of ShortMAC
packets each router needs to transmit.
≈106	
7.1×105	
1.6×108	
Delay	
  (pkt)	
In practice, Tdr can be chosen according to the expected
ruption pattern where a malicious node drops/injects each
(Deﬁnition 6), which in turn yield the θ−guaranteed for-
Lower	
  Bounds	
  for	
  Failure	
  Localiza-on”	
2) The marking cost is the number of extra bits a source
upper bound ρ of a “reasonable” normal link loss rate such
packet independently with a certain drop/injection rate, and
warding correctness (Deﬁnition 5). Proofs of the lemmas
≈500	
2×105	
21	
needs to embed into each data packet.
that a drop rate above Tdr is regarded as “excessively lossy”.
and theorems are provided in Appendix A.
(ii) random-period packet corruption pattern where the be-
nign (non-attack) period Tb and attack period Ta (when the
Comparison of theoretical results. Before presenting the
3) The per-path state is deﬁned as the per-path extra bits
Theorem 1 Forwarding
and Correctness:
theorems, we ﬁrst summarize and compare ShortMAC the-
malicious node drops/modiﬁes all legitimate packets) are
that a router stores for the security protocol in fast memory
oretical results with two recent proposals, PAAI-1 [59] and
Given Tdr, δ, and path length d, we can achieve
activated in turns. The durations for both periods are ran-
needed for per-packet processing.4
Stat. FL [16] (including two approaches denoted by SSS and
domly generated. For both attack patterns, we control the
6 Theoretical Results and Comparison
State	
  (bytes)	
ShortMAC	
β
SSS	
ln( 2d
δ )
In Lemma 2, we derive N, the number of data packets
a source needs to send in one epoch to bound the detection
false positive and false negative rates below δ. Due to natu-
ral packet loss, a network operator ﬁrst sets an expectation
based on her domain knowledge such that any benign link
in normal condition should spontaneously drop less than ρ
fraction of packets. We ﬁrst describe how the drop detection
threshold Tdr is set when N and δ are given. Intuitively,
by sending more data packets (larger N), the observed per-
link drop rate can approach more closely its expected value,
which is less than ρ; otherwise, with a smaller N, the ob-
served per-link drop rate can deviate further away from ρ,
and the drop detection threshold Tdr has to tolerate a larger
deviation (thus being very loose) in order to limit the false
positive rate below the given δ. On the other hand, a small
N is desired for fast fault localization. We deﬁne Detection
Security
4×103	
10	
3.8×104	
q +
2k
+8qTin ln 2
4q2
δ
.
Experimental	
  EvaluaDon	
 Average-­‐case	
  performance,	
  proof	
  of	
  concept	
 Simula-on	
  +	
  Prototyping	
 Simula-on:	
  large-­‐scale,	
  security	
  proper-es	
 Prototype:	
  computa-onal	
  overhead	
 SSF-­‐net	
  based	
  simula-on	
  Single	
  6-­‐hop	
  path	
  Malicious	
  node	
  in	
  the	
  middle	
  Independently	
  dropping/injec-ng	
  packets	
11	
e
t
a
r
e
v
i
t
a
g
e
n
e
s
a
f
l
 0.01
! 0.1%
! 0.3%
! 0.6%
 100  1000  10000
detection delay (N) - log scale
 False	
  rates,	
  detec-on	
  delay,	
  and	
  comparison	
SimulaDon	
  Results	
 0.001
 100  500 2000
detection delay (N) - log scale
(b) Dropping attacks
 2-­‐bit-­‐MAC	
l
e
a
c
s
r
a
e
n
i
l
-
s
e
t
a
r
e
s
a
l
f
 0.3
 0.25
 0.2
 0.15
 0.1
 0.05
 0
 1000
detection delay (N) - log scale
 100
drop 2 inject 2
drop 5 inject 5
drop 5 inject 2
 100  200  300  400  500
detection delay (N) - linear scale
(d) Combined attacks.
12	
Figure 6. In this set of simulations, f3 is the malicious router performing attacks. The parameter are
Prototyping	
  Results	
 Pure-­‐sosware	
  router	
  prototype	
  in	
  Linux/Click	
 Evalua-on	
  of	
  fast	
  path	
  performance	
 Per-­‐packet	
  PRF	
  computa-on	
 Diﬀerent	
  MACs	
  with	
  AES-­‐ni	
 Computa-onal	
  overhead	
  Throughput	
  and	
  latency	
  Linear	
  path	
  topology	
  Netperf	
  benchmark	
13	
Prototyping	
  Results	
 Throughput	
  and	
  latency	
 90
 900
 80
 70
 800
 60
 50
 700
 40
 30
 600
 20
 10
 500
 0
)
s
/
b
)
M
s
µ
(
y
c
n
e
(
t
u
p
h
g
u
o
r
h
T
a
t
l
MTU 100
MTU 500
MTU 1000
MTU 1500
baseline
no parallel
internal
external
 4
 5
 6
path length
path length
 2  8  16  24  32  40  48  56  64
 2
 8
 3
 7
)
s
µ
(
y
c
n
e
t
a
l
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
MTU 100
MTU 500
MTU 1000
MTU 1500
 2  8  16  24  32  40  48  56  64
Figure 12. Source latency.
Figure 11. Source through-
put.
14	
Figure 12. Source latency.
 7
 8
 1500
packet size (bytes) 
Figure 11. Source through-
Figure 10. Router through-
Phew…	
  the	
  end	
  Limi+ng	
  instead	
  of	
  perfectly	
  detec-ng	
 Enables	
  eﬃcient	
  algorithms	
  Provable	
  security	
  guarantee	
 Theore-cal	
  bounds,	
  against	
  strong	
  adversaries	
  High	
  eﬃciency	
 Low	
  detec-on	
  delay,	
  router	
  state,	
  comm.	
  overhead	
  Probabilis+c	
  packet	
  authen-ca-on	
 Building	
  block	
  for	
  other	
  applica-ons	
15	
Thank	
  you!	
QuesDons?	
Xin	
  Zhang	