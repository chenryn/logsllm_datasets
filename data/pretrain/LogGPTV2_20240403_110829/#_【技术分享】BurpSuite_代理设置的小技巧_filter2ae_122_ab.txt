设置内容如下图所示，最后点击OK即可。
这时候你会发现google.com已经能够访问了，并且BurpSuite中也成功地抓取到了相应的请求报文。
你可以同时设置多个Upstream Proxy Servers，在使用过程中，BurpSuite会按顺序将请求的主机与Destination
host中设置的内容进行比较，并将请求内容发送至第一个相匹配的Proxy server。因此，Proxy Server的顺序很重要，讲究个先来后到！
**2\. SOCKS Proxy**
与Upstream Proxy Servers的作用类似，SOCKS Proxy的功能也是将请求内容发送至相应的代理服务器。不同之处在于，SOCKS
Proxy作用于TCP协议层，因此如果设置了该项，那么所有的请求数据都会被发送至SOCKS代理服务器。所以，SOCKS
Proxy的设置更简单。同样以google.com为例，先在下方的输入框中依次填入SOCKS代理服务器的IP、端口（如果SOCKS代理服务器需要认证，还需要填写用户名和密码），然后勾选Use
SOCKS proxy即可。
需要注意的一点是，如果同时设置了Upstream Proxy Servers和SOCKS Proxy，则根据规则应该发送至上游代理的请求将会通过SOCKS
Proxy发送。
**0x05 被测客户端不支持代理设置的情形**
有时候，我们想对电脑上的某客户端进行抓包分析，然而这个客户端并没有代理设置的功能，怎么办？如果直接设置系统代理当然也是可以的，但是这样一来所有程序的流量都要经过BurpSuite，一方面有可能影响非测试软件的使用；另一方面，BurpSuite中非测试软件的请求记录过多也影响我们的分析测试。有没有更好的解决方案？
答案是肯定的，这时候就需要[Proxifier](https://www.proxifier.com/)登场了。Proxifier是什么？且看官网的说明：
    Proxifier allows network applications that do not support working through proxy servers to operate through a SOCKS or HTTPS proxy and chains.
简单的说，使用Proxifier能够为那些本身不能设置代理的软件设置SOCKS或者HTTPS代理（链）。Proxifier的体积虽小，但功能却十分强大，除了有Windows版之外，还有Mac版的。因此，非常值得关注。
还是通过实例进行说明。有一次，需要对某微信公众号进行渗透测试，有些微信公众号的链接复制到浏览器中可以直接打开，但是这个公众号做了限制，只能在微信中打开，即使改了UA也不行。
微信网页版中只能看到公众号发的文章，而不能进行交互。设置手机代理倒是可以进行测试，但是一边在手机上操作、一边在PC上抓包很不方便，而且容易给领导一种一直在玩手机的错觉……微信PC版功能倒是挺全，然而却不能设置代理！
怎么办？貌似山穷水尽了。最后寄希望于Google，经过一番搜索，直到Proxifier的出现，总算柳暗花明！言归正传，接下来看看Proxifier怎么玩。
Proxifier的界面很简洁，我们重点关注其中的两个功能，即Proxy Servers和Profication
Rules。工具栏中最左侧的两个图标分别对应这两个功能。
首先点击工具栏第一个图标，打开Proxy Servers对话框。Proxy
Servers对话框分为上下两部分，上半部分用于设置代理服务器，下半部分用于设置代理链。
**1\. 代理服务器设置**
我们先讲讲代理服务器设置。点击Add按钮，增加一个代理服务器，填入相应的代理服务器地址和端口，这里填入BurpSuite的代理127.0.0.1:8080；Protocol中选择HTTPS；点击Advanced按钮，设置一个Custom
Label以方便区分。
设置完成之后，可以点击下方的Check按钮测试一下代理是否设置成功。如果出现下图所示的Proxy is ready to work with
Proxifier!说明代理设置成功。不过默认的用于测试的目标网站是www.google.com，很有可能出现误判，建议点击右上角的Test
Settings按钮将Target host更改为不挂代理也可正常访问的网站。
Proxy
Server设置完成之后会提示你尚未设置当前启用的代理服务器，是否要进入规则设置，点击‘是’即可进行代理规则设置。也可以点击工具栏第二个图标进入‘Proxification
Rules’对话框。
默认有两条直连的规则。点击左下方的Add按钮，进入具体的规则设置页面。
设置内容并不复杂，一共五个设置项：
**Name：可任意设置，建议设置有意义的名称以方便使用。**
**Applications：设置代理的应用，此处设置的是微信的主程序wechat.exe。**
**Target hosts：设置访问哪些网站走代理，根据实际情况填写。**
**Target ports：设置访问目标网站的哪些端口才走代理，根据实际情况填写即可。**
Action：这里选择上一步设置的代理服务器即可。除了自定义的代理服务器外，这里还有Direct和Block的选项，分别是直连和阻止连接，说明Proxifier还可以有选择的屏蔽某些站点，在某些情况下还是很有用的。
规则设置好之后，可点击规则列表框右侧的方向按钮，更改规则的顺序。和BurpSuite的Upstream Proxy
Servers一样，这里也讲究个先来后到，所以当前在用的规则越靠前越好。如果你设置好代理及规则之后不起作用，可以到这里看看顺序是不是没有调整好。
一切设置就绪，别忘了点击OK按钮保存。这时候，在PC版的微信中对目标公众号进行相应的操作与访问，BurpSuite就能够抓取到HTTP报文了。同时，在Proxifier中能够看到连接状态与日志。（PS：我发现每次使用Proxifier一开始总会出错，过几秒钟就正常了，不知道啥原因？）
回到本节开头的那个问题，对于那些无法设置代理的客户端程序，可以使用Proxifier为其设置代理，进而使用BurpSuite等工具抓包分析。此外，如果将Proxification
Rule中的Application设置为IE浏览器，即可选择性地将目标站点的HTTP请求发送至BurpSuite，这就解决了使用IE进行渗透测试时代理设置不方便的问题。
**2\. 代理链设置**
接下来说一说Proxifier的代理链功能。为了实现代理链，首先需要设置多个代理（在Proxifier中，仅有一个代理服务器的代理链也是允许的，但那没什么意义）。还拿google.com的例子进行说明，我们需要两个代理：BurpSuite（127.0.0.1:8080）和SS（127.0.0.1:1080）。先在Proxy
Servers中增加一个SS（127.0.0.1:1080）的SOCKS5代理服务器。然后点击下方右侧的Create按钮，新建一个代理链，名称随意，比如BurpSuite->SS。最后用鼠标依次将上方的BurpSuite和SS代理服务器拖到下方即可。注意，这里的顺序也很重要。
点击Create按钮下方的Type按钮可以设置代理链的类型，一共有3种类型的代理链：
Simple Chain：简单类型，请求数据从上到下依次经过各代理服务器，这个是默认选项。
Redundancy：冗余类型，如果第一个代理服务器无法连接，则尝第二个，以此类推。
Load Balancing：负载均衡类型，请求数据会随机地发送到列表中的各个代理服务器。
按照我们的需求，需要选择默认的Simple
Chain。有了代理链，接下来仍然需要设置代理规则，设置方法同前，只不过在Action中选择刚才设置的代理链即可。
BurpSuite自带的Upstream Proxy Servers和SOCKS
Proxy完全可以解决google.com的问题，这里仅仅是以此为例进行说明。Proxifier的代理链功能十分强大，至于怎么用就看大家的脑洞了~
**0x05 结束语**
本文总结了我在使用BurpSuite过程中所学会一点关于代理设置的小技巧。个人感觉平时在使用BurpSuite的过程中，仅仅用到了一小部分功能。今后应该抽空多研究一下自带的帮助文档，也希望大家多分享相关的技巧，大家共同进步！