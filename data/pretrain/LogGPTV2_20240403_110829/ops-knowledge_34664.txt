User: How to use Python to write a TCP Server and listen to a specified port? Please provide a complete code example.
Assistant: The following is an example of a TCP server code written in Python, which can listen to a specified port and receive incoming data from clients: ```python import socket # Configure server IP and port IP = '127.0.0.1' PORT = 8888 # Create a server Socket object server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((IP, PORT)) # Bind IP and port server_socket.listen(5) # Start listening, allow the maximum number of connections 5 print(f "Server listening on {IP}:{PORT}...") while True: client_socket, client_address = server_socket.accept() # Waiting for receiving client connection print(f"Client {client_address[0]}:{client_address[1 ]} connected.") # Received client data data = client_socket.recv(1024) print(f"Received data from client {client_address[0]}:{client_address[1]}:") print(data.decode() ) # Send the server response to the client response = "Hello, client!" client_socket.send(response.encode()) client_socket.close() # Close the client connection ``` After running the above code, the TCP server will always Listen for client connections on the specified IP and port. When a client connects successfully, the server will first receive the data from the client, then send a fixed response to the client, and finally close the connection.