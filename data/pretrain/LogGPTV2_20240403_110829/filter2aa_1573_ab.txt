间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱检测驱动程序
lib
lib
沙箱 Hypervisor 驱动程序
• 第三种方案：基于硬件虚拟化的驱动程序
• 基于虚拟化的系统调用监控功能
• 针对敏感内存读写访问监控功能
• 避免 PATCH GUARD 导致的蓝屏 😀
• 保护自身驱动代码数据 😀
• 拓展更全面的检测功能 😀
沙箱检测引擎
用
户
空
间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱检测驱动程序
lib
lib
沙箱 Hypervisor 驱动程序
• 第三种方案：基于硬件虚拟化的驱动程序
• 基于虚拟化的系统调用监控功能
• 针对敏感内存读写访问监控功能
• 避免 PATCH GUARD 导致的蓝屏 😀
• 保护自身驱动代码数据 😀
• 拓展更全面的检测功能 😀
• 这样就万无一失了吗？
沙箱检测引擎
用
户
空
间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱检测驱动程序
lib
lib
沙箱 Hypervisor 驱动程序
用
户
空
间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱检测驱动程序
lib
lib
沙箱 Hypervisor 驱动程序
• 第三种方案：基于硬件虚拟化的驱动程序
• 基于虚拟化的系统调用监控功能
• 针对敏感内存读写访问监控功能
• 避免 PATCH GUARD 导致的蓝屏 😀
• 保护自身驱动代码数据 😀
• 拓展更全面的检测功能 😀
• 这样就万无一失了吗？
• 无法确保其他内核模块的可靠性 ☹
沙箱检测引擎
用
户
空
间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱检测驱动程序
lib
lib
沙箱 Hypervisor 驱动程序
• 第三种方案：基于硬件虚拟化的驱动程序
• 基于虚拟化的系统调用监控功能
• 针对敏感内存读写访问监控功能
• 避免 PATCH GUARD 导致的蓝屏 😀
• 保护自身驱动代码数据 😀
• 拓展更全面的检测功能 😀
• 这样就万无一失了吗？
• 无法确保其他内核模块的可靠性 ☹
• 虚拟机软件嵌套虚拟化支持不佳 ☹
沙箱检测引擎
用
户
空
间
内
核
lib
系统调用
obj
proc
fsflt
drv
沙箱客户端驱动程序
虚拟机
沙箱检测引擎
Hypervisor
硬件层
沙箱检测引擎
虚
拟
机
主
机
系
统
内
核
VM-1
VM-2
···
主机服务器
• 第四种方案：基于全局虚拟机监视器的检测方案
• 第四种方案：基于全局虚拟机监视器的检测方案
• 核心检测代码位于主机系统内核
• 融合先前各检测方案的优势
• 不依赖虚拟机内部其他系统模块 😀
• 虚拟机崩溃不影响关键检测功能 😀
• 检测数据直接输出主机记录服务 😀
沙箱检测引擎
Hypervisor
硬件层
沙箱检测引擎
虚
拟
机
主
机
系
统
内
核
VM-1
VM-2
···
主机服务器
沙箱检测技术
• 行为检测
• 内存访问检测
• 内核利用检测
• 内核异常检测
• 已知漏洞检测
• 用户态利用检测
Access Proc
Access File
Behavior
Network
Vulnerablitiy
Exploit
EoP
syscall
UAF
Nullptr
Arbitrary 
addr R/W
Arbitrary 
addr exec
Token
Privileges
沙箱检测技术
• 行为检测
• 内存访问检测
• 内核利用检测
• 内核异常检测
• 已知漏洞检测
• 用户态利用检测
内存访问检测
行为检测
客
户
机
操
作
系
统
Hypervisor
匹配
I.I.
匹配
返回
解析
记录
检测日志记录服务
客户机操作系统中的执行流
匹配
I.I.
匹配
返回
解析
记录
S.MTF
C.MTF
恢复
返回
内核利用检测
Vulnerability Triggering
Exploiting
Exploit Result
UAF
Nullptr
OOB
Pool/heap spray
Corrupting window
Token
Privileges
Integrity
ACL
...
...
...
KeBugCheck(XX)
记录上下文
Guest OS
Hypervisor
内核异常检测
• 当系统内核发生崩溃时记录关键上下文
已知漏洞检测
• 精确识别使用已知漏洞进行利用的任务
用户态利用检测
• 堆喷射阈值检测
• 导出地址表过滤
• 导入地址表过滤
• ROP 检测
• Flash 针对性检测
• Vector Length 检测
• ByteArray Length 检测
• LoadBytes 转储
• 其他检测功能
• VBScript 针对性检测
• ……
检测结果告警
高级威胁自动化平台
检测结果告警
高级威胁自动化平台
如何使用沙箱发现 0day 漏洞？
从 CVE-2017-0199 说起…
沙箱的优势
• 多环境
• 各版本 Windows
• 各版本 Office
• 各版本 Flash
• 动态执行
• 模拟交互
• 反静态混淆 (特别是 RTF 文档)
• 记录和还原现场
• 精确
• 漏洞和利用的识别
• 自动化
• 自动展示进程行为
• 自动转储文件
• 自动转储 LoadBytes 加载的利用代码
搭建自动化检测系统
• 历史事件研究
• 历史 0day/1day 研究
• 数据源
• 360 的海量数据
• 高质量的共享数据源
• 分析系统
• 沙箱
• 推送系统
• 人工确认
• 相关漏洞分析员
近6年的相关漏洞
2013
2014
2015
2016
2017
2018
CVE-2013-0634
CVE-2013-3906
CVE-2014-1761
CVE-2014-4114
CVE-2014-6352
CVE-2015-1642
CVE-2015-2424
CVE-2015-2545
CVE-2015-5119
CVE-2015-5122
CVE-2016-4117
CVE-2016-7193
CVE-2016-7855
CVE-2017-0199
CVE-2017-0261
CVE-2017-0262
CVE-2017-8570
CVE-2017-8759
CVE-2017-11292
CVE-2017-11826
CVE-2017-11882
CVE-2018-0798
CVE-2018-0802
CVE-2018-4878
CVE-2018-5002
CVE-2018-8174
CVE-2018-8373
CVE-2018-15982
历史漏洞归类
RTF 控制字解析问题
Open XML 标签解析问题
ActiveX 控件解析问题
Office 嵌 Flash 0day
CVE-2010-3333
CVE-2014-1761
CVE-2016-7193
CVE-2015-1641
CVE-2017-11826
CVE-2012-0158
CVE-2012-1856
CVE-2015-2424
CVE-2017-11882
CVE-2018-0798
CVE-2018-0802
CVE-2011-0609
CVE-2011-0611
CVE-2013-0634
HackingTeam 泄露代码
CVE-2016-4117
CVE-2016-7855
CVE-2018-4878
CVE-2018-5002
CVE-2018-15982
TIFF 图片解析问题
EPS 文件解析问题
Moniker
其他 Office 逻辑漏洞
CVE-2013-3906
CVE-2015-2545
CVE-2017-0261
CVE-2017-0262
CVE-2017-0199
CVE-2017-8570
CVE-2017-8759
CVE-2018-8174
CVE-2018-8373
CVE-2014-4114
CVE-2014-6352
CVE-2015-0097
历史总是相似的
RTF 控制字解析问题
Open XML 标签解析问题
ActiveX 控件解析问题
Office 嵌 Flash 0day
CVE-2010-3333
CVE-2014-1761
CVE-2016-7193
CVE-2015-1641
CVE-2017-11826
CVE-2012-0158
CVE-2012-1856
CVE-2015-2424
CVE-2017-11882
CVE-2018-0798
CVE-2018-0802
CVE-2011-0609
CVE-2011-0611
CVE-2013-0634
HackingTeam 泄露代码
CVE-2016-4117
CVE-2016-7855
CVE-2018-4878
CVE-2018-5002
CVE-2018-15982
TIFF 图片解析问题
EPS 文件解析问题
Moniker
其他 Office 逻辑漏洞
CVE-2013-3906
CVE-2015-2545
CVE-2017-0261
CVE-2017-0262
CVE-2017-0199
CVE-2017-8570