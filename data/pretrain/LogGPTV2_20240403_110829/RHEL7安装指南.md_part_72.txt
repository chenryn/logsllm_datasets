            :::
            ::: para
            例如：`/`{.filename} 或者 `/home`{.filename}
            :::
        -   ::: para
            `swap`{.literal}
            :::
            ::: para
            该分区被用作交换空间。
            :::
            ::: para
            要自动决定 swap 分区的大小，使用 `--recommended`{.option}
            选项：
            :::
            ``` programlisting
            swap --recommended
            ```
            ::: para
            使用 `--hibernation`{.option} 选项自动决定 swap
            分区的大小，同时还允许您的系统有附加空间以便可以休眠：
            :::
            ``` programlisting
            swap --hibernation
            ```
            ::: para
            分配的分区大小将与 `--recommended`{.option} 加上系统 RAM
            量相等。
            :::
            ::: para
            有关这些命令分配的 swap 大小请查看 [第 6.14.4.5 节
            "推荐的分区方案"](#chap-installing-using-anaconda-x86.html#sect-recommended-partitioning-scheme-x86){.xref}（AMD64
            和 Intel 64 系统）；[第 11.15.4.5 节
            "推荐分区方案"](#chap-installing-using-anaconda-ppc.html#sect-recommended-partitioning-scheme-ppc){.xref}（IBM
            Power Systems 服务器）；[第 15.15.3.5 节
            "推荐的分区方案"](#chap-installing-using-anaconda-s390.html#sect-recommended-partitioning-scheme-s390){.xref}（IBM
            System z）。
            :::
        :::
    :::
    ::: para
    这些选项如下所示：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--noformat`{.option} - 使用现有逻辑卷且不要对其进行格式化。
        :::
    -   ::: para
        `--useexisting`{.option} - 使用现有逻辑卷并重新格式化它。
        :::
    -   ::: para
        `--fstype=`{.option} -
        为逻辑卷设置文件系统类型。有效值有：`xfs`{.literal}、`ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}、`swap`{.literal}
        和 `vfat`{.literal}。
        :::
    -   ::: para
        `--fsoptions=`{.option} -
        指定在挂载文件系统时所用选项的自由格式字符串。将这个字符串复制到安装的系统的
        `/etc/fstab`{.filename} 中，并使用括号括起来。
        :::
    -   ::: para
        `--mkfsoptions=`{.option} -
        指定要提供的附加参数，以便在这个分区中建立文件系统。没有对任何参数列表执行任何操作，因此必须使用可直接为
        [**mkfs**]{.application}
        程序提供的格式。就是说可使用逗号分开或双引号分开的多个选项，要看具体文件系统。
        :::
    -   ::: para
        `--label=`{.option} - 为逻辑卷设置标签。
        :::
    -   ::: para
        `--grow`{.option} -
        会让逻辑卷使用所有可用空间（若有），或使用设置的最大值（如果指定了最大值）。必须给出最小值，可使用
        `--percent=`{.option} 选项或 `--size=`{.option} 选项。
        :::
    -   ::: para
        `--size=`{.option} - 以 MB 单位的逻辑卷大小。这个选项不能与
        `--percent=`{.option} 选项一同使用。
        :::
    -   ::: para
        `--percent=`{.option} -
        考虑任何静态大小逻辑卷时的逻辑卷大小，作为卷组中剩余空间的百分比。这个选项不能与
        `--size=`{.option} 选项一同使用。
        :::
        ::: important
        ::: admonition_header
        **重要**
        :::
        ::: admonition
        ::: para
        创建新逻辑卷时，必须使用 `--size=`{.option}
        选项静态指定其大小，或使用 `--percent=`{.option}
        选项指定剩余可用空间的百分比。不能再同一逻辑卷中同时使用这些选项。
        :::
        ::: para
        注：这个行为只能用于 Red Hat Enterprise Linux 7.1
        以及之后的版本。在 Red Hat Enterprise Linux 7.0
        中，这两个选项的互动方式不同。
        :::
        :::
        :::
    -   ::: para
        `--maxsize=`{.option} - 当将逻辑卷被设置为可扩充时以 MB
        为单位的最大值。在这里指定一个整数值，如`500`{.literal}（不要在数字后添加单位）。
        :::
    -   ::: para
        `--recommended`{.option} - 创建 `swap`{.systemitem}
        逻辑卷时可采用这个选项，以根据您的系统硬件自动决定这个卷的大小。有关推荐方案详情请查看
        [第 6.14.4.5 节
        "推荐的分区方案"](#chap-installing-using-anaconda-x86.html#sect-recommended-partitioning-scheme-x86){.xref}（AMD64
        和 Intel 64 系统）； [第 11.15.4.5 节
        "推荐分区方案"](#chap-installing-using-anaconda-ppc.html#sect-recommended-partitioning-scheme-ppc){.xref}（IBM
        Power Systems）； 和 [第 15.15.3.5 节
        "推荐的分区方案"](#chap-installing-using-anaconda-s390.html#sect-recommended-partitioning-scheme-s390){.xref}（IBM
        System z）。
        :::
    -   ::: para
        `--resize`{.option} -
        重新定义逻辑卷大小。如果使用这个选项，则必须还指定
        `--useexisting`{.option} 和 `--size`{.option}。
        :::
    -   ::: para
        `--encrypted`{.option} - 指定该逻辑卷应该用
        `--passphrase=`{.option}
        选项提供的密码进行加密。如果没有指定密码短语，安装程序将使用
        `autopart --passphrase`{.command}
        命令指定默认系统级密码，如果没有设定默认密码则会停止安装，并提示输入密码短语。
        :::
        ::: note
        ::: admonition_header
        **注意**
        :::
        ::: admonition
        ::: para
        加密一个或多个分区时，[**Anaconda**]{.application} 尝试收集 256
        字节熵，以保证对分区安全加密
        :::
        ::: para
        与安装系统互动可加速此进程（使用键盘输入或移动鼠标）。如果要在虚拟机中安装系统，则可添加
        virtio-rng 设备（虚拟随机数生成器），如 [《Red Hat
        Enterprise Linux 7.1;
        虚拟化部署及管理指南》](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/sect-Guest_virtual_machine_device_configuration-Random_number_generator_device.html)所述。
        :::
        :::
        :::
    -   ::: para
        `--passphrase=`{.option} -
        指定在加密这个逻辑卷时要使用的密码短语。必须与
        `--encrypted`{.option} 选项一同使用，单独使用这个选项无效。
        :::
    -   ::: para
        `--cipher=`{.option} - 指定如果对 [**Anaconda**]{.application}
        默认 aes-xts-plain64 不满意时要使用的加密类型。这个选项必须与
        `--encrypted`{.option} 选项一同使用，单独使用无效。 [《Red Hat
        Enterprise Linux 7
        安全指南》](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/index.html)中有可用加密类型列表，但
        Red Hat 强烈推荐您使用 aes-xts-plain64 或者
        aes-cbc-essiv:sha256。
        :::
    -   ::: para
        `--escrowcert=URL_of_X.509_certificate`{.option} -
        将所有加密卷数据加密密钥作为文件保存在 `/root`{.filename}
        中，使用来自 *URL_of_X.509_certificate* 指定的 URL 的 X.509
        证书加密。每个加密卷的密钥都作为单独的文件保存。只有指定
        `--encrypted`{.option} 时这个选项才有意义。
        :::
    -   ::: para
        `--backuppassphrase`{.option} -
        为每个加密卷添加随机生成的密码短语。将这些密码保存在
        `/root`{.filename} 目录下的独立文件中，使用
        `--escrowcert`{.option} 指定的 X.509 证书加密。只有指定
        `--escrowcert`{.option} 时这个选项才有意义。
        :::
    -   ::: para
        `--thinpool`{.option} - 创建精简逻辑卷。（使用 `none`{.literal}
        挂载点）。
        :::
    -   ::: para
        `--metadatasize=size`{.option} -
        为新的精简池设备指定元数据大小（单位 MiB）。
        :::
    -   ::: para
        `--chunksize=size`{.option} - 为新的精简池设备指定块大小（单位
        KiB）。
        :::
    -   ::: para
        `--thin`{.option} - 创建精简逻辑卷。（要求使用
        `--poolname`{.option}）
        :::
    -   ::: para
        `--poolname=name`{.option} -
        指定在其中创建精简逻辑卷的精简池名称。需要 `--thin`{.option}
        选项。
        :::
    -   ::: para
        `--profile=name`{.option} -
        指定与精简逻辑卷配合使用的配置文件名称。如果使用此选项，还要用于给定逻辑的卷元数据中包含该名称。默认情况下，可使用的配置文件为在
        `/etc/lvm/profile`{.filename} 目录中定义的 `default`{.literal}
        和 `thin-performance`{.literal}。详情请查看
        `lvm(8)`{.systemitem} 手册页。
        :::
    -   ::: para
        `--cachepvs=`{.option} -
        用逗号分开的物理卷列表，应作为这个卷的缓存使用。
        :::
    -   ::: para
        `--cachemode=`{.option} - 指定应使用哪种模式缓存这个逻辑卷 -
        可以是 `writeback`{.literal}，也可以是
        `writethrough`{.literal}。
        :::
        ::: note
        ::: admonition_header
        **注意**
        :::
        ::: admonition
        ::: para
        有关缓存的逻辑卷及其模式的详情，请查看
        `lvmcache(7)`{.systemitem} 手册页。
        :::
        :::
        :::
    -   ::: para
        `--cachesize=`{.option} - 附加到该逻辑卷的缓存大小，单位为
        MiB。这个选项需要 `--cachepvs=`{.option} 选项。
        :::
    :::
    ::: para
    首先创建分区，然后创建逻辑卷组，再创建逻辑卷。例如：
    :::
    ``` programlisting
    part pv.01 --size 3000
    volgroup myvg pv.01
    logvol / --vgname=myvg --size=2000 --name=rootvol
    ```
    ::: para
    首先创建分区，然后创建逻辑卷组，再创建逻辑卷以占据逻辑组里剩余的 90%
    空间。例如：
    :::
    ``` programlisting
    part pv.01 --size 1 --grow
    volgroup myvg pv.01
    logvol / --vgname=myvg --name=rootvol --percent=90
    ```
[`mediacheck`{.command}（自选）[]{#chap-kickstart-installations.html#idm139805868754944 .indexterm}]{.term}
:   ::: para
    如果给出这个选项，则该命令将在启动安装前强制安装程序执行介质检查（`rd.live.check`{.option}）。这个命令需要执行安装，因此默认禁用此选项。
    :::
[`network`{.command}（自选）[]{#chap-kickstart-installations.html#idm139805791843104 .indexterm}]{.term}
:   ::: para
    为目标系统配置网络信息并在安装程序环境中激活网络设备。在第一个
    `network`{.command}
    命令中指定的设备将被自动激活。例如：在网络安装或者使用 VNC
    的安装中。`--activate`{.option} 选项还可以明确要求激活该设备。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    有几个可用来通过持久名称识别网络设备的网络设备命名方法标准，比如
    `em1`{.literal} 或者
    `wl3sp0`{.literal}。有关这些标准的详情请查看[《Red Hat
    Enterprise Linux 7
    联网指南》](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/ch-Consistent_Network_Device_Naming.html)。
    :::
    :::
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--activate`{.option} - 在安装程序环境中激活这个设备。
        :::
        ::: para
        如果在已经被激活的设备（例如使用引导选项配置的接口，以便系统可以读取
        Kickstart 文件）之使用 `--activate`{.option} 选项，则将使用
        Kickstart 文件中指定的内容重新激活这个设备。
        :::
        ::: para
        使用 `--nodefroute`{.option} 选项来阻止设备使用默认路由。
        :::
    -   ::: para
        `--bootproto=`{.option} -
        `dhcp`{.literal}、`bootp`{.literal}、`ibft`{.literal} 或者
        `static`{.literal} 之一。默认选项为
        `dhcp`{.literal}；`dhcp`{.literal} 和 `bootp`{.literal}
        选项作用相同。要禁用设备的 `ipv4`{.literal} 配置，请使用
        `--noipv4`{.option} 选项。
        :::
        ::: note
        ::: admonition_header
        **注意**
        :::
        ::: admonition
        ::: para
        这个选项设置该设备的 ipv4 配置。如果要配置 ipv6，则请使用
        \--ipv6 和 \--ipv6gateway 选项。
        :::
        :::
        :::
        ::: para
        DHCP 方法使用 DHCP 服务器系统来获取其联网配置。BOOTP
        方法和它很相似，要求 BOOTP 服务器提供网络配置。要让系统使用
        DHCP：
        :::
        ``` programlisting
        network --bootproto=dhcp
        ```
        ::: para
        要让某机器使用 BOOTP 获取联网配置，请在 Kickstart
        文件中使用以下行：
        :::
        ``` programlisting
        network --bootproto=bootp
        ```
        ::: para
        要让某机器使用 iBFT 中指定的配置，请使用：
        :::
        ``` programlisting
        network --bootproto=ibft
        ```
        ::: para
        `static`{.literal}方法要求您在 Kickstart 文件中指定 IP
        地址、掩码、网关和命名服务器。这个信息是静态的，且在安装期间和安装之后使用。
        :::
        ::: para
        所有静态联网配置信息都必须在[*一*]{.emphasis}行中指定；您不能使用反斜杠（`\`{.literal}）换行。
        :::
        ``` programlisting
        network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=10.0.2.1
        ```
        ::: para
        还可以同时配置多个名称服务器。要做到这一点，请为每个要配置的名称服务器使用
        `--nameserver=`{.option} 选项：
        :::
        ``` programlisting
        network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver=192.168.2.1 --nameserver=192.168.3.1
        ```
    -   ::: para
        `--device=`{.option} - 使用 `network`{.command}
        命令指定要配置的设备（并最终使用 [**Anaconda**]{.application}
        启动）。
        :::
        ::: para