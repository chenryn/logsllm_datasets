principle of PyCRA and a comparison between our approach
and PyCRA are presented in Section VII-D.
B. System Model
Figure 3 presents a system model of the sensor system that
is equipped with our detection method. The system model
consists of a sensor and a microcontroller. The sensor is driven
Fig. 2: An n-bit (n = 4) secret sequence of zeros and ones
is converted to a Manchester encoded code, which is toggled
between a high voltage level and a low voltage level (0 V). The
sensor output carries the information of the physical quantity
and the noise. After digitization, a digitized signal is obtained.
otherwise stated, sensor/sensors represent powered passive
sensor/sensors hereafter.
A. Randomized Sensor Output
Before introducing our approach, we brieﬂy recap how an
attacker can change a sensor output of a sensor system. A
sensor system consists of two essential modules: a sensor and
a microcontroller (see details in Section II-A). The sensor
readings are transmitted to the microcontroller through a
wire connecting the output of the sensor and the input of
the microcontroller. Unfortunately, the wire is sensitive to
electromagnetic interference (EMI), and EMI can affect the
sensor system by inducing voltages on the wire. An attacker
can utilize the wire to inject an attacking signal into the sensor
output to change the sensor readings.
We turn the sensor on and off. Turning on means that the
sensor is biased at a high voltage; turning off means that the
sensor is biased at 0 V (or other known voltage levels). When
the sensor is on, the sensor measures the physical quantity
and the sensor output carries the information of the physical
quantity. As the sensor is off, the sensor output becomes a
constant signal at a speciﬁc voltage level. Suppose that the
attacker injects an attacking signal to the sensor system when
the sensor is off, a disturbance will appear in the ﬂat sensor
output. The microcontroller can easily detect such disturbances,
and hence the attacking signal is discovered. If the sensor
system can randomly turn off the sensor, the attacker has to
guess when the sensor is off so that she can avoid sending an
attacking signal to the sensor system; otherwise, a mistake of
causing an uneven sensor output when the sensor is off will
directly unveil the attacker herself to the sensor system.
We require that the microcontroller can measure the physical
quantity and monitor the attacking signal by turns, and hence
the sensor should be switched between the on and the off states.
We use a Manchester encoded code [3] as the bias voltage
for the sensor, because the Manchester encoded code toggles
between a high voltage level and 0 V at the midpoint of each
Fig. 3: A sensor system that is equipped with the detection method consists of a sensor and a microcontroller. The bias voltage
of the sensor is controlled by the microcontroller. In the attack signal detector, unequal non-zero samples imply an attack. Also,
a changed zero sample indicates an attack.
by a bias voltage that is controlled by the microcontroller.
An output of the sensor is used to send a measurement to the
microcontroller, which checks the existence of attacking signals
and recovers the physical quantity from the measurement.
The microcontroller has three blocks including a bias voltage
generator, an ADC, and an attack signal detector. The bias
voltage generator encodes an n-bit secret sequence into a
Manchester encoded code, which is the bias voltage for the
sensor. The ADC digitizes the sensor output and transmits the
digitized data to the attack signal detector to check whether
an attacking signal exists. The attack signal detector has
two outputs: value represents a measurement of the physical
quantity; valid indicates whether value is ready to be read. If
no attacking signal is detected, the measurement is assigned to
value, and then valid is set to true. Hence the sensor system
knows that value is valid to be further processed. However, if
an attacking signal is detected in a measurement, valid is set
to false throughout that measurement, which means that value
is invalid to be read. Also, the microcontroller will be alerted
that the sensor system is under an attack.
In our system model, we assume that the physical quantity
remains unchanged in a measurement. Even though the physical
quantity varies, if the duration of a measurement is short
enough, we can also regard the physical quantity as constant.
An example of a constant physical quantity is room temperature.
The temperature changes slowly over a long period; however,
in a short time such as 0.01 s, the temperature is unchanged.
For each measurement, the microcontroller generates n-bit
secret sequence, and accordingly, the Manchester encoded code
has n clock cycles. Two samples are digitized from each clock
cycle or sub-measurement, and hence the sampling rate of the
ADC is two times larger than the clock rate of the Manchester
encoded code. In practice, the sampling rate of the ADC has
an upper limit, and thus the clock rate of the Manchester
encoded code also has a maximal value, which is a half of the
fastest sampling rate. The shortest duration of n clock cycles is
determined by the fastest sampling rate of the ADC. To apply
our detection method, it is essential to ensure that the physical
quantity is unchanged within the n clock cycles.
C. Adversarial Model
The objective of the attacker is manipulating the waveform
of the sensor output without being detected by the sensor
system. We suppose that the attacker cannot access the sensor
system physically. Also, we assume that the attacker has no
information about the n-bit secret sequence. Given any sub-
measurement, we assume that the attacker knows voltage levels,
but she does not know whether the voltage level transitions
from the high voltage to 0 V or from 0 V to the high voltage
in the midpoint of the sub-measurement (see Figure 2). Thus,
the attacker has to guess the direction of the voltage level
transition in each sub-measurement. Moreover, the attacker
can deliberately inject a crafted signal into the sensor system,
and hence the attacker can change the waveform of the sensor
output as she wishes. Also, the attacker knows when the sensor
module starts and stops transmitting the measurement, and she
can align the crafted signal with the sensor output precisely.
IV. ATTACK DETECTION
After receiving the digitized sensor output, the attack signal
detector aligns it with the corresponding secret sequence. As
shown in Figure 2, each digit in the secret sequence corresponds
to two samples in the digitized sensor output. A digit 1 means
that the corresponding two samples are zero and non-zero in a
consecutive order; a digit 0 indicates a non-zero sample and a
zero sample in a consecutive order. Thus, the microcontroller
knows the order of all samples. When no attacking signal
exists, the digitized sensor output satisﬁes two requirements:
1) All non-zero samples are equal.
2) All zero samples are zero.
Once an attack occurs, either sample in a sub-measurement
can be altered. The attack signal detector ﬁrst checks non-
zero samples. As shown in Figure 4, if the attacker only
changes several non-zero samples in the measurement, the
signal formed by all non-zero samples become non-constant.
Fig. 4: A sensor output of a constant physical quantity. An
attacker shifts one non-zero sample, and the signal formed by
all non-zero samples becomes non-constant.
(a) A sensor output of a non-constant physical quantity.
Unequal non-zero samples imply that an attack occurs. To
bypass the detection, the attacker is forced to increase or
decrease all non-zero samples to the same voltage level. It
is possible for the attacker to make a mistake and change a
zero sample. Once a zero sample is altered by the attacker
accidentally, the attack will be detected.
After checking the digitized sensor output, if an attack is
discovered, the measurement is discarded. In contrast, if no
attacking signal is detected, a quantiﬁcation of the physical
quantity can be obtained. As it is discussed in Section III-A, the
quantiﬁcation is the value of a non-zero samples; however, in
practice, considering the existence of noise, it can be calculated
by averaging all non-zero samples.
A smart attacker must guess whether a sample is zero or
non-zero. To avoid being detected, the attacker must not affect
any zero sample, and she must alter all non-zero samples to
keep them the same. In Figure 3, we present an example of
detecting an attacking signal in the sensor system. The attacker
aims to alter the ﬁrst and the third sub-measurements of the
sensor output. In the ﬁrst sub-measurement, the attacker makes
a correct guess, and a high-frequency signal is added to the
non-zero half cycle. However, in the third sub-measurement,
the attacker makes a wrong guess and adds the high-frequency
signal to the zero half cycle. After digitization, two samples are
shifted up: the non-zero sample in the ﬁrst sub-measurement
and the zero sample in the third sub-measurement. Compared
with other non-zero samples, the non-zero sample in the
ﬁrst sub-measurement has a different value, and the attack
signal detector can discover the attack immediately. In the
third sub-measurement, the second sample should have been
zero; however, it is shifted to a non-zero value, and the
microcontroller can notice the change. As a result, the attacking
signal can be detected.
Interfering with the Bias: As described above, the detection
method is used to spot attacking signals that are injected into
the sensor system through the wire connecting the sensor output
and the ADC. However, in practice, the wire controlling the
bias of the sensor may also be an unintentional antenna. An
attacking signal that is injected into this wire may alter the
voltage levels of several speciﬁc periods of the Manchester
encoded code. Further, the corresponding periods of the sensor
output are impacted. For example, some periods that should
have been at a certain voltage level are at other voltage levels;
some periods that should have been 0 V are not zero. After
digitizing the sensor output, the microcontroller may spot that
non-zero samples are unequal and some zero samples are lifted.
(b) A digital low-pass ﬁlter removes the spikes.
Fig. 5: The attacker alters an non-zero sample in the digitized
sensor output.
Therefore, our method can also detect attacks affecting the
bias. For simplicity, we only regard the wire connecting the
sensor and the ADC as the injection point of an attacking
signal hereafter.
A. Security Analysis
Only when the attacker changes all non-zero samples without
inﬂuencing any zero sample, can she avoid being detected by
the sensor system. In this section, we prove that the attacker
can bypass our detection method with a negligible probability.
For a constant physical quantity, all non-zero samples in
a measurement have the same voltage level. To avoid being
detected by the sensor system, the attacker must change all non-
zero samples to the same voltage level. Thus, the attacker must
correctly guess the order of the zero and the non-zero samples
in every sub-measurement. There are two combinations of the
order of samples in a sub-measurement, and the probability of
correctly guessing the order is 1
2. Considering a measurement
with n sub-measurements, the probability of correctly guessing
2n . In other words, the probability of bypassing
the orders is 1
the detection method in one measurement is
2n , which is
negligible. The larger the n is, the more difﬁcult it is for the
attacker to achieve the attack.
1
V. NON-CONSTANT PHYSICAL QUANTITY
In the previous section, we describe our approach regarding
constant physical quantities. However,
there are physical
quantities such as sounds that oscillate rapidly; even though the
sampling rate of an ADC reaches the maximum, the digitized
non-zero samples may have different values in a measurement.
We call such a physical quantity as a non-constant physical
quantity, and an example is shown in Figure 5a.
If the attacker affects either a non-zero sample or a zero
sample in a constant physical quantity, our approach can detect
the attack (see details in Section IV). For a non-constant
physical quantity, unequal non-zero samples do not indicate
an attack anymore. This means that, if the attacker plans to
alter one sample only, she can bypass the detection with a
probability of 1
2. For example, as shown in Figure 5a, the
attacker wants to affect the third clock cycle: if she changes
the non-zero sample, she succeeds; otherwise, changing the
zero sample still leads to an alert of the attack. Compared with
the detection method for a constant physical quantity, the one
for the non-constant source gives a weak security guarantee.
In order to achieve a strong security guarantee, the sampling
rate of the ADC must be large enough so that the physical
quantity can be regarded as constant, and thus the approach
for a constant source applies.
However, in practice, a sensor system may have to handle
non-constant scenarios subject to multiple limitations (e.g.,
sampling rates of ADCs). Then, it is necessary to revise the
approach for non-constant physical quantities to detect attacks
affecting either non-zero or zero samples. In this section, we
describe the revised method. Also, we show that the negative
impacts that are caused by attacking signals can be mitigated.
We analyze the security of our detection method. Finally, we
discuss an additional requirement for the ADC.
A. Attack Detection for Non-constant Physical Quantities
An attacker can change any numbers of non-zero samples.
Without loss of generality, we assume that the attacker plans to
change k (1 ≤ k ≤ n) out of n samples. She can achieve the
modiﬁcation without being detected with a probability of 1
2k
(see details in Section V-B). When a few samples are changed,
as shown in Figure 5a, the modiﬁed sample leads to a spike in
the measured signal. Without knowing any information about
the measured signal, we can do nothing to detect the change.
However, if we know concrete characteristics that can describe
the behavior of the non-constant signal, we can recognize
modiﬁed samples as outliers. As depicted in Figure 5b, if we
know the bandwidth of the measured signal, we can recognize
the sample that causes a spike beyond the band as an outlier.
Moreover, if we have a model of the measured signal, we
can recognize the sample that fails to ﬁt the model as an
outlier. Despite that a few modiﬁed samples form spikes in the
measured signal, the major information of the physical quantity