如需查看更多关于 Whitenoise 的信息，[请查看文档](http://whitenoise.evans.io/en/latest/index.html)。
### 开发 REST API 的最佳工具：[Django REST Framework](http://www.django-rest-framework.org/)
REST API 正在迅速成为现代 Web 应用的标准功能。 API 就是简单的使用 JSON 对话而不是 HTML，当然你可以只用 Django 做到这些。你可以制作自己的视图，设置合适的 `Content-Type`，然后返回 JSON 而不是渲染后的 HTML 响应。这是在像 [Django Rest Framework](http://www.django-rest-framework.org/)（下称 DRF）这样的 API 框架发布之前，大多数人所做的。
如果你对 Django 的视图类很熟悉，你会觉得使用 DRF 构建 REST API 与使用它们很相似，不过 DRF 只针对特定 API 使用场景而设计。一般的 API 设置只需要一点代码，所以我们没有提供一份让你兴奋的示例代码，而是强调了一些可以让你生活的更舒适的 DRF 特性：
* 可自动预览的 API 可以使你的开发和人工测试轻而易举。你可以查看 DRF 的[示例代码](http://restframework.herokuapp.com/)。你可以查看 API 响应，并且不需要你做任何事就可以支持 POST/PUT/DELETE 类型的操作。
* 便于集成各种认证方式，如 OAuth, Basic Auth, 或API Tokens。
* 内建请求速率限制。
* 当与 [django-rest-swagger](http://django-rest-swagger.readthedocs.org/en/latest/index.html) 组合使用时，API 文档几乎可以自动生成。
* 广泛的第三方库生态。
当然，你可以不依赖 DRF 来构建 API，但我们无法想象你不去使用 DRF 的原因。就算你不使用 DRF 的全部特性，使用一个成熟的视图库来构建你自己的 API 也会使你的 API 更加一致、完全，更能提高你的开发速度。如果你还没有开始使用 DRF, 你应该找点时间去体验一下。
### 基于 Django 的最佳 CMS：[Wagtail](https://wagtail.io/)
Wagtail 是当下 Django CMS（内容管理系统）世界中最受人青睐的应用，并且它的热门有足够的理由。就像大多数的 CMS 一样，它具有极佳的灵活性，可以通过简单的 Django 模型来定义不同类型的页面及其内容。使用它，你可以从零开始在几个小时而不是几天之内来和建造一个基本可以运行的内容管理系统。举一个小例子，为你公司的员工定义一个员工页面类型可以像下面一样简单：
```
from wagtail.wagtailcore.models import Page
from wagtail.wagtailcore.fields import RichTextField
from wagtail.wagtailadmin.edit_handlers import FieldPanel, MultiFieldPanel
from wagtail.wagtailimages.edit_handlers import ImageChooserPanel 
class StaffPage(Page):
    name = models.CharField(max_length=100)
    hire_date = models.DateField()
    bio = models.RichTextField()
    email = models.EmailField()
    headshot = models.ForeignKey('wagtailimages.Image', null=True, blank=True) 
    content_panels = Page.content_panels + [
                                FieldPanel('name'),
                                FieldPanel('hire_date'),
                                FieldPanel('email'),
                                FieldPanel('bio',classname="full"),
                                ImageChoosePanel('headshot'),
                                ] 
```
然而，Wagtail 真正出彩的地方在于它的灵活性及其易于使用的现代化管理页面。你可以控制不同类型的页面在哪网站的哪些区域可以访问，为页面添加复杂的附加逻辑，还天生就支持标准的适应/审批工作流。在大多数 CMS 系统中，你会在开发时在某些点上遇到困难。而使用 Wagtail 时，我们经过不懈努力找到了一个突破口，使得让我们轻易地开发出一套简洁稳定的系统，使得程序完全依照我们的想法运行。如果你对此感兴趣，我们写了一篇[深入理解 Wagtail][17。
### 提供社交账户登录的最佳工具：[django-allauth](http://www.intenct.nl/projects/django-allauth/)
django-allauth 是一个能够解决你的注册和认证需求的、可重用的 Django 应用。无论你需要构建本地注册系统还是社交账户注册系统，django-allauth 都能够帮你做到。
这个应用支持多种认证体系，比如用户名或电子邮件。一旦用户注册成功，它还可以提供从无需认证到电子邮件认证的多种账户验证的策略。同时，它也支持多种社交账户和电子邮件账户。它还支持插拔式注册表单，可让用户在注册时回答一些附加问题。
django-allauth 支持多于 20 种认证提供者，包括 Facebook、Github、Google 和 Twitter。如果你发现了一个它不支持的社交网站，很有可能通过第三方插件提供该网站的接入支持。这个项目还支持自定义后端，可以支持自定义的认证方式，对每个有定制认证需求的人来说这都很棒。
django-allauth 易于配置，且有[完善的文档](http://django-allauth.readthedocs.org/en/latest/)。该项目通过了很多测试，所以你可以相信它的所有部件都会正常运作。
你有最喜爱的 Django 包吗？请在评论中告诉我们。
### 关于作者
![](/data/attachment/album/201608/13/203556gqekcq03cbebf7ef.png)
Jeff Triplett 劳伦斯，堪萨斯州 
我在 2007 年搬到了堪萨斯州的劳伦斯，在 Django 的发源地—— Lawrence Journal-World 工作。我现在在劳伦斯市的 [Revolution Systems (Revsys)](http://www.revsys.com/) 工作，做一位开发者兼顾问。
我是[北美 Django 运动基金会(DEFNA)](http://defna.org/)的联合创始人，2015 和 2016 年 [DjangoCon US](https://2015.djangocon.us/) 的会议主席，而且我在 Django 的发源地劳伦斯参与组织了 [Django Birthday](https://djangobirthday.com/) 来庆祝 Django 的 10 岁生日。
我是当地越野跑小组的成员，我喜欢篮球，我还喜欢梦见自己随着一道气流游遍美国。
*Jacob Kaplan-Moss 和 Frank Wiles 也参与了本文的写作。*
---
via: 
作者：[Jeff Triplett](https://opensource.com/users/jefftriplett) 译者：[StdioA](https://github.com/StdioA) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出