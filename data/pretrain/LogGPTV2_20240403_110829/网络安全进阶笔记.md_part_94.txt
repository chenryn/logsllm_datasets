result+-8*document.writeln(*ctd>?
*;
---
## Page 466
第9章举一反三学语言：以.NET为例
result+=@m.Groups[*text*].Value.Trim(）
.Replace（color='#6495ED'>*,>）.Replace（*size=2>*,*>）;
result+=9*;
result*=9m.Groups[*date*].Value.Trim（);
（.6=+ans
1++1
result+=9"document.writeln(*):*;
returnresult;//返回结果字符串
在上述代码中，将相同部分的代码转换为正则表达式的常量，将不同部分的代码转换为正
则表达式的变量，从而通过正则表达式实现对文字内容的过滤，并将过滤后的内容进行重整后
输出。通过这种方法，用户通过测览器所看到的内容，是经过筛选后的重新生成的静态页面，
这样也保证了客户端的安全性。
(3）将Test.aspx进行编译后，建立一个静态页面进行测试，在浏览器中运行Test.html，
满足条件的文章标题以JavaScript格式输出为静态页面，设计者可根据页面需要，自由定义输
出文字的样式。参考代码如下：
总之，在实际应用中，使用上述方法替代iframe的传统调用方式，避免了各种软件的限制，
具有很好的安全性。当然，还可以灵活运用各种表达式，防范多种潜在的恶意脚本，从而轻松
游走于网络之间。
9.3.3实战网页盗链攻与防
在网络冲浪的过程中，有时候明明使用了正确的图片地址，却常常会遇到无法测览的问题。
比如，显示一个红色的大叉，或图片显示“此图片仅限于**网站用户使用”，当然，还有更
纳闷的事情，比如明明用搜索引擎找到了音视频资源的真实地址，却提示不能正常下载。这里
面有什么玄机呢？如果首先能够排除地址的问题，这里就要考虑是否遇上防盗链系统了。盗链
与防盗链，也是一个很常见的攻与防的安全话题。下面，从这两个角度对盗链系统和防盗链系
统进行分析。
而且也表明用了计谋和智慧：“白狼”当然是不多见的狼了，稀少也就珍贵，表明“收获”很
供商自己不提供服务的内容，面通过技术手段，绕过其他有利益的最终用户界面，直接在自己
的界面上向最终用户提供其他服务提供商的服务内容，从而获取最终用户的浏览和点击率。受
1.为什么会存在盗链
利字当头，从根本上讲，盗链就是钻了HTTP协议的空子。仔细分析我们的测览过程就可
461
---
## Page 467
网络安全进阶笔记
以发现，被测览的页面并不是一次性全部传送到客户端。如果客户请求的是一个带有许多图片
和其他信息的页面，那么，最先的一个HTTP请求被传送回来的是这个页面的HTML文本。
客户端浏览器对这段文本解释执行后，如果发现其中还有其他文件，客户端浏览器会再发送一
条或者更多的HTTP请求。当这些请求被处理后，其他文件才会被传送到客户端，最后浏览器
将这些文件放到页面的正确位置，可见，一个完整的页面要经过发送多条HTTP请求才能被完
整显示。如图9.35所示。
1.用户请求URL
Browses
2.HTML页
HTT?
Clirt
3.HTM页至中的各种URL
Server
4.通回文件
图9.35浏览过程分析
正是这个浏览过程，给了盗链的机会。进一步分解上面的浏览过程，具体如下：
中T（1）
(2）服务器端接收到申请并查询资源，然后将资源转发给客户端浏览器。
（3）浏览器接收完文件之后，启动播放软件并播放相关的资源文件。或者测览器直接启动
播放软件插件，同时直接将URL传递给播放软件插件，并由播放软件插件跟服务器进行交互，
一边下载一边播放。
这个流程显示了一些明显的缺陷。首先，服务器和客户机都用的是公开性的软件，难以加
载有效的防盗链控制。其次，传输过程中信息传递用的是公开的协议，资源的发布使用的也是
公开的描述格式。最后，资源通常都是没有经过特别加解密的。因此，给了盗链者可乘之机。
根据盗链的形式的不同，可以简单分成两类：
。
常规盗链。这种盗链比较初级，只盗用某个或某些网站的链接，只需在自己的页面嵌
入别人的链接即可。
·分布式盗链。分布式盗链设计复杂，难度相对较大。在这种盗链方式中，服务提供商
一般会在后台设置专门的爬虫程序在网络上抓取有用的链接，然后存储到自己的数据
库中。最终用户的每次访问，都将其转化为对已有数据库的查询，被查询到的URL
就是被盗链的对象。由于对文件的访问已经被浏览器屏蔽掉了，所以最终用户感觉不
到所访问的链接是被盗取的链接。互联网上任何一台机器都可能成为盗链的对象。
基于上述机制，盗链就成为可能，服务提供商完全可以在自已的页面中嵌入他人的链接，
并显示在自己的页面上，以达到盗链的目的。
2.防盗链一—防的就是盗链
现在，很多大型的网站也已经开始把盗链目光锁定到整个互联网上，窃取互联网上其他机
器的带宽。因此，对于具有正当利益的网站来说，被盗链也许是一件得不偿失的事情，一方面，
网站的带宽被大量消耗，面真正的点击率却很小。那么，如何进行防盗链呢？防盗链系统，顾
名思义就是防范盗链的系统，通过防止别人使用技术手段，让绕开本站资源展示页面的资源链
452
---
## Page 468
第9章举一反三学语言：以.NET为例
接失效。实施防盗链系统后，因为屏蔽了那些盗链的间接资源请求，从而可以大大减轻服务器
及带宽的压力，也正因为如此，越来越多的站点都开始实施防盗链技术。如图9.36所示。
m
www.51.com
我的朋友我的家
关于限1.c国片外的公%：ntp地b5.51.cmac
图9.36提示防盗链的图片
说到这里，不得不提到一个名词。在HTTP协议中，有个和URL网址对应的东西，叫做
Referer（引用网址）。它采用URL的格式，来表示从哪里链接了当前的网页或文件。换句话说，
通过Referer，网站可以检测目标网页访间的来源网页，如果是资源文件，则可以跟踪显示它的
网页地址。有了Referer跟踪来源就好办了，这时就可以通过技术手段来进行处理，一旦检测
到来源不是本站，即进行阻止或者返回指定的页面。
如果想对自己的网站进行防盗链保护，则需要针对不同的情况进行区别对待。如果网站服
务器用的是Apache，那么使用Apache自带的URLRewrite功能，可以很轻松地防止各种盗链，
其原理也是检查Referer，如果Referer的信息来自其他网站，则重新定向到指定图片或网页上。
小知识：Apache是互联网服务器的一种，与微软的IIS服务器竞相抗街，整个互联网有50%以
上的网络服务器都在用Apache.如果服务器使用的是IIS的话，则需要通过第三方插
件来实现防盗链功能了，现在比较常用的一款产品叫做ISAPI_Rewrite，可以实现类似
于Apache的防盗链功能.
3.防盗链技术分析
尽管防盗链技术越来越成熟，破解相对来说难度较大，但在了解原理之后，大多都可以针
对其防范的原理入手进行破解。不定期的更改文件或者目录的名称，这是最原始的反盗链的方
式，也可以在一定程度上有效地防止盗连。但是，这种方法工作量很大，尤其是在文件的更名
过程中，如果刚好有客户正在下载该文件，很可能会引起用户的反感。“客户就是上帝”，既
然得罪不起，就只有悉心研究更有效的防范办法了。
（1）根本之道：保护URL地址
对于任何一个在网络上发布的资源来说，当然会有一个以URL形式表示的字符串。为了
防止本站的资源被盗链，很多网站管理员也是绞尽脑汁，利用各种技术来保护URL地址，比
如，利用密码技术对网络资源进行相应的加密，然后利用本站提供的插件进行解密和播放。下
面是一些常用的方法。
①充分使用脚本技术。脚本技术是黑客的必炼技术，也同样可以为网络管理员所用。很
多人首先会想到的是：对网络资源相关的URL字符串进行加密或编码，这样，在发布网络资
源的网页上，浏览器端源代码中使用的就是经过加密后的URL字符串。当用户在正常情况下
4
---
## Page 469
网络安全进阶笔记
要播放该网络资源时，在客户端事件响应的代码中利用Scrip脚本进行相应的解码，然后再启
动客户端的音频或视频播放软件进行播放。这种技术主要涉及的函数为escape和unescape（当
然也可以使用其他函数）。这种技术虽然在一定程度上防止了网络资源的直接下载，但有一个
致命的缺陷，那就是Script脚本是要被传递到客户端去的。整个解码代码都将直接暴露在测览
器端。因此，稍微懂一点网页技术的人，马上可以制作一个简单的网页，利用Script技术轻松
得到URL。
②文件伪装。文件伪装是目前用得最多的一种反盗链技术，一般会结合服务器端动态脚
本（PHP/JSP/ASP）.比如，首先显示一个终端用户请求文件a.zip的全过程。实际上用户请求的
文件地址，只是一个经过伪装的脚本文件，这个脚本文件会对用户的请求作认证，一般会检查
Session、Cookie或HTTP_REFERER作为判断是否为盗链的依据。而真实的文件实际隐藏在用
户不能够访问的地方，只有用户通过验证以后才会返回给用户。
③采用Flash技术。使用脚本编码时，下载过程中会发送网络资源的请求给服务器端，
因此也可以很轻易地使用网络监听软件监测到资源的URL字符串。还有更有效的办法吗？现
在，在网络上使用较多的就是利用Flash作品或客户端插件的二进制特性，将URL编辑在Flash
作品或插件中，然后再通过插件启动音频或视频播放软件进行播放。这样，也可以很好地保护
网络资源的URL字符串，很多在线视频等网站都利用了这种技术来实现URL的保护，这种技
术相对于Script技术有一定的优势，但也还是很容易地被网络监听软件监听出网络资源的URL
字符串。
④开发专门的客户端插件与服务器端控制组件。随着服务器软件和客户端浏览器的不断
升级，目前可以很方便地开发出相应的以插件形式存在的模块来实现对服务器客户端两方面软
件行为的控制，像IE，可以很方便地利用Activex技术、ATL技术等开发功能非常强大和完善
的插件，来控制客户端测览器的行为。比如，只能客户在线且连接到网站主页时才能使用插件
等。但是，这种技术也有其本身的局限性，一方面是资源发布变得繁项（对网络资源本身进行
加密）。另一方面，客户端的负担将会加重（必须完成解密任务）。在实际操作中，采用加密解密
技术和插件组件等技术，也会使得网站开发成本和难度有所增加。
除了上述方法，还可以在图片中加入水印，显然盗链者可以达到目的，但是却也在为自己
的网站做宣传。这些技术在一定程度上可以有效地防止盗链和防止非法下载。但是，这些方法
也有缺陷，要想用户能正常查看网络上的资源，服务器端都必须发送到客户端，正常客户端都
有一个目录，用来存放网络上下载的临时文件。因此，在客户端还是可以很轻易地通过该文件
目录得到网络资源。因此，需要探索更深层次的防盗链技术。
(2）深层探索：利用动态网站技术防盗链
现在，很多网站都使用了动态开发技术，因此可以考虑在动态加密的过程中防止非法下载。
比如，使用加密认证时，先从客户端获取用户信息，然后根据这个信息和用户请求的文件名字
一起加密成字符串（SessionID）作为身份认证。只有当认证成功以后，服务端才会把用户需要的
文件传送给客户。一般情况下，我们会把加密的SessionID作为URL参数的一部分传递给服
务器，由于这个SessionID和用户的信息挂钩，所以即使别人盗取了链接，该SessionID也无
法通过身份认证，从而达到反盗链的目的。这种方式对于分布式盗链非常有效，
①利用Request对象。Request对象的主要作用是对客户端发送的请求进行建模。因此，
很多客户端相关的信息都可以从该对象中获取。Request对象的ServerVariables方法可以用来
464
---
## Page 470
第9章举一反三学语言：以.NET为例
检测用户发送的请求是从哪个网站发送过来的。通过传递不同的参数，可以很容易地提取到很
多客户端相关的信息。其中有一个参数HTTP_REFERER，这个参数可以显示当前的请求是从
哪个网页中跳转过来的，这样就可以很轻易地判断网站的资源是否被盗链。以下是代码的具体
思路：
Dim UsRef
If UsRefhttp://yahoo.con*Then
UsRef=Request.ServerVariables(*HTTP_REFERER*)
允许访间
Else
不允许访问
End If
<8
②利用Cookies对象和Session对象。每次客户端开启一个网页时，客户端和服务器之