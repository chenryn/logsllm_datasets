### 3.1 在 Ubuntu 系统中使用 apt 命令来安装软件（推荐方式）
你应该看到过一些网站告诉你使用 `sudo apt-get install` 命令在 Ubuntu 系统下安装软件。
实际上这种命令行方式跟第 1 节中我们看到的安装方式一样。只是你没有使用 Ubuntu 软件中心来安装或卸载软件，而是使用的是命令行接口。别的没什么不同。
使用 `apt-get` 命令来安装软件超级简单。你只需要执行下面的命令：
```
sudo apt-get install package_name
```
上面使用 `sudo` 是为了获取“管理员”或 “root” （Linux 专用术语）账号权限。你可以替换 package\_name 为你想要安装的软件包名。
`apt-get` 命令可以自动补全，你只需要输入一些字符并按 tab 键即可， `apt-get` 命令将会列出所有与该字符相匹配的程序。
### 3.2 在 Ubuntu 系统下使用 apt 命令来卸载软件（推荐方式）
在命令行下，你可以很轻易的卸载 Ubuntu 软件中心安装的软件，以及使用 `apt` 命令或是使用 .deb 安装包安装的各种软件。
你只需要使用下面的命令，替换 package-name 为你想要删除的软件名。
```
sudo apt-get remove package_name
```
同样地，你也可以通过按 tab 键来利用 `apt-get` 命令的自动补全功能。
使用 `apt-get` 命令来安装卸载或卸载并不算什么高深的技能。这实际上非常简便。通过这些简单命令的运用，你可以熟悉 Ubuntu Linux 系统的命令行操作，长期使用对你学习 Linux 系统的帮忙也很大。建议你看下我写的一篇很详细的[apt-get 命令使用指导](https://itsfoss.com/apt-get-linux-guide/)文章来进一步的了解该命令的使用。
* 建议阅读：[Linux 系统下 apt-get 命令初学者完全指南](https://itsfoss.com/apt-get-linux-guide/)
### 4.1 使用 PPA 命令在 Ubuntu 系统下安装应用程序
PPA 是   个人软件包归档    （    Personal Package Archive    ） 的缩写。这是开发者为 Ubuntu 用户提供软件的另一种方式。
在第 1 节中出现了一个叫做 ‘ 仓库   （    repository    ） ’ 的术语。仓库本质上是一个软件集。 Ubuntu 官方仓库主要用于提供经过 Ubuntu 自己认证过的软件。 Canonical 合作伙伴仓库包含来自合作厂商提供的各种应用软件。
同时，PPA 允许开发者创建自己的 APT 仓库。当用户在系统里添加了一个仓库时（`sources.list` 中增加了该仓库），用户就可以使用开发者自己的仓库里提供的软件了。
现在你也许要问既然我们已经有 Ubuntu 的官方仓库了，还有什么必要使用 PPA 方式呢？
答案是并不是所有的软件都会自动添加到 Ubuntu 的官方仓库中。只有受信任的软件才会添加到其中。假设你开发出一款很棒的 Linux 应用程序，然后你想为用户提供定期的更新，但是在它被添加到 Ubuntu 仓库之前，这需要花费好几个月的时间（如果是在被允许的情况下）。 PPA 的出现就是为了解决这个问题。
除此之外， Ubuntu 官方仓库通常不会把最新版的软件添加进来。这会影响到 Ubuntu 系统的安全性及稳定性。新版本的软件或许会有影响到系统的[回退](https://en.wikipedia.org/wiki/Software_regression)。这就是为什么在新款软件进入到官方仓库前要花费一定的时间，有时候需要等待几个月。
但是，如果你不想等待最新版出现在 Ubuntu 仓库中呢？这个时候 PPA 就对你有帮助了。通过 PPA 方式，你可以获得该应用程序的最新版本。
通常情况下， PPA 通过这三个命令来进行使用。第一个命令添加 PPA 仓库到源列表中。第二个命令更新软件缓存列表，这样你的系统就可以获取到可用的新版本软件了。第三个命令用于从 PPA 安装软件。
我将演示使用 PPA 方式来安装 [Numix 主题](https://itsfoss.com/install-numix-ubuntu/)：
```
sudo add-apt-repository ppa:numix/ppa
sudo apt-get update
sudo apt-get install numix-gtk-theme numix-icon-theme-circle
```
在上面的实例中，我们添加了一个[Numix 项目](https://numixproject.org/)提供的 PPA 。在更新软件信息之后，我们安装了两个 Numix PPA 中可用的应用程序。
如果你想使用带有图形界面的应用程序，你可以使用 [Y-PPA 应用程序](https://itsfoss.com/easily-manage-ppas-ubuntu-1310-ppa-manager/)。通过它你可以很方便地查询 PPA，添加和删除软件。
注意：PPA 的安全性经常受到争议。我的建议是你应该从受信任的源添加 PPA，最好是从官方软件源添加。
### 4.2 卸载使用 PPA 方式安装的应用程序
在之前的文章[在 Ubuntu 系统下移除 PPA](https://itsfoss.com/how-to-remove-or-delete-ppas-quick-tip/) 中我已经写得很详细了。你可以跳转到这篇文章去深入学习卸载 PPA 方式安装的软件。
这里简要提一下，你可以使用下面的两个命令来卸载：
```
sudo apt-get remove numix-gtk-theme numix-icon-theme-circle
sudo add-apt-repository --remove ppa:numix/ppa
```
第一个命令是卸载通过 PPA 方式安装的软件。第二个命令是从 `source.list` 中删除该 PPA。
### 5.1 在 Ubuntu Linux 系统中使用源代码来安装软件（不推荐使用）
我并不建议你使用[软件源代码](https://en.wikipedia.org/wiki/Source_code)来安装该应用程序。这种方法很麻烦，容易出问题而且还非常地不方便。你得费尽周折去解决依赖包的问题。你还得保留源代码文件，以便将来卸载该应用程序。
但是还是有一些用户喜欢通过源代码编译的方式来安装软件，尽管他们自己本身并不会开发软件。实话告诉你，我曾经也经常使用这种方式来安装软件，不过那都是 5 年前的事了，那时候我还是一个实习生，我必须在 Ubuntu 系统下开发一款软件出来。但是，从那之后我更喜欢使用其它方式在 Ubuntu 系统中安装应用程序。我觉得，对于普通的 Linux 桌面用户，最好不要使用源代码的方式来安装软件。
在这一小节中我将简要地列出使用源代码方式来安装软件的几个步骤：
* 下载你想要安装软件的源代码。
* 解压下载的文件。
* 进入到解压目录里并找到 `README` 或者 `INSTALL` 文件。一款开发完善的软件都会包含这样的文件，用于提供安装或卸载软件的指导方法。
* 找到名为 `configure` 的配置文件。如果在当前目录下，使用这个命令来执行该文件：`./configure` 。它将会检查你的系统是否包含所有的必须的软件（在软件术语中叫做‘依赖包’）来安装该应用程序。（LCTT 译注：你可以先使用 `./configure --help` 来查看有哪些编译选项，包括安装的位置、可选的特性和模块等等。）注意并不是所有的软件都包括该配置文件，我觉得那些开发很糟糕的软件就没有这个配置文件。
* 如果配置文件执行结果提示你缺少依赖包，你得先安装它们。
* 一旦你安装完成所有的依赖包后，使用 `make` 命令来编译该应用程序。
* 编译完成后，执行 `sudo make install` 命令来安装该应用程序。
注意有一些软件包会提供一个安装软件的脚本文件，你只需要运行这个文件即可安装完成。但是大多数情况下，你可没那么幸运。
还有，使用这种方式安装的软件并不会像使用 Ubuntu 软件库、 PPA 方式或者 .deb 安装方式那样安装的软件会自动更新。
如果你坚持使用源代码方式来安装软件，我建议你看下这篇很详细的文章[在 Ubuntu 系统中使用源代码安装软件](http://www.howtogeek.com/105413/how-to-compile-and-install-from-source-on-ubuntu/)。
### 5.2 卸载使用源代码方式安装的软件（不推荐使用）
如果你觉得使用源代码安装软件的方式太难了，再想想看，当你卸载使用这种方式安装的软件将会更痛苦。
* 首先，你不能删除用于安装该软件的源代码。
* 其次，你必须确保在安装的时候也有对应的方式来卸载它。一款设计上很糟糕的应用程序就不会提供卸载软件的方法，因此你不得不手动去删除那个软件包安装的所有文件。
正常情况下，你应该切换到源代码的解压目录下，使用下面的命令来卸载那个应用程序：
```
sudo make uninstall
```
但是，这也不能保证你每次都会很顺利地卸载完成。
看到了吧，使用源代码方式来安装软件实在是太麻烦了。这就是为什么我不推荐大家在 Ubuntu 系统中使用源代码来安装软件的原因。
### 其它一些在 Ubuntu 系统中安装软件的方法
另外，还有一些在 Ubuntu 系统下并不常用的安装软件的方法。由于这篇文章已经写得够长了，我就不再深入探讨了。下面我将把它们列出来：
* Ubuntu 新推出的 [Snap 打包](https://itsfoss.com/use-snap-packages-ubuntu-16-04/)方式
* 使用 [dpkg](https://help.ubuntu.com/lts/serverguide/dpkg.html) 命令
* [AppImage](http://appimage.org/) 方式
* [pip](https://pypi.python.org/pypi/pip) : 用于安装基于 Python 语言的应用程序
### 你是如何在 UBUNTU 系统中安装软件的呢？
如果你一直都在使用 Ubuntu 系统，那么你在 Ubuntu Linux 系统下最喜欢使用什么方式来安装软件呢？你觉得这篇文章对你有用吗？请分享你的一些观点，建议和提出相关的问题。
---
作者简介：
![](/data/attachment/album/201701/09/213150jbsjve7jczbl5mc7.jpg) 我叫 Abhishek Prakash ，F.O.S.S 开发者。我的工作是一名专业的软件开发人员。我是一名狂热的 Linux 系统及开源软件爱好者。我使用 Ubuntu 系统，并且相信分享是一种美德。除了 Linux 系统之外，我喜欢经典的侦探神秘小说。我是 Agatha Christie 作品的真爱粉。
---
via: 
作者：[ABHISHEK PRAKASH](https://itsfoss.com/author/abhishek/) 译者：[rusking](https://github.com/rusking) 校对：[jasminepeng](https://github.com/jasminepeng)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出