PC). Thus, the data to be compared is very small. To validate 
the architecture's compactness and efficiency, we synthesized 
the comparator unit in 90nm technology. The area and power 
budgets  of  the  unit,  as  compared  to  the  total  budget  for  a 
generic NoC router (see Figure 1), are shown in Table 1. It is 
evident  that  the  AC  unit  imposes  a  minimal  area  and  power 
penalty on the overall design, while providing full protection 
from  logic  errors.  Moreover,  the  AC  unit  is  also  used  to 
protect  against  Switch  Allocator  errors,  described  in  Section 
4.3, further subsidizing its small additional overhead.
It  should  be  noted  that  almost  all  the  overhead  in  the 
proposed  protective  scheme  comes  from  the  AC  unit  alone; 
the  VA  and  SA  are  only  slightly  modified  to  accept 
invalidation  signals  from  the  AC.  It  is  the  AC  unit  which 
monitors the results of the VA and SA. 
Additional  hardware  components  to  combat  faults  bring  in 
the  possibility  of  a  fault  within  the  new  component.  In  this 
work, we assume single event upsets, i.e., only one fault could 
happen at any given time. This implies that there might be a 
fault in the VA, or SA, or the AC unit at a given time, but not 
in more than one of them. Hence, if there is a soft error in the 
VA or SA unit, it will definitely be caught by the AC unit. If, 
on the other hand, there is a false positive due to a fault in the 
AC unit, then the consequence is benign; all that the AC unit 
does is invalidate the allocations in the previous clock cycle. 
Therefore, a false positive will simply waste one clock cycle 
in arbitrations. 
4.2. Routing Unit Errors 
A  transient  fault  in  the  routing  unit  logic  could  cause  a 
packet to be misdirected. Since the subsequent virtual channel 
allocation and switch allocation would be performed based on 
the misdirection, no data corruption will occur. The erroneous 
direction,  however,  may  be  blocked,  either  because  of  a  link 
outage  (hard  fault),  or  a  network  edge  in  various  topologies 
(e.g. mesh). This will be caught by the VA, which maintains 
the state information for its adjacent routers. The VA is able to 
detect such erroneous behavior, because the allocator is aware 
of  blocked  links  or  links  which  are  not  permitted  due  to 
physical constraints (e.g. a network edge); they are either pre-
programmed  in  the  allocator's  state  table  or  they  are 
dynamically  specified  through  incoming  state  information 
from  adjacent  routers.  The  recovery,  however,  depends  on 
whether look-ahead routing is used or not. If such a routing is 
employed,  then  the  error  will  be  caught  by  the  VA  of  the 
following  router  and  reported  to  the  previous  router  through 
an  appropriate  NACK  message.  This  will  invalidate  the 
erroneous  decision  and  force  the  routing  unit  to  repeat  the 
routing process on the specific packet.   
Note  that  the  header  flit  is  still  in  the  previous  router's 
retransmission  buffer  (as  described  in  Section  3).  The  whole 
recovery process will take 3 clock cycles (one for the NACK 
Table 1. Power and Area Overhead of the AC Unit
Component 
Generic NoC Router 
(5 PCs, 4 VCs per PC) 
Power 
Area 
119.55 mW 
0.374862 mm2 
Allocation   
Comparator (AC) 
2.02 mW 
(+1.69% overhead) 
0.004474 mm2 
(+1.19% overhead) 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:28:17 UTC from IEEE Xplore.  Restrictions apply. 
)
0
0
0
,
1
x
(
s
r
o
r
r
E
#
60
50
40
30
20
10
0
Number of Corrected Errors
LINK-HBH
RT-Logic
SA-Logic
)
J
n
(
y
g
r
e
n
E
0.3
0.25
0.2
0.15
0.1
0.05
0
Energy per Packet
LINK-HBH
RT-Logic
SA-Logic
0.001
0.0001
0.00001
0.01
(a) Number or corrected Errors 
(b) Energy Consumption 
Figure 13. Impact of soft-error correcting schemes 
Error Rate
Error Rate
0.00001
0.0001
0.001
0.01
for 
the  new 
propagation  to  the  previous  router,  one  for  the  new  routing 
process, and one for the retransmission) in a 2-stage router. It 
would take 2 clock cycles in a single-stage router (one for the 
NACK  and  one 
routing  process  and 
retransmission).  To  increase  the  efficiency  in  non-minimal, 
adaptive  routing  schemes,  the  current  router  may  reset  the 
invalid direction and assign a new direction without informing 
the  previous  router.  If  current-node  routing  is  used  (i.e.  4-
stage and 3-stage routers), then the recovery phase is simpler, 
since the error is caught by the VA in the same router, which 
will  inform  the  routing  unit  before  the  transmission  occurs. 
This will incur a single-cycle delay for re-routing.   
Misdirection  to  a  non-blocked,  functional  path,  however, 
will not be caught by the VA, since its state information will 
not raise an error flag (i.e. an error signal, as shown in Figure 
12).  It  could  potentially  cause  deadlock  in  deterministic 
routing algorithms. In such algorithms, however, the error will 
be  detected  in  the  router  that  receives  the  misdirected  flit.  A 
NACK to the sending router would then fix the problem. The 
latency  overhead  is  dependent  on  the  number  of  pipeline 
stages (n) within the router. The delay penalty is equal to 1 + n, 
(NACK + re-routing and retransmission). In adaptive routing 
schemes,  the  error  cannot  be  detected.  However,  in  such 
schemes,  a  misdirection  fault  is  not  catastrophic;  it  simply 
delays the flit traversal.
4.3. Switch Allocator Errors 
A switch allocator error could give rise to the following four 
different  problems,  some  of  which  would  lead  to  packet/flit 
loss:  (a)  A  soft  error  in  the  control  signals  of  the  switch 
allocator could prevent flits from traversing the crossbar. This 
case  is  the  least  problematic,  since  the  flits  will  keep 
requesting  access  to  the  crossbar  until  they  succeed.  (b)  If  a 
data  flit  is  mistakenly  sent  to  a  direction  different  from  the 
header  flit,  it  would  cause  flit/packet  loss,  because  it  would 
deviate from the wormhole created by its header flit. (c) A soft 
error could cause the allocator to direct two flits to the same 
output. This will lead to a corrupt flit, which will be detected 
by the error detection code in the next router. A NACK will 
be  sent  and 
the 
retransmission  buffer.  Regardless  of  the  number  of  pipeline 
stages,  this  error  recovery  process  will  incur  two  cycles 
(NACK  +  retransmission)  latency  overhead.  (d)  An  error 
could  cause  the  allocator  to  send  a  flit  to  multiple  outputs 
(multicasting). If the flit is a data flit, the same error will occur 
as  case  (b)  above.  If  the  flit  is  a  header  flit,  then  multiple 
virtual  channels  will  mistakenly  be  reserved  in  all  the 
the  correct  flits  retransmitted  from 
receiving routers (essentially opening multiple wormholes for 
the  same  message).  Those  wormholes  will  stay  permanently 
reserved,  thus  reducing  the  effective  buffer  space  in  those 
routers.   
The most challenging cases are (b) and (d). To prevent such 
scenarios, we propose use of the Allocation Comparator (AC) 
Unit,  which  was  introduced  to  protect  against  VA  errors.  As 
shown  in  Figure  12,  the  AC  unit  also  checks  for  invalid  SA 
allocations 
(such  as  multicasting)  and  duplicate  SA 
allocations; upon detection of an erroneous behavior, the AC 
unit  will  invalidate  the  SA  allocation  in  the  previous  clock 
cycle. In this case, the overhead involved does not depend on 
the number of pipeline stages of a router. In all cases, an SA 
error will be caught by the AC unit after the SA stage finishes. 
This  implies  that  the  AC  unit  will  be  operating  in  the  same 
stage as crossbar traversal. Therefore, a NACK signal must be 
sent to all adjacent routers to ignore the previous transmission, 
and  a  new  SA  process  will  commence;  this  amounts  for 
single-clock latency overhead. 
We  examined  the  impact  of  our  proposed  solutions  by 
simulating  three  types  of  error  situations.  These  are  routing 
logic  errors  (RT-Logic),  switch  allocator  logic  errors  (SA-
Logic)  and  link  errors  (LINK-HBH).  Each  one  of  the  cases 
was  simulated  independently  by  varying  the  error  rate  and 
measuring 
the  number  of  errors  corrected  and  energy 
consumption per message. Figure 13 (a) illustrates the number 
of  errors  corrected  by  the  proposed  measures.  Errors  in  the 
routing unit are significantly less than errors in the SA, since 
routing  errors  occur  only  in  header  flits.  The  SA,  however, 
operates  on  every  flit,  and  many  flits  often  undergo  multiple 
arbitrations  before  winning  access  to  the  switch.  Link 
traversal, on the other hand, only occurs once for each flit per 
hop, thus the link errors detected in this experiment were less 
than the SA errors. Figure 13 (b) depicts the energy consumed 
per packet under the different error schemes. As shown, link 
errors 
of 
retransmissions.  Nevertheless,  even  with  retransmissions,  the 
overhead  is  still  minimal,  thereby  validating  our  previous 
assertions. 
induce  more 
overhead 
because 
energy 
4.4. Crossbar Errors 
A transient fault within the crossbar would produce single-
bit  upsets,  not  entire  flits  being  misdirected  as  in  the  switch 
allocator case. Single-bit upsets are taken care of by the error 
detection  and  correction  unit  employed  within  each  router, 
thus eliminating the problem. 
4.5. Retransmission Buffer Errors 
A  single  soft  error  in  the  retransmission  buffer  would  be 
corrected  by  the  error-correcting  unit  in  the  receiving  router. 
A  double  (or  more)  error,  however,  would  yield  an  endless 
retransmission  loop  since  the  original  data  itself  is  now 
corrupt. Given that a double bit-flip is highly unlikely, such a 
scenario  can  be  ignored.  However,  a  fool-proof  solution 
would  be  to  use  duplicate  retransmission  buffers.  This  will 
double the buffer area and power overhead.
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:28:17 UTC from IEEE Xplore.  Restrictions apply. 
4.6. Handshaking Signal Errors 
the  network.  Since 
Every  router  has  several  handshaking  signal  lines  with 
neighboring  routers  to  facilitate  proper  functionality  and 
synchronization. Transient faults on these lines would disrupt 
the  operation  of 
the  number  of 
handshaking signal lines is small, Triple Module Redundancy 
(TMR) can be used, in which three lines and a voter are used 
to ensure protection against soft errors. There is a slight area 
and power overhead increase, but the area occupied by these 
lines  is  negligible  compared  to  the  area  of  the  other  router 
components. 
5. Conclusions 
In  this  paper  we  presented  a  comprehensive  plan  of  attack 
on various types of reliability hindrances in on-chip networks. 
We  have  tackled  most  common  failure  types  by  proposing  a 
series  of  architectural  techniques,  which  work  in  tandem  to 
protect the interconnect infrastructure. 
A new hop-by-hop retransmission scheme was presented to 
combat  link  errors.  The  scheme  was  shown  to  be  very 
efficient in terms of both latency and power even under high 
error  rates.  The  retransmission  buffers  required  by  this 
mechanism  were  also  used  in  a  newly  proposed  deadlock 
recovery technique, which utilizes existing resources to break 
deadlocks,  thus  minimizing  the  incurred  overhead.  Finally,  a 
detailed  analysis  of  possible  symptoms  resulting  from  intra-
router logic errors was also presented, along with an array of 
protective  measures  and  their  effectiveness  in  various  router 
architectures. 
More importantly, all the mechanisms proposed in this work 
kept  the  critical  path  of  the  NoC  router  intact.  For  on-chip 
networks,  ultra-low  latencies  are  an  absolute  necessity;  thus, 
any  reliability  solution  which  inflicts  significant  burden  on 
latency is not well suited. Our schemes work in parallel with 
the critical components without deepening the router pipeline. 
6. References 
[1] 
J. Kim, D. Park, C. Nicopoulos, N. Vijaykrishnan, and C. R. Das, "Design 
and analysis of an NoC architecture from performance, reliability and energy 
perspective," in Proc. of the Symposium on Architecture for networking and 
communications systems (ANCS), 2005. 
[2]  Krewell, "Multicore Showdown," Microprocessor Report, vol. 19, pp. 41-45, 
2005. 
[3]  L.  Benini  and  G.  D.  Micheli,  "Networks  on  Chips:  A  NewSoC  Paradigm," 
IEEE Computer, vol. 35, pp. 70-78, 2002. 
[4]  W.  J.  Dally  and  B.  Towles,  "Route  Packets,  Not  Wires:  On-Chip 
Interconnection  Networks,"  in  Proc.  of  the  Design  Automation  Conference 
(DAC), 2001. 
[5]  T. D. Richardson, C. Nicopoulos, D. Park, V. Narayanan, X. Yuan, C. Das, 
and V. Degalahal, "A Hybrid SoC Interconnect with Dynamic TDMA-Based 
Transaction-Less  Buses  and  On-Chip  Networks," 
the   
International Conference on VLSI Design, pp. 657-664, 2006. 
in  Proc.  of 
[6]  S. Murali, T. Theocharides, N. Vijaykrishnan, M. J. Irwin, L. Benini, and G. 
De  Micheli,  "Analysis  of  error  recovery  schemes  for  networks  on  chips," 
Design & Test of Computers, IEEE, vol. 22, pp. 434-442, 2005. 
[7]  K.  Constantinides,  S.  Plaza,  J.  Blome,  Z.  Bin,  V.  Bertacco,  S.  Mahlke,  T. 
Austin,  and  M.  Orshansky,  "BulletProof:  A  Defect-Tolerant  CMP  Switch 
Architecture,"  in  Proc.  of  the  High-Performance  Computer  Architecture 
(HPCA), pp. 3-14, 2006. 
[8]  A. Lorena and N. Michael, "Cost reduction and evaluation of temporary faults 
detecting technique," in Proc. of the Design, Automation and Test in Europe 
(DATE), 2000. 
[9]  D.  Bertozzi,  L.  Benini,  and  G.  De  Micheli,  "Low  power  error  resilient 
encoding for on-chip data buses," in Proc. of the Design, Automation and Test 
in Europe Conference (DATE), pp. 102-109, 2002. 
[10]  R.  Marculescu,  "Networks-on-chip:  the  quest  for  on-chip  fault-tolerant 
communication," in Proc. of the symposium on VLSI, pp. 8-12, 2003. 
[11]  K. L. Shepard and V. Narayanan, "Noise in deep submicron digital design," in 
Proc. of the International Conference on Computer-Aided Design (ICCAD), 
pp. 524-531, 1996. 
[12]  A. Krstic, J. Yi-Min, and C. Kwang-Ting, "Pattern generation for delay testing 
and dynamic timing analysis  considering power-supply noise effects," IEEE 
Trans. on Computer-Aided Design of Integrated Circuits and Systems, vol. 20, 
pp. 416-425, 2001. 
[13]  T.  Dumitras, S.  Kerner,  and  R.  Marculescu,  "Towards on-chip  fault-tolerant 
communication," in Proc. of the Asia and South Pacific Design Automation 
Conference (ASP-DAC), pp. 225-232, 2003. 
[14]  P. Shivakumar, M. Kistler, S. W. Keckler, D. Burger, and L. Alvisi, "Modeling 
the effect of technology trends on the soft error rate of combinational logic," in 
Proc. of the Dependable Systems and Networks (DSN), pp. 389-398, 2002. 
[15]  L.  S. Peh  and  W. J.  Dally, "A delay  model  and speculative architecture for 
pipelined routers," in Proc. of the High Performance Computer Architecture 
(HPCA), pp. 255-266, 2001. 
[16]  M. Galles, "Scalable Pipelined Interconnect for Distributed Endpoint Routing: 
The  SGI  SPIDER  Chip,"  in  Proc.  of  the  Hot  Interconnects  Symposium  IV, 
1996. 
[17]  J. Kim, D. Park, T. Theocharides, N. Vijaykrishnan, and C. R. Das, "A low 
latency router supporting adaptivity for on-chip interconnects," in Proc. of the 
Design Automation Conference (DAC), pp. 559-564, 2005. 
[18]  R. Mullins, A. West, and S. Moore, "Low-latency virtual-channel routers for 
on-chip  networks,"  in  Proc.  of  the  International  Symposium  on  Computer 
Architecture (ISCA), pp. 188-197, 2004. 
[19]  S. Arjun, W. J. Dally, A. K. Gupta, and B. Towles, "GOAL: a load-balanced 
adaptive  routing  algorithm  for  torus  networks,"  in  Proc.  of  the  International 
Symposium on Computer Architecture (ISCA), pp. 194-205, 2003. 
[20]  R.  S.  Srinivasa  and  R.  S.  Naresh,  "Coding  for  system-on-chip  networks:  a 
unified  framework," in Proc. of the  Design  Automation  Conference (DAC), 
2004. 
[21]  V.  Praveen,  B.  Nilanjan,  and  S.  C.  Karam,  "Quality-of-service  and  error 
control  techniques  for  network-on-chip  architectures,"  in  Proc.  of  the  Great 
Lakes symposium on VLSI, 2004. 
[22]  H. Zimmer and A. Jantsch, "A fault model notation and error-control scheme 
for  switch-to-switch  buses 
the   
International  Conference  on  Hardware/Software  Codesign  and  System 
Synthesis (CODES+ISSS), pp. 188-193, 2003. 
in  a  network-on-chip," 
in  Proc.  of 
[23]  W.  J.  Dally  and  B.  Towles,  Principles  and  practices  of  interconnection 
networks: Morgan Kaufmann, 2003. 
[24]  M. Dall'Osso, G. Biccari, L. Giovannini, D. Bertozzi, and L. Benini, "Xpipes: 
a 
for 
multiprocessor SoCs," in Proc. of the International Conference on Computer 
Design (ICCD), pp. 536- 539, 2003. 
insensitive  parameterized  network-on-chip  architecture 
latency 
[25]  W.  J.  Dally,  L.  R.  Dennison,  D.  Harris,  K.  Kan,  and  T.  Xanthopoulos, 
"Architecture and implementation of the reliable router," in Proc. of the Hot 
Interconnects II, pp. 197-208, 1994. 
[26]  W. Jie, "A deterministic fault-tolerant and deadlock-free routing protocol in 2-
D  meshes  based  on  odd-even  turn  model,"  in  Proc.  of  the  International 
Conference on Supercomputing (ICS), pp. 67-76, 2002. 
[27]  N. Ted and S. L. Johnsson, "ROMM routing on mesh and torus networks," in 
Proc.  of  the  Symposium  on  Parallel  Algorithms  and  Architectures  (SPAA), 
1995. 
[28]  J.  Duato,  "A  new  theory  of  deadlock-free  adaptive  routing  in  wormhole 
networks," Parallel and Distributed Systems, IEEE Transactions on, vol. 4, pp. 
1320-1331, 1993. 
[29]  K.  V.  Anjan  and  T.  M.  Pinkston,  "An  efficient,  fully  adaptive  deadlock 
recovery  scheme:  DISHA,"  in  Proc.  of  the  International  Symposium  on 
Computer Architecture (ISCA), pp. 201-210, 1995. 
[30]  J.  Duato,  S.  Yalamanchili,  and  L.  Ni,  "Interconnection  networks:  An 
engineering Approach.," Los Alamitos, Calif., IEEE Computer Society, 1997. 
[31]  P. Liden, P. Dahlgren, R. Johansson, and J. Karlsson, "On latching probability 
of  particle  induced  transients  in  combinational  networks,"  in  Proc.  of  the 
Symposium on Fault-Tolerant Computing (FTCS), pp. 340-349, 1994. 
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:28:17 UTC from IEEE Xplore.  Restrictions apply.