就不用担心出现不必要的自动类型转换。
301
5.9 本章小结
C 语言有许多运算符，如本章讨论的赋值运算符和算术运算符。一般而
言，运算符需要一个或多个运算对象才能完成运算生成一个值。只需要一个
运算对象的运算符（如负号和 sizeof）称为一元运算符，需要两个运算对象
的运算符（如加法运算符和乘法运算符）称为二元运算符。
表达式由运算符和运算对象组成。在C语言中，每个表达式都有一个
值，包括赋值表达式和比较表达式。运算符优先级规则决定了表达式中各项
的求值顺序。当两个运算符共享一个运算对象时，先进行优先级高的运算。
如果运算符的优先级相等，由结合律（从左往右或从右往左）决定求值顺
序。
大部分语句都以分号结尾。最常用的语句是表达式语句。用花括号括起
来的一条或多条语句构成了复合语句（或称为块）。while语句是一种迭代
语句，只要测试条件为真，就重复执行循环体中的语句。
在C语言中，许多类型转换都是自动进行的。当char和short类型出现在
表达式里或作为函数的参数（函数原型除外）时，都会被升级为int类型；
float类型在函数参数中时，会被升级为double类型。在K&R 
C（不是ANSI
C）下，表达式中的float也会被升级为double类型。当把一种类型的值赋给
另一种类型的变量时，值将被转换成与变量的类型相同。当把较大类型转换
成较小类型时（如，long转换成short，或 double 转换成 float），可能会丢失
数据。根据本章介绍的规则，在混合类型的运算中，较小类型会被转换成较
大类型。
定义带一个参数的函数时，便在函数定义中声明了一个变量，或称为形
式参数。然后，在函数调用中传入的值会被赋给这个变量。这样，在函数中
就可以使用该值了。
302
5.10 复习题
复习题的参考答案在附录A中。
1.假设所有变量的类型都是int，下列各项变量的值是多少：
a.x = (2 + 3) * 6;
b.x = (12 + 6)/2*3;
c.y = x = (2 + 3)/4;
d.y = 3 + 2*(x = 7/2);
2.假设所有变量的类型都是int，下列各项变量的值是多少：
a.x = (int)3.8 + 3.3;
b.x = (2 + 3) * 10.5;
c.x = 3 / 5 * 22.0;
d.x = 22.0 * 3 / 5;
3.对下列各表达式求值：
a.30.0 / 4.0 * 5.0;
b.30.0 / (4.0 * 5.0);
c.30 / 4 * 5;
d.30 * 5 / 4;
e.30 / 4.0 * 5;
f.30 / 4 * 5.0;
303
4.请找出下面的程序中的错误。
int main(void)
{
int i = 1,
float n;
printf("Watch out! Here come a bunch of fractions!\n");
while (i 
#define S_TO_M 60
int main(void)
{
int sec, min, left;
304
printf("This program converts seconds to minutes and ");
printf("seconds.\n");
printf("Just enter the number of seconds.\n");
printf("Enter 0 to end the program.\n");
while (sec > 0) {
scanf("%d", &sec);
min = sec/S_TO_M;
left = sec % S_TO_M;
printf("%d sec is %d min, %d sec. \n", sec, min, left);
printf("Next input?\n");
}
printf("Bye!\n");
return 0;
}
6.下面的程序将打印出什么内容？
#include 
#define FORMAT "%s! C is cool!\n"
int main(void)
{
305
int num = 10;
printf(FORMAT,FORMAT);
printf("%d\n", ++num);
printf("%d\n", num++);
printf("%d\n", num--);
printf("%d\n", num);
return 0;
}
7.下面的程序将打印出什么内容？
#include 
int main(void)
{
char c1, c2;
int diff;
float num;
c1 = 'S';
c2 = 'O';
diff = c1 - c2;
num = diff;
306
printf("%c%c%c:%d %3.2f\n", c1, c2, c1, diff, num);
return 0;
}
8.下面的程序将打印出什么内容？
#include 
#define TEN 10
int main(void)
{
int n = 0;
while (n++ 
int main(void)
{
308
int n = 0;
while ( n 、>=、<=、!=、==、+=、*=、-=、/=、%=
函数：fabs()
C语言有3种循环：for、while、do while
使用关系运算符构建控制循环的表达式
其他运算符
循环常用的数组
编写有返回值的函数
大多数人都希望自己是体格强健、天资聪颖、多才多艺的能人。虽然有
时事与愿违，但至少我们用 C能写出这样的程序。诀窍是控制程序流。对于
计算机科学（是研究计算机，不是用计算机做研究）而言，一门语言应该提
供以下3种形式的程序流：
执行语句序列；
如果满足某些条件就重复执行语句序列（循环
通过测试选择执行哪一个语句序列（分支）。
读者对第一种形式应该很熟悉，前面学过的程序中大部分都是由语句序
列组成。while循环属于第二种形式。本章将详细讲解while循环和其他两种
循环：for和do while。第三种形式用于在不同的执行方案之间进行选择，让
313
程序更“智能”，且极大地提高了计算机的用途。不过，要等到下一章才介绍
这部分的内容。本章还将介绍数组，可以把新学的知识应用在数组上。另
外，本章还将继续介绍函数的相关内容。首先，我们从while循环开始学