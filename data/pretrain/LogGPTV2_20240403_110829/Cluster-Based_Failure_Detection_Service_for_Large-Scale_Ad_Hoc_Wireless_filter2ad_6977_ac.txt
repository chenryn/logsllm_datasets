### Low Intra-Cluster Peer Forwarding

Consider a node \( v \) and its immediate neighbor \( v' \) in Figure 2(b). After receiving a health status update from the Cluster Head (CH), \( v' \) will forward the report to \( v \) upon request, which is made at the end of `fds.R-3`, a timeout for report receiving. Peer forwarding also allows node \( v \) to receive messages from the Designated Cluster Head (DCH), even if \( v \) is not an immediate neighbor (see Figure 2(a)). In this case, \( v' \) may perform forwarding based on its knowledge of the DCH’s inability to reach \( v \) (learned from the digest received from the DCH).

#### Energy Considerations

We prefer peer forwarding over retransmission by the DCH (or CH) due to energy-balancing considerations. However, a potential issue with intra-cluster peer forwarding is that multiple neighbors may respond to a forwarding request simultaneously, leading to significant energy wastage in densely populated clusters. To address this, we use the following strategy: When node \( v \) broadcasts a forwarding request, each of \( v \)'s in-cluster neighbors sets a waiting period for the requested forwarding. The waiting period can be a function of the node’s Network ID (NID, which is globally unique in the network) and inversely proportional to the node’s remaining energy. This ensures each neighbor has a unique waiting period, balancing energy consumption. Consequently, neighbors do not perform forwarding simultaneously. Instead, after one neighbor successfully forwards the message, the others will stop upon overhearing an acknowledgment from \( v \).

### Inter-Cluster Failure Report Forwarding

If, at the end of `fds.R-3`, a Gateway (GW) in cluster \( C \) receives an update from the CH indicating a newly detected failure, the GW will forward the update as a failure report to the CH(s) of neighboring clusters. In addition to the NID of the newly detected failed node, the failure report may include the NIDs of previously detected failed nodes. This enhances the detection service's probabilistic guarantee of completeness (if an earlier failure report did not reach some clusters, they may eventually learn the missed failure information). Conversely, an update without newly detected failures will not trigger inter-cluster forwarding. Thus, the absence of such a report from cluster \( C \) is interpreted as "no news is good news." However, if a cluster sends a failure report to its neighboring clusters, we must ensure it is successfully forwarded to all other clusters in the system with high probability.

A major challenge in inter-cluster forwarding is mitigating the effect of message loss while keeping transmission and retransmission costs low. Specifically, retransmission, used to tolerate link failures, should be activated by the absence of an acknowledgment from the intended recipient. Given energy limitations, each across-cluster forwarding should not involve two acknowledgments. To address this, we leverage the promiscuous receiving mode in ad hoc wireless settings. As shown in Figure 3, we use the message forwarded by the successor forwarding node (GWi) and overheard by the sender (CHi) as an implicit acknowledgment, reducing the number of messages involved in inter-cluster forwarding. CHi sets its timer to 2 Thop after forwarding a message to GWi; if CHi does not overhear GWi’s forwarding by timer expiration, CHi assumes the first transmission was unsuccessful and retransmits the message.

### Backup Gateway (BGW)-Assisted Forwarding

In addition to taking over from a failed GW, a BGW can enable energy-balanced message-loss recovery. We devise a mechanism for BGW-assisted forwarding as follows: Suppose there are \( n \) BGWs between two neighboring clusters \( C \) and \( C' \), each with a unique rank \( k \) (where \( k \in \{1, \ldots, n\} \)). Upon overhearing a message \( m \) forwarded by the CH of \( C \) and realizing further forwarding to \( C' \) is necessary, a BGW ranked \( k \) sets a timeout period of \( k \times 2Thop \) to check if \( m \) is successfully forwarded to \( C' \). If the BGW does not overhear an implicit acknowledgment from \( C' \) by timer expiration, it forwards \( m \) and waits for \( (n+1) \times 2Thop \) to see if an implicit acknowledgment can be heard from the CH of \( C' \). The BGW releases itself from standby if it hears such an acknowledgment before the timer expires.

For the GW (between \( C \) and \( C' \)), it will forward \( m \) immediately after receiving the message and learning of the need to forward. To allow BGWs to assist in re-forwarding \( m \) if the GW’s forwarding is unsuccessful, the GW sets its timer to \( (n+1) \times 2Thop \) and will not re-forward \( m \) unless the implicit acknowledgment from the CH of \( C' \) has not been heard by timer expiration.

### Probabilistic Analysis

This section evaluates several probabilistic measures concerning the completeness and accuracy properties of the FDS. We assume all hosts have a transmission range of 100 meters and that each cluster has 50 to 100 operational hosts uniformly distributed. Let \( p \) denote the message loss probability, where \( p \) is the probability that a message transmitted by a node \( v \) fails to reach a neighbor of \( v \). We assume \( p \) ranges from 0.05 to 0.5. We define probabilistic measures on a local cluster basis, as global-level measures would require assumptions about inter-cluster routing algorithms and network topology, and the FDS emphasizes localized algorithms.

#### Measures Concerning Accuracy

Recall that "accuracy" means no operational node will be suspected by other operational nodes. The accuracy property is affected only if a CH (or DCH) reports a false detection. We define \( P(\text{False detection}) \), the probability that an operational host is mistakenly judged to be a failed host. To evaluate \( P(\text{False detection}) \), we identify the conditions under which a false detection occurs:

1. The CH receives neither the heartbeat from an operational node \( v \) nor the digest sent by \( v \) by the end of `fds.R-2`.
2. None of the digests received during `fds.R-2` show that \( v \) is alive.

The number of in-cluster neighbors a (non-CH) host \( v \) can have depends on its position in the cluster. As illustrated in Figures 4(a) and 4(b), the farther \( v \) is from the center, the smaller the overlapping region between the cluster \( C \) and the neighborhood area of \( v \), reducing the chance that \( v \) will have many in-cluster neighbors that can hear its heartbeat and report it via a digest to the CH.

We evaluate the upper bound of \( P(\text{False detection}) \) for the worst-case scenario, where \( v \) is on the circumference of the cluster. From the false detection conditions and the assumption of uniform distribution, we formulate \( \hat{P}(\text{False detection}) \) as follows:

\[
\hat{P}(\text{False detection}) = p^2 \sum_{k=0}^{N-2} \binom{N-2}{k} \left( \frac{A_n}{A_u} \right)^k \left( 1 - \frac{A_n}{A_u} \right)^{(N-2)-k} \sum_{j=0}^{k} \binom{k}{j} (1-p)^j p^{k-j}
\]

where \( N \) is the number of nodes in the cluster, \( A_u \) is the total area of the cluster, and \( A_n \) is \( v \)'s neighborhood area within \( C \). The term \( p^2 \) computes the probability that condition C1 is true, and the inner summation evaluates the conditional probability that condition C2 is true given that \( v \) has \( k \) in-cluster neighbors.

We then evaluate \( \hat{P}(\text{False detection}) \) as a function of \( p \). The results, displayed in Figure 5, show that the FDS behaves well in terms of resilience to message loss. Specifically, for dense or moderately dense populations (i.e., \( N = 100 \) or \( N = 75 \)), the values of \( \hat{P}(\text{False detection}) \) are very small, even when \( p = 0.5 \). Even with a reduced node population density (\( N = 50 \)), the results are still reasonable.