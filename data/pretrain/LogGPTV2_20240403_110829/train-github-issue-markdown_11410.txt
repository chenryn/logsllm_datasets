Currently in a debugger session, console.log etc will not show by default.  
Some debuggers can pipe output, though this will be less featureful and not as
readily available as channeling through the debugger protocol.
V8 has a builtin console that is "debugger protocol" enabled, resulting in
messages like:
    Client < {"method":"Console.messageAdded","params":{"message":{"source":"console-api","level":"log","text":"Adding  1 2","url":"/home/gudmund/code/ts-test/build/index.js","line":2,"column":13}}}
    Client < {"method":"Runtime.consoleAPICalled","params":{"type":"log","args":[{"type":"string","value":"Adding "},{"type":"number","value":1,"description":"1"},{"type":"number","value":2,"description":"2"}],"executionContextId":1,"timestamp":1587836285935.544,"stackTrace":{"callFrames":[{"functionName":"add","scriptId":"54","url":"file:///home/gudmund/code/ts-test/build/index.js","lineNumber":1,"columnNumber":12},{"functionName":"","scriptId":"54","url":"file:///home/gudmund/code/ts-test/build/index.js","lineNumber":7,"columnNumber":15},{"functionName":"Module._compile","scriptId":"44","url":"internal/modules/cjs/loader.js","lineNumber":1152,"columnNumber":13},{"functionName":"Module._extensions..js","scriptId":"44","url":"internal/modules/cjs/loader.js","lineNumber":1175,"columnNumber":9},{"functionName":"Module.load","scriptId":"44","url":"internal/modules/cjs/loader.js","lineNumber":999,"columnNumber":31},{"functionName":"Module._load","scriptId":"44","url":"internal/modules/cjs/loader.js","lineNumber":898,"columnNumber":13},{"functionName":"executeUserEntryPoint","scriptId":"53","url":"internal/modules/run_main.js","lineNumber":73,"columnNumber":11},{"functionName":"","scriptId":"40","url":"internal/main/run_main_module.js","lineNumber":17,"columnNumber":46}]}}}
From which one can inspect logged variables via the debugger.  
https://github.com/v8/v8/blob/master/src/inspector/v8-console.cc#L219  
This `console` implementation is available on globalThis.
In trying to utilize this, there were two issues:
  * **Detection of debugger/inspector mode**. If the normal 'console...' calls are to be routed to the v8 implementation in debugger mode, I did not see a way to detect debugger/inspector mode.
  * **Implementation routing of console calls to v8 console**.
There is a simple example implementation in a PR incoming below, just meant to
illustrate.
### Diff between deno's and v8's `console`
A simple name comparison gives the following diff.
**v8 extra:**
  * `context(name)` \- Used to group outputs into tabs in devtools
  * `profile(name?: string)` \- Profile code. Have not investigated if this works currently
  * `profileEnd()`
  * `timeStamp(name?: string)` \- Adds a labeled mark to be used with `Performance`
**deno extra:**
  * (`indentLevel` \- internal)