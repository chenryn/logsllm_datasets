通过 `sysctl -p` 查看修改结果
### 自定义NAT网络
创建名为`management`的NAT网络，`vi  /usr/share/libvirt/networks/management.xml`
```html
  management
```
启用新建的NAT网络
```bash
virsh net-define /usr/share/libvirt/networks/management.xml
virsh net-start management
virsh net-autostart management
```
验证
```bash
brctl show
# bridge name bridge id   STP enabled interfaces
# br0   8000.3863bb44cf6c no    eno1
#               vnet0
# virbr0    8000.525400193f0f yes   virbr0-nic
# virbr1    8000.52540027f0ba yes   virbr1-nic
virsh net-list --all
#  Name                 State      Autostart     Persistent
# ----------------------------------------------------------
#  default              active     no            no
#  management           active     yes           yes
```
### 退出虚拟机
```bash
exit # 退出系统到登录界面
Ctrl+5 # 从虚拟机登录页面，退出到宿主机命令行页面
Ctrl+] # 或者下面
```
## 修改虚拟机配置信息
直接通过vim命令修改
```bash
vim  /etc/libvirt/qemu/centos72.xml
```
通过virsh命令修改
```bash
virsh edit centos72
```
## 克隆虚拟机
```bash
# 暂停原始虚拟机
virsh shutdown centos72
virt-clone -o centos72 -n centos.112 -f /home/vms/centos.112.qcow2 -m 00:00:00:00:00:01
virt-clone -o centos88 -n centos.112 --file /home/vms/centos.112.qcow2 --nonsparse
```
`virt-clone` 参数介绍
- `--version` 查看版本。
- `-h，--help` 查看帮助信息。
- `--connect=URI` 连接到虚拟机管理程序 libvirt 的URI。
- `-o 原始虚拟机名称` 原始虚拟机名称，必须为关闭或者暂停状态。
- `-n 新虚拟机名称` --name 新虚拟机名称。
- `--auto-clone` 从原来的虚拟机配置自动生成克隆名称和存储路径。
- `-u NEW_UUID, --uuid=NEW_UUID` 克隆虚拟机的新的UUID，默认值是一个随机生成的UUID。
- `-m NEW_MAC, --mac=NEW_MAC` 设置一个新的mac地址，默认为随机生成 MAC。
- `-f NEW_DISKFILE, --file=NEW_DISKFILE` 为新客户机使用新的磁盘镜像文件地址。
- `--force-copy=TARGET` 强制复制设备。
- `--nonsparse` 不使用稀疏文件复制磁盘映像。
## 通过镜像创建虚拟机
创建虚拟机镜像文件
```bash
# 复制第一次安装的干净系统镜像，作为基础镜像文件，
# 后面创建虚拟机使用这个基础镜像
cp /home/vms/centos.88.qcow2 /home/vms/centos7.base.qcow2
# 使用基础镜像文件，创建新的虚拟机镜像
cp /home/vms/centos7.base.qcow2 /home/vms/centos7.113.qcow2
```
创建虚拟机配置文件
```bash
# 复制第一次安装的干净系统镜像，作为基础配置文件。
virsh dumpxml centos.88 > /home/vms/centos7.base.xml
# 使用基础虚拟机镜像配置文件，创建新的虚拟机配置文件
cp /home/vms/centos7.base.xml /home/vms/centos7.113.xml
# 编辑新虚拟机配置文件
vi /home/vms/centos7.113.xml
```
主要是修改虚拟机文件名，UUID，镜像地址和网卡地址，其中 UUID 在 Linux 下可以使用 `uuidgen` 命令生成
```html
  centos7.113
  1e86167a-33a9-4ce8-929e-58013fbf9122
```
```bash
virsh define /home/vms/centos7.113.xml
# Domain centos.113 defined from /home/vms/centos7.113.xml
```
## 动态更改cpu数量和内存大小
动态调整，如果超过给虚拟机分配的最大内存，需要重启虚拟机。
```bash
virsh list --all
#  Id    名称                         状态
# ----------------------------------------------------
#  2     working112                     running
# 更改CPU
virsh setvcpus working112 --maximum 4 --config
# 更改内存
virsh setmaxmem working112 1048576 --config
# 查看信息
virsh dominfo working112
```
## 挂载磁盘
### 创建磁盘
```bash
mkdir /home/vms
```
查看镜像信息
```bash
virt-filesystems --long --parts --blkdevs -h -a working112.qcow2
# Name       Type       Size  Parent
# /dev/sda1  partition  200M  /dev/sda
# /dev/sda2  partition  9.8G  /dev/sda
# /dev/sda   device     10G   -
qemu-img info working112.qcow2
# image: working112.qcow2
# file format: qcow2
# virtual size: 140G (150323855360 bytes)
# disk size: 33G
# cluster_size: 65536
# Format specific information:
#     compat: 1.1
#     lazy refcounts: true
```
给虚拟机镜像添加`200G`大小，注意需要停止`working112`虚拟机
```bash
qemu-img resize working112.qcow2 +200G
# Image resized.
```
首先，我们制作如下所示的磁盘的备份副本。
```bash
cp working112.qcow2 working112-orig.qcow2
```
然后我们运行下面的命令来增加 `/dev/sda`
```bash
virt-resize --expand /dev/sda1 working112-orig.qcow2 working112.qcow2
```
查看镜像信息
```bash
qemu-img info working112.qcow2
# image: working112.qcow2
# file format: qcow2
# virtual size: 140G (150323855360 bytes)
# disk size: 33G
# cluster_size: 65536
# Format specific information:
#     compat: 1.1
#     lazy refcounts: true
```
进入虚拟机`virsh console working112` 查看信息：
```bash
vgdisplay # 显示卷组大小
lvdisplay # 显示逻辑卷大小
```
卷组大小已增加，下面需要分配容量给逻辑卷
```bash
lvextend -L +60G /dev/centos/root
```
还有最后一步，分配好了需要做系统调整
```bash
# ext 系统格式使用：
resize2fs /dev/centos/root
# xfs 系统格式使用下面命令
xfs_growfs /dev/centos/root
```
## 常用命令说明
### virt-install 
常用参数说明
```bash
–name指定虚拟机名称
–memory分配内存大小。
–vcpus分配CPU核心数，最大与实体机CPU核心数相同
–disk指定虚拟机镜像，size指定分配大小单位为G。
–network网络类型，此处用的是默认，一般用的应该是bridge桥接。
–accelerate加速
–cdrom指定安装镜像iso
–vnc启用VNC远程管理，一般安装系统都要启用。
–vncport指定VNC监控端口，默认端口为5900，端口不能重复。
–vnclisten指定VNC绑定IP，默认绑定127.0.0.1，这里改为0.0.0.0。
–os-type=linux,windows
–os-variant=rhel6
--name      指定虚拟机名称
--ram       虚拟机内存大小，以 MB 为单位
--vcpus     分配CPU核心数，最大与实体机CPU核心数相同
–-vnc       启用VNC远程管理，一般安装系统都要启用。
–-vncport   指定VNC监控端口，默认端口为5900，端口不能重复。
–-vnclisten  指定VNC绑定IP，默认绑定127.0.0.1，这里改为0.0.0.0。
--network   虚拟机网络配置
  # 其中子选项，bridge=br0 指定桥接网卡的名称。
–os-type=linux,windows
–os-variant=rhel7.2
--disk 指定虚拟机的磁盘存储位置
  # size，初始磁盘大小，以 GB 为单位。
--location 指定安装介质路径，如光盘镜像的文件路径。
--graphics 图形化显示配置
  # 全新安装虚拟机过程中可能会有很多交互操作，比如设置语言，初始化 root 密码等等。
  # graphics 选项的作用就是配置图形化的交互方式，可以使用 vnc（一种远程桌面软件）进行链接。
  # 我们这列使用命令行的方式安装，所以这里要设置为 none，但要通过 --extra-args 选项指定终端信息，
  # 这样才能将安装过程中的交互信息输出到当前控制台。
--extra-args 根据不同的安装方式设置不同的额外选项
```
### virsh
基础命令
```bash
virsh list --all           # 查看所有运行和没有运行的虚拟机
virsh list                 # 查看在运行的虚拟机
virsh dumpxml vm-name      # 查看kvm虚拟机配置文件
virsh start vm-name        # 启动kvm虚拟机
virsh shutdown vm-name     # 正常关机
virsh destroy vm-name      # 非正常关机，强制关闭虚拟机（相当于物理机直接拔掉电源）
virsh undefine vm-name     # 删除vm的配置文件
ls /etc/libvirt/qemu
# 查看删除结果，Centos-6.6的配置文件被删除，但磁盘文件不会被删除
virsh define file-name.xml # 根据配置文件定义虚拟机
virsh suspend vm-name      # 挂起，终止
virsh resumed vm-name      # 恢复被挂起的虚拟机
virsh autostart vm-name    # 开机自启动vm
virsh console    # 连接虚拟机
```
## 错误解决
```bash
console test
Connected to domain test
Escape character is ^]
```
如果出现上面字符串使用 CTRL+Shift+5 CTRL+Shift+]
1. ERROR Format cannot be specified for unmanaged storage.
virt-manager 没有找到存储池，创建储存池即可
2. KVM VNC客户端连接闪退
使用real vnc或者其它vnc客户端连接kvm闪退，把客户端设置中的ColourLevel值设置为rgb222或full即可
3. virsh shutdown  无法关闭虚拟机
使用该命令关闭虚拟机时，KVM是向虚拟机发送一个ACPI的指令，需要虚拟机安装acpid服务：
4. operation failed: Active console session exists for this domain
```bash
# 方案1
$ ps aux | grep console
$ kill -9 
# 方案2
$ /etc/init.d/libvirt-bin restart
# 方案3
$ ps aux | grep kvm
$ kill 对应的虚拟机进程
```
## 参考文章
- [KVM官方网站](https://www.linux-kvm.org/page/Main_Page)
- [KVM虚拟机Linux系统增加硬盘](http://www.cnblogs.com/ilanni/p/3878151.html)
- [virt-install 命令参数详解](https://www.ibm.com/support/knowledgecenter/zh/linuxonibm/liaat/liaatvirtinstalloptions.htm)
- [使用virt-install安装虚拟机，发行版安装代码直接复制运行](https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html)
- [KVM Linux - Expanding a Guest LVM File System Using Virt-resize](http://blog.oneiroi.co.uk/linux/kvm/virt-resize/RHEL/LVM/kvm-linux-expanding-a-lvm-guest-file-system-using-virt-resize/)