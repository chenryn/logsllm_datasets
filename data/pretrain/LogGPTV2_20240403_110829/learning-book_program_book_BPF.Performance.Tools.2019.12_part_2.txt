## Table of Contents

### Chapter 5: bpftrace Functions
- **5.13 bpftrace Functions**
  - 5.13.1 `printf` (Page 162)
  - 5.13.2 `join()` (Page 163)
  - 5.13.3 `str()` (Page 163)
  - 5.13.4 `kstack()` and `ustack()` (Page 164)
  - 5.13.5 `ksym()` and `usym()` (Page 165)
  - 5.13.6 `kaddr()` and `uaddr()` (Page 166)
  - 5.13.7 `system()` (Page 166)
  - 5.13.8 `exit()` (Page 167)

- **5.14 bpftrace Map Functions**
  - 5.14.1 `count()` (Page 168)
  - 5.14.2 `sum()`, `avg()`, `min()`, and `max()` (Page 169)
  - 5.14.3 `hist()` (Page 170)
  - 5.14.4 `Ihist()` (Page 171)
  - 5.14.5 `delete()` (Page 171)
  - 5.14.6 `clear()` and `zero()` (Page 172)
  - 5.14.7 `print()` (Page 172)

- **5.15 bpftrace Future Work**
  - 5.15.1 Explicit Address Modes (Page 173)
  - 5.15.2 Other Additions (Page 174)
  - 5.15.3 ply (Page 175)

- **5.16 bpftrace Internals** (Page 175)
- **5.17 bpftrace Debugging**
  - 5.17.1 `printf` Debugging (Page 177)
  - 5.17.2 Debug Mode (Page 177)
  - 5.17.3 Verbose Mode (Page 179)

- **5.18 Summary** (Page 180)

### Part II: Using BPF Tools

#### Chapter 6: CPUs
- **6.1 Background**
  - 6.1.1 CPU Fundamentals (Page 182)
  - 6.1.2 BPF Capabilities (Page 184)
  - 6.1.3 Strategy (Page 185)

- **6.2 Traditional Tools**
  - 6.2.1 Kernel Statistics (Page 187)
  - 6.2.2 Hardware Statistics (Page 189)
  - 6.2.3 Hardware Sampling (Page 192)
  - 6.2.4 Timed Sampling (Page 192)
  - 6.2.5 Event Statistics and Tracing (Page 196)

- **6.3 BPF Tools**
  - 6.3.1 `execsnoop` (Page 200)
  - 6.3.2 `exitsnoop` (Page 202)
  - 6.3.3 `runqlat` (Page 203)
  - 6.3.4 `runqlen` (Page 207)
  - 6.3.5 `runqslower` (Page 210)
  - 6.3.6 `cpudist` (Page 211)
  - 6.3.7 `cpufreq` (Page 212)
  - 6.3.8 `profile` (Page 215)
  - 6.3.9 `offcputime` (Page 219)
  - 6.3.10 `syscount` (Page 224)
  - 6.3.11 `argdist` and `trace` (Page 226)
  - 6.3.12 `funccount` (Page 229)
  - 6.3.13 `softirqs` (Page 231)
  - 6.3.14 `hardirqs` (Page 232)
  - 6.3.15 `smpcalls` (Page 233)
  - 6.3.16 `llcstat` (Page 237)
  - 6.3.17 Other Tools (Page 238)

- **6.4 BPF One-Liners**
  - 6.4.1 BCC (Page 238)
  - 6.4.2 bpftrace (Page 239)

- **6.5 Optional Exercises** (Page 240)
- **6.6 Summary** (Page 241)

#### Chapter 7: Memory
- **7.1 Background**
  - 7.1.1 Memory Fundamentals (Page 244)
  - 7.1.2 BPF Capabilities (Page 247)
  - 7.1.3 Strategy (Page 250)

- **7.2 Traditional Tools**
  - 7.2.1 Kernel Log (Page 251)
  - 7.2.2 Kernel Statistics (Page 252)
  - 7.2.3 Hardware Statistics and Sampling (Page 255)

- **7.3 BPF Tools**
  - 7.3.1 `oomkill` (Page 258)
  - 7.3.2 `memleak` (Page 259)
  - 7.3.3 `mmapsnoop` (Page 261)
  - 7.3.4 `brkstack` (Page 262)
  - 7.3.5 `shmsnoop` (Page 264)
  - 7.3.6 `faults` (Page 264)
  - 7.3.7 `ffaults` (Page 267)
  - 7.3.8 `vmscan` (Page 268)
  - 7.3.9 `drsnoop` (Page 271)
  - 7.3.10 `swapin` (Page 272)
  - 7.3.11 `hfaults` (Page 273)
  - 7.3.12 Other Tools (Page 274)

- **7.4 BPF One-Liners**
  - 7.4.1 BCC (Page 274)
  - 7.4.2 bpftrace (Page 275)

- **7.5 Optional Exercises** (Page 275)
- **7.6 Summary** (Page 276)

#### Chapter 8: File Systems
- **8.1 Background**
  - 8.1.1 File Systems Fundamentals (Page 278)
  - 8.1.2 BPF Capabilities (Page 280)
  - 8.1.3 Strategy (Page 281)

- **8.2 Traditional Tools**
  - 8.2.1 `df` (Page 282)
  - 8.2.2 `mount` (Page 283)
  - 8.2.3 `strace` (Page 283)
  - 8.2.4 `perf` (Page 284)
  - 8.2.5 `fatrace` (Page 286)

- **8.3 BPF Tools**
  - 8.3.1 `opensnoop` (Page 289)
  - 8.3.2 `statsnoop` (Page 291)
  - 8.3.3 `syncsnoop` (Page 293)
  - 8.3.4 `mmapfiles` (Page 294)
  - 8.3.5 `scread` (Page 295)
  - 8.3.6 `fmapfault` (Page 297)
  - 8.3.7 `filelife` (Page 298)
  - 8.3.8 `vfsstat` (Page 299)
  - 8.3.9 `vfscount` (Page 301)
  - 8.3.10 `vfssize` (Page 302)
  - 8.3.11 `fsrwstat` (Page 304)
  - 8.3.12 `fileslower` (Page 306)
  - 8.3.13 `filetop` (Page 308)
  - 8.3.14 `writesync` (Page 310)
  - 8.3.15 `filetype` (Page 311)
  - 8.3.16 `cachestat` (Page 314)
  - 8.3.17 `writeback` (Page 316)
  - 8.3.18 `dcstat` (Page 318)
  - 8.3.19 `dcsnoop` (Page 320)
  - 8.3.20 `mountsnoop` (Page 322)
  - 8.3.21 `xfsslower` (Page 323)
  - 8.3.22 `xfsdist` (Page 324)
  - 8.3.23 `ext4dist` (Page 327)
  - 8.3.24 `icstat` (Page 330)
  - 8.3.25 `bufgrow` (Page 331)
  - 8.3.26 `readahead` (Page 332)
  - 8.3.27 Other Tools (Page 334)

- **8.4 BPF One-Liners**
  - 8.4.1 BCC (Page 334)
  - 8.4.2 bpftrace (Page 335)
  - 8.4.3 BPF One-Liners Examples (Page 336)

- **8.5 Optional Exercises** (Page 340)
- **8.6 Summary** (Page 340)

#### Chapter 9: Disk I/O
- **9.1 Background**
  - 9.1.1 Disk Fundamentals (Page 342)
  - 9.1.2 BPF Capabilities (Page 344)
  - 9.1.3 Strategy (Page 346)

- **9.2 Traditional Tools**
  - 9.2.1 `iostat` (Page 346)
  - 9.2.2 `perf` (Page 348)
  - 9.2.3 `blktrace` (Page 349)
  - 9.2.4 SCSI Logging (Page 350)

- **9.3 BPF Tools**
  - 9.3.1 `biolatency` (Page 352)
  - 9.3.2 `biosnoop` (Page 358)
  - 9.3.3 `biotop` (Page 361)
  - 9.3.4 `bitesize` (Page 362)
  - 9.3.5 `seeksize` (Page 364)
  - 9.3.6 `biopattern` (Page 366)
  - 9.3.7 `biostacks` (Page 368)
  - 9.3.8 `bioerr` (Page 371)
  - 9.3.9 `mdflush` (Page 374)
  - 9.3.10 `iosched` (Page 375)
  - 9.3.11 `scsilatency` (Page 377)
  - 9.3.12 `scsiresult` (Page 379)
  - 9.3.13 `nvmelatency` (Page 381)

- **9.4 BPF One-Liners**
  - 9.4.1 BCC (Page 384)
  - 9.4.2 bpftrace (Page 385)
  - 9.4.3 BPF One-Liners Examples (Page 386)

- **9.5 Optional Exercises** (Page 387)
- **9.6 Summary** (Page 387)

#### Chapter 10: Networking
- **10.1 Background**
  - 10.1.1 Networking Fundamentals (Page 390)
  - 10.1.2 BPF Capabilities (Page 396)
  - 10.1.3 Strategy (Page 398)
  - 10.1.4 Common Tracing Mistakes (Page 399)

- **10.2 Traditional Tools**
  - 10.2.1 `ss` (Page 400)
  - 10.2.2 `ip` (Page 402)
  - 10.2.3 `nstat` (Page 402)
  - 10.2.4 `netstat` (Page 403)
  - 10.2.5 `sar` (Page 405)
  - 10.2.6 `nicstat` (Page 406)
  - 10.2.7 `ethtool` (Page 407)
  - 10.2.8 `tcpdump` (Page 408)
  - 10.2.9 `/proc` (Page 409)

- **10.3 BPF Tools**
  - 10.3.1 `sockstat` (Page 412)
  - 10.3.2 `sofamily` (Page 414)
  - 10.3.3 `soprotocol` (Page 416)
  - 10.3.4 `soconnect` (Page 419)
  - 10.3.5 `soaccept` (Page 422)
  - 10.3.6 `socketio` (Page 424)
  - 10.3.7 `socksize` (Page 426)
  - 10.3.8 `sormem` (Page 429)
  - 10.3.9 `soconnlat` (Page 432)
  - 10.3.10 `sofirstbyte` (Page 435)
  - 10.3.11 `tcpconnect` (Page 437)
  - 10.3.12 `tcpaccept` (Page 440)
  - 10.3.13 `tcplife` (Page 443)
  - 10.3.14 `tcptop` (Page 448)
  - 10.3.15 `tcpsnoop` (Page 449)
  - 10.3.16 `tcpretrans` (Page 450)
  - 10.3.17 `tcpsynbl` (Page 453)
  - 10.3.18 `tcpwin` (Page 454)
  - 10.3.19 `tcpnagle` (Page 456)
  - 10.3.20 `udpconnect` (Page 458)
  - 10.3.21 `gethostlatency` (Page 460)
  - 10.3.22 `ipecn` (Page 461)
  - 10.3.23 `superping` (Page 463)
  - 10.3.24 `qdisc-fq` (Page 466)
  - 10.3.25 `qdisc-cbq`, `qdisc-cbs`, `qdisc-codel`, `qdisc-fq_codel`, `qdisc-red`, and `qdisc-tbf` (Page 468)
  - 10.3.26 `netsize` (Page 470)
  - 10.3.27 `nettxdat` (Page 473)
  - 10.3.28 `skbdrop` (Page 475)
  - 10.3.29 `skblife` (Page 477)
  - 10.3.30 `ieee80211scan` (Page 479)
  - 10.3.31 Other Tools (Page 481)

- **10.4 BPF One-Liners**
  - 10.4.1 BCC (Page 482)
  - 10.4.2 bpftrace (Page 482)
  - 10.4.3 BPF One-Liners Examples (Page 484)

- **10.5 Optional Exercises** (Page 487)
- **10.6 Summary** (Page 488)

#### Chapter 11: Security
- **11.1 Background**
  - 11.1.1 BPF Capabilities (Page 490)
  - 11.1.2 Unprivileged BPF Users (Page 493)
  - 11.1.3 Configuring BPF Security (Page 494)
  - 11.1.4 Strategy (Page 495)

- **11.2 BPF Tools**
  - 11.2.1 `execsnoop` (Page 496)
  - 11.2.2 `elfsnoop` (Page 497)
  - 11.2.3 `modsnoop` (Page 498)
  - 11.2.4 `bashreadline` (Page 499)
  - 11.2.5 `shellsnoop` (Page 500)
  - 11.2.6 `ttysnoop` (Page 502)
  - 11.2.7 `opensnoop` (Page 503)
  - 11.2.8 `eperm` (Page 504)
  - 11.2.9 `tcpconnect` and `tcpaccept` (Page 505)
  - 11.2.10 `tcpreset` (Page 506)
  - 11.2.11 `capable` (Page 508)
  - 11.2.12 `setuids` (Page 512)

- **11.3 BPF One-Liners**
  - 11.3.1 BCC (Page 514)
  - 11.3.2 bpftrace (Page 514)
  - 11.3.3 BPF One-Liners Examples (Page 514)

- **11.4 Summary** (Page 515)

#### Chapter 12: Languages
- **12.1 Background**
  - 12.1.1 Compiled (Page 518)
  - 12.1.2 JIT Compiled (Page 519)
  - 12.1.3 Interpreted (Page 520)
  - 12.1.4 BPF Capabilities (Page 521)
  - 12.1.5 Strategy (Page 521)
  - 12.1.6 BPF Tools (Page 522)

- **12.2 C**
  - 12.2.1 C Function Symbols (Page 523)
  - 12.2.2 C Stack Traces (Page 526)
  - 12.2.3 C Function Tracing (Page 528)
  - 12.2.4 C Function Offset Tracing (Page 529)
  - 12.2.5 C USDT (Page 529)
  - 12.2.6 C One-Liners (Page 530)

- **12.3 Java**
  - 12.3.1 libjvm Tracing (Page 532)
  - 12.3.2 jnistacks (Page 533)
  - 12.3.3 Java Thread Names (Page 536)
  - 12.3.4 Java Method Symbols (Page 537)
  - 12.3.5 Java Stack Traces (Page 539)
  - 12.3.6 Java USDT Probes (Page 543)
  - 12.3.7 `profile` (Page 549)
  - 12.3.8 `offcputime` (Page 553)
  - 12.3.9 `stackcount` (Page 559)
  - 12.3.10 `javastat` (Page 562)
  - 12.3.11 `javathreads` (Page 563)
  - 12.3.12 `javacalls` (Page 565)
  - 12.3.13 `javaflow` (Page 566)
  - 12.3.14 `javagc` (Page 568)
  - 12.3.15 `javaobjnew` (Page 568)
  - 12.3.16 Java One-Liners (Page 569)

- **12.4 Bash Shell**
  - 12.4.1 Function Counts (Page 572)
  - 12.4.2 Function Argument Tracing (`bashfunc.bt`) (Page 573)
  - 12.4.3 Function Latency (`bashfunclat.bt`) (Page 576)
  - 12.4.4 `/bin/bash` (Page 577)
  - 12.4.5 `/bin/bash USDT` (Page 581)
  - 12.4.6 Bash One-Liners (Page 582)

- **12.5 Other Languages**
  - 12.5.1 JavaScript (Node.js) (Page 583)
  - 12.5.2 C++ (Page 585)
  - 12.5.3 Golang (Page 585)

- **12.6 Summary** (Page 588)

#### Chapter 13: Applications
- **13.1 Background**
  - 13.1.1 Application Fundamentals (Page 590)
  - 13.1.2 Application Example: MySQL Server (Page 591)
  - 13.1.3 BPF Capabilities (Page 592)
  - 13.1.4 Strategy (Page 592)

- **13.2 BPF Tools**
  - 13.2.1 `execsnoop` (Page 595)
  - 13.2.2 `threadsnoop` (Page 595)
  - 13.2.3 `profile` (Page 598)
  - 13.2.4 `threaded` (Page 601)
  - 13.2.5 `offcputime` (Page 603)
  - 13.2.6 `offcputimehist` (Page 607)
  - 13.2.7 `syscount` (Page 610)
  - 13.2.8 `ioprofile` (Page 611)
  - 13.2.9 `libc Frame Pointers` (Page 613)
  - 13.2.10 `mysqld_qslower` (Page 614)
  - 13.2.11 `mysqld_clat` (Page 617)
  - 13.2.12 `signals` (Page 621)
  - 13.2.13 `killsnoop` (Page 623)
  - 13.2.14 `pmlock` and `pmheld` (Page 624)
  - 13.2.15 `naptime` (Page 629)
  - 13.2.16 Other Tools (Page 630)

- **13.3 BPF One-Liners**
  - 13.3.1 BCC (Page 631)
  - 13.3.2 bpftrace (Page 631)

- **13.4 BPF One-Liners Examples**
  - 13.4.1 Counting `libpthread` Conditional Variable Functions for One Second (Page 632)

- **13.5 Summary** (Page 633)

#### Chapter 14: Kernel
- **14.1 Background**
  - 14.1.1 Kernel Fundamentals (Page 636)
  - 14.1.2 BPF Capabilities (Page 638)

- **14.2 Strategy** (Page 639)
- **14.3 Traditional Tools**
  - 14.3.1 Ftrace (Page 640)
  - 14.3.2 `perf sched` (Page 643)
  - 14.3.3 `slabtop` (Page 644)
  - 14.3.4 Other Tools (Page 644)

- **14.4 BPF Tools**
  - 14.4.1 `loads` (Page 646)
  - 14.4.2 `offcputime` (Page 647)
  - 14.4.3 `wakeuptime` (Page 649)
  - 14.4.4 `offwaketime` (Page 650)
  - 14.4.5 `mlock` and `mheld` (Page 652)
  - 14.4.6 Spin Locks (Page 656)

This table of contents is now more organized, with consistent formatting and clear section headings. Each chapter and sub-section is clearly labeled with the corresponding page numbers.