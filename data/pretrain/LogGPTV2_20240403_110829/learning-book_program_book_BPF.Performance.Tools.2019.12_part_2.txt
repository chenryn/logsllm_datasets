5.13 bpftrace Functions 161
5.13.1 printf0 162
5.13.2 join() 163
5.13.3 str() 163
5.13.4  kstack() and ustack() 164
5.13.5 ksym() and usym()165
5.13.6 kaddr() and uaddr0  166
---
## Page 14
Contents
xifi
5.13.7 system0 166
5.13.8 exit() 167
5.14 bpftrace Map Functions 167
5.14.1 count() 168
5.14.2  sum(), avg(), min(), and max()  169
5.14.3 hist()170
5.14.4  Ihist()171
5.14.5  delete() 171
5.14.6 clear() and zero() 172
5.14.7
print()172
5.15 bpftrace Future Work 173
5.15.1 Explicit Address Modes 173
5.15.2 Other Addlitions 174
5.15.3ply 175
5.16 bpfrace Intermals 175
5.17 bpftrace Debugging 176
5.17.1 printf0 Debugging 177
5.17.2 Debug Mode177
5.17.3 Verbose Mode 179
5.18 Summary 180
Part Il: Using BPF Tools
6 CPUs 181
6.1  Background  181
6.1.1 CPU Fundamentals 182
6.1.2 BPF Capabilities 184
6.1.3 Strategy 185
6.2 Traditional Tools  186
6.2.1 Kemel Statistics 187
6.2.2 Hardware Statistics 189
6.2.3 Hardware Sampling 192
6.2.4 Timed Sampling 192
6.2.5 Event Statistics and Tracing 196
6.3 BPF Tools 198
6.3.1 execsnoop 200
6.3.2 exitsnoop 202
6.3.3 runqlat 203
---
## Page 15
i
Contents
6.3.4 runqlen 207
6.3.5 runqslower 210
6.3.6 cpudist 211
6.3.7 cpufreq 212
6.3.8 profile 215
6.3.9 offcputime 219
6.3.10 syscount 224
6.3.11 argdist and trace 226
6.3.12 funccount 229
6.3.13 softirqs 231
6.3.14 hardirqs 232
6.3.15 smpcalls 233
6.3.16 llcstat 237
6.3.17 Other Tools 238
6.4 BPF One-Liners 238
6.4.1 BCC 238
6.4.2 bpftrace 239
6.5 Optional Exercises 240
6.6 Summary 241
7 Memory 243
7.1  Background 244
7.1.1 Memory Fundamentals 244
7.1.2 BPF Capabilities 247
7.1.3 Strategy 250
7.2 Traditional Tools 250
7.2.1 Kermel Log 251
7.2.2 Kemel Statistics  252
7.2.3 Hardware Statistics and Sampling 255
7.3 BPF Tools 257
7.3.1 0omkill 258
7.3.2 memleak 259
7.3.3 mmapsnoop 261
7.3.4 brkstack 262
7.3.5 shmsnoop 264
7.3.6 faults 264
7.3.7 ffaults 267
7.3.8 vmscan 268
---
## Page 16
Contents
7.3.9 drsnoop 271
7.3.10 swapin 272
7.3.11 hfaults 273
7.3.12 Other Tools 274
7.4 BPF One-Liners 274
7.4.1 BCC 274
7.4.2 bpftrace 275
7.5  Optional Exercises 275
7.6 Summary 276
8 File Systems 277
8.1 Background  278
8.1.1 File Systems Fundamentals 278
8.1.2 BPF Capabilities 280
8.1.3 Strategy 281
8.2 Traditional Tools 282
8.2.1  df 282
8.2.2 mount 283
8.2.3 strace 283
8.2.4 perf 284
8.2.5 fatrace 286
8.3  BPF Tools 287
8.3.1 opensnoop 289
8.3.2 statsnoop 291
8.3.3 syncsnoop 293
8.3.4 mmapfiles 294
8.3.5 scread 295
8.3.6 fmapfault 297
8.3.7 filelife 298
8.3.8 vfsstat 299
8.3.9 vfscount 301
8.3.10 vfssize 302
8.3.11 fsrwstat 304
8.3.12 fileslower 306
8.3.13 filetop 308
8.3.14 writesync 310
8.3.15 filetype 311
8.3.16 cachestat 314
---
## Page 17
KV
Contents
8.3.17 writeback 316
8.3.18 dcstat 318
8.3.19 dcsnoop 320
8.3.20 mountsnoop 322
8.3.21 xfsslower 323
8.3.22 xfsdist 324
8.3.23
ext4dist 327
8.3.24 icstat 330
8.3.25 bufgrow 331
8.3.26
readahead 332
8.3.27 Other Tools 334
8.4 BPF One-Liners 334
8.4.1 BCC 334
8.4.2 bpftrace 335
8.4.3 BPF One-Liners Examples 336
8.5 Optional Exercises 340
8.6Summary 340
9Disk 1/0341
9.1Background 342
9.1.1 Disk Fundamentals 342
9.1.2 BPF Capabilities344
9.1.3 Strategy 346
9.2 Traditional Tools 346
9.2.1 iostat 346
9.2.2 perf 348
9.2.3 blktrace 349
9.2.4 SCSI Logging 350
9.3 BPF Tools 351
9.3.1 biolatency 352
9.3.2 biosnoop 358
9.3.3 biotop 361
9.3.4 bitesize 362
9.3.5 seeksize 364
9.3.6 biopattem 366
9.3.7 biostacks 368
9.3.8 bioerr 371
9.3.9 mdflush 374
---
## Page 18
Contents
xvii
9.3.10 iosched 375
9.3.11 scsilatency 377
9.3.12 scsiresult 379
9.3.13 nvmelatency 381
9.4 BPF One-Liners 384
9.4.1 BCC 384
9.4.2 bpftrace 385
9.4.3 BPF One-Liners Examples 386
9.5 Optional Exercises 387
9.6 Summary 387
10 Networking 389
10.1 Background 390
10.1.1 Networking Fundamentals 390
10.1.2 BPF Capabilities 396
10.1.3 Strategy 398
10.1.4 Common Tracing Mistakes 399
10.2 Traditional Tools 399
10.2.1 ss  400
10.2.2 ip402
10.2.3 nstat 402
10.2.4 netstat 403
10.2.5 sar 405
10.2.6 nicstat 406
10.2.7 ethtool 407
10.2.8 tcpdump 408
10.2.9
9/proc409
10.3 BPF Tools 411
10.3.1 sockstat 412
10.3.2 sofamily 414
10.3.3 soprotocol 416
10.3.4 soconnect 419
10.3.5 soacoept 422
10.3.6
socketio
424
10.3.7 socksize
426
10.3.8 sormem 429
10.3.9 soconnlat 432
10.3.10 so1stbyte 435
---
## Page 19
xvii
Contents
10.3.11 tcpconnect 437
10.3.12 tcpaccept 440
10.3.13 tcplife 443
10.3.14 tcptop 448
10.3.15 tcpsnoop 449
10.3.16 tcpretrans 450
10.3.17
tcpsynbl 453
10.3.18 tcpwin 454
10.3.19 tcpnagle 456
10.3.20 udpconnect 458
10.3.21
gethostlatency 460
10.3.22 ipecn 461
10.3.23 superping 463
10.3.24qdisc-fq466
10.3.250
qdisc-cbq, qdisc-cbs, qdlisc-codel, qdisc-fq_codel, qdisc-red,
and qdisc-tbf 468
10.3.26 netsize 470
10.3.27 nettxdat 473
10.3.28 skbdrop 475
10.3.29 skblife 477
10.3.30 ieee80211scan 479
10.3.31
Other Tools 481
10.4 BPF One-Liners 482
10.4.1 BCC 482
10.4.2 bpftrace 482
10.4.3 BPF One-Liners Examples 484
10.5 Optional Exercises 487
10.6 Summary 488
11 Security 489
11.1 Background  489
11.1.1 BPF Capabilities 490
11.1.2 Unprivileged BPF Users 493
11.1.3 Configuring BPF Security 494
11.1.4 Strategy 495
11.2 BPF Tools 495
11.2.1 execsnoop 496
11.2.2 elfsnoop 497
---
## Page 20
Contents
xix
11.2.3 modsnoop 498
11.2.4 bashreadline 499
11.2.5 shellsnoop 500
11.2.6 ttysnoop 502
11.2.7 opensnoop 503
11.2.8 eperm 504
11.2.9 tcpconnect and tcpaccept 505
11.2.10 tcpreset 506
11.2.11 capable 508
11.2.12
setuids  512
11.3 BPF One-Liners 514
11.3.1 BCC 514
11.3.2 bpftrace 514
11.3.3 BPF One-Liners Examples 514
11.4 Summary 515
12 Languages517
12.1  Background 517
12.1.1 Compiled 518
12.1.2 JIT Compiled 519
12.1.3 Interpreted 520
12.1.4 BPF Capabilities 521
12.1.5 Strategy 521
12.1.6 BPF Tools 522
12.2 C 522
12.2.1 C Function Symbols 523
12.2.2 C Stack Traces 526
12.2.3 C Function Tracing 528
12.2.4 C Function Offset Tracing 529
12.2.5 C USDT 529
12.2.6 C One-Liners 530
12.3 Java  531
12.3.1 libjvm Tracing 532
12.3.2 jnistacks 533
12.3.3 Java Thread Names 536
12.3.4 Java Method Symbols 537
12.3.5 Java Stack Traces 539
12.3.6 Java USDT Probes 543
---
## Page 21
G
Contents
12.3.7 profile 549
12.3.8 offcputime 553
12.3.9 stackcount 559
12.3.10 javastat 562
12.3.11
javathreads 563
12.3.12 javacalls 565
12.3.13 javaflow 566
12.3.14 javagc 568
12.3.15 javaobjnew 568
12.3.16
Java One-Liners 569
12.4 Bash Shell 570
12.4.1 Function Counts 572
12.4.2 Function Argument Tracing (bashfunc.bt)  573
12.4.3 Function Latency (bashfunclat.bt)576
12.4.4 /bin/bash 577
12.4.5 /bin/bash USDT  581
12.4.6 bash One-Liners 582
12.5 Other Languages 583
12.5.1JavaScript (Node.js)583
12.5.2 C++ 585
12.5.3 Golang 585
12.6 Summary 588
13 Applications 589
13.1 Background 590
13.1.1 Application Fundamentals  590
13.1.2 Application Example: MySQL Server 591
13.1.3 BPF Capabilities 592
13.1.4 Strategy 592
13.2 BPF Tools 593
13.2.1 execsnoop 595
13.2.2 threadsnoop 595
13.2.3 profile 598
13.2.4 threaded 601
13.2.5 offcputime 603
13.2.6
offcpuhist 607
13.2.7 syscount 610
13.2.8 ioprofile 611
---
## Page 22
Contents
oxi
13.2.9 libc Frame Pointers 613
13.2.10 mysqld_qslower 614
13.2.11 mysqld_clat 617
13.2.12 signals 621
13.2.13
killsnoop 623
13.2.14 pmlock and pmheld 624
13.2.15
naptime 629
13.2.16 0ther Tools 630
13.3 BPF One-Liners 631
13.3.1 BCC 631
13.3.2 bpftrace 631
13.4 BPF One-Liners Examples 632
13.4.1  Counting libpthread Conditional Variable Functions for One
Second 632
13.5 Summary 633
14 Kernel 635
14.1  Background 636
14.1.1 Kernel Fundamentals 636
14.1.2 BPF Capabilities 638
14.2 Strategy 639
14.3 Traditional Tools 640
14.3.1 Ftrace 640
14.3.2 perf sched 643
14.3.3 slabtop 644
14.3.4 Other Tools 644
14.4 BPF Tools 644
14.4.1 loads 646
14.4.2 offcputime 647
14.4.3 wakeuptime 649
14.4.4 offwaketime 650
14.4.5
mlock and mheld 652
14.4.6 Spin Locks 656