...
···
pp
···
···
···
...
0
 .
0
0
0
...
1
pp
as can be easily veriﬁed directly. Equation (14) for the inverse also
holds here. The diagonal elements can be explicitly written, but we
defer this to Section 3.2.
Flow Sampling (FS)
In i.i.d. ﬂow sampling [3], ﬂows are retained independently with
probability pf and otherwise dropped with qf = 1 − pf .
The chief beneﬁt of FS is the fact that ﬂows which are sampled
retain their full complement of packets, eliminating completely the
difﬁculties in inverting sampled ﬂow sizes back to original sizes.
The chief disadvantage is that each packet requires a lookup in a
ﬂow table to see if it belongs to be ﬂow which has been sampled,
which cannot be done in DRAM at the highest rates.
A ﬂow evaporates iff its SYN is not sampled, hence b0k = qf .
If a ﬂow has been selected, which occurs with probability pf , then
conditional on this j = k with certainty, that is bjk = 1 if j = k,
else 0, for j ≥ 1:
B =
 .
qf
pf
0
...
0
qf
0
pf
...
0
qf
0
0
...
0
qf
0
0
...
0
···
···
···
...
···
qf
0
0
...
pf
(16)
The inverse of ˜B is just ˜B−1 = In/pf , and J takes the elegant
form J((cid:126)θ) = qf 1W 1T
W + pf diag(θ
(cid:40)
1
pf
−1
1 , . . . , θ
θj(1 − θj) + θ2
j ,
θjθk(1 − 1
),
pf
−1
W ), with inverse
j = k
otherwise.
−1((cid:126)θ))jk =
(J
or equivalently
−1((cid:126)θ) =
J
1
pf
diag((cid:126)θ) + (1 − 1
pf
)(cid:126)θ(cid:126)θ T.
(17)
Note that for 0 < pf < 1 all diagonal entries are positive while all
other entries are negative.
Packet Sampling with SYN, FIN & SEQ (SYN+FIN+SEQ)
In this scheme SYN packets are retained independently with prob-
ability pf and otherwise dropped with qf = 1 − pf , and the FIN
packets corresponding to sampled SYNs are also sampled, but no
others. Sequence numbers are then used to infer ﬂow sizes.
This scheme has two great advantages: like FS the ﬂows sam-
pled are sampled perfectly, and moreover this could be achieved by
physically sampling only two packets per ﬂow, based on looking
for SYN and FIN ﬂags on a per packet basis, which is feasible at
high speed. The disadvantage is that a moderate minority of ﬂows
do not terminate correctly with a FIN, and/or the FIN may be not
observable.
Information theoretically, SYN+FIN+SEQ is identical to ﬂow
sampling.
3.2 Dual Sampling (DS)
DS can be deﬁned simply as follows. First, at the packet level
it consists of two PS schemes running in parallel, one which op-
erates only on SYN packets with sampling probability pf , and the
other only on non-SYN packets with sampling probability pp. In a
second phase, sampled ﬂows which lack a SYN are discarded, and
sequence numbers are used to infer additional ‘virtual’ packets, as
in PS+SYN+SEQ. Thus, at one level DS is simply a generaliza-
tion of PS+SYN+SEQ, and reduces to it when pf = pp. However,
the generalization is signiﬁcant as it also includes FS as the spe-
cial case pp = 1, and interpolates continuously between the two.
This is illustrated in Figure 1 which depicts the (pp, pf ) parameter
space, and marks the special cases.
Dual Sampling is ‘dual’ in two senses. Computationally it can
be viewed as the original PS sampling being split into two, at the
(low) cost of per-packet switching based on some bit checking to
determine which PS applies. Information theoretically, the sam-
pling is now split into two parts with very different natures, each
controlled by a dedicated parameter: an FS-like direct sampling of
ﬂows, and a PS-like in-ﬂow sampling. Here pf controls the number
of sampled ﬂows, and pp their ‘quality’.
The derivation of the sampling matrix mirrors closely that of
PS+SYN+SEQ. The result shows clearly how pf and pp act in a
modular fashion. The ﬂow sampling component controls the top
row of B and factors ˜B, whereas the packet sampling component
determines the internal structure of ˜B.
qf
pf
0
0
...
0
qf
pf qp
pf pp
0
...
0
qf
pf q2
p
pf ppqp
pf pp
...
0
qf
pf q3
p
pf ppq2
p
pf ppqp
...
···
···
···
···
···
...
0
qf
p
pf qW−1
pf ppqW−2
pf ppqW−3
p
p
...
pf pp
 .
B =
The separation of the FS and PS roles in ˜B is clearly reﬂected in its
Figure 1: Parameter space (pp, pf ) of DS. Fixing the effective
sampling rate to be ESR= p constrains the family to the solid
(blue) curve pf (pp; p), where it reduces to PS+SYN+SEQ at
pp = p∗
p and PS at pp = 1. For ﬁxed p, the ESR constraint
curve depends on the average ﬂow duration D.
inverse:
−1 =
˜B
1
pf
1 − qp
0
0
pp
1
pp
0
...
0
...
0
0
− qp
pp
1
pp
...
0
 .
0
0
0
...
1
pp
0
0
− qp
...
···
pp
···
···
···
...
0
Once again, Equation (14) for the inverse Fisher information holds
here. We now given the diagonal elements explicitly for DS. By
setting pf = pp those for PS+SYN+SEQ can also be obtained.
qk−1
p
θk + θ2
1
W(cid:88)
W(cid:88)
k=2
k=j+1
qk−j
p
(1 + qp)θk + θ2
j
(18)
−1)11 =
(J
−1)jj =
(J
θ1(1 − θ1)
pf
+
1
pf pp
θj(1 − θj)
pf pp
+
1
pf pp
−1)W W =
(J
θW
pf pp
− qf
pf
θ2
W .
4. COMPARISONS
In this section we compare the performance of different methods.
We show how to optimize DS and then how to jointly optimize,
and evaluate, the statistical performance given simple abstractions
of computational costs.
4.1
Introduction
We must ﬁrst consider how to compare fairly. We do this in
two ways, using the following packet-based measures of incoming
workload/information.
• Packet Processing Rate (PPR):
the rate at which packets
are initially being sampled (and hence require some further
processing)
Figure 2: An equal PPR comparison of the CRLB bound for (cid:126)θ
with p = 0.005.
Figure 4: An equal ESR comparison of the CRLB bound for (cid:126)θ
with p = 0.005.
• Effective Sampling Rate (ESR):
the rate (average sampling
rate p) at which packets are arriving to the ﬂow table (and
hence become available as information for estimation).
PPR is a measure of the processing speed required by the methods,
whereas ESR is a measure of the arrival rate of raw information
concerning packets, in our case SYN bits and sequence numbers
(and possible FIN bits).
A natural performance criterion is the set of diagonal elements
of the CRLB, the k-th being
(I +)kk = (J
−1)kk − θ2
k,
(19)
since this is a lower bound on the variance of any unbiased estima-
tor of θk. We plot the square root of these values, calculated using
the expressions for the previous section. Consider the results of
Figure 2, where we set W = 5 with
(cid:126)θ = {0.31, 0.261, 0.206, 0.145, 0.077}.
Here use p = pp = 0.005 for all methods, giving them (DS aside)
the same PPR and in so doing providing a simple ‘as is’ direct
comparison.
As expected from earlier work, the performance of PS is extraor-
dinarily poor. In agreement with the results of [4] and as expected,
Figure 3: Dependence of the CLRB bound on PPR= p, PPR
comparison.
the inclusion of SEQ improves it enormously, by orders of magni-
tude, but it is still orders of magnitude behind FS, which has the
lowest standard deviation bound of all. In a very counterintuitive
result (see Remark 7.1 in Appendix), PS+SYN performs (much!)
better than PS. This can be explained by noting that in the uncon-
ditional framework, information in discarded ﬂows is not entirely
wasted, some is recouped by the (observable) increase in the j = 0
outcome. This together with the lack of ﬂow length bias in SYN
sampled ﬂows (a powerful FS type beneﬁt), results in an overall
beneﬁt. Two results for DS are given, one with pf = 0.1 above p
and one pf = 0.001 below, yielding performance to either side of
its nearest rival PS+SYN+SEQ. Using the same PPR based com-
parison, Figure 2 shows the improvement in CRLB as p increases,
as we expect. We see that very high values of p are needed before
the performance of FS is approached (DS is omitted for simplicity).
Because the methods which discard ﬂows without SYN pack-
ets lose (the majority) of their packets, an equal PPR comparison
greatly disadvantages them. An equal ESR comparison effectively
inﬂates the pp parameter of such methods to compensate.
It is not difﬁcult to show that an ESR of p constrains the DS
family to a curve in the (pp, pf ) space, parameterized by p, given
by
pD
,
pf (pp; p) =
pp(D − 1) + 1
(20)
where D ≥ 1 is the average ﬂow size. For ﬁxed p, this gives pf as
a monotonically decreasing, in fact convex, function of pp. Three
examples (the blue curves) are given in Figure 1 for different values
of D. To maintain an ESR ﬁxed at p, if we increase pp we must