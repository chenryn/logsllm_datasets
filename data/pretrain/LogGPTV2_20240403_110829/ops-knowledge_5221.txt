User: 请完成基础设施运维领域的自动化脚本类任务请编写一个Python脚本，用于批量重命名服务器上的文件，支持正则表达式和按照指定规则进行重命名。


Assistant: 以下是一个简单的Python脚本，可以实现批量重命名服务器上的文件：

```python
import os
import re

def get_new_filename(directory, filename, pattern, replacement):
    new_filename = re.sub(pattern, replacement, filename)
    new_path = os.path.join(directory, new_filename)

    if os.path.exists(new_path):
        count = 1
        while True:
            numbered_filename = "{}_{}".format(new_filename, count)
            numbered_path = os.path.join(directory, numbered_filename)
            if not os.path.exists(numbered_path):
                return numbered_filename, numbered_path
            count += 1
    else:
        return new_filename, new_path

def batch_rename_files(directory, pattern, replacement):
    files = os.listdir(directory)

    for filename in files:
        if re.search(pattern, filename):
            new_filename, new_path = get_new_filename(directory, filename, pattern, replacement)
            old_path = os.path.join(directory, filename)
            os.rename(old_path, new_path)
            print('Renamed:{}->{}'.format(old_path,new_path))

directory = '/path/to/files'
pattern = r'old_name(\d+)\.txt'
replacement = r'new_name\1.txt'

batch_rename_files(directory, pattern, replacement)
```

在上面的示例中，我们首先设置要重命名的文件路径和要用来匹配和替换文件名的正则表达式和重命名规则。

接下来，我们使用Python的os模块中的os.listdir函数遍历文件夹中的所有文件，并使用os.path.join函数构造文件路径,如果文件名与正则表达式模式匹配，就使用替换规则生成新的文件名，并通过os.rename函数进行重命名。重命名后，将打印出每个文件的旧路径和新路径。

最后，我们可以将上面的代码保存为一个Python脚本，运行该脚本即可批量重命名文件。