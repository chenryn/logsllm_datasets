## 在macOS中制作debian USB安装镜像, 在带Nvidia显卡笔记本上的安装部署debian 11 - 测试 PostgreSQL, AIGC cuda 应用  
### 作者                                                
digoal                                                
### 日期                                                
2023-03-17                                            
### 标签                                                
PostgreSQL , PolarDB , nvidia , debian , aigc , cuda               
----                                                
## 背景   
一台家里的老笔记本, 配置还可以(i7 8550u, 16G内存, nvme SM961 256G SSD, Nvidia MX150 GPU), 拿出来当cuda服务器测试用.    
用于AIGC, PG-hetro的测试  
https://github.com/heterodb/pg-strom    
[《PostgreSQL GPU 加速(HeteroDB pg_strom) (GPU计算, GPU-DIO-Nvme SSD, 列存, GPU内存缓存)》](../201806/20180602_02.md)  
[《[未完待续] PostgreSQL HeteroDB GPU 加速 - pl/cuda , pg-strom , heterodb》](../201803/20180310_09.md)  
[《使用 PGStrom 2 (GPU JOIN, BulkScan, GpuPreAgg, ...)》](../201508/20150831_01.md)  
[《试用 PGStrom》](../201508/20150814_02.md)  
## 内容简介
- 1 下载debian 11 gnome-non-free x86_64镜像, 制作debian USB安装介质;    
- 2 安装debian, 配置无线网络, 优化无线网络, 设置默认启动非图形界面, 安装openssh-server, 配置sshd;     
- 3 编写MacOS 自动ssh连接debian脚本;    
## 一、制作debian usb安装介质    
1、下载debian, 选择就近、网络带宽较大的网站下载:    
注意debian是自由软件, 商业软件的firmware包都没有打包到debian的原生镜像中, 导致使用原生debian iso可能安装过程还需要额外提供firmware, 非常麻烦, 幸好有non-free版本, 会带上这些firmware. 所以我们下载gnome + non-free iso来制作usb 安装盘.   
https://mirrors.nju.edu.cn/debian-nonfree/cd-including-firmware/11.6.0-live%2Bnonfree/amd64/iso-hybrid/  
debian-live-11.6.0-amd64-gnome+nonfree.iso  
2、检查checksum, 对比debian给出的sum是否一致, 确保下载的iso文件正确.     
```    
shasum -a 256 ./debian-live-11.6.0-amd64-gnome+nonfree.iso  
```    
3、插入usb, 并 umount usb(注意不是推出.)  
```    
diskutil list    
/dev/disk2 为u盘设备号    
digoaldeAir:Downloads digoal$ diskutil umountDisk /dev/disk2    
Unmount of all volumes on disk2 was successful    
```    
4、将镜像写入usb, 使用 `/dev/rdisk` 更快.      
```    
digoaldeAir:Downloads digoal$ sudo dd if=./debian-live-11.6.0-amd64-gnome+nonfree.iso of=/dev/rdisk2 bs=1m    
Password:    
3649+1 records in    
3649+1 records out    
3826831360 bytes transferred in 331.014593 secs (11560914 bytes/sec)    
```    
为什么呢？ 在OS X中，每个磁盘在`/dev`中可能有两个路径引用：    
- `/dev/disk`    ＃是缓冲设备，这意味着要发送的所有数据都经过了额外的处理。    
- `/dev/rdisk`   ＃是原始路径，速度更快。    
在Class 4 SD卡上，使用rdisk路径的差异大约快20倍。    
5、dd完成后, 推出usb    
## 二、使用usb在haier 5000a笔记本上安装debian    
1、配置bios, 使用uefi模式引导  
- bios 打开 security boot  (使用uefi, 不开启tpm, 使用insecure boot.)  
后面安装时才能正常引导, 理论上使用bios传统模式, 配置mbr分区也能引导, 但是不知道撒情况反正我这没成功.  (uefi需使用gpt分区表, 同时使用efi分区)   
```  
/dev/nvme0n1p1 on /boot/efi type vfat (rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro)  
/dev/nvme0n1p1  511M  5.8M  506M   2% /boot/efi  
```  
2、使用USB设备启动, 安装debian 11, 安装时不要配置无线网络, 跳过即可. 如果你配置了网络, 在更新security 包时使用国外源会特别慢.    
可以在安装好之后, 配置国内的源再更新.      
3、安装完毕, 移除usb后, 重启, 完成安装.    
4、配置国内的apt源.  
```  
vi /etc/apt/sources.list  
deb https://mirrors.nju.edu.cn/debian/ bullseye main non-free contrib    
deb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib    
deb https://mirrors.aliyun.com/debian-security/ bullseye-security main    
deb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main    
deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib    
deb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib    
deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib    
deb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib   
apt update   
apt-get reinstall apt-transport-https ca-certificates     
sed -i "s@http://mirrors.nju.edu.cn@https://mirrors.nju.edu.cn@g" /etc/apt/sources.list    
apt update    
```  
5、安装openssh-server 并配置 sshd 服务.    
```    
apt-get install openssh-server    
```    
配置sshd:    
```    
vi /etc/ssh/sshd_config    
去除如下几行的注释:     
Port 22    
ListenAddress 0.0.0.0    
PasswordAuthentication yes    
PermitRootLogin yes  
TCPKeepAlive yes    
```  
重启sshd服务:    
```  
systemctl restart ssh.service  
```    
可以在图形界面用NetManager(或者在shell中使用nmcli配置)配置无线网卡, 建议配置静态地址, 静态DNS.   
这里开始就可以用第四步的shell远程登录了, 更加方便.   
6、配置默认启动到命令行界面    
https://blog.csdn.net/joker00007/article/details/120658259    
```    
sudo systemctl set-default multi-user.target     
```    
如果要改回来图形界面启动:    
```    
sudo systemctl set-default graphical.target    
```    
如果要在命令行界面启动图形界面:    
```    
startx    
```    
7、关闭无线网卡电源管理, 获得更稳定的无线网络性能    
查询无线网卡设备名    
```    
iwconfig    
wlp5s0    IEEE 802.11  ESSID:"Redmi_keting_5G"      
          Mode:Managed  Frequency:5.805 GHz  Access Point: 28:D1:27:5A:A3:A8       
          Bit Rate=433.3 Mb/s   Tx-Power=22 dBm       
          Retry short limit:7   RTS thr:off   Fragment thr:off    
          Power Management:off    
          Link Quality=55/70  Signal level=-55 dBm      
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0    
          Tx excessive retries:0  Invalid misc:43   Missed beacon:0    
```    
临时关闭无线网卡电源管理    
```    
sudo iwconfig wlp5s0 power off    
```    
永久关闭无线网卡电源管理    
```    
cd /etc/NetworkManager/conf.d/    
sudo vi default-wifi-powersave-on.conf     
[connection]    
wifi.powersave = 2    
```    
8、其他配置, 笔记本当服务器用, 所以需要配置如下.      
以下在图形界面即可操作:    
- 1 locate: shanghai; collate: en_US; language: en_US;  
- 2 关闭蓝牙  
- 3 插线时不使用节能, 不待机等  
- 4 禁止网卡节能, 防止网络卡顿  
- 5 关闭自动安装更新 (仅提示安全类更新, 但是需要人工进行更新)   
- 6 cpu主频设置: https://blog.csdn.net/xuershuai/article/details/122023817     
```  
root@localhost:~# cpufreq-info |grep governors  
  available cpufreq governors: performance, powersave  
设置cpu为节能或性能模式  
cpufreq-set -g powersave  
OR  
cpufreq-set -g performance  
```  
- 7 合盖和电源按钮配置, 防止盒盖后休眠:    
```  
sudo vi /etc/systemd/logind.conf  
设置如下:  
HandlePowerKey=ignore  
HandleLidSwitch=ignore  
重启systemd-logind服务  