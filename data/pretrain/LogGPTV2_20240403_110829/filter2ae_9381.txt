# 漏洞分析：CVE-2016-9311 - NTPD漏洞导致拒绝服务

## 译文声明
本文为翻译文章，原文来源：[securingtomorrow.mcafee.com](http://securingtomorrow.mcafee.com)。具体表达和含义请以原文为准。

**翻译者**：overXsky  
**预估稿费**：100 RMB  
**投稿方式**：发送邮件至 [linwei#360.cn](mailto:linwei#360.cn)，或登录 [网页版](http://bobao.360.cn/contribute/index) 在线投稿

## 前言
许多设备依赖网络进行时间同步，这通常通过网络时间协议（NTP）来实现。NTP守护进程（NTPD）是该协议的开源实现。近期，NTPD被发现存在多个安全漏洞，其中之一是CVE-2016-9311，该漏洞可导致崩溃并引发拒绝服务攻击。本文将详细分析这一漏洞。

## 查找更改
通过检查补丁程序，我们在 `ntp_control.c` 文件中发现了 `report_event` 函数，这是修复该漏洞的关键部分。

使用补丁比较工具（如[http://bugs.ntp.org/attachment.cgi?id=1460&action=diff](http://bugs.ntp.org/attachment.cgi?id=1460&action=diff)），我们可以看到以下差异：

- **未修补代码**：
  ```c
  INSIST(peer != NULL);
  ```
- **已修补代码**：
  ```c
  if ((err & PEER_EVENT) && !peer)
      return;
  ```

`INSIST` 函数定义在 `ntp_assert.h` 头文件中，如果 `peer == NULL`，则会触发断言失败，导致NTPD崩溃。修复后的代码用一个简单的 `if` 语句替换了 `INSIST`，如果 `peer` 为 `NULL`，则直接返回，避免了崩溃。

## 分析根本原因
要触发这个漏洞，程序需要执行到 `report_event` 函数，并传递特定参数使其判断失败并崩溃。

当NTPD接收到数据包时，会调用 `ntp_proto.c` 中的 `receive` 函数。该函数会对数据包进行各种检查，其中包括验证加密否定应答（crypto-NAK）数据包的有效性。

如果NTPD接收到无效的NAK数据包，它会调用易受攻击的 `report_event` 函数。该函数会查找数据包中的陷阱（trap）数量，如果没有配置陷阱（关于NTPD陷阱可以参考[这里](https://mdshaonimran.wordpress.com/2012/04/26/ntp-server-how-to/)），则函数会直接返回，不会执行易受攻击的代码片段。

只有在NTPD启用了陷阱功能时，才能利用此漏洞。`valid_NAK` 函数用于验证NAK数据包的有效性，定义在 `ntp_proto.c` 文件中。根据该函数的代码，一个数据包若满足以下任一条件即被视为无效：
1. 模式不是 `MODE_SERVER`、`MODE_ACTIVE` 或 `MODE_PASSIVE`。
2. `keyid` 不为0。
3. `peer` 为 `NULL`，或者 `peer` 没有密钥。
4. `ORIGIN` 不匹配。

如果NTPD上启用了陷阱功能，只需构造一个 `peer` 为 `NULL` 的无效NAK数据包并发送即可触发此漏洞。我们使用调试器对未修复版本的代码进行了测试，结果显示NTPD因判断失败而崩溃。

## 总结
此漏洞在NTPD启用陷阱功能的情况下可以被利用，导致崩溃并引发拒绝服务。默认情况下，NTPD不启用陷阱功能，因此无需授权即可利用此漏洞。

防范措施包括安装最新的补丁程序或更新到最新版本的NTPD，或者使用McAfee网络安全平台等防护软件。

## 参考文献
- [NTP Security Notice](http://support.ntp.org/bin/view/Main/NtpBug3119)
- [CVE-2016-9311 on NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9311)
- [CERT/CC Vulnerability Note VU#633847](http://www.kb.cert.org/vuls/id/633847)