查询选修“张三”老师所授课程的学生中，成绩最高的学生信息及其成绩
http://liyangbit.com
101
---
## Page 102
Chapter1.超经典MySQL练习50题
Python数据之道
1.41.2 SQL实现
1、我们先找出张三老师教了哪些课程
select
c.c_id
,C.c_nane
fron Course c
5
join Teacher t
on c.t_id = t.t_id
where t.t_name = ' 张 三 ';
mysql>
select
c.c_id
>
,c.c_name
from Course
2
joinTeacher
onc.t_id=t.t_id
c_name
02
I数学
row
in set （0.00 sec)
2、找出哪些人修了数学
select
sc.s_id
,sc.s_score
fron Score sc
left join Course c
on sc.c_id = c.c_id
left join Teacher t
on c.t_id = t.t_id
where t.t_name =
http://liyangbit.com
102
---
## Page 103
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select
->sc.s_id
3个表的连接，找出哪些人修了数学
->,sc.s_score
->from Score sc
->left join Course c
>
on sc.c_id = c.c_id
->left join Teacher t
->onc.t_id=t.t_id
->wheret.t_name ='张三
5_id|s_score1
01
90
1
θ2
601
θ3
811
θ4
401
05
87
θ7
891
rows in set (θ.0θ sec)
3、通过max函数找出成绩的最高分
select
max(sc.s_score)
from Score sc
left join Course c
on sc.c_id = c.c_id
left join Teacher t
on c.t_id = t.t_id
where t.t_name =张=';
http://liyangbit.com
103
---
## Page 104
Chapter1.超经典MySQL练习50题
Python数据之道
mysql>
select
>
max(sc.s_score)
Tromscore sc
->leftjoinCoursec
>
onsc.c_id=c.c_id
->left join Teacher t
on c.t_id =t.t_id
>
where t.t_name =
张三
max(sc.s_score)
90
row
inset（
（0.00sec)
4、连接Student表，找出学生信息
select
S , #
,sc.s_score
,sc.c_id
fron Student s
,C.c_name
left join Score sc
on s.s_id = sc.s_id
left join Course c
10
on sc.c_id = c.c_id
11
where sc.s_score in (select max(sc.s_score)
量大值90分的确定
13
left join Course c
from Score sc
14
on sc.c_id = c.c_id
15
left join Teacher t
16
on c.t_id = t.t_id
77
where t.t_nane =*张 三 ');
http://liyangbit.com
104
---
## Page 105
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select
,sc.s_score
->
,sc.c_id
from 5tudent 5
,c.c_nane
>
left join Score sc
left join Course c
ons.s_1d=sc.s_1d
on sc,c_id = c,c_id
where sc.s_score 1n
(select nax(sc.s_score)
最大值99分的确定
from Score sc
on sc.c_1d = c.c_1d
left join Course c
>
left join Teacher t
on c.t_id = t.t_1d
（.三.weuJ
s_1d I s_nane I s_b1rth
I s_sex 1 s_score I c_1d I c_name 1
81
11998-81-011男
98 1 62
|数学
(2as 10°0) 19s
1.42题目41
1.42.1题目需求
查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩
1.42.2 SQL实现
select
a.s_id
3
,a. c_1d
fron Score a
,a.s_score
b
join Score b
on a.c_id != b.c_id
and a.s_score = b.s_score
and a.s_id != b.s_id;
http://liyangbit.com
105
---
## Page 106
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select
->a.s_id
>
,a.c_id
,a.s_score
>
from Score a
>
join Score b
on a.c_id != b.c_id
and
a.s_score = b.s_score
and a.s_id != b.s_id;
5_id
c_id1s_score
θ2
103
08
01
101
801
03
101
80
θ2
103
80
rows
inset
(0.00
sec)
我们对学号还需要去重下：
select
distinct a.s_id
,a.c_id
fron Score a
,a.s_score
join Score b
on a.c_id != b.c_id
and a.s_score = b.s_score
and a.s_id != b.s_id;
http://liyangbit.com
106
---
## Page 107
Chapter1.超经典MySQL练习50题
Python数据之道
mysql>
select
->distinct a.s_id
->
,a.c_id
,a.s_score
from Score
join Score b
on a.c_id != b.c_id
>
and a.s_score
=b.s_score
>
and a.s_id != b.s_id;
s_id1c_id1s_score|
+
θ2
103
801
01
101
801
θ3
101
801
rows
in set （0.0θ sec)
再看看原始的数据中是否符合要求：
http://liyangbit.com
107
---
## Page 108
Chapter1.超经典MySQL练习50题
Python数据之道
c_id
score
01
01
80
θ2
01
70
03
01
80
04
01
50
05
01
76
6
01
43
01
02
90
θ2
θ2
60
03
θ2
81
04
θ2
40
05
θ2
87
07
θ2
89
01
03
96
一
θ2
03
80
03
03
85
04
03
30
06
03
56
07
03
94
18
rows in set （0.01 sec)
1.43题目42
1.43.1题目需求
查询每门功成绩最好的前两名
http://liyangbit.com
108
---
## Page 109
Chapter1.超经典MySQL练习50题
Python数据之道
1.43.2 SQL实现
1.43.2.1自己的方法
还需要好好优化的
先提出请文的前2名同学
3
select
c.c_id
,sc.s_id
,sc.s_score
fron Score sc
join Course c
on sc.c_id = c.c_id
10
where c.c_name =语文
改成数学和英语即可求出相应的信息
11
order by sc.s_score desc
12
Limit 2;
mysql> select
-> c.c_1d
->,5c.5_1d
>
,sc.s_score
->fron 5core sc
-> join Course c
on sc.c_id = c.c_id
where c.c_name=语文'
-> order by sc.s_score desc
-改成数学和英语即可求出相应的信息
>1in1t2;
c_id 1 s_1d I 5_score 1
..+......+.
01
101
801
01
103
801
rows in set (6.θ0 sec)
将3门学科的信息进行拼接即可求出答案：
最终期本
3
(select
c.c_id
,sc,s_id
fron Score sc
,sc.s_score
join Course c
on sc.c_id = c.c_id
10
where c.c_name =语文
11
order by sc.s_score desc
12
Limit 2)
http://liyangbit.com
109
---
## Page 110
Chapter1.超经典MySQL练习50题
Python数据之道
13
14
union
15
16
(select
17
c.c_1d
18
,sc.s_1d
19
fron Score sc
,sc.s_score
20
21
join Course c
22.
on sc.c_id = c.c_id
23
where c.c_name =致学1
24
order by sc.s_score desc
25
Limit 2)
2.6
27
unfon
28
29
(select
30
c.c_id
31
,sc.s_1d
32
fron Score sc
,sc.s_score
33
34
join Course c
35
on sc.c_id = c.c_id
36
where c.c_name=英语
LE
order by sc.s_score desc
38
Limit 2)
C
1d
score
01
01
80
01
03
一
80
02
01
90
02
07
89
03
01
96
03
07
94
6
rows
inset
（0.00
sec
http:/liyangbit.com
110
---
## Page 111
Chapter1.超经典MySQL练习50题
Python数据之道
1.43.2.2参考方法（好方法）
如何解决前几名排序的问题目图太牛了
select
a.c_id
3
,a.s_id
,a.s_score
fron Score a
where (select count(1)
from Score b
count(1)类 低 count(*)： 统计 表b中 分 数 大的 数量
where b.c_id=a.c_id
课程相网
and b.s_score >=
order by a.c_id;
a.s_score)  select · from Score group by c_id,s_id,s_score;
1oss 1 p 1 ps
θ1
1θ1
891
θ2
1θ1
761
83
1θ1
861
84
1θ1
581
θ5
161
761
96
431
161
901
θ2
162
691
θ3
162
81
84
162
481
95
162
871
87
162
891
θ1
163
96 1
82
163
881
83
163
85 1
84
163
301
86
103
561
87
163
94 1
18 rows
1n set (0.00 sec)
还需要好好理解下
1.44题目43
1.44.1题目需求
统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，
若人数相同，按课程号升序排列
1.44.2SQL实现
select
c_1d
,count(s_score) num
from Score
group by c_1d
b
having num > 5
order by nun desc, c_id;
http://liyangbit.com
112
---
## Page 113
Chapter1.超经典MySQL练习50题
Python数据之道
mysql>
select
c_id
,count（s_score) num
from Score
group by c_id
having num >5
>
order by num desc，c_id;
P
1num
01
人数相同，学号升序
02
θ3
rows
in set （0.00 sec）
1.45题目44
1.45.1题目需求
检索至少选修两门课程的学生学号
1.45.2 SQL实现
结果显示全部满足要求
select
s_id
,count(×) nun
fron Score
group by s_id
having num >= 2;
http://liyangbit.com
113
---
## Page 114
Chapter1.超经典MySQL练习50题
Python数据之道
mysql> select
s_id
，count（*）num
from Score
group by s_id
havingnum>=2；
id
num
01
3
02
3
03
3
04
m
05
2
06
2
07
rows
inset（0.00sec)