3\) \"hsy\"
4\) \"100000\"
### hdel 命令(删除多个field)
删除hash表中多个field的值,不存在则忽略
192.168.4.56:6356\> hdel key field \[field \...\]
192.168.4.56:6356\> hkeys tarena
1\) \"address\"
2\) \"tel\"
3\) \"person\"
4\) \"pay\"
192.168.4.56:6356\> hdel tarena pay person
(integer) 2
192.168.4.56:6356\> hkeys tarena
1\) \"address\"
2\) \"tel\"
# NOSQL04\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
# MongoDB概述
介于关系型数据库和非关系型数据库之间的产品
-   一款基于分布式文件存储的数据库,旨在为WEB应用提供可扩展的高性能数据存储解决方案
-   将数据存储为一个文档(类似于json对象),数据结构由键值(key=\>value)对组成
-   支持丰富的查询表达,可以设置任何属性的索引
-   支持副本集(类似于主从),分片
相关概念
![LINUXNSD_V01NOSQLDAY04_006](media/image11.png){width="5.760416666666667in"
height="3.1840277777777777in"}
表称为集合
行记录称为文档
列称为字段
# 1搭建MDB服务器
## 1.1装包并创建工作目录
mongodb-linux-x86_64-rhel70-3.6.3.tgz包是都已编译安装好的,解压即可使用
\[root@client-50 \~\]# tar -xf mongodb-linux-x86_64-rhel70-3.6.3.tgz
\[root@client-50 \~\]# ls
mongodb-linux-x86_64-rhel70-3.6.3
mongodb-linux-x86_64-rhel70-3.6.3.tgz
\[root@client-50 \~\]# cd mongodb-linux-x86_64-rhel70-3.6.3/
\[root@client-50 mongodb-linux-x86_64-rhel70-3.6.3\]# ls
bin GNU-AGPL-3.0 MPL-2 README THIRD-PARTY-NOTICES
\[root@client-50 \~\]# mkdir /usr/local/mongodb
\[root@client-50 \~\]# mkdir /usr/local/mongodb/etc
\[root@client-50 \~\]# mkdir /usr/local/mongodb/log
\[root@client-50 \~\]# mkdir -p /usr/local/mongodb/data/db
\[root@client-50 \~\]# cp -r mongodb-linux-x86_64-rhel70-3.6.3/bin
/usr/local/mongodb/
\[root@client-50 \~\]# ls /usr/local/mongodb/
bin data etc log
\[root@client-50 \~\]# cd /usr/local/mongodb/bin/
\[root@client-50 bin\]# ls
bsondump mongod mongofiles mongoreplay mongostat
install_compass mongodump mongoimport mongorestore mongotop
mongo mongoexport mongoperf mongos
## 1.2创建配置文件
\[root@client-50 bin\]# vim /usr/local/mongodb/etc/mongodb.conf
dbpath=/usr/local/mongodb/data/db #数据库目录
logpath=/usr/local/mongodb/log #日志目录
logappend=true #追加方式记录日志信息
fork=true #守护进程方式运行(无访问也在后台运行,等待访问)
bind_ip=192.168.4.50 #指定连接地址
port=27050 #指定连接端口
## 1.3启动服务
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf
about to fork child process, waiting until server is ready for
connections.
forked process: 5411
child process started successfully, parent exiting
## 1.4停止服务
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf \--shutdown
killing process with pid: 5411
## 1.6查看服务
\[root@client-50 \~\]# netstat -unltp \|grep 27017
tcp 0 0 127.0.0.1:27017 0.0.0.0:\* LISTEN 5411/mongod
\[root@client-50 \~\]# ps -C mongod
PID TTY TIME CMD
5411 ? 00:00:02 mongod
## 1.7设置别名方便启动停止服务
设置临时启动别名
\[root@client-50 \~\]# alias mdbstart=\'/usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf\'
设置临时停止别名
\[root@client-50 \~\]#alias mdbstop=\'/usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf \--shutdown\'
\[root@client-50 \~\]# vim /root/.bashrc #编辑别名配置文件永久生效
\# .bashrc
\# User specific aliases and functions
alias mdbstart=\'/usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf\'
alias mdbstop=\'/usr/local/mongodb/bin/mongod -f
/usr/local/mongodb/etc/mongodb.conf \--shutdown\'
\[root@client-50 \~\]# mdbstop
killing process with pid: 5597
\[root@client-50 \~\]# mdbstart
about to fork child process, waiting until server is ready for
connections.
forked process: 6082
child process started successfully, parent exiting
## 1.8连接服务存取数据
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Welcome to the MongoDB shell.
For interactive help, type \"help\".
For more comprehensive documentation, see
http://docs.mongodb.org/
Questions? Try the support group
http://groups.google.com/group/mongodb-user
Server has startup warnings:
2019-03-02T15:51:35.634+0800 I CONTROL \[initandlisten\]
2019-03-02T15:51:35.634+0800 I CONTROL \[initandlisten\] \*\* WARNING:
\...\.....
2019-03-02T15:51:35.635+0800 I CONTROL \[initandlisten\]
\>
\> show dbs
admin 0.000GB
config 0.000GB
local 0.000GB
\> exit
bye
修改了连接bin_ip与port参数后连接方式
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongo \--host 192.168.4.50
\--port 27050
# 2常用管理命令
## 2.1数据库管理命令
### show dbs查看已有的库
\> show tables
\> use gamedb #创建数据库
switched to db gamedb
\> show tables
t1
t2
### db显示当前所在库
db
\> db
test
### use 库名:切换库
库不存在,将延时创建库
use 库名
\> db
test
\> use gamedb
switched to db gamedb
\> db
gamedb
### db.dropDatabase()删除当前所在库
db.dropDatabase()
## 2.2集合管理
### show tables查看库下已有集合
show collections 或者 show tables
\> show tables
### db.t1.save创建集合
\> db.t1.save({name:\"bob\",age:19}) #创建t1集合,并插入文档(行数据)
WriteResult({ \"nInserted\" : 1 })
\> show tables #显示集合
t1
\> db.t1.find() #查看t1集合
{ \"\_id\" : ObjectId(\"5c7a41fb99716aece7440d9b\"), \"name\" : \"bob\",
\"age\" : 19 }
\> db.t1.save({name:\"tom\",age:19,school:\"tarnea\"})
WriteResult({ \"nInserted\" : 1 })
### show tables查看集合
\> show tables
t1
### db.t2.drop()删除集合
\> db.t2.save({name:\"zdd\",age:18})
WriteResult({ \"nInserted\" : 1 })
\> show tables
t1
t2
\> db.t2.drop()
true
\> show tables
t1
## 2.3文档基本管理
\> db.t1.find() #查看文档
\> db.t1.count() #统计行个数
\> db.t1.insert({name:"dachui",age:18}) #添加插入文档
\> db.t1.find({条件}) #按条件查看文档
\> db.t1.findOne() #返回一行,查看第一行
\> db.t1.remove({}) #删除所有行
\> db.t1.remove({条件}) #按条件匹配删除行
### db.t1.save添加/插入文档
一次只能添加一条数据
\> db.t1.save({name:\"jim\",age:90})
2019-03-02T16:58:23.623+0800 E QUERY \[thread1\] TypeError: db.t1save is
not a function :
@(shell):1:1
\> db.t1.save({name:\"jim\",age:90})
WriteResult({ \"nInserted\" : 1 })
\> show tables
t1
### db.t1.insert添加/插入文档
一次只能添加一条
\> db.t1.insert({name:\"dachui\",age:80}) #与db.t1.save功能一样
WriteResult({ \"nInserted\" : 1 })
### save与insert区别
save
集合不存在时创建集合,然后再插入记录
id字段已存在时,修改文档字段值
id字段不存在时,插入文档
insert
集合不存在时创建集合,然后再插入记录
id字段值已存在时,放弃插入
id字段值不存在时,插入文档
insertMany
### db.t1.insertMany添加/插入多条文档
rs1:PRIMARY\>
db.t1.insertMany(\[{name:\"zdd2\",age:19},{name:\"zdd3\",email:\"PI:EMAIL\"}
\])
{
\"acknowledged\" : true,
\"insertedIds\" : \[
ObjectId(\"5c7cf16e2c5c3ca306aa8c93\"),
ObjectId(\"5c7cf16e2c5c3ca306aa8c94\")
\]
}
rs1:PRIMARY\> db.t1.find()
{ \"\_id\" : ObjectId(\"5c7cf09e2c5c3ca306aa8c8c\"), \"name\" : \"zdd\"
}
{ \"\_id\" : ObjectId(\"5c7cf0ee2c5c3ca306aa8c8d\"), \"name\" :
\"zdd2\", \"age\" : 19 }
{ \"\_id\" : ObjectId(\"5c7cf0ee2c5c3ca306aa8c8e\"), \"name\" :
\"zdd3\", \"email\" : \"PI:EMAIL\" }
### db.t1.find()查看文档
\> db.t1.find()
{ \"\_id\" : ObjectId(\"5c7a41fb99716aece7440d9b\"), \"name\" : \"bob\",
\"age\" : 19 }
{ \"\_id\" : ObjectId(\"5c7a44cc99716aece7440d9c\"), \"name\" : \"tom\",
\"age\" : 19, \"school\" : \"tarnea\" }
{ \"\_id\" : ObjectId(\"5c7a45b599716aece7440d9e\"), \"name\" : \"jim\",
\"age\" : 90 }
{ \"\_id\" : ObjectId(\"5c7a45ef99716aece7440d9f\"), \"name\" :
\"dachui\", \"age\" : 80 }
### db.t1.find({条件})按条件查看文档
\> db.t1.find({条件})
### db.t1.findOne查看第一行
\> db.t1.findOne() #返回一行,查看第一行
### db.t1.count统计行个数 
\> db.t1.count()
4
### db.t1.remove删除行
\> db.t1.remove({}) #删除所有行
\> db.t1.remove({条件}) #按条件匹配删除行
# 3数据导入导出
导出:把集合里的文档保存到系统文件里
导入:把系统文件的内容导入到集合里
> 加\--drop删除库中已有数据再导入,加-headrelin,忽略标题
## 3.1导出mongoexport:
把集合里的文档保存到系统文件里
csv格式:必须要-f指定字段导出
json格式:可以-f指定字段导出,也可以不用-f指定字段导出
csv格式一:
mongoexport \[\--host ip地址 \--port 端口 \] -d 库名 -c 集合名 -f
字段名1,字段名2 \--type=csv \>目录名/文件名.csv
csv格式二:
mongoexport \[\--host ip地址 \--port 端口 \] -d 库名 -c 集合名 -q
'{条件}' -f 字段名1,字段名2 \--type=csv \>目录名/文件名.csv
**导出的数据:**
\> db.t1.find()
{ \"\_id\" : ObjectId(\"5c7a41fb99716aece7440d9b\"), \"name\" : \"bob\",
\"age\" : 19 }
{ \"\_id\" : ObjectId(\"5c7a44cc99716aece7440d9c\"), \"name\" : \"tom\",
\"age\" : 19, \"school\" : \"tarnea\" }
{ \"\_id\" : ObjectId(\"5c7a45b599716aece7440d9e\"), \"name\" : \"jim\",
\"age\" : 90 }
{ \"\_id\" : ObjectId(\"5c7a45ef99716aece7440d9f\"), \"name\" :
\"dachui\", \"age\" : 80 }
\> db.t1.count()
4
### 不重定向到指定文件,将会在终端显示
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongoexport \--host
192.168.4.50 \--port 27050 -d gamedb -c t1 -f name,age,school \--type
csv
2019-03-02T17:33:23.908+0800 connected to: 192.168.4.50:27050
name,age,school
bob,19, #没有school字段的内容就空白
tom,19,tarnea #有school字段的内容就输出,
jim,90,
dachui,80,
2019-03-02T17:33:23.910+0800 exported 4 records
### 创建指定文件目录和文档导出
\[root@client-50 \~\]# mkdir /mdbdata
\[root@client-50 \~\]# /usr/local/mongodb/bin/mongoexport \--host
192.168.4.50 \--port 27050 -d gamedb -c t1 -f name,age,school \--type
csv \> /mdbdata/t1.csv
2019-03-02T17:35:46.201+0800 connected to: 192.168.4.50:27050
2019-03-02T17:35:46.202+0800 exported 4 records
\[root@client-50 \~\]# cat /mdbdata/t1.csv #查看已导出的数据
name,age,school
bob,19,
tom,19,tarnea
jim,90,