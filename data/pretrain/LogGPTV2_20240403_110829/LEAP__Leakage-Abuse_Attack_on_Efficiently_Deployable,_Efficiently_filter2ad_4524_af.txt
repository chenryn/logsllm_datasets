(100%)
(92.86%)
4,904
(100%)
(98.26%)
4,957
(100%)
(99.14%)
4,961
(100%)
(99.22%)
4,965
(100%)
(99.3%)
4,966
(100%)
(99.32%)
4,973
(100%)
(99.46%)
1 “L1” indicates that the attack is based on L1 leakage, “L2” indicates that the attack is based on L2 leakage. “N-LD” denotes the number of leaked documents of the dataset, “P-LD”
denotes the percentage of leaked documents of the dataset. “No. of KW ” denotes the top 5,000 most frequent keywords corresponding to the leaked documents (if the total number
of keywords is less than 5,000, we take all the keywords as the keyword universe, as in the cases where only 10%, 5%, 1%, 0.5% and 0.1% of documents are leaked). “No. of Recovered
Keywords” denotes the number of recovered keywords, “Keyword Recovery Rate” denotes the percentage of keywords that are mapped to query tokens. “No. of Correctly Recovered
Keywords” denotes the number of correctly recovered keywords out of the recovered keywords, “Accuracy Rate of Recovered Keywords” denotes the percentage of correctly
recovered keywords from the recovered keywords. “Correct Keyword Recovery Rate” denotes the percentage of correct recovered keywords out of the keyword universe
corresponding to the known documents. “U” stands for the PW-U attack which is based on the Umeyama’s algorithm [39], “P” stands for the PW-P attack which is based on the
PATH algorithm [39].
attack that assumes exact knowledge of a subset of the documents.
Here, we compare with the CGPR attack and the BKM attack for
completeness.
Table II shows the comparison among the CGPR attack, the PW-
U attack, the PW-P attack, the BKM attack and LEAP in terms of
recovered keywords. We evaluate the number (resp. percentage) of
recovered keywords, the number of correctly recovered keywords,
the accuracy rate of recovered keywords, and the correct keyword
recovery rate by varying the percentage of documents known to
the attacker from 100% to 0.1%. As noted in Section 4.4, the key-
word recovery rate reflects how many keywords from the keyword
universe corresponding to the known documents could be recov-
ered. The accuracy rate of recovered keywords reflects how many
recovered keywords are correct. The correct keyword recovery rate
reflects how many keywords can be recovered correctly.
The PW-U attack recovers all the keywords in the keyword uni-
verse corresponding to the leaked documents no matter how many
documents are leaked. In terms of accuracy rate of recovered key-
words, 99.58% of the (q,w ) mappings are correctly recovered by the
PW-U attack when given the entire database. However, the accuracy
rate of recovered keywords of the PW-U attack drops dramatically
when the percentage of leaked documents are less than 50%. As
shown in Table II, only 4.38% of the recovered (q,w ) mappings
are correct with the PW-U attack even given 50% of the dataset.
When given 10% of the dataset, only 0.76% of the (q,w ) mappings
recovered by the PW-U attack are correct. This shows that though
the keyword recovery rate of the PW-U attack is 100%, however,
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2315most of the recovered (q,w ) mappings are not correct when only
partial knowledge of the dataset is available to the attacker.
The PW-P attack, similar to the PW-U attack, recovers 100% the
keywords when the percentage of the leaked documents varies
from 100% to 0.1%. For 100% leaked documents, the accuracy rate of
recovered keywords is 63.38%, which is less than that of the PW-U
attack. When given partial knowledge of the dataset, however, the
PW-P attack performs better than the PW-U attack in terms of
accuracy rate of recovered keywords. Given 50% of the documents,
the accuracy rate of recovered keywords of the PW-P attack is
58.96%, compared to 4.38% of the PW-U attack. For the case where
10% of the documents are leaked, the accuracy rate of recovered
keywords of the PW-P attack is 32.82%, compared to 0.76% of the
PW-U attack.
In terms of keyword recovery rate, the CGPR attack recovers
92.22% of the keywords when given the entire dataset; however,
the rate drops dramatically as the fraction of leaked documents
decreases. In particular, 1.94% of the keywords are recovered by the
CGPR attack when given 50% of the documents. The CGPR attack
can only recover 0.42% of the keywords given 10% of the dataset. In
terms of correctly recovered keywords, when give the entire dataset,
99.98% of the (q,w ) mappings recovered by the CGPR attack are
correct. In other words, 92.2% of the keywords can be accurately
recovered. When the percentage of leaked documents are less than
50%, however, only very few keywords are correctly recovered by
the CGPR attack. This indicates that the CGPR attack does not
perform well when the attacker has only partial knowledge of the
document set.
For the BKM attack, in terms of keyword recovery rate, it recov-
ers 98.32% of the keywords when given 100% dataset. The keyword
recovery rate drops dramatically when the percentage of leaked
documents are less than 20%. When given 10% of the dataset, 14.01%
of the keywords are recovered by the BKM attack. It only recovers
0.06% of the keywords given 1% of the dataset. In terms of correctly
recovered keywords, all of the (q,w ) mappings recovered by the
BKM attack are correct when give the entire dataset. The number
of correctly recovered keywords drops dramatically when the per-
centage of leaked documents are less than 10%. This shows that the
BKM attack does not perform well when given partial knowledge
of the document set.
The keyword recovery rate of LEAP varies from 99.46% to 11.54%
with the percentage of leaked documents varying from 100% to
0.1%. For each case that we test, LEAP achieves 100% accuracy rate
of recovered keywords, indicating that every recovered (q,w ) map-
ping is correct. In particular, given 10% of the dataset, the number
of correctly recovered keywords of LEAP is 4,904, as compared to
1,638 of the PW-P attack and 38 of the PW-U attack. When given
0.1% of the dataset, LEAP correctly recovers 132 (q,w ) mappings,
as compared to 2 of the PW-P attack and 5 of the PW-U attack. This
demonstrates that LEAP is significantly more powerful than the
PW-P attack and the PW-U attack in terms of correctly recovered
keywords. Though the PW-P attack and the PW-U attack could
recover 100% the keywords, most of the recovered (q,w ) mappings
of the PW-U attack and less than half of the recovered (q,w ) map-
pings of the PW-P attack are wrong. In this sense, LEAP is the most
powerful among these attacks.
5.3 Document Recovery
Since LEAP achieves keyword recovery and document recovery
simultaneously, we record the experimental results of document
recovery when carrying out our experiments, which are shown in
Table III. We record the number (resp. percentage) of recovered
documents, the number of correctly recovered documents, the accu-
racy rate of recovered documents, the correct document recovery
rate, the number of recovered documents using only recovered
keywords, by varying the percentage of documents known to the
attacker from 100% to 0.1%. Table III shows that LEAP recovers
most of the encrypted documents for each case. In addition, LEAP
achieves 100% accuracy rate of recovered documents in the sense
that all of the recovered documents are correct. Specifically, when
given only 10% of the entire dataset, 92.16% of the 3,010 encrypted
documents can be accurately recovered by LEAP. Given only 0.5%
of the dataset, LEAP still recovers 91.33% of the 150 encrypted docu-
ments. This demonstrates that LEAP is very powerful in recovering
the mapping between (plaintext) documents and the encrypted
documents.
We also compare the number of recovered documents using
our document recovery method with that using only recovered
keywords. As shown in Table III, for the cases where 5%, 1%, 0.5%
and 0.1% of the dataset is leaked, our document recovery method
recovers more documents than that using only recovered keywords.
This demonstrates that our document recovery method works better
than purely using recovered keywords when the number of leaked
documents is small.
5.4 Property of Uniqueness
LEAP crucially relies on the uniqueness of the columns and rows
in B and A′′ in finding unique row mappings and unique column
mappings between B and A′′. Such uniqueness property of the
columns and rows in B and A′′ mainly relies on the following three
factors: (1) column-sum, (2) d-occurrence matrix and ed-occurrence
matrix, and (3) bit-string of column and bit-string of row. In par-
ticular, the number of (ed,d ) pairs found in Step 2 determines the
effectiveness of LEAP. This is so because the (ed,d ) pairs found in
Step 2 serve as an input to subsequent steps. The more such (ed,d )
pairs exist, the more (q,w ) mappings and (ed,d ) mappings can be
recovered in subsequent steps.
To see how the number of leaked documents affect the unique-
ness of the columns and rows in B and A′′, we record the number of
unique columns found in Step 2 (denoted as initial unique column),
the number of unique columns found once Step 9 finished (denoted
as final unique column), and the number of unique rows found in
Step 5 (denoted as unique row), respectively. Table IV shows the
numbers of the initial unique columns, final unique columns and
unique rows, respectively, found by LEAP. It demonstrates that
the more leaked documents, the more initial unique columns, final
unique columns and unique rows can be found. The initial unique
columns are the starting point of LEAP, only 11 initial unique
columns are found for 10% leaked documents and 1 for 1% leaked
documents; nevertheless they are enough for “bootstrapping” the
subsequent steps.
Session 7D: Privacy for Distributed Data and Federated Learning CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea 2316TABLE III: Document Recovery 1
No. of Leaked Doc.
/(Per. of Leaked Doc.)
No. of Recovered Documents
/Document Recovery Rate
30 / (0.1%)
150 / (0.5%)
301 / (1%)
1,505 / (5%)
3,010 / (10%)
6,021 / (20%)
9,032 / (30%)
12,043 / (40%)
15,054 / (50%)
30,109 / (100%)
29 / 96.66%
137 / 91.33%
273 / 90.69%
1,394 / 92.62%
2,774 / 92.16%
5,548 / 92.14%
8,340 / 92.34%
11,132 / 92.43%
13,915 / 92.43%
27,808 / 92.35%
No. of Correctly Recovered Documents
/Accuracy Rate of Recovered Documents
/Correct Document Recovery Rate
29 / 100% / 96.66%
137 / 100% / 91.33%
273 / 100% / 90.69%
1,394 / 100% / 92.62%
2,774 / 100% / 92.16%
5,548 / 100% / 92.14%
8,340 / 100% / 92.34%
11,132 / 100% / 92.43%
13,915 / 100% / 92.43%
27,808 / 100% / 92.35%
No. of Recovered
Documents using RK
28
134
269
1,392
2,774
5,548
8,340
11,132
13,915
27,808
1 “No. of Leaked Doc.” and “Per. of Leaked Doc.” hold the same meaning as that in Table II. “No. of Recovered Documents” denotes the number of recovered documents, “Document
Recovery Rate” denotes the percentage of encrypted documents that are recovered. “No. of Correctly Recovered Documents” denotes the number of correctly recovered encrypted
documents out of the encrypted documents, “Accuracy Rate of Recovered Documents” denotes the percentage of correctly recovered documents from the recovered documents.
“Correct Document Recovery Rate” denotes the percentage of correct recovered documents out of the encrypted document universe. “No. of Recovered Documents using RK”
denotes the number of recovered documents purely using the knowledge of recovered keywords (i.e., not applying our document recovery method).
TABLE IV: Uniqueness of the columns and rows in matrices B and A′′ 1
Dataset Knowledge
No. of Leaked Doc.
/(Per. of Leaked Doc.)
30 / (0.1%)
150 / (0.5%)
301 / (1%)
1,505 / (5%)
3,010 / (10%)
6,021 / (20%)
9,032 / (30%)
12,043 / (40%)
15,054 / (50%)
30,109 / (100%)
No. of
KW
1,144
2,315
3,318
4,889
4,991
5,000
5,000
5,000
5,000
5,000
No. of Initial Unique Col.
/(Per. of Initial Unique Col.)
No. of Final Unique Col.
/(Per. of Final Unique Col.)
No. of Unique Rows
/(Per. of Unique Rows)
1 / 3.33%
1 / 0.66%
1 / 0.33%
8 / 0.53%
11 / 0.36%
17 / 0.28%
27 / 0.29%
33 / 0.27%
38 / 0.25%
73 / 0.24%
29 / 96.66%
137 / 91.33%
273 / 90.69%
1,394 / 92.62%
2,774 / 92.16%
5,548 / 92.14%
8,340 / 92.34%
11,132 / 92.43%
13,915 / 92.43%
27,808 / 92.35%
132 / 11.54%
860 / 37.15%
1,754 / 52.86%
4,540 / 92.86%
4,904 / 98.26%
4,957 / 99.14%
4,961 / 99.22%
4,965 / 99.3%
4,966 / 99.32%
4,973 / 99.46%
1 “No. of Leaked Doc.”, “Per. of Leaked Doc.” and “No. of KW” hold the same meaning as that in Table II. “ No. pf Initial Unique Col.” denotes the number of columns that are found
as initial unique column, “Per. of Initial Unique Col.” denotes the percentage of columns that are found as initial unique columns. “No. of Final Unique Col.” denotes the number of
columns that are found as final unique columns, “Per. of Final Unique Col.” denotes the percentage of columns that are found as final unique columns. “No. of Unique Rows” denotes
the number of unique rows, “Per. of Unique Rows” denotes the percentage of rows that are found as unique rows.
5.5 Scalability
LEAP mainly relies on matrix operations. To deal with larger matrix
as the document set size increases, we mainly utilize the follow-
ing two approaches. First, we cache the intermediate results when
preparing B, A′′ and M, which could be reused for each case of
our experiments. During the preparation, the following procedures
can be parallelized: (1) the extraction for the relationship between
encrypted documents and query tokens from L2 leakage; (2) the
relationship between documents and keywords from leaked docu-
ments. Second, we divide one matrix into submatrices during the
execution of LEAP. In particular, before starting Step 2, we divide B
and A′′ into a set of submatrices while keeping the number of rows
unchanged. These submatrices can be parallelized during Step 2.
Similar divide-and-parallelize idea for matrix operations can be
applied in subsequent steps.
6 COUNTERMEASURES
In this section, we discuss possible countermeasures against our
attack. LEAP crucially relies on Step 2 and Step 3 in Figure 1,