tid'int(11)DEFAULTNULL,
id'int（11)NOT NULL,
row in set(0.04sec)
ENGINE=InnoDBDEFAULTCHARSET=latin1
PRIMARYKEY(id')
tid'int(11)DEFAULT NULL,
id'int(11)NOT NULL,
name'varchar(10)DEFAULT NULL,
Table:test3
Table:test1
ession
Current database:*** NONE ***
mysql> use test;
Query 0K, 1 row affected (7 min 3S.60 sec)
Query 0K,1row affected (4min 24.86 sec)
Databasechanged
Current database:test
onnectionid:
loconne
图1-168KB和16KB数据页插人性能能比
：MySQL server has gone away
经过压缩的test3表几乎慢了一半，
---
## Page 51
启的。关闭方式如下：
机提取数据。
时间就会很长，很多经常不访问的数据也会进人Innodb_Buffer_Pool缓冲池里，那么就会
污染缓冲池，
schema.STATISTICS表，并返回刚才查询的结果。当你的表很大，且数量很多时，耗费的
表时，InnoDB还会随机提取其他数据库每个表索引页的部分数据，从而更新information.
1.1.20
Compressionand theInnoDBBufferPool
从MySQL5.5.X版本开始，你可以动态关闭innodb_stats_on_metadata，不过默认是开
innodb_stats_on_metadata参数的作用是：每当查询information_schema元数据库里的
setglobalinnodb_stats_on_metadata=OFF;
具体操作如图1-17和图1-18所示。
select sum(data_length+index_length)/1024/1024/1024from
通过数据字典查看所有数据库大小，命令如下：
information_schema.tables;
答案是：不会的。下面用一个例子来加以证实。
可能有人会问，如果我关闭了该功能，会不会造成数据统计的不精确？
可动态关闭InnoDB更新元数据的统计功能
uuo
page
nced
DDB
sscd
e,whileleaving
，并且ANALYZETABLE和SHOWTABLESTATUS语句也会造成InnoDB随
an
fers
evict
might
and
data.
etime-
Thus
thesy
sten
pas
on
LO-
isne
第1章
MySQL5.5介绍·37
ressingcom-
the
---
## Page 52
38·第一部分MySQL5.5新特性篇
备库是否接收完毕。如果从库由于各种原因落后于主库，此时出现宕机，这时备库中的数
很多，那么查询的速度相差得就会更大。
1.2.1复制功能加强
14.4.8.5.ControllingOptimizerStatisticsEstimation
在早前版本中，MySQL主从复制都是异步的，主库发送完binlog日志以后，不会查看
关于innodb_stats_on_metadata参数的介绍，请参见MySQL5.5手册：
关闭元数据统计后，查询快了近2倍，结果却跟之前的一样。如果你的表很大，并且
安全性、稳定性的显著改变
HOW
aysql> show variables like‘innodb_a
mysql>set global
aysql> select sum(data_length+index_length)/1024/1024/1024 frominformation_schema.tables)
row in set (0.04 sec)
Variable_name
sql> select sum(data_length+index_length)/1024/1024/1024 from
row in set (0.05 sec)
inmodb_stats_on_metadata
Variable_name
row in set (0.66 sec)
sum(data_length+index_1ength)/1024/1024/1024
ow
sum(data_1ength+index_1ength)/1024/1024/1024
TABL
w in set (1.16 sec)
OK.
0rows
STATUS:
statement,
tats
1ON
and accessing the
Value
Value
图1-18关闭元数据统计
0.231541509740
图1-17开启元数据统计
0.231541509740
stats_on_metadata'
tablefor
ON:
aiv
information_schema.tables
include the ANALYZE
---
## Page 53
1.3.1支持动态更改独立表空间
开启，开启方式如下：
息，而是直接抛出错误，这样就可直接将问题扼杀在摇篮里。
（ALTERTABLE）和创建索引（CREATEINDEX）语句时，如果写法有错误，不会有警告信
压缩功能后，最好是开启该功能。开启此功能后，当创建表（CREATETABLE）、更改表
1.2.3
该功能，建议开启。
认情况下该功能是关闭的，将relay_log_recovery的值设置为1时，可在 slave从库上开启
未执行的relay-log，并且重新从master上获取日志，这样就保证了relay-log的完整性。默
slave从库岩机后，假如relay-log损坏了，导致一部分中继日志没有处理，则自动放弃所有
1.2.2
半同步与异步复制相比，进一步提高了数据完整性。
一致的服务。而半同步复制在一定程度上保证提交的事务已经传给了至少一个备库，因此，
据就是不完整的。简而言之，在主库发生故障的时候，我们无法使用备库来继续提供数据
1.3
large for the selectedpage size.
The setting of InnoDB strict mode affects thc handling of syntax crrors on the CREATE TABLE,ALTER TABLE and CREATE IN-
开启InnoDB严格检查模式涉及的参数是innodb_strict_mode，默认为OFF，支持动态
在MySQL5.1.X版本里，如果想采用独立表空间，那么就必须修改my.cnf,
关于innodb_strict_mode参数的介绍，请参见MySQL5.5手册：
set global innodb_strict_mode=1;
从MySQL5.5.X版本开始，你可以开启InnoDB严格检查模式，尤其采用了页数据
从MySQL5.5.X版本开始，增加了relay_log_recovery参数，这个参数的作用是：当
在第2章中，会对半复制同步的安装测试加以详细描述，这里不再叙述。
动态更改系统配置参数
开启InnoDB严格检查模式
中继日志relay-log可自我修复
not
8
Sd
ting
ssion
later
第1章MySQL5.5介绍·39
让
---
## Page 54
40·第一部分MySQL5.5新特性篇
功能。
注意
共享表空间，采用独立表空间的命令如下：
innodb_file_per_table=1，然后重启MySQL服务。
1.4
的时间就会很长。
innodb_lock_wait_timeout=10，然后重启MySQL服务。
1.3.2
client.
从MySQL5.5.X版本开始，可以动态修改该参数了，该参数默认是关闭的，采用的是
在遇到锁等待时，经常会遇到如下所示错误，如果这个参数设置得过大，那么锁等待
在MySQL5.1.X版本里，如果想更改InnoDB 锁超时时间，就必须修改my.cnf，让
NAMIC
如果使用Barracuda格式的表压缩功能，必须启动独立表空间，共享表空间不支持该
关于innodb_lock_wait_timeout参数的介绍，请参见MySQL5.5手册：
关于innodb_file_per_table参数的介绍，请参见MySQL5.5手册：
setglobal innodb_file_per_table=1;
下面针对InnoDB新的参数做了一个总结：
set global innodb_lock_wait_timeout=10;
从MySQL5.5.X版本开始，可以动态修改该参数，该参数默认是50秒。修改命令如下：
ERRORHYooO:Lockwait timeoutexceeded;tryrestartingtransaction
InnoDB新参数汇总
支持动态更改InnoDB锁超时时间
2
ICO
ab1
nnot use these
teat
thos
---
## Page 55
InnoDB_Buffer_Pool实例。可根据实际内存大小设置多个缓冲池。
buffer_pool_size 必须大于1 GB，生成InnoDB_Buffer_Pool多实例才有效，最多支持64个
正在更新缓冲池而造成其他线程必须等待的瓶颈。默认为1，不支持动态更改，innodb.
默认为ON，可动态更改，建议不要更改。
innodb_change_buffering
解释：可以设置多个InnoDB_Buffer_Pool管理各自的缓冲池，这样会减少某个线程
innodb_buffer_pool_instances
解释：自适应刷新脏页，在没有达到innodb_max_dirty_pages_pct设置的值时也会刷新，
DynamicVariable
innodb_adaptive_flushing
VariableScope
VariableName
OptionSetsVariable
Config-File Format
Command-Line Format
DynamicVariable
VariableScope
VariableName
OptionSetsVariable
Command-LineFormat
Config-FileFormat
DynamicVariable
VariableScope
VariableName
OptionSetsVariable
Config-FileFormat
Command-LineFormat
PermittedValues(= 5.5.4)
Valid Values
Default
Default
Permitted Values (>=5.5.5)
Type
Permitted Values (>= 5.5.4)
Type
Permitted Values(<=5.5.0)
Type
Default
Default
No
Global
innodb_file_format_check
Yes,innodb_file_format_check
innodb_file_format_check
--innodb_file_format_check=#
Default
Type
Permitted Values
Yes
Global
innodb_file_format
Yes,innodb_file_format
innodb_file_format
--innodb_file_format=#
inserts, t, ugs, change,all n
all
enumeration
，一般情况下，采用
ON
boolean
Barracuda
Antelope
string
Antelope
string
（续）
---
## Page 57
转的磁盘做RAID10，设置为2000较合适。
置刷新脏页的数量，提高磁盘I/0的吞吐率，默认是200，可动态更改，若是以6块15000
务器可以启动，并收到一个警告信息，但这样很不安全，数据有可能会损坏。默认是ON，
system tablespace is in a file format that this version doesn't support.”如果设置为 OFF，服
innodb_file_format_check的设置为ON，在服务器启动时会报告错误：“InnoDB:Error:the
Barracuda.
不支持set global方式动态更改，建议不要修改。
innodb_old_blocks_pct
解释：在MySQL5.1.X版本中，由于代码写死，每秒只能刷新100个脏页，现在可以设
innodb_io_capacity
解释：设置文件格式的最高版本，
innodb_file_format_max
解释：用来检查共享表空间文件格式，
DynamicVariable
Command-LineFormat
DynamicVariable
VariableScope
VariableName
OptionSetsVariable
Config-FileFormat
Command-LineFormat
VariableScope
VariableName
Config-FileFormat
Dynamic Variable
Option SetsVariable
Config-FileFormat
Command-LineFormat
VariableScope
VariableName
默认是Antelope，
如果共享表空间的文件格式高于当前版本，并且
Min Value
Default
Type
Permitted Values
Global