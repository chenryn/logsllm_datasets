title:Opening the Blackbox of VirusTotal: Analyzing Online Phishing Scan
Engines
author:Peng Peng and
Limin Yang and
Linhai Song and
Gang Wang
Opening the Blackbox of VirusTotal: Analyzing Online Phishing
Scan Engines
*Virginia Tech
Peng Peng*, Limin Yang‡, Linhai Song†, Gang Wang‡
†The Pennsylvania State University
PI:EMAIL, PI:EMAIL, PI:EMAIL, PI:EMAIL
‡University of Illinois at Urbana-Champaign
ABSTRACT
Online scan engines such as VirusTotal are heavily used by re-
searchers to label malicious URLs and files. Unfortunately, it is not
well understood how the labels are generated and how reliable the
scanning results are. In this paper, we focus on VirusTotal and its 68
third-party vendors to examine their labeling process on phishing
URLs. We perform a series of measurements by setting up our own
phishing websites (mimicking PayPal and IRS) and submitting the
URLs for scanning. By analyzing the incoming network traffic and
the dynamic label changes at VirusTotal, we reveal new insights
into how VirusTotal works and the quality of their labels. Among
other things, we show that vendors have trouble flagging all phish-
ing sites, and even the best vendors missed 30% of our phishing
sites. In addition, the scanning results are not immediately updated
to VirusTotal after the scanning, and there are inconsistent results
between VirusTotal scan and some vendors’ own scanners. Our
results reveal the need for developing more rigorous methodologies
to assess and make use of the labels obtained from VirusTotal.
CCS CONCEPTS
• Security and privacy → Web application security.
ACM Reference Format:
Peng Peng*, Limin Yang‡, Linhai Song†, Gang Wang‡ . 2019. Opening
the Blackbox of VirusTotal: Analyzing Online Phishing Scan Engines. In
Internet Measurement Conference (IMC ’19), October 21–23, 2019, Amsterdam,
Netherlands. ACM, New York, NY, USA, 8 pages. https://doi.org/10.1145/
3355369.3355585
1 INTRODUCTION
Online scan engines, designed to scan malware files and malicious
websites, are critical tools for detecting new threats [3, 4, 7, 8].
VirusTotal is one of the most popular scanning services that are
widely used by researchers and industry practitioners [8]. Virus-
Total provides both file scan (for malware analysis) and URL scan
services (for detecting phishing and malware hosts). It works with
more than 60 security vendors to aggregate their scanning results.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6948-0/19/10...$15.00
https://doi.org/10.1145/3355369.3355585
VirusTotal is widely used by the research community for data
labeling or system evaluation. Many recent works rely on Virus-
Total’s file scan API [18, 24, 26, 28, 29, 37, 41, 44, 45] and the URL
scan API [16, 17, 20, 30, 35, 36, 38, 40, 42, 46, 47] for data labelling.
For example, if a certain number of vendors label a file/URL as
“malicious”, researchers would take the “malicious” label.
Unfortunately, VirusTotal works like a blackbox, and it is not
well understood how VirusTotal and its vendors generate the labels
for a given URL or file. This leads to critical questions: are these
labels even reliable? Are researchers using VirusTotal in the right way?
In this paper, we take the initial steps to explore how VirusTotal
and its vendors assign labels. We specifically look into how the
URL scan API detects phishing websites. Focusing on phishing scan
allows us to design more focused experiments. At the same time,
we seek to design a methodology that can be adapted to other
applications (e.g., file scan for malware analysis). We want to explore
(1) how VirusTotal works with 68 vendors to perform URL scanning
and result updating; (2) how effective these scanners are in detecting
simple and more advanced phishing sites; (3) how the scanners react
to the dynamic changes of phishing sites. The goal is to provide
insights to guide practitioners to better use VirusTotal.
To answer these questions, we set up a series of phishing websites
of our own with freshly registered domains. By submitting the
phishing URLs to various scan APIs (VirusTotal’s APIs and some
vendors’ own APIs), we collect the incoming network traffic to our
phishing sites. At the same time, we continuously query the labels
for these URLs from VirusTotal over a month. We set up two types
of phishing pages that impersonate PayPal [6] and IRS (Internal
Revenue Service) [2] respectively. Across all the experiments, we
have used 66 experimental websites in total. We find that:
• First, most vendors have trouble detecting the simple phish-
ing sites we set up. Over multiple scans, only 15 vendors (out
of 68) have detected at least one of the 36 simple phishing
sites. The best vendor only detected 26 simple phishing sites.
• Second, the detection performance is drastically different
for different phishing sites. The PayPal sites (as a popular
target of phishing) can be detected quickly by more than 10
vendors during the first scan. However, the less common IRS
sites cannot be detected by any of the 68 vendors using the
VirusTotal scan API alone.
• Third, the scanning results of vendors are not updated to
VirusTotal immediately after the scanning is finished. The
delay is caused by the fact that VirusTotal only pulls the pre-
vious scanning results when a new scan request is submitted
for the same URL. A user who simply calls the query/report
API once would not get the updated scanning results.
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
P. Peng, L. Yang, L. Song, and G. Wang
• Fourth, VirusTotal has inconsistent results with the vendors’
own scan APIs. The result suggests that third-party vendors
do not always give VirusTotal the scan permission or the
most updated blacklists.
• Fifth, we also tested the effectiveness of obfuscation (methods
used by attackers to modify the website to deliberately evade
detection). We find that VirusTotal scanners can handle some
obfuscation techniques (such as URL shortening), but can be
fooled by other obfuscation methods such as image-based
or code-based obfuscations.
Our work is an initial step to investigate the reliability of labels
obtained from online scanners. Future work can look into other
types of scanning (e.g., malware scanning), and measure the corre-
lation between the labels from different vendors, and develop new
methods to reliably aggregate different scanning results. To facili-
tate future research, we release the collected datasets for sharing1.
2 BACKGROUND & RELATED WORK
VirusTotal is a popular service that scans
VirusTotal APIs.
malicious files and web URLs [8]. The URL scanning, in particular,
aims to detect websites that deliver malware or perform phishing.
As shown in Figure 1, VirusTotal works with 68 third-party security
vendors (see the full list at [11]). After an URL is submitted to
VirusTotal through the scan API, VirusTotal pass the URL to these
vendors (i.e., anti-virus engines or online scanning services). The
scanning results will be stored in the VirusTotal database.
VirusTotal provides another querying API (or report API) which
allows people to query the VirusTotal database to check if an URL is
malicious [10]. Given a URL, the API returns the labels from all the
vendors that have previously scanned the URL (and the timestamp
of the scanning). It is not uncommon for vendors to disagree with
each other. For example, a URL might be labeled as “benign” by
Google Safe Browsing, but is labeled as “malicious” by Kaspersky.
Among the 68 third-party vendors, we
Third-party Vendors.
find that 18 of them also provide their own scan APIs to the public.
Table 1 lists the names of the 18 vendors. As shown in Figure 1,
these 18 vendors can either be reached via the VirusTotal scan APIs
or via their own APIs directly. For a given vendor, it is not quite
clear if the two APIs return consistent results.
VirusTotal has been heavily
Using VirusTotal for Labeling.
used by the research community to label both malicious files [18,
23, 24, 26, 28, 29, 37, 39, 41, 44, 45] and suspicious IPs and URLs [16,
20, 30, 33, 35, 36, 38, 40, 42, 46, 47]. A closer examination shows
that VirusTotal is used in different ways by researchers.
First, given that vendors often do not agree with each other (or
some vendors have never scanned the URL), researchers need to
aggregate the labels to determine if the URL is “malicious”. Recall
that given a URL, more than 60 labels are returned from the vendors
via VirusTotal. We find that most papers define a threshold — if at
least t vendors return a “malicious” label, then the URL is regarded
as malicious. Most papers set t = 1 [16, 17, 20, 30, 35, 36, 40, 47],
while a few papers are more conservative by setting t = 2 or
3 [33, 38, 42] (sometimes researchers use a bigger threshold such
as 40 when labeling malware files [15, 26]). Second, given a vendor,
1https://github.com/whyisyoung/VirusTotal
Figure 1: VirusTotal and third-party security vendors.
CyberCrime, Dr.Web, Forcepoint, Fortinet,
Google Safe Browsing, Kaspersky, malwares.com, Netcraft,
NotMining, Phishtank, Quttera, scumware.org, securolytics,
Sucuri Site Check, URLQuery, ZeroCERT, ZeusTracker, zvelo
Table 1: 18 VirusTotal vendors provide their own scan APIs.
its internal model may be updated over time, and thus the labels on
URLs may also change over time. Kantchelian et. al investigate this
issue for the file scan API [22], and show that one needs to wait
for a while before a label gets stabilized. It is unknown if the same
issue applies to URL scan.
Our work is also related to those that
Phishing Blacklist.
study phishing blacklists [12, 32, 43]. Phishing blacklists often have
major delays in blocking new phishing sites [14, 19, 31], and suffer
from incomplete coverage [13]. Different blacklists may return
inconsistent results [25]. Our work aims to look deeper into the
process of how phishing URLs get blacklisted (i.e., URL scanning) by
VirusTotal and its vendors. The most relevant work to ours is [32].
The differences are two folds: First, [32] looks into the phishing
blacklists used by different browsers (e.g., Chrome, Safari), while
we focus on how phishing blacklists are aggregated by VirusTotal.
Second, [32] focuses on the cloaking techniques used by phishing
sites, while we focus on the performances of different vendors
(scanners), and their consistency.
3 METHODOLOGY
In this paper, we want to understand how VirusTotal and its ven-
dors scan phishing URLs. We ask key questions regarding how the
labels should be interpreted and used: (1) how effective are Virus-
Total’s vendors (scanners) in detecting basic phishing pages? (2)
how quickly will the scanning results become available? (3) how
consistent are the scanning results across vendors, and between
vendor-APIs and VirusTotal API? (4) how quickly can VirusTotal
react to phishing site changes such as take-down? (5) how much
do basic obfuscation techniques help with evading the detection?
To answer the questions, we set up fresh phishing websites on
newly registered web domains. Then by submitting the phishing
URLs to VirusTotal, we collect incoming network traffic to the
phishing servers and the VirusTotal’s labeling results for these URLs.
We have carefully designed the experiments to ensure research
ethics. We have a detailed discussion on ethics in the Appendix.
3.1 Phishing Site Setups
As shown in Figure 2, we create two
Phishing Page Content.
phishing pages that mimic the login pages of PayPal [6] and IRS
(Internal Revenue Service) [2]. PayPal is chosen for its popularity —
VirusTotal DBScan APIQuerying API3rd-Party VendorsVendor 1Vendor 2Vendor 3Vendor 68...VirusTotal ServiceScan API...Scan APIScan API18 VendorsAnalyzing Online Phishing Scan Engines
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
(a) PayPal
(b) IRS
Figure 2: Screenshots of experiment phishing pages.
Figure 3: Illustration of the main experiment on a given
phishing site. The third-party vendor is one of the 18 ven-
dors that provide their own scan APIs.
more than 30% of phishing URLs at major blacklists are targeting
PayPal [34]. IRS, as a comparison baseline, is not commonly targeted.
We replicate the original sites of PayPal and IRS, and modify the
login form so that login information will be sent to our servers.
By default, we disable any form of cloaking for the phishing sites.
Cloaking means a phishing site hides itself by showing a benign
page when it recognizes the incoming request is from a known
security firm [21, 32]. The robots.txt is also set to allow web
crawlers to access the phishing page.
Domain Names. We register fresh domain names for our phish-
ing sites. This is to make sure the domain names do not have any
past history that may interfere with the measurement. To prevent
innocent users from mistyping the domain names (i.e., accidentally
visiting our websites), we register long random strings as domain
names (50 characters each) from NameSilo [5]. For example, one of
the domain names is “yzdfbltrok9m58cdl0lvjznzwjjcd2ihp5pgb
295hfj5u42ff0.xyz”.
Web Hosting. We host the phishing websites at a web hosting
service called Digital Ocean [1] on static IPs. Before the experiment,
we made sure all the IPs and domain names are publicly accessible,
and are not blacklisted by any major blacklist. We have informed
Digital Ocean of our research, and have received their consent.
3.2 Experiment Design
The experiments were conducted from March to April in 2019,
including a main experiment and a baseline experiment.
The main experiment is designed to mea-
Main Experiment.
sure (a) the phishing detection accuracy of VirusTotal and vendors;
(b) the potential inconsistency between VirusTotal API and the
vendors’ APIs; (c) the reaction of VirusTotal to changes of phishing
sites. Recall that there are 18 vendors that have their own scan APIs.
To accurately capture their impact, we set up separate phishing
sites (1 PayPal and 1 IRS) for each vendor (36 sites in total).
For each phishing site, we conduct a 4-week experiment as il-
lustrated in Figure 3. We periodically submit the phishing URL
Exp.
Main
Baseline
Brand
PayPal
IRS
PayPal
IRS
# Requests
Avg. (STD)
12,327 (2,478)
335 (364)
6,291
30
# IPs
Avg. (STD)
2,384 (290)
146 (107)
2,033
26
# Mal. Labels
Avg. (STD)
16.6 (1.1)
13.5 (0.5)
0
0
Table 2: The number of incoming network requests to fetch
the phishing URLs, and the unique number of IPs per phish-
ing site over the 4-week period. We show the average num-
ber of total “malicious” labels from VirusTotal per phish-
ing site (if a vendor once gave a malicious label and then
changed it back later, we still count it).
to VirusTotal’s scan API. The VirusTotal scan API will trigger the
scanning of (some of) the third-party vendors. VirusTotal scanning
is conducted twice a week on Mondays and Thursdays. At the same
time, we schedule 4 external events (on the Mondays of each week):
(1) Week1: We put the phishing site online.
(2) Week2: We submit the phishing URL to one of the 18 ven-
dors who have their own scan APIs.
(3) Week3: We take down the phishing page, and replace it with
a benign page (i.e., a blank page).
(4) Week4: We submit the phishing URL to the same third-party
vendor as week2.
Note that (2) and (4) are designed to measure the consistency be-
tween VirusTotal scanning and the vendors’ own scanning. Each
phishing site is only submitted to one vendor API so that we can
measure the differences between vendors.
During the experiment, we collect two types of data. First, we col-
lect the labels for all the phishing URLs using VirusTotal’s querying
API. Note that after a URL is submitted for scanning, the scanning
results (i.e., labels) might not be immediately available in the Virus-
Total database. So we crawl the labels every 60 minutes to track
the fine-grained dynamic changes. Second, we log the incoming
network traffic to all of the phishing servers.
The baseline experiment is to measure
Baseline Experiment.
the long-term reaction of VirusTotal after a single VirusTotal scan.
We set 2 additional phishing sites (PayPal and IRS) and only submit