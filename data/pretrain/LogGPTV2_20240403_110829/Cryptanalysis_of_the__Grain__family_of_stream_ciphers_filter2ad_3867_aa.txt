title:Cryptanalysis of the "Grain" family of stream ciphers
author:Alexander Maximov
Cryptanalysis of the
“Grain” Family of Stream Ciphers ∗
Dept. of Information Technology, Lund University
P.O. Box 118, 221 00 Lund, Sweden
Alexander Maximov
+46-46-2224932
PI:EMAIL
ABSTRACT
Let us have an NLFSR with the feedback function g(x) and
an LFSR with the generating polynomial f (x). The function
g(x) is a Boolean function on the state of the NLFSR and
the LFSR, at any time instance t. Whenever the LFSR
has good statistical properties, it is used for controlling the
randomness of the NLFSR’s state machine. In this paper
we deﬁne and study the general class of “Grain” family of
stream ciphers, where the keystream bits are generated by
another Boolean function h(y) on the states of the NLFSR
and the LFSR. We show that the cryptographic strength of
this family is related to the general decoding problem, when
a key-recovering attack is considered. A proper choice of
the functions f (·), g(·) and h(·) could, potentially, give us
a strong instance of a stream cipher. One of such stream
ciphers Grain was recently proposed as a candidate for the
European project ECRYPT in May, 2005. Grain uses the
secret key of length 80 bits and its internal state is of size
160 bits. It was suggested as a fast and small primitive for
eﬃcient hardware implementation. In our work we propose
the analysis of such structures in general, and, in particular,
we give a linear distinguishing attack on Grain with time
complexity O(254), when O(251) bits of the keystream is
available. This is the ﬁrst paper presenting an attack on
Grain, and it reveals a leakage in the choice of the functions
in this particular design instance.
Categories and Subject Descriptors
E.3 [Data]: Data Encryption—Code Breaking
General Terms
Design, Security
∗The work described in this paper has been supported in
part by Grant VR 621-2001-2149, and in part by the Euro-
pean Commission through the IST Program under Contract
IST-2002-507932 ECRYPT.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’06 March 21–24, 2006, Taipei, Taiwan.
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.
Keywords
Grain, cryptanalysis, correlation attacks, distinguisher, de-
coding problem
1.
INTRODUCTION
There are two main classes of primitives, stream ciphers
and block ciphers, which are used to encrypt a message for
ensure the privacy when data are trasmitted via an unsecure
channel. A stream cipher can often be regarded as a pseudo
random keystream generator (KSG). The ciphertext is then
formed as the bitwise xor of the keystream, produced by the
KSG, and the plaintext, revealing the one time pad principle
of encryption. When a block cipher is used information data
is parsed into a sequence of blocks, each of which is then
encrypted separately. A block cipher can be regarded as an
algorithm evaluating a block permuter on a large alphabet.
One the well-known block cipher is Rijndael[1]. Although
block ciphers are very well studied, there is a need for a
deeper analysis of stream ciphers.
There are many stream ciphers which are currently widely
used in our day life. However, many of them were success-
fully cryptanalysed and regarded as broken. For example,
the stream cipher RC4 [2] is widely used in Internet, and
it was attacked in, e.g. [3, 4, 5, 6]. Another stream cipher,
A5/1 [7],
is used in GSM communication, and there are
several very good attacks on it, e.g. [8, 9]. E0 is used in
the Bluetooth technology, and the best recent attack can be
found in [10]. There are more examples.
In 1999 European commision decided to launch the project
NESSIE, the competition of stream ciphers’ designs [11].
The purpose of the project was to select good stream ci-
phers for a set of portfolio. However, after several evaluation
rounds all proposals were either broken or revealed a signif-
icant weakness. Therefore, at the ﬁnal, no stream ciphers
were selected. Despite many proposals were broken on dif-
ferent stages, a good cryptanalysis experience was received.
Recently, a new European project ECRYPT [12] has start-
ed, and at the ﬁrst stage of the project 35 new proposals
were received by May 2005. Although many previous stream
ciphers were broken, collected cryptanalysis experience al-
lowed to strengthen new proposals signiﬁcantly, and there
are many of them that are strong against diﬀerent kinds of
attacks. One of such a good proposal is a new stream cipher
Grain 1 [13].
1The design of Grain is recently accepted for publication in
the Int. Journal of Wireless and Mobile Computing, Special
Issue on Security of Computer Network and Mobile Systems.

The stream cipher Grain was developed by a group of re-
searchers M. Hell, T. Johansson, and W. Meier, and was
especially designed for beeing a very small and fast in eﬃ-
cient hardware implementation. It uses the key of length 80
bits, and has internal state of size 160 bits. Grain uses a
nonlinear feedback shift register (NLFSR) and a linear feed-
back shift register (LFSR), and the idea to use NLFSR is
quite recent in modern cryptography. The claimed secu-
rity level of Grain is 280, and it was stated that there ex-
ist no attacks signiﬁcantly faster than 280. When a key-
recovering attack is considered, the idea behind the strengh
of Grain is amazingly based on the well-known general de-
coding problem (DP), which is hard to solve. To use DP in
the design of a stream cipher was a quite clever idea, and
it was also discussed before in, e.g. [14]. Therefore, instead
of analysing just Grain, in this paper we study this design
stucture in general, and we call this class of stream ciphers
as the “Grain” family of stream ciphers.
There exist varouse techniques of analysis of stream ci-
phers, such as algebraic attacks, linear cryptanalysis, corre-
lation attacks and others. In this work we, however, focus on
statistical properties of the keystream, revealing the distin-
guishing attack for Grain. We show the possible weaknesses,
if the Boolean functions used in the design are chosen im-
properly. We also show the relation between the strength of
“Grain” against a key-recovery attack and the general de-
coding problem. For the proposed instance Grain [13] we
found a statistical leakage in the keystream, which allowed
us to mount a distinguishing attack with time complexity
O(254), when the keystream of length O(251) is available.
This attack is deﬁnitely signiﬁcantly faster than O(280).
This is the ﬁrst paper analysing the “Grain” family of stream
ciphers, and presenting an attack on the Grain instance in
particular.
This paper is structured as follows.
In Section 2 the
“Grain” family of stream ciphers is deﬁned.
In Section 3
the correlation between the keystream and the state of the
LFSR is derived. We show that the security level of this
class of stream ciphers is related to the general decoding
problem in Section 4. In Section 5 we use the weakness of
the Grain instance to turn it into a distinguishing attack.
Finally, we summarize the results and make the conclusions
in Section 6.
2. THE “GRAIN” FAMILY OF STREAM
CIPHERS
The “Grain” family of stream ciphers is bit-oriented de-
sign, the general structure of which is depicted in Figure 1.
Let the LFSR has length n and its generating polynomial
is f (x) = 0. Its output is denoted as s = s0, s1, . . ., where
the ﬁrst n bits is the initial state of the LFSR. Let the
length of the NLFSR is m. The feedback function g(·) = 0
for the NLFSR is a Boolean function on the states of the
NLFSR and the LFSR. We denote the output of the NLFSR
as b = b0, b1, . . ., where the ﬁrst m bits is the initial state
of the NLFSR. The keystream sequence is denoted as z =
z0, z1, . . .. At each time instance t one bit of the keystream
zt is the result of a Boolean function h(·), the input of which
are the bits from the states of the NLFSR and the LFSR,
at the corresponding time t.
For some arbitrary Boolean function f (·) let wL(f (·)) and
wN (f (·)) denote the number of operands, taken from the

g(x)
f (x)
NLFSR
LFSR
h(x)
z1, z2, . . .
Figure 1: General structure of the “Grain” family
of stream ciphers.
LFSR and from the NLFSR, respectively. The total number
of variables for the function f (·) is denoted as wV (f (·)).
3. DERIVING THE CORRELATION AND
ANALYSIS
3.1 Approximation of g(·)
The function g(b, s) operates on wV (g) = wL(g) + wN (g)
variables taken from the NLFSR and the LFSR. Let the
function Ag(b, s) be some linear approximation of the func-
tion g, i.e.,
Ag(b, s) =
wN (g)
wL(g)
dibi ⊕
i=1
j=1
cjsj ,
cj, di ∈ F2,
such that the distance between g(·) and Ag(·)
dg = dH(Ag, g) = #{x ∈ FwV (g)
is larger than zero. Then, we have
2
: Ag(x) = g(x)} > 0,
Pr{Ag(x) = g(x)} =
1
2wV (g) dg,
i.e.,
Pr{Ag(x) + g(x) = 0} = 1/2 + g,
where the bias is
g = 1/2 − 2−wV (g)dg.
In the stream cipher Grain, the function g(·) is as follows.
g(b, s) =st + bt+63 + bt+60 + bt+52 + bt+45 + bt+37 + bt+33
+ bt+28 + bt+21 + bt+15 + bt+9 + bt + bt+63bt+60
+ bt+37bt+33 + bt+15bt+9 + bt+60bt+52bt+45
+ bt+33bt+28bt+21 + bt+63bt+45bt+28bt+9
+ bt+60bt+52bt+37bt+33 + bt+63bt+60bt+21bt+15
+ bt+63bt+60bt+52bt+45bt+37
+ bt+33bt+28bt+21bt+15bt+9
+ bt+52bt+45bt+37bt+33bt+28bt+21
=0,
which can be approximated as
Ag(b, s) = st + bt+80 + bt.
(1)
This approximation has the bias g = −80 · 2−12 = −5 · 2−8
(dg = 4176). To destroy any ambiguity, the parity check
with biased probability (p = 1
2 + g) can be written as
bt+80 + bt + st
p
= 0.
(2)
3.2 Approximation of h(·)
Similarly, the function h(b, s) can also be approximated