在现有应用日志输出的功能，增加服务调用日志输出的控制,此日志输出到单独目录中。各应用配置新增如下参数：
-   SERVCALL_LOG_FLAG：0-服务调用日志关闭，1-服务调用日志开启。
-   SERVCALL_LOG_DIR：服务调用日志的输出绝对路径。
-   SERVCALL_LOG_MAXSIZE：单个文件大小，默认8192000字节。
#### 【新增】新增服务调用日志输出框架
新增服务调用日志输出的公共框架功能，实现对上述3个参数的处理，当SERVCALL_LOG_FLAG=0时，不输出日志；SERVCALL_LOG_FLAG=1时正常输出日志。日志输出到SERVCALL_LOG_DIR目录中，当大小超过SERVCALL_LOG_MAXSIZE指定值时，切换日志。
日志文件命名：
SERVCALL.LOG.{模块名}.{进程编号}
其中模块名定义如下：
BILL：账务
BILLSRV：账务的bill service
> BSDOCK：账务的bill service的dcc dock
>
> BILLCICS：账务的CICS接口服务
>
> BILLSOCKET：账务的SOCKET接口服务
ABM：余额管理中心
HSC：信息同步管理
CBE：融合计费引擎
...
提供通用服务调用日志输出接口（宏）。输出参数见《7.2.2.19
服务调用链日志格式及填值说明》。
#### 【新增】在CICS接口请求头部增加调用链唯一标识TraceID
在CICS接口请求头部结构定义(CBaseIntPkg)中增加调用链唯一标识TraceID字段,32+1位长的数据型字符串。
#### 【修改】修改查余额CICS接口(QuerySubjectBalance)支持埋点日志
在查余额的CICS接口逻辑（DoQuerySubjectBalance）进行如下调整：
1.  调用后端SOCKET服务的请求中增加TraceID参数，并赋值。
2.  入口和出口逻辑增加调用服务日志输出功能。其中"TraceID
    调用链唯一标识"取自CICS接口协议中的TraceID。
日志文件名中的模块名：BILLCICS
#### 【修改】修改账户查询CICS接口(accInfo)支持埋点日志
在账户查询的CICS接口逻辑（DoaccInfo）进行如下调整：
1.  调用后端SOCKET服务的请求中增加TraceID参数，并赋值。
2.  入口和出口逻辑增加调用服务日志输出功能。其中"TraceID
    调用链唯一标识"取自CICS接口协议中的TraceID。
日志文件名中的模块名：BILLCICS
#### 【修改】在ABM余额变更接口(AccountChange)请求中增加调用链唯一标识TraceID
ABM余额变更接口(AccountChange)请求增加如下AVP：
  ------------ --------- ------------ ----------------------- ------------- --------------------
  {Trace-Id}   待定???   UTF8String   调用链唯一标识TraceID                 32长的数字型字符串
  ------------ --------- ------------ ----------------------- ------------- --------------------
#### 【修改】修改ABM余额变更接口(AccountChange)支持埋点日志
在ABM余额变更的逻辑进行如下调整：
1.  增加入口和出口逻辑增加调用服务日志输出功能。其中"TraceID
    调用链唯一标识"取自DCC接口协议中的{Trace-ID}。
2.  充值日志表记录中增加写入TraceID。
日志文件名中的模块名：ABM
### CRM生产节点
#### 【新增】服务调用链日志开关控制（一期）
日志等级控制配置表(SA_DB_LOGLEVELCONTROL)中新增一种日志类别:
LLTYPE_SERVCALL(服务调用)，支持按业务类型或菜单ID（只支持需求中涉及的几个关键业务）、地市控制是否开启服务调用链日志打印。
#### 【修改】前后台日志输出框架（一期）
修改前台WAS服务、后台CICS服务，独立进程日志输出框架，增加根据日志等级控制配置表的服务调用链日志级别配置来判断是否输出服务调用链日志。
#### 【新增】关键业务增加服务调用链埋点（一期）
修改以下关键业务，在进入菜单时，生成交易流水号并生成交易开始埋点，在埋点的extendinfo中设置交易开始标识TRACEFLAG=0。并在业务受理过程中生成服务调用埋点。业务提交成功增加交易结束埋点，并在埋点的extendinfo中设置交易结束标识TRACEFLAG=1。
  -----------------------------------------------------------------------
  业务类型                     业务标识
  ---------------------------- ------------------------------------------
  产品订购退订                 ChangeProduct
  个人主体产品开户             Install
  补卡                         空白卡补卡:ChangeEnumByBlkCard\
                               补卡:ChangeEnum
  停机                         强制欠费停机:StopSubsQF\
                               强制停机:StopSubsQZ\
                               申请停机:StopSubs)
  开机                         强制欠费开机:OpenSubsQF\
                               强制开机:OpenSubsQZ\
                               申请开机:OpenSubs
  缴费                         Charge
  -----------------------------------------------------------------------
信控：
  -----------------------------------------------------------------------
  信控停机
  -----------------------------------------------------------------------
  信控开机
  -----------------------------------------------------------------------
#### 【修改】订单对象
修改订单对象类，增加交易流水(TraceID)属性，长度varchar2(32)。
#### 【修改】前台WEB客户端（一期）
针对需求中的几个关键业务，在前台在点击对应的菜单获取页面信息时，增加打印服务调用链日志的标识，WAS服务端接收请求后生成本次业务的交易流水号，并保存在本次业务的session中，并生成本次业务的开始交易埋点。在本次业务提交完成返回成功后或业务提交失败中断后，生成本次业务的结束交易埋点。
#### 【修改】前台WAS服务调用后台CICS服务逻辑（一期）
前台WAS服务调用CICS服务时，如果本次业务的session中有交易流水号，则将交易流水号设置到调用请求对象CBaseIntPkg的strUniContact属性中,将对应业务的菜单ID设置到CBaseIntPkg的strMenuID属性中。并且根据前台的调用顺序，设置服务调用的顺序号到CBaseIntPkg的m_tagParams属性中，键值SEQNO，顺序号的生成见"[调用序号生成逻辑]{.underline}"章节说明。
#### 【修改】CICS服务全局信息（一期）
修改CICS服务单次事务中的全局对象，增加交易流水信息，服务调用顺序号，用于本次事务中服务埋点判断，如果本次事务全局信息中交易流水号不为空，则生成服务调用链日志，调用顺序根据全局信息中的顺序号按格式递增，如前台传1.1，则CICS调用服务的日志中顺序号为1.1.1，如果CRM又调了计费CICS，则计费CICS输出的服务调用链日志调用顺序号为1.1.1.1。以此类推。
#### 【修改】订单预生成逻辑
修改订单对象类，增加交易流水（TraceID）属性。修改订单预生成逻辑，如果前台有传入交易流水号，则将交易流水号设置到订单对象以及子订单对象中保存，用于后面的订单拆解、订单行开通、工单发送、订单竣工等环节判断是否生成服务调用链日志。
#### 【修改】订单提交逻辑
修改订单提交逻辑，如果订单对象及子订单对象的交易流水属性不为空，则将订单编号和业务交易流水号入库到订单与交易流水关系表(cs_rec_formnumrelalog)中，订单编号对应formnum字段，业务交易流水号对应relaformnum字段，relatype填写1，intime填写系统时间。用于后面的订单拆解、订单行开通、工单发送、订单竣工等环节判断是否生成服务调用链日志。
#### 【修改】CICS服务日志框架（一期）
新增一种日志类型：服务调用链日志(SERVCALL)，支持文件路径、文件名称、文件拆分大小可配置，在服务请求入口处，增加输出服务调用请求（serverRecv）日志，在服务响应出口处，增加输出服务调用响应（serverSend）日志。日志格式见：服务调用链日志格式及填值说明章节。实现方式同CICS的main日志。
#### 【新增】调用序号(SeqNo)的生成逻辑（一期）
在服务调用链日志中，需要打印调用序列号SeqNo，用于在展示业务调用链时查看服务的调用顺序。调用序号的生成逻辑以业务请求起点开始设置为1，后续每一次服务调用序列号以1开头，每新增一个服务端的调用就在后面追加".1"，如1.1，1.1.1，1.1.1.1。
![](media/image20.png){width="4.508512685914261in"
height="2.634760498687664in"}
举例说明：
如上图，涉及A、B、C、D四个服务，某个业务涉及两次服务调用，则从业务触发开始设置为1，第1步A服务调用B服务，则SeqNo就为1.1，B服务调用C服务，则SeqNo为1.1.1，第2步A服务调用D服务，则SeqNo就为1.2，请求和响应的日志中的SeqNo值相同。
#### 【修改】前台WAS服务日志框架（一期）
新增一种日志类型：服务调用链日志(SERVCALL)，支持文件路径、文件名称、文件拆分大小可配置，作为服务端，在服务请求入口处，增加输出服务调用请求（serverRecv）日志，在服务响应出口处，增加输出服务调用响应（serverSend）日志。作为客户端，在调用服务入口处，增加输出服务调用请求日志（clientSend）,在调用服务出口处，增加输出服务调用响应日志（clientRecv），日志格式见：服务调用链日志格式及填值说明章节。
#### 【修改】订单拆解逻辑
修改订单拆解流程，根据订单号查询业务流水关系表(CS_REC_FORMNUMRELALOG)，判断是否有生成订单与交易流水关系，如果本订单有对应的交易流水号，则在订单拆解入口和订单拆解出口处增加服务调用链日志打印，日志格式见：服务调用链日志格式及填值说明章节。
#### 【修改】订单行开通逻辑
修改订单行开通流程，根据订单号查询业务流水关系表(CS_REC_FORMNUMRELALOG)，判断是否有生成订单与交易流水关系，如果本订单有对应的交易流水号，则在订单行开通入口和订单行开通出口处增加服务调用链日志打印，日志格式见：服务调用链日志格式及填值说明章节。
#### 【修改】工单发送进程日志框架
新增一种日志类型：服务调用链日志(SERVCALL)，支持文件路径、文件名称、文件拆分大小可配置，在工单发送时，根据订单号查询业务流水关系表(CS_REC_FORMNUMRELALOG)，判断是否有生成订单与交易流水关系，如果本订单有对应的交易流水号，则在调用外围平台服务入口处，增加输出服务调用请求日志（clientSend）,在调用服务出口处，增加输出服务调用响应日志（clientRecv），日志格式见：服务调用链日志格式及填值说明章节。
#### 【修改】订单行竣工逻辑
修改订单行峻工流程，根据订单号查询业务流水关系表(CS_REC_FORMNUMRELALOG)，判断是否有生成订单与交易流水关系，如果本订单有对应的交易流水号，则在订单行竣工入口和订单行竣工出口处增加服务调用链日志打印，日志格式见：服务调用链日志格式及填值说明章节。
#### 【修改】信控停开机进程逻辑
修改信控停开机独立进程，在每笔任务处理的开始、结束处增加服务调用链日志打印，如果请求记录中计费已生成交易流水，则直接使用，如果没有则重新生成交易流水，并将订单编号和业务交易流水号入库到订单与交易流水关系表(cs_rec_formnumrelalog)中，订单编号对应formnum字段，业务交易流水号对应relaformnum字段，relatype填写2，intime填写系统时间。日志格式见：服务调用链日志格式及填值说明章节。
#### 【新增】交易流水序列
节点CRM的COMMON用户新建一个序列SEQ_TRACEID_地市区号（如SEQ_TRACEID_759），用于生成交易流水。
交易流水（20位）：
地区号(3位)+年月日时分秒(12位)+序列号(5位)
如：75917061512121200001
#### 【修改】CRM调用账务服务CICS接口框架
节点CRM在调用节点BOSS账务CICS服务请求时，判断系统参数CtrlCallZWCicsAddTraceid开关是否打开：
如果打开时，则增加交易流水号和调用序列号的传递。即在请求消息头中增加31位定长字符串来标识本笔业务的交易流水号和本次服务调用的序号（其中前20位为交易流水号，后11位为调用序号），如果从本次事务的CICS服务全局信息中获取本次业务的交易流水为空，则说明本次业务不打印服务调用链日志，则此节点增加的31定长位都传固定值0。如果能获取到交易流水号和调用序号，则将交易流水和调用序号追加到当前调用账务CICS服务的事务号后面，如果不够31位，则后面用\$符号补位。
如下图，在红色的事务号后面再增加31位定长字符串标识交易流水和调用序号。
![](media/image21.png){width="4.7533803587051615in"
height="1.7998293963254592in"}
如果开关关闭时，则保持现有逻辑不变。
#### 【新增】服务调用链日志文件名称格式
**文件名称：**AA-NGXXX-BBB-TRACELOG.log.YYYYMMDD.nnn
其中
AA：地市编码简写，如广州:GZ
NGXXX：应用系统，如NGCRM、NGBOSS
BBB：应用服务，如WAS、CICS
YYYYMMDD：年月日，如20171121
nnn：文件序列号，如001，002递增
#### 【新增】服务调用链日志格式及填值说明（一期）
格式：
\\>\>
说明:其中开始标志"\\>\>"之间不能有空格。
埋点日志字段内容中不可出现竖线"\|"，如果字段原始内容包含竖线"\|"，需要先转义为
&#124; 后再放入埋点日志字段内。
以下为日志服务中心要求的日志字段、字段说明以及广东项目特殊填值说明：
+-----------+-----------+------+-------------------+-----------------+
| 字段名    | 类型      | 是否 | 说明              | 特殊填值说明    |
|           |           | 必选 |                   |                 |
+===========+===========+======+===================+=================+
| TraceID   | char(32)  | 必选 | 调用链唯一标识    | 32位数字字符串  |
+-----------+-----------+------+-------------------+-----------------+
| Cal       | varcha    | 必选 | 被调用服务        | 填写            |
| ledNodeID | r(max128) |      | 的实例标识，由被  | 服务名称标识：\ |
|           |           |      | 调用服务实例所在  | 节点CRM         |
|           |           |      | 节点全局唯一标识  | WEB服           |
|           |           |      | +"##"+            | 务:XXNG3CRM-WEB |
|           |           |      | 节点内            |                 |
|           |           |      | 服务实例唯一标识  | 节点CRM         |
|           |           |      | 构成，如订单管理  | WAS服务         |