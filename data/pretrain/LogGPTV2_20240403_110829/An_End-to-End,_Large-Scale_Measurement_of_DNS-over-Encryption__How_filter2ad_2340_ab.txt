changes have to be made, including switching to new stub resolvers
(e.g., by updating the OS or installing stub resolvers like Stubby) and
manual configuration of DoT resolvers. With encryption and con-
nection setup, DoT introduces extra query time overhead compared
to DNS-over-UDP. However, it can be amortized by connection
reuse [49] and we measure the overhead in Section 4.3.
DNS-over-DTLS. A variation of DoT is DNS-over-DTLS, which
works over UDP for better performance. While DNS-over-DTLS
and DoT share most properties, it is designed only as a backup
proposal for DoT, and the RFC document expects DoT to be widely
deployed [70]. To our best knowledge, DNS-over-DTLS has no real-
world implementations yet, including stub and recursive resolvers,
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Chaoyi Lu et al.
Category
Protocol
Design
Security
Usability
Deployability
Maturity
Table 1: Comparison of different DNS-over-Encryption protocols
Criterion
DNS-over-TLS DNS-over-HTTPS DNS-over-DTLS DNS-over-QUIC DNSCrypt
Uses other application-layer protocols
Provides fallback mechanism
Uses standard TLS
Resists DNS traffic analysis
Minor changes for client users
Minor latency above DNS-over-UDP
Runs over standard protocols
Supported by mainstream DNS software
Standardized by IETF
Extensively supported by resolvers
(cid:35)
(cid:32)
(cid:32)
(cid:71)(cid:35)
(cid:71)(cid:35)
(cid:71)(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:71)(cid:35)
(cid:32)
(cid:71)(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:71)(cid:35)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:32)
(cid:71)(cid:35)
(cid:35)
(cid:32)
(cid:35)
(cid:35)
(cid:35)
(cid:35)
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:71)(cid:35)
(cid:71)(cid:35)
(cid:35)
(cid:71)(cid:35)
(cid:35)
(cid:71)(cid:35)
DNS-over-QUIC. On top of QUIC, DNS-over-QUIC offers similar
privacy properties as DoT, but has similar performance as DNS-
over-UDP. According to its current draft, it is designed for minimum
latency and solving issues like TCP’s head-of-line blocking [51].
For better usability, it also provides a fallback mechanism, using
DoT or plain-text DNS when the QUIC connection fails. DNS-over-
QUIC is planning to use a dedicated port 784. Still, there are not
yet real-world implementations for DNS clients or operators.
DNSCrypt. Proposed in 2011, DNSCrypt is not based on standard
TLS, and uses the X25519-XSalsa20Poly1305 cryptographic con-
struction [11]. DNSCrypt messages are transferred over port 443,
which are also mixed with HTTPS traffic, and can be used over
both UDP and TCP.
As one of the earliest protocols in the list, DNSCrypt has been
supported by several large public resolvers for years, including
OpenDNS (since 2011) [77], Yandex (since 2016) [25], and Open-
NIC [9]. To use DNSCrypt, clients need to install extra software
(e.g., DNSCrypt-proxy [3]), and servers need certificates signed on
dedicated hardware [11]. Since proposal, DNSCrypt has never been
standardized by the IETF.
DNS-over-Encryption and DNSSEC. DNSSEC aims to protect
the integrity of DNS records by signing them, but does not protect
DNS privacy. DNS-over-Encryption and DNSSEC are dedicated to
solving different problems, and they can be fully compatible and
used together [49].
The above survey provides the first comparative study of DNS-
over-Encryption protocols as far as we know. We do acknowledge
that there could be disagreement on the metrics we use and the
grades we give to each protocol. However, we believe our sur-
vey shows new insights into the development of the DNS-over-
Encryption ecosystem, and will enlighten the path for future devel-
opment of this technology.
Scope of study. DNS-over-TLS (DoT) and DNS-over-HTTPS (DoH)
are two leading and mature protocols to secure traditional DNS
communications. On top of well-supported and standard protocols
(i.e., TLS and HTTP), they are both standardized by IETF, and exten-
sively implemented by various DNS software and public resolvers
(see Table 8 of Appendix A). For the remaining of this paper, we
focus on DoT and DoH and measure them from the view of Internet
users.
Figure 2: Two types of DoH requests. They both contain a
wire-format DNS A-type query of example.com.
thus its usability for clients and deployability for DNS operators
are ranked as low.
DNS-over-HTTPS (DoH). Described by RFC8484 [50], the core
of DoH is to embed DNS queries into HTTPS messages, which
are protected by TLS. Particularly, DoH uses URI templates (e.g.,
https://dns.example.com/dns-query{?dns}) to locate a service,
and the hostname in the template should be resolved to bootstrap
DoH lookups (e.g., via clear-text DNS). As shown in Figure 2, wire-
format DNS packets are encoded in URI parameters (using GET) or
HTTP message body (using POST). As such, two application-layer
protocols (HTTP and DNS) are leveraged for DoH.
DoH shares port 443 with HTTPS visits to websites, which mixes
DoH queries with other HTTPS traffic, and therefore effectively
resists traffic analysis that only targets DNS. By design, DoH re-
quires both encryption and authentication of DNS servers (i.e., Strict-
Privacy-profile-only). Without fallback options, DoH lookups will
fail if either operation is not available. Similar to DoT, query time
overhead can be caused by connection establishment and encryp-
tion.
DoH runs on top of HTTPS, therefore is particularly suitable
for user-space applications like web browsers. Typically, the ap-
plications already contain stub resolvers, so the changes for DNS
clients to use DoH are minor (compared to updating OS or installing
other software). As an example, Firefox supports DoH since Version
62 [63], and offers a UI for DoH configuration. For DNS operators,
however, as the combination of HTTP and DNS is less supported by
mainstream DNS software (see Appendix A), they need to deploy
other implementations in order to offer service. Currently, DoH is
supported by large resolvers include Cloudflare [2], Google [4] and
Quad9 [14].
An End-to-End, Large-Scale Measurement of DNS-over-Encryption: How Far Have We Come?
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
3 SERVERS: TO OFFER
DNS-OVER-ENCRYPTION
Servers, especially resolvers, play a vital role in the deployment of
DNS-over-Encryption protocols. In this section, we describe our
scanning methodology that can identify open DNS-over-Encryption
resolvers operated in the wild, and their security analysis. Then,
we report our findings.
Table 2: Top countries of open DoT resolvers
CC # DoT Resolver Growth CC # DoT Resolver Growth
%
-20%
+20%
-16%
+122%
+135%
Feb 1 May 1
456
951
40
257
531
100
86
71
59
56
IE
CN
US
DE
FR
%
Feb 1 May 1
+108%
-84%
+431%
+21%
-5%
JP
NL
GB
BR
RU
34
30
25
22
17
27
36
21
49
40
3.1 Methodology
Though, public resolver lists such as [39, 73] have already complied
tens of providers offering DNS-over-Encryption services, it is un-
clear to us whether they achieve good coverage of all such services,
especially the ones less known but still in operation. As such, our
first step is to identify DoT and DoH servers through systematic
service discovery.
Discovering open DoT resolvers. As DoT uses a dedicated port
853 for communication, it is required that by default, DNS servers
that support DoT MUST listen for and accept TCP connections on
this port [49]. Therefore, discovering open DoT resolvers is con-
ceptually simple through Internet-wide scanning using port 853 as
input. While a DoT resolver could choose other ports, such set-
ting requires extra configuration changes on DoT clients, which
is cumbersome for normal users. As such, those services are not
considered in this study.
In practice, we first use ZMap [42] to discover all IPv4 addresses
with port 853 open (using the zmap -p 853 command), and then
probe the addresses with DoT queries of a domain registered by us,
using getdns API [17]. In the first stage, our scan originates from
3 IP addresses in China and the US (on cloud platforms), and we
configure the tool to cover the entire IPv4 address space in a random
order. For addresses with port 853 open, only those successfully
responding to our DoT queries are regarded as open DoT resolvers.
We repeat our scan process every 10 days from Feb 1, 2019 to May
1, 2019, and each scan takes 24 hours to finish.
For ethical considerations, we offer an opt-out option from our
scanning activities, by setting a reverse DNS record for our scanning
system and building a website that tells the scanning details and
collects opt-out requests. During our scan period, we did not receive
any opt-out requests.
Discovering open DoH resolvers. Compared to DoT resolvers,
it is much more difficult to discover DoH servers, because they
share port 443 with other HTTPS visits, and use URI templates to
be located. While we have tried to look for DoH resolvers in public
DNS zone files, the discovery turns out to be unsatisfying, as many
resolvers are hosted on the subdomains of second-level domains
(SLDs) of the providers (e.g., dns.example.com in Figure 2), while
public zone files only contain SLDs. As an alternative approach, we
attempt to discover DoH resolvers by inspecting a large-scale URL
dataset provided by our industrial partner. The dataset consists of
URLs from their web crawlers, malware sandbox and VirusTotal
data feed. Over time, the dataset has recorded billions of URLs.
To discover DoH resolvers, we need to know their URI patterns.
Fortunately, the DoH RFC and large resolvers have specified sev-
eral common path templates (e.g., /dns-query and /resolve, see
Figure 2) that can point to DoH resolvers, and most DoH resolvers
in public lists [73] adopt the templates, including Cloudflare [2]
and Quad9 [14]. Therefore, we scan the whole URL dataset us-
ing the known templates. For ethics, the dataset does not contain
user information or URL parameters, so the privacy risk should be
minimized.
Limitations. Firstly, our Internet-wide scan only covers open re-
solvers, and misses those deployed by ISPs (i.e., local resolvers
which are not open to public). To evaluate DoT deployment on
local resolvers, we launch DoT queries of our own domain to local
resolvers using RIPE Atlas [23]. In the end, only 24 of 6,655 probes
(0.3%) succeed in the query, suggesting the current ISP DoT deploy-
ment is still scarce1. Therefore, we believe the impact of lacking
local resolvers is small on the overall result. Secondly, while we
do discover DoH resolvers (particularly, resolvers beyond known
lists) using our methodology, resolvers with unknown URL patterns
will be overlooked. Also, despite our URL dataset being large, it
could be possible to find more resolvers using other data traces.
We do acknowledge that our method has limitations, but given the
challenges discussed above, we regard our method as a best-effort
attempt.
3.2 Open DNS-over-Encryption Resolvers
Key observation 1: Except for large providers, there are many
small providers which are less-known and missed by the public
resolver lists. However, a quarter of DoT providers use invalid
SSL certificates on their resolvers, which exposes their users to
security risks.
Finding 1.1: 1.5K open DoT resolvers are mostly owned by
large providers, but there are also ones run by small providers
which are absent from public resolver lists. By contrast, the
number of open DoH resolvers is small. From each Internet-
wide scan, we discover 2 to 3 million hosts with port 853 open (e.g.,
356M on Feb 1 and 230M on May 1), yet a vast majority of them
do not provide DoT (i.e., they cause getdns errors). As shown in