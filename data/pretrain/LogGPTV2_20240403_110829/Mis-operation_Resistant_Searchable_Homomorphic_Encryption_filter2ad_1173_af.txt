the majority of the computations.
)
%
(
o
i
t
a
R
k
c
e
h
C
y
t
i
r
g
e
t
n
I
80.0 
66.2 
61.6 
100
90
80
70
60
50
40
30
20
10
0
99.3
99.2 
54.4 
98.5
96.5 
55.9 
Int ratio (mEval) (%)
Int ratio (P and C) (%)
Int ratio (C and C) (%)
0
2
4
6
8
10
12
14
Log2(The Number of Ciphertexts)
Log2 (Dimension of Vectors)
Figure 5: Integrity Check Ratio
6. CONCLUSION
In this paper, we attach great importance to a control-
lability of homomorphic operations, and propose MR-SHE.
A keyword is regarded as a tag, and homomorphic oper-
ations are allowed for ciphertexts when these ciphertexts
are associated with the same keyword. In addition to this,
the evaluation algorithm posts alert to homomorphic op-
erations for ciphertexts associated with diﬀerent keywords.
Even if one intentionally or accidentally performs the homo-
morphic operations against such ciphertexts, the decryption
algorithm rejects it, and the receiver can recognize a mis-
operation happens in the evaluation phase. Moreover, our
scheme supports secure keyword search. We also construct
a MR-SHE scheme by modifying the Gentry-based KH-IBE
scheme. We also give the implementation results of comput-
ing inner products. Naively supporting fully or somewhat
homomorphic property and supporting the veriﬁability of
the computation result as in veriﬁable computations in the
MR-SHE context are future works of this paper.
Acknowledgment: This work was partially supported by
JSPS KAKENHI Grant Numbers JP26540003, JP16H02864,
JP15K00028.
7. REFERENCES
[1] The PBC (pairing-based cryptography) library.
Available at http://crypto.stanford.edu/pbc/.
[2] M. Abdalla, M. Bellare, D. Catalano, E. Kiltz,
T. Kohno, T. Lange, J. Malone-Lee, G. Neven,
225P. Paillier, and H. Shi. Searchable encryption revisited:
Consistency properties, relation to anonymous IBE,
and extensions. J. Cryptology, 21(3):350–391, 2008.
[3] M. Abdalla, M. Bellare, and G. Neven. Robust
encryption. In TCC, pages 480–497, 2010.
obfuscation and functional encryption for all circuits.
In FOCS, pages 40–49, 2013.
[19] C. Gentry. Practical identity-based encryption without
random oracles. In EUROCRYPT, pages 445–464,
2006.
[4] M. Backes, D. Fiore, and R. M. Reischuk. Veriﬁable
[20] C. Gentry. Fully homomorphic encryption using ideal
delegation of computation on outsourced data. In
ACM Conference on Computer and Communications
Security, pages 863–874, 2013.
[5] J. Baek, R. Safavi-Naini, and W. Susilo. On the
integration of public key data encryption and public
key encryption with keyword search. In ISC, pages
217–232, 2006.
[6] D. Boneh, G. D. Crescenzo, R. Ostrovsky, and
G. Persiano. Public key encryption with keyword
search. In EUROCRYPT, pages 506–522, 2004.
[7] D. Boneh, C. Gentry, S. Halevi, F. Wang, and D. J.
Wu. Private database queries using somewhat
homomorphic encryption. In ACNS, pages 102–118,
2013.
[8] D. Boneh, G. Segev, and B. Waters. Targeted
malleability: homomorphic encryption for restricted
computations. In Innovations in Theoretical Computer
Science, pages 350–366, 2012.
[9] Z. Brakerski and V. Vaikuntanathan. Eﬃcient fully
homomorphic encryption from (standard) LWE. In
FOCS, pages 97–106, 2011.
[10] D. Catalano and D. Fiore. Using
linearly-homomorphic encryption to evaluate degree-2
functions on encrypted data. In ACM Conference on
Computer and Communications Security, pages
1518–1529, 2015.
[11] Y. Chen, J. Zhang, D. Lin, and Z. Zhang. Generic
constructions of integrated PKE and PEKS. Des.
Codes Cryptography, 78(2):493–526, 2016.
[12] S. S. M. Chow. Removing escrow from identity-based
encryption. In Public Key Cryptography, pages
256–276, 2009.
[13] R. Cramer, R. Gennaro, and B. Schoenmakers. A
secure and optimally eﬃcient multi-authority election
scheme. In EUROCRYPT, pages 103–118, 1997.
[14] K. Emura, G. Hanaoka, K. Nuida, G. Ohtake,
T. Matsuda, and S. Yamada. Chosen ciphertext secure
keyed-homomorphic public-key encryption.
Cryptology ePrint Archive, Report 2013/390, 2013.
http://eprint.iacr.org/2013/390.
[15] K. Emura, G. Hanaoka, G. Ohtake, T. Matsuda, and
S. Yamada. Chosen ciphertext secure
keyed-homomorphic public-key encryption. In
Public-Key Cryptography, pages 32–50, 2013.
[16] L. Fang, W. Susilo, C. Ge, and J. Wang. Public key
encryption with keyword search secure against
keyword guessing attacks without random oracle. Inf.
Sci., 238:221–241, 2013.
[17] D. Fiore, R. Gennaro, and V. Pastro. Eﬃciently
veriﬁable computation on encrypted data. In ACM
Conference on Computer and Communications
Security, pages 844–855, 2014.
[18] S. Garg, C. Gentry, S. Halevi, M. Raykova, A. Sahai,
and B. Waters. Candidate indistinguishability
lattices. In STOC, pages 169–178, 2009.
[21] C. Gentry, A. Sahai, and B. Waters. Homomorphic
encryption from learning with errors:
Conceptually-simpler, asymptotically-faster,
attribute-based. In CRYPTO, pages 75–92, 2013.
[22] M. Izabach`ene and D. Pointcheval. New anonymity
notions for identity-based encryption. In SCN, pages
375–391, 2008.
[23] C. S. Jutla and A. Roy. Dual-system
simulation-soundness with applications to UC-PAKE
and more. In ASIACRYPT, pages 630–655, 2015.
[24] E. Kiltz. Chosen-ciphertext security from tag-based
encryption. In TCC, pages 581–600, 2006.
[25] M. Kim, H. T. Lee, S. Ling, S. Q. Ren, B. H. M. Tan,
and H. Wang. Better security for queries on encrypted
databases. Cryptology ePrint Archive, Report
2016/470, 2016. http://eprint.iacr.org/2016/470.
[26] J. Lai, R. H. Deng, C. Ma, K. Sakurai, and J. Weng.
CCA-secure keyed-fully homomorphic encryption. In
Public-Key Cryptography, pages 70–98, 2016.
[27] B. Libert, T. Peters, M. Joye, and M. Yung.
Non-malleability from malleability: Simulation-sound
quasi-adaptive nizk proofs and CCA2-secure
encryption from homomorphic signatures. In
EUROCRYPT, 2014.
[28] P. Paillier. Public-key cryptosystems based on
composite degree residuosity classes. In
EUROCRYPT, pages 223–238, 1999.
[29] H. S. Rhee, W. Susilo, and H. Kim. Secure searchable
public key encryption scheme against keyword
guessing attacks. IEICE Electronic Express,
6(5):237–243, 2009.
[30] Y. Sakai, K. Emura, G. Hanaoka, Y. Kawai, and
K. Omote. Methods for restricting message space in
public-key encryption. IEICE Transactions,
96-A(6):1156–1168, 2013.
[31] K. Shimizu, K. Nuida, H. Arai, S. Mitsunari,
N. Attrapadung, M. Hamada, K. Tsuda, T. Hirokawa,
J. Sakuma, G. Hanaoka, and K. Asai.
Privacy-preserving search for chemical compound
databases. Bioinformatics, 16(18), 2015.
[32] M. Yasuda, T. Shimoyama, J. Kogure, K. Yokoyama,
and T. Koshiba. Secure pattern matching using
somewhat homomorphic encryption. In CCSW, pages
65–76, 2013.
[33] M. Yasuda, T. Shimoyama, J. Kogure, K. Yokoyama,
and T. Koshiba. Privacy-preserving wildcards pattern
matching using symmetric somewhat homomorphic
encryption. In ACISP, pages 338–353, 2014.
[34] R. Zhang and H. Imai. Combining public key
encryption with keyword search and public key
encryption. IEICE Transactions, 92-D(5):888–896,
2009.
226Appendix
A.1 Omitted Deﬁnitions
Here, we introduce deﬁnitions of smooth function, the trun-
cated decisional augmented bilinear Diﬃe-Hellman exponent
(truncated decisional ABDHE) assumption, and KH-IBE.
Moreover, we give the deﬁnition of anonymity of KH-IBE.
Deﬁnition 7.1
(Smooth Function [14]). Let f : X →
Y be a hash function. We say that f is ǫ-smooth, if the
quantity Smthf := maxy∈Y Pr
[f (x) = y] is not larger
x
than ǫ. We say that f is smooth, if it is ǫ-smooth for a
negligible ǫ.
$
←X
Smoothness is introduced for compressing the size of the ci-
phertext, and a one-way function (OWF) has the property.
In our implementation, we use SHA512 as the smooth func-
tion.
The truncated decisional ABDHE assumption is deﬁned
as follows.
Deﬁnition 7.2
(truncated decision q-ABDHE [19]).
Let G and GT be cyclic groups with prime order p, where
hgi = G, and e : G×G → GT be a bilinear map. Let g′ $← G,
i := g′(αi) and gi := g(αi).
α $← Zp, and Z $← GT , and set g′
We say that truncated decision q-ABDHE assumption holds,
if for any PPT adversary A, its advantage AdvABDHE
(κ) de-
ﬁned by AdvABDHE
q+2, g, g1, . . . , gq, e(gq+1,
g′)) = 0] − Pr[A(g′, g′
q+2, g, g1, . . . , gq, Z) = 0]| is negligible
(κ) := | Pr[A(g′, g′
A
A
Deﬁnition 7.3
(Syntax of KH-IBE [14]). Let M be
a message space, ID be an identity space, and ⊙ be a bi-
nary operation over M. A KH-IBE scheme KH-IBE, which
consists of ﬁve algorithms (IBE.Setup, IBE.KeyGen, IBE.Enc,
IBE.Dec, IBE.Eval), is deﬁned as follows:
IBE.Setup: A setup algorithm takes a security parameter 1κ
(κ ∈ N) as input, and returns a public parameter params
and a master secret key msk.
IBE.KeyGen: A key generation algorithm takas params, msk,
and an identity ID ∈ ID as input, and returns a decryption
key skd,ID and a homomorphic operation key skh,ID.
IBE.Enc: An encryption algorithm takes params, ID, and a
message M ∈ M as input, and returns a ciphertext C.
IBE.Dec: An decryption algorithm takes params, skd,ID and
C as input, and returns M or ⊥.
IBE.Eval: An evaluation algorithm takes params, skh,ID and
two ciphertexts C1 and C2 as input, and returns a ciphertext
C or ⊥.
Let ID ∈ ID be an identity, params be a public parameter
generated by the IBE.Setup, and CID,M be the set of all ci-
phertexts of M ∈ M under the public key ID, i.e., CID,M =
{C|∃r ∈ {0, 1}∗ s.t. C = IBE.Enc(params, ID, M ; r)}.
Deﬁnition 7.4
(Correctness [14]). We say that a KH-
IBE scheme for homomorphic operation ⊙ is correct if for
all (params, msk) ← IBE.Setup(1k), (1) for all ID ∈ ID and
(skd,ID, skh,ID) ← IBE.KeyGen(params, msk, ID), all M ∈
M, and all C ∈ CID,M , it holds that IBE.Dec(params, skd,ID,
C) = M . (2) For all ID ∈ ID and all (skd,ID, skh,ID) ←
IBE.KeyGen(params, msk, ID), all M1, M2 ∈ M, all C1 ∈
CID,M1 and C2 ∈ CID,M2 , it holds that IBE.Eval(params, skh,ID,
C1, C2) ∈ CID,M1⊙M2 .
Next, we introduce the security notion for KH-IBE, which
we call indistinguishability of message under adaptive chosen
ciphertext and identity attacks (KH-ID-CCA).
Deﬁnition 7.5
(KH-ID-CCA [14]). We say that a KH-
IBE scheme is KH-ID-CCA secure if for any PPT adversary
A, the advantage
AdvKH-ID-CCA
KH-IBE,A (κ) = (cid:12)(cid:12) Pr[(params, msk) ← IBE.Setup(1k);
0 , M ∗
1 , st) ← AO(ﬁnd, params);
(ID∗, M ∗
b $← {0, 1}; C ∗ ← IBE.Enc(params, ID∗, M ∗
b );
b′ ← AO(guess, C ∗, st) : b = b′] −
1
2(cid:12)(cid:12)
(params, msk, ·),
dec
(·, ·), OKH-IBE
is negligible in κ. O consists of OKH-IBE
OKH-IBE
·, ·, ·) which are deﬁned as follows. Let D be a list which is
set as D = {C ∗} right after the challenge stage (D is set as
∅ in the ﬁnd stage).
(params, msk, ·), and OKH-IBE
revhk
revdk
eval
(params,
dec
revhk
revhk
The homomorphic operation key reveal oracle OKH-IBE
re-
sponds to a query ID ∈ ID with skh,ID where skh,ID is a part
of (skd,ID, skh,ID) ← IBE.KeyGen(params, msk, ID).
The decryption oracle OKH-IBE
: For a query (ID, C) and
ID = ID∗, this oracle is not available if A has sent ID∗ to
OKH-IBE
(i.e, A has obtained skh,ID∗ ) and A has obtained
the challenge ciphertext C ∗. Otherwise, this oracle responds
to a query C with the result of IBE.Dec(skd,ID, C) if C 6∈ D
or ID 6= ID∗, or returns ⊥ if C ∈ D and ID = ID∗.
The key generation oracle OKH-IBE
responds to a query ID ∈
ID with skd,ID where skd,ID is the result of (skd,ID, skh,ID)
← IBE.KeyGen(params, msk, ID). A is not allowed to query
ID∗ to the oracle.
The evaluation oracle OKH-IBE
with the result of C ← IBE.Eval(skh,ID, C1, C2). In addition,
in the case ID = ID∗, if C 6= ⊥ and either C1 ∈ D or C2 ∈ D,