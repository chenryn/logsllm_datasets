by trusting the logger to build parallel hash chains for
each keyword. Techniques have also been designed for
keyword searching encrypted logs [60, 61]. A tamper-
evident store for voting machines has been proposed,
based on append-only signatures [33], but the signature
sizes grow with the number of signed messages [6].
Many timestamping services have been proposed in
the literature. Haber and Stornetta [27] introduce a time-
stamping service based on hash chains, which inﬂuenced
the design of Surety, a commercial timestamping service
that publishes their head commitment in a newspaper
once a week. Chronos is a digital timestamping service
inspired by a skip list, but with a hashing structure similar
to our history tree [7]. This and other timestamping
designs [9, 10] are round-based. In each round, the logger
collects a set of events and stores the events within that
round in a tree, skip list, or DAG. At the end of the round
the logger publicly broadcasts (e.g.,
in a newspaper)
the commitment for that round. Clients then obtain a
logarithmically-sized,
their
events are stored within that round and are consistent
with the published commitment. Efﬁcient algorithms
have been constructed for outputting time stamp au-
thentication information for successive events within a
round in a streaming fashion, with minimal storage on the
server [37]. Unlike these systems, our history tree allows
events to be added to the log, commitments generated,
and audits to be performed at any time.
tamper-evident proof that
Maniatis and Baker [43] introduced the idea of timeline
entanglement, where every participant in a distributed
system maintains a log. Every time a message is received,
it is added to the log, and every message transmitted
contains the hash of the log head. This process spreads
commitments throughout the network, making it harder
for malicious nodes to diverge from the canonical time-
line without there being evidence somewhere that could
be used in an audit to detect tampering. Auditorium [55]
uses this property to create a shared “bulletin board” that
can detect tampering even when N − 1 systems are faulty.
Secure aggregation has been investigated as a dis-
tributed protocol in sensor networks for computing sums,
medians, and other aggregate values when the host
doing the aggregation is not trusted. Techniques include
trading off approximate results in return for sublinear
communication complexity [12], or using MAC codes
to detect one-hop errors in computing aggregates [30].
Other aggregation protocols have been based around
hash tree structures similar to the ones we developed for
Merkle aggregation. These structures combine aggrega-
tion and cryptographic hashing, and include distributed
sensor-network aggregation protocols for computing au-
thenticated sums [13] and generic aggregation [45]. The
sensor network aggregation protocols interactively gener-
ate a secure aggregate of a set of measurements. In Merkle
aggregation, we use intermediate aggregates as a tool for
performing efﬁcient queries. Also, our Merkle aggre-
gation construction is more efﬁcient than these designs,
requiring fewer cryptographic hashes to verify an event.
8 Conclusions
In this work we have shown that regular and continous
auditing is a critical operation for any tamper-evident log
system, for without auditing, clients cannot detect if a
Byzantine logger is misbehaving by not logging events,
removing unaudited events, or forking the log. From this
requirement we have developed a new tamper-evident
log design, based on a new Merkle tree data structure
that permits a logger to produce concise proofs of its
correct behavior. Our system eliminates any need to trust
the logger, instead allowing clients and auditors of the
logger to efﬁciently verify its correct behavior with only a
constant amount of local state. By sharing commitments
among clients and auditors, our design is resistant even
to sophisticated forking or rollback attacks, even in cases
where a client might change its mind and try to repudiate
events that it had logged earlier.
We also proposed Merkle aggregation, a ﬂexible
mechanism for encoding auxiliary attributes into a
Merkle tree that allows these attributes to be aggregated
from the leaves up to the root of the tree in a veriﬁable
fashion. This technique permits a wide range of efﬁcient,
tamper-evident queries, as well as enabling veriﬁable,
safe deletion of “expired” events from the log.
Our prototype implementation supports thousands of
events per second, and can easily scale to very large
logs. We also demonstrated the effectiveness of Bloom
ﬁlters to enable a broad range of queries. By virtue of its
concise proofs and scalable design, our techniques can
be applied in a variety of domains where high volumes
of logged events might otherwise preclude the use of
tamper-evident logs.
Acknowledgements
The authors gratefully acknowledge Farinaz Koushan-
far, Daniel Sandler, and Moshe Vardi for many helpful
comments and discussions on this project. The authors
also thank the anonymous referees and Micah Sherr, our
shepherd, for their assistance. This work was supported,
in part, by NSF grants CNS-0524211 and CNS-0509297.
References
[1] ACCORSI, R., AND HOHL, A. Delegating secure logging
in pervasive computing systems. In Security in Pervasive
Computing (York, UK, Apr. 2006), pp. 58–72.
[2] ANAGNOSTOPOULOS, A., GOODRICH, M. T., AND
TAMASSIA, R. Persistent authenticated dictionaries and
their applications. In International Conference on
Information Security (ISC) (Seoul, Korea, Dec. 2001),
pp. 379–393.
[3] BELLARE, M., AND MINER, S. K. A forward-secure
digital signature scheme. In CRYPTO ’99 (Santa Barbara,
CA, Aug. 1999), pp. 431–448.
[4] BELLARE, M., AND YEE, B. S. Forward integrity for
secure audit logs. Tech. rep., University of California at
San Diego, Nov. 1997.
[5] BENALOH, J., AND DE MARE, M. One-way
accumulators: a decentralized alternative to digital
signatures. In Workshop on the Theory and Application of
Cryptographic Techniques on Advances in Cryptology
(EuroCrypt ’93) (Lofthus, Norway, May 1993),
pp. 274–285.
[6] BETHENCOURT, J., BONEH, D., AND WATERS, B.
Cryptographic methods for storing ballots on a voting
machine. In Network and Distributed System Security
Symposium (NDSS) (San Diego, CA, Feb. 2007).
[7] BLIBECH, K., AND GABILLON, A. CHRONOS: An
authenticated dictionary based on skip lists for
timestamping systems. In Workshop on Secure Web
Services (Fairfax, VA, Nov. 2005), pp. 84–90.
[8] BLOOM, B. H. Space/time trade-offs in hash coding with
allowable errors. Communications of the ACM 13, 7
(1970), 422–426.
[9] BULDAS, A., LAUD, P., LIPMAA, H., AND
WILLEMSON, J. Time-stamping with binary linking
schemes. In CRYPTO ’98 (Santa Barbara, CA, Aug.
1998), pp. 486–501.
[10] BULDAS, A., LIPMAA, H., AND SCHOENMAKERS, B.
Optimally efﬁcient accountable time-stamping. In
International Workshop on Practice and Theory in Public
Key Cryptography (PKC) (Melbourne, Victoria, Australia,
Jan. 2000), pp. 293–305.
[11] CAMENISCH, J., AND LYSYANSKAYA, A. Dynamic
accumulators and application to efﬁcient revocation of
anonymous credentials. In CRYPTO ’02 (Santa Barbara,
CA, Aug. 2002), pp. 61–76.
[12] CHAN, H., PERRIG, A., PRZYDATEK, B., AND SONG,
D. SIA: Secure information aggregation in sensor
networks. Journal Computer Security 15, 1 (2007),
69–102.
[13] CHAN, H., PERRIG, A., AND SONG, D. Secure
hierarchical in-network aggregation in sensor networks.
In ACM Conference on Computer and Communications
Security (CCS ’06) (Alexandria, VA, Oct. 2006),
pp. 278–287.
[14] CHOR, B., GOLDREICH, O., KUSHILEVITZ, E., AND
SUDAN, M. Private information retrieval. In Annual
Symposium on Foundations of Computer Science
(Milwaukee, WI, Oct. 1995), pp. 41–50.
[15] CHUN, B.-G., MANIATIS, P., SHENKER, S., AND
KUBIATOWICZ, J. Attested append-only memory:
Making adversaries stick to their word. In SOSP ’07
(Stevenson, WA, Oct. 2007), pp. 189–204.
[16] D. S. PARKER, J., POPEK, G. J., RUDISIN, G.,
STOUGHTON, A., WALKER, B. J., WALTON, E., CHOW,
J. M., EDWARDS, D., KISER, S., AND KLINE, C.
Detection of mutual inconsistency in distributed systems.
IEEE Transactions on Software Engineering 9, 3 (1983),
240–247.
[17] DAVIS, D., MONROSE, F., AND REITER, M. K.
Time-scoped searching of encrypted audit logs. In
Information and Communications Security Conference
(Malaga, Spain, Oct. 2004), pp. 532–545.
[18] DEUTSCH, P. Gzip ﬁle format speciﬁcation version 4.3.
RFC 1952, May 1996. http://www.ietf.org/rfc/rfc1952.txt.
[19] DEVANBU, P., GERTZ, M., KWONG, A., MARTEL, C.,
NUCKOLLS, G., AND STUBBLEBINE, S. G. Flexible
authentication of XML documents. Journal of Computer
Security 12, 6 (2004), 841–864.
[20] DEVANBU, P., GERTZ, M., MARTEL, C., AND
STUBBLEBINE, S. G. Authentic data publication over the
internet. Journal Computer Security 11, 3 (2003),
291–314.
[21] GENNARO, R., AND ROHATGI, P. How to sign digital
streams. In CRYPTO ’97 (Santa Barbara, CA, Aug.
1997), pp. 180–197.
[22] GERR, P. A., BABINEAU, B., AND GORDON, P. C.
Compliance: The effect on information management and
the storage industry. The Enterprise Storage Group, May
2003. http://searchstorage.techtarget.com/tip/0,289483,
sid5 gci906152,00.html.
[23] GOH, E.-J. Secure indexes. Cryptology ePrint Archive,
Report 2003/216, 2003. http://eprint.iacr.org/2003/216/
See also http://eujingoh.com/papers/secureindex/.
[24] GOODRICH, M., TAMASSIA, R., AND SCHWERIN, A.
Implementation of an authenticated dictionary with skip
lists and commutative hashing. In DARPA Information
Survivability Conference & Exposition II (DISCEX II)
(Anaheim, CA, June 2001), pp. 68–82.
[25] GOODRICH, M. T., TAMASSIA, R., TRIANDOPOULOS,
N., AND COHEN, R. F. Authenticated data structures for
graph and geometric searching. In Topics in Cryptology,
The Cryptographers’ Track at the RSA Conference
(CT-RSA) (San Francisco, CA, Apr. 2003), pp. 295–313.
[26] GOYAL, V., PANDEY, O., SAHAI, A., AND WATERS, B.
Attribute-based encryption for ﬁne-grained access control
of encrypted data. In ACM Conference on Computer and
Communications Security (CCS ’06) (Alexandria,
Virginia, Oct. 2006), pp. 89–98.
[27] HABER, S., AND STORNETTA, W. S. How to time-stamp
a digital document. In CRYPTO ’98 (Santa Barbara, CA,
1990), pp. 437–455.
[28] HAEBERLEN, A., KOUZNETSOV, P., AND DRUSCHEL,
P. PeerReview: Practical accountability for distributed
systems. In SOSP ’07 (Stevenson, WA, Oct. 2007).
[29] HOLT, J. E. Logcrypt: Forward security and public
veriﬁcation for secure audit logs. In Australasian
Workshops on Grid Computing and E-research (Hobart,
Tasmania, Australia, 2006).
[30] HU, L., AND EVANS, D. Secure aggregation for wireless
networks. In Symposium on Applications and the Internet
Workshops (SAINT) (Orlando, FL, July 2003), p. 384.
[31] ITKIS, G. Cryptographic tamper evidence. In ACM
Conference on Computer and Communications Security
(CCS ’03) (Washington D.C., Oct. 2003), pp. 355–364.
[32] KELSEY, J., CALLAS, J., AND CLEMM, A. Signed
Syslog messages.
http://tools.ietf.org/id/draft-ietf-syslog-sign-23.txt (work in
progress), Sept. 2007.
[33] KILTZ, E., MITYAGIN, A., PANJWANI, S., AND
RAGHAVAN, B. Append-only signatures. In International
Colloquium on Automata, Languages and Programming
(Lisboa, Portugal, July 2005).
[34] KOCHER, P. C. On certiﬁcate revocation and validation.
In International Conference on Financial Cryptography
[51] PAVLOU, K., AND SNODGRASS, R. T. Forensic analysis
of database tampering. In ACM SIGMOD International
Conference on Management of Data (Chicago, IL, June
2006), pp. 109–120.
[52] PETERSON, Z. N. J., BURNS, R., ATENIESE, G., AND
BONO, S. Design and implementation of veriﬁable audit
trails for a versioning ﬁle system. In USENIX Conference
on File and Storage Technologies (San Jose, CA, Feb.
2007).
[53] PUGH, W. Skip lists: A probabilistic alternative to
balanced trees. In Workshop on Algorithms and Data
Structures (1989), pp. 437–449.
[54] SAHAI, A., AND WATERS, B. Fuzzy identity based
encryption. In Workshop on the Theory and Application
of Cryptographic Techniques on Advances in Cryptology
(EuroCrypt ’05) (May 2005), vol. 3494, pp. 457 – 473.
[55] SANDLER, D., AND WALLACH, D. S. Casting votes in
the Auditorium. In USENIX/ACCURATE Electronic
Voting Technology Workshop (EVT’07) (Boston, MA,
Aug. 2007).
[56] SCHNEIER, B., AND KELSEY, J. Automatic event-stream
notarization using digital signatures. In Security Protocols
Workshop (Cambridge, UK, Apr. 1996), pp. 155–169.
[57] SCHNEIER, B., AND KELSEY, J. Secure audit logs to
support computer forensics. ACM Transactions on
Information and System Security 1, 3 (1999).
[58] SION, R. Strong WORM. In International Conference on
Distributed Computing Systems (Beijing, China, May
2008), pp. 69–76.
[59] SNODGRASS, R. T., YAO, S. S., AND COLLBERG, C.
Tamper detection in audit logs. In Conference on Very
Large Data Bases (VLDB) (Toronto, Canada, Aug. 2004),
pp. 504–515.
[60] SONG, D. X., WAGNER, D., AND PERRIG, A. Practical
techniques for searches on encrypted data. In IEEE
Symposium on Security and Privacy (Berkeley, CA, May
2000), pp. 44–55.
[61] WATERS, B. R., BALFANZ, D., DURFEE, G., AND
SMETTERS, D. K. Building an encrypted and searchable
audit log. In Network and Distributed System Security
Symposium (NDSS) (San Diego, CA, Feb. 2004).
[62] WEATHERSPOON, H., WELLS, C., AND KUBIATOWICZ,
J. Naming and integrity: Self-verifying data in
peer-to-peer systems. In Future Directions in Distributed
Computing (2003), vol. 2584 of Lecture Notes in
Computer Science, pp. 142–147.
[63] YUMEREFENDI, A. R., AND CHASE, J. S. Strong
accountability for network storage. ACM Transactions on
Storage 3, 3 (2007).
[64] ZHU, Q., AND HSU, W. W. Fossilized index: The
linchpin of trustworthy non-alterable electronic records.
In ACM SIGMOD International Conference on
Management of Data (Baltimore, MD, June 2005),
pp. 395–406.
(FC ’98) (Anguilla, British West Indies, Feb. 1998),
pp. 172–177.
[35] KOTLA, R., ALVISI, L., DAHLIN, M., CLEMENT, A.,
AND WONG, E. Zyzzyva: Speculative byzantine fault
tolerance. In SOSP ’07 (Stevenson, WA, Oct. 2007),
pp. 45–58.
[36] LI, J., KROHN, M., MAZI `ERES, D., AND SHASHA, D.
Secure untrusted data repository (SUNDR). In Operating
Systems Design & Implementation (OSDI) (San
Francisco, CA, Dec. 2004).
[37] LIPMAA, H. On optimal hash tree traversal for interval
time-stamping. In Proceedings of the 5th International
Conference on Information Security (ISC02) (Seoul,
Korea, Nov. 2002), pp. 357–371.
[38] LONVICK, C. The BSD Syslog protocol. RFC 3164,
Aug. 2001. http://www.ietf.org/rfc/rfc3164.txt.
[39] MA, D. Practical forward secure sequential aggregate
signatures. In Proceedings of the 2008 ACM symposium
on Information, computer and communications security
(ASIACCS’08) (Tokyo, Japan, Mar. 2008), pp. 341–352.
[40] MA, D., AND TSUDIK, G. Forward-secure sequential
aggregate authentication. In Proceedings of the 2007
IEEE Symposium on Security and Privacy (Oakland, CA,
May 2007), IEEE Computer Society, pp. 86–91.
[41] MA, D., AND TSUDIK, G. A new approach to secure
logging. Transactions on Storage 5, 1 (2009), 1–21.
[42] MANIATIS, P., AND BAKER, M. Enabling the archival
storage of signed documents. In FAST ’02: Proceedings
of the 1st USENIX Conference on File and Storage
Technologies (Monterey, CA, 2002).
[43] MANIATIS, P., AND BAKER, M. Secure history
preservation through timeline entanglement. In USENIX
Security Symposium (San Francisco, CA, Aug. 2002).
[44] MANIATIS, P., ROUSSOPOULOS, M., GIULI, T. J.,
ROSENTHAL, D. S. H., AND BAKER, M. The LOCKSS
peer-to-peer digital preservation system. ACM
Transactions on Computer Systems 23, 1 (2005), 2–50.
[45] MANULIS, M., AND SCHWENK, J. Provably secure
framework for information aggregation in sensor
networks. In Computational Science and Its Applications
(ICCSA) (Kuala Lumpur, Malaysia, Aug. 2007),
pp. 603–621.
[46] MERKLE, R. C. A digital signature based on a
conventional encryption function. In CRYPTO ’88 (1988),
pp. 369–378.
[47] MITRA, S., HSU, W. W., AND WINSLETT, M.
Trustworthy keyword search for regulatory-compliant
records retention. In International Conference on Very
Large Databases (VLDB) (Seoul, Korea, Sept. 2006),
pp. 1001–1012.
[48] MONTEIRO, S. D. S., AND ERBACHER, R. F.
Exemplifying attack identiﬁcation and analysis in a novel
forensically viable Syslog model. In Workshop on
Systematic Approaches to Digital Forensic Engineering
(Oakland, CA, May 2008), pp. 57–68.
[49] NAOR, M., AND NISSIM, K. Certiﬁcate revocation and
certiﬁcate update. In USENIX Security Symposium (San
Antonio, TX, Jan. 1998).
[50] OSTROVSKY, R., SAHAI, A., AND WATERS, B.
Attribute-based encryption with non-monotonic access
structures. In ACM Conference on Computer and
Communications Security (CCS ’07) (Alexandria, VA,
Oct. 2007), pp. 195–203.