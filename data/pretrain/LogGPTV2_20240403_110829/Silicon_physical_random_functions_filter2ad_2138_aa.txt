title:Silicon physical random functions
author:Blaise Gassend and
Dwaine E. Clarke and
Marten van Dijk and
Srinivas Devadas
Silicon Physical Random Functions(cid:3)
Blaise Gassend, Dwaine Clarke, Marten van Dijky and Srinivas Devadas
Massachusetts Institute of Technology
Laboratory for Computer Science
Cambridge, MA 02139, USA
fgassend,declarke,marten,PI:EMAIL
ABSTRACT
We introduce the notion of a Physical Random Function
(PUF). We argue that a complex integrated circuit can be
viewed as a silicon PUF and describe a technique to identify
and authenticate individual integrated circuits (ICs).
We describe several possible circuit realizations of di(cid:11)er-
ent PUFs. These circuits have been implemented in com-
modity Field Programmable Gate Arrays (FPGAs). We
present experiments which indicate that reliable authenti-
cation of individual FPGAs can be performed even in the
presence of signi(cid:12)cant environmental variations.
We describe how secure smart cards can be built, and also
brie(cid:13)y describe how PUFs can be applied to licensing and
certi(cid:12)cation applications.
Categories and Subject Descriptors
C.3 [Special-Purpose and Application-Based Systems]:
Smartcards
General Terms
Measurement, Experimentation, Security
Keywords
Identi(cid:12)cation, physical random function, physical security,
smartcard, tamper resistance, unclonability
1.
INTRODUCTION
We describe the notion of Physical Random Functions
(PUFs) and argue that PUFs can be implemented using
conventional integrated circuit (IC) design techniques. This
(cid:3)This work was funded by Acer Inc., Delta Electronics Inc.,
HP Corp., NTT Inc., Nokia Research Center, and Philips
Research under the MIT Project Oxygen partnership.
yVisiting researcher from Philips Research, Prof Holstlaan
4, Eindhoven, The Netherlands.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’02 November 18–22, 2002, Washington, DC, USA.
Copyright 2002 ACM 1-58113-612-9/02/0011 ...$5.00.
leads us to a method of identifying and authenticating in-
dividual ICs and a means of building secure smartcards. A
host of other applications are also possible.
Many methods are already available to identify and au-
thenticate ICs. One can embed a unique identi(cid:12)er in an IC
to give it a unique identity. This approach can identify the
IC, but cannot authenticate it. To enable authentication,
one needs to embed a secret key onto the IC. Of course, for
the system to work, this key needs to remain secret, which
means that the packaged IC has to be made resistant to at-
tacks that attempt to discover the key. Numerous attacks
are described in the literature. These attacks may be inva-
sive, e.g., removal of the package and layers of the IC, or
non-invasive, e.g., di(cid:11)erential power analysis that attempts
to determine the key by stimulating the IC and observing
the power and ground rails. Making an IC tamper-resistant
to all forms of attacks is a challenging problem and is receiv-
ing some attention [1]. IBM’s PCI Cryptographic Coproces-
sor encapsulates a 486-class processing subsystem within a
tamper-sensing and tamper-responding environment where
one can run security-sensitive processes [13]. However, pro-
viding high-grade tamper resistance, which makes it impos-
sible for an attacker to access or modify the secrets held
inside a device, is expensive and di(cid:14)cult [2, 3].
We propose a completely di(cid:11)erent approach to IC authen-
tication in this paper. Our thesis is that there is enough
manufacturing process variations across ICs with identical
masks to uniquely characterize each IC, and this character-
ization can be performed with a large signal-to-noise ratio
(SNR). The characterization of an IC involves the genera-
tion of a set of challenge-response pairs. To authenticate ICs
we require the set of challenge-response pairs to be charac-
teristic of each IC. For reliable authentication, we require
that environmental variations and measurement errors do
not produce so much noise that they hide inter-IC varia-
tions. We will show in this paper, using experiments and
analysis, that we can perform reliable authentication using
the techniques that we now introduce.
How can we produce a unique set of challenge-response
pairs for each IC, even if the digital IC functionality or
masks of the ICs are exactly the same? We rely on there
being enough statistical delay variation for equivalent wires
and devices across di(cid:11)erent ICs. Sources of statistical varia-
tion in manufacturing are well documented in the literature
(e.g., [5] and [6]) and statistical variation has been exploited
to create IC identi(cid:12)cation circuits that generate a single
unique response for each manufactured IC [11]. The tran-
sient response of the IC to a challenge, i.e., input stimulus,
148is dependent on the delays of wires and devices within each
IC. Our contribution is to show that by exploiting statistical
delay variation and measuring transient response, one can
generate multiple challenge-response pairs1 that can be used
to identify and authenticate an IC. The transient response
only gives indirect information about the delays of wires and
devices in the IC on the paths that are stimulated by the
challenge. Since only indirect information is provided, it is
possible to securely authenticate the IC.
To break the authentication methodology, the adversary
can fabricate a \counterfeit" IC that produces exactly the
same responses as the original IC for all challenges. Given
the statistical variation inherent in any manufacturing pro-
cess, we argue that the probability of this happening for a
newly fabricated IC is very low, implying that the adver-
sary will have to fabricate a huge number of ICs, and make
comprehensive measurements on each one, in order to create
and discover a counterfeit.
Alternately, the adversary can create a timing-accurate
model of the original IC and simulate the model to respond
to challenges, in e(cid:11)ect creating a \virtual counterfeit." How-
ever, this model has to be extremely accurate since it has
to incorporate near-exact delays of all devices and wires
within the original IC, with errors of no more than 0:01%.
Moreover, the transient response is a non-linear and non-
monotonic function of the delays of wires and devices in
the IC. The adversary has to invert this function to get the
parameters of his model. We will argue that this is very
hard to do, even given complete mask information of the IC
and unrestricted physical access to the IC. Further, we can
make this even harder by restricting the challenges that can
be presented to the IC and/or obfuscating the responses.
The rest of this paper will be structured as follows: In
Section 2, we de(cid:12)ne PUFs. This is followed by an overview
of our approach to creating silicon PUFs in Section 3. We
describe various challenges in creating a silicon PUF in Sec-
tion 4, and present an architecture for such a device. Then,
we describe applications of silicon PUFs in Section 5.
In
Section 6 we describe preliminary experiments we have con-
ducted using commodity FPGAs that indicate that there is
enough statistical variation for authentication to be viable,
and that give an idea of the di(cid:14)culty of modeling or cloning
silicon PUFs. Finally, we brie(cid:13)y discuss ongoing work in
Section 7.
2. DEFINITIONS
Definition 1. A Physical Random Function (PUF)2 is
a function that maps challenges to responses, that is em-
bodied by a physical device, and that veri(cid:12)es the following
properties:
1. Easy to evaluate: The physical device is easily capable
of evaluating the function in a short amount of time.
1In fact, the number of potential challenge-response pairs
grows exponentially with the number of inputs to the IC,
since the response to each distinct challenge typically de-
pends on a di(cid:11)erent set of device and wire delays within the
IC. Of course these challenges are not all independent as
a given circuit element will in(cid:13)uence the response to many
di(cid:11)erent challenges.
2PUF actually stands for Physical Unclonable Function. It
has the advantage of being easier to pronounce, and it avoids
confusion with Pseudo-Random Functions.
2. Hard to characterize: From a polynomial number of
plausible physical measurements (in particular, deter-
mination of chosen challenge-response pairs), an at-
tacker who no longer has the device, and who can only
use a polynomial amount of resources (time, matter,
etc...) can only extract a negligible amount of infor-
mation about the response to a randomly chosen chal-
lenge.
In the above de(cid:12)nition, the terms short and polynomial
are relative to the size of the device, which is the security
parameter. In particular, short means linear or low degree
polynomial. The term plausible is relative to the current
state of the art in measurement techniques and is likely to
change as improved methods are devised.
In previous literature [12] PUFs were referred to as Phys-
ical One Way Functions, and realized using 3-dimensional
micro-structures and coherent radiation. We believe this
terminology to be confusing because PUFs do not match
the standard meaning of one way functions.
The focus of this paper is the silicon realization of PUFs,
which we shall term silicon PUFs (SPUFs).
Definition 2. A type of PUF is said to be Manufacturer
Resistant if it is technically impossible to produce two iden-
tical PUFs of this type given only a polynomial amount of
resources.
The silicon PUFs that we will describe in the sequel are
manufacturer resistant, as they use circuit characteristics
that are beyond the control of the fabrication process. When
a PUF is manufacturer resistant, the amount of trust that
must be placed in the manufacturer of the PUF is signi(cid:12)-
cantly reduced.
Definition 3. A PUF is said to be Controlled if it can
only be accessed via an algorithm that is physically linked
to the PUF in an inseparable way (i.e., any attempt to cir-
cumvent the algorithm will lead to the destruction of the
PUF). In particular this algorithm can restrict the challenges
that are presented to the PUF and can limit the information
about responses that is given to the outside world.
Silicon PUFs are ideally suited to being controlled PUFs.
The PUF circuit can be intertwined with a circuit that con-
trols access to the PUF in a very (cid:12)ne grained way. In [10],
we go more into the details of controlled PUFs, how to use
them, and the types of applications that they can support.
3. OVERVIEW OF APPROACH
We wish to implement a PUF in silicon so we can identify
and authenticate a given integrated circuit (IC). By exploit-
ing statistical variations in the delays of devices and wires
within the IC, we create a manufacturer resistant PUF.
3.1 Manufacturing Variation
Manufactured ICs, from either the same lot or wafer have
inherent delay variations. Across a die, device delays vary
due to mask variations { this is sometimes called the system
component of delay variation. There are also random varia-
tions in dies across a wafer, and from wafer to wafer due to,
for instance, process temperature and pressure variations,
during the various manufacturing steps. The magnitude of
delay variation due to this random component can be 5%
149or more. Delay variations of the same wire or device in dif-
ferent dies have been modeled using Gaussian distributions
and other probabilistic distributions (e.g., [6]). Constant
research attempts to reduce all these sources of variation
because they inherently limit the component density of the
IC. Nevertheless, the relative variations in state of the art
components tends to increase with shrinking device sizes
(see chapter 14 of [7]).
On-chip measurement of delays can be carried out with
very high accuracy, and therefore the signal-to-noise ratio
when delays of corresponding wires across two or more ICs
are compared is quite high.
3.2 Environmental Variations
The most signi(cid:12)cant environmental condition that a(cid:11)ects
chip operation is ambient temperature. The delay of gates
and wires depends on the junction temperature [14] which
is dependent on the ambient temperature. Therefore, signif-
icant variations in the ambient temperature, e.g., (cid:6)25 de-
grees Celsius, can cause appreciable variations in the delays.
The main problem posed by this variation is the incorrect
rejection of an authentic IC. However, relative measurement
of delays, essentially using delay ratios, provides robustness
against environmental variations, such as varying ambient
temperature, and power supply variations. The impact of
varying junction temperature can be reduced by using all the
elements in the PUF in a uniform way. Our experiments in
Section 6.1 validate the robustness of relative measurement.
For huge changes in environmental conditions, e.g., 100
degrees in ambient temperature, when even relative mea-
surements break down, authentication can be carried out
taking into account the existing environmental conditions.
Essentially, a PUF would be seen as 2 or 3 di(cid:11)erent PUFs,
only one of which is expressed at a time, depending on the
temperature.
Finally, circuit aging can also change delays, but its e(cid:11)ects
are signi(cid:12)cantly smaller than temperature and power supply
e(cid:11)ects.
3.3 Challenge-Response Pairs
As we mentioned in the introduction, manufacturing vari-
ations have been exploited to identify individual ICs. How-
ever, the identi(cid:12)cation circuits used generate a static digital
response (which is di(cid:11)erent for each IC). We propose the
generation of many challenge-response pairs for each IC,
where the challenge can be a digital (or possibly analog)
input stimulus, and the response depends on the transient
behavior of the IC, and can be a precise delay measure, or
a digital response based on measured delay.
The transient behavior of the IC depends on the network
of logic devices as well as the delays of the devices and inter-
connecting wires. Assuming the IC is combinational logic,
an input pair hv1; v2i produces a transient response at the
outputs. Each input pair stimulates a potentially di(cid:11)erent
set of paths in the IC. If we think of each input pair as being
a challenge, the transient response of the IC will typically
be di(cid:11)erent for each challenge.
The number of potential challenges grows with the size
and number of inputs to the IC. Therefore, while two ICs
may have a high probability of having the same response
to a particular challenge, if we apply many challenges, then
we can distinguish between the two ICs. More precisely, if
the standard deviation of the measurement error is (cid:14), and
the standard deviation of inter-FPGA variation is (cid:27), then
for Gaussian distributions, the number of bits that can be
extracted for one challenge is up to 1
2 log2(1 + (cid:27)=(cid:14)), though
this limit is di(cid:14)cult to reach in practice.
By using multiple independent challenges, we can extract
a large number of identi(cid:12)cation bits from an IC. Of course,
the bits that are extracted for di(cid:11)erent challenges are not
all independent. This is not a problem as only a few hun-
dreds of bits are su(cid:14)cient to identify a component. What
is important is that the relation between bits that are ex-
tracted from di(cid:11)erent challenges be extremely hard to (cid:12)nd