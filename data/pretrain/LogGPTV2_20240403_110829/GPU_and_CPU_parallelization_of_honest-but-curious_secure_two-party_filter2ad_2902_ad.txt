### 优化后的文本

#### 图1：电路门生成率对比
- **图1a**：展示了[5]与我们技术在完全并行化电路生成方面的电路门生成率。
- **图1b**：展示了不同电路大小下每个多处理器的门生成率。

接下来，我们考虑了来自Kreuter等人[14]和我们自己构建的多种不同电路尺寸。由于我们支持PCF，我们可以与Kreuter等人[14]测试相同的电路进行比较。如图2所示，我们的系统与Kreuter等人的绝对性能（以每秒门数为单位）进行了比较，而在图4a和4b中则显示了每个核心的相对性能。请注意，在中到大电路尺寸范围内，每个核心的性能相对稳定。此外，我们的核心数量更多，成本和能耗更低。

使用每秒门数作为度量标准，我们发现我们的系统在生成方面提供了显著更高的生成率：大约高出三个数量级。我们的系统最高可达约7500万门/秒，而Kreuter等人最高仅为35万门/秒。值得注意的是，他们的系统是为集群计算设计的，因此需要承担较大的开销。

#### 图2：门生成时间对比
- **图2a**：展示了随时间变化的门生成情况。
- **图2b**：展示了每个核心每秒的门生成率与门数的关系。

#### 8.3 GPU评估
虽然在生成方面我们显著优于其他系统，但在CPU评估技术上，我们与Kreuter等人[15]的表现相当，略逊于Frederiksen和Nielsen[5]的当前实现。结果见图3。

切分选择协议在并行评估中的优势，尤其是在SIMD架构上，使得HbC或1BM模型协议难以保持竞争力。我们的评估问题似乎源于两个因素：
1. 由于电路每一层必须在处理下一层之前完成评估，因此很难让GPU充分参与处理。
2. 我们的电路评估数据结构缺乏内存聚合，导致电路评估时间受到严重的读写性能惩罚。内存聚合是指在一个warp中的所有线程访问相邻的内存位置。

我们认为可以通过未来的工作部分解决第二个问题，但不太可能达到切分选择协议允许的水平。第一个问题对于HbC和1BM安全模型协议来说更为根本，因为无法保证有k个相同的门进行评估，也无法自然地将电路宽度乘以O(k)倍。对于自然的大电路，可能有一些希望。

回想一下，核心利用率和内存聚合对Frederiksen和Nielsen来说不是主要问题。他们不仅在恶意模型中计算多个AES电路副本，而且他们的评估算法可以确保这一点。这使他们在构造内核时具有几个优势。首先，他们可以为每个电路门构造一个内核，并从最低层到最高层依次评估这些门。只要这些内核按层次顺序调度——这是很容易做到的——GPU就永远不会因等待内核完成某一层而低效运行。其次，由于他们总是评估多个相同电路副本，因此可以解决内存聚合问题。

#### GPU评估比较
- **图3**：展示了不同方法之间的GPU评估性能比较。

通过以上分析和图表，我们可以清晰地看到不同方法在不同条件下的性能表现。