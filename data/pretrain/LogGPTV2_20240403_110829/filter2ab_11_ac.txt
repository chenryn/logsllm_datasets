uid 是套接字创建者的有效 uid.
.TP
.I route
没有信息, 但是看上去类似于
.I route(8)
.TP
.I snmp
该文件以 ASCII 格式保存了 IP, ICMP, TCP 以及 UDP
管理所需的数据信息, 基于 snmp 协议. TCP mib
(TCP 管理数据库)尚未完善, 可能在 1.2.0 内核能够
完成. 
.TP
.I tcp
该文件保存了 TCP 套接字表, 大部分信息除用于调试以外没有什么用.
"sl" 指出了套接字的内核散列槽号; "local address"
包括本地地址和端口号; "remote address" 包括远地
地址和端口号(如果有连接的话); 'St' 是套接字的内
部状态; 'tx_queue' 和 'rx_queue' 是内核存储器使用意义上
的输入输出数据队列; "tr", "tm-&gt;when" 和 "rexmits" 保存
了内核套接字声明的内部信息, 只用于调试; uid
是套接字创建者的有效 uid. 
.TP
.I udp
该文件保存了 UDP 套接字表, 大部分信息除用于调试以外没有什么用.
"sl" 指出了套接字的内核散列槽号; "local address"
包括本地地址和端口号; "remote address" 包括远地
地址和端口号(如果有连接的话); "St" 是套接字的内
部状态; "tx_queue" 和 "rx_queue" 是内核存储器使用意义上
的输入输出数据队列; UDP 没有使用 "tr","tm-&gt;when" 和
"rexmits"; uid 是套接字创建者的有效 uid.
格式如下: 
.nf
.ft CW
.if n .in 0
sl  local_address rem_address   st tx_queue rx_queue tr rexmits  tm-&gt;when uid
1: 01642C89:0201 0C642C89:03FF 01 00000000:00000001 01:000071BA 00000000 0
1: 00000000:0801 00000000:0000 0A 00000000:00000000 00:00000000 6F000100 0
1: 00000000:0201 00000000:0000 0A 00000000:00000000 00:00000000 00000000 0
.if n .in
.ft
.fi
.TP
.I unix
列出了当前系统的UNIX域套接字以及它们的状态, 
格式如下: 
.nf
.sp .5
.ft CW
Num RefCount Protocol Flags    Type St Path
0: 00000002 00000000 00000000 0001 03
1: 00000001 00000000 00010000 0001 01 /dev/printer
.ft
.sp .5
.fi
.PP
`Num' 是内核散列槽号; 'RefCount' 是用户套接字号; 'Protocol'
当前总是 0; 'Flags' 是内核标志, 指出了套接字的状态; 'Type'
当前总是 1(在内核中尚未支持 unix 域数据报套接字); 'St'
是套接字内部状态; 'Path' 套接字绑捆的路径(如果有的话). 
.RE
.TP
.I pci
该文件列出了内核初始化时发现的所有 PCI 设备及其配置. 
.TP
.I scsi
该目录包括 scsi 中间层伪文件及各种 SCSI 底层驱动器子目录,
对系统中每个 SCSI host, 子目录中都存在一个文件与之对应, 
展示了部分 SCSI IO 子系统的状态. 这些文件是 ASCII 格式
的, 可用cat阅读. 
你也可以通过写其中某些文件来重新配置该子系统, 开关一些功能.
.RS
.TP
.I scsi
该文件列出了内核掌握的所有 SCSI 设备, 其内容就
和系统启动时所看到的类似. 目前 scsi 只支持
\fIsingledevice\fP命令, 该命令允许 root 添加一个热插
拔(hotplugged)设备到一个已知设备列表中. 
命令
.B echo 'scsi singledevice 1 0 5 0' &gt; /proc/scsi/scsi 
令 host scsi1 扫描 SCSI 通道 0, 
看在 ID 5 LUN 0 是否存在设备, 如果在该地址
存在设备, 或者该地址无效, 则返回一个错误. 
.TP
.I drivername
目前 \fIdrivername\fP 可包含: NCR53c7xx, aha152x, aha1542, aha1740, 
aic7xxx, buslogic, eata_dma, eata_pio, fdomain, in2000, pas16, qlogic, 
scsi_debug, seagate, t128, u15-24f, ultrastore 或者 wd7000. 
这些目录展示那些至少注册了一个 SCSI HBA 的驱动. 
而对每个已注册的 host, 每个目录中都包含一个文件与之对应, 
而这些对应的 host 文件就以初始化时分配给 host 的数字来命名.
这些文件给出了驱动程序以及设备的配置, 统计数据等.
可以通过写这些文件实现不同的 host 上做不同的工作. 
例如, root 可以用 \fIlatency\fP 和 \fInolatency\fP 命令打
开或者关闭 eata_dma 驱动器上测量延时的代码, 
也可以用 \fIlockup\fP 和 \fIunlock\fP 命令
控制 scsi_debug 驱动器所模拟的总线锁操作. 
.RE
.TP
.I self
当某进程访问 /proc 目录时, 该目录就指向 /proc 下以该进
程 ID 命名的目录. 
.TP
.I stat
内核及系统的统计数据. 
.RS
.TP
\fIcpu  3357 0 4313 1362393\fP
系统分别消耗在用户模式, 低优先权的用户模式（nice）, 
系统模式, 以及空闲任务的时间, 以 jiffy 为单位.
最后一个数值应该是 uptime 伪文件第二个数值的
100 倍. 
.TP
\fIdisk 0 0 0 0\fP
目前并没有实现这四个磁盘记录, 我甚至认为就不应该实现它，
这是由于在别的机器上内核统计通常依赖转换率及
每秒 I/O 数, 而这令每个驱动器只能有一个域. 
.TP
\fIpage 5741 1808\fP
系统（从磁盘）交换进的页数和交换出去的页数．
.TP
\fIswap 1 0\fP
取入的交换页及被取出的交换页的页数.
.TP
\fIintr 1462898\fP
系统自启动以来所收到的中断数. 
.TP
\fIctxt 115315\fP
系统所作的进程环境切换次数. 
.TP
\fIbtime 769041601\fP
系统自 1970 年 1 月 1 号以来总的运行时间, 以秒为单位. 
.RE
.TP
.I sys
该目录在 1.3.57 的内核里开始出现, 包含一些对应于内
核变量的文件和子目录. 你可以读这些变量, 有的也可以
通过\fIproc\fP修改, 或者用系统调用
.IR sysctl (2)
修改. 目前该目录下有如下三个子目录:
.IR kernel ";, "; net ";, "; vm
每个各自包括一些文件和子目录.
.RS
.TP
.I kernel
该目录包括如下文件: 
.IR domainname ";, "; file-max ";, "; file-nr ";, "; hostname ";, ";
.IR inode-max ";, "; inode-nr ";, "; osrelease ";, "; ostype ";, ";
.IR panic ";, "; real-root-dev ";, "; securelevel ";, "; version ,
由文件名就可以清楚地得知各文件功能. 
.LP
只读文件 
.I file-nr
给出当前打开的文件数. 
.LP
文件
.I file-max
给出系统所容许的最大可打开文件数.
如果 1024 不够大的话, 可以
.br
.nf
.ft CW
echo 4096 &gt; /proc/sys/kernel/file-max
.fi
.ft
.LP
类似地, 文件
.I inode-nr
以及文件
.I inode-max
指出了当前 inode 数和最大 inode 数.
.LP
文件
.IR ostype ";, "; osrelease ";, "; version
实际上是
.IR /proc/version
的子字串．
.LP
文件
.I panic
可以对内核变量
.IR panic_timeout
进行读/写访问．
如果该值为零, 内核在 panic 时进入（死）循环; 
如果非零, 该值指出内核将自动重起的时间, 以秒为单位. 
.LP
文件
.I securelevel
目前似乎没什么意义 - root 无所不能. 
.RE
.TP
.I uptime
该文件包含两个数: 系统正常运行时间和总的空闲时间, 都以秒为单位. 
.TP
.I version
指明了当前正在运行的内核版本, 例如: 
.nf
.in -2
.ft CW
Linux version 1.0.9 (quinlan@phaze) #1 Sat May 14 01:51:54 EDT 1994
.ft
.in +2
.fi
.RE
.RE
.SH 又见
cat(1), find(1), free(1), mount(1), ps(1), tr(1), uptime(1), readlink(2),
mmap(2), chroot(2), syslog(2), hier(7), arp(8), dmesg(8), netstat(8),
route(8), ifconfig(8), procinfo(8)等等. 
.\"; maybe I should trim that down
.SH 遵循
本手册页基本上是针对 Linux 1.3.11 内核, 如有必要请及时更新!
最后更新也是针对 Linux 1.3.11.
.SH 注意事项
请注意许多字符串(例如环境变量或者命令行)是以内部格式保存的, 
以 NUL 作为子域的结束标志, 可以用 \fIod -c\fP
或者 \fItr ";\\000"; ";\\n";\fP 使之变得更可读.
本手册页还不完善, 可能有不够确切的地方, 需要经常更新. 
.SH BUGS
.I /proc
可能会给那些使用了
.BR chroot (2)
的进程带来安全问题. 例如, 如果
.I /proc
被 mount 在
.B chroot
级别里, 一个
到
.I /proc/1/root
的
.BR chdir (2)
操作将返回文件系统的原始根目录.  
由于 Linux 还不支持
.BR fchroot (2)
调用, 该问题可能更应该看作一个特性而不是一个 bug.
.SH "[中文版维护人]"
.B mapping 
.SH "[中文版最新更新]"
.B 2000/11/26
.SH "《中国linux论坛man手册页翻译计划》:"
.BI http://cmpp.linuxforum.net