User: How to configure firewall using iptables on Linux system? Please describe the basic commands and implementation principles of iptables.
Assistant: 1. Basic commands of iptables 1. Add rule iptables -A chain_name [option] [parameter] Parameter description: -A: means add rule, can be replaced with -I means insert rule chain_name: means the linked list name of operation target, such as INPUT, OUTPUT , FORWARD, PREROUTING, POSTROUTING option: indicates the setting for this rule, such as -s, -d, where -s indicates the source IP address, -d indicates the destination IP address parameter: parameters, such as IP address 2. Delete the rule iptables -D chain_name rule_number parameter description: -D: indicates the deletion rule; chain_name: indicates the linked list name of the operation target, such as INPUT, OUTPUT, FORWARD, PREROUTING, POSTROUTING rule_number: indicates the specific number of the rule to be deleted, you can use iptables -L to view 3. View rules - View all rules iptables -L - View the rules of the specified linked list iptables -L chain_name - View the rules of the specified linked list, and display the rule number iptables -L chain_name -v --line-numbers 4. Clear the rules iptables -F chain_name Parameter description: -F: means to clear the rules; chain_name: means the linked list name of the rules to be cleared Change. - Save current rules iptables-save > /etc/sysconfig/iptables - Restore saved rules iptables-restore < /etc/sysconfig/iptables into a number of different (chained) rules, each rule deciding the fate of the packet one at a time. The implementation principle of iptables is to store the rules in the kernel. When network data passes through the network, the data packet will be transmitted to the network stack of the system. The network stack is composed of a data structure and some kernel modules. Every time a data packet enters and exits the network stack, it will pass through different kernel-level services. This is like a roller coaster, at different points, the data packets are intercepted or released through different coordinates, and finally the data packets are sent to the end of the rule chain. The data packets that iptables needs to receive and process are matched through a series of chains, and when the matching rules are determined, they are processed (allowed or discarded) according to the rules. iptables implements this mechanism in the kernel. iptables is part of the operating system kernel and usually does not require additional software to support it. However, when using it, it should be noted that iptables and firewalld are actually independent of each other. iptables is the underlying tool in the Linux system, while firewalld is the upper-layer firewall program for Red Hat distributions (such as Fedora, CentOS, RHEL, etc.). Therefore, if both are used at the same time, it may cause rule conflicts, and users need to pay attention to avoiding such problems.