### FTP Anonymous Login Check

**Categories:** Default, Authentication, Safe  
**Documentation:** [Nmap Script Documentation](http://nmap.org/nsedoc/scripts/ftp-anon.html)

This script checks if an FTP server allows anonymous logins. If anonymous access is permitted, it retrieves a directory listing of the root directory and highlights writable files.

#### Example: Nmap Default Scripts Help

When using the `-sC` flag to run a script scan in addition to port scanning, Nmap will execute all scripts in the default category. Here’s an example:

```bash
root@kali:~# nmap -sC 192.168.20.10-12
Starting Nmap 6.40 (http://nmap.org) at 2015-12-30 20:21 EST
Nmap scan report for 192.168.20.10
Host is up (0.00038s latency).
Not shown: 988 closed ports
PORT   STATE SERVICE
21/tcp open  ftp
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| drwxr-xr-x 1 ftp ftp 0 Aug 06 2009 incoming
|_-r--r--r-- 1 ftp ftp 187 Aug 06 2009 onefile.html
|_ftp-bounce: bounce working!
25/tcp open  smtp
| smtp-commands: georgia.com, SIZE 100000000, SEND, SOML, SAML, HELP, VRFY, EXPN, ETRN, XTRN,
|_ This server supports the following commands. HELO MAIL RCPT DATA RSET SEND SOML SAML HELP NOOP QUIT
79/tcp open  finger
|_finger: Finger online user list request denied.
80/tcp open  http
|_http-methods: No Allow or Public header in OPTIONS response (status code 3306/tcp open  mysql
| mysql-info: MySQL Error detected!
| Error Code was: 1130
|_Host '192.168.20.9' is not allowed to connect to this MySQL server
```

#### Analysis of Nmap Script Output

- **SMTP Server (Port 25):** The SMTP server allows the use of the `VRFY` command, which can be used to check if a username exists on the mail server. This can facilitate credential-guessing attacks.
- **Web Server (Port 80):** The web server appears to be running XAMPP 1.7.2, which is outdated. The current stable version as of this writing is 1.8.3. This version may have security issues.
- **MySQL Server (Port 3306):** The MySQL server does not allow connections from the IP address `192.168.20.9`. This indicates that the server is configured to restrict access, and we can rule out MySQL vulnerabilities for now.

### Running a Single NSE Script

Let’s look at another example using the `nfs-ls.nse` script, which is not part of the default set. This script connects to NFS and audits shares.

#### NFS-LS Script Details

**Categories:** Discovery, Safe  
**Documentation:** [Nmap Script Documentation](http://nmap.org/nsedoc/scripts/nfs-ls.html)

This script attempts to get useful information about files from NFS exports. The output resembles the output of the `ls` command.

```bash
root@kali:~# nmap --script-help nfs-ls
Starting Nmap 6.40 (http://nmap.org) at 2015-07-16 14:49 EDT
nfs-ls
Categories: discovery safe
http://nmap.org/nsedoc/scripts/nfs-ls.html
Attempts to get useful information about files from NFS exports.
The output is intended to resemble the output of ls.
```

#### Example: NFS-LS Script Output

```bash
root@kali:/# nmap --script=nfs-ls 192.168.20.11
Starting Nmap 6.40 (http://nmap.org) at 2015-12-28 22:02 EST
Nmap scan report for 192.168.20.11
Host is up (0.00040s latency).
Not shown: 993 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 2.3.4
22/tcp open  ssh     OpenSSH 5.1p1 Debian 3ubuntu1 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    Apache httpd 2.2.9 ((Ubuntu) PHP/5.2.6-2ubuntu4.6 with Suhosin-Patch)
111/tcp open  rpcbind 2 (RPC #100000)
| nfs-ls:
| Arguments:
| maxfiles: 10 (file listing output limited)
|
| NFS Export: /export/georgiau
| NFS Access: Read Lookup Modify Extend Delete NoExecute
| PERMISSION UID GID SIZE MODIFICATION TIME FILENAME
| drwxr-xr-x 1000 1000 4096 2013-12-28 23:35 /export/georgia
| -rw------- 1000 1000 117 2013-12-26 03:41 .Xauthority
| -rw------- 1000 1000 3645 2013-12-28 21:54 .bash_history
| drwxr-xr-x 1000 1000 4096 2013-10-27 03:11 .cache
| -rw------- 1000 1000 16 2013-10-27 03:11 .esd_auth
| drwx------ 1000 1000 4096 2013-10-27 03:11 .gnupg
| ?????????? ? ? ? ? .gvfs
| -rw------- 1000 1000 864 2013-12-15 19:03 .recently-used.xbel
| drwx------ 1000 1000 4096 2013-12-15 23:38 .sshv
```

- **NFS Share `/export/georgia`:** The `.ssh` directory is of particular interest, as it may contain sensitive information such as SSH keys and authorized keys. A common pentesting trick is to add a new SSH key to the `authorized_keys` list to gain remote access.

### Metasploit Scanner Modules

Metasploit also includes auxiliary modules for vulnerability scanning. These modules help identify vulnerabilities without giving control of the target machine.

#### Example: Anonymous FTP Scanner Module

```bash
msf > use scanner/ftp/anonymous
msf auxiliary(anonymous) > set RHOSTS 192.168.20.10-11
RHOSTS => 192.168.20.10-11
msf auxiliary(anonymous) > exploit
[*] 192.168.20.10:21 Anonymous READ (220-FileZilla Server version 0.9.32 beta
220-written by Tim Kosse (PI:EMAIL))
220 Please visit http://sourceforge.net/projects/filezilla/)
[*] Scanned 1 of 2 hosts (50% complete)
[*] 192.168.20.11:21 Anonymous READ (220 (vsFTPd 2.3.4))
[*] Scanned 2 of 2 hosts (100% complete)
[*] Auxiliary module execution completed
```

- **Anonymous FTP Enabled:** Both the Windows XP and Linux targets have anonymous FTP enabled. This could be a serious issue if sensitive files are available in the FTP folder.

#### Example: MS08-067 Vulnerability Check

```bash
msf > use windows/smb/ms08_067_netapi
msf exploit(ms08_067_netapi) > set RHOST 192.168.20.10
RHOST => 192.168.20.10
msf exploit(ms08_067_netapi) > check
[*] Verifying vulnerable status... (path: 0x0000005a)
[+] The target is vulnerable.
```

- **MS08-067 Vulnerability:** The Windows XP target is confirmed to be vulnerable to the MS08-067 vulnerability.

### Web Application Scanning

Web application vulnerabilities can provide a foothold into a system, especially in external penetration tests where the attack surface is limited to web servers.

#### Nikto Web Scanner

Nikto is a web application vulnerability scanner that looks for issues such as dangerous files, outdated versions, and misconfigurations.

```bash
root@kali:/# nikto -h 192.168.20.11
- Nikto v2.1.5
---------------------------------------------------------------------------
+ Target IP: 192.168.20.11
+ Target Hostname: 192.168.20.11
+ Target Port: 80
+ Start Time: 2015-12-28 21:31:38 (GMT-5)
---------------------------------------------------------------------------
+ Server: Apache/2.2.9 (Ubuntu) PHP/5.2.6-2ubuntu4.6 with Suhosin-Patch
--snip--
+ OSVDB-40478: /tikiwiki/tiki-graph_formula.php?w=1&h=1&s=1&min=1&max=2&f[]=x.tan.phpinfo()&t=png&title=http://cirt.net/rfiinc.txt?: TikiWiki contains a vulnerability which allows remote attackers to execute arbitrary PHP code.
+ 6474 items checked: 2 error(s) and 7 item(s) reported on remote host
+ End Time: 2015-12-28 21:32:41 (GMT-5) (63 seconds)
```

- **TikiWiki Vulnerability:** Nikto identified a vulnerable installation of TikiWiki, which has a known code execution vulnerability (OSVDB-40478).

#### Attacking XAMPP

Browsing to the Windows XP web server, we see that the default web page announces itself as XAMPP 1.7.2. By default, XAMPP installations include phpMyAdmin, which is accessible without credentials. This allows us to bypass restrictions and perform MySQL queries on the server.

- **Default Credentials:** XAMPP 1.7.3 and earlier come with WebDAV software, which has default credentials (`xampp:xampp`). If these values aren’t changed, anyone with access to WebDAV can log in, deface the website, and even potentially escalate privileges.