nately, 36 of the videos were no longer available at the time of our
experiment.
USENIX Association  
22nd USENIX Security Symposium  675
5
676  22nd USENIX Security Symposium 
USENIX Association
123456789Target video rankPromotion rate0.00.10.20.30.40.50.6(a)Higherrankedvideo12345678911Target video rankPromotion rate0.00.10.20.30.40.50.6(b)LowerrankedvideoFigure4:Distributionofthesuggestionslotsoccupiedbyeachofthetwosuccessfullypromotedtargetvideos.wewereviewingthesamevideousingthesamevictimYouTubeaccount.Inotherwords,everytargetvideohasachancetobepromotedandshownonthesuggestionvideolistnomatterwhichvideoavictimplays.Fig-ure3showsthefrequencywithwhicheachofthe25tar-getvideosforarepresentativechannel,lady16makeup.Inanattempttoexplainthisvariation,wecomputed(1)thePearsoncorrelationbetweentheshowingfrequenciesandthelengthsofthetargetvideosforeachchannel(ρt);(2)thePearsoncorrelationbetweentheshowingfrequen-ciesandtheviewcountsofthesetargetvideosforeachchannel(ρcnt).WefoundtheaveragePearsoncorrela-tionvaluesaremedium(ρt=0.54)andmoderate(ρcnt=0.23),respectively.Thissuggeststhatboththelengthandviewcountofatargetvideoinﬂuenceitsrecommenda-tionfrequency,butthelengthofatargetvideoisamoresigniﬁcantfactor.Sincescreenrealestateisprecious,anduserstypicallyfocusontheﬁrstfewitemsofalist,wereportonthepo-sitionwithinthesuggestedvideoliststhatourtargetedvideosoccupiedwhentheywerepromoted.Weobservedthatthetwotargetvideoswereusuallyplacedback-to-backonthesuggestionlist.Figure4showsthatYouTubeusuallyplacedourtargetvideosamongthetopfewspotsofavictim’ssuggestionlist:inourtestswithnewac-counts,thetargetvideoswerealwaysrecommendedandplacedonthetop12,whichmeanttheyalsoappearedattheendofviewedvideos.Thisﬁndingisparticu-larlysigniﬁcantbecauseitimpliesthatourtargetvideosareshownevenifavictimﬁnisheswatchingaYouTubevideoonathird-partywebsite(whichtypicallyembedsonlytheview-screenportionoftheYouTubepage,andnotthefullsuggestionlist).Ourattacksweresimilarlycompletelysuccessfulinpromotingnewlyuploadedcontent.Asacontrol,wealsosignedinasnon-pollutedfreshYouTubeaccountsand,unsurprisingly,didnotﬁndanyofournewcon-tentamongthevideosinthesuggestionlist.Inotherwords,thevideoswererecommendedexclusivelybe-causeofourattacks;ourexperimentsweresufﬁcientlyFigure5:Suggestionlistsbefore(left)andafter(right)apollutionattackagainstafreshYouTubeuseraccount.Thevideohighlightedinredisouruploadedvideo.200500100020005000100000.20.40.60.81.0Watch historyPromotion rateFigure6:Promotionsuccessratesfor10realYouTubeuseraccountswithvaryingwatchhistorylengths.smallthatwedidnotleadYouTubetoconcludethatourcontentwas,infact,universallypopular.Figure5showsasamplescreenshotcomparingthesuggestionlistsfromavictimaccountandanother,non-exploitedfreshac-count.Finally,wefoundthatoneofourtargetvideosoccupiedthetopsuggestionslotwhileviewing80outofthe114testvideos.3.5.2ExistingAccountsOurattacksweresomewhatlesssuccessfulonrealYouTubeaccounts.Wefoundthat14outofthe22volun-teerYouTubeusersreportedthatatleastoneofourtar-getvideosfromchannelOnlyyouHappycampappearedinthesuggestionlistduringeachoftheirthreevideoviewings,a64%promotionrate.Tounderstandwhywewereabletoexploitsomeac-countsandnotothers,weaskedourvolunteerstosharetheirYouTubewatchhistories.Tenofourvolunteerssharedtheirhistorieswithusandallowedustosigninto6their YouTube accounts to conduct a further study. The
number of videos in the watch histories of the ten vol-
unteers ranged from a few hundred to tens of thousands.
Figure 6 shows the relationship between the number of
watched videos in a watch history and the number of
times that at least one of our target videos is displayed
along with a playing video. While there appears to be an
intuitive decreasing trend (i.e., the longer the history an
account has the more resistant it is to pollution), there are
obvious outliers. For example, one account with almost
3,500 previous viewings in its history succumbed to our
attacks almost 80% of the time.
Consistent with the Pearson coefﬁcients reported ear-
lier, we found that the success of our attacks depends on
the rankings and lengths of the videos that are otherwise
suggested based upon a user’s history. In particular, we
observed that the majority of the videos recommended
to users for whom our attacks have low promotion rates
have longer lengths and more view counts than our tar-
get videos, while the videos that YouTube recommends
based on the watch history of the user with 3,500 previ-
ous viewings have shorter lengths than our target videos
(though they generally have higher view counts than our
targets).
Although we believe our attack demonstrates that
YouTube’s personalization mechanism is subject to ex-
ploit, the persistence of the attack effects is unclear. In
our experiments, volunteers watched arbitrary YouTube
videos right after being attacked, but we believe our pol-
lution attacks on YouTube are likely to last for some
time. Although YouTube does not explicitly disclose
how time factors into their recommendation system (if
at all) [5], analysis of volunteers’ watch histories indi-
cates that a YouTube video that was watched as long as
two weeks prior is still used for generating recommended
videos.
4 Google Personalized Search
In this section, we show how history pollution attacks
can be launched against Google’s search engine4. The
goal of our attack is to promote a target webpage’s rank
in the personalized results that Google returns for an ar-
bitrary search term by injecting seed search terms into a
victim’s search history.
4.1 Search Personalization
Search personalization customizes search results using
information about users, including their previous query
terms, click-through data and previously visited web-
sites. The details of Google’s personalization algorithms
4A demo video is available at http://www.youtube.com/
watch?v=73E5CLFYeu8.
are not public, but many previous studies have explored
aspects of personalized search [2,4,6,7,9,10,14–18]. We
describe two classes of personalization algorithms: con-
textual personalization and persistent personalization.
According to recent reports [11,12], many search engines
including Google, Bing, and Yahoo! apply both types of
personalization.
Contextual personalization constructs a short-term
user proﬁle based on recent searches and clicks-
through [4, 16]. When a user searches for “inexpen-
sive furniture” followed by “maternity clothes,” Google’s
contextual personalization algorithm typically promotes
search results that relate to “inexpensive maternity
clothes” for the next few searches (we provide an anal-
ysis of precisely how long this effect
lasts in Ap-
pendix A.2). In contrast, persistent personalization uses
the entire search history—as opposed to only recent
searches—to develop a user proﬁle [9, 15]. Personaliza-
tion that occurs over the longer term may not affect a
user’s search results as dramatically, but can have longer-
lasting effects for the results that a user sees. For exam-
ple, searching for “Egypt” using different accounts may
result in two distinct result sets: one about tourism in
Egypt and one related to the Arab Spring.
Identifying Search Terms
4.2
Given the differing underlying algorithms that govern
contextual and persistent personalization, an attacker
needs to select different sets of seed search terms depend-
ing on the type of attack she hopes to launch.
Contextual Personalization. For the contextual per-
sonalization attack, the keywords injected into a user’s
search history should be both relevant to the promot-
ing keyword and unique to the website being promoted.
In particular, the keywords should be independent from
other websites that have similar ranking in the search re-
sults, to ensure that only the target website is promoted.
Presumably, an attacker promoting a speciﬁc website is
familiar with the website and knows what keywords best
meet these criteria, but good candidate keywords are also
available in a website’s meta keyword tag. While Google
no longer incorporates meta tags into their ranking func-
tion [3], the keywords listed in the meta keyword tag still
provide a good summary of the page’s content.
Persistent Personalization. Launching a persistent
personalization attack requires a different method of ob-
taining keywords to inject. In this case, the size of the
keyword set should be larger than that used for a contex-
tual attack in order to have a greater effect on the user’s
search history. Recall that contextual attacks only affect
a user’s current session, while persistent attacks pollute
USENIX Association  
22nd USENIX Security Symposium  677
7
a user’s search history in order to have a lasting effect on
the user’s search results. An attacker can determine suit-
able keywords using the Google AdWords tool, which
takes as an input a search term and URL and produces a
list of about one hundred related keywords. Ideally, an
attacker could pollute a user’s search history with each
of these terms, but a more efﬁcient attack should be ef-
fective with a much smaller set of keywords. We deter-
mined that an attacker can safely inject roughly 50 key-
words a minute using cross-site request forgery; more
rapid search queries are ﬂagged by Google as a screen-
scraping attack. For this study, we assume an attacker
can inject at most 25 keywords into a user’s proﬁle, but
the number of keywords can increase if the user stays on
a webpage for more than 30 seconds. Not all keyword
lists that AdWords returns actually promote the target
website. The effectiveness of this attack likely depends
on several factors, including the user’s current search his-
tory. In Section 4.5, we evaluate the effectiveness of this
attack under different conditions.
Injecting Search Terms
4.3
As with the pollution attacks on YouTube, the attack on
Google’s personalized search also uses XSRF to inject
the seeds. For example, an attacker can forge a Google
search by embedding https://www.google.com/
search?hl=en&site=&q=usenix+security+2013
into an invisible iframe. A Web browser will issue
an embedded HTTP request, even if Google search
response has an enabled X-Frame-Option header.
Injecting search terms into a Google user’s account
affects the search results of
the user’s subsequent
searches. The number and set of search terms to inject
differs depending on whether an attacker can execute a
contextual or persistent personalization attack.
4.4 Experimental Design
To cleanly study the effects of our proposed attacks on
contextual and persistent search personalization, we con-
ducted most of our experiments using Google accounts
with no search history. To validate whether our results
apply to real users, we also conducted a limited number
of tests using accounts that we constructed to mimic the
personae of real users.
To quantify the effectiveness of our attack in general,
we must select an unbiased set of target web pages whose
rankings we wish to improve. We built two test corpora,
one for attacks on contextual personalization, and one for
attacks on persistent personalization. We attempted to
promote existing web sites using only their current con-
tent and link structure; we did not perform any SEO on
websites before conducting the attacks. We believe this
represents a conservative lower bound on the effective-
ness of the attack, as any individual website owner could
engineer the content of their site to tailor it for promotion
through search history pollution.
4.4.1 Contextual Pollution
We started by scraping 5,671 shopping-related keywords
from made-in-china.com to use as search terms. We
then entered each of these terms into Google one-by-one
to obtain the top 30 (un-personalized) search results for
each. Since some of our search terms are related, not all
of these URLs are unique. Additionally, we cannot hope
to improve the URLs that are already top-ranked for each
of the search terms. We obtained 151,363 URLs whose
ranking we could hope to improve.
Because we cannot manually inspect each of these
websites to determine appropriate seed search terms, we
instead focused a subset that include the meta keyword
tag. For the approximately 90,000 such sites, we ex-
tracted the meta keywords or phrases from the website.
Many of these keywords are generic and will appear in
a wide variety of websites. To launch the attack, we re-
quire keywords that are unique to the website we wish to
promote (at least relative to the other URLs returned in
response to the same query), so we ignored any keywords
that were associated with multiple URLs in the same set
of search results.
This procedure ultimately yielded 2,136 target URLs
spanning 1,739 different search terms, for which we had
a set of 1–3 seed keywords to try to launch a contextual
pollution attack. The average search term has 1.23 results
whose ranking we tried to improve. Figure 11 in the Ap-
pendix shows the distribution of the original rankings for
each of these target websites; the distribution is skewed
toward highly ranked sites, perhaps because these sites
take care in selecting their meta tag keywords.
4.4.2 Persistent Pollution
Once again, we begin by selecting 551 shopping-related
search terms and perform Google searches with each of
the search terms to retrieve the top 30 search results. As
opposed to the contextual attack, where we search for
keywords that differentiate the results from one another,
we aim to determine search terms that will be associated
with the website and search-term pair for the long term.
As described in Section 4.2, we use a tool provided by
Google AdWords to obtain a set of keywords that Google
associates with the given URL and search term. Con-
structing related keyword lists for each of the 29 search
returns (again excluding the top hit, which we cannot
hope to improve) and 551 search terms yields 15,979 dis-
tinct URLs with associated lists of keywords.
678  22nd USENIX Security Symposium 
USENIX Association
8
For each URL, we select 25 random keywords from
the AdWords list for 25 distinct trials. If a trial improved
a URL’s ranking, we then test the persistence of the at-
tack by performing 20 subsequent queries, each with
a randomly chosen set of Google trending keywords.
These subsequent queries help us verify that the URL
promotion is not just contextual, but does not vanish
when a user searches other content. If after all 25 trials
we ﬁnd no keyword sets that promote the URL’s ranking
and keep it there for 20 subsequent searchers, we deem
this URL attempt a failure. If multiple keyword sets suc-
ceed, we select the most effective (i.e., the set of 25 key-
words that induces the largest ranking improvement) trial
to include in the test set.
4.5 Evaluation
In this section, we quantify the effectiveness of search
history pollution with attacks that aimed to promote the
target websites identiﬁed in the previous section. To
scope our measurements, we consider the effectiveness
of the attacks only for the set of search terms that we
identify; it is quite possible, of course, that our pollution
attacks also affect the rankings of the targeted URLs for
other search terms.
When measuring the effectiveness of our attack, we
use two different criteria, depending upon a website’s
original position in the search results.
In the case of
URLs that are already in the ﬁrst ten search results but
not ranked ﬁrst, we consider the pollution attack success-
ful if it increases the ranking of a URL at all. For URLs
subsequent pages, we consider the attack successful only
if the attack moves the URL to the ﬁrst page of search
results, since improved ranking on any page that is not
the ﬁrst page is unlikely to have any utility.
4.5.1 Top-Ranked Sites
For the 2,136-page contextual attack test corpus, of the
846 pages that appeared on the front page prior to our
attack, we improved the ranking of 371 (44%). The per-
sistent attack was markedly less effective, with only 851
(17%) of the 4,959 test cases that originally appeared
on the ﬁrst page of the search results had ranking im-
provements surviving the persistence test (i.e., they re-
mained promoted after 20 random subsequent queries).
In both cases, however, the probability of success de-
pends greatly on the original ranking of the targeted
URL. For example, promoting a second-ranked URL
to the top-ranked position for contextual personalization
succeeded 1.1% of the time, whereas promoting a tenth-
ranked URL by at least one position succeeded 62.8%
of the time. Similarly, for attacks on persistent person-
alization, moving a second-ranked URL to the top suc-
ceeded 4.3% of the time, and moving a tenth-ranked
URL to a higher-ranked position succeeded 22.7% of the
time. These results make sense, because second-ranked
sites can only move into the top-ranked position, whereas
sites that are ranked tenth can move into any one of nine
higher spots.
To illustrate this effect and illuminate how far each
webpage was promoted, Figure 7 shows the PDF of an
improved webpage’s rank after contextual history pol-
lution, based upon its position in the non-personalized
search results. We observed that contextual pollution was
able to promote most webpages by one or two spots, but
some low-ranking webpages were also promoted to very
high ranks. Similarly, Figure 8 shows the distributions
for each result ranking for those websites whose rankings
were improved by a persistent history pollution attack.
Here, the distributions appear roughly similar (although
the absolute probability of success is much lower), but
it is difﬁcult to draw any strong conclusions due to the
small number of promoted sites of each rank for either
class of attack.
4.5.2 The Next Tier
The remaining 1,290 test websites for the contextual at-
tack were initially on the second or third page of search
results. By polluting a user’s search history with the
unique meta tag keywords associated with each site, we
promoted 358 of them (28%) to the front page. Fig-
ure 7(j) shows that these websites were more likely to
appear at the top of the results than those pages that were
initially at the bottom of the ﬁrst page. We suspect this
phenomenon results from the choice of keywords used
in pollution: because their original rankings were low,
the pollution attack requires a distinguishing keyword to
move one of the webpages to the front page at all.
If
such a keyword can move a search result to the ﬁrst page,
it might also be a good enough keyword to promote the
page to a high rank on the ﬁrst page, as well.
The results from the persistent test set are markedly
different. Figure 8(j) shows that sites starting on the sec-
ond or third page are unlikely to end up at the very top
of the result list due to a persistent history attack: Only
80 (less than 1%) of the 11,020 attacks that attempted
to promote a website appearing on the 2nd or 3rd page
of results was successful in moving it to the front page
(and keeping it there). This results shows that persis-
tent search history attacks are generally best launched for
sites that are already highly ranked, as opposed to con-
textual attacks, which can help even lower-ranked sites.
USENIX Association  
22nd USENIX Security Symposium  679
9
e
t
a
r
n
o
i
t
o
m
o
r
P
6
.
0
4
.
0
2
.
0
0
.
0
1
7
5
3
9
Personalized rank
e
t
a
r
n
o
i
t
o
m
o
r
P
6
.
0
4
.
0
2
.
0
0
.
0
1
7
5
3
9
Personalized rank
e
t
a
r
n
o
i
t
o
m
o
r
P
6
.
0
4
.
0
2
.
0
0
.
0
1
7
5
3
9
Personalized rank
e
t
a
r
n
o
i
t
o
m
o
r
P
6
.
0
4
.
0
2