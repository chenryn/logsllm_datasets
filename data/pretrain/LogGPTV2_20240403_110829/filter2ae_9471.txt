### 影响范围
DedeCMS v5.8.1 beta 1
### 漏洞类型
SSTI RCE
### 利用条件
影响范围应用
### 漏洞概述
2021年9月30日，国外安全研究人员Steven
Seeley披露了最新的DedeCMS版本中存在的一处SQL注入漏洞以及一处SSTI导致的RCE漏洞，由于SQL注入漏洞利用条件极为苛刻，故这里只对该SSTI注入漏洞进行简要分析复现
### 漏洞复现
#### 环境搭建
这里使用phpstudy来搭建环境  
网站前台：  
网站后台： ...  
#### 漏洞利用
    GET /plus/flink.php?dopost=save HTTP/1.1
    Host: 192.168.59.1
    Referer: \r\n\r\nDedeCMS提示信息\r\n
        " . (isset($GLOBALS['ucsynlogin']) ? $GLOBALS['ucsynlogin'] : '') . "
            DedeCMS 提示信息！
        \r\n\r\n";
        $litime = ($limittime == 0 ? 1000 : $limittime);
        $func = '';
        if ($gourl == '-1') {
            if ($limittime == 0) {
                $litime = 3000;
            }
            $gourl = "javascript:history.go(-1);";
        }
        if ($gourl == '' || $onlymsg == 1) {
            $msg = "";
        } else {
            //当网址为:close::objname 时, 关闭父框架的id=objname元素
            if (preg_match('/close::/', $gourl)) {
                $tgobj = trim(preg_replace('/close::/', '', $gourl));
                $gourl = 'javascript:;';
                $func .= "window.parent.document.getElementById('{$tgobj}').style.display='none';\r\n";
            }
            $func .= "var pgo=0;
          function JumpUrl(){
            if(pgo==0){ location='$gourl'; pgo=1; }
          }\r\n";
            $rmsg = $func;
            $rmsg .= "document.write(\"\");\r\n";
            $rmsg .= "document.write(\"" . str_replace("\"", "“", $msg) . "\");\r\n";
            $rmsg .= "document.write(\"";
            if ($onlymsg == 0) {
                if ($gourl != 'javascript:;' && $gourl != '') {
                    $rmsg .= "如果你的浏览器没反应，请点击这里...";
                    $rmsg .= "\");\r\n";
                    $rmsg .= "setTimeout('JumpUrl()',$litime);";
                } else {
                    $rmsg .= "\");\r\n";
                }
            } else {
                $rmsg .= "\");\r\n";
            }
            $msg = $htmlhead . $rmsg . $htmlfoot;
        }
        $tpl = new DedeTemplate();
        $tpl->LoadString($msg);
        $tpl->Display();
    }
在这里我们可以看到如果$gourl被设置为-1(间接可控)，则攻击者可以通过HTTP_REFERER控制$gourl处变量的值，而该变量未经过滤直接赋值给变量$gourl，之后经过一系列的操作之后将$gourl与html代码拼接处理后转而调用$tpl->LoadString进行页面渲染操作，之后跟进LoadString可以看到此处的sourceString变量直接由$str赋值过来，该变量攻击者可控，之后将其进行一次md5计算，然后设置缓存文件和缓存配置文件名，缓存文件位于data\tplcache目录，之后调用ParserTemplate对文件进行解析：  
ParserTemplate如下：
    /**
         *  解析模板
         *
         * @access public
         * @return void
         */
        public function ParseTemplate()
        {
            if ($this->makeLoop > 5) {
                return;
            }
            $this->count = -1;
            $this->cTags = array();
            $this->isParse = true;
            $sPos = 0;
            $ePos = 0;
            $tagStartWord = $this->tagStartWord;
            $fullTagEndWord = $this->fullTagEndWord;
            $sTagEndWord = $this->sTagEndWord;
            $tagEndWord = $this->tagEndWord;
            $startWordLen = strlen($tagStartWord);
            $sourceLen = strlen($this->sourceString);
            if ($sourceLen CharToLow = true;
            //遍历模板字符串，请取标记及其属性信息
            $t = 0;
            $preTag = '';
            $tswLen = strlen($tagStartWord);
            @$cAtt->cAttributes->items = array();
            for ($i = 0; $i = 0) {
                    $ss = $i - 1;
                } else {
                    $ss = 0;
                }
                $tagPos = strpos($this->sourceString, $tagStartWord, $ss);
                //判断后面是否还有模板标记
                if ($tagPos == 0 && ($sourceLen - $i sourceString, $i, $tswLen) != $tagStartWord)
                ) {
                    $tagPos = -1;
                    break;
                }
                //获取TAG基本信息
                for ($j = $tagPos + $startWordLen; $j tagMaxLen; $j++) {
                    if (preg_match("/[ >\/\r\n\t\}\.]/", $this->sourceString[$j])) {
                        break;
                    } else {
                        $ttagName .= $this->sourceString[$j];
                    }
                }
                if ($ttagName != '') {
                    $i = $tagPos + $startWordLen;
                    $endPos = -1;
                    //判断  '/}' '{tag:下一标记开始' '{/tag:标记结束' 谁最靠近
                    $fullTagEndWordThis = $fullTagEndWord . $ttagName . $tagEndWord;
                    $e1 = strpos($this->sourceString, $sTagEndWord, $i);
                    $e2 = strpos($this->sourceString, $tagStartWord, $i);
                    $e3 = strpos($this->sourceString, $fullTagEndWordThis, $i);
                    $e1 = trim($e1);
                    $e2 = trim($e2);
                    $e3 = trim($e3);
                    $e1 = ($e1 == '' ? '-1' : $e1);
                    $e2 = ($e2 == '' ? '-1' : $e2);
                    $e3 = ($e3 == '' ? '-1' : $e3);
                    if ($e3 == -1) {
                        //不存在'{/tag:标记'
                        $endPos = $e1;
                        $elen = $endPos + strlen($sTagEndWord);
                    } else if ($e1 == -1) {
                        //不存在 '/}'
                        $endPos = $e3;
                        $elen = $endPos + strlen($fullTagEndWordThis);
                    }
                    //同时存在 '/}' 和 '{/tag:标记'
                    else {
                        //如果 '/}' 比 '{tag:'、'{/tag:标记' 都要靠近，则认为结束标志是 '/}'，否则结束标志为 '{/tag:标记'
                        if ($e1 \r\n";
                        break;
                    }
                    $i = $elen;
                    //分析所找到的标记位置等信息
                    $attStr = '';
                    $innerText = '';
                    $startInner = 0;
                    for ($j = $tagPos + $startWordLen; $j sourceString[$j] == $tagEndWord) {
                                $startInner = 1;
                                continue;
                            } else {
                                $attStr .= $this->sourceString[$j];
                            }
                        } else {
                            $innerText .= $this->sourceString[$j];
                        }
                    }
                    $ttagName = strtolower($ttagName);
                    //if、php标记，把整个属性串视为属性
                    if (preg_match("/^if[0-9]{0,}$/", $ttagName)) {
                        $cAtt->cAttributes = new TagAttribute();
                        $cAtt->cAttributes->count = 2;
                        $cAtt->cAttributes->items['tagname'] = $ttagName;
                        $cAtt->cAttributes->items['condition'] = preg_replace("/^if[0-9]{0,}[\r\n\t ]/", "", $attStr);
                        $innerText = preg_replace("/\{else\}/i", '', $innerText);
                    } else if ($ttagName == 'php') {
                        $cAtt->cAttributes = new TagAttribute();
                        $cAtt->cAttributes->count = 2;
                        $cAtt->cAttributes->items['tagname'] = $ttagName;
                        $cAtt->cAttributes->items['code'] = '';
                    } else {
                        //普通标记，解释属性
                        $cAtt->SetSource($attStr);
                    }
                    $this->count++;
                    $cTag = new Tag();
                    $cTag->tagName = $ttagName;
                    $cTag->startPos = $tagPos;
                    $cTag->endPos = $i;
                    $cTag->cAtt = $cAtt->cAttributes;
                    $cTag->isCompiler = false;
                    $cTag->tagID = $this->count;
                    $cTag->innerText = $innerText;
                    $this->cTags[$this->count] = $cTag;
                } else {
                    $i = $tagPos + $startWordLen;
                    break;
                }
            } //结束遍历模板字符串
            if ($this->count > -1 && $this->isCompiler) {
                $this->CompilerAll();
            }
        }
之后返回上一级，在这里会紧接着调用Display函数对解析结果进行展示，在这里会调用WriteCache函数  
在WriteCache函数中写入缓存文件：  
在这里使用GetResult返回值sourceString来设置$result变量，该变量包含攻击者控制的输入数据：  
之后调用CheckDisabledFunctions函数进行检查操作，该函数主要用于检查是否存在被禁止的函数，然后通过token_get_all_nl函数获取输入，然而处理时并没有过滤双引号，存在被绕过的风险，攻击者可以通过将恶意PHP写到临时文件，之后在Display函数处通过include
$tpl->CacheFile()将恶意临时文件包含进来从而实现远程代码执行：  
### 安全建议
目前官方已发布最新版本:DedeCMS V5.7.80 UTF-8正式版，建议升级到该版本