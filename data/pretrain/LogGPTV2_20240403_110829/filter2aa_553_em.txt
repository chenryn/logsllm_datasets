g = 1.0e5;
tax = rate*g;
h = g + tax;
printf("You owe $%f plus $%f in taxes for a total of $%f.\n", g, tax, h);
return 0;
}
6.
1456
7.
8.printf("The odds against the %d were %ld to 1.\n", imate, shot);printf("A
score of %f is not an %c grade.\n", log, grade);
9.ch = '\r';
ch = 13;
ch = '\015'
ch = '\xd'
10.最前面缺少一行（第0行）：#include 
第1行：使用/*和*/把注释括起来，或者在注释前面使用//。
第3行：int cows, legs;
第4行：country？\n");
1457
第5行：把%c改为%d，把legs改为&legs。
第7行：把%f改为%d。
另外，在程序末尾还要加上return语句。
下面是修改后的版本：
#include 
int main(void) /* this program is perfect */
{
int cows, legs;
printf("How many cow legs did you count?\n");
scanf("%d", &legs);
cows = legs / 4;
printf("That implies there are %d cows.\n", cows);
return 0;
}
11.a.换行字符
b.反斜杠字符
c.双引号字符
d.制表字符
A.4 第4章复习题答案
1458
1.程序不能正常运行。第1 个scanf()语句只读取用户输入的名，而用户
输入的姓仍留在输入缓冲区中（缓冲区是用于储存输入的临时存储区）。下
一条scang()语句在输入缓冲区查找重量时，从上次读入结束的地方开始读
取。这样就把留在缓冲区的姓作为体重来读取，导致 scanf()读取失败。另一
方面，如果在要求输入姓名时输入Lasha 144，那么程序会把144作为用户的
体重（虽然用户是在程序提示输入体重之前输入了144）。
2.a.He sold the painting for $234.50.
b.Hi!（注意，第1个字符是字符常量；第2个字符由十进制整数转换而
来；第3个字符是八进制字符常量的ASCII表示）
c.His Hamlet was funny without being vulgar.has 42 characters.
d.Is 1.20e+003 the same as 1201.00?
3.在这条语句中使用\"：printf("\"%s\"\nhas %d characters.\n", Q, strlen(Q));
4.下面是修改后的程序：
#include    /* 别忘了要包含合适的头文件 */
#define B "booboo"   /* 添加#、双引号 */
#define X 10     /* 添加# */
int main(void)    /* 不是main(int) */
{
int age;
int xp;      /* 声明所有的变量 */
char name[40];   /* 把name声明为数组 */
1459
printf("Please enter your first name.\n"); /* 添加\n，提高可读性 */
scanf("%s", name);
printf("All right, %s, what's your age?\n", name); /* %s用于打印字符串*/
scanf("%d", &age); /* 把%f改成%d，把age改成&age */
xp = age + X;
printf("That's a %s! You must be at least %d.\n", B, xp);
return 0; /* 不是rerun */
}
5.记住，要打印%必须用%%：
printf("This copy of \"%s\" sells for $%0.2f.\n", BOOK, cost);
printf("That is %0.0f%% of list.\n", percent);
6.a.%d
b.%4X
c.%10.3f
d.%12.2e
e.%-30s
7.a.%15lu
b.%#4x
c.%-12.2E
1460
d.%+10.3f
e.%8.8s
8.a.%6.4d
b.%*o
c.%2c
d.%+0.2f
e.%-7.5s
9.a.int dalmations;
scanf("%d", &dalmations);
b.float kgs, share;
scanf("%f%f", &kgs, &share);
（注意：对于本题的输入，可以使用转换字符e、f和g。另外，除了%c
之外，在%和转换字符之间加空格不会影响最终的结果）
c.char pasta[20];
scanf("%s", pasta);
d.char action[20];
int value;
scanf("%s %d", action, &value);
e.int value;
1461
scanf("%*s %d", &value);
10.空白包括空格、制表符和换行符。C 语言使用空白分隔记号。scanf()
使用空白分隔连续的输入项。
11.%z 中的 z 是修饰符，不是转换字符，所以要在修饰符后面加上一个
它修饰的转换字符。可以使用%zd打印十进制数，或用不同的说明符打印不
同进制的数，例如，%zx打印十六进制的数。
12.可以分别把(和)替换成{和}。但是预处理器无法区分哪些圆括号应替
换成花括号，哪些圆括号不能替换成花括号。因此，
#define ( {
#define ) }
int main(void)
(
printf("Hello, O Great One!\n");
)
将变成：
int main{void}
{
printf{"Hello, O Great One!\n"};
}
A.5 第5章复习题答案
1462
1.a.30
b.27（不是3）。(12+6)/(2*3)得3。
c.x = 1，y = 1（整数除法）。
d.x = 3（整数除法），y = 9。
2.a.6（由3 + 3.3截断而来）
b.52
c.0（0 * 22.0的结果）
d.13（66.0 / 5或13.2，然后把结果赋给int类型变量）
3.a.37.5（7.5 * 5.0的结果）
b.1.5（30.0 / 20.0的结果）
c.35（7 * 5的结果）
d.37（150 / 4的结果）
e.37.5（7.5 * 5的结果）
f.35.0（7 * 5.0的结果）
4.第0行：应增加一行#include 。
第3行：末尾用分号，而不是逗号。
第6行：while语句创建了一个无限循环。因为i的值始终为1，所以它总
是小于30。推测一下，应该是想写while(i++ 
int main(void)
{
int i = 1;
float n;
printf("Watch out! Here come a bunch of fractions!\n");
while (i++  0 ) {
min = sec/S_TO_M;
left = sec % S_TO_M;
printf("%d sec is %d min, %d sec.\n", sec, min, left);
printf("Next input?\n");
scanf("%d", &sec);
}
while循环第一轮迭代使用的是scanf()在循环外面获取的值。因此，在
while循环的末尾还要使用一次scanf()语句。这是处理类似问题的常用方法。
6.下面是该程序的输出：
%s! C is cool!
! C is cool!
11
1465
11
12
11
解释一下。第1个printf()语句与下面的语句相同：
printf("%s! C is cool!\n","%s! C is cool!\n");
第2个printf()语句首先把num递增为11，然后打印该值。第3个printf()语
句打印num的值（值为11）。第 4个printf()语句打印n当前的值（仍为12），
然后将其递减为11。最后一个printf()语句打印num的当前值（值为11）。
7.下面是该程序的输出：
SOS:4 4.00
表达式c1 -c2的值和'S' - '0'的值相同（其对应的ASCII值是83 - 79）。
8.把1～10打印在一行，每个数字占5列宽度，然后开始新的一行：
1 2 3 4 5 6 7 8 9 10
9.下面是一个参考程序，假定字母连续编码，与ASCII中的情况一样。
#include 
int main(void)
{
char ch = 'a';
while (ch  5
b.scanf("%lf",&x) != 1
c.x == 5
4.a.scanf("%d", &x) == 1
b.x != 5
c.x >= 20
5.第4行：应该是list[10]。
1468
第6行：逗号改为分号。i的范围应该是0～9，不是1～10。
第9行：逗号改为分号。>=改成<=，否则，当i等于1时，该循环将成为
无限循环。