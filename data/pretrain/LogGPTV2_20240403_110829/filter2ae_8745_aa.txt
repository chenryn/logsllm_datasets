原文：
在渗透测试过程中，我们经常会遇到针对直接连接到SQL Server数据库的两层桌面应用程序的测试。此外，有时候我们也会遇到SQL
Server后端，它们只允许来自预定义主机名或应用程序清单中的连接。一般情况下，这些类型的限制是通过登录触发器来强制执行的。在本文中，我们将为读者演示如何通过某些鲜为人知的连接字符串属性伪造主机名和应用程序名，从而绕过这些白名单限制。在我们的示例中，包括SSMS和PowerUpSQL。本文介绍的技术，对应用程序渗透测试人员和跟遗留的桌面应用程序打交道的开发人员来说，都将非常有用。
**什么是登录触发器？**
* * *
[登录触发器](https://docs.microsoft.com/en-us/sql/relational-databases/triggers/logon-triggers?view=sql-server-2017
"登录触发器")本质上是一个存储过程，该过程的执行时机是在通过SQL
Server身份验证之后，登录会话完全建立之前。它们通常用于根据日内时间、主机名、应用程序名称以及单个用户的并发会话数，以编程方式限制对SQL
Server的访问。
**安装SQL Server**
* * *
如果您还没有安装SQL Server，可以安装下面的步骤完成安装。
  1. 从[这里](https://www.microsoft.com/en-us/sql-server/sql-server-editions-express "这里")下载并安装SQL Server。
  2. 从[这里](https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-2017 "这里")下载并安装SQL Server Management Studio Express（SSMS）。
**创建限制主机名的登录触发器**
* * *
下面介绍如何对家庭实验室中的触发器进行配置，该触发器是根据连接的工作站名称来限制访问权限的。
  1. 使用SSMS以sysadmin身份登录到新的SQL Server实例。
  2. 首先，让我们使用下面的命令查看连接到SQL Server实例的工作站的名称。默认情况下，它应该使用连接到SQL Server实例的工作站的主机名。 
    SELECT HOST_NAME()
  1. 创建一个登录触发器来限制对特定主机名的访问。然后，严格按照如下所示方法执行该触发器。
        -- Create our logon trigger
     CREATE TRIGGER MyHostsOnly
     ON ALL SERVER
     FOR LOGON
     AS
     BEGIN
         IF
         (
             -- White list of allowed hostnames are defined here.
             HOST_NAME() NOT IN ('ProdBox','QaBox','DevBox','UserBox')
         )
         BEGIN
             RAISERROR('You are not allowed to login', 16, 1);
             ROLLBACK;
         END 
     END
  1. 设置登录触发器后，当您再次使用SSMS登录时，您应该会收到类似下面的错误信息，因为用于连接的主机名没有出现在白名单中。
**利用SSMS伪造主机名**
* * *
现在，读者可能会问，“在现实世界中，我什么时候才会用到它呢？”——通常是我们从配置文件或反编译的代码中获取连接字符串，并希望使用该信息直接连接到SQL
Server的时候。在应用程序渗透测试过程中，这是一种非常常见的情况，同时，我们在网络渗透测试和跟红队对抗期间，在打开的文件共享中也会发现一些内部应用程序和配置文件，这些你懂的。
好的，让我们利用SSMS对我们的主机名进行伪装。
  1. 在SSMS中打开“Connect Object Explorer”并导航到“Additional Connection Parameters”选项。我们可以在这里即时设置连接字符串属性（超酷）。 对于这个例子来说，我们将“Workstation ID”属性设置为“DevBox”，它是白名单中的一个主机名。注意：稍后我会介绍几种识别白名单中的主机名的方法。
  1. 单击连接按钮进行登录。打开一个查询窗口并重新检查主机名，这时将会变成“DevBox”。这进一步说明我们成功欺骗了主机名检测机制。 
    SELECT HOST_NAME()
**使用连接字符串伪造主机名**
* * *
实际上，SSMS只是使用"workstation
id"属性集建立一个连接字符串。下面是一个连接字符串的例子，它会以当前Windows用户的身份连接到远程SQL
Server实例，并选择“Master”数据库。
    Data Source=server\instance1;Initial Catalog=Master;Integrated Security=True;
如果我们在上一节中展示的登录触发器已经生效的话，我们应该看到“failed to connect”消息。 但是，如果将“Workstation
ID”属性设置为白名单中的主机名，就能顺利登录。
    Data Source=server\instance1;Initial Catalog=Master;Integrated Security=True;Workstation ID = DevBox;
**使用PowerUpSQL伪造主机名**
* * *
此外，我还为PowerUpSQL的Get-SQLQuery函数添加了“WorkstationId”选项。一旦我找到更多时间，我将努力改进其他函数。现在，我们将通过一个示例演示如何绕过前一节中创建的登录触发器。
  1. 打开Powershell，并使用自己喜欢的方式加载PowerUpSQL。下面的例子显示了如何直接从GitHub加载PowerUpSQL。 
    IEX(New-Object System.Net.WebClient).DownloadString("https://raw.githubusercontent.com/NetSPI/PowerUpSQL/master/PowerUpSQL.ps1")
  1. 由于触发限制，初始连接将会失败。请注意，为了查看服务器返回的错误，需要设置“-ReturnError”标志。 
    Get-SQLQuery -Verbose -Instance MSSQLSRV04\SQLSERVER2014 -Query "SELECT host_name()" -ReturnError
  1. 现在，将workstationid选项设置为“DevBox”，这样就能够成功执行查询了。 
    Get-SQLQuery -Verbose -Instance MSSQLSRV04\SQLSERVER2014 -Query "SELECT host_name()" -WorkstationId "DevBox"
  1. 要删除该触发器，可以执行下列命令。 
    Get-SQLQuery -Verbose -Instance MSSQLSRV04\SQLSERVER2014 -WorkstationId "DevBox" -Query 'DROP TRIGGER MyHostsOnly on all server'
**创建登录触发器来限制应用程序**
* * *
以下是在家庭实验室中设置触发器的方法，该触发器根据连接的应用程序的名称来限制访问。
  1. 使用SSMS以sysadmin身份登录到新的SQL Server实例。
  2. 首先，让我们使用下面的命令查看连接到SQL Server实例的应用程序的名称。这时，它会返回“Microsoft SQL Server Management Studio – Query”。 
    SELECT APP_NAME()
  1. 创建一个登录触发器来限制对特定应用程序的访问。然后，严格按照如下所示方法执行该触发器。 
    ```sql
CREATE TRIGGER MyAppsOnly  
ON ALL SERVER  
FOR LOGON  
AS  
BEGIN  
IF  
(  
\------ Set the white list of application names here  