::: section
::: titlepage
## []{#assembly_getting-started-with-xfs-managing-file-systems.html#con_informational-messages-when-restoring-an-xfs-backup-from-a-tape-restoring-an-xfs-file-system-from-backup}从磁带恢复 XFS 备份时的信息信息 {.title}
:::
当使用多个文件系统备份从磁带中恢复备份时，`xfsrestore`{.literal}
实用程序可能会发出信息。当 `xfsrestore`{.literal}
按顺序检查磁带中的每个备份时，消息会通知您是否找到与请求的备份相匹配的内容。例如：
``` screen
xfsrestore: preparing drive
xfsrestore: examining media file 0
xfsrestore: inventory session uuid (8590224e-3c93-469c-a311-fc8f23029b2a) does not match the media header's session uuid (7eda9f86-f1e9-4dfd-b1d4-c50467912408)
xfsrestore: examining media file 1
xfsrestore: inventory session uuid (8590224e-3c93-469c-a311-fc8f23029b2a) does not match the media header's session uuid (7eda9f86-f1e9-4dfd-b1d4-c50467912408)
[...]
```
信息消息会一直显示，直到找到匹配的备份。
:::
::: section
::: titlepage
## []{#assembly_getting-started-with-xfs-managing-file-systems.html#additional-resources-restoring-an-xfs-file-system-from-backup}其它资源 {.title}
:::
::: itemizedlist
-   `xfsrestore(8)手册页`{.literal}.
:::
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-xfs-managing-file-systems.html#assembly_increasing-the-size-of-an-xfs-file-system_getting-started-with-xfs}增加 XFS 文件系统的大小 {.title}
:::
作为系统管理员，您可以增大 XFS 文件系统的大小来利用更大的存储容量。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
目前无法缩小 XFS 文件系统的大小。
:::
::: section
::: titlepage
## []{#assembly_getting-started-with-xfs-managing-file-systems.html#proc_increasing-the-size-of-an-xfs-file-system-with-xfs_growfs_assembly_increasing-the-size-of-an-xfs-file-system}使用 xfs_growfs 增加 XFS 文件系统的大小 {.title}
:::
这个步骤描述了如何使用 `xfs_growfs`{.literal} 实用程序增大 XFS
文件系统。
::: itemizedlist
**先决条件**
-   确保基础块设备的大小适当，以便以后保留调整大小的文件系统。为受影响的块设备使用适当的重新定义大小的方法。
-   挂载 XFS 文件系统。
:::
::: itemizedlist
**流程**
-   在挂载 XFS 文件系统时，使用 `xfs_growfs`{.literal} 工具增加其大小：
    ``` screen
    # xfs_growfs file-system -D new-size
    ```
    ::: itemizedlist
    -   使用 XFS 文件系统的挂载点替换
        [*[file-system]{.replaceable}*]{.emphasis}。
    -   使用 `-D`{.literal} 选项，将
        [*[new-size]{.replaceable}*]{.emphasis}
        替换为文件系统块数中指定的所需新文件系统大小。
        要找出给定 XFS 文件系统 kB 中的块大小，请使用
        `xfs_info`{.literal} 工具程序：
        ``` screen
        # xfs_info block-device
        ...
        data     =              bsize=4096
        ...
        ```
    -   如果没有 `-D`{.literal} 选项，`xfs_growfs`{.literal}
        将文件系统增大到底层设备支持的最大大小。
    :::
:::
::: itemizedlist
**其它资源**
-   `xfs_growfs(8)手册页`{.literal}.
:::
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-xfs-managing-file-systems.html#comparison-of-tools-used-with-ext4-and-xfs_getting-started-with-xfs}和 ext4 和 XFS 一起使用的工具比较 {.title}
:::
这部分比较用于完成 ext4 和 XFS 文件系统中常用任务的工具。
::: informaltable
  任务                   ext4                                  XFS
  ---------------------- ------------------------------------- -------------------------------------------------------
  创建文件系统           `mkfs.ext4`{.literal}                 `mkfs.xfs`{.literal}
  文件系统检查           `e2fsck`{.literal}                    `xfs_repair`{.literal}
  重新定义文件系统大小   `resize2fs`{.literal}                 `xfs_growfs`{.literal}
  保存文件系统的镜像     `e2image`{.literal}                   `xfs_metadump`{.literal} 和 `xfs_mdrestore`{.literal}
  标签或者调整文件系统   `tune2fs`{.literal}                   `xfs_admin`{.literal}
  备份文件系统           `转储`{.literal} `和恢复`{.literal}   `xfsdump`{.literal} 和 `xfsrestore`{.literal}
  配额管理               `quota`{.literal}                     `xfs_quota`{.literal}
  文件映射               `filefrag`{.literal}                  `xfs_bmap`{.literal}
:::
:::
:::
[]{#configuring-xfs-error-behavior_managing-file-systems.html}
::: chapter
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#configuring-xfs-error-behavior_managing-file-systems}第 12 章 配置 XFS 错误行为 {.title}
:::
您可以配置 XFS 文件系统在遇到不同的 I/O 错误时的行为方式。
::: section
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#configurable-error-handling-in-xfs_configuring-xfs-error-behavior}XFS 中的可配置错误处理 {.title}
:::
当 I/O 操作期间发生错误时，XFS 文件系统以以下方法之一响应：
::: itemizedlist
-   XFS 重复重试 I/O 操作，直到操作成功或 XFS 达到设定的限制。
    限制基于重试次数上限或重试的最长时间。
-   XFS 认为该错误持久化并停止文件系统上的操作。
:::
您可以配置 XFS 如何响应以下错误条件：
::: variablelist
[`EIO`{.literal}]{.term}
:   读取或写入时出错
[`ENOSPC`{.literal}]{.term}
:   该设备中没有剩余空间
[`ENODEV`{.literal}]{.term}
:   无法找到设备
:::
您可以设置重试的最大次数，以及 XFS
认为永久错误前的最长时间（以秒为单位）。XFS
在达到任一限制时停止重试操作。
您还可以配置 XFS，以便在卸载文件系统时，XFS
会立即取消重试，而不考虑任何其他配置。尽管存在错误，但此配置可让卸载操作成功。
::: title
**默认行为**
:::
每个 XFS
错误条件的默认行为取决于错误上下文。无论重试计数如何，`ENODEV`{.literal}
等 XFS 错误都被视为严重且不可恢复。其默认重试限制为 0。
:::
::: section
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#configuration-files-for-specific-and-undefined-xfs-error-conditions_configuring-xfs-error-behavior}特定和未定义的 XFS 错误条件的配置文件 {.title}
:::
以下目录保存用来控制不同错误条件的 XFS 错误行为的配置文件：
::: variablelist
[`/sys/fs/xfs/device/error/metadata/EIO/`{.literal}]{.term}
:   对于 `EIO`{.literal} 错误条件
[`/sys/fs/xfs/device/error/metadata/ENODEV/`{.literal}]{.term}
:   对于 `ENODEV`{.literal} 错误条件
[`/sys/fs/xfs/device/error/metadata/ENOSPC/`{.literal}]{.term}
:   对于 `ENOSPC`{.literal} 错误条件
[`/sys/fs/xfs/device/error/default/`{.literal}]{.term}
:   所有其他未定义错误条件的通用配置
:::
每个目录包括以下配置文件来配置重试限制：
::: variablelist
[`max_retries`{.literal}]{.term}
:   控制 XFS 重试操作的次数上限。
[`retry_timeout_seconds`{.literal}]{.term}
:   指定 XFS 停止重试操作后的时间限值（以秒为单位）。
:::
:::
::: section
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#setting-specific-and-undefined-xfs-error-conditions_configuring-xfs-error-behavior}为特定条件设置 XFS 行为 {.title}
:::
这个步骤配置了 XFS 如何响应特定的错误条件。
::: itemizedlist
**流程**
-   设置重试的最大重试次数、重试时间限制或两者：
    ::: itemizedlist
    -   要设置重试的最大次数，请将所需的数量写入 `max_retries`{.literal}
        文件：
        ``` screen
        # echo value > /sys/fs/xfs/device/error/metadata/condition/max_retries
        ```
    -   要设置时间限制，将所需的秒数写入
        `retry_timeout_seconds`{.literal} 文件：
        ``` screen
        # echo value > /sys/fs/xfs/device/error/metadata/condition/retry_timeout_second
        ```
    :::
    [*值*]{.emphasis} 是一个数字，介于 -1 和 C
    签名整数类型的最大可能值之间。64 位 Linux 中是 2147483647。
    在这两个限制中，值 `-1`{.literal} 都用于持续重试，`0`{.literal}
    用于立即停止。
    [*device*]{.emphasis} 是设备的名称，如 `/dev/`{.literal}
    目录中找到；例如，`sda`{.literal}.
:::
:::
::: section
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#setting-undefined-xfs-error-conditions_configuring-xfs-error-behavior}为未定义条件设置 XFS 行为 {.title}
:::
此流程配置 XFS 如何响应所有共享通用配置、且未定义的错误条件。
::: itemizedlist
**流程**
-   设置重试的最大重试次数、重试时间限制或两者：
    ::: itemizedlist
    -   要设置重试的最大次数，请将所需的数量写入 `max_retries`{.literal}
        文件：
        ``` screen
        # echo value > /sys/fs/xfs/device/error/metadata/default/max_retries
        ```
    -   要设置时间限制，将所需的秒数写入
        `retry_timeout_seconds`{.literal} 文件：
        ``` screen
        # echo value > /sys/fs/xfs/device/error/metadata/default/retry_timeout_seconds
        ```
    :::
    [*值*]{.emphasis} 是一个数字，介于 -1 和 C
    签名整数类型的最大可能值之间。64 位 Linux 中是 2147483647。
    在这两个限制中，值 `-1`{.literal} 都用于持续重试，`0`{.literal}
    用于立即停止。
    [*device*]{.emphasis} 是设备的名称，如 `/dev/`{.literal}
    目录中找到；例如，`sda`{.literal}.
:::
:::
::: section
::: titlepage
# []{#configuring-xfs-error-behavior_managing-file-systems.html#setting-the-unmount-behavior_configuring-xfs-error-behavior}设置 XFS 卸载行为 {.title}
:::
这个过程配置 XFS 在卸载文件系统时如何响应错误条件。
如果您在文件系统中设置 `fail_at_unmount`{.literal}
选项，它会在卸载过程中覆盖所有其他错误配置，并在不重试 I/O
操作的情况下立即卸载文件系统。这允许卸载操作在出现持久错误时也成功。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在卸载过程启动后，您无法更改 `fail_at_unmount`{.literal}
值，因为卸载过程会从相应文件系统的 `sysfs`{.literal}
接口中删除配置文件。您必须在文件系统开始卸载前配置卸载行为。
:::
::: itemizedlist
**流程**
-   启用或禁用 `fail_at_unmount`{.literal} 选项：
    ::: itemizedlist
    -   要在文件系统卸载时取消重试所有操作，启用这个选项：
        ``` screen
        # echo 1 > /sys/fs/xfs/device/error/fail_at_unmount
        ```
    -   要在文件系统卸载 `时遵守 max_retries`{.literal} 和
        `retry_timeout_seconds`{.literal} 重试限制，请禁用这个选项：
        ``` screen
        # echo 0 > /sys/fs/xfs/device/error/fail_at_unmount
        ```
    :::
    [*device*]{.emphasis} 是设备的名称，如 `/dev/`{.literal}
    目录中找到；例如，`sda`{.literal}.