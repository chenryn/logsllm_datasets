### Community-Based Database and Malicious Domain Detection

The community-based database contained the largest number of entries, as we collected data over several years. GSB (Google Safe Browsing) and Symantec DeepSight, which are maintained by commercial companies, provide lists of malicious domains that have been vetted by security experts with high confidence. We applied these blacklists to 3,280 detected IDN homographs, including non-active domains. The results are listed in Table 14. It is important to note that the numbers in the table do not include those from the previous subsection, as the previously identified malicious websites had redirected URLs. By integrating SimChar into the homoglyph database, the number of detected malicious IDN homographs increased.

### Reverting to Original Domains

Although we start with a reference domain name list to search for IDN homographs, this approach may not detect IDN homographs if a non-popular website is targeted. Therefore, if we identify a malicious domain name composed as an IDN, it is useful to be able to trace back to the original domain name targeted by the IDN homograph attack. Without this capability, we cannot fully assess the potential damage caused by the attack. Using the homoglyph database we developed, we can revert to the possible original domain name by replacing homoglyphs with their corresponding Basic Latin letters. We reverted the malicious IDNs to their original domain names and removed those that were listed in the Alexa top-1k domains. This process left us with 91 malicious IDNs whose original domains were not in the Alexa list, indicating that a significant number of malicious IDNs targeted non-popular websites. Our approach can automatically revert such domains.

### Discussion

In this section, we first discuss the limitations of our work and then consider effective countermeasures against the threat of IDN homograph attacks.

#### 7.1 Limitations

The primary contribution of this study was to build an automated framework for detecting Unicode homoglyphs and IDN homographs. Below, we discuss several limitations of our evaluation approaches and their future extensions.

**Confusability Test:** In this work, we evaluated the confusability of homoglyphs on a single character basis, where participants judged whether a potential homoglyph was confusable or distinct by viewing a pair of characters. However, since homoglyphs are often abused in words or even sentences, future studies should also evaluate the confusability of homoglyphs in these contexts, as they may affect user perception. Context-aware evaluation of homoglyph confusability is a topic for future research.

**Font Type:** We used GNU Unifont, a bitmap-based font, which is widely available and has broad coverage. However, other Unicode fonts, such as Noto, are scalable and could be used in future evaluations. Extending our framework to other font families would be a straightforward task and is a future direction.

**Measurement Target:** Our measurement study focused on the .com TLD, but many other TLDs are used. For example, the blacklists we used contain 1,054 domain names attributed to the 'рф' TLD, the Cyrillic country code TLD for the Russian Federation. Future studies should explore the visual deception of such TLDs. Additionally, while current IDN homograph attacks mainly target ASCII domains, emerging IDNs containing non-ASCII characters, such as ideographs, need further investigation. Our approach can cover homoglyphs consisting of any characters, including ideographs.

#### 7.2 Countermeasures against IDN Homograph Attacks

As discussed in Section 2, modern browsers implement countermeasures against IDN homograph attacks, but these have drawbacks. If an IDN violates the rules of permitted characters, the browser forcibly represents the IDN in Punycode, which is not user-friendly and may not provide context. Moreover, these countermeasures are ineffective against non-IDN homographs where homoglyphs reside in the same Unicode block, meaning the IDN conforms to the rules of permitted characters.

To inform users of the possibility of an IDN homograph attack, a more effective approach would be to present the Unicode representation rather than converting the IDN to Punycode. A user interface (UI) that emphasizes the differences between the original domain name and the potential IDN homograph could be implemented using homoglyph databases like SimChar and UC. These databases are small enough to be embedded into client programs such as browser extensions. This UI would enable users to understand which parts of the domain name are replaced by which characters, thereby increasing awareness of potential phishing threats. More importantly, IDNs are designed to provide a user-friendly expression of domain names in native languages, so forcibly converting them to Punycode significantly impairs the user experience. Implementing and evaluating such an interface could be the subject of further study.

#### 7.3 Ethical Considerations

In Section 4, we conducted a human study to assess the perception of detected homoglyphs. Before conducting the experiments, we carefully followed the checklist provided by our institutional IRB and concluded that our experiments conformed to research ethics principles. Our user study did not collect any personally identifiable or privacy-sensitive information, justifying our ethical approach. We also ensured that the reward for participants was fair, considering the time required to complete the tasks and the minimum wage.

### Related Work

This section discusses related work in terms of IDN homograph detection methods and their measurement studies.

#### 8.1 IDN Homograph Detection

Several studies have proposed methods to detect IDN homographs, broadly classified into image-based and character-based approaches.

**Image-based IDN Homograph Detection:** Since IDN homographs exploit visual similarity, image-based analysis is a natural fit. Liu et al. [21] generated images for 1.4 million registered IDNs and reference domain names from the top 1,000 Alexa sites, detecting 1,516 IDN homographs based on visual similarities. They also found 42,671 visually similar but unregistered IDNs. Unfortunately, details of their detection methods and settings are not provided. Sawabe et al. [30] developed a method using optical character recognition (OCR) to replace non-ASCII characters in IDNs with similar ASCII characters, detecting IDN homographs if the replaced IDNs matched reference domain names on Alexa Top Sites.

**Character-based IDN Homograph Detection:** Few researchers have adopted the character-based approach. To our knowledge, only two previous studies [26, 37] have attempted this. Quinkert et al. [26] searched for IDN homographs using a list of homograph pairs, equivalent to our homoglyph DB using UC, and detected 2,984 IDN homographs targeting 810 reference domain names. Tian et al. [37] developed a detection method based on UC. As shown in Section 4, our homoglyph DB, SimChar, outperformed UC-based detection, as the homoglyphs in SimChar were perceived to be more confusing while maintaining high coverage. Thus, our method complements previous work to cover IDN homographs more comprehensively.

#### 8.2 Measurement Study of IDN Homograph Attacks

Several researchers have performed measurement studies of IDN homograph attacks. Holgers et al. [15] conducted a passive measurement study on a campus network to search for accessed IDN homographs and used active DNS probing to detect registered IDN homographs for a limited number of reference domains. Tian et al. [37] studied domains created by various domain squatting techniques, including IDN homographs, to detect phishing websites. Le Pochat et al. [24] defined the concept of IDNs that brand owners with diacritical marks would use and found that 43% of 15,276 such IDNs were available for registration in 2019. Chiba et al. [5] demonstrated that there are many IDN homograph attacks targeting non-English brands or combining other domain squatting methods.

These studies mainly focus on measuring IDN homographs. Our character-based approach can be readily applied to these studies, providing a more comprehensive understanding of IDN homographs.

### Conclusion

This work led to the development of ShamFinder, a new framework for efficiently detecting IDN homographs. The key technical contribution is the construction of SimChar, a new homoglyph database that can be updated without manual efforts. SimChar is portable and can be implemented in various systems as a key component of countermeasures against IDN homograph attacks. Notably, SimChar can also be used for other security applications, such as detecting obfuscated plagiarism. We release the code and data of ShamFinder [32]. Future work includes extending the domain name space, font sets, and studying the confusability of non-ASCII homoglyphs.

### Acknowledgements

We thank our shepherds, Taejoong Chung and Kimberly Claffy, for their thoughtful suggestions and feedback. We also thank the anonymous reviewers for their valuable comments. Part of this work was supported by JSPS Grant-in-Aid for Scientific Research B, Grant Number 16H02832.

### References

[References remain unchanged]

---

This revised version aims to improve clarity, coherence, and professionalism. Let me know if you need any further adjustments!