# Evaluating Cloud Service Availability: A Comparative Analysis of ICMP and HTTP Probing

## 1. Introduction
This section evaluates the effectiveness of different probing methods, including ICMP and HTTP, in measuring the availability of cloud services. We focus on the impact of random packet loss and the benefits of retries to improve measurement accuracy.

## 2. Random Loss and Retries
### 2.1 Analytic Model of Packet Loss
We first establish an analytic model of packet loss, assuming a fixed loss rate that affects packets independently. The probability of falsely inferring an outage caused by random packet loss can be calculated using the following formula:

\[ \text{Pr (outage | k probes)} = (p + (1 - p)p)^k \]

where \( p \) is the packet loss rate and \( k \) is the number of tries.

### 2.2 Experimental Observations
- **Without Retries (k = 1)**: The false outage rate approximates the loss rate. For example, with a 1% packet loss rate, the false outage rate will also be around 1%.
- **With Retries**: A few retries can significantly reduce the false outage rate. For instance, with three tries and a 1% packet loss rate, the false outage rate drops to approximately \( 10^{-5} \), or five nines of availability.

### 2.3 ICMP Measurements
- **Initial Loss and Subsequent Tries**: An initial loss is followed by a second loss only 35-45% of the time, suggesting that the first try was likely due to random loss. This effect diminishes with more retries, generally plateauing around 5 or 6 retries.
- **Long-Term vs. Short-Term Observations**: Long-term observed loss rates are generally more correlated than predicted by the analytic model. More retries are often needed to recover from an initial loss.

### 2.4 HTTP Probes
- **Kernel-Level Retries**: Our HTTP client (curl) has a 10-second application timeout, and the OS (Linux-2.6.32) performs 3 SYN transmissions, providing 2 network-level retries for each application retry.
- **Application-Level Retries**: Even with kernel-level retries, multiple application-level retries are beneficial. We recommend 6 application-level tries for HTTP probes.

## 3. Comparing Network and Application-Level Probing
### 3.1 Method Agreement
- **ICMP and HTTP Probing**: Both methods generally agree, with disagreements occurring in at most 3% of rounds. On most days, they disagree in 0.5% or less of the rounds.
- **Outage Detection**: Both methods consistently report outages, as shown in Figure 4, which illustrates a provider-confirmed outage at one Amazon EC2 site.

### 3.2 Representative Examples
- **Intermittent Failures**: Figure 5 shows a case where both ICMP and HTTP report intermittent failures from one vantage point (VP). This highlights the need for end-to-end measurement with application-level protocols.

## 4. Conclusion
Our analysis demonstrates that while ICMP and HTTP probing methods generally agree, there are cases where they differ. Retries are crucial for reducing the false outage rate and improving the accuracy of cloud service availability measurements. End-to-end testing with application-level protocols provides a more comprehensive view of service availability.

---

**Figures and Tables**

- **Figure 1**: Probability of falsely inferring an outage as a function of packet loss rate.
- **Figure 2**: Comparison of loss and retries for each target and method.
- **Figure 3**: Quantifying disagreements between HTTP and ICMP probes.
- **Figure 4**: Strip chart showing a provider-confirmed outage at one Amazon EC2 site.
- **Figure 5**: Case of intermittent failures from one VP.

**Dataset**: VMs (2013-06-18+17), storage (2013-06-18+75).

**References**
- [22] and [9]: Additional sources on outages and probe rates.