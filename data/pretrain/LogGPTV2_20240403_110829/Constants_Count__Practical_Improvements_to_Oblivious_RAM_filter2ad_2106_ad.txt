(a/Z)R · e−qn  0 ensures an exponentially decreasing stash
overﬂow probability, we would like to know how tight
this requirement is and what the stash size should be in
practice.
We simulate Ring ORAM with L = 20 for over 1 Bil-
lion accesses in a random access pattern, and measure
the stash occupancy (excluding the transient storage of a
path). For several Z values, we look for the maximum A
that results in an exponentially decreasing stash overﬂow
USENIX Association  
24th USENIX Security Symposium  423
9
1000
900
800
700
600
A
500
400
300
200
100
0
Analytical
Empirical
Zoomed in:
60
50
40
30
20
10
0
0
100
200
300
Z
0
10
20
30
40
400
500
600
Figure 3: For each Z, determine analytically and em-
pirically the maximum A that results in an exponentially
decreasing stash failure probability.
4,3
32
51
103
λ
80
128
256
16,20
Z,A Parameters
32,46
Max Stash Size
113
155
272
65
93
171
8,8
41
62
120
16,23
197
302
595
Table 3: Maximum stash occupancy for realistic security
parameters (stash overﬂow probability 2−λ ) and several
choices of A and Z. A = 23 is the maximum achievable
A for Z = 16 according to simulation.
probability. In Figure 3, we plot both the empirical curve
based on simulation and the theoretical curve based on
the proof. In all cases, the theoretical curve indicates a
only slightly smaller A than we are able to achieve in
simulation, indicating that our analysis is tight.
To determine required stash size in practice, Table 3
shows the extrapolated required stash size for a stash
overﬂow probability of 2−λ for several realistic λ . We
show Z = 16, A = 23 for completeness: this is an aggres-
sive setting that works for Z = 16 according to simulation
but does not satisfy the theoretical analysis; observe that
this point requires roughly 3× the stash occupancy for a
given λ .
5 Bandwidth Analysis
In this section, we answer an important question: how
do Z (the maximum number of real blocks per bucket),
A (the eviction rate) and S (the number of extra dummies
per bucket) impact Ring ORAM’s performance (band-
width)? By the end of the section, we will have a
theoretically-backed analytic model that, given Z, selects
optimal A and S to minimize bandwidth.
We ﬁrst state an intuitive trade-off: for a given Z, in-
creasing A causes stash occupancy to increase and band-
9
8
7
6
)
𝑁𝑁
𝑁𝑁
2
g
o
l
(
𝑂𝑂
5
i
h
t
d
w
d
n
a
b
r
o
f
t
n
a
t
s
n
o
C
Z=4, A=3
Z=8, A=8
Z=16, A=20
Z=32, A=46
4
3
0
10
20
S − A
30
40
50
Figure 4: For different Z, and the corresponding optimal
A, vary S and plot bandwidth overhead. We only consider
S ≥ A
width overhead to decrease. Let us ﬁrst ignore early
reshufﬂes and the XOR technique. Then, the overall
bandwidth of Ring ORAM consists of ReadPath and
EvictPath. ReadPath transfers L + 1 blocks, one from
each bucket. EvictPath reads Z blocks per bucket and
writes Z + S blocks per bucket, (2Z + S)(L + 1) blocks
in total, but happens every A accesses. From the re-
quirement of Lemma 3, we have L = log(2N/A), so
the ideal amortized overall bandwidth of Ring ORAM
is (1 + (2Z + S)/A)log(4N/A). Clearly, a larger A im-
proves bandwidth for a given Z as it reduces both evic-
tion frequency and tree depth L. So we simply choose
the largest A that satisﬁes the requirement from the stash
analysis in Section 4.3.
as S increases,
Now we consider the extra overhead from early
reshufﬂes. We have the following trade-off in choos-
ing S:
the early reshufﬂe rate de-
creases (since we have more dummies per bucket) but
the cost to read+write buckets during an EvictPath and
EarlyReshuﬄe increases. This effect is shown in Figure 4
through simulation: for S too small, early shufﬂe rate is
high and bandwidth increases; for S too large, eviction
bandwidth dominates.
To analytically choose a good S, we analyze the early
reshufﬂe rate. First, notice a bucket at level l in the Ring
ORAM tree will be processed by EvictPath exactly once
for every 2lA ReadPath operations, due to the reverse-
lexicographic order of eviction paths (Section 3.3). Sec-
ond, each ReadPath operation is to an independent and
uniformly random path and thus will touch any bucket in
level l with equal probability of 2−l. Thus, the distribu-
tion on the expected number of times ReadPath opera-
tions touch a given bucket in level l, between two consec-
utive EvictPath calls, is given by a binomial distribution
of 2lA trials and success probability 2−l. The probabil-
ity that a bucket needs to be early reshufﬂed before an
EvictPath is given by a binomial distribution cumula-
424  24th USENIX Security Symposium 
USENIX Association
10
Find largest A ≤ 2Z such that
Z ln(2Z/A) +A/2 − Z − ln4 > 0 holds.
Find S ≥ 0 that minimizes
(2Z + S)(1 + Poiss cdf(S,A))
Ring ORAM ofﬂine bandwidth is
(2Z+S)(1+Poiss cdf(S,A))
A
· log(4N/A)
Table 4: Analytic model for choosing parameters, given
Z.
250
200
r
e
i
l
B = 64 Bytes
B = 4 KiloBytes
Path ORAM
p
i
t
l
u
m
h
t
d
w
d
n
a
B
i
2X
150
100
50
0
Ring ORAM
2.7X
0
1000
2000
Storage (in KiloBytes)
3000
4000
Figure 6: Bandwidth overhead vs. data block storage for
1 TB ORAM capacities and ORAM failure probability
2−80.
2logN for very large Z.
i
h
t
d
w
d
n
a
b
9
8
7
6
)
5
𝑁𝑁
𝑁𝑁
4
3
2
1
0
g
o
l
(
𝑂𝑂
2
r
o
f
t
n
a
t
s
n
o
C
Path ORAM (overall)
Path ORAM (online)
Ring ORAM (overall)
Ring ORAM (online)
0
10
20
30
Z
40
50
60
6 Evaluation
Figure 5: Overall bandwidth as a function of Z. Kinks
are present in the graph because we always round A to the
nearest integer. For Path ORAM, we only study Z = 4
since a larger Z strictly hurts bandwidth.
tive density function Binom cdf(S,2lA,2−l).2 Based on
this analysis, the expected number of times any bucket
is involved in ReadPath operations between consecutive
EvictPath operations is A. Thus, we will only consider
S ≥ A as shown in Figure 4 (S < A is clearly bad as it
needs too much early reshufﬂing).
We remark that the binomial distribution quickly con-
verges to a Poisson distribution. So the amortized overall
bandwidth, taking early reshufﬂes into account, can be
accurately approximated as (L +1) + (L +1)(2Z +S)/A·
(1 + Poiss cdf(S,A)). We should then choose the S that
minimizes the above formula. This method always ﬁnds
the optimal S and perfectly matches the overall band-