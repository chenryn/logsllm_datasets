```  
/*  
 * The code will also consider moving MAIN data out-of-line, but only as a  
 * last resort if the previous steps haven't reached the target tuple size.  
 * In this phase we use a different target size, currently equal to the  
 * largest tuple that will fit on a heap page.    This is reasonable since  
 * the user has told us to keep the data in-line if at all possible.  
 */  
/*  
 * If an index value is larger than TOAST_INDEX_TARGET, we will try to  
 * compress it (we can't move it out-of-line, however).  Note that this  
 * number is per-datum, not per-tuple, for simplicity in index_form_tuple().  
 */  
#define TOAST_INDEX_TARGET        (MaxHeapTupleSize / 16)  
/*  
 * When we store an oversize datum externally, we divide it into chunks  
 * containing at most TOAST_MAX_CHUNK_SIZE data bytes.    This number *must*  
 * be small enough that the completed toast-table tuple (including the  
 * ID and sequence fields and all overhead) will fit on a page.  
 * The coding here sets the size on the theory that we want to fit  
 * EXTERN_TUPLES_PER_PAGE tuples of maximum size onto a page.  
 *  
 * NB: Changing TOAST_MAX_CHUNK_SIZE requires an initdb.  
 */  
```  
3\. src/include/access/tuptoaster.h  
```  
/*  
 * Find the maximum size of a tuple if there are to be N tuples per page.  
 */  
#define MaximumBytesPerTuple(tuplesPerPage) \  
        MAXALIGN_DOWN((BLCKSZ - \  
                                   MAXALIGN(SizeOfPageHeaderData + (tuplesPerPage) * sizeof(ItemIdData))) \  
                                  / (tuplesPerPage))  
/*  
 * These symbols control toaster activation.  If a tuple is larger than  
 * TOAST_TUPLE_THRESHOLD, we will try to toast it down to no more than  
 * TOAST_TUPLE_TARGET bytes through compressing compressible fields and  
 * moving EXTENDED and EXTERNAL data out-of-line.  
 *  
 * The numbers need not be the same, though they currently are.  It doesn't  
 * make sense for TARGET to exceed THRESHOLD, but it could be useful to make  
 * it be smaller.  
 *  
 * Currently we choose both values to match the largest tuple size for which  
 * TOAST_TUPLES_PER_PAGE tuples can fit on a heap page.  
 *  
 * XXX while these can be modified without initdb, some thought needs to be  
 * given to needs_toast_table() in toasting.c before unleashing random  
 * changes.  Also see LOBLKSIZE in large_object.h, which can *not* be  
 * changed without initdb.  
 */  
#define TOAST_TUPLES_PER_PAGE   4  
#define TOAST_TUPLE_THRESHOLD   MaximumBytesPerTuple(TOAST_TUPLES_PER_PAGE)  
#define TOAST_TUPLE_TARGET              TOAST_TUPLE_THRESHOLD  
```  
4\. src/include/storage/itemid.h  
```  
/*  
 * An item pointer (also called line pointer) on a buffer page  
 *  
 * In some cases an item pointer is "in use" but does not have any associated  
 * storage on the page.  By convention, lp_len == 0 in every item pointer  
 * that does not have storage, independently of its lp_flags state.  
 */  
typedef struct ItemIdData  
{  
        unsigned        lp_off:15,              /* offset to tuple (from start of page) */  
                                lp_flags:2,             /* state of item pointer, see below */  
                                lp_len:15;              /* byte length of tuple */  
} ItemIdData;  
```  
5\. src/include/pg_config.h  
```  
/* Size of a disk block --- this also limits the size of a tuple. You can set  
   it bigger if you need bigger tuples (although TOAST should reduce the need  
   to have large tuples, since fields can be spread across multiple tuples).  
   BLCKSZ must be a power of 2. The maximum possible value of BLCKSZ is  
   currently 2^15 (32768). This is determined by the 15-bit widths of the  
   lp_off and lp_len fields in ItemIdData (see include/storage/itemid.h).  
   Changing BLCKSZ requires an initdb. */  
#define BLCKSZ 32768  
```  
6\. src/include/storage/bufpage.h  
```  
/*  
 * For historical reasons, the 64-bit LSN value is stored as two 32-bit  
 * values.  
 */  
typedef struct  
{  
        uint32          xlogid;                 /* high bits */  
        uint32          xrecoff;                /* low bits */  
} PageXLogRecPtr;  
typedef uint16 LocationIndex;  
typedef struct PageHeaderData  
{  
        /* XXX LSN is member of *any* block, not only page-organized ones */  
        PageXLogRecPtr pd_lsn;          /* LSN: next byte after last byte of xlog  
                                                                 * record for last change to this page */  
        uint16          pd_checksum;    /* checksum */  
        uint16          pd_flags;               /* flag bits, see below */  
        LocationIndex pd_lower;         /* offset to start of free space */  
        LocationIndex pd_upper;         /* offset to end of free space */  
        LocationIndex pd_special;       /* offset to start of special space */  
        uint16          pd_pagesize_version;  
        TransactionId pd_prune_xid; /* oldest prunable XID, or zero if none */  
        ItemIdData      pd_linp[1];             /* beginning of line pointer array */  
} PageHeaderData;  
/*  
 * line pointer(s) do not count as part of header  
 */  
#define SizeOfPageHeaderData (offsetof(PageHeaderData, pd_linp))  
```  
7\. src/include/c.h  
```  
typedef uint32 TransactionId;  
```  
计算，当数据库集群的BLOCK SIZE=32KB时：  
```  
TOAST_TUPLE_THRESHOLD = MaximumBytesPerTuple(TOAST_TUPLES_PER_PAGE) =   
MaximumBytesPerTuple(4) =   
MAXALIGN_DOWN((BLCKSZ - MAXALIGN(SizeOfPageHeaderData + (4) * sizeof(ItemIdData))) / (4)) =   
MAXALIGN_DOWN((32768 - MAXALIGN(192 + (4) * 32)) / (4)) ~= 8KB  
~= BLCKSZ *(1/4)  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")