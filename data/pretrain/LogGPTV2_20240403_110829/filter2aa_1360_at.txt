### Setting Up Custom Icons for OSINT Tools on macOS

To set custom icons for various OSINT tools, use the following `fileicon` commands. If you are copying these commands from the "mac.txt" file on my website, you can copy an entire section and paste it into Terminal at once. Each command will be executed individually when you press Enter.

```bash
fileicon set WebScreenShot -/Documents/icons/eyewitness.png
fileicon set GalleryX-Tool -/Documents/icons/gallery.png
fileicon set HTTrack -/Documents/icons/httrack.png
fileicon set InstagramX-Tool -/Documents/icons/instagram.png
fileicon set InternetX-Archive -/Documents/icons/internetarchive.png
fileicon set Metadata -/Documents/icons/metadata.png
fileicon set Metagoofil -/Documents/icons/metagoofil.png
fileicon set OSINTX-Tools -/Documents/icons/tools.png
fileicon set Recon-NG -/Documents/icons/recon-ng.png
fileicon set RedditX-Tool -/Documents/icons/reddit.png
fileicon set Spiderfoot -/Documents/icons/spiderfoot.png
fileicon set Updates -/Documents/icons/updates.png
fileicon set UsernameX-Tool -/Documents/icons/usertool.png
fileicon set VideoX-DownloadX-Tool -/Documents/icons/youtube-dl.png
fileicon set VideoX-StreamX-Tool -/Documents/icons/streamlink.png
fileicon set VideoX-Utilities -/Documents/icons/ffmpeg.png
```

**Note:** It is recommended to run each line manually as you become familiar with the process. After completing these steps, restart your machine to ensure all changes take effect.

### Graphical Adjustments and Tool Installation

Next, I will guide you through some graphical adjustments and tool installations for your macOS OSINT build. The following commands will embed the same icons used in the Linux VM into the Mac Scripts. The "mac.txt" file in your downloads includes a single command that conducts all these steps at once, but I recommend running them individually for better control.

#### Install and Configure Tools

1. **Install Python Dependencies:**
   ```bash
   cd sherloq/gui && sudo -H python3 -m pip install -r requirements.txt
   ```

2. **Clone and Install Metagoofil:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/opsdisk/metagoofil.git
   cd metagoofil && sudo -H python3 -m pip install -r requirements.txt
   ```

3. **Clone and Install DownloaderForReddit:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/MalloyDelacroix/DownloaderForReddit.git
   cd DownloaderForReddit && sudo -H python3 -m pip install -r requirements.txt -I
   ```

4. **Clone and Install Recon-NG:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/lanmaster53/recon-ng.git
   cd recon-ng && sudo -H python3 -m pip install -r REQUIREMENTS -I
   ```

5. **Clone and Install Spiderfoot:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/smicallef/spiderfoot.git
   cd spiderfoot && sudo -H python3 -m pip install -r requirements.txt
   ```

6. **Clone and Install Elasticsearch-Crawler:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/AmIJesse/Elasticsearch-Crawler.git
   ```

7. **Configure h8mail:**
   ```bash
   cd -/Downloads && h8mail -g
   sed -i '' 's/\;leak\-lookup\__pub/leak\-lookup\_pub/g' h8mail_config.ini
   ```

8. **Clone and Install ghunt:**
   ```bash
   cd -/Downloads/Programs
   git clone https://github.com/mxrch/ghunt
   cd ghunt && sudo -H python3 -m pip install -r requirements.txt -I
   ```

9. **Update Python Packages:**
   ```bash
   sudo -H python3 -m pip list --outdated --format=freeze | grep -v '^#.*$' | cut -d = -f 1 | xargs -n1 sudo -H python3 -m pip install -U
   ```

10. **Restart the Machine:**
    ```bash
    sudo shutdown -r now
    ```

### Adding Scripts to Dock and Applications Folder

To add the scripts to your Dock and Applications folder, use the following commands:

1. **Add Domain Tool Script to Dock:**
   ```bash
   defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/scripts/Domain-Tool.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
   killall Dock
   ```

2. **Add Scripts to Applications Folder:**
   ```bash
   ln -s -/Documents/scripts/ /Applications/
   ```

### Bypassing Gatekeeper Security

Since the scripts are not registered with Apple and lack security certificates, they are blocked by default. You can bypass this by right-clicking on each file, selecting "Open," and confirming the security exception. This only needs to be done once per file.

### Updating Programs

To update all installed programs, you can either enter the following commands manually or click on the custom "Updates" icon in your Dock:

```bash
brew update
brew upgrade
brew upgrade --greedy
brew autoremove
brew cleanup -s
rm -rf "$(brew --cache)"
brew doctor
brew missing
sudo -H python3 -m pip list --outdated --format=freeze | grep -v '^#.*$' | cut -d = -f 1 | xargs -n1 sudo -H python3 -m pip install -U
cd -/Downloads/Programs/sherlock
git pull https://github.com/sherlock-project/sherlock.git
cd -/Downloads/Programs/WhatsMyName
git pull https://github.com/WebBreacher/WhatsMyName.git
cd -/Downloads/Programs/Sublist3r
git pull https://github.com/aboul31a/Sublist3r.git
cd -/Downloads/Programs/Photon
git pull https://github.com/s0md3v/Photon.git
cd -/Downloads/Programs/theHarvester
git pull https://github.com/laramies/theHarvester.git
cd -/Downloads/Programs/Carbonl4
git pull https://github.com/Lazza/Carbonl4
cd -/Downloads/Programs/metagoofil
git pull https://github.com/opsdisk/metagoofil.git
cd -/Downloads/Programs/sherloq
git pull https://github.com/GuidoBartoli/sherloq.git
cd -/Downloads/Programs/recon-ng
git pull https://github.com/lanmaster53/recon-ng.git
cd -/Downloads/Programs/spiderfoot
git pull https://github.com/smicallef/spiderfoot.git
cd -/Downloads/Programs/Elasticsearch-Crawler
git pull https://github.com/AmIJesse/Elasticsearch-Crawler.git
cd -/Downloads/Programs/ghunt
git pull https://github.com/mxrch/ghunt.git
```

### Reversing All Changes

If you need to reverse all the changes made, use the following commands:

```bash
sudo -H python3 -m pip uninstall youtube-tool Instaloader toutatis nested-lookup webscreenshot redditsfinder socialscan holehe waybackpy gallery-dl xeuledoc bdfr search-that-hash h8mail -y
cd -/Downloads/Programs/Osintgram
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/sherlock
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/WhatsMyName
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/Carbonl4
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/sherloq/gui
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/metagoofil
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/bulk-downloader-for-reddit
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/recon-ng
sudo -H python3 -m pip uninstall -r REQUIREMENTS -y
cd -/Downloads/Programs/spiderfoot
sudo -H python3 -m pip uninstall -r requirements.txt -y
cd -/Downloads/Programs/ghunt
sudo -H python3 -m pip uninstall -r requirements.txt -y
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh)"
sudo rm -r -/Documents/scripts
sudo rm -r -/Documents/icons
sudo rm -r -/Downloads/Programs
sudo rm -r /Applications/scripts
sudo rm /usr/local/bin/xvfb-run
brew uninstall zenity youtube-dl yt-dlp ffmpeg pipenv mat2 httrack exiftool internetarchive ripgrep instalooter fileicon wget streamlink libmagic amass firefox google-chrome vic tor-browser google-earth-pro keepassxc mediainfo phantomjs xquartz
brew remove --force $(brew list)
brew cleanup -s
defaults delete com.apple.dock && killall Dock
```

Your macOS should now be back to its original state, with all custom settings and applications removed. If you have any remaining data in your Desktop or Documents folders, you can delete it manually.

### Windows OSINT Environment

For setting up a Windows OSINT environment, I initially considered using the Windows Subsystem for Linux (WSL) but found it to be too complex. Instead, I opted for traditional batch files executed through Command Prompt. These batch files are simpler and more straightforward to create compared to Bash scripts.

#### Example Batch File: Video Download Tool

Here is an example of a batch file for the Video Download Tool:

```batch
@echo off
setlocal
set url=
:home
cls
echo Select task:
echo 1. Best Quality
echo 2. Maximum 720p
echo 3. Export YT Comments
echo 4. Export YT Playlist
echo 5. Export YT Info
echo 6. Exit
set /p web="Choose Option: "
if "%web%"=="1" goto 1
if "%web%"=="2" goto 2
if "%web%"=="3" goto 3
if "%web%"=="4" goto 4
if "%web%"=="5" goto 5
if "%web%"=="6" exit
:1
set /p url=Target URL:
youtube-dl -f best %url%
goto home
:2
set /p url=Target URL:
youtube-dl -f best[height<=720] %url%
goto home
:3
set /p url=Target URL:
youtube-dl --write-comments %url%
goto home
:4
set /p url=Target URL:
youtube-dl --yes-playlist %url%
goto home
:5
set /p url=Target URL:
youtube-dl --get-description %url%
goto home
```

This batch file provides a simple menu for downloading videos with different options. You can find more pre-configured batch files in the "scripts" folder at [https://inteltechniques.com/osintbook9/windows-files.zip](https://inteltechniques.com/osintbook9/windows-files.zip).

By following these steps, you can set up a comprehensive OSINT environment on both macOS and Windows.