撤销和规避EDRs 指南
一.简介
EDR（Endpoint Detection Responser）端点态势感知和响应，用来针对APT攻击活动。
本文属于翻译文章，原文这里:http://jackson-t.ca/edr-reversing-evading-01.html
在我翻译之时，作者仅仅给出了前三部分，后面还未上线，如果作者发表了我会第一时间跟踪并分享给
大家。
指得一提的是
1.个人语言能力较差，某处按照自己的理解难免有些画蛇添足，希望师傅们优先看原文。
2.之前了解到EDR和AV不同之处就在于EDR专门针对APT的，具体细节没去了解。因此本系列是边学边
了解。
3.如有错误，欢迎指正；以免误导他人，推荐看原文。 比如有个地方 phone home确实无法理解，可
能涉及到英文的俚语。面对技术，首先就要认真对待。之前的翻译有些太草率了，欢迎各位师傅一起交
流学习！
索引；
第一部分：介绍
第二部分：传感器侦察
第三部分：转移EDR遥测到私有地址
第四部分：融入 -- 即将到来
第五部分：滥用盲点
第六部分：篡改传感器
第七部分：改变目的
什么是遥测的？ Telemetry 就是在远程点收集的测量值或其他数据，并将其自动传输到接收设备
以进行监视。
二.第一部分
介绍
两个月前，我有幸私下出现了一次两小时谈话关于逆转和规避技术可以抽象为多种EDR产品。我收到了
一些请求发布资料，因此我开始将此系列放到一起。
这篇文章会比原始材料更淡化一点，因为我不能发布某些产品检测细节。相反，我会讨论我的某些基础
想法和思考过程。
目标听众是红队和攻击性开发人员，并且我认为防守也会受益。学习这些产品的细节可能是令人生畏
的，令人有希望的是揭开神秘面纱都是在不懂的情况下。(兴趣是唯一的驱动力！)
规避概念
端点检测和响应（Endpoint Detection and Response）EDR 产品在执行检测/响应恶意行为期间监控
程序。这是对传统AV功能的补充通过签名和启发式在执行之前阻止不想运行的程序。在EDR领域一些顶
级厂商包括：Mcrosodt,CrowdStrike,Cylance,Carbon Black和FireEye.
尽管规避技术是一个广义的术语，但是攻击者EDR的响应可以归为以下方面：
1. 回避：近一步在未安装产品或者开启产品的系统上实现目标。（例如在未配置的端点，或者已经配
置端点上通过代理流量。）
2. 混合 :隐藏在EDR传感器通常记录的噪音中。（例如 使用常见的父子进程关系）。
3. 滥用盲点：采用传感器没有捕获或报告的区域。（例如使用当前没有被记录的API，移除钩子，使
用直接系统调用。）关于直接直接系统调用过EDR/AV 参考这篇文章：https://www.cnblogs.com/
macanpsc/p/11670257.html【强烈推荐】
4. 篡改服务器：更改传感器行为以使攻击者收益（例如：修补传感器以便恶意行为不会被报告或者收
集到。）
问题陈述&主题
为了检测EDR bypass技术的有效性，许多操作者都这样做，即在操作过程中是否被检测到。在攻击对
和防守方这凸显了能见度不对等。如果不能通过遥测和检测查询，操纵员很难推断出成果绕过EDR或失
败确切的技术原因。
如果一名操作员能够获取独立的访问遥测传感器，这能够充当催化剂不但高效的检测bypass，而且能够
发现新的盲点或者混合方式，并且验证遥测传感器的能力。
在不断发展的贸易进攻中，我明白了这是基本步骤，以下将是研究的主题：
逆向工程传感器，在不验证情况下获取访问遥感访问权限。
使用遥感作为反馈回路，来发现盲点或者混合方式。
探索一系列复杂的篡改技术，使传感器失效。
重新调正传感器使传感器作为一个 RAT。(娱乐为主)
在这个场景里面我描述建议的方法是搭建一个环境（安装EDR传感器）但是调整了传感器到自定义基础
结构因此它不会phone home。这为A/B提供了机会测试那些行为是被拦截的并且确定混合或者发现盲
点的选项。这项选项可以在传感器检测下被用来使用。当他们精疲力竭时，传感器篡改技术能够被用来
代替使用连接或者事件报道静默侠下来。
致谢
今年，我没有细致的研究每一个EDR产品。首先实话讲，这个工作量是很大的。没有那些乐于分享知识
的人倾囊相授我无法学习去做这些事情。下面是我读过相关的安全产品子版本列表：
https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/
https://skylightcyber.com/2019/07/18/cylance-i-kill-you/
https://d4stiny.github.io/Reading-Physical-Memory-using-Carbon-Black/
https://www.mdsec.co.uk/2019/03/silencing-cylance-a-case-study-in-modern-edrs/
https://dmaasland.github.io/posts/mcafee.html
https://youtu.be/85H4RvPGIX4
https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon
https://specterops.io/assets/resources/Subverting_Sysmon.pdf
https://www.youtube.com/watch?v=l8nkXCOYQC4
https://www.blackhat.com/docs/eu-17/materials/eu-17-Thompson-Red-Team-Techniques-For-Eva
ding-Bypassing-And-Disabling-MS-Advanced-Threat-Protection-And-Advanced-Threat-Analytics.p
df
我也很感谢下面的人们所做的贡献，对本系列的反馈：幕府将军实验室，林肯和其他不知名人士。
第二部分
传感器侦察
在这篇文章中，我打算复习下几个对理解EDR传感器和他们的配置文件有帮助的主题。大多数这些技术
细节倾向于产品检测，没有案例供研究来显示具体的例子，限于公众的讨论它是有点模糊的。我希望这
篇文章将提供一些点你能够扩展你自己的R&D过程。
身份证明
作为攻击者，当你攻入一个新的目标，首先最应做到事情之一就是寻找是否有AV/EDR在运行。你可以
列出程序看看它们属于那些已知的产品，尽管它们也提供了选项来混淆程序名。
相对简单的办法是到处转转，因为比起它们的进程名传感器会留下很多的痕迹。其他的例子包括服务
名，命名管道或者trace sessions的属性，文件/注册表控件。这的确需要更多的分析但是也很容易混
淆，如果供应商有这个倾向。
通过微型分析（不太容易混淆），导入内核模式驱动的数字签名是产品痕迹的部分之一。一个调查模块
能够写到枚举导入驱动模块，然后通过已知的产品签名者来验证它们的签名。下面是一个例子输出好像
在一个系统上有FireEye 端点代理段在运行，通过Cobalt Striek的 BOF (Beacon Object File） 实施：
点击这儿来查看这个框架代码。
https://gist.github.com/jthuraisamy/4c4c751df09f83d3620013f5d370d3b9
配置数据
传感器配置可以被用来存储服务器开启或者关闭功能信息，疑难解答等详细级别。通常这些配置能够被
发现在注册表上或者在一种文件格式例如文本文件(例如 INI，配置文件)或者二进制(例如 SQLite,专有)。
一些传感器会加密存储数据或者混淆它们。如果你不确定特定的配置在哪，你可以考虑下面的选项：
产品手册或者疑难解答文档，如果可以的话，可以直接知道配置信息是怎么被存储的以及存储在
哪。有时可以从第二/第三方或者论坛帖子上发现有用的信息。
一些产品已经有了诊断工具被用来评估传感器的状态。这个过程设计解析和导出配置信息。
传感器采用动态静态相结合分析也可以提供帮助。（例如 检测配置被导入内存中并且它是如何吧
被解析的。）
当你着陆到一个目标上，你不但应该看看是否有传感器在跑着，还应该看看它是怎么配置的。你应该发
现它是否收集到了尽可能多的东西，或者它是否设置了减少噪音。你还应该看看这儿有没有其他你可以
安全地运行payloads的路径。对于传感器在线检测引擎，你可以检测它们是否被开启了，它被设置为什
么可信度级别。
调侃
beacon> inline-execute /home/ghost/get_loaded_security_drivers.o
[*] Tasked beacon to inline-execute /home/ghost/get_loaded_security_drivers.o
[+] host called home, sent: 1907 bytes
[+] received output:
\systemroot\system32\drivers\fekern.sys -> FireEye, Inc.
传感器有选项倾向于更多的冗余日志针对于故障排除。这些设置通常在windows系统注册表上可以发
现，对于其他的操作系统在配置文件中。某些文档案例如下：
Carbon Black Response
HKLM\Software\CarbonBlack\config\DebugLevel  ⟶ 7
HKLM\Software\CarbonBlack\config\KernelDebugLevel  ⟶ 7
CrowdStrike Falcon
CylanceOPTICS
Tanium Client
依赖于产品，除了在文档中列出的，还有很多选项，某些有助于通过ETW进行日志记录。近一步分析二
进制在充实方面很有用。
我已经在日志中发现的一些亮点：类名(为了更好的理解代码)，请求策略，HTTP 请求内容，人类可阅
读的独立日志记录形式，在检测传感器盲点偶然的错误信息。
调式字符串
如果可以的话，调式字符串，对于快速的理解传感器的各个方面以及结构它们怎样实现功能是很有帮助
的。它们可以保留在某些产品的二进制中，这可能是因为它们用于故障排除。