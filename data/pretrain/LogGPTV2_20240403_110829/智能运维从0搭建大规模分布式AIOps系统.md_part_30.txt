model.last_state,
---
## Page 202
def main(flag):
当 flag 被设置为0时进行模型训练，设置为1时进行 demo的演示（生成句子)。
9.3.6
#flag 为 0 执行模型训练，flag 为1 则执行 demo演示
model = Model(args, data, flag=flag)
#加载模型
data = loadDataset('dataset/data.txt', args)
#加载数据集
args = loadParam()
#读取系统配置参数
通过上面的模型训练过程,可以定义主函数(main)。下面的代码演示了主函数的核心功能,
在 generate 函数中，首先通过 TensorFlow的 saver 对象加载模型文件，然后逐一生成句子。
return sentence
for i in range(args.gen_num):
#生成句子
sentence = prime
word = prime[-1]
for word in prime[:-1]:
运行演示
sentence +=word
time.sleep(0.05)
sys.stdout.flush()
print(word,end='')
word = data.id2char(np.argmax(p))
p= probs[0]
probs, state = sess.run([model.probs, model.last_state], feed_dict)
x[0, 0] = data.char2id(word)
x=np.zeros（[l，1])
feed={model.input_data:x,
x[0,0]=data.char2id(word)
x = np.zeros((1, 1))
feed_dict=(model.input_data:x,model.initial_state:state)
model.initial_state: state)
第9章机器学习框架
175
---
## Page 203
python3 demo_seq2seq_lstm.py 0
#演示代码保存在demo_seq2seq_lstm.py中
#使用Python3.*，TensorFlow0.12
if
176
else:
if len(sys.argv)== 2:
python3 demo_seq2seq_lstm.py 1
训练过程如图 9-7所示。训练完成后，会在 logs 文件夹下产生模型文件，如图9-8 所示。
generate pleaseinput:
python3 demo_seq2seq_lstm.py 0
执行模型训练，可以直接运行以下命令：
 model training please input:
name
Python 的入口函数定义如下：
run_fn(data, model, args)
#运行
run_fn = generate if flag else train
main(flag)
print('-generate-' if flag else '-model training-')
flag = int(sys.argv[-1])
11 11 11
智能运维：从O搭建大规模分布式AIOps系统
sys.exit(1)
print(msg)
tep:60/
tep:55/139162,
tep:40/139162
cep:
tep:30/139162,
ep:10/139162
139162
139162
trai
：
loss rate:173.002441
图9-7执行seq2seq的模型训练过程
Loss
SSO
LOSS
Pro:
4053
srate:137.438843
rate:131.468948
Robbert
rate:130.116
rate:139.8815
rate:153.210052
146.262604
pengdon
4.026184
480438
10809
a3s
---
## Page 204
使用可视化工具，如图9-9所示。
tensorboard --logdir=logs
#使用 Python3.*，TensorFlow0.12，打开TensorBoard可视化工具
可视化查看，甚至修改参数。执行以下命令可以运行 TensorBoard服务：
PCAisapproximate.
No colormap
Colorby
rnnlm/embedding
5 tensors found
DATA
omponent#3
T-SNE
ensc
TensorBoard 默认会启动 Web Server 并打开本机 6006端口，通过访问 http://localhost:6006
TensorBoard也支持展示模型Graph 拓扑，图9-10展示了模型训练的图。
TensorFlow提供了可视化工具TensorBoard，通过TensorBoard 可以非常方便、简捷地进行
orBoard
PCA
Component#2
CUSTOM
9163196
9163196
9163196
9163196
317666
317660
287
）AIPoints:4053| Dimension:100
6
6
6
MAGES
16:00
15
15:40
16:00 checkpoint
图9-8训练得到的模型文件集日志
S
:53
：36
图9-9TensorBoard可视化工具
demo_seq2seq_model.ckpt-6000.index
demo
AUDIO
.
GRAPHS
2seq_model.ckpt-0.data-00000-of-00001
nodeL
del
del
LSIO
Po..
.
-00000-
000
第9章机器学习框架
-of
EMBEDDINGS
BOOKMARKS(O)
Search
char
C#
177
---
## Page 205
自己的算法，极大地减少了工程量。
TensorFlow 在分布式模型训练中有丰富的技术支撑，开发者可以很方便地在 TensorFlow 中集成
了如何在 TensorFlow 中训练和使用 seq2seq 模型。作为 Google 开源的重量级机器学习框架，
9.4
因此 seq2seq 的生成效果还不够好，读者可以进一步进行优化，降低损失率。
178
0060
Color
Traceinputs
Upload
TensorBoard
注意：在演示案例中，设置的迭代次数（epoch）为100，最后损失率为21.77，还非常高，
最后，可以查看执行结果。如图9-11所示，通过训练好的模型，生成了100 个字的短句。
本章小结
Unconected efest
Download PNG
Fit to screen
智能运维：从O搭建大规模分布式AIOps系统
Choose File
RNN
./Logs/demo_seq2seq_model.ckpt-10036
只当心心步过改变
们畏此 给醒在左人没有我
牵着你的爱
亲操城的鸽落
是一
雪
你讲
一场悲剧
图9-10TensorBoard的GRAPHS页面
图9-1lseq2seq的生成结果
Attributes(0)
1
---
## Page 206
Machine Translation, 2014
9.5
[3] Vinyals et. al. A Neural Conversational Model[J]. Computer Science, 2015
 [2] Cho et al. Learning Phrase Representations using RNN Encoder-Decoder for Statistical
[1] TensorFlow 官方网站：https://tensorflow.org
当然，机器学习框架非常多，各有所长，读者可以根据自己的习惯进行选择。
参考文献
第9章机器学习框架
179
---
## Page 207
几个章节：
在大数据场景下对实时数据进行处理和分析，以及智能化决策的问题。
效率的问题；SRE解决的是如何保障系统具有高可用性和稳定性的问题；AIOps 解决的是如何
器和服务的基本运维与保障问题；DevOps解决的是如何构建工具和平台进行自动化，提升运维
异常，如何快速诊断，如何进行报警的准确预测和评估等。在这里，Ops 解决了资源维护、机
2011年之后，深度学习的兴起，带动了人工智能发展的高潮。
的 Methods 等。随着数据量的增大，计算能力变得更加强大，
算法，如20世纪80年代的神经网络，90年代的浅层，2000年左右的 SBM、Boosting、Convex
使得AI发生了很大变革。算法技术的更新助力人工智能的兴起，早期的算法一般是传统的统计
业开始关注如何使用AI来解决生产环节的效率问题，以及如何提升对客户的理解。
器人学、语言和图像理解、遗传编程等众多领域都有实际的应用并发挥着价值。越来越多的企
掌纹识别、专家系统、自动规划、智能搜索、定理证明、博弈、自动程序设计、智能控制、机
已经经历了半个多世纪的发展，在机器视觉、指纹识别、人脸识别、视网膜识别、虹膜识别、
Intelligence）”这一术语自麦卡赛、明斯基、罗切斯特等知名科学家于 1956 年首次提出以来，
了智能化的问题，解决了如何让机器进行判断和决策的问题。我们知道，“人工智能（AI,Artificial
活力和想象空间。如果说运维平台解决了自动化的问题，那么人工智能则在平台的基础上解决
本篇主要讨论智能运维的常见方法和模型，以及在具体应用中的使用场景。本篇主要分为以下
随着硬件技术的不断升级，运算能力也从传统的以CPU为主导发展到以GPU为主导，这
在运维技术领域，新时代的要求是在大数据基础之上，
AIOps 正在以一种全新的姿态变革和影响着传统运维体系，也给运维技术方向注入了新的
O
O
○第10章数据聚合与关联技术
第11章数据异常点检测技术
第13章趋势预测算法
第12章故障诊断和分析策略
运维新时代：智能运维技术详解
，如何高效、快速、准确地捕获系统
，深度学习的影响也越来越大。自
第3篇
---
## Page 208
第10章
用来标注看待数据的不同角度)。
（在实际应用中维度通常指时间、地点、业务线、服务、接口等，它们也可以被称作“标签”，
算模式，是对数据的深加工、二次利用，这里不做太多的叙述。
10.1
后续的数据应用。
Spark、Hive 处理大数据等，这些都会涉及聚合数据。