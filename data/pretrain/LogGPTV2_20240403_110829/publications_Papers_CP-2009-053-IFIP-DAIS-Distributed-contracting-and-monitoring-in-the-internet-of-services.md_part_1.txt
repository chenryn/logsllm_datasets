Distributed Contracting and Monitoring in the
Internet of Services
Josef Spillner1, Matthias Winkler2, Sandro Reichert1, Jorge Cardoso2,
Alexander Schill1
1 TU Dresden, No¨thnitzer Str. 46, 01187 Dresden, Germany
{josef.spillner,sandro.reichert,alexander.schill}@tu-dresden.de
2 SAP Research CEC Dresden, Chemnitzer Str. 48, 01187 Dresden, Germany
{matthias.winkler,jorge.cardoso}@sap.com
Abstract. The recent approval of the EU Services Directive is fostering
the Internet of Service (IoS) and will promote the emergence of market-
placesfor businessandreal-worldservices. Froma researchperspective,
theIoSwillrequireanewbreadoftechnologicalinfrastructurestosupport
the concepts of business service description, contract management from
various perspectives, end-to-end marketplaces, and business monitoring.
The IoS is a vision referring to web service-based digital societies. When
service hosting moves from best-effort provisioning to guaranteed ser-
vice delivery, monitoring becomes a crucial point of proof for providers
and consumers of such services. We present the uplifting of technical
monitoring results to business effects based on the distributed service
infrastructure developed in project THESEUS, use case TEXO.3
1 Introduction
The emergence of electronic marketplaces for services is driving the need to
describe services, not only at the technical level, but also from business and
operational perspectives. In this context, Service-oriented Architectures (SOA)
andwebservicesleveragethetechnicalvalueofsolutionsintheareasofdistributed
systems, cross-enterprise integration, and enterprise architectures. While SOA
andwebservicesresideinanITlayer,organizationsarerequiringadvertisingand
trading business services which reside in a business layer. Previous solutions for
Service Level Agreement (SLA) negotiation and monitoring need to be adapted
to provide suitable infrastructures for the monitoring of the business aspects.
The European directive on services in the internal market [1] will facili-
tate businesses to provide and use cross-border services in the EU. It will also
strengthen the rights of consumers of services, for instance by enshrining the
right of non-discrimination and contract fulfillment protection. In business, a
service is the non-material equivalent of a good. It is considered to be an activity
3 The project was funded by means of the German Federal Ministry of Economy and
Technology under the promotional reference “01MQ07012”. The authors take the
responsibility for the contents.
which is intangible by nature and is provided by a service provider to a service
consumer to create a value possibly for both parties.
Real world examples of domains with requirements to digitally describe
and monitor business services and establish contracts include the software and
automobile industry In these use cases, providers as well as consumers face the
problem of describing service offerings, which is of considerable importance since
services are one of the least understood portions of the global economy [2,3].
This paper is structured as follows: in Chap. 2 we present the Universal
Service Description Language (USDL) as our approach to describing business
services and the creation of SLA templates from USDL service descriptions and
the negotiation of SLA. In Chap. 3 we present our monitoring architecture and
illustrate different aspects of monitoring. In Chap. 4 we show how monitoring
data can be aggregated and used to evaluate SLA. As a next step we describe
how discovered problems can be handled in Chap. 5.
2 Descriptions of Services and Service Level Agreements
The description of services is a fundamental requirement for enabling offering,
search and usage of services. SLA are formal contracts between a service provider
and consumer regulating the provisioning and consumption. In this section we
argue for a need of suitable means for describing services and present USDL as
our approach. We will also show how SLA are created from USDL descriptions.
2.1 Business Service Descriptions
Recently, the vision of the IoS [4] and service marketplaces have emerged and
can be seen as a new business model that can radically change the way we
discover and invoke services. The development of infrastructures to maintain
electronic marketplaces for services will require the support for the contracting
and monitoring of business aspects of services. In the IoS vision, services are seen
as tradable goods that can be offered on service marketplaces by their providers
to make them available for potential consumers. Barros et al. [5] describe service
marketplaces as one example of service ecosystems that represent ”[...] a logical
collection of [...] services whose exposure and access is subject to constraints,
which are characteristic of business service delivery.” On a service marketplace
multiple providers may offer their services. Providers may be large providers as
well as small companies offering specialized services. As such, an ecosystem of
competingaswellascollaboratingservicesmaybecreated.Thenotionofbusiness
service is broader than the well-known concept of Web service. Web services
have mainly an information technology (IT) perspective. They are technical
software resources which are discoverable, invocable, platform independent, and
self descriptive [6]. This type of service is mainly described by an interface
definition (e.g., WSDL) and SLA/monitoring is carried out at the technical and
infrastructure level. On the other hand, the IoS requires a stronger emphasis
on a business perspective. A suitable service description needs to account for
information that includes legal constraints (penalties, rights, and obligations),
resources consumed and produced (artifacts, products, outcomes, or deliverables
[7]), service scope and purpose, consumer benefit, pricing strategies (pay per
use, flat rate, etc.), participating roles and responsibilities (consumers, providers,
brokers, partners, etc.), service level (reliability, and availability), operations (e.g.
milestones and phases), distribution channels (Web, e-mail, phone, etc.), and
marketing endeavors (flyers, promotional videos, etc.s).
Going beyond WSDL While web services (e.g. SOAP/WSDL or REST web
services) are usually seen mainly as technological entities, the IoS will also
embrace what we call universal, business, or real-world services and requires
combiningandcorrelatingbusiness,operationalandtechnicalaspectsintoservice
descriptions.WSDLwasdevelopedtodescribeonlythetechnicaldetailsofhowa
webservicecanbeaccessedandinvokedremotelyovertheWeb.Itdetailstechnical
requirements such as Internet addresses, ports, method names, arguments, and
data types used by a web service. The emphasis of WSDL (and other WS-*
protocols) is on technical aspects of services. The IoS has different requirements
from the ones fulfilled with WSDL. While the technical description of services is
important for SOA, the business and operational perspectives on services have a
significant importance for the IoS. Therefore, new service descriptions are needed
to bridge business, operational and technical perspectives. A business perspective
needs to include the description of legal, marketing and bundling aspects [8]. An
operational description needs to include functional and behavioral characteristics,
andresourcerequirements[7].Abetterdescriptionofthebusinessandoperational
perspectives will bring to a marketplace an advantage over competitive platforms
by being an added value for service providers and consumers. Based on this
examination and requirements, we have devised a new specification language -
USDL: the Universal Service Description Language - for services that will be
hosted and traded in electronic marketplaces.
Describing Services with USDL USDL brings together the business, opera-
tional and technical perspectives. USDL enables to describe business characteris-
tics exposed by an organization for the purpose of providing a way for consumers
to invoke and use services. The USDL schema defines three core clusters of
information: business, operational and technical. Fig. 1 shows a simplified view
of the USDL meta model. It can be seen that USDL has a strong emphasis on
business and operations, while the technical perspective is reduced. The business
cluster is used to describe information about the service provider and relevant
consumers it is destined for. Furthermore there are a number of subperspectives
which are described. Service level describes different quality of service aspects
alongwithratingsoftheservice.Legalprovidesinformationregardingtheservice
terms of use. Marketing covers information regarding the service price and its
different channels for providing information about the service. Interaction de-
scribes how users need to interact with a service during invocation and execution.
The operational cluster describes the offered functions of a service and provides
a functional classification which supports the search for a service. Finally, the
technical perspective allows the specification of technical communication aspects
(e.g. messaging protocol) using WS-* protocols. By defining the three clusters
USDL goes beyond purely technical approaches such as WSDL. On the other
hand it provides a well-understood and limited set of options for describing the
most important aspects of business services. This approach is different from e.g.
ontologicalapproachessuchasWSMO[9]whichenabletheusertomodelcomplex
USDL
descriptions, but have the drawback of being difficult to handle by business users.
The power of Three
Technical
Protocol ssenisuB
performance 0..* Information
Performance dependability 0..* +++
security 0..* 1 0..1 1..*
Dependability Technical Invocation
ServiceLevel
Security 0..1 Execution
Legal
Rating Service
rating 0..*
Channel commu Mn aic ra kt eio tin n g 0..* +++ ++ O+ perational functionality 0..* DF eu sn cc rt ii po tn ioa nl Operational
Price price 0..* Subperspective m clail se ss it fo icn ae ts io0 n..* 0..*
Invocation operations 0..* phases0..*
subperspectives 0..*
Interaction Operation
Execution Business
invocation 0..* interfaces 0..*
execution 0..*
Interface
provider 1..1 input 0..* output 0..*
Provider
Consumer consumers 0..* Input Output
Profile Interface Interface
ports 1..* ports 1..*
bundle 0..1
Bundling 1 1
Port Resource
Mea Ss yu sr te em ment 1..1 EP xr to ep ne sr ioty n 1..* P Ee xrs tep ne sc it oiv ne +++ DU en si cv re iprs tia ol n
©SAP 2008 / Page 1 Fig.1. Simplified view of the model behind USDL Confidential
To establish a formal base for USDL, we have developed meta model with the
objective of providing a communication and implementation framework for the
integration with SLA management mechanisms and trading platforms [10]. We
have decided to formalize USDL with a MOF-based meta model [11] since: 1) it
enables the specification of an exchange format for persisted service descriptions,
2) it is a matured, well-understood and established technology, and 3) it is an
OMGstandardwhich allowsaneasyintegrationofotherstandardssuchas UML,
BPMN, etc. More details on USDL can be found in [12].
USDL: An example from logistics Listing 1.1 presents a simplified example
of the USDL business description of a logistics service. Logistics involves a vast
number of services that are associated with activities such as the transport and
storage of goods. The example describes the Truck Freight Transport Service
that enables the transport of goods within the city limits of Dresden. The service
will be executed within 3 hours and has a reliability of 95%.This example will be
used in the next section to exemplify how an SLA template can be generated
automatically on behalf of the provider.
1 service {
2 serviceName TruckFreightTransportService
3 description Transport of goods within city area
4 business {
5 providerName Truck Transport Dresden GmbH
6 providerAddress Traubestr 17, Dresden, Germany
7 price 100 EUR
8 termsOfUse http://www.truck−dd.com/services/ToU.html
9 executionTime 3H
10 reliability 95%
11 }}
Listing 1.1. Sample USDL for Logistics Service
2.2 Deriving SLA From Service Descriptions
In the IoS vision SLA provide a formal base regulating the provisioning and
consumption of services between the service provider and consumer. These
contractsaremonitoredtoassureconformancetotheagreementbybothinvolved
parties. Violations of the different service level objectives (SLO) of an SLA need
to be identified and reactions triggered.
Different technologies have been developed in recent years for negotiating and
representing such formal contracts (e.g. WSLA [13], SLAng [14], WS-Agreement
[15]). While WSLA and SLAng are not being developed any further, the WS-
AgreementspecificationisdrivenbytheOpenGridForum.Itprovidesastructure
and language for specifying SLA as well as a protocol for offering and negotiating
SLA. For our project we have chosen to implement SLA handling based on
WS-Agreement and augmented it with information from our USDL specification.
The creation of SLA was also integrated with our service development process.
A component, called SLA Manager, for handling the negotiation of SLA and
making SLA information available to other components was developed. In the
following sections we will describe the extended WS-Agreement structure as well
as the implementation of the SLA Manager.
Specifying SLA TheSLAnegotiationprocess,whichfollowstheprotocolspeci-
fied by WS-Agreement, has an SLA template as its starting point. It is generated
fromtheservicedescriptionattheendoftheservicedevelopmentprocess.During
the negotiation process this template is refined first to an agreement proposal
and finally to an agreement. The different WS-Agreement files are structured in
mainly three sections: the ServiceDescriptionTerms, ServiceProperties, and Guar-
anteeTerms. The ServiceDescriptionTerm section describes general information
on the service and the functionality it provides including the name of the service,
its version number, and a functional classification. The ServiceProperties section
defines measurable service attributes (e.g. execution time). The GuaranteeTerm
sectiondefinesServiceLevelObjectives(e.g.min,max,average,orconcretevalues)
which are guaranteed for service provisioning. They can be specified for the
variables defined in the ServiceProperties section. A simplified SLA example is
shown in Listing 1.2.
In order to create SLA documents for services, a language for describing
services is needed in addition to the language constructs of WS-Agreement.
USDL provides such functionality. Thus, we have used it within SLA documents.
Listing 1.2 depicts examples of USDL code marked via the usdl namespace.
1 agreement {
2 Name TruckFreightTransportService SLA
3 ServiceDescriptionTerm {
4 ServiceName TruckFreightTransportService
5 usdl:description Transport of goods within city area
6 }
7 ServiceProperties {
8 VariableSet {
9 Variable {
10 Name executionTime
11 Metric usdl:timeDuration
12 }
13 Variable {
14 Name reliability
15 Metric usdl:percent
16 }}}
17 GuaranteeTerm {
18 Name BasicService GUARANTEE
19 monitored true
20 ServiceScope TruckFreightTransportService
21 ServiceLevelObjective {
22 SLOName executionTime
23 ServiceLevel 3H
24 }
25 ServiceLevelObjective {
26 SLOName reliability
27 ServiceLevel 95%
28 }}}
Listing 1.2. Logistics SLA
Fig. 2 presents an overview of the SLA generation, negotiation, and monitor-
ing processes as implemented in our work. Services are created using the service
engineering workbench which we call ISE (Inter-enterprise Service Engineering).
It implements a model-driven approach to service development and was devel-
oped based on the Eclipse platform. As a final step of the development process
we generate SLA templates from the USDL service description. The different
parameterswhichwerespecifiedfor theserviceare eithermappedtothedifferent
WS-Agreement elements of the SLA template document or the USDL elements
Service Tradable Service
Development Runtime Monitoring Dashboard
Environment R
SLA Information
SLA Monitoring
ISE Workbench
R
R
Monitoring Data
Collection
Service
R
Management SLA Manager Web