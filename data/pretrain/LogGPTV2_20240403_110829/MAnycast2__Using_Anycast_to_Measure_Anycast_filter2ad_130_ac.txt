thus, in the detection of that network as anycast. Ensuring this
property of an anycast network is not always possible. When this
minimal connection is not satisfied, the MAnycast2 methodology
may fail to detect an anycast service, because connectivity between
the anycast service and MAnycast2 VPs may result in all traffic
from the anycast nodes ending up at a single MAnycast2 VP.
In the following paragraphs, we examine three aspects of con-
nectivity structure and routing dynamics that can lead MAnycast2
to misclassify prefixes.
ing policies led to failures to detect anycast prefixes.
Impact of Routing Policies. We discovered two cases where rout-
C-Root: Single Preferred Route – C-Root, which MAnycast2
misclassified as unicast, is managed by Cogent Communications
via AS2149. In private communication with a Cogent operator, we
discovered that Cogent considered one of the Tangled providers,
Vultr, as a preferred-route, but only received routes from one of
the three Tangled sites that used Vultr as provider. For this reason,
Cogent delivered traffic only to the London VPs. We confirmed
that all traffic reached the London VP with traceroutes from one of
Cogent’s public looking glasses [10].
Google Public DNS: Direct Peering Preferred – For Google
Public DNS resolver (AS15169), we also observed a preferred re-
ceiving VP, this time located in South America. A reasonable ex-
planation for this behavior is that, at São Paulo IXP, Google had
a direct connection to our anycast testbed. Previous studies have
found that Google prefers to route packets entirely through their
global network whenever possible [2, 31]. Similar to the Cogent
case, from whichever node we probed Google Public DNS, a single
VP received all the answers.
To explore the impact of routing decisions, we performed the fol-
lowing test. From our testbed location in Japan, we probed Google
Public DNS with two separate packets: the first using the anycast
IP of the testbed as the source address, and the second using the
unicast (management) IP address of the same host. We received the
response to the first packet at our VP in Sao Paulo, with an RTT
of ∼120ms. The response to the unicast probe arrived at our VP in
Japan, with an RTT of ∼2ms.
These examples establish an open challenge for our methodology:
accommodating preferred routing strategies from large network
operators, especially in combination with local connectivity charac-
teristics of testbed VPs. Enriching the testbed’s connectivity, both
in terms of path diversity and number of VPs, will increase the
chance of observing multiple paths, thus increasing the probability
of success of our our methodology.
Routing Flaps and Load Balancing. Another routing phenom-
enon, which can mislead our method in the other direction, i.e.,
misclassifying unicast prefixes as anycast, are routing flaps and load
balancing (traffic engineering). Based on our analysis in §4.4, we
believe this is mostly likely to happen when we receive responses
at only two (or occasionally three) VPs. A key factor seems to be the
time that elapses between probing a target IP address from distinct
VPs. Currently, our implementation probes the entire hitlist from
one VP, then moves to probing from another VP. This cadence can
leave ∼13 minutes between pings from different VPs to the same
IP. Further investigation will improve our understanding of how
this gap allows routing flaps to mislead our inferences. One way to
compensate for this risk is to probe a single target IP from all VPs
before moving to the next target IP. Load balancing is harder to
identify and filter, but generally, using more VPs can prevent corner
cases where we receive packets at only 2 VPs. We did not identify
IMC ’20, October 27–29, 2020, Virtual Event, USA
Sommese, Bertholdo, Akiwate, Jonker, Rijswijk-Deij, Dainotti, Claffy and Sperotto
Probing Overhead #IPs
10 Tang. VPs
-
6.1M
6.1M
#ICMP
Sent
TN
1220M 100% 100%
200 Atlas VPs
6.1 M
-
11K
iGreedy as Ground-Truth
FN
TP
0%
iGreedy
MA2
0.1%
0.1%
Combo
Table 4: Comparison between iGreedy, MAnycast2 and a
combined approach (iGreedy for <=3VPs MAnycast2 results)
in terms of overhead, footprint and classification rate
FP
0%
61M 39.1% 99.9% 60.9%
63M 98.8% 99.9% 0.2%
any specific VPs pairs causing this problem. Repeated measure-
ments performed at different times/days could discriminate some
of these corner cases. For example, we repeated our Internet-wide
measurement on May 25, 2020, and were able to resolve 90% of the
incorrect classifications discussed in §4.3.
Regional and Topological Blindspots. Our method’s accuracy ap-
pears to vary by region, perhaps due to variation in density of
connectivity relative to different VPs in our testbed. Tangled has
relatively few nodes (10 in total), which may prevent detection
of regional anycast services. Latency-based approaches face simi-
lar challenges in detecting small anycast deployments. In general,
regional anycast services are challenging to detect and require a
widely distributed geographical infrastructure with many nodes.
5.2 Validation experiment with PEERING
In the interests of repeatability and reproducibility, and to under-
stand whether the open challenges we identify are independent
of the particular setup of our Tangled testbed, we performed an
experiment with MAnycast2 on the PEERING testbed [25].
We ran a measurement on September 11, 2020 using 7 PEERING
nodes. Although some nodes had multiple upstream providers that
could give us additional information about which route a response
took, since the current version of Verfploeter does not record Layer
2 information, we considered each PEERING node as a single VP.
The results show an overlap of 90% with the MAnycast2 measure-
ment performed from Tangled in May 2020 for answers received
on 4 or more VPs. We report additional results in Appendix §C.
The MAnycast2 measurement performed through PEERING de-
tected fewer anycast prefixes, confirming that the number and the
connectivity of VPs impacts the anycast detection capability. The ex-
periment on PEERING also detected Google Public DNS resolver as
unicast. Further inspection showed that all responses from Google
Public DNS reached the Amsterdam node of PEERING, which di-
rectly interconnected to Google via the AMS-IX route servers. A
follow-up experiment, withdrawing the announcement from the
Amsterdam node, showed that we were able to correctly detect
Google Public DNS resolver as anycast. This additional example
again illustrates the impact of routing policies and connectivity on
the MAnycast2 measurement.
5.3 Considerations on Applicability
If MAnycast2 receives answers at 4 or more VPs, we can safely
assume that an address is anycast, but our preliminary experiments
warn against this conclusion for the case of 2 or 3 VPs. However,
our methodology shows strong results when classifying unicast.
A possible use of our methodology is therefore to filter out, effi-
ciently and at scale, unicast addresses so that one can apply the
heavier-weight latency-based method on a smaller remaining set
of prefixes for which we are uncertain (2 or 3 VPs). Table 4 reports
for this combined approach the overhead in terms of measured IPs
with the different platforms, the traffic footprint in terms of ICMP
Echo requests generated, and the classification rates compared to
iGreedy and pure MAnycast2. The combined approach provides
classification results close to iGreedy with a substantially reduced
measurement overhead. We believe our methodology can therefore
significantly contribute to scaling anycast detection. A further im-
provement to MAnycast2 could be, when deployed on VPs with
multiple peers, to consider each incoming upstream connection as a
separate VPs. In this way, probes from different incoming routes can
identify an anycast target even if they are received at the same VP.
Finally, multiple peers will offer the opportunity of manipulating
routes (e.g., prepending, selective announcements, etc.).
6 CONCLUSION
We introduced MAnycast2, a new measurement methodology based
on the idea of using anycast IPs as VPs to launch active measure-
ments to candidate anycast destinations, in order to infer whether
a given /24 prefix is anycast. We compared preliminary results
obtained with our methodology with results of a state-of-the-art
latency-based methodology, and validated results against publicly
available ground-truth and confirmation from operators. This vali-
dation process allowed us to identify false positives and false nega-
tives that suggested open challenges in broader application of this
method. Our minimal false-negative rate suggests the substantial
value of our methodology in an IPv4-side census of anycast, because
it allows a first-pass quick detection to eliminate most unicast IPs,
leaving a far smaller list of anycast prefixes that a latency-based
methodology could then further confirm. Future improvements to
our methodology will focus on reducing the false-negative classifi-
cation rate by carefully considering differences in levels of connec-
tivity at different vantage points of our measurement framework.
We will also consider RTT data obtained when ping responses
arrive at the originating VP, which may enable geolocation and
enumeration of anycast deployments.
ACKNOWLEDGEMENTS
We thank our shepherd Ethan Katz-Bassett and the anonymous
reviewers for their insightful suggestions and feedback. We also
thank Wouter de Vries, Luuk Hendriks and Moritz Müller for soft-
ware support. We thank Johan ter Beest, Kyle Schomp, Duane Wes-
sels, Matt Calder, Marwan Fayed, Kabindra Shrestha, Bill Wood-
cock, and Geoffrey M. Voelker for their valuable time, insights,
and feedback. A special thank to Rui Bian and Hao Shuai for
providing updated data based on their paper on passive anycast
detection. This work uses measurements from RIPE Atlas (https:
//atlas.ripe.net), an open measurement platform operated by RIPE
NCC. This work was supported in part by: the NWO-DHS MAD-
DVIPR project (628.001.031/FA8750-19-2-0004); National Science
Foundation grants CNS-1764055, CNS-1903612, CNS-1705024,and
CNS-190151; DARPA Coop. Agg. HR00112020014; and the EU H2020
CONCORDIA project (830927).
MAnycast2 – Using Anycast to Measure Anycast
IMC ’20, October 27–29, 2020, Virtual Event, USA
AWS IP address ranges.
(Apr 2020).
https://
REFERENCES
[1] Amazon. 2020.
docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html
[2] T. Arnold, M. Calder, I. Cunha, A. Gupta, H. V. Madhyastha, M. Schapira, and
E. Katz-Bassett. 2019. Beating BGP is Harder than We Thought. In Proceedings
of the 18th ACM Workshop on Hot Topics in Networks (HotNets ’19). Association
for Computing Machinery, New York, NY, USA, 9–16. https://doi.org/10.1145/
3365609.3365865
[3] R. Austein. 2007. DNS Name Server Identifier (NSID) Option. RFC 5001. (Aug.
2007). https://doi.org/10.17487/RFC5001
[4] H. Ballani and P. Francis. 2005. Towards a Global IP Anycast Service. In
Proceedings of the 2005 Conference on Applications, Technologies, Architectures,
and Protocols for Computer Communications (SIGCOMM ’05). Association for
Computing Machinery, New York, NY, USA, 301–312. https://doi.org/10.1145/
1080091.1080127
[5] L. Bertholdo, J. M. Ceron, W. B. de Vries, R. de O. Schmitt, L. Zam-
benedetti Granville, R. van Rijswijk-Deij, and A. Pras. 2020. Tangled: A Co-
operative Anycast Testbed. (2020). arXiv:cs.NI/2008.12881
[10] Cogent. 2020. Cogent Looking Glass.
[6] R. Bian, S. Hao, H. Wang, A. Dhamdere, A. Dainotti, and C. Cotton. 2019. Towards
Passive Analysis of Anycast in Global Routing: Unintended Impact of Remote
Peering. SIGCOMM Comput. Commun. Rev. 49, 3 (Nov. 2019), 18–25. https:
//doi.org/10.1145/3371927.3371930
[7] D. Cicalese, J. Augé, D. Joumblatt, T. Friedman, and D. Rossi. 2015. Character-
izing IPv4 Anycast Adoption and Deployment. In Proceedings of the 11th ACM
Conference on Emerging Networking Experiments and Technologies (CoNEXT ’15).
Association for Computing Machinery, New York, NY, USA, Article 16, 13 pages.
https://doi.org/10.1145/2716281.2836101
[8] D. Cicalese, D. Joumblatt, D. Rossi, M. Buob, J. Augé, and T. Friedman. 2015. A
fistful of pings: Accurate and lightweight anycast enumeration and geolocation.
In 2015 IEEE Conference on Computer Communications (INFOCOM). IEEE, 2776–
2784. https://doi.org/10.1109/INFOCOM.2015.7218670
[9] D. Cicalese and D. Rossi. 2018. A Longitudinal Study of IP Anycast. SIG-
COMM Comput. Commun. Rev. 48, 1 (April 2018), 10–18. https://doi.org/10.1145/
3211852.3211855
(2020). https://www.cogentco.com/
lookingglass.php [Online; accessed 01-June-2020].
[11] W. B. de Vries, S. Aljammundefinedz, and R. van Rijswijk-Deij. 2020. Global-
Scale Anycast Network Management with Verfploeter. In NOMS 2020 - 2020
IEEE/IFIP Network Operations and Management Symposium. IEEE Press, 1–9.
https://doi.org/10.1109/NOMS47738.2020.9110449
[12] W. B. de Vries, R. de O. Schmidt, W. Hardaker, J. Heidemann, P-T de Boer, and
A. Pras. 2017. Broad and Load-Aware Anycast Mapping with Verfploeter. In
Proceedings of the 2017 Internet Measurement Conference (IMC ’17). Association
for Computing Machinery, New York, NY, USA, 477–488. https://doi.org/10.1145/
3131365.3131371
[13] X. Fan and J. Heidemann. 2010. Selecting Representative IP Addresses for Internet
Topology Studies. In Proceedings of the 10th ACM SIGCOMM Conference on Internet
Measurement (IMC ’10). Association for Computing Machinery, New York, NY,
USA, 411–423. https://doi.org/10.1145/1879141.1879195
[14] M. J. Freedman, K. Lakshminarayanan, and D. Mazières. 2006. OASIS: Anycast
for Any Service. In Proceedings of the 3rd Conference on Networked Systems Design
& Implementation - Volume 3 (NSDI’06). USENIX Association, USA, 10.
[15] P Gilmore. 2013. Serving at the Edge: Good for Performance, Good for mitigating
DDoS. (Apr 2013). https://blogs.akamai.com/2013/04/serving-at-the-edge-good-
for-performance-good-for-mitigating-ddos-part-ii.html
[16] B. Huffaker, M. Fomenkov, D. Plummer, D. Moore, and K. Claffy. 2002. Distance
Metrics in the Internet. In IEEE International Telecommunications Symposium
(ITS). IEEE, Brazil, 200–202.
[17] K. Lindqvist J. Abley. 2006. Operation of Anycast Services. RFC 4786. (Dec. 2006).
https://doi.org/10.17487/RFC4786
2526. (March 1999). https://doi.org/10.17487/RFC2526
[19] Z. Li, D. Levin, N. Spring, and B. Bhattacharjee. 2018. Internet Anycast: Perfor-
mance, Problems, & Potential. In Proceedings of the 2018 Conference of the ACM
Special Interest Group on Data Communication (SIGCOMM ’18). Association for
Computing Machinery, New York, NY, USA, 59–73. https://doi.org/10.1145/
3230543.3230547
[20] A. Lutu, M. Bagnulo, and O. Maennel. 2013. The BGP Visibility Scanner. In 2013
IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS).
115–120.
[21] D. R. McPherson, R. Donnelly, and F. Scalzo. 2011. Unique Origin Autonomous
System Numbers (ASNs) per Node for Globally Anycasted Services. RFC 6382.
(Oct. 2011). https://doi.org/10.17487/RFC6382
[22] S. McQuistin, S. P. Uppu, and M. Flores. 2019. Taming Anycast in the Wild Internet.
In Proceedings of the Internet Measurement Conference (IMC ’19). Association for
Computing Machinery, New York, NY, USA, 165–178. https://doi.org/10.1145/
3355369.3355573
[18] D. Johnson and S. Deering. 1999. Reserved IPv6 Subnet Anycast Addresses. RFC
[23] C. Partridge, T. Mendez, and W. Milliken. 1993. Host anycasting service. RFC
5Fhitlists/ [Online; accessed 05-May-2020].
1546. (Nov. 1993). https://doi.org/10.17487/RFC1546
credits/
[24] RIPE. 2020. RIPE Atlas - The Credit System. (2020). https://atlas.ripe.net/docs/
[25] B. Schlinker, T. Arnold, I. Cunha, and E. Katz-Bassett. 2019. PEERING: Virtualizing
BGP at the Edge for Research. In Proceedings of the 15th International Conference
on Emerging Networking Experiments And Technologies (CoNEXT ’19). Association
for Computing Machinery, New York, NY, USA, 51–67. https://doi.org/10.1145/
3359989.3365414
[26] R. Shaun. 2018. AWS Global Accelerator for Availability and Performance. (Nov
2018). https://aws.amazon.com/it/blogs/aws/new-aws-global-accelerator-for-
availability-and-performance/
[27] USC/ISI. 2020. USC/ISI ANT Datasets. (2020). https://ant.isi.edu/datasets/ip%
[28] L. Wei and J. Heidemann. 2017. Does anycast hang up on you?. In 2017 Network
Traffic Measurement and Analysis Conference (TMA). IEEE, 1–9. https://doi.org/
10.23919/TMA.2017.8002905
[29] S. Woolf and D. Conrad. 2007. Requirements for a Mechanism Identifying a Name
Server Instance . RFC 4892. (June 2007). https://doi.org/10.17487/RFC4892
[30] F. Xun, J. Heidemann, and R. Govindan. 2013. Evaluating anycast in the domain
name system. 2013 Proceedings IEEE INFOCOM (2013), 1681–1689. https://doi.org/
10.1109/INFCOM.2013.6566965
[31] K. Yap, M. Motiwala, J. Rahe, S. Padgett, M. Holliman, G. Baldus, M. Hines,
T. Kim, A. Narayanan, A. Jain, V. Lin, C. Rice, B. Rogan, A. Singh, B. Tanaka,
M. Verma, P. Sood, M. Tariq, M. Tierney, D. Trumic, V. Valancius, C. Ying, M.
Kallahalla, B. Koley, and A. Vahdat. 2017. Taking the Edge off with Espresso:
Scale, Reliability and Programmability for Global Internet Peering. In Proceedings
of the Conference of the ACM Special Interest Group on Data Communication