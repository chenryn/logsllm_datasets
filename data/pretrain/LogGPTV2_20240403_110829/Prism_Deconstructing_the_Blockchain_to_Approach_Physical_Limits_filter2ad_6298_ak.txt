by round Rℓ + r(ε) the leader block sequence up to level ℓ is permanent w.p 1 − ε.
□
Worst Case vs Average Case: The confirmation policy in Lemma D.3 is stated for the worst case adversarial
attack: when there are two (or more) proposer blocks at a given level have equal number of votes. Consider
an ‘average case’ scenario with two proposer blocks at a level, where the first block has 2m/3 votes and the
second block as m/3 votes. In this scenario one can intuitively see that we don’t need to guarantee permanence
of all the m votes but a weaker guarantee suffices: permanence of m/6 of the 2m/3 votes of first block. This
weaker guarantee can be achieved within a few rounds and translates to short latency in Prism.
log 8mr 2
max
ε
Corollary D.4. Bitcoin’s latency is the time required to mine a single honest 1
ε -deep block on a voter chain
rounds to provide 1 − ε reliability to confirm blocks and the
of Prism and it is lesser than
transactions in it.
2304
¯fv(1−2β)2 log 8r 2
max
ε
Definition D.5 (Leader-sequence-quality ). The (µ, k)-leader-sequence-quality property holds at round r if at
most µ fraction of the last k consecutive leader blocks on the proposer blocktree at round r are mined by the
adversary.
Similar to section C.1, let Hp[r] and Zp[r] be the number of blocks mined by the honest nodes and by the
adversarial node on proposer tree in round r. From section 2 along with sortition technique, we know that
Hp[r], Zp[r] are Poisson random variables with means (1 − β)fv ∆ and β fv ∆
11 respectively. Note that ran-
dom variables {Hp[r]}r ∈{0,rmax }, {Zp[r]}r ∈{0,rmax } are independent of each other. We now define auxiliary
random variables X p[r] and Y p[r] as follows: If at round r an honest party mines at least one block on the
proposer tree, then X p[r] = 1 , otherwise X p[r] = 0. If at round r an honest party mines exactly one block on
the proposer tree, then Y p[r] = 1, otherwise Y p[r] = 0. Let r′ = k
2 ¯f
Let us define the following events on the proposer blocktree:
.
′
, r] := E
p
1[r − r
(26)
We know that X p [r − r′, r] and Y p [r − r′, r] are the number of users in successful and uniquely successful
rounds respectively in the interval [r − r′, r] on proposer blocktree, and Zp [r − r′, r] is the number of proposer
blocks mined by adversary in the interval [r − r′, r]. These events have corresponding interpretation of the
events defined in Equations (18) and (23).
, r] ∩ E
p
3[r − r
, r] ∩ E
p
, r].
′
Lemma D.6 (Leader-seqence-qality). The (µ, k)-leader-sequence-quality property holds at round r for
7+2β
8 w.p at least 1 − 4r
maxe−(1−2β)2k/72.
2
µ =
Proof. Unlike the longest chain in Bitcoin, the leader sequence in Prism does not form a chain. Therefore,
one cannot directly use Lemma C.9 and we need to adapt its proof to prove the required property here.
− γ ¯fv8
108mr 2
maxe
11fv = fp
64
γ ¯fv (1−2β) log 8mr 2max
ε
= 8mr 2
maxe
− 8
1−2β
log 8mr 2max
ε
(1 − 2β)k
8
(cid:27)
(cid:2)r − r
(cid:2)r − r
(cid:2)r − r
(cid:26)
, r(cid:3) := 
, r(cid:3) :=(cid:8)Hp(cid:2)r − r
(cid:26)
, r(cid:3) :=
X p(cid:2)r − r
a,b≥0
p
E
1
p
E
2
p
E
3
Ep [r − r
′
′
′
′
, r(cid:3) 
′
′
k
6
2[r − r
′
Figure 14: The leader blocks in levels [ℓ∗, ℓ].
ℓ
Let r be the current round and ℓ be the last level on the proposer blocktree which has proposer blocks
at round r. Consider the k consecutive leader blocks on levels [ℓ − k, ℓ] := {ℓ − k + 1, · · · , ℓ} on the leader
sequence LedSeqℓ(r) and define:
the honest users mined the first proposer block on level ˜ℓ(cid:1)
∗ := max(cid:0) ˜ℓ ≤ ℓ − k + 1 s.t
Let r∗ be the round in which the first proposer block was mined on level ℓ∗ and define the interval S := {r :
r∗  ℓ − ℓ
∗ − H − H
∗ − 1 − H
∗ − 1 − (1 − µ)k.
′ − 1) + H
′
(28)
Refer Figure 14 for an illustration. From the chain growth Lemma C.7, we know that ℓ − ℓ∗ − 1 ≥ X p[r∗, r] and
combining this with Equation (28) gives us
Zp[r
, r] − (1 − µ)k.
, r] > X p[r
∗
(29)
r ≤rmax Ep [r − ˜r , r] and assume the event E p(r′) occurs.
. Define an event Ep(r′) := ˜r ≥r′
∗
Let r′ := k
2 ¯fv
Under the event E
p
1[r − r′, r] ⊇ E p(r′), we know that
′ − a, r + b] > Zp[r − r
Y p[r − r
′ − a, r + b] +
(1 − 2β)k
8
∀a, b ≥ 0.
26
Round 𝑟Round 𝑟∗Level ℓLevel ℓ∗Level ℓ−𝑘−1𝐻honest leader blocks𝐻′honest leader blocks and𝐻′adversarial proposer blocksLeader blocksℓ−ℓ∗−1−𝐻−𝐻′adversarial leader blocks.Adversarial leader blocksHonest leader blocksFigure 15
2[r − r′, r] ⊇ Ep(r′), from
The first proposer block on the level ℓ is mined before round r. Under the event E
p
Lemma C.6, the first proposer block on level ℓ − k + 1 was mined before round r − r′, and hence r∗ ≤ r − r′.
This combined with X p[r∗, r] ≥ Y p[r∗, r], gives us
∗
∗
, r] +
, r] > Zp[r
7+2β
8
X p[r
and this contradicts Equation (29) for µ =
fraction of
the leader blocks are mined by honest users. From Lemma D.1, we know that the event E p(r′) occurs w.p
1 − 4r
□
The leader sequence quality defined in D.5 is parameterized by two parameters r and k, whereas its coun-
terpart definition of chain quality in [9], is parameterized only by a single parameter k. Even though our
definition of ‘quality’ is a weaker, we show that it is suffices to ensure liveness.
. Therefore on the levels [ℓ − k, ℓ], at least 1−2β
8
36(1 − 2β)2, and this completes the proof.
maxe−γ k/2, where γ = 1
2
8
,
(1 − 2β)k
Proof of Theorem 4.2:
Proof. Let k := 2048
ε
27
ε
ε
=
1024
) and k1 := 8k1−2β
(1−2β)3 log( 32mrmax
. Using Lemma D.6 we know that w.p at least 1 − ε/4,
the last k1 leader blocks have at least k honest leader blocks. From Lemma C.6 and D.1, w.p at least 1 − ε/4, the
)
deepest of these k honest leader block was proposed before the round r− k
log( 32mrmax
2 ¯fv
and now using Theorem 4.1, this deepest honest leader block is permanent w.p 1 − ε/4. Therefore, the honest
transaction will be permanently added to the blockchain after k1 proposer blocks are mined. Using chain
rounds w.p 1− ε/4.
growth Lemma C.7, we know that the k1 proposer blocks will be mined in no more than 3k1¯fv
Therefore, w.p 1 − ε, the transaction will be part of the permanent leader sequence in
. Here k
2 ¯fv
(1−2β)3 ¯fv
3k1
¯fv
rounds.
log 32mrmax
3 × 214
(1 − 2β)3 ¯fv
Refer Figure 15 for an illustration. Note that the constants in Equation (30) have not be optimized for the sake
of readability. The scaling w.r.t 1 − 2β, ¯fv and log 1
□
E FAST LIST CONFIRMATION FOR PRISM: PROOF OF THEOREM 4.5 AND 4.6
E.1 Voter chain properties
In Appendix D, we proved the common-prefix and the leader-sequence-quality properties by requiring the
typical event defined in Equation (24) to hold for every voting chain, i.e. at the microscopic scale. The typicality of
is the main take away.
(30)
=
ε
	𝑝#LeaderblocksAdversarial leader blockHonestLeader block𝑘blocks and %&’̅)rounds since 𝑝#roundsTransaction 𝑡𝑥	proposedHonest proposerblock 𝑝#proposed.Includes𝑡𝑥Block 𝑝#	becomesaleaderblock.Confirm𝑡𝑥𝑘,blocks in at most -%.’̅)roundseach such event was obtained by averaging over rounds and as a consequence the confirmation of leader blocks
with 1 − ε guarantee required averaging over O(log 1
ε ) rounds. In this section we obtain faster confirmation
time by relaxing the notion of typicality to a notion of macroscopic typicality, one which concerns the mining
processes of a large fraction of the voter chains. This event guarantees macroscopic versions of the chain-
growth, common-prefix and chain-quality properties. That is, these properties are guaranteed to be satisfied