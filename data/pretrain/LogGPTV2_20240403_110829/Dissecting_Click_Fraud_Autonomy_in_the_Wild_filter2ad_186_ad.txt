### 5.2.1 Collection of the Basic Dataset
The basic dataset consists of 20,000 top-rated apps, with 10,000 apps each from Google Play and Huawei AppGallery, sorted by download numbers in each category as of July 2020. These apps were selected because the most popular apps account for a significant majority of app downloads, allowing us to focus on humanoid attack cases with the highest impact [36]. Additionally, Google Play and Huawei AppGallery are the largest app markets in the U.S. and China, respectively, ensuring that our study is representative. Unless otherwise specified, all analyses in this study are based on the basic dataset.

### 5.2.2 Humanoid Attack Cases Detected by ClickScanner
After analyzing the 20,000 apps, ClickScanner identified 170 suspicious click activities in 166 apps. Manual code review revealed 74 humanoid attack activities in 63 apps from Google Play and 140 humanoid attack activities in 94 apps from Huawei AppGallery. The precision rate of 94.6% over the 20,000 apps demonstrates the effectiveness of our classifier and fine-tuned parameters. Given that these fraudulent apps have been downloaded over 1.2 billion times, the humanoid attacks likely deceived both advertisers and users with fake ad clicks, resulting in significant financial losses for advertisers.

As of March 29, 2021, we found that 13 out of 63 fraudulent apps on Google Play and 26 out of 94 on Huawei AppGallery have been removed, but the remaining apps are still publicly available. We are in the process of liaising with relevant app vendors for responsible disclosure, and Google has acknowledged receipt of our report.

To quantify the real-world damage of humanoid attacks, we extracted the category (e.g., books, education, weather) of each fraudulent app as labeled by the app markets. The distribution of apps affected by humanoid attacks is detailed in Appendix B due to page limitations.

### 5.2.3 Comparison with Existing Detection Engines
To compare the performance of ClickScanner with existing click fraud detection schemes, we used VirusTotal, a platform integrating 60 anti-malware engines, including Kaspersky and McAfee, to recheck the ad fraud apps identified by ClickScanner. Despite the known instability of VirusTotal's performance, we uploaded the apps in July 2020 and January 2021 to ensure accuracy, and the results were consistent. Although VirusTotal is not specifically designed to identify humanoid attacks, it provides basic functionality to detect some types of ad frauds, such as "adware."

The results, shown in Figure 8, indicate that 58 and 57 apps in Google Play and Huawei AppGallery, respectively, bypassed all VirusTotal detection engines, and only 5 apps were detected by more than 7 engines. This highlights the superior performance of ClickScanner in detecting click fraud.

### 5.3 Humanoid Attacks in SDKs
A longitudinal study of the detected apps on Google Play revealed that fraudulent SDK injection plays an increasingly important role in humanoid attacks. For the 157 apps detected in the basic dataset, we manually analyzed the reasons for the attacks. Non-SDK-based cases involve direct injection of fraudulent click codes into the app's local code, while SDK-based cases generate fake clicks through third-party ad SDKs. Table 3 shows that 67% and 95.2% of fraudulent apps from Huawei AppGallery and Google Play, respectively, are SDK-based, indicating that SDK-based attacks are the dominant method in our dataset.

For the 63 fraudulent apps in Google Play, we collected all versions published from August 2017 to December 2020 to determine if the attacks were caused by SDKs. Figure 9 shows that the proportion of SDK-based attacks increased from 14% in June 2018 to 83% in August 2020. The most popular fraudulent SDKs are com.mo***, com.ku***, and com.ar***. We confirmed that 7 out of the 11 SDKs labeled by ClickScanner were created fraudulently by SDK developers before publishing, while the remaining 4 are not publicly available.

### 5.4 Analysis on the Extensive Dataset
To provide a comprehensive overview of humanoid attacks, we randomly collected 100,000 additional apps from Google Play, updated on January 1, 2021, that were not part of the basic dataset. ClickScanner identified 584 fraudulent apps. To confirm the existence of click fraud, we randomly sampled 60 apps (over 10%) and found 100% precision. A larger sample size would further validate the precision rate. Table 3 shows that the proportion of SDK-based cases in the extensive dataset is only 15.3%, compared to 83.4% in the basic dataset, suggesting that fraudulent SDKs are more likely to infect popular apps, and developers of popular apps generally do not add fraudulent codes themselves.

### 5.5 Time Overhead
To evaluate the time overhead of ClickScanner, we divided 120,000 apps from both datasets into five categories based on APK size: 0-10 MB, 10-50 MB, 50-100 MB, 100-200 MB, and above 200 MB. The average running time of ClickScanner was recorded, with a timeout set to 300 seconds. Only 742 out of 120,000 apps (0.62%) did not terminate within 300 seconds.

We compared ClickScanner's time overhead with other tools, such as FraudDetective, FraudDroid, MAdFraud, DECAF, AdSherlock, and Clicktok. Table 4 lists the average time overhead of ClickScanner and other tools. ClickScanner's average time cost for detecting humanoid attacks is about 18.4 seconds per app, which is significantly lower than the best case (120 seconds) in MAdFraud, demonstrating its practicality for real-world deployment.

### 6. Case Study
In this section, we analyze four representative humanoid attack cases discovered by ClickScanner and provide insights into how attackers commit mobile click fraud.

#### 6.1 Case 1: Humanoid Attacks After Userâ€™s Legitimate Actions
Some humanoid attacks follow the user's legitimate actions to evade traditional detectors. For example, the app com.co****.***********, a communication and social app with over 570 million downloads, displays an advertisement and generates random click coordinates when the user interacts with it. This makes the traffic patterns and click patterns highly similar to real human clicks, making detection difficult. The app and four other apps from the same company, with a total of over 658 million downloads, have caused significant losses for advertisers.

#### 6.2 Case 2: Humanoid Attack That Can Adaptively Avoid Detection
Some apps predefine fake click execution logic and receive configuration from remote servers, which can be changed at any time. The app com.m*.****.****, a photography app with over 9.5 billion downloads, loads a configuration URL and parses data such as "ctr," "cvr," "max_clk," and "max_imp" to control the number of fake clicks. When the number of fake clicks exceeds the maximum allowed, the attack stops, making it adaptive and difficult to detect.

```java
private static void performRandomClick(View AdWebView, ...) {
    float randWidth = new Random().nextFloat() * AdWebView.getWidth();
    float randHeight = new Random().nextFloat() * AdWebView.getHeight();
    MotionEvent v9 = MotionEvent.obtain(..., randWidth, randHeight, ...);
    AdWebView.dispatchTouchEvent(v9);
}

static final void onClick(AdWebView) {
    if (randNum > 0f && randNum > new Random().nextFloat()) {
        performRandomClick(AdWebView, ...);
    }
}
```

This code snippet shows how the app generates fake clicks with random axis values after meeting a random condition.

### Table 4: Runtime Overheads Evaluation of ClickScanner with Other Tools

| Tools             | avg_time(s) |
|-------------------|-------------|
| FraudDetective [20] | 300         |
| FraudDroid [14]     | 216         |
| MAdFraud [11]       | 120         |
| DECAF [28]          | 675         |
| AdSherlock [8]      | 600         |
| ClickScanner        | 18.4        |

APK Size Ranges:
- 0-20 MB: 16.37 s
- 20-50 MB: 20.82 s
- 50-100 MB: 16.11 s
- 100-200 MB: 16.79 s
- 200+ MB: N/A

This optimized text is more structured, clear, and professional, providing a coherent flow and detailed analysis.