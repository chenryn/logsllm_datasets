简单写一下审计了几个月这个 oa 的思路
首先肯定还是看 web.xml
对 jsp 文件的鉴权以及 oa 的补丁都在 SecurityFilter 中
E8 和 E9 的主要差别就是 E9 多了一个/api 的访问 也就是这个 servlet
这个 servlet 就是扫描 com.cloudstore 和 com.api 包下的@Path 注解的一个 rest 接口
SecurityFilter 初始化时会调用 weaver.security.filter.SecurityMain 的 initFilterBean 方法会
初始化安全规则
会加载这两个文件夹下对应 Ecology 版本的 XML 规则文件
后面这些代码太多了 就不一一去看 一个重要的点就是会去调用
weaver.security.rules.ruleImp 包下面的每一个类的 validate 方法
这些类差不多就是 E9 每
次打的补丁
我们可以在拿到补丁后直接看到这些洞的 URL 这里有一个小 tips 就是如果是
因为安全规则访问某个点导致的 404 在返回的 header 里会有一个 securityIntercept
泛微在这几个月修复了一系列由于 imagefilemanager 导致的 RCE 漏洞
我们先看到这次某微在 3 月份打的一个补丁
weaver.security.rules.ruleImp.SercurityRuleForCptInventory
这个补丁针对性的修复了我交给某平台的一个前台 RCE 漏洞 并且只是在我交洞的一个月
后 我没拿洞去打 也没给过任何人 所以 懂得都懂～
路径是/api/cpt/inventory/docptimpoptinventory
这里拿到 inventoryexcelfile 参数调用 getImageFileInfoById 方法拿到 ImageFileManager
随后调用 getImageFileName 验证了后缀名
我习惯在审计的时候把这些库文件丢到 jd-gui 里面全部反编译出来方便在 idea 里面搜索
在 com.engine.cpt.web.CptInventoryAction 类里 跟进
可以发现这里是拿到 inventoryexcelfile 参数然后查询数据库后将 imagefilename 拼接到了
路径中直接将文件写入到/cpt/ExcelToDB/目录中
所以我们现在需要找到一个前台的地方
进行上传 jsp 木马写入 imagefile 表中并且还要回显 imagefileid 当我把 e9 源码熟悉之后 直
接在所有 jsp 文件中搜索 new FileUpload(request,"utf-8") 由此找到了这个文件可以前台访
问 workrelate/plan/util/uploaderOperate.jsp 这个文件可以达到上面的要求
跟进这个方法
关键点在这个 uploadFiles 方法
跟进后就会发现这个类 weaver.file.FileUpload 的所有文件上传操作都会进行压缩之后写入
到 imagefile 数据表中 然后将文件放到 filesystem 目录 并且在文件上传的过程中不会验证
文件的后缀名 作为 imagefilename 字段写入到数据库中
到这里似乎已经可以写入 webshell 了 但是如果此时我们一步步的上传然后去访问会发现
直接 404 了 这是因为有对应的规则 访问/cpt/ExcelToDB/目录中的 jsp 文件必须登陆才能
访问 我们需要的是前台 RCE 所以必须得找一个前台的地方我们可以完全控制写入数据库
中的 imagefilename 参数 使其为/../../xxx.jsp 在 weaver.file.FileUpload 类的上传中 调用
的是某微自己写的文件上传解析类 weaver.file.multipart.MultipartParser
直接取最后一个斜杠后的内容为文件名 通过搜索 new ServletFileUpload 寻找调用
commons-fileupload 库来解析文件上传的地方 最后找到了
/api/fna/documentCompare/doCreateDocument 这个路径
这里可以将文件名原样的写入到 imagefile 表中 返回 imagefileid 具体的就不去跟了
最后还有一个点就是/api 路径的鉴权 我们上面所提到的这两个路径都是需要登陆后访问的
解决办法就是大写 /API/像这样访问就不需要登陆
/api/路由的鉴权在这个类中 335 行
可以看到这里拿到 requesturi 之后并没有转换大小写 导致/API/可以绕过这个鉴权
那为什么大写 api 还能同样到达这个路由呢 tomcat 是不可以的 之前我以为这是 windows
和 linux 系统的差异导致的 但是后面发现是 Resin 导致的
调 resin 的过程可以看这里 https://blog.csdn.net/HBohan/article/details/121163220
这里的 urlpattern 正则为^/api(?=/)|^/api\z 大小写不敏感 所以仍然可以匹配到这个 servlet
后续某微修复了大写 api
至此后面少了很多的前台 rce......
本文只是抛砖引玉，不对的地方希望师傅们指点指点。