    让我们在发送之前修改这个请求。将“Accept-Language”头的值更改为“de”。
GET / HTTP/1.1
Host: www.google.com
User-Agent: Mozilla/5.0
Accept-Language: de
Accept-Encoding: gzip, deflate
Connection: close
    Click
     Forward
    to send the request over to Google’s server. You should see Google’s home page in German appear in your browser’s window (
     Figure 4-10
    ).
    点击“转发”将请求发送到Google的服务器。您应该在浏览器窗口中看到以德语为主的Google主页（图4-10）。
       Figure 4-10
      : Google’s home page in German
      图4-10：Google在德国的主页
    If you’re a German speaker, you could do the test in reverse: switch the
     Accept-Language
    header value from
     de
    to
     en
    . You should see the Google home page in English. Congratulations! You’ve now successfully intercepted, modified, and forwarded an HTTP request via a proxy.
    如果您是德语说话者，可以反向进行测试：将Accept-Language标头值从de切换到en。您应该会看到英文版的Google首页。恭喜！ 您现在已成功拦截、修改和转发代理请求。
    The Intruder
    The Burp
     intruder
    tool automates request sending. If you are using the Community version of Burp, your intruder will be a limited, trial version. Still, it allows you to perform attacks like
     brute-forcing
    , whereby an attacker submits many requests to a server using a list of predetermined values and sees if the server responds differently. For example, a hacker who obtains a list of commonly used passwords can try to break into your account by repeatedly submitting login requests with all the common passwords. You can send requests over to the intruder by right-clicking a request in the proxy window and selecting
     Send to intruder
    .
    Burp intruder工具可以自动发送请求。如果您使用的是Burp的社区版本，那么您的intruder将是一个有限制的试用版本。但是，它可以让您执行像暴力破解这样的攻击，攻击者使用预先确定的值列表向服务器提交许多请求，看看服务器是否会有不同的响应。例如，一个黑客如果获得了一个常用密码的列表，可以通过反复提交所有常用密码的登录请求来尝试入侵您的帐户。您可以通过在代理窗口中右键单击请求并选择发送到intruder来将请求发送到intruder。
    The
     Target
    screen in the intruder tab lets you specify the host and port to attack (
     Figure 4-11
    ). If you forward a request from the proxy, the host and port will be prefilled for you.
    “Intruder”选项卡中的“目标屏幕”可让您指定攻击的主机和端口（图4-11）。如果您从代理服务器转发请求，主机和端口将自动填充。
       Figure 4-11
      : You can specify the host and port to attack on the Target screen.
      图4-11：您可以在目标屏幕上指定要攻击的主机和端口。
    The intruder gives several ways to customize your attack. For each request, you can choose the payloads and payloads positions to use. The
     payloads
    are the data that you want to insert into specific positions in the
    request. The
     payload positions
    specify which parts of the request will be replaced by the payloads you choose. For example, let’s say users log in to
     example.com
    by sending a POST request to
     example.com/login
    . In Burp, this request might look like this:
    入侵者提供了多种方式来定制你的攻击。对于每个请求，你可以选择使用的负载和负载位置。负载是你想要插入到请求特定位置的数据。负载位置指定请求的哪些部分将被你选择的负载替换。例如，让我们假设用户通过发送 POST 请求到 example.com/login 来登录 example.com。在 Burp 中，这个请求可能看起来像这样：
POST /login HTTP/1.1
Host: example.com
User-Agent: Mozilla/5.0
Accept: text/html,application/xhtml+xml,application/xml
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Connection: close
username=vickie&password=abc123
    The POST request body contains two parameters:
     username
    and
     password
    . If you were trying to brute-force a user’s account, you could switch up the
     password
    field of the request and keep everything else the same. To do that, specify the payload positions in the
     Positions
    screen (
     Figure 4-12
    ). To add a portion of the request to the payload positions, highlight the text and click
     Add
    on the right.
    POST请求正文包含两个参数：用户名和密码。如果您试图暴力破解用户的帐户，可以更改请求的密码字段并保持其他内容不变。要做到这一点，请在“位置”屏幕（图4-12）中指定有效载荷位置。要将请求的一部分添加到有效载荷位置，请突出显示文本，然后单击右侧的“添加”。
       Figure 4-12
      : You can specify the payload positions in the Positions screen.
      图4-12：您可以在位置屏幕中指定有效载荷的位置。
    Then, switch over to the
     Payloads
    screen (
     Figure 4-13
    ). Here, you can choose payloads to insert into the request. To brute-force a login password, you can add a list of commonly used passwords here. You can also, for example, use a list of numbers with which to brute-force IDs in requests, or use an attack payload list you downloaded from the internet.
    Reusing attack payloads shared by others can help you find bugs faster. We will talk more about how to use reused payloads to hunt for vulnerabilities in
     Chapter 25
    .
    然后，切换到有效负载屏幕（图4-13）。在此处，您可以选择要插入请求中的有效负载。要爆破登录密码，可以在此处添加常用密码列表。您还可以使用数字列表来爆破请求中的ID，或使用从Internet下载的攻击有效负载列表。重新使用别人分享的攻击有效负载可以帮助您更快地找到漏洞。我们将在第25章中更多地讨论如何使用重复使用的有效负载来寻找漏洞。
       Figure 4-13
      : Choose your payload list on the Payloads screen.
      图4-13：在载荷屏幕上选择您的载荷列表。
    Once you’ve specified those, click the
     Start attack
    button to start the automated test. The intruder will send a request for each payload you listed and record all responses. You can then review the responses and response codes and look for interesting results.
    一旦您指定了这些内容，点击“开始攻击”按钮以启动自动化测试。入侵者将为您列出的每个有效负载发送请求并记录所有响应。然后，您可以查看响应和响应代码，并寻找有趣的结果。
    The Repeater
    The
     repeater
    is probably the tool you’ll use the most often (
     Figure 4-14
    ). You can use it to modify requests and examine server responses in detail. You could also use it to bookmark interesting requests to go back to later.
    中继器可能是您最常使用的工具（图4-14）。您可以使用它修改请求并仔细检查服务器响应。您还可以将有趣的请求添加到书签中以便以后回到。
    Although the repeater and intruder both allow you to manipulate requests, the two tools serve very different purposes. The intruder automates attacks by automatically sending programmatically modified requests. The repeater is meant for manual, detailed modifications of a single request.
    尽管中继器和入侵者都允许您操作请求，但这两种工具的用途非常不同。入侵者通过自动发送程序化修改的请求自动化攻击。中继器是用于手动、详细修改单个请求的工具。
    Send requests to the repeater by right-clicking the request and selecting
     Send to repeater
    .
    通过右键点击请求并选择“发送到中继器”来发送请求。
    On the left of the repeater screen are requests. You can modify a request here and send the modified request to the server by clicking
     Send
    at the top. The corresponding response from the server will appear on the right.
    中继器屏幕左侧是请求。您可以在此修改请求，并在顶部单击“发送”将修改后的请求发送到服务器。相应的服务器响应将出现在右侧。
    The repeater is good for exploiting bugs manually, trying to bypass filters, and testing out different attack methods that target the same endpoint.
    中继器对于手动利用漏洞、尝试绕过过滤器、测试针对同一端点的不同攻击方法非常有用。
       Figure 4-14
      : The repeater is good for close examination of requests and manual exploitation.
      图4-14：中继器适用于对请求的近距离审查和手动利用。
    The Decoder
    The Burp
     decoder
    is a convenient way to encode and decode data you find in requests and responses (
     Figure 4-15
    ). Most often, I use it to decode, manipulate, and re-encode application data before forwarding it to applications.
    “Burp解码器是一种方便的编码和解码工具，可用于处理请求和响应中的数据（图4-15）。我经常使用它来解码、操作和重新编码应用程序数据，然后将其转发给应用程序。”
       Figure 4-15
      : You can use the decoder to decode application data to read or manipulate its plaintext.
      图4-15：您可以使用解码器将应用程序数据解码，以读取或操作其明文。
    Send data to the decoder by highlighting a block of text in any request or response, then right-clicking it and selecting
     Send to decoder
    . Use the drop-down menus on the right to specify the algorithm to use to encode or decode the message. If you’re not sure which algorithm the message is encoded with, try to
     Smart decode
    it. Burp will try to detect the encoding, and decode the message accordingly.
    通过在任何请求或响应中突出显示文本块，然后右键单击它并选择发送到解码器，将数据发送到解码器。使用右侧的下拉菜单指定用于编码或解码消息的算法。如果您不确定消息使用哪个算法进行编码，请尝试智能解码。Burp将尝试检测编码，并相应地解码消息。
    The Comparer
    The
     comparer
    is a way to compare requests or responses (
     Figure 4-16
    ). It highlights the differences between two blocks of text. You might use it to examine how a difference in parameters impacts the response you get from the server, for example.
    比较器是一种比较请求或响应的方式（图4-16）。它突出显示两个文本块之间的差异。例如，您可以使用它来检查参数差异如何影响您从服务器获取的响应。
    Send data over to the comparer by highlighting a block of text in any request or response, then right-clicking it and selecting
     Send to comparer
    .
    通过在任何请求或响应中突出显示一段文本块，然后右键单击该文本块并选择发送到比较器，将数据发送到比较器。
       Figure 4-16
      : The comparer will highlight the differences between two blocks of text.
      图4-16：比较器将突出显示两个文本块之间的差异。
    Saving Burp Requests
    You can save requests and responses on Burp as well. Simply right-click any request and select
     Copy URL
    ,
     Copy as curl command
    , or
     Copy to file
    to store these results into your note folder for that target. The Copy URL option copies the URL of the request. The Copy as curl command copies the entire request, including the request method, URL, headers, and body as a curl command. Copy to file saves the entire request to a separate file.
    您还可以在Burp上保存请求和响应。只需右键单击任何请求，然后选择"复制URL"，"复制为curl命令"或"复制到文件"，将这些结果存储到该目标的笔记文件夹中。 "复制URL"选项会复制请求的URL。"复制为curl命令"会将整个请求，包括请求方法、URL、头部和正文，复制为一个curl命令。"复制到文件"会将整个请求保存到一个单独的文件中。
    A Final Note on . . . Taking Notes
    Before you get started looking for vulnerabilities in the next chapter, a quick word of advice: organizational skills are critical if you want to succeed in bug bounties. When you work on targets with large scopes or hack multiple targets at the same time, the information you gather from the targets could balloon and become hard to manage.
    在你开始寻找下一章的漏洞之前，快速给你一个建议：组织能力对于成功参与漏洞赏金计划至关重要。当你在大型目标上工作或同时攻击多个目标时，你从目标中收集到的信息可能会爆炸式增长并变得难以管理。
    Often, you won’t be able to find bugs right away. Instead, you’ll spot a lot of weird behaviors and misconfigurations that aren’t exploitable at the moment but that you could combine with other behavior in an attack later on. You’ll need to take good notes about any new features, misconfigurations, minor bugs, and suspicious endpoints that you find so you can quickly go back and use them.
    通常，您可能无法立即发现漏洞。相反，您会发现许多奇怪的行为和错误配置，它们目前无法被利用，但您以后可能会将其与其他行为结合在一起进行攻击。您需要用心记录任何新功能、错误配置、小错误和可疑的终端节点，以便您可以快速回来使用它们。
    Notes also help you plan attacks. You can keep track of your hacking progress, the features you’ve tested, and those you still have to check. This prevents you from wasting time by testing the same features over and over again.
    笔记也可以帮助你规划攻击。你可以追踪你的黑客进度，你已经测试过的功能以及你还需要检查的功能。这可以防止你反复测试同样的功能而浪费时间。
    Another good use of notes is to jot down information about the vulnerabilities you learn about. Record details about each vulnerability, such as its theoretical concept, potential impact, exploitation steps, and sample proof-of-concept code. Over time, this will strengthen your technical skills and build up a technique repository that you can revisit if needed.
    笔记的另一个好用处是记录你学到的漏洞信息。要记录每个漏洞的细节，如理论概念、潜在影响、攻击步骤和样本概念证明代码等。随着时间的推移，这将加强你的技术能力和建立一个技术库，如果需要时可以重新查看。
    Since these notes tend to balloon in volume and become very disorganized, it’s good to keep them organized from the get-go. I like to take notes in plaintext files by using Sublime Text (
     https://www.sublimetext.com/
    ) and organize them by sorting them into directories, with subdirectories for each target and topic.
    由于这些笔记往往数量庞大且杂乱无章，从一开始就保持有组织是很好的。我喜欢使用 Sublime Text（https://www.sublimetext.com/）在纯文本文件中记录笔记，并通过将它们分类到目录中组织它们，为每个目标和主题创建子目录。
    For example, you can create a folder for each target you’re working on, like Facebook, Google, or Verizon. Then, within each of these folders, create files to document interesting endpoints, new and hidden features, reconnaissance results, draft reports, and POCs.
    例如，您可以为每个目标创建一个文件夹，比如Facebook、Google或Verizon。然后，在每个文件夹中，创建文件以记录有趣的终端、新的和隐藏的特性、侦察结果、草稿报告和 POCs。
    Find a note-taking and organizational strategy that works for you. For example, if you are like me and prefer to store notes in plaintext, you can search around for an integrated development environment (IDE) or text editor that you feel the most comfortable in. Some prefer to take notes using the Markdown format. In this case, Obsidian (
     https://obsidian.md/
    ) is an excellent tool that displays your notes in an organized way. If you like to use mind maps to organize your ideas, you can try the mind-mapping tool XMind (
     https://www.xmind.net/
    ).
    寻找适合自己的笔记和组织策略。例如，如果你像我一样喜欢将笔记存储为纯文本，可以寻找一个你感觉最舒适的集成开发环境（IDE）或文本编辑器。有些人喜欢使用Markdown格式记录笔记。在这种情况下，Obsidian是一个出色的工具，可以有序地显示笔记（https://obsidian.md/）。如果你喜欢使用思维导图来组织你的思路，可以试试思维导图工具XMind（https://www.xmind.net/）。
    Keep your bug bounty notes in a centralized place, such as an external hard drive or cloud storage service like Google Drive or Dropbox, and don’t forget to back up your notes regularly!
    将您的漏洞赏金笔记保存在集中的地方，比如外部硬盘或像Google Drive或Dropbox这样的云存储服务中，并不要忘记定期进行备份！
    In summary, here are a few tips to help you take good notes:
    以下是几个帮助您记好笔记的小贴士：
     Take notes about any weird behaviors, new features, misconfigurations, minor bugs, and suspicious endpoints to keep track of potential vulnerabilities.
     Take notes to keep track of your hacking progress, the features you’ve tested, and those you still have to check.
     Take notes while you learn: jot down information about each vulnerability you learn about, like its theoretical concept, potential impact, exploitation steps, and sample POC code.
     Keep your notes organized from the get-go, so you can find them when you need to!
     Find a note-taking and organizational process that works for you. You can try out note-taking tools like Sublime Text, Obsidian, and XMind to find a tool that you prefer.
5
      Web Hacking Reconnaissance
    The first step to attacking any target is conducting
     reconnaissance
    , or simply put, gathering information about the target. Reconnaissance is important because it’s how you figure out an application’s attack surface. To look for bugs most efficiently, you need to discover all the possible ways of attacking a target before deciding on the most effective approach.
    攻击任何目标的第一步是进行侦察，或者简单地说，收集有关目标的信息。侦察是重要的，因为它是您确定应用程序攻击面的方式。为了最有效地寻找漏洞，您需要在决定最有效的方法之前发现攻击目标的所有可能方法。
    If an application doesn’t use PHP, for instance, there’s no reason to test it for PHP vulnerabilities, and if the organization doesn’t use Amazon Web Services (AWS), you shouldn’t waste time trying to crack its buckets. By understanding how a target works, you can set up a solid foundation for finding vulnerabilities. Recon skills are what separate a good hacker from an ineffective one.
    如果一个应用程序不使用PHP，那么就没有理由为其测试PHP漏洞，如果组织不使用Amazon Web Services（AWS），您就不应该浪费时间尝试破解其存储桶。通过了解目标的工作原理，您可以为发现漏洞建立坚实的基础。侦察技能是区分好的黑客和无效的黑客的关键。