### 优化后的文本

#### 3.2. jQuery.min.php 样本分析
通过对 `jquery.min.php` 样本的分析，我们揭开了其内部结构。该样本使用了加密和混淆技术，解密后发现其封装了一个名为 `BossAPI` 的类。该类主要负责与后端 BOSS 层进行通信，并解析响应结果。

**图 12: BossAPI 类**
![](http://image.3001.net/images/20160118/14531261143011.png)

主程序包含三个主要流程：
1. **GET 请求为空时：** 如果 GET 请求参数为空，则构造同域名下的随机页面并访问，最终返回 404 错误。
   **图 13: GET 请求为空**
   ![](http://image.3001.net/images/20160118/14531261265829.png)
   
2. **c_utm 流程：** 用于接收来自 JS 层的请求，并随机转发给 BOSS 层的四台 C&C 服务器。C&C 服务器会根据请求中的参数下发恶意指令。
   **图 14: c_utm 流程**
   ![](http://image.3001.net/images/20160118/14531261363357.png)
   
3. **pi 流程：** 主要用于接收来自 KEEPER 层的流量，并转发给 BOSS 层 C&C 进行校验，以判定 BASE 层是否存活及是否存在伪造行为。
   **图 15: pi 流程**
   ![](http://image.3001.net/images/20160118/14531261497700.png)

此外，代码中还包含一个 XOR 加密解密类，但目前尚未在主程序中使用。同时，BASE 层与 BOSS 层之间的通信也采用了一定的反侦查策略。

#### 3.3. BOSS 层分析
BOSS 层受感染的机器数量相对较少。通过分析多个从 BASE 层采集到的 `jquery.min.php` 和 `jquery.1.9.1.min.php` 样本，我们获得了四个活跃的 BOSS 层 C&C IP 和一个闲置的 IP。这些 IP 的近期流量趋势如下：

**图 16: BOSS 层流量趋势**
![](http://image.3001.net/images/20160118/14531261879084.png)

这五个 IP 分属不同的国家，分别是美国、俄罗斯、立陶宛、法国和印度尼西亚，且都是被入侵的。根据数据显示，这些 IP 在 2015 年 11 月曾出现在 VVV 勒索攻击及其他恶意推广活动中。

**图 17: BOSS 层下发的恶意 JS**
![](http://image.3001.net/images/20160118/145312619545.png)

BOSS 层只有在需要发起攻击时才会下发攻击指令，平时则仅下发重定向请求，将用户重定向到 Google 首页。

**图 18: BOSS 层下发的正常跳转**
![](http://image.3001.net/images/20160118/14531262055108.png)

#### 3.4. KEEPER 层分析
除了上述几层，BBOSS 技术架构中还包括一层 KEEPER 层。截至目前，已发现多个 KEEPER 层 IP，分布在不同国家。这一层主要用于对 JS 层的 Webshell 进行探活、增删修改 JS 层恶意 JS 内容；对 BASE 层 Webshell、`jquery.min.php` 和 `jquery-1.9.1.min.php` 进行探活。同时，还会伴随有对 JS 层网站后台的暴力破解、弱口令猜解、插件漏洞利用、后台上传带后门插件等一系列入侵行为。

**图 19: 某 Zombie Keeper 流量趋势**
![](http://image.3001.net/images/20160118/14531262168879.png)

通过对最活跃的来自阿联酋的 IP 85.**.**.78 进行分析，发现该 Zombie Keeper 并不是每天都在工作，而是阶段性的休息，每次休息间隔时间不同。推测 Keeper 是由攻击者主动启动而非定时自动启动。例如，在 12 月 26 日至 12 月 29 日期间，该 Zombie Keeper 停止活动了四天。同时，对 JS 层的请求趋势与对 BASE 层的请求趋势基本相同。

**图 20: 某 Zombie Keeper 活跃时间矩阵分析**
![](http://image.3001.net/images/20160118/14531262231194.png)

根据近一个月内该 Zombie Keeper 每天的活跃时间，绘制了如上的时间矩阵图。横轴为日期，纵轴为小时。将不同天的数据重叠到一天，每个小时在不同天出现的次数越多，颜色越深，从而推断出攻击者每天最活跃时间为晚上 8 点左右持续到次日早上 8 点左右。显然，攻击者不在 UTC/GMT+8 时区。经过不断变化时区来拟合数据，最终发现当采用 UTC/GMT-5 时区时，不仅最活跃时间符合作息规律，且其他所有数据也都惊人的吻合。

**图 21: UTC/GMT-5 时区**
![](http://image.3001.net/images/20160118/14531262402442.png)

这也印证了前文提到的该 Zombie Keeper 在 12 月 26 日至 12 月 29 日的停止活动行为，事实上或许是攻击者在 UTC/GMT-5 时区下 12 月 25 日至 12 月 28 日期间去圣诞度假了。

#### 4. 自查方法
1. **检查前台页面** 是否被插入异常的 JS 代码；
   **图 22: 异常 JS 代码示例**
   ![](http://image.3001.net/images/20160118/14531262536380.png)
   
2. **检查后台源码** 是否被修改，特别是上述框架文件；
3. **检查后台** 是否新增异常的源码文件，是否新增 JS 目录及 `jquery.min.php` 等；
4. **检查站点访问记录** 是否存在暴力破解等异常访问。

#### 5. 修复建议
1. **审核** 是否有可疑的新增用户，修改站点密码；
2. **清除** 新增或修改的可疑代码；
3. **清理** 不再使用的插件，升级 CMS 及第三方插件到最新版本；
4. **增加** 如防暴力破解、WAF 等安全防护措施。

#### 6. 总结
综合上述分析和数据，发现 BBOSS 组织具有以下特点：
1. 控制超过 12 万网站，影响范围辐射全球；
2. 技术架构体系高度成熟，多级分层，更易控制和隐藏，具有很强的攻防对抗意识；
3. 业务灵活，高可配置，不定期更新；
4. 危害范围极大，影响数以千万互联网用户。