# Table 4. PlanetLab - Complex Scenarios - Classification Results

## (a) Two Attack Scenarios

| Attack Strategy | C4.5 (TPR, FPR) | SimpleCart (TPR, FPR) | LibSVM (TPR, FPR) |
|-----------------|-----------------|-----------------------|--------------------|
| 10% attackers   | (0.93, 0.07)    | (0.94, 0.06)          | (0.83, 0.16)       |
| 20% attackers   | (0.88, 0.11)    | (0.89, 0.10)          | (0.86, 0.13)       |
| 30% attackers   | (0.93, 0.07)    | (0.91, 0.08)          | (0.87, 0.13)       |

## (b) Sequence Attack Scenarios

| Attack Strategy | C4.5 (TPR, FPR) | SimpleCart (TPR, FPR) | LibSVM (TPR, FPR) |
|-----------------|-----------------|-----------------------|--------------------|
| A               | (0.93, 0.83)    | (0.93, 0.65)          | (0.93, 0.93)       |
| B               | (0.95, 0.95)    | (0.94, 0.52)          | (0.95, 0.95)       |
| C               | (0.86, 0.26)    | (0.84, 0.31)          | (0.78, 0.78)       |
| D               | (0.87, 0.21)    | (0.89, 0.22)          | (0.73, 0.71)       |
| E               | (0.95, 0.06)    | (0.96, 0.05)          | (0.95, 0.06)       |
| F               | (0.87, 0.14)    | (0.88, 0.12)          | (0.80, 0.19)       |

### Complex Attack Strategies
In addition to the single attacks, we also evaluate more complex sequences as shown in Table 4. Table 4(a) provides results for two-attack sequences. We observe that, similar to the single-attack scenarios, the support vector machines (LibSVM) perform significantly better on PlanetLab compared to the simulator. However, the decision trees (C4.5 and SimpleCart) did not perform as well on PlanetLab, especially for the 20% and 30% malicious node scenarios. Overall, the results are still satisfactory, with a TPR around 90% and an FPR not exceeding 11%.

Table 4(b) illustrates the classification results for the sequence attack strategies.

### Local Classification
We also analyze PlanetLab results where each individual node decides locally if an attack is taking place based only on its own information. The results are shown in Figure 8, using the C4.5 classification technique, which outperforms LibSVM, has similar performance to SimpleCart, and is widely adopted. Similar to the simulations, we evaluate the results when there are 10% malicious nodes and for a set of fifty randomly chosen nodes to provide a statistical overview. Box-and-whisker diagrams are used to illustrate the evaluation.

### Figure 8. PlanetLab Local Results
- **(a) Single attacks - TPR**
- **(b) Two attacks - TPR**
- **(c) Sequences - TPR**
- **(d) Single attacks - FPR**
- **(e) Two attacks - FPR**
- **(f) Sequences - FPR**

Figure 8 shows that C4.5 has a very high TPR in all different attack strategies, mirroring the results for global classification. Sequences A and B have high FPRs, similar to the global classification. Overall, except for sequences A and B, the results have good FPRs, indicating that the defined classification technique works effectively on a local basis in a real Internet testbed.

### 6. Related Work
Anomaly detection has been extensively used in developing intrusion detection systems [7, 19, 22]. For example, Bolzoni et al. [7] demonstrated how to automatically and systematically classify detected attacks by computing similarities in attack data payloads. One proposed method used support vector machines [36] and a rule learner algorithm for classification. While support vector machines are efficient when properly tuned, in our case, their potential usage was limited despite extensive tuning with common kernel functions. This finding aligns with Sommer et al. [33], who noted that machine learning techniques often fail in real-world IDS applications because a detected anomaly does not necessarily imply an attack.

A major challenge in any detection framework is the small drifts that can bias the detection process. Repetitive training [14, 25] might reduce false positives, but our work shows that such a process is not necessary for securing virtual coordinate systems.

Virtual coordinate systems have been protected against attacks in various ways. Kaafar et al. [20] use a trusted node set and anomaly detection with a Kalman filter to detect and discard malicious updates. Zage et al. [37] use anomaly detection in a decentralized VCS without trusted components, setting spatial and temporal thresholds for outlier detection. Veracity [32] introduces a verification set, where nodes attest to whether an update increases estimation error. These systems, however, are insecure against the frog-boiling attack [10, 11]. ANTIDOTE [31] mitigates frog-boiling attacks in a different context using principal component analysis, but this approach is computationally expensive and assumes a multidimensional input space, which does not apply to our one-dimensional data.

### 7. Conclusion
In this paper, we address the detection of different types of attacks against virtual coordinate systems, including inflation, deflation, oscillation, frog-boiling, and network-partition attacks. We propose supervised machine learning techniques, specifically decision trees (SimpleCart and C4.5) and support vector machines, to detect these attacks. A feature set is proposed, and the representation of this set in a multidimensional manifold allows for the prediction and decision task.

We validate our detection method through simulations using the King dataset for the p2psim simulator and real deployment on the PlanetLab testbed. The detection method is evaluated both globally, where all nodes' local information is analyzed together, and locally, where each node analyzes its own information. Decision trees outperform support vector machines, achieving a much lower false positive rate. The results for the sequence attack scenarios indicate that at most 25% of the data is needed to correctly classify normal behavior. Our proposed detection technique, the decision tree, outperforms existing outlier detection methods for all attack types. In future work, we plan to refine the defense and attack strategies using a game-theoretical model to find the most appropriate decision tree for different attacks. To our knowledge, this is the first work capable of mitigating all known attacks against virtual coordinate systems.

### References
1. Libsvm – a library for support vector machines. http://www.csie.ntu.edu.tw/~cjlin/libsvm/.
2. p2psim: A simulator for peer-to-peer protocols. http://pdos.csail.mit.edu/p2psim/.
3. Planetlab: An open platform for developing, deploying, and accessing planetary-scale services. http://www.planet-lab.org.
4. Weka—machine learning software in java. http://sourceforge.net/projects/weka/.
5. V. Aggarwal, A. Feldmann, and C. Scheideler. Can ISPs and P2P systems co-operate for improved performance? ACM SIGCOMM Computer Communications Review (CCR), 37(3):29–40, July 2007.
6. M. A.Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Real attacks on virtual networks: Vivaldi out of tune. In Proc. of LSAD, 2006.
7. D. Bolzoni, S. Etalle, and P. H. Hartel. Panacea: Automating attack classification for anomaly-based network intrusion detection systems. In Proceedings of the 12th International Symposium on Recent Advances in Intrusion Detection, RAID ’09, pages 1–20, 2009.
8. L. Breiman, J. H. Friedman, R. A. Olshen, and C. J. Stone. Classification and Regression Trees. Wadsworth International Group, Belmont, California, 1984.
9. C.J.C. Burges. A tutorial on support vector machines for pattern recognition. Data mining and knowledge discovery, 2(2):121–167, 1998.
10. E. Chan-tin, D. Feldman, and Y. Kim. The frog-boiling attack: Limitations of anomaly detection for secure network coordinate systems. In SecureComm, 2009.
11. E. Chan-Tin and N. Hopper. Accurate and provably secure latency estimation with treeple. In NDSS, 2011.
12. B. Cohen. Incentives build robustness in BitTorrent. In Proc. of P2P Economics, 2003.
13. M. Costa, M. Castro, R. Rowstron, and P. Key. PIC: practical Internet coordinates for distance estimation. In Proc. of ICDCS, 2004.
14. G. F. Cretu-Ciocarlie, A. Stavrou, M. E. Locasto, and S. J. Stolfo. Adaptive anomaly detection via self-calibration and dynamic updating. In RAID, 2009.
15. F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: a decentralized network coordinate system. In Proc. of ACM SIGCOMM, 2004.
16. B. Donnet, B. Gueye, and M. A. Kaafar. A survey on network coordinates systems, design and security. IEEE Communications Surveys and Tutorials, 2009.
17. P. Francis, S. Jamin, C. Jin, Y. Jin, D.y Raz, Y. Shavitt, and L. Zhang. IDMaps: A Global Internet Host Distance Estimation Service. IEEE/ACM Trans. Netw., 9:525, 2001.
18. K. P. Gummadi, S. Saroiu, and S. D. Gribble. King: Estimating latency between arbitrary internet end hosts. In Proc. of ACM SIGCOMM-IMW, 2002.
19. I. U. Haq, S. Ali, H. Khan, and S. A. Khayam. What is the impact of p2p traffic on anomaly detection? In Proceedings of the 13th international conference on Recent advances in intrusion detection, RAID’10, pages 1–17, 2010.
20. M. A. Kaafar, L.Mathy, C. Barakatand Kave Salamatian, T. Turletti, and W. Dabbous. Securing internet coordinate embedding systems. In Proc. of SIGCOMM, 2007.
21. M. A. Kaafar, L. Mathy, T. Turletti, and W. Dabbous. Virtual networks under attack: Disrupting internet coordinate systems. In Proc. of CoNext, 2006.
22. A. Lakhina, M. Crovella, and C. Diot. Diagnosing network-wide traffic anomalies. In SIGCOMM, 2004.
23. L. Lehman and S. Lerman. Pcoord: Network position estimation using peer-to-peer measurements. In Proc. of NCA, 2004.
24. L. Lehman and S. Lerman. A decentralized network coordinate system for robust internet distance. In Proc. of ITNG, 2006.
25. F. Maggi, W. Robertson, C. Kruegel, and G. Vigna. Protecting a moving target: Addressing web application concept drift. In RAID, 2009.
26. E. Ng and H. Zhang. Predicting internet network distance with coordinates-based approaches. In Proc. of INFOCOM, 2002.
27. T.S.E. Ng and H. Zhang. A network positioning system for the internet. In Proc. of USENIX, 2004.
28. M. Pias, J. Crowcroft, S. Wilbur, S. Bhatti, and T. Harris. Lighthouses for scalable distributed location. In Proc. of IPTPS, 2003.
29. J. R. Quinlan. C4.5: programs for machine learning. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 1993.
30. I. Rimac, V. Hilt, M. Tomsu, V. Gurbani, and E. Marocco. A Survey on Research on the Application-Layer Traffic Optimization (ALTO) Problem. RFC 6029 (Informational), October 2010.
31. B. I.P. Rubinstein, B. Nelson, L. Huang, A. D. Joseph, S. Lau, S. Rao, N. Taft, and J. D. Tygar. Antidote: understanding and defending against poisoning of anomaly detectors. In IMC, 2009.
32. M. Sherr, M. Blaze, and B. Thau Loo. Veracity: Practical secure network coordinates via vote-based agreements. In Proc. of USENIX ATC, 2009.
33. R. Sommer and V. Paxson. Outside the closed world: On using machine learning for network intrusion detection. Security and Privacy, IEEE Symposium on, 0:305–316, 2010.
34. M. Steiner and E. W. Biersack. Where is my peer? Evaluation of the vivaldi network coordinate system in azureus. In NETWORKING, 2009.
35. L. Tang and M. Crovella. Virtual landmarks for the internet. In Proc. of SIGCOMM, 2003.
36. V. Vapnik and A. Lerner. Pattern recognition using generalized portrait method. Automation and Remote Control, 24(6):774–780, 1963.
37. D. Zage and C. Nita-Rotaru. On the accuracy of decentralized network coordinate systems in adversarial networks. In Proc. of CCS, 2007.