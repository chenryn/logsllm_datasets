title:Encrypted DNS -\textgreater Privacy? A Traffic Analysis Perspective
author:Sandra Siby and
Marc Ju&apos;arez and
Claudia D&apos;ıaz and
Narseo Vallina-Rodriguez and
Carmela Troncoso
Encrypted DNS =⇒ Privacy?
A Trafﬁc Analysis Perspective
Sandra Siby∗¶, Marc Juarez†¶, Claudia Diaz‡, Narseo Vallina-Rodriguez§ and Carmela Troncoso∗
∗ EPFL, {sandra.siby, carmela.troncoso}@epﬂ.ch
† University of Southern California, PI:EMAIL
‡ imec-COSIC KU Leuven, PI:EMAIL
§ IMDEA Networks Institute, PI:EMAIL
Abstract—Virtually every connection to an Internet service is
preceded by a DNS lookup. Lookups are performed without any
trafﬁc-level protection, thus enabling manipulation, redirection,
surveillance, and censorship. To address these issues, large organi-
zations such as Google and Cloudﬂare are deploying standardized
protocols that encrypt DNS trafﬁc between end users and
recursive resolvers: DNS-over-TLS (DoT) and DNS-over-HTTPS
(DoH). In this paper, we examine whether encrypting DNS trafﬁc
can protect users from trafﬁc analysis-based monitoring and
censoring. We propose a novel feature set to perform trafﬁc
analysis attacks, as the features used to attack HTTPS or Tor
trafﬁc are not suitable for DNS’ characteristics. We show that
trafﬁc analysis enables the identiﬁcation of domains with high
accuracy in closed and open world settings, using 124 times less
data than attacks on HTTPS ﬂows. We also show that DNS-based
censorship is still possible on encrypted DNS trafﬁc. We ﬁnd that
factors such as end-user location, recursive resolver, platform, or
DNS client do negatively affect the attacks’ performance, but
they are far from completely stopping them. We demonstrate
that the standardized padding schemes are not effective. Yet,
Tor —which does not effectively mitigate trafﬁc analysis attacks
on web trafﬁc— is a good defense against DoH trafﬁc analysis.
I.
INTRODUCTION
Regular Domain Name System (DNS) requests have been
mostly sent in the clear [1]. This situation enables entities, such
as Internet Service Providers (ISPs), Autonomous Systems
(ASes), or state-level agencies, to perform user tracking, mass
surveillance [2, 3] and censorship [4, 5]. The risk of pervasive
surveillance and its consequences has prompted Internet
industry actors, and standardization bodies to
governance,
foster privacy protections [6, 7].
for DNS
these bodies have standardized two protocols: DNS-over-TLS
(DoT) [8] and DNS-over-HTTPS (DoH) [9]. These protocols
encrypt
the communication between the client and the
recursive resolver to prevent the inspection of domain names
by network eavesdroppers. These standarization bodies also
consider protection mechanisms to limit inference of private
information from trafﬁc metadata, such as the timing and size
¶ The authors contributed equally to this paper. M. Juarez did most of this
In particular,
research while at KU Leuven.
Network and Distributed Systems Security (NDSS) Symposium 2020
23-26 February 2020, San Diego, CA, USA
ISBN 1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24301
www.ndss-symposium.org
of network packets of the encrypted DNS communication.
These mechanisms protect against trafﬁc analysis by padding
trafﬁc [10], or by multiplexing the encrypted DNS trafﬁc with
other trafﬁc, e.g., when DoH and web HTTPS trafﬁc share a
single TLS tunnel (see §8.1 [9]).
During 2018, Google and Cloudﬂare launched public DoH
resolvers [11, 12], while Mozilla added DoH support
to
Firefox [13] and has been gradually rolling it out as the default
conﬁguration for Firefox users in the US since September
2019 [14]. These efforts aim to leverage DoH and DoT’s
capacity to enhance users’ browser trafﬁc security guaran-
tees [15]. Yet, it is known that even when communications are
encrypted, trafﬁc features such as volume and timing can reveal
information about their content [16, 17, 18, 19, 20, 21]. As of
today, existing evaluations of DoH implementations have fo-
cused on understanding the impact of encryption and transport
protocols on performance [22, 23], and on cost [24, 25].
In this paper, we aim to ﬁll this gap by studying the effective-
ness of trafﬁc analysis attacks in revealing users’ browsing
patterns from encrypted DNS. We focus our analysis on
DoH, as its adoption by large industry actors (e.g., Google,
Cloudﬂare, and Mozilla) makes it prevalent in the wild. For
completeness, we include a comparison of the protection pro-
vided by Cloudﬂare’s DoH and DoT resolvers. In our analysis,
we consider a passive adversary, as described in RFC 7626 [6],
who is placed between the client and the DNS resolver. The
adversary’s goal is to identify which web pages users visit,
to either perform surveillance or censorship. As the RFC
stresses, this adversary may be in “a different path than the
communication between the initiator [e.g., the client] and the
recipient [e.g., a web server]” [6], and thus can launch attacks
even if they do not see all the trafﬁc between endpoints.
We ﬁnd that features traditionally used in atttacks on web
trafﬁc [16, 17, 18, 19, 26, 27] are not suitable for encrypted
DNS trafﬁc. This is because DNS, as opposed to web trafﬁc,
is bursty, chatty, and is mostly composed of small packets. We
engineer a novel set of features that focuses on local trafﬁc
features, and enables successful
identiﬁcation of requested
websites on encrypted DNS. As encrypted DNS traces are
much smaller that their web trafﬁc counterparts, our techniques
require 124 times less data than state-of-the-art trafﬁc analysis
on web trafﬁc, allowing adversaries to run attacks at large
scale [28]. Furthermore, our new feature set on encrypted DNS
trafﬁc is as effective or more so than state-of-the-art attacks on
web trafﬁc in identifying web pages.
We also ﬁnd that differences between the environment used by
the adversary to train the attack (e.g., user location, choice of
client application, platform or recursive DNS resolver), and the
environment where the attack is actually deployed, negatively
affect
the performance of the attack. Most prior work on
trafﬁc analysis assumes the adversary knows the environment
where the attack will be deployed, but the adversary cannot
trivially obtain that information a priori. Our features allow
the adversary to infer that information and thus tailor the
attacks accordingly, maintaining high attack performance for
each speciﬁc environment.
Next, we evaluate existing trafﬁc analysis defenses, including
the standardized EDNS0 padding [10] —implemented by
Cloudﬂare and Google in their solutions—, and the use of
Tor [29] as transport, a feature available when using Cloud-
ﬂare’s resolver. We ﬁnd that, unless EDNS0 padding overhead
is large, current padding strategies cannot completely prevent
our attack. Also, while Tor offers little protection against web
page ﬁngerprinting on web trafﬁc [17, 18, 19, 30], Tor is an
extremely effective defense against web page ﬁngerprinting on
encrypted DNS trafﬁc.
Finally, we measure the potential of encryption to hinder DNS-
based censorship practices. We show that with encryption,
it is still possible to identify which packet carries the DNS
lookup for the ﬁrst domain. We quantify the collateral damage
of blocking the response to this lookup, thereby preventing
the user from seeing any content. We also show that,
to
minimize the effect of censorship on non-blacklisted pages,
censors must wait to see, on average, 15% of the encrypted
DNS trafﬁc.
Our main contributions are as follows:
• We show that the features for trafﬁc analysis existing
in the literature are not effective on encrypted DNS.
We propose a new feature set that results in success-
ful attacks on encrypted DNS and that outperforms
existing attacks on HTTPS (Section V-A).
• We show that web page ﬁngerprinting on DoH
achieves the same accuracy as web page ﬁngerprinting
on encrypted web trafﬁc, while requiring 124 times
less volume of data. We show that factors such
as end-user location, choice of DNS resolver, and
client-side application or platform, have a negative
impact on the effectiveness of the attacks, but do not
prevent them (Section V).
• We evaluate the trafﬁc analysis defenses proposed
in the standard and show that they are not effective.
We ﬁnd that in the case of encrypted DNS, contrary
to web trafﬁc, routing over Tor deters web page
identiﬁcation on encrypted DNS trafﬁc (Section VI).
• We evaluate the feasibility of DNS-based censorship
when DNS lookups are encrypted. We show the censor
can identify the packet with the ﬁrst domain lookup.
We quantify the tradeoff between how much content
from a blacklisted page the user can download, and
• We gather
how many non-blacklisted pages are censored as a side
effect of trafﬁc-analysis-based blocking (Section VII).
the ﬁrst dataset of encrypted DNS
trafﬁc collected in a wide range of environments
(Section IV).1
Impact Upon responsible disclosure of our attacks, Cloudﬂare
changed their DoH resolver to include padding. This work was
also invited to an IETF Privacy Enhancements and Assess-
ments Research Group Meeting, and will contribute to the next
RFC for trafﬁc analysis protection of encrypted DNS.
II. BACKGROUND AND RELATED WORK
In this section, we provide background on the Domain Name
System (DNS) and existing work on DNS privacy.
The Domain Name System (DNS) is primarily used for
translating easy-to-read domain names to numerical IP ad-
dresses2. This translation is known as domain resolution. In
order to resolve a domain, a client sends a DNS query to a
recursive resolver, a server typically provided by the ISP with
resolving and caching capabilities. If the domain resolution by
a client is not cached by the recursive name server, it contacts a
number of authoritative name servers which hold a distributed
database of domain names to IP mappings. The recursive
resolver traverses the hierarchy of authoritative name servers
until it obtains an answer for the query, and sends it back to the
client. The client can use the resolved IP address to connect to
the destination host. Figure 1 illustrates this process.
Enhancing DNS Privacy. Security was not a major consider-
ation in the ﬁrst versions of DNS, and for years DNS trafﬁc
was sent in the clear over (untrusted) networks. Over the
last few years, security and privacy concerns have fostered
the appearance of solutions to make DNS trafﬁc resistant to
eavesdropping and tampering. Several studies have empirically
demonstrated how the open nature of DNS trafﬁc is being
abused for performing censorship [33, 34] and surveillance [35,
2]. Early efforts include protocols such as DNSSEC [36]
and DNSCrypt [37]. DNSSEC prevents manipulation of DNS
data using digital signatures. It does not, however, provide
conﬁdentiality. DNSCrypt, an open-source effort, provides
both conﬁdentiality and authenticity. However, due to lack of
standardization, it has not achieved wide adoption.
In 2016,
the IETF approved DNS-over-TLS (DoT) [8] as
a Standards Track protocol. The client establishes a TLS
session with a recursive resolver (usually on port TCP:853 as
standardized by IANA [8]) and exchanges DNS queries and
responses over the encrypted connection. To amortize costs, the
TLS session between the client and the recursive DNS resolver
is usually kept alive and reused for multiple queries. Queries
go through this channel in the same manner as in unencrypted
DNS – chatty and in small volume.
In DoH, standardized in 2018, the local DNS resolver es-
tablishes an HTTPS connection to the recursive resolver and
encodes the DNS queries in the body of HTTP requests.
DoH considers the use of HTTP/2’s Server Push mechanism.
This enables the server to preemptively push DNS responses
that are likely to follow a DNS lookup [38], thus reducing
1Dataset and code at: https://github.com/spring-epﬂ/doh trafﬁc analysis
2Over time, other applications have been built on top of DNS [31, 32]
2
communication latency. As opposed to DoT, which uses a
dedicated TCP port for DNS trafﬁc and thus is easy to monitor
and block, DoH lookups can be sent along non-DNS trafﬁc
using existing HTTPS connections (yet potentially blockable
at the IP level).
There are several available implementations of DoT and DoH.
Since 2018, Cloudﬂare and Quad9 provide both DoH and
DoT resolvers, Google supports DoH, and Android 10 has
native support for DoT. DoH enjoys widespread support from
browser vendors. Firefox provides the option of directing DNS
trafﬁc to a trusted recursive resolver such as a DoH resolver,
falling back to plaintext DNS if the resolution over DoH fails.
In September 2019, Google announced support for DoH in
version 78 of Chrome [39]. Cloudﬂare also distributes a stand-
alone DoH client and, in 2018, they released a hidden resolver
that provides DNS over Tor, not only protecting lookups from
eavesdroppers but also providing anonymity for clients towards
the resolver. Other protocols, such as DNS-over-DTLS [40],
an Experimental RFC proposed by Cisco in 2017, and DNS-
over-QUIC [41], proposed to the IETF in 2017 by industry
actors, are not widely deployed so far.
Several academic works study privacy issues related to en-
crypted DNS. Shulman suggests that encryption alone may not
be sufﬁcient to protect users [42], but does not provide any
experiments that validate this statement. Our results conﬁrm
her hypothesis that encrypted DNS response size variations
can be a distinguishing feature. Herrmann et al. study the
potential of DNS traces as identiﬁers to perform user tracking,
but do not consider encryption [43]. Finally, Imana et al. study
privacy leaks on trafﬁc between recursive and authoritative
resolvers [44]. This is not protected by DoH, and it is out
of scope of our study.
III. PROBLEM STATEMENT
In this paper, we study if it is possible to infer which websites
a user visits by observing encrypted DNS trafﬁc. This infor-
mation is of interest to multiple actors, e.g., entities computing
statistics on Internet usage [45, 46], entities looking to identify
malicious activities [47, 48, 5], entities performing surveil-
lance [35, 2], or entities conducting censorship [49, 34].
We consider an adversary that can collect encrypted DNS traf-
ﬁc between the user and the DNS recursive resolver (red dotted
lines in Figure 1), and thus, can link lookups to a speciﬁc origin
IP address. Such an adversary could be present in the users’
local network, near the resolver, or anywhere along the path
(e.g., an ISP or compromised network router). As noted in the
RFC, this adversary may be “in a different path than the com-
munication between the initiator and the recipient” [6].
This adversary model also includes adversaries that only see
DoH trafﬁc, e.g., adversaries located in an AS that lies between
the user and the resolver but not between the user and the desti-
nation host. In order to conﬁrm that this adversary is possible,
we conducted an experiment where we ran traceroutes to a
subset of the websites we use in the study (1,445 websites),
and to two resolvers – Cloudﬂare and Google. We intersected
the AS sets and observed that the sets do not fully overlap
in 93% and 90% of the cases for Cloudﬂare and Google
respectively. Furthermore, we note that BGP hijacking attacks,
which are becoming increasingly frequent [50], can be used
to selectively intercept paths to DoH resolvers. In such cases,
Figure 1: DNS resolution: To visit www.google.com, a user
queries the recursive resolver for its IP. If the record is not
cached, the recursive resolver queries an authoritative resolver
and forwards the response to the client. The client uses the IP
in the response to connect to the server via HTTP. We consider
an adversary placed between the client and the resolver (i.e.,
observes the red dotted lines).
include web trafﬁc. This is critical
the adversary can only rely on DNS ﬁngerprinting to learn
which webpages are visited by a concrete user for monitoring,
or censorship [2, 35]. If the adversary is actually in the path
to the users’ destination, she could perform traditional website
ﬁngerprinting. However, we show that web page ﬁngerprinting
on only DoH trafﬁc achieves the same accuracy while requiring
(on average) 124 times less data than attacking HTTPS traces
that
to guarantee the
scalability of attacks to a large number of targets [28].
We assume that the adversary has access to encrypted DNS
trafﬁc traces that are generated when the user visits a website
via HTTP/S using DoH to resolve the IPs of the resources.
An encrypted DNS trace, which we also call DoH trace,
comprises the resolution of the visited website’s ﬁrst-party
domain, and the subsequent resolutions for the resources
contained in the website, e.g., images and scripts. For instance,
for visiting Reddit, after resolving www.reddit.com, the
client would resolve domains such as cdn.taboola.com,
doubleclick.net and thumbs.redditmedia.com,
among others.
We consider two adversarial goals. First, monitoring the
browsing behavior of users, which we study in Section V;
and, second, censoring the web pages that users visit, which
we address in Section VII. These two goals differ in their
data collection needs. Monitoring adversaries can collect full
traces to make their inferences as accurate as possible, as
they do not take any action based on their observations. In
contrast, censorship adversaries need to ﬁnd out which domain
is being requested as fast as possible so as to interrupt the
communication. Thus, they act on partial traces.
IV. DATA COLLECTION
To collect data we set up Ubuntu 16.04 virtual machines
with DoH clients that send DNS queries to a public DoH
resolver. We use Selenium3 (version 3.14.1) to automatically
visit a webpage from our list, triggering DNS lookups for its
resources. We restart the browser in between webpage visits
to ensure that the cache and proﬁle do not affect collection.
3https://www.seleniumhq.org/
3
Query:google.com?Response:172.217.168.4RecursiveResolvergoogle.com?HTTP Requests & ResponsesAuthoritativeServersDestinationHostClientgoogle.com?Table I: Overview of datasets. Our default conﬁguration is a
Desktop located in Lausanne where Firefox uses Cloudﬂare’s
client to query Cloudﬂare’s resolver. Changes are detailed in
the table (see Appendix for a detailed version).
Name
Identiﬁer
Desktop (Location 1)
Desktop (Location 2)
Desktop (Location 3)
Raspberry Pi
Firefox with Google resolver
Firefox with Cloudﬂare resolver
Firefox with Cloudﬂare client
Open World
DoH and web trafﬁc
DNS over Tor
Cloudﬂare’s EDNS0 padding