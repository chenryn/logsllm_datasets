Figure 11: Traﬃc balance on AS-to-AS links.
had a direct connection (though not necessarily a peering
relationship) with each other. The trend is similar to Fig-
ure 10: heavy contributors tend to have a traﬃc balance
that is roughly even.
We emphasize that our results should not be interpreted
as saying that NetSession’s traﬃc has no impact on ISPs.
Our data only describes the traﬃc, and not the cost that
ISPs may or may not charge each other for carrying that
traﬃc. This cost depends on a variety of other factors as
well, including the business relationships between the ISPs.
Nevertheless, it is likely that a large traﬃc imbalance would
eventually aﬀect the business relationship and/or the cost,
and our results do show that this particular problem does
not seem to be occurring.
6.2 Impact of user-managed machines
How strong is the mobility-related churn? Unlike
the servers in an infrastructure-based CDN, the NetSession
peers can move; for instance, users can install NetSession on
a laptop that they take to work in the morning and back
home in the evening. Overall, we observed connections from
133.7 million diﬀerent IP addresses in 31,190 diﬀerent au-
tonomous systems (ASes); 80.6% of the GUIDs connected
from a single AS, 13.4% from two diﬀerent ASes, and 6%
from more than two ASes. The DNs must update their di-
rectories to keep track of this mobility, but the corresponding
workload is moderate: on average, the control plane receives
20,922 new connections per minute.
 0 20 40 60 80 1001kB1MB1GB1TB1PBFraction of ASes (%)P2P bytes uploaded by an AS to other ASes (163GB,98%) 0 20 40 60 80 1001kB1MB1GB1TB1PB% of total uploadsP2P bytes uploaded by an AS to other ASes (163GB,10%) 0 20 40 60 80 1001101001k10k100k1M10MFraction of ASes (%)Number of IP addresses observed in ASLightHeavy1kB1MB1GB1TB1PB1kB1MB1GB1TB1PBContent uploaded to other ASesContent downloaded from other ASesHeavy uploadersLight uploaders1kB1MB1GB1TB1PB1kB1MB1GB1TB1PBBytes transferred from AS B to AS ABytes transferred from AS A to AS BAS pairs (A,B)40Figure 12: Expected sequence of secondary GUIDs
(left) and common nonlinear patterns.
As an aside, to get a rough sense of the corresponding
physical mobility, we computed for each GUID the two ge-
olocations that were farthest apart. We found that 77% re-
mained within 10 km, and that 23% were more than 10 km
apart. We note that the actual mobility may be somewhat
lower; for instance, if a user occasionally opens a VPN con-
nection to her corporate headquarters, the geolocation of the
latter may be far away.
Can malicious peers do damage? Unlike a centrally
managed infrastructure, which mostly needs to be protected
against external attackers, a peer-assisted CDN also needs
protection against attacks from within—each user physically
controls his or her machine and can change the software on
it at will. Previous work has shown that this can lead to
new vulnerabilities that are unique to hybrid architectures,
such as accounting attacks [1], in which compromised peers
misreport the amount of service they have provided, in an
attempt to distort the reports the CDN provides to its cus-
tomers. As mentioned in Section 3.5, NetSession relies on
data from the (trusted) edge servers to detect such attacks
and to ﬁlter out incorrect reports. Measures are in place
to make modiﬁcation of the client-side executable diﬃcult,
but we have seen users experiment with manually modifying
data in conﬁguration ﬁles.
GUID cloning and re-imaging: Even in the absence of
attacks, the designer of a hybrid CDN must consider more
failure modes than in an infrastructure-based system. Here,
we cannot provide an exhaustive discussion due to lack of
space, but we discuss an illustrative example. While analyz-
ing an earlier set of traces, we noticed that certain GUIDs
showed unusual behavior: they were logging in very fre-
quently, sometimes from IP addresses in diﬀerent countries
and even on diﬀerent continents. We initially suspected in-
ternational travel, but some users appeared to be traveling
at implausible speeds. We eventually suspected that some
installations had to be sharing the same GUID.
To investigate further, we modiﬁed the NetSession soft-
ware to support a random 160-bit “secondary GUID”, which
is chosen freshly every time the software starts (unlike the
primary GUID, which is chosen when the software is ﬁrst in-
stalled), and to report the last ﬁve secondary GUIDs to the
control plane upon login. A normal NetSession installation
would report overlapping sequences of secondary GUIDs,
such as 5 4 3 2 1, 6 5 4 3 2, and so on. We then col-
lected and analyzed the secondary GUIDs on a sample of 8
control plane servers, grouped them by primary GUID, and
constructed graphs in which vertices represent secondary
GUIDs and edges connect GUIDs that follow each other in
a login entry. In total, we obtained 17.7 million connected
graphs with at least three vertices.
99.4% of the graphs were linear chains (as in our example:
1 → 2 → 3 → . . .), which would be expected for a normal
NetSession installation. But the remaining 0.6% were trees,
indicating that the corresponding installation had at some
point been rolled back to an earlier state! Figure 12 shows
the most common nonlinear patterns: one long branch with
a single, one-vertex short branch (46.2%), two long branches
(6.2%), and several short or medium branches (23.5%). We
suspect that the ﬁrst pattern corresponds to a failed soft-
ware update and the second pattern to a restored backup;
the third pattern might be due to re-imaging, e.g., in an In-
ternet caf´e that restores its machines every night, or due to
cloning, e.g., in a large IT department that initializes new
workstations from a master image. We also observed sev-
eral highly irregular patterns for which we currently have no
explanation.
Recall that this example was merely meant to illustrate
that hybrid systems must deal with user actions that would
not normally occur in a centrally managed infrastructure.
However, this speciﬁc example was of some practical impor-
tance, since the number of distinct GUIDs plays a role in
NetSession’s internal accounting.
7. RELATED WORK
CDN measurement studies: There are several prior
studies of content-distribution systems, including both peer-
to-peer [13,26] and infrastructure [32] systems. The systems
studied include p2p streaming systems [15, 28, 34] and one
commercial hybrid CDN, LiveSky [36]. LiveSky delivers live-
streaming video, so its architecture is necessarily diﬀerent
from NetSession’s. To the best of our knowledge, the present
paper is the ﬁrst measurement study of a commercial hybrid
CDN for static content.
Hybrid CDNs: The idea of combining a CDN infrastruc-
ture with peer-to-peer elements has been explored both in
research [12, 22] and in industry [33, 34, 36]; see [20] for a
survey. The Antfarm system [22], in particular, has some
similarities to NetSession. Antfarm combines peer-to-peer
swarms with a coordinator, which carefully directs band-
width provided by the infrastructure servers to maximize
the aggregate bandwidth of the swarms. NetSession’s con-
trol plane plays a similar role but, unlike Antfarm’s coor-
dinator, it does not implement an explicit incentive mech-
anism. Work on the potential beneﬁts, speciﬁcally [16, 17],
has already been discussed in Section 5; likewise, work on the
inherent risks, such as [1], has been discussed in Section 6.
Impact on ISPs: Several papers [7, 17, 24, 35] have noted
a potential conﬂict of interest between hybrid CDNs and
ISPs because the former potentially increase the upstream
traﬃc, and thus the cost, of the latter. The work in [7]
demonstrated that a peer selection algorithm using CDN-
based DNS “hints” can signiﬁcantly reduce cross-ISP traﬃc.
However, the general conclusion in this work is that the
CDN can avoid a large impact on ISPs by using a simple
locality-aware peer selection strategy.
Incentives: Swarming protocols like BitTorrent [8] typi-
cally include explicit incentives because they assume that
users will not contribute bandwidth unless they can beneﬁt
from it. There is a large body of work on understanding
speciﬁc incentive systems, e.g., [18, 23], and on building sys-
tems that can deliver them more robustly, e.g., [19]; Dande-
lion [30] even introduces an infrastructure component simi-
lar to NetSession’s control plane, although its main purpose
is to implement a fair-exchange mechanism. The existence
and eﬃcient operation of NetSession does not contradict the
41basic assumptions on which these systems are based, but it
does suggest that the users’ actual motivations are more
complex, and that avoiding bandwidth contributions may
not be among their primary concerns.
8. CONCLUSION
In this paper, we have examined the risks and beneﬁts of
“hybrid” CDN architectures, which rely on a managed in-
frastructure but also include a peer-to-peer element to lever-
age resources contributed by clients. To determine how well
a practical system can deliver the beneﬁts (and avoid the
risks), we have presented a measurement study of NetSes-
sion, a large commercial CDN that uses this architecture.
Our results show that NetSession is able to deliver the
key beneﬁts of a hybrid architecture:
it can oﬄoad a high
fraction (70–80%) of the traﬃc to peers, but it can also oﬀer
good performance and high reliability. NetSession appears
to avoid a key risk—tilting the traﬃc balance of ISPs—but
it does face other challenges that are inherent in its hybrid
architecture, e.g., with respect to security or manageability.
Overall, our ﬁndings suggest that a hybrid architecture
is an attractive design point for a CDN. The infrastructure
and the peers can deliver many of their key beneﬁts, and
they can complement one another to avoid many of their
key weaknesses. NetSession’s performance shows what is
possible in this space.
Acknowledgments
We thank our shepherd Craig Partridge and the anonymous
reviewers for their comments and suggestions. This work
was supported in part by NSF grants CNS-1040672, CNS-
1054229, and CNS-1065130, by AFRL grants FA8750-11-1-
0262 and FA8750-10-2-0193, and by the Max Planck Society.
9. REFERENCES
[1] P. Aditya, M. Zhao, Y. Lin, A. Haeberlen,
P. Druschel, B. Maggs, and B. Wishon. Reliable client
accounting for hybrid content-distribution networks.
In Proc. NSDI, Apr. 2012.
[2] Akamai. EdgeScape brochure. http:
//www.akamai.com/dl/brochures/edgescape.pdf.
[3] Akamai Technologies. NetSession design principles.
http://www.akamai.com/html/solutions/client_
design_principles.html.
[4] R. Bhagwan, S. Savage, and G. M. Voelker.
Understanding availability. In Proc. IPTPS, 2003.
[5] A. R. Bharambe, C. Herley, and V. N. Padmanabhan.
Analyzing and improving a BitTorrent network’s
performance mechanisms. In Proc. INFOCOM, 2006.
[6] CAIDA. Archipelago measurement infrastructure.
http://www.caida.org/projects/ark/.
[7] D. R. Choﬀnes and F. E. Bustamante. Taming the
Torrent. In Proc. SIGCOMM, 2008.
[8] B. Cohen. Incentives build robustness in BitTorrent.
In Proc. P2PEcon, June 2003.
[9] S. A. Crosby and D. S. Wallach. An analysis of
BitTorrent’s two Kademlia-based DHTs. Technical
Report TR-07-04, Department of Computer Science,
Rice University, May 2007.
[10] J. Dilley, B. Maggs, J. Parikh, H. Prokop,
R. Sitaraman, and B. Weihl. Globally distributed
content delivery. IEEE Internet Computing,
6(5):50–58, Sept. 2002.
[11] M. Dischinger, A. Haeberlen, K. P. Gummadi, and
S. Saroiu. Characterizing residential broadband
networks. In Proc. IMC, Oct. 2007.
[12] M. J. Freedman. Experiences with CoralCDN: A
ﬁve-year operational view. In Proc. NSDI, 2010.
[13] K. P. Gummadi, R. Dunn, S. Saroiu, S. Gribble,
H. Levy, and J. Zahorjan. Measurement, modeling and
analysis of a peer-to-peer ﬁle-sharing workload. In
Proc. SOSP, Oct. 2003.
[14] L. Guo, S. Chen, Z. Xiao, E. Tan, X. Ding, and
X. Zhang. Measurements, analysis, and modeling of
BitTorrent-like systems. In Proc. IMC, 2005.
[15] X. Hei, C. Liang, J. Liang, Y. Liu, and K. Ross. A
measurement study of a large-scale P2P IPTV system.
Multimedia, IEEE Trans., 9(8):1672–1687, Dec. 2007.
[16] C. Huang, A. Wang, J. Li, and K. W. Ross.
Understanding hybrid CDN-P2P: Why Limelight
needs its own Red Swoosh. In NOSSDAV, 2008.
[17] T. Karagiannis, P. Rodriguez, and K. Papagiannaki.
Should Internet service providers fear peer-assisted
content distribution? In Proc. IMC, 2005.
[18] D. Levin, K. LaCurts, N. Spring, and
B. Bhattacharjee. BitTorrent is an auction: Analyzing
and improving BitTorrent’s incentives. In Proc.
SIGCOMM, 2008.
[19] H. C. Li, A. Clement, M. Marchetti, M. Kapritsos,
L. Robison, L. Alvisi, and M. Dahlin. FlightPath:
Obedience vs. choice in cooperative services. In Proc.
OSDI, 2008.
[20] Z. Lu, Y. Wang, and Y. R. Yang. An analysis and
comparison of CDN-P2P-hybrid content delivery
system and model. JCM, 7(3):232–245, 2012.
[21] W. E. Mackay. Triggers and barriers to customizing
software. In Proc. CHI, Apr. 1991.
[22] R. S. Peterson and E. G. Sirer. Antfarm: eﬃcient
content distribution with managed swarms. In Proc.
NSDI, 2009.
[23] M. Piatek, T. Isdal, T. Anderson, and
A. Krishnamurthy. Do incentives build robustness in
BitTorrent? In Proc. NSDI, 2007.
[24] M. Piatek, H. V. Madhyastha, J. P. John,
A. Krishnamurthy, and T. Anderson. Pitfalls for
ISP-friendly P2P design. In Proc. HotNets, 2009.
[25] J. Rosenberg, R. Mahy, P. Matthews, and D. Wing.
Session Traversal Utilities for NAT (STUN). RFC
5389, Oct. 2008.
[26] S. Saroiu, K. P. Gummadi, R. J. Dunn, S. D. Gribble,
and H. M. Levy. An analysis of Internet content
delivery systems. In Proc. OSDI, 2002.
[27] S. Saroiu, K. P. Gummadi, and S. Gribble. A
measurement study of peer-to-peer ﬁle sharing
systems. In Proc. MMCN, Jan. 2002.
[28] T. Silverston and O. Fourmaux. Measuring P2P IPTV
systems. In Proc. NOSSDAV, 2007.
[29] M. Sirivianos, J. H. Park, R. Chen, and X. Yang.
Free-riding in BitTorrent networks with the Large
View exploit. In Proc. IPTPS, Feb. 2007.
[30] M. Sirivianos, J. H. Park, X. Yang, and S. Jarecki.
Dandelion: Cooperative content distribution with
robust incentives. In Proc. USENIX ATC, 2007.
[31] J. Spool. Do users change their settings?
http://www.uie.com/brainsparks/2011/09/14/
do-users-change-their-settings/.
[32] K. Sripanidkulchai, B. Maggs, and H. Zhang. An
analysis of live streaming workloads on the Internet.
In Proc. IMC, 2004.
[33] Velocix. Network architecture. http:
//www.velocix.com/network_architecture.php.
[34] L. Vu, I. Gupta, K. Nahrstedt, and J. Liang.
Understanding overlay characteristics of a large-scale
peer-to-peer IPTV system. ACM Tr. Multim. Comp.
Comm. Appl., 6:31:1–31:24, 2010.
[35] H. Xie, R. Yang, A. Krishnamurthy, Y. Liu, and
A. Silberschatz. P4P: Provider portal for applications.
In Proc. SIGCOMM, 2008.
[36] H. Yin, X. Liu, T. Zhan, V. Sekar, F. Qiu, C. Lin,
H. Zhang, and B. Li. Design and deployment of a
hybrid CDN-P2P system for live video streaming:
experiences with LiveSky. In Proc. MM, 2009.
42