Executions of functions in YODA are modeled as transaction
driven state transitions. We use Ψ to denote a Deterministic
State Transition Machine
(Possibly Turing complete). For-
mally, we denote this as σ∗ ← Ψ(σ, τ ) where σ∗ is the state
of the contract after executing Ψ.
Intensive Transactions. Intensive Transactions (IT) are trans-
actions which cannot be executed on-chain due to either of two
problems: its execution time exceeds the typical interspacing
between blocks, or it competes with PoW time (the Veriﬁer’s
Dilemma). The ﬁrst problem can occur in permissioned ledgers
such as Hyperledger, Quorum, R3-Corda etc., and both prob-
lems in permissionless blockchains such as Ethereum and Bit-
coin. The exact deﬁnition of an IT will depend on parameters
of the blockchain system under consideration. Transactions
which are not ITs are called non-ITs.
We give one example of a IT for Ethereum using the concept
of gas, a measure of cost of program execution [6]. Ethereum
associates a ﬁxed cost with each machine level instruction
that a smart contract executes and enforces the constraint that
all transactions included in a block can consume a maximum
combined gas of blockGasLimit which is set to prevent the
Veriﬁer’s Dilemma. Every time a transaction τ is broadcast, its
creator speciﬁes τ.gasLimit, an upper bound on the gas it is
expected to consume. Clearly τ.gasLimit  th1 where th1 > 0.50. YODA
conﬁscates the deposit of all ES nodes for which
 ln((1 − β)/β), then the SPRT chooses Hi. This is