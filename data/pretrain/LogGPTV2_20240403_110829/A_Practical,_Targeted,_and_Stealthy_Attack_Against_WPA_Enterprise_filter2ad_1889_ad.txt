physical layer, achieving stealthy and targeted attacks. Pro-
posals in the literature against evil twins fall into several
categories, none of which is enough to prevent our attack.
Secure device pairing [40, 32, 23] seeks to use properties in
or around the devices that will be communicating to estab-
lish their identity. These approaches require line-of-sight
access to the access point, or assume the attacker can’t co-
locate with the device. Although our attack is capable of
attacking long-range targets, it can also be placed close to
an AP or client. Dedicated hardware could render the at-
tack less conspicuous, and could allow for deployment with
plug devices or smaller, making its physical presence hard
to detect.
Protocols relying on trust-on-ﬁrst-use assume that the
ﬁrst time a network is conﬁgured, the environment is secure.
Our attack, however, exploits this assumption by creating a
new network to trust as needed and, as such, trust-on-ﬁrst-
use approaches and similar are vulnerable [4, 22].
Wireless intrusion prevention systems (WIPS) capture
packets and search for attack patterns [13]. When one is
found, the WIPS alerts a supervisor and may terminate the
overheard exchanges. However, our attack involves pos-
ing as a legitimate access point to the client and can even
involve spooﬁng a jammed access point hardware address.
Therefore, from the perspective of a WIPS, our attack looks
no different from a normal association.
Device ﬁngerprinting assumes the evil twin hardware
differs from the victim deployment and sends malformed
probe packets to elicit responses from the twin, which will
be compared against a device table [7]. This approach re-
quires the evil twin to respond to packets from the probe.
Our targeted jamming and response approach requires the
probe to know the attack target beforehand, while our use
of directional antennas forces the probe to co-locate with
the victim, limiting its usefulness. In addition, an attacker
using the same hardware as the victim is undetectable under
this approach.
Password-based authentication A substantial body of
work in the security literature has studied attacks against
password-based authentication, from the popular John the
Ripper [37] that relies of lists of common words, to time-
space trade-offs approaches culminating in the well-known
rainbow table [25, 36] to probabilistic approaches such
as Markov models [34] and context-free grammars [48]
derived from public password lists.
In the WPA world,
wpacracker is a recent commercial effort focused on bring-
ing cloud resources to bear on the problem of cracking
WPA2-PSK passwords [31]. We note, however, that in
wpacracker’s target challenges are exchanged between two
nodes with a shared secret. Our work, however, is an end-
to-end attack against WPA Enterprise networks. The most
signiﬁcant similarity between the two efforts is their use of
cloud computing to parallelize the plaintext recovery pro-
cess.
While our attack relies upon a robust password cracking
component to successfully recover WPA Enterprise pass-
phrases, it is agnostic and, therefore, orthogonal to the un-
derlying technique used. In our current prototype, we make
use of parallel DES cracking techniques on GPUs and can
use cloud computing nodes.
User interface attacks The attack we describe leverages
vulnerabilities in user interfaces that fail to convey impor-
tant security-relevant information to the user. Attacks in
this vein have been known since the early days of multi-user
computing, where mechanisms such as secure attention se-
quences – e.g., the now-infamous CTRL-ALT-DELETE –
were introduced to establish a trusted path between the user
and the operating system.
The particular vulnerabilities exposed by our work bear
resemblance to a number of attacks that have been launched
against the web browser, where the URL plays a similar role
to a wireless network SSID in that users make trust deci-
sions based upon the reputation of a particular domain or
network name. In particular, homograph attacks [19] have
been used to mount phishing attacks against users that ex-
pect to visit a trusted domain by tricking them into vis-
iting a site with a similar-appearing domain name by ex-
ploiting similarities between glyphs in a character set –
e.g., paypa1.com vs. paypal.com – or across character
sets [46]. Our attack uses similar techniques, although an
important difference in the context of wireless SSIDs is the
general lack of delimiters, allowing for the use of invisible
and non-printable characters.
Subverting the SSL/TLS PKI infrastructure that is relied
upon by HTTPS to verify the authenticity of web servers
is an important class of web security attacks that mirrors –
to some extent – our user interface attacks in the context of
WPA Enterprise. SSL/TLS has recently suffered a number
of issues, such as the questionable trustworthiness of some
certiﬁcate authorities [14, 16] that has led to the issuance
of malicious, but correctly signed, certiﬁcates. Another in-
teresting class of attack involves browser URL spooﬁng by,
for example, creating SSL certiﬁcates that spoof trusted do-
mains in vulnerable browsers by injecting null bytes in the
certiﬁcate common name ﬁeld [30].
8 Conclusions
This paper presents a novel wireless attack against WPA
Enterprise networks. The key insight behind our attack
is that the combination of cross-layer capabilities such as
stealthy jamming using software radios, the inadequacy of
wireless user interface mechanisms in popular commod-
ity operating systems, and the insecure trust model used
in wireless authentication makes end-to-end attacks against
wireless network authentication feasible in practice. Our
user experiments demonstrate that the attack is highly ef-
fective in practice and very difﬁcult for victims to detect.
We are the ﬁrst to show signiﬁcant deﬁciencies in wire-
less management user interfaces for commodity operating
systems, and also the ﬁrst to highlight the weak binding
between wireless network SSIDs and authentication server
certiﬁcates. We described a prototype implementation of
the attack, analyzed its effectiveness and cost, and discussed
countermeasures that should be adopted.
Acknowledgements
This material is based upon work supported by the Na-
tional Science Foundation under Grant No. CNS-0915985.
References
[1] G. Agosta, A. Barenghi, F. D. Santis, and G. Pelosi. Record
Setting Software Implementation of DES Using CUDA. In
Proceedings of the International Conference on Information
Technology: New Generations, pages 748–755. IEEE Com-
puter Society, 2010.
[2] Aircrack. Aircrack-ng. http://www.aircrack-ng.
org/, 2012.
[3] Amazon. Amazon Elastic Cloud Computing (EC2). http:
//aws.amazon.com/ec2/, 2012.
[4] K. Bauer, H. Gonzales, and D. McCoy. Mitigating Evil Twin
Attacks in 802.11. In Proceedings of the Performance, Com-
puting and Communications Conference, pages 513–516,
December 2008.
[5] BBN Technologies.
802.11b Transmitter/Receiver.
https://www.cgran.org/wiki/BBN80211, 2008.
[6] A. Bittau, M. Handley, and J. Lackey. The Final Nail in
WEP’s Cofﬁn. Security and Privacy, IEEE Symposium on,
0:386–400, 2006.
[7] S. Bratus, C. Cornelius, D. Kotz, and D. l. Peebles. Active
In Proceed-
behavioral ﬁngerprinting of wireless devices.
ings of the ﬁrst ACM conference on Wireless network secu-
rity, WiSec ’08, pages 56–61, New York, NY, USA, 2008.
ACM.
13
[8] M. Cagalj, S. Capkun, and J.-P. Hubaux. Wormhole-Based
Antijamming Techniques in Sensor Networks. IEEE Trans-
actions on Mobile Computing (TMC), 2007.
[9] L. Cai, K. Zeng, H. Chen, and P. Mohapatra. Good Neigh-
bor: Ad hoc Pairing of Nearby Wireless Devices by Multiple
Antennas. In Network and Distributed System Security Sym-
posium (NDSS), 2011.
[10] C. Castelluccia and P. Mutaf. Shake them up!: a movement-
based pairing protocol for cpu-constrained devices. In Mo-
biSys, pages 51–64, 2005.
[11] B. Charles. mschapv2acc, a proof of concept of MS-CHAP-
V2 auditing and cracking tool. http://code.google.
com/p/mschapv2acc/, 2010.
[12] J. Chiang and Y.-C. Hu. Cross-layer jamming detection and
mitigation in wireless broadcast networks. In Proceedings
of MobiCom, 2007.
[13] Cisco. Cisco Adaptive Wireless IPS Software. http://
www.cisco.com/en/US/products/ps9817, 2011.
Incident.
Comodo Report
[14] Comodo,
Inc.
of
https://www.comodo.com/Comodo-Fraud-
Incident-2011-03-23.html, 2011.
[15] J. Damsgaard, M. A. Parikh, and B. Rao. Wireless commons
perils in the common good. Communications of the ACM,
49(2):104–109, February 2006.
[16] Electronic Frontier Foundation.
A Post Mortem
https:
the
Iranian DigiNotar Attack.
on
//www.eff.org/deeplinks/2011/09/post-
mortem-iranian-diginotar-attack, 2011.
[17] Ettus Research. Universal Software Radio Peripheral.
http://www.ettus.com/, 2012.
[18] FreeRADIUS Project.
FreeRADIUS RADIUS Server.
http://freeradius.org/, 2012.
[19] E. Gabrilovich and A. Gontmakher. The Homograph Attack.
Communications of the ACM, 45(2), February 2002.
[20] GNU Radio Project. GNU Radio. http://gnuradio.
org, 2012.
[21] S. Gollakota, N. Ahmed, N. Zeldovich, and D. Katabi.
In Proceedings of the
Secure In-Band Wireless Pairing.
USENIX Security Symposium, 2011.
[22] H. Gonzales, K. Bauer, J. Lindqvist, D. McCoy, and
D. Sicker. Practical Defenses for Evil Twin Attacks in
802.11. In Proceedings of the IEEE Global Telecommuni-
cations Conference (GLOBECOM), pages 1–6, December
2010.
[23] M. Goodrich, M. Sirivianos, J. Solis, G. Tsudik, and
E. Uzun. Loud and Clear: Human-Veriﬁable Authentication
In Proceedings of the IEEE Internation
Based on Audio.
Conference on Distributed Computing Systems, page 10,
2006.
[24] T. Guneysu, T. Kasper, M. Novotny, C. Paar, and A. Rupp.
Cryptanalysis with COPACOBANA. IEEE Transactions on
Computers, 57:1498–1513, 2008.
[25] M. Hellman. A Cryptanalytic Time-Memory Trade-Off.
IEEE Transactions on Information Theory, 26(4):401–406,
1980.
[26] IEEE.
Standards for Wireless, Local, and Metropoli-
http://standards.
tan Area Networks.
ieee.org/findstds/standard/802.1X-
2010.html,http://standards.ieee.org/
about/get/802/802.11.html, 2012.
[27] M. Jakobsson, P. Finn, and N. Johnson. Why and How
to Perform Fraud Experiments. Security & Privacy, IEEE,
6(2):66–68, March-April 2008.
[28] M. Jakobsson and J. Ratkiewicz. Designing ethical phishing
experiments: a study of (ROT13) rOnl query features.
In
15th International Conference on World Wide Web (WWW),
2006.
[29] Y. Liu, P. Ning, H. Dai, and A. Liu. Randomized differential
dsss: jamming-resistant wireless broadcast communication.
In Proceedings of the 29th conference on Information com-
munications, pages 695–703, Piscataway, NJ, USA, 2010.
IEEE Press.
[30] M. Marlinspike.
sslstrip.
http://www.
thoughtcrime.org/software/sslstrip/,
2012.
[31] M. Marlinspike.
wpacracker.
https://www.
wpacracker.com/, 2012.
[32] S. Mathur, R. Miller, A. Varshavsky, W. Trappe, and N. Ma-
dayam. ProxiMate: Proximity-based Secure Pairing us-
ing Ambient Wireless Signals. In International Conference
on Mobile Systems, Applications, and Services (MOBISYS),
2011.
[33] Microsoft,
Inc.
Extensible Authentication Proto-
http://technet.microsoft.com/en-
col.
us/network/bb643147, 2011.
[34] A. Narayanan and V. Shmatikov. Fast Dictionary Attacks on
In Proceedings of
Passwords using Time-Space Tradeoff.
the ACM Conference on Computer and Communications Se-
curity (CCS), Alexandria, VA USA, November 2005. ACM.
[35] nVidia. Compute Uniﬁed Device Architecture. http:
//developer.nvidia.com/object/cuda.html,
2012.
[36] P. Oeschlin. Making a Faster Cryptanalytic Time-Memory
In Proceedings of Advances in Cryptology
Trade-Off.
(CRYPTO), Lecture Notes in Computer Science. Springer,
2003.
[37] Openwall Project.
John the Ripper.
http://www.
openwall.com/john/, 2012.
[38] OpenWRT Project.
OpenWRT.
http://www.
openwrt.org.
[39] K. Pelechrinis,
I. Broustis, S. V. Krishnamurthy, and
C. Gkantsidis. Ares: an anti-jamming reinforcement sys-
tem for 802.11 networks. In Proceedings of the 5th interna-
tional conference on Emerging networking experiments and
technologies, CoNEXT ’09, pages 181–192, New York, NY,
USA, 2009. ACM.
[40] V. Roth, W. Polak, E. Rieffel, and T. Turner. Simple and ef-
fective defense against evil twin access points. In Proceed-
ings of the ACM Conference on Wireless Network Security,
pages 220–235, New York, NY, USA, 2008. ACM.
[41] B. Schneier, Mudge, and D. Wagner. Cryptanalysis of
Microsoft’s PPTP Autentication Extensions (MSCHAP-
v2).
http://www.schneier.com/paper-
pptpv2.pdf, 1999.
[42] M. K. Simon, J. K. Omura, R. A. Scholtz, and B. K. Levitt.
Spread Spectrum Communications Handbook. McGraw-
Hill, 2001.
[43] Skyhook,
Skyhook Wireless Positioning System.
Inc.
http://skyhookwireless.com/developers/,
2012.
14
[44] M. Strasser, B. Danev, and S. Capkun. Detection of Reactive
Jamming in Sensor Networks. ACM Transactions on Sensor
Networks (TOSN), 2010.
[45] M. Strasser, C. Popper, S. Capkun, and M. Cagalj. Jamming-
resistant Key Establishment using Uncoordinated Frequency
Hopping. In Proceedings of the IEEE Symposium on Secu-
rity and Privacy, 2008.
[46] The Shmoo Group.
IDN Homograph Attack. http://
www.shmoo.com/idn, 2005.
[47] WatchGuard. Anatomy of a Wireless “Evil Twin” Attack.
http://www.watchguard.com/infocenter/
editorial/27079.asp, 2011.
[48] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek. Pass-
word Cracking Using Probabilistic Context-Free Grammars.
In Proceedings of the IEEE Symposium on Security and Pri-
vacy, Oakland, CA USA, May 2009. IEEE Computer Soci-
ety.
[49] M. Wilhelm, I. Martinovic, J. B. Schmitt, and V. Lenders.
Short paper: reactive jamming in wireless networks: how
In Proceedings of the fourth ACM
realistic is the threat?
conference on Wireless network security, WiSec ’11, pages
47–52, New York, NY, USA, 2011. ACM.
[50] J. Wright. ASLEAP, Exploiting CISCO LEAP. http:
//www.willhackforsushi.com/Asleap.html,
2008.
[51] J. Wright. FreeRADIUS, Wireless Pwnage Edition. http:
//www.willhackforsushi.com/7, 2010.
[52] W. Xu, W. Trappe, and Y. Zhang. Defending wireless sensor
networks from radio interference through channel adapta-
tion. ACM Transactions on Sensor Networks, 4:18:1–18:34,
September 2008.
[53] G. Zorn. Microsoft PPP CHAP Extensions, Version 2.
http://tools.ietf.org/html/rfc2759, 2000.
15