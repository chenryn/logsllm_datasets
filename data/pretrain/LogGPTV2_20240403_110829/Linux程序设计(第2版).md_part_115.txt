## Page 617
第18章Perl程序设计语言
599
print Smyvar; *changed by a*;
a () :
,q Aq pebueqp. 4 reAAus A )q cns
$ayvar
:.eptsqno. =
ptint *In b: Smyvar*:
bi1 ; # *In b: changed by b*
print Smyvat;  *outside*
18.1.6文件的输入和输出
学习到现在，我们只见过一个文件输人输出操作：从标准输人读取一行数据。这可能比较
适合编写过滤器类型的程序，但实际软件还需要具备读写其他文件的能力。
Perl里的文件访问操作通常都是通过文件句柄完成的、我们前面曾经说过Peri有三种变量类
型，这其实并不准确；文件句柄就是一种非常特殊的变量类型。当程序启动运行的时候，会自
动打开三个文件句柄，即标准输人STDIN、标准输出STDOUT和标准错误STDERR。我们可以
通过一个特殊格式的print语句对这几个文件句柄进行写操作；事实上，“printlist”就是“print
STDOUTist”的简写形式。
if（Sstatusok){
print STDoVr *Processed successfu1ly.\n′:
}else {
print STDERR *An error occurred...\n′:
请仔细观察这段代码，在文件句柄和将要输出的文本之间是没有逗号的；文件句柄不是列
表的组成部分。print有两种语法格式，一种带文件句柄，另一种不带。千万千万不要把这两种
格式给弄混了。
我们曾经见过从标准输人读取一行数据的语句，它使用了“”—面这正是的
简写形式。那文件系统里的文件又该怎样办呢？我们可以通过open函数创建出一个文件句柄；
类似于C语言中的做法，我们需要给出一个文件句柄和一个文件名，还要说明我们是为输人还是
为输出面打开这个文件的。但不再分配模式编号了，我们使用shell风格的语法"filename”（或
"filename“表示截短或创建文件并向它写数据：
“>>filename"向文件追加数据：等等（我们甚至可以打开管道进行读或写！）。下面这段程序从
一个文件读人数据，把错误记录到一个日志记录文件里去：
open L0G,*>error.1og”
$1tells you why not.
or die *Can't write on error.log: S!*;
open INPUT. Sinputfile:
while{){
next unless /\S/;·Skip blank lines.
next if /#/; You know what this does.
print LoG *Error processing S_\n*:
do_something_vith($_);
close INPOT;
close L0G;
加入java编程群：524621833
---
## Page 618
600
Linux程序设计
Perl会在程序结束时自动关闭文件句柄，但我们在这里用close函数关闭了它们、这是一个好
与惯。
system()
在结束我们IPerl旅行之前，我们再学习-下与系统互动一我们的意思是运行外部命令、有
两个办法：一是system（）它的工作情况与C语言模型完全一样；二是反引号（）一它的工
作情况与shel模型差不多、但换行符的处理方式有所差异。这使两大阵营的程序员们都很高兴
这两种方法有很大的区别：sytem（）挂起运行中的程序，允许用户的互动，但并不归还程序
的STDOUT：反引号归还程序的STDOUT，却不把它显示在屏幕上，因此，在交互程序里，用
户可能看不到任何提示符sytem(）允许你取得被执行程序的返回值（把sytem（）的返同值除以256.
或者检查$？变量）：反引号则取不到。
基本原则是：如果你只是想运行--个程序，就使用sytem()：如果想知道它产生了什么样的
输出，就使用反引号：两种办法都使用shell来处理命令行参数、管道、重定向等问题：但在使
用sytem（）时可以把这些参数安排到一个列表里而不是把它们看做是一整个参数，这样就可以省
掉shell的那些预处理功能、
某些程序员，特别是出身自shell脚本程序的那些程序员，总是习惯于用shell米对付--切。而
又有那么一些人，不到万不得以时决不使用shell。不管怎么说，两种方法都能使你的代码既整
齐又有效率。
systen(*clear*1: + Easiest wdy to cleat screcr..
To avoid shell processing.use
print TDERR *Sumething funny happened to serama11: $*
unless $status==0:
print *You have new nail:n*:
# Smail will contain newlines, so we don't need then
print Snail;
1
18.2一个完整的例子
实际编写-个实用Perl程序所必须的东西我们都已经学得差不多了，现在来看看如何编写我
们的Perl版CD唱盘数据库软件。这其实只是增加了-两个Perl特色的shell脚本程序版的简单转换
而已。事实上，我们并没有去掉shell脚本程序版中我们不想要的几个小缺陷一一比如说，你还是
不能在曲目名称里使用逗号。我们将在这章的结尾看到这个数据库软件一个完整的重写版本。
就现在来说，你可能更愿意把这个程序和第2章里的脚本程序做逐行的比较。
我们也不是一点改动也没做，以前我们是在文件重对数据进行处理的，但现在我们将在程
序的一开始就把文件读到数组里来，然后在程序的末尾把它们写回到文件去。这就避免了与临
1）首先，像shell脚本程序一样，我们需要告诉内核这是·个Perl脚本，然后是我们的版权产
明。如下所示：
加入java编程群：524621833
---
## Page 619
第18章Peri程序设计语言
60/
!-usr/bin/per1 -w
 Perl translation of chapter 2's shell CD database
 Copyright (C) 1999 wrox Press.
it under the terms of the GNU General Puhlie License as publtshed by
 This progran is free software; _you can redistribute it and/or nodify
[at your option) any later version.
 the Free Sottware Foundation: either version 2 ot the License, or
but WITHOUT ANY WARRANrY; without even rhe implied warranty of
GNU Ceneral Public License for nore deto:ls.
MERCHANTABILITY or FITNESS POR A PARTICULAR PURPOSE.See the
 You should have received a copy of the (ax. General Public License
 along with this program: if not. write 1. rso riee Software
Foundat1on. Inc.. 59 Temple Place. Suite 310, Boston, MA 02111-#1307 USA
2）下面是全局变量的定义。请注意最后--行：我们为键盘中断（键盘上的“Ctrl-C”组合键）
设置了一个信号处理器子例程，我们把想做的工作全部放在一个“sub”结构里并直接取得它
的返回值，这就创建出一个所谓的“匿名子例积引用”来。这个子例程引用调用子例程tidy_up
把曲片和标题数组输出到文件，然后退出运行。tidy_up子例程写数据到文件的方式和我们把它
们读到数组里来的方式差不多。惟一有点难办的是换行符的处理：文件要用换行符来分隔数据
记录，但数组里面不需要有换行符。所以我们在读人数据的同时把它们用chomp函数“砍”掉了，
在写出数据时又把它们加了上去。
Smenu_choice=*,:
Stitle_files'title.cdb*;
Stenp_file=*/tnp/cdb.$S;
Stracks_file=*tracks.cdb*;
SsS1G{INr) ▪ sub ( tidy_up(1: exit; 1:
open TITLES.
Sub read_in {
while (](chomp: push 9titles,S_}:
Stitle_file or die *Couldn't open Stitle_file : S!\n*;
clone TITL&S;
open TRACKs, Stracks_file or die *Couldn't open Stracks_file : $!n*:
while ()( chonp: push ftracks, $_1:
c1ose TRACKS;
sub tidy_up {
Die aborts with an error, and s is the error message from open(]
open TITLES,>,$title_tile or die Couldn't write to Stitie_file;S!\n′;
.
foreach(9tracks)(print TRACKS *S_\n*;)
close TRACKS:
3）两个读取键盘输入的小函数。如下所示：
junaaaa qng
<>  Get a line from SrDIN, and 1grore it.
print *Press return *;
sub get_confirm {
print *Are vou sure? *;
加入jaVa编程群：524621833
---
## Page 620
602
Linux程序设计
while （1)(
S_=<>;Get a reply into 5_
return iif (/~y(?:es)?s/i):  1 is true,not 0
if (/^no?s/a) {
print *Cancelled!\n";
return0:
print *Please enter yes or no.\n′;
4）现在，显示主菜单，然后从用户那里得到一个选择。“) ;
return
5）先是往数组里添加新唱盘的标题记录项的子例程，它只有一行语句。然后是添加曲目资
料的子例程。
sub insert_title {
push otities,（5oin*,*，_）:
sub insert_track {
push tracks,(
sub add_record_tracks {
print *Enter track information for this CDn*;
print *When no more tracks enter qin';
Scdttitles..;
Scdtrack=l;
print *7rack $cdtrack.track title?‘:
if(Scdttitle =/./）{
chomp($cdttitlesc>);
print *Sorry. no commas allowed.\n*:
redo:
if (Scdttitle and scdttitle ne q²){
insert_track1$cdcatnum,Scdtrack,Scdttitle):
Scdtrack++;
6）现在来编写add_records子例程，它的作用是把一张新CD唱盘的记录添加到数据库里去。
加入jaVva编程群：524621833
---
## Page 621
第18章Peri程序设计语言
603
sub add_records
print *Enter catalog name *:
chonp($cdcatnum=<>):
$cdcatnun= s/,,*//;  Drop everytl:ing after a conna
Sedtitle -- s/..*//;
chonp($cdtitle=<>};
print *Enter type ′;
(e>sadps1duo
$cdtype =~ s/, ,*/. ;
chomp($cdac=<>):
Scdac s-s/..*//:
print *About to add a new entryin*;
print
*$edcatnum $cdtitle $cdtype Scdac\n*;
f iget_confirn())(
1nsert_tatle($edcatnun,Scdtitle,Scdtype,Scdac):
add_record_tracks():
1else(
renove_records (1 ;
7）因为我们已经有了一个记录行数组，查找CD唱盘的工作就非常简单了。我们只需遍历数
组找到匹配就行了。用Perl的grep函数更容易实现这一功能，因为这个函数就是为检索目的设
计的。
sub find_cd (
# Saskliat is true if the first member of 9_
(That is. the first parameter) is not *n*
Saskiist = ($_10) ne *n*);
Scdcatnum=**;
print “Enter a string to search fot in the CD titles *;
chomp ($searchstr=<>))
return O unless Ssearchstr:
Erom working. so question marks, asterisks and so on
#in titles aren't dangerous.
1(scalar 9matches  0}(
@matches ·grep /\Q$seazchstr\E/,f:itles;
print *Sorry, nothing found.\n*:
get_returni):
return 0;
scalar matches 1=1）[
print *Found the following:\n°;
print *Sorry. not unique.n*;
foreach (@matches)(
print *s_\n′;
get_return():
return 0:
($cdcatnum.Scdtitle,$cdtype,Sedac)=
unless （Scdcatnum){
splic'*,Smatches[0];
get_return():
return 0:
加入java编程群：524621833
---
## Page 622