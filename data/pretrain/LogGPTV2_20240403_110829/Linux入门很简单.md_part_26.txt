【运算位数的限制】
这个多少多少位，说的是CPU一次运算的二进制数字的位数。这个CPU就像是个计算器，我们软件用CPU就像人类用计算器似的。它很重要，我们要算一丁点东西，也需要用CPU来算（别跟我说用心算，我是软件，OK？）。
但是这个CPU算东西的能力，是有限制的，有什么限制呢？你拿出你家的计算器看看，算个28+783，没问题是吧。算个7836--473也没问题是吧，再算个72635446584939202937346537+1，能么？估计99％的同志出问题了（不排除有牛人拥有很牛的计算器）："我哪能按出这么多数来啊，我这计算器总共就能显示得下11位数字"。对，这就是计算器的位数限制。
CPU也一样，一次能算的数不能无限大，总得有个边，只不过不是按照十进制的位数算的，而是按照二进制的位数算的。至于什么叫十进制，什么叫二进制，可以去问问狗狗大哥，不过不知道也没关系，咱暂时按照咱们平常的十进制来说。
【软件操作CPU的过程】
我们软件使用CPU运算的过程和你们人类使用计算器是差不多的。比如说，我这有个计算器只能算99以内的数字，也就是只有2位（也不知道谁设计的这么弱智的计算器）。那么我用这个计算机算个3+4怎么算呢？简单，输入3，按+号，再输入4，按=号，就出来了。再算个大点的，算个56+47。先输入56，按+号，再输入47，按=号。咦？显示03，怎么不显示103呢？废话，它倒是想显示，往哪写那1呀？但是我用的这个计算器（也就是CPU啊）是很人性化的，会提示你运算结果超出了它的能力范围。比如可能会有个红灯亮起，提示你03前面还有一个进位，进到百位了。
【高位宽CPU的优势】
好了，基本的操作说完了，现在说正题，不同位数的区别。两位的CPU就像刚才说的那样，那么假设现在需要计算3173+644，这里有2位的CPU一个，4位的CPU一个，分别用他们做这个计算，有什么区别呢？
咱先看这2位的，有人说了，2位的只能算两位啊，这个没法算哪？唉，这机器是死的，咱软件是活的啊，一次只能算2位，咱不会分开多算几次么。首先，输入73，按+号，再输入44，按=号。显示出来17，同时红灯一亮，说明还得进位。好，找张纸记下17这个数，还得写上"得进位"。然后再输入31，按+号，输入6，按=号，显示出来37。别忙，没完，刚才还得进位么不是，再输入37，按+号，输入1，按钮，咔嚓，出来38。好，最后结果拼一块，高位是38，低位是17，最后结果：3817。
再拿这4位的算算看。4位的就意味着输入的和显示的数最大可以是9999，也就是说我直接就可以输入3173，按+号，再输入644，按=号，显示出来3817，OK，收工。
![alt](images/00011.jpeg){.tpzz}**提示：**[目前市场上常见的CPU都已经是64位CPU。]{.kai1}
【软件位宽与CPU位宽的关系】
这就是2位的CPU和4位的CPU的不同，从理论上来说，4位的要比2位的快，从上面的例子看得很明显嘛，大一点的数，4位的CPU一下就能算完，2位的CPU要折腾好几次。但是这4位的CPU还得有人会用才行，这就需要4位的软件来用这个4位的CPU。
终于说到软件的位数了，CPU的位数就是一次能计算多少位的数，那软件的位数呢？就是说明这个软件需要使用多少位的CPU。软件干活肯定需要计算，计算就得用CPU，2位的软件会用2位的CPU，4位的软件就会用4位的CPU（还是拿十进制位做比喻啊）。比如有一个2位的软件，当他运行在一个2位CPU的电脑上的时候就是这样：比如要算3173+644，他就会先算73+44，然后记住进位，然后计算31+6，然后加上进位，最后拼起来，得到答案，就像上面描述的那样。那么当这个2位的软件运行在一个4位的CPU上的时候会怎么样呢？他会先算73+44，然后记住进位，然后计算31+6，然后加上进位，最后拼起来，得到答案......有人说了，他怎么不直接算啊？4位的CPU不是能直接就算出来么？但是别忘了他是2位的软件啊，他不会用4位的CPU，但是不会用不等于完全不能用，他还是可以拿4位的CPU当成2位的来用，只是有些浪费而已。
![alt](images/00011.jpeg){.tpzz}**提示：**[64位Ubuntu系统中自带的软件，以及通过软件源安装的软件，除某些不开源的软件外，都是64位的。]{.kai1}
那么要想完全发挥4位CPU的性能该怎么办呢？当然就得4位的软件出场了。当一个4位的软件运行在一个4位的CPU上时怎么计算3173+644呢？大家大概都知道了，直接算，一次完成。那么当一个4位的软件运行在一个2位的CPU上时会怎么样呢？这个软件会写个3173的纸条要往CPU的寄存器里塞，急得满头大汗就是塞不进去，最后一甩手------老子不干了，这破CPU没法用！当然，这只是个比喻，并不是说4位软件在2位CPU上算3173+644就算不了，算1+1就能算。4位的软件是根本无法运行在2位的CPU上的。
4.2.7 扩展阅读：进程
咱说Chrome是个多进程的浏览器，一运行就复制出好多进程来。有人可能对进程这个名字还不是很明白，什么是进程呢？
【进程的概念】
简单地说，进程就是正在干活的软件。比如狐狸妹妹，躺在硬盘里睡觉的时候她就是一个软件、一堆数据、一坨代码。当她被叫醒，跑进内存里开始干活的时候，她就是一个进程了（当然，其实这么说不很准确，但可以姑且这么理解）。换句话说，内存里忙忙碌碌的，都是一个个的进程。当然，同时他们都是程序、都是软件，这不冲突。
就像去公司上班的人，他们都是人，当他们在公司工作的时候，他们都是公司的员工。员工，就像进程一样。很多公司的员工每个人都有个工号，什么NB001，SB999之类的；每个进程也都有一个唯一的标识------进程ID号，简称PID。这个ID号是由我分配给每一个跑进工作间的进程的，分配的规则很简单，每人一个，每次加一。第一个跑进来的就是1号，在我们Linux系统里，有个叫init的家伙每次都是第一个被我叫起来，帮我打理一下日常工作，所以他的ID号总是1。而且，他还有个特殊身份，这个咱暂时保密，待会儿再说。
![alt](images/00011.jpeg){.tpzz}**提示：**[init一般位于/sbin/目录下，内核启动后会首先调用此程序，进行一些初始化工作。]{.kai1}
【管上级叫爹】
每个公司的员工都有个直属的上级，上级又有上级，依此类推。我们这里的进程也是这样的，只不过我们不叫"上级"或者"上司"，我们叫------爹！好吧，似乎这个称谓土了点，但是就是这个意思。一个进程之所以成为一个进程，一定是由于另一个进程创建了他（有点绕嘴吧）。比如说用户开了一个终端，于是就有了一个bash进程，然后用户在这个终端里敲入firefox并回车，bash就去找狐狸妹妹，把她带到内存里开始工作，于是就创建了一个firefox进程。好了，现在，firefox这个进程是由bash这个进程创建的，那么，bash这个进程就是firefox这个进程的父进程，firefox进程就是bash进程的子进程。也就是说，狐狸妹妹就得管bash叫爹！那bash也得有个"爹"吧？是的，如果是在Gnome环境下开的那个终端，那么bash他爹就是调用bash的gnome-terminal。
既然每个进程都有爹，爹进程又有爹，如此循环往复，肯定有一个站在金字塔最高点的总"爹"吧？难道，难道笨兔兔你就是他们的总爹？很遗憾，我不是，所有进程的总爹，是每次启动第一个被我叫起来的init。所有的进程都是被init直接或者间接创建的，所以init才是所有进程的祖宗！
关于父进程，有两点要说明。
第一，我们这的父子关系不是固定的，是会变换的。如果从bash启动Firefox那么bash就是Firefox的爹，如果直接从图形界面启动那就没bash什么事情了（这时候Firefox的爹其实是init）。
第二，不要问我哪里有妈进程！
![alt](images/00011.jpeg){.tpzz}**提示：**[父进程的说法源自英文parent
process。]{.kai1}
【当爹的义务】
当爹也有当爹的义务，人家不能白叫你一声爹是不是。当自己的娃（也就是子进程啦）做完自己该做的工作以后，就停止了一切动作，像个死尸一样待在那里，当爹的就负责给他"收尸"。
一个结束了所有工作的进程，会处于一种"僵尸"状态，这时候他什么也不做了，就等着被干掉。进程进入僵尸状态前一般会通知他爹一声，汇报一下说：爹啊，俺已经把该做的都做啦，现在我要变僵尸啦！（让后平伸双手开始行走？那是生化危机！）然后他爹负责向我汇报：我家娃干完活了，你把他的工号（就是PID，记得吧）取消掉然后让他回去睡觉吧。然后我就把它的工号收回，看看他有没有什么申请了没释放的资源（一般一个好孩子在结束运行成为僵尸之前，会主动释放掉自己申请的资源的）。确认都没问题了之后，他就被从我的进程列表中清除了。
![alt](images/00011.jpeg){.tpzz}**提示：**[所谓进程申请的资源，包括进程申请过的内存、打开的文件、Socket连接等。]{.kai1}
【当爹遇到意外】
但是有时候也会有些特殊情况，比如有的时候娃还在兢兢业业地干活呢，结果他爹死了（可能他爹干完活退出了，也可能被用户用命令kill了）。这个时候我就会发个信号给他家娃说：那个......娃呀，那啥，跟你说个事，你爹死了。
这时候有的娃就悲痛欲绝：俺爹都死了俺活着还有啥意思啊，呜呜呜......俺也僵尸吧。然后他就退出了。比如你在终端运行Firefox，然后把终端关了，Firefox也就退出了。
也有的娃比较坚强，一定要完成上级交给的任务，化悲痛为力量。这时候我会给他找个新爹------因为每个进程总得有个父进程，没爹是不行的。一般我会安排他爹的爹来当他的爹（又绕进去了吧），也就是这个进程原来的"爷爷"进程来当他的父进程。然后这娃在长了一辈后，继续认真工作。比如你在终端运行nohup
firefox，然后把终端关了，Firefox继续运行。那如果他爷爷不幸也挂了呢？那就继续往上找吧，我们说了init是所有进程的祖宗，所以他那里就成了最终的"无依靠青年进程收容所"。
如果init也挂了呢？那系统就挂了，重启吧！
![alt](images/00011.jpeg){.tpzz}**提示：**[父进程退出时，系统会向子进程发送"挂断"信号（SIGHUP），子进程是否退出取决于子进程如何处理挂断信号。]{.kai1}
【当爹和娃同时出意外】
还有的时候娃已经把该做的事情做完了，汇报给他爹并变成僵尸。可是他爹还没来得及给自己娃收尸，自己就先挂掉了，这个时候就有点麻烦了。
首先我没法通知那娃说她爹挂了，因为那娃已经是僵尸了，啥也不听啥也不干了。其次我也不能直接把他干掉，啥事情都得按规矩来嘛，只有他爹向我申请我才能把他干掉，可是他爹又已经挂了......那怎么办呢？那就按流程来，先给这个娃找个爹，哪怕这娃已经是僵尸了，也得有个爹。一般我会找到init说：那个ID号是2725的进程爹死了，你当他爹吧。一边说一边看也不看地用手往那边一指，假装自己没看到那娃已经成僵尸了。一般init也不会太注意，直接就答应了，然后马上发现了事情的真相，跑到我这里来说：那娃已经成了僵尸啦，你还叫我收养个啥？我肯定会一脸无辜状：啊？是啊，那不管怎样，你是他爹了，你负责处理一下后事吧。于是init只好以爹的身份处理那个僵尸的后事，问题就这样解决了。
[4.3 我的影音生活]{.kai}
狐狸妹妹今天接到懒蜗牛同学的任务，要去下载一部叫做《Big Buck
Bunny》的电影。说是电影，其实就是个短片，还不到10分钟。并且它还有个最大的特点------它是开源的。好，废话不多说，狐狸妹妹已经用她的Downthemall扩展把这个短片下载下来了，于是，就引出了一场播放器之间的斗争。
![alt](images/00011.jpeg){.tpzz}**提示：**[所谓开源电影，是说它是在开源的平台上用开源的软件制作的，并且免费下载观看，还可以获得它的原始制作文件。]{.kai1}
4.3.1 简约的Mplayer
下载下来之后，懒蜗牛同学就找来播放器播放这个短片。虽然之前懒蜗牛同学安装了Gnome
Mplayer播放器，但他还是觉得Gnome
Mplayer的界面简陋，而且看片的时候其实基本不需要怎么操作，那还不如干脆不要这界面，直接让Mplayer来播放。那样就光一个视频窗口，其他的什么按钮都没有的界面才叫简约，而且也很拉风，因为在Windows下没有这么看视频的。
想到这里，说干就干。懒蜗牛同学找到了下载好的那个.ogg文件，.ogg是一种视频文件格式，Mplayer不用安装额外的解码器就可以播放。懒蜗牛右击这个文件，选择"属性"，单击"打开方式"标签，如图4.31所示。
![alt](images/00161.jpeg){.calibre3}
图4.31 文件属性打开方式标签
打开方式标签里面显示了目前在我这里注册过的，所有可以用来打开这类文件的软件。包括Gnome
Mplayer、电影播放机、Rhythmbox等。并且电影播放机是默认程序，也就是双击一个.ogg文件，就会用电影播放机打开------而这些都不是懒蜗牛想要的。
懒蜗牛想用Mplayer来打开这个文件，但是这里没有，于是他单击了"添加"按钮。然后我就给他列出了一个软件列表，都是已经安装了的软件，想用哪个软件打开这个文件，在这里选就是了，如图4.32所示。
![alt](images/00162.jpeg){.calibre3}
图4.32 选择用以打开文件的程序
不过这里列出的都是有图形界面的软件，Mplayer并不在其中。但是没事，懒蜗牛很熟练地单击了下面的那个"使用自定义命令"前的"+"号，然后在弹出的文本框里输入了Mplayer，就像图4.33这样，最后单击"添加"按钮。
![alt](images/00163.jpeg){.calibre3}
图4.33 手动输入用于打开文件的程序
这样，就回到了"打开方式"那个标签，上面已经多出了一个没有图标的Mplayer，但还不是默认的，再把他选成默认的程序就可以了，就像图4.34这样。之后直接关闭就可以了。这样做之后，再双击那个刚刚下载的OGG文件，Mplayer就自动跑出来播放了。只见屏幕上只有一个简约得不能再简约的窗口，窗口中就是正在播放的视频------一只可爱的大兔子。
![alt](images/00164.jpeg){.calibre3}
图4.34 添加mplayer作为默认打开方式
![alt](images/00011.jpeg){.tpzz}**提示：**[Gnome的设置界面多数没有确认按钮，设置好后即生效。]{.kai1}
有人会说，这界面上啥也没有，我想暂停、快进、调整音量啥的怎么办？不用担心，Mplayer早为你想好了，整个键盘就是你的操作界面。所有操作都有快捷键，常用的如表4.1所示。
**表4.1 Mplayer常用快捷键**
![alt](images/00165.jpeg){.calibre3}
懒蜗牛同学早已熟悉了这些快捷键，现在操作起来得心应手。
4.3.2 强大的SMplayer