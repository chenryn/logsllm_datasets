# 【病毒分析】老树新芽：Kronos恶意软件分析（part 1）
|
##### 译文声明
本文是翻译文章，文章来源：malwarebytes.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[blueSky](http://bobao.360.cn/member/contribute?uid=1233662000)
预估稿费：260RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**背景**
****
2014年6月，一个用户名为VinnyK的人用俄语在某黑市网站上首次售卖 **Kronos** 恶意软件：
资料来源：
该帖子的全文已经被翻译成英文，并收录在[ **IBM的安全智能文章**](http://securityintelligence.com/the-father-of-zeus-kronos-malware-discovered/)中。
我们发现Kronos
恶意软件通过各种网络攻击包传播，例如Sundown（详情点击[这里](https://blog.malwarebytes.com/threat-analysis/2016/10/new-looking-sundown-ek-drops-smoke-loader-kronos-banker/)）。截至目前，该恶意软件仍然在疯狂的传播，[ **一个月前我们还捕获了通过Rig
EK传播的一些最新的样本**](https://zerophagemalware.com/2017/07/14/rig-ek-delivers-kronos-banker/)。
如今，Kronos经常用于下载其他恶意软件。[Proofpoint文章中描述了](https://www.proofpoint.com/us/threat-insight/post/kronos-banking-trojan-used-to-deliver-new-point-of-sale-malware)网络攻击者如何使用Kronos作为下载器进行网络攻击活动。
**分析样本**
****
**2014年捕获到的样本：**
[01901882c4c01625fd2eeecdd7e6745a](https://www.virustotal.com/en/file/3bd4b8caf9ae975bd41dbee1f1719cf7be3efa4f52b8768aba30ba9a40569008/analysis/)
首次观察到的Kronos样本（感谢[Kevin Beaumont](https://twitter.com/GossiTheDog)）
f085395253a40ce8ca077228c2322010
从[Lexsi文章中](https://www.lexsi.com/securityhub/overview-kronos-banking-malware-rootkit/?lang=en)获取到的样本
[a81ba5f3c22e80c25763fe428c52c758](https://virustotal.com/en/file/4181d8a4c2eda01094ca28d333a14b144641a5d529821b0083f61624422b25ed/analysis/1502307205/)
Kronos（最终有效载荷）
[6c64c708ebe14c9675813bf38bc071cf](https://virustotal.com/en/file/ea216cede2a1eff5d76a2f8258d4a89d822f45c3951c5a4734c16ce163153a8f/analysis/1502307222/)
injlib-client.dll（Kronos模块）
**样本＃1（2016年）**
[2452089b4a9d889f94843430a35fa34f
](https://virustotal.com/en/file/e420e521f891c1a6245e377dc7a6ab70458b7c0d77ad39535cb59018a542fe15/analysis/)
（加壳的）
[9818958e65a0a71e29a2f5e7ffa650ca](https://virustotal.com/en/file/aad98f57ce0d2d2bb1494d82157d07e1f80fb6ee02dd5f95cd6a1a2dc40141bc/analysis/)
Kronos（最终有效载荷）
**样本＃2（2017年）**
[de9ab737905e09b69b28dc0999d08894](https://virustotal.com/en/file/ffc1cfe4cfa36477ead629bd1a2c6ffb266502c3261b85de431137da411320a8/analysis/)
– 加壳的
[4f5006835669d72c6ce121e66b3034d7](https://virustotal.com/en/file/0457d848132769424673221e3eb598dc2711bcebd3b5d44d1b0bdcb5b7d27f95/analysis/1502119116/)
加载器（第二阶段）
[b8986fe9e40f613804aee29b34896707](https://virustotal.com/en/file/cd5c2bb8d7d3ba9dc522dae112133956096ffae465a7b21c8f3d3124d070f675/analysis/1502119090/)
Kronos（最终有效载荷）
[cb7e33e5ede49301e7cd9218addd5c29](https://virustotal.com/#/file/f9601f695ee80b14e7ecf3c1988bacade7f50f6886f1a89c6f98d0b162959709/details)
– DLL模块
**行为分析**
****
运行后，Kronos恶意软件自动安装在一个新的文件夹中（ **%APPDATA%/Microsoft/[machine-specific GUID]**
），如下图所示：
恶意软件支持开机自启动，该功能是通过注册表中一个简单的Run键来实现的，如下图所示：
在开始执行阶段，恶意软件会修改Firefox的配置文件，使用下面的内容覆盖user.js文件中的内容：
    user_pref（“network.cookie.cookieBehavior”，0）;
    user_pref（“privacy.clearOnShutdown.cookies”，false）;
    user_pref（“security.warn_viewing_mixed”，false）;
    user_pref（“security.warn_viewing_mixed.show_once”，false）;
    user_pref（“security.warn_submit_insecure”，false）;
    user_pref（“security.warn_submit_insecure.show_once”，false）;
    user_pref（“app.update.auto”，false）;
    user_pref（“browser.safebrowsing.enabled”，false）;
    user_pref（“network.http.spdy.enabled”，false）;
    user_pref（“network.http.spdy.enabled.v3”，false）;
    user_pref（“network.http.spdy.enabled.v3-1”，false）;
    user_pref（“network.http.spdy.allow-push”，false）;
    user_pref（“network.http.spdy.coalesce-hostnames”，false）;
    user_pref（“network.http.spdy.enabled.deps”，false）;
    user_pref（“network.http.spdy.enabled.http2”，false）;
    user_pref（“network.http.spdy.enabled.http2draft”，false）;
    user_pref（“network.http.spdy.enforce-tls-profile”，false）;
    user_pref（“security.csp.enable”，false）;
这个新的设置能够使恶意软件更好地控制浏览器的行为并降低安全设置。然后，恶意软件自动注入到 **svchost**
进程中，并从那里继续运行。值得注意的是，Kronos部署了一个简单的[用户级rootkit](https://blog.malwarebytes.com/threat-analysis/2016/12/simple-userland-rootkit-a-case-study/)，它将被感染的进程从监视工具中隐藏起来。因此，运行主模块的进程不能被监视到。然而，该rootkit没有以非常可靠的方式实现，并且隐藏效果并不好。一旦发现受感染机器上安装了浏览器，Kronos恶意软件便会将其模块注入到浏览器进程中，并将注入的模块与运行在
**svchost** 进程内中的主模块建立连接。使用监视工具（例如 **ProcessExplorer**
）查看由特定进程建立的TCP连接，我们可以看到浏览器与受感染的 **svchost** 进程成对出现：
银行木马经常使用这个技巧来窃取浏览器中的数据。注入到浏览器中的恶意软件通过hook
API函数来窃取数据。之后，将窃取到的数据发送到其他模块进行分析处理，并将处理的结果发送给C&C服务器。
**网络通信**
****
从样本数据中找到以下两个C&C服务器的地址：
    http://springalove.at:80/noix/connect.php
    http://springahate.at:80/noix/connect.php
在分析的过程中我们发现，这两个个C&C服务器都已经无法访问，但是我们仍然可以发现这个恶意软件家族的典型特征。
首先，恶意软件发送长度为74字节的标识：
然后发送一大块数据：
通过分析这两个请求，我们发现恶意软件作者使用带有随机字符的XOR操作对请求做了混淆处理。下图是标识字段经过XOR解码后的样子：
我们发现恶意软件发出的所有请求都是以固定的数据头开始，该数据头中包含了被感染机器的GUID。
关于解密Kronos通信的详细研究已经在[这里](https://www.lexsi.com/securityhub/kronos-decrypting-the-configuration-file-and-injects/?lang=en)进行了描述。
**有趣的字符串**
****
像大多数恶意软件一样，Kronos恶意软件使用了各种加壳和加密工具。分析第一层数据之后后，我们得到了恶意软件的payload。我们可以通过典型的字符串轻松识别Kronos：
该恶意软件中有更多典型的字符串可以用来标识它：
这些字符串是一些哈希值，用于动态加载特定导入模块中的函数。恶意软件作者使用这种方法来混淆使用的API函数，并通过这种方式隐藏其工具的真正意图。该恶意软件不使用显式名称来加载函数，它通过枚举特定DLL中的所有导入，计算其名称的hash值，如果hash与硬编码值匹配，则加载该函数。尽管这种做法很常见，但Kronos的实施并不“高明”。大多数恶意软件以
**DWORD** 形式的hash存储，而Kronos将它们存储为字符串。
在Kronos的早期样本中，我们可以找到调试符号的路径，该调试符号信息揭示构建代码的机器上的目录结构。以下路径是从一个Kronos的样本（01901882c4c01625fd2eeecdd7e6745a）中提取的：
    C:UsersRootDesktopkronosVJF1BinariesReleaseVJF.1.pdb
PDB路径也可以从属于2014年Kronos发行版的DLL（[6c64c708ebe14c9675813bf38bc071cf](https://virustotal.com/en/file/ea216cede2a1eff5d76a2f8258d4a89d822f45c3951c5a4734c16ce163153a8f/analysis/1502307222/)）中找到：
    C:UsersRootDownloadsKronos2VJF1Botinjlibbininjlib-client-Releaseinjlib-client.pdb
**injlib-client.dll**
这个模块是注入到浏览器中的部分模块代码。在较新版本的Kronos中，可以找到类似的DLL，但是PDB路径被删除了。
**注入svchost**
****
Kronos的主要模块被注入到svchost进程（从2014年开始注入到explorer进程中）。恶意软件通过执行以下步骤来实现这种注入：
1\. 创建挂起的svchost进程
2\. 将其部分代码映射到自己的地址空间中