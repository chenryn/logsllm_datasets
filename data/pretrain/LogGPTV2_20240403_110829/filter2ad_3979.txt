title:Secure Bilinear Pairing Outsourcing Made More Efficient and Flexible
author:Haibo Tian and
Fangguo Zhang and
Kui Ren
SCIENCE CHINA
Information Sciences
. LETTER .
March 2018, Vol. 61 039104:1–039104:3
doi: 10.1007/s11432-017-9161-2
Eﬃcient and secure outsourcing of bilinear pairings
with single server
Min DONG & Yanli REN*
School of Communication and Information Engineering, Shanghai University, Shanghai 200444, China
Received 13 April 2017/Accepted 21 June 2017/Published online 13 September 2017
Citation
Dong M, Ren Y L. Eﬃcient and secure outsourcing of bilinear pairings with single server. Sci China
Inf Sci, 2018, 61(3): 039104, doi: 10.1007/s11432-017-9161-2
Dear editor,
Cloud computing is playing important role at the
era of big data, and its availability makes out-
sourcing computations possible [1]. By outsourc-
ing computations, mobile devices with weak com-
putational ability can outsource complex opera-
tions to powerful cloud servers so that the time
cost can be greatly reduced [2]. Despite of unique
advantages, there are also some security challenges
we need pay attention to.
• Secrecy. The data that resource-limited client
outsources may contain some sensitive informa-
tion, so it should be encrypted before outsourcing.
• Veriﬁability. The cloud servers are not fully
trusted and they may work maliciously, and there-
fore the outsourcer should have the ability of ver-
ifying the results returned from the servers.
• Eﬃciency. When we ensure the secrecy and
veriﬁability of outsourcing computation, we should
also make sure that the process of encrypting and
verifying is not involved in any expensive compu-
tation so that the outsourcing scheme is practical.
In the cryptographic community, there were
many researchers tried to outsource expensive
computation to untrusted cloud server [3–5].
Moreover, plenty of researches have been done
to enhance the eﬃciency of carrying out bilin-
ear pairing. Chevallier et al. [6] ﬁrst proposed
an algorithm for outsourcing bilinear pair with
one untrusted server, but the outsourcer was in-
* Corresponding author (email: PI:EMAIL)
The authors declare that they have no conﬂict of interest.
volved in some other complex computations in
their algorithm, i.e., this algorithm was not prac-
tical. Diﬀerent from [6], other researchers tried
to achieve eﬃcient outsourcing algorithm based
on two servers. Chen et al. [7] ﬁrst presented a
practical algorithm for outsourcing bilinear pair-
ing with two servers. One the client could detect
the errors with a probability of 1/2. Then Tian
et al. [8] presented two outsourcing algorithms for
pairing based on two servers. One of them im-
proved the eﬃciency and kept a checkability of
1/2, and the other one obtained a high veriﬁabil-
ity at the expense of eﬃciency. Recently, Ren et
al. [9] proposed a fully veriﬁable algorithm for out-
sourcing bilinear pairing with two servers, but the
outsourcer needed to communicate with servers for
two times to carry out single bilinear pairing.
Our contributions.
In this letter, we propose
two new outsourcing algorithms for bilinear pair-
ings based on single untrusted server. The main
contributions can be shown as follows.
• Diﬀerent from previous algorithms, the pro-
posed algorithms are both based on single un-
trusted server, which is more practical in real cloud
environment.
• We propose an eﬃcient outsourcing algorithm
for t-simultaneous bilinear pairings.
• The proposed algorithms are eﬃcient and
their checkability are both close to 1. Moreover,
we keep both inputs and outputs private.
c(cid:13) Science China Press and Springer-Verlag Berlin Heidelberg 2017
info.scichina.com link.springer.com
Dong M, et al. Sci China Inf Sci March 2018 Vol. 61 039104:2
• The outsourcer can set diﬀerent values of
some parameters according to security require-
ment, eﬃciency and veriﬁability.
As
the
The proposed BPS algorithm.
speed the precomputation of
shown
in [3], we also need a subroutine called Rand
to
out-
sourcer. When it is invoked, the client will
follows:
get a random vector in the form of
(a1P, a2P, . . . , ai+3P, b1Q, b2Q, . . . , bj+3Q, ρ
=
(ρ2, . . . , ρi) ∈ {+1, −1}i−1, e(a1P, b1Q), σ =
(σ2, . . . , σj) ∈ {+1, −1}j−1, tu, t′
u ∈
{1, . . . , s} and i = j, s is a small integer and
u ∈ {1, . . . , 7}.
u), where tu, t′
the
relationship
of
the
Moreover,
ele-
ments in Rand can be described as follows:
bj+1Q + t1 PEk∈B1 σkEk + t2 PEk∈B12 σkEk +
t3 PEk∈B13 σkEk = −b1Q,
bj+2Q + t4 PEk∈B2 σkEk + t5 PEk∈B12 σkEk +
t6 PEk∈B23 σkEk = −b1Q,
bj+3Q + t7 PEk∈B3 σkEk + t3 PEk∈B13 σkEk +
t6 PEk∈B23 σkEk = b1Q,
ai+1P + t′
t′
3 PEl∈A13 ρlEl = −a1P ,
ai+2P + t′
t′
6 PEl∈A23 ρlEl = −a1P ,
ai+3P + t′
t′
6 PEl∈A23 ρlEl = a1P .
1 PEl∈A1 ρlEl + t′
7 PEl∈A3 ρlEl + t′
4 PEl∈A2 ρlEl + t′
2 PEl∈A12 ρlEl +
3 PEl∈A13 ρlEl +
5 PEl∈A12 ρlEl +
In above equations, k ∈ {2, . . . , j}, l ∈ {2,
. . . , i}, Ek and El denote bkQ and alP , respec-
tively. Meanwhile, Ek and El are distributed ran-
domly in diﬀerent subsets of set B or A where
B = B1 ∪ B2 ∪ B3 and B12 = B1 ∩ B2, B23 =
B2 ∩ B3, B13 = B1 ∩ B3, A = A1 ∪ A2 ∪ A3 and
A12 = A1 ∩ A2, A23 = A2 ∩ A3, A13 = A1 ∩ A3.
Let q be a large prime, the inputs of algorithm
are two random points A ∈ G1, B ∈ G2, and the
output is e(A, B). Moreover, the inputs A, B and
the output e(A, B) should be private to U .
In
order to outsource single bilinear pairing, the pro-
posed algorithm includes the following four steps.
(1) T ﬁrstly invokes Rand once to get a random
vector:
e(a1P, b1Q), tu, t′
u,
ρ = (ρ2, . . . , ρi), a1P, a2P, . . . , ai+3P,
σ = (σ2, . . . , σj ), b1Q, b2Q, . . . , bj+3Q.
(2) Then T queries server U in random order:
e(A + a1P, B + bj+3Q) = θ1,
e(A + a1P, bmQ) = αm, m = {2, . . . , j + 2},
e(A + ai+3P, B + b1Q) = θ2,
e(anP, B + b1Q) = βn, n = {2, . . . , i + 2}.
(3) After receiving the results returned from
the server U , T checks whether the equations
{Q1, Q2, Q3} hold based on the relationship de-
scribed in Rand. Details about the equations
{Q1, Q2, Q3} are given in Appendix A.
(4) If all of the above equations hold, the out-
sourcer T obtains the ﬁnal results:
Q1 = e(A + a1P, −b1Q),
Q2 = e(A + a1P, B + b1Q),
Q3 = e(−a1P, B + b1Q).
(1)
(2)
(3)
Then the outsourcer T computes:
Q1Q2Q3 · e(a1P, b1Q).
e(A, B) =
Comparison. In Table 1, we compare the ﬁrst
proposed algorithm BPS with the previous ones,
where PA, SM separately denote point addition
and scalar multiplication in G1 or G2, MM de-
notes modular multiplication in GT , and “Pair”
In BJN algorithm [6],
denotes bilinear pairing.
the client needs to execute other expensive oper-
ations including ten modular exponentiations and
six scalar multiplications, so it is not practical and
we do not compare it with the proposed algorithm
BPS in Table 1.
According to the performance analysis (given in
Appendix B), if we set s = 2, i = j = 10, the prob-
ability of exposing of the sensitive information is
about 10−22, which is negligible.
Assume that we set s = 2, i = j = 10, there
are approximately 46 MMs in BPS and the check-
ability is about 0.969. Compared with algorithm
in Pair [7] and TZR1 [8], the proposed BPS algo-
rithm improves checkability to almost 1 though a
little computation cost is appended. In algorithms
TZR2 [8], VBP [9] and BPS, the outsourcer can
check the error with a high probability. Moreover,
the proposed algorithm BPS is more eﬃcient than
TZR2 [8], and its eﬃciency is similar to VBP [9].
Note that the most important diﬀerence among
those algorithms is that previous outsourcing al-
gorithms for bilinear pairing are all based on two
servers, but the proposed BPS algorithm out-
sources bilinear pairing based on single server. It
is well known that it is diﬃcult to ﬁnd two non-
colluding servers in the real cloud environment, so
the improvement of proposed one is obvious.
The proposed NBPS algorithm. We extend
the outsourcing algorithm for single bilinear pair-
ing to outsource t-simultaneous bilinear pair-
ings with an untrusted server. The inputs are
{A1, . . . , At} ∈ G1, {B1, . . . Bt} ∈ G2, and the out-
put is Qt
y=1 e(Ay, By).
Similar to Rand, we use Rand′ to achieve the
second proposed algorithm NBPS. The relation-
ship of the elements in Rand′ is same to that in
Rand.
Dong M, et al. Sci China Inf Sci March 2018 Vol. 61 039104:3
Table 1 Comparison among diﬀerent algorithms
Algorithm
PA(T)
MM(T)
Pair(U)
Servers
Checkability
Communication-rounds
Pair [7]
TZR1 [8]
TZR2 [8]
VBP [9]
BPS
5
4
12
8
4
4
3
10
14
46
8
6
6
6
24
2
2
2
2
1
1/2
1/2
0.918
1
0.969
2
2
2
4
2
(1) T ﬁrstly invokes Rand′ once to obtain a ran-
dom vector:
e(a1P, tb1Q), tu, t′
u,
ρ = (ρ2, . . . , ρi), a1P, a2P, . . . , ai+3P,
σ = (σ2, . . . , σj ), b1Q, b2Q, · · · , bj+3Q.
(2) Then T invokes the server U in random or-
der:
e(Ay + a1P, By + bj+3Q) = θy1,
e(Ay + a1P, bmQ) = αym,
e(Ay + ai+3P, By + b1Q) = θy2,
e(anP, By + b1Q) = βyn,
y = {1, . . . , t},
reduce the computational cost of the server or im-
prove the eﬃciency of outsourcing bilinear pairings
based on single untrusted cloud server with high
checkability.
Acknowledgements This work was supported by
National Natural Science Foundation of China (Grant
No. 61572309).
Supporting information Appendixes A–C. The
supporting information is available online at info.
scichina.com and link.springer.com. The supporting
materials are published as submitted, without type-
setting or editing. The responsibility for scientiﬁc ac-
curacy and content remains entirely with the authors.
m = {2, . . . , j + 2}, n = {2, . . . , i + 2}.
References
(3) After receiving the results returned from
the server U , T checks whether the equations
{Q4, Q5, Q6} hold based on the relationship de-
scribed in Rand. Details about the equations
{Q4, Q5, Q6} are given in Appendix C.
(4) If all of the above equations hold, then the
client T can get the ﬁnal results:
Q4 =
t
Y
y=1
e(Ay + a1P, −b1Q),
Q5 =
t
Y
y=1
e(Ay + a1P, By + b1Q),
Q6 =
t
Y
y=1
e(−a1P, By + b1Q).
Finally, T computes: Qt
e(a1P, tb1Q).
y=1 e(Ay, By) = Q4Q5Q6 ·
Conclusion.
In this letter, we propose two ef-
ﬁcient outsourcing algorithms for single bilinear
pairing and t-simultaneous bilinear pairings based
on a cloud server. In the proposed algorithms, the
client can detect the errors those the server may
make with a probability of almost 1. Moreover,
all of the inputs and outputs are private for the
In the future, we will do some work to
server.
1 Subashini S, Kavitha V. A survey on security issues
in service delivery models of cloud computing. J Netw
Comput Appl, 2011, 34: 1–11
2 Gennaro R, Gentry C, Parno B. Non-interactive ver-
iﬁable computing: outsourcing computation to un-
trusted workers. In: Proceedings of the 30th Annual
International Cryptology Conference, Santa Barbara,
2010. 465–482
3 Hohenberger S, Lysyanskaya A. How to securely out-
source cryptographic computations. In: Proceedings
of the 2nd Theory of Cryptography Conference, Cam-
bridge, 2005. 264–282
4 Chen X F, Li J, Ma J F, et al. New algorithms for
secure outsourcing of modular exponentiations. IEEE
Trans Paral Distr Syst, 2014, 25: 2386–2396
5 Li J, Li J W, Chen X F, et al. Identity-based encryp-
tion with outsourced revocation in cloud computing.
IEEE Trans Comput, 2015, 64: 425–437
6 Chevallier B, Coron J, McCullagh N, et al. Secure
delegation of elliptic-curve pairing.
In: Proceedings
of the 9th IFIP WG 8.8/11.2 International Conference
on Smart Card Research and Advanced Application,
Passau, 2010. 24–35
7 Chen X F, Susilo W, Li J, et al. Eﬃcient algorithms for
secure outsourcing of bilinear pairings. Theor Comput
Sci, 2015, 562: 112–121
8 Tian H B, Zhang F G, Ren K. Secure bilinear pair-
ing outsourcing made more eﬃcient and ﬂexible. In:
Proceedings of the 10th ACM Symposium on Informa-
tion, Computer and Communications Security, Secu-
rity, Singapore, 2015. 417–426
9 Ren Y L, Ding N, Wang T Y, et al. New algorithms for
veriﬁable outsourcing of bilinear pairings. Sci China
Inf Sci, 2016, 59: 099103