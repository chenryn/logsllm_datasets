测试快照是否正常    
```    
/etc/snap.sh    
# zfs list -t snapshot    
NAME                              USED  AVAIL     REFER  MOUNTPOINT    
zp1/zpdata01@2020-03-2117:06:47   144K      -      770M  -    
```    
自动启动crond配置      
```    
# systemctl start crond    
# systemctl enable crond    
# systemctl status crond    
● crond.service - Command Scheduler    
   Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled)    
   Active: active (running) since Sat 2020-03-21 16:16:08 CST; 53min ago    
 Main PID: 2526 (crond)    
   CGroup: /system.slice/crond.service    
           └─2526 /usr/sbin/crond -n    
Mar 21 16:16:08 iZbp135pwcjjoxqgfpw9k1Z systemd[1]: Started Command Scheduler.    
Mar 21 16:16:09 iZbp135pwcjjoxqgfpw9k1Z crond[2526]: (CRON) INFO (RANDOM_DELAY will be scaled with factor 85% if used.)    
Mar 21 16:16:09 iZbp135pwcjjoxqgfpw9k1Z crond[2526]: (CRON) INFO (running with inotify support)    
```    
配置crontab自动任务, 例如每天1点1分打快照, 你可以根据实际需求自己配置.        
```    
# crontab -e    
1 1 * * * /etc/snap.sh    
# crontab -l -u root    
1 1 * * * /etc/snap.sh    
```    
18、配置自动清理快照    
略, 手工执行清理的例子如下    
```    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_data]# zfs list -t snapshot    
zNAME                              USED  AVAIL     REFER  MOUNTPOINT    
zp1/zpdata01@2020-03-2117:06:47   144K      -      770M  -    
zp1/zpdata01@2020-03-2117:17:01     0B      -      786M  -    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_data]# zfs destroy zp1/zpdata01@2020-03-2117:06:47    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_data]# zfs list -t snapshot    
NAME                              USED  AVAIL     REFER  MOUNTPOINT    
zp1/zpdata01@2020-03-2117:17:01     0B      -      786M  -    
```    
19、配置自动清理归档    
略    
```    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_data]# cd /zpdata02/pg12_1921_wal/    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_wal]# ll    
total 49    
-rw------- 1 postgres postgres 16777216 Mar 21 17:06 000000010000011D00000097    
```    
手工执行例子如下, 删除7天前的wal归档文件例子    
```    
find /zpdata02/pg12_1921_wal/ -type f -mtime +7 -exec rm -f {} \;    
```    
自动化方法:   
创建脚本, 配置脚本执行权限    
略    
配置crontab    
略    
20、校验备份集可用性, 参考:      
https://github.com/digoal/blog/blob/master/201608/20160823_06.md    
21、检测主从延迟 (primary, standby)    
查询主库即可    
```    
postgres=> select pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_flush_lsn(),sent_lsn)) as sent_delay,    
pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_flush_lsn(),replay_lsn)) as replay_dealy,*     
from pg_stat_replication ;    
-[ RECORD 1 ]----+------------------------------    
sent_delay       | 0 bytes    
replay_dealy     | 0 bytes    
pid              | 84098    
usesysid         | 886185    
usename          | rep    
application_name | hello_rds_pg12    
client_addr      | 192.168.0.173    
client_hostname  |     
client_port      | 60402    
backend_start    | 2020-03-21 16:59:01.890775+08    
backend_xmin     |     
state            | streaming    
sent_lsn         | 11D/97002068    
write_lsn        | 11D/97002068    
flush_lsn        | 11D/97002068    
replay_lsn       | 11D/97002068    
write_lag        |     
flush_lag        |     
replay_lag       |     
sync_priority    | 0    
sync_state       | async    
reply_time       | 2020-03-21 17:01:17.198139+08    
```    
## 闪回例子    
1、列出快照, 注意快照的时间点  
```    
# zfs list -t snapshot    
NAME                              USED  AVAIL     REFER  MOUNTPOINT    
zp1/zpdata01@2020-03-2117:17:01   312K      -      786M  -    
```  
2、选出需要恢复的目标时间点之前的一个快照, 最好选离恢复时间最近的(但是一定要之前的, 如果你选择的快照不够前(至少距离一个checkpoint检查点), 则重新选择更前的).   
基于快照克隆一个zfs文件系统    
```  
# zfs clone -o mountpoint=/test_recovery zp1/zpdata01@2020-03-2117:17:01 zp1/zpdata_test    
[root@iZbp135pwcjjoxqgfpw9k1Z pg12_1921_wal]# cd /test_recovery    
[root@iZbp135pwcjjoxqgfpw9k1Z test_recovery]# ll    
total 17    
drwx------ 20 postgres postgres 35 Mar 21 16:59 pg12_1921_data    
```    
3、配置, 包括端口, 恢复目标recovery_target_time等     
```    
su - postgres  
cd /test_recovery/pg12_1921_data    
vi postgresql.auto.conf    
port=1923    
shared_buffers=32GB    
log_destination='csvlog'    
recovery_end_command = 'cp /zpdata02/pg12_1921_wal/%f %p'    
recovery_target_time = '2020-03-21 17:28:37.670338+08'    
recovery_target_timeline = 'latest'    
recovery_target_action = 'pause'     
```  
如果你的服务器内存不足, 可以设置较小的shared_buffer      
4、删除克隆文件系统中的socket, pid等文件  
```  
rm -f /test_recovery/pg12_1921_data/.s.*    
rm /test_recovery/pg12_1921_data/postmaster.pid    
```  
5、启动恢复  
```  
pg_ctl start -D /test_recovery/pg12_1921_data    
```  
6、打开恢复库  
```  
psql -h /test_recovery/pg12_1921_data -p 1923 -U rep postgres    
psql (12.1)    
Type "help" for help.    
postgres=> \dt    
             List of relations    
 Schema |       Name       | Type  | Owner      
--------+------------------+-------+--------    
 public | pgbench_branches | table | digoal    
 public | pgbench_history  | table | digoal    
 public | pgbench_tellers  | table | digoal    
(3 rows)    
```    
克隆库用完后， 停库， 清理克隆的test_recovery文件系统即可。     
```  
su - postgres  
pg_ctl stop -m fast -D /test_recovery/pg12_1921_data  
sudo   
zfs destroy zp1/zpdata_test  
```  
## 小结  
使用这个方法, 在zfs文件系统中创建了一个实时standby, 使用cron定期打快照(不管多少数据量, 秒级快照), 恢复时找到最近的快照, 可以快速恢复.    
zfs是个不错的文件系统, 支持快照, 压缩等功能, 非常棒.     
## 参考    
https://github.com/openzfs/zfs/wiki/FAQ    
https://github.com/digoal/blog/blob/master/201809/20180919_01.md    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")