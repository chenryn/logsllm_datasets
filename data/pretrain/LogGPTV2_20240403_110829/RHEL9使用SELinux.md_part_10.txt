适用于一个简单的原则：要访问文件，必须将用户分配给分配给该文件的所有类别。MCS
检查在常规 Linux Discretionary Access Control(DAC)和 SELinux Type
Enforcement(TE)规则后应用，因此它只能进一步限制现有的安全配置。
### []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#_mcs_within_multi_level_security}多级别安全中的 MCS
您可以将自己上的 MCS
用作非层次系统，也可以将其与多级别安全(MLS)结合使用，作为分层系统中的非层次结构层。
一个 MLS 中的 MCS 示例是，保密性科研组织，其中文件被分类如下：
::: table
[]{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#idm139972192489840}
**表 7.1. 安全级别和类别组合示例**
::: table-contents
  ------------------------- --------------------- ------------------- ------------------- -------------------
  [**安全级别**]{.strong}    [**类别**]{.strong}                                          
                                   未指定               项目 X              项目 Y              项目 Z
  未分类                       `s0`{.literal}      `s0:c0`{.literal}   `s0:c1`{.literal}   `s0:c2`{.literal}
  机密                         `s1`{.literal}      `s1:c0`{.literal}   `s1:c1`{.literal}   `s1:c2`{.literal}
  Secret                       `s2`{.literal}      `s2:c0`{.literal}   `s2:c1`{.literal}   `s2:c2`{.literal}
  Top secret                   `s3`{.literal}      `s3:c0`{.literal}   `s3:c1`{.literal}   `s3:c2`{.literal}
  ------------------------- --------------------- ------------------- ------------------- -------------------
:::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
拥有范围 `s0:c0.1023`{.literal} 的用户可以访问分配给 `s0`{.literal}
级别的所有类别的所有文件，除非访问被其他安全机制禁止，如 DAC
或类型执行策略规则。
:::
文件或进程生成的安全上下文是以下组合：
::: itemizedlist
-   SELinux 用户
-   SELinux 角色
-   SELinux 类型
-   MLS 敏感度级别
-   MCS 类别
:::
例如，在 MLS/MCS 环境中具有访问级别 1 和类别 2 的非授权用户可能具有以下
SELinux 上下文：
``` screen
user_u:user_r:user_t:s1:c2
```
::: itemizedlist
**其他资源**
-   [使用多级别安全(MLS)](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/using_selinux/index#using-multi-level-security-mls_using-selinux){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#proc_configuring-multi-category-security-for-data-confidentiality_assembly_using-multi-category-security-mcs-for-data-confidentiality}为数据机密配置多类别安全性 {.title}
:::
默认情况下，MCS 在 `targeted`{.literal} 和 `mls`{.literal} SELinux
策略中处于活跃状态，但没有为用户配置。在 `targeted`{.literal}
策略中，仅针对以下内容配置 MCS：
::: itemizedlist
-   OpenShift
-   virt
-   sandbox
-   网络标记
-   containers (`container-selinux`{.literal})
:::
您可以通过创建本地 SELinux 模块并将 `user_t`{.literal} SELinux
类型限制在类型强制的情况下，将 MCS 规则配置为分类用户的 MCS 规则。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
更改某些文件的类别可能会导致某些服务无法正常运行。如果您并不是相关系统的专家，请联系红帽销售代表并请求咨询服务。
:::
::: itemizedlist
**先决条件**
-   SELinux 模式设置为 `enforcing`{.literal}。
-   SELinux 策略被设置为 `targeted`{.literal} 或 `mls`{.literal}。
-   已安装 `policycoreutils-python-utils`{.literal} 和
    `setools-console`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  创建一个新文件，例如名为 `local_mcs_user.cil`{.literal} ：
    ``` screen
    # vim local_mcs_user.cil
    ```
2.  插入以下规则：
    ``` screen
    (typeattributeset mcs_constrained_type (user_t))
    ```
3.  安装策略模块：
    ``` screen
    # semodule -i local_mcs_user.cil
    ```
:::
::: itemizedlist
**验证**
-   对于每个用户域，显示所有组件的更多详情：
    ``` screen
    # seinfo -xt user_t
    Types: 1
    type user_t, application_domain_type, nsswitch_domain, corenet_unlabeled_type, domain, kernel_system_state_reader, mcs_constrained_type, netlabel_peer_type, privfd, process_user_target, scsi_generic_read, scsi_generic_write, syslog_client_type, pcmcia_typeattr_1, user_usertype, login_userdomain, userdomain, unpriv_userdomain, userdom_home_reader_type, userdom_filetrans_type, xdmhomewriter, x_userdomain, x_domain, dridomain, xdrawable_type, xcolormap_type;
    ```
:::
::: itemizedlist
**其他资源**
-   [创建本地 SELinux
    策略模块](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/using_selinux/index#proc_creating-a-local-selinux-policy-module_writing-a-custom-selinux-policy){.link}
-   有关容器上下文中的 MCS 的更多信息，请参阅博客文章
    [如何使用多级安全性实现 SELinux
    独立的容器](https://www.redhat.com/en/blog/how-selinux-separates-containers-using-multi-level-security){.link}，并
    [为什么您应该为您的 Linux
    容器使用多类别安全性](https://www.redhat.com/en/blog/why-you-should-be-using-multi-category-security-your-linux-containers){.link}。
:::
:::
::: section
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#proc_defining-category-labels-in-mcs_assembly_using-multi-category-security-mcs-for-data-confidentiality}在 MCS 中定义类别标签 {.title}
:::
您可以通过编辑 `setrans.conf`{.literal} 文件来管理和维护 MCS
类别标签，或使用 MLS 级别的 MCS 类别组合。在这个文件中，SELinux
在内部敏感度和类别级别及其人类可读标签之间保持映射。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
类别标签只让用户更易于使用类别。无论您定义标签或是否定义标签，MCS
的效果都相同。
:::
::: itemizedlist
**先决条件**
-   SELinux 模式设置为 `enforcing`{.literal}。
-   SELinux 策略被设置为 `targeted`{.literal} 或 `mls`{.literal}。
-   已安装 `policycoreutils-python-utils`{.literal} 和
    `mcstrans`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  通过编辑文本编辑器中的
    `/etc/selinux//setrans.conf`{.literal}
    文件来修改现有类别或创建新类别。根据您使用的 SELinux 策略，将
    [*\*]{.emphasis} 替换为 `targeted`{.literal} 或
    `mls`{.literal}。例如：
    ``` screen
    # vi /etc/selinux/targeted/setrans.conf
    ```
2.  在策略的 `setrans.conf`{.literal} 文件中，使用语法
    `s__:c__=`{.literal}
    来定义您的场景所需的类别组合，例如：
    ``` screen
    s0:c0=Marketing
    s0:c1=Finance
    s0:c2=Payroll
    s0:c3=Personnel
    ```
    ::: itemizedlist
    -   您可以使用 `c0`{.literal} 到 `c1023`{.literal} 中的类别号。
    -   在 `targeted`{.literal} 策略中，使用 `s0`{.literal} 安全级别。
    -   在 `mls`{.literal}
        策略中，您可以标记各个敏感度级别和类别的组合。
    :::
3.  可选：在 `setrans.conf`{.literal} 文件中，您还可以标记 MLS
    敏感度级别。
4.  保存并退出 文件。
5.  要使更改有效，重启 MCS 翻译服务：
    ``` screen
    # systemctl restart mcstrans
    ```
:::
::: itemizedlist
**验证**
-   显示当前类别：
    ``` screen
    # chcat -L
    ```
    上面的示例会产生以下输出：
    ``` screen
    s0:c0                          Marketing
    s0:c1                          Finance
    s0:c2                          Payroll
    s0:c3                          Personnel
    s0
    s0-s0:c0.c1023                 SystemLow-SystemHigh
    s0:c0.c1023                    SystemHigh
    ```
:::
::: itemizedlist
**其他资源**
-   `setrans.conf(5)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#proc_assigning-categories-to-users-in-mcs_assembly_using-multi-category-security-mcs-for-data-confidentiality}为 MCS 中的用户分配类别 {.title}
:::
您可以通过为 Linux
用户分配类别来定义用户授权。分配了类别的用户可以访问和修改用户类别子集的文件。用户也可以为他们自己分配到的类别分配文件。
无法将 Linux 用户分配给在为相关 SELinux 用户定义的安全范围之外的类别。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
类别访问权限在登录期间分配。因此，在用户再次登录前，用户无法访问新分配的类别。同样，如果您撤销了对类别的访问权限，这仅在用户再次登录后有效。
:::
::: itemizedlist
**先决条件**
-   SELinux 模式设置为 `enforcing`{.literal}。
-   SELinux 策略被设置为 `targeted`{.literal} 或 `mls`{.literal}。
-   已安装 `policycoreutils-python-utils`{.literal} 软件包。
-   Linux 用户被分配给 SELinux 受限用户：
    ::: itemizedlist
    -   非特权用户将分配给 `user_u`{.literal}.
    -   特权用户被分配给 `staff_u`{.literal}。
    :::
:::
::: orderedlist
**步骤**
1.  定义 SELinux 用户的安全范围。
    ``` screen
    # semanage user -m -rs0:c0,c1-s0:c0.c9 
    ```
    使用 `setrans.conf`{.literal} 文件中的类别号 `c0`{.literal} 到
    `c1023`{.literal} 或 category 标签。如需更多信息，请参阅 [MCS
    中的定义类别标签](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/using_selinux/index#proc_defining-category-labels-in-mcs_assembly_using-multi-category-security-mcs-for-data-confidentiality){.link}。
2.  为 Linux 用户分配 MCS 类别。您只能指定相关 SELinux
    用户定义的范围内的范围：
    ``` screen
    # semanage login -m -rs0:c1 
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您可以使用 `chcat`{.literal} 命令从 Linux
    用户添加或删除类别。以下示例添加 ``{.literal} 并从
    ``{.literal} 和 ``{.literal} 中删除
    ``{.literal}：
    ``` screen
    # chcat -l -- +,- ,
    ```
    请注意，在使用 `-`{.literal} 语法前，您必须在命令行中指定
    `--`{.literal}。否则，`chcat`{.literal}
    命令会错误地将类别删除作为命令选项进行解译。
    :::
:::
::: itemizedlist
**验证**
-   列出分配给 Linux 用户的类别：
    ``` screen
    # chcat -L -l ,
    : ,
    : ,
    ```
:::
::: itemizedlist
**其他资源**
-   `chcat(8)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html#proc_assigning-categories-to-files-in-mcs_assembly_using-multi-category-security-mcs-for-data-confidentiality}为 MCS 中的文件分配类别 {.title}