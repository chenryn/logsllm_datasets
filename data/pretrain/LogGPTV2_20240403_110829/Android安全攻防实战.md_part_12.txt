---
## Page 98
Android安全攻防实战
上面这条命令将生成如图3.26所示的输出。
d== un app.activity.Info --packege com.android.phone
s.CaltSattingsActivity
cyCallList
con.android-phone .callsettings, CallSottingsActivity
android.pr
peougtleyfutce1no
get Activity:
roid.pho
cne.OutgoingCat1Broadcaster
ndro1d.ph
InCaltSe
1ss1on,FERF
CallerAdd
ORM_CDMA_PROVISIONING
indroid.ph
图3.26
拓展阅读
●drozer 的activity模块的源代码位于：https://github.com/mwrlabs/drozer/blob/
master/src/drozer/modules/app/activity.py -
3.7
枚举contentprovider
就像能枚举activity和package 一样，drozer也提供了一些模块，用它们能列出
所有content provider及其中的信息。下面这个实验讨论的就是如何用app.providerinfo
模块做到这一点。
怎么做
我们从枚举content provider开始。
1.在你的 drozer终端上执行下面这条命令。
dz> run app-provider.info
2.这将返回下列这些关于content provider 的信息：
·Authority——实现SQLite前端的类的类名：
80
---
## Page 99
第3章Android安全评估工具
●读权限（Read permission）：
●写权限（Write permission）：
●Grant URI 权限 (Grant URI permission）;
·各个目录中数据的读/写权限（Pathpermission）。
进一步说明.
我们来看一下app-provider.info这个模块的源代码。
下面的代码来自： https:/ithub.com/mwrlabs/drozer/blob/766329
cacde6dbf1ba05ca5dee36b882041f1b01/src/drozer/modules/app/pro
vider.py。
def execute (self, arguments) :
If arguments,package -= None:
for package in self .packageManager () getPackages
(common . PackageManager .GET_PROVIDERS 1
common .PackageManager . GET_URI_PERMISSION_PATTERNS) :
self.__get_providers (arguments, package)
else:
ogure6exoeg3e6 · () ze5euege5exoed gte8 = 38eped
(arguments -package, common. PackageManager .GET_PROVIDERS 1
common. PackageManager GET_URI_PERMISSION_PATTERNS)
self.__get_providers(arguments, package)
def get_completion_suggestions(self, action, text, **kwarg8) :
if action.dest == "permission*:
return [*nul1*] + android.permissions
def _get_providers (self, arguments, package) :
providers = self ,match_ff1ter (package .providers, *authority*,
arguments.fi1ter)
If arguments.permission != None:
arguments .permission)
_providers = self.match_filter (providers, *vritePermission*,
arguments .permission)
这段代码中第一个应该引起我们注意的是：这个脚本是在哪儿调用了包管理
AP1。
81
---
## Page 100
Android安全攻防实战
似乎是这段代码。
self -packageManager () . getPackages
(conmon , PackageManager ,GET_PROVIDERS1
common PackageManager , GET_URI_PERXISSION_PATTERNS)
这个脚本通过调用Android包管理器，并传给它一些标志位（用来确保它返回满
足“GET_URI_PERMISSION_PATTERNS"的 provider）提取出—个包的列表。接下
来我们看到：一且通过包管理器收集到这些关于content proviser的详细信息后，脚
本将会去调用一个名为“gct_providerO”的方法，这个方法提取了provider的读和
写权限（如果有的话）。_gc_providerO方法的作用基本上就是在定义了content
provider权限的段（section）中寻找一些字符串值，它调用match_filtersO执行一些简
单的字符串匹配，如果content provider 所需的权限是读，这个字符串值会被标上
“readPermission”：如果content provider所需的权限是写，毫不奇怪，它也会被标上
“writePermission”。在这之后，它还会设置一下provider对象，然后再把结果输出到
console 上去。
进一步说明....·
就像drozer中的其他.info模块一样，你也可以以下列方式加上过滤信息。
根据包的名称进行搜索。
dz> run app·provider.info -a [名]
或者
dz> run app-provider.info --package [@名]
·根据权限进行搜索。
de> run app-provider.info -p [核用排]
或者
dz> run app -provider.info --permission [机F标试]
拓展阅读
ContentProvider的网页位于http:/developer.android.com/guide/topics/
providers/ content-providers.html.
①原文给出的代码上作者忽略了这部分代码，我不知道到底是为什么。从源码上看应该是指
https:/github.com/mwrlabs/drozer/blob/766329cacde6dbf1ba05ca5de36b882041f1b01/src/drozer/m
odules/app(provider.py 中的第 201 行：“providers = set(r_providers + w_providers)”译者注。
82
---
## Page 101
第3章Android安全评估工具
3.8枚举service
你或许还想知道你的设备上都安装了哪些service。drozer 有一个名叫
app.service.info的模块，它可以用来提取与service相关的一些有用信息。
怎么做.
在你的 drozer console 上执行下面这条命令。
[gg] ebexoed-- oguy'ootaros dde umz  run app service info --permission [标识]
8
---
## Page 102
Android安全攻防实战
·根据service名进行搜索。
dz> run app.service.info -f [i过滤字耕串]
dz> run app.service.info.-filter [过滤字特串]
·你也可以选择列出未导出的service，比如下面的命令。
dz> run app.service.info -u
dz> run app service.info --unexported
·最后，如果你还想了解其他一些关于参数和选项的信息，你总是可以运行
help选项，如下所示。
drou- ogut ootaxes·dde umz ] [u [-
Information about esportes servlces.
xage co8
roid.bre
lo exported services.
lst exported services vith no persissions required to interact with it:
ControlterControlterService
,service.FopInapSyncldapterService
Pemiro1onanul1
servsce.EasAuthent:icatorSe rv1ce
8Z' 国
工作原理.
App.service.info 模块的工作原理与其他大多数.info 和.list 类型的 drozer 模块非常
相似
它们都通过API去调用包管理器。下面是drozer/master/src/drozer/modules/
service.py中调用包管理器的代码。
def execute (self, arguments) :
If arguments-package == None:
84
---
## Page 103
第3章Android安全评估工具
for package in self .packageManager () .getPackageInfo
(common. PackageManager GET_SERVICES 1
common . PackageManager GET_PERMISSIONS) :
self ._get_servcies (argunents, package)
:080
package = self -packageManager () - getPackageInfo
(arguments .package, common PackageManager , GET_SERVICES 1
common. PackageManager ,GET_PERMISSIONS)
self.__get_services (arguments,package)
这个脚本将会去检查特定的包是否需要传入一个参数，它是execute方法要执行
的第一段代码。
if arguments-package == None:
如果不需要参数，或者包名已经定义，这个脚本会提取出一张包的列表，并在
循环中，对其中的每个包调用一次self_gct_services0方法。在提取包的列表时，根
据 对 方 法 self.packageManagerO-getPackageInfo(arguments.package,common.Package
Manager.GET_SERVICES | common.PackageManager.GET_PERMISSIONS)返 [ 的数
据进行字符串匹配的结果，可以对包的某些属性进行过滤。例如，当需要寻找拥有
某个特定权限的服务时，可以这样写：
services = self.match_filter（services，"表示叔用的字特事",
arguments,permission)
这样就能提取出一张拥有所需权限的服务的列表。
拓展阅读
●drozer 的service.py模块源码位于：https://github.com/mwrlabs/drozer/blob/
master/src/drozer/modules/app/service.py 
·Android开发者网站中的“ Services ”专题位于：http://developer.android.
com/guide/components/services.html。
·Android开发者网站中的“Bound Services”专题位于：http:/developer.android.
com/guide/components/bound-services.html。
com/reference/android/app/Service.html。
3.9枚举broadcastreceiver
Broadcast receiver 中通常会有与app的受攻击面（attack surface）相关的有用信
息，能给黑客提供做很多事（从执行任意代码到扩散信息）的机会。有签于此，在
85
---
## Page 104
Android安全攻防实战
对app 进行的安全评估时，这些信息是不应该被忽略掉的。Drozer 的开发者很早就
意识到了这个问题，并且提供了一些有助于获取broadcastreceiver中的信息的模块。
下面这个实验通过详细介绍“app.broadcast.info”模块的调用参数，演示了它的
使用方法。
怎么做
用下面这条命令可以枚举broadcastreceiver：
dz>run app .broadcast. info*
上面这条命令的输出如图3.29所示。
B][a FAOE [-f FILTER] [-p PGR
St0N] 1-11[-u] (-
waLlon a
vers eoperted By the platfors
ast ,1nfo -a android
droid,server,BootRecel
Pecelver: com.
xer.MasterlesrR
tet RoLed: 2012-1106
Lonatarguaents
KALI LINU
aPAOKAGE
-f FILTER, --flter FILTER
showintent -f1ters
verbose
>
b4verbose
图 3.29
“broadcast-receiver”特有选项。
你可以指定提取哪个包里的receiver信息，如下例所示。
dz> run app.broadcast.info -a [包名]
eu
86
---
## Page 105
第3章Android安全评估工具
下面这条命令是另一个例子。
dz> run app.broadcast.info --package [包名]
你也可以根据broadcastreceiver的名字来搜索和列举出它们，比如：
dz>run app.broadcast.info-f[过滤字特串]
或者用长参数形式
dz> run app.broadcast.info --filter [过滤半事]
另一个可选用的参数是：在结果中包含未导出的receive。
dz> run app .broadcast .info -u
dz> run app .broadcast.info --unexported