### Table 7: Logitech Encrypted Keystroke Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  |                                      |
| Frame Type (0xC1)   | 1 byte  |                                      |
| Keyboard HID Data   | 7 bytes |                                      |
| Checksum            | 1 byte  |                                      |

### Table 8: Logitech Unencrypted Keystroke Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  |                                      |
| Frame Type          | 1 byte  | 0xC1                                 |
| Keyboard HID Data   | 7 bytes |                                      |
| Checksum            | 1 byte  |                                      |

### Table 9: Logitech Multimedia Key Payload
| Field                       | Length  | Description                          |
|-----------------------------|---------|--------------------------------------|
| Unused                      | 1 byte  |                                      |
| Frame Type                  | 1 byte  | 0xC3                                 |
| Multimedia Key Scan Codes   | 4 bytes | USB HID multimedia key scan codes    |
| Unused                      | 3 bytes |                                      |
| Checksum                    | 1 byte  |                                      |

### Table 10: Logitech Pairing Request 1 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| ID                  | 1 byte  | Temporary ID, randomly generated by the pairing device |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  | Identifies the current step in the pairing process |
| ??                  | 5 bytes | Some devices fill this field with their previously paired RF address, and others with random data. The value does not affect the pairing process. |
| ??                  | 1 byte  | Unknown usage, always observed as 0x08 |
| Product ID          | 2 bytes |                                      |
| ??                  | 2 bytes |                                      |
| Device Type         | 2 bytes | Specifies the USB HID device type; observed values include 02:0C (M510 mouse) and 01:47 (K830 keyboard) |
| ??                  | 5 bytes |                                      |
| ??                  | 1 byte  | Any nonzero value                     |
| Checksum            | 1 byte  |                                      |

### Table 11: Logitech Pairing Response 1 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| ID                  | 1 byte  | Temporary ID, randomly generated by the pairing device |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  | Identifies the current step in the pairing process |
| Address             | 5 bytes | New RF address assigned to the pairing device |
| ??                  | 1 byte  | Unknown usage, always observed as 0x08 |
| Product ID          | 2 bytes |                                      |
| ??                  | 4 bytes |                                      |
| Device Type         | 2 bytes | Specifies the USB HID device type; observed values are 02:0C (M510) and 01:47 (K830) |
| ??                  | 6 bytes |                                      |
| Checksum            | 1 byte  |                                      |

### Table 12: Logitech Pairing Request 2 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  |                                      |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  | Identifies the current step in the pairing process |
| Crypto              | 4 bytes | Data potentially used during AES key generation; mice transmit 4 0x00 bytes, and keyboards transmit 4 random bytes |
| Serial Number       | 4 bytes | Device serial number                 |
| Capabilities        | 2 bytes | Device capabilities; observed values are 04:00 (mouse) and 1E:40 (keyboard) |
| ??                  | 8 bytes |                                      |
| Checksum            | 1 byte  |                                      |

### Table 13: Logitech Pairing Response 2 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  |                                      |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  | Identifies the current step in the pairing process |
| Crypto              | 4 bytes | Data potentially used during AES key generation; appears to be randomly generated |
| Serial Number       | 4 bytes | Device serial number                 |
| Capabilities        | 2 bytes | Device capabilities; observed values are 04:00 (mouse) and 1E:40 (keyboard) |
| ??                  | 8 bytes |                                      |
| Checksum            | 1 byte  |                                      |

### Table 14: Logitech Pairing Request 3 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  |                                      |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  |                                      |
| ??                  | 2 bytes |                                      |
| Device Name Length  | 1 byte  |                                      |
| Device Name         | 16 bytes|                                      |
| Checksum            | 1 byte  |                                      |

### Table 15: Logitech Pairing Response 3 Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  | Temporary ID, randomly generated by the pairing device |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  |                                      |
| Crypto              | 2 bytes | Bytes 1-2 of the potential crypto setup data sent by the device |
| Crypto              | 4 bytes | Bytes 0-3 of the potential crypto setup data sent by the dongle |
| Checksum            | 1 byte  |                                      |

### Table 16: Logitech Pairing Complete Payload
| Field               | Length  | Description                          |
|---------------------|---------|--------------------------------------|
| Unused              | 1 byte  | Temporary ID, randomly generated by the pairing device |
| Frame Type          | 1 byte  |                                      |
| Step                | 1 byte  |                                      |
| ??                  | 6 bytes | Bytes 1-2 of the potential crypto setup data sent by the device |
| Checksum            | 1 byte  |                                      |

### Logitech G900
The Logitech G900 gaming mouse employs a protocol similar to Unifying, with several distinctions:
- No pairing support (mouse and dongle are permanently paired)
- Fewer and different RF channels
- More aggressive keepalive timeouts

The protocol and device behavior is otherwise the same as Unifying, and can be thought of as a permanently paired Unifying dongle/device set.

#### Radio Configuration
- **Channels (MHz):** 2402, 2404, 2425, 2442, 2450, 2457, 2479, 2481
- **Data Rate:** 2 Mbps (2 MHz GFSK)
- **Address Length:** 5 bytes
- **CRC Length:** 2 bytes
- **ESB Payload Lengths:** 5, 10, 11, 22

### 6.1 Vulnerabilities

#### 6.1.1 Unencrypted Keystroke Injection (BN-0012)
The Logitech G900 includes functionality to transmit keystrokes in response to specific button clicks. When this feature is used, the keystrokes are transmitted unencrypted, meaning that the dongle supports receiving unencrypted keystrokes.

Transmitting the following two packets to the RF address of a paired keyboard will generate a keypress of the letter 'a':

1. **Packet 1:**
   - **Address:** EA:E1:93:27:21
   - **Payload:** 00:C1:00:04:00:00:00:00:00:3B
   - **Description:** Unencrypted keypress packet with the HID scan code for 'a' specified (04), transmitted from a malicious device to a dongle at address EA:E1:93:27:21. Packet format is described in Figure 6.

2. **Packet 2:**
   - **Address:** EA:E1:93:27:21
   - **Payload:** 00:C1:00:00:00:00:00:00:00:3F
   - **Description:** Unencrypted keypress packet with no HID scan codes specified (key release), transmitted from a malicious device to a dongle at address EA:E1:93:27:21. Packet format is described in Figure 6.

The second octet, 0xC1, indicates that this is a keyboard packet, and the fourth octet contains the keyboard scan code. In this example, the first packet represents the depressing of the 'a' key, and the second packet represents releasing it. The final octet in each packet is the checksum.

#### 6.1.2 Malicious Macro Programming (BN-0016)
Using the Logitech Gaming Software, a user can customize their G900 mouse to trigger keystroke macros whenever they click a specified mouse button. The macros are stored on the mouse itself and do not depend on any software being installed on the host computer.

The communication between the mouse and dongle is unencrypted, making it possible for an attacker to program arbitrary macros into the mouse. The G900 dongle communicates with the G900 mouse by attaching payloads to ACK packets going from the dongle back to the mouse. To maliciously program a macro into a target mouse, an attacker can ACK packets transmitted by a mouse, attaching ACK payloads with the specific commands.

The G900 macro programming works by first transmitting data representing all of the available macro commands to the mouse. Then, commands are transmitted to assign a specific macro to a specific mouse button.

The following exchange will program a macro to type the sequence 'abc':

1. **Packet 1:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 11 07 0E 6F 00 06 00 00 01 00 00 00 00 00 00 00 00 00 00 00 64

2. **Packet 2:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 51 01 0E 6F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 31

3. **Packet 3:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 11 07 0E 7F 43 00 04 44 00 04 43 00 05 44 00 05 43 00 06 44 AE

4. **Packet 4:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 51 01 0E 7F 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20

5. **Packet 5:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 11 07 0E 7F 00 06 FF FF FF FF FF FF FF FF FF FF FF FF FF FF 63

6. **Packet 6:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 51 01 0E 7F 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1F

7. **Packet 7:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B

8. **Packet 8:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 51 01 0E 7F 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1E

9. **Packet 9:**
   - **Address:** 19:D3:AC:21:08
   - **Payload:** 00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B

10. **Packet 10:**
    - **Address:** 19:D3:AC:21:08
    - **Payload:** 00 51 01 0E 7F 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1D

11. **Packet 11:**
    - **Address:** 19:D3:AC:21:08
    - **Payload:** 00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B

12. **Packet 12:**
    - **Address:** 19:D3:AC:21:08
    - **Payload:** 00 51 01 0E 7F 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1C

13. **Packet 13:**
    - **Address:** 19:D3:AC:21:08
    - **Payload:** 00 11 07 0E 7F FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 6B

14. **Packet 14:**
    - **Address:** 19:D3:AC:21:08
    - **Payload:** 00 51 01 0E 7F 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1B