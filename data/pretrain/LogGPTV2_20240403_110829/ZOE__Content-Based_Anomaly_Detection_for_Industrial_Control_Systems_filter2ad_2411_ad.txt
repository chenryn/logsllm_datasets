In this section we bring together the two key components of
ZOE and study the inﬂuence of using multiple prototype models
on the detection performance. Furthermore, we explicitly
highlight the additional improvement in the eminently important
range of low false-positive rates.
To this end, we train our detector for different numbers
of prototype models k and thresholds t in order to calibrate
the detector as described in the previous section. The best
conﬁguration with both components enabled, ZOE(4, 50), is
shown as a ROC curve in Figure 7 in relation the best
detector without prototype models, ZOE(1, 35). Note, that
the x-axis (false-positive rates) shows a logarithmic scale to
better emphasize the improvement, that the detection speciﬁc
to message types entails. Such enhancements in detection
performance are of great importance for the application of
the detector in production and limits the costs of false-alarms.
D. Comparison with Related Approaches
Ultimately, we conduct a comparison of ZOE to Ana-
gram [68], a content-based approach using higher-order
n-grams (n ≥ 3). While it originally has been designed for
Fig. 4. Exemplary ROC curve with the bounded AUC (area under the curve) for
a false-positive rate of 0.5 or 50 %, respectively. Setting this bound allows to
zoom in on the critical range of low false-positives that is particular important
for an detector.
For training and testing individual detectors we create
strictly separated datasets that do not overlap. 75 % randomly
chosen samples are used as known data for training and the
remaining 25 % as unknown data for testing. This partitioning
is applied to benign and malicious samples likewise, and is
repeated for 10 experiments which are averaged to determine
the overall detection performance. The parameters for the
detector are chosen solely based on the results obtained on
training data and only then, this conﬁguration is used to evaluate
the performance on the testing dataset.
A. Overall Detection Performance of ZOE
We begin with demonstrating our method’s detection per-
formance for the six industrial protocols we have collected.
Figure 5 shows the results for our detector parametrizes with
different de-noising thresholds and numbers of prototype mod-
els using 5-grams. The y-axis shows the detection performance
as AUC limited to different thresholds of false-positives, over
the individual protocols on the x-axis. ZOE performs very
well across different protocols and detection performance only
differs in nuances. The parametrization of the detection however
is crucial as we demonstrate in the following sections. For
protocol P3 (outgoing), for instance, our experiments show that
at least 4 different prototype models are needed to enable good
detection. Subsequently, we thus inspect the inﬂuence of the
individual components of ZOE in detail and use protocol P3
as recurring example.
Fig. 5. Detection performance of ZOE for the protocols P1 to P6.
134
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:26:43 UTC from IEEE Xplore.  Restrictions apply. 
100,000 messages. Anagram, on the other hand, only detects
16.5 % with an 500× higher false-positive rate of 1 %. These
results show that ZOE not only outperforms Anagram by an
order of magnitude in sheer detection performance, but also in
terms of false-positive rates.
Fig. 8. Detection performance of ZOE and Anagram side-by-side as ROC
curves on a logarithmic scale to better emphasize the extremely small false-
positive rates achieved by our method.
E. Evasion
In order to bypass content-based anomaly detection an
adversary might attempt to mimic benign content and slip
by attacks. We thus study the effects of a particular kind of
evasion attack—polymorphic blending—on our detector.
Mutation and transformation attacks have a long-standing
history for evading intrusion detection systems on different
levels [e.g., 18, 19, 44, 51, 55, 57, 62]. Polymorphic blending
attacks are a particular effective tool against content-based
intrusion detection [19]. Although generating these has been
proven to be NP-hard [18], attackers can resort to heuristics to
provide good approximations, for instance, using iterative hill
climbing. This method from mathematical optimization starts
off with an initial solution (the original attack) and iteratively
improves it according to a target function (the scoring function
of the detector).
Two aspects are key to the success of the attack: First, the
use of lower-order n-grams and second, a rich and extensive
model containing large amounts of benign features that can
be utilized by the attacker. The latter can also be expressed
by the density and variability of the training data set [71] that
directly inﬂuence the richness of the model. Note, that using
higher-order n-grams (n ≥ 3) also increases the complexity of
the model due to rare but apparently benign features. With
ZOE we address both aspects by a) using substrings of length
n = 5 and b) pruning rare features, thus limiting the reach of
play of an attacker.
In this ﬁnal experiment we generate 32,640 blended attack
instances per epoch over a total of 100 epochs. Additionally,
after each iteration we select the 10 best performing instances
for further mutations. This results in 3,234,624 variations that
are tested for each attack. Figure 9 shows the results of a
single experiment for a number of different thresholds of ZOE.
The gray-scale level decreases with higher thresholds from
black (t = 35) to light gray (t = 50). The higher the detection
score to which the individual curves converge to, the more
Fig. 7. Detection performance of two conﬁgurations of ZOE: First, a global
content-model with (1, 35) and second, multiple prototype models with (4, 50).
The latter clearly improves upon the other in the critical region of low false-
positive rates.
detecting attacks in HTTP trafﬁc it has proven effective for
various other protocols as well [23, 71]. Previous research has
shown that it even works well for certain binary protocols with
a limited set of different message formats and simple structure
such as Modbus [23].
Anagram is similar to the most basic conﬁguration of
our detector, ZOE(1, 0), that neither make use of prototype
models k = 1 nor de-noising of the content models t = 0.
In order to maintain comparability in this experiment we
make use of ﬁlters/sketches that have approximately the same
number of items for storing content features. We hence choose
ε = 0.0000006 and p = 0.99 for Count-Min Sketches in order
to match the 225 items large Bloom ﬁlter we use for Anagram
in this experiment. We also make use of d1 as distance measure
for a direct comparison and choose ZOE’s best parametrization
with k = 4 and t = 50.
DETECTION PERFORMANCE ZOE AND ANAGRAM FOR PROTOCOL P3.
TABLE III
Detection performance
Method
ZOE
Anagram
AUC(0.01)
AUC(0.001)
AUC(0.0001)
0.9984
0.1515
0.9844
0.0408
0.8463
0.0002
Table III shows the detection performance of both as
AUC bounded to different thresholds of false-positives for
protocol P3. While ZOE yields high performance values down
to a false-positive rates of 0.0001, Anagram is not able to
compete and only achieves an AUC(0.01) of 0.15, which even
reduces to 0.04 for AUC(0.001). This is founded in the tight
connection of structure and data found in binary protocols,
which conventional content-based anomaly detection is not
designed to operate on.
In the ROC curve shown in Figure 8 the difference becomes
even more apparent. Again, a logarithmic scale has been chosen
to highlight the importance of low false-positive rates for
intrusion detection. ZOE yields a true-positive rate of 0.971 for
as few as 0.002 % false-positives, meaning that, 97.1 % of the
attacks are correctly detected with only 2 false-alarms out of
135
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:26:43 UTC from IEEE Xplore.  Restrictions apply. 
robust the detector is against polymorphic blending attacks.
This clearly shows that narrowing down the set of features that
are used in the content model (increasing the threshold) is not
only beneﬁcial for the detection performance itself but also for
improving the resistance against mutation attacks.
Fig. 9. Polymorphic blending attacks based on 3,234,624 mutations over
100 epochs for different thresholds t used with ZOE.
The ripples observed in the second half of the curves indicate
the point in time when the algorithm has detected a potential
local minimum and attempts to escape by performing a small
number of random mutation at once.
VI. RELATED WORK
Anomaly detection has a long standing history in computer
security research and in the scope of network-based intrusion
detection in particular [e.g., 26, 45, 48, 65–68]. The uprise
of SCADA security has again fostered the development of
new methods and has extended the scope such that we
differentiate between the following, orthogonal strains of
research: A) content-based attack detection, B) detection based
on network characteristics, and C) detection by modeling
physical processes. Subsequently, we review related work with
respect to these different directions with a special focus on
industrial control systems. Due to the proximity to our approach
we however also include works on content-based anomaly
detection in general-purpose networks.
A. Attack detection based on Content
A large body of research deals with the in-depth analysis
of protocol contents. This includes the identiﬁcation [13],
analysis [41, 70] and reverse-engineering [8, 35] of protocols,
but also the detection of shellcodes in network streams [46, 53].
ZOE in contrast strives for a less speciﬁc approximation of
protocols tailored to the purpose of attack detection, and aims at
a wider range of attacks than shellcodes and abnormal behavior
in general.
For this purpose language models such as n-grams have
been proven to be very effective [45, 48, 56, 66–68]. Early
approaches [30, 66] build distributions of byte frequency as
a notion of normality to detect attacks as deviation of these
histograms. PAYL [67] extends these to the use of 2-grams,
before Wang et al. [68] propose Anagram and establish the
use of higher-order n-grams (n ≥ 3). Similar to our approach
Anagram stores a sparse vector representation of content
data in a probabilistic data structure. Recently, these data
structures have also been used for protocol-speciﬁc anomaly
detection (in combination with LTSM networks) for SCADA
systems [17]. Rieck and Laskov [48] address the use of higher-
order n-grams with a representation as Trie that allows for the
efﬁcient computation of distances of such vector representations.
Spectogram [56], on the other hand, extracts n-grams from
HTTP request and models these as a mixture of Markov chains
and thus avoids storing observed features altogether. Moreover,
it also employs a variant of clustering to control the number of
Markov models. While similar in spirit to ZOE, both approaches
operate on an entirely different scale.
Wressnegger et al. [71]
and Hadˇziosmanovi´c et al. [23]
provide a more general overview of content-based detection
based on n-grams. The latter however focuses on industrial
control systems and inspects the suitability of various detection
methods such as POSEIDON [5] and Anagram [68]. In con-
cept similar to PAYL, D¨ussel et al. [14] presents an anomaly
detection system based on n-grams using distance metrics for
industrial networks. This certainly shares the motivation with
ZOE but does not pursue any advanced detection strategies
to cope with proprietary binary protocols found in large
industrial facilities.
B. Attack Detection based on Network Characteristics
Alternatively to evaluating the content of network packets, re-
searchers have considered sequences of network packets and the
relationships of the communicating devices. These approaches
operate on a complementary level of network trafﬁc compared
to ZOE. Yang et al. [73] present an intrusion detection system
that uses an auto-associative kernel regression model coupled
with the statistical probability ratio test. Schuster et al. [52]
apply a one-class SVM on a number of traces from real-
world industrial trafﬁc from different industrial control sys-
tems. Koutsandria et al. [28] and Parvania et al. [42] propose
to extend intrusion detection systems for SCADA systems
by combining traditional signature-based approaches and
communication rules, while considering physical limits of the
involved devices. Fovino et al. [20] propose a new state-based
intrusion detection system for SCADA systems that combines
traditional, signature-based techniques with a state-analysis
technique. Udd et al. [60] extend the network security platform
Bro [59] to support a particular SCADA protocol.
C. Attack Detection by Modeling Physical Processes
to model
Several researchers attempt
the physical pro-
cess of industrial facilities which again is orthogonal
to
our approach. Teixeira et al. [58], Alajlouni and Rao [2], and
Vukovic and D´an [64], for instance, model system state estima-
tors and analyze their security properties and detect emerging
anomalies. Luchs and Doerr [36] have recently presented an
anomaly detection scheme that makes use of envelope escala-
tion for sensor readings. Hadˇziosmanovi´c et al. [24] model the
semantics of process variables while Mo et al. [38] propose a
model-based technique to detect integrity attacks on the sensors
of cyber-physical system.
136
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:26:43 UTC from IEEE Xplore.  Restrictions apply. 
Another strain of research formally describes the un-
derlying process. Pasqualetti et al. [43] propose a mathe-
matical
framework for modeling cyber-physical systems
and attacks. Wang et al. [69] utilizes a detection scheme
based on relation-graphs to detect stealthy false-data in-
jection attacks, while Miao et al. [37] use linear combi-
nations of coding sensor outputs to detect
those attacks.
Do et al. [12]
formulate the attack problem as transient
changes in stochastic-dynamical systems involving unknown
system states. Rocchetto and Tippenhauer [50], on the other
hand, use formal modeling to discover potential attacks on
cyber-physical systems.
Other model-based approaches deal with the detection of
manipulated physical data—frequently using clustering tech-
niques: Krotoﬁl et al. [29] propose a process-aware approach
to detect sensor signal manipulations using the correlation
entropy in clusters of related sensors. Kiss et al. [27] detect
cyber attacks targeting measurements using a Gaussian mixture