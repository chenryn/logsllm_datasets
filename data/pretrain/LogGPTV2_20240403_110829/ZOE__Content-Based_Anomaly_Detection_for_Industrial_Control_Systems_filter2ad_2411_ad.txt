### Influence of Multiple Prototype Models on Detection Performance

In this section, we integrate the two key components of ZOE and examine the impact of using multiple prototype models on detection performance. We also emphasize the significant improvement in the critical range of low false-positive rates.

To achieve this, we train our detector with varying numbers of prototype models \( k \) and thresholds \( t \) to calibrate it as described in the previous section. The best configuration, ZOE(4, 50), which utilizes both components, is compared to the best detector without prototype models, ZOE(1, 35), using a ROC curve (Figure 7). Note that the x-axis (false-positive rates) is on a logarithmic scale to highlight the improvements in detection performance, particularly at low false-positive rates. These enhancements are crucial for practical applications, as they reduce the costs associated with false alarms.

### Comparison with Related Approaches

We compare ZOE to Anagram [68], a content-based approach that uses higher-order n-grams (n ≥ 3). Originally designed for HTTP traffic, Anagram has been shown to be effective for various other protocols, including binary protocols with limited message formats and simple structures, such as Modbus [23].

Anagram is similar to the basic configuration of our detector, ZOE(1, 0), which does not use prototype models or content model denoising. To ensure comparability, we use filters/sketches with approximately the same number of items for storing content features. For Count-Min Sketches, we choose ε = 0.0000006 and p = 0.99 to match the 225-item Bloom filter used for Anagram. We also use the d1 distance measure for direct comparison and select ZOE’s best configuration with \( k = 4 \) and \( t = 50 \).

#### Detection Performance

Table III shows the detection performance of ZOE and Anagram for protocol P3, measured as AUC bounded to different false-positive thresholds. ZOE achieves high performance values down to a false-positive rate of 0.0001, while Anagram's performance is significantly lower, achieving an AUC(0.01) of 0.15, which further decreases to 0.04 for AUC(0.001). This disparity is due to the tight connection between structure and data in binary protocols, which conventional content-based anomaly detection methods are not designed to handle.

The ROC curve in Figure 8, with a logarithmic scale, further highlights the importance of low false-positive rates. ZOE achieves a true-positive rate of 0.971 with only 0.002% false-positives, meaning that 97.1% of attacks are correctly detected with just 2 false alarms out of 100,000 messages. In contrast, Anagram detects only 16.5% of attacks with a 500x higher false-positive rate of 1%.

### Evasion Attacks

To study the effects of evasion attacks, particularly polymorphic blending, we generate 32,640 blended attack instances per epoch over 100 epochs, selecting the 10 best-performing instances for further mutations after each iteration. This results in 3,234,624 variations tested for each attack. Figure 9 shows the results for different thresholds of ZOE, with the gray-scale level decreasing from black (t = 35) to light gray (t = 50). The higher the detection score to which the curves converge, the more robust the detector is against polymorphic blending attacks.

Increasing the threshold (i.e., narrowing the set of features used in the content model) not only improves detection performance but also enhances resistance to mutation attacks. The ripples observed in the second half of the curves indicate the point when the algorithm detects a potential local minimum and attempts to escape by performing a small number of random mutations.

### Related Work

#### Content-Based Attack Detection

A significant body of research focuses on the in-depth analysis of protocol contents, including identification, analysis, and reverse-engineering of protocols, as well as the detection of shellcodes in network streams. ZOE aims for a less specific approximation of protocols, targeting a wider range of attacks. Language models like n-grams have been effective, with early approaches using byte frequency distributions and later extending to 2-grams and higher-order n-grams.

Recent works include Spectogram [56], which models HTTP requests as a mixture of Markov chains, and Wressnegger et al. [71] and Hadžiosmanović et al. [23], who provide overviews of content-based detection based on n-grams. While these approaches share some similarities with ZOE, they operate on different scales and do not address the challenges of proprietary binary protocols in large industrial facilities.

#### Network Characteristics-Based Attack Detection

Researchers have also considered sequences of network packets and the relationships between communicating devices. These approaches complement ZOE by operating on a different level of network traffic. Examples include Yang et al. [73], who use an auto-associative kernel regression model, and Schuster et al. [52], who apply one-class SVMs to real-world industrial traffic. Other works, such as Koutsandria et al. [28] and Parvania et al. [42], combine traditional signature-based approaches with communication rules and physical limits.

#### Physical Process Modeling

Some researchers model the physical processes of industrial facilities, which is orthogonal to our approach. Teixeira et al. [58], Alajlouni and Rao [2], and Vukovic and Dán [64] model system state estimators and analyze their security properties. Luchs and Doerr [36] use envelope escalation for sensor readings, while Hadžiosmanović et al. [24] and Mo et al. [38] propose model-based techniques for detecting integrity attacks on sensors.

Other model-based approaches, such as Pasqualetti et al. [43], Wang et al. [69], and Miao et al. [37], use mathematical frameworks and linear combinations of coding sensor outputs to detect attacks. Clustering techniques, such as those proposed by Krotofil et al. [29] and Kiss et al. [27], are also used to detect manipulated physical data.