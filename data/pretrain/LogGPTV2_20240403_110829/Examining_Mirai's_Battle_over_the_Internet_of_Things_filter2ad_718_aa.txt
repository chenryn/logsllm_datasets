# Title: Examining Mirai's Battle over the Internet of Things
## Authors:
- Harm Griffioen, University of Potsdam, Germany (PI:EMAIL)
- Christian Doerr, Hasso Plattner Institute for Digital Engineering, University of Potsdam, Germany (PI:EMAIL)

## Abstract
In late 2016, the Mirai botnet emerged as a significant threat actor, leveraging hundreds of thousands of compromised Internet of Things (IoT) devices to launch distributed denial-of-service (DDoS) attacks that temporarily disabled major Internet service providers and infrastructure. Since then, numerous variants of IoT-based botnets have proliferated, making DDoS attacks from IoT devices a primary attack vector. This surge was largely driven by the public release of the Mirai source code, which enabled other actors to create their own customized versions.

This paper provides a comprehensive analysis of the ongoing battle over the IoT, fought by Mirai and its many variants. Using 7,500 IoT honeypots, we collected 300 million compromisation attempts from infected IoT devices. Additionally, we identified a design flaw in Mirai’s random number generator, which allowed us to gain insights into global Mirai infections. Our findings indicate that networks and specific malware strains are closely interconnected, with malware authors adopting strategies from their competitors over time. Surprisingly, we discovered that IoT botnets are not self-sustaining; without continuous bootstrapping, Mirai and its variants would die out.

## CCS Concepts
- Security and privacy → Network security; Malware and its mitigation

## Keywords
Mirai, botnet, IoT, cyber threat intelligence

## ACM Reference Format
Griffioen, H., & Doerr, C. (2020). Examining Mirai’s Battle over the Internet of Things. In 2020 ACM SIGSAC Conference on Computer and Communications Security (CCS '20), November 9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA, 13 pages. https://doi.org/10.1145/3372297.3417277

## 1. Introduction
The emergence of the Mirai botnet in late 2016 fundamentally altered the Internet threat landscape. Although the risks associated with insufficiently protected IoT devices were well-known, the problem gained widespread attention when Mirai launched DDoS attacks exceeding 600 Gbps, crippling major Internet infrastructure and service providers like OVH and Dyn. These initial attacks doubled previous DDoS volumes and continued to escalate, eventually surpassing the 1 Tbps threshold.

The public release of the Mirai source code shortly after its debut sparked a wave of copycat malware, including variants such as "MIORI," "JOSHO," and "MASUTA." These derivatives are based on the Mirai source code but include actor-specific modifications to passwords, identification methods, and command-and-control (C&C) servers.

The easy access to the source code and the abundance of vulnerable devices have led to a proliferation of Mirai variants, all vying for control over the millions of IoT devices deployed worldwide. In this paper, we examine the battle between Mirai and its variants. We leverage the fact that Mirai behaves like a worm, using infected IoT devices to scan the Internet for additional targets. By deploying 7,500 IoT honeypots, we collect these infection attempts, providing real-time insights into which devices are infected and by which strain.

One of the key features of Mirai and its variants is the method used to search for victims. To avoid detection, the malware uses a custom random number generator (RNG) to select target IP addresses. However, this RNG has a critical flaw, allowing us to break the seed from a single incoming packet. This insight enables us to understand the lifetime of infections on devices.

Our contributions include:
- Providing the first comprehensive view into the infection and reinfection behavior of IoT devices.
- Demonstrating the exploitation of structural weaknesses in Mirai’s RNG to determine the precise moment of compromise.
- Showing that IoT devices are under intense attack by multiple actors, with frequent changes in ownership due to reboots, re-infections, and hostile takeovers.
- Highlighting that IoT malware crashes relatively quickly on routers, with clear differences between malware strains and the network environments they operate in.

## 2.2 Mirai Behavior
Certain implementation choices in Mirai result in unique behavioral characteristics that can be effectively fingerprinted. At a high level, Mirai pursues three main objectives after infecting a device:
1. It closes the entry point (typically telnet on TCP port 23) to gain exclusive control.
2. It starts a continuous scan for other devices, attempting to brute-force open telnet ports using a built-in credential list.
3. It establishes a connection with the hardcoded C&C server and executes received commands.

Figure 2 shows an excerpt of the Mirai source code, illustrating these tasks spawned in the `main()` function (see marker 1 in Figure 2).

When targeting telnet, Mirai attempts to bind to port 23. If this is not possible, it tries to shut down any other telnet processes to prevent other logins. In the `killer_init()` function, it identifies and kills the process bound to port 23, thereby locking the router for the duration of the infection. However, Mirai and its descendants are non-persistent, meaning that after a reboot, the device returns to its pre-infected, vulnerable state, ready for re-infection.

As one of its first actions, Mirai spawns a separate thread to perform an Internet-wide scan for other IoT devices. The `scanner_init()` function re-initializes the random number generator, as shown in the code (see marker 2 in Figure 2).

By analyzing these behaviors and the flaws in the RNG, we can gain deeper insights into the lifecycle and impact of Mirai and its variants on the IoT ecosystem.