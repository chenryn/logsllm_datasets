日常安全工作中通过对人侵检测数据的分析，能感知到僵户网络的演变以及0day1day
Nday的攻击趋势。当僵户网络在其初期，尚未形成规模之时，如果及时联合业界安全联盟
加以打击，必将其扼杀在摇篮。合作形式参见图8-36。
通常BAT这类公司自有业务和服务器的规模庞大，作为一个目标巨大的“靶场”又是
一个分布式的大“蜜罐”，如果能充分挖掘其数据潜力，定能帮助业界共同提升安全水平。
---
## Page 192
180技术篇
攻击会试
数量
图8-34Botnet 攻击尝试统计
漏润传播
规模化
漏洞修补
阻新扫除
图 8-35Botnet 生命周期
ip信誉库
攻击趋势
策略共享
取证定损
已邮ipll
OdnyIdny玫击
idsipslwaf
预警
防护策略
恶意攻击定损
击
漏润修补临时
封塔
解决方案
跨网取证
图8-36合作方式
---
## Page 193
第8章入侵感知体系181
8.8安全运营
在企业初期，安全工作的主要内容通常是购买安全设备或者部署开源安全软件。可能
安全岗位的职责也就是仅限于部署安全系统以及确保其稳定运行。但后来通常会发现安全
状况并没有得到有效改善，其根本原因就是没有深耕细作，深入运营。
1.安全方案选型
前面介绍了大量的安全产品与方案，那么是否逐一部署就能解决安全问题呢？答案是
否定的。通常每个安全产品和系统的研发都有其既定的应对的安全场景，在采购部署之前，
你是否有评估过我们的企业到底面临哪些风险，对应的应该选择什么安全产品和方案？
2.安全事件的闭环运营
每年企业内部网络环境总会出现很多的安全事件，在我们匆忙应急，焦头烂额的解决
之后，没有多久同类事件在另个角落可能又会发生，于是乎安全工程师们就变身为一个个
运营，完善每次发现的短板。
3.可量化的安全能力
安全工作中我们会不断建设各种安全系统，上各种安全解决方案，但是很可能还是不
能解决一个问题，我们的安全能力到底能打多少分？在下一波黑客攻击、新漏洞\蜗虫出现
的时候，我们能阻断发现多少事件？现有的安全系统足够解决全部的问题了吗？
---
## Page 194
Cyc9第9章
漏洞扫描
漏洞扫描、人侵感知和应急响应是技术维度日常工作中最重要的3个部分。
9.1概述
漏洞是指缺少安全措施或采用的安全措施有缺陷，可能会被攻击者利用，对企业的信
息资产的安全造成损害。漏洞扫描就是利用扫描器发现漏洞的过程。
企业的安全工程师在业务上线前或对公司所有资产进行周期性地例行扫描，可以在被
攻击者发现可利用的漏洞之前发现并修复，将可能带来的损害减少到最低，对企业信息安
全来说有积极主动、防惠于未然的作用。外部黑客渗透前需要踩点，在得知域名及IP等有
限的信息逐步进行尝试、还需要绕过ACL、IDS、WAF等防御措施。企业内部扫描可以直
接拿到所有服务器的资产列表、所有Web的域名及在每个IDC部署扫描服务器，所以内部
扫描更加方便、更全面。但是群众的智慧是无穷的，即便是这种信息不对称的情况下，外
部的黑客或白帽子总有办法找到漏洞，所以各大互联网公司纷纷都建立了自己的应急响应
中心（俗称SRC），并给报漏洞的白帽子发丰厚的奖励。（注：当下的SRC已经不只奖励漏
洞，同时还奖励举报的危害线索）可以说内部扫描可以发现99%以上的漏洞，剩余的则需
要建立应急响应中心借助广大白帽子的力量（众测，类似众筹的一种形式）一起消灭掉，比
如接收外部白帽子提供的漏洞和威胁情报信息并进行奖励。图9-1为国内某知名SRC的某
---
## Page 195
第9章漏洞扫描183
白帽子兑换奖励的截图。
2015年11月月星务批8盈实
Pad mini 3
2015年1204[
TSRC 2015感患外套
2015年基服节人交关
2015年11月23日
平长电脂 平果 IPAD MIN2
2015年10月月度特到8奖
2015年1185B
平板电脑草果 IPAD MIN2
2015年9月月度排88证奖
2015年10R10B
口
2015年中秋孔盒
2015年中肤人文关例
2015年09月10日
费列罗巧克力礼盘
2015年七9人X关别
2015年08月138
图9-1某SRC奖励
9.2
漏洞扫描的种类
9.2.1
按漏洞类型分类
按扫描的漏洞的类型及目标不同，可以将漏洞扫描分为以下几种：
ACL扫描
口弱口令扫描
口系统及应用服务漏润扫描
 Web 漏润扫描
1.ACL扫描
ACL扫描是用来按一定的周期监视公司服务器及网络的ACL的，比如无需对外开放的
端口或IP是否暴露在了公网中。ACL扫描器的作用如下：
1）安全部门可以根据扫描报告督促网络管理员和系统管理员关闭暴露在公网中的高危
---
## Page 196
184技术篇
服务，避免重要的服务因放在公网中被入侵的风险。
2）等某些应用或某些版本的应用发现新漏润时，安全部门可以快速从数据库中查到存
在漏洞的服务及版本，直接报到业务部门去修复。
ACL扫描的周期至少为一天一次，对于不同规模服务器的企业可以采用以下的方式：
1）对于服务器数量较少的公司，可以直接用nmap扫描，并将扫描出来的IP、端口，
应用服务名、应用版本、时间等信息存放到数据库中。
2）对于服务器数量很多的公司，可以用Masscan扫描出所有的端口信息，然后再用
nmap去识别端口的协议及应用程序版本信息，可以根据实际情况部署扫描服务器的数量、
形成分布式的架构，加快扫描速度。
2.弱口令扫描
管理员因疏忽大意或安全意识薄弱给网络设备、服务器或应用使用了默认的和简单的
口令，这种弱口令的设备挂在公网上后很快就被黑客或端虫扫描到并快速渗透。常见的扫
描器如 Nessus、X-scan、h-scan、Hydra 都具备弱口令扫描的功能，其中 hydra 支持的服务
列表如下：
asterisk cisco cisco-enable cvs ftp ftps http[s]-{hcad|get} http[s]-{get|post}-form http-
proxy http-proxy-urlenum
icq imap[s] irc ldap2[s] ldap3[-{cram|digest↓md5][s] mssql mysql(v4) nntp oracle-listener
oracle-sid pcanywhere
pcnfs pop3[s] postgres rdp redis rexec rlogin rsh s7-300 sip smb smtp[s] smtp-enum snmp
socks5 ssh sshkey svn teamspeak telnet[s] mauthd vnc xmpp
注：弱口令是高危漏洞，扫描到后需要业务部门第一时间修复。
以下为一个Python调用hydra扫描SSH弱口令的脚本，扫描结束后会将结果写到一个
文本文件中：
import 08
import re
import g1ob
import datetine
---
## Page 197
第9章漏洞扫描185
import subprocess
import torndb
from bs4 import Beaut1fu1Soup
honeypot white db
db_info = dict (
hostname=*127, 0,0.1′,
database=*honeypot ′,
username=*xxxxx*,
xxxxxx, -pxoxssed
 Nmap scan clas8
class NnapScaner (object) :
def _init__(self, ip_list, exclude_file) :
self,dir = 1/datal/ssh_scan*
self.ip_list = "ls/ls* a (self.dir, ip_list)
self.exclude_file = exclude_file
self,report = "es/report_ss,xm1* $ (self,di.r, str (datetime,datet.ine,now()) [:10])
self.ssh_list = "%s/report_ks,ssh* $ (self.dir, str (datetime,datetime,now()) [:10])
1  ,A- uedo-- U se xo- 2zo8*zz d sg 9ppntoxe s) TT deuu/ura/xsn/, - puD*g9s
self.ip_list, self,exclude_file, self.report
self.hosts = []
J
def start (self) :
print self,cmd
05.system (self ,cmd)
 p = subprocess,Popen (self,cmd, she11=True)
 p.xait()
def result(self):
print "xeport: *, self,report, type (self.report)
p1 = z′*
r1 = re,compile(p1)
p2 = x**
r2 = re.compile (p2)
soup - BeautifulSoup (open (self,report) read ())
results = soup.find_all (*host*)
for item in results:
---
## Page 198
186技术篇
()qoTP = asou
()4s = [s2o_1soq
ret_ip = r1.findall (str (iten.address))
if ret_ip:
p - ret_ip[0]
d = [d]so
for port in item.ports1
ret_port = r2.findall(str (port))
if ret_port:
host [αports"] append (ret_port[0]]
self.hosts append (host)
 print hosts
f = open (self.ssh_list, "v*)
for item in self,hosts1
ports = item.get(*ports*)
(,d1eb*ueT = d
if ip in CONSr_HONEYPOT:
continue
for port in ports1
f,write(*%s:ls\n* 8 (ip, port))
return self.ssh_list
 Crack ssh passxd
class CracksSH(object) :
def _init__(self, ssh_filename) :