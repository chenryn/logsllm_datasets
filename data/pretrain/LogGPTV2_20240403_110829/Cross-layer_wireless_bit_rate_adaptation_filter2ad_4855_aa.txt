title:Cross-layer wireless bit rate adaptation
author:Mythili Vutukuru and
Hari Balakrishnan and
Kyle Jamieson
Cross-Layer Wireless Bit Rate Adaptation
Mythili Vutukuru and Hari Balakrishnan
MIT CSAIL
{mythili,hari}@csail.mit.edu
ABSTRACT
This paper presents SoftRate, a wireless bit rate adaptation proto-
col that is responsive to rapidly varying channel conditions. Unlike
previous work that uses either frame receptions or signal-to-noise
ratio (SNR) estimates to select bit rates, SoftRate uses conﬁdence
information calculated by the physical layer and exported to higher
layers via the SoftPHY interface to estimate the prevailing chan-
nel bit error rate (BER). Senders use this BER estimate, calculated
over each received packet (even when the packet has no bit errors),
to pick good bit rates. SoftRate’s novel BER computation works
across different wireless environments and hardware without re-
quiring any retraining. SoftRate also uses abrupt changes in the
BER estimate to identify interference, enabling it to reduce the bit
rate only in response to channel errors caused by attenuation or
fading. Our experiments conducted using a software radio proto-
type show that SoftRate achieves 2× higher throughput than popu-
lar frame-level protocols such as SampleRate [4] and RRAA [24].
It also achieves 20% more throughput than an SNR-based protocol
trained on the operating environment, and up to 4× higher through-
put than an untrained SNR-based protocol. The throughput gains
using SoftRate stem from its ability to react to channel variations
within a single packet-time and its robustness to collision losses.
Categories and Subject Descriptors: C.2.1 [Computer-Comm-
unication Networks]: Network Architecture and Design—Wireless
communication
General Terms: Design, experimentation, performance.
Keywords: Wireless, bit rate adaptation, SoftPHY, cross-layer.
1.
INTRODUCTION
Wireless communication suffers from many time-varying vaga-
ries that cause bit errors and packet losses. These include signal
attenuation, channel fading due to multipath propagation, and in-
terference caused by other transmissions at overlapping frequen-
cies. These stochastic effects are more pronounced when changes
occur in the propagation environment, for instance because of node
mobility, or by the movement of people and objects. The result
is a channel that is difﬁcult (if not near-impossible) to accurately
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’09, August 17–21, 2009, Barcelona, Spain.
Copyright 2009 ACM 978-1-60558-594-9/09/08 ...$10.00.
Kyle Jamieson
University College London
PI:EMAIL
Figure 1: Experimental SNR ﬂuctuations in time over a fad-
ing channel with walking-speed mobility. Large-scale fading is
evident from the 10-second window (upper), and in a 350 ms
detail (middle) we see fades a few tens of milliseconds in dura-
tion. Bit error rate (lower: BPSK, code rate-1/2) changes with
SNR. Data obtained using an 802.11a/g-like software radio pro-
totype (§4).
model, in which the signal-to-noise ratio (SNR) and channel bit
error rate (BER) change with time. For example, Figure 1 shows
measurements that illustrate the variation of SNR and BER over
time when a sender is moving away from the receiver at walking
speed; note the multipath fading effects on shorter timescales in
addition to the gradual attenuation over longer timescales.
To improve throughput in these varying conditions, the sending
node can dynamically adapt its modulation and coding by picking
a suitable bit rate. The bit rate adaptation protocol used to make
this choice must answer two important questions:
1. What signal (information) should the sender use to select the
right bit rate?
2. Over what timescale should this signal be observed?
Prior work on bit rate adaptation (§2) uses one of two infor-
mation signals: frame receptions or signal-to-noise ratio (SNR).
Frame-level protocols [24, 4] must operate over the timescale of
tens or hundreds of frames or more because they need several trans-
missions to accurately assess frame loss rates at various bit rates.
As a result, frame-level schemes are not responsive to channel vari-
ations that occur on shorter timescales. On the other hand, SNR-
based protocols [10, 21] can operate on shorter timescales by esti-
mating the SNR on each reception and mapping it to the expected
BER using known SNR-BER relationships. But because the BER
at a given SNR might vary by many orders of magnitude between
environments, these protocols must be carefully trained for each
3operating environment [5]. SNR measurements also require hard-
ware-speciﬁc calibration [25].
The information signal used by rate adaptation protocols must
also be robust to interference. A bit rate adaptation protocol must
not reduce bit rate in response to collisions, because doing so in-
creases the transmit duration of frames and conﬂicts with other
mechanisms (like exponential backoff) that the channel access pro-
tocol employs to avoid a collision on the next retry. A frame re-
ception is an example of an information signal that is not robust to
interference [24, 20].
This paper presents SoftRate, a bit rate adaptation protocol that
overcomes these limitations of existing protocols. SoftRate uses a
novel signal to make its decisions: the interference-free BER esti-
mate computed using per-bit conﬁdences exported by the physical
layer (PHY). Note that these per-bit conﬁdences, usually referred to
as SoftPHY hints [12], were computed only for the Zigbee PHY in
previous work. In this paper, we generalize the concept of SoftPHY
hints and show how one can compute them for any PHY (includ-
ing 802.11a/b/g, Zigbee, WiMax) that uses a linear convolutional
or block error-correcting code. We propose using the log-likelihood
ratio of a bit being correct to its being incorrect that is computed by
some standard decoders [8, 2] as the SoftPHY hint, and show that
it can be used to accurately estimate the underlying channel BER.
A SoftRate receiver uses the per-bit SoftPHY hints delivered
by the PHY via the SoftPHY interface to accurately estimate the
BER of a received frame without knowing which bits were actu-
ally transmitted. Furthermore, our method allows the receiver to
estimate the underlying channel BER even using a frame that was
received with no errors, a feature that is important in the context of
bit rate adaptation (e.g., channel BER estimates of 10−4 and 10−9
at some bit rate would result in different transmit bit rate choices
for the next packet). The SoftRate receiver also uses a heuristic
to separate out errors caused by strong interferers, because reduc-
ing the transmit bit rate in response to interference only worsens
the contention on the channel. The SoftRate sender then uses the
interference-free BER conveyed by the receiver at the current bit
rate to estimate the BER at the other rates, and before each trans-
mission picks the bit rate that minimizes the air-time required to
deliver the packet to the receiver (§3). Using a very small amount
of information on the feedback channel—one BER measurement
per frame—SoftRate adapts the transmit bit rate at the granular-
ity of individual frames, and is highly responsive to rapid channel
variations due to mobility.
We have implemented our SoftPHY scheme using minor modiﬁ-
cations to the 802.11a/g-like PHY in the GNU Radio codebase (§4).
Experiments with our software radio prototype show that SoftPHY
hints can be used to correctly estimate packet BER without re-
quiring any training or calibration across a wide variety of wire-
less propagation environments (§5). Our trace-driven evaluation of
TCP over SoftRate using the ns-3 simulator (§6) shows that Soft-
Rate achieves gains of 20% over an SNR-based protocol carefully
trained on the operating environment, 4× higher throughput than
an untrained SNR-based protocol, and up to 2× more throughput
than frame-level protocols like RRAA [24] and SampleRate [4] in
mobile fading and interference-dominated channels. Performance
gains in our experiments stem from SoftRate’s ability to quickly
react to rapid channel variations before TCP’s end-to-end conges-
tion control mechanism reacts to burst losses, and its resilience to
collision-induced losses.
Finally, we believe that the idea of estimating the BER of a re-
ceived frame from SoftPHY hints has wider implications beyond
just bit rate adaptation, and the interface developed in the context
of SoftRate can be used by a variety of future cross-layer protocols.
2. RELATED WORK
We begin by noting that bit rate adaptation is a distinct problem
from error recovery. In particular, SoftRate operates with a variety
of error recovery schemes, including advanced hybrid ARQ tech-
niques that are more efﬁcient than the “retry entire frame” method
used in 802.11a/b/g today.
In general, the term “Hybrid ARQ”
refers to any scheme that combines forward error correction (FEC)
and automatic repeat request (ARQ). Systems such as WiMax [11],
cellular high-speed downlink packet access (HSDPA), and more re-
cent proposals such as ZipTx [15] use a form of hybrid ARQ called
incremental redundancy [16, 17] to match coding rate to channel
capacity. Incremental redundancy forgoes aggressive FEC on the
ﬁrst transmission of a packet, requesting subsequent transmissions
of parity bits with ARQ only if needed. Partial packet recovery
(PPR) [12] is another error recovery scheme that uses SoftPHY
hints to retransmit (mostly) only those bits believed to be in error.
While these error recovery schemes improve capacity in a time-
varying wireless channel, their performance is still contingent on
choosing appropriate bit rates for individual transmissions. In other
words, while error recovery chooses which data to transmit, rate
adaptation chooses at which bit rate to transmit.
The rest of this section summarizes previous frame-level (§2.1)
and SNR-based (§2.2) bit rate adaptation protocols.
2.1 Frame-level Bit Rate Adaptation
Many frame-level rate adaptation schemes have been proposed
[14, 18], the most recent ones being RRAA [24] and SampleR-
ate [4], which also provide a good survey of frame-level schemes
in general. Frame-level schemes are, by design, less responsive
to channel variations than SoftRate because one requires multiple
frame receptions to accurately estimate channel state at any bit rate.
SampleRate is currently used in the Linux 802.11 device driver
for Atheros cards. It picks the bit rate that minimizes the ten-second
average packet transmission time (including MAC layer delays),
periodically sampling from bit rates other than the current best in
order to adapt to changing channel conditions. RRAA uses short-
term frame loss information gathered over tens of frames to adapt
bit rate more opportunistically than SampleRate. RRAA also com-
pares the frame loss statistics both with and without RTS/CTS in or-
der to guess whether each loss is caused by a collision or fading on
the channel. It then adaptively enables RTS/CTS more frequently
as collision losses increase. We compare SoftRate to both (§6),
showing signiﬁcant performance improvements.
COLLIE [20] makes the observation that collision losses ad-
versely impact the performance of rate adaptation protocols. To
address this problem, a COLLIE sender analyzes the patterns of bit
errors in receptions in order to infer whether an error was due to a
collision or a channel loss, and modiﬁes rate adaptation protocols
to adapt bit rate on channel losses alone. However, to detect bit
errors, the COLLIE receiver echoes the entire received frame to the
sender, incurring signiﬁcant overhead.
Finally, other protocols, [1, 3] use timing information from the
physical layer (such as “channel busy” time from Madwiﬁ or packet
interarrival times) to infer interference losses, but are susceptible to
the same inefﬁciencies as frame-level protocols in general.
2.2 SNR-based Rate Adaptation Protocols
Because the theoretical relationship between SNR and channel
BER is well-known across the various bit rates, it is conceivable
that SNR estimates of received frames can be used to pick the best
transmit bit rate that maximizes throughput. RBAR [10] uses the
RTS/CTS exchange at the beginning of a packet to estimate SNR
at the receiver, and picks the transmit bit rate accordingly. OAR
4Figure 2: A high-level view of the SoftRate system.
[21] builds on RBAR, opportunistically transmitting back-to-back
frames when the channel quality is good. CHARM [13] lever-
ages reciprocity of the wireless channel to estimate average SNR
at the receiver using packets overheard from the receiver, thereby
avoiding the overhead of RTS/CTS and enabling implementation
on commodity cards.
However, it is difﬁcult to accurately measure SNR in current
commodity 802.11 systems due to hardware calibration issues and
interfering transmissions, as Zhang et al. note [25]. Worse still,
the SNR-BER relationship changes with different propagation en-
vironments, because the SNR measured at the start of the packet
(e.g., using the Schmidl-Cox algorithm [22]) does not capture the
variation in SNR that might occur during the packet transmission
due to fading. In more recent work, Camp and Knightly [5] evalu-
ate a number of SNR-based rate adaptation protocols and ﬁnd that
because the SNR-BER relationships change with varying degrees
of mobility, SNR-based protocols require in-situ training to per-
form efﬁciently across different propagation environments. While
CHARM [13] proposes a mechanism to calibrate its algorithm on
a slower timescale to handle heterogeneous hardware, their mech-
anism is not effective against changes in the propagation environ-
ment that occur on a faster timescale, say, due to more mobility.
Other communication systems like IS-856 CDMA cellular data
(1x EVDO) that perform rate-adaptation based on SNR use pilots
to track the average SNR over the entire duration of the packet, in-
stead of just at the beginning of a transmission, thereby avoiding the
problem of sensitivity to propagation environment discussed above.
However, in addition to incurring the overhead of pilots, these tech-