      - 137.67.239.174
      - 182.102.141.194
      - 8.154.231.164
      - 37.184.84.44
      - 78.25.205.83
    [*] Retrieving target homepage at https://myvulnerable.site
    [*] Testing candidate origin servers
      - 51.194.77.1
      - 223.172.21.75
      - 18.136.111.24
            responded with an unexpected HTTP status code 404
      - 127.200.220.231
            timed out after 3 seconds
      - 177.67.208.72
      - 137.67.239.174
      - 182.102.141.194
      - 8.154.231.164
      - 37.184.84.44
      - 78.25.205.83
    [*] Found 2 likely origin servers of myvulnerable.site!
      - 177.67.208.72 (HTML content identical to myvulnerable.site)
      - 182.102.141.194 (HTML content identical to myvulnerable.site)
其实完全可以通过 Censys 提供的 API 自己集成一款简洁实用的全自动化探测脚本，如果后面我有时间写好了，会同步更新到这里的。
**4.证书收集**
可以通过  进行快速证书查询收集
附上查询的 python 小脚本：
    import requests
    import re
    TIME_OUT = 60
    def get_SSL(domain):
        domains = []
        url = 'https://crt.sh/?q=%25.{}'.format(domain)
        response = requests.get(url,timeout=TIME_OUT)
        ssl = re.findall("(.*?).{}".format(domain),response.text)
        for i in ssl:
            i += '.' + domain
            domains.append(i)
        print(domains)
    if __name__ == '__main__':
        get_SSL("baidu.com")
获得所有包含证书的子域：
###  四、通过海外 DNS 查询
  * 针对国内市场用户，大部分的 CDN 服务商并没有做海外市场的 CDN ，所以可以通过寻找小众、冷门的海外 DNS 查询，看是否能获得真实 IP 。
    $ nslookup target.com 
也可以使用海外的超级ping类的平台在线多国家多地区测试，推荐  ，支持
140 多个地区的 ping 测试，另外支持针对某子域超长期的监控，通过邮件通知，简直太强大了。
###  五、通过敏感文件泄露
包括但不限于：
  * 服务器日志文件
  * 探针文件，例如 phpinfo
  * 网站备份压缩文件
  * .DS_Store
  * .hg
  * .git
  * SVN
  * Web.xml
字典非常重要，往往疏忽的点就在一台边缘服务器。
###  六、通过变更的域名
  * 很多网站在发展的过程中，会更换域名，比如京东以前的域名是 360buy.com ，后来斥巨资购买了 jd.com 。
  * 网站在更换新域名时，如果将 CDN 部署到新的域名上，而之前的域名由于没过期，可能未使用 CDN，因此可以直接获得服务器 IP，所以，历史域名也是一个很重要的点。
###  七、 通过 APP 移动端应用
  * 如果网站存在 APP ，可以通过抓包分析其 APP 的数据流量，看是否能找到网站真实 IP 地址，记得关注 APP 的历史版本，里面会有很多 surprise 。
###  八、通过 F5 LTM 解码
  * LTM 是将所有的应用请求分配到多个节点服务器上。提高业务的处理能力，也就是负载均衡。
  * 当服务器使用 F5 LTM 做负载均衡时，通过对 `set-cookie` 关键字的解码，可以获取服务器真实 ip 地址。
例如：
    Set-Cookie: BIGipServerpool_9.29_5229=605532106.22012.0000
  * 先把第一小节的十进制数，即 605532106 取出来
  * 将其转为十六进制数 2417afca
  * 接着从后至前，取四个字节出来： CA AF 17 24
  * 最后依次转为十进制数 202.175.23.36，即是服务器的真实 ip 地址。
###  九、通过 CDN 标头特征值
很多网站启用 CDN 后，配置了拒绝直接访问真实 IP ，比如 CloudFlare 的提示：
因此可以通过匹配特征标头的方法，去缩小范围，这里还是使用 Censys 查询：
    语法: http.get.headers.server:
    eg: 80.http.get.headers.server:cloudflare
针对整个互联网的搜索 IP 结果进一步匹配，比如通过 端口、地理位置、banner 特征、反查邮箱、联系方式等等信息，继续精确结果：
###  十、通过 XML-RPC PINGBACK 通信
  * XML-RPC 是支持 WordPress 与其他系统之间通信的规范，它通过使用 HTTP 作为传输机制和 XML 作为编码机制来标准化这些通信过程。
  * 在 WordPress 的早期版本中，默认情况下已关闭 XML-RPC，但是从3.5版本开始，默认情况下开启。
  * XML-RPC 支持 trackback 和 pingback。
  * 虽然 WordPress 启用了 REST API 来代替 XML-RPC ，不过 XML-RPX 不会过时的，放心大胆的使用就好，虽然 XML-RPC 这个技术很老了，但依然可以通杀很多网站。
配置好 dnslog，POST 请求 XML-RPC：
    POST /xmlrpc.php HTTP/1.1
    Host: domain.com
    Cache-Control: max-age=0
    Upgrade-Insecure-Requests: 1
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
    Accept-Encoding: gzip, deflate
    Accept-Language: en,zh-CN;q=0.9,zh;q=0.8
    Connection: close
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 323
    pingback.ping
    http://2vbis4.dnslog.cn
    https://domain.com/
响应：
刷新一下 dnslog ，获得了真实服务器 IP：
###  十一、通过 FTP/SCP 协议
  * 在很多情况下，网站需要将数据流从外部传输到内部服务器上，最安全的做法肯定是在用户和服务器之间建立虚拟专用网络（V*P+N 防和谐）。
  * 但实际上，仍然有大量可从外部访问的 FTP / SCP 服务，从而容易被抓住机会找到源 IP 地址。
###  十二、利用 Websocket 协议
  * CloudFlare 等 CDN 服务商其实早就支持对 Websocket 的保护了，但太多的站长，不管大站小站，他们很多人都不知道，或者没有针对 Websocket 进行部署。
  * 另一种原因是因为业务上的需求，毕竟 Websocket 要求客户端和服务器之间保持长久的连接，所以很有可能没有进行 CDN 部署。
###  十三、通过社会工程学
  * 凯伦·王，21世纪初杰出初思想家、哲学家、社会学家、经济学家，社会工程学的鼻祖，括弧，自称的。
  * [http://www.333](http://www.333ttt.com/up/up2103510950.html%EF%BC%8C%E7%86%9F%E6%82%89%E7%9A%84)t[tt.com/up/up2103510950.html，熟悉的](http://www.333ttt.com/up/up2103510950.html%EF%BC%8C%E7%86%9F%E6%82%89%E7%9A%84) BGM 响起来，好似又回到了辣一段青葱岁月。
  * 估计有人笑了，不过啊，可真别小看社工的威力，有多少大厂、运营商是倒在了社会工程学脚下的，邮件钓鱼、水坑攻击、物理社工、身份伪装、客服欺骗、商务咨询 等等，案例数不胜数，不胜枚举。
  * 因为人不是机器，只要是人，那就一定存在漏洞。
  * 哦对，顺带推荐部电影，小李子的《猫鼠游戏》。
###  十四、通过网站漏洞
  * 如果目标网站本身存在漏洞的话，比如 SSRF、XXE、XSS、文件上传、命令执行等漏洞，或者我们找到的其他突破口，注入我们自己的带外服务器地址，然后在服务器上检查 HTTP 日志记录。
  * 应用本身的错误会造成当传递一些错误的参数值或者错误的地址时，内部会抛出异常，也就是日常所说的报错，关注报错点，经常会泄露一些真实的 IP 地址或者内网 IP 段。
###  十五、通过全网扫描
  * 什么年代了啊，怎么还在说全网扫描。为了写全方法，这里还是提一下。
  * 首先从 apnic 网络信息中心 或 IPdeny 获取目标地区 ip 段。
  * 接着使用 Zmap、masscan 等工具对扫描出来端口开放的主机进行 banner 爬取。
  * 然后在 http-req 的 Host 字段，写入我们需要寻找的子域。
  * 最后过滤特征，确认是否有对应的服务器响应。
  * 哦对了，如果端口不是常见或者固定，当场退役。
  * 实际上，全网扫描的方法十分笨重，不推荐。因为已经有很多的网站给我们提供了全网爬取服务，之前的方法里都有介绍到，何必自己全网扫描呢，受限于网络、受限于设备，你个人爬的数据能有人家商业爬的全吗？
###  十六、通过 virtual-host 碰撞
  * 当我们收集了目标足够多的可能的真实 IP 时，可以通过 IP 和子域的碰撞，来批量获得命中目标以及目标哪些的子域。
IP 正确，子域错误：