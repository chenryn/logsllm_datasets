### Age Signature Feature of Stork

The age signature feature in Stork suggests, albeit not conclusively, that package metadata signatures and package signatures may be redundant. When multiple signature mechanisms are available, either package metadata signatures or package signatures alone should suffice for usability purposes, making it unnecessary to support both.

### Conclusion on Security Mechanisms

Given that no single security scheme excels in both security and usability, we recommend that package managers adopt a multi-mechanism approach. Root metadata signatures, due to their security benefits, should be included. Additionally, either package metadata signing or package signatures can enhance usability. By combining root metadata signatures with either signed package metadata or signed packages, package managers can achieve a high level of security and excellent usability without significant performance degradation.

### Package Managers in Practice

This section examines additional security features provided by some of the most popular Linux distributions (Ubuntu, Debian, Red Hat Enterprise Linux, Fedora, CentOS, openSUSE, and SUSE Enterprise Linux) and how these features impact the security of package managers. We also conducted a cursory examination of other distributions (Gentoo, Mandriva, LinuxMint, Sabayon Linux, Slackware, KNOPPIX, Arch Linux, and MEPIS Linux) and found no additional security practices that significantly altered the security provided by their package managers. Smaller distributions were not surveyed, but we suspect they are at least as vulnerable as their default package manager settings.

#### 7.1 Obtaining a Mirror

To assess the feasibility of controlling mirrors of popular distributions, we set up public mirrors for CentOS, Debian, Fedora, openSUSE, and Ubuntu. A fictitious company (Lockdown Hosting) with its own domain, website, and administrator (Jeremy Martin) was used. A server with a monthly bandwidth quota of 1500 GB was leased for $200 per month through The Planet (www.theplanet.com).

Setting up a public mirror involved acquiring packages and metadata from an existing mirror and notifying the distribution maintainers. The process varied in automation and whether newly listed mirrors received immediate traffic. All distributions accepted our mirror and added it to their official lists. We observed traffic from various clients, including military and government computers. More details are available in a technical report [5].

#### 7.2 Security Repository

Debian and Ubuntu use an official repository for security updates, which prevents replay attacks since the package manager uses the latest version from the security repository. However, this protection does not extend to man-in-the-middle attacks, as the repositories do not support HTTPS.

If the security repository is down, an attacker can use a mirror to serve outdated content, performing a replay attack. Using multiple mirrors also makes users more vulnerable to endless data attacks.

#### 7.3 Mirror Selection

Different distributions have varying practices for mirror selection. For example, openSUSE distributes all metadata from a central source and only outsources package requests to mirrors. This section examines the impact of these practices on security.

- **openSUSE**: Uses a download redirector that serves metadata directly from a trusted source, protecting against many attacks but not all.
- **CentOS**: Clients contact a central service that redirects requests to official mirrors. This increases the number of mirrors contacted, making endless data attacks easier but complicating replay or freeze attacks.
- **Fedora**: Similar to CentOS, but allows mirror administrators to target specific IP ranges, facilitating targeted attacks.

#### 7.4 Verifying Mirrors

Many distributions use automated mechanisms to verify that mirrors are up-to-date. An attacker can potentially determine the IP address of the checking server and serve up-to-date content to the checker while serving malicious content to users. This is particularly trivial in distributions like Fedora, where mirror administrators can selectively target users.

#### 7.5 HTTPS

Red Hat Enterprise Linux (RHEL) and SUSE Linux Enterprise are the only distributions that widely support or use HTTPS. However, YUM in RHEL does not validate SSL certificates, allowing man-in-the-middle attacks. The Red Hat security team is working on a fix for this issue.

#### 7.6 Comparison

- **SUSE Linux Enterprise**: Not vulnerable to described attacks due to no external mirrors and use of HTTPS.
- **openSUSE**: Provides significant protection from malicious mirrors but is still vulnerable to man-in-the-middle and endless data attacks.
- **Ubuntu and Debian**: Similar to openSUSE but become vulnerable to replay or freeze attacks if the security repository fails.
- **Red Hat Enterprise Linux**: Not at risk from malicious mirrors but vulnerable to man-in-the-middle attacks due to SSL implementation flaws.
- **CentOS**: Vulnerable to all attacks, especially with a man-in-the-middle attacker.
- **Fedora**: Same vulnerabilities as CentOS, with the added risk of targeted attacks.
- **Other Distributions**: Do not significantly alter the protection provided by their package managers.

### Results

To understand the impact of an attacker controlling a mirror, we conducted a trace of package requests on a CentOS mirror over a 13-day period. The results indicate that an attacker could launch an endless data attack to crash all clients visiting the mirror. The number of unique IP addresses contacting the mirror represents an upper bound on the number of clients that could be affected each week.

#### 8.1 Mirror Traces

The figure below presents the cumulative package downloads and requests from unique IP addresses for the CentOS mirror over a 13-day period.

![CentOS Mirror Traffic](path_to_figure.png)

This figure shows the cumulative package downloads and requests from unique IP addresses for the CentOS mirror over a 13-day period.