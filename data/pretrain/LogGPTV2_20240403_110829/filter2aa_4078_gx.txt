含 30 个客户 的信息， 请问这个表 的度是多少 ?
A. 2
B. 3
C. 30
D 未定义
第 2 1 二
阜E
恶意代码与应用攻击
本章中覆盖的 CISSP 考试大纲包含 :
3. 安全工程
• E. 评估和缓解安全架构、 设计和解决方案组件中 的漏洞
• F. 评估和缓解基于 Web 系 统(例如 ， x1在L、 OWASP)的漏洞
8. 软件开发安全
• B. 在开发环境中 实施安全控制
软件环境中 的安全
安全弱点和源代码级别 的漏洞(例如 ， 缓冲 区溢出、 特权扩大、 输入/输出 验证)
在前面的章节中， 你 已经学习 了很多能帮助安全从业者开发针对恶意个体进行保护的常规安全
原则、 策略处理机制 。 本章将深入探讨这个领域的管理员在日常工作中所面对的一些具体威胁。
这些内容不仅对于 CISSP 考试很关键， 而且还是计算机安全专业人员为了有效开展工作而必须
理解的一些最基本信息。 本章首先介绍恶意代码对象带来的威胁， 这些恶意代码对象包括病毒、 蠕
虫、 逻辑炸弹和特洛伊木马。 接着， 我们将研究其他一些安全性应用 ， 黑客会利用它们试图获取对
系统的未授权访问或者阻止合法用 户 获得这样的访 问 。
21 .1 恶意代码
恶意代码对象包括广泛的代码形式的计算机安全威胁， 这些威胁利用各种网络、 操作系统、 软
件和物理安全漏洞对计算机系统散播恶意载荷。 某些恶意代码对象(例如， 计算机病毒和特洛伊木马)
依靠用户对计算机的不当使用在系统之间成功地传播。 其他一些恶意代码对象(例如， 蠕虫)则依靠
自 身 的力 量在脆弱 的系统间快速传播。
所有计算机安全从业人员都必须熟悉由各种恶意代码带来的风险， 这样才能够采取适当的对策
来保护所关注的系统， 以及在系统受到破坏时做出适当的响应。
620
CISSP 官方学习指南(第 7 版)
2 1 .1.1 恶意代码的 来源
恶意代码源自 哪里 ? 在计算机安全的早期 ， 恶意代码的编写者都是相当有经验(尽管误入歧途)
的软件开发人员 ， 他们会为 自 己精心构思的、 富有创意的恶意代码技术感到骄傲。 的确， 他们揭露
了流行软件包和操作系统中的安全漏洞， 从而提高了人们对计算机安全性的意识， 这确实起到了 一
点有用 的作用 。 对于这种类型的代码编写者， 可 以在本章后面的 " RTM 和网络蠕虫 " 补充内容中找
到示例 。
如今这个时代出现了一些脚本小子， 他们并不理解安全漏洞内在的技术， 但是从互联网上下载
了 随时可用的软件(或脚本程序)， 并且利用这些软件对远程系统进行恶意攻击。 这种趋势导致了 一
种新的病毒制造软件 ， 它准许任何具有极少技术知识的人制造病毒并在互联网上传播。 到现在为止 ，
大量的病毒被反病毒机构证明属于这种类型。 这些业余的恶意代码开发人员常常只是在尝试他们所
下载的新工具， 或者试图为一两个对于制造麻烦 。 遗憾的是， 这些恶意代码有时会'快速传播， 并且
通常会对互联网用户 带来很多麻烦 。
此外， 脚本小子使用的工具可以免费提供给那些犯罪意图更加危险的人。 事实上， 国 际组织犯
罪集团在恶意软件扩散中发挥了作用 。 这些犯罪分子都在执法机制薄弱的国家， 使用恶意软件窃取
来 自世界各地的t戈财和人们的身份信息， 特别是美国居民的 。 事实上， 宙斯特洛伊木马被广泛认为
是东欧有组织犯罪团伙的产品， 试图感染尽可能多的系统， 并记录击键信息和收获网上银行密码。
宙斯木马爆发始于 2007 年 ， 至今依然横行 。 这只 是恶意软件发展趋势的一个例子。
21 . 1 .2 病毒
计算机病毒可能是最早的令安全管理员苦恼的恶意代码形式。 实际上， 病毒如今相当普遍， 病
毒大爆发会引起大众媒体的关注， 并且在一般的计算机用户 中引起轻度恐慌。 根据 Symantec 公司(一
家主要的反病毒软件供应商)的报告，在2010 年大约有 2 亿 8600 万种病毒的变形在全球网络中传播，
并且这种趋势在继续。 一些消息来源表明， 每一天大概有 200 000 个新的恶意软件样本出现在互联
网上。 每天都会有数十万的病毒变种对大意的计算机用户进行着攻击。 许多病毒都带有恶意有效载
荷 ， 它们导致的破坏包括从屏幕上 自 始至终显示亵读信息， 直至导致本地硬盘上的所有存储数据被
完全破坏 。
与生物病毒一样， 计算机病毒具有两个主要的功能: 传播和破坏。 那些制造病毒的卑劣家伙精
心地设计代码以创新的方法执行这些功能， 他们希望利用这些方法使病毒可以躲避检查并绕过日 益
完善的反病毒技术。 可 以这样说， 在病毒编写者和反病毒专家之间正在展开竞赛， 每一方都希望开
发出的技术高出对手一筹。 传播功能定义了病毒如何在系统之间扩散， 从而感染激发每一台计算机。
病毒的有效载荷通过执行病毒作者预谋的恶意行为来释放它的破坏力。 这些都能产生任何针对系统
或数据的机密性、 完整性或可用性的负面影响 。
1 . 病毒传播技术
根据定义， 病毒必须包含能够使其在系统之间进行传播的技术， 有时会借助于无疑心的计算机
用户通过交换磁盘、 共享网络资源、 发送电子邮件或其他手段试图共享数据的活动。 一旦病毒到达
新的系统， 它们会使用某种传播技术来感染新的受害者以及扩展其触及范围。 接下来， 我们将介绍
第 21 章 恶意代码与应用攻击
4 种常见的传播技术 : 主引导记录感染、 文件感染、 宏感染和文件注入。
主引导记录病毒 主 引 导记录病毒。1aster Boot Record， 孔但R)是己知的最早的病毒感染形式。
这些病毒攻击h在BR一一可启动介质(例如 ， 硬盘、 软盘或 CDIDVD)上计算机用于在启动过程中加载
操作系统的部分。 由 于1113R 非常小(通常只有 512 宇节)， 因此它不能包含实现病毒传播和破坏功能
所需的所有代码。 为 了避开空间的限制， 队在BR 病毒将主要的代码存储在存储介质 的其他部分。 在
系统读取受感染的 孔但R 时 ， 病毒会引 导系统读取并且执行在另一个地方存储的代码， 从而将全部
的病毒加载到 内存中 ， 并且可能触发病毒有效载荷的传播。
l 引 导扇区和主引导记录
你经常看到 ， "引导扇 区" 和 "主引 导记录" 被用 于描述刷诸设备上用 来加载操作系 统和攻击这
个加载过程的 病毒类型 的部分， 这在技术上是不正确 的。 1113R 是一个单独的磁盘扇 区 ， 通常是在
启动过程的初始阶段读取的介质的第一个扇 区 。 b但R 决定介质的哪个部分包含操作 系统， 并且随
后指导 系 统读取对应部分的 引 导扇区， 以使力口载操作 系 统。
病毒可能攻击 b但R 和引导扇区， 结果实质上类似。 孔在BR 病毒将系统重走向到被感染的 引 导扇
区 ， 在从合法引 导扇 区加载操作系统之前将病毒加载到 内存中。 引 导扇 区病毒实 际上感染合法的 引
导扇 区 ， 并且在操作 系 统加载过程中被加载到 内存中。
大多数1113副市毒在系统之间通过用户不经意地共享被感染的介质进行传播。 如果在启动过程中
被感染的介质在驱动器中， 那么 目 标系统就会读取被感染的1113R、 将病毒加载到内存中、 感染 目 标
系 统硬盘的1113R， 并且还会感染其他计算机。
文件程序感染病毒 许多病毒感染不同类型的可执行文件， 并且在操作系统试 图执行这些文件
时被触发。 对于基于 Windows 的系统来说， 可执行文件以扩展名.阻e 和.com 为后缀。 文件程序感染
病毒的传播程序可能只是对可执行程序进行了 少许改动 ， 从而植入了病毒需要复制并毁坏系统的技
术。 在某些情况下， 病毒可能实际上用被感染的版本替换了整个文件。 标准的文件程序感染病毒没
有使用障眼法技术， 例如隐形或加密(参见本章稍后的 " 病毒技术 " 部分)， 通过比较感染前后的文
件特性(如大小和修改 日 期)或散列值， 常常可以很容易地检查出 这种病毒 。 本章后面的 " 反病毒机
制 " 部分会介绍与这些技术相关的 技术细节 。
文件程序感染病毒的一个变种是同伴病毒。 这种病毒是自包含的可执行文件， 利用与合法的操
作系统文件类似但又稍有不同的文件名来躲避检查。 同伴病毒依靠基于 Wmdows 的操作系统在执行
程序文件时关联在命令上的默认文件扩展名(.com、 .exe 和.bat， 并且按照这个顺序)哇行操作。 例如 ，
如果在硬盘上有一个名为 game.e峭 的Æ)芋，那么 同伴病毒可能会使用名 字 game. com。 如果你随后打
开一个命令行工具并简单地键入 "game"， 那么操作系统将执行这个病毒文件 game.∞m， 而不是实
际要执行的文件 game.exe。 对于在命令行工具下执行文件时要避免快捷方式并且使用 具体的文件名
来说， 远的确是一个很好的理由。
宏病毒 许多常用的软件应用手白字为了协助重复任务的 自动执行而实现了某些脚本功能。 这些
功能常常使用简单却有效的编程语言， 例如 Visual Basic for Applications(VBA)。 虽然宏的确为计算
机用户 提供 了 巨大的提高生产率的机会， 但是它们也将系统暴露给了 另一种感染手段一一宏病毒。
宏病毒最早出现在 20 世纪 90 年代中期， 它采用拙劣的技术感染流行的 Mαosoft Word 环境中
生成的文档 。 虽然宏病毒相对简单， 但是由于反病毒机构没有预见到， 反病毒软件没有提供对它们
的任何防护， 因此这些病毒得到了快速传播。 宏病毒很快就变得越来越普遍， 供应商匆忙地修改他
621
622
CISSP 官方学 习指南(第 7 版)
们的反病毒平台， 使之能够对应用文档进行宏病毒扫描。 1 999 年 ， Melissa 病毒通过 Word 文档传播，
利用 Microsoft Outlook 中 的安全漏洞进行复制。 在 2000 年初， 臭名昭著的 1 Love You 病毒很快步其
后尘， 也利用相似的漏洞进行传播。
警告 :
因 为很容易采用现代生产性应 用程序使用 的脚本语言(例如， VBA)编写千戈旦鸣， 所以宏病毒会大
量传播。
在 20 世纪后期出现了一系列宏病毒之后， 生产力软件开发人员对宏开发环境进行了 重大改变，
限制 了 不受信任的宏在没有明确用户许可 的情况下运行的能力。 结果就是导致宏病毒的数量急剧
减少 。
服务注入病毒 最近爆发的恶意代码使用另 一种技术感染系统和逃脱检测一一将自 己注入到操
作系统的可信运行进程中 ， 如 svchost.exe、 winlogin.exe 和 explorer.exeo 通过成功地破坏这些受信进
程， 恶意代码能够绕过主机上运行的任何防病毒软件的检测。 保护系统免受服务注入的最好技术之
→是确保允许浏览 Web 内 容的所有软件(如浏览器、 媒体播放器、 帮助应用程序)接收当前的安全
补丁。
2. 容易受到病毒攻击的平台
如 同大多数宏病毒感染那些运行流行的 Microsoft O:ffice 应用程序套件的系统一样， 大多数计算
机病毒被设计成破坏在世界上最流行的操作系统 Microsoft Windows 上运行的活动。 据估计， 今天世
界上只有不到百分之一的病毒被设计为影响其他操作系统， 例如 Unix 和 Mac OS 。
首先， 实际上己经没有单一的 "Unix" 操作系统。 相反， 一系列很相似的操作系统以类似的方
式实现了 与 Unix 相同 的功能， 并且由 大量的开发人员独立设计。 大规模企业开发的软件在与无数免