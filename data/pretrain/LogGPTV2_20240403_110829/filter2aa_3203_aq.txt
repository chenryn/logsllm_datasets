157.54.128.0/21 
2 
157.54.136.0, 255.255.248.0 
157.54.136.0/21 
3 
157.54.144.0, 255.255.248.0 
157.54.144.0/21 
4 
157.54.152.0, 255.255.248.0 
157.54.152.0/21 
5 
157.54.160.0, 255.255.248.0 
157.54.160.0/21 
6 
157.54.168.0, 255.255.248.0 
157.54.168.0/21 
7 
157.54.176.0, 255.255.248.0 
157.54.176.0/21 
8 
157.54.184.0, 255.255.248.0 
157.54.184.0/21 
9 
157.54.192.0, 255.255.248.0 
157.54.192.0/21 
10 
157.54.200.0, 255.255.248.0 
157.54.200.0/21 
11 
157.54.208.0, 255.255.248.0 
157.54.208.0/21 
12 
157.54.216.0, 255.255.248.0 
157.54.216.0/21 
13 
157.54.224.0, 255.255.248.0 
157.54.224.0/21 
14 
157.54.232.0, 255.255.248.0 
157.54.232.0/21 
15 
157.54.240.0, 255.255.248.0 
157.54.240.0/21 
Table 4-10  Fifteen Address Prefixes with up to 2,046 Hosts 
To achieve the requirement of eight subnets with up to 250 hosts, subnet 3 bits of the subnetted 
address prefix of 157.54.248.0/21. This subnetting produces eight subnets (157.54.248.0/24, 
157.54.249.0/24…157.54.254.0/24, 157.54.255.0/24) and allows up to 254 hosts per subnet. You can 
fulfill the requirement by choosing all eight subnetted address prefixes (157.54.248.0/24 through 
157.54.255.0/24) as the subnet prefixes to assign to individual subnets. 
Table 4-11 illustrates eight subnets with 254 hosts per subnet. 
Subnet Number 
Subnet Prefix (Dotted Decimal) 
Subnet Prefix (Prefix length) 
1 
157.54.248.0, 255.255.255.0 
157.54.248.0/24 
2 
157.54.249.0, 255.255.255.0 
157.54.249.0/24 
3 
157.54.250.0, 255.255.255.0 
157.54.250.0/24 
4 
157.54.251.0, 255.255.255.0 
157.54.251.0/24 
5 
157.54.252.0, 255.255.255.0 
157.54.252.0/24 
6 
157.54.253.0, 255.255.255.0 
157.54.253.0/24 
7 
157.54.254.0, 255.255.255.0 
157.54.254.0/24 
8 
157.54.255.0, 255.255.255.0 
157.54.255.0/24 
Table 4-11  Eight Subnets with up to 254 Hosts 
Figure 4-4 shows the variable length subnetting of 157.54.0.0/16. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 108 
Figure 4-4  Variable length subnetting of 157.54.0.0/16 
Variable Length Subnetting and Routing 
In dynamic routing environments, you can deploy variable length subnetting only where the prefix 
length is advertised along with the address prefix. Routing Information Protocol (RIP) for IP version 1 
does not support variable length subnetting, but RIP for IP version 2, Open Shortest Path First (OSPF), 
and Border Gateway Protocol version 4 (BGPv4) do. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 109 
Subnetting for IPv6 
To subnet the IPv6 address space, you use subnetting techniques to divide the 16-bit Subnet ID field 
for a 48-bit global or unique local address prefix in a manner that allows for route summarization and 
delegation of the remaining address space to different portions of an IPv6 intranet.  
You need not subnet in any specific fashion. The subnetting technique described here assumes that 
you subnet by dividing the variable portions of the address space of the Subnet ID field using its high-
order bits. Although this method promotes hierarchical addressing and routing, it is not required. For 
example, in a small organization with a small number of subnets, you can also easily create a flat 
addressing space for global addresses by numbering the subnets starting from 0. 
Subnetting a Global or Unique Local Address Prefix 
For global addresses, Internet Assigned Numbers Authority (IANA) or an ISP assigns an IPv6 address 
prefix in which the first 48 bits are fixed. For unique local addresses, the first 48 bits are fixed at 
FD00::/8 and the random 40-bit global ID assigned to a site of an organization. Subnetting the Subnet 
ID field for a 48-bit global or unique local address prefix requires a two-step procedure: 
1. Determine the number of bits to be used for the subnetting. 
2. Enumerate the new subnetted address prefixes. 
Determining the Number of Subnetting Bits 
The number of bits that you use for subnetting determines the possible number of new subnetted 
address prefixes that you can allocate to portions of your network based on geographical or 
departmental divisions. In a hierarchical routing infrastructure, you must determine how many address 
prefixes, and therefore how many bits, you need at each level in the hierarchy. The more bits you 
choose for the various levels of the hierarchy, the fewer bits you have to enumerate individual subnets 
in the last level of the hierarchy. 
Depending on the needs of your organization, your subnetting scheme might be along nibble 
(hexadecimal digit) or bit boundaries. If you can subnet along nibble boundaries, your subnetting 
scheme becomes simplified and each hexadecimal digit can represent a level in the subnetting 
hierarchy. For example, a network administrator decides to implement a three-level hierarchy that uses 
the first nibble for the site, the next nibble for a building within a site, and the last two nibbles for a 
subnet within a building. An example subnet ID for this scheme is 142A, which indicates site 1, building 
4, and subnet 42 (0x2A). 
In some cases, bit-boundary subnetting is required. For example, a network administrator decides to 
implement a two-level hierarchy reflecting a geographical/departmental structure and uses 4 bits for the 
geographical level and 6 bits for the departmental level. This means that each department in each 
geographical location has only 6 bits of subnetting space left (16 - 6 - 4), or only 64 (= 26) subnets per 
department.  
On any given level in the hierarchy, a number of bits are already fixed by the previous level in the 
hierarchy (f), a number of bits are used for subnetting at the current level in the hierarchy (s), and a 
number of bits remain for the next level down in the hierarchy (r). At all times, f+s+r = 16. Figure 4-5 
shows this relationship. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 110 
Figure 4-5  Subnetting the Subnet ID field of a global or unique local IPv6 address prefix 
Enumerating Subnetted Address Prefixes 
Based on the number of bits used for subnetting, you must list the new subnetted address prefixes, and 
you can use the following approaches: 
Enumerate new subnetted address prefixes by using binary representations of the subnet ID and 
converting to hexadecimal. 
Enumerate the new subnetted address prefixes by using hexadecimal representations of the subnet ID 
and increment. 
Enumerate the new subnetted address prefixes by using decimal representations of the subnet ID and 
increment. 
Any of these methods produce the same result: an enumerated list of subnetted address prefixes. 
In the binary method, the 16-bit subnet ID is expressed as a 16-digit binary number. The bits within the 
subnet ID that are being used for subnetting are incremented for all their possible values and for each 
value, the 16-digit binary number is converted to hexadecimal and combined with the 48-bit site prefix, 
producing the subnetted address prefixes.  
To create the enumerated list of subnetted address prefixes using the binary method, perform the 
following steps: 
1. Based on s (the number of bits chosen for subnetting), m (the prefix length of the address prefix 
being subnetted), and f (the number of bits already subnetted), calculate the following: 
n = 2s, n  is the number of address prefixes that are obtained. 
l = 48 + f + s,  l is the prefix length of the new subnetted address prefixes. 
2. Create a three-column table with n entries. The first column is the address prefix number (starting 
with 1), the second column is the binary representation of the subnet ID portion of the new address 
prefix, and the third column is the subnetted address prefix (in hexadecimal), which includes the 48-
bit site prefix and the subnet ID. 
3. In the first table entry, set all of the bits being used for subnetting to 0. Convert the resulting 16-digit 
binary number to hexadecimal, combine with the 48-bit site prefix, and write the subnetted address 
prefix. This first subnetted address prefix is just the original address prefix with the new prefix length. 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 111 
4. In the next table entry, increment the value within the subnet bits. Convert the 16-digit binary number 
to hexadecimal, combine with the 48-bit site prefix, and write the resulting subnetted address prefix. 
5. Repeat step 4 until the table is complete. 
For example, to perform a 3-bit subnetting of the global address prefix 2001:DB8:0:C000::/51, we first 
calculate the values for the number of prefixes and the new prefix length. Our starting values are s = 3, 
and f = 51 - 48 = 3. The number of prefixes is 8 (n = 23). The new prefix length is 54 (l = 48 + 3 + 3). 
The initial value for the subnet ID in binary is 1100 0000 0000 0000 (0xC000 converted to binary).  
Next, we construct a table with 8 entries. The entry for the address prefix 1 is 2001:DB8:0:C000::/54. 
Additional entries are increments of the subnet bits in the subnet ID portion of the address prefix, as 
shown in Table 4-12. 
Address Prefix 
Binary Representation of Subnet ID 
Subnetted Address Prefix 
1 
1100 0000 0000 0000 
2001:DB8:0:C000::/54 
2 
1100 0100 0000 0000 
2001:DB8:0:C400::/54 
3 
1100 1000 0000 0000 
2001:DB8:0:C800::/54 
4 
1100 1100 0000 0000 
2001:DB8:0:CC00::/54 
5 
1101 0000 0000 0000 
2001:DB8:0:D000::/54 
6 
1101 0100 0000 0000 
2001:DB8:0:D400::/54 
7 
1101 1000 0000 0000 
2001:DB8:0:D800::/54 
8 
1101 1100 0000 0000 
2001:DB8:0:DC00::/54 
Table 4-12  The Binary Subnetting Technique for Address Prefix 2001:DB8:0:C000::/51 
In Table 4-12, the underline in the second column shows the bits that are being used for subnetting. 
To create the enumerated list of subnetted address prefixes using the hexadecimal method, perform 
the following steps: 
1. Based on s, the number of bits chosen for subnetting, and m, the prefix length of the address prefix 
being subnetted, calculate the following: 
f = m - 48 
f is the number of bits within the subnet ID that are already fixed. 
n = 2s 
n is the number of address prefixes that you will obtain. 
i = 216-(f+s)  
i is the incremental value between each successive subnet ID expressed in hexadecimal. 
p = m+s 
p is the prefix length of the new subnetted address prefixes. 
2. Create a two-column table with n rows. The first column contains the address prefix numbers 
(starting with 1), and the second column contains the new subnetted address prefixes. 
3. In the first row, place the original address prefix with the new prefix length in the second column. For 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 112 
example, based on F, the hexadecimal value of the subnet ID being subnetted, the subnetted 
address prefix is [48-bit prefix]:F::/p. 
4. In the next row, increment the value within the subnet ID portion of the global or unique local address 
prefix by i, and place the result in the second column. For example, in the second row, the subnetted 
prefix is [48-bit prefix]:F+i::/p. 
5. Repeat step 4 until you complete the table. 
For example, to perform a 3-bit subnetting of the global address prefix 2001:DB8:0:C000::/51, first 
calculate the values of the number of prefixes, the increment, and the new prefix length. Your starting 
values are F=0xC000, s=3, m=51, and therefore f=51-48=3. The number of prefixes is 8 (n=23). The 
increment is 0x400 (i=216-(3+3)=1024=0x400). The new prefix length is 54 (p=51+3).  
Next, you construct a table with eight rows, as shown in Table 4-13. In the row for the address prefix 1, 
place 2001:DB8:0:C000::/54 in the second column, and complete the remaining rows by incrementing 
the Subnet ID portion of the address prefix by 0x400. 
Address Prefix 
Subnetted Address Prefix 
1 
2001:DB8:0:C000::/54 
2 
2001:DB8:0:C400::/54 
3 
2001:DB8:0:C800::/54 
4 
2001:DB8:0:CC00::/54 
5 
2001:DB8:0:D000::/54 
6 
2001:DB8:0:D400::/54 
7 
2001:DB8:0:D800::/54 
8 
2001:DB8:0:DC00::/54 
Table 4-13   Hexadecimal Technique for the 3-bit Subnetting of 2001:DB8:0:C000::/51 
To create the enumerated list of subnetted address prefixes using the decimal method, do the following: 
1. Based on s, the number of bits you are using for subnetting, m, the prefix length of the address prefix 
being subnetted, and F, the hexadecimal value of the subnet ID being subnetted, calculate the 
following: 
f = m - 48 
f is the number of bits within the Subnet ID that are already fixed. 
n = 2s 
n is the number of address prefixes that you will obtain. 
i = 216-(f+s)  
i is the incremental value between each successive subnet ID. 
p = m+s 
p is the prefix length of the new subnetted address prefixes. 
D = decimal representation of F 
Chapter 4 – Subnetting 
TCP/IP Fundamentals for Microsoft Windows  
Page: 113 
2. Create a three-column table with n rows. The first column contains the address prefix numbers 
(starting with 1), the second column contains the decimal representations of the Subnet ID portions of 
the new subnetted address prefixes, and the third column contains the new subnetted address 
prefixes. 
3. In the first row, place the decimal representation of the subnet ID (D) in the first column, and place 
the subnetted prefix, [48-bit prefix]:F::/p, in the second column. 
4. In the next row, increase the value of the decimal representation of the subnet ID by i, and place the 
result in the second column. For example, in the second row, the decimal representation of the 
subnet ID is D+i. 
5. In the third column, convert the decimal representation of the subnet ID to hexadecimal, and 
construct the prefix from [48-bit prefix]:[SubnetID]::/p. For example, in the second row, the subnetted 
address prefix is [48-bit prefix]:[D+i (converted to hexadecimal)]::/p. 
6. Repeat steps 4 and 5 until you complete the table. 
For example, to perform a 3-bit subnetting of the site-local address prefix 2001:DB8:0:C000::/51, first 
calculate the values of the number of prefixes, the increment, the new prefix length, and the decimal 
representation of the starting subnet ID. Our starting values are F=0xC000, s=3, m=51, and therefore 
f=51-48=3. The number of prefixes is 8 (n=23). The increment is 1024 (i=216-(3+3)). The new prefix length 
is 54 (p=51+3). The decimal representation of the starting subnet ID is 49152 (D=0xC000=49152). 
Next, construct a table with 8 rows as Table 4-14 shows. In the row for the address prefix 1, place 
49192 in the first column and 2001:DB8:0:C000::/54 in the second column. In the remaining rows, 