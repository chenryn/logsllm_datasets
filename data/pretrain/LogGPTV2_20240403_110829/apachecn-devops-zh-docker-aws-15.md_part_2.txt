一段时间后，应用的创建将完成，尽管您可以看到应用存在问题:
![](img/a97cdb26-7e8f-412b-b2d9-570cd14d3b30.png)
Initial application state
# 配置 EC2 实例配置文件
我们已经创建了一个新的弹性 Beanstalk 应用，但是由于几个错误，该应用的当前运行状况被记录为严重。
如果您选择左侧菜单上的**日志**选项，然后选择**请求日志** | **最后 100 行**，您将看到一个**下载**链接，允许您查看最近的日志活动:
![](img/d8b79e73-f968-41de-8d12-f59c8321ea8b.png)
Initial application state
浏览器中应该会打开一个单独的选项卡，显示各种弹性 Beanstalk 日志。在顶部，您应该会看到 ECS 代理日志，最近的错误应该表明 ECS 代理无法将映像从 ECR 拉入您的`Dockerrun.aws.json`规范:
![](img/a7babaa2-adec-436b-a371-eb476c40aa2e.png)
Elastic Beanstalk ECS agent error
为了解决这个问题，我们需要配置与附加到我们的弹性 Beanstalk 实例的 EC2 实例配置文件相关联的 IAM 角色，以包括从 ECR 中提取映像的权限。通过从左侧菜单中选择**配置**并查看**安全**部分中的**虚拟机实例配置文件**设置，我们可以看到弹性 Beanstalk 正在使用哪个角色:
![](img/2d1d05a4-22bd-4106-b6d2-d9ec1c92ef5e.png)
Viewing security configuration
您可以看到正在使用名为**AWS-elastic beanstalk-ec2-role**的 IAM 角色，因此如果您从导航栏中选择**服务** | **IAM** ，选择**角色**，然后定位 IAM 角色，您需要将`AmazonEC2ContainerRegistryReadOnly`策略附加到角色，如下所示:
![](img/4c1d7e88-a2ae-4e62-8813-813fe2d2bc81.png)
Attaching the AmazonEC2ContainerRegistryReadOnly policy to the Elastic Beanstack EC2 instance role
此时，我们应该已经解决了之前导致应用无法启动的权限问题。现在，您需要配置弹性 Beanstalk 来尝试重新启动应用，您可以使用以下任何一种技术来完成:
*   上传新的应用源文件—这将触发新的应用部署。
*   重新启动应用服务器
*   重建环境
假设我们的应用源(在 Docker 应用的情况下是`Dockerrun.aws.json`文件)没有改变，破坏性最小且最快的选项是重启应用服务器，您可以通过选择**所有应用**|**todo backand**|**todo backand-env**配置屏幕右上角的 | **重启应用服务器**来完成。
几分钟后，您会注意到您的应用仍然有问题，如果您重复获取最新日志的过程，扫描这些日志会显示 **collectstatic** 容器由于权限错误而失败:
![](img/d000d79b-4c00-425c-9d45-95325d27e079.png)
collectstatic permissions error
回想一下，在本书的前面，我们是如何在 ECS 容器实例上配置一个具有正确权限的文件夹来托管 **collectstatic** 容器写入的公共卷的？对于弹性 Beanstalk，为 Docker 应用创建的默认 EC2 实例显然不是以这种方式配置的。
我们将很快解决这个问题，但现在重要的是要理解还有其他问题。要了解这些问题，您需要实际尝试访问该应用，您可以通过单击所有应用| todobackand | todobackand-env 配置屏幕顶部的 URL 链接来实现:
![](img/44aeed70-ba34-4753-b83c-b25340f5d855.png)
Obtaining the Elastic Beanstalk application URL
浏览此链接会立即显示静态内容文件未生成:
![](img/def30500-bb83-4fd9-a5d0-0a8b0d026721.png)
Missing static content
如果你点击 **todos** 链接查看当前的 Todo 项目列表，你会收到一个错误，表明应用无法连接到 MySQL 数据库:
![](img/232faa9e-1890-4f51-8bdb-3b829aaad7fc.png)
Database connectivity error
问题是我们没有在`Dockerrun.aws.json`文件中添加任何数据库配置，因此我们的应用默认使用 localhost 来定位数据库。
# 使用命令行界面配置弹性 Beanstalk 应用
我们将很快解决应用中仍然存在的问题，但是为了解决这些问题，我们将使用弹性 Beanstalk 命令行界面继续配置我们的应用并解决这些问题。
在我们开始使用 Elastic Beanstalk CLI 之前，需要了解的是，在与我们在前面章节中介绍的所有控制台和 API 访问的多因素认证(MFA)要求进行交互时，此应用的当前版本确实存在一些挑战。如果您继续使用 MFA，您会注意到每次执行弹性 Beanstalk 命令行界面命令时都会提示您。
为了解决这个问题，我们可以通过首先将您的用户从`Users`组中移除来暂时移除 MFA 要求:
```
> aws iam remove-user-from-group --user-name justin.menga --group-name Users
```
接下来，在您的本地`~/.aws/config`文件内的`docker-in-aws`档案中注释掉`mfa_serial`行:
```
[profile docker-in-aws]
source_profile = docker-in-aws
role_arn = arn:aws:iam::385605022855:role/admin
role_session_name=justin.menga
region = us-east-1
# mfa_serial = arn:aws:iam::385605022855:mfa/justin.menga
```
请注意，这并不理想，在现实场景中，您可能没有能力也不想为给定用户暂时禁用 MFA。在考虑弹性 Beanstalk 时，请记住这一点，因为您通常会依赖弹性 Beanstalk 命令行界面进行许多操作。
现在暂时禁用了 MFA，可以安装 Elastic Beanstalk CLI，可以使用 Python `pip`包管理器来完成。安装后，可通过`eb`命令进行访问:
```
> pip3 install awsebcli --user
Collecting awsebcli
...
...
Installing collected packages: awsebcli
Successfully installed awsebcli-3.14.2
> eb --version
EB CLI 3.14.2 (Python 3.6.5)
```
下一步是在您之前创建的`todobackend/eb`文件夹中初始化命令行界面:
```
todobackend/eb> eb init --profile docker-in-aws
Select a default region
1) us-east-1 : US East (N. Virginia)
2) us-west-1 : US West (N. California)
3) us-west-2 : US West (Oregon)
4) eu-west-1 : EU (Ireland)
5) eu-central-1 : EU (Frankfurt)
6) ap-south-1 : Asia Pacific (Mumbai)
7) ap-southeast-1 : Asia Pacific (Singapore)
8) ap-southeast-2 : Asia Pacific (Sydney)
9) ap-northeast-1 : Asia Pacific (Tokyo)
10) ap-northeast-2 : Asia Pacific (Seoul)
11) sa-east-1 : South America (Sao Paulo)
12) cn-north-1 : China (Beijing)
13) cn-northwest-1 : China (Ningxia)
14) us-east-2 : US East (Ohio)
15) ca-central-1 : Canada (Central)
16) eu-west-2 : EU (London)
17) eu-west-3 : EU (Paris)
(default is 3): 1
Select an application to use
1) todobackend
2) [ Create new Application ]
(default is 2): 1
Cannot setup CodeCommit because there is no Source Control setup, continuing with initialization
```
`eb init`命令使用`--profile`标志指定本地 AWS 配置文件，然后提示您将要与之交互的区域。命令行界面然后检查是否有任何现有的弹性 Beanstalk 应用，并提示您是要管理现有的应用还是创建新的应用。做出选择后，命令行界面会将项目信息添加到名为`.elasticbeanstalk`的文件夹下的当前文件夹中，还会创建或追加到`.gitignore`文件中。鉴于我们的`eb`文件夹是**至**存储库的子目录，最好将`.gitignore`文件的内容附加到**至**存储库的根目录:
```
todobackend-aws/eb> cat .gitignore >> ../.gitignore todobackend-aws/eb> rm .gitignore 
```
现在，您可以使用 CLI 查看应用的当前状态，列出应用环境，并执行许多其他管理任务:
```
> eb status
Environment details for: Todobackend-env
  Application name: todobackend
  Region: us-east-1
  Deployed Version: todobackend-source
  Environment ID: e-amv5i5upx4
  Platform: arn:aws:elasticbeanstalk:us-east-1::platform/multicontainer Docker running on 64bit Amazon Linux/2.11.0
  Tier: WebServer-Standard-1.0
  CNAME: Todobackend-env.p6z6jvd24y.us-east-1.elasticbeanstalk.com
  Updated: 2018-07-14 23:23:28.931000+00:00
  Status: Ready
  Health: Red
> eb list
* Todobackend-env
> eb open
> eb logs 
Retrieving logs...
============= i-0f636f261736facea ==============
-------------------------------------
/var/log/ecs/ecs-init.log
-------------------------------------
2018-07-14T22:41:24Z [INFO] pre-start
2018-07-14T22:41:25Z [INFO] start
2018-07-14T22:41:25Z [INFO] No existing agent container to remove.
2018-07-14T22:41:25Z [INFO] Starting Amazon Elastic Container Service Agent
-------------------------------------
/var/log/eb-ecs-mgr.log
-------------------------------------
2018-07-14T23:20:37Z "cpu": "0",
2018-07-14T23:20:37Z "containers": [
...
...
```
请注意，`eb status`命令在`CNAME`属性中列出了您的应用的网址，请注意这个网址，因为您将需要它来测试您的应用。您也可以使用`eb open`命令访问您的应用，这将在您的默认浏览器中打开应用的网址。
# 管理弹性 Beanstalk EC2 实例
使用弹性 Beanstalk 时，能够访问弹性 Beanstalk EC2 实例非常有用，尤其是如果您需要进行一些故障排除。
命令行界面包括建立到弹性 Beanstalk EC2 实例的 SSH 连接的能力，您可以通过运行`eb ssh --setup`命令来设置:
```
> eb ssh --setup
WARNING: You are about to setup SSH for environment "Todobackend-env". If you continue, your existing instances will have to be **terminated** and new instances will be created. The environment will be temporarily unavailable.
To confirm, type the environment name: Todobackend-env
Select a keypair.
1) admin
2) [ Create new KeyPair ]
(default is 1): 1
Printing Status:
Printing Status:
INFO: Environment update is starting.
INFO: Updating environment Todobackend-env's configuration settings.