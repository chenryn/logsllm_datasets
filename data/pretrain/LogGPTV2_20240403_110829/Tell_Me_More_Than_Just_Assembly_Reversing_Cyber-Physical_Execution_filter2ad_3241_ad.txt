the data and code semantics discovery. Once MISMO adds
the semantic information for the binary-level input variables,
MISMO will propagate the semantics for each instruction
(Figure 3). The accuracy is then calculated based on the
portion of the instructions that has been resolved and correctly
annotated in the chosen execution path.
Figure 5 shows the relative runtime of MISMO for individual
applications. On average, the total time required by MISMO
to complete its reverse engineering took less than 2s for each
application. Most of the time was due to the symbolic ex-
pression generation through symbolic execution of the candi-
356
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:23 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I: Embedded IoT/CPS ﬁrmware vendors and the corresponding identiﬁed control algorithms (BB: Bang-Bang, KF: Kalman Filter,
PF: Particle Filter, PID: Proportional-Integral-Derivative, PWM: Pulse Width Modulation)
Category
Vendor
BB
PWM
#ﬁrmwares
Data Accuracy (%)
Code Accuracy (%)
Bitcraze
Ardupilot
DJI
3D Robotics
Cleanﬂight
Fluoreon
Eachine
Paparazzi
Cheerson
Baidu
PolySync
Microsoft
Tier IV
Udaticy
LulzBot
Makerbot
Repetie
Printrbot
BCN3D
Robo3D
Teacup
Solidoodle
ROS
Robotiq
LinuxCNC
Drake
SmartPID
Particle
MBED
Linux Kernel
30
Drone
Automotive
3D
Printer
Robotics
Smart
Home
Linux Kernel
Total/Average
date execution paths. To ensure MISMO’s generalizability, we
evaluated it on 2,263 ﬁrmware binaries from over 30 different
vendors. The results of our analyses are shown in Table I. The
2,263 ﬁrmware images consisted of several different control
algorithms, the most popular being PID, Kalman ﬁlter, and
pulse-width modulation (PWM) implementations. MISMO’s
accuracy for data discovery was an average of 89.82%–with a
worst case of 53.85%–and 84.96% for code semantics discov-
ery. Inaccuracies arise for a variety of reasons. For instance,
LinuxCNCs implementation used too many intermediate/aux-
iliary variables, which complicates the correct mapping of
key binary-level variables to their corresponding algorithmic
parameters. The average false positive rate was 2.86%–which
is promising for real-world use-cases. Even if the accuracy of
a particular application is low (e.g., 53.85%), MISMO’s results
still improve upon the existing related work on binary reverse
engineering that provide no semantic information.
PF
Control Algorithm
KF

















PID





























100.00
78.57
100.00
78.57
71.43
77.78
77.78
77.78
84.29
100.00
100.00
100.00
100.00
100.00
90.91
88.89
100.00
90.91
81.82
90.91
100.00
90.91
88.89
100.00
53.85
85.71
100.00
100.00
100.00
100.00
89.82
96.40
86.96
93.69
86.96
50.26
48.70
48.70
86.14
91.56
93.67
97.01
100.00
89.47
97.14
92.86
63.81
82.96
92.86
50.26
92.86
93.24
92.86
94.20
98.64
43.34
87.38
100.00
96.81
100.00
100.00
84.96









38
168
66
327
48
1
1
53
169
2
3
1
11
2
22
19
6
22
15
1
1
2
62
1
145
8
2
87
147
833
2,263
(cid:27)
(cid:21)
(cid:26)
(cid:1)
(cid:12)
(cid:16)
(cid:8)
(cid:14)
(cid:31)(cid:25)(cid:35)
(cid:31)(cid:25)(cid:34)
(cid:31)(cid:25)(cid:33)
(cid:31)(cid:25)(cid:32)
(cid:31)
(cid:30)(cid:25)(cid:35)
(cid:30)(cid:25)(cid:34)
(cid:30)(cid:25)(cid:33)
(cid:30)(cid:25)(cid:32)
(cid:30)
(cid:2)(cid:19)(cid:19)(cid:15)(cid:14)(cid:11)(cid:9)(cid:22)(cid:14)(cid:18)(cid:17)(cid:21)
(cid:3)(cid:5)(cid:6)(cid:1)(cid:7)(cid:12)(cid:15)(cid:12)(cid:11)(cid:22)(cid:18)(cid:20)
(cid:7)(cid:24)(cid:16)(cid:10)(cid:18)(cid:15)(cid:14)(cid:11)(cid:1)(cid:4)(cid:23)(cid:19)(cid:20)(cid:12)(cid:21)(cid:21)(cid:14)(cid:18)(cid:17)(cid:1)(cid:6)(cid:12)(cid:17)(cid:12)(cid:20)(cid:9)(cid:22)(cid:14)(cid:18)(cid:17)
(cid:2)(cid:7)(cid:8)(cid:21)(cid:1)(cid:3)(cid:18)(cid:16)(cid:19)(cid:9)(cid:20)(cid:14)(cid:17)(cid:13)
Fig. 5: MISMO analysis time on 10 real world applications.
the complied binary set could not ﬁnd any matching function
for any of the applications. In contrast, MISMO was able
to provide accurate semantic reverse engineering for all 10
commercial controller ﬁrmware packages.
B. Comparison with Prior Work
C. Selected MISMO Use-Cases
Other
cannot
existing solutions, by design,
achieve
MISMO’s main objective, i.e., to extract high-level algorith-
mic semantics from the low-level binary implementations.
Instead, they mainly focus on similarity checking between
two low-level binary implementations. However, we compare
MISMO with current state-of-the-art binary similarity checking
solutions (BINDIFF [19], BINJUICE [34] and BLEX [21]) on
several commercial embedded controllers. We used MISMO
to identify the control algorithms used in those binaries. For
BINDIFF, BINJUICE and BLEX, we used binary implemen-
tations of the full set of popular control algorithms. We
compared them against
individual commercial executables.
The tool utilized the associated binary implementations to
perform pattern-matching. The results of the comparisons are
shown in Table II. Existing solutions for binary comparison of
1) Data Type Recovery and Decompilation: Snowman [5]
is a well-known machine code to C/C++ decompiler. We show
how MISMO can recover more precise semantics such as data
type information and high-level semantics for a control algo-
rithm implementation. In Table III, there is one data structure
PID which has been used by the function implementation
of PolySync. Snowman does not reverse engineer any data
structures other than int and double data types. However,
as shown in the source code, there should be one data structure
whose members are of type double. MISMO extracts one
data structure and the data type of each ﬁeld. MISMO failed
to recover the last ﬁeld due to the fact that it was never
used by the function. The decompilation precision of both
tools was evaluated on a binary translation of a single line
of source code. As shown in Table III, Snowman does not
357
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:23 UTC from IEEE Xplore.  Restrictions apply. 
TABLE II: Comparison among BINDIFF (BD), BLEX (BL), BINJUICE (BJ) and MISMO. G indicates the ground truth.
Kalman Filter
Particle Filter
BD
BL
BJ MISMO G


BD
BL
BJ MISMO G










Crazyﬂie
Ardupilot
Px4fmu
3DRsolo
WoDCar
PolySync
SmartPID
Tmon
ROS
Marlin
Proportional-Integral-Derivative
BJ MISMO G
BD

BL



















Pulse-Width Modulation
BD
BL
BJ MISMO G