20
0
y
t
i
s
r
e
v
i
D
y
l
n
O
R
R
B
i
i
F
V
(a) Median transfer time
(b) Transfers per session
Figure 9: TCP performance in VanLAN.
closely approximates AllBSes. It is notable that our simple and prac-
tical opportunistic protocol is able to beat the performance of the
ideal single-BS protocol and approximate the ideal multi-BS proto-
col. In §5.4, we show that this high performance does not come at
the cost of efﬁciency.
Figure 8 illustrates the behavior of BRR and ViFi, in a format
similar to Figure 3. These are average case examples for the per-
formance of these two protocols; individual runs differ. The paths
are similar but not identical as they represent different days. We
see that with BRR the path has several interruptions. ViFi performs
signiﬁcantly better, with only one interruption.
5.3 Application performance
Our experiments also show that the resilient link-layer connectiv-
ity of ViFi translates into better performance for interactive applica-
tions. In particular, we evaluate short TCP transfers, which are mo-
tivated by typical Web workloads, and Voice over IP. In these exper-
iments, unacknowledged packets are retransmitted by the source at
most three times. We ﬁnd that higher limits yield similar or slightly
worse results.
5.3.1 Performance of TCP transfers
Our TCP experiments evaluate two performance measures: (i)
the time to complete a transfer; (ii) the number of completed trans-
fers in a session, where a session is a period of time in which no
transfer attempt was terminated due to a lack of progress. The vehi-
cle repeatedly fetches a 10 KB ﬁle from a machine connected to the
wired network and the machine does the same in the other direction.
Transfers that make no progress for ten seconds are terminated and
started afresh; we impose this limit because some transfers either
hang or take a very long to complete due to packet losses at inop-
portune times in the TCP exchange.
d
n
o
c
e
s
/
s
r
e
f
s
n
a
r
t
0.6
0.4
0.2
0.0
R
R
B
i
F
i
V
d
n
o
c
e
s
/
s
r
e
f
s
n
a
r
t
0.6
0.4
0.2
0.0
R
R
B
i
F
i
V
)
s
(
n
e
l
.
s
s
e
s
100
50
0
R
R
B
i
i
F
V
100
50
0
R
R
B
i
i
F
V
100
50
0
R
R
B
i
i
F
V
(a) DieselNet Ch. 1
(b) DieselNet Ch. 6
(a) VanLAN
(b) DieselNet Ch. 1
(c) DieselNet Ch. 6
Figure 10: TCP performance in DieselNet.
Figure 11: Median length of uninterrupted VoIP sessions.
Figure 9(a) shows the median time to complete a transfer. To iso-
late the beneﬁts of diversity and salvaging in ViFi, the middle bar
shows the median time for a conﬁguration in which diversity was
enabled but salvaging was disabled. The results show that ViFi’s
median TCP transfer time is about 0.6 seconds, which represents a
50% improvement over BRR. This improvement is higher than what
would be predicted based on the number of additional packets deliv-
ered by the link layer (Figure 2). This brings out the difference be-
tween improvement in aggregate performance versus performance
of interactive applications when using diversity. The ﬁgure also
shows that most of ViFi’s gain is a result from diversity, although
salvaging does provide a noticeable gain of about 10%. Given that
we ﬁnd that only 1.2% of the packets are salvaged, this beneﬁt of
salvaging is disproportionate. It conﬁrms our intuition that the few
packets that get stuck at older basestations when the vehicle moves
away can disproportionately hurt the TCP performance.
We ﬁnd that ViFi’s TCP performs comparably to modern cellular
technologies. We added an EVDO Rev. A based cellular modem
to one of our vehicles and generated a similar TCP workload. The
median connection time in the downlink was 0.75 sec and in the
uplink was 1.2 sec. (Cellular data rates are asymmetric.)
Figure 9(b) shows the average number of completed transfers per
session. The average for ViFi is more than twice of BRR. Combined
with its lower transfer times, this implies that users of ViFi will
experience fewer disrupted transfers as well as better performance
for individual transfers.
5.3.2 Performance of VoIP trafﬁc
We evaluated the performance of VoIP sessions over ViFi by mea-
suring the length of uninterrupted sessions. Supporting VoIP is
more challenging than TCP because quality is sensitive to both loss
and delay. The industry-standard for evaluating a voice call is the
Mean Opinion Score (MoS), which ranges from 1–5, with labels of
perfect (5), fair (4), annoying (3), very annoying (2), and impossi-
ble to communicate (1). MoS is a perceptual measure, but it is com-
monly estimated from an R-factor score [11] as: 1, if R  100; and 1 + 0.035R + 7× 10−6R(R− 60)(100− R), oth-
erwise. R-factor is sum of four terms R = 100− Is− Id− Ief + A,
where Is is the signal-to-noise impairments, Id and Ief are impair-
ments due to delay and loss, and A is expectation factor, which is
higher when users expect lower quality. The impairments are func-
tions of the codec.
We use the G.729 codec, which is implemented on most VoIP
devices. For simplicity, we set A to zero (though it may be higher
given the challenging environment). Then, the R-factor reduces
to [11]: 94.2 − 0.024d − 0.11(d − 177.3)H(d − 177.3) − 11 −
40log(1 + 10e), where d is the mouth-to-ear delay which includes
the coding delay, network delay, and the delay introduced by the
jitter buffer, e is the total loss rate which includes losses in the
network and losses due to late arrivals, and H is the Heaviside step
function: H(x) = 1 if x > 0; 0 otherwise.
Per the codec, we generate 20-byte packets every 20 ms. Follow-
ing convention, we assume that the coding delay is 25 ms, the jitter
buffer is 60 ms, and that the wired segment of the end-to-end path
adds 40 ms (corresponding to cross-country paths in the USA) to
each VoIP packet. Aiming for a mouth-to-ear delay of 177 ms (be-
cause the impairment due to delay increases signiﬁcantly beyond
that) means that packets that take more than 52 ms in the wireless
part should be considered lost. We measure one-way delays by ap-
plying piecewise linear regression [27] to remove clock skew and
assuming that the minimum one-way delay is identical in the two
directions.
We quantify the VoIP performance using the median length of
time between interruptions. We deem an interruption to have oc-
curred when the MoS value drops below 2 for a three-second pe-
riod. Three seconds is roughly the time it takes to enunciate a short
English sentence and a MoS value lower than 2 represents a severe
disruption in call quality. We are not aware of an existing method
to evaluate voice calls when packet delay and loss varies with time,
and this deﬁnition seemed reasonable to us. We also studied dif-
ferent MoS thresholds and time periods within this framework. Re-
sults for those ﬁt the qualitative behavior of Figure 7: the relative
advantage of ViFi over BRR increases as the deﬁnition of an inter-
ruption becomes more stringent.
Figure 11 shows the results for our deployment on VanLAN and
trace-driven simulations based on DieselNet. Because our results
indicate that salvaging brings little beneﬁt for VoIP, we do not iso-
late diversity and salvaging components of ViFi in the ﬁgure. The
results show that the average session lengths are much longer with
ViFi: the gain is over 100% in VanLAN, over 50% in Channel 1 of
DieselNet, and over 65% in Channel 6 of DieselNet. We ﬁnd that
the overall call quality with ViFi is better as well. In VanLAN, the
average of three-second MoS scores is 3.4 with ViFi and 3.0 with
BRR. Thus, our results show that users of ViFi experience better
call quality and signiﬁcantly fewer disruptions in their voice calls.
5.4 Efﬁciency of medium usage
The higher application performance of ViFi does not stem from it
using the medium more aggressively; in fact, its overall efﬁciency
is comparable to that of BRR. We measure efﬁciency as the number
of application packets delivered per transmission, in the channel
between the vehicle and the BSes.
We compare ViFi with PerfectRelay and BRR. In the PerfectRelay
protocol, exactly one basestation relays only if the intended desti-
nation did not hear the packet. We estimate its efﬁciency using
packet-level logs of ViFi. In the upstream direction, a packet is con-
sidered delivered by PerfectRelay if at least one BS hears it. In the
downstream direction, a complication is that even if a BS relays
the packet, the vehicle may not hear it. We get around this by: (i)
assuming that the outcome of the relaying will be identical to that
of ViFi if at least one of the BSes relayed the packet; and (ii) the
relaying is successful if no BS relayed it in ViFi.
Source transmissions that reach the destination
A1 Median number of auxiliary BSes
A2 Average number of auxiliary BSes that hear a source transmission
A3 Average number of auxiliary BSes that hear a source transmission but not the acknowledgment
B1
B2 Relayed transmissions corresponding to successful source transmissions (i.e., false positives)
B3 Average number of auxiliary BSes that relay when a false positive relay occurs
C1
C2 Cases where at least one auxiliary BS overhears a failed source transmission
C3 Cases where zero auxiliary BSes relay a failed source transmission (i.e., false negatives)
C4 Relayed packets that reach the destination
Source transmissions that do not reach the destination
Upstream Downstream
5
3.6
2.5
74%
33%
1.5
26%
98%
34%
50%
5
1.7
0.6
67%
25%
1.5
33%
66%
10%
100%
Table 1: Detailed statistics on the behavior of ViFi in VanLAN.
1.0
False positives
False negatives
¬G1 ¬G2
¬G3
ViFi
19% 50% 40% 157%
14% 14% 12% 10%
y
c
n
e
c
i
f
f
e
i
1.0
0.8
0.6
0.4
0.2
0.0
 Upstream 
y
a
l
e
R
t
c
e
f
r
e
P
R
R
B
i
F
i
V
 Downstream 
y
a
l
e
R
t
c
e
f
r
e
P
R
R
B
i
F
i
V
y
c
n
e