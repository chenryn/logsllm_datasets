exception  
when others then  
-- 异常返回ERROR  
return next 'ERROR';  
return ;  
end;  
$$ language plpgsql;  
```  
### nagios读取mq信息,  
返回异常的模块信息, 并返回依赖这些异常模块的模块信息.  
```  
create or replace function nagios_get_mq () returns setof text as $$  
declare  
begin  
perform 1 from srv_mq limit 1;  
if found then  
-- 返回异常的模块信息,格式:返回值,异常开始时间,部门,app名,模块名,应用错误代码,应用输出信息.  
return next '-- 异常模块信息:';  
return query select t1.code::text||','||t1.crt_time||','||t2.department||','||t2.appname||','||t2.modname||','||t1.appcode||','||t1.info from srv_mq t1,srv_info t2 where t1.modid=t2.modid;  
-- 更新nagios已读取次数字段.  
update srv_mq set nagios_reads=nagios_reads+1;  
-- 返回直接(不做递归)依赖这些异常模块的模块信息.格式:部门,app名,模块名  
return next '-- 依赖这些异常模块的模块信息:';  
return query select department||','||appname||','||modname from srv_info where modid in (select modid from srv_depend where depend_modid in (select modid from srv_mq));  
return;  
end if;  
-- 正常则返回NORMAL  
return next 'NORMAL';  
return;  
exception   
when others then  
-- 异常返回ERROR  
return next 'ERROR';  
return;  
end;  
$$ language plpgsql;  
```  
### 测试  
插入测试的服务和模块信息  
```  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (1,'测试app1',1,'测试模块1','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (2,'测试app2',2,'测试模块2','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (3,'测试app3',3,'测试模块3','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (3,'测试app3',4,'测试模块4','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (3,'测试app3',5,'测试模块5','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
insert into srv_info (appid,appname,modid,modname,department,dev,dev_phone,pm,pm_phone,op,op_phone,deployaddr,keepalive,status,comment,crt_time) values (4,'测试app4',6,'测试模块6','运维','digoal.zhou',123,'digoal.zhou',123,'digoal.zhou',123,'三墩',true,'在线','测试',now());  
```  
插入测试的模块间依赖关系信息  
```  
insert into srv_depend(modid,depend_modid,crt_time) values (4,3,now());  
insert into srv_depend(modid,depend_modid,crt_time) values (5,3,now());  
insert into srv_depend(modid,depend_modid,crt_time) values (2,3,now());  
```  
插入鉴权信息  
```  
insert into srv_monitor_grant (modid,addr,crt_time) values (3,'172.16.3.39',now());  
```  
在172.16.3.39上执行如下,  
因为modid = 1未给172.16.3.39服务器鉴权, 所以keepalive报错.  
```  
test=# select * from keepalive(1);  
NOTICE:  modid:1 no granted with ip:172.16.3.39, please check or grant it with above ip.  
 keepalive   
-----------  
         1  
(1 row)  
```  
modid = 3给172.16.3.39服务器做了鉴权, 因此可以插入.  
```  
test=# select * from keepalive(3);  
 keepalive   
-----------  
         0  
(1 row)  
test=# select * from srv_keepalive;  
 id | modid |      last_time        
----+-------+---------------------  
  1 |     3 | 2012-04-21 23:11:55  
(1 row)  
```  
告警测试  
```  
test=# select * from app_api(3,1,'ERR','请致电运维人员') ;  
 app_api   
---------  
       0  
(1 row)  
test=# select * from srv_mq;  
 id | modid | code | appcode |      info      | nagios_reads |      crt_time       | mod_time | recover_time   
----+-------+------+---------+----------------+--------------+---------------------+----------+--------------  
  1 |     3 |    1 | ERR     | 请致电运维人员 |            0 | 2012-04-21 23:18:31 |          |   
(1 row)  
```  
使用nagios获取告警测试, 由于2,4,5号模块依赖3号模块, 所以会在依赖信息中报出.  
```  
test=# select * from nagios_get_mq();  
                          nagios_get_mq                             
------------------------------------------------------------------  
 -- 异常模块信息:  
 1,2012-04-21 23:18:31,运维,测试app3,测试模块3,ERR,请致电运维人员  
 -- 依赖这些异常模块的模块信息:  
 运维,测试app2,测试模块2  
 运维,测试app3,测试模块4  
 运维,测试app3,测试模块5  
(6 rows)  
```  
使用nagios获取keepalive超时或未开启的信息.  
```  
test=# select * from nagios_keepalive('1 sec');  
                             nagios_keepalive                               
--------------------------------------------------------------------------  
 -- 列出在srv_info表中开启了keepalive, 但是应用未调用keepalive函数的记录.  
 运维,测试app1,测试模块1  
 运维,测试app2,测试模块2  
 运维,测试app3,测试模块4  
 运维,测试app3,测试模块5  
 运维,测试app4,测试模块6  
 -- 列出超时的记录, 有则返回部门,app名,模块名的信息  
 运维,测试app3,测试模块3  
(8 rows)  
```  
恢复正常测试.  
```  
test=# select * from app_api(3,0,'NORMAL','') ;  
 app_api   
---------  
       0  
(1 row)  
```  
srv_mq中模块3的记录将移动到srv_mq_history表中.因此在此检查mq将不会报出异常  
```  
test=# select * from nagios_get_mq();  
 nagios_get_mq   
---------------  
 NORMAL  
(1 row)  
```  
检查srv_mq_history表, 信息已经记录, 包括恢复时间信息.  
```  
test=# select * from srv_mq_history ;  
 id | modid | code | appcode |      info      | nagios_reads |      crt_time       |      mod_time       |    recover_time       
----+-------+------+---------+----------------+--------------+---------------------+---------------------+---------------------  
  1 |     3 |    1 | ERR     | 请致电运维人员 |            3 | 2012-04-21 23:18:31 | 2012-04-21 23:31:16 | 2012-04-21 23:31:16  
(1 row)  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")