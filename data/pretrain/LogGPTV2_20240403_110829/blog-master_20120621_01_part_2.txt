5. PostgreSQL能不能限制数据库的大小?  
6. 怎样给一个用户授予只读角色?  
7. 不想让数据插入到某个表应该怎么做?  
8. PostgreSQL 中有没有rownum这样的，显示结果集的序号?  
9. PostgreSQL 函数中如何使用savepoint?  
10.请问, pg脚本有宏替换, 计算字符串公式的能力? 类似 a=2 ; evaluate(5-a) ; 如果将这个值赋值给这个变量呢? zresult = evaluate(5-a) ;  
11.UPDATE A表 FROM B表 ?  
12. hex转decimal  
13. PostgreSQL 时区.',to_tsvector('chinesecfg','PostgreSQL QQ群 FAQ贴 - 1'),to_tsvector('chinesecfg','QQ群里一些网友问到的问题，收集如下 :   
目录 :   
1. PostgreSQL存储过程中自定义异常怎么弄?  
2. PostgreSQL9.1的同步事务在某些情况下用户主动cancel等待sync replication standby 的acknowledge,实际本地已提交.  
3. PostgreSQL如何满足已经存在则更新, 不存在则插入的需求.  
4. copy和insert哪个效率高?  
5. PostgreSQL能不能限制数据库的大小?  
6. 怎样给一个用户授予只读角色?  
7. 不想让数据插入到某个表应该怎么做?  
8. PostgreSQL 中有没有rownum这样的，显示结果集的序号?  
9. PostgreSQL 函数中如何使用savepoint?  
10.请问, pg脚本有宏替换, 计算字符串公式的能力? 类似 a=2 ; evaluate(5-a) ; 如果将这个值赋值给这个变量呢? zresult = evaluate(5-a) ;  
11.UPDATE A表 FROM B表 ?  
12. hex转decimal  
13. PostgreSQL 时区.'));  
```  
分词查询测试 :   
```  
postgres=# select ts_content from blog;  
'(':155,171 ')':157,173 ',':46,60,135,142 '.':28,51,67,189 '1':29 '1.':15 '10.':133 '11.update':175 '12.':182 '13.':186 '2':152 '2.  
':26 '3.':52 '4.':68 '5-a':156,172 '5.':76 '6.':86 '7.':96 '8.':109 '9.':125 ':':12,14 ';':153,158,174 '=':151,169 '?':25,75,85,95,1  
08,124,132,148,167,181 'a':150,176 'acknowledge':45 'b':179 'cancel':39 'copy':69 'decimal':185 'evaluate':154,170 'from':178 'hex':  
183 'insert':71 'pg':136 'postgresql':16,53,77,110,126,187 'postgresql9':27 'qq':1 'replication':42 'rownum':115 'savepoint':131 'st  
andby':43 'sync':41 'zresult':168 '一个':89 '一些':3 '下':36 '不':61,79,97 '中':19,111,128 '主动':38 '事务':32 '使用':130 '值赋值':1  
62 '做':107 '公式':145 '函数':127 '则':58,63 '到':6,102 '变量':165 '只':92 '同步':31 '呢':166 '和':70 '哪个':72 '在':33 '大小':84 '  
下':11 '如何':54,129 '如果':159 '字符串':144 '存储':17 '存在':57,62 '宏替':140 '定义':21 '实际':47 '将':160 '已':49 '已经':56 '序号'  
:123 '应该':105 '异常':22 '弄':24 '怎么':23,106 '怎样':87 '情况':35 '想':98 '换':141 '授予':91 '提交':50 '插入':64,101 '收集':10 '效  
率':73 '数据':100 '数据库':82 '时区':188 '显示':119 '更新':59 '有':112,114,139 '本':138 '本地':48 '某个':103 '某些':34 '没':113 '满  
':55 '用户':37,90 '的':7,30,44,65,83,117,122,146 '目录':13 '等待':40 '类似':149 '结果':120 '给':88,163 '网友':4 '群里':2 '能':78,80   
'能力':147 '脚':137 '自':20 '表':104,177,180 '角色':94 '计算':143 '让':99 '请问':134 '读':93 '转':184 '过程':18 '这个':161,164 '这样  
':116 '问':5 '问题':8 '限制':81 '集':121 '需求':66 '高':74 '，':9,118  
```  
从上面的全文检索类型字段ts_content可以看出, 函数 和 表 在这分词里面, 使用 函数 和 表 作为匹配条件查询时将返回结果, 换个不存在的查询则没有结果 :   
```  
postgres=# select user_id,title from blog where ts_content @@ to_tsquery('函数 & 中国');  
 user_id | title   
---------+-------  
(0 rows)  
postgres=# select user_id,title from blog where ts_content @@ to_tsquery('函数 & 表');  
 user_id |           title             
---------+---------------------------  
       1 | PostgreSQL QQ群 FAQ贴 - 1  
(1 row)  
```  
查看执行计划 :   
```  
postgres=# explain select user_id,title from blog where ts_content @@ to_tsquery('函数 & 中国');  
                                QUERY PLAN                                  
--------------------------------------------------------------------------  
 Index Scan using idx_blog_ts2 on blog  (cost=0.00..4.27 rows=1 width=40)  
   Index Cond: (ts_content @@ to_tsquery('函数 & 中国'::text))  
(2 rows)  
postgres=# explain select user_id,title from blog where ts_content @@ to_tsquery('函数 & 表');  
                                QUERY PLAN                                  
--------------------------------------------------------------------------  
 Index Scan using idx_blog_ts2 on blog  (cost=0.00..4.27 rows=1 width=40)  
   Index Cond: (ts_content @@ to_tsquery('函数 & 表'::text))  
(2 rows)  
```  
## 参考  
http://code.google.com/p/nlpbamboo/  
http://crfpp.googlecode.com/svn/trunk/doc/index.html#download  
http://www.cmake.org/  
http://www.postgresql.org/docs/9.2/static/datatype-textsearch.html  
http://www.postgresql.org/docs/9.2/static/functions-textsearch.html  
## 其他分词工具  
1\. http://bbs.pgsqldb.com/client/post_show.php?zt_auto_bh=57211  
2\. http://amutu.com/blog/zhparser/  
3\. https://github.com/amutu/zhparser  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")