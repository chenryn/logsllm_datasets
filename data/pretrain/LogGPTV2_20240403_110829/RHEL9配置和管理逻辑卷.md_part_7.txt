::: section
::: titlepage
# []{#creating-and-managing-thinly-provisioned-volumes_configuring-and-managing-logical-volumes.html#thinly-provisioned-snapshot-volumes_creating-and-managing-thinly-provisioned-volumes}精简配置的快照卷 {.title}
:::
Red Hat Enterprise Linux
支持精简配置的快照卷。精简逻辑卷的快照还创建一个精简逻辑卷(LV)。精简快照卷具有与其它精简卷相同的特征。您可以独立激活卷、扩展卷、重新命名卷、删除卷、甚至快照卷。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
与所有 LVM
快照卷以及所有精简卷类似，集群中的节点不支持精简快照卷。快照卷必须在一个集群节点中完全激活。
:::
传统的快照必须为创建的每个快照分配新空间，在对原始卷进行更改时保留数据。但是精简置备快照与原始卷共享相同的空间。thin
LV 的快照效率更高，因为数据块对 thin LV
及其任何快照都已被共享。您可以创建 thin LV
的快照或其他精简快照。在精简池中也共享递归快照的块。
精简快照卷提供以下优点：
::: itemizedlist
-   增加原始卷的快照数量对性能有不明确的影响。
-   精简快照卷可以减少磁盘用量，因为只有新数据被写入，且不会复制到每个快照中。
-   不需要使用原始卷同时激活精简快照卷，这是传统快照的要求。
-   从快照恢复原始卷时，不需要合并精简快照。您可以删除原始源并使用快照。传统快照具有单独的卷，存储必须复制的改变，即，与原始快照合并以进行重置。
-   与传统的快照相比，对允许的快照数量有显著提高限制。
:::
虽然使用精简快照卷有很多优点，但在有些情况下，传统的 LVM
快照卷功能可能更适合您的需要。您可以将传统快照用于所有类型的卷。但是，要使用
thin-snapshots，您需要使用精简置备。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您不能限制精简快照卷的大小 ;
如果需要，快照将使用精简池中的所有空间。一般说来，在决定使用什么快照格式时，您应该考虑具体的要求。
:::
默认情况下，在正常激活命令中会跳过精简快照卷。
:::
::: section
::: titlepage
# []{#creating-and-managing-thinly-provisioned-volumes_configuring-and-managing-logical-volumes.html#creating-thinly-provisioned-snapshot-volumes_creating-and-managing-thinly-provisioned-volumes}创建精简配置的快照卷 {.title}
:::
使用精简配置的快照卷，您可以在同一数据卷中存储更多虚拟设备。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
在创建精简快照卷时，不要指定卷的大小。如果指定了 size
参数，则创建的快照不会是一个精简快照卷，也不会使用精简池来存储数据。例如，命令
`lvcreate -s vg/thinvolume -L10M`{.literal}
不会创建精简快照，即使原始卷是一个精简卷。
:::
可为精简配置的原始卷创建精简快照，也可针对不是精简置备的原始卷创建精简快照。下面的步骤描述了创建精简置备快照卷的不同方法。
::: itemizedlist
**先决条件**
-   您已创建了精简配置的逻辑卷。如需更多信息，[请参阅创建精简配置的逻辑卷](#creating-and-managing-thinly-provisioned-volumes_configuring-and-managing-logical-volumes.html#creating-thinly-provisioned-logical-volumes_creating-and-managing-thinly-provisioned-volumes "创建精简配置的逻辑卷"){.link}。
:::
::: itemizedlist
**步骤**
-   创建精简配置的快照卷。以下命令创建了名为 精简置备逻辑卷
    [*vg001/thinvolume*]{.emphasis} 的精简置备快照卷： []{.emphasis}
    ``` literallayout
    # lvcreate -s --name mysnapshot1 vg001/thinvolume
      Logical volume "mysnapshot1" created
    ```
    ``` literallayout
    # lvs
      LV          VG       Attr     LSize   Pool       Origin     Data%  Move Log Copy%  Convert
      mysnapshot1 vg001    Vwi-a-tz   1.00g mythinpool thinvolume   0.00
      mythinpool  vg001    twi-a-tz 100.00m                         0.00
      thinvolume  vg001    Vwi-a-tz   1.00g mythinpool              0.00
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在使用精简配置时，存储管理员务必要监控存储池，并在其被完全占用时添加更多容量。有关扩展精简卷大小的详情，请参考
    [创建精简配置的逻辑卷](#creating-and-managing-thinly-provisioned-volumes_configuring-and-managing-logical-volumes.html#creating-thinly-provisioned-logical-volumes_creating-and-managing-thinly-provisioned-volumes "创建精简配置的逻辑卷"){.link}。
    :::
-   您还可以为非置备的逻辑卷创建精简配置的快照。因为非置备的逻辑卷不在精简池中，所以它被称为外部原始卷。外部原始卷可以被很多精简置备的快照卷使用和共享，即使在不同的精简池中也是如此。在创建精简置备快照时，外部原始源必须不活跃且只读。
    以下示例会为名为 [*origin_volume*]{.emphasis}
    的只读非活动逻辑卷创建一个精简快照卷。精简快照卷名为
    [*mythinsnap*]{.emphasis}。逻辑卷 [*origin_volume*]{.emphasis}
    然后在卷组 vg001 中成为精简快照卷 [*mythinsnap*]{.emphasis}
    （使用现有精简池 [ *[*vg001*]{.emphasis} /pool*]{.emphasis}
    ）的精简外部源。原始卷必须与快照卷位于同一个卷组中。在指定原始逻辑卷时不要指定卷组。
    ``` literallayout
    # lvcreate -s --thinpool vg001/pool origin_volume --name mythinsnap
    ```
-   您可以执行以下命令，为第一个快照卷创建第二个精简置备快照卷。
    ``` literallayout
    # lvcreate -s vg001/mysnapshot1 --name mysnapshot2
    Logical volume "mysnapshot2" created.
    ```
    要创建第三个精简置备快照卷，请使用以下命令：
    ``` literallayout
    # lvcreate -s vg001/mysnapshot2 --name mysnapshot3
    Logical volume "mysnapshot3" created.
    ```
:::
::: itemizedlist
**验证**
-   显示精简快照逻辑卷的所有ancestors 和后代列表：
    ``` literallayout
    $ lvs -o name,lv_ancestors,lv_descendants vg001
      LV           Ancestors                           Descendants
      mysnapshot2  mysnapshot1,thinvolume              mysnapshot3
      mysnapshot1  thinvolume              mysnapshot2,mysnapshot3
      mysnapshot3  mysnapshot2,mysnapshot1,thinvolume
      mythinpool
      thinvolume           	           	     mysnapshot1,mysnapshot2,mysnapshot3
    ```
    在这里，
-   [*thinvolume*]{.emphasis} 是卷组 [*vg001*]{.emphasis} 中的原始卷。
-   [*mysnapshot1*]{.emphasis} 是 [*thinvolume*]{.emphasis}的快照
-   [*mysnapshot2*]{.emphasis} is a snapshot of
    [*mysnapshot1*]{.emphasis}
-   [*mysnapshot3*]{.emphasis} 是 [*mysnapshot2*]{.emphasis}的快照
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    `lv_ancestors`{.literal} 和 `lv_descendants`{.literal}
    字段会显示现有的依赖项。但是，如果从链的中间删除了该条目，则它们不会跟踪删除的条目，这可能会破坏依赖项链。
    :::
:::
::: itemizedlist
**其他资源**
-   `lvcreate(8)`{.literal} 手册页
:::
:::
:::
[]{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html#troubleshooting-lvm_configuring-and-managing-logical-volumes}第 8 章 LVM 故障排除 {.title}
:::
您可以使用 LVM 工具排除 LVM 卷和组群中的问题。
::: section
::: titlepage
# []{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html#gathering-diagnostic-data-on-lvm_troubleshooting-lvm}在 LVM 中收集诊断数据 {.title}
:::
如果 LVM 命令没有按预期工作，您可以使用以下方法收集诊断信息。
::: itemizedlist
**步骤**
-   使用以下方法收集不同类型的诊断数据：
    ::: itemizedlist
    -   向任何 LVM 命令添加 `-v`{.literal}
        参数，以提高命令输出的详细程度。添加更多的 `v`{.literal}
        会进一步增加输出的详细程度。最多允许 4 个这样的
        `v`{.literal}，例如 `-vvvv`{.literal}。
    -   在 `/etc/lvm/lvm.conf`{.literal} 配置文件的 `log`{.literal}
        部分中，增加 `level`{.literal} 选项的值。这会导致 LVM
        在系统日志中提供更多详情。
    -   如果问题与逻辑卷激活有关，请启用 LVM 在激活过程中记录信息：
        ::: orderedlist
        1.  在 `/etc/lvm/lvm.conf`{.literal} 配置文件的 `log`{.literal}
            部分中设置 `activation = 1`{.literal} 选项。
        2.  使用 `-vvvv`{.literal} 选项执行 LVM 命令。
        3.  检查命令输出。
        4.  将 `activation`{.literal} 选项重置为 `0`{.literal}。
            如果您没有将选项重置为
            `0`{.literal}，则系统在内存不足时可能会变得无响应。
        :::
    -   为诊断显示信息转储：
        ``` screen
        # lvmdump
        ```
    -   显示附加系统信息：
        ``` screen
        # lvs -v
        ```
        ``` screen
        # pvs --all
        ```
        ``` screen
        # dmsetup info --columns
        ```
    -   检查 `/etc/lvm/backup/`{.literal} 目录中的最后一个 LVM
        元数据备份，并在 `/etc/lvm/archive/`{.literal}
        目录中检查存档版本。
    -   检查当前的配置信息：
        ``` screen
        # lvmconfig
        ```
    -   检查 `/run/lvm/hints`{.literal}
        缓存文件以获取哪些设备上具有物理卷的记录。
    :::
:::
::: itemizedlist
**其他资源**
-   `lvmdump(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html#displaying-information-on-failed-lvm-devices_troubleshooting-lvm}显示失败的 LVM 设备的信息 {.title}
:::
您可以显示一个失败的 LVM
卷的信息，以便帮助您确定为什么这个卷失败的原因。
::: itemizedlist
**步骤**
-   使用 `vgs`{.literal} 或 `lvs`{.literal} 实用程序显示失败的卷。
    ::: example
    []{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html#idm140111128571408}
    **例 8.1. 失败的卷组**
    ::: example-contents
    在本例中，组成卷组 [*myvg*]{.emphasis}
    的设备之一失败。卷组不可用，但您可以看到有关失败设备的信息。
    ``` screen
    # vgs --options +devices
     /dev/vdb1: open failed: No such device or address
     /dev/vdb1: open failed: No such device or address
      WARNING: Couldn't find device with uuid 42B7bu-YCMp-CEVD-CmKH-2rk6-fiO9-z1lf4s.
      WARNING: VG myvg is missing PV 42B7bu-YCMp-CEVD-CmKH-2rk6-fiO9-z1lf4s (last written to /dev/sdb1).
      WARNING: Couldn't find all devices for LV myvg/mylv while checking used and assumed devices.
    VG    #PV #LV #SN Attr   VSize  VFree  Devices
    myvg   2   2   0 wz-pn- <3.64t <3.60t [unknown](0)
    myvg   2   2   0 wz-pn- <3.64t <3.60t [unknown](5120),/dev/vdb1(0)
    ```
    :::
    :::
    ::: example
    []{#troubleshooting-lvm_configuring-and-managing-logical-volumes.html#idm140111123233680}
    **例 8.2. 逻辑卷失败**
    ::: example-contents
    在这个示例中，其中一个设备会失败，因为卷组中的逻辑卷会失败。命令输出显示失败的逻辑卷。
    ``` screen
    # lvs --all --options +devices
      /dev/vdb1: open failed: No such device or address
      /dev/vdb1: open failed: No such device or address
      WARNING: Couldn't find device with uuid 42B7bu-YCMp-CEVD-CmKH-2rk6-fiO9-z1lf4s.
      WARNING: VG myvg is missing PV 42B7bu-YCMp-CEVD-CmKH-2rk6-fiO9-z1lf4s (last written to /dev/sdb1).
      WARNING: Couldn't find all devices for LV myvg/mylv while checking used and assumed devices.
      LV    VG  Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert Devices
      mylv myvg -wi-a---p- 20.00g                                                     [unknown](0)                                                 [unknown](5120),/dev/sdc1(0)
    ```
    :::
    :::