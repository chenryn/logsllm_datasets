（4）Marvin toqueton
一个自动化遍历APP UI的工具，用于分析APP UI控件并进行自动化交互遍历，辅助动态分析。
主要特点：
笔者刚看到这个项目发布时研究了一番，主要特点有可直接搜索下载Google应用商店或者上传应用进行分析，可编写自定义静态分析脚本，使用动态引擎复查静态分析的结果提升准确性，使用本地应用去遍历APP
UI等，但仔细实践后发现动态分析环境（ubuntu+openNebula+Android-X86）的布署很麻烦，多次尝试都未成功。
图9 Marvin主界面
**4.Inspeckage**
Github:https://github.com/ac-pm/Inspeckage
一个Xposed插件，用于调试分析Android App。
主要特点：
使用方便，自带WEB界面，装Xposed插件可以分分钟开始挖漏洞；2.功能全面：查看Manifest信息，监控本地文件读写，查看文件内容，查看Logcat日志，查看网络通信请求（支持SSL
uncheck），监控IPC通信，查看加密操作，调用未导出组件等。
图10 Inspeckage主界面
### 三、IOS App漏洞检测
一般来说iOS App由于iOS系统安全限制（非越狱环境），且无法直接反编绎获取App源码，其在安全性上远高于Android
App，但近两年前随着XcodeGhost(分析文章)，iBackDoor，AFNetworking中间人等后门事件与漏洞的曝光，iOS
App安全性也慢慢受到国内开发者与安全研究人员的关注。
#### 3.1 常见IOS App漏洞测试工具
测试iOS App安全性离不开一台越狱过的iOS设备，以及一些测试利器。在此简单简介两个iOS App安全测试工具：
**1.Idb**
图11 Idb主界面
官网：http://www.idbtool.com
Github：https://github.com/dmayer/idb
Idb是一款开源的iOS App安全评估工具，作者是Danl A.Mayer。
主要功能：
  1. 查看应用以下信息：应用包名；注册的URL Schemes；SDK版本；应用数据文件夹位置；应用权限等，
  2. 查看/下载应用数据文件；
  3. 查看应用文件保护级别；
  4. Dump iOS keychain；
  5. 检测应用是否加密；
  6. 检测应用编绎安全选项(ASLR/PIE, DEP, ARC)；
  7. 查看应用的shared libraries；
  8. 提取应用binary中的字符串；
  9. Class dump;
  10. 查看应用URL Handler；
  11. Invoke and fuzz URL handlers；
  12. 查看系统剪切板
  13. 截屏
  14. 安装系统证书；
  15. 编辑 /etc/hosts文件；
  16. 查看系统日志；
**2.Needle**
图12 Needle主界面
Github：https://github.com/mwrlabs/needle
Needle是MWR
Labs开发的一个开源iOS安全测试框架，同样支持开发自定义模块来扩展Needle的功能，目前主要功能包含对iOS应用数据存储，IPC，网络通信，静态代码分析，hooking及二进制文件防护等方面的安全审计。
与drozer类似，Needle提供了一个shell界面，基本idb有的功能needle都有或者说以后也会有（因为可以自己写模块），而Needle还同时支持Cycript与Frida两个hooking方案，可以方便的加载hook脚本与执行命令。
#### 3.2 IOS App自动化漏洞检测
在很长一段时间内，iOS安全研究都主要集中在iOS系统安全漏洞挖掘中，由于iOS相对安全的系统机制保护与严格的审核机制，iOS
App安全性一般比Android App要高不少，历史上出现的过一些iOS
App漏洞也主要集中在iOS越狱环境下，但近年来XcodeGhost，AFNetworking框架中间人漏洞以及多个恶意SDK曝光也说明了iOS
App安全性并没有我们想像的那么高，建设iOS App自动化漏洞审计平台对于拥有大量iOS App产品的企业来说还是很有必要的。
为了提升公司iOS App安全漏洞审计能力与应急能力，笔者与riusksk（林大夫）从2015年底开始一起研发iOS
App漏洞审计系统（后续并入金刚），目前已经成功上线近半年，也辅助发现了一些iOS App业务安全漏洞，详情可参考文章：浅谈iOS应用安全自动化审计
此外360NirvanTeam（http://nirvan.360.cn）也上线了在线检测功能，开源方案MobSF也有iOS
App在线审计功能。此类审计平台主要审计点有：BIN文件分析，第三方库漏洞检测，XCodeGhost检测，恶意SDK检测等。相对来说金刚更为全面，适合开发上线前自查与安全研究人员辅助分析，包含了私有API检测，开放端口检测，应用文件审计，网络通信数据审计，日志审计，classdump等功能，后续还会继续优化iOS
App UI自动化遍历功能与URL scheme Fuzzing功能。
图13 TSRC iOS App漏洞审计报告部分内容
### 四、构建移动App漏洞检测平台
目前国内无论是3BAT，还是移动安全公司，都已经提供了移动APP漏洞检测产品，笔者平时也会对这些平台做一些深度体验，总体来说随着技术发展，构建APP漏洞检测平台门槛已经很低技术也很成熟了。
在移动互联网时代，不同的企业对于移动APP产品安全性要求是不一样的，如金融，支付，通信，游戏类APP产品对App客户端安全，业务安全，后端服务器安全都提出了很高要求，定制企业自已的移动APP漏洞检测平台还是很有必要的。
笔者仅从个人角度谈谈对如何构建移动App漏洞检测平台的几点看法：
（1）在平台建设之初可以参考业界优秀的同类产品与开源方案，目前大部分移动App漏洞检测平台后端基本功能都是使用Python/Java开发，便于快速开发迭代。
（2）移动APP安全威胁是不断变化的，漏洞审计规则也应该支持快速更新，同时企业移动App漏洞检测平台应该满足移动App产品正式上线前审计，上线后日常排查两个基本需求。
（3）很多开发人员和安全工程师对漏洞的理解是不一致的，在输出漏洞检测报告后，还需要提供详细的漏洞利用场景讲解与修复指引。
（4）多多关注学术界与工业界的新研究成果，如果能加入优化与利用，可以推动平台整个技术能力的进步。
（5）平台的主要建设者应该精通移动App漏洞挖掘实战，能够针对企业重点产品特性（如动态加载，热补丁等技术）提供专业的解决方案。
同时笔者提出了一个甲方/乙方企业通用的移动App漏洞检测平台架构，企业可以在此基础上直接接入Web漏洞扫描系统扫描App后端Web漏洞，也可以收集URL测试业务安全漏洞。
图14 移动App自动化漏洞检测平台架构（点击查看大图）
### 五、未来移动App漏洞检测平台发展方向
在Google最新发布的Android
7.0系统增加了不安全特性，如APP开发者可以使用系统提供的接口自主配置信任的证书，默认也不再信任用户安装的第三方CA证书，此举可提升Android
App网络通信的安全性。
可见未来移动APP安全问题还将不断变化，目前大部分移动APP漏洞检测平台最终的检测结果也需要专业的安全研究人员评估实际风险，历史上很多移动端严重漏洞也是需要结合业务场景的，所以说移动App漏洞检测平台也只是企业移动App安全建设中的一环，此外推动移动安全人才培养，移动App安全开发规范，应用加固，盗版监测等体系建设也同样重要。
笔者个人认为未来移动APP漏洞检测平台可发展的几个方向有：
1.机器学习
机器学习在网络安全领域常用于恶意软件检测，流量检测等方面，目前也已经出现一些利用机器学习进行Android恶意应用等方面的开源工具（https://github.com/mwleeds/android-malware-analysis ）与研究，未来同样也可能应用于Android App漏洞检测。
2.威胁感知与大数据
如何从移动App中挖掘数据，并分析，整合进而利用于漏洞检测与威胁感知也是未来移动APP漏洞检测发展方向之一。目前部分漏洞检测平台已经开始支持采集应用市场所有移动APP源码及运行过程中产生的网络通信数据（如域名，IP，URL等），进行聚合分析与WEB接口漏洞检测。同时四维智创，梆梆等安全公司开始推广移动应用威胁感知产品，此类产品通过SDK收集应用的行为与网络数据，用于检测APT攻击，防刷单等场景。
3.社区化
目前国内已经有一些社区化的WEB漏洞检测平台，如Seebug，Tangscan等，盘古即将公测的Janus（http://appscan.io
）也同样开始主打社区化，Janus支持社区用户自定义检测规则，后台结合海量全网应用数据，可用于全网应用快速漏洞扫描。同时社区化加入了安全研究员的人工审计流程，后续可以不断提升漏洞特征建模的细度与广度，提升平台检测能力。
文章纯属原创，转载请注明出处（Android安全中文站），同时感谢lake2，riusksk，Flanker，小荷才露尖尖角，瘦蛟舞的指点。
#### 参考资料：
[1]
http://www.ijcaonline.org/research/volume134/number7/dhavale-2016-ijca-907855.pdf
[2] http://www.droidsec.cn/
[3] https://loccs.sjtu.edu.cn/
[4] http://jaq.alibaba.com/community/index.htm
[5] http://drops.wooyun.org/
[6] https://blog.flanker017.me/
来源链接：http://t.cn/Rwnsp8j
* * *