    // This returns true if the inode appears to contain data refering to a previously
    // deleted file, directory or symlink but does not contain the block list anymore.
    // That means it will return false for orphan-ed inodes, although they are basically
    // (partially) deleted.
    bool is_deleted(void) const
    {
      return i_links_count == 0 && i_mode && (i_block[0] == 0 ||
                                              !((i_mode & 0xf000) == 0x4000 || (i_mode & 0xf000) == 0x8000));
    }
};
#endif // EXT3_H
```
*使用*
在开始恢复前,选择一个目录来存放被恢复的文件.ext3grep 程序会在当前目录下创建一个名为 RESTORED_FILES 的目录来存放被恢复的文件.因此在运行 ext3grep 命令前,先要切换到一个你可读写的目录中.
因为进入了单用户模式,并且将根分区设成了只读,那么只能把恢复出来的文件放在U盘中了.因此,先 cd /mnt 进入U盘目录.如果你有幸记得你误删除的文件名及其路径的话,就可以直接用下面的命令进行恢复了:
```bash
ext3grep /dev/your-device --restore-file path/to/your/file/filename
# 需要注意的是,上面的文件路径,是在该分区上文件路径.假设我们要恢复 /dev/sda3 分区上文件,这个分区原来的安装点是 /home,现在想恢复文件 /home//vi/tips.xml,那么输入的命令应该是:
ext3grep /dev/sda3 --restore-file /vi/tips.xml
# 如果你忘记了文件名,或者你误删除的是一个目录而你无法记全该目录中的文件,你可以先用下面的命令查询一下文件名:
ext3grep /dev/sda3 --dump-names | tee filename.txt
上面的命令把 ext3grep 命令的输出记录到文件 filename.txt 中,你可以慢慢查看,或者使用 grep 命令过滤出你需要的信息.
当你知道了目录/文件的信息后,就可以用上面说的命令进行恢复了.
# 这款软件不能按目录恢复文件,只能执行恢复全部命令:
ext3grep /dev/sda3 --restore-all
```
*binlog*
开启 Binlog,让 ext3grep 从 Binlog 中恢复,对数据库场景有用.
---
## 系统
### 密码重置
#### centos7
1. 在启动菜单选择启动内核,按 e 编辑,找到 rhgb quiet 一行,把 `rhgb quiet` 替换为 `init=/bin/bash` (临时生效)
2. 按 `CTRL+X` 进入单用户模式
3. 挂载根文件系统: `mount -o remount,rw /`
4. 使用 `passwd` 命令直接设置 root 密码: `passwd root` 输入两次新密码.
5. 最后,执行如下命令更新 SELinux: `touch /.autorelabel`
6. 进入正常模式: `exec /sbin/init`  现在可以使用新设置的 root 密码登录了.
#### Ubuntu14
- 方案一
    1. 重启电脑长按 shift 键直到进入进入 GRUB 引导模式，选择第二行 Ubuntu 高级选项, 选中直接回车
    2. 按 e 进入（recovery mode） 编译kernel进行启动参数
    3. 倒数第四行，删除 `recovery nomodeset` ,添加 `quiet splash rw init=/bin/bash` 。然后按 F10, 启动。
    4. 运行后系统直接进入 root mode，输入：`passwd`
- 方案二
    1. 重启电脑长按 shift 键直到进入进入 GRUB 引导模式，选择第二行 Ubuntu 高级选项, 选中直接回车
    2. 选择一个括号里是 recovery mode 的系统发行编号，回车进入
    3. 选择 root 项，回车
    4. 最下方输入 root 密码，回车，便会切换到 root 用户；此时需要输入此条命令 `mount -o remount,rw /` 回车，再用 `passwd 用户名` 便可以修改密码了；
    5. 继续输入 `exit` 返回，选中 `resume`，回车，此时会跳出一个确认界面，再回车即可
---
### 会话
#### 查
```bash
who     # 查看当前登录用户
w       # 查看登录用户行为
last    # 查看登录用户历史
```
#### 防
```bash
pkill -u linfengfeiye   # 直接剔除用户
ps -ef| grep pts/0      # 得到用户登录相应的进程号 pid 后执行
kill -9 pid             # 安全剔除用户
```
#### 修改账户超时值,设置自动注销时间
```
vim /etc/profile
TMOUT=600
```
#### 命令记录
```bash
histroy                 # 查看 root 的历史命令
```
进入 `/home` 各帐号目录下的 `.bash_history` 查看普通帐号的历史命令
**history优化**
```bash
# 保存1万条命令
sed -i 's/^HISTSIZE=1000/HISTSIZE=10000/g' /etc/profile
# 记录IP，在 /etc/profile 的文件尾部添加如下行数配置信息
USER_IP=`who -u am i 2>/dev/null | awk '{print $NF}' | sed -e 's/[()]//g'`
if [ "$USER_IP" = "" ]
then
USER_IP=`hostname`
fi
export HISTTIMEFORMAT="%F %T $USER_IP `whoami` "
shopt -s histappend
export PROMPT_COMMAND="history -a"
# 让配置生效
source /etc/profile
```
---
### 开机启动
#### 查看开机启动服务
```bash
chkconfig                   # 查看开机启动服务命令
chkconfig --list | grep "3:启用\|3:开\|3:on\|5:启用\|5:开\|5:on"
ls /etc/init.d              # 查看开机启动配置文件命令
cat /etc/rc.local           # 查看 rc 启动文件
ls /etc/rc.d/rc[0~6].d
runlevel                    # 查看运行级别命令
```
#### 查看计划任务
```bash
crontab -l                  # 计划任务列表
ls -alh /var/spool/cron     # 默认编写的 crontab 文件会保存在 /var/spool/cron/用户名 下
ls -al /etc/ | grep cron
ls -al /etc/cron*
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
```
---
### 账号
#### 异常查找
```bash
awk -F: '{if($3==0||$4==0)print $1}' /etc/passwd            # 查看 UID\GID 为0的帐号
awk -F: '{if($7!="/usr/sbin/nologin"&&$7!="/sbin/nologin")print $1}' /etc/passwd # 查看能够登录的帐号
awk '/\$1|\$6/{print $1}' /etc/shadow                       # 查询可以远程登录的帐号信息
lastlog                                                     # 系统中所有用户最近一次登录信息
lastb                                                       # 显示用户错误的登录列表
users                                                       # 打印当前登录的用户，每个用户名对应一个登录会话。如果一个用户不止一个登录会话，其用户名显示相同次数
```
#### 异常设置
**/etc/passwd**
- 若用户 ID=0,则表示该用户拥有超级用户的权限
- 检查是否有多个 ID=0
- 禁用或删除多余的账号
**/etc/login.defs**
```bash
PASS_MAX_DAYS   90              # 用户的密码最长使用天数
PASS_MIN_DAYS   0               # 两次修改密码的最小时间间隔
PASS_MIN_LEN    7               # 密码的最小长度
PASS_WARN_AGE   9               # 密码过期前多少天开始提示
```
#### 当查到异常用户时,需要立即禁用
```bash
usermod -L user     # 禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头
userdel user        # 删除user用户
userdel -r admin    # 将删除user用户，并且将/home目录下的admin目录一并删除
```
#### 安全配置
**设置账户锁定登录失败锁定次数、锁定时间**
```bash
vim /etc/pam.d/system-auth
auth required pam_tally.so onerr=fail deny=6 unlock_time=300  # 设置为密码连续输错6次,锁定时间300秒
auth required pam_tally.so deny=2 unlock_time=60 even_day_root root_unlock_time=60
```
#### 安全审计
```bash
ps -ef | grep auditd            # 查看是否开启系统安全审计功能
more /etc/audit/audit.rules     # 查看审计的规则文件
    - w 文件 -p 权限(r读 w写 x执行 a修改文件属性) -k 关键字
    - w /etc/passwd -p wa -k passwd_changes             # 对重要文件的操作行为进行监控
    - a -系列动作 -S 系统调用名称 -F 字段-值 -k 关键字
    - a exit,always -S mount -S umount                  # 对系统调用进行监控
more /etc/audit/auditd.conf     # 查看安全事件配置
ausearch -i | less              # 查看审计日志
more /var/log/audit/audit.log   # 查看审计日志
```
**audit**
linux audit 子系统是一个用于收集记录系统、内核、用户进程发生的行为事件的一种安全审计系统。该系统可以可靠地收集有关上任何与安全相关（或与安全无关）事件的信息，它可以帮助跟踪在系统上执行过的一些操作。
audit 和 syslog 有本质区别。syslog 记录的信息有限，主要目的是软件调试，对于用户的操作行为（如某用户修改删除了某文件）却无法通过这些日志文件来查看。而 audit 的目的则不同，它是 linux 安全体系的重要组成部分，是一种 “被动” 的防御体系。
```bash
yum install audit*.* -y         # 安装 audit
service auditd start            # 启动 audit
service auditd status           # 查看 audit 状态
# 开启了 autid 服务后，所有的审计日志会记录在 /var/log/audit/audit.log 文件中。
```
audit 安装后会生成 2 个配置文件:
* /etc/audit/auditd.conf
* /etc/audit/audit.rules
具体配置信息请查看 [文件](./笔记/文件.md#etc)
audit 常用命令
```bash
ausearch    # 查询 audit log 工具
aureport    # 输出 audit 系统报告
auditctl -l # 查看 audit 规则
aureport --user
aureport --file
aureport --summary
# 配置记录命令rm命令执行
auditctl -w /bin/rm -p x -k removefile
```
---
### SELinux
**关闭 SELinux**
- 需要重启
	```vim
	vim /etc/selinux/config
	SELINUX=disabled
	```
- 不需要重启