reloadicondrestartitry-restart)
---
## Page 63
第4章Shell变量知识进阶与实践45
c=上文/etc/init.d/rpcbind就是s0从脚本命令行获取的值，当用户输入不将合脚本设定的
要求时，打印脚本名字及预期的使用帮助。
3.$#特殊变量获取脚本传参个数的实践
范例4-7：通过S#获取脚本传参的个数。
[rooteoldboy 8cripts]+catq.8h
ecboS1$2$3$4$5$6s7$8$9
echoS#objs/nginx.8
[root@oldboy nginx-1.10.1]+echo s7
test-d'/application/nginx-1.10.1/1ogs'\
[rootaoldboy nginx-1.10.1]#echo S?
对于新手来说，在安装服务时，可以通过获取执行命令的返回值来确定命令的执行
---
## Page 67
第4章Shel变量如识退阶与实践
状态，从面快速确定命令是否执行成功。不过，有经验的技术人员不需要获取返回值，
通过命令的最后过程输出就可以快速判断是否成功。
范例4-12：通过获取“S？”的返回值确定网站备份是否正确。
提示：当对服务器的数据进行备份时，我们会在执行完关键命令，例如tar或cp
后，通过获取返回值来判断命令是否成功，备份数据是否完整。
[rootθoldboy-]cd/etc/
[root@oldboy etc]#tar zcf /opt/services.tar.gz./services
/tnp/a.pid$pidpath
<==将当首Shel1进程号记录到pid文件里。
sleep 300
执行结果如下：
[root@oldboy scripts]# ps -eflgrep pid.shlgrep -v grep
[root@oldboy scripts]sh pid.sh&<==后台选行广本。
[1]10617
[root@oldboy scripts]pe-efIgrep pid.ah1grep-v grep<==查看息动的脚本进程。
root
10617 10462 016:20pt8/1
00:00:008hpid.8h<==尺有一个
[rootθoldboy scripts]shpid.sh&<a=多次运行脚本，每次都会将上一次运行的杀掉。
[2] 10624
[xootθoldboy scripts]#sh pid.sh&<==多次运行脚本，每次都会将上一次选行的杀掉。
[3]10628
[1]
Terminated
ge'ptd us
[root@oldboy scripts]# ps -eflgrep pid.shlgrep -v grep
多少次脚本，都只有一个进程。
root
10628 10462 0 16:20 pts/1
00:00:00shpid.ah<==发现无论运行
[2]-Terminated
[rooteoldboy scripts]pe -eflgrep pid.shlgrep -v grep
sh pid.sh
1001
10628 10462 0 16:20 pt8/1
00:00:00shpid.sh<==发现无论运行多
少次脚本，都只有一个进程。
提示：这是一个生产案例的简单模拟，脚本用于执行启动或定时任务时，相同的脚
本中只能有一个在运行，当新脚本运行时，必须关闭未运行完或未退出的上
一次的同名脚本进程。
3.$_特殊变量功能说明及实践
S_的作用是获得上一条命令的最后一个参数值，此功能用得不多，了解即可。
范例4-17：S_参数的示例。
[rooteoldboy scripts]+/etc/init.d/rpcbind start oldboy
[rootθoldboyscripts]+echoS_<==打印上一条命令的最后-个参数值，即oldboy。