Close the valve
Table 2: Examples of Intra-app Interactions
Actions
valve.close
switch.on
Triggers
waterSensor
tempMeasure
tempMeasure
thermostat.setCooling
Its too cold
Keep me
cozy ii
Whole house fan
Smart security
tempMeasure
motionSensor
point
switch.on
alarm.both
Table 3: Physical Channels and Associated Capabilities
Channel
Temperature
Luminance
temperatureMeasurement, thermostat, switch(AC)
illuminanceMeasurement, switch(bulb), switchlevel
Capability
Motion
Humidity
Leakage
Location
Smoke
motionsensor, contactSensor, threeAxis
relativeHumidityMeasurement, switch(vent)
watersensor, valve
location, presenceSensor
carbonDioxide, smokeDetector
“Withings Manage”) or service applications (e.g., “Smart Energy
Service” and “Severe Weather Alert”) that do not contain physical
interaction information. Table 2 illustrates 5 examples of intra-app
interactions identified by our intra-app analysis, which can be de-
scribed by the general policy model presented in Section 4.1. In this
step, we finally identify 176 intra-app interactions in total.
Physical Channel Analysis: In Table 3, we list all identified
physical channels and their associated capabilities. We observe
that some capabilities, such as switch, can be related to multiple
physical channels. We classify these capabilities based on their
usage descriptions. For example, if a switch’s capability usage is
described as “Turn on a light.”, we derive that this switch is related
to the illuminance channel. Figure 6 shows the amount of extracted
intra-app interactions with respect to different physical channels.
We report the trigger-related channels (in Figure 6(a)) and action-
related channels (in Figure 6(b)), respectively.
From Figure 6, the motion channel is the most popular trigger
conditions. However, since no device has the direct movement
capability, it is also one of the least-used action capabilities. The
temperature channel is used frequently in both triggers and actions.
The luminance channel has more usage in actions, because a lot of
motion conditions trigger the action of bulbs’ switches.
Our physical channel analysis successfully connects 91.8% ap-
plications (124 out of 135 applications) to the correct channel cate-
gories. The failures mainly come from two cases. The first case is
that an application description contains no physical channel related
words. For example, the description of the application “IFTTT” says:
“Put the Internet to work for you”, which is incorrectly connected
into the location channel in our analysis because of the "Internet".
Another case is that an application description contains mislead-
ing words. For instance, in the application “coffee after shower”,
our method classifies this application into the humidity category
because of the high similarity between “shower” and “humidity”.
(a) Trigger-related Channel Analysis
(b) Action-related Channel Analysis
Figure 6: Physical Channels used in Intra-app Interaction
Flows
5.2 Interaction Chain Discovery
Among 135 SmartThings applications, we observe that most of
them have the capability to interact with the physical world. We
generate all inter-app interaction chains following the Algorithm 1.
According to Figure 6, the temperature is the most commonly used
inter-mediate physical channel, which is involved in 570 inter-app
interaction chains. However, most of these inter-app interaction
chains are duplicated and the number of unique temperature-related
chains is 25. After removing all duplicates, we generate 162 inter-
app interaction chains in total.
Figure 7: An Example of Inter-app Interaction Chain
Figure 7 shows an example of such interaction chains. The timer
in thermostat control application triggers the action of a thermostat,
Session 5A: CyberphysicalCCS’18, October 15-19, 2018, Toronto, ON, Canada839Trigger1
Capability
locationMode
locationMode
time
time
time
switch
time
time
presenceSensor
No.
1
2
3
4
5
6
7
8
9
10
Action1
Capability
switch
switch
locationMode
thermostat
switch
thermostat
switch
locationMode
locationMode
switch
Table 4: Top 10 High-Risk Interaction Chains
Potential
Device
heater
Trigger2
Capability
Channel
feeder, curtain, fan
multiple devices
thermostat
heater
thermostat
toaster
multiple devices
multiple devices
smoke
motion
system
temperature
temperature
temperature
smoke
system
system
carbonMonoxide
motionSensor
locationMode
tempMeasure
tempMeasure
tempMeasure
carbonMonoxide
locationMode
locationMode
illuminMeasure
Action2
Capability
locationMode
locationMode
lock
switch
locationMode
locationMode
locationMode
switch
switch
switch
Potential
Device
alarm(window, lock)
bulb, window
lock
window, vent
multiple devices
alarm(window, lock)
alarm(window, lock)
heater
bulb
bulb, heater
Risk
Score
70.75
64.81
62.92
62.75
60.01
48.74
45.21
40.83
40.50
35.06
watersensor
bulb
illuminance
Table 5: Channel Similarity and Initialization
Channel
Assigned
Level
Type
Distance
Value
Target
Channel
Temperature
Humidity
Presence
Illuminance
Motion
Leakage
Smoke
Time
Switch
Lock
locationMode
Physical
System
0
1
2
3
4
5
6
NA
NA
NA
NA
15
30
45
60
75
90
105
105
120
150
330
which triggers a switch in temperature control application since
they share the same temperature channel. We present the complete
results of our interaction chain discovery in Appendix B.
5.3 Risk Analysis
5.3.1 Channel Value Setting. We use the intra-app interactions
extracted from official applications in the SmartThings platform
as the baseline for risk evaluation. We use vectors to represent
interaction behaviors where each vector consists of all available
physical and system channels, as described in Section 4.4.1. To
quantify interaction behaviors, we first assign values to different
channels and subsequently initialize vector values. Table 5 shows
the assigned values to different channels in our evaluation. We set
the temperature as the beginning channel and set its value to 10, be-
cause overall it is the most frequently used channel in applications.
For the shared system variables, we also list their values in this
table. The value of a system variable is set as the sum of values of
all associated channels. For example, the time channel is associated
with the temperature, humidity, and illuminance channels, and is
assigned 105.
5.3.2 High-risk Interaction Chain. We measure the risk score of a
discovered inter-app interaction chain by comparing the distance
Table 6: Risk Evaluation Result Assessment
Initialization
Method
Our Method
Random Inil Method
Total
Interaction
Total Risky
Interaction
True
Positive
162
162
48
79
37
27
Positive
Rate (%)
77
34
between it and the baseline. Our risk calculation method identifies
48 risky interaction chains, and we examine our results manually
and find 37 of them (77%) are truly risky, which create new and po-
tential interactions that are not observed in the baseline (all 37 risky
interaction chains are listed in Appendix C). To demonstrate the
effectiveness of our value assignment, we also run an experiment
10 times with randomly initialized channel values. The random
initialization method identifies more risky interaction chains. How-
ever, the amount of true positive risky interactions drops to 27 with
a low positive rate of 34%.
The false positive results of our method mainly come from in-
sufficient descriptions to the usage “switch” capability in applica-
tions. Since many devices can be connected to the switch capability,
lacking such description can lead to over-connection, which cre-
ates non-existing and unpractical inter-app interactions. On the
contrary, if the switch capability has an explicit explanation, our
method could effectively evaluate its physical effect and connect
them to the proper channel.
We list the top 10 high-risk interaction chains in Table 4. All the
chains access indirect control of other devices through physical
or system channels. Seven of them are new inter-app interactions,
which create potential interaction chains through physical channels,
i.e., the 1st, 2nd, 4th - 7th, and 10th interaction chains. The remain-
ing three create new interaction chains through system channels.
Intuitively, if the first action and the second action are different in
an interaction chain, it tends to have a higher risk score.
The 1st risky interaction chain links the location and lock through
the smoke channel. There is no such direct interaction in the cur-
rent official applications. We assume the switch is connected with
a heater, which is able to generate smoke in a certain situation. If
a heater is exploited to trigger the smoke alarm, it subsequently
results in the action of windows opening and door unlocking. The
2nd risky interaction chain creates the new interaction from time
to locationMode through the motion channel. The motionSensor
can change the locationMode through the security monitor func-
tion. The time-scheduled motion should not trigger the change of
locationMode. The 3rd chain is only based on the system variables,
Session 5A: CyberphysicalCCS’18, October 15-19, 2018, Toronto, ON, Canada840Figure 8: Two benign applications trigger an unexpected ac-
tion through a physical channel.
Figure 10: A malicious application triggers an inter-app in-
teraction of two benign applications.
Figure 9: Logs on the SmartThings Platform in Scenario I
Figure 11: Logs on the SmartThings Platform in Scenario II
time and locationMode. Since the locationMode is a common com-
ponent shared by all applications, the change of its status would
trigger actions from multiple devices. The status of these devices
may influence the status of locationMode in return. Hence, the time
may trigger the unexpected changes to the home mode. The 4th
chain unexpectedly triggers the switch’s action via the temperature
channel. The 5th chain is similar to the 2nd chain, where time can
change the locationMode through the temperature channel. The
6th chain represents the situation that a switch is able to trigger a
temperature alarm by utilizing a thermostat to influence the tem-
perature channel. The 7th chain is triggered by a presence sensor
that connects the toaster to the locationMode through the smoke
channel, which can be used to trigger an alarm and subsequent
actions of related devices, such as windows and locks. The 8th and
9th risky interaction chains are triggered by time channel. They are
also able to trigger unexpected changes to the home mode. The 10th
chain creates interactions between a water leakage and a switch
through the illuminance channel. Since the switch can be connected
to the bulb to send a leakage warning, and subsequently trigger
actions of illuminance-related devices.
5.3.3 User Scenario. To demonstrate the real effect of potential
inter-app interactions, we create two real-world scenarios based
on our identified risky interaction chains.
Scenario I: Figure 8 shows a scenario where two benign ap-
plications (a heater control application and a temperature alarm
application) share a temperature channel. Assume we use the tem-
perature alarm application to monitor the temperature of an infant
room. Once the heater control application turns on the heater, it
leads to temperature raising. The increased temperature triggers
the temperature alarm application to open the window, which may
cause infant safety issues in this scenario.
Figure 9 shows the real logs on the SmartThings platform after
the window control application has been triggered to open the
window by a temperature raising event, which is caused by turning
on a heater’s switch for around 35 minutes.
Scenario II: As shown in Figure 10, the whole interaction struc-
ture in this scenario includes a malicious application (a device
monitor application) and two benign applications (a home mode
control application and a fire alarm application). The home mode
control application changes the status of thermostats and toasters
based on its mode status. The fire alarm application can unlock
the door when any smoke is detected. The attacker uses the device
monitor application, which is a third-party malicious application,
and can pretend as a benign device status monitor to communicate
with other applications stealthily.
The red arrows in Figure 10 illustrate the inter-app interactions,