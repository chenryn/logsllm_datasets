certiﬁcates in Table XII and the most common certiﬁcates
shipped with devices in Table XIII. Because each of these
devices uses the same certiﬁcate and key, an adversary could
extract the private key from any device to Man-in-the-Middle
other connections.
X. DISCUSSION
The kinds of vulnerabilities we highlight in this paper are
not new. Password-less login vulnerabilities, WaReZ shufﬂing,
and port bouncing have been exploited for practically the life
of FTP. Yet we found that a large number of servers are still
vulnerable to these problems, and they continue to be actively
exploited by malicious actors. Part of the reason for this may
TABLE XII.
TOP 10 MOST COMMON FTPS CERTIFICATES
Certiﬁcate CN
# Servers
Browser-trusted?
*.opentransfer.com
*.securesites.com
*.home.pl
*.bluehost.com
localhost
ftp.Serv-U.com
*.bizmw.com
*.turnkeywebspace.com
ispgateway.de
*.sakura.ne.jp
193,392
134,891
125,197
59,979
47,887
26,209
26,172
22,075
19,355
17,495
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No – self-signed
No – self-signed
No – self-signed
TABLE XIII.
DEVICES THAT SHARE FTPS CERTIFICATES
Device
# Found
QNAP NAS (#1)
ZyXEL Unk
Buffalo NAS
LGE NAS
Axentra HipServ
RhinoSoft
Symon Media Player
QNAP NAS (#2)
AsusTor NAS
11,236
8,402
7,365
6,220
2,965
1,835
606
615
367
be inattention. While security researchers are focused on more
modern and widespread protocols, such as HTTPS and Bitcoin,
older and more basic protocols such as FTP have not gone
away and have not become any more secure.
As we described in Section V, consumer devices with
embedded FTP servers appear to be compounding the problem.
Users seeking remote access to their data may expose FTP
on public IP addresses without understanding the security
consequences. Worse, at least some devices have confusingly
named options for enabling anonymous FTP, and others
appear to come with it enabled by default. We urge device
manufacturers to re-examine their defaults, user interfaces, and
documentation in order to effectively inform users that these
conﬁgurations will provide global public access to their data.
While usable security is difﬁcult to achieve, research has shown
that well designed notiﬁcations can improve users’ adherence
to browser security warnings [25], and consumer server devices
may beneﬁt by following a similar strategy. As the Internet
of Things continues to expand and the move towards IPv6
continues— increasing the number of world-addressable devices
a consumer owns—this will likely become a growing problem.
Some of the most difﬁcult cases to make sense of are devices
that come with anonymous FTP enabled by default. It seems
that either these manufacturers do not understand the dangers
associated with data exposure from anonymous FTP or they
are acting with reckless disregard for their customers’ security
and privacy. Either way, an effective remedy may be to create
stronger incentives for manufacturers of consumer devices to
take security seriously. This may be an ideal instance for an
external organization such as a “CyberUL” to provide a quality
certiﬁcation that a particular device provides at least a minimal
amount of security protections to the end-consumer [16]. While
creating a comprehensive suite of security tests is still an open
research problem, it would be easy to test for well known and
often exploited vulnerabilities such as anonymous logins and
port bouncing.
511
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:25 UTC from IEEE Xplore.  Restrictions apply. 
XI. RELATED WORK
FTP has been largely ignored by the security measurement
community and, to the best of our knowledge, this study is the
ﬁrst that focuses on how anonymous FTP has been deployed in
practice. There have, however, been several recent studies that
employed Internet-wide scanning, that investigated the security
of embedded devices, or that identiﬁed how poor cross-protocol
interactions can lead to attacks similar to the ones we observed.
A large number of studies have
Internet-wide Scanning
used Internet-wide scanning to measure real-world protocol
deployment and to uncover ﬂaws in cryptographic protocols [2],
[14], [20], [21], [28], [30], [32]. However, for the most part, the
security community has studied previously topical protocols,
e.g., TLS and SSH. Similarly, there have been several recent
papers that introduced tools for performing Internet-wide scans
(e.g., ZMap [23]). We develop a new FTP enumerator but build
on existing tools, using ZMap to perform host discovery. The
work most related to FTP scanning is FTP Map, which attempts
to detect FTP vulnerabilities based on server behavior [27]. Our
goals differ signiﬁcantly as we are trying to enumerate the ﬁle
structure of FTP servers. There exists an online search engine
for FTP servers, Napalm FTP Indexer [37], which contains
ﬁles from 17K FTP servers. In comparison, our scan revealed
1.1M anonymous FTP servers.
Embedded Device Security While there is considerable
anecdotal evidence of security issues plaguing embedded
devices, there has been little systematic analysis of how these
vulnerabilities affect real-world users. Our study investigates
one protocol that has been commonly deployed by embedded
devices, but other protocols likely suffer from similar issues. In
a few recent examples, Durumeric et al. found that embedded
devices did not patch in response to the OpenSSL Heartbleed
bug [22], Heninger et al. found that embedded devices lacked
the entropy needed to generate secure cryptographic keys [30],
and Bokoski et al. found that SuperMicro devices suffered from
elementary security vulnerabilities (e.g., trivial buffer overﬂows)
and were publicly accessible [10].
Previous research has explored the risk
Launching Attacks
of devices interacting with the same resource through multiple
channels. Bojinov introduced the concept of Cross Channel
Scripting (XCS), in which an attacker injects malicious content
into web content over a secondary protocol (e.g., SMB or
FTP) [9]. Several of the malicious use cases we see (e.g., SEO
and DDoS attacks) are instances of this where FTP is being
used as the secondary communication channel.
XII. CONCLUSION
In this study, we presented a comprehensive analysis of how
anonymous FTP has been deployed in the real world. We found
that despite the protocol being largely forgotten by the research
community, there are more than 13.8M FTP servers on the IPv4
address space, of which 1.1M (8%) allow anonymous access.
Unfortunately, many anonymous FTP servers expose sensitive
data, ranging from cryptographic secrets to conﬁdential ﬁnancial
documents. We ﬁngerprinted servers hosting this data and found
that many are consumer devices (e.g., home NAS devices) that
expose data over anonymous FTP by default or fail to explain
the risks of enabling anonymous FTP. We further uncovered
evidence that nearly 20K FTP servers allow anonymous users
to write data, which malicious actors are using for malware
deployment, and click fraud, and DDoS attacks. Our study
presents a grim portrait of how FTP is deployed in 2015, but
we hope that shedding light on the issue will prompt the security
community to begin to address these vulnerabilities.
ACKNOWLEDGMENTS
The authors wish to thank Mudge Zatko for helping motivate
this analysis and providing insight into possible threats. We
thank the exceptional IT staff at the University of Michigan for
their help and support, including Chris Brenner, Kevin Cheek,
Laura Fink, Dan Maletta, Jeff Richardson, Don Winsor, Donald
Welch, and others from ITS, CAEN, and DCO. This material
is based in part upon work supported by the U.S. National
Science Foundation under grants CNS-1345254, CNS-1409505,
and CNS-1518888, by the NSF Graduate Research Fellowship
Program under grant DGE-1256260, by the Post-9/11 GI Bill,
by the Google Ph.D. Fellowship in Computer Security, and by
an Alfred P. Sloan Foundation Research Fellowship.
REFERENCES
http://www.bitwixen.com.
[1]
[2] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry, M. Green, J. A.
Halderman, N. Heninger, D. Springall, E. Thomé, L. Valenta, B. Vander-
Sloot, E. Wustrow, S. Zanella-Béguelin, and P. Zimmermann. Imperfect
forward secrecy: How Difﬁe-Hellman fails in practice. In 22nd ACM
Conference on Computer and Communications Security, Oct. 2015.
[3] M. Allman and S. Ostermann. FTP security considerations. RFC 2577,
May 1999.
[4] ASUS. WL-700gE user manual, July 2006. http://dlcdnet.asus.com/pub/
ASUS/wireless/WL-700g/WL700gE_manual_E2393_high.zip.
[5] ASUS. User guide RT-AC68R, Aug. 2013. http://dlcdnet.asus.com/pub/
ASUS/wireless/RT-AC68R/E8617_RT_AC68R_Manual_English.pdf.
[6] S. Bellovin. Firewall-Friendly FTP. RFC 1579 (Informational), Feb.
1994.
[7] A. Bhushan. File Transfer Protocol. RFC 114, Apr. 1971. Updated by
RFCs 133, 141, 171, 172.
[8] Bitmessage Wiki. https://bitmessage.org/wiki/Main_Page.
[9] H. Bojinov, E. Bursztein, and D. Boneh. XCS: Cross channel scripting
In 16th ACM Conference on
and its impact on web applications.
Computer and Communications Security, Oct. 2009.
[10] A. Bonkoski, R. Bielawski, and J. A. Halderman.
Illuminating the
security issues surrounding lights-out server management. In 8th USENIX
Workshop on Offensive Technologies, Aug. 2013.
[11] Buffalo. Buffalo Linkstation FTP setup guide. http://site2.buffalotech.
com/downloads/FTP%20Setup%20Guide.pdf.
[12] Buffalo. Linkstation 400 user manual, June 2015. http://manual.buffalo.
jp/buf-doc/35020812-02_EN.pdf.
[13] CERT. FTP Bounce. CERT Advisory CA-1997-27, Dec. 1997. https://
www.cert.org/historical/advisories/ca-1997-27.cfm.
[14] S. Checkoway, M. Fredrikson, R. Niederhagen, A. Everspaugh, M. Green,
T. Lange, T. Ristenpart, D. J. Bernstein, J. Maskiewicz, and H. Shacham.
On the practical exploitability of Dual EC in TLS implementations. In
23rd USENIX Security Symposium, Aug. 2014.
[15] CVE-2015-3306, Apr. 2015. https://cve.mitre.org/cgi-bin/cvename.cgi?
name=CVE-2015-3306.
[16] Dark Tangent. Cyberspace Underwriters Laboratories, Jan. 1999. https://
dl.packetstormsecurity.net/docs/infosec/cyberul.html.
[17] P. Deutsch, A. Emtage, and A. Marine. How to use Anonymous FTP.
RFC 1635, May 1994.
[18] DSNS network scanner. http://www.dsns.net/.
[19] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and J. A. Halderman.
In 22nd ACM
A search engine backed by Internet-wide scanning.
Conference on Computer and Communications Security, Oct. 2015.
512
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:25 UTC from IEEE Xplore.  Restrictions apply. 
[20] Z. Durumeric, D. Adrian, A. Mirian, J. Kasten, E. Bursztein,
N. Lidzborski, K. Thomas, V. Eranti, M. Bailey, and J. A. Halderman.
Neither snow nor rain nor mitm: An empirical analysis of email delivery
security. In 15th ACM Internet Measurement Conference, pages 27–39.
ACM, 2015.
[21] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman. Analysis of
the HTTPS certiﬁcate ecosystem. In 13th ACM Internet Measurement
Conference, Oct. 2013.
[22] Z. Durumeric, F. Li, J. Kasten, J. Amann, J. Beekman, M. Payer,
N. Weaver, D. Adrian, V. Paxson, M. Bailey, and J. A. Halderman. The
matter of Heartbleed. In 14th ACM Internet Measurement Conference,
Nov. 2014.
[23] Z. Durumeric, E. Wustrow, and J. A. Halderman. ZMap: Fast Internet-
wide scanning and its security applications. In 22nd USENIX Security
Symposium, Aug. 2013.
[24] Exploit4Arab. Seagate Central FTP root access. http://www.exploit4arab.
net/exploits/1530.
[25] A. P. Felt, A. Ainslie, R. W. Reeder, S. Consolvo, S. Thyagaraja,
A. Bettes, H. Harris, and J. Grimes.
Improving SSL warnings:
Comprehension and adherence. In 33rd Annual ACM Conference on
Human Factors in Computing Systems, pages 2893–2902. ACM, 2015.
[26] P. Ford-Hutchinson. Securing FTP with TLS. RFC 4217, Oct. 2005.
[27] FTP-Map. https://github.com/Hypsurus/ftpmap.
[28] O. Gasser, R. Holz, and G. Carle. A deeper understanding of SSH:
results from Internet-wide scans. In 2014 Symposium on Network and
Distributed System Security, Feb. 2014.
[29] Google.
Robots.txt speciﬁcation.
https://developers.google.com/
webmasters/control-crawl-index/docs/robots_txt.
[30] N. Heninger, Z. Durumeric, E. Wustrow, and J. A. Halderman. Mining
your Ps and Qs: Detection of widespread weak keys in network devices.
In 21st USENIX Security Symposium, Aug. 2012.
[31] A. Klein. Filezilla FTP server is vulnerable to FTP PORT bounce
attack and PASV connection theft. http://www.securitygalore.com/site3/
ﬁlezilla_ftp_server_advisory.
[32] M. Kranch and J. Bonneau. Upgrading HTTPS in mid-air: An empirical
study of strict transport security and key pinning. In 2015 Network and
Distributed System Security Symposium, Feb. 2015.
[33] LaCie. CloudBox user manual. http://manuals.lacie.com/EN/manuals/
cb/01_intro/start.
[34] Linksys. Overview of the security tool in Linksys Smart Wi-Fi. http://
www.linksys.com/us/support-article?articleNum=140559.
[35] Linksys. Quick USB storage setup guide for Linksys storage link routers.
http://www.linksys.com/eg/support-article?articleNum=142291.
[36] N. Mathewson and N. Provos. LibEvent: An event notiﬁcation library.
http://libevent.org.
[37] Napalm FTP indexer. http://www.searchftps.net/.
[38] P. Paganini. ASUS routers setting could expose users’ data on Internet.
Security Affairs, Jan. 2014. http://securityaffairs.co/wordpress/21212/
hacking/asus-routers-hack.html.
[39] Symantec. W32.Ramnit analysis, Feb. 2015. https://www.symantec.com/
content/en/us/enterprise/media/security_response/whitepapers/
w32-ramnit-analysis.pdf.
[40] Synology.
Synology NAS user’s
guide.
http://global.
download.synology.com/download/Document/UserGuide/DSM/
5.2/Syno_UsersGuide_NAServer_enu.pdf.
513
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:25 UTC from IEEE Xplore.  Restrictions apply.