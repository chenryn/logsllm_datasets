Remarks
If a string value starts with + or -, and the existing value is a REG_MULTI_SZ value, the string is added to or removed from the existing registry value. To force creation of a REG_MULTI_SZ value, add \n to the end of the string value.
+
-
REG_MULTI_SZ
REG_MULTI_SZ
\n
If the value starts with \@, the rest of the value is the name of the file containing the hexadecimal text representation of a binary value. If it doesn't refer to a valid file, it's instead parsed as [Date][+|-][dd:hh] - an optional date plus or minus optional days and hours. If both are specified, use a plus sign (+) or minus sign (-) separator. Use now+dd:hh for a date relative to the current time.
\@
[Date][+|-][dd:hh]
now+dd:hh
Use chain\chaincacheresyncfiletime \@now to effectively flush cached CRLs.
chain\chaincacheresyncfiletime \@now
-importKMS
Imports user keys and certificates into the server database for key archival.
certutil [options] -importKMS userkeyandcertfile [certID]
Where:
userkeyandcertfile is a data file with user private keys and certificates that are to be archived. This file can be:
An Exchange Key Management Server (KMS) export file.
A PFX file.
certID is a KMS export file decryption certificate match token. For more info, see the -store parameter in this article.
-store
-f imports certificates not issued by the Certificate Authority.
-f
[-f] [-silent] [-split] [-config Machine\CAName] [-p password] [-symkeyalg symmetrickeyalgorithm[,keylength]]
-importcert
Imports a certificate file into the database.
certutil [options] -importcert certfile [existingrow]
Where:
existingrow imports the certificate in place of a pending request for the same key.
-f imports certificates not issued by the Certificate Authority.
-f
[-f] [-config Machine\CAName]
Remarks
The Certificate Authority may also need to be configured to support foreign certificates. To do this, type import - certutil -setreg ca\KRAFlags +KRAF_ENABLEFOREIGN.
import - certutil -setreg ca\KRAFlags +KRAF_ENABLEFOREIGN
-getkey
Retrieves an archived private key recovery blob, generates a recovery script, or recovers archived keys.
certutil [options] -getkey searchtoken [recoverybloboutfile]
certutil [options] -getkey searchtoken script outputscriptfile
certutil [options] -getkey searchtoken retrieve | recover outputfilebasename
Where:
script generates a script to retrieve and recover keys (default behavior if multiple matching recovery candidates are found, or if the output file isn't specified).
retrieve retrieves one or more Key Recovery Blobs (default behavior if exactly one matching recovery candidate is found, and if the output file is specified). Using this option truncates any extension and appends the certificate-specific string and the .rec extension for each key recovery blob.  Each file contains a certificate chain and an associated private key, still encrypted to one or more Key Recovery Agent certificates.
recover retrieves and recovers private keys in one step (requires Key Recovery Agent certificates and private keys). Using this option truncates any extension and appends the .p12 extension.  Each file contains the recovered certificate chains and associated private keys, stored as a PFX file.
searchtoken selects the keys and certificates to be recovered, including:
recoverybloboutfile outputs a file with a certificate chain and an associated private key, still encrypted to one or more Key Recovery Agent certificates.
outputscriptfile outputs a file with a batch script to retrieve and recover private keys.
outputfilebasename outputs a file base name.
[-f] [-unicodetext] [-silent] [-config Machine\CAName] [-p password] [-protectto SAMnameandSIDlist] [-csp provider]
-recoverkey
Recover an archived private key.
certutil [options] -recoverkey recoveryblobinfile [PFXoutfile [recipientindex]]
[-f] [-user] [-silent] [-split] [-p password] [-protectto SAMnameandSIDlist] [-csp provider] [-t timeout]
-mergePFX
Merges PFX files.
certutil [options] -mergePFX PFXinfilelist PFXoutfile [extendedproperties]
Where:
PFXinfilelist is a comma-separated list of PFX input files.
PFXoutfile is the name of the PFX output file.
extendedproperties includes any extended properties.
[-f] [-user] [-split] [-p password] [-protectto SAMnameAndSIDlist] [-csp provider]
Remarks
The password specified on the command line must be a comma-separated password list.
If more than one password is specified, the last password is used for the output file. If only one password is provided or if the last password is *, the user will be prompted for the output file password.
*
-convertEPF
Converts a PFX file into an EPF file.
certutil [options] -convertEPF PFXinfilelist PFXoutfile [cast | cast-] [V3CAcertID][,salt]
Where:
PFXinfilelist is a comma-separated list of PFX input files.
PFXoutfile is the name of the PFX output file.
EPF is the name of the EPF output file.
cast uses CAST 64 encryption.
cast- uses CAST 64 encryption (export)
V3CAcertID is the V3 CA certificate match token. For more info, see the -store parameter in this article.
-store
salt is the EPF output file salt string.
[-f] [-silent] [-split] [-dc DCName] [-p password] [-csp provider]
Remarks
The password specified on the command line must be a comma-separated password list.
If more than one password is specified, the last password is used for the output file. If only one password is provided or if the last password is *, the user will be prompted for the output file password.
*
-?
Displays the list of parameters.
certutil -?
certutil  -?
certutil -? -v
Where:
-? displays the full list of parameters
- -? displays help content for the specified parameter.
-? -v displays a full list of parameters and options.
-syncWithWU
Syncs with Windows Update. The following files are downloaded by using the automatic update
mechanism.
CertUtil [Options] -syncWithWU DestinationDir
Where:
[-f] [-Unicode] [-gmt] [-seconds] [-v] [-privatekey] [-pin PIN] [-sid WELL_KNOWN_SID_TYPE]
Where:
Remarks
The following files are downloaded by using the automatic update mechanism:
authrootstl.cab
disallowedcertstl.cab
disallowedcert.sst
thumbprint.crt
For example, CertUtil -syncWithWU \\server1\PKI\CTLs.
CertUtil -syncWithWU \\server1\PKI\CTLs
If you use a non-existent local path or folder as the destination folder, you'll see the error:
The system can't find the file specified. 0x80070002 (WIN32: 2 ERROR_FILE_NOT_FOUND)
The system can't find the file specified. 0x80070002 (WIN32: 2 ERROR_FILE_NOT_FOUND)
If you use a non-existent or unavailable network location as the destination folder, you'll see the error:
The network name can't be found. 0x80070043 (WIN32: 67 ERROR_BAD_NET_NAME)
The network name can't be found. 0x80070043 (WIN32: 67 ERROR_BAD_NET_NAME)
If your server can't connect over TCP port 80 to Microsoft Automatic Update servers, you'll receive the following error:
A connection with the server couldn't be established 0x80072efd (INet: 12029 ERROR_INTERNET_CANNOT_CONNECT)
A connection with the server couldn't be established 0x80072efd (INet: 12029 ERROR_INTERNET_CANNOT_CONNECT)
If your server is unable to reach the Microsoft Automatic Update servers with the DNS name ctldl.windowsupdate.com, you'll receive the following error:
ctldl.windowsupdate.com
The server name or address couldn't be resolved 0x80072ee7 (INet: 12007 ERROR_INTERNET_NAME_NOT_RESOLVED).
The server name or address couldn't be resolved 0x80072ee7 (INet: 12007 ERROR_INTERNET_NAME_NOT_RESOLVED).
If you don't use the -f switch, and any of the CTL files already exist in the directory, you'll receive a file exists error:
-f
CertUtil: -syncWithWU command FAILED: 0x800700b7 (WIN32/HTTP: 183 ERROR_ALREADY_EXISTS) Certutil: Can't create a file when that file already exists.
CertUtil: -syncWithWU command FAILED: 0x800700b7 (WIN32/HTTP: 183 ERROR_ALREADY_EXISTS) Certutil: Can't create a file when that file already exists.
If there's a change in the trusted root certificates, you'll see:
Warning! Encountered the following no longer trusted roots: \.crt. Use "-f -f" options to force the delete of the above ".crt" files. Was "authrootstl.cab" updated? If yes, consider deferring the delete until all clients have been updated.
Warning! Encountered the following no longer trusted roots: \.crt. Use "-f -f" options to force the delete of the above ".crt" files. Was "authrootstl.cab" updated? If yes, consider deferring the delete until all clients have been updated.
-generateSSTFromWU SSTFile
Generates SST by using the automatic update mechanism.
CertUtil [Options] -generateSSTFromWU SSTFile
Where:
.sst
[-f] [-Unicode] [-gmt] [-seconds] [-v] [-privatekey] [-pin PIN] [-sid WELL_KNOWN_SID_TYPE]
Where:
Remarks
.sst
Options
This section defines all of the options you're able to specify, based on the command. Each parameter includes information about which options are valid for use.
Options
Description
-nullsign
Use the hash of the data as a signature.
-f
Force overwrite.
-enterprise
Use the local machine enterprise registry certificate store.
-user
Use the HKEY_CURRENT_USER keys or certificate store.
-GroupPolicy
Use the group policy certificate store.
-ut
Display user templates.
-mt
Display machine templates.
-Unicode
Write redirected output in Unicode.
-UnicodeText
Write output file in Unicode.
-gmt
Display times using GMT.
-seconds
Display times using seconds and milliseconds.
-silent
Use the silent flag to acquire crypt context.
-split
Split embedded ASN.1 elements, and save to files.
-v
Provide more detailed (verbose) information.
-privatekey
Display password and private key data.
-pin PIN
Smart card PIN.
-urlfetch
Retrieve and verify AIA Certs and CDP CRLs.
-config Machine\CAName
Certificate Authority and computer name string.
-policyserver URLorID
Policy Server URL or ID. For selection U/I, use -policyserver. For all Policy Servers, use -policyserver *
-anonymous
Use anonymous SSL credentials.
-kerberos
Use Kerberos SSL credentials.
-clientcertificate clientcertID
Use X.509 Certificate SSL credentials. For selection U/I, use -clientcertificate.
-username username
Use named account for SSL credentials. For selection U/I, use -username.
-cert certID
Signing certificate.
-dc DCName
Target a specific Domain Controller.
-restrict restrictionlist
Comma-separated Restriction List. Each restriction consists of a column name, a relational operator and a constant integer, string or date. One column name may be preceded by a plus or minus sign to indicate the sort order. For example: requestID = 47, +requestername >= a, requestername, or -requestername > DOMAIN, Disposition = 21
-out columnlist
Comma-separated column list.
-p password
Password
-protectto SAMnameandSIDlist
Comma-separated SAM name/SID list.
-csp provider
Provider
-t timeout
URL fetch timeout in milliseconds.
-symkeyalg symmetrickeyalgorithm[,keylength]
Name of the Symmetric Key Algorithm with optional key length. For example: AES,128 or 3DES
-syncWithWU DestinationDir
Sync with Windows Update.
-generateSSTFromWU SSTFile
Generate SST by using the automatic update mechanism.
silent
-policyserver
-policyserver *
-clientcertificate
-username
requestID = 47
+requestername >= a, requestername
-requestername > DOMAIN, Disposition = 21
AES,128
3DES