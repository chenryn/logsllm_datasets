 from_collapse_limit
 与join_collapse_limit功能类似, 只是他针对的是子查询, 例如
 SELECT * FROM x, y, (SELECT * FROM a, b, c WHERE something) AS ss
WHERE somethingelse;
 会把x,y,a,b,c放在一个列表中进行JOIN顺序的排列组合.前提是这个列表小于
from_collapse_limit
 geqo_threshold -- 不值得推荐,因为会产生不可预估的执行计划, 随机产生. 虽然对复杂查
询可以降低执行计划的时间.
Performance Tips
 举例 : JOIN Tuning
Performance Tips
 数据迁移性能相关
 关闭autocommit
 使用COPY
 移除索引
 移除Foreign Key 约束
 加大maintenance_work_mem可以提高建索引速度
 加大checkpoint_segments , checkpoint_timeout
 Disable WAL Archival and Streaming Replication
To do that, set archive_mode to off, wal_level to minimal, and max_wal_senders to
zero before loading the dump. 数据导入完成后开启, standby需要重新从基础备份
做.
 关闭autovacuum, 数据导入后运行analyze.
 COPY commands will run fastest if you use a single transaction and have WAL
archiving turned off.
 使用pg_restore的并行参数
Day 2
Day 2
 PostgreSQL Client Applications  Monitoring Database Activity
 PostgreSQL Server Applications  Procedure Language and Debug
 Database Physical Storage  PostgreSQL Distinguishing Feature
 Server Administration  Additional Supplied Modules
 Database Layout  Database Performance Tuning Short Case
 Reliability
 Server Configuration
 Routine Database Maintenance
Tasks
 Backup and Restore
 HA and Replication
 Stream Replication
 Cascade Stream Replication
 PostgreSQL-XC , PL/Proxy , pgpool
PostgreSQL Client
Applications
 clusterdb -- clusterdb is a utility for reclustering tables in a PostgreSQL database. It finds tables
that have previously been clustered, and clusters them again on the same index that was last
used. Tables that have never been clustered are not affected.
 clusterdb [connection-option...] [--verbose | -v] [--table | -t table ] [dbname]
 clusterdb [connection-option...] [--verbose | -v] [--all | -a]
 createdb -- create a new PostgreSQL database
 createdb [connection-option...] [option...] [dbname] [description]
 createlang -- install a PostgreSQL procedural language
 createlang [connection-option...] langname [dbname]
 createlang [connection-option...] --list | -l dbname
 createuser -- define a new PostgreSQL user account
 createuser [connection-option...] [option...] [username]
PostgreSQL Client
Applications
 dropdb -- remove a PostgreSQL database
 dropdb [connection-option...] [option...] dbname
 droplang -- remove a PostgreSQL procedural language
 droplang [connection-option...] langname [dbname]
 droplang [connection-option...] --list | -l dbname
 dropuser -- remove a PostgreSQL user account
 dropuser [connection-option...] [option...] [username]
 ecpg -- embedded SQL C preprocessor
 ecpg [option...] file...
 pg_basebackup -- take a base backup of a PostgreSQL cluster
 pg_basebackup [option...]
PostgreSQL Client
Applications
 pg_config -- retrieve information about the installed version of PostgreSQL
 pg_config [option...]
 pg_dump -- extract a PostgreSQL database into a script file or other archive file
 pg_dump [connection-option...] [option...] [dbname]
 pg_dumpall -- extract a PostgreSQL database cluster into a script file
 pg_dumpall [connection-option...] [option...]
 pg_restore -- restore a PostgreSQL database from an archive file created by pg_dump
 pg_restore [connection-option...] [option...] [filename]
 psql -- PostgreSQL interactive terminal
 psql [option...] [dbname [username]]
PostgreSQL Client
Applications
 reindexdb -- reindex a PostgreSQL database
 reindexdb [connection-option...] [--table | -t table ] [--index | -i index ] [dbname]
 reindexdb [connection-option...] [--all | -a]
 reindexdb [connection-option...] [--system | -s] [dbname]
 vacuumdb -- garbage-collect and analyze a PostgreSQL database
 vacuumdb [connection-option...] [--full | -f] [--freeze | -F] [--verbose | -v] [--analyze | -z] [--
analyze-only | -Z] [--table | -t table [( column [,...] )] ] [dbname]
 vacuumdb [connection-option...] [--full | -f] [--freeze | -F] [--verbose | -v] [--analyze | -z] [--
analyze-only | -Z] [--all | -a]
PostgreSQL Server
Applications
 initdb -- create a new PostgreSQL database cluster
 initdb [option...] --pgdata | -D directory
 pg_controldata -- display control information of a PostgreSQL database cluster
 pg_controldata [option] [datadir]
 pg_ctl -- initialize, start, stop, or control a PostgreSQL server
 pg_ctl init[db] [-s] [-D datadir] [-o initdb-options]
 pg_ctl start [-w] [-t seconds] [-s] [-D datadir] [-l filename] [-o options] [-p path] [-c]
 pg_ctl stop [-W] [-t seconds] [-s] [-D datadir] [-m s[mart] | f[ast] | i[mmediate] ]
 pg_ctl restart [-w] [-t seconds] [-s] [-D datadir] [-c] [-m s[mart] | f[ast] | i[mmediate] ] [-o
options]
 pg_ctl reload [-s] [-D datadir]
 pg_ctl status [-D datadir]
 pg_ctl promote [-s] [-D datadir]
PostgreSQL Server
Applications
 pg_ctl kill signal_name process_id
 pg_ctl register [-N servicename] [-U username] [-P password] [-D datadir] [-S a[uto] |
d[emand] ] [-w] [-t seconds] [-s] [-o options]
 pg_ctl unregister [-N servicename]
 pg_resetxlog -- reset the write-ahead log and other control information of a PostgreSQL
database cluster
 pg_resetxlog [-f] [-n] [-ooid ] [-x xid ] [-e xid_epoch ] [-m mxid ] [-O mxoff ] [-l
timelineid,fileid,seg ] datadir
 postgres -- PostgreSQL database server. postgres is the PostgreSQL database server. In order
for a client application to access a database it connects (over a network or locally) to a running
postgres instance. The postgres instance then starts a separate server process to handle the
connection.
 postgres [option...]
PostgreSQL Server
Applications
 postmaster -- PostgreSQL database server. postmaster is a deprecated alias of postgres.
 postmaster [option...]
 例子
 控制文件
 src/bin/pg_controldata/pg_controldata.c
PostgreSQL Server
Applications
 控制文件信息举例
PostgreSQL Server
Applications
 单用户模式启动postgres
 当系统遭遇如下错误时必须进入单用户模式修复数据库
 ERROR: database is not accepting commands to avoid wraparound data loss in
database "mydb"
 HINT: Stop the postmaster and use a standalone backend to VACUUM in "mydb".
 为什么会遭遇这个错误?
 数据库中任何带relfrozenxid标记的记录,年龄不能超过2^31(二十亿);当数据库中存
在年龄大于{(2^31)-1千万}的记录时,数据库将报类似如下提示:
 WARNING: database "mydb" must be vacuumed within 177009986 transactions
HINT: To avoid a database shutdown, execute a database-wide VACUUM in
"mydb".
 如果忽略上面的警告,当数据库中存在年龄大于{(2^31)-1百万}的记录时,数据库将报
类似如下错误:
 ERROR: database is not accepting commands to avoid wraparound data loss in
database "mydb"
HINT: Stop the postmaster and use a standalone backend to VACUUM in "mydb".
PostgreSQL Server
Applications
 PostgreSQL single-user mode usage,like Repair Database
 http://blog.163.com/digoal@126/blog/static/163877040201011152042497/
 bootstrapping模式启动postgres
 initdb 调用的就是bootstrapping模式, bootstrapping模式下的语法与普通模式下的语法也打
不一样, 使用的是BKI接口. 例如initdb调用的$PGHOME/share/ postgres.bki.
 postgres.bki文件结构
 create bootstrap one of the critical tables
 insert data describing at least the critical tables
 close
 Repeat for the other critical tables.
 create (without bootstrap) a noncritical table
 open
 insert desired data
 close
 Repeat for the other noncritical tables.
 Define indexes and toast tables.
 build indices
PostgreSQL Server
Applications
 BKI commands
 略
 http://www.postgresql.org/docs/9.1/static/bki-commands.html
 我的数据"消失"了?
 Use pg_resetxlog simulate tuple disappear within PostgreSQL
 http://blog.163.com/digoal@126/blog/static/163877040201183043153622/
Database Physical Storage
 $PGDATA
Database Physical Storage
 base目录
 对应pg_default表空间, 如果新建的数据库没有指定默认表空间, 那么新建的数据库
的默认表空间由参数#default_tablespace决定, 没配置的话就是pg_default表空间,
因此在这个数据库创建的对象未指定表空间的话都会创建在base目录下的数据库目
录中.
Database Physical Storage
 base目录
 查看当前的数据库对应的默认表空间
 查看当前系统中的表空间
Database Physical Storage
 base目录
 查看数据库的oid
 数据库的oid为目录名, 用默认表空间pg_default的数据库的目录建在
$PGDATA/base下面
 默认表空间不是pg_default的, 数据库目录建在数据库创建时的默认表空间内.
Database Physical Storage
 base目录
 以下图中表示production, template1, test, devel, marketing 库存放在base目录中的
目录名.
Database Physical Storage
 global目录
 对应的是pg_global表空间
 这里存放的是PostgreSQL 集群的数据对象信息, 如pg_database, pg_roles 等
 pg_clog目录
 存放数据库事务提交状态数据
 pg_notify目录
 存放NOTIFY/LISTEN状态数据
 pg_multixact目录
 存放select for share的事务状态数据, 用于共享行锁.
Database Physical Storage
 pg_serial目录
 PostgreSQL 9.1带来的serializable 隔离级别, 里面存储已提交的serializable事务的
状态信息.
 pg_stat_tmp目录
 收集统计信息如果产生临时文件将存放于此
 pg_subtrans目录
 存放子事务状态数据信息
 pg_tblspc目录
 存放新建的表空间的软链接信息
 pg_twophase目录
 存放twophase事务的状态信息
 pg_xlog目录或软链接(如果initdb时指定了pg_xlog的位置)
 存放WAL日志文件
 PG_VERSION文件
 PostgreSQL的主版本号. 如9.1
Database Physical Storage
 pg_hba.conf文件
 客户端认证配置文件
 pg_ident.conf文件
 和pg_hba.conf结合使用, 存储操作系统用户和连接时使用的数据库用户的map用户
信息, mapname将用于pg_hba.conf 的ident认证方法.
 # MAPNAME SYSTEM-USERNAME PG-USERNAME
 postgresql.conf文件
 数据库配置文件
 postmaster.opts文件
 最近一次数据库启动的时候创建的文件, 存储数据库启动时postgres的命令行选项参
数等
 postmaster.pid文件
 存储数据库当前运行的postmaster.pid, 数据库集群目录位置, postmaster进程启动
时间, 监听的端口号, Unix-socket 目录, 监听地址, 共享内存段信息
Database Physical Storage
 Authenticate
 pg_hba.conf
 pg_shadow
PostgreSQL
Connection Limit
Auth Method
(Trust,
Password,
Listene
Ident,
Which
LDAP…)
PG_HBA Address
Roles
TYPE DATABASE USER CIDR-ADDRESS METHOD
Database Physical Storage
 数据对象文件
 主数据文件 , 通过pg_class.relfilenode或pg_relation_filenode()函数查看. 超过1GB
或编译PostgreSQL时设置的 --with-segsize大小后, 会以相同的文件名加.1, ... 后缀
新增文件.
 每个表或索引都会有free space map, 记录page的空闲信息. 可通过pageinspect插件
查看.
 每个表或索引都会有visibility map,记录没有dead tuple的page信息. 可通过
pageinspect插件查看.
 unlogged table and index also have _init suffix as initialiaztion fork.可通过
pageinspect插件查看.
 TOAST表, pg_class.reltoastrelid.
TOAST,The Oversized-Attribute Storage Technique
http://blog.163.com/digoal@126/blog/static/163877040201122910531988/