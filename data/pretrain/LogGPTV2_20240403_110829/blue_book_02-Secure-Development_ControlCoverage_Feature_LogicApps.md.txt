## Important Notice: DevOps Kit (AzSK) Sunset
Please be advised that the DevOps Kit (AzSK) will be discontinued by the end of FY21. For more information, please refer to the [AzSK Sunset Notice](../../../ReleaseNotes/AzSKSunsetNotice.md).

---

### Logic Apps Security Controls and Rationale

| **Control** | **Description & Rationale** | **Severity** | **Automated Fix Script Available?** |
|-------------|-----------------------------|--------------|-------------------------------------|
| **Multiple Logic Apps in the Same Resource Group** | Multiple Logic Apps should not be deployed in the same resource group unless they trust each other. API Connections contain critical information such as credentials and secrets. Since a Logic App can use all API Connections within the same Resource Group, the Resource Group should be treated as a security boundary during threat modeling. | **High** | **Yes** |
| **Minimum Required Permissions for Logic App Connectors** | Logic App connectors must have only the minimum required permissions on the data source. This ensures that connectors are used only for their intended actions within the Logic App. | **Medium** | **No** |
| **Role-Based Access Control (RBAC)** | All users and identities must be granted the minimum required permissions using RBAC. Granting the least privilege minimizes the exposure of resources in case of user or service account compromise. | **Medium** | **Yes** |
| **IP Ranges for HTTP Triggers** | If a Logic App is triggered by an HTTP request (e.g., Request or Webhook), specify IP ranges to prevent unauthorized access. This restricts triggers to a limited set of endpoints. | **High** | **Yes** |
| **IP Ranges for Content Access** | Specify IP ranges to prevent unauthorized access to the inputs/outputs data of Logic App run history. Using the firewall feature restricts access to specific clients, providing an additional layer of protection for critical assets. | **High** | **Yes** |
| **Application Secrets and Credentials** | Application secrets and credentials must not be stored in plain text in the source code (code view) of a Logic App. Storing them in a key vault ensures they are protected at rest, reducing the risk of compromise. | **High** | **Yes** |
| **Periodic Key Rotation** | Logic App access keys must be rotated periodically. Regular key rotation is a best practice that minimizes the risk of data loss or compromise due to key theft, brute forcing, or recovery attacks. | **Medium** | **No** |
| **Diagnostics Logs Retention** | Diagnostics logs must be enabled with a retention period of at least 365 days. Long-term log retention is essential for incident investigation and compliance requirements. | **Medium** | **Yes** |
| **Periodic Backup of Logic App Code View** | The Logic App code view, which contains the application's workflow logic and API connection details, should be backed up periodically. No built-in backup or disaster recovery feature is available in Logic Apps. | **Medium** | **No** |

This table outlines the recommended security controls for Logic Apps, along with their rationale, severity, and whether an automated fix script is available. Implementing these controls will help ensure the security and integrity of your Logic Apps.