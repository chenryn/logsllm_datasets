    `041cf115 4154            push    r12
    `041cf117 4155            push    r13
    `041cf119 4156            push    r14
    `041cf11b 4157            push    r15
    `041cf11d 4881ecb8000000  sub     rsp,0B8h
    `041cf124 4d8be9          mov     r13,r9
    `041cf127 488bf2          mov     rsi,rdx
    `041cf12a 488bd9          mov     rbx,rcx
    `041cf12d 4d8bf9          mov     r15,r9
    `041cf130 49c1ef38        shr     r15,38h
    `041cf134 44887c2430      mov     byte ptr [rsp+30h],r15b
    `041cf139 48b8ffffffffffffff00 mov rax,0FFFFFFFFFFFFFFh
    `041cf143 4c23e8          and     r13,rax
    `041cf146 4c89ac2408010000 mov     qword ptr [rsp+108h],r13
    `041cf14e 4180ff40        cmp     r15b,40h
    `041cf152 0f8764060400    ja      nt! ?? ::NNGAKEGL::`string'+0x7020 (`0420f7bc)
    `041cf158 4b8d446d00      lea     rax,[r13+r13*2]
    `041cf15d 4889442460      mov     qword ptr [rsp+60h],rax
    `041cf162 65488b042588010000 mov   rax,qword ptr gs:[188h]
    `041cf16b 488b4870        mov     rcx,qword ptr [rax+70h]
    `041cf16f 4c8bb138030000  mov     r14,qword ptr [rcx+338h]
    `041cf176 4c89742458      mov     qword ptr [rsp+58h],r14
    `041cf17b 4885db          test    rbx,rbx
    `041cf17e 0f848b010000    je      nt!RtlCreateUserStack+0x20b (`041cf30f)
    `041cf184 4885d2          test    rdx,rdx
    `041cf187 0f8482010000    je      nt!RtlCreateUserStack+0x20b (`041cf30f)
    `041cf18d b800400000      mov     eax,4000h
    `041cf192 4885db          test    rbx,rbx
    `041cf195 480f44d8        cmove   rbx,rax
    `041cf199 483bde          cmp     rbx,rsi
    `041cf19c 0f832c060400    jae     nt! ?? ::NNGAKEGL::`string'+0x7032 (`0420f7ce)
    `0420f7ce 488db3ffff0f00  lea     rsi,[rbx+0FFFFFh]
    `0420f7d5 4881e60000f0ff  and     rsi,0FFFFFFFFFFF00000h
    `0420f7dc e9c1f9fbff      jmp     nt!RtlCreateUserStack+0x9e (`041cf1a2)
    `041cf1a2 498d4dff        lea     rcx,[r13-1]
    `041cf1a6 48f7d1          not     rcx
    `041cf1a9 4e8d642bff      lea     r12,[rbx+r13-1]
    `041cf1ae 4c23e1          and     r12,rcx
    `041cf1b1 4881c6ffff0000  add     rsi,0FFFFh
    `041cf1b8 4881e60000ffff  and     rsi,0FFFFFFFFFFFF0000h
    `041cf1bf 498b8618030000  mov     rax,qword ptr [r14+318h]
    `041cf1c6 48898424a0000000 mov     qword ptr [rsp+0A0h],rax
    `041cf1ce eb05            jmp     nt!RtlCreateUserStack+0xd1 (`041cf1d5)
    `041cf1d5 4885c0          test    rax,rax
    `041cf1d8 0f8503060400    jne     nt! ?? ::NNGAKEGL::`string'+0x7045 (`0420f7e1)
    `041cf1de 410fb6c7        movzx   eax,r15b
    `041cf1e2 89442478        mov     dword ptr [rsp+78h],eax
    `041cf1e6 8364247c00      and     dword ptr [rsp+7Ch],0
    `041cf1eb 83a4248400000000 and     dword ptr [rsp+84h],0
    `041cf1f3 83a4248000000000 and     dword ptr [rsp+80h],0
    `041cf1fb 4889b42488000000 mov     qword ptr [rsp+88h],rsi ; assign-> RegionSize
    `041cf203 4c89842490000000 mov     qword ptr [rsp+90h],r8
    `041cf20b 41b928000000    mov     r9d,28h
    `041cf211 4c8d442478      lea     r8,[rsp+78h]
    `041cf216 418d5101        lea     edx,[r9+1]
    `041cf21a 4983cfff        or      r15,0FFFFFFFFFFFFFFFFh
    `041cf21e 498bcf          mov     rcx,r15
    `041cf221 e83aadd0ff      call    nt!ZwSetInformationProcess (`03ed9f60)
    kd> r r8
    r8=fffff8800422bd88
    kd> dq [r8]
    fffff880`0422bd88  00000000`00000000 00000000`00000000
    fffff880`0422bd98  fffff880`00100000 00000000`00000000
    fffff880`0422bda8  00000000`00000384 00000000`00000000
    fffff880`0422bdb8  00000000`00000018 fffff880`0422bdd0
    kd> r
    rax=0000000000000000 rbx=fffff88000002000 rcx=ffffffffffffffff
    rdx=0000000000000029 rsi=fffff88000100000 rdi=0000000000000000
    rip=fffff800041cf221 rsp=fffff8800422bd10 rbp=fffffa8004170b30
     r8=fffff8800422bd88  r9=0000000000000028 r10=0000000000000001
    r11=fffff8800422bde0 r12=fffff88000002000 r13=0000000000001000
    r14=000007fffffd7000 r15=ffffffffffffffff
    iopl=0         nv up ei ng nz na po nc
    cs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b  efl=00000286
根据执行路径可知，传入给 ZwSetInformationProcess 的第三个参数指针指向的是位于 RtlCreateUserStack
栈区域的局部结构体变量。在将结构体地址赋值给 r8 寄存器之前，函数执行对结构体 6 个域赋值操作，其中需要关注的是第 5 个域，即在前面一直追寻的指示
RegionSize 的来源的域，这个域是通过 rsi 寄存器赋值的。
向上追溯，发现在 rsi 寄存器取 rbx+0xFFFFF 地址之后，再经过几次逻辑与运算：
    lea     rsi,[rbx+0FFFFFh]
    and     rsi,0FFFFFFFFFFF00000h
    add     rsi,0FFFFh
    and     rsi,0FFFFFFFFFFFF0000h
此时 rbx 的值是 0xFFFFF88000002000，而 rbx 是在函数执行开始时由 rcx 寄存器直接赋值的，而 rcx 寄存器是作为函数的第 1
个参数传入的。该函数原型如下：
    NTSTATUS
    NTAPI
    RtlCreateUserStack (
        _In_opt_ SIZE_T       CommittedStackSize,
        _In_opt_ SIZE_T       MaximumStackSize,
        _In_opt_ ULONG_PTR    ZeroBits,
        _In_     SIZE_T       PageSize,
        _In_     ULONG_PTR    ReserveAlignment,
        _Out_    PINITIAL_TEB InitialTeb
    );
其中第一个参数是 CommittedStackSize，作为栈的初始提交大小。显然地在这里传入该函数的这个参数就是不寻常的值。那么继续向上探究：
    nt!PspAllocateThread:
    `041cd5b4 488bc4          mov     rax,rsp
    `041cd5b7 4c894820        mov     qword ptr [rax+20h],r9
    `041cd5bb 44884018        mov     byte ptr [rax+18h],r8b
    `041cd5bf 48895010        mov     qword ptr [rax+10h],rdx
    `041cd5c3 48894808        mov     qword ptr [rax+8],rcx
    `041cd5c7 53              push    rbx
    `041cd5c8 56              push    rsi
    `041cd5c9 57              push    rdi
    `041cd5ca 4154            push    r12
    `041cd5cc 4155            push    r13
    `041cd5ce 4156            push    r14
    `041cd5d0 4157            push    r15
    `041cd5d2 4881ece0010000  sub     rsp,1E0h
    `041cd5d9 458ad0          mov     r10b,r8b
    `041cd5dc 4c8be9          mov     r13,rcx
    `041cd5df 33ff            xor     edi,edi
    `041cd5e1 48897c2470      mov     qword ptr [rsp+70h],rdi
    `041cd5e6 4c3bcf          cmp     r9,rdi
    `041cd5e9 740b            je      nt!PspAllocateThread+0x42 (`041cd5f6)
    `041cd5eb 410fba210f      bt      dword ptr [r9],0Fh
    `041cd5f0 0f823c0ff6ff    jb      nt! ?? ::NNGAKEGL::`string'+0x241f0 (`0412e532)
    `041cd5f6 4c8ba42460020000 mov     r12,qword ptr [rsp+260h]
    `041cd5fe 65488b042588010000 mov   rax,qword ptr gs:[188h]
    `041cd607 4889842498000000 mov     qword ptr [rsp+98h],rax
    `041cd60f 4c8b842478020000 mov     r8,qword ptr [rsp+278h]
    `041cd617 4189b878010000  mov     dword ptr [r8+178h],edi
    `041cd61e 4588907c010000  mov     byte ptr [r8+17Ch],r10b
    `041cd625 4c8bb42440020000 mov     r14,qword ptr [rsp+240h]
    `041cd62d 4c3bf7          cmp     r14,rdi
    `041cd630 0f848a060000    je      nt!PspAllocateThread+0x70b (`041cdcc0)
    `041cd636 483b0df349f4ff  cmp     rcx,qword ptr [nt!PsInitialSystemProcess (`04112030)]
    `041cd63d 0f841a0ff6ff    je      nt! ?? ::NNGAKEGL::`string'+0x2421f (`0412e55d)
    `041cd643 483bd7          cmp     rdx,rdi
    `041cd646 0f851a040000    jne     nt!PspAllocateThread+0x4b2 (`041cda66)
    `041cd64c 498b85c8010000  mov     rax,qword ptr [r13+1C8h]
    `041cd653 48f7d8          neg     rax
    `041cd656 1bf6            sbb     esi,esi
    `041cd658 83e658          and     esi,58h
    `041cd65b 41bf98040000    mov     r15d,498h
    `041cd661 4103f7          add     esi,r15d
    `041cd664 488d442458      lea     rax,[rsp+58h]
    `041cd669 4889442440      mov     qword ptr [rsp+40h],rax
    `041cd66e 89742438        mov     dword ptr [rsp+38h],esi
    `041cd672 897c2430        mov     dword ptr [rsp+30h],edi
    `041cd676 89742428        mov     dword ptr [rsp+28h],esi
    `041cd67a 48897c2420      mov     qword ptr [rsp+20h],rdi
    `041cd67f 458aca          mov     r9b,r10b
    `041cd682 4c8bc2          mov     r8,rdx
    `041cd685 488b15c449f4ff  mov     rdx,qword ptr [nt!PsThreadType (`04112050)]
    `041cd68c 418aca          mov     cl,r10b
    `041cd68f e84cd60000      call    nt!ObCreateObject (`041dace0)
    `041cd694 8bd8            mov     ebx,eax
    `041cd696 89442450        mov     dword ptr [rsp+50h],eax
    `041cd69a 3bc7            cmp     eax,edi
    `041cd69c 0f8cc00ef6ff    jl      nt! ?? ::NNGAKEGL::`string'+0x24224 (`0412e562)
    `041cd6a2 448bc6          mov     r8d,esi
    `041cd6a5 33d2            xor     edx,edx
    `041cd6a7 488b5c2458      mov     rbx,qword ptr [rsp+58h]
    `041cd6ac 488bcb          mov     rcx,rbx
    `041cd6af e8dc61d1ff      call    nt!memset (`03ee3890)
    `041cd6b4 413bf7          cmp     esi,r15d