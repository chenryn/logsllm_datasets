CreatingtheMainProgram
BuildingaPassword-GuessingPlug-in
RunningtheScanner
BuildingPlug-insinLua
Creatingthehead()HTTPFunction
Creatingtheget()Function
RegisteringtheFunctionswiththeLuaVM
WritingYourMainFunction
CreatingYourPlug-inScript
TestingtheLuaPlug-in
Summary
11
IMPLEMENTINGANDATTACKING
CRYPTOGRAPHY
ReviewingBasicCryptographyConcepts
UnderstandingtheStandardCryptoLibrary
ExploringHashing
CrackinganMD5orSHA-256Hash
Implementingbcrypt
AuthenticatingMessages
EncryptingData
Symmetric-KeyEncryption
AsymmetricCryptography
Brute-ForcingRC2
GettingStarted
ProducingWork
PerformingWorkandDecryptingData
WritingtheMainFunction
RunningtheProgram
Summary
12
WINDOWSSYSTEMINTERACTIONANDANALYSIS
TheWindowsAPI’sOpenProcess()Function
Theunsafe.PointeranduintptrTypes
PerformingProcessInjectionwiththesyscallPackage
DefiningtheWindowsDLLsandAssigningVariables
ObtainingaProcessTokenwiththeOpenProcessWindowsAPI
ManipulatingMemorywiththeVirtualAllocExWindowsAPI
WritingtoMemorywiththeWriteProcessMemoryWindowsAPI
FindingLoadLibraryAwiththeGetProcessAddressWindowsAPI
ExecutingtheMaliciousDLLUsingtheCreateRemoteThread
WindowsAPI
VerifyingInjectionwiththeWaitforSingleObjectWindowsAPI
CleaningUpwiththeVirtualFreeExWindowsAPI
AdditionalExercises
ThePortableExecutableFile
UnderstandingthePEFileFormat
WritingaPEParser
AdditionalExercises
UsingCwithGo
InstallingaCWindowsToolchain
CreatingaMessageBoxUsingCandtheWindowsAPI
BuildingGointoC
Summary
13
HIDINGDATAWITHSTEGANOGRAPHY
ExploringthePNGFormat
TheHeader
TheChunkSequence
ReadingImageByteData
ReadingtheHeaderData
ReadingtheChunkSequence
WritingImageByteDatatoImplantaPayload
LocatingaChunkOffset
WritingByteswiththeProcessImage()Method
EncodingandDecodingImageByteDatabyUsingXOR
Summary
AdditionalExercises
14
BUILDINGACOMMAND-AND-CONTROLRAT
GettingStarted
InstallingProtocolBuffersforDefiningagRPCAPI
CreatingtheProjectWorkspace
DefiningandBuildingthegRPCAPI
CreatingtheServer
ImplementingtheProtocolInterface
Writingthemain()Function
CreatingtheClientImplant
BuildingtheAdminComponent
RunningtheRAT
ImprovingtheRAT
EncryptYourCommunications
HandleConnectionDisruptions
RegistertheImplants
AddDatabasePersistence
SupportMultipleImplants
AddImplantFunctionality
ChainOperatingSystemCommands
EnhancetheImplant’sAuthenticityandPracticeGoodOPSEC
AddASCIIArt
Summary
INDEX
FOREWORD
Programminglanguageshavealwayshadanimpacton
informationsecurity.Thedesignconstraints,standard
libraries,andprotocolimplementationsavailablewithineach
languageendupdefiningtheattacksurfaceofanyapplication
builtonthem.Securitytoolingisnodifferent;theright
languagecansimplifycomplextasksandmaketheincredibly
difficultonestrivial.Go’scross-platformsupport,single-
binaryoutput,concurrencyfeatures,andmassiveecosystem
makeitanamazingchoiceforsecuritytooldevelopment.Go
isrewritingtherulesforbothsecureapplicationdevelopment
andthecreationofsecuritytools,enablingfaster,safer,and
moreportabletooling.
Overthe15yearsthatIworkedontheMetasploit
Framework,theprojectwentthroughtwofullrewrites,
changedlanguagesfromPerltoRuby,andnowsupportsa
rangeofmultilingualmodules,extensions,andpayloads.
Thesechangesreflecttheconstantlyevolvingnatureof
softwaredevelopment;inordertokeepupinsecurity,your
toolsneedtoadapt,andusingtherightlanguagecansavean
enormousamountoftime.ButjustlikeRuby,Godidn’t
becomeubiquitousovernight.Ittakesaleapoffaithtobuild
anythingofvalueusinganewlanguage,giventhe
uncertaintiesoftheecosystemandthesheeramountofeffort
neededtoaccomplishcommontasksbeforethestandard
librariescatchup.
TheauthorsofBlackHatGoarepioneersinGosecurity
tooldevelopment,responsibleforsomeoftheearliestopen
sourceGoprojects,includingBlackSheepWall,Lair
Framework,andsipbrute,amongmanyothers.Theseprojects
serveasexcellentexamplesofwhatcanbebuiltusingthe
language.Theauthorsarejustascomfortablebuilding
softwareastearingitapart,andthisbookisagreatexampleof
theirabilitytocombinetheseskills.
BlackHatGoprovideseverythingnecessarytogetstarted
withGodevelopmentinthesecurityspacewithoutgetting
boggeddownintothelesser-usedlanguagefeatures.Wantto
writearidiculousfastnetworkscanner,evilHTTPproxy,or
cross-platformcommand-and-controlframework?Thisbookis
foryou.Ifyouareaseasonedprogrammerlookingforinsight
intosecuritytooldevelopment,thisbookwillintroducethe
conceptsandtrade-offsthathackersofallstripesconsider
whenwritingtools.VeteranGodeveloperswhoareinterested
insecuritymaylearnalotfromtheapproachestakenhere,as
buildingtoolstoattackothersoftwarerequiresadifferent
mindsetthantypicalapplicationdevelopment.Yourdesign
trade-offswilllikelybesubstantiallydifferentwhenyour
goalsincludebypassingsecuritycontrolsandevading
detection.
Ifyoualreadyworkinoffensivesecurity,thisbookwill
helpyoubuildutilitiesthatarelight-yearsfasterthanexisting
solutions.Ifyouworkonthedefensesideorinincident
response,thisbookwillgiveyouanideaofhowtoanalyze
anddefendagainstmalwarewrittenintheGolanguage.
Happyhacking!
HDMoore
FounderoftheMetasploitProjectandtheCriticalResearch
Corporation
VPofResearchandDevelopmentatAtredisPartners
ACKNOWLEDGMENTS
ThisbookwouldnotbepossiblehadRobertGriesemer,Rob
Pike,andKenThompsonnotcreatedthisawesome
developmentlanguage.ThesefolksandtheentirecoreGo
developmentteamconsistentlycontributeusefulupdatesupon
eachrelease.Wewouldhaveneverwrittenthisbookhadthe
languagenotbeensoeasyandfuntolearnanduse.
TheauthorswouldalsoliketothanktheteamatNoStarch
Press:Laurel,Frances,Bill,Annie,Barbara,andeveryoneelse
withwhomweinteracted.Youallguidedusthroughthe
uncharteredterritoryofwritingourfirstbook.Lifehappens—
newfamilies,newjobs—andallthewhileyou’vebeenpatient
butstillpushedustocompletethisbook.TheentireNoStarch
Pressteamhasbeenapleasuretoworkwithonthisproject.
IwouldliketothankJenforallhersupport,encouragement,
andforkeepinglifemovingforwardwhileIwaslockedaway
inmyofficenightsandweekends,workingonthisnever-
endingbook.Jen,youhelpedmemorethanyouknow,and
yourconstantwordsofencouragementhelpedmakethisa
reality.Iamsincerelygratefultohaveyouinmylife.Imust
thank“T”(mycaninequadra-pet)forholdingthefloordown
inmyofficewhileIhackedawayandremindingmethat
“outside”isarealplaceIshouldvisit.Lastly,andclosetomy
heart,Iwanttodedicatethisbooktomypups,Lunaand
Annie,whopassedwhileIwaswritingthisbook.Yougirls
wereandareeverythingtomeandthisbookwillalwaysbea
reminderofmyloveforyouboth.
ChrisPatten
Iwouldliketoextendasincerethankyoutomywifeandbest
friend,Katie,foryourconstantsupport,encouragement,and
beliefinme.NotadaygoesbywhenI’mnotgratefulfor
everythingyoudoformeandourfamily.I’dliketothank
BrooksandSubsforgivingmereasontoworksohard.There
isnobetterjobthanbeingyourfather.Andtothebest“Office
Hounds”aguycouldaskfor—Leo(RIP),Arlo,Murphy,and
evenHowie(yes,Howietoo)—you’vesystematically
destroyedmyhouseandperiodicallymademequestionmy
lifechoices,butyourpresenceandcompanionshipmeanthe
worldtome.I’llgiveeachofyouasignedcopyofthisbookto
chewon.
DanKottmann
Thankyoutotheloveofmylife,Jackie,foryourloveand
encouragement;nothingIdowouldbepossiblewithoutyour
supportandeverythingyoudoforourfamily.Thankyouto
myfriendsandcolleaguesatAtredisPartnersandtoanyone
I’vesharedashellwithinthepast.IamwhereIambecauseof
you.Thankyoutomymentorsandfriendswhohavebelieved
inmesincedayone.Therearetoomanyofyoutoname;Iam
gratefulfortheincrediblepeopleinmylife.Thankyou,Mom,
forputtingmeincomputerclasses(thesewereathing).
Lookingback,thosewereacompletewasteoftimeandIspent
mostofthetimeplayingMyst,butitsparkedaninterest(I
missthe90s).Mostimportantly,thankyoutomySavior,Jesus
Christ.
TomSteele
Itwasalongroadtogethere—almostthreeyears.Alot
hashappenedtogettothispoint,andhereweare,finally.We
sincerelyappreciatetheearlyfeedbackwereceivedfrom
friends,colleagues,family,andearly-releasereaders.Foryour
patience,dearreader,thankyouso,soverymuch;wearetruly
gratefulandhopeyouenjoythisbookjustasmuchaswe
enjoyedwritingit.Allthebesttoyou!NowGocreatesome
amazingcode!
INTRODUCTION
Foraboutsixyears,thethreeofusledoneofNorthAmerica’s
largestdedicatedpenetration-testingconsultingpractices.As
principalconsultants,weexecutedtechnicalprojectwork,
includingnetworkpenetrationtests,onbehalfofourclients—
butwealsospearheadedthedevelopmentofbettertools,
processes,andmethodology.Andatsomepoint,weadopted
Goasoneofourprimarydevelopmentlanguages.
Goprovidesthebestfeaturesofotherprogramming
languages,strikingabalancebetweenperformance,safety,
anduser-friendliness.Soon,wedefaultedtoitasourlanguage
ofchoicewhendevelopingtools.Eventually,weevenfound
ourselvesactingasadvocatesofthelanguage,pushingforour
colleaguesinthesecurityindustrytotryit.Wefeltthebenefits
ofGowereatleastworthyofconsideration.
Inthisbook,we’lltakeyouonajourneythroughtheGo
programminglanguagefromtheperspectiveofsecurity
practitionersandhackers.Unlikeotherhackingbooks,we
won’tjustshowyouhowtoautomatethird-partyor
commercialtools(althoughwe’lltouchonthatalittle).
Instead,we’lldelveintopracticalanddiversetopicsthat
approachaspecificproblem,protocol,ortacticusefulto
adversaries.We’llcoverTCP,HTTP,andDNS
communications,interactwithMetasploitandShodan,search
filesystemsanddatabases,portexploitsfromotherlanguages
toGo,writethecorefunctionsofanSMBclient,attack
Windows,cross-compilebinaries,messwithcrypto,callC
libraries,interactwiththeWindowsAPI,andmuch,much
more.It’sambitious!We’dbetterbegin...
WHOTHISBOOKISFOR
Thisbookisforanyonewhowantstolearnhowtodevelop
theirownhackingtoolsusingGo.Throughoutourprofessional
careers,andparticularlyasconsultants,we’veadvocatedfor
programmingasafundamentalskillforpenetrationtestersand
securityprofessionals.Specifically,theabilitytocode
enhancesyourunderstandingofhowsoftwareworksandhow
itcanbebroken.Also,ifyou’vewalkedinadeveloper’s
shoes,you’llgainamoreholisticappreciationforthe
challengestheyfaceinsecuringsoftware,andyoucanuse
yourpersonalexperiencetobetterrecommendmitigations,
eliminatefalsepositives,andlocateobscurevulnerabilities.
Codingoftenforcesyoutointeractwiththird-partylibraries
andvariousapplicationstacksandframeworks.Formany
people(usincluded),it’shands-onexperienceandtinkering
thatleadstothegreatestpersonaldevelopment.
Togetthemostoutofthisbook,weencourageyouto
clonethebook’sofficialcoderepositorysoyouhaveallthe
workingexampleswe’lldiscuss.Findtheexamplesat
https://github.com/blackhat-go/bhg/.
WHATTHISBOOKISN’T
ThisbookisnotanintroductiontoGoprogrammingingeneral
butanintroductiontousingGofordevelopingsecuritytools.
Wearehackersandthencoders—inthatorder.Noneofus
haveeverbeensoftwareengineers.Thismeansthat,as
hackers,weputapremiumonfunctionoverelegance.Inmany
instances,we’veoptedtocodeashackersdo,disregarding
someoftheidiomsorbestpracticesofsoftwaredesign.As
consultants,timeisalwaysscarce;developingsimplercodeis
oftenfasterand,therefore,preferableoverelegance.When
youneedtoquicklycreateasolutiontoaproblem,style
concernscomesecondary.
ThisisboundtoangerGopurists,whowilllikelytweetat
usthatwedon’tgracefullyhandleallerrorconditions,thatour
examplescouldbeoptimized,orthatbetterconstructsor
methodsareavailabletoproducethedesiredresults.We’re
not,inmostcases,concernedwithteachingyouthebest,the
mostelegant,or100percentidiomaticsolutions,unlessdoing
sowillconcretelybenefittheendresult.Althoughwe’ll
brieflycoverthelanguagesyntax,wedosopurelytoestablish
abaselinefoundationuponwhichwecanbuild.Afterall,this
isn’tLearningtoProgramElegantlywithGo—thisisBlack
HatGo.
WHYUSEGOFORHACKING?
PriortoGo,youcouldprioritizeeaseofusebyusing
dynamicallytypedlanguages—suchasPython,Ruby,orPHP
—attheexpenseofperformanceandsafety.Alternatively,you
couldchooseastaticallytypedlanguage,likeCorC++,that
offershighperformanceandsafetybutisn’tveryuser-friendly.
GoisstrippedofmuchoftheuglinessofC,itsprimary
ancestor,makingdevelopmentmoreuser-friendly.Atthesame
time,it’sastaticallytypedlanguagethatproducessyntax
errorsatcompiletime,increasingyourassurancethatyour
codewillactuallyrunsafely.Asit’scompiled,itperforms
moreoptimallythaninterpretedlanguagesandwasdesigned
withmulticorecomputingconsiderations,makingconcurrent
programmingabreeze.
ThesereasonsforusingGodon’tconcernsecurity
practitionersspecifically.However,manyofthelanguage’s
featuresareparticularlyusefulforhackersandadversaries:
CleanpackagemanagementsystemGo’spackage
managementsolutioniselegantandintegrateddirectlywith
Go’stooling.Throughtheuseofthegobinary,youcan
easilydownload,compile,andinstallpackagesand
dependencies,whichmakesconsumingthird-partylibraries
simpleandgenerallyfreefromconflict.
Cross-compilationOneofthebestfeaturesinGoisits
abilitytocross-compileexecutables.Solongasyourcode
doesn’tinteractwithrawC,youcaneasilywritecodeon
yourLinuxorMacsystembutcompilethecodeina
Windows-friendly,PortableExecutableformat.
RichstandardlibraryTimespentdevelopinginother
languageshashelpedusappreciatetheextentofGo’s
standardlibrary.Manymodernlanguageslackthestandard
librariesrequiredtoperformmanycommontaskssuchas
crypto,networkcommunications,databaseconnectivity,
anddataencoding(JSON,XML,Base64,hex).Go
includesmanyofthesecriticalfunctionsandlibrariesas
partofthelanguage’sstandardpackaging,reducingthe
effortnecessarytocorrectlysetupyourdevelopment
environmentortocallthefunctions.
ConcurrencyUnlikelanguagesthathavebeenaround
longer,Gowasreleasedaroundthesametimeastheinitial
mainstreammulticoreprocessorsbecameavailable.For
thisreason,Go’sconcurrencypatternsandperformance
optimizationsaretunedspecificallytothismodel.
WHYYOUMIGHTNOTLOVEGO
WerecognizethatGoisn’taperfectsolutiontoevery
problem.Herearesomeofthedownsidesofthelanguage:
Binarysize’Nuffsaid.WhenyoucompileabinaryinGo,
thebinaryislikelytobemultiplemegabytesinsize.Of
course,youcanstripdebuggingsymbolsanduseapacker
tohelpreducethesize,butthesestepsrequireattention.
Thiscanbeadrawback,particularlyforsecurity
practitionerswhoneedtoattachabinarytoanemail,hostit
onasharedfilesystem,ortransferitoveranetwork.
VerbosityWhileGoislessverbosethanlanguageslike
C#,Java,orevenC/C++,youstillmightfindthatthe
simplisticlanguageconstructforcesyoutobeoverly
expressiveforthingslikelists(calledslicesinGo),
processing,looping,orerrorhandling.APythonone-liner
mighteasilybecomeathree-linerinGo.
CHAPTEROVERVIEW
ThefirstchapterofthisbookcoversabasicoverviewofGo’s
syntaxandphilosophy.Next,westarttoexploreexamplesthat
youcanleveragefortooldevelopment,includingvarious
commonnetworkprotocolslikeHTTP,DNS,andSMB.We
thendigintovarioustacticsandproblemsthatwe’ve
encounteredaspenetrationtesters,addressingtopicsincluding
datapilfering,packetsniffing,andexploitdevelopment.
Finally,wetakeabriefstepbacktotalkabouthowyoucan
createdynamic,pluggabletoolsbeforedivingintocrypto,
attackingMicrosoftWindows,andimplementing
steganography.
Inmanycases,therewillbeopportunitiestoextendthe
toolsweshowyoutomeetyourspecificobjectives.Although
wepresentrobustexamplesthroughout,ourrealintentisto
provideyouwiththeknowledgeandfoundationthrough
whichyoucanextendorreworktheexamplestomeetyour
goals.Wewanttoteachyoutofish.
Beforeyoucontinuewithanythinginthisbook,pleasenote
thatwe—theauthorsandpublisher—havecreatedthiscontent
forlegalusageonly.Wewon’tacceptanyliabilityforthe
nefariousorillegalthingsyouchoosetodo.Allthecontent
hereisforeducationalpurposesonly;donotperformany
penetration-testingactivitiesagainstsystemsorapplications
withoutauthorizedconsent.
Thesectionsthatfollowprovideabriefoverviewofeach
chapter.
Chapter1:GoFundamentals
Thegoalofthischapteristointroducethefundamentalsofthe