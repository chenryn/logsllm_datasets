### Impact of User Constraints on Recovery Actions

**Selected Recovery Action (User Constraints):**
- **AMI from the old database instance (Reparation)**
- **Launch a new database instance in the new availability zone (Direct Redo)**
- **Reassign the IP to the new database instance (Direct Redo)**
- **Terminate the old database instance (Direct Redo)**

### Satisfying Recovery Requirement R3
The recovery impact of the selected recovery action is optimal and acceptable, meaning its recovery impact is relatively small compared to all other possible actions. This selection and optimization mechanism ensures that the recovery impact meets the objectives set by stakeholders. Therefore, the requirement for minimizing negative impact during recovery is achieved.

### D. Reducing Monetary Cost in Recovery

#### 1. Experimental Procedure
This requirement focuses on the monetary cost incurred during the recovery process in a cloud system. To measure this, we performed a migration operation on a cloud application, turning off the software running in the cloud instances during the migration. We used our proprietary fault injection tool to inject faults at eight predetermined recovery points in the migration operation. The applicable recovery patterns were automatically determined using the filtering method described in Section 7.3. Recovery was then performed using the selected acceptable recovery actions based on two different methods: Pareto set search and user constraints. The injected faults, which are representative of real-world scenarios, are listed in Table 49. The recovery monetary cost was calculated by summing up the costs incurred by each step in the recovery action. The experiment was repeated 30 times to measure the average recovery monetary cost.

**Table 49. Faults Injected for Migration Operation**

| Recovery Point | Fault Injected |
|----------------|----------------|
| 1 (After Step 1) | Old web instance not stopped |
| 2 (After Step 2) | AMI not created |
| 3 (After Step 4) | New web instance not launched |
| 4 (After Step 5) | Old web instance not terminated |
| 5 (After Step 6) | Old DB instance not stopped |
| 6 (After Step 7) | AMI not created |
| 7 (After Step 9) | New DB instance not launched |
| 8 (After Step 10) | Old DB instance not terminated |

#### 2. Experimental Results
**Table 50. Recovery Monetary Cost for Migration**

| Recovery Pattern ID | Recovery Pattern | Recovery Process Point | Step | Errors | Applicable Recovery Patterns | Selected Recovery Action (Pareto Set) | Monetary Cost (Pareto Set) | Selected Recovery Action (User Constraints) | Monetary Cost (User Constraints) |
|---------------------|------------------|------------------------|------|--------|-------------------------------|---------------------------------------|---------------------------|--------------------------------------------|----------------------------------|
| RP1                 | Compensated Undo & Redo | 1 | Stop the old web instance in the old availability zone | Old web instance not stopped | RP1, RP3, RP5, RP6 | Stop the old web instance again (Direct Redo) | $0 | Stop the old web instance (Reparation) | $0 |
| RP3                 | Rewind & Replay | 2 | Create an AMI from the old web instance | AMI not created | RP1, RP3, RP5, RP6 | Delete the failed AMI; Create a new AMI from the old web instance (Reparation) | $0.0031 | Delete the failed AMI; Create a new AMI from the old web instance (Reparation) | $0.0031 |
| RP5                 | Reparation | 3 | Launch a new web instance in the new availability zone | New web instance not launched | RP1, RP3, RP5, RP6 | Launch a new web instance in the new availability zone (Direct Redo) | $0 | Launch a new web instance in the new availability zone (Direct Redo) | $0 |
| RP6                 | Direct Redo | 4 | Reassign the IP to the new web instance | Old web instance not terminated | RP1, RP3, RP5, RP6 | Terminate the old web instance (Direct Redo) | $0 | Terminate the old web instance (Direct Redo) | $0 |
| RP5                 | Reparation | 5 | Stop the old database instance in the old availability zone | Old DB instance not stopped | RP1, RP3, RP5, RP6 | Stop the old database instance (Reparation) | $0 | Stop the old database instance (Reparation) | $0 |
| RP3                 | Rewind & Replay | 6 | Create an AMI from the old database instance | AMI not created | RP1, RP3, RP5, RP6 | Delete the failed AMI; Create a new AMI from the old database instance (Reparation) | $0.0031 | Delete the failed AMI; Create a new AMI from the old database instance (Reparation) | $0.0031 |
| RP5                 | Reparation | 7 | Launch a new database instance in the new availability zone | New DB instance not launched | RP1, RP3, RP5, RP6 | Launch a new database instance in the new availability zone (Direct Redo) | $0 | Launch a new database instance in the new availability zone (Direct Redo) | $0 |
| RP6                 | Direct Redo | 8 | Terminate the old database instance | Old DB instance not terminated | RP1, RP3, RP5, RP6 | Terminate the old database instance (Direct Redo) | $0 | Terminate the old database instance (Direct Redo) | $0 |

The recovery monetary cost in Table 50 represents the average value over 30 runs. The highest relative standard deviation is 0%. For each recovery point, the monetary cost of the recovery action selected by the Pareto set search-based optimization method is no greater than the other applicable recovery actions. The monetary cost of the selected recovery action by the user constraints-based optimization method is within the monetary cost constraint set by business stakeholders, though it is not necessarily the lowest.

This approach ensures that the recovery process is both effective and cost-efficient, meeting the recovery requirements set by stakeholders.