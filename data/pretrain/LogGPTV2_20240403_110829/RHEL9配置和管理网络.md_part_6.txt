::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-rhel-system-roles-with-the-interface-name_configuring-an-ethernet-connection}使用接口名称的 RHEL 系统角色配置静态以太网连接 {.title}
:::
此流程描述了如何使用网络 RHEL 系统角色通过运行 Ansible playbook 为
`enp7s0`{.literal} 接口远程添加以太网连接：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-static-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with static IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              interface_name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 192.0.2.1/24
                  - 2001:db8:1::1/64
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-static-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-rhel-system-roles-with-a-device-path_configuring-an-ethernet-connection}使用设备路径的 RHEL 系统角色配置静态以太网连接 {.title}
:::
此流程描述了如何使用 RHEL 系统角色通过运行 Ansible playbook
为与特定设备匹配的设备远程添加带有静态 IP 地址的以太网连接。
您可以使用以下命令识别设备路径：
``` literallayout
# udevadm info /sys/class/net/ | grep ID_PATH=
```
此流程将以下设置设置为与 PCI ID `0000:00:0[1-3].0`{.literal}
表达式匹配的设备，但不设置 `0000:00:02.0`{.literal} ：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
在 Ansible 控制节点上运行此步骤。
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   主机使用 NetworkManager 配置网络。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/ethernet-dynamic-IP.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with dynamic IP
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: example
              match:
                path:
                  - pci-0000:00:0[1-3].0
                  - &!pci-0000:00:02.0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 192.0.2.1/24
                  - 2001:db8:1::1/64
                gateway4: 192.0.2.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 192.0.2.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              state: up
    ```
    本例中的 `match`{.literal} 参数定义将 play 应用到与 PCI ID
    `0000:00:0[1-3].0`{.literal} 匹配的设备，但不匹配
    `0000:00:02.0`{.literal}。有关可以使用的特殊修饰符和通配符的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件中的 `匹配`{.literal} 参数描述。
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/ethernet-dynamic-IP.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-dynamic-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-nmcli_configuring-an-ethernet-connection}使用 nmcli 配置动态以太网连接 {.title}
:::
这个步骤描述了使用 `nmcli`{.literal}
工具添加动态以太网连接。使用这个设置，NetworkManager 从 DHCP
服务器请求这个连接的 IP 设置。
::: itemizedlist
**先决条件**
-   网络中有 DHCP 服务器。
:::
::: orderedlist
**流程**
1.  为以太网连接添加新的 NetworkManager 连接配置集：
    ``` literallayout
    # nmcli connection add con-name Example-Connection ifname enp7s0 type ethernet
    ```
2.  （可选）在使用 `Example-Connection`{.literal} 配置集时更改主机名
    NetworkManager 发送到 DHCP 服务器：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dhcp-hostname Example ipv6.dhcp-hostname Example
    ```
3.  （可选）在使用 `Example-Connection`{.literal} 配置集时更改客户端 ID
    NetworkManager 发送到 IPv4 DHCP 服务器：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dhcp-client-id client-ID
    ```
    请注意，没有 IPv6 的 `dhcp-client-id`{.literal} 参数。要为 IPv6
    创建标识符，请配置 `dhclient`{.literal} 服务。
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    程序来验证这个主机是否可以向其它主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:1::2
        ```
        如果命令失败，请验证 IP 和子网的设置。
    -   在远程子网中查找 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 198.162.3.1
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        ::: itemizedlist
        -   如果命令失败，则使用 ping 默认网关来验证设置。
            对于 IPv4：
            ``` literallayout
            # ping 192.0.2.254
            ```
            对于 IPv6:
            ``` literallayout
            # ping 2001:db8:1::fff3
            ```
        :::
    :::
4.  使用 `host`{.literal} 实用程序来验证名称解析是否正常工作。例如：
    ``` literallayout
    # host client.example.com
    ```
    如果命令返回任何错误，如 `connection timed out`{.literal} 或
    `no servers could be reached`{.literal}，请验证您的 DNS 设置。
:::
::: itemizedlist
**其他资源**
-   `dhclient(8)`{.literal} man page
-   `nm-settings(5)`{.literal}
-   `nmcli(1)`{.literal} man page
-   [NetworkManager 在 NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection}使用 nmcli 互动编辑器配置动态以太网连接 {.title}