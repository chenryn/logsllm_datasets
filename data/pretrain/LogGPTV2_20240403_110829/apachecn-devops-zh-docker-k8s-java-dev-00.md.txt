# 零、前言
想象一下，在几分钟内就可以在 Apache Tomcat 或 Wildfly 上创建和测试 Java EE 应用，同时快速部署和管理 Java 应用。听起来好得难以置信？你有理由欢呼，因为通过利用 Docker 和 Kubernetes，这样的场景是可能的。
这本书将首先介绍 Docker，并深入研究其网络和持久存储概念。然后将向您介绍微服务的概念，并学习如何部署和运行作为 Docker 容器的 Java 微服务。接下来，本书将重点介绍 Kubernetes 及其特性。您将从使用 Minikube 运行本地集群开始。下一步将是在真正的云中部署您的 Java 服务，在亚马逊 AWS 之上运行的 Kubernetes 上。在本书的最后，您将获得一些更高级主题的实践经验，以进一步扩展您对 Docker 和 Kubernetes 的知识。
# 这本书涵盖了什么
[第 1 章](01.html)、*Docker 简介*，介绍 Docker 背后的推理，呈现 Docker 与传统虚拟化的区别。本章还解释了基本的 Docker 概念，如映像、容器和 Dockerfiles。
[第 2 章](02.html)、*网络和持久存储*解释了网络和持久存储如何在 Docker 容器中工作。
[第 3 章](03.html)、*与微服务*合作，概述了什么是微服务，并解释了它们与单片架构相比的优势。
[第 4 章](04.html)、*创建 Java 微服务*，探索了一种通过利用 Java EE7 或 Spring Boot 快速构建 Java 微服务的方法。
[第 5 章](05.html)、*用 Java 应用创建映像*讲述了如何将 Java 微服务打包成 Docker 映像，可以手动打包，也可以从 Maven 构建文件打包。
[第 6 章](06.html)、*用 Java 应用运行容器*，展示了如何使用 Docker 运行容器化的 Java 应用。
[第 7 章](07.html)、*库本内斯介绍*，介绍库本内斯的核心概念，如 Pods、节点、服务和部署。
[第 8 章](08.html)、*将 Kubernetes 与 Java 一起使用*，展示了如何在本地 Kubernetes 集群上部署打包为 Docker 映像的 Java 微服务。
[第 9 章](09.html)、*使用 Kubernetes API* 展示了如何使用 Kubernetes API 自动创建 Kubernetes 对象，如服务或部署。本章给出了如何使用应用编程接口获取集群状态信息的示例。
[第 10 章](10.html)、*在云中的 Kubernetes 上部署 Java*，向读者展示了如何配置 Amazon AWS EC2 实例，使其适合运行 Kubernetes 集群。本章还给出了如何在亚马逊 AWS 云上创建 Kubernetes 集群的精确说明。
[第 11 章](11.html)、*更多资源*探讨了 Java 和 Kubernetes 如何向读者指出互联网上可用的高质量附加资源，以进一步扩展关于 Docker 和 Kubernetes 的知识。
# 这本书你需要什么
为了这本书，你将需要任何像样的个人电脑或苹果电脑，能够运行现代版本的 Linux、视窗 10 64 位或苹果电脑。
# 这本书是给谁的
这本书是为希望进入容器化世界的 Java 开发人员准备的。读者将了解 Docker 和 Kubernetes 如何帮助在集群上部署和管理 Java 应用，无论是在他们自己的基础架构上还是在云中。
# 约定
在这本书里，你会发现许多区分不同种类信息的文本样式。以下是这些风格的一些例子和对它们的意义的解释。文本中的码字、数据库表名、文件夹名、文件名、文件扩展名、路径名、伪 URL、用户输入和 Twitter 句柄如下所示:“Dockerfile 用于在运行`docker build`命令时创建映像。”代码块设置如下:
```
{
"apiVersion": "v1",
"kind": "Pod",
"metadata":{
"name": ”rest_service”,
"labels": {
"name": "rest_service"
}
},
"spec": {
"containers": [{
"name": "rest_service",
"image": "rest_service",
"ports": [{"containerPort": 8080}],
}]
}
}
```
任何命令行输入或输出都编写如下:
```
docker rm $(docker ps -a -q -f status=exited)
```
**新名词**和**重要词语**以粗体显示。您在屏幕上看到的单词，例如在菜单或对话框中看到的单词，会出现在文本中，如下所示:“单击“立即跳过”会将您带到映像列表，而无需登录 Docker Hub。”
Warnings or important notes appear in a box like this. Tips and tricks appear like this.
# 读者反馈
我们随时欢迎读者的反馈。让我们知道你对这本书的看法——你喜欢或不喜欢什么。读者反馈对我们来说很重要，因为它有助于我们开发出你真正能从中获益的标题。要给我们发送一般反馈，只需发送电子邮件`PI:EMAIL`，并在您的邮件主题中提及书名。如果您对某个主题有专业知识，并且对写作或投稿感兴趣，请参见我们位于[www.packtpub.com/authors](http://www.packtpub.com/authors)的作者指南。
# 客户支持
现在，您已经自豪地拥有了一本书，我们有许多东西可以帮助您从购买中获得最大收益。
# 下载示例代码
你可以从你在[http://www.packtpub.com](http://www.packtpub.com)的账户下载这本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册将文件直接通过电子邮件发送给您。您可以按照以下步骤下载代码文件:
1.  使用您的电子邮件地址和密码登录或注册我们的网站。
2.  将鼠标指针悬停在顶部的“支持”选项卡上。
3.  点击代码下载和勘误表。
4.  在搜索框中输入图书的名称。
5.  选择要下载代码文件的书籍。
6.  从您购买这本书的下拉菜单中选择。
7.  点击代码下载。
下载文件后，请确保使用最新版本的解压缩文件夹:
*   视窗系统的 WinRAR / 7-Zip
*   zipeg/izp/un ARX for MAC
*   适用于 Linux 的 7-Zip / PeaZip
这本书的代码包也托管在 GitHub 上，网址为[。我们还有来自丰富的图书和视频目录的其他代码包，可在](https://github.com/PacktPublishing/Docker-and-Kubernetes-for-Java-Developers)[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)获得。看看他们！
# 下载这本书的彩色图片
我们还为您提供了一个 PDF 文件，其中包含本书中使用的截图/图表的彩色映像。彩色映像将帮助您更好地理解输出中的变化。您可以从[http://www . packtpub . com/sites/default/files/downloads/DockerandKubernetesforJavaDevelopers _ color images . pdf](http://www.packtpub.com/sites/default/files/downloads/DockerandKubernetesforJavaDevelopers_ColorImages.pdf)下载此文件
# 正误表
尽管我们尽了最大努力来确保我们内容的准确性，但错误还是会发生。如果你在我们的某本书里发现一个错误，也许是文本或代码中的错误，如果你能向我们报告，我们将不胜感激。通过这样做，你可以让其他读者免受挫折，并帮助我们改进这本书的后续版本。如果您发现任何勘误表，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误表提交表格链接，并输入您的勘误表的详细信息。一旦您的勘误表得到验证，您的提交将被接受，勘误表将上传到我们的网站或添加到该标题勘误表部分下的任何现有勘误表列表中。要查看之前提交的勘误表，请前往[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)并在搜索栏中输入图书名称。所需信息将出现在勘误表部分。
# 海盗行为
在互联网上盗版受版权保护的材料是一个贯穿所有媒体的持续问题。在 Packt，我们非常重视版权和许可证的保护。如果您在互联网上遇到任何形式的我们作品的非法拷贝，请立即向我们提供位置地址或网站名称，以便我们寻求补救。请通过`PI:EMAIL`联系我们，获取疑似盗版资料的链接。我们感谢您在保护我们的作者方面的帮助，以及我们为您带来有价值内容的能力。
# 问题
如果您对本书的任何方面有问题，可以在`PI:EMAIL`联系我们，我们将尽最大努力解决问题。