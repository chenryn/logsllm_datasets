>这型会显示验入的内客（/b6）
(center)
(og/
ar
(/bolly)
(/eenter)
(/htal)
图4-91HTML源码
4.4.8DOM型XSS代码分析
DOM型XSS程序只有HTML代码，并不存在服务器端代码，所以此程序并没有
与服务器端进行交互，代码如下所示。
Test
function tihuan(){
document -getElementById(*1d1°) .1nnerHTML =
document .getElementById(*dom_input") .value;
这里会显示输入的内容
---
## Page 163
144Web安全攻防：渗造测试实战指南
cbr />
操作，通过document.getElementById获取ID为id1的节点，然后将节点id1的内容修改
成id为dom_input中的值，即用户输入的值。当输入
时，单击“替换”按钮，页面弹出消息框，但由于是隐式输出的，所以在查看源代
码时，看不到输出的XSS代码。
4.5XSS进阶
4.5.1XSS常用语句及编码绕过
XSS常用的测试语句有：
(1)。
常见的XSS的绕过编码有JS编码、HTML实体编码和URL编码。
1.JS编码
JS提供了四种字符编码的策略，如下所示。
。三个八进制数字，如果个数不够，在前面补0，例如“e”的编码为“\145”。
两个十六进制数字，如果个数不够，在前面补0，例如“e”的编码为“x65”。
。四个十六进制数字，如果个数不够，在前面补0，例如"e“的编码为”u0065”。
对于一些控制字符，使用特殊的C类型的转义风格（例如u和r）。
---
## Page 164
第4章Web安全原理划析145
2.HTML实体编码
命名实体：以&开头，以分号结尾的，例如“，呼
3.URL编码
这里的URL编码，也是两次URL全编码的结果。如果alert被过滤，结果
%25%36%31%25%36%63%25%36%35%25%37%32%25%37%34。
在使用XSS编码测试时，需要考虑HTML谊染的顺序，特别是针对多种编码组合
时，要选择合适的编码方式进行测试。
4.5.2使用XSS平台测试XSS漏洞
本书的第2章讲解过如何搭建XSS平台，本节介绍来讲如何使用XSS平台测试
XSS漏洞。
所示。
snen
ond:
图4-92XSS平台首页
页面中的名称和描述是分类的，随意填写即可。勾选“默认模块”选项后单击
“下一步”按钮，如图4-93所示。
---
## Page 165
146
Web安全攻防：渗透测试实战指南
1860
11
AiAI
KMLSUR I17
UXR
dB的EA8AR IL1
Bi0BnRefRRed I.1
0+
围4-93XSS平台模块
页面上显示了多种利用代码，在实际情况中，一般会根据HTML源码选择合适的
利用代码，以此构造浏览器能够执行的代码，这里选择第一种利用代码，如图4-94
所示。
项目名称：11
IB代R:
BARR
H.. cNa
公网月：
5%
图4-94XSS平台可利用的攻击代码
---
## Page 166
第4章Web安全原理剖析147
将利用代码插入到存在XSS漏洞的URL后，查看源代码。发现浏览器成功执行
XSS的利用代码，如图4-95所示。
Gesd>
rta httg
Cee
”“on*”等非法字符。
对输出到页面的数据进行相应的编码转换，包括HTML实体编码、JavaScript
编码等。
4.6CSRF漏洞
4.6.1介绍CSRF漏洞
CSRF（Cross-site request forgery，跨站请求伪造）也被称为One ClickAttack或者
SessionRiding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起
来像跨站脚本（XSS），但它与XSS非常不同，XSS利用站点内的信任用户，而CSRF
则通过伪装成受信任用户请求受信任的网站。与XSS攻击相比，CSRF攻击往往不大
流行（因此对其进行防范的资源也相当稀少）也难以防范，所以被认为比XSS更具危
险性。
4.6.2CSRF漏洞的原理
其实可以这样理解CSRF：攻击者利用目标用户的身份，以目标用户的名义执行
某些非法操作。CSRF能够做的事情包括：以目标用户的名义发送邮件、发消息，盗
取目标用户的账号，甚至购买商品、虚拟货币转账，这会泄露个人隐私并威肋到了
目标用户的财产安全。
举个例子，你想给某位用户转账100元，那么单击“转账”按钮后，发出的HTTP
请求会与http://www.xxbank.com/pay.php?user=xx&money=100类似。而攻击者构造链
接（http:/www.xxbank.com/pay-php?user=hack&money=100），当目标用户访间了该
URL后，就会自动向Hack账号转账100元，而且这只涉及目标用户的操作，攻击者并
没有获取目标用户的cookie或其他信息。
CSRF的攻击过程有以下两个重点。
---
## Page 168
第4章Web安全原理制析149
目标用户已经登录了网站，能够执行网站的功能。
目标用户访问了攻击者构造的URL。
4.6.3利用CSRF漏洞
CSRF漏润经常被用来制作端虫攻击、刷SEO流量等。下面以端虫攻击为例，图
Suiet抓包。
损写新文章
1
预
Rt
自定文学段
图4-97发布文章功能
可以看到在Burp Suite中，有一个自动构造CSRF PoC的功能（右击→Engagement
tools→Generate CSRF PoC)，如图4-98所示。
---
## Page 169
150Web安全攻防：渗透测试实战指南
Send to Spider
Do at acthve scas
Send to Iner
Send to Reg
X+1
+
Serd to Decoder
end
Rguestinbrc
Copy URL
Chunge b
Cspy as curlc
Ge
Copy to Tie
Paste fronfle
Save item
Do intercegt
URL-
Comvert:
Cut
CoPy
Faste
Message editor help
+~+1
图4-98Burp生成CSRF PoC
Burp Suite会生成一段HTML代码，此HTML代码即为CSRF漏洞的测试代码，单
击“CopyHTML”按钮，如图4-99所示。
CSRF HTML;
ted by aurp suite Professioaal
'hidoes
'hidoen
"hidoen
cinget
type=*hidden
'hidoe
unet
 Tpeschtem
图4-99Burp生成的HTML代码
将CSRF测试代码发布到一个网站中，例如链接为http://xx.com/1.html，如图4-100
---
## Page 170
第4章Web安全原理剖析151
所示。
&.html
88
cinput
(ingut
ene-*fielevaluessar1;se93;* value***
*c10v
mTEA
图4-100发布CSRFPoC到网站中
接着诱导目标用户访间http:/xx.com/1.html，当目标用户处于登录状态，并且在
同一浏览器访问了该网址后，目标用户就会自动发布一篇文章，如图4-101所示。这
个攻击过程就是CSRF利用的过程。
EHLXE
图4-101目标用户自动发布了文章
4.6.4分析CSRF漏洞代码
下面的代码是后台添加用户的代码，执行的流程如下所示。
获取GET参数usemame和参数password，然后通过select语句查询是否存在
对应的用户，如果用户存在，会通过S_SESSION设置一个session:isadmin
---
## Page 171
152Web安全攻防：渗造测试实战指南
=admin，否则设置session: isadmin=guest。
接下来判断session中的isadmin是否为admin，如果isadmin！= admin，说明用
户没有登录，那么跳转到登录页面。所以只有在管理员登录后才能执行添
加用户的操作。
获取POST参数usermame和参数password，然后插入users表中，完成添加用
户的操作。
<?php
session_start();
If (1sset($_GET[′1ogin′])){
$con=mysqli_connect(“1ocalhost*,“root°,“123456°,*test°);
If (mysqli_connect_errno())
{
echo“连接失败：*.mysql1_connect_error();
Susername = addslashes($_GET['username′]);
[,puonssed,]i3os = puomsseds
$result = mysqli_query($con,"select ·* from users where
(...*(puomsseds)spu*.,=,puonssed. pue ._*oweuuasns*.= oweuuasn,
$row = mysqli_fetch_array($result);
If ($row) (
$_SESSIoN[′1sadmin’] =*admdn′;
exit（“登录成功"）;
jelse{
,4san8, = [,urupesT,JNoIss3s"$
exit（"登录失败"）;
Jelsef
,asan8, - [,upupesT.]NoIss3s$
if ($_SESSION[′isadnin′]!= ‘adnin′){
exit（*请登录后台"）;
if (isset($_P0ST[′submit’])) {
上
1f (1sset($_posT[′username′])) {
$result1 = mysqli_query($con,“insert into users(username′,Il
(_(..*([,puomssed, ]1sods)spw*_.*._[,aueuasn, ]1sod"s*-.)S3nTvA ( .puoRssed
([,awas,]isos)xa
---
## Page 172
第4章Web安全原理剖析
153
）