{"process.pe.imports_names_var_entropy": {"dashed_name": "process-pe-imports-names-var-entropy", "description": "Variance for Shannon entropy calculation from the list of imported element names and types.", "flat_name": "process.pe.imports_names_var_entropy", "format": "number", "level": "extended", "name": "imports_names_var_entropy", "normalize": [], "original_fieldset": "pe", "short": "Variance for Shannon entropy calculation from the list of imported element names and types.", "type": "long"}}
{"process.pe.original_file_name": {"dashed_name": "process-pe-original-file-name", "description": "Internal name of the file, provided at compile-time.", "example": "MSPAINT.EXE", "flat_name": "process.pe.original_file_name", "ignore_above": 1024, "level": "extended", "name": "original_file_name", "normalize": [], "original_fieldset": "pe", "short": "Internal name of the file, provided at compile-time."}}
{"process.pe.pehash": {"dashed_name": "process-pe-pehash", "description": "A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.", "example": "73ff189b63cd6be375a7ff25179a38d347651975", "flat_name": "process.pe.pehash", "ignore_above": 1024, "level": "extended", "name": "pehash", "normalize": [], "original_fieldset": "pe", "short": "A hash of the PE header and data from one or more PE sections."}}
{"process.pe.product": {"dashed_name": "process-pe-product", "description": "Internal product name of the file, provided at compile-time.", "example": "Microsoft\u00ae Windows\u00ae Operating System", "flat_name": "process.pe.product", "ignore_above": 1024, "level": "extended", "name": "product", "normalize": [], "original_fieldset": "pe", "short": "Internal product name of the file, provided at compile-time."}}
{"process.pe.sections": {"dashed_name": "process-pe-sections", "description": "An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.", "flat_name": "process.pe.sections", "level": "extended", "name": "sections", "normalize": ["array"], "original_fieldset": "pe", "short": "Section information of the PE file.", "type": "nested"}}
{"process.pe.sections.entropy": {"dashed_name": "process-pe-sections-entropy", "description": "Shannon entropy calculation from the section.", "flat_name": "process.pe.sections.entropy", "format": "number", "level": "extended", "name": "sections.entropy", "normalize": [], "original_fieldset": "pe", "short": "Shannon entropy calculation from the section.", "type": "long"}}
{"process.pe.sections.name": {"dashed_name": "process-pe-sections-name", "description": "PE Section List name.", "flat_name": "process.pe.sections.name", "ignore_above": 1024, "level": "extended", "name": "sections.name", "normalize": [], "original_fieldset": "pe", "short": "PE Section List name."}}
{"process.pe.sections.physical_size": {"dashed_name": "process-pe-sections-physical-size", "description": "PE Section List physical size.", "flat_name": "process.pe.sections.physical_size", "format": "bytes", "level": "extended", "name": "sections.physical_size", "normalize": [], "original_fieldset": "pe", "short": "PE Section List physical size.", "type": "long"}}
{"process.pe.sections.var_entropy": {"dashed_name": "process-pe-sections-var-entropy", "description": "Variance for Shannon entropy calculation from the section.", "flat_name": "process.pe.sections.var_entropy", "format": "number", "level": "extended", "name": "sections.var_entropy", "normalize": [], "original_fieldset": "pe", "short": "Variance for Shannon entropy calculation from the section.", "type": "long"}}
{"process.pe.sections.virtual_size": {"dashed_name": "process-pe-sections-virtual-size", "description": "PE Section List virtual size. This is always the same as `physical_size`.", "flat_name": "process.pe.sections.virtual_size", "format": "string", "level": "extended", "name": "sections.virtual_size", "normalize": [], "original_fieldset": "pe", "short": "PE Section List virtual size. This is always the same as `physical_size`.", "type": "long"}}
{"process.pgid": {"dashed_name": "process-pgid", "description": "Deprecated for removal in next major version release. This field is superseded by `process.group_leader.pid`.\nIdentifier of the group of processes the process belongs to.", "flat_name": "process.pgid", "format": "string", "level": "extended", "name": "pgid", "normalize": [], "short": "Deprecated identifier of the group of processes the process belongs to.", "type": "long"}}
{"process.pid": {"dashed_name": "process-pid", "description": "Process id.", "example": 4242, "flat_name": "process.pid", "format": "string", "level": "core", "name": "pid", "normalize": [], "short": "Process id.", "type": "long"}}
{"process.previous.args": {"dashed_name": "process-previous-args", "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.", "example": "[\"/usr/bin/ssh\", \"-l\", \"user\", \"10.0.0.16\"]", "flat_name": "process.previous.args", "ignore_above": 1024, "level": "extended", "name": "args", "normalize": ["array"], "original_fieldset": "process", "short": "Array of process arguments."}}
{"process.previous.args_count": {"dashed_name": "process-previous-args-count", "description": "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.", "example": 4, "flat_name": "process.previous.args_count", "level": "extended", "name": "args_count", "normalize": [], "original_fieldset": "process", "short": "Length of the process.args array.", "type": "long"}}
{"process.previous.executable": {"dashed_name": "process-previous-executable", "description": "Absolute path to the process executable.", "example": "/usr/bin/ssh", "flat_name": "process.previous.executable", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.previous.executable.text", "name": "text", "type": "match_only_text"}], "name": "executable", "normalize": [], "original_fieldset": "process", "short": "Absolute path to the process executable."}}
{"process.real_group.id": {"dashed_name": "process-real-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.real_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.real_group.name": {"dashed_name": "process-real-group-name", "description": "Name of the group.", "flat_name": "process.real_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.real_user.id": {"dashed_name": "process-real-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.real_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.real_user.name": {"dashed_name": "process-real-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.real_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.real_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.saved_group.id": {"dashed_name": "process-saved-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.saved_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.saved_group.name": {"dashed_name": "process-saved-group-name", "description": "Name of the group.", "flat_name": "process.saved_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.saved_user.id": {"dashed_name": "process-saved-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.saved_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.saved_user.name": {"dashed_name": "process-saved-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.saved_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.saved_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.session_leader.args": {"dashed_name": "process-session-leader-args", "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.", "example": "[\"/usr/bin/ssh\", \"-l\", \"user\", \"10.0.0.16\"]", "flat_name": "process.session_leader.args", "ignore_above": 1024, "level": "extended", "name": "args", "normalize": ["array"], "original_fieldset": "process", "short": "Array of process arguments."}}
{"process.session_leader.args_count": {"dashed_name": "process-session-leader-args-count", "description": "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.", "example": 4, "flat_name": "process.session_leader.args_count", "level": "extended", "name": "args_count", "normalize": [], "original_fieldset": "process", "short": "Length of the process.args array.", "type": "long"}}
{"process.session_leader.command_line": {"dashed_name": "process-session-leader-command-line", "description": "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.", "example": "/usr/bin/ssh -l user 10.0.0.16", "flat_name": "process.session_leader.command_line", "level": "extended", "multi_fields": [{"flat_name": "process.session_leader.command_line.text", "name": "text", "type": "match_only_text"}], "name": "command_line", "normalize": [], "original_fieldset": "process", "short": "Full command line that started the process.", "type": "wildcard"}}
{"process.session_leader.entity_id": {"dashed_name": "process-session-leader-entity-id", "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.", "example": "c2c455d9f99375d", "flat_name": "process.session_leader.entity_id", "ignore_above": 1024, "level": "extended", "name": "entity_id", "normalize": [], "original_fieldset": "process", "short": "Unique identifier for the process."}}
{"process.session_leader.executable": {"dashed_name": "process-session-leader-executable", "description": "Absolute path to the process executable.", "example": "/usr/bin/ssh", "flat_name": "process.session_leader.executable", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.session_leader.executable.text", "name": "text", "type": "match_only_text"}], "name": "executable", "normalize": [], "original_fieldset": "process", "short": "Absolute path to the process executable."}}
{"process.session_leader.group.id": {"dashed_name": "process-session-leader-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.session_leader.group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.session_leader.group.name": {"dashed_name": "process-session-leader-group-name", "description": "Name of the group.", "flat_name": "process.session_leader.group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.session_leader.interactive": {"dashed_name": "process-session-leader-interactive", "description": "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.", "example": true, "flat_name": "process.session_leader.interactive", "level": "extended", "name": "interactive", "normalize": [], "original_fieldset": "process", "short": "Whether the process is connected to an interactive shell.", "type": "boolean"}}
{"process.session_leader.name": {"dashed_name": "process-session-leader-name", "description": "Process name.\nSometimes called program name or similar.", "example": "ssh", "flat_name": "process.session_leader.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.session_leader.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "process", "short": "Process name."}}
{"process.session_leader.parent.entity_id": {"dashed_name": "process-session-leader-parent-entity-id", "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.", "example": "c2c455d9f99375d", "flat_name": "process.session_leader.parent.entity_id", "ignore_above": 1024, "level": "extended", "name": "entity_id", "normalize": [], "original_fieldset": "process", "short": "Unique identifier for the process."}}
{"process.session_leader.parent.pid": {"dashed_name": "process-session-leader-parent-pid", "description": "Process id.", "example": 4242, "flat_name": "process.session_leader.parent.pid", "format": "string", "level": "core", "name": "pid", "normalize": [], "original_fieldset": "process", "short": "Process id.", "type": "long"}}
{"process.session_leader.parent.session_leader.entity_id": {"dashed_name": "process-session-leader-parent-session-leader-entity-id", "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.", "example": "c2c455d9f99375d", "flat_name": "process.session_leader.parent.session_leader.entity_id", "ignore_above": 1024, "level": "extended", "name": "entity_id", "normalize": [], "original_fieldset": "process", "short": "Unique identifier for the process."}}
{"process.session_leader.parent.session_leader.pid": {"dashed_name": "process-session-leader-parent-session-leader-pid", "description": "Process id.", "example": 4242, "flat_name": "process.session_leader.parent.session_leader.pid", "format": "string", "level": "core", "name": "pid", "normalize": [], "original_fieldset": "process", "short": "Process id.", "type": "long"}}