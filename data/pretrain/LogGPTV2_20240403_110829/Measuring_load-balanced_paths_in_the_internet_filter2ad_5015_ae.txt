the destination have in common. Instead of probing this in-
terface directly, we use UDP probes to the destination (with
a limited TTL value) to force the probed router to generate
ICMP error messages.
Computation of RTTs: We compute the RTT by sub-
tracting the time of the reception of the ICMP error message
from the time the probe is sent. For each selected ﬂow class,
we send 100 probes (at a constant rate, one probe every 50
ms) to this interface, using the associated ﬂow identiﬁer (i.e.,
UDP source and destination ports). We then keep only the
lowest RTT. This eliminates, we hope, any over-estimate of
the RTT due to the variability of queuing delays. Probes
and responses can be lost, and routers limit their ICMP
packet response rate, so we ignore any ﬂow class for which
we have fewer than 90 responses.
Comparison of delays: We use the minimum RTT for
each ﬂow class as representative of the delay over the cor-
responding load-balanced path. We set the threshold for
declaring that two ﬂow classes have diﬀerent end-to-end de-
lays at a diﬀerence of one millisecond in their representative
delays. To be sure that we are not declaring diﬀerences
where none are to be found, we batched delays in groups of
ten and looked at the variance of the minimum from each
group. These minimum delays have a variance of 0.5 ms or
less (often less than 0.2 ms), indicating that a diﬀerence of
1 ms can be considered as signiﬁcant.
7.3 Results
We measure RTTs between 43,889 source-destination pairs
with per-ﬂow load balancing. We had to trace 146,296 pairs
to ﬁnd them, given that only 30% of the pairs traverse a per-
ﬂow load balancer. We obtained enough RTT samples (i.e.,
replies to more than 90% of our probes) for 21,791 pairs.
Despite the high fraction of pairs with insuﬃcient measure-
ments, no doubt due to routers that rate-limit ICMP mes-
sages, we were still left with a large number of paths to
study.
For most of the source-destination pairs, there is no sig-
niﬁcant RTT diﬀerence among load-balanced paths. Only
12% of pairs (or 2,644) have a delay diﬀerence of more than
1 ms. Fig. 11 shows the distribution of the ratio, for source-
destination pairs, between their shortest- and longest-delay
paths. These results are an indication of the time an end-
host might save by selecting the appropriate ﬂow identiﬁer
to reach a particular destination. The Y axis is logarithmic
and plots the number of source-destination pairs with delay
ratio given by the X axis. Most pairs (59%) can save at
least 2% with respect to the longest delay, but only 2% of
pairs can save 10% or more. There are some rare cases with
a diﬀerence of 29% in the delay between the longest- and
shortest- delay paths. For instance, roncluster1 can reach
a user of the MindSpring ISP through the Road Runner
domain either with a 22 ms RTT or a 31 ms RTT.
We study the correlation between diamonds’ lengths (re-
spectively asymmetry) and delays, as shown in Fig. 12 left
(resp. right). Each group of bars represents all source-des-
s
r
i
a
p
n
o
i
t
a
n
i
t
s
e
d
-
e
c
r
u
o
s
#
 10000
 1000
 100
 10
 1
>=2ms
=2ms
<2ms
=
2
4
6
8
Length
10
12
 0  1  2  3  4  5  6  7
Asymmetry
Figure 12: Left plot: correlation between diamond length and delays. Each group of vertical bars represents
all the source-destination pairs traversing a diamond whose length is given by the X axis. Each individual
bar represents the number of those pairs having paths with either equal or diﬀerent delays to the destination.
Right plot: correlation between diamond asymmetry and delays, using the same conventions.
s
r
i
a
p
n
o
i
t
a
n
i
t
s
e
d
-
e
c
r
u
o
s
#
 1000
 100
 10
 1
 5
 0
Ratio between the min delay of the shortest path
 10
 15
 20
 25
 30
 and the min delay of the longest one (%)
Figure 11: Delay diﬀerence distribution.
tination pairs traversing a diamond with a length (resp. an
asymmetry) given by the X axis. Then each group has three
bars, one for pairs with all paths having equal delays, one
for pairs with a delay diﬀerence (between the longest path
and the shortest one) lower than 2 ms, and the third for
pairs with a diﬀerence greater than 2 ms.
The ﬁgure shows that the longer the load-balanced paths,
the more we ﬁnd delay diﬀerences. 94% of the paths with
short diamonds have paths of equivalent delays. Diamonds
longer than 4 lead to delay diﬀerences greater than 2 ms in
nearly 40% of the cases.
90% of the paths with symmetric diamonds (i.e., an asym-
metry equal to 0 in the ﬁgure) have delays that we consider
to be equal. This proportion decreases for asymmetric dia-
monds. We found that 61% of the paths with an asymmetry
equal to 2 have delay diﬀerences greater than 2 ms. Interest-
ingly, beyond an asymmetry of 2, an increase in the asym-
metry of diamonds correlates with a decrease in the number
of source-destination pairs with diﬀerent delays. An expla-
nation might be a lack of signiﬁcance in this range due to
the small size of the dataset, since we have only 134 pairs
traversing a diamond with an asymmetry greater than 2, in
comparison to the 11,391 pairs with a symmetric diamond.
Another possibility is the presence of hidden MPLS paths
that shorten some of the paths in a diamond, as discussed
in Sec. 6.3.2.
Our results clearly show that one can achieve RTT gains
towards some internet hosts simply by controlling the ports
used by an application. However, this phenomenon is not
widespread enough (only 12% of the source-destination pairs
with per-ﬂow load balancing) to be employable on a wide
scale for end-to-end performance improvements.
8. CONCLUSION
This paper makes three main points. First, Paris tracer-
oute’s Multipath Detection Algorithm can now measure the
load-balanced paths under per-destination load balancing,
in addition to per-ﬂow and per-packet load balancing. Sec-
ond, load-balanced paths are common in the internet, at
least as seen from our 15 vantage points. Third, in order
to ensure accurate RTT measurements under per-ﬂow load
balancing it is important to maintain both the forward and
the return ﬂow identiﬁer.
Given the high fraction of paths that traverse a load bal-
ancer, a natural question is whether applications can use the
native path diversity thus provided. In our dataset, there
are not many opportunities for applications that want fully-
disjoint paths or paths with very diﬀerent properties (such as
hop count or delay). Often, paths are disjoint just for a few
hops and have comparable delays. In cases where partially-
disjoint paths suﬃce, applications can easily take advantage
of multiple paths under per-ﬂow load balancing. It only re-
quires selecting the appropriate ﬂow identiﬁer from the list
provided by a utility such as Paris traceroute. Our charac-
terization of load-balanced paths, however, shows that the
fraction of paths that traverse per-ﬂow load balancers and
their characteristics depends on the location and the up-
stream connectivity of the source node. Therefore, applica-
tions that want to explore this type of path diversity should
ﬁrst use a utility such as Paris traceroute from their hosts
to evaluate the potential beneﬁts. Per-destination path di-
versity is more prevalent, but it is not as simple to use. One
could imagine giving multiple addresses to a host, or having
hosts connected to the same local network collaborate to use
the path diversity from a remote source.
In future work, we plan to improve the MDA to work un-
der uneven load balancing; develop a tool to ﬁnd the avail-
able bandwidth under per-ﬂow load balancing; and explore
our technique to control the return ﬂow identiﬁer to charac-
terize load balancing on the return path.
Acknowledgments
We are grateful to Mark Crovella, Jennifer Rexford, and
Vern Paxson for suggestions on the early versions of this
work, and to Arvind Krishnamurthy and the anonymous
reviewers for their useful remarks. We are indebted to David
Andersen for the access to the RON nodes and Alexandru
Crivat for providing the node at Bucharest. We also thank
Matthieu Latapy, Cl´emence Magnien and Fabien Viger for
their thoughtful comments. Xavier Cuvellier wrote the base
implementation of Paris traceroute. Team Cymru gave us
access to their AS mapping database.
9. REFERENCES
[1] Cisco, “How Does Load Balancing Work?” from the
Cisco Documentation, see
http://www.cisco.com/warp/public/105/46.html.
[2] Juniper, “Conﬁguring Load-Balance Per-Packet
Action,” from the JUNOS Policy Framework
Conﬁguration Guideline.
[10] S. Sinha, S. Kandula, and D. Katabi, “Harnessing
TCPs Burstiness using Flowlet Switching,” in Proc.
3rd ACM SIGCOMM Workshop on Hot Topics in
Networks (HotNets), November 2004.
[11] C. Villamizar, “OSPF Optimized Multipath
(OSPF-OMP),” IETF Internet Draft, February 1999.
[12] A. Elwalid, C. Jin, S. H. Low, and I. Widjaja,
“MATE: MPLS adaptive traﬃc engineering,” in Proc.
IEEE Infocom, April 2001.
[13] F. Giroire, A. Nucci, N. Taft, and C. Diot, “Increasing
the Robustness of IP Backbones in the Absence of
Optical Level Protection,” in Proc. IEEE Infocom,
March 2003.
[14] S. Savage, A. Collins, E. Hoﬀman, J. Snell, and T. E.
Anderson, “The end-to-end eﬀects of internet path
selection,” in Proc. ACM SIGCOMM,
August-September 1999.
[15] B. Augustin, T. Friedman, and R. Teixeira,
“Multipath Tracing with Paris Traceroute,” in Proc.
Workshop on End-to-End Monitoring (E2EMON),
May 2007.
[16] V. Paxson, “End-to-end internet packet dynamics,”
IEEE/ACM Trans. Networking, vol. 5, no. 5, pp.
139–154, September 1999.
[17] Cisco, “Cisco 7600 Series Routers Command
References,” from the Cisco Documentation.
[18] J. Bellardo and S. Savage, “Measuring packet
reordering,” in Proc. ACM SIGCOMM Internet
Measurement Workshop, November 2002.
[19] R. Callon, “Use of OSI IS–IS for Routing in TCP/IP
and Dual Environments,” IETF RFC 1195, December
1990.
[20] J. Moy, “OSPF Version 2,” IETF RFC 2328, April
[3] B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger,
1998.
T. Friedman, M. Latapy, C. Magnien, and R. Teixeira,
“Avoiding traceroute anomalies with Paris
traceroute,” in Proc. ACM SIGCOMM Internet
Measurement Conference, October 2006.
[21] Y. Rekhter, T. Li, and S. Hares, “A Border Gateway
Protocol 4 (BGP-4),” IETF RFC 4271, January 2006.
[22] Juniper, “Conﬁguring BGP to Select Multiple BGP
Paths,” JUNOS Software Documentation.
[4] D. Andersen, H. Balakrishnan, M. F. Kaashoek, and
[23] Cisco, “BGP Best Path Selection Algorithm,” from
R. Morris, “Resilient Overlay Networks,” in Proc. 18th
ACM Symposium on Operating Systems Principles,
October 2001.
the Cisco Documentation, see http://www.cisco.com/
warp/public/459/25.shtml#bgpmpath.
[24] Team Cymru, “IP to BGP ASN Lookup and Preﬁx
[5] R. Teixeira, K. Marzullo, S. Savage, and G. M.
Voelker, “Characterizing and Measuring Path
Diversity of Internet Topologies,” in Proc. ACM
SIGMETRICS, June 2003.
[6] ——, “In Search of Path Diversity in ISP Networks,”
in Proc. ACM SIGCOMM Internet Measurement
Conference, October 2003.
[7] N. Spring, R. Mahajan, and D. Wetherall, “Measuring
ISP topologies with Rocketfuel,” in Proc. ACM
SIGCOMM, August 2002.
[8] B. Huﬀaker, D. Plummer, D. Moore, and k claﬀy,
“Topology discovery by active probing,” in Proc.
Symposium on Applications and the Internet
(SAINT), January 2002.
[9] S. Kandula, D. Katabi, B. Davie, and A. Charny,
“Walking the Tightrope: Responsive Yet Stable
Traﬃc Engineering,” in Proc. ACM SIGCOMM,
August 2005.
Mapping Services,” see
http://www.cymru.com/BGP/asnlookup.html.
[25] Z. M. Mao, D. Johnson, J. Rexford, J. Wang, and
R. H. Katz, “Scalable and Accurate Identiﬁcation of
AS-level Forwarding Paths,” in Proc. IEEE Infocom,
March 2004.
[26] Z. M. Mao, J. Rexford, J. Wang, and R. H. Katz,
“Towards an accurate AS-level traceroute tool,” in
Proc. ACM SIGCOMM, August 2003.
[27] Cisco, “How Does Unequal Cost Path Load Balancing
(Variance) Work in IGRP and EIGRP?” from the
Cisco Documentation.
[28] R. Bonica, D. Gan, D. Tappan, and C. Pignataro,
“ICMP Extensions for Multiprotocol Label
Switching,” IETF RFC 4950, August 2007.
[29] D. Malone and M. Lucky, “Analysis of ICMP
Quotations,” in Proc. Passive and Active
Measurement Workshop, April 2007.