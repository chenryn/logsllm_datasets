User: I am running a Python program which uses the multiprocessing module to spawn some worker threads. Using Pool.map these digest a list of files.
At some point, I would like to stop everything and have the script die.
Normally Ctrl+C from the command line accomplishes this. But, in this instance, I think that just interrupts one of the workers and that a new worker is spawned.
So, I end up running ps aux | grep -i python and using kill -9 on the process ids in question.
Is there a better way to have the interrupt signal bring everything to a grinding halt?
Assistant: I found that using the python signal library works pretty well in this case. When you initialize the pool, you can pass a signal handler to each thread to set a default behavior when the main thread gets a keyboard interrupt.
If you really just want everything to die, catch the keyboard interrupt exception in the main thread, and call pool.terminate().