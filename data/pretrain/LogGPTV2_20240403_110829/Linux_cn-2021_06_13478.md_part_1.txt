---
author: Bill Dyer
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 7163
date: '2021-06-12 16:18:12'
editorchoice: false
excerpt: 手册页，即参考手册页的简称，是你进入 Linux 的钥匙。你想知道的一切都在那里，包罗万象。
fromurl: https://itsfoss.com/linux-man-page-guide/
id: 13478
islctt: true
largepic: /data/attachment/album/202106/12/161749re6iiuhzn9ni2in4.jpg
permalink: /article-13478-1.html
pic: /data/attachment/album/202106/12/161749re6iiuhzn9ni2in4.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 手册页，即参考手册页的简称，是你进入 Linux 的钥匙。你想知道的一切都在那里，包罗万象。
tags:
- 手册页
- man
thumb: false
title: RTFM！如何阅读（和理解）Linux 中神奇的手册页
titlepic: true
translator: wxy
updated: '2021-06-12 16:18:12'
---
![](/data/attachment/album/202106/12/161749re6iiuhzn9ni2in4.jpg)
 手册页   man pages ，即 参考手册页   reference manual pages 的简称，是你进入 Linux 的钥匙。你想知道的一切都在那里，包罗万象。这套文档永远不会赢得普利策奖，但这套文档是相当准确和完整的。手册页是主要信源，其权威性是众所周知的。
虽然它们是源头，但阅读起来并不是最令人愉快的。有一次，在很久以前的哲学课上，有人告诉我，阅读 [亚里士多德](https://www.britannica.com/biography/Aristotle) 是最无聊的阅读。我不同意：说到枯燥的阅读，亚里士多德远远地排在第二位，仅次于手册页。
乍一看，这些页面可能看起来并不完整，但是，不管你信不信，手册页并不是为了隐藏信息 —— 只是因为信息量太大，这些页面必须要有结构，而且信息是以尽可能简短的形式给出的。这些解释相当简略，需要一些时间来适应，但一旦你掌握了使用它们的技巧，你就会发现它们实际上是多么有用。
### Linux 中的手册页入门
这些页面是通过一个叫做 `man` 的工具查看的，使用它的命令相当简单。在最简单的情况下，要使用 `man`，你要在命令行上输入 `man`，后面加一个空格和你想查询的命令，比如 `ls` 或 `cp`，像这样：
```
man ls
```
`man` 会打开 `ls` 命令的手册页。
![](/data/attachment/album/202106/12/161812p3q5pip4bj79pqd7.png)
你可以用方向键上下移动，按 `q` 退出查看手册页。通常情况下，手册页是用 `less` 打开的，所以 `less` 命令的键盘快捷键在 `man` 中也可以使用。
例如，你可以用 `/search_term` 来搜索一个特定的文本，等等。
有一个关于手册页的介绍，这是一篇值得阅读介绍。它非常详细地说明了手册页是如何布局和组织的。
要看这个页面，请打开一个终端，然后输入：
```
man man
```
![man page of man](/data/attachment/album/202106/12/161813twrpksrrrvpmrnyw.png)
### 节
在你开始更深入地研究手册页之前，知道手册页有一个固定的页面布局和一个归档方案会有帮助。这可能会让新手感到困惑，因为我可以说：“看手册页中关于 `ls` 的 NAME  节   section ”，我也可以说：“看第 5  节   section 中的 `passwd` 的手册页。”
我把 “ 节   section ” 这个词用斜体字表示，是为了显示混淆的来源。这个词，“节” 被用于两种不同的方式，但并不总是向新人解释其中的区别。
我不确定为什么会出现这种混淆，但我在培训新用户和初级系统管理员时看到过几次这种混淆。我认为这可能是隧道视野，专注于一件事会使一个人忘记另一件事。一叶障目，不见泰山。
对于那些已经知道其中的区别的人，你可以跳过这一小节。这一部分是针对那些刚接触到手册页的人。
这就是区别：
#### 对于手册页
单独的手册页是用来显示信息块的。例如，每个手册页都有一个“NAME”节，显示命令的名称和简短的描述。还会有另一个信息块，称为“SYNOPSIS”，显示该命令是如何使用的，以此类推。
![](/data/attachment/album/202106/12/161813rnnjdffu1u1t44ql.png)
每个手册页都会有这些，以及其他的标题。这些在各个手册页上的节，或者说标题，有助于保持事情的一致性和信息的分工。
#### 对于手册
使用“节”，如 “查看第 5 节中的 `passwd` 的手册页”，是指整个手册的内容。当我们只看一页时，很容易忽略这一点，但是 `passwd` 手册页是同一本手册的一部分，该手册还有 `ls`、`rm`、`date`、`cal` 等的手册页。
整个 Linux 手册是巨大的；它有成千上万的手册页。其中一些手册页有专门的信息。有些手册页有程序员需要的信息，有些手册页有网络方面的独特信息，还有一些是系统管理员会感兴趣的。
这些手册页根据其独特的目的被分组。想想看，把整个手册分成几个章节 —— 每章有一个特定的主题。有 9 个左右的章节（非常大的章节）。碰巧的是，这些章节被称为“节”。
总结一下：
* 手册中单页（我们称之为“手册页”）的节是由标题定义的信息块。
* 这个大的手册（所有页面的集合）中的章节，刚好被称为“节”。
现在你知道区别了，希望本文的其余部分会更容易理解。
### 手册页的节
你将会看到不同的手册页，所以让我们先研究一下各个页面的布局。
手册页被分成几个标题，它们可能因提供者不同而不同，但会有相似之处。一般的分类如下：
* `NAME`（名称）
* `SYNOPSIS`（概要）
* `DESCRIPTION`（描述）
* `EXAMPLES`（例子）
* `DIAGNOSTICS`（诊断）
* `FILES`（文件）
* `LIMITS`（限制）
* `PORTABILITY`（可移植性）
* `SEE ALSO`（另见）
* `HISTORY`（历史）
* WARNING`（警告）或`BUGS`（错误）
* `NOTES`（注意事项）
`NAME` - 在这个标题下是命令的名称和命令的简要描述。
`SYNOPSIS` - 显示该命令的使用方法。例如，这里是 `cal` 命令的概要：
```
cal [Month] [Year]
```
概要以命令的名称开始，后面是选项列表。概要采用命令行的一般形式；它显示了你可以输入的内容和参数的顺序。方括号中的参数（`[]`）是可选的；你可以不输入这些参数，命令仍然可以正常工作。不在括号内的项目必须使用。
请注意，方括号只是为了便于阅读。当你输入命令时，不应该输入它们。
`DESCRIPTION` - 描述该命令或工具的作用以及如何使用它。这一节通常以对概要的解释开始，并说明如果你省略任何一个可选参数会发生什么。对于长的或复杂的命令，这一节可能会被细分。
`EXAMPLES` - 一些手册页提供了如何使用命令或工具的例子。如果有这一节，手册页会尝试给出一些简单的使用例子，以及更复杂的例子来说明如何完成复杂的任务。
`DIAGNOSTICS` - 本节列出了由命令或工具返回的状态或错误信息。通常不显示不言自明的错误和状态信息。通常会列出可能难以理解的信息。
`FILES` - 本节包含了 UNIX 用来运行这个特定命令的补充文件的列表。这里，“补充文件”是指没有在命令行中指定的文件。例如，如果你在看 `passwd` 命令的手册，你可能会发现 `/etc/passwd` 列在这一节中，因为 UNIX 是在这里存储密码信息。
`LIMITS` - 本节描述了一个工具的限制。操作系统和硬件的限制通常不会被列出，因为它们不在工具的控制范围内。
`PORTABILITY` - 列出其他可以使用该工具的系统，以及该工具的其他版本可能有什么不同。
`SEE ALSO` - 列出包含相关信息的相关手册页。
`HISTORY` - 提供命令的简要历史，如它第一次出现的时间。
`WARNING` - 如果有这个部分，它包含了对用户的重要建议。
`NOTES` - 不像警告那样严重，但也是重要的信息。
同样，并不是所有的手册都使用上面列出的确切标题，但它们足够接近，可以遵循。
### 手册的节
整个 Linux 手册集合的手册页传统上被划分为有编号的节：
**第 1 节**：Shell 命令和应用程序 **第 2 节**：基本内核服务 - 系统调用和错误代码 **第 3 节**：为程序员提供的库信息 **第 4 节**：网络服务 - 如果安装了 TCP/IP 或 NFS 设备驱动和网络协议 **第 5 节**：文件格式 - 例如：显示 `tar` 存档的样子 **第 6 节**：游戏 **第 7 节**：杂项文件和文档 **第 8 节**：系统管理和维护命令 **第 9 节**：不知名的内核规格和接口
将手册页分成这些组，可以使搜索更有效率。在我工作的地方，我有时会做一些编程工作，所以我花了一点时间看第 3 节的手册页。我也做一些网络方面的工作，所以我也知道要涉足网络部分。作为几个实验性机器的系统管理员，我在第 8 节花了很多时间。
将手册网归入特定的节（章节），使搜索信息更加容易 —— 无论是对需要搜索的人，还是对进行搜索的机器。
你可以通过名称旁边的数字来判断哪个手册页属于哪个部分。例如，如果你正在看 `ls` 的手册页，而页面的最上面写着。 `LS(1)`，那么你正在浏览第 1 节中的 `ls` 页面，该节包含关于 shell 命令和应用程序的页面。
下面是另一个例子。如果你在看 `passwd` 的手册页，页面的顶部显示: `PASSWD(1)`，说明你正在阅读第 1 节中描述 `passwd` 命令如何更改用户账户密码的手册页。如果你看到 `PASSWD(5)`，那么你正在阅读关于密码文件和它是如何组成的的手册页。
![](/data/attachment/album/202106/12/161814lztayx4yxyyry4ya.png)
`passwd` 恰好是两个不同的东西：一个是命令的名称，一个是文件的名称。同样，第 1 节描述了命令，而第 5 节涉及文件格式。
括号中的数字是重要的线索 —— 这个数字告诉你正在阅读的页面来自哪一节。
### 搜索一个特定的节
基本命令：
```