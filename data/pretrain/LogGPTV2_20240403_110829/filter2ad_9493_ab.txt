Processor | CPU信息  
Videocard | 显卡信息  
表2 上线请求字段含义
C&C服务器返回的控制指令数据包内容如图16所示。
图 16 控制指令数据包
图16中各个字段含义如表3所示。
**字段名称** | **字段含义**  
---|---  
Action | 指令含义，目前仅支持Execute  
Current | 未知，样本中未做判断  
ExecuteHidden | 是否隐藏执行  
FinalPoint | 未知  
ID | 任务ID  
Status | 状态是否激活  
Target | 存储扩展模块的URL  
Visible | 是否可见  
表3 上线应答字段含义
在对“Target”字段中的扩展模块进行分析后，我们发现其是一个与Dropper模块类似的功能模块，用于下载核心窃密模块，故不再做过多的介绍。
## 3.3 核心窃密模块
“核心窃密模块”是由Dropper模块下载并命名为`11111111.exe`，它的核心代码经解密后在内存中执行以达到绕过杀毒软件的效果。
### 3.3.1 自解密执行
反编译“核心窃密模块”，结果显示该模块仅有2个类，一个是入口函数类（入口点`_0x_u1632184666.Main`），另一个是加密解密类（`_0x_u1005254334`），类名称和函数名均是被混淆过的，如图17所示。
 图 17 入口类和加密解密类
“核心窃密模块”执行后先调用`_0x_u1005254334`函数对内置的字符串进行解密。解密过程是先将字符串转为16进制，然后使用硬编码的密钥`QDAWDfskVf`与该16进制数据进行异或，异或的结果再Base64解码得到最终的可执行程序（Holivar.exe）。相关代码如图18所示。
图 18解密代码
“核心窃密模块”通过调用`_0x_u956374591`函数实现内存加载并执行Holivar.exe，并向Holivar.exe传递2个参数，分别为存储服务器（“195.161.62.146”）和BuildID
（“MERCEDES”）。代码如图19所示。
图 19内存加载执行
### 3.3.2 窃密功能分析
“核心窃密模块”在内存中加载并执行Holivar.exe，由Holivar.exe负责实施窃取受害人的加密货币财产和隐私数据。为了便于描述，我们在分析窃密功能时均称之为“Holivar模块”。
#### 3.3.2.1 下载窃密配置
“Holivar模块”启动后会尝试以websocket协议、2012端口与存储服务器（“195.161.62.146”）建立连接，如果不能连接，则一直等待；如果连接成功，则从存储服务器下载配置信息。通过修改配置信息，黑客可以指定要窃取数据的类型。图20为下载和解析窃密配置信息代码。
图 20 下载和解析配置信息
图20中各个字段含义如4表所示。
**字段名称** | **字段含义**  
---|---  
GrabBrowserCredentials | 窃取浏览器凭证  
GrabColdWallets | 窃取数字货币钱包  
GrabDesktopFiles | 窃取文件  
GrabFtp | 窃取FTP凭证  
GrabRdp | 窃取Rdp凭证  
GrabDiscord | 窃取Discord凭证  
GrabTelegram | 窃取Telegram凭证  
Extensions | 窃取文件类型  
表4 窃密配置信息字段含义
解析完窃密配置信息后，“Holivar模块”便开始按照配置信息收集受感染主机的隐私数据。
#### 3.3.2.2 获取客户端信息
“Holivar模块”会收集受感染主机的客户端信息，其中包括该窃密软件的BuildID、显示器屏幕分辨率、受感染主机的时间、时区、用户名、公网IP、国家、城市、操作系统、硬件信息、反病毒软件、操作系统语言信息。利用这些客户端信息，黑客可以区分不同的受感染主机，通过筛选后对特定目标进行攻击。信息收集相关代码如图21所示。
 图 21 获取客户端信息
通过对“Holivar模块”进行二进制分析后，我们发现黑客可能利用了GitHub上的一个开源项目（）实现了获取设备的硬件信息和反病毒软件信息。开源代码与“Holivar模块”的代码片段比较如图22所示。
图 22 GitHub开源代码与Holivar模块代码对比
#### 3.3.2.3 窃取浏览器数据
反汇编代码显示“Holivar模块”能够窃取基于Chromium和Firefox内核的浏览器的数据。“Holivar模块”通过遍历和查找`%USERPROFILE%\\AppData\\Local`和`%USERPROFILE%\\AppData\\Roaming`两个目录下的Login
Data、Web Data、Cookies文件，获取符合条件的浏览器文件夹。相关代码如图23所示。
图 23获取Profile目录
在得到浏览器的安装路径后，“Holivar模块”通过拼接目录获取Cookies、autofill、Credit
Cards、Credentials的全路径，获得浏览器中存储的隐私数据。反编译后的代码如图24所示。
图 24读取Cookies
#### 3.3.2.4 窃取加密货币钱包
“Holivar模块”能够窃取10种加密货币客户端软件的钱包文件，其中包括6种加密货币官方客户端钱包，如：比特币、莱特币、字节币、达世币、以太币、门罗币，此外还有比特币的轻量钱包客户端Electrum和加密货币交易软件Exodus的钱包。恶意软件获取受感染主机中数字钱包的信息如表5所示。
**货币名称** | **钱包信息**  
---|---  
Bitcoin | 读取%AppData%\Bitcoin\wallet.dat文件获取钱包信息  
Bitcoin-Qt | 先查询注册表“HKCU\Software\Bitcoin-Qt\strDataDir”得到安装路径，然后读取该路径下的“wallet.dat”文件  
Bytecoin | 读取“%AppData%\bytecoin\”路径下的后缀名为“*.wallet”的文件获取钱包信息  
Dash-Qt | 先查询注册表“HKCU\Software\Dash-Qt\strDataDir”得到安装路径，然后读取该路径下的“wallet.dat”文件  
Electrum | 遍历“%AppData%\ Electrum\ wallets\”路径下的文件获取钱包信息  
Ethereum | 遍历“%AppData%\ Ethereum \ wallets\”路径下的文件获取钱包信息  
Exodus | 遍历“%AppData%\ Exodus\ exodus.wallet\”路径下的文件获取钱包信息  
Litecoin | 读取“% AppData %\Litecoin\wallet.dat”文件获取钱包信息  
Litecoin-Qt | 先查询注册表“HKCU\Software\Litecoin-Qt\strDataDir”得到安装路径，然后读取该路径下的“wallet.dat”文件  
Monero | 恶意代码通过查询注册表“HKCU\Software\ monero-core\wallet_path”得到Monero币钱包文件路径  
表5 钱包文件位置信息获取方法
#### 3.3.2.5 窃取文件
“Holivar模块”具有窃取受感染主机任意文件的功能，其窃取的文件路径和文件后缀是从上文中“下载窃密配置”获得。黑客可以按照攻击需求灵活的配置要窃取文件的目录以及文件后缀名。通过逆向分析我们发现，“Holivar模块”仅上传小于等于2097152字节的文件。代码如图25所示。