**I'm submitting a...** (please check one with "x")
- [x] Bug report => Please search GitHub for a similar issue or pull request before submitting
- [ ] Feature request
- [ ] Support request => Please do not submit support requests here. Instead, see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question

**Current Behavior**
When multiple `@HostListener` decorators are applied to the same function, only the first decorator is recognized. For example, in the following code:

```typescript
@HostListener('click', ['$event'])
@HostListener('mouseover', ['$event'])
@HostListener('focus', ['$event'])
private eventRouter(e: Event) {
    console.log(e);
}
```

Only the `click` event triggers the `eventRouter` function. The `mouseover` and `focus` events are not triggered.

**Expected Behavior**
All `@HostListener` decorators should be correctly applied and trigger the `eventRouter` function when their respective events occur.

**Minimal Reproduction of the Problem with Instructions**
1. Create an Angular component.
2. Apply multiple `@HostListener` decorators to a single method as shown in the example above.
3. Trigger the events (e.g., click, mouseover, focus) and observe that only the first event triggers the method.

**Motivation / Use Case for Changing the Behavior**
This change would allow developers to handle multiple events in a single method, simplifying the code and improving maintainability.

**Environment Details:**
- **Angular Version:** 2.3.0
- **Browser:** All
- **Language:** TypeScript 2.0.7
- **Node (for AoT issues):** `node --version` = [Please provide your Node.js version]

**Additional Information**
[If applicable, add any other context, screenshots, or additional information about the problem here.]