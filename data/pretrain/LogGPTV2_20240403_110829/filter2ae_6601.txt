# 【技术分享】ShadowBrokers：针对EnglishmansDentist Exploit的分析

##### 译文声明
本文为翻译文章，原文来源：microsoft.com。具体内容表达及含义以原文为准。

**译者**：[myswsun](http://bobao.360.cn/member/contribute?uid=2775084127)  
**预估稿费**：200 RMB  
**投稿方式**：发送邮件至 linwei#360.cn 或登录网页版在线投稿

## 0x00 前言
我们继续撰写系列文章来剖析2017年4月由ShadowBrokers公布的漏洞利用。在前两篇文章中，我们讨论了与SMB相关的漏洞利用（EternalChampion和EternalSynergy）。本次我们将分析一个名为EnglishmansDentist的漏洞利用工具，该工具专门针对Exchange Server 2003设计。

EnglishmansDentist的目标是Exchange 2003邮件服务器，它利用了Windows Server 2003底层操作系统提供的共享库中的渲染漏洞，这些库默认配置为Exchange 2003所用。新版的操作系统（如Windows Server 2008及以上）和更新版本的Exchange Server（如2007及以上）不受此漏洞影响。因此，对于新平台的用户，无需采取任何措施。

正如MSRC博客此前宣布的，在考虑到代码已武器化及威胁规模的评估后，微软决定在6月为停止支持的平台（如Windows XP和Server 2003）发布更新补丁，以保护那些无法升级到新产品的客户。

本文将深入探讨该漏洞的根本原因、对微软产品的影响、漏洞利用的方式以及现代缓解措施如何破坏这种利用。

## 0x01 概述
这个漏洞的根本原因在于动态库（OLECNV32.dll）中的一个内存破坏bug，该库用于渲染使用旧文件格式（如QuickDraw PICT）编码的图像。这个图形库在Windows XP和Server 2003上默认存在。Exchange Server 2003使用这个图形库来渲染通过电子邮件附件形式传播的PICT内容。虽然底层bug存在于操作系统中，但触发漏洞代码的攻击向量是通过Exchange渲染例程调用的OLE调用，并通过精心构造的电子邮件触发。

当微软安全工程师分析共享组件（如图形库）中的漏洞时，需要回答两个非常重要的问题：
1. 哪些仍在支持的产品可能使用或分发这个有漏洞的共享库？
2. 有漏洞的库的代码是否复制或重用到其他组件中？

对于第一个问题，我们确定有漏洞的OLECNV32.dll库只存在于已停止支持的平台（如Windows Server 2003和XP）中，前者是Exchange Server 2003的默认安装平台。研究受影响的平台和可能的Exchange Server安装组合后，我们得到了以下矩阵，帮助理解哪些产品组合暴露于EnglishmansDentist的威胁中。

Exchange Server 2007不受此攻击影响，尽管该库仍可能存在于硬盘上（在Windows Server 2003和Exchange 2007中不太常见），但图形渲染引擎不再使用OLECNV32.dll库来渲染PICT图像。新版本的Exchange Server（如2010和2013）也不受此bug影响，因此无需考虑它们。

关于源代码的调查，我们追踪了老版本Office中PICT的有漏洞代码是如何整合并重用的。在此期间，我们发现尽管该bug被开发者复制到了Office的一个图形过滤器中，但微软的代码安全检查和模糊测试发现了这个bug，并在2006年内部修复了它。这是一个典型的bug冲突案例，内部渗透测试和模糊测试可能会提前阻止攻击者利用漏洞。

EnglishmansDentist可能是在2005年前编写的，因为针对Exchange Server 2003 SP2的测试显示，该漏洞利用似乎不能正常工作（会崩溃），并且它仅针对32位操作系统，这可能是因为十年前64位架构尚未普及。

## 0x02 漏洞利用条件和传播机制
EnglishmansDentist需要攻击者在目标Exchange 2003邮件服务器上至少有一个可靠的邮件账户（用户名和密码）。实际上，漏洞利用首先进行一系列验证和检查，确保可靠的账户能够登录并成功检查邮件。漏洞利用还需要另一个电子邮件账户（真假皆可），用于发送恶意格式的PICT附件给可靠的账户。

在将恶意的PICT附件传播到目标邮件服务器后，该工具使用可靠账户的凭据登录，并强制Exchange服务器通过多种可靠协议（如OWA、IMAP、POP3）之一解析并渲染恶意附件。由于渲染代码在服务端执行，成功利用将导致在Exchange服务器进程（具有SYSTEM权限）的上下文中执行任意代码。

漏洞利用后，EnglishmansDentist进入监听模式，等待连接的shellcode。一旦发生这种情况，工具命令Exchange服务器删除传播漏洞利用的恶意邮件，并移除攻击痕迹。

## 0x03 漏洞：CVE-2017-8487
为了理解这个漏洞，读者必须熟悉PICT图形规范和该文件格式定义的操作码。网上有一些参考资料可以帮助解析这种旧文件格式。另一个参考是PICT内部操作码解析代码的细节。

在测试Exchange Server 2003 SP2的漏洞利用时，我们在测试环境中观察到崩溃问题；本文仅包含与分析该漏洞相关的信息和模块，红色标记表示攻击者控制的栈帧，黄色表示感兴趣的函数名。

从调用堆栈中可以看到，漏洞存在于OLECNV32.dll导出函数QD2GDI()中。该函数负责转换并渲染QuickDraw图像，供Exchange Server 2003中的“store.exe”进程使用。当通过OWA解析新邮件附件时，该例程会被调用；解析器的攻击面达到了OLE32中。

QD2GDI()的内部代码在解析LongComment记录（通常用0xA1标识）时存在内存破坏bug。通过创建一个包含大于32字节的fontName字符串的PP_FONTNAME子记录的恶意构造的PICT文件可以利用这个bug，从而触发固定大小变量的越界读写内存破坏。

EnglishmansDentist提供的恶意构造的PICT图片如下所示：

该图片始终以两个硬编码的头开始。一个是用于将PICT图片整合到TNEF OLE容器中（通过Exchange使用的邮件附件格式）；第二个表示一个正常的PICT头。两个静态头紧接着是TxFont记录和触发内存破坏的有漏洞的LongComment记录。

恶意的PICT是由EnglishmansDentist中的两个例程生成的，位于偏移0x404621和0x404650处。通过汇编静态头和多个PICT头完成，其中包括恶意构造的0xA1操作码和其他用于传播ROP链和加密的shellcode payload的记录。

解码头并通过QD2GDI执行记录将立即命中恶意构造的0xA1操作码，并触发漏洞。

如前所述，该bug在微软内部已被发现。因此，GetString()函数多年前已经修改，要求调用者传入缓冲区长度，并加强检查以避免越界读写。

## 0x04 漏洞利用：缺少缓解措施
不幸的是，在类似Windows Server 2003的环境中利用越界覆盖漏洞很容易，因为缺乏基本的缓解措施，如ASLR和CFG。在Windows Server 2003中，DEP可以通过绕过ASLR来简单地绕过。没有内存布局随机化，攻击者可以使用预先计算好的ROP链调用VirtualAlloc，并从shellcode转移到新分配的可执行缓冲区中。

该漏洞利用首先通过恶意格式的0xA1记录触发内存破坏漏洞，并通过越界覆盖破坏存储其他对象的OLECNV32结构体。漏洞利用的目标是全局fontTable()数组中的一个字体条目，稍后会复制到gdiEnv结构体中，通过覆盖函数指针来控制执行。

下面是在漏洞利用期间捕获的内存转储，展示了fontTable[]数组的例子，一些条目被有漏洞的GetString()引起的内存覆盖破坏。来自PICT文件的恶意数据可以覆盖fontTable[]，并指向初始ROP gadget（0x6D8B1CFD）。

破坏fontTable[]之后，利用其他PICT操作码触发更多漏洞。这将导致OLECNV32执行更多的字符串拷贝操作，将恶意格式的字体信息复制到OLECNV32!gdiEnv数据结构中。最后的字符拷贝操作将导致函数指针被覆盖，攻击者可以在EnumFonts函数被调用时作为回调来控制。

## 0x05 漏洞利用：针对英文、德文、韩文和中文的ROP链
漏洞利用使用位于Dbghelp.dll中的ROP gadget，该库通常会被Exchange Server store.exe进程加载到内存空间中。第一个版本的漏洞利用也可以使用OLDCNV32.dll gadget代替。即使缺少ALSR随机化，获得稳定且通用的漏洞利用也不是立即可行的，因为Dbghelp.dll是一个依赖语言的库（不同操作系统语言有不同的版本）。在不同的Windows Server 2003版本中这是不同的。

攻击者通过预先计算他们感兴趣的每个操作系统版本中的正确偏移。实际上，配置文件XML包含了针对Windows Server 2003英文版（以及德文、韩文、简体中文、繁体中文）开发的ROP链。

解码EnglishmansDentist中配置的ROP gadget将映射到Dbghelp.dll模块中的代码。

第一个gadget通过覆盖函数指针执行（0x6d8b1cfd），进行栈对齐和保持EBP平衡（add 0x1A0），然后使用LEAVE/RET指令组合转移控制到完整的ROP链中。完整的ROP链（在内存中可见）如下所示。该ROP链很小，用于分配内存以绕过DEP（0x8888字节），并将shellcode（egghunter）复制到该区域，以使用SYSTEM权限运行最终的后门payload。

## 0x06 检测和缓解措施
如前所述，Windows Server 2003缺乏基本的缓解措施。由于ASLR、CFG和其他缓解措施，在现代操作系统（如Windows 10创新者更新或Windows Server 2016）中利用此类漏洞变得非常困难。同时，完整性等级和容器（沙箱）的引入使得微软限制了一些图像渲染组件，以最小化类似解析漏洞中的破坏程度（例如，Office保护模式、浏览器的AppContainer和字体渲染的字体沙箱）。

此外，如今微软编译器中的安全检查和模糊测试能够找到并消除类似的bug，从源代码级别减少bug。

我们提供了一个Yara规则来检测通过EnglishmansDentist通过邮件传播的PICT图形。