编译好的二进制发行版，你可以通过将它们解压到不同目录的方式来实现。对于需要自己编译
其中有些选项实际上是系统变量（标志就是其名字里有下划线），但是可以在服务器启动时
定它们。不过，如果你是根据源代码来编译的，那么使用选项文件的一个原因就是：采用这
务器把日志信息
接下来的讨论列举了几种类型的选项。如果不依据每个服务器来对其进行设置，可能就会
其他问题则发生在服务器启动时。对于有些参数，每一个服务器进程都必须拥有一个唯-
口对于下表里的各个网络接口选项，每一个服务器必须拥有不同的值，目的在于防止多个服务
口如果你运行着几个不同版本的服务器，那么通常情况下，每个发行版本都会被安装在不
你可以在
内存名（分别为 MySQL 和 MYSQL），而其他所有服务器都必须指定不同的名字。
-shared-memory-base-name。这时，只有一个服务器可以使用默认的命名管道名和共享
--enable-named-pipe 和--shared-memory 的服务器，才会需要选项--socket 和
器在同一个接口上进行监听。
的基本目录都是一样的，但是各自的数据目录却位于不同位置，很可能就在客户的主目录里。
在
个服务器实例，而该服务器使用的是客户特定相关的数据目录。在这种情况下，所有服务器
可能会为其客户提供一套公用的MySQL服务器和客户端程序，但是会针对每一位客户运行一
在许多情况下，数据目录是基本目录的子目录，但并不总是如此。例如，因特网服务提供商
地指定这些值。
点通常是强制性的；而在Unix里，则强烈推荐这样做。）使用下表里的选项可以显式
同的基本目录下。每一个服务器都应该拥有其自己的数据目录。（在Windows里，这一
自
Windows里，只有那些为启用命名管道和共享内存连接而在启动时带上选项
用
根据源代码编译的服务器
从在启动时指定服务器的各个选项（通常情况下是在选项文件里）。或者，如果你运行
了
--shared-memory-base-r
CEI
-socket=file_name
-datadir=dir_name
--basedir=dir_name
1志，则每个服务器还必须把日志信息写入自己的那一组日志文件。让不同的服
人相同的文件会引发很多问题。
选项
器二进制文件，还是运行的同一个二进制文件的多个实例，都需如此。
选项
name
器二进制文件，那么你也可以在构建过程中为每一个要使
name
数据目录的路径名
MySQL安装根目录的路径名
共享内存连接所使用的共享内存名（仅限于Windows）
Unix域套接字文件的路径名或Windows命名管道名
TCP/IP连接端口号
用途
12.9运行多个服务器
用途
463
用
行
---
## Page 484
述几个我用来分隔我自己的MySQL安装的配置约定。
对应于哪个版本的 MySQL区分出来。本节将展示一种可以实现这一目标的方法。本节还将描
同的安装基本目录。如果把服务器的版本号合并到基本目录名称里，就可以轻易地将哪个目录
开的最简单方法是：在运行CMake时设置CMAKE_INSTALL_PREFIX，让每个服务器都有一个不
12.9.2配置和编译不同的服务器
464
我把所有的 MySQL 安装在一个公共目录/var/mysql里，把给定的发行包安装在
如果想通过源代码来构建不同版本的服务器，必须将它们安装在不同的位置。将它们分隔
口
口
口
口
口对于状态文件（如PID文件）和日志文件，每个服务器都必须使用不同的文件名。否则，多
04
在Windows 里，每一个以服务方式安装的服务器都必须使用唯一的服务名。
中每一个用户都“拥有”一个独立的数据目录。
要的注册账户。这一点与你为不同用户提供单独的MySQL服务器实例的操作很像，其
在Unix里，可能有必要为每个服务器指定一个--user 选项，
home_dir。更多相关信息请参考12.5.3节。
会将其日志写入数据目录。要想改变这个位置，可以设置系统变量innodb_log_group_
引擎存放其日志的那个目录对于每一个服务器来说都必须是唯一的。默认情况下，InnoDB
必须把每个使用InnoDB的服务器都配置成让其使用自己的系统表空间。另外，InnoDB存储
以把出错输出发送给syslog。相关细节请参考12.8.1节。
在数据目录里）。要想显式指定出错日志名，可以设置系统变量log_error。或者，还可
在 Unix里，如果你使用mysql_safe 来启动服务器，它会创建一个出错日志文件（默认是
info-file来对它们进行显式设置。
件被默认创建在数据目录里，可以使用选项--master-info-file 和--relay-log-
每个复制从服务器都必须拥有唯一的一组主服务器信息文件和中继日志信息文件。这些文
时设置它们。
其中有些选项实际上是系统变量（标志就是其名字里有下划线），但是你可以在服务器启动
录到不同的文件集里。（与日志文件命名有关的更多信息请参考12.8节。）
果每个服务器都使用了不同的数据目录，那么不必指定绝对路径名便可以让每个服务器记
和日志文件。如果指定的是相对文件名，那么这些文件将被创建在服务器数据目录里。如
制这样的操作无法正常进行。服务器会根据下表里各个选项所指明的名字来创建状态文件
最乐观的也是使服务器间的记录内容相互混淆，难以分辨，而最糟糕的便是让类似服务器
个服务器之间会因为都想把内容写到同一个文件里而出现竞争。这种竞争导致的不良后果，
第12章MySQL的基本管理
-slow_query_log
-relay-log-index=file_name
--relay-log[=file_name]
--pid_file=file_name
--log_output[=destination]
--log_error[=file_name]
--log-bin-index=file_name
--log-bin[=file_name]
--general_log_file=file_name
-general_log
，可以在运行时对这些变量进行更改。
选项
慢查询日志文件名
启用慢查询日志
中继日志索引文件
启用中继日志
进程ID文件
普通查询/慢查询日志存放位置
启用出错日志
二进制日志索引文件
启用二进制日志
生成日志文件名
启用普通日志
用以指明运行该服务器所需
用途
复
---
## Page 485
选择。
12.9.3指定启动选项的策略
的启动。12.9.4节对实现这一目标的一种方法进行了讨论。
节可参考13.1.2节。
些命令时以root身份或user-name身份登录。
据目录和权限表：
值，
端口号等于版本号，将套接字文件放置在基本目录里，并在其中把数据目录命名为data。
附加的与服务器特定相关的值，如TCP/IP端口号和套接字路径名。我所用的配置是让TCP/IP
-DCMAKE_INSTALL_PREFIX=/var/mysql/50525选项来实现。还可以使用其他选项来指定一些
/var/mysql/50525作为MySQL5.5.25的安装基本目录，可以通过在运行CMake 时带上
/var/mysql/的某个子目录里，并用这个发行包的版本号来命名该目录。
在安装好服务器之后，该如何使用每个服务器所需要的正确选项集来启动服务器呢？你有以下几种
在这之后，剩下的工作便只有设置那些我想要在选项文件里使用的选项，以及编排服务器
口如果你是自己构建服务器，那么可以把针对每一个服务器的那一组默认值编译进去，这样在启
至此，我完成了MySQL安装目录的锁定步骤。相关内容在12.2.1.1节有简要描述，更多细
其中，user_name是用于运行服务器的那个登录账户的名字（如 mysql账户）。请在运行这
#scripts/mysql_install_db--user=user_name
#cd/var/mysql/50525
在安装好给定版本的MySQL之后，还需要把当前位置切换到安装基本目录，并初始化数
make install
sh config-ver
等等。在脚本建立好之后，接下来便是用下列命令配置、构建和安装该发行版：
我会保证用第一行设置正确的版本号，在需要时根据要编译进服务器的存储引擎来修改其他
cmake SOPTIONS
OPTIONS="
OTHER="
ENGINES=
为建立这些配置选项，我使用了一个名为config-ver的shell脚本：
PORT="$VERSION"
PREFIX="/var/mysql/SVERSION"
VERSION=50525
动时就无需再提供选项。这一做法的缺点是，给定服务器正使用哪些参数并不一定很明显。
make
SENGINES SOTHER
-DMYSQL_TCP_PORT=SPORT
-DMYSQL_DATADIR=SPREFIX/data
-DCMAKE_INSTALL_PREFIX=SPREFIX
-DWITH_SSL=bundled
-DMYSQL_MAINTAINER_MODE=OFF
-DCPACK_MONOLITHIC_INSTALL=ON
-DWITH_PARTITION_STORAGE_ENGINE=ON
-DWITH_INNOBASE_STORAGE_ENGINE=ON
DWITH_PERFSCHEMA_STORAGE_ENGINE=ON
12.9运行多个服务器
。例如，我想用
465
---
## Page 486
里设置各种选项：
[mysqld50164]、
好的MySQL服务器的版本有5.1.64、5.5.25 和5.6.6，那么可以将它们的选项组分别指定
[mysqld_multi]组，在其中列出专供mysqld_multi 自己使用的那些选项。例如，如果已安装
个选项文件的[mysqldn]组内，其中，n是上述那个编号。这个选项文件也可以包含一
本来替代。
中运行状况都很好。为了使处理几个服务器的工作变得更加容易，需要使用 mysqld_multi 脚
12.9.4使用mysqld_multi来管理服务器
多个服务器来展示几种应用这些策略的方法。
466
mysqld_multi脚本会以分配给每个服务器的特定编号为基础，把服务器各个选项列在某
port=50164
basedir=/var/mysql/50164
在 Unix里，常用于启动服务器的脚本 mysqld_safe和mysqld.server，在单服务器设置
log-bin=binlog
general_log_file=qlog
general_log
[mysqld50164]
接下来的几节将通过演示如何在Unix里使用mysqld_multi，以及如何在Windows 里运行
log_error=log.err
口
口可以通过命令行或选项文件在服务器启动时指定各个选项。如果需要指定大量的选项，那
（它们专门用于这种风格的服务器配置）。更多相关信息请参考12.2.2.2节。
ser=mysgl
在Windows 里，你也可以运行多个服务器，不过使用的是特殊的选项文件组命名约定
■
保证每个服务器都能读取到正确的那组选项也非易事。实现这一目标的策略有以下几种。
么在命令行上把它们写出来会很不实际。将其放在选项文件内反而会更方便些，虽然要想
■
■
第12章MySQL的基本管理
联在一起。
出所有服务器使用的选项，但是会将每个服务器与这个文件里属于它自己的特定选项组关
使用mysqld_multi脚本来管理多个服务器的启动。这个脚本程序允许你在一个文件里列
息请参考F.2节。
选
对于那些早于5.6.3的服务器版本，就不能使用--plugin-load-add 选项，因为这
附加选项。例如，可以在/etc/my.cnf里使用[mysqld]组来指定那些适用于所有服务
--defaults_extra_file选项来指定一个文件，其中包含与给定服务器特定相关的各和
把所有服务器共用的那些选项放入一个全局选项文件，如/etc/my.cnf，并在命令行使用
文件，如/etc/my.cnf，都不会被读取。）
地方指定其所有的设置。（请注意，当你使用--defaults_file选项时，所有平常的选项
指定不同的文件。这样，可以把给定服务器所需要的全部选项放入一个文件，以便在一个
使用--defaults_file选项指定服务器要从中读取所要选项的选项文件，并为每个服务
学致早于该版本的服务器启动失败。不过，你可以使用1oose-opt_name语法来指
将这个选项忽略，并在记录下警告信息之后继续执行。有关“loose”选项的更多信
些无法被所有服务器读懂的选项。如果服务器无法读懂以这种方式提供的选项，就
项的概念是
定要让放到公共选项组内的所有选项，都能被你所运行的所有服务器读懂。例如，
选项。不需要在单个的服务器选项文件里重复这些选项。
：[mysqla50525]和[mysqld50606]，并可以像下面这样在/etc/my.cnf 文件
是从那一个版本才开始引入的。如果把这个选项放到公共选项组里，就会
为
个
种
件
---
## Page 487
命令和report命令会使用的那个选项组里。例如：
定一个管理账户的用户名和密码：
于这些命令，mysqld_multi 脚本需要调用mysqladmin来与服务器进行通信，因此还必须指
后面紧跟服务器列表。自MySQL5.6.3起，你还可以使用命令字reload（来停止和重启）。
空白。
开。采用短划线分隔编号的方式可以指定某段范围的服务器编号。在服务器编号列表里不能有
让你更轻易地看到正在发生的情况。你可以同时指定多个服务器，方法是用逗号将各组编号
服务器选项组编号作为调用参数：
附加的与服务器特定相关的参数，
其中，选项--no-log会使得状态信息被发送到终端，而不会发送到日志文件。这样可
要想启动某个给定的服务器，
[mysqld_multi]
这里的用户名和密码必须适用于所有你想要用一个给定命令来控制的服务器
要想停止服务器或获得服务器是否正在运行的状态报告，可以使用命令字stop或report，
%mysqld_multi --no-1og start 50164,50525-50606
%mysqld_multi --no-logstart 50525
这里为每个服务器设定的布局参数对应于12.9.2节描述的目录配置。同时，还指定了几个
character_set_server=utf8
innodb_data_file_path=ibdata1:100M
general_log_file=qlog
log_error=log.err
user=mysql
port=50606