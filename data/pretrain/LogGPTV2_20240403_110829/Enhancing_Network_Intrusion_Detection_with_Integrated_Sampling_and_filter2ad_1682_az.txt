states, and l : S → 2AP is a labeling of states with the set of propositions true
in that state.
Given an Attack Model, model checking techniques are used to generate Attack
Graphs automatically. The negation of the attacker’s goal is used as the cor-
rectness property during model checking. These properties are called security
properties. An example of a security property in computer networks would be
“the intruder cannot get root access on the main web server”. A model checker
is used to ﬁnd out all states in the Attack Model where the security property
is not satisﬁed. We call these states error states, comprising set E. An Attack
Graph is a subgraph of the Attack Model which only contains paths leading to
one of the error states. [21,9,22] describe the details of the algorithm to construct
an Attack Graph, given an Attack Model and a security property.
132
V. Mehta et al.
In order to be able to ﬁnd the reachability probability of various states in an
Attack Model, we associate probabilities with transitions in the model. We call
the resulting model a Probabilistic Attack Model. Formally,
(cid:1)
Deﬁnition 3. A Probabilistic Attack Model is a 4-tuple M = (S, τ, s0, l), where
S is a set of states, τ : S × S → [0, 1] is the transition relation such that
∀s ∈ S,
(cid:3)) = 1, s0 ∈ S is the initial state, and l : S → 2AP is a
labeling of states with the set of propositions true in that state.
s(cid:1)∈S τ(s, s
3 Two Ranking Algorithms
We ﬁrst describe the theory of the basic PageRank algorithm used to rank web-
pages on the World Wide Web. Then, we give a slightly modiﬁed version of
the PageRank algorithm to rank states of an Attack Graph. We also provide
an alternative algorithm for ranking states of an Attack Graph based on the
reachability probability of an attacker in a random simulation.
3.1 Using PageRank to Rank Attack Graphs
Google’s PageRank Algorithm. PageRank is the algorithm used by Google
to determine the relative importance of webpages on the World Wide Web.
PageRank is based on a model of user behaviour. It assumes there is a “random
surfer” who starts at a random webpage and keeps clicking on links, never hitting
the ‘back’ button, but eventually gets bored and starts on another random page.
The computed rank of a page is the probability of the random surfer reaching
that page. PageRank can be interpreted as a Markov Process, where the states
are pages, and the transitions are the links between pages which are all equally
probable. To capture the notion that a random surfer might get bored and restart
from another random page, a damping factor d is introduced, where 0  0 and 0 < η < 1 constant
(4)
Ranking Attack Graphs
135
We use a geometric distribution of simulation lengths as we believe that longer
attacks are less probable. Also, using this distribution, error states closer to
the initial state and hence, easier to be attacked, are ranked higher. Let ri
be the reachability probability of state si. The following formula computes the
reachability probability r = (r1, ..., rk)T .
r =
1 − η
η
ηm
P ns
(5)
∞(cid:2)
m(cid:2)
m=1
n=0
The reachability probability ri is deﬁned as the rank of state si in the Attack
Model. As the states of an Attack Graph are a subset of the states in an Attack
Model, we label each state of the Attack Graph with the rank of the correspond-
ing state in the Attack Model. Thus, we obtain a Ranked Attack Graph.
4 Using Ranked Attack Graphs for Security Analysis
1. Security Metric: The total rank of all error states provides a good measure
of security of the system. By the model checking terminology error state, we
mean a state whose certain user-speciﬁed security property is violated and
an undesirable situation happens in the system. If the error states have tiny
ranks such as 0.001 or 0.002 for example, it indicates that the whole system
is secure enough, thus increasing the conﬁdence of the system users.
2. Security Improvement: A system administrator can apply diﬀerent de-
fense measures with the objective of reducing the total rank of error states.
For example, a system administrator may change security policies, or add
hardware/software/human at certain components (for example a computer
host) of the system, and observe the reduction in the total rank of error
states. By these experiments, the administrator is able to improve the secu-
rity level of the system to a customized desirable level.
It would be better for a system administrator to eliminate all the highly
ranked error states. This can be achieved by making local changes to the At-
tack Graph which bring about a reduction in the rank of the highly ranked
error states. For example, the system administrator can stop a service at
a computer or add an intrusion detection component such that it removes
some of the incoming transitions of the highly ranked error states in the At-
tack Graph. This would lead to a reduction in the rank of the highly ranked
error states.
3. Derived Analysis: In addition, more analysis can be derived from the
ranks. One such example is the probability of a host being attacked. By
summing up the ranks of states in which a particular host is attacked, the
probability of this host being attacked is found. This type of analysis was
shown to be useful in some situations such as computer virus attacks [24].
By reducing the infection probability of a certain host through anti-virus
measures, it was shown that the epidemic probability can be reduced. Such
analysis is also useful to identify the weak grid in a power system targeted
by terrorists.
136
V. Mehta et al.
4. Aid in Visual Analysis: Attack Graphs suﬀer from a visual complex-
ity problem. For real situations, the size and complexity of Attack Graphs
greatly exceeds the human ability to understand and analyze. Ranks help in
viewing more important areas of the Attack Graph selectively. The admin-
istrator can adjust the number of states being viewed based on a cutoﬀ on
ranks of those states. The administrator could just focus on portions of the
Attack Graph containing highly ranked error states and make local changes
to get rid of the highly ranked error states.
5 Examples/Applications
In this section, we show applications of ranking techniques to realistic systems.
In the example, we consider multi-stage cyber attacks against a network of com-
puters. We construct a Network Attack Graph for a computer network and rank
its states to analyze the network for security.
5.1 Ranking Network Attack Graphs
A Network Attack Model is constructed using security related attributes of the
attacker and the computer network. Below is a list of components from a network
used to construct a network model:
– H, a set of hosts connected to the network. Hosts are computers running
services, processing network requests and maintaining data. A host h  H is
a tuple (id, svcs, sw, vuls) where id is a unique host identiﬁer, svcs is a list
of services active on the host, sw is a list of other software running on the
host, and vuls is a list of host-speciﬁc vulnerable components.
– C, a connectivity relation expressing the network topology and inter-host
reachability. C is a ternary relation C ⊆ H × H × P, where P is a set of
integer port numbers. C(h1, h2, p) means that h2 is reachable from h1 on
port p.
– TR, a relation expressing trust between hosts. Trust is a binary relation TR
⊆ H × H. TR(h1, h2) means that a user on h1 can log in on h2 without
authentication.
– I, a model of the intruder. We assume the intruder does not have global
information about the network such as knowledge of all the possible attacks
on the network. The intruder is associated with a function plvl : H →
{none, user, root} which gives the level of privilege of the intruder on each
host.
– A, a set of individual actions that the intruder can perform during an attack.
A ﬁnite state Attack Model is constructed using the above information about
the computer network. A state of the model corresponds to a valuation of vari-
ables of each of the above components. The initial state corresponds to the case
in which the intruder has root privileges on his own machine and no other host.
Starting from the initial state, breadth ﬁrst search is performed to ﬁnd the set
Ranking Attack Graphs
137
of reachable states and construct the Network Attack Model. In a particular
state, we ﬁnd the set of enabled actions for the intruder. For each action, there
is a state transition from the current state to a state which reﬂects the changes
according to the eﬀects of the chosen atomic action. Thus, we obtain a Network
Attack Model from the description of the network.
Given a Network Model obtained as above and a security property, model
checking is done to obtain a Network Attack Graph. The security property is
the negation of the intruder’s goal which could be administrative access on a
critical host, access to a database, service disruption etc. Network Attack Graphs
represent a collection of possible penetration scenarios in a computer network,
each culminating in a state where the intruder has successfully achieved his
goal.We use the PageRank algorithm of Section 3.1 to produce a Ranked Network
Attack Graph.
ipa
  Attacker
ip1
ip2
Fig. 2. Computer network A
5.2 Examples of Ranked Network Attack Graphs
We show screenshots of a few examples of Network Attack Graphs. States in the
graph have been ranked according to the ranking algorithm based on PageRank.
We set the damping factor to 0.85, which is the value Google uses. For each error
state, the intensity of color is proportional to the relative rank of that state in
the Attack Graph. The security metric based on the total rank of error states is a
quantitative guide for comparing Attack Graphs. A system administrator could
ﬁx a particular security property, make changes to his network conﬁguration and
compare the Attack Graphs obtained using this security metric. Thus, he can
determine the relative utility of diﬀerent security measures. He could also ﬁx
the system model and observe changes in the ranks of the Attack Graph based
on varying the security property from a weak to a strong one. For example,
consider the computer network shown in Figure 2 which has interconnected
computer hosts with some services and software vulnerabilities on each host. Let
the security property used by the system administrator be “ Intruder cannot get
root access on ip2”. Figure 3(a) shows the Attack Graph of the network with
respect to the above security property. The total rank of error states in the
Attack Graph is 0.24. Now, suppose the administrator stops the sshd service