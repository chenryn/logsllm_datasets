# 用户账户控制（UAC）基础知识与应用

**用户账户控制** (User Account Control, UAC) 是从Windows Vista开始引入的一组基础结构技术，旨在帮助阻止恶意程序（也称为“[恶意软件](https://baike.baidu.com/item/恶意软件)”）损害系统，并促进更易于管理的操作平台部署。UAC确保应用程序和任务通常以非管理员权限运行，除非用户明确授予它们管理员级别的访问权限。此外，它还限制了未经授权的软件自动安装，并防止对系统设置进行无意修改。

UAC作为新版Windows的核心安全功能之一，有时会被误解。其运作机制基于不同的授权级别：有些程序需要特定授权才能执行某些操作，而另一些则不需要。这取决于程序在请求权限提升时的行为及其配置。

## 配置UAC设置

要调整UAC的行为，可以按照以下步骤操作：
1. 按下 `Win + R` 组合键打开“运行”对话框。
2. 输入 `gpedit.msc` 并按回车键启动本地组策略编辑器。
3. 在左侧导航栏中定位到“计算机配置 - Windows 设置 - 安全设置 - 本地策略 - 安全选项”。
4. 右侧列表中找到“用户账户控制：管理员批准模式中管理员的提升权限提示的行为”，双击进入详细设置界面。

根据您的需求选择适当的UAC行为模式，例如不提示直接提升权限或在不同类型的桌面上显示凭据输入提示等。

## 程序权限提升

当普通应用程序尝试执行需要更高权限的操作时，系统会通过弹出对话框来请求用户的确认。如果当前登录用户的权限不足，则还需提供管理员密码。值得注意的是，只有未运行状态下的程序能够请求权限提升；一旦开始运行，就无法再申请额外权限了。

权限提升方式主要有两种：手动提权（如右键菜单中的“以管理员身份运行”选项）和自动提权（如注册表编辑器启动时即请求权限）。

### Visual Studio 中的 UAC 配置

对于开发者而言，在Visual Studio项目里可以通过修改manifest文件来指定应用程序所需的权限等级。该文件是一个XML文档，用于定义程序属性。常见权限级别包括默认权限 (`aslnvoker`)、最高可用权限 (`highestAvailable`) 和必须具有管理员权限 (`requireAdministrator`)。将编译选项设为后者意味着每当用户运行此程序时都将自动获得管理员权限，无需绕过UAC检查。

## 探索UAC白名单程序

某些系统自带的应用程序被设计成可以直接获取管理员权限而不触发UAC警告，这类被称为白名单程序。这些程序通常设置了 `autoElevate=true` 属性。要查找此类程序，可以通过编写脚本来扫描System32目录并识别符合条件的可执行文件。

## 利用Shell\Open\Command实现UAC绕过

研究发现，部分程序如`ComputerDefaults.exe`在启动时会查询特定注册表路径下的命令行指令，并据此加载相关联的应用程序。由于这些调用过程本身已经获得了提升后的权限，因此通过篡改相应注册表项指向自定义代码的方式可以达到绕过UAC的目的。

### 实现步骤概述
- 创建必要的注册表条目。
- 修改`Command`键值为目标程序路径。
- 清理痕迹以避免检测。

### 关键API函数
- **RegCreateKeyExA**: 用于创建新的注册表键。
- **RegSetValueExA**: 更新现有键的值。
- **RegDeleteTreeA**: 删除整个子树结构以隐藏活动痕迹。

## 安全考量及反病毒软件响应

尽管上述方法能够在一定程度上规避UAC限制，但需要注意的是直接修改系统注册表属于高风险行为，很可能触发安全软件警报。实际测试表明，虽然Windows Defender可能允许此类变更发生，但其他更为严格的防护工具（如360安全卫士）可能会拦截此类企图。

## 结论

正确理解和使用UAC机制是保障个人电脑安全的重要一环。同时，深入探索其工作原理也有助于开发更加安全可靠的应用程序。然而，请始终遵守法律法规，仅将所学知识应用于正当目的。