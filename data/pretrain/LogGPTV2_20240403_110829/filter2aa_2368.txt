议题：
捡
漏
式
挖掘CVE漏
洞
演
讲人：
朱铜庆
ID：
Dawu
部
门/职
位：
404实验室
研究方向：
Web/Windows 逻
辑漏
洞相
关
标签
：
联
系
方式
：
 漂
流
瓶
吧
历史上的捡
漏
01
02
03
总
结
和归纳
提升和突破
01
历史上的捡
漏
广撒
网，
总
有鱼
ZoomEye寻
找未授权访问
的页面
ZoomEye
md5(admin,32) = 21232f297a57a5a743894a0e4a801fc3
也许厂商和你都
没
想到，
这
个补丁是“
假”
的
CVE-2016-10033 -> CVE-2016-10045
mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_
parameters ]] )
CVE-2016-10033 -> CVE-2016-10045
CVE-2016-10033 -> CVE-2016-10045
Escapeshellarg()
CVE-2016-10033 -> CVE-2016-10045
Escapeshellcmd()
CVE-2016-10033 -> CVE-2016-10045
项
目在
多年的迭
代的过程
中，
总
会忘记
一些东
西
考
虑到所
有的情
况，
在
其它
平
台/地方是否有同
样的问
题
CVE-2017-17562
可控
的LD_PRELOAD 动
态链
接
库劫持导致远程
命
令执行
CVE-2017-17562
CGI的运
行模式
：
在
这
个CGI程
序
被执行前，
Web服务器
要为该
CGI程
序
设置
一些环
境
变量
。这
些环
境
变量
被
服务器
用来
向CGI程
序
传递
一些非
常
重
要的信息，
例如
当
前Web服务器
的状
态、谁
发出的
调
用等等。Web服务器
为CGI程
序
所
设置
的环
境
变量
的使用和正
常
的环
境
变量
的使用没
有
任何区别。当
CGI程
序
运
行结
束
时
，
Web服务器
为它
设置
的环
境
变量
也随着消
失。
原
文
链
接
：
https://blog.csdn.net/nyist327/article/details/41049699
沿伸：
如
何在
终
端下模拟运
行CGI？
CVE-2017-17562
/proc/self/fd/0 -> stdin
CVE-2017-17562
可控
的LD_PRELOAD 动
态链
接
库劫持导致远程
命
令执行
CVE-2017-17562
CVE-2017-17562
环
境
变量
添加/覆盖的技巧
可以用于
：
 Windows /*nix
/proc/self/fd/0的技巧
可以用于
 *nix
CVE-2017-17562
Windows 下可以控
制环
境
变量
：
 可以劫持DLL，
但是无法设置
DLL
Linux 下LD_ 开头的环
境
变量
已经被禁
止，
并且无法绕
过
MacOs？
厂商在
同
一个地方修了很多次
，
那就
意
味
着
你也可以找到绕
过
这
个厂商修复水
平
不
足，
历史漏
洞也可能
存
在
类似问
题
这
个厂商整体水
平
不
行，
可以在
新的地方找到新的漏
洞
ColdFusion 上传漏
洞 —
—
 Round 1
可以上传 JSP                                把JSP后
缀假如
黑
名单
ColdFusion 上传漏
洞 —
—
 Round 2
可以上传 JSP                               把JSP后
缀加入黑
名单
可以上传JSPX                             把JSPX后
缀加入黑
名单
ColdFusion 上传漏
洞 —
—
 Round 3
可以上传 JSP                               把JSP后
缀加入黑
名单
可以上传JSPX                             把JSPX后
缀加入黑
名单
Fuzz , 特殊字符绕
过                     shell.jsp.
ColdFusion 上传漏
洞 —
—
 Round 1
开发人员
缺乏安全意
识，
打哪修哪
这
种漏
洞，
你也可以捡
到
历史漏
洞，
也可以去看看
ColdFusion持续爆
发了多个高危漏
洞。
02
总
结
和归纳
优势
：
1. 入门门槛低，
知道
漏
洞原
理
、花
费时
间就
可以了
2. 认真
+全面排
查
，
就
可以找到漏
网之鱼
3. 我们
只需
要比
修复人员
更
专业就
可以了
但是
捡
漏
是不
可能
一辈子捡
漏
的！
学
习漏
洞利用方法，
总
结
共性
来
达到对同
一类漏
洞的深
刻认知
例如
：
Linux下的LD_PRELOAD动
态库劫持
在
曾
经爆
发过的 Mysql，
Nginx提权中也被用到过
是否还可以在
其它
软件中存
在
类似的问
题？
如
果
被过滤了，
我们
是否还可以有别的绕
过方式
？
一般
的修复方式
是什么？
会不
会还有问
题？
如
果
有问
题，
我们
可以怎么绕
过？
学
习漏
洞中的技术/手法，
触
类旁
通
举个：
Json Web Token
eyJhbGciOiJIUzI1NiIsInR5cCI6Ikp
XVCJ9.eyJzdWIiOiIxMjM0NTY3O
DkwIiwibmFtZSI6IkpvaG4gRG9lIi
wiaWF0IjoxNTE2MjM5MDIyfQ.Sf
lKxwRJSMeKKF2QT4fwpMeJf36P
Ok6yJV_adQssw5c
{
  "alg": "HS256",
  "typ": "JWT"
}
{
  "sub": "1234567890",
  "name": "John Doe",
  "iat": 1516239022
}
HMACSHA256( 
base64UrlEncode(header) + "." +
base64UrlEncode(payload), 
your-256-bit-secret
)
eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHZPa0JCWTNScGRtVlRkWEJ3YjNKME9qcEVaWEJ5WldOaGRHbHZiam82UkdWd2NtVmpZ
WFJsWkVsdWMzUmhibU5sVm1GeWFXRmliR1ZRY205NGVRazZEa0JwYm5OMFlXNWpaVzg2Q0VWU1FnZzZDVUJ6Y21OSklpMXpl
WE4wWlcwb0oySmhjMmduTENjdFl5Y3NKM1J2ZFdOb0lDOTBiWEF2YzNWalkyVnpjeWNwQmpvR1JWUTZEa0JtYVd4bGJtRnRaV
WtpQmpFR093bFVPZ3hBYkdsdVpXNXZhUVk2REVCdFpYUm9iMlE2QzNKbGMzVnNkRG9KUUhaaGNra2lERUJ5WlhOMWJIUUdPd2
xVT2hCQVpHVndjbVZqWVhSdmNrbDFPaDlCWTNScGRtVlRkWEJ3YjNKME9qcEVaWEJ5WldOaGRHbHZiZ0FHT3dsVSIsImV4cCI6bn
VsbCwicHVyIjoiYmxvYl9rZXkifX0=--0d52814f4775a7e6d4b0ba414443e9d1736f17e2
缺点
：
对系
统性的挖掘漏
洞帮
助很小
03
提升和突破
敢于
尝试新事物
，
不
要停留
在
舒适区
攻击面有多大
，
在
于
你了解多少东
西
严格说，
是连接
端问
题，
并不
属于
任何一种web漏
洞
但是具体到PHP这
个语
言，
甚
至
可以找到一系
列可能
影
响后
台的方法
Mysql Client 读文
件问
题
读取
敏
感
文
件 -> 通
过获取
的敏
感
key实现getshell
Mysql Client 读文
件问
题
通
过phar读取
文
件 -> 获得一个反序
列化漏
洞
结
合
soapclient类，
通
过反序
列化实现ssrf
总
结
归纳
历史漏
洞是指
引
系
统性挖掘漏
洞的方向
了解已有技术的原
理
有助于
在
新区域漏
洞挖掘
对于
漏
洞相
关漏
洞而言，
善于
联
想、类比
、尝试往往会有收获
了解原
理
-> 找到
XXXX的EOP漏
洞
（
0day）
Git for VS EOP （
CVE-2019-1211）
 patch bypass
Demo