New definitions and delegatable anonymous credentials. In IEEE 27th Computer
Security Foundations Symposium, CSF 2014, Vienna, Austria, 19-22 July, 2014, pages
199–213, 2014.
[33] G. Cormode, M. Mitzenmacher, and J. Thaler. Practical verified computation
with streaming interactive proofs. In Innovations in Theoretical Computer Science
2012, Cambridge, MA, USA, January 8-10, 2012, pages 90–112, 2012.
[34] R. Cramer, I. Damgård, and M. Keller. On the amortized complexity of zero-
knowledge protocols. J. Cryptology, 27(2):284–316, 2014.
[35] G. Danezis, C. Fournet, J. Groth, and M. Kohlweiss. Square span programs with
applications to succinct NIZK arguments. In ASIACRYPT, pages 532–550, 2014.
J. Frankle, S. Park, D. Shaar, S. Goldwasser, and D. J. Weitzner. Practical account-
ability of secret processes. In 27th USENIX Security Symposium, USENIX Security
2018, Baltimore, MD, USA, August 15-17, 2018., pages 657–674, 2018.
[37] G. Fuchsbauer, E. Kiltz, and J. Loss. The algebraic group model and its applications.
In Advances in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology
Conference, Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part II, pages
33–62, 2018.
[38] S. D. Galbraith, K. G. Paterson, and N. P. Smart. Pairings for cryptographers.
[36]
Discrete Applied Mathematics, 156(16):3113–3121, 2008.
[45]
[42]
[39] C. Garman, M. Green, and I. Miers. Decentralized anonymous credentials. In
21st Annual Network and Distributed System Security Symposium, NDSS 2014, San
Diego, California, USA, February 23-26, 2014, 2014.
[40] R. Gennaro, C. Gentry, B. Parno, and M. Raykova. Quadratic span programs and
succinct nizks without pcps. In EUROCRYPT, pages 626–645, 2013.
[41] C. Gentry and D. Wichs. Separating succinct non-interactive arguments from all
falsifiable assumptions. In Proceedings of the Forty-third Annual ACM Symposium
on Theory of Computing, STOC ’11, pages 99–108, New York, NY, USA, 2011.
ACM.
I. Giacomelli, J. Madsen, and C. Orlandi. Zkboo: Faster zero-knowledge for
boolean circuits. In 25th USENIX Security Symposium, USENIX Security 16, Austin,
TX, USA, August 10-12, 2016., pages 1069–1083, 2016.
[43] S. Goldwasser, Y. T. Kalai, and G. N. Rothblum. Delegating computation: interac-
tive proofs for muggles. In Proceedings of the 40th Annual ACM Symposium on
Theory of Computing, Victoria, British Columbia, Canada, May 17-20, 2008, pages
113–122, 2008.
[44] M. Green and I. Miers. Bolt: Anonymous payment channels for decentralized
currencies. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and
Communications Security, CCS 2017, Dallas, TX, USA, October 30 - November 03,
2017, pages 473–489, 2017.
J. Groth. On the size of pairing-based non-interactive arguments. In EUROCRYPT,
pages 305–326, 2016.
J. Groth, M. Kohlweiss, M. Maller, S. Meiklejohn, and I. Miers. Updatable and
universal common reference strings with applications to zk-snarks. In Advances
in Cryptology - CRYPTO 2018 - 38th Annual International Cryptology Conference,
Santa Barbara, CA, USA, August 19-23, 2018, Proceedings, Part III, pages 698–728,
2018.
J. Groth and M. Maller. Snarky signatures: Minimal signatures of knowledge
from simulation-extractable SNARKs. In CRYPTO, pages 581–612, 2017.
[48] Y. Ishai, E. Kushilevitz, R. Ostrovsky, and A. Sahai. Cryptography with constant
computational overhead. In Proceedings of the 40th Annual ACM Symposium on
Theory of Computing, Victoria, British Columbia, Canada, May 17-20, 2008, pages
433–442, 2008.
[49] Y. Ishai, E. Kushilevitz, R. Ostrovsky, and A. Sahai. Zero-knowledge proofs from
secure multiparty computation. SIAM J. Comput., 39(3):1121–1152, 2009.
[50] A. Kate, G. M. Zaverucha, and I. Goldberg. Constant-size commitments to
polynomials and their applications. In Advances in Cryptology - ASIACRYPT 2010
- 16th International Conference on the Theory and Application of Cryptology and
Information Security, Singapore, December 5-9, 2010. Proceedings, pages 177–194.
Springer, 2010.
[51] T. Kim and R. Barbulescu. Extended tower number field sieve: A new complexity
for the medium prime case. In Advances in Cryptology - CRYPTO 2016 - 36th
Annual International Cryptology Conference, Santa Barbara, CA, USA, August
14-18, 2016, Proceedings, Part I, pages 543–571, 2016.
[46]
[47]
[52] A. E. Kosba, A. Miller, E. Shi, Z. Wen, and C. Papamanthou. Hawk: The blockchain
model of cryptography and privacy-preserving smart contracts. In IEEE Sympo-
sium on Security and Privacy, SP 2016, San Jose, CA, USA, May 22-26, 2016, pages
839–858, 2016.
[53] Y. Lindell. Parallel coin-tossing and constant-round secure two-party computa-
tion. J. Cryptology, 16(3):143–184, 2003.
[54] H. Lipmaa. Succinct non-interactive zero knowledge arguments from span pro-
grams and linear error-correcting codes. In Advances in Cryptology - ASIACRYPT
2013 - 19th International Conference on the Theory and Application of Cryptology
and Information Security, Bengaluru, India, December 1-5, 2013, Proceedings, Part
I, pages 41–60, 2013.
[55] H. Lipmaa, P. Mohassel, and S. S. Sadeghian. Valiant’s universal circuit: Im-
provements, implementation, and applications. IACR Cryptology ePrint Archive,
2016:17, 2016.
[56] M. Maller, S. Bowe, M. Kohlweiss, and S. Meiklejohn. Sonic: Zero-knowledge
SNARKs from linear-size universal and updatable structured reference strings.
https://eprint.iacr.org/2019/099.
I. Meckler and E. Shapiro. Coda: Decentralized cryptocurrency at scale. 2018.
[57]
[58] C. Papamanthou, E. Shi, and R. Tamassia. Signatures of correct computation.
In Theory of Cryptography - 10th Theory of Cryptography Conference, TCC 2013,
Tokyo, Japan, March 3-6, 2013. Proceedings, pages 222–242, 2013.
[59] B. Parno, J. Howell, C. Gentry, and M. Raykova. Pinocchio: Nearly practical
verifiable computation.
In Proceedings of the IEEE Symposium on Security &
Privacy, 2013.
[60] L. G. Valiant. Universal circuits (preliminary report). In Proceedings of the 8th
Annual ACM Symposium on Theory of Computing, pages 196–203, 1976.
[61] R. S. Wahby, I. Tzialla, A. Shelat, J. Thaler, and M. Walfish. Doubly-efficient
zksnarks without trusted setup. In 2018 IEEE Symposium on Security and Privacy,
SP 2018, Proceedings, 21-23 May 2018, San Francisco, California, USA, pages 926–
943, 2018.
https://z.cash/blog/
[62] Z. Wilcox.
The design of
the ceremony.
the-design-of-the-ceremony.html, Oct. 2016.
[63] Z. S. Workshop, 2018.
https://zkproof.org/proceedings-snapshots/zkproof-
implementation-20180801.pdf.
[64] H. Wu, W. Zheng, A. Chiesa, R. A. Popa, and I. Stoica. DIZK: A distributed zero
knowledge proof system. In 27th USENIX Security Symposium, USENIX Security
2018, Baltimore, MD, USA, August 15-17, 2018., pages 675–692, 2018.
[65] Y. Zhang, D. Genkin, J. Katz, D. Papadopoulos, and C. Papamanthou. A zero-
knowledge version of vsql. IACR Cryptology ePrint Archive, 2017:1146, 2017.
A THE POLYNOMIAL PERMUTATION
ARGUMENT
The prover wishes to demonstrate the correct evaluation of
for y, z ∈ F. Observe that the permutation of this polynomial
Ψ(X , Y) =
ψσi X iY σi
Φ(X , Y) =
ψi X iY i
n
n
i =1
i =1
n
i =1
is such that Φ(X , Y) = Φ(XY , 1). Therefore we can use arguments
about the correct calculation of Φ together with a permutation
argument to obtain arguments about the correct calculation of Ψ.
Our permutation argument given in Figure 9 is similar to that of
i =1 ai X i, then
Bootle et al. [23]. If the prover commits to f (X) =n
we have for random challenges β, γ ∈ Fp that
ai + σi β + γ =
ψiyi + iβ + γ
(2)
holds with non-negligible probability if and only if for all i, ai =
ψσi yσi . Notice that if ai = ψσi yσi then a + βσ contains a permuta-
tion of the entries in (ψ1y
1 +β, . . . ,ψnyn +nβ). However, if a is not a
permutation, then with overwhelming probability over β there will
be entries that do not appear anywhere in a + βσ. The prover will
now convince the verifier that (2) holds. By the Schwartz-Zippel
n
i =1
Derive(bp, srs, Ψ) (cid:55)→ srsΨ
P1 ← Commit(bp, srs, d,n
P2 ← Commit(bp, srs, d,n
P3 ← Commit(bp, srs, d,n
P4 ← Commit(bp, srs, d,n
srsΨ ← {bp, srs, P1, P2, P3, P4}
return srsΨ
i =1 X i)
i =1 ψi X i)
i =1 iX i)
i =1 σi X i)
Figure 8: The Derive algorithm.
lemma this is unlikely to hold over the random choice of γ unless
a + βσ indeed contains the correct permutation.
for the permutations is given in Figure 8.
The Derive algorithm to generate the specialised reference strings
The prover calculates S′, a commitment to Φ(X , y). The verifier
checks that the commitment to Φ is computed correctly. The srsΨ
contains P2, a commitment to Ψ(X , 1). The prover opens S′ at u and
P2 at uy. If the opening are equal and verify then with overwhelming
probability the commitment is correct.
The prover calculates S, a commitment to Ψ(X , y). In order to
check that the coefficients of S are the permutation of the coeffi-
cients of Ψ(X , y), the verifier chooses random challenges β, γ ∈ Fp
and asks the prover to demonstrate that the product of the co-
efficients of SP
1 is equal to the product of the coefficients of
γ
S′P
all the checks hold then we have that ψ = Ψ(z, y).
β
3 P
The prover then opens S at z to ψ, which the verifier checks. If
1 , thus simulating the argument from Equation 2.
γ
β
4 P
Lemma A.1. The permutation argument in Figure 9 is sound when
instantiated using a secure polynomial commitment scheme and a
sound grand-product argument.
s = s(z), v = s′(u) and v = p2(uy). If p2(uy) (cid:44)n
Proof. The bounded extractability of the polynomial commit-
ment scheme gives us that there exists algebraic extractors that
output degree d Laurent polynomials s(X), s′(X), p2(X) such that
i =1 ψiuiyi then the
adversary can find a second opening for P2 and in doing so break
evaluation binding of the commitment scheme. The probability that
s′(u) = v but s′(u) (cid:44) p2(Xy) is negligible by the Schwartz-Zippel
Lemma.
The soundness of the grand-product argument gives us that
n
i =1 si + βσi + γ =n
i =1 si + βσi + γ =n
⇐n
i
+ βi + γ
i =1 s′
i =1 ψiyi + βi + γ
Again by the Schwartz-Zippel Lemma, this implies that si = ψi
with all but negligible probability.
□
Due to space limitations, a presentation of the underlying grand-
product argument is deferred to the full version of the paper [56].
B THE GRAND PRODUCT ARGUMENT
For our signature of correct computation in Section 7 we require
a grand product argument. Namely we need the prover to demon-
strate that the product of the coefficients of two commitments U
16
Common input: info = srsΨ, y, z
P1 = Commit(bp, srs, d,n
P3 = Commit(bp, srs, d,n
i =1 X i), P2 = Commit(bp, srs, d,n
i =1 iX i), P4 = Commit(bp, srs, d,n
i =1 ψi X i),
i =1 σi X i)
ψi X iY i
γ
1
permV2(ψ ,W , v,W ′, Q′, gprod) (cid:55)→ 0/1:
¯S ← SP
β
γ
4 P
1
¯P ← S′P
β
3 P
check pcV(bp, srs, S, d, z,(s,W ))
check pcV(bp, srs, S′, d, u,(v,W ′))
check pcV(bp, srs, P2, d, uy,(v, Q′))
check gprodV( ¯S, ¯P, gprod)
return 1 if all checks pass, else return 0
n
n
i =1
Ψ(X , Y) =
ψσi X iY σi , Φ(X , Y) =
i =1
permP1(info) (cid:55)→ (S, S′):
for 1 ≤ j ≤ M:
S ← Commit(bp, srs, d, Ψ(X , y))
S′ ← Commit(bp, srs, d, Φ(X , y))
γ
1
$←− Fp
send S, S′
permV1(info, S, S′) (cid:55)→ (u, β, γ):
send u, β, γ
permP2(u, β, γ) (cid:55)→ (s, v,W ,W ′, Q′, π):
¯S ← SP
γ
β
4 P
1
¯P ← S′P
β
3 P
(ψ = Ψ(z, y),W ) ← Open(bp, srs, S, z, Ψ(X , y))
(v,W ′) ← Open(bp, srs, S′, u, Φ(X , y))
(v, Q′) ← Open(bp, srs, P2, uy,n
¯s(X) ←n
¯p(X) ←n
i =1 ψσi yσi X i + βσi X i + γ X i
i =1 ψiyi X i + βiX i + γ X i
gprod ← gprodP( ¯S, ¯P, ¯s(X), ¯p(X))
send (ψ ,W , v,W ′, Q′, π)
i =1 ψi X i)
and V are equal, where U and V are fully well-formed commitments
to degree-n polynomials
U = дαn
i =1 ai x i
i =1 ai +n+1x i
.
We further assume that the polynomials do not have a constant
term. We can interpret UV x n+1 as a commitment to
, V = дαn
f (X) =
n
2n+2
ai X i .
ai =
ai .
i =1
i =n+2
We show that this constraint system is satisfied using our Sonic
argument described in Section 6. However, because all but two
We can represent these requirements with the following con-
We wish to demonstrate that
straints system.
(1) a · b = c
(2) b = (1, c1, . . . , c2n+1)
(3) cn+1 = 1
(4) c2n+1 = cn
Figure 9: The permutation argument.
(3)