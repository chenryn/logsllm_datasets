1.  将安装 ISO 镜像或者安装树导出到 NFS、HTTPS、HTTP 或者 FTP 服务器中。
2.  配置 TFTP 服务器和 DHCP 服务器，并在 PXE 服务器中启动 TFTP 服务。
3.  引导客户端并开始安装。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
GRUB2 引导装载程序除支持 TFTP 服务器外还支持从 HTTP
进行网络引导。发送引导文件，即内核和初始 RAM 磁盘 `vmlinuz`{.literal} 和
`initrd`{.literal}，使用这个协议可能很慢，并导致超时失败。HTTP
服务器不会有这个风险，但建议您在发送引导文件时使用 TFTP 服务器。
:::
::: itemizedlist
**其它资源**
-   要将安装 ISO 镜像导出到网络位置，请参阅 [第 6 章 *为 Kickstart
    安装创建安装源*](#creating-installation-sources-for-kickstart-installations_installing-rhel-as-an-experienced-user.html "第 6 章 为 Kickstart 安装创建安装源"){.xref}。
-   要配置 TFTP 服务器和 DHCP 服务器并启动 TFTP 服务，请参阅 ["为基于
    BIOS 的客户端配置 TFTP
    服务器"一节](#preparing-for-a-network-install_installing-rhel-as-an-experienced-user.html#configuring-a-tftp-server-for-bios-based-clients_preparing-for-a-network-install "为基于 BIOS 的客户端配置 TFTP 服务器"){.xref}、["为基于
    UEFI 的客户端配置 TFTP
    服务器"一节](#preparing-for-a-network-install_installing-rhel-as-an-experienced-user.html#configuring-a-tftp-server-for-uefi-based-clients_preparing-for-a-network-install "为基于 UEFI 的客户端配置 TFTP 服务器"){.xref}
    和 ["为 IBM Power
    系统配置网络服务器"一节](#preparing-for-a-network-install_installing-rhel-as-an-experienced-user.html#configuring-a-network-server-for-ibm-power_preparing-for-a-network-install "为 IBM Power 系统配置网络服务器"){.xref}。
-   Red Hat Satellite 可以自动设置 PXE 服务器。如需更多信息，请参阅 Red
    Hat Satellite 产品文档。
:::
:::
::: section
::: titlepage
# []{#preparing-for-a-network-install_installing-rhel-as-an-experienced-user.html#configuring-a-tftp-server-for-bios-based-clients_preparing-for-a-network-install}为基于 BIOS 的客户端配置 TFTP 服务器 {.title}
:::
使用这个步骤配置 TFTP 服务器和 DHCP 服务器，并为基于 BIOS 的 AMD 和
Intel 64 位系统在 PXE 服务器中启动 TFTP 服务。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
本节中的所有配置文件都是示例。配置详情会根据架构和具体要求的不同而有所不同。
:::
::: orderedlist
**流程**
1.  作为 root 用户安装以下软件包。如果您已在网络中配置了 DHCP
    服务器，排除 `dhcp-server`{.literal} 软件包：
    ``` screen
    # yum install tftp-server dhcp-server
    ```
2.  允许到防火墙 `tftp service`{.literal} 中的进入连接：
    ``` screen
    # firewall-cmd --add-service=tftp
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    ::: itemizedlist
    -   这个命令启用了临时访问，直到下次服务器重启为止。要启用持久性访问，在该命令中添加
        `--permanent`{.literal} 选项。
    -   根据安装 ISO 文件的位置，您可能需要允许 HTTP
        或者其他服务的进入连接。
    :::
    :::
3.  将您的 DHCP 服务器配置为使用 [**SYSLINUX**]{.strong}
    打包的引导镜像，如下例所示
    `/etc/dhcp/dhcpd.conf`{.literal}。请注意，如果您已经配置了 DHCP
    服务器，在 DHCP 服务器中执行这个步骤。
    ``` screen
    option space pxelinux;
    option pxelinux.magic code 208 = string;
    option pxelinux.configfile code 209 = text;
    option pxelinux.pathprefix code 210 = text;
    option pxelinux.reboottime code 211 = unsigned integer 32;
    option architecture-type code 93 = unsigned integer 16;
    subnet 10.0.0.0 netmask 255.255.255.0 {
    	option routers 10.0.0.254;
    	range 10.0.0.2 10.0.0.253;
    	class "pxeclients" {
    	  match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
    	  next-server 10.0.0.1;
    	  if option architecture-type = 00:07 {
    	    filename "uefi/shim.efi";
    	    } else {
    	    filename "pxelinux/pxelinux.0";
    	  }
    	}
    }
    ```
4.  从 DVD ISO 镜像文件中的 `SYSLINUX`{.literal} 软件包访问
    `pxelinux.0`{.literal} 文件，其中 [*my_local_directory*]{.emphasis}
    是您创建的目录的名称：
    ``` screen
    # mount -t iso9660 /path_to_image/name_of_image.iso /mount_point -o loop,ro
    ```
    ``` screen
    # cp -pr /mount_point/BaseOS/Packages/syslinux-tftpboot-version-architecture.rpm /my_local_directory
    ```
    ``` screen
    # umount /mount_point
    ```
5.  解压软件包：
    ``` screen
    # rpm2cpio syslinux-tftpboot-version-architecture.rpm | cpio -dimv
    ```
6.  在 `tftpboot/`{.literal} 目录中创建一个 `pxelinux/`{.literal} 目录,
    并将目录中的所有文件复制到 `pxelinux/`{.literal} 目录中：
    ``` screen
    # mkdir /var/lib/tftpboot/pxelinux
    ```
    ``` screen
    # cp my_local_directory/tftpboot/* /var/lib/tftpboot/pxelinux
    ```
7.  在 `pxelinux/`{.literal} 目录中创建 `pxelinux.cfg/`{.literal} 目录：
    ``` screen
    # mkdir /var/lib/tftpboot/pxelinux/pxelinux.cfg
    ```
8.  创建名为 `default`{.literal} 的配置文件并将其添加到
    `pxelinux.cfg/`{.literal} 目录中，如下例所示：
    ``` screen
    default vesamenu.c32
    prompt 1
    timeout 600
    display boot.msg
    label linux
      menu label ^Install system
      menu default
      kernel images/RHEL-8.1/vmlinuz
      append initrd=images/RHEL-8.1/initrd.img ip=dhcp inst.repo=http://10.32.5.1/RHEL-8.1/x86_64/iso-contents-root/
    label vesa
      menu label Install system with ^basic video driver
      kernel images/RHEL-8.1/vmlinuz
      append initrd=images/RHEL-8.1/initrd.img ip=dhcp inst.xdriver=vesa nomodeset inst.repo=http://10.32.5.1/RHEL-8.1/x86_64/iso-contents-root/
    label rescue
      menu label ^Rescue installed system
      kernel images/RHEL-8.1/vmlinuz
      append initrd=images/RHEL-8.1/initrd.img rescue
    label local
      menu label Boot from ^local drive
      localboot 0xffff
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    ::: itemizedlist
    -   安装程序在没有运行时镜像的情况下无法引导。使用
        `inst.stage2`{.literal} 引导选项指定镜像的位置。另外，您可以使用
        `inst.repo=`{.literal} 选项指定镜像和安装源。
    -   与 `inst.repo`{.literal} 一起使用的安装源位置必须包含一个有效的
        `.treeinfo`{.literal} 文件所。
    -   当您选择 RHEL8 安装 DVD 作为安装源时，该 `.treeinfo`{.literal}
        文件会指向 BaseOS 和 AppStream 软件仓库。您可以使用单个
        `inst.repo`{.literal} 选项来加载这两个软件仓库。
    :::
    :::
9.  创建一个子目录来将引导镜像文件保存在 `/var/lib/tftpboot/`{.literal}
    目录中，并将引导镜像文件复制到该目录中。在这个示例中，目录为
    `/var/lib/tftpboot/pxelinux/images/RHEL-8.1/`{.literal}:
    ``` screen
    # mkdir -p /var/lib/tftpboot/pxelinux/images/RHEL-8.1/
    # cp /path_to_x86_64_images/pxeboot/{vmlinuz,initrd.img} /var/lib/tftpboot/pxelinux/images/RHEL-8.1/
    ```
10. 在 DHCP 服务器中启动并启用该 `dhcpd`{.literal} 服务。如果您在
    localhost 中配置了 DHCP 服务器，在本地主机中启动并启用
    `dhcpd`{.literal} 服务。
    ``` screen
    # systemctl start dhcpd
    # systemctl enable dhcpd
    ```
11. 启动并启用 `tftp.socket`{.literal} 服务：
    ``` screen
    # systemctl start tftp.socket
    # systemctl enable tftp.socket
    ```
    PXE 引导服务器现在可以提供 PXE 客户端。您可以启动客户端，即您要安装
    Red Hat Enterprise Linux 的系统，在提示指定引导源时选择 [**PXE
    引导**]{.strong}，并启动网络安装。
:::
:::
::: section
::: titlepage
# []{#preparing-for-a-network-install_installing-rhel-as-an-experienced-user.html#configuring-a-tftp-server-for-uefi-based-clients_preparing-for-a-network-install}为基于 UEFI 的客户端配置 TFTP 服务器 {.title}
:::
使用这个流程配置 TFTP 服务器和 DHCP 服务器，并为基于 UEFI 的
AMD64、Intel 64 和 64 位 ARM 系统的 PXE 服务器启动 TFTP 服务。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
::: itemizedlist
-   本节中的所有配置文件都是示例。配置详情会根据架构和具体要求的不同而有所不同。
-   Red Hat Enterprise Linux 8 UEFI PXE 引导支持基于 MAC 的 grub
    菜单文件的小写文件格式。例如： grub2 的 MAC 地址文件格式是
    `grub.cfg-01-aa-bb-cc-dd-ee-ff`{.literal}
:::
:::
::: orderedlist
**流程**
1.  作为 root 用户安装以下软件包。如果您已在网络中配置了 DHCP
    服务器，请排除 dhcp-server 软件包。
    ``` screen
    # yum install tftp-server dhcp-server
    ```
2.  允许到防火墙 `tftp service`{.literal} 中的进入连接：
    ``` screen
    # firewall-cmd --add-service=tftp
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    ::: itemizedlist
    -   这个命令启用了临时访问，直到下次服务器重启为止。要启用持久性访问，在该命令中添加
        `--permanent`{.literal} 选项。
    -   根据安装 ISO 文件的位置，您可能需要允许 HTTP
        或者其他服务的进入连接。
    :::
    :::
3.  将您的 DHCP 服务器配置为使用带有 [**shim**]{.strong}
    打包的引导镜像，如下例所示
    `/etc/dhcp/dhcpd.conf`{.literal}。请注意，如果您已经配置了 DHCP
    服务器，在 DHCP 服务器中执行这个步骤。
    ``` screen
    option space pxelinux;
    option pxelinux.magic code 208 = string;
    option pxelinux.configfile code 209 = text;
    option pxelinux.pathprefix code 210 = text;
    option pxelinux.reboottime code 211 = unsigned integer 32;
    option architecture-type code 93 = unsigned integer 16;
    subnet 10.0.0.0 netmask 255.255.255.0 {
    	option routers 10.0.0.254;
    	range 10.0.0.2 10.0.0.253;
    	class "pxeclients" {
    	  match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
    	  next-server 10.0.0.1;
    	  if option architecture-type = 00:07 {
    	    filename "BOOTX64.efi";
    	  } else {
    	    filename "pxelinux/pxelinux.0";
    		}
      }
    }
    ```
4.  从 `shim`{.literal} 软件包访问 `BOOTX64.efi`{.literal} 文件，从 DVD
    ISO 镜像文件中的 `grub2-efi`{.literal} 软件包访问
    `grubx64.efi`{.literal} 文件，其中 [*my_local_directory*]{.emphasis}
    是您创建的目录的名称：
    ``` screen
    # mount -t iso9660 /path_to_image/name_of_image.iso /mount_point -o loop,ro
    ```
    ``` screen
    # cp -pr /mount_point/BaseOS/Packages/shim-version-architecture.rpm /my_local_directory
    ```
    ``` screen
    # cp -pr /mount_point/BaseOS/Packages/grub2-efi-version-architecture.rpm /my_local_directory
    ```
    ``` screen
    # umount /mount_point
    ```
5.  解压软件包：
    ``` screen
    # rpm2cpio shim-version-architecture.rpm | cpio -dimv
    ```
    ``` screen
    # rpm2cpio grub2-efi-version-architecture.rpm | cpio -dimv
    ```
6.  从您的引导目录中复制 EFI 引导镜像。用 shim 或 grub 替换
    [*ARCH*]{.emphasis}，后接构架，例如 `grubx64`{.literal}:
    ``` screen
    # cp my_local_directory/boot/efi/EFI/redhat/ARCH.efi /var/lib/tftpboot/uefi/
    ```
    ``` screen
    # cp my_local_directory/boot/efi/EFI/redhat/ARCH.efi /var/lib/tftpboot/uefi
    ```
7.  在 `tftpboot/`{.literal} 目录中添加名为 `grub.cfg`{.literal}
    的配置文件，如下例所示：
    ``` screen
    set timeout=60
    menuentry 'RHEL 8' {
      linuxefi images/RHEL-8.1/vmlinuz ip=dhcp inst.repo=http://10.32.5.1/RHEL-8.1/x86_64/iso-contents-root/
      initrdefi images/RHEL-8.1/initrd.img
    }
    ```