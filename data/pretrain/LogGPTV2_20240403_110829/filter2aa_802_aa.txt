Home Invasion 2.0
Attacking Network-Connected Embedded Devices
0. Abstract
1. Introduction
2. Methodology for devices evaluated
2.1 Belkin WeMo switch
2.2 MiCasaVerde VeraLite
2.3 INSTEON Hub
2.4 Karotz Smart Rabbit
2.5 Linksys Media Adapter
2.6 Lixil Satis Smart Toilet
2.7 Radio Thermostat
2.8 Sonos Bridge
3. Results
3.1 Belkin WeMo switch
3.1.1 Vulnerable libupnp version
3.1.2 Unauthenticated UPnP actions
3.1.2.1 SetBinaryState
3.1.2.2 SetFriendlyName
3.1.2.3 UpdateFirmware
3.2 MiCasaVerde VeraLite
3.2.1 Lack of authentication on web console by default
3.2.2 Lack of authentication on UPnP daemon
3.2.3 Path Traversal
3.2.4 Insufficient Authorization Checks
3.2.4.1 Firmware Update
3.2.4.2 Settings backup
3.2.4.3 Test Lua code
3.2.5 Server Side Request Forgery
3.2.6 Cross­Site Request Forgery
3.2.7 Unconfirmed Authentication Bypass
3.2.8 Vulnerable libupnp Version
3.3 INSTEON Hub
3.3.1 Lack of authentication
3.4 Karotz Smart Rabbit
3.4.1 Exposure of wifi network credentials unencrypted to the Karotz server
3.4.2 Python module hijack in wifi setup
3.4.3 Unencrypted remote API calls
3.5 Linksys Media Adapter
3.5.1 Unauthenticated UPnP actions
3.6 LIXIL Satis Smart Toilet
3.6.1 Default Bluetooth PIN
3.7 Radio Thermostat
3.7.1 Unauthenticated API
3.7.2 Disclosure of WiFi passphrase in old firmware versions
3.8 SONOS Bridge
3.8.1 Support Console Information Disclosure
4. Discussion
0. Abstract
We evaluated the security of several network­connected embedded devices marketed for home
use. While network connectivity is already commonplace for personal computers, mobile
devices such as smartphones, printers, and digital storage units, there are a growing number of
network­connected devices that do not fit these traditional categories. With some of these
devices, a compromise would allow an attacker some control over the physical world, posing a
different type of risk than that associated with a personal computer.
We selected our research targets based on capabilities, availability, and cost; the subset of
devices selected match what might be found in each room of a modern home in 2013. We
discovered exploitable flaws in nearly every device analyzed, many with a low level of difficulty for
exploitation. We present exploitation techniques for each flaw discovered as well as noting the
risk posed by each flaw.
We conclude with an overall assessment of the current state of security in non­traditional
network­connected embedded devices that interface with the the physical world and we discuss
the implications of vulnerabilities in this class of device.
1. Introduction
The first iteration of any technology is often released in an immature state. As security is not
generally a functional requirement of a system, it is often overlooked in the interest of shipping a
product. Our research suggests that this holds true for non­traditional network­connected
devices.
The types of devices being released are varied in nature and purpose: there are
network­connected door locks, electrical switches, and weight scales. There are even
network­connected toilets! Given that this shift to network­controlled versions of existing
technologies usually involves devices with some control over the physical world, compromise of
these devices poses different and potentially serious consequences in the physical world.
We performed this research in the hopes of determining how well security is considered in these
devices and what considerations, if any, need to be taken by those adopting these technologies
into their homes and businesses.
2. Methodology for devices evaluated
2.1 Belkin WeMo switch
The WeMo was evaluated by launching attacks from a black­box perspective, and by
eavesdropping on traffic generated by the associated iPhone application.
2.2 MiCasaVerde VeraLite
The VeraLite was evaluated by launching attacks from a black­box perspective, by analysis of
the extracted squashfs firmware package, and by reviewing the source of various applications
on the device itself.
2.3 INSTEON Hub
The INSTEON Hub was evaluated through black­box testing.
2.4 Karotz Smart Rabbit
The Karotz was evaluated using a combination of black­box testing, source code audit on the
setup package, and documentation review.
2.5 Linksys Media Adapter
The Linksys Media Adapter was evaluated through analysis of a rom dump. The device was not
evaluated directly because of a lack of availability.
2.6 Lixil Satis Smart Toilet
The Satis was evaluated by means of reverse engineering its associated Android application.
The device was not evaluated directly due to a lack of availability in the United States and the
prohibitive cost of purchasing the toilet.
2.7 Radio Thermostat
The Radio Thermostat was evaluated through study of its API documentation.
2.8 Sonos Bridge
The Sonos Bridge was evaluated using black­box testing techniques, and documentation review.
3. Results
3.1 Belkin WeMo switch
From the Belkin WeMo site [7]:
“WeMo is a family of simple and customizable products that allow you to control home electronics
from anywhere.”
The Belkin WeMo switch is a device that plugs into an electrical outlet and has its own built­in
outlet. It connects to an 802.11 network. Dependent on the state of the WeMo switch, the device
plugged into the WeMo switch is or is not provided with power. A physical button on the device
and a UPnP service allow for a change in state to the device.
3.1.1 Vulnerable libupnp version
Portable SDK for UPnP version 1.6.17 and earlier are vulnerable to various remote buffer
overflow attacks [5]. The Belkin WeMo uses Portable SDK for UPnP version 1.6.6.
3.1.2 Unauthenticated UPnP actions
UPnP is a remote procedure call protocol best known for its use in automated network
configuration. As its original intended purpose was to allow devices without a physical interface
to self­configure when attached to an IP network, it is by design without any authentication in its
basic form. While there are standards for adding authentication to UPnP daemons, they are not
widely deployed.
The Belkin WeMo switch allows configuration and control of the device from the local network
using UPnP actions that do not require authentication.
3.1.2.1 SetBinaryState
The “basicevent” service has a UPnP action named “SetBinaryState”, which allows the unit to
change to an “on” or “off” state. There is no rate limiting on the state change, so the state can be
changed as rapidly as the device can respond to UPnP control requests.
3.1.2.2 SetFriendlyName
The “basicevent” service has a UPnP action named “SetFriendlyName”, which allows the name
displayed in the control application to be changed.
3.1.2.3 UpdateFirmware
The “firmwareupdate” service has a UPnP action named “UpdateFirmware”, which allows new
firmware to be applied to the device. While the firmware is signed, it is possible to push old
firmware versions that have known flaws such as the one discussed in section 3.2.1.1.
3.2 MiCasaVerde VeraLite
From the MiCasaVerde website [6]:
“Home control doesn't have to be complicated or expensive, so we came up with the VeraLite smart
controller, which is simple and inexpensive. It may be small, but it's capable of big things!
VeraLite gives you easy control over lights, cameras, thermostats, door locks alarm systems and
more. Plus you easily can add intelligence to almost anything electronic in your home, and VeraLite
can control them too.  All the smart home benefits you've been looking for are right here in this
easy, inexpensive add­on to your home network.”
The MiCasaVerde VeraLite is a low­cost home automation control unit which controls various
network­connected devices via Z­Wave, INSTEON, X10, and others. Various devices the
VeraLite can control include, but are not limited to: lights, electrical outlets, door locks, alarm
systems, window blinds, electronically controlled relays, etc.
The VeraLite unit is controlled via the local network, or over the Internet. Each VeraLite unit
connects via SSH to servers owned by MiCasaVerde, and uses SSH remote port forwarding.
The main control system forwards port 80 on the local VeraLite unit to a remote port on one of