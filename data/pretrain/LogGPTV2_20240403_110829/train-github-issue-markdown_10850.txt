### Description
The `fit_transfrom` function from the `sklearn.impute.KNNImputer` returns
array that with `NaN` values removed instead of imputed.
For example if an array X with shape (1,100) and 4 missing values is passed to
fit_transform. It returns an array with size shape (1,96); The `NaN` values
removed.
#### Example :
    import numpy as np
    from sklearn.impute import KNNImputer
    X = np.array([[1,2,np.nan,3,4,np.nan,5,6,np.nan]])
    imp = KNNImputer()
    X_imp = imp.fit_transform(X)
    print(X.shape)
    print(X_imp.shape)
    print(X)
    print(X_imp)
#### Expected Results
(1, 9)  
(1, 9)  
[[ 1. 2. nan 3. 4. nan 5. 6. nan]]  
[[1. 2 _some_value_here_ 3\. 4. _some_value_here_ 5\. 6. _some_value_here_ ]]
#### Actual Results
(1, 9)  
(1, 6)  
[[ 1. 2. nan 3. 4. nan 5. 6. nan]]  
[[1. 2. 3. 4. 5. 6.]]
#### Versions
System:  
python: 3.7.4 (default, Aug 9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]  
executable: C:\Users\my_name\Anaconda3\pythonw.exe  
machine: Windows-10-10.0.18362-SP0
Python dependencies:  
pip: 20.0.2  
setuptools: 45.2.0.post20200210  
sklearn: 0.22.1  
numpy: 1.18.1  
scipy: 1.4.1  
Cython: 0.29.15  
pandas: 1.0.1  
matplotlib: 3.1.3  
joblib: 0.14.1
Built with OpenMP: True