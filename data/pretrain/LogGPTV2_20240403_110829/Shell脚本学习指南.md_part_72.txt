附加的波浪号展开
POSIX将文字定义为等同于$HOME与“user一user的根目录。这两个Shell
都允许使用~+作为SPWD（当前工作目录）的缩写，使用~-作为SOLDPWD（前一
个工作目录）的缩写。
算术命令
-1 *
POSIX定义$（（...））标记作为算术展开，但不提供任何其他算术操作的机制，不
过，两种Shell都支持两种直接处理算术的标记，而非展开：
1et *x = 5 + y*
((x = 5 + y))
1et命令，以引号框起
未前置S，自动的用双围括弧引起来
我们并不清楚为什么POSIX仅将算术展开标准化，可能是由于你可以使用：（do-
nothing）命令与算术展开达到相同效果：
：$（(x=5 ▪y))
几乎与1et或（（--)））一样
（(+S))S=x
类似，但前后都不可置放任何空格
有个不同之处，便是1et与（（...））都有离开状态：0为真（true）值：而1为伪
（false）值。这一点，让你能在if与while语句里使用它们：
((2 =1 x)） oTqn
op
任何东西·
done
算术的for循环
两个Shell都支持算术的for循环，它和awk、C与C++里的for循环很相似。看
起来就像这样：
www.TopSage.com
---
## Page 422
410
第14章
for ((init; condition; increment))
do
Gone
环体
这里面的init、condition，与increment任一个，都可为Shell的算术表示式，
正如同它出现在s（（...)）里那样。在for循环里使用（（...））语法相似于算术评
估语法。
当你案要以固定次数执行任务时，可以使用算术的for循环：
for ((1 = 1; 1 >
向左与向右位移一个位
由左至右
 >=
比较
由左至右
= =1=
等于与不等
由左至右
&
Bitwise 的 AND
由左至右
Bitwise 的 Exclusive OR
由左至右
注2:
, http://www.star.le.ac.ak/~tjg/rc/,
www.TopSage.com
---
## Page 424
412
表14-5：bash与ksh93的算术运算符（续）
com
运算符
相关性
1
Bitwise 的 OR
由左至右
&&
逻辑的AND（捷径式）
由左至右
11
逻辑的OR（捷径式）
由左至右
?：
条件表示式
由右至左
+
=/=3=6=^=>=1=
指定运算符
由右至左
连续性评估
由左至右
注：ksh93m与更新版本使用，在bash'3.i之前的版本里，**为应相美联的，它是自3.1版后才
变成右相关联处理，C语言里没有**运算符。
圆括弧可用于群组化子表示式。其算术表示式的语法（类C）支持关联式运算符：1为
真、0为伪。
例如：$（（3>2））的值为1，S（（（3>2）11（4 cd /gmu/basb
切换至bash目录
250 Directory successfully changed.
200 Switching to Binary node.
ftp> binary
确认为二进制模式
ftp> haeh
显示标记
Hash mark printing on (1024. bytes/bash mark) .
ftp> get bash-3.o.tar.gz
1ocal: bash-3.0.tar.gz remote:,bash-3,0.tar.gz
取出文件
227 Bntering Passive Mode (199,232,41, 7,149,247)
150 Opening BINARY mode Gata connection tor bash-3.0.tar.gz (2418293
bytes) .
226 Pile send CK.
2418293 bytes received in 35.9 secs (66 Kbytes/sec)
ttp> quit
221 Goodbye.
大功告成
除了bash发布包本身以外，你应该也要取国任何的修补文件（patch）。以3.0版的bash
而言，它的修补文件一—修改源代码应修正的部分一必须自不同的地点取得。你可
以在ftp://ftp.cwru.edu/pub/bash/bash-3.0-patches/下找到，取出所有修补文件后，将之
置于临时目录，方式如下：
上
S nkdir,-/tmp/p
sod/tmp/p
建立临时性目录
切换过去
>do wget ftp://ftp.cwru.edu/gub/bash/bash-3,0=patches/bash30-0$1
> Gone
取出所有修补文件
 + +
省略许多的输出
...
写这本书时，共有16个修补文件，有可能还有更多更新的修补文件，得视bash版本而
定
至此，你已准备好解开发布文件与套用修补文件了。首先，解开源代码：
Sg=ip -d dmoeq--oqza--od-qoed op dose
$ find .-nane **,rej'
省略许多的始出
$find.nane **,orig'-print 1 xarga zn
检查是否失效
清空
修补文件的引用一如上述，是使用GNU版本的patch。请注意有些商用UNIX系统提供
的是较旧的版本。在套用修补文件之后，我们会寻找.rej（reject）文件，看看是否有
修补失败的记录，在这里没有，所以一切运作正常，接下来，我们会删除.orig（original）
文件，再以下面的操作建置bash：