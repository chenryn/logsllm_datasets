with  in your regexes. When reading regexes from a
file or receiving them from user input, these Unicode escapes will not work if you pass
the string you read or received directly to re .compile(). In Python 2.x, you can decode
the Unicode escapes by calling string,decode(*unicode-escape′ ). In Python 3.x you
can call string-encode(*utf-8′) decode(*unicode-escape′).
Code points can be used inside and outside character classes.
Unicode category
Each Unicode code point fits into a single Unicode category. There are 30 Unicode
categories, specified with a code consisting of rwo letters. These are grouped into 7
super-categories that are specified with a single lerter.
p{(L): Any kind of letter from any language
: A character intended to be combined with another character (accents,
umlauts, enclosing boxes, etc.)
^p{Mn: A character intended to be combined with another character that does
not take up extra space (e.g., accents, umlauts, etc.)
p{Mc}>: A character intended to be combined with another character that does
take up extra space (e.g., vowel signs in many Eastern languages)
pf(Me: A character that encloses another character (circle, square, keycap, etc.)
p{Z}: Any kind of whitespace or invisible separator
^p{Zs: A whitespace character that is invisible, but does take up space
p{Z1}: The line separator character U+2028
p{Zp}: The paragraph separator character U+2029
p{$)>: Math symbols, currency signs, dingbats, box-drawing characters, etc.
^p{Sm: Any mathematical symbol
p{Sc}>: Any currency sign
^p(Sk: A combining character (mark) as a full character on its own
^p{So: Various symbols that are not math symbols, currency signs, or combining
: Any kind of punctuation character
2.7 Unicede Code Points, Categories, Blocks, and Scripts | 51
---
## Page 68
p(Pd: Any kind of hyphen or dash
p(Ps: Any kind of opening bracket
p{Pe: Any kind of closing bracket
: A punctuation character such as an underscore that connects words
^p{Po: Any kind of punctuation character that is not a dash, bracket, quote or
^p{C): Invisible control characters and unused code points
p{Cc}>: An ASCII or Latin-1 control character Ox00...0x1F and 0x7F...0x9F
^p{Cf}: An invisible formatting indicator
^p{Co: Any code point reserved for private use
p{Cs}: One half of a surrogate pair in UTF-16 encoding
^p{Cn: Any code point to which no character has been assigned
 Sua go Kem xmb  s! {1}d
single code point in any of the *letter?a categories.
\P is the negated version of .  matches a single code point that is not in
the L1 category. \P{L> matches a single code point that does not have any of the *lertter*
all code points. 
U+0100.U+017F \p{InLatinExtended-A}>
U+0180.U+024F p{InLat:inExtended-B}
U+0250.U+02AF \p{InIPAExtens1ons
U+02Bo.U+02FF \p{InSpacingModifierLetters}
U+0300._U+036F \p{InCoebiningDiacriticalMarks}
U+0370.U+03FF \p{InGreekandCoptic)
U+0400.U+04FF \p{InCyr1111c}>
52 | Chapter 2: Basic Regular Expression Skils
---
## Page 69
U+0500.J+052F p(InCyr111icSupplement}
U+0530.U+058F \p{InAxmen1an}
U+0590._U+05FF \p(InHebrew}>
U+0600.U+06FF \p{InArabic}
U+0700.U+074F \p{InSyr1ac})
U+0750.U+077F 
U+0800.U+083F
p{InSamaritan})
U+0840.U+085F \p{InManda1c}
U+08Ao.U+08FF \p(InArabicExtended-A}
U+0g0o0.U+097F \p{ InDevanagar1
U+0980.U+09FF p{InBenga11)
U+0A00._U+0A7F
p{InGurmukhi}:
U+0A80.U+0AFF \p{InGuarati}>
U+OB00._U+0B7F
p(Inoriya})
U+0B80.U+0BFF \p{InTam11))
U+0Coo._U+0C7F p{InTelugu}>
U+0C8o.U+0CFF 
U+1100.+11FF
p{InHangu1Jamo>
U+1200._U+137F
p{InEthiopic}>
U+1380.U+139F p{ InEthiop1cSupplement}
U+13A0.U+13FF \p{InCherokee}
U+1400.U+167F p{InUnif1edCanadianAboriginalSy1lab1cs
U+1680._U+169F
\p{InOgham))
U+16A0._U+16FF
p{InRun1c}
U+1700._U+171F
p{InTagalog}>
U+1720._U+173F
p{InHanunoo})
U+1740.U+175F
\p(InBuhid})
U+1760..U+177F
p{ InTagbanwa}:
U+1780.LU+17FF p{InKhmer)
U+1800.U+18AF p{InMongolian
U+1880.U+18FF 
U+1900._U+194F
p(InLinbu})
U+1950.U+197F \p{InTaiLe})
U+1980.U+190F p{InNewTa1Lue
2.7 Unicede Code Points, Categories, Blocks, and Scripts | 53
---
## Page 70
U+19E0.U+19FF p(InKhmerSynbo1s)
U+1A00.U+1A1F p{InBuginese} 
U+1B80.U+1BBF (p{InSundanese}
U+1BCo.U+1BFF \p(InBatak)
U+1C0o.U+1C4F (p{InLepcha}
U+1Do0.U+1D7F 
U+1F00..U+1FFF
p{InGreekExtended}
U+2000..U+206F
p{ InGeneralPunctuation}
U+2070._U+209F p{ InSuperscriptsandSubscripts}
U+20Ao.U+20CF p{InCurrencySynbols
U+2400._U+243F
p{InControlPictures}>
U+2440.U+245F 
U+2580.U+259F 
U+2700..U+27BF
\p{InDingbats}>
U+27C0._U+27EF
p{ InMiscellaneousMathematicalSynbols-A}
U+27F0._U+27FF
p{InSupplementalArrows-A}
U+2800._U+28FF
p{InBraillePatterns}
U+2900._U+297F
p{ InSupplementalArrows-B
U+2980._U+29FF
U+2Ao0._U+2AFF \p(InSupplementalMathematica10perators
p{InMisce1laneousMathematicalSynbols-B}
U+2Boo.U+2BFF 
U+2C60._U+2C7F
p{InLatinExtended-C}>
U+2F0o.U+2FDF 
U+3000.U+303F p{InCJKSynbolsandPunctuation}
U+3040.LU+309F
p(InHiragana}>
U+30A0.U+30FF \p{InKatakana}>
U+3100.U+312F \p{InBopomofo}>
U+3130.U+318F p{InHangu1Compatibi1ityJamo}
U+3190.U+319F p{InKanbun}
U+31A0._U+31BF
p{InBopomofoExtended}
U+31C0..U+31EF
p{InCJKStrokes}>
(U+31F0.U+31FF
p{ InKatakanaPhoneticExtensions
U+3200.U+32FF 
U+A4D0.U+A4FF \p{InL1isu}>
U+A500._U+A63F
p(InVa1})
U+A640.U+A69F \p{InCyr1111cExtended-B}
U+A6A0.U+A6FF p{InBamum) >
U+A70o.U+A71F \p{InModif1erToneLetters])
U+A720.U+A7FF \p{ InLatinExtended-D}
U+A800.U+A82F \p(InSylotiNagr1}
U+A830.U+A83F 
U+A840._U+A87F
{ed-s3euduI}d\
U+A880._U+A8DF
p{InSaurashtra}
U+A8E0._U+A8FF
p{ InDevanagariExtended}
U+A900._U+A92F
p(InKayahL1))
U+A930.U+A95F
p(InRejang})
U+A960.U+A97F
p{InHangu1JamoExtended-A}>
U+A980._U+A9DF
p{InJavanese}>
U+AA00._U+AA5F
p(InChan})
U+AA60.U+AA7F \p{ InMyanmarExtended-A}
U+AA80.U+AADF
p(InTaiViet))
2.7 Unicede Code Points, Categories, Blodks, and Scripts | 55
---
## Page 72
U+ABCo.U+ABFF p(InMeeteiMayek}>
U+ACoo._U+D7AF \p{InHangu1Sy1lables>
{8-papuaxgouecnueud sca+oga
U+D800._U+DB7F p{InHighSurrogates})
U+DB8o.U+DBFF p{ InHighPrivateUseSurrogates}
U+E000._U+F8FF
p{InPrivateUseArea})
U+Fgoo.U+FAFF p{InCJKConpat:ibi1ityIdeographs1)
U+FFoo._U+FFEF p{InHalfwidthandFul1widthForms 
U+FFFo.U+FFFF \p{InSpecials}
A Unicode block is a single, contiguous range of code points. Although many blocks
have the names of Unicode scripts and Unicode categories, they do not correspond
100% with them. The name of a block only indicates its primary use.
The Currency block does not include the dollar and yen symbols. Those are found in
the BasicLatin and Latin-1Supplement blocks, for historical reasons. Both are in the
jo peasu  asn *poqs ouamo Xue qpieu o1 Aaoaseo toqus Kouaan
\p{InCurrency}),
Most blocks include unassigned code points, which are in the category <p(Cn). None
of the other Unicode categories, and none of the Unicode scripts, include unassigned
code points.
The <<p{InBlockNane syntax works with .NET, XRegExp, and Perl. Java uses the
^p{ IsBlockNane ) syntax.
Perl also supports the Is variant, but we recommend you stick with the In syntax, to
avoid confusion with Unicode scripts. For scripts, Perl supports <^p{Script}) and