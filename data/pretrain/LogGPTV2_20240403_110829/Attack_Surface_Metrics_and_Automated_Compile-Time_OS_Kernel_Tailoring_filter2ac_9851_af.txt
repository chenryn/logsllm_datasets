Vikram Adve. “Secure Virtual Architecture: A Safe Exe-
cution Environment for Commodity Operating Systems”.
In: Proceedings of the 21st ACM Symposium on Operat-
ing Systems Principles (SOSP ’07). (Stevenson, WA, USA).
2007, pages 351–366. ISBN: 978-1-59593-591-5. DOI: 10.
1145/1294261.1294295.
[13] Christian Dietrich, Reinhard Tartler, Wolfgang Schr¨oder-
Preikschat, and Daniel Lohmann. “A Robust Approach for
Variability Extraction from the Linux Build System”. In:
Proceedings of the 16th Software Product Line Confer-
ence (SPLC ’12). (Salvador, Brazil, Sept. 2–7, 2012). 2012,
pages 21–30. ISBN: 978-1-4503-1094-9. DOI: 10.1145/
2362536.2362544.
[14] Stephanie Forrest, Steven Hofmeyr, and Anil Somayaji.
“The Evolution of System-Call Monitoring”. In: Proceed-
ings of the 2008 Annual Computer Security Applications
Conference. ACSAC ’08. 2008, pages 418–430. ISBN: 978-
0-7695-3447-3. DOI: 10.1109/ACSAC.2008.54.
[15] Frama-C: A framework for static analysis of C programs.
URL: http : / / frama - c . cea . fr/ (visited on
08/01/2012).
[16] Andreas Gohr. DokuWiki. URL: http : / / dokuwiki .
org (visited on 06/03/2012).
[17] Google Seccomp Sandbox for Linux. URL: http : / /
code.google.com/p/seccompsandbox/wiki/
overview (visited on 06/05/2012).
[18] Toshiharu Harada, Takashi Horie, and Kazuo Tanaka. “Task
Oriented Management Obviates Your Onus on Linux”. In:
Proceedings of the Japan Linux Conference (2004). ISSN:
1348-7868.
[19] H. Hartig, M. Hohmuth, N. Feske, C. Helmuth, A. Lack-
orzynski, F. Mehnert, and M. Peter. “The Nizza secure-
system architecture”. In: Collaborative Computing: Net-
working, Applications and Worksharing, 2005 Interna-
tional Conference on. 2005, 10 pp. DOI: 10 . 1109 /
COLCOM.2005.1651218.
[20] M. Howard, J. Pincus, and J. Wing. “Measuring Relative
Attack Surfaces”. In: Computer Security in the 21st Cen-
tury (2005), pages 109–137.
[21] A. Jaquith. Security Metrics: Replacing Fear, Uncertainty,
and Doubt. 2007.
[22] Gerwin Klein, Kevin Elphinstone, Gernot Heiser, June An-
dronick, David Cock, Philip Derrin, Dhammika Elkaduwe,
Kai Engelhardt, Rafal Kolanski, Michael Norrish, Thomas
Sewell, Harvey Tuch, and Simon Winwood. “seL4: formal
veriﬁcation of an OS kernel”. In: Proceedings of the 22nd
ACM Symposium on Operating Systems Principles (SOSP
’09). (Big Sky, Montana, USA). 2009, pages 207–220.
ISBN: 978-1-60558-752-3. DOI: 10 . 1145 / 1629575 .
1629596.
[23] Calvin Ko, Timothy Fraser, Lee Badger, and Douglas Kil-
patrick. “Detecting and countering system intrusions using
software wrappers”. In: Proceedings of the 9th conference
on USENIX Security Symposium - Volume 9. SSYM’00.
2000, pages 11–11.
[24] Anil Kurmus, Alessandro Sorniotti, and R¨udiger Kapitza.
“Attack surface reduction for commodity OS kernels:
trimmed garden plants may attract less bugs”. In: Pro-
ceedings of the 4th European Workshop on system secu-
rity (EUROSEC ’11). (Salzburg, Austria). 2011, 6:1–6:6.
ISBN: 978-1-4503-0613-3. DOI: 10 . 1145 / 1972551 .
1972557.
[25] C.T. Lee, J.M. Lin, Z.W. Hong, and W.T. Lee. “An
Application-Oriented Linux Kernel Customization for Em-
bedded Systems”. In: Journal of information science and
engineering 20.6 (2004), pages 1093–1108. ISSN: 1016-
2364.
[26] Andrew Lenharth, Vikram S. Adve, and Samuel T. King.
“Recovery domains: an organizing principle for recover-
able operating systems”. In: Proceedings of the 14th Inter-
national Conference on Architectural Support for Program-
ming Languages and Operating Systems (ASPLOS ’09).
(Washington, DC, USA). 2009, pages 49–60. ISBN: 978-
1-60558-406-5. DOI: 10.1145/1508244.1508251.
Jochen Liedtke. “On µ-Kernel Construction”. In: Proceed-
ings of the 15th ACM Symposium on Operating Systems
Principles (SOSP ’95). ACM SIGOPS Operating Systems
Review. 1995. DOI: 10.1145/224057.224075.
lxc: Linux Containers. URL: http : / / lxc .
sourceforge.net (visited on 08/01/2012).
[27]
[28]
[29] A. Madhavapeddy, R. Mortier, R. Sohan, T. Gazagnaire, S.
Hand, T. Deegan, D. McAuley, and J. Crowcroft. “Turning
Down the LAMP: Software Specialisation for the Cloud”.
In: Proceedings of the 2nd USENIX Conference on hot top-
ics in cloud computing (HOTCLOUD’10). 2010, pages 11–
11.
[30] P.K. Manadhata and J.M. Wing. “An Attack Surface Met-
ric”. In: Software Engineering, IEEE Transactions on 37.3
(2011), pages 371 –386.
ISSN: 0098-5589. DOI: 10 .
1109/TSE.2010.60.
[31] Yandong Mao, Haogang Chen, Dong Zhou, Xi Wang, Nick-
olai Zeldovich, and M. Frans Kaashoek. “Software fault
isolation with API integrity and multi-principal modules”.
In: Proceedings of the 23rd ACM Symposium on Oper-
ating Systems Principles (SOSP ’11). (Cascais, Portugal).
2011, pages 115–128. ISBN: 978-1-4503-0977-6. DOI: 10.
1145/2043556.2043568.
[32] Frank Mayer, Karl MacMillan, and David Caplan. SELinux
By Example: Using Security Enhanced Linux. 2006,
page 456. ISBN: 978-0131963696.
[33] T.J. McCabe. “A Complexity Measure”. In: Software En-
gineering, IEEE Transactions on SE-2.4 (1976), pages 308
–320. ISSN: 0098-5589. DOI: 10 . 1109 / TSE . 1976 .
233837.
Jonathan M. McCune, Yanlin Li, Ning Qu, Zongwei Zhou,
Anupam Datta, Virgil Gligor, and Adrian Perrig. “TrustVi-
sor: Efﬁcient TCB Reduction and Attestation”. In: Secu-
rity and Privacy (SP), 2010 IEEE Symposium on. 2010,
pages 143 –158. DOI: 10.1109/SP.2010.17.
[34]
[35] David Mosberger and Tai Jin. “httperf. A tool for measuring
web server performance”. In: SIGMETRICS Performance
Evaluation Review 26.3 (1998), pages 31–37. ISSN: 0163-
5999. DOI: 10.1145/306225.306235.
[36] Derek Gordon Murray, Grzegorz Milos, and Steven Hand.
“Improving Xen security through disaggregation”. In: Pro-
ceedings of the fourth ACM SIGPLAN/SIGOPS interna-
tional conference on Virtual execution environments. VEE
’08. 2008, pages 151–160. ISBN: 978-1-59593-796-4. DOI:
10.1145/1346256.1346278.
[37] Sarah Nadi and Richard C. Holt. “Mining Kbuild to De-
tect Variability Anomalies in Linux”. In: Proceedings of
the 16th European Conference on Software Maintenance
and Reengineering (CSMR ’12). (Szeged, Hungary). 2012.
ISBN: 978-1-4673-0984-4. DOI: 10 . 1109 / CSMR .
2012.21.
ncc: The new generation C compiler. URL: http : / /
students . ceid . upatras . gr / ˜sxanth / ncc/
(visited on 08/01/2012).
[38]
[39] Nicolas Palix, Ga¨el Thomas, Suman Saha, Christophe
Calv`es, Julia L. Lawall, and Gilles Muller. “Faults in
Linux: Ten years later”. In: Proceedings of the 16th In-
ternational Conference on Architectural Support for Pro-
gramming Languages and Operating Systems (ASPLOS
’11). 2011, pages 305–318. DOI: 10.1145/1950365.
1950401.
phpBB. Free and Open Source Forum Software. URL: www.
phpbb.com (visited on 06/03/2012).
[40]
[41] Niels Provos. “Improving host security with system call
policies”. In: Proceedings of
the 12th Conference on
USENIX Security Symposium (SSYM ’03). Volume 12.
2003, pages 18–18.
[42] D. Rosenberg. CVE-2010-3904 exploit. URL: www .
vsecurity.com/download/tools/linux-rds-
exploit.c (visited on 08/01/2012).
[43] B. Schneier. “Attack trees”. In: Dr. Dobb’s journal 12
(1999).
[44] Steven She and Thorsten Berger. Formal Semantics of the
Kconﬁg Language. Technical Note. University of Waterloo,
2010.
[46]
[45] Yonghee Shin and Laurie Williams. “Is complexity really
the enemy of software security?” In: Proceedings of the 4th
ACM workshop on Quality of protection. QoP ’08. 2008,
pages 47–50. ISBN: 978-1-60558-321-1. DOI: 10.1145/
1456362.1456372.
Julio Sincero, Reinhard Tartler, Daniel Lohmann, and
Wolfgang Schr¨oder-Preikschat. “Efﬁcient Extraction and
Analysis of Preprocessor-Based Variability”. In: Proceed-
ings of
the 9th International Conference on Genera-
tive Programming and Component Engineering (GPCE
’10). (Eindhoven, The Netherlands). 2010, pages 33–42.
ISBN: 978-1-4503-0154-1. DOI: 10 . 1145 / 1868294 .
1868300.
[47] Lenin Singaravelu, Calton Pu, Hermann H¨artig, and Chris-
tian Helmuth. “Reducing TCB complexity for security-
sensitive applications: three case studies”. In: Proceed-
ings of the ACM SIGOPS/EuroSys European Conference
on Computer Systems 2006 (EuroSys ’06). (Leuven, Bel-
gium). 2006, pages 161–174. ISBN: 1-59593-322-0. DOI:
10.1145/1217935.1217951.
[48] Brad Spengler and PaX team. grsecurity kernel patches.
URL: www.grsecurity.net (visited on 08/01/2012).
[49] S. Stolfo, S.M. Bellovin, and D. Evans. “Measuring Secu-
rity”. In: Security Privacy, IEEE 9.3 (2011), pages 60 –65.
ISSN: 1540-7993. DOI: 10.1109/MSP.2011.56.
[50] Michael M. Swift, Steven Martin, Henry M. Levy, and
Susan J. Eggers. “Nooks: an architecture for reliable de-
vice drivers”. In: Proceedings of the 9th ACM SIGOPS
European Workshop “Beyond the PC: New Challenges
for the Operating System”. (Saint-Emilion, France). 2002,
pages 102–107. DOI: 10.1145/1133373.1133393.
[51] Reinhard Tartler, Anil Kurmus, Andreas Ruprecht, Bern-
hard Heinloth, Valentin Rothberg, Daniela Dorneanu,
R¨udiger Kapitza, Wolfgang Schr¨oder-Preikschat, and
Daniel Lohmann. “Automatic OS Kernel TCB Reduction
by Leveraging Compile-Time Conﬁgurability”. In: Pro-
ceedings of the 8th Workshop on Hot Topics in System De-
pendability (HotDep ’12). 2012.
[52] Reinhard Tartler, Daniel Lohmann, Julio Sincero, and
Wolfgang Schr¨oder-Preikschat. “Feature Consistency in
Compile-Time-Conﬁgurable System Software: Facing the
Linux 10,000 Feature Problem”. In: Proceedings of the
ACM SIGOPS/EuroSys European Conference on Computer
Systems 2011 (EuroSys ’11). (Salzburg, Austria). 2011,
pages 47–60. ISBN: 978-1-4503-0634-8. DOI: 10.1145/
1966445.1966451.
[53] Chris Wright, Crispin Cowan, James Morris, Stephen
Smalley, and Greg Kroah-Hartman. “Linux Security Mod-
ule Framework”. In: Proceedings of the Ottawa Linux Sym-
posium. (Ottawa, OT, Canada). 2002, pages 604–617.
[54] Michal Zalewski, Niels Heinen, and Sebastian Roschke.
skipﬁsh. Web application security scanner. URL: http :
/ / code . google . com / p / skipfish/ (visited on
06/03/2012).
[55] Christoph Zengler and Wolfgang K¨uchlin. “Encoding the
Linux Kernel Conﬁguration in Propositional Logic”. In:
Proceedings of the 19th European Conference on Artiﬁcial
Intelligence (ECAI 2010) Workshop on Conﬁguration 2010.
2010, pages 51–56.
Appendix
The following is a proof of Proposition 1.
Proof (AS1 and AS2 are attack surface metrics). AS1µ sat-
isﬁes Deﬁnition 5 through Lemma 1, as adding new func-
tions to the sum results in a larger attack surface measure-
ment (since µ has non-negative values).
For AS2µ, the non-negativity is a known result of al-
gebraic graph theory [6]: the Laplacian matrix of a sim-
ple graph is symmetric real and all eigenvalues are non-
negative, hence, the quadratic form associated with the
Laplacian (x (cid:55)→ xT L(G)x) can only take non-negative val-
ues.
Before proving that AS2µ satisﬁes the second property
in Lemma 1, we explicit the rationale behind chosing this
metric. The metric contains a quadratic term that accounts
for the relative “complexity” of a function in comparison to
its callers and callees: if a function is calling (or is called
by) a more complex function, its relative contribution to the
attack surface should increase and vice versa. For instance,
this can be written for a function n, called by functions m,
m(cid:48) and calling function m(cid:48)(cid:48), κ(n) denoting the relative com-
plexity of function n:
κ(n) = µ(n)(cid:2)(µ(n)− µ(m)) + (µ(n)− µ(m(cid:48))) + (µ(n)− µ(m(cid:48)(cid:48)))(cid:3)
Generalizing to any function:
κ(n) = µ(n)
deg(n)µ(n)− ∑
(i,n)∈(cid:103)CAS
µ(i)
Therefore:
κ(N) + ∑
i∈F
(κ(cid:48)(i)− κ(i)) = µ(N)
(cid:35)
µ(i)
(cid:34)
deg(N)µ(N)−∑
i∈I
µ(i) [µ(i)− µ(N)]
+∑
i∈I
µ(i)2 + mµ(N)2 − 2µ(N)∑
= ∑
i∈I
i∈I
(µ(i)− µ(N))2 ≥ 0
= ∑
i∈I
µ(i)
Hence, adding new functions can only increase the attack
surface measurement AS2µ.
Which, after summing over all functions, corresponds to
µAS
T L((cid:103)GAS)µAS.
(cid:74)1 . . .N − 1(cid:75) and affect N to the newly added function. This
Let’s now prove that adding a new node to an existing
graph can only increase this quadratic term. Without loss
of generality, we assume we starting with function set F =
function is either called or is calling m functions in I ⊆ F
with deg(N) = m < N. We denote by κ the old relative
complexity and κ(cid:48) the new (after the addition of N to the
graph), and deg corresponds as well to the old degree of a
node, unless it is deg(N). Then:
∀i ∈ F,κ(cid:48)(i)− κ(i) = µ(i) [µ(i)− µ(N)]