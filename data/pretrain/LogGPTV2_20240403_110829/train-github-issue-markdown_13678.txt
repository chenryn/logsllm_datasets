### Describe your issue.
"scipy.optimize.shgo" bug in handling multi-dimensional variables.  
My obj is a function of a two-dimensional variable. As the error message shows
below, 'shgo' seems can't handle (m,) shape variables.  
However, even after I have changed "if g(self.x_a, *args) ", line 1, in 
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo.py", line 426, in shgo
        shc.construct_complex()
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo.py", line 751, in construct_complex
        self.iterate()
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo.py", line 894, in iterate
        self.iterate_complex()
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo.py", line 916, in iterate_hypercube
        self.HC = Complex(self.dim, self._raw_func, self.args,
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo_lib\triangulation.py", line 25, in __init__
        self.n_cube(dim, symmetry=symmetry)
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo_lib\triangulation.py", line 76, in n_cube
        self.C0.add_vertex(self.V[origintuple])
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo_lib\triangulation.py", line 635, in __getitem__
        xval = Vertex(x, bounds=self.bounds,
      File "C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python39_64\lib\site-packages\scipy\optimize\_shgo_lib\triangulation.py", line 552, in __init__
        if g(self.x_a, *args) < 0.0:
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
### SciPy/NumPy/Python version and system information
    scipy version: '1.10.0'