The `WalkFunc` of the `filepath.Walk` function (refer to [the official Go documentation](http://golang.org/pkg/path/filepath/#WalkFunc)) is documented as follows:

"If there was a problem accessing the file or directory specified by the path, the incoming error will describe the issue. The function can then decide how to handle that error. In such cases, `Walk` will not descend into that directory."

In other words, it returns the `stat` error for the given path. However, `filepath.Walk` is implemented using the `(*os.File).Readdir` method (refer to [the official Go documentation](http://golang.org/pkg/os/#File.Readdir)). A change was made in [this commit](https://code.google.com/p/go/source/detail?r=100a10512ea4#) to ensure that `(*os.File).Readdir` behaves according to its documentation.

This change altered the behavior of `filepath.Walk`, causing it to now terminate on any errors, instead of calling the `WalkFunc` callback with the parameters `(problemFilename, nil, errFromStat)`.

A fix for this issue has been proposed in [this change list](https://golang.org/cl/16100043/).