ation attack. Reaves et al. [48] ﬁrst analyzed 47 mobile apps
from 28 countries for SSL vulnerabilities and then manually
reverse-engineer seven branchless banking apps, including
three Indian payment apps (Airtel Money, Oxigen Wallet,
and MobileOnMoney). They discover that an attacker can
bypass authentication because of the use of an insecure chan-
nel, the use of weak crypto, or the use of weak passwords.
A follow-up work by Castle et al [9] studies 197 payment
apps, including some from Southern Asia (the apps they study
is not listed). Castle et al. point out that payment apps have
sufﬁcient safeguards to prevent attacks, and the vulnerabilities
pointed out by Reaves et al. are either because of regulatory
constraints or from using old Android phones. They corrobo-
rate their ﬁndings with developer interviews with participants
from well-established organizations.
Payment apps have been studied in other countries, as well.
Yang et al. [62] notes implementation weaknesses in the third-
party SDKs included by Chinese ﬁnancial apps that can result
in integrity attacks on ﬁnancial transactions. Jung et al. [31]
studies repackaging attacks on seven different banking apps
in Korea. Their attacks could bypass integrity checks and anti-
virus checks of banking apps. Yacouba et al. [33] launched
a DDoS attack on a banking server through a repackaged
banking app. Roland et al. demonstrates an NFC relay attack
on the Google Wallet payment system [50].
Research has pointed out several vulnerabilities in ﬁnancial
applications. Taylor et al. [56] did a static analysis of ﬁnancial
apps on Google Play. They discover weaknesses such as the
creation of world-readable and writable ﬁles, the use of unse-
cured content providers, and the use of weak random number
generators. Bojjagani et al. [7] perform static and dynamic
analysis on banking apps to discover 356 exploitable vulner-
abilities, details unknown, from an unknown set of samples.
AlJudaibi et al. [3] discuss 11 signiﬁcant threats faced by mo-
bile devices such as insecure data storage, weak server-side
control in third-party apps, use of a rooted device, and lack
of security in software and kernel. Chothia et al. [11], Stone
et al. [55] and Bojjagani et al. [6] analyze both Android and
iPhone apps for lack of hostname veriﬁcation when an SSL
certiﬁcate is pinned. Their results show how popular bank-
ing apps with these vulnerabilities are prone to phishing and
man-in-the-middle attacks.
Protocol ﬂaws that result in attacks on payment cards that
use chip and PIN (EMV) [8, 35, 38, 51] and 3 Domain Secure
2.0 [2], an authentication protocol for web-based payments,
are also studied before. Many issues concerning ﬁnancial
inclusion for developing countries such as Brazil and Africa
have been extensively studied [22, 42, 61]. Weaknesses in
ﬁnancial systems as a result of excessive reliance on OTPs [10,
37, 49, 59] and its implication on Internet-based services are
also well-known [1, 16, 32, 37, 53, 63].
Prior studies on Indian payments apps were done before the
Indian government launched the Uniﬁed Payment Interface, a
ﬁrst of its kind. To the best of our knowledge, we are the ﬁrst
to conduct a study on UPI.
7 Conclusion
In this paper, we used a principled approach to analyze the
UPI 1.0 protocol and uncovered core design weaknesses in
its unpublished multi-factor authentication workﬂow that can
severely impact a user. We showed attacks that have devastat-
ing implications and only require victims to have installed an
attacker-controlled app, regardless of whether they use a UPI
app or not. All the vulnerabilities identiﬁed were responsibly
disclosed. A subsequent software update to UPI 2.0 prevents
the discussed attack vectors for an exploit. Unfortunately, sev-
eral underlying security ﬂaws remain that suggest a need for
further vetting and security analysis of UPI 2.0, given the
protocol’s importance for mobile payments in India. We dis-
cussed the lessons learned and potential mitigation strategies.
Finally, we expect our ﬁndings to be useful to other countries
that look to implement a common backend infrastructure for
ﬁnancial apps.
8 Acknowledgements
The authors thank Paul Pearce for shepherding the paper,
the anonymous reviewers for their valuable inputs, and Roya
Ensaﬁ and Earlence Fernandes for their valuable feedback.
We also thank colleagues, including Jithin M., Jothis M., and
Arjun R., for helping us with analyzing Android apps in pre-
liminary stages of the project when much less was known.
This material is based on the work supported by the National
Science Foundation under grant number 1646392.
USENIX Association
29th USENIX Security Symposium    1511
References
[1] Manal Adham, Amir Azodi, Yvo Desmedt, and Ioannis
Karaolis. How to attack two-factor authentication in-
ternet banking. In Financial Cryptography and Data
Security, pages 322–328, 2013.
[2] Mohammed Aamir Ali and Aad van Moorsel. Designed
to be broken: A reverse engineering study of the 3D Se-
cure 2.0 Payment Protocol. In Financial Cryptography
and Data Security, pages 201–221, 2019.
[3] Samaher AlJudaibi. Research paper for mobile devices
security. 2016. https://www.researchgate.net/p
ublication/309675787_Research_Paper_for_Mob
ile_Devices_Security.
[4] APKTOOL. https://ibotpeaches.github.io/Ap
ktool/, 2018. [Online; accessed October-2018].
[5] BHIM. https://play.google.com/store/apps/d
etails?id=in.org.npci.upiapp, 2016. [Online; ac-
cessed October-2018].
[6] S. Bojjagani and V. N. Sastry. VAPTAi: a threat model
for vulnerability assessment and penetration testing of
Android and iOS mobile banking apps. In 2017 IEEE
3rd International Conference on Collaboration and In-
ternet Computing (CIC), pages 77–86, 10 2017.
[7] Sriramulu Bojjagani and V. N. Sastry. STAMBA: se-
curity testing for Android mobile banking apps. In Ad-
vances in Signal Processing and Intelligent Recognition
Systems, pages 671–683, 2016.
[8] Mike Bond, Omar Choudary, Steven J. Murdoch, Sergei
Skorobogatov, and Ross Anderson. Chip and Skim:
Cloning EMV cards with the pre-play attack. In Pro-
ceedings of the 2014 IEEE Symposium on Security and
Privacy, SP ’14, pages 49–64. IEEE Computer Society,
2014.
[9] Sam Castle, Fahad Pervaiz, Galen Weld, Franziska Roes-
ner, and Richard Anderson. Let’s talk money: Evalu-
ating the security challenges of mobile money in the
developing world. In Proceedings of the 7th Annual
Symposium on Computing for Development, ACM DEV
’16, 2016.
[10] Kelvin Chikomo, Ming Ki Chong, Alapan Arnab, and
Andrew Hutchison. Security of mobile banking. 01
2006.
[12] Express Computer, 2019.
https://www.expressc
omputer.in/news/financial-cybercrime-and-i
dentity-theft-in-india-are-increasing-fis
/35099/.
[13] Stat Counter.
https://www.statista.com/sta
tistics/262157/market-share-held-by-mobil
e-operating-systems-in-india/, 2018.
accessed October-2018].
[Online;
[14] CuckooDroid. https://github.com/idanr1986/cu
ckoo-droid), 2018. [Online; accessed October-2018].
[15] Android Developers.
https://developer.andr
oid.com/guide/topics/permissions/overvie
w#normal_permissions, 2019.
August-2019].
[Online; accessed
[16] Alexandra Dmitrienko, Christopher Liebchen, Christian
Rossow, and Ahmad-Reza Sadeghi. On the (in)security
of mobile two-factor authentication. In Financial Cryp-
tography and Data Security, pages 365–383, 2014.
[17] Financial Express. https://www.financialexpre
ss.com/money/beware-upi-app-user-loses-r
s-6-8-lakh-from-his-sbi-account-was-it-f
raud-why-it-happened/1426603/, 2018.
accessed August-2019].
[Online;
[18] Earlence Fernandes, Qi Alfred Chen, Justin Paupore,
Georg Essl, J. Alex Halderman, Z. Morley Mao, and
Atul Prakash. Android UI deception revisited: Attacks
In Financial Cryptography and Data
and defenses.
Security, pages 41–59, 2017.
[19] Forbes.
https://www.forbes.com/sites/zakdo
ffman/2019/08/10/google-warning-tens-of-m
illions-of-android-phones-come-preloaded
-with-dangerous-malware/#5dcde47dddb3, 2019.
[Online; accessed August-2019].
[20] Sensors Tech Forum. https://sensorstechforum
.com/android-ios-invasive-app-permissions
-2018/), 2018. [Online; accessed October-2018].
[21] Mobile Security Framework. https://github.com
/MobSF/Mobile-Security-Framework-MobSF, 2015.
[Online; accessed October-2018].
[22] Andrew Harris, Seymour Goodman, and Patrick Traynor.
Privacy and security concerns associated with mobile
money applications in Africa. Washington Journal of
Law, Technology and Arts, 01 2013.
[11] Tom Chothia, Flavio D. Garcia, Chris Heppel, and Chris
McMahon Stone. Why banker Bob (still) can’t get TLS
right: A security analysis of TLS in leading UK banking
apps. pages 579–597, 01 2017.
[23] The Hindu. https://www.thehindu.com/news/na
tional/kerala/hackers-compromise-upi-app
s/article25692100.ece, 2019.
August-2019].
[Online; accessed
1512    29th USENIX Security Symposium
USENIX Association
[24] Android Security 2017 Year in Review.
https:
//source.android.com/security/reports/Goog
le_Android_Security_2017_Report_Final.pdf,
2019. [Online; accessed August-2019].
[25] Android Security 2018 Year in Review.
https:
//source.android.com/security/reports/Goog
le_Android_Security_2018_Report_Final.pdf/,
2019. [Online; accessed August-2019].
[26] MWR Infosecurity.
https://labs.mwrinfosecu
rity.com/assets/BlogFiles/mwri-drozer-use
r-guide-2015-03-23.pdf, 2015. [Online; accessed
October-2018].
[27] Business Insider. https://www.businessinsider.
com/upi-market-share-in-inda-open-for-tak
ing-2019-8, 2019. [Online; accessed August-2019].
[28] Infosec Institute. Hooking and patching Android apps
using Xposed framework. https://resources.in
fosecinstitute.com/android-hacking-and-sec
urity-part-25-hooking-and-patching-android
-apps-using-xposed-framework/#gref.
[Online;
accessed November-2019].
[29] Investopedia. https://www.investopedia.com/new
s/india-demonetization-993-money-returned/,
2018. [Online; accessed October-2018].
[30] JEB. https://www.pnfsoftware.com/, 2018. [On-
line; accessed October-2018].
[31] Jin-Hyuk Jung, Ju Young Kim, Hyeong-Chan Lee, and
Jeong Hyun Yi. Repackaging attack on Android banking
applications and its countermeasures. 73, 12 2013.
[32] Radhesh Krishnan Konoth, Victor van der Veen, and
Herbert Bos. How anywhere computing just killed your
In Financial
phone-based two-factor authentication.
Cryptography and Data Security, pages 405–421, 2017.
[33] Y. Kouraogo, K. Zkik, E. J. El Idrissi Noreddine, and
G. Orhanou. Attacks on Android banking applications.
In 2016 International Conference on Engineering MIS
(ICEMIS), pages 1–6, 9 2016.
[34] The Hindu Business Line. https://www.thehindu
businessline.com/info-tech/senior-executi
ves-vulnerable-to-social-engineering-attac
ks-verizon-2019-report/article27068079.ece,
2019. [Online; accessed August-2019].
[36] MITMProxy. https://mitmproxy.org, 2019. [On-
line; accessed August-2019].
[37] Collin Mulliner, Ravishankar Borgaonkar, Patrick
Stewin, and Jean-Pierre Seifert. SMS-based One-Time
Passwords: Attacks and defense. In Detection of Intru-
sions and Malware, and Vulnerability Assessment, pages
150–159, 2013.
[38] S. J. Murdoch, S. Drimer, R. Anderson, and M. Bond.
Chip and PIN is broken. In 2010 IEEE Symposium on
Security and Privacy, pages 433–446, 2010.
[39] Palo Alto Networks.
https://researchcenter
.paloaltonetworks.com/2017/09/unit42-and
roid-toast-overlay-attack-cloak-and-dagge
r-with-no-permissions, 2017.
October-2018].
[Online; accessed
[40] NPCI. NPCI live members. https://www.npci.org
.in/upi-live-members. [Online; accessed August-
2019].
[41] NPCI. NPCI third party apps. https://www.npci.o
rg.in/upi-PSP%263rdpartyApps. [Online; accessed
August-2019].
[42] Barak W. Nyamtiga and Loserian S. Laizer. Enhanced
security model for mobile banking systems in Tanzania.
International Journal of Technology Enhancements and
Emerging Engineering Research, 01 2013.
[43] Business of Apps. App stores list 2018. https://www.
businessofapps.com/guide/app-stores-list/.
[Online; accessed August-2019].
[44] National
Payments
Corporation
of
India.
https://www.npci.org.in/sites/default/fi
les/UPI-PG-RBI_Final.pdf, 2016.
accessed October-2018].
[Online;
[45] National
Payments
Corporation
of
India.
https://www.npci.org.in/product-statist
ics/upi-product-statistics, 2019.
accessed August-2019].
[Online;
[46] OWASP. https://sushi2k.gitbooks.io/the-owa
sp-mobile-security-testing-guide/content/,
2018. [Online; accessed October-2018].
[47] Saurabh Panjwani and Edward Cutrell. Usably secure,
low-cost authentication for mobile banking. In Proceed-
ings of the Sixth Symposium on Usable Privacy and
Security, Proc. SOUPS, 2010.
[35] El Nour Madhoun, Bertin Emmanuel, and Guy Pujolle.
The EMV payment system: Is it reliable? In The 3rd
IEEE Cyber Security in Networking International Con-
ference (CSNet 2019), 2019.