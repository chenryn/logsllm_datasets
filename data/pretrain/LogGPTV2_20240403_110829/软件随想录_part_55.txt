Michael Gorsuch并没有因为解决了问题而感到高兴，他给我写了一封电
MichaelGorsuch其实早知道这个设置可能会引发故障，但是安装交换机
这时，天已经亮了，我们在美国的客户开始上班了，他们会感到一切正
清晨6点15分，曼哈顿机房彻底无法连通。PEER1在他们那一边找不到
大约到了清晨5点，这个问题又出现了。这一次，Michael Gorsuch打电
过了十分钟，Michael Gorsuch连上了曼哈顿的机房，一切似乎都恢复正
279
五个为什么
---
## Page 294
第九部分
280
修订软件
子脉冲EMP炸弹的袭击，他们只能拼命捶自己的脑袋，眼睁睁看着服务中断
种异乎寻常的故障以一种异乎寻常的方式发生了，比如三个机房都遭到了电
天当他们醒来的时候，我不知道是哪一天，但是会有这么一天，他们发现一
一流的大型超冗余“6个9”系统，也无法排除出现严重故障的可能性。某一
这真有点接近荒谬了。即使有人声称他们已经投资了上千万美元，建立了超
务稳定性（99.9999%的时间正常运行）意味着每年下线时间不能超过30秒。
况，而是意料之外的突发状况。
方，但是这实际上不太可能做到。能够将你置于死地的不是意料到的突发状
不及工程师去检查哪里出了问题，你必须事先就考虑到每一个可能出错的地
为了得到非常高的正常运行时间，你等不及派人去换掉出问题的设备，也等
题就变成了，如何才能最快地派一个人找到发生故障的设备，然后替换掉它。
很重要，这才是网站之间出现巨大差异的地方。突然之间，你正在谈论的问
务中断。正是因为服务中断很少发生，所以每次中断的时间长度就开始变得
互联网上大多数正常运行的在线服务网站，一年中只发生两次、也许三次服
只发生了两次服务的突然中断。其中只有一次是由于我们的过失而造成的。
记错，自从6个月前我们推出“FogBugz在线服务”以来，包括这一次在内
不到足够的数据，无从知道多长的运行时间才算是“正常的”。如果我没有
是缺乏制定标准必需的统计资料，因为服务中断的情况很少发生，所以你得
要想得到真正高的服务稳定性，成本是极其高昂的。俗称“6个9”的服
但是，SLA也不是包治百病的良药，它也存在一些问题。最大的问题就
好主意！
务管理目标。
控/报告脚本，每隔一段时间就检查一次，看看我们是否达到了业
我们就要把它转化成一系列政策，然后再把政策转化成一整套的监
“FogBugz在线服务”的“正常运行时间”到底是多少。确定以后,
经过今天早上的事故后，我会尽快完成它。
了业务管理目标。我本来已经开始着手写了，但是一直没有完成，
吧)。这样我就能衡量我自己（甚至整个系统管理团队）是否达到
正式的SLA条款，但是我觉得应该拟定一个供内部使用（至少如此
SLA条款通常用“正常运行时间”来定义，所以我们需要定义
我知道自从推出“FogBugz在线服务”以后，我们并没有一个
---
## Page 295
面就是我们能够期望的在两个极端之间达到的最佳位置了。
会中断。但是，意料之外的突发情况也许就会让你的服务出现中断。这种局
就事先做好了准备，所以当DNS服务器真地发生故障的时候，你的服务就不
生故障的时候，你的服务就不会中断。你预计到DNS服务器可能会发生故障，
备。你预计到硬盘可能会发生故障，就事先做好了准备，所以当硬盘真地发
个服务稳定性的最佳位置，即所有被预计到的突发情况都已经事先做好了准
终于将每年的“正常运行时间”增加了一分钟。在这两个极端之间，存在
断，简直愚蠢至极；另一个是服务稳定性“极端可靠”，你花了几百万美元
外的、独一无二的“黑天鹅因素”。
果就导致如今每一次发生飞机坠毁，事故的原因看来似乎都属于非常令人意
（NTSB）的成就非常卓越，所有常见的飞机坠毁的原因都已经被消除了，结
务多久。这让我想到了今天的民用航空业。美国的全国运输安全委员会
大洪水的平均间隔时间是多少？”
事件，属于极其小概率的非主流意外。这类事件是如此罕见，以至于常规的
出正常预料的事件。”几乎所有的互联网服务中断都来自于意料之外的突发
taleb04/taleb_indexx.html)，他这样定义：“黑天鹅代表外来因素，是一个超
swans）。这个名词是由Nassim Taleb提出来的（www.edge.org/3rd_culture/
grade）的系统，是服务稳定性的黄金标准，你的系统会比它更稳定吗？
味着它们的服务稳定性只能到达一个令人羞于启齿的“3个9”水平（99.9%
长途电话服务，也会出现长时间的服务中断（1991年中断了6个小时)，这意
纪的服务中断时间额度都用光了。即使是公认的最可靠系统，比如AT&T的
你花了一个小时找到了原因并将其修复，即使这样，你也已经把直到下个世
14天。
测量出每年服务中断的分钟数并无助于预测你的网站第二年会中断服
提高服务稳定性的最大困难，就是“黑天鹅难题”（problem of black
请这样想，如果你的“6个9”系统由于某种神秘原因突然下线了，然后
为了达到这个最佳位置，我们借鉴了日本丰田公司创始人丰田佐吉
服务稳定性有两个极端，一个是“极端不可靠”，服务一次又一次地中
五个为什么
---
## Page 296
282
第九部分修订软件
意义的指标来改进工作，那肯定是没用的。我们真正需要的是一个能够不断
补充升级，确保类似的事故以后不再发生。”
态值作为目标，那是毫无意义的。我们觉得，如果有人希望通过测量某些无
写得不够完整，那么等到事故发生以后，我们就需要对这份文档进行相应的
Michael Gorsuch写道，“或者假定我们已经有了一份书面的操作流程，但是
根据书面流程一一核对安装步骤，这次的服务中断事故就不会发生。”
列出的思考过程。
法很接近，所以我们就决定开始采用这种方法。下面就是Michael Gorsuch
只解决一些表面的症状。
针对根本性的原因开始着手解决问题，你要从根本上解决这个问题，而不是
你就问为什么，一遍遍地追问，直到你找到根本性的原因为止。然后，你就
（Sakichi Toyoda）的思想，他提出了五个为什么。当某个地方出错的时候，
①参见第32讲。
 经过几次内部讨论以后，我们所有人都同意不为服务稳定性设置一个静
“如果我们事先就写好一份书面的标准操作流程，安装完交换机后，再
口为什么？我们总是很狭隘地看待技术说明文档，觉得只有在找不到
口为什么？许多年前，我们就清楚地知道有可能发生此类故障。但是，
口为什么？交换机的网速开关设在了自动调节档，而没有被手动设置
口为什么？与PEER 1的网络运营中心交换意见后，我们判断这个问题
口为什么？我们交换机里的网线接口好像不工作了。
我们与PEER1纽约机房的连接中断了。
不负责系统管理的成员才需要看它。我们没有认识到应该把它作为
系统管理员的情况下才需要去看它，或者觉得只有运营团队中那些
机在生产环境中的设置。
在一个固定档。
技术操作的标准和确认清单。
我们始终没有写出一份书面的技术说明文档，用于指导和检查交换
很可能是由于网速/双工模式不匹配（speed/duplex mismatch)造成的。
---
## Page 297
的时候，只有MichaelGorsuch一个人能被叫醒。
无法预料的“黑天鹅因素”而引起的。
目标就是：我们遇到的所有引起服务中断的故障都是真正由于极其罕见的、
做法能够提高我们的服务稳定性，到达一种我们可以接受的程度，即我们的
顾客都会注意到发生了服务中断，更不要说遭受损失了。我希望我们的这些
客自己决定到底该补偿多少，最多可以延长使用期限一个月，因为不是每个
向我们要求补偿，客服人员会给他的账户延长使用期限或者退款。我们让顾
我们的服务品质正在稳步提高。
正在怎样改进我们的服务。我们希望，我们的顾客能够因此增强信心，相信
中写好的步骤完成。
以后再在生产环境中安装交换机的时候，所有操作步骤都必须严格按照文件
来说,我们采取的变化就是,在内部文档中写入详细的操作步骤和检查清单。
客为了防止类似故障再次发生我们所采取的举措。就拿这一次的交换机事故
提供完整的事后分析，询问五个为什么，找到根本性的原因，告诉我们的顾
而是搭建一个网志。在这个网志上面，我们将实时记录每一次的服务中断，
改进工作质量的流程。所以，我们决定不向我们的顾客提出一个SLA条款，
另外，对，我们需要再招聘一名系统管理员，以免深更半夜再发生故障
与此同时，如果我们的顾客感到我们的故障对他造成了影响，他就可以
我们的顾客可以访问这个网志，看看故障的原因到底是什么，以及我们
一五个为什么
---
## Page 298
修订软件
第九部分
284
要么不买。他们不会说，你再开发一个功能我就买，也不会打电话与你讨论
你把软件做出来，用塑料膜封装好，送进商店，放上货架，顾客要么购买,
化软件”本身并没有错，而且做起来以后，你会觉得很舒服，但是它的盈利
该被采用的方法。
明年秋天上市。因此，必须确定开发的优先顺序。
十年。不幸的是，我们一共只有3个程序员，而且我们希望新版本软件能在
这个软件增加几个真正的新功能的时候了。
注意到的小bug（也引进了几个没人会注意到新的小bug）。接下来，该是为
应该开发哪些功能。正如你也不会打电话给微软公司，对那里的程序员说：
性就是不如面向整个市场销售的上架软件。
员，另一种可能是你正在走向开发“个性化软件”这条危险的道路。“个性
特定顾客的需要，那么就有两种可能，一种可能是你有一个无法无天的销售
客，这时你的大脑中就应该亮起红色警报了。如果你的工作只是服务于某个
久以前，我们刚刚发布了一个4.0版本的大型升级包，解决了一大堆没人会
面向整个市场销售的上架软件采用“要么接受、要么放弃”的开发模式。
不能采用的方法一。你发现你开发某个功能只是因为你答应过一个顾
在我讲述我们如何确定各种任务的优先顺序之前，让我先列出两种不应
动手写代码之前，我们规划增加的功能，多到足够1700个程序员干上几
现在是时候结束与FogBugz 4.0版本的纠缠，开始向5.0版本进军了。不
2005年10月12日，星期三
I o.
确定优先顺序
36
---
## Page 299
比尔·盖茨或者Larry Ellison?也行。
数据库。
Lisp，以及一个在老式Mac电脑上运行、用AppleScript连上网络的FileMaker
面就是个性化软件的开发过程。