# rt_sigtimedwait ____________________________________________  
#  
# long sys_rt_sigtimedwait(const sigset_t __user *uthese,  
#                  siginfo_t __user *uinfo,  
#                  const struct timespec __user *uts,  
#                  size_t sigsetsize)  
# long compat_sys_rt_sigtimedwait (compat_sigset_t __user *uthese,  
#               struct compat_siginfo __user *uinfo,  
#               struct compat_timespec __user *uts, compat_size_t sigsetsize)  
#  
probe syscall.rt_sigtimedwait = kernel.function("compat_sys_rt_sigtimedwait").call ?,  
                                kernel.function("sys_rt_sigtimedwait").call  
{  
        name = "rt_sigtimedwait"  
        uthese_uaddr = $uthese  
        uinfo_uaddr = $uinfo  
        uts_uaddr = $uts  
        sigsetsize = $sigsetsize  
        argstr = sprintf("%p, %p, %p, %d", $uthese, $uinfo, $uts, $sigsetsize)  
}  
probe syscall.rt_sigtimedwait.return = kernel.function("compat_sys_rt_sigtimedwait").return ?,  
                                       kernel.function("sys_rt_sigtimedwait").return  
{  
        name = "rt_sigtimedwait"  
        retstr = return_str(1, $return)  
}  
# nanosleep __________________________________________________  
#  
# long sys_nanosleep(struct timespec __user *rqtp,  
#               struct timespec __user *rmtp)  
# long compat_sys_nanosleep(struct compat_timespec __user *rqtp,  
#               struct compat_timespec __user *rmtp)  
#  
probe syscall.nanosleep = kernel.function("sys_nanosleep").call  
{  
        name = "nanosleep"  
        req_uaddr = $rqtp  
        rem_uaddr = $rmtp  
        argstr = sprintf("%s, %p", _struct_timespec_u($rqtp, 1), $rmtp)  
}  
probe syscall.nanosleep.return = kernel.function("sys_nanosleep").return  
{  
        name = "nanosleep"  
        retstr = return_str(1, $return)  
}  
# ppoll _______________________________________________________  
#  
# long sys_ppoll(struct pollfd __user *ufds, unsigned int nfds,  
#       struct timespec __user *tsp, const sigset_t __user *sigmask,  
#       size_t sigsetsize)  
#  
probe syscall.ppoll = kernel.function("sys_ppoll").call ?  
{  
        name = "ppoll"  
        argstr = sprintf("%p, %d, %s, %p, %d",  
                $ufds,  
                $nfds,  
                _struct_timespec_u($tsp, 1),  
                $sigmask,  
                $sigsetsize)  
}  
probe syscall.ppoll.return = kernel.function("sys_ppoll").return ?  
{  
        name = "ppoll"  
        retstr = return_str(1, $return)  
}  
本文用到的内核函数以及上下文变量 :   
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("it_real_fn")'  
kernel.function("it_real_fn@kernel/itimer.c:121") $timer:struct hrtimer*  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_epoll_wait").call'  
kernel.function("sys_epoll_wait@fs/eventpoll.c:1710").call $epfd:int $events:struct epoll_event* $maxevents:int $timeout:int  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_epoll_wait").return'  
kernel.function("sys_epoll_wait@fs/eventpoll.c:1710").return $return:long int $epfd:int $events:struct epoll_event* $maxevents:int $timeout:int  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_futex").call'  
kernel.function("sys_futex@kernel/futex.c:2692").call $uaddr:u32* $op:int $val:u32 $utime:struct timespec* $uaddr2:u32* $val3:u32 $ts:struct timespec $t:ktime_t  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_futex").return'  
kernel.function("sys_futex@kernel/futex.c:2692").return $return:long int $uaddr:u32* $op:int $val:u32 $utime:struct timespec* $uaddr2:u32* $val3:u32 $ts:struct timespec $t:ktime_t  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("do_exit").call'  
kernel.function("do_exit@kernel/exit.c:897").call $code:long int $tsk:struct task_struct*  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_poll").call'  
kernel.function("sys_poll@fs/select.c:899").call $ufds:struct pollfd* $nfds:unsigned int $timeout_msecs:int $end_time:struct timespec  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_poll").return'  
kernel.function("sys_poll@fs/select.c:899").return $return:long int $ufds:struct pollfd* $nfds:unsigned int $timeout_msecs:int $end_time:struct timespec  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_ppoll").call'  
kernel.function("sys_ppoll@fs/select.c:935").call $ufds:struct pollfd* $nfds:unsigned int $tsp:struct timespec* $sigmask:sigset_t const* $sigsetsize:size_t $ksigmask:sigset_t $sigsaved:sigset_t $ts:struct timespec $end_time:struct timespec  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_ppoll").return'  
kernel.function("sys_ppoll@fs/select.c:935").return $return:long int $ufds:struct pollfd* $nfds:unsigned int $tsp:struct timespec* $sigmask:sigset_t const* $sigsetsize:size_t $ksigmask:sigset_t $sigsaved:sigset_t $ts:struct timespec $end_time:struct timespec  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_select").call'  
kernel.function("sys_select@fs/select.c:597").call $n:int $inp:fd_set* $outp:fd_set* $exp:fd_set* $tvp:struct timeval* $end_time:struct timespec $tv:struct timeval  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_select").return'  
kernel.function("sys_select@fs/select.c:597").return $return:long int $n:int $inp:fd_set* $outp:fd_set* $exp:fd_set* $tvp:struct timeval* $end_time:struct timespec $tv:struct timeval  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_rt_sigtimedwait").return'  
kernel.function("sys_rt_sigtimedwait@kernel/signal.c:2215").return $return:long int $uthese:sigset_t const* $uinfo:siginfo_t* $uts:struct timespec const* $sigsetsize:size_t $these:sigset_t $ts:struct timespec $info:siginfo_t  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_rt_sigtimedwait").call'  
kernel.function("sys_rt_sigtimedwait@kernel/signal.c:2215").call $uthese:sigset_t const* $uinfo:siginfo_t* $uts:struct timespec const* $sigsetsize:size_t $these:sigset_t $ts:struct timespec $info:siginfo_t  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_nanosleep").call'  
kernel.function("sys_nanosleep@kernel/hrtimer.c:1601").call $rqtp:struct timespec* $rmtp:struct timespec* $tu:struct timespec  
[root@db-172-16-3-150 ~]# stap -L 'kernel.function("sys_nanosleep").return'  
kernel.function("sys_nanosleep@kernel/hrtimer.c:1601").return $return:long int $rqtp:struct timespec* $rmtp:struct timespec* $tu:struct timespec  
系统调用源代码截取 :   
syscall.poll  
/usr/src/debug/kernel-2.6.32-358.el6/linux-2.6.32-358.el6.x86_64/fs/select.c  
SYSCALL_DEFINE3(poll, struct pollfd __user *, ufds, unsigned int, nfds,  
                int, timeout_msecs)  
{  
        struct timespec end_time, *to = NULL;  
        int ret;  
        if (timeout_msecs >= 0) {  
                to = &end_time;  
                poll_select_set_timeout(to, timeout_msecs / MSEC_PER_SEC,  
                        NSEC_PER_MSEC * (timeout_msecs % MSEC_PER_SEC));  
        }  
        ret = do_sys_poll(ufds, nfds, to);  
        if (ret == -EINTR) {  
                struct restart_block *restart_block;  
                restart_block = &current_thread_info()->restart_block;  
                restart_block->fn = do_restart_poll;  
                restart_block->poll.ufds = ufds;  
                restart_block->poll.nfds = nfds;  
                if (timeout_msecs >= 0) {  
                        restart_block->poll.tv_sec = end_time.tv_sec;  
                        restart_block->poll.tv_nsec = end_time.tv_nsec;  
                        restart_block->poll.has_timeout = 1;  
                } else  
                        restart_block->poll.has_timeout = 0;  
                ret = -ERESTART_RESTARTBLOCK;  
        }  
        return ret;  
}  
/usr/src/debug/kernel-2.6.32-358.el6/linux-2.6.32-358.el6.x86_64/kernel/itimer.c  
/*  
 * The timer is automagically restarted, when interval != 0  
 */  
enum hrtimer_restart it_real_fn(struct hrtimer *timer)  
{  
        struct signal_struct *sig =  
                container_of(timer, struct signal_struct, real_timer);  
        trace_itimer_expire(ITIMER_REAL, sig->leader_pid, 0);  
        kill_pid_info(SIGALRM, SEND_SIG_PRIV, sig->leader_pid);  
        return HRTIMER_NORESTART;  
}  
```  
## 参考  
1\. https://sourceware.org/systemtap/SystemTap_Beginners_Guide/mainsect-profiling.html  
2\. https://sourceware.org/systemtap/examples/  
3\. /usr/share/systemtap/testsuite/systemtap.examples  
4\. systemtap-testsuite  
5\. /usr/share/systemtap/testsuite/systemtap.examples/index.txt  
6\. /usr/share/systemtap/testsuite/systemtap.examples/keyword-index.txt  
7\. /usr/share/systemtap/tapset  
8\.   
```  
man syscalls  
man poll  
man ppoll  
man select  
man epoll_wait  
man futex  
man nanosleep  
man rt_sigtimedwait  
```  
9\. https://sourceware.org/systemtap/tapsets/API-errno-str.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")