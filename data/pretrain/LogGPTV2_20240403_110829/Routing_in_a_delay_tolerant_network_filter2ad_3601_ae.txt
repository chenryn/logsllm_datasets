icantly), but also ensures that we never overestimate it. As a
consequence, all the algorithms appear to have almost the same
(very high) delay when the load is extremely high.
Figures 8(a) and 8(b) show the cumulative distribution func-
tion of delay of the set of messages for the two cases: a) when
bandwidth is high (400 Kb/s), and b) when bandwidth is low
(20 Kb/s). The graph indicates superior performance of the
smarter algorithms ED, EDLQ and EDAQ. It also illustrates
that ED has exactly the same (optimal) performance when
Radio range (km)
fup%
.05
.1
.1
.2
.2
.6
.4
2.6
1
15
2
45
4
97
Table 2: Network connectivity as a function of radio range.
fup denotes the percentage of time a pair of nodes are in
mutual contact. fup = 100 denotes that two nodes are in con-
tinuous contact. The numbers reported here are obtained
by averaging fup over all pairs of nodes.
bandwidth is large, illustrated by observing that the lines for
ED, EDLQ and EDAQ coincide. However, when bandwidth
is low, the performance of ED is signi(cid:12)cantly worse than both
EDLQ and EDAQ. The almost-overlapping CDFs for EDLQ
and EDAQ again indicate that their performance is close, even
at high load.
l
)
s
r
u
o
h
(
y
a
e
D
e
g
a
r
e
v
A
 5
 4
 3
 2
 1
 0
FC
MED
ED
EDLQ
EDAQ
 100
 1000
Radio range (meters)
Figure 9: Average delay as radio range is scaled. The plots
for ED, EDLQ and EDAQ overlap.
9.5 Results of Varying Radio Range
Figure 9 plots the average message delay as radio range is
increased (which e(cid:11)ectively increases contact volume). For this
plot, the link bandwidth was taken as large, allowing us to
factor out congestion issues due to limited bandwidth.
From the graph, one can see that increasing the radio range
reduces the average delay. This is expected, because by in-
creasing the radio range, the buses are in mutual contact more
frequently (and for longer duration) and hence, the waiting time
is reduced. Table 2 shows the increase in network connectiv-
ity as radio range is increased (spanning nearly three orders of
magnitude).
The di(cid:11)erence between the simpler (FC, MED) and the
smarter algorithms (ED, EDLQ, EDAQ) is much more pro-
nounced when the radio range is small (i.e when the network is
more disconnected), suggesting the increased bene(cid:12)ts of smarter
routing techniques as networks become more intermittent. Con-
versely, when radio range is very large (links are mostly avail-
able), the bene(cid:12)ts of the smarter algorithms vanishes.
o
i
t
a
R
y
r
e
v
i
l
e
D
 1
 0.8
 0.6
 0.4
 0.2
 0
EDAQ
EDLQ
ED
MED
FC
 100
 1000
 10000
Storage Capacity (Kb)
Figure 10: Fraction of data delivered to data generated as
a function of storage capacity at nodes. The plots for ED,
EDLQ and EDAQ overlap.
9.6 Results of Varying Buffer Capacity
Most of the algorithms considered in this paper (except LP)
are oblivious to bu(cid:11)er limitations. Therefore, we expect to
see message drops when storage is limited. To explore this
behavior, we vary the maximum available storage at each node
to see how di(cid:11)erent algorithms perform with respect to message
delivery. Figure 10 plots the data delivery ratio for di(cid:11)erent
algorithms as a function of storage. The bandwidth is 400Kb/s
(large) and the radio range is 100m.
When storage is limited, the smarter algorithms (ED, EDLQ,
EDAQ) have signi(cid:12)cantly fewer drops than the simpler algo-
rithms (FC, MED). When storage is su(cid:14)ciently large, there are
no drops and all algorithms have a delivery ratio of one. How-
ever, when storage availability is very limited, most messages
get dropped and there is little bene(cid:12)t in employing a smarter
route selection process. Therefore, we conclude that ED, EDLQ
and EDAQ perform better than FC and MED when storage is
limited, but any such performance bene(cid:12)ts may be unrealized
for networks with extremely large or extremely small store-and-
forward bu(cid:11)ering.
9.7 Summary
It is evident that the smarter algorithms (ED, EDLQ, EDAQ)
outperform the simpler algorithms (FC, MED), both in terms of
delay and delivery ratio. The performance di(cid:11)erences become
more pronounced as the network becomes more intermittent.
Further, as load is increased, ED performs much worse than
EDLQ and EDAQ, as it is unable to mitigate the e(cid:11)ects of
congestion. Finally, EDLQ, which routes around congestion
using only local queuing, performs comparably to EDAQ. This
point is encouraging from an implementation standpoint, as
implementing the queuing oracle on a frequently-disconnected
network would likely present a signi(cid:12)cant distributed systems
problem.
10. RELATED WORK
10.1 Store-and-Forward Systems
Electronic mail may appear as a natural approach for han-
dling message delivery in a frequently-disconnected environ-
ment. It does provide the required store-and-forward capabil-
ity, but typically lacks any robust approach to dynamic routing.
In the Internet, successful e-mail exchange (i.e. with SMTP)
generally depends both on a successful DNS request/response
transaction along with a reliable transport layer exchange pro-
tocol. The mail exchanger DNS facility (\MX record") provides
a limited form of routing in the e-mail overlay, but falls far short
of handling the type of routing problem discussed here. Thus,
e-mail (at least Internet e-mail) is unable to deal with true dy-
namic routing and is not very robust to errors during message
transfer.
Prior to the wide availability of Internet connectivity, the
UUCP network carried news and electronic mail to a small but
growing (and active) user community. It used source routing,
and responsibility for route selection was left primarily to end-
users.
It was later enhanced with a form of static routing based
on computing shortest paths on a topology graph distributed by
e-mail (or entered manually). 4 To choose among local outgoing
connections, (cid:12)xed costs were assigned manually to links based
upon the frequency and the quality of the connection. The
MED algorithm is similar to above idea.
10.2 Optimization Techniques and Network Flows
The (cid:12)eld of operations research is rich with variations on op-
timization problems involving network (cid:13)ows, shipment of mate-
rials, and scheduling. A complete survey could not possibly be
accomplished here. However, some of the more relevant work
includes the quickest transshipment problem, dynamic multi-
commodity (cid:13)ow problems, etc. [14]. Frequently, network (cid:13)ow
problems that involve temporal sensitivities are solved as tradi-
tional graph problems on time-expanded graphs. These graphs,
introduced as early as 1962 by Ford and Fulkerson [9], can be
used to capture the temporal dynamics as additional nodes and
edges. The issue with computing on such graphs is that they
can signi(cid:12)cantly expand the search space, leading to very large
problems.
Focusing speci(cid:12)cally on shortest path (single path) solutions,
algorithms for dynamic networks have been investigated by
Orda et.al. in [19]. In this respect, our primary contribution has
been to de(cid:12)ne appropriate cost functions in the context of the
DTN routing problem. The issue of splitting (allowing message
fragments to take multiple paths) and bu(cid:11)er constraints makes
the problem much more challenging. The problem is further
complicated because of multiple commodities, time-varying ca-
pacities, non-zero and possibly time-varying propagation de-
lays, etc. The speci(cid:12)c case of zero propagation delays with
(cid:12)nite bu(cid:11)ers and time-varying capacities has been addressed
by Ogier [18].
In summary, although many of these aspects
have been discussed in literature either individually (or as a
subset), the complete LP formulation taking into account all
these aspects is novel.
10.3 Routing in Disconnected Mobile Adhoc Networks
Our present exploration of the DTN routing problem is fo-
cused on cases where the topology dynamics are known (or
nearly known) in advance. Clearly, however, many systems
will not exhibit such predictability or will exhibit partial pre-
dictability. A series of e(cid:11)orts [13, 22, 24, 5] in the context of
sensor/mobile-adhoc networks looks into providing connectivity
when topology dynamics are unknown. Generally, these tech-
niques employ a form of data duplication within the network
and achieve eventual delivery. Such duplication requires a way
of getting rid of unnecessary copies to reduce the bu(cid:11)er occu-
pancy. We believe that a hybrid approach, possibly employing
some of the epidemic techniques in conjunction with the tech-
niques discussed here, may be appropriate for such systems.
11. CONCLUSION
DTN routing appears to be a rich and challenging problem. It
requires techniques to select paths, schedule transmissions, es-
timate delivery performance, and manage bu(cid:11)ers. The problem
of networking on frequently-disconnected networks is receiving
more attention as the desire to have data connectivity in devices
4A user program called pathalias [11] performed this function.
which may be mobile or into regions that may only be reach-
able by non-conventional network devices (e.g. motorbikes) in-
creases. We believe that in many frequently-disconnected sce-
narios, communication opportunities may be predictable. The
algorithms devised in this paper focus on these situations, and
we believe such systems have received little attention to date.
In this paper, we have developed a framework for evaluat-
ing DTN routing algorithms, suggested and evaluated several
individual algorithms, and provided a basis for future work in
the area. Our (cid:12)ndings suggest that in networks with plen-
tiful communication opportunities, the need for smart rout-
ing algorithms is minimal.
In situations where resources are
limited (contact opportunities, bandwidth or storage, in our
case) smarter algorithms may provide a signi(cid:12)cant bene(cid:12)t. In-
deed, those which take network congestion into account (EDLQ,
EDAQ, LP) do especially well in these environments. The (cid:12)nd-
ing that global knowledge may not be required for good perfor-
mance in many cases suggests that implementing the queuing
oracle (the most challenging to realize except for the tra(cid:14)c or-
acle), in particular, may not be worthwhile. This last point is
signi(cid:12)cant, and merits further investigation. Our construction
of the knowledge oracles allowed us to avoid the complexities
of how routing meta-data is created and propagated. In real-
world situations, however, the realization of these oracles would
present a distributed systems challenge made worse by the as-
sumed frequent network disconnections.
12. FUTURE WORK
Our work to date has revealed that many additional ques-
tions remain to be answered. We now discuss several of these.
The algorithms presented here (except LP) do not account for
bu(cid:11)er limits at intermediate nodes when determining routes.
If a node has insu(cid:14)cient storage to hold in-transit data, that
data is dropped. Flow control mechanisms could be employed
to prevent such drops in some circumstances, but many exist-
ing methods for handling dynamic (cid:13)ow control do not work
well with long propagation delays. Thus, it would appear some
form of proactive admission control may be more appropriate,
but discovering the best form of this mechanism for DTNs re-
mains open. Removal of messages at a node, either because
they have expired or for application speci(cid:12)c reasons, is another
approach for controlling bu(cid:11)er occupancy.
As mentioned earlier, in some environments contacts become
available opportunistically. Routing under such environments
might employ techniques of epidemic routing (data replica-
tion), and the most robust solution may incorporate those tech-
niques with the approaches described here. A related variant is
when oracles provide only probabilistic knowledge about avail-
able contacts (such as a time dependent probability distribu-
tion on waiting time). Here, we hope to leverage work from
the transportation community on stochastic dynamic shortest
paths [10].
The objective function we have selected here minimizes de-
lay, but in some scenarios other metrics (e.g. monetary cost),
which may not be directly derivable from delay, may be more
important. This would present the problem of how to measure
the metric of interest and would again raise the implementation
question for the corresponding new knowledge oracle. For the
case of village networking presented earlier, this may be espe-
cially true, and this line of research is already underway. As
can be seen, a rich collection of questions (both theoretical and
practical) arise in the context of these types of networks.
Acknowledgements
We are grateful to Gaetano Borriello, Ratul Mahajan, David
Wetherall and the SIGCOMM reviewers for providing helpful
feedback on the paper. This work was supported in part by the
Intel Research Council, Intel Corporation.
13. REFERENCES
[1] R. K. Ahuja, T. L. Magnanti, and J. B. Orlin. Network Flows:
Theory, Algorithms, and Applications. Prentice Hall, 1993.
[2] J. Alonso and K. Fall. A Linear Programming Formulation of
Flows over Time with Piecewise Constant Capacity and
Transit Times. Technical Report IRB-TR-03-007, Intel
Research Berkeley, July 2003.
[3] AMSAT. http://www.amsat.org/.
[4] J. Broch, D. A. Maltz, D. B. Johnson, Y. C. Hu, and
J. Jetcheva. A Performance Comparison of Multi-Hop Wireless
Ad Hoc Network Routing Protocols. In ACM Mobicom, Aug.
1998.
[5] X. Chen and A. L. Murphy. Enabling Disconnected Transitive
Communication in Mobile Adhoc Networks. In Workshop on
Principles of Mobile Computing, August 2001.
[6] CPLEX: Linear Programming Solver. http://www.ilog.com/.
[7] DTN Research Group. http://www.dtnrg.org/.
[8] K. Fall. A Delay-Tolerant Network Architecture for Challenged
Internets. In ACM SIGCOMM, Aug. 2003.
[9] L. R. Ford and D. R. Fulkerson. Flows in Networks. Princeton
University Press, 1962.
[10] S. Gao. Routing Problems in Stochastic Time-Dependent
Networks with Applications in Dynamic Tra(cid:14)c Assignment.
Master’s thesis, MIT, 2002.
[11] P. Honeymoon and S. Bellovin. PATHALIAS: The Care and
Feeding of Relative Address. In USENIX Conference, 1986.
[12] B. Hoppe and (cid:19)E. Tardos. The Quickest Transshipment
Problem. In SODA, Jan. 1996.
[13] P. Juang, H. Oki, Y. Wang, M. Margaret, P. Li-Shiuan, and
R. Daniel. Energy-E(cid:14)cient Computing for Wildlife Tracking:
Design Tradeo(cid:11)s and Early Experiences with ZebraNet. In
ASPLOS-X, October 2002.
[14] B. Kotnyek. An Annotated Overview of Dynamic Network
Flows. Technical Report RR-4936, INRIA, Sept. 2003.
[15] J. A. Magliacane. PREDICT: Satellite Tracking Software.
http://www.qsl.net/kd2bd/predict.html/.
[16] M. K. Marina and S. R. Das. On-demand Multipath Distance
Vector Routing in Ad Hoc Networks. In IEEE ICNP, Nov.
2001.
[17] D. Niculescu and B. Nath. Trajectory based Forwarding and
its Applications. In ACM Mobicom, 2003.
[18] R. Ogier. Minimum-delay Routing in Continuous-time
Dynamic Networks with Piecewise-constant Capacities.
Networks, 18:303{318, 1988.
[19] A. Orda and R. Rom. Shortest-Path and Minimum Delay
Algorithms in Networks with Time-Dependent Edge-Length.
Journal of the ACM, 37(3), 1990.
[20] A. Pentland, R. Fletcher, and A. Hasson. DakNet: Rethinking
Connectivity in Developing Nations. In IEEE Computer, Jan.
2004.
[21] S. Saroiu, K. Gummadi, R. Dunn, S. Gribble, and H. Levy. An
Analysis of Internet Content Delivery Systems. In OSDI, Dec.
2002.
[22] R. C. Shah, S. Roy, S. Jain, and W. Brunette. Data MULEs:
Modeling a Three-tier Architecture for Sparse Sensor
Networks. In IEEE SNPA, May 2003.
[23] TIER Project. http://tier.cs.berkeley.edu/.
[24] A. Vahdat and D. Becker. Epidemic Routing for
Partially-connected Ad hoc Networks. Technical Report
CS-2000-06, Duke University, July 2000.
[25] Wizzy Project. http://www.wizzy.org.za/.