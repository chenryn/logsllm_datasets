            sed -i '/.bash\/upd/d' $CRON_FILE
            #删除所有的文件
            rm -rf /mnt/.bash/
            cron_num=$(crontab -l | grep /mnt/.bash | wc  -l)
            if [[ $cron_num == 0 ]];then
                    echo -e "\033[31mcrontab删除成功 \033[0m"
            fi
            if [ ! -x "$FILE2_PATH" ]; then
                echo -e "\033[31m挖矿文件删除文件 \033[0m"
            fi
            echo -e "\033[33m请尽快修改服务器root用户密码为复杂密码!!!!!不要使用admin123类似弱口令:\033[0m"
        fi
    fi
    DIR3_PATH="/tmp/.bash"
    FILE3_PATH="/tmp/.bash/bash"
    if [ -d "$DIR3_PATH" ]; then
        if [ -x "$FILE3_PATH" ]; then
            echo -e "\033[31m该服务器已中挖矿病毒，开始清除 \033[0m"
            #清空 crontab中的恶意启动项
            sed -i '/tmp\/.bash\/bash/d' $CRON_FILE
            #删除所有的文件
            rm -rf /tmp/.bash/
            cron_num=$(crontab -l | grep /tmp/.bash | wc  -l)
            if [[ $cron_num == 0 ]];then
                    echo -e "\033[31mcrontab删除成功 \033[0m"
            fi
            if [ ! -x "$FILE2_PATH" ]; then
                echo -e "\033[31m挖矿文件删除文件 \033[0m"
            fi
            echo -e "\033[33m请尽快修改服务器root用户密码为复杂密码!!!!!不要使用admin123类似弱口令:\033[0m"
        fi
    fi
IT部门并不知道每台服务器和虚拟机的密码，我们虽然已经知道大部分都是弱口令的，但是也不知道那一台是什么样子，所以最好的方法就是通知到所有服务器的负责人，让他们自己去清除。  
因为后续发现了挖矿程序内网扩散攻击成功的列表，所以最后使用批量下发脚本的程序去删除所有的挖矿程序，效果非常好，到第二天只剩下一台告警了。  
下图为挖矿程序遗留的内网暴力破解成功的用户密码表。  
下图为最后批量下发脚本的截图  
### 2.4、查找入口点
入口点找了很久，因为有的服务器我们一时半会联系不到责任人，所以只能等着，等比人反馈问题给IT，IT反馈给我。  
我们主要通过几个日志文件去做排查。
    lastb > /home/lastb.log
    last > /home/last.log
    cat /var/log/secure > /home/secure.log
从刚开始拿到手的几台失陷的机器的特征可以判断内网是通过ssh弱口令来扩散的。因为失陷的几台服务器密码都为123456，admin123，并且日志中有大量登录失败的记录。  
后来我们发现所有的登录爆破都来自于192.168.111.67，但是这台服务器一直找不到责任人，最后我通过暴力破解弱口令登上了这台服务器，并且发现了入侵者的攻击痕迹。在查找入口点的过程中，我画了简单地攻击拓扑图，来方便我来确定最后的入口点。  
最后通过大量的日志可以确定攻击者是十二月份就登陆了我们的一台服务器(这台服务器外网可以连接，并且存在大量测试账号)，而攻击者却没有使用这台服务器，而是使用192.168.111.67对整个内网发起了攻击。  
但是当我们登录到入口点那台机器的时候，发现重要的日志已经被删除了，history记录也没有了，所以攻击者已经很难找到。
## 三、整改
每次恶意攻击事件的爆发都会暴露出企业安全存在的一些问题，于是我们针对此次攻击做出了必要的整改。
  * 禁止内网服务器，虚拟机使用弱口令。禁止mysql使用弱口令。通过定期服务器弱口令扫描和大量的宣传来防止事情的再次发生。
  * 确定外网可连接服务器的责任人，任何从此服务器弱口令相关的漏洞进来的问题，事后追责。
  * 网络隔离
  * 从此次问题发现我们主机部分都没有安装主机安全相关的软件，所以需要主机安全的加固
## 四、入侵排查整理
#### 1\. 定时任务排查
定时任务crontab是挖矿病毒都会用到的东西，所以定时任务一定要看。
    crontab -l   #列出所有的定时任务
    crontab -r   #删除所有的定时任务，可能会删除我们自己的配置信息，不推荐使用
    crontab -e   #编辑crontab文件
一些需要关注的定时任务文件
    /var/spool/cron/*  #centos的
    /var/spool/cron/crontabs/* #ubuntu的
    /var/spool/anacron/*
    /etc/crontab
    /etc/anacrontab  #异步定时
    /etc/cron.hourly/* 
    /etc/cron.daily/* 
    /etc/cron.weekly/
    /etc/cron.monthly/*
#### 2\. 用户密码
排查`/etc/passwd`
    stat /etc/passwd #查看密码文件上一次修改的时间，如果最近被修改过，那就可能存在问题。
    cat /etc/passwd | grep -v nologin #查看除了不可登录以外的用户都有哪些，有没有新增的
    cat /etc/passwd | grep x:0 #查看哪些用户为root权限，有没有新增的
    cat /etc/passwd | grep /bin/bash #查看哪些用户使用shell
#### 3\. 导出操作记录
如果攻击者没有删除造作记录，我们可以从操作记录中发现一些我们想要的东西
    export HISTTIMEFORMAT="%F %T `whoami` "  #设置history显示时间和用户名
    history > /home/xxx/history.log
#### 4\. 日志
日志总是能发现一些蛛丝马迹，所以日志也同样重要。存放在`/var/log`目录下的东西都认真看一下
    /var/log/secure #记录安全相关的日志，重点看一下
    /var/log/btmp #登陆失败的日志记录
    lastb -f btmp-2020xxxx #可以查看过去的某个登录失败记录
    /var/log/wtmp #登陆成功的日志记录
    #wtmp和btmp只能使用 last和lastb命令查看，不能直接打开看内容的。
    /var/log/yum.log  #安装记录，我们可以看一下最近有没有安装一些特殊的依赖库什么的
#### 5\. 进程排查
    top 命令可以直接清除看到实施情况。
    ps aux --sort=pcpu | head -10 #查看cpu占用率前十的进程，有时候可以发现top发现不了的东西
    ls -l /proc/*/exe | grep xxx  #如果我们知道恶意程序的启动文件大致位置，可以使用这个发现无文件的恶意进程
#### 6\. 域名hosts
有一些挖矿程序会修改 `/etc/hosts`文件，请看一下其中内容是否被更改过  
前两天在另外的项目组上发现的某个挖矿病毒就会修改 **hosts** 文件  
这是从那台服务器上提取的一些恶意的配置内容
    0.0.0.0 aliyun.one
    0.0.0.0 lsd.systemten.org
    0.0.0.0 pastebin.com
    0.0.0.0 pm.cpuminerpool.com
    0.0.0.0 systemten.org
#### 7.网络连接
有时候我们通过网络连接发现有些IP很可以，就可以通过ip找到进程发现问题。
    netstat -antlp | grep x.x.x.x | awk '{print $7}' | cut -f1 -d"/" #获取存在某ip的进程id号