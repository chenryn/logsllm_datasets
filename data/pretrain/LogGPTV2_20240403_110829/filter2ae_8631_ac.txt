Nmap 选项参数：
    nmap -sU scanme.nmap.org
Nmap 有很多选项可以提升 UDP Scan 的准确性与速度，这里不再深入讲解，具体可以参考[UDP Scan
(-sU)](https://nmap.org/book/scan-methods-udp-scan.html)
# ICMP
ICMP 格式：
> ​ 根据网络协议，如果按照协议出现了错误，那么接收端将产生一个icmp的错误报文。这些错误报文并不是主动发送的，而是由于错误，根据协议自动产生。
ICMP 相关类型解释：
一般如果数据包被防火墙过滤的话，会收到一个 ICMP 数据包，其中类型为3，代码为1，2，3，9，10或13。
## ICMP SCAN
常见的利用：
# SCTP
这里我们简单介绍一下 SCTP 协议。
> 流控制传输协议（英语：Stream Control Transmission
> Protocol，缩写：SCTP）是在2000年由IETF的SIGTRAN工作组定义的一个传输层协议。RFC
> 4960详细地定义了SCTP，介绍性的文档是RFC 3286。
>
>
> 作为一个传输层协议，SCTP可以理解为和TCP及UDP相类似的。它提供的服务有点像TCP，又同时将UDP的一些优点相结合。是一种提供了可靠、高效、有序的数据传输协议。相比之下TCP是面向字节的，而SCTP是针对成帧的消息。
>
> SCTP主要的贡献是对多重联外线路的支持，一个端点可以由多于一个 IP地址 组成，使得传输可在主机间或网卡间做到透明的网络容错备援。
>
> SCTP最初是被设计用于在IP上传输电话协议（SS7），把 SS7 信令网络的一些可靠特性引入IP。IETF 的这方面的工作称为信令传输
> SIGTRAN。
>
> SCTP将数据传给应用层的方式，是将数据视为message（bytes的集合），SCTP的特征是message-> oriented，意思就是说它发送的是一串message（每一个message是byte为单位的集合），相对于TCP是以byte为单位，发送的是破碎的流。在SCTP发送端用一个动作提交消息，接收端也是用一个动作取出消息传给对应的应用程序。相较于TCP，是一个流导向的协议，可靠地且有顺序地发送以bytes为单位的流。然而TCP并不允许接收端知道发送端的应用程序调用提交bytes集合的次数。在发送端TCP只是简单的附加更多bytes在queue里等待着送到网络上，而SCTP是将要提交的outband
> message都保有自己独立的queue。
简而言之，SCTP是TCP和UDP协议的一种相对较新的替代方案，它结合了TCP和UDP的大多数特性，还增加了多宿主和多流等新功能。它主要用于SS7 /
SIGTRAN相关服务，但也有可能用于其他应用程序。
下图是 TCP 与 SCTP 建立连接的对比图：
## SCTP INIT scan
SCTP INIT扫描是TCP
SYN扫描的SCTP等效物。它可以快速执行，在快速网络上每秒扫描数千个端口，而不受限制性防火墙的限制。与SYN扫描一样，INIT扫描相对不显眼且隐蔽，因为它永远不会完成SCTP关联。它还允许在打开，关闭和过滤状态之间进行清晰，可靠的区分。
此技术通常称为半开扫描，因为您不打开完整的SCTP关联。您发送一个INIT块，就好像您要打开一个真正的关联，然后等待响应。 INIT-ACK块表示端口正在侦听（打开），而ABORT块表示非侦听器。如果在多次重新传输后未收到响应，则将端口标记为已过滤。如果收到ICMP不可达错误（类型3，代码0,1,2,3,9,10或13），则端口也会被标记为已过滤。
### usage
    nmap -sY ip
## SCTP COOKIE ECHO SCAN
SCTP COOKIE ECHO SCAN 是一种更先进的SCTP扫描。 它利用了SCTP实现应该在开放端口上静默丢弃包含COOKIE
ECHO块的数据包这一事实，但如果端口关闭则发送ABORT。 这种扫描类型的优点是端口扫描不像INIT扫描那么明显。
此外，可能存在阻止INIT块的非状态防火墙规则集，但不阻止COOKIE ECHO块。 不要误以为这会使端口扫描不可见; 一个好的IDS也能够检测到SCTP
COOKIE ECHO扫描。 缺点是SCTP COOKIE ECHO扫描不能区分打开和过滤的端口，在这两种情况下都会打开状态。
### usage
    nmap -sZ ip
# IP
## IP Scan
IP协议扫描允许您确定目标计算机支持哪些IP协议（TCP，ICMP，IGMP等）。这在技术上不是端口扫描，因为它循环通过IP协议号而不是TCP或UDP端口号。然而，它仍然使用`-p`选项来选择扫描的协议号，以正常的端口表格式报告其结果，甚至使用与真正的端口扫描方法相同的底层扫描引擎。所以它足够接近它所属的端口扫描。
协议扫描的工作方式与UDP扫描类似。它不是遍历UDP数据包的端口号字段，而是发送IP数据包标头并迭代通过8位IP协议字段。标头通常是空的，不包含任何数据，甚至不包括所声明协议的正确标头。某些流行协议（包括TCP，UDP和ICMP）例外。包含适当的协议头，因为一些系统不会发送它们，因为Nmap已经具有创建它们的功能。协议扫描不是在观察ICMP端口不可达消息，而是在寻找ICMP协议不可达消息。如下表显示了对IP探测的响应如何映射到端口状态。
Nmap 对 IP Scan 的处理：
Probe Response | Assigned State  
---|---  
Any response in any protocol from target host | `open` (for protocol used by
response, not necessarily probe protocol)  
ICMP protocol unreachable error (type 3, code 2) | `closed`  
Other ICMP unreachable errors (type 3, code 1, 3, 9, 10, or 13) | `filtered`
(though they prove ICMP is open if sent from the target machine)  
No response received (even after retransmissions) | `open | filtered`  
与TCP或UDP协议中的开放端口一样，每个开放协议都是潜在的利用向量。此外，协议扫描结果有助于确定机器的用途以及采用何种类型的数据包过滤。终端主机通常只有TCP，UDP，ICMP和（有时）IGMP打开，而路由器通常提供更多，包括路由相关协议，如GRE和EGP。防火墙和VPN网关可能会显示与加密相关的协议，如IPsec和SWIPE。
与UDP扫描期间收到的ICMP端口不可达消息一样，ICMP协议不可达消息通常是速率限制的。例如，默认Linux
2.4.20框中每秒发送的ICMP目标无法访问响应不超过一个。由于只有256个可能的协议号，因此与65,536端口UDP扫描相比，这不是问题。
### usage
协议扫描的使用方法与命令行上的大多数其他扫描技术的使用方法相同。除了一般的Nmap选项外，请简单指定`-sO`。普通端口`-p`选项用于选择协议号。或者，您可以使用`-F`扫描nmap-protocols数据库中列出的所有协议。默认情况下，Nmap扫描所有256个可能的值。
    nmap -sO 62.233.173.90 para
    Starting Nmap ( http://nmap.org )
    Nmap scan report for ntwklan-62-233-173-90.devs.futuro.pl (62.233.173.90)
    Not shown: 240 closed ports
    PROTOCOL STATE         SERVICE
    1        open          icmp                    
    4        open|filtered ip                      
    6        open          tcp                     
    8        open|filtered egp                     
    9        open|filtered igp                     
    17       filtered      udp                     
    47       open|filtered gre                     
    53       filtered      swipe                   
    54       open|filtered narp                    
    55       filtered      mobile                  
    77       filtered      sun-nd                  
    80       open|filtered iso-ip                  
    88       open|filtered eigrp                   
    89       open|filtered ospfigp                 
    94       open|filtered ipip                    
    103      filtered      pim                     
    Nmap scan report for para (192.168.10.191)
    Not shown: 252 closed ports
    PROTOCOL STATE         SERVICE
    1        open          icmp                    
    2        open|filtered igmp                    
    6        open          tcp                     
    17       filtered      udp                     
    MAC Address: 00:60:1D:38:32:90 (Lucent Technologies)
    Nmap done: 2 IP addresses (2 hosts up) scanned in 458.04 seconds
# Reference
[扫描器原理总结](https://hellohxk.com/blog/scanning-principle/)
[端口扫描原理及实现](https://xiaix.me/duan-kou-sao-miao-yuan-li-ji-shi-xian/)
[Nmap Docs- Chapter 5. Port Scanning Techniques and
Algorithms](https://nmap.org/book/scan-methods.html)