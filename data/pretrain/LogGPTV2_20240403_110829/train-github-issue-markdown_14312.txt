I noticed that we may be using `memcpy` unsafely in some places. e.g.
`unsafe_copy!` in `array.jl` uses `memcpy`, but if you do e.g. `copy!(A,A)`
then the source and destination data overlap. (This is unlikely to fail in
practice, but strictly speaking violates the `memcpy` spec.)
Would be good to do an audit of all `memcpy` uses in Julia and replace them
with `memmove` if there is any chance of overlapping data. The performance
impact should be negligible.