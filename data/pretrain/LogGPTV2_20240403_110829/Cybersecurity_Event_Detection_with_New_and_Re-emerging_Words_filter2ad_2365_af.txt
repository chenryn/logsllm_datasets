# Exploit Detection System: W2E

## Summary of Event Detection Latency
| Method A | Method B | # Events | Mean Latency (days) |
|----------|----------|----------|---------------------|
| -2.3      | 0        | -1       | -                   |
| -2        | a“A<B”   | -1       | -9                  |
| -2.9      | -2.7     | 25       | 127                 |
| 203       | 269      | 450      | 17                  |
| 2         | 23       | 0        | 42                  |
| 9         | 1        | 40       | 0                   |
| 50        | 6        | 1        | 22                  |
| -         | 29       | 6        | 0                   |
| 2         | -        | 8        | b                   |

### Notes:
- "A<B" indicates that method A detects events earlier than method B, with the negative number representing the number of days one method detects an event earlier.
- The table includes not only exploits in the wild but also PoC and exploit kits.

## Case Study: Early Detection by W2E
On January 3rd, 2019, W2E detected an event related to the Marvell Avanstar WiFi chip SoC, used in various devices like Playstations, Xbox, Surfaces, Chromebooks, and Samsung phones. The detection was based on a tweet mentioning "unauth, unassoc remote code exec" and a PoC on Steamlink. This case highlights W2E's early detection capability and the value of monitoring open data sources.

## Limitations

### Twitter User Restriction
W2E is designed to detect security events affecting end-user devices such as smartphones, smart appliances, and IoT devices. To achieve this, we focus on users who frequently discuss security events related to these devices, including security experts, firms, and news media. While this restriction reduces false positives, it can decrease detection coverage and increase latency. For instance, W2E had an average delay of 0.67 days, although 45 out of 82 events were detected without delay. Additionally, 9 events went undetected because they were either never mentioned or mentioned only once by our user list. W2E also showed lower recall for DDoS incidents compared to other types of events, likely due to the nature of DDoS discussions often starting from affected users rather than security-minded individuals.

### Keyword-based Filter
W2E uses a set of threat-related keywords to filter tweets for candidate events. While keyword matching is a common first step in cybersecurity event detection, it can be challenging to balance between false positive and false negative rates. For example, even with specific keywords like "malware," irrelevant tweets (e.g., job postings for malware analysts) can pass through, leading to false positives. To address this, some systems, such as those by Ritter et al. [40] and Zong et al. [49], use classifiers to determine if a tweet is a real security event. Replacing the keyword-based filter with a classification-based filter could help reduce false positives in W2E.

## Conclusion
We propose a word-based cybersecurity event detection system, W2E, which monitors new and re-emerging words over time to detect security events. Our approach, inspired by anomaly detection, clusters triggered tweets to construct events, enabling the detection of both new and resurgent threats. Empirical results demonstrate the system's effectiveness across a wide range of cyber threats.

## References
[References listed as provided]

---

This revised version provides a clearer and more structured presentation of the information, making it easier to understand and follow.