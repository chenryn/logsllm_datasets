the IP:service port number of other Winny peers (the default upper limit is
600.).
The number of IP addresses in (2) is lower than that in (1) since the infor-
mation of (1) comes from the connection of the service port of the decoy peer
but that in (2) is from the connection of the client port of the decoy peer into
the result of (1). This fact depends on the search capacity of the decoy peers
and the number of Port 0 peers, which do not have their own service port.
In (3), the Winny peers in the stub network (database γ) access 1–3216 peers
of the service port in database β in Table 1. In our procedures, peers D and F
are not identiﬁed as Winny peers since there are only one access to these peers.
Since a Winny peer regularly accesses to the service port of the other peers
to maintain the peer search connections, this identiﬁcation method works well.
However, we cannot ﬁnd “Winny” in the deﬁnition (4). No connection between
the service port of a Winny peer in the stub network and the client port of a
Winny peer in the Internet is ever established. This is because that Winny users
in the stub network will not upload any ﬁle to the other Winny peers.
Next we investigate the eﬀect of the measurement period for log B. The
number of nodes identiﬁed does not vary but the number of identiﬁed ﬂows is
diﬀerent. A longer measurement period ﬁnds many IP addresses and service ports
of Winny peers in the Internet (database β), and many ﬂows are also identiﬁed.
Comparing (e) with (h), (h) gave better results in spite of the fact that the
number of peers in database β is almost the same because earlyer logged peers
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
65
Table 1. Number of accesses to database β peers from the stub network per day
Suspected peer
A B C D E F G H
I
J
K
Number of accesses 2446 623 166 1 1626 1 2753 2122 3216 3027 2899
Table 2. Relationship between log period at measurement point B and identiﬁed ﬂows
Measurement period
Databaseβ Identiﬁed peers Identiﬁed ﬂows Av. ﬂow size
(a) 0:00 Jan. 11 – 0:00 Jan. 12
(b) 0:00 Jan. 10 – 0:00 Jan. 11
(c) 0:00 Jan. 9 – 0:00 Jan. 11
(d) 0:00 Jan. 8 – 0:00 Jan. 11
(e) 0:00 Jan. 4 – 0:00 Jan. 11
(f) 12:00 Jan. 10 – 12:00 Jan. 12
(g) 0:00 Jan. 10 – 0:00 Jan. 12
(h) 0:00 Jan. 8 – 0:00 Jan. 14
45873
48434
84129
114715
215557
84129
110097
213968
9
9
9
9
10
9
9
9
111064
57872
71525
78074
87450
120042
123589
128486
32.4KB
78.1KB
67.5KB
64.1KB
61.5KB
46.7KB
48.2KB
47.7KB
were not joining the Winny network during the measurement period of the log A.
However, the diﬀerences in the number of identiﬁed ﬂows between (g) and (h)
is small. This fact will depend on the connection period of each peer. In (a), (g)
and (h), the average ﬂow size becomes small, because the additionally identiﬁed
ﬂows are used for composing the Adjacent peer check/search network.
5.2 Analysis Results 2
As shown in the previous subsection, we found that there are no “Winny” peers
in the stub network except for the 5 decoy peers. We do have not shown whether
the proposed identiﬁcation method 2 works eﬀectively and need to evaluate
whether it does. We ran 5 Winny applications in the PC in parallel and treated
all the 5 peers as decoy peers in the previous subsection. However, for the next
set of evaluations we treated one of the decoy peers as the decoy peer, and the
others 4 peers is as general “Winny” peers in the following evaluations. By With
these analyses, we can ﬁnd one decoy peer and 4 “Winny” peers in the stub
network. These 5 “Winny” peers are all treated as “Winny” in this subsection.
Note that the 5 decoy peers run on one PC and the relationships in Figure 3 are
diﬀerent for the following results.
First, we determined the same 24-hour measurement period for point A and
point B. The number of identiﬁed peers in each step is as follows.
(1) The number of unique IP addresses of Winny peers is 19136 (database α).
(2) The number of unique pairs of IP addresses and service ports of Winny peers
is 13791 (database β).
(3) The number of unique IP addresses of Winny peers in the stub network is
11 (database γ).
66
S. Ohzahata et al.
Table 3. Relation between the number of peers in databaseβ and the identiﬁed peers
No.of peer in databaseβ
one docoy peer
Database α (old→updated) – → 39133
19136 → 51365
Database β (old→updated) 10 → 26740 100 → 31211 1000 → 31263 13791 → 34868
– → 46264
1000
100
– → 46264
10
Database γ
Database δ
Database 
5
4
4
8
5
7
10
5
9
10
5
9
(4) The number of unique IP address and service port of Winny peers in the
stub network is 5(database δ). The number of the Port 0peers is 9(database ).
(5) The IP addresses of an additional 32229 peers are found and added to
database α by the Winny peer.
(6) The database β is also updated and the number of peers is 34868.
(7)–(8) All the “Winny” and “Port 0” peers in the stub network were identiﬁed
in the step (4): no additional peers are found in this step.
These “Winny” peers accesses the other peers much more than normal Winny
peers but we can show our procedures work well from this result.
Next, we investigate the eﬀect of the size of database β. We change the size
from 10, 100, 1000 and 13791. These peers are the ﬁrst accessed peers by the
decoy peer (one of the ﬁve decoy peers) from 0:00 Jan. 11. Table3 shows that the
relation between the numbers of peers in database β and the identiﬁed peers in
each database. In the case of 10 or 100 peers in database β, some Winny peers
are not identiﬁed. But, when 1000 peers were used, the results are almost same
as the “one decoy peer” case. This means that if there are many “Winny” peers
in the stub network, our identiﬁcation performance will be improved.
6 Conclusion
We have proposed an identiﬁcation method for pure P2P traﬃc, Winny, and
evaluated its the basic characteristics of it. Using the a decoy node, we identiﬁed
the IP address and service port of Winny peers and can select the identiﬁed
IP and service port number in the traﬃc log of the back-bone. Our identiﬁ-
cation method will be eﬀective for pure P2P applications which will appears
in the future since our methodits depends on the basic relationships among in
client/server computing in the Internet applications.
In the a stub network, the number of Winny users is small. We may not ﬁnd
“Winny” traﬃc since the Winny users in the stub network are use Port 0. We
only a collect traﬃc log from the other stub networks which haves many Winny
users, even if search capacity of the decoy peer is current one, characteristics of
the traﬃc will be much clearly analyzed. The introduced identiﬁcation method
is one of thean example, and we should improve the method with by analyzing
the access patterns among the peers. Our identiﬁcation method depends on
A Traﬃc Identiﬁcation Method and Evaluations for a Pure P2P Application
67
the access number of accesses of the decoy peers from by peers in the Winny
networks and the number of users in the stub network. ThenAs a result, some
ﬂows may not be identiﬁed by our method. If we prepare many decoy peers or
there are many users in the stub network, our method improves the identiﬁcation
performance of our method improves.
When we control traﬃc, we should need know the status and deal themman-
age it in real time. Our proposed procedure will require this improvement for
the usageapplication.
Acknowledgments
The authors wish to express their gratitude to Mr. Hideaki Suzuki of the Tokyo
University of Agriculture and Technology for their support on traﬃc analysis
support. The authors also thank the anonymous reviewers for their useful com-
ments and advice to improve this paper. This research is partly supported by
Grants-in-Aid for Scientiﬁc Research (KAKENHI), No. 15500032.
References
1. M. St. Johns and G. Huston, “Considerations on the use of a Service Identiﬁer in
Packet Headers,” RFC 3639, 2003.
2. Gnutella, “http://www.gnutella.com/”
3. Kazaa, “http://www.kazaa.com/”
4. BitTorrent Protocol, “http://bitconjurer.org/BitTorrent”
5. S. Saroiu, P. Gummadi and S. D. Gribble, “Measurement study of peer-to-peer ﬁle
sharing systems,” Multimedia Computing and Networking 2002, 2002.
6. S. Sen and J. Wang, “Analyzing Peer-To-Peer Traﬃc Across Large Networks,”
IEEE/ACM Trans. on Networking, Vol. 12, No. 2, pp. 219–232, 2004.
7. M. Kim, H. Kang and J. W. Hong, “Towards Peer-to-Peer Traﬃc Analysis Using
Flows,” Proc. of 14h IFIP/IEEE Workshop Distributed Systems: Operations and
Management, 2003.
8. WinMX, “http://www.winmx.com/”
9. Winny, “http://www.nynode.info/”
10. C. Dewes, A. Wichmann and A. Feldmann, “An Analysis of Internet Chat Sys-
tems,” Proc. of ACM SIGCOMM Internet Measurement Workshop 2003, pp. 51–
64, 2003.
11. K. P. Gummadi, R. J. Dunn and S. Saroiu, “Measurement, Modeling and Analysis
of a Peer-to-Peer File-Sharing Workload,” Proc. of ACM SOSP’03 2003, pp. 314–
329, 2003.
12. Snort, “http://www.snort.org/”
13. P. Barford, J. Kline, D. Plonka and A. Ron, “A Signal Analysis of Network Traﬃc
Anomalies,” Proc. of ACM IMW’02, pp. 71–82, 2002.
14. S. Sen O. Spatscheck and D. Wang, “Accurate, Scalable In-Network Identiﬁcation
of P2P Traﬃc Using Application Signatures,” Proc. of ACM WWW’04, 2004.
68
S. Ohzahata et al.
15. K. Tutscheku, “A Measurement-based Traﬃc Proﬁle of the eDonkey Filesharing
Service,” Proc. of PAM’04, 2004.
16. I. Clarke et al, “Freenet: A Distributied Anonymous Information Strage and Re-
trieval Systems,” Proc of ICSI Workshop on Design Issues in Anonymity and Un-
obsenvability, Springer-Verlag, LNCS 2009, pp. 46–66, 2001.
17. Safeny, “http://www.geocities.co.jp/SiliconValley-SanJose/7063/”