before. Confirm that the passwords obtained are different from the ones 
used in the authentication process (if so, the password is encrypted) 
Considering the users identified verify if the authentication procedure 
uses external authentication (e.g., operating system, Kerberos, etc.) 
Using a network scanner confirm that the password is encrypted during 
the authentication process 
Using a network scanner confirm that the password is encrypted in the 
communication between the DBMS and the authentication server 
Using a user with OS administration privileges read from the file/table 
where the usernames/passwords are stored, the passwords of the users 
identified before. Confirm that passwords read are different from the 
ones used in the authentication process 
Verify if the following system privileges are available: create session, 
alter session, create user, alter user, drop user, create table, select data 
dictionary, select any table, insert any table, update any table, delete 
any table, and audit system. Verify that the only users that possess all 
of those privileges are the DBA users. Normal users must be limited to 
the following privileges: create session, alter session, and create table 
Verify if the system allows the users to grant to other users different 
object privileges over their tables. The object privileges must include at 
least the following: select, insert, update, delete, and alter. Verify if the 
users identified before have correct object privileges to the tables stored 
in the database. Verify that the database user that owns each table is not 
used by the client applications to access the database 
Confirm that it is possible to control which of the users identified (ex-
cept the database administration users) are allowed to forward the privi-
leges that they have. This requirement is also acomplished if the system 
does not allow the users to forward privileges 
Using each one of the users identified (except the database administra-
tion users), confirm that it is not possible to perform any administration 
task, such as: create user, drop user, etc. 
Using each one of the users identified (except the database administra-
tion users), confirm that it is not possible to access the data dictionary 
Using a network scanner confirm that it is not possible to understand 
the data transferred between the server and the clients (and vice-versa) 
when selecting, from a remote user, all the contents from each of the 
tables in data criticality level 3 (select * from TABLE) 
1) Without using encryption in the data communication measure the 
time needed to select, from a remote user, all the contents from the 
biggest table (i.e., the table with the higher number of records) in the 
data criticality level 3 
4.2
2) For the encryption methods being used measure the time needed to 
select, from a remote user, all the contents from the biggest table 
(i.e., the table with the higher number of records) in the data critical-
ity level 3. Calculate the overhead comparing to the time obtained in 
1) 
5.1
Verify if the tables in data criticality level 4 are encrypted. Select all the 
records from each of the tables in level 4 without using encryption and 
confirm that it is not possible to understand the result 
1) Create a table similar to one of the existing tables in data criticality 
level 4. This table must have the same fields and constraints, but 
should be empty when created. 
2) Using a SQL script insert 100000 records in the table without using 
5.2
encryption, and measure the execution time 
3) Using SQL insert 100000 records in the table considering each en-
cryption mechanism available, and measure the execution time 
4) Calculate the overhead in the performance for each mechanism by 
comparing the results obtained in 3) with the result obtained in 2)  
1) Without using encryption, select all the records from the table con-
sidered in requirement 5.2 and measure the execution time 
5.3
2) Using each encryption mechanism, select all records from the table 
considered in requirement 5.2 and measure the execution time 
3) Calculate the overhead for each mechanism by comparing the results 
obtained in 2) with the result obtained in 1) 
6.1
Verify if auditing/fine grain access control is being used for tables in 
data criticality level 5. Using one of the DBA users identify the users 
that have accessed each of the tables in data criticality level 5. Confirm 
that the users with privileges to access those tables are in the set of 
users obtained 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
Although the evaluation of security of database ap-
plications  is  outside  the  scope  of  this  work,  there  are 
some  important  aspects  that  should  be  considered  to 
keep the overall security of the database installation at 
the same security level provided by the DBMS: 
– The  client  applications  should  not  access  the  data-
base  server  using  the  username/password  of  the 
user  that  owns  the  tables.  Different  usernames 
should be defined (with different privileges) to ac-
cess the database according to the profile of the us-
ers using the client applications. 
– The  client  applications  should  provide  different 
profiles  to  control  the  access  of  end-users  to  the 
functionalities  implemented  to  access/manipulate 
the data stored in the database. 
– When  stored  in  the  client  applications,  the  user-
names and passwords must be encrypted.
5. Comparative analysis of the security fea-
tures of different DBMS 
This  subsection  presents  a  practical  example  of  as-
sessing  the  security  of  different  DBMS.  The  results 
presented have resulted from a study meant to validate 
the approach to compare different DBMS products. 
Two  different  DBMS  (Oracle  9i  and  PostgreSQL 
7.3)  have  been  considered.  The  Oracle  DBMS  [13]  is 
one of the leading databases in the market and as one of 
the most complete and complex databases it represents 
very well all of the most sophisticated DBMS available 
today.  On  the  other  hand,  the  PostgreSQL  database 
[14] is one of the  most popular open-source databases 
available. For these reasons, we have chosen these two 
quite different DBMS as case study to demonstrate the 
security  evaluation  approach  proposed.  Table  8  pre-
sents  a  first  summary  of  the  requirements  fulfilled  by 
each DBMS. As shown Oracle 9i presents much better 
security results than PostgreSQL 7.3. 
5.1. Oracle 9i DBMS 
As shown in Table 8, the Oracle 9i DBMS provides 
all  the  security  mechanisms  (and  those  mechanisms 
fulfill the requirements) needed to achieve the security 
class  5  (as  mentioned  before,  requirements  4.2,  5.2, 
and 5.3, are not mandatory). 
A relevant result is that requirement 4.2 depends on 
the  encryption  methods  used.  The  Oracle  9i  DBMS 
provides eleven different methods for the encryption of 
data during the communication between the server and 
the  clients  and  the  use  of  some  of  those  methods  im-
plies  a  degradation  in  the  performance  greater  than 
10% (which is the maximum overhead specified in the 
requirement 4.2). The different encryption mechanisms 
used by Oracle 9i (see [15] for details) are implementa-
tions  of  well-known  encryption  algorithms  [16,  17]. 
Note that, different encryption methods imply different 
performance  overheads.  However,  that  overhead  is 
very  similar  for  methods  in  the  same  family  (all  RC4 
methods imply a overhead of 1%, AES and DES meth-
ods 4% to 5%, and 3DES methods 14%). 
Table 8. Security results summary. 
Security Mechan. 
# Req.  Oracle 9i  PostgreSQL 
Internal user authentication ALL 
External user authentication ALL 
3.1 
3.2 
3.3 
3.4 
3.5 
4.1 
User privileges 
OK 
OK 
OK 
OK 
OK 
OK 
OK 
OK 
Encryption in the data  
communication 
Encryption in the data  
storage 
Auditing 
4.2 
5.1 
5.2 
5.3 
6.1 
Depends on 
the method 
OK 
Not OK 
Not OK 
OK 
OK 
OK 
Not OK 
OK 
OK 
OK 
Not OK 
Not OK 
Not OK 
Not OK 
Not OK 
Not OK 
Not OK 
Concerning  the  encryption  in  the  data  storage,  the 
requirements  5.2  and  5.3  are not  fulfilled.  In  this  case 
Oracle  9i  provides  three  encryption  methods  (DES, 
DES3_0, and DES3_1) and all these methods introduce 
performance  degradation  much  above  the  50%  speci-
fied in the requirements. In fact, the degradation intro-
duced by these mechanisms is always quite high, reach-
ing 400% in the best case and 2700% in the worst case. 
Thus,  the  use  of  encryption  in  data  storage  must  be 
carefully used as it greatly affects the performance. 
In  conclusion,  based  on  the  analysis  of  the  results 
presented before, we can classify the Oracle 9i DBMS 
in  the  security  class  5.  Concerning  the  security  re-
quirements  fulfillment  (SRF)  metric,  the  maximum 
achievable  is  96%  (using  encryption  methods  for  data 
communication  that  fulfill  the  security  requirement 
4.2).  If  we  consider  the  encryption  methods  for  data 
communication 3DES168 and 3DES112 then SRF ob-
tained for Oracle 9i is 92%. 
5.2. PostgreSQL 7.3 DBMS 
PostgreSQL 7.3 is a quite limited DBMS in terms of 
security (although it is frequently used to support criti-
cal  database  applications).  As  we  can  see  in  Table  8, 
this  DBMS  only  fulfils  the  security  requirements 
needed to achieve the security class 1. Furthermore, to 
fulfill  the  requirements  related  to  user  authentication 
the  system  must  be  manually  configured  by  the  DBA 
as the default settings are quite limited in terms of se-
curity. Some relevant aspects are: 
– By  default  users  do  not  need  to  provide  the  pass-
word  to  connect  to  the  system.  To  avoid  this,  the 
DBA must correctly configure the pg_hba.conf file 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply. 
(this  file  describes  how  and  from  where  the  users 
can access the server).
– When  creating  a  user  the  DBA  can  specify  if  the 
password  is  to  be  stored  encrypted  or  not,  which 
may  lead  to  the  storage  of  plain  passwords  (a  tre-
mendous flaw in the system configuration).
– By  default  the  passwords  are  not  encrypted  during 
the  authentication  process.  Again,  it  is  a  responsi-
bility of the DBA to change the configuration.
– The DBMS does not have system privileges. In this 
DBMS users are “normal” users or superusers (da-
tabase  administrators)  and  no  other  way  to  control 
the user actions is provided.
– Normal users are able to read the data dictionary.
The  PostgreSQL  DBMS  is  a  security  class  1 
DBMS.  Concerning  the  security  requirements  fulfill-
ment  (SRF)  metric,  the  maximum  achievable  is  66%. 
Although PostgreSQL 7.3 does not fulfill all the secu-
rity  requirements  related  to  user  privileges  (this  is  the 
reason  why  it  is  not  in  the  security  class  2),  it  fulfils 
some of them, which gives it a high SRF. 
6. Conclusions and future work 
This paper proposes a practical approach to charac-
terize  the  security  mechanisms  in  database  systems 
considering two different scenarios: 1) compare differ-
ent  DBMS  products  and  2)  assessing  security  in  real 
database installations (systems in the field). DBMS are 
classified according to a set of security classes and for 
each  class  a  set  of  security  requirements  and  a  set  of
tests are  identified.  To  complement  the  security  class 
we propose an additional metric (SRF) that shows how 
well  a  given  system  fulfills  a  set  of  security  require-
ments (in a scale of 0 to 100). This metric is useful to 
differentiate systems in the same security class. 
The proposed approach is presented through a con-
crete example of assessing the security mechanisms of 
two  DBMS  (Oracle  9i  and  PostgreSQL  7.3).  The  re-
sults  obtained  were  analyzed  and  discussed  in  detail. 
These  results  allowed  us  to  classify  the  two  DBMS 
concerning  security  features  and  clearly  show  that  se-
curity  evaluation  can  be  successfully  applied  to  data-
base  management  systems.  The  following  table  sum-
marizes the results obtained: 
Oracle 9i 
(encryption RC4, 
AES, and DES ) 
Security class 
SRF metric 
Class 5 
96% 
Oracle 9i 
(encryption 
3DES) 
Class 5 
92% 
PostgreSQL 
7.3 
Class 1 
66% 
This work represents a first contribution towards the 
proposal of a security benchmark for DBMS. The idea 
is  to  devise  a  standardize  way  to  evaluate  security  in 
DBMS.  Compared  to  well-established  benchmarks, 
which  are  normally  based  on  a  pure  experimental  ap-
proach,  security  benchmarks  will  introduce  some  new 
issues,  such  as  discovering  hidden  flaws  on  the  soft-
ware  implementation  and  modeling  the  ability  of  hu-
mans  (hackers)  to  discover  and  explore  potential  vul-
nerabilities  of  the  system.  Thus,  the  main  components 
of  a  security  benchmark  that  will  be  addressed  in  our 
future  work  are  measures  (characterize  the  security  of 
the system), workload (work that the system must per-
form  during  the  benchmark  run),  attackload  (set  of 
faults that emulate real security attacks experienced in 
the field), benchmark procedure and rules (description 
of the procedures and rules that must be followed dur-
ing  a  benchmark  run),  and  experimental  setup  (de-
scribes the setup required to run the benchmark). 
7. References 
[1] C. Cachin et al, “Reference model and use cases, MAFTIA 
deliverable D1”, MAFTIA Project IST-1999-11583, 2000. 
[2] R.  R.  Schell,  M.  Heckman,  “Views  for  multilevel  data-
base security”, IEEE Trans. on Software Engineering, 1987. 
[3] G. Pernul, G. Luef, “Bibliography on database security”, 
ACM SIGMOD Rec., Volume 21, Issue 1, 1992. 
[4] S. Castano, M. G. Fugini, G. Martella, P. Samarati, “Da-
tabase Security”, ACM Press Books, 1994. 
[5] E.  Bertino,  S.  Jajodia,  P.  Samarati,  “Database  security: 
Research  and  practice”,  Information  Systems  Journal,  Vol-
ume 20, Number 7, 1995. 
[6] Transaction 
www.tpc.org. 
Processing 
Performance 
Council, 
[7] M. Vieira, H. Madeira, “Benchmarking the Dependability 
of  Different  OLTP  Systems”,  The  International  Conference 
on Dependable Systems and Networks, DSN-DCC2003, San 
Francisco, CA, June 22-25, 2003. 
[8] M. Vieira, H. Madeira, “A Dependability Benchmark for 
OLTP  Application  Environments”,  29th  International  Con-
ference on Very Large Data Bases, VLDB2003, Berlin, Ger-
many, September 09-12, 2003. 
[9]  Common  Criteria,  “Common  Criteria  for  Information 
Technology Security Evaluation: User Guide”, 1999. 
[10]  Department  of  Defense,  “Trusted  Computer  System  
Evaluation Criteria”, 1985. 
[11]  Commission  of  the  European  Communities,  “Informa-
tion Technology Security Eval. Manual (ITSEM)”, 1993. 
[12] Transaction  Processing  Performance  Council,  “TPC 
Benchmark W, Standard Specification, Version 1.8”, 2002. 
[13] Oracle, "Oracle 9i Server Concepts Manual", 2002. 
[14] The  PostgreSQL  Global  Development  Group,  “Post-
greSQL 7.3.2 Administrator’s Guide”, 2002. 
[15] Oracle  Corporation,  "Oracle9i  Network,  Directory,  and 
Security Guide", 2002. 
[16] M.  Y.  Rhee,  “Internet  Security:  Cryptographic  Princi-
ples, Algorithms and Protocols”, John Wiley & Sons, 2003. 
[17] N.  Ferguson,  B.  Schneier,  “Practical  Cryptography”, 
Wiley Publishing, 2003. 
Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05) 
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:08:26 UTC from IEEE Xplore.  Restrictions apply.