### Security Assessment and Comparative Analysis of Database Management Systems

#### 1. Password Verification and Encryption
- **Password Differentiation**: Ensure that the passwords obtained are distinct from those used in the authentication process. If they differ, it indicates that the password is encrypted.
- **External Authentication**: Verify if the identified users use external authentication methods (e.g., operating system, Kerberos).
- **Network Scanner for Encryption**:
  - Confirm that the password is encrypted during the authentication process.
  - Confirm that the password is encrypted in the communication between the DBMS and the authentication server.
- **OS Administration Privileges**: Using a user with OS administration privileges, read the file or table where usernames and passwords are stored. Verify that the passwords read are different from those used in the authentication process.

#### 2. User Privileges
- **System Privileges**: Verify if the following system privileges are available: `create session`, `alter session`, `create user`, `alter user`, `drop user`, `create table`, `select data dictionary`, `select any table`, `insert any table`, `update any table`, `delete any table`, and `audit system`. Ensure that only DBA users possess all these privileges. Normal users should be limited to `create session`, `alter session`, and `create table`.
- **Object Privileges**: Verify if the system allows users to grant object privileges over their tables, including at least `select`, `insert`, `update`, `delete`, and `alter`. Confirm that the identified users have the correct object privileges to the tables stored in the database. Ensure that the database user who owns each table is not used by client applications to access the database.

#### 3. Privilege Forwarding
- **Control Privilege Forwarding**: Confirm that it is possible to control which users (except database administration users) are allowed to forward the privileges they have. This requirement is also met if the system does not allow users to forward privileges.

#### 4. User Restrictions
- **Administration Tasks**: Using each identified user (except database administration users), confirm that it is not possible to perform any administration tasks such as `create user` or `drop user`.
- **Data Dictionary Access**: Using each identified user (except database administration users), confirm that it is not possible to access the data dictionary.

#### 5. Data Communication and Encryption
- **Data Encryption Verification**: Using a network scanner, confirm that it is not possible to understand the data transferred between the server and clients (and vice versa) when selecting all contents from each table in data criticality level 3.
- **Performance Measurement**:
  1. Without using encryption, measure the time needed to select all contents from the largest table in data criticality level 3.
  2. For the encryption methods being used, measure the time needed to select all contents from the largest table in data criticality level 3. Calculate the overhead compared to the time obtained in step 1.

#### 6. Table Encryption
- **Critical Level 4 Tables**: Verify if the tables in data criticality level 4 are encrypted. Select all records from each table in level 4 without using encryption and confirm that it is not possible to understand the result.
- **Performance Testing**:
  1. Create a table similar to one of the existing tables in data criticality level 4. This table must have the same fields and constraints but should be empty when created.
  2. Insert 100,000 records into the table without using encryption and measure the execution time.
  3. Insert 100,000 records into the table using each available encryption mechanism and measure the execution time.
  4. Calculate the performance overhead for each mechanism by comparing the results obtained in step 3 with the result obtained in step 2.
  5. Without using encryption, select all records from the table considered in step 1 and measure the execution time.
  6. Using each encryption mechanism, select all records from the table considered in step 1 and measure the execution time.
  7. Calculate the performance overhead for each mechanism by comparing the results obtained in step 6 with the result obtained in step 5.

#### 7. Auditing and Fine-Grain Access Control
- **Auditing Verification**: Verify if auditing/fine-grain access control is being used for tables in data criticality level 5. Using one of the DBA users, identify the users that have accessed each of the tables in data criticality level 5. Confirm that the users with privileges to access those tables are in the set of users obtained.

#### 8. Client Application Security
- **Client Application Access**: The client applications should not access the database server using the username/password of the user that owns the tables. Different usernames should be defined (with different privileges) to access the database according to the profile of the users using the client applications.
- **User Profiles**: The client applications should provide different profiles to control the access of end-users to the functionalities implemented to access/manipulate the data stored in the database.
- **Encryption of Credentials**: When stored in the client applications, the usernames and passwords must be encrypted.

#### 9. Comparative Analysis of Security Features
- **Oracle 9i and PostgreSQL 7.3**:
  - **Oracle 9i**:
    - Oracle 9i provides all the security mechanisms needed to achieve security class 5. Requirement 4.2 depends on the encryption methods used. Oracle 9i provides eleven different methods for data encryption during communication, with varying performance overheads.
    - In terms of data storage encryption, Oracle 9i provides three methods (DES, DES3_0, and DES3_1), but these introduce significant performance degradation.
    - Oracle 9i can be classified in security class 5 with an SRF metric of 96% (using suitable encryption methods for data communication).
  - **PostgreSQL 7.3**:
    - PostgreSQL 7.3 is limited in terms of security. It fulfills the security requirements needed to achieve security class 1.
    - Default settings are insecure, requiring manual configuration by the DBA.
    - PostgreSQL 7.3 is a security class 1 DBMS with an SRF metric of 66%.

#### 10. Conclusions and Future Work
- **Proposed Approach**: A practical approach to characterize the security mechanisms in database systems, considering two scenarios: comparing different DBMS products and assessing security in real database installations.
- **Security Classes and Metrics**: DBMS are classified into security classes, and an additional SRF metric (0 to 100) is proposed to show how well a given system fulfills a set of security requirements.
- **Future Work**: Develop a standardized way to evaluate security in DBMS, addressing measures, workload, attackload, benchmark procedure and rules, and experimental setup.

#### References
- [1] C. Cachin et al, “Reference model and use cases, MAFTIA deliverable D1”, MAFTIA Project IST-1999-11583, 2000.
- [2] R. R. Schell, M. Heckman, “Views for multilevel database security”, IEEE Trans. on Software Engineering, 1987.
- [3] G. Pernul, G. Luef, “Bibliography on database security”, ACM SIGMOD Rec., Volume 21, Issue 1, 1992.
- [4] S. Castano, M. G. Fugini, G. Martella, P. Samarati, “Database Security”, ACM Press Books, 1994.
- [5] E. Bertino, S. Jajodia, P. Samarati, “Database security: Research and practice”, Information Systems Journal, Volume 20, Number 7, 1995.
- [6] Transaction Processing Performance Council, www.tpc.org.
- [7] M. Vieira, H. Madeira, “Benchmarking the Dependability of Different OLTP Systems”, The International Conference on Dependable Systems and Networks, DSN-DCC2003, San Francisco, CA, June 22-25, 2003.
- [8] M. Vieira, H. Madeira, “A Dependability Benchmark for OLTP Application Environments”, 29th International Conference on Very Large Data Bases, VLDB2003, Berlin, Germany, September 09-12, 2003.
- [9] Common Criteria, “Common Criteria for Information Technology Security Evaluation: User Guide”, 1999.
- [10] Department of Defense, “Trusted Computer System Evaluation Criteria”, 1985.
- [11] Commission of the European Communities, “Information Technology Security Eval. Manual (ITSEM)”, 1993.
- [12] Transaction Processing Performance Council, “TPC Benchmark W, Standard Specification, Version 1.8”, 2002.
- [13] Oracle, "Oracle 9i Server Concepts Manual", 2002.
- [14] The PostgreSQL Global Development Group, “PostgreSQL 7.3.2 Administrator’s Guide”, 2002.
- [15] Oracle Corporation, "Oracle9i Network, Directory, and Security Guide", 2002.
- [16] M. Y. Rhee, “Internet Security: Cryptographic Principles, Algorithms and Protocols”, John Wiley & Sons, 2003.
- [17] N. Ferguson, B. Schneier, “Practical Cryptography”, Wiley Publishing, 2003.