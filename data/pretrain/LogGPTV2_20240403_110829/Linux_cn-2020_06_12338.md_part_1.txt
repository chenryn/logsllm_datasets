---
author: Matthew Broberg
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 14051
date: '2020-06-22 10:27:55'
editorchoice: false
excerpt: Homebrew 软件包管理器可以让你轻松地在 Mac 上安装和更新应用程序和实用程序。
fromurl: https://opensource.com/article/20/6/homebrew-mac
id: 12338
islctt: true
largepic: /data/attachment/album/202006/22/102739xum6zqmoh6sso0n6.jpg
permalink: /article-12338-1.html
pic: /data/attachment/album/202006/22/102739xum6zqmoh6sso0n6.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12358
reviewer: wxy
selector: lujun9972
summary: Homebrew 软件包管理器可以让你轻松地在 Mac 上安装和更新应用程序和实用程序。
tags:
- Homebrew
- Mac
thumb: false
title: Homebrew ：在 Mac 上无痛安装软件
titlepic: true
translator: wxy
updated: '2020-06-22 10:27:55'
---
> 
> Homebrew 软件包管理器可以让你轻松地在 Mac 上安装和更新应用程序和实用程序。
> 
> 
> 
![](/data/attachment/album/202006/22/102739xum6zqmoh6sso0n6.jpg)
在我追求“万物自动化”的过程中，我一直坚持走在用代码来管理我的 Mac 笔记本电脑的路上。与其用鼠标或触控板手动管理我的应用程序和实用程序，我更喜欢使用软件包管理软件来安装、更新和删除不需要的软件。
这对 Mac 用户来说是个挑战。Mac 的操作系统 macOS 始终落后于 Linux 的一个地方就是在包管理方面。Mac 用户没有默认的软件包管理器，而 Linux 用户则有很多选择 —— 从熟悉的 `yum` 和 `apt` 到现代的 [Flatpak](https://opensource.com/article/19/10/how-build-flatpak-packaging)。但 Mac 呢？
这就是 [Homebrew](https://brew.sh) 的作用。Homebrew（自酿）填补了 MacOS 事实上的软件包管理器的空白（它也是 Linux 上的又一个可选的包管理器）。它为任何熟悉命令行的人提供了令人难以置信的流畅而直接的体验，如果你是新手，它是学习命令行的好方法。
（LCTT 译注：Homebrew 系统中采用了大量针对自酿啤酒相关的比喻，大家在使用过程中会发现这些有趣的形容。）
如果你在 Mac 上还没有 Homebrew，你可以这样来安装：
```
$ /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
```
该命令将执行 Homebrew 团队提供的安装程序脚本。如果你喜欢谨慎一点，可以 `curl` 下来这个文件，审核后再手动运行。
```
$ curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh --output homebrew_installer.sh
$ more homebrew_installer.sh # 审核该脚本，直到你觉得没问题了
$ bash homebrew_installer.sh
```
### 使用“酿造”来管理你的命令行实用程序
Homebrew 号称它“可以安装苹果（或你的 Linux 系统）默认没有安装的必需之物”。安装是通过 `brew`（酿造）命令进行的，它使我们能够访问成千上万的命令行实用程序，但不是更复杂的应用程序。
对于我们这些搞技术的人来说，符合“必需之物”类别的实用工具包括显示目录结构的方便的 `tree` 命令和我用来 [管理多个 Python 版本](https://opensource.com/article/20/4/pyenv) 的 `pyenv`。
你可以用 `search` 子命令看到 Homebrew 中所有的“ 秘方   formula ”，我用 `wc` 命令显示有多少个“秘方”。
```
# -l 统计行数
$ brew search | wc -l
    5013
```
有 5000 多个“秘方”，这是一个不可思议的软件数量。所以，在搜索那个庞大的清单之前，最好先对自己想要的东西有个概念。值得庆幸的是，浏览起来很方便。“秘方”被编入并集中存储到核心库中，核心库按操作系统划分（Mac 在 [Homebrew Core](https://github.com/Homebrew/homebrew-core)，Linux 在 [Linux Core](https://github.com/Homebrew/linuxbrew-core)）。它们也可以通过 Homebrew API 和[网站](https://formulae.brew.sh/formula/)列出。
口碑是另一个寻找实用工具的好方法。考虑到这一点，如果你正在寻找灵感，这里有一些我的最爱：
* `pyenv`、`rbenv` 和 `nodenv` 分别用于管理 Python、Ruby 和 Node.js 的版本
* `imagemagick` 用于可脚本化的图像编辑
* `pandoc` 用于可脚本化的文件转换（我经常从 .docx 切换到 .md 或 .html）
* `hub` 为 GitHub 用户提供了[更好的 Git 体验](https://opensource.com/article/20/3/github-hub)。
* `tldr` 提供了解如何使用命令行工具的例子
举个例子，看看 [tldr 页面](https://github.com/tldr-pages/tldr)，这是一个用户友好的替代方式，可以滚动浏览应用程序的手册页。你可以通过再次运行 `search` 来确认它是否可用：
```
$ brew search tldr
==> Formulae
tldr ✔
```
成功了！这个对勾让你知道它是可用的。现在你可以安装它了：
```
$ brew install tldr
==> Downloading https://homebrew.bintray.com/bottles/tldr-1.3.0_2.catalina.bottle.tar.gz
Already downloaded: /Users/mbbroberg/Library/Caches/Homebrew/downloads/901bc14594a9283e9ab20aec942dc5a9a2befb7e96e1b0fcccb4e3257918813c--tldr-1.3.0_2.catalina.bottle.tar.gz
==> Installing tldr
==> Pouring tldr-1.3.0_2.catalina.bottle.tar.gz
?  /usr/local/Cellar/tldr/1.3.0_2: 6 files, 35.5KB
```
值得庆幸的是，Homebrew 预先构建了二进制文件，所以你不必在本地机器上从源代码构建。这样就节省了很多时间，并免除了 CPU 风扇的噪音。我对 Homebrew 赞赏的另一件事是，你可以在不完全了解其含义的情况下欣赏此功能。
但如果你喜欢，看看复杂的东西也是很有趣的。对 `tldr` 运行 `info` 子命令，你可以看到所有的依赖管理、源代码，甚至公共分析。
```
$ brew info tldr
tldr: stable 1.3.0 (bottled), HEAD
Simplified and community-driven man pages
https://tldr.sh/