title:Identifiability of link metrics based on end-to-end path measurements
author:Liang Ma and
Ting He and
Kin K. Leung and
Ananthram Swami and
Don Towsley
Identiﬁability of Link Metrics Based on End-to-end Path
Measurements ∗
Liang Ma
Imperial College
Ting He
IBM T. J. Watson Research
Kin K. Leung
Imperial College
London, UK
PI:EMAIL
Yorktown, NY, USA
PI:EMAIL
London, UK
PI:EMAIL
Ananthram Swami
Don Towsley
Army Research Laboratory
University of Massachusetts
Adelphi, MD, USA
PI:EMAIL
Amherst, MA, USA
PI:EMAIL
Abstract
We investigate the problem of identifying individual link
metrics in a communication network from end-to-end path
measurements, under the assumption that link metrics are
additive and constant. To uniquely identify the link metrics,
the number of linearly independent measurement paths must
equal the number of links. Our contribution is to character-
ize this condition in terms of the network topology and the
number/placement of monitors, under the constraint that
measurement paths must be cycle-free. Our main results
are: (i) it is generally impossible to identify all the link met-
rics by using two monitors; (ii) nevertheless, metrics of all
the interior links not incident to any monitor are identiﬁable
by two monitors if the topology satisﬁes a set of necessary
and suﬃcient connectivity conditions; (iii) these conditions
naturally extend to a necessary and suﬃcient condition for
identifying all the link metrics using three or more moni-
tors. We show that these conditions not only allow eﬃcient
identiﬁability tests, but also enable an eﬃcient algorithm to
place the minimum number of monitors in order to identify
all link metrics. Our evaluations on both random and real
topologies show that the proposed algorithm achieves iden-
tiﬁability using a much smaller number of monitors than a
baseline solution.
∗Research was partially sponsored by the U.S. Army Re-
search Laboratory and the U.K. Ministry of Defence and
was accomplished under Agreement Number W911NF-06-3-
0001. The views and conclusions contained in this document
are those of the authors and should not be interpreted as rep-
resenting the oﬃcial policies, either expressed or implied, of
the U.S. Army Research Laboratory, the U.S. Government,
the U.K. Ministry of Defence or the U.K. Government. The
U.S. and U.K. Governments are authorized to reproduce and
distribute reprints for Government purposes notwithstand-
ing any copyright notation hereon.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC’13, October 23–25, 2013, Barcelona, Spain.
Copyright 2013 ACM 978-1-4503-1953-9/13/10 ...$15.00.
http://dx.doi.org/10.1145/2504730.2504738.
Categories and Subject Descriptors
C.2.3 [Computer-communication Networks]: Network
Operations—Network monitoring; G.2.2 [Discrete Math-
ematics]: Graph Theory—Network problems
General Terms
Algorithms, Measurement, Performance, Theory
Keywords
Network Tomography; Linear Algebraic Model; Identiﬁabil-
ity Condition; Monitor Placement
1.
INTRODUCTION
Accurate and timely knowledge of the internal state of
a network (e.g., delays on individual links) is essential for
various network operations such as route selection, resource
allocation, and fault diagnosis. Directly measuring the per-
formance of individual network elements (e.g., nodes/links)
is, however, not always feasible due to the traﬃc overhead of
the measurement process and the lack of support at internal
network elements for making such measurements [1]. These
limitations motivate the need for external approaches, where
we infer the states of internal network elements by measur-
ing the performance along selected paths from a subset of
nodes with monitoring capabilities, hereafter referred to as
monitors.
Depending on the granularity of observations, external ap-
proaches can be classiﬁed as hop-by-hop approaches or end-
to-end approaches. The former rely on special diagnostic
tools such as traceroute, pathchar [2], and Network Char-
acterization Service (NCS) [3] to reveal ﬁne-grained perfor-
mance metrics of individual links by sending active probes.
Traceroute reports delay for each hop on the probed path by
gradually increasing the time-to-live (TTL) ﬁeld of probing
packets.
Its reﬁnement, pathchar, returns hop-by-hop ca-
pacities, delays, and loss rates. A later advancement, NCS,
also returns available capacities on each link. While provid-
ing ﬁne-grained information, the above tools require that
Internet Control Message Protocol (ICMP) be supported
at each internal node. Even then, they suﬀer inaccuracies
caused by asymmetry in routes and diﬀerent priorities of
ICMP and data packets. Moreover, these tools can gener-
ate a large number of probing packets, causing extra load
and, potentially, congestion. In risk-sensitive applications,
security policies may even block hop-by-hop measurements.
Alternatively, the end-to-end approach provides a solution
that does not rely on the cooperation of internal network el-
ements or the equal treatment of control/data packets. It
relies on end-to-end performance metrics (e.g., end-to-end
delays) experienced by data packets to solve for the cor-
responding hop-by-hop metrics using network tomography.
Network tomography [4] refers to the methodology of in-
ferring internal network characteristics through end-to-end
measurements. Without requiring special cooperation from
internal nodes, network tomography can utilize measure-
ments from data packets to obtain path-level information [5],
thus reducing the need for active probes.
In many cases, link metrics are additive, i.e., the combined
metric over multiple links is the sum of individual link met-
rics. For instance, delays are additive, while a multiplicative
metric (e.g., packet delivery ratio) can be expressed in an ad-
ditive form by using the log(·) function. For additive met-
rics, we can model the problem as that of solving a system of
linear equations, where the unknown variables are the link
metrics, and the known constants are the end-to-end path
measurements, each equal to the sum of the corresponding
link metrics along a path. Thus, network tomography es-
sentially solves this linear system of equations.
Existing work on network tomography emphasizes extract-
ing as much information about link metrics as possible from
available measurements. However, past experience shows
that it is frequently impossible to uniquely identify all link
metrics from path measurements [6–8]. For example, if two
links (not necessarily adjacent) always appear together in
measurement paths, then we can at most identify their sum
metric but not the individual metrics. Generally, many mea-
surement paths are linearly dependent in that some paths are
linear combinations of the rest, and hence their measure-
ments do not provide new information. From the perspec-
tive of linear algebra, link metrics are uniquely identiﬁable
if and only if the number of linearly independent measure-
ment paths equals the number of links. There is, however,
a lack of basic understanding of the topological conditions
that ensure identiﬁability, even in the simpliﬁed scenario of
constant link metrics.
In this paper, we consider two closely related fundamen-
tal problems: (i) Under what conditions can one uniquely
identify all link metrics from end-to-end measurements; (ii)
Given an arbitrary network topology, how can one place
monitors to satisfy the above conditions using the minimum
number of monitors? We study both problems in the con-
text of controllable, cycle-free measurements, i.e., monitors
can direct measurement packets to selected paths as long
as they do not contain cycles. Such routing is generally
supported for networks under common administration (e.g.,
single-ISP networks), or overlay networks formed by overlay
nodes and physical paths between these nodes (modeled as
overlay links), where network tomography can be applied to
accurately monitor performance experienced by data traf-
ﬁc while reducing measurement overhead. Moreover, these
assumptions capture capabilities of a new generation of net-
works performing Software-Deﬁned Networking (SDN) [9],
where monitors, in cooperation with SDN controller, can
dictate paths of measurement packets in the route setup
phase, while the cycle-free constraint precludes formation of
endless cycles in the data forwarding phase. We assume that
all link metrics are additive and constant. Our “constant”
link metric refers to one that either changes slowly relative
to the measurement process, or that is a statistical charac-
teristic (e.g., mean, variance) of the link that stays constant
over time1.
Although the answer to the ﬁrst question is straightfor-
ward in linear algebra (the number of linearly independent
paths equals the number of links), a useful answer should be
expressed in terms of externally veriﬁable network properties
such as the network topology and the number/placement of
monitors. To this end, we establish necessary and suﬃcient
conditions on network topology and monitor placement for
uniquely identifying link metrics from controllable, cycle-
free measurements between the monitors. We further de-
velop an eﬃcient algorithm that leverages the established
conditions to place monitors in a given network such that
all link metrics can be uniquely identiﬁed by using the min-
imum number of monitors.
1.1 Further Discussions on Related Work
Based on the model of link metrics, existing work can
be broadly classiﬁed as statistical and algebraic approaches.
Statistical approaches model link metrics as random vari-
ables with (partially) unknown probability distributions, and
apply various parametric/nonparametric techniques to esti-
mate the link metric distributions from realizations of path
metrics [1,10,11]. Algebraic approaches consider link metrics
as unknown constants, and use linear algebraic techniques
to compute link metrics from cumulative path metrics [6, 7].
With link metrics modeled as random variables, multicast,
if supported, can be exploited as a measurement method
with broad coverage and low overhead [12, 13]. Sub-trees
and unicast are employed in [5,14] as alternatives, due to the
inﬂexibility of multicasting to all receivers. Employing mul-
ticast, [5, 15] derive the necessary and suﬃcient conditions
on the multicast tree for identifying all link metric distribu-
tions. If most links do not exhibit severe losses or delays, [10]
proposes algorithms to identify the worst performing links.
A novel approach proposed in [8] employs the Fourier trans-
form of the observable path metric distributions to estimate
the unobservable link metric distributions. All the above
methods implicitly assume the links to be identiﬁable, and
the multicast-based methods require multiple monitors to
participate in the measurement process. In contrast, we as-
sume unicast measurements and focus on establishing topo-
logical conditions for identifying all link metrics by using the
minimum number of monitors.
For constant link metrics, [7] shows that it is challenging
to solve the inverse problem due to the presence of linearly
dependent paths. When all but k link metrics are zero,
compressive sensing techniques are used to identify the k
non-zero link metrics [16, 17].
If all link metrics are bi-
nary (normal/failed), [18] proves that the network must be
(k + 2)-edge-connected to identify up to k failed links by
using one monitor measuring cycles. For arbitrary valued
link metrics, few positive results are known. If the network
is directed (links have diﬀerent metrics in diﬀerent direc-
tions), [11] proves that not all link metrics are identiﬁable
unless every non-isolated node is a monitor. Even if every
1In this case, end-to-end measurements are also statistical
characteristics, e.g., path mean/variance. In the case of vari-
ance, we also need the independence between link qualities
to make the metric additive.
node is a monitor, unique link identiﬁcation is still impos-
sible if measurement paths are constrained to cycles [6]. If
the network is undirected (links have equal metrics in both
directions), [19] derives the ﬁrst necessary and suﬃcient con-
ditions on the network topology for identifying all link met-
rics, given that monitors can measure cycles or paths possi-
bly containing cycles. A similar study in [20] characterizes
the minimum number of measurements needed to identify
a broader set of link metrics (including both additive and
nonadditive metrics), under the stronger assumption that
measurement paths can contain repeated links. Since rout-
ing along cycles is typically prohibited in real networks, it
remains open as to what the conditions become if only cycle-
free paths can be measured. In this regard, we investigate
the fundamental relationships between link identiﬁability,
network topology, and the number/placement of monitors.
Once identiﬁability is conﬁrmed, a follow-up problem is to
construct linearly independent paths between monitors to
perform measurements, for which we have developed an ef-
ﬁcient path construction algorithm in [21].
Little is known when it comes to placing monitors to en-
sure network identiﬁability. In [22, 23], the problem of plac-
ing the minimum number of monitors to identify all link
metrics under uncontrollable routing is proved to be NP-
hard, and the NP-hardness persists even if a subset of nodes
have control over their local routing policy [24]. In contrast,
we show in this paper that under controllable cycle-free rout-
ing, this problem can be solved optimally in linear time.
1.2 Summary of Contributions
We study here for the ﬁrst time the fundamental topolog-
ical conditions for identifying additive link metrics by using
end-to-end measurements on cycle-free paths. Our contri-
butions are four-fold:
1) We prove that it is generally impossible to identify all
link metrics by using only two monitors, irrespective of the
network topology and the placement of monitors.
2) We establish necessary and suﬃcient conditions for
identifying the metrics of all interior links (links not incident
to any monitor) by using two monitors: the network graph
is (i) 2-edge-connected after removing any interior link and
(ii) 3-vertex-connected after adding a direct link between the
two monitors. These conditions are shown to be veriﬁable
in O(|L|(|V | + |L|)) time, where |V | is the number of nodes
and |L| is the number of links.
3) We transform the above result into a necessary and suf-
ﬁcient condition for identifying all link metrics using κ (κ ≥
3) monitors by embedding the network graph in an extended
graph, with two virtual monitors connected to all the real
monitors. This condition can be veriﬁed in O(|V |+|L|) time.
4) We propose an algorithm to place monitors in an ar-
bitrary network in O(|V | + |L|) time, which guarantees the
identiﬁability of all link metrics by using the minimum num-
ber of monitors. Our evaluations on both randomly-generated
and real topologies show that the proposed algorithm re-
quires a substantially smaller number of monitors than a
baseline solution.
We note that our goal is to characterize identiﬁable sce-
narios for additive link metrics, and the identiﬁcation of
non-additive link metrics (e.g., bit error rates) is beyond
the scope of this paper.
The rest of the paper is organized as follows. Section 2
formulates the problem. Section 3 summarizes our main
Table 1: Notations in Graph Theory
Symbol Meaning
V (G), L(G)
set of nodes/links in graph G
|G|
||G||
degree of graph G:
nodes)
order of graph G:
links)
|G| = |V (G)| (number of
||G|| = |L(G)| (number of
H interior graph (see Deﬁnition 1)
L(v)
set of links incident to node v
G − l
G + l
G − v
Gs + v
′
′
′
G \ G
G ∩ G
G ∪ G
P(v0, vk)
C
delete a link: G − l = (V (G), L(G) \ {l}), where
l ∈ L(G) and “\” is setminus
add a link: G + l = (V (G), L(G) ∪ {l}), where
the end-points of link l are in V (G)
delete a node: G −v = (V (G)\{v}, L(G)\L(v)),
where v ∈ V (G)
add a node: Gs + v = (V (Gs) ∪ {v}, L(Gs) ∪ Lv),
where Gs is a sub-graph of G, v ∈ V (G) \ V (Gs),
and Lv is the set of all links between v and
nodes in V (Gs)
From G, delete all common nodes with G′ and
their incident links
′
= (V (G) ∩ V (G′),
′
= (V (G)∪V (G′), L(G)∪
intersection of graphs: G ∩ G
L(G) ∩ L(G′))
union of graphs: G ∪G
L(G′))
simple path connecting nodes v0 and vk, de-
ﬁned as a special graph with V (P) = {v0, . . . ,
vk} and L(P) = {v0v1, v1v2, . . . , vk−1vk}
cycle:
if (v0, . . . , vk) (k ≥ 2) is a sequence of
nodes on a simple path P, then C = P + vkv0
is a cycle
F a non-separating cycle (see Deﬁnition 4)
mi mi ∈ V (G) is the i-th monitor in G
Wl, WP metric on link l and sum metric on path P
results. Sections 4–5 present identiﬁability conditions for
the case of two monitors, and Section 6 addresses the case
of three or more monitors. Algorithms for testing network
identiﬁability and deploying monitors are presented in Sec-
tion 7. Finally, Section 8 concludes the paper.
2. PROBLEM FORMULATION
2.1 Models and Assumptions
We assume that the network topology is known and model
it as an undirected graph2 G = (V, L), where V and L are
the sets of nodes and links, respectively. Note that graph
G can represent a logical topology where each link in G cor-
responds to a combination of physical links/nodes, e.g., in
an overlay network. Without loss of generality, we assume
G is connected, as diﬀerent connected components have to
be monitored separately. Denote the link incident to nodes
u and v by uv; links uv and vu are assumed to have the
same metric. Certain nodes in V are monitors and can ini-
tiate/collect measurements. We assume that each link in
G has two distinct end-points (i.e., no self-loop), and there
is at most one link connecting a pair of nodes. Last, no
link metrics in G are known prior to taking measurements.
2We use the terms network and graph interchangeably.
l4
l5
l1
m1
l3
l2
l7
m3
l9
l10
m2
l6
l8
l11
Figure 1: Sample network with three monitors: m1,
m2, and m3.
a1
b1
H