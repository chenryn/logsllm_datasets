# 特殊宏定义，用于处理页面底部：完成当前的框/侧边栏（如果处于框/侧边栏模式），然后调用标准的页面底部宏。
.de ^B
.ev 2
.ti 0
.nf
.mk ^t
.if \\n(^b \{\
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
.fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
# DS - 开始显示
.de DS
.RS
.nf
.sp
..
# DE - 结束显示
.de DE
.fi
.RE
.sp
..
# SO - 标准选项列表开始
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 5.5c 11c
.ft B
..
# SE - 标准选项列表结束
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..
# OP - 单个选项完整描述开始
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
# CS - 开始代码示例
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
# CE - 结束代码示例
.de CE
.fi
.RE
..
.de UL
\\$1\l'|0\(ul'\\$2
..
.TH trace 3tcl "" Tcl "Tcl Built-In Commands"
.BS
# 注意: 不要修改以下的.SH NAME行！
.SH NAME
trace - 监视变量访问
.SH SYNOPSIS
\fBtrace \fIoption\fR ?\fIarg arg ...\fR?
.BE
.SH DESCRIPTION
这个命令使得在特定操作被调用时执行 Tcl 命令。目前仅实现了变量跟踪功能。合法的 \fIoption\fR (可以是缩写) 包括:
.TP
\fBtrace variable \fIname ops command\fR
安排 \fIcommand\fR 在变量 \fIname\fR 被以 \fIops \fR指定的方式访问时执行。\fIName\fR 可以引用一个普通变量、数组的一个元素或整个数组(即 \fIname\fR 只需为数组名，无需带索引)。若 \fIname\fR 引用的是整个数组，则当该数组的任一元素被操作时都会调用 \fIcommand\fR 。如果变量不存在，则创建它但不赋值，这样对于 \fBnamespace which\fR 查询可见，但对于 \fBinfo exists\fR 不可见。
.RS
.PP
\fIOps\fR 指定进行的操作类型，可由以下字母中的一个或多个组成:
.TP
\fBr\fR
在读取此变量时调用 \fIcommand\fR。
.TP
\fBw\fR
在写入此变量时调用 \fIcommand\fR。
.TP
\fBu\fR
在删除此变量时调用 \fIcommand\fR。可以通过 \fBunset\fR 命令显式地删除变量，或在过程返回时隐式删除其局部变量。解释器销毁时也会删除变量，但由于没有可用的解释器来执行命令，因此不会触发跟踪。
.PP
当触发跟踪时，向 \fIcommand\fR 添加三个参数，实际执行的命令如下:
.CS
\fIcommand name1 name2 op\fR
.CE
其中 \fIname1\fR 和 \fIname2\fR 给出被访问变量的名字: 如果变量是标量，那么 \fIname1\fR 是变量名而 \fIname2\fR 为空字符串；如果变量是数组元素，那么 \fIname1\fR 是数组名而 \fIname2\fR 是数组中的索引；如果整个数组被删除且跟踪注册在整个数组上而不是单个元素上，那么 \fIname1\fR 是数组名而 \fIname2\fR 为空字符串。注意 \fIname1\fR 和 \fIname2\fR 并不一定与 \fBtrace variable\fR 命令中使用的名字相同: 使用 \fBupvar\fR 命令可以使一个过程在不同名字下引用同一变量。\fIOp\fR 表示对变量进行了哪种操作，它是上面定义的 \fBr\fR, \fBw\fR 或 \fBu\fR 中的一个。
.PP
\fICommand\fR 在与触发跟踪操作的代码相同的上下文中执行: 如果被访问的变量是 Tcl 过程的一部分，那么 \fIcommand\fR 将能够访问到与过程中代码相同的局部变量。这种上下文可能与设置跟踪时的上下文不同。如果 \fIcommand\fR 调用了某个过程(这很常见)，则该过程需要使用 \fBupvar\fR 或 \fBuplevel\fR 来访问被跟踪的变量。此外，请注意 \fIname1\fR 并不一定与设置变量跟踪时所用的名字相同；如果通过 \fBupvar\fR 定义的变量进行访问，可能会出现这种情况。
.PP
对于读和写跟踪，\fIcommand\fR 可以修改变量以影响被跟踪操作的结果。如果 \fIcommand\fR 在读或写跟踪期间修改了变量的值，那么新值将作为跟踪操作的结果返回。除非从 \fIcommand\fR 返回的值是一种错误，在这种情况下跟踪操作将返回与跟踪命令返回的错误消息相同的错误，否则忽略其他返回值(例如，可以使用这种机制实现只读变量)。对于写跟踪，在变量值更改后调用 \fIcommand\fR ；它可以将新值写入变量以覆盖此次写操作中指定的原始值。为了实现只读变量，\fIcommand\fR 必须存储变量的旧值。
.PP
当 \fIcommand\fR 在读或写跟踪期间执行时，变量上的跟踪会暂时禁用。这意味着 \fIcommand\fR 执行的任何读写操作都将直接发生，而不再次调用 \fIcommand\fR (或其他跟踪)。但如果 \fIcommand\fR 删除了变量，则会触发删除跟踪。
.PP
在调用删除跟踪时，变量已经被删除: 它将表现为未定义状态且不再受跟踪。如果因为过程返回而触发了删除，则在返回过程的变量上下文中调用跟踪: 返回过程的栈帧已不存在。在删除跟踪期间不禁止跟踪，因此如果删除跟踪命令建立了新的跟踪并访问了该变量，将会调用新的跟踪。忽略删除跟踪产生的任何错误。
.PP
如果一个变量上有多个跟踪，它们按建立顺序调用，最近建立的优先处理。如果一个跟踪返回错误，则不再对该变量调用进一步的跟踪。如果数组元素和整个数组都设置了跟踪，那么先调用整个数组的跟踪，再调用元素级别的跟踪。
.PP
一旦建立，跟踪将持续有效，直到通过下面描述的 \fBtrace vdelete\fR 命令删除，或者删除了变量，或者删除了解释器为止。删除数组的一个元素将删除该元素上的所有跟踪，但不会删除整个数组的跟踪。
.PP
此命令返回一个空字符串。
.RE
.TP
\fBtrace vdelete \fIname ops command\fR
如果变量 \fIname\fR 上已经设置了由 \fIops\fR 指定的操作和 \fIcommand\fR 指定的命令的跟踪，则删除该跟踪，使其不再被调用。此命令返回一个空字符串。
.TP
\fBtrace vinfo \fIname\fR
返回一个列表，每个在变量 \fIname \fR上设置的当前跟踪对应一个元素。列表中的每个元素本身是一个包含两个元素的列表，分别表示与此跟踪相关的 \fIops\fR 和 \fIcommand\fR 。如果 \fIname\fR 不存在或没有设置跟踪，则结果是一个空字符串。
.SH KEYWORDS
read, variable, write, trace, unset
.SH "中文版维护人"
.B 寒蝉退士
.SH "中文版最新更新"
.B 2001/11/21
.SH "《中国 Linux 论坛 man 手册页翻译计划》:"
.BI http://cmpp.linuxforum.net