## 文件名解析漏洞
> 影响版本:Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7
    location ~ \.php$ {
        include        fastcgi_params;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;
        fastcgi_param  DOCUMENT_ROOT /var/www/html;
    }
> 当nginx匹配到`.php`结尾的文件时就将其当做php文件解析
>
> 当我们请求`test.jpg[0x20][0x00].php`时, 就会将其匹配为php文件, 但是nginx却认为这是jpg文件,
> 将其设置为SCRIPT_FILENAME的值发送给fastcgi, fastcgi根据`SCRIPT_FILENAME`的值进行解析造成漏洞
我们只需上传一个空格结尾的文件(如`1.jpg空格`), 访问1.jpg空格[0x00].php就行
    可以先发写为1.jpgaa.php, 然后再hex格式中修改为20 00
## 文件后缀解析
源文件为`test.jpg`访问时改为`test.jpg/x.php`解析为php(x随意)
    1. 在高版本的php中关闭security.limit_extensions(在php-fpm.conf直接删除)
        一般为security.limit_extensions php只允许.php文件执行, 添加 .jpg 将jpg文件作为php文件执行, 需要重启php-fpm
    2. php.ini中设置cgi.fix_pathinfo=1
        当访问/test.jpg/x.php时 若x.php不存在则向前解析
    修复
    php.ini 中的  cgi.fix_pathinfo=0 访问后就是404
    将/etc/php5/fpm/pool.d/www.conf 添加 security.limit_extensions = .php
## CRLF
http的报文就是`CRLF`分隔的(回车+换行)
若nginx在解析url时将其解码则会造成注入
    错误的配置文件
    location / {
        return 302 https://$host$uri;
    }
详细可参考: [Bottle HTTP 头注入漏洞探究 | 离别歌
(leavesongs.com)](https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html)
[新浪某站CRLF Injection导致的安全问题 | 离别歌
(leavesongs.com)](https://www.leavesongs.com/PENETRATION/Sina-CRLF-Injection.html)
    在请求时加上
    /%0d%0a%0d%0a(%0d%0a==>回车+换行)
## 目录穿越
`alias`为目录配置别名时, 如果没有没有添加`/`
`nginx.conf`修改为
    location /files {  #这里files就没有闭合
        autoindex on;
        alias /home/;
访问`files../`即可造成目录穿越
    修复: 将/files闭合  ==>  /files/
## add_header覆盖
错误配置文件
Nginx配置文件子块（server、location、if）中的`add_header`，将会覆盖父块中的`add_header`添加的HTTP头
    add_header Content-Security-Policy "default-src 'self'";
    add_header X-Frame-Options DENY;
    location = /test1 {
        rewrite ^(.*)$ /xss.html break;
    }
    location = /test2 {
        add_header X-Content-Type-Options nosniff;  #覆盖掉父块中的配置
        rewrite ^(.*)$ /xss.html break;
    }
# IIS
## cve-2017-7269
> iis 6.0 开启webdav, 攻击前记得拍摄快照!!!!!
> exp: [zcgonvh/cve-2017-7269: fixed msf module for cve-2017-7269
> (github.com)](https://github.com/zcgonvh/cve-2017-7269)
直接set rhost然后exploit
直接打是用在iis没有绑定主机时
如果绑定了就需要输入物理路径长度 (如: `c:\inetpub\wwwroot\` 就是19)
修改路径为`c:\inetpub\wwwroot1111111`
使用脚本爆破([Windows-Exploit/IIS6_WebDAV_Scanner at master · admintony/Windows-Exploit (github.com)](https://github.com/admintony/Windows-Exploit/tree/master/IIS6_WebDAV_Scanner)
    set PhysicalPathLength 26
然后即可攻击成功
## PUT漏洞
> 条件 IIS6.0 开启WebDAV和 **来宾用户写权限**
使用PUT方式, 上传txt文件(直接上传asp文件会失败)
然后利用move将txt文件修改为asp, 变为可执行脚本 蚁剑连接
记得在web扩展中开启active server pages
## 短文件名猜测
> windows下为兼容MS-DOS而生成的短文件
>
> 只显示前6个字符, 后面的字符使用~1,~2等等代替, 后缀只显示前3个字符. 并且全部以大写字母显示
>
> 文件名大于9或者后缀大于4才会生成短文件名, 使用`dir /x`查看短文件名
影响版本
> IIS 1.0，Windows NT 3.51
>
> IIS 3.0，Windows NT 4.0 Service Pack 2
>
> IIS 4.0，Windows NT 4.0选项包
>
> IIS 5.0，Windows 2000
>
> IIS 5.1，Windows XP Professional和Windows XP Media Center Edition
>
> IIS 6.0，Windows Server 2003和Windows XP Professional x64 Edition
>
> IIS 7.0，Windows Server 2008和Windows Vista
>
> IIS 7.5，Windows 7（远程启用或没有web.config）
>
> IIS 7.5，Windows 2008（经典管道模式）
>
> IIS使用.Net Framework 4时不受影响
漏洞成因
    使用短文件名访问存在的文件时会返回404, 否则返回400
    如存在aaaaaaaaaa.txt 短文件名为 AAAAAA~1.TXT的文件
    访问http://xxxxx/A*~1.*/.aspx会返回404
    通过逐步增加字符找出文件的文件名
缺点:
    只能找出前6个字符和后缀的三个字符
    只能猜解有短文件名的文件
    不支持中文
    iis和.net都需要满足
漏洞修复
    升级.net到4.0及以上版本
    修改注册表, HKEY\ LOCAL MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem中的 NtfsDisable8dot3 Name Creation值为1,使其不创建短文件名
## 后缀解析漏洞
    cer asa cdx 都会当做asp文件解析
    但是我在windows server 2003 + iis 6.0下只有cer可以
漏洞原因:
​ 当访问不存在文件时返回404, 访问不存在短文件名时返回400
> 版本: iis 6.0
  1. xxx.asp文件夹里面的文件都会以asp解析
  1. `;`截断
        xxx.asp;.txt会以asp文件执行
  1. 遇到php文件时
> iis 7.5
    当iis遇见php后缀文件时, 将其交给php处理, 当php开启cgi.fix_pathinfo时会处理文件, 如同nginx一样
    所以输入test.jpg/.php就会当场php处理
参考: [关于CGI和FastCGI的理解 - 天生帅才 - 博客园
(cnblogs.com)](https://www.cnblogs.com/tssc/p/10255590.html)
[.htaccess利用与Bypass方式总结 - 安全客，安全资讯平台
(anquanke.com)](https://www.anquanke.com/post/id/205098)
[Web中间件漏洞总结之Nginx漏洞 - 先知社区 (aliyun.com)](https://xz.aliyun.com/t/6801)