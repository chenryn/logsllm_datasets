    - Call Return: int.hgfh342 Array
     Location: J34534534/instance/jhgjhj22222 block id: 0 line no: 64
     Method Name: hgfh342
     Return Object ID: 0x210 (528)
     Object Type: int
     Return Value:
      Object:
       high: 0x0 (0)
       low: 0xc122db8 (202517944)
       high: 0x0 (0)
       low: 0x16893000 (378089472)  dds 6fb7bba4  dds 16893000
    16893000 16dc3000  dds 16dc3000  !address 16dc3000
    Usage: 
    Base Address: 16cf9000
    End Address: 17176000
    Region Size: 00200000 ( 2.000 MB)
    State: 00001000 MEM_COMMIT
    Protect: 00000004 PAGE_READWRITE  g
    Breakpoint 1 hit
    eax=16dc3000 ebx=16893000 ecx=00000000 edx=00000000 esi=00000010 edi=00000001
    eip=6d591cc2 esp=0b550ed8 ebp=0b550efc iopl=0 nv up ei ng nz ac pe cy
    cs=0023 ss=002b ds=002b es=002b fs=0053 gs=002b efl=00200297
    Flash!MMgc::alignmentSlop+0x2 [inlined in Flash!MMgc::GCHeap::Partition::AllocBlock+0x72]:
    6d591cc2 8bd7 mov edx,edi
    ...
    0:026> u eip -6
    ...
    6d591cc0 8b03 mov eax,dword ptr [ebx]  r ebx
    ebx=16893000
    6d591cc2 8bd7 mov edx,edi
    6d591cc4 c1e80c shr eax,0Ch
    6d591cc7 23c1 and eax,ecx
    6d591cc9 2bd0 sub edx,eax
    6d591ccb 23d1 and edx,ecx
图63 获取freelists[0]的基址
相关的代码如下。
    GCHeap::HeapBlock* GCHeap::AllocBlock(size_t size, bool& zero, size_t alignment)
    {
      uint32_t startList = GetFreeListIndex(size);
      HeapBlock *freelist = &freelists[startList]; // retrieving heap block from free list
      HeapBlock *decommittedSuitableBlock = NULL;
      ...
图64 GCHeap::AllocBlock函数
经过GetFreeListIndex函数中的一些计算后，此分配函数会从freelists数组中选取相应的堆块，并最终返回包含shellcode代码的页面。
此外，下述的doInitDelay方法实际上是Flash Player中的事件回调函数，当伪造的freelists结构被用到时，就会触发其中的JIT代码。
    public dynamic class Boot extends MovieClip
    {
      ...
      public function doInitDelay(_arg_1:*):void
      {
        Lib.current.removeEventListener(Event.ADDED_TO_STAGE, doInitDelay);
        start();
      }
      public function start():void
      {
        ...
        if (_local_2.stage == null)
        {
          _local_2.addEventListener(Event.ADDED_TO_STAGE, doInitDelay);
          ...
        };
      }