### How to Configure Windows CMD to Run Python Scripts Without Typing `python` Explicitly

To run a Python script by simply typing `script.py` in the Command Prompt (CMD) on Windows, you need to ensure that your system is correctly configured. Hereâ€™s a step-by-step guide to help you achieve this:

1. **Add Python to the PATH Environment Variable:**
   - Ensure that the directory containing `python.exe` (e.g., `C:\Python39\`) is added to the `PATH` environment variable.
   - You can add it by following these steps:
     1. Open the Start Menu and search for "Environment Variables."
     2. Click on "Edit the system environment variables."
     3. In the System Properties window, click on the "Environment Variables" button.
     4. In the Environment Variables window, find the `Path` variable in the "System variables" section and select it.
     5. Click on "Edit."
     6. In the Edit Environment Variable window, click on "New" and add the path to the directory containing `python.exe`.
     7. Click "OK" to close all windows.

2. **Re-associate `.py` Files with the Python Launcher:**
   - Sometimes, even after adding Python to the `PATH`, `.py` files may not be associated correctly with the Python launcher (`py.exe`).
   - To re-associate `.py` files, follow these steps:
     1. Right-click on any `.py` file and select "Properties."
     2. In the Properties window, under the "Opens with" section, click on the "Change" button.
     3. In the "How do you want to open this file?" dialog, click on "More apps."
     4. Scroll down and click on "Look for another app on this PC."
     5. Navigate to the `C:\Windows` directory and select `py.exe`.
     6. Click "Open" to confirm the selection.

3. **Verify the Configuration:**
   - Open a new Command Prompt window.
   - Navigate to the directory containing your Python script.
   - Try running the script by simply typing `script.py`.

### Troubleshooting
If you still encounter issues, such as the `django-admin.py` command not working correctly, consider the following:

- **Check the Script Shebang Line:**
  - Ensure that your script includes a shebang line at the top, which specifies the Python interpreter. For example:
    ```python
    #! python
    ```
  - This line tells the system which interpreter to use when running the script.

- **Use the Full Path to the Python Executable:**
  - If the above steps do not resolve the issue, you can try using the full path to the Python executable in the shebang line. For example:
    ```python
    #! C:\Python39\python.exe
    ```

- **Run the Script Using `py` Command:**
  - Alternatively, you can use the `py` command to run your script. For example:
    ```sh
    py script.py
    ```

By following these steps, you should be able to run your Python scripts directly from the Command Prompt without needing to type `python` or `python3` explicitly.