code on the registration pages of the 15 websites. Then, we
identify the speciﬁc modules for password strength evalua-
tion within their source code (more details are in [2]).
Both online and oﬄine implementations have their advan-
tages. Since a site may update its password checker/meter
at any time, the online implementation could be more up-
to-date and thus is more accurate with respect to that site’s
status quo. However, large-scale online password evaluation
(e.g., a large password dataset) could cause a heavy traﬃc
load to a site’s server. Therefore, in this scenario, oﬄine
evaluation is more appropriate and faster.
Commercial Meters Evaluation. Below, we evaluate
the performance of commercial password meters using Ya-
hoo!, Google, Target, and Bloomberg’s meters as examples.
More evaluation results of the 150 commercial password me-
ters/policy checkers can be found at [2]. The strength evalu-
ation results of the passwords of CSDN, LinkedIn, and Gamigo
by the four example meters are shown in Fig.2 (a)-(d), re-
spectively. To conduct a comparative study, we also use
these four commercial meters to evaluate the cracked pass-
words of CSDN by Duduniu-trained OMEN, of LinkedIn by
Rockyou-trained VCT, and of Gamigo by Rockyou-trained
VCT. The results are shown in Fig.2 (e)-(h), respectively.
We analyze Fig.2 as follows.
(1) From Fig.2 (a)-(d), generally, diﬀerent password me-
ters are not consistent with each other, which agrees with the
observations in [24]. Google’s meter labels most passwords
of CSDN, LinkedIn, and Gamigo as strong. Particularly, un-
der Google’s meter, CSDN has more strong passwords than
LinkedIn and Gamigo, which contradicts the cracking results
in Table 5. Target’s meter labels most passwords as weak or
invalid, which is very diﬀerent from that of the other three
meters. Yahoo! and Bloomberg’s meters have similar clas-
siﬁcation results, and most passwords of the three example
datasets are labeled as strong/good.
(2) From Fig.2 (a) and (e), we see that most cracked pass-
words of CSDN are labeled as weak. However, there are still
a considerable number of cracked passwords of CSDN that
are labeled as strong. Furthermore, more than 62% of the
cracked passwords of LinkedIn and Gamigo are labeled as
strong by Yahoo!’s meter. A similar situation exists with
Bloomberg’s meter, which can be seen from Fig.2 (d) and
(h). Therefore, to some extent, these two meters may pro-
vide incorrect feedback to users during the registration pro-
cess.
(3) From Fig.2 (b) and (f), we see that about 86.8%,
33.6%, and 36.3% cracked passwords of CSDN, LinkedIn,
and Gamigo are labeled as strong by Google’s meter, respec-
tively. Therefore, the helpfulness of Google’s meter is very
limited in guiding users to choose secure passwords in prac-
tice. Rather, the feedback of Google’s meter may lead to
vulnerable passwords.
(4) From Fig.2 (c) and (g), we see that Target’s meter can
properly label the cracked passwords of the three datasets.
Only a very small number of cracked passwords are labeled
as strong or extra strong. Therefore, compared to the other
three commercial meters, Target’s meter is more eﬀective to
guide users to choose secure passwords.
code of the registration pages.
6.
INSIGHTS AND DISCUSSION
As discussed in Section 4, no cracking algorithm is optimal
in all scenarios. Therefore, to improve the performance of
existing cracking algorithms, an intuitive idea is to design an
eﬀective Hybrid Password Cracking (HPC) algorithm that
combines the advantages of existing schemes, e.g., PCFG-
based schemes, Markov-based schemes. To understand the
feasibility of this proposal, we conduct further analysis based
on the results of diﬀerent cracking algorithms in Table 5.
First, we study the following two questions:
is it rea-
sonable and possible to design an improved HPC algorithm?
and if it is reasonable, how much improvement can be achieved?
To answer these two questions, we deﬁne the Relative Im-
provement Ratio (RIR) of two cracking algorithms. Let X
and Y be two sets of cracked passwords of two algorithms
A1 and A2 under the same setting, e.g., the two sets of
cracked 7k7k passwords by Renren-trained PCFG and Ren-
←−−−
ren-trained OMEN. The RIR of A1 given by A2, denoted by
. Therefore, RIR indicates
A1A2, is deﬁned as
the potential improvement of an algorithm if it incorporates
the advantage of another algorithm.
←−−−
A1A2 =
|Y \X|
|X|
In Table 10, we demonstrate the RIR values of PCFG (P),
VCT (V), 3g (3), and OMEN (O) under example scenarios
based on the cracking results in Table 5, e.g., .77 (in red)
is the RIR of Tianya-trained PCFG given the advantage of
Tianya-trained 3g when cracking 7k7k, and 4.35 (in blue)
is the RIR of Tianya-trained VCT given the advantage of
Tianya-trained OMEN when cracking 7k7k. From Table 10,
we have the following observations.
(1) Every algorithm has potential improvement given the
advantage of another algorithm. For instance, when crack-
ing LinkedIn, the RIRs of Rockyou-based PCFG and Rock-
you-based OMEN given to each other are 54% and 56%,
respectively. Therefore, the proposal of designing HPC al-
gorithms is reasonable and promising.
(2) The RIRs are diﬀerent under diﬀerent scenarios. For
instance, when cracking 7k7k, the RIRs of Renren-trained
VCT given by Renren-trained 3g and Renren-trained OMEN
are 66% and 435%, respectively, which implies VCT could
beneﬁt more from OMEN than from 3g. Therefore, it is
important to consider which algorithms should be combined
in designing HPC schemes.
(3) The RIRs of two algorithms are asymmetric. For in-
stance, for Rockyou-trained VCT and Rockyou-trained OMEN,
when cracking CSDN, their RIRs are 330% and 28% respec-
tively, while when cracking LinkedIn, their RIRs given to
each other are 53% and 147% respectively.
According to our observations, it is reasonable and promis-
ing to improve existing password cracking algorithms by de-
signing HPC algorithms.
Limitations. The limitations of this paper are as fol-
lows. First, due to the space limitation, we do not include
all the evaluation results in the paper but we put them on
the project website [2]. Second, when evaluating password
cracking research, we focus on large-scale oﬄine attacks. We
do not consider other forms of attacks, e.g., phishing attacks.
7. CONCLUSION
In this paper, we propose and implement PARS, an open-
source and modular password analysis and research system
which provides a uniform, comprehensive and scalable re-
search platform for password security. In addition, we pro-
(a) Yahoo! meter
(b) Google meter
(c) Target meter
(d) Bloomberg meter
(e) Yahoo! meter (cracked)
(f) Google meter (cracked)
(g) Target meter (cracked)
(h) Bloomberg meter (cracked)
Figure 2: Commercial meters evaluation.
←−
3V
Table 10: RIR analysis.
←−−
←−−
P O
OP
←−
CSDN
V 3
←−−
V O
←−−
OV
←−
3V
←−
P 3
←−
3P
←−−
P O
←−
P 3
Training
←−
P 3
←−
3P
←−−
OP
←−−
P O
←−
7k7k
V 3
←−−
←−
OV
Data
3P
Renren .77 .45 4.63 .03 .66 .56 4.35 .13 .07 6.1
2 .30 .05 8.6 1.6 .56 .10 3.6 .76 .48 .08 4.8 .80 .99 .17 2.6 .26 1.4 .14 3.2 .30 2.1
Tianya .79 .59 5.5 .04 .64 .76 4.75 .15 .09 6.55 2 .28 .05 11.6 1.3 .73 .24 2.6 1.6 .34 .15 4.3 1.1 .80 .18 3.3 .25 2.4 .18 3.1 .26 2.5
Rockyou 1.9 .23 19 .02 1.57 .28
16 .04 .13 5.5 2.7 .25 .15 4.7 3.3 .28 .24 2.6 1.5 .37 .23 2.5 1.7 .51 .20 2.5 .54 .56 .13 3.9 .53 1.5
.09 .69 1.03 3.17 .29 .06 15 .70 1.1 .07 12.1 .96 1 .10 7.3 .32 2.05 .10 7.02 .40 2.3 .06 11 .22 2.1 .04 16 .23 3.8
Gamigo 1.4 .59 6
←−−
←−
LinkedIn
V 3
OP
←−−
←−
Duduniu
OP
V 3
←−−
V O
←−−
OV
←−−
V O
←−−
V O
←−−
OV
←−
P 3
←−
3P
←−−
P O
←−
3V
←−
3V
pose and implement RIR, which sheds light on a future
research topic of designing hybrid password cracking algo-
rithms. Using PARS, researchers can conveniently conduct
research and password security analysis, respectively, in a
comprehensive and comparable way.
8. REFERENCES
[1] J. Bonneau, C. Herley, P. C. Oorschot, and F. Stajano. The
quest to replace passwords: A framework for comparative
evaluation of web authentication schemes. S&P, 2012.
[2] The PARS Project. ******.
[3] Z. Li, W. Han, and W. Xu. A large-scale empirical analysis
on chinese web passwords. Usenix, Securit.
[4] J. Bonneau. The science of guessing: Analyzing an
anonymized corpus of 70 million passwords. S&P, 2012.
[5] S. Houshmand and S. Aggarwal. Building better passwords
using probabilistic techniques. ACSAC, 2012.
[6] B. Ur, P. G. Kelley, S. Komanduri, J. Lee, M. Maass, M. L.
Mazurek, T. Passaro, R. Shay, T. Vidas, L. Bauer,
N. Christin, and L. F. Cranor. How does your password
measure up? the eﬀect of strength meters on password
creation. USENIX, 2012.
[7] C. Castelluccia, M. D¨urmuth, and D. Perito. Adaptive
passwords-strength meters from markov models. NDSS,
2012.
[8] M. Weir, S. Aggarwal, M. Collins, and H. Stern. Testing
metrics for password creation policies by attacking large
sets of revealed passwords. CCS, 2010.
[9] P. G. Kelley, S. Komanduri, M. L. Mazurek, R. Shay,
T. Vidas, L. Bauer, N. Christin, L. F. Cranor, and
J. L´opez. Guess again (and again and again): Measuring
password strength by simulating password-cracking
algorithms. S&P, 2012.
[10] J. Ma, W. Yang, M. Luo, and N. Li. A study of probilistic
password models. S&P, 2014.
[11] W. E. Burr, D. F. Dodson, and W. T. Polk. Electronic
authentication guideline. NIST, 2006.
[12] A. Das, J. Bonneau, M. Caesar, N. Borisov, and X. Wang.
The tangled web of password reuse. NDSS, 2014.
[13] M. D¨urmuth, A. Chaabane, D. Perito, and C. Castelluccia.
When privacy meets security: Leveraging personal
information for password cracking. CoRR abs/1304.6584,
2013.
[14] R. Veras, C. Collins, and J. Thorpe. On the semantic
patterns of passwords and their security impact. NDSS,
2014.
[15] M. Dell’ Amico, P. Michiardi, and Y. Roudier. Password
strength: An empirical analysis. Infocom, 2010.
[16] A. Narayanan and V. Shmatikov. Fast dictionary attacks
on passwords using time-space tradeoﬀ. CCS, 2005.
[17] M. Weir, S. Aggarwal, B. Medeiros, and B. Glodek.
Password cracking using probabilistic context-free
grammars. S&P, 2009.
[18] Y. Zhang, F. Monrose, and M. K. Reiter. The security of
modern password expiration: An algorithmic framework
and empirical analysis. CCS, 2010.
[19] John the Ripper-bleeding jumbo.
https://github.com/magnumripper/johntheripper.
[20] M. L. Mazurek, S. Komanduri, T. Vidas, L. Bauer,
N. Christin, L. F. Cranor, P. G. Kelley, R. Shay, and B. Ur.
Measuring password guessability for an entire university.
CCS, 2013.
[21] R. Shay, S. Komanduri, P. G. Kelley, P. G. Leon, M. L.
Mazurek, L. Bauer, N. Christin, and L. F. Crano.
Encountering stronger password requirements: User
attitudes and behaviors. SOUPS, 2010.
[22] S. Komanduri, R.Shay, L. F. Cranor, C. Herley, and
S. Schechte. Telepathwords: Preventing weak passwords by
reading users’ minds. USENIX, 2014.
[23] A. Forget, S. Chiasson, P. C. V. Oorschot, and R. Biddle.
Improving text passwords through persuasion. SOUPS,
2008.
[24] X. C. Carnavalet and M. Mannan. From very weak to very
strong: Analyzing password-strength meters. NDSS, 2014.
0.037120.503970.453440.005470.224990.510270.263987.655E-40.121490.698420.170440.00966Very StrongStrongWeakToo Short0.00.10.20.30.40.50.60.70.80.9Password Strength Distribution CSDN LinkedIn Gamigo0.935790.031380.00790.003480.021450.67330.056240.023170.008340.238960.805530.040170.015870.0060.13242StrongGoodFairWeakToo short0.00.20.40.60.81.01.2Password Strength Distribution CSDN LinkedIn Gamigo0.001860.006660.008960.527750.454770.001250.026630.077590.486950.407594.48E-40.009310.049810.696650.24378Extra StrongStrongGoodWeakInvalid0.00.10.20.30.40.50.60.70.80.9Password Strength Distribution CSDN LinkedIn Gamigo0.014680.520830.458990.005490.057830.650030.291387.67E-45.555E-40.791020.198760.00966StrongGoodWeakToo Short0.00.10.20.30.40.50.60.70.80.91.0Password Strength Distribution CSDN LinkedIn Gamigo5.65928E-40.221720.763020.01470.042920.621030.333810.002230.02530.625250.309630.03982Very StrongStrongWeakToo Short0.00.10.20.30.40.50.60.70.80.91.0Password Strength Distribution CSDN LinkedIn Gamigo0.867540.051590.014740.005520.060610.33630.106480.049230.019680.488320.362850.122220.051540.021490.44191StrongGoodFairWeakToo short0.00.20.40.60.81.0Password Strength Distribution CSDN LinkedIn Gamigo1.81387E-69.79491E-50.22080.77911.08943E-50.002440.013930.359060.624561.3948E-50.002290.00960.420720.56737Extra StrongStrongGoodWeakInvalid0.00.10.20.30.40.50.60.70.80.91.0Password Strength Distribution CSDN LinkedIn Gamigo7.61826E-50.222070.763150.01470.00650.648670.34260.002232.00851E-40.642210.317770.03982StrongGoodWeakToo Short0.00.10.20.30.40.50.60.70.80.91.0Password Strength Distribution CSDN LinkedIn Gamigo