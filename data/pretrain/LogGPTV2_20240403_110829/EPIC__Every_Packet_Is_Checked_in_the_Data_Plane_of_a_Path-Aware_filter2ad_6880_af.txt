tion and, with the ICING extension, achieves source authenti-
cation and path validation through its “proofs of provenance”.
EPIC can be used to replace these proofs to signiﬁcantly re-
duce both computation and communication overhead while
only slightly weakening security properties. The “bindings”
in Platypus already implement a system similar to EPIC L1;
they could, however, easily be augmented with source authen-
tication and path validation with EPIC L2–3.
Incremental Deployment The (incremental) deployment
of a new Internet architecture is very challenging but is facili-
tated by the reuse of existing intra-domain infrastructure and
protocols. An extensive discussion of (incremental) deploy-
ment is provided for the SCION architecture [37, Chapter 10].
In turn, the incremental deployment of EPIC on an exist-
ing path-aware architecture—e.g., as a premium product for
customers requiring stronger security properties such as the ﬁ-
nancial and healthcare sectors—is beneﬁted precisely by their
path awareness: EPIC only requires support by on-path ASes
and can thus be supported on some paths without requiring
global coordination. An upgraded end host can then favor
these paths, providing beneﬁts to early adopters.
Timestamps and Time Synchronization The path times-
tamp TSpath encodes Unix time with second-level precision;
both the expiration time of hop ﬁelds (tsexp) and the packet
timestamp introduced in EPIC (tspkt) are relative to TSpath.
The length of the tsexp ﬁeld determines a maximum lifetime
for hop ﬁelds. As a path expires when one of its hop ﬁelds
expires, the packet timestamp offset tspkt only needs to cover
the period between creation and expiration of a beacon. For
instance, in SCION, this period is at most one day [37, §15.1].
An 8 B ﬁeld then corresponds to a granularity of ∼5fs. This
enables end hosts to send 2· 1014 packets with unique times-
tamps per second, which is sufﬁcient for any practical applica-
tion. We can consequently use the packet origin, i.e., the triple
of source, path timestamp, and packet timestamp deﬁned in
Eq. (2), to uniquely identify all packets in the network.
The timestamps serve multiple purposes in EPIC: they
(i) allow routers to drop packets that are too old or use ex-
pired paths, (ii) uniquely identify packets, and (iii) ensure
that the replay-suppression system only needs to track re-
cent packets. For the ﬁrst purpose, a coarse global time
synchronization providing a precision of multiple seconds
is sufﬁcient. The second purpose does not require time syn-
chronization at all, as packets are uniquely identiﬁed based on
the packet origin, which also includes the source. The third
purpose has been shown to work based on per-AS sequence
numbers and therefore only requires relatively precise time
synchronization within an AS [29]. The higher-order bits of
the packet timestamp can serve as sequence numbers in this
replay-suppression system.
Key Distribution The use of DRKeys in EPIC L2–3 cre-
ates potential issues of circular dependencies: how is it possi-
ble to exchange DRKeys when they themselves are required
for sending packets? In a steady state, this is unproblematic as
ASes can proactively exchange new AS-level keys before the
current keys expire using EPIC L2–3 packets. For an initial
key exchange, which only happens very infrequently, we pro-
pose to support EPIC L1 in addition, such that key requests
can be sent over this lower-level protocol. Although EPIC L1
has lower security guarantees and may be susceptible to DoS
attacks, these issues are mitigated by the fact that only a single
request and response are needed for fetching a key. Even in
a persistent, powerful DoS attack, such an exchange would
succeed eventually.
Conﬁrmation Packets in EPIC L3 In EPIC L3, the con-
ﬁrmation message that allows the source to validate the path
of its packets is sent as an EPIC L2 packet. This is necessary
as each conﬁrmation message would otherwise trigger yet
another conﬁrmation and consequently cause an inﬁnite se-
quence of such conﬁrmations. Using EPIC L2 means that the
path of the original packet but not the conﬁrmation message
can be validated; all other security properties are retained (see
also Table 2). Even in case a malicious on-path AS is able to
modify the path of the conﬁrmation message without being
detected, this does not deteriorate the security properties of
the original packet.
There are a number of possible optimizations for the conﬁr-
mation message similar to acknowledgments in TCP: Instead
of directly sending conﬁrmation message for every received
packet, the receiver can batch several conﬁrmation messages
and send them in a single packet. Conﬁrmation messages
can also be “piggy-backed” on normal data packets sent from
the receiver to the source. Finally, instead of sending all
HVFs, only a hash of them can be returned to the source and
validated against the stored values.
554    29th USENIX Security Symposium
USENIX Association
Failure Scenarios As the EPIC protocols depend on sev-
eral additional systems, a failure of any of these systems could
potentially break connectivity. Most failure scenarios are com-
parable to similar issues in today’s Internet: Failures of path
or key servers are similar to failures of DNS servers today
and can be prevented with similar techniques (e.g., replica-
tion, access control). Concerning potential misconﬁgurations,
EPIC may actually increase the networks resilience as some
concepts of new Internet architectures such as SCION’s isola-
tion domains ensure that the effects of misconﬁgurations are
locally conﬁned [37].
The most notable additional prerequisite of EPIC is time
synchronization; it is possible that (i) a host, (ii) some router
or server in an AS, or (iii) a complete AS is unsynchronized
with the Internet. The ﬁrst case can be handled by the host’s
AS replying with a corresponding control message triggering
a re-synchronization. Cases (ii) and (iii) can be detected
through increased packet-drop rates and can thus trigger a
re-synchronization within the AS or with its neighbors. All
cases may cause brief outages but can be resolved within a
short time period (one second or less in most cases).
Path Validation for Intermediate Routers Path valida-
tion is primarily interesting to the end points. Despite this,
ICING and OPT allow not only the source and destination
to validate the path of a packet, but also enable intermediate
routers to validate the portion of the path that has already
been traversed. The authors of ICING and OPT provide little
motivation to provide path validation for routers, and since
we are not aware of any important use cases of this feature we
have omitted it from our design criteria of EPIC L1–3. How-
ever, for the sake of completeness we describe an extension
of EPIC L3 in Appendix B to also satisfy this property.
8 Related Work
Over the past 15 years, much research was conducted on path-
aware Internet architectures and routing schemes including
Platypus [38,39], PoMo [9], Pathlet Routing [22], NIRA [46],
NEBULA [3], and SCION [37, 47]. Many of these systems
recognized the need to ﬁnd a balance of control between end
hosts and ASes. This is why PoMo includes a “motivation”
ﬁeld containing a proof to routers that either the sender or
receiver is a paying customer [9], NEBULA requires a “proof
of consent” for the complete path of traversed ASes [3, 36],
and SCION secures the authorization of its hop ﬁelds using
MACs [37]. These solutions correspond to EPIC L0 in terms
of the path authorization properties achieved. NIRA and Path-
let Routing obtain similar properties by restricting allowed
paths (NIRA) and keeping state in routers (NIRA and Pathlet
Routing) [22, 46]. Platypus uses a system similar to Level 1
presented in §4.2 where each network capability is secured
by a “binding”, but it does not address the issue of chaining
multiple hops to paths [38, 39].
In addition, since PFRI (integrated into PoMo) discussed
a high-level outline for a path-validation system via an “ac-
countability” ﬁeld in packets [15], multiple path-validation
schemes have been proposed. ICING [36] is integrated into
the NEBULA architecture and provides path validation us-
ing a validation ﬁeld for each hop [36]. It uses aggregate
MACs [27] in order to limit the bandwidth overhead but still
requires each router to perform one symmetric cryptographic
computation for each other router on the path (and, if keys are
not cached, an additional asymmetric Difﬁe–Hellman com-
putation), which makes it very expensive. Subsequent pro-
posals try to reduce the complexity through different means:
OPT reduces the required cryptographic computations to a
constant number by sacriﬁcing some guarantees for inter-
mediate routers, yet it still has a high communication over-
head [28, 37]. OSV tries to create a more efﬁcient system by
replacing cryptographic primitives by orthogonal sequences
based on Hadamard matrices [12, 13]. Finally, PPV reduces
both computation and communication overhead by only prob-
abilistically validating a single link for each packet [45].
9 Conclusion
Several path-aware Internet architectures proposed in recent
years promise to improve the security and efﬁciency of the
Internet by providing path control to end hosts. However,
this shift of control requires mechanisms to protect the rout-
ing policies of ASes from malicious end hosts on the one
hand, and raises the challenge of verifying that the path di-
rectives were followed by ASes on the other hand. Previous
systems for both path authorization and path validation faced
a dilemma between security and efﬁciency in terms of com-
munication overhead.
The highly efﬁcient EPIC protocols proposed in this pa-
per resolve this dilemma, and furthermore enable all on-path
routers and the destination to authenticate the source of a
packet. Thus, by ensuring that the source and path of every
packet is checked efﬁciently at the network layer, EPIC en-
ables a wide range of additional in-network security systems
like packet ﬁltering for DoS-defense systems and provides a
secure foundation for the data plane of a future Internet.
Acknowledgments
We would like to thank Y.-C. Hu, who provided important
early feedback and suggestions; B. Rothenberger for support
with the implementation; K. Paterson, who improved our
understanding of cryptographic primitives; and S. Hitz and
S. Monroy for discussions about the practical aspects of our
protocols. We are grateful to the ﬁve anonymous reviewers
for their very helpful feedback on the manuscript, and our
shepherd, B. Reaves, for his guidance during the preparation
of the ﬁnal version of the paper. We gratefully acknowledge
ﬁnancial support from ETH Zurich and from the Zurich In-
formation Security and Privacy Center (ZISC).
USENIX Association
29th USENIX Security Symposium    555
References
[1] ALMA’AITAH, A., AND ABID, Z.-E. Transistor level optimization
of sub-pipelined AES design in CMOS 65nm. In Proceedings of the
International Conference on Microelectronics (ICM) (2011), IEEE.
[2] AMINI, L., SHAIKH, A., AND SCHULZRINNE, H. Issues with infer-
ring Internet topological attributes. Computer Communications 27, 6
(2004).
[3] ANDERSON, T., BIRMAN, K., BROBERG, R., CAESAR, M., COMER,
D., COTTON, C., FREEDMAN, M. J., HAEBERLEN, A., IVES, Z. G.,
KRISHNAMURTHY, A., LEHR, W., LOO, B. T., MAZIÈRES, D., NI-
COLOSI, A., SMITH, J. M., STOICA, I., VAN RENESSE, R., WALFISH,
M., WEATHERSPOON, H., AND YOO, C. S. The NEBULA future
Internet architecture. In The Future Internet. Springer, 2013.
[4] AUGUSTIN, B., CUVELLIER, X., ORGOGOZO, B., VIGER, F., FRIED-
MAN, T., LATAPY, M., MAGNIEN, C., AND TEIXEIRA, R. Avoiding
traceroute anomalies with Paris traceroute. In Proceedings of the ACM
SIGCOMM conference on Internet measurement (2006).
[5] BASESCU, C., LIN, Y.-H., ZHANG, H., AND PERRIG, A. High-speed
inter-domain fault localization. In Proceedings of the IEEE Symposium
on Security and Privacy (2016).
[6] BASESCU, C., REISCHUK, R. M., SZALACHOWSKI, P., PERRIG,
A., ZHANG, Y., HSIAO, H.-C., KUBOTA, A., AND URAKAWA, J.
SIBRA: Scalable Internet bandwidth reservation architecture.
In
Proceedings of the Symposium on Network and Distributed System
Security (NDSS) (2016).
[7] BELLARE, M., KILIAN, J., AND ROGAWAY, P. The security of
the cipher block chaining message authentication code. Journal of
Computer and System Sciences 61, 3 (2000).
[8] BENZEKKI, K., EL FERGOUGUI, A., AND ELBELRHITI ELALAOUI,
A. Software-deﬁned networking (SDN): a survey. Security and
Communication Networks 9, 18 (2016).
[9] BHATTACHARJEE, B., CALVERT, K., GRIFFIOEN, J., SPRING, N.,
AND STERBENZ, J. P. G. Postmodern internetwork architecture. NSF
Nets FIND Initiative (2006).
[10] BIRGE-LEE, H., SUN, Y., EDMUNDSON, A., REXFORD, J., AND
MITTAL, P. Bamboozling certiﬁcate authorities with BGP. In Pro-
ceedings of the USENIX Security Symposium (2018).
[11] BU, K., YANG, Y., LAIRD, A., LUO, J., LI, Y., AND REN, K.
arXiv preprint
What’s (not) validating network paths: A survey.
arXiv:1804.03385 (2018).
[12] CAI, H., AND WOLF, T. Source authentication and path validation
In Proceedings of the IEEE
with orthogonal network capabilities.
Conference on Computer Communications Workshops (INFOCOM
WKSHPS) (2015).
[13] CAI, H., AND WOLF, T. Source authentication and path validation
In Proceedings of the In-
in networks using orthogonal sequences.
ternational Conference on Computer Communication and Networks
(ICCCN) (2016).
[14] CALOMEL. AES-NI SSL performance: a study of AES-NI accel-
eration using LibreSSL, OpenSSL. https://calomel.org/aesni_
ssl_performance.html, 2018.
[15] CALVERT, K. L., GRIFFIOEN, J., AND POUTIEVSKI, L. Separat-
ing routing and forwarding: A clean-slate network layer design. In
Proceedings of the International Conference on Broadband Communi-
cations, Networks and Systems (BROADNETS) (2007).
[16] DARPA. Internet protocol. RFC 791, 1981.
[17] DOLEV, D., AND YAO, A. On the security of public key protocols.
IEEE Transactions on Information Theory 29, 2 (1983).
[18] DPDK PROJECT. Data Plane Development Kit. https://dpdk.org.
[19] ECRYPT. eBATS: ECRYPT benchmarking of asymmetric systems.
https://bench.cr.yp.to/results-dh.html, 2019.
[20] EMMERICH, P., RAUMER, D., WOHLFART, F., AND CARLE, G. As-
sessing soft-and hardware bottlenecks in PC-based packet forwarding
systems. ICN (2015).
[21] GAO, L., AND REXFORD, J. Stable Internet routing without global
coordination. IEEE/ACM Transactions on Networking (2001).
[22] GODFREY, P. B., GANICHEV, I., SHENKER, S., AND STOICA, I.
Pathlet routing. In Proceedings of ACM SIGCOMM (2009).
[23] GUERON, S. Intel® advanced encryption standard (AES) new instruc-
tions set. Intel Corporation (2010).
[24] HUFFAKER, B., FOMENKOV, M., PLUMMER, D. J., MOORE, D.,
AND CLAFFY, K. Distance metrics in the Internet. In Proceedings of
the IEEE International Telecommunications Symposium (ITS) (2002).
[25] IWATA, T., SONG, J., LEE, J., AND POOVENDRAN, R. The AES-
CMAC Algorithm. RFC 4493, 2006.
[26] KANG, M. S., LEE, S. B., AND GLIGOR, V. D. The Crossﬁre attack.
In IEEE Symposium on Security and Privacy (2013).
[27] KATZ, J., AND LINDELL, A. Y. Aggregate message authentication
codes. In Topics in Cryptology – CT-RSA. Springer, 2008.
[28] KIM, T. H.-J., BASESCU, C., JIA, L., LEE, S. B., HU, Y.-C., AND
PERRIG, A. Lightweight source authentication and path validation. In
Proceedings of ACM SIGCOMM (2014).
[29] LEE, T., PAPPAS, C., PERRIG, A., GLIGOR, V., AND HU, Y.-C.
In Proceedings of the
The case for in-network replay suppression.
ACM Asia Conference on Computer and Communications Security
(ASIACCS) (2017).
[30] LEPINSKI, M., AND KENT, S. An infrastructure to support secure
Internet routing. RFC 6480, 2012.
[31] LIU, X., LI, A., YANG, X., AND WETHERALL, D. Passport: secure
and adoptable source authentication. In Proceedings of the USENIX
Symposium on Networked Systems Design and Implementation (2008).
[32] LOWE, G. A hierarchy of authentication speciﬁcation. In Computer
Security Foundations Workshop (CSFW) (1997).
[33] MAGONI, D., AND PANSIOT, J.-J. Internet topology modeler based
on map sampling. In Proceedings of the International Symposium on
Computers and Communications (ISCC) (2002).
[34] MAIGRON, P.
Autonomous
system number statistics.
https://www-public.imtbs-tsp.eu/~maigron/RIR_Stats/
RIR_Delegations/World/ASN-ByNb.html.
[35] MCCAULEY, J., HARCHOL, Y., PANDA, A., RAGHAVAN, B., AND
SHENKER, S. Enabling a permanent revolution in Internet architecture.
In Proceedings of ACM SIGCOMM (New York, NY, USA, 2019).
[36] NAOUS, J., WALFISH, M., NICOLOSI, A., MAZIERES, D., MILLER,
M., AND SEEHRA, A. Verifying and enforcing network paths with
ICING. In Proceedings of the ACM International Conference on emerg-
ing Networking EXperiments and Technologies (CoNEXT) (2011).
[37] PERRIG, A., SZALACHOWSKI, P., REISCHUK, R. M., AND CHUAT,
L.
Springer, 2017.
ISBN 978-3-319-67080-5, https://www.scion-architecture.
net/pdf/SCION-book.pdf.
SCION: A Secure Internet Architecture.
[38] RAGHAVAN, B., AND SNOEREN, A. C. A system for authenticated
policy-compliant routing. ACM SIGCOMM Computer Communication
Review 34, 4 (2004).
[39] RAGHAVAN, B., VERKAIK, P., AND SNOEREN, A. C. Secure and
policy-compliant source routing. IEEE/ACM Transactions on Network-
ing 17, 3 (2009).
[40] ROTHENBERGER, B., ROOS, D., LEGNER, M., AND PERRIG, A.
PISKES: Pragmatic Internet-scale key-establishment system. In Pro-
ceedings of the ACM Asia Conference on Computer and Communica-
tions Security (ASIACCS) (2020).
556    29th USENIX Security Symposium
USENIX Association
[41] ROTT, J. Intel advanced encryption standard instructions (AES-NI).
Technical Report, Intel (2010).
[42] STUDER, A., AND PERRIG, A. The Coremelt attack. In Proceed-
ings of the European Symposium on Research in Computer Security
(ESORICS) (2009).
[43] SUN, Y., EDMUNDSON, A., VANBEVER, L., LI, O., REXFORD, J.,
CHIANG, M., AND MITTAL, P. RAPTOR: Routing attacks on privacy
in Tor. In Proceedings of USENIX Security Symposium (2015).
[44] WANG, C., LI, Z., HUANG, X., AND ZHANG, P. Inferring the average
AS path length of the Internet. In Proceedings of the IEEE International
Conference on Network Infrastructure and Digital Content (IC-NIDC)
(2016).
[45] WU, B., XU, K., LI, Q., LIU, Z., HU, Y.-C., REED, M. J., SHEN,
M., AND YANG, F. Enabling efﬁcient source and path veriﬁcation
via probabilistic packet marking. In Proceedings of the IEEE/ACM
International Symposium on Quality of Service (IWQoS) (2018).
[46] YANG, X., CLARK, D., AND BERGER, A. W. NIRA: A new inter-
domain routing architecture. IEEE/ACM Transactions on Networking
(2007).
[47] ZHANG, X., HSIAO, H.-C., HASKER, G., CHAN, H., PERRIG, A.,
AND ANDERSEN, D. SCION: Scalability, control, and isolation on
next-generation networks. In Proceedings of the IEEE Symposium on
Security and Privacy (2011).
A Additional Evaluation Results
Processing-Time Analysis Figure 4 shows a ﬁne-grained
processing-time analysis of the router for EPIC L3, highlight-
ing the overhead caused by cryptographic operations. The
times include necessary copying and padding of the input to
the AES block cipher.
Figure 5 shows the processing time of an EPIC L3 router
for different path lengths and EPIC payload sizes. As ex-
pected, the processing time is independent of the path length
and payload size and shows low deviation of only few percent.