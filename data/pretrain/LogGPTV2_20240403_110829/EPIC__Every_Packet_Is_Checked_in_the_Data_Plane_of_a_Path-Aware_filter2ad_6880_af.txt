### Source Authentication and Path Validation in EPIC

EPIC, with the ICING extension, achieves source authentication and path validation through its "proofs of provenance." EPIC can replace these proofs to significantly reduce both computation and communication overhead, while only slightly weakening security properties. The "bindings" in Platypus already implement a system similar to EPIC L1; however, they could be easily augmented with source authentication and path validation using EPIC L2–3.

#### Incremental Deployment

The incremental deployment of a new Internet architecture is very challenging but can be facilitated by reusing existing intra-domain infrastructure and protocols. An extensive discussion of incremental deployment is provided for the SCION architecture [37, Chapter 10]. In turn, the incremental deployment of EPIC on an existing path-aware architecture—e.g., as a premium product for customers requiring stronger security properties, such as the financial and healthcare sectors—is benefited precisely by their path awareness: EPIC only requires support by on-path ASes and can thus be supported on some paths without requiring global coordination. Upgraded end hosts can then favor these paths, providing benefits to early adopters.

#### Timestamps and Time Synchronization

The path timestamp `TSpath` encodes Unix time with second-level precision. Both the expiration time of hop fields (`tsexp`) and the packet timestamp introduced in EPIC (`tspkt`) are relative to `TSpath`. The length of the `tsexp` field determines a maximum lifetime for hop fields. As a path expires when one of its hop fields expires, the packet timestamp offset `tspkt` only needs to cover the period between the creation and expiration of a beacon. For instance, in SCION, this period is at most one day [37, §15.1]. An 8-byte field then corresponds to a granularity of approximately 5 fs. This enables end hosts to send \(2 \times 10^{14}\) packets with unique timestamps per second, which is sufficient for any practical application. Consequently, we can use the packet origin, i.e., the triple of source, path timestamp, and packet timestamp defined in Eq. (2), to uniquely identify all packets in the network.

Timestamps serve multiple purposes in EPIC:
1. They allow routers to drop packets that are too old or use expired paths.
2. They uniquely identify packets.
3. They ensure that the replay-suppression system only needs to track recent packets.

For the first purpose, a coarse global time synchronization providing a precision of multiple seconds is sufficient. The second purpose does not require time synchronization at all, as packets are uniquely identified based on the packet origin, which also includes the source. The third purpose has been shown to work based on per-AS sequence numbers and therefore only requires relatively precise time synchronization within an AS [29]. The higher-order bits of the packet timestamp can serve as sequence numbers in this replay-suppression system.

#### Key Distribution

The use of DRKeys in EPIC L2–3 creates potential issues of circular dependencies: how is it possible to exchange DRKeys when they themselves are required for sending packets? In a steady state, this is unproblematic as ASes can proactively exchange new AS-level keys before the current keys expire using EPIC L2–3 packets. For an initial key exchange, which only happens very infrequently, we propose to support EPIC L1 in addition, such that key requests can be sent over this lower-level protocol. Although EPIC L1 has lower security guarantees and may be susceptible to DoS attacks, these issues are mitigated by the fact that only a single request and response are needed for fetching a key. Even in a persistent, powerful DoS attack, such an exchange would succeed eventually.

#### Confirmation Packets in EPIC L3

In EPIC L3, the confirmation message that allows the source to validate the path of its packets is sent as an EPIC L2 packet. This is necessary to prevent each confirmation message from triggering another confirmation, causing an infinite sequence of such confirmations. Using EPIC L2 means that the path of the original packet, but not the confirmation message, can be validated; all other security properties are retained (see also Table 2). Even if a malicious on-path AS modifies the path of the confirmation message without being detected, this does not deteriorate the security properties of the original packet.

There are several possible optimizations for the confirmation message, similar to acknowledgments in TCP:
- Instead of directly sending a confirmation message for every received packet, the receiver can batch several confirmation messages and send them in a single packet.
- Confirmation messages can also be "piggy-backed" on normal data packets sent from the receiver to the source.
- Finally, instead of sending all HVFs, only a hash of them can be returned to the source and validated against the stored values.

#### Failure Scenarios

As the EPIC protocols depend on several additional systems, a failure of any of these systems could potentially break connectivity. Most failure scenarios are comparable to similar issues in today's Internet: failures of path or key servers are similar to failures of DNS servers today and can be prevented with similar techniques (e.g., replication, access control). Concerning potential misconfigurations, EPIC may actually increase network resilience as some concepts of new Internet architectures, such as SCION’s isolation domains, ensure that the effects of misconfigurations are locally confined [37].

The most notable additional prerequisite of EPIC is time synchronization. It is possible that:
1. A host,
2. Some router or server in an AS, or
3. A complete AS is unsynchronized with the Internet.

The first case can be handled by the host’s AS replying with a corresponding control message triggering a re-synchronization. Cases (ii) and (iii) can be detected through increased packet-drop rates and can thus trigger a re-synchronization within the AS or with its neighbors. All cases may cause brief outages but can be resolved within a short time period (one second or less in most cases).

#### Path Validation for Intermediate Routers

Path validation is primarily interesting to the end points. Despite this, ICING and OPT allow not only the source and destination to validate the path of a packet but also enable intermediate routers to validate the portion of the path that has already been traversed. The authors of ICING and OPT provide little motivation to provide path validation for routers, and since we are not aware of any important use cases of this feature, we have omitted it from our design criteria of EPIC L1–3. However, for the sake of completeness, we describe an extension of EPIC L3 in Appendix B to also satisfy this property.

### Related Work

Over the past 15 years, much research has been conducted on path-aware Internet architectures and routing schemes, including Platypus [38, 39], PoMo [9], Pathlet Routing [22], NIRA [46], NEBULA [3], and SCION [37, 47]. Many of these systems recognized the need to find a balance of control between end hosts and ASes. For example, PoMo includes a "motivation" field containing a proof to routers that either the sender or receiver is a paying customer [9], NEBULA requires a "proof of consent" for the complete path of traversed ASes [3, 36], and SCION secures the authorization of its hop fields using MACs [37]. These solutions correspond to EPIC L0 in terms of the path authorization properties achieved. NIRA and Pathlet Routing obtain similar properties by restricting allowed paths (NIRA) and keeping state in routers (NIRA and Pathlet Routing) [22, 46]. Platypus uses a system similar to Level 1 presented in §4.2, where each network capability is secured by a "binding," but it does not address the issue of chaining multiple hops to paths [38, 39].

Since PFRI (integrated into PoMo) discussed a high-level outline for a path-validation system via an "accountability" field in packets [15], multiple path-validation schemes have been proposed. ICING [36] is integrated into the NEBULA architecture and provides path validation using a validation field for each hop [36]. It uses aggregate MACs [27] to limit the bandwidth overhead but still requires each router to perform one symmetric cryptographic computation for each other router on the path (and, if keys are not cached, an additional asymmetric Difﬁe–Hellman computation), making it very expensive. Subsequent proposals try to reduce the complexity through different means:
- OPT reduces the required cryptographic computations to a constant number by sacrificing some guarantees for intermediate routers, yet it still has a high communication overhead [28, 37].
- OSV tries to create a more efficient system by replacing cryptographic primitives with orthogonal sequences based on Hadamard matrices [12, 13].
- PPV reduces both computation and communication overhead by only probabilistically validating a single link for each packet [45].

### Conclusion

Several path-aware Internet architectures proposed in recent years promise to improve the security and efficiency of the Internet by providing path control to end hosts. However, this shift of control requires mechanisms to protect the routing policies of ASes from malicious end hosts on the one hand, and raises the challenge of verifying that the path directives were followed by ASes on the other hand. Previous systems for both path authorization and path validation faced a dilemma between security and efficiency in terms of communication overhead.

The highly efficient EPIC protocols proposed in this paper resolve this dilemma and furthermore enable all on-path routers and the destination to authenticate the source of a packet. By ensuring that the source and path of every packet are checked efficiently at the network layer, EPIC enables a wide range of additional in-network security systems like packet filtering for DoS-defense systems and provides a secure foundation for the data plane of a future Internet.

### Acknowledgments

We would like to thank Y.-C. Hu, who provided important early feedback and suggestions; B. Rothenberger for support with the implementation; K. Paterson, who improved our understanding of cryptographic primitives; and S. Hitz and S. Monroy for discussions about the practical aspects of our protocols. We are grateful to the five anonymous reviewers for their very helpful feedback on the manuscript, and our shepherd, B. Reaves, for his guidance during the preparation of the final version of the paper. We gratefully acknowledge financial support from ETH Zurich and from the Zurich Information Security and Privacy Center (ZISC).

### References

[1] ALMA’AITAH, A., AND ABID, Z.-E. Transistor level optimization of sub-pipelined AES design in CMOS 65nm. In Proceedings of the International Conference on Microelectronics (ICM) (2011), IEEE.
[2] AMINI, L., SHAIKH, A., AND SCHULZRINNE, H. Issues with inferring Internet topological attributes. Computer Communications 27, 6 (2004).
[3] ANDERSON, T., BIRMAN, K., BROBERG, R., CAESAR, M., COMER, D., COTTON, C., FREEDMAN, M. J., HAEBERLEN, A., IVES, Z. G., KRISHNAMURTHY, A., LEHR, W., LOO, B. T., MAZIÈRES, D., NICOLSI, A., SMITH, J. M., STOICA, I., VAN RENESSE, R., WALFISH, M., WEATHERSPOON, H., AND YOO, C. S. The NEBULA future Internet architecture. In The Future Internet. Springer, 2013.
[4] AUGUSTIN, B., CUVELLIER, X., ORGOGOZO, B., VIGER, F., FRIEDMAN, T., LATAPY, M., MAGNIEN, C., AND TEIXEIRA, R. Avoiding traceroute anomalies with Paris traceroute. In Proceedings of the ACM SIGCOMM conference on Internet measurement (2006).
[5] BASESCU, C., LIN, Y.-H., ZHANG, H., AND PERRIG, A. High-speed inter-domain fault localization. In Proceedings of the IEEE Symposium on Security and Privacy (2016).
[6] BASESCU, C., REISCHUK, R. M., SZALACHOWSKI, P., PERRIG, A., ZHANG, Y., HSIAO, H.-C., KUBOTA, A., AND URAKAWA, J. SIBRA: Scalable Internet bandwidth reservation architecture. In Proceedings of the Symposium on Network and Distributed System Security (NDSS) (2016).
[7] BELLARE, M., KILIAN, J., AND ROGAWAY, P. The security of the cipher block chaining message authentication code. Journal of Computer and System Sciences 61, 3 (2000).
[8] BENZEKKI, K., EL FERGOUGUI, A., AND ELBELRHITI ELALAOUI, A. Software-defined networking (SDN): a survey. Security and Communication Networks 9, 18 (2016).
[9] BHATTACHARJEE, B., CALVERT, K., GRIFFIOEN, J., SPRING, N., AND STERBENZ, J. P. G. Postmodern internetwork architecture. NSF Nets FIND Initiative (2006).
[10] BIRGE-LEE, H., SUN, Y., EDMUNDSON, A., REXFORD, J., AND MITTAL, P. Bamboozling certificate authorities with BGP. In Proceedings of the USENIX Security Symposium (2018).
[11] BU, K., YANG, Y., LAIRD, A., LUO, J., LI, Y., AND REN, K. What’s (not) validating network paths: A survey. arXiv preprint arXiv:1804.03385 (2018).
[12] CAI, H., AND WOLF, T. Source authentication and path validation in networks using orthogonal sequences. In Proceedings of the International Conference on Computer Communication and Networks (ICCCN) (2016).
[13] CAI, H., AND WOLF, T. Source authentication and path validation with orthogonal network capabilities. In Proceedings of the IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS) (2015).
[14] CALOMEL. AES-NI SSL performance: a study of AES-NI acceleration using LibreSSL, OpenSSL. https://calomel.org/aesni_ssl_performance.html, 2018.
[15] CALVERT, K. L., GRIFFIOEN, J., AND POUTIEVSKI, L. Separating routing and forwarding: A clean-slate network layer design. In Proceedings of the International Conference on Broadband Communications, Networks and Systems (BROADNETS) (2007).
[16] DARPA. Internet protocol. RFC 791, 1981.
[17] DOLEV, D., AND YAO, A. On the security of public key protocols. IEEE Transactions on Information Theory 29, 2 (1983).
[18] DPDK PROJECT. Data Plane Development Kit. https://dpdk.org.
[19] ECRYPT. eBATS: ECRYPT benchmarking of asymmetric systems. https://bench.cr.yp.to/results-dh.html, 2019.
[20] EMMERICH, P., RAUMER, D., WOHLFART, F., AND CARLE, G. Assessing soft-and hardware bottlenecks in PC-based packet forwarding systems. ICN (2015).
[21] GAO, L., AND REXFORD, J. Stable Internet routing without global coordination. IEEE/ACM Transactions on Networking (2001).
[22] GODFREY, P. B., GANICHEV, I., SHENKER, S., AND STOICA, I. Pathlet routing. In Proceedings of ACM SIGCOMM (2009).
[23] GUERON, S. Intel® advanced encryption standard (AES) new instructions set. Intel Corporation (2010).
[24] HUFFAKER, B., FOMENKOV, M., PLUMMER, D. J., MOORE, D., AND CLAFFY, K. Distance metrics in the Internet. In Proceedings of the IEEE International Telecommunications Symposium (ITS) (2002).
[25] IWATA, T., SONG, J., LEE, J., AND POOVENDRAN, R. The AES-CMAC Algorithm. RFC 4493, 2006.
[26] KANG, M. S., LEE, S. B., AND GLIGOR, V. D. The Crossfire attack. In IEEE Symposium on Security and Privacy (2013).
[27] KATZ, J., AND LINDELL, A. Y. Aggregate message authentication codes. In Topics in Cryptology – CT-RSA. Springer, 2008.
[28] KIM, T. H.-J., BASESCU, C., JIA, L., LEE, S. B., HU, Y.-C., AND PERRIG, A. Lightweight source authentication and path validation. In Proceedings of ACM SIGCOMM (2014).
[29] LEE, T., PAPPAS, C., PERRIG, A., GLIGOR, V., AND HU, Y.-C. The case for in-network replay suppression. In Proceedings of the ACM Asia Conference on Computer and Communications Security (ASIACCS) (2017).
[30] LEPINSKI, M., AND KENT, S. An infrastructure to support secure Internet routing. RFC 6480, 2012.
[31] LIU, X., LI, A., YANG, X., AND WETHERALL, D. Passport: secure and adoptable source authentication. In Proceedings of the USENIX Symposium on Networked Systems Design and Implementation (2008).
[32] LOWE, G. A hierarchy of authentication specification. In Computer Security Foundations Workshop (CSFW) (1997).
[33] MAGONI, D., AND PANSIOT, J.-J. Internet topology modeler based on map sampling. In Proceedings of the International Symposium on Computers and Communications (ISCC) (2002).
[34] MAIGRON, P. Autonomous system number statistics. https://www-public.imtbs-tsp.eu/~maigron/RIR_Stats/RIR_Delegations/World/ASN-ByNb.html.
[35] MCCAULEY, J., HARCHOL, Y., PANDA, A., RAGHAVAN, B., AND SHENKER, S. Enabling a permanent revolution in Internet architecture. In Proceedings of ACM SIGCOMM (New York, NY, USA, 2019).
[36] NAOUS, J., WALFISH, M., NICOLOSI, A., MAZIERES, D., MILLER, M., AND SEEHRA, A. Verifying and enforcing network paths with ICING. In Proceedings of the ACM International Conference on emerging Networking EXperiments and Technologies (CoNEXT) (2011).
[37] PERRIG, A., SZALACHOWSKI, P., REISCHUK, R. M., AND CHUAT, L. SCION: A Secure Internet Architecture. Springer, 2017. ISBN 978-3-319-67080-5, https://www.scion-architecture.net/pdf/SCION-book.pdf.
[38] RAGHAVAN, B., AND SNOEREN, A. C. A system for authenticated policy-compliant routing. ACM SIGCOMM Computer Communication Review 34, 4 (2004).
[39] RAGHAVAN, B., VERKAIK, P., AND SNOEREN, A. C. Secure and policy-compliant source routing. IEEE/ACM Transactions on Networking 17, 3 (2009).
[40] ROTHENBERGER, B., ROOS, D., LEGNER, M., AND PERRIG, A. PISKES: Pragmatic Internet-scale key-establishment system. In Proceedings of the ACM Asia Conference on Computer and Communications Security (ASIACCS) (2020).
[41] ROTT, J. Intel advanced encryption standard instructions (AES-NI). Technical Report, Intel (2010).
[42] STUDER, A., AND PERRIG, A. The Coremelt attack. In Proceedings of the European Symposium on Research in Computer Security (ESORICS) (2009).
[43] SUN, Y., EDMUNDSON, A., VANBEVER, L., LI, O., REXFORD, J., CHIANG, M., AND MITTAL, P. RAPTOR: Routing attacks on privacy in Tor. In Proceedings of USENIX Security Symposium (2015).
[44] WANG, C., LI, Z., HUANG, X., AND ZHANG, P. Inferring the average AS path length of the Internet. In Proceedings of the IEEE International Conference on Network Infrastructure and Digital Content (IC-NIDC) (2016).
[45] WU, B., XU, K., LI, Q., LIU, Z., HU, Y.-C., REED, M. J., SHEN, M., AND YANG, F. Enabling efficient source and path verification via probabilistic packet marking. In Proceedings of the IEEE/ACM International Symposium on Quality of Service (IWQoS) (2018).
[46] YANG, X., CLARK, D., AND BERGER, A. W. NIRA: A new inter-domain routing architecture. IEEE/ACM Transactions on Networking (2007).
[47] ZHANG, X., HSIAO, H.-C., HASKER, G., CHAN, H., PERRIG, A., AND ANDERSEN, D. SCION: Scalability, control, and isolation on next-generation networks. In Proceedings of the IEEE Symposium on Security and Privacy (2011).

### Additional Evaluation Results

**Processing-Time Analysis**

Figure 4 shows a fine-grained processing-time analysis of the router for EPIC L3, highlighting the overhead caused by cryptographic operations. The times include necessary copying and padding of the input to the AES block cipher.

Figure 5 shows the processing time of an EPIC L3 router for different path lengths and EPIC payload sizes. As expected, the processing time is independent of the path length and payload size and shows low deviation of only a few percent.