be satisﬁed by the second approach to the multivariate Laplacian.
Drawing a random point.
We illustrate now how to draw a random point from the pdf de-
ﬁned in (1). First of all, we note that the pdf of the planar Laplacian
depends only on the distance from x0. It will be convenient, there-
fore, to switch to a system of polar coordinates with origin in x0. A
point x will be represented as a point (r, θ), where r is the distance
of x from x0, and θ is the angle that the line x x0 forms with re-
spect to the horizontal axis of the Cartesian system. Following the
standard transformation formula, the pdf of the polar Laplacian
centered at the origin (x0) is:
D(r, θ) =
− r
r e
2
2 π
(2)
We note now that the polar Laplacian deﬁned above enjoys a
property that is very convenient for drawing in an efﬁcient way: the
two random variables that represent the radius and the angle are
independent. Namely, the pdf can be expressed as the product of
the two marginals. In fact, let us denote these two random variables
by R (the radius) and Θ (the angle). The two marginals are:
D,R(r) = (cid:82) 2π
D,Θ(θ) = (cid:82) ∞
0 D(r, θ) dθ = 2 r e− r
0 D(r, θ) dr = 1
2 π
Hence we have D(r, θ) = D,R(r) D,Θ(θ). Note that D,R(r)
corresponds to the pdf of the gamma distribution with shape 2 and
scale 1/.
907Figure 4: Remapping the points in polar coordinates to points
in the grid.
geo-indistinguishability, at the price of a degradation of the privacy
parameter .
For the sake of generality we do not require the step units along
the two dimensions of G to be equal. We will call them grid units,
and will denote by u and v the smaller and the larger unit, respec-
tively. We recall that δθ and δr denote the precision of the machine
in representing θ and r, respectively. We assume that δr ≤ rmaxδθ.
The following theorem states the geo-indistinguishability guaran-
tees provided by our mechanism: K(cid:48) satisﬁes -geo-indistingui-
shability, within a range rmax, provided that (cid:48) is chosen in a suit-
able way that depends on , on the length of the step units of G, and
on the precision of the machine.
THEOREM 4.1. Assume rmax  2 e(cid:48)u. Further-
more there is a trade-off between (cid:48) and rmax: If we want (cid:48) to be
close to  then we need q to be large. Depending on the precision,
this may or may not imply a serious limit on rmax. Vice versa, if we
want rmax to be large then, depending on the precision, (cid:48) may need
to be signiﬁcantly smaller than , and furthermore we may have a
constraint on the minimum possible value for , which means that
we may not have the possibility of achieving an arbitrary level of
geo-indistinguishability.
Figure 5 shows how the additional noise varies depending on the
precision of the machine. In this ﬁgure, rmax is set to be 102 km,
and we consider the cases of double precision (16 signiﬁcant digits,
i.e., δθ = 10−16), single precision (7 signiﬁcant digits), and an
intermediate precision of 9 signiﬁcant digits. Note that with double
precision the additional noise is negligible.
Note that in Theorem 4.1 the restriction about rmax is crucial.
Namely, -geo-indistinguishability does not hold for arbitrary dis-
tances for any ﬁnite . Intuitively, this is because the step units of
W (see Figure 4) become larger with the distance r from x0. The
step units of G, on the other hand, remain the same. When the
steps in W become larger than those of G, some x’s have an empty
RW (x). Therefore when x is far away from x0 its probability may
Figure 5: The relation between  and (cid:48) for rmax = 102 km.
Input: x

u, v, δθ, δr
A
point to sanitize
privacy parameter
precision parameters
acceptable locations
Output: Sanitized version z of input x
1. (cid:48) ← max (cid:48) satisfying Thm 4.1 for rmax = diam(A)
2. draw θ unif. in [0, 2π)
3. draw p unif. in [0, 1), set r ← C−1
4. z ← x + (cid:104)r cos(θ), r sin(θ)(cid:105)
5. z ← closest(z, A)
6. return z
draw angle
draw radius
to cartesian, add vectors
truncation
(cid:48) (p)
Figure 6: The Planar Laplace mechanism PL
or may not be 0, depending on the position of x0 in G, which means
that geo-indistinguishability cannot be satisﬁed.
4.3 Truncation
The Laplace mechanisms described in the previous sections have
the potential to generate points everywhere in the plane, which
causes several issues: ﬁrst, digital applications have ﬁnite mem-
ory, hence these mechanisms are not implementable. Second, the
discretized mechanism of Section 4.2 satisﬁes geo-indistinguisha-
bility only within a certain range, not on the full plane. Finally, in
practical applications we are anyway interested in locations within
a ﬁnite region (the earth itself is ﬁnite), hence it is desirable that
the reported location lies within that region. For the above reasons,
we propose a truncated variant of the discretized mechanism which
generates points only within a speciﬁed region and fully satisﬁes
geo-indistinguishability. The full mechanism (with discretization
and truncation) is referred to as “Planar Laplace mechanism” and
denoted by PL.
We assume a ﬁnite set A ⊂ R2 of admissible locations, with
diameter diam(A) (maximum distance between points in A). This
set is ﬁxed, i.e. it does not depend on the actual location x0. Our
truncated mechanism PL : A → P(A ∩ G) works like the dis-
cretized Laplacian of the previous section, with the difference that
the point generated in step (a) is remapped to the closest point in
A ∩ G. The complete mechanism is shown in Figure 6; note that
step 1 assumes that diam(A)  0, PL is (α, δ)-useful if α ≤
(δ).
C−1

Figure 8 illustrates the (α, δ)-usefulness of PL for r = 0.2 (as in
our running example) and various values of (cid:96) (recall that (cid:96) =  r).
It follows from the ﬁgure that a mechanism providing the privacy
guarantees speciﬁed in our running example (-geo-indistinguisha-
bility, with (cid:96) = ln(4) and r = 0.2) generates an approximate loca-
tion z falling within 1 km of the user’s location x with probabil-
ity 0.992, falling within 690 meters with probability 0.95, falling
within 560 meters with probability 0.9, and falling within 390 me-
ters with probability 0.75.
We now have all the necessary ingredients to determine the de-
sired rad R: By deﬁnition of usefulness, if PL is (α, δ)-useful
then the LBS application (PL, rad R) is (δ, rad I )-accurate if α ≤
rad R − rad I. The converse also holds if δ is maximal. By Obser-
vation 5.1, we then have:
PROPOSITION 5.2. The LBS application (PL, rad R) is (c, rad I )-
accurate if rad R ≥ rad I + C−1
Therefore, it is sufﬁcient to set rad R = rad I + C−1
(c).


(c).
Coming back to our running example ( = ln(4)/0.2 and rad I =
0.3), taking a conﬁdence factor c of, say, 0.95, leads to a (0.69, 0.95)-
useful mechanism (because C−1
both ln(4)/0.2-geo-indistinguishable and (0.95, 0.3)-accurate.
4For simplicity we assume that (cid:48) =  (see Figure 6), since their
difference is negligible under double precision.
(c) = 0.69). Thus, (PL, 0.99) is

Figure 7: AOI and AOR of 300 m and 1 km radius respectively.
gory corresponds to LBS applications offering a service that does
not heavily rely on the precision of the location information pro-
vided by the user. Examples of such applications are weather fore-
cast applications and LBS applications for retrieval of certain kind
of POI (like gas stations). Enhancing this kind of LBSs with geo-
indistinguishability is relatively straightforward as it only requires
to obfuscate the user’s location using the Planar Laplace mecha-
nism (Figure 6).
Our running example lies within the second category: For the
user sitting at Café Les Deux Magots, information about restau-
rants nearby Champs Élysées is considerably less valuable than in-
formation about restaurants around his location. Enhancing highly-
location-sensitive LBSs with privacy guarantees is more challeng-
ing. Our approach consists on implementing the following three
steps:
1. Implement the Planar Laplace mechanism (Figure 6) on the
client application in order to report to the LBS server the
user’s obfuscated location z rather than his real location x.
2. Due to the fact that the information retrieved from the server
is about POI nearby z, the area of POI information retrieval
should be increased. In this way, if the user wishes to obtain
information about POI within, say, 300 m of x, the client ap-
plication should request information about POI within, say,
1 km of z. Figure 7 illustrates this situation. We will refer to
the blue circle as area of interest (AOI) and to the grey circle
as area of retrieval (AOR).
3. Finally, the client application should ﬁlter the retrieved POI
information (depicted by the pins within the area of retrieval
in Figure 7) in order to provide to the user with the desired
information (depicted by pins within the user’s area of inter-
est in Figure 7).
Ideally, the AOI should always be fully contained in the AOR.
Unfortunately, due to the probabilistic nature of our perturbation
mechanism, this condition cannot be guaranteed (note that the AOR
is centered on a randomly generated location that can be arbitrarily
distant from the real location). It is also worth noting that the client
application cannot dynamically adjust the radius of the AOR in or-
der to ensure that it always contains the AOI as this approach would
completely jeopardize the privacy guarantees: on the one hand, the
size of the AOR would leak information about the user’s real lo-
cation and, on the other hand, the LBS provider would know with
certainty that the user is located within the retrieval area. Thus,
in order to provide geo-indistinguishability, the AOR has to be de-
ﬁned independently from the randomly generated location.
909Restaurants
in Paris
Privacy
r = 0.2
(cid:96) = log(6)
(cid:96) = log(4)
(cid:96) = log(2)
Restaurants
in Buenos Aires
Privacy