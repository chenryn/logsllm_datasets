Generally, when using babel / `babel-loader` it is common to ignore
`node_modules` for faster compilation speed.
The definition of the `$$typeof` attribute we're looking for is:
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && 
                             Symbol['for']('react.element') || 0xeac7;
And this is pushed into a shared module that exports it when using the
`react.inlineElements` transform.
Here's the problem:
On older browsers that don't support `Symbol`, like Safari 7 / Chromium 30,
`Symbol` is polyfilled by the core-js runtime. But the same definition of
`REACT_ELEMENT_TYPE` is present inside
`node_modules/react/lib/ReactElement.js`, and this is _not_ polyfilled by
oore-js and therefore equals `0xeac7`.
This causes the element test to fail on render (comparing a shimmed Symbol to
`0xeac7`) and breaks the render on those browsers.
I propose, rather than redefining `REACT_ELEMENT_TYPE` directly so it can be
used in the inline elements (and thus having it break if upstream ever changes
it), let's just instantiate an element and export its `$$typeof`.