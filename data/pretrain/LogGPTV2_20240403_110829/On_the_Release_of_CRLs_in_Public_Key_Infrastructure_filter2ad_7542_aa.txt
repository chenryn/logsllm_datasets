title:On the Release of CRLs in Public Key Infrastructure
author:Chengyu Ma and
Nan Hu and
Yingjiu Li
On the Release of CRLs in Public Key Infrastructure
Chengyu Ma1
Beijing University
Nan Hu, Yingjiu Li
Singapore Management University
PI:EMAIL
hunan,PI:EMAIL
Abstract
Public key infrastructure provides a promising founda-
tion for verifying the authenticity of communicating par-
ties and transferring trust over the internet. The key issue
in public key infrastructure is how to process certiﬁcate
revocations. Previous research in this aspect has con-
centrated on the tradeoffs that can be made among dif-
ferent revocation options. No rigorous efforts have been
made to understand the probability distribution of certiﬁ-
cate revocation requests based on real empirical data.
In this study, we ﬁrst collect real empirical data from
VeriSign and derive the probability function for certiﬁ-
cate revocation requests. We then prove that a revocation
system will become stable after a period of time. Based
on these, we show that different certiﬁcate authorities
should take different strategies for releasing certiﬁcate
revocation lists for different types of certiﬁcate services.
We also provide the exact steps by which certiﬁcate au-
thorities can derive optimal releasing strategies.
1 Introduction
The introduction of world wide web technology has re-
sulted in a faster and easier exchange of information. It
also exacerbate the problems of verifying the authenticity
of communicating parties and transferring trust over the
internet. The public key infrastructure (PKI) has been
considered as a promising foundation for solving these
problems, especially in the context of secure electronic
commerce. Since the authenticity of PKI is achieved
through the veriﬁcation of digital certiﬁcates, it is crucial
to understand the nature of digital certiﬁcates in practice.
Digital certiﬁcates have been supported by a wide
range of entities. For example, Korean Government in-
vested heavily on promoting digital certiﬁcates to the
public. The digital certiﬁcates have been issued for vari-
ous applications such as internet banking, government e-
procurement and stock exchange.2 In the year 2001, the
Ministry of Information and Communication announced
that the total number of users of PKI would reach to 10
million by the year 2002. Korea also made its own 128
bit encryption algorithm called SEED and encouraged all
ﬁnancial services to use it. It also developed a national
certiﬁcate system based on public key infrastructure.3
Unfortunately the glory of the PKI can be so dimmed
if there is no efﬁcient way to verify the validity of digi-
tal certiﬁcates. Checking the authenticity and expiration
date of a digital certiﬁcate is never sufﬁcient enough as
it is possible that a certiﬁcate has been revoked before its
expiration for various reasons, such as 1) key compro-
mise, 2)certiﬁcate authority (CA) compromise, 3) afﬁli-
ation change, 4) superseded, or 5) cessation of operation
[6]. To make PKI a useful platform, it is critical to man-
age the certiﬁcate revocations efﬁciently.
Previous research has concentrated on the trade-offs
that can be made among different revocation options
[6, 13, 15]. The purpose is to see which revocation
mechanism is more efﬁcient in which scenario.
In or-
der to compare the performance of different mechanisms,
people ran simulations based on theoretical assumptions.
For example, Naor and Nissim calculated the communi-
cation cost by assuming a ﬁxed length of certiﬁcate re-
vocation list (CRL). Cooper [2] and Arnes [1] modeled
the distribution of revocation information by assuming
an exponential inter-arrival probability for the requests
for CRLs. To the best of our knowledge, no rigorous
efforts have been made to understand the probability dis-
tribution of certiﬁcate revocation requests based on real
empirical data.
Another key conclusion of previous research is that
CA should release CRLs at a ﬁxed time interval because
consumers may not need the most current CRL. As long
as a user has a CRL that is recent enough to meet its
operational requirement, it is acceptable in practice [8].
Rivest [13] has proposed that the recency requirement
should be set by customers, rather than CAs. Unfortu-
nately, all the conclusions are based on some theoreti-
USENIX Association
Security ’06: 15th USENIX Security Symposium
17
cal arguments, there is a lack of guidance for CA op-
erations. Given a recency requirement to be set by the
consumers, CA must understand the following aspects
for setting an optimal CRL releasing policy: 1) Why CA
needs to follow a given time interval? Will the interval
be the same for a new type of certiﬁcates versus a type
of certiﬁcates that has been provided by CA for a certain
period of time? 2) Will the interval be the same for a
mature CA versus a Start-up CA? 3) If CA does follow a
given CRL releasing interval, how does it know whether
that interval is optimal or not?
In this paper, we study how often should a CA release
its CRLs. We concentrate our analysis on CRL because it
is the most common and simplest method for certiﬁcate
revocation [6]. We have several interesting ﬁndings: 1)
Contrary to the common sense, the probability that a cer-
tiﬁcate being revoked is a decreasing function over the
certiﬁcate’s life cycle. People tend to think this proba-
bility either ﬂat over time (as memory-less Poisson) or
increasing over time. 2) CA should take different strate-
gies for publishing certiﬁcate revocation lists when deal-
ing with a new type of certiﬁcates versus a re-serving
type of certiﬁcates. 3) A mature CA and a start-up CA
should also take different strategies for releasing CRLs.
4) We give an optimal releasing interval prescription for
CA to balance the trade-off between cost and risk. In a
very general case, a mature CA who deals with just one
type of certiﬁcates can save almost 40,000 dollars more
over one-year operation if it follows our strategy by de-
ceasing its CRL releasing interval from 34 days to 17
days.
The rest of the paper proceeds as follows: First, we
brieﬂy review the major concerns about the public key re-
vocation. We then discuss empirically how to collect data
and derive the revocation distribution. Next, based on
the empirical distribution, we give CA an optimal CRL
releasing strategy. Finally we conclude our paper with
a discussion of contributions, limitations, and future re-
search directions.
2 Literature Review
Since its introduction, the public key infrastructure [5]
has provided a promising foundation for verifying the au-
thenticity of public keys and for transferring trust among
users or business partners. The major issue in PKI is
how to revoke a certiﬁcate before its expiration. It has
been argued that the running expenses of a PKI de-
rive mainly from administering revocation [14]. Vari-
ous mechanisms have been designed to achieve efﬁcient,
timely, and scalable revocation of certiﬁcations [15, 6].
The certiﬁcate revocation list (CRL) mechanism was
introduced in 1988 and since then it remains the most
common and simplest method for certiﬁcate revocation.
A CRL is a time-stamped list of certiﬁcates which have
been revoked before their expiration. A CA issues a
signed CRL periodically so as to maintain a good syn-
chronization between certiﬁcate users and revocation
source. Some extensions of CRL include delta-CRL
(which only carries changes from previous CRL), parti-
tioned CRL (which is partitioned into a family of CRLs),
and indirect-CRL (which can be issued by different CA
than issuer of certiﬁcates). Rivest proposed to use short-
lived certiﬁcates so as to eliminate CRLs [13]. The major
drawbacks of this approach include a high burden placed
on certiﬁcate servers which need to sign more certiﬁ-
cates, as well as the problem of key compromise which
cannot be addressed without using a separate mechanism
[9].
Micali introduced the certiﬁcate revocation system
(CRS) which is different from CRL. In CRS, a CA signs
a fresh list of all not-yet-expired certiﬁcates together with
selected hash chain values. A user sending a request re-
garding the validity of a single certiﬁcate will get a re-
sponse including two hash chain values. The hash chain
values can be used to verify whether the queried certiﬁ-
cate is valid or not for a certain time interval. The major
advantage of this method is that the veriﬁcation process
is very efﬁcient, thus can be performed on-line. How-
ever, as pointed out by Naor and Nissim [11], the main
disadvantage of this system is the increase of the CA’s
communication cost.
The certiﬁcate revocation tree (CRT) mechanism was
suggested by Kocher [7] which can be used by a veriﬁer
of a certiﬁcate to obtain a short proof if the certiﬁcate
has not been revoked. A CRT is a hash tree whose leaf
nodes correspond to a set of statements about certiﬁcates
status. The set of statements provides information about
whether a certiﬁcate is revoked or not. A proof for a cer-
tiﬁcate status consists of an appropriate path in the hash
tree (from the root to a leaf) specifying for each node the
values of its children. With CRT, a user may hold a short
proof for the validity of his certiﬁcate such that the entire
CRL is not necessary for verifying the status of the cer-
tiﬁcate. The drawback of CRT is its maintenance cost.
Any change to the set of revoked certiﬁcates may cause
re-computation of the entire CRT.
An alternative to the CRL mechanism is to use on-line
certiﬁcate status protocol (OCSP) to reduce the latency
between a revocation report and the distribution of revo-
cation information to users [10]. Once a CA accepts a
revocation report, any query (OCSP request) to the sta-
tus of one or more certiﬁcates will be correctly answered
by an on-line validation server (OCSP responder) with
relevant status values (good, revoked, or unknown) and
valid intervals. Though OCSP provides more timely re-
vocation services, it imposes new security requirements
as the certiﬁcate validators shall trust the on-line valida-
18
Security ’06: 15th USENIX Security Symposium
USENIX Association
tion service.
Besides the above mechanisms, researchers have stud-
ied various aspects of certiﬁcate revocations including
the meaning of revocation [3, 4], the model of revoca-
tion [2], communication cost of revocation [11], trade-
offs in certiﬁcate revocation schemes [16], and risk man-
agement in certiﬁcate revocation [8]. Though various
tradeoffs have been studied for different revocation op-
tions, no attempt has been made to understand the proba-
bility distribution of request for certiﬁcate revocation. In
this paper, we conduct such research for CRL releasing
mechanism based on real data, and give concrete guid-
ance for the optimal operation of CA in various scenar-
ios.
3 Problem Formulation
In this paper, we study how often should a CA release its
CRLs. There are several key assumptions in our study:
1) This is a monopoly case, which means either there is
just one CA in the system or different CAs provide dif-
ferent types of certiﬁcate services. So CAs do not need
to consider the competition effect. 2) CA already decides
the issued age of a given type of certiﬁcates, where issued
age is deﬁned as the time difference between the expired
date and the issued date. 3) To get started, we assume
CA issues one type of certiﬁcates with the same issued
age. These certiﬁcates are independent and identical in
terms of risk and cost. Later we will move on to more
general cases.
Given all of the assumptions, the goal of CA is to ﬁnd
out about how often it should release a CRL to mini-
mize its operational cost over a given period. Here we
deﬁne “how often” as the optimal time interval between
two successive CRLs being released, and the “opera-
tional cost” as the sum of variable cost, ﬁxed cost, and
liability cost as deﬁned below.
Normally CA takes a batch process for CRL release.
There is a trade-off between cost and risk. In the case
that consumer ﬁles a revocation request to CA but CA
does not release a CRL on time, we assume that CA will
bear the liability cost if there is any damage occurred be-
tween request ﬁling and CRL releasing. Each time CA
releases a CRL, it incurs both ﬁxed cost component and
variable cost component. The ﬁxed cost does not change
with the length of CRL. It indicates a ﬁxed dollar amount
each time CA spends for releasing one CRL, regardless
of the number of certiﬁcates in that CRL. Variable cost is
the cost associated with processing each individual cer-
tiﬁcate revocation request.
If CA releases the CRL too often, its liability cost is
low, but its ﬁxed cost and variable cost will be high. On
the other hand, the saving on ﬁxed cost and variable cost
might not be offset by the increasing liability cost if CA
Parameter
a
b
c
t
∆t
X
k
n
v
d
q
i
N di
α
β
µ
λ
θ
F C
V C
Υ
f (v)
F (v)
P (v)
Meaning of Parameter
Max number of days between two successive CRL released dates
that is accepted by customers.
The average percentage of certiﬁcates revoked among that type
of certiﬁcates issued.
The number of days between two CRL releasing dates.
Time parameter in the function of R(t),which is R(t)=ke−kt.
Time interval between two generations of CRLs.
Date on which certiﬁcates get issued.
Parameter in the function of R(t),which is R(t) = ke−kt.
Numbers of generations.
Any time between 0 and ∞ in the f(v),F(v), and P(v).
The upper bound of the number of certiﬁcate revocations in one
CRL which is allowed by CA, before it releases the CRL.
The number of CRLs that CA will published during period β .
The ith CRL published by CA.
CA releases the CRL on the N di day.
Number of certiﬁcates issued at different times.
Issued Age of CRL, which is equal to Expired Date Minus Issued
Date.
Shape parameter in Poisson distribution which indicates the av-
erage number of certiﬁcate revocations in a given time interval.
Number of certiﬁcate revocations in CRL on the day β for Pois-
son case.
Stable number of certiﬁcates in CRL on a given day after β if CA
decides to release CRL on that day.
The ﬁxed cost of CA for publishing one CRL.
The constant unit cost of CA for including one certiﬁcate into the
CRL.
The expected risk/liability per revocation cost for CA for delay-
ing publish that revocation for one day
The number of new certiﬁcate revocations between day v and day
v+∆t.
The valid cumulative number of certiﬁcate revocations from time
1 to v.
The percentage of certiﬁcate revocations occurred from time v to
time v+∆ t.
Table 1: Notation
releases the CRL too rarely. So CA needs to ﬁnd an op-
timal interval for CRL release. In order to ﬁnd this solu-
tion, CA must know the CRL length on a given day if it
decides to publish CRL on that day. The length of CRL
at any time t is related to three components: 1) Length
of CRL at any time t − 1. 2) How many revoked certiﬁ-
cates including in the CRL at time t − 1 will be expired
at time t. According to CRL policy, if the certiﬁcate is
expired, it should be excluded from CRL. 3) How many
new revocation requests it will receive from time t − 1 to
t.
For ease of reference, Table 1 lists all the notation that
will be used in this paper.
4 Data Collection
How many new revocation requests a CA received from
time t − 1 to t is really driven by the probability distri-
bution of certiﬁcate revocation requests. From Septem-
ber 7th to September 13th , we collected a series of
CRLs from VeriSign.com. As one of the biggest Cer-
tiﬁcate Authority in the world, VeriSign provides variant
types of certiﬁcates and publishes different CRLs period-
ically. We randomly choose ﬁve different CRL ﬁles from
USENIX Association
Security ’06: 15th USENIX Security Symposium
19
VeriSign website, which belong to ﬁve different classes.
Table 2 provides the descriptions for these 5 CRL ﬁles
which have 39,243 total revocation records. When a cer-
tiﬁcate is issued, its validity is limited by an expiration
date. Note that the deﬁnition of issued age is:
Issued Age = Expired Date − Issued Date
However,
there are circumstances where a certiﬁcate
must be revoked prior to its expiration date. Thus, the
truly existence age of the certiﬁcate is the time between
the issued date and the revoked date.
Existence Age = Revoked Date − Issued Date
A certiﬁcate is valid for its issued age unless it is revoked.
Each revoked certiﬁcate in a CRL is identiﬁed by its cer-
tiﬁcate serial number and the revoked date. Based on
the serial number of a given certiﬁcate, we searched the
VeriSign online database to get both the issued date and
the expired date correspondingly. We cleaned those er-
ror records whose revoked date was later than the expired
date or whose issued date was later than the revoked date.
5 Data Analysis
We present the summary statistics for our data in Table
3. The average issued age of these CRLs is 493 days,
while the average existence age is much shorter, only 31
days. To further demonstrate what is happening here,
we plot the number of revocations against existence age
in Figure 1, and the percentage of revocations against
existence age in Figure 2 for classes RSASecureServer
and SVRIntl.
s
n
o
i
t
a
c
o
v
e
R
f
o
#
7000
6000
5000
4000
3000
2000
1000
0
0 8
6
1
4
2
2
3
RSASecureServer
SVRIntl
0
8
8
8
6
9
4
0
1
2
1
1
0
2
1
0
4
8
4
Existence Age (day)
6
5
4
6
2
7
n
o
i
t
a
c
o
v
e
R
f
o
e
g
a
t
n
e
c
r
e
P
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
RSASecureServer
SVRIntl
0 8
6
1
4
2
2
3
0
4
8
4
6
5