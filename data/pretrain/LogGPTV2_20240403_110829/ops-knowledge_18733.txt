User: I'm prototyping a Python/Redis based API and am serving JSON using Bottle but unfortunately out of the box Bottle performs badly under load and under high concurrency. Some initial testing on real traffic results in the python script crashing without terminating, which means the API is unresponsive and not restarting*.
What is currently the best solution to scale a Python/Redis API in terms of performance as well as documentation. I find the bottle+greenlet solution poorly documented and not easy to implement for a Python beginner like me. I heard tornado is good but that its integration with Redis is slower than Bottle's.
*Seems that when bottle is unable to send the body of the HTTP request to the client, the server will bug out with "[Errno 32] Broken pipe" errors, which seems like a bad reason for a server to stop working
Assistant: If you are a beginner you should not start with evented (twisted/tornado/gevent/eventlet...) libs.
It will lead you to place you dont know!
If you need to scale add machines and balance the load with a load balancer.