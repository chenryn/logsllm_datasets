以下是针对Ubuntu 18.04 LTS系统，安装和配置Docker以支持容器化应用程序部署的详细步骤：

### 步骤 1: 卸载旧版本的Docker（如果存在）

如果您之前已经安装了任何版本的Docker，请首先卸载它们。执行以下命令：
```bash
sudo apt-get remove docker docker-engine docker.io containerd runc
```

### 步骤 2: 更新包列表

确保您的软件源是最新的。运行：
```bash
sudo apt-get update
```

### 步骤 3: 安装准备工具

安装一些必要的软件包，以便能够使用HTTPS来访问仓库并通过GPG密钥验证下载文件的完整性。
```bash
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
```

### 步骤 4: 添加Docker官方GPG密钥

这一步是为了保证从Docker官方网站获取的数据是安全可靠的。
```bash
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
```

### 步骤 5: 设置Docker APT源

将Docker的APT源添加到您的系统中。
```bash
echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
```

### 步骤 6: 再次更新包列表

现在您已经添加了新的源，需要再次刷新apt缓存。
```bash
sudo apt-get update
```

### 步骤 7: 安装Docker Engine

安装最新版本的Docker引擎。
```bash
sudo apt-get install -y docker-ce docker-ce-cli containerd.io
```

### 步骤 8: 启动Docker服务

安装完成后，立即启动Docker服务，并设置为开机自启。
```bash
sudo systemctl start docker
sudo systemctl enable docker
```

### 步骤 9: 将当前用户加入docker组

为了避免每次使用Docker时都需要输入`sudo`，可以将当前登录用户加入到docker用户组中。
```bash
sudo usermod -aG docker $USER
```
注意：更改生效前请重新登录或重启电脑。

### 步骤 10: 验证安装是否成功

最后，通过运行一个简单的Docker容器来测试一切是否正常工作。
```bash
docker run hello-world
```
如果一切顺利，您应该能看到一条欢迎信息，表明Docker已被正确安装并可正常使用。

按照上述指南操作后，您的Ubuntu 18.04 LTS服务器就已准备好利用Docker进行容器化应用的开发与部署了。