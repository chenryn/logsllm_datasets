I’m your MAC(b) Daddy
Grayson Lenik – Trustwave
@handlefree
Copyright Trustwave 2010
Confidential
Bio
•
Security Consultant for Trustwave’s Spiderlabs.
•
Author of the Digital Forensics blog “An Eye on Forensics”
•
GIAC Certified Forensic Analyst (GCFA) 
•
Microsoft Certified Systems Engineer (MCSE)
•
Qualified Security Assessor (QSA)
Copyright Trustwave 2010
Confidential
Agenda
• What are MACB times?
• Where are they stored?
• What is a forensic timeline?
• Why is it useful?
• Why do it may way?
• Doing it my way
• My way just got easier
• Timestamp alteration (Timestomping)
• Defeating timestamp alteration
• Case studies and examples.
• Tools
• Conclusion
Copyright Trustwave 2010
Confidential
MAC(b) Times
What do they stand for?
The MAC(b) times are derived from file system metadata and they 
stand for:
Modified
Accessed
Changed ($MFT Modified)
and
Birth (file creation time)
The (b) is in parentheses because not all file systems record a birth 
time. For the purposes of this presentation I focus on the NTFS file 
system as it is the most common file system we see when working 
investigations.
Copyright Trustwave 2010
Confidential
Where are they stored?
Two places, both are located in the Master File Table ($MFT):
The first is $STANDARD_INFO Attribute. 
$STANDARD_INFO ($SI) stores file metadata such as flags, the file SID, the file 
owner and a set of MAC(b) timestamps.
$STANDARD_INFO is the timestamp collected by Windows explorer, fls, 
mactime, timestomp, find and the other utilities related to the display of 
timestamps.
*http://blogs.technet.com/b/ganand/archive/2008/02/19/ntfs-time-stamps-file-
created-in-1601-modified-in-1801-and-accessed-in-2008.aspx
Copyright Trustwave 2010
Confidential
Where are they stored?
The second attribute is $FILE_NAME Att.
$FILE_NAME ($FN) contains the filename in Unicode and another 
set of MAC(b) timestamps.
The difference?
$STANDARD_INFO can be modified by user level processes like 
timestomp.
$FILE_NAME can only be modified by the system kernel. There are 
no known anti-forensics utilities that can accomplish this.
Copyright Trustwave 2010
Confidential
What is a forensic timeline?
•
A forensic timeline is a string of digital events sorted into a format 
that is easily readable by a human being.
•
It can contain events from a single source, like the file system itself, 
or events from multiple sources like the system registry, log files, 
event logs, etc…
•
The only way I know of to get a 30,000 foot view of the events that 
were taking place on a machine during a given time frame.
Copyright Trustwave 2010
Confidential
Why is it useful?
Forensic timelines are infinitely useful at pinpointing all (or 
most) intruder activity at a given point in time. It is also an 
excellent place to generate initial case leads and keywords.
•
Periods of intruder activity stick out like a sore thumb.
•
Identifying a starting point of intrusion is invaluable to finding other 
pieces of malware and more of the total activity that took place on 
the targeted system.
•
When you add in registry timeline info you get a more complete 
picture of code being dropped and services being created. In some 
cases definitive proof of which user id was used to compromise the 
system.
Copyright Trustwave 2010
Confidential
Why do it my way?
It’s fast…
It’s easy…
It’s easily searchable so you can use your scalpel instead of 
your shotgun.
It’s free! (more or less)
•
I can generate a timeline including full file system data and all the registry 
hives, search it for keywords and identify time altered files before any 
popular GUI based forensic utilities have loaded and verified an image.
•
And in a few minutes, I’m going to show you how!
Copyright Trustwave 2010
Confidential
Doing it my way.
Generate a bodyfile with “fls”:
Fls is open source and is available as part of The Sleuthkit (TSK)*
•
Fls –m C: -f ntfs –r \\.\Z: >fs_bodyfile
− m Output in standard format (timemachine format)
− C: name the mountpoint (could be D:, /var, etc..)
− -f  
− -r display directories recursively
− \\.\Z:  point it at a logical device
− > dump it out to a file called fs_bodyfile
− This can be done on a live file system by using F-response (the only part of 
this that’s not free, but Oh so worth it.)
* http://www.sleuthkit.org/sleuthkit/download.php
Copyright Trustwave 2010
Confidential
Doing it my way.
Fls can also be run against a static (postmortem) image:
Like so:
•
Fls –m C: –o 63 –r    >fs_bodyfile
− -o 
Or against a split image:
Like so:
•
Fls –m C: -o 63 –r  , ,   >fs_bodyfile
− -o 
Copyright Trustwave 2010
Confidential
Doing it my way.
Here’s a snippet of what a bodyfile looks like:
It’s not very user friendly.   We’re going to see that inetmgr.exe again…
0|C:/WINDOWS/system32/imagehlp.dll|45808-128-
1|r/rrwxrwxrwx|0|0|150016|1294398049|1202272697|1288808002|1181611484
0|C:/WINDOWS/system32/imgutil.dll|53632-128-
1|r/rrwxrwxrwx|0|0|34816|1294399529|1236501098|1288808002|1236501098
0|C:/WINDOWS/system32/inetcomm.dll|39531-128-
1|r/rrwxrwxrwx|0|0|695808|1295017350|1276070390|1288808002|1181612350
0|C:/WINDOWS/system32/inetcpl.cpl|53636-128-
1|r/rrwxrwxrwx|0|0|1469440|1294399448|1284055250|1294399566|123650129
20|C:/WINDOWS/system32/inetinfo.chm|46996-128-
0|r/rrwxrwxrwx|0|0|929955|1099455632|1099455632|1293869074|1099455632
0|C:/WINDOWS/system32/inetmgr.exe|47066-128-
3|r/rrwxrwxrwx|0|0|1301406|1295017321|1068995339|1294399979|106899533
9
Copyright Trustwave 2010
Confidential
Doing it my way
Turning fls output into something useful and human-readable:
Mactime.pl is also available as part of TSK.
Perl mactime.pl –d –b fs_bodyfile >fs_timeline.csv
-d output in comma delimited format
-b 
> output to a file called fs_timeline.csv
Copyright Trustwave 2010
Confidential
Doing it my way.
Your timeline displayed in Excel.
Copyright Trustwave 2010
Confidential
Doing it my way.
Adding information to make it a “super” timeline.
•
I like to add registry times and little else, adding too much information 
can make the timeline difficult to interpret. (Data Overload) However, 
there are times when more data is great. 
•
Adding registry MAC times is accomplished with the use of “regtime”
•
Regtime.pl is a perl script written by Harlan Carvey and is included in 
the Sans Incident Response and Forensics Toolkit (SIFT)
•
Log2timeline is a great utility written by Kristinn Gudjonsson for adding 
in Windows event logs, Dr. Watson logs, IIS and Apache logs and any 
number of other things. (The latest version contains 32 input modules.) 
In between writing this presentation and now delivering it, Kristinn has 
released a new version that makes my entire presentation obsolete. 
Thanks a lot  .  We’ll talk more about L2T in just a minute.
Copyright Trustwave 2010
Confidential
Doing it my way.
The process:
Extract the registry hives from %systemroot%/Windows/System32/config and 
the ntuser.dat files from their respective profiles in C:\Documents and 
Settings\ (Windows XP), C:\Users\ (Windows 
Vista and 7).
Perl regtime.pl –m  -r 