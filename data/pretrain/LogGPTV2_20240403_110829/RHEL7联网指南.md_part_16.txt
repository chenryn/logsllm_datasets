## [⁠]{#ch-Configure_Network_Bonding.html#sec-Activating_a_Channel_Bond}4.4.4. 激活频道绑定 {.title}
:::
::: para
要激活绑定，则要启动所有从属接口。请作为 `root`{.systemitem}
运行以下命令：
``` screen
~]# ifup ifcfg-eth0
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/7)
```
``` screen
~]# ifup ifcfg-eth1
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/8)
```
:::
::: para
注：如果为已经处于 ["[up]{.quote}"]{.quote}
的接口编辑接口文件，请首先将其设定为 down，如下：
``` synopsis
ifdown ethN
```
。完成后，启动所有从属接口以便启动绑定（不将其设定为
["[down]{.quote}"]{.quote}）。
:::
::: para
要让 [**NetworkManager**]{.application}
了解所做更改，请在每次进行更改后，作为 `root`{.systemitem}
运行一个命令：
``` screen
~]# nmcli con load /etc/sysconfig/network-scripts/ifcfg-device
```
另外，也可以重新载入所有接口：
``` screen
~]# nmcli con reload
```
[**NetworkManager**]{.application}
的默认行为是不会意识到所进行的更改，并继续使用旧的配置数据。这是由
`NetworkManager.conf`{.filename} 文件中的
`monitor-connection-files`{.option} 选项决定。有关详情请查看
`NetworkManager.conf(5)`{.filename} manual page。
:::
::: para
请运行以下命令查看绑定接口的状态：
``` screen
~]# ip link show
1: lo:  mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0:  mtu 1500 qdisc pfifo_fast master bond0 state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:e9:ce:d2 brd ff:ff:ff:ff:ff:ff
3: eth1:  mtu 1500 qdisc pfifo_fast master bond0 state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:38:a6:4c brd ff:ff:ff:ff:ff:ff
4: bond0:  mtu 1500 qdisc noqueue state UP mode DEFAULT
    link/ether 52:54:00:38:a6:4c brd ff:ff:ff:ff:ff:ff
```
:::
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bonding.html#sec-Creating_Multiple_Bonds}4.4.5. 创建多个绑定 {.title}
:::
::: para
在 Red Hat Enterprise Linux 7
中，会为每个绑定创建一个频道绑定接口，其中包括 `BONDING_OPTS`{.command}
指令。使用这个配置方法可让多个绑定设备使用不同的配置。请按照以下操作创建多个频道绑定接口：
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    创建多个 `ifcfg-bondN`{.filename} 文件，这些文件中包含
    `BONDING_OPTS`{.command}
    指令。这个指令可让网络脚本根据需要创建绑定接口。
    :::
-   ::: para
    创建或编辑要绑定的现有接口配置文件，添加 `SLAVE`{.command} 指令。
    :::
-   ::: para
    使用 `MASTER`{.command}
    指令工具在频道绑定接口中分配要绑定的接口，即从属接口。
    :::
:::
:::
::: example
[⁠]{#ch-Configure_Network_Bonding.html#ex-Example-multiple-bondN_interface_configuration_files}
**例 4.3. 多 ifcfg-bondN 接口配置文件示例**
::: example-contents
::: para
以下是频道绑定接口配置文件示例：
``` programlisting
DEVICE=bondN
NAME=bondN
TYPE=Bond
BONDING_MASTER=yes
IPADDR=192.168.1.1
PREFIX=24
ONBOOT=yes
BOOTPROTO=none
BONDING_OPTS="bonding parameters separated by spaces"
```
:::
::: para
在这个示例中，使用绑定接口的号码替换
*N*。例如：要创建两个接口，则需要使用正确的 `IP`{.systemitem}
地址创建两个配置文件 `ifcfg-bond0`{.filename} 和
`ifcfg-bond1`{.filename}。
:::
:::
:::
::: para
使用 [例 4.2
"从属接口配置文件示例"](#ch-Configure_Network_Bonding.html#ex-Example_Slave_Interface_Configuration_File){.xref}
创建要绑定的接口，并根据需要使用 `MASTER=bondN`{.command}
指令将其分配到绑定接口。例如：在上述示例中，如果需要在每个绑定中有两个接口，则两个绑定则要创建四个接口配置文件，并使用
`MASTER=bond0`{.command} 分配前两个配置文件，使用
`MASTER=bond1`{.command} 分配后两个配置文件。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Configure_Network_Bonding.html#sec-Using_Channel_Bonding}4.5. 使用频道绑定 {.title}
:::
[]{#ch-Configure_Network_Bonding.html#idm140675838867008
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675838865088
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675890457344
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675890455904
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675890454464
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675908190096
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675908188656
.indexterm}
::: para
为增强性能，可调整可用模块选项确定最佳组合。特别要注意
`miimon`{.command} 或者 `arp_interval`{.command} 和
`arp_ip_target`{.command}
参数。有关可用选项列表及如何迅速决定要绑定的最佳接口详情，请查看
[第 4.5.1 节 "Bonding
模块指令"](#ch-Configure_Network_Bonding.html#s3-modules-bonding-directives){.xref}。
:::
::: section
::: titlepage
## [⁠]{#ch-Configure_Network_Bonding.html#s3-modules-bonding-directives}4.5.1. Bonding 模块指令 {.title}
:::
[]{#ch-Configure_Network_Bonding.html#idm140675884147744
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675874965920
.indexterm}[]{#ch-Configure_Network_Bonding.html#idm140675874964000
.indexterm}
::: para
最好是在将绑定接口添加到绑定接口配置文件（例如：`ifcfg-bond0`{.filename}）的
`BONDING_OPTS="bonding parameters"`{.option} 指令前，测试最适合的频道
bonding 模块参数。修改 `sysfs`{.systemitem}
文件系统中的文件即可在不载入（及重新载入）bonding
模块的情况下配置绑定接口参数。
:::
::: para
`sysfs`{.systemitem}
是一个虚拟文件系统，将内核对象视为目录、文件及符号链接。可使用
`sysfs`{.systemitem}
查询内核对象信息，也可以通过使用常规文件系统命令处理那些对象。`sysfs`{.systemitem}
虚拟文件系统是挂载到 `/sys/`{.filename} 目录下。所有绑定接口都可以通过与
`/sys/class/net/`{.filename} 目录的文件互动和操作动态进行配置。
:::
::: para
为确定绑定接口的最佳参数，可创建一个绑定接口文件，比如
`ifcfg-bond0`{.filename}，方法如 [第 4.4.2 节
"创建频道绑定接口"](#ch-Configure_Network_Bonding.html#sec-Create_a_Channel_Bonding_Interface){.xref}
所述。在每个绑定到 `bond0`{.literal} 的接口的配置文件中插入
`SLAVE=yes`{.option} 和 `MASTER=bond0`{.option}
指令。完成后，即可测试这些参数。
:::
::: para
首先，请作为 `root`{.systemitem} 运行
`ifup bondN`{.command}``{=html} 启动您创建的绑定：
:::
``` screen
~]# ifup bond0
```
::: para
如果已正确创建 `ifcfg-bond0`{.filename} 绑定接口文件，则可以作为
`root`{.systemitem} 运行 ` ip link show`{.command}
命令，查看该命令输出结果中列出的 `bond0`{.computeroutput}：
:::
``` screen
~]# ip link show
1: lo:  mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: eth0:  mtu 1500 qdisc pfifo_fast master bond0 state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:e9:ce:d2 brd ff:ff:ff:ff:ff:ff
3: eth1:  mtu 1500 qdisc pfifo_fast master bond0 state UP mode DEFAULT qlen 1000
    link/ether 52:54:00:38:a6:4c brd ff:ff:ff:ff:ff:ff
4: bond0:  mtu 1500 qdisc noqueue state UP mode DEFAULT
    link/ether 52:54:00:38:a6:4c brd ff:ff:ff:ff:ff:ff
```
::: para
要查看所有现有绑定（包括未启动的绑定），请运行：
:::
``` screen
~]$ cat /sys/class/net/bonding_masters
bond0
```
::: para
可处理 `/sys/class/net/bondN/bonding/`{.filename}
目录中的各个文件配置每个绑定。首先，您要配置的绑定必须处于 down 状态：
:::
``` screen
~]# ifdown bond0
```
::: para
例如：要以 1 秒为间隔启用 bond0 中的 MII 监控，请作为
`root`{.systemitem} 运行：
:::
``` screen
~]# echo 1000 > /sys/class/net/bond0/bonding/miimon
```
::: para
要为 *`balance-alb`* 模式配置 bond0，请运行：
:::
``` screen
~]# echo 6 > /sys/class/net/bond0/bonding/mode
```
::: para
\...\...或者使用该模式名称：
:::
``` screen
~]# echo balance-alb > /sys/class/net/bond0/bonding/mode
```
::: para
配置有问题绑定的选项后，可运行 `ifup bondN`{.command}
启动并测试该连接。如果决定要更改选项，则需要先断开该接口，使用
`sysfs`{.systemitem} 修改参数，然后启动接口，并再次测试。
:::
::: para
确定绑定连接的最佳参数后，为要配置的绑定接口在
`/etc/sysconfig/network-scripts/ifcfg-bondN `{.filename} 文件的
*`BONDING_OPTS=`*
指令中以空格分开的方式添加那些参数。无论何时连接该接口时（例如：若设置
*`ONBOOT=yes`* 指令，则在系统引导序列中），*`BONDING_OPTS`*
中指定的绑定选项即可生效。
:::
::: para
以下列表提供了很多常见的频道绑定参数名称及其功能说明。有关详情，请查看
`modinfo bonding`{.command} 输出中每个 `parm`{.computeroutput}
的概述，或查看
了解更详细的内容。
:::
::: variablelist
**绑定接口参数**
[`ad_select=value `{.literal}]{.term}
:   ::: para
    指定要使用的 802.3ad 聚合选择逻辑，可能值为：
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        **`stable`** 或者 **`0`** ---
        默认设置。由最大聚合带宽选择的活动聚合器。只有全部从属聚合器失效，或活跃聚合器没有从属聚合器时，才会重新选择活动聚合器。
        :::
    -   ::: para
        **`bandwidth`** 或者 **`1`** ---
        活动聚合器由最大聚合带宽选择。出现在以下情况下会重新选择：
        ::: itemizedlist
        -   ::: para
            在绑定中添加或删除从属；
            :::
        -   ::: para
            任意从属链接发生变化；
            :::
        -   ::: para
            任意与 802.3ad 有关的状态变化；
            :::
        -   ::: para
            绑定的管理状态改为 up。
            :::
        :::
        :::
    -   ::: para
        **`count`** 或者 **`2`** ---
        活动聚合器由号码最大从属连接选择。重新选择的条件与上述
        `bandwidth`{.option} 一致。
        :::
    :::
    `bandwidth`{.option} 和 `count`{.option}
    选择策略允许活动聚合器部分失灵时进行 802.3ad
    聚合故障转移。这样可保证聚合器高度可用，即 bandwidth
    或从属连接数一直保持活动。
    :::
[`arp_interval=time_in_milliseconds `{.literal}]{.term}
:   ::: para
    以毫秒为单位指定 `ARP`{.systemitem} 监控的频繁度。
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    关键是要指定 `arp_interval`{.literal} 或 `arp_ip_target`{.literal}
    参数，或者指定 `miimon`{.literal}
    参数。否则会在链接失败时使网络性能降级。
    :::
    :::
    :::
    ::: para
    如果在 `mode=0`{.literal} 或者
    `mode=2`{.literal}（两种负载平衡模式）中使用这个设置，则必须配置网络交换机，以便使用网卡平均发送数据包。有关如何完成此操作的详情，请查看
    。
    :::
    ::: para
    默认将这个数值设定为 **`0`**，即禁用该功能。
    :::
[`arp_ip_target=ip_address[,ip_address_2,…ip_address_16] `{.literal}]{.term}
:   ::: para
    启用 `arp_interval`{.literal} 参数后，指定 `ARP`{.systemitem}
    请求的目标 `IP`{.systemitem} 地址。在使用逗号分开的列表中最多可指定