# A Low-Cost Attack on a Microsoft CAPTCHA

**Authors:**
- Jeff Yan
- Ahmad Salah El Ahmad

**Affiliation:**
- School of Computing Science, Newcastle University, UK

**Email:**
- [PI:EMAIL]

## Abstract

CAPTCHA (Completely Automated Public Turing Test to Tell Computers and Humans Apart) is a widely adopted security technology. The most common CAPTCHAs are text-based, requiring users to solve a text recognition task. Current best practices in CAPTCHA design suggest that such schemes should rely on segmentation resistance for security, as individual character recognition after segmentation can be solved with high accuracy using standard methods like neural networks.

In this paper, we present new character segmentation techniques that can be used to attack several text-based CAPTCHAs, including those designed and deployed by Microsoft, Yahoo, and Google. Specifically, the Microsoft CAPTCHA, which has been in use since 2002 across various online services such as Hotmail, MSN, and Windows Live, was designed to be resistant to segmentation. Despite this, our simple and low-cost attack achieved a segmentation success rate of over 90% against this scheme. On an ordinary desktop computer, the attack took approximately 80 milliseconds to segment each challenge. Consequently, we estimate that this CAPTCHA could be broken by a malicious bot with an overall success rate of more than 60%. This stands in stark contrast to the design goal, which aimed for automated attacks to have a success rate no higher than 0.01%.

This paper demonstrates, for the first time, that even carefully designed segmentation-resistant CAPTCHAs are vulnerable to novel but simple attacks.

**Categories and Subject Descriptors:**
- D.4.6 Security and Protection
- H.1.2 User/Machine Systems

**General Terms:**
- Security, Human Factors

**Keywords:**
- CAPTCHA, robustness, segmentation attack, usability, Internet security

## 1. Introduction

A CAPTCHA is a program that generates and evaluates tests designed to be solvable by humans but challenging for current computer programs. This technology is a standard security mechanism used to defend against undesirable or malicious Internet bots, such as those spreading spam emails and creating large numbers of free email accounts. Text-based CAPTCHAs, which involve recognizing distorted text, are the most widely used. These schemes are popular due to their intuitive nature, minimal localization issues, and potential for strong security.

A good CAPTCHA must be user-friendly while also being robust enough to resist automated attacks. Research in this interdisciplinary field of usable security has gained increasing attention in recent years.

Table 1. Recognition rate for individual characters under different distortions (data from [6])

| Characters under typical distortions | Recognition rate |
|-------------------------------------|------------------|
| ~100%                               | 96+%             |
| 100%                                | 98%              |
| ~100%                               | 95+%             |

Early research indicated that computers can recognize single characters with high accuracy, even if they are highly distorted. Table 1 shows the success rates achieved by a neural network in recognizing such characters. If the positions of characters in a CAPTCHA challenge are known, breaking the CAPTCHA becomes a straightforward recognition problem, easily solved with standard machine learning techniques.

However, when the locations of characters are unknown, state-of-the-art methods struggle to locate and recognize them. The problem of identifying character locations, or segmentation, remains a challenging issue in fields such as handwriting recognition and computer vision. Segmentation is often computationally expensive and combinatorially hard.

Current best practices in CAPTCHA design suggest that the robustness of text-based schemes should rely on the difficulty of segmentation rather than recognition. In other words, if a CAPTCHA can be reduced to a problem of individual character recognition, it is effectively broken.

In this paper, we report new character segmentation techniques that can be used to attack several text-based CAPTCHAs, including those designed and deployed by Microsoft, Yahoo, and Google.

First, we present a novel segmentation attack on a high-profile Microsoft CAPTCHA. Designed to be segmentation-resistant, this scheme was developed by an interdisciplinary team at Microsoft, including experts in document processing, machine learning, human-computer interaction, and security. The CAPTCHA has been deployed in many of Microsoft's online services, including Hotmail, MSN, and Windows Live, since 2002. It has undergone extensive improvements in both robustness and usability, and Microsoft has filed three US patent applications to protect the underlying technology.

Despite these efforts, our simple and low-cost attack achieved a segmentation success rate of over 90% on the latest version of this CAPTCHA (deployed in the summer of 2007). We refer to this CAPTCHA as the MSN scheme in this paper. With the aid of this segmentation attack, we estimate that the MSN scheme can be broken with an overall success rate of about 60%, far exceeding its design goal of a 0.01% success rate for automated scripts.

Next, we show that our attack is also applicable to other text-based CAPTCHAs, including those designed by Yahoo and Google. A variant of our attack achieved a high segmentation rate on a Yahoo CAPTCHA, potentially leading to the most successful attack on this scheme to date.

The detailed structure of this paper is as follows:
- **Section 2:** Discusses related work.
- **Section 3:** Reviews the MSN scheme.
- **Sections 4 and 5:** Detail our attack and its results, respectively.
- **Section 6:** Discusses the applicability of our attack to other CAPTCHAs.
- **Section 7:** Examines representative "segmentation resistance" mechanisms and their real-life failures.
- **Section 8:** Summarizes the paper and offers conclusions.

By attacking well-designed, deployed CAPTCHAs, we aim to understand how they can fail and how they can be improved. This paper contributes to the immediate improvement of the security of CAPTCHAs widely deployed by Microsoft, Yahoo, and Google, as well as other schemes with similar weaknesses. It also advances our understanding of CAPTCHA design, highlighting which segmentation-resistant mechanisms are weak and which appear secure against currently available attacks.

## 2. Related Work

On February 8, 2008, a surge of spam from Windows Live accounts was observed, and a security firm analyzed a bot that could sign up for Live Mail accounts. However, in this case, the CAPTCHA decoding was not done by the bot but at a remote server, possibly involving cheap human labor. The success rate for the bot was only about 30-35%.

The robustness of text-based CAPTCHAs has been studied mainly in the computer vision and document analysis communities. For example, Mori and Malik [9] broke the EZ-Gimpy (92% success) and Gimpy (33% success) CAPTCHAs using sophisticated object recognition algorithms. Moy et al. [10] developed distortion estimation techniques to break EZ-Gimpy with a 99% success rate and 4-letter Gimpy-r with a 78% success rate. Chellapilla and Simard [3] attacked several visual CAPTCHAs with machine learning algorithms, achieving success rates ranging from 4.89% to 66.2%.

Our early work [14] broke several CAPTCHAs, including those hosted at Captchaservice.org, with nearly 100% success by counting the number of pixels of each segmented character. This study used simple pattern recognition algorithms but exploited fatal design errors in each scheme.

PWNtcha [7] is a web page that aims to demonstrate the inefficiency of many CAPTCHA implementations. It briefly comments on the weaknesses of about a dozen simple CAPTCHAs, claiming success rates from 49% to 100%, but provides no technical details. Many more CAPTCHAs are also commented on at this site, with the MSN scheme and a Yahoo CAPTCHA (discussed in Section 6.1) being regarded as "very good" and difficult to break.

Two interesting algorithms were proposed in [19] to amplify the skill gap between humans and computers, improving the security of text-based CAPTCHAs. However, these algorithms are orthogonal to this paper.

Usability and robustness are fundamental issues with CAPTCHAs, often interconnected. In [21], we examined usability issues in CAPTCHA design and discussed their subtle implications for robustness.

A survey on CAPTCHA research, including the design of notable early schemes, can be found in [13]. The limitations of defending against bots with CAPTCHAs, including protocol-level attacks, were discussed in [15].

## 3. The MSN Scheme

Figure 1 shows some sample challenges generated by the MSN CAPTCHA scheme. We collected 100 random samples from Microsoft's website to study the characteristics of the MSN scheme. By analyzing [4, 5] and the collected samples, we observed the following characteristics:

- Each challenge uses eight characters.

**Figure 1. The MSN CAPTCHA: 4 sample challenges.**