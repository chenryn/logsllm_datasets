title:A low-cost attack on a Microsoft captcha
author:Jeff Yan and
Ahmad Salah El Ahmad
A Low-cost Attack on a Microsoft CAPTCHA 
Jeff Yan 
School of Computing Science  
Newcastle University, UK  
PI:EMAIL 
ABSTRACT 
CAPTCHA  is  now  almost  a  standard  security  technology.  The 
most widely deployed CAPTCHAs are text-based schemes, which 
typically require users to solve a text recognition task. The state of 
the  art  of  CAPTCHA  design  suggests  that  such  text-based 
schemes  should  rely  on  segmentation  resistance  to  provide 
security  guarantee,  as  individual  character  recognition  after 
segmentation can be solved with a high success rate by standard 
methods such as neural networks.  
In this paper, we present new character segmentation techniques 
of general value to attack a number of text CAPTCHAs, including 
the  schemes  designed  and  deployed  by  Microsoft,  Yahoo  and 
Google.  In  particular,  the  Microsoft  CAPTCHA  has  been 
deployed  since  2002  at  many  of  their  online  services  including 
Hotmail, MSN and Windows Live. Designed to be segmentation-
resistant, this scheme has been studied and tuned by its designers 
over  the  years.  However,  our  simple  attack  has  achieved  a 
segmentation success rate of higher than 90% against this scheme. 
It took on average ~80 ms for the attack to completely segment a 
challenge  on  an  ordinary  desktop  computer.  As  a  result,  we 
estimate  that  this  CAPTCHA  could  be  instantly  broken  by  a 
malicious bot with an overall (segmentation and then recognition) 
success rate of more than 60%. On the contrary, the design goal 
was  that  automated  attacks  should  not  achieve  a  success  rate  of 
higher  than  0.01%.  For  the  first  time,  this  paper  shows  that 
CAPTCHAs  that  are  carefully  designed  to  be  segmentation-
resistant are vulnerable to novel but simple attacks.  
Categories and Subject Descriptors 
D.4.6 Security and Protection, H.1.2 User/Machine Systems. 
General Terms 
Security, Human Factors. 
Keywords 
CAPTCHA,  robustness,  segmentation  attack,  usability,  Internet 
security 
1.  INTRODUCTION 
A CAPTCHA (Completely Automated Public Turing Test to Tell 
Computers  and  Humans  Apart)  is  a  program  that  generates  and 
grades tests that are human solvable, but intend to be beyond the 
capabilities of current computer programs [1]. This technology is 
now almost a standard security mechanism for defending against 
Permission  to  make  digital  or  hard  copies  of  all  or  part  of  this  work  for 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that copies 
bear this notice and the full citation on the first page. To copy otherwise, or 
republish, to post on servers or to redistribute to lists, requires prior specific 
permission and/or a fee. 
CCS’08, October 27–31, 2008, Alexandria, Virginia, USA. 
Copyright 2008 ACM 978-1-59593-810-7/08/10 ...$5.00. 
Ahmad Salah El Ahmad 
School of Computing Science  
Newcastle University, UK  
PI:EMAIL 
undesirable  or  malicious  Internet  bot  programs,  such  as  those 
spreading junk emails and those grabbing thousands of free email 
accounts  instantly.  It  has  found  widespread  application  on 
numerous  commercial  web  sites  including  Google,  Yahoo,  and 
Microsoft’s MSN. 
The  most  widely  used  CAPTCHAs  are  the  so-called  text-based 
schemes,  which  rely  on  sophisticated  distortion  of  text  images 
aimed at rendering them unrecognisable to the state of the art of 
pattern  recognition  methods.  The  popularity  of  such  schemes  is 
due to the fact that they have many advantages [ 4], for example, 
being intuitive to users world-wide (the user task performed being 
just character recognition), having little localization issues (people 
in  different  countries  all  recognise  Roman  characters),  and  of 
good  potential  to  provide  strong  security  (e.g.  the  space  a  brute 
force attack has to search can be huge, if the scheme is properly 
designed).  
A  good  CAPTCHA  must  be  not  only  human  friendly,  but  also 
robust enough to resist to computer programs that attackers write 
(or  challenges). 
to  automatically  pass  CAPTCHA 
(CAPTCHA 
research 
in 
the  young 
interdisciplinary  field  of  usable  security,  which  has  gained 
increasing attentions in the recent years.)  
tests 
topic 
is  an 
ideal 
Table 1. Recognition rate for individual characters under 
different distortions (all data in this table are taken from [6]) 
Characters under typical distortions  Recognition rate 
~100% 
96+% 
100% 
98% 
~100% 
95+% 
Early  research  suggested  that  computers  are  very  good  at 
recognising single characters, even if these characters are highly 
distorted [6]. Table 1 shows characters under typical distortions, 
along  with  success  rates  that  a  neural  network  can  achieve  to 
recognise  them.  It  is  established  in  [6]  that  if  the  positions  of 
characters  are  known  in  challenge  images  generated  by  a 
CAPTCHA, then breaking this scheme is just a pure recognition 
problem,  which  is  a  trivial  task  with  standard  machine  learning 
techniques such as neural networks [12].  
However,  when  the  location  of  characters  in  a  CAPTCHA 
challenge is not known a-priori (e.g. in the following images taken 
from [4]),  state of the art (including machine learning) methods 
do not work well in locating the characters, let alone recognising 
them.  
The problem of identifying character locations in the right order, 
or segmentation, is still a challenging problem in the fields such as 
handwriting  recognition  and  computer  vision.  In  general, 
segmentation 
is  computationally  expensive,  and  often  a 
combinatorially hard problem [4].  
The  state  of  the  art  of  CAPTCHA  design  suggests  that  the 
robustness of text-based schemes should rely on the difficulty of 
finding where the character is (segmentation), rather than which 
character  it  is  (recognition)  [11,  3,  4,  5,  6].  That  is,  such 
CAPTCHAs should be segmentation-resistant. In other words, if 
breaking a (text-based) CAPTCHA can be successfully reduced 
to  a  problem  of  individual  character  recognition,  then  this 
scheme is effectively broken.  
In this paper, we report new character segmentation techniques of 
general  value  to  attack  a  number  of  text  CAPTCHAs,  including 
the  schemes  designed  and  deployed  by  Microsoft,  Yahoo  and 
Google.  
First,  we  present  a  novel  segmentation  attack  on  a  high-profile 
Microsoft CAPTCHA. Designed to be segmentation resistant, this 
scheme was a collaborative effort of an interdisciplinary team of 
diverse expertise in Microsoft including document processing and 
understanding,  machine  learning,  HCI  and  security.  In  fact,  the 
widely  accepted  “segmentation  resistance”  principle  was 
established by this team.  
This CAPTCHA has been deployed in many of Microsoft’s online 
services  including  Hotmail,  MSN  and  Windows  Live  for  years, 
with its first version used in Hotmail’s user registration system in 
2002  [11].  Ever  since,  the  scheme  has  undergone  extensive 
improvement in terms of both robustness [3, 4, 6] and usability [4, 
5]. Microsoft has also filed three US patent applications to protect 
the underlying technology [8]. Clearly, this scheme was carefully 
designed.  
However,  our  simple  and  low-cost  attack  has  achieved  a 
segmentation success rate of higher than 90% on the latest version 
of  this  Microsoft  CAPTCHA  (as  deployed  in  the  summer  of 
2007)1. For convenience, we will refer to this CAPTCHA as the 
MSN  scheme  in  this  paper.  With  the  aid  of  this  segmentation 
attack, we estimate that the MSN scheme can be broken with an 
1  The  work  was  done  in  the  summer  of  2007.  We  notified 
Microsoft  the  weakness  of  their  CAPTCHA  in  Sept,  2007. 
Responding  to  their  request,  we  held  this  attack  confidential 
until  April  10, 2008.  To  the  best  of  our  knowledge this  is the 
first effective segmentation attack on the scheme.  
overall (segmentation and then recognition) success rate of about 
60%.  In  contrast,  its  design  goal  was  that  “automatic  scripts 
should not be more successful than 1 in 10,000 (0.01%)” attempts 
[4].  Furthermore,  although the MSN  scheme  was  believed  to  be 
“extremely  difficult  and  expensive  for  computers  to  solve” 
because  of  the  difficulty  of  segmentation  that  its  designers 
introduced  [5],  our  attack  completely  segmented  each  challenge 
essentially  instantly.  To  the  best  of  our  knowledge,  this  for  the 
first time shows that a CAPTCHA that was carefully designed by 
serious professionals to be segmentation-resistant is nevertheless 
vulnerable to novel but simple attacks. 
Next,  we  show  that  our  attack  is  also  applicable  to  other  text 
CAPTCHAs,  including  the  schemes  designed  by  Yahoo  and 
Google. In particular, a variant of our attack has achieved a high 
segmentation  rate  on  a  Yahoo  CAPTCHA,  which  in  theory  can 
lead to the most successful attack to date on the scheme. 
The  detailed  structure  of  this  paper  is  as  follows.  Section  2 
discusses  related  work.  Section  3  reviews  the  MSN  scheme. 
Sections  4  and  5  detail  our  attack  and  its  results  respectively. 
Section 6 discusses the applicability of our attack. We highlight a 
variant  of  the  attack  that  we  have  designed  for  the  Yahoo 
CAPTCHA.  We  also  show  that  a  component  of  the  attack  is 
applicable  to  a  Google  CAPTCHA  and  multiple  other  schemes. 
Section  7  discusses  representative  “segmentation  resistance” 
mechanisms  implemented  to  date,  uncovering  more  real-life 
examples of security and usability failures in this area. Section 8 
summarises this paper and offer conclusions. 
By attacking well-designed, deployed CAPTCHAs, we learn how 
they  could  fail  and  could  be  improved.  Overall,  this  paper 
contributes to the immediate improvement of the security of the 
CAPTCHAs that were widely deployed by Microsoft, Yahoo and 
Google, as well as other schemes exhibiting similar weaknesses. It 
also contributes to furthering our understanding of the design of 
CAPTCHAs  -  the  current  collective  knowledge  on  this  topic  is 
very 
limited  -  for  example,  which  segmentation  resistant 
mechanisms conceived to date are weak but which appears to be 
secure against currently available attacks.  
2.  RELATED WORK 
It  was  reported on  Feb  8,  2008 [17]  that  a  surge  of  spam  being 
sent  from  Windows  Live  accounts  was  observed,  and  a  bot  that 
could sign up Live Mail accounts was analysed by a security firm 
[18] to understand what was behind this phenomenon. However, 
in this reported case, the CAPTCHA decoding was not done by 
the  bot,  but  at  a  remote  server.  It  is  unclear  whether  there  was 
cheap human labor behind the scene feeding CAPTCHA answers 
manually.  On  the  other  hand,  even  if  an  automated  attack  was 
launched by the server, to date, no technical detail of this attack 
has been revealed at all. Moreover, the success rate observed for 
the bot was only about 30-35% [18]. 
The robustness of text-based CAPTCHA has so far been studied 
mainly  just  in  the  computer  vision  and  document  analysis  and 
recognition communities. For example, Mori and Malik [ 9] have 
broken  the  EZ-Gimpy  (92%  success)  and  the  Gimpy  (33% 
success)  CAPTCHAs  with  sophisticated  object  recognition 
algorithms.  Moy  et  al  [ 10]  developed  distortion  estimation 
techniques to break EZ-Gimpy with a success rate of 99% and 4-
letter Gimpy-r with a success rate of 78%. Chellapilla and Simard 
[3] attacked a number of visual CAPTCHAs taken from the web 
with machine learning algorithms, achieving a success rate from 
4.89% to 66.2%. 
Our  own  early  work  [14]  has  broken  a  number  of  CAPTCHAs 
(including  those  hosted  at  Captchaservice.org,  a  web  service 
specialised for CAPTCHA generation) with almost 100% success 
by  simply  counting  the  number  of  pixels  of  each  segmented 
character,  although  these  schemes  were  all  resistant  to  the  best 
OCR software on the market. In contrast to other work that relied 
on sophisticated computer vision or machine learning algorithms, 
this  study  used  only  simple  pattern  recognition  algorithms  but 
exploited fatal design errors that were discovered in each scheme. 
This  is  one  of  the  few  work  examining  the  robustness  of 
CAPTCHA from the security angle. 
PWNtcha [7] is an excellent web page that aims to “demonstrate 
the inefficiency of many CAPTCHA implementations”. It briefly 
comments  on 
the  weaknesses  of  about  a  dozen  simple 
CAPTCHAs,  which  were  claimed  to  be  broken  with  a  success 
ranging from 49% to 100%. However, no technical detail of the 
attacks was publicly available. Many more CAPTCHAs were also 
commented at this site. For example, both the MSN scheme and a 
Yahoo CAPTCHA that will be discussed in this paper (i.e. Yahoo 
Scheme  1  in  Section  6.1)  were  regarded  by  this  site  as  “very 
good” and difficult to break. 
Two interesting algorithms were proposed in [19] to amplify the 
skill  gap  between  humans  and  computers.  The  algorithms  could 
improve  systems  security  for  text-based  CAPTCHAs,  but  are 
orthogonal to this paper. (In this paper, we do not discuss other 
types  of  CAPTCHAs  such  as  image-based  ones.  For  those  who 
are  interested,  an  overview  of  image-based  CAPTCHAs  can  be 
found in [19].) 
Usability  and  robustness  are  two  fundamental  issues  with 
CAPTCHAs, and they often interconnect with each other. In [21], 
we  examined  usability  issues  that  should  be  considered  and 
addressed  in  the  design  of  CAPTCHAs,  and  discussed  subtle 
implications some of the issues can have on robustness. 
One  last  note:  a  survey  on  CAPTCHAs  research  (including  the 
design of most early notable schemes) can be found in [ 13], and 
the  limitations  of  defending  against  bots  with  CAPTCHAs 
(including protocol-level attacks) were discussed in [ 15]. 
3.  THE MSN SCHEME 
Fig  1  shows  some  sample  challenges  generated  by  the  MSN 
CAPTCHA  scheme.  We  have  no  access  to  the  codebase  of  the 
MSN  scheme,  so  we  collected  from  Microsoft’s  website  100 
random  samples  that  were  generated  in  real  time  online  at  [16]. 
By studying [4, 5] and the samples we collected, we observed that 
the MSN scheme (as deployed) has the following characteristics.  
Fig 1. The MSN CAPTCHA: 4 sample challenges. 
• 
Eight characters are used in each challenge;  