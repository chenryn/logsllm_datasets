I am webpacking the cheerio library and hit an error in its index.js:
    ERROR in ./~/cheerio/index.js
    Module not found: Error: Cannot resolve file or directory ./package in MYPROJECT\node_modules\cheerio.
     @ ./~/cheerio/index.js 13:18-38
The code:
    exports.version = require('./package').version;
It's obviously just trying to load package.json from the same directory. The
Node Modules documentation states:
> If the exact filename is not found, then node will attempt to load the
> required filename with the added extension of .js, .json, and then .node.
So, if we expect that npm packages are going to make use of this with vanilla
'require,' I think webpack should make the json loader default. I believe that
would mean changing:
    options.resolve.extensions = ["", ".node", ".er.js", ".js"];
in https://github.com/webpack/enhanced-require/blob/master/lib/require.js
to:
    options.resolve.extensions = ["", ".node", ".er.js", ".js", ".json"];
Right?