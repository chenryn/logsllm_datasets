# Checklist
- I have verified that the issue exists against the `master` branch of Celery.
- This has already been discussed in the discussion group.
- I have read the relevant section in the [contribution guide](link) on reporting bugs.
- I have checked the [issues list](link) for similar or identical bug reports.
- I have checked the [pull requests list](link) for existing proposed fixes.
- I have reviewed the commit log to determine if the bug was already fixed in the master branch.
- I have included all related issues and possible duplicate issues in this report (if none, check this box anyway).

## Mandatory Debugging Information
- I have included the output of `celery -A proj report` in the issue. If unable to do so, I have specified the affected Celery version.
- I have included the contents of `pip freeze` in the issue.
- I have listed all the versions of external dependencies required to reproduce this bug.

## Optional Debugging Information
- I have attempted to reproduce the issue on more than one Python version and/or implementation.
- I have tried reproducing the issue with different message brokers and/or result backends.
- I have tested the issue on multiple versions of the message broker and/or result backend.
- I have attempted to reproduce the issue on more than one operating system.
- I have tried reproducing the issue with different worker pools.
- I have tested the issue with autoscaling, retries, ETA/Countdown, and rate limits disabled.
- I have tried reproducing the issue after downgrading and/or upgrading Celery and its dependencies.

## Related Issues and Possible Duplicates
### Related Issues
- #6672

### Possible Duplicates
- None

## Environment & Settings
- **Celery version**: 5.1.2
- **`celery report` Output**:
  ```
  software -> celery:5.1.2 (sun-harmonics) kombu:5.1.0 py:3.6.8
              billiard:3.6.4.0 py-amqp:5.0.6
  platform -> system:Darwin arch:64bit
              kernel version:20.5.0 imp:CPython
  loader   -> celery.loaders.app.AppLoader
  settings -> transport:amqp results:django-db
  accept_content: ['pickle']
  result_serializer: 'pickle'
  task_serializer: 'pickle'
  ```

## Steps to Reproduce
### Required Dependencies
- **Minimal Python Version**: N/A or Unknown
- **Minimal Celery Version**: N/A or Unknown
- **Minimal Kombu Version**: N/A or Unknown
- **Minimal Broker Version**: N/A or Unknown
- **Minimal Result Backend Version**: N/A or Unknown
- **Minimal OS and/or Kernel Version**: N/A or Unknown
- **Minimal Broker Client Version**: N/A or Unknown
- **Minimal Result Backend Client Version**: N/A or Unknown

### Python Packages
- **`pip freeze` Output**:
  ```
  <output of pip freeze>
  ```

### Other Dependencies
- N/A

### Minimally Reproducible Test Case
Prerequisites: Set up a Django project as described in the official Celery documentation.

```python
@app.task
def sleep_task(user_object):
    import time
    time.sleep(100000)

# In Django shell
sleep_task.delay(User.objects.first())
```

## Expected Behavior
The `celery -A proj inspect active` command should return the standard inspect active output with deserialized Django objects, similar to Celery 4.x.

```plaintext
->  celery@xyz: OK
    * {'id': '81f641db-8ba9-45c8-8d1e-e8cd52c50de1', 'name': 'proj.tasks.sleep_task', 'args': (,), 'kwargs': {}, 'type': 'proj.tasks.sleep_task', 'hostname': 'celery@xyz', 'time_start': 1633008451.4256349, 'acknowledged': True, 'delivery_info': {'exchange': '', 'routing_key': 'celery', 'priority': 0, 'redelivered': False}, 'worker_pid': 36039}
1 node online.
```

## Actual Behavior
Instead of receiving the active task data, `celery -A proj inspect active` raises a `DecodeError`.

```plaintext
Traceback (most recent call last):
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/kombu/serialization.py", line 42, in _reraise_errors
    yield
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/kombu/serialization.py", line 255, in loads
    return decode(data)
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/kombu/serialization.py", line 327, in unpickle
    return pickle_loads(str_to_bytes(s))
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/kombu/serialization.py", line 51, in pickle_loads
    return load(BytesIO(s))
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/django/db/models/base.py", line 1828, in model_unpickle
    model = apps.get_model(*model_id)
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/django/apps/registry.py", line 198, in get_model
    self.check_models_ready()
  File "/Users/xyz/.virtualenvs/proj/lib/python3.6/site-packages/django/apps/registry.py", line 140, in check_models_ready
    raise AppRegistryNotReady("Models aren't loaded yet.")
django.core.exceptions.AppRegistryNotReady: Models aren't loaded yet.
During handling of the above exception, another exception occurred:
...
kombu.exceptions.DecodeError: Models aren't loaded yet.
```