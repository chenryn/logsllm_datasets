不同的浏览器会以不同的方式来存储cookie。网景的Navigator会将cookie存储在
265 一个名为cookies.txt的文本文件中。例如：
# Netscape HTTP Cookie File
# http://www.netscape.com/newsref/std/cookie_spec.html
# This is a generated file! Do not edit.
#
# domain allh path secure expires name value
www.fedex.com FALSE / FALSE 1136109676 cc /us/
.bankofamericaonline.com TRUE / FALSE 1009789256 state CA
.cnn.com TRUE / FALSE 1035069235 SelEdition www
secure.eepulse.net FALSE /eePulse FALSE 1007162968 cid %FE%FF%002
www.reformamt.org TRUE /forum FALSE 1033761379 LastVisit 1003520952
www.reformamt.org TRUE /forum FALSE 1033761379 UserName Guest
...
文本文件中的每一行都代表一个cookie。有7个用tab键分隔的字段。
• domain（域）
cookie的域。
• allh
是域中所有的主机都获取cookie，还是只有指定了名字的主机获取。
• path（路径）
域中与cookie相关的路径前缀。
280 ｜ 第11章
• secure（安全）
是否只有在使用SSL连接时才发送这个cookie。
• expiration（过期）
从格林尼治标准时间1970年1月1日00:00:00 开始的cookie过期秒数。
• name（名字）
cookie变量的名字。
• value（值）
cookie变量的值。
2. 微软Internet Explorer的cookie
微软的Internet Explorer将cookie存储在高速缓存目录下独立的文本文件中。可以
通过浏览这个目录来查看cookie，如图11-4所示。Internet Explorer中cookie文件
格式是特有的，但很多字段都很容易理解。cookie一个接一个地存储在文件中，每
个cookie都由多行构成。
名字=“session-id”
可以在一个文本
值=“002-9351993-5692007”
查看器程序中打
开MSIE cookie 域/路径=“amazon.com”
其他属性的特有格式
cookie
每个cookie文件中都有某个特
cookie 定站点的cookie，这些cookie
MSIE将cookie与其他缓存对象存储在相 一个接一个地存储在文本行中
同的位置
图11-4 Internet Explorer的cookie存储在缓存目录下独立的文本文件中
客户端识别与cookie机制 ｜ 281
文件中每个cookie的第一行中都包含了cookie的变量名。下一行是变量的值。第三
行是域和路径。剩下的行就是一些特有的数据，可能包含日期和一些标记。
11.6.4 不同站点使用不同的cookie
浏览器内部的cookie罐中可以有成百上千个cookie，但浏览器不会将每个cookie
都发送给所有的站点。实际上，它们通常只向每个站点发送2～3个cookie。原因
如下。
• 对所有这些cookie字节进行传输会严重降低性能。浏览器实际传输的cookie字
节数要比实际的内容字节数多！
• cookie中包含的是服务器特有的名值对，所以对大部分站点来说，大多数cookie
都只是无法识别的无用数据。
• 将所有的cookie发送给所有站点会引发潜在的隐私问题，那些你并不信任的站
266 点也会获得你只想发给其他站点的信息。
总之，浏览器只向服务器发送服务器产生的那些cookie。joes-hardware.com产生的
cookie会被发送给joes-hardware.com，不会发送给bobs-books.com或marys-movies.
com。
很多Web站点都会与第三方厂商达成协议，由其来管理广告。这些广告被做得像
Web站点的一个组成部分，而且它们确实发送了持久cookie。用户访问另一个由同
一广告公司提供服务的站点时，（由于域是匹配的）浏览器就会再次回送早先设置的
持久cookie。营销公司可以将此技术与Referer首部结合，暗地里构建一个用户档
案和浏览习惯的详尽数据集。现代的浏览器都允许用户对隐私特性进行设置，以限
制第三方cookie的使用。
1. cookie的域属性
产生cookie的服务器可以向Set-Cookie响应首部添加一个Domain属性来控制
哪些站点可以看到那个cookie。比如，下面的HTTP响应首部就是在告诉浏览器将
267 cookie user="mary17"发送给域".airtravelbargains.com"中的所有站点：
Set-cookie: user="mary17"; domain="airtravelbargains.com"
如果用户访问的是www.airtravelbargains.com、specials.airtravelbargains.com或任意
以.airtravelbargains.com结尾的站点，下列Cookie首部都会被发布出去：
Cookie: user="mary17"
282 ｜ 第11章
2. cookie路径属性
cookie规范甚至允许用户将cookie与部分Web站点关联起来。可以通过Path属性
来实现这一功能，在这个属性列出的URL路径前缀下所有cookie都是有效的。
例如，某个Web服务器可能是由两个组织共享的，每个组织都有独立的cookie。
站点www.airtravelbargains.com可能会将部分Web站点用于汽车租赁——比如，
http://www.airtravelbargains.com/autos/——用一个独立的cookie来记录用户喜欢的
汽车尺寸。可能会生成一个如下所示的特殊汽车租赁cookie：
Set-cookie: pref=compact; domain="airtravelbargains.com"; path=/autos/
如果用户访问http://www.airtravelbargains.com/specials.html，就只会获得这个cookie：
Cookie: user="mary17"
但如果访问http://www.airtravelbargains.com/autos/cheapo/index.html，就会获得这
两个cookie：
Cookie: user="mary17"
Cookie: pref=compact
因此，cookie就是由服务器贴到客户端上，由客户端维护的状态片段，只会回送给
那些合适的站点。下面我们来更仔细地看看cookie的技术和标准。
11.6.5 cookie成分
现在使用的cookie规范有两个不同的版本：cookies版本0（有时被称为Netscape
cookies）和 cookies 版本 1（RFC 2965）。cookies 版本 1 是对 cookies 版本 0 的扩
展，应用不如后者广泛。
cookie规范版本0和版本1都不是作为HTTP/1.1规范的一部分提供的。表11-2对
两个主要的附属文档进行了总结，这两个文档对cookie的使用进行了很好的描述。
表11-2 cookie规范
标 题 描 述 位 置
持久客户端状态： 最初的Netscape cookie标准 http://home.netscape.com/newsref/std/
HTTP cookies cookie_spec.html
RFC 2965：HTTP 2000年10月的cookie标准，废弃 http://www.ietf.org/rfc/rfc2965.txt
状态管理机制 了RFC 2109
268
客户端识别与cookie机制 ｜ 283
11.6.6 cookies版本0（Netscape）
最初的cookie规范是由网景公司定义的。这些“版本0”的cookie定义了Set-
Cookie响应首部、cookie请求首部以及用于控制cookie的字段。版本0的cookie
看起来如下所示：
Set-Cookie: name=value [; expires=date] [; path=path] [; domain=domain]
[; secure]
Cookie: name1=value1 [; name2=value2] ...
1. 版本0的Set-Cookie首部
Set-Cookie首部有一个强制性的cookie名和cookie值。后面跟着可选的cookie
属性，中间由分号分隔。表11-3描述了Set-Cookie字段。
表11-3 版本0（网景）的Set-Cookie属性
Set-Cookie属性 描述及实例
NAME=VALUE 强制的。NAME和VALUE都是字符序列，除非包含在双引号内，否则不包括分
号、逗号、等号和空格。Web服务器可以创建任意的NAME=VALUE关联，在
后继对站点的访问中会将其送回给Web服务器：
Set-Cookie: customer=Mary
Expires 可选的。这个属性会指定一个日期字符串，用来定义cookie的实际生存期。一
旦到了过期日期，就不再存储或发布这个cookie了。日期的格式为：
Weekday, DD-Mon-YY HH:MM:SS GMT
唯一合法的时区为GMT，各日期元素之间的分隔符一定要是长划线。如果没
有指定Expires， cookie就会在用户会话结束时过期：
Set-Cookie: foo=bar; expires=Wednesday, 09-Nov-99 23:12:40
GMT
Domain 可选的。浏览器只向指定域中的服务器主机名发送cookie。这样服务器就将
cookie限制在了特定的域中。acme.com域就与 anvil.acme.com和 shipping.
crate.acme.com相匹配，但与www.cnn.com就不匹配了。
只有指定域中的主机才能为一个域设置cookie，这些域中至少要有两个或三个
句号，以防止出现.com、.edu和 va.us等形式的域。这里列出了一组固定的特
定高层域，落在这个范围中的域只需要两个句号。所有其他域都至少需要三个
句号。特定的高层域包括：.com、.edu、.net、.org、.gov、.mil、.int、.biz、.
info、.name、.museum、.coop、.aero和.pro。
如果没有指定域，就默认为产生Set-Cookie响应的服务器的主机名：
Set-Cookie: SHIPPING=FEDEX; domain="joes-hardware.com"
284 ｜ 第11章
（续）
Set-Cookie属性 描述及实例
Path 可选的。通过这个属性可以为服务器上特定的文档分配cookie。如果Path属性
是一个URL路径前缀，就可以附加一个cookie。路径/foo与 /foobar和 /foo/
bar.html相匹配。路径“/”与域名中所有内容都匹配。
如果没有指定路径，就将其设置为产生Set-Cookie响应的URL的路径：
Set-Cookie: lastorder=00183; path=/orders
Secure 可选的。如果包含了这一属性，就只有在HTTP使用SSL安全连接时才会发送
cookie：
Set-Cookie: private_id=519; secure 269
2. 版本0的Cookie首部
客户端发送请求时，会将所有与域、路径和安全过滤器相匹配的未过期cookie都发
送给这个站点。所有cookie都被组合到一个Cookie首部中：
Cookie: session-id=002-1145265-8016838; session-id-time=1007884800
11.6.7 cookies版本1（RFC 2965）
RFC 2965（以前的RFC 2109）定义了一个cookie的扩展版本。这个版本1标准引
入了Set-Cookie2首部和Cookie2首部，但它也能与版本0系统进行互操作。
RFC 2965 cookie标准比原始的网景公司的标准略微复杂一些，还未得到完全的支
持。RFC 2965 cookie的主要改动包括下列内容。
• 为每个cookie关联上解释性文本，对其目的进行解释。
• 允许在浏览器退出时，不考虑过期时间，将cookie强制销毁。
• 用相对秒数，而不是绝对日期来表示cookie的Max-Age。
• 通过URL端口号，而不仅仅是域和路径来控制cookie的能力。
• 通过Cookie首部回送域、端口和路径过滤器（如果有的话）。
• 为实现互操作性使用的版本号。
• 在Cookie首部从名字中区分出附加关键字的$前缀。
cookie版本1的语法如下所示： 270
set-cookie = "Set-Cookie2:" cookies
cookies = 1#cookie
cookie = NAME "=" VALUE *(";" set-cookie-av)
NAME = attr
VALUE = value
set-cookie-av = "Comment" "=" value
客户端识别与cookie机制 ｜ 285
| "CommentURL" "="  http_URL 
| "Discard"
| "Domain" "=" value
| "Max-Age" "=" value
| "Path" "=" value
| "Port" [ "="  portlist  ]
| "Secure"
| "Version" "=" 1*DIGIT
portlist = 1#portnum
portnum = 1*DIGIT
cookie = "Cookie:" cookie-version 1*((";" | ",") cookie-
value)
cookie-value = NAME "=" VALUE [";" path] [";" domain] [";" port]
cookie-version = "$Version" "=" value
NAME = attr
VALUE = value
path = "$Path" "=" value
domain = "$Domain" "=" value
port = "$Port" [ "="  value  ]
cookie2 = "Cookie2:" cookie-version
1. 版本1的Set-Cookie2首部
版本1的cookie标准比网景公司标准的可用属性要多。表11-4对这些属性做了快
速汇总。更详细的解释请参见RFC 2965。
表11-4 版本1（RFC 2965）的Set-Cookie2属性
Set-Cookie2属性 描述及实例
NAME=VALUE 强制的。Web服务器可以创建任意的NAME=VALUE关联，可以在后继对站点
的访问中将其发回给Web服务器。“$”是保留字符，所以名字一定不能以它
开头
Version 强制的。这个属性的值是一个整数，对应于cookie规范的版本。RFC 2965为