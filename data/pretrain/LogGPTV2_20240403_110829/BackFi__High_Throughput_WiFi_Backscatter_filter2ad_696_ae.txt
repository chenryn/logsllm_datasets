2 rate code with
BPSK modulation with symbol switching rate of 1 Mbps as
reference communication parameters to compute the refer-
ence EPB. Based on the datasheets of the referred parts we
computed the EPB for this reference case to be 3.15 pJ/bit.
Also, we have excluded the EPB associated with the en-
ergy detection logic as we believe their contribution to the
overall EPB will be insigniﬁcant. The energy detector is
based on prior work on wake up radio [40, 31]. The power
consumption of this detector is around 100 nW. The energy
detection needs to be done once for every backscatter packet
and lasts for 16 µs. A typical backscatter packet will have
1000 bits of information in it. Based on these information
the EPB contributed by the detection logic is in femtojoules
per bits which is practically negligible. The wake up radio
can detect input signals as weak as −41 dBm, which pro-
vides sufﬁcient range to wake up the tag radio even at a dis-
tance of 5 m from the AP. The same detection circuitry can
be used to implement the downlink communication to the tag
from the AP reader. The protocol for downlink communica-
tion has been described in prior work [27]. BackFi reuses
this design for the downlink and provides similar through-
puts of 20 Kbps. Since our focus in this work is on the up-
link design we will evaluate it in detail in the next section by
using REPB given by Fig. 8 as one of the metrics.
Figure 7: Table provides BackFi tag’s relative EPB and corre-
sponding data rate for different choices of modulation, coding and
tag symbol switching rate.
6. EVALUATION
We evaluate BackFi’s design in an indoor environment in
our lab with rich multi-path reﬂections and dense WiFi de-
ployment. Our evaluation reveals the following:
• BackFi provides three orders of magnitude higher through-
put, an order of magnitude higher range compared to the
best known WiFi backscatter system [27, 25]. Speciﬁcally
BackFi can provide a throughput of 5 Mbps at 1m range
and a throughput of 1 Mbps at 5 m range from the BackFi
AP.
• BackFi’s throughput and range are comparable to tradi-
tional RFID platforms such as Ekhonet [55]. The key ben-
eﬁt of course is that BackFi is a WiFi back-scatter system
and does not need dedicated reader infrastructure or fre-
quency spectrum.
• BackFi has negligible (less than 5%) impact on the stan-
dard WiFi network’s throughput even when the IoT sensor
is concurrently backscattering WiFi signals.
6.1 Throughput, Range, and REPB
First, we evaluate the trade-off between throughput, dis-
tance, and REPB for BackFi. For any given distance, BackFi
can deliver a set of throughputs by picking the appropriate
combination of symbol switching rate, modulation, and cod-
ing rate. Each choice of symbol switching rate and modu-
lation has a different throughput as well as different REPB
as described in Section 5.2.1. Fig. 7 shows the REPB and
throughput for every combination of symbol switching rate,
modulation, and coding rate. The EPB for each of the these
entries can be calculated simply by multiplying REPB and
EPB of the reference parameters ( BPSK, 1/2 rate with sym-
bol switching rate of 1 MHz).
Note that while throughput monotonically increases from
left to right in the table, REPB does not. For example, at
an IoT sensor symbol switching rate of 1 MSPS, going from
(QPSK, 1/2) to (QPSK, 2/3) results in a decrease in REPB.
The reason is that energy needed to switch from 1/2 rate to
2/3 rate is not signiﬁcant compared to the other energy con-
tributions for this technology node and the increased through-
put causes the REPB ratio to decrease. However, if at a cer-
tain range if the link SNR is such that both (QPSK, 1/2) and
(QPSK, 2/3) encoded backscatter signals can be decoded at
Symbol switching rateMetricBPSK,1/2 rateBPSK,2/3 rateQPSK,1/2 rateQPSK,2/3 rate16PSK,1/2 rate16PSK,2/3 rate10 KHzREPB29.216228.1984 31.251729.725040.411736.5951Thrput(Kbps)56.671013.332026.66100 KHzREPB3.56513.3333 4.0287 3.68106.1151 5.2458Thrput(Kbps)5066.7100133.3200266.6500 KHzREPB1.28501.1231 1.6089 1.36603.0665 2.4592Thrput(Mbps).25.33.5.6711.331 MHzREPB1.00000.8468 1.3064 1.0766 2.6855 2.1109Thrput(Mbps).5.6711.3322.672 MHzREPB0.85750.70861.1552 0.9319 2.49491.9367Thrput(Mbps)11.3322.6745.332.5 MHzREPB0.82900.68101.1250 0.9030 2.4568 1.9019Thrput(Mbps)1.251.672.53.3356.67292Figure 8: Relationship showing range of BackFi and maximum
possible data rate possible for two different training times. At 7
meter, if we increase the preamble duration from 32 µsec to 96
µsec, it provides 10× improvement in the throughput.
the reader, then BackFi would never use (QPSK, 1/2). The
rate adaptation algorithm would always pick the modulation,
coding rate and symbol switching rate combination with the
lowest REPB since the most precious resource here is en-
ergy, whether it comes from harvesting or batteries.
Next, we evaluate the throughout and range performance
in our testbed. For these experiments we use our WARP
based BackFi implementation for the BackFi AP to decode
the IoT sensor’s backscatter signals. The BackFi AP and the
WiFi client are placed such that the maximum WiFi bit rate
is 54 Mbps. They are conﬁgured to run on WiFi channel-6
in the 2.4 GHz range. The results for other WiFi channels
are similar and not presented due to lack of space.
Impact of Range on Throughput: The BackFi’s IoT sensor
is placed at distances ranging from 0.5 m to 7 m. For each
distance, we cycle the IoT sensor through all combinations
of symbol switching rates and modulations, and then cal-
culate throughput for combinations that can be decoded at
the reader. In each iteration of the experiment, the BackFi’s
AP reader transmits 1 to 4 ms long packet at 24 Mbps bi-
trate including the backscatter start sequence as discussed in
Sec. 4.1. The IoT sensor backscatters for the entire dura-
tion of the packet and stops when its detection logic signals
the end of the transmission. We repeat the experiment 20
times at each combination of distance and BackFi through-
put. Fig. 8 plots the maximum throughput achieved as a
function of range for two different preamble duration of 32
µs and 96 µs.
Results: As we can see, BackFi is able to achieve a max-
imum throughout of around 6.67 Mbps at a distance of 50
cm. For more practical ranges, BackFi achieves a through-
put of 1 Mbps at a distance of 5 m and around 5 Mbps at a
distance of 1 m. This performance is three orders of magni-
tude better in throughput at the same range as compared to
the best known WiFi backscatter system [27, 25]. Note, at 7
m the increased preamble duration of 96 µs shows a 10× in-
crease in the throughput. This is due to the fact that a shorter
preamble results in an inaccurate estimate of the forward-
backward channel which limits the SNR of the backscattered
signal. Hence, for 32 µs preamble, the IoT sensor compen-
Figure 9: Each plot is BackFi’s REPB for corresponding through-
put achieved for the range varying between 0.5 m to 5 m. For exam-
ple, we see that at a distance of 2 m to achieve 4 Mbps throughput
we need to spend much more energy per bit than at a distance of
1m. Also, the vertical line indicates the maximum throughput that
is achievable at a given distance between the tag and the reader.
sates this loss of SNR by increasing the symbol period to
10×, which in turn reduces the throughput.
To analyze the energy efﬁciency that BackFi link achieves
for different combinations of throughput and range, we plot
REPB as a function of throughput achieved for different ranges
in Fig. 9. To read this graph, note that for every value of
range we studied (0.5 m, 1 m, 2 m, 4 m, 5 m), we have a
different curve (with a different color). Now for each partic-
ular range, we check what combinations of tag symbol rate,
modulation and coding rates employed at the tag can be suc-
cessfully decoded at the BackFi AP. For each throughput,
we look up all combination that achieve it, and their REPB
from Table. 7 and choose a minimum REPB and plot a point.
All the points for that particular range are now joined by
lines to show the feasible points for each range.
Fig. 9 shows that for a given range, throughput increases
are obtained by either increasing the symbol switching rate,
moving to a denser modulation or higher coding rate or some
combination of all three. Each one of these increases energy
consumption as expected, which leads to the step increases
in REPB. Of course certain throughputs simply cannot be
supported at a given range because the link’s SNR is not
strong enough to decode the data. The vertical line indicates
the maximum throughput that can be achieved for a given
distance between the tag and the BackFi’s reader. Hence we
see the curves stopping after a certain throughput for differ-
ent ranges. Overall REPB lies between 0.5 to 3 for most
combinations.
Next, we plot how REPB changes as a function of range
assuming we want the same throughput. For this experiment
we pick two throughputs, 1.25 Mbps and 5 Mbps, for which
we want to optimize the communication link. For each value
of range, we pick the combination of tag symbol rate, mod-
ulation and coding rate that can achieve those throughputs if
there are any. Among the possible combinations we pick the
one with the lowest REPB and plot it for that range. Fig. 10
shows the REPB as function of range for these two through-
puts.
100Kbps10Kbps293Figure 10: For achieving ﬁxed throughput using BackFi for dif-
ferent distance, the tag needs to spend more energy as it goes far
away. For achieving 1.25 Mbps we need to spend 2.5× more than
power needed for reference modulation, coding and switching rate.
Here we see expected results. For a ﬁxed throughput, as
we go to higher ranges we need to use lower coding rates.
In our current design we only support two coding rates: 1/2
and 2/3. Hence for all these experiments we see the REPB
change between two levels corresponding to the shift from
higher coding rate to lower.
6.2 Reconstructing BackFi’s performance
In this section, we aim to understand where do BackFi’s
beneﬁts come from. As discussed before, BackFi’s design
has two key components: self-interference cancellation and
the decoding algorithm. We try to shed light on the impact
of each component on BackFi’s performance.
Impact of self-interference cancellation: This component
helps eliminate the unwanted leakage and environmental re-
ﬂections from reducing the backscatter signal’s SNR. Any
uncanceled interference directly acts as noise to the backscat-
ter signal and reduces throughput. To evaluate its impact we
measure the SNR for the backscatter link at the reader and
compare it to what the SNR would have been if cancellation
was perfect. The experiment is conducted by placing the
BackFi AP and the IoT sensor at 30 different locations in the
testbed. For each location, we do ten runs where during each
run we let the BackFi IoT sensor backscatter a known packet
and measure the forward and backward channels from the
tag using a vector network analyzer.
In this scenario the
VNA [42] acts as the BackFi AP and is being used so that we
can measure the channels accurately for comparison. Next
we perform the actual backscatter communication with a
BackFi AP and decode the data after self-interference can-
cellation. We also compute the SNR of the demodulated
phase modulated symbols from the tag and compare it to the
SNR predicted by the channel measurement from the VNA.
We plot these two SNR values for each run and each loca-
tion as a scatter plot in Fig. 11(a). As we can see cancel-
lation works well, the median degradation in SNR is less
than 2.3 dB. This is consistent with earlier self-interference
cancellation results from prior work [12, 11] which report a
self-interference residue of 1.7 dB after cancellation.
Impact of Symbol Time and MRC: The second compo-
nent of BackFi’s decoder at the BackFi AP is the algorithm
for dealing with the time-varying decoding problem. The al-
gorithm has two key components: exploiting the larger sym-
bol times from the tag packet to make an approximation that
Figure 11: (a)Demonstrates the effect of imperfect cancellation on
the degradation of the measured SNR vs the expected SNR at the
reader of BackFi. When the cancellation is imperfect the environ-
mental components are no longer completely removed and this acts
as interference to the backscatter signal from the tag.(b) Demon-
strates the diversity gains of MRC : as we increase the symbol time
period, we have more samples for averaging, hence it improves the
SNR. This increase in SNR results in lower bit error rate (BER) for
a given modulation.
the channel can be converted into a simpliﬁed time invariant
system and then apply MRC to solve it. MRC helps amplify
the SNR of the signal by combining signal energy across
time appropriately. Hence the key factor here is the tag sym-
bol period which is inversely proportional to the tag symbol
rate. To show the impact we plot the BER vs tag symbol rate
for two modulations and a ﬁxed coding rate of 1/2. The ex-
pectation is that as the tag symbol rate decreases and symbol
time increases, the MRC gain will drive the BER down like
a waterfall curve. Fig. 11(b) plots the BER as a function of
decreasing tag symbol rate. As we can see, for this particu-
lar placement of AP and tag, at the highest tag symbol rate
the BER is high between 10−2 − 10−3. As tag symbol rate
decreases, the time diversity gain from MRC kicks in and
BER drops down to between 10−4 − 10−5. This technique
essentially points out the trade-off between throughput and
range and why it exists.
6.3 Performance in typical WiFi Networks
BackFi tags only backscatter data when the WiFi reader
is transmitting and they are activated by the reader with the
activation sequence. The best candidate for the WiFi reader
device is clearly the AP since it is likely the most dominant
transmitter in a typical network. Nevertheless, in a typical
network that is fully loaded (i.e. there is always outstanding
trafﬁc to transmit from the AP or a client), the AP will be
transmitting a fraction of the time which would imply that
the BackFi link would also be active for the same fraction.
We evaluate the throughput BackFi can provide under such
typical network conditions.
To conduct this experiment, we took traces from open