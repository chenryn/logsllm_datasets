title:ANONIZE: A Large-Scale Anonymous Survey System
author:Susan Hohenberger and
Steven A. Myers and
Rafael Pass and
Abhi Shelat
2014 IEEE Symposium on Security and Privacy
ANONIZE: A Large-Scale Anonymous Survey System
Susan Hohenberger
Johns Hopkins University
PI:EMAIL
Steven Myers
Indiana University
PI:EMAIL
Rafael Pass
abhi shelat
Cornell University
PI:EMAIL
University of Virginia
PI:EMAIL
Abstract—A secure ad-hoc survey scheme enables a
survey authority to independently (without any interac-
tion) select an ad-hoc group of registered users based
only on their identities (e.g., their email addresses), and
create a survey where only selected users can anonymously
submit exactly one response. We present a formalization
of secure ad-hoc surveys and a provably-secure implemen-
tation in the random oracle model, called ANONIZE. Our
performance analysis shows that ANONIZE enables securely
implementing million-person anonymous surveys using a
single modern workstation. As far as we know, ANONIZE
constitutes the ﬁrst implementation of a large-scale secure
computation protocol (of non-trivial functionalities) that
scales to millions of users.
I. INTRODUCTION
We study the basic conﬂict between anonymity and
authenticity in large network settings. Companies, uni-
versities, health providers and government agencies
routinely conduct asynchronous and real-time data col-
lection surveys for targeted groups of users over the In-
ternet. To do so, they aim for authenticity (i.e., ensuring
that only the legitimate users can participate in the data
collections) and anonymity (i.e., ensuring that the there
is no link between the legitimate user and his/her data
so that users are more likely to submit honest feedback).
The intrinsic conﬂict between these two goals may
result in users self-censoring or purposely biasing data
they submit.
A simple example is a course evaluation for a uni-
versity class. A typical implementation of such a survey
requires a trusted third party (such as the university,
or some external party) to ensure that feedback is
collected anonymously from the participants and that
only authorized participants, i.e., the students enrolled
in a particular class, can submit feedback for that class.
In such trusted-party implementations, students are re-
quired to authenticate themselves with their university
IDs and thus leave a link between their evaluation and
their identity; they are trusting the survey collector to
keep such links private.
Assuming that the survey collector acts as a trusted
third party is dangerous. Even if the survey collector
intends to keep the links between users and their surveys
private, its computer may be stolen or broken into,
and the information leaked. For instance, in 2009, a
computer at Cornell was stolen, containing sensitive
personal information, such as name and social security
number, for over 45,000 current and former university
members [1]. Additionally, even if users have full conﬁ-
dence in the the trusted third party, and in particular, its
ability to keep its data secure, developing an anonymous
survey system using such a trusted party still requires
some care. For example, in the implementation of course
reviews at the University of Virginia, side channel infor-
mation indicating who has already ﬁlled out the survey
may leak information about the order in which students
participate. Later, the order of the students’ comments
in the aggregated responses may be correlated to break
anonymity [2].
Furthermore, in many situations, jurisdictional bound-
aries or legal requirements make it unfeasible to rely on
solutions with external trusted third parties: it may be
illegal to store sensitive patient information on a third-
party system; similarly, many countries do not permit
sensitive data to be stored on servers run by foreign
corporations due to the potential for this data to be
seized [3].
For these reasons, we seek cryptographic solutions
to the problem of anonymous surveys that offer secu-
rity guarantees where anonymity and authenticity hold
without needing to trust a third party.
Cryptographic voting techniques described in prior
work may offer a partial solution to this problem (see
e.g., [4], [5], [6], [7], [8]). In such schemes, each survey
consists of two steps: 1) users authenticate themselves
to a server and anonymously check out a single-use
“token”; the token itself carries no link to the user’s
identity. 2) a user can then use her token to participate
in the speciﬁed survey. Such schemes provide good
anonymity assuming that users actually separate steps
1 and 2 with a reasonably long time lag (otherwise
there is a clear time link between the user and its
data). But if users are required to separate the two
steps by, say, a day, the ease-of-use of the survey is
signiﬁcantly hampered and become much less conve-
nient than “non-anonymous” surveys (or anonymous
surveys employing a trusted third party). Additionally,
the extra steps required to authenticate for each survey
may be onerous. Consequently, such techniques have
gained little traction.
© 2014, Susan Hohenberger. Under license to IEEE.
DOI 10.1109/SP.2014.31
375
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:56 UTC from IEEE Xplore.  Restrictions apply. 
A. Our innovation: electronic ad-hoc surveys
In this paper, we consider a general solution to the
problem of anonymously collecting feedback from an
authenticated group of individuals by introducing the
notion of an ad-hoc survey. The “ad-hoc” aspect of
this notion means that anyone can select a group of
individuals and create a survey in which those and only
those individuals can complete the survey at most once;
additionally, the survey initiator can initiate this survey
knowing only the identities (e.g., the email addresses) of
the users in the ad-hoc group—no further interaction be-
tween the survey initiator and the users is required.1 As
such, our method provides essentially the same ease-of-
use as traditional (non-anonymous) electronic surveys
(and it thus is expected to increase user participation
and make the feedback submitted more valuable).
As we demonstrate, ad-hoc surveys admit practical
and efﬁcient solutions for very large surveys: we present
an ad-hoc survey scheme, ANONIZE, a proof of secu-
rity for the cryptographic protocols in ANONIZE, and
an implementation of the protocol. ANONIZE supports
millions of “write-in” (i.e., collection of arbitrary strings
of data) surveys in minutes. As far as we know, this
is the ﬁrst implementation of a provably-secure2 multi-
party protocol that scales to handle millions of users.
Additionally, we prove security of our scheme even
if the adversary participates in an arbitrary number of
concurrent surveys.
B. Ad-hoc Surveys in more detail
In more details, there are three parties in an ad-hoc
survey system: a registration authority (RA) that issues
master user tokens, a survey authority (SA) that can
create surveys, and users that provide survey data. A
user must ﬁrst register with the RA and retrieve a secret
“master user token”. This is a single token that can
be used for all future surveys the user participates in.
Anyone can act as an SA by choosing a uniquel survey
ID and publishing a list of identities that are permitted to
participate in that survey. The list of identities that can
participate in a particular survey can grow dynamically,
and the SA can create a survey without any interaction
with others. Finally, a user who is on the list of valid
identities for a survey can non-interactively submit a
response to the survey by simply routing one message
to the SA (through an anonymous network like Tor, or
anonymous proxy relay).
To exemplify this approach and informally discuss
the anonymity/authenticity properties it provides, we
consider the course evaluation scenario.
1) Student Registration: When a student is asked to
set-up his college/university account information (while
proving his identity using traditional, non-electronic,
methods), the student also generates an unlinkable mas-
ter user token that is tied to his school email identity
(e.g., his email address). This step can also be done at a
later stage if the student desires (or if the student loses
his credential), but it only needs to be done once.
2) Course Survey Setup: Whenever a course admin-
istrator wishes to set-up a course survey, she generates
a survey key based only on the actual identities (e.g.,
the email addresses) of the course participants.
3) Survey Execution: Upon ﬁlling out a survey with
its associated survey key, the student’s client (either
computer or smart phone) combines the survey key and
her master user token to generate an unlikable one-time
token that she can use to complete the survey. The one-
time token satisﬁes two properties: 1) it carries no link
to the student’s identity (thus we have anonymity), and
2) for a given survey key, the student can obtain at
most one such token (and thus we ensure that a student
can only complete the survey once3). The results of the
survey can now be tabulated, and, possibly announced.
We emphasize that once Step 1 has been done (pre-
sumably once the students enroll into college), Steps 2
and 3 can be repeatedly performed. The participants do
not need to check-out new single-use tokens for each
survey; rather their client uses the master user token to
create a unique single-use token for this survey without
any interaction (that could deanonymize the student).
Part of our contribution is to precisely deﬁne security
properties of ad-hoc surveys such as anonymity (intu-
itively, that there is no link between users and the sur-
veys they submit), and authenticity (intuitively, that only
authorized users can complete the survey, and they can
complete it only once). As mentioned, we are interested
in providing security not only for a single survey, but
also if an attacker participates in many surveys, be they
in the past, concurrent, or in the future. A common
approach for deﬁning security in such circumstances
is to formalize the notion of secure ad-hoc surveys
within the framework for Universal Composability [9].
Doing so permits one to analyze the protocol under a
single instance and deduce that it also remains secure
under concurrent executions. Unfortunately, there are
well-known inefﬁciencies with this approach. Rather,
to enable an efﬁcient implementation, we provide di-
rect game-based deﬁnitions of security and directly
analyze the security of our protocol under concurrent
executions—this is analogous with other cryptographic
1Before users can complete a survey, we additionally require them
to register their identity. We emphasize that this registration is done
only once and can be used for any number of subsequent surveys.
2By “provably-secure”, we only refer to the cryptographic protocol.
3Our systems support the (optional) ability for the user to change
her response (before the voting deadline) in a manner that replaces
her previous submission, but in no other way leaks any information
about her identity.
376
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:56 UTC from IEEE Xplore.  Restrictions apply. 
game-based deﬁnitions, e.g., blind signatures [10]; we
emphasize that although related notions of anonymity
and authenticity have been deﬁned in the literature
for other applications, our setting is considerably more
complex and thus the actual deﬁnitions are different.
C. Anonize in more detail
Our system is constructed in two steps. We ﬁrst
provide an abstract implementation of secure ad-hoc
surveys from generic primitives, such as commitment
schemes, signatures schemes, pseudo-random func-
tions (PRF) and generic non-interactive zero-knowledge
(NIZK) arguments for NP4. We prove the security of the
abstract scheme based on the assumption that all generic
primitives employed are secure. Note that we have taken
explicit care to show that our schemes remain secure
even when the adversary initiates many concurrently
executing sessions with the system.
In a second step we show that (somewhat surpris-
ingly) the generic scheme can be instantiated with
speciﬁc commitment schemes, signatures schemes, PRF
and NIZKs to obtain our efﬁcient secure ad-hoc survey
scheme ANONIZE (which now is based on speciﬁc
computational assumptions related to the security of the
underlying primitives in the Random Oracle Model).
The surprising aspect of this second step is that our
generic protocol does not rely on the underlying prim-
itives in a black-box way; rather, the NIZK is used to
prove complex statements which require code of the
actual commitments, signatures and PRFs used. In this
second step, we rely on ideas similar to those under-
lying efﬁcient constructions of anonymous credentials
in bilinear groups [11], [12], although our constructions
differ in a few ways. As far as we know, our scheme is
also one of the ﬁrst implementations of a cryptographic
scheme that is concurrently-secure.
Let us brieﬂy provide a high-level overview which
omits several important features, but conveys the intu-
ition of our abstract protocol (we assume basic familiar-
ity with the concepts of commitment schemes, signature
schemes, PRFs and NIZKs).
1) Registration: A user with identity id registers with
the RA by sending a commitment to a random seed sid
of a pseudo-random function (PRF) F and providing a
NIZK that the commitment is well-formed. If the user
has not previously been registered, the RA signs the
user’s name along with the commitment. The signature
returned to the user is its “master user token”. The
security property required here is weaker than that of a
blind signature.
2) Survey: To create a survey, an SA publishes a list
of signed user identities along with a survey id, vid.
4As we show, we actually need a new variant of standard NIZKs.
3) Response: To complete a survey for survey id
vid, a user id generates a single-use token Fsid (vid)
(by evaluating the PRF on the seed sid with input vid)
and presents a NIZK that it “knows a signature by the
RA on its identity id and a commitment to a seed sid”
and that it “knows a signature by the SA on its id” and
that the single-use token is computed as Fsid (vid). The
user’s actual survey data will be part of and thereby
authenticated by this NIZK.
Roughly speaking,
the NIZK proof in the survey
completion step ensures that only authorized users can
complete the survey, and that they can compute at most
one single-use token, and thus complete it at most
once. 5 Anonymity, on the other hand, roughly speaking
follows from the fact that neither the RA nor the SA
ever get to see the seed sid (they only see commitments
to it), the zero-knowledge property of the NIZKs, and
the pseudo-randomness property of the PRF.
Proving this abstract protocol secure is non-trivial.
In fact,
to guarantee security under concurrent exe-
cutions, we introduce and rely on a new notion of
a simulation-extractable NIZK (related to simulation-
sound NIZK [13] and simulation-extractable interactive
zero-knowledge arguments [14], [15]).
To enable the second step of our construction (i.e.,
the instantiation of the abstract protocol using speciﬁc
primitives), we demonstrate a simple and efﬁcient way
of implementing simulation-extractable NIZK in the
Random Oracle Model by relying on the Fiat-Shamir
Heuristic [16]. Finally, the key to the construction is
choosing appropriate commitments, signatures and PRF
that can be “stitched together” so that we can provide
an efﬁcient NIZK for the rather complex statement used
in the abstract protocol.
D. Related notions and techniques
Ad-hoc surveys are related to, but different from, a
number of primitives previously considered in the liter-
ature such as group signatures, ring signatures, voting
schemes and anonymous credentials. Roughly speaking,
group [17], [18], [19] and ring [20] signatures allow
members of a set of users to sign messages in a way
that makes it indistinguishable who in the set signed
the message (in the case of group signatures the set is
ﬁxed 6, whereas in the case of ring signatures the set
can be selected “ad-hoc”). This property is similar to the
5If the user wants to replace her survey response before the deadline
and this is allowed by the system, then she can create a new NIZK
with new data for the same Fsid (vid) value. The old survey with this
value can be deleted.
6The desirability of making group signatures dynamic was ad-
dressed by Bellare, Shi and Zhang [21]. Their solution, however,
requires that every group member or potential group member has
their own personal public key, established and certiﬁed, e.g., by a PKI,
independently of any group authority. Our ad-hoc survey solution does
not require this.
377
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:56 UTC from IEEE Xplore.  Restrictions apply. 
anonymity property of ad-hoc survey, but unfortunately,
the authentication property these notions provide is
insufﬁcient for our setting—in a ring signature scheme,
a user may sign multiple messages with impunity which
corresponds to the ability to complete the survey mul-