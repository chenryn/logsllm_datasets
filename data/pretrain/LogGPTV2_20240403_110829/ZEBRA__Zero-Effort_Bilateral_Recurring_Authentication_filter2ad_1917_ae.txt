0.001 (0.001)
FPR2
0.061 (0.064)
0.061 (0.088)
0.031 (0.057)
0.017 (0.035)
FNR3
0.140 (0.118)
0.026 (0.038)
0.017 (0.044)
0.015 (0.034)
1The adversary is using the terminal while the user is walking nearby.
2The adversary is using the terminal while the user is writing nearby.
3Mean (and standard-deviation) FNR for all subjects, excluding Subject 1.
2) Quickness: When the user changes (i.e., when the
current user is different than the logged-in user), we want
to identify the change immediately so we can prevent any
accidental or intentional misuse of the logged-in user’s
account. We deﬁne quickness as how ‘soon’ we can identify
a changed user, where ‘soon’ can be measured in time or
windows, where a window represents a ﬁxed number of
interactions. We use the ‘duration of attack success’ as a
metric to evaluate how quickly ZEBRA detects an adversary
and ‘duration of inappropriate lockout’ as a metric to evaluate
how often ZEBRA will lock out an authorized user because
it misclassiﬁed the user as an adversary. A smaller duration
of attack success is better as it gives a smaller attack window
for the adversary. On the other hand, it is desirable to have
extended periods of time without inappropriate lockouts in
order to improve usability.
Figure 8 shows the fraction of users that are recognized as
authorized users by ZEBRA at time t for a grace period (g)
of 1 and 2 windows. This ﬁgure shows the ﬁrst instance in
time when ZEBRA misclassiﬁes the user as an adversary and
takes action according to the system/user policy, which can be
to lock the terminal or log out the user. For instance, 95 % of
users were still recognized as authorized users at 50 s, or said
another way, 5 % of users were misclassiﬁed by ZEBRA by
time 50 s and may be required to re-authenticate themselves.
For grace period of 1 window, ZEBRA correctly recognized
85 % of users throughout their session on the terminal. We
can improve this number by increasing the grace period. As
shown in the ﬁgure, for grace period of 2 windows, ZEBRA
recognizes 90 % of users correctly throughout their use of
the terminal.
Figure 9 shows the fraction of adversaries that are
recognized as authorized users by ZEBRA at time t for
grace periods (g) of 1 and 2. This graph shows how
quickly ZEBRA can recognize an adversary and terminate
his access to the logged-in user’s account on the terminal.
As shown in the ﬁgure, for grace period of 1 window at
time t = 0, all adversaries have access to the terminal, but
within 5 s only 40 % of adversaries have access – ZEBRA
identiﬁed on average 60 % of adversaries as unauthorized
users within 5 s, and by t = 11 s, ZEBRA identiﬁed all
717
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:04 UTC from IEEE Xplore.  Restrictions apply. 
VII. DISCUSSION
ZEBRA allows the adversary a small attack window before
it can identify him as an unauthorized user; the adversary can
misuse the logged-in user’s account within this window. This
window arises because ZEBRA identiﬁes an unauthorized
user based on that user’s inputs, and it needs to collect
enough inputs to make a decision with high probability. This
attack window exists for all passive continuous authentication
schemes that leverage user inputs for authentication, including
keystroke biometrics and mouse biometrics. The effects of
this attack window could be reduced with some help from
the operating system (OS), if the OS buffers the user’s inputs
and actions, and has the ability to roll-back actions whenever
the inputs fail to authenticate the user. Nonetheless, without
ZEBRA, an adversary will have unrestricted access to the
terminal until he is caught, whereas with ZEBRA, he has
unrestricted access for only a short duration.
Sometimes there may be two users giving input to a
terminal, e.g., two users working together or a clinician
asking for IT help from a staff. If the two users are giving
input one at a time, then ZEBRA can be easily conﬁgured
to authenticate both users for that terminal. However, if the
users are giving input at the same time, e.g., one user is
typing and another is handling the mouse, ZEBRA currently
cannot verify either user; the user could temporarily disable
ZEBRA to allow access to both users.
A. Deauthentication response
At its heart, ZEBRA is a method for continuous authenti-
cation. In this paper, we motivate the need for continuous
authentication as a tool for automating deauthentication when
a new person tries to use a terminal that has another another
user logged-in. We emphasize, however, that the desired
response to such situations is a matter of policy. Once
ZEBRA decides that the terminal is now being used by
someone other than the logged-in user, the policy might
dictate that it lock the screen, or that it log-out the current user.
With small modiﬁcations, a graduated response is possible.
Recall that ZEBRA uses a threshold parameter m and a
grace-period parameter g in making its decision; instead of
outputting a binary decision, we could arrange for ZEBRA
to output a probability intended to indicate its conﬁdence
that the user input is coming from the logged-in user. As
long as the probability remains high, the terminal operates
normally. When the probability drops, the screen may dim,
then darken, then lock, then log out – in each case offering the
user an opportunity to take an action (increasingly complex,
as the conﬁdence gets lower) to restore conﬁdence in her
authenticity. Such an approach can improve usability without
necessarily lowering security and is a topic for future work.
B. Application to initial authentication
We describe ZEBRA as a complement to initial authenti-
cation methods such as passwords, biometrics or hardware
Figure 9: Fraction of adversaries that have access to the
terminal at time t, for optimal window size = 21 and optimal
threshold = 0.6.
Figure 10: Fraction of adversaries that have access to the
terminal at the end of window w, for optimal window
size = 21 and optimal threshold = 0.6.
adversaries. A grace period of 2 windows improves usability
of ZEBRA, as shown in Figure 8, but it also increases the
attack duration for adversaries; nonetheless ZEBRA still
identiﬁed all adversaries within 50 s, much faster than typical
deauthentication timer methods.
Figure 10 represents the above graph but in terms of
windows instead of time, i.e., the fraction of the adversaries
that have access to the terminal at the end of window w,
where window size is 21 and threshold is 0.6. ZEBRA
identiﬁed all adversaries for grace periods of 1 and 2 by the
end of window 2 and 4 respectively. As we mentioned above,
the window size is determined by the number of interactions
(in this case 21), but interactions have variable duration;
to compare with the previous ﬁgure, for all adversaries a
duration of 2 windows was approximately 11 s.
718
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:04 UTC from IEEE Xplore.  Restrictions apply. 
tokens [28]. If the ZEBRA bracelet (token) can be strongly
tied to a speciﬁc user, such as through wrist biometrics [22],
it may be possible for ZEBRA itself (with major modiﬁca-
tions) to be used for initial authentication. Since ZEBRA
authenticates users based on their inputs from the keyboard
and mouse, a ZEBRA-based initial authentication method
would involve tasks the user has to perform as part of the
initial authentication, and these tasks will generate enough
inputs for authentication. For example, as part of initial
authentication, the user could be asked to type a displayed
text, draw a circle, or scroll through a window. There exist
authentication methods that require the user to perform tasks
such as choosing a speciﬁc face among a group of faces. The
beneﬁt of a ZEBRA-based method would be that it does not
place any mental burden on the user to remember any secret –
users do the tasks displayed on the terminal. The challenge
would be to design initial authentication that is short but
generates enough user inputs to achieve high conﬁdence.
C. Automated attacks
We designed experiment 3 to explore the extent to which
an adversary may be able to defeat ZEBRA in an open
terminal, by observing the wearer of the bracelet that opened
the terminal. Our results suggest that it is hard to use an
open terminal while mimicking an individual.
In principle, it is possible to automate the observation and
monitor the victim using a video camera in combination
with the use of special hardware (keyboard and mouse) that
would release keystrokes and mouse input to the system at the
speciﬁc times when the camera observes motion that may be
consistent with a keyboard, MKKM, or scrolling interaction.
In this way, the attacker would only have to worry about
operating the terminal without having to consciously observe
the victim. Our view is that this kind of sophisticated attack
is stronger than what is necessary to beat passwords today.
A video camera can be used to obtain passwords [29]. Also,
if you can plug a custom set of keyboard and mouse into
a terminal, you can potentially plug a hardware key logger
(between the keyboard and the system) as well [30].
D. Extension
In this work, we focused on the deauthentication problem
for desktop computers because we were motivated by
associated problems faced by healthcare professionals in
hospitals. It would be natural to extend ZEBRA to mobile
devices, such as smartphones or tablet computers, and we
believe this is possible. However, we should note that mobile
devices present different challenges. First, users move their
wrists less when interacting with mobile devices (e.g., while
using mobile phones users often move only their ﬁngers)
compared to when they interact with computer terminals.
Second, users could be on the move when interacting with
mobile devices, whereas they are not moving when using
a terminal. Third, the solution would have to be extremely
energy-efﬁcient to be able to run continuously on mobile
devices. On the other hand, mobile devices do present some
opportunities. For example, most mobile devices have built-in
motion sensors, which could be leveraged for authentication.
ZEBRA could also be extended to other devices such as
TV-remotes, game controllers, medical devices – any device
where the user provides frequent inputs with her hand. For
these devices, however, the application may be more for
improving usability than security. For example, if the TV
remote could identify who is holding it, it could provide
personalized functionality, which could lead to a better user
experience; identifying who is using a particular medical
device or sensor could help provide a secure user-attestation
that is useful for healthcare professionals.
VIII. CONCLUSION
In this paper, we introduce Zero-Effort Bilateral Recurring
Authentication (ZEBRA), a novel mechanism that enables
continuous authentication of users who wear a simple bracelet
as an authentication token and without the need for any
specialized hardware at computer terminals. Such a mech-
anism provides the foundation for smart deauthentication
of computer terminal users in dense, dynamic work spaces.
Our approach is continuous, user-agnostic, and unobtrusive.
Our evaluation of ZEBRA – via a user study – shows that
ZEBRA can achieve high accuracy, correctly identifying 90 %
of users and locking out adversaries in less than 50 seconds.
For stronger security, ZEBRA can lock out adversaries in less
than 11 seconds with a small penalty in usability. ZEBRA’s
continuous authentication complements nearly any initial
authentication (login) method and can drive a range of
automatic deauthentication policies.
REFERENCES
[1] R. Koppel, J. P. Metlay, A. Cohen, B. Abaluck, A. R. Localio,
S. E. Kimmel, and B. L. Strom, “Role of computerized
physician order entry systems in facilitating medication errors,”
JAMA: The Journal of the American Medical Association, vol.
293, no. 10, pp. 1197–1203, 2005. DOI doi:10.1001/jama.293.
10.1197
[2] S. Sinclair and S. W. Smith, “Preventative directions for
insider threat mitigation via access control,” Insider Attack
and Cyber Security, vol. 39, pp. 165–194, 2008. DOI
10.1007/978-0-387-77322-3 10
[3] S. W. Smith and R. Koppel, “Healthcare information tech-
nology’s relativity problems: a typology of how patients’
physical reality, clinicians’ mental models, and healthcare
information technology differ,” Journal of
the American
Medical Informatics Association, no. 1-15, 2013, published
Online First. DOI 10.1136/amiajnl-2012-001419
[4] S. Sinclair, “Access control in and for the real world,” Ph.D.
dissertation, Dartmouth College Computer Science, Hanover,
NH, Nov. 2013. Available online: http://www.cs.dartmouth.
edu/reports/abstracts/TR2013-745/
719
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:04 UTC from IEEE Xplore.  Restrictions apply. 
[5] A. Adams and M. A. Sasse, “Users are not the enemy,”
Communications of the ACM, vol. 42, no. 12, pp. 40–46, Dec.
1999. DOI 10.1145/322796.322806
[6] P. G. Inglesant and M. A. Sasse, “The true cost of unusable
password policies: password use in the wild,” in Proceedings
of the Conference on Human Factors in Computing Systems
(CHI), 2010, pp. 383–392. DOI 10.1145/1753326.1753384
[7] J. Bonneau, “The science of guessing: Analyzing an
anonymized corpus of 70 million passwords,” in Proceedings
of the IEEE Symposium on Security and Privacy (S&P), May
2012, pp. 538–552. DOI 10.1109/SP.2012.49
[8] J. Bunnell, J. Podd, R. Henderson, R. Napier, and J. Kennedy-
Moffat, “Cognitive, associative and conventional passwords:
Recall and guessing rates,” Computers & Security, vol. 16,
no. 7, pp. 629–641, 1997. DOI 10.1016/S0167-4048(97)
00008-4
[9] J. Fernando, “The elephant in the room: Health information
system security and the user-level
in
Proceedings of the International Conference for Internet
Technology and Secured Transactions (ICITST), Nov. 2009,
pp. 1–7. Available online: http://ieeexplore.ieee.org/xpl/
abstractMetrics.jsp?arnumber=5402503
environment,”
[10] Y. B. Choi, K. E. Capitan, J. S. Krause, and M. M. Streeper,
“Challenges associated with privacy in healthcare industry:
Implementation of HIPAA and security rules,” Journal of
Medical Systems, vol. 30, no. 1, pp. 57–64, Feb. 2006. DOI
10.1007/s10916-006-7405-0
[11] Y. Wang, S. W. Smith, and A. Gettinger, “Access
IT,”
control hygiene and the empathy gap in medical
in Proceedings of
the USENIX Workshop on Health
Security (HealthSec), 2012, pp. 12–12. Available online:
http://www.cs.dartmouth.edu/∼sws/pubs/wsg12.pdf
[12] Q. Wang and H. Jin, “Usable authentication for electronic
healthcare systems,” in Proceedings of the Symposium On
Usable Privacy and Security (SOUPS), 2008, poster. Available
online: http://cups.cs.cmu.edu/soups/2008/posters/wang.pdf
[13] M. D. Corner and B. D. Noble, “Zero-interaction authenti-
cation,” in Proceedings of the International Conference on
Mobile Computing and Networking (MobiCom), 2002, pp.
1–11. DOI 10.1145/570645.570647
[14] T. C. Meng, P. Gupta, and D. Gao, “I can be you:
Questioning the use of keystroke dynamics as biometrics,”
in Proceedings of
the Network and Distributed Systems
Security Symposium (NDSS), 2013. Available online:
http://ﬂyer.sis.smu.edu.sg/ndss13-tey.pdf
[15] K. B. Rasmussen, M. Roeschlin,
I. Martinovic, and
G. Tsudik, “Authentication using pulse-response biometrics,”
in Proceedings of
the Network and Distributed Systems
Security Symposium (NDSS), 2014. Available online:
http://www.internetsociety.org/sites/default/ﬁles/08 1 0.pdf
[16] J. Bonneau, C. Herley, P. C. van Oorschot, and F. Stajano,
“The quest to replace passwords: A framework for comparative
evaluation of web authentication schemes,” in Proceedings of
the IEEE Symposium on Security and Privacy (S&P), May
2012, pp. 553–567. DOI 10.1109/SP.2012.44
[17] S. Mare, A. Molina-Markham, C. Cornelius, R. Peterson, and
D. Kotz, “ZEBRA: Zero-Effort Bilateral Recurring Authen-
tication,” Dartmouth College, Computer Science, Hanover,
NH, Tech. Rep. TR2014-748, Mar. 2014. Available online:
http://www.cs.dartmouth.edu/reports/abstracts/TR2014-748/
[18] R. Mayrhofer and H. Gellersen, “Shake well before use: Intu-
itive and secure pairing of mobile devices,” IEEE Transactions
on Mobile Computing, vol. 8, no. 6, pp. 792–806, Jun. 2009.
DOI 10.1109/TMC.2009.51
[19] “Bump.” Available online: https://bu.mp
[20] “FDA Code of Regulations, Title 21,” Apr. 2013, 21CFR11.10.
Available online: http://www.accessdata.fda.gov/scripts/cdrh/
cfdocs/cfCFR/CFRSearch.cfm?fr=11.10
[21] “FDA Code of Regulations, Title 21,” Apr. 2013,
21CFR11.300. Available online: http://www.accessdata.fda.
gov/scripts/cdrh/cfdocs/cfCFR/CFRSearch.cfm?fr=11.300
[22] C. T. Cornelius, R. Peterson, J. Skinner, R. J. Halter, and
D. F. Kotz, “A wearable system that knows who wears it,”
in Proceedings of the International Conference on Mobile
Systems, Applications, and Services (MobiSys), Jun. 2014.
[23] A. Kumar, N. Saxena, G. Tsudik, and E. Uzun, “A comparative
study of secure device pairing methods,” Pervasive and Mobile
Computing, vol. 5, no. 6, pp. 734–749, 2009. DOI 10.1016/j.
pmcj.2009.07.008
[24] C. Cornelius and D. Kotz, “Recognizing whether sensors are on
the same body,” Journal of Pervasive and Mobile Computing,
Jun. 2012. DOI 10.1016/j.pmcj.2012.06.005
[25] “8 million leaked passwords connected to LinkedIn, dating
website.” Available online: http://arstechnica.com/security/
2012/06/8-million-leaked-passwords-connected-to-linkedin/
[26] N. Ravi, N. Dandekar, P. Mysore, and M. L. Littman,
“Activity recognition from accelerometer data,” in Proceedings
of the Conference on Innovative Applications of Artiﬁcial
Intelligence, vol. 3, 2005, pp. 1541–1546. Available online:
http://www.aaai.org/Papers/IAAI/2005/IAAI05-013
[27] “Shimmer Research.” Available
shimmer-research.com
online:
http://www.
[28] F. Stajano, “Pico: No more passwords!” in Security Protocols
XIX, B. Christianson, B. Crispo, J. Malcolm, and F. Stajano,
Eds. Springer-Verlag Berlin, Mar. 2011, vol. 7114. DOI
10.1007/978-3-642-25867-1 6
[29] R. Raguram, A. M. White, D. Goswami, F. Monrose, and
J.-M. Frahm, “iSpy: automatic reconstruction of typed input
from compromising reﬂections,” in Proceedings of the ACM
Conference on Computer and Communications Security (CCS),
2011, pp. 527–536. DOI 10.1145/2046707.2046769
[30] G. Shah, A. Molina, M. Blaze et al., “Keyboards and covert
channels,” in Proceedings of the 15th conference on USENIX
Security Symposium, vol. 15, 2006, p. 5.
720
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:00:04 UTC from IEEE Xplore.  Restrictions apply.