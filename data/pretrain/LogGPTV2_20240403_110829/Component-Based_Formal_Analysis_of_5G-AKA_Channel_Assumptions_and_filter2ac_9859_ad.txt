metadata for ease of later channel and component selection
and analysis. In practice, the channelname term describes
which of the two secure channels the instantiation of the rule
considers, and looks like ‘seaf_ausf’ or ‘ausf_arpf’,
and the SendType and ReceiveType terms just contain
one of the strings ‘SUPI’, ‘SEAF’, ‘AUSF’, or ‘ARPF’.
This construction ensures that the adversary cannot read or
modify the contents of a message (msg) sent over this secure
channel; likewise, the sender (A) and recipient (B) of each
message cannot be modiﬁed or spoofed by the adversary.
By TAMARIN’s semantics, only rules with this fact in their
conclusion can produce a fact SndS(...), and only rules
with the fact RcvS(...) in their premise can consume it,
i.e., the Adversary cannot construct this itself. Assuming all
of the protocol’s rules are modelled and constructed correctly,
i.e., all rules of the protocol honestly identify the sender and
intended recipient, this will also guarantee the authenticity of
sender and recipient. N.B. This construction itself says nothing
about which session of the protocol the message was intended
for, nor the order in which messages are delivered.
Each ‘SndS(...)’ and ‘RcvS(...)’ fact can only be
consumed as a premise to a rule once. A message transmitted
through this channel therefore cannot be replayed by the
adversary; the adversary can only attempt to trigger the original
rule which invoked SndS(...) again, but this rule’s premises
will have to be satisﬁed again before this can occur.
We believe this construction very closely matches the “e2e
core network interconnection” channel requirements precisely
as described in [5, §5.7.4] (cited in Section III-A), and hence
we use it to model channels 2 and 3, i.e., the channels between
the SEAF and AUSF, and the AUSF and ARPF respectively.
VIII. ANALYSIS AND RESULTS
We have described 5G-AKA’s desired security properties
informally and formally in Sections IV and VI, and the threat
model under which we evaluate these properties. Our systematic
analysis has allowed us to reach conclusions about which of
these properties are upheld. We present our ﬁndings for secrecy
and authentication.
Secrecy properties:
S1. Secrecy of honest subscriber’s long term key K:
S2. Secrecy of anchor keys KSEAF and KAUSF:
Authentication properties:
A1. SN and UE agree on the identity of UE:
A2. UE and SN agree on the identity of SN:
A3. HN and SN agree on the identity of UE:
A4. UE and HN agree on the identity of HN:
A5. UE and HN agree on the identity of SN:
A6. UE, SN, and HN agree on KSEAF:
A7. Anchor key KSEAF must not be replayable:









As the results show, we encountered various secrecy and
agreement violations against 5G-AKA. The attack which
violates the secrecy of the anchor key KSEAF is of particular
interest, and we discuss this in some detail in this section. We
ﬁrst give an informal overview of this violation before giving
an in-depth description. After describing the secrecy violation
in Section VIII-A, we consider the authentication violations in
Section VIII-B.
The attack proceeds in a similar manner to that presented
by Tsay and Mjølsnes’s attack against the three-party UMTS-
AKA in [26], which is between the serving network and home
network. In our four-party attack, we take advantage of a race
8
condition over the AUSF ↔ ARPF channel entirely within
the home network (neither additional channel or component
is deﬁned in UMTS-AKA or LTE-AKA), rather than the
SEAF ↔ AUSF channel at the interface of the serving and
home networks.
A. Secrecy violation
Overview: A malicious actor ‘B’ starts two 5G-AKA
sessions with a local serving network at roughly the same
time. One session is initiated by replaying an overheard SUCI
(of the target, user ‘A’), and the other session is with the
malicious actor’s own USIM and SUCI (for user ‘B’). The
sessions run in parallel, and result in a race condition; if this
occurs, the AUSF will be unable to distinguish between the
two responses containing the Authentication Vectors from the
credential store (ARPF), and is liable to associate the wrong
response (and resultant keys) with the wrong user. In the case
that this occurs, the AUSF and SEAF will incorrectly believe
that a set of Authentication Vectors and ‘anchor key’ were
intended for user A (and derived from user A’s long-term key
KA), when they were in fact derived from user B’s long-term
key KB. As a result, the malicious user B will now be able to
derive the anchor key, and use it to impersonate user A to the
network. See Figure 8 for the message sequence chart of the
attack.
What does the secrecy violation break?: We now give a
more in-depth description of the secrecy violation.
The speciﬁc violated property which we consider now is
the secrecy of the ‘anchor key’ KSEAF (and its cryptographic
parent, KAUSF), from the points of view of the SEAF and AUSF.
That is, at the end of the 5G-AKA protocol run:
possession of a cryptographic anchor key, KSEAF,
• the SEAF, AUSF, and a UE will have agreed and be in
• the SEAF and AUSF believe this key is for an honest
and un-compromised UE (in our example, user ‘A’ with
‘SUPI-A’ and ‘SUCI-A’), and,
• both the SEAF and AUSF believe this key is secret from
the attacker. It is not.
Thus, the protocol draft lacks a crucial containment property:
an attacker that can compromise or gain access to the long-term
key of a user (e.g., ‘B’) will be able to impersonate any user
(e.g., ‘A’) to the SEAF and the AUSF, because it knows the
KSEAF for a session that they believe to be for ‘A’.
Detailed attack scenario: The attack takes place in two
(possibly temporally and even geographically) separate phases.
In the ﬁrst phase,
the attacker eavesdrops and records a
legitimate encrypted/concealed SUPI, also known as a SUCI.
In the second phase, the main body of the attack takes place.
Full message deﬁnitions can be found primarily in TS 33.501
[5] (some are in TS 33.102, [4]). N.B. This can attack occur
even more easily if the SUPI is transmitted unconcealed, i.e.,
not encrypted into SUCI form.
Setup to the attack:
5G-AKA protocol, sending the SUCI-A (user A’s ephemer-
ally encrypted SUPI) and ‘HN’ to a SEAF. The user might
then complete the protocol as normal.
2) The attacker eavesdrops on the public radio transmissions
from the previous step, and records the message containing
SUCI-A and HN.
3) The attacker purchases a legitimate USIM from the same
home network as his intended victim; this has ID ‘SUPI-
B’. The attacker physically attacks and compromises the
USIM, and extracts the long-term key KB of this USIM in
its possession.5
Main phase of the attack: The message sequence chart of the
main phase of the attack can be found in Figure 8.
1) The attacker initiates the 5G-AKA protocol by replaying
to a SEAF the pre-recorded SUCI-A. The attacker sends a
message containing ‘SUCI-A’ and the name of the user’s
home network to a SEAF in serving network ‘SNID’.
2) The protocol proceeds as normal: the SEAF communicates
with an AUSF in the speciﬁed home network by sending the
‘5G-AIR’ message. This contains ‘SUCI-A’, and SNID.
3) In parallel with the ﬁrst session,
the attacker starts a
5G-AKA session for the USIM it owns (SUPI-B) with the
same home network, via the same serving network (and
SEAF). It starts the 5G-AKA session by sending its own
concealed ID (‘SUCI-B’) and the name of the home network
to the same SEAF as in the other, parallel session. The SEAF
correctly treats this as a separate session.
4) The SEAF communicates with the AUSF in the home net-
work by sending the ‘5G-AIR’ message, containing ‘SUCI-
B’ and SNID. The AUSF then sends the ‘Auth-Info
Request’ message to the home network’s ARPF.
5) The SIDF de-conceals SUCI-B into SUPI-B, and the ARPF
then responds by sending the ‘Auth-Info Response’
message to the AUSF. This message contains terms derived
from (the compromised) KB, and the terms RAND, SQN,
and SNID, but notably contains no reference to either the
SUPI or the SUCI.
6) The ‘Auth-Info Response’ message is received by
the AUSF, but as this message does not have a SUPI or
SUCI attached to it, the AUSF does not know whether
this message was for the session with ‘SUCI-A/SUPI-A’,
or whether it was for the session with ‘SUCI-B/SUPI-B’.
The AUSF can legitimately continue its session intended
for ‘A’ with the ‘Auth-Info Response’ message that
was actually intended for the session with ‘B’.
7) The AUSF then proceeds with the protocol, sending the
5G-AIA message for ‘SUPI-A’ to the SEAF; this contains
the anchor key KSEAF that the ARPF generated for ‘SUPI-
B’, but now the AUSF associates it with ‘SUPI-A’ (and as a
result, so does the SEAF). As the attacker has compromised
SUPI-B’s long-term key KB (and RAND and SQN are
publicly transmitted during the protocol), the attacker can
now construct the anchor key KSEAF that the AUSF and
SEAF now believe is the anchor key for ‘SUPI-A’. That is,
the attacker can derive the KSEAF that the AUSF and SEAF
believe to be for the (honest) ‘SUPI-A’ (and not ‘SUPI-B’
1) A legitimate user ‘A’ with ID ‘SUPI-A’ is registered with
its home network (HN). The attack does not require access
to its long-term key KA. This honest user initialises the
5After discussion with a senior security researcher of a global carrier, we
believe this physical extraction of KB is not necessary, although if this step is
completed, from a practical point of view this gives the attacker even greater
control over the timing and ﬂow of messages.
9
KB
UE-B/
Attacker
SEAF
AUSF
KA, KB
ARPF
SUCI-B, HN
SUCI-A, HN
Auth-Req
Auth-Resp
5G-AIR (B)
5G-AIR (A)
5G-AIA
5G-AC
5G-ACA
Auth-Info Request (B)
Auth-Info Request (A)
Auth-Info Response (A/B?)
?
Fig. 8.
The attack ﬂows of the 5G-AKA Protocol, secrecy violation caused by session confusion.
which the attacker has compromised), completing the attack.
B. Authentication violations
Counters or SQN values do not have any bearing on this attack,
as only the ARPF and UE store what the ‘correct’ value of
SQN is. The AUSF and SEAF do not use SQN directly in any
calculations or derivations, and hence do not check whether it
matches (or is greater than) stored values.
Replaying ephemerally encrypted SUCIs: In the concealed
setting, our vulnerability relies on the SIDF accepting a
previously replayed SUCI value. We discuss why we believe
that adversary-replayed values will be accepted in this context.
A UE sends an ephemerally encrypted SUCI to conceal the
SUPI, maintaining the privacy and unlinkability of the USIM’s
global ID. This attack does not violate that property. The UE
uses an ephemeral public key (rather than static) to maintain its
own unlinkability; hence the onus is on the UE to use a new
ephemeral key with each run of the protocol to maintain this
property. While the ARPF or SIDF maintaining a complete list
of previously used ephemeral public keys is touched upon as
a possible suggestion in the (formally withdrawn) Technical
Report TR 33.899 [3], we ﬁnd no evidence within TS 33.501
that this is required or even formally proposed, and therefore
no evidence that an ARPF will not accept a re-used SUCI.6
Including a counter within the SUCI (then checked against
the highest seen value) is sufﬁcient for the concealed setting, but
isn’t sufﬁcient overall: when the null-scheme is used for SUPI
‘encryption’, the attack then holds again. In the non-concealed
case adding a counter isn’t sufﬁcient: there are no cryptographic
protections at this stage, so the attacker can increment the last
counter it observed. TS 33.501 (notably [5, §6.12.2]) does not
mention a counter or any similar values within the SUCI.
Adding a counter prevents the attack described in this
document from succeeding (because replaying an overheard
SUCI will no longer be sufﬁcient), but it means that an attacker
merely has to learn a target user’s un-concealed SUPI by some
means to be able to impersonate them. We believe the purpose
of concealed IDs is intended to maintain the privacy of the
user’s ID, and is not intended as a critical means to guarantee
the overall authentication properties of the protocol.
6TR 33.899 is a study collecting possible proposals from multiple authors
across 3GPP, some of which were considered for inclusion within TS 33.501.
This document has now been withdrawn, but gives insight into different
suggested proposals for 5G security from member companies of 3GPP.
There are also multiple authentication violations, which
are listed in Section VIII. These fall into two categories:
authentication of serving network ID, and session confusion.
Authentication of the SNID: This is a genuine violation of
agreement over the identity of the SNID, as the UE never
learns this term in an authenticated message. This causes
agreement to fail on KSEAF, as this term is derived by the
UE from terms including SNID; the ARPF, AUSF, and SEAF
will derive an anchor key KSEAF on which the UE will not
agree if the adversary has injected an arbitrary SNID into the
UE’s (unauthenticated) serving network discovery phase.
This violation was originally discovered in concurrent work
by Basin et al. [11]. Our four-party models and analysis
conﬁrms the existence of this agreement violation.
The adversary can inject an arbitrary SNID onto the
UE ↔ SEAF channel: the UE then has no way of validating
the authenticity of SNID. The adversary must block the UE’s
Auth-Resp response message, as otherwise a genuine SEAF
would quickly discover that the UE generated HRES* and
AUSF generated HXRES* do not match. As the UE then does
not receive any rejection messages from the serving network,
it assumes the authentication was successful, and so from the
UE’s point of view, the protocol is ﬁnished. The UE will then
attempt to communicate normally with a nearby base station.
Outside of the deﬁnition of 5G-AKA, TS 33.501 excludes
this ‘attack’: see Section 5.10, cited in Figure 7. This attempted
communication and use of the KSEAF with the wrong SNID
after the protocol has ﬁnished will fail, but we agree that
this attack still violates serving network authentication in the
explicit sense. We leave the question of whether this violation
would allow the adversary any separate, meaningful beneﬁt
for future work. We propose and formally verify a ﬁx for this
authentication violation in Section IX-B.
Session confusion: Allowing sessions for different users to
be accidentally confused causes the violation of both secrecy
and authentication properties. The message ﬂow behind many of
the authentication violations is the same as the secrecy violation
described in Section VIII-A. Here, session confusion occurs at
the same point, i.e., two sets of authentication vectors sent by
the ARPF are received by the AUSF at roughly the same time