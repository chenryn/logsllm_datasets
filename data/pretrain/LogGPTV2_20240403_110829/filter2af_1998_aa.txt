# IoT固件分析入门

## 译文声明
本文为翻译文章，具体内容及含义请以原文为准。  
项目地址：[IoT_Sec_Tutorial](https://github.com/G4rb3n/IoT_Sec_Tutorial/)  
如果访问GitHub速度较慢，可以查看Gitee上的镜像。

**更新说明**：这是一个非常不错的IoT固件分析入门教程。在阅读了《路由器0day》的目录后发现，除了硬件部分未涉及外，该教程涵盖了固件分析的基础工作（尽管部分内容可能有些过时，但总体来说仍然很有帮助）。

## 0x0 准备工作

由于我的Kali系统版本是2019年的，现在已升级到2021版。以下是升级步骤：

```bash
echo "deb http://http.kali.org/kali kali-rolling main non-free contrib" | sudo tee /etc/apt/sources.list
sudo apt update && sudo apt -y full-upgrade
[ -f /var/run/reboot-required ] && sudo reboot -f
```

* 升级完成后，可以通过以下命令检查系统版本：
  ```bash
  grep VERSION /etc/os-release
  ```

* 更新系统时间（我的系统时间之前一直不准确）：
  ```bash
  sudo apt-get install -y ntpdate
  sudo rm -rf /etc/localtime
  sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
  sudo ntpdate -u ntp.api.bz
  ```

* 切换Shell（为什么升级后zsh没有自动变成默认？）  
  查看系统中可用的Shell：
  ```bash
  cat /etc/shells
  ```
  Kali自带了zsh，可以直接切换：
  ```bash
  cp -i /etc/skel/.zshrc ~/
  chsh -s /bin/zsh
  ```
  zsh配合oh-my-zsh使用体验更佳，安装方法如下：
  ```bash
  wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
  ```
  添加全路径显示：
  ```bash
  gedit ~/.oh-my-zsh/themes/robbyrussell.zsh-theme
  # 将%{$fg[cyan]%}%c%{$reset_color%}中的%c改为[$PWD]
  ```

* 如果想使用其他桌面环境：
  ```bash
  sudo update-alternatives --config x-session-manager
  ```

## 0x1 固件提取

我之前使用过binwalk来处理压缩文件和图片，但并没有深入研究其命令选项。实际上，除了binwalk之外，还有很多其他的固件分析和提取工具，可以在GitHub上通过“firmware analysis”等关键词找到。

本例中，我们使用binwalk来提取华硕RT-N300路由器的固件。提取后发现该固件并未加密（这在2016年是非常不安全的做法）。这个固件使用的是squashfs文件系统。

### Squashfs文件系统简介

Squashfs是一种只读格式的文件系统，具有极高的压缩率，最高可达34%。系统启动后，会将文件系统保存在一个压缩过的文件中，当进程需要某些文件时，仅解压对应的部分。常见的压缩格式包括GZIP、LZMA、LZO、XZ（LZMA2）。

Squashfs的应用场景包括：
1. Linux安装时使用的Live CD
2. 小型嵌入式设备中的rootfs

### Binwalk命令选项

- **常规选项**
- **提取选项**
- **Diff**
- **文件签名**
- **熵值**
- **Raw Compression**

### 手动提取固件

Squashfs文件系统的头部特征较多，如sqsh、hsqs、qshs、shsq、hsqt、tqsh、sqlz。我们可以使用hexdump搜索这些特征在文件中的位置：

```bash
hexdump -C firmware.bin | grep -a 'hsqs'
```

假设hsqs位于文件的0xe20c0位置，可以使用dd命令截取固件：

```bash
dd if=firmware.bin of=squashfs.img bs=1 skip=$((0xe20c0))
```

然后使用unsquashfs解压得到squashfs-root：

```bash
sudo apt-get install squashfs-tools
unsquashfs squashfs.img
```

### 使用Binwalk进行提取

Binwalk通过与magic特征集对比来识别文件类型，其识别效率远高于file命令。主要使用libmagic库的四个函数：
- `magic_t magic_open(int flags);`
- `void magic_close(magic_t cookie);`
- `const char *magic_buffer(magic_t cookie, const void *buffer, size_t len);`
- `int magic_load(magic_t cookie, const char *filename);`

## 0x2 静态分析

本例中，从Dlink固件中提取了一个样本，打开后发现被加密了，需要进行爆破。Kali自带了一些用于压缩文件的工具，如crunch、rsmangler和frackzip。

直接使用frackzip进行破解，根据教程提示得到密码`beUT9Z`。解压后得到以下文件：
- `.mbn`：高通的一套用于加载网络环境的文件
- `.yaffs2`：针对NAND芯片设计的嵌入式文件系统，可以使用unyaffs提取

核心文件可能是`2K-mdm-image-mdm9625.yaffs2`，不确定的话可以提取所有`.yaffs2`文件并查看。

接下来查看配置文件，可能会发现敏感信息。例如，`inadyn-mt.conf`文件是no-ip应用的配置文件，其中包含了用户名和密码。

使用firmwalker自动化遍历提取的文件系统，查找感兴趣的内容，如`etc/shadow`、`etc/passwd`、SSL相关文件等。

在`etc/init.d`目录下有一个名为`start_appmgr`的脚本，将其拖入IDA Pro进行分析，发现了一个后门漏洞（CVE-2016-10178），向`192.168.1.1:39889`发送`HELODBG`即可获取shell。

## 0x3 动态分析

### QEMU和Firmadyne

QEMU是一个几乎能够模拟所有硬件设备的软件，而Firmadyne是一个基于QEMU的分析平台，包含模拟、固件提取、调试等功能，但支持的硬件设备较少。

### 部署Firmadyne

教程中使用的是attifyti提供的Ubuntu 14，但由于Ubuntu 14版本较旧，建议自行部署或使用AttifyOS（基于Ubuntu 18.04）。

**准备工作**

由于涉及到GitHub项目的下载，网络不佳时可能需要一些帮助。可以使用clash进行代理设置：

```bash
# 下载并运行clash
wget -O ~/clash.tar.gz https://github.com/Dreamacro/clash/releases/download/v1.12.2/clash-linux-amd64-v1.12.2.gz
tar -xzf clash.tar.gz
./clash -d ./

# 导入节点
wget -O ~/.config/clash/config.yaml  clash_url

# 配置代理
gsettings set org.gnome.system.proxy mode 'manual'
gsettings set org.gnome.system.proxy.http port 7890
gsettings set org.gnome.system.proxy.http host '127.0.0.1'
gsettings set org.gnome.system.proxy.socks port 7891
gsettings set org.gnome.system.proxy.socks host '127.0.0.1'
gsettings set org.gnome.system.proxy ignore-hosts "['localhost', '127.0.0.0/8', '::1']"
```

**安装Firmadyne**

```bash
sudo apt-get install qemu-system-arm qemu-system-mips qemu-system-x86 qemu-utils
sudo apt-get install busybox-static fakeroot git dmsetup kpartx netcat-openbsd nmap python-psycopg2 python3-psycopg2 snmp uml-utilities util-linux vlan
git clone --recursive https://github.com/firmadyne/firmadyne.git
cd firmadyne
./download.sh
```

配置PostgreSQL数据库：

```bash
sudo apt-get install postgresql
sudo -u postgres createuser -P firmadyne
sudo -u postgres createdb -O firmadyne firmware
sudo -u postgres psql -d firmware -f ./postgres_init.sql
```

如果遇到连接问题，可以尝试初始化数据库：

```bash
sudo passwd postgres
sudo mkdir /data
```

最后，建议使用AttifyOS进行部署，以避免繁琐的配置过程。