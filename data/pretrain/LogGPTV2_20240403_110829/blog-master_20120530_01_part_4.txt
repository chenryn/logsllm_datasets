2012-05-30 21:38:08,379 9548 DEBUG 100 Ok  
2012-05-30 21:38:08,380 9548 DEBUG Connect 'provider_db' to 'host=172.16.3.176 port=1921 user=postgres dbname=digoal_01  [...]'  
2012-05-30 21:38:08,392 9548 DEBUG exec_cmd: select * from londiste.local_add_table('replika', 'digoal_01.user_info', '[]', null, null)  
2012-05-30 21:38:08,405 9548 INFO Table added: digoal_01.user_info  
2012-05-30 21:38:08,406 9548 DEBUG exec_cmd: select * from londiste.local_add_table('replika', 'digoal_01.user_session', '[]', null, null)  
2012-05-30 21:38:08,410 9548 INFO Table added: digoal_01.user_session  
```  
添加完后, 查看provider下面的加入复制的表  
```  
postgres@db5-> londiste3 -v /home/postgres/londiste3/src_digoal_01.ini tables  
2012-05-30 21:38:36,499 9563 DEBUG Connect 'db' to 'host=172.16.3.176 port=1921 user=postgres dbname=digoal_01  [...]'  
2012-05-30 21:38:36,503 9563 DEBUG display_table: select table_name, merge_state, table_attrs  
        from londiste.get_table_list('replika') where local  
        order by table_name  
Tables on node  
table_name              merge_state      table_attrs  
----------------------  ---------------  ---------------  
digoal_01.user_info     ok                 
digoal_01.user_session  ok                 
```  
添加完后, 查看subscriber 1下面的加入复制的表, 看到这里的状态是in-copy的, 表示正在初始化拷贝.  
```  
postgres@db5-> londiste3 -v /home/postgres/londiste3/dst1_digoal_01.ini tables  
2012-05-30 21:38:41,135 9567 DEBUG Connect 'db' to 'host=172.16.3.33 port=1919 user=postgres dbname=digoal_01  [...]'  
2012-05-30 21:38:41,139 9567 DEBUG display_table: select table_name, merge_state, table_attrs  
        from londiste.get_table_list('replika') where local  
        order by table_name  
Tables on node  
table_name              merge_state      table_attrs  
----------------------  ---------------  ---------------  
digoal_01.user_info     in-copy            
digoal_01.user_session  None               
```  
注意londiste3的add table选项, 表示允许的并行拷贝的表的数量, 默认是1个1个的串行拷贝.  
```  
max-parallel-copy=MAX_PARALLEL_COPY  
max number of parallel copy processes  
```  
另外需要注意的是, 初始化拷贝过程不是一个snapshot的过程, 比如添加的2个表, 即使并行拷贝也不是snapshot的.   
还有两个选项是seqs, missing分别用于查看复制的序列和未加入复制的表.  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini seqs  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini missing  
Missing objects on node  
obj_kind         obj_name  
---------------  -------------------------  
r                digoal_01.user_login_rec  
r                digoal_01.user_logout_rec  
```  
接下来添加两个日志表, 因为日志表上没有PK, 所以添加不成功.  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini add-table digoal_01.user_login_rec digoal_01.user_logout_rec  
2012-05-30 16:12:25,239 28118 ERROR Primary key missing on table: digoal_01.user_login_rec  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini missing  
Missing objects on node  
obj_kind         obj_name  
---------------  -------------------------  
r                digoal_01.user_login_rec  
r                digoal_01.user_logout_rec  
```  
因此需要在主节点和目标节点上把PK加上去.   
```  
postgres@db5-> psql digoal_01 digoal_01  
psql (9.1.3)  
Type "help" for help.  
digoal_01=> alter table digoal_01.user_login_rec add column id serial8 primary key;  
NOTICE:  ALTER TABLE will create implicit sequence "user_login_rec_id_seq" for serial column "user_login_rec.id"  
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "user_login_rec_pkey" for table "user_login_rec"  
ALTER TABLE  
digoal_01=> alter table digoal_01.user_logout_rec add column id serial8 primary key;  
NOTICE:  ALTER TABLE will create implicit sequence "user_logout_rec_id_seq" for serial column "user_logout_rec.id"  
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "user_logout_rec_pkey" for table "user_logout_rec"  
ALTER TABLE  
pg92@db-172-16-3-33-> psql digoal_01 digoal_01  
psql (9.2beta1)  
Type "help" for help.  
digoal_01=> alter table digoal_01.user_login_rec add column id serial8 primary key;  
NOTICE:  ALTER TABLE will create implicit sequence "user_login_rec_id_seq" for serial column "user_login_rec.id"  
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "user_login_rec_pkey" for table "user_login_rec"  
ALTER TABLE  
digoal_01=> alter table digoal_01.user_logout_rec add column id serial8 primary key;  
NOTICE:  ALTER TABLE will create implicit sequence "user_logout_rec_id_seq" for serial column "user_logout_rec.id"  
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "user_logout_rec_pkey" for table "user_logout_rec"  
ALTER TABLE  
```  
加好PK后, 再添加两个日志表就OK了.  记得加完provider还要加subscriber.   
```  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini add-table digoal_01.user_login_rec digoal_01.user_logout_rec  
2012-05-31 08:50:47,715 30213 INFO Table added: digoal_01.user_login_rec  
2012-05-31 08:50:47,719 30213 INFO Table added: digoal_01.user_logout_rec  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini add-table digoal_01.user_login_rec digoal_01.user_logout_rec  
2012-05-31 08:50:53,307 30219 INFO Table added: digoal_01.user_login_rec  
2012-05-31 08:50:53,313 30219 INFO Table added: digoal_01.user_logout_rec  
-- 新增了两个序列, 需要使用add-seq添加  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini missing  
Missing objects on node  
obj_kind         obj_name  
---------------  --------------------------------  
S                digoal_01.user_login_rec_id_seq  
S                digoal_01.user_logout_rec_id_seq  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini tables  
Tables on node  
table_name                 merge_state      table_attrs  
-------------------------  ---------------  ---------------  
digoal_01.user_info        ok                 
digoal_01.user_login_rec   ok                 
digoal_01.user_logout_rec  ok                 
digoal_01.user_session     ok   
```  
添加序列  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini add-seq digoal_01.user_login_rec_id_seq digoal_01.user_logout_rec_id_seq  
2012-05-31 08:53:34,666 30314 INFO Sequence added: digoal_01.user_login_rec_id_seq  
2012-05-31 08:53:34,668 30314 INFO Sequence added: digoal_01.user_logout_rec_id_seq  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini add-seq digoal_01.user_login_rec_id_seq digoal_01.user_logout_rec_id_seq  
2012-05-31 08:53:39,322 30318 INFO Sequence added: digoal_01.user_login_rec_id_seq  
2012-05-31 08:53:39,324 30318 INFO Sequence added: digoal_01.user_logout_rec_id_seq  
```  
查看添加的序列  
```  
postgres@db5-> londiste3 /home/postgres/londiste3/dst1_digoal_01.ini seqs  
Sequences on node  
seq_name                          local            last_value  
--------------------------------  ---------------  ---------------  
digoal_01.user_login_rec_id_seq   True             4396741  
digoal_01.user_logout_rec_id_seq  True             30001  
postgres@db5-> londiste3 /home/postgres/londiste3/src_digoal_01.ini seqs  
Sequences on node  
seq_name                          local            last_value  
--------------------------------  ---------------  ---------------  
digoal_01.user_login_rec_id_seq   True             4396741  
digoal_01.user_logout_rec_id_seq  True             30001  
```  
其中provider的worker进程只连一个数据库(主库)  
consumer的worker进程则连两个数据库(主库和目标库1).  
```  
postgres@db5-> netstat -anp|grep python  
(Not all processes could be identified, non-owned process info  
 will not be shown, you would have to be root to see it all.)  
tcp        0      0 172.16.3.176:42865          172.16.3.176:1921           ESTABLISHED 27316/python          
tcp        0      0 172.16.3.176:42869          172.16.3.176:1921           ESTABLISHED 27439/python          
tcp        0      0 172.16.3.176:3172           172.16.3.33:1919            ESTABLISHED 27439/python          
postgres@db5-> ps -ewf|grep python  
postgres 27316     1  0 15:53 ?        00:00:00 /opt/python2.7.3/bin/python /opt/skytools3.0.2/bin/londiste3 -d /home/postgres/londiste3/src_digoal_01.ini worker  
postgres 27439     1  0 15:57 ?        00:00:00 /opt/python2.7.3/bin/python /opt/skytools3.0.2/bin/londiste3 -d /home/postgres/londiste3/dst1_digoal_01.ini worker  
```  
## 下节URL  
[《Londiste 3 replicate case - 1 下节》](../201205/20120531_01.md)   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")