## 阿里云RDS PG postgres_fdw sharding 分库分表 (not drds)  
### 作者                                                                
digoal                                                                                                         
### 日期                                                                                                         
2019-11-22                                                                                                     
### 标签                                                                                                         
PostgreSQL , 阿里云 , rds , postgres_fdw , 分库分表 , drds    
----                                                                                                         
## 背景      
在同一个vpc内的所有rds pg实例，可以互联互通。甚至和mysql实例也能互联互通。  
[《阿里云 RDS PostgreSQL 云盘版支持 mysql_fdw - 直接读写mysql数据，作为小型实时数据仓库》](../201911/20191112_03.md)    
[《阿里云RDS PG 11开放dblink, postgres_fdw权限》](../201910/20191023_01.md)    
利用PostgreSQL的postgres_fdw, partition table的接口，可以实现数据库的分库分表。  
但是不建议盲目使用：  
- 使用起来较为复杂  
- 如果是简单的增删改查操作，PG单库已经可以提供很强的能力 [《PostgreSQL 11 1万亿 tpcb 性能测试 on 阿里云ECS + ESSD + zfs/lvm2条带 + block_size=32K》](../201809/20180919_01.md)    
- 如果业务确定要用分库分表，一定要明确是分析业务，还是oltp业务。  oltp 业务建议使用citus这样的形态（或者应用层决策分库，例如很多paas类场景，例如企业erp，每个企业对应一套数据库，没有跨企业的数据操作，所以可以用schema或database隔离企业数据，在业务层面实现简单分库分表效率是最高的），ap业务建议使用greenplum。   
不过还是要提一下如何使用postgres_fdw结合分区表实现分库分表。未来PG社区可能会在这个形态下发力(bruce 多次公开分享了社区使用postgres_fdw做sharding的想法)，在性能、功能方面实现更完美的操作。  
## postgres_fdw + 分区表sharding 分库分表  
环境：  
master  
pgm-bp15yx5p63i8y52f117910.pg.rds.aliyuncs.com  
shard0, shard1  
pgm-bp121kb7628ub4p9118050.pg.rds.aliyuncs.com  
shard2, shard3  
pgm-bp11lllmi55hyq68118070.pg.rds.aliyuncs.com  
步骤：  
1、在master上创建postgres_fdw以及主表（主分区）。应用访问master  
2、在shard上创建分区表  
3、在master上创建这些分区表的外部表  
4、将外部表作为分区attach到主表  
5、应用访问master的主表即可。数据自动路由到shard。  
支持select, insert, update, delete, join, group, sort等操作，所有操作不受影响，只是某些查询可以push down，某些可能不行。  
## 详细步骤  
```  
export PGPASSWORD=xxx  
export PGHOST=xxxxpg.rds.aliyuncs.com  
export PGPORT=3433  
export PGUSER=dtstest  
```  
1、master，创建master库。  
```  
create database master with owner dtstest;  
```  
2、远程，创建shard库。  
远程实例1  
```  
create database shard0 with owner dtstest;  
create database shard1 with owner dtstest;  
```  
远程实例2  
```  
create database shard2 with owner dtstest;  
create database shard3 with owner dtstest;  
```  
3、master，创建fdw插件  
```  
create extension postgres_fdw;  
```  
3、master，创建远程实例server  
```  
CREATE SERVER s0   
FOREIGN DATA WRAPPER postgres_fdw  
OPTIONS (host 'pgm-bp121kb7628ub4p9118050.pg.rds.aliyuncs.com', port '3433', dbname 'shard0');  
CREATE SERVER s1   
FOREIGN DATA WRAPPER postgres_fdw  
OPTIONS (host 'pgm-bp121kb7628ub4p9118050.pg.rds.aliyuncs.com', port '3433', dbname 'shard1');  
CREATE SERVER s2   
FOREIGN DATA WRAPPER postgres_fdw  
OPTIONS (host 'pgm-bp11lllmi55hyq68118070.pg.rds.aliyuncs.com', port '3433', dbname 'shard2');  
CREATE SERVER s3   
FOREIGN DATA WRAPPER postgres_fdw  
OPTIONS (host 'pgm-bp11lllmi55hyq68118070.pg.rds.aliyuncs.com', port '3433', dbname 'shard3');  
```  
4、master，给本地账号（应用程序连接master的数据库账号）配置如何连接远程实例server  
```  
CREATE USER MAPPING FOR 本地账号   
SERVER s0  
OPTIONS (user '远程实例账号', password '远程实例账号密码');  
CREATE USER MAPPING FOR dtstest   
SERVER s1  
OPTIONS (user 'dtstest', password 'xxx');  
CREATE USER MAPPING FOR dtstest   
SERVER s2  
OPTIONS (user 'dtstest', password 'xxx');  
CREATE USER MAPPING FOR dtstest   
SERVER s3  
OPTIONS (user 'dtstest', password 'xxx');  
```  
5、master，创建主表（主分区），如果是多级分区表，则创建好一级分区。    
```  
create table tbl_user (id int, info text, crt_time timestamp) PARTITION BY hash (id);  
create table tbl_log  (id int, orderid int8, info text, crt_time timestamp) PARTITION BY hash (id);  
```  
tbl_log为两级分区表，第一级是id hash分区，第二级是orderid分区  
```  
create table tbl_log0 PARTITION OF tbl_log FOR VALUES WITH ( MODULUS 4, REMAINDER 0) PARTITION BY hash (orderid);  
create table tbl_log1 PARTITION OF tbl_log FOR VALUES WITH ( MODULUS 4, REMAINDER 1) PARTITION BY hash (orderid);  
create table tbl_log2 PARTITION OF tbl_log FOR VALUES WITH ( MODULUS 4, REMAINDER 2) PARTITION BY hash (orderid);  
create table tbl_log3 PARTITION OF tbl_log FOR VALUES WITH ( MODULUS 4, REMAINDER 3) PARTITION BY hash (orderid);  
```  
接下来这些表的下一级分区将使用fdw外部表attach上来。  
多级分区可以定义在master，也可以下放到远程库进行定义。本例使用的是master定义二级分区。  
6、远程库，创建数据表  
s0,s1,s2,s3  
```  
create table tbl_user (id int primary key, info text, crt_time timestamp);  
create table tbl_log_0  (id int not null, orderid int8 not null, info text, crt_time timestamp);  
create table tbl_log_1  (id int not null, orderid int8 not null, info text, crt_time timestamp);  
create table tbl_log_2  (id int not null, orderid int8 not null, info text, crt_time timestamp);  
create table tbl_log_3  (id int not null, orderid int8 not null, info text, crt_time timestamp);  
```  
7、master，创建远程实例的外部表。  
```  
CREATE FOREIGN TABLE tbl_user_0 (id int not null, info text, crt_time timestamp)  
SERVER s0  
OPTIONS (schema_name 'public', table_name 'tbl_user');  
CREATE FOREIGN TABLE tbl_user_1 (id int not null, info text, crt_time timestamp)  
SERVER s1  
OPTIONS (schema_name 'public', table_name 'tbl_user');  
CREATE FOREIGN TABLE tbl_user_2 (id int not null, info text, crt_time timestamp)  
SERVER s2  
OPTIONS (schema_name 'public', table_name 'tbl_user');  
CREATE FOREIGN TABLE tbl_user_3 (id int not null, info text, crt_time timestamp)  
SERVER s3  
OPTIONS (schema_name 'public', table_name 'tbl_user');  
```  
```  
CREATE FOREIGN TABLE tbl_log0_0 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s0  
OPTIONS (schema_name 'public', table_name 'tbl_log_0');  
CREATE FOREIGN TABLE tbl_log0_1 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s0  
OPTIONS (schema_name 'public', table_name 'tbl_log_1');  
CREATE FOREIGN TABLE tbl_log0_2 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s0  
OPTIONS (schema_name 'public', table_name 'tbl_log_2');  
CREATE FOREIGN TABLE tbl_log0_3 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s0  
OPTIONS (schema_name 'public', table_name 'tbl_log_3');  
```  
```  
CREATE FOREIGN TABLE tbl_log1_0 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s1  
OPTIONS (schema_name 'public', table_name 'tbl_log_0');  
CREATE FOREIGN TABLE tbl_log1_1 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s1  
OPTIONS (schema_name 'public', table_name 'tbl_log_1');  
CREATE FOREIGN TABLE tbl_log1_2 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s1  
OPTIONS (schema_name 'public', table_name 'tbl_log_2');  
CREATE FOREIGN TABLE tbl_log1_3 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s1  
OPTIONS (schema_name 'public', table_name 'tbl_log_3');  
```  
```  
CREATE FOREIGN TABLE tbl_log2_0 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s2  
OPTIONS (schema_name 'public', table_name 'tbl_log_0');  
CREATE FOREIGN TABLE tbl_log2_1 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s2  
OPTIONS (schema_name 'public', table_name 'tbl_log_1');  
CREATE FOREIGN TABLE tbl_log2_2 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s2  
OPTIONS (schema_name 'public', table_name 'tbl_log_2');  
CREATE FOREIGN TABLE tbl_log2_3 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s2  
OPTIONS (schema_name 'public', table_name 'tbl_log_3');  
```  
```  
CREATE FOREIGN TABLE tbl_log3_0 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s3  
OPTIONS (schema_name 'public', table_name 'tbl_log_0');  
CREATE FOREIGN TABLE tbl_log3_1 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s3  
OPTIONS (schema_name 'public', table_name 'tbl_log_1');  
CREATE FOREIGN TABLE tbl_log3_2 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s3  
OPTIONS (schema_name 'public', table_name 'tbl_log_2');  
CREATE FOREIGN TABLE tbl_log3_3 (id int not null, orderid int8 not null, info text, crt_time timestamp)  
SERVER s3  
OPTIONS (schema_name 'public', table_name 'tbl_log_3');  