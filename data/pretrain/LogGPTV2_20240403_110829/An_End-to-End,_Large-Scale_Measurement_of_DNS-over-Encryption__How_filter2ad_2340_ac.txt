Figure 3, over 1.5K open DoT resolvers are discovered in each scan,
significantly more than the public resolver lists. Geographically,
Table 2 shows the top 10 countries with most resolvers, and their
fluctuation during our scan period. DoT resolvers in Ireland, Brazil
and Russia have doubled in three months, and those in the US in-
creased by four times. By contrast, we also find a significant drop of
DoT resolvers (-84%) in China, and the shut resolvers mostly belong
to a cloud hosting platform.
1Our ratio is lower than a previous report [47], because we exclude probes using
well-known public resolvers (e.g., 8.8.8.8) as their local resolver. Example DoT-capable
local resolvers we find include 194.109.6.66 (AS3265, Xs4all Internet BV), 212.242.40.51
(AS9158, Telenor A/S) and 78.158.0.2 (AS43700, UAB Consilium Optimum)
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Chaoyi Lu et al.
Finding 1.2: 25% providers own DoT resolvers equipped with
invalid SSL certificates, including a large provider and TLS
inspection devices. By contrast, public DoH servers have good
maintenance of certificates. SSL certificate plays an important
role for clients to authenticate their DNS servers. Using openssl [13],
we fetch and verify the certificates of all resolvers we discover. We
configure the tool to trust the system-wide trust store of CentOS
7.6 (i.e., Mozilla CA list [19]). As the names of DoT resolvers are un-
known to us3, we do not compare domain names to the certificates
provided, but only verify the certificate paths.
As shown by Figure 4, around 25% DoT providers install invalid
certificates on at least one of their resolvers. In our latest scan (May
1), 122 resolvers of 62 providers use invalid certificates, including
27 expired, 67 self-signed and 28 invalid certificate chains. Among
the 27 expired certificates, 9 expired in 2018 (e.g., 185.56.24.52, ex-
pired Jul 2018), suggesting that they could be out of maintenance.
2 resolvers of a large provider (Perfect Privacy, see Figure 3) use
self-signed certificates. We also find that 47 resolvers use self-signed
default certificates of FortiGate (a firewall of Fortinet) [43], acting
as DoT proxies that will inspect encrypted queries from DNS clients.
By contrast, we find no invalid certificates on port 443 of all 17
DoH resolvers we discover. In fact, it is reasonable because DoH
is Strict-Privacy-profile-only (see Section 2), and DoH queries will
fail if resolvers cannot be authenticated.
Using invalid certificates can pose privacy threats to DNS clients,
as they cannot authenticate the servers. Therefore, we suggest that
providers carefully examine their resolvers regularly, and correct
the misconfigurations.
4 CLIENTS: TO USE DNS-OVER-ENCRYPTION
For traditional DNS, studies have shown that public DNS services
can be broken for some DNS clients, such as inability to connect [60,
74]. Meanwhile, for common users, there have been concerns on the
performance overhead of encrypting DNS transactions [62, 68]. To
assess the current technology readiness of DNS-over-Encryption,
we perform a global large-scale measurement study on its client-
side usability. In this section, we first describe our methodology
which encounters two major challenges. We then focus on what’s
preventing global clients from using public DNS-over-Encryption
resolvers, and perform a country-level analysis on the performance
overhead of encrypted DNS queries.
4.1 Methodology
Experiment setup. To perform a large-scale measurement, the
first challenge we encounter is to collect a large number of global
vantage points. Particularly, as we study the client-side usability of
public DNS-over-Encryption resolvers, the vantage points should
be able to send encrypted DNS queries directly to public server
addresses, instead of their local DNS resolvers. Using two SOCKS
proxy networks, we address this challenge as described below in
Vantage points. From the collected clients, we develop a measure-
ment platform and perform a Reachability test to a set of popular
public DNS-over-Encryption resolvers. The second challenge is
how to perform a Performance test on query latency using proxy
networks, without direct control over the vantage points.
3Currently, authentication domain names should be obtained out of band [69].
Figure 3: Open DoT resolvers identified by each scan
Figure 4: Providers of open DoT resolvers
To identify their providers, we group the DoT resolvers by Com-
mon Names in their SSL certificates on port 8532. From Figure 3
we find several large providers account for more than 75% resolver
addresses, such as CleanBrowsing. Besides their well-known ad-
dresses (e.g., Cloudflare’s 1.1.1.1), the big players also offer DoT on
dozens of other addresses that are not advertised to public (e.g.,
89.81.172.185 for Cloudflare).
Apart from large ones, we also find small DoT providers which
account for the long tail. Figure 4 counts the DoT providers, and the
yellow line shows that 70% providers only operate one single resolver
address (e.g., qq.dog and securedns.zone). The small resolvers are
hardly included in public lists such as [39], which could be a result
of lacking promotion, or misconfiguration (i.e., resolvers mistakenly
open to public). In the end, our Internet-wide scan discovers more
options for DNS clients, and we suggest the providers promote their
services if they are intended for public use, or otherwise correct
the misconfigurations.
For DoH, we find 61 valid URLs with common DoH paths (e.g.,
/dns-query and /resolve) in our dataset. For each URL, we man-
ually check its availability by adding DoH query parameters (see
Figure 2). Besides the known 15 providers in [73] (at the time
of writing), we also find two DoH resolvers beyond the list (i.e.,
dns.adguard.com and dns.233py.com). As a result, we find 17
public DoH resolvers in total, which is fewer than the number of
DoT resolvers we find.
In addition, we further validate the DNS answers provided by
the open servers using our authoritative data. Resolvers owned
by dnsfilter.com (e.g., 103.247.37.37) constantly resolve arbitrary
domain queries to a fixed IP address, because we do not subscribe
to their service (i.e., our scan hosts are not in their users list). All
other resolvers respond with the correct answers.
2If the Common Name is a domain name, we group them by Second-Level Domains
(SLD).
An End-to-End, Large-Scale Measurement of DNS-over-Encryption: How Far Have We Come?
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Figure 5: Proxy network architecture
Table 3: Evaluation of client-side dataset
Figure 7: Reachability test items on each proxy client. Each
request is repeated 5 times maximum if a failure occurs, and
has a 30-second timeout.
Test
Reachability
Performance
Platform
ProxyRack (Global)
Zhima (Censored)
ProxyRack (Global)
# Distinct IP
29,622
85,112
8,257
# Country
166
1 (CN)
132
# AS
2,597
5
1,098
Figure 6: Geo-distribution of ProxyRack endpoints
Vantage points. One major challenge posed by our design require-
ments, is to obtain different vantage points globally. The clients
should be able to send DoT and DoH queries directly to any given
public resolvers, which makes common platforms including adver-
tising networks [28, 58], HTTP proxy networks [18, 33, 76] and
RIPE Atlas [23] (which has no DoH support) not suitable for this
task. As such, we collect our vantage points by leveraging two
residential TCP SOCKS proxy networks. As shown in Figure 5, the
proxy network accepts traffic generated by our measurement client,
and forwards it to various proxy nodes. It is suitable for encrypted
DNS queries, as DoT and DoH are both based on TCP and TLS.
In practice, we first leverage ProxyRack [5], a residential TCP
SOCKS proxy network. This network has been examined as a rep-
resentative platform by previous studies [60, 64], with more than
600,000 endpoints in over 150 countries. While gaining a global view,
we are also interested in DNS-over-Encryption usability in censored
networks, where DNS traffic is oftentimes manipulated [27, 66]. As
such, we complement our dataset with another TCP SOCKS proxy
network called Zhima [10], whose endpoints are all located in 5
ASes of two Chinese ISPs. Particularly, the two platforms only for-
ward our traffic to exit nodes, and do not intercept TLS sessions.
All encrypted DNS queries that we generate are not visible to the
proxy networks.
In the end, Table 3 summarizes our collected dataset, with 122,991
vantage points in total. Through ProxyRack, we collect over 29K
clients from 166 countries globally, and Figure 6 shows their geo-
graphic distribution.
Reachability test. To test whether DNS-over-Encryption services
are broken by in-path devices, we perform DNS lookups on each
proxy client. As it is challenging yet inefficient to investigate a wide
range of resolvers, plus the platforms set rate limits for our query,
we narrow down our test scope to three large and representative
public resolvers: Cloudflare [2], Google [4] and Quad9 [14]. For
comparison, we also include a self-built resolver which supports
clear-text DNS, DoT and DoH.
Figure 7 presents the workflow of our reachability test. From each
vantage point, we first issue clear-text DNS, DoT and DoH queries to
each resolver in our list. Studies and forum posts [7, 74] have shown
that compared to secondary ones, primary addresses of the resolvers
are more likely to encounter reachability problems, therefore we
only consider their primary addresses (listed in Figure 7). Each DNS
query we issue contains an A-type request of our own domain
name, which is uniquely prefixed in order to avoid caching.
When testing DoT and DoH, we also collect and verify their SSL
certificates. In order to study the real-world risks of opportunistic
requests, we use Opportunistic Privacy profile for DoT queries (i.e.,
authentication is not required before DNS lookup), while DoH is
Strict-Privacy-profile-only (i.e., resolver is strictly authenticated).
Furthermore, to understand why DNS-over-Encryption resolvers
are not accessible, from the failed clients we probe common ports
and fetch the webpages of the resolvers (listed in Figure 7). This
check distinguishes whether the clients are connecting to the real
resolvers, by comparing our probing results with open ports and
webpages of the genuine resolvers. However, the proxy networks
set a limited lifetime for each vantage point, making it infeasible
to perform many probes for all resolvers in our list. Moreover, a
previous work shows that 10% DNS clients are not able to query
Cloudflare’s 1.1.1.1 [74], making it a representative case. Therefore,
while testing the reachability of all resolvers in the list, on each
endpoint we only probe the ports and fetch the webpages of the
Cloudflare resolver, to understand why its DNS-over-Encryption
services are not accessible (see Figure 7).
Performance test. DNS-over-Encryption can incur performance
overhead for DNS clients, particularly on query latency. For DoT
and DoH, extra delay can be introduced by TLS session setup and
encryption. To measure their performance, we focus on the relative
performance overhead between DNS-over-Encryption and clear-text
DNS, instead of their absolute query latency.
The reuse of connections has a great impact on the performance
of DNS-over-Encryption. To amortize query latency, it is required
that clients and servers should reuse connections when resources
are sufficient [49]. In current implementations, connection reuse
is the default setting of popular client-side software [36, 38] and
servers [46, 75], with connection lifetime of tens of seconds. Un-
der this lifetime, a study shows from passive traffic that connec-
tion reuse can be frequent (over 90% connection hit fraction) [79].
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Chaoyi Lu et al.
Therefore, we consider that connection reuse is the major scenario
of DNS-over-Encryption queries, and take it as the main focus of
our performance test. Meanwhile, as our platforms only accepts
TCP traffic, we can only use DNS/TCP as the baseline of clear-
text DNS, to compare with DNS-over-Encryption. However, [79]
also shows that TCP latency is equivalent to UDP after connection
establishment (i.e., with reused connections, which is our major
focus), therefore we regard DNS/TCP as a reasonable baseline for
clear-text DNS.
N and T′
R which we cannot observe).
proxy node (i.e., T′
(i.e., T′
R), and we aim to compare T′
DNS/TCP. While we don’t have T′
To observe DNS query latency, we encounter another major
challenge, as we do not have direct control over the vantage points.
As shown in Figure 8, instead of directly on the proxy clients, we
can only observe query latency on our measurement client (i.e., TN
and TR), which is larger than the actual DNS query latency for the
We first consider the relative performance with reused connec-
tions (i.e., our major focus). Under this scenario, the latency of both
encrypted and clear-text queries only includes DNS transactions
R of DNS-over-Encryption and
R, we find that it is equivalent
to compare their TR. This is because for each client, TR only adds
one RTT between our measurement client and the proxy node to
both encrypted and clear-text queries, so their differences remain.
Therefore, on each proxy client we issue 20 DNS/TCP, DoT and
DoH queries respectively (the maximum number of queries we can
send during the limited lifetime of our vantage points), calculate
the medians of TR for each kind of DNS request, and compare their
differences as relative performance overhead.
By contrast, when connection is not reused, comparing TN of
DNS-over-Encryption and DNS/TCP is not equivalent to comparing
N . In fact, the relative overhead becomes larger, as TN incurs
several RTTs between our measurement client and the proxy node
to encrypted queries (via TLS handshake), but not to clear-text
queries. As such, we choose to perform the test on several con-
trolled vantages. On each machine, we issue 200 DNS/TCP, DoT
and DoH queries without reusing their connections, and compare
their median value of query latency. The test has a limitation on
the number of vantages, but according to our above discussion,
connection reuse is the more common setting. The results of this
test are only used for comparison, but not our focus.
their T′
Because the ProxyRack exit nodes rotate, it’s important that the
repeated DNS queries be sent from one identical node. To this end,
before using each proxy, we first check its remaining uptime (using
ProxyRack API) and discard it if expiring soon, to make sure it can
survive all our queries. Moreover, upon any service disruption of
exit nodes (e.g., unexpected connection drop with the super proxy),
we remove this node from our dataset.
Limitations. For security reasons, our proxy networks only allow
TCP traffic. As a result, in the client-side test we use DNS/TCP
for the baseline test, but DNS/UDP is a more common choice for
Internet users. While platforms such as RIPE Atlas [23] support
DNS/UDP, it is not suitable because: 1) it does not allow a node
connecting to arbitrary destinations through DoH; 2) it cannot
reuse connections for subsequent queries (i.e., performance test
cannot be done). Nevertheless, our discussion earlier shows that
DNS/TCP has equivalent performance to DNS/UDP with reused
Figure 8: DNS queries via proxy networks for DoT and DoH.
DNS/TCP includes all but the TLS handshake.
connections (our major focus) [79], thus using DNS/TCP does not
influence our test results.
Ethics. The ethical consideration centers on the proxy networks.
Firstly, the platforms we use are both commercial, and we abide
their terms of service. The endpoints are recruited by the platforms,
and have agreements to route traffic. We only generate DNS and
HTTP requests of benign domains and addresses, thus no harm is
incurred to the proxy clients.
4.2 Reachability to
DNS-over-Encryption Servers
Key observation 2: Over 99% global users can normally access
large DNS-over-Encryption servers, whilst less than 1% clients
are experiencing problems caused by IP conflict, censorship and
TLS interception.
Table 4 presents our reachability test results. From previous
works on traditional DNS, we investigate if DNS-over-Encryption
services are affected by the following behaviors.
● IP conflict. The reasons of IP conflict vary from address being
taken by in-path devices, address being blackholed, or used for in-