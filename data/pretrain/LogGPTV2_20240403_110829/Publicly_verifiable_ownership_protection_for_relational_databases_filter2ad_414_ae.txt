(time)
overhead
(space)
↑
−−
↑
−−
the overhead, it is used as a tradeoff between false hit, false miss,
and failure error rate. Increasing τ will make the robustness better
in terms of false hit, but worse in terms of false miss and failure
error rate.
5. RELATED WORK
Watermarking has been extensively studied in the context of mul-
timedia data for the purpose of ownership protection and authenti-
cation [7, 17, 18]. Most watermarking schemes proposed so far are
secret key based, which require complete disclosure of the water-
marking key in watermark veriﬁcation. These watermarking schemes
can be further classiﬁed as private (both the secret key and origi-
nal data are required in watermark veriﬁcation), blind (only the se-
cret key is needed for watermark bit decoding), and semi-blind (it
requires both the secret key and watermark bit sequence in water-
mark detection). Watermarking schemes can also be classiﬁed as
being robust (the watermark is hardly destroyed in attacks), or frag-
ile (the watermark is hardly untouched if the watermarked data is
modiﬁed). The robust watermark may be used for ownership proof
while the fragile watermark is suitable for data authentication and
integrity check.
As database piracy increasingly becomes a serious problem, wa-
termarking techniques have been extended to protect the ownership
of published or distributed databases [1, 13, 28, 29, 26, 19, 20,
2]. Agrawal and Kiernan [1] ﬁrst proposed a robust watermarking
scheme for database relations. Their scheme modiﬁes a collection
of least signiﬁcant bits of numerical attributes. The locations of
those least signiﬁcant bits, and the values to which those bits are
modiﬁed, are all determined by a secret key. With the same secret
key, those modiﬁed values can be localized in watermark detection,
and ownership is claimed if a large portion of the detected values
are as expected.
As noted by Agrawal and Kiernan [1], database relations dif-
fer from multimedia data in signiﬁcant ways and hence require a
different class of watermarking techniques. A major difference is
that a database relation is composed of a set of tuples; each tuple
represents an independent object which can be added, deleted, and
modiﬁed frequently in either benign updates or malicious attacks.
In contrast, a multimedia object consists of a large number of bits;
portions of a multimedia object are bound together in ﬁxed spatial
or temporal order that cannot be arbitrarily changed. It is also noted
that the frequency domain watermarking being used in the multi-
media context is not suitable for watermarking relational data. The
reason is that the error introduced in frequency domain will spread
over all attribute values (i.e., the whole “image”), which may not
be acceptable in certain database applications.
There have been other schemes proposed for watermarking rela-
tional data. In Sion et al.’s scheme [28], an arbitrary bit is embed-
ded into a selected subset of numeric values by changing the distri-
bution of the values. The selection of the values is based on a se-
cret sorting. In another work, Gross-Amblard [13] designs a query-
preserving scheme which guarantees that special queries (called lo-
cal queries) can be answered up to an acceptable distortion. Recent
work also includes watermarking categorical data [26], streaming
data [29], XML data [27], and medical databases [2]. The wa-
termarking schemes for categorical data [26, 2] exchange pairs of
categorical values so as to embed watermark information. In this
case, there is no insigniﬁcant change and the error constraint is con-
sidered at aggregation level (e.g., k-anonymity).
A common feature of this class of work is that a watermark is
embedded and detected based on a secret key. Without knowing
the key, an attacker is not able to locate exactly where the water-
mark is embedded, nor does he destroy the embedded watermark
unless too many errors are introduced. A drawback of such a solu-
tion is that the ownership of watermarked data can be proven only
once. After the key is revealed to the public (e.g., to the court) in
the proof, anyone knowing the key can easily locate and remove the
embedded watermark. Another common feature of these schemes
is that the watermarking process introduces errors to the underlying
data. This may severely affect database applications unless error
constraints are carefully enforced in the watermarking process. In
addition, a tradeoff between the watermarking error and the robust-
ness of watermarking schemes has to be made.
The concept of public key based watermark (or asymmetric wa-
termark) was ﬁrst conceived in the multimedia context. Hachez and
Quisquater summarized the work in this area in [14]. As mentioned
in [14], one of the ﬁrst ideas was proposed by Hartung and Girod

[15] for watermarking compressed video. The basic idea is to make
a part of the embedded watermark public such that a user can check
the presence of this part of watermark. However, an attacker is able
to remove this part of watermark and thus invalidate a public de-
tector. Another idea is to embed private key information into a host
signal and detect a correlation between the signal and a transforma-
tion of the signal using a public key [33]. Other correlation-based
public watermarking schemes include [9, 30, 11]. However, such
watermarks can be removed by certain attacks such as a sensitivity
attack [6, 21] or confusing attack [34].
Craver and Katzenbeisser [8] used a zero knowledge protocol to
prove the presence of a watermark in a signal “without revealing the
exact location and nature of the watermark (speciﬁed by a private
key).” As in most zero knowledge protocols, the proposed scheme
requires many rounds of interactions between prover and veriﬁer,
which may not be efﬁcient in practice. It is also not clear how to ex-
tend this scheme to watermarking relational databases. Because the
original watermark is not certiﬁed and because a veriﬁer is allowed
to perform the protocol multiple times, this scheme may be subject
to oracle attack (an attacker uses a public detector repeatedly to test
modiﬁed signals so as to remove the watermark), plain-text chosen
attack (a special case of oracle attack in which the tested signals
are chosen by an attacker), or ambiguity attack (also called invert-
ibility attack, in which a fake watermark is discovered from the
watermarked signal). In comparison, our scheme requires no inter-
action between a veriﬁer and the owner of data, thus is immune to
both oracle attack and plain-text chosen attack. The watermark is
certiﬁed in our scheme for thwarting the ambiguity attack (which
we call additive attack in this paper). In addition, our scheme is
both efﬁcient and robust for typical database operations.
6. CONCLUSION
In this paper, we proposed a public watermarking scheme for re-
lational databases. The scheme is unique in that it has the following
properties.
• Public veriﬁability Given a database relation to be pub-
lished or distributed, the owner of data uses a public water-
mark key to generate a public watermark, which is a rela-
tion with binary attributes. Anyone can use the watermark
key and the watermark to check whether a suspicious copy
of data is watermarked, and, if so, prove the ownership of
the data by checking a watermark certiﬁcate ofﬁcially signed
by a trusted certiﬁcate authority, DB-CA. The watermark
certiﬁcate contains the owner’s ID, the watermark key, the
hashes of both the watermark and DB relation, the ﬁrst time
the relation was certiﬁed, the validity period of the current
certiﬁcate, and the DB-CA’s signature. The watermark cer-
tiﬁcate may be revoked and re-certiﬁed in the case of iden-
tity change, ownership change, DB-CA compromise, or data
update. Therefore, the revocation status also needs to be
checked in ownership proof. To our best knowledge, our
scheme is the only one to achieve public ownership proof
in database literature. In contrast, all existing schemes are
based on secret key, by which ownership cannot be proven
more than once in public.
• Distortion free Different from typical watermarking schemes
(e.g., [1]) for database ownership proof that hide watermark
information in data by modifying least signiﬁcant bits (LSBs),
our scheme generates a public watermark from a collection
of the most signiﬁcant bits (MSBs). Our scheme does not
modify any MSBs; therefore, it is distortion-free. The public
watermark is a database relation that has the same primary
key attribute as the original data, plus one or more binary
attributes to store the MSBs. Even though the MSBs are
publicly known, an attacker cannot modify them without in-
troducing intolerable error to the underlying data. In com-
parison, all previous watermarking schemes for databases
introduce some kind of distortion to the watermarked data.
They either modify LSB’s for numerical data (e.g., [1, 19,
20]), or exchange values among categorical data (e.g., [26,
2]). Those schemes work well for particular types of data
only, while our scheme can be applied for any type of data
distortion-free.
• Incremental updatability Following the line of [1], each
tuple in a database relation is independently processed in
our scheme. Neither watermark generation nor detection de-
pends on any correlation or costly sorting among data items
as required in [28, 26, 2]. Therefore, the scheme is par-
ticularly efﬁcient for typical database operations, which are
mostly tuple oriented. In the case of tuple insertion, deletion,
or modiﬁcation, the watermark can be easily updated by pro-
cessing those relating tuples only, with simple computation
of random sequence numbers and modulus operations. Due
to the robustness of our scheme, the update of watermark
certiﬁcate can be performed periodically after a batch of data
updates.
• Robustness Since the ownership of data is proven after the
data is published or distributed, it is crucial that our scheme
is robust against various attacks that intend to invalidate wa-
termark detection or ownership proof. The robustness of our
scheme is measured in terms of: (i) false hit, the probabil-
ity of detecting a valid watermark from non-watermarked
data; (ii) false miss, the probability of not detecting a valid
watermark from watermarked data due to attacks; and (iii)
failure error rate, the least portion of data that has to be in-
tolerably modiﬁed so as to defeat our watermark detection.
Typical database attacks considered in this paper include tu-
ple/attribute insertion, deletion, and random/selecitive value
modiﬁcation/suppression. Both theoretical analysis and ex-
perimental study show that our scheme is robust in terms
of these measures, which can be adjusted by the watermark
generation and detection parameters. We have also studied
the tradeoff between the robustness and the overhead of our
scheme. Our scheme is robust against the data frame-up at-
tack and additive attack that may be more perilous to public
watermarking schemes.
The major contribution of this paper is the proposal of a public
watermarking scheme that has the above properties. Though our
scheme may not necessarily supersede secret key based schemes
due to the overhead of using certiﬁcate and public watermark, we
believe that it can be applied more practically in the real world for
database ownership protection. Our future plan includes extending
our scheme to other types of data such as XML and streaming data.
7. REFERENCES
[1] R. Agrawal and J. Kiernan. Watermarking relational
databases. In Proceedings of VLDB, pages 155–166, 2002.
[2] E. Bertino, B. C. Ooi, Y. Yang, and R. Deng. Privacy and
ownership preserving of outsourced medical data. In
Proceedings of IEEE International Conference on Data
Engineering, pages 521–532, 2005.

[3] D. Boneh and M. Franklin. Identity-based encryption from
the weil pairing. In Proceedings of CRYPTO’2001, LNCS
2139, Springer-Varlag, pages 213–229, 2001.
[4] Coalition Against Database Piracy (CADP). Piracy is
unacceptable in the information age or any other age, July 2,
2005. http://cadp.net/default.asp.
[5] C. Cocks. An identity based encryption scheme based on
quadratic residues. In Cryptography and Coding - Institute of
Mathematics and Its Applications International Conference
on Cryp- tography and Coding – Proceedings of IMA 2001,
LNCS 2260, pages 360–363, 2001.
[6] I. J. Cox and J. M. G. Linnartz. Public watermarks and
resistance to tampering. In Proceedings of International
Conference on Image Processing, pages 3–6, 1997.
[7] I. J. Cox, M. L. Miller, and J. A. Bloom. Digital
Watermarking: Principles and Practice. Morgan Kaufmann,
2001.
[8] S. Craver and S. Katzenbeisser. Security analysis of
public-key watermarking schemes. In SPIE Vol. 4475,
Mathematics of Data/Image Coding, Compression, and
Encryption IV, pages 172–182, 2001.
[18] S. Katzenbeisser and F. A. Petitcolas, editors. Information
Hiding Techniques for Steganography and Digital
Watermarking. Artech House, 2000.
[19] Y. Li, V. Swarup, and S. Jajodia. Constructing a virtual
primary key for ﬁngerprinting relational data. In Proceedings
of ACM Workshop on Digital Rights Management (DRM),
October 2003.
[20] Y. Li, V. Swarup, and S. Jajodia. Fingerprinting relational
databases: Schemes and specialties. IEEE Transactions on
Dependable and Secure Computing (TDSC), 2(1):34–45,
2005.
[21] J. M. G. Linnartz and M. van Dijk. Analysis of the sensitivity
attack against electronic watermarks in images. In
Proceedings of 2nd Workshop on Information Hiding
Workshop, 1998.
[22] A. Menezes, P. C. van Oorschot, and S. A. Vanstone.
Handbook of Applied Cryptography. CRC Press, 1997.
[23] S. Micali. Efﬁcient certiﬁcate revocation. In Technical
Report: TM-542b. Massachusetts Institute of Technology.
Cambridge, MA, USA, 1996.
[24] B. Schneier. Applied Cryptography. John Wiley & Sons,
[9] J. J. Eggers, J. K. Su, and B. Girod. Public key watermarking
Inc., 1996.
by eigenvectors of linear transforms. In Proceedings of
European Signal Processing Conference (EUSIPCO), 2000.
[10] S. Farrell and R. Housley. An internet attribute certiﬁcate
proﬁle for authorization, internet draft, April, 2002.
http://www.ietf.org/rfc/rfc3281.txt.
[11] T. Furon, I. Venturini, and P. Duhamel. A uniﬁed approach of
asymmetric watermarking schemes. In SPIE Vol. 4314,
Security and Watermarking of Multimedia Contents III,
pages 269–279, 2001.
[12] B. Gray and J. Gorelick. Database piracy plague. The
Washington Times, March 1, 2004.
http://www.washingtontimes.com.
[13] D. Gross-Amblard. Query-preserving watermarking of
relational databases and xml documents. In Proceedings of
ACM Symposium on Principles of Database Systems
(PODS), pages 191–201, 2003.
[14] G. Hachez and J. Quisquater. Which directions for
asymmetric watermarking. In Proceedings of XI European
Signal Processing Conference (EUSIPCO), Vol. I, pages
283–286, 2002.
[15] F. Hartung and B. Girod. Fast public-key watermarking of
compressed video. In Proceedings of IEEE International
Conference on Speech and Signal Processing, 1997.
[16] R. Housley, W. Ford, W. Polk, and D. Solo. Internet x.509
public key infrastructure certiﬁcate and crl proﬁle, July 2,
2005. http://www.ietf.org/rfc/rfc2459.txt.
[17] N. F. Johnson, Z. Duric, and S. Jajodia. Information Hiding:
Steganography and Watermarking–Attacks and
Countermeasures. Kluwer Publishers, 2000.
[25] A. Shamir. Identity-based cryptosystems and signature
schemes. In Proceedings of CRYPTO’84, LNCS 196,
Springer-Varlag, pages 47–53, 1984.
[26] R. Sion. Proving ownership over categorical data. In
Proceedings of IEEE International Conference on Data
Engineering, pages 584–596, 2004.
[27] R. Sion, M. Atallah, and S. Prabhakar. Resilient information
hiding for abstract semi-structures. In Proceedings of the
Workshop on Digital Watermarking, 2003.
[28] R. Sion, M. Atallah, and S. Prabhakar. Rights protection for
relational data. In Proceedings of ACM SIGMOD
International Conference on Management of Data, pages
98–108, 2003.
[29] R. Sion, M. Atallah, and S. Prabhakar. Resilient rights
protection for sensor streams. In Proceedings of the Very
Large Databases Conference, pages 732–743, 2004.
[30] J. Smith and C. Dodge. Developments in steganography. In
Proceedings of 3rd International Workshop on Information
Hiding, pages 77–87, 1999.
[31] G. W. Snedecor and W. G. Cochran. Statistical Methods. 8th
edition, Iowa State Press, 1989.
[32] L. Vaas. Putting a stop to database piracy. eWEEK,
enterprise news and reviews, September 24, 2003.
http://www.eweek.com/print article/0,3048,a=107965,00.asp.
[33] R. G. van Schyndel, A. Z. Tirkel, and I. D. Svalbe. Key
independent watermark detection. In Proceedings of IEEE
International Conference on Multimedia Computing and
Systems, Vol. 1, 1999.
[34] Y. Wu, F. Bao, and C. Xu. On the security of two public key
watermarking schemes. In Proceedings of 4th IEEE
Paciﬁc-Rim Conference on Multimedia, 2003.
