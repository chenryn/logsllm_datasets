codes -ECC) 
faults are not 
degree of re­
This empowers architects 
some of the 
a certain 
desired 
to reclaim 
design margin imposed by such techniques 
while 
to provide 
AVF-value 
100% coverage 
experience  an 
execution 
tolerance 
that provide 
always essential 
liability. 
significant 
still meeting reliability 
that the tighter 
(the focus of this paper), 
margin reclamation. 
requirements. 
It therefore 
follows 
estimate 
and more accurate 
the vulnerability 
for design 
the potential 
the greater 
like periodic 
target and protect 
sets. 
scrubbing 
[11] of memory structures 
up­
this mechanism 
of multi-bit 
precisely 
against 
With aggressive 
scaling 
of device dimensions, 
the re­
where charge generation 
results 
from particle 
encompasses 
more devices. 
could potentially 
strike 
bits and is called a spatial (clustered) 
multi-bit 
This means that a sin­
cause upsets on multi­
gion in silicon 
strikes 
gle particle 
ple adjacent 
upset. Radiation 
chips [10][6] 
technologies 
tests on microprocessors 
[2] and SRAM 
multi-bit 
present 
starting 
evidence 
at the 130nm node and smaller. 
of spatial 
upsets in 
2.2. Multi-Bit Upsets in Nano-Scale SRAMs 
Upsets on multiple 
bits in a memory structure 
can occur 
upset. If the memory structure 
is 
strike 
First, 
two distinct 
mechanisms. 
of two possible 
upsets on two different 
using single-error 
if two inde­
locations 
of the struc­
bits, this mechanism 
as a result 
pendent particles 
ture causing 
called a temporal multi-bit 
is protected 
this form of multi-bit 
nign. This is because 
the affected 
not belong to the same word). Moreover, 
that two bits in the same word get upset from two inde­
pendent 
the same read out period can 
and is very small. Nonetheless, 
easily 
correcting 
upsets can generally 
SEC codes can correct 
(SEC) codes, then 
be considered 
word is read (assuming 
strikes during 
that both upset bits do 
be evaluated 
the error when 
particle 
methods 
be­
the probability 
made from neutron-radiation 
of two cross-coupled 
The mechanism of clustered  multi-bit 
upsets can be 
holding 
statically 
values at circuit 
with observations 
Figure l(b) shows the recent (6Snm and smaller) 
complementary 
the mechanism 
of a multi­
of the layout of SRAM bit cells is 
explained 
tests on SRAM arrays [6]. Figure l(a) shows the basic cir­
cuit of an SRAM bit cell. It consists 
inverters 
nodes Q and QB. To understand 
bit upset, an explanation 
required. 
thin layout that is widely used in the design of SRAM ar­
and vertically 
rays. This layout is mirrored 
to 
create a highly compact array of bit cells, 
as shown in Fig­
ure 1 (c). It can be seen that a p-well is shared between every 
pair of columns. 
and conse­
quent charge collection, 
attributed 
[13]. The generated 
and turns on a parasitic  bipolar 
is developed 
and is 
multi-bit 
upsets 
of the bulk 
to be the root cause of clustered 
charge raises the potential 
In the event of a particle 
horizontally 
briefly shorting 
transistor, 
a battery 
strike 
effect 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
479 
DSN 2010: George et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:46 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Bit pos. I 
0 
Solid Os 
Bit pos. 2 
0 
Bit pos. 3 
0 
Q 
0 
Q 
0 
Q 
0 
QB 
I 
QB  QB 
I 
I 
Q 
pattern 
Checkerboard 
0  0 I  1 1 I  0  0  0 0  I 1 
0  0 I  1  1 I  0  0  0 0  I 1 
0  0 I  1  1 I  0  0  0  0 I 1 
Bit pos. I  I Bit pos. 2  I Bit pos. 3 
Q  QB 
I 
0 10  I [1 0 10  I [1 o I 0  I I 1 I 
I 
It!  0 10 I IJ  0 10 Ed o I 0 
I 
0  I 0  11 1 0 I 0 
0 10 
I 1) 
I I 0 
I 
I I 0 
0 10  I 
QB  QB 
Q 
0 
0 
0 
0 
Table 1 .  Various bit patterns and associated 
vulnerabilities to clustered multi-bit 
Each row can be considered 3-bit words. 
Complementary circuit nodes Q and QB are 
indicated. Value of a bit is the value held  at 
the node Q. 
u psets. 
the multi-bit 
sary to capture 
highly scaled devices 
in detail 
of the redefined 
sets, and overestimation 
the experimental 
transient 
effects exhibited 
by 
and circuits. 
This section 
describes 
setup that was used in this study 
single bit-upset 
model, spatial 
multi-bit 
up­
of ACE analyses. 
3.1. Fault Injection 
Methodology/Framework 
validation 
technique 
experiments 
where 
of faults 
(injection) 
is 
introduction 
Fault injection 
is a dependability 
of controlled 
are required 
in the presence 
into the system [3]. It is a statistical 
induced by the deliberate 
that is based on realization 
observation 
of system behavior 
explicitly 
of faults 
a large number of experiments 
timate that is sufficiently 
not a suitable 
mation is needed. Even though ACE analyses 
of providing 
injections, 
gins through 
may justify 
ogy during early design time. 
the use of a tighter 
the time overhead 
an estimate 
the potential 
in  a much shorter 
benefit of reclaiming 
and more accurate 
of fault injection 
in situations 
accurate. 
approach 
to obtain an es­
design mar­
Because of this, it is 
where a fast approxi­
are capable 
time than fault 
analysis 
methodol­
method where 
Design tools used in the early stages of a design pro­
and 
is 
used to prove functional 
timing capabilities 
correctness 
before a prototype 
node to the bulk (which is at OV) and 
flipping 
the 
of the cell. Even though this potential 
across the bulk (between 
well-tap), 
of turning 
is capable 
decreases 
the circuit 
contents 
linearly 
nearest 
sitic bipolar 
same p-well. 
or bits in neighboring 
entation 
a strike 
transistors 
This could be an adjacent 
in neighboring 
words, depending 
the struck point and the 
on the para­
bit cells sharing 
the 
bit in the same word, 
on the layout (ori­
to that of the p-well). 
upsets is also data 
multi-bit 
of the word with respect 
to clustered 
The vulnerability 
cess are usually 
to demonstrate 
built. One assumption 
a low-level 
fault injection 
case, and fault injection 
in high-performance, 
yield meaningful 
results. 
For the experiments 
[12][5]. 
of fault injection 
studies 
is that 
RTL model is required 
As described 
for implementation 
below, this is not the 
of 
for AVF-estimation 
implemented 
high-level 
language 
simulations 
can 
if all cells in Figure l(c) 
that the value at circuit 
the shared p-well at the 
bit cells that share the same p­
the most vulnerable 
case is when 
are 
in Table 1 [6]. All cells shaded grey represent 
with different 
For example, 
nodes from adjacent 
dependent. 
circuit 
well hold a value 1. Therefore, 
are storing 
the value 0 (assuming 
node Q is the value of the bit cell), 
center of the figure is the most vulnerable 
upset. A few such scenarios 
listed 
p-wells 
(refer 
vulnerable 
p-wells 
ation of bit-states 
the notion of a simple bit-flip 
scription 
to-llforce-to-O 
the strike. 
and the white cells indicate 
of the scenario 
Figure l(c)). 
mechanism 
cells, 
n-wells. 
and vulnerabilities 
highlight 
This enumer­
the fact that 
is no longer an accurate 
by a force­
but is better described 
region to a 4-bit 
data patterns 
shared 
i.e. the cells whose nodes hold 1 at shared 
that is determined 
by the site of 
Cells shaded dark-gray 
indicate 
de­
3. Experimental 
Methodology 
One drawback of ACE analysis 
AVF is that it is known to provide 
[15]. The other drawback 
that a single-event 
analysis 
upset affects exactly 
is that analysis 
of AVF assumes 
one bit. While ACE 
holds well for this model, new models are neces-
method of estimating 
conservative 
estimates 
cycle 
(e.g. reg­
faults 
buffer). 
at precise 
run­
was 
presented 
of interest 
simulators 
in this paper, fault injec­
simulator 
Simulation 
as workloads. 
and observability 
microarchitectural 
exist (e.g. SimpleScalar, 
on a microarchitecture 
because of 
-the ability 
and the ability 
structures 
applications 
to realize 
fault injection 
of experiments 
on native hardware 
to target faults 
cycles and to inject 
to switch to execution 
tions were performed 
ning benchmark 
chosen as the approach 
controllability 
to track execution 
counts, 
the ability 
to speed up long campaigns, 
at specific 
ister file, reorder 
Choice of simulator: While a number of micro-archi­
tecture 
[16] was the choice because of the following 
is a cycle-accurate 
a widely accepted, 
plemented 
When studying 
it is imperative 
sentative 
and micro-architecture 
tectures, 
and useful feature 
from simulation 
time during the execution 
valuable 
offered by PTLsim is the ability 
to native execution 
effects of new and emerging 
that it be performed 
fault models, 
on architectures 
at a defined point in 
is 
simulators 
hardware 
in a number of general-purpose 
m5) PTLsim 
reasons. 
to speed up simulation 
It 
x86-64 is 
fast-forwarding 
and future systems. 
This capability 
which offer little 
of a workload. 
An important 
to realize 
of current 
support. 
to switch 
target 
repre­
Many architecture­
discontinued 
archi­
x86-64 architecture simulator. 
commercially 
available 
architecture 
microprocessors. 
im­
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
480 
DSN 2010: George et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:46 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
of high performance 
PTL­
times. Given the availability 
systems with CPUs based on the x86-64 architecture, 
sim was a clear choice. 
to enable fault injections. 
to realize 
using PERL scripts. 
In addition, 
campaigns 
The PTLsim simulator 
long fault injection 
automation 
was implemented 
was modified 
required 
hardware 
application 
were first run 
Golden runs of each benchmark 
maximum simulation 
a fault. 
campaigns 
time to inject 
operation. 
was advanced 
The simulation 
times and to record outputs 
cycles after a fault was injected. 
These pieces of information 
are fed 
that pick a random point in 
to collect 
of fault-free 
into fault injection 
time between the start of the program and the maximum ex­
ecution 
for one million 
lation was then switched 
an overall 
Choice of workload: The main goal of these experiments 
is to verify functional 
a certain 
specified 
must be able to inject 
time during the execution 
of true random nature. 
of an architecture 
of faults 
belonging 
The experimental 
setup 
The simu­
on native hardware 
for 
campaign. 
workload 
fault model of interest. 
speed up of the simulation 
fault at a random point in 
to emulate a fault 
in the presence 
correctness 
of a workload 
a specified 
to execute 
running 
to a 
The widely used SPEC CPU benchmarks 
typically 
tar­
and contain 
hardware. 
minutes to hours to run, 
and this makes SPEC CPU bench­
at speeds many orders of magnitude 
Architecture 
simu­
slower 
option for fault injection 
Even though SPEC CPU benchmarks 
get performance  evaluation 
each of which could take several 
even on high performance 
lators operate 
than native hardware 
marks an infeasible 
tation. 
workloads 
on ar­
chitecture/microarchitecture, 
com­
they are rarely executed 
In most cases, only a small frac­
pletely 
in any experiment. 
tion of each application 
of millions 
of in­
structions) 
times. This is however not an option when simulating 
errors, 
time during the execution 
sons SPEC benchmarks 
soft 
appear at any point in 
Due to these rea­
they could potentially 
of a workload. 
is chosen in order to obtain tractable 
in most of the recently 
(tenslhundreds 
literature 
published 
because 
experimen­
are typical 
simulation 
The microarchitectural 
struc­
to fault injection  experiments 
as part of 
register 
contains 
the integer 
256 64-bit registers. 
register 
file in 
file and the reorder 
the PTLsim micro­
Targets for fault injection: 
tures subjected 
this study include 
buffer (ROB). The integer 
architecture 
SRAM chips (as described 
plied to bits in a register 
CPUs are implemented 
ple read and write ports [1]. The reorder 
microarchitecture 
entry word was assumed to be 40 bits wide, including 
valid bit, index, destination 
ister indices. 
files in modern 
with multi­
buffer in PTLsim 
file because 
as fast SRAM circuits 
the 
index and operand reg­
2.2) can directly 
register 
The width of each ROB 
has 128 entries. 
in section 
register 
be ap­
Observations 
in 
3.1.1. Experiment Control 
Current state-of-the-practice 
in fault injection 
for AVF 
tracks fault-propagation 
and switches 
simulations 
micro architectural 
after a certain 
amount of 
or RTL simulation. 
approach 
to realize 
fault in­
[14][15] 
architectural 
estimation 
to faster 
time spent in detailed 
This has been the only practical 
jection 
sults in a tractable 
ever, gives rise to a number of possible 
to be further 
before faster, 
analyzed 
simpler 
campaigns 
that can yield statistically 
re­
amount of time. This methodology, 
how­
significant 
outcomes 
that need 
and 
(at the end of detailed 
simulation) 
presented 
simulation 
ACE-ness. 
here make use of shorter 
to determine 
and can be run to completion 
in  a reasonable 
execution 
of a large number 
to switch to native ex­
speed up simulation 
times. 
The experiments 
to further 
benchmarks 
amount of time that facilitates 
of experiments. 
It is also possible 
ecution 
on hardware 
This obviates 
tural state at the boundary 
simulation. 
periments 
ing. The ability 
injection 
anomalous 
checking 
output after workload 
to run workloads 
This simplifies 
only capture 