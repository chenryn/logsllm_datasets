如果a = 2时， c = 最小闭合文件大小 / 1024 * 6  
如果a = 1时， c = 最小闭合文件大小 / 1024 * 8
其中，k是攻击力系数，k = {k| k 属于2,3,4}  
2 = 正常安全认知理解范围(通常我们所见的APT与一般性攻击都属于这个范围) ；  
3 = 超出安全认知范围(典型的如，Stuxnet，Flame级别的攻击案例); 4 = 完全不可想象的攻击方式(目前还未遇见这样的案例)
a是攻击自动化情况， a = {a | a 属于，1 = 多步骤交互，2 = 少交互，3 = 无交互 }
，多步骤交互是指攻击者需要操纵多个步骤，引导目标来运行恶意代码的情况。
少交互是指类似运行宏病毒这样的方式，至少需要目标操作一个确认步骤后才能运行恶意代码。无交互是指利用漏洞，web入侵这样的攻击方式，不需要目标参与操作确认，直接即可在目标中运行任意代码的情况。
s是传播方式的种类， s = {s| s
属于，1，2，3...}，通常恶意代码传播多数是鱼叉式钓鱼攻击，水坑攻击，社工方式等，在震网中包含两种传播方式，u盘传播和网络共享传播，也有
像DarkHole那样利用wifi网络下的精准传播，这里需要考量的是攻击组织使用了几种传播方式来制造最初的感染向量。
m是攻击方法，m = {m|m 属于1，2，3...}
，就具体攻击方法而言分类十分繁杂，但过于细致的攻击方法会导致评估结果在不同APT组织之间造成很大差异，故给出一些经验上的考核点，供大家参考；大家也可以根据自己的经验来扩展这里的内容，以下皆是针对攻击者使用的技术而言，
  * 一类： 1，代码注入 ；2，使用来rootkit／bioskit；3，使用了未知编程语言；4，横移渗透；5，模块完全ASM编写；6 利用隐写方式
  * 二类： 1，特种木马 ；2，感染特定人群(例如，regin针对研究数学/密码学的人群)；3，针对特定文件/设备的利用( 例如，针对韩国Hangul Word Processor HWP文档)；4，特定目标感染；5，精准传播
  * 三类： 1，范围极广的间谍功能(例如感染蓝牙设备)；2，安装隐蔽的未知功能（例如gauss安装自定义Palida Narrow字体）；3，僵尸网络；4，加密网络or支持多协议 
  * 四类： 1，恶意破坏(例如重写磁盘文件)；2，攻击安全软件（例如Duqu2攻击卡巴斯基）；3，改写开源软件；4，反取证技术
  * 五类： 1，高强度破解难度；2，高难度&复杂技术实现（例如，全程ROP编写，No shellcode实现, 内核执行全内存隐藏运行） 
  * 六类： 1，武器集合(即该攻击组织具有多款特定目标武器)；2，漏洞利用工具包(Lightsout exploit kit ,Nuclear EK)；3，使用逻辑类漏洞利用
  * 七类： 1，特殊持久化隐藏；2，被发现已有三年以上隐藏时间；3，usb特性利用；4，伪造特性（故意将自身包含的与某些知名的APT样本相似的代码片段或行为）
p是攻击目标平台数量，p = {p|p属于 1，2，3...}
通常是指windows／linux／android／mac，在震网中包括了windows，wincc 2个平台。
x是包括漏洞利用，盗用签名，硬件攻击等能对安全事件产生重大影响技术的使用数量，其中的详细分类如下；
  * 完全属于APT组织的独有的破解高难度目标的利用技术 ---------- 8级
  * 完全属于APT组织的独有漏洞,硬件级别漏洞 ------------------ 6级
  * 完全属于APT组织的独有漏洞,软件产品漏洞 ------------------ 5级 
  * 对非个人操作系统的利用及攻击技术 ------------------------- 5级
  * 完全属于APT组织的独有漏洞,web产品漏洞 ------------------- 4级 
  * APT组织与其它组织机构共享漏洞 --------------------------- 4级 
  * 盗用数字签名 --------------------------------------------- 4级 
  * 利用方法曝光但尚未修补的漏洞 ---------------------------- 3级 
  * 未曾曝光的攻击手法---------------------------------------- 3级 
  * 尚未可知的入侵手段---------------------------------------- 3级 
  * N day的使用 --------------------------------------------- 2级 
  * web方式入侵----------------------------------------------- 2级
  * SQL注入利用 ---------------------------------------------- 1级 
  * DDOS 攻击 ------------------------------------------------ 1级 
  * 无任何漏洞及其他利用方式---------------------------------- 0级 
c是闭环中的代码总量，以K为单位进行计算，(WTR4141.tmp = 25,720 byte + ～WTR4132.tmp = 517,632byte +
Copy of Shortcut to.lnk =4,171 byte）／1024 = 534K
K = 3 (超出安全认知范围)  
a = 3 (无交互)  
s = 2 (u盘+网络共享)  
m = 4 (代码注入+rootkit+高难度&复杂技术实现+特定目标感染)  
p = 2 (攻击2种平台,WINDOWS + wincc)  
x = 30 (攻击组织独享,及1day，  
其中CVE-2010-2743 = 5,  
CVE-2010-2568 = 4,  
CVE-2010-2729 = 4,  
CVE-2010-3338 = 5,  
CVE-2010-2772 = 6,  
CVE-2008-4250 = 2,  
盗用数字签名Realtek = 4;
C = (4171+25720+517632)/1024 = 534;
攻击能力AT = (a + s + m + p)^(k) * (1 + x)^ 2 + c  
AT = (3+2+4+2) ^(3) * (1+30)^2 + 534  
= 11 ^ 3 * 31 ^ 2 + 534  
= 1279091+534  
= 1279625
我们规定Stuxnet的攻击力是1000T，为了计算及表达方便，可以将得到数值*1000，设定1T攻击力单位 = 1279625,  
==> 1279625 * 1000/1279625 = 1000T
注意，该攻击能力描述的是攻击者入侵能力，而不是持续造成的打击或者是造成损失的能力计算，它只是表明攻击者具有攻破防御体系所具有的技能水平,受攻击目标的影响，攻击者会采取的策略也会不同，所以最终的能力体现并不能完全等同于最终事件所造成的影响，二者不是完全等价值的。
该模型建立的目的是以Stuxnet的攻击能力为基准，准确地描述出其它高级威胁组织相对Stuxnet的能力水平。为了区分一般攻击同高级威胁差别，以及高级威胁同另外高级威胁之间的差别能够有很好的区分度，模型做了适当的调整，相对地降低了Stuxnet同这些威胁之间的差别。
## 0x04解决细节问题
### 不畏浮云遮望眼 -为什么需要量化APT
目前，众多高级威胁的出现已经成为了一种常态，但显然如果继续以目前的态度对待下去，人们会慢慢减少对这类威胁的敏感性，而不能区分出什么样的高级威胁是应该得到重点关注的，而其它的所谓高级威胁是需要被退去神秘面纱的。Stuxnet的攻击能力评估使得我们有了进一步扩展问题的起点，我们可以依照这一方式将这个方法扩展到对所有已经被认可的高级威胁研究中来，这样会十分清晰的看到我们所处环境及威胁变化的趋势状况。
对于量化的过程我们遵从以下一些原则，主要是因为调查取证过程中的信息缺失，以及单纯的针对第一阶段攻击能力的量化会导致少量案例的数据偏小不能真实反映攻击者能力情况，
因此做以下技术上的调整：
  1. m是攻击方法，包括后续攻击者下载的样本所具有的能力，后续攻击样本本身不计算到c闭环中的代码总量中，但其使用的特殊技术会被累计到参数m当中。
  2. 有些攻击行动发生在服务端或是利用web入侵方式，这将导致进行量化评估的时候没有相关数据作为依据，故这样情况下将会按照经验值给出相关数据。
  3. 有一些组织的攻击行为是长期反复发生的，一次的样本取证不能很好的衡量这一类APT的整体能力，故在评估这类问题时，统一采用截止目前为止该攻击组织最体现攻击力的行为做为基础的数据。例如,长期利用诱骗技巧(扩展名反转)来运行RAT，或者更多使用1Day漏洞，极少使用0Day漏洞的攻击组织，那么我们选取0Day为主要使用情况来说明该组织的攻击能力，这也体现了该组织攻击能力的逐渐提升过程。
  4. 我虽然认同同行安全公司所撰报告的初始目的与态度都是严肃认真的，但对于有些报告的结论及是否算是高级威胁的结论我并不完全认同，但为了不被遗漏，如有大家广为讨论的案例我这里也加入考量当中。
  5. 很多被称做APT攻击行动的事件，其实都是可以关联到某些著名的黑客组织当中，例如OperationDog(CVE-2013-3893),Operation Ephemeral Hydra(CVE-2013-3918),SnowMan(CVE-2014-0322) 三者同源,因此不再单独评估这样一次行动所产生的攻击能力，而是针对该组织的攻击能力评估。
  6. 对于缺失原始攻击数据，或者是缺少恶意样本母体文件的情况，我仅能够根据报告描述的技术内容给出可能复杂程度的估值。
  7. 对于包含多起高级威胁攻击事件的组织评估，原则上需要取所有事件中的最小闭合样本的平均值来进行估算，但实际上由于相关共享信息的缺失，我这里只能取单例事件的最小闭合样本进行评估，但就目前的模型而言，对结果的影响可以忽略，近似的认为就是最后的均值结果。
  8. 评估本身并不是完全依据样本的技术细节，而是从整体上来看达到什么操作目的来定义，例如m参数中，高难度/复杂技术实现，即可以是无文件的全内存运行，也可以是磁盘扇区级别的隐藏。但不再继续深究技术实现的细节或评定哪一种水平更高，这样会因为牵扯细节过多而导致攻击能力近似的APT组织出现较大差异。
  9. 有一些也被称做定向攻击或是高级威胁，例如针对银行，金融系统的攻击，由于缺少确认攻击者的推断依据，如果按照前面我们提到的关于高级威胁的描述显然这些事件不能被归类到你我所知的APT当中，故这些事件除非已经完全的被明确认定，攻击组织具有明晰攻击意向，否则不被加入到统计当中。归因困难是我们要面对的常态问题。
  10. 这里的评估更强调的是代码攻击能力，但其实还包括大量先进的社会工程学技术的应用，但如果兼顾二者则显然不够明晰我们观念当中对攻击能力的体现，因此这里关于社工技巧方面技术的考量是没有被加入的。
受个人资源的限制，这里仅列出了我能够搜集并且可以获得相关样本信息的APT组织或者是攻击行动所使用的样本，而对于那些完全得不到任何信息的攻击组织则没有收录，这不是个完整的不遗漏的评估列表，但我仍然会尽我最大的可能去搜集整理，评估，更新。
APT组织名称 | 时间 | 攻击能力  
---|---|---  
2010 |  |  
Aurora | 2010/2/10 | 2.314T  
Stuxnet | 2010/9/30 | 1000T  
Night Dragon | 2011/2/10 | 0.635T  