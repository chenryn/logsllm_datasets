### Scanner Types and TTL Values

In Section 3.1, we examined the Time-to-Live (TTL) values used by our scanners to determine if the setup had too small values. Our ZMap-based scanners initialize the TTL field with its maximum value of 255 possible hops. In contrast, scanners built on top of transport layer interfaces use the current Linux default of 64 hops, as recommended in RFC1700 [29]. Given that our setup meets or exceeds the recommended hop count, we identified three potential issues:
1. The current recommendation of 64 hops may be insufficient to reach certain hosts.
2. Middleboxes might be modifying the TTL to a much lower value.
3. Routing loops may exist on the path to these hosts.

### 3.6 Summary

As the previous sections have shown, our Internet-wide scans produce a valuable secondary dataset of ICMP responses. These messages have helped us identify a potential DNS spoofer, detect the generation of long-deprecated source quench messages, and observe ICMP redirects pointing to outdated and misconfigured networks. Without creating a dedicated dataset, our scans enable us to study Internet reachability, and we believe that longitudinal studies can help address the challenge of ICMP rate-limiting.

### 4. Routing Loops

Routing loops are undesirable control plane misconfigurations that render destination networks unreachable and strain link loads [35]. Essentially, IP's TTL mechanism protects the Internet from indefinitely looping packets, and ICMP TTL exceeded messages inform the sender that a router dropped a packet after exceeding the allowed number of hops. While the potential for routing loops is known, only a few studies have investigated their presence in the past decade [20, 36], and current information on their prevalence is lacking. Therefore, we study routing loops using ICMP TTL exceeded messages triggered by our scans. We argue that routing loops can be frequently investigated as a by-product of regularly conducted Internet-wide scans for various purposes.

#### 4.1 Methodology: Detecting Loops

ICMP TTL exceeded messages are not always caused by loops; overly large paths or middleboxes can also trigger these messages. To investigate whether an actual loop is present, we perform traceroutes for the original destinations (in the quoted IP) of the ICMP TTL exceeded messages. Since our traceroutes are subject to ICMP rate-limiting, especially when packets start to loop, we customize the traceroute. Our customized traceroute slows down its sending rate when it detects a previously seen IP address (a loop indicator). Otherwise, it follows the design of Paris traceroute [1], reusing flow identifiers for each hop to trigger the same forwarding behavior in ECMP-like load balancers.

Despite these measures, traceroutes can still be noisy due to hosts that do not generate ICMP at all or are subject to rate-limiting, especially when other traffic flows into a loop. To mitigate this, we impose strict criteria for identifying loops. For each hop on the path that does not generate a reply, we assign a new unique label, while others are labeled by the answering IP. From this list of labels, we create a directed graph connecting each label-induced node to its successor. On this path, we compute all elementary cycles using [23]. An elementary cycle is one where no node appears twice, except that the first and last nodes are the same. For each of these possible cycles, we inspect the node with the highest degree, and if this node’s degree is greater than 54, we mark the traceroute as having a loop. This method works well when the traceroute pauses packet generation for at least 500 ms upon observing a previously seen IP address. In a loop involving two routers, we send each router a packet roughly every second.

#### 4.2 Routing Loops in the Wild

We seed our traceroutes with ICMP TTL exceeded messages generated from our Internet-wide scans [5]. To avoid substantial rate-limiting, we restrict our traceroutes to a single instance per unique /24 subnet within 30-minute intervals. For two TTL exceeded messages from the same /24 subnet, we perform a single traceroute if the messages arrive within 30 minutes.

For our assessment of routing loops, we analyzed TTL exceeded messages from the last week of August 2018. To avoid rate-limiting, we also limited the number of parallel traceroutes, which extended our data collection until the end of September 2018. This approach skews our data but allows us to reason about the persistence of these loops, as the same /24 subnet could be rescheduled for a traceroute every 30 minutes. In total, we performed approximately 27 million traceroutes to about 612,000 different /24 subnets from 28,000 ASes. Of these, 439,000 subnets from 19,800 ASes were unreachable due to a loop. We further inspected the number of distinct loops and the ASes involved, finding 167,000 different loops in 13,900 ASes. Of these loops, 136,000 had IPs for all routers involved, allowing for in-depth inspection. Looking at the ASes involved, we found that 13% (17,700) covered all different AS paths, with 4,800 crossing AS boundaries. The top three ASes involved in the loops were AS171 (Cogent), a Tier-1, AS9498 (BHARTI Airtel Ltd.), an Indian ISP, and AS3549 (Level 3), another Tier-1.

**Persistence:** To investigate the persistence of these loops, we restricted our view to traceroutes performed two weeks after the initial TTL exceeded message was triggered by our Internet-wide scans. Unlike our previous observations, loops from approximately 150 ASes disappeared, but we still found 4,600 loops crossing AS borders, rendering 404,000 subnets unreachable. Thus, most loops seem to persist and are not resolved.

**Loops at Our Upstream ISP:** Within our data, we also found loops in the AS of our upstream ISP. We contacted the ISP about our findings, which they confirmed. Although many of the loops were outside their administrative domain, they provided more details on a loop they were able to fix. For one loop, they found that the first router had a static route for our tested destination towards its next hop, but the next hop had no specific forwarding information for this destination and thus used its default gateway, which was the previous router with the static route, causing the loop.

**Takeaway:** Routing loops appear to persist in large parts of the Internet, raising questions about the usage of the address space cut off by these loops and the existence of alternative routes from different vantage points. We believe that routing loops have significant potential for causing congestion when exploited, and persistent monitoring seeded by large-scale Internet measurements could help reduce them. 

### 5. Related Work

Our work relates to approaches analyzing ICMP traffic and its generation in general, as well as studies focusing on particular aspects such as path/topology discovery and routing loops. Bano et al. [3] also use ZMap to capture cross-layer responses to probe traffic to infer IP liveness but run specific measurements to generate this traffic. Our dataset could be used to perform a similar analysis. Malone et al. [26] analyze the correctness of ICMP quotations, based on a dataset obtained via tcptraceroute in 2005, targeting around 84,000 web servers. While most of the reported messages are of type ICMP time exceeded, they also found around 100 source quench messages, which were already deprecated then. By looking at the ICMP responses to Internet-wide scans, we can update their findings on a regular basis without crafting a dedicated dataset. Guo et al. [19] present FADER, an approach to detect the presence of ICMP rate-limiting in measurement traces. While we did not focus on rate-limiting, we found indicators for it. Longitudinal studies seeded by Internet-wide scans can, in the long run, help overcome limited visibility due to rate-limiting.

In 2002, Hengartner et al. [20] characterized and analyzed the presence of routing loops in a Tier-1 ISP backbone trace. Xia et al. [35, 36] tracerouted over 9 million IP addresses to find routing loops in 2005. Transient routing loops have also been studied [34], and they are well-documented [14, 32]. Lone et al. [25] investigate routing loops in CAIDA data to study source address validation but do not focus on their prevalence in the Internet. In contrast to using the CAIDA dataset, which actively runs traceroutes against all /24, we utilize indications from ongoing measurement data to investigate loops. While these works show that routing loops are a known problematic misconfiguration, their presence in the Internet has not been analyzed for over 10 years. By recycling Internet-wide scans, we can seed such investigations and enable persistent monitoring of this phenomenon, showing that routing loops are still a problem today.

### 6. Conclusion

In this paper, we used ICMP responses triggered by large-scale Internet measurements to study how the Internet's control plane reacts to these measurements. These responses, often neglected, offer great insights into the configuration of Internet-connected systems. Our analyses of different ICMP responses led us to many misconfigured routers, such as those sending ICMP redirects across the Internet, and outdated systems generating long-deprecated source quench messages. Additionally, our analysis showed a large and nuanced degree of unreachability in the Internet, particularly hinting at the existence of routing loops, which we found to persist in large parts of the Internet. We hope that these ICMP by-products will be analyzed by more researchers performing large-scale measurements and that the regular nature of these scans will enable persistent monitoring of the Internet's control plane. When brought to the attention of operators, misconfigurations can be fixed. To this end, we make our dataset publicly available at [22].

### Acknowledgments

This work was funded by the Excellence Initiative of the German federal and state governments, as well as by the German Research Foundation (DFG) as part of project B1 within the Collaborative Research Center (CRC) 1053—MAKI. We would like to thank the network operators at RWTH Aachen University, especially Jens Hector and Bernd Kohler, as well as RWTH’s research data management team.

### References

1. Augustin, B., et al.: Avoiding traceroute anomalies with Paris traceroute. In: ACM IMC (2006)
2. Baker, F.: Requirements for IP Version 4 Routers. RFC 1812, RFC Editor (1995)
3. Bano, S., et al.: Scanning the internet for liveness. SIGCOMM CCR 48(2), 2–9 (2018)
4. Braden, R.: Requirements for Internet Hosts - Communication Layers. RFC 1122, RFC Editor (1989)
5. Cisco: IP Routing Frequently Asked Questions. https://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/28745-44.html#qa5
6. Cisco Systems, Inc.: Cisco IOS XR MPLS: mpls ip-ttl-propagate (2014). https://www.cisco.com/c/en/us/td/docs/routers/xr12000/software/xr12k r4-1/mpls/com mand/reference/b mpls cr41xr12k/b mpls cr41xr12k chapter 010.html#wp28648 46713
7. Custura, A., Fairhurst, G., Learmonth, I.: Exploring usable Path MTU in the Internet. In: IFIP Network Traffic Measurement and Analysis Conference (2018)
8. Donnet, B., Luckie, M., Mé́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́