middleboxes are authenticated from their certiﬁcates. However,
as mcTLS uses one session key, it undermines the security
of the session if any of middleboxes involved is a writer.
Furthermore, after modiﬁcation by a writer middlebox, the
receiver cannot know who has sent the data.
(5) Transport Layer Middlebox Security P-
rotocol (TLMSP): TLMSP is an improved version of
mcTLS, which is being standardized in ETSI. Based on
mcTLS, it optionally introduces an audit trail that records
each middlebox’s inbound HMAC and outbound HMAC to
check the modiﬁcation by the middlebox and the order of the
middleboxes in the chain. However, TLMSP uses a top-down
approach, which is not suitable for incremental deployment
due to the reasons described in Section V-B.
(6) Middlebox TLS (mbTLS) [29]: mbTLS allows
outsourced middleboxes to participate in a TLS session.
mbTLS extends TLS for middleboxes running on Intel SGX
technology. When endpoints perform a TLS handshake with
each other, each endpoint opens a secondary TLS session with
all the middleboxes that it leverages for remote attestation. Af-
ter the primary TLS handshake, the endpoints send the session
key to each of the middleboxes. However, mbTLS offers no
information about each segment’s secrecy or changes to TLS
trafﬁc. Instead, the endpoints rely on the TEE technology to
assure middlebox integrity.
Cryptographic
and
Embark [20] allow a monitoring gateway (in the client’s
approaches: BlindBox [41]
network) to read TLS trafﬁc without revealing its content
to middleboxes on a third party cloud. To this end,
they
introduce a secondary channel using a special encryption
technique (such as searchable encryption or order-preserving
encryption). The client communicates with the server over
a TLS session, and delivers the packets to the middleboxes
via the secondary channel before the client sends packets to
the server. Private data are not leaked to the middleboxes in
these proposals, but they have two main drawbacks. First,
the possible functionality of middleboxes is limited by the
encryption techniques. Second, they require another round trip
to middleboxes over the secondary channel before sending
the data to the other endpoint.
TEE approaches: SafeBricks [35], ShieldBox [43],
and SGX-Box [16] focus on guaranteeing security and protect-
ing privacy (from middleboxes) by building middleboxes over
TEE technology. The three schemes have different properties.
For example, SafeBricks aims to apply the least privi-
lege principle to middleboxes by using a type-safe language.
ShieldBox seeks to supports syscalls in an enclave, and
SGX-Box offers programmability to middlebox developers for
easy deployment.
X. CONCLUSION
In this paper, we propose middlebox-aware TLS, dubbed
maTLS, that allows middleboxes to participate in TLS net-
working in a visible and accountable fashion. The maTLS
protocol seeks to achieve the following security goals: server
authentication, middlebox authentication, path secrecy, data
source authentication, and modiﬁcation accountability, which
are not comprehensively solved by the related work. To this
end, maTLS relies on multiple mechanisms such as middle-
box certiﬁcates, middlebox Transparency, security parameter
blocks, and modiﬁcation records to make middleboxs visible
and auditable. We also analyze the security properties of the
maTLS protocol using Tamarin, which formally proves that
maTLS satisﬁes those goals. Furthermore, testbed-based exper-
iments show that maTLS accomplishes those goals with mostly
marginal performance overhead. For instance, the additional
delays against the SplitTLS and the mcTLS protocols are less
than 33ms, which incurs mainly due to the signaling overhead
in a handshake. Numerical results also show that the maTLS
protocol is scalable in terms of number of middleboxs.
ACKNOWLEDGEMENT
[16]
The authors would like to appreciate the anonymous
reviewers for their comments to improve our paper. Also,
many thanks to David T. Naylor for his comments and advice.
This work was supported by Institute for Information &
communications Technology Promotion (IITP) grant funded
by the Korea government (MSIT) (No.2016-0-00160, Versatile
Network System Architecture for Multi-dimensional Diversity)
REFERENCES
[1] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry, M. Green,
J. A. Halderman, N. Heninger, D. Springall, E. Thom´e, L. Valenta,
B. VanderSloot, E. Wustrow, S. Zanella-B´eguelin, and P. Zimmermann,
“Imperfect forward secrecy: How difﬁe-hellman fails in practice,” in
Proceedings of the 22nd ACM SIGSAC Conference on Computer and
Communications Security. ACM, 2015.
14
[2] W.
“Privdog
Ashford,
worse
poten-
tially
[On-
line]. Available: http://www.computerweekly.com/news/2240241126/
PrivDog-SSL-compromise-potentially-worse-than-Superﬁsh
compromise
superﬁsh,”
ssl
than
February
2015.
[3] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud, C. Fournet,
M. Kohlweiss, A. Pironti, P.-Y. Strub, and J. K. Zinzindohoue, “A messy
state of the union: Taming the composite state machines of tls,” in
Security and Privacy (SP), 2015 IEEE Symposium on.
IEEE, 2015,
pp. 535–552.
[4] F. Cangialosi, T. Chung, D. Choffnes, D. Levin, B. M. Maggs, A. Mis-
love, and C. Wilson, “Measurement and analysis of private key sharing
in the https ecosystem,” in Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security. ACM, 2016,
pp. 628–640.
[5] T. Chung, D. Choffnes, and A. Mislove, “Tunneling for transparency: A
large-scale analysis of end-to-end violations in the internet,” in Internet
Measurement Conference (IMC), 2016.
[6] Comodo, “Comodo report of
- comodo detected and
thwarted an intrusion on 26-mar-2011,” 2011. [Online]. Available:
https://www.comodo.com/Comodo-Fraud-Incident-2011-03-23.html
incident
[7] D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, and W. Polk,
“Internet x.509 public key infrastructure certiﬁcate and certiﬁcate revo-
cation list (crl) proﬁle,” RFC 5280, Internet Engineering Task Force,
May 2008, http://www.ietf.org/rfc/rfc5280.txt.
[8] X. de Carn´e de Carnavalet and M. Mannan, “Killed by proxy: Analyzing
client-end tls interception software,” in Network and Distributed System
Security Symposium, 2016.
[9] T. Dierks, “The transport layer security (TLS) protocol version 1.2,”
2008. [Online]. Available: https://tools.ietf.org/pdf/rfc5246.pdf
[10] D. Dolev and A. C. Yao, “On the security of public key protocols,”
IEEE Transactions on information theory, vol. 29, no. 2, pp. 198–208,
1983.
[11] Z. Durumeric, Z. Ma, D. Springall, R. Barnes, N. Sullivan, E. Bursztein,
M. Bailey, J. A. Halderman, and V. Paxson, “The security impact of
https interception,” in Network and Distributed Systems Symposium,
2017.
[12] E. Rescorla, “The transport
layer security (tls) protocol version
1.3,” 2018. [Online]. Available: https://www.rfc-editor.org/rfc/pdfrfc/
rfc8446.txt.pdf
[13] Facebook, “Introducing our certiﬁcate transparency monitoring tool.”
[Online]. Available: https://www.facebook.com/notes/protect-the-graph/
introducing-our-certiﬁcate-transparency-monitoring-tool/
1811919779048165/
[14] A. P. Felt, R. Barnes, A. King, C. Palmer, C. Bentzel, and P. Tabriz,
“Measuring HTTPS adoption on the web,” in 26th USENIX Security
Symposium, USENIX Security 2017, Vancouver, BC, Canada, August
16-18, 2017., 2017.
[15] Gaurang,
trafﬁc
“Nokia’s mitm on https
from their phone,”
2013. [Online]. Available: https://gaurangkp.wordpress.com/2013/01/
09/nokia-https-mitm/
J. Han, S. Kim, J. Ha, and D. Han, “Sgx-box: Enabling visibility on
encrypted trafﬁc using a secure middlebox module,” in Proceedings
of the First Asia-Paciﬁc Workshop on Networking. ACM, 2017, pp.
99–105.
[18]
IEEE, 2014, pp. 83–97.
[17] L. S. Huang, A. Rice, E. Ellingsen, and C. Jackson, “Analyzing forged
ssl certiﬁcates in the wild,” in Security and Privacy (SP), 2014 IEEE
Symposium on.
ITU-T RECOMMENDATION, “Information technology–open systems
interconnection–the directory: Public-key and attribute certiﬁcate frame-
works,” 2000.
J. Jarmoc and D. Unit, “SSL/TLS interception proxies and transitive
trust,” Black Hat Europe, 2012.
[19]
[20] C. Lan, J. Sherry, R. A. Popa, S. Ratnasamy, and Z. Liu, “Embark:
Securely outsourcing middleboxes to the cloud.” in NSDI, vol. 16, 2016,
pp. 255–273.
[21] B. Laurie, A. Langley, and E. Kasper, “Certiﬁcate transparency,” Tech.
Rep., 2013.
[22] S. Loreto, J. Mattsson, R. Skog, H. Spaak, G. Gus, and D. Druta,
[Online]. Available:
“Explicit
https://tools.ietf.org/html/draft-loreto-httpbis-trusted-proxy20-01
trusted proxy in http/2.0,” 2012.
[23] D. McGrew, D. Wing, Y. Nir, and P. Gladstone, “TLS proxy
server extension,” 2012. [Online]. Available: https://tools.ietf.org/html/
draft-mcgrew-tls-proxy-server-01
[24] S. Meier, B. Schmidt, C. Cremers, and D. Basin, “The tamarin prover for
the symbolic analysis of security protocols,” in International Conference
on Computer Aided Veriﬁcation. Springer, 2013, pp. 696–701.
[25] D. Meyer, “Nokia: Yes, we decrypt your https data, but don’t worry
it,” 2013. [Online]. Available: http://gigaom.com/2013/01/10/
about
nokia-yes-we-decryptyour-https-data-but-dont-worry-about-it/
[26] M. Myers, R. Ankney, A. Malpani, S. Galperin, and C. Adams, “X. 509
internet public key infrastructure online certiﬁcate status protocol-ocsp,”
1999.
http proxies,” in Network and Distributed System Security Symposium
(NDSS), 2018.
[45] S. Tuecke, V. Welch, D. Engert, L. Pearlman, and M. Thompson, “In-
ternet x. 509 public key infrastructure (PKI) proxy certiﬁcate proﬁle,”
2004.
[46] L. Waked, M. Mannan, and A. Youssef, “To intercept or not to intercept:
Analyzing tls interception in network appliances,” in Proceedings of the
2018 on Asia Conference on Computer and Communications Security.
ACM, 2018, pp. 399–412.
[47] O. Williams, “Google dropping cnnic root ca after trust breach,” 2015,
https://thenextweb.com/insider/2015/04/02/google-to-drop-chinas-
cnnic-root-certiﬁcate-authority-after-trust-breach/.
[27] V. Narayanan,
goals,”
2013.
in
and
[Online]. Available:
draft-vidya-httpbis-explicit-proxy-ps-00.pdf
“Explicit
proxying
http-problem statement
https://tools.ietf.org/pdf/
[28] D. Naylor, A. Finamore, I. Leontiadis, Y. Grunenberger, M. Mellia,
M. Munaf`o, K. Papagiannaki, and P. Steenkiste, “The cost of the s in
https,” in Proceedings of the 10th ACM International on Conference on
emerging Networking Experiments and Technologies. ACM, 2014, pp.
133–140.
[29] D. Naylor, R. Li, C. Gkantsidis, T. Karagiannis, and P. Steenkiste,
“And then there were more: Secure communication for more than
two parties,” in Proceedings of the 13th International Conference on
emerging Networking EXperiments and Technologies. ACM, 2017, pp.
88–100.
[30] D. Naylor, K. Schomp, M. Varvello, I. Leontiadis, J. Blackburn,
D. L´opez, K. Papagiannaki, P. R. Rodriguez, and P. Steenkiste, “Multi-
context tls (mctls): Enabling secure in-network functionality in tls,”
in ACM SIGCOMM Computer Communication Review, vol. 45, no. 4.
ACM, 2015, pp. 199–212.
[31] Y. Nir, “A method for
sharing record protocol keys with a
middlebox in TLS,” 2012. [Online]. Available: https://tools.ietf.org/id/
draft-nir-tls-keyshare-02.html
[32] M. Nottingham, “Problems with proxies in http,” 2014. [Online]. Avail-
able: https://tools.ietf.org/pdf/draft-nottingham-http-proxy-problem-01.
pdf
[33] D. O’Brien, “Certiﬁcate transparency enforcement in google chrome,”
2018. [Online]. Available: https://groups.google.com/a/chromium.org/
forum/#!msg/ct-policy/wHILiYf31DE/iMFmpMEkAQAJ
[34] M. O’Neill, S. Ruoti, K. Seamons, and D. Zappala, “TLS proxies:
the 2016 Internet Measurement
Friend or foe?” in Proceedings of
Conference. ACM, 2016, pp. 551–557.
[35] R. Poddar, C. Lan, R. A. Popa, and S. Ratnasamy, “Safebricks:
Shielding network functions in the cloud,” in 15th USENIX Symposium
on Networked Systems Design and Implementation (NSDI’18), Renton,
WA, 2018.
[36] A. Popov, “Prohibiting rc4 cipher suites,” 2015. [Online]. Available:
https://tools.ietf.org/html/rfc7465
[37] E. Rescorla, “HTTP over TLS,” 2000. [Online]. Available: https:
[38]
[40]
[41]
[39] T.
//tools.ietf.org/html/rfc2818
J. Schlyter and P. Hoffman, “The DNS-based authentication of named
entities (DANE) transport layer security (TLS) protocol: TLSA,” 2012.
[Online]. Available: https://tools.ietf.org/pdf/rfc6698.pdf
J. Seppala, “New lenovo pcs
shipped with factory-installed
adware,” 2015. [Online]. Available: https://www.engadget.com/2015/
02/19/lenovo-superﬁsh-adware-preinstalled/
J. Sherry, S. Hasan, C. Scott, A. Krishnamurthy, S. Ratnasamy, and
V. Sekar, “Making middleboxes someone else’s problem: network
processing as a cloud service,” vol. 42, no. 4. ACM, 2012, pp. 13–24.
J. Sherry, C. Lan, R. A. Popa, and S. Ratnasamy, “Blindbox: Deep
packet inspection over encrypted trafﬁc,” vol. 45, no. 4. ACM, 2015,
pp. 213–226.
[42] SSLMate, “Cert spotter.” [Online]. Available: https://sslmate.com/
certspotter/
[43] B. Trach, A. Krohmer, F. Gregor, S. Arnautov, P. Bhatotia, and C. Fetzer,
“Shieldbox: Secure middleboxes using shielded execution,” in Proceed-
ings of the Symposium on SDN Research. ACM, 2018, p. 2.
[44] G. Tsirantonakis, P. Ilia, S. Ioannidis, E. Athanasopoulos, and M. Poly-
chronakis, “A large-scale analysis of content modiﬁcation by open
15