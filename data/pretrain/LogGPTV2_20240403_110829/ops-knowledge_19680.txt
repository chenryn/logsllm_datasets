User: 请回答以下安全问题如何安全地实现“记住我”功能？假设你已经有了一个实现所有标准登录功能的网站，那么允许用户在一定时间内（比如说30天）自动登录的正确和最安全的方式是什么？应严格执行这一期限；也就是说，我不认为一个有效的解决方案是给cookie一个截止日期，并希望用户的浏览器及时删除它。
现有登录系统的详细信息：
用户必须输入用户名和密码
数据库存储用户名以及strong_hash_function（密码+user_specific_random_salt）
登录表单是通过SSL加载和提交的，所有后续页面也是如此
有很多例子，而且很多都有明显的安全缺陷。让我们使用PHP作为目标语言，但这些概念应该适用于任何语言。

Assistant: 我的答案是不完整的，在某些情况下有一个重要的缺陷——请参阅@Scott的答案。
我的回答有两部分：
首先，假设您的威胁模型不担心客户端cookie的暴露，您可以在服务器端生成并存储一个nonce，将其与用户名和其他信息（例如，客户端ip、计算机名、时间戳等）进行哈希，并将其发送到cookie中。随机数应与到期日期一起存储在数据库中，并在cookie返回时进行检查。
这应该只是一个“记忆”cookie，而不是会话cookie——也就是说，当你在没有会话的情况下获得该cookie时，重新发布一个新的常规会话cookie。还要注意的是，与会话cookie一样，这应该只通过https传递，并使用secure和httpOnly属性，当然还应该正确确定cookie的作用域等。
其次，对于被记住的用户，您应该（可能，取决于敏感度）为某些敏感操作调用重新身份验证过程。也就是说，有时他们无论如何都需要重新输入密码，但很少，而且只用于敏感操作。这是为了防止诸如CSRF和共享桌面暴露之类的攻击。