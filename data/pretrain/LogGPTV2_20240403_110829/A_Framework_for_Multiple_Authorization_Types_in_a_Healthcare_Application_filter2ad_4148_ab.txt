### Information and Authorization Process

Each individual authorization request is assigned a specific type, and the conditions required to meet the criteria for that authorization type are dynamically checked. This process involves evaluating certain contextual information, such as the "current user work assignments." Once these conditions are verified, the DTE (Domain-Type Enforcement) subject-domain table is accessed to assign the appropriate domain (based on the invoked subject) to the user session. The actual permissions needed for the subject to perform its intended operation are then retrieved from another DTE table, known as the Domain-Type Access Matrix.

The DAFMAT (Dynamic Authorization Framework with Multiple Authorization Types) framework aims to leverage as much information as possible using a hybrid RBAC-DTE (Role-Based Access Control - Domain-Type Enforcement) model structure. This approach supports dynamic multiple authorization types, rather than relying solely on logical rules, as in [6]. By reducing the amount of data processed by the logic-driven authorization engine, the framework also minimizes the complexity of the logical implications.

### Development of the DAFMAT Framework

#### Components of the DAFMAT Framework

The DAFMAT framework comprises two main components:
1. **Hybrid RBAC-DTE Access Control Model**
2. **Logic-Driven Authorization Engine**

##### Hybrid Access Control Model

The hybrid access control model includes:
1. **Authorization Entities**
2. **Relationships Among Authorization Entities**
3. **Constraints Governing the Relationships**

###### Authorization Entities

The key authorization entities in the DAFMAT framework are:
- **USER**
- **ROLE**
- **SUBJECT**
- **OBJECT-TYPE**
- **DOMAIN**

**Object-Type Mapping:**
An Object-Type represents a collection of objects carrying related information. Each object maps to a unique object-type, and there can be many objects within an object-type. The mapping from an object to an object-type is a many-to-one relationship, defined by the function `TypeMap`:
\[ \text{TypeMap(object)} \rightarrow \text{object-type} \]

**Domain-Type Access Matrix:**
Each object (and hence object-type) is associated with a set of valid access modes (Create, Update, Delete, View, etc.). In a DTE implementation, access from a subject to an object is based on the subject's domain and the object's type. The allowable access modes are represented in a matrix called the Domain-Type Access Matrix, where domains are rows, object-types are columns, and each cell contains the valid set of access modes granted for that pair. The mapping from a domain-object-type pair to an access mode is a many-to-many relationship, defined by the function `DteEntry`:
\[ \text{DteEntry(domain, object-type)} \rightarrow \text{access} \]

**Relationships Among Authorization Entities:**
The relationships among authorization entities, including the type of mapping between any two entities, are illustrated in Figure 4.1.

**Constraints on Relationships:**
Constraints in DAFMAT impose restrictions on mapping instances for a given pair of entities, considering the mapping instances each member of the pair has with a third entity. For example, the constraint "all roles from which a subject can be invoked should all be assigned to the same unique domain associated with the subject" is expressed as:
\[ \text{SubjectDomain(subject)} \rightarrow \text{domain} \]
\[ \text{Subject_Role(s, r) \& Role_Domain(r, d) \Rightarrow Subject_Domain(s, d)} \]

##### Logic-Driven Authorization Engine

The logic-driven authorization engine processes first-order predicate logic, similar to Prolog. It can print out the predicates and binding values that determine the approval or denial of an authorization request.

### Dynamic Authorization Rules and Relevant Matrix

The purpose of the logic-driven authorization engine in DAFMAT, in addition to the hybrid access control model, is to support multiple authorization types. These types are determined based on context parameters, making contextual information the primary input for the dynamic authorization rules processed by the engine.

**Contextual Information:**
The major portion of the information used by the DAFMAT framework pertains to the mapping information that forms the hybrid access control model. Contextual information and the number of dynamic authorization rules are kept to a minimum to limit the processing requirements of the logic-driven authorization engine.

**Context-Based Authorization Rules:**
These rules express organizational policies within a healthcare enterprise, aiming to limit the locality of service functions (e.g., specialty, ward assignment) for various healthcare workers like Doctors and Nurses. For example, only the attending physician for a Cardiology Ward can order a test, prescribe medication, or authorize a diagnostic procedure for a patient in that ward.

### Processing Steps in DAFMAT Framework

The following sub-sections describe the various processing steps involved in the DAFMAT framework for authorizing a user action:

1. **Formulation of Authorization Request:**
   - **Current_Action(menu_option, session)**: The menu option and session pertaining to the current user action.
   - **Session_User(session, user)**: The user associated with the application session.
   - **Session_Role(session, role)**: The role activated for the session.
   - **Menu_Operation(menu_option, subject)**: The subject invoked by the menu option.
   - **Menu_Context(menu_option, cv)**: The context variable associated with the menu option.
   - **Session_Priority(session, pc)**: The priority code for the session (NR for normal request, ER for emergency request).

   The authorization request predicate is formulated as:
   \[ \text{Auth_Req(user, role, subject, cv, cv_value, pc)} \]

2. **Designating Authorization Type:**
   - **Normal Authorization Request**: If `cv = 'NONE'` and `pc = 'NR'`.
   - **Emergency Authorization Request**: If `pc = 'ER'`.
   - **Context-based Authorization Request**: If `cv â‰  'NONE'` and `pc = 'NR'`.

3. **Rules for Validating Different Authorization Types:**
   - **Normal Authorization Request**: Check if the role currently active in the user session is one of the roles assigned to the subject under invocation.
     \[ \text{Subject_Role(subject, role) \Rightarrow Normal_Auth_Req(user, role, subject)} \]
   - **Emergency Authorization Request**: Specific validation conditions for emergency requests.
   - **Context-based Authorization Request**: Specific validation conditions based on the context variable and its value.

By following these steps, the DAFMAT framework ensures a robust and dynamic authorization process, leveraging both contextual and structural information to provide precise and efficient access control.