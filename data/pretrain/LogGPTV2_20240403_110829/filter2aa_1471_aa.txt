Windows Internals
Seventh Edition
Part 2
Andrea Allievi
Alex Ionescu
Mark E. Russinovich
David A. Solomon
© Windows Internals, Seventh Edition, Part 2
Published with the authorization of Microsoft Corporation by:
Pearson Education, Inc.
Copyright © 2022 by Pearson Education, Inc.
All rights reserved. This publication is protected by copyright, and permission must be obtained from
the publisher prior to any prohibited reproduction, storage in a retrieval system, or transmission in any
form or by any means, electronic, mechanical, photocopying, recording, or likewise. For information
regarding permissions, request forms, and the appropriate contacts within the Pearson Education Global
Rights & Permissions Department, please visit www.pearson.com/permissions.
No patent liability is assumed with respect to the use of the information contained herein. Although
every precaution has been taken in the preparation of this book, the publisher and author assume no
responsibility for errors or omissions. Nor is any liability assumed for damages resulting from the use
of the information contained herein.
ISBN-13:  978-0-13-546240-9
ISBN-10:  0-13-546240-1
Library of Congress Control Number:  2021939878
ScoutAutomatedPrintCode
TRADEMARKS
Microsoft and the trademarks listed at http://www.microsoft.com on the “Trademarks” webpage are
trademarks of the Microsoft group of companies. All other marks are property of their respective
owners.
WARNING AND DISCLAIMER
Every effort has been made to make this book as complete and as accurate as possible, but no warranty
or fitness is implied. The information provided is on an “as is” basis. The author, the publisher, and
Microsoft Corporation shall have neither liability nor responsibility to any person or entity with respect
to any loss or damages arising from the information contained in this book or from the use of the
programs accompanying it.
SPECIAL SALES
For information about buying this title in bulk quantities, or for special sales opportunities (which may
include electronic versions; custom cover designs; and content particular to your business, training
goals, marketing focus, or branding interests), please contact our corporate sales department at
PI:EMAIL or (800) 382-3419.
For government sales inquiries, please contact governmentsales@pearsoned.com.
For questions about sales outside the U.S., please contact intlcs@pearson.com.
Editor-in-Chief: Brett Bartow
Development Editor: Mark Renfrow
Managing Editor: Sandra Schroeder
Senior Project Editor: Tracey Croom
Executive Editor: Loretta Yates
Production Editor: Dan Foster
Copy Editor: Charlotte Kughen
Indexer: Valerie Haynes Perry
Proofreader: Dan Foster
Technical Editor: Christophe Nasarre
Editorial Assistant: Cindy Teeters
Cover Designer: Twist Creative, Seattle
Compositor: Danielle Foster
Graphics: Vived Graphics
To my parents, Gabriella and Danilo, and to my
brother, Luca, who all always believed in me and
pushed me in following my dreams.
—ANDREA ALLIEVI
To my wife and daughter, who never give up on me
and are a constant source of love and warmth. To my
parents, for inspiring me to chase my dreams and
making the sacrifices that gave me opportunities.
—ALEX IONESCU
Contents at a Glance
About the Authors
Foreword
Introduction
CHAPTER 8         System mechanisms
CHAPTER 9         Virtualization technologies
CHAPTER 10        Management, diagnostics, and tracing
CHAPTER 11        Caching and file systems
CHAPTER 12        Startup and shutdown
Contents of Windows Internals, Seventh Edition, Part 1
Index
Contents
About the Authors
Foreword
Introduction
Chapter 8    System mechanisms
Processor execution model
Segmentation
Task state segments
Hardware side-channel vulnerabilities
Out-of-order execution
The CPU branch predictor
The CPU cache(s)
Side-channel attacks
Side-channel mitigations in Windows
KVA Shadow
Hardware indirect branch controls (IBRS, IBPB, STIBP,
SSBD)
Retpoline and import optimization
STIBP pairing
Trap dispatching
Interrupt dispatching
Line-based versus message signaled–based interrupts
Timer processing
System worker threads
Exception dispatching
System service handling
WoW64 (Windows-on-Windows)
The WoW64 core
File system redirection
Registry redirection
X86 simulation on AMD64 platforms
ARM
Memory models
ARM32 simulation on ARM64 platforms
X86 simulation on ARM64 platforms
Object Manager
Executive objects
Object structure
Synchronization
High-IRQL synchronization
Low-IRQL synchronization
Advanced local procedure call
Connection model
Message model
Asynchronous operation
Views, regions, and sections
Attributes
Blobs, handles, and resources
Handle passing
Security
Performance
Power management
ALPC direct event attribute
Debugging and tracing
Windows Notification Facility
WNF features
WNF users
WNF state names and storage
WNF event aggregation
User-mode debugging
Kernel support
Native support
Windows subsystem support
Packaged applications
UWP applications
Centennial applications
The Host Activity Manager
The State Repository
The Dependency Mini Repository
Background tasks and the Broker Infrastructure
Packaged applications setup and startup
Package activation
Package registration
Conclusion
Chapter 9    Virtualization technologies
The Windows hypervisor
Partitions, processes, and threads
The hypervisor startup
The hypervisor memory manager
Hyper-V schedulers
Hypercalls and the hypervisor TLFS
Intercepts
The synthetic interrupt controller (SynIC)
The Windows hypervisor platform API and EXO partitions
Nested virtualization
The Windows hypervisor on ARM64
The virtualization stack
Virtual machine manager service and worker processes
The VID driver and the virtualization stack memory
manager
The birth of a Virtual Machine (VM)
VMBus
Virtual hardware support
VA-backed virtual machines
Virtualization-based security (VBS)
Virtual trust levels (VTLs) and Virtual Secure Mode
(VSM)
Services provided by the VSM and requirements
The Secure Kernel
Virtual interrupts
Secure intercepts
VSM system calls
Secure threads and scheduling
The Hypervisor Enforced Code Integrity
UEFI runtime virtualization
VSM startup
The Secure Kernel memory manager
Hot patching
Isolated User Mode
Trustlets creation
Secure devices
VBS-based enclaves
System Guard runtime attestation
Conclusion
Chapter 10  Management, diagnostics, and tracing
The registry
Viewing and changing the registry
Registry usage
Registry data types
Registry logical structure
Application hives
Transactional Registry (TxR)
Monitoring registry activity
Process Monitor internals
Registry internals
Hive reorganization
The registry namespace and operation
Stable storage
Registry filtering
Registry virtualization
Registry optimizations
Windows services
Service applications
Service accounts
The Service Control Manager (SCM)
Service control programs
Autostart services startup
Delayed autostart services
Triggered-start services
Startup errors
Accepting the boot and last known good
Service failures
Service shutdown
Shared service processes
Service tags
User services
Packaged services
Protected services
Task scheduling and UBPM
The Task Scheduler
Unified Background Process Manager (UBPM)
Task Scheduler COM interfaces
Windows Management Instrumentation
WMI architecture
WMI providers
The Common Information Model and the Managed Object
Format Language
Class association
WMI implementation
WMI security
Event Tracing for Windows (ETW)
ETW initialization
ETW sessions
ETW providers
Providing events
ETW Logger thread
Consuming events
System loggers
ETW security
Dynamic tracing (DTrace)
Internal architecture
DTrace type library
Windows Error Reporting (WER)
User applications crashes
Kernel-mode (system) crashes
Process hang detection
Global flags
Kernel shims
Shim engine initialization
The shim database
Driver shims
Device shims
Conclusion
Chapter 11  Caching and file systems
Terminology
Key features of the cache manager
Single, centralized system cache
The memory manager
Cache coherency
Virtual block caching
Stream-based caching
Recoverable file system support
NTFS MFT working set enhancements
Memory partitions support
Cache virtual memory management
Cache size
Cache virtual size
Cache working set size
Cache physical size
Cache data structures
Systemwide cache data structures
Per-file cache data structures
File system interfaces
Copying to and from the cache
Caching with the mapping and pinning interfaces
Caching with the direct memory access interfaces
Fast I/O
Read-ahead and write-behind
Intelligent read-ahead
Read-ahead enhancements
Write-back caching and lazy writing
Disabling lazy writing for a file
Forcing the cache to write through to disk
Flushing mapped files
Write throttling
System threads
Aggressive write behind and low-priority lazy writes
Dynamic memory
Cache manager disk I/O accounting
File systems
Windows file system formats
CDFS
UDF
FAT12, FAT16, and FAT32
exFAT
NTFS
ReFS
File system driver architecture
Local FSDs
Remote FSDs
File system operations
Explicit file I/O
Memory manager’s modified and mapped page writer
Cache manager’s lazy writer
Cache manager’s read-ahead thread
Memory manager’s page fault handler
File system filter drivers and minifilters
Filtering named pipes and mailslots
Controlling reparse point behavior
Process Monitor
The NT File System (NTFS)
High-end file system requirements
Recoverability
Security
Data redundancy and fault tolerance
Advanced features of NTFS
Multiple data streams
Unicode-based names
General indexing facility
Dynamic bad-cluster remapping
Hard links
Symbolic (soft) links and junctions
Compression and sparse files
Change logging
Per-user volume quotas
Link tracking
Encryption
POSIX-style delete semantics
Defragmentation
Dynamic partitioning
NTFS support for tiered volumes
NTFS file system driver
NTFS on-disk structure
Volumes
Clusters
Master file table
File record numbers
File records
File names
Tunneling
Resident and nonresident attributes
Data compression and sparse files
Compressing sparse data
Compressing nonsparse data
Sparse files
The change journal file
Indexing
Object IDs
Quota tracking
Consolidated security
Reparse points
Storage reserves and NTFS reservations
Transaction support
Isolation
Transactional APIs
On-disk implementation
Logging implementation