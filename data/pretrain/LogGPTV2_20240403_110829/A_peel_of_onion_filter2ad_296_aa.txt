title:A peel of onion
author:Paul F. Syverson
A Peel of Onion 
Paul Syverson                      
● U.S. Naval Research Laboratory 
●                     PI:EMAIL 
http://www.syverson.org 
“Our motivation here is not to 
provide anonymous 
communication, but to separate 
identification from routing.” 
●  “Proxies for anonymous routing”. Reed, 
Syverson, and Goldschlag. ACSAC 1996 
A Motivational Use Case Example 
●  Navy Petty Officer Alice is temporarily in 
Repressia 
A Motivational Use Case Example 
●  Safe back in her room at the Repressia 
Grand Hotel, PO Alice wants to read and/or 
post to sealiftcommand.com 
A Motivational Use Case Example 
Navy PO Alice 
in her hotel  
Connecting when overseas 
Navy PO Alice 
in her hotel  
Contacted: 
sealiftcommand.com 
05/06/2014, 9PM, 
20 min, encrypted 
Connecting when overseas 
Navy PO Alice 
in her hotel  
Contacted: 
sealiftcommand.com 
05/06/2014, 9PM, 
20 min, encrypted 
Rm: 416 
Ckout on: 
05/08/2014 
Security of operations concern as 
well as personnel security concern 
Navy PO Alice 
in her hotel  
Contacted: 
nrl.navy.mil 
05/06/2014, 9PM, 
20 min, encrypted 
Rm: 416 
Ckout on: 
05/08/2014 
Some more government uses 
●  Open source intelligence gathering 
●  Sensitive communications with untrusted/
untrusting parties 
●  Encouraging open communications with 
citizens 
●  Location protected servers for defense in 
depth 
●  Protecting the public infrastructure 
–  Interacting with network sensors 
Ordinary citizen Alice 
●  Protecting her behavior from: 
●  Cyberstalking abusive ex-spouse 
●  Behavior tracking and DNS shenanigans from 
her ISP 
●  Misunderstanding from her employer when she 
investigates disease info for an ailing friend 
●  Harassment for blogging her views 
●  Malicious parties watching her log into Club 
Penguin (and watching her mom logged into 
twitter from work) 
●  Spear phishers watching her log into her bank 
It's not only 
about 
dissidents in 
faraway 
lands 
Ordinary citizen Alice 
●  Protecting her behavior from: 
●  Cyberstalking abusive ex-spouse 
●  Behavior tracking and DNS shenanigans from 
her ISP 
●  Misunderstanding from her employer when she 
investigates disease info for an ailing friend 
●  Harassment for blogging her views 
●  Malicious parties watching her log into Club 
Penguin (and watching her mom logged into 
twitter from work) 
●  Spear phishers watching her log into her bank 
Ordinary citizen Alice 
●  Protecting her behavior from: 
●  Cyberstalking abusive ex-spouse 
●  Behavior tracking and DNS shenanigans from 
her ISP 
●  Misunderstanding from her employer when she 
investigates disease info for an ailing friend 
●  Harassment for blogging her views 
●  Malicious parties watching her log into Club 
Penguin (and watching her mom logged into 
twitter from work) 
●  Spear phishers watching her log into her bank 
Officer Alice 
●  Setting up a sting operation: 
–  as a collaborator 
–  as a service provider 
●  Monitoring criminal activity online 
●  Encouraging anonymous tips 
Researcher/Reporter/Rights Worker 
Alice 
●  Gathering information while protecting 
sources 
●  Accessing information that is locally 
censored or monitored 
●  Reporting information that is locally censored 
or monitored 
Corporation Alice 
●  Investigating competitors’ public sites 
●  Avoiding leaking strategy or nonpublic 
information 
●  Protecting customers 
–  spearphishing 
–  attacks or selective service disruption 
–  privacy sensitivity 
Aside: some other benefits of an 
anonymity system 
●  Besides protecting affiliation, etc. can provide 
“poor man’s VPN”. Access to the internet 
despite 
•  Network port policy disconnects 
•  DNS failure 
You can't be anonymous by yourself: 
private solutions are ineffective...  
Citizen 
Alice 
Officer 
Alice 
AliceCorp 
Alice's small 
anonymity net 
... 
“One of the 25 
users on AliceNet.” 
Municipal 
anonymity net 
Investigated 
suspect 
“Looks like a cop.” 
AliceCorp 
anonymity net 
Competitor/ 
malware host 
“It's somebody at  
AliceCorp!”  
... so, anonymity loves company! 
Citizen 
Alice 
Officer 
Alice 
AliceCorp 
... 
“???” 
Shared 
anonymity net 
Investigated 
suspect 
“???” 
Competitor 
“???” 
The simplest designs use a single 
relay to hide connections. 
Alice1 
Bob1 
Alice2 
Bob1, “Y” 
Relay 
“Z” 
Bob2 
Alice3 
Bob3 
But an attacker who sees Alice 
can see who she's talking to. 
Alice1 
Bob1 
Alice2 
Bob1, “Y” 
Relay 
“Z” 
Bob2 
Alice3 
Bob3 
Add encryption to stop attackers 
who eavesdrop on Alice. 
Alice1 
Bob1 
Alice2 
E(Bob1, “Y”) 
Relay 
“Z” 
Bob2 
Alice3 
Bob3 
(e.g.: some commercial proxy providers, Anonymizer) 
But a single relay is a single point 
of failure. 
Alice1 
Alice2 
E(Bob1, “Y”) 
Alice3 
Evil or 
Compromised 
Relay 
Bob1 
“Z” 
Bob2 
Bob3 
But a single relay is a single point 
of bypass. 
Alice1 
Bob1 
Alice2 
E(Bob1, “Y”) 
Irrelevant 
Relay 
“Z” 
Bob2 
Alice3 
Bob3 
Timing analysis bridges all connections 
through relay  ⇒ An attractive fat target 
Low-latency systems are vulnerable 
to end-to-end correlation attacks. 
Low-latency: Alice1 sends:                          
                        Bob2  gets:                           "
                     Alice2 sends:                  
match! 
match! 
               Bob1   gets:                     
High-latency: Alice1 sends:                          
                      Alice2 sends:                        "
Time 
                 Bob1   gets:                       ..... 
                        Bob2   gets:                               ..... 
These attacks work in practice. The obvious defenses 
are expensive (like high-latency), useless, or both.  
But a single relay is a single point 
of bypass. 
Alice1 
Bob1 
Alice2 
E(Bob1, “Y”) 
Irrelevant 
Relay 
“Z” 
Bob2 
Alice3 
Bob3 
Timing analysis bridges all connections 
through relay  ⇒ An attractive fat target 
So, add multiple relays so that 
no single one can betray Alice. 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
A corrupt first hop can tell that Alice is 
talking, but not to whom. 
Alice 
R5 
Bob 
R3 
R4 
R2 
A corrupt last hop can tell someone is 
talking to Bob, but not who. 
Alice 
R1 
R4 
R2 
Bob 
R3 
Onion Routing: Circuit construction 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
Onion Routing: Circuit construction 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
Onion Routing: Circuit construction 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
Onion Routing: Connection creation 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
Onion Routing: Data Exchange 
Alice 
R1 
R4 
R2 
R5 
Bob 
R3 
Onion Routing: Data Exchange 
Alice 
R1 
R4 
R2 
R5 
Bobs 
R3 
Onion Routers (Relays/Nodes): 
Clique topology 
R1 
R4 
R2 
R5 
R3 
Onion Routers (Relays/Nodes): 
Overlay network 
R1 
R4 
R2 
R5 
R3 
That's onion routing in a nutshell 
Mix networks vs. Onion routing 
networks 
Low-latency: Alice1 sends:                          
                        Bob2  gets:                           "
                     Alice2 sends:                  
The image cannot be displayed. Your 
computer may not have enough memory 
to open the image, or the image may 
have been corrupted. Restart your 
computer, and then open the ﬁle again. 
If the red x still appears, you may have 
to delete the image and then insert it 
again.
match! 
match! 
               Bob1   gets:                     
High-latency: Alice1 sends:                          
                      Alice2 sends:                        "
Time 
                 Bob1   gets:                       ..... 
                        Bob2   gets:                               ..... 
These attacks work in practice. The obvious defenses 
are expensive (like high-latency), useless, or both.  
What onion routing is NOT: Mixes 
●  Entirely different threat model 
•  mixes are based on an adversary not being able to correlate 
inputs and outputs he sees 
•  onion routing is based on an adversary not being able to see 
both inputs and outputs to correlate 
•  mix networks more secure against global passive adversary 
•  mix networks can be  less secure vs. local active adversary 
●  Entirely different communications paradigm:  Circuit 
based encryption vs. per message  
•  onion routing supports bidirectional communication 
•  onion routing supports low-latency communication 
●  Can be combined to make mixing onion routers, but 
not typically done or desired 
What onion routing is  
●  Uses expensive crypto (public-key) to lay a 
cryptographic circuit over which data is 
passed 
●  Typically uses free-route circuit building to 
make location of circuit endpoints 
unpredictable  
Why call it “onion routing”? 
Answer: Because of the original key 
distribution data structure 
Alice 
Bob 
R1 
R3 
R4 
R2 
R5 
Why is it called onion routing? 
KA,R5  (cid:15492) "
KA,R2  R5 
KA,R1  R2 
R5 
Bob 
Alice 
R1 
R4 
R2 
R3 
●  Onion: Just layers of public-key crypto 
•   Nothing in the center, just another layer 
Mixi networks have a message in the 
middle of a public-key “onion”. 
49 
Why is it called onion routing? 
KA,R5  (cid:15492) "
KA,R2  R5 
KA,R1  R2 
R5 
Bob 
Alice 
R1 
R4 
R2 
R3 
●  Onion: Just layers of public-key crypto 
•   Nothing in the center, just another layer 
Circuit setup 
KA,R5  (cid:15492) "
KA,R2  R5 
KA,R1  R2 
●  NRL v0 and v1 onion routing and also ZKS 
Freedom network used onions to build circuits 
•  Lacked Forward Secrecy 
•  Required storing record of onions against replay 
●  Tor (NRL v2) uses one layer “onion skins”  
•  ephemeral Diffie-Hellman yields forward secrecy 
•  No need to record processed onions against replay 
•  From suggestion out of Zack Brown’s Cebolla 
Aside: Why is it called ‘Tor’ and 
what does ‘Tor’ mean? 
●  Frequent question to Roger c. 2001-2: Oh 
you’re working on onion routing... which one? 
●  Roger: THE onion routing. The original onion 
routing project from NRL. 
●  Rachel: That’s a good acronym. 
●  Roger: And it’s a good recursive acronym. 