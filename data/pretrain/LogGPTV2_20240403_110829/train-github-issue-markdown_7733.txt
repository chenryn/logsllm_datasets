This may be a duplicate of #7234 and/or #3812, but I don't know enough about
the internals of TypeScript to know for sure. Let's say I have the following:
    interface MyInfo {
       data: T;
    }
    class Foo {
       x: number;
    } 
    let fooInfos: MyInfo[];
    let objectInfos: MyInfo[];
    for (let info of objectInfos) {
       if (info.data instanceof Foo) {
           fooInfos.push(info); // should infer that info is MyInfo, but it doesn't
       }
    } 
In this case, the compiler still thinks `info` is of type `MyInfo`
instead of `MyInfo`, whereas I would expect it to be able to properly
infer the type.