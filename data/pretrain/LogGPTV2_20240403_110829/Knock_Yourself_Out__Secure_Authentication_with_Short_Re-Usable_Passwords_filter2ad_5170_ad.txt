against client and multiple server breaches. Second, KYO
demonstrates that fast non-cryptographic hash functions have
compelling security applications, particularly hash functions
for which pre-images can be enumerated efﬁciently.
VIII. CONCLUSION AND FUTURE WORK
We have presented KYO, our client-side password generator.
KYO is easy to implement, efﬁcient to operate and provides a
unique set of beneﬁts that set it apart from the related work
of which we are aware. KYO offers short passwords, security
against unbounded adversaries and against client and multiple
server breaches while being backwards-compatible and ﬂexible
at the same time. The feature that we ﬁnd most compelling
is KYO’s use of non-cryptographic hash functions. KYO does
not rely on collision-resistance and rather beneﬁts from hash
functions that enable efﬁcient enumeration and intersection
of pre-image sets. We analyzed KYO mathematically and
empirically in order to provide evidence of its security, safety
and performance. However, its empirical analysis could be
pushed to larger security parameters if more beneﬁcial hash
functions can be identiﬁed. This might also enable a user to test
for her choices of passwords what the concrete security is that
they provide, rather than relying on average case guarantees,
as is common in many areas of cryptography.
ACKNOWLEDGMENTS
The ﬁrst author and the third author were supported by the
CONFINE [22] project while doing this research.
REFERENCES
[1] ANDERSON, R., AND LOMAS, T. Fortifying key negotiation schemes
with poorly chosen passwords. Electronics Letters 30, 13 (Jun 1994),
1040–1041.
[2] AVIV, A. J., GIBSON, K., MOSSOP, E., BLAZE, M., AND SMITH,
J. M. Smudge attacks on smartphone touch screens. In Proc. USENIX
Workshop on Offensive Technologies (2010), pp. 1–7.
[3] BERSON, T. A., LOMAS, M., AND GONG, L. Secure, keyed and
collisionful hash functions. Tech. Rep. SRI-CSL-94-08, Stanford
Research Institute (Menlo Park, CA US), 1994.
[4] BOJINOV, H., BURSZTEIN, E., BOYEN, X., AND BONEH, D. Kamou-
ﬂage: Loss-resistant password management. In Proc. of ESORICS’10
(2010).
12
[5] BONNEAU, J., AND PREIBUSCH, S. The password thicket: technical
and market failures in human authentication on the web. In Proc. WEIS
(2010).
[25] WEGMAN, M. N., AND CARTER, J. New hash functions and their use
in authentication and set equality. Journal of Computer and System
Sciences 22, 3 (1981), 265 – 279.
[6] CAPPOS, J. Polypasshash: Protecting passwords in the event of a
password ﬁle disclosure.
[7] DI CRESCENZO, G., LIPTON, R., AND WALFISH, S. Perfectly secure
In Proc. Third
password protocols in the bounded retrieval model.
Conference on Theory of Cryptography (2006), vol. 3876 of LNCS,
Springer-Verlag, pp. 225–244.
[8] ELLISON, C., HALL, C., MILBERT, R., AND SCHNEIER, B. Protecting
secret keys with personal entropy. Future Gener. Comput. Syst. 16, 4
(Feb. 2000), 311–318.
[9] FLORENCIO, D., AND HERLEY, C. A large-scale study of web password
habits. In Proceedings of the 16th International Conference on World
Wide Web (New York, NY, USA, 2007), WWW ’07, ACM, pp. 657–666.
[10] FLOR ˆENCIO, D., HERLEY, C., AND COSKUN, B. Do strong web
passwords accomplish anything? In Proceedings of the 2Nd USENIX
Workshop on Hot Topics in Security (Berkeley, CA, USA, 2007),
HOTSEC’07, USENIX Association, pp. 10:1–10:6.
[11] FRYKHOLM, N., AND JUELS, A. Error-tolerant password recovery.
In Proceedings of the 8th ACM Conference on Computer and Com-
munications Security (New York, NY, USA, 2001), CCS ’01, ACM,
pp. 1–9.
[12] GMBH, M.
imobilesitter —mobilesitter for iphone.
http://www.
mobilesitter.de/downloads/mobilesitter-kes-special-mobile-security.pdf.
[13] HALDERMAN, J. A., WATERS, B., AND FELTEN, E. W. A convenient
method for securely managing passwords. In Proceedings of the 14th
International Conference on World Wide Web (New York, NY, USA,
2005), WWW ’05, ACM, pp. 471–479.
JUELS, A., AND RIVEST, R. L. Honeywords: Making password-cracking
detectable. In Proceedings of the 2013 ACM SIGSAC Conference on
Computer &#38; Communications Security (New York, NY, USA, 2013),
CCS ’13, ACM, pp. 145–160.
[14]
[15] KALISKI, B. PKCS #5: Password-Based Cryptography Speciﬁcation
Version 2.0. RFC 2898 (Informational), September 2000.
[16] KONTAXIS, G., ATHANASOPOULOS, E., PORTOKALIDIS, G., AND
KEROMYTIS, A. D. Sauth: Protecting user accounts from password
database leaks. In Proc. CCS (2013), pp. 187–198.
[17] L’ECUYER, P. Tables of linear congruential generators of different sizes
and good lattice structure. Math. Comput. 68, 225 (Jan. 1999), 249–260.
[18] LEHMER, D. H. Mathematical methods in large-scale computing units.
In Proceedings 2nd Symposium on Large-Scale Digital Computing
Machinery (Cambridge, MA, 1951), Harvard University Press, pp. 141–
146.
[19] LOMAS, M., AND CHRISTIANSON, B. Remote booting in a hostile
world: to whom am i speaking? [computer security]. Computer 28, 1
(Jan 1995), 50–54.
[20] MANNAN, M., BARRERA, D., BROWN, C. D., LIE, D., AND VAN
OORSCHOT, P. C. Mercury: Recovering forgotten passwords using
personal devices. In Proceedings of the 15th International Conference
on Financial Cryptography and Data Security (Berlin, Heidelberg, 2012),
FC’11, Springer-Verlag, pp. 315–330.
[21] MEHLER, A., AND SKIENA, S. Improving usability through password-
corrective hashing. In Proceedings of the 13th International Conference
on String Processing and Information Retrieval (Berlin, Heidelberg,
2006), SPIRE’06, Springer-Verlag, pp. 193–204.
[22] CONFINE. Community networks testbed for the future internet. http:
//conﬁne-project.eu/, June 2013.
[23] ROSS, B., JACKSON, C., MIYAKE, N., BONEH, D., AND MITCHELL,
J. C. Stronger password authentication using browser extensions. In
Proceedings of the 14th Conference on USENIX Security Symposium -
Volume 14 (Berkeley, CA, USA, 2005), SSYM’05, USENIX Association,
pp. 2–2.
[24] SCHAUB, F., DEYHLE, R., AND WEBER, M. Password entry usability
and shoulder surﬁng susceptibility on different smartphone platforms.
In Proceedings of the 11th International Conference on Mobile and
Ubiquitous Multimedia (New York, NY, USA, 2012), MUM ’12, ACM,
pp. 13:1–13:10.
We now get for the number of passwords that map to γi
p :=
(2(cid:96))2n−1
(2(cid:96))2n = 2−(cid:96).
(cid:18)N
(cid:19)
APPENDIX
Before we start we recapitulate a well-known lemma that
we use throughout our proofs.
Lemma A1 (Number of functions). Let X1, X2 be non-empty
and disjoint sets and Y1, Y2 non-empty sets. Set X := ∪iXi,
Y := ∪iYi, and
F := {f : X → Y | ∧i ∀x ∈ Xi : f (x) ∈ Yi}.
Then it is | F |=| Y1 ||X1| · | Y2 ||X2|.
KYO properties:
Lemma A2. Let σ be a seed and γ a digest. Then the size of
F −1
σ (γ) is binomial distributed with average value 2n−(cid:96).
Proof: For a password ρ, what is the probability that it
is mapped to γ? There are in total (2(cid:96))2n−1 functions that do
map a given ρ to a given γ. So the probability to select such
a function is
Pr[| F −1
σ (γ) |= x] =
px(1 − p)N−x.
x
σ (γ) is binomial distributed with expected value 2n ·
So F −1
2−N·(cid:96) = 2n−(cid:96).
Lemma 1 (Password creation). If the password table PW
already contains N passwords, the number of random tries
to ﬁnd the (N + 1)-th password is geometric distributed with
average value (1 − N · 2−(cid:96))−1.
Proof: Given (σ1, γ1), . . . , (σN , γN ), what is the size of
(γi) | has
(γi)? We know from Lemma A2 that | F −1
σi
∪iF −1
average value 2−(cid:96). So we get on average
σi
| ∪N
i=1F −1
σi
(γi) |= N · 2n−(cid:96).
So the probability to successfully pick a suiting password at
random is
p := 1 − N · 2n−(cid:96)
2n
= 1 − N · 2−(cid:96).
The number of random tries to ﬁnd one password is then
given by the geometric distribution with probability p, and its
expected value is 1/p.
Lemma A3. Given a password ρ and secret γ, the number
of random tries to ﬁnd a seed σ that satisﬁes Fσi(ρ) = γ is
geometric distributed with average value 2(cid:96).
Proof: The probability to pick such a function in one try
is 2−(cid:96). Let X be a random variable that denotes the number
of tries until one is found. Then X is geometric distributed:
Pr[X ≤ x] = 1 −(cid:0)1 − 1/2(cid:96)(cid:1)x
.
The expected value of X is 2−(cid:96), so one must test 2(cid:96) different
seeds on average to ﬁnd one such seed.
13
Lemma 2 (Seed selection 1). For given N − 1 passwords, a
randomly chosen seed σ fulﬁls requirement 2 with probability
(1 − 2−(cid:96))N−1.
Proof: We count the number of functions that do not map
the passwords ρ1, . . . , ρN−1 to an arbitrary but ﬁxed digest.
From lemma A1 follows that there are
(2(cid:96) − 1)N−1 · (2(cid:96))2n−(N−1)
of them. Since there are (2(cid:96))2n functions in total, we get the
probability that a randomly chosen function fulﬁls requirement 2
(2(cid:96) − 1)N−1 · (2(cid:96))−(N−1) =
(2(cid:96) − 1)N−1
(2(cid:96))N−1
= (1 − 2−(cid:96))N−1.
Lemma 3 (Seed selection). Given a password ρ and shared
secrets γ1, . . . , γN , the number of random tries to ﬁnd seeds
σ1, . . . , σN that satisfy Fσi(ρ) = γi is geometric distributed
with average value N · 2(cid:96).
Proof: Follows by N repetitions from Lemma A3 .
Safety:
Lemma 4 (Safety). Let N be the number of pairwise distinct
wrongly entered passwords and let N be small compared to
2s. Then the safety of the KYO scheme is binomial distributed
with average value
1 − (1 − 2−(cid:96))N .
Proof: Let γ be the stored digest. There are (2(cid:96) − 1)
N ·
(2(cid:96))2n−N functions that do not map the passwords ρi to the
digest γ. We now ﬁnd, that
i=1Fσ(ρi) = ρ} =
i=1Fσ(ρi) (cid:54)= ρ}
Pr[{σ ∈ Ω : ∨N
=1 − Pr[{σ | ∧N
=1 − | {σ | ∀ρ ∈ {ρ1, . . . , ρN} : Fσ(ρ) (cid:54)= ρ} |
| S |
=1 − (2(cid:96) − 1)
N · (2(cid:96))2n−N
(2(cid:96))2n
=1 − (1 − 2−(cid:96))N .
= 1 − (2(cid:96) − 1)N · 2−(cid:96)N
If N is small compared to 2s, we can approximate this
experiment by drawing from an urn with replacement. The
probability is then binomial distributed with the average value
above.
Security:
Lemma 5 (Guessing secrets). Let C be a set of equally likely
candidate passwords and c := |C|. We deﬁne M := Fσ(C).
Then the probability
Pr[Γ = γ | Σ = σ ∧ ρ ∈ C]
is binomial distributed with the average value
(cid:0)2(cid:96) · (1 − (1 − 2−(cid:96))c)(cid:1)−1
for every γ ∈ M.
14
p :=
= 2−N·l
(cid:19)N
(cid:18) (2(cid:96))2n−1
(cid:19)
(cid:18)N
(2(cid:96))2n
m
Proof: In this proof, we consider F to be a random function.
Note that this does not contradict our deﬁnition of KYO families,
but instead provides an easier proof. We model this situation
by drawing balls from an urn with 2(cid:96) different colored balls
for c times.
For each secret γ, the probability that it is mapped onto by
at least one password in C is 1− (1− 2−(cid:96))c. So the size of M
is binomial distributed with average value 2(cid:96) · (1− (1− 2−(cid:96))c).
Let X denote a random variable that gives the number of
passwords that map to a given digest. Since F is a random
function, X too will be binomial distributed with average value
c · 2−(cid:96). So on average, each digest γ ∈ M will be equally
likely with probability 1/c.
Lemma 6. The size of M is binomial distributed with average
value
2n−N·(cid:96).
Proof: For a password ρ, what is the probability that it is
mapped to γi? There are in total (2(cid:96))2n−1 functions that do
map a given ρ to a given γi. If the σi are selected uniformly
at random and independent from each other, we get
as the probability that such a function was selected each time.
We get for the number of passwords M that map to γi
Pr[M = m] =
pm(1 − p)N−m,
i.e., M is binomial distributed and it’s expected value is
2n · 2−N·(cid:96) = 2n−N·(cid:96).
(1)
Theorem 1 (Guessing passwords). It is
Pr[R = ρ | ∧N
i=1(Σi = σi ∧ Γi = γi] =
(cid:40) 1|M|
0
ρ ∈ M
else.
with the size of M being binomial distributed with average
value 2n−N l.
Proof: For any ρi ∈ M, we get using Bayes’ theorem
=
i=1(Σi = σi ∧ Γi = γi] =
i=1(Σi = σi ∧ Γi = γi) | R = ρi] · Pr[R = ρ]
Pr[R = ρ | ∧N
Pr[∧N
(cid:80)
ρj∈M Pr[∧N
which simpliﬁes to
(cid:80)
Pr[Σi = σi ∧ Γi = γi | R = ρi]
ρj∈M Pr[Σi = σi ∧ Γi = γi | R = ρj]
i=1(Σi = σi ∧ Γi = γi) | R = ρj] · Pr[R = ρj],
=
1
| M | ,
(2)
since all passwords are initially equally likely and the terms
Pr[Σi = σi ∧ Γi = γi | R = ρi]
are all equal, given that (Fσ)σ∈S covers all functions mapping
P to L. The result follows now from Lemma 6.