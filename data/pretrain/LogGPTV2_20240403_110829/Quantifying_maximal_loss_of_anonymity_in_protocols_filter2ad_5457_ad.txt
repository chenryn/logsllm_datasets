1
n + c
)hj + ((1 − pf ) + pf
c + 1
n + c
)hi}
From this and from Theorem 4.1 we have the following
system of n equations:
−a ln(
−b ln(
) − b ln(
) − a ln(
o0
a
o0
b
o1
b
o1
a
) − ··· − b ln(
) − ··· − b ln(
o0
b
) − b ln(
−b ln(
where a = (1 − pf ) + pf
o1
b
) − ··· − a ln(
a
c+1
n+c ; b = pf
1
n+c .
on−1
b
on−1
b
on−1
) − 1 + λ0 = 0
) − 1 + λ0 = 0
. . .
) − 1 + λ0 = 0
This above equations system only admits one solution
h0 = h1 = h2 = ··· = hn−1 =
1
n
The channel capacity is given by
I(h; O) = log n − H(a, b, b, . . . , b
)
|
{z
n−1
}
To compare with the symmetric case in [4], we take their
parameters n = 50, c = 10 to demonstrate our result. Thus
from the formula above, the channel capacity is
log 50 + (1 − 49pf
60
) log(1 − 49pf
60
) +
49pf
60
log
pf
60
When the forwarding probability pf increases, the channel
capacity decreases because the attacker has less probability
to know who is the sender.
6.3 Anonymity: asymmetric case
In a real world network some users are more active than
others. As an example, we study a network with 50 normal
users and 10 corrupt ones, where the ﬁrst four users hold
ninety percent of the total probability of sending a message.
We further assume that among these four users, the ﬁrst
213user’s probability of sending a message is the sum of the
second and the third. Because the nonactive users only have
very little impact in the whole network, we assume that
these only share the remaining ten percent with uniform
distribution. Hence the constraints are:
h0 + h1 + h2 + h3 = 0.9, h0 = h1 + h2
These constraints implyP
h4 = h5 = ··· = h49 =
0.1
46
tion 4.1 we deduce the following system of 50 equations:
0≤i≤49 hi = 1. Then we use equa-
A0 + λ0 + λ1 = 0
A1 + λ0 − λ1 = 0
A2 + λ0 − λ1 = 0
A3 + λ0 = 0
Ak + λ2 = 0,
where
Ai = −a ln Wi − b
and
X
X
j6=i
s6=r
(4 ≤ k ≤ 49)
ln Wj + a ln a + 49b ln b − 1
Wr = ahr +
bhs, 0 ≤ r ≤ 49
Because A1 = A2 we deduce that
h1 = h2
Using
h0 + h1 + h2 + h3 = 0.9,
h0 = h1 + h2
We can deﬁne h0, h2, h3 in terms of h1 as
h0 = 2h1,
h2 = h1,
h3 = 0.9 − 4h1
Also all other values of h can be replaced by a constant,
i.e.
h4 = h5 = ··· = h49 =
0.1
46
The above system can hence be reduced to a system of
4 equations and 4 unknown variables: h1, λ0, λ1, λ2 which
then can be solved for a given pf using standard numerical
analysis methods.
Figure 2 shows the channel capacity of the Crowds pro-
tocol in the unconstrained case and constrained cases of
50,1000,10000 users (under the same constraints as in the
case of 50 users).
7. ONION ROUTING
Onion Routing [24] is designed to protect data and sender
anonymity in communication over a public network such as
the Internet. A number of onion routers form an overlay
network, in which each onion router is connected to some
(if not all) other onion routers. The general idea is, when
a client (sender) communicates with a server (receiver), it
will ﬁrst initialize a circuit that comprises of several onion
routers. The data will then go through the circuit instead
of going directly to the server. We assume that:
1. A circuit can be of any number of nodes as long as no
node appears twice.
Figure 2: Crowds: channel capacity
2. The client never sends the message to the server di-
rectly.
3. Observations by a node include the previous node and
the next one.
4. All paths are equally likely.
Ideally, the packet data is encrypted separately for each hop
in the circuit so the data conﬁdentiality is protected. The
identity of the sender is also partially protected against the
server and onion routers, since they do not know whether
it is from the sender or another onion router. However, if
there are adversaries within the Onion Routing network then
there may be a loss for the sender anonymity. 2
This section will focus on the loss of sender anonymity in
this adversary model, and we will show how it can be quan-
titatively analyzed using the deﬁnition of channel capacity.
A simple Onion Routing network is used as an example, as
shown in Figure 3. The node “R” is the receiver. There are
4 nodes 1,2,3,4 in which either of them can initiate the com-
munication; node 3 is an adversary in the network. We list
all the possible paths, observations on the adversary node
and the conditional probabilities for the observations in the
Table 5.
Figure 3: Example of An Onion Routing Network
From the Table 5, we get o using oj =P
o(N,N ) =
1
3
h1, o(2,R) =
1
3
h1 +
i φi,j:
1
2
h2
2An adversary here refers to a compromised node, where the
attacker is able to observe which node delivered the packet
to it and which node the packet shall then be delivered to.
00.10.20.30.40.50.60.70.80.910123456Probability of ForwardingChannel Capacity (bit)50 users unconstrained50 users constrained1000 users constrained10000 users constrained214h
1(h1)
2(h2)
3(h3)
4(h4)
1 → 2 → R
1 → 2 → 3 → R
1 → 2 → 4 → 3 → R
2 → 4 → 3 → R
2 → 3 → R
3 → 2 → R
4 → 3 → R
4 → 3 → 2 → R
Path O (in, out)
(N, N)
(2, R)
(4, R)
(4, R)
(2, R)
(N, R)
(4, R)
(4, 2)
φhi,O(in,out)
1
3
1
3
1
3
1
2
1
2
1
1
2
1
2
Table 5: Onion Routing: observations and probabil-
ities
o(4,R) =
1
3
h1 +
1
2
h2 +
1
2
h4, o(N,R) = h3, o(4,2) =
1
2
h4
From o and φ and Theorem 4.1 we deduce that the channel
capacity is given by solving the following equations:
− 1
3
ln(
o(N,N )
1
3
) − 1
3
− 1
2
ln(
ln(
o(2,R)
1
3
o(2,R)
1
2
− 1
2
ln(
o(4,2)
1
2
1
3
ln(
o(4,R)
o(4,R)
) − 1 + λ0 = 0
) − 1
3
) − 1
) − 1 + λ0 = 0
ln(
2
− ln o(N,R) − 1 + λ0 = 0
) − 1 + λ0 = 0
o(4,R)
ln(
1
2
) − 1
2
1
2
This system has only one solution
h1 = 0.173, h2 = 0.160, h3 = 0.390, h4 = 0.276, λ0 = 0.059
Using Proposition 4.2, the channel capacity is hence
(1 − 0.0589) = 1.3577 bits
d(1 − λ0) =
1
ln 2
7.1 Anonymity: constrained case
Similar to the analysis of Crowds protocol, we now con-
sider the case when an active user sends out messages more
frequently than non-active users. Here we assume h1 has
twice the probability than h2. Then we have an additional
constraint:
with the constraint C0:
h1 = 2h2
h1 + h2 + h3 + h4 = 1
We use Theorem 4.1 to get the following equations:
− 1
3
(ln(
o(N,N )
1
3
o(2,R)
) + ln(
) + ln(
o(4,R)
1
3
)) − 1 + λ0 + λ1 = 0
1
3
o(2,R)
1
2
− 1
2
ln(
) − 1
2
ln(
o(4,R)
1
2
) − 1 + λ0 − 2λ1 = 0
− ln o(N,R) − 1 + λ0 = 0
) − 1 + λ0 = 0
o(4,R)
ln(
− 1
2
ln(
o(4,2)
1
2
) − 1
2
1
2
The system has only one solution
h1 = 0.216, h2 = 0.108, h3 = 0.391, h4 = 0.285,
h
1(h1)
2(h2)
3(h3)
4(h4)
1 → 2 → R
1 → 2 → 3 → R
2 → 3 → R
3 → 2 → R
4 → 3 → R
4 → 3 → 2 → R
Path O (in, out)
(N, N)
(2, R)
(2, R)
(N, 2)
(4, R)
(4, 2)
φhi,O(in,out)
1
2
1
2
1
1
1
2
1
2
Table 6: The onion network with less connectivity