A , B, KAB, f b)
the program for B
m3 := receive(10)
wait(s2)
check(m3 = f b)
dm3 := df b
AB := π2
K B
m4 := receive(11)
bM := case m4 of
1(m3)
aM → M
Figure 15: Example protocol, third iteration, introducing case-statements
is key(7), this is permitted.
• The set of variables that occur in projection statements is {dmA
2 , m1, m3}. Of
2 contains key(7). But as the outermost
these variables, the abstract value of dmA
2 ) is tuple4, it is known statically whether some projection
constructor of I(dmA
succeeds or fails (in our case, all of them succeed, because the projection opera-
tor is π4
i ).
We can now replace the decryptions with key(7) with case-statements (giving the
protocol in Fig. 15), the encryptions with key(7) with the encryptions of Z (giving
the protocol in Fig. 16) and remove the only case-statement that was introduced (let
s3 ∈ Sem be a semaphore), giving the protocol in Fig. 17). The analysis given in
Sec. 8 will consider the protocol in Fig. 17 secure because the variable M is used
only in deﬁning bM and that variable is not sent out over the network, nor does the
termination of execution depend on its value.
10 Conclusion
We have presented an analysis for checking whether cryptographic protocols preserve
the conﬁdentiality of secret messages. The analysis works by ﬁrst applying the trans-
formation described in Sec. 7 to the protocol, resulting in one or more transformed
protocols. The security of all these protocols is checked by the analysis described in
Sec. 8. The original protocol is deemed secure if all transformed protocols were se-
cure. Our analysis is correct with respect to computational semantics and (complexity-
theoretical) deﬁnition of conﬁdentiality.
There are several directions in which the presented work could be extended. We
could consider richer program languages for expressing the protocol parties. This
would also mean that the interpretation presented in Sec. 7.2 and choice of keys pre-
sented Sec. 7.3 becomes more complex. It is also possible that we can no longer always
31
Protocol prelude
KAS := gen key(1)
KBS := gen key(2)
A := constant(0)
B := constant(1)
Z := constant(0)
the program for S
the program for A
A := random(3)
2 = f a)
N A
send (A, B, N A
A )
2 := receive(4)
mA
wait(s1)
check(mA
dmA
2 := df a
check(N A
send π4
K A
aM := encr KA
send aM
AB := π4
4 (dmA
2 )
A = π4
AB
3 (dmA
2 )
(Z)(5)
1(dmA
2 ))
3(m1)
A := π3
m1 := receive(6)
N S
KAB := gen key(7)
df b := (KAB, A)
f b := encr KBS (Z)(8)
signal (s2)
df a := (N S
f a := encr KAS (Z)(9)
signal (s1)
send f a
A , B, KAB, f b)
the program for B
m3 := receive(10)
wait(s2)
check(m3 = f b)
dm3 := df b
AB := π2
K B
m4 := receive(11)
bM := case m4 of
1(m3)
aM → M
Figure 16: Example protocol, third iteration, replacing encryptions
Protocol prelude
KAS := gen key(1)
KBS := gen key(2)
A := constant(0)
B := constant(1)
Z := constant(0)
the program for S
the program for A
A := random(3)
2 = f a)
N A
send (A, B, N A
A )
2 := receive(4)
mA
wait(s1)
check(mA
dmA
2 := df a
check(N A
send π4
K A
aM := encr KA
signal (s3)
send aM
AB := π4
4 (dmA
2 )
A = π4
AB
3 (dmA
2 )
(Z)(5)
1(dmA
2 ))
3(m1)
A := π3
m1 := receive(6)
N S
KAB := gen key(7)
df b := (KAB, A)
f b := encr KBS (Z)(8)
signal (s2)
df a := (N S
f a := encr KAS (Z)(9)
signal (s1)
send f a
A , B, KAB, f b)
the program for B
m3 := receive(10)
wait(s2)
check(m3 = f b)
dm3 := df b
AB := π2
K B
m4 := receive(11)
wait(s3)
check(m4 = aM )
bM := M
1(m3)
Figure 17: Example protocol, third iteration, removing case-statements
32
replace the case-statement with a number of equality checks and assignments. Instead,
an analysis similar to Sec. 8 may be necessary to ﬁnd out whether it is allowed. For
case-statements that we cannot replace, we have to introduce new constructs to the set
Trm. These new constructs will then bring more rules to deﬁnitions of ≃ and 6≃.
We could consider integrity properties. Our machinery for protocol interpretation
may be quite helpful in determining whether a certain state is reachable or not.
We could try to add more different cryptographic primitives. We can probably add
some cryptographic primitive rather easily if
1. its security deﬁnition requires it to be indistinguishable from some “ideal sys-
tem”.
2. the workings of this “ideal system” are easily expressible in our program lan-
guage.
Possible candidates are public-key encryption, digital signatures, message authentica-
tion codes etc. We may also consider different security deﬁnitions of cryptographic
primitives, for example pseudorandom permutations as symmetric encryption.
Acknowledgement
We are thankful to the anonymous referees of 2004 IEEE Security and Privacy con-
ference and to Birgit Pﬁtzmann for their comments. They certainly have improved the
readability of this paper.
References
[1] Mart´ın Abadi and Jan J¨urjens. Formal Eavesdropping and Its Computational In-
terpretation. In Naoki Kobayashi and Benjamin C. Pierce, editors, Theoretical
Aspects of Computer Software, 4th International Symposium, TACS 2001, volume
2215 of LNCS, pages 82–94, Sendai, Japan, September 2001. Springer-Verlag.
[2] Mart´ın Abadi and Phillip Rogaway. Reconciling Two Views of Cryptography
In Jan van Leeuwen,
(The Computational Soundness of Formal Encryption).
Osamu Watanabe, Masami Hagiya, Peter D. Mosses, and Takayasu Ito, editors,
International Conference IFIP TCS 2000, volume 1872 of LNCS, pages 3–22,
Sendai, Japan, August 2000. Springer-Verlag.
[3] Michael Backes. Cryptographically Sound Analysis of Security Protocols. PhD
thesis, Universit¨at des Saarlandes, 2002.
[4] Michael Backes and Christian Jacobi II. Cryptographically Sound and Machine-
Assisted Veriﬁcation of Security Protocols. In Helmut Alt and Michel Habib, ed-
itors, STACS 2003, 20th Annual Symposium on Theoretical Aspects of Computer
Science, volume 2607 of LNCS, pages 675–686, Berlin, Germany, February 2003.
Springer-Verlag.
[5] Michael Backes and Birgit Pﬁtzmann. Symmetric Encryption in a Simulatable
Dolev-Yao Style Cryptographic Library. Cryptology ePrint Archive, Report
2004/059, 2004. http://eprint.iacr.org/.
33
[6] Michael Backes, Birgit Pﬁtzmann, and Michael Waidner. Symmetric authentica-
tion within a simulatable cryptographic library. In Einar Snekkenes and Dieter
Gollmann, editors, Computer Security - ESORICS 2003, 8th European Sympo-
sium on Research in Computer Security, volume 2808 of LNCS, pages 271–290,
Gjøvik, Norway, October 2003. Springer-Verlag.
[7] Michael Backes, Birgit Pﬁtzmann, and Michael Waidner. A Universally Com-
posable Cryptographic Library. In Proceedings of the 10th ACM Conference on
Computer and Communications Security, Washington, DC, October 2003. ACM
Press.
[8] Mihir Bellare, Anand Desai, Eron Jokipii, and Phillip Rogaway. A Concrete Se-
curity Treatment of Symmetric Encryption. In 38th Annual Symposium on Foun-
dations of Computer Science, pages 394–403, Miami Beach, Florida, October
1997. IEEE Computer Society Press.
[9] Mihir Bellare, Anand Desai, David Pointcheval, and Phillip Rogaway. Rela-
tions among Notions of Security for Public-Key Encryption Schemes. In Hugo
Krawczyk, editor, Advances in Cryptology - CRYPTO ’98, 18th Annual Interna-
tional Cryptology Conference, volume 1462 of LNCS, pages 26–45, Santa Bar-
bara, California, August 1998. Springer-Verlag.
[10] Mihir Bellare and Chanathip Namprempre. Authenticated Encryption: Relations
among Notions and Analysis of the Generic Composition Paradigm. In Tatsuaki
Okamoto, editor, Advances in Cryptology - ASIACRYPT 2000, 6th International
Conference on the Theory and Application of Cryptology and Information Se-
curity, volume 1976 of LNCS, pages 531–545, Kyoto, Japan, December 2000.
Springer-Verlag.
[11] Mihir Bellare and Phillip Rogaway. Random Oracles are Practical: A Paradigm
for Designing Efﬁcient Protocols. In CCS ’93, Proceedings of the 1st ACM Con-
ference on Computer and Communications Security, pages 62–73, Fairfax, Vir-
ginia, November 1993. ACM Press.
[12] Mihir Bellare and Phillip Rogaway. Provably secure session key distribution - The
three party case. In Proceedings of the Twenty-Seventh Annual ACM Symposium
on Theory of Computing, pages 57–66, Las Vegas, Nevada, June 1995. ACM
Press.
[13] Bruno Blanchet. Automatic Veriﬁcation of Cryptographic Protocols: A Logic
Programming Approach (invited talk). In 5th ACM-SIGPLAN International Con-
ference on Principles and Practice of Declarative Programming (PPDP’03), Up-
psala, Sweden, August 2003. ACM Press.
[14] Ran Canetti. A uniﬁed framework for analyzing security of protocols. Electronic
Colloquium on Computational Complexity (ECCC), 8(16), 2001.
[15] Ran Canetti and Marc Fischlin. Universally Composable Commitments. In Joe
Kilian, editor, Advances in Cryptology - CRYPTO 2001, 21st Annual Interna-
tional Cryptology Conference, volume 2139 of LNCS, pages 19–40, Santa Bar-
bara, California, August 2001. Springer-Verlag.
34
[16] Ran Canetti and Hugo Krawczyk. Universally Composable Notions of Key Ex-
change and Secure Channels. In Lars R. Knudsen, editor, Advances in Cryptology
- EUROCRYPT 2002, International Conference on the Theory and Application of
Cryptographic Techniques, volume 2332 of LNCS, pages 337–351, Amsterdam,
The Netherlands, April 2002. Springer-Verlag.
[17] Ran Canetti, Yehuda Lindell, Rafail Ostrovsky, and Amit Sahai. Universally com-
posable two-party and multi-party secure computation. In Proceedings on 34th
Annual ACM Symposium on Theory of Computing, pages 494–503, Montreal,
Quebec, May 2002. ACM.
[18] Dorothy E. Denning. A Lattice Model of Secure Information Flow. Communica-
tions of the ACM, 19(5):236–243, 1976.
[19] Dorothy E. Denning and Peter J. Denning. Certiﬁcation of Programs for Secure
Information Flow. Communications of the ACM, 20(7):504–513, 1977.
[20] Erki Hermann. Kr¨uptograaﬁliste protokollide turvalisuse anal¨u¨us (Security Anal-
ysis of Cryptographic Protocols). Diploma thesis, Tartu University, May 2003. In
Estonian with English summary.
[21] Jonathan Herzog. Computational Soundness of Formal Adversaries. Master’s
thesis, Massachusetts Institute of Technology, September 2002.
[22] Jonathan Herzog, Moses Liskov, and Silvio Micali. Plaintext Awareness via Key
Registration.
In Dan Boneh, editor, Advances in Cryptology - CRYPTO 2003,
23rd Annual International Cryptology Conference, volume 2729 of LNCS, pages
548–564, Santa Barbara, California, August 2003. Springer-Verlag.
[23] Peeter Laud. Computationally Secure Information Flow. PhD thesis, Universit¨at
des Saarlandes, 2002.
[24] Peeter Laud. Handling Encryption in Analyses for Secure Information Flow. In
Pierpaolo Degano, editor, Programming Languages and Systems, 12th European
Symposium on Programming, ESOP 2003, volume 2618 of LNCS, pages 159–
173, Warsaw, Poland, April 2003. Springer-Verlag.
[25] K. Rustan M. Leino and Rajeev Joshi. A Semantic Approach to Secure Infor-
mation Flow. In Johan Jeuring, editor, Mathematics of Program Construction,
MPC ’98, volume 1422 of LNCS, pages 254–271, Marstrand, Sweden, June 1998.
Springer-Verlag.
[26] Patrick Lincoln, John C. Mitchell, Mark Mitchell, and Andre Scedrov. A Prob-
abilistic Poly-Time Framework for Protocol Analysis. In CCS ’98, Proceedings
of the 5th ACM Conference on Computer and Communications Security, pages
112–121, San Francisco, California, November 1998. ACM Press.
[27] Moni Naor and Moti Yung. Public-key cryptosystems provably secure against
chosen ciphertext attacks.
In Proceedings of the Twenty-Second Annual ACM
Symposium on Theory of Computing, pages 427–437, Baltimore, Maryland, May
1990. ACM Press.
35
[28] Birgit Pﬁtzmann, Matthias Schunter, and Michael Waidner. Cryptographic Secu-
rity of Reactive Systems. In Steve Schneider and Peter Ryan, editors, Workshop
on Secure Architectures and Information Flow, volume 32 of Electronic Notes
in Theoretical Computer Science, Royal Holloway, University of London, 2000.
Elsevier Science.
[29] Birgit Pﬁtzmann and Michael Waidner. Composition and integrity preservation
of secure reactive systems. In CCS 2000, Proceedings of the 7th ACM Conference
on Computer and Communications Security, pages 245–254, Athens, Greece,
November 2000. ACM Press.
[30] Birgit Pﬁtzmann and Michael Waidner. A Model for Asynchronous Reactive
Systems and its Application to Secure Message Transmission.
In 2001 IEEE
Symposium on Security and Privacy, pages 184–200, Oakland, California, May
2001. IEEE Computer Society Press.
[31] Charles Rackoff and Daniel R. Simon. Non-interactive zero-knowledge proof of
knowledge and chosen ciphertext attack. In Joan Feigenbaum, editor, Advances
in Cryptology - CRYPTO ’91, 11th Annual International Cryptology Conference,
volume 576 of LNCS, pages 433–444, Santa Barbara, California, August 1991.
Springer-Verlag.
[32] Claude E. Shannon. A Mathematical Theory of Communication. Bell System
Technical Journal, 27:379–423 and 623–656, 1948.
[33] F. Javier Thayer, Jonathan C. Herzog, and Joshua D. Guttman. Strand Spaces:
Proving Security Protocols Correct. Journal of Computer Security, 7(2/3):191–
230, 1999.
[34] Dennis M. Volpano, Geoffrey Smith, and Cynthia Irvine. A Sound Type System
for Secure Flow Analysis. Journal of Computer Security, 4(2,3):167–187, 1996.
[35] Andrew C. Yao. Theory and applications of trapdoor functions (extended ab-
stract). In 23rd Annual Symposium on Foundations of Computer Science, pages
80–91, Chicago, Illinois, November 1982. IEEE Computer Society Press.
36