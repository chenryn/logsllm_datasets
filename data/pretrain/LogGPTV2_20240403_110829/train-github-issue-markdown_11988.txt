### Problem

The `cli.py:shell_command` function, which is invoked by the `flask shell` command, creates a context and passes it to `code.interact`. However, this approach breaks tab completion in the interactive shell. For example:

```python
>>> stuff = 5
>>> stu<TAB><TAB><TAB><TAB>  # No tab completion
```

To enable tab completion, you can manually import and configure the `readline` and `rlcompleter` modules as follows:

```python
>>> import readline
>>> import rlcompleter
>>> readline.set_completer(rlcompleter.Completer(globals()).complete)
>>> stu<TAB>  # Now tab completion works: 'stuff'
```

Alternatively, you could use the `__main__.__dict__` from `flask/__main__.py` as the context for the interactive shell. This can be done by modifying the `shell_command` function in `flask/cli.py` as follows:

```python
# File: flask/cli.py
def shell_command():
    ...
    import __main__
    ctx = __main__.__dict__
    ...
```

This approach ensures that the interactive shell has access to the global namespace of `__main__`, potentially improving the tab completion experience.