_edb_replicator_pub | xdb_sub_servers_trigger_tgfunc | trigger
_edb_replicator_pub | getpackageversionnumber | varchar
(18 rows)
The control schema objects contained in _edb_replicator_sub are shown by the
following:
edb=# SET search_path TO _edb_replicator_sub;
SET
edb=# \dt
List of relations
Schema | Name | Type | Owner
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 188
EDB Postgres Replication Server User’s Guide
---------------------+-------------------------+-------+---------
_edb_replicator_sub | xdb_sub_database | table | pubuser
_edb_replicator_sub | xdb_subscription_tables | table | pubuser
_edb_replicator_sub | xdb_subscriptions | table | pubuser
_edb_replicator_sub | xdb_tables | table | pubuser
(4 rows)
edb=# \ds
List of relations
Schema | Name | Type | Owner
---------------------+-----------------+----------+---------
_edb_replicator_sub | rrep_common_seq | sequence | pubuser
(1 row)
edb=# SELECT nspname, funname, typname FROM pg_function fn, pg_namespace ns,
edb-# pg_type ty
edb-# WHERE nspname = '_edb_replicator_sub'
edb-# AND ns.oid = fn.funnamespace
edb-# AND ty.oid = fn.funrettype
edb-# ORDER BY typname, funname;
nspname | funname | typname
---------------------+----------------------------------------+---------
_edb_replicator_sub | xdb_sub_database_trigger_tgfunc | trigger
_edb_replicator_sub | xdb_subscription_tables_trigger_tgfunc | trigger
_edb_replicator_sub | xdb_subscriptions_trigger_tgfunc | trigger
_edb_replicator_sub | xdb_tables_trigger_tgfunc | trigger
(4 rows)
The control schema objects contained in _edb_scheduler are shown by the following:
edb=# SET search_path TO _edb_scheduler;
SET
edb=# \dt
List of relations
Schema | Name | Type | Owner
----------------+-----------------------------+-------+---------
_edb_scheduler | sch_pub_blob_triggers | table | pubuser
_edb_scheduler | sch_pub_calendars | table | pubuser
_edb_scheduler | sch_pub_cron_triggers | table | pubuser
_edb_scheduler | sch_pub_fired_triggers | table | pubuser
_edb_scheduler | sch_pub_job_details | table | pubuser
_edb_scheduler | sch_pub_job_listeners | table | pubuser
_edb_scheduler | sch_pub_locks | table | pubuser
_edb_scheduler | sch_pub_paused_trigger_grps | table | pubuser
_edb_scheduler | sch_pub_scheduler_state | table | pubuser
_edb_scheduler | sch_pub_simple_triggers | table | pubuser
_edb_scheduler | sch_pub_trigger_listeners | table | pubuser
_edb_scheduler | sch_pub_triggers | table | pubuser
_edb_scheduler | sch_sub_blob_triggers | table | pubuser
_edb_scheduler | sch_sub_calendars | table | pubuser
_edb_scheduler | sch_sub_cron_triggers | table | pubuser
_edb_scheduler | sch_sub_fired_triggers | table | pubuser
_edb_scheduler | sch_sub_job_details | table | pubuser
_edb_scheduler | sch_sub_job_listeners | table | pubuser
_edb_scheduler | sch_sub_locks | table | pubuser
_edb_scheduler | sch_sub_paused_trigger_grps | table | pubuser
_edb_scheduler | sch_sub_scheduler_state | table | pubuser
_edb_scheduler | sch_sub_simple_triggers | table | pubuser
_edb_scheduler | sch_sub_trigger_listeners | table | pubuser
_edb_scheduler | sch_sub_triggers | table | pubuser
(24 rows)
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 189
EDB Postgres Replication Server User’s Guide
edb=# SELECT nspname, funname, typname FROM pg_function fn, pg_namespace ns,
edb-# pg_type ty
edb-# WHERE nspname = '_edb_scheduler'
edb-# AND ns.oid = fn.funnamespace
edb-# AND ty.oid = fn.funrettype
edb-# ORDER BY typname, funname;
nspname | funname | typname
----------------+------------------------------------------+---------
_edb_scheduler | sch_pub_blob_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_calendars_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_cron_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_job_details_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_job_listeners_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_simple_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_trigger_listeners_trigger_tgfunc | trigger
_edb_scheduler | sch_pub_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_blob_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_calendars_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_cron_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_job_details_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_job_listeners_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_simple_triggers_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_trigger_listeners_trigger_tgfunc | trigger
_edb_scheduler | sch_sub_triggers_trigger_tgfunc | trigger
(16 rows)
In addition, triggers and trigger functions are created in the schema containing the
publication tables if the trigger-based method of synchronization replication is used.
edb=# SET search_path TO edb;
SET
edb=# \df rr*
List of functions
Schema | Name | Result data type | Argument data types | Type
--------+----------------------+------------------+---------------------+---------
edb | rrpd_edb_dept_tgfunc | trigger | | trigger
edb | rrpd_edb_emp_tgfunc | trigger | | trigger
edb | rrpi_edb_dept_tgfunc | trigger | | trigger
edb | rrpi_edb_emp_tgfunc | trigger | | trigger
edb | rrpu_edb_dept_tgfunc | trigger | | trigger
edb | rrpu_edb_emp_tgfunc | trigger | | trigger
(6 rows)
If the log-based method of synchronization replication is used, the following triggers are
created on the publication tables:
edb=# SELECT t.tgname AS "Trigger Name", c.relname AS "Table Name",
edb-# f.funname AS "Trigger Function"
edb-# FROM pg_trigger t, pg_function f, pg_class c
edb-# WHERE tgname LIKE 'rrpt%'
edb-# AND t.tgfoid = f.oid
edb-# AND t.tgrelid = c.oid
edb-# ORDER BY t.tgname;
Trigger Name | Table Name | Trigger Function
---------------+------------+----------------------
rrpt_edb_dept | dept | capturetruncateevent
rrpt_edb_emp | emp | capturetruncateevent
(2 rows)
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 190
EDB Postgres Replication Server User’s Guide
These triggers are used to support synchronization replication of the TRUNCATE
command when the log-based method is used.
5.3 Creating a Subscription
Creating your first subscription requires the following steps:
 Registering the subscription server
 Adding the subscription database
 Creating a subscription by choosing the publication to which to subscribe
Multiple subscriptions can be created in a subscription database. More than one
subscription can also be created to subscribe against the same publication.
5.3.1 Registering a Subscription Server
When you register a subscription server, you are identifying the network location, admin
user name, and password of a specific, running, subscription server instance that you
want to use to manage all aspects of the subscriptions you will be creating subordinate to
it.
It is important that you record the login information for the subscription server as you
must always use this same subscription server instance to manage all subscriptions
created subordinate to it as represented in the xDB Replication Console replication tree.
Step 1: Start the subscription server if it is not already running. Repeat the same process
as in Step 1 of Section 5.2.1.
Note: If you are using Oracle publication or subscription databases, and the subscription
server has not been restarted since copying the Oracle JDBC driver to the lib/jdbc
subdirectory of your xDB Replication Server installation, you must restart the
subscription server.
For Linux only: Use the systemctl command for CentOS 7 or RHEL 7, and the
service command for previous Linux versions to start, stop, or restart edb-
xdbsubserver for the subscription server. See Section 5.2.1 for information on how
these commands are used.
For Windows only: Open Control Panel, System and Security, Administrative Tools,
and then Services. Use the Start or Restart link for the service named Subscription
Service for xDB Replication Server.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 191
EDB Postgres Replication Server User’s Guide
Figure 5-16 - Windows subscription service
If the subscription server fails to start, see Section 10.3.2.4 for information.
Step 2: Register the subscription server. Open the xDB Replication Console from the
system’s application menu. For xDB Replication Server installed from an xDB RPM
package, the xDB Replication Console is started by invoking the script
XDB_HOME/bin/runRepConsole.sh.
Step 3: Select the top level Replication Servers node. From the File menu, choose
Subscription Server, and then choose Register Server. Alternatively, click the secondary
mouse button on the Replication Servers node and choose Register Subscription Server.
The Register Subscription Server dialog box appears.
Enter the values you supplied during the installation of xDB Replication Server unless
otherwise specified.
 Host. Network IP address of the host running the subscription server. This is the
network IP address used for sub_ipaddr in the pg_hba.conf file in Section
5.1.6.3. (Do not use localhost for this field.)
 Port. Port number the subscription server is using. This is the port number you
specified on the Subscription Server Details screen in Step 17 of Section 3.1.
 User Name. Admin user name that is used to authenticate your usage of this
subscription server. This is the user name you specified on the xDB Admin User
Details screen in Step 15 of Section 3.1.
 Password. Password of the admin user given in the User Name field.
 Save login information. Check this box if you do not want to re-register the
subscription server each time you open the xDB Replication Console. See Section
4.2 for additional information on the advantages and disadvantages of saving
server login information.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 192
EDB Postgres Replication Server User’s Guide
Note: The user name and password combination you enter is authenticated against the
admin user name and password in the xDB Replication Configuration file residing on the
host with the IP address you enter in the Host field.
Figure 5-17 - Register Subscription Server dialog box
Click the Register button after you have filled in the fields. A Subscription Server node
appears in the replication tree of the xDB Replication Console.
Figure 5-18 – Replication tree after registering a subscription server
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 193
EDB Postgres Replication Server User’s Guide
5.3.2 Adding a Subscription Database
The database in which subscriptions are to reside must be identified to xDB Replication
Server. This is done by creating a subscription database definition.
After the subscription database definition is created, a Subscription Database node
representing that subscription database definition appears in the replication tree of the
xDB Replication Console. Subscriptions created subordinate to this subscription database
definition will have their publications replicated to the database identified by the
subscription database definition.
You must enter database connection information such as the database server network
address, database identifier, and database login user name and password when you create
the subscription database definition. The connection information is used by the
subscription server to create the subscription table definitions and by the publication
server to perform replications.
Note the following restriction on the subscription database:
 For Oracle only. There must be no existing tables or views owned by the Oracle
subscription database user that has the same name as a table or view in a
publication that will be replicated to this database. For example, if the Oracle
subscription database user name is subuser, and if a Postgres publication
contains a table with the name dept, then the Oracle subscription database must
not have an existing table or view with the schema-qualified name
subuser.dept at the time you create the subscription.
 For Postgres only. There must be no existing tables or views with the same
schema-qualified name as a table or view in a publication that will be replicated to
this database. For example, if the publication contains a table with the schema-
qualified name edb.dept, then the Postgres subscription database must not have
an existing table or view with the schema-qualified name edb.dept at the time
you create the subscription. Note: If the SQL Server publication schema name is
dbo, the subscription tables are created under a schema named dbo_sql in
Postgres.
 For SQL Server only. There must be no existing tables or views with the same
schema-qualified name as a table or view in a publication that will be replicated to
this database. For example, if the publication contains a table with the schema-
qualified name edb.dept, then the SQL Server subscription database must not
have an existing table or view with the schema-qualified name edb.dept at the
time you create the subscription. Note: If the Postgres publication schema name is
public, the subscription tables are created under a schema named public_sql
in SQL Server.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 194
EDB Postgres Replication Server User’s Guide
Note: A database that has been added as a publication database can also be used as a
subscription database.
Step 1: Make sure the database server in which the subscription database resides is
running and accepting client connections.
Step 2: Select the Subscription Server node. From the Subscription menu, choose
Subscription Database, and then choose Add Database. Alternatively, click the secondary
mouse button on the Subscription Server node and choose Add Database. The
Subscription Service – Add Database dialog box appears.
Step 3: Fill in the following fields:
 Database Type. Select Oracle, SQL Server, PostgreSQL, or Postgres Plus
Advanced Server for the type of subscription database. For an Advanced Server
Oracle compatible installation, select the Postgres Plus Advanced Server option.
For PostgreSQL or an Advanced Server PostgreSQL compatible installation,
select the PostgreSQL option.
 Host. IP address of the host on which the subscription database server is running.
 Port. Port on which the subscription database server is listening for connections.
 User. The subscription database user name chosen in Section 5.1.5.1 for a
Postgres subscription database or the database user name created in Step 2 of
Section 5.1.5.2 for an Oracle subscription database or the database user name
created in Step 2 of Section 5.1.5.3 for a SQL Server subscription database.
 Password. Password of the database user.
 Service ID (For Oracle). Enter the Oracle System Identifier (SID) of the Oracle
instance running the subscription database if the SID radio button is selected.
Enter the net service name of a connect descriptor as defined in the
TNSNAMES.ORA file if the Service Name radio button is selected. Note (For
Oracle 12c Pluggable Database): Use the service name.
 Database (For Postgres or SQL Server). Enter the Postgres or SQL Server
database name.
 URL Options (For SSL connectivity). Enter the URL options to establish SSL
connectivity to the subscription database. See Section 7.11 for information on
using SSL connections.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 195
EDB Postgres Replication Server User’s Guide
Figure 5-19 - Subscription Service - Add Database dialog box
Step 4: Click the Test button. If Test Result: Success appears, click the OK button, then
click the Save button.
Figure 5-20 - Successful subscription database test
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 196
EDB Postgres Replication Server User’s Guide
If an error message appears investigate the cause of the error, correct the problem, and
repeat steps 1 through 4.
When the subscription database definition is successfully saved, a Subscription Database
node is added to the replication tree under the Subscription Server node.
Figure 5-21 – Replication tree after adding a subscription database
5.3.3 Adding a Subscription
Subordinate to a subscription database definition, you create subscriptions. A
subscription assigns the publication that is to be replicated to the database identified by
the subscription database definition.
Step 1: Select the Subscription Database node. From the Subscription menu, choose
Create Subscription. Alternatively, click the secondary mouse button on the Subscription
Database node and choose Create Subscription. The Create Subscription dialog box
appears.
Step 2: Fill in the following fields:
 Subscription Name. Enter a name for the subscription that is unique amongst all
subscription names.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 197
EDB Postgres Replication Server User’s Guide
 Host. Network IP address of the publication server that is the parent node of the
publication to be subscribed to. This is the same value entered in the Host field in
Step 3 of Section 5.2.1.
 Port. Port used by the publication server. This is the same value entered in the
Port field in Step 3 of Section 5.2.1.
 User Name. Admin user name of the publication server. This is the same value
entered in the User Name field in Step 3 of Section 5.2.1.
 Password. Password of the admin user. This is the same value entered in the
Password field in Step 3 of Section 5.2.1.
 Publication Name. Click the Load button to get a list of available publications.
Select the publication to which to subscribe.
Figure 5-22 - Create Subscription dialog box
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 198
EDB Postgres Replication Server User’s Guide
Step 3 (Optional): If you defined a set of available table filters for the publication, you
have the option of enabling these filters on this subscription. See Section 5.2.3 for
instructions on defining table filters. If you do not wish to filter the rows that are
replicated to this subscription, go to Step 4.
Click the Filter Rules tab to enable one or more filter rules on the subscription. At most
one filter rule may be enabled on any given subscription table.
In the following example the filter named dept_10_20_30 is enabled on the dept table
and the filter named dept_30 is enabled on the emp table of this subscription.
Figure 5-23 - Enabling filter rules on a subscription
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 199