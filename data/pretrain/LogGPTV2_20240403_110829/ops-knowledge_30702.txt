User: We need to implement a highly available Nginx load balancing cluster and use SSL certificates to encrypt all HTTP requests. Please provide a detailed implementation plan with related scripts and configuration files.
Assistant: Implementation plan: 1. Install Nginx Install Nginx on all Nginx servers, and perform basic configurations, such as listening ports, log output, etc. 2. Configure SSL certificates Use the free Let's Encrypt certificate authority to apply for SSL certificates for all domain names and install the certificates on each Nginx server. 3. Configure the load balancing strategy. By configuring the upstream module of Nginx, the responsible balancing strategy is realized. It can be configured based on information such as server health, load, and geographic location. 4. Configure the Nginx reverse proxy to use Nginx to reverse proxy all HTTP requests to ensure that all requests are transmitted through the SSL encrypted channel. 5. Configure high availability By using the keepalived software, configure the high availability of Nginx to ensure that when a server fails, it will automatically switch to the backup server. Relevant scripts and configuration files: 1. Install Nginx: ``` sudo apt-get update sudo apt-get install nginx ``` 2. Configure SSL certificate: Obtain Let's Encrypt certificate and install: ``` sudo apt-get update sudo apt-get install certbot python3-certbot-nginx sudo certbot --nginx -d example.com ``` 3. Configure the load balancing strategy: Open the Nginx configuration file `/etc/nginx/nginx.conf`, in the http block Add the following code: ``` http { upstream backend { server web1.example.com weight=3; server web2.example.com; server web3.example.com backup; } server { listen 80; location / { proxy_pass http:/ /backend; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host; } } } ``` 4. Configure Nginx reverse proxy: Open the Nginx configuration file `/etc/nginx/nginx.conf`, in the http block Add the following code in: ``` http { server { listen 80; server_name example.com; return 301 https://$host$request_uri; } server { listen 443 ssl; server_name example.com; ssl_certificate /etc/letsencrypt/live /example.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; location / { proxy_pass http://backend; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host; } } } ``` 5. Configure high availability: Install keepalived: ``` sudo apt-get update sudo apt-get install keepalived ``` Edit the keepalived configuration file `/etc/keepalived/keepalived.conf`, add the following code : ``` ! Configuration File for keepalived global_defs { } vrrp_script chk_nginx { script "killall -0 nginx" interval 2 weight 2 } vrrp_instance VI_1 { interface eth0 state MASTER virtual_router_id 51 priority 101 virtual_ipadd ress { 192.168.0.10/24 dev eth0 } track_script { chk_nginx } } ``` On the backup server, change `state` to `BACKUP` and lower `priority`.