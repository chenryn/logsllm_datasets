Privacy, 2013, pp. 541–555.
[17] O. Starov and N. Nikiforakis, “Xhound: Quantifying the ﬁngerprintability
of browser extensions,” in IEEE Symposium on Security and Privacy
(SP), 2017, pp. 941–956.
[18] P. Laperdrix, W. Rudametkin, and B. Baudry, “Beauty and the beast:
Diverting modern web browsers to build unique browser ﬁngerprints,”
in IEEE Symposium on Security and Privacy (SP), 2016, pp. 878–894.
[19] M. Mulazzani, P. Reschl, M. Huber, M. Leithner, S. Schrittwieser,
E. Weippl, and F. Wien, “Fast and reliable browser identiﬁcation with
javascript engine ﬁngerprinting,” in Web 2.0 Workshop on Security and
Privacy (W2SP), vol. 5, 2013.
[20] L.
Brotherston,
“Tls
ﬁngerprinting.”
[Online].
Available:
https://github.com/LeeBrotherston/tls-ﬁngerprinting
[21] Z. Durumeric, Z. Ma, D. Springall, R. Barnes, N. Sullivan, E. Bursztein,
M. Bailey, J. A. Halderman, and V. Paxson, “The security impact of
https interception.” in Proceedings of the 24th Network and Distributed
System Security Symposium (NDSS), 2017.
[22] K. Park, V. S. Pai, K.-W. Lee, and S. B. Calo, “Securing web service
by automatic robot detection.” in USENIX Annual Technical Conference,
General Track, 2006, pp. 255–260.
[23] G. Analytics, “How a web session is deﬁned in analytics.” [Online].
Available: https://support.google.com/analytics/answer/2731565?hl=en
[24] Valve,
“Fingerprintjs2.”
[Online].
Available:
https:
//github.com/Valve/ﬁngerprintjs2
[25] M. W. Docs, “Content security policy (csp).” [Online]. Available:
https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
[26] S. Stamm, B. Sterne, and G. Markham, “Reining in the web with content
security policy,” in Proceedings of the 19th international conference
on World wide web, 2010, pp. 921–930.
[27] N. Virvilis, B. Vanautgaerden, and O. S. Serrano, “Changing the game:
The art of deceiving sophisticated attackers,” in 2014 6th International
Conference On Cyber Conﬂict (CyCon 2014).
IEEE, 2014, pp. 87–97.
[28] B. P. Ltd, “Web technology usage trends (accessed march 27,2020).”
[Online]. Available: https://trends.builtwith.com
[29] “Wordpress: About us,” https://wordpress.com/about/.
[30] “Ip2location lite ip-asn database,” https://lite.ip2location.com/database/
ip-asn.
[31] X. Mi, X. Feng, X. Liao, B. Liu, X. Wang, F. Qian, Z. Li, S. Alrwais,
L. Sun, and Y. Liu, “Resident evil: Understanding residential ip proxy
as a dark service,” in 2019 IEEE Symposium on Security and Privacy
(SP), 2019.
[32] D. Liu, S. Hao, and H. Wang, “All your dns records point to us:
Understanding the security threats of dangling dns records,” in
Proceedings of the 2016 ACM SIGSAC Conference on Computer and
Communications Security, 2016, pp. 1414–1425.
[33] K. Borgolte, T. Fiebig, S. Hao, C. Kruegel, and G. Vigna, “Cloud strife:
mitigating the security risks of domain-validated certiﬁcates,” 2018.
[34] S. F. McKenna, “Detection and classiﬁcation of web robots with
honeypots,” Naval Postgraduate School Monterey United States, Tech.
Rep., 2016.
[35] R. Barnett, “Setting HoneyTraps with ModSecurity: Adding Fake
robots.txt Disallow Entries,” https://www.trustwave.com/en-us/resources/
blogs/spiderlabs-blog/setting-honeytraps-with-modsecurity-adding-
fake-robotstxt-disallow-entries/.
bad
[36] R. Haswell,
robots with
honeytraps,”
“Stopping
https:
//www.davidnaylor.co.uk/stopping-bad-robots-with-honeytraps.html.
[37] Google,
“Verifying
googlebot.”
[Online].
Available:
https://support.google.com/webmasters/answer/80553
[38] Microsoft,
“Verifying
bingbot.”
[Online].
Available:
https://www.bing.com/toolbox/verify-bingbot
[39] Yandex, “Verifying yandexbot.” [Online]. Available: https://yandex.com/
support/webmaster/robot-workings/check-yandex-robots.html
[40] Baidu, “How can i know the crawling is from baiduspider.” [Online].
Available: https://help.baidu.com/question?prod id=99&class=0&id=
3001
[41] Google,
“Overview of google
crawlers.”
[Online]. Available:
https://support.google.com/webmasters/answer/1061943
[42] Netcraft,
“Netcraft:
Active
cyber
defence,”
URL:
https://www.netcraft.com/, 2014.
[43] “Internet Archive: Digital Library of Free & Borrowable Books, Movies,
[44] C.
Security,
Music & Wayback Machine,” https://archive.org/.
in
products
could allow for arbitrary code execution.” [Online]. Available:
https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-draytek-
products-could-allow-for-arbitrary-code-execution 2020-043/
vulnerabilities
“Multiple
draytek
[45] M. Daniel, H. Jason, and g0tmi1k, “10k most common credentials.”
[Online]. Available: https://github.com/danielmiessler/SecLists/blob/
master/Passwords/Common-Credentials/10k-most-common.txt
[46] “The blindelephant web application ﬁngerprinter.” [Online]. Available:
https://github.com/lokifer/BlindElephant
[47] “Whatweb.” [Online]. Available: https://github.com/urbanadventurer/
WhatWeb
[48] “Thinkphp
remote
deploy
code
malware.”
execution
to
used
https://www.tenable.com/blog/thinkphp-remote-code-execution-
vulnerability-used-to-deploy-variety-of-malware-cve-2018-20062
[Online].
vulnerability
Available:
[49] “Exploit
code
published
remote
solr
https://www.zdnet.com/article/exploit-code-published-for-two-
dangerous-apache-solr-remote-code-execution-ﬂaws/
execution
code
for
two
ﬂaws.”
dangerous
apache
[Online]. Available:
[50] O. Starov, J. Dahse, S. S. Ahmad, T. Holz, and N. Nikiforakis, “No
honor among thieves: A large-scale analysis of malicious web shells,”
in Proceedings of the 25th International Conference on World Wide
Web, ser. WWW ’16, 2016, p. 1021–1032.
[51] “Seclists:
A
during
collection
security
used
https://github.com/danielmiessler/SecLists
assessments.”
of
multiple
types
[Online].
of
lists
Available:
[52] “lhlsec/webshell.” [Online]. Available: https://github.com/lhlsec/webshell
[53] R. D. Graham, “Masscan: Mass ip port scanner,” URL: https://github.
com/robertdavidgraham/masscan, 2014.
[54] Z. Durumeric, E. Wustrow, and J. A. Halderman, “Zmap: Fast
internet-wide scanning and its security applications,” in Presented as
part of the 22nd USENIX Security Symposium (USENIX Security 13),
2013, pp. 605–620.
[55] D. B. Internet Engineering Task Force (IETF), “Applying generate
random extensions and sustain extensibility (grease) to tls extensibility.”
[Online]. Available: https://tools.ietf.org/html/rfc8701
[56] “Chrome platform status: Grease for tls,” https://www.chromestatus.com/
feature/6475903378915328.
[57] “Cve-2020-0618: Rce in sql server reporting services (ssrs).” [Online].
Available: https://www.mdsec.co.uk/2020/02/cve-2020-0618-rce-in-sql-
server-reporting-services-ssrs/
[58] A. Kapravelos, C. Grier, N. Chachra, C. Kruegel, G. Vigna, and V. Paxson,
“Hulk: Eliciting malicious behavior in browser extensions,” in 23rd
USENIX Security Symposium (USENIX Security 14), 2014, pp. 641–654.
[59] M. Cova, C. Kruegel, and G. Vigna, “Detection and analysis of drive-by-
download attacks and malicious javascript code,” in Proceedings of the
19th international conference on World wide web, 2010, pp. 281–290.
[60] J. Lee, S. Cha, D. Lee, and H. Lee, “Classiﬁcation of web robots:
An empirical study based on over one billion requests,” computers &
security, vol. 28, no. 8, pp. 795–802, 2009.
[61] M. C. Calzarossa, L. Massari, and D. Tessera, “An extensive study of web
robots trafﬁc,” in Proceedings of International Conference on Information
Integration and Web-based Applications & Services, 2013, p. 410.
[62] M. Allman, V. Paxson, and J. Terrell, “A brief history of scanning,”
in Proceedings of the 7th ACM SIGCOMM conference on Internet
measurement, 2007, pp. 77–82.
[63] M. D. Dikaiakos, A. Stassopoulou, and L. Papageorgiou, “An
investigation of web crawler behavior: characterization and metrics,”
Computer Communications, vol. 28, no. 8, pp. 880–897, 2005.
[64] P. Huntington, D. Nicholas, and H. R. Jamali, “Website usage metrics: A
re-assessment of session data,” Information Processing & Management,
vol. 44, no. 1, pp. 358–372, 2008.
[65] G. Xie, H. Hang, and M. Faloutsos, “Scanner hunter: Understanding
http scanning trafﬁc,” in Proceedings of the 9th ACM symposium on
Information, computer and communications security, 2014, pp. 27–38.
[66] S. T. Jan, Q. Hao, T. Hu, J. Pu, S. Oswal, G. Wang, and B. Viswanath,
“Throwing darts in the dark? detecting bots with limited data using
neural data augmentation,” The 41st IEEE Symposium on Security and
Privacy (IEEE SP), Jan 2020.
[67] D. Moore, C. Shannon, G. Voelker, and S. Savage, “Network telescopes:
Technical report,” Cooperative Association for Internet Data Analysis
(CAIDA), Tech. Rep., 2004.
[68] P. Richter and A. Berger, “Scanning the scanners: Sensing the internet
from a massively distributed network telescope,” in Proceedings of the
Internet Measurement Conference, 2019, pp. 144–157.
[69] M. Bailey, E. Cooke, F. Jahanian, J. Nazario, and D. Watson, “The internet
motion sensor-a distributed blackhole monitoring system.” in NDSS, 2005.
[70] N. Provos, “A virtual honeypot framework.” in USENIX Security
Symposium, vol. 173, 2004, pp. 1–14.
[71] C. Leita and M. Dacier, “Sgnet: a worldwide deployable framework
to support the analysis of malware threat models,” in 2008 Seventh
European Dependable Computing Conference.
IEEE, 2008, pp. 99–109.
[72] C. Kreibich and J. Crowcroft, “Honeycomb: creating intrusion detection
signatures using honeypots,” ACM SIGCOMM computer communication
review, vol. 34, no. 1, pp. 51–56, 2004.
XIII. APPENDIX
TABLE VI: Aristaeus dataset description
Dataset
Requests
%Requests
Benign
Malicious
Unknown / Gray
Total
347,386
15,064,878
11,015,403
26.4 million
1.3%
57%
41.68%
100%
Unique
IP Addresses
Blocklist
Coverage
6,802
76,396
206,111
287K
6.91%
13%
11.64%
11.61%
Shared Crawling
Begin Date
End Date
Yes
No
No
(Mixed)
2020-01-24
00:00:01
2020-08-24
23:59:59
TABLE VII: Top requested URL in different web applications
Rank WordPress
Joomla
Drupal
PHPMyAdmin
Webmin
1
2
3
4
5
/xmlrpc.php
(62.664%)
/wp-login.php
(25.094%)
/wp-admin/
(12.239%)
/administrator
/index.php
(0.001%)
/administrator
(0.001%)
/administrator-
/index.php
(48.333%)
/administrator/
(41.512%)
/wp-login.php
(9.29%)
/xmlrpc.php
(0.822%)
/wp-admin/
(0.044%)
/user/login?destination=
/node/1#comment-form
(81.143%)
/wp-login.php
(18.064%)
/xmlrpc.php
(0.476%)
(POST)/index.php
(75.65%)
/session login.cgi
(79.93%)
(POST)/phpmyadmin/index.php
/wp-login.php
(13.649%)
/xmlrpc.php
(4.51%)
(9.658%)
(GET)/phpmyadmin
/index.php
(5.715%)
/administrator/
(0.222%)
/wp-login.php
(8.228%)
/administrator/index.php
(0.095%)
/vendor/phpunit/phpunit-
/src/Util/PHP/eval-stdin.php
(0.749%)
/robots.txt
(1.684%)
/wp-admin/
(0.227%)