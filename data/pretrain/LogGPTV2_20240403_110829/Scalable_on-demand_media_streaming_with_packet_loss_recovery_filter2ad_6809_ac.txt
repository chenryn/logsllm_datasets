1
r
lk =
Channel  1
Channel  2
Channel  3
Channel  4
Channel  5
Channel  6
.....
.....
.....
.....
.....
.....
Figure 4: Example Optimized PB Protocol
(K = 6, r = 1, s = 2)
clients arriving at diﬀerent points in time generally tune into
each segment multicast stream at diﬀerent times.
Generalizing the Optimized PB protocols for segment trans-
mission rate r ≤ 1 provides the capability to assume that
the maximum aggregate transmission rate to each client,
n = s × r > 1, is less than twice the minimum transmission
rate required for real-time playback. Note that this allows
more of the achievable transmission rate to a client to be
used for delivering higher quality media content. Further-
more, as will be illustrated below, for a ﬁxed value of n and
total server transmission bandwidth (B), a lower value of r
yields a lower start-up delay (but a larger number of server
multicast transmission streams, K = B/r).
Noting that the time to download each segment is equal
to 1/r times the segment length, the maximum relative seg-
ments sizes are easily generalized for r ≤ 1, as follows:
k−1(cid:7)
j=1
lj
1
r
l1 +
k−1(cid:7)
j=k−s
lj
1  s.
(7)
Figure 5 compares the required server bandwidth as a
function of start-up delay for Optimized PB protocols with
n = 2 and as a function of average and maximum start-
up delay for the skyscraper system which assumes n = 2.
Maximum start-up delay is twice the average start-up delay
in skyscraper systems. Note that the performance of the
Optimized PB systems is competitive with the skyscraper
system, even though each segment is completely received
before the beginning of the segment is played. Note also that
the performance of the Optimized PB systems improves for
lower r.
The Optimized PB segment sizes are also easily general-
ized for non-negligible latency to join an on-going multicast.
In this case, a conservative estimate of the latency to join
the multicast transmission is added to the left-hand side of
equation (7) and to the time to download the ﬁrst segment
on the right-hand side of the equation for k ≤ s.
20
15
10
5
Skyscraper (max)
Skyscraper (average)
Optimized PB (n=2,r=1)
Optimized PB (n=2,r=0.25)
i
t
h
d
w
d
n
a
B
r
e
v
r
e
S
d
e
r
i
u
q
e
R
0
0.0001
0.001
0.01
0.1
Start-up Delay (fraction of total object duration)
Figure 5: Performance Comparison of
Optimized PB and Skyscraper Broadcasts
Required client buﬀer space for an Optimized PB protocol
can be derived by summing the amounts by which the buﬀer
ﬁlls during the download time of the initial segment, and
during each segment play time for which the download rate
exceeds the play rate. Expressed as a fraction of the total
object size, the required client buﬀer space is given by
K−s(cid:7)
k=1
lk +
(min(K, s)l1 + (n − 1)
(cid:3)(cid:7)
K−s+(cid:2) n−1
k=max(1,K−s+1)
r
((K − k)r − 1)lk)/
(8)
lk.
K(cid:7)
k=1
4.2 Basic Reliable Periodic Broadcast
We next consider modifying the Optimized PB protocols
to enable recovery from packet losses in the transmission
path to each client. This section generalizes the protocols
for the (idealized) case that the cumulative packet loss at
the end of receiving each segment is never greater than a
tunable parameter p. Sections 4.3 and 4.4 will provide a
further optimization and generalizations for environments
that have packet loss greater than the assumed upper bound.
A key insight, supported by Figure 4, is that the Opti-
mized PB protocol can be extended to enable recovery from
packet loss if each segment is delivered by an approximation
of a digital fountain. That is, if each segment is “stretched”
by an appropriate factor (e.g., 2 or 3) using erasure codes,
and if successive transmissions of the segment cycle through
the resulting encoded packets, a client can listen to each
channel until it has correctly received the number of packets
required to reconstruct the respective segment. Assuming
perfect decode eﬃciency3 and maximum packet loss equal
to p, the client will receive the requisite number of packets
for segment k by time 1/(1− p)× lk/r. Letting a = 1/(1− p)
and assuming segment decode time is negligible, the maxi-
3Decode eﬃciency is deﬁned as the ratio of the number of
packets that must be received in order to reconstruct a seg-
ment to the number of packets in the reconstructed segment.
Initially we assume the decode eﬃciency equal to 1.0 and
the time to decode an erasure-coded segment is negligible.
These assumptions simplify the derivation of the segment
size progressions, and then are easily relaxed.
mum segment size progression is as follows:
1  s.
(9)
k−1(cid:7)
j=1
lj
r +
a × l1
k−1(cid:7)
j=k−s
lj
a × lk
r =
r
lk
aT
(cid:1)
For a given number of server streams, the (determinis-
tic) start-up delay is equal to
. The above segment
sizes can be modiﬁed to account for non-negligible segment
decode times by adding the decode time for segment k to
the left-hand side of equation (9) and by adding the decode
time for segment 1 to the download time for segment 1 on
the right-hand side of the equation.
Imperfect decode ef-
ﬁciency can be accounted for by letting a equal the actual
decode eﬃciency times 1/(1−p). For example if p = 0.2 and
decode eﬃciency is 1.05, a = 1.05× 1.25 = 1.3125. Segment
sizes may be capped at some maximum value so as to control
client buﬀer size and decoding time requirements, although
in the following performance results we assume all segment
sizes are as given by equation (9).
Figures 6 & 7 provide numerical results for the required
server bandwidth (in units of the object playback bit rate)
for delivery of a single object, as a function of the client
start-up delay. Decode eﬃciency is assumed to be 1.0 and
decode time is assumed to be negligible in these ﬁgures;
required server bandwidth will increase for larger values of
either of these parameters. Figure 6 shows the impact of
n and p on the required server bandwidth as a function of
the start-up delay. As shown in the ﬁgure, if maximum
packet loss per segment (p) is 10% or less, start-up delay
equal to 1% of T is feasible even for aggregate transmission
rate to each client (n) is only 1.25 times the media play
rate. Moreover, as n and s increase, lower target start-up
delays become more feasible (even for higher values of p),
and the server bandwidth required by the Optimized PB
protocol approaches the lower bound on the required server
bandwidth for recovering from loss rate equal to p, which was
given in equation (4). Recall that the lower bound assumes
unlimited aggregate transmission rate to each client.
In Figure 7 the maximum aggregate transmission rate to
a client is ﬁxed (i.e., n = 2). Thus, as the maximum num-
ber of streams a client listens to (s) increases, (r) decreases
and performance improves. However, the ﬁgure also shows
that decreasing r yields diminishing returns. For example,
the beneﬁt obtained for r < 0.25 may not be worth the cost
of the additional multicast streams. On the other hand,
decreasing r yields shorter segments which imply reduced
decoding time per segment. All of these factors need to be
considered when selecting the value of r for a given imple-
mentation of the protocol.
4.3 RPB Protocols for Bursty Packet Loss
In the Basic RPB protocols, each client that observes cu-
mulative packet loss rate less than or equal to p at the end
of receiving each segment will be able to recover from packet
loss and play the media object without interruption. Fur-
thermore, if a given client observes cumulative packet loss
rate less than p at the end of receiving a given segment, that
segment can be reconstructed prior to its playout point. In
this case, the client can begin listening to later segments ear-
lier than anticipated. This “work-ahead” allows the client
20
15
10
5
n=1.25
n=1.5
n=2
n=3
n=5, s=64
Lower Bound
20
15
10
5
h
t
i
d
w
d
n
a
B
r
e
v
r
e
S
d
e
r
i
u
q
e
R
i
h
t
d
w
d
n
a
B
r
e
v
r
e
S
d
e
r
i
u
q
e
R
0
0.0001
0.001
0.01
0.1
Start-up Delay (fraction of total object duration)
(a) 3% Packet Loss
n=1.25
n=1.5
n=2
n=3
n=5, s=64
Lower Bound
0
0.0001
20
15
10
5
i
h
t
d
w
d
n
a
B
r
e
v
r
e
S
d
e
r
i
u
q
e
R
n=1.25
n=1.5
n=2
n=3
n=5, s=64
Lower Bound
0
0.0001
0.001
0.01
0.1
Start-up Delay (fraction of total object duration)
(b) 10% Packet Loss
0.001
0.01
0.1
Start-up Delay (fraction of total object duration)
(c) 25% Packet Loss
Figure 6: Performance of the Basic RPB Protocols (a = 1
1−p
, default s = 8)
20
15
10
5
h
t
i
d
w
d
n
a
B
r
e
v
r
e
S
d
e
r
i
u
q
e
R
s=2
s=4