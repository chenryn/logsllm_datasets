    $ ipa caacl-add-user smime_acl --group smime_users_group
      ACL name: smime_acl
      Enabled: TRUE
      User Groups: smime_users_group
    -------------------------
    Number of members added 1
    -------------------------
    ```
6.  在 CA ACL 中添加证书配置集：
    ``` literallayout
    $ ipa caacl-add-profile smime_acl --certprofile smime
      ACL name: smime_acl
      Enabled: TRUE
      Profiles: smime
      User Groups: smime_users_group
    -------------------------
    Number of members added 1
    -------------------------
    ```
:::
::: itemizedlist
**验证步骤**
-   查看您创建的 CA ACL 的详情：
    ``` literallayout
    $ ipa caacl-show smime_acl
      ACL name: smime_acl
      Enabled: TRUE
      Profiles: smime
      User Groups: smime_users_group
    ...
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa`{.literal} man page。
-   有关 `ipa caacl`{.literal} 命令的详情，请参考
    `ipa help caacl`{.literal} 命令。
:::
:::
::: section
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_working-with-idm-certificates.html#using-certificate-profiles-and-ca-acls-to-issue-certificates_creating-and-managing-certificate-profiles-in-identity-management}使用证书配置集和 CA ACL 发布证书 {.title}
:::
当证书颁发机构访问控制列表(CA
ACL)允许时，您可以使用证书配置文件来请求证书。此流程描述了如何使用自定义证书配置集为用户请求
S/MIME 证书，该配置集已通过 CA ACL 授予访问权限。
::: itemizedlist
**先决条件**
-   您的证书配置集已创建。
-   已经创建了允许用户使用所需证书配置文件请求证书的 CA ACL。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您可以绕过 CA ACL 检查用户是否执行 `cert-request`{.literal} 命令：
::: itemizedlist
-   是 `admin`{.literal} 用户。
-   具有 `Request Certificate ignoring CA ACLs`{.literal} 权限。
:::
:::
::: orderedlist
**流程**
1.  为用户生成证书请求。例如，使用 OpenSSL:
    ``` literallayout
    $ openssl req -new -newkey rsa:2048 -days 365 -nodes -keyout private.key -out cert.csr -subj '/CN=smime_user'
    ```
2.  从 IdM CA 请求用户的新证书：
    ``` literallayout
    $ ipa cert-request cert.csr --principal=smime_user --profile-id=smime
    ```
    （可选）将 \--ca [*子 CA_name*]{.emphasis} 选项传递给 命令，以从子
    CA 而非 root CA 请求证书。
:::
::: itemizedlist
**验证步骤**
-   验证新发布的证书是否已分配给用户：
    ``` literallayout
    $ ipa user-show user
      User login: user
      ...
      Certificate: MIICfzCCAWcCAQA...
      ...
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa(a)`{.literal} man page。
-   有关 `ipa user-show`{.literal} 命令的详情，请参考
    `ipa help user-show`{.literal} 命令。
-   有关 `ipa cert-request`{.literal} 命令的详情，请参考
    `ipa help cert-request`{.literal} 命令。
-   请参阅 `openssl(lssl)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_working-with-idm-certificates.html#modifying-a-certificate-profile_creating-and-managing-certificate-profiles-in-identity-management}修改证书配置集 {.title}
:::
这个步骤描述了如何使用 `ipa certprofile-mod`{.literal}
命令直接通过命令行修改证书配置集。
::: orderedlist
**流程**
1.  确定您要修改的证书配置集的证书配置集 ID。显示 IdM
    中当前存储的所有证书配置集：
    ``` literallayout
    # ipa certprofile-find
    ------------------
    4 profiles matched
    ------------------
      Profile ID: caIPAserviceCert
      Profile description: Standard profile for network services
      Store issued certificates: TRUE
      Profile ID: IECUserRoles
      ...
      Profile ID: smime
      Profile description: S/MIME certificates
      Store issued certificates: TRUE
    --------------------------
    Number of entries returned
    --------------------------
    ```
2.  修改证书配置文件描述。例如，如果您使用现有配置集为 S/MIME
    证书创建自定义证书配置集，请使用新用法更改描述：
    ``` literallayout
    # ipa certprofile-mod smime --desc "New certificate profile description"
    ------------------------------------
    Modified Certificate Profile "smime"
    ------------------------------------
        Profile ID: smime
        Profile description: New certificate profile description
        Store issued certificates: TRUE
    ```
3.  在文本编辑器中打开您的客户证书配置文件并根据您的要求进行修改：
    ``` literallayout
    # vi smime.cfg
    ```
    [有关可以在证书配置文件配置文件中配置的选项的详情，请查看证书配置文件配置参数](#creating-and-managing-certificate-profiles-in-identity-management_working-with-idm-certificates.html#certificate-profile-configuration-parameters_creating-and-managing-certificate-profiles-in-identity-management "证书配置集配置参数"){.link}。
4.  更新现有证书配置集配置文件：
    ``` literallayout
    # ipa certprofile-mod _profile_ID_ --file=smime.cfg
    ```
:::
::: itemizedlist
**验证步骤**
-   验证证书配置集是否已更新：
    ``` literallayout
    $ ipa certprofile-show smime
      Profile ID: smime
      Profile description: New certificate profile description
      Store issued certificates: TRUE
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa(a)`{.literal} man page。
-   有关 `ipa certprofile-mod`{.literal} 命令的详情，请参考
    `ipa help certprofile-mod`{.literal} 命令。
:::
:::
::: section
::: titlepage
# []{#creating-and-managing-certificate-profiles-in-identity-management_working-with-idm-certificates.html#certificate-profile-configuration-parameters_creating-and-managing-certificate-profiles-in-identity-management}证书配置集配置参数 {.title}
:::
证书配置集配置参数保存在 CA 配置集目录
`/var/lib/pki/pki-tomcat/ca/profiles/ca`{.literal} 的
[*profile_name*]{.emphasis}.cfg
文件中。配置集的所有参数（默认值、输入、输出和限制）都在单个策略集中配置。为证书配置集设置的策略具有名称
`policyset.policyName.policyNumber.`{.literal}，例如，策略设置
`serverCertSet`{.literal} ：
``` literallayout
policyset.list=serverCertSet
policyset.serverCertSet.list=1,2,3,4,5,6,7,8
policyset.serverCertSet.1.constraint.class_id=subjectNameConstraintImpl
policyset.serverCertSet.1.constraint.name=Subject Name Constraint
policyset.serverCertSet.1.constraint.params.pattern=CN=[^,]+,.+
policyset.serverCertSet.1.constraint.params.accept=true
policyset.serverCertSet.1.default.class_id=subjectNameDefaultImpl
policyset.serverCertSet.1.default.name=Subject Name Default
policyset.serverCertSet.1.default.params.name=CN=$request.req_subject_name.cn$, OU=pki-ipa, O=IPA
policyset.serverCertSet.2.constraint.class_id=validityConstraintImpl
policyset.serverCertSet.2.constraint.name=Validity Constraint
policyset.serverCertSet.2.constraint.params.range=740
policyset.serverCertSet.2.constraint.params.notBeforeCheck=false
policyset.serverCertSet.2.constraint.params.notAfterCheck=false
policyset.serverCertSet.2.default.class_id=validityDefaultImpl
policyset.serverCertSet.2.default.name=Validity Default
policyset.serverCertSet.2.default.params.range=731
policyset.serverCertSet.2.default.params.startTime=0
```
每个策略集包含按照策略 ID
号为证书配置文件配置的策略列表，以它们的评估顺序排列。服务器评估为其收到的每个请求设置的每个策略。收到单个证书请求时，将评估一个集合，并忽略配置集中的任何其他集合。发出双密钥对后，第一个策略集针对第一个证书请求进行评估，第二个策略集针对第二个证书请求进行评估。在发行双密钥对时，在发布单个证书或多个集合时，您不需要多个策略集。
::: table
[]{#creating-and-managing-certificate-profiles-in-identity-management_working-with-idm-certificates.html#idm140131465360752}
**表 4.1. 证书配置集配置文件参数**
::: table-contents
+----------------------------------+----------------------------------+
| 参数                             | 描述                             |
+:=================================+:=================================+
| DESC                             | 证书配置文件的免费文             |
|                                  | 本描述，显示在端点页面中。例如： |
|                                  | `desc=This                       |
|                                  |  certificate profile is for enro |
|                                  | lling server certificates with a |
|                                  | gent authentication`{.literal}。 |
+----------------------------------+----------------------------------+
| 启用                             | 启用配置文件                     |
|                                  | ，使它可通过端点页面访问。例如： |
|                                  | `enable=true`{.literal}。        |
+----------------------------------+----------------------------------+
| auth.instance_id                 | 设置用于验证证                   |
|                                  | 书请求的身份验证管理器插件。要进 |
|                                  | 行自动注册，如果身份验证成功，CA |
|                                  | 会                               |
|                                  | 立即发出证书。如果身份验证失败或 |
|                                  | 者没有指定身份验证插件，则会将请 |
|                                  | 求排队，以供代理手动批准。例如： |
|                                  | `auth.instan                     |
|                                  | ce_id=AgentCertAuth`{.literal}。 |
+----------------------------------+----------------------------------+
| authz.acl                        | 指定授权约束。这主要用           |
|                                  | 于设置组评估访问控制列表(ACL)。  |
|                                  | 例如，`caCMCUserCert`{.literal}  |
|                                  | 参数要求 CMC 请求的签名者属于    |
|                                  | Certificate Manager Agents 组：  |
|                                  |                                  |
|                                  | `authz.acl=group="Certi          |
|                                  | ficate Manager Agents`{.literal} |
|                                  |                                  |
|                                  | 在基                             |
|                                  | 于目录的用户证书续订中，此选项用 |
|                                  | 于确保原始请求者和当前验证的用户 |
|                                  | 相同。在评估授权前，实体必须验证 |
|                                  | （二进制或本质上是登录到系统）。 |
+----------------------------------+----------------------------------+
| name                             | 证书配置文件的名称。例如：       |
|                                  | `name=Agen                       |
|                                  | t-Authenticated Server Certifica |
|                                  | te Enrollment`{.literal}。此名称 |
|                                  | 显示在最终用户注册或续订页面上。 |
+----------------------------------+----------------------------------+
| input.list                       | 按名称                           |
|                                  | 列出证书配置集允许的输入。例如： |
|                                  | `input.list=i1,i2`{.literal}。   |
+----------------------------------+----------------------------------+
| input.input_id.class_id          | 表示输入 ID（在 input.list       |
|                                  | 中列出的输入名称）的 java        |
|                                  | 类名称。例如：                   |
|                                  | `input.i1.class_                 |
|                                  | id=certReqInputImpl`{.literal}。 |
+----------------------------------+----------------------------------+
| output.list                      | 根据名称列出                     |
|                                  | 证书配置集的可能输出格式。例如： |
|                                  | `output.list=o1`{.literal}。     |
+----------------------------------+----------------------------------+
| output.output_id.class_id        | 在 output.list 中指定输出格式的  |
|                                  | java 类名称。例如：              |
|                                  | `output.o1.clas                  |
|                                  | s_id=certOutputImpl`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.list                   | 列出配置的证书配置集规则。对     |
|                                  | 于双证书，一组规则适用于签名密钥 |
|                                  | ，另一条适用于加密密钥。单个证书 |
|                                  | 仅使用一组证书配置集规则。例如： |
|                                  | `policyset                       |
|                                  | .list=serverCertSet`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.policyset_id.list      | 根据策略 ID                      |
|                                  | 号，按照评估的顺序为证书配置文   |
|                                  | 件配置的顺序列出策略集合。例如： |
|                                  | `policyset.serverCertSet.l       |
|                                  | ist=1,2,3,4,5,6,7,8`{.literal}。 |
+----------------------------------+----------------------------------+
| policyset.policyset_id.p         | 表                               |
| olicy_number.constraint.class_id | 示为配置集规则中配置的默认配置的 |
|                                  | java 类插件设置的 java           |
|                                  | 类名称。For example,             |
|                                  | policyse                         |
|                                  | t.serverCertSet.1.constraint.cla |
|                                  | ss_id=subjectNameConstraintImpl. |
+----------------------------------+----------------------------------+
| policyset.policyset_             | 提供用户定义的约                 |
| id.policy_number.constraint.name | 束名称。例如，policyset.serverC  |
|                                  | ertSet.1.constraint.name=Subject |
|                                  | Name Constraint。                |
+----------------------------------+----------------------------------+