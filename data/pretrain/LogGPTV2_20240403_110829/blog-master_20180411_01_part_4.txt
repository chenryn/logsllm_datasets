-- 手动垃圾回收时, 每轮回收周期后的一个休息时间, 主要防止垃圾回收太耗资源.                                                                                                        
-- 手动垃圾回收时, 每轮回收周期设多大限制, 限制由vacuum_cost_page_hit,vacuum_cost_page_missvacuum_cost_page_dirty参数以及周期内的操作决定.                                        
-- 是否开启自动垃圾回收                                                                                                                                                           
```                                                                                                                                                                        
PostgreSQL内核层面可以做到更加智能，比如有更好的GC调度策略，让系统的VACUUM FREEZE更加平滑，不会出现集中爆发的情况。    
## 流程附录
一、自动触发FREEZE流程  
1、 优先使用 表级参数判断是否需要强制AUTO FREEZE(prevent xid wrapped)  
2、 再使用 系统级参数判断是否需要强制AUTO FREEZE(prevent xid wrapped)  
3、 AUTO VACUUM FREEZE开始  
4、 跳过VM中标识为已FREEZE的PAGE  
5、 SLEEP 调度  
```  
autovacuum_vacuum_cost_delay = 0        # default vacuum cost delay for  
                                        # autovacuum, in milliseconds;  
                                        # -1 means use vacuum_cost_delay  
#autovacuum_vacuum_cost_limit = -1      # default vacuum cost limit for  
                                        # autovacuum, -1 means use  
                                        # vacuum_cost_limit  
```  
6、 年龄下降到（表级设定、系统级设定）  
二、手动触发FREEZE流程  
1、 判断当前表年龄是否已超出系统级FREEZE参数限制  
2、 vacuum FREEZE  
3、 跳过VM中标识为已FREEZE的PAGE  
4、 SLEEP 调度  
```  
vacuum_cost_delay = 0                   # 0-100 milliseconds  
#vacuum_cost_page_hit = 1               # 0-10000 credits  
#vacuum_cost_page_miss = 10             # 0-10000 credits  
#vacuum_cost_page_dirty = 20            # 0-10000 credits  
#vacuum_cost_limit = 200                # 1-10000 credits  
```  
5、 年龄下降到（表级设定、系统级设定）  
三、批量导入数据时，可以选择是否自动FREEZE  
https://www.postgresql.org/docs/devel/static/sql-copy.html  
```  
COPY table_name [ ( column_name [, ...] ) ]  
    FROM { 'filename' | PROGRAM 'command' | STDIN }  
    [ [ WITH ] ( option [, ...] ) ]  
COPY { table_name [ ( column_name [, ...] ) ] | ( query ) }  
    TO { 'filename' | PROGRAM 'command' | STDOUT }  
    [ [ WITH ] ( option [, ...] ) ]  
where option can be one of:  
    FORMAT format_name  
    OIDS [ boolean ]  
    FREEZE [ boolean ]           ## 就是它  
    DELIMITER 'delimiter_character'  
    NULL 'null_string'  
    HEADER [ boolean ]  
    QUOTE 'quote_character'  
    ESCAPE 'escape_character'  
    FORCE_QUOTE { ( column_name [, ...] ) | * }  
    FORCE_NOT_NULL ( column_name [, ...] )  
    FORCE_NULL ( column_name [, ...] )  
    ENCODING 'encoding_name'  
```  
## 参考    
[《PostgreSQL freeze 风暴导致的IOPS飙升 - 事后追溯》](../201801/20180117_03.md)      
[《PostgreSQL 9.6 vacuum freeze大幅性能提升 代码浅析》](../201610/20161002_03.md)      
[《PostgreSQL 大表自动 freeze 优化思路》](../201605/20160520_01.md)      
[《影响或控制PostgreSQL垃圾回收的参数或因素》](../201707/20170709_03.md)      
[《PostgreSQL物理"备库"的哪些操作或配置，可能影响"主库"的性能、垃圾回收、IO波动》](../201704/20170410_03.md)      
[《PostgreSQL 老湿机图解平安科技遇到的垃圾回收"坑"》](../201607/20160715_01.md)      
[《PostgreSQL垃圾回收代码分析 - why postgresql cann't reclaim tuple is HEAPTUPLE_RECENTLY_DEAD》](../201505/20150503_01.md)      
[《PostgreSQL 垃圾回收原理以及如何预防膨胀 - How to prevent object bloat in PostgreSQL》](../201504/20150429_02.md)      
https://www.postgresql.org/docs/devel/static/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND    
https://www.postgresql.org/docs/devel/static/runtime-config-client.html#GUC-VACUUM-FREEZE-TABLE-AGE    
https://www.postgresql.org/docs/devel/static/sql-createtable.html    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")