### Applet
Applet supports the definition of an organizational model, enabling the specification of participants and roles. Bonita implements the Workflow Management Coalition's XPDL (XML Process Definition Language).

### Enhydra Shark
Enhydra Shark, developed by the Enhydra.org community in 2003, is an extendable and embeddable Java workflow engine framework that fully adheres to WfMC specifications [8]. It can be used as a simple Java library in a servlet, a Swing application, or within a J2EE container. The current version, 2.3, was released in November 2008.

#### 1. WfMC Reference Model
Enhydra Shark is fully compliant with the WfMC reference model.

#### 2. Runtime Perspective
- **Installation and Testing:** Installation and testing took 6 hours and 11 minutes.
- **Documentation:** The provided documentation is straightforward, facilitating a relatively simple installation process.
- **Administration Tool:** A commercial administration tool is recommended for proper management, but this is not mentioned in the documentation, and the tool is not available for download on the projectâ€™s homepage.
- **Web-Based Environment:** No web-based environment is offered.
- **User Interface:** The administration/client application is user-friendly, making testing easy.
- **Middleware Platform:** Shark operates on a middleware platform (CORBA).
- **Database Integration:** It provides easy integration with most database management systems and offers mechanisms for exception handling during process execution.

#### 3. Design Time Perspective
- **Process Definition:** Defining a sample workflow process took 2 hours and 24 minutes.
- **Documentation:** The documentation for the workflow process editor is comprehensive.
- **Graphical Editor:** By default, it provides a graphical editor similar to JPEd (used with WfMOpen) called Together Workflow Editor (TWE), which is practical and easy to use.
- **Organizational Perspective:** TWE supports the design of the organizational perspective.
- **Workflow Language:** The workflow language used is XPDL.

### JawFlow
JawFlow, developed by Vincenzo Marchese in October 2006, is currently at version 3.0. It is a workflow engine partially conforming to WfMC directives and written entirely in Java. Customization is possible using activities written in Java or any scripting language supported by the Bean Scripting Framework [9]. For deployment, testing, and running, we used the JBoss application server, though there are no code dependencies on JBoss.

#### 1. WfMC Reference Model
- **Embedded Administration:** Offers embedded administration (interface 5) and client application (interface 2).
- **Process Definition Application:** Does not provide a process definition application (interface 1).
- **Interactions:** Lacks interfaces to invoke other applications (interface 3) or interact with other workflow enactment services (interface 4).

#### 2. Runtime Perspective
- **Installation and Testing:** Installation and testing took 8 hours and 15 minutes.
- **Documentation:** The provided documentation is very limited, making the installation process complex.
- **Environment:** The process administration environment is web-based and relatively easy to use.
- **Requirements:** Requires JDK 1.5, Jakarta ant, JBoss, and a DBMS.
- **Middleware Platform:** Operates on a middleware platform (Java RMI and CORBA).
- **Database Integration:** Can be integrated with any database management system and offers error handling mechanisms during workflow execution.

#### 3. Design Time Perspective
- **Process Editor:** Does not provide a process editor; any editor supporting XPDL can be used (e.g., JPEd used with WfMOpen).
- **Results:** The results presented in Table 2 are identical to those described in the WfMOpen design perspective.

### JBoss jBPM
JBoss jBPM is a flexible and extensible workflow management system. Its core component is a plain Java software for managing process definitions and a runtime environment for executing process instances [10]. The latest release is version 3.2.3.

#### 1. WfMC Reference Model
- **Client Application:** Offers an administration/client application.
- **Interactions:** Can interact with other applications but not with other workflow engines.
- **Process Definition Application:** Provides a process definition application.

#### 2. Runtime Perspective
- **Installation and Testing:** Installation and testing took 1 hour and 9 minutes.
- **Documentation:** Comprehensive documentation made the installation and usage straightforward.
- **Web-Based Application:** The web-based administration/client application is feature-poor, necessitating the creation of a customized client and administration application.
- **Requirements:** Requires JDK and Eclipse with JBoss IDE plugins.
- **Middleware Platform:** Operates on a middleware platform (Java RMI or CORBA).
- **Database Integration:** Offers mechanisms for portability across popular databases and supports transaction management, including exception handling and rollback during process execution.

#### 3. Design Time Perspective
- **Process Definition:** Defining a sample workflow process using the Eclipse-based BPEL tooling took 2 hours and 45 minutes.
- **Documentation:** Lack of documentation for the process editor made the process definition difficult.
- **Decision Building Block:** The XOR-split decision block had to be implemented directly in the code.
- **Subprocess Support:** Subprocesses are not supported, leading to complex and hard-to-analyze workflow diagrams.
- **Editor Features:** Supports the specification of the organizational perspective and uses two process definition languages: jPDL and BPEL.
  - **jPDL:** A process language for implementing business processes and workflows in Java.
  - **BPEL:** Provides process orchestration, combining web services into a process execution flow.

### JFolder
JFolder (also known as PowerFolder), developed by Gary Steinmetz in 2004, is currently at version 1.1. It is a business application development studio and server that uses an XML-based language to define workflow processes within a J2EE environment. Development and administration occur through a web browser. JFolder includes features such as security, persistence, email, file management, and data access [11].

#### 1. WfMC Reference Model
- **Tools:** Offers administration and monitoring tools and a workflow client application.
- **Interactions:** Cannot interact with other applications or workflow engines.
- **Process Definition Application:** Provides a process definition application.

#### 2. Runtime Perspective
- **Installation and Testing:** Installation and testing took 1 hour and 25 minutes.
- **Documentation:** Sufficient documentation allowed for a smooth installation.
- **Web-Based Environment:** The web-based administration environment is confusing and unattractive.
- **Requirements:** Requires J2EE, Jakarta Ant, and JBoss.
- **Middleware Platform:** Operates on a middleware platform.
- **Database Integration:** Documentation does not specify if integration with other DBMSs (besides hsqldb) is possible.
- **Error Handling:** Offers mechanisms for error handling during workflow execution.

#### 3. Design Time Perspective
- **Process Definition:** Designing a sample workflow process took 4 hours and 25 minutes.
- **Documentation:** Limited documentation for the editor.
- **Editor Features:** Provides a very limited web-based process editor that is not based on a "drag and drop" concept, making it difficult to add or edit elements.
- **Saving Mechanism:** No automated mechanism to save the process definition.
- **Organizational Perspective:** Does not support the definition of roles and participants.
- **Language:** Uses a proprietary XML-based language that does not support subprocesses.

### JOpera
JOpera is a collection of plugins for Eclipse, designed as a service composition tool with a visual language and an execution platform for building workflow processes. It includes a graphical modeling environment, a lightweight execution engine, and debugging tools. JOpera has a wide range of applications, from rapid development of service-oriented business applications to classical workflow management and business process automation [12]. The latest release is JOpera plugin for Eclipse 1.9.11.

#### 1. WfMC Reference Model
- **Tools:** Offers administration and monitoring tools.
- **Interactions:** Can interact with other applications.
- **Process Definition Application:** Provides a process definition application.

#### 2. Runtime Perspective
- **Development Purpose:** Developed for research purposes.
- **Installation and Testing:** Installation and testing took 1 hour and 56 minutes.
- **Documentation:** Comprehensive documentation facilitated a smooth installation.
- **Environment:** The Eclipse-based environment is not practical or user-friendly.
- **Requirements:** Requires Java JDK and Eclipse.
- **Database Integration:** Integrates with popular DBMSs and supports simple exception handling.

#### 3. Design Time Perspective
- **Process Definition:** Defining a sample workflow process took 2 hours and 26 minutes.
- **Documentation:** Adequate documentation for the graphical editor.
- **Editor Features:** The process editor is repetitive, making the definition of the sample process longer.
- **Clarity:** Processes quickly become confusing, making it difficult to analyze task transitions.
- **Organizational Perspective:** Does not support the organizational perspective.
- **Language:** Uses JOpera visual composition language.

### OpenWFE
OpenWFE, developed by Lukas Eder and Nicolas Modryzk, is an open-source workflow engine. It is a complete Business Process Management suite with four components: an engine, a worklist, a client application, and a host for automatic agents. Written in Java, it also features access libraries for Python, Perl, Ruby, C# (.NET), PHP, and Pnuts [13]. OpenWFE is based on a distributed and web-friendly infrastructure, offering mechanisms for persistence, automated form generation, and workflow administration. The latest release, OpenWFE 1.7.2, was in November 2006.

#### 1. WfMC Reference Model
- **Compliance:** Fully compliant with the WfMC reference model.

#### 2. Runtime Perspective
- **Installation and Testing:** Installation and testing took only 22 minutes, thanks to its intuitive and user-friendly environment.
- **Documentation:** Comprehensive documentation facilitated a smooth installation, though it primarily describes installation for Linux.
- **Web-Based Tools:** The web-based administration tool and client application are user-friendly and simple to use.
- **Requirements:** Requires JDK and JRE.
- **Middleware Platform:** Operates on a middleware platform (Java RMI).
- **Database Integration:** Integrates with major database systems and supports effective transaction management, including exception handling and rollback.

#### 3. Design Time Perspective
- **Process Definition:** Defining a sample workflow process took 5 hours and 15 minutes.
- **Language:** Uses its own XML-based language for designing workflow processes.
- **Documentation:** Limited documentation for the process editor.
- **Editor Features:** Droflo, the web-based process editor, is very limited and not based on a "drag and drop" concept, making it difficult to add or edit elements.
- **Saving Mechanism:** Users must manually copy and paste the generated XML code to save it, as the editor lacks this functionality.
- **Usability:** The editor is impractical, often making it easier to define the workflow process directly in XML.
- **Organizational Perspective:** Supports the definition of the organizational perspective.

### RUNA WFE
RUNA WFE, released by the Runa Consulting Group, is an open-source workflow/business process management environment for the jBoss jBPM engine. It is an end-user solution for business process management, written in Java, providing a rich web interface with a work list handler, a process monitor, and a form player. It also supports interaction with external applications [14]. The latest update is RUNA WFE 2.2 (November 2008).

#### 1. WfMC Reference Model
- **Client Application:** Offers an administration/workflow client application.
- **Interactions:** Supports interaction with other applications but not with other workflow engines.
- **Process Definition Application:** Provides a process definition application.