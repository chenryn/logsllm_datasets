Quality Metrics for
Business Process Models
Irene Vanderfeesten1, Jorge Cardoso2, Jan
Mendling3, Hajo A. Reijers1, Wil van der Aalst1
1 Technische Universiteit Eindhoven, The Netherlands; 2 University of Madeira, Por-
tugal; 3 Vienna University of Economics and Business, Austria.
SUMMARY
In the area of software engineering, quality metrics have shown their importance for
good programming practices and software designs. A design developed by the help
of these metrics (e.g. coupling, cohesion, complexity, modularity and size) as guid-
ing principals is likely to be less error-prone, easy to understand, maintain, and
manage, and is more efficient. Several researchers already identified similarities
between software programs and business process designs and recognized the po-
tential of quality metrics in business process management (Cardoso, Mendling,
Neuman & Reijers, 2006; Gruhn & Laue, 2006; Latva-Koivisto, 2001). This chapter
elaborates on the importance of quality metrics for business process modeling. It
presents a classification and an overview of current business process metrics and it
gives an example of the implementation of these metrics using the ProM tool. ProM
is an analysis tool, freely available, that can be used to study process models im-
plemented in more than eight languages.
INTRODUCTION
Key in many instances of innovation is the transfer of information and understand-
ing developed in one discipline to the other (Kostoff, 1999). A prime example is
workflow management itself, a technology based on the importation of process
models from manufacturing operations into administrative work. In this chapter we
embark on further opportunities for knowledge transfer to the field of process mod-
eling and workflow management, in particular from software engineering.
In the mid-1960’s software engineers started to use metrics to characterize the
properties of their code. Simple count metrics were designed to be applied to pro-
grams written in languages such as C++, Java, FORTRAN, etc. Various of these
metrics provided a good analysis mechanism to assess the quality of the software
program design. Since there is a strong analogy between software programs and
business processes, as previously argued in (Reijers & Vanderfeesten, 2004; Guce-
glioglu & Demiros, 2005), we believe that software metrics, such as coupling, cohe-
sion, and complexity, can be revised and adapted to analyze and study a business
process' characteristics.
A business process model, regardless whether it is modeled in e.g. BPEL, EPC,
BPMN or Petri Nets, exhibits many similarities with traditional software programs.
A software program is usually partitioned into modules or functions (i.e. activities),
which take in a group of inputs and provide some output. Similar to this composi-
tional structure, a business process model consists of activities, each of which con-
tains smaller steps (operations) on elementary data elements (see Table 1). More-
over, just like the interactions between modules and functions in a software pro-
1
QUALITY METRICS FOR BUSINESS PROCESS MODELS
gram are precisely specified, the order of activity execution in a process model is
predefined using logic operators such as sequence, splits and joins.
In this chapter we elaborate on the transfer and adaptation of quality metrics from
the software engineering domain to business processes. First, we introduce a gen-
eral outline on software engineering metrics. Next, an overview is given of the cur-
rent status in business process metrics, adopting a widely used classification from
software engineering. Finally, we elaborate on some practical applications of these
business process metrics and present our conclusions and a look into the future of
business process metrics.
Table 1: Similarities between software programs and business processes
Software program Business process
Module/Class Activity
Method/Function Operation
Variable/Constant Data element
METRICS IN THE SOFTWARE ENGINEERING DOMAIN
In the area of software engineering a wide variety of software quality metrics has
been developed. The main purpose of software quality metrics is to obtain program
designs that are better structured. Some of the most important advantages of a
structured design are, as pointed out in (Conte, Dunsmore & Shen, 1986), that (i)
the overall program logic is easier to understand for both the programmers and the
users and (ii) the identification of the modules is easier, since different functions are
performed by different modules, which makes the maintenance of the software pro-
gram easier. According to (Conte, Dunsmore & Shen, 1986; Shepperd 1993; Troy &
Zweben 1981) the quality of a design is related to five design principles:
Coupling—Coupling is measured by the number of interconnections among mod-
ules. Coupling is a measure for the strength of association established by the
interconnections from one module of a design to another. The degree of cou-
pling depends on how complicated the connections are and on the type of con-
nections. It is hypothesized that programs with a high coupling will contain
more errors than programs with lower coupling.
Cohesion—Cohesion is a measure of the relationships of the elements within a
module. It is also called module strength. It is hypothesized that programs with
low cohesion will contain more errors than programs with higher cohesion.
Complexity—A design should be as simple as possible. Design complexity grows
as the number of control constructs grows, and also as the size—in number of
modules—grows. The hypothesis is that the higher the design complexity the
more errors the design will contain.
Modularity—The degree of modularization affects the quality of a design. Over-
modularization is as undesirable as under-modularization. The hypothesis is
that low modularity generally relates to more errors than higher modularity.
Size—A design that exhibits large modules or a deep nesting is considered unde-
sirable. It is hypothesized that programs of large size will contain more errors
than smaller programs.
In literature coupling and cohesion are generally considered to be the most impor-
tant metrics for software quality, although researchers do not agree on their relative
importance. In (Shepperd 1993; Troy & Zweben 1981), results of analyses are pre-
sented that indicate that coupling is the most influential of the design principles
under consideration. However, in (Myers, 1978) cohesion and coupling are consid-
2
QUALITY METRICS FOR BUSINESS PROCESS MODELS
ered as equally important. Also, complexity and size are seen as a good quality met-
ric for software program designs (Troy & Zweben, 1981).
In addition, various researchers carried out studies to gather empirical evidence
that quality metrics do indeed improve the quality of a software design. Bieman and
Kang, in particular, have shown examples how cohesion metrics can be used to
restructure a software design (Bieman & Kang, 1998; Kang & Bieman, 1996; Kang
& Bieman 1999). Also, in (Selby & Basili, 1991) evidence is presented that low cou-
pling and high strength (cohesion) are desirable. By calculating coupling/strength
ratios of a number of routines in a software library tool it was found that routines
with low coupling/strength ration had significantly more errors than routines with
high coupling/strength ratio. In (Card, Church & Agresti, 1986), a number of For-
tran modules from a National Aeronautics and Space Administration project were
examined. Fifty percent of the high strength (high cohesion) modules were fault
free, whereas only 18 percent of low strength modules were fault free. No relation-
ship was observed between fault rate and coupling in this study. Finally, (Shen, Yu,
Thebaut & Paulsen, 1985) have discovered that, based on their analysis of three
software program products and their error histories, simple metrics such as the
amount of data (size) and the structural complexity of programs may be useful in
identifying those modules most likely to contain errors.
QUALITY METRICS IN THE WORKFLOW DOMAIN
Because of the similarities between software programs and workflow processes,
explained in the introduction, the application of similar quality metrics to the work-
flow field is worth investigation. We have conducted a literature review on business
process metrics and found that, despite the vast literature on software engineering
metrics, there is not much research on business process metrics available yet. Al-
though some researchers suggest using software metrics to evaluate business proc-
ess designs (Baresi et al, 1999), the number of publications on concrete metrics and
applications in the business process domain is still small and only of a very recent
date. In this section, the existing "state-of-the-art" in business process metrics is
summarized using the same classification as in software engineering.
Coupling
Coupling measures the number of interconnections among the modules of the
model. As such, it is highly related to degree and density metrics in (social) network
analysis (see e.g. Brandes and Erlebach, 2005). The application of these measure-
ments is straight forward if the process model is available in a graph-based nota-
tion. The average degree, also called coefficient of connectivity in (Latva-Koivisto,
2001), refers to the average number of connections that a node has with other
nodes of the process graph. In contrast to that, the density metric relates the num-
ber of available connections to the number of maximum connections for the given
number of nodes. The density metric was used in a survey as a predictor for errors
in business process models in (Mendling, 2006) with some mixed results. While
there was actually a connection between density and errors, the explanatory power
of this metric was found to be limited. An explanation for that might be that density
is difficult to compare for models of different size since the maximum number of
connections grows quadratic. It appears that the average degree of nodes in a busi-
ness process could be better suited to serve as a quality metric.
Moreover, Reijers and Vanderfeesten (Reijers & Vanderfeesten, 2004) also developed
a similar coupling metric counting the overlap of data elements for each pair of ac-
tivities using a static description of the product represented by a Product Data
Model (PDM) (van der Aalst, 1999; Reijers, 2003; Reijers, Limam Mansar, & van der
3
QUALITY METRICS FOR BUSINESS PROCESS MODELS
Aalst, 2003). Two activities are 'coupled' if they contain one or more common data
elements. To calculate the coupling value for a business process the activities are
selected pairwise and the number of 'coupled' pairs is counted. Finally, the mean is
determined based on the total number of activities. The outcome always lies be-
tween 0 and 1. This data oriented coupling metric is complemented with a cohesion
metric, which is described in the next section.
However, all of these coupling metrics do not yet deal with how complicated the
connections are as suggested in the definition of coupling. A weighted coupling met-
ric, with different weights for the XOR, OR, and AND connectors, is part of our cur-
rent research.
Cohesion
Cohesion measures the coherence within the parts of the model. So far, there is
only one paper on a cohesion metric for business processes available. Reijers and
Vanderfeesten (Reijers & Vanderfeesten, 2004) developed a cohesion metric for
workflow processes which looks at the coherence within the activities of the process
model. Similar to their coupling metric this cohesion metric also focuses on the in-
formation processing in the process and takes a data oriented view. For each activ-
ity in the process model the total cohesion is calculated by multiplying the informa-
tion cohesion and the relation cohesion of the activity. Finally, a cohesion value for
the whole process is determined by taking the mean of all activity cohesion values
(i.e. adding up all cohesion values and dividing it by the number of activities). The
value for this cohesion metric always lies between 0 and 1. This data oriented cohe-
sion metric is complemented with a coupling metric, which is described in the pre-
vious section. The combination of these two metrics, as proposed by (Selby & Basili,
1991), gives a coupling-cohesion ratio which supports the business process de-
signer to select the best (low coupling, high cohesion) design among several alterna-
tives (Reijers & Vanderfeesten, 2004).
Complexity
Complexity measures the simpleness and understandability of a design. In this