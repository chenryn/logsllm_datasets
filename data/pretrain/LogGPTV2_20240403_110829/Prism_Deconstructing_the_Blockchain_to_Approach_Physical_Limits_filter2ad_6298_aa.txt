title:Prism: Deconstructing the Blockchain to Approach Physical Limits
author:Vivek Kumar Bagaria and
Sreeram Kannan and
David Tse and
Giulia C. Fanti and
Pramod Viswanath
Prism: Deconstructing the Blockchain
to Approach Physical Limits
Vivek Bagaria
PI:EMAIL
Stanford University
Sreeram Kannan
PI:EMAIL
University of Washington at Seattle
David Tse
PI:EMAIL
Stanford University
9
1
0
2
t
c
O
2
]
R
C
.
s
c
[
4
v
2
9
0
8
0
.
0
1
8
1
:
v
i
X
r
a
Giulia Fanti
PI:EMAIL
Carnegie Mellon University
Pramod Viswanath
PI:EMAIL
University of Illinois at
Urbana-Champaign
ABSTRACT
The concept of a blockchain was invented by Satoshi Nakamoto to
maintain a distributed ledger. In addition to its security, important
performance measures of a blockchain protocol are its transaction
throughput and confirmation latency. In a decentralized setting,
these measures are limited by two underlying physical network
attributes: communication capacity and speed-of-light propaga-
tion delay. In this work we introduce Prism, a new proof-of-work
blockchain protocol, which can achieve 1) security against up to
50% adversarial hashing power; 2) optimal throughput up to the
capacity C of the network; 3) confirmation latency for honest trans-
actions proportional to the propagation delay D, with confirmation
error probability exponentially small in the bandwidth-delay prod-
uct CD; 4) eventual total ordering of all transactions. Our approach
to the design of this protocol is based on deconstructing Nakamoto’s
blockchain into its basic functionalities and systematically scaling
up these functionalities to approach their physical limits.
1 INTRODUCTION
In 2008, Satoshi Nakamoto invented the concept of a blockchain,
a mechanism to maintain a distributed ledger in a permissionless
setting. Honest nodes mine blocks on top of each other by solving
Proof-of-Work (PoW) cryptographic puzzles; by following a longest
chain protocol, they can come to consensus on a transaction ledger
that is difficult for an adversary to alter. Since then, many other
blockchain protocols have been invented.
1.1 Performance measures
The fundamental performance measures of a PoW blockchain pro-
tocol are:
(1) the fraction β of hashing power the adversary can control with-
out compromising system security, assuming the rest of the
nodes follow protocol;
(2) the throughput λ, number of transactions confirmed per second;
(3) the confirmation latency, τ, in seconds, for a given probability
ε that a confirmed transaction will be removed from the ledger
in the future.
For example, Bitcoin is secure against an adversary holding up to
50% of the total network hash power (β = 0.5), has throughput λ
of a few transactions per seconds and confirmation latency of the
order of tens of minutes to hours. There is a tradeoff between the
confirmation latency and the confirmation error probability: the
smaller the desired confirmation error probability, the longer the
needed latency is in Bitcoin. For example, Nakamoto’s calculations
[16] show that for β = 0.3, while it takes a latency of 6 blocks (on
the average, 60 minutes) to achieve an error probability of 0.15, it
takes a latency of 30 blocks (on the average, 300 minutes) to achieve
an error probability of 10−4.
1.2 Physical limits
Bitcoin has strong security guarantees but its throughput and la-
tency performance are poor. In the past decade, much effort has
been expended to improve the performance in these metrics. But
what are the fundamental bounds that limit the performance of any
blockchain protocol?
Blockchains are protocols that run on a distributed set of nodes
connected by a physical network. As such, their performance is
limited by the attributes of the underlying network. The two most
important attributes are C, the communication capacity of the net-
work, and D, the speed-of-light propagation delay across the net-
work. Propagation delay D is measured in seconds and the capacity
C is measured in transactions per second. Nodes participating in a
blockchain network need to communicate information with each
other to reach consensus; the capacity C and the propagation de-
lay D limit the rate and speed at which such information can be
communicated. These parameters encapsulate the effects of both
fundamental network properties (e.g., hardware, topology), as well
as resources consumed by the network’s relaying mechanism, such
as validity checking of transactions or blocks. 1 Assuming that
each transaction needs to be communicated at least once across the
network, it holds that λ, the number of transactions which can be
confirmed per second, is at most C, i.e.
λ  D.
(2)
Another less obvious constraint on the confirmation latency comes
from the network capacity and the reliability requirement ε. Indeed,
if the confirmation latency is τ and the block size is Bv transactions,
then at most C/Bv · τ mined blocks can be communicated across
1We define confirmation formally in Section 2, but informally, we say a node ε-confirms
a transaction if, upon successfully evaluating a confirmation rule under parameter ε,
the transaction has a probability of at most ε of being reverted by any adversary.
the network during the confirmation period for a given transaction.
These mined blocks can be interpreted as confirmation votes for a
particular transaction during this period; i.e. votes are communi-
cated at rate C/Bv and Cτ/Bv votes are accumulated over duration
τ. (The parameter Bv can be interpreted as the minimum block
size to convey a vote.) On average, a fraction β < 0.5 of these
blocks are adversarial, but due to the randomness in the mining
process, there is a probability, exponentially small in Cτ/Bv, that
there are more adversarial blocks than honest blocks; if this hap-
pens, confirmation cannot be guaranteed. Hence, this probability
is a lower bound on the achievable confirmation error probability,
i.e. ε = exp(−O(Cτ/Bv)). Turning this equation around, we have
the following lower bound on the latency for a given confirmation
probability ε:
τ = Ω
.
(3)
(cid:18) Bv
C
(cid:19)
· log 1
ε
Comparing the two constraints, we see that if
≫ log 1
,
ε
CD
Bv
the latency is limited by the propagation delay; otherwise, it is
limited by the confirmation reliability requirement. The quantity
CD/Bv is analogous to the key notion of bandwidth-delay product
in networking (see eg. [10]); it is the number of “in-flight" votes in
the network.
To evaluate existing blockchain systems with respect to these
limits, consider a global network with communication links of
capacity 20 Mbits/second and speed-of-light propagation delay D
of 1 second. If we take a vote block of size 100 bytes, then the
bandwidth-delay product CD/Bv = 25000 is very large. Hence,
the confirmation latency is limited by the propagation delay of 1
seconds, but not by the confirmation reliability requirement unless
it is astronomically small. Real-world blockchains operate far from
these physical network limits. Bitcoin, for example, has λ of the order
of 10 transactions per second, τ of the order of minutes to hours,
and is limited by the confirmation reliability requirement rather
than the propagation delay. Ethereum has λ ≈ 15 transactions per
second and τ ≈ 3 minutes to achieve an error probability of 0.04
for β = 0.3 [4].
1.3 Main contribution
The main contribution of this work is a new blockchain protocol,
Prism, which, in the face of any powerful adversary2 with power
β < 0.5, can simultaneously achieve:
(1) Security: (Theorem 4.3) a total ordering of the transactions,
with consistency and liveness guarantees.
(2) Throughput: (Theorem 4.4) a throughput
(cid:26)
λ = 0.9(1 − β)C transactions per second.
(4)
(3) Latency: (Theorem 4.8) confirmation of all honest transactions
(without public double spends) with an expected latency of
E[τ] < max
c1(β)D, c2(β) Bv
C
(5)
with confirmation reliability at least 1− ε (Figure 1). Here, c1(β)
and c2(β) are constants depending only on β
seconds,
ε
log 1
(cid:27)
Figure 1: Confirmation latency vs. security parameter for
Prism . The latency of Prism is independent of the security pa-
rameter value up to order CD/Bv and increases very slowly
after that (with slope Bv/C). For Bitcoin , latency increases
much more rapidly with the security parameter, with slope
proportional to D. (Since CD/Bv ≫ 1, this latter slope is
much larger.)
Notice that the worst-case optimal throughput of any protocol
with 1 − β fraction of hash power is (1 − β)C transactions/second,
assuming each transaction needs to be communicated across the
network. Hence, Prism’s throughput is near-optimal. At the same
time, Prism achieves a confirmation latency for honest transactions
matching the two physical limits (2) and (3). In particular, if the de-
ε ≪ CD/Bv, the confirmation latency
sired security parameter log 1
is of the order of the propagation delay and independent of log 1/ε.
Put another way, one can achieve latency close to the propagation
delay with a confirmation error probability exponentially small
in the bandwidth-delay product CD/Bv. Note that the latency is
worst-case over all adversarial strategies but averaged over the
randomness in the mining process.
To the best of our knowledge, no other existing PoW protocol has
guaranteed performance which can match that of Prism. Two novel
ideas which enable this performance are 1) a total decoupling of
transaction proposing, validation and confirmation functionalities
in the blockchain, allowing performance scaling; 2) the concept of
confirming a list of possible ledgers rather than a unique ledger,
enabling honest non-double-spend transactions to be confirmed
quickly3.
1.4 Performance of existing PoW protocols
High forking protocols. Increasing the mining rate in Bitcoin
can decrease latency and improve throughput, however, this comes
at the expense of decreased security [25]. Thus, unlike Prism, the
throughput and latency of Bitcoin is security-limited rather than
communication-limited. To increase the mining rate while maintain-
ing security, one line of work (GHOST [25], Inclusive [14], Spectre
[23], Phantom [24], Conflux [15]) in the literature has used more