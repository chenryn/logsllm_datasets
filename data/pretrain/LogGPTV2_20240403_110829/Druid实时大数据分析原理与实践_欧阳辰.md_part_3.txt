7.3地理查询（GeographicQuery）
7.2
7.1近似直方图（Approximate Histogram）
6.2组件
6.10小结
6.9
19
6.3
数据Sketch
7.3.5地理查询小结
7.3.4边界条件（BoundaryCondition）
7.3.1基本原理
7.1.4近似直方图小结
7.1.1分位数和直方图
元数据查询
Select
GroupBy
Timeseries
案例介绍
6.2.6Context
6.2.5
6.2.4
6.2.3
6.2.2
6.2.1
7.3.3
7.3.2
7.2.2
7.2.1
7.1.3
7.1.2
Search
TopN
空间索引（Spatial Indexing）
DataSketch Post-Aggregator
Aggregator
DataSketch Aggregator
Interval
Filter
空间过滤（SpatialFilter）
如何使用
实现原理
Search Query
Post-Aggregator
.....
目录
1112
L
3
19
3
5
6
3
---
## Page 22
第8章
目录
8.1
7.8小结
7.7最佳实践
7.6 Supervisor API
7.5Kafka索引服务
7.4Router
8.6
8.5
188
8.2
8.6.1
Query模块
Segment
7.7.3
7.7.2
7.7.1
7.6.7
7.6.6
7.6.5
7.6.4
7.6.3
7.6.2
7.6.1创建 Supervisor
7.5.3
7.5.2
7.5.1
7.4.4
7.4.2
7.4.1Router 概览
Column结构
索引结构模块和层次关系
Druid项目介绍
如何编译Druid代码
7.4.3
核心源代码探析
基础组件
Schema的配置与变更
Supervisor的持久化
容量规划
设计背景
路由策略
获取所有Supervisor的历史
获取Supervisor的状态报告
获取当前执行的Supervisor
关闭Supervisor
如何使用
实现
配置
路由规则
15
1
6
100
189
8
1.5
1.5
12
#
---
## Page 23
第10章
第9章
Xxi
10.3腾讯
10.2优酷土豆
10.1
9.4
9.3
9.2Druid告警
10.4
9.1
8.8
8.7
10.5
10.2.1需求分析
10.1.2
9.3.2
9.3.1
Druid安全
9.2.2
9.2.1
9.1.2
9.1.1
Druid监控
小结
Coordinator模块
8.6.4查询引擎
10.3.2
10.3.1
10.2.3
10.2.2
10.1.1
小结
8.6.3
8.6.2
小结
蓝海讯通
小米
实践和应用.....
Druid与利用Kerberos加强安全认证的系统集成
场景二：广告平台实时数据分析
Druid告警信息
业务实践
技术选型及工程实践
集成外部权限模块完成用户授权
Druid与告警系统的集成
常用的监控方法
Druid监控指标
查询流程概览
内存池管理
工程实践
优化策略
场景一：小米统计服务
257
目录
99
19
33
15
15.3
5
130
238
238
288
1
100
---
## Page 24
附录B
附录A
第11章
目录
11.1Druid生态系统
参考资料
11.4Druid展望
11.3Druid的社区讨论组
11.2Druid生态系统资源
常见问题（FAQ）
11.2.6 Caravel（Airbnb）
11.2.5Druid-Metrics-Kafka
11.2.4
11.2.2
11.2.1IAP
11.2.3
常用参数表.
Druid 生态与展望．
Pivot
PlyQL
Plywood
312
3
3
00
285
xxii
---
## Page 25
增长到TB级别，很多图像应用领域已经开始处理PB级别的数据分析。大数据的核心目标
1.2大数据分析和Druid
库连接池的项目。阿里Druid和本书讨论的Druid没有任何关系，它们解决完全不同的问题。
年以来，Druid一直是非常活跃的开源项目。
比传统的OLAP系统有了显著的性能改进，而且拥抱主流的开源生态，包括Hadoop等。多
目。Druid设计之初的想法就是为分析而生，它在处理数据的规模、数据处理的实时性方面
告技术公司MetaMarkets于2011年创建了Druid项目，并且于2012年晚期开源了Druid项
常有战斗力的人物，法术出色。
是执法者、吟游诗人和探险家的代名词。在著名游戏《暗黑破坏神》中，Druid也是一个非
通占卜，对祭祀礼仪一丝不苟，也擅长于天文历法、医药、天文和文学等。同时，Druid也
1.1Druid是什么
本书介绍的 Druid是一个分布式的支持实时分析的数据存储系统（Data Store）。美国广
大数据一直是近年的热点话题，随着数据量的急速增长，数据处理的规模也从GB级别
另外，阿里巴巴也曾创建过一个开源项目叫作Druid（简称阿里Druid），它是一个数据
Druid的官方网站是http://druid.io。
Druid单词来源于西方古罗马的神话人物，中文常常翻译成德鲁伊。传说Druid教士精
初识Druid
第
---
## Page 26
所示。
交互方案。其中，涉及新软件的引人、数据流的改进等。数据分析的几种常见方法如图1-1
长时间才能完成，无法满足很多数据分析师所期望的秒级返回查询结果的分析需求。
处理实时性经常是它的弱点。例如，很多时候一个MapReduce脚本的执行，很难估计需要多
可控的软硬件成本处理更大的数据量。Hadoop设计之初就是为了批量处理大数据，但数据
据库为基础的数据平台，转移到一些开源生态的大数据平台，例如 Hadoop或Spark平台，以
中的核心技术，包括数据收集、处理、建模和分析，最后找到改进业务的方案。
是提升业务的竞争力，找到一些可以采取行动的洞察（ActionableInsight），数据分析就是其
为了解决数据实时性的问题，大部分公司都有一个经历，将数据分析变成更加实时的可
最近一两年，随着大数据分析需求的爆炸性增长，很多公司都经历过将以关系型商用数
（5）将数据源进行流式处理，对接分析数据库，例如Druid、Vertica等。
（4）将数据源进行流式处理，对接流式计算框架，如Storm，结果落在RDBMS/NoSQL中。
（3）将结果注入到容量更大的NoSQL中，例如HBase等。
（2）将Hadoop/Spark的结果注人RDBMS中提供实时分析。
（1）使用Hadoop/Spark的MR分析。
整个数据分析的基础架构通常分为以下几类。
Kafka
Hadoop/MR
Hadoop/MR
图1-1
数据分析的几种常见方法
Storm
Hadoop/MR
RDBMS/NoSQL
NoSQL/HBase
Dud
RDBMS
Druid实时大数据分析原理与实践
洞察
---
## Page 27
他的数据库，例如 MySQL、InfoBright和 PostgresSQL，但是情况并没有任何明显改善。
提高系统的使用性能。为了解决第一个问题，开发人员也尝试优化数据库的性能，或采用其
确实是致命的。开发人员不得不通过一些预先计算（Pre-Caculate）或者缓存（Cache）机制，
器上，机型为M1.Large.EC2Box。采用这种方式后，发现以下两个明显的问题。
第一阶段，基于RDBMS的查询分析。
阶段的努力后，最终决定自主开发Druid系统来满足业务需求。
告平台的核心竞争力。
需要根据数据和算法决定对广告流量进行出价。在整个过程中，数据处理和分析能力就是广
在广告程序化交易模式下，广告流量将会发送到多个广告平台（AdNetwork）或DSP，DSP
Druid就是MetaMarkets的核心数据处理平台，能够保证99%的数据查询在1秒内返回结果。
析平台的请求事件的峰值超过3百万/秒。另外，广告分析对于实时查询的性能要求非常高
MetaMarkets的服务能力很容易扩展到多家广告公司。根据MetaMarkets数据，它们的数据分
Platform）提供深度的数据分析服务。
交易平台（Ad Exchange）、供应方平台（Supply Side Platform）和需求方平台（Demand Side
数据量大大增多，数据分析需求和场景也非常多。MetaMarkets在这方面经验丰富，帮助广告
景。这家公司致力于为在线媒体公司提供数据分析服务，客户包括在线广告公司、在线游戏
1.3.1MetaMarkets简介
开发商和社交媒体等。目前，互联网广告越来越多地采用程序化交易的方式，因此广告交易
第1章初识Druid
1.3
MetaMarkets最开始使用了GreenPlum社区版数据库，分析系统运行在亚马逊的云服务
在这个业务背景下，MetaMarkets的工程师在早期的数据分析平台的设计上，经过两个
广告程序化交易通常采用iAB（Interactive Advertising Bureau）的OpenRTB 标准，因此
对于第二个问题，可能只是增加了少量的系统管理成本，但是第一个问题对于分析平台
·所有列的处理方式相同。这意味着时间、维度、指标不做任何区分。因此在使用这些
·很多全表扫描操作响应特别慢。例如，对于一个3300万的数据，计算总行数需要3秒
Druid诞生于MetaMarkets公司，简单介绍这家公司有助于更好地理解Druid创建的背
数据的时候，需要管理哪些是维度列，哪些是指标列。
时间。
Druid的产生
---
## Page 28
解决以下两个核心问题。
1.3.2
据分析。
数器设计，并不适合通用数据分析的需求，特别是不能支持从不同角度或维度进行灵活的数
性，意识到当时做的决定是错误的。总结了这次失败的本质：Rainbird这一类的高性能的计
续增加，计算量再次成为瓶颈。在最后的项目反思会中，大家都明确体会到这种方案的局限
定不能超过5个维度，只预先计算最重要的维度。但是，随着业务的发展，维度还在不断继
至超过了24小时。在后面的性能优化过程中，开发人员不得不限制预计算的维度，例如规
度比较少的时候，计算量不大，将数据放在NoSQL中，访问速度很快。
数器的方法预先计算出来，并且放在NoSQL中，为数据分析提供实时能力。这种方法在维
据内容。
用于高性能的计数，支持获取最大值、最小值和平均值等功能，其中Cassandra用于存储数
Rainbird是一款基于Zookeeper、Cassandra、Scribe和Thrift等技术的分布式实时统计系统，
为数据落地时的存储，利用NoSQL的高性能、可扩展特性解决数据分析的实时问题。
并不能满足实时大规模数据分析的性能需求。因此，他们在第二阶段的工作中，将NoSQL作
第二阶段，预计算结果放人NoSQL中。
1.4
在经历两次深刻的失败后，MetaMarkets决定创建一个分布式的内存OLAP系统，用于
但是，随着维度的增加，预计算的计算量越来越大，当维度达到11个时，计算时间甚
MetaMarkets也采用类似的理念设计了一套系统，该系统将所需要分析的指标，通过计
经过第一阶段的尝试，开发人员得出一个结论：常规的关系型数据库管理系统（RDBMS）
（1）快速查询（FastQuery）：部分数据的聚合（PartialAgregate）+内存化（In-Memory）+
在设计之初，开发人员确定了三个设计原则（Design Principle）。
就这样，Druid项目诞生了。
·支持灵活的查询分析能力。
·RDBMS 的查询太慢。
Druid的三个设计原则
失败总结
Druid实时大数据分析原理与实践
---