title:Attribute-based fine-grained access control with efficient revocation
in cloud storage systems
author:Kan Yang and
Xiaohua Jia and
Kui Ren
Attribute-based Fine-Grained Access Control with Efﬁcient
Revocation in Cloud Storage Systems
Kan Yang
Dept. of Computer Science
City University of Hong Kong
Hong Kong SAR
kanyang3@student.cityu.
edu.hk
Xiaohua Jia
Dept. of Computer Science
City University of Hong Kong
Hong Kong SAR
PI:EMAIL
Kui Ren
University at Buffalo
State University of New York
NY, USA
PI:EMAIL
ABSTRACT
Cloud storage service allows data owner to host their data in the
cloud and through which provide the data access to the users. Be-
cause the cloud server is not trustworthy in the cloud storage sys-
tem, we cannot rely on the server to conduct data access control. To
achieve data access control on untrusted servers, traditional meth-
ods usually require the data owner to encrypt the data and deliver
decryption keys to authorized users. In these methods, however,
the key management is very complicated and inefﬁcient. In this
paper, we design an access control framework in cloud storage sys-
tems and propose a ﬁne-grained access control scheme based on
Ciphertext-Policy Attribute-based Encryption (CP-ABE) approach.
In our scheme, the data owner is in charge of deﬁning and enforc-
ing the access policy. We also propose an efﬁcient attribute revo-
cation method for CP-ABE systems, which can greatly reduce the
attribute revocation cost. The analysis shows that our proposed ac-
cess control scheme is efﬁcient and provably secure in the random
oracle model.
Categories and Subject Descriptors
D.4.6 [Security and Protection]: Access controls, Cryptographic
controls
General Terms
Security, Theory
Keywords
Access Control, Cloud Storage, Attribute Revocation, CP-ABE
1.
INTRODUCTION
Cloud storage is an important service of cloud computing [4].
It allows data owners to host their data in the cloud that provides
“24/7/365" data access to the users (data consumers). Cloud stor-
age service separates the roles of the data owner from the data ser-
vice provider, and the data owner does not interact with the user
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.
directly for providing data access service, which makes data access
control a challenging issue. Existing methods delegate data access
control to a trusted server and let it be in charge of deﬁning and
enforcing access policies [6]. However, the cloud server cannot
be fully trusted by data owners, because the cloud server may give
data access to unauthorized users for proﬁt making (e.g., the com-
petitor of a company). Thus, traditional server-based data access
control methods are no longer suitable for cloud storage systems.
The aim of this paper is to study the data access control issue in
cloud storage system that does not rely on the cloud server.
The Ciphertext-Policy Attribute-based Encryption (CP-ABE) [1,
7] is regarded as one of the most suitable technologies for data
access control in cloud storage systems, because it gives the data
owner more direct control on access policies and the policy check-
ing occurs “inside the cryptography". However, due to the attribute
revocation problem, it is very costly to apply the CP-ABE approach
to the access control in cloud storage systems. We call a user whose
attribute is revoked as a revoked user. There are two basic re-
quirements for the attribute revocation in cloud storage systems:
1) Backward Security The revoked user cannot decrypt any new
published ciphertext with its previous secret key. 2) Forward Se-
curity The newly joined user who has sufﬁcient attributes can still
be able to decrypt the ciphertexts which were published before it
joined the system. Existing attribute revocation methods proposed
for CP-ABE systems cannot be applied into the cloud storage sys-
tems. That is because they rely on the server to do auxiliary access
control during the attribute revocation, which requires the server to
be fully trusted. Thus, in cloud storage systems, the attribute revo-
cation is still an open problem in the design of attribute-based data
access control schemes.
In this paper, we design an attribute-based access control frame-
work for cloud storage systems and propose a ﬁne-grained access
control scheme with efﬁcient attribute revocation. Our scheme does
not require the server to do any auxiliary access control and data
owners are not required to be online all the time. The revocation is
conducted efﬁciently on attribute level rather than on user level.
The main contributions of this work are summarized as follows.
1) We propose a ﬁne-grained access control scheme for cloud
storage systems, where the data owner is in charge of deﬁning and
enforcing the access policy without relying on any auxiliary access
control by the server. Moreover, our scheme is provably secure in
the random oracle model.
2) We propose a secure and efﬁcient attribute revocation method
for CP-ABE systems. It is secure in the sense that it can achieve
both forward security and backward security, and it is efﬁcient in
the sense that it incurs less computation cost and communication
overhead.
523user can decrypt the ciphertext only when he/she has sufﬁcient at-
tributes satisfying the access policy associated with the ciphertext.
2.2 Deﬁnition of Framework
The framework of the data access control is deﬁned as follows.
DEFINITION 1
(ACCESS CONTROL SCHEME). An access con-
trol scheme is a collection of the following algorithms: Setup,
SKeyGen, Encrypt, Decrypt, UKeyGen, SKUpdate and CTUpdate,
where UKeyGen, SKUpdate and CTUpdate are used for attribute
revocation.
Setup(1λ ) → (MK,PP,{PKx}). The setup algorithm takes no
input other than the implicit security parameter λ . It outputs a mas-
ter key MK, the public parameters PP and a set of all the public
attribute keys {PKx}.
SKeyGen(MK,S,{V Kx}x∈S) → SK. The key generation algo-
rithm takes as inputs the master key MK, a set of attributes S that
describes the secret key, and the corresponding set of attribute ver-
sion keys {V Kx}x∈S. It outputs the user’s secret key SK.
Encrypt(PP,{PKx},m,A)→CT . The encryption algorithm takes
as inputs the public parameters PP, the set of public attribute key
{PKx}, a message m and an access structure A over the universe of
attributes. The algorithm will encrypt m such that only a user who
possesses a set of attributes satisfying the access structure will be
able to decrypt the message. It outputs a ciphertext CT .
Decrypt(CT,SK) → m. The decryption algorithm takes as in-
puts the ciphertext CT which contains an access structure A and
the secret key SK for a set of attributes S. If the set of attributes S
satisﬁes the access structure A, then the algorithm will decrypt the
ciphertext and return a message m.
UKeyGen(MK,V Kx(cid:48) ) → ((cid:102)V Kx(cid:48) ,UKx(cid:48) ). The update key genera-
tion algorithm takes as inputs the master key MK and the current
sion key (cid:102)V Kx(cid:48) of the revoked attribute x(cid:48) and an update key UKx(cid:48).
version key V Kx(cid:48) of the revoked attribute x(cid:48). It outputs a new ver-
SKUpdate(SK,UKx(cid:48) ) → (cid:102)SK. The secret key update algorithm
of the revoked attribute x(cid:48). It outputs a new secret key(cid:102)SK.
CTUpdate(CT,UKx(cid:48) ) → (cid:102)CT . The ciphertext update algorithm
puts a new ciphertext (cid:102)CT .
takes as inputs the ciphertext CT and the update key UKx(cid:48). It out-
takes as inputs the current secret key SK and the update key UKx(cid:48)
2.3 Deﬁnition of Security Model
In cloud storage systems, we assume that: 1) The server may
give access permission to the users who are not supposed to. 2)
The server is curious but honest. It is curious about the content of
the encrypted data or the received message, but will execute cor-
rectly the task assigned by the authority. 3) The users, however, are
dishonest and may collude to obtain unauthorized access to data.
We now describe the security model for CP-ABE systems by the
following game between a challenger and an adversary as follows.
Setup. The challenger runs the Setup algorithm and gives the
public parameters, PK to the adversary.
Phase 1. The adversary is given oracle access to secret keys
SK that corresponding to sets of attributes S1,S2,··· ,Sq1 and the
update keys UK.
Challenge. The adversary submits two equal length messages
M0 and M1.
In addition, the adversary gives a challenge access
structure A∗ such that none of the sets S1,··· ,Sq1 from Phase 1
satisfy the access structure. The challenger ﬂips a random coin b,
and encrypts Mb under the access structure A∗. Then, the ciphertext
CT∗ is given to the adversary.
Phase 2. Phase 1 is repeated with the restrictions: 1) none of
sets of attributes Sq1+1,··· ,Sq satisfy the access structure corre-
Figure 1: System Model of Access Control in Cloud Storage
3) We further provide the security analysis and performance anal-
ysis to show that our scheme is secure in the random oracle model
and efﬁcient to be applied into practice.
The remaining of this paper is organized as follows. Section 2
describes the deﬁnition of system model and security model. In
Section 3, we describe the attribute-based ﬁne-grained access con-
trol scheme and the efﬁcient attribute revocation method. Section 4
gives the analysis of our scheme in terms of security and efﬁciency.
In Section ??, we give the related work on data access control and
attribute revocation in ABE system. Finally, the conclusion is given
in Section 5.
2. SYSTEM AND SECURITY MODEL
2.1 Deﬁnition of System Model
We consider an access control system for cloud storage service,
as described in Figure 1. There are four entities in the system:
authority, data owners (owner), cloud server (server) and data con-
sumers (users).
The authority is responsible for entitling/revoking/re-granting at-
tributes to/from/to users according to their role or identity in the
system. It assigns secret keys to users when they are entitled at-
tributes and maintains a version number of each attribute. When
an attribute revocation happens, the authority will update the ver-
sion number of the revoked attribute, and generate an update key.
It then sends the update key to all the non-revoked users (for secret
key update) and the cloud server (for ciphertext update).
The owners determine the access policies and encrypt their data
under the policies before hosting them in the cloud (For simplicity,
the data here means the content key1).
The cloud server stores the owners’ data and provides data access
service to users. But the server does not engage in the data access
control.
Instead, we assume the ciphertext may be accessed by
all the legal users in the system. But, the access control happens
inside the cryptography. That is only the users who possess eligible
attributes (satisfying the access policy) can decrypt the ciphertext.
Each user is entitled a set of attributes according to its roles or
identity in the system. However, the user’s attribute set may dy-
namically change due to the role changed of the user in the system.
For example, when a user is degraded from the manager to the nor-
mal worker, some of its attributes should be revoked, while some-
times the revoked attribute need to be re-granted to the user. The
1In practical, the data is encrypted with a content key by using
symmetric encryption method, and the content key is encrypted by
using CP-ABE.
Cloud Server OwnersUser 1 User N User 2 Authority (cid:1829)(cid:1846)(cid:3404)(cid:1831)(cid:1866)(cid:1855)(cid:3028)(cid:3029)(cid:3032)(cid:4666)(cid:1842)(cid:1842)(cid:481)(cid:1842)(cid:1837)(cid:3051)(cid:481)(cid:1837)(cid:481)(cid:1827)(cid:4667) (cid:1831)(cid:3012)(cid:4666)(cid:1865)(cid:4667)(cid:3404)(cid:1831)(cid:1866)(cid:1855)(cid:3046)(cid:3052)(cid:3040)(cid:3040)(cid:3032)(cid:3047)(cid:3045)(cid:3036)(cid:3030)(cid:4666)(cid:1865)(cid:481)(cid:1837)(cid:4667) (cid:4666)(cid:1829)(cid:1846)(cid:481)(cid:1831)(cid:3012)(cid:1865)(cid:4667) (cid:4666)(cid:1829)(cid:1846)(cid:481)(cid:1831)(cid:3012)(cid:1865)(cid:4667) (cid:1837)(cid:3404)(cid:1830)(cid:1857)(cid:1855)(cid:3028)(cid:3029)(cid:3032)(cid:4666)(cid:1829)(cid:1846)(cid:481)(cid:1845)(cid:1837)(cid:4667) (cid:1865)(cid:3404)(cid:1830)(cid:1857)(cid:1855)(cid:3046)(cid:3052)(cid:3040)(cid:3040)(cid:3032)(cid:3047)(cid:3045)(cid:3036)(cid:3030)(cid:4666)(cid:1831)(cid:3012)(cid:4666)(cid:1865)(cid:4667)(cid:481)(cid:1837)(cid:4667) (cid:4668)(cid:1847)(cid:1837)(cid:3051)(cid:4669) (cid:4668)(cid:1847)(cid:1837)(cid:3051)(cid:4669)(cid:481)(cid:1845)(cid:1837)(cid:3015) (cid:1845)(cid:1837)(cid:2869) (cid:4668)(cid:1842)(cid:1837)(cid:3051)(cid:4669)(cid:481)(cid:1842)(cid:1842) 524sponding to the challenge; 2) none of the updated secret keys (cid:102)SK
(generated by the queried SK and update keys UK) can decrypt the
challenge ciphertext.
Guess. The adversary outputs a guess b(cid:48) of b.
The advantage of an adversary A in this game is deﬁned as Pr[b(cid:48) =
b] − 1/2. This security model can easily be extended to handle
chosen-ciphertext attacks by allowing for decryption queries in Phase
1 and Phase 2.
DEFINITION 2. A revocable CP-ABE scheme is secure if all
polynomial time adversaries have at most a negligible advantage
in the above game.
3. ATTRIBUTE-BASED ACCESS CONTROL
WITH EFFICIENT REVOCATION
In this section, we ﬁrst give an overview of our method and then
propose the detailed construction of access control scheme. After