**Do you want to request a _feature_ or report a _bug_?**
bug
**What is the current behavior?**
"0"-prefixed octal literals and octal escape sequences are deprecated; for
octal literals use the "0o" prefix instead
**If the current behavior is a bug, please provide the steps to reproduce.**
https://gist.github.com/caseyWebb/a5fdd929638f961ee673581e7d68ddb1
**What is the expected behavior?**
No error should be thrown
**Please mention other relevant information such as the browser version,
Node.js version, webpack version and Operating System.**
  * Firefox 58 & Chrome 64
  * Node 9.5.0
  * webpack 3.10.0 & webpack@next
  * webpack-dev-server 2.11.1 & webpack-dev-server@next
  * MacOS 10.13
When the `NamedModulesPlugin` is added, a different error is thrown, and the
generated code is
    webpackHotUpdate(0,{
    /***/ "./src/index.js":
    /***/ (function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
    /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__log_js__ = __webpack_require__("./src/log.js");
    Object(__WEBPACK_IMPORTED_MODULE_0__log_js__["log"])()
    /**
     * THIS IS THE IMPORTANT/BROKEN PART
     */
    module.hot.accept("./src/log.js""./src/log.js", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ __WEBPACK_IMPORTED_MODULE_0__log_js__ = __webpack_require__("./src/log.js"); (function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ __WEBPACK_IMPORTED_MODULE_0__log_js__ = __webpack_require__("./src/log.js"); (() => Object(__WEBPACK_IMPORTED_MODULE_0__log_js__["log"])())(__WEBPACK_OUTDATED_DEPENDENCIES__); })(__WEBPACK_OUTDATED_DEPENDENCIES__); })
    /***/ }),
    /***/ "./src/log.js":
    /***/ (function(module, __webpack_exports__, __webpack_require__) {
    "use strict";
    Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
    /* harmony export (immutable) */ __webpack_exports__["log"] = log;
    function log() {
      document.body.innerText += 'foo\n'
      document.body.innerText += 'bar\n'
    }
    /***/ })
    })
This leads me to believe that for some reason the module identifier is being
duplicated. I think the octal error is an effect of `0` being doubled to `00`.