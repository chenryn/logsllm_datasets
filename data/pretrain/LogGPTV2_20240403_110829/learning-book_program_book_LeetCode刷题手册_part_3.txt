以下是优化后的文本，使其更加清晰、连贯和专业：

---

## 问题列表及复杂度

1. **40. 组合总和 II**
   - 难度：中等
   - 时间复杂度：O(n log n)
   - 空间复杂度：O(n)

2. **41. 第一个缺失的正数**
   - 难度：困难
   - 时间复杂度：O(n)
   - 空间复杂度：O(1)

3. **42. 接雨水**
   - 难度：困难
   - 时间复杂度：O(n)
   - 空间复杂度：O(1)

4. **48. 旋转图像**
   - 难度：中等
   - 时间复杂度：O(n^2)
   - 空间复杂度：O(1)

5. **53. 最大子序和**
   - 难度：简单
   - 时间复杂度：O(n)
   - 空间复杂度：O(1)

6. **54. 螺旋矩阵**
   - 难度：中等
   - 时间复杂度：O(n^2)
   - 空间复杂度：O(n^2)

7. **56. 合并区间**
   - 难度：中等
   - 时间复杂度：O(n log n)
   - 空间复杂度：O(1)

8. **57. 插入区间**
   - 难度：困难
   - 时间复杂度：O(n)
   - 空间复杂度：O(1)

9. **59. 螺旋矩阵 II**
   - 难度：中等
   - 时间复杂度：O(n)
   - 空间复杂度：O(n^2)

10. **62. 不同路径**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

11. **63. 不同路径 II**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

12. **64. 最小路径和**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

13. **75. 颜色分类**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

14. **78. 子集**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

15. **79. 单词搜索**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

16. **80. 删除有序数组中的重复项 II**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

17. **84. 柱状图中最大的矩形**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(n)

18. **88. 合并两个有序数组**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

19. **90. 子集 II**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

20. **120. 三角形最小路径和**
    - 难度：中等
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

21. **121. 买卖股票的最佳时机**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

22. **122. 买卖股票的最佳时机 II**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

23. **126. 单词接龙 II**
    - 难度：困难
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

24. **152. 乘积最大子数组**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

25. **167. 两数之和 II - 输入有序数组**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

26. **209. 长度最小的子数组**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

27. **216. 组合总和 III**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

28. **217. 存在重复元素**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

29. **219. 存在重复元素 II**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

30. **283. 移动零**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

31. **287. 寻找重复数**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

32. **532. 数组中的 k-diff 数对**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

33. **566. 重塑矩阵**
    - 难度：简单
    - 时间复杂度：O(n^2)
    - 空间复杂度：O(n^2)

34. **628. 三个数的最大乘积**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

35. **713. 乘积小于 K 的子数组**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

36. **714. 带交易费的最佳买卖股票时机**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

37. **746. 使用最小花费爬楼梯**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

38. **766. 托普利茨矩阵**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

39. **867. 转置矩阵**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

40. **891. 子序列宽度之和**
    - 难度：中等
    - 时间复杂度：O(n log n)
    - 空间复杂度：O(1)

41. **907. 子数组的最小值之和**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(n)

42. **922. 按奇偶排序数组 II**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

43. **969. 煎饼排序**
    - 难度：中等
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

44. **977. 有序数组的平方**
    - 难度：简单
    - 时间复杂度：O(n)
    - 空间复杂度：O(1)

### 回溯法（Backtracking）

- **排列问题**：第46题、第47题、第60题、第526题、第996题。
- **组合问题**：第39题、第40题、第77题、第216题。
- **排列和组合杂交问题**：第1079题。
- **N皇后终极解法（二进制解法）**：第51题、第52题。
- **数独问题**：第37题。
- **四个方向搜索**：第79题、第212题、第980题。
- **子集合问题**：第78题、第90题。
- **Trie**：第208题、第211题。
- **BFS优化**：第126题、第127题。

### DFS模板示例

```go
func combinationSum2(candidates []int, target int) [][]int {
    if len(candidates) == 0 {
        return [][]int{}
    }
    c, res := []int{}, [][]int{}
    sort.Ints(candidates)
    findCombinationSum2(candidates, target, 0, c, &res)
    return res
}

func findCombinationSum2(nums []int, target, index int, c []int, res *[][]int) {
    if target == 0 {
        b := make([]int, len(c))
        copy(b, c)
        *res = append(*res, b)
        return
    }
    for i := index; i < len(nums); i++ {
        if i > index && nums[i] == nums[i-1] {
            continue // 去重的关键逻辑
        }
        if nums[i] > target {
            break
        }
        c = append(c, nums[i])
        findCombinationSum2(nums, target-nums[i], i+1, c, res)
        c = c[:len(c)-1]
    }
}
```

---

希望这些改进能使文档更易于理解和阅读。