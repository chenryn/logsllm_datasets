User: Please describe the principle and function of JWT, and give usage examples.
Assistant: The full name of JWT is JSON Web Tokens, which is a lightweight authentication and authorization scheme. Its main purpose is to pass identity authentication information between network applications in order to achieve stateless (stateless) identity authentication. JWT consists of three parts: header (Header), load (Payload) and signature (Signature). The header (Header) contains the metadata of the JWT, usually including information such as algorithm and type; the payload (Payload) is the main content of the JWT, including identity authentication information and other information about the user or application; signature (Signature) It is generated by encrypting the header and payload to verify the authenticity of the data. Usage example: 1. After the user logs in, the server will generate a JWT and use it for user authentication and authorization verification. 2. In every request that needs to authenticate the user, add the JWT to the HTTP header. 3. The server parses the JWT, verifies the signature and payload, and performs identity authentication and authorization checks on the user based on the information in the payload. 4. The result is returned. If the user is authenticated, the authorization is successful, otherwise the corresponding error message is returned. Sample code: ``` // generate JWT const jwt = require('jsonwebtoken'); const token = jwt.sign({userId: '123456'}, 'secretKey'); console.log(token); // parse JWT jwt.verify(token, 'secretKey', function(err, decoded) { if (err) { console.log(err.message); } else { console.log(decoded.userId); } }); `` `