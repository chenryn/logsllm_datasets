User: How to use Ansible to automatically deploy and configure multiple Linux servers, including host configuration, software installation, service startup, etc.?
Assistant: The following are the steps to use Ansible to automatically deploy and configure multiple Linux servers: 1. Install Ansible On a host computer, install Ansible. You can use the following commands to install Ansible: ``` sudo apt-get update sudo apt-get install ansible ``` 2. Configure Ansible In the Ansible configuration file (/etc/ansible/ansible.cfg), set the hosts file path. You can use the following command to modify the configuration file: ``` sudo nano /etc/ansible/ansible.cfg ``` Find the line `#inventory = /etc/ansible/hosts`, uncomment it and change the path to your own hosts File path, eg: ``` inventory = /home/user/hosts ``` Save and exit. 3. Write the hosts file In the hosts file of Ansible, configure all Linux servers that need to be automatically deployed and configured. The following formats can be used: ``` [websrv] web1 ansible_host=192.168.1.101 ansible_user=user ansible_ssh_pass=password web2 ansible_host=192.168.1.102 ansible_user=user ansible_ssh_pass=password web3 ansible_host=192.16 8.1.103 ansible_user=user ansible_ssh_pass=password ``` Among them, `[websrv]` is the name of the host group, `web1`, `web2`, `web3` are the names of the host, `ansible_host` is the IP address of the host, `ansible_user` is the login user name of the host, `ansible_ssh_pass ` is the host login password. 4. Write the playbook In Ansible, use the playbook to configure and deploy the host. You can write a playbook file named `web-server.yml` on the host computer, including host configuration, software installation, service startup and other operations. For example: ```yaml - name: Configure web servers hosts: websrv become: true tasks: - name: Update package cache apt: update_cache: yes - name: Install nginx apt: name: nginx state: present - name: Start nginx service service: name: nginx state: started ``` The playbook includes the following operations: - Update package cache - Install nginx - Start nginx service More operations can be added in the playbook. 5. Run the playbook Run the playbook to automatically apply operations such as host configuration, software installation, and service startup to all Linux servers. On the master machine, run the playbook with the following command: ``` ansible-playbook web-server.yml ``` Ansible will automatically connect to the specified host and execute all defined tasks. The above is the complete process of using Ansible to automate the deployment and configuration of multiple Linux servers.