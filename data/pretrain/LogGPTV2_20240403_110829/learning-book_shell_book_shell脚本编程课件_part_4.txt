#Description:
The test script
#Copyright (C):
2019 A1l rights reserved
IP=172.16.0.123
ping -c1 =W1 $IP &>/dev/nu11
&echo "sIP is up" II{echo"SIP is
unreachable"; exit; 3
echo “script is finished"
[root@centos8 ~]#bash /data/script40/ping.sh
172.16.0.123  is unreachable
范例：
[root@centos8 ~]#cat /data/script40/disk_check.sh
#!/bin/bash
#Author:
wangxiaochun
#QQ:
29308620
#Date:
201912-23
#Fi1eName:
disk_check.sh
#URL:
http://ww.magedu.com
#Description:
The test script
的
#Copyright (C):
2019 All rights reserved
WARNING=80
T- peau|u- os|s- xp-in| . . s- ualpsap/v, daublp.=3snds
["$SPACE_USED" -ge $wARNING ] && echo "disk used is $SPACE_USED,will be full"
|mail -s diskwaring root
练习
1、编写脚本argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户至少应该给
一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数
2、编写脚本hostping-sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提
示用户“该IP地址可访问”；如果不可ping通，则提示用户"该IP地址不可访问
3、编写脚本checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满
4、编写脚本per.sh，判断当前用户对指定参数文件，是否不可读并且不可写
5、编写脚本excute.sh，判断参数文件是否为sh后级的普通文件，如果是，添加所有人可执行权限
否则提示用户非脚本文件
6、编写脚本nologin.sh和login.sh，实现禁止和允许普通用户登录系统
2.13使用read命令来接受输入
使用read来把输入值分配给一个或多个shell变量，read从标准输入中读取值，给每个单词分配一个变
量，所有剩余单词都被分配给最后一个变量
格式：
---
## Page 28
read  [options] [name  ..-]
常见选项：
-p指定要显示的提示
-S静默输入，一般用于密码
-nN指定输入的字符长度N
-d字符’输入结束符
-t N TIMEOUT为N秒
范例：
[root@centos8 ~]#read
wang
[root@centos8 ~]#echo SREPLY
wang
[root@centos8 ~]#read
NAME TITLE
wang cto
[root@centos8 ~]#echo SNAME
wang
[root@centos8 ~]#echo STITLE
cto
#Pipelines:A pipeline is a sequence of one or more
commands separated by one of
the control operators | or |&
[root@centos8 ~]#echo magedu
read
[root@centos8 ~]#echo SNAME
[root@centos8 ~]#echo
readNAME; echo SNAME;}
magedu
[root@centos8 ~]#read -p "please input your name: " NAME
Please input your name: wang
[root@centos8 ~]#echo SNAME
wang
范例：
read -p "Enter a filename: " FILE
范例：鸡免同笼算法，今有雉免同笼，上有三十五头，下有九十四足，问雉免各几何？
[root@centos8 ~]#cat /data/script40/chook_rabbit.sh
#!/bin/bash
"Author:
wangxiaochun
#QQ:
29308620
#Date:
2019-12-23
#Fi1eName:
chook_rabbit.sh
#URL:
http: //ww-magedu. com
#Description:
The test script
#Copyright (C):
2019 All rights reserved
---
## Page 29
read-p"请输入头的数量："
HEAD
read-p"请输入脚的数量：
FO0T
RABBIT=$[FOOT/2HEAD]
CHOOK=$[HEAD-RABBIT]
echo“兔子："$RABBIT
echo“鸡："$CHOOK
3bash的配置文件
bashshell的配置文件很多，可以分成下面类别
3.1按生效范围划分两类
全局配置：
/etc/profile
/etc/profile.d/*.sh
/etc/bashrc
个人配置：
/.bash_profile
/.bashrc
3.2shell登录两种方式分类
3.2.1交互式登录
（1）直接通过终端输入账号密码登录
马哥教育
(2)使用'su-UserName切换的用户
人的高薪职业学院
配置文件执行顺序：
/etc/profile
: --> /etc/profiTe.d/α,sh --> ~/ .bash_profile --> ~/ .bashrc -->
/etc/bashrc
3.2.2非交互式登录
(1)su UserName
（2）图形界面下打开的终端
(3）执行脚本
(4)任何其它的bash实例
执行顺序：
/etc/profile. d/,sh --> /etc/bashrc -->~/.bashrc
3.3按功能划分分类
profile类和bashrc类
3.3.1profile类
profile类为交互式登录的shell提供配置
全局 ： /etc/profile, /etc/profile.d/*.sh
个人 : -/.bash_profile
功用：
---
## Page 30
(1)用于定义环境变量
(2）运行命令或脚本
3.3.2 Bashrc类
bashrc类：为非交互式和交互式登录的shel提供配置
全局：/etc/bashrc
个人：-/.bashrc
功用：
（1）定义命令别名和函数
(2)定义本地变量
3.4编辑配置文件生效
修改profile和bashrc文件后需生效两种方法：
1.重新启动shell进程
2.source|.配置文件
范例：
~/ .bashrc
3.5Bash退出任务
保存在-/.bash_logout文件中（用户），在退出登录shell时运行
功能：
创建自动备份
·清除临时文件
练习
1、让所有用户的PATH环境变量的值多出一个路径，例如：/usr/local/apache/bin
2、用户root登录时，将命令指示符变成红色，并自动启用如下别名：rm=rm-i
cdnet=cd /etc/sysconfig/network-scripts/"
editnet=vim /etc/sysconfig/network-scripts/ifcfg-etho’
editnet=vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 或 ifcfg-ens33′(如果系统是
CentOS7)
3、任意用户登录系统时，显示红色字体的警示提醒信息"Hidangerous！“
4、编写生成脚本基本格式的脚本，包括作者，联系方式，版本，时间，描述等
5、编写用户的环境初始化脚本reset.sh，包括别名，登录提示符，vim的设置，环境变量等
4流程控制
4.1条件选择
4.1.1选择执行if语句
格式：
if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]..- [ else
COMMANDS; ]  fi
---
## Page 31
单分支
if 判断条件；then
条件为真的分支代码
fi
双分支
if 判断条件；then
条件为真的分支代码
else
条件为很的分支代码
fi
多分支
if 判断条件1；then
条件1为真的分支代码
elif 判断条件2；then
条件2为真的分支代码
elif 判断条件3；then
条件3为真的分支代码
else
• + -
以上条件都为很的分支代码
fi
说明：
的高
多个条件时，逐个条件进行判断，第一次遇为“真“条件时，执行其分支，而后结束整个if语句
·if语句可嵌套
范例：
根据命令的退出状态来执行命令
if ping -c1 -w2 station1 &> /dev/nu11; then
echo 'stationl is up'
elif
grep -q'station1'~/maintenance.txt;t
then
echo 'station1 is undergoing maintenance'
else
echo 'station1 is unexpectedly DowN!'
exit 1
fi
范例：
[root@centos8 ~]#cat if_bmi.sh
#!/bin/bash
中
#Author:
wangxiaochun
#QQ:
29308620
#Date:
2019-12-25
#FileName:
if_bmi .sh
PURL:
http: //ww magedu. com
---
## Page 32
#Description:
The test script
#Copyright (C):
2019 All rights reserved
read-p"请输入身高（m为单位）："HIGH
if [[ ! "$HIGH" =~ A[02].?[09]{,2}$
]]；then echo"输入错误的身高"；exit 1；fi
read-p"请输入体重（kg为单位)：”wEIGHT
if [[！"$wEIGHT"=~A[0-9]{1,3}$]]；then echo"输入错误的体重";exit 1;fi
BMI=*echo $WEIGHT/$HIGH^2|bc
if [ SBMI
-1e 18 ];then
echo“你太瘦了，多吃点”
elif [ $BMI -1t 24 ];then
echo"身材很棒！"
else
echo“你太胖了，注意节食，加强运动”
fi
4.1.2条件判断case语句
格式：
CaSe WORD 1n [PATTERN [I PATTERN]
esac
case 变量引用in
PAT1)
分支1
PAT2)
分支2
默认分支
esac
case支持glob风格的通配符：
*：任意长度任意字符
？：任意单个字符
[]：指定范围内的任意单个字符
| :
或，如 a或b
范例：
[root@centos8 script40]#cat case_yesorno.sh
#!/bin/bash
---
## Page 33
#Author:
wangxiaochun
#QQ:
29308620
#Date:
2019-12-25
#Fi1eName:
case_yesorno.sh
#URL:
http://www-magedu.com
#Description:
The test script
#Copyright (C):
2019 A1l rights reserved
1ndNI  (ou/saf)aaube nof oo, d- peau
INPUT=`echo SINPUT Itr 'A-Z'
'a-z'
case SINPUT in
ylyes)
echo "You input is YEs"
n|no)
echo "You input is No"
echo "Input fales,please input yes or no!"
esac
[root@centos8 script40]#cat case_yesorno2.sh
#!/bin/bash
中
#Author:
wangxiaochun
#QQ:
29308620
#Date:
2019-12-25
#Fi1eName:
case_yesorno.sh
#URL:
http://www-magedu.com
的高
#Description:
The test script
#Copyright (C):
 2019 All rights reserved
1ndNI  (ou/saf)aaube nof oo, d-peau
case SINPUT in
[y]|[y][∈e][ss]]
echo "You input is YEs"
([oo][un]l[uN]
echo "You input is No"
)
echo "Input fales,please input yes or no!"
esac
练习
1、编写脚本createuser.sh，实现如下功能：使用一个用户名做为参数，如果指定参数的用户存在，就
显示其存在，否则添加之；显示添加的用户的id号等信息
2、编写脚本yesomo.sh，提示用户输入yes或no,并判断用户输入的是yes还是no，或是其它信息
3、编写脚本fletype.sh，判断用户输入文件路径，显示其文件类型（普通，目录，链接，其它文件类
型）
4、编写脚本checkint.sh，判断用户输入的参数是否为正整数
4.2循环
4.2.1循环执行介绍
---
## Page 34
将某代码段重复运行多次，通常有进入循环的条件和退出循环的条件
重复运行次数
·循环次数事先已知
·循环次数事先未知
常见的循环的命令：for,while,until
4.2.2for循环
格式1：
马哥教育
for 变量名
in列表；dc
循环体
IT人的高薪职业学院
done
执行机制：
依次将列表中的元素赋值给“变量名”：每次赋值后即执行一次循环体；直到列表中的元素耗尽，循环结束
for循环列表生成方式：
·直接给出列表
整数列表：
{start..end]
S(seq[start[step]] end)
·返回列表的命令：
S (COMMAND)
●使用glob，如：*.sh
·变量引用，如：$@$#
范例：九九乘法表
---
## Page 35
#!/bin/bash
for i in {1..9};do
for j in “seq $i°;do
echo-e"${j}x${i}=$[i*j]\t\c"
done
echo
done
范例：生产案例
[root@centos8 ~]#cat /data/script40/for_rename sh
#!/bin/bash
#Author:
wangxiaochun
#QQ：
29308620
#Date:
2020-01-03
#Fi1eName:
/data/script40/for_rename.sh
#URL:
http://ww-magedu. com
#Description:
The test script
#Copyright (C):
2020 All rights reserved
DIR=/data/test
cd $DIR
for FILE in * ;do
PRE='echo $FILE I sed -nr
s/（.*)\.（[△.]+）s/\1/p
-nrs/（.*）\.（[A.]+)s/\2/p
mv $FILE $PRE.bak
done
范例：M37期面试题，要求将目录YYYY-MM-DD/中所有文件，移动到YYYY-MM/DD/下
件，SRANDOM.1og
[root@centos8 ~]#cat dir20.sh
#!/bin/bash
for 1 in {1..365];do
DIR=“date -d "-Si day"+%F
mkdir $0IR
cd $DIR
for n in {1..10};do