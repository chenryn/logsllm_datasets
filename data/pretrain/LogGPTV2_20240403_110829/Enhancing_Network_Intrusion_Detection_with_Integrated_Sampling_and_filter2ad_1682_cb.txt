### 4.1 Experimental Setup

To evaluate the system in a real-world, live traffic environment, we selected a gateway router for a large academic network with the address 141.212.0.0/16. This router is configured to mirror all port traffic to a span port, which can be connected to a separate machine for traffic analysis.

For the DARPA dataset experiments, we used a dual 3.06 GHz Intel Xeon machine with 2 GB of main memory, running FreeBSD 6.1 with Symmetric Multi-Processing (SMP) enabled. The span port of the gateway router was connected to another machine with dual 3.0 GHz Intel Xeon processors and 2 GB of main memory, running FreeBSD 5.4 with SMP enabled. The results presented are the averages over five runs, with the THRESHOLD value set to 5.

### 4.2 Processing Time and Memory Usage

We compared Wind with Snort 2.1.3 using all rules included in the distribution, which amounted to 2,059 different rules. Both Wind and Snort were run using their default configurations. Figure 5 illustrates the improvement in the number of packets processed per second by our system compared to Snort. For most datasets, Wind processes up to 1.6 times as many packets as Snort.

We also compared the memory usage of our system with that of Snort. Figure 6 shows the memory savings achieved by Wind compared to Snort. Our system uses approximately 10-20% less memory than the unmodified Snort. In summary, Wind performs up to 1.6 times better in processing time and saves 10-20% of the memory.

Wind and Snort were tested on a border router to analyze one million packets at several discrete times during the week. Figure 7 shows the improvement factor in the number of packets processed per second by Wind compared to Snort. The improvement factor varied from 1.35 to 1.65. During these runs, Wind consumed 10-15% less memory than Snort.

### 4.3 Application-Specific Rules

In our previous experiments, all rules included in the Snort distribution were enabled. However, in many networks, only application-specific rules are used. For example, in many enterprise networks, the only open access through the firewall is web traffic. Since web traffic is a dominant application in many networks, we compared Wind with Snort for web-based rules. Figure 8 shows the improvement in the number of packets processed per second by Wind compared to Snort for traffic at the border router. We found that for web-based rules, Wind improves performance by more than two times compared to Snort. Figure 9 shows a similar graph for the DARPA datasets, where Wind outperforms Snort by a factor of up to 2.7 times. In this case, Wind saved 2-7% of the memory compared to Snort.

### 4.4 Variation with Threshold

To investigate how the threshold affects the performance of our system, we evaluated the DARPA dataset 98-test-w1-mon for different threshold values. Figure 10 shows the performance variation of our system with increasing threshold values. As expected, the performance decreases with an increasing threshold. However, the changes are more pronounced for lower threshold values. Additionally, the memory saved by our system increases with increasing threshold values, particularly for lower threshold values. Therefore, increasing the threshold reduces performance but saves more memory, and this difference is more pronounced for lower threshold values.

### 4.5 Comparison with Bro

We also compared Wind with another Intrusion Detection System (IDS), Bro [6]. We first converted Snort signatures to Bro format using a tool provided by Bro [24]. However, only 1,935 signatures could be successfully converted.