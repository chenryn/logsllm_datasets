# OSN Processing Delays and User Interaction Latency

## Figure 15: OSN Processing Delays for User Z on Hugged

Figure 15 illustrates the processing delays (ùëëùëî) experienced by User Z on the Hugged application, over a period from December 27, 2008, to January 23, 2009. The data is based on 300 FBML name tags targeting users in the 'New York, NY' Facebook network. The x-axis denotes time of day, with "E" representing evening and "M" representing morning. The vertical bars indicate the minimum and maximum values for the averaged measurements. Similar results were observed for other user accounts and applications.

### Key Observations
- **Negligible Database Access Delay**: These experiments do not involve database accesses at the application servers, making ùëëùëù (database access delay) negligible, around 4ms.
- **Significant Overhead**: Indirection via OSNs imposes a significant overhead for user interactions with third-party applications.
- **Consistent Delays**: For Facebook, the OSN forwarding and processing delays are fairly consistent across applications and do not depend on application usage (load). They are affected by the type of content accessed but not by the entities targeted in FBML tags.
- **Caching Impact**: Caching of data helps stabilize the overall user-perceived delay, but there is still a stark difference in ùëëùëî for different types of FBML tags, which may be due to internal network delays in accessing different parts of Facebook's data center(s).

## Discussion

### Insights for Application Developers
- **Request Arrival Patterns**: Our study revealed well-defined trends in request arrival patterns, including diurnal, weekly, and seasonal peak activity periods. Application servers should be well-provisioned to handle these expected surges.
- **Resource Utilization**: The consistency in activity surges allows developers to effectively utilize resources through cloud computing services like Amazon EC2.
- **Exponential Distribution**: Request inter-arrival times for a single application were found to be exponentially distributed, which can be used to provision network layer buffers at the application server.
- **FBML Tag Impact**: The number and type of FBML tags can affect the OSN response processing delay. Developers should balance the content they serve to minimize user-perceived delays.
- **Network Delays**: Network delays can significantly impact user experience, especially in regions with inferior bandwidth. Content optimization based on available networking resources can improve performance.
- **API Call Durations**: Different API calls can take varying amounts of time to process, and some durations can increase significantly with load. Queuing API calls during high activity periods and emptying them during low activity periods can help manage this issue.

### Insights for OSNs
- **Geographical Growth**: Facebook's growth outside the U.S. has been rapid, but regions farther from its server locations, such as India and Pakistan, have experienced slower growth. This can be attributed to factors like social and technological development, as well as significant round-trip latencies.
- **Data Center Diversification**: Diversifying data center locations can improve user experience, but it introduces the challenge of data replication. A single master data center may not be optimal, as users in one region are more likely to access content generated by users within that region.
- **Persistent HTTP Connections**: Using persistent HTTP connections between the application server and OSN can reduce the overhead of protocol handshakes, especially for far-away clients.
- **Parallel Processing**: Parallelizing OSN tag processing within individual application responses can drastically improve user experience but must be implemented with checks to avoid DoS vulnerabilities.

## Conclusion

The launch of APIs for OSN applications has led to the proliferation of thousands of third-party applications. However, little information is available about the different stages of information flow and the role of the underlying OSN. Our measurement methodology, data collection, and analysis provide insights into the sources of delay and their potential impact on user experience. Understanding these factors can help both application developers and OSNs optimize their systems for better performance and user satisfaction.