User: I'm writing an aggregation application which scrapes data from a couple of web sources and displays that data with a novel interface. The sites from which I'm scraping update every couple of minutes, and I want to make sure the data on my aggregator is up-to-date.
What's the best way to periodically submit fresh data to my App Engine application from an automated script?
Constraints:

The application is written in Python.
The scraping process for each site takes longer than one second, thus I cannot process the data in an App Engine handler.
The host on which the updater script would run is shared, so I'd rather not store my password on disk.
I'd like to check the code for the application into to our codebase. While my associates aren't malicious, they're pranksters, and I'd like to prevent them from inserting fake data into my app.
I'm aware that App Engine supports some remote_api thingey, but I'd have to put that entry point behind authentication (see constraint 3) or hide the URL (see constraint 4).

Suggestions?
Assistant: I asked around and some friends came up with two solutions:

Upload a file with a shared secret token along with the application, but when committing to the codebase, change the token.
Create a small datastore model with one row, a secret token.

In both cases the token can be used to authenticate POST requests used to upload new data.