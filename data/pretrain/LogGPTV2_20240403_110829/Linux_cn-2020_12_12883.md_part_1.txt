---
author: Dennis Felsing
category: 技术
comments_data:
- date: '2020-12-04 08:54:32'
  message: 一大堆命令，很难想象这就是桌面生存指南，很难生存的
  postip: 123.149.115.29
  username: 来自河南郑州的 Firefox 83.0|Ubuntu 用户
- date: '2020-12-04 09:51:25'
  message: "同感，这对命令行最适合自娱自乐，自己怎么玩都行，但是现在私有格式那么多，老板发给你个word就gg了\r\n\r\n说白了学那些最适合大众的东西成本最低"
  postip: 59.172.176.130
  username: 来自湖北武汉的 Chrome 87.0|Windows 10 用户
- date: '2020-12-04 14:48:44'
  message: 我用从fedora8开始，从来都是用桌面的，很好用啊
  postip: 120.202.35.2
  username: 来自湖北武汉的 Firefox 56.0|Windows 10 用户
- date: '2020-12-04 19:22:54'
  message: "我用linux大概也有十年了，各种版本都尝试过了，最终选择折中的版本-debian，最小化安装，i3wm桌面管理。\r\n兼容的软件最多。稳定性非常好"
  postip: 183.208.112.107
  username: 来自江苏宿迁的 Firefox 68.0|GNU/Linux 用户
- date: '2020-12-05 10:12:20'
  message: 都到这种程度了,你觉得是老板给word就跪的人物吗？这配置,这台机一开就只干一件事——写代码.其他事务给其他机器做,只要开这台机就完全沉浸到代码世界里了.
  postip: 125.89.30.173
  username: 来自广东珠海的 Firefox 83.0|Windows 10 用户
- date: '2020-12-05 10:34:00'
  message: word太好解决了,转PDF,转HTML,转XML,转MARKDOWN,转ODT,要高级排版LATEX转XML或PDF之类的再转成word,想要什么格式随你挑,实在挑剔？让小弟搞排版,排
    版这破事让技术人员做也亏你老板想的出来.
  postip: 125.89.30.173
  username: 来自广东珠海的 Firefox 83.0|Windows 10 用户
count:
  commentnum: 6
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6395
date: '2020-12-03 22:39:00'
editorchoice: true
excerpt: 从 2006 年开始转战 Linux 系统后，经过几年的实践，我的软件设置在过去十年内出人意料的固定。再过十年回顾一下，看看发生了什么，也许会非常有趣。
fromurl: https://hookrace.net/blog/linux-desktop-setup/
id: 12883
islctt: true
largepic: /data/attachment/album/202012/03/223817smrej5qwsbqjb3vs.jpg
permalink: /article-12883-1.html
pic: /data/attachment/album/202012/03/223817smrej5qwsbqjb3vs.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 从 2006 年开始转战 Linux 系统后，经过几年的实践，我的软件设置在过去十年内出人意料的固定。再过十年回顾一下，看看发生了什么，也许会非常有趣。
tags:
- Linux
thumb: false
title: 十年 Linux 桌面生存指南
titlepic: true
translator: chenmu-kk
updated: '2020-12-03 22:39:00'
---
![](/data/attachment/album/202012/03/223817smrej5qwsbqjb3vs.jpg)
从 2006 年开始转战 Linux 系统后，经过几年的实践，我的软件设置在过去十年内出人意料的固定。再过十年回顾一下，看看发生了什么，也许会非常有趣。在写这篇推文时，我迅速回顾了正在运行的内容：
![htop overview](/data/attachment/album/202012/03/223912v0gsgf43fsxs383f.png)
### 动机
我的软件介绍排序不分先后：
* 程序应该运行在本地系统中以便我可以控制它，这其中并不包括云解决方案。
* 程序应在终端中运行，以便于在任何地方连贯地使用它们，包括性能稍差的电脑或手机。
* 通过使用终端软件，可以实现自动聚焦键盘。只有在一些有意义的地方，我会更喜欢使用鼠标，因为在打字期间一直伸手去拿鼠标感觉像在浪费时间。有时候过了一个小时我才注意到甚至还没有插鼠标。
* 最好使用快速高效的软件，我不喜欢听到风扇的声音和感到房间在变热。我还可以继续长久地运行旧硬件，已经使用了 10 年的 Thinkpad x200s 还能很好地支持我所使用的软件。
* 组合。我不想手动执行每个步骤，而是在需要时自动执行更多操作，这时自然是支持 shell。
### 操作系统
十二年前移除 Windows 系统后，我在 Linux 系统上经历了一个艰难的开始，当时我手上只有 [Gentoo Linux](https://gentoo.org/) 系统的安装光盘和一本打印的说明书，要用它们来实现一个可运行的 Linux 系统。虽然花费了几天的时间去编译和修整，但最终还是觉得自己受益颇多。
自此我再也没有转回 Windows 系统，但在持续的编译压力导致风扇失灵后，我将我的电脑系统切换到 [Arch Linux](https://www.archlinux.org/)。之后我将其他的电脑和私人服务器也切换到了 Arch Linux。作为一个滚动发布发行版，你可以随时升级软件包，但 [Arch Linux News](https://www.archlinux.org/news/) 已经详细报道了其中最主要的漏洞。
不过，令人烦恼的是一旦你更新了旧的内核模组，Arch Linux 就会移除旧版的相关信息。我经常注意到一旦我试着插入一个 USB 闪存盘，内核就无法加载相关组件。相反，每次内核升级后都应该进行重启。有一些 [方法](https://www.reddit.com/r/archlinux/comments/4zrsc3/keep_your_system_fully_functional_after_a_kernel/) 可以解决这个问题，但我还没有实际地使用它们。
其他程序也会出现类似的情况，通常 Firefox 、 cron 或者 Samba 在升级后都需要重启，但恼人的是，它们没有警告你存在这种情况。我在工作中使用的 [SUSE](https://www.suse.com/) 很好地提醒了这种情况。
对于 [DDNet](https://ddnet.tw/) 产品服务器，相较于 Arch Linux ，我更倾向于 [Debian](https://www.debian.org/) 系统，这样在每次升级时出现故障的几率更低。我的防火墙和路由器使用了 [OpenBSD](https://www.openbsd.org/) ，它拥有干净系统、文档和强大的 [pf 防火墙](https://www.openbsd.org/faq/pf/)，而我现在不需要一个单独的路由器。
### 窗口管理器
从我开始使用 Gentoo 后，我很快注意到 KDE 的编译时间非常长，这让我没办法继续使用它。我四处寻找更简单的解决方案，最初使用了 [Openbox](http://openbox.org/wiki/Main_Page) 和 [Fluxbox](http://fluxbox.org/)。某次，为了能更多进行纯键盘操作，我开始尝试转入平铺窗口管理器，并在研究其初始版本的时候学习了 [dwm](https://dwm.suckless.org/) 和 [awesome](https://awesomewm.org/)。
最终，由于 [xmonad](https://xmonad.org/)的灵活性、可扩展性以及使用纯 [Haskell](https://www.haskell.org/)（一种出色的函数编程语言）编写和配置，最终选择了它。一个例子是，我在家中运行一个 40" 4K 的屏幕，但经常会将它分为四个虚拟屏幕，每个虚拟屏幕显示一个工作区，每个工作区自动排列在我的窗口上。当然， xmonad 有一个对应的 [模块](http://hackage.haskell.org/package/xmonad-contrib-0.15/docs/XMonad-Layout-LayoutScreens.html)。
[dzen](http://robm.github.io/dzen/) 和 [conky](https://github.com/brndnmtthws/conky) 对我来说是一个非常简单的状态栏。我的整体 conky 配置看起来是这样的：
```
out_to_console yes
update_interval 1
total_run_times 0
TEXT
${downspeed eth0} ${upspeed eth0} | $cpu% ${loadavg 1} ${loadavg 2} ${loadavg 3} $mem/$memmax | ${time %F %T}
```
输入命令直接通过管道输入 dzen2：
```
conky | dzen2 -fn '-xos4-terminus-medium-r-normal-*-12-*-*-*-*-*-*-*' -bg '#000000' -fg '#ffffff' -p -e '' -x 1000 -w 920 -xs 1 -ta r
```
对我而言，一项重要功能是在完成工作后使终端发出蜂鸣声。只需要简单地在 zsh 中的 `PR_TITLEBAR` 变量中添加一个 `\a` 字符就可以做到，只要工作完成就可以发出蜂鸣声。当然，我使用了命令：
```
echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf
```
将 `pcspkr` 内核模块列入黑名单来禁用实际的蜂鸣声。相反 urxvt 的 `URxvt.urgentOnBell: true` 设置会将声音变为尖锐。之后 xmonad 有一个 urgency 钩子来捕捉这类信号，并且我可以使用组合键自动聚焦到当前的发出紧急信号的窗口。在 dzen 中我可以看到一个漂亮且明亮的 `#ff0000` 紧急窗口。
在我笔记本上所得到的最终成品是：
![Laptop screenshot](/data/attachment/album/202012/03/223915yh19a7t4ta9z1zlx.png)
我听说前几年 [i3](https://i3wm.org/) 变得非常流行，但它要求更多的手动窗口对齐而不是自动对齐。
我意识到也有像 [tmux](https://github.com/tmux/tmux/wiki) 那样的终端多路复用器，但我仍想要一些图形化应用程序，因此最终我没有有效地使用它们。
### 终端连续性
为了使终端保持活跃状态，我使用了 [dtach](http://dtach.sourceforge.net/) ，它只是模拟屏幕分离功能。为了使计算机上的每个终端都可连接和断开，我编写了一个小的封装脚本。 这意味着，即使必须重新启动 X 服务器，我也可以使所有终端都运行良好，包括本地和远程终端。
### Shell & 编程
对于 shell，我使用 [zsh](http://www.zsh.org/) 而不是 [bash](https://www.gnu.org/software/bash/)，因为它有众多的功能。
作为终端模拟，我发现 [urxvt](http://software.schmorp.de/pkg/rxvt-unicode.html) 足够轻巧，支持 Unicode 编码和 256 色，具有出色的性能。另一个重要的功能是可以分别运行 urxvt 客户端和守护进程。因此，即使大量终端也几乎不占用任何内存（回滚缓冲区除外）。
对我而言，只有一种字体看起来绝对干净和完美： [Terminus](http://terminus-font.sourceforge.net/)。 由于它是位图字体，因此所有内容都是完美像素，渲染速度极快且 CPU 使用率低。为了能使用 `CTRL-WIN-[1-7]` 在每个终端按需切换字体，我的 `~/.Xdefaults` 包含:
```
URxvt.font: -xos4-terminus-medium-r-normal-*-14-*-*-*-*-*-*-*
dzen2.font: -xos4-terminus-medium-r-normal-*-14-*-*-*-*-*-*-*
URxvt.keysym.C-M-1: command:\033]50;-xos4-terminus-medium-r-normal-*-12-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-2: command:\033]50;-xos4-terminus-medium-r-normal-*-14-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-3: command:\033]50;-xos4-terminus-medium-r-normal-*-18-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-4: command:\033]50;-xos4-terminus-medium-r-normal-*-22-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-5: command:\033]50;-xos4-terminus-medium-r-normal-*-24-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-6: command:\033]50;-xos4-terminus-medium-r-normal-*-28-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-7: command:\033]50;-xos4-terminus-medium-r-normal-*-32-*-*-*-*-*-*-*\007
URxvt.keysym.C-M-n: command:\033]10;#ffffff\007\033]11;#000000\007\033]12;#ffffff\007\033]706;#00ffff\007\033]707;#ffff00\007
URxvt.keysym.C-M-b: command:\033]10;#000000\007\033]11;#ffffff\007\033]12;#000000\007\033]706;#0000ff\007\033]707;#ff0000\007
```
对于编程和书写，我使用 [Vim](https://www.vim.org/) 语法高亮显示和 [ctags](http://ctags.sourceforge.net/) 进行索引，以及一些带有 `grep` 、`sed` 和其他用于搜索和操作的常用终端窗口。这可能不像 IDE 那样舒适，但可以实现更多的自动化。
Vim 的一个问题是你已经习惯了它的键映射，因此希望在任何地方都使用它们。
在 shell 功能不够强大时，[Python](https://www.python.org/) 和 [Nim](https://nim-lang.org/) 作为脚本语言也不错。
### 系统监控
[htop](https://hisham.hm/htop/) （查看当前站点的后台运行，是托管服务器的实时视图）非常适合快速了解软件的当前运行状态。 [lm\_sensors](http://lm-sensors.org/) 可以监控硬件温度、风扇和电压。 [powertop](https://01.org/powertop/) 是一款由 Intel 发布的优秀省电小工具。 [ncdu](https://dev.yorhel.nl/ncdu) 可以交互式分析磁盘使用情况。
[nmap](https://nmap.org/)、 iptraf-ng、 [tcpdump](https://www.tcpdump.org/) 和 [Wireshark](https://www.wireshark.org/) 都是分析网络问题的基本工具。