title:A general model of probabilistic packet marking for IP traceback
author:Liming Lu and
Mun Choon Chan and
Ee-Chien Chang
A General Model of Probabilistic Packet Marking
for IP Traceback
Liming Lu
Computing
National University of
Singapore
Mun Choon Chan
Computing
National University of
Singapore
Ee-Chien Chang
Computing
National University of
Singapore
Computer Science, School of
Computer Science, School of
Computer Science, School of
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
In this paper, we model Probabilistic Packet Marking
(PPM) schemes for IP traceback as an identiﬁcation prob-
lem of a large number of markers. Each potential marker
is associated with a distribution on tags, which are short
binary strings. To mark a packet, a marker follows its as-
sociated distribution in choosing the tag to write in the IP
header. Since there are a large number of (for example, over
4,000) markers, what the victim receives are samples from
a mixture of distributions. Essentially, traceback aims to
identify individual distribution contributing to the mixture.
Guided by this model, we propose Random Packet Marking
(RPM), a scheme that uses a simple but eﬀective approach.
RPM does not require sophisticated structure/relationship
among the tags, and employs a hop-by-hop reconstruction
similar to AMS [16]. Simulations show improved scalabil-
ity and traceback accuracy over prior works. For example,
in a large network with over 100K nodes, 4,650 markers in-
duce 63% of false positives in terms of edges identiﬁcation
using the AMS marking scheme; while RPM lowers it to
2%. The eﬀectiveness of RPM demonstrates that with prior
knowledge of neighboring nodes, a simple and properly de-
signed marking scheme suﬃces in identifying large number
of markers with high accuracy.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: Gen-
eral—security and protection; C.4 [Performance of Sys-
tems]: performance attributes
General Terms
Design, Performance, Security
Keywords
IP traceback, Probabilistic Packet Marking (PPM), entropy,
Random Packet Marking (RPM), DDoS, network security
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS ’08, March 18-20, Tokyo, Japan
Copyright 2008 ACM 978-1-59593-979-1/08/0003 ...$5.00.
1.
INTRODUCTION
In Distributed Denial of Service (DDoS) attacks, many
compromised hosts ﬂood the victim with an overwhelming
amount of traﬃc. The victim’s resources are exhausted and
services to users become unavailable. DDoS attacks par-
alyzed high-proﬁle web sites, including Yahoo, CNN and
Amazon, for hours to days in February 2000 [8]. In January
2001, DDoS attack was launched against the DNS server of
Microsoft and in October 2002, DDoS attack brought down
eight root DNS servers [12]. Most recently, in February 2007,
a DDoS attack was launched against the DNS root servers
in two phases, lasting for more than 7 hours in total [2].
During a DDoS attack, attack nodes often perform ad-
dress spooﬁng to avoid detection. An IP traceback mech-
anism aims to overcome address spooﬁng and uncover the
attack paths or sources. While traceback is motivated by
DDoS attacks, it also beneﬁts analysis of legitimate traﬃc.
Potential applications of traceback include traﬃc account-
ing and network bottleneck identiﬁcation. In Probabilistic
Packet Marking (PPM), routers probabilistically mark the
packets they transmit, so that the victim can trace the at-
tack paths up to their sources, based on the packets it re-
ceived[14]. A packet is marked by writing to the reusable
bits in the IP header. We call the strings written as tags.
In this paper, we present a general model
for PPM
schemes by formulating it as an identiﬁcation problem, in
which each node (or edge) marks packets probabilistically
according to an associated distribution on tags. Based on
a collection of received packets, the victim attempts to re-
cover the markers’ identities. Since there are multiple mark-
ers, this collection is made up of samples from a mixture of
the markers’ associated distributions. Hence, traceback is
essentially identiﬁcation of each individual distribution con-
tributing to the mixture. By viewing each distribution as
a point in a high dimensional space, we can see that this
model is closely related to the studies of collusion-resistant
codes and ﬁngerprinting[6, 18]. Thus, one may choose a
known collusion-resistant code to assign codewords to dif-
ferent markers. The main diﬀerence between traceback and
other applications of collusion-resistant ﬁngerprinting is the
scale of the problem. The number of markers can be more
than a thousand, which is much larger than typical applica-
tions of collusion-resistant ﬁngerprinting.
Guided by the model, we design a PPM scheme, called
Random Packet Marking (RPM). The marking process is
very simple, and is a direct implementation of the model.
The tags do not have sophisticated structure and relation-
ship. For example, many existing schemes divide the allo-
cated bits into groups and diﬀerent groups have diﬀerent
functionalities, like hop-count, hash value etc. In contrast,
RPM treats all bits equally. For reconstruction of the marker
identities, RPM employs a hop-by-hop reconstruction simi-
lar to AMS. Hence, some prior knowledge of network topol-
ogy is required. Simulation results show that RPM signiﬁ-
cantly outperforms AMS [16] in acquiring higher traceback
accuracy. Compare to schemes based on algebraic coding
[7], RPM has much lower reconstruction cost and achieves
higher scalability with the number of attackers and the num-
ber of packet markers.
The eﬀectiveness of RPM demonstrates that, with knowl-
edge of the neighboring nodes, it is not necessary to enforce
structures in the tags. In fact, these structures impose con-
straint on the choices of tags. Without the constraint, each
packet can carry more information and the chance of colli-
sion (that is, false positive) can be reduced.
The rest of the paper is organized as follow. Section 2
presents related work. The general model is described in
Section 3. The proposed traceback scheme and its evaluation
are described in Section 4. Section 5 discusses the potential
extensions of RPM. The conclusion is presented in Section
6.
2. RELATED WORK
Existing traceback schemes can be classiﬁed into two cat-
egories. 1. Routers are queried on the traﬃc they have
forwarded. The routers may not need to log packets. 2.
The receiver locally reconstructs the attack paths from a
collection of packets. Each packet carries partial path infor-
mation. The packets are either probabilistically marked by
routers or specially generated for traceback.
The ﬁrst category includes online query and variations of
hash based logging schemes [15, 10]. The second category in-
cludes variants of probabilistic packet marking (PPM) [14],
ICMP traceback (iTrace) [5], and algebraic encoding [7]. In
iTrace, routers sample packets with a small probability. A
sampled packet is duplicated in an ICMP packet, plus in-
formation of the router’s upstream or downstream neighbor
forming an edge with itself. Based on the ICMP packets, the
victim reconstructs the attack paths by linking up the edges.
Note that routers farther away generates fewer iTrace pack-
ets to the victim. A variant of iTrace, called intention-driven
iTrace [11], introduces an intension indicator to inform re-
mote routers to raise their probability in generating iTrace
packets.
Instead of adding network traﬃc, PPM probabilistically
embeds partial path information into packets. Savage et.al.
[14] proposed the Fragment Marking Scheme (FMS). Two
adjacent routers, forming an edge, randomly insert their in-
formation into the packet ID ﬁeld. The path information
thus spreads over multiple packets for reassembly. However,
for multiple attack paths, the computation overhead of path
reconstruction is high, due to explosive combinations of edge
connections. Subsequent proposals: Advanced and Authen-
ticated Marking Schemes (AMS) [16], Randomize-and-Link
(RnL) [9], and Fast Internet Traceback (FIT) [20] improve
the scalability and the accuracy of traceback. Dean et.al.
[7] adopted an algebraic approach for traceback, by encod-
ing path information as points on polynomials. The alge-
braic technique requires few marked packets per path for re-
construction. However, the processing delay on the marked
packets can be large if a long sequence of routers performs
marking. On the other hand, if short sequences of routers
perform marking, the reconstruction overhead will be large
due to combinatorial search. The scheme does not scale for
multiple attackers.
3. PPM MODEL
3.1 Problem Formulation
During a DDoS attack, a victim V receives an overwhelm-
ing amount of packets transmitted over multiple paths, each
at a packet rate greater than Ratt. A router along an attack
path can embed information of its identity into the packet
headers. We call such router a marker. Alternatively, the
router can embed information of its identity and the next
hop identity into the header. In this case, we treat the edge
as the marker. Let U be the set of all possible markers, and
M be the set of markers along the attack paths. Our goal is
to identify M among U. Let m = |M|, and n = |U|. Each
marker is allowed to mark L bits in a packet header1. The
PPM problem is interesting when 2L is smaller than n. The
problem thus becomes how to use multiple L-bit packets to
identify elements of M.
We measure the performance of a marking scheme by the
false negatives ratio α, which is ratio of the number of mark-
ers not correctly identiﬁed over m, and the false positives
ratio β, which is the ratio of the number of markers wrongly
declared as on attack paths over m.
3.2 Components of PPM
The operations of a PPM traceback scheme can generally
be divided into the following components: marking of pack-
ets by the routers, choice of tags used and reconstruction
using information from marked packets by the victim.
In
the following, for each of these components, we ﬁrst present
the general idea and then highlight the design of RPM.
3.2.1 Marking by Routers
In our model, each marker is associated with a distribu-
tion D on the L-bit tags. Such associations are pre-assigned
and ﬁxed throughout the marking and identiﬁcation process.
Consider a marker with identity i and its assigned distribu-
tion Di. When it receives a packet, the marker chooses with
probability , an L-bit tag s according to the distribution
Di and mark the packet with s.
The probability  is a parameter that is the same for every
marker. It is possible that some packets arrive at the victim
without being marked. We assume that the bits in those un-
marked packets are random and are uniformly distributed.
Since the marking process needs to be very eﬃcient, sam-
pling from the distribution Di must be a simple opera-
tion. Thus, in RPM and other related work, only uniform
distribution on a ﬁnite set is considered. Essentially, the
marker just randomly and uniformly picks a tag s from a
pre-assigned set. Let us write the probability density func-
tion of the distributions assigned to the marker with identity
i as Di. That is, Di(x) is the probability that the tag x ap-
pears in a packet marked by i. Since we assume that the
1Typically, as indicated in [14, 16, 7, 9, 20], the 16-bit packet
identiﬁcation ﬁeld in the IP header is used. The packet
identiﬁcation ﬁeld is used in less than 0.25% of the time to
re-assemble fragmented packets [17].
distribution is uniform on a ﬁnite set of tags, Di(x) = 0 or c
for some constants. Thus, WLOG, we can also represent Di
as a subset of L-bit tags. Let us write this set as Xi where
x ∈ Xi iﬀ Di(x) > 0.
3.2.2 Choice of Marking
Consider a set of markers P . The collection of tags re-
ceived by the victim follows a distribution which is a mixture
of the distribution associated to the markers in P . Deriving
the mixture distribution DP from P is not straightforward
due to the eﬀect of the probability . Suppose that the only
markers are P = {i1, i2}, where i1, i2 are along the same
path and i1 is nearer to the victim, then
DP (x) = Di1 (x) + ( − 2)Di2 (x) + (1 − 2 + 2)2
−L
for every tag x.
Consider two sets of markers, P and Q. Let DP and
DQ be the distribution of the tags received from P and Q
respectively. If DP = DQ then the victim is unable to dis-
tinguish whether the samples is from P or Q. If DP is close
to, but diﬀerent from DQ, an unreasonable large number of
packets may be required to distinguish them. Hence, as an
approximation, we take the mixture distribution of DP as:
DP (x) ≈ 
Thus, if (cid:88)
i∈P
Di(x) =