遥控器
193
看一下厂商的类
194
同时，回到餐厅…
197
研究餐厅的交互
198
对象村餐厅的角色和职责
199
从餐厅到命令模式
201
第一个命令对象
203
定义命令模式
206
命令模式与遥控器
208
实现遥控器
210
逐步测试遥控器
212
写文档的时刻到了
215
使用状态实现撤销
220
每个遥控器都需要Party模式！
224
使用宏命令
225
命令模式的更多用途：队列请求
228
命令模式的更多用途：日志请求
229
设计箱内的工具
230
习题解答
232
xviii
---
## Page 29
7
适配器模式与外观模式
随遇而安
在本章，我们将要进行一项任务，其不可能的程度，简直就
像是将一个方块放进一个圆洞中。听起来不可能？有了设计模式，就
有可能。还记得装饰者模式吗？我们将对象包装起来，赋予它们新的职责。而现
在则是以不同目的，包装某些对象：让它们的接口看起来不像自己而像是别的东
西。为何要这样做？因为这样就可以在设计中，将类的接口转换成想要的接口，
以便实现不同的接口。不仅如此，我们还要探讨另一个模式，将对象包装起来以
简化其接口。
欧州壁式插座
我们周围的适配器
236
面向对象适配器
237
适配器模式解析
241
定义适配器模式
243
?
对象和类的适配器
244
交流电送配器
今夜话题：对象适配器和类适配器
247
真实世界的适配器
248
将枚举适配到选代器
249
今夜话题：装饰者模式和适配器模式
252
标准的交范电描头
甜蜜的家庭影院
255
灯光、相机、外观！
258
构造家庭影院外观
261
定义外观模式
264
“最少知识”原则
265
设计箱内的工具
270
习题解答
272
Ase4.
xix
---
## Page 30
模板方法模式
封装算法
直到目前，我们的议题都绕着封装转；我们已经封装了对象创
建、方法调用、复杂接口、鸭子、比萨接下来呢？我们将
要深入封装算法块，好让子类可以在任何时候都可以将自己挂接进运算里。
我们甚至会在本章学到一个受到好莱坞影响而启发的设计原则。
快速搞定几个咖啡和茶的类
277
抽取咖啡和茶
280
更进一步的设计
281
i- 89a e870
抽象prepareRecipe()
282
咖啡
我们做了什么？
285
茶
把水贡涛
认识模板方法
286
把水烈沸
@风用水冲泡物啡粉
把时例选杯子
走，泡茶去
287
把基例进杯子
加
模板方法带给我们什么？
288
加柠燥
咖啡因饮料
定义模板方法模式
289
把水杰违
泛化
再靠近一点
290
对模板方法进行挂钩
292
把饮料例进杯子
子意进行
6 599的
使用钩子
293
咖啡？茶？执行测试程序
294
好莱坞原则
296
用沸水浸泡基叶
好莱坞原则和模板方法
297
+*32的98. i
加糖和牛价
荒野中的模板方法
299
用模板方法排序
300
来排序鸭子吧.
301
比较鸭子
302
观察鸭子排序的内部运作
304
写一个Swing的窗口程序
306
Applet
307
今夜话题：模板方法和策略
308
设计箱内的工具
311
习题解答
312
XX
---
## Page 31
9
送代器与组合模式
管理良好的集合
有许多种方法可以把对象堆起来成为一个集合。你可以把它们放进
数组、堆栈、列表或者是散列表（Hashtable）中，这是你的自由。每一种都有它
自己的优点和适合的使用时机，但总有一个时候，你的客户想要遍历这些对象，而
当他这么做时，你打算让客户看到你的实现吗？我们当然希望最好不要！这太不专
业了。没关系，不要为你的工作担心，你将在本章中学习如何能让客户遍历你的
对象而又无法窥视你存储对象的方式：也将学习如何创建一些对象超集合（super
collection），能够一口气就跳过某些让人望而生畏的数据结构。你还将学到一些
关于对象职责的知识。
对象村餐厅和对象村煎饼屋合并了
316
比较菜单的实现
318
所有菜单
可以封装遍历吗？
323
认识选代器模式
325
在餐厅菜单中加人一个选代器
326
鸟瞰目前的设计
331
利用java.util.Iterator来清理
333
这为我们带来什么好处？
335
定义选代器模式
336
单一责任
339
选代器与集合
348
Java5的选代器和集合
349
正当我们认为这很安全的时候
353
定义组合模式
356
利用组合设计菜单
359
实现组合菜单
362
闪回到选代器
368
空选代器
372
选代器和组合凑在一起的魔力
374
设计箱内的工具
380
习题解答
381
xxi
---
## Page 32
10
状态模式
事物的状态
基本常识：策略模式和状态模式是双胞胎，在出生时才分开。
你已经知道了，策略模式是围绕可以互换的算法来创建成功业务的。然而，状态走
的是更崇高的路，它通过改变对象内部的状态来帮助对象控制自己的行为。它常常
告诉它的对象客户“跟着我念：我很棒，我很聪明，我最优秀了……”
如何实现状态？（办公室隔间对话）
387
状态机101
388
状态机代码的第一个版本
390
该来的躲不掉变更请求！
394
万能糖某公司
混乱的状态
396
定义状态接口和类
399
实现我们的状态类
401
重新改造糖果机
402
定义状态模式
410
状态vs.策略模式
411
精神检查
417
我们差点儿忘了！
420
设计箱内的工具
423
习题解答
424
PDG
xxii
---
## Page 33
11
代理模式
控制对象访问
玩过扮白脸、扮黑脸的游戏吗？你是一个白脸，提供很好且很友善的服
务，但是你不希望每个人都叫你做事，所以找了黑脸控制对你的访问。这就是代
理要做的：控制和管理访问。就像你将看到的，代理的方式有许多种。代理以通过
Internet为它们的代理对象搬运的整个方法调用而出名，它也可以代替某些懒情的
对象做一些事情。
监控糖果机
430
远程代理的角色
434
Not
RMI浏览
437
Hot
GumballMachine远程代理
450
代理幕后花絮
458
定义代理模式
460
准备虚拟代理
462
设计CD封面虚拟代理
464
虚拟代理的幕后花絮
470
使用JavaAPI的代理
474
五分钟短剧：保护主题
478
创建动态代理
479
代理动物园
88
设计箱内的工具
491
习题解答
众
492
代理或在老含用个类
PD
xxii
---
## Page 34
12
复合模式
模式中的模式
谁料得到模式居然可以携手合作？你已经见识过围炉夜话的火爆场面
（幸好，出版社事先请我们删除“死神来访”模式的篇章，好让本书不需附上“12
岁以下读者必须家长陪同阅读”的警告标语，所以你没见识到闹出人命的那一集围
炉夜话），谁料得到模式居然可以携手合作？这实在是太意外了。信不信由你，有
一些威力强大的00设计同时使用多个设计模式。准备让你的模式技巧进入下一个
层次，现在是复合模式的时间。
复合模式
500
与鸭子重聚
501
加人一个适配器
504
加人一个装饰者
506
加入一个工厂
508
加入一个组合和一个选代器
513
加入一个观察者
516
模式概览
523
鸭瞰：类图
524
Setses#+.!
模型-视图-控制器之歌
526
视图
rv&:20.
UAF-
设计模式是MVC的钥匙
528
戴着模式的有色眼镜看MVC
532
d±#$X.5
利用MVC控制节拍..
534
84 ta2 22
模型
3
537
视图
539
控制器
众
542
探索策略
545
适配模型