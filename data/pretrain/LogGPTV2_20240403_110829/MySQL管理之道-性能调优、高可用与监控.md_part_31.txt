Slave haa read all reiay iog: soiting for the siave I0 thread to update
Waiting for an event from Coordinator
Waiting for an event from Ccordinator
init
Waiting for an event from Coordinator
CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE can be e
---
## Page 231
Checkpoint_master_log_pos:2951570
Checkpoint_master_log_name:mysql-bin.000003
Checkpoint_relay_log_name:./mysql5_6-relay-bin.000009
Checkpoint_master_log_name:mysql-bin.000003
Checkpoint_relay_log_name:./mysql5_6-relay-bin.000009
Checkpoint_master_log_pos:0
Checkpoint_master_log_name:
Checkpoint_relay_log_pos:0
Checkpoint_relay_log_name:
Checkpoint_master_log_pos:0
Checkpoint_master_log_name:
Checkpoint_relay_log_name:
Checkpoint_relay_log_pos:2951772
*****
Checkpoint_relay_log_pos:0
Checkpoint_group_bitmap:
Checkpoint_group_size:64
Checkpoint_group_size:64
Checkpoint_seqno:5
Checkpoint_seqno:0
Checkpoint_seqno:1
Checkpoint_seqno:0
master_log_pos:2954432
master_log_name:mysql-bin.000003
master_log_pos:0
master_log_name:
master_log_pos:2090832
Relay_log_name:./mysql5_6-relay-bin.000009
master_log_name:
Relay_log_pos:2954634
Relay_log_name:./mysql5_6-relay-bin.000009
Relay_log_name:
Relay_log_name:
Relay_log_pos:2091034
Relay_log_pos:0
Relay_log_pos:0
Worker_id:1
Worker_id:3
master_id:165
Worker_id:2
master_id:165
master_id:165
第5章性能调优·217
---
## Page 232
218◆第二部分故障诊断与性能优化篇
线程，3个库slave就有2个IO/SQL线程，依次类推。
写操作时，slave上就会开启多线程复制，减少了同步延时。2个库slave就有2个IO/SQL
么会使用多线程复制。尽可能地把一个库中的表按照业务逻辑拆分成多个库保存，这样在
注意
如果一个库有N个请求，那么不会使用多线程复制，但是如果两个库有N个请求，那
在改为InnoDB引擎后，可防止表损坏，在损坏后也可自行修复。
会将master.info和relay.info保存在表中，默认是MyISAM引擎，官方建议用：
此外，
mysql> show slave status\G;
可以看到，有两个Worker_id的数值在不断变化，也就是说多线程复制就开始起作用了。
假设同步复制报错了，信息如下：
1.MySQL5.6GTID模式，同步复制报错不能跳过解决方法
alter tableslave_worker_infoengine=innodb;
altertableslave_relay_log_infoengine=innodb;
altertable slave_master_infoengine=innodb;
master_info_repository=TABLE
relay_log_info_repository=TABLE
4rows in set(0.01 sec)
Replicate_Wild_Ignore_Table:
Checkpoint_group_bitmap:
Replicate_Wild_Do_Table:
Replicate_lgnore_Table:
Relay_master_Log_File:mysql-bin.000001
Replicate_Do_Table:
Replicate_gnore_DB:mysql
Read_master_Log_Pos:552
slave_SQL_Running:N
Replicate_Do_DB:
master_Log_File:mysql-bin.000001
Relay_Log_Pos:519
Relay_Log_File:M2-relay-bin.000002
slave_IO_State:Waitingformasterto sendevent
Connect_Retry:60
Last_Errno:1032
master_Port:3306
master_User:repl
master_Host:192.168.8.25
---
## Page 233
就必须把事务ID设置为空值。
提示
GTID as the transaction
Error_code:1032;handlererrorHA_ERR_KEY_NOT_FOUND;theevent'smasterlogmysql-bin.00oo01,end_log_pos521
Error_code:1032;handlererrorHA_ERR_KEY_NOT_FOUND;the
由于是运行在 GTID 模式下，所以不支持 sql_slave_skip_counter 语法，如果你想跳过,
GTID_MODE=ON.Instead,for eachtransaction that you want to skip,generate anempty transactionwith the same
ERROR1858(HYooo):sq_slave_skip_countercannot be set when the serverisrunningwith
这里提示删除的主键不存在同步报错，由于是测试机，于是直接跳过：
1 row in set (0.02 sec)
cf716fda-74e2-11e2-b7b7-000c290a6b8f:1
master_SSL_Verify_Server_Cert:No
mysql>setglobal sql_slave_skip_counter=1;
Replicate_Ignore_Server_Ids:
Last_SQL_Error_Timestamp:13061123:07:02
Last_io_Error_Timestamp:
slave_SQL_Running_State:
Seconds_Behind_master:NULL
SQL_Remaining_Delay:NULL
master_Retry_Count:86400
Exec_master_Log_Pos:309
Retrieved_Gtid_Set:cf716fda-74e2-11e2-b7b7-000c290a6b8f:1-2
master_SSL_Crlpath:
master_SSL_CA_Path:
master_SSL_CA_File:
master_SSL_Allowed:No
Executed_Gtid_Set:562935a3-74f5-11e2-b830-000c29ba57f2:1-3,
master_SSL_Cipher:
master_Info_File:/usr/local/mysql/data/master.info
master_Server_Id:25
master_SSL_Cert:
master_SSL_Crl:
master_SSL_Key:
Auto_Position:1
Last_SQL_Error:CouldnotexecuteDelete_rows eventontabletest.test;Can'tfindrecord in'test
Last_SQL_Errno:1032
Until_Log_Pos:0
Until_Log_File:
Until_Condition:None
Last_lO_Error:
Last_I0_Errno:0
Skip_Counter:0
master_Bind:
master_UUID:cf716fda-74e2-11e2-b7b7-000c290a6b8f
SQL_Delay:0
Last_Error:CouldnotexecuteDelete_rowsevent
event'smaster
ont
log mysql-bin.00001,end_log_pos521
table test.test；Cantfindrecord in'test',
第5章性能调优·219
---
## Page 234
220·第二部分故障诊断与性能优化篇
务就可以了，如下所示：
cf716fda-74e2-11e2-b7b7-000c290a6b8f:2这个事务时报错了，这时，只需跳过这个错误事
这两行内容，
根据在show slave stauts\G得到的信息，观察Retrieved_Gtid_Set和Executed_Gtid_Set
mysql> show slave status\G;
然后执行“show slave statusIG;”命令确认一下：
mysql>SET GTID_NEXT=cf716fda-74e2-11e2-b7b7-000c290a6b8f:2';
Executed_Gtid_Set:cf716fda-74e2-11e2-b7b7-000c290a6b8f:1
Retrieved_Gtid_Set:cf716fda-74e2-11e2-b7b7-000c290a6b8f:1-2
QueryOK,0rowsaffected(0.10sec)
mysql>startslave;
Query OK,0rows affected(0.02sec)
mysql>SET GTID_NEXT="AUTOMATIC";
QueryOK,0rows affected(0.02sec)
QueryOK,0rows affected(0.01sec)
mysql>begin;commit;
QueryOK,0rowsaffected(0.01sec)
Query OK,0rows affected (0.07 sec)
mysql>stop slave;
Replicate_Wild_lgnore_Table:
Replicate_Wild_Do_Table:
Replicate_lgnore_Table:
Relay_master_Log_File:mysql-bin.000001
Replicate_lgnore_DB:mysql
Read_master_Log_Pos:552
，第一行代表接收到的事务，第二行代表已经执行完的事务。也就是说在执行
Replicate_Do_Table:
slave_SQL_Running:Yes
slave_I0_Running:Yes
Replicate_Do_DB:
master_Log_File:mysql-bin.000001
Relay_Log_Pos:448
Relay_Log_File:M2-relay-bin.000003
slave_io_State:Waitingformasterto sendevent
Connect_Retry:60
master_Port:3306
Last_Errno:0
master_User:repl
master_Host:192.168.8.25
Last_Error:
---
## Page 235
数
由于之前是GTID同步复制模式，现在要转为传统模式，因此会报错，如下所示：
并重启MySQL数据库：
OK！已经跳过去了，同步复制正常。
master_SSL_Verify_Server_Cert:No
#enforce-gtid-consistency=ON
#gtid-mode=ON
要将MySQL5.6GTID模式转为传统模式，
2.MySQL5.6GTID模式转为传统模式
1row in set(0.02 sec)
cf716fda-74e2-11e2-b7b7-000c290a6b8f:1-2
Replicate_Ignore_Server_Ids:
Last_SQL_Error_Timestamp:
Last_IO_Error_Timestamp:
slave_SQL_Running_State:slavehasreadallrelaylog;waitingforthe slavel/Othreadtoupdateit
Seconds_Behind_master:0
SQL_Remaining_Delay:NULL
Exec_master_Log_Pos:552
master_Retry_Count:86400
Retrieved_Gtid_Set:cf716fda-74e2-11e2-b7b7-000c290a6b8f:1-2
master_SSL_Crlpath:
master_SSL_Cipher:
master_SSL_CA_Path:
master_SSL_CA_File:
master_SSL_Allowed:No
Executed_Gtid_Set:562935a3-74f5-11e2-b830-000c29ba57f2:1-3,
master_Server_Id:25
master_Info_File:/usr/local/mysql/data/master.info
master_SSL_Crl:
master_SSL_Key:
master_SSL_Cert:
Relay_Log_Space: 1260
Until_Log_Pos:0
Until_Condition:None
Auto_Position:1
Last_SQL_Error:
Until_Log_File:
ast_SQL_Errno:0
Last_10_Error:
Last_10_Errno:0
Skip_Counter:0
master_Bind:
master_UUID:cf716fda-74e2-11e2-b7b7-000c290a6b8f
SQL_Delay:0
，首先要在my.cnf配置文件里注释掉以下参
第5章性能调优·221
---
## Page 236
222
·第二部分故障诊断与性能优化篇
bin.000001',MASTER_LOG_POS=120;
Query OK,0rows affected,2warnings(0.16 sec)
这样就顺利执行了。
MASTER_HOST='192.168.8.25',MASTER_USER='repl',MASTER_PASSWORD='repl',MASTER_LOG_FILE='mysql-
mysql> CHANGE MASTER TO
那么，我们要使用一个技巧：
ERROR1776(HY000):Parametersmaster_LOG_FILE,master_LOG_POS,
MASTER_HOST='192.168.8.25',master_USER='repl,
mysql>CHANGEmaster TO
QueryOK,0rowsaffected(0.19sec)
mysql>changemastertoMASTER_AUTO_POSITION=O;
MASTER_AUTO_POSITIONisactive.
RELAY_LOG_FILEandRELAY_LOG_POScannotbesetwhen
->MASTER_LOG_POS=120;
->MASTER_PASSWORD='repl',master_LOG_FILE='mysql-bin.000001',
---
## Page 237
极大地延长了恢复时间。
的失败），并且它们必须沿着从全备份到依次增量备份的时间顺序逐个反推恢复，因此这就
具有上一次全备份和所有增量备份的磁带（一旦丢失或损坏其中的一盘磁带，就会造成恢复
备份的数据量不大，备份所需的时间很短。但增量备份的数据恢复是比较麻烦的。您必须
的binlog文件，依次类推。这种备份方式最显著的优点就是：没有重复的备份数据，因此
增加和修改的binlog文件；第二次增量备份的对象是进行第一次增量备份后所增加和修改
次相比增加或被修改的binlog文件。这就意味着，第一次增量备份的对象是进行全备后又
另外，由于每次需要备份的数据量相当大，因此备份所需的时间也较长。
的恢复时间。然而它的不足之处在于，各个全备份磁带中的备份数据存在大量的重复信息
式最大的好处就是只要用一盘磁带，就可以恢复丢失的数据。因此大大加快了系统或数据
中就是用一盘磁带对整个系统进行完全备份，包括其中的系统和所有的数据。这种备份方
影响最终的恢复结果。
大程度上依赖于备份的情况。此外，数据库管理员在恢复时采取的步骤正确与否也会直接
的过程，而恢复只在发生事故后进行，恢复可以看做是备份的逆过程，恢复程度的好坏很
可能的情况进行严格测试，只有这样才能保证数据的高可用性。数据库的备份是一个长期
员应针对具体的业务要求制定详细的数据库备份与灾难恢复策略，并通过模拟故障对每种
行、证券、电信等，如果发生意外停机或数据丢失，损失会十分惨重。对此，数据库管理
作为信息系统的核心担当着重要的角色。尤其是在一些对数据可靠性要求很高的行业如银
增量备份，是指在一次全备份或上一次增量备份后，以后每次的备份只需备份与前一
按照备份方式可分为三种：冷备份、热备份和逻辑备份。
随着办公自动化和电子商务的飞速发展，企业对信息系统的依赖性越来越高，数据库
口冷备份，此时数据库处于关闭状态，能够较好地保证数据库的完整性。
完全备份，是指对某一个时间点上的所有数据或应用进行的一个完全复制。实际应用
MySQL备份种类可分为两种：完全备份和增量备份。
备份与恢复
第6章
---
## Page 238
224◆第二部分故障诊断与性能优化篇
6.2
logfile2）复制到磁带机或者本地的另一块硬盘里。
复时也最为简单。通常通过直接复制物理文件来实现冷备份。
6.1
slave 机器上做备份，下面依次介绍一下上面介绍的这三种备份与恢复方式。
第二步，把data数据目录（包含ibdata1）和日志目录（包含ib_logfile0,ib_logfile1,ib_
冷备份一般用于非核心业务，这类业务一般都允许中断，冷备份的特点是速度快，恢
mysqldump-q-d--skip-triggers
在只需要导出表结构的时候，采用如下命令：
如果要导出的是一个库中的某几个张表，可采用如下命令：
如果只是要导出其中的某几个数据库，则采用如下命令：
如果需要导出所有数据库，命令如下：
逻辑备份一般用于数据迁移或者数据量很小时，逻辑备份采用的是数据导出的备份方式。
/etc/init.d/mysqlstart
第二步，启动MySQL服务进程。命令如下：
第一步，用复制的数据目录和日志目录替换原有的目录。
第一步，关闭MySQL服务进程。命令如下：
一般情况，在生产环境中会将MySQL配置为一主一从，为了避免影响业务，建议在
口逻辑备份，使用mysqldump命令从数据库中提取数据，并将结果写到一个文件上，
口热备份，数据库正处于运行状态，这种备份方法依赖于数据库的日志文件。
mysqldump-q--single-transaction-Btest1test2>test1_test2.sql
mysqldump-q--single-transaction-Btest1test2>test1_test2.sql
mysqldump-q--single-transaction-A>all.sql
1．备份过程
2.恢复过程
/etc/init.d/mysqlstop
1．备份过程
逻辑备份
文件内容为纯文本的 SQL语句。
冷备份
---
## Page 239
dump 数据，建立新的 slave，其目的是为了防止对主库造成过大压力。
6.2.1
在MySQL5.5里，新增加了一个重要参数，即--dump-slave，使用该参数可在 slave 端
mysql>show slave status\G;
下面来查看同步复制信息，得到复制的binlog和POS 点，注意其中的加粗字体：
或者登录到 MySQL 里，执行“source all.sql;"。
MySQL-uroot-p123456all.sql
要想在线建立一台新的 slave，请采用如下命令：
mysqldump-q-single-transaction--skip-triggers-t
只需要导出数据时，采用如下命令：
mysqldump-q-Etdn--skip-triggers
只需要导出事件时，采用如下命令：
mysqldump-q-tdn--triggers
如果只需要导出触发器，可采用如下命令：
mysqldump-q-Rtdn-skip-triggers
在只需要导出存储过程的时候，采用如下命令：
mysqldump增加了一个重要参数
Replicate_Wild_Do_Table:
Replicate_Ignore_Table:
Relay_master_Log_File:mysql-bin.002810
Replicate_Do_Table:
Replicate_Ignore_DB: