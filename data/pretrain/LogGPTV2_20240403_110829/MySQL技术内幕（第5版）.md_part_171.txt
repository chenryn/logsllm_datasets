口
--information或-i
面形式的语句：
如果把n指定在-A之后，则它们之间不允许有空格；否则，该值将无法得到正确识别。
AUTO_INCREMENT 值等于n的行，则从更大的值开始)。如果没有指定n值，则此选项将把
无法解决的问题。此外，--safe-recover使用的磁盘空间也比--recover 少。
此选项执行恢复操作的速度，比使用--recover 的慢，但是它能够解决一些--recover 选项
外，它可以修复大部分的问题。
对表进行常规的修复操作。除了只允许包含唯一值的索引里出现了重复值的情况无法处理以
此选项可以让表不被标记为已检查。
文件，可以指定两个--quick 选项。
当同时指定这两个选项时，数据文件并不会被更改。如果想在找到重复键值时强制修改数据
当此选项与--recover 配合使用时，可以达到比单独使用--recover 选项更快的修复效果。
--quick或-q（布尔值）
使用非并行方式重建索引的速度更快，但是此选项目前处于试验阶段。
执行的恢复操作与--recover 选项的一样，但是它会使用多线程并行重建索引。这种方式比
--parallel-recover或-p
与数据文件的索引列所计算出来的CRC值进行比较。
使用一种比--extend-check 更快的方法对表进行检查，只是检查不太彻底。这种检查模
--medium-check 或-m
对于大于n个字节的行，
--max-record-length=n
3个索引。）值为O时，表示禁用所有的索引，这样做可以改善INSERT、DELETE和UPDATE
此选项需要与--recover 选项配合使用。其中，n是一个位掩码，它表明的是需要使用哪些
--keys-used=n或-kn
设
--read-only或-T
操
索
显示与表内容有关的统计信息。
选项所做的一样。
--recover选项自动重启。此外，myisamchk还会更新该表的状态，跟--update-state
如果你在检查表时使用了--force 选项，那么当myisamchk 发现表有问题时，会带上
临时文件已存在也要强制运行。（另一种做法是手动移除临时文件。）
为你在以前调用的 myisamchk 仍在执行的时候，强行终止了它，在这种情况下，文件也可
发现已经存在有一个名为tbl_name.TMD的文件，则它会在显示一条出错信息之后退出，
ALTER TABLE
一个AUTO_INCREMENT值，设置成一个比该表里存储的当前最大编号值还要大的值。
设置 AUTO_INCREMENT计数器，使后续的序列编号值从n开始（如果表的各行里包含有
能满足大部分的情况。中等检查模式的工作原理是：先计算索引键值的CRC值，
恢复正常的索引行为。
作的性能。重新打开这些索引（即指定一个掩码，启用与每个索引相对应的那个二进制位）
引。第1个索引对应的是第0位。（例如，6的二进制表示为110，表明应该使用第2个和第
安全移除。如果确认属于此种情况，可以使用--force选项告知myisamchk程序，即使
tbl_name AUTO_INCREMENT = n;
：如果不能为其分配内存，则将其忽略掉。
F.3  myisamchk
，然后将它们
733
因
三
---
## Page 754
事项多加注意。
F.3.3myisamchk 的变量
734
key_buffer_size
ft_stopword_file
ft_min_word_len
 ft_max_word_len
decode_bits
下面这些myisamchk变量都可以根据F.2.1.2节的说明进行设置。
--wait或-w
--update-state 或-U
用于FULLTEXT索引的停用字文件。默认使用内置的停用字列表。
包括在 FULLTEXT索引里的单词的最小长度。更短的单词会被忽略掉。默认值为4。
包括在FULLTEXT索引里的单词的最大长度。更长的单词会被忽略掉。默认值为 84。
--unpack或-u
--tmpdir=dir_name或-t dir_name
--start-check-pos=n
对表强制执行排序恢复，即使执行此操作所必需的临时文件可能会变得很大也一样执行。
--sort-recover或-n
口
--sort-index或-S
--set-collation=collation
较多的内存。一般情况下，默认值9就能满足需要。
在对压缩表进行解码时所使用的二进制位的个数。该值越大，解码操作也越快，但是会占用
从位置n开始读取数据文件。
对索引块进行排序以加快随后的检索操作所产生的顺序块的读取速度。
索引块所使用的缓存区长度。（它只适用于--safe-recover，而不能用于--recover 或
间是10秒，然后，如果还是未获得锁，则会显示一条出错信息。
如果表被锁定，则等待其变得可用为止。如果不使用-wait选项，
only-changed选项调用myisamchk的操作变得更加高效。
则会被标记为需要修复。对于那些完好的表，利用此选项可以使随后带上--check-
对存储在表内部的状态标志进行更新。完好的表将被标志为一切正常，而对于有错误的表，
式。它不能与--quick或--sort-records一起使用。
该变量未设置，则使用/tmp 的值。
得更快。当第一次对表执行这种操作时，它可能非常慢，因为各个行都还是无序的。ALTER
--sort-records=n或-Rn
字符集名。
在对表索引项进行重建和排序时，可以用此选项来指定排序规则。排序规则名隐含了所用的
--sort-recover。）默认大小为512KB。
对 myisampack压缩后的表进行解压缩。此选项可以用于把压缩后的只读表转换为可修改形
Unix里，目录名之间要用冒号隔开；在Windows里，目录名之间要用分号隔开。
它用来指定存放临时文件的目录的路径名。此选项的默认值为环境变量TMPDIR的值；如果
根据数据行在第n个索引中的顺序对它们进行排序。随后基于指定索引的检索操作应该会变
附录FMySQL程序参考
。此选项仅用于调试操作。
，此选项的值可以是一个目录列表，值将被循环使用。在
，myisamchk 等待选项的时
---
## Page 755
人与之配对的结束引号。类似地，
行时，它们会被显示出来。
符，它显示在每条语句的最开始。其他的提示符都是辅助提示符，当需要获得当前语句的更多内容
\G也可以用作语句结束标志，但是它使语句结果被“垂直”格式化（即每个输出行对应一个列值）。
rmysql会把该语句发送到服务器，然后显示结果，并再次显示提示符以表明正在等待下一条语句。
以用键盘键入它（如有必要，可以跨多个行)，然后，键入一个分号（；）或\g以表明该语句结束。
令行的输入重定向到了该文件的话。例如：
者使用USEdb_name语句来指定一个默认数据库。
参数，则mysql在启动时将没有默认数据库，此时，你必须使用数据库名来限定所有的表引用，或
F.4mysql
其中，提示符'>和">表明的是，你在上一行输入了一个单引号或双引号字符串，但是尚未输
不同的 mysql 提示符表明等待输入的内容也会不一样，如下表所示。mysql>提示符是主提示
mysq1可以交互运行。也可以将它用在批处理模式下，执行保存在文件里的语句，如果你将命
在交互模式下，mysql会显示一个 mysql>提示符，以表明正等待输人。如果要执行语句，可
%mysql -u sampadm-p -h cobra.snake.net sampdb 
提示符
>提示符表明的是一个还未最终引起的标识符。/*>提示符表明
等待输入完成一个/*..*/注释
在当前语句里等待输入完一个引起来的标识符
在当前语句里等待输入完一个双引号字符串
在当前语句里等待输入完一个单引号字符串
等待输人当前语句的下一行
等待输入新语句的第一行
含义
F.4   mysql
735
---
## Page 756
F.4.2
F.4.1mysql 支持的标准选项
因此在mysql里也可以利用它们。与编辑命令有关的信息请参考1.5.2.1节。
在Windows平台上，mysql程序并没有提供行编辑功能。但是，Windows 自己支持多种编辑命令，
/dev/null的符号链接，或者将MYSQL_HISTFILE设置/dev/null。
保存历史文件，可以删除.mysql_history 文件；然后，创建一个名为.mysql_history 的指向
定它。对此文件的访问应该有所限制，以防止其他用户看到它的内容，请参考F2.2.1节。如果不想
此文件位于主目录里，名字为.mysql_history。你可以通过环境变量 MYSQL_HISTFILE 来显式指
消当前语句。
要退出这种字符串收集模式时，需要根据提示符输入相应的引号或注释结束符，然后输入\c以取
这些提示符时，很可能是因为你忘记了结束字符串、标识符或注释。如果属于此种情况，那么想
的是看到了一个用/*作为开头的/*，
--batch、
736
在支持输入编辑库的系统里，语句可以从命令历史里调出来再次执行，也可以进行编辑修改。
有些选项会禁止使用历史文件。一般情况下，那些表明以非交互方式使用 mysql的选项（如
--auto-rehash（布尔值）
在 Unix里，当以交互模式使用 mysql 时，它会将语句保存到一个历史文件里。默认情况下，
----binary-mode（布尔值）
口
-I等同于-help。
指定多个--silent 和--verbose 选项，可以加强它们的效果。
对这些选项的概要描述请参考F.2.1节。mysq1 也支持F.2.1.1节列出的那些标准 SSL选项。
果想屏蔽掉这些标题，可以使用--skip-column-names 选项。
--default-character-set
--bind-address
禁止将\r\n 转换成\n，以及将\0解释成语句终止符。此选项主要适用于这样的情形：使用
电子表格应用）做进一步的处理。默认情况下，查询结果会包含一个列标题作为第一行。如
列值之间用制表符隔开）显示查询结果。这种格式的输出内容非常适合导入进其他的程序（如
以批处理方式运行。mysql会以制表符分隔的格式（每一个行都单独占用一个显示行，各个
--batch或-B
在 MySQL 5.5.3里引入的。
对于超出最大宽度的查询结果，可以使用自动垂直输出样式。请参考--vertical。此选项是
如果禁用了散列计算，在启动 mysql 之后又想要启用名字自动完成功能，则可以在 mysql>
用。使用--skip-auto-rehash 选项可以禁止散列计算，如此一来可以使 mysql 的启动速
默认情况下，名字散列处理的开关是打开的，但是只有选择了默认数据库之后，它才会起作
便会自动完成这个名字（如果没有歧义的话）。再按一下Tab键，会看到各种可能的完成内容。
完成这些名字的数据结构：当输入语句时，只要键入名字的开始部分,然后按一下Tab键,mysql
度
在 mysql启动时，它会对数据库名、表名和列名进行散列处理，目的是要构造一个可以快速
mysql 特有的选项
附录FMySQL 程序参考
更快，尤其是在有很多表的时候。
--html和--qiuck）都会如此。
.*/注释，但是还没有输入结尾的*/。一般情况下，
-user
，当看到
---
## Page 757
--named-commands 或-G（布尔值）
口
口
口
口
口
口
口
口
口
口
口
--column-names（布尔值）
许出现在辅提示符的后面。也就是说，它们不能出现在多行语句的第二行及后面的行里。
named-commands 选项禁用了此功能，则长格式命令只允许出现在主提示符的后面，而不允
在所有输入行的开头部分启用长形式的 mysql内部命令。
如果服务器经过配置不允许使用LOCAL功能，则此选项将不会有任何效果。
之
启用或者禁用LOAD DATALOCAL 语句。LOCAL功能虽然已经存在，但默认是禁用的。如果
--local-infile（布尔值）
--skip-line-numbers 选项。
行的语句。与指定语句字符串有关的更多信息，请参考对--execute的描述。
指定一条在连接上MySQL服务器之后（如果启用了自动重连，则可能是在重新连接之后）执
--init-command=stmt
括号必须紧跟在函数名的后面，其中间不允许有间隔。此选项还会使函数名被当作保留字。
让服务器忽略内置函数名与引入参数表的那个左括号“（”之间的空格。默认情况下，那个左
此选项等同于--safe-updates。
--i-am-a-dummy（布尔值）
--line-numbers（布尔值）
--ignore-spaces 或-i
生成HTML输出。
1--html或-H（布尔值）
继续处理语句，而无视发生的错误。
通常情况下，当mysql从文件读取语句时，如果发生错误，它会立即退出。此选项可以使mysql
1--force或-f（布尔值）
令行参数。如果要指定多条语句，可以在stmt值里使用分号将它们分隔开。
执行语句并退出。将语句用引号引起来，可以防止 shell程序（命令解释器）将其当作多个命
--execute=stmt或-e stmt
设置语句分隔符。默认分隔符为分号（“；")。
--delimiter=str
把 db_name 当作默认数据库。
注释都会被去除掉（与指定--skip-comment 的效果一样)。
对于那些包含注释的语句，可以在把这些语句发送到服务器时包含注释。默认情况下，所有
在查询输出里包含结果集元数据。
两次指定--silent也可以达到同样的效果。
把列名显示成查询结果里的列标题。
在MySQL5.6.3里引入的。
互方式使用mysql时，此选项也会禁止各种命令（charset 和 delimiter 除外）。此选项是
mysql 来处理 mysqlbinlog 的输出（其中可能包含像 BLOB 值那样的任意数据)。当以非交