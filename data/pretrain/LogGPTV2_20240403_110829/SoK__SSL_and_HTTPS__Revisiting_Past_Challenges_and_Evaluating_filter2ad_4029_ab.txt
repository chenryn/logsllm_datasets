### 5M. Ray, "Authentication Gap in TLS Renegotiation," Extended Subset (blog), 4 Nov 2009.

**Authorized Use:**
- **Licensed to:** IEEE Xplore
- **Downloaded on:** March 18, 2021 at 11:51:35 UTC
- **Restrictions apply.**

---

### A. Certification

A web certificate binds a public signing key to an 'identity.' The binding's correctness is asserted through a digital signature by a Certificate Authority (CA), which is expected to maintain the accuracy of the binding over time. TLS enables client software to establish a confidential channel with the entity holding the private key associated with the certificate.

**Essential Attributes:**
- All HTTPS server certificates must include a domain name controlled by the certificate holder. This is typically placed in the `commonName` (CN) attribute under `Subject`, unless one or more domains are indicated in the `subject alternative name` field in an X.509 extension.
- If an entity requests a certificate for a domain name, the CA will challenge the requester to demonstrate control over the domain. This assumes that domain names are correctly mapped to the webserver (IP address) via DNS. Such certificates are called Domain Validated (DV) certificates.

**Additional Information:**
- Issued certificates may include additional CA-verified information, such as organization name and postal address.
- Validation procedures have become more automated over time, leading to the establishment of Extended Validation (EV) certificates by the CA/Browser Forum. EV certificates require rigorous human validation of a site’s identity and business registration details.

**Security Issues (Certification):**
- **Hostname Validation (CAs):** Automated domain validation services typically send a validation email to a fixed email address associated with the CN's top-level domain or from the CN's WhoIS record. Disruptions to DNS records can result in improperly issued certificates. For example, a certificate for Microsoft's login page was wrongfully issued due to a publicly accessible email address.
- **Hostname Validation (Clients):** While browsers validate the hostname, some non-browser software, such as mobile applications and cloud clients, may lack proper validation. Studies have found numerous instances of inadequate hostname validation in various applications.
- **Parsing Attacks:** Flaws in parsing can lead to improper issuance and validation of certificates. For instance, a CN containing a null character (e.g., `bank.comØevil.com`) can be misinterpreted, leading to security vulnerabilities.

**EV Downgrading:**
- Despite the enhanced validation of EV certificates, a site with an EV certificate can be downgraded to normal HTTPS through a man-in-the-middle (MITM) attack using a fraudulent DV certificate. Adversaries can also use "rebinding" attacks to display the EV certificate, consistent with browser origin policies.

---

### B. Anchoring Trust

Validating that a certificate request comes from the specified entity is a crucial CA function. Given the lack of a single entity with universal control over all namespaces, a spectrum of CAs exists, with most site certificates issued by commercial CAs tied to the security or domain registration industries.

**Trust Anchors:**
- Software vendors (e.g., Microsoft, Apple, Mozilla, Opera) configure a default list of self-signed CA certificates as trust anchors in operating systems and browsers. Each accepted HTTPS site is de facto trusted because its certificate is vouched for by at least one trust anchor.
- For example, Mozilla's Firefox includes approximately 150 trust anchors from around 50 organizations. However, the number of automatically trusted CAs is much larger, with over 1500 CA certificates from about 650 organizations accepted by major browsers.

**Private Networks:**
- In corporate environments, a root certificate for the organization may be configured as a trust anchor on employees' machines. The organization can then proxy HTTPS connections to perform content inspection. Some corporations may even obtain browser-accepted CA certificates for this purpose, although it is against CA policies.

**Security Issues (Anchoring Trust):**
- **CA Compromise:** Any trusted CA can issue a browser-acceptable certificate for any site. Adversaries can target the weakest CA to obtain fraudulent certificates, enabling MITM attacks. Examples include the compromises of Comodo and DigiNotar in 2011.
- **Compelled Certificates:** Nation-states may compel CAs to issue certificates, allowing them to perform MITM attacks. For instance, HTTPS connections to Facebook in Syria were reportedly intercepted using a certificate issued by the Syrian Telecom Ministry.

---

### C. Transitivity of Trust

Trust anchors can issue intermediate CA certificates, and intermediates can do the same. A site certificate is browser-acceptable if the browser can build a chain of certificates leading to a trust anchor. One study found that 20% of valid certificates required no intermediate, while 38% used one.

**Path Validation:**
- The path validation algorithm, specified in RFC 5280, starts with the server certificate and builds the path to the trust anchor. Intermediate CA certificates must be authorized to be a CA (CA:TRUE under basicConstraints). CA certificates may also restrict the number of CAs in the chain.
- Servers are mandated to present the entire chain, but browsers may use a chain discovery mechanism (e.g., AIA: Authority Information Access).

**Security Issues (Transitivity of Trust):**
- **Basic Constraints:** Path validation must check that each intermediate CA certificate has CA:TRUE set under basicConstraints. If not, a certificate obtained for a web server could issue browser-acceptable certificates for any other website. This issue has been observed in Microsoft’s CryptoAPI and Apple’s iOS.

---

### D. Maintenance of Trust

A CA's important function is to terminate the validity of a certificate before its expiration date if certain circumstances arise, such as mistaken issuance, compromise, or cessation of operations. Revocation status must be available through CRLs or OCSP responders.

**Revocation Mechanisms:**
- CAs often prefer OCSP responders because they can be updated on-demand without using the offline CA signing key and due to response size. However, some CA certificates do not include revocation information, and OCSP responders are often unresponsive.
- Current browsers fail open, accepting certificates for which revocation information cannot be located. Some browsers, like Chrome, maintain an updatable certificate blacklist.

**Security Issues (Maintenance of Trust):**
- **Blocking Revocation:** An adversary who obtains a fraudulent certificate may take several days for the revocation information to be available to clients. A MITM adversary can prevent clients from reaching OCSP responders or CRL distribution points, allowing the revoked certificate to continue being accepted.
- **Ownership Transfer:** TLS site certificates should be revoked when domain ownership expires or is transferred. However, this is not typically enforced, leading to potential security risks.

---

### E. Indication and Interpretation of Trust

Some HTTPS security protections rely on user diligence. Users are expected to verify the outcome of each connection attempt, typically indicated by visual cues in the browser window. More diligent users may verify certificate details, such as the subject name, organization, address, and country.

**Browser Security Cues:**
- Desktop browsers typically use two primary cues to indicate an HTTPS connection: (1) the URL begins with `https://` and (2) a lock icon is displayed. Clicking the lock icon usually displays certificate information. Inconsistency in how these cues are implemented across browsers can impede user understanding.
- Guidelines for browser cues have been published, but studies show that many users do not notice or interact with these cues. The introduction of EV certificates added new cues, such as a green address bar, but their effectiveness is limited.

**User Behavior:**
- Studies using eyetracking have found that only a small percentage of users actually view and interact with browser security cues. Many users assume a page is secure based on the information being requested, rather than verifying the security indicators.

---

This optimized text aims to provide a clear, coherent, and professional overview of the key concepts and security issues related to web certification and trust in the context of TLS and HTTPS.