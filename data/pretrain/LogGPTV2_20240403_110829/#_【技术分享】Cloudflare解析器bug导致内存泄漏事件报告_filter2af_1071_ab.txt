    }
上面是数据，last_buf是1。当新的解析器不存在时，最后一个缓冲区包含的数据如下：
    (gdb) p *in->buf
    $6 = {
      pos = 0x558a238e94f7 "connection->log, 0, "email filter tried to access char past EOF");
            RESET();
            output_flat_saved(r, ctx);
            BUF_STATE(output);
            return NGX_ERROR;
        }
        *p;
    })
    我们
看到日志如下：
    2017/02/19 13:47:34 [crit] 27558#0: *2 email filter tried to access char past EOF while sending response to client, client: 127.0.0.1, server: localhost, request: "GET /malformed-test.html HTTP/1.1”
每行日志表示一个HTTP请求，可能有泄漏的内存。通过记录问题发生的频率，我们希望得到在错误存在时HTTP请求泄漏内存的次数的统计。
为了针对内存泄漏，下面的东西必须正确：
最后一个缓冲区包含的数据必须以以恶意格式的脚本或者img标签结束
缓冲区必须小于4K长度（否则Nginx可能崩溃）
用户必须开启邮件混淆（因为她同时使用新旧解析器）。
…或者自动HTTPs重写/服务端排除（使用了新解析器）组合另一个使用老的解析器的功能。…并且服务端排除只有在客户端IP具有较差的信誉（即它对大多数访问者不起作用）时才执行。
那就解释了为什么缓冲区溢出导致了内存泄漏的发生的情况如此少。
此外，邮件模糊功能（使用两个解析器，并会使错误发生在大多数Cloudflare网站上）仅在2月13日（Tavis报告的前四天）启用。
涉及的三个功能按如下顺序推出。内存可能泄漏的最早的日期是2016-09-22。
2016-09-22 Automatic HTTP Rewrites 启用
2017-01-30 Server-Side Excludes 整合新的解析器
2017-02-13 Email Obfuscation 部分整合新的解析器
2017-02-18 Google 报告问题给Cloudflare且泄漏结束
最大的潜在威胁发生在2月13号开始的4天内，因为自动HTTP重写没有被广泛使用，服务端排除只对恶意的IP地址才有效。
**0x05 Bug的内部影响**
Cloudflare在边界机器上面运行了多个独立的进程，且提供了进程和内存隔离。内存泄漏来自与一个基于Nginx的进程（处理HTTP）。它有一个独立的进程堆处理SSL，图片压缩和缓存，意味着我们很很快判断我们客户的SSL私钥没有泄漏。
然而，内存空间的泄漏包含了敏感信息。泄漏的信息中明显的一个是用于在Cloudflare机器之间安全连接的私钥。
当处理客户网站HTTP请求时，我们的边界机器在机架内，在数据中心内，以及用于记录，缓存和从源Web服务器检索网页的数据中心之间相互通信。
为了响应对互联网公司的监控活动的高度关注，我们决定在2013年加密Cloudflare机器之间的所有连接，以防止这样的攻击，即使机器坐在同一机架。
泄漏的私钥是用于此机器加密的私钥。在Cloudflare内部还有少量的密钥用于认证。
**0x06 外部影响和缓存清除**
更关心的事实是大量的Cloudflare客户的HTTP请求存在于转储的内存中。这意味着隐私信息泄露了。
这包括HTTP头，POST数据（可能包含密码），API调用的JSON，URI参数，Cookie和用于身份认证的其他敏感信息（例如API密钥和OAuth令牌）。
因为Cloudflare运行大型共享基础架构，因此对易受此问题影响的Cloudflare网站的HTTP请求可能会泄露不相关的其他Cloudflare站点的信息。
另一个问题是，Google（和其他搜索引擎）通过其正常的抓取和缓存过程缓存了一些泄漏的内存。我们想要确保在公开披露问题之前从搜索引擎缓存中清除这些内存，以便第三方无法搜索敏感信息。
我们倾向是尽快得到错误的消息，但我们认为我们有责任确保搜索引擎缓存在公开宣布之前被擦除。
信息安全团队努力在搜索引擎缓存中识别已泄漏内存并清除内存的URI。在Google，Yahoo，Bing和其他人的帮助下，我们发现了770个已被缓存且包含泄漏内存的独特的URI。770个独特的URI涵盖161个唯一域。泄漏的内存已经在搜索引擎的帮助下清除。
我们还进行其他搜索，寻找在像Pastebin这样的网站上可能泄漏的信息，且没有找到任何东西。
**0x07 一些课题**
新的HTML解析器的工程师一直担心影响我们的服务，他们花了几个小时来验证它不包含安全问题。
不幸的是，这是一个古老的软件且包含一个潜在的安全问题，而这个问题只出现于我们在迁移抛弃它的过程。我们的内部信息安全团队现在正在进行一个项目，以模糊测试旧软件的方式寻找潜在的其他安全问题。
**0x08 时间点细节**
我们非常感谢Google的同事就此问题与我们联系，并通过其解决方案与我们密切合作。所有这些都没有任何报告,表明外界的各方已经确定了问题或利用它。
所有时间均为UTC时间。
2017-02-18 0011 来自Tavis Ormandy的推特寻求Cloudflare的联系方式
2017-02-18 0032 Cloudflare 收到来自谷歌的bug细节
2017-02-18 0040 多个团队汇集在San Francisco
2017-02-18 0119 全球范围内关闭邮件混淆功能
2017-02-18 0122 London团队加入
2017-02-18 0424 自动HTTPs重写功能关闭
2017-02-18 0722 实现针对cf-html解析器的关闭开关，并全球部署
2017-02-20 2159 SAFE_CHAR 修复部署
2017-02-21 1803 自动HTTPs重写，服务端排除和邮件混淆重启功能