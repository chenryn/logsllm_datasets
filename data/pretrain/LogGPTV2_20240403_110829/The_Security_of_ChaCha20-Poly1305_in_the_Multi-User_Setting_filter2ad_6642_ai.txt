entries in 𝜏, respectively. Let 𝑢 = |𝐾𝜏| be the number of key entries.
Let Pideal(𝜏), resp. Preal(𝜏), be the probability that if we make the
queries described in 𝜏 (in the same order), we receive in the ideal
game, resp. the real game, the corresponding answers recorded in 𝜏.
In the ideal world, the revealed keys and the answers to the ideal
permutation, encryption, and verification queries are generated
independently. Thus Pideal(𝜏) = Pideal(𝐾𝜏) · Pideal(𝑃𝜏) · Pideal(𝐸𝜏) ·
Pideal(𝑉𝜏). Recall that for good transcripts, the calls to the ideal
permutation 𝜋 and random blocks induced by ideal permutation
and encryption entries are distinct. Therefore, there are exactly
|𝑆1(𝜏)| distinct calls to the ideal permutation in 𝑃𝜏 and |𝑆2(𝜏)|
independently sampled random blocks generated in 𝐸𝜏. Hence
1
2𝑛 . More-
over, as the 𝑢-many 𝑘-bit user keys are sampled at random and ver-
ification queries always return false, we obtain Pideal(𝐾𝜏) = 2−𝑘𝑢
and Pideal(𝑉𝜏) = 1. Consequently,
2𝑛−𝑖 and Pideal(𝐸𝜏) =|𝑆2(𝜏) |−1
|𝑆2(𝜏) |−1
|𝑆1(𝜏) |−1
Pideal(𝑃𝜏) =|𝑆1(𝜏) |−1
𝑖=0
𝑖=0
1
Pideal(𝜏) = 2−𝑘𝑢 ·
(7)
1
2𝑛 − 𝑖
·
1
2𝑛 .
𝑖=0
𝑖=0
In the real world, the user keys are also sampled at random and
Preal(𝐾𝜏) = 2−𝑘𝑢. Once the user keys have been sampled, the prob-
ability of query outputs depends on the number of distinct ideal
permutation calls made. For good transcripts in the real world, the
calls to the ideal permutation 𝜋 in ideal permutation and encryption
entries are distinct. Therefore, there are exactly |𝑆1(𝜏)| + |𝑆2(𝜏)|
distinct calls to the ideal permutation in 𝑃𝜏 ∪ 𝐸𝜏, and the input-
output of these calls are also entirely determined in these sets.
Moreover, there are at most |𝑆3(𝜏)| more calls to the ideal permu-
tation done during verification queries and distinct from the ones
done during ideal permutation and encryption queries. However,
the input-output of these calls is not entirely determined in 𝑉𝜏,
only the inputs are. For the outputs, as 𝜏 is a good transcript, they
are required to be distinct from the ones in 𝑃𝜏 ∪ 𝐸𝜏 and not to
result in a forgery for queries in 𝑉𝜏. If 𝑞 is the exact number of
distinct ideal permutation calls in 𝜏, the probability to get these
(cid:17), where 𝐼, 𝐽 is a partition of
calls is𝑖∈𝐼
2𝑛−𝑖 ·𝑗 ∈𝐽
(cid:16)1 − 𝑓𝑗2𝑛−𝑗
{0, . . . , 𝑞 − 1} fixed by the order of queries in 𝜏 and 𝑓𝑗 is the num-
ber of values that would result in a forgery while sampling the
1
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea19951
associated ideal permutation call during verification queries. 𝐼 con-
tains the index/order in which the associated ideal permutation
calls from 𝑃𝜏 ∪ 𝐸𝜏 are sampled and 𝐽 contains the remaining ones
from 𝑉𝜏. Note that |𝐼| = |𝑆1(𝜏)| + |𝑆2(𝜏)| and |𝐽| ≤ |𝑆3(𝜏)|. Thus,
(cid:16)1 − 𝑓𝑗2𝑛−𝑗
(cid:17). Furthermore, we can
Preal(𝜏) = 2−𝑘𝑢 ·𝑖∈𝐼
2𝑛−𝑖 ·𝑗 ∈𝐽
reorder and minimize the products in the following way:𝑖∈𝐼
(cid:17), where
(cid:17) ≥|𝐼 |−1
(cid:16)1 − 𝑓𝑗2𝑛−𝑗
(cid:16)1 − 𝐹
2𝑛−𝑖 ·|𝐼 |+|𝑆3(𝜏) |−1
𝑗 ∈𝐽
𝐹 is a bound on the number of values that would result in a forgery
while sampling the associated ideal permutation call of one veri-
fication query, i.e. for a verification query Vf(𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇), the
number of (𝑟∥𝑠∥𝑊 ) ∈ {0, 1}𝑛 such that 𝐻𝑟 (𝐴𝐷, 𝐶) (𝑡)+ 𝑠 = 𝑇 . There
are 2𝑛−2𝑡 possible values for 𝑊 , and each of the 2𝑡 possible val-
ues for 𝑟 yield exactly one value 𝑠 such that 𝐻𝑟 (𝐴𝐷, 𝐶) (𝑡)+ 𝑠 = 𝑇 .
Therefore, we can consider 𝐹 = 2𝑛−2𝑡 · 2𝑡 = 2𝑛−𝑡 in the previous
inequality. Consequently,
2𝑛−𝑖 ·
1
𝑗=|𝐼 |
2𝑛−𝑗
𝑖=0
1
Preal(𝜏) ≥ 2−𝑘𝑢 ·
1
2𝑛 − 𝑖
·
𝑖=0
(cid:18)
1 −
|𝑆1(𝜏) |+|𝑆2(𝜏) |−1
|𝑆3(𝜏) |−1
(cid:18)
|𝑆3(𝜏) |−1
(cid:18)
|𝑆3(𝜏) |−1
1 −
𝑗=0
2𝑛−𝑡
2𝑛 − |𝑆1(𝜏)| − |𝑆2(𝜏)| − 𝑗
We can now calculate the probability ratio:
2𝑛−𝑡
Preal(𝜏)
Pideal(𝜏) ≥
≥
1 −
𝑗=0
2𝑛−𝑡
2𝑛 − |𝑆1(𝜏)| − |𝑆2(𝜏)| − 𝑗
2𝑛 − |𝑆1(𝜏)| − |𝑆2(𝜏)| − |𝑆3(𝜏)|
(cid:19)
.
(cid:19)
(cid:19)
.
(8)
𝑗=0
As |𝑆1(𝜏)| ≤ 𝑝 ≤ 𝑛−𝑘−1
|𝑆3(𝜏)| ≤ 𝑞𝑣 ≤ 2𝑛−2, then
6
· 2𝑛−𝑘, |𝑆2(𝜏)| ≤ 𝜎𝑒 + 𝑞𝑒 ≤ 𝑛−𝑘
3
· 2𝑛−𝑘 and
|𝑆1(𝜏)| + |𝑆2(𝜏)| + |𝑆3(𝜏)| ≤ 𝑝 + 𝜎𝑒 + 𝑞𝑒 + 𝑞𝑣
Hence,
Preal(𝜏)
Pideal(𝜏) ≥
≤ (𝑛 − 𝑘) · 2𝑛−𝑘 + 2𝑛−2 ≤ 2𝑛−1.
(cid:19) |𝑆3(𝜏) |
(cid:18)
|𝑆3(𝜏) |−1
𝑗=0
≥ 1 − |𝑆3(𝜏)|
2𝑡−1 ≥ 1 − 𝑞𝑣
(cid:18)
(cid:19)
1 − 1
2𝑡−1
2𝑡−1 = 1 − 2𝑞𝑣
2𝑡 .
1 − 2𝑛−𝑡
2𝑛−1
=
(9)
B.2 Proofs of Bad Transcript Probabilities
In this subsection, we bound the probabilities of the six sets of Bad
transcripts in the ideal world through Lemma B.2–B.7. However,
we first give a corollary of our balls-into-bins theorem to simplify
its application to our lemmas.
Recall that all the transcripts are generated by a valid nonce-
respecting adversary A that is 𝑑-repeating. We also recall here that
in the ideal world, the keys 𝐾𝑖 are uniformly sampled at the end
of the execution, during the last oracle query to Reveal, and are
therefore independent of any other previous queries. Moreover, in
the ideal world, all the 𝑉𝑗 values are independent and uniformly
distributed. As for 𝑉0 = (𝑟∥(𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶))∥𝑊 ), the values 𝑟, 𝑇
and 𝑊 are uniformly distributed, for 𝑉𝑗 = (𝑀𝑗 ⊕ 𝐶 𝑗), the value 𝐶 𝑗
is uniformly distributed and for 𝑉ℓ = ((𝑀ℓ ⊕ 𝐶ℓ)∥𝑊 ′), the values
𝐶ℓ and 𝑊 ′ are uniformly distributed.
To simplify notations in the following, we denote by [𝑤]𝐾+ the
key part of a 𝑛-bit string 𝑤, i.e. 𝑤[|𝑍| + 1:|𝑍| + 𝑘] and by [𝑤]𝐾- the
remaining part of the string, i.e. 𝑤[1:|𝑍|] ∥ 𝑤[|𝑍|+𝑘 +1:𝑛]. We also
denote by [𝑤]𝑟 the part of a 𝑛-bit string 𝑤 that corresponds to the
hash key 𝑟, i.e. 𝑤[1:𝑡] and by [𝑤]𝑠 the part that corresponds to the
blinding value 𝑠 of the string, i.e. 𝑤[𝑡 + 1:2𝑡].
B.2.1 Balls-Into-Bins Corollary. The following lemma is a direct
corollary of our balls-into-bins theorem. It will be used below to
bound bad transcript probabilities, specifically in Lemmas B.3, B.6,
and B.7. To simplify the computed bounds, we apply our gener-
alized balls-into-bins theorem in the proof of the lemma only for
a bounded number of balls. It should be noted that we could lift
some of the restrictions on the number of queries in Theorem 6.1
and 7.8 by considering an unrestricted number of balls, however at
the expense of a more complicated bound.
3
(cid:109)
max(1,log2((𝑄𝐵)−1))
Lemma B.1. Consider the experiment where we throw balls into
bins and where each throw may be dependent on the previous ones.
Let 𝑄 ∈ N be the maximum number of balls we throw and 𝐵 ∈ ]0, 1]
be an upper bound on the probability that, when conditioning on
the result of the prior throws, a ball is placed into a specific bin. If
𝑄 ≤ 𝐵−1 · log2(𝐵−1)
, the probability that the heaviest bin contains
2 log2(𝐵−1)
𝑚 =
(cid:108)
(cid:101)𝑚 = log𝑡 (𝐵−1) and 𝑄 ≤ 𝐵−1 · log2(𝐵−1)
(cid:6)2 log2(𝐵−1)(cid:7).
Proof. We simply apply the Case 4 of Theorem 5.1, with 𝑡 = 2,
□
Note that compared to [10, Lemma 11], our maximum load 𝑚
can be smaller than log2(𝐵−1), and compared to [10, Lemma 10],
our maximal number of queries can be bigger than 𝐵−1 (when
log2(𝐵−1)
> 1) and our maximum load 𝑚 is always smaller than
or more balls is at most 𝐵.
3
3
.
B.2.2 Bounding Bad1 transcripts probability.
Lemma B.2 (Bad1).
Pr[Tideal ∈ Bad1] ≤ 𝑝𝑑
2𝑘
.
Proof. Bad1 is the set of all attainable transcripts 𝜏 that contain
two entries (prim, 𝑥, 𝑦, ·) and (enc, 𝑖, 𝑁 , 𝐴𝐷, 𝑀, 𝐶∥𝑇 , 𝑉0∥ · · · ∥𝑉ℓ)
such that 𝑥 ∈ {𝑍∥𝐾∥0∥𝑁 , . . . , 𝑍∥𝐾∥ℓ∥𝑁} and 𝐾𝑖 = 𝐾.
If a transcript generated by the adversary A in the ideal aug-
mented game is in Bad1, then A has made an encryption query
Enc(𝑖, 𝑁 , 𝐴𝐷, 𝑀) and either a query Prim(𝑍∥𝐾∥ · ∥𝑁) or a query
Prim−1(𝑦) with answer 𝑍∥𝐾∥·∥𝑁 , and finally a query to Reveal
that returned the key 𝐾𝑖 to be equal to 𝐾. Hence the probability
that a transcript generated by A in the ideal augmented game is in
Bad1 is bounded by the probability that A makes the previously
described queries.
We are going to consider the case where A is just about to query
Reveal, but has already made all its other oracle queries. For
each of the at most 𝑝 ideal permutation queries Prim(𝑍∥𝐾∥ · ∥𝑁)
or Prim−1(𝑦) with answer 𝑍∥𝐾∥ · ∥𝑁 done by A, there are at
most 𝑑 encryption queries Enc(𝑖, 𝑁 ′, 𝐴𝐷, 𝑀) with 𝑁 ′ = 𝑁 done
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1996by A. Thus there are at most 𝑝𝑑 possible pairs of such queries
done by A. When querying Reveal, for each of these pairs, the
probability that 𝐾𝑖 = 𝐾 is 1
2𝑘 , as the keys are uniformly sampled,
independently from any previous queries. Hence, using a union
bound, the probability that for at least one of these pairs 𝐾𝑖 = 𝐾, is
at most 𝑝𝑑
2𝑘 . Thus,
□
.
Pr[Tideal ∈ Bad1] ≤ 𝑝𝑑
2𝑘
B.2.3 Bounding Bad2 transcripts probability.
.
Lemma B.3 (Bad2).
2𝑘
+ 1