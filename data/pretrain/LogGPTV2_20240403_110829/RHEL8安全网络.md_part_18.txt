1.  使用 `nft add table`{.literal} 命令来创建新表。例如，要创建一个名为
    `example_table`{.literal} 、用来处理 IPv4 和 IPv6 数据包的表：
    ``` literallayout
    # nft add table inet example_table
    ```
2.  另外，还可列出规则集中的所有表：
    ``` literallayout
    # nft list tables
    table inet example_table
    ```
:::
::: itemizedlist
**其它资源**
-   `nft(8)`{.literal} 手册页中的 `Address families`{.literal} 部分
-   `nft(8)`{.literal} 手册页中的 `Tables`{.literal} 部分
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#creating-an-nftables-chain_assembly_creating-and-managing-nftables-tables-chains-and-rules}创建 nftables 链 {.title}
:::
chains 是规则的容器。存在以下两种规则类型：
::: itemizedlist
-   基本链：您可以使用基础链作为来自网络堆栈的数据包的入口点。
-   常规链：您可以使用常规链作为 `跳板`{.literal}
    目标，并更好地组织规则。
:::
这个步骤描述了如何在现有表中添加基本链。
::: itemizedlist
**先决条件**
-   已存在您要添加新链的表。
:::
::: orderedlist
**流程**
1.  使用 `nft add chain`{.literal} 命令来创建新链。例如，要在
    `example_table`{.literal} 中创建一个名为 `example_chain`{.literal}
    的链：
    ``` literallayout
    # nft add chain inet example_table example_chain { type filter hook input priority 0 \; policy accept \; }
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    为避免 shell 将分号解析为命令的结尾，请在分号前加上 `\`{.literal}
    转义字符。
    :::
    这个链过滤传入的数据包。`priority`{.literal} 参数指定
    `nftables`{.literal} 进程处理相同 hook
    值的链的顺序。较低优先级的值优先于优先级更高的值。`policy`{.literal}
    参数设置此链中规则的默认操作。请注意，如果您远程登录到服务器，并将默认策略设置为
    `drop`{.literal}，如果没有其他规则允许远程访问，则会立即断开连接。
2.  另外，还可以显示所有链：
    ``` literallayout
    # nft list chains
    table inet example_table {
      chain example_chain {
        type filter hook input priority filter; policy accept;
      }
    }
    ```
:::
::: itemizedlist
**其它资源**
-   `nft(8)`{.literal} 手册页中的 `Address families`{.literal} 部分
-   `nft(8)`{.literal} 手册页中的 `Chains`{.literal} 部分
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#appending-a-rule-to-the-end-of-an-nftables-chain_assembly_creating-and-managing-nftables-tables-chains-and-rules}将规则附加到 nftables 链的末尾 {.title}
:::
本节介绍了如何将规则附加到现有 `nftables`{.literal} 链的末尾。
::: itemizedlist
**先决条件**
-   您要添加该规则的链已存在。
:::
::: orderedlist
**流程**
1.  要添加新的规则，请使用 `nft add rule`{.literal} 命令。例如，要在
    `example_table`{.literal} 的 `example_chain`{.literal}
    中添加一条允许端口 22 上 TCP 流量的规则：
    ``` literallayout
    # nft add rule inet example_table example_chain tcp dport 22 accept
    ```
    您可以选择指定服务名称而不是端口号。在该示例中，您可以使用
    `ssh`{.literal} 而不是端口号 `22`{.literal}。请注意，会根据其在
    `/etc/services`{.literal} 文件中的条目将服务名称解析为端口号。
2.  另外，还可在 `example_table`{.literal} 中显示所有的链及其规则：
    ``` literallayout
    # nft list table inet example_table
    table inet example_table {
      chain example_chain {
        type filter hook input priority filter; policy accept;
        ...
        tcp dport ssh accept
      }
    }
    ```
:::
::: itemizedlist
**其它资源**
-   `nft(8)`{.literal} 手册页中的 `Address families`{.literal} 部分
-   `nft(8)`{.literal} 手册页中的 `Rules`{.literal} 部分
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#inserting-a-rule-at-the-beginning-of-an-nftables-chain_assembly_creating-and-managing-nftables-tables-chains-and-rules}在 nftables 链的开头插入一条规则 {.title}
:::
本节介绍了如何在现有 `nftables`{.literal} 链的开头插入一条规则。
::: itemizedlist
**先决条件**
-   您要添加该规则的链已存在。
:::
::: orderedlist
**流程**
1.  要插入新规则，请使用 `nft insert rule`{.literal} 命令。例如，要在
    `example_table`{.literal} 的 `example_chain`{.literal}
    中插入一条允许端口 22 上 TCP 流量的规则：
    ``` literallayout
    # nft insert rule inet example_table example_chain tcp dport 22 accept
    ```
    您还可以指定服务名称而不是端口号。在该示例中，您可以使用
    `ssh`{.literal} 而不是端口号 `22`{.literal}。请注意，会根据其在
    `/etc/services`{.literal} 文件中的条目将服务名称解析为端口号。
2.  另外，还可在 `example_table`{.literal} 中显示所有的链及其规则：
    ``` literallayout
    # nft list table inet example_table
    table inet example_table {
      chain example_chain {
        type filter hook input priority filter; policy accept;
        tcp dport ssh accept
        ...
      }
    }
    ```
:::
::: itemizedlist
**其它资源**
-   `nft(8)`{.literal} 手册页中的 `Address families`{.literal} 部分
-   `nft(8)`{.literal} 手册页中的 `Rules`{.literal} 部分
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#proc_inserting-a-rule-at-a-specific-position-of-an-nftables-chain_assembly_creating-and-managing-nftables-tables-chains-and-rules}在 nftables 链的特定位置插入一条规则 {.title}
:::
本节介绍了如何在 `nftables`{.literal}
链中现有规则的前和后插入规则。这样，您可以将新规则放在正确的位置上。
::: itemizedlist
**先决条件**
-   您要添加规则的链存在。
:::
::: orderedlist
**流程**
1.  使用 `nft -a list ruleset`{.literal} 命令显示
    `example_table`{.literal} 中的所有的链及其规则，包括它们的句柄：
    ``` literallayout
    # nft -a list table inet example_table
    table inet example_table { # handle 1
      chain example_chain { # handle 1
        type filter hook input priority filter; policy accept;
        tcp dport 22 accept # handle 2
        tcp dport 443 accept # handle 3
        tcp dport 389 accept # handle 4
      }
    }
    ```
    使用 `-a`{.literal}
    显示句柄。您需要此信息才能在后续步骤中定位新规则。
2.  在 `example_table`{.literal} 的 `example_chain`{.literal}
    链中插入新规则 ：
    ::: itemizedlist
    -   要在句柄 `3`{.literal} 前插入一条允许端口 `636`{.literal} 上TCP
        流量的规则，请输入：
        ``` literallayout
        # nft insert rule inet example_table example_chain position 3 tcp dport 636 accept
        ```
    -   要在句柄 `3`{.literal} 后添加一条允许端口 `80`{.literal} 上 TCP
        流量的规则，请输入：
        ``` literallayout
        # nft add rule inet example_table example_chain position 3 tcp dport 80 accept
        ```
    :::
3.  另外，还可在 `example_table`{.literal} 中显示所有的链及其规则：
    ``` literallayout
    # nft -a list table inet example_table
    table inet example_table { # handle 1
      chain example_chain { # handle 1
        type filter hook input priority filter; policy accept;
        tcp dport 22 accept # handle 2
        tcp dport 636 accept # handle 5
        tcp dport 443 accept # handle 3
        tcp dport 80 accept # handle 6
        tcp dport 389 accept # handle 4
      }
    }
    ```
:::
::: itemizedlist
**其它资源**
-   `nft(8)`{.literal} 手册页中的 `Address families`{.literal} 部分
-   `nft(8)`{.literal} 手册页中的 `Rules`{.literal} 部分
:::
:::
:::
::: section
::: titlepage
# []{#getting-started-with-nftables_securing-networks.html#configuring-nat-using-nftables_getting-started-with-nftables}使用 nftables 配置 NAT {.title}
:::
使用 `nftables`{.literal}，您可以配置以下网络地址转换(NAT)类型：
::: itemizedlist
-   伪装
-   源 NAT（SNAT）
-   目标 NAT（DNAT）
-   重定向
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#the-different-nat-types-masquerading-source-nat-destination-nat-and-redirect_configuring-nat-using-nftables}不同的 NAT 类型： masquerading、source NAT、destination NAT 和 redirect {.title}
:::
这些是不同的网络地址转换（NAT）类型：
::: variablelist
[伪装和源 NAT（SNAT）]{.term}
:   使用以上 NAT 类型之一更改数据包的源 IP
    地址。例如，互联网服务提供商不会路由私有 IP 范围，如
    `10.0.0.0/8`{.literal}。如果您在网络中使用私有 IP
    范围，并且用户应该能够访问 Internet
    上的服务器，请将这些范围内的数据包的源 IP 地址映射到公共 IP 地址。
    伪装和 SNAT 都非常相似。不同之处是：
    ::: itemizedlist
    -   伪装自动使用传出接口的 IP 地址。因此，如果传出接口使用了动态 IP
        地址，则使用伪装。
    -   SNAT 将数据包的源 IP 地址设置为指定的 IP
        地址，且不会动态查找传出接口的 IP 地址。因此，SNAT
        要比伪装更快。如果传出接口使用了固定 IP 地址，则使用 SNAT。
    :::
[目标 NAT（DNAT）]{.term}
:   使用此 NAT 类型重写传入数据包的目标地址和端口。例如，如果您的 Web
    服务器使用私有 IP 范围内的 IP
    地址，那么无法直接从互联网访问它，您可以在路由器上设置 DNAT
    规则，以便将传入的流量重定向到此服务器。
[重定向]{.term}
:   这个类型是 IDT 的特殊示例，它根据链 hook
    将数据包重定向到本地机器。例如，如果服务运行在与其标准端口不同的端口上，您可以将传入的流量从标准端口重定向到此特定端口。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-nftables_securing-networks.html#configuring-masquerading-using-nftables_configuring-nat-using-nftables}使用 nftables 配置伪装 {.title}
:::
伪装使路由器动态地更改通过接口到接口 IP 地址发送的数据包的源
IP。这意味着，如果接口被分配了新的 IP，`nftables`{.literal} 会在替换源
IP 时自动使用新的 IP。
以下流程描述了如何将通过 `ens3`{.literal} 接口的离开主机的数据包的源 IP
替换为 `ens3`{.literal} 上设置的 IP。
::: orderedlist
**流程**
1.  创建一个表：
    ``` literallayout
    # nft add table nat
    ```
2.  将 `prerouting`{.literal} 和 `postrouting`{.literal} 链添加到表中：
    ``` literallayout
    # nft -- add chain nat prerouting { type nat hook prerouting priority -100 \; }
    # nft add chain nat postrouting { type nat hook postrouting priority 100 \; }
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    即使您没有向 `prerouting`{.literal} 添加规则，`nftables`{.literal}