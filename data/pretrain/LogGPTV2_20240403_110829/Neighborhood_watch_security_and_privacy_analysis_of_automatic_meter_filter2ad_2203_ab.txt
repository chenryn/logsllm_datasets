analyze both electric and gas meters with an emphasis of
electric meters.
AMR Readers. To capture the meter readings and relay
them to a central collection point, one or more AMR readers
(hereafter readers) are required. Readers interpret the sig-
nals and deliver the meter IDs along with other information
to a central collection point. Three categories of readers
are used in the utility industry: (1) handheld devices for
ﬁeld investigation or walk-by meter reading, (2) highly sen-
sitive mobile collectors for drive-by meter reading, and (3)
a network of permanently installed collectors and repeaters
for reporting AMR meter readings in real time, (aka. ﬁxed
network AMR) [19].
Both handheld devices and mobile collectors require per-
sonnel to walk or drive by locations where the meters are in-
stalled, and total utility consumption can only be updated
as frequently as the walk-by or drive-by events occur. A
ﬁxed network AMR system requires higher infrastructure
investment, but does not need delegated drivers or ‘walk-
ers’ for data collecting, and can provide continuous energy
consumption updates to the utility.
Since we were unable to get full access to mobile collectors
or ﬁxed network collectors, we show our ﬁndings using a
handheld collector. Because the main function of all three
types of AMR readers is to collect meter readings, we believe
that our ﬁndings provide insight for the other types of AMR
readers.
2.2 AMR Communication Protocol
The communication protocol between meters and readers
is proprietary. Even so, a survey of information from sup-
plier websites and patents [20] provides a rough idea about
the communication protocol, with some information proving
4642
2.5
Time (ms)
3
3.5
Figure 4: The ﬂow chart of our live decoder.
Packet
Detector
Packet
Filter
Decoder
1101
Meter
ID
Meter
Reading
1
0
−1
0
e
d
u
t
i
n
g
a
m
.
m
r
o
N
)
B
d
(
e
d
u
t
i
n
g
a
M
−50
−100
915
915.2
915.4
Frequency (MHz)
915.6
915.8
916
Figure 3: A captured AMR transmission. The top
plot shows the signal time series (both magnitude
and in-phase), while the bottom plot displays its
spectrum. The plots suggest the use of OOK mod-
ulation and Manchester encoding.
However, we did not report the experiment results due to
the mutual agreement with the utility company.
Raw Signal Sniﬀer. We were interested in performing
analysis using low-cost, oﬀ-the-shelf equipment; hence, we
did not use professional signal processing instruments such
as Vector Signal Analyzers or Spectrum Analyzers. Instead,
we used a low-cost software deﬁned radio platform, i.e., the
Universal Software Radio Peripheral (USRP) [22] to cap-
ture raw AMR signals. We primarily used the ﬁrst genera-
tion USRP with limited instantaneous bandwidth capability,
and occasionally tested on the second generation that can
monitor a wider frequency band. The daughterboards used
in our experiment include an RFX900 and a WBX daugh-
terboard. Both daughterboards cover the frequency range
of AMR meters, which is centered at 915 MHz.
For ease of reading, from this point onward we refer to the
electric meter as meter-E, the gas meter as meter-G, and the
handheld reader as ERT reader.
3.2 Reverse Engineering AMR Communica-
tion Protocols
Without insider information, we rely on reverse-engineering
to discover the meters’ communication protocol details.
Capturing the First Packet. The ﬁrst step of reverse
engineering is to capture a few transmissions from each me-
ter. Surprisingly, this step turned out to be very diﬃcult for
several reasons. First, it took a long time to detect and cap-
ture AMR activities. Both meter-E and meter-G work in the
bubble-up model, where they periodically broadcast packets
and do not respond to any activation signals. Second, it is
diﬃcult to capture a ‘clear’ transmission from meters with-
out the speciﬁc channel and other physical layer information.
Meters hop through a frequency band larger than what our
signal sniﬀers can monitor. During the exploration phase,
we used the ﬁrst generation USRP that is able to monitor at
most 8 MHz (with 16-bit I/Q samples), a fraction of what
meters cover. Due to this limitation, we captured highly
distorted packets which were beyond decoding. Moreover,
several other electronic devices operate in the 915-MHz ISM
band, and thus resulted in interference and confusion. As
an example, we observed wireless transmissions from cord-
less phones.
To streamline our reverse-engineering process, we built de-
tection software to capture, replay, and verify signals. First,
we developed an activity detector to automatically record
signals that are above the ambient noise ﬂoor. Then, can-
didate signals were extracted and veriﬁed by retransmitting
them with the USRP. The signals that induced proper dis-
play on the ERT reader were the ones transmitted by AMR
meters.
In the end, we discovered that each transmission
from AMR meters consists of a pilot packet with a length
of 44.9 ms, and a data packet of 5.8 ms. Both packets were
transmitted on the same channel with separation of 275 ms
as shown in Fig. 2. Interestingly, we found that the ERT
reader does not need the pilot packet to correctly interpret
the data packet.
Decoding Packets. Lacking an instrument to interpret
the pilot packets, we focused on decoding the data packets.
To convert raw signals to bit streams and then to meaningful
ﬁelds, we needed to identify the modulation scheme, baud
rate, encoding scheme, and packet format. After a quick ex-
amination of the signals in the time and frequency domains
(as shown in Fig. 3), we conﬁrmed that meters use on-oﬀ
keying (OOK) as their modulation scheme and an inverted
version of Manchester encoding scheme.
Additionally, we discovered that the baud rate of meters is
16.5 kBd, and the duration of the high level of each bit has to
be slightly longer than the duration of the low level. Packets
with the improper ratio of high and low level durations will
be considered invalid and are ignored by the ERT reader. It
is unclear what the intention was for the diﬀerent durations
of high and low levels, but this diﬀerence did induce extra
eﬀort during our reverse engineering endeavor.
Successful demodulation and decoding returned a stream
of 96 bits in each packet. With the help of the ERT reader,
we were able to obtain several pairs of bit streams and
their corresponding meter IDs, meter readings, tamper sta-
tus, etc. Diﬀerential analysis over bit streams revealed the
packet format, which contains a 24-bit meter ID, a 22-bit
meter reading, and a 16-bit CRC checksum. We found that
both meter-E and meter-G use the same packet format.
Characterizing Channels. To ﬁnd details about the
transmission channels of meters, we scanned through the
entire 915-MHz ISM band (i.e., 902-928 MHz). We found a
cluster of channels that are used by meters and made two in-
teresting observations during this phase of experimentation:
(1) Channels are separated by multiples of 200 kHz and not
all candidate channels in the 915-MHz ISM band are used.
(2) Meter-E cycles through a sequence of 50 pre-determined
channels every 25 minutes.
Building a Live Decoder. After identifying details of
the meter communication protocol, we developed a live de-
coder that monitors channel activities and outputs the meter
ID and meter reading immediately after a packet is received.
The live decoder consists of Python scripts that utilize sig-
nal processing libraries in GNU Radio. As shown in Fig. 4,
the live decoder continuously samples the channels around
915 MHz at a rate of 4 MHz. We note that in such a setup,
only packets transmitted in the range of 913 MHz to 917
465Figure 5: Spooﬁng attack validation: The LED dis-
play of the ERT reader received the spoofed packet
with an ID of 11223344 and data reading of 1234.
MHz can be captured with little distortion and can survive
decoding. We will discuss our eﬀort in capturing packets
transmitted in other frequency ranges in Section 4.
Once the packet detector identiﬁes high energy in the
channel, it extracts the complete packet and passes the sam-
pled data to a packet ﬁlter. To ﬁlter out non-AMR pack-
ets and pilot packets, we ﬁrst discard any packet whose
length mismatches with that of expected data packets. Next,
we perform histogram analysis to discard distorted packets.
The underlying observation is that, ideally, the amplitudes
of a Manchester-encoded signal should cluster around two
sets: one set mapping to the low level and the other map-
ping to the high level, as illustrated by Fig. 2. Any packet
whose amplitude spectrum is not evenly divided into high
and low levels is likely to be a distorted packet. Finally,
‘clear’ meter packets are passed to the decoder for extract-
ing meter ID and meter reading.
process, we came to the following conclusions.
Lessons Learned. At the end of the reverse engineering
• Reverse Engineering requires modest eﬀort. With a
communication and computer engineering background,
one can reverse engineer the meter communication pro-
tocol with reasonable eﬀort using oﬀ-the-shelf equip-
ment (an ERT reader and USRP with an RFX900)
costing $1000 at the time of our experiments.
• No Encryption. No encryption algorithms are used,
which makes it possible for anyone to eavesdrop on
the real time consumption of customers with ‘bubble-
up’ meters. For customers with ‘wake-up’ meters, it is
foreseeable that their consumption data can be eaves-
dropped on at arbitrary rates using activation signals,
since those signals are also not protected by crypto-
graphic mechanisms.
• Battery Drain Attacks. After receiving an activation
signal, ‘wake-up’ meters will immediately transmit a
packet. Thus, they are vulnerable to battery drain
attacks.
3.3 Packet Spooﬁng
After AMR meters have been installed, most customers
and utilities trust the integrity of the collected meter read-
ings, since AMR meters reduce human errors associated with
the traditional analog meter collecting process. However,
such a trust relationship must be questioned, should a mali-
cious attacker be able to forge packets containing arbitrary
data and successfully deliver them into the provider’s data
collectors. Thus, following our successful reverse engineer-
ing step, we examined the feasibility of launching spooﬁng
attacks.
To transmit a spoofed packet with an arbitrary meter
ID and meter reading, we generated a properly formulated
packet using Manchester encoding and OOK modulation.
Then, the fake AMR data packet was up-converted and
transmitted at one of the channels used by meters. We have
tested our spooﬁng attacks on the following three monitoring
devices with gradually improved complexity: (1) a generic
handheld collector (the ERT reader), (2) a more advanced
data collector commonly used by ﬁeld investigators in utility
companies, and (3) a sophisticated mobile collector used by
utility companies to gather meter readings from a vehicle
driven in a ﬁxed route periodically.
The authors and utility company agree that disclosing the
results conducted at the utility company would not enhance
their systems. Therefore, we exclude the test results ob-
tained on the advanced handheld data collector and the so-
phisticated mobile collector, and only reveal our ﬁndings
using the ERT reader.
reveal the following ﬁndings.
Observations. Our experiments using the ERT reader
• No Authentication. The ERT reader accepts any AMR
transmission with a proper packet format. Fig. 5 shows
that the ERT reader accepted a spoofed packet with
information of our choice: meter ID of 11223344 and
meter reading of 1234.
• No Input Validation. When receiving multiple packets
with the same meter ID but conﬂicting meter read-
ings, the ERT reader will accept the packet with the
strongest signal without reporting any warning. We
note that even if a meter collector is sophisticated
enough to keep track of all received packets for a con-
ﬂicting test, an adversary can easily jam and block
packets sent by a legitimate meter and let the meter
collector only receive her spoofed packets.
4. NEIGHBORHOOD MONITORING
AMR meters pose immediate privacy risks as they broad-
cast meter readings in plaintext. Each packet contains a
meter ID and meter reading. Given a speciﬁc household
address, it is usually trivial to identify the associated me-
ter ID because meters tend to be installed in publicly ac-
cessible locations (e.g., exterior walls of residential houses),
and the meter ID is printed on the front face of meters. In
this section, we explore whether an adversary can monitor a
larger number of homes in a neighborhood simultaneously.
This depends on the range of the transmission and propa-
gation loss. Our software radio eavesdropping approach is
also complicated by the frequency hopping feature, since it
cannot monitor the entire set of frequencies simultaneously.
Experiment Setup. Unless speciﬁed, our basic eaves-
dropping experiments were conducted from inside the apart-
ment of one of the authors. The antenna dedicated to eaves-
dropping was mounted against a third-ﬂoor window over-
looking a slope with several buildings. All meters in this
neighborhood are the same type as meter-E, and each me-
ter transmits 1 packet every 30 seconds. For the majority
of our eavesdropping experiments, we used one USRP (the
ﬁrst generation), with an RFX900 and a 5 dBi omnidirec-
tional antenna, mimicking a narrowband receiver that can
monitor a fraction of all channels (e.g., 17 channels centered
at 915 MHz).
Eavesdropping Range. The ﬁrst task was to estimate
the eavesdropping range against meter-E using a basic 5 dBi
dipole antenna in a few real world environments. We tested
two representative locations in an author’s state: a rural
466Meters decoded using LNA only.
M
Meters decoded without using LNA.
Location of the RF sniffer and 
omni-directional antenna. 
20 m
Figure 6: An aerial view of the neighborhood where we performed our eavesdropping experiments. Each
blue triangle or red star represents a group of four or ﬁve meters mounted in a cluster on an exterior wall.
Using an LNA and a5 dBi omnidirectional antenna, we were able to monitor all meters in the neighborhood.
Some sniﬀed meters may be out of the scope of this view.
area with sparse two-story independent houses and an urban
area with several connected three-story apartment buildings
(e.g., our basic experiment location). Since we were inter-
ested in determining the physical range of our eavesdropper,
we considered a meter within eavesdropping range if at least
one of its packets was intercepted and decoded successfully
over the entire listening duration (1 to 4 hours).
We were able to decode packets from as far as 150m away
in the rural area, and up to 70m in the urban area. We
believe that the range diﬀerence is caused by the terrain
variance. The rural area has far fewer obstacles (e.g., build-
ings) to hamper radio propagation (e.g., fading and multi-
path eﬀects). Although the eavesdropping range in other
environments may diﬀer, our results indicate that an at-
tacker should be able to sniﬀ packets in any environment
without entering private property.
Boosted Eavesdropping Range. To boost the range
at low cost, we added a commercially available low noise
ampliﬁer (LNA) [23] to the antenna. The LNA provided
21 dB gain, and increased the eavesdropping range in the
urban area from 70m to more than 300m for meter-E and
from 15m to 70m for meter-G, as summarized in Tab. 1.
Meter-G has a smaller range because it is battery-powered
and transmits at a lower power level.