IPv6 is Bad for Your Privacy
Janne Lindqvist
Helsinki University of Technology
Telecommunications Software and Multimedia Laboratory
P.O. Box 5400, FIN-02015 TKK, Finland
janne.lindqvist@tml.hut.ﬁ
Abstract. In recent years, covert channel techniques for IPv4 and more
recently for IPv6 have been published by the scientiﬁc community and
also presented in DEFCON 14. However, a covert channel that contains
a considerable bandwidth has been overlooked, the autoconﬁgured IPv6
address itself. IPv6 Stateless Address Autoconﬁguration is used for au-
toconﬁguring addresses without a server in IPv6 networks. The auto-
conﬁguration mechanism consists of choosing an address candidate and
verifying its uniqueness with Duplicate Address Detection. The auto-
conﬁguration mechanism has privacy issues which have been identiﬁed
before and mitigations have been published as RFC 3041. However, we
show that the privacy protection mechanism for the autoconﬁguration
can be used as a covert channel, and consequently, be used to harm the
privacy of the user. The covert channel can be serious threat for commu-
nication security and privacy. We present practical attacks for divulging
sensitive information such as parts of secret keys of encryption proto-
cols. The scheme can also be used for very eﬀective Big Brother type
surveillance that cannot be detected by established intrusion detection
systems.
1
Introduction
A covert channel is a mechanism that is not designed for communi-
cation, but can nonetheless be abused to allow information to be com-
municated between parties [2].
Previously, this work has been published as [14], in this version, we take a
more tutorial style and present corrections. For example, in [14] we concluded
that SEcure Neighbor Discovery (SEND) [3] could prevent this covert channel,
but it merely slows it down. Previously published work in TCP/IP covert chan-
nels include: how common IPv4 covert channels can be detected and how to
implement detection resistant TCP steganography schemes [17], using IP frag-
mentation and packet sorting as covert channels [1], covert timing channels [6]
and enumeration of 22 covert channels in IPv6 [15]. Privacy problems with IPv6
are not limited to covert channels, for example, Mobile IPv6 introduceslocation
privacy problems [9].
2
Janne Lindqvist
64 bits
64 bits
subnet prefix interface id
Fig. 1. IPv6 Unicast Address Format
RFC 2460 - the draft standard speciﬁcation of IPv6 [8] - was published al-
ready in 1998. In addition to the speciﬁcation, IPv6 introduces many additional
mechanisms and protocols, one of them is the stateless address autoconﬁgura-
tion.
The IPv6 addressing architecture is deﬁned in RFC 4291 [10]. It has three
diﬀerent types of identiﬁers: unicast, anycast and multicast addresses. Unlike its
predecessor IPv4, the address architecture is hierarchical. In this context, hierar-
chy means that addresses have ﬁelds for deﬁning the scope of the address. Orig-
inally, the addressing architecture speciﬁed three scopes for unicast addresses.
Today, unicast addresses have two scopes: link-local and global, since RFC 3879
formally deprecated the site-local address scope [11]. Next, we elaborate the IPv6
Stateless Address Autoconﬁguration mechanism and privacy extensions for it.
The DAD procedure describe in the Introduction must be supported by all
IPv6 implementations [22]. The DAD procedure uses two diﬀerent Internet Con-
trol Message Protocol for IPv6 (ICMPv6) [7] messages: Neighbor Solicitation
(NS) and Neighbor Advertisement (NA). The Neighbor Solicitation message is
used for multicasting the tentative address to the network. The Neighbor Ad-
vertisement message is used to indicate that the tentative address is in use. The
message formats are deﬁned in RFC 2461 [20] and RFC 2462 [22].
Optimistic DAD modiﬁes the above. RFC 4429 speciﬁes a new optimistic
state that can be given to an address. The address can then be used before it
has been veriﬁed, but the use is not preferred if there is another usable address
available. [16]
The default way to use the IPv6 Stateless Address Autoconﬁguration is to
use the MAC address to derive the interface identiﬁer. However, this mechanism
has serious privacy problems [18, 19], which we quote below:
“Addresses generated using Stateless address autoconﬁguration con-
tain an embedded interface identiﬁer, which remains constant over time.
Anytime a ﬁxed identiﬁer is used in multiple contexts, it becomes possi-
ble to correlate seemingly unrelated activity using this identiﬁer.
The correlation can be performed by
– An attacker who is in the path between the node in question and
the peer(s) it is communicating to, and can view the IPv6 addresses
present in the datagrams.
– An attacker who can access the communication logs of the peers with
which the node has communicated.
[...]
In summary, IPv6 addresses on a given interface generated via State-
less Autoconﬁguration contain the same interface identiﬁer, regardless
IPv6 is Bad for Your Privacy
3
of where within the Internet the device connects. This facilitates the
tracking of individual devices (and thus potentially users).”
In simple terms, the privacy extensions propose to use instead of the ﬁxed
MAC-address based interface identier a random interface identiﬁer. But when
protocols use pseudorandom ﬁelds, they can be used as covert channels.
The most severe implications of the stateless address autoconﬁguration covert
channel is the possibility to divulge any kind of secrets, and thus, violate the
privacy of the user. For example, an operating system and IPsec vendor could use
the covert channel to transmit session keys when the users think they are merely
protecting their privacy with the privacy extensions of the stateless address
autoconﬁguration protocol.
The transmission of secret keys may need more bits than can ﬁt in the IPv6
address. However, depending on key sizes, only partial information of the key
may suﬃce. The fundamental issue is that any kind of information can be di-
vulged. For example, perhaps organization X is interested in what computers
in a country visit particular sites when they are mobile. This information can
be divulged with a single bit in the interface identiﬁer part. The computer can
remember the visits to a list of sites and after the boot-up send the information
in the new statelessly autoconﬁgured IPv6 address. Additionally, an encoding
scheme can be formulated to ensure that the particular bit is not accidentally
used. The subtle detail in this scenario is that the information can be passed
after boot-up, there is no need to change the IPv6 address before that.
2
Covert Channels in IPv6 Addresses
Using the duplicate address detection for covert channels is possible because
the interface identiﬁer part of the address can be chosen in random. In IPv6
enabled Ethernets, the 64 bits of the 128 bit IPv6 address are reserved for the
interface identiﬁer (Figure 1). The interface identiﬁer of the address distinguishes
individual devices in a local area network [8]. The 64 bits can be used for carrying
a message. The 64 bits is a major covert channel and threat because it is always
present in the IPv6 packets. Many covert channels presented in the related work
section can be protected from the outside attackers by using e.g. IPsec ESP.
To illustrate how large 64 bits is as a covert channel we consider IPsec ESP
CBC-mode ciphersuites. RFC 2451 [21] speciﬁes popular key sizes for IPsec ESP
CBC-mode ciphersuites. For example, CAST-128 and RC5 algorithms popular
sizes include 40 bits, which can be transmitted in a single IPv6 header. 3DES
algorithm default and popular size is 192 bits, which requires three diﬀerent
addresses. Naturally, when the encryption schemes evolve and key sizes increase,
the 64 bits will become less drastic for secret key divulding purposes. Despite
this, even partial keys can be used to crack.
4
Janne Lindqvist
2.1
Generic Attack Scheme
In this section, we present how e.g. a hardware manufacturer can use the IPv6
Stateless Address Autoconﬁguration to divulge secret keys of almost any security
protocol or other sensitive information.
The hardware manufacturer produces essentially embedded systems such as
PDAs. The operating system and the hardware is controlled by the manufacturer.
A wireless mobile device needs to use many addresses on diﬀerent layers of
the protocol stack for identiﬁcation purposes. One of these addresses is the MAC
address of the link layer protocol. For demonstration purposes, we consider the
IEEE 802.11b [13] standard based Wireless LAN (WLAN)