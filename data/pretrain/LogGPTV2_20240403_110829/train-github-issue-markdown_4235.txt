**System information**
Have I written custom code (as opposed to using a stock example script
provided in TensorFlow): Slightly.
OS Platform and Distribution : centos6.3
TensorFlow installed from: conda
TensorFlow version (use command below): v1.8.0(it already has the code
TF_CALL_half(REGISTER_BATCH_MATMUL_GPU);)
Python version: 3.6
CUDA/cuDNN version: 9.2
GPU model and memory: V100
Exact command to reproduce:
with tf.device("/gpu:0"):  
a = tf.random_normal(dtype=tf.float16, shape=[5, 2, 3], name='a')  
b = tf.random_normal(dtype=tf.float16, shape=[5, 3, 2], name='b')  
c = tf.matmul(a, b)  
sess = tf.Session(config=tf.ConfigProto(log_device_placement=True,
allow_soft_placement=False))  
print(sess.run(c).shape)
the problem:
Source code / logs
InvalidArgumentError (see above for traceback): Cannot assign a device for
operation 'MatMul_1': Could not satisfy explicit device specification
'/device:GPU:0' because no supported kernel for GPU devices is available.  
Registered kernels:  
device='GPU'; T in [DT_DOUBLE]  
device='GPU'; T in [DT_FLOAT]  
device='GPU'; T in [DT_COMPLEX128]  
device='GPU'; T in [DT_COMPLEX64]  
device='CPU'; T in [DT_INT32]  
device='CPU'; T in [DT_HALF]  
device='CPU'; T in [DT_DOUBLE]  
device='CPU'; T in [DT_FLOAT]  
device='CPU'; T in [DT_COMPLEX128]  
device='CPU'; T in [DT_COMPLEX64]
         [[Node: MatMul_1 = BatchMatMul[T=DT_HALF, adj_x=false, adj_y=false, _device="/devic