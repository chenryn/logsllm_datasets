  * I have searched the issues of this repository and believe that this is not a duplicate.
  * I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.3-SNAPSHOT
  * Operating System version: mac os 10.13.6
  * Java version: 1.8.0_171
### Steps to reproduce this issue
  1. run the code in unit test:
       @Test
        public void testRestProtocol() {
            protocol = ExtensionLoader.getExtensionLoader(Protocol.class).getExtension("rest");
            URL url = URL.valueOf("rest://127.0.0.1:5342/rest/say?version=1.0.0&interface=org.apache.dubbo.rpc.protocol.rest.DemoService");
            while (true) {
                Invoker invoker = protocol.refer(DemoService.class, url);
                invoker.destroy();
            }
        }
Pls. provide [GitHub address] to reproduce this issue.
### Actual Result
What actually happens?  
the size of LinkedList [clients] will keep growing, the ResteasyClient hold by
it will not release, which will cause OOM easily.
     ResteasyClient client = new ResteasyClientBuilder().httpEngine(engine).build();
    clients.add(client);
the clients in the linkedList will not release when invoker destroyed, they
will only be released when the rest protocol destroyed.  
I think the protocol layer should not hold the object's such like client, it
should be hold by the invoker and has the same lifecycle with invoker