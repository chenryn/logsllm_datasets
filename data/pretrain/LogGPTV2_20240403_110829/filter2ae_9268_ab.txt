# 实验记录与解决方案

## 1. 内部业务标志服务器访问流程

### 初始页面请求
- **目标主机**: `flag.local`
- **响应**
  ```
  HTTP/1.1 200 OK
  x-powered-by: Express
  content-type: text/html; charset=utf-8
  content-length: 498
  etag: W/"1f2-UE5AGAqbLVQn1qrfKFRIqanxl9I"
  date: Mon, 15 Oct 2018 17:06:06 GMT
  connection: close
  ```

  页面内容显示登录表单。

### 登录请求
- **方法**: `POST /login HTTP/1.1`
- **头部信息**:
  - `Host: flag.local`
  - `Content-Type: application/x-www-form-urlencoded`
  - `Content-Length: 38`
- **主体数据**: `user=realbusinessuser&pass=potoooooooo`
- **响应**
  ```
  HTTP/1.1 302 Found
  x-powered-by: Express
  set-cookie: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/
  location: /
  vary: Accept
  content-type: text/plain; charset=utf-8
  content-length: 23
  date: Mon, 15 Oct 2018 17:08:18 GMT
  connection: close
  ```

### 获取Flag
- 使用上一步获得的cookie重新访问主页。
- **请求**
  - `GET / HTTP/1.1`
  - `Host: flag.local`
  - `Cookie: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D;`
- **响应**
  ```
  HTTP/1.1 200 OK
  x-powered-by: Express
  content-type: text/html; charset=utf-8
  content-length: 438
  etag: W/"1b6-eYJ8DUTdkgByyfWFi6OJJSjopFg"
  date: Mon, 15 Oct 2018 17:10:13 GMT
  connection: close
  ```

  页面展示欢迎信息及当天的Flag: `picoCTF{0nLY_Us3_n0N_GmO_xF3r_pR0tOcol5_2e14}`

---

## 2. Flaskcards 漏洞利用

### 背景
- 网站使用Flask框架，可能存在服务器端模板注入（SSTI）漏洞。
- 目标网站: [http://2018shell1.picoctf.com:23547/](http://2018shell1.picoctf.com:23547/)

### 解决步骤
1. 尝试输入简单的表达式如`{{1+1}}`以确认是否存在SSTI漏洞。
2. 注册账号并登录后，在创建卡片时再次尝试输入SSTI测试代码。
3. 成功读取配置文件中的`SECRET_KEY`值，即为Flag: `picoCTF{secret_keys_to_the_kingdom_584f8327}`

---

## 3. 生存监控工具安全分析

### 背景
- 应用程序地址: [http://2018shell1.picoctf.com:31070/](http://2018shell1.picoctf.com:31070/)
- 提示指出客户端和服务器端均有验证机制，但服务器端验证可能存在问题。

### 解决方案
- 分析源码发现正则表达式用于IP格式检查存在缺陷。
- 利用该缺陷执行任意命令，并通过DNSLog或直接反弹Shell获取敏感信息。
- 最终找到Flag: `picoCTF{n3v3r_trust_a_b0x_d7ad162d}`

---

## 4. 帮助我重置密码挑战

### 背景
- 目标网站: [http://2018shell1.picoctf.com:19054/](http://2018shell1.picoctf.com:19054/)
- 需要突破常规漏洞寻找新的攻击点。

### 解决思路
- 探索非典型漏洞，考虑应用程序逻辑错误或其他潜在弱点。具体操作细节需进一步探索。