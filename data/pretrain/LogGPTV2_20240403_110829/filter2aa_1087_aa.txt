New	
  Exploit	
  Mi-ga-on	
In	
  Internet	
  Explorer	
HITCON	
  X	
@K33nTeam	
  @KeenTeam	
@promised_lu	
About	
  Me	
Amateur	
  browser	
  exploiter	
Main	
  work	
  is	
  wri-ng	
  fuzzers	
2	
3	
Background	
Internet	
  Explorer	
  Vulnerability	
  Sta-s-cs	
4	
2013	
• 
CVE-­‐2013-­‐0025	
  CParaElement	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐1311	
  CDOMTextNode	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐1347	
  CGenericElement	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐2551	
  COALineDashStyleArray	
  Integer	
  Overﬂow	
  Pwn2Own	
• 
CVE-­‐2013-­‐3184	
  CFlatMarkupPointer	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐3205	
  CCaret	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐3893	
  CTreeNode	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2013-­‐3897	
  CDisplayPointer	
  Use-­‐ARer-­‐Free	
5	
2013	
• 
129	
  CVE	
• 
Most	
  are	
  Use-­‐ARer-­‐Free	
6	
2014	
• 
CVE-­‐2014-­‐0322	
  CMarkup	
  Use-­‐ARer-­‐Free	
• 
CVE-­‐2014-­‐1776	
  CMarkup	
  Use-­‐ARer-­‐Free	
7	
2014	
• 
135	
  CVE	
  from	
  January	
  to	
  July	
• 
More	
  than	
  2013	
8	
Exploit	
  Mi-ga-on	
• 
Virtual	
  Table	
  Guard	
  is	
  introduced	
  in	
  Internet	
  Explorer	
  10	
• 
An--­‐Use-­‐ARer-­‐Free	
9	
Virtual	
  Table	
  Guard	
10	
New	
  Exploit	
  Mi-ga-on	
• 
Isolated	
  Heap	
  is	
  introduced	
  in	
  MS14-­‐035	
• 
Memory	
  Protector	
  is	
  introduced	
  in	
  MS14-­‐037	
• 
Internet	
  Explorer	
  6~11	
• 
An--­‐Use-­‐ARer-­‐Free	
11	
Agenda	
• 
Isolated	
  Heap	
• 
Memory	
  Protector	
• 
Fuzzing	
  Issues	
• 
Countermeasures	
12	
13	
Isolated	
  Heap	
g_hIsolatedHeap	
g_hIsolatedHeap	
  =	
  HeapCreate(0,	
  0,	
  0);	
if	
  (g_hIsolatedHeap)	
  {	
  ULONG	
  HeapInformation	
  =	
  2;	
  //	
  Enable	
  LFH	
  HeapSetInformation(g_hIsolatedHeap,	
  0,	
&HeapInformation,	
  sizeof(HeapInformation));	
}	
14	
_MemIsolatedAlloc	
LPVOID	
  __stdcall	
  _MemIsolatedAlloc(SIZE_T	
  dwBytes)	
{	
  if	
  (!dwBytes)	
  dwBytes	
  =	
  1;	
  return	
  HeapAlloc(g_hIsolatedHeap,	
  0,	
  dwBytes);	
} 
15	
_MemIsolatedAllocClear	
LPVOID	
  __stdcall	
  _MemIsolatedAllocClear(SIZE_T	
  dwBytes)	
{	
  return	
  HeapAlloc(g_hIsolatedHeap,	
  8,	
  dwBytes);	
}	
16	
_MemIsolatedFree	
void	
  __stdcall	
  _MemIsolatedFree(LPVOID	
  lpMem)	
{	
  if	
  (lpMem)	
  MemoryProtection::HeapFree(g_hIsolatedHeap,	
  0,	
lpMem);	
}	
17	
Internet	
  Explorer	
  6	
18	
Internet	
  Explorer	
  6	
19	
Isolated	
  Objects	
• 
All	
  DOM	
  Objects	
• 
Some	
  Render	
  Objects	
20	
How	
  To	
  Fill	
  Isolated	
  Objects	
  In	
  Use-­‐ARer-­‐Free	
• 
BSTR	
• 
String	
• 
Struct	
• 
Isolated	
  Object	
21	
22	
Memory	
  Protector	
ULONG_PTR	
  m_Block;	
  //	
  address	
  of	
  heap	
  block	
SIZE_T	
  m_Size;	
  //	
  size	
  of	
  heap	
  block	
SBlockDescriptor	
23	
SBlockDescriptorArray	
SBlockDescriptor	
  *m_BlockDescriptors;	
  //	
  array	
  of	
  heap	
  blocks	
SIZE_T	
  m_Size;	
  //	
  total	
  size	
  of	
  all	
  heap	
  blocks	
ULONG	
  m_Count;	
  //	
  count	
  of	
  heap	
  blocks	
24	
MemoryProtec-on::HeapFree	
• 
Replace	
  HeapFree	
  in	
  MSHTML	
25	
MemoryProtec-on::HeapFree	
BOOL	
  __stdcall	
  MemoryProtection::HeapFree(HANDLE	
hHeap,	
  DWORD	
  dwFlags,	
  LPVOID	
  lpMem)	
{	
  CMemoryProtector::ProtectedFree(hHeap,	
  dwFlags,	
lpMem);	
  return	
  TRUE;	
}	
26	
CMemoryProtector::ProtectedFree	
• 
Reclaim	
  memory	
• 
Add	
  heap	
  block	
  to	
  SBlockDescriptorArray	
  instead	
  of	
  free	
27	
CMemoryProtector::ProtectedFree	
static	
  void	
  __stdcall	
  CMemoryProtector::ProtectedFree(HANDLE	
  hHeap,	
DWORD	
  dwFlags,	
  LPVOID	
  lpMem)	
{	
…	
  MemoryProtector-­‐>ReclaimMemory((ULONG_PTR	
  *)&lpMem,	
  100000);	
…	
  if	
  (MemoryProtector-­‐>AddBlockDescriptor((ULONG_PTR)lpMem,	
  hHeap	
==	
  g_hIsolatedHeap,	
  &Size))	
  memset(lpMem,	
  0,	
  Size);	
…	
}	
28	
CMemoryProtector::ReclaimMemory	
• 
Do	
  nothing	
  if	
  total	
  size	
  of	
  SBlockDescriptorArray	
  is	
  less	
  than	
  100000	
• 
Mark	
  blocks	
• 
Reclaim	
  unmarked	
  blocks	
29	
CMemoryProtector::ReclaimMemory	
void	
  CMemoryProtector::ReclaimMemory(ULONG_PTR	
  *Blocks,	
  UINT	
  Size)	
{	
  if	
  (GetCount()	
  &&	
  (GetSize()	
  >=	
  Size	
  ||	
  m_ForceReclaim))	
  {	
  MarkBlocks(Blocks);	
  ReclaimUnmarkedBlocks();	
  }	
} 
30	
CMemoryProtector::ReclaimMemory	
Stack 
Array 
lpMem 
RetAddr 
… 
Pointer 
… 
Block	
  1 
… 
… 
Block	
  N 
… 
31	
CMemoryProtector::MarkBlocks	
• 
Traverse	
  thread	
  stack	
  as	
  array	
  of	
  pointers	
• 
If	
  a	
  pointer	
  points	
  to	
  a	
  block	
  in	
  SBlockDescriptorArray,	
  mark	
  the	
  block	
32	
CMemoryProtector::MarkBlocks	
void	
  CMemoryProtector::MarkBlocks(ULONG_PTR	
  *Blocks)	
{	
  ULONG_PTR	
  Low	
  =	
  LowAddress();	
  ULONG_PTR	
  High	
  =	
  HighAddress();	
  for	
  (ULONG	
  i	
  =	
  (m_StackHighAddress	
  -­‐	
  (ULONG_PTR)Blocks)	
  /	
sizeof(ULONG_PTR);	
  i	
  !=	
  0;	
  i-­‐-­‐)	
  MarkBlockForAddress(*Blocks++,	
  Low,	
  High);	
}	
33	
CMemoryProtector::MarkBlocks	
Stack 
Array 
lpMem 
RetAddr 
… 
Pointer 
… 
Block	
  1 
… 
… 
Block	
  N 
… 
34	
CMemoryProtector::ReclaimUnmarkedBlocks	
• 
Free	
  unmarked	
  blocks	
• 
Unmark	
  marked	
  blocks	
35	
CMemoryProtector::ReclaimUnmarkedBlocks	
void	
  CMemoryProtector::ReclaimUnmarkedBlocks()	
{	
  for	
  (ULONG	
  i	
  =	
  0;	
  i	
  IsMarked())	
  BlockDescriptor-­‐>Unmark();	
  else	
  ::HeapFree(hHeap,	
  0,	
  (LPVOID)BlockDescriptor-­‐
>BaseAddress());	
…	
  }	
} 
36	
CMemoryProtector::ReclaimUnmarkedBlocks	
Stack 
Array 
lpMem 
RetAddr 
… 
Pointer 
… 
Freed 
Freed 
Freed 
Block	
  N 
Freed 
37	
Visual	
  Studio	
  Port	
• 
heps://github.com/promised-­‐lu/MemoryProtec-on	
38	
Delay	
  Free	
  Or	
  Never	
  Use-­‐ARer-­‐Free	
• 
Unable	
  to	
  ﬁll	
  Use-­‐ARer-­‐Free	
  Object	
39	
40	
Fuzzing	
  Issues	
Isolated	
  Heap	
• 
Isolated	
  Heap	
  reduces	
  probability	
  of	
  Use-­‐ARer-­‐Free	
  if	
  PageHeap	
  is	
turned	
  oﬀ	
• 
Patch	
  g_hIsolatedHeap	
  to	
  Process	
  Heap	
41	
Memory	
  Protector	
• 
Memory	
  Protector	
  sharply	
  reduces	
  probability	
  of	
  Use-­‐ARer-­‐Free	
• 
Patch	
  memset	
  in	
  CMemoryProtector::ProtectedFree	
  (inline	
  problem)	
• 
Turn	
  oﬀ	
  Memory	
  Protector	
  through	
  registry	
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet	
  Explorer\MAIN
\FeatureControl\FEATURE_MEMPROTECT_MODE]	
  "iexplore.exe"=dword:00000000	
42	
43	
Countermeasures	
Free	
  Problem	
• 
Fill	
  SBlockDescriptorArray	
  to	
  trigger	
  ReclaimUnmarkedBlocks	
• 
Windows	
  7	
  x86	
• 
Internet	
  Explorer	
  11	
44	
CollectGarbage2	
function	
  CollectGarbage2()	
{	
  var	
  video	
  =	
  new	
  Array();	
  for	
  (var	
  i	
  =	
  0;	
  i	
  <	
  250;	
  i++)	
  {	
  video[i]	
  =	
  document.createElement("video");	
  //	
  400	
  bytes	
  }	
  video	
  =	
  null;	
  CollectGarbage();	
  //	
  ReclaimUnmarkedBlocks	
}	
45	
Delay	