#### Code Sample, a copy-pastable example if possible
    df = pd.DataFrame([['A', 1],  
                       ['B', 2], 
                       ['B', 3], 
                       ['A', 4]], columns=['Col1', 'Col2'])
    df['Col1'] = pd.Categorical(df.Col1)
![df](https://camo.githubusercontent.com/ef229ae40aa2db2b89e737d36c6a68dcb4126229520f40dab8d0c3ba7a61ec4c/68747470733a2f2f692e696d6775722e636f6d2f33696e75674c512e706e67)
    pd.merge(df, df, on='Col1', how='inner')
#### Problem description
According to Pandas 0.23.0 doc :
for the keyword "how", the especially "inner" config (bolded part):
> how : {‘left’, ‘right’, ‘outer’, ‘inner’}, default ‘inner’
>
>   * left: use only keys from left frame, similar to a SQL left outer join;
> preserve key order
>   * right: use only keys from right frame, similar to a SQL right outer
> join; preserve key order
>   * outer: use union of keys from both frames, similar to a SQL full outer
> join; sort keys lexicographically
>   * inner: use intersection of keys from both frames, similar to a SQL inner
> join; **preserve the order of the left keys**
>
So the merge is supposed to preserve the order of the left keys.  
However, if Categorical Data is used as the key to merge, the order is not
preserved.
The output dataframe has been sorted as per the join key, and the index has
been reseted.  
Which obviously provoke some unwanted results.
Note that _how='left'_ does provide the correct results (regarding key
ordering).
#### Expected Output
Expected Output :  
![Expected
Output](https://camo.githubusercontent.com/6874ba4fd903ecc54cb1bb0895ca7c424f4193ce4a7a686250a4178efd2cf75d/68747470733a2f2f692e696d6775722e636f6d2f476e74525770452e706e67)
Actual Output :  
![Actual
Output](https://camo.githubusercontent.com/0d5e5bc9780b6b933e3392a0cdbbcc0cb0b33aee28a053e3f4fa4599ea0a4fe4/68747470733a2f2f692e696d6775722e636f6d2f4e4e5a666871312e706e67)
#### Output of `pd.show_versions()`
## INSTALLED VERSIONS
commit: None  
python: 2.7.14.final.0  
python-bits: 64  
OS: Linux  
OS-release: 4.13.0-38-generic  
machine: x86_64  
processor: x86_64  
byteorder: little  
LC_ALL: None  
LANG: en_US.UTF-8  
LOCALE: None.None
pandas: 0.23.0  
pytest: None  
pip: 9.0.1  
setuptools: 36.5.0.post20170921  
Cython: None  
numpy: 1.14.3  
scipy: 1.1.0  
pyarrow: None  
xarray: None  
IPython: 5.4.1  
sphinx: None  
patsy: None  
dateutil: 2.6.1  
pytz: 2018.4  
blosc: None  
bottleneck: None  
tables: None  
numexpr: None  
feather: None  
matplotlib: None  
openpyxl: None  
xlrd: None  
xlwt: None  
xlsxwriter: None  
lxml: None  
bs4: None  
html5lib: 0.9999999  
sqlalchemy: None  
pymysql: None  
psycopg2: None  
jinja2: 2.9.6  
s3fs: None  
fastparquet: None  
pandas_gbq: None  
pandas_datareader: None
@chrish42