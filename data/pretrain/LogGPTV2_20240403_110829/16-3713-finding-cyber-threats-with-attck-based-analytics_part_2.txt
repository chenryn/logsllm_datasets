detection capabilities are necessary for when a threat bypasses established defenses or uses new
means to enter a network.
Principle 2: Focus on Behavior – Signatures and
indicators are useful with a priori knowledge of
adversary infrastructure and tool artifacts, but
defensive tools that rely on known signatures may
become unreliable when signatures become stale in
relation to a changing threat. Sophisticated
defenses should also incorporate detecting and
learning from post-compromise adversary
behavior.
Principle 3: Use a Threat-based Model – An
accurate and well-scoped threat model is necessary
to ensure that detection activities are effective
against realistic and relevant adversary behaviors.
Principle 4: Iterate by Design – The adversarial tool
and technique landscape is constantly evolving. A
Figure 1. Five Principles of Threat-Based Security
successful approach to security requires constant,
iterative evolution and refinement of security models, techniques, and tools to account for
changing adversary behavior and to understand how networks are compromised by an APT.
Principle 5: Develop and Test in a Realistic Environment – Analytic development and
refinement should be performed in a production network environment, or one that matches
realistic network conditions as closely as possible. Behavior generated by real network users
should be present to account for the expected level of sensor noise generated by standard
network use. Whenever possible, detection capabilities should be tested by emulation of
adversary behavior within that environment.
2.1 Principle 1: Include Post-Compromise Detection
There are likely ways to penetrate even the most well-defended network perimeter. For instance,
currently there is no entirely effective way to prevent every zero-day vulnerabilities from being
5
©©22001177 TThhee MMIITTRREE CCoorrppoorraattiioonn.. AAllll rriigghhttss rreesseerrvveedd..
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
exploited [12, 13], no method to instantaneously patch software, no way to prevent humans from
exposing passwords, and no cost-effective means of securing supply chains. The sheer size and
complexity of the attack surface means that APTs will likely continue to find ways to circumvent
common security practices and be successful at penetrating enterprise networks to accomplish
their objectives. As such, any effective network security should take into account post-
compromise adversary behavior in order to minimize damage caused by an adversary who
successfully penetrates your initial defenses.
2.2 Principle 2: Focus on Behavior
Many contemporary defenses focus on signatures or indicators of compromise (IOCs). IOCs are
artifacts or combinations of artifacts that may be observed in the presence of known malicious
software or activity. [14] In many cases these are brittle and easy for adversaries to bypass by
modifying malware or infrastructure. Indicators like file hashes, IP addresses, and domain names
have become the focal point for many network defenders, yet each of these are trivial for an
adversary to change in order to avoid detection. In addition, the defending organization needs to
have access to relevant and up-to-date indicators through a threat indicator sharing program or
commercial data feed, all of which may still not ensure that defenders are able to keep pace with
adversary changes.
An intrusion detection program incorporating behavioral detection analytics is more resilient to
attempts by adversaries to avoid signature-based detection through indicator modification.
Behavioral detection approaches help identify the common behaviors that are highly likely to be
performed across many adversary groups during an intrusion, and are independent of specific
changes to indicators that adversaries make. This is the premise that drove the development of
ATT&CK-based analytics.
2.3 Principle 3: Use a Threat-based Model
The use of a threat model has long been the foundation of a robust security process. The
compilation of adversary actions and behaviors in a threat model allows defenders to adequately
plan and evaluate their defenses. In keeping with Principles 1 and 2, the threat model
encapsulated in ATT&CK describes post-compromise adversary behaviors within enterprise
networks. Figure 2 shows how the ATT&CK model takes the three post-compromise or post-
exploit stages of the cyber-attack lifecycle [15]29 and expands them into 10 distinct tactics that
are employed by APTs.
29 First articulated by Lockheed Martin as the Cyber Kill Chain® [29]
6
©©22001177 TThhee MMIITTRREE CCoorrppoorraattiioonn.. AAllll rriigghhttss rreesseerrvveedd..
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
Figure 2. The ATT&CK Tactic Categories
2.4 Principle 4: Iterate by Design
An iterative process was critical to creating an effective behavioral analytics and detection
system aligned with the ATT&CK model. An important part of this process involved testing
behavioral analytics every few months against a Red Team that emulated known APT behaviors
documented in ATT&CK-based cyber games. This approach is covered in more detail in Section
4. One of the benefits of employing an iterative process is the quick feedback loop provided to
analytic developers. By only targeting a few analytics per iteration and then validating their
performance against a simulated threat within a real network, analysts can quickly see which
ideas are useful, which ones need to be developed further, and which ones should be discarded.
This approach provides numerous opportunities for a developer to test hypotheses about how
best to detect given behaviors on a real network.
Another benefit of iteration is the ability for network defenses to adapt to a changing threat
landscape. As previously stated, a behavioral detection approach provides an effective method
for dealing with APTs that rapidly change their behavior to overcome defensive barriers. As in
the hypothetical APT example described in Section 1.1of this paper, adversaries use legitimate
web services and strong encryption to bypass network protocol signature detection and
blacklists, but they will still need to interact with an endpoint system in a way that is consistent
with how that system operates. In this paper’s hypothetical APT example, the remote operator
uses a new Windows service to install persistent malware. However, regardless of what malware
the intruder tries to run, the presence of something like a new Windows service is one of the
adversary behaviors that the ATT&CK model describes and may combine with other events to
recognize distinct patterns of adversary behaviors.
Behavioral detection makes it harder for adversaries to avoid detection. However, adversaries
will still continue to change their behavior over time and the quick feedback that an iterative
approach provides regarding defensive capabilities will remain essential for effectively detecting
the latest threat behaviors.
2.5 Principle 5: Develop and Test in a Realistic Environment
It is important for the iterative development of analytics and detection capabilities (2.4) to be
performed in a live production environment, or one that is as realistic as possible. To do this,
MITRE’s Red Team emulated APT behavior based on the latest understanding of current threats
within ATT&CK. The actual development and testing of analytics was performed on a 250-node
7
©©22001177 TThhee MMIITTRREE CCoorrppoorraattiioonn.. AAllll rriigghhttss rreesseerrvveedd..
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
enclave on the MITRE corporate network (See Section 5 for more details.), with real users
performing their normal daily work to ensure realistic background system noise. By using a Red
Team that closely mimicked real APT behaviors on a live network, the analytics were tested
through the cyber games process in an environment that helped ensure their ability to detect
desired adversary behaviors effectively.
If the analytics had been developed and tested in a laboratory environment without real users
performing real work using real mission applications, the adversary behaviors that would have
been detected may have ended up being behaviors routinely performed by users or system
administrators, thus making them useless for detecting APT behavior on a production network.
8
©©22001177 TThhee MMIITTRREE CCoorrppoorraattiioonn.. AAllll rriigghhttss rreesseerrvveedd..
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
ATT&CK
ATT&CK is a model and framework for describing the actions an adversary takes while
operating within an enterprise network. The model can be used to better characterize post-
compromise adversary behavior with the goal of distilling common behaviors across known
intrusion activity into individual or combinations of actions that an adversary may take to
achieve their goals. The TTPs described in ATT&CK were selected based on observed APT
intrusions from public reporting, and are included in the model at a level of abstraction necessary
for effectively prioritizing defensive investments and comparing endpoint intrusion detection
capabilities.
3.1 Post-Compromise Threat-Based Modeling
ATT&CK addresses a gap in the community’s understanding of specific post-compromise
intrusion details. Public reports on adversary groups and intrusions mention high-level details
about adversary behavior, but often lack critical information that could be used to defend against
intruder techniques. For example, reports that mention lateral movement in general terms without
providing details about how an adversary performs these movements do not help an organization
defend against that specific tactic. For instance, adversarial use of the Windows remote desktop
feature is a very different way of moving laterally than copying a remote access tool to a shared
directory and issuing a remote service start command to execute it.
MITRE created the ATT&CK model to address the need for additional details while remaining
grounded in observed and plausible adversary behavior. Information sources that informed the
model included public threat intelligence reporting, penetration testing, red teaming knowledge,
and security research. The techniques in ATT&CK largely focus on Windows enterprise systems
due to the amount of publicly available intrusion reports containing details and adversary tools
that work against Windows—suggesting that enterprise network intrusions tend to focus on these
types of systems. Even so, because adversaries’ higher level objectives tend to remain the same
regardless of the platform, the ATT&CK model can be expanded into non-Windows-based
enterprise systems, although doing so would require additional information about adversary
techniques on these platforms to maintain the desired level of empirical realism.
ATT&CK is broken down into high-level adversary tactic categories and individual techniques
that adversaries may use within each of the tactic categories. Tactics describe why an adversary
performs an action, and techniques describe how they do it. Techniques are described in the
ATT&CK model from both the offensive and defensive points of view so they are a useful
reference and pivot between both disciplines. ATT&CK techniques also contain references to
known examples of the technique having been used and links to public threat reporting on
adversary groups known to use that technique or related tools to provide examples of adversary
behavior in the wild.
9
©©22001177 TThhee MMIITTRREE CCoorrppoorraattiioonn.. AAllll rriigghhttss rreesseerrvveedd..
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
3.2 Tactics
Tactics represent the highest level of abstraction within the ATT&CK model. They are the
tactical goals an adversary has during an operation. The ATT&CK tactic categories are listed
here:
• Persistence – Any access, action, or configuration change to a system that gives an adversary
a persistent presence on that system. Adversaries will often need to maintain access to
systems through interruptions such as system restarts, loss of credentials, or other failures.
• Privilege Escalation – The result of techniques that cause an adversary to obtain a higher
level of permissions on a system or network. Certain tools or actions require a higher level of
privilege to work and are likely necessary at many points throughout a remote operation.
• Defense Evasion – Techniques an adversary may use for the purpose of evading detection or
avoiding other defenses.
• Credential Access – Techniques resulting in the access of, or control over, system, domain,
or service credentials that are used within an enterprise environment.
• Discovery – Techniques that allow an adversary to gain knowledge about a system and its
internal network.
• Lateral Movement – Techniques that enable an adversary to access and control remote
systems on a network. Often the next step for lateral movement is remote execution of tools
introduced by an adversary.
• Execution – Techniques that result in execution of adversary-controlled code on a local or
remote system.
• Collection – Techniques used to identify and gather information, such as sensitive files, from
a target network prior to exfiltration.
• Exfiltration – Techniques and attributes that result or aid in an adversary removing files and
information from a target network. This category also covers locations on a system or
network where an adversary may look for information to exfiltrate.
• Command and Control – Techniques and attributes of how adversaries communicate with
systems under their control within a target network. Examples include using legitimate
protocols such as HTTP to carry C2 information.
At this level, ATT&CK closely resembles other threat models that describe the adversary life
cycle. The difference between ATT&CK and these other models resides in its scope. ATT&CK
tactic categories are applicable from one individual endpoint system to the next as an adversary
moves across a network, whereas a model such as the cyber attack lifecycle (see Figure 2) takes
into account a much broader scope of the full operation according to an adversary's life cycle.
The tactics in the ATT&CK model also represent an adversarial process of navigating an
enterprise network.
Figure 3 provides an overview of the tactic categories and associated techniques described in the
ATT&CK model. The figure visually aligns individual techniques under each tactic category in
which they can be applied.
10
©2017 The MITRE Corporation. All rights reserved.
Approved for Public Release; Distribution Unlimited. Case Number 16-3713.
Privilege Credential Lateral Command and
Persistence Defense Evasion Discovery Execution Collection Exfiltration
Escalation Access Movement Control
Account Automated Automated Commonly Used
DLL Search Order Hijacking Brute Force Windows Remote Management
Discovery Collection Exfiltration Port
Data Communication
Legitimate Credentials Application Third-party Software Clipboard Data
Credential Compressed Through
Window
Dumping Removable
Accessibility Features Binary Padding Discovery Application Command-Line Data Staged Data Encrypted
Media
Deployment
Execution Data from Local Data Transfer
AppInit DLLs Code Signing File and Software Custom
Credential through API System Size Limits
Directory Command and
Component Manipulation Graphical User
Local Port Monitor Discovery Data from Exfiltration Over Control Protocol
Firmware Exploitation of Interface
Network Shared Alternative
Credentials in Vulnerability
New Service DLL Side-Loading Local Network InstallUtil Drive Protocol Custom
Files
Configuration Cryptographic
Disabling
Path Interception Input Capture Discovery Logon Scripts PowerShell Data from Protocol
Security Tools
Removable Exfiltration Over
Process
Scheduled Task File Deletion Network Sniffing Local Network Pass the Hash Media Command and Data Obfuscation
Hollowing
Connections Control Channel
Regsvcs / Fallback
Service File Permissions Weakness Discovery Pass the Ticket Email Collection
Regasm Channels
File System
Two-Factor
Service Registry Permissions Logical Offsets Network Service Remote Desktop Multi-Stage
Authentication Regsvr32 Input Capture Exfiltration Over
Weakness Scanning Protocol Channels
Interception Other Network
Indicator Medium
Web Shell Remote File Copy Rundll32 Screen Capture
Blocking Peripheral Multiband
Device Discovery Communication
Basic Exploitation of Vulnerability Remote Services Scheduled Task
Exfiltration Over
Input/Output
Replication Physical Medium Multilayer
System Bypass User Account Control Permission Scripting
Through Encryption
Groups
Removable Service Scheduled
Bootkit DLL Injection Discovery Peer Connections
Media Execution Transfer
Process
Indicator Shared Webroot Windows Remote File Copy
Change Default Discovery
Removal from Management
File Association Taint Shared
Tools Query Registry Instrumentation
Content Standard
Application Layer
Component Remote System Windows Admin
Indicator Protocol
Firmware Discovery Shares
Removal on Host
Hypervisor Security Standard
Software Cryptographic
Logon Scripts InstallUtil Discovery Protocol
Modify Existing
Masquerading System Standard Non-
Service
Information Application Layer
Redundant Discovery Protocol
Modify Registry
Access
Registry Run NTFS Extended System Uncommonly
Keys / Start Attributes Owner/User Used Port
Folder Discovery Web Service
Obfuscated Files
Security Support or Information System Service
Provider Discovery
Shortcut Process
Modification Hollowing
Redundant
Windows
Access
Management