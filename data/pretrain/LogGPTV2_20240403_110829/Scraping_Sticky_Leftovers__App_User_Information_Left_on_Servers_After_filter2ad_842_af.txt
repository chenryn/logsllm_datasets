9.10
275.78
3.03
10,311.26
92.98
345.92
9.05
259.03
2.96
1,104.22
266.51
231.29
many ﬁelds have to be ﬁlled-in on each screen. As shown
in Table 16, cleaning up one app can take from 10.53 seconds
to 1,104.22 seconds (median: 231.29 seconds).
To summarize, these results indicate that each tool in the
chain is efﬁcient, as is the overall approach.
10. Limitations
Our toolchain has four limitations. First, it cannot directly
remove LAI from the backend database since the database is
controlled by app developers/the app company. Second, the
LeftoverAccountAnalyzer is not fully automated as some apps
employ anti-automation mechanisms, e.g., CAPTCHA. Third,
our NLP analyses can only handle English text. Fourth, the
AccountDeletionAnalyzer cannot detect invisible buttons. All but
the ﬁrst limitation can be addressed with more engineering
effort.
11. Related Work
There is a rich literature on privacy issues in mobile apps.
However, we were not able to ﬁnd any approach that focused
on leftover accounts.
User control of personal data. The European Union’s
General Data Protection Regulation (GDPR) gives control of
personal data back to the owners. Truong et al. [31] designed a
GDPR-compliant personal data management platform. Vescovi
et al. [32] developed a tool enabling people to control and
share their personal data on mobile phones. Mun et al. [29]
introduced a privacy architecture in which individuals retain
ownership of their data.
Longitudinal privacy. Kr¨oger et al. [25] performed a study
on longitudinal privacy on mobile apps to examine how app
vendors have complied with subject access requests over four
years. Ayalon et al. [20] investigated the relation between
information aging and its sharing preferences on Facebook.
Mondal et al. [28] presented a study on understanding how
users control the longitudinal exposure of their publicly shared
social data.
Privacy leaks. Li et al. [26] proposed a static taint analyzer
to detect privacy leaks among Android app components. Yang
et al. [35] proposed an analysis framework to detect if sensitive
user data is being transmitted out of an Android phone,
whether users intend it or not. Gibler et al. [23] introduced
a static analysis framework for automatically ﬁnding potential
leaks of sensitive information in Android apps. Lin et al. [27]
analyzed user mental models of mobile app privacy through
crowdsourcing. Zuo et al. [37] investigated privacy leaks of
Android apps, but in the Cloud. Zhang et al. [34] revealed
that data persists on phones even after apps are uninstalled.
Zimmeck et al. conducted an extensive privacy survey of
Android apps [36]. Mylonas et al. proposed an approach for
assessing the privacy risk of Android users based on the
presence of speciﬁc permission combinations [30]. Wang et
al. detected privacy leaks of user-entered data for an app and
determined whether such leakage violate the app’s privacy
policy claims [33].
12. Conclusions
We expose and study the Leftover Account Information
problem – information retained on app servers after an app is
no longer used – which violates users’ privacy. Our approach
has four thrusts:
leftover accounts after uninstalling apps,
leftover accounts after deleting accounts, no account deletion
functionality, and lack of retention period. Detecting such
issues is complicated by several factors: lack of direct backend
access requires LAI inference; both apps and their websites
have to be analyzed; sophisticated NLP is required to extract
and discern account deletion actions or retention policies; non-
executable resources have to be connected to corresponding
actions in executable bytecode. We address these challenges
and develop four tools to detect LAI problems in Android
apps. We ran the tools on a substantial corpus of popular
Google Play apps, and revealed issues in hundreds of apps. Our
study and tools can improve Android users’ privacy by helping
end-users, developers, and app marketplaces understand and
mitigate the LAI problem.
Acknowledgments
We thank our anonymous shepherd and reviewers for their feed-
back. This material is based upon work supported by the National
Science Foundation under Grant No. CNS-1617584.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:26 UTC from IEEE Xplore.  Restrictions apply. 
132157
References
[1] “Zombie
accounts: Should
and
forgotten proﬁles?” Oct 2018, https://globalnews.ca/news/4542449/
zombie-accounts-should-you-be-deleting-old-logins-and-forgotten-proﬁles.
deleting
logins
you
old
be
[2] “Analyzing sentence structure,” Oct 2019, https://www.nltk.org/book/
[3] “Apktool - a tool for reverse engineering 3rd party, closed, binary
android apps,” Oct 2019, https://ibotpeaches.github.io/Apktool/.
[4] “Appium: Mobile app automation made awesome,” Oct 2019, http://
ch08.html.
appium.io/.
[5] “Discord – privacy policy,” Dec 2019, https://discordapp.com/privacy.
[6] “Don’t
ac-
counts
https://gizmodo.com/
dont-just-uninstall-old-apps-delete-your-accounts-as-we-1836237449.
[7] “How to clear out your zombie apps and online accounts,” Jul 2019,
uninstall
well,”
apps—delete
just
as
2019,
your
old
Jul
https://www.wired.com/story/delete-old-apps-accounts-online.
[8] “Infographic:
Why
app?”
infographic-why-users-uninstall-your-app/#gref.
2019,
Sep
users
uninstall
mobile
https://www.dotcominfoway.com/blog/
your
[9] “Screaming frog seo spider tool & crawler software,” Oct 2019, https:
//www.screamingfrog.co.uk/seo-spider/.
[10] “Semantic analysis (compilers) - wikipedia,” Oct 2019, https://en.
wikipedia.org/wiki/Semantic analysis (compilers).
[11] “tesseract-ocr/tesseract: Tesseract open source ocr engine (main reposi-
tory),” Oct 2019, https://github.com/tesseract-ocr/tesseract.
[12] “8 tools to track android and ios app uninstalls,” Oct 2020, https://
appsamurai.com/8-tools-to-track-android-and-ios-app-uninstalls/.
[13] “Firebase summit 2020 livestream day 1,” Oct 2020, https://youtu.be/
lAbNYQPUGYM?t=1162.
[14] “Most
popular
(sdks)
across
kits
2020,”
leading-mobile-app-backend-sdks-android/.
2020,
Nov
installed
android
backend
apps worldwide
development
of
february
https://www.statista.com/statistics/1036080/
software
as
[15] “Xposed framework,” Oct 2020, https://www.xda-developers.com/
xposed-framework-hub/.
[16] “mitmproxy,” July 2021, https://mitmproxy.org/.
[17] AppBrain, “Number of android apps on google play,” Oct 2020, https:
//www.appbrain.com/stats/number-of-android-apps.
[18] S. Arzt, S. Rasthofer, and E. Bodden, “The soot-based toolchain for
IEEE Press, 2017, p.
analyzing android apps,” ser. MOBILESoft ’17.
13–24. [Online]. Available: https://doi.org/10.1109/MOBILESoft.2017.2
[19] S. Arzt, S. Rasthofer, C. Fritz, E. Bodden, A. Bartel, J. Klein,
Y. Le Traon, D. Octeau, and P. McDaniel, “Flowdroid: Precise context,
ﬂow, ﬁeld, object-sensitive and lifecycle-aware taint analysis for android
apps,” in Proceedings of
the 35th ACM SIGPLAN Conference on
Programming Language Design and Implementation, ser. PLDI ’14.
New York, NY, USA: Association for Computing Machinery, 2014, p.
259–269. [Online]. Available: https://doi.org/10.1145/2594291.2594299
[20] O. Ayalon and E. Toch, “Retrospective privacy: Managing longitudinal
privacy in online social networks,” in Proceedings of the Ninth Sympo-
sium on Usable Privacy and Security, ser. SOUPS ’13. Association
for Computing Machinery, 2013.
[21] A. Baidya, “Mobile app retention challenge: 75% users uninstall
an app within 90 days,” May 2016, https://dazeinfo.com/2016/05/19/
mobile-app-retention-churn-rate-smartphone-users/.
[22] Emil
Protalinski
ﬁrebase
tools,”
google-updates-ﬁrebase-with-new-emulator-and-data-analysis-tools/.
updates
analysis
https://venturebeat.com/2020/10/27/
“Google
data
(VentureBeat),
new
2020,
emulator
with
Oct
and
[23] C. Gibler, J. Crussell, J. Erickson, and H. Chen, “Androidleaks:
Automatically detecting potential privacy leaks in android applications
on a large scale,” in Proceedings of the 5th International Conference
on Trust and Trustworthy Computing,
Berlin,
Heidelberg: Springer-Verlag, 2012, pp. 291–307. [Online]. Available:
http://dx.doi.org/10.1007/978-3-642-30921-2 17
ser. TRUST’12.
[24] Google, “Automatically collected events,” Nov 2020, https://support.
google.com/ﬁrebase/answer/6317485?hl=en.
[25] J. L. Kr¨oger, J. Lindemann, and D. Herrmann, “How do app vendors
respond to subject access requests? a longitudinal privacy study on ios
and android apps,” in Proceedings of the 15th International Conference
on Availability, Reliability and Security, ser. ARES ’20. Association
for Computing Machinery, 2020.
[26] L. Li, A. Bartel, T. F. Bissyand´e, J. Klein, Y. Le Traon, S. Arzt,
S. Rasthofer, E. Bodden, D. Octeau, and P. McDaniel, “Iccta: Detecting
inter-component privacy leaks in android apps,” in Proceedings of the
37th International Conference on Software Engineering - Volume 1,
ser. ICSE ’15. Piscataway, NJ, USA: IEEE Press, 2015, pp. 280–291.
[Online]. Available: http://dl.acm.org/citation.cfm?id=2818754.2818791
[27] J. Lin, S. Amini, and J. I. Hong, “Expectation and purpose : Under-
standing users ’ mental models of mobile app privacy through crowd-
sourcing,” in Proceedings of the 2012 ACM Conference on Ubiquitous
Computing. ACM, 2012, pp. 501–510.
[28] M. Mondal, J. Messias, S. Ghosh, K. Gummadi, and A. Kate, “Longitu-
dinal privacy management in social media: The need for better controls,”
IEEE Internet Computing, pp. 1–1, 2017.
[29] M. Mun, S. Hao, N. Mishra, K. Shilton, J. Burke, D. Estrin, M. Hansen,
and R. Govindan, “Personal data vaults: A locus of control for personal
data streams,” in Proceedings of the 6th International COnference, ser.
Co-NEXT ’10. Association for Computing Machinery, 2010.
[30] A. Mylonas, M. Theoharidou, and D. Gritzalis, “Assessing privacy risks
in android: A user-centric approach,” in International Workshop on Risk
Assessment and Risk-driven Testing, 2013.
[31] N. B. Truong, K. Sun, G. M. Lee, and Y. Guo, “Gdpr-compliant personal
data management: A blockchain-based solution,” IEEE Transactions on
Information Forensics and Security, vol. 15, pp. 1746–1761, 2020.
[32] M. Vescovi, C. Perentis, C. Leonardi, B. Lepri, and C. Moiso, “My
data store: Toward user awareness and control on personal data,” ser.
UbiComp ’14 Adjunct. Association for Computing Machinery, 2014,
p. 179–182.
[33] X. Wang, X. Qin, M. B. Hosseini, R. Slavin, T. D. Breaux, and J. Niu,
“Guileak: Tracing privacy policy claims on user input data for android
applications,” in Proceedings of the 40th International Conference on
Software Engineering, ser. ICSE ’18. New York, NY, USA: Association
for Computing Machinery, 2018, p. 37–47.
[34] Z. Xiao, Y. Kailiang, A. Yousra, Q. Zhenshen, and D. Wenliang, “Life
after app uninstallation: Are the data still alive? data residue attacks
on android,” in Proceedings of the 23rd Network & Distributed System
Security Symposium, 2016, pp. 1–15.
[35] Z. Yang, M. Yang, and X. S. Wang, “Appintent : Analyzing sensitive data
transmission in android for privacy leakage detection,” in Proceedings
of the 2013 ACM SIGSAC conference on Computer & communications
security. ACM, 2013, pp. 1043–1054.
[36] S. Zimmeck, P. Story, A. Ravichander, D. Smullen, Z. Wang, J. Reiden-
berg, N. C. Russell, and N. Sadeh, “MAPS: Scaling privacy compliance
analysis to a million apps,” in 19th Privacy Enhancing Technologies
Symposium (PETS 2019), vol. 3.
Stockholm, Sweden: Sciendo, July
2019, pp. 66–86.
[37] C. Zuo, Z. Lin, and Y. Zhang, “Why does your data leak? uncovering
the data leakage in cloud from mobile apps,” in Proceedings of the 40th
IEEE Symposium on Security and Privacy, 2019.
13. Appendix
13.1. Tool Chain Architecture
Figure 7 shows the components of our tool chain (in the
center), the third-party frameworks and tools we leveraged,
and the ﬂow diagram between these components.
We leverage (or build on top of) various kinds of tools,
for static analysis, dynamic analysis, automatic testing and
website crawling, NLP and OCR.
Our static analyses are built on top of Soot/Flowdroid. We
extended Soot/Flowdroid to permit a ﬁner data-ﬂow/def-use-
chains analysis (between arbitrary pairs of statements, rather
than just between predeﬁned sources and sinks).
Dynamic analysis tools include the third-party Appium (for
automated testing) and our own LAI Monitor (for intercepting
and logging AM operations). We developed the LAI Mon-
itor on top of the Xposed framework. Our LAI Monitor
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:26 UTC from IEEE Xplore.  Restrictions apply. 
142158
Fig. 7: Tool Chain Architecture.
is conﬁgurable to intercept various API calls, including the
Android, Firebase, or Java APIs. Note that when the user
creates or deletes an account, Android/Java/Firebase APIs will
be called; our LAI Monitor logs the AM operation before the
messages are sent to the backend server. The LAI Monitor
implementation and manual are available on GitHub.6
For NLP we leverage the NLTK library to identify AD
strings and retention period strings. For OCR, Tesseract is used
to extract text from image assets, e.g., ﬁgures embedded with
the app or on the website. For web crawling, Screaming Frog
is used to automatically download APK ﬁles and crawl web
pages.
13.2. Trees for AD String Detection
To illustrate the grammar, we use phrase structure trees [2]
to show the semantic structure [10] of a sentence. Each node in
the tree (including the words) is called a constituent. Figure 8
shows two example apps’ phrase structure trees.
In Figure 8-top, the Fitbit app’s tree has a V erbphrase
subtree whose verb is an AD verb. The subtree contains a
N ounphrase subtree whose N oun is an AD noun. As this
string is in the language induced by the grammar, we deem it
an AD string.
In contrast, for the Zomato app (Figure 8-bottom) the phrase
structure tree contains AD verbs and AD nouns, but it does
not conform to the grammar and is labeled as a non-AD
string because the succeeding subtree of the V erbphrase is a
propositional phrase tree (as opposed to N ounphrase).
6. https://github.com/LeftoverAccountInformation/LAI/tree/master/
LeftoverAccountAnalyzer/LaiMonitor
152159
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:26 UTC from IEEE Xplore.  Restrictions apply. 
AccountDeletionAnalyzerRetentionPeriodAnalyzerLeftoverAccountAnalyzerLeftoverAccountCleanerApktoolAPK	file	decompilingTesseractOCR	engineScreaming	FrogWeb	crawlerAppiumAutomated	Dynamic	TestingLAI	MonitorAM	operation	loggingSoot	FlowdroidData-flow/def-use	chain	analysisNLTKNLP	ProcessingTool	ChainStatic	AnalysisDynamic	AnalysisAD	strings/retention	period	stringsText	from	APK	files/web	pagesImage	textImages	from	APK	files/web	pagesWeb	pagesDexbytecodeDef-use	chain	between	GUI	element	and	codeAPK	files,	Commands	to	operate	GUI	elementsAM	operation	logAPK	fileDecompiled	APK	filesApps	with	ADFGUI	element	statusAPK	fileApps	with	ADFApp/website	addressXposedFrameworkAPI	interceptionFitbit: AD
Zomato: Not AD
Fig. 8: Phrase Structure Trees Discerning AD from Not AD. Abbreviations: S(Simple declarative clause), SQ+FRAG(Sentence
Fragment), ADJP(Adjective Phrase), SBAR(Clause introduced by a subordinating conjunction), VP(Verb Phrase), NP(Noun
Phrase), PP(Prepositional Phrase), JJ(Adjective), VB(Verb, base form), PRP$(Possessive pronoun), NN(Noun), NNS(Noun, plural),
IN(Preposition or subordinating conjunction), TO(to), DT(Determiner), VBG(Verb, gerund or present participle), VBN(Verb, past
participle),VBP(Verb,non-3rdpersonsingularpresent)
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:26 UTC from IEEE Xplore.  Restrictions apply. 
162160
                                              SQ+FRAG                                                                        __________|_________________________________                                         ADJP                                          |     ___________________________________|__________                                  |     |                                             S+VP                               |    |                         _____________________|________________                 |     |                        VP                          |          |                |    |        ________________|______                     |          |                |     |       |                       NP                   |          |                |    |       |           ____________|________            |          |                |     |       |          |                     PP          |          VP               |    |       |          |                 ____|_____      |     _____|____            |     |       |          NP               |          NP    |    |          NP          |    |       |      ____|_____           |          |     |    |      ____|_____      |     JJ      VB   PRP$        NN         IN         NN    TO   VB    DT         NN    .    |       |     |          |          |          |     |    |     |          |     |   please provide your     password      in       order   to delete this     account  .   ('AD', '')                                                           SQ+FRAG                                                                                                          ________|_______________________________________________________                                                     ADJP                                                              |               _____________________________________|__________________________________________                      |              ADJP                                                                   |          |                     |     _________|________________________                                             |          |                     |     |                                SBAR+S                                         |          |                     |    |          ________________________|____________                                |          |                     |     |         |                                     VP                              |          |                     |    |         |                         ____________|______________                 |          |                     |     |         |                        |     |      |              PP               |          PP                    |    |         |                        |     |      |         _____|____            |    ______|_______              |     |         NP                       |     |      |        |          NP          |   |              NP            |    |     ____|________________        |     |      |        |      ____|_____      |   |       _______|______       |     JJ   ,    JJ     VBG      NNS     VBP   VBN    VBN       IN    DT         NN    JJ  TO     JJ             NN     .    |    |    |       |        |       |     |      |        |     |          |     |   |      |              |      |   sorry  ,  online ordering services  have  been disabled   for   this     account due  to suspicious     behaviour  .   ('Not AD', 'succeeding subtree is not a Noun Phrase')