# 9.XSS(Reflected)
## 1.XSS(Reflected)(Low)
相关代码分析
代码直接引用了name参数，并没有任何的过滤与检查，存在明显的XSS漏洞。
输入payload:``，成功弹框：
## 2.XSS(Reflected)(Medium)
相关代码分析
这里对输入进行了过滤，基于黑名单的思想，使用str_replace函数将输入中的``删除，这种防护机制是可以被轻松绕过的。
1.双写绕过
输入`
## 3.XSS(Reflected)(High)
相关代码分析
High级别的代码同样使用黑名单过滤输入，preg_replace()
函数用于正则表达式的搜索和替换，这使得双写绕过、大小写混淆绕过（正则表达式中i表示不区分大小写）不再有效。
漏洞利用
虽然无法使用``标签注入XSS代码，但是可以通过img、body等标签的事件或者iframe等标签的src注入恶意的js代码。
输入``，成功弹框：
## 4.XSS(Reflected)(Impossible)
相关代码分析
可以看到，Impossible级别的代码使用htmlspecialchars函数把预定义的字符&、”、 ’、转换为 HTML
实体，防止浏览器将其作为HTML元素。
文笔生疏，措辞浅薄，望各位大佬不吝赐教，万分感谢。
免责声明：由于传播或利用此文所提供的信息、技术或方法而造成的任何直接或间接的后果及损失，均由使用者本人负责， 文章作者不为此承担任何责任。
转载声明：儒道易行
拥有对此文章的修改和解释权，如欲转载或传播此文章，必须保证此文章的完整性，包括版权声明等全部内容。未经作者允许，不得任意修改或者增减此文章的内容，不得以任何方式将其用于商业目的。
博客: