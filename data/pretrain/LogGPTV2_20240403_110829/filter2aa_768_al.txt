不是间接虚拟基类 
get_length 
0x21c 
长度 
get_name 
CBaseClass 
名称 
get_nested 
0 
不是嵌套类型 
get_offset 
0 
该基类的子对象的偏移 
get_overloadedOperator 
0 
没有重载运算符 
get_packed 
0 
没有被紧缩 
get_scoped 
0 
没有出现在非全局域 
get_typeId 
2912 
类型 ID 
get_udtKind 
class[1] 
UDT 类型 
get_unalignedType 
0 
不是内存未对齐类型 
get_virtualBaseClass 
0 
不是虚拟基类 
get_virtualTableShapeId 
4382 
虚拟方法表形态符号的 ID 
get_volatileType 
0 
非 volatile 类型 
值得说明的是，虚拟基类（Virtual Base Class）和虚拟类是两个不同的概念，尽管
CBaseClass 包含纯虚方法，是个虚拟类，但对 CClassFoo 来说，它并不是虚拟基类，因为
在声明继承关系时并没有指定 virtual 关键字。对于使用如下方法声明的 CClassNoo 类
来说，CBaseClass 才是它的虚拟基类。 
class CClassNoo : 
virtual public CBaseClass 
观察 CClassNoo 符号的基类子符号，可以看到 get_virtualBaseClass 方法返回 1。
并且可以得到如下属性：virtualBaseDispIndex，值为 1；virtualBasePointer- 
Offset，值为 4；virtualBaseTableType，值为 3338，即虚拟基类表的类型符号。 
25.10.4  SymTagEnum[12] 
SymTagEnum 类 符 号 用 来 描 述 枚 举 类 型 （ enum ）。 下 面 以 excpt.h 中 定 义 的
_EXCEPTION_DISPOSITION 枚举类型为例进行简要说明。使用 SymView 工具打开
HiWorld.PDB，然后在左侧的 SymTag 树视图中选择 Enum[12]，SymView 便会列出这个
PDB 文件中的枚举类型符号，从中可以找到名为_EXCEPTION_DISPOSITION 的符号，其
Base Type 属性为 int[6]，类型 ID（1227）指向的也是基本类型 int，其长度属性为 4，与
int 型相同，父词条 ID 指向的是 EXE 符号，其自身的符号 ID 为 1297。 
使用 SymView 的搜索功能寻找 1297 符号的子符号（Symbols by Parent ID），可以搜
索到这个枚举类型的所有成员（见表 25-19）。 
表 25-19  枚举类型的子符号 
ID 
名称 
值 
Data Kind 
Tag 
父词条 
类型 ID 
3400 
ExceptionContinueExecution 
0 
Constant[9] 
7 
1226 
1227 
3401 
ExceptionContinueSearch 
1 
Constant[9] 
7 
1226 
1227 
3402 
ExceptionNestedException 
2 
Constant[9] 
7 
1226 
1227 
《软件调试》补编 
- 45 – 
Copyright © 2009 ADVDBG.ORG All Rights Reserved 
3403 
ExceptionCollidedUnwind 
3 
Constant[9] 
7 
1226 
1227 
SymTag 为 7，代表这些子符号都是数据类型的符号，Data Kind 为 9，代表是常量。
类型 ID 1227 指向的是 int 基本类型。 
25.10.5  SymTagPointerType[14] 
SymTagPointerType 符号用来描述指针类型。例如，表 25-20 列出了无符号长整型指
针（PULONG）符号的各个属性。 
表 25-20  指针类型符号 
属性 
值 
描述 
get_constType 
0 
是否为 constant 
get_length 
0x4 
长度 
get_reference 
0 
是否是引用 
get_type 
5003 
指向的类型，这里显示的是类型 ID 
get_typeId 
5003 
类型 ID 
get_unalignedType 
0 
是否未内存对齐 
get_volatileType 
0 
是否为 volatile 
其中 get_type 返回的符号描述就是基本类型 ULONG（unsigned long）。概言之，指
针符号本身所包含的信息很少，其中最重要的内容就是它所指向的类型的 ID，通过这个
ID 可以得到进一步的信息。 
25.10.6  SymTagArrayType 
SymTagArrayType 符号用来描述数组类型。数组符号的信息描述方式与指针符号很类
似，其本身只是记录数组的概括性信息，其元素类型和索引类型都是由其他符号来描述的。
表 25-21 列出了描述全局数组变量（TCHAR szWindowClass[100]）的数组类型符号的属性。 
表 25-21  数组类型符号的属性 
属性 
值 
描述 
get_arrayIndexTypeId 
4704 
描述数组索引类型的符号 ID 
get_constType 
0 
是否为 const 
get_count 
100 
数组的元素个数 
get_length 
200 
数组的长度，字节数 
get_typeId 
4283 
描述数组元素类型的符号 ID 
get_unalignedType 
0 
是否未内存对齐 
get_volatileType 
0 
是否为 volatile 
符号 4283 描述的是基本数据类型 wchar_t。这个数组类型符号也可以用来描述同样
维数、类型和长度的其他数组变量。事实上在 HiWorld 程序中，另一个全局数组 szTitle
（TCHAR szTitle[100]）的声明和 szWindowClass 是一样的。所以这两个数据符号使用的
是类型符号。但数据符号是两个，因为它们的名称和内存位置不同。 
25.10.7  SymTagTypedef[17] 
SymTagTypedef 类型的符号用来描述使用 typedef 关键字定义的类型别名。例如
NT_TIB 是_NT_TIB 的别名，INT 是 int 的别名，TEXTMETRICW 是 tagTEXTMETRICW
的别名，PINPUT 是指向 tagINPUT 结构的指针类型的别名等等。 
Typedef 符号的名称属性就是 typedef 所定义的别名名称，Type ID 属性是描述原本类
《软件调试》补编 
- 46 – 
Copyright © 2009 ADVDBG.ORG All Rights Reserved 
型的符号 ID。 
除了以上类型符号外，SymTagVTable 和 SymTagVTableShape 符号用来描述类的虚表，
SymTagFriend 用来描述 C++中的友元信息，SymTagCustomType 符号用来描述编译器厂商定
制的与编译器相关的类型，SymTagDimension 用来描述 FORTRAN 数组的维度信息（上下
边界和维数——Rank），SymTagManagedType 符号用来描述使用 C#等语言开发的托管类型。
因为篇幅关系，我们就不一一介绍这些类型符号了。描述函数类型和参数类型的
SymTagFunctionType 和 SymTagFunctionArgType 将在下一节介绍。 
25.11  函数符号 
函数是软件的重要组成部分，也是软件调试的重要目标。本节将介绍描述函数类型的
SymTagFunctionType 符号、描述函数参数类型的 SymTagFunctionArgType 符号、描述函数
实 例 （ Instance ） 的 SymTagFunction 符 号 、 描 述 函 数 的 调 试 起 点 和 终 点 的
SymTagFunctionStart 和 SymTagFunctionEnd 符号，以及描述标号的 SymTagLabel 符号。 
25.11.1  SymTagFunctionType[13] 
函数类型（SymTagFunctionType）符号用来描述一个函数的原型，包括返回值类型、
调用协议和参数信息等，这些特征有时也被称为函数签名（Function Signature）。表 25-22
列出了 CBaseClass 类的 Setup 方法所使用的函数类型。 
表 25-22  Setup 方法的函数类型符号 
属性 
值 
说明 
get_callingConvention 
CV_CALL_THISCALL[11] 
调用协议，this 协议 
get_classParentId 
1257 
所属类的类型符号，即 CBaseClass 
get_count 
2 
参数个数 
get_objectPointerType 
5704 
对象指针（this）的类型符号 
get_thisAdjust 
0 
this 指针调整值 
get_typeId 
3778 
返回值的类型符号 
Setup 方法的原型是：int Setup（LPCTSTR szName），也就是它只有一个参数，但是
我们知道调用类的（非静态）方法时总要隐含的传递 this 指针，因此尽管 Setup 方法的声
明中只有 1 个参数，但是在实际调用时，参数的个数是 2，所以上表中的参数个数是实际
调用参数的个数。 
25.11.2  SymTagFunctionArgType[13] 
如果一个函数的声明中包含参数，那么可以通过寻找它的函数类型符号的子符号找到
描述参数的参数类型符号，即 SymTagFunctionArgType 符号。例如使用 SymView 工具搜
索 Setup 函数符号（#3265）的子符号，可以找到一条结果，就是描述参数 szName 的符号，
它的主要属性如下： 
get_lexicalParentId 
1255 
父词条 ID，即 EXE 符号 
get_symIndexId 
3440 
符号 ID 
get_typeId 
1263 
类型符号的 ID 
其中的类型符号 ID（1263）代表是指针类型的符号，它的基本类是 wchar_t，这与参数
szName 的类型 LPCTSTR 完全匹配。 
《软件调试》补编 
- 47 – 
Copyright © 2009 ADVDBG.ORG All Rights Reserved 
25.11.3  SymTagFunction [5] 
SymTagFunction 符号用来描述一个函数或者类方法实例。我们仍然以 CBaseClass 的