I am currently unable to use `histplot` as it appears that the `pandas` option
`use_inf_as_null` has been removed. Error log below.
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/seaborn/distributions.py:1438, in histplot(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)
       1427 estimate_kws = dict(
       1428     stat=stat,
       1429     bins=bins,
       (...)
       1433     cumulative=cumulative,
       1434 )
       1436 if p.univariate:
    -> 1438     p.plot_univariate_histogram(
       1439         multiple=multiple,
       1440         element=element,
       1441         fill=fill,
       1442         shrink=shrink,
       1443         common_norm=common_norm,
       1444         common_bins=common_bins,
       1445         kde=kde,
       1446         kde_kws=kde_kws,
       1447         color=color,
       1448         legend=legend,
       1449         estimate_kws=estimate_kws,
       1450         line_kws=line_kws,
       1451         **kwargs,
       1452     )
       1454 else:
       1456     p.plot_bivariate_histogram(
       1457         common_bins=common_bins,
       1458         common_norm=common_norm,
       (...)
       1468         **kwargs,
       1469     )
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/seaborn/distributions.py:431, in _DistributionPlotter.plot_univariate_histogram(self, multiple, element, fill, common_norm, common_bins, shrink, kde, kde_kws, color, legend, line_kws, estimate_kws, **plot_kws)
        428 histograms = {}
        430 # Do pre-compute housekeeping related to multiple groups
    --> 431 all_data = self.comp_data.dropna()
        432 all_weights = all_data.get("weights", None)
        434 if set(self.variables) - {"x", "y"}:  # Check if we'll have multiple histograms
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/seaborn/_oldcore.py:1119, in VectorPlotter.comp_data(self)
       1117 grouped = self.plot_data[var].groupby(self.converters[var], sort=False)
       1118 for converter, orig in grouped:
    -> 1119     with pd.option_context('mode.use_inf_as_null', True):
       1120         orig = orig.dropna()
       1121         if var in self.var_levels:
       1122             # TODO this should happen in some centralized location
       1123             # it is similar to GH2419, but more complicated because
       1124             # supporting `order` in categorical plots is tricky
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/pandas/_config/config.py:441, in option_context.__enter__(self)
        440 def __enter__(self) -> None:
    --> 441     self.undo = [(pat, _get_option(pat, silent=True)) for pat, val in self.ops]
        443     for pat, val in self.ops:
        444         _set_option(pat, val, silent=True)
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/pandas/_config/config.py:441, in (.0)
        440 def __enter__(self) -> None:
    --> 441     self.undo = [(pat, _get_option(pat, silent=True)) for pat, val in self.ops]
        443     for pat, val in self.ops:
        444         _set_option(pat, val, silent=True)
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/pandas/_config/config.py:135, in _get_option(pat, silent)
        134 def _get_option(pat: str, silent: bool = False) -> Any:
    --> 135     key = _get_single_key(pat, silent)
        137     # walk the nested dict
        138     root, k = _get_root(key)
    File ~/miniconda3/envs/tf/lib/python3.9/site-packages/pandas/_config/config.py:121, in _get_single_key(pat, silent)
        119     if not silent:
        120         _warn_if_deprecated(pat)
    --> 121     raise OptionError(f"No such keys(s): {repr(pat)}")
        122 if len(keys) > 1:
        123     raise OptionError("Pattern matched multiple keys")
    OptionError: "No such keys(s): 'mode.use_inf_as_null'"