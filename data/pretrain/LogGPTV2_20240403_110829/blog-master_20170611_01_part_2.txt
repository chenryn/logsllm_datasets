1、llvm  
[《PostgreSQL 10.0 preview 性能增强 - 推出JIT开发框架(朝着HTAP迈进)》](../.201703/20170330_02.md)    
2、向量计算  
[《PostgreSQL 向量化执行插件(瓦片式实现) 10x提速OLAP》](../201702/20170225_01.md)    
3、列存储  
[《分析加速引擎黑科技 - LLVM、列存、多核并行、算子复用 大联姻 - 一起来开启PostgreSQL的百宝箱》](../201612/20161216_01.md)    
### 4 优化器  
1、[成本因子接口](https://www.postgresql.org/docs/10/static/runtime-config-query.html#runtime-config-query-constants)  
2、[统计信息](https://www.postgresql.org/docs/10/static/planner-stats.html)  
3、[自定义统计信息](https://www.postgresql.org/docs/10/static/planner-stats.html#planner-stats-extended)  
4、[遗传算法](https://www.postgresql.org/docs/9.6/static/runtime-config-query.html#RUNTIME-CONFIG-QUERY-GEQO)  
5、[nestloop, hash, merge JOIN](https://www.postgresql.org/docs/9.6/static/planner-optimizer.html)  
6、支持 plain, sorted, hashed, mixed 聚合策略  
src/backend/commands/explain.c    
7、39种NODE类型  
src/backend/commands/explain.c  
```  
Agg:  
Append:  
BitmapAnd:  
BitmapHeapScan:  
BitmapIndexScan:  
BitmapOr:  
CteScan:  
CustomScan:  
ForeignScan:  
FunctionScan:  
Gather:  
GatherMerge:  
Group:  
Hash:  
HashJoin:  
IndexOnlyScan:  
IndexScan:  
Limit:  
LockRows:  
Material:  
MergeAppend:  
MergeJoin:  
ModifyTable:  
NamedTuplestoreScan:  
NestLoop:  
ProjectSet:  
RecursiveUnion:  
Result:  
SampleScan:  
SeqScan:  
SetOp:  
Sort:  
SubqueryScan:  
TableFuncScan:  
TidScan:  
Unique:  
ValuesScan:  
WindowAgg:  
WorkTableScan:  
```  
8、支持并行sort(merge sort)   
## 四、SQL兼容性方面  
1、[SQL:2011](https://www.postgresql.org/docs/10/static/features.html)  
160/179项 SQL:2011 的实现，覆盖率达到 89.4%，另外还有大量扩展。  
## 五、扩展接口方面  
1、[扩展函数](https://www.postgresql.org/docs/10/static/xfunc.html)  
2、[扩展聚合](https://www.postgresql.org/docs/10/static/xaggr.html)  
3、[扩展类型](https://www.postgresql.org/docs/10/static/xtypes.html)  
4、[扩展操作符](https://www.postgresql.org/docs/10/static/xoper.html)  
5、[扩展索引](https://www.postgresql.org/docs/10/static/xindex.html)  
6、[扩展全文检索词典](https://www.postgresql.org/docs/9.6/static/sql-createtsdictionary.html)  
7、[扩展编程语言](https://www.postgresql.org/docs/9.6/static/plhandler.html)  
https://wiki.postgresql.org/wiki/PL_Matrix  
8、[扩展外部数据源](https://www.postgresql.org/docs/9.6/static/fdwhandler.html)  
https://wiki.postgresql.org/wiki/Fdw  
9、[扩展数据采样接口](https://www.postgresql.org/docs/9.6/static/tablesample-method.html)  
10、[扩展custom scan接口](https://www.postgresql.org/docs/9.6/static/custom-scan.html)  
https://github.com/pg-strom/devel  
11、[扩展WAL接口](https://www.postgresql.org/docs/9.6/static/generic-wal.html)  
12、[扩展GiST索引](https://www.postgresql.org/docs/9.6/static/gist.html)  
13、[扩展SP-GiST索引](https://www.postgresql.org/docs/9.6/static/spgist.html)  
14、[扩展GIN索引](https://www.postgresql.org/docs/9.6/static/gin.html)  
15、[扩展BRIN索引](https://www.postgresql.org/docs/9.6/static/brin.html)  
## 六、横向生态 - 插件  
PostgreSQL 的扩展接口丰富，使得在开源、商业生态中有非常多PostgreSQL的扩展插件。  
1、[内置插件](https://www.postgresql.org/docs/10/static/contrib.html)  
2、[pgxn](https://pgxn.org/)  
3、[pgfoundry](http://pgfoundry.org/)  
4、[github](https://github.com/search?o=desc&q=postgresql&s=stars&type=Repositories&utf8=%E2%9C%93)  
5、独立插件生态：  
商业数据库、数据库支持服务公司、用户、个人、高校、应用软件开发商、其他开源社区。  
例如 PostGIS, pgrouting, pipelinedb流计算插件, timescaledb时序插件, rdkit化学插件, madlib机器学习插件, plr R语言插件, postbis DNA插件, imgsmlr图像特征插件, pgfingerprint指纹特征插件   等.     
## 七、生态方面  
1、内核生态  
[commitfest](https://commitfest.postgresql.org/)  
[内核](https://git.postgresql.org/gitweb/)  
[核心组会议](http://www.pgconf.org/)  
[mail list](https://www.postgresql.org/list/#developer)  
[活跃度](https://github.com/postgres/postgres/graphs/contributors)  
[postgresql wiki](https://wiki.postgresql.org/wiki/Main_Page)  
[postgresql in wiki](https://en.wikipedia.org/wiki/PostgreSQL)  
2、[高校生态](https://en.wikipedia.org/wiki/Michael_Stonebraker)  
PostgreSQL起源伯克利大学，与高校有非常深的渊源，也被业界贴上了学院派数据库的标签。同时PG社区趋于遵从行业标准设计，代码严谨、工整，许多高校将PG用于数据库教学。  
3、[开发者生态](https://github.com/search?o=desc&q=postgres&s=stars&type=Repositories&utf8=%E2%9C%93)  
4、[最终用户生态, user groups](https://www.postgresql.org/community/user-groups/)  
http://cn.bing.com/search?q=postgresql+user+group&qs=n&form=QBLH&sp=-1&pq=postgresql+user+group&sc=0-21&sk=&cvid=A865739EF479477EB27A3A8DB9895CC1  
5、[技术支持服务生态](https://www.postgresql.org/support/)  
全球有很多技术支持服务商业公司，其中不乏PostgreSQL社区的核心贡献者。  
5\.1、[EDB](http://www.enterprisedb.com/)  
5\.2、[2ND](http://blog.2ndquadrant.com/en)  
5\.3、[postgrespro(oleg)](https://postgrespro.com/)  
5\.4、[PGEXPERT](http://www.pgexperts.com)  
5\.5、[河马(tom lane)](https://github.com/CrunchyData)  
5\.6、[cybertec](http://www.cybertec.at/)  
5\.7、[阿里云](https://www.aliyun.com/product/rds/postgresql?spm=5176.8142029.388261.252.Y9PhQJ)  
5\.8、[stackoverflow](http://stackoverflow.com/questions/tagged/postgresql)  
6、[全球主要贡献者](https://www.postgresql.org/community/contributors/)  
## 八、业务场景  
1、功能强大，支持非常多业务场景  
[《PostgreSQL 179 种场景 - 案例实践》](../201706/20170601_02.md)  
2、HTAP发展方向  
[《数据库任督二脉 - 数据与计算的生态融合》](../201705/20170526_01.md)    
## 九、其他  
功能强大，同时简单易用  
[《PostgreSQL on Linux 最佳部署手册》](../201611/20161121_01.md)    
[《PostgreSQL 前世今生》](../201609/20160929_02.md)    
[《数据库选型思考》](../201702/20170208_03.md)    
[《数据库选型之 - 大象十八摸 - 致 架构师、开发者》](../201702/20170209_01.md)    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")