title:Speed testing without speed tests: estimating achievable download
speed from passive measurements
author:Alexandre Gerber and
Jeffrey Pang and
Oliver Spatscheck and
Shobha Venkataraman
Speed Testing without Speed Tests: Estimating Achievable
Download Speed from Passive Measurements
Alexandre Gerber, Jeffrey Pang, Oliver Spatscheck, Shobha Venkataraman
AT&T Labs - Research
{gerber,jeffpang,spatsch,shvenk}@research.att.com
180 Park Ave.
Florham Park, NJ
ABSTRACT
How fast is the network? The speed at which real users
can download content at diﬀerent locations and at diﬀerent
times is an important metric for service providers. Knowl-
edge of this speed helps determine where to provision more
capacity and helps detect network problems. However, most
network-level estimates of these speeds today are obtained
using active “speed tests” that place substantial load on the
network and are not necessarily representative of actual user
experiences due to limited vantage points. These problems
are exacerbated in wireless networks where the physical loca-
tions of users play an important role in performance. To re-
dress these problems, this paper presents a new technique to
estimate achievable download speed using only ﬂow records
collected passively. Estimating achievable speed passively is
non-trivial because the measured throughput of real ﬂows is
often not comparable to the achievable steady-state TCP
rate. This can be because, for example, ﬂows are small
and never exit TCP slow start or are rate-limited by the
content-provider. Our technique addresses these issues by
constructing a Throughput Index, a list of ﬂow types that
accurately estimate achievable speed. We show that our
technique estimates achievable speed more accurately than
other techniques in a large 3G wireless network.
Categories and Subject Descriptors
C.2.3 [Computer-Communication Networks]: Network
Operations
General Terms
Measurement
Keywords
throughput, passive, measurement, UMTS, 3G, wireless
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
1.
INTRODUCTION
The achievable throughput of a steady-state TCP ﬂow at
a given time and location in a network, hereafter referred
to as max-throughput, has long been recognized as an im-
portant metric for service providers.1 By measuring max-
throughput a service provider can determine locations where
provisioning more capacity would beneﬁt users and detect
temporary network problems. The increasing popularity of
multimedia downloads and streaming only magniﬁes the im-
portance of measuring max-throughput. Yet, the rapid shift
from wired to wireless access links makes max-throughput
more diﬃcult to estimate using traditional active measure-
ments. In this paper, we develop a new technique to esti-
mate max-throughput passively. We show that our approach
estimates max-throughput more accurately than other tech-
niques in a large 3G wireless network.
A number of active probing techniques exist to estimate
available capacity, but they are often insuﬃcient to estimate
max-throughput. For example, researchers have proposed
lightweight active probing techniques based on measuring
the inter-packet spacing between pairs of packets (e.g., [3,
5, 8]). These techniques do not work well in wireless net-
works because packets are often delayed for reasons other
than congestion (e.g., due to physical layer loss or due to
scheduling into Transmission Time Intervals of 10 ms or
more [7]). Moreover, these techniques do not measure the
ﬁnal fair-share and loss-induced throughput that a TCP
ﬂow would achieve. Thus, the state-of-the-art for measuring
max-throughput in such networks is to periodically down-
load large ﬁles from a number of active probes while measur-
ing their achieved throughput. While such experiments pre-
cisely characterize the max-throughput to each active probe,
they have three obvious limitations: First, they place addi-
tional load on the network; second, they are expensive to
deploy and maintain; and third, they do not capture the
experience of real users at diﬀerent vantage points.
Due to these limitations, active probes cannot scale to
cover a representative portion of an entire wireless network.
This paper examines whether passive measurements of real
ﬂows within a network are suﬃcient to estimate max-
throughput. Estimating network metrics passively is not
new: they have been used to determine bottleneck link ca-
pacities [9], to determine RTTs [12], and to ﬁnd bottlenecks
in a 3G core network [11]. However, using passive measure-
1Although other transport protocols exist, the throughput
of TCP is the most important practical measure since the
vast majority of ﬂows use TCP (e.g., we ﬁnd that 95% of
ﬂows in a large 3G network use TCP).
424ments to estimate max-throughput poses unique challenges.
First, because the network does not control either end-point,
it can not control the duration of TCP ﬂows. TCP ﬂows take
several round trips to ramp up to their fair-share capacity,
so the observed throughput of small ﬂows may not approx-
imate max-throughput. The duration of TCP slow start
is even longer in 3G networks because RTTs are typically
100s of milliseconds [12]. Second, ﬂows may be throttled for
reasons other than reaching the available network capacity.
For example, content providers may rate limit streaming
content. Finally, the enormous traﬃc volume of all TCP
ﬂows passing through a large network means that it is im-
practical to record and analyze every packet. In practice,
only periodic ﬂow samples can be recorded, and little pro-
cessing can be done on those samples if we wish to monitor
max-throughput in near real-time.
In this paper, we develop a novel technique to estimate
max-throughput using only passively measured ﬂow records.
Our technique works by constructing a Throughput Index
(TI) that includes only ﬂow types that accurately estimate
max-throughput. Only ﬂows that match a ﬂow type in the
TI are used in estimates. We validate our technique in a
large 3G wireless network by comparing our passive max-
throughput estimates with active measurements. We make
the following contributions:
• Compared to previous passive TCP parameter estima-
tion techniques [2, 10, 11, 13, 14], our approach does
not require packet traces and requires no online pro-
cessing of ﬂow records except for a simple, constant
time ﬁlter. Therefore, our approach is amenable to
very large-scale max-throughput monitoring and is al-
ready deployed as a prototype to monitor all data traf-
ﬁc in a large 3G network.
• To our knowledge, our approach is the ﬁrst passive
technique to estimate max-throughput that is validated
on traﬃc in the wild. We ﬁnd that our max-throughput
estimates correlate well with measurements from ac-
tive probes in several large metropolitan areas. In ag-
gregate, we ﬁnd a correlation coeﬃcient of 0.88.
• Through the construction of a TI, we classify rate-
limited content-providers and applications. Surpris-
ingly, we ﬁnd that nearly 60% of large ﬂows are rate-
limited and can never reach the peak network capacity.
2. BACKGROUND
To evaluate passive max-throughput estimation, we ana-
lyze traﬃc traces from a large UMTS wireless network. The
majority of our analysis in this paper uses traces collected
from April 1-7, 2010. We collected these traﬃc traces from
an infrastructure [4] that monitored all traﬃc on the Gn in-
terface between all Serving GPRS Support Nodes (SGSNs)
and Gateway GPRS Support Nodes (GGSNs) in the packet-
switched part of the UMTS Core Network [7]. Data traﬃc
that originates from user handsets travels from the Radio
Access Network (RAN) to the Gn interface before exiting to
the Internet. Similarly, all traﬃc from the Internet to user
handsets crosses the Gn interface. These traces contain traf-
ﬁc from all regions of the UMTS network roughly within the
Paciﬁc and Central timezones. The data that we use for this
study does not contain personally identiﬁable information.
Flow Records. For our study, the measurement infrastruc-
ture collected one ﬂow record for each ﬂow every 1 minute
for a random 3% of users. Flows are distinguished by the
standard (ipsrc, ipdst, sport, dport) tuple. For the purposes
of our study, each ﬂow record is annotated with two ﬁelds:
application, the application protocol used in the ﬂow, and
content-provider, the service the ﬂow is communicating with.
Each record is also annotated with the following three statis-
tics: bytes, the volume transferred during the 1 minute in-
terval, duration, the time between the ﬁrst and last packets
in the interval, total bytes, the volume transferred since the
start of the ﬂow. Note that the annotated ﬂow records con-
tain no personally identifying information. The application
classiﬁcation in our annotated ﬂow records uses well known
heuristics based on application headers and port numbers
(see [6] for details). The content-provider for the annota-
tion is identiﬁed by the HTTP Content-Provider header or
the DNS name of the server when available. It is empty oth-
erwise. HTTP traﬃc dominates the traﬃc as it is used for
web browsing, downloads, and streaming. We deﬁne a ﬂow
type to be a (application, content-provider) pair; we ﬁnd it
useful to group ﬂows records by ﬂow type.
Device Categories. Diﬀerent handset types have maxi-
mum air interface speeds that diﬀer by several Mbps. In or-
der to factor out the inﬂuence of diﬀerent handset types and
radio access technologies, this paper only considers down-
link 3G ﬂows from HSDPA category 6 devices, which are
able to reach 3.6 Mbps in the download direction. In prac-
tice, we use our technique to estimate max-throughput for
each class of devices and in each direction separately. The
device type is identiﬁed by the Type Allocation Code of the
device, which is available in the GTP tunnel carrying IP
traﬃc between the GGSN the RAN [1].
Throughput Normalization. For proprietary reasons, all
throughput values presented in this paper are normalized
by an arbitrary constant (i.e., normalized throughput =
throughput/C). Normalization does not change the dy-
namic range represented in ﬁgures.
3. METHODOLOGY
Our goal is as follows: given all TCP ﬂow records that
traversed a set of network paths during a time interval, out-
put an estimate of the average max-throughput over that
time interval when downloading from an unconstrained In-
ternet source. The most trivial algorithm would be to apply
a summary function over the byte/duration values in all
ﬂow records (e.g., the mean). However, most of these values
will not reﬂect max-throughput because bytes transferred
depends not only on available capacity, but also on total
ﬂow size, application protocol, and content-provider. This
section describes our technique for ﬁltering ﬂow records to
discard the eﬀects of these other factors.
3.1 Why not Measure All Large Flows?
A TCP ﬂow can transfer many bytes before achieving its
steady-state throughput because it begins in a slow-start
phase that incrementally probes for the available capacity.
Therefore, an obvious ﬁrst step to measure max-throughput
is to only examine ﬂows that have transferred enough bytes
to exit slow-start. The volume transferred during slow-start
depends on the RTT and the bottleneck capacity. These
two parameters vary based on ﬂow, but a ﬁrst order ap-
425)
m
r
o
n
(
t
u
p
h
g
u
o
r
h
T
n
a
d
e
M
i
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 500  1000  1500  2000  2500  3000  3500  4000  4500
Flowsize (KB)
x
=
t
u
p
h
g
u
o
r
h
T
.
c
r
e
P
h
t
5
9
h
t
i
w
%
 25
 20
 15
 10
 5
 0
 0
application
content-provider
(application,content-provider)
95th percentile
of all 1MB+ flows
 0.2
 0.4
 1.2
Throughput of 1MB+ flows (normalized)
 0.6
 0.8
 1
 1.4
Figure 1: Median normalized throughput of non-
rate-limited ﬂow records vs. ﬂow size. All ﬂow
records with size 2i ≤ total bytes < 2i+1 are aggre-
gated in the bin 2i.
x
<
t
u
p
h
g
u
o
r
h
T
h
t
i
w
s
w
o
F
%
l
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
all flows
rate-capped