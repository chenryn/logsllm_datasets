P A G E  
Uncovering SAP vulnerabilities: 
Reversing and breaking 
the Diag protocol 
Martin Gallo – Core Security 
Defcon 20 – July 2012 
P A G E  2  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Introduction 
3  
P A G E  4  
Introduction 
• Leader business software provider 
• Sensitive enterprise business processes runs on SAP 
systems 
• SAP security became a hot topic 
• Some components still not well covered 
• Proprietary protocols used at different components 
P A G E  5  
Introduction 
• Dynamic Information and Action Gateway (Diag) protocol 
(aka “SAP GUI protocol”) 
• Link between presentation layer (SAP GUI) and 
application layer (SAP Netweaver) 
• Present in every SAP NW ABAP AS 
• Compressed but unencrypted by default 
• TCP ports 3200 to 3298 
P A G E  6  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Motivation and related work 
7  
P A G E  8  
Previous work on Diag protocol 
Proprietary 
tools 
Proxy-like 
tool 
Sniffing 
through 
reflection-
method 
Compression 
algorithm 
disclosed 
Decompression 
Wireshark plug-in 
Cain&Abel 
sniffing 
? 
P A G E  9  
Motivation 
• Previous work mostly focused on decompression 
• Protocol inner workings remains unknown 
• No practical tool for penetration testing 
289 
836 
734 
518 
2009
2010
2011
2012
# of Security Notes 
Only 2 out of ~2300 
security fixes 
published by SAP 
since 2009 affected 
components related 
to Diag 
P A G E  1 0  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
SAP Netweaver architecture and 
protocols layout 
1 1  
P A G E  1 2  
SAP Netweaver architecture 
P A G E  1 3  
Relevant concepts and components 
• ABAP 
• SAP’s programming language 
• Dispatcher and work processes (wp) 
• Dispatcher: distribute user requests across wp 
• Work processes: handles specific tasks 
• Types: dialog, spool, update, background, lock 
• Dialog processing 
• Programming method used by ABAP 
• Separates business programs in screens and dialog 
steps 
P A G E  1 4  
SAP Protocols layout 
Proprietary protocols 
NI (Network Interface) Protocol 
RFC 
Diag 
Protocol 
Router 
BAPI 
Standard protocols 
HTTP 
SOAP 
SSL 
P A G E  1 5  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Dissecting and understanding 
the Diag protocol 
1 6  
P A G E  1 7  
Approach 
• ‘Black-box’ 
• No binary reverse engineering techniques were used 
• Enable system/developer traces (GUI/app server) 
• Analyze network and application traces 
• Learn by interacting with the components (GUI/app 
server) 
• Continuous improvement of test tools based on gained 
knowledge 
Dissecting and understanding the Diag 
protocol 
P A G E  1 8  
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag Header 
Payload 
Compressio
n Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
Dissecting and understanding the Diag 
protocol 
P A G E  1 9  
Initialization 
• Identified only two relevant protocol states: 
•
Not initialized 
•
Initialized 
•
User’s context assigned in shared memory 
• Started by GUI application 
• Only first packet 
• Always uncompressed 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
Dissecting and understanding the Diag 
protocol 
P A G E  2 0  
DP Header 
• 200 bytes length 
• Two different semantics 
•
IPC (inter process communication) 
•
Used in communications between dispatcher and work 
processes 
•
Synchronization and status 
•
Network 
•
Most fields filled with default values 
•
Relevant fields: 
•
Terminal name, Length 
• Only present during initialization 
(first packet) 
Dissecting and understanding the Diag 
protocol 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
P A G E  2 1  
Diag Header 
Dissecting and understanding the Diag 
protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
Mode 
Comm 
Flag 
Mode 
Stat 
Error 
Flag 
Msg 
type 
Msg 
Info 
Msg 
RC 
Comp 
Flag 
0 
1 
2 
3 
4 
5 
6 
7 
Identifies different 
sessions using the 
same channel 
Compression 
enabled/disabled, 
encryption using SNC 
NI (Network Interface) Protocol 
P A G E  2 2  
Compression 
• Enabled by default 
• Uses two variants of Lempel-Ziv Adaptive Compression 
Algorithm 
•
LZH (Lempel-Ziv-Huffman) LZ77 
•
LZC (Lempel-Ziv-Welch-Thomas) LZ78 
• Same implementation as SAP’s MaxDB open source 
project 
• Can be disabled in GUI by setting 
TDW_NOCOMPRESS environment 
variable 
Dissecting and understanding the Diag 
protocol 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
P A G E  2 3  
Compression Header 
Dissecting and understanding the Diag 
protocol 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
Uncompressed length 
Comp 
Alg 
Magic Bytes 
x1F x9D 
Special 
Byte 
0 
4 
5 
7 
LZH: 0x12 
LZC: 0x10 
LZH: compression level 
LZC: max # of bits per code 
P A G E  2 4  
Payload 
Dissecting and understanding the Diag 
protocol 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
SES 
Fixed length (16 bytes) 
Session information 
ICO 
Fixed length (20 bytes) 
Icon information 
TIT 
Fixed length (3 bytes) 
Title information 
DiagMessage 
Fixed length (76 bytes) 
Old Diag message 
OKC 
(? Bytes) 
CHL 
Fixed length (22 bytes) 
SBA 
Fixed length (9 bytes) 
List items 
EOM 
Fixed length (0 bytes) 
End of message 
APPL/APPL4 
Variable length 
DIAG_XMLBlob 
Variable length 
XML Blob 
SBA2 
Fixed length (36 bytes) 
List items 
P A G E  2 5  
APPL/APPL4 items 
Dissecting and understanding the Diag 
protocol 
NI (Network Interface) Protocol 
Diag Protocol 
DP Header 
(optional) 
Diag 
Header 
Payload 
Compressi
on Header 
(optional) 
Diag Item 1 
… 
Diag Item n 
Type 
Length Field 
ID 
SID 
0 
1 
3..5 
4..6 
APPL: 0x10 
APPL4: 0x12 
APPL: 2 bytes 
APPL4: 4 bytes 
P A G E  2 6  
Protocol version 
• APPL item included in payload during initialization 
• Can disable compression using version number “200” 
Authentication 
• Performed as a regular dialog step 
• Set user’s context on work processes shared memory 
Embedded RFC calls 
• APPL item that carries RFC calls in both directions 
• Server doesn’t accept RFC calls until authenticated 
Diag protocol security highlights 
P A G E  2 7  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Results and findings 
2 8  
P A G E  2 9  
Packet dissection 
• Wireshark plug-in written in C/C++ 
•
NI Protocol dissector 
• TCP reassembling 
•
Router Protocol dissector 
• Basic support 
•
Diag protocol dissector 
• Decompression 
• DP header / Diag Header / Compression Header 
• Item ID/SID identification and dissection of relevant items 
• Call RFC dissector for embedded calls 
•
RFC protocol dissector 
• Basic coverage of relevant parts 
P A G E  3 0  
Packet dissection 
P A G E  3 1  
Packet crafting 
• Scapy classes 
• SAPNi 
• SAPDiagDP (DP Header) 
• SAPDiag (Diag header + compression) 
• SAPDiagItem 
• Custom classes for relevant Diag items 
• PoC and example scripts 
• Information gathering 
• Login Brute Force 
• Proxy/MITM script 
• Diag server 
P A G E  3 2  
Fuzzing approach 
• Fuzzing scheme using 
• scapy classes 
• test cases generation 
• delivery 
• windbg 
• monitoring 
• xmlrpc 
• syncronization 
• Monitoring of all work processes 
P A G E  3 3  
Vulnerabilities found 
• 6 vulnerabilities released on May 2012 affecting SAP NW 
7.01/7.02, fix available on SAP Note 168710 
• Unauthenticated remote denial of service when 
developed traces enabled 
• CVE-2012-2511 – DiagTraceAtoms function 
• CVE-2012-2512 – DiagTraceStreamI function 
• CVE-2012-2612 – DiagTraceHex function 
P A G E  3 4  
Vulnerabilities found 
• Unauthenticated remote denial of service 
• CVE-2012-2513 – Diaginput function 
• CVE-2012-2514 – DiagiEventSource function 
• Unauthenticated remote code execution when developer 
traces enabled 
• CVE-2012-2611 – DiagTraceR3Info function 
• Stack-based buffer overflow while parsing ST_R3INFO 
CODEPAGE item 
• Thanks to Francisco Falcon (@fdfalcon) for the exploit 
P A G E  3 5  
Attack scenarios 
Target applications servers 
SAP NW AS 
Exploit mentioned 
CVEs 
Gather server 
information 
Login brute force 
Attacker 
P A G E  3 6  
Attack scenarios 
Target GUI users 
Attacker 
SAP NW AS 
GUI User 
GUI User 
GUI User 
Rogue Server 
Inject RFC calls in 
user’s GUI 
Gather credentials 
GUI 
Shortcut 
MitM 
P A G E  3 7  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Defenses and countermeasures 
3 8  
P A G E  3 9  
Defenses and countermeasures 
• Restrict network access to dispatcher service 
•
TCP ports 3200-3298 
•
Use application layer gateways 
• Implement SNC client encryption 
•
Provides authentication and encryption 
•
Available for free at SAP Marketplace since 2011 
•
See SAP Note 1643878 
• Restrict use of GUI shortcuts 
•
SAP GUI > 7.20 disabled by default 
•
See SAP Note 1397000 
P A G E  4 0  
Defenses and countermeasures 
• Use WebGUI with HTTPS 
•
See SAP Note 314568 
• Patch regularly 
•
Patch Tuesday 
•
RSECNOTE program, see SAP Note 888889 
• Patch CVEs affecting Diag 
•
Look at CORE’s advisory for mitigation/countermeasures 
•
See SAP Note 168710 
• Test regularly 
P A G E  4 1  
Agenda 
• Introduction 
• Motivation and related work 
• SAP Netweaver architecture and protocols layout 
• Dissecting and understanding the Diag protocol 
• Results and findings 
• Defenses and countermeasures 
• Conclusion and future work 
P A G E  
Conclusion and future work 
4 2  
P A G E  4 3  
Conclusion 
• Protocol details now available to the security community 
• Practical tools for dissection and crafting of protocol’s 
messages published 
• New vectors for testing and assessing SAP 
environments 
• Discussed countermeasures and defenses 
P A G E  4 4  
Future work 
• Security assessment and fuzzing of GUI/app server. 
• Complete dissection of embedded RFC calls. 
• Full implementation of attack scenarios 
• Integration with external libraries and exploitation tools. 
• Security assessment of SNC and coverage of encrypted 
traffic. 
P A G E  
Q & A 
4 5  
P A G E  
Thank you ! 
4 6  
Thanks to 
Diego, Flavio, Dana, Wata and Euge 
P A G E  4 7  
References 
https://service.sap.com/sap/support/notes/1643879 
http://www.secaron.de/Content/presse/fachartikel/sniffing_diag.pdf 
http://conus.info/RE-articles/sapgui.html 
http://www.sensepost.com/labs/conferences/2011/systems_application_proxy_pwnage 
http://ptresearch.blogspot.com/2011/10/sap-diag-decompress-plugin-for.html 
http://www.oxid.it/index.html 
https://service.sap.com/securitynotes 
http://help.sap.com/saphelp_nw70/helpdata/en/84/54953fc405330ee10000000a114084/frameset.htm 
http://www.troopers.de/wp-content/uploads/2011/04/TR11_Wiegenstein_SAP_GUI_hacking.pdf 
http://www.virtualforge.com/tl_files/Theme/Presentations/The%20ABAP%20Underverse%20-%20Slides.pdf 
http://www.wireshark.org/ 
http://www.secdev.org/projects/scapy/ 
http://www.coresecurity.com/content/sap-netweaver-dispatcher-multiple-vulnerabilities 
https://service.sap.com/sap/support/notes/1687910 
http://help.sap.com/saphelp_nw70ehp2/helpdata/en/47/cc212b3fa5296fe10000000a42189b/frameset.htm 
https://service.sap.com/sap/support/notes/1643878 
https://service.sap.com/sap/support/notes/1397000 
https://service.sap.com/sap/support/notes/314568 
https://service.sap.com/sap/support/notes/888889