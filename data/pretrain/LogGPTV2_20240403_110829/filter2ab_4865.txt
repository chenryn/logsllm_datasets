### Title: Beyond ProxyLogon: Unveiling a New Attack Surface on Microsoft Exchange Server

Microsoft Exchange Server is a widely deployed email solution in both government and enterprise environments, playing a crucial role in daily operations and security. Given its importance, vulnerabilities in Exchange have long been a prime target for attackers. Our recent security research has not only uncovered critical vulnerabilities like ProxyLogon but also revealed a new, previously unexplored attack surface in Exchange.

This new attack surface stems from a significant architectural change introduced in Exchange Server 2013. In this version, the Client Access Service (CAS), which handles fundamental protocols, was split into frontend and backend components. This architectural shift, while intended to improve performance and scalability, introduced design inconsistencies and accumulated technical debt. These issues led us to discover a new attack surface that had not been previously explored.

To illustrate the significance of this new attack surface, we will first analyze the underlying architecture. We then detail seven vulnerabilities discovered through this attack surface, including server-side, client-side, and cryptographic flaws. These vulnerabilities can be chained together to create three distinct attack vectors: ProxyLogon, ProxyShell, and ProxyOracle. Each of these vectors enables an unauthenticated attacker to exploit Microsoft Exchange Servers exposed to the Internet via port 443, potentially leading to the extraction of plaintext passwords and the execution of arbitrary code.

The impact of this new attack surface is unparalleled because it challenges the traditional approach to vulnerability research. Security researchers often focus on specific types of bugs, such as memory corruption, injection, or logic flaws. However, our research took a different approach by examining Exchange from a high-level architectural perspective. This holistic view allowed us to identify and exploit a new class of vulnerabilities that are not easily detected through conventional methods.

We hope that our findings will inspire a new paradigm in vulnerability research and encourage more security researchers to explore the architectural weaknesses in Exchange Server. Additionally, we will provide actionable hardening measures to help mitigate the risk of similar zero-day vulnerabilities in the future.