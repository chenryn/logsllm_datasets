#include 
int main(int argc, char *argv [])
{
998
int ch;
FILE *fp;
if (argc 
FILE * fp1,* fp2;
char ch;
fp1 = fopen("terky", "r");
fp2 = fopen("jerky", "w");
另外，假设成功打开了两个文件。补全下面函数调用中缺少的参数：
999
a.ch = getc();
b.fprintf( ,"%c\n", );
c.putc( , );
d.fclose(); /* 关闭terky文件 */
4.编写一个程序，不接受任何命令行参数或接受一个命令行参数。如果
有一个参数，将其解释为文件名；如果没有参数，使用标准输入（stdin）作
为输入。假设输入完全是浮点数。该程序要计算和报告输入数字的算术平均
值。
5.编写一个程序，接受两个命令行参数。第1个参数是字符，第2个参数
是文件名。要求该程序只打印文件中包含给定字符的那些行。
注意
C程序根据'\n'识别文件中的行。假设所有行都不超过256个字符，你可
能会想到用fgets()。
6.二进制文件和文本文件有何区别？二进制流和文本流有何区别？
7.
a.分别用fprintf()和fwrite()储存8238201有何区别？
b.分别用putc()和fwrite()储存字符S有何区别？
8.下面语句的区别是什么？
printf("Hello, %s\n", name);
fprintf(stdout, "Hello, %s\n", name);
fprintf(stderr, "Hello, %s\n", name);
1000
9."a+"、"r+"和"w+"模式打开的文件都是可读写的。哪种模式更适合用
来更改文件中已有的内容？
1001
13.11 编程练习
1.修改程序清单13.1中的程序，要求提示用户输入文件名，并读取用户
输入的信息，不使用命令行参数。
2.编写一个文件拷贝程序，该程序通过命令行获取原始文件名和拷贝文
件名。尽量使用标准I/O和二进制模式。
3.编写一个文件拷贝程序，提示用户输入文本文件名，并以该文件名作
为原始文件名和输出文件名。该程序要使用 ctype.h 中的 toupper()函数，在
写入到输出文件时把所有文本转换成大写。使用标准I/O和文本模式。
4.编写一个程序，按顺序在屏幕上显示命令行中列出的所有文件。使用
argc控制循环。
5.修改程序清单13.5中的程序，用命令行界面代替交互式界面。
6.使用命令行参数的程序依赖于用户的内存如何正确地使用它们。重写
程序清单 
13.2 
中的程序，不使用命令行参数，而是提示用户输入所需信
息。
7.编写一个程序打开两个文件。可以使用命令行参数或提示用户输入文
件名。
a.该程序以这样的顺序打印：打印第1个文件的第1行，第2个文件的第1
行，第1个文件的第2行，第2个文件的第2行，以此类推，打印到行数较多文
件的最后一行。
b.修改该程序，把行号相同的行打印成一行。
8.编写一个程序，以一个字符和任意文件名作为命令行参数。如果字符
后面没有参数，该程序读取标准输入；否则，程序依次打开每个文件并报告
每个文件中该字符出现的次数。文件名和字符本身也要一同报告。程序应包
含错误检查，以确定参数数量是否正确和是否能打开文件。如果无法打开文
1002
件，程序应报告这一情况，然后继续处理下一个文件。
9.修改程序清单 13.3 中的程序，从 1 开始，根据加入列表的顺序为每个
单词编号。当程序下次运行时，确保新的单词编号接着上次的编号开始。
10.编写一个程序打开一个文本文件，通过交互方式获得文件名。通过
一个循环，提示用户输入一个文件位置。然后该程序打印从该位置开始到下
一个换行符之前的内容。用户输入负数或非数值字符可以结束输入循环。
11.编写一个程序，接受两个命令行参数。第1个参数是一个字符串，第
2个参数是一个文件名。然后该程序查找该文件，打印文件中包含该字符串
的所有行。因为该任务是面向行而不是面向字符的，所以要使用fgets()而不
是getc()。使用标准C库函数strstr()（11.5.7节简要介绍过）在每一行中查找
指定字符串。假设文件中的所有行都不超过255个字符。
12.创建一个文本文件，内含20行，每行30个整数。这些整数都在0～9
之间，用空格分开。该文件是用数字表示一张图片，0～9表示逐渐增加的灰
度。编写一个程序，把文件中的内容读入一个20×30的int数组中。一种把这
些数字转换为图片的粗略方法是：该程序使用数组中的值初始化一个20×31
的字符数组，用值0 对应空格字符，1 对应点字符，以此类推。数字越大表
示字符所占的空间越大。例如，用#表示9。每行的最后一个字符（第31个）
是空字符，这样该数组包含了20个字符串。最后，程序显示最终的图片
（即，打印所有的字符串），并将结果储存在文本文件中。例如，下面是开
始的数据：
0 0 9 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 2 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 9 0 0 0 0 0 0 0 5 8 9 9 8 5 5 2 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 5 8 1 9 8 5 4 5 2 0 0 0 0 0 0 0 0 0
0 0 0 0 9 0 0 0 0 0 0 0 5 8 9 9 8 5 0 4 5 2 0 0 0 0 0 0 0 0
0 0 9 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 4 5 2 0 0 0 0 0 0 0
1003
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 1 8 5 0 0 0 4 5 2 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 4 5 2 0 0 0 0 0
5 5 5 5 5 5 5 5 5 5 5 5 5 8 9 9 8 5 5 5 5 5 5 5 5 5 5 5 5 5
8 8 8 8 8 8 8 8 8 8 8 8 5 8 9 9 8 5 8 8 8 8 8 8 8 8 8 8 8 8
9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 3 9 9 9 9 9 9 9
8 8 8 8 8 8 8 8 8 8 8 8 5 8 9 9 8 5 8 8 8 8 8 8 8 8 8 8 8 8
5 5 5 5 5 5 5 5 5 5 5 5 5 8 9 9 8 5 5 5 5 5 5 5 5 5 5 5 5 5
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 6 6 0 0 0 0 0 0
0 0 0 0 2 2 0 0 0 0 0 0 5 8 9 9 8 5 0 0 5 6 0 0 6 5 0 0 0 0
0 0 0 0 3 3 0 0 0 0 0 0 5 8 9 9 8 5 0 5 6 1 1 1 1 6 5 0 0 0
0 0 0 0 4 4 0 0 0 0 0 0 5 8 9 9 8 5 0 0 5 6 0 0 6 5 0 0 0 0
0 0 0 0 5 5 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 6 6 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 5 8 9 9 8 5 0 0 0 0 0 0 0 0 0 0 0 0
根据以上描述选择特定的输出字符，最终输出如下：
1004
13.用变长数组（VLA）代替标准数组，完成编程练习12。
14.数字图像，尤其是从宇宙飞船发回的数字图像，可能会包含一些失
真。为编程练习12添加消除失真的函数。该函数把每个值与它上下左右相邻
的值作比较，如果该值与其周围相邻值的差都大于1，则用所有相邻值的平
均值（四舍五入为整数）代替该值。注意，与边界上的点相邻的点少于4
个，所以做特殊处理。
[1].注意，字符串大小和字符串长度不同。前者指该字符串占用多少空间，
后者指该字符串的字符个数。——译者注
1005
第14章 结构和其他数据形式
本章介绍以下内容：
关键字：struct、union、typedef
运算符：.、->
什么是C结构，如何创建结构模板和结构变量
如何访问结构的成员，如何编写处理结构的函数
联合和指向函数的指针
设计程序时，最重要的步骤之一是选择表示数据的方法。在许多情况
下，简单变量甚至是数组还不够。为此，C提供了结构变量（structure
variable）提高你表示数据的能力，它能让你创造新的形式。如果熟悉Pascal
的记录（record），应该很容易理解结构。如果不懂Pascal也没关系，本章
将详细介绍C结构。我们先通过一个示例来分析为何需要C结构，学习如何
创建和使用结构。
1006
14.1 示例问题：创建图书目录
Gwen Glenn要打印一份图书目录。她想打印每本书的各种信息：书名、
作者、出版社、版权日期、页数、册数和价格。其中的一些项目（如，书
名)可以储存在字符数组中，其他项目需要一个int数组或float数组。用 7 个
不同的数组分别记录每一项比较繁琐，尤其是 Gwen 还想创建多份列表：一
份按书名排序、一份按作者排序、一份按价格排序等。如果能把图书目录的
信息都包含在一个数组里更好，其中每个元素包含一本书的相关信息。
因此，Gwen需要一种即能包含字符串又能包含数字的数据形式，而且
还要保持各信息的独立。C结构就满足这种情况下的需求。我们通过一个示
例演示如何创建和使用数组。但是，示例进行了一些限制。第一，该程序示
例演示的书目只包含书名、作者和价格。第二，只有一本书的数目。当然，
别忘了这只是进行了限制，我们在后面将扩展该程序。请看程序清单14.1及
其输出，然后阅读后面的一些要点。
程序清单14.1 book.c程序
//* book.c -- 一本书的图书目录 */
#include 
#include 
char * s_gets(char * st, int n);
#define MAXTITL 41  /* 书名的最大长度 + 1  */
#define MAXAUTL 31  /* 作者姓名的最大长度 + 1*/
struct book {    /* 结构模版：标记是 book */
char title[MAXTITL];
1007
char author[MAXAUTL];
float value;
};         /* 结构模版结束    */
int main(void)
{
struct book library; /* 把 library 声明为一个 book 类型的变量 */
printf("Please enter the book title.\n");
s_gets(library.title, MAXTITL);  /* 访问title部分*/
printf("Now enter the author.\n");
s_gets(library.author, MAXAUTL);
printf("Now enter the value.\n");
scanf("%f", &library.value);
printf("%s by %s: $%.2f\n", library.title,
library.author, library.value);
printf("%s: \"%s\" ($%.2f)\n", library.author,
library.title, library.value);
printf("Done.\n");
return 0;
}
1008
char * s_gets(char * st, int n)
{
char * ret_val;
char * find;
ret_val = fgets(st, n, stdin);
if (ret_val)
{
find = strchr(st, '\n');  // 查找换行符
if (find)          // 如果地址不是 NULL,
*find = '\0';     // 在此处放置一个空字符
else
while (getchar() != '\n')
continue;     //处理输入行中剩余的字符
}
return ret_val;
}
我们使用前面章节中介绍的s_gets()函数去掉fgets()储存在字符串中的换
行符。下面是该例的一个运行示例：
Please enter the book title.
1009
Chicken of the Andes
Now enter the author.
Disma Lapoult
Now enter the value.
29.99
Chicken of the Andes by Disma Lapoult: $29.99
Disma Lapoult: "Chicken of the Andes" ($29.99)
Done.
程序清单14.1中创建的结构有3部分，每个部分都称为成员（member）
或字段（field）。这3部分中，一部分储存书名，一部分储存作者名，一部
分储存价格。下面是必须掌握的3个技巧：
为结构建立一个格式或样式；
声明一个适合该样式的变量；
访问结构变量的各个部分。
1010
14.2 建立结构声明
结构声明（structure 
declaration）描述了一个结构的组织布局。声明类
似下面这样：
struct book {
char title[MAXTITL];
char author[MAXAUTL];
float value;
};
该声明描述了一个由两个字符数组和一个float类型变量组成的结构。该
声明并未创建实际的数据对象，只描述了该对象由什么组成。〔有时，我们
把结构声明称为模板，因为它勾勒出结构是如何储存数据的。如果读者知道
C++的模板，此模板非彼模板，C++中的模板更为强大。〕我们来分析一些
细节。首先是关键字 struct，它表明跟在其后的是一个结构，后面是一个可
选的标记（该例中是 
book），稍后程序中可以使用该标记引用该结构。所
以，我们在后面的程序中可以这样声明：
struct book library;
这把library声明为一个使用book结构布局的结构变量。
在结构声明中，用一对花括号括起来的是结构成员列表。每个成员都用
自己的声明来描述。例如，title部分是一个内含MAXTITL个元素的char类型
数组。成员可以是任意一种C的数据类型，甚至可以是其他结构！右花括号
后面的分号是声明所必需的，表示结构布局定义结束。可以把这个声明放在
所有函数的外部（如本例所示），也可以放在一个函数定义的内部。如果把
结构声明置于一个函数的内部，它的标记就只限于该函数内部使用。如果把
结构声明置于函数的外部，那么该声明之后的所有函数都能使用它的标记。
1011
例如，在程序的另一个函数中，可以这样声明：
struct book dickens;
这样，该函数便创建了一个结构变量dickens，该变量的结构布局是
book。
结构的标记名是可选的。但是以程序示例中的方式建立结构时（在一处
定义结构布局，在另一处定义实际的结构变量），必须使用标记。我们学完
如何定义结构变量后，再来看这一点。
1012