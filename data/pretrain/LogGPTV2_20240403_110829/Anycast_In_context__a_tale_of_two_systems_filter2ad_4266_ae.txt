1
(a)
Figure 7: Larger deployments lead to lower latency (Fig. 7a-left) since
they offer more low-latency options to users (Fig. 7b). However, fewer
users visit their closest site (Fig. 7a-right) leading to more inflation.
(b)
increases, inflation increases (less efficiency) but median latency
decreases. We observe a similar effect in Figure 2 ‚Äì larger root
deployments tend to have more inflation but have lower latency.
Intuitively, larger deployments are less efficient since BGP will
make "wrong" decisions about which routes to export more often,
and have lower latency since there are more low-latency options
available to users. These results suggest efficiency may not be a
useful metric for assessing performance.
We make these relationships explicit in Figure 7a which shows
median latency and efficiency for each root letter and Microsoft ring.
We define efficiency as the percentage of users with zero geographic
inflation (i.e., y-axis intercepts in Figure 2a and Figure 5a) since
it is a rough measure of how optimal routing is (routing may not
actually be optimal even if there is zero geographic inflation if users
take a circuitous route to their closest site). Latency to root letters in
Figure 7a is the median latency across all RIPE Atlas probes over an
hour in 2018 (time of DITL) (i.e., median per probe, then a median
across probes), and latencies to rings are medians in Figure 4a.
The trend that efficiency decreases with deployment size is less
clear in the root DNS than in Microsoft‚Äôs CDN, likely since the
root letters are run by different organizations and so have different
deployment strategies which also impact latency and inflation. A
counterexample to the trend is F root which had the lowest median
latency (15 ms) in 2018 and good efficiency (39%). F root likely
bucks the trend since F root partners with Cloudflare (a global
CDN) and so benefits from a deployment tuned to lowering user
latency. It is interesting that R95 and F root have similar number of
sites and (low) median latency (approximately 15 ms), but that F
root has considerably lower efficiency; hence, low efficiency is not
necessarily bad. Conversely, high efficiency does not result in low
latency; for example, 49% of users reach their closest B root site,
but users still experience a high median latency to B root of 160 ms.
Prior work looked at similar metrics to those in Figure 7a (right) for
root letters using data from RIPE Atlas and arrived at very different
conclusions [51], possibly since RIPE Atlas has limited coverage.
Part of what contributes to low latency is that organizations place
sites close to users. Figure 7b shows what percent of Microsoft users
are "covered" by a site in each ring and in a root letter of similar
size, where "covered" means the closest site is within ùëã km of
users (x-axis). Hence, coverage implies there is a reasonably low
latency option for users. Figure 7b is quite surprising ‚Äì first, the
root DNS as a whole (All Roots) has impressive coverage ‚Äì 91% of
Microsoft users are within 500 km of a root site (not even counting
local sites!). Moreover, individual root letters can have even better
coverage of Microsoft users than rings (L root has 94% of users
within 1,000 km whereas R110 has 90%), which is interesting since
L root, unlike R110, was not deployed specifically for Microsoft
users. Figure 7b also demonstrates that approximating root DNS
users with Microsoft users (Fig. 2) was fair, since root letters have
decent coverage of Microsoft users. An exception is D root which
did not have global sites in India at the time, where Microsoft has
both anycast sites and a large user population to serve.
7.3 Differing Incentives Lead to Different
Investments and Outcomes
We now discuss how incentives have shaped deployments and how
our findings may extend to other anycast deployments.
7.3.1 Drivers for Growth. We reached out to operators of both root
DNS and Microsoft asking what fueled their recent growth and
whether they think it will continue. Of the twelve organizations
running a root DNS letter, 11 responded, and we summarize the
main reasons root DNS letters expand in Table 1. Principally, roots
grew to reduce latency and improve DDoS resilience.
Over the past 5 years the number of root DNS sites has more
than doubled from 516 to 1367, steadily increasing. Surprisingly,
Table 1 demonstrates latency was a primary reason for expansion
for nearly all root letters. Our results suggest this reasoning does
not stem from caring about user experience (¬ß4.3) but perhaps from
establishing a competitive benchmark with other root letters.
Root operators also indicated growth was driven to improve
resilience in two dimensions: DDoS and "ISP" resilience. DDoS
resilience refers to increasing overall capacity so root letters can
provide service in the face of DDoS attacks. ISP resilience refers to
offering root sites in certain locations and networks so that service
can still be offered even if connectivity to the rest of the Internet is
050100Number of Global Sites20406080100120140160Median Latency (ms)R28R47R74R95R110ABCDEFHIJKLM050100Number of Global Sites0.30.40.50.6Efficiency (% of Users)R28R47R74R95R110BAMCEDKJFL25050075010001250150017502000Coverage Radius of Site (km)0.00.10.20.30.40.50.60.70.80.91.0Percent of User PopulationAll RootsR110L - 138R95F - 94R74J - 68R47K - 52R28D - 20SIGCOMM ‚Äô21, August 23‚Äì27, 2021, Virtual Event, USA
severed. According to both operator responses and publicly avail-
able sources, growth additionally stems from open hosting policies
[40, 62, 74] (almost any AS can volunteer to host a new site) and
from teaming up with large CDNs like Cloudflare. Root operator
responses about future plans for growth suggest that the increase
of root DNS sites will slow in the coming years.
With such decentralized deployment (in part by design to pro-
mote resilience), coordinated optimization of root DNS latency is
difficult, even if latency optimization were a goal. By contrast, Mi-
crosoft‚Äôs CDN is latency-sensitive and is centrally run. Operators
optimize and monitor latency, thereby minimizing inflation (¬ß6)
with direct paths to many users (¬ß7.1). Unlike some root letters,
Microsoft does not (externally) compare latency with other CDNs,
considering latency proprietary. Construction of new front-ends
often follows business needs to support new markets. These com-
mercial motivations contrast with the above root DNS reasons for
expansion, yet the number of front-ends for Microsoft‚Äôs CDN has
more than doubled in the past five years.
7.3.2 Other Anycast Systems. A key takeaway from our results
is that one cannot generalize our results to other systems using
anycast. Anycast must be assessed in the context of the system in
which it resides. Prior work took the results of one system (root
DNS) and assumed it applied generally to a technique (anycast)
which resulted in misleading conclusions [51]. It would be difficult
to even extend our results to systems with similar deployments,
since the degree to which performance improvements are due to
the deployment and the degree to which they are due to tuning of
route configurations is unknown [9].
Other systems using anycast include Akamai DNS authoritative
resolvers [1], Google Cloud VMs [32], and Google Public DNS
[31]. All of these services have different performance requirements
for users; i.e., they all want inflation to be "low" but how "low"
it needs to be depends on the application. For example, Google
Cloud VMs can host game engines which have much stricter latency
requirements than fetching HTTP objects. We hope future work
will take these considerations into account when assessing anycast.
8 RELATED WORK
Root DNS Anycast. Many prior studies look at latency and in-
flation performance in the root DNS [13, 51, 52, 67, 69]. Our work
builds on these studies, conducting analysis for nearly every root
letter and calculating inflation for millions of recursives in 35,000
ASes. These larger scale measurements offer broad coverage, en-
able comparisons among root letter deployments, and allow us to
assess inflation in the root DNS system as a whole. We also cal-
culate latency inflation differently than in prior work, which we
believe offers a useful, orthogonal picture of inflation, and calculate
inflation using the same methodology for both Microsoft‚Äôs and
root DNS, which allows us to compare inflation directly between
Microsoft‚Äôs CDN and root DNS (not possible with prior studies).
Finally, we place latency and inflation in the context of user experi-
ence, while prior work on the root DNS does not. Other prior work
looks at anycast‚Äôs ability defend against DDoS attacks [58, 67]; we
do not consider anycast‚Äôs performance in this context. Other prior
work discussed how ad-hoc anycast deployments can lead to poor
performance and load balancing and is an early study of inflation
in the root DNS [13]. Our work supports these conclusions and
uses them in a larger conversation about anycast in the context
of applications. We also confirm observations in prior work that
anycast site affinity is high [12], at least over the duration of DITL.
CDN Anycast. Some CDNs use IP anycast [16, 21, 30, 65, 75].
Some prior work looked at inflation in CDNs [16], finding it to
be similarly low. Our work presents a much larger study of la-
tency and inflation (more than twice as many front-ends, orders
of magnitude more users and measurements), updating the numer-
ical results and lending confidence to the result that inflation is
low; places performance metrics in the context of user experience;
compares performance to other systems that use anycast; and pro-
vides some evidence of how CDNs can keep inflation low. Other
prior work looked at how prefix announcement configurations
can impact the performance of an anycast CDN [54]. More recent
work has investigated how to diagnose and improve anycast perfor-
mance through measurements in production systems [17, 43, 76].
Concurrent work examined addressing challenges faced by CDNs,
proposing a scheme to decouple addressing from services that is
compatible with anycast [27]. Our work characterizes, rather than
changes, anycast CDN performance.
Recursive Resolvers, The Benefits of Caching, and Web Performance.
Prior work has looked at statistics and latency implications of local
resolvers [18, 44]. We calculate similar statistics using recent data.
Some previous work looked at certain pathological behaviors of
popular recursives and the implications these behaviors have on
root DNS load times [34, 49, 73, 81]. We present additional patho-
logical behavior of a popular recursive in Appendix E. Many studies
characterize web performance and consider DNS‚Äôs role in a page
load [8, 11, 72], although none consider how root DNS specifically
contributes to page load time and how this relates to user experi-
ence. Recent work considers placing DNS in the context of other
applications but does not look at root DNS latency in particular [6].
9 CONCLUSION
While anycast performance is interesting in its own right, prior
studies have drawn conclusions primarily from anycast for root
DNS [51]. We have shown that anycast operates differently in CDNs,
with less inflation. Differences stem from the impact the anycast
service‚Äôs latency and inflation has on user-perceived latency. Our
results show the importance of considering multiple subjects in
measurement studies and suggest why anycast continues to see
wide, growing deployment.
Acknowledgements. This paper has been partially funded by
NSF CNS-1835253 and NSF CNS-1836872. John Heidemann‚Äôs work
was supported in part by NSF CNS-1925737 and OAC-1739034. We
would like to thank our shepherd Xiaowei Yang and the anonymous
reviewers for their insightful comments, root DNS operators for
their feedback on our analysis, and Dave Levin and Marcel Flores
for their detailed feedback on an early draft of the paper.
REFERENCES
[1] Akamai. 2020. Designing DNS for Availability and Resilience Against DDoS
akamai.com/us/en/multimedia/documents/white-paper/akamai-
Attacks.
designing-dns-for-availability-and-resilience-against-ddos-attacks.pdf
[2] Akamai. 2021. Akamai Compliance Programs.
akamai.com/us/en/about/
[3] Mehmet Akcin. 2015. Comparing Root Server Performance Around the World.
thousandeyes.com/blog/comparing-dns-root-server-performance
[4] Adiel Akplogan, Roy Arends, David Conrad, Alain Durand, Paul Hoffman, David
Huberman, Matt Larson, Sion Lloyd, Terry Manderson, David Soltero, Samaneh
Tajalizadehkhoob, and Mauricio Vergara Ereche. 2020. Analysis of the Effects
of COVID-19-Related Lockdowns on IMRS Traffic. (April 2020).
icann.org/en/
system/files/files/octo-008-en.pdf
[5] Mark Allman. 2019. On Eliminating Root Nameservers from the DNS. In Proceed-
ings of the 18ùë°‚Ñé ACM Workshop on Hot Topics in Networks (HOTNETS) (Princeton,
NJ, USA). ACM.
[6] Mark Allman. 2020. Putting DNS in Context. In Proceedings of the 2020 Internet
Measurement Conference (IMC) (Online). ACM.
[7] Amazon. 2020. Amazon Route 53 FAQs. aws.amazon.com/route53/faqs/
[8] Internet Archive. 2020. The HTTP Archive Project. httparchive.org/
[9] Todd Arnold, Matt Calder, Italo Cunha, Arpit Gupta, Harsha V. Madhyastha,
Michael Schapira, and Ethan Katz-Bassett. 2019. Beating BGP is Harder than we
Thought. In Proceedings of the 18ùë°‚Ñé ACM Workshop on Hot Topics in Networks
(HOTNETS) (Princeton, NJ, USA). ACM.
[10] Todd Arnold, Ege G√ºrmeri√ßliler, Georgia Essig, Arpit Gupta, Matt Calder, Vasileios
Giotsas, and Ethan Katz-Bassett. 2020. (How Much) Does a Private WAN Improve
Cloud Performance? In INFOCOM (Online). IEEE.
[11] Alemnew Sheferaw Asrese, Pasi Sarolahti, Magnus Boye, and Jorg Ott. 2016.
WePR: A Tool for Automated Web Performance Measurement. In 2016 IEEE
Globecom Workshops (Washington D.C., USA). IEEE.
[12] Hitesh Ballani and Paul Francis. 2005. Towards a Global IP Anycast Service.
In Proceedings of the 2005 ACM SIGCOMM Conference (Philadelphia, PA, USA).
ACM.
[13] Hitesh Ballani, Paul Francis, and Sylvia Ratnasamy. 2006. A Measurement-
Based Deployment Proposal for IP Anycast. In Proceedings of the 2006 Internet
Measurement Conference (IMC) (Rio de Janeiro, Brazil). ACM.
[14] Ray Bellis. 2015. Researching F-root Anycast Placement Using RIPE At-
labs.ripe.net/author/ray_bellis/researching-f-root-anycast-placement-
[15] CAIDA. 2020. Inferred AS to Organization Mapping Dataset. caida.org/data/as-
[16] Matt Calder, Ashley Flavel, Ethan Katz-Bassett, Ratul Mahajan, and Jitendra
Padhye. 2015. Analyzing the Performance of an Anycast CDN. In Proceedings of
the 2015 Internet Measurement Conference (IMC) (Tokyo, Japan). ACM.
[17] Matt Calder, Ryan Gao, Manuel Schr√∂der, Ryan Stewart, Jitendra Padhye, Ratul
Mahajan, Ganesh Ananthanarayanan, and Ethan Katz-Bassett. 2018. Odin: Mi-
crosoft‚Äôs Scalable Fault-Tolerant CDN Measurement System. In 15ùë°‚Ñé USENIX
Symposium on Networked Systems Design and Implementation (NSDI) (Renton,
WA, USA). USENIX.
[18] Thomas Callahan, Mark Allman, and Michael Rabinovich. 2013. On Modern DNS
Behavior and Properties. ACM SIGCOMM Computer Communication Review (July
2013).
[19] Neal Cardwell, Stefan Savage, and Tom Anderson. 2000. Modelling TCP Latency.
In INFOCOM (Tel-Aviv, Israel). IEEE.
[20] Yi-Ching Chiu, Brandon Schlinker, Abhishek Balaji Radhakrishnan, Ethan Katz-
Bassett, and Ramesh Govindan. 2015. Are We One Hop Away from a Better
Internet? In Proceedings of the 2015 Internet Measurement Conference (IMC) (Tokyo,
Japan). ACM.
[21] Danilo Cicalese, Jordan Aug√©, Diana Joumblatt, Timur Friedman, and Dario Rossi.
2015. Characterizing IPv4 Anycast Adoption and Deployment. In Proceedings of
the 11ùë°‚Ñé ACM Conference on Emerging Networking Experiments and Technologies
(CoNEXT) (Heidelberg, Germany). ACM.
[22] Cloudflare. 2020. What is DNS? cloudflare.com/learning/dns/what-is-dns/
[23] Lorenzo Colitti, Erik Romijn, Henk Uijterwaal, and Andrei Robachevsky. 2006.
Evaluating the Effects of Anycast on DNS Root Name Servers. RIPE Document
RIPE-393 (Oct. 2006).
[24] Gerald Combs. 2020. Tshark. wireshark.org/docs/man-pages/tshark.html
[25] Team Cymru. 2020. IP to ASN Mapping Service.
team-cymru.com/community-
las.
using-ripe-atlas/
organizations/
compliance/
services/ip-asn-mapping/
ditl/2018
[26] DNS-OARC. 2018. A Day in the Life of the Internet. dns-oarc.net/oarc/data/