### User Privacy and Vulnerability Analysis

#### Table 4: User Privacy Categories

**User E-Profile**
- 01: Email
- 02: User ID
- 03: Registration Date
- 04: IP Address
- 05: Last Login Date
- 06: Last Update Date

**User Physical-Profile**
- 07: Real Name
- 08: Birthday
- 09: Geo-location
- 10: Home Address
- 11: Phone Number
- 12: Body Information

**User Secrets**
- 13: Token
- 14: Password
- 15: Pass Code

**App Specific Private Data**
- 16: In-App Messages
- 17: Shopping History
- 18: Book Shelf
- 19: Favorites or Subscription
- 20: Account Balance
- 21: Contacts Information
- 22: Payment Information
- 23: Private Activity Information

#### Table 5: User Privacy Credentials

| Category | Credential User E-Profile | Credential User Physical-Profile | App | Version | Type | Statistics |
|----------|---------------------------|----------------------------------|-----|---------|------|------------|
| User E-Profile | 01, 02 | 01, 02 | com.***.e*** | 2.2 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02, 03, 04, 01, 06 | 07, 08, 01, 10, 11 | com.***.k*** | 2.0.11 | 01 E 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 09, 10, 11 | com.***.w*** | 1.0.5 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 09, 10, 11 | com.g***.c*** | 2.4.1 | 01 E 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.***.m*** | 1.6.8 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 08, 01, 01, 01, 12 | com.***.h*** | 2.5.6.0 | 01 E 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 08, 01, 10 | com.***.c*** | 2.6.1 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 09, 10, 11 | com.***.u*** | 2.03 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07 | com.m*** | 7.3.0 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 09, 10, 11 | com.***.***.c*** | 7.5.5v | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.***.a*** | 3.09 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.b*** | 2.0.4 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.***.a*** | 2.3.2 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.***.j*** | 2.7.4 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.***.d*** | 2.4.2 | 01 E 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | cl.***.***.i*** | 2.1.0 | N 01 01 | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | in.v*** | 4.4.5.2 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.mediaingea.uptodown.lite | 3.18 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | com.t*** | 1.4.0 | 01 01 F | 8 4 8 |
| User E-Profile | 01, 02 | 07, 01, 01, 10, 11 | cz.***.n*** | 4.8 | 01 01 F | 8 4 8 |

**User Secrets**
- 13, 14
- 13
- 13
- 01, 01, 15
- 13
- 13
- 13
- 13
- 13
- 13

**App Specific Private Data**
- 01, 01, 18
- 01, 17, 01, 19
- 16, 01, 01, 19, 01, 21
- 01, 17, 01, 01, 20
- 16, 01, 01, 01, 20, 01, 22
- 16, 01, 01, 19
- 01, 01, 01, 19
- 16, 01, 01, 19
- 16, 01, 01, 19, 20
- 01, 01, 01, 19, 01, 01, 22
- 16, 01, 01, 19
- 01, 01, 01, 19
- 16, 01, 01, 19
- 16, 01, 01, 19
- 01, 01, 01, 01, 01, 01, 01, 23
- 01, 01, 01, 01, 20
- 16, 01, 01, 19, 01, 21
- 16, 01, 01, 19
- 16, 01, 01, 01, 01, 01, 01, 23
- 01, 01, 01, 01, 01, 01, 01, 23
- 11, 02, 01, 13, 04, 02, 02, 03
- 01, 01, 03, 04, 05
- 01, 02, 03
- 01, 02, 03
- 01, 02
- 07, 08, 09
- 07
- 07, 01, 09
- 07, 08, 09
- 07, 08
- 01, 02
- 01, 02
- 01, 02
- 14, 16, 05, 02, 01, 01
- 01, 01, 01, 10, 11
- 07
- 15, 06, 06, 07, 06, 01
- 13
- 13
- 13
- 13, 01, 01

### Security Analysis

#### 6.1 Systematized Analysis

To understand the data leakage caused by vulnerable access control implementations, we manually examined 20 vulnerable app servers. The leaked data was classified into four categories:

1. **User E-Profile**: Includes email address, user ID, registration date, IP address, last login date, and last update date.
2. **User Physical-Profile**: Includes real name, birthday, geo-location, home address, phone number, and body information.
3. **User Secrets**: Includes access token, user password (plaintext or hashed), and app pass code.
4. **App Specific Private Data**: Includes shopping history, book shelf, favorites, payment information, account balance, etc.

From the analysis, we found that 8 out of 20 vulnerable servers use predictable numbers to access a userâ€™s private information, 4 use email addresses, and 8 use Facebook IDs (FIDs). The most frequently leaked data includes user IDs (16), email addresses (14), and security tokens (13).

Surprisingly, some servers even leak user passwords, which is a significant security risk. Given the predictability of these identifiers and the lack of further authorization checks, an attacker can easily crawl all user data from the victim servers. In our experimental settings, an adversary could potentially access up to 61 million mobile users' private records based on the total number of downloads for the vulnerable apps.

#### 6.2 Case Studies

**Case Study: I App**

The I app is a popular Google Play app with 100,000 to 500,000 downloads, providing discount information for shopping. During our test, AuthScope intercepted Alice's request for personal information and replaced her UID (673436) with Bob's UID (673491). The response message (Figure 6) revealed Bob's sensitive information, including his birthday, gender, email, Facebook ID, current location, and balance history.

For this and similar apps, an attacker only needs to obtain a user's UID to perform the attack. UIDs in this app are generated incrementally, making it easy for an attacker to enumerate other UIDs. Given the app's high install count, an adversary could retrieve up to 500,000 users' private information.

**Case Study: K App**

The K app, another example, also suffers from similar vulnerabilities. Figure 7 shows the detailed response message, revealing Bob's personal information, including his name, username, password, secret, email, website, phone number, and more. This case study highlights the severe risks associated with vulnerable authorization mechanisms in mobile apps.

### Conclusion

Vulnerable authorization implementations in mobile apps can lead to significant data leakage, exposing sensitive user information. The predictability of identifiers and the lack of additional authorization checks make it trivial for attackers to exploit these vulnerabilities. Developers must implement robust access control mechanisms to protect user data and prevent such attacks.