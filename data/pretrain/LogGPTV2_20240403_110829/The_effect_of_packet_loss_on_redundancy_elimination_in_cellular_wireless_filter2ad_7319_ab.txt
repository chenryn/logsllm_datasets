328B
199B
0.11
0.12
80%
18%
1%
1%
89%
11%
952B
183B
0.03
0.09
97%
2%
0%
1%
82%
18%
1001B
322B
0.03
0.14
Table 1: Properties of wireless data sets.
for the ﬁngerprints to be chosen independently of their oﬀset
in the packet.
Next we describe the process of eliminating redundant
traﬃc on the link between two nodes. For ease of expo-
sition, we consider one direction of traﬃc and call the nodes
sender and receiver. Both the sender and the receiver de-
ploy a packet cache and a ﬁngerprint store. The packet
cache stores all packets that were sent or received by the
node, while the ﬁngerprint store keeps the ﬁngerprints of
all packets stored in the packet cache. For each outgo-
ing packet, the sender computes its ﬁngerprints and veriﬁes
whether they are present in the ﬁngerprint store. Matches
identify repeated sequences of size w (the size of window
over which the ﬁngerprint was computed). We then retrieve
from cache the packet corresponding to the ﬁngerprint and
expand the matched region byte-by-byte in both directions
to ﬁnd the longest possible match. We replace each matched
region with an 8-byte key, that indicates the location of the
matched region in cache (packet id and oﬀset) and its length.
To obtain the original packet, the receiver identiﬁes the keys
in the encoded packet and replaces them with the regions in
cache to which they point. Figure 3 is an illustration of the
encoded packet and encoding keys.
The bytes of the encoding key represent the bandwidth
cost that we have to pay to eliminate redundancy. Ideally,
the size of the key is as small as possible. Our design of the 8-
byte key improves over the existing modp algorithm which
uses a 12-byte key. The ﬁrst four bytes identify the packet in
cache. Unlike Spring et al. [20], we choose to encode a hash
of the packet in cache rather than the ﬁngerprint associated
with the repeated sequence, which reduces the size of the
encoding key by four bytes. Similar to the original modp
algorithm, we use the last four bytes to encode three 11-bit
integers representing the oﬀsets of the matched region in the
current packet and in the cached packet as well as the length
of the match. To accommodate the additional bit, we take
advantage of the fact that the sum of either oﬀset and the
match length cannot be larger than 1,500.
2961
7
23
37
56
62
match1
match2
packet (62B)
1 2
10
18
24
38
44
match
encoding
# of matches
not encoded
(a)
(b)
encoded packet (44B, savings: 18B)
1
(c)
packet hash
5
8
match
length
crt
offset
cached
offset
Figure 3: Encoding example: (a) incoming packet
has two sequences of bytes seen in previous packets;
(b) each match is replaced by an eight-byte encod-
ing key; (c) each encoding key contains the hash of
the packet in cache where the match was found (4
bytes), followed by the length of the match, oﬀset in
current packet, and oﬀset in cached packet (all en-
coded in 9, 10, or 11 bits depending on their size.)
3.3 Bandwidth Savings
We deﬁne the bandwidth savings as the ratio between the
volume of traﬃc saved after applying RE and the volume
of traﬃc before RE. The bandwidth saved by each user de-
pends on both the volume of redundant content that RE
ﬁnds and the number of continuous repeated sequences of
bytes (matches). This is regulated by parameters p and w
of the modp algorithm. Recall that p determines how of-
ten we verify whether a ﬁngerprint leads to a match and w
represents the size of the smallest match. A small p has the
potential to ﬁnd more matches, but also strains the match-
ﬁnding data structure.
We implement modp and run it for all users in each data
set, for both uplink and downlink traﬃc. We vary the value
of p from 1 (all ﬁngerprints considered) to 256 (one in every
256 ﬁngerprints considered). We present results for p =
32 because it generated the highest savings. We ﬁx w to
8 because that is the size of the smallest possible match
that would not waste bandwidth. We set the cache size to
64,000 packets. Unless otherwise noted, we use the same
parameters throughout the rest of the paper.
Figure 4 (left) shows the cumulative distribution of band-
width savings for all users in each data set. Uplink traﬃc
is more redundant than downlink traﬃc. This is due to the
increased number of identical or near-identical TCP ACKs
and client requests sent on the uplink. WSP-1 has a higher
overall redundancy than both WSP-2 and WSP-3. We spec-
ulate that this is because mobile data applications were not
as diverse at the collection time of WSP-1 (October 2007).
3.4 The Effect of Loss
Loss in wireless is the result of transmission errors over
the air interface, insuﬃcient buﬀers at end points, or con-
gestion. In Section 2, we showed that it is not unusual for
wireless networks to experience high packet loss rates. Next,
we study the eﬀect of packet loss on bandwidth savings us-
ing simulations driven by our three data sets and live exper-
iments on a US-based CDMA 1x-EvDO network.
3.4.1 Trace-based Simulations
network. One computer acts as the sender and the other as
the receiver. We replay the traﬃc for each of the k mobile
users in the trace between the sender and the receiver while
simulating a lossy connection, where each packet is lost with
probability pl.
We capture the eﬀect of loss on RE with two measures:
bandwidth savings and RE loss. We use the bandwidth sav-
ings (deﬁned in Section 3.3) to capture the volume of traﬃc
saved in the presence of loss. To capture the correctness
of RE, we deﬁne the RE loss as the fraction of packets that
cannot be decoded by the receiver because previous packets,
on which they depend, are missing from the cache. Figure 4
(middle) shows the distribution of RE loss for all uplink traf-
ﬁc in WSP-3. Even when the loss rate is 0.01 (≈ 1 in 100
packets is lost), 25% of the users cannot decode 20% of the
packets they receive. Table 2 shows the results for all data
sets.
We present the bandwidth savings for the uplink WSP-3
traﬃc in Figure 4(right) and for all data sets in Table 2. For
the packets that receivers can decode, the bandwidth savings
drop signiﬁcantly (compared to a scenario where there is no
loss): only around 20% of users see savings of more than
20% in uplink WSP-3 (compared to almost half when there
is no loss). We also observe that the bandwidth savings and
RE loss change with the loss ratio for WSP-1 but not for
WSP-2 and WSP-3 (except for the RE loss rate for WSP-
2 when pl = 0.10). We believe this is due to the lower
volume of traﬃc that each user in WSP-1 sends or receives.
In conclusion, packet loss aﬀects both the performance and
correctness of RE in wireless cellular networks.
3.4.2 Live deployment
To show the eﬀect of loss on bandwidth savings under live
network conditions, we deploy RE on a 3G-enabled laptop,
as described in Section 2.3. The laptop tries to compress all
outgoing packets, regardless of the destination, then tunnels
them to a server on our campus network which decodes and
forwards them to their destinations.
We run several experiments where we transfer, using UDP,
parts of the Enron e-mail corpus [8] over the 3G connec-
tion. We transfer email because it is known to have higher
repeated content. Each transfer takes 60 seconds and we
send about 2MB of data. We demonstrate the eﬀect of lost
bandwidth savings due to loss, therefore we do not make
any attempt to recover lost packets (i.e., we assume that
they could be retransmitted, without being compressed, by
a higher layer).
Figure 5 shows the results of a representative experiment.
The line labeled “expected savings” represents the evolution
in time of the bandwidth savings expected by the sender,
assuming no packet losses. The line labeled “actual savings”
corresponds to the savings computed by the receiver from
the packets it can decode (i.e., bandwidth saved in the pres-
ence of packet loss). The average loss rate during the exper-
iment, as measured with iperf was around 0.25. Although
RE should be able to save around 63% of the bandwidth at
the end of the experiment, due to loss, it saves much less—
only 2%. This number is optimistic since it does not include
the bandwidth lost by retransmitting the lost packets.
4. LOSS RECOVERY
To study the eﬀect of loss under a controlled environment,
we deploy RE on two computers connected through a wired
Packet loss can compound when RE is used: missing pack-
ets will prevent receivers from being able to decode later
297s
r
e
s
u
f
o
n
o
i
t
c
a
r
f
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
WSP-1
WSP-2
WSP-3
 0
 0.2
 0.4
 0.6
 0.8
 1
bandwidth savings
s
r
e
s
u
f
o
n
o
i
t
c
a
r
f
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
loss = 0.01
loss = 0.05
loss = 0.10
 0
 0.2
 0.4
 0.6
 0.8
 1
RE loss
s
r
e
s
u
f
o
n
o
i
t
c
a
r
f
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
no loss
loss = 0.01
 0
 0.2
 0.4
 0.6
 0.8
 1
bandwidth savings
Figure 4: (left) Cumulative distribution of bandwidth savings without packet loss for uplink traﬃc, all data
sets; (middle) Cumulative distribution of the fraction of packets that receiver cannot decode (RE loss),
for various packet loss rates, uplink WSP-3; (right) cumulative distribution of bandwidth savings with and
without packet loss, uplink WSP-3.
Data set
dir
WSP-1
WSP-2
WSP-3
down
up
down
up
down
up
no loss
BW savings
BW savings
pl=0.01
pl=0.05
pl=0.10
pl=0.01
RE loss
pl=0.05
pl=0.10
loss
0.50
0.65
0.22
0.46
0.08