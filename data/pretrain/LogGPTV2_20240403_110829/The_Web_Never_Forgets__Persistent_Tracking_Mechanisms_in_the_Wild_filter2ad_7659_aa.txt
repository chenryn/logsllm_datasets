title:The Web Never Forgets: Persistent Tracking Mechanisms in the Wild
author:Gunes Acar and
Christian Eubank and
Steven Englehardt and
Marc Ju&apos;arez and
Arvind Narayanan and
Claudia D&apos;ıaz
The Web Never Forgets:
Persistent Tracking Mechanisms in the Wild
Gunes Acar1, Christian Eubank2, Steven Englehardt2, Marc Juarez1
Arvind Narayanan2, Claudia Diaz1
1KU Leuven, ESAT/COSIC and iMinds, Leuven, Belgium
{name.surname}@esat.kuleuven.be
2Princeton University
{cge,ste,arvindn}@cs.princeton.edu
ABSTRACT
We present the ﬁrst large-scale studies of three advanced web
tracking mechanisms — canvas ﬁngerprinting, evercookies
and use of “cookie syncing” in conjunction with evercookies.
Canvas ﬁngerprinting, a recently developed form of browser
ﬁngerprinting, has not previously been reported in the wild;
our results show that over 5% of the top 100,000 websites
employ it. We then present the ﬁrst automated study of
evercookies and respawning and the discovery of a new ev-
ercookie vector, IndexedDB. Turning to cookie syncing, we
present novel techniques for detection and analysing ID ﬂows
and we quantify the ampliﬁcation of privacy-intrusive track-
ing practices due to cookie syncing.
Our evaluation of the defensive techniques used by
privacy-aware users ﬁnds that there exist subtle pitfalls —
such as failing to clear state on multiple browsers at once
— in which a single lapse in judgement can shatter privacy
defenses. This suggests that even sophisticated users face
great diﬃculties in evading tracking techniques.
Categories and Subject Descriptors
K.6.m [Management of Computing and Information
Systems]: Miscellaneous; H.3.5 [Information Storage
and Retrieval]: Online Information Services — Web-based
services; K.4.4 [Computers and Society]: Electronic
Commerce — Security
Keywords
Web security; privacy;
tracking; canvas ﬁngerprinting;
browser ﬁngerprinting; cookie syncing; evercookie, Java-
Script; Flash
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-2957-6/14/11 ...$15.00.
http://dx.doi.org/10.1145/2660267.2660347.
1.
INTRODUCTION
A 1999 New York Times article called cookies compre-
hensive privacy invaders and described them as “surveillance
ﬁles that many marketers implant in the personal computers
of people.” Ten years later, the stealth and sophistication of
tracking techniques had advanced to the point that Edward
Felten wrote “If You’re Going to Track Me, Please Use Cook-
ies” [18]. Indeed, online tracking has often been described
as an “arms race” [47], and in this work we study the latest
advances in that race.
The tracking mechanisms we study are advanced in that
they are hard to control, hard to detect and resilient
to blocking or removing. Canvas ﬁngerprinting uses the
browser’s Canvas API to draw invisible images and ex-
tract a persistent, long-term ﬁngerprint without the user’s
knowledge. There doesn’t appear to be a way to automati-
cally block canvas ﬁngerprinting without false positives that
block legitimate functionality; even a partial ﬁx requires a
browser source-code patch [40]. Evercookies actively circum-
vent users’ deliberate attempts to start with a fresh pro-
ﬁle by abusing diﬀerent browser storage mechanisms to re-
store removed cookies. Cookie syncing, a workaround to
the Same-Origin Policy, allows diﬀerent trackers to share
user identiﬁers with each other. Besides being hard to de-
tect, cookie syncing enables back-end server-to-server data
merges hidden from public view.
Our goal
is to improve transparency of web tracking
in general and advanced tracking techniques in particular.
We hope that our techniques and results will lead to bet-
ter defenses, increased accountability for companies deploy-
ing exotic tracking techniques and an invigorated and in-
formed public and regulatory debate on increasingly persis-
tent tracking techniques.
While conducting our measurements, we aimed to auto-
mate all possible data collection and analysis steps. This
improved the scalability of our crawlers and allowed us to
analyze 100,000 sites for ﬁngerprinting experiments, as well
as signiﬁcantly improve upon the scale and sophistication of
the prior work on respawning, evercookies and cookie sync-
ing.
1.1 Contributions
First study of real-world canvas ﬁngerprinting
practices. We present the results of previously unreported
674
canvas ﬁngerprinting scripts as found on the top 100,000
Alexa sites. We ﬁnd canvas ﬁngerprinting to be the most
common ﬁngerprinting method ever studied, with more than
5% prevalence. Analysis of the real-world scripts revealed
that they went beyond the techniques suggested by the aca-
demic research community (Section 3).
Automated analysis of evercookies and respawn-
ing. We describe an automated detection method for ever-
cookies and cookie respawning. Applying this analysis, we
detected respawning by Flash cookies on 10 of the 200 most
popular sites and found 33 diﬀerent Flash cookies were used
to respawn over 175 HTTP cookies on 107 of the top 10,000
sites. We also uncover a new evercookie vector, IndexedDB,
which was never found in the wild before (Section 4). Re-
markably, respawning has already led to a lawsuit and a
$500,000 settlement [14], and yet it is quite prevalent on the
web.
Cookie syncing privacy analysis. We ﬁnd instances of
syncing of respawned IDs in the wild, i.e., an ID respawned
by one domain is passed to another domain. Respawning
enables trackers to link a user’s browsing logs before cookie
clearing to browsing logs after cookie clearing. In our mea-
surements, approximately 1.4% of a user’s browser history
can be linked this way in the wild. However, the ﬁgure
jumps to at least 11% when these respawned cookies are
subsequently synced. Cookie syncing also allows trackers
to merge records on individual users, although this merging
cannot be observed via the browser. Our measurements in
Section 5 show that in the model of back-end merging we
study, the number of trackers that can obtain a sizable frac-
tion (40%) of a user’s browsing history increases from 0.3%
to 22.1%.
Novel techniques.
In performing the above experi-
ments, we developed and utilized novel analysis and data
collection techniques that can be used in similar web pri-
vacy studies.
• Using the strace debugging tool for low-level monitor-
ing of the browser and the Flash plugin player (Section
4.2).
• A set of criteria for distinguishing and extracting
pseudonymous identiﬁers from traditional storage vec-
tors, such as cookies, as well as other vectors such
as Flash storage. By extracting known IDs, we can
track them as they spread to multiple domains through
cookie syncing.
Making the code and the data public. We intend
to publicly release all the code we developed for our exper-
iments and all collected data, including (i) our crawling in-
frastructure, (ii) modules for analysing browser proﬁle data
and (iii) crawl databases collected in the course of this study.
1.2
Implications
The thrust of our results is that the three advanced track-
ing mechanisms we studied are present in the wild and some
of them are rather prevalent. As we elaborate on in Section
6.1, they are hard to block, especially without loss of con-
tent or functionality, and once some tracking has happened,
it is hard to start from a truly clean proﬁle. A frequent ar-
gument in online privacy debates is that individuals should
“take control” of their own privacy online. Our results sug-
gest that even sophisticated users may not be able to do so
without signiﬁcant trade-oﬀs.
675
We show that cookie syncing can greatly amplify privacy
breaches through server-to-server communication. While
web privacy measurement has helped illuminate many pri-
vacy breaches online, server-to-server communication is not
directly observable. All of this argues that greater oversight
over online tracking is becoming ever more necessary.
Our results only apply to desktop browsing. Studying
similar tracking mechanisms on mobile platforms requires
distinct methodologies and infrastructure and is left to fu-
ture work.
2. BACKGROUND AND RELATED WORK
The tracking mechanisms studied in this paper can be
diﬀerentiated from their conventional counterparts by their
potential to circumvent users’ tracking preferences, being
hard to discover and resilient to removal. We selected three
of the most prominent persistent tracking techniques — can-
vas ﬁngerprinting, evercookies and cookie syncing — based
on the lack of adequate or comprehensive empirical measure-
ments of these mechanisms in the wild. We now give a brief
overview of these techniques.
Canvas ﬁngerprinting: Canvas ﬁngerprinting is a type of
browser or device ﬁngerprinting technique that was ﬁrst pre-
sented in a paper by Mowery and Shacham in 2012 [32].
The authors found that by using the Canvas API of modern
browsers, an adversary can exploit subtle diﬀerences in the
rendering of the same text or WebGL scenes to extract a
consistent ﬁngerprint that can easily be obtained in a frac-
tion of a second without user’s awareness.
The same text can be rendered in diﬀerent ways on dif-
ferent computers depending on the operating system, font
library, graphics card, graphics driver and the browser. This
may be due to the diﬀerences in font rasterization such as
anti-aliasing, hinting or sub-pixel smoothing, diﬀerences in
system fonts, API implementations or even the physical dis-
play [32]. In order to maximize the diversity of outcomes,
the adversary may draw as many diﬀerent letters as possi-
ble to the canvas. Mowery and Shacham, for instance, used
the pangram How quickly daft jumping zebras vex in their
experiments.
The entropy available in canvas ﬁngerprints has never
been measured in a large-scale published study like Panop-
ticlick [16]. Mowery and Shacham collected canvas ﬁnger-
prints from 294 Mechanical Turk users and computed 5.73
bits of entropy for their dataset. Since this experiment was
signiﬁcantly limited for measuring the canvas ﬁngerprint-
ing entropy, they had a further estimate of at least 10 bits,
meaning one in a thousand users share the same ﬁnger-
print [32].
Figure 1 shows the basic ﬂow of operations to ﬁngerprint
canvas. When a user visits a page, the ﬁngerprinting script
ﬁrst draws text with the font and size of its choice and adds
background colors (1). Next, the script calls Canvas API’s
ToDataURL method to get the canvas pixel data in dataURL
format (2), which is basically a Base64 encoded representa-
tion of the binary pixel data. Finally, the script takes the
hash of the text-encoded pixel data (3), which serves as the
ﬁngerprint and may be combined with other high-entropy
browser properties such as the list of plugins, the list of
fonts, or the user agent string [16].
from a Flash cookie that the user may fail to remove (Fig-
ure 2c).
Cookie syncing: Cookie synchronization or cookie sync-
ing is the practice of tracker domains passing pseudonymous
IDs associated with a given user, typically stored in cookies,
amongst each other. Domain A, for instance, could pass an
ID to domain B by making a request to a URL hosted by
domain B which contains the ID as a parameter string. Ac-
cording to Google’s developer guide to cookie syncing (which
they call cookie matching), cookie syncing provides a means
for domains sharing cookie values, given the restriction that
sites can’t read each other cookies, in order to better facili-
tate targeting and real-time bidding [4].
In general, we consider the domains involved in cookie sync-
ing to be third parties — that is, they appear on the ﬁrst-
party sites that a user explicitly chooses to visit. Although
some sites such as facebook.com appear both in a ﬁrst and
third-party context, this distinction is usually quite clear.
The authors of [38] consider cookie synchronization both as
a means of detecting business relationships between diﬀerent
third-parties but also as a means of determining to what de-
gree user data may ﬂow between parties, primarily through
real-time bidding. In the present work, we study the impli-
cations of the fact that trackers that share an ID through
syncing are in position to merge their database entries cor-
responding to a particular user, thereby reconstructing a
larger fraction of the user’s browsing patterns.
2.1 Related work
While HTTP cookies continue to be the most common
method of third-party online tracking [41], a variety of more
intrusive tracking mechanisms have been demonstrated, re-
ﬁned and deployed over the last few years. In response, var-
ious defenses have been developed, and a number of studies
have presented measurements of the state of tracking. While
advertising companies have claimed that tracking is essen-
tial for the web economy to function [42], a line of research
papers have proposed and prototyped solutions to carry out
behavioral advertising without tracking.
Fingerprinting, novel mechanisms. Researchers have
presented novel browser ﬁngerprinting mechanisms such as
those based on performance metrics [31], the JavaScript en-
gine [33] , the rendering engine [50], clock skew [23], We-
bGL and canvas ﬁngerprinting [32]. Most of those stud-
ies followed the path opened by the inﬂuential Panopticlick
study [16], which demonstrated the potentials of browser
ﬁngerprinting for online tracking.
Measurement studies. Web privacy measurement is a
burgeoning ﬁeld; an inﬂuential early work is [25] and promi-
nent recent work includes [29, 41]. Mayer and Mitchell made
a comprehensive survey of tracking in combination with the
policy that surrounds it, and developed a tool for similar
web privacy measurement studies [29]. Roesner et al. ana-
lyzed diﬀerent tracking methods and suggested a taxonomy
for third-party tracking [41].
Other papers have looked at various aspects of web pri-
vacy, including PII leakage [26], mobile web tracking [17],
JavaScript inclusions [35], targeted advertisements [27], and
the eﬀectiveness of blocking tools [28].
Two studies measured the prevalence of diﬀerent ﬁnger-
printing mechanisms and evaluated existing countermea-
sures
studied three previ-
[37, 6]. Nikiforakis et al.
Figure 1: Canvas ﬁngerprinting basic ﬂow of operations
(a)
(b)
(c)
Figure 2: Respawning HTTP cookies by Flash evercookies:
(a) the webpage stores an HTTP and a Flash cookie (LSO),
(b) the user removes the HTTP cookie, (c) the webpage
respawns the HTTP cookie by copying the value from the
Flash cookie.
Evercookies and respawning: A 2009 study by Soltani
et al. showed the abuse of Flash cookies for regenerating
previously removed HTTP cookies, a technique referred to
as “respawning” [43]. They found that 54 of the 100 most
popular sites (rated by Quantcast) stored Flash cookies, of
which 41 had matching content with regular cookies. Soltani
et al.
then analyzed respawning and found that several
sites, including aol.com, about.com and hulu.com, regener-
ated previously removed HTTP cookies using Flash cookies.
A follow up study in 2011 found that sites use ETags and
HTML5 localStorage API to respawn cookies [7].
In 2010, Samy Kamkar demonstrated the “Evercookie,” a
resilient tracking mechanism that utilizes multiple storage
vectors including Flash cookies, localStorage, sessionStor-
age and ETags [21]. Kamkar employed a variety of novel
techniques, such as printing ID strings into a canvas image
which is then force-cached and read from the cached im-
age on subsequent visits. Instead of just respawning HTTP
cookies by Flash cookies, his script would check the cleared
vectors in the background and respawn from any storage