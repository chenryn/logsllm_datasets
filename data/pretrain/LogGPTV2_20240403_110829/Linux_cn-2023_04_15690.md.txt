### 上古 MIT Lisp 机器系统软件的最后一个版本成功恢复

**作者：Liam Proven**
**译者：wxy**
**校对：wxy**

**类别：观点**

**发布日期：2023-04-04 09:11:00**
**更新日期：2023-04-04 09:11:00**

**摘要：** 这是非常重要的、上古的计算机上运行的，古老软件的新版本。

![](/data/attachment/album/202304/04/091132fa272ic7vcc5lupi.jpg)

LM-3 项目宣布了 MIT CADR Lisp 机器系统软件的第 100 版，这是它的最后一个版本。这个版本既是全新的，也是极其古老的。

IBM 的 Eric Moore 在 LinkedIn 上发布了关于这个版本的消息，并参与了恢复工作。项目的一个详细帖子描述了该软件的内容及其恢复过程。

#### 为什么这很重要？

这款软件及其运行的机器是历史上一场重要战斗的标志和纪念物。这场战斗是一场“针锋相对”的计算机制造战争。“历史是由胜利者书写的”，温斯顿·丘吉尔曾这样说过。

这场战争涉及两个阵营。一方认为，正确的计算机制造方法是用最好的语言编写最好的软件，并设计精良的硬件来运行这些软件。另一方则主张制造简单、快速且易于使用的软硬件，以满足大多数人的需求。

最终，一方取得了决定性的胜利，但这场战争耗时长久。胜利的一方吸收了许多失败方的想法和技术，导致今天的软件既不简单也不快速。胜利者忘记了他们在战斗，也忘记了与之战斗的对手。

一篇著名的文章《Lisp：好消息，坏消息，如何大获全胜》（1991 年）总结了这场战争。文中提到两种哲学：“做正确的事” 和 “差点则更好”。前者代表麻省理工学院/斯坦福大学的设计风格，后者则是早期 Unix 和 C 语言的设计流派，被称为“新泽西方式”。

#### Lisp 机器的历史

麻省理工学院首次尝试建造运行 Lisp 的计算机是在 1974 年，名为 CONS。1979 年，更成功的 CADR 计算机诞生，并成为两家商业 Lisp 机器公司 LMI 和 Symbolics 的基础。Symbolics 拥有互联网上的第一个 .com 域名。这些公司的成立以及其软件的发展，启动了 Richard Stallman 的职业生涯，进而催生了 Emacs、GNU 项目和自由软件运动。

此次恢复的软件是从麻省理工学院技术广场磁带收藏中的备份磁带上提取的。整个提取和清理数据的过程花费了十年时间，使其在 35 年后首次运行。这是一个庞大的工程。

目前，该软件可以在模拟器上运行，例如由 Brad Parker 开发的 usim。其源代码和一些历史记录可在 GitHub 上找到。

![](/data/attachment/album/202304/04/090948ij8pf2m2f8r7e2vk.jpg)

**原文链接：** [https://www.theregister.com/2023/03/31/mit_cadr_software_recovered/](https://www.theregister.com/2023/03/31/mit_cadr_software_recovered/)

**GitHub 链接：** [https://github.com/unya/usim](https://github.com/unya/usim)

**本文由 LCTT 原创编译，Linux中国 荣誉推出。**

---

通过优化，文本更加清晰、连贯和专业，结构也更为合理。希望这对你有所帮助！