dictsort 字典排序
dictsortreversed 字典反向排序
divisibleby 整除判断
escape 转义
escapejs 转义js代码
filesizeformat 文件尺寸人性化显示
first 第一个元素
floatformat 浮点数格式化
force_escape 强制立刻转义
get_digit 获取数字
iriencode 转换IRI
join 字符列表链接
last 最后一个
length 长度
length_is 长度等于
linebreaks 行转换
linebreaksbr 行转换
linenumbers 行号
ljust 左对齐
lower 小写
make_list 分割成字符列表
phone2numeric 电话号码
pluralize 复数形式
pprint 调试
random 随机获取
rjust 右对齐
safe 安全确认
6-266
日志学院
safeseq 列表安全确认
slice 切片
slugify 转换成ASCII
stringformat 字符串格式化
striptags 去除HTML中的标签
time 时间格式化
timesince 从何时开始
timeuntil 到何时多久
title 所有单词首字母大写
truncatechars 截断字符
truncatechars_html 截断字符
truncatewords 截断单词
truncatewords_html 截断单词
unordered_list 无序列表
upper 大写
urlencode 转义url
urlize url转成可点击的链接
urlizetrunc urlize的截断方式
wordcount 单词计数
wordwrap 单词包裹
yesno 将True，False和None，映射成字符
串‘yes’，‘no’，‘maybe’
注释
添加注释信息使用，由{#和#}来定义，例：
{# 这是一个注释 #}
也可使用{%comment%}标签，提供多行注释功能。在{%comment%}和{%endcomment%}之间
的内容会被忽略，作为注释。例：
6-267
日志学院
告警模板渲染
我们已经了解模版的各个组件用途及格式，但如何将他们搭配起来使用？如何能在众多变量
中提取出出我们想要的变量呢？可以通过在前台页面对数据进行渲染来查看。
以下面的告警为例，告警基本信息如下图：
6-268
日志学院
选择告警模版，输入{{alert}}点击预览：
由此可见，所有alert字典下的变量信息都被渲染了出来。通常我们只需根据数据的格式，
按层筛选出我们想要的变量信息即可（格式非标准json格式）。通过查看，我们想要的搜
索结果都存于alert.result.hits变量下：
6-269
日志学院
再通过标签或过滤器功能获取我们想要的信息，比如只展示匹配的appname的信息：
通过数据渲染的方法，模版的编写就可以变得更加简便、直观，每次完成一段模版的编写，
可以通过此方法查看是否成功获取到数据，以此来验证模版的准确性。
查看数据格式
有时模版编写完成后，通过渲染查看数据正常，但无法确认模版语言中是否有多余的空格或
者其他非标字符，除了通过日志去排查外，还可以通过网页自带的审查功能去查看，节省我
们定位日志的时间。
在网页上通过右键打开检查。
选择network，点击recoding按钮。
6-270
日志学院
点击界面预览，待渲染完成后，点击检查模块窃取到的请求的preview，查看content，即我
们编写的模版在程序中的格式，以此来检查模版编写的规范性。
模板案例学习
以某农信告警模板为参考，一个完整的模板案例如下：
#XX农信告警模版
{
"Source":"日志分析平台",
"AppName":"{{alert.description}}",
"Node":"",
"NodeAlias":"",
"Component":"日志",
"SubComponent":"日志",
"AlertGroup":"",
"AlertKey":"",
{%spaceless%}
{%ifalert.strategy.name=="count" %} //判断监控类型是否为事件数监控
"Summary":"{{alert.description}}-{{alert.name}}:出现failed或error关键字，共计
{{alert.result.total}} 次",
{%elifalert.strategy.name=="spl_query"%}//判断监控类型是否为spl监控
"Summary":"{{alert.description}}-{{alert.name}}:单笔核查交易超过20000毫秒",
6-271
日志学院
{%endif%}
{%endspaceless%}
{%spaceless%}
{%ifalert.is_alert_recovery%}"Severity":"0",//根据告警级别，发送不同Severity值给集中
监控平台，完成告警级别的对接。
{%elifalert.strategy.trigger.level=="low"%}"Severity":"1",
{%elifalert.strategy.trigger.level=="mid"%}"Severity":"3",
{%elifalert.strategy.trigger.level=="high"%}"Severity":"5",
{%endif%}
{%endspaceless%}
"FirstOccurrence":"{{alert.send_time}}",
"OccurrenceTimes":"1",
"LastOccuTime":"{{alert.send_time}}"
}
告警方式
开启消息通知的情况下，在系统通知栏可以看到告警触发信息:
也可以配置收到告警的方式，日志易默认带有rsyslog告警、邮件告警和告警转发三种模式。
配置时可以测试运行，点击可以实际运行一次告警推送，验证推送配置。
syslog 告警
选择添加syslog告警，用户可以根据实际情况自由更改Syslog地址、协议标准等内容。syslog
内容可参考页面右侧说明。
6-272
日志学院
邮件告警
使用邮件告警，需先配置好发件邮箱。发件邮箱的配置参考本材料9.3小节 邮箱配置部分。
您可以自行设定邮件标题、通知的邮箱地址以及告警邮件内容。系统提供默认的标准告警模
板，屏幕右侧是所有可选择模板变量名称，选择对应的变量名称复制到左侧的内容模板即可，
设定完成后点击保存完成操作。
填写接受邮箱时，您可以直接输入用户分组名称，日志易系统会自动发送给该分组所属的全
部用户邮箱：
6-273
日志学院
在分组内成员变更时，邮件告警收件人会自动变更为最新成员。如下图admin分组删除用
户PI:EMAIL，则该用户不会接受到该告警邮件。如果admin分组增加新用户，
则新用户自动收到该告警邮件。
内容模板
邮件告警采用django模板语言渲染。您可以查看日志易内置的邮件告警内容默认模板进行
酌情修改。
6-274
日志学院
告警转发
添加能接受请求的地址，系统会发送JSON格式的告警内容到该地址。JSON的具体结构与
模板基本相同。
微信公众号告警
日志易支持微信公众号告警。这是初始版本，功能上实现了最基本的绑定和告警发送。以日
志易公众号为例，实现微信公众号告警的步骤如下:
1.关注日志易公众号。
2.进入公众号，在下方输入框中输入“用户绑定”字样，并发送。
3.公众号会自动回复一个链接，点进该链接，跳转进入绑定页面。（注意：该链接只能在微
信中打开，在其他浏览器打开无效。）
4.在绑定页面按需填写内容。
注意:
 绑定时可以填写任意能收到邮件的邮箱，但是日志易系统通过插件发送告警信息时，只
会发送给注册过且操作者有权限查看的用户邮箱。
 目前配置里设置的是:1个微信号只能绑定1个邮箱，且1个邮箱只能绑定一个微信号。
 目前配置10分钟过期，验证码需在10分钟内正确填写，过期需重发邮件。
5.绑定成功后，可以到日志易系统中，上传微信插件。
6.在告警中选择微信插件，填入域名，端口号和绑定的邮箱，点击测试运行，接口发送微信
告警。
域名填写：wx.rizhiyi.com，端口号：80
注意：如果包含未绑定，未注册或没有权限的邮箱，不会向其发送微信告警，不会明确提示，
但日志可查。
7.如果点击保存，将微信插件保存在告警中，则每次告警触发都会向绑定微信发送消息。
8.微信告警消息会在日志易公众号中以消息的形式发送至绑定用户。
如果告警触发，用户可以看到微信公众号推送的告警信息。
6-275
日志学院
分等级推送
日志易监控支持分等级推送。
分等级推送功能要求首先在监控的触发条件中设置触发告警级别。目前告警级别和告警方式
中的发送条件关联，如果没有设置触发级别，则告警方式的发送条件为无。
例如设置触发告警级别如下:
6-276
日志学院
配置邮件告警中的发送条件如下：
则用户只能接受到[中][高]级邮件，不能接受到[低]级邮件。
其他告警方式同理。
告警插件开发
告警配置完成后，可按照客户需要的方式发送告警。日志易默认支持rsyslog告警、邮件告
警和告警转发三种告警方式，同时平台具备开放性，可按照规范编写告警插件将数据推送给
第三方平台，目前日志易告警插件已对接了钉钉、微信、短信等告警平台。
插件约定
插件是一个python2.7版本的脚本，由YottaWeb模块负责调用。其可import的库只有django
和python标准库。日志易约定告警插件需要有一个字典变量和两个函数。
META 变量
告警插件中需定义python字典变量META，是插件与Web界面配置的接口。用户在配置界
面看到的配置项列表，输入的配置项内容的格式，还有最终保存在数据库中的配置项结果，
都由此定义，结构为:
 name：插件名。注意不可与其他插件有重复。
 alias：展示名，在Web界面上下拉菜单选择告警方式时显示的名字
 configs：配置项列表。界面上的所有配置项都是由这个configs数组指定的，显示的顺
序也是这个数组里的顺序。
 name：配置项名字，不可重名
 alias：展示名，在Web界面告警推送配置处显示的此配置项的名字
 presence：Boolean型，是否必填。将用于Web前端操作保存告警推送配置时候的
检查项。
 value_type：此配置项值的类型，当前只支持String。
6-277
日志学院
 value：配置项的值。默认无需填写，在Web界面保存配置后，会自动填写此值。
 default_value：默认值。默认值也会显示在界面上。
 input_type：输入方式类型，用于指定前端在此配置项输入时候采用何种处理。可
选值如下:
 email：含义是用户信息中的电子邮箱，其输入交互会带有下拉选项提示，提
示内容分为用户分组和用户。
 phone：含义是用户信息中的电话号码，其输入交互会带有下拉选项提示，提
示内容分为用户 分组和用户。
 style：配置Web界面上此配置项输入框的大小
 cols：几个字符的宽度
 rows：几个字符的高度
约定函数
告警插件中可以定义三个约定函数，handle、content 和 execute_reply。
handle和content来指定当告警被触发了之后的两类操作。 execute_reply指定当插件在某
次特定告警历史数据上运行的操作。它们的参数是一样的：