武功；学会了编程“易筋经”，大师们可以任意开发操作系统、编译器、甚至是开发一种新的
程序设计语言！
佚名
念书的时候，作为标准的爱好技术的宅男，每天扫一遍各大高校BBS的技术版面，基本好比
一日三餐一样平常。我对计算机技术方面的口味很杂，从汇编版到C++到Linux内核开发、Limux应
用开发、游戏开发、网络、编程语言、体系结构、移动开发、开源闭源我都会参上一脚。
我始终认为技术优劣取决于需求，与很多持有“编程语言血统论”的程序开发者不同，我不认
为C++或Java本身有什么直接可比性，或者OOP与函数式编程谁优谁劣，我始终坚持认为作为开发
者，MOP（Market/Money OrientedProgramming）才是唯一不变的编程范式。于是我往往不参与那些
技术、平台、语言教派之间的宗教战争，这种论战基本上每周都会有，我很佩服论战各方见多识
广、旁征博引、高屋建的论断，但我往往只是灌灌水调节一下思绪，相反，我很关注一些与语
言、平台等相对独立的基本的系统概念方面的问题，这些问题比较具体，也比较实用，比如：
为什么程序是从main开始执行？
“malloc分配的空间是连续的吗？”
“PE/ELF文件里面存的是什么？”
“我想写一个不需要操作系统可以直接在硬件上跑的程序该怎么做？“
“目标文件是什么？链接又是什么？”
“为什么这段程序链接时报错？”
“句柄到底是什么东西？”
这些问题看似很简单但实际上有很多值得深入挖据的地方，比如第一个问题围绕着main函
数执行前后可以延伸出一大堆问题：程序入口、运行库初始化、全局/静态对象构造析构、静态
和动态链接时程序的初始化和装载等，我们把这些问题归结起来，发现主要是三个很大的而且
连贯的主题，那就是“链接、装载与库”。
事实上，现在市面上和网络上能找到的计算机技术方面的书籍和资料中，什么都很齐全，
唯独关于这三个主题的讨论十分稀缺，即使能找到一些也是犹如残缺的典籍，不仅不完整面且
很多已经过时了，关于现在通用的Windows和Linux平台的链接、装载及PE/ELF文件的详细分
析，实在很少见。这个领域中，最为完整、也最为权酸的莫过于JohnR.Levine的《Linkers&
Loaders》，这本书我也前前后后通读了好凡遍，显然它对链接和装载方面的描述较为完整，但是
过于理论化，对于实际的系统机制描述则过于简略。
程序员的自我修养一—链接、装载与库
---
## Page 12
xii
序言三
我始终认为对于一个间题比较好的描述方式，是由一个很小很简单的问题或示例入手，层
入浅出、图文并茂，尽力把每一步细节都呈现给读者。这是我一贯的想法，也是我们在本书中
努力试图达到的效果。
第一次有想写这样一本书的念头是在2006年底，当时我正在念研一，想起未来还有一年多
漫长而又相对空闲的研究生生涯，觉得写一本这样的书大概是比较好的“消遣活动”。于是我
第一时间想到了在微软研究院实习时的导师潘爱民老师，潘老师在写作技术书籍方面有很深的
功底和丰富的经验。我把想法告诉潘老师以后，他十分支持，于是我又找到了当时刚好保送研
究生、时间上也相对充裕的石凡，我们三个都对这个选题十分感兴趣，可谓一拍即合。
当时也没多想，以为写书大概也就跟BBS发帖连载差不多吧。一且写起来才发现自己完全轻
视了写书的工作量。书中的每一个章节、每一个小段、每一个例子甚至每一个用词有时候都要群
酌很久，生怕用得不恰当误导了读者。“误人子弟”这四个字罪名可不轻，大有推出午门新首五
遍以微效尤之过。写书的时间的确很仓促，虽然我们都是在读研时写的，按理说相对于已经工作
的作者来讲，已经是有很多闲余的时间了，但还是经常手忙脚乱。想到以前看书看到作者写的序
里，经常使用“时间仓促，水平有限”的话，推想作者不过是出于谦虚不免要客套一下。现在轮
到自己写序了，终于感觉到了这八个字的分量。即使到现在已近完稿，我们还是心里十分志怎，
因为还有不少地方的确写得不够完善。也听到了很多第一批读者的反馈意见，很多建议都正中这
本书的软助，我们也根据大家的意见又一次进行了修改，这已经是反反复复的第N次修订了。
这本书前前后后花了两年多的时间一直没有完稿，由于截稿时间快到了，我们才终于定
稿，因为实在没有办法做到完美，只能向无限接近完美努力。最后，我们在“著”和“编著”
之间犹豫了很久，想到本书凝骤了我们很多的心血，还是诚诚恐地写上了“著”字，权当给
自已壮胆了，我们也相信，本书虽然没做到完美，但是它一定会给你带来一些你以前想看、想
了解而又找不到的东西。或者以前在编程过程中困感了你很久，但始终没有找到解释的问题，
关于本书的书名笔者们也讨论了很久，征询过很多意见，最终还是决定用“程序员的自我
修养”作为书名，将“链接、装载与库”作为副标题。书名源自于俄罗斯的演员斯坦尼斯拉夫
斯基创作的《演员的自我修养》，作者为了写这本书前前后后修改了三十年之久，临终前才同意
不再修改，拿去出版，使用这个书名一方面是本书的内容的确不是介绍一门新的编程语言或展
示一些实用的编程技术，而是介绍程序运行背后的机制和由来，可以看作是程序员的一种“修
养”：另一方面是向斯坦尼斯拉夫斯基致敬，向他对作品精益求精的精神致敬。
在本书的创作过程中，很多人对我们的支持和帮助难以言表。这里我要感谢博文视点的编
辑何艳、方舟、刘铁锋和陈元玉等，他们为本书付出了很多心血：特别要感谢博文视点的周
老师，这本书能够面世离不开她的支持和努力。另外也要感谢渐江大学的张晓龙博士，他为本
书提出了很多建议，并且贡献了“DLLHELL”一节。
俞甲子
2009年2月于杭州
程序员的自我修养—链接、装载与库
---
## Page 13
导
你将学到什么
本书将详细描述现在流行的 Windows 和 Linux操作系统下各自的可执行文件、目标文
件格式：普通C/C++程序代码如何被编译成目标文件及程序在目标文件中如何存储：目标
文件如何被链接器链接到一起，并且形成可执行文件：目标文件在链接时符号处理、重定
位和地址分配如何进行：可执行文件如何被装载并且执行：可执行文件与进程的虚拟空间
之间如何映射：什么是动态链接，为什么要进行动态链接：Windows 和Linux 如何进行动
态链接及动态链接时的相关问题：什么是堆，什么是栈：函数调用惯例：运行库，Glibc和
MSVCCRT的实现分析：系统调用与API：最后我们自己还实现了一个MiniCRT。
应当真备的基础知识
在本书中，我们尽量避免要求读者有很多的基础知识，但难免有些要求。其中包括对
C/C++编程语言的基本了解、x86汇编语言基础、操作系统基本概念及基本编程技巧和计算
机系统结构的基本概念。
本书的组织
本书分为4大部分，分别如下。
第1部分简介
第1章温故而知新
介绍基本的肾景知识，包括硬件、操作系统、线程等。
第2部分静态链接
第2章编译和链接
介绍编译和链接的基本概念和步骤。
第3章目标文件里有什么
介绍COFF目标文件格式和源代码编译后如何在目标文件中存储。
第4章静态链接
介绍静态链接与静态库链接的过程和步骤
程序员的自我修养一链接、装载与库
---
## Page 14
xiv
导读
第5Windows PE/COFF
介绍Windows平台的目标文件和可执行文件格式。
第3部分装载与动态链接
第6章可执行文件的装载与进程
介绍进程的概念、进程地垃空间的分布和可执行文件映射装载过程，
第7章动态链接
以Linux下的.so共享库为基础详细分析了动态链接的过程
第8章Linux 共享库的组织
介绍Linux下共享库文件的分布和组织。
第9章Windows 下的动态链接
介绍 Windows 系统下 DLL动态链接机制。
第4部分库与运行库
第10章内存
主要介绍堆与栈，堆的分配算法、函数调用栈分等。
第11章运行库
主要介绍运行库的概念、C/C++运行库、Glibc 和MSVC CRT、运行库如何
实现C++全局构造和析构及以fread(）库函数为例对运行库进行剖析。
第12章系统调用与API
主要介绍 Linux和 Windows 的系统调用及Windows 的API
第13章运行库实现
本章主要实现了一个支持堆、基本文件操作、格式化字符串、基本输人输
出、C++new/delete、C++ string、C++全局神选和析构的 Mini CRT。
编译本书的程序
编译本书中所有的示例代码，在Windows平台下可使用 Microsoft Visual C++2005或
2008，操作系统为 Windows XP sp3。读者可以微软的官方网站免费下载Visual C++2008
Express 版:
http://oww.mticrosoft.com/express/oc/
Linux 下使用的 GCC 4.1.2，Id版本为 2.18，Glibc 和 1d-linux.so 的版本为 2.6.1，操作系
统为 Ubanta 7.04:
程序员的自我修养一链接、装载与库
---
## Page 15
联系博文视点
您可以通过如下方式与本书的出版方取得联系。
读者信箱：PI:EMAIL
投稿信箱：PI:EMAIL
北京博文视点资讯有限公司（武汉分部）
湖北省武汉市洪山区吴家湾邮科院路特1号湖北信息产业科技大厦1402室
邮政编码：430074
电
话：027-87690813
传
真：027-87690595
若您希望参加博文视点的有奖读者调查，或对写作和题译感兴睡，欢迎您访问：htp/bp.cdn.nt
关于本书的勘误、资源下载及博文视点的最新书讯，欢迎您访问博文视点官方博客：
hettp:/blog-csdn.met/bobook
程序员的自我修养一链接、装载与库
---
## Page 16
录
第1部分简介
第1章温故而知新
1.1从 Hello World 说起
1.2万变不离其宗
4
1.3站得高，望得远
5
1.4操作系统做什么
8
10
1.4.1不要让CPU 打吨
10
1.4.2设备驱动
.11
1.5内存不够怎么办
14
1.5.1关于隔离
1.5.2分段（Segmentation)
1.5.3分页（Paging)
 15
17
1.6众人拾柴火焰高
19
1.6.1线程基础
19
1.6.2线程安全
24
1.6.3多线程内部情况
30
1.7本章小结
33
第2部分静态链接
第2章编译和链接
认证新题库
.. 37
2.1被隐藏了的过程
2.1.1预编译
XINTIKUCOM
 38
39
2.1.2编泽
40
2.1.3汇编
40
2.1.4链接
. 41
2.2编译器做了什么
41
2.2.1词法分析
42
2.2.2语法分析
2.2.3语义分析
43
44
2.2.4中间语言生成
45
程序员的自我修养——链接、装载与库
---
## Page 17
xvii
目录
2.2.5目标代码生成与优化
47
2.3链接器年龄比编译器长
48
2.4模块拼装—静态链接
50
2.5本章小结，
53
第3章目标文件里有什么
.55
3.1
目标文件的格式
56
3.2目标文件是什么样的
58
3.3挖掘 SimpleSection.o.
61
3.3.1代码段
9
3.3.2数据段和只读数据段.
65
3.3.3BSS 段
66
3.3.4其他段
67
3.4ELF文件结构描述
68
3.4.1文件头