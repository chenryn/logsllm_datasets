I am running Julia in parallel, which involves starting multiple Julia interpreters simultaneously. This process generally works smoothly. However, if a package is outdated, all instances will recompile it.

Recently, I encountered an error that disappeared upon retrying, suggesting a race condition. This issue occurred while using the release branch of Julia 0.4.

Here is the error message:

```plaintext
$ mpirun -np 2 ~/julia/bin/julia 06-cman-transport.jl MPI
INFO: Recompiling stale cache file /Users/eschnett/.julia/lib/v0.4/MPI.ji for module MPI.
INFO: Recompiling stale cache file /Users/eschnett/.julia/lib/v0.4/MPI.ji for module MPI.
ERROR: LoadError: unlink: no such file or directory (ENOENT)
 in unlink at fs.jl:102
 in rm at file.jl:59
 in create_expr_cache at loading.jl:330
 in recompile_stale at loading.jl:461
 in _require_from_serialized at loading.jl:83
 in _require_from_serialized at /Users/eschnett/julia/lib/julia/sys.dylib
 in require at /Users/eschnett/julia/lib/julia/sys.dylib
 in include at /Users/eschnett/julia/lib/julia/sys.dylib
 in include_from_node1 at /Users/eschnett/julia/lib/julia/sys.dylib
 in process_options at /Users/eschnett/julia/lib/julia/sys.dylib
 in _start at /Users/eschnett/julia/lib/julia/sys.dylib
while loading /Users/eschnett/.julia/v0.4/MPI/examples/06-cman-transport.jl, in expression starting on line 1
-------------------------------------------------------
Primary job terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
-------------------------------------------------------
```

In Unix, the standard approach to handle this situation is to write to a temporary file (e.g., `$output.tmp`) and then use an atomic rename operation to update the cache (e.g., `mv("$output.tmp", output)`). Preemptively removing the file is unnecessary and unsafe unless the directory is locked.