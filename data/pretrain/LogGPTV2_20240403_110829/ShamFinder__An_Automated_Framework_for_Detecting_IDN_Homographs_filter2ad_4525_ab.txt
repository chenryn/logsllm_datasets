Hiroaki Suzuki, Daiki Chiba, Yoshiro Yoneya, Tatsuya Mori, and Shigeki Goto
Figure 2: IDN homograph detection scheme for a given TLD.
Left: a domain name is detected as an IDN homograph.
Right: a domain name is not detected as an IDN homograph.
In this example, the TLD part has been removed.
Algorithm 1 Homograph detection algorithm
Ω ⇐ A set of IDNs for a given TLD (TLD part removed)
R ⇐ A set of reference domain names for a given TLD (TLD part removed)
▷ len(x) returns the length of a string x.  
▷ x[i] represents the i-th character of string x.
for r ∈ R do  
Let ω ⊂ Ω be a set s.t. len(r) = len(x) ∀x ∈ ω
for x ∈ ω do
for i = 1; i ≤ len(x); i → i + 1 do
if r[i] = x[i] then next
else if r[i] and x[i] are listed as a pair in the SimChar database then
else
Mark x as not being a homograph of r and skip the loops for the
Mark x as a homograph of r
next
next x
the number of reference websites, number of IDNs, and number of
characters contained in a domain name, respectively. Although this
is a naïve approach, the actual calculation cost has been reduced by
restricting the computation of matching to those pairs of strings
with the same length. The evaluation of the time needed for the
computation appears in Section 4.
3.2 Unicode Characters Sets and IDN
Our primary goal is to compile a database that lists pairs of visually
identical Unicode characters (homoglyphs) that are permitted to be
used for IDN. We explain how we compile this database by begin-
ning with a description of several Unicode character sets. Figure 3
summarizes the contamination and overlap of the Unicode character
sets. The root set is the characters contained in Unicode 12.0.0 [39].
The set contains a total of 137,928 characters, covering 150 scripts,
including modern/historic characters, signs, and symbols such as
Emoticons. Of the character sets defined in Unicode 12.0, the latest
set of characters permitted for the use in IDN is defined in the In-
ternet draft, named draft-faltstrom-unicode12-00 (“IDNA2008 and
Unicode 12.0.0”) [8]. The number of Unicode characters contained
in the IDNA2008 draft is 123,006; these characters are listed in the
section, “Code points in Unicode Character Database (UCD),” of the
draft with the property of “PROTOCOL VALID (PVALID),” which
indicates that the code points with the property value are permitted
for general use in IDNs [10].
In the document named Unicode Technical Standard #39 (UNI-
CODE SECURITY MECHANISMS), a database named “confusables.txt”
452
Figure 3: Contamination and overlap of character sets. UC
denotes the recommended confusable mapping for IDN,
“confusables.txt.”
Table 1: Number of characters contained in each set shown
in Figure 3; IDNA2008 draft (IDNA), Unicode confusables.txt
(UC), and SimChar.
Sets
IDNA
UC
UC ∩ IDNA
SimChar
SimChar ∩ UC
SimChar ∪ (UC ∩ IDNA)
# characters
123,006
9,605
980
12,686
233
13,210
# homoglyph pairs
n/a
6,296
627
13,208
127
13,708
is provided. This text file compiles the confusable mapping for IDN.
In this work, we refer to the database as UC for brevity. The UC
database lists visually confusable characters and provides a map-
ping for visual confusables for use in detecting security problems
such as an IDN homograph attack. Although UC covers a wide
range of homoglyphs that could be abused for IDN homograph
attacks, our empirical observations revealed that a non-negligible
number of homoglyphs are not contained in UC as shown in Ta-
ble 1. This observation motivated us to build a new homoglyph
database, SimChar, which is described in the next subsection. We
note that although UC has been manually maintained, we can build
SimChar in an automated way, implying that it can discover new
homoglyphs from newly registered Unicode characters in future.
Furthermore, as explained in Section 4, homoglyphs contained in
SimChar are more confusing than those contained in UC.
We note that UC covers several characters that are not contained
in the IDNA2008 draft. Of the characters defined in the IDNA2008
draft, 980 characters are listed in UC; i.e., these 980 characters are
potentially abused for IDN homograph attacks. Our contribution
is to build a complementary database named SimChar, which is
compiled of a set of characters that have at least one homoglyph
character from the IDNA2008 draft character set. The new set has
13,210 characters that are also included in UC. It adds 3,605 charac-
ters that have not been listed in UC. Moreover, as seen in Table 3,
SimChar adds 316 homoglyphs of Basic Latin characters that are
not listed in UC. Table 1 summarizes the number of characters con-
tained in the character sets shown in Figure 3. We note that the
ShamFinder framework makes use of the union of two sets UC and
Homoglyph DBgooglegօօglegooglegocaiéoօMatch?referenceIDNreferenceIDN,U+0585U+006FMatch?⇒skip the restHomoglyph DBLatinArmenianUCSimCharUCSimCharUnicode 12.0.0UCIDNA2008 draftSimCharShamFinder
IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Table 2: Number of characters contained in the Unifont12
font set (Figure 4).
Sets
IDNA ∩ Unifont12
UC ∩ Unifont12
SimChar ∩ Unifont121
# Chars
52,457
5,080
12,686
# Pairs
n/a
3,696
13,208
Figure 4: Contamination and overlap of character sets.
U+0079 U+10e7
U+0062 U+0253
U+0061 U+0430
SimChar to find IDN homographs. We also note that a character
could be the homoglyph of several other characters. We count such
pairs as “Homoglyph pairs.” Homoglyphs contained in SimChar are
built from a set of characters contained in IDNA. We notice that
although the number of characters contained in UC is roughly 10K,
if we consider the number of IDNA-permitted characters, the size
becomes much smaller by a factor of 10. The details of SimChar
will be shown later.
U+91cc U+573c
U+bfc8 U+bf58
U+0b32 U+0b33
Figure 5: Examples of Unifont glyph images of Unicode
characters. Top: Basic Latin characters and their homo-
glyphs. Bottom: CJK Unified Ideographs, Hangul syllables,
and Oriya (Indo-Aryan language spoken in the Indian state
of Odisha), and their homoglyphs.
3.3 Building Homoglyph Database
As shown in Fig. 2, we use UC and SimChar as the components of
the homoglyph database we used to detect IDN homographs. The
key idea of SimChar is to extract homoglyphs by computing the
similarity between the glyphs of corresponding characters. We first
need to represent each code point as a visual image (glyph). To this
end, we can make use of various Unicode fonts such as those listed
in [38]. In this work, we adopt GNU Unifont Glyphs [40], which
covers the entire collection of characters contained in the Unicode
Basic Multilingual Plane (BMP) as well as several other charac-
ters of the Supplemental Multilingual Plane (SMP). Although BMP
contains characters for almost all modern languages and a large
number of symbols, SMP contains historic characters and signs as
well as the symbols used in various fields such as Emoticons. Even
though the choice of a font may affect the detected homoglyphs,
the following procedure can easily be extended to other font sets.
We aim to evaluate other fonts in future work.
Figure 4 presents the relationship between the character sets. Of
the characters contained in the IDNA2008 draft, the latest version
of Unifont (Unifont12 for short) covers 52,457 characters. Several
IDN-permitted characters are not covered by Unifont12. However,
as Unifont provides much larger coverage than other proprietary
Unicode fonts such as Microsoft JhengHei, we deem the choice
to be reasonable. In fact, of the 2,990 IDN-permitted characters in
UC, 2,877 characters are covered by Unifont12. Table 2 summarizes
the number of characters contained in the character sets shown
in Figure 4. In the following, we denote UC and SimChar as those
with the union sets of Unifont12 for brevity.
Next, we attempt to identify homoglyphs by testing their simi-
larity as images. The structural similarity index measure (SSIM) is
a widely used metric to quantify the degradation of image quality
caused by processing methods such as data compression or by losses
1Note that SimChar is composed using the union set of IDNA and Unifont12. Therefore,
|SimChar | = | SimChar ∩Unifont12|.
453
in data transmission [16, 45]. Thus, it can also quantify the similar-
ity between a pair of images. However, because our objective is not
assessing the perceptual metric that quantifies image quality degra-
dation, we directly count the number of different pixels between
two images. Let I(i, j) ∈ {0, 1} (0 ≤ i ≤ N − 1, 0 ≤ j ≤ N − 1) be a
square image having N × N pixels, where each pixel is represented
as a binary digit. Our metric, ∆ is computed as
|I1(i, j) − I2(i, j)| .
N−1
N−1
∆ =
i =0
j=0
When ∆ = 0, it indicates that two images are completely identical.
We note that ∆ can be associated with the peak signal-to-noise
ratio (PSNR), which is another widely used metric aimed at quanti-
fying the reproducibility of images [16, 45]. In our model, I(i, j) is
represented as a binary bit. Therefore, the mean square error (MSE)
is computed as
MSE = 1
N 2
{I1(i, j) − I2(i, j)}2 = ∆
N 2 .
N−1
N−1
(cid:18) 1
i =0
j=0
MSE
(cid:19)
Using the MSE, the PSNR is computed as
PSN R = 10 log10
= 20 log10 N − 10 log10 ∆.
In the following, we show the processes we employed to con-
struct the SimChar database.
Step I For the 52,457 characters in the intersection of the IDNA2008
draft and Unifont12, we represent the characters as bitmap
images of 32 × 32 pixels, using the Unifont glyphs. Note
that the original size of Unifont11 is 8 × 8 pixels for Latin
characters and 16× 16 for other characters. Figure 5 presents
the example of the generated Unifont glyph images where
we intentionally chose visually similar pairs.
Step II For all the pairs in the pairwise combinations of the
52,457 characters, we compute the metric ∆. If ∆ is less than
UCIDNA2008 draftSimCharFont set(Unifont12)IMC ’19, October 21–23, 2019, Amsterdam, Netherlands
Hiroaki Suzuki, Daiki Chiba, Yoshiro Yoneya, Tatsuya Mori, and Shigeki Goto
Table 3: Number of homoglyphs of Latin letters (lowercase)
contained in SimChar and UC ∩ IDNA.
Table 4: Top-5 Unicode blocks contained in SimChar (left) and
UC ∩ IDNA (right). CJK, CDM, Hangul, and CA are abbrevia-
tions of the CJK Unified Ideographs, Combining Diacritical
Marks, Hangul Syllables, and Unified Canadian Aboriginal
Syllabics, respectively.
SimChar
Block
Hangul
CJK
CA
Vai
Arabic
#chars
8,787
395
387
134
107
UC ∩ IDNA
Block
CJK
CDM
Arabic
Cyrillic
Thai
#chars
91
56
52
40
36
SimChar
#
14
14
14
13
13
12
10
9
8
‘s’
‘r’
‘a’
‘k’
‘t’
‘z’
‘d’
‘y’
‘b’
‘o’
‘e’
‘n’
‘w’
‘c’
‘l’
‘u’
‘h’
‘i’
#
40
26
24
20
19
18
18
17
16
Total
‘f’
‘m’
‘g’
‘j’
‘p’
‘x’
‘q’
‘v’
351
#
8
8
7
7
7
6
2
1
‘o’
‘l’
‘y’
‘i’
‘u’
‘w’
‘v’
‘s’
‘r’
UC ∩ IDNA
#
#
34