When I try to use children of a component with forwardRef has the next error:
    TS2322: Type '{ children: ReactNode; error: boolean; full: boolean; secondary: boolean; type: "submit" | "reset" | "button"; white: boolean; }' is not assignable to type 'IntrinsicAttributes & BaseButtonInnerProps & RefAttributes'.   Property 'children' does not exist on type 'IntrinsicAttributes & BaseButtonInnerProps & RefAttributes'.
The error is in the types:
    interface ForwardRefRenderFunction {
            (props: PropsWithChildren, ref: ((instance: T | null) => void) | MutableRefObject | null): ReactElement | null;
            displayName?: string;
            // explicit rejected with `never` required due to
            // https://github.com/microsoft/TypeScript/issues/36826
            /**
             * defaultProps are not supported on render functions
             */
            defaultProps?: never;
            /**
             * propTypes are not supported on render functions
             */
            propTypes?: never;
    }
    function forwardRef(render: ForwardRefRenderFunction): ForwardRefExoticComponent & RefAttributes>;
That return a type of a component without children, but is you add the
children in your props with `PropsWithChildren` , exists another problem.
The `ForwardRefRenderFunction` has a duplicate `PropsWithChildren`
**Solution:**
Exists 2 ways to solve this:
  1. Wrap `PropsWithChildren` to `PropsWithoutRef`
  2. Remove `PropsWithChildren` of `ForwardRefRenderFunction` (the user need declare manually the `PropsWithChildren` in their components)
Autors: @johnnyreilly @bbenezech @pzavolinsky @digiguru @ericanderson
@DovydasNavickas @theruther4d @guilhermehubner @ferdaber @jrakotoharisoa
@pascaloliv @Hotell @franklixuefei @Jessidhia @saranshkataria @lukyth @eps1lon
@zieka @dancerphil @dimitropoulos @disjukr @vhfmag @hellatan