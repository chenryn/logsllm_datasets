### 16:00
**(a) Switching-on Events**  
Figure 4: The normalized switching-on, switching-off, and channel switching events (one-minute granularity)

### 4:00
**(b) Switching-off Events**  
Local Time

### 16:00
**(c) Channel Switching Events**  
Local Time

---

### Figure 3: Number of Online STBs
The daily living schedules of most people are reflected in the event rates. More interestingly, we observe that both event rate series are highly bursty, with significant spikes aligning closely with hour or half-hour boundaries (more pronounced in Figure 4b). This is due to the fact that most TV programs are aligned to hour boundaries. Many users may turn on their TVs in anticipation of a program or turn them off after watching a program. This introduces significant correlations among users’ activities, causing very strong bursts in the aggregate event rates.

### 3.2 Channel Switching
We now turn to channel switches. Figure 2 shows the distribution function of the length of channel sessions, which we define as the duration from the time of a user’s last channel switch (or turning on the STB) until the next channel switch (or turning off the STB). We find that this distribution also has a long tail, although not as heavy as those of on- and off-sessions.

Similar to the switching-on and switching-off events, we also examine the aggregate event process for channel switches. Figure 4c shows the time series of such event rates, defined as the total number of channel switches normalized by the number of online STBs. We note that the diurnal pattern in Figure 4c is quite representative of different days. Compared to switching-on/-off event rates, the channel switching events demonstrate even stronger spikes with a period of 30 minutes. This is again due to correlated user activities related to TV program alignment—many users switch channels together when a TV program ends, which may create temporarily high workloads on the IPTV servers.

Next, we gain insight into how IPTV users switch channels. We classify channel switching events into two categories: sequential scanning and target switching. Sequential scanning represents the user in a channel-browsing mode by going through the available channels using the Up/Down button on the remote controller, while target switching represents the user intentionally switching to a specific channel of choice. We assume channel switches between adjacent channels are sequential scanning, and the rest are target switching. To define channel adjacency, we need to infer the list of available channels, which can be quite different from one user to another (e.g., due to different subscription plans). We keep track of all channels that an STB requests over an extended period (e.g., one month) and regard these channels as the complete list.

From the data we collected, we observe that 56% of channel switching events are sequential scanning. This is slightly lower than our expectation. We find that the high ratio of target switching can be attributed to many advanced features that the IPTV provider supports, including a user-customized favorite-channel list, a program menu where users can browse and switch channels by name, and easy access to DVR. All of these help users find the TV program of interest easily and directly. To better understand this effect, we construct a user’s favorite channel list using a heuristic (top-ranked channels by watching time and frequency, e.g., watched in at least 4 days of a week) and find a large portion (46%) of the target switching is toward such "favorite channels." Among sequential scanning, we observe an unbalanced up- and down-channel switches—72% of them are up-channel switches. This implies that more people prefer increasing channel numbers. Our analysis finds the ratio moderately stable over time, although we do not have a clear intuition for why this is the case.

### 3.3 Channel Popularity
We now focus on the properties of different channels. We first rank nearly 700 different channels that appeared in our data using two metrics: (1) the request count, which we call channel access frequency, and (2) the total time STBs stay tuned to the channel, which we call channel dwell time. Figure 5 shows the cumulative distribution function of channel popularity ranked by these two metrics. We find that the distribution of channel dwell time is highly skewed—the top 100 channels account for around 63% of the total channel dwell time. In comparison, the channel access frequency curve is less skewed. This is likely due to the large number of sequential-scanning channel switch events. We observe similar levels of skewness in the distribution of channel popularity when we examine different subsets of our data (such as by different time zones or dates), although the ranking of the channels varies from one subset to another.

Figure 6 shows how the top 10/50/100 popular channels change in the two adjacent hours during a day. The change percentages are averaged over 6-day data. We observe that the channel popularity is relatively stable over the time of day. For example, in Figure 6, among the top 100 channels at 12 PM, less than 20% of them did not belong to the top 100 channels at 1 PM, while more than 80% of them were among the top 100 channels at both time periods. We find that the relative channel popularity changes the most during morning hours but remains moderately stable for most of the day. Figure 7 illustrates an example of the dynamics of channel popularity within a day, in which we compare the normalized numbers of STBs of a top-ranked kids' channel and a top-ranked local news channel against that of the "recorded TV" that people use to watch recorded content (called DVR channel). We observe some interesting time-of-day trends—for example, the local channel peaks in the morning when people catch early news and weather forecasts before going to work; the kids' channel sharply loses popularity after 8 PM when most kids go to bed. In comparison, the DVR channel has the most dramatic change in scale, peaking late into the night. Recent work [15] uncovered the reasons behind this behavior by grouping the whole user population into subgroups according to their preferences. We will integrate this into our workload generator in Section 4.4.

### 4. Modeling User Activities
In this section, we construct mathematical models to capture the observed characteristics of IPTV user activities. We need to model three different user activities—switching-on, switching-off, and channel-switching. For each of them, we match their timing properties in both the session length distribution and the dynamics of the aggregate rate. For channel-switching, we also model channel popularity properties, including popularity distribution and its temporal dynamics. We first present our models and then describe our methods for deriving the parameters of our model from the data traces.

#### 4.1 Modeling Session Length
To capture the long tails exhibited in the empirical session length distributions (Figure 2), we adopt the mixture-exponential model [13] for on-, off-, and channel-sessions. The probability density function (PDF) of a mixture-exponential distribution is:

\[ f(x) = \sum_{i=1}^{n} a_i \lambda_i e^{-\lambda_i x} \]

where \( \frac{1}{\lambda_i} \) is the mean of the i-th exponential distribution in the mixture, and \( \sum_{i=1}^{n} a_i = 1 \). This model has been widely applied due to its simple form and its capability in approximating heavy-tailed distributions over a wide range [13].

To determine the model parameters that best describe the data trace we collected, we apply data fitting for on-, off-, and channel-sessions respectively. In the following, we use channel-sessions as an example, while the procedure for fitting on- and off-sessions is essentially the same. We iteratively explore different values for the number of exponential distributions, \( n \), in the mixture model. For a given \( n \), we apply the Expectation Maximization (EM) algorithm [4] to find the maximum likelihood estimate (MLE) for the parameters \( \lambda_i \) and \( a_i \). For the length distribution of channel-sessions, we identify the best tradeoff at \( n = 3 \), as it achieves a close match to the data while using a small number (i.e., 6) of model parameters. In Table 1, we report the parameter values that fit our trace. The QQ (quantile-quantile) plots in Figure 8 demonstrate good matches between our models and real traces collected.

Looking into the parameters, we gain tremendous insight into the process. For channel-sessions, the different \( \lambda_i \) correspond to Poisson processes with average inter-arrival times of around 30 seconds, 40 minutes, and 5 hours, representing an IPTV user in the state of channel-browsing, TV-program-watching, and being away from the TV, respectively. The likelihood of a user entering these modes is captured by the \( a_i \) values.