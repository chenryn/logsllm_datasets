["资源创建"一节](#ch-clustresources-HAAR.html#s1-resourcecreate-HAAR "资源创建"){.xref}。
[表 9.2
"多状态资源的属性"](#ch-advancedresource-HAAR.html#tb-mastercloneoptions-HAAR "表 9.2. 多状态资源的属性"){.xref}
描述您可以为多状态资源指定的选项。
::: table
[]{#ch-advancedresource-HAAR.html#tb-mastercloneoptions-HAAR}
**表 9.2. 多状态资源的属性**
::: table-contents
+----------------------------------+----------------------------------+
| 项                               | 描述                             |
+==================================+==================================+
| `id`{.literal}                   | 多状态资源的名称                 |
|                                  |                                  |
|                                  | []{#ch-advancedresou             |
|                                  | rce-HAAR.html#idm140680350870320 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680350869216 |
|                                  | .indexterm}                      |
|                                  | []{#ch-advancedresou             |
|                                  | rce-HAAR.html#idm140680355120304 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680375334240 |
|                                  | .indexterm}                      |
+----------------------------------+----------------------------------+
| `优先级`{.l                      | 请参阅 [表 6.3                   |
| iteral},`target-role,`{.literal} | "资源元数据                      |
| `is-managed`{.literal}           | 选项"](#ch-clustresources-HAAR.h |
|                                  | tml#tb-resource-options-HAAR "表 |
|                                  |  6.3. 资源元数据选项"){.xref}。  |
+----------------------------------+----------------------------------+
| `clone-ma                        | 请参阅 [表 9.1                   |
| x`{.literal},`clone-node-max`{.l | "资源克隆选项                    |
| iteral},`notify`{.literal},`glob | "](#ch-advancedresource-HAAR.ht  |
| ally- unique`{.literal},`order`{ | ml#tb-resourcecloneoptions-HAAR  |
| .literal},`interleave`{.literal} | "表 9.1. 资源克隆选项"){.xref}。 |
+----------------------------------+----------------------------------+
| `master-max`{.literal}           | 可以提升资源副本数到             |
|                                  | `master`{.literal} 状态；默认值  |
|                                  | 1。[]{#ch-advancedresou          |
|                                  | rce-HAAR.html#idm140680242945664 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680244056784 |
|                                  | .indexterm}                      |
|                                  | []{#ch-advancedresou             |
|                                  | rce-HAAR.html#idm140680244055840 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680237926912 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680360886016 |
|                                  | .indexterm}                      |
+----------------------------------+----------------------------------+
| `master-node-max`{.literal}      | 在单个节点上可提升资源副本数到   |
|                                  | `master`{.literal} 状态；默认值  |
|                                  | 1。[]{#ch-advancedresou          |
|                                  | rce-HAAR.html#idm140680344123104 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680247623008 |
|                                  | .indexterm}                      |
|                                  | []{#ch-advancedresou             |
|                                  | rce-HAAR.html#idm140680247622064 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680345440784 |
|                                  | .indexterm}[]{#ch-advancedresou  |
|                                  | rce-HAAR.html#idm140680345439680 |
|                                  | .indexterm}                      |
+----------------------------------+----------------------------------+
:::
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#s2-monitoring_multi_state_resources-HAAR}监控多状态资源 {.title}
:::
要仅为 master 资源添加监控操作，您可以在资源中添加额外的 monitor
操作。但请注意，资源中的每个 monitor 操作都必须具有不同的间隔。
以下示例为 `ms_resource`{.literal} 配置一个监控器操作，间隔为 11
秒。除了默认的 monitor 操作外，默认监控间隔为 10 秒。
``` screen
# pcs resource op add ms_resource interval=11s role=Master
```
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#s2-multi_state_constraints-HAAR}多状态约束 {.title}
:::
在大多数情况下，多状态资源在每个活跃的集群节点上都有一个副本。如果情况不同，您可以指定集群使用资源位置约束来优先分配哪些节点。这些限制与常规资源的写法不同。
有关资源位置限制的详情请参考
["位置限制"一节](#ch-resourceconstraints-HAAR.html#s1-locationconstraints-HAAR "位置限制"){.xref}。
您可以创建一个 colocation 约束来指定资源是 master
资源还是从资源。以下命令创建了资源 colocation 约束。
``` screen
pcs constraint colocation add [master|slave] source_resource with [master|slave] target_resource [score] [options]
```
有关 colocation 约束的详情请参考
["资源共存"一节](#ch-resourceconstraints-HAAR.html#s1-colocationconstraints-HAAR "资源共存"){.xref}。
在配置包含 multistate 资源的顺序约束时，您可以为资源指定的一个动作被提升
`，`{.literal} 这表示该资源从 slave 提升到 master。另外，您可以指定
`降级`{.literal} 操作，表示资源从主卷降级到从设备。
配置顺序约束的命令如下。
``` screen
pcs constraint order [action] resource_id then [action] resource_id [options]
```
有关资源顺序限制的详情请参考
["顺序限制"一节](#ch-resourceconstraints-HAAR.html#s1-orderconstraints-HAAR "顺序限制"){.xref}。
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#s2-multi_state_stickiness-HAAR}多状态粘性 {.title}
:::
[]{#ch-advancedresource-HAAR.html#idm140680355196736
.indexterm}[]{#ch-advancedresource-HAAR.html#idm140680344788944
.indexterm}
为实现稳定的分配模式，默认情况下多状态资源会稍微粘性。如果未提供资源
`粘性`{.literal} 值，则多状态资源将使用值
1。作为一个小的值，它会对其他资源分数计算最小，但足以防止 Pacemaker
在集群间不必要地移动副本。
:::
:::
::: section
::: titlepage
# []{#ch-advancedresource-HAAR.html#virtualnoderesource}将虚拟域配置为资源 {.title}
:::
您可以使用 [**pcs resource create**]{.command} 命令将
`libvirt`{.literal} 虚拟化框架管理的虚拟域配置为集群资源，并将
`VirtualDomain`{.literal} 指定为资源类型。
当将虚拟域配置为资源时，请考虑以下事项：
::: itemizedlist
-   在将虚拟域配置为集群资源之前，应停止它。
-   一旦虚拟域是集群资源，除了通过集群工具外，它不应该启动、停止或迁移。
-   不要配置您已配置为集群资源的虚拟域，使其在主机引导时启动。
-   所有节点都必须有权访问每个受管域所需的配置文件和存储设备。
:::
如果您希望集群管理虚拟域本身中的服务，可以将该虚拟域配置为客户机节点。有关配置客户机节点的详情请参考。
["pacemaker_remote
服务"一节](#ch-advancedresource-HAAR.html#pacemaker_remote "pacemaker_remote 服务"){.xref}
有关配置虚拟主机的详情请参考
[虚拟化部署和管理指南](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Deployment_and_Administration_Guide/index.html){.ulink}。
[表 9.3
"虚拟域资源资源选项"](#ch-advancedresource-HAAR.html#tb-virtdomain-options-HAAR "表 9.3. 虚拟域资源资源选项"){.xref}
描述您可以为 `VirtualDomain`{.literal} 资源配置的资源选项。
::: table
[]{#ch-advancedresource-HAAR.html#tb-virtdomain-options-HAAR}
**表 9.3. 虚拟域资源资源选项**
::: table-contents
  项                                          默认值             描述
  ------------------------------------------- ------------------ -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `config`{.literal}                                             （必需）指向此虚拟域的 `libvirt`{.literal} 配置文件的绝对路径。
  `hypervisor`{.literal}                      依赖系统           要连接的虚拟机管理器 URI。您可以通过运行 [**virsh \--quiet uri**]{.command} 命令来确定系统的默认 URI。
  `force_stop`{.literal}                      `0`{.literal}      在停止时总是强制关闭（\"destroy\"）域。默认的行为是仅在安全关闭尝试失败后强制关闭。只有在您的虚拟域（或您的虚拟化后端）不支持安全关闭时，才应将其设置为 `true`{.literal}。
  `migration_transport`{.literal}             依赖系统           迁移时用来连接到远程管理程序的传输。如果省略此参数，资源将使用 `libvirt`{.literal} 的默认传输连接到远程虚拟机监控程序。
  `migration_network_suffix`{.literal}                           使用专用的迁移网络。迁移 URI 由在节点名称末尾添加此参数的值组成。如果节点名称是一个完全限定域名（FQDN），在 FQDN 的第一个句点（.）前插入后缀。确定由此组成的主机名可在本地被解析，相关的 IP 地址可以通过网络被访问。
  `monitor_scripts`{.literal}                                    要额外监控虚拟域中的服务，请使用要监控的脚本列表添加这个参数。[*注意*]{.emphasis} ：当使用监控脚本时，只有所有监控脚本都成功完成时，`启动`{.literal} `和迁移_from`{.literal} 操作才会完成。请确定设置这些操作的超时时间，以适应这个延迟
  `autoset_utilization_cpu`{.literal}         `true`{.literal}   如果设置为 `true`{.literal}，代理将从 `virsh`{.literal} 检测到 `domainU`{.literal} 的`vCPU`{.literal}数，并在执行监控器时将其置于资源的 CPU 使用率中。
  `autoset_utilization_hv_memory`{.literal}   `true`{.literal}   如果设置为 true，代理会从 `virsh`{.literal} 检测到 `Max 内存`{.literal} 数量，并在执行监控时将其置于源的 `hv_memory`{.literal} 使用率中。
  `migrateport`{.literal}                     随机高端口         此端口将在 `qemu`{.literal} 迁移 URI 中使用。如果未设置，则端口将是一个随机高端口。
  `snapshot`{.literal}                                           保存虚拟机镜像的快照目录的路径。设置此参数后，虚拟机的 RAM 状态将在停止后保存到快照目录中的文件。如果启动了某个域的状态文件，域将在最后停止之前恢复到正确的状态。此选项与 `force_stop`{.literal} 选项不兼容。
:::
:::
除了 `VirtualDomain`{.literal} 资源选项外，您还可以配置
`allow-migrate`{.literal} metadata
选项，以允许将资源实时迁移到另一节点。当此选项设为 `true`{.literal}
时，可以迁移资源而不丢失状态。当此选项设为 `false`{.literal}
时（这是默认状态），虚拟域将在第一节点上关闭，然后在第二个节点从节点移动到另一个节点时重新启动。
使用以下步骤创建 `VirtualDomain`{.literal} 资源：
::: orderedlist
1.  要创建 `VirtualDomain`{.literal} 资源代理来管理虚拟机，Pacemaker
    需要将虚拟机的 xml
    配置文件转储到磁盘上的一个文件中。例如，如果您创建了名为
    `guest1`{.literal} 的虚拟机，请将 xml
    转储到主机上的某个位置。您可以使用您选择的文件名；本例使用
    `/etc/pacemaker/guest1.xml`{.filename}。
    ``` screen
    # virsh dumpxml guest1 > /etc/pacemaker/guest1.xml
    ```
2.  如果正在运行，请关闭该客户机节点。Pacemaker
    会在集群中配置时启动节点。
3.  使用 [**pcs resource create**]{.command} 命令配置
    `VirtualDoman`{.literal} 资源。例如，以下命令配置名为 `VM`{.literal}
    的 `VirtualDomain`{.literal} 资源。由于 `allow-migrate`{.literal}
    选项设置为 `true`{.literal}，因此
    `pcs resource move VM nodeX`{.literal}``{=html}``{=html}
    命令将作为实时迁移进行。
    ``` screen
    # pcs resource create VM VirtualDomain config=.../vm.xml \
           migration_transport=ssh meta allow-migrate=true
    ```
:::
:::
::: section
::: titlepage
# []{#ch-advancedresource-HAAR.html#pacemaker_remote}pacemaker_remote 服务 {.title}
:::
`pacemaker_remote`{.literal} 服务允许没有运行 `corosync`{.literal}
的节点集成到集群中，让群集像实际群集节点一样管理其资源。
`pacemaker_remote`{.literal} 服务提供的功能包括：
::: itemizedlist
-   `pacemaker_remote`{.literal} 服务允许您在超过红帽支持 RHEL 7.7 的 32
    个节点支持范围内进行扩展。
-   `pacemaker_remote`{.literal}
    服务允许您将虚拟环境作为集群资源进行管理，还可作为集群资源管理虚拟环境中的单个服务。
:::
以下术语用于描述 `pacemaker_remote`{.literal} 服务：
::: itemizedlist
-   [*群集节点 -*]{.emphasis} 运行高可用性服务（`pacemaker 和`{.literal}
    `corosync`{.literal}）的节点。
-   [*远程节点*]{.emphasis} - 运行
    `pacemaker_remote 的节点`{.literal}，用于远程集成到集群中，无需
    `corosync`{.literal} 群集成员资格。远程节点被配置为使用
    `ocf:pacemaker:remote`{.literal} 资源代理的集群资源。
-   [*客户机节点*]{.emphasis} - 运行 `pacemaker_remote`{.literal}
    服务的虚拟客户机节点。虚拟客体资源由集群管理，它由集群启动，并作为远程节点集成到集群中。
-   [*pacemaker_remote*]{.emphasis} - 在一个可以在 Pacemaker
    集群环境中的远程节点和客户机节点（KVM 和
    LXC）内执行远程应用程序管理的服务守护进程。这个服务是 Pacemaker
    的本地资源管理守护进程(LRMD)的改进版本，它可以在没有运行 corosync
    的节点上远程管理资源。
-   [*LXC*]{.emphasis} - 由 `libvirt-lxc`{.literal} Linux
    容器驱动程序定义的 Linux 容器。
:::
运行 `pacemaker_remote 服务的`{.literal} Pacemaker 集群具有以下特征：
::: itemizedlist
-   远程节点和客户机节点运行 `pacemaker_remote`{.literal}
    服务（虚拟机上不需要的配置）。
-   在群集节点上运行的群集堆栈（`pacemaker`{.literal} 和
    `corosync`{.literal}）连接到远程节点上的
    `pacemaker_remote`{.literal} 服务，允许它们集成到群集中。
-   在群集节点上运行的群集堆栈（`pacemaker 和`{.literal}
    `corosync`{.literal}）可启动客户机节点，并立即连接到客户机节点上的
    `pacemaker_remote`{.literal} 服务，允许它们集成到群集中。
:::
集群节点与集群节点管理的远程和客户机节点之间的关键区别在于远程和客户机节点没有运行集群堆栈。这意味着远程和虚拟机节点有以下限制：
::: itemizedlist
-   它们不会在仲裁里进行
-   它们不执行隔离设备操作
-   他们没有有资格成为集群的指定控制器(DC)
-   它们本身不运行完整的 [**pcs**]{.command} 命令
:::
另外，远程节点和客户机节点不与与集群堆栈关联的可扩展性限制绑定。
除这些限制外，远程和客户机节点的行为与集群节点在资源管理方面的行为类似，且远程和虚拟机节点本身也可被保护。集群完全能够在每个远程和客户机节点上管理和监控资源：您可以针对它们构建限制，将它们置于待机状态，或使用
[**pcs**]{.command}
命令在群集节点上执行任何其他操作。远程和虚拟机节点如集群节点一样显示在集群状态输出中。
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#pacemakerremote_authentication}主机和客户机身份验证 {.title}
:::
集群节点与 pacemaker_remote
之间的连接是使用传输层安全（TLS）进行安全保护，使用预共享密钥（PSK）加密和验证
TCP（默认使用端口 3121）进行验证。这意味着集群节点和运行
`pacemaker_remote 的节点`{.literal}
必须共享相同的私钥。默认情况下，此密钥必须放在集群节点和远程节点上的
`/etc/pacemaker/authkey`{.filename} 中。
从红帽企业 Linux 7.4 开始，pcs [**cluster node add-guest**]{.command}
命令为客户机节点设置 `authkey`{.filename}，而 [**pcs cluster node
add-remote**]{.command} 命令可为远程节点设置 `authkey`{.filename}。
:::
::: section
::: titlepage
## []{#ch-advancedresource-HAAR.html#guest_node_options}客户机节点资源选项 {.title}