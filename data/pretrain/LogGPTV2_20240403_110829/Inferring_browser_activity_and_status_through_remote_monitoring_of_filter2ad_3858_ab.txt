tack.com becomes a background tab, it starts to continuously
record changes in storage footprint size.
5. The victim web browser fetches the resources of Site.com and
stores them in the browser cache.
6. The script sends the change log of storage footprint size to
Attack.com. The attacker can infer that the web page the
victim has visited is Site.com by comparing the change log of
storage footprint size with the database.
Figure 4 describes a monitoring script to record a change log of
storage footprint size. At Lines 1–7, the script declares an event
handler of the Page Visibility API [30] to recognize whether a
victim visits another web site or stays in an attack web site. When
the victim visits another web site via a new tab, the tab of the
attack web site becomes invisible and the script starts to recursively
call queryStorageState() to log the changes in the size of storage
footprints.
3.3
Identifying Non-cached Web Sites
We ﬁrst consider the cross-tab activity inference attack against
web sites a victim web browser has not recently visited (i.e., not
cached or cold). Assuming non-cached web sites increases the
inference accuracy of our attack because a web browser has to fetch
their entire resources and store them into the local storage.
3.3.1 Data collection
We prepared attack databases by collecting storage footprints of
candidate web sites a victim web browser highly likely visits on
412
Linux
Ubuntu 12.04 Windows 7 Android 4.0
OS
Web browser Chromium 34 Chrome 34 Chrome 34
Windows
Android
Table 1: Experiment environment.
Algorithm 1 Matching algorithm
Input: A storage footprint database D, a victim’s storage footprint
fv
Output: the inferred web page
dmin ← ∞ // the minimum distance
pc ← none
for each page p in D do
// a candidate page
for each storage footprint fp of p in D do
// compute a distance
d = OSB(fv, fp)
if d < dmin then
dmin ← d
pc ← p
return pc
Inference accuracy
three different target platforms with Linux, Windows, and Android
(Table 1). The data collection procedure for each front page of
Alexa Top 100 web sites is as follows. First, using a Chrome web
browser, we visit our attack page and then open one of the front
page via a new tab. Second, we monitor temporal changes in storage
footprint size for one minute (because we cannot know for sure when
page loading ﬁnishes.) Third, we send the change log to our attack
server. Lastly, we clear the browser cache for later experiments. We
repeat this procedure 10 times for each front page on each platform
and regard the 1000 change logs of storage footprint size per each
platform as attack databases. The average size of storage footprints
is approximately 3 KiB. Note that we use Chrome’s default browser
settings when collecting data, namely, we do not modify any settings
such as cache size and privacy settings.
3.3.2
To evaluate the inference accuracy of our cross-tab activity in-
ference attack against non-cached web sites, we visited each front
page of Alexa Top 100 web sites 10 times on each platform, and
compared their storage footprints with the attack databases by using
Algorithm 1. As shown in Figure 5, Linux achieves the highest
inference accuracy among the three platforms (97.3%) whereas Win-
dows achieves the lowest inference accuracy (86.3%). We presume
that background disk activity (§3.3.3) and wireless network (§3.3.4)
make Windows and Android have lower inference accuracy than
that of Linux, respectively.
3.3.3 Background disk activity
We anticipate that the lower inference accuracy of our attack on
Windows than on Linux and Android is due to frequent background
disk activity of Windows. Frequent disk activity (speciﬁcally, writ-
ing activity) can spoil our cross-tab activity inference attack because
it monitors available storage space size. We measured background
disk activity of the three operating systems by monitoring their stor-
age footprints and compared them in terms of idle period where no
changes in storage footprint size are observed. Figure 6 shows idle
period statistics of the three operating systems. The average idle
periods of Android, Linux, and Windows are 67 s, 22.5 s, and 1.5 s,
respectively. From these results, we conclude that change logs of
storage footprint size derived from Windows contain a large amount
of noise.
413
)
%
(
y
c
a
r
u
c
c
a
e
c
n
e
r
e
f
n
I
100
80
60
40
20
0
97.3
93.0
86.3
Linux
Android
Windows
Figure 5: Inference accuracy of cross-tab activity inference attacks against
victim web browsers that visit the front pages of Alexa Top 100 sites on
Linux (LAN), Android (Wi-Fi), and Windows (LAN). Error bars represent
95% conﬁdence intervals. An attack against Linux showed the best accuracy.
)
s
(
d
o
i
r
e
p
e
d
i
e
g
a
r
e
v
A
l
100
80
60
40
20
0
67.0
22.5
Android
Linux
1.5
Windows
Figure 6: Statistics of idle periods that the size of storage footprints main-
tains in each OS during one hour. Windows suffered from frequent back-
ground disk activity.
To exclude the effects of background disk activity, we changed
the location of the Chrome browser cache to a separate disk and eval-
uated the inference accuracy of cross-tab activity inference attacks
against Alexa Top 100 web sites. We used a Chrome command line
switch –disk-cache-dir for this experiment. We observe that the
inference accuracy on Windows increases by 1.06× when we use
the separate disk cache whereas Linux has no beneﬁt (Figure 7).
Therefore, the low inference accuracy of cross-tab activity inference
attacks on Windows is due to heavy background disk activity.
3.3.4 Wireless network
We think the reason of the lower inference accuracy of our attack
on Android than Linux is different network condition: Wi-Fi versus
LAN. Network condition can affect the inference accuracy of our
attack on Android because it usually uses Wi-Fi or cellular network
whose network latency is less stable than that of a wired LAN. To
analyze how network condition affects the inference accuracy of
our cross-tab activity inference attack, we conducted our attack on
Wi-Fi and LAN. Figure 8 shows the inference accuracy of our attack
when visiting the front web pages of Alexa Top 100 web sites. The
inference accuracy of our attack on Wi-Fi are 1.03×–1.05× lower
than on LAN. Thus, we conclude that the bad network condition
makes the inference accuracy on Android worse than that on Linux.
3.3.5 Early inference
The evaluation on the cross-tab activity inference attack explained
so far has a shortcoming: it monitors changes in storage footprint
size for one minute, but attackers cannot guarantee that a victim
stays in a web page for more than one minute. To analyze how
fast our attack can infer a web page visited by a victim, we varied
monitoring time from 3 s to 60 s when attacking Alexa Top 100
web sites. As shown in Figure 9, when we monitor storage footprint
size changes for approximately 5 s on Linux and Windows and for
approximately 10 s on Android, the inference accuracy of our attack
)
%
(
y
c
a
r
u
c
c
a
e
c
n
e
r
e
f
n
I
100
80
60
40
20
0
Normal
Separate disk cache
97.0
95.0
91.8
86.8
Linux
Windows
Figure 7: Inference accuracy of cross-tab activity inference with separate
disk cache to ignore background disk activity. The separate disk cache
increased the inference accuracy on Windows; namely, Windows suffered
from the background disk activity.
)
%
(
y
c
a
r
u
c
c
a
e
c
n
e
r
e
f
n
I
100
80
60
40
20
0
LAN
Wi-Fi
97.0
92.8
95.8
92.3
86.8
84.5
Linux
Android Windows
Figure 8: Accuracy of cross-tab activity inference attacks in wired and
Wi-Fi networks. Using Wi-Fi slightly decreased the inference accuracy.
becomes around 90%. Thus, when conducting cross-tab activity
inference attacks, attackers only need to assume a victim who stays
in an attack page for more than 10 s.
Interestingly, on Windows, we observe the highest inference
accuracy (89%) when monitoring storage footprint size changes
for 20 s and decrease of inference accuracy as monitoring time
increases (Figure 9). Windows has frequent background disk activity
as explained in §3.3.3, so prolonging a monitoring period decreases
the inference accuracy.
3.4
Identifying Web Sites Visited via Tor
Internet users can use an anonymity network (e.g., Tor [42]) to
protect their privacy. If a victim uses an anonymity network when
visiting web sites, the accuracy of our cross-tab activity inference at-
tacks would decrease because of long and unstable network latency.
To evaluate how an anonymity network affects the accuracy of our
cross-tab activity inference attack, we conducted our attack against
web sites visited through Tor. We adjusted the MaxCircuitDirtiness
option of Tor to change a virtual circuit whenever we visit a web site.
Figure 10 shows the inference accuracy of our attack when visiting
the front web pages of Alexa Top 100 web sites. The inference
accuracy of our attack on Linux and Windows is 80.3% and 73.0%,
respectively.
We analyze why our cross-tab activity inference attack in a Tor
network shows lower inference accuracy than that in a normal net-
work, and ﬁgure out two reasons. First, Tor can change the geo-
graphical location of a victim web browser (an IP address belongs
to a different country.) Many web sites customize their content ac-
cording to the country information of visitors, so storage footprints
of the browser can be completely changed even when it visits the
same web site. To overcome it, an attacker should prepare a huge
storage footprint database that covers a large number of countries.
Second, we identify that a web browser on Tor occasionally cannot
414
100
90
80
70
60
)
%
(
y
c
a
r
u
c
c
a
e
c
n
e
r
e
f
n
I
Linux
Windows
Android
0
10
20
30
40
50
60
Time (s)
Figure 9: Accuracy of cross-tab activity inference attacks according to the
length of monitoring time window. In Linux and Android, the inference
accuracy became better as the length of monitoring time window increased,
but, in Windows, the inference accuracy became worse due to the background
disk activity.
)
%
(
y
c
a
r
u
c
c
a
e
c
n
e
r
e
f
n
I
100
80
60
40
20