### 5.2 Non-Repudiation

Non-repudiation is a critical security service required for advanced e-commerce transactions. It ensures that a user cannot deny the authenticity of a transaction, typically by binding the user's signing key to their identity through client-side certificates. The process of generating signing keys and issuing user certificates must be secure, often regulated by country-specific legislation, to prevent repudiation of the keys, certificate, or signature used in a transaction.

To support non-repudiation, the WAP browser on a WAP device provides a WMLScript function called `Crypto.signText()`. This function is similar to JavaScript/Java functions in the Internet environment and requires the user to sign a string of text. When `signText()` is called, it displays the text to be signed and asks for user confirmation. Some implementations may require the user to enter additional data simultaneously, while others will send the information to a server, which then returns a `signText` call. After the data is signed and both the signature and the data are transmitted over the network, the server can extract and validate the digital signature for accountability purposes.

Current iMode implementations do not support non-repudiation. However, once DoCoMo and iMode enable client-side certificates and client-side authentication, non-repudiation should be achievable.

### 5.3 The Security Gap

A security gap occurs when a secure session is prematurely terminated, leading to potential vulnerabilities. For example, consider an end-to-end secure application using SSL between components A and B, passing through component Z (see Figure 8). If the SSL session is broken at component Z and re-established between Z and B, this results in two separate secure sessions: one between A and Z, and another between Z and B. While the message remains secure on the network, it is in an insecure state on component Z.

The risks associated with this situation can be mitigated if components Z and B are within a secure system, ensuring no security gap exists. Another mitigation strategy is to provide integrity protection, such as using digital signatures, allowing the back-end system (component B) to detect any modifications made by component Z during the security gap.

**Figure 8: Security “Gap”**
```
Secure E2E Communication
Network
Network
Network
Component A
Component Z
Component B
```

A WAP Gateway introduces an encryption gap because the WTLS session only exists between the WAP device and the Gateway (components A and Z in Figure 8). In a secure architecture, an SSL session is then established between the Gateway and the back-end. One way to mitigate this problem is to place the WAP Gateway within the enterprise premises (see Section 2.2 for more details).

The WAP Forum has adopted the Transport Layer E2E (end-to-end) Security Specification [12] to address this issue. The specification works as follows (see Figure 9):

1. The WAP client attempts to send a request through its default Gateway to a secure domain.
2. The secure content server determines that the request must pass through the WAP Gateway in its domain and returns an HTTP redirect message.
3. The default Gateway validates the redirect and transmits it to the client.
4. The client caches the new connection and sends transactions destined for the secure domain to the subordinate WAP Gateway.
5. After the connection is terminated, the default Gateway is re-selected.

**Figure 9: WAP End-to-End Security**
```
WAP Service Provider
Default
WAP GW
Subordinate
WAP GW
Web
Server
Application Server
Enterprise
```

The WTLS specification is sound from a security perspective. Unfortunately, WTLS is optional for WAP standard compliance, and many current WAP phones do not support it, relying instead on underlying communication services like GSM security, which stops at the RAS, for protection.

Most available WTLS implementations in mobile devices only provide Class 1 security, which is insufficient for secure e-commerce transactions and is not used by e-commerce providers. WTLS Class 2 conformant WAP devices are available but do not support client-side certificates, making non-repudiation based on signing impossible. These devices do not allow out-of-economy transactions like bill paying or transfers to another account.

The best security provided by WAP requires WTLS Class 3. It is anticipated that WTLS Class 3 compliant WAP devices will be generally available by the end of 2001. Several phone manufacturers, such as Motorola and Nokia, have announced trial implementations of limited-run, special production, WTLS Class 3 conformant devices. Limited production runs of WTLS Class 3 phones have been introduced but are not yet widely available. When these devices become available, many banking institutions are expected to enhance their wireless e-commerce services to include out-of-economy services.

iMode security is based on the same principles as Internet security (provided by SSL/TLS). Current iMode implementations provide server-side authenticated SSL sessions, equivalent to the security offered in the wired environment. Although DoCoMo has claimed that the introduction of client-side certificates is part of future work, there are no indications of when this capability will be available.

WAP suffers from the "security gap" problem, with the WTLS protocol being broken at the WAP Gateway. By placing the WAP Gateway within the control of the enterprise, the risks introduced by this gap can be mitigated.

In the Internet world, certificates and keys can have different strengths depending on how they were generated. Non-repudiation and digital signatures require users to download and install a browser plug-in or Java applet. Key and certificate strength equivalent to that implemented with the WAP specification requires a smart card reader and smart card.

### 7. Conclusion

The security achievable for WAP or iMode-enabled transactions is at least equal to that of current Internet browser-based transactions. WAP appears to be ahead in terms of specifications, using public-private key pairs hardcoded on the WIM, the ease-of-use of client-side certificates, and the built-in `Crypto.signText` function. All client-side public-private key pairs are generated in a known, secure manner. Through the adoption of the WIM module, a more reliable form of authentication (public key and smart card) is possible. Because the process of key and certificate generation is controlled and known, WAP can claim non-repudiation at a level not generally possible in the Internet world.

Whether WAP or iMode will be a great success should not depend on security issues. Remaining factors such as usability and openness will determine the global adoption of WAP and/or iMode [16].

### 8. References

1. D. Denning, *Information Warfare and Security*, P163-183, Addison-Wesley Publishers, 1999.
2. The WAP Forum, <http://www.wapforum.org>
3. P. Ashley and M. Vandenwauver, *Practical Intranet Security – An Overview of the State of the Art and Available Technologies*, Kluwer Academic Publishers, 1999.
4. W. Stevens, *TCP/IP Illustrated Volume 1: The Protocols*, Addison-Wesley Professional Computing Series, 1994.
5. GSM Association, <http://www.gsmworld.com>
6. Wireless Application Protocol Wireless Transport Layer Security Specification (WTLS), <http://www1.wapforum.org/tech/documents/WAP-199-WTLS-20000218-a.pdf>
7. T. Dierks, C. Allen, *The TLS Protocol – Version 1.0*, RFC 2246, 1999.
8. J. Menezes, P.C. van Oorschot, and S.A. Vanstone, *Handbook of Applied Cryptography*, CRC Press, 1997.
9. Nokia, KPN Mobile and Interpay Test Mobile Commerce Solution, <http://press.nokia.com/PR/200104/816440_5.html>
10. Wireless Application Protocol Identity Module Specification, <http://www1.wapforum.org/tech/documents/WAP-198-WIM-20000218-a.pdf>
11. Wireless Application Protocol WMLScript Crypto Library Specification, <http://www1.wapforum.org/tech/documents/WAP-161-WMLScriptCrypto-19991105-a.pdf>
12. WAP TM Transport Layer E2E Security Specification, <http://www1.wapforum.org/tech/documents/WAP-187-TransportE2ESec-20000711-a.pdf>
13. All About iMode Index, NTT DoCoMo, <http://www.nttdocomo.com/i/index.html>
14. Dankse Bank, Denmark, <www.danskebank.dk>
15. Satomi Okazaki, Atsushi Takeshita, Yiqun Lisa Yin, *New Trends in Mobile Phone Security*, presentation given at RSA 2001
16. Batista, Elisa, “WAP or I-Mode: Which Is Better?”, at Wired.com, <http://www.wired.com/news/wireless/0,1382,38333,00.html>
17. John Schramm, *Security Issues in WAP and I-Mode*, SANS Institute, SANS Information Security Reading Room, December 2, 2000, <http://www.sans.org/infosecFAQ/wireless/WAP4.htm>
18. “The unofficial independent iMode FAQ”, Eurotechnology.com, <http://www.eurotechnology.com/imode/faq.html>, Eurotechnology Consulting Web Site
19. “DoCoMo’s iMode: Toward Mobile Multimedia in 3G”, presentation given at March 2000 IETF Meeting, IETF 47, Plenary Session, <http://www.ietf.org/proceedings/00mar/slides/plenary-imode-00mar/sld002.htm>
20. NTT DoCoMo Technology Site, Mobile Computing and Imode, <http://www.nttdocomo.co.jp/corporate/rd/tech_e/mobi01_e.html>
21. Association of Radio Industries and Business, <http://www.arib.or.jp/index_English.html> (English index)

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.