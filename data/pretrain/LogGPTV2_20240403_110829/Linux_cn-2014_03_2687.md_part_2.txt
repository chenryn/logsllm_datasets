#### 5. 创建文件的符号链接
也有一种链接叫做 **软链接** 或 **符号链接**。我们用 **-s** 选项来实现。下面是命令的示例。
```
$ cp -s /home/pungki/Documents/file_6.txt file_6.txt
```
创建符号链接只能在当前目录下进行。在上面的截图中，我们想要创建符号链接 **/home/pungki/office/file*6.txt 指向原文件 /home/pungki/Documents/file*6.txt**。但是为了创建符号链接，**我必须**在将/home/pungki/office作为目标目录。一旦我设法进入目录，我就可以向上面一样运行 cp **-s** 命令。
现在你列出文件详情，你会看到**/home/pungki/office/file\_6.txt**指向了原文件。在其文件名后标记了箭头符号。
![Symbolic links](/data/attachment/album/201403/14/134426jleo1t1qilcir9co.png)
#### 6. 不随符号链接拷贝原文件
[译注:意思是只拷贝符号链接文件]
我们可以用 **-P** 选项来实现。当对符号链接使用 cp 命令，它会照原样拷贝它自身。来看看下面的示例。
```
$ cp -P file_6.txt ./movie
```
![Copy using -P option](/data/attachment/album/201403/14/134427vj45yokyzpomouml.png)
如你所见，cp 命令照原样拷贝**file\_6.txt**自身。文件类型仍然是一个符号链接。
#### 7. 随符号链接拷贝原文件
现在我们可以试一下**-L**选项。基本上，这个刚好与上面的 -P 选项 **相反**。下面是个示例：
```
$ cp -L file_6.txt ./movie
```
![Copy using -L option](/data/attachment/album/201403/14/134429if2uljlmfhiu22hv.png)
使用这个选项，拷贝的文件将会和**file\_6.txt**原文件一样。我们可以从文件大小看出来。拷贝的文件有**50 字节**而当**file\_6.txt**作为符号链接时文件大小只有**33 字节**。
#### 8. 文件归档
当我们去拷贝一个目录时，我们会用**-r**或者**-R**选项。但是我们也可以用**-a**选项来归档文件。这样会创建文件和目录的**准确套录**，如果有的话也可以包括符号链接。下面是示例：[译注：-a 会保留原文件或目录的属性]
```
$ cp -a directory_1/ /home/pungki/office
```
![Copy using -a option](/data/attachment/album/201403/14/134431ci32ucq23jq7xuuk.png)
上列的命令会拷贝一个名为 directory*1 的目录到**/home/pungki/office**目录下。如你所见，\*\*file*6.txt\*\*依然作为符号链接被复制。
#### 9. 显示正在做什么
默认情况下，当拷贝作业成功时，我们仅仅会再次看到命令提示符。如果你想了解在拷贝文件时都发生了什么，我们可以用 **-v** 选项。
```
$ cp -v *.txt /home/pungki/office
```
![Verbose option](/data/attachment/album/201403/14/134432exttmzqqtuj3suuj.png)
当我们从当前目录下拷贝所有的 txt 文件到 **/home/pungki/office** 目录，**-v**选项会显示正在操作的过程。这些额外的信息会帮助我们了解更多拷贝过程。
#### 10. 当原文件较目标文件新时拷贝
我们用 **-u**选项来实现。下面是具体示例:
```
$ cp -vu *.txt /home/pungki/office
```
![Copy only if newer](/data/attachment/album/201403/14/134434kevx0xjxzxghvhvj.png)
起初我们看到**file\_1.txt 是0字节**大小。然后我们用 vi 编辑，加入一些内容并保存。接下来，我们发现文件大小已经变为了 36 个字节。 与此同时在**/home/pungki/office**目录中，我们**已经包含了所有**txt文件。当我们用 -u 选项，结合 -v 选项来查看具体操作，cp 命令会只拷贝比目标目录下新的文件。因此，我们看到**只有 file\_1.txt 拷贝到 /home/pungki/office 目录下**。
#### 11. 使用交互模式
交互模式下会询问是否覆盖目标目录下的文件。使用 **-i** 选项，启用交互模式。
```
$ cp -ir directory_1/ /home/pungki/office/
```
![Interactive mode](/data/attachment/album/201403/14/134435aehpen99bb2h9n2t.png)
#### 12. 创建备份文件
当目标目录已经含有同名文件，默认情况下 cp 命令会覆盖目标目录下的同名文件。使用 **--backup** 选项，cp 命令会为每一个现有的目标文件做一个备份。../office 相对于 /home/pungki/office 。下面是示例：
```
$ cp --backup=simple -v *.txt ../office
```
![Backup option](/data/attachment/album/201403/14/134437v8in6agvggvj5g5a.png)
正如我们看到的，**--backup=simple** 选项会创建一个在文件名末尾用波浪符标记(~)的备份文件。**--backup** 选项也有一些其他控制：
* **none, off**:从不备份(即使给出 --backup)
* **numbered, t**:用编号备份
* **existing, nil** :如果编号备份存在则使用编号备份，否者用简易备份[译注：也就是用波浪号]
* **simple, never** :总是使用简易备份
#### 13. 只拷贝文件属性
cp 命令也提供给我们 **--attributes-only** 选项。顾名思义，这个选项只会拷贝文件名及其属性，不会拷贝任何数据。下面是示例：
```
$ cp --attributes-only file_6.txt -v ../office
```
![Copy attributes only](/data/attachment/album/201403/14/134438ogs0axr0dmm3mmrs.png)
从上图看出， **原文件 file\_6.txt 有 50 字节**大小。用了 **--attributes-only**选项，**拷贝的文件只有0字节**大小。这是因为文件内容并没有拷贝。
#### 14. 强制拷贝
用了 **-f** 选项会强制进行拷贝操作。如果目标文件不能打开，可以用 **-f** 尝试一下。
```
$ cp -f *.txt -v ../office
```
![Copy with force](/data/attachment/album/201403/14/134439t0vfjz7f6d6rdz6n.png)
#### 15. 在拷贝之前先删除目标
我们可以用，**--remove-destination 选项** 实现。这个选项与上面的**-f选项形成对照**。如果 cp 命令在目标目录下发现同名文件， cp 命令会先删除目标文件，然后再拷贝一份新的。下面是示例：
```
$ cp --remove-destination *.txt -v ../office
```
![Remove destination option](/data/attachment/album/201403/14/134441l48hle33tf1f4z26.png)
### 总结
cp 命令是 Linux 下最基础的命令之一。对于那些想要学习 Linux 的人，必须得把这个命令掌握。当然你也可以在你的终端下键入 **man cp** 或者 **cp --help** 来显示更多帮助信息。
---
via: 
译者：[Luoxcat](https://github.com/Luoxcat) 校对：[Mr小眼儿](http://blog.csdn.net/tinyeyeser)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出