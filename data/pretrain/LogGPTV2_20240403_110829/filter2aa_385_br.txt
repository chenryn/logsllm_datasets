implantbinary.
Additionally,considerrevisingthenamingschemeforyour
sourcecodelocations.Whenyoubuildyourbinaryfile,the
filewillincludepackagepaths.Descriptivepathnamesmay
leadincidentrespondersbacktoyou.Further,whenbuilding
yourbinary,considerremovingdebugginginformation.This
hastheaddedbenefitofmakingyourbinarysizesmallerand
moredifficulttodisassemble.Thefollowingcommandcan
achievethis:
$gobuild-ldflags="-s-w"implant/implant.go
Theseflagsarepassedtothelinkertoremovedebugging
informationandstripthebinary.
AddASCIIArt
Yourimplementationcouldbeahotmess,butifithasASCII
art,it’slegitimate.Okay,we’renotseriousaboutthat.But
everysecuritytoolseemstohaveASCIIartforsomereason,
somaybeyoushouldaddittoyours.Greetzoptional.
SUMMARY
Goisagreatlanguageforwritingcross-platformimplants,
liketheRATyoubuiltinthischapter.Creatingtheimplant
waslikelythemostdifficultpartofthisproject,becauseusing
Gotointeractwiththeunderlyingoperatingsystemcanbe
challengingcomparedtolanguagesdesignedfortheoperating
systemAPI,suchasC#andtheWindowsAPI.Additionally,
becauseGobuildstoastaticallycompiledbinary,implants
mayresultinalargebinarysize,whichmayaddsome
restrictionsondelivery.
Butforbackendservices,thereissimplynothingbetter.
Oneoftheauthorsofthisbook(Tom)hasanongoingbetwith
anotherauthor(Dan)thatifheeverswitchesfromusingGo
forbackendservicesandgeneralutility,he’llhavetopay
$10,000.Thereisnosignofhimswitchinganytimesoon
(althoughElixirlookscool).Usingallthetechniques
describedinthisbook,youshouldhaveasolidfoundationto
startbuildingsomerobustframeworksandutilities.
Wehopeyouenjoyedreadingthisbookandparticipating
intheexercisesasmuchaswedidwritingit.Weencourage
youtokeepwritingGoandusetheskillslearnedinthisbook
tobuildsmallutilitiesthatenhanceorreplaceyourcurrent
tasks.Then,asyougainexperience,startworkingonlarger
codebasesandbuildsomeawesomeprojects.Tocontinue
growingyourskills,lookatsomeofthemorepopularlarge
Goprojects,particularlyfromlargeorganizations.Watchtalks
fromconferences,suchasGopherCon,thatcanguideyou
throughmoreadvancedtopics,andhavediscussionsonpitfalls
andwaystoenhanceyourprogramming.Mostimportantly,
havefun—andifyoubuildsomethingneat,tellusaboutit!
Catchyouontheflippity-flip.
INDEX
A
Arecords,104,109–111
AbstractSyntaxNotationOne(ASN.1)encoding,133–135,
137–138
acme/autocert,235
Add(int),27
AddressResolutionProtocol(ARP)poisoning,178
AdvancedEncryptionStandard(AES)algorithm,242
ancillarychunks,302
anonymousfunctions,126
APIinteraction
overview,51–53
Bingscraping,68–76
Metasploit,59–68
Shodan,51–59
APIInfostruct,55
append()function,11
ARP(AddressResolutionProtocol)poisoning,178
ASN.1(AbstractSyntaxNotationOne)encoding,133–135,
137–138
assembly,216
asymmetricalgorithms,234
asymmetriccryptography,245.Seealsoencryption
Atom,GitHub,4–5
authentication,67,86–88,239–241
B
backticks,19
baseworkspacedirectory,2
Base64encoding,215–216
bcrypthashing,235,237–239
Beacon,121
BerkeleyPacketFilter(BPF),175,181.Seealsotcpdump
bestpractices
coding,19,49,66,185,195,329
security,96,236
bindirectory,2
binaries,2
binarydatahandling,213–216
Bing,68–76
bodyTypeparameter,46
braces,14
breakstatements,14
bruteforce,252–261
bufferoverflowfuzzing,188–192
bufferedchannels,29,37–39
bufiopackage,38,112–113,197
buildcommand,7
buildconstraints,7–8
byteslices,19
bytespackage,197
C
C,201–212,290–293
Ctransform,213
CaddyServer,127
.Call()method,273
canonicalname(CNAME)records,109–111
capture()function,184
CGOpackage,291
channels,16–17
Checkerinterface,220–222
CipherBlockChaining(CBC)mode,242
ciphertext,234
cleartext
overview,234
passwords,150
sniffing,178–180
clientimplants,323–325,327–329
Clientstruct,53–54
clonedsites,90–93
Close()method,25
closedports,22
Cmd,41
CNAMErecords,109–111
CobaltStrike,118–124,278
COFFFileHeader,282–283
collision,234
Command()function,41
commands
buildcommand,7
cross-compiling,7–8
gocommands,6–9
setcommand,3
complexdatatypes,10–11
concurrency,16–17,37
concurrentscanning,26–32
Conn,35–38
connections,24–25,35,327
constraints,7–8
controlstructures,14–16
conveniencefunctions,46–47,140
Copy()function,40
createChunkCRC()method,304–305
CreateRemoteThread()Windowsfunction,275–276
credential-harvestingattacks,90–93
criticalchunks,302
cross-compiling,7–8
cross-sitescripting,94
cryptopackage,197,235
cryptography
overview,234–235
hashing,234–239
curl,40,79
D
DataDirectory,285–287
datamapping,71–73,125
datatypes
channels,16
maps,11
primitive,10–11
slices,11
databaseminers,161–170
debugpackage,197
decoderfunction,300
decodingprocess,308
decryption,234.Seealsoencryption
DefaultServerMux,78–79
defer,49
DELETErequests,47–48
deptool,9
developmentenvironmentsetup,1–10
Dial()method,24
dialects,132–133
directives,19
DirtyCOW,201–204
DNSclients,104–117
DNSproxies,124–127
DNSservers,117–129
DNStunneling,121
doloops,15
Docker,90,118–122,154–158
documentmetadata,69
DocumentObjectModel(DOM),74
domainfronting,98
DOSHeader,281
DWORD,271
E
echoservers,32,35–37
Empire,121
Encode()method,65
encodeDecode()function,308
encodingpackage,197
encodingprocess,308
encryption,234,242–252
endiannessfunction,299
errorhandling,17–18
errormessages,51
ExclusiveOR(XOR),307–312
ExecutableandLinkableFormat(ELF),203
exploitation,196–212
exportaddresstable(EAT),279
F
fieldtags,19–20,139
filesystems,170–171
filetypefilter,73
filteredports,22
filteringsearchresults,73–76
firewalls,22–23
fixedfieldtag,140
Flusher,42
fmtpackage,25
FOCA,69
Foostruct,19
forloop,15
formatting
data,38,113–114
sourcecode,9
Frida,278
fullyqualifieddomainname(FQDN),104
fuzzing,188–196
G
gapingsecurityholes,41
Get()function,46
get()HTTPfunction,227–229
GetLoadLibAddress()function,275
GetProcessAddress()Windowsfunction,275
getRegex()function,163
GetSchema()function,163,165
Gieben,Miek,104
GitHubAtom,4–5
GNUCompilerCollection(GCC),290
gobuildcommand,6–7
GoDNSpackage,104
godoccommand,8
gofmtcommand,9
gogetcommand,8–9
GoPlaygroundexecutionenvironment,10
goruncommand,6
GoSyntax
complexdatatypes,10–11
concurrency,16–17
controlstructures,14–16
datatypes,10–11
interfacetypes,13
maps,11
patterns,12–14
pointers,12
primitivedatatypes,10–11
slices,11
structtypes,12–13
govetcommand,9
GOARCHconstraint,7–8
GoLand,5–6
golintcommand,9
GOOSconstraint,7–8
gopacketpackage,174
gopacket/pcapsubpackage,174–175
GOPATHenvironmentvariable,2–3
goquerypackage,69
gorilla/muxpackage,82–83,84,101
gorilla/websocketpackage,96
GOROOTenvironmentvariable,2–3
goroutines,16–17,26–32
gRPCframework,316–319
gsspackage,138
H
HandleFunc()method,82
handler()function,75–76
handles,271.Seealsotokens
handshakeprocess,22–23
hash-basedauthentication,147–150
hashing,234–239
Head()function,46
head()HTTPfunction,226–227
hextransform,214
hexadecimal198,281,297
HMAC(Keyed-HashMessageAuthenticationCode)standard,
240–241
Holt,Matt,127
hostsearch,55–57
HTTPclients
overview,46–51
Bingscraping,68–76
Metasploitinteraction,59–68
Shodaninteraction,51–59
HTTPservers
overview,78–90
credential-harvestingattacks,90–93
multiplexing,98–102
WebSocketAPI(WebSockets),93–98
http.HandleFunc(),78–79
I
ifstatements,18
implantcode,323–325,327–329
importaddresstable(IAT),279
indexingmetadata,68–76
infiniteloops,37
init()function,101
input/output(I/O)tasks,32–35
instreamsetfilter,73
integrateddevelopmentenvironments(IDEs),3–6
interface{}type,97
interfacetypes,13
iopackage,32,197
io.Pipe()function,43
io.ReadCloser,49
io.Reader,32–35,46
ioutil.ReadAll()function,49
io.Writer,32–35
J
Java,118–120
JavaScript,94–95
JBoss,198
JetBrainsGoLand,5–6
jQuerypackage,69
JSBin,94
JSON,19,50,54,139,159
K
Kerberos,133
Kernel32.dll,275
Keyed-HashMessageAuthenticationCode(HMAC)standard,
240–241
keylogging,93–98
Kozierok,CharlesM.,22
L
labenvironments,118–121
lenfieldtag,140
libraries,2
lightweightthreads,16–17
loadLibraryA()function,275
Login()method,66
Logout()method,66,68
loops,15,37
Luaplug-ins,225–232
Luhnchecks,253–254
M
madvise()function,205
magicbytes,296
main()function,17
mainpackage,6
make()function,11
MandatoryIntegrityControl,271
mappingdata,71–73,125
maps,11
Marshal()method,19
marshalData()method,305
marshalinginterfaces,135
MD5hashes,236–237
memory,273–274
messageauthentication,239–241.Seealsoauthentication
messageauthenticationcodes(MACs),234
MessagePack,60
metadata,69,138–139
MetasploitFramework,59–68,213
Meterpreter,61,98–102
MicrosoftAPIdocumentation,263–265
MicrosoftSQL(MSSQL)Serverdatabases,157–158,
160–161
MicrosoftVisualStudioCode,5
middleware,80–81,83–88
MinGW-w64,290
modtool,9
MongoDBdatabases,154–156,158–160
MsfVenom,213,278
Msgstruct,106–107
MSYS2,290
multichannelcommunication,30–32
multiplexing,98–102
mutex,129
mutualauthentication,248–252
MySQLdatabases,156–157,160–161
N
namedfunctions,126
nativeplug-ins,218–224
negronipackage,83–88
Nessusvulnerabilityscanner,217