results.
Performance: qmin shows a clear impact on the number of packets sent to
resolve our 1.56M domains. For Unbound, the 5.7M packets without qmin require
6.82M (relaxed) and 6.71M (strict) packets with qmin, a 17–19% increase. For
BIND, the increase is 15–26%. It is to be expected that the strict mode requires
fewer packets, as it will give up on receiving an error, whereas relaxed modes
continue through SERVFAIL or NXDOMAIN error codes. This increase in packet
count is not oﬀset by smaller packets, across resolvers we see average packet
sizes only decrease by 5% or less with qmin enabled.
1 We turn DNSSEC validation oﬀ to achieve comparable behavior (validating DNSSEC
requires more queries to be sent); we also note that the combination of qmin and
DNSSEC may induce further complexities beyond the scope of this work.
A First Look at QNAME Minimization in the Domain Name System
157
Table 3. Performance and result quality across qmin modes and resolvers. Results are
mean (μ) across all runs, with all standard deviations σ < 2%μ. We also show the qmin
algorithm signature per resolver for the qmin-enabled case (signature without qmin is
always 24A).
Unbound 1.8.0
Knot 3.0.0 Bind 13.3.2
qmin Signature 3A-4A-7A-...-24A
qmin mode
# packets
Oﬀ
5.70M 6.82M 6.71M 5.94M
3NS-24A
3NS-4NS-5NS-24A
Relaxed Strict Relaxed
Oﬀ
Relaxed Strict
5.07M 6.39M 5.84M
Errors
12.6% 12.6% 15.9% 13.5%
16.6% 17.1% 21.6%
This conﬁrms that qmin in its current form does come with a perfor-
mance penalty of up to 26%. We argue that the full cache in a produc-
tion resolver will soften that overhead. Please note that a comparison of
packet counts between diﬀerent resolvers implicitly compares many other details
such as caching strategies, which is why comparison between resolvers should
be conducted very carefully. While it may seem intuitive that Unbound’s
3A-4A-7A-10A-13A-16A-20A-24A qmin approach requires more packets than
Knot’s 3NS-24A and BIND’s 3NS-4NS-5NS-24A approaches (cf. Subsect. 3.2),
a comparison of the number of packets between resolvers would require a much
deeper exploration of root causes of packets sent, such as caching and time-out
strategies.
Result Quality: Another critical aspect of resolver performance is the result
quality: Will a resolver be able to work through numerous edge cases and miscon-
ﬁgurations to deliver a response, or will it hang up on certain errors? To answer
this question, we compare the amount of errors (NXDOMAIN or SERVFAIL)
in our resolution results between diﬀerent resolver and qmin approaches. Across
resolvers, we see a signiﬁcantly higher share of errors with strict qmin enabled.
For example, the 3.3% increase for Unbound translates to ≈50k domains, a sig-
niﬁcant share of these popular DNS domain names. The diﬀerence in resolvers
corresponds to our observations on resolver behavior: As reported in Sect. 2, a
portion of authoritative name servers fails to respond to NS queries. As Unbound
uses type A queries to discover zone boundaries, and Knot and BIND use NS
queries (as suggested by RFC 7816), higher error rates are expected for Knot
and BIND. The surprisingly high baseline of non-resolving domains of 12–16%
is a characteristic of the Umbrella Top 1M list recently discussed in [31].
These ﬁndings show that qmin comes with two drawbacks: Packets and bytes
transferred increase, and, depending on the detailed algorithm, also a signiﬁcant
share of popular DNS names fails to resolve.
6 Discussion and Conclusions
Our study covered qmin from various angles: we performed (1) controlled exper-
iments that conﬁrm that qmin can have negative performance and result quality
158
W. B. de Vries et al.
implications, and (2) active and passive measurements in the Internet that con-
ﬁrm from both the client and authoritative server side that qmin adoption is
rising. We also explored the various problems and workarounds that have been
deployed, and want to conclude and discuss further aspects:
qmin Is Complex: Like many DNS mechanisms, qmin sounds simple, but
broken deployments make it diﬃcult to implement without collateral damage.
Resolvers’ iterations towards a relaxed qmin algorithm reﬂect this, and impor-
tant take-aways are: (i) Using NS queries to detect zone cuts results in a consider-
able number of failures; using A queries instead seems reasonable. (ii) responding
to SERVFAIL/NXDOMAIN by sending the full name (i.e., disabling qmin for
this query) is currently a necessity to avoid signiﬁcant error rates.
qmin Can Be a Security Risk: Having a resolver step through many
iterations for a name with an excessive number of labels is a DoS attack vector.
All implementations we encountered mitigate this. Unbound jumps over labels
to decrease the number of queries to some maximum, considerably saving on
query count. Knot’s (3NS-24A) and BIND’s (3NS-4NS-5NS-24A) approaches go
further: Knot stops qmin if it encounters a label that has not been delegated
(except for some exceptions, such as .co.uk). BIND has both a limit on the
maximum number of labels (default 9), in addition to having a maximum number
of undelegated labels (default 3). We consider these approaches good, as they
mitigate security risks while still providing qmin privacy against the top levels
in the DNS hierarchy.
qmin Can Impact Resolver Performance and Result Quality: Cur-
rently, qmin comes with a 15%+ performance penalty, and unless implemented
very carefully, will also impair result quality. Please note that, as qmin queries
are sent sequentially, the measured increase in query volume will correlate to
latency.
Recommendations: Based on the insights collected in this paper, we con-
clude with the following recommendations: (i), despite its performance and
quality caveats, qmin improves privacy and should be universally deployed. (ii)
qmin deployment must be conducted carefully: We recommend an algorithm that
combines Unbound’s and BIND’s algorithms, i.e., conducts fallback upon error,
replaces NS (and other) query types by A queries, and stops qmin after a con-
ﬁgurable number of labels. (iii) over time, heuristics may be added to alleviate
certain cases where qmin will unlikely add privacy. For example, DANE-TLSA
labels such as 443. tcp could be exempt from qmin.
Conclusion: The currently still rather low qmin adoption already causes a
signiﬁcant positive eﬀect for query privacy at both Root and TLD authorita-
tive name servers. While there are legitimate performance, result quality, and
security concerns, we already see resolver implementers tackle these, and are
conﬁdent that these negative implications will be further reduced, assisted by
the quantitative evidence and tangible recommendations in this study. We fully
expect more and more DNS operators to enable qmin to further improve privacy
of end-users on the Internet.
A First Look at QNAME Minimization in the Domain Name System
159
Ethical Considerations and Reproducibility: We carefully considered
ethical implications of our work. We followed scanning best practices [17], and
received no complaints. Our passive data collection has been cleared by the
respective IRBs, and we follow the recommendations by Dittrich et al. [14] and
Partridge et al. [27]. To encourage other researchers to validate and/or build
upon our results we publish our scripts, code and data publicly [33].
Acknowledgements. This work was partially funded by the German Federal Min-
istry of Education and Research under project X-Check (grant 16KIS0530). Partial
funding was also supplied by SURFnet Research on Networks.
References
1. RIPE Atlas measurement
for a.b.qnamemin-test.internet.nlTXT (2017).
https://atlas.ripe.net/measurements/8310250/
2. RIPE Atlas measurement for o-o.myaddr.l.google.comTXT (2017). https://atlas.
ripe.net/measurements/8310237/
3. RIPE Atlas measurement
for ripe-hackathon6.nlnetlabs.nlAAAA (2017).
https://atlas.ripe.net/measurements/8310366/
4. RIPE Atlas measurement for ripe-hackathon6.nlnetlabs.nlAAAA. Ripe MSM
IDs: 16428213, 16428214, 16428215, 16428216, 16428217, 16428218, 16428219,
16428220, 16428221, 16428222 (2017)
5. RIPE Atlas measurement for whoami.akamai.netA (2017). https://atlas.ripe.net/
measurements/8310245/
6. Bortzmeyer, S.: DNS privacy considerations. RFC 7626 (Informational), August
2015. https://www.rfc-editor.org/rfc/rfc7626.txt
7. Bortzmeyer, S.: DNS query name minimisation to improve privacy. RFC 7816
(Experimental), March 2016. https://www.rfc-editor.org/rfc/rfc7816.txt
8. Bortzmeyer, S., Huque, S.: NXDOMAIN: there really is nothing underneath.
RFC 8020 (Proposed Standard), November 2016. https://www.rfc-editor.org/rfc/
rfc8020.txt
9. Bortzmeyer, S.: PowerDNS - add qname minimisation (2015). https://github.com/
PowerDNS/pdns/issues/2311
10. Castro, S., Wessels, D., Fomenkov, M., Claﬀy, K.: A day at the root of the internet.
ACM SIGCOMM Comput. Commun. Rev. 38(5), 41–46 (2008)
11. Cisco: Cisco Umbrella Top 1M List, September 14–30 2018. https://s3-us-west-1.
amazonaws.com/umbrella-static/index.html
12. Cooper, A., et al.: Privacy Considerations for Internet Protocols. RFC 6973, July
2013. https://rfc-editor.org/rfc/rfc6973.txt
13. CZ.NIC: Knot resolver 1.0.0 released (2016). https://www.knot-resolver.cz/2016-
05-30-knot-resolver-1.0.0.html
14. Dittrich, D., Kenneally, E., et al.: The Menlo Report: Ethical Principles Guiding
Information and Communication Technology Research. US Department of Home-
land Security (2012)
15. DNS OARC: Day In The Life of the Internet (2017 and 2018). https://www.dns-
oarc.net/oarc/data/ditl
16. Dolmans, R.: QNAME Minimization in Unbound, RIPE 72 (2016). https://ripe72.
ripe.net/wp-content/uploads/presentations/120-unbound qnamemin ripe72.pdf
160
W. B. de Vries et al.
17. Durumeric, Z., Wustrow, E., Halderman, J.A.: ZMap: fast internet-wide scanning
and its security applications. In: USENIX Security (2013)
18. Fujiwara, K., Kato, A., Kumari, W.: Aggressive Use of DNSSEC-Validated
Cache. RFC 8198 (Proposed Standard), July 2017. https://www.rfc-editor.org/
rfc/rfc8198.txt
19. Hardaker, W.: Analyzing and mitigating privacy with the DNS root service. In:
NDSS: DNS Privacy Workshop, 2018 (2018)
20. Hoﬀman, P.E., McManus, P.: DNS queries over HTTPS (DoH). RFC 8484, October
2018. https://rfc-editor.org/rfc/rfc8484.txt
21. Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D., Hoﬀman, P.E.: Speciﬁca-
tion for DNS over transport layer security (TLS). RFC 7858, May 2016. https://
rfc-editor.org/rfc/rfc7858.txt
22. Imana, B., Korolova, A., Heidemann, J.: Enumerating privacy leaks in DNS
data collected above the recursive. In: NDSS: DNS Privacy Workshop, 2018. San
Diego, California, USA, Feburary 2018. https://www.isi.edu/%7ejohnh/PAPERS/
Imana18a.html
23. ISC: Release notes for bind version 9.13.2 (2018). https://ftp.isc.org/isc/bind9/9.
13.2/RELEASE-NOTES-bind-9.13.2.txt
24. Mockapetris, P.: Domain names - concepts and facilities. RFC 1034, November
1987. https://rfc-editor.org/rfc/rfc1034.txt
25. NLnet Labs: Nlnet labs: Unbound chanelog (2018). https://nlnetlabs.nl/svn/
unbound/tags/release-1.8.0/doc/Changelog
26. Pappas, V., Wessels, D., Massey, D., Lu, S., Terzis, A., Zhang, L.: Impact of con-
ﬁguration errors on DNS robustness. IEEE J. Sel. Areas Commun. 27(3), 275–290
(2009)
27. Partridge, C., Allman, M.: Ethical considerations in network measurement papers.
Commun. ACM 59, 58–64 (2016)
28. Rose, S., Larson, M., Massey, D., Austein, R., Arends, R.: DNS security introduction
and requirements. RFC 4033, March 2005. https://rfc-editor.org/rfc/rfc4033.txt
29. Rose, S., Larson, M., Massey, D., Austein, R., Arends, R.: Protocol modiﬁcations
for the DNS security extensions. RFC 4035, March 2005. https://rfc-editor.org/
rfc/rfc4035.txt
30. Rose, S., Larson, M., Massey, D., Austein, R., Arends, R.: Resource records for
the DNS security extensions. RFC 4034, March 2005. https://rfc-editor.org/rfc/
rfc4034.txt
31. Scheitle, Q., et al.: A long way to the top: signiﬁcance, structure, and stability of
internet top lists. In: IMC 2018, Boston, USA. arXiv:1805.11506 November 2018
32. Schmitt, P., Edmundson, A., Feamster, N.: Oblivious DNS: practical privacy for
DNS queries. arXiv:1806.00276 (2018)
33. de Vries, W.B., Scheitle, Q., M¨uller, M., Toorop, W., Dolmans, R., van Rijswijk-
Deij, R.: Datasets and Scripts (2019). https://www.simpleweb.org/wiki/index.ph
p/Traces#A First Look at QNAME Minimization in the Domain Name System
34. Wang, Z.: Understanding the performance and challenges of DNS query name
minimization. In: 17th IEEE International Conference On Trust, Security And
Privacy In Computing And Communications/12th IEEE International Conference
On Big Data Science And Engineering (TrustCom/BigDataSE), pp. 1115–1120.
IEEE (2018)
35. Wullink, M., Moura, G.C., M¨uller, M., Hesselman, C.: ENTRADA: a high-
performance network traﬃc data streaming warehouse. In: 2016 IEEE/IFIP Net-
work Operations and Management Symposium (NOMS), pp. 913–918. IEEE (2016)