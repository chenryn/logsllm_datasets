### Performance Impact of QNAME Minimization (qmin)

**Performance:**
The implementation of qmin significantly affects the number of packets sent to resolve 1.56 million domains. For Unbound, the 5.7 million packets required without qmin increase to 6.82 million (relaxed mode) and 6.71 million (strict mode), representing a 17-19% increase. For BIND, the increase ranges from 15-26%. The strict mode generally requires fewer packets because it stops on receiving an error, while relaxed modes continue through SERVFAIL or NXDOMAIN error codes. This increase in packet count is not offset by smaller packet sizes; across resolvers, the average packet size decreases by only 5% or less with qmin enabled.

To achieve comparable behavior, DNSSEC validation was turned off, as it would require additional queries. It's also worth noting that combining qmin and DNSSEC may introduce further complexities beyond the scope of this study.

### Table 3: Performance and Result Quality Across qmin Modes and Resolvers

| Resolver | qmin Mode | # Packets (mean, μ) | Errors (mean, μ) | qmin Signature |
|----------|-----------|---------------------|------------------|----------------|
| Unbound 1.8.0 | Off | 5.70M | 12.6% | 24A |
| Unbound 1.8.0 | Relaxed | 6.82M | 12.6% | 3A-4A-7A-...-24A |
| Unbound 1.8.0 | Strict | 6.71M | 15.9% | 3A-4A-7A-...-24A |
| Knot 3.0.0 | Off | 5.94M | 13.5% | 24A |
| Knot 3.0.0 | Relaxed | 6.39M | 16.6% | 3NS-24A |
| Knot 3.0.0 | Strict | 5.84M | 17.1% | 3NS-24A |
| BIND 13.3.2 | Off | 5.07M | 13.5% | 24A |
| BIND 13.3.2 | Relaxed | 6.39M | 16.6% | 3NS-4NS-5NS-24A |
| BIND 13.3.2 | Strict | 5.84M | 21.6% | 3NS-4NS-5NS-24A |

This data confirms that qmin, in its current form, incurs a performance penalty of up to 26%. However, a full cache in a production resolver may mitigate this overhead. Comparisons between different resolvers should be conducted carefully, as they involve various factors such as caching strategies.

### Result Quality

Another critical aspect of resolver performance is result quality. We compared the number of errors (NXDOMAIN or SERVFAIL) in our resolution results across different resolvers and qmin approaches. Enabling strict qmin significantly increases the share of errors. For example, the 3.3% increase for Unbound translates to approximately 50,000 domains, a significant portion of popular DNS domain names. The differences in resolvers correspond to their behavior: Unbound uses type A queries to discover zone boundaries, while Knot and BIND use NS queries, leading to higher error rates for the latter two. The high baseline of non-resolving domains (12-16%) is characteristic of the Umbrella Top 1M list, as discussed in [31].

### Discussion and Conclusions

Our study covered qmin from multiple angles, including controlled experiments and active/passive measurements, confirming both the negative performance and result quality implications, as well as the rising adoption of qmin. Key takeaways include:

- **Complexity:** qmin is complex due to broken deployments. Resolvers have iterated towards a relaxed qmin algorithm, using A queries instead of NS queries to detect zone cuts and responding to SERVFAIL/NXDOMAIN by sending the full name.
- **Security Risks:** qmin can be a DoS attack vector if a resolver steps through many iterations for a name with excessive labels. Implementations like Unbound, Knot, and BIND mitigate this by limiting the number of queries and stopping qmin under certain conditions.
- **Performance and Result Quality:** qmin currently comes with a 15%+ performance penalty and can impair result quality unless implemented carefully. As qmin queries are sent sequentially, the increase in query volume correlates with latency.

### Recommendations

Based on our insights, we recommend:
1. Universal deployment of qmin despite its performance and quality caveats, as it improves privacy.
2. Careful qmin deployment, combining Unbound’s and BIND’s algorithms, conducting fallback upon error, replacing NS queries with A queries, and stopping qmin after a configurable number of labels.
3. Over time, adding heuristics to alleviate cases where qmin is unlikely to add privacy, such as exempting DANE-TLSA labels like 443.tcp from qmin.

### Conclusion

The low qmin adoption already has a significant positive effect on query privacy at root and TLD authoritative name servers. While there are legitimate concerns about performance, result quality, and security, resolver implementers are addressing these issues. We expect more DNS operators to enable qmin, further improving end-user privacy on the Internet.

### Ethical Considerations and Reproducibility

We carefully considered the ethical implications of our work, following best practices and obtaining necessary approvals. Our scripts, code, and data are publicly available to encourage validation and further research.

### Acknowledgements

This work was partially funded by the German Federal Ministry of Education and Research under project X-Check (grant 16KIS0530) and by SURFnet Research on Networks.

### References

[References listed as provided, with no changes needed.]

---

This revised version aims to enhance clarity, coherence, and professionalism while maintaining the essential content and structure of the original text.