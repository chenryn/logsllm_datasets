1
3
3
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
17
4
1
0
0
9
0
1
1
0
0
0
1
0
14
4
15
1
2
0
6
7
16
1
6
0
0
2
0
3
2
9
6
4
14
0
6
2
7
0
8
0
2
1
2
1
0
0
2
1
trn.pch.net (IT)
vie.pch.net (AT)
waw.pch.net (PL)
wlg.pch.net (NZ)
yow.pch.net (CA)
yyz.pch.net (CA)
zrh.pch.net (CH)
Table 1: February 2012 route collector status
5
1
33
105
257# BGP feeders
# full feeders
Asia-Paciﬁc
Europe
Latin America
North America
Region
Africa
10
159
1,279
0
15
68
6
42
120
World
Table 3: Geolocation of BGP feeders
13
444
2,004
tance of an AS from the BGP route collectors, the higher
the number of BGP decision processes crossed and, thus, the
higher the probability that one or more of them will ﬁlter
out some AS connections.
3.3 Geographical coverage
The incompleteness of BGP data is even stronger if anal-
ysed from a geographical perspective. Table 3 details the
total number of BGP feeders as well as the number of them
that supply the full routing table to any of route collec-
tor projects. To perform this analysis we geolocated the IP
address of each BGP feeder using the Maxmind GeoIPLite
database [21] and considering the world being subdivided
into ﬁve macro-regions: Africa, Asia-Paciﬁc (i.e. Asia and
Oceania), Europe, Latin America (the Caribbean, Central
America, Mexico and South America) and North America.
Table 3 highlights that most full feeders are located either in
Europe or in North America. Interestingly, in Africa no full
feeder is found even though Africa hosts one route collec-
tor of RouteViews and four of PCH. This means that every
inference about the African part of the Internet is mostly
obtained through views located in diﬀerent regions. Thus,
some relevant characteristics of the African part of Internet
may be hidden from the current route collectors. This is
not only a problem regarding Africa, in fact the number of
feeders in other regions is low as well.
4. A NOVEL METHODOLOGY TO DEAL
WITH BGP DATA INCOMPLETENESS
Given the large amount of incompleteness highlighted in
Section 3, the ﬁrst step to infer the real Internet AS-level
topology and its properties is to introduce a larger number
of new BGP feeders that announce their full routing tables.
To quote Sir Arthur Conan Doyle, “It is a capital mistake
to theorize before you have all the evidence. It biases the
judgment”. One of the biggest obstacles is the vast number
of ASes that make up the Internet. Obtaining routing infor-
mation from each of them would require the participation
of thousands administrators in a project that may not be
appealing for many of them.
Given this situation, we focus on those ASes that play a
major role in Internet connectivity, i.e. those ASes that oﬀer
IP transit to other ASes. Although there are far fewer of
them than the total number of ASes, these ASes contribute
Figure 6: Connectivity scenario II
substantially to provide Internet connectivity. In fact, both
world-wide ISPs and small/medium ISPs are part of this
set of ASes. This latter class of ASes is known to be the
cause of the largest number of p2p connections [22] that are
currently hidden from the route collector infrastructure.
In this section, we propose a methodology to identify the
minimal set of BGP feeders that would be needed to gather
as much BGP data as possible about the ASes whose con-
nectivity plays a major role in their economic market, thus
minimizing the number of hidden connections present in the
core of the Internet and, at the same time, minimizing the
impact of BGP ﬁlters, such as BGP export policies and BGP
decision processes.
4.1 A new metric: p2c distance
As already highlighted, a major role in ﬁltering is due to
inter-AS economic relationships because of their inﬂuence on
the amount of routing information that each AS announces
to each other. Given the BGP export policies related to each
economic relationship [14], a necessary (but not suﬃcient)
condition for a route collector to reveal the full connectivity
of a given AS is that there exists at least one AS path that
is made up exclusively of p2c connections from that AS to
the route collector. This is because only customers in a p2c
connection are able to obtain routes towards all Internet
destinations. In order to limit the ﬁltering eﬀects of BGP
decision processes, it is preferable that routing information
arrives at a route collector having crossed the lowest number
of p2c connections as possible.
On the basis of the two conditions hypothesized above,
we deﬁne a new metric that is able to capture the level of
completeness of data gathered by the current set of route
collectors. The p2c-distance of one AS X from another AS
Y is deﬁned as the minimum number of consecutive p2c
connections that connect X to Y in the considered economic
topology or, likewise, the minimum number of consecutive
c2p connections that connect Y to X. This metric easily
quantiﬁes the distance and the amount of transit connections
crossed by any BGP UPDATE message to reach a route
collector, and can be exploited to reveal which part of the
Internet is well-monitored and which part is still a dark zone.
Note that this metric still relies on an inference made on
the current Internet AS-level topology, but the p2c and c2p
connections have been proved to be extremely accurate [5,
6, 7, 8].
To better understand how this metric works, consider the
connectivity scenario depicted in Fig. 4. In this example, the
route collector R has a p2c-distance of 1 from AS A and E,
while the p2c-distance from B, C, D and F is not deﬁned.
This means that R has the possibility to reveal every p2p
connection established by A, B and E. On the other hand,
it also means that R is not able to reveal the p2p connec-
tivity of C, D and F in any way, thus R will not reveal the
connection (C, D) in any AS path. Nevertheless, R can dis-
cover the p2c (c2p) connectivity of each AS of the scenario.
4.2 BGP feeder selection
Given the deﬁnition of p2c-distance, a complete view of
the Internet can only be obtained by connecting a route col-
lector to each stub AS, as already concluded in [5]. Stub
ASes are ASes typically managed by local access providers
(which provide connectivity to end users but not to other
258ASes) and organizations that do not have the Internet tran-
sit as part of their core business (e.g. banks and car man-
ufacturers), and appear in BGP data as the originating el-
ement, i.e. the right-most element, in every AS path that
involves them. Due to the nature of their related organiza-
tions, these ASes tend to be customers in the economic rela-
tionships established with other ASes, representing a perfect
starting point to minimize the p2c-distance of all ASes that
make up the Internet. However, since p2c connections are
already discovered by route collectors connected to the top
of the hierarchy [5], most BGP data collected from a hypo-
thetical route collector infrastructure connected to each of
them would be redundant. Moreover, since it is not possi-
ble to infer a priori which stub AS is actually interested in
establishing p2p connections, it is impossible to reduce the
number of route collectors required to obtain full Internet
AS-level connectivity. This means that, based on February
2012 BGP data, we need to have a connection to 33,845
ASes out of 41,127. This makes this approach practically
unfeasible. We believe that a good trade-oﬀ between the
possibility to discover hidden p2p connections and the fea-
sibility of obtaining such data is represented by ASes that
are actually interested in deploying p2p connections to im-
prove the quality of their services, i.e. non-stub ASes [22].
The lack of interest of stub ASes in establishing p2p con-
nections is highlighted by the fact that only 7% of them
participate in at least one IXP4, where ASes typically inter-
connect with settlement-free p2p connections to reduce the
amount of their traﬃc directed to their providers (see [6, 19]
and [24] for more details on IXPs).
Speciﬁcally, we aim to select new BGP feeders such that
each non-stub AS has a ﬁnite and bounded p2c distance from
the route collector infrastructure to minimize the eﬀects of
BGP ﬁlters and, consequently, increasing the possibility to
reveal the hidden p2p connectivity of the actual core of the
Internet. As will be shown later on, stub ASes will play a
key role in the solution of the problem, even though we are
not actually focusing on their connectivity.
4.2.1 Problem description
We model the problem of ﬁnding the optimal number of
BGP feeders as an MSC problem which can be formulated
as follows:
subject to
Minimize
 X
ASi ∈U
xASi
X
ASi :n∈S
(d)
ASi
xASi ≥ 1
∀n ∈ N
xASi ∈ {0, 1},
∀ASi ∈ U
(1)
(2)
(3)
where U = {AS1, AS2, . . . , ASn} is the set of ASes, N ⊂ U
is the set of non-stub ASes and S(d)
represents the cover-
ASi
ing set of ASi, i.e. the set of ASes in N that have a p2c-
distance value of at most d from ASi, and xASi is 1 if S(d)
ASi
4We collected the set of ASes that participate to at least
one IXP by downloading and parsing the participant list web
page of 190 active IXPs. Data is available at [23].
is part of the ﬁnal solution, 0 otherwise. Note that ASi
belongs to S(d)
for any d ≥ 0. The parameter d deﬁnes
ASi
the maximum number of BGP decision processes5 that the
update messages by each non-stub AS will traverse before
reaching a BGP feeder and, thus, indicates the number of
ﬁlters encountered that can cause loss of information. Note
that imposing d = 0 implies that the solution is composed
of the entire set of non-stub ASes. The larger the value
of d, the heavier the ﬁltering eﬀect introduced by BGP
decision processes but the smaller the number of required
BGP feeders and, thus, the number of required BGP connec-
tions. This thus, makes the solution more feasible. To bet-
ter understand the problem consider the scenario depicted
in Fig. 6. In this example, U = {A, B, C, D, E, F, G, H, I}
and N = {B, C, D, E, G, H}. Thus we compute S(1)
A =
S(1)
I = {B}, S(1)
D = {D},
S(1)
E = {E, D, G, H}, S(1)
H = {H}.
The goal of this MSC problem is to obtain the minimum
number of elements of S (d) such that their union is N or, in
other words, to select the minimum number of BGP feeders
from U such that the p2c-distance of any non-stub AS from
at least one of them is at most d. Returning to the example
depicted in Fig. 6, one of the optimal solutions to cover every
non-stub AS is {S(1)
E }, i.e. we should select ASes
B, C and E as BGP feeders.
C = {C}, S(1)
G = {G}, S(1)
B = {B, D}, S(1)
F = {E}, S(1)
B , S(1)
C , S(1)
4.2.2 Positioning algorithm
To carry out the MSC problem we introduce a directed
graph G(d)(V, E) where V = {i | ASi ∈ U} is the set of nodes
and E = {(i, j) | i, j ∈ V ∧ ASj ∈ N ∧ ASj ∈ S(d)
} is the
ASi
set of edges. In other words, the set of nodes is represented
by the full set of ASes, while an edge directed from node i
to node j represents that the non-stub ASj is contained in
S(d)
. The adjacency matrix related to the graph G(d) is a
ASi
|V| × |E| matrix A(d) such that A(d)
ij = 1 if
(i, j) ∈ E and is made up of one row per AS and one column
per non-stub AS. The problem can thus be translated into
ij ≥
selecting the minimum number of rows such that Pi A(d)
ij ∈ {0, 1}, and A(d)
1 for every j.
Given the potentially high number of elements in the prob-
lem, a direct brute-force approach to solve it would not be
eﬀective. Nevertheless, we can still manage to obtain its
exact solutions by reducing the size of the problem through
applying matrix reduction techniques that are well known in
the mathematical optimization literature, such as the pos-
sibility to delete dominated rows in the adjacency matrix
without changing the solvability of the problem [25, 26].
In detail, we propose an algorithm that ﬁrstly consists
in an iterative reduction process, consisting of four phases
(Fig. 7): phase a) Selection of those ASes that are the only
elements covering one or more non-stub ASes, phase b) Dele-
tion of of dominated covering sets, phase c) Veriﬁcation of
whether if the dominated elements deleted during phase b)
can be interchanged with the elements inserted so far in the
solution, Phase d ) Decomposition plus further inspection, in
which the optimal solution is exhaustively searched on the
reduced adjacency matrix and the algorithm checks whether
5The number of BGP decision processes encountered be-
fore reaching a route collector is d + 1, since BGP feeders
introduce an additional BGP decision process before provid-
ing BGP data to the route collectors.
259∀ASi ∈ U
Input: distance d, S(d)
ASi
1
2
3 P ool = U
4 P = ∅
5 A = ∅
6 R = ∅
7 D = ∅
8 Old P ool = ∅
9
10 while P ool 6= Old P ool
11
12
P ool = Old P ool
foreach ASi ∈ N
if |{ASk | ASk ∈ P ool ∧ ASi ∈ S(d)
ASk
remove ASk from P ool
insert ASk into P
foreach ASj ∈ P ool
}| == 1
S(d)
ASj
if |S(d)
ASj
= S(d)
ASj
| == 0
− S(d)