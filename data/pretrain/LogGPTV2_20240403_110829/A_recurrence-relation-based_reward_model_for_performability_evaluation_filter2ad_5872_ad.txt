DSN 2008: Tai et a!.
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
1.00
0.90
v 0.80
u
J:: 0.70
n:l
E
~
0 0.60
4-l
~
~ 0.50
~ 0.40
n:l
E
~ 0.30
0
E-
~ 0.20
0.10
0.00
1.00
~
~ 0.90
n:l
~
UJ 0.80
OJ
~
Po [k]
~
10
15
20
25
30
Ordinal Cycle Number k
(a) Po[k]
1.00
,..!(
UJ
co 0.95
E-t
~ 0.90
0
on
UJ 0.85
UJ
on
~ 0.80
4-l
0
I 0.75
'0
J:: 0.70
+J
co 0.65
UJ
+J
~
;:j
UJ 0.55
Q)
P::
0.60
~
0.50
1.00
0.90
,..!(
UJ
co 0.95
E-t
~
0
on
UJ 0.85
UJ
on
~ 0.80
4-l
0 0.75
.0
J::
~ 0.70
Reliability --e--
Normal-perf probability --8--
100 200 300 400 500 600 700 800 900 1000
Time between System Restarts (L)
(a) Low Failure Probability Case
Reliability --e--
Normal-perf probability ~
100 200 300 400 500 600 700 800 900 1000
Time between System Restarts (L)
(b) High Failure Probability Case
Figure 5. Probability Measures
0.60
OJ 0.70
~
on
~u
co
0 0.50
~
PI
J:: 0.40
on
'0 0.30
OJ
~ 0.20
tn
J:: 0.10
~
~
0.00
PI [k] ----
a
10
15
20
25
30
+J
co 0.65
UJ
.w 0.60
~
;:j
UJ 0.55
Q)
P::
0.50
Ordinal Cycle Number k
(b) PI [k]
Figure 4. State-Occupancy Probabilities
5(a) and 5(b) illustrate the cases in which failure probability
P34 equals 0.002 and 0.01, respectively. The time interval
between two system restarts, L, is kept as a variable while
the measures are evaluated at the points where L equals 10,
50, 100, 150, 250, 300, 500, 800, and 1001. Note that L =
1001 implies that proactive restart is never applied during
the mission task period of 1,000 cycles.
As shown by the curves, in the high-failure-probability
case, there is a clear maximum of the probability that the
system will be in the normal-performance mode, which
occurs when L = 50 and implies an optimal restart fre(cid:173)
quency of t. However, for the low-failure-probability case,
the value of
the maximum is less clear.
the normal-performance probability drops slowly as L in(cid:173)
creases, suggesting that proactive restart offers only limited
benefit to a highly reliable system. Similarly, the curves
in Figures 5(a) and 5(b) imply that the worth of proactive
restart with respect to reliability improvement for the high(cid:173)
failure-probability case is far more significant than that for
the low-failure-probability case (Le., 52% versus 14% when
L = 10, and 33% versus 10% when L = 50).
In particular,
Nonetheless we understand that reliability is not the sole
criterion for determining the frequency of proactive restart.
In particular, while a high value of t greatly improves re(cid:173)
liability, the performance cost of frequent proactive restarts
may negate much of the benefit, so that the value of normal(cid:173)
performance probability decreases, as illustrated by the
curves in Figures 5(a) and 5(b). As a result, the two sep(cid:173)
arate measures are unable to help identify a value of L that
is the best for the accomplishment of a mission task.
Therefore, in the subsequent study, we solve a performa(cid:173)
bility measure, namely mission accomplishment evaluated
as the expected accumulated reward W[T]. As illustrated
by Figure 6, the quantitative results for W [T] imply that
the optimal intervals between consecutive system restarts
are different for the low- and high-failure probability cases.
More specifically, the optimal values of L for the former
and latter cases are 100 and 50, respectively.
In addition, we observe that in the high failure probabil(cid:173)
ity case there exists a sharp peak resulting from the optimal
L, while the other case lacks such a clear peak. We can use
the results of reliability and normal-performance probabil(cid:173)
ity (shown in Figures 5(a) and 5(b)) to interpret the optimal
values of L. More specifically, the tradeoffs between the
1-4244-2398-9/08/$20.00 ©2008 IEEE
540
DSN 2008: Tai et al.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 2008
850
Low Failure Probability ~
High Failure Probability --e--
+J
~
l1.l
.EUl
800
-.-I
r-l
~
8 750
u
~
~.S
Ul
Ul
-.-I
~
700
650
100
300
200
800
Time between System Restarts (L)
400
500
600
700
900 1000
Figure 6. Expected Accumulated Reward
reliability improvement from and the performance cost of
system restart determine the peak locations and the sharp(cid:173)
ness of the peaks.
By setting the magnitudes of reward impulses differently
and computing time-averaged accumulated reward, we have
also evaluated interval availability (a measure indeed quan(cid:173)
tifies a duty cycle) for the image-based tracking system.
5. Concluding Remarks
We have developed a performability evaluation frame(cid:173)
work for an important class of embedded systems, namely
closed-loop applications. Although prior research efforts
resulted in a number of formalisms for modeling embedded
systems, e.g., timed automaton [10], their primary purpose
was system property verification and validation. In contrast,
the emphasis of our work is an approach to systematically
constructing and analytically solving RRB reward models
for quantitative evaluation. Additional reasons why this ef(cid:173)
fort is worthwhile are the following.
First, the RRB approach enables straightforward compu(cid:173)
tation for various measures of nonfunctional system proper(cid:173)
ties, including instant-of-time availability, interval-of-time
availability, reliability, expected accumulated reward, and
time-averaged accumulated reward, which are meaningful
for quantifying gracefully degradable performance of itera(cid:173)
tive embedded applications.
Moreover, it is noteworthy that expected accumulated re(cid:173)
ward and time-averaged accumulated reward are conceptu(cid:173)
ally coherent with, respectively, the notion of return and
duty cycle for embedded systems. This makes the RRB
framework a good match with its target application. Cou(cid:173)
pled with solution simplicity, this match makes RRB mod(cid:173)
els well-suited for early design assessment and trend study
of design alternatives for embedded systems.
In addition, as we did a preliminary study in [8], a hy(cid:173)
brid and hierarchical approach will enable an RRB reward
model to represent the behavior of more sophisticated em(cid:173)
bedded systems, such as distributed embedded systems. In
particular, we built a two-layer model for the assessment
of coordinated software and hardware fault tolerance in a
distributed avionics system. While the upper layer was
a recurrence-relation-based reward model, the lower-layer
model was built upon stochastic activity networks (SANs).
By assigning different initial markings to the SAN model,
the lower layer was used to evaluate the state transition
probabilities required by the upper layer. The upper layer
model then used the results to compute the expected accu(cid:173)
mulated reward.
In this manner, we were able to model
a continuous-time stochastic process. Therefore, when
supported by hybrid/hierarchical methods, applications be(cid:173)
yond closed-loop embedded systems may have the poten(cid:173)
tial to leverage the RRB approach. Possible applications
are those "interval-of-time" problems in which system be(cid:173)
havior within a fixed interval (which we view as a general(cid:173)
ized operational cycle) can be summarized by a state transi(cid:173)
tion' for example, checkpointing-interval optimization and
clock-synchronization frequency determination.
References
[1] S. Mohanty and V. K. Prasanna,
"Design of high(cid:173)
performance embedded system using model integrated com(cid:173)
puting," in Proc. of the 2nd RTAS Workshop on Model(cid:173)
Driven Embedded Systems, (Toronto, Canada), May 2004.
[2] W. H. Sanders et a!., "Multi-formalism and multi-solution(cid:173)
method modeling frameworks: The Mobius approach," in
Proc. ofSymp. on Performance Evaluation - Stories and Per(cid:173)
spectives, (Vienna, Austria), pp. 241-256, Dec. 2003.
[3] F. Stenberg, R. Manca, and D. Silvestrov, "Empirical esti(cid:173)
mation for discrete-time semi-Markov processes with appli(cid:173)
cations in reliability," Journal of Nonparametric Statistics,
vol. 18, pp. 483-498, Oct. 2006.
[4] M. R. Sternberg and G. A. Satten, "Discrete-time non(cid:173)
parametric estimation for semi-Markov models of chain-of(cid:173)
events data subject to interval censoring and truncation," Bio(cid:173)
metrics, vol. 55, pp. 514-522, June 1999.
[5] S. Mercier, "Numerical bounds for semi-markovian quanti(cid:173)
ties and application to reliability," Methodology and Com(cid:173)
puting in Applied Probability, July 2007.
[6] E. S. Rieger and G. Hasslinger, "An analytical solution for
the discrete time single server system with semi-markovian
arrivals," Queueing Systems, vol. 18, pp. 69-105, Mar. 1994.
[7] A. T. Tai, S. N. Chau, and L. Alkalai, "COTS-based fault
tolerance in deep space: A case study on IEEE 1394 applica(cid:173)
tion," International Journal ofReliability, Quality and Safety
Engineering, vol. 9, pp. 17-40, Mar. 2002.
[8] A. T. Tai and W. H. Sanders, "Performability modeling of
coordinated software and hardware fault tolerance," in Proc.
ofPMCCS-6, (Monticello, Illinois), pp. 31-34, Sept. 2003.
[9] K. S. Trivedi, Probability & Statistics with Reliability,
Queueing, and Computer Science Applications. New York:
John Wiley & Sons, 2nd ed., 2002.
[10] N. A. Lynch and F. W. Vaandrager, "Action transducers and
timed automata," Formal Aspects ofComputing, vol. 8, no. 5,
pp. 499-538, 1996.
1-4244-2398-9/08/$20.00 ©2008 IEEE
541
DSN 2008: Tai et al.