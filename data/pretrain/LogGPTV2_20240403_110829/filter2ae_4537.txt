# 【缺陷周话】第33期：错误的资源关闭
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 1、错误的资源关闭
程序员手动创建或申请的资源，都需要进行相应的关闭操作，选择的关闭方法应当和创建或申请的方法相对应。例如C语言中常见的打开文件的函数
fopen()，其函数原型为：
    FILE *fopen(char *pname,char *mode);
当使用 fopen() 函数打开文件时，应选择其对应的关闭函数 fclose()，避免使用错误的资源关闭函数。此外还有 freopen()、
_open()、 CreateFile() 等函数，在使用时也需要注意此类问题。
详细请参见CWE-404: Improper ResourceShutdown or Release。
## 2、 错误的资源关闭的危害
使用错误的资源关闭方法，将会导致非预期的程序行为，甚至可能导致程序崩溃。
## 3、示例代码
示例源于Samate Juliet Test Suitefor C/C++ v1.3
(https://samate.nist.gov/SARD/testsuite.php)，源文件名：CWE404_Improper_Resource_Shutdown__fopen_w32_close_01.c。
### 3.1缺陷代码
在上述示例代码中，第27行使用 fopen() 函数打开文件，在第31行使用 _close() 进行关闭，由于没有使用 fopen() 函数对应的关闭函数
fclose()，因此存在“错误的资源关闭”问题。
使用代码卫士对上述示例代码进行检测，可以检出“错误的资源关闭”缺陷，显示等级为高。如图1所示：
图1：错误的资源关闭检测示例
### 3.2 修复代码
在上述修复代码中，Samate给出的修复方式为： 在第28行使用 fopen() 函数打开文件，并在第32行使用 fclose()
进行关闭。从而避免了错误的资源关闭问题。
使用代码卫士对修复后的代码进行检测，可以看到已不存在“错误的资源关闭”缺陷。如图2：
图2：修复后检测结果
## 4、 如何避免错误的资源关闭
要避免错误的资源关闭，需要注意以下几点：
（1）在进行资源关闭时，要根据资源申请或创建使用的方法来合理选择关闭方法，避免错误的资源关闭。
（2）使用源代码静态分析工具，可以有效对该类问题进行检测。