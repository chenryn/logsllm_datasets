Min recovery ending loc's timeline:   6  
Backup start location:                29/2D000028  
Backup end location:                  0/0  
End-of-backup record required:        no  
```  
如果我们调用了pg_stop_backend，那么会在XLOG写一笔XLOG_BACKUP_END的RECORD。  
```  
do_pg_stop_backup@src/backend/access/transam/xlog.c  
        stoppoint = XLogInsert(RM_XLOG_ID, XLOG_BACKUP_END, &rdata);  
......  
        /*  
         * Force a switch to a new xlog segment file, so that the backup is valid  
         * as soon as archiver moves out the current segment file.  
         */  
        RequestXLogSwitch();  
```  
然后，在恢复时，如果遇到这个RECORD，会把 ControlFile->backupStartPoint 改成0，也就是我们看到的正常的数据。  
```  
/*  
 * XLOG resource manager's routines  
 *  
 * Definitions of info values are in include/catalog/pg_control.h, though  
 * not all record types are related to control file updates.  
 */  
void  
xlog_redo(XLogRecPtr lsn, XLogRecord *record)  
{  
......  
        else if (info == XLOG_BACKUP_END)  
        {  
......  
                if (ControlFile->backupStartPoint == startpoint)  
                {  
......  
                        ControlFile->backupStartPoint = InvalidXLogRecPtr;  
```  
那么ControlFile->backupStartPoint == startpoint又是什么情况下会满足呢？  
其实是在启动STARTUP进程时，判断有没有一个LABEL文件，有的话，就会将ControlFile->backupStartPoint改为checkPoint.redo。  
```  
/*  
 * This must be called ONCE during postmaster or standalone-backend startup  
 */  
void  
StartupXLOG(void)  
{  
......  
        /* REDO */  
        if (InRecovery)  
        {  
.......  
                /*  
                 * Set backupStartPoint if we're starting recovery from a base backup.  
                 *  
                 * Also set backupEndPoint and use minRecoveryPoint as the backup end  
                 * location if we're starting recovery from a base backup which was  
                 * taken from a standby. In this case, the database system status in  
                 * pg_control must indicate that the database was already in  
                 * recovery. Usually that will be DB_IN_ARCHIVE_RECOVERY but also can  
                 * be DB_SHUTDOWNED_IN_RECOVERY if recovery previously was interrupted  
                 * before reaching this point; e.g. because restore_command or  
                 * primary_conninfo were faulty.  
                 *  
                 * Any other state indicates that the backup somehow became corrupted  
                 * and we can't sensibly continue with recovery.  
                 */  
                if (haveBackupLabel)  
                {  
                        ControlFile->backupStartPoint = checkPoint.redo;  
                        ControlFile->backupEndRequired = backupEndRequired;  
```  
## 参考  
1\. src/backend/access/transam/xlog.c  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")