### Roles
_![016](../../assets/slides/incident_response/incident_response.016.jpeg)_
_016. Roles of incident response._
So let's talk about the [roles involved in our process](../../before/different_roles.md). I'm going to introduce the roles one by one, but I don't want you to get scared by the number that will be on the slide by the end. We didn't start with this many roles, and we don't have people filling all the roles in every incident. This is just showing the available roles, and defining what they are. The process and roles will grow and shrink to fit the size of the incident at hand.
While we don’t use exactly the same roles as ICS, we picked out the ones that matter for us in order to get our role structure.
* First up is the **Incident Commander**, usually abbreviated to IC. They're the person in charge and the most important role in the process. They make all the decisions, and all information flows up to them. What they say goes. I'm going to be talking more about this role in a moment, so we'll continue on with the others for now.
* Next up we have the **Deputy**. This is basically a backup Incident Commander. They're training as an IC and will be listening to all the same information. They help to make sure nothing gets missed by the IC, and acts as a hot-swap standby should the IC want to handover command. This is one of those roles you won't need if you're just starting out. For a long time our Deputy and Scribe would be the same person.
* Then we have the **Scribe**. The scribe's job is to keep an accurate timeline of events. What has happened, when it happened, and the key decisions that have been made. We use Slack for this, and the Scribe will be writing down notes into a Slack room, which gets us nicely timestamped data. It's worth noting that they're **not doing a direct dictation** of a voice call. It's not "John said this, Mary said this". It's more like "We're deciding between A and B, we've decided on A".
Together, these roles are called the Command Staff.
* Next we have the **Customer Liaison**. This is a member of our support team, and their job is to handle the two-way interaction with our customers. So they'll update customers as to what is going on, whether that's via email, tweet, or updating our status page. But they'll also let us know what customers are saying too. If we're getting 100's of support requests, or no one has raised a ticket at all. Since this can be useful information in tracking down a cause, and determining the level of risk we can take during our recovery.
* The **Internal Liaison** is a relatively new role in our process. Their job is to handle all the interaction with internal teams, such as our executives, or our marketing teams, and so on. We have a separate Slack channel for incident updates, to which the Internal Liaison will post regular status updates, and answer any questions from the rest of the organization. This keeps those questions out of our main response, but allows people to still get answers. The internal liaison will also page other teams as necessary if they're needed on the response. Again, this isn't a role you'll need for most companies, for a while this was also handled by our Deputy/Scribe role.
Together, these are the liaisons.
* Finally, we have the **Subject Matter Experts**, or SME's. These are the people who will actually be fixing the problem. They'll be the ones logging into servers, changing code, and running commands.
Today, I’m going to focus on one role in particular, that of the Incident Commander.
---
### Incident Commander
![017](../../assets/slides/incident_response/incident_response.017.jpeg)
_017. Incident commander. [Docs Reference](../../training/incident_commander.md)_
The incident commander is one of the most important roles you can have. Even if you don’t have deputy, scribe, customer liaison, etc. The Incident Commander is one you should get first (well, after the SME’s of course, you probably need someone to solve your problem before you need someone to coordinate the response).
---
### Single Source of Truth
![018](../../assets/slides/incident_response/incident_response.018.jpeg)
_018. Single source of truth._
They’re the single source of truth during an incident, and are the ones in charge. The big cheese. They make all decisions, and no action should be performed unless the IC has said so.
---
### Highest Ranking Person
![019](../../assets/slides/incident_response/incident_response.019.jpeg)
_019. Highest ranking person._
No matter their day-to-day role, and IC is always becomes the highest ranking person on the response. They're running the show. Remember what we talked about earlier with the mentality shift? Well, this is one of the things that will change during an incident.
???+ aside hide-arrow "Is the Incident Commander a dictator?"
    Only in the sense that they are in charge and their decisions cannot be overruled. They do not rule by force, or go on power trips and order people around for the sake of it. A good Incident Commander will **listen** to their experts and make the best decision they can based on the information available. Incident Commanders should show empathy towards all responders.
---
### Higher than the CEO
![020](../../assets/slides/incident_response/incident_response.020.jpeg)
_020. Higher than the CEO._
Even if the CEO joins the response, the IC still outranks them in an incident response situation. **This is absolutely critical for successful incident response, but it does require buy-in from your executives.** Please don't surprise your CEO with this, it will not go well for you.
Whether this works for you will depend on your organization. This is how we do it at PagerDuty and it works well for us, but I can imagine it not being easy to get this sort of buy-in in other organizations. I used to work in the airline industry, and I don't think this rule would fly there (Get it? Airline industry. Fly. Hello? This thing on?).
---
### Not a Resolver
![021](../../assets/slides/incident_response/incident_response.021.jpeg)
_021. Not a resolver._
Importantly, the IC doesn't resolve the incident, they coordinate and delegate all tasks. They're the conductor of the orchestra, they're not playing an instrument. They're not acting as a resolver, and shouldn't be looking at graphs, or logging into servers.
This can be especially hard sometimes if the IC is an engineer in their day-to-day role, as they may naturally want to jump in to try and help, but that urge must be resisted if they're acting as an IC. If they absolutely are the only person who can solve the problem, then they should handover to another Incident Commander and assume the role of a Subject Matter Expert instead. We'll talk a bit more about this scenario later.
---
### BSOD
_![022](../../assets/slides/incident_response/incident_response.022.jpeg)_
_022. Uh oh!_
Oh dear, that’s not good. Did something go wrong? Seems we have ourselves an incident!
So what do you do when things break in the middle of the night? What's the first step to responding to an incident?
It turns out that the first step in any incident response is always the same, whether you're a small startup or a large enterprise. Whether there's 25 cents on the line, or 25 billion dollars.
---
### Don't Panic
![023](../../assets/slides/incident_response/incident_response.023.jpeg)
_023. Don't panic._
**Don’t panic.** It elevates stress, and causes others to panic. It’ll end up hurting your incident response a lot more.
_It's OK to panic on the inside._ We're only human after all. It's a natural reaction to panic in these sorts of situations a little bit. Everything about getting paged is designed to get adrenaline flowing. Loud pager sounds and so on. Just try not to outwardly show panic, because it will cause others to do the same. Act calm, and others will follow suit.
Those with experience will stay calm, and that can make the difference between a chaotic incident, and one that resolves smoothly. So don’t panic!
---
### IC Introduction
![024](../../assets/slides/incident_response/incident_response.024.jpeg)
_024. "Hi, I'm Rich, I'm the Incident Commander". [Docs Reference](../../training/incident_commander.md#start-of-call-announcement)_
But today we're lucky to have an IC here.
> Hi, I'm Rich, I'm the Incident Commander.
Every call should start like this. Well, use your own name and not mine, but you get the idea.
There are a few important things here with the way I phrased this.
??? aside  "What if you join a call and there's no IC?"
    It doesn't always work out that the first person to join the call is the incident commander. So what do you do in that case? Some guides will recommend the first person who joins acts as the Incident Commander, regardless of training. ICS usually works this way, where the first person on-site acts as the IC until someone more qualified arrives. We tried that and found it just doesn't work in practice. For example, let's say that the first person to join your response call becomes the acting IC. After an incident occurs, how long do you think it will be before one of your responders joins the call?
    Yeah, turns out it's about 10 minutes. Because people are afraid of being the IC. You can't force someone to be an IC, and we prefer to make sure the acting IC at least has the training. It may add a few minutes to the start of an incident, but it makes it go smoother and quicker overall. If a trained IC joins the call and there's isn't an existing IC, they will take on the role. They ask "Is there an IC on the call?.... hearing nothing, this is X, I'm the Incident Commander".
    It's also worth noting that the on-call IC doesn't automatically take over when they join. Whoever is the active IC on the call is in charge until they perform a handover.
---
### Introduce Yourself
![025](../../assets/slides/incident_response/incident_response.025.jpeg)
_025. Introduce yourself._
Firstly, I introduced myself by name. I didn't just say "Hi, I'm the IC". I'm not an emotionless robot.
Introductions are important so that people know who you are. They’ll usually be referring to you as "IC", rather than by name, but it still humanizes you more. If you introduce yourself by name people will treat you differently and it'll help to make things go a little bit smoother.
You’ll find soon that a lot of the job of an IC involves psychology and phrasing more than technical expertise.
---
### Say Incident Commander
![026](../../assets/slides/incident_response/incident_response.026.jpeg)
_026. Say "Incident Commander"._
Then I said that I'm the "Incident Commander". I didn't abbreviate to IC, since new people might not understand the lingo yet. Stating it that way made it very clear. We want to make sure we **always use clear language**. Additionally, saying the word "Commander" here will subconsciously instill in people that you're in charge.
---
### Good Communication
![027](../../assets/slides/incident_response/incident_response.027.jpeg)
_027. Good communication is essential._
Good communication is essential. A breakdown in communication can hamper the entire response process. One of your jobs as an IC is to keep the lines of communication clear and maintain discipline. Don’t throw weird or unfamiliar acronyms into the discussion.
---
### Acronym Overload
![028](../../assets/slides/incident_response/incident_response.028.jpeg)
_028. Acronym overload._
Too many acronyms and internal lingo will upset newcomers and adds cognitive overhead. As shown in this completely realistic example.
It takes much longer to say "Let's get the Incident Commander on the response call, then get a bacon, lettuce, and tomato sandwich for all the Subject Matter Experts". But it's much clearer what is being asked for.
---
### Clear is Better Than Concise
![029](../../assets/slides/incident_response/incident_response.029.jpeg)
_029. Clear is better than concise. [Docs Reference](../../before/call_etiquette.md#lingo)_
Clear instructions are more important than concise instructions. You want to **favor explicit and clear communication over all else**. If you have the choice between taking 5 seconds and abbreviating, or taking 30 seconds and making it clear, take 30 seconds. Don’t give a long essay, but make sure the instructions are unambiguous.
There's a tendency to want to rush through an incident, that every second counts, and that you need to use abbreviations to get the fastest possible response. Unfortunately you'll find that using unfamiliar and unclear language will almost always prolong an incident.
---
### What's Wrong?
![030](../../assets/slides/incident_response/incident_response.030.jpeg)
_030. What's wrong? [Docs Reference](../../training/incident_commander.md#size-up)_
OK, so how do we actually start solving our problem?
The first step is to collect information from your Subject Matter Experts (SME) for their services/area of ownership. Ask what's wrong, and gather the symptoms of the incident. Is it only affecting one system? Is it affecting everything? Was there a specific metric that triggered an alarm?
We call this “[sizing up](../../training/incident_commander.md#size-up)”. We're trying to get an idea of the scope of the incident.
---
### What Actions Can We Take?
![031](../../assets/slides/incident_response/incident_response.031.jpeg)
_031. What actions can we take? [Docs Reference](../../training/incident_commander.md#stabilize)_
Next we want to ask our experts what they want to do to fix their systems. Remember, the IC isn't coming up with solutions, we want to ask the people who are the experts for their services what they want to do to. They will have a much better idea of the actions that can be taken. We want to collect proposed repair actions.
---
### What Risks Are Involved?
![032](../../assets/slides/incident_response/incident_response.032.jpeg)
_032. What are the risks involved?_
Importantly, we also want to make sure we ask what risks are involved with the proposed actions. "What impact will that have?", "What are the risks involved?", "How confident are you it will work?".
Without this information, we can't make an informed decision. For example, if we need to restart our servers to fix a problem, we could either reboot them all at once and be done in 30 seconds, or we could do a rolling restart and take 10 minutes. On the surface of it, the first option sounds like the best.
But, if we ask for the risks involved, we'll learn that the first option will cause downtime for everyone in those 30s, whereas the second option, while slower, will result in no downtime for end users. This can change the decision you make, so it's important to get the information.
---
### Make a Decision
![033](../../assets/slides/incident_response/incident_response.033.jpeg)