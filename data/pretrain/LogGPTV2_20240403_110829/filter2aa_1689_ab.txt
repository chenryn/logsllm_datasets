Large integers will not notice if small amounts are missing. 
• 
Demo ! 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Profit with loss of precision on large 
integers 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Random numbers 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Random numbers 
• 
Present in server side processors 
• 
Not any random number generator should be used for 
cryptographic purposes 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Random numbers in XSLT 
• 
It is a function from EXSLT (an extension to XSLT) 
• 
The math:random() function returns a random 
number from 0 to 1 
• 
A random number is said to be a number that lacks any 
pattern 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Random numbers in XSLT (cont’d) 
• 
We use pseudo random numbers for simple things  
(i.e., random.random() in Python) 
• 
We rely in cryptographically secure pseudo random 
numbers for sensitive stuff  
(i.e., random.SystemRandom() in Python) 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Let’s take a look under the hood 
libxslt 
xalan-c 
xalan-j 
saxon 
pseudorandom 
pseudorandom 
pseudorandom 
pseudorandom 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Only pseudo random numbers for XSLT 
• 
rand(), srand(), java.lang.Math.Random(): 
implementations only returns pseudo random values 
• 
A good definition comes from the man page of rand() 
and srand(): “bad random number generator”.  
• 
No cryptographic usage should be done for these 
values.  
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Initialization vector 
• 
What happens if there is no initialization vector ? 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Initialization vector (cont’d) 
• 
You may know in advance which values will be 
generated 
• 
Random functions require an initial initialization value 
to produce random values 
• 
Let’s review which random functions are using an IV 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Initialization vector (cont’d) 
libxslt 
xalan-c 
xalan-j 
saxon 
Without IV 
With IV 
With IV 
With IV 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Output of random() in libxslt 
• 
Define a simple XSLT to see the output of 
math:random()
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Output of random() in libxslt (cont’d) 
• 
Random means without a pattern. Can you spot the 
pattern in the following two executions of libxslt ? 
• 
They are producing the same output ! 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Python random.random() vs  
libxslt Math:random()
libxslt 
Python 
libxslt 
Python 
Execution #1 
Execution #2 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
No initialization vector for libxslt 
• 
Without some external seed value (such as time), any 
pseudo-random generator will produce the same 
sequence of numbers every time it is initiated.  
• 
If math:random() is used in libxslt for sensitive 
information, it may be easy to get the original plaintext 
value. 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Random summary 
Type	
IV	
  ?	
server	
xalan-­‐c	
  (apache)	
pseudorandom	
yes	
xalan-­‐j	
  (apache)	
pseudorandom	
yes	
saxon	
pseudorandom	
yes	
xsltproc	
pseudorandom	
no	
php	
pseudorandom	
no	
python	
pseudorandom	
no	
perl	
pseudorandom	
no	
ruby	
pseudorandom	
no	
• 
TL;DR. values may be predicted 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Violate the Same Origin Policy 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Violate the Same Origin Policy 
• 
Present in client side processors (only web browsers). 
• 
The Same-Origin Policy says that you can’t use a web 
browser to read information from a different origin 
• 
Let’s ignore that statement for a moment 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
What is the Same-Origin Policy ? 
• 
An origin is defined by the scheme, host, and port of a 
URL. 
• 
Generally speaking, documents retrieved from distinct 
origins are isolated from each other. 
• 
The most common programming language used in the 
DOM is JavaScript. But not necessarily ! 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Same-Origin Policy – Valid scenario 
http:// 
example.com 
:80 
/foo 
http:// 
example.com 
:80 
http:// 
example.com 
:80/private/ 
..or.. 
http:// 
example.com 
:80 
/images/ 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Same-Origin Policy – Invalid Scenarios 
https:// 
example.com 
:80 
http:// 
evil.com 
:80 
http:// 
example.com 
:8080 
http:// 
example.com 
:80 
Different scheme 
Different hostname 
Different port 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
XSLT functions that read XML 
• 
document(): allows access to XML documents other 
than the main source document. 
• 
Having that defined, how can we read it ? 
–  copy-of: copy a node-set over to the result tree without 
converting it to a string. 
–  value-of: create a text node in the result tree and 
converting it to a string 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Bing.com uses XHTML. I’m logged in. 
How can I access private stuff ? 
DOM element containing the name is called “id_n” 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Let’s put all the pieces together 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Demo ! 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Violate the Same Origin Policy summary 
• 
TL;DR: 
–  Safari allows cross origin information. 
–  Internet Explorer shows a warning message, retrieves 
data, but there is no private information. 
–  Chrome, Firefox and Opera don’t retrieve data. 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Information Disclosure (and File Reading) 
through Errors 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Information Disclosure (and File Reading) 
through Errors 
• 
Present in server side and client side processor. Focus is 
on server side processors because relies on the process 
having access to the file. 
• 
There are no functions to read plain text files in XSLT v1.0 
• 
W3C says is not possible. But what if… 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
XSLT functions to read files 
• 
Read other XML documents: 
–  document(): “allows access to XML documents other 
than the main source document” 
• 
Read other XSLT documents: 
–  include(): “allows stylesheets to be combined without 
changing the semantics of the stylesheets being 
combined” 
–  import(): “allows stylesheets to override each other” 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Create a simple text file with 3 lines 
$ echo -e "line 1\nline 2\nline 3" > testfile 
$ cat testfile  
line 1 
line 2 
line 3 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Read the text file using document() 
• 
“If there is an error retrieving the resource, then the 
XSLT processor may signal an error;” 
• 
Xalan-C, Xalan-J and Saxon output: 
Content is not allowed in prolog. 
Expected behaviour 1/2 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Read the text file using document()
(cont’d) 
• 
“…If it does not signal an error, it must recover by 
returning an empty node-set.”  
• 
Ruby returns an empty node-set: 
Expected behaviour 2/2 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Read the text file using document()
(cont’d) 
• 
However, libxslt does not behaves like this. Xsltproc, 
PHP, and Perl will output the first line of our test file 
(Ruby will also do it later): 
testfile:1: parser error : Start tag expected, '<' not found 
line 1 
^ 
Unexpected behaviour 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Maximize the results with one line 
• 
The previous processors will expose the first line of the 
test file 
• 
Which files have an interesting first line ? 
–  /etc/passwd: Linux root password 
–  /etc/shadow: Linux root password 
–  .htpasswd: Apache password 
–  .pgpass: PostgreSQL password 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
XML document generation… failed 
• 
Reading /etc/passwd using xsltproc: 
• 
Reading .htpasswd using PHP: 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Got root ? Grab /etc/shadow 
• 
Reading /etc/shadow using Ruby: 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Reading files summary 
document()	
   import()	
   include()	
server	
xalan-­‐c	
  (apache)	
no	
no	
no	
xalan-­‐j	
  (apache)	
no	
no	
no	
saxon	
no	
no	
no	
xsltproc	
yes	
yes	
yes	
php	
yes	
yes	
yes	
python	
no	
no	
no	
perl	
yes	
yes	
yes	
ruby	
no	
yes	
yes	
• 
TL;DR. You can read the first line of a non XML file through 
errors. 
IOActive, Inc. Copyright ©2015.  All Rights Reserved. 
Conclusions 
• 
When the attacker controls either the XML or the XSLT 
they may compromise the security of a system 
• 
Confidentiality and integrity can also be affected 
without controlling either document 
• 
Check your code (or someone else code) 
IOActive, Inc. Copyright ©2015  All Rights Reserved. 
Questions ? 
IOActive, Inc. Copyright ©2015  All Rights Reserved. 
Thank you 
• 
Alejandro Hernandez 
• 
Ariel Sanchez 
• 
Carlos Hollman 
• 
Cesar Cerrudo 
• 
Chris Valasek 
• 
Diego Madero  
• 
Elizabeth Weese 
• 
Jennifer Steffens 
• 
Joseph Tartaro 
• 
Lucas Apa 
• 
Mariano Nogueira 
• 
Matias Blanco 
• 
Sofiane Talmat 
• 
Yudell Rojas 
IOActive, Inc. Copyright ©2015.  All Rights Reserved.