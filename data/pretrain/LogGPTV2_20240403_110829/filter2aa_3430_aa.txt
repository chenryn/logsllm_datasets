# QuintessenceLabs: Are Quantum Computers Really a Threat to Cryptography?
## A Practical Overview of Current State-of-the-Art Techniques with Some Interesting Surprises
Â©2018 QuintessenceLabs. All rights reserved. Commercial in Confidence. Data Uncompromised

### About the Author
- **Cryptography & Malware Researcher at TrustDefender**
- **CTO @ ThreatMetrix**
- **Quantum Technologies @ Qlabs**
- [www.quintessencelabs.com](http://www.quintessencelabs.com)

### Cryptography Basics
#### Symmetric Cryptosystem (Shared Secret Key)
- The same key (the secret key) is used for both encryption and decryption.
- Examples: AES

#### Asymmetric Cryptosystem (Public & Private Key)
- Uses a public key for encryption and a private key for decryption.
- Examples: RSA, ECC

### Current Cryptographic Security
- **Computationally Secure Cryptosystems:**
  - These systems are secure because they are not decodable with available computing power, but there is no proof that they cannot be broken.
  - For example, factoring a 2048-bit RSA key using the best classical algorithm would require approximately \(10^{34}\) steps and about 317 trillion years on a classical ThZ computer (with a trillion operations per second).

- **Information-Theoretic Cryptosystems:**
  - Examples include the One-Time-Pad.
  - To fully benefit from the security proof, many assumptions must be met, such as the secret key being truly random and having the same length as the message.

### Quantum Attacks on Cryptosystems
#### Symmetric Encryption (e.g., AES, N=256)
- **Classical Attack:**
  - The key can be recovered classically with a computational complexity of \(O(2^N)\).
- **Quantum Attack (Grover's Algorithm):**
  - Provides a quadratic speedup, reducing the complexity to \(O(2^{N/2})\).
  - Doubling the key length can mitigate this speedup.

#### Asymmetric Encryption (e.g., RSA, ECC)
- **Usage:**
  - Widely used for negotiating symmetric keys (e.g., in VPNs, TLS, Diffie-Hellman, Digital Signatures, etc.).
- **Quantum Algorithms:**
  - Multiple quantum algorithms are available, and these will be the focus of this discussion.

### Shor's Algorithm
- **Overview:**
  - Shor's algorithm turns the problem of factoring into a period-finding problem.
  - It consists of three phases:
    1. **Turn Factoring Problem into Period Finding:**
       - Computed on a classical computer.
    2. **Find the Period Using Quantum Fourier Transform:**
       - This phase is responsible for the quantum speedup.
    3. **Use the Period to Find the Factors:**
       - The final step to factor the number.

### Summary
- Quantum computers pose a significant threat to current cryptographic systems, particularly asymmetric ones.
- Symmetric encryption can be made more resistant by doubling the key length.
- Shor's algorithm is a powerful quantum tool that can efficiently factor large numbers, thus breaking many current asymmetric cryptosystems.

For more information, visit [QuintessenceLabs](http://www.quintessencelabs.com).