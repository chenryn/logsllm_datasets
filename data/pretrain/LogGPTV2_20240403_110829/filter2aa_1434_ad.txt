connection would time out and a diﬀerent circuit would be selected. So in practice, if the wrong probability
distribution was selected, the network would converge at a diﬀerent one. Unfortunately the standard queuing
theory models cannot handle this case; we need to move to a simulation rather than using equations and
assumptions, to estimate the real eﬀect.
Impact: Low-medium.
Eﬀort: Medium, since we still need to get a better sense of the correct network load to expect, and we
need to experiment to see if the model actually matches reality.
Risk: Low, since we can always back out the changes.
Plan: It seems clear that some adjustments should be done in terms of biasing selection toward the
faster relays.
The exact load level to anticipate remains an open question though.
Fortunately, in our
new networkstatus algorithm, the directory authorities declare the bandwidths for each relay. So we can
just reweight them on the ﬂy and clients will use the new numbers. That means once enough clients have
upgraded to using the bandwidths speciﬁed in the networkstatus, we can start to experiment with shifting
the biases and see what results we get.
4.2
The bandwidth estimates we have aren’t very accurate
Weighting relay selection by bandwidth only works if we can accurately estimate the bandwidth for each
relay.
Snader and Borisov [15] examined three strategies for estimating the bandwidth for each relay. The ﬁrst
strategy was Tor’s current approach of looking for peaks in the actual bytes it’s handled in the past day. The
second strategy was active probing by the directory authorities. For their third strategy, they proposed that
12
Performance Improvements on Tor
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
0
2000
4000
6000
8000
0.000
0.010
0.020
0.030
Bandwidth (cells/s)
Selection probability
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G
G
G GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G
G
G
GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGG
GGGGG
G
GG
G
G
G
GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGG
GGGGG
G
GG
G
G
G
GG
G
Optimum node selection probability
50%
75%
90%
>99%
Figure 1: Optimum relay selection probabilities for a variety of network loads. Tor is currently at around
50% utilization. The relay selection probabilities currently used by Tor are shown in black.
13
Performance Improvements on Tor
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
0
2000
4000
6000
8000
0.000
0.005
0.010
0.015
Bandwidth (cells/s)
Selection probability − Tor's selection probability
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGG
GGGGG G
GG G G
G GG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGG
GGGGG
G
GG
G
G
G
GGG
G
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGG
GGGGG
G
GG
G
G
G
GG
G
Selection probabilility compared to Tor
50%
75%
90%
>99%
Figure 2: Diﬀerence between Tor’s current relay selection probabilities and the optimum, for a variety of
network loads. For Tor’s current network load (≈ 50%) shown in pink, the slowest relays are not used at all,
and the slower relays are favoured less.
14
Performance Improvements on Tor
0
20
40
60
80
100
0
5
10
15
Latency for varying network loads
Network load (%)
Average queuing delay (ms)
G
G
G
G
Figure 3: Average network latency against network load. Three relay selection probabilities are shown,
optimized for 50%, 75%, and 90% network load. The Tor relay selection algorithm is also included (black).
The dots on the x axis show the level of network load at which the relay selection probability distributions
are optimized for. The line is cut oﬀ when the model predicts that at least one relay will have an inﬁnite
queue length, which occurs before load = capacity for all relay selection algorithms except for Tor’s current
one.
15
Performance Improvements on Tor
each Tor relay opportunistically monitor the data rates that it achieves when communicating with other Tor
relays. Since currently Tor uses a clique topology, given enough time, all relays will communicate with all
other Tor relays. If each Tor relay reports their measurements back to the directory authorities, then the
median report should be a good estimate of that relay’s bandwidth. As a bonus, this estimate should be
diﬃcult to game, when compared to the current approach of self-advertising bandwidth capacity.
Experiments show that opportunistic bandwidth measurement has a better systematic error than Tor’s
current self-advertised measure, although has a poorer log-log correlation (0.48 vs. 0.57). The most accurate
scheme is active probing of capacity, with a log-log correlation of 0.63, but this introduces network overhead.
All three schemes suﬀer from fairly poor accuracy. Perhaps this inaccuracy is due to some relays with
high variance in bandwidth capacity? We need to explore this area more to understand why our estimates
are not as good as they could be.
Impact: Low-medium.
Eﬀort: Medium, since we still need to get a better sense of the correct network load to expect, and we
need to experiment to see if the model actually matches reality.
Risk: Low, since we can always back out the changes.
Plan: More research remains here to ﬁgure out what algorithms will actually produce more accurate
bandwidth estimates. As with Section 4.1 above, once we do have some better numbers, we can change the
weights in the directory, and clients will immediately move to the better numbers. We should also experiment
with augmenting our estimates with active probes from Mike’s SpeedRacer tool.
4.3
Bandwidth might not even be the right metric to weight by
The current Tor network selection algorithm biases purely by bandwidth. This approach will sometimes
cause high latency circuits due to multiple ocean crossings or otherwise congested links. An alternative
approach would be to not only bias selection of relays based on bandwidth, but to also bias the selection of
hops based on expected latency.
Micah Sherr is ﬁnishing his PhD thesis at Penn under Matt Blaze, exploring exactly this issue. In the
past we’ve avoided any sort of path selection algorithm that requires pairwise measurements of the network,
because communicating N 2 measurements to clients would take too much bandwidth. Micah solves this
problem by using a virtual coordinate system – a three or four dimension space such that distance between
relays in the virtual coordinate space corresponds to the network latency (or other metric) between them.
His experiments show that we could see a signiﬁcant speedup in the Tor network if users choose their
paths based on this new relay selection algorithm. More research remains, of course, but the initial results
are very promising.
On the other hand, reducing the number of potential paths would also have anonymity consequences,
and these would need to be carefully considered. For example, an attacker who wishes to monitor traﬃc
could create several relays, on distinct /16 subnets, but with low latency between them. A Tor client trying
to minimize latency would be more likely to select these relays for both entry than exit than it would
otherwise. This particular problem could be mitigated by selecting entry and exit relay as normal, and only
using latency measurements to select the middle relay.