# Title: Fived: A Service-Based Architecture Implementation to Innovate at the Endpoints

## Authors
- D. J. Capelis, Department of Computer Science, University of California, Santa Cruz, Santa Cruz, CA, PI:EMAIL
- Darrell D. E. Long, Department of Computer Science, University of California, Santa Cruz, Santa Cruz, CA, PI:EMAIL

## Abstract
Security functions such as access control, encryption, and authentication are typically managed by individual applications on the modern Internet. There is no unified system to implement these critical features. Existing network-based access control does not integrate well with user authentication systems, leading to decisions based on the network location of a computer rather than the privilege level of its user. Although most layers of the Internet provide optional encryption, much of the data continues to be transmitted in plaintext. Application developers often make mistakes in security-critical code, resulting in vulnerabilities that can be exploited by malware or malicious attackers. We propose a unified session layer that integrates trustworthiness features into the core of the network. This would enhance the security of the Internet, leading to a safer and more secure global network.

## Categories and Subject Descriptors
- C.2.1 [Network Architecture and Design]: Network communications
- C.2.2 [Network Protocols]: Protocol architecture (OSI model)

## General Terms
- Design, Management, Security

## 1. Introduction
Our solution is a session layer that adds a set of core security services to the network. Fived, our prototype of this new session layer, provides services that integrate access control, authentication, encryption, and other features directly into the network. Developers of new applications can rely on our session layer instead of writing their own code for these tasks. Network administrators will have the tools to specify access based on user privileges rather than IP addresses and ports.

Our contribution lies in synthesizing many related concepts into a comprehensive, deployable, and extensible architecture that paves the way for future innovations. Our session layer is designed for practical deployment and will serve as a foundation for future Internet research, allowing designers to rapidly prototype and test new core services. Our session initiator design allows applications to move away from the notion of addresses and ports and towards the use of two strings: one specifying a host and one specifying a service. This not only brings needed features to the Internet but also ensures that future researchers have the same opportunities.

## 2. Deployability
We present an architecture focused on deployability over theoretical cleanliness. Current estimates suggest that the exhaustion of IPv4 addresses will occur around SIGCOMM 2011 [1]. Over the next several years, the Internet will need to transition to IPv6. Unfortunately, this means any realistic deployment of new networking technologies reliant on commercial network operators adopting new equipment, standards, or practices will be delayed.

However, Fived follows the end-to-end principle [3] and can be deployed at the edges of the network. Conservative core network operators do little to hinder the adoption of our session layer. A key component of a realistic plan is that the architecture should not require a large critical mass before organizations begin seeing benefits. Users can start using our architecture and enjoy its benefits immediately. Simply downloading our software will allow them to control access to their internal services. We have designed multiple levels of compatibility software to ease the transition for a diverse range of network environments. These comprehensive sets of compatibility libraries, layers, and runtime tools provide users with the ability to benefit from our architecture even before their network applications are adapted to interact with the session layer natively.

## 3. Core Services
The core services are the primitives we have selected for our session layer prototype. These primitives can be used to embed trustworthiness features into the Internet. We have developed a prototype called Fived, which currently runs in userspace and implements a portion of our core services. The session layer is loosely derived from the tcpmux protocol specified in RFC 1078 [2], which is simple and can be implemented in under 100 lines of C. Each of our core service extensions takes anywhere from tens to several hundred lines of code. These services work together to provide a broad range of session functionalities, including:

- **Service Multiplexing**: Allows a single session to handle multiple data streams.
- **Role-Based Access Control**: Provides fine-grained access control based on user roles.
- **Transparent Session-Wide Encryption**: Ensures that all data within a session is encrypted.
- **Mobility**: Supports seamless session mobility across different network environments.
- **Virtual Hosting**: Enables virtual hosting and VPN-like functionality.
- **Distributed Identities**: Manages distributed identity verification and management.

The following table lists the core primitives designed for Fived during its initial deployment:

| Fived Command | Use(s)                       |
|---------------|------------------------------|
| LIST          | Service discovery             |
| MULTIPLEX     | Multiple streams              |
| AUTH          | Access control, authentication|
| TLS           | Encryption                    |
| HOST          | Virtual hosting, VPN          |
| GET/VERIFYAUTHKEY | Distributed identity       |
| ATTACH/DETACH | Mobility                      |

These primitives allow Fived to provide functionality currently unavailable on the existing network, as well as functionality provided by firewalls, VPNs, virtual hosting, and zero-conf technologies. The advantage of Fived is its integration into the session layer, contrasting with current solutions that integrate poorly or not at all with the network and base access decisions on IP addresses rather than user privileges. Fived enables higher-level policy decisions without requiring hardware changes and remains easy to deploy.

### 3.1 Multiplexing
One of the most critical commands in our architecture is the MULTIPLEX command. It allows a single session to handle multiple data streams, transforming primitive sessions into a robust and feature-rich layer. The header format is as follows:

```
 0                      8                     16                    24                    31
Ver  3  4  5  6  7  Flags  Service ID  Length Until Next Header
```

This header allows Fived to note a version number for future changes, disambiguate between streams, and pass along information so legacy applications can use existing semantics to run on Fived sessions.

### 3.2 Session Initiator
A major component of our architecture is the session initiator, which aims to break the dependence of network applications on the lower layers of the Internet. While DNS allows applications to use names instead of addresses, the application remains responsible for name resolution and is bound to specific addressing semantics. The session initiator provides a new Application Programming Interface (API) that handles initial connection establishment, allowing applications to focus on higher-level logic.

## 4. Beyond Userspace
While part of our goals include changing the interface to the network, which inherently demands changes in userspace APIs, not all of our design is tied to userspace. The Fived prototype is implemented in userspace to lower the barrier of entry for early adopters. However, Fived is relatively simple and could be accelerated by, or implemented entirely in, hardware. The future of Fived may lie in a hybrid approach where the majority of session operations are handled in hardware, with fallbacks to a software session server daemon for less common operations requiring dynamic responses. This aligns well with the architecture of many large network devices in use today.

## 5. Conclusion
With a session initiator that moves applications away from reliance on lower layers and a widely extensible session layer that can add new core services with as little as 10 lines of C code, Fived serves as a catalyst for future innovation on the Internet. By providing a unified session layer that addresses some of the Internet's most pressing problems and enhances the network's security posture, Fived offers needed and vital services. With an end-to-end solution implemented concisely in software, Fived has the potential to become a reality.

## 6. References
[1] Hurricane Electric, “Hurricane Electric IPv4 Exhaustion Counters.” [Online]. Available: http://ipv6.he.net/statistics/

[2] M. Lotter. (1988, November) RFC 1078. [Online]. Available: http://www.rfc-editor.org/rfc/rfc1078.txt

[3] J. Saltzer, D. Reed, and D. Clark, “End-to-End Arguments in System Design,” ACM Transactions on Computer Systems (TOCS), vol. 2, no. 4, p. 288, 1984.