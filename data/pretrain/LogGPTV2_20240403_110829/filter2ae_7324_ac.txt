TTP 是 Tactics, Techniques, and
Procedures。得到的特征矩阵，更多的是在能力和基础设施方面上的特征，Procedures
上面的体现很弱。为了弥补这一点，推出事件链图来表示攻击事件的上下文，体现战术特征。
### 0x03-02 事件链图
在说事件链图时，先补充几个概念。
#### KILL CHAIN
入侵的本质：攻击者开发有效的载荷突破防御，在可信赖的环境中实现驻留，以便接下来的行动。这种行动可能是横向移动、窃密、破坏完整性或可用性等。
洛克希德马丁公司，在 2011 年发布的一篇论文《[Intelligence-Driven Computer Network Defense
Informed byAnalysis of Adversary Campaigns and Intrusion Kill
Chains](https://www.lockheedmartin.com/content/dam/lockheed-martin/rms/documents/cyber/LM-White-Paper-Intel-Driven-Defense.pdf) 》中描述了一种名为
Kill Chain 的入侵分析模型。通过对入侵的理解，杀伤链将攻击定义为7个阶段：
  * Reconnaissance (侦察)
  * Weaponization (武器构建)
  * Delivery (载荷投递)
  * Exploitation (漏洞利用)
  * Installation (驻留)
  * C2 (命令控制)
  * Actions on Objectives (采取行动)
前面的六个阶段都是为最后采取行动做铺垫。当入侵成功实现驻留之后，恶意软件将会通过 C2 命令执行一些横向移动、窃密、破坏、勒索等一些恶意行为。介绍 Kill
Chain 的文章已经很多，不再赘述。
#### 攻击总是线性的
攻击者不可能隔空，也不可能不借助外有资源和能力达成攻击目的。
举一个简单的例子：
    攻击者投递含有 cve-2017-11882 的钓鱼邮件，受害者打开了钓鱼文件，漏洞利用成功，文档从远程拉取执行了后门。
将描述的实体抽离出来，就是这个样子：
    outlook ->
    Explorer ->
    office ->
    EQNEDT32 ->
    [NET] ->
    Explorer ->
    Payload
简单梳理一下， 此描述的攻击动作，其中将使用到的行为主体有 outlook，资源管理器，office，公式编辑器，网络和最终的
payload。每一个步骤都是首尾相连，且没有中断的。
**攻击在观测空间内的动作一定是呈线性关系的。操作的对象、攻击的动作一定是有明确的目的和明显的前后关系。**
#### APT 分析单位
在此规定一下，事件为 APT 分析的最小单位，而不是样本。
    样本分析 ∈ 事件分析
    事件分析 ∈ 攻击战术分析
一次完整的分析要包含完整独立攻击上下文。当然，事件之间是关联的。比如，攻击者发送钓鱼邮件，其中包含钓鱼网站链接，受害者接收钓鱼邮件并且点开钓鱼链接下载并运行了恶意软件。这是三个独立事件：邮件钓鱼、钓鱼网站、恶意软件执行。
因为在杀伤链模型中，邮件钓鱼、钓鱼网站、恶意软件有各不相同入侵过程。虽然整个攻击是连贯的，还是要将各个步骤拆解出来，单独进行事件分析。
为了表述事件链图。指定以下场景：
    APT 组织对某机构进行攻击：
    攻击者通过 google hacking 搜寻到所属该单位的某雇员，通过社交平台找到其 163 邮箱。
    对该员工发送钓鱼邮件，其中包含 163 邮箱钓鱼网站。
    雇员查看钓鱼网站，泄漏了自己 163 邮箱密码。
    攻击者登陆邮箱，查看往来信件，锁定高价值目标。
    向高价值目标发送钓鱼邮件，其中包含有漏洞利用的文档。
    文档被打开，主机被感染，窃取到机密文件。
以上整个攻击，用事件链图描绘出来：
入侵的上下文用实线连接，事件之间的上下文用虚线连接。就构成了基于杀伤链的事件链图。
但是 APT
攻击手法是多样的，设立的场景中，钓鱼邮件进行恶意文档投递，水坑攻击不行么？最终后门是通过利用文档漏洞进行恶意代码执行，使用浏览器漏洞是不是更高效？所以我们将链图再进一步抽象，就得到最后成品：
攻击的入口和方法很多，但是攻击事件的上下文基本上是类似的。
因为场景十分简单，实际的 APT 攻击，制作出来的链图要比这一个丰富的多。
## 0x04 TTPs 的使用及归因判断
首先是特征矩阵，特征矩阵着重对 APT 活动技术上面进行描述。
两个活动 A 和 B，将特征矩阵由 A 到 B
进行映射，相同颜色部分标识相同特征。区域的颜色标识特征的置信度。当置信度达到一定阈值后。我们就可以将两个活动关联起来，认为是同一攻击组织所为。 之前 IoC
层级中提到，不同的 IoC 他的更改难易程度不同，所以各种 IoC 的价值也不同。在这里也是适用的。
在特征矩阵映中，映射到的部分权重也而不相同。参照 Pyramid of Pain，制作一个 Pyramid of Features：
自下而上，一共七层。最底层是样本中硬编码的字符串和样本中携带的主机特征、这些是最容易改变且经常用来迷惑分析人员的指标。往上是 C2
上面的特征，这些也很容易改变，但是同批样本，同一活动的 C2
结构基本相同。在往上是样本中的一些攻击技术和对抗技术。处于顶层的时加密方式、密钥、使用的攻击，漏洞利用技术、C2 和独特的算法。
加密方式和密钥以上在关联分析中的置信度已经很高了，特别是非对称加密的密钥，但是生存时间短，经常用过几次后就被弃用。再一个是使用的工具和漏洞利用技术，在
Pyramid of Pain 也提到了，工具的开发需要大量的人力金钱成本，这些特征不容易改变。
APT 组织，有基础设施重用的情况，如果看到相同的 C2，基本就确定活动关联，但是要注意 C2 生命的连续性，如果域名 1 月份注册到期，过了保护期，6
月份时再次活跃，是不是同一攻击者还需思量。独特的算法包括加密算法、有特点的攻击技术、对抗技术。
金字塔上的特征有下到上，特征的改变难度越高、价值越高，使得在分析时，权重和置信度也越高。
如果特征上，置信度叠加不高，就可以在事件链图中进行匹配：
A 是所掌握的某组织的事件链图，B 是独立攻击的事件链图。
红色部分为匹配到的相同特征，如果特征置信度达不到一定阈值。可以观察 A 攻击的上下文，与所掌握 B 的信息是否相符。如果上下文重合度高。可以增加 B∈A
的可能性。
TTP 是有生命周期的。APT 攻击在对抗中升级，技术、战术特征会在一段时间后变的面目全非。
归因判断不仅仅可以通过特征矩阵进行特征匹配，还可以通过事件链图攻击上下文进行佐证。
## 0x05 TTPs 落地的思考
一个东西提出后，首先要思考的是它产生的背景，自身的价值，适用的范围，解决的问题，存在的不足以及可行的落地场景和具体方案。