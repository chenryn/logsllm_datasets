title:CANARY - a reactive defense mechanism for Controller Area Networks
based on Active RelaYs
author:Bogdan Groza and
Lucian Popa and
Pal-Stefan Murvay and
Yuval Elovici and
Asaf Shabtai
CANARY - a reactive defense mechanism for 
Controller Area Networks based on Active RelaYs
Bogdan Groza, Lucian Popa, and Pal-Stefan Murvay, Universitatea Politehnica 
Timisoara; Yuval Elovici and Asaf Shabtai, Ben-Gurion University of the Negev
https://www.usenix.org/conference/usenixsecurity21/presentation/groza
This paper is included in the Proceedings of the 30th USENIX Security Symposium.August 11–13, 2021978-1-939133-24-3Open access to the Proceedings of the 30th USENIX Security Symposium is sponsored by USENIX.CANARY - a reactive defense mechanism for Controller Area Networks
based on Active RelaYs
Bogdan Groza
Politehnica Univ. of Timisoara
Lucian Popa
Politehnica Univ. of Timisoara
Pal-Stefan Murvay
Politehnica Univ. of Timisoara
Yuval Elovici
Ben-Gurion University of the Negev
Asaf Shabtai
Ben-Gurion University of the Negev
Abstract
We are rethinking the decades-old design of the CAN bus
by incorporating reactive defense capabilities in it. While its
reliability and cost effectiveness turned CAN into the most
widely used in-vehicle communication interface, its topology,
physical layer and arbitration mechanism make it impossible
to prevent certain types of adversarial activities on the bus. For
example, DoS attacks cannot be stopped as the physical layer
gives equal rights to all the connected ECUs and an adversary
may exploit this by ﬂooding the network with high priority
frames or cause transmission errors which may move honest
ECUs into the bus-off state. In response to this, we propose a
reactive mechanism based on relays placed along the bus that
will change the network topology in case of an attack, i.e., a
moving target defense mechanism, allowing a bus guardian to
ﬁlter and redirect legitimate trafﬁc. We take care of physical
properties of the bus and keep the 120  load constant at the
end of the lines whenever relays are triggered to modify the
topology of the bus. We build a proof-of-concept implemen-
tation and test it in a laboratory setup with automotive-grade
controllers that demonstrates its functionality over collected
real-world in-vehicle trafﬁc. Our experiments show that de-
spite short term disturbances when the relays are triggered,
the frame loss is effectively zero.
1 Introduction and motivation
The Controller Area Network (CAN) is a bus standard de-
signed by BOSCH in the 80s which became the most widely
used networking layer inside cars in the decades that fol-
lowed. While famed for its design simplicity, reliability and
cost effectiveness, the recent years have unfortunately and
unsurprisingly proved that the lack of security on CAN opens
road for numerous exploits of modern vehicles.
The security limitations of the CAN bus are twofold. On
one hand CAN has no intrinsic security - this is now widely
known and accepted. Adding cryptography (for authentica-
tion and encryption) may solve the problem in this respect and
the industry is heading in this direction [2]. But on the other
hand and equally important, even if cryptography is in place,
the design of the CAN bus, its topology, physical layer and
arbitration mechanism, set room for Denial-of-Service (DoS)
attacks as frames with high priority (lower value identiﬁers)
always win the bus and there are no guarantees for the arrival
time of low priority frames in case of a ﬂooded bus. Moreover,
adversaries may cause transmission errors by simply ﬂipping
bits in legitimate frames and such transmission errors may
eventually trigger the Bus-off state on honest nodes that com-
ply with the error control mechanism of CAN. In this way,
the transmission capabilities of legitimate nodes are cutoff,
i.e., another type of DoS. The practical impact of a DoS is
obvious as control will be lost on all vehicle subsystems once
the bus becomes unavailable to legitimate electronic control
units (ECUs).
The adversarial actions, reported by numerous papers, e.g.,
[5, 20], require a malicious device to be connected to the bus
via an exposed port or corrupting (possibly from remote) a
legitimate node that is already connected to the bus. The on-
board diagnostics (OBD) port is a good candidate to gain
access to the bus [29], though in some in-vehicle network
deployments this port may be isolated from the rest of the
ECUs by a ﬁrewall. Besides these exposed interfaces, CAN
bus wires are accessible in various places, e.g., under the hood
or behind car infotainment units, and an adversary may use
any random location on the wires as a penetration point pro-
vided that he has physical access to the car. While corrupted
ECUs may appear as a more distant possibility as most vehi-
cle components come from trusted providers, recent research
works have proved that legitimate devices, e.g., car headunits
or telematic units, can be compromised from remote. Supply
chain attacks may also lead to compromised devices being
obliviously mounted in the car by honest manufacturers or
repair shops. These three attack vectors, i.e., an adversary
at the OBD port, one which taps the bus at some random
location and a corrupted ECU, e.g., from the remote or by
a supply-chain attack, are graphically depicted in Figure 1.
To prevent such attacks, adding relays that allow for discon-
USENIX Association
30th USENIX Security Symposium    4259
access. While a small percent of frames may be unavoidably
lost, this seems clearly preferable when compared to a bus
that is fully blocked by an adversary. In particular, in our ex-
periments, we demonstrate that none of the legitimate frames
are lost when exercising the new intruder isolation capabil-
ities. One important aspect is that we take care of speciﬁc
details of the physical layer, e.g., keeping a constant 120Ω
termination at the end of the lines (according to the standard
to avoid reﬂections) while the bus topology changes.
The main contributions of the proposed defense mecha-
nism, i.e., CAN with Active RelaYs (CANARY), can be sum-
marized as follows:
1. we propose a simple yet highly effective modiﬁcation of
the CAN bus that complies with CAN physical speciﬁ-
cations, e.g., 120Ω end-of-line resistors, and allows for
dynamic reconﬁguration of the bus topology that will iso-
late nodes in certain parts of the bus,
2. we provide algorithms for detecting intrusion, node isola-
tion and, more importantly, trafﬁc redirection by which,
once the intruder is located, incoming trafﬁc is ﬁltered and
redirected to other parts of the network,
3. to prove the correctness of our approach, we provide real-
istic experiments with automotive-grade controllers and
collected real-world in-vehicle trafﬁc,
4. we show that frame loss due to relay action is essentially
zero and the arrival time of legitimate frames is largely
preserved, only a small number of frames being affected
by the adversarial interventions and relay triggering.
Needless to say, the proposed solution does not exclude
regular cryptographic authentication and intrusion detection,
but complements them with a reactive defense mechanism.
Advantages of the proposed defense mechanism. A key
aspect of the proposed defense mechanism is that it can be
used to retroﬁt existing cars. For many decades, after-market
solutions have successfully retroﬁtted cars with RF controls,
intelligent alarm systems, remote start systems, GPS-related
functionalities, multimedia units, etc. Similarly, relays may
retroﬁt existing and forthcoming cars with an effective mech-
anism against attacks and entry points which the manufac-
turer did not consider. While active star topologies for CAN
buses may solve most of the problems we address here, such
topologies are very rare inside cars. Moreover, when present,
star topologies are frequently implemented as hybrid star-
bus architectures, where several buses are connected together
through a gateway and cannot hinder a DoS on any of the
connected sub-networks. This architectural choice affects cars
which are in production today and which will be on road for
the decades that follow. Changing the bus to a star topology
after production will be extremely hard, if not impossible,
mostly due to difﬁculties in fully rewiring the car. In contrast,
relays can be more conveniently mounted in existing cars
Figure 1: Addressed setting: an adversary taping to the bus,
corrupting an ECU or connecting via the OBD port.
necting certain parts of the bus is a natural choice. An easy
to imagine solution is the use of a relay on the OBD port
which will disconnect it once an attack is detected (this is
already suggested in Figure 1). Such a solution will be cost-
effective but it would be too trivial to be able to hinder a well
determined adversary that may use other entry points as well.
Challenges and contributions. The security of the CAN
bus has been repeatedly studied in the past decade and the
answer has always been the same: the CAN bus is insecure
and adopting security mechanism uneasy due to various con-
straints while it remains nearly impossible to prevent certain
types of attacks, e.g., DoS. Clearly, these attacks may have
devastating effects on cars, passengers or even bystanders. In
this context, devising a solution for physical separation of the
ECUs on the bus and dynamic network reconﬁguration seems
to be promising. However, to facilitate practical adoption by
the industry, the solution must be down-to-earth, cheap, easy
to understand and implement. Nonetheless, the solution has to
comply with the physical requirements of the CAN standard
and of course it has to preserve message arrival time on bus,
i.e., strict timings are mandatory for safety-critical tasks. In
brief, simplicity and real-time demands must be met.
To the best of our knowledge, our work is the ﬁrst to pro-
vides an effective solution for physical isolation of intruder
nodes on the CAN bus and thus the ﬁrst approach that can pro-
tect the CAN bus against DoS attacks. While we speciﬁcally
target DoS attacks on the CAN bus, the proposed solution
is by no means limited to this type of attack and we further
demonstrate capabilities against other adversarial behaviors
as well. We imagine a framework with moving target defense
capabilities where relays are placed next to each ECU and
by triggering the relays we can physically separate the left
and right sides of the bus. Of course, other placements for
the relays can be imagined, in all other existing vehicle sub-
networks. For simplicity, we focus on the more conventional
case of a single CAN bus. A specialized micro-controller,
called Bus Guardian, is in control of the logic for intrusion
detection, intruder isolation by relay switching and trafﬁc
ﬁltering/redirection. Naturally, we try to prevent the loss of
legitimate frames on bus disconnections and we ﬁlter and
replay trafﬁc in parts of the bus to which the adversary has no
4260    30th USENIX Security Symposium
USENIX Association
at key locations by specialized workshops without changing
the network architecture and much of the wiring. Modern
transceivers, e.g., NXP TJA115X chips, incorporate DoS pro-
tection mechanisms but they are only effective against their
own host controller when it attempts to ﬂood and cannot stop
other nodes from doing so. A knowledgeable adversary would
not be so naive to use the self-limiting NXP transceiver when
performing an attack. Nonetheless, it will be hard (or im-
possible) to retroﬁt existing cars with TJA115X transceivers.
Paper organization. The rest of our work is structured as
follows. Section 2 provides a short background on CAN and
Section 3 brieﬂy surveys the related work. Section 4 holds
the theoretical description of the proposed framework. In
Section 5 we present our experimental setup and our proof-
of-concept implementation. Section 6 holds the experimen-
tal evaluation of the proposed framework. Finally, Section 7
holds the conclusion of our work.
2 Brief background on CAN
The CAN bus was designed for the speciﬁc requirements of
the automotive domain. It provides bit rates of up to 1Mbit/s
and mechanisms for message prioritization as well as for
efﬁcient error detection and conﬁnement. At the physical
layer, CAN is implemented as a two wire differential line
which must be properly terminated at each network end by a
120Ω resistor. While the use of CAN is not limited to a bus
topology, e.g., star topologies can also be found in practice,
bus topologies are the most often employed network designs
with CAN due to their design simplicity.
The CAN frame may transport a payload of at most 8 bytes.
Other frame ﬁelds are dedicated to the main mechanisms im-
plemented at the data-link layer. The arbitration ﬁeld, i.e., the
identiﬁer ﬁeld (ID), the remote transmission request bit (RTR)
plus the the identiﬁer extension bit (IDE), are employed to
determine transmission priority (i.e. frames with lower-valued
IDs win the arbitration) when multiple nodes simultaneously
start frame transmission. Frame IDs, i.e., 11 bits in standard
CAN frames and 29 bits in extended frames, are deﬁned at
network design time to establish frame priorities. The 15 bit
CRC ﬁeld is used as part of the error detection mechanism. A
network node that detects a transmission error immediately
begins transmitting an error frame to signal this ﬁnding to all
other nodes and stop the undergoing frame transmission.
CAN also implements an error conﬁnement mechanism
to prevent disturbances from faulty nodes. This mechanism
uses two error counters, TEC and REC, for transmitted and
received frames, which are incremented each time an error is
reported and decremented after each successful message trans-
mission or reception. All nodes start in the Error Active state
in which they can interrupt frame transmissions with error
frames. Once the error counters exceed the deﬁned threshold,
i.e., REC or TEC greater than 127, the ECUs transition in the
Error Passive state, in which they cannot interrupt frame trans-
missions with error frames. They can return from this state
when both TEC and REC are smaller than 128. The ECUs
eventually reach the Bus-off state, in which the node will
stop transmitting and acknowledging frames, if TEC becomes
greater than 255. Notably, this error conﬁnement mechanism
has been exploited both to send legitimate ECUs into the Bus-
off state [6] as well as against adversaries [26] (though, there
are little chances that an adversary will comply with this since
the Bus-off state can be bypassed from the software layer).
3 Related work
It can be easily seen from the above description that CAN
provides no security mechanisms and that security was not
considered as a goal during its design time more than three
decades ago. As a consequence, CAN is vulnerable to spoof-
ing and replay attacks as reported in [5,20] and to DoS attacks
in particular [21, 24].
Attack prevention and detection is subject to many recent
lines of work on in-vehicle network security. The use of ad-
ditional hardware is common in addressing CAN bus secu-
rity [16]. Matsumoto et al. [19] are the ﬁrst to propose the
idea of an intrusion prevention mechanism that destroys in-
truder frames by generating error frames. Several different
lines of work [11, 16] adapt and implement this approach in a
centralized form while a software-based implementation alle-
viating the need for specialized CAN controllers is proposed
in [9]. Another approach proposed for attack prevention is
ID-hopping which involves constantly modifying CAN frame
identiﬁers through a secured procedure only available to le-
git nodes. Such an approach was ﬁrst proposed by Humayed
and Luo [15] which are using a software-based implementa-
tion that requires the involvement of a gateway node in the
ID-hopping procedure. An improved approach based on a
dedicated CAN controller which reduces computational and
communication overheads while providing increased ID en-
tropy is proposed in [31].
The prevention mechanisms explored so far in related re-
search works are effective against replay and spooﬁng attacks.
However, preventing DoS attacks is more difﬁcult. The most
simple form of DoS attack, mentioned for the ﬁrst time in [30],