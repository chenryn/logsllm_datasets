title:On the accuracy of decentralized virtual coordinate systems in adversarial
networks
author:David John Zage and
Cristina Nita-Rotaru
On the Accuracy of Decentralized Virtual Coordinate
Systems in Adversarial Networks
David John Zage
Department of Computer Science
Purdue University
West Lafayette, IN 47907 USA
PI:EMAIL
Cristina Nita-Rotaru
Department of Computer Science
Purdue University
West Lafayette, IN 47907 USA
PI:EMAIL
ABSTRACT
Virtual coordinate systems provide an accurate and eﬃcient
service that allows hosts on the Internet to determine the
latency to arbitrary hosts without actively monitoring all
nodes in the network. Many of the proposed virtual co-
ordinate systems were designed with the assumption that
all of the nodes in the system are altruistic. However, this
assumption may be violated by compromised nodes acting
maliciously to degrade the accuracy of the coordinate sys-
tem. As numerous peer-to-peer applications rely on virtual
coordinate systems to achieve good performance, it is criti-
cal to address the security of such systems.
In this work, we demonstrate the vulnerability of decen-
tralized virtual coordinate systems to insider (or Byzantine)
attacks. We propose techniques to make the coordinate as-
signment robust to malicious attackers without increasing
the communication cost. We demonstrate the attacks and
mitigation techniques in the context of a well-known dis-
tributed virtual coordinate system using simulations based
on three representative, real-life Internet topologies of hosts
and corresponding round trip times (RTT).
Categories and Subject Descriptors: C.2.0 [General]:
Security and protection; C.2.1 [Network Architecture and
Design]: Network Topology; C.2.4 [Distributed Systems]:
Distributed applications
General Terms: Design, Reliability, Security
Keywords: Virtual Coordinate Systems, Network Coordi-
nates, Attack Mitigation, Reliability, Security
1.
INTRODUCTION
A wide range of applications taking advantage of peer-
to-peer systems have emerged in recent years, including ﬁle
download and distribution (e.g. BitTorrent [1], Emule [25]),
voice over IP (e.g. Skype [4]), and video broadcasting (e.g.
ESM [11], Coolstreaming [51]). Many of these applications
optimize their performance based on network topology. For
example, the construction of multicast trees or the selection
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS'07, October 29–November 2, 2007, Alexandria, Virginia, USA.
Copyright 2007 ACM 978-1-59593-703-2/07/0010 ...$5.00.
of a replica for ﬁle sharing applications can be greatly im-
proved by taking advantage of network locality. One basic
approach to learn network locality is to probe all hosts in
the network to determine attributes such as latency. The
cost associated with active monitoring to estimate such at-
tributes is non-negligible [11, 52], being exacerbated by the
presence of multiple applications performing this task on a
common network infrastructure.
Virtual coordinate systems [34, 36, 43, 13, 33, 12, 17,
29, 47, 16, 35] have been proposed as a low communication
cost service to accurately predict latencies between arbitrary
hosts in a network. These systems allow a node to map itself
to a virtual coordinate based on a small number of actual
network distance estimates to a subset of reference nodes.
By comparing the virtual coordinates, nodes can trivially
estimate the latency between them.
Two main architectures for virtual coordinate systems
have emerged:
landmark-based and decentralized. Land-
mark - based systems rely on infrastructure components
(such as a set of landmark servers) to predict distance be-
tween any two hosts. The set of landmarks can be pre-
determined [34, 33, 16] or randomly selected [43, 35]. Decen-
tralized virtual coordinate systems do not rely on explicitly
designated infrastructure components, requiring any node
in the system to act as a reference node. Examples of such
systems include PIC [12], Vivaldi [13], and PCoord [47, 46].
The accuracy and stability of virtual coordinate systems
rely on the assumption that the reference set nodes on which
the virtual coordinate computation relies on are altruistic [5]
and correctly participate in the system. Under this assump-
tion, many of the proposed systems have been shown to be
accurate, often achieving an overall latency prediction er-
ror of less than ten percent [13, 47]. While this assumption
may be ensured for landmark-based virtual coordinate sys-
tems by securing the small set of infrastructure nodes, it is
not easily achieved for decentralized systems where any node
can act as a reference node for other nodes in the system. As
a result, decentralized virtual coordinate systems are vulner-
able to insider attacks [21, 22] conducted by attackers that
inﬁltrate such systems or compromise some of their nodes.
Since virtual coordinate systems are network services pro-
viding support for a wide variety of peer-to-peer applications
and more recently routing [28], they would likely be a prime
candidate for attack. It is critical that such systems are de-
signed to be robust to attackers that inﬂuence the accuracy
of the coordinates.
Previous work focused little on mitigating vulnerabilities
of virtual coordinate systems with the notable exception of
214[12], which uses the triangle inequality to detect malicious
nodes. The results based on synthetic networks presented in
[12] show that the method does improve the accuracy of the
PIC coordinate system in adversarial networks. However,
as demonstrated in [27, 53, 31], violations of the triangle
equality are very frequent for real networks, resulting in the
inaccuracy and fragility of virtual coordinate systems even
when deployed in non-adversarial networks. Previous work
has also demonstrated the susceptibility of Vivaldi to attacks
[21, 22]. We have recently become aware of [20], developed
simultaneously and independently of our work, which miti-
gates malicious activity using trusted network components.
In this paper, we study the vulnerability of decentralized
virtual coordinate systems to insider attacks and propose
mechanisms to make the accuracy of such systems resilient
to attacks. To the best of our knowledge, we provide the
ﬁrst solution for mitigating attacks against virtual coordi-
nate systems that is based on realistic assumptions about
network topology and demonstrate its eﬀectiveness using
real-life Internet data sets. Our solution does not increase
the communication in the system, complying with the vir-
tual coordinate system design goal of maintaining a low com-
munication cost. We summarize our key contributions:
• We classify attacks against virtual coordinate systems,
based on the impact on the coordinates, as coordinate inﬂa-
tion, deﬂation, and oscillation. The attacks are conducted
by insiders that have inﬁltrated the virtual coordinate sys-
tem or compromised some of the nodes. The low-rate na-
ture of the attacks (i.e. they do not require the attacker to
generate a noticeable amount of traﬃc) makes them diﬃ-
cult to detect, while their epidemic nature makes them very
dangerous, as a small number of attackers can signiﬁcantly
inﬂuence the accuracy of the entire system.
• We propose techniques to reduce incorrect coordinate map-
pings by using spatial and temporal correlations to perform
context-sensitive outlier analysis. A key component of our
solution is based on the observation that behavior of attack-
ers can be constrained by correlating dependent metrics.
• We demonstrate the impact of the attacks and the ef-
fectiveness of our defense mechanisms through p2psim [3]
simulations, in the context of the well-studied Vivaldi vir-
tual coordinate system [13] using three representative real-
world topologies of hosts and corresponding RTTs: King
[17], Meridian [48], and AMP [2]. We found through ana-
lytical and empirical studies that a spatial threshold of 1.5
and a temporal threshold of 4.0 provided a low system error
under attack while maintaining an acceptable false positive
rate. Our experiments also show that the method starts to
degrade when a coalition of malicious nodes in the reference
set of a node increases over 30% of the reference set size.
The rest of the paper is organized as follows: We provide
an overview of decentralized virtual coordinate systems and
attacks against them in Section 2. We propose mitigation
mechanisms in Section 3. We present experimental results
demonstrating the impact of the attacks and the eﬀective-
ness of our solutions in Section 4. We discuss related work
in Section 5 and conclude our work in Section 6.
2. ATTACKS AGAINST VIRTUAL
COORDINATE SYSTEMS
In this section, we give an overview of the main compo-
nents of decentralized virtual coordinate systems and de-
scribe how they can be exploited by attackers to inﬂuence
their accuracy.
2.1 Decentralized Virtual Coordinate Systems
The design goal of decentralized virtual coordinate sys-
tems is to eﬃciently create and maintain a stable set of vir-
tual coordinates that accurately predict the latency between
nodes without using ﬁxed infrastructure nodes. Although
each speciﬁc virtual coordinate system diﬀers in some de-
tails, most of them follow a common design. The most im-
portant characteristics that deﬁne decentralized coordinate
systems are (1) the reference or neighbor set, (2) the dis-
tance prediction mechanism, and (3) the error minimization
technique.
In a decentralized virtual coordinate system, each node
calculates its coordinates based on the information obtained
from a small set of nodes in the network, which we refer to as
the reference set. There are several methods used to select
the reference set. One of the most promising methods iden-
tiﬁes a set of close and a set of distant network nodes and
selects a random subset of each [13, 12]. Nodes may have dif-
ferent reference sets. Diﬀerent systems use diﬀerent sizes of
the reference set due to the frequency of actual network mea-
surements, the number of nodes queried per measurement
interval, and the error minimization technique utilized. For
example, Vivaldi uses a reference set size of 64 nodes [21],
PCoord uses 10 nodes [46], and PIC uses 32 nodes [12].
Once a reference set has been selected, a node deter-
mines its coordinate based on a predeﬁned distance pre-
diction mechanism, such as the Euclidean distance. Each
system typically maintains coordinates in either low dimen-
sional (usually 2 to 8 dimensions) Euclidean space [12], an
augmented Euclidean space [13], or non-Euclidean (e.g. hy-
perbolic) space [39].
In general, it has been shown that
none of the embedding spaces dominates the others in per-
formance [32] and lower dimensionality Euclidean spaces are
often suﬃcient [13]. A node determines its position and then
successively reﬁnes it by periodically querying nodes in its
reference set. Queried nodes respond with metrics that can
include local error, perceived system error, local coordinates,
and RTT.
Virtual coordinate systems provide accurate latency pre-
diction, achieved through error minimization techniques of
a chosen distance error function. Examples include:
• Generic multi-dimensional minimization designed to min-
imize a relative system error measure (such as logarithmic
transformed error) using techniques such as the downhill
simplex method [12].
• Minimizing coordinates by simulating Newtonian mechan-
ics. Each node in the system is simulated as a particle inﬂu-
enced by the ﬁeld force induced between nodes. Each pair of
particles (nodes) either pulls or repulses each other, thereby
reducing the total system error [39].
• Minimizing coordinates by simulating spring relaxation,
where the state of the springs at rest is the optimal embed-
ding. The system minimizes the squared system error by
iteratively ﬁnding the low-energy point of the spring-based
system [13].
While each technique has beneﬁts, systems based on multi -
dimensional minimization are often slow to converge, sensi-
tive to initial system conditions, and sensitive to high error
measurements. Simulation techniques such as spring relax-
ation are computationally inexpensive, less sensitive to high
error nodes, and more amenable to general decentralized
system design.
In general, virtual coordinate systems achieve the over-
all goals of accuracy and stability while reducing traﬃc by
as much as two orders of magnitude when compared with
active monitoring to estimate RTT [12]. Systems such as
Vivaldi [13], PCoord [47], and PIC [12] stabilize at an aver-
age system latency estimation error of ten milliseconds for
large scale simulations and deployments.
2.2 Attacker Model
We consider a constrained - collusion Byzantine adversary
model similar to that proposed in [9], with a system size of N
and a bounded percentage of malicious nodes f (0 ≤ f < 1)
behaving arbitrarily. The set of malicious nodes may col-
lude. We assume a malicious adversary has access to all
data at a node as any legitimate user would (insider access),
including cryptographic keys stored at a node. This access
can be the result of the adversary bypassing the authenti-
cation mechanisms or compromising a node through other
means. Nodes cannot be completely trusted although they
are authenticated. We assume that data authentication and
integrity mechanisms are deployed and we focus only on at-
tacks directed at the accuracy of the virtual coordinates.
2.3 Attacks Description
The correct operation of virtual coordinate systems is de-
pendent on the assumption that the reference set nodes are
altruistic and respond with correct metrics to queries from
any node computing its corresponding coordinates. An at-
tacker controlling reference set nodes has the ability to in-
ﬂuence the coordinate maintenance process by manipulating
the information, such as remote node error and coordinates,
returned in response to a query. By blindly accepting this
malicious information, a correct node computes incorrect
coordinates.
A malicious node is able to indirectly take advantage of
the error minimization techniques and chosen error function
by manipulating the metrics it reports as a reference set
node. In doing so, an attacker is able to make a victim node
move away from its correct position by either pushing the
node away from or pulling it closer to the malicious node’s
reported coordinates. For example, a malicious node can
attract a victim node towards a random position and away
from the victim’s correct position by reporting false virtual
coordinates and a low error. Also, since many of the min-
imization techniques rely on the measured RTT of queries,
a malicious node can push a victim node away from itself
by delaying its query responses. The larger the induced
delay, the farther the victim node will re-calculate its posi-
tions away from the malicious node’s reported coordinates
to possibly more erroneous locations. An attacker may also
take advantage of the error minimization techniques to re-
pel a victim node away from speciﬁc virtual coordinates by
making its queried responses appear worse than actuality
by advertising coordinates with high error. We refer to such
attacks that result in coordinate mappings farther from the
correct location as coordinate inﬂation.
An attacker may cause a victim node to remain immo-
bile by reporting positions similar to the current position of
that victim node. A malicious node may also report false
coordinates where the distance between the victim and the
attacker reﬂects the RTT between the nodes, once again
rendering the victim immobile. We refer to such attacks in
which the victim nodes are prevented from performing nec-
essary, correct coordinate changes as coordinate deﬂation.
Any attack against the coordinate system may target a
particular node, subset of nodes, or region of the coordi-
nate space. The ﬁnal goal of manipulating the coordinate
system can include isolating subsets of nodes from the net-
work, creating general disorder in the system, and rendering
the coordinate system unusable due to high estimation error.
We refer to attacks which result in nodes not converging to a
virtual coordinate and continuously changing their positions
as coordinate oscillation.
While all of the attacks have diﬀerent goals, in the end,
they all distort the coordinate space and can make using the
computed coordinates worse than using randomly assigned
coordinates. Even short-lived, localized attacks have a long-
lasting eﬀect on the overall system. For example, even when