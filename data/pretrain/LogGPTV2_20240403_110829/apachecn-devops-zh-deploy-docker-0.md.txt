# 零、前言
微服务和容器将继续存在，在当今世界，Docker 正在成为可伸缩性的事实标准。将 Docker 部署到生产环境中被认为是开发大规模基础架构的主要难点之一，您可以在网上找到的文档还有很多地方需要改进。通过这本书，您将接触到在您自己的云中开发和部署 Docker 基础架构可用的各种工具、技术和变通方法，这些都是基于作者在现实世界中的经验。您将学到所有您想知道的知识，以有效地在全球范围内扩展您的部署，并为自己构建一个弹性且可扩展的容器化云平台。
# 这本书涵盖了什么
[第 1 章](1.html)、*容器–不仅仅是另一个流行语*，研究了当前部署服务的方法，以及为什么容器，特别是 Docker，超越了其他形式的基础设施部署。
[第 2 章](2.html)、*卷起袖子*，涵盖了建立和运行基于 Docker 的小型本地服务的所有必要步骤。我们将介绍如何安装、运行 Docker，并快速了解 Docker CLI。有了这些知识，我们将编写一个基本的 Docker 容器，并看看如何在本地运行它。
[第 3 章](3.html)、*服务分解*，讲述了如何从上一章中获取知识，并使用它来创建和构建数据库和应用服务器容器的附加组件，从而镜像简单的分解微服务部署。
[第 4 章](4.html)、*缩放容器*，讲述了使用同一个容器的多个实例进行水平缩放。我们将介绍服务发现、如何部署服务发现以使模块的扩展对基础架构的其余部分透明，以及它的各种利弊(取决于实现方式)，并快速了解水平节点扩展。
[第 5 章](5.html)、*保持数据持久性*，介绍了容器的数据持久性。我们将介绍节点本地存储、临时存储和持久卷及其复杂性。我们还将花更多的时间在 Docker 映像分层和一些陷阱上。
[第 6 章](6.html)、*高级部署主题*为集群增加了隔离和消息传递，以提高服务的安全性和稳定性。这里将介绍 Docker 部署中的其他安全考虑因素及其权衡。
[第 7 章](7.html)、*扩展的限制和变通方法*，涵盖了您在扩展超出基本 RESTful 服务需求时可能遇到的所有问题。我们将深入研究您会发现的默认部署问题，以及如何以最小的麻烦解决这些问题，并处理代码版本更改和更高级别的管理系统。
[第八章](8.html)*打造自己的平台*，帮助我们打造自己的迷你**平台即服务** ( **PaaS** )在这一章。我们将涵盖从配置管理到基于云的环境中的部署的所有内容，您可以使用这些内容来引导您自己的云。
[第 9 章](9.html)、*探索最大规模部署*，涵盖了我们构建的内容，并延伸到 Docker 最大规模部署的理论和现实示例中，还涵盖了读者应该关注的任何发展。
# 这本书你需要什么
在开始阅读本书之前，请确保您具备以下条件:
*   基于英特尔或 AMD 的 x86_64 机器
*   至少 2 GB 内存
*   至少 10 GB 的硬盘空间
*   Linux (Ubuntu、Debian、CentOS、RHEL、SUSE 或 Fedora)、Windows 10、Windows Server 2016 或 macOS
*   互联网连接
# 这本书是给谁的
这本书面向系统管理员、开发人员、DevOps 工程师和软件工程师，他们希望获得使用 Docker 部署多层 web 应用和容器化微服务的具体实践经验。它适用于那些以某种方式部署服务，并希望将他们的小规模设置提升到下一个数量级或想了解更多信息的人。
# 约定
在这本书里，你会发现许多区分不同种类信息的文本样式。以下是这些风格的一些例子和对它们的意义的解释。
文本中的码字、文件夹名称、文件名、文件扩展名、路径名、伪 URL、用户输入、Twitter 句柄如下所示:“如果你在浏览器中再次转到`http://127.0.0.1:8080`，你会看到我们的 app 和以前一样工作！”
代码块设置如下:
```
    # Make sure we are fully up to date
    RUN apt-get update -q && \
    apt-get dist-upgrade -y && \
    apt-get clean && \
    apt-get autoclean
```
当我们希望将您的注意力吸引到代码块的特定部分时，相关的行或项目以粗体显示:
```
    # Make sure we are fully up to date
    RUN apt-get update -q && \
 apt-get dist-upgrade -y && \
    apt-get clean && \
    apt-get autoclean
```
任何命令行输入或输出都编写如下:
```
$ docker swarm leave --force
Node left the swarm.
```
**新名词**和**重要词语**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，出现在文本中，如下所示:“为了下载新模块，我们将转到文件|设置|项目名称|项目解释器。”
Warnings or important notes appear like this. Tips and tricks appear like this.
# 读者反馈
我们随时欢迎读者的反馈。让我们知道你对这本书的看法——你喜欢或不喜欢什么。读者反馈对我们来说很重要，因为它有助于我们开发出你真正能从中获益的标题。要给我们发送一般反馈，只需发送电子邮件`PI:EMAIL`，并在您的邮件主题中提及书名。如果您对某个主题有专业知识，并且对写作或投稿感兴趣，请参见我们位于[www.packtpub.com/authors](http://www.packtpub.com/authors)的作者指南。
# 客户支持
现在，您已经自豪地拥有了一本书，我们有许多东西可以帮助您从购买中获得最大收益。
# 下载示例代码
你可以从你在[http://www.packtpub.com](http://www.packtpub.com)的账户下载这本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册将文件直接通过电子邮件发送给您。您可以按照以下步骤下载代码文件:
1.  使用您的电子邮件地址和密码登录或注册我们的网站。
2.  将鼠标指针悬停在顶部的“支持”选项卡上。
3.  点击代码下载和勘误表。
4.  在搜索框中输入图书的名称。
5.  选择要下载代码文件的书籍。
6.  从您购买这本书的下拉菜单中选择。
7.  点击代码下载。
下载文件后，请确保使用最新版本的解压缩文件夹:
*   视窗系统的 WinRAR / 7-Zip
*   zipeg/izp/un ARX for MAC
*   适用于 Linux 的 7-Zip / PeaZip
这本书的代码包也托管在 https://github.com/PacktPublishing/Deployment-with-Docker/的 GitHub 上。我们还有来自丰富的图书和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)获得。看看他们！
# 下载这本书的彩色图片
我们还为您提供了一个 PDF 文件，其中包含本书中使用的截图/图表的彩色映像。彩色映像将帮助您更好地理解输出中的变化。您可以从[https://www . packtpub . com/sites/default/files/downloads/deploymenttwithdocker _ color images . pdf](https://www.packtpub.com/sites/default/files/downloads/DeploymentwithDocker_ColorImages.pdf)下载此文件。
# 正误表
尽管我们尽了最大努力来确保我们内容的准确性，但错误还是会发生。如果你在我们的某本书里发现一个错误，也许是文本或代码中的错误，如果你能向我们报告，我们将不胜感激。通过这样做，你可以让其他读者免受挫折，并帮助我们改进这本书的后续版本。如果您发现任何勘误表，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误表提交表格链接，并输入您的勘误表的详细信息。一旦您的勘误表得到验证，您的提交将被接受，勘误表将上传到我们的网站或添加到该标题勘误表部分下的任何现有勘误表列表中。要查看之前提交的勘误表，请前往[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)并在搜索栏中输入图书名称。所需信息将出现在勘误表部分。
# 海盗行为
在互联网上盗版受版权保护的材料是一个贯穿所有媒体的持续问题。在 Packt，我们非常重视版权和许可证的保护。如果您在互联网上遇到任何形式的我们作品的非法拷贝，请立即向我们提供位置地址或网站名称，以便我们寻求补救。请通过`PI:EMAIL`联系我们，获取疑似盗版资料的链接。我们感谢您在保护我们的作者方面的帮助，以及我们为您带来有价值内容的能力。
# 问题
如果您对本书的任何方面有问题，可以在`PI:EMAIL`联系我们，我们将尽最大努力解决问题。