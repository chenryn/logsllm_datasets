### Policy for Outgoing Malware Communication

The policy disrupts any outgoing communication from the malware by sending error responses to DNS requests, resetting SYN packets, and blocking outgoing UDP traffic. This approach is designed to trick the malware into revealing all known endpoints as it attempts to find a functional one. The restricted access policy allows Command and Control (C&C) traffic to and from the internet but blocks other malicious activities such as spamming, launching attacks, or click fraud. Additionally, any connection with a payload larger than 4 KB is reset to prevent the malware from downloading and installing other executables.

Initially, the malware is run with an endpoint failure containment policy and a default configuration. If no traffic is sent, it is rerun with different configurations. For instance, it may be queued to run on a different virtual machine (e.g., QEMU if originally run on VMware) and for an extended period (e.g., doubling the execution timer). This helps address malware samples that use evasion techniques specific to certain VM platforms and accounts for malware that may take longer to initiate network communication.

### Adversarial Fingerprint Generation

This section outlines the process of generating fingerprints for a malicious family of interest, starting from a set of network traces. The fingerprint generation process consists of four steps:

1. **Request-Response Pair (RRP) Extraction** (Section III-A)
2. **Replay of Requests** (Section III-B)
3. **Clustering RRPs with Similar Requests** (Section III-C)
4. **Signature Generation for Each Cluster** (Section III-D)

#### Benign Traffic Pool

Adversarial fingerprint generation also uses a pool of benign traffic to identify distinctive parts of the server responses, i.e., those not present in benign traffic. This pool includes:
- Two traces of HTTP and HTTPS traffic from visiting top Alexa sites.
- A 2-day trace of all external traffic from a network with 50 users, captured at the network's border.

These traces are scanned with two IDS signature sets to ensure they do not contain malicious traffic.

### RRP Feature Extraction

CyberProbe first extracts RRPs from the network traces, which include TCP connections and UDP flows initiated by the malware or honeyclient towards a remote responder, where some data is returned by the responder. A UDP flow is defined as a sequence of UDP packets with the same endpoints and ports, timing out after a minute of inactivity. For each RRP, CyberProbe extracts the following feature vector:
\[ \{ \text{proto}, \text{sport}, \text{dport}, \text{sip}, \text{dip}, \text{endpoint}, \text{request}, \text{response} \} \]
where:
- `proto` is the protocol,
- `sport` and `dport` are the source and destination ports,
- `sip` and `dip` are the source and destination IP addresses,
- `endpoint` is the domain name used to resolve the destination IP,
- `request` and `response` represent the raw content of the request and response.

To extract the protocol feature, CyberProbe uses protocol signatures to identify standard protocols commonly used by malware, such as HTTP. These signatures capture keywords in the early parts of a message and can identify the protocol even if it uses non-standard ports. For unknown application protocols, the transport protocol is used.

RRPs with request endpoints in the top 100,000 Alexa domains are discarded to remove traffic to benign sites. Additionally, RRPs with identical requests (excluding fields with dynamic data) are removed to avoid redundant replays. From the remaining RRPs, CyberProbe builds an initial list of malicious endpoints by resolving each domain to obtain current IP addresses.

### Replay

The next step involves replaying the requests in the extracted RRPs to the known malicious endpoints. The goal is to identify requests that lack replay protection, i.e., those that still elicit a distinctive response when replayed to the same or another server in the family.

CyberProbe uses a commercial Virtual Private Network (VPN) with exit points in more than 50 countries, providing over 45,000 IPs. This is important for two reasons:
1. To minimize the risk of detection and IP blocking by the managers of the malicious family.
2. To ensure independence between replays by changing the VPN exit node for each request, thus maintaining the server's initial state.

Responses from benign servers are filtered out by removing those with no response or an error response (e.g., HTTP 4xx). For benign HTTP servers that respond with a successful response (HTTP 200 OK), CyberProbe sends an additional random request to identify custom error messages.

### Clustering RRPs by Request Similarity

CyberProbe clusters the RRPs by request similarity to identify instances of the same type of request across the network traces. This prevents generating multiple fingerprints of the same type and enables producing more general fingerprints. Two types of clustering are used:
- **Protocol-aware clustering** for HTTP: Groups RRPs with the same method (e.g., GET or POST), the same path, and similar parameters (Jaccard index > 0.7).
- **Transport clustering** for other protocols: Groups packets with the same size, content, and destination port.

### Signature Generation

For each cluster, signature generation produces signatures that capture unique parts of the responses, i.e., those uncommon in the benign traffic pool. CyberProbe builds token-set payload signatures, supported by Snort and Suricata. A token set is an unordered set of binary strings that matches the content of a buffer if all tokens appear in any order.

Algorithm 1 describes the signature generation process, which tokenizes fields and generates multiple signatures per cluster. Distinctive tokens have high coverage (>0.4) and low false positive rates (<10^-9).

### Scanning

#### General Scanning Characteristics

Scans are performed based on three types of ranges:
- **Localized-reduced**: Focuses on the most specific BGP routes containing seed server IPs.
- **Localized-extended**: Includes all routes from the same provider as the seed servers.
- **Internet-wide**: Uses BGP ranges advertised on the day of the scan, reducing the scan range by up to 40%.

#### Scan Implementation

The implementation details of horizontal, UDP, and appTCP scanners are provided, ensuring comprehensive coverage and efficient scanning.