This seems like something the compiler could merge, but currently it complains
that property of foo in types A and B are not identical:
    interface A {
        foo(name: 'foo'): string;
        foo(name: string): any;
    }
    interface B {
        foo(name: 'bar'): number;
        foo(name: string): any;
    }
    interface C extends A, B {}
I have some real world code I am trying to type and essentially I have to
redeclare all the "inherited" string literal types like this in the final
class, which is sort of unmaintainable.