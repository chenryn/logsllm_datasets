title:Effective Detection of Multimedia Protocol Tunneling using Machine
Learning
author:Diogo Barradas and
Nuno Santos and
Lu&apos;ıs E. T. Rodrigues
Effective Detection of Multimedia Protocol 
Tunneling using Machine Learning
Diogo Barradas, Nuno Santos, and Luís Rodrigues, INESC-ID, 
Instituto Superior Técnico, Universidade de Lisboa
https://www.usenix.org/conference/usenixsecurity18/presentation/barradas
This paper is included in the Proceedings of the 
27th USENIX Security Symposium.
August 15–17, 2018 • Baltimore, MD, USA
ISBN 978-1-939133-04-5
Open access to the Proceedings of the 27th USENIX Security Symposium is sponsored by USENIX.Effective Detection of Multimedia Protocol Tunneling using
Machine Learning
Diogo Barradas
Nuno Santos
Lu´ıs Rodrigues
INESC-ID, Instituto Superior T´ecnico, Universidade de Lisboa
{diogo.barradas, nuno.m.santos, ler}@tecnico.ulisboa.pt
Abstract
Multimedia protocol tunneling enables the creation of
covert channels by modulating data into the input of pop-
ular multimedia applications such as Skype. To be effec-
tive, protocol tunneling must be unobservable, i.e., an
adversary should not be able to distinguish the streams
that carry a covert channel from those that do not. How-
ever, existing multimedia protocol tunneling systems
have been evaluated using ad hoc methods, which casts
doubts on whether such systems are indeed secure, for
instance, for censorship-resistant communication.
In this paper, we conduct an experimental study of the
unobservability properties of three state of the art sys-
tems: Facet, CovertCast, and DeltaShaper. Our work
unveils that previous claims regarding the unobservabil-
ity of the covert channels produced by those tools were
ﬂawed and that existing machine learning techniques,
namely those based on decision trees, can uncover the
vast majority of those channels while incurring in com-
paratively lower false positive rates. We also explore
the application of semi-supervised and unsupervised ma-
chine learning techniques. Our ﬁndings suggest that the
existence of manually labeled samples is a requirement
for the successful detection of covert channels.
1
Introduction
Multimedia protocol tunneling has emerged as a poten-
tially effective technique to create covert channels which
are difﬁcult to identify. In a nutshell, this technique con-
sists of encoding covert data into the video (and / or
audio) channel of popular encrypted streaming applica-
tions such as Skype without requiring any changes to the
carrier application. Systems such as Facet [30], Covert-
Cast [34], and DeltaShaper [2] implement this technique,
and introduce different approaches for data modulation
that aim at raising the difﬁculty of an adversary to iden-
tify covert data transmissions.
An important property that all these systems strive to
achieve is unobservability. A covert channel is deemed
unobservable if an adversary that is able to scan any num-
ber of streams is not able to distinguish those that carry
a covert channel from those that do not [20, 23]. Thus,
an adversary aims at correctly detecting all streams that
carry covert channels, among a set of genuine streams,
as effectively as possible. In practice, a multimedia pro-
tocol tunneling system that provides a high degree of un-
observability prevents an adversary from ﬂagging a large
fraction of covert ﬂows (i.e., from attaining a high true
positive rate) while ﬂagging a low amount of regular traf-
ﬁc (i.e., while attaining a low false positive rate).
In spite of the efforts to build unobservable systems,
the methodology currently employed for their evaluation
raises concerns. To assess the unobservability of a sys-
tem such as Facet, experiments are mounted in order to
play regular trafﬁc along with covert trafﬁc, collect the
resulting traces, and employ similarity-based classiﬁers
(e.g., relying in the χ 2 similarity function) to determine
whether covert trafﬁc can be detected with a low num-
ber of false positives [30]. However, each system has
been evaluated with a different classiﬁer, making results
hard to compare. Furthermore, those studies use just
one among the many machine learning (ML) techniques
available today. Yet, providing a common ground for as-
sessing the unobservability of multimedia protocol tun-
neling systems is a relevant problem which, nevertheless,
has been overlooked in the literature. Considering that
such systems emerged from the need to circumvent Inter-
net censorship, ﬂawed systems may pose life-threatening
risks to end-users, e.g., journalists that report news in ex-
treme conditions may be prosecuted, imprisoned, or even
murdered if covert channels are detected.
To ﬁll this gap, our goal is to systematically assess the
unobservability of existing systems against powerful ad-
versaries making use of trafﬁc analysis techniques based
on ML. We aim at understanding which ML techniques
are better suited for the purpose of detecting covert chan-
USENIX Association
27th USENIX Security Symposium    169
nels in multimedia streams and what are the limitations
of such techniques. In particular, we seek to explore ML
techniques which have yielded successful results when
applied in other domains (e.g., Tor hidden services ﬁn-
gerprinting [22]), but have not yet been studied in the
context of covert trafﬁc detection.
In this paper, we present the ﬁrst experimental study of
the unobservability of covert channels produced by state-
of-the-art multimedia protocol tunneling systems. We
test three systems – Facet, CovertCast, and Deltashaper –
using the original code provided by their maintainers.
For our study, we take a systematic approach by in-
vestigating a spectrum of anomaly detection techniques,
ranging from supervised, to semi-supervised and unsu-
pervised, where for each category we explore different
classiﬁers, and investigate the trade-offs involved in the
ability to ﬂag a large amount of covert channels while
minimizing false positives. From our study, we highlight
the following three main contributions.
First, our analysis reveals that some state-of-the-art
systems are ﬂawed. In particular, CovertCast ﬂows can
be detected with few false positives by an adversary, even
when resorting to existing similarity-based classiﬁers.
While the remaining systems exhibit different degrees
of unobservability according to their parameterization,
we show that none of the currently employed similarity-
based classiﬁers can detect such channels without incur-
ring in large numbers of false positives. We also con-
clude that one of the existing similarity-based classi-
ﬁers – using χ 2 distance – consistently outperforms all
others in the task of detecting covert channels.
Second, we show that ML techniques based on deci-
sion trees and some of their variants are extremely effec-
tive at detecting covert trafﬁc with reduced false positive
rates. For example, an adversary employing XGBoost
would be able to ﬂag 90% of all Facet trafﬁc while er-
roneously ﬂagging only 2% of legitimate connections.
Moreover, the performance of such techniques is very
high, meaning that the adversary is able to classify traf-
ﬁc in a few seconds, with a relatively low number of
samples per training set, and taking a low memory foot-
print. Additionally, the use of decision tree-based tech-
niques allows us to understand which trafﬁc features are
most important for detecting the functioning of particular
multimedia protocol tunneling systems. These ﬁndings
suggest that, apart from their performance, decision tree-
based techniques can provide meaningful insight into the
inner workings of these systems and we propose that they
should be used for assessing the unobservability of mul-
timedia protocol tunneling systems in the future.
Third, we explore alternative ML approaches for the
detection of covert channels when the adversary is as-
sumed to be partially or totally deprived of labeled data.
Our ﬁndings suggest that unsupervised learning tech-
niques provide no advantage for the classiﬁcation of mul-
timedia protocol tunneling covert channels, while the ap-
plication of semi-supervised learning techniques yields a
signiﬁcant fraction of false positives. However, we note
that the performance of semi-supervised techniques can
be signiﬁcantly improved through the optimization of pa-
rameters or by providing algorithms with extra training
data. The study of semi-supervised anomaly detection
techniques with an ability to self-tune parameters can be
a promising future direction of research which would en-
able adversaries to detect covert trafﬁc while avoiding
the burden of generating and manually label data.
We note that we synthesize a limited number of legiti-
mate and covert trafﬁc samples in laboratory settings for
creating our datasets. While this is a common approach
for generating datasets for the type of unobservability as-
sessment we conduct in this paper, it is possible that ad-
versaries possessing a privileged position in the network
can build a more accurate representation of trafﬁc.
The remainder of our paper is organized as follows.
Section 2 presents the methodology of our study. Sec-
tion 3 presents the main ﬁndings of our study regarding
the comparison of similarity-based classiﬁers. Section 4
presents the results obtained when assessing unobserv-
ability resorting to decision tree-based classiﬁers. Sec-
tion 5 presents our ﬁrst insights on using semi-supervised
and unsupervised anomaly detection techniques for the
identiﬁcation of covert trafﬁc. In Section 6, we discuss
obtained results and we present the related work in Sec-
tion 7. Lastly, we conclude our work in Section 8.
2 Methodology
This section introduces the systems we analyzed, our ad-
versary model, and the experimental setup of our study.
2.1 Systems Under Analysis
Below, we describe three state-of-the-art approaches at
multimedia protocol tunneling which serve as a basis for
our study. We selected these systems because all of them
encode data into video streams, and their code is pub-
licly available for open testing. We note that although
these systems have been conceived for the purpose of
censorship circumvention, in practice, they may be used
for other purposes, such as concealing criminal activity.
Facet [30] allows clients to watch arbitrary videos by re-
placing the audio and video feeds of Skype videocalls.
To watch a video, clients contact a Facet server by send-
ing it a message containing the desired video URL. Af-
terwards, the Facet server downloads the requested video
and feeds its content to microphone and camera emu-
lators. Then, the server places a videocall to the client
170    27th USENIX Security Symposium
USENIX Association
transmitting the selected video and audio instead. Thus,
clients are not required to install any software in order to
use the system. For approximating the trafﬁc patterns of
regular videocalls, Facet re-samples the audio frequency
and overlays the desired video in a fraction of each frame
while the remaining frame area is ﬁlled up by a video
resembling a typical videocall. Decreasing the area oc-
cupied by the concealed video translates into increased
resistance against trafﬁc analysis.
CovertCast [34] scrapes and modulates the content of
web pages into images which are distributed via live-
streaming platforms such as YouTube. Multiple clients
can consume the data being transmitted in a particular
live stream simultaneously. CovertCast modulates web
content by encoding it into colored matrix images. A
colored matrix is parameterized by a cell size (adjacent
pixels with a given color), the number of bits encoded
in each cell (represented with a color), and the rate at
which a matrix containing new data is loaded. Clients
scrape and demodulate the images served through the
live stream extracting the desired web content.
DeltaShaper [2] differentiates itself from the previous
systems in that it allows for tunneling arbitrary TCP/IP
trafﬁc. This is achieved by modulating covert data into
images which are transmitted through a bi-directional
Skype videocall. DeltaShaper follows a similar data en-
coding mechanism to that of CovertCast. However, and
similarly to Facet, a colored matrix is overlayed in a frac-
tion of the call screen, on top of a typical chat video run-
ning in the background. This overlay, named payload
frame, can be carefully parameterized to provide differ-
ent levels of resistance against trafﬁc analysis. On call
start, DeltaShaper undergoes a calibration phase for ad-
justing its encoding parameters according to the current
network conditions in order to preserve unobservability.
An adversary faces an inherent trade-off between the
ability to correctly detect a large amount of covert chan-
nels and to erroneously ﬂag legitimate ﬂows. Flagging
legitimate ﬂows as covert channels is something that the
adversary wants to avoid in most practical settings. For
example, a censor that aims at blocking ﬂows containing
covert channels may not be willing to block large frac-
tions of legitimate calls, that are used daily by companies
and business, as these calls may be key for the economy
of the censor’s regime [17]. Also, law-enforcement agen-
cies may not be willing to risk to falsely ﬂag legitimate
actions of citizens as criminal activity.
2.3 Performance Metrics
In face of the previous observations, when comparing the
different techniques we mainly use the following met-
rics: true positive rate, false positive rate, accuracy, and
the area under the ROC curve. The True Positive Rate
(TPR) measures the fraction of positive samples that are
correctly identiﬁed as such, while the False Positive Rate
(FPR) measures the proportion of negative samples erro-
neously classiﬁed as positive. Thus, adversaries will at-
tempt to obtain a high TPR and a low FPR when perform-
ing covert trafﬁc classiﬁcation. Accuracy captures the
fraction of correct labels output by the classiﬁer among
all predictions, and can be used as a summary of the
classiﬁcation performance since high accuracy implies
a high true positive rate and a low false positive rate.
The ROC curve plots the TPR against the FPR for the
different possible cutout points for classiﬁers possessing
adjustable internal thresholds. The area under the ROC
curve (ROC AUC) [16] summarizes this trade-off. While
a classiﬁer outputting a random guess has an AUC=0.5,
a perfect classiﬁer would achieve an AUC=1, where the
optimal point on the ROC curve is FPR=0 and TPR=1.
2.2 Adversary Model
2.4 Experimental Setup
To study the unobservability properties of the aforemen-
tioned systems, we emulate a state-level adversary which
will attempt to detect the trafﬁc of multimedia protocol
tunneling tools while resorting to different anomaly de-
tection techniques. The providers of encrypted multi-
media applications which are used as carriers for covert
channels are not assumed to collude with the adversary.
Thus, the adversary cannot simply demand application
providers to decipher and disclose raw multimedia con-
tent which could be easily screened for the presence of