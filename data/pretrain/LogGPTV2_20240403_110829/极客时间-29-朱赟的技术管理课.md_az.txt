# 34 \| 如何从错误中成长？在上一篇文章"技术人的犯错成本"里，我和你聊了技术人可能会犯的各式各样的错误，也举了很多例子，说明了技术人犯错的成本。在竞争激烈的互联网时代，试错当然是好事，但了解错误成本，避免不应该犯的错误，最大可能地从错误中成长，才是我们应有的态度。**我之前看过一篇文章，其中把错误分成四类。****第一类：伸展错误（The stretch mistakes）**伸展错误是：当你尝试去做能力之外挑战的时候，因为自身能力或其他条件的束缚，做得不够好而犯的错。这种错误通常是因为我们主动尝试导致的，再小心也难以避免。不过，在此过程中，你获得学习的机会成本很高，一旦经历过一次，就可能有长足的进步。比如在创业公司，大家有个创新性的想法需要去验证和实现，这时候谁都没经验，也没有前人的产品可以借鉴，也没有很懂的人给你指导，那怎么办？只能摸索前行，遇到问题，解决问题，犯错，然后纠正错误，所谓逢山开道，遇水搭桥，就是这个道理。当你抵达彼岸的时候，你会发现自己已经升级了，进入了另一个境界。**第二类：无知错误（The aha-moment mistakes）**无知错误是指：当你发现自己为什么错了的时候，你会发出"噢，原来是这样"的感慨。这种错误一般是因为你不知道或忘记考虑某些特殊情况导致的错误，或者是你做了错误的假设。初级程序员很容易犯这样的错误，比如忘记处理异常，没有考虑某些数值的边界值，没有进行安全校验等等，还有人因为没有仔细阅读产品文档，不知道产品设计已经改变了，也没有进行对应的调整。出现这种错误之前，你主观上根本没有意识到犯错的风险，还以为自己一直是对的，以至于出错后会有那样的反应。这种错误一般不会反复出现，但要尽可能避免在不同类型的事情上犯同类型的错误。``{=html}**第三类：粗心错误（The sloppy mistakes）**直译过来就是由于粗心大意导致的错误，很容易理解。这种错误与"无知错误"不同，是你明明知道怎么回事，但是因为不小心或者忘记了导致的错误。如果你是个粗心大意的人并且没有有意识地纠正自己，这种错误可能一犯再犯。**第四类：高风险错误（The high-stakes mistakes）**主动去做事情，但风险很高，是否会犯错不受自己的控制。比如你面临一个重要的选择，但在结果出来之前，你之前掌握的所有信息都无法告诉你哪个选择是绝对正确的，你只能去做自己认为是大概率的选择。这种错误与第一类不同，经历过一次，下次遇到高风险的事件，依然可能犯错误，并且不知道会犯什么样的错。以上我们介绍了四种错误类型，我在文章中放了一张图片，如图所示：第一类和第四类更具意识性，也就是主动去做事情，做事之前你就知道有可能出问题；第二类和第三类则属于下意识的错误，更加不可控。![](Images/ba284c180b701e76cf4bfbcba93b4b06.png){savepage-src="https://static001.geekbang.org/resource/image/8b/1a/8b1257c74cc18495795a4902ef81d91a.png"}从另一个角度来看，第一类和第二类错误都会让你学习到更多有价值的、可重用的信息，再有类似情况基本上不会犯重复错误；而第三类和第四类每次犯错后并不能学到太多可以复用的信息，以后有类似情况很可能再犯同样的错误。了解了这些错误和错误分类，我们就可以有计划有意识地去应对这些错误，尽可能不犯那些对我们成长没有意义的错。当我们面临一个犯错和成长并存的机会时，我们也要知道如何去学习并避免犯同样的错误。**有哪些措施或者方法可以系统性的让我们避免那些无效错误，并从错误中成长呢？****1为了避免伸展错误，尽可能地提供一些培训机制。**比如对新上任经理的培训，组织一些特定领域的学习班，系统地帮助大家积累岗位可能需要的技能和信息。让一个人担任某个全新的职务时，考虑导师机制，工作中有人结对给予实时指导，等等。**2为了避免无知错误，要做好信息的透明和共享。**比如完善的文档和快捷的查询机制，任何技术或产品讨论以及达成的共识，要尽可能用邮件抄送到所有相关的人。大的改动可以举行一些会议确保所有人都得到最新的信息。一些常犯的错误或者容易被漏掉的信息可以整理成Checklist 或手册等形式，让大家更方便地获取到有效信息。**3为了避免粗心错误，设置一定的复盘机制。**如果是粗心大意造成的错误，要再三总结，反复问为什么，帮助加深记忆。另外还可以通过一些流程来确保低级的错误不会发生，比如细化开发流程，设置检查点，不断迭代和反馈，慢慢形成全面考虑问题的习惯。在不同的事情上，多给自己做一些Checklist，做事的过程中对照进行，确保不会因为一时大意而有所疏漏。**4 为了避免高风险错误，所有的决定尽可能都有一个备用方案。**也就是除了Plan A，还要有 PlanB。这样当事情没有按照预期去发展的时候，我们为错误付出的代价也会更少。总结一下，今天我和你分享了"技术人如何从错误中成长"的话题，首先，我谈到了工作中常见的四种错误类型：伸展错误、无知错误、粗心错误以及高风险错误。前两种错误可以帮助我们迭代成长，后两种错误代价较高，我们要尽量避免一犯再犯。其次，我讲到了如何去避免以上的错误，针对四种错误类型，要分别采取不同的方式对待。因地制宜、对症下药，让错误成为丰富的经验，为你的成长提供充足的养分。你在工作中犯过错么，在这个过程中你又获得了什么的成长。欢迎在下面留言，我们一起成长，感谢你的收听，我们下期再见。\![](Images/9646a8154f57432904b0215eacaebe87.png){savepage-src="https://static001.geekbang.org/resource/image/7f/01/7f0faa67e327efd58c80c7411a54b201.jpg"}戳此获取你的专属海报](https://time.geekbang.org/activity/sale-poster?utm_source=app&utm_medium=zhuyun-article&utm_campaign=zhuyun-saleposter&utm_content=zhuyun0416)
# 35 \| 理解并建立自己的工作弹性在设计软件系统的时候，我们常常会提到弹性架构设计。一个好的软件系统就像是一个具备弹性的有机生命体，能够动态地改变自己的特性或功能，调配资源，去适应外界的变幻并满足不同的需求。具备弹性的架构才是有生命力的，比如系统压力和容量都是重要的变化维度，如果一个系统能够根据系统压力和容量的增减而动态地调整自己的处理能力，我们说这样的架构就是弹性架构。今天我要和你探讨的不是技术上的弹性，而是工作的弹性、心态上的弹性。其实，从某种角度而言，道理是相通的。我们经常会从朋友圈或各种媒体上看到渲染焦虑情绪的文章：三十而立了，焦虑；每天要学的内容太多，学会的太少，焦虑；AI时代来了，到处是机器学习，你还在自己学习，焦虑；开始一份新工作，但是似乎离梦想更远了，焦虑；诗和远方到底在哪呢，只看到了眼前的苟且，焦虑。有些人可能只是过过嘴瘾，宣泄一下情绪，但有更多的人确实感受到了方方面面的压力，并且真的开始焦虑起来。比如你平时的工作本来就很紧张，项目一个接着一个，到处是里程碑和Deadline，老板又很严厉，然后你就会变得敏感、紧张和焦虑。为什么同样的事情，同样的要求，组里其他的同事看起来都游刃有余呢？真实的情况可能是，别人也很焦虑，只是表面上看不出来而已。事实上，不安、轻度的焦虑，几乎会伴随人的一生。那些有抱负、有上进心并取得过成功的人，同样会有各种坏情绪，只是他们自身的系统弹性比较好，可以很快地消化和处理这些情绪，而轻度的焦虑和失控状态，有时候更容易激发人的创造力，并保持机体的活力。前几天和池老师、隔壁专栏作者二爷讨论过一个行为，英文叫做Rumination，中文直译过来叫做反刍，在这里想要表达的意思就是：反复思量，钻牛角尖，用消极的态度不断地去思考自己的压力、逆境，以至于走不出来，最后形成了焦虑的情绪。那要如何走出来呢，如何让自己在压力下可以最大程度地成长，而不是因为负面情绪止步不前呢？其实就是构建自身的弹性能力。**首先要意识到，什么是 Rumination，什么是正确面对自己的压力的方式。**对于已经发生的事，思考和复盘能够让我们总结教训吸取经验，但是不断地反刍自己的错误，则会让我们后悔并陷入不断自责的陷阱；而对于还没有发生的事情，思考能让我们对未来有更好的计划和规划，但是一根筋琢磨自己的不足，只会让我们觉得自己离理想越来越远，从而产生焦虑情绪并裹足不前。**其次，意识到反刍的危害，当我们有压力的时候，就要让自己走出思维的误区，打造自己的弹性能力。**比如，我们可以用纸和笔列出能够做的改进，然后进行定期Review，看改进是否有效果。把注意力放在那些自己能控制的地方，不要过多地因为自己无法控制的因素而责怪自己。知道每个人都有弱点，有局限性，不要过高地估计自己的能力。有些人平时睡眠很少，大部分时间用来学习和工作，但是偶尔也会有完全不想干正事的时候，那么给自己放个假，逛逛街，睡个懒觉，或者在家瞎折腾消磨时间，都是很正常的事。每个人都有乏的时候，偶尔放纵自己，也是弹性的一种表现，没什么可自责的，不要觉得浪费了时间。文武之道，一张一弛，紧张久了，松上一扣，然后再层层递进，学到的东西必然扎实。哪怕真的做了什么愚蠢的事情，好好总结为什么会这样，下次不犯同样的错误就行了。最多自嘲一下，谁不会偶尔笨一下呢？遇到坑就赶紧翻过去，后悔并没有太多的帮助。如果担心自己能力不够，不能把一件事做好，那不如把注意力放在改进和提高上，找到自己的差距在哪里，哪些地方是自己要持续提升的。把注意力放在当下一个个可以实现的小目标上。只有宏伟的目标却没有一个可执行的方案，必然引发焦虑。``{=html}**再次，身边要有一些积极向上的人，与他们做朋友，没有的话就去努力结识这样的人。看一些积极向上的文章，保持良好的心态。**当自己陷入迷茫的时候，有个人可以倾诉或者咨询。有的时候，你觉得自己特别惨，事实上别人都曾经经历过。知道了事实的真相，就好像过一条长长的黑暗隧道，你知道出口在哪里，也知道一定能够走出去，就不会太迷茫。另外，要确认自己在做一件有意义的事情。这很重要，因为你一直在向自己希望的方向前行。如果你觉得自己正在做的事完全没有意义，不论你多努力都没有帮助。这个时候，不如停下来，仔细想想自己该往哪走。**最后，想要构建出自己的弹性能力，还要具备以下两个心态。**1 不论你多努力，也不是所有的付出都会有回报，或者有等比的回报。有一次，组里的小朋友跟我聊天，说出一个困惑：我想做得更好，所以我付出的努力比别人多得多，做的事也多得多。我觉得自己做得也很好，为什么似乎很多好事都没有轮到我呢？我是这么回答她的。很多努力，不一定有立竿见影的回报。当我们做一些超出自己职责范围事的时候，应该是自发的，而不是一定要什么回报。否则，做了之后一直纠结回报，反而不利于成长，也不能持久。我们的努力就好像一道线，有的人做的工作还在线下面，却因为运气、时机、项目、公司等因素收到了好得多的结果；而有些人，付出和努力已经超过了那条线，却久久看不到成果。这个时候需要的是耐心，因为你已经攒了足够的信用分，一旦机会到了，就能顺理成章拿到你应得的东西。2 不只是你，每个人都有自己搞不定的时候。英文有句话很有意思：Fakeit，until you makeit。意思是：假装就好了，一直假装最后就成了真的。不要去考虑别人做成了什么，或是有什么技能。把自信放在自己身上，按照自己的步伐和速度，每天进步一点点。别人比你强，也许也是装的呢？想学什么，就去学，想做什么，就去做。工作上也是，公正地看待自己的能力，不断给自己设定比自身能力高一点的目标，然后努力去做，你会发现自己的弹性能力远远超乎你的想象。今天，我和你聊了个人在工作和生活中的弹性能力。什么是弹性架构，什么是人的弹性能力。人为什么会焦虑呢？可能是自身的弹性能力不够，事实上人的弹性能力也是可以锻炼和提升的。那如何打造自己的弹性能力呢？要正确思考而不是钻牛角尖，要找到需要改进的地方持续改进，偶尔放纵，不担心犯错，从错误中成长，结识乐观的朋友，一直做自己认为有价值的事情。最后还要具备好的心态，知道付出不一定有回报，每个人都有自己搞不定的事情。日拱一卒，不期速成。感谢你的收听，我们下期再见。\![](Images/9646a8154f57432904b0215eacaebe87.png){savepage-src="https://static001.geekbang.org/resource/image/7f/01/7f0faa67e327efd58c80c7411a54b201.jpg"}戳此获取你的专属海报](https://time.geekbang.org/activity/sale-poster?utm_source=app&utm_medium=zhuyun-article&utm_campaign=zhuyun-saleposter&utm_content=zhuyun0416)
# 36 \| 如何对更多的工作说"不"生活中，我们常常会讲拒绝的艺术，一个人如果不懂拒绝，永远说"Yes"，一定难以远行。越来越多的" Yes"，会让你背上沉重的包袱，无效的社交、超出能力范围的帮助、不合理的要求等等，都会耗尽你的时间和资源。大部分人都会说"不"，但要注意拒绝的艺术，维护好关系和礼仪。今天我主要和你聊聊如何说"不"，再具体一点，如何对更多的工作说不。在回答这个问题之前，有个更重要的问题是：什么时候我们应该说"不"？工作中很多时候我们是很容易说"不"的，比如一个需求评估了之后，发现无论如何在期限内都没法完成，或者技术实现上超越了自己的能力。这时候说"不"并不困难，一来你知道自己有分身也做不出来，另外需求方也能够理解这种悬殊的要求对你来说是不可能完成的任务。难的是什么呢？自己觉得加加班，努力跳起来够一够，或许能搞定呢。或者需求方认为这就是你的事，你应该搞定："这个不难啊，怎么会做不了呢？"碰到这种情况，无论是对自己说"不"，还是对别人说"不"，都困难得多。踮起脚尖做事，当然是好事。读库的创始人六哥曾经在访谈和文章中屡次提到"踮起脚尖阅读"这个概念，他说：> 人在青年时期，思维如火山活跃，激情如大雨滂沱，没有成见的束缚，没有物质的负担，没有世俗的压力，想不怀疑人生、批判社会、自己给自己找别扭、思考终极问题都难。在这么好的年龄，就应该读一些踮起脚尖才够得着的书。``{=html}做事是一个道理。但如果踮脚尖太久，亦或够得太高，容易失去平衡甚至摔倒，那么我们的弹性到底有多大呢？踮起脚尖能够到的事，值不值得自己做一些牺牲去达成呢？要对更多的工作说"不"，我觉得需要搞清楚两件事：1.  分清事情的轻重缓急，有些紧急的事情和优先级高的事情很难拒绝；2.  正确评估自己的能力和时间资源。项目要上线了，你的代码实现是最后一个关键路径，这时候你说："不，我还有些编程指南没有写完"，估计产品经理伙同业务方已经拿着板砖就来找你了。如果你写的代码引发了线上Bug，每一分每一秒都可能导致用户流失或者资金损失，这时候你说："不，等我睡一觉明天再说"。即使你能睡得着，明天可能也要去找HR 领盒饭了。对于这种很紧急的事务，我们需要在短期内放下其他事情，哪怕再忙也要说"Yes"，尽自己最大努力去处理。我刚来 Airbnb的时候，经历过一次公司账户审核，需要搭建数据环境，测试并且要处理所有不匹配的数据。那时候支付组一共就十几个人，能用的都投入到这个项目上了，如果不能按期完成，Airbnb有被停止支付的风险。那一次项目大概持续了二十多天，没有周末，晚上大概睡四五个小时，所有的时间和精力都放在了这个项目上。没有人说"不"。最后项目按期完成，公司没有遭受任何损失，项目组的人额外得到一周假期作为补偿；但是对我们而言，更大的收获是建立了自己的信用度，公司和同事会觉得这个项目的人就是靠谱。所以，事从紧急，在攸关大局的事情上，尽可能避免说"不"。那什么时候可以说"不"呢？1正确评估需求后，如果事情没有那么紧急，或者这件事别人也能完成，并且你手头正好有更重要的事情在做，告诉对方，这个需求现在做不了，需要完成当前任务之后才能考虑。从对方的角度看，如果这个需求对他很紧急，他会去协调其他的资源完成，而不是非你不可。这种需求你如果在分身无术的情况下答应了，却没有立即处理，会让别人觉得你言而无信。2如果某件事的处理已经远远超出了你的能力，甚至职责范畴，不要只是为了别人高兴而充当滥好人，揽下来又做不了，或者达不到对方的预期，不仅会耽误人家的事，还会丢失自己的信用分。这时候要学会说"不"。3如果某件事你可以做，但是因为各种原因，自己觉得有些难处，又不愿意解释就勉强答应下来，最后的结果可能是事情做了，却做得心不甘情不愿，完成度也不够。这时候也可以考虑说"不"。与生活中相比，在工作中说"不"肯定更理性，但是也不要强硬拒绝，让对方觉得你是因为不愿帮忙才拒绝的。无论是自己当前正在处理更重要的事，或者是觉得自己不是最佳人员，亦或是因为其他原因不能承担某个连续的任务，都要开门见山，把自己的想法和事实清晰地表达出来，不要用借口，承认自己能力有限并不是什么丢人的事，继续努力就好了。把说"不"的理由解释清楚，并请对方谅解，同时可以酌情表示自己愿意帮忙的意愿，并询问有没有其他的协助方式，等等。总结一下，今天我主要和你探讨了和如何在工作中说"不"，尤其是如何对更多的工作说"不"。想搞清楚这一点，我们必须区分事情的轻重缓急，知道哪些境况里可以说"不"，哪些不能。踮起脚尖做事对我们扩展自己的弹性是有帮助的，但是在时间和能力都有偏差的时候，记得要去说"不"。答应一件事情之前，要想清楚是不是同时有更重要的事，能否并行，以确保不会有时间或其他冲突。答应一件事情之后，尽可能地兑现自己的承诺，如果出现计划外的情况或者难处，及时沟通，多替对方着想。同时也要记住，在工作上，对自己力不能及的事情，提早说"不"，无论对人对己，都是负责任的表现。你有过对更多工作说"不"的经历吗，在下面写下你的故事，我们一起成长。\![](Images/9646a8154f57432904b0215eacaebe87.png){savepage-src="https://static001.geekbang.org/resource/image/7f/01/7f0faa67e327efd58c80c7411a54b201.jpg"}戳此获取你的专属海报](https://time.geekbang.org/activity/sale-poster?utm_source=app&utm_medium=zhuyun-article&utm_campaign=zhuyun-saleposter&utm_content=zhuyun0416)