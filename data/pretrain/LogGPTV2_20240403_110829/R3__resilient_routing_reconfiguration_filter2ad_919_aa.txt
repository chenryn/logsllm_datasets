title:R3: resilient routing reconfiguration
author:Ye Wang and
Hao Wang and
Ajay Mahimkar and
Richard Alimi and
Yin Zhang and
Lili Qiu and
Yang Richard Yang
R3: Resilient Routing Reconﬁguration
Ye Wang⋆ Hao Wang† Ajay Mahimkar§ Richard Alimi⋆
Yin Zhang§ Lili Qiu§ Yang Richard Yang⋆
Google†
The University of Texas at Austin§ Yale University⋆
{ye.wang,richard.alimi,yang.r.yang}@yale.edu PI:EMAIL
{mahimkar,yzhang,lili}@cs.utexas.edu
ABSTRACT
Network resiliency is crucial to IP network operations. Existing
techniques to recover from one or a series of failures do not offer
performance predictability and may cause serious congestion. In
this paper, we propose Resilient Routing Reconﬁguration (R3), a
novel routing protection scheme that is (i) provably congestion-
free under a large number of failure scenarios; (ii) efﬁcient by
having low router processing overhead and memory requirements;
(iii) ﬂexible in accommodating different performance requirements
(e.g., handling realistic failure scenarios, prioritized trafﬁc, and the
trade-off between performance and resilience); and (iv) robust to
both topology failures and trafﬁc variations. We implement R3 on
Linux using a simple extension of MPLS, called MPLS-ff. We con-
duct extensive Emulab experiments and simulations using realistic
network topologies and trafﬁc demands. Our results show that R3
achieves near-optimal performance and is at least 50% better than
the existing schemes under a wide range of failure scenarios.
Categories and Subject Descriptors
C.2.1 [Computer Communication Networks]: Network Archi-
tecture and Design—Network communications; C.2.2 [Computer
Communication Networks]: Network Protocols—Routing pro-
tocols; C.2.3 [Computer Communication Networks]: Network
Operations
General Terms
Algorithms, Performance, Reliability.
Keywords
Network Resiliency, Routing, Routing Protection.
INTRODUCTION
1.
Motivation: Network resiliency, which we deﬁne as the ability of
an IP network to recover quickly and smoothly from one or a se-
ries of failures or disruptions, is becoming increasingly important
in the operation of modern IP networks. Recent large-scale deploy-
ment of delay- and loss-sensitive services such as VPN and IPTV
imposes stringent requirements on the tolerable duration and level
of disruptions to IP trafﬁc. In a recent survey of major network car-
riers including AT&T, BT, and NTT, Telemark [36] concludes that
“The 3 elements which carriers are most concerned about when
deploying communication services are network reliability, network
usability and network fault processing capabilities.” All three ele-
ments relate to network resiliency.
Unfortunately, the current fault processing techniques to achieve
resiliency are still far from ideal. Consider fast-rerouting (FRR) [32],
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
Copyright 2010 ACM 978-1-4503-0201-2/10/08 ...$10.00.
the major technique currently deployed to handle network failures.
As a major tier-1 ISP pointed out at Multi-Protocol Label Switching
(MPLS) World Congress 2007, there are major practical challenges
when using FRR in its business core network [34]:
• Complexity: “the existing FRR bandwidth and preemption de-
sign quickly becomes too complicated when multiple FRR paths
are set up to account for multiple failures;”
• Congestion: “multiple network element failure can cause domino
effect on FRR reroute due to preemption which magniﬁes the
problem and causes network instability;”
• No performance predictability: “service provider loses perfor-
mance predictability due to the massive amount of combinations
and permutations of the reroute scenarios.”
In our own survey conducted in early 2010, two of the largest ISPs
in the world (one in Europe and one in Asia) gave instances of
serious congestion caused by FRR in their networks.
The importance of network resiliency has attracted major atten-
tion in the research community. Many mechanisms have been re-
cently proposed to quickly detour around failed network devices
(e.g., [15, 16, 29, 38]). The focus of these recent studies, however,
was mainly on reachability only (i.e., minimizing the duration in
which routes are not available to a set of destinations). Hence, they
do not address the aforementioned practical challenges, in particu-
lar on congestion and performance predictability.
It is crucial to consider congestion and performance predictabil-
ity when recovering from failures. Since the overall network capac-
ity is reduced after failures, if the remaining network resources are
not efﬁciently utilized, serious congestion may occur. As Iyer et al.
observed in a measurement study on a major IP backbone [17], net-
work congestion is mostly caused by trafﬁc that has been rerouted
due to link failures. As we will show in our evaluations using real
trafﬁc scenarios, focusing only on reachability can lead to long pe-
riods of serious congestion and thus violation of service level agree-
ments (SLAs).
However, deriving a routing protection scheme to offer perfor-
mance predictability and avoid congestion is extremely challeng-
ing. The main difﬁculty lies in the vast number of scenarios that
can result from overlapping failures (e.g., [42, 28]). For example,
in January 2006, the Sprint backbone network was partitioned due
to two ﬁber cuts that happened a few days apart [42]: Sprint work-
ers were still busy repairing the ﬁrst ﬁber cut in California when a
second ﬁber was cut in Arizona. Moreover, multiple IP layer links
may fail together due to sharing of lower layer physical components
or planned maintenance operations.
A natural approach is to enumerate all possible failure scenarios
(e.g., [2]). However, the number of failure scenarios quickly ex-
plodes for multiple simultaneous link failures. Consider a network
with 500 links, and assume that the network needs a routing protec-
tion plan to protect against 3 simultaneous link failures. The num-
ber of such scenarios exceeds 20 million! Despite much progress
on intra-domain trafﬁc engineering, optimizing routing simultane-
ously for just a few hundred network topologies is already beyond
the means of any existing technique that we are aware of. As a
result, existing routing protection schemes have to either focus ex-
clusively on reachability (hoping that congestion does not occur),
291or consider only single-link failures (which is insufﬁcient as SLAs
become ever more demanding), or face scalability issues.
Our approach: To address the above challenges, we propose Re-
silient Routing Reconﬁguration (R3), a novel routing protection
scheme that is (i) provably congestion-free under a wide range of
failure scenarios, (ii) efﬁcient in terms of router processing over-
head and memory requirement, (iii) ﬂexible in accommodating di-
verse performance requirements (e.g., trafﬁc classes with different
SLAs), and (iv) robust to trafﬁc variations and topology failures.
Note that by “congestion-free”, we mean that all trafﬁc demands,
except those that have lost reachability due to network partition, are
routed without creating any link overload. This is a much stronger
guarantee than providing reachability alone (as is commonly done
in existing schemes such as FRR).
At the heart of R3 is a novel technique for covering all possi-
ble failure scenarios with a compact set of linear constraints on
the amounts of trafﬁc that should be rerouted. Speciﬁcally, when
F links fail, the trafﬁc originally routed through each failed link
has to be rerouted by the remaining network. While the amount
of rerouted trafﬁc for a failed link depends on the speciﬁc failure
scenario, it is always upper bounded by the capacity of the failed
link (so long as the routing before the failure is congestion-free).
Therefore, by creating a virtual demand for every link in the net-
work (whose volume is equal to its link capacity) and taking the
convex combination of all such virtual demands, we can cover the
entire space of rerouted trafﬁc under all possible combinations of
F link failures. Since the convex hull of virtual demands can be
represented as a compact set of linear constraints, we can leverage
linear programming duality to efﬁciently optimize routing over the
entire set. In essence, we eliminate the needs for enumerating fail-
ure scenarios by converting topology uncertainty (due to failures)
into uncertainty in rerouted trafﬁc, which is easier to cope with.
Since the virtual demands are upper bounds of the rerouted traf-
ﬁc, we guarantee that if a routing is congestion-free over the actual
demand plus the virtual demand set, it yields a link-based protec-
tion scheme that is congestion-free under all possible failure sce-
narios. Interestingly, the converse is also true for single-link fail-
ures: if there exists a link-based protection scheme that can guar-
antee no congestion for all single-link failure scenarios, then there
must be a routing that is congestion-free over the actual demand
plus the virtual demand set. Thus, the seemingly wasteful replace-
ment of rerouted trafﬁc with link capacities is actually efﬁcient.
Based on the above idea, we develop R3 that consists of an of-
ﬂine precomputation phase and an online reconﬁguration phase.
During the ofﬂine phase, we compute routing for the actual demand
plus the virtual demand on the original network topology. During
the online phase, R3 responds to failures using a simple rescaling
procedure, which converts the ofﬂine precomputed routing into a
protection routing that does not traverse any failed links. A unique
feature of R3 is that it is provably congestion-free under multiple
link failures and optimal for single-link failure scenarios. We fur-
ther extend R3 to handle (i) trafﬁc variations, (ii) realistic failure
scenarios, (iii) prioritized trafﬁc with different protection levels,
(iv) trade-off between performance under normal conditions and
failures, and (v) trade-off between network utilization and delay.
We implement R3 protection using MPLS-ff, a simple extension
of MPLS, while the base routing can use either OSPF or MPLS.
Our Emulab evaluation and simulation based on real Internet topolo-
gies and trafﬁc traces show that R3 achieves near-optimal perfor-
mance. Its performance is at least 50% better than existing schemes
including OSPF reconvergence, OSPF with CSPF fast rerouting,
FCP [26], and Path Splicing [29].
2. OVERVIEW
A traditional trafﬁc engineering algorithm computes an effective
base routing r that optimizes a network metric, such as minimiz-
ing congestion cost or maximum link utilization (e.g., [12, 13, 31,
39]). Then, a protection routing p is derived from r, for exam-
ple, through fast rerouting (FRR). While simple and well studied,
this traditional approach can easily result in serious network con-
gestion and performance unpredictability under failures. Below we
ﬁrst formally deﬁne the problem of resilient routing and explain
why it is challenging. We then introduce the key ideas of R3.
Notations: Let G = (V, E) be an IP network under consideration,
where V is the set of routers in the network, and E is the set of
network links connecting the routers. Let d be the trafﬁc matrix
between the routers in V , where dab is the trafﬁc demand originated
at router a to router b. Let ce or cij denote the capacity of a directed
link e = (i, j) from router i to router j. We refer to i as the source
node of link e and j as its tail node.
To deﬁne routing precisely, we use the ﬂow representation of
routing [3, 6]. Formally, a ﬂow representation of a routing r is
speciﬁed by a set of values {rab(e)|a, b ∈ V, e ∈ E}, where rab(e)
or rab(i, j) speciﬁes the fraction of trafﬁc for the origin-destination
(OD) pair a → b that is routed over link e = (i, j). For actual traf-
ﬁc dab of the OD pair a → b, the contribution of this trafﬁc to the
load on link e is dabrab(e). For {rab(e)} to be a valid routing for
a given OD pair a 6= b, it should satisfy the following conditions:
[R1] ∀i 6= a, b : P(i,j)∈E
[R2] P(a,i)∈E rab(a, i) = 1;
[R3] ∀(i, a) ∈ E : rab(i, a) = 0;
[R4] ∀e ∈ E : 0 ≤ rab(e) ≤ 1.
rab(i, j) = P(j,i)∈E
rab(j, i);
(1)
The ﬁrst condition indicates ﬂow conservation at any intermediate
nodes. The second condition speciﬁes that all trafﬁc from a source
should be routed. The third condition prevents trafﬁc from return-
ing to the source. Finally, according to the deﬁnition of rab(e), it
is between 0 and 1.
Problem formulation: We consider the following basic formula-
tion of resilient routing. In Section 3.5, we provide several useful
extensions to the basic problem formulation.
DEFINITION 1
(RESILIENT ROUTING). The problem of resilient
routing is to design an effective base routing r and protection rout-
ing p for trafﬁc matrix d to ensure that the network is congestion-
free (i.e., the maximum link utilization stays below 100%) under all
possible failure scenarios involving up to F failed links. The base
routing r can also be given as an input (e.g., by OSPF), in which
case only the protection routing p needs to be designed.
Multiple protection routing schemes are possible. To minimize
disruption and control overhead, we only consider protection rout-
ing schemes that change the route of an OD pair when the OD pair
traverses a failed link before it fails. Among this class of routing re-
conﬁguration techniques, link-based protection is the most widely
used. Thus, we focus on link-based protection, but our scheme can
extend to path-based protection, which can be viewed as a special
case of link-based protection in an overlay topology. In link-based
protection, the source node of a failed link reroutes the trafﬁc orig-
inally passing through the failed link along a detour route to reach
the tail node of the link. Thus, the protection routing p only needs
to be deﬁned for each link that requires protection; in contrast, the
base routing r deﬁnes routing for each OD pair.
Challenge in coping with topology uncertainty: Due to the fre-
quency of failures, the delay in failure recovery [17, 26] and in-
creasingly stringent SLAs for network services, it is essential for
resilient routing to avoid congestion under multiple link failures
overlapping in time. This requires the design of resilient routing
to explicitly consider all possible failure scenarios. One natural
approach to resilient routing is to enumerate all failure scenarios
(e.g., [2]) and derive a routing that works well for all these sce-
narios. However, this approach faces serious scalability and efﬁ-
ciency issues. Suppose a network with |E| links needs to handle
up to F link failures. Then there will bePF
ios, which result in prohibitive computation and conﬁguration cost
even for a small number of failures. On the other hand, in order
i ´ failure scenar-
i=1`|E|
292to achieve the congestion-free guarantee, it is imperative to protect
against all of the PF
i=1`|E|
i ´ scenarios, since a skipped scenario
may arise in practice and cause network congestion and SLA vi-
olation. Therefore, fundamental challenges in achieving resilient
routing involve (i) efﬁcient computation of protection routing that
is provably congestion-free even under multiple failures and (ii)
simple re-conﬁguration in response to failures.
From topology uncertainty to trafﬁc uncertainty: The key idea
of R3 is to convert topology uncertainty (due to various failure sce-
narios) into trafﬁc uncertainty that captures the different trafﬁc de-
mands that need to be rerouted under different failure scenarios.
Speciﬁcally, suppose we want to design a routing so that we can
protect against up to F arbitrary link failures. Under link-based
protection, the rest of the network needs to carry trafﬁc previously
carried by the failed links. It is easy to see that the rerouted trafﬁc
is upper bounded by the capacity of each failed link (as long as no
link is fully utilized under the base routing r). Therefore, for every
link in the network we create a virtual demand that is equal to its
link capacity; the convex combination of all such virtual demands
should cover the entire space of rerouted trafﬁc. Formally, for each
link e ∈ E, we associate a virtual demand variable xe. We then
form a rerouting virtual demand set XF as
≤ 1 (∀e ∈ E),Pe∈E
xe
ce
≤ Fo .
(2)
XF
0 ≤ xe
ce
△=nx˛˛˛
For any failure scenario that involves up to F link failures, the traf-
ﬁc that needs to be rerouted always belongs to the set XF . There-
fore, XF represents an envelope (i.e., superset) of the rerouted traf-
ﬁc under all possible failure scenarios.
Instead of optimizing the routing for the ﬁxed trafﬁc matrix d on
a variable topology under all possible failure scenarios, we seek a
routing that works well for the entire demand set d + XF but on the
△= {d + x|x ∈ XF } denotes
ﬁxed original topology, where d + XF
the sum of the actual demand d and the set of virtual demands XF .
In this way, we convert topology uncertainty into trafﬁc uncertainty.
At the ﬁrst glance, converting topology uncertainty into trafﬁc
uncertainty makes the problem more challenging, because the num-
ber of failure scenarios is at least ﬁnite, whereas d + XF contains
an inﬁnite number of trafﬁc matrices. However, the rerouting vir-
tual demand set XF can be represented by a compact set of linear
constraints in (2). By applying linear programming duality, we can
ﬁnd the optimal base routing r and protection routing p for the
entire demand set d + XF without enumerating trafﬁc matrices.
Another potential concern is that the deﬁnition of the rerout-
ing virtual demand set XF appears rather wasteful. When links
e1, · · · , eF fail, the corresponding virtual demands in XF can be
as large as xei = cei (i = 1, · · · , F ). That is, we replace the
rerouted trafﬁc on failed link ei with a virtual demand equal to the
link capacity cei . Interestingly, we prove in Section 3.4 that the
seemingly wasteful replacement of rerouted trafﬁc with link capac-
ities is necessary at least for F = 1. Speciﬁcally, if there exists a
link-based protection routing that guarantees no congestion for all
single-link failure scenarios, then there must exist a routing that is
congestion-free over the entire demand set d + XF .
R3 overview: Based on the previous insight, we develop R3 that
consists of the following two main phases:
• Ofﬂine precomputation. During the ofﬂine precomputation phase,
R3 computes routing r (if not given) for trafﬁc matrix d and
routing p for rerouting virtual demand set XF to minimize the
maximum link utilization on the original network topology over
the combined demand set d + XF . The optimization is made
efﬁcient by leveraging linear programming duality.
• Online reconﬁguration. During the online reconﬁguration phase,
after a failure, R3 applies a simple procedure called rescaling to
convert p (which is deﬁned on the original network topology