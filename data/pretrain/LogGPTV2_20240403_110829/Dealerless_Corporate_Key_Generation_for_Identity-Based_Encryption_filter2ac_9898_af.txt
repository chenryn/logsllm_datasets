n(cid:48)}(cid:1) \ {Pi}) computes resulti,ˆj ←
Pt}(cid:83){P (cid:48)
) = TRUE) ∧ (f pi = H(cid:0)(i, 1, Ei,1)||
(i, 2, Ei,2)|| . . . ||(i, n(cid:48), Ei,n(cid:48) )||(i, Ei)(cid:1))∧(Ei = E(i)).
(V erif y(V Ki, (i, 1, Ei,1)||(i, 2, Ei,2)|| . . . ||(i, n(cid:48), Ei,n(cid:48) )||
(i, Ei)||pid||3, σ(3)
1, . . . , P (cid:48)
i
• At Step (5(a)ii), whether {Ei,j}n(cid:48)
j=1 are valid shares
of Ei is checked by checking whether they satisfy
the policy A(cid:48).
• At Step (6), each P (cid:48)
j (j = 1, . . . , n(cid:48)) checks if the
secret share si,j it received from Pi ∈ {P1, . . . , Pt}\
{P (cid:48)
j} is consistent with the corresponding public
share Ei,j, by checking whether MKVerify(CMPK,
Ei,j, si,j) = 1 holds.
• At Step (7), each P (cid:48)
j (j = 1, . . . , n(cid:48)) takes the fol-
lowing actions to compute its master public/secret
key share.
– P (cid:48)
j computes constants {wi}t
F indLsssConst(A, (M, ρ),{P1, . . . , Pt}). Note
that F indLsssConst(·,·,·) is a deterministic
j (j = 1, . . . , n(cid:48)) will get and
algorithm, all P (cid:48)
use the same {wi}t
i=1 ←
i=1.
– At Step (7a), P (cid:48)
j computes
(cid:48)(j) ← t(cid:79)
E
⊗wi
(Ei,j)
(cid:0)E(cid:48)(j), CMPK(cid:1). Note that anyone can check
and sets its master public key to be mpk
(cid:48)(j) :=
i=1
the correctness of E(cid:48)(j), using the values of
{Ei,j}1≤i≤t on the public bulletin board. This
will deter P (cid:48)
j from dishonestly publishing the
values of E(cid:48)(j).
– At Step (7b), P (cid:48)
j computes
(cid:48)(j) ← t(cid:77)
s
i=1
⊕wi
(si,j)
(cid:0)s(cid:48)(j)(cid:1).
and sets its master secret key to be msk
(cid:48)(j) :=
n(cid:48)}.
Table 3 gives a list of the shares of {P (cid:48)
Note that at Step (5) it has been endorsed that
{Ei,j}n(cid:48)
j=1 (for i = 1, . . . , t) are valid shares of
Ei(= E(i)) according to (M(cid:48), ρ(cid:48)). It is easy to see
j=1 are valid shares of
that {E(cid:48)(j) =(cid:78)t
1, . . . , P (cid:48)
i,j }n(cid:48)
⊗wi
i=1 E
E =(cid:78)t
⊗wi
i
according to (M(cid:48), ρ(cid:48)). In partic-
i=1 E
ular, as F indLsssConst() is a deterministic algo-
rithm, all P (cid:48)
j (j = 1, . . . , n(cid:48)) got and used the same
{wi}t
i=1 ← F indLsssConst(A, (M, ρ), {P1, . . . , Pt}).
Thus, for any minimum authorized set T (cid:48) ⊆ {P (cid:48)
1,
n(cid:48)}, let J(cid:48) = {j(cid:48)|P (cid:48)
j(cid:48) ∈ T (cid:48)}, compute con-
. . . , P (cid:48)
stants {w(cid:48)
j(cid:48)|j(cid:48) ∈ J(cid:48)} ← F indLsssConst(A(cid:48), (M(cid:48),
ρ(cid:48)), T (cid:48)), we have
(cid:79)
t(cid:79)
(cid:79)
t(cid:79)
t(cid:79)
(cid:79)
(cid:48)(j(cid:48)))
⊗wi )
(Ei,j(cid:48) )
⊗w(cid:48)
j(cid:48)
j(cid:48) =
j(cid:48)∈J(cid:48)
⊗w(cid:48)
⊗w(cid:48)
(E
(
i=1
j(cid:48)∈J(cid:48)
⊗wi =
j(cid:48) )
(Ei,j(cid:48) )
⊗wi = E.
(Ei)
=
(
i=1
j(cid:48)∈J(cid:48)
i=1
Also, suppose P (cid:48)
j honestly executes Step (7b) to
compute s(cid:48)(j) and set its master secret key msk
(cid:48)(j),
then MKVerify(CMPK, E(cid:48)(j), s(cid:48)(j)) = 1 will hold,
is a valid (master public key,
i.e.
(cid:48)(j)(cid:17)
(cid:48)(j), msk
(cid:16)
mpk
master secret key) pair.
Thus, the system master public key remains un-
changed, i.e. mpksys = (E, CPK), and the new
n(cid:48)} set their (master public key,
PKGs {P (cid:48)
master secret key) pairs
mpk
according to the new policy A(cid:48).
(cid:48)(j)(cid:17)(cid:111)n(cid:48)
1, . . . , P (cid:48)
(cid:48)(j), msk
(cid:110)(cid:16)
j=1
5.2 Security Analysis
In this part we analyze the security of the transforming
protocol above. Before the analysis, we assume that there
is at least one honest PKG in {P1, . . . , Pt}, since we have
assume the security of the system based on the policy A
among {P1, . . . , Pn}. Also, we assume that there is at least
n(cid:48)}. This is a reasonable as-
one honest PKG in {P (cid:48)
sumption, since otherwise, there is no security at all as all
PKGs are dishonest or malicious.
1, . . . , P (cid:48)
1, . . . , P (cid:48)
• Similar to the security analysis in Sec. 4.2, {P1, . . . , Pt}
n(cid:48)} will honestly execute Step (2) of the
transforming protocol, executing the dealerless dis-
tributed PKG setup protocol (Steps 2-7) to produce
n(cid:48)} accord-
the master public/secret keys for {P (cid:48)
ing to the new policy. Note that the underlined parts
in Step (5(a)i), Ei = E(i), guarantee that each Pj (j =
1, . . . , t) will honestly set the value of Ei in Step (2a).
1, . . . , P (cid:48)
(cid:83){P (cid:48)
6. CONCLUSION
In this work we deﬁned a generic key-homomorphic IBE
template, which covers many existing important IBE schemes.
221P1: E(1) (M(cid:48),ρ(cid:48))−→ (E1,1, . . . , E1,n(cid:48) )
s(1) (M(cid:48),ρ(cid:48))−→ (s1,1, . . . , s1,n(cid:48) )
.
.
.
Pt: E(t) (M(cid:48),ρ(cid:48))−→ (Et,1, . . . , Et,n(cid:48) )
s(t) (M(cid:48),ρ(cid:48))−→ (st,1, . . . , st,n(cid:48) )
Outputs:
P (cid:48)
1
E1,1
s1,1
.
.
.
Et,1
· · ·
· · ·
.
.
.
· · ·
P (cid:48)
j
E1,j
s1,j
.
.
.
Et,j
· · ·
· · ·
.
.
.
· · ·
st,1
E(cid:48)(1) =(cid:78)t
s(cid:48)(1) =(cid:76)t
⊗wi
i,1
⊕wi
i,1
i=1 E
i=1 s
st,j
· · · E(cid:48)(j) =(cid:78)t
s(cid:48)(j) =(cid:76)t
⊗wi
i,j
⊕wi
i,j
i=1 E
i=1 s
P (cid:48)
n
E1,n(cid:48)
s1,n(cid:48)
.
.
.
Et,n(cid:48)
st,n(cid:48)
· · · E(cid:48)(n(cid:48)) =(cid:78)t
s(cid:48)(n(cid:48)) =(cid:76)t
⊗wi
i,n(cid:48)
⊕wi
i,n(cid:48)
i=1 E
i=1 s
Table 3: Public and Secret Shares of New PKGs
For this generic IBE template, we propose a dealerless Dis-
tributed PKG protocol to setup the master secret key in a
completely distributed manner, among multiple PKGs ac-
cording to a policy which could be any monotonic access
structures that reﬂect the practical requirements on secu-
rity and availability of the master secret key.
If and only
if an authorized set of PKGs are available, user private key
can be generated in a distributed manner, and only the user
knows his private key. The distributed PKG does not aﬀect
the encryption and decryption algorithms of the underly-
ing IBE schemes. We also proposed a protocol to support
the dynamic changes of the PKGs and the policy, i.e. re-
distributing the master secret key among the new PKGs ac-
cording to the new policy, while remaining the master secret
key unchanged.
The two protocols do not need any third party acting
as a trusted dealer to present, and the master secret key
should never be generated or resided in any one single site.
During the user private key generation process, the master
secret key never appears in any one place, either. In con-
clusion, for the IBE schemes that comply with the generic
key-homomorphic IBE template, we address the key-escrow
problem, and provide ﬂexible and strong protection on the
security and availability of the master secret key.
7. REFERENCES
[1] Y. Aumann and Y. Lindell. Security against covert
adversaries: Eﬃcient protocols for realistic
adversaries. In TCC 2007, pages 137–156, 2007.
[2] A. Beimel. Secure Schemes for Secret Sharing and Key
Distribution. PhD thesis, Israel Institute of
Technology, Technion, Haifa, Israel, 1996.
[3] D. Boneh and X. Boyen. Eﬃcient selective-id secure
identity-based encryption without random oracles. In
EUROCRYPT 2004, pages 223–238, 2004.
[4] D. Boneh and X. Boyen. Secure identity based
encryption without random oracles. In CRYPTO
2004, pages 443–459, 2004.
[5] D. Boneh, X. Boyen, and E. Goh. Hierarchical identity
based encryption with constant size ciphertext. In
EUROCRYPT 2005, pages 440–456, 2005.
[6] D. Boneh and M. K. Franklin. Identity-based
encryption from the weil pairing. In CRYPTO 2001,
pages 213–229, 2001.
[7] D. Boneh and M. K. Franklin. Identity-based
encryption from the weil pairing. SIAM J. Comput.,
32(3):586–615, 2003.
[8] X. Boyen. A tapestry of identity-based encryption:
practical frameworks compared. IJACT, 1(1):3–21,
2008.
[9] X. Boyen and B. Waters. Anonymous hierarchical
identity-based encryption (without random oracles).
In CRYPTO 2006, pages 290–307, 2006.
[10] M. Geisler and N. P. Smart. Distributing the key
distribution centre in sakai-kasahara based systems. In
Cryptography and Coding 2009, pages 252–262, 2009.
[11] R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin.
Secure distributed key generation for discrete-log
based cryptosystems. In EUROCRYPT’99, pages
295–310, 1999.
[12] C. Gentry. Practical identity-based encryption without
random oracles. In EUROCRYPT 2006, pages
445–464, 2006.
[13] J. Horwitz and B. Lynn. Toward hierarchical
identity-based encryption. In EUROCRYPT 2002,
pages 466–481, 2002.
[14] A. Kate and I. Goldberg. Distributed private-key
generators for identity-based cryptography. In SCN
2010, pages 436–453, 2010.
[15] A. B. Lewko and B. Waters. Decentralizing
attribute-based encryption. IACR Cryptology ePrint
Archive, 2010:351, 2010.
[16] A. B. Lewko and B. Waters. New techniques for dual
system encryption and fully secure HIBE with short
ciphertexts. In TCC 2010, pages 455–479, 2010.
[17] Z. Liu, Z. Cao, and D. S. Wong. Eﬃcient generation of
linear secret sharing scheme matrices from threshold
access trees. IACR Cryptology ePrint Archive,
2010:374, 2010.
[18] R. Sakai and M. Kasahara. ID based cryptosystems
with pairing on elliptic curve. IACR Cryptology ePrint
Archive, 2003:54, 2003.
[19] J. H. Seo, T. Kobayashi, M. Ohkubo, and K. Suzuki.
Anonymous hierarchical identity-based encryption
with constant size ciphertexts. In PKC 2009, pages
215–234, 2009.
[20] A. Shamir. How to share a secret. Commun. ACM,
22(11):612–613, 1979.
[21] A. Shamir. Identity-based cryptosystems and
signature schemes. In CRYPTO’84, pages 47–53, 1984.
[22] B. Waters. Eﬃcient identity-based encryption without
random oracles. In EUROCRYPT 2005, pages
114–127, 2005.
222