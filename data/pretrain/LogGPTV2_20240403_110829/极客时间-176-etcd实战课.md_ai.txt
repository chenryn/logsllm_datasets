# 06 \| 租约：如何检测你的客户端存活？你好，我是唐聪。今天我要跟你分享的主题是租约（Lease）。etcd 的一个典型的应用场景是Leader 选举，那么 etcd 为什么可以用来实现 Leader选举？核心特性实现原理又是怎样的？今天我就和你聊聊 Leader 选举背后技术点之一的 Lease，解析它的核心原理、性能优化思路，希望通过本节让你对 Lease 如何关联key、Lease 如何高效续期、淘汰、什么是 checkpoint机制有深入的理解。同时希望你能基于 Lease 的 TTL特性，解决实际业务中遇到分布式锁、节点故障自动剔除等各类问题，提高业务服务的可用性。什么是 Lease在实际业务场景中，我们常常会遇到类似 Kubernetes的调度器、控制器组件同一时刻只能存在一个副本对外提供服务的情况。然而单副本部署的组件，是无法保证其高可用性的。那为了解决单副本的可用性问题，我们就需要多副本部署。同时，为了保证同一时刻只有一个能对外提供服务，我们需要引入Leader 选举机制。那么 Leader选举本质是要解决什么问题呢？首先当然是要保证 Leader 的唯一性，确保集群不出现多个Leader，才能保证业务逻辑准确性，也就是安全性（Safety）、互斥性。其次是主节点故障后，备节点应可快速感知到其异常，也就是活性（liveness）检测。实现活性检测主要有两种方案。方案一为被动型检测，你可以通过探测节点定时拨测 Leader节点，看是否健康，比如 RedisSentinel。 方案二为主动型上报，Leader节点可定期向协调服务发送\"特殊心跳\"汇报健康状态，若其未正常发送心跳，并超过和协调服务约定的最大存活时间后，就会被协调服务移除Leader 身份标识。同时其他节点可通过协调服务，快速感知到 Leader故障了，进而发起新的选举。我们今天的主题，Lease，正是基于主动型上报模式，**提供的一种活性检测机制**。Lease 顾名思义，client 和 etcd server之间存在一个约定，内容是 etcd server保证在约定的有效期内（TTL），不会删除你关联到此 Lease 上的key-value。 若你未在有效期内续租，那么 etcd server 就会删除 Lease 和其关联的key-value。 你可以基于 Lease 的 TTL 特性，解决类似 Leader 选举、Kubernetes Event自动淘汰、服务发现场景中故障节点自动剔除等问题。为了帮助你理解 Lease的核心特性原理，我以一个实际场景中的经常遇到的异常节点自动剔除为案例，围绕这个问题，给你深入介绍Lease 特性的实现。在这个案例中，我们期望的效果是，在节点异常时，表示节点健康的 key能被从 etcd 集群中自动删除。Lease 整体架构在和你详细解读 Lease 特性如何解决上面的问题之前，我们先了解下 Lease模块的整体架构，下图是我给你画的 Lease模块简要架构图。![](Images/540d1d54b20c89ea238c274f86732737.png)savepage-src="https://static001.geekbang.org/resource/image/ac/7c/ac70641fa3d41c2dac31dbb551394b7c.png"}etcd 在启动的时候，创建 Lessor 模块的时候，它会启动两个常驻goroutine，如上图所示，一个是 RevokeExpiredLease任务，定时检查是否有过期 Lease，发起撤销过期的 Lease 操作。一个是CheckpointScheduledLease，定时触发更新 Lease的剩余到期时间的操作。Lessor 模块提供了 Grant、Revoke、LeaseTimeToLive、LeaseKeepAlive API给 client 使用，各接口作用如下:1.  Grant 表示创建一个 TTL 为你指定秒数的 Lease，Lessor 会将 Lease    信息持久化存储在 boltdb    中；    2.  Revoke 表示撤销 Lease    并删除其关联的数据；        3.  LeaseTimeToLive 表示获取一个 Lease    的有效期、剩余时间；        4.  LeaseKeepAlive 表示为 Lease    续期。    key 如何关联 Lease了解完整体架构后，我们再看如何基于 Lease特性实现检测一个节点存活。首先如何为节点健康指标创建一个租约、并与节点健康指标 key关联呢? 如 KV 模块的一样，client 可通过 clientv3 库的 Lease API 发起 RPC调用，你可以使用如下的 etcdctl 命令为 node 的健康状态指标，创建一个Lease，有效期为 600 秒。然后通过 timetolive 命令，查看 Lease的有效期、剩余时间。    
# 创建一个TTL为600秒的lease，etcd server返回LeaseID    $ etcdctl lease grant 600    lease 326975935f48f814 granted with TTL(600s)    