# 初学CVE-2010-2883漏洞调试及复现
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 关于CVE-2010-2883
官方报告：
> Stack-based buffer overflow in CoolType.dll in Adobe Reader and Acrobat 9.x
> before 9.4, and 8.x before 8.2.5 on Windows and Mac OS X, allows remote
> attackers to execute arbitrary code or cause a denial of service
> (application crash) via a PDF document with a long field in a Smart
> INdependent Glyphlets (SING) table in a TTF font, as exploited in the wild
> in September 2010. NOTE: some of these details are obtained from third party
> information.[[1]](https://cve.mitre.org/cgi-> bin/cvename.cgi?name=CVE-2010-2883)
大致翻译：在 **Adobe Reader** 和 **Acrobat**
9.4之前的9.x版本中用于实现CoolType(清晰显示文本的字体还原技术)技术的库CoolType.dll中在解析TrueType字体文件中的
**SING** 表的 **uniqueName** 字段时调用的 **strcat** 函数 **未检查长度**
导致存在基于栈的缓冲区溢出漏洞。远程攻击者可构造恶意的SmartINdependent Glyphlets
(SING)表修改内存数据从而执行任意代码。[[2]](https://www.anquanke.com/post/id/179681)
## 攻击方视角
思路：生成一份恶意文件，但是我不知道对方是不是被攻击的版本所以采用大规模的钓鱼攻击。
  * MSF生成恶意文档（无特殊功能） 
    * 搜索相关CVE一份是基于浏览器的，一份基于软件的，这里选择基于软件的 
注：原版被围了绕过一些识别，所以使用了随机字符（虽然没什么用），这里仅作示例，在
`/usr/share/metasploit-framework/modules/exploits/windows/fileformat/adobe_cooltype_sing.rb`的第102行处，可以改为`sing
 set payload windows/exec
        msf5 exploit(windows/fileformat/adobe_cooltype_sing) > set CMD calc.exe
就是简简单单弹出计算器
  * 大规模群发邮件、QQ消息，等待受害者上钩（谁还用这个软件啊）当受害者访问后就会下载该文件
  * 受害者访问时 
    * 1.IE调用程序读取
    * 2.下载到本地进行读取只要Adobe Reader的受影响版本读取文件，就会弹出计算器
## 一些相关知识
###  PDF文件格式
  * **一这次的恶意文件来说，PDF文件结构主要可以分为四个部分：[[3]](https://baike.baidu.com/item/pdf/317608?)**
    * **1.首部**`25 50 44 46 2D 31 2E 35`这样的8字节十六进制代码，解析过后是`%PDF-1.5`，表明这份pdf文件是1.5版本的
    * **2.文件体** 里面由若干个的obj对象来组成
例如用红色框出的就是一个文件体，而且还有很多的文件提没有被框出，整理后的格式如下
                1 0 obj
        >
        endobj
**注** ：含’#’的是没有被解析的字串,应该是ASCII编码，解码后如下
                1 0 obj
        >
        endobj
      * 第一个数字称为对象号，来唯一标识一个对象的
      * 二个是产生号，是用来表明它在被创建后的第几次修改，所有新创建的PDF文件的产生号应该都是0，即第一次被创建以后没有被修改过
      * 对象的内容应该是包含在>之间的，最后以关键字endobj结束
    * **3.交叉引用表** 用来索引各个obj 对象在文档中的位置，以实现随机访问，在那份文档中如下
                xref
        0 15
        0000000000 65535 f
        0000000015 00000 n
        0000000139 00000 n
        0000000262 00000 n
        0000000292 00000 n
        0000000330 00000 n
        0000000467 00000 n
        0000000501 00000 n
        0000000729 00000 n
        0000000849 00000 n
        0000001014 00000 n
        0000040804 00000 n
        0000040877 00000 n
        0000044477 00000 n
        0000044512 00000 n
很明显，`xref`标志这部分是交叉引用表的开始，第一行数字 `0 15`说明对象号是从 **0** 开始，有 **15** 个对象
> > `0000000000 65535 f`，一般每个PDF文件都是以这一行开始交叉应用表的，说明对象 **0**
> 的起始地址为0000000000，产生号（generation number）为 **65535**
> ，也是最大产生号，不可以再进行更改，而且最后对象的表示是 **f** , 表明该对象为 **free** , 这里，大家可以看到，其实这个对象可以看作是
> **文件头** 。
>>