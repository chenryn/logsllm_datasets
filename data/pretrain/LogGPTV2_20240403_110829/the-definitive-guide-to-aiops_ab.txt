Dynamic baselines allow the tools to determine what constitutes normal activity under given circumstances (such as the time of day and the number of registered users for an application), then detect data or events that do not align with the dynamicbaseline. 
Univariate vs. Multivariate Anomalies 
Alongside dynamic baselining, another important factor to bear in mind for AIOps detection use cases is the difference between univariate and multivariate anomalies. 
Univariate anomaly detection focuses on identifying outliers based on single metrics or data points. For example, a univariate anomaly might generate an alert when disk storage spacesurpasses a normal threshold. 
Multivariate anomalies, in contrast, detect outliers based on a series of different metrics. In a basic multivariate detection scenario, an AIOps-enabled tool might analyze disk usage, memory usage and network traffic at the same time and assess whether overall behavior is out of the ordinary. In this case, excessive disk usage alone may not trigger an alert, but if high disk usage coincides with unusual memory consumption and network traffic, the tool would be likely to determine that an anomaly exists.This is a simple multivariate detection example. In more complex situations, multivariate methods rely on neural networks to model interactions between various metrics and make decisions based on them. 
 The Definitive Guide to AIOps 15 
Multivariate anomaly detection thus provides deeper, more comprehensive insight. However, multivariate detection is also more difficult to implement effectively because it requiresidentifying multiple metrics that can be analyzed in common and creating algorithms that can interpret them accurately. 
Multivariate detection is also more difficult to scale because complexity grows as more metrics are introduced. 
In most cases, an AIOps solution that combines univariate and multivariate detection methods will deliver the best results.Univariate detection can be useful for basic alerting and monitoring, while multivariate methods can power more complex automated decision-making. 
Another critical capability of an AIOps solution is to hide the algorithmic complexity. It should automatically pick the right algorithm based on the type of data being analyzed. 
Detection Model ExtensibilityDetection Model Extensibility 
The detection processes that power AIOps should be extensible and future-proof, rather than designed only to meet a finite set of needs. 
Extensible detection strategies are characterized by the following features: 
● The ability to add new metrics, or modify the weights 	afforded to various metrics within detection models. 
● The ability to add new data sources and technologies into 	detection models.● Support for continuing to adapt dynamic baselining 
	techniques as behavior grows more nuanced and complex. 
 The Definitive Guide to AIOps 16What this means in practice is that detection models often start small, but grow in scale and complexity over time. At first, your AIOps strategy may be driven primarily by univariate detection models, coupled with some basic multivariate methods. And they may focus on simple metrics such as memory and disk usage. Over time, however, you will likely want to make your techniques more complex by adopting more sophisticated multivariate models that collect metrics from advanced technologies—such as the startup time of containers or the execution time ofserverless functions.
 The Definitive Guide to AIOps 17 
Chapter 4: 
Causal Analysis 
A refers to the task of tracing a problem to its source or sources in order to help resolve it. 
nother key use case for AIOps is causal analysis. This 
The Challenge of Causal Analysis 
AIOps-driven causal analysis is increasingly important as software environments grow more complex, and the dependencies between different components become increasingly difficult to map on the surface level.Consider, for example, a web application that consists of a frontend component as well as a backend database, and that is deployed as a set of microservices hosted in containers. In the event that the IT Ops team notices that the web server has started responding slowly, tracing the problem to its root cause could be quite difficult without the assistance of automated, data-based tools. The issue could be caused by networkbottlenecks. It could be the result of failing disks, or a database configuration problem. The container orchestrator could be failing to balance application load properly across multiple container instances. The application code itself might be the source of the problem. 
 The Definitive Guide to AIOps 18 
Rather than investigating each potential cause of the problem manually, an IT Ops team could deploy AIOps tools thatautomatically analyze data in order to determine the likely cause or causes of the issue. By parsing information such as network traffic patterns, container statistics, application profilers and database logs, an AIOps tool could provide quick visibility into the issue. AIOps tools also provide end-to-end visibility, 
enabling IT Ops teams to identify problems that they might not recognize on their own.Causal Analysis Data Collection and Contextualization 
Your causal analysis efforts are only as effective as the data you collect. You must determine which types of causal analysis you intend to perform, then ensure that you are collecting and normalizing the right data to support those analyses.It is also important to collect contextual information, or data that is not directly related to the problem whose causes you are analyzing. This includes information such as how often similar problems have occurred in the past and what their causes were, or whether other systems are experiencing similar issues. 
Contextual information such as this can help you interpret the scope and significance of a problem, and prioritize it accordingly.Handling Multiple Causes 
It is sometimes the case that there are multiple causes of an issue. For instance, in the web application example above, it is possible that network bandwidth limitations and disk I/O 
problems are both causing a slow application response. Your causal analysis strategy and reaction should therefore be 
designed to handle situations in which multiple causes must be addressed in order to resolve a problem.The Definitive Guide to AIOps 19 
Causes can come in multiple layers, too. To go back again to the web application example, slow response times could be caused by improper load balancing, which is in turn caused by a lack of memory resources for the container orchestrator. In this case, resolving the first cause (the load balancing problem) won’t solve the underlying issue.In situations like these, where multiple causes are at play, graphical modeling can be helpful for separating intermediate causes from root causes when resolving a problem. 
Drilling Down 
In addition to helping you identify the cause of a problem, AIOps tools should provide the ability to drill down into a problem in order to investigate it at a deep level. For example, if a web application is failing and you determine that the cause isnetwork bandwidth limitations, you might want to be able to drill down and determine whether a certain type of network traffic— such as traffic from a specific region—was associated with the bottleneck that caused your application problem. 
Insight such as this can help your IT Ops team improve systems so that they are more resilient to the recurrence of problems. In this way, causal analysis with the assistance of AIOps not only helps to resolve problems in real time, but also helps to achieve continuous improvement by preventing problems fromhappening again.
 The Definitive Guide to AIOps 20 
Chapter 5: 
Prediction and Trend Identification 
A helping IT Ops teams to predict future developments and identify trends. 
IOps can also facilitate continuous improvement by 
To understand the value of prediction and trend identification, consider the following examples. 
Predictive Capacity AnalyticsPredictive Capacity Analytics 
Right-sizing infrastructure is a constant challenge for most IT Ops teams. If an organization fails to provide enough compute, storage and other resources to its applications, it risks 
performance problems. On the other hand, providing excessive resources leads to cost-inefficiency, because the organization pays to set up and maintain more infrastructure than it needs.Predictive capacity analytics do much to address this challenge by helping IT Ops teams to predict how their infrastructure needs will grow over time. They could even enable cyclical resource allocation adjustments. For example, if an online retailer experiences significant traffic peaks on certain days of 
 The Definitive Guide to AIOps 21The Definitive Guide to AIOps 21 
the year, predictive capacity analytics could enable the retailer to allocate extra infrastructure resources on those days, while scaling back on other days in order to save money. 
Application Performance 
Alongside software testing, AIOps can play a role in helping to optimize application performance prior to applicationdeployment. For example, prediction could help the IT Ops team determine how an application will respond to a certain condition, such as a sudden increase in network traffic that results from a DDoS attack. Obtaining such insights before the event occurs in production positions the IT Ops team to prepare for it more effectively. 
IT Ops PerformancePrediction and trend identification can also help the IT Ops team itself to optimize its own performance. How has the team’s ability to resolve incidents within a certain window of time changed? Which types of problems are causing the greatest numbers of issues? By analyzing data to identify trends, AIOps can answer questions such as these, so that the IT Ops team knows where to concentrate its efforts going forward.The Definitive Guide to AIOps 22 
Chapter 6: 
Intelligent Remediation and Automation 
A and areas of concern, it also enables quick resolution of issues once they have been identified. 
IOps not only helps IT Ops teams to identify problems 
The Need for Fast ResolutionThe Need for Fast Resolution 
The importance of quick resolution of problems is easy enough to understand. In a world where more than half of users will  that takes longer than three seconds to load, and in which a one-second delay in page load time  in 7 percent fewer sales, organizations cannot afford to leave 
software availability or performance problems unaddressed for any length of time.While collecting and analyzing data in real time in order to find issues quickly is one component in achieving fast resolution, so is the ability to interpret the problem quickly using AIOps-driven insights. As noted above, AIOps-enabled solutions can help engineers trace the cause of an issue and suggest remediation approaches so that problems can be resolved as quickly as they appear.The Definitive Guide to AIOps 23 
Leveraging Historical Data for Remediation 
AIOps can also enable faster incident resolution by helping IT Ops teams to interpret historical data associated with past issues in order to suggest solutions for similar incidents as they occur. Without AIOps, parsing through reams of logs and other data in order to identify the similarities between two incidents, and determine whether the resolution that worked for the first will also effectively address the second is not feasible. AIOps-enabled solutions, however, can provide rapid insight based on historical data to help respond to this challenge. 
Automated Resolution 
AIOps tools can even take automatic action to resolve problems after they have identified them. They could block a host or close a port automatically in response to a security threat, for 
example, or spin up additional instances of an application if they determine that the existing instances are insufficient to meet demand.Automated resolution is not practical in all situations; 
sometimes, the ultimate resolution to an incident will have to be implemented manually, even though AIOps can provide insights that help lead to the resolution. Yet as machine-learning 
algorithms grow increasingly sophisticated, the problems that AIOps tools can resolve automatically will increase in number, enabling even faster and more seamless incident resolution.The Definitive Guide to AIOps 24 
Chapter 7: 
Breaking Through the Noise: Managing Alerts 
W information overload. If AIOps tools are deployed or managed 	infrastructure and software than IT Ops teams can 	achieve using manual tools, it also creates a risk of 	hile AIOps enables broader, faster visibility intoimproperly, they generate so many alerts that IT Ops engineers become overwhelmed and begin ignoring notifications. This issue, commonly described as alert fatigue, undercuts the value of AIOps-based monitoring and analysis. 
Avoiding alert fatigue and managing alerts successfully requires several best practices:● Avoiding manual alerting thresholds. Alerts that are configured manually to fire based on fixed thresholds do not work well in today’s dynamic environments. Not only do manual alerts require considerable time to configure, but they can also lead to false positives because what constitutes acceptable disk, network or other resource consumption at one moment may change in the next moment, along with the environment.Instead of configuring manual alerting thresholds, AIOps 
 The Definitive Guide to AIOps 25 
tools can set thresholds automatically. They can also leverage dynamic baselining (discussed above) to configure when an alert should fire. 
● Actionable alerting. Rather than merely indicating that a problem has occurred, alerts should be accompanied by information that will help IT Ops teams to respond to the problem. This means providing contextual information that will help engineers to understand a problem morethoroughly. Actionable alerting can also include data-based resolution recommendations for engineers to consider. 
● Avoiding redundant alerts. It is often the case that a single root-cause problem triggers multiple alerts. A database failure could impact multiple applications and cause an alert for each one, for example. In this case, multiple alerts will distract the IT Ops team rather than help it to resolve the incident quickly. Instead of generating redundant alerts, AIOps tools should intelligently map and/or cluster multiple issues to a single root cause, and generate one alert that will help engineers resolve that cause quickly.The Definitive Guide to AIOps 26 
Chapter 8: 
The Future of AIOps and Data Analytics 
B of the field of AIOps as it continues to evolve in coming years. 	solutions, what does the future hold in store for AIOps? 	The following trends are likely to form an important part 	eyond increasing enterprise adoption of AIOps-enabled 
Support for Increasingly Dynamic EnvironmentsAs noted above, part of the appeal of AIOps is that it enables IT Ops teams to handle highly dynamic infrastructure and software environments, such as IoT devices, containers, and serverless platforms more effectively. 
Going forward, it is likely that newer technologies will appear that introduce even more dynamism to the deployment models that IT Ops teams have to support. While the exact nature of these technologies remains to be seen, it is a safe bet that AIOps will be a key enabler for managing them.Graphical Pattern Recognition 
We have noted above how graphical modeling can assist in efforts to understand particularly complex causal relationships. 
 The Definitive Guide to AIOps 27 
While some AIOps tools are already making use of graphical pattern recognition to a certain extent, expect the role of graphical modeling to increase in importance in the future. Graphical models will help AIOps tools to deliver new levels of insight as the data they process grows in volume andcomplexity. 
Genetic Algorithms 
The use of genetic algorithms within AIOps applications is likely to increase significantly as AIOps evolves. Genetic algorithms refer to software logic that improves over time by using data and machine learning to refine itself automatically. For example, as an AIOps algorithm deals with a certain type of problemrepeatedly, it will learn automatically which solutions work best, and train itself to pursue those in the future. 
Genetic algorithms form an important part of the ability of AIOps tools to achieve continuous improvement. They not only enable faster resolution of problems with less manual effort on the part of IT Ops engineers, but also make it possible for AIOps tools themselves to become faster, more accurate and more effective over time, without having to be updated manually.The Definitive Guide to AIOps 28 
CA’s AIOps-Enabled Solutions 
CA Technologies has been at the forefront of the AIOps ecosystem since its introduction several years ago, and will continue to lead the way as AIOps evolves. 
AIOps functionality is delivered by CA through its  
 platform and comprises an essential part of the features of CA’s  and  solutions. CA also recently introduced  an AIOps-enabled solution that provides cross-domain contextualintelligence to help IT Ops teams to make smarter, faster 
decisions for enhancing user experience and improving IT service quality and capacity. Built on an open, powerful engine, it 
provides users with comprehensive insights by ingesting and analyzing a diverse dataset including metrics, topology, text, and log data. The machine learning–driven analytics, along with out-of-the-box visualization and correlation, help drive asuperior user experience and deliver significant operational efficiencies. 
 about how CA can guide you in your AIOps journey.
 The Definitive Guide to AIOps 29 
About CA Technologies 
CA Technologies helps customers succeed in a future where every business—from apparel to energy—is being rewritten by software. Fromplanning to development to management to security, at CA we create software that fuels transformation for companies in the application economy. With CA software at the center of their IT strategy, organizations can leverage the technology that changes the way we live—from the data center to the mobile device. Our software and solutions help our customers thrive in the new application economy by delivering the means to deploy monitor and secure their applications and Infrastructure.About Sweetcode.io 
Sweetcode.io is a site owned and managed by Fixate IO. Its purpose 
is simple: To give techies a place to share what they know and impact the market with high-value, practioner-generated technical content. Sweetcode is committed to publishing tactical content that supports the growth of seasoned developers, while also serving as a platform for those who are just starting their careers. All of the content on the site is practitioner-created, and Sweetcode invests in sourcing content from under-represented coders to give them a place to share what they know. 
Sweetcode.io is a site owned and managed by Fixate IO. 
Its purpose is simple: To give techies a place to share what they know and impact the market with 
high-value, practioner-generated technical content. Sweetcode is committed to publishing tactical content that supports the growth of seasoned developers, while also serving as a platform for those who are juststarting their careers. All of the content on the site is practitioner-created, and Sweetcode invests in sourcing content from under-represented coders to give them a place to share what they know.
sw
Email: