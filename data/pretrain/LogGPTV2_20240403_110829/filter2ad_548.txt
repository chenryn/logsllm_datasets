title:Bridging the Gap Between PAMs and Overlay Networks: A Framework-Oriented
Approach
author:Kenji Masui and
Youki Kadobayashi
Bridging the Gap Between PAMs and Overlay
Networks: A Framework-Oriented Approach
Kenji Masui and Youki Kadobayashi
Nara Institute of Science and Technology
8916-5 Takayama, Ikoma, Nara 630-0192, Japan
{kenji-ma,youki-k}@is.naist.jp
1 Introduction
Besides the classic measurement methodologies such as ping for measuring RTT
and traceroute for discovering IP topology, there also exists a new trend in mea-
surement methodology, cooperative measurement [1,2]. In cooperative measure-
ment, a measurement node sometimes communicates with other measurement
nodes, shares collected data, and estimates the network characteristics of some
parts of network elements without actual measurement. Cooperative measure-
ment is considered appropriate especially for large-scale measurement on overlay
networks because network characteristics can be helpful for increasing the auton-
omy of overlay networks and such measurement methodologies have a potential
for the reasonable estimation of network characteristics against a number of
elements within the limited measurement capacity of each node.
While we have a number of sophisticated passive and active measurement
methodologies (PAMs) that provide informative network characteristics to over-
lay network applications, we are yet to witness the widespread adoption of such
methodologies in these applications. One reason for such a situation is that the
collection of network characteristics is often a burden on application developers,
especially in the case of using sophisticated and complicated cooperative method-
ologies. Measurement is not developers’ objective but just a means for reﬁning
their applications, and the extra load of implementing measurement methodolo-
gies takes precious time and prevents concentration on their original objectives.
Although network characteristics are indispensable for sustaining overlay net-
works and we have various methodologies for the collection, this fact doesn’t
appeal to the developers — a gap exists between measurement and overlay.
In this paper, we present a general platform for large-scale distributed mea-
surement named N-TAP, which provides APIs for obtaining network characteris-
tics for overlay network applications. N-TAP is an independent service from the
viewpoint of applications, and its APIs let application developers handle network
characteristics easily. N-TAP is also a platform in which various measurement
methodologies can be implemented. A measurement node of N-TAP can utilize
its shared database and communication channels among measurement nodes for
cooperation, and these features are achieved on the measurement overlay net-
work of N-TAP. We believe the gap can be bridged by developing a software
framework for both PAMs and overlay networks.
S. Uhlig, K. Papagiannaki, and O. Bonaventure (Eds.): PAM 2007, LNCS 4427, pp. 265–268, 2007.
c(cid:2) Springer-Verlag Berlin Heidelberg 2007
266
K. Masui and Y. Kadobayashi
2 N-TAP: A Platform for Large-Scale Distributed
Measurement
N-TAP is designed with three concepts to be a solution to the gap problem de-
scribed in Section 1. The ﬁrst concept is “independent service.” This concept means
that N-TAP should abstract common measurement procedures to one independent
service so that any kind of applications can utilize the measurement procedures
easily. At the same time, an interface for the interaction between applications and
N-TAP is required to be an independent service. The second one is “cooperative
measurement,” which accelerates the deployment of sophisticated methodologies
by providing fundamental features for such methodologies. As the common fea-
tures, N-TAP should prepare the mechanisms for communication channels among
measurement nodes and shared databases of collected network characteristics.
“Decision making” is the last one of the concepts. Since the requirement for net-
work characteristics depends on each application, N-TAP should interpret such
requirements carefully and make a decision on the action of collecting requested
data. As far as N-TAP can fulﬁll application’s requests, it should also consider the
tradeoﬀ that measurement methodologies contain among some various indices like
measurement overhead, accuracy, scalability, timeliness and so on.
Based on these concepts, we designed the architecture of N-TAP and imple-
mented its prototype [3]. The overall system of N-TAP consists of N-TAP agents,
which are the daemon programs running on end nodes. An agent prepares an
XML-RPC interface as an independent service in order to accept the requests
from applications and provide the requested network characteristics. To imple-
ment cooperative measurement methodologies on N-TAP, the agents construct
a Chord-based [4] measurement overlay network called N-TAP network, and pro-
vides the mechanisms to share collected data and communicate among the agents.
For reducing measurement overhead and improving response time, the agent does
“local-ﬁrst, remote-last” decision making. With this rule, the agent utilizes past
collected data as a response instead of performing actual measurement if they
meet the requirements of network characteristics from applications.
Here, we describe one simple scenario of retrieving network characteristics
from N-TAP. Suppose that there are three N-TAP nodes: nodes A, B and C.
The application running on node C wants to know the RTT between nodes A and
B that is collected within 60 sec., so it requests to the local N-TAP agent on node
C by calling the method ntapd.getNetworkCharacteristics.roundTripTime.
IPv4. Based on the process of decision making, the agent on node C ﬁrst searches
the data that meets the request in its local database. In this case, we assume
node C cannot ﬁnd such data in the local database. Since node C cannot measure
the RTT between nodes A and B by ping of course, node C decides to search the
data in a shared database. Unfortunately such data is not in the shared database,
so node C conﬁrms the existence of N-TAP node A by the list of N-TAP nodes
in the shared database, and forwards the request to node A to measure it. Node
A performs RTT measurement between nodes A and B, then replies to node
Bridging the Gap Between PAMs and Overlay Networks
267
C with the result of the measurement. Finally, the agent on node C gives the
requested data to the application with its response message.
Some systems such as iPlane [5] and S3 [6] have almost same objectives with
N-TAP from the viewpoint of the provision of network characteristics to applica-
tions. On the architectural aspect, N-TAP diﬀers from these systems especially
in the manner of data storage. Each N-TAP agent stores collected data in both
local database and the shared database, and according to the “local-ﬁrst and
remote-last” rule, the agents prioritize the search in their local databases and
the measurement on a local node for reducing measurement cost and improving
response time. Another unique point is that N-TAP provides an programmable
environment for cooperative measurement, which can be helpful for the evalua-
tion of measurement methodologies.
3 Discussion
In this section, we discuss some topics that were revealed in the process of
implementing N-TAP.
First topic is the merits and demerits of a framework-oriented approach. By
using N-TAP as an independent service, we conﬁrmed that applications can ob-
tain network characteristics as easily as retrieving content from a web server.
Moreover, thanks to the features for cooperative measurement, we can now ob-
tain network characteristics that cannot be obtained by a solo node, such as
a bidirectional IP topology between two nodes. On the other hand, the frame-
work can lose the ﬂexibility of the measurement procedures. We repeated some
additions to the measurement parameters during the implementation because
the request for such parameters varies with respective applications. For exam-
ple, N-TAP currently doesn’t provide the parameter of the ICMP packet size
for measuring RTT, and the parameter may be important for some kinds of ap-
plications. This problem will be improved just by adding the parameter as an
optional one. However, we must basically keep the framework simple but also
extensible if needed on the development of N-TAP.
The deployment manner is an important factor as an infrastructure of network
characteristics. At this time, we assume that N-TAP agents run on arbitrary
end nodes because of the ease for obtaining end-to-end network characteristics,
which is important for overlay networks. On the other hand, locating N-TAP
nodes in respective administrative domains like DNS servers is possible, too. In
the former case, we don’t need any facility for operating N-TAP. However, there
are some problems derived from the nature of a purely distributed system, e. g.,
the diﬃculty of maintaining the overlay network that the nodes frequently join
to and remove from. In the latter case, we have to manage certain N-TAP nodes,
and the status of N-TAP will be relatively easy to grasp. In that case, however,
N-TAP needs some mechanisms of correction or estimation in order to obtain
end-to-end characteristics because applications that utilize N-TAP are running
on other nodes, not on N-TAP nodes. Summarizing such merits and demerits by
implementing both models will constitute our future work as well.
268
K. Masui and Y. Kadobayashi
With the current implementation, we’ve found that the information retrieval
with pull style, which we chose because of its simplicity, often causes high load
on both the application and the N-TAP agent. For example, an application that
needs to check network characteristics continuously (e. g., for monitoring the
change of the topology among overlay nodes) has to request to N-TAP frequently
with making a TCP connection each time. In order to reduce such a burden, N-
TAP should keep the TCP connection open rather than closing the connection
after the response, or utilize UDP and deﬁne another lightweight protocol for the
request. We also consider the information retrieval with push style. In push style,
an application declares some conditions to N-TAP for receiving the notiﬁcation,
and then N-TAP gives network characteristics to the application only when
these conditions are met. These alternatives will decrease the load derived from
the repeated requests in exchange for losing the simplicity for handling network
characteristics. We plan to support both styles of information retrieval in order
to expand the purpose of use, while keeping the simplicity of the APIs.
4 Conclusion
In this paper, we posed the problem of the gap between measurement and over-
lay networks and explored a framework-oriented approach for obtaining network
characteristics. We also discussed the challenges and future directions of N-TAP.
The N-TAP project is still in the preliminary stages and many topics that should
be studied and solved remain. However, we believe that our framework-oriented
approach can provide the initiative toward a new trend in measurement plat-
forms. It’s time to show that measurement yields a proﬁt to Internet users.
References
1. Dabek, F., Cox, R., Kaashoek, F., Morris, R.: Vivaldi: A Decentralized Network
Coordinate System. In: Proc. of the 2004 ACM SIGCOMM Conference. (2004)
2. Donnet, B., Raoult, P., Friedman, T., Crovella, M.: Eﬃcient Algorithms for Large-
Scale Topology Discovery. In: Proc. of the 2005 ACM SIGMETRICS International
Conference. (2005)
3. Masui, K., Kadobayashi, Y.: N-TAP: A Platform of Large-Scale Distributed Mea-
surement for Overlay Network Applications. In: Proc. of the Second International
Workshop on Dependable and Sustainable Peer-to-Peer Systems (DAS-P2P 2007).
(2007)
4. Stoica, I., Morris, R., Liben-Nowell, D., Karger, D.R., Kaashoek, M.F., Dabek, F.,
Balakrishnan, H.: Chord: A Scalable Peer-to-Peer Lookup Protocol for Internet
Applications. IEEE/ACM Transactions on Networking (TON) 11(1) (2003)
5. Madhyastha, H.V., Isdal, T., Piatek, M., Dixon, C., Anderson, T., Krishnamurthy,
A., Venkataramani, A.: iPlane: An Information Plane for Distributed Services. In:
Proc. of the 7th USENIX Symposium on Operating Systems Design and Implemen-
tation (OSDI ’06). (2006)
6. Yalagandula, P., Sharma, P., Banerjee, S., Basu, S., Lee, S.J.: S3: A Scalable Sens-
ing Service for Monitoring Large Networked Systems. In: Proc. of the 2006 ACM
SIGCOMM Workshop on Internet Network Management (INM ’06). (2006)