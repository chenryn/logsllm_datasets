# Bridging the Gap Between PAMs and Overlay Networks: A Framework-Oriented Approach

**Authors:** Kenji Masui and Youki Kadobayashi  
**Affiliation:** Nara Institute of Science and Technology, 8916-5 Takayama, Ikoma, Nara 630-0192, Japan  
**Email:** {kenji-ma, youki-k}@is.naist.jp

## 1. Introduction

Traditional network measurement methodologies, such as ping for measuring Round-Trip Time (RTT) and traceroute for discovering IP topology, have been widely used. However, a new trend in measurement, known as cooperative measurement [1, 2], has emerged. In this approach, measurement nodes communicate with each other, share collected data, and estimate network characteristics without direct measurement. This method is particularly suitable for large-scale measurements on overlay networks, as it can enhance the autonomy of these networks and provide reasonable estimations of network characteristics within the limited measurement capacity of each node.

Despite the availability of sophisticated passive and active measurement methodologies (PAMs), their adoption in overlay network applications remains limited. One reason for this is the burden placed on application developers, who must implement complex measurement methods. Measurement is not the primary objective of developers but rather a means to refine their applications. The additional effort required to implement these methodologies can be time-consuming and detract from their main goals.

Although network characteristics are essential for maintaining overlay networks, the gap between measurement and overlay networks persists. To address this, we introduce N-TAP, a general platform for large-scale distributed measurement that provides APIs for obtaining network characteristics. N-TAP operates as an independent service, simplifying the handling of network characteristics for developers. It also serves as a platform for implementing various measurement methodologies, enabling cooperation through shared databases and communication channels among measurement nodes. We believe that a software framework like N-TAP can bridge the gap between PAMs and overlay networks.

## 2. N-TAP: A Platform for Large-Scale Distributed Measurement

N-TAP is designed with three key concepts to solve the gap problem described in Section 1:

1. **Independent Service**: N-TAP abstracts common measurement procedures into a single, independent service, making it easy for any application to utilize these procedures. An interface for interaction between applications and N-TAP is provided as an independent service.
   
2. **Cooperative Measurement**: N-TAP accelerates the deployment of sophisticated methodologies by providing fundamental features such as communication channels among measurement nodes and shared databases of collected network characteristics.
   
3. **Decision Making**: N-TAP interprets the requirements of each application and makes decisions on the actions needed to collect the requested data. It considers trade-offs among various indices such as measurement overhead, accuracy, scalability, and timeliness.

Based on these concepts, we designed and implemented a prototype of N-TAP [3]. The system consists of N-TAP agents, which are daemon programs running on end nodes. Each agent provides an XML-RPC interface to accept requests from applications and deliver the requested network characteristics. For cooperative measurement, the agents construct a Chord-based [4] measurement overlay network called the N-TAP network, enabling data sharing and communication among agents. To reduce measurement overhead and improve response time, the agent follows a "local-first, remote-last" decision-making rule, using past collected data when possible.

### Example Scenario

Consider a scenario with three N-TAP nodes: A, B, and C. An application on node C wants to know the RTT between nodes A and B, collected within the last 60 seconds. The application requests this information from the local N-TAP agent on node C by calling `ntapd.getNetworkCharacteristics.roundTripTime.IPv4`. The agent first searches its local database. If the data is not found locally, it checks the shared database. If still not found, the agent forwards the request to node A, which measures the RTT and returns the result to node C. Finally, the agent on node C provides the requested data to the application.

### Comparison with Other Systems

Systems like iPlane [5] and S3 [6] have similar objectives to N-TAP in providing network characteristics to applications. However, N-TAP differs in its data storage approach. Each N-TAP agent stores collected data in both a local and a shared database, prioritizing local data and reducing measurement costs. Additionally, N-TAP offers a programmable environment for cooperative measurement, facilitating the evaluation of different methodologies.

## 3. Discussion

### Merits and Demerits of a Framework-Oriented Approach

Using N-TAP as an independent service, we confirmed that applications can easily obtain network characteristics, similar to retrieving content from a web server. Cooperative measurement features enable the collection of characteristics that a single node cannot achieve, such as bidirectional IP topology. However, the framework may lose flexibility in measurement procedures. During implementation, we frequently added measurement parameters to meet varying application requirements. For example, N-TAP currently does not provide the ICMP packet size parameter for RTT measurement, which may be important for some applications. Adding such parameters as optional ones can improve this issue, but the framework must remain simple yet extensible.

### Deployment Manner

We assume N-TAP agents run on arbitrary end nodes to facilitate the collection of end-to-end network characteristics, which are crucial for overlay networks. Alternatively, N-TAP nodes could be located in administrative domains like DNS servers. In the former case, no additional facilities are needed, but the frequent joining and leaving of nodes in a purely distributed system can be challenging. In the latter case, managing specific N-TAP nodes is easier, but mechanisms for correction or estimation are required to obtain end-to-end characteristics. Future work will explore the merits and demerits of both models.

### Information Retrieval

The current pull-style information retrieval, chosen for its simplicity, can cause high loads on both the application and the N-TAP agent. For example, an application continuously checking network characteristics (e.g., for monitoring topology changes) must frequently request data, creating multiple TCP connections. To reduce this burden, N-TAP should maintain open TCP connections or use UDP with a lightweight protocol. We also consider a push-style retrieval, where an application declares conditions for receiving notifications, and N-TAP provides network characteristics only when these conditions are met. Both styles will be supported to expand usability while keeping the API simple.

## 4. Conclusion

In this paper, we addressed the gap between measurement and overlay networks and proposed a framework-oriented approach with N-TAP. We discussed the challenges and future directions of N-TAP. Although the project is in its preliminary stages, we believe our approach can initiate a new trend in measurement platforms. It is time to demonstrate that measurement can benefit Internet users.

## References

1. Dabek, F., Cox, R., Kaashoek, F., Morris, R.: Vivaldi: A Decentralized Network Coordinate System. In: Proc. of the 2004 ACM SIGCOMM Conference. (2004)
2. Donnet, B., Raoult, P., Friedman, T., Crovella, M.: Efficient Algorithms for Large-Scale Topology Discovery. In: Proc. of the 2005 ACM SIGMETRICS International Conference. (2005)
3. Masui, K., Kadobayashi, Y.: N-TAP: A Platform of Large-Scale Distributed Measurement for Overlay Network Applications. In: Proc. of the Second International Workshop on Dependable and Sustainable Peer-to-Peer Systems (DAS-P2P 2007). (2007)
4. Stoica, I., Morris, R., Liben-Nowell, D., Karger, D.R., Kaashoek, M.F., Dabek, F., Balakrishnan, H.: Chord: A Scalable Peer-to-Peer Lookup Protocol for Internet Applications. IEEE/ACM Transactions on Networking (TON) 11(1) (2003)
5. Madhyastha, H.V., Isdal, T., Piatek, M., Dixon, C., Anderson, T., Krishnamurthy, A., Venkataramani, A.: iPlane: An Information Plane for Distributed Services. In: Proc. of the 7th USENIX Symposium on Operating Systems Design and Implementation (OSDI ’06). (2006)
6. Yalagandula, P., Sharma, P., Banerjee, S., Basu, S., Lee, S.J.: S3: A Scalable Sensing Service for Monitoring Large Networked Systems. In: Proc. of the 2006 ACM SIGCOMM Workshop on Internet Network Management (INM ’06). (2006)