Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 141
Database Compatibility for Oracle® Developers
Built-in Package Guide
Column Data Type Description
the oldserxidlock wait event to read or record
the conflicting serializable transactions.
syncreplock_time BIGINT The amount of time that the server has waited for
the syncreplock wait event to read or update
information about synchronous replicas.
backgroundworkerlock_time BIGINT The amount of time that the server has waited for
the backgroundworkerlock wait event to read or
update the background worker state.
dynamicsharedmemorycontroll BIGINT The amount of time that the server has waited for
ock_time the dynamicsharedmemorycontrollock wait
event to read or update the dynamic shared memory
state.
autofilelock_time BIGINT The amount of time that the server has waited for
the autofilelock wait event to update the
postgresql.auto.conf file.
replicationslotallocationlo BIGINT The amount of time that the server has waited for
ck_time
the replicationslotallocationlock wait
event to allocate or free a replication slot.
replicationslotcontrollock_ BIGINT The amount of time that the server has waited for
time
the replicationslotcontrollock wait event to
read or update replication slot state.
committscontrollock_time BIGINT The amount of time that the server has waited for
the committscontrollock wait event to read or
update transaction commit timestamps.
committslock_time BIGINT The amount of time that the server has waited for
the committslock wait event to read or update the
last value set for the transaction timestamp.
replicationoriginlock_time BIGINT The amount of time that the server has waited for
the replicationoriginlock wait event to set
up, drop, or use replication origin.
multixacttruncationlock_tim BIGINT The amount of time that the server has waited for
e
the multixacttruncationlock wait event to
read or truncate multixact information.
oldsnapshottimemaplock_time BIGINT The amount of time that the server has waited for
the oldsnapshottimemaplock wait event to read
or update old snapshot control information.
backendrandomlock_time BIGINT The amount of time that the server has waited for
the backendrandomlock wait event to generate a
random number.
logicalrepworkerlock_time BIGINT The amount of time that the server has waited for
the logicalrepworkerlock wait event for an
action on logical replication worker to finish.
clogtruncationlock_time BIGINT The amount of time that the server has waited for
the clogtruncationlock wait event to truncate
the write-ahead log or waiting for write-ahead log
truncation to finish.
bulkloadlock_time BIGINT The amount of time that the server has waited for
the bulkloadlock wait event to bulk upload the
data.
edbresourcemanagerlock_time BIGINT The amount of time that the server has waited for
the edbresourcemanagerlock wait event.
totalwaits BIGINT The total number of event waits.
totalwaittime BIGINT The total time spent waiting for an event.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 142
Database Compatibility for Oracle® Developers
Built-in Package Guide
3.12 DBMS_RANDOM
The DBMS_RANDOM package provides a number of methods to generate random values.
The procedures and functions available in the DBMS_RANDOM package are listed in the
following table.
Function/Procedure Return Type Description
INITIALIZE(val) n/a Initializes the DBMS_RANDOM package with the
specified seed value. Deprecated, but
supported for backward compatibility.
NORMAL() NUMBER Returns a random NUMBER.
RANDOM INTEGER Returns a random INTEGER with a value
greater than or equal to -2^31 and less than 2^31.
Deprecated, but supported for backward
compatibility.
SEED(val) n/a Resets the seed with the specified value.
SEED(val) n/a Resets the seed with the specified value.
STRING(opt, len) VARCHAR2 Returns a random string.
TERMINATE n/a TERMINATE has no effect. Deprecated, but
supported for backward compatibility.
VALUE NUMBER Returns a random number with a value greater
than or equal to 0 and less than 1, with 38 digit
precision.
VALUE(low, high) NUMBER Returns a random number with a value greater
than or equal to low and less than high.
3.12.1 INITIALIZE
The INITIALIZE procedure initializes the DBMS_RANDOM package with a seed value.
The signature is:
INITIALIZE(val IN INTEGER)
This procedure should be considered deprecated; it is included for backward
compatibility only.
Parameters
val
val is the seed value used by the DBMS_RANDOM package algorithm.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 143
Database Compatibility for Oracle® Developers
Built-in Package Guide
Example
The following code snippet demonstrates a call to the INITIALIZE procedure that
initializes the DBMS_RANDOM package with the seed value, 6475.
DBMS_RANDOM.INITIALIZE(6475);
3.12.2 NORMAL
The NORMAL function returns a random number of type NUMBER. The signature is:
result NUMBER NORMAL()
Parameters
result
result is a random value of type NUMBER.
Example
The following code snippet demonstrates a call to the NORMAL function:
x:= DBMS_RANDOM.NORMAL();
3.12.3 RANDOM
The RANDOM function returns a random INTEGER value that is greater than or equal to -2
^31 and less than 2 ^31. The signature is:
result INTEGER RANDOM()
This function should be considered deprecated; it is included for backward compatibility
only.
Parameters
result
result is a random value of type INTEGER.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 144
Database Compatibility for Oracle® Developers
Built-in Package Guide
Example
The following code snippet demonstrates a call to the RANDOM function. The call returns
a random number:
x := DBMS_RANDOM.RANDOM();
3.12.4 SEED
The first form of the SEED procedure resets the seed value for the DBMS_RANDOM package
with an INTEGER value. The SEED procedure is available in two forms; the signature of
the first form is:
SEED(val IN INTEGER)
Parameters
val
val is the seed value used by the DBMS_RANDOM package algorithm.
Example
The following code snippet demonstrates a call to the SEED procedure; the call sets the
seed value at 8495.
DBMS_RANDOM.SEED(8495);
3.12.5 SEED
The second form of the SEED procedure resets the seed value for the DBMS_RANDOM
package with a string value. The SEED procedure is available in two forms; the signature
of the second form is:
SEED(val IN VARCHAR2)
Parameters
val
val is the seed value used by the DBMS_RANDOM package algorithm.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 145
Database Compatibility for Oracle® Developers
Built-in Package Guide
Example
The following code snippet demonstrates a call to the SEED procedure; the call sets the
seed value to abc123.
DBMS_RANDOM.SEED('abc123');
3.12.6 STRING
The STRING function returns a random VARCHAR2 string in a user-specified format. The
signature of the STRING function is:
result VARCHAR2 STRING(opt IN CHAR, len IN NUMBER)
Parameters
opt
Formatting option for the returned string. option may be:
Option Specifies Formatting Option
u or U Uppercase alpha string
l or L Lowercase alpha string
a or A Mixed case string
x or X Uppercase alpha-numeric string
p or P Any printable characters
len
The length of the returned string.
result
result is a random value of type VARCHAR2.
Example
The following code snippet demonstrates a call to the STRING function; the call returns a
random alpha-numeric character string that is 10 characters long.
x := DBMS_RANDOM.STRING('X', 10);
3.12.7 TERMINATE
The TERMINATE procedure has no effect. The signature is:
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 146
Database Compatibility for Oracle® Developers
Built-in Package Guide
TERMINATE
The TERMINATE procedure should be considered deprecated; the procedure is supported
for compatibility only.
3.12.8 VALUE
The VALUE function returns a random NUMBER that is greater than or equal to 0, and less
than 1, with 38 digit precision. The VALUE function has two forms; the signature of the
first form is:
result NUMBER VALUE()
Parameters
result
result is a random value of type NUMBER.
Example
The following code snippet demonstrates a call to the VALUE function. The call returns a
random NUMBER:
x := DBMS_RANDOM.VALUE();
3.12.9 VALUE
The VALUE function returns a random NUMBER with a value that is between user-specified
boundaries. The VALUE function has two forms; the signature of the second form is:
result NUMBER VALUE(low IN NUMBER, high IN NUMBER)
Parameters
low
low specifies the lower boundary for the random value. The random value may
be equal to low.
high
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 147
Database Compatibility for Oracle® Developers
Built-in Package Guide
high specifies the upper boundary for the random value; the random value will
be less than high.
result
result is a random value of type NUMBER.
Example
The following code snippet demonstrates a call to the VALUE function. The call returns a
random NUMBER with a value that is greater than or equal to 1 and less than 100:
x := DBMS_RANDOM.VALUE(1, 100);
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 148
Database Compatibility for Oracle® Developers
Built-in Package Guide
3.13 DBMS_REDACT
The DBMS_REDACT package enables the redacting or masking of data returned by a
query. The DBMS_REDACT package provides a procedure to create policies, alter policies,
enable policies, disable policies, and drop policies. The procedures available in the
DBMS_REDACT package are listed in the following table.
Function/Procedure Function or Return Description
Procedure Type
ADD_POLICY(object_schema, Procedure n/a Adds a data redaction policy.
object_name, policy_name,
policy_description, column_name,
column_description,
function_type,
function_parameters, expression,
enable, regexp_pattern,
regexp_replace_string,
regexp_position,
regexp_occurence,
regexp_match_parameter,
custom_function_expression)
ALTER_POLICY(object_schema, Procedure n/a Alters the existing data redaction policy.
object_name, policy_name, action,
column_name, function_type,
function_parameters, expression,
regexp_pattern,
regexp_replace_string,
regexp_position,
regexp_occurence,
regexp_match_parameter,
policy_description,
column_description,
custom_function_expression)
DISABLE_POLICY(object_schema, Procedure n/a Disables the existing data redaction policy.
object_name, policy_name)
ENABLE_POLICY(object_schema, Procedure n/a Enables a previously disabled data redaction
object_name, policy_name)
policy.
DROP_POLICY(object_schema, Procedure n/a Drops a data redaction policy.
object_name, policy_name)
UPDATE_FULL_REDACTION_VALUES(numb Procedure n/a Updates the full redaction default values for
er_val, binfloat_val, the specified datatype.
bindouble_val, char_val,
varchar_val, nchar_val,
nvarchar_val, datecol_val,
ts_val, tswtz_val, blob_val,
clob_val, nclob_val)
The data redaction feature uses the DBMS_REDACT package to define policies or
conditions to redact data in a column based on the table column type and redaction type.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 149
Database Compatibility for Oracle® Developers
Built-in Package Guide
Note that you must be the owner of the table to create or change the data redaction
policies. The users are exempted from all the column redaction policies, which the table
owner or super-user is by default.
3.13.1 Using DBMS_REDACT Constants and Function
Parameters
The DBMS_REDACT package uses the constants and redacts the column data by using any
one of the data redaction types. The redaction type can be decided based on the
function_type parameter of dbms_redact.add_policy and
dbms_redact.alter_policy procedure. The below table highlights the values for
function_type parameters of dbms_redact.add_policy and
dbms_redact.alter_policy.
Constant Type Value Description
NONE INTEGER 0 No redaction, zero effect on the result of a query against
table.
FULL INTEGER 1 Full redaction, redacts full values of the column data.
PARTIAL INTEGER 2 Partial redaction, redacts a portion of the column data.
RANDOM INTEGER 4 Random redaction, each query results in a different random
value depending on the datatype of the column.
REGEXP INTEGER 5 Regular Expression based redaction, searches for the pattern
of data to redact.
CUSTOM INTEGER 99 Custom redaction type.
The following table shows the values for the action parameter of
dbms_redact.alter_policy.
Constant Type Value Description
ADD_COLUMN INTEGER 1 Adds a column to the redaction policy.
DROP_COLUMN INTEGER 2 Drops a column from the redaction policy.
MODIFY_EXPRESSION INTEGER 3 Modifies the expression of a redaction policy. The
redaction is applied when the expression evaluates to the
BOOLEAN value to TRUE.
MODIFY_COLUMN INTEGER 4 Modifies a column in the redaction policy to change the
redaction function type or function parameter.
SET_POLICY_DESCRIPTION INTEGER 5 Sets the redaction policy description.
SET_COLUMN_DESCRIPTION INTEGER 6 Sets a description for the redaction performed on the
column.
The partial data redaction enables you to redact only a portion of the column data. To use
partial redaction, you must set the dbms_redact.add_policy procedure
function_type parameter to dbms_redact.partial and use the
function_parameters parameter to specify the partial redaction behavior.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 150
Database Compatibility for Oracle® Developers
Built-in Package Guide
The data redaction feature provides a predefined format to configure policies that use the
following datatype:
 Character
 Number
 Datetime
The following table highlights the format descriptor for partial redaction with respect to
datatype. The example described below shows how to perform a redaction for a string
datatype (in this scenario, a Social Security Number (SSN)), a Number datatype, and a
DATE datatype.
Datatype Format Descriptor Description Examples
Character REDACT_PARTIAL_INPUT_FORMAT Specifies the input format. Consider
Enter V for each character from 'VVVFVVFVVVV,VVV-VV-
the input string to be possibly VVVV,X,1,5' for masking
redacted. Enter F for each first 5 digits of SSN strings
character from the input string such as 123-45-6789,
that can be considered as a adding hyphen to format it and
separator such as blank spaces thereby resulting in strings
or hyphens. such as XXX-XX-6789.
The field value VVVFVVFVVVV
for matching SSN strings such
as 123-45-6789.
REDACT_PARTIAL_OUTPUT_FORMAT Specifies the output format. The field value VVV-VV-VVVV
Enter V for each character from can be used to redact SSN
the input string to be possibly strings into XXX-XX-6789
redacted. Replace each F where X comes from
character from the input format REDACT_PARTIAL_MASKCHAR
with a character such as a field.
hyphen or any other separator.
REDACT_PARTIAL_MASKCHAR Specifies the character to be The value X for redacting SSN
used for redaction. strings into XXX-XX-6789.
REDACT_PARTIAL_MASKFROM Specifies which V within the The value 1 for redacting SSN
input format from which to strings starting at the first V of
start the redaction. the input format of
VVVFVVFVVVV into strings
such as XXX-XX-6789.
REDACT_PARTIAL_MASKTO Specifies which V within the The value 5 for redacting SSN
input format at which to end strings up to and including the
the redaction. fifth V within the input format
of VVVFVVFVVVV into strings
such as XXX-XX-6789.
Number REDACT_PARTIAL_MASKCHAR Specifies the character to be ‘9, 1, 5’ for redacting the
displayed in the range between first five digits of the Social
0 and 9. Security Number 123456789
REDACT_PARTIAL_MASKFROM Specifies the start digit position into 999996789.
for redaction.
REDACT_PARTIAL_MASKTO Specifies the end digit position
for redaction.
Copyright © 2007 - 2019 EnterpriseDB Corporation. All rights reserved. 151
Database Compatibility for Oracle® Developers
Built-in Package Guide
Datatype Format Descriptor Description Examples
Datetime REDACT_PARTIAL_DATE_MONTH ‘m’ redacts the month. To m3 displays as March.
mask a specific month, specify
‘m#’ where # indicates the
month specified by its number
between 1 and 12.
REDACT_PARTIAL_DATE_DAY ‘d’ redacts the day of the d3 displays as 03.
month. To mask with a day of
the month, append 1-31 to a
lowercase d.
REDACT_PARTIAL_DATE_YEAR ‘y’ redacts the year. To mask y1960 displays as 60.
with a year, append 1-9999 to
a lowercase y.
REDACT_PARTIAL_DATE_HOUR ‘h’ redacts the hour. To mask h18 displays as 18.
with an hour, append 0-23 to a
lowercase h.
REDACT_PARTIAL_DATE_MINUTE ‘m’ redacts the minute. To m20 displays as 20.
mask with a minute, append 0-
59 to a lowercase m.
REDACT_PARTIAL_DATE_SECOND ‘s’ redacts the second. To s40 displays as 40.
mask with a second, append 0-
59 to a lowercase s.
The following table represents function_parameters values that can be used in
partial redaction.
Function Parameter Data Type Value Description
REDACT_US_SSN_F5 VARCHAR2 'VVVFVVFVVVV,V Redacts the first 5 numbers of SSN.
VV-VV- Example: The number 123-45-6789
VVVV,X,1,5'
becomes XXX-XX-6789.
REDACT_US_SSN_L4 VARCHAR2 'VVVFVVFVVVV,V Redacts the last 4 numbers of SSN.
VV-VV- Example: The number 123-45-6789
VVVV,X,6,9'
becomes 123-45-XXXX.
REDACT_US_SSN_ENTIRE VARCHAR2 'VVVFVVFVVVV,V Redacts the entire SSN.
VV-VV-
Example: The number 123-45-6789
VVVV,X,1,9'
becomes XXX-XX-XXXX.
REDACT_NUM_US_SSN_F5 VARCHAR2 '9,1,5' Redacts the first 5 numbers of SSN when the
column is a number datatype.
Example: The number 123456789 becomes
999996789.
REDACT_NUM_US_SSN_L4 VARCHAR2 '9,6,9' Redacts the last four numbers of SSN when
the column is a number datatype.