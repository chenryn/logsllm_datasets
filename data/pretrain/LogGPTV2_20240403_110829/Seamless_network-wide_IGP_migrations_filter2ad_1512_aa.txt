title:Seamless network-wide IGP migrations
author:Laurent Vanbever and
Stefano Vissicchio and
Cristel Pelsser and
Pierre François and
Olivier Bonaventure
Seamless Network-Wide IGP Migrations∗
Laurent Vanbever∗, Stefano Vissicchio†,
Cristel Pelsser‡, Pierre Francois∗, Olivier Bonaventure∗
∗ Université catholique de Louvain † Roma Tre University ‡ Internet Initiative Japan
∗{laurent.vanbever, pierre.francois, olivier.bonaventure} @uclouvain.be
†PI:EMAIL
‡PI:EMAIL
ABSTRACT
Network-wide migrations of a running network, such as
the replacement of a routing protocol or the modiﬁcation of
its conﬁguration, can improve the performance, scalability,
manageability, and security of the entire network. However,
such migrations are an important source of concerns for net-
work operators as the reconﬁguration campaign can lead to
long and service-aﬀecting outages.
In this paper, we propose a methodology which addresses
the problem of seamlessly modifying the conﬁguration of
commonly used link-state Interior Gateway Protocols (IGP).
We illustrate the beneﬁts of our methodology by consider-
ing several migration scenarios, including the addition or the
removal of routing hierarchy in an existing IGP and the re-
placement of one IGP with another. We prove that a strict
operational ordering can guarantee that the migration will
not create IP transit service outages. Although ﬁnding a safe
ordering is NP-complete, we describe techniques which eﬃ-
ciently ﬁnd such an ordering and evaluate them using both
real-world and inferred ISP topologies. Finally, we describe
the implementation of a provisioning system which automat-
ically performs the migration by pushing the conﬁgurations
on the routers in the appropriate order, while monitoring
the entire migration process.
Categories and Subject Descriptors: C.2.3 [Computer-
Communication Networks]: Network Operations
General Terms: Algorithms, Management, Reliability
Keywords:
tion, migration, summarization, design guidelines
Interior Gateway Protocol (IGP), conﬁgura-
1.
INTRODUCTION
Among all network routing protocols, link-state Interior
Gateway Protocols (IGPs), like IS-IS and OSPF, play a crit-
Indeed, an IGP enables end-to-end reachability
ical role.
∗Minor typo corrected in Section 2.1
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’11, August 15–19, 2011, Toronto, Ontario, Canada.
Copyright 2011 ACM 978-1-4503-0797-0/11/08 ...$10.00.
between any pair of routers within the network of an Au-
tonomous System (AS). Many other routing protocols, like
BGP, LDP or PIM, also rely on an IGP to properly work.
As the network grows or when new services have to be de-
ployed, network operators often need to perform large-scale
IGP reconﬁguration [1]. Migrating an IGP is a complex pro-
cess since all the routers have to be reconﬁgured in a proper
manner. Simple solutions like restarting the network with
the new conﬁgurations do not work since most of the net-
works carry traﬃc 24/7. Therefore, IGP migrations have
to be performed gradually, while the network is running.
Such operations can lead to signiﬁcant traﬃc losses if they
are not handled with care. Unfortunately, network operators
typically lack appropriate tools and techniques to seamlessly
perform large, highly distributed changes to the conﬁgura-
tion of their networks. They also experience diﬃculties in
understanding what is happening during a migration since
complex interactions may arise between upgraded and non-
upgraded routers. Consequently, as conﬁrmed by many pri-
vate communications with operators, large-scale IGP migra-
tions are often avoided until they are absolutely necessary,
thus hampering network evolvability and innovation.
Most of the time, network operators target three aspects
of the IGP when they perform large-scale migrations. First,
they may want to replace the current protocol with another.
For instance, several operators have switched from OSPF
to IS-IS because IS-IS is known to be more secure against
control-plane attacks [2, 3]. Operators may also want to
migrate to an IGP that is not dependent on the address
family (e.g., OSPFv3, IS-IS) in order to run only one IGP
to route both IPv4 and IPv6 traﬃc [4, 3], or to change IGP
in order to integrate new equipments which are not compli-
ant with the adopted one [5]. Second, when the number of
routers exceeds a certain critical mass, operators often intro-
duce a hierarchy within their IGP to limit the control-plane
stress [6, 7]. Removing a hierarchy might also be needed, for
instance, to better support some traﬃc engineering exten-
sions [8]. Another reason operators introduce hierarchy is to
have more control on route propagation by tuning the way
routes are propagated from one portion of the hierarchy to
another [1]. Third, network operators also modify the way
the IGP learns or announces the preﬁxes by introducing or
removing route summarization. Route summarization is an
eﬃcient way to reduce the number of entries in the routing
tables of the routers as IGP networks can currently track
as many as 10,000 preﬁxes [9]. Route summarization also
helps improving the stability by limiting the visibility of lo-
cal events. Actually, some IGP migrations combine several
314of these scenarios, such as the migration from a hierarchi-
cal OSPF to a ﬂat IS-IS [2]. There have also been cases
where, after having performed a migration, the network no
longer met the original requirements, forcing the operators
to fallback to the initial conﬁguration [10]. Finally, given
the recent trend of deploying virtual networks [11, 12], we
believe that the need for reconﬁguring the IGP will become
more frequent.
In this paper, we aim at enabling seamless IGP migra-
tions, that is, progressive modiﬁcations of the IGP conﬁg-
uration of a running network without loosing packets. Our
main contribution is threefold. First, we analyze in detail
the various scenarios of link-state IGP migrations and ex-
plain problems that can arise. In particular, we show that
long-lasting forwarding loops can appear, both theoretically
and practically, when modiﬁcations are made to the IGP
hierarchy and when route summarization is introduced or
removed. To deal with all the identiﬁed migration prob-
lems, we propose a generic IGP model. Second, we show
that, in real-world networks, it is possible to ﬁnd an order-
ing for the conﬁguration changes that prevents forwarding
loops. Although ﬁnding such an ordering is an NP-complete
problem, we propose algorithms and heuristics and we show
their practical eﬀectiveness on several ISP networks. Fur-
thermore, we describe how our techniques can be extended
to prevent congestion and deal with network failures. Third,
we describe the design and the evaluation of a complete
system that automates the whole migration process. Our
system generates router conﬁgurations, assesses the proper
state of the network and updates all the routers in an ap-
propriate sequence.
The rest of the paper is structured as follows. Section 2
provides a background on link-state IGPs and presents our
abstract model. Section 3 formalizes the IGP migration
problem and describes the migration scenarios we tackle.
Section 4 presents our methodology. Section 5 proposes algo-
rithms to compute a loop-free migration ordering. Section 6
presents our implementation. Section 7 evaluates our migra-
tion techniques on both inferred and real-world topologies.
Section 8 deﬁnes design guidelines that make IGP migra-
tions easier. Section 9 presents related work. Section 10
discusses the limitation of the approach and the impact on
BGP. Finally, Section 11 contains the conclusions.
2. LINK-STATE INTERIOR GATEWAY
PROTOCOLS
In this section, we summarize the most important fea-
tures of link-state IGPs. Then, we present the model we use
throughout the paper.
2.1 Background
An IGP is a protocol that routers use to decide how to
forward packets within an AS. IGPs are divided in two
main families: distance-vector and link-state protocols. Al-
though some enterprise networks still use distance-vector
protocols, most ISPs and large enterprises deploy link-state
IGPs, namely OSPF [13] or IS-IS [14].
In this paper, we
focus on network-wide migrations of link-state IGPs.
Link-state IGPs can be conﬁgured either in a ﬂat or in a
hierarchical mode. In ﬂat IGPs, every router is aware of the
entire network topology and forwards IP packets according
to the shortest-paths towards their respective destinations.
In hierarchical IGPs, routers are not guaranteed to always
prefer the shortest paths. Hierarchical IGP conﬁgurations
break the whole topology into a set of zones (called areas in
OSPF and levels in IS-IS), which we denote as B, Z1, . . . , Zk.
B is a special zone, called backbone, that connects all the
other peripheral zones together, such that packets from a
router in the network to a destination inside a diﬀerent zone
always traverse the backbone. IGP routers establish adja-
cencies, that could be represented as links in a logical graph.
Each link in the logical graph belongs to only one zone. By
extension, we say that a router is in a zone if it has at least
one link in that zone. We call internal routers the routers
that are in one zone only and Zone Border Routers (ZBRs)
(e.g., ABRs in OSPF and L1L2 systems in IS-IS) the routers
that are in more than one zone, among which there must be
the backbone. Both internal routers and ZBRs prefer intra-
zone over inter-zone paths. This means that, to choose the
path on which to forward packets towards a certain destina-
tion, each router prefers a path in which all the links belong
to the same zone over a path containing at least one link
belonging to a diﬀerent zone, no matter the weight of the
two paths.
Moreover, in hierarchical IGPs, ZBRs can be conﬁgured to
perform route summarization. In this conﬁguration, ZBRs
hide the internal topology of a zone Z to routers in dif-
ferent zones, advertising aggregated preﬁxes outside Z. In
practice, they announce their ability to reach groups of des-
tinations with paths of a certain weight. The weight an-
nounced by a ZBR is the same for all the destinations in an
aggregated preﬁx and either it is customly conﬁgured or it
is decided on the basis of the actual weights of the preferred
paths towards that destinations (e.g., picking the highest
one [13]).
2.2 An Abstract Model for IGPs
In this section, we aim at capturing IGP conﬁgurations
and forwarding behavior of routers in a model that abstracts
protocol-speciﬁc details. Transient IGP behaviors are not
modeled since we ensure that both the initial and the ﬁnal
IGPs have converged before starting the migration process
(see Section 4).
We formally deﬁne an IGP conﬁguration as a tuple .
In such a tuple, p is the identiﬁer of an
IGP protocol, e.g., OSPF or IS-IS, and m is the mode in
which the protocol is conﬁgured, namely ﬂat or hierarchi-
cal. G = (V, E) is the logical graph, i.e., a directed graph
that represents the IGP adjacencies among routers partici-
pating in p. Each node in V represents an IGP router, and
each edge in E represents an adjacency on which the two
routers are allowed to exchange protocol-speciﬁc messages.
Edges are labeled with additional information. In hierarchi-
cal conﬁgurations they are labeled with the name of zones
they belong to. Moreover, D ⊆ V is a set of IGP desti-
nations for traﬃc that ﬂows in the network. We associate
each destination to a single node in G, assuming that each
IP preﬁx is announced by one router only. This assumption
is without loss of generality, as we can use virtual nodes to
model peculiarities of the considered IGP (see [15]). To be
as generic as possible, we consider as destinations a subset of
the IGP routers. Finally, the function w : E → N associates
a positive integer, called weight, to each edge in G.
Packets destined to one router d ∈ D follow paths on G.
A forwarding path or simply path P on G is denoted as
315P = (s r1 . . . rk d), where s is the ﬁrst router in G that
is required to forward packets destined to d, and routers ri,
with i = 1, . . . , k, are routers traversed by the traﬃc ﬂow.
The weight of a path is the sum of the weights of all the
links in the path.
According to the IGP conﬁguration, each router chooses
its preferred path towards each destination and forwards
packets to the next-hops in such preferred paths. To capture
this behavior, we deﬁne the next-hop function nh, and the
actual path function π(u, d, t). We denote with nh(u, d, t)
the set of successors (next-hops) of u in the paths router u
uses at time t to send traﬃc destined to destination d. Notice
that |nh(u, d, t)| is not guaranteed to be equal to 1, since our
model encompasses the case in which routers uses multiple
paths to reach the same destination, e.g., Equal Cost Multi-
Path (ECMP). The paths actually followed by packets sent
by u towards d at time t can be computed as a function
π: π(u, d, t) is the set of paths resulting from a recursive
concatenation of next-hops. More formally, π(u, d, t) is a
function that associates to each router u the set of paths
{(v0 v1 . . . vk)}, such that v0 = u, vk = d and vi+1 ∈
nh(vi, d, t), ∀i ∈ {0, . . . , k − 1}. Notice that the actual path
function does not always coincide with the preferred path of
each router, since deﬂections can happen in the middle of a
path [16]. A series of deﬂections can even build a forwarding
loop, as shown in diﬀerent examples described in Section 3.1.
More formally, we say that there exists a forwarding loop, or
simply a loop, for a certain destination d at a certain time t
if ∃r such that π(r, d, t) = (r v0 . . . vj r), with j ≥ 0.
By appropriately tuning the next-hop function, our model
is able to represent speciﬁc details of IGP conﬁgurations such
as the corresponding forwarding rules in hierarchical and ﬂat
mode, and route summarization. In Section 3.1, we provide
some examples of next-hop functions, actual path functions,
and migration loops in diﬀerent migration scenarios.
3. THE IGP MIGRATION PROBLEM
In this section, we study the problem of seamlessly mi-
grating a network from one IGP conﬁguration to another.
Both conﬁgurations are provided as an input (i.e., by net-
work operators) and are loop-free.
Problem 1. Given a unicast IP network, how can we re-
place an initial IGP conﬁguration with a ﬁnal IGP conﬁgu-
ration without causing any forwarding loop?
Assuming no congestion and no network failures, solving
this problem leads to seamless migrations. These assump-
tions are reasonable, since management operations are typi-
cally performed during convenient time slots, in which traf-
ﬁc is low. Moreover, our approach is time eﬃcient, reducing
the opportunities for failures during the migration process.
Also, we discuss how to extend our techniques to remove
these assumptions in Section 5.2.
In the rest of the paper, we call router migration the
replacement of nhinit with nhf inal on one router. For-
mally, we deﬁne the operation of migrating a router r at
a certain time ¯t, the act of conﬁguring the router such that
nh(r, d, t) = nhf inal(r, d), ∀d ∈ D and ∀t > ¯t. Since only
one IGP can be conﬁgured to control the forwarding of each
router (i.e., either the initial or the ﬁnal), routers cannot be
migrated on a per-destination basis. We call router migra-
tion ordering the ordering in which routers are migrated. A
scenario
protocol
ﬂat2hier
hier2ﬂat
hier2hier
summarization
IGP conﬁguration changes
protocol replacement
zones introduction
zones removal
zones reshaping
summarization introduction/removal
Table 1: IGP Migration Scenarios.
network migration is completed when all routers have been
migrated.
Throughout the paper, we consider only migration loops,
that is, loops arising during an IGP migration because of
a non-safe router migration ordering. Migration loops are
not-protocol dependant, and can be longer and more harm-
ful than loops that arise during protocol convergence, since
migration loops last until speciﬁc routers are migrated (e.g.,
see Section 3.1). Observe that, if the nh function does not
change, the π function does not change either, hence any
migration order does not create loops during the migration.
3.1 IGP migration scenarios
Table 1 presents the IGP migration scenarios we address
in this paper. We believe that those scenarios cover most
of the network-wide IGP migrations that real-world ISPs
can encounter. Each scenario concerns the modiﬁcation of
a speciﬁc feature of the IGP conﬁguration. Moreover, dif-
ferent scenarios can be combined if more than one feature
of the IGP conﬁguration have to be changed. We do not
consider the change of link weights as a network-wide mi-
gration. Since traﬃc matrices tend to be almost stable over
time [17], ISPs can prefer to progressively change the weight
of few links at a time. Eﬀective techniques have been already
proposed for the graceful change of few link weights [18, 19,
20, 21, 22]. Nevertheless, our generalized model and the
techniques we present in Section 5 can also be used when
link weights have to be changed. In the following, we de-
scribe the issues that must be addressed in each scenario
using the notation introduced in Section 2.2.
Protocol replacement
This migration scenario consists of replacing the running
IGP protocol, but keeping the same nh function in the ini-
tial and in the ﬁnal conﬁgurations. A classical example of
such a scenario is the replacement of an OSPF conﬁguration
with the corresponding IS-IS conﬁguration [1]. Since the nh
function is the same in both IGPs, routers could be migrated
in any order without creating loops.
Hierarchy modiﬁcation
Three migration scenarios are encompassed by the mod-
iﬁcation of the IGP hierarchy. First, a ﬂat IGP can be re-
placed by a hierarchical IGP by introducing several zones.
Second, a hierarchical IGP can be migrated into a ﬂat IGP
by removing peripheral zones and keeping only one zone.
Third, the structure of the zone in a hierarchical IGP can
be changed, e.g., making the backbone bigger or smaller. We