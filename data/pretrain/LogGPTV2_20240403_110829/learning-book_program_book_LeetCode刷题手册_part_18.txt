sign = 1
dvd, dvs := abs(divided), abs(divisor)
for dvd >= dvs {
temp := dvs
m := 1
for temp0{
tmpCounter[s[i:i+1ength]]--
//fmt.Printf("****sub=%v i=%v 1enght =%v start =%v tmpCounter =
%v totalLen = %v\n",s[i:i+length]，i，length，start， tmpCounter,totalLen]
if checkwords(tmpCounter) && (i+length-start == totalLen){
res = append(res, start)
continue
i = i + 1ength - 1
}else{
start++
i = start - 1
tmpCounter = copyMap(counter)
return res
func checkwords(s map[string]int) boo]{
flag := true
for
V:=range s{
if v >o{
flag = false
break
return flag
func copyMap(s map[string]int) map[string]int {
C := map[string]int{}
for k, v := range s {
c[k] = v
---
## Page 115
return c
33.SearchinRotatedSortedArray.
题目
o o umouun goid awos je paejou sl apo gupuase u paos fee ue asoddns
beforehand.
(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2] )
na asao xai s na ee a u no l es o ng  e a ae no
You may assume no duplicate exists in the array.
Your algorithm's runtime complexity must be in the order of O(log n)-
Example 1:
Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
Example 2:
Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1
题目大意
假设按照升序排序的数组在预先未知的某个点上进行了旋转。（例如，数组[0,1,2,4,5,6,7]可能变为
[4,5,6,7,0,1,2]）。搜索一个给定的目标值，如果数组中存在这个目标值，则返回它的索引，否则返回-1
。你可以假设数组中不存在重复的元素。
你的算法时间复杂度必须是O(logn)级别。
解题思路
·给出一个数组，数组中本来是从小到大排列的，并且数组中没有重复数字。但是现在把后面随机一
段有序的放到数组前面，这样形成了前后两端有序的子序列。在这样的一个数组里面查找一个数，
设计一个O(logn)的算法。如果找到就输出数组的小标，如果没有找到，就输出-1。
·由于数组基本有序，虽然中间有一个断开点”，还是可以使用二分搜索的算法来实现。现在数组前
面一段是数值比较大的数，后面一段是数值偏小的数。如果mid洛在了前一段数值比较大的区间
内了，那么一定有nums[mid]>nums[1ow]，如果是落在后面一段数值比较小的区间内，
---
## Page 116
nums[mid]≤nums[1ow]。如果mid落在了后一段数值比较小的区间内了，那么一定有
nums[mid]>1
if nums[mid]== target {
return mid
}elseifnums[mid]>nums[1ow]{//在数值大的一部分区间里
if nums[1ow]> 1)
if nums[mid]>target {
high = mid - 1
}else if nums[mid]> 1)
if nums[mid]> target {
high = mid - 1
}else if nums[mid] > 1)
if nums[mid] >= target {
if（mid==0）11（nums[mid-1]> 1)
if nums[mid]target）{//找到最后—个小于等于
target的元素
return mid
1ow = mid + 1
}else{
high = mid - 1
return -1
35.SearchInsertPosition
题目
Given a sorted array and a target value, return the index if the target is found. If not, return the
indlex where it would be if it were inserted in order.
You may assume no duplicates in the array.
Example 1:
Input: [1,3,5,6], 5
output: 2
Example 2:
Input: [1,3,5,6], 2
output: 1
Example 3:
---
## Page 120
Input: [1,3,5,6], 7
Output: 4
Example 4:
Input: [1,3,5,6], 0
output: 0
题目大意
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，
返回它将会被按顺序插入的位置。
你可以假设数组中无重复元素。
解题思路
·给出一个已经从小到大排序后的数组，要求在数组中找到插入target元素的位置。
·这一题是经典的二分搜索的变种题，在有序数组中找到最后一个比target小的元素。
代码
package leetcode
func searchInsert(nums []int， target int) int {
1ow,high := 0, 1en(nums) -1
for low >1
if nums[mid] >= target {
high = mid - 1
}else{
if (mid == 1en(nums)-1) 11 (nums [mid+1] >= target) {
return mid + 1
1ow = mid + 1
return 0
36.ValidSudoku
题目
---
## Page 121
Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to
the following rules:
1. Each row must contain the digits 1-9 without repetition.
2. Each column must contain the digits 1-9 without repetition.
3. Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.
53
7
6
1
9
5
98
6
8
6
3
4
8
3
1
7
2
6
6
2
8
4
9
5
8
7
9
A partially filled sudoku which is validl.
 aeeu aue y pal ae slao Ada aam pally eed aq pino peoq nxons au
Example 1:
Input:
["5", "3",".
,*7"*
"]，
["6","
*,".*,"1", *9”, "5”,"*",
,"."]，
[".*,"9","8","
，"3"]，
,"1"],
["7",
，"6"]，
[" .
"6"
"2*"
“8"
"9”
"5"]
[" .
"8"
[6.
output: true
Example 2:
Input:
["8", "3",*
["6", "
[”.", "9”,"8”，,
"6",
“3"]，
3*
,"1"],
---
## Page 122
"6"],
""" *4""1"""9",
"5"]
，"7","9"]
output: false
Explanation: Same as Example 1, except with the 5 in the top 1eft corner being
modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is
invalid,
Note:
● A Sudoku board (partially filled) could be valid but is not necessarily solvable.
● Only the filled cells need to be validated according to the mentioned rules.
●The given board contain only digits 1-9 and the character '. -
●The given board size is always 9x9
题目大意