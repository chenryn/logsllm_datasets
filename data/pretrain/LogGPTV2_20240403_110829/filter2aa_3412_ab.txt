...
}
Information Classification: General
We need Data Flow Analysis
Information Classification: General
Partial Path Traversal - DataFlow
String dirCanonical = dir.getCanonicalPath();
String pCanonical = parent.getCanonicalPath() +
File.separatorChar;
if (!dirCanonical
.startsWith(pCanonical)) {
...
}
Information Classification: General
Partial Path Traversal - Data Flow
String dirCanonical = dir.getCanonicalPath();
String pCanonical = parent.getCanonicalPath() +
File.separatorChar;
if (!dirCanonical
.startsWith(pCanonical)) {
...
}
Information Classification: General
Partial Path Traversal - Data Flow
String dirCanonical = dir.getCanonicalPath();
String pCanonical = parent.getCanonicalPath() +
File.separatorChar;
if (!dirCanonical
.startsWith(pCanonical)) {
...
}
Information Classification: General
Partial Path Traversal - Data Flow
String dirCanonical = dir.getCanonicalPath();
String pCanonical = parent.getCanonicalPath() +
File.separatorChar;
if (!dirCanonical
.startsWith(pCanonical)) {
...
}
Information Classification: General
Partial Path Traversal - Data Flow
String dirCanonical = dir.getCanonicalPath();
String pCanonical = parent.getCanonicalPath() +
File.separatorChar;
String pCanonical2 = pCanonical;
if (!dirCanonical
.startsWith(pCanonical2)) {
...
}
Information Classification: General
Data Flow
Uncovers hard to find Vulnerabilities
and prevents 
False Positives
Information Classification: General
Data Flow Analysis
class GetCanonicalPathToStartsWithLocalFlow extends LocalFlowSpec {
@Override
public boolean isSource(J.MethodInvocation methodInvocation, Cursor cursor) {
return new MethodMatcher("java.io.File getCanonicalPath()")
.matches(methodInvocation);
}
@Override
public boolean isSink(Expression expression, Cursor cursor) {
return InvocationMatcher
.fromMethodMatcher(
new MethodMatcher(
"java.lang.String startsWith(java.lang.String)"
)
)
.advanced()
.isSelect(cursor);
}
}
Information Classification: General
Partial Path Traversal - Putting it all together
Information Classification: General
Example Case: AWS Java SDK
CVE-2022-31159
Information Classification: General
Information Classification: General
Information Classification: General
Vulnerability #3
Zip Slip
Information Classification: General
Zip Slip
void zipSlip(File destination, ZipFile zip) {
Enumeration entries = zip.entries();
while (entries.hasMoreElements()) {
ZipEntry e = entries.nextElement();
File f = new File(destination, e.getName());
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
}
}
Information Classification: General
Zip Slip
ZipEntry e = entries.nextElement();
File f = new File(destination, e.getName());
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip
ZipEntry e = entries.nextElement();
File f = new File(destination, e.getName());
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip is Complicated
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
if (!f.toPath().startsWith(destination.toPath())) {
throw new IOException("Bad Zip Entry!");
}
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
The Problem
with
Zip Slip
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
if (!f.toPath().startsWith(destination.toPath())) {
throw new IOException("Bad Zip Entry!");
}
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
if (f.toPath().startsWith(destination.toPath())) {
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
}
Information Classification: General
Control Flow Analysis
Information Classification: General
Control Flow Analysis
File f = new File(destination, e.getName());
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
File f = new File(destination, e.getName());
if 
(!f.toPath().startsWith(destination.toPath())){
throw new IOException("Bad Zip Entry!");
}
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Control Flow - OpenRewrite
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
if (!f.toPath().startsWith(destination.toPath())) {
throw new IOException("Bad Zip Entry!");
}
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip
File f = new File(destination, e.getName());
if (!f.toPath().startsWith(destination.toPath())) {
throw new IOException("Bad Zip Entry!");
}
IOUtils.copy(
zip.getInputStream(e),
new FileOutputStream(f)
);
Information Classification: General
Zip Slip - Putting it all together
Information Classification: General
Zip Slip - Putting it all together
Information Classification: General
Pull Request Generation!
Information Classification: General
Information Classification: General
Problems with Pull Request Generation
Information Classification: General
How fast can we generate
Pull Requests?
Information Classification: General
Pull Request Generation Steps
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
4. Rename Repository on GitHub
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
4. Rename Repository on GitHub
5. Push changes
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
4. Rename Repository on GitHub
5. Push changes
6. Create Pull Request on GitHub
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
4. Rename Repository on GitHub
5. Push changes
6. Create Pull Request on GitHub
File IO
Git Operation
GitHub API .
Information Classification: General
Pull Request Generation Steps
1. Checkout (ie. Download) code Repository
2. Branch, Apply Diff, & Commit
3. Fork Repository on GitHub
4. Rename Repository on GitHub
5. Push changes
6. Create Pull Request on GitHub
File IO
Git Operation
GitHub API .
Information Classification: General
Information Classification: General
We’ve made it this far
✅ Vulnerabilities Detected
✅ Style Detected
✅ Code Fixed & Diff Generated
✅ Rate Limit Bypassed
Information Classification: General
We’ve made it this far
✅ Vulnerabilities Detected
✅ Style Detected
✅ Code Fixed & Diff Generated
✅ Rate Limit Bypassed
How do we do this for all the repositories?
Information Classification: General
Moderne
● Free for Open Source Projects!
● ~7,000 Repositories indexed
● Run Open Rewrite Transformations at Scale
● Generates and Update Pull Requests
Information Classification: General
800+ OpenRewrite Recipes including complete Framework 
Migrations
Information Classification: General
Bulk Pull Request Generation - public.moderne.io
Information Classification: General
Information Classification: General
Information Classification: General
But there are more than just 7,000 
repositories in the world
How do we find the other vulnerable projects?
Information Classification: General
CodeQL
Information Classification: General
CodeQL
100k+ OSS Projects Indexed
35k+ OSS Java Projects
Information Classification: General
https://github.com/moderneinc/jenkins-ingest
Information Classification: General
Finally!
Let’s generate some 
Open Source Software
Pull Requests!
Information Classification: General
Bulk Pull Request Generation Statistics
Project
PR Generator
Pull Requests
Merge Rate
HTTP Download of Dependencies
Python Bot
1,596
40%
CVE-2019-16303: JHipster RNG Vulnerability
Python Bot + Moderne
3,467
2.3%
CVE-2020-8597: rhostname array overflow
Python Bot
1,885
7.6%
Temporary Directory Hijacking
Moderne
64
TBD
Partial Path Traversal
Moderne
24
TBD
Zip Slip
Moderne
86
TBD
Information Classification: General
Bulk Pull Request Generation Statistics
Project
PR Generator
Pull Requests
Merge Rate
HTTP Download of Dependencies
Python Bot
1,596
40%
CVE-2019-16303: JHipster RNG Vulnerability
Python Bot + Moderne
3,467
2.3%
CVE-2020-8597: rhostname array overflow
Python Bot
1,885
7.6%
Temporary Directory Hijacking
Moderne
64
TBD
Partial Path Traversal
Moderne
24
TBD
Zip Slip
Moderne
86
TBD
New Pull Requests Generated in 2022: 570+
Information Classification: General
Bulk Pull Request Generation Statistics
Project
PR Generator
Pull Requests
Merge Rate
HTTP Download of Dependencies
Python Bot
1,596
40%
CVE-2019-16303: JHipster RNG Vulnerability
Python Bot + Moderne
3,467
2.3%
CVE-2020-8597: rhostname array overflow
Python Bot
1,885
7.6%
Temporary Directory Hijacking
Moderne
64
TBD
Partial Path Traversal
Moderne
24
TBD
Zip Slip
Moderne
86
TBD
Personally Generated: 5,200+ Pull Requests
Information Classification: General
Information Classification: General
Information Classification: General
Best Practices for Bulk Pull Request
Generation
Information Classification: General
Messaging!
Information Classification: General
All Software Problems are
People Problems
In Disguise
Information Classification: General
Lesson 1
Sign off all Commits
--signoff
Information Classification: General
Sign off on Commits
Signed-off-by: Jonathan Leitschuh 
Information Classification: General
Sign off on Commits
Why?!
Information Classification: General
Sign off on Commits
“It was introduced in the wake of the SCO lawsuit, (and other accusations of 
copyright infringement from SCO, most of which they never actually took to court), 
as a Developers Certificate of Origin. It is used to say that you certify that you 
have created the patch in question, or that you certify that to the best of your 
knowledge, it was created under an appropriate open-source license, or that it has 
been provided to you by someone else under those terms.”
- Stack Overflow
Information Classification: General
TL;DR
Information Classification: General
Lawyers
Information Classification: General
Information Classification: General
Lesson 2
Be a good commitizen
Information Classification: General
Lesson 2
Be a good commitizen
GPG Sign your Commits
Information Classification: General
Information Classification: General
Lesson 3
There are risks using your
personal
GitHub Account
Information Classification: General
Anyone here familiar with
GitHub’s
Angry Unicorn?
Information Classification: General
This was my GitHub Profile Page for most of 2020
Information Classification: General
Lesson 4
Coordinate with GitHub
Information Classification: General
Before Attempting
Reach out to GitHub!
PI:EMAIL
Information Classification: General
Lesson 5
Consider the Implications
Information Classification: General
Information Classification: General
Conclusion
Information Classification: General
As Security Researchers
Information Classification: General
We have an obligation to society
Information Classification: General
We know these vulnerabilities are out there
Information Classification: General
“For every 500 developers 
you have one security 
researcher.”
- GitHub 2020
Information Classification: General
- Dan Kaminsky (1979 – 2021)
“We can fix it. We have the technology. OK. We need 
to create the technology. Alright. The policy guys are 
mucking with the technology. Relax. WE'RE ON IT.
Information Classification: General
Black Hat Sound Bytes
● Learn CodeQL! Seriously! It’s an incredibly powerful language!
● Contribute to OpenRewrite! Deploy your security fixes at scale!
● Join the GitHub Security Lab & OpenRewrite Slack Channels!
Information Classification: General
Thanks
Lidia Giuliano
Shyam Mehta