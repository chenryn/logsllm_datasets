### 3.3.1 Confidentiality

Let's examine an example of a confidentiality breach, assess its impact, and discuss how it could have been prevented or mitigated. In August 2021, T-Mobile announced that hackers had accessed data associated with over 50 million current, former, and prospective customers. While no payment information, passwords, or PINs were compromised, the stolen data included first and last names, dates of birth, social security numbers, and ID/driver’s license information. This data was subsequently offered for sale on the dark web.

#### Impact
The breach compromised the confidentiality of personal information for millions of T-Mobile customers. The further exposure of this data on the dark web led to additional reputational damage for T-Mobile, as this incident was one of several recent breaches.

#### Prevention and Mitigation
Although detailed information on the attack methodology is limited, the attackers claimed to have initially compromised a router, gaining access to over 100 servers, including the database(s) containing the affected customer data. This breach could have potentially been prevented by:
- Ensuring all internet-facing resources were properly configured, patched, and updated.
- Monitoring for anomalous user behavior.
- Implementing better network segmentation.

#### Confidentiality in Context
Confidential documents, such as driver’s licenses, should be kept private because they contain identifying information. However, not all information held by a company is necessarily confidential. For example, T-Mobile's board members are publicly listed on their website. If an attack were to expose this information, it would not constitute a breach of confidentiality.

### 3.3.2 Integrity

A system has integrity if the information and functionality it stores are only those intended by the owner. Integrity ensures the accuracy and reliability of data and services. Simply logging into a user’s social media account by guessing their password does not compromise integrity. However, if the attacker starts posting messages or deleting information, it becomes an integrity attack. A common type of integrity attack is arbitrary code execution.

#### Example: WhisperGate Malware
In January 2022, researchers identified a new wiper malware, dubbed WhisperGate, targeting Ukrainian entities. This malware operates in two stages:
1. Overwriting the Master Boot Record (MBR) to display a fake ransomware note.
2. Downloading additional malware to overwrite files with specific extensions, rendering them corrupt and unrecoverable.

This attack impacts the integrity of data on affected systems by irreversibly overwriting files, effectively deleting them.

#### Mitigation
Microsoft recommended the following steps to protect against such attacks:
- Enable Multi-Factor Authentication (MFA) to mitigate compromised credentials.
- Enable Controlled Folder Access (CFA) in Microsoft Defender to prevent MBR/VBR tampering.
- Use provided Indicators of Compromise (IoCs) to search for potential breaches.
- Review and validate authentication activity for all remote access.
- Investigate other anomalous activity.

For more technical details, refer to CrowdStrike's analysis. In summary, maintaining integrity is crucial for enterprises to ensure that other businesses and consumers can trust the information they hold.

### 3.3.3 Availability

A system is considered available if authorized users can access it when needed. For example, if an attacker gains access to a social media account and posts content, it constitutes an attack on confidentiality and integrity. If the attacker also changes the user’s password, preventing them from logging in, it becomes an attack on availability. A common type of availability attack is a Denial of Service (DoS).

#### Example: Viasat Attack
On February 24, 2022, during the Russian invasion of Ukraine, Viasat's satellite broadband service was hit by a DoS attack using a wiper malware called AcidRain. This attack temporarily disabled satellite internet for Ukrainian customers, including the government and military.

#### Impact
The attack disrupted critical communication and coordination at a crucial moment. Viasat stated that a VPN "misconfiguration" allowed initial access. Although the specific misconfiguration is unclear, proper VPN configuration could have prevented the attack.

#### Mitigation
While prevention can be challenging, general guidance for defending against Advanced Persistent Threats (APTs) includes:
- Ensuring complete visibility into the environment.
- Engaging in threat intelligence.
- Performing threat hunting.

### 3.3.4 Balancing the CIA Triad with Organizational Objectives

Balancing the CIA triad (Confidentiality, Integrity, Availability) with organizational objectives is essential. Extremely strong security can sometimes hinder availability, leading to inefficiency, low morale, and potential organizational collapse. Balancing security controls with availability involves continuous evaluation, exploration, threat modeling, discussion, testing, and release. Security is everyone’s responsibility, and processes that receive feedback from the entire organization and educate employees about security controls are typically important for a successful security program.

### 3.4 Security Principles, Controls, and Strategies

#### 3.4.1 Security Principles

- **Principle of Least Privilege**: Each part of a system should only have the minimum privileges necessary to perform its task. This principle applies to both human users and system components like machines, routers, and firewalls.
- **Zero Trust Security Model**: This model removes all implicit trust of networks and implements granular authorization processes for every resource request.
- **Open Security**: The security of a system should not depend on its secrecy. Even if an attacker knows the security implementation, they should still be thwarted.
- **Defense in Depth**: Adding multiple layers of defense to a system so that if one layer is bypassed, others can still prevent full infiltration.

#### 3.4.2 Security Controls and Strategies

To implement these principles, organizations can use various security strategies, including:
- 24/7 vigilance
- Threat modeling
- Table-top discussions
- Continuous training
- Automated patching
- Supply chain verification
- Secure coding and design
- Daily log reviews
- Multiple layers of well-implemented security controls

#### 3.4.3 Shift-Left Security

Shift-left security involves considering security engineering from the outset of product or system design, rather than adding it later. This approach can improve efficiency and reduce the need for additional security services, though it may slow down productization times.

#### 3.4.4 Administrative Segmentation

Administrative segmentation is crucial to prevent internal threats. By splitting controls between different teams and administrators, or using techniques like Shamir’s Secret Sharing (SSS), no single authority can bypass all controls.

#### 3.4.5 Threat Modeling and Threat Intelligence

- **Threat Modeling**: Evaluating attack patterns and techniques against an organization’s people, processes, systems, and software.
- **Threat Intelligence**: Actionable information about valid threats to an organization, gathered through threat modeling and research.

#### 3.4.6 Table-Top Tactics

Table-top discussions bring together engineers, stakeholders, and security professionals to plan responses to various types of disasters and attacks. These sessions are part of Business Continuity Planning (BCP) and help raise cross-team awareness and identify weaknesses in controls.

#### 3.4.7 Continuous Patching and Supply Chain Validation

Continuous automated patching involves pulling upstream source code, applying it to the development environment, testing, and then moving it to production if successful. This helps ensure that systems are up-to-date and secure.

By implementing these principles, controls, and strategies, organizations can better protect their assets and maintain a robust security posture.