### Data Transmission and Connection Issues

Data can be transmitted to or received from external sources. Occasionally, data connections may abnormally stall for extended periods, leading to a frustrating user experience. This phenomenon is known as "Data_Stall" in Android. Specifically, a Data_Stall is reported when there have been more than 10 outbound TCP segments without a single inbound TCP segment in the last minute. The Linux kernel's network protocol stack tracks these statistics. Additionally, there are other types of connection issues, which will be mentioned as needed.

#### Current Notification Mechanisms

Android provides basic notification interfaces that allow relevant system services to register as event listeners. However, only a subset of these interfaces, such as the Data_Stall notifier and Out_of_Service checker, are accessible to user-space applications. Some interfaces remain inaccessible even with root privileges. As a result, capturing all relevant failure events through an Android app alone is not feasible. Moreover, some reported events, like a Data_Setup_Error, do not necessarily indicate true failures; they may occur due to temporary conditions, such as an overloaded nearby base station. Furthermore, the information provided by Android for these events is often insufficient for in-depth analysis.

### Network Probing and Error Detection

To address these limitations, we developed a component that checks the states of the network stack and Internet connectivity. This component sends an ICMP message to the local IP address (127.0.0.1) and simultaneously sends an ICMP message and a DNS query to each assigned DNS server. If the ICMP message to the local IP address times out (configured to one second as per the ICMP protocol), it indicates a system-side issue, such as a firewall misconfiguration, problematic proxy settings, or modem driver failures. If all DNS queries time out (configured to five seconds as per the DNS protocol), it suggests a network-side problem. If only the DNS queries time out while the ICMP messages to the DNS servers succeed, it indicates a DNS resolution service unavailability.

The entire probing process takes at most five seconds. If the results indicate that the Data_Stall has not been resolved, a new probing process is initiated. Otherwise, the duration values from all previous probes are summed to approximate the actual duration of the Data_Stall, with a maximum measurement error of five seconds. To avoid excessive network overhead, if a Data_Stall lasts longer than 1200 seconds, the timeout values are increased multiplicatively by a factor of two. If any timeout value exceeds one minute, Android's original detection mechanism is used to estimate the Data_Stall duration.

### Resource Utilization

Our modifications to Android involve system-level logging and lightweight network probing. For a low-end Android phone, our solution incurs less than 2% CPU utilization, less than 40 KB of memory usage, and less than 100 KB of storage space, with monthly network usage below 100 KB. The CPU utilization is measured during detected failures, and the monitoring infrastructure remains dormant during normal operation, thus not incurring additional overhead.

For a small fraction (<1%) of user devices experiencing up to 40,000+ failures per month, the overheads are still manageable: less than 8% CPU utilization, less than 2 MB of memory usage, and less than 20 MB of storage space, with monthly network usage reaching 20 MB. Data is uploaded to the backend server only when WiFi is available.

### Large-Scale Deployment

In December 2019, we invited Xiaomi users to participate in our study by installing a lightweight update (Android-MOD) on their phones. This update does not affect installed apps, existing data, or the OS version. A total of 70,965,549 users opted in and collected data for eight months (Januaryâ€“August 2020). All data were compressed and uploaded to our backend server for centralized analysis.

#### Ethical Considerations

All analysis tasks comply with the agreement between Xiaomi and its users. Participants opted in voluntarily with informed consent, and the analysis was conducted under a well-established IRB. No personally identifiable information was collected, and we have no way to link collected data to users' true identities.

### Measurement Results

#### General Statistics

With the help of 70,965,549 Android-MOD user devices across 34 different phone models, we recorded 2,315,314,213 cellular failures involving 16,183,145 user devices, 3 mobile ISPs, and 5,273,972 base stations. This dataset is, to our knowledge, the largest regarding cellular failures in the wild.

- **Prevalence and Frequency**: Cellular failures are prevalent across all 34 phone models, with prevalence ranging from 0.15% to 45%, averaging at 23%. On average, a phone experiences 33 cellular failures over eight months, with the number varying from 2.3 to 90.2 per model. While 77% of phones did not report cellular failures, the maximum number of failures for a single phone reached 198,228.
- **Duration**: The average duration of cellular failures is 188 seconds (3.1 minutes). The duration distribution is highly skewed, with 70.8% of failures lasting less than 30 seconds, but the maximum duration can reach 91,770 seconds (25.5 hours). Long-duration failures typically occur in remote regions.

#### Hardware Configurations

Table 1 lists the hardware configurations of the 34 phone models, ordered from low-end to high-end. The rightmost columns provide details on 5G capability, Android version, user percentage, prevalence, and frequency of cellular failures.

| Model | CPU | Memory | Storage | 5G | Version | Users | Prevalence | Frequency |
|-------|-----|--------|---------|----|---------|-------|------------|-----------|
| 1     | 1.8 GHz | 2 GB | 16 GB | No | 6.0 | 1% | 0.15% | 2.3 |
| 2     | 1.95 GHz | 2 GB | 16 GB | No | 7.0 | 2% | 0.2% | 2.5 |
| ...   | ... | ... | ... | ... | ... | ... | ... | ... |
| 34    | 2.84 GHz | 8 GB | 128 GB | Yes | 10.0 | 10% | 45% | 90.2 |

This comprehensive dataset and analysis provide valuable insights into the nature and causes of cellular failures, enabling better understanding and potential improvements in cellular network reliability.