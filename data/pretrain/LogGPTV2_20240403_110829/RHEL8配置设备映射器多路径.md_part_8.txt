    ``` screen
    # multipathd disablequeueing map 
    ```
    这可让设备的 I/O 失败，允许使用该设备的应用程序关闭。
:::
::: orderedlist
**流程**
1.  确定没有其他应用程序或服务正在使用您要删除的设备。
2.  备份您要删除的设备中的数据。
3.  使用 `umount`{.literal} 命令卸载设备上挂载的任何文件系统。
4.  从任意 `RAID`{.literal} 阵列或者它所属的任何 LVM
    卷中删除该设备。例如：如果该设备是 LVM
    组的成员，且它是一个多路径设备：
    ::: orderedlist
    1.  将数据移动到另一个设备中：
        ``` screen
        # pvmove -b /dev/mapper/ /dev/mapper/
        ```
    2.  从卷组中删除该设备：
        ``` screen
        # vgreduce  /dev/mapper/
        ```
    3.  （可选）从物理设备中删除 LVM 元数据：
        ``` screen
        # pvremove /dev/mapper/
        ```
    :::
5.  如果您要删除多路径设备：
    ::: orderedlist
    1.  使用以下命令查看该设备的所有路径：
        ``` screen
        # multipath -l
        ```
        稍后需要这个命令的输出。
    2.  清除 I/O 并删除多路径设备：
        ``` screen
        # multipath -f 
        ```
    :::
6.  如果该设备没有配置为多路径设备，或者该设备被配置为多路径设备，且您之前已将
    I/O 传递给其单独的路径，则清除所有未完成的 I/O
    到所有使用的设备路径：
    ``` screen
    # blockdev --flushbufs 
    ```
    这对于 `umount`{.literal} 或 `vgreduce`{.literal} 命令不清除 I/O
    时直接访问的设备非常重要。
7.  如果您要删除 SCSI 设备，请完成以下步骤：
    ::: orderedlist
    1.  删除对设备路径名称的任何引用；例如： [*/dev/sd、/*]{.emphasis}
        [*dev/disk/by-path*]{.emphasis}
        或系统中的应用程序、脚本或实用程序中的 `主：minor`{.literal}
        号码。这样可保证以后添加的不同设备不会为当前的设备错误。
    2.  从 SCSI 子系统中删除该设备的每个路径：
        ``` screen
        # echo 1 > /sys/block//device/delete
        ```
        其中，如果设备之前用作多路径设备
        `，则从第 5 步中的 multipath -l`{.literal} 命令的输出检索
        \`{=html}``{=html}``{=html};。
    :::
8.  删除物理设备形成运行的系统。请注意，当您删除此设备时，I/O
    到其它设备不会停止。
:::
::: itemizedlist
**其它资源**
-   `multipath`{.literal}、pv`move`{.literal}、`vgreduce`{.literal}、`blockdev`{.literal}
    和 `umount`{.literal} man page。
:::
:::
:::
[]{#assembly_troubleshooting-multipath-managing-mpath.html}
::: chapter
::: titlepage
# []{#assembly_troubleshooting-multipath-managing-mpath.html#assembly_troubleshooting-multipath-managing-mpath}第 8 章 DM 多路径故障排除 {.title}
:::
如果您在进行多路径配置时遇到问题，您可以检查这些问题。
::: section
::: titlepage
# []{#assembly_troubleshooting-multipath-managing-mpath.html#ref_multipath-troubleshoot-checklist-troubleshooting-multipath}对 DM 多路径进行故障排除的检查列表 {.title}
:::
以下问题可能会导致多路径配置缓慢或者无法正常工作。
::: section
::: titlepage
## []{#assembly_troubleshooting-multipath-managing-mpath.html#_the_multipath_daemon_is_not_running}多路径守护进程没有运行 {.title}
:::
如果您发现在使用多路径配置时遇到问题，您应该确保多路径守护进程正在运行，如
[第 3 章 *设置 DM
多路径*](#assembly_setting-up-dm-multipath-configuring-device-mapper-multipath.html "第 3 章 设置 DM 多路径"){.xref}
所述。
`multipathd`{.literal} 守护进程必须正在运行才能使用多路径设备。
:::
::: section
::: titlepage
## []{#assembly_troubleshooting-multipath-managing-mpath.html#_issues_with_queue_if_no_path_feature}queue_if_no_path 功能的问题 {.title}
:::
如果多路径设备配置了 `"1 queue_if_no_path"功能`{.literal}，则所有发行
I/O 的进程都会挂起，直到恢复一个或多个路径。要避免这种情况，请在
`/etc/multipath.conf`{.literal} 文件中设置 `no_path_retry`{.literal}
`N`{.literal} `参数（其中 N`{.literal} 是系统重试路径的次数）。
如果您需要使用 `功能 "1 queue_if_no_path"`{.literal}
选项，并且遇到此处记下的问题，您可以在运行时为特定 LUN
禁用排队策略（即，所有路径都不可用）。以下命令禁用特定设备的队列。
``` literallayout
multipathd disablequeueing map device
```
以下命令禁用所有设备的队列。
``` literallayout
multipathd disablequeueing maps
```
禁用设备队列后，它将保持禁用，直到 `multipathd`{.literal}
重新启动或重新加载或您使用以下命令之一为止。
以下命令将特定设备的队列重置为之前的值。
``` literallayout
multipathd restorequeueing map device
```
以下命令将所有设备的队列重置为之前的值。
``` literallayout
multipathd restorequeueing maps
```
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-multipath-managing-mpath.html#proc_using-interactive-console-troubleshooting-multipath}使用 multipathd 互动控制台进行故障排除 {.title}
:::
`multipathd -k`{.literal} 命令是 `multipathd`{.literal}
守护进程的互动接口。执行此命令将进入互动的多路径控制台。执行此命令后，您可以输入
`帮助`{.literal} 以获取可用命令列表，您可以输入交互式命令，或者输入
`CTRL-D`{.literal} 退出。
`multipathd`{.literal}
交互式控制台可用于对系统可能遇到的问题进行故障排除。例如：以下命令会在退出控制台前显示多路径配置，其中包括默认配置。
``` literallayout
# multipathd -k
> > show config
> > CTRL-D
```
以下命令确保多路径已经采用了对 `multipath.conf`{.literal} 的任何更改，
``` literallayout
# multipathd -k
> > reconfigure
> > CTRL-D
```
使用以下命令顺序确定路径检查器正常工作。
``` literallayout
# multipathd -k
> > show paths
> > CTRL-D
```
:::
:::
[]{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html}
::: chapter
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath}第 9 章 使用 eh_deadline 配置存储错误恢复的最大时间 {.title}
:::
您可以配置最大允许的时间来恢复失败的 SCSI 设备。这个配置保证了 I/O
响应时间，即使存储硬件因为失败而变得无响应。
::: section
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html#the-eh_deadline-parameter_configuring-maximum-time-for-storage-error-recovery-with-eh_deadline}eh_deadline 参数 {.title}
:::
SCSI 错误处理(EH)机制试图在失败的 SCSI 设备中执行错误恢复。SCSI 主机对象
`eh_deadline`{.literal}
参数允许您为恢复配置最长时间。配置的时间过期后，SCSI EH
将停止并重置整个主机总线适配器(HBA)。
使用 `eh_deadline`{.literal} 可以缩短时间：
::: itemizedlist
-   关闭失败的路径,
-   切换路径，或者
-   禁用 RAID 分片。
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
当 `eh_deadline`{.literal} 到期时，SCSI EH 会重置 HBA，HBA 会影响 HBA
上的所有目标路径，而不仅仅是失败的路径。如果由于其他原因无法使用冗余路径，则可能会出现
I/O 错误。只有在所有目标上都有完全冗余的多路径配置时才启用
`eh_deadline`{.literal}。
:::
### []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html#_scenarios_when_eh_deadline_is_useful}eh_deadline 很有用的情况
在大多数情况下，您不需要启用 `eh_deadline`{.literal}。在特定情况下，使用
`eh_deadline`{.literal}
可能会很有用，例如光纤通道(FC)交换机和目标端口之间的链接丢失，并且 HBA
不会收到注册状态更改通知(RSCN)。在这种情况下，I/O
请求和错误恢复命令会随时超时，而不是遇到错误。在此环境中设置
`eh_deadline`{.literal} 会设置恢复时间上限。这可让失败的 I/O 在由 DM
多路径的另一个可用路径中检索。
在以下情况下，`eh_deadline`{.literal} 功能不会提供额外的好处，因为 I/O
和错误恢复命令会立即失败，这允许 DM 多路径重试：
::: itemizedlist
-   如果启用了 RSCN
-   如果 HBA 没有注册链接变得不可用
:::
### []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html#_possible_values}可能的值
`eh_deadline`{.literal} 的值以秒为单位指定。
默认设置为 `off`{.literal}，它会禁用时间限制并允许进行所有错误恢复。
:::
::: section
::: titlepage
# []{#configuring-maximum-time-for-storage-error-recovery-with-eh_deadline_managing-mpath.html#setting-the-eh_deadline-parameter_configuring-maximum-time-for-storage-error-recovery-with-eh_deadline}设置 eh_deadline 参数 {.title}
:::
这个过程配置 `eh_deadline`{.literal} 参数的值，以限制最大 SCSI
恢复时间。
::: itemizedlist
**流程**
-   您可以使用以下任一方法配置 `eh_deadline`{.literal} ：
    ::: variablelist
    [`sysfs`{.literal}]{.term}
    :   将秒数写入 `/sys/class/scsi_host/host*/eh_deadline`{.literal}
        文件中。
    [内核参数]{.term}
    :   使用 `scsi_mod.eh_deadline`{.literal} 内核参数为所有 SCSI HBA
        设置默认值。
    :::
:::
::: itemizedlist
**其它资源**
-   [如何使用 udev 规则永久设置 eh_deadline 和
    eh_timeout](https://access.redhat.com/solutions/3209481){.link}
:::
:::
:::