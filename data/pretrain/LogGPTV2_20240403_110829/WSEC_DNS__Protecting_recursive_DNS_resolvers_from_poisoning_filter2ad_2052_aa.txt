title:WSEC DNS: Protecting recursive DNS resolvers from poisoning
attacks
author:Roberto Perdisci and
Manos Antonakakis and
Xiapu Luo and
Wenke Lee
978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE
3
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:34 UTC from IEEE Xplore.  Restrictions apply. 
WSECDNS:ProtectingRecursiveDNSResolversfromPoisoningAttacksRobertoPerdisci1,2,ManosAntonakakis2,XiapuLuo2,andWenkeLee21Damballa,Inc.Atlanta,GA30308,USA2CollegeofComputing,GeorgiaInstituteofTechnology,Atlanta,GA30332,PI:EMAIL,{manos,csxpluo,wenke}@cc.gatech.eduAbstractRecently,anewattackforpoisoningthecacheofRecur-siveDNS(RDNS)resolverswasdiscoveredandrevealedtothepublic.Inresponse,majorDNSvendorsreleasedapatchtotheirsoftware.However,thereleasedpatchdoesnotcompletelyprotectDNSserversfromcachepoisoningattacksinanumberofpracticalscenarios.DNSSECseemstoofferadeﬁnitivesolutiontothevulnerabilitiesoftheDNSprotocol,butunfortunatelyDNSSEChasnotyetbeenwidelydeployed.Inthispaper,weproposeWild-cardSECureDNS(WSECDNS),anovelsolutiontoDNScachepoisoningattacks.WSECDNSreliesonexistingpropertiesoftheDNSpro-tocolandisbasedonwild-carddomainnames.WeshowthatWSECDNSisabletodecreasetheprobabilityofsuc-cessofcachepoisoningattacksbyseveralordersofmagni-tude.Thatis,withWSECDNSinplace,anattackerhastopersistentlyrunacachepoisoningattackforyears,beforehavinganon-negligiblechanceofsuccess.Furthermore,WSECDNSofferscompletebackwardcompatibilitytoDNSserversthatmayforanyreasondecidenottoimplementit,thereforeallowinganincrementallarge-scaledeployment.ContrarytoDNSSEC,WSECDNSisdeployableimmedi-atelybecauseitdoesnothavethetechnicalandpoliticalproblemsthathavesofarhamperedalarge-scaledeploy-mentofDNSSEC.1IntroductionThenormaloperationoftheDomainNameSystem(DNS)[18,19]isvitalforadependableInternet.WetrusttheDNSserversinoureverydaylifetoprovideuswiththecorrectdomainnametoIPaddressmapping,sothatwecanbrowsetheWeb,sendemails,accessourbankac-counts,etc.EvenapartialdisruptionofDNSmayhaveacatastrophicimpactontheInternet.DNSqueriesareusu-allyinitiatedbyastub-resolver(e.g.,awebbrowser)onauser’smachine,whichdependsonarecursiveDNSresolver(RDNS)forobtainingtheIPaddress(orotherresources)relatedtoadomainname.TheRDNSisresponsiblefordi-rectlycontactingtheauthoritativenameserversonbehalforthestub-resolver,cachetheresponseforagiventimetolive(TTL),andforwardsitbacktothestub-resolver.Sinceitsintroduction,DNShasbeenfoundtobevulnerabletoanumberofattacks.Inparticular,cachepoisoningattackshavebeenshowntobequitefeasible[23].PoisoningattacksworkbyforcinganRDNStolookupadomainname(e.g.,google.com),andthensendingforgedDNSresponsesbacktotheRDNSbeforethe“real”validresponsefromanauthoritativenameserverarrives.EachDNSquerycontainsa16-bits-longtransactionID(TXID)thatallowstheRDNStodistinguishvalidresponsesfrombogusones.Therefore,theattackerhasto“guess”thecorrectTXIDinorderforaforgedresponsetobeacceptedandstoredinthecache.Iftheattackissuccessful,theattackercanforcetheRDNStoresolvethetargeteddomainnametoamaliciousIP,andtostorethemaliciousIPinthecachewithalongTTL.Asaconsequence,thenexttimeastub-resolverqueriestheRDNSforthesamedomainname,itwillalsoberedi-rectedtothemaliciousIP(e.g.,usersofgoogle.commayberedirectedtoamaliciouswebsitethathostsmalwareorparticipatesininformationtheft).RecentlyKaminsky[13]showedthatasuccessfulcachepoisoningattackmaybeac-complishedinamatterofseconds,byexploitingaﬂawintheDNSprotocol.1.1PreviousWorkTheDomainNameSystemSecurityExtensions(DNSSEC)havebeenproposedasasolutiontothevulnerabilitiesoftheDNSprotocol,andinparticulartocachepoisoningattacks.DNSSECaddsdataoriginauthenticationanddataintegrityveriﬁcationmechanismstoDNS[1,2,3,9].TheimplementationanddeploymentofDNSSECwouldthereforeprovidearobustwayofprotectingagainstDNScachepoisoningattacks(aswellasotherattackstotheDNS)becausealltheresponsesare978-1-4244-4421-2/09/$25.00 c(cid:13)2009 IEEE