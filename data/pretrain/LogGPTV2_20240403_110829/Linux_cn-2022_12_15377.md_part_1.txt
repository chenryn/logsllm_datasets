---
author: Sk
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 4282
date: '2022-12-24 15:22:00'
editorchoice: false
excerpt: 在本文中，我们将了解什么是 SCP 以及如何在 Linux 和类 Unix 操作系统中使用 SCP 在本地和远程计算机之间安全地传输文件。
fromurl: https://ostechnix.com/securely-transfer-files-with-scp-in-linux/
id: 15377
islctt: true
largepic: /data/attachment/album/202212/24/152224vy4glx9x39mtth9b.jpg
permalink: /article-15377-1.html
pic: /data/attachment/album/202212/24/152224vy4glx9x39mtth9b.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: 在本文中，我们将了解什么是 SCP 以及如何在 Linux 和类 Unix 操作系统中使用 SCP 在本地和远程计算机之间安全地传输文件。
tags:
- 文件传输
- scp
thumb: false
title: 如何在 Linux 中使用 SCP 安全地传输文件
titlepic: true
translator: MjSeven
updated: '2022-12-24 15:22:00'
---
![](/data/attachment/album/202212/24/152224vy4glx9x39mtth9b.jpg)
在网络上文件传输可以通过各种不同的方式和协议来完成。**远程复制文件**最常用的协议是 **Rsync**、**SCP** 和 **SFTP**。在本文中，我们将了解**什么是 SCP** 以及如何在 Linux 和类 Unix 操作系统中**使用 SCP 在本地和远程计算机之间安全地传输文件**。
### 什么是 SCP？
SCP，代表  安全复制   Secure Copy ，它是一个命令行程序，在 Linux 和类 Unix 操作系统中以安全的方式在本地和远程系统之间，或在两个远程系统之间复制文件和目录。
使用 `scp` 命令，你可以安全地复制文件或目录：
* 从本地到远程系统
* 从远程系统到本地
* 在两个远程系统之间
使用 `scp` 命令传输数据时，文件和目录都是加密的。因此，即使网络被破坏，作恶者也无法获得任何有意义的数据。
SCP 是 openSSH 程序的一个组件，它使用 SSH 协议安全地传输文件。几乎所有现代 Linux 和 Unix 发行版都预装了 OpenSSH，所以不必费心安装它。
#### 提醒一句：
根据 openSSH 开发人员的**官方公告**：
> 
> **scp 协议已经过时了**，它不灵活且不易修复。我们建议使用更现代的协议，如 `sftp` 和 `rsync` 来代替。
> 
> 
> 参考 - 
> 
> 
> 
但是，大多数用户仍然更喜欢 SCP 协议。因为，SCP 处理远程文件传输比同行 SFTP 和 Rsync 更快。
另外，SCP 的工作原理与 `cp` 命令完全相同，而 `rsync` 则会判断源目录是否有**结尾斜杠**而出现不同的行为。看一看下面的命令：
* `rsync source destination/` - 将 `source` 目录复制到 `destination` 文件夹内。
* `rsync source/ destination/` - 将 `source` 目录的内容复制到 `destination` 文件夹中。
所以，你必须反复检查是否在路径中添加了斜杠。
我个人使用 **[Rsync](https://ostechnix.com/linux-rsync-command-examples-for-beginners/)** 在两台主机之间复制大文件，使用 SCP 在网络上复制单个文件。
### SCP 命令语法
SCP 的通用语法如下：
```
scp [-346ABCpqrTv] [-c cipher] [-F ssh_config] [-i identity_file] [-J destination] [-l limit] [-o ssh_option] [-P port] [-S program] source ... target
```
根据文件传输路径的不同，语法也会有所不同。这里我罗列了一些语法格式示例。
从本地复制一个文件到远程系统：
```
scp  SourceFile User@RemoteHost:RemotePath
```
类似的，从本地系统复制一个目录到远程系统，使用 `-r` 参数：
```
scp -r SourceDirectory User@RemoteHost:RemotePath
```
复制多个文件到远程系统：
```
scp  SourceFile1 SourceFile2 User@RemoteHost:RemotePath
```
远程系统复制文件到本地：
```
scp  User@RemoteHost:RemoteFilePath DestinationFile
```
远程系统复制目录到本地：
```
scp -r User@RemoteHost:RemoteDirectoryPath DestinationDirectory
```
在本地将文件在两个远程系统之间复制：
```
scp  User@RemoteHost1:RemoteFile1 User@RemoteHost2:RemotePath
```
注意，当你在两个远程系统之间复制文件时，流量不会通过本地系统。操作直接在两个远程系统之间进行。但是，你可以使用 `-3` 参数让流量经过你运行 `scp` 命令的系统。
从你的本地系统将一个远程系统的目录复制到另一个远程系统：
```
scp -r User@RemoteHost1:RemoteDirectory User@RemoteHost2:DestinationPath
```
### SCP 命令参数
SCP 命令最常用的参数有：
* `-C`：启用压缩。`C` 代表  压缩   Compression 。使用此参数时，数据传输速度会更快，因为数据是压缩的。SCP 将自动在源系统上压缩，并在目标系统上解压缩。
* `-c `：`c` 代表  加密   Cipher 。默认情况下，SCP 使用 **AES-128** 加密方法对数据进行加密。你可以使用 `-c` 参数更改加密方法。
* `-i `：`i` 代表  身份   Identity  文件或私钥。如你所知，SSH 中使用基于密码或密钥的身份验证。如果希望在传输文件时使用基于密钥的身份验证，可以使用 `-i` 参数指定身份文件或私钥。
* `-l limit`：`l` 代表  限制   Limit  带宽。通过此参数，可以设置传输数据的最大带宽。它的单位是 `Kbit/s`。
* `-F `：有时你可能需要使用不同的网络来连接到 Linux 系统，或你有一个代理服务器，这种情况下，你可以使用 `-F` 参数使用不同的 `ssh_config`  文件   File 。
* `-P port`：`P` 代表  端口   Port 。注意，这是大写的 `P`。默认情况下，SSH 使用端口 22。但出于安全原因，你可能已经更改了目标主机中的端口号。这种情况下，你应该使用 `-P` 参数显示指定新端口号。
* `-p`：如果希望  保留   Preserve  原始文件的修改时间、访问时间和模式，你需要使用 `-p` 参数。注意是小写 `p`。
* `-r`： 递归   Recursively  复制整个目录。
* `-B`：`B` 代表  批处理   Batch  模式。它用于在传输文件时选择批处理模式。可以防止询问密码。
* `-S program`：用于加密连接的  程序   Program  名称。
* `-v`：`v` 代表  详细   Verbose 。当使用 `-v` 参数时，命令将会在终端屏幕上打印进度。你会看到文件传输时到底发生了什么。它在调试连接、身份验证和配置问题时非常有用。
SCP 有很多参数，你可以查看它的手册页来了解其他参数。让我们看一些**有用的 scp 命令示例**。
### 开始前要记住的重要事项
* `scp` 命令依赖于 `ssh` 进行安全的文件传输。因此，你必须有一个 **ssh 密钥**或**密码**才能向远程系统进行身份验证。
* 为了能传输文件，你必须对**源文件有读权限**，对**目标位置有写权限**。
* `scp` 命令在写入前不会检查目标位置。目标位置中具有相同名称的任何文件都将被**覆盖而不通知**。
* 为了能够区分本地和远程位置，使用**冒号**（`:`）。
* 传输大文件时，建议在 **[Screen](https://ostechnix.com/screen-command-examples-to-manage-multiple-terminal-sessions/)** 或 **[Tmux](https://ostechnix.com/tmux-command-examples-to-manage-multiple-terminal-sessions/)** 会话内启动任务。
### 在 Linux 中使用 SCP 传输文件
正如我所说，我们可以使用 `scp` 命令将文件或目录从本地复制到远程系统，反之亦然，或者在两台远程系统之间复制文件或目录。
#### 1. 使用 SCP 从本地系统复制文件到远程系统
使用 `scp` 命令将文件从本地复制到远程系统，运行：
```
$ scp File1.txt PI:EMAIL:/home/ostechnix/
```
示例输出：
```
PI:EMAIL's password: 
File1.txt                                                    100%  104   814.0KB/s   00:00
```
让我们分析一下上面的命令，看看每个参数都做了什么。
* `File1.txt` - 源文件
* `ostechnix` - 远程系统的用户名
* `192.168.1.40` - 远程系统的 IP 地址
* `/home/ostechnix/` - 远程系统中的目标目录。这是我们想要传输源文件的绝对路径，如 `File.txt`。
你还可以修改目标文件的名称。下面的命令将 `File1.txt` 传输到目的地，保存为 `myfile.txt`。
```
$ scp File1.txt PI:EMAIL:/home/ostechnix/myfile.txt
```
![将文件从本地复制到远程系统](/data/attachment/album/202212/24/152253dr3nh2461ufd2f47.png)
#### 2. 使用 SCP 从本地系统复制多个文件到远程系统
使用 `scp` 命令将多个文件从本地系统传输到远程系统，运行：
```
$ scp File1.txt File2.txt PI:EMAIL:/home/ostechnix/
```
示例输出：
```
PI:EMAIL's password: 
File1.txt                                                    100%  104   689.4KB/s   00:00    
File2.txt                                                    100%  496     6.3MB/s   00:00
```
![从本地复制多个文件到远程系统](/data/attachment/album/202212/24/152253c272325ux75q7uzq.png)
这里：
* `File1.txt` 和 `File2.txt` - 源文件名
* `PI:EMAIL` - 远程系统的用户名和 IP 地址
* `/home/ostechnix` - 目标文件的路径
如果文件具有相同的扩展名，你可以使用以下替代命令来实现相同的目标。
```
$ scp {File1,File2}.txt PI:EMAIL:/home/ostechnix/
```
或者，
```
$ scp *.txt PI:EMAIL:/home/ostechnix/
```
#### 3. 使用 SCP 从本地到远程系统递归复制目录
递归地将整个目录（包括子目录及其内容）从本地复制到远程系统，使用 `-r` 参数。
```
$ scp -r Documents/ PI:EMAIL:/home/ostechnix/
```
![从本地复制目录到远程系统](/data/attachment/album/202212/24/152254fc4syr2miet8yzgm.png)
上述命令将整个 `Documents` 目录包括其内容复制到目标系统。
其中，
* `-r` - 递归复制文件和目录，包括子目录及其内容
* `Documents` - 源目录名称
* `PI:EMAIL` - 远程系统的用户名和 IP 地址
* `/home/ostechnix` - 目标目录的路径
#### 4. 用 SCP 将文件从远程系统传输到本地
还记得我们从本地系统复制了 `File1.txt` 到远程系统，让我们把它复制回本地。
使用 `scp` 命令从远程系统复制文件到本地，运行：
```
$ scp PI:EMAIL:/home/ostechnix/File1.txt Downloads/
```
其中
* `PI:EMAIL` - 远程系统的用户名和 IP 地址
* `/home/ostechnix/File.txt` - 远程系统文件的绝对路径
* `Downloads` - 本地保存复制文件的位置
![从远程系统传输文件到本地](/data/attachment/album/202212/24/152254sqzi66011gi6qhl5.png)
#### 5. 使用 SCP 将多个文件从远程系统传输到本地
将多个文件从远程系统复制到本地，在**花括号内**注明文件的绝对路径，如下所示：
```
$ scp PI:EMAIL:/home/ostechnix/\{File1.txt,File2.txt\} Downloads/
```
![将多个文件从远程系统传输到本地](/data/attachment/album/202212/24/152255hpg9jcyef5ffjf9c.png)
上述命令将从远程系统的 `/home/ostechnix/` 目录中复制 `File1.txt` 和 `File2.txt` 到本地的 `Downloads` 目录中。
注意，**花括号内的逗号后面没有空格**。
#### 6. 从远程系统递归复制目录到本地
使用 `scp` 从远程系统递归复制整个目录（包括子目录及其内容）到本地系统，使用 `-r` 参数。