title:Privacy-Preserving Dynamic Learning of Tor Network Traffic
author:Rob Jansen and
Matthew Traudt and
Nicholas Hopper
Privacy-Preserving Dynamic Learning of Tor Network Traffic
Rob Jansen
U.S. Naval Research Laboratory
PI:EMAIL
Matthew Traudt
U.S. Naval Research Laboratory
PI:EMAIL
Nicholas Hopper
University of Minnesota
PI:EMAIL
ABSTRACT
Experimentation tools facilitate exploration of Tor performance
and security research problems and allow researchers to safely and
privately conduct Tor experiments without risking harm to real Tor
users. However, researchers using these tools configure them to
generate network traffic based on simplifying assumptions and out-
dated measurements and without understanding the efficacy of their
configuration choices. In this work, we design a novel technique
for dynamically learning Tor network traffic models using hidden
Markov modeling and privacy-preserving measurement techniques.
We conduct a safe but detailed measurement study of Tor using
17 relays (∼2% of Tor bandwidth) over the course of 6 months, mea-
suring general statistics and models that can be used to generate a
sequence of streams and packets. We show how our measurement
results and traffic models can be used to generate traffic flows in
private Tor networks and how our models are more realistic than
standard and alternative network traffic generation methods.
ACM Reference Format:
Rob Jansen, Matthew Traudt, and Nicholas Hopper. 2018. Privacy-Preserving
Dynamic Learning of Tor Network Traffic. In 2018 ACM SIGSAC Conference
on Computer and Communications Security (CCS ’18), October 15–19, 2018,
Toronto, ON, Canada. ACM, New York, NY, USA, 18 pages. https://doi.org/
10.1145/3243734.3243815
1 INTRODUCTION
Tor [11] is the most popular anonymous communication system
ever deployed. As of May 2018, the Tor network consists of over six
thousand volunteer relays that collectively forward over 100 Gbit of
traffic per second from over two million daily users [37]. Tor helps
its diverse set of users, ranging from regular Internet users to jour-
nalists and digital activists to law enforcement and governments,
stay safe while browsing the web and communicating online. To
achieve unlinkability of communication, Tor clients multiplex all
application streams over long-lived circuits of three independently
chosen and globally distributed relays. No single point on this path
can determine both the communication source and destination.
Tor is also an open-source research and development platform:
researchers can analyze Tor’s design and can experiment with
novel anonymous communication algorithms and protocols by
changing the source code. Experiments with Tor modifications,
however, should be conducted without harming the privacy or
Publication rights licensed to ACM. ACM acknowledges that this contribution was
authored or co-authored by an employee, contractor or affiliate of the United States
government. As such, the Government retains a nonexclusive, royalty-free right to
publish or reproduce this article, or to allow others to do so, for Government purposes
only.
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Copyright held by the owner/author(s). Publication rights licensed to the
Association for Computing Machinery.
ACM ISBN 978-1-4503-5693-0/18/10...$15.00
https://doi.org/10.1145/3243734.3243815
anonymity of Tor users.1 Although this safety requirement had
originally limited the applicability of research results to the real
world, Tor experimentation tools have been developed [6, 24] and
have become a popular means [46] of better understanding how
changes to Tor’s path selection [1, 5, 10, 33, 34, 43, 45, 51, 53] load
balancing [18, 21, 25, 27, 32, 40] traffic admission control [3, 17,
19, 23, 29, 36, 54] congestion control [2, 16] and denial of service
mechanisms [9, 20, 31, 44] affect Tor performance and security [4].
While Tor experimentation tools have significantly enhanced
the state of Tor research, the relevance of the results they produce
depends on the accuracy of the network traffic models used during
experimentation. Previous models of Tor clients have generally
been limited to single file “web” (320 KiB) and “bulk” (5 MiB) down-
loaders based on relatively dated measurement studies of ethical
concern [8, 39]. Although there has been some limited effort to
compare network characteristics in experimental Tor networks to
reality [22, 23, 51], these comparisons have completely disregarded
potentially important Tor network characteristics such as the num-
ber of circuits and their distribution across relays and clients, the
number of streams and their distribution across circuits, and the dis-
tribution of download sizes across streams. As a result, the efficacy
of synthetic Tor network traffic models remains largely unknown.
In this paper, we make four major and significant primary con-
tributions that will have immediate impact on Tor security and
performance research.
Measuring Tor. First, we conduct a large and detailed measure-
ment study of Tor. We use a recent privacy-preserving measurement
tool called PrivCount [26] and 17 relays representing roughly two
percent of Tor’s bandwidth capacity [37] to repeatedly measure
various Tor client and network characteristics over 3 months. Our
study provides a deep analysis of Tor traffic, including the number
of active and inactive clients, the number of active and inactive
circuits and their distribution per client, the number and types of
streams and their distribution per circuit, and the number of in-
bound and outbound bytes and their distribution per stream. We
expect these measurements to be useful not only for producing
accurate Tor traffic models, but also for gaining a more thorough
general understanding of Tor and its usage.
Learning Tor Traffic. Second, we design novel techniques for
dynamically but safely learning Tor traffic models using hidden
Markov modeling (HMM). We extend the PrivCount measurement
tool [26] to support our techniques and use it on our relays to
iteratively measure (i.e., train) Tor packet and stream models over a
period of 3 months. We evaluate our models and find that, although
Tor traffic is highly variable over short timescales, our best model
instances fit Tor traffic reasonably well. Our models can be used
to generate streams on a circuit and packets on a stream using
standard probability distribution generation techniques.
1https://research.torproject.org/safetyboard.html
Session 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1944Building Traffic Models. Third, we design and develop a set of
modeling semantics and a traffic generation tool called TGen that
can be used to create arbitrarily complex patterns of behavior; TGen
enables configurable control over the creation of TCP connections
and the size, schedule, and duration of packet streams. We describe
two new client models: one based on the most common protocols
used on Tor (i.e., HTTP and BitTorrent [8, 26, 39]), and one that
uses our Tor measurement results and HMM stream and packet
models as the basis for traffic generation. Our models are relevant
across a range of Tor experimentation tools and research topics.
Evaluating Traffic Models. Fourth, we conduct the first known
evaluation of the accuracy of Tor traffic models using a private
Tor network deployment of 2,000 relays and up to 60,000 clients in
Shadow [24]. First, we update Shadow’s outdated Internet model,
collecting 1.6 million latency measurements using 1,813 globally
distributed vantage points and using them to create a Shadow la-
tency model based on city-pairs. Then, we evaluate multiple traffic
models in Shadow: we configure Tor to export PrivCount events,
tally the events using a local PrivCount deployment, and compare
the results to our ground truth measurements of Tor traffic. We
find that the Tor client model that utilizes our traffic models yields
a network whose characteristics are closest to those we measured
in Tor: the single file model is inaccurate in the distribution of
bytes per stream, the protocol (i.e., HTTP and BitTorrent) model
is inaccurate in the distribution of streams per circuit, and both
models produce fewer clients, circuits, and bytes than Tor and our
HMM-based model.
Impact. Our Tor measurements and improved traffic models fa-
cilitate the meaningful exploration of open Tor research problems.
First, our results will improve research conducted using general-
purpose packet-level Tor experimentation tools [6, 24]. For example,
the evaluation of the efficacy of proposed Tor load balancing algo-
rithms [43] will be more meaningful when the background traffic
(e.g., the number and distribution of circuits, streams, and packets)
in a Tor test network is more realistic (i.e., more similar to condi-
tions in the public Tor network). Second, our results will improve
research that utilizes higher-level Tor flow or circuit simulations
that run over long simulated timescales. For example, proposed
secure bandwidth measurement algorithms [32, 48] have benefited
from experiments that involve many iterations of full network mea-
surement in order to measure feedback effects and the time to reach
steady state. These simulations can use our models as generators to
ensure an accurate distribution of flows over arbitrary timescales.
The changes to PrivCount and Shadow that were necessary to
carry out this research (to measure and make use of our models)
have been contributed to the open-source community and have
been merged into the PrivCount2 and Shadow3 projects. Further-
more, we have released our PrivCount measurement data, TGen
HMM models, and Shadow experimentation models (including our
updated Internet latency model as well as our private Tor network
Shadow configurations) so that researchers and developers can
benefit from our work.4
2https://github.com/privcount
3https://github.com/shadow
4https://tmodel-ccs2018.github.io
2 METHODOLOGY
We describe our measurement methodology in this section while
our measurement results will be presented in Sections 3 and 4.
2.1 Measurement Goals
A primary goal of this paper is to better understand Tor traffic and
its characteristics so that we can more accurately generate traffic in
private Tor networks and simulators like Shadow [24]. We conduct
a large Tor measurement study to help us achieve this goal. We
focus our measurements on overlay network-based statistics that
can also be measured in private Tor networks, including distribu-
tions of bytes per stream, streams per circuit, and circuits per client.
Although some related statistics were previously reported [26], we
update and expand previous measurements in order to: (i) cap-
ture the latest state of a growing Tor network; (ii) improve upon
the accuracy of the previous measurement study; (iii) collect new
statistics that are missing from previously reported results.
2.2 Measurement Apparatus
We measure Tor using multiple Tor relays as vantage points. Be-
cause user privacy and security of the measurement process are
primary concerns in our study, we collect our measurements using
a privacy-preserving distributed measurement system [26].
2.2.1 PrivCount Overview. PrivCount is an open-source privacy-
preserving distributed measurement system [26] that is based on
the secret-sharing variant of PrivEx [13]. PrivCount utilizes differ-
ential privacy [12] and secure aggregation in order to safely collect
measurements across a set of Tor relays.
PrivCount consists of a tally server (TS), one or more share keep-
ers (SKs), and one or more data collectors (DCs). The TS functions
as a central but untrusted proxy that is used to facilitate commu-
nication between the SKs and DCs. The operator of a PrivCount
deployment uses the TS to configure various global measurement
settings, such as which statistics the DCs should collect and when
they should start collecting. Each of the DCs extracts events from
a Tor relay and counts their frequency in order to measure the
various statistics that were configured by the TS operator. For each
such statistic, each DC initializes a local counter by adding noise
according to privacy parameters ϵ and δ, and also “blinds” the local
counter by adding a random blinding value. The random blinding
value is then secret-shared to each SK so that it can later be removed
from the global count (i.e., the sum of all DC local counts). Each SK
then combines the blinding values from all DCs for a given counter
in order to prevent anyone from learning individual DC inputs.
At the end of the measurement phase, each SK sends its summed
blinding value and each DC sends its local, noisy event count to
the TS; the TS sums the counts and removes the blinding values to
obtain the global, noisy count.
The final global count value released by the TS is protected under
(ϵ, δ)-differential privacy [12] because of the noise that is added by
the DCs. The blinding values provide for secure aggregation of a
measurement across all relays: as long as at least one SK is honest
and secure, no one learns the individual contributions of any of
the DCs to the final global count value. The blinding values also
provide forward privacy for each DC: any compromise of a DC will
Session 10A: TORCCS’18, October 15-19, 2018, Toronto, ON, Canada1945Table 1: Action Bounds in PrivCount Deployment
Action
Simultaneously open entry connections
Time each entry connection is open
New circuits
New streams
File Sharing, Other streams
Bytes transferred
l
a
r
e
n
e
G
M New circuits
New streams
M
H
Bytes transferred
Bound
1
24 Hrs.
144
9,000
80
10 MiB
1
31
2 MiB
Figure 1: A simplified view of the 17 Tor relays (11 entry, 6
exit) and 21 PrivCount nodes (17 DCs, 3 SKs, and 1 TS) used
in our deployment. See Table 2 for the total weights of our
entry and exit relays during the periods in which they were
used to collect measurements.
not leak the number of counter increments that occurred before the
time of compromise. Jansen and Johnson provide further PrivCount
details and proofs of security and privacy [26].
2.2.2 PrivCount Deployment. We set up a PrivCount deploy-
ment with 1 tally server, 3 share keepers, and 17 data collectors
each connecting to a distinct Tor relay (we ran 6 exit and 11 non-exit
relays). An overview of our deployment is shown in Figure 1. The
PrivCount nodes and the Tor relays were run by 3 different opera-
tors in 3 different countries: Canada, France, and the United States.
We ran the latest versions of PrivCount and PrivCount-supported
Tor5 as of the time of this writing.6
A primary goal of our measurement study was to improve upon
the accuracy of previously reported PrivCount measurement results,
which included measurement error of over 25% in many cases [26].
To help reduce error and obtain a more representative sample of
Tor traffic, we increased the sampling rate of traffic that is observed
by the measurement system: we ran 17 high bandwidth relays with