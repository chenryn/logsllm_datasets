title:Tracking Ransomware End-to-end
author:Danny Yuxing Huang and
Maxwell Matthaios Aliapoulios and
Vector Guo Li and
Luca Invernizzi and
Elie Bursztein and
Kylie McRoberts and
Jonathan Levin and
Kirill Levchenko and
Alex C. Snoeren and
Damon McCoy
2018 IEEE Symposium on Security and Privacy
Tracking Ransomware End-to-end
Danny Yuxing Huang1, Maxwell Matthaios Aliapoulios2, Vector Guo Li3
Luca Invernizzi4, Kylie McRoberts4, Elie Bursztein4, Jonathan Levin5
Kirill Levchenko3, Alex C. Snoeren3, Damon McCoy2
1 Princeton University
2 New York University
3 University of California, San Diego
4 Google Inc
5 Chainalysis
Abstract—Ransomware is a type of malware that encrypts the
ﬁles of infected hosts and demands payment, often in a crypto-
currency such as Bitcoin. In this paper, we create a measurement
framework that we use to perform a large-scale,
two-year,
end-to-end measurement of ransomware payments, victims, and
operators. By combining an array of data sources, including
ransomware binaries, seed ransom payments, victim telemetry
from infections, and a large database of Bitcoin addresses
annotated with their owners, we sketch the outlines of this
burgeoning ecosystem and associated third-party infrastructure.
In particular, we trace the ﬁnancial
from the
moment victims acquire bitcoins, to when ransomware operators
cash them out. We ﬁnd that many ransomware operators cashed
out using BTC-e, a now-defunct Bitcoin exchange. In total we
are able to track over $16 million in likely ransom payments
made by 19,750 potential victims during a two-year period. While
our study focuses on ransomware, our methods are potentially
applicable to other cybercriminal operations that have similarly
adopted Bitcoin as their payment channel.
transactions,
I. INTRODUCTION
Ransomware is a type of malware that encrypts a victim’s
documents and media, and then urges payment for their
decryption. In its beginnings, ransoms were demanded via
a collection of online cash-equivalent payment instruments,
such as MoneyPak, Paysafecard, or UKash [1]. From the
ransomware operators’ perspective,
these instruments have
undesirable properties: their limited geographic availability
shrinks the paying-victim pool, and they are run by companies
subject
them into
reversing transactions or tracking the ransom recipients.
law, which might compel
to the local
To overcome these drawbacks, the operators of many major
ransomware families have adopted Bitcoin. This cryptocur-
rency poses challenges to law enforcement, as it is decen-
tralized, largely unregulated, and all parties in a transaction
are hidden behind pseudo-anonymous identities. Moreover,
all transactions are irreversible, and it is widely available for
victims to purchase. Due to these properties, Bitcoin has also
gained adoption as a payment method for other illicit activities,
such as drug markets [2], online sex ads [3], and DDoS-for-
hire services [4].
However, Bitcoin has a property that is undesirable to cyber-
criminals: all transactions are public by design. This enables
researchers,
through transaction clustering and tracing [5],
[6], [7], to glean at the ﬁnancial inner workings of entire
cybercriminal operations. Before Bitcoin, these insights had
to be only partial and infrequent, as they hinged on sporadic
data leaks [8], [9], [10].
© 2018, Danny Yuxing Huang. Under license to IEEE.
DOI 10.1109/SP.2018.00047
618
In this paper, we perform a large-scale, two-year measure-
ment study of ransomware payments, victims, and operators.
While prior studies have estimated the revenue for a single
ransomware operation [6] or reverse engineered the technical
inner works of particular ransomware binaries [11], [12], our
study is the ﬁrst to perform an end-to-end analysis of a large
portion of the ransomware ecosystem, including its revenue,
afﬁliate schemes, and infrastructure.
To do so, we combine multiple data sources, including
labeled ransomware binaries, victims’ ransom payments, vic-
tim telemetry (collected through an IP sinkhole we deploy),
and a large database of Bitcoin addresses annotated with
their owners (provided by Chainalysis1). This wealth of data
allows us to follow the money trail from the moment a victim
acquires bitcoins, to when the ransomware operators cash them
out. In total, we establish a lower-bound estimate on ransom
payments’ volume of $16 million USD, made by 19,750
potential victims over two years.
The bitcoin-trail allows us to determine the likely geo-
graphic locations of paying victims, which we corroborated
with the collected telemetry of a large ransomware campaign.
We ﬁnd that South Koreans likely paid over $2.5 million USD
in ransoms to the Cerber ransomware family, which is 34%
of the total Cerber’s revenue we tracked. Our measurements
indicate that South Koreans were also likely disproportionately
impacted by other ransomware campaigns. This calls for fur-
ther studies on why this region is disproportionately impacted,
and what can be done to better protect it.
We also ﬁnd that ransomware operators strongly preferred to
cash out their bitcoins at BTC-e, a Russian Bitcoin exchange
that converted bitcoins to ﬁat currencies. This exchange has
now been seized.
Finally, we describe some unique ethical issues that we
faced during our study and limit possible interventions against
ransomware campaigns. For example, any disruption of the
payment infrastructure can result in both the victim’s inability
to access their data and an increased ﬁnancial burden, as
ransom amounts increase with time in many families.
In summary, our main contributions are as follows. (1)
We develop a set of methodologies that enable an end-to-
end analysis of the ransomware ecosystem. (2) We conduct a
two-year measurement study of the ecosystem, conservatively
1Chainalysis is a proprietary online tool that facilitates the tracking of
Bitcoin transactions by annotating Bitcoin addresses with potential owners.
See https://www.chainalysis.com/.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
estimating that ransomware operators have collected over $16
million USD in ransoms from 19,750 potential victims. We
also identify that BTC-e, a Russian-operated Bitcoin exchange
(now seized by US law enforcement) appeared to be a key
cash out point for ransomware operators. (3) We discuss
possible intervention points, open challenges in ransomware
measurement, and unique ethical issues speciﬁc to ransomware
research.
II. BACKGROUND
In this section, we describe the timeline of the archetypal
ransomware infection, from malware delivery to ransom cash
out.
Delivery: Ransomware is distributed through a variety of
vectors, much like generic malware. For instance, Cerber
and Locky were also spread via malicious email attach-
ments [13], [14], while Karma partly relied on pay-per-install
networks [15]. More recent families, such as WannaCry and
NotPetya, exploited known vulnerabilities in network services
to propagate within a LAN [16].
Execution: Once a ransomware binary executes on a host,
it silently encrypts a set of ﬁles ﬁles deemed valuable to the
user, such as documents and images. When the encryption
completes, the ransomware displays a ransom note on the
host’s screen, informing the user that those ﬁles are held for
ransom, payable in bitcoins.
Payment: A ransom note usually includes a guide on how
to purchase bitcoins from exchanges, online services that
facilitate the conversion between Bitcoin and ﬁat currencies.
Exchanges come in different ﬂavors: they can operate globally
(e.g., Paxful), or regionally (e.g., Coinbase, which only caters
to a US clientele). Most exchanges are centralized, except from
a handful that facilitate direct transactions between buyers and
sellers (e.g., LocalBitcoin).
Furthermore, ransom notes include either ransom addresses,
Bitcoin wallets victims are expected to pay into, or a link to
a payment website which displays this address. Many ran-
somware families (e.g., Locky and Cerber) generate a unique
ransom address for each victim to automate the identiﬁcation
of paying victims, whereas others reuse addresses for multiple
victims (e.g., WannaCry and CryptoDefense). When addresses
are reused, ransomware operators cannot discriminate paying
victims, so they either require the victim to send them the
payment transaction hash (a veriﬁcation mechanism suscepti-
ble to abuse, as all transactions are public), or they simply do
not decrypt the victim’s ﬁles (e.g., WannaCry [17]). Ransom
amounts are typically ﬁxed, denominated in US dollars (e.g,
$1,000 for some Cerber strains [11]) or Bitcoins (e.g., 0.5
BTC for some Locky strains [18]). A notable exception is
Spora [19], where the estimated value of each victim’s ﬁles is
factored into the ransom.
Decryption: Once the payment has been conﬁrmed, ran-
somware either automatically decrypts the ﬁles held for ran-
som, or it instructs the victim to download and execute a
decryption binary.
Liquidation: To cash out their proceeds, ransomware opera-
tors often deposit their bitcoins into a wallet controlled by an
exchange to trade them for ﬁat currencies. As law enforcement
agencies might compel exchanges into disclosing the identity
of their clients, some operators ﬁrst deposit their bitcoins into
mixers, services that obfuscate bitcoin trails by intermixing
bitcoin ﬂows from multiple sources.
III. DISCOVERING RANSOM DEPOSIT ADDRESSES
The Bitcoin blockchain is a public sequence of times-
tamped transactions that involve wallet addresses, which are
basically pseudo-anonymous identities. To discern transactions
attributable to ransom campaigns, we design a methodology
to trace known-victim payments (this section), cluster them
with previously-unknown victims (Sections IV-A, and IV-B),
estimate potentially missing payments (Section IV-E), ﬁlter
transactions to discard the ones that are likely not attributable
to ransom payments (Section IV-F). We show results of these
methods in Section V, where we estimate the revenue of
different ransomware families and characterize their ﬁnancial
activities.
Our payment
tracking pipeline begins with methods to
discover seed addresses — ransom addresses associated with
a small number of known ransomware victims. Two sources
provide us with a list of seed ransom addresses: real victims
who reported ransomware infection [7], [6]; and our method
of generating synthetic victims, where we extract ransom
addresses by executing the ransomware binaries in a controlled
environment — effectively becoming the infection “victims”
ourselves.
A. Real Victims
To ﬁnd real victims, we automatically scrape reports of
ransomware infection in public forums, such as Bleeping Com-
puter. These reports typically contain screenshots or excerpts
of ransom notes, from which we extract the seed ransom
addresses via text or image analysis. In addition, we obtain
a list of seed ransom addresses from proprietary sources such
as ID Ransomware, which maintains a record of ransomware
victims and the associated ransom addresses [20].
B. Synthetic Victims
However, infection reports from real, paying victims are
hard to come by. For example, we were initially unable to ﬁnd
any real victim infection reports which contained the ransom
addresses for several families, such as Cerber and Locky.2
To extend our coverage, we complement real victims with
synthetic victims.
Using a technique that we will discuss in Section IV-E, we
ﬁrst obtain the binaries of Cerber and Locky from VirusTo-
2We selected Cerber and Locky based on media reports indicating that they
were actively infecting large numbers of victims [13], [14].
619
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
tal.3 We execute a subset of the ransomware binaries from
each family on four independent platforms: VmRay [21],
a hypervisor-based commercial sandbox; a VMware-based
commercial sandbox; Cuckoo, an open-source sandbox that
runs on VirtualBox virtual machines (VMs); and Windows XP
on a bare-metal machine. We opt for these diverse platforms
to mitigate potential anti-VM and anti-sandbox techniques in
some variants of Cerber and Locky.
We execute each malware sample for up to twenty minutes,
and then we collect the memory dump (in the case of VM ex-
ecutions), created ﬁles, and screenshots, from which to extract
Bitcoin wallet addresses. We do not have any false positives,
since Bitcoin wallet addresses have 32 bits of error-checking
code. We also extract the visible text from screenshots through
a commercial OCR provider [22], and process the output
through the same extraction pipeline in order to obtain the
ransom addresses.
C. Summary of Results
Using the method in Section III-A, we have collected
25 seed ransom addresses from actual victims across 8
ransomware families: CoinVault, CryptXXX, CryptoDefense,
CryptoLocker, CryptoWall, Dharma, Spora, and WannaCry.
In addition, we apply the method in Section III-B and
obtain 32 seed ransom addresses (8 of which from bare-
metal infections) for synthetic Cerber infections, and 28 seed
ransom addresses (3 of which from bare-metal infections) for
synthetic Locky infections. As we will discuss in Section IV-B,
anyone of Cerber’s addresses was sufﬁcient to discover the
additional addresses that Cerber uses;
likewise, anyone of
Locky’s addresses was sufﬁcient.
IV. DISCOVERING ADDITIONAL RANSOM ADDRESSES
The seed ransom addresses obtained in Section III are
associated with a small number of known victims, both real
and synthetic. For families such as WannaCry, existing reports
suggest that victims from multiple infections are shown the
same ransom addresses [17]. Thus, the seed addresses them-
selves are sufﬁcient for us to identify both known and potential
victims,4 and we can proceed with estimating the ransomware
revenue.
In contrast, families such as Locky, Cerber, and Spora gen-
erate unique ransom addresses for every infection, a fact that is
corroborated by prior research [19], vetted proprietary sources,
and by our binary executions (Section III-B). On their own,
these seed ransom addresses do not reveal any information
about other potential victims. Any bitcoins received by each
seed ransom address is likely associated with only a single
victim that was provided with that seed ransom address.
3We also obtained binaries of the Sage ransomware, but as we will
discussion in Section IV-B, micropayments to Sage’s ransom addresses did not
result in subsequent bitcoin transfers, so we excluded Sage from our analysis.
4We refer to any victims whom we do not know a priori as potential or
likely victims (as opposed to real or known victims that we know from ground
truth). Absent ground truth, we are uncertain that they are actual victims of
ransomware infections.
Such unique ransom addresses motivate the need to expand
our analysis beyond the seed addresses and identify additional
addresses that are likely to be associated with ransomware
activities. In this section, we describe a new method that is
based on clustering and micropayments to discover additional
ransom addresses.
A. Clustering by Co-spending
Even though we have a relatively small number of seed
ransom addresses, we can infer payment activities of other
potential victims by discovering wallet addresses that co-spent
with the seed addresses. Two wallet addresses are known to be
co-spent if they are used as the input to the same transaction.
In non-CoinJoin transactions [23], we assume that an entity
that creates a transaction has access to the private keys of
all the input wallet addresses in the transaction [24], and
that the entity is in control of all the input addresses. We
call this assumption the co-spending heuristic, which we use
to recursively look for addresses that co-spent with the seed
ransom addresses, and also addresses that co-spent with the
seed ransom addresses’ co-spending addresses [7], [6], [5].
In this way, we construct a cluster of wallet addresses.
Every address in the cluster, which we shall refer to as
cluster address, is presumably under the control of the same
ransomware family. These cluster addresses include the seed
ransom addresses; ransom addresses to which likely victims
made ransom payments (which we cannot validate as coming
from actual victims absent ground-truth); and wallet addresses
that a ransomware family uses for internal book-keeping (e.g.,
aggregating ransom payments). For a given family, if we have
multiple seed ransom addresses, it is possible that each of them
may be in a disjoint cluster (likely because no two addresses
from different clusters were ever co-spent). Since we know
that the seed ransom addresses all belong to the same family,
we manually merge the disjoint clusters into a single cluster,
which we subsequently refer to as the ransomware’s cluster.
the clustering technique does not apply
to CoinJoin transactions [23], which violate the co-spending
heuristic. The sender of a CoinJoin transaction does not have
access to the private keys of the input wallet addresses. Effec-
tively, two addresses that are co-spent in the same CoinJoin
transaction cannot be clustered together. To detect CoinJoin
transactions in our clustering, we apply a set of heuristics [25]
using BlockSci [26]. We ﬁnd no CoinJoin transactions in our
clusters, although there is still a possibility that the heuristics
might have failed to detect some CoinJoin transactions. We
will mitigate this problem in Section IV-F by proposing and
evaluating ﬁltering techniques.
We stress that
B. Augmenting Clustering with Micropayments
The construction of clusters uses the co-spending heuristic,
which requires that bitcoins are spent from the seed addresses.
However, for synthetic victims whose ransom addresses are
unique to individual victims (e.g., Cerber and Locky), the
addresses are not associated with any Bitcoin payments. As
such, there is no co-spending.
620
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
&HUEHU¶V&OXVWHUH[SDQGHG
TABLE I: Ransomware clusters.
L/RFN\
/RFN\¶V&OXVWHU
LL&HUEHU
V\QWKHWLF
YLFWLP
V\QWKHWLF
YLFWLP
SRWHQWLDO
YLFWLP
VHHGUDQVRP
DGGU
VHHGUDQVRP
DGGU

FOXVWHU
DGGU
FOXVWHU
DGGU
V\QWKHWLF
YLFWLP
V\QWKHWLF
YLFWLP
SRWHQWLDO
YLFWLP
VHHGUDQVRP
DGGU
VHHGUDQVRP
DGGU

FOXVWHU
DGGU
,QIORZ
2XWIORZ
/LN
/LNHO\UDQVRPDGGU
/LN
/LNHO\DJJUHJDWLRQDGGU



([FKDQJH¶V
&OXVWHU
FOXVWHU
DGGU
8QNQRZQ&OXVWHU
FOXVWHU
DGGU
RULJLQDO
DJJUHJDWLRQ
DGGU
DJJUHJDWLRQ
DGGU

FOXVWHU
DGGU
FOXVWHU
DGGU
Family
Cerber
CoinVault