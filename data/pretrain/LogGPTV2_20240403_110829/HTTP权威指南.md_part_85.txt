X-Serial-Number
X-Serial-Number首部是个扩展首部。某些较老的HTTP应用程序会用它向HTTP
报文中插入许可软件的序列号。
它基本上已经没什么用处了，它只是作为X开头的首部的一个示例列在这里。
类型 扩展通用首部
基本语法 X-Serial-Number: serialno
532 举例 X-Serial-Number: 010014056
556 ｜ 附录C
附录D
类型
MIME
557
MIME媒体类型（简称为MIME类型）是描述报文实体主体内容的一些标准化名称
（比如，text/html、image/jpeg）。本附录说明了MIME类型是怎样工作的、如何注
册新的名字以及到哪里去查找更多的相关信息。
本附录还包含了10张便捷表格，详细描述了从全球众多资源中搜集来的数百种
MIME类型。这可能是有史以来最详细的MIME类型列表。希望这些表格会对你有所
帮助。
此附录的主要内容有：
• 在D.1节列出主要的参考资料；
• 在D.2节解释MIME类型的结构；
• 在D.3节说明了如何注册MIME类型；
• 附加的10张表格让你更便捷地查找MIME类型。
本附录包含了下列MIME类型表：
• application/*——表D-3
• audio/*——表D-4
• chemical/*——表D-5
• image/*——表D-6
• message/*——表D-7
• model/*——表D-8
• multipart/*——表D-9
• text/*——表D-10
533 • video/*——表D-11
• 其他——表D-12
D.1 背景知识
MIME类型最初是为多媒体电子邮件而开发的，但目前在HTTP和其他几种需要描
述数据对象格式和用途的协议中也使用了MIME类型。
MIME主要由下列5份文档定义。
• RFC 2045，“MIME: Format of Internet Message Bodies”（“MIME：因特网报文
主体的格式”）
描述了MIME报文结构的概况，并介绍了HTTP借用的Content-Type首部。
• RFC 2046，“MIME: Media Types”（“MIME：媒体类型”）
558 ｜ 附录D
介绍了MIME类型及其结构。
• RFC 2047，“MIME: Message Header Extensions for Non-ASCII Text”（“MIME：
非ASCII文本的报文首部扩展”）
定义了一些在首部包含非ASCII字符的方式。
• RFC 2048，“MIME: Registration Procedures”（“MIME：注册过程”）
定义了如何向因特网号码分配机构（“Internet Assigned Numbers Authority，IA-
NA”）注册MIME值。
• RFC 2049，“MIME: Conformance Criteria and Examples”（“MIME：一致性标准及实例”）
详细介绍了一致性规则，并提供了一些实例。
根据HTTP的目标，我们最感兴趣的文档是RFC 2046和RFC 2048。
D.2 MIME类型结构
每种MIME媒体类型都包含类型、子类型和可选参数的列表。类型和子类型由一个
斜杠分隔，如果有可选参数的话，则以分号开始。在HTTP中，MIME媒体类型被
广泛用于Content-Type和Accept首部。下面是几个例子：
Content-Type: video/quicktime
Content-Type: text/html; charset="iso-8859-6"
Content-Type: multipart/mixed; boundary=gc0p4Jq0M2Yt08j34c0p
Accept: image/gif
D.2.1 离散类型
MIME类型可以直接用于描述对象类型，也可以用于描述其他对象类型的集合或类
型包。如果直接用MIME类型来描述某个对象类型，它就是一种离散类型（discrete
type）。其中包括文本文件、视频和应用程序特有的文件格式。
D.2.2 复合类型
如果MIME类型描述的是其他内容的集合或封装包，这种MIME类型就被称为复合
类型（composite type）。复合类型描述的是封装包的格式。将封装包打开时，其中 534
包含的每个对象都会有其各自的类型。
D.2.3 多部分类型
多部分媒体类型是复合类型。多部分对象包含多个组件类型。下面是一个多部分/
混合内容实例，每个组件都有自己的MIME类型：
MIME类型 ｜ 559
Content-Type: multipart/mixed; boundary=unique-boundary-1
--unique-boundary-1
Content-type: text/plain; charset=US-ASCII
Hi there, I'm some boring ASCII text...
--unique-boundary-1
Content-Type: multipart/parallel; boundary=unique-boundary-2
--unique-boundary-2
Content-Type: audio/basic
... 8000 Hz single-channel mu-law-format
audio data goes here ...
--unique-boundary-2
Content-Type: image/jpeg
... image data goes here ...
--unique-boundary-2--
--unique-boundary-1
Content-type: text/enriched
This is enriched.
as defined in RFC 1896
Isn't it cool?
--unique-boundary-1
Content-Type: message/rfc822
From: (mailbox in US-ASCII)
To: (address in US-ASCII)
Subject: (subject in US-ASCII)
Content-Type: Text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: Quoted-printable
... Additional text in ISO-8859-1 goes here ...
535 --unique-boundary-1--
D.2.4 语法
如前所述，MIME类型由主类型、子类型和可选参数的列表组成。
主类型可以是预定义类型、IETF定义的扩展标记，或者（以“x-”开头的）实
验性标记。表D-1列出了一些常见的主类型。
560 ｜ 附录D
表D-1 常见的主MIME类型
类 型 描 述
application 应用程序特有的内容格式（离散类型）
audio 音频格式（离散类型）
chemical 化学数据集（离散IETF扩展类型）
image 图片格式（离散类型）
message 报文格式（复合类型）
model 三维模型格式（离散IETF扩展类型）
multipart 多部分对象集合（复合类型）
text 文本格式（离散类型）
video 视频电影格式（离散类型）
子类型可以是主类型（比如，“text/text”）、IANA注册的子类型，或者是（以“x-”
开头的）实验性扩展标记。
类型和子类型都是由US-ASCII字符的一个子集构成的。空格和某些保留分组以及
标点符号称为“tspecials”，它们是控制字符，不能用于类型和子类型名。
RFC 2046定义的语法如下所示：
TYPE := "application" | "audio" | "image" | "message" | "multipart" |
"text" | "video" | IETF-TOKEN | X-TOKEN
SUBTYPE := IANA-SUBTOKEN | IETF-TOKEN | X-TOKEN
IETF-TOKEN := 
IANA-SUBTOKEN := 
X-TOKEN := 
PARAMETER := TOKEN "=" VALUE
VALUE := TOKEN / QUOTED-STRING
TOKEN := 1*
TSPECIALS := "(" | ")" | "" | "@" |
"," | ";" | ":" | "\" |  |
"/" | "[" | "]" | "?" | "=" 536
D.3 在IANA注册MIME类型
RFC 2048描述了MIME媒体类型的注册过程。使用注册过程的目的不仅能简化注
册新媒体类型的过程，而且还能提供一些完整性检测，以确保新类型是经过深思熟
虑后提出的。
MIME类型 ｜ 561
D.3.1 注册树
MIME类型标记被分成了4类，称为“注册树”，每一类都有自己的注册规则。表
D-2描述了这4棵树——IETF、厂商、个人和实验性的树。
表D-2 4种MIME媒体类型注册树
注 册 树 举 例 描 述
IETF text/html（HTML文本） IETF树用于那些对因特网来说具有普遍意义的类
型。新的IETF树媒体类型要由因特网工程指导组
（Internet Engineering Steering Group，IESG） 审
批，并且要有一个附属的标准追踪RFC。
IETF树类型标记中没有句点（.）
厂商（vnd.） image/vnd.fpx 厂商树用于可商用产品的媒体类型。鼓励大家进
（柯达的FlashPix图片 ） 行新厂商类型的公开评审，但并不强制这么做。
厂商树类型以vnd.开头
个人/不重要的（prs.） image/prs.btif 私有、个人或不重要的媒体类型可以注册在个人
（美国国家银行使用的内 树中。这些媒体类型不应该进行商业化发布。
部检查管理格式） 个人数类型以prs.开头
实验性（x-或x.） application/x-tar 实验树用于未注册或实验性的媒体类型。由于注
（Unix的tar档案） 册新的厂商或个人媒体类型的过程相对简单，所
以不应该广泛地发布使用x-类型的软件。
实验树类型以x.或x-开头
D.3.2 注册过程
关于MIME媒体类型的注册过程请仔细阅读RFC 2048。
基本的注册过程并不是官方的标准过程，只是一个管理过程，目的是在尽短时间内，
就能通过IANA对新类型的完整性检查，将其记录在注册表中。这个过程遵循下列
步骤。
（1）将媒体类型提交给IANA审阅。
向PI:EMAIL邮件列表发送一封媒体类型注册建议书，审阅期为两周。
发布公告，征求公众对名字、互操作性和安全问题的反馈意见。在注册完成之
537 前，都可以使用RFC 2045中指定的前缀x-。
（2）IESG审批（仅对IETF树而言）
如果要将媒体类型注册到IETF树中去，就必须提交给IESG审批，而且必须有
一个附加的标准追踪RFC。
562 ｜ 附录D
（3）IANA注册
只要媒体类型达到了审批要求，作者就可以通过例D-1中的电子邮件模板向
IANA提交注册请求，并将注册信息发送到PI:EMAIL。IANA会注册
媒体类型，在 http://www.isi.edu/in-notes/iana/assignments/media-types/ 上向公
众提供该媒体类型应用程序。
D3.3 注册规则
只有在响应IESG批准某指定注册申请的通知时，IANA才能在IETF树中注册媒体
类型。
只要满足下面这些条件，IANA就会自动注册厂商和个人类型，不需要进行任何正
式的审查。
（1） 媒体类型一定要像实际的媒体格式一样工作。像传输编码或字符集那样工作的
类型是不能注册为媒体类型的。
（2） 所有媒体类型都要有适当的类型和子类型名。所有类型名都要由标准追踪RFC
定义。所有子类型名都必须是唯一的，必须与那类名称的MIME语法相符，而
且必须包含恰当的树前缀。
（3）个人树类型必须提供格式规范或指向格式规范的指针。
（4）不要忽略安全问题。所有开发因特网软件的人都要为防范安全漏洞作出贡献。
D.3.4 注册模板
实际的IANA注册是通过电子邮件完成的。可以用例D-1中显示的模板来完成注册
表格，并将其发送到PI:EMAIL。1
例D-1 IANA的MIME注册电子邮件模板
To: PI:EMAIL
Subject: Registration of MIME media type XXX/YYY
MIME media type name: 538
注1： 这个格式没有很严格的结构，稍做调整并不会影响信息阅读，但由机器处理则比较困难。这就是很难
找到一份可读的、经过良好组织的MIME类型小结的原因之一，这也是我们在本附录末尾创建那些
表格的原因。
MIME类型 ｜ 563
MIME subtype name:
Required parameters:
Optional parameters: