    `/etc/dconf/db/local.d/)`{.filename} 中的覆盖应用
    [**dconf**]{.application}
    来设置默认背景。想要了解更多有关默认值和覆盖设置的信息，请参见〈[第 9.5 节
    "设置自定义默认值"](#configuration-overview-gsettings-dconf.html#custom-default-values-system-settings){.xref}〉。
    :::
[锁定设置]{.term}
:   ::: para
    "`dconf`{.systemitem}"系统现在允许锁定个人或者整个设置子路径，来防止用户自定义。更多如何锁定设置的信息，请参见〈[第 9.5.1 节
    "锁定特定设置"](#configuration-overview-gsettings-dconf.html#lock-down-specific-settings){.xref}〉。
    :::
[NFS 和 dconf]{.term}
:   ::: para
    使用在家目录中通过"`NFS`{.systemitem}"共享的"`dconf`{.systemitem}"实用程序，需要进行额外的设置。有关本专题的信息，请参见〈[第 9.7 节
    "存储用户设置于
    NFS"](#configuration-overview-gsettings-dconf.html#store-user-settings-over-nfs){.xref}〉。
    :::
:::
::: section
::: titlepage
# [⁠]{#gsettings-dconf.html#gsettings-dconf-get-more-information}3.1. 获取更多信息 {.title}
:::
::: para
更多如何使用 [**GSettings**]{.application}
和"`dconf`{.systemitem}"配置用户设置的信息，请参见〈[第 9 章 *用
GSettings 和 dconf
来配置桌面*](#configuration-overview-gsettings-dconf.html){.xref}〉。
:::
:::
:::
[]{#policykit.html}
::: chapter
::: titlepage
# [⁠]{#policykit.html#policykit}第 4 章 PolicyKit {.title}
:::
::: para
"`PolicyKit`{.systemitem}"实用工具是一个框架，它提供了一个为无特权程序
[*subjects*]{.emphasis}
提供服务的特权程序（[*mechanisms*]{.emphasis}）使用的授权
API。"`PolicyKit`{.systemitem}"的相关变化或者它的系统名称"`polkit`{.systemitem}"所历经的细节改变如下。
:::
::: section
::: titlepage
# [⁠]{#policykit.html#policy-configuration}4.1. 策略配置 {.title}
:::
::: para
就这些新的特点而言，它们的授权规则现在是在 [*JavaScript
.rules*]{.emphasis}
文件中定义的。这就意味着同样的文件被用来同时定义规则以及管理员状态。这些信息之前被储存在两个不同的文件类型---`*.pkla`{.filename}
和 `*.conf`{.filename} 中，它们通过使用键值对，来定义额外的本地授权。
:::
::: para
这些新的 [*.rules*]{.emphasis}
文件储存在两个位置；但是本地配置的"`polkit`{.systemitem}"规则是储存在
`/etc/polkit-1/rules.d/`{.filename} 目录下的，第三方软件包则储存在
`/usr/share/polkit-1/rules.d/`{.filename} 中的。
:::
::: para
目前的 `.conf`{.filename} 和 `.pkla`{.filename} 配置文件与 .rules
文件保存在一起，并同时存在。考虑到兼容性的问题，红帽企业版 Linux 7
中的"`polkit`{.systemitem}"进行了升级。
:::
::: para
规则的逻辑优先级也发生了变化。"`polkitd`{.systemitem}"现在按照字母顺序从
`/etc/polkit-1/rules.d`{.filename} 和
`/usr/share/polkit-1/rules.d`{.filename} 目录中读取 .rules
文件。如果有两个名字相同的文件，相较于 `/usr`{.filename}
中的文件，`/etc`{.filename}
中的文件则将优先进行处理。除此之外，`/etc/polkit-1/rules.d/49-polkit-pkla-compat.rules`{.filename}
文件应用现有规则。因此，只要文件名在字母顺序中排在 49-polkit-pkla-compat
之前，它们就可以由 .rules 在`/usr`{.filename} 或者 `/etc`{.filename}
中重写。确定您的旧规则没被改写的最简单的方法就是命名所有其它 .rules
时，起始数字都大于49。
:::
::: para
以下是一个 .rules 文件的例子。它为 [*storage*]{.emphasis}
群组创建了一个允许在系统设备中安装文件系统的规则。这个规则存储在
`/etc/polkit-1/rules.d/10-enable-mount.rules`{.filename} 文件中：
:::
::: example
[⁠]{#policykit.html#policykit-rules-mounting-file-system}
**例 4.1. 允许在系统设备中安装文件系统**
::: example-contents
``` programlisting
​
​polkit.addRule(function(action, subject) {
​    if (action.id == "org.freedesktop.udisks2.filesystem-mount-system" &&
​        subject.isInGroup("storage")) {
​        return polkit.Result.YES;
​    }
​});
```
:::
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
**更多信息请参见：**
-   ::: para
    `polkit`{.command}(8) -- 描述 JavaScript 规则和优先规则的手册页。
    :::
-   ::: para
    `pkla-admin-identities`{.command}(8) 和
    `pkla-check-authorization`{.command}(8) -- 分别是 `.conf`{.filename}
    和 `.pkla`{.filename} 文件格式的资料说明手册页。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#policykit.html#default-policy}4.2. 默认策略 {.title}
:::
::: para
默认设置现在允许 [*wheel*]{.emphasis}
组的成员使用它们自己的口令而不用请求 [*root*]{.emphasis}
口令来对管理操作进行身份验证。默认策略被定义在
`/etc/polkit-1/rules.d/50-default.rules`{.filename} 中。
:::
::: para
在 GNOME Setting
的用户面板中，您可以为"[**管理员**]{.guilabel}"配置一个账户。当您第一次在
[**GNOME 初始设置**]{.application}
中创建用户时，在默认情况下，您会创建一个"[**管理员**]{.guilabel}"账户（wheel
组的一员）。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
当"`sudo`{.systemitem}"用户被允许使用其他用户的安全权限去运行程序时，"[**管理员**]{.guilabel}"将成为
wheel 组的一员去提供额外授权用户执行受限命令的特殊系统权限。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#policykit.html#checking-permissions-from-scripts}4.3. 脚本语言的检查权限 {.title}
:::
::: para
检查一个程序是否被授权操作的"`pkcheck`{.systemitem}"实用工具，现在为
`----process`{.option}
选项提供新选项，以新的参数来指定程序，从而使命令更加安全。新格式如下所示：
``` synopsis
 --process pid,start-time,uid 
```
:::
::: para
`--process`{.option}
选项本身并不是新的，只有它的参数是新的：*pid*、*start_time*，和 *uid*
可使用确切的值进行替换。在 `pkcheck`{.command}(1)
手册页提及的其它值依然存在，但被认为是不安全的。
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
调用"`pkcheck`{.systemitem}"的脚本语言需要使用新格式，来避免竞争条件的出现。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#policykit.html#extending-polkit-configuration}4.4. 扩展 polkit 配置 {.title}
:::
::: para
替换后端授权实现的支持已被删除。可以通过编写一个 JavaScript
`.rules`{.filename} 文件，来调用外部程序从而达到类似的作用。
:::
::: para
红帽企业版 Linux 7
的"`polkit`{.systemitem}"取消了对替换"`PolkitBackendActionLookup`{.systemitem}"实现（用来为验证对话框提供数据的界面）的支持。
:::
::: para
更多关于"`polkit`{.systemitem}"的信息，请参见
`polkit`{.command}（8）手册页。
:::
:::
:::
[]{#GDM.html}
::: chapter
::: titlepage
# [⁠]{#GDM.html#GDM}第 5 章 GDM {.title}
:::
::: para
"`GDM`{.systemitem}"是"`GNOME 显示管理器`{.systemitem}"，它提供了一个图形登录环境。在
GNOME 2 向 GNOME 3
的过渡之后，只有通过"`systemd`{.systemitem}"才可以设置"`GDM`{.systemitem}"，因为
GNOME 3 不再支持其他初始化系统。
:::
::: variablelist
[gdm 软件包]{.term}
:   ::: para
    [gdm]{.package} 软件包取代了 [xorg-x11-xdm]{.package} 软件包，它为 X
    Window 系统提供了旧版的显示登录管理器。如前所述，[gdm]{.package}
    软件包提供了图形登录屏幕，它在启动、登出，和用户切换不久之后则会显示。
    :::
[GDM 和 logind]{.term}
:   ::: para
    "`GDM`{.systemitem}"现在使用"`logind`{.systemitem}"来定义和追踪用户。更多相关信息，请参见〈[第 2 章
    *logind*](#logind.html){.xref} 〉。系统管理员也可以在 GDM
    自定义配置文件 `/etc/gdm/custom.conf`{.filename}
    中手动设置自动登录。
    :::
[custom.conf]{.term}
:   ::: para
    GDM 设置现在可以在文件 `/etc/gdm/custom.conf`{.filename}
    中找到。但就反向兼容性而言，一旦发现
    `/etc/gdm/custom.conf`{.filename}
    文件的话，`custom.conf`{.filename}文件就会被它取代。升级时，红帽建议您移除旧的
    `gdm.conf`{.filename} 文件并将所有的自定义设置迁移到
    `custom.conf`{.filename} 文件中。
    :::
:::
::: section
::: titlepage
# [⁠]{#GDM.html#gdm-get-more-information}5.1. 获取更多信息 {.title}
:::
::: para
更多关于"`GDM`{.systemitem}"的信息，请参见〈[第 14.1 节 "何为
GDM？"](#session-management.html#what-is-GDM){.xref}〉。
:::
::: para
更多关于设置和管理用户会话的信息，请参见〈[第 14.3 节
"用户会话"](#session-management.html#user-sessions){.xref}〉。
:::
::: para
更多关于自定义登录屏幕外观的信息，请参见〈 [第 10.5 节
"自定义登录屏幕"](#default-appearance.html#customizing-login-screen){.xref}〉。
:::
:::
:::
[]{#migrating-GNOME-shell-extensions.html}
::: chapter
::: titlepage
# [⁠]{#migrating-GNOME-shell-extensions.html#migrating-GNOME-shell-extensions}第 6 章 GNOME Shell 扩展 {.title}
:::
::: para
红帽 Linux 7 企业版中的 GNOME Shell 不支持在红帽 Linux 5 和 6
企业版中用来自定义 GNOME 2 默认界面的小应用程序。GNOME 3
将小应用程序替换成了 *GNOME Shell 扩展*。此扩展可以更改 GNOME Shell
的默认界面，以及一些诸如窗口管理和程序启动的部分。
:::
::: section
::: titlepage
# [⁠]{#migrating-GNOME-shell-extensions.html#extensions-international-clock-applet}6.1. 时钟小程序的置换 {.title}
:::
::: para
红帽 Linux 5 和 6 企业版的 GNOME 2 的特点是 [**时钟**]{.application}
小应用程序，它在 GNOME 2 面板上提供对日期、时间和日历功能的访问。在红帽
Linux 7 企业版中，[**时钟**]{.application} 是由 [gnome-clocks]{.package}
软件包提供的，并替代了之前的那个小应用程序。用户可以通过点击 GNOME Shell
顶部菜单栏中的日历，选择
"[**打开时钟**]{.guimenuitem}"，从而对时钟进行访问。
:::
::: figure
[⁠]{#migrating-GNOME-shell-extensions.html#clock-applet-fig}
::: figure-contents
::: mediaobject
![打开时钟](images/clock-applet-screenshot.png)
:::
:::
**图 6.1. 打开时钟**
:::
::: section
::: titlepage
## [⁠]{#migrating-GNOME-shell-extensions.html#extensions-getting-more-information}6.1.1. 获取更多信息 {.title}
:::
::: para
更多关于 GNOME Shell
扩展是什么，及如何对它们进行设置管理的信息，请参见〈[第 11.1 节 " GNOME
Shell 扩展是什么？"](#GNOME-shell-extensions.html#extensions){.xref}〉。
:::
:::
:::
:::
[]{#gnome-session.html}
::: chapter
::: titlepage
# [⁠]{#gnome-session.html#gnome-session}第 7 章 gnome-session {.title}
:::
::: para
红帽企业版 Linux 7
中的"`gnome-session`{.systemitem}"程序也进行了升级。它与之前启动 GNOME
桌面的方式一样，但它的某些部分发生了变化。
:::
::: variablelist
[gnome-session-properties]{.term}
:   ::: para
    [**gnome-session-properties**]{.application} 应用依然是
    [gnome-session]{.package}
    软件包的一部分。但是，它的功能被限制为，为个人用户管理启动程序，以及在登出时保存当前运行的应用程序。后者在红帽企业版
    Linux 6 中保留了下来。
    :::
[被命名的会话]{.term}
:   ::: para
    "[**现在保存**]{.guibutton}"键能够在特定时间保存会话，并为之命名。保存的会话在登录时恢复。您在
    [**gnome-会话-特性**]{.application}
    中点击"[**登出时自动记住正在运行的程序**]{.guibutton}"后，保存的应用列表也会在登录时显示出来。
    :::
    ::: para
    有了这项更新，就可以创建多个布局并进行重命名，或者为一个用户账号选择多个用户会话。