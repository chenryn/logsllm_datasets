# Title: PASTA: Password-based Threshold Authentication

## Authors:
- Shashank Agrawal
- Peihan Miao
- Payman Mohassel
- Pratyay Mukherjee

## Publication Details:
- **Journal**: Advanced Materials Research Vols. 143-144 (2011)
- **Pages**: 915-919
- **Online Availability**: Since October 28, 2010, at [www.scientific.net](http://www.scientific.net)
- **Publisher**: Trans Tech Publications, Switzerland
- **DOI**: 10.4028/www.scientific.net/AMR.143-144.915
- **Copyright**: © 2011 Trans Tech Publications, Switzerland. All rights reserved. No part of the contents of this paper may be reproduced or transmitted in any form or by any means without the written permission of TTP, [www.ttp.net](http://www.ttp.net). (ID: 129.93.24.73, University of Nebraska-Lincoln, Lincoln, USA-18/03/15, 03:15:53)

## Abstract
Password authentication mechanisms are widely used in networks to protect resources from unauthorized access. Ad hoc networks, due to their dynamic and infrastructure-less nature, require robust authentication schemes to ensure security. In this paper, we propose a new threshold password authentication scheme for ad hoc networks. Our scheme can be efficiently implemented on mobile devices and achieves mutual authentication with registered users.

## Introduction
Ad hoc networks, which are constructed by a group of mobile devices without using any network infrastructure, are suitable for military or emergency uses. However, they pose significant security challenges, such as unauthorized access, due to their flexibility and lack of secure infrastructure. Password authentication schemes are the simplest and most convenient methods to protect against unauthorized access in network environments. Despite numerous proposed schemes, many suffer from security shortcomings that make them unsuitable for ad hoc networks.

In 1981, Lamport introduced the first well-known password authentication scheme, but it was vulnerable to modification and stolen-verifier attacks. In 2000, Hwang and Li proposed a new remote user authentication scheme to address these weaknesses, but it did not allow users to freely choose their passwords. Yang and Shieh later presented a timestamp-based password authentication scheme that allowed users to update their passwords while keeping the remote server from storing passwords or verification tables. However, their scheme was susceptible to online guessing attacks.

In 2007, Chai et al. proposed a threshold password authentication scheme that met both availability and strong security requirements for mobile ad hoc networks. Their scheme allowed t out of n servers to jointly achieve mutual authentication with a registered user through two rounds of message exchanges. Users could choose and change their passwords freely. However, Li demonstrated that their scheme was vulnerable to passive attacks.

In this paper, we propose a new threshold password authentication scheme for ad hoc networks. Our scheme is efficient to implement on mobile devices and can achieve mutual authentication with registered users. It is resistant to guessing and replay attacks and does not require a password table.

## Preliminaries
### One-way Hash Function and Discrete Logarithm Problem
Let \( h \) be a one-way hash function. Given \( x \), it is easy to compute \( y = h(x) \), but given \( y \), it is infeasible to find \( x \) such that \( y = h(x) \). Let \( g \) be a generator of \( \mathbb{Z}_p^* \), where \( p \) is a large prime. The security of our proposed scheme is based on the difficulty of inverting a one-way hash function and solving the discrete logarithm problem.

### Shamir’s Secret Sharing Scheme
Shamir's \((t, n)\) secret sharing scheme is a well-known mechanism for key management. In this scheme, a dealer shares a secret \( x \) among \( n \) servers \(\{S_1, S_2, \ldots, S_n\}\) such that given at least \( t \) shares, the secret \( x \) can be recovered, while less than \( t \) shares reveal no information about \( x \).

#### Secret Sharing Phase
- The dealer selects a secret \( x \) (\( x < p \)) and a random polynomial \( f \) of degree \( t-1 \) over \( \mathbb{Z}_p^* \) such that \( f(0) = x \).
- The dealer computes and sends the share \( f(i) \mod p \) to each server \( S_i \) through a secure channel.

#### Secret Reconstruction Phase
- At least \( t \) servers release their shares \( x_i \) to the dealer.
- The dealer recovers the secret \( x \) using Lagrange interpolation:
  \[
  x = \sum_{i \in \Omega} L_i f(i) \mod p,
  \]
  where \( \Omega \subseteq \{1, 2, \ldots, n\} \) and \( |\Omega| \geq t \), and \( L_i \) are the Lagrange coefficients.

### Notations
- \( U \): A user who joins the authentication protocol.
- \( ID \): User’s identity.
- \( PW \): User’s password.
- \( S \): A collection of \( n \) remote servers, \( S = \{S_1, S_2, \ldots, S_n\} \).
- \( n \): The number of all the servers in \( S \).
- \( t \): The minimal size requirement of a group of servers to perform authentication.
- \( S_i \): A server in \( S \), \( i \in \{1, 2, \ldots, n\} \).
- \( x \): The secret shared among all the remote servers in \( S \).
- \( x_i \): The secret share held by \( S_i \).
- \( q \): A large prime.
- \( p \): A large prime such that \( p = 2q + 1 \).
- \( T \): A timestamp.
- \( h(\cdot) \): A public secure one-way hash function.
- \( \Omega \): An index set of a random subgroup of \( S \) with the size of \( t \).
- \( L_i \): The Lagrange coefficients, \( L_i = \prod_{j \in \Omega, j \neq i} \frac{j}{j - i} \).
- \( || \): Concatenation symbol.

## The New Threshold Password Authentication Scheme
Our scheme consists of three phases: registration, login, and authentication.

### Registration Phase
1. A new user \( U \) submits his identity \( ID \) and shadowed password \( h(PW) \) to the collection of remote servers \( S \) through a secure channel.
2. After confirming the identity \( ID \), each server \( S_i \) computes and sends \( B_i = h(ID) x_i \mod p \) to the dealer.
3. The dealer computes:
   \[
   \beta = \prod_{i \in \Omega} (h(PW) + B_i) L_i.
   \]
   Note that \( \beta = h(h(PW) + h(ID)) \).
4. The dealer issues a ticket \( (h, q, p, ID, \beta) \) to \( U \) through a secure channel. The user stores the ticket in his/her login device.

### Login Phase
1. When \( U \) wants to log in to \( S \), he/she inputs his \( ID \) and \( PW \) into his/her login device.
2. The login device:
   - Selects a random number \( r \in \mathbb{Z}_p^* \) and picks up the current timestamp \( T \).
   - Computes \( B = \beta - h(PW) \mod p \). Note that \( B = h(ID) x \).
   - Computes \( E = r B \mod p \). Note that \( E = r h(ID) x \).
   - Computes \( D = h(r ID) \mod p \).
   - Computes \( F = E \cdot B \mod p \) and \( C = h(T || F) \).
   - Sends the login request message \( M = (ID, T, D, C) \) to \( S \).

### Authentication Phase
1. Upon receiving the request message, each server \( S_i \):
   - Checks the validity of \( ID \) and timestamp \( T \). If they are incorrect or not within a suitable time interval, the login request is rejected.
   - Computes and sends \( F_i' = x_i L_i \cdot F \mod p \) to the dealer. Note that \( F_i' = r h(ID) x L_i \).
2. The dealer collects all \( F_i' \) and computes:
   \[
   F' = \prod_{i \in \Omega} F_i'.
   \]
   Note that \( F' = r h(ID) x \).
3. The dealer checks whether the equation \( C = h(T || F') \) holds. If it does not hold, the request is rejected; otherwise, the login request is accepted.
4. The dealer computes \( C' = h(T' || F') \) and sends \( (ID, T', C') \) back to \( U \), where \( T' \) is the new timestamp of the dealer.
5. Upon receiving the message \( (T', C', ID) \), the login device:
   - Checks the validity of \( ID \) and \( T' \).
   - Checks whether the equation \( C' = h(T' || F') \) holds.
   - If valid, mutual authentication between \( U \) and \( S \) is established; otherwise, the login device may restart a new login phase.

## Security Analysis
- **Insider Impersonate Attack**: Each server knows \( F' = r h(ID) x \) after the authentication phase, but cannot distinguish \( r h(ID) \) or \( h(ID) \) from \( F' \). Therefore, the user's secret remains undisclosed.
- **Guessing Attack**: An adversary cannot find \( h(ID) \) from intercepted messages because they cannot distinguish \( x_i L_i h(ID) \) from \( F_i' \).
- **Replay Attack**: The use of timestamps ensures that old messages cannot be reused.

## Summary
Password authentication is a well-known mechanism to protect resources from unauthorized access. However, many existing schemes have security risks, making them unsuitable for ad hoc networks. In this paper, we proposed a new threshold password authentication scheme for ad hoc networks. This scheme allows \( t \) out of \( n \) servers to jointly achieve mutual authentication with users while resisting impersonate, guessing, and replay attacks. Additionally, the scheme does not require a password table.

## References
[1] Z. Chai, Z. Cao, and R. Lu, "Threshold password authentication against guessing attacks in ad hoc networks," *Ad Hoc Networks*, Vol.5 (2007), pp.1046-1054. doi:10.1016/j.adhoc.2006.05.003

[5] H.Y. Chien, J. Jan, Y. Tseng, "An efficient and practical solution to remote authentication: smart card," *Computer & Security*, No.21, Vol.4 (2002), pp.372–375. doi:10.1016/S0167-4048(02)00415-7

[6] M.L. Das, A. Saxena, V.P. Gulati, "A dynamic ID-based remote user authentication scheme," *IEEE Transactions on Consumer Electronics*, No.50, Vol.2 (2004), pp.629–631. doi:10.1109/TCE.2004.1309441

[7] T. ElGamal, "A public key cryptosystem and a signature scheme based on discrete logarithms," *IEEE Transactions on Information Theory*, Vol.31 (1985), pp.469–472. doi:10.1109/TIT.1985.1057074

[10] T. Kwon, J. Song, "Efficient and secure password-based authentication protocols against guessing attacks," *Computer Communications*, Vol.21 (1998), pp.853–861. doi:10.1016/S0140-3664(98)00153-4

[11] L. Lamport, "Password authentication with insecure communication," *Communication of ACM*, No.24, Vol.11 (1981), pp.770–772. doi:10.1145/358790.358797

[12] S.W. Lee, H.S. Kim, K.Y. Yoo, "Improvement of Chien et al.’s remote user authentication scheme using smart cards," *Computer Standards and Interfaces*, Vol.27 (2005), pp.181–183.