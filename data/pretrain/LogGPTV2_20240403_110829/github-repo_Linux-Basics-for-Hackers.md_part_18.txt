从屏幕上的完整输出可以看到，**shred**命令有许多选项。其最基本的形式，语法是简单的:
shred \
就其本身而言，**shred**将删除文件并多次覆盖它——默认情况下，**shred**将覆盖4次。通常，文件被覆盖的次数越多，恢复起来就越困难，但是请记住，每次覆盖都需要时间，因此对于非常大的文件，碎片化可能会很耗时。
要包括两个有用的选项，一个是**-f**选项，它更改文件的权限，以便在需要更改权限时允许覆盖；另一个是**-n**选项，它允许您选择覆盖文件的次数。例如，我们将使用以下命令将/var/log/auth.log中的日志文件分解覆盖**10**次:
kali \>shred -f -n 10 /var/log/auth.log.\*
我们需要**-f**选项来允许我们碎片化auth文件，然后我们按照**-n**选项指定要覆盖的次数。在我们要碎片化的文件的路径之后，我们包含通配符星号，因此我们不仅要碎片化auth.log文件，还要覆盖使用**logrotate**创建的所有日志，比如auth.log.1，auth.log.2，以此类推。
现在尝试打开一个日志文件:
kali \>leafpad /var/log/auth.log.1
一旦您覆盖了一个文件，您将看到其中的内容是难以理解的乱码，如图11-1所示。
![](media/d2233519049faa800f2d17b70a2b0c49.jpg)
*图11-1:覆盖的日志文件*
现在，如果安全工程师或取证调查员检查日志文件，他们将发现没有任何用处，因为没有一个是可恢复的！
#### *禁用日志记录*
另一个覆盖跟踪的选项是禁用日志记录。当黑客控制了一个系统，他们可以立即禁用日志，以防止系统跟踪他们的活动。当然，这需要**root**特权。
要禁用所有日志记录，黑客只需停止**rsyslog**守护进程。停止Linux中的任何服务使用相同的语法，如下所示(您将在第2章中了解更多)：
service servicename start\|stop\|restart
因此，要停止日志守护进程，只需输入以下命令:
kali \>service rsyslog stop
现在Linux将停止生成任何日志文件，直到服务重新启动，使您能够在日志文件中不留下任何证据的情况下进行操作！
### 总结
日志文件几乎跟踪Linux系统上发生的所有事情。在试图分析发生了什么，无论是故障还是黑客攻击时，它们都是非常宝贵的资源。对于黑客来说，日志文件可以作为他们活动和身份的证据。
然而，精明的黑客可以删除和覆盖这些文件，并完全禁用日志记录，因此不会留下任何证据。
12
--
熟练使用服务
------------
USING AND ABUSING SERVICES
![](media/451fdbee142e8cd4684d71b24707d050.jpg)
在Linux术语中，服务是在后台运行的应用程序，等待您使用它。您的Linux系统预装了许多服务。其中最著名的是无处不在的Apache
Web
Server，它用于创建，管理和部署Web服务器，还有更多。出于本章关于服务的目的，我只选择了对黑客特别重要的四个：Apache
Web Server，OpenSSH，MySQL和PostgreSQL。
在本章中，您将学习如何使用Apache设置web服务器、使用OpenSSH进行物理监视、使用MySQL访问数据以及使用PostgreSQL存储黑客信息。
### 启动、停止和重新启动服务
在开始使用这四个关键的服务之前，让我们先研究一下如何在Linux中启动、停止和重新启动服务。
有些服务可以通过Kali
Linux中的GUI停止和启动，就像在Windows或Mac这样的操作系统上一样。下面是管理服务的基本语法:
service servicename start\|stop\|restart
要启动**apache2**服务（Web服务器或HTTP服务），请输入以下内容：
kali \>service apache2 start
要停止Apache Web服务器，请输入：
kali \>service apache2 stop
通常，当您通过更改其纯文本配置文件对应用程序或服务进行配置更改时，需要重新启动该服务以捕获新配置。因此，您可以输入以下内容：
kali \>service apache2 restart
既然您已经了解了如何从命令行启动，停止和重新启动服务，那么让我们继续讨论针对黑客的四个最关键的Linux服务。
### 使用APACHE Web服务器创建HTTP Web服务器
Apache Web
Server可能是Linux系统上最常用的服务。Apache在全球60％以上的Web服务器上都可以找到，因此任何自重的Linux管理员都应该熟悉它。作为一个渴望破解网站的黑客，了解Apache，网站和这些网站的后端数据库的内部工作方式至关重要。您还可以使用Apache设置自己的Web服务器，您可以通过网站脚本（XSS）向访问您网站的任何人提供恶意软件，或者您可以通过滥用域名克隆网站并将流量重定向到您的网站名称系统（DNS）。
在任何一种情况下，都需要Apache的基本知识。
#### *从Apache开始*
如果您的系统上运行了Kali，则已安装Apache。许多其他Linux发行版也默认安装它。如果您没有安装Apache，可以通过输入以下命令从存储库下载并安装它：
kali \>apt-get install apache2
Apache Web
Server通常与MySQL数据库相关联（我们将在下一节中讨论），这两种服务通常与脚本语言（如Perl或PHP）配对以开发Web应用程序。Linux，Apache，MySQL和PHP或Perl的这种组合形成了一个强大而强大的平台，用于开发和部署基于Web的应用程序，统称为LAMP。这些是用于在Linux世界中开发网站的最广泛使用的工具
- 它们在微软世界中也很受欢迎，它们通常被称为WAMP，W代表Windows。
当然，第一步是启动我们的Apache守护进程。在Kali中，转到应用程序▸服务▸HTTPD（Applications
▸ Services ▸ HTTPD）并单击Apache
start。您可以通过输入以下命令从命令行完成相同的操作：
kali \>services apache2 start
现在Apache正在运行，它应该能够提供其默认网页。 在您喜欢的Web浏览器中输入http://
localhost /以显示网页，该网页应类似于图12-1。
![](media/78966166364fa333ab0a0ade1814d1ff.jpg)
*图12­1: Apache2 Web Server 默认页*
如您所见，Apache将“**It works**”显示为其默认网页。现在你知道你的Apache
Web服务器正在运行，让我们来自定义它吧！
#### *编辑index.html文件*
Apache的默认网页位于/var/www/html/index.html。您可以编辑index.html文件以提供您想要的任何信息，所以让我们创建自己的信息。为此，您可以使用任何文本编辑器，我将使用Leafpad打开/var/www/html/index.html，你会看到类似于列表12-1的信息。
![](media/7175e9c9b79109178504fe8bf9a03d66.png)
*清单12­1: Apache Web Server 的index.html页面*
请注意，默认网页是我们将浏览器打开到localhost时显示的文本，默认格式为➊。我们需要做的就是编辑或替换此文件，让我们的Web服务器显示我们想要的信息。
#### *添加HTML*
现在我们已启动并运行Web服务器并打开index.html文件，我们可以添加我们希望Web服务器提供的任何文本。我们将创建一些简单的HTML模块。
我们来创建这个页面。在文本编辑器的新文件中，输入清单12-2中显示的代码。
\
\
\Hackers­Arise Is the Best! \
\ If you want to learn hacking, Hackers­Arise.com \
\ is the best place to learn hacking!\
\
\
*清单12­2:一些简单的HTML添加到index.html*
完全按照清单12-2中的内容输入文本后，将此文件另存为/var/www/html/index.html并关闭文本编辑器。
然后，您的文本编辑器将提示您该文件已存在，没关系，只需覆盖现有的/var/www/html/index.html文件即可。
#### *看会发生什么*
保存了我们的/var/www/html/index.html文件后，我们可以查看Apache将提供的服务。再次浏览浏览器到http://
localhost，您应该会看到类似于图12-2的内容。
![](media/0a8f549c27999dde99385077b044f218.jpg)
*图12-2：新的HackersArise网站*
Apache就像我们创建它一样提供了我们的网页！
### OPENSSH和树莓派
SSH是Secure Shell的首字母缩写，它基本上使我们能够安全地连接到远程系统上的终端 -
这是多年前常见的不安全telnet的替代品。当我们构建Web服务器时，SSH使我们能够创建访问列表（可以使用此服务的用户列表），使用加密密码对用户进行身份验证，以及加密所有通信。这减少了不需要的用户使用远程终端的机会（由于添加的认证过程）或拦截我们的通信（由于加密）。可能最广泛使用的Linux
SSH服务是OpenSSH，它几乎安装在所有Linux发行版上，包括Kali。
系统管理员经常使用SSH来管理远程系统，而黑客经常使用SSH连接到受感染的远程系统，所以我们在这里也会这样做。在这个例子中，我们使用SSH设置一个远程Raspberry
Pi系统进行间谍活动，我称之为“Raspberry Spy Pi”。为此，你需要一个Raspberry
Pi和随之而来的Raspberry Pi相机模块。
不过，在我们这样做之前，使用现在熟悉的命令在您的Kali系统上启动OpenSSH：
kali \>service ssh start
我们将使用SSH来构建和控制远程间谍Raspberry Pi。如果您还不熟悉它，Raspberry
Pi是一款小巧但功能强大的信用卡大小的计算机，可作为远程监视工具使用。我们将使用带有相机模块的Raspberry
Pi作为远程间谍设备。您可以以低于50美元的价格购买几乎所有电子产品零售商（包括亚马逊）的Raspberry
Pi，您可以以15美元的价格购买相机模块。
在这里，我们将在与Kali系统相同的网络上使用Raspberry Spy
Pi，这允许我们使用私有的内部IP地址。当然，在现实世界中进行黑客攻击时，您可能希望将其设置在另一个远程网络上，但这将难以触及本书的范围。
#### *设置Raspberry Pi*
确保您的Raspberry Pi正在运行Raspbian操作系统，这只是另一个专门为Raspberry Pi
CPU移植的Linux发行版。您可以在https://www.raspberrypi.org/downloads/raspbian/找到Raspbian的下载和安装说明。您在本书中学到的几乎所有内容都适用于Raspberry
Pi上的Raspbian OS以及Kali，Ubuntu和其他Linux发行版。
下载并安装Raspbian操作系统后，您需要将Raspberry
Pi连接到显示器，鼠标和键盘，然后将其连接到互联网。如果这对您来说是全新的，请查看https://www.raspberrypi.org/learning/hardwareguide/上的说明。
设置好所有内容后，使用用户名pi和密码raspberry登录。
#### *构建Raspberry Spy Pi*
第一步是确保在Raspberry Spy
Pi上运行并启用SSH。默认情况下，SSH通常是关闭的，因此要启用它，请转到“首选项”菜单并启动Raspberry
Pi配置。然后转到**Interfaces**选项卡，在**SSH**旁边，单击**Enabled**（如果尚未选中），然后单击**OK**。
启用SSH后，您可以通过打开终端并输入以下内容在Raspberry Spy Pi上启动它：
kali \>service ssh start
接下来，您需要连接相机模块。如果你使用的是Raspberry
Pi版本3的板，那么只有一个地方可以连接它。关闭Pi，将模块连接到相机端口，然后重新打开。请注意，相机非常脆弱，绝不能与通用输入/输出（GPIO）引脚接触，否则，它可能会短路并烧坏。
现在，在SSH服务启动并运行的情况下，将Raspberry Spy
Pi放置在您家，学校或您想要监视的其他位置的某个位置。当然，它必须通过以太网电缆或理想情况下通过WiFi连接到局域网。（新的Raspberry
Pi 3和Raspberry Pi Zero都内置了WiFi。）
现在，您需要获取Raspberry
Pi的IP地址。正如您在第3章中学到的，您可以使用**ifconfig**获取Linux设备的IP地址：
pi \>ifconfig
我的Pi的IP地址是**192.168.1.101**，但请确保您使用的是Raspberry Spy
Pi的IP地址，无论我的地址出现在本章的哪个位置。现在，从您的Kali系统，您应该能够直接连接并控制您的Raspberry
Spy Pi并将其用作远程间谍系统。在这个简单的示例中，您的系统需要与Pi在同一网络上。
要从Kali系统通过SSH连接到远程Raspberry Spy
Pi，请输入以下内容，记住使用您自己的Pi的IP地址：
kali \>ssh pi\@192.168.1.101
pi\@192.168.1.101's password:
The programs included with the Debian GNU/Linux system are free software; the
exact distribution terms for each program are described in the
individual files in /usr/share/doc/\*/copyright.
Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, the extent permitted by
applicable law
last login: Tues Jan. 1 12:01:01 2018
pi\@raspberyypi:: \$