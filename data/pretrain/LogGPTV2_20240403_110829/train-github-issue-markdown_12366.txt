When some libraries get ahold of a Promise, they don't always add an
`onFulfilled` handler, and they don't always add an `onRejected` handler using
`.catch()`. Sometimes it looks like this:
`.then(undefined, onError)`
which is perfectly valid. I just experienced this error because GraphQL.js
does this, for example: https://github.com/graphql/graphql-
js/blob/85bfd13b5c63b4896d7643f8cd37a4f918fc5261/src/execution/execute.js#L369
But, `SameLoopPromise` always assumes that `onFulfilled` (`onResult` in its
case) will be a function and tries to call it:
https://github.com/zeit/next.js/blob/e13bb3f62f2c26d86cfe7bc41c0dc68456964707/lib/dynamic.js#L196
  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
If no `onFulfilled` handler is passed, don't try calling it.
## Current Behavior
`TypeError: onResult is not a function`
## Steps to Reproduce (for bugs)
Return an `import()` result that another library attaches a handler to like
`.then(undefined, onError)`. In my case: write a GraphQL resolver that returns
the result of `import()`.
## Context
## Your Environment
Tech | Version  
---|---  
next | 3.2.1  
node | 8.2.1