 0
SybilLimit
SybilGuard
Mislove
Gatekeeper
ACL
 0.2
 0.4
 0.6
Recall
 0.8
 1
 1.2
Figure 8. The precision of ACL and the other algorithms on Facebook
graph with standard attack model with g = 50000 and γ = 10000.
D. Discussion
We have shown experimentally that ACL is extremely
effective at identifying the community of a given honest seed
and provided formal guarantees for the rankings it produces.
To our knowledge this is the ﬁrst time that formal guarantees
are given for a community detection algorithm in the context
of sybil defense. While we have shown that ACL can be
used to effectively solve Problem 1, in the next section we
will discover a sobering reality: all sophisticated state−of−
the−art methods based on random walks, including ACL, are
helpless against some of the simple, primitive sybil attacks
that are encountered in deployed social networks.
VII. AVOIDING THE MAGINOT SYNDROME
Our appraisal
in Section II of the resilience of dif−
ferent structural properties of social graphs indicated that
leveraging the complementary notions of mixing time and
conductance are the most promising line of defense against
sybil attacks; furthermore, techniques based on this approach
can provide impressive end−to−end guarantees. Yet one key
question remains: how effective are these techniques against
actual sybil attacks?
While data on sybil attacks in deployed social networks
is not readily available, two recent papers have included
experience reports that shed light on the types of attacks
that occur in the wild.
Cao et al. report to have successfully used SybilRank to
identify sybil users in the Tuenti social network [7]. They
observe large clusters of sybil users in regular topologies
(star, mesh,
tree, etc.) that are connected to the honest
communities through a limited number of attack edges. They
also report that an unspeciﬁed fraction of the remaining
accounts are sybil but to preserve conﬁdentiality are unable
to report on the number or characteristics of those accounts.
Yang et al.’s experience in analyzing the RenRen social
network is signiﬁcantly different [43]: they do not observe
394
any large clusters of well−connected sybil nodes in turn
connected to the honest sub−graph through a small set of
attack edges, as would be expected by the sybil defense
techniques we have surveyed; instead, they ﬁnd isolated
sybil nodes each connected to the honest sub−graph with
a large number of attack edges.
The simple attack observed in the RenRen social net−
work is devastating for conductance−based protocols. We
simulated the attack on our Facebook graph and measured
the probability that a randomly−chosen honest node be
considered more trustworthy than a randomly−chosen sybil
one by SybilLimit [45], SybilGuard [46], Mislove [39],
Gatekeeper [35], and ACL. A probability of 1 corresponds
to the ideal case in which every honest node is ranked higher
than any sybil one; a probability of 0 indicates the reverse
case; a random ranking correspond to 0.5 probability. In our
results, every protocol performs poorly: the probability is
0.45 for SybilLimit, 0.44 for SybilGuard, 0.34 for Mislove,
0.49 for Gatekeeper, and 0.37 for ACL. The vulnerability of
conductance−based techniques to an attack where each sybil
node can create more than one attack edge is fundamental,
as Yu et al. proved [45].
These experiences indicate that while today’s socially−
based sybil defenses
the
theoretically−best defense posture, they are also easily cir−
cumvented. Much like the real−life Maginot line. 6
are designed to provide
A. Defense in depth
To avoid this fate, we believe that effective sybil−defense
mechanisms should embrace a strategy inspired by the
notion of defense in depth [34]: rather than relying solely on
techniques based on conductance, they should include a port−
folio of complementary detection techniques. For example,
Yang et al. observe [43] that it is possible to spot sybil nodes
by tracking their clustering coefﬁcient (see Section II) and
the rate at which their requests of friendship are accepted,
both of which in the RenRen graph are signiﬁcantly higher
for honest nodes than for sybils (in the case of the clustering
coefﬁcient, this is because a single sybil node that randomly
issues friendship requests is unlikely to have many friends
who are themselves friends with each other). As a rule of
thumb, Yang et al. suggest to report as sybil those users
whose friendship−request acceptance rate is less than 50%
and whose clustering coefﬁcient is below 1/100. They report
that this is sufﬁcient to correctly identify more than 98% of
the sybils, with a false positive rate of less than 0.5%. Note
that, while these results sound impressive, they are not cause
for unconditional celebration, as it is quite easy for a slightly
more sophisticated adversary to circumvent both checks by
issuing friendship requests to other sybil nodes under his
control. But, at the very least, checks like these make the life
of the attacker more difﬁcult and prevent more sophisticated
6http://en.wikipedia.org/wiki/Maginot Line
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply. 
defenses to be trivially sidestepped. Indeed, they may even
nudge the attacker, whether he likes it or not, towards the
kind of attacks where conductance−based method can start to
be effective. For instance, simply introducing a defense layer
that monitors the rate of friendship acceptance introduces a
bound (albeit loose) on the conductance of the cut between
honest users and sybils.
In particular, assume that honest users accept sybil request
with probability p and that the threshold of accepted requests
below which a node is ﬂagged as sybil is T . Then the
following simple result holds (see [2] for the proof)
Proposition 3. Sybil nodes, to not be detected, must create
fewer than p 1−T
T−p of their edges as attack edges.
So, for example, if honest users accept friendship requests
with probability p = 10% and T = 50% (as in [43]), then
each sybil node must have seven links to sybil nodes for
every attack edge to avoid detection.
Proposition 3 bounds the conductance of the cut between
honest and sybil nodes in the sense that whenever the
sybil region has fewer edges than the honest region, the
conductance of the cut is at most 2p 1−T
T−p .
While this bound is loose, it is encouraging that it can be
obtained through a defense layer based on a fairly primitive
measure such as the rate of friendship acceptance. We
speculate that in the near future new defense layers based
on advanced machine−learning and proﬁling techniques [33]
will force a sybil attacker who wants to escape detection to
generate sybil regions that resemble ever more actual social
graphs, connected through a sparse cut of attack edges to
the honest portion of the graph: in other words, exactly the
scenario suitable for conductance−based sybil defense.
VIII. CONCLUSIONS
This work has traced the evolution of social sybil defenses
from the seminal work of Yu et al [46] to the developments
of the last several years [7], [10], [35], [45] to recent
reports [7], [43] that detail their usage in practice.
We have identiﬁed two main trends in the literature. The
ﬁrst is based on random walk methods whose goal is to
identify fast−mixing (sub)regions that contain the honest
seed. The implicit assumption is that social networks under
sybil attacks must exhibit a simple structure—a fast−mixing
region of honest nodes connected via a sparse cut to the sybil
region. We have seen how this initial simpliﬁed picture of
the world has progressively become more nuanced, leading
to methods based on random walks that are able to cope
with a more complex world consisting of a constellation
of tightly−knit, fast−mixing communities loosely connected
among themselves and to the sybil region.
The other trend that we have discussed considers sybil
defense as an instance of community detection. While we
have revealed the limitation of this approach, we have been
able to enucleate its core validity.
As we have shown with our discussion on Personalized
PageRank, the two approaches can go hand in hand to yield
more robust sybil defense protocols that are competitive
with the state of the art. The discussion has highlighted the
importance of the body of literature that studies foundational
issues on random walks. As we have shown, both algorithms
and useful conceptual tools can be distilled from it and
successfully deployed in the context of sybil defense.
Despite their growing mathematical sophistication, we
have also seen how sybil defense methods can perform
poorly when confronted with some real−world attacks that
exhibit a very primitive structure. We believe that
the
defense−in−depth approach that we have advocated as a
response to this challenge can be facilitated by moving
from the original vision of offering individual honest users
decentralized and universal sybil defense [45], [46] towards
defense techniques that assume that the defender has com−
plete knowledge of the social graph topology [7], [43]
and can deploy the kind of parallelizable implementations
suitable for handling the large graphs of on−line social
networks. In particular, social network operators are in a
position to use machine learning techniques, user proﬁling,
and monitoring of user activity to gain additional knowledge
that can help them ﬁlter sybil attacks not well−suited for de−
tection using techniques based on random walks, community
detection, and their combination. Still, as attackers increase
in sophistication, claims of a silver bullet should be met with
healthy skepticism. As the arms race between attackers and
defenders continues, it will be increasingly important that
new defense mechanisms clearly state the kind of attack
they aim to withstand, a landscape that too often is blurred.
ACKNOWLEDGEMENTS
We thank Bimal Viswanath and Alan Mislove for the
code of Mislove’s algorithm,Nguyen Tran for the Gatekeeper
code, and Krishna Gummadi for his comments on an early
draft. Lorenzo Alvisi is supported by the National Science
Foundation under Grant No. 0905625. Alessandro Epasto
is supported by the Google European Doctoral Fellowship
in Algorithms, 2011. Alessandro Panconesi is partially sup−
ported by a Google Faculty Research Award.
REFERENCES
[1] Dblp. http://dblp.uni−trier.de/xml/, 2011.
[2] L. Alvisi, A. Clement, A. Epasto, S. Lattanzi, and
A. Panconesi.
random walks and social
sybil defense. Technical Report TR−13−04, UTCS, 2013.
http://wwwusers.di.uniroma1.it/∼epasto/papers/sybil−tr.pdf.
Communities,
[3] R. Andersen, F. Chung, and K. Lang. Local graph partitioning
using pagerank vectors. In FOCS, 2006.
[4] S. Arora, S. Rao, and U. Vazirani. Expander ﬂows, geometric
embeddings and graph partitioning. J. ACM, 2009.
[5] A.−L. Barabasi and R. Albert. Emergence of scaling in
random networks. Science, 1999.
395
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply. 
[6] L. Bilge, T. Strufe, D. Balzarotti, and E. Kirda. All your
contacts are belong to us: Automated identity theft attacks
on social networks. In WWW, 2009.
[7] Q. Cao, M. Sirivianos, X. Yang, and T. Pregueiro. Aiding
the detection of fake accounts in large scale social online
services. In NSDI, 2012.
[8] A. Cheng and E. Friedman. Manipulability of pagerank under
sybil strategies. In NetEcon, 2006.
[9] L. Cox and B. Noble. Samsara: Honor among thieves in
peer−to−peer storage. In SOSP, 2003.
[10] G. Danezis and P. Mittal. Sybilinfer: Detecting sybil nodes
using social networks. In NDSS, 2009.
[11] J. Douceur. The sybil attack. In IPTPS, 2002.
[12] S. Fortunato.
Community detection in graphs.
abs/0906.0612, 2009.
[28] M. Richardson, R. Agrawal, and P. Domingos. Trust man−
agement for the semantic web. In ISWC, 2003.
[29] H. G.−M. Sepandar D. Kamvar, Mario T. Schlosser. The
eigentrust algorithm for reputation management in p2p net−
works. In WWW, 2003.
[30] A. Sinclair.
Improved bounds for mixing rates of markov
chains and multicommodity ﬂow. LATIN, 1992.
[31] A. Sinclair and M. Jerrum. Approximate counting, uniform
generation and rapidly mixing markov chains. Inf. Comput.,
1989.
[32] D. A. Spielman and S.−H. Teng. Nearly−linear time algorithms
for graph partitioning, graph sparsiﬁcation, and solving linear
systems. In STOC, 2004.
CoRR,
[33] T. Stein, E. Chen, and K. Mangla. Facebook immune system.
In SNS, 2011.
[13] T. H. Haveliwala.
Topic−sensitive pagerank: A context−
sensitive ranking algorithm for web search. IEEE Trans. on
Knowledge and Data Engineering, 2003.
[14] T. Leighton and S. Rao. Multicommodity max−ﬂow min−
cut theorems and their use in designing approximation algo−
rithms. J. ACM, 1999.
[15] J. Leskovec, D. Huttenlocher, and J. Kleinberg. Predicting
In
positive and negative links in online social networks.
WWW, 2010.
[16] J. Leskovec, J. Kleinberg, and C. Faloutsos. Graphs over
time: densiﬁcation laws, shrinking diameters and possible
explanations. In KDDWS, 2005.
[17] J. Leskovec, K. J. Lang, A. Dasgupta, and M. W. Mahoney.
Statistical properties of community structure in large social
and information networks. In WWW, 2008.
[18] C. Lesniewski−Laas. A sybil−proof one−hop DHT.
2010.
In SNS,
[19] C. Lesniewski−Laas and M. F. Kaashoek. Whanau: A sybil−
proof distributed hash table. In NSDI, San Jose, CA, 2010.
USENIX Association.
[20] N. Margolin and B. N. Levine. Quantifying and discouraging
sybil attacks. Technical report, UMass Amherst, 2005.
[21] A. Mislove, B. Viswanath, K. P. Gummadi, and P. Druschel.
You are who you know: Inferring user proﬁles in online social
networks. In WSDM, February 2010.
[22] A. Mohaisen, N. Hopper, and Y. Kim. Keep your friends
into social network−based sybil
close: Incorporating trust
defenses. In INFOCOM, 2011.
[23] A. Mohaisen, A. Yun, and Y. Kim. Measuring the mixing
time of social graphs. In IMC, 2010.
[24] S. Oveis Gharan and L. Trevisan. Approximating the Ex−
pansion Proﬁle and Almost Optimal Local Graph Clustering.
ArXiv e-prints, 2012.
[25] J. Pouwelse, P. Garbacki, D. Epema, and H. Sips. The bit−
torrent p2p ﬁle−sharing system: Measurements and analysis.
Peer-to-Peer Systems, 2005.
[26] D. Quercia and S. Hailes. Sybil attacks against mobile users:
friends and foes to the rescue. In INFOCOM, 2010.
[34] M. Stytz. Considering defense in depth for software applica−
tions. Security Privacy, IEEE, 2004.
[35] N. Tran, J. Li, L. Subramanian, and S. Chow. Optimal sybil−
resilient node admission control. In INFOCOM, 2011.
[36] N. Tran, B. Min, J. Li, and L. Subramanian. Sybil−resilient
online content voting. In NSDI, 2009.
[37] B. Viswanath, A. Mislove, M. Cha, and K. P. Gummadi. On
the evolution of user interaction in facebook. In WOSN, 2009.
[38] B. Viswanath, M. Mondal, A. Clement, P. Druschel, K. Gum−
madi, A. Mislove, and A. Post. Exploring the design space of
social network−based sybil defenses. In COMSNETS, 2012.
[39] B. Viswanath, A. Post, K. P. Gummadi, and A. Mislove.
In
An analysis of social network−based sybil defenses.
SIGCOMM, 2010.
[40] L. Von Ahn, M. Blum, N. Hopper, and J. Langford. Captcha:
Using hard ai problems for security. Advances in Cryptol-
ogy—EUROCRYPT 2003, 2003.
[41] D. J. Watts and S. Strogatz. Collective dynamics of ’small−
world’ networks. Nature, 339, 1998.
[42] W. Wei, F. Xu, C. C. Tan, and Q. Li. Sybildefender: Defend
against sybil attacks in large social networks. In INFOCOM,
2012.
[43] Z. Yang, C. Wilson, X. Wang, T. Gao, B. Y. Zhao, and Y. Dai.
Uncovering social network sybils in the wild. In IMC, 2011.
[44] H. Yu. Using social networks to overcome sybil attacks. ACM
SIGACT News, September 2011.
[45] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao. Sybillimit:
A near−optimal social network defense against sybil attacks.
In OAKLAND, 2008.
[46] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman. Sybil−
guard: Defending against sybil attacks via social networks.
IEEE/ACM Transactions on Networking, 2008.
[47] M.−C. Yuen, I. King, and K.−S. Leung. A survey of crowd−
sourcing systems. In IEEE Socialcom, 2011.
[48] J. O. P. Zolt´an Gyongyi, Hector Garcia−Molina. Combating
web spam with trustrank. In VLDB, 2004.
[27] Y. P. Reid Andersen.
Finding sparse cuts locally using
evolving sets. In STOC, 2009.
396
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:51:41 UTC from IEEE Xplore.  Restrictions apply.