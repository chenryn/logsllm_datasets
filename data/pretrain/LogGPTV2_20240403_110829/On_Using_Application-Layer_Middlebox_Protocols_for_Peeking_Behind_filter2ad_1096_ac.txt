### 数据概览与分析

#### 概率分布
- 51.45%
- 2.59%
- 1.78%
- 1.68%
- 1.17%

#### 数值统计
- 80
- 4,433
- 8,195
- 65,003
- 65,004

#### 唯一值
- 5,246

#### 目标子网
- 15.97% WhatsApp-preﬁxed
- 11.85%
- 11.68%
- 10.44%
- 7.21%

#### 协议分布
- libtorrent: 16.49%
- wechat voip: 13.21%
- IP+port match: 11.95% WhatsApp-preﬁxed
- HCDN: 11.45%
- galleta silenciosa: 10.47%

#### 唯一值
- 4,652

#### 协议分布
- uTorrent: 14.31%
- IP+port match: 11.32%
- 其他协议: 8.54%, 8.39%, 8.23%

#### 端口统计
- 9,308
- 6,881
- 0
- 19,132
- 3,027

#### 百分比
- 10.82%
- 10.49%
- 6.94%
- 5.88%
- 3.52%

#### 端口
- 139
- 445
- 80
- 6,881
- 0

#### 唯一值
- 60,159
- 60,822

#### 子网
- 192.168.0.0/24: 54.71%
- 192.168.1.0/24: 25.66%
- 192.168.10.0/24: 2.84%
- 10.0.0.0/24: 1.08%
- 192.168.9.0/24: 0.87%

#### 子网
- 182.161.73.0/24: 30.38%
- 43.227.116.0/24: 28.35%
- 172.217.25.0/24: 28.28%
- 216.58.197.0/24: 28.15%
- 183.111.131.0/24: 26.95%

#### 子网
- 199.217.119.0/24: 44.95%
- 200.0.0.0/24: 23.67%
- 82.163.142.0/24: 5.99%
- 144.1.0.0/24: 3.30%
- 88.2.0.0/24: 3.10%

#### 子网
- 192.168.1.0/24: 43.91%
- 192.168.0.0/24: 42.41%
- 192.168.2.0/24: 2.27%
- 192.168.10.0/24: 1.89%
- 255.255.255.0/24: 1.72%

#### 子网
- 192.168.1.0/24: 49.43%
- 192.168.0.0/24: 36.69%
- 192.168.2.0/24: 3.02%
- 255.255.255.0/24: 2.69%
- 10.0.0.0/24: 2.55%

#### 子网
- 192.168.1.0/24: 
- 192.168.0.0/24: 
- 182.161.73.0/24: 
- 43.227.116.0/24: 
- 172.217.25.0/24: 

#### 唯一值
- 7,609
- 14,651
- 614
- 1,167
- 1,235

#### 百分比
- 32.33%
- 10.21%
- 10.09%
- 9.63%
- 7.86%

#### 统计数据
- 35,490
- 25.01%
- 23.86%
- 16.16%
- 8.15%
- 7.55%

#### 统计数据
- 64,600
- 46.50%
- 36.00%
- 3.83%
- 3.58%
- 3.57%

#### 广播用途
最常见的广播用户是一个名为“HCDN”的点对点视频流解决方案，出现在近1,800个主机上。

#### 估计易受攻击的主机数量
在研究中，我们发现98%的被滥用网关在使用源端口1900时会响应发现请求。这表明攻击者可能受到了与我们在早期研究中遇到的ZMap问题相同的误导。然而，事实并不完全如此，因为存在大约20万个使用该端口但没有任何转发的路由器。因此，我们无法对此现象得出明确结论。

为了估计易受攻击的主机数量，我们决定基于已知易受攻击的主机（即前两组中的主机）的信息。我们创建了一个包含制造商、型号名称和型号编号的元组，并认为所有匹配的设备都是易受攻击的。基于此，约有480,000个暴露SOAP端点的设备可能是易受攻击的，其中86%是确定易受攻击的。

### UPnP互联网网关设备蜜罐
基于上述经验结果，我们还通过开发一个蜜罐来跟踪潜在的攻击行为。具体来说，我们开发了一个蜜罐，实现了`GetGenericPortMappingEntry`（允许枚举最多五个项目）和`AddPortMapping`（响应成功），并使用了真实易受攻击设备的响应。由于SSDP常用于DDoS攻击，我们将每个请求者的响应限制为每小时两个，以防止滥用。此外，我们修改了设备描述文件的位置，以确认潜在攻击者是否解析回复而不是利用常用位置。我们将SOAP端点设置为监听最常用的数十个端口，并仅对已知路径或路径前缀上的请求做出响应。我们的蜜罐源代码可在[GitHub](https://github.com/RUB-SysSec/MiddleboxProtocolStudy/)上获取，以促进进一步的研究。

从2018年12月9日到2019年2月3日，我们共观察到来自52个不同IP地址的791个HTTP请求，而821个IP地址发送了发现请求。其中，33个地址请求了我们感兴趣的299次操作。两个扫描实例（一个使用单个IP地址，另一个将扫描分布在数十个地址上）在从非标准位置获取描述文件后枚举了端口映射。根据其行为，我们将它们归类为研究扫描器，尽管它们都没有直接宣布自己。第一个实例使用了来自香港的单个IP地址，首先基于SSDP响应进行爬取，后来扩展到检查其他常见的设备描述位置。第二个实例是从中国使用22个IP地址进行协调的同时扫描，尝试获取前45个转发，同时忽略我们的错误响应（用户代理为“Firefox 5.0”）。我们还观察到了15次添加端口映射的调用（来自十个不同的网络和国家），但仔细检查后发现，这些都针对同一个端口，希望利用输入字段中的命令注入漏洞。因此，我们认为要么我们运气不好，要么在我们的观察期间没有活跃的恶意活动。我们在观察期结束后继续运行蜜罐，但未注意到任何涉及插入转发的恶意活动。

### UPnP IGD：主要发现
我们的研究表明，30%的所有SSDP响应主机也暴露了其控制端点，可能会导致各种实际滥用。我们能够从约130,000个主机中枚举端口转发，同时发现约480,000个主机将其端口转发控制暴露给互联网。我们的分析表明，恶意行为者已经利用这一功能进行主机扫描或作为跳板来伪装其活动。最常见的无害用途是BitTorrent或VoIP软件，大多数主机使用192.168.0.0/24或192.168.1.0/24作为其内部网络。在调查过程中，我们还发现ZMap的响应过滤错过了大量SSDP响应主机，使其对使用该工具收集潜在SSDP放大器进行DDoS攻击的攻击者不可见。

### NAT-PMP和PCP
NAT端口映射协议（NAT-PMP）是IGD的竞争者，于2005年由Cheshire等人在Apple工作时首次引入和定义。支持它的首个版本随OS X 10.4一同发布。该草案经过多次更新，直到2013年发布了信息性RFC 6886 [11]及其IETF标准化继任者端口控制协议（PCP，RFC 6887 [71]）。

NAT-PMP使用简单的UDP二进制协议，在端口5351上支持三种操作：(i) ANNOUNCE，用于确定NAT网关的外部地址并进行服务器到客户端的信号传递；(ii) Map UDP；(iii) Map TCP，用于请求转发。客户端通过发送包含要转发流量的端口、建议的外部端口（网关将选择为客户映射的端口）和映射所需生命周期的映射请求来请求NAT网关的端口映射。需要注意的是，与IGD不同，不能显式指定转发目标，而是请求的源地址作为目标。

端口控制协议（PCP）是NAT-PMP的继任者，使用相同的端口、兼容的数据包格式和类似的操作语义。该协议扩展了对IPv6的支持、出站映射管理（PEER操作码）等功能。PCP设计之初就考虑到了可扩展性，具有简单的基础头部，后跟特定操作码的有效负载和潜在选项。图2展示了带有MAP操作码和THIRD PARTY选项的完整PCP请求示例，用于请求10.0.23.221:12345到127.0.0.1:1024的映射。对于ANNOUNCE命令，只需基础头部即可。

#### 测量方法
与UPnP IGD相比，NAT-PMP和PCP不提供枚举现有端口映射的功能。相反，我们只能通过精心策划的全网扫描来验证是否存在配置错误的实现。我们的NAT-PMP/PCP扫描涉及三个不同的有效载荷，以了解是否可以进行类似于UPnP IGD的攻击。与UPnP IGD一样，我们精心制作了有效载荷，并在实验室环境中对其进行了测试，以确保它们按预期工作且不会产生任何意外副作用。

##### 发现PCP服务器
为了初始主机发现，我们利用PCP对NAT-PMP数据包结构的向后兼容性，这意味着我们可以通过发送单个PCP ANNOUNCE请求来发现支持任一协议的服务器。为此，我们准备了一个只包含PCP基础头部（图2顶部部分）的请求，其中包括我们的IP地址作为请求者。我们将版本字段设置为“2”（PCP），并将生命周期设置为“0”，然后使用ZMap [20]对整个互联网的5351端口进行扫描。正确配置的PCP服务器应静默丢弃这些数据包，因为它们不是来自内部网络。如果服务器正确处理了数据包，我们期望在结果字段中收到SUCCESS，并且epoch字段填充了设备的当前运行时间。如果主机仅支持NAT-PMP或供应商特定的实现（有效载荷中的版本为1），则应收到UNSUPP_VERSION [71, “Version Negotiation”]响应。

##### 检查THIRD PARTY选项
我们的第二次检查用于了解支持PCP的服务器中有多少支持THIRD PARTY选项以创建任意转发。为此，我们发送了一个特制的MAP请求，以在发送这些请求的同一IP地址（即我们的扫描服务器）上创建转发。如果PCP服务器根本不支持该选项，它应返回UNSUPP_OPTION结果代码。回想隐式转发目标，RFC规定第三方转发目标必须与源地址不同，违反此规则必须返回MALFORMED_REQ错误。

##### 测试潜在漏洞
我们的最后一次检查也是在同一支持PCP的人群上进行，用于验证服务器是否允许创建转发。虽然我们知道这可能会影响路由，但我们仍然需要验证这一点。

### PCP扫描结果
| 操作 | 结果 |
| --- | --- |
| ANNOUNCE | - |
| MAP THIRD PARTY | - |
| NAT-PMP | - |
| PCP | - |
| 无效IP | 127.0.0.1 |
| ADDRESS MISMATCH | - |
| MALFORMED OPTION | - |
| MALFORMED REQ | - |
| NETWORK FAILURE | - |
| NOT AUTHORIZED | - |
| SUCCESS | 114 |
| UNSUPP OPCODE | - |
| UNSUPP VERSION | 554,487 |
| 总数 | 554,601 |

| 操作 | 结果 |
| --- | --- |
| ANNOUNCE | - |
| MAP THIRD PARTY | - |
| NAT-PMP | - |
| PCP | - |
| 无效IP | - |
| ADDRESS MISMATCH | - |
| MALFORMED OPTION | - |
| MALFORMED REQ | - |
| NETWORK FAILURE | - |
| NOT AUTHORIZED | - |
| SUCCESS | 9 |
| UNSUPP OPCODE | 70,437 |
| UNSUPP VERSION | 5 |
| 总数 | 70,456 |

| 操作 | 结果 |
| --- | --- |
| ANNOUNCE | - |
| MAP THIRD PARTY | - |
| NAT-PMP | - |
| PCP | - |
| 无效IP | - |
| ADDRESS MISMATCH | - |
| MALFORMED OPTION | - |
| MALFORMED REQ | - |
| NETWORK FAILURE | - |
| NOT AUTHORIZED | - |
| SUCCESS | 2 |
| UNSUPP OPCODE | 31,046 |
| UNSUPP VERSION | 8 |
| 总数 | 31,479 |