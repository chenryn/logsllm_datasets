# 零、前言
容器是运行软件的新方式。它们高效、安全且可移植，您可以在 Docker 中运行 Windows 应用，无需更改代码。Docker 可帮助您应对 IT 领域最大的挑战:传统应用现代化、构建新应用、迁移到云、采用 DevOps 并保持创新。
这本书教你所有你需要知道的关于 Windows Docker 的知识，从 101 到在生产中运行高可用性工作负载。您将在 Docker 旅程中得到指导，从的关键概念和简单示例开始.NET 框架和.NET 核心应用。然后，您将学习如何使用 Docker 来更新传统 ASP.NET 和 SQL Server 应用的架构和开发。
这些示例向您展示了如何将遗留的单一应用分解成分布式应用，并将其部署到云中的集群环境中，使用与本地运行它们完全相同的工件。您将看到如何构建一个 CI/CD 管道，使用 Docker 来编译、打包、测试和部署您的应用。为了帮助您自信地转向生产，您将了解 Docker 安全性、管理和支持选项。
这本书最后给出了在你自己的项目中开始使用 Docker 的指导。您将浏览 Docker 实现的一些真实案例研究，从小规模的内部应用到运行在 Azure 上的超大规模应用。
# 这本书是给谁的
如果您希望在不重写的情况下更新旧的单一应用，平稳部署到生产，或者迁移到 DevOps 或云，那么 Docker 就是您的推动者。这本书给了你一个坚实的 Docker 基础，所以你可以自信地接近所有这些场景。
# 充分利用这本书
这本书附带了很多代码，在`sixeyed/docker-on-windows`存储库中的 GitHub 上。要使用您需要的示例:
*   带有 1809 更新的 Windows 10 或 Windows Server 2019
*   Docker 版本 18.09 或更高版本
# 下载示例代码文件
你可以从你在[www.packt.com](http://www.packt.com)的账户下载这本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[www.packt.com/support](http://www.packt.com/support)并注册将文件直接通过电子邮件发送给您。
您可以按照以下步骤下载代码文件:
1.  登录或注册[www.packt.com](http://www.packt.com)。
2.  选择“支持”选项卡。
3.  点击代码下载和勘误表。
4.  在搜索框中输入图书的名称，并按照屏幕指示进行操作。
下载文件后，请确保使用最新版本的解压缩文件夹:
*   视窗系统的 WinRAR/7-Zip
*   zipeg/izp/un ARX for MAC
*   适用于 Linux 的 7-Zip/PeaZip
这本书的代码包也托管在 GitHub 上，网址为[。如果代码有更新，它将在现有的 GitHub 存储库中更新。](https://github.com/PacktPublishing/Docker-on-Windows-Second-Edition)
我们还有来自丰富的图书和视频目录的其他代码包，可在**[【https://github.com/PacktPublishing/】](https://github.com/PacktPublishing/)**获得。看看他们！
代码包也可以在作者的 GitHub 存储库中找到:https://GitHub . com/six eyes/docker-on-window/tree/第二版。
# 下载彩色映像
我们还提供了一个 PDF 文件，其中包含本书中使用的截图/图表的彩色映像。可以在这里下载:[https://www . packtpub . com/sites/default/files/downloads/9781789617375 _ color images . pdf](_ColorImages.pdf)。
# 使用的约定
本书通篇使用了许多文本约定。
`CodeInText`:表示文本中的码字、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟网址、用户输入和推特句柄。这里有一个例子:“作为 Azure 门户的替代方案，您可以使用`az`命令行来管理 DevTest 实验室。”
代码块设置如下:
```
```
任何命令行输入或输出都编写如下:
```
> docker version
```
**粗体**:表示一个新的术语、一个重要的单词或者你在屏幕上看到的单词。例如，菜单或对话框中的单词像这样出现在文本中。下面是一个例子:“您需要选择切换到 Windows 容器...在你做其他事情之前”
Warnings or important notes appear like this. Tips and tricks appear like this.
# 取得联系
我们随时欢迎读者的反馈。
**一般反馈**:如果你对这本书的任何方面有疑问，在你的信息主题中提到书名，发邮件给我们`PI:EMAIL`。
**勘误表**:虽然我们已经尽了最大的努力来保证内容的准确性，但是错误还是会发生。如果你在这本书里发现了一个错误，如果你能向我们报告，我们将不胜感激。请访问[www.packt.com/submit-errata](http://www.packt.com/submit-errata)，选择您的图书，点击勘误表提交链接，并输入详细信息。
**盗版**:如果您在互联网上遇到任何形式的我们作品的非法拷贝，如果您能提供我们的位置地址或网站名称，我们将不胜感激。请通过`PI:EMAIL`联系我们，并提供材料链接。
**如果你有兴趣成为一名作者**:如果有一个你有专长的话题，你有兴趣写或者投稿一本书，请访问[authors.packtpub.com](http://authors.packtpub.com/)。
# 复习
请留下评论。一旦你阅读并使用了这本书，为什么不在你购买它的网站上留下评论呢？然后，潜在的读者可以看到并使用您不带偏见的意见来做出购买决定，我们在 Packt 可以了解您对我们产品的看法，我们的作者可以看到您对他们的书的反馈。谢谢大家！
更多关于 Packt 的信息，请访问[packt.com](http://www.packt.com/)。