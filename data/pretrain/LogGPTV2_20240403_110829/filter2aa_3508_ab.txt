WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
Client/server module 
WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
 (2) Encrypt 
Client/server module 
WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
 (2) Encrypt 
Client/server module 
WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
Coverage bitmap 
Shared memory 
 (2) Encrypt 
(4) Update bitmap 
Client/server module 
WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
Coverage bitmap 
Shared memory 
 (2) Encrypt 
(4) Update bitmap 
(5) Estimate coverage, 
generate new test case 
Client/server module 
WinAFL patch (netAFL) 
    Malware (main module) 
Malware in memory 
   DynamoRIO shared lib 
winafl shared lib 
  AFL fuzzer 
Fuzzer in memory 
User-defined encryption 
Coverage bitmap 
Shared memory 
 (2) Encrypt 
(4) Update bitmap 
(5) Estimate coverage, 
generate new test case 
 (6) Restart target routine 
Client/server module 
WinAFL patch (netAFL). Usage 
> afl-fuzz.exe –usage 
Fake server settings: 
-s            - Server port to listen for incoming connections 
Network fuzzing settings: 
-a            - IP address to send data in 
-U            - Use UDP (default TCP) 
-p            - Port to send data in 
-w            - Delay in milliseconds before sending data 
User-defined cryptographic library settings: 
-L            - Path to library with user-defined crypto 
User-defined CnC server settings: 
-l            - Path to library with user-defined CnC server 
WinAFL patch (netAFL). User-defined Encryption & CnC 
●
Custom encryption function prototypes: 
○
char* APIENTRY encrypt_buffer(char *buf, int buf_size) – to encrypt 
○
void APIENTRY free_buffer(char *buf) – to free memory used for encrypted 
data 
●
Custom CnC function prototypes: 
○
int APIENTRY cnc_init(char *port) - to init CnC 
○
int APIENTRY cnc_run(char *data) - to send AFL’s test case 
●
There is an example distributed with winAFL patch (netAFL) 
TOOL DEMO 
4 hours after 
Case Study I. Mirai 
未来 
Mirai. Overview 
Mirai. Overview 
●
IoT-based botnet DDoS 
●
Most disruptive DDoS cyber-attack in history 
○
2016 Dyn DDoS (1.2Tb/s).  
○
Krebs on Security (620 Gb/s) 
○
OVH DDoS (1TB/s) 
●
Hundreds of thousands devices across 164 countries 
●
Some elements of SDLC: 
Mirai. HTTP-response parser 
Mirai. Seed File 
GET / HTTP/1.1 
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like 
Gecko) Chrome/51.0.2704.103 Safari/537.36 
Host: localhost 
Connection: keep-alive 
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 
Accept-Language: en-US,en;q=0.8 
Content-Type: application/x-www-form-urlencoded 
content-length: 3 
Mirai. Fuzzing Statistics 
Mirai. Vulnerability 
Mirai. Crash Case 
GET / HTTP/1.1 
User-Agent: Mozilla/5.0 (Wndows NT 10.0; WOW64) AppleWeQKit/537.36 (KHTML, 
like Geckt) Chrome/51.0.2704.103 Safari/537.36 
Host: location:/keep-alive 
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,imagv/   
,*/*;q=0.8 
Accept-Language: =0.8 
Content-Type: applicat n/x-www-form-urlencoded 
content-length: 3 
LOL 
Mirai. Exploitation Demo 
Case Study II. Dexter v2 
Dexter. Overview 
●
Point-of-sales (PoS) malware which is targeted Microsoft 
Windows terminals 
●
Steals credit/debit card details 
●
First known botnet that targets POS terminals (mostly in US) 
Dexter. Target 
Dexter. Vulnerability 
Case Study III. TinyNuke 
TinyNuke. Overview 
●
Man-in-the-browser Trojan equipped with common features: 
WebInjects, SOCKS, Proxy, JSON parsers and etc. 
●
Distributed over trojanized PDF Reader 
TinyNuke. Target 
TinyNuke. Seed File 
{ 
   "expand" : "attributes", 
   "link" : { 
"rel" : "self", 
"href" : "http://localhost:8095/crowd/rest/usermanagement/1/user?username=my_username" 
   }, 
   "name" : "my_username", 
   "first-name" : "My", 
   "last-name" : "Username", 
   "display-name" : "My Username", 
   "email" : "PI:EMAIL", 
   "password" : { 
"link" : { 
"rel" : "edit", 
"href" : "http://localhost:8095/crowd/rest/usermanagement/1/user/password?username=my_username" 
} 
   }, 
   "active" : true, 
   "attributes" : { 
"link" : { 
"rel" : "self", 
"href" : "http://localhost:8095/crowd/rest/usermanagement/1/user/attribute?username=my_username" 
}, 
"attributes" : [] 
   } 
} 
TinyNuke. Statistics 
TinyNuke. Vulnerability 
TinyNuke. Crash Case 
,[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[ 
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[] и]]] 
,[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[ [{[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]] 
,[[[[[[[[[[[[[[[[[[[[[[[[[• [[[[[[[[[[[[[[ [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]Э 
Case Study IV. KINS 
KINS. Overview 
●
Banking trojan implemented on top of Zeus source code 
●
Used to attack major financial institution in Germany and 
Netherlands 
●
Contains rootkit module, HTTP-protocol parser and Web-
injection capabilities 
KINS. Seed File 
HTTP/1.1 200 OK 
Date: Sun, 18 Oct 2009 08:56:53 GMT 
Server: Apache/2.2.14 (Win32) 
Transfer-Encoding: chunked 
Last-Modified: Sat, 20 Nov 2004 07:16:26 GMT 
ETag: "10000000565a5-2c-3e94b66c2e680" 
Accept-Ranges: bytes 
Content-Length:44 
Connection: close 
Content-Type: text/html 
X-Pad: avoid browser bug 
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 
It works! 
KINS. Target 
KINS. Statistics 
KINS. Vulnerability 
KINS. Vulnerability 
KINS. Crash Case 
HTTP/1.1 200 OK 
Date: Sun, 18 Oct 2009 08:56:53 GMT 
Server: Ap32) 
Transfer-Encoding: chunked 
Lasdified: Sat, 20 Nov 2004 07:16:26 GMT 
ETag: "10000000565a5-2c-3e94b66c2e680" 
Accept-Ranges: bytes 
Content-Length: 
Connection: close 
Content-Type: text/html 
X-Pad: avoid browser bug 
AAAAAAAAy>It works! 
Challenges and Issues 
●
Preliminary reverse engineering required 
●
Need to find/trigger target function 
●
Bugs in DynamoRIO/WinAFL 
●
Seed file selection 
●
Traffic encryption 
●
Stability 
Drltrace 
●
Drltrace is an open-source API calls tracer for Windows (similar to 
ltrace for Linux). 
drltrace.exe –logdir . –print_ret_addr – malware.exe 
https://github.com/mxmssh/drltrace 
Future Work 
●
Automatically find target function 
●
Increase stability 
●
Code-coverage visualization 
Conclusion 
●
Bugs in malware exist and can be used to defend against them 
●
Coverage-guided fuzzing was able to find bugs in each malware 
selected for experiment within 24 hours 
●
Two bugs lead to RCE, one bug can be used to defend against 
DDoS 
●
This technique can also be used to find bugs in network-based 
applications (probably most useful application ) 
Thank you! 
https://github.com/mxmssh/netafl 
https://github.com/mxmssh 
https://www.linkedin.com/in/mshudrak