contain only an account-speciﬁc UUID while the contact
check takes place after the TLS connection is established by
exchanging hash values of contact identiﬁers.
Another conceptual disadvantage of [96] is that Apple,
as the IBE root, must provision secret keys to all AirDrop
devices, whereas we only require Apple to sign encryptions
of hashed contact identiﬁers where the key can be chosen by
the client. Moreover, the system proposed in [96] does not
consider subtle issues related to everyday use cases, e.g., how
to handle transfers of phone numbers. This would require
additional effort to extend the employed IBE scheme with
efﬁcient revocation capabilities [18].
In terms of implementation and evaluation, we provide an
actual integration into the AirDrop protocol with prototypes
on various state-of-the-art Apple devices and demonstrate
practical performance under real-world conditions.
7.2 Private Set Intersection
The study of PSI protocols is a very active ﬁeld of research
with various optimizations for different use cases. The “stan-
dard” scenario is two-party PSI with balanced input sets and
security against semi-honest adversaries, who honestly follow
the protocol but try to learn additional information from the
transcript. Here, works based on oblivious transfer [60, 76,
79, 80] deﬁne the state-of-the-art in terms of concrete per-
formance, while others consider the cost-efﬁciency in cloud
deployment as the most relevant metric [75]. There have been
attempts to translate these works to the malicious model [83,
84] with a recent efﬁciency break-through [74].
PSI was also studied in the multi-party case [43, 50, 61] and
extended to generic protocols that can compute an arbitrary
symmetric function on top of the intersection [29, 77, 78].
As discussed in § 4.3, most closely related to the problem
studied in our work are so-called unbalanced PSI protocols
that work particularly well when one of the input sets is much
larger than the other [26, 27, 55, 59, 82]. Chen et al. [26,
27] present protocols based on fully homomorphic encryption
that are very computation intensive and thus not suitable to be
run between two mobile devices. Kiss et al. [59] and Kales
et al. [55] optimize protocols based on oblivious pseudoran-
dom function evaluations for the mobile use case, especially
so-called mobile contact discovery to privately synchronize
address books with user databases in messaging applications.
However, these protocols, in the best case, only consider
security against malicious PSI receivers but not senders.
USENIX Association
30th USENIX Security Symposium    3589
There also exist approaches that efﬁciently outsource PSI
computations to a third-party server [1, 2, 56, 57, 99]. How-
ever, such protocols are not suitable for our use case since the
input parties might be both ofﬂine.
Finally, we observe that purely public key-based Difﬁe-
Hellman-style protocols [13, 31, 33, 52, 53, 82], as have been
around since the 80’s [67, 87], are viable alternatives given
the requirements and speciﬁed input sizes. Speciﬁcally, [31]
and [53] are suitable candidates as they are secure against
malicious adversaries. We base our work on [53] as it re-
quires fewer exponentiations than the RSA-based protocol
of [31] and can be instantiated more efﬁciently with ellip-
tic curve cryptography. As described in § 4.5, we augment
this protocol with signed inputs to prevent certain attacks on
the ideal functionality of PSI, similar to the notion of autho-
rized PSI (APSI) [31, 33] and PSI with certiﬁed sets [21].
7.3 Secure Computation Protocols
There exist further generic and specialized cryptographic pro-
tocols to securely perform the operations necessary for mu-
tual authentication. We efﬁciently achieve this via PSI in two
rounds with O(m + n) complexity (cf. § 4).
Secure
two-party computation protocols proposed
by Yao [97] and Goldreich, Micali, and Wigderson [40] can
obliviously evaluate arbitrary Boolean or arithmetic circuits
over private inputs. However, a naive circuit for performing
equality tests on m contact identiﬁers and n address book
entries has complexity O(m · n). This complexity can be
reduced to be linear with hashing techniques known from
so-called circuit-based PSI [29, 76, 77, 78]. Unfortunately,
such hashing techniques are incompatible with malicious
security [74], which otherwise can be guaranteed with generic
approaches [62, 72, 95] at the cost of additional overhead.
Furthermore, it is unclear how to efﬁciently authenticate the
contact identiﬁers used as inputs. There also exist specialized
protocols for securely performing comparisons/equality
checks (e.g., [30, 64, 98]).
The task of computing the intersection between two
sets can be equivalently formulated as the receiver query-
ing/searching the sender’s database on its inputs to test for
set membership. This can be done while hiding the query
and without transferring the entire database via private in-
formation retrieval (PIR). While there exists efﬁcient multi-
server PIR [28, 36], we consider a two-party setting and hence
a single server. State-of-the-art single-server PIR is based
on homomorphic encryption [39, 58, 63], which is computa-
tionally too demanding for mobile devices. Moreover, PIR
does not necessarily protect unrelated database entries, which
in our case should remain private. This setting is addressed
by works that allow (complex) search queries on encrypted
data [38]. Unfortunately, such systems inherently suffer from
a certain leakage and have been prone to attacks [17, 23, 70].
7.4 Privacy of Apple’s Wireless Ecosystem
AirDrop is part of Apple’s larger wireless ecosystem, which
has been analyzed for privacy leaks before. AWDL was found
to leak personally identiﬁable information such as the user’s
real name [92]. Several works [14, 24, 65] have analyzed Ap-
ple’s Bluetooth implementation and found various ways of
tracking devices via static identiﬁers in Bluetooth advertise-
ments. Finally, [88] discovered that Apple devices can be
tracked via identiﬁers that are randomized asynchronously.
8 Conclusion
In this paper, we solved the problem of privacy-preserving
authentication between ofﬂine peers, based on the notion of
being mutual contacts. We demonstrated the practicability
of our approach via a comprehensive experimental perfor-
mance evaluation, which attests negligible overhead under
real-world conditions. We motivated our work with two dis-
tinct design ﬂaws in AirDrop that allow attackers to learn
the phone numbers and email addresses of both sender and
receiver devices. However, our proposed protocol can sup-
port other applications, even outside of Apple’s ecosystem.
For example, Google recently launched a similar platform
called “Nearby” for Android [41, 86], where device visibility
can be restricted to the user’s contacts and thus would beneﬁt
from our protocol for privacy-preserving authentication.
Our proposed solution PrivateDrop prevents users from
disclosing personal information to non-contacts. Still, users
remain trackable via their account-speciﬁc UUID in the TLS
certiﬁcate, which gives room for future work. Nevertheless,
our results demonstrate that PSI with malicious security is
ready for practical deployment, even in ofﬂine scenarios be-
tween resource-constrained mobile devices. We would be
glad to see our open-source implementation being adopted in
end-user systems such as AirDrop.
Responsible Disclosure
We informed the Apple Product Security team about our ﬁnd-
ings (follow-up ID 705937802): We disclosed the sender
identiﬁer leakage (cf. § 3.3) in May 2019 and the receiver
identiﬁer leakage (cf. § 3.4) as well as our proposed PSI-
based protocol (cf. § 4) in October 2020. Apple has not yet
commented if they plan to address these AirDrop issues.
Availability
We open-source our PrivateDrop implementation [45] and
the code to reproduce our ﬁgures [44] as part of the Open
Wireless Link project [91].
Acknowledgments
We thank the anonymous reviewers and our shepherd Wouter
Lueks for their valuable comments, Benny Pinkas and
Gowri R Chandran for insightful discussions, Oliver Schick
for help with Relic, and Nanako Honda for explorative work.
3590    30th USENIX Security Symposium
USENIX Association
This project has received funding from the European Re-
search Council (ERC) under the European Union’s Hori-
zon 2020 research and innovation program (grant agreement
It was co-funded by the Deutsche
No. 850990 PSOTI).
Forschungsgemeinschaft
(DFG) – SFB 1119 CROSS-
ING/236615297 and GRK 2050 Privacy & Trust/251805230,
by the LOEWE initiative (Hesse, Germany) within the emer-
genCITY center, by the German Federal Ministry of Educa-
tion and Research and the Hessian State Ministry for Higher
Education, Research and the Arts within ATHENE.
References
[1] Aydin Abadi, Sotirios Terzis, and Changyu Dong. “VD-PSI:
Veriﬁable Delegated Private Set Intersection on Outsourced
Private Datasets”. In: FC. Springer, 2016, pp. 149–168.
[2] Aydin Abadi, Sotirios Terzis, Roberto Metere, and Changyu
Dong. “Efﬁcient Delegated Private Set Intersection on Out-
sourced Private Datasets”. In: TDSC 16.4 (2019), pp. 608–
624.
[3] Martín Abadi. “Private Authentication”. In: Privacy Enhanc-
ing Technologies. Springer, 2002, pp. 27–40.
[4] Martín Abadi and Cédric Fournet. “Private Authentication”.
In: Theor. Comput. Sci. 322.3 (2004), pp. 427–476.
[5] Apple Inc. Apple Reports Record First Quarter Results.
Jan. 28, 2020. URL: https://www.apple.com/newsroom/
2020 / 01 / apple - reports - record - first - quarter -
results/ (visited on 10/15/2020).
[6] Apple Inc. Cryptographic Message Syntax Services. 2020.
URL: https://developer.apple.com/documentation/
security/cryptographic_message_syntax_services
(visited on 10/15/2020).
[7] Apple Inc. CryptoKit. 2020. URL: https://developer.
apple . com / documentation / cryptokit (visited on
10/15/2020).
[8] Apple Inc. NetService. 2020. URL: https://developer.
apple . com / documentation / foundation / netservice
(visited on 10/15/2020).
[9] Apple Inc. SwiftNIO. 2020. URL: https://github.com/
apple/swift-nio (visited on 10/15/2020).
[10] Apple Inc. Use AirDrop on your iPhone, iPad, or iPod touch.
Oct. 2019. URL: https : / / support . apple . com / en -
us/HT204144 (visited on 10/15/2020).
[11] Diego F. Aranha, Conrado P. L. Gouvêa, Tobias Markmann,
Riad S. Wahby, and Kevin Liao. RELIC is an Efﬁcient LI-
brary for Cryptography. URL: https : / / github . com /
relic-toolkit/relic (visited on 10/15/2020).
[12] N. Asokan, Alexandra Dmitrienko, Marcin Nagy, Elena
Reshetova, Ahmad-Reza Sadeghi, Thomas Schneider, and
Stanislaus Stelle. “CrowdShare: Secure Mobile Resource
Sharing”. In: ACNS. Springer, 2013, pp. 432–440.
Pierre Baldi, Roberta Baronio, Emiliano De Cristofaro, Paolo
Gasti, and Gene Tsudik. “Countering GATTACA: Efﬁcient
and Secure Testing of Fully-Sequenced Human Genomes”.
In: CCS. ACM, 2011, pp. 691–702.
[13]
[14]
Johannes K. Becker, David Li, and David Starobinski.
“Tracking Anonymized Bluetooth Devices”.
In: PoPETs
2019.3 (2019), pp. 50–65.
[15] Ryad Benadjila, Arnaud Ebalard, and Jean-Pierre Flori.
libecc Project. URL: https://github.com/ANSSI- FR/
libecc (visited on 10/15/2020).
[16] David Bernhard, Olivier Pereira, and Bogdan Warinschi.
“How Not to Prove Yourself: Pitfalls of the Fiat-Shamir
Heuristic and Applications to Helios”.
In: ASIACRYPT.
Springer, 2012, pp. 626–643.
[17] Laura Blackstone, Seny Kamara, and Tarik Moataz. “Revis-
iting Leakage Abuse Attacks”. In: NDSS. Internet Society,
2020.
[18] Alexandra Boldyreva, Vipul Goyal, and Virendra Kumar.
“Identity-based Encryption with Efﬁcient Revocation”. In:
CCS. ACM, 2008, pp. 417–426.
[19] Dan Boneh and Matthew K. Franklin. “Identity-Based En-
cryption from the Weil Pairing”. In: CRYPTO. Springer,
2001, pp. 213–229.
[21]
[20] Elie Bursztein, Mike Hamburg, Jocelyn Lagarenne, and Dan
Boneh. “OpenConﬂict: Preventing Real Time Map Hacks in
Online Games”. In: S&P. IEEE, 2011, pp. 506–520.
Jan Camenisch and Gregory M. Zaverucha. “Private Inter-
section of Certiﬁed Sets”. In: FC. Springer, 2009, pp. 108–
127.
Stuart K. Card, George G. Robertson, and Jock D. Mackinlay.
“The Information Visualizer, an Information Workspace”. In:
CHI. ACM, 1991, pp. 181–186.
[22]
[23] David Cash, Paul Grubbs, Jason Perry, and Thomas Risten-
part. “Leakage-Abuse Attacks Against Searchable Encryp-
tion”. In: CCS. ACM, 2015, pp. 668–679.
[24] Guillaume Celosia and Mathieu Cunche. “Discontinued Pri-
vacy: Personal Data Leaks in Apple Bluetooth-Low-Energy
Continuity Protocols”. In: PoPETs 2020.1 (2020), pp. 26–46.
[25] Dmitry Chastuhin. Apple Bleee: Everyone Knows What Hap-
pens on Your iPhone. July 25, 2019. URL: https://hexway.
io/research/apple-bleee/ (visited on 10/15/2020).
[26] Hao Chen, Zhicong Huang, Kim Laine, and Peter Rindal.
“Labeled PSI from Fully Homomorphic Encryption with Ma-
licious Security”. In: CCS. ACM, 2018, pp. 1223–1237.
[27] Hao Chen, Kim Laine, and Peter Rindal. “Fast Private Set In-
tersection from Homomorphic Encryption”. In: CCS. ACM,
2017, pp. 1243–1255.
[28] Benny Chor, Oded Goldreich, Eyal Kushilevitz, and Madhu
Sudan. “Private Information Retrieval”. In: FOCS. IEEE,
1995, pp. 41–50.
[29] Michele Ciampi and Claudio Orlandi. “Combining Private
Set-Intersection with Secure Two-Party Computation”. In:
SCN. Springer, 2018, pp. 464–482.
[30] Geoffroy Couteau. “New Protocols for Secure Equality Test
and Comparison”. In: ACNS. Springer, 2018, pp. 303–320.
USENIX Association
30th USENIX Security Symposium    3591
[31] Emiliano De Cristofaro, Jihye Kim, and Gene Tsudik.
“Linear-Complexity Private Set Intersection Protocols Se-
cure in Malicious Model”. In: ASIACRYPT. Springer, 2010,
pp. 213–231.
[32] Emiliano De Cristofaro, Mark Manulis, and Bertram Poet-
tering. “Private Discovery of Common Social Contacts”. In:
ACNS. Springer, 2011, pp. 147–165.
[33] Emiliano De Cristofaro and Gene Tsudik. “Practical Private
Set Intersection Protocols with Linear Complexity”. In: FC.
Springer, 2010, pp. 143–159.
[34] Dataﬁnder. Recover Encrypted Email Addresses. 2020. URL:
https : / / web . archive . org / web / 20191211152224 /
https://datafinder.com/products/email-recovery
(visited on 10/15/2020).
[35] Levent Demir, Amrit Kumar, Mathieu Cunche, and Cédric
Lauradoux. “The Pitfalls of Hashing for Privacy”. In: Com-
mun. Surv. Tutorials 20.1 (2018), pp. 551–565.
[36] Daniel Demmler, Amir Herzberg, and Thomas Schneider.
“RAID-PIR: Practical Multi-Server PIR”. In: CCSW. ACM,
2014, pp. 45–56.