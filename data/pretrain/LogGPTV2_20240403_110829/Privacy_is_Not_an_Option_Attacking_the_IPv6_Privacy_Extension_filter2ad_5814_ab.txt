S
d.
I
e
u
q
a
p
O
m.
e
S
Temporal Correlation
Geographical Correlation
-
-
-
-
-
(cid:2)
n
sio
n
e
t
x
E
y
c
a
riv
P
(cid:2)
(cid:2)
A
G
C
-
(cid:2)
Table 2. IPv6 address formats with respect to their native availability in current client
operating systems
Mac OS X Yosemite
Ubuntu 14.10
Windows 8.1
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
-
-
-
-
-
-
(cid:2)
(cid:2)
(cid:2)
leaves a gap that cannot be ﬁlled by another address mechanism, and highlights
the importance of revisiting the extension’s current deﬁnition.
3.2 Known Vulnerabilities of the Privacy Extension
Drawbacks of the IPv6 privacy extension were discussed before, and follow two
principal directions. First, its design does not impede active tracking, e.g., by
using ping. Temporary addresses are assigned in addition to stable ones, and an
adversary can still actively probe multiple subnets for a certain interface identi-
ﬁer in order to trace a host’s movement. The respective speciﬁcation, however,
explicitly states its intention to protect solely against passive eavesdroppers, and
not against active adversaries [7].
Second, shortcomings in the extension’s protection against address correla-
tion are known. A node does not have to change its interface identiﬁer when
moving to a new network preﬁx. Thus, tracking a host’s movement remains fea-
sible within an identiﬁer’s lifetime of typically 24 h [14,18]. For mitigation, the
inclusion of the network preﬁx into the interface identiﬁer calculation was pro-
posed [18]. The respective speciﬁcation also allows the change of an identiﬁer
in such a situation [7]. Our attack supports the second direction, and highlights
that adversaries are able to perform address correlation even when the privacy
extension is used. In comparison to known attacks, our attack cannot be fully
mitigated within the speciﬁcation’s limitations.
454
J. Ullrich and E. Weippl
4 Attack Scenario
Our attack scenario is depicted in Fig. 3 and assumes full IPv6 deployment. We
assume three stakeholders named Alice, Bob and Eve. Alice loves coﬀee, and
regularly visits coﬀee shops. Then, she brings her laptop with her, and uses the
oﬀered Internet access to read mails or to chat. Bob and Eve each run a coﬀee
shop, and provide Internet access to their guests. They deployed stateless address
autoconﬁguration, and their routers advertise the respective IPv6 network preﬁx
so that customers are able to conﬁgure their global IPv6 addresses by connecting
the preﬁx with their self-generated interface identiﬁers. Bob’s router advertises
the preﬁx PBob, Eve’s router advertises PEve. Eve further runs a webserver to
advertise current oﬀers. She records her coﬀee shop’s local traﬃc, and logs visits
to her webserver.
Fig. 3. Attack scenario
Alice visits Eve’s coﬀee shop for T successive days2, and connects her laptop
to the coﬀee shop’s local network. Eve’s router advertises PEve, and Alice’s
laptop conﬁgures a stable IPv6 address from this preﬁx and the stable interface
identiﬁer. Alice has enabled the IPv6 privacy extension, and thus temporary
addresses are created in addition to the stable address by combining the preﬁx
with the interface identiﬁer of the day. Alice’s temporary addresses are , , ...,  for day 1, 2, ..., T .
After T days, Alice stops going to Eve’s coﬀee shop. On an arbitrary day
t (t > T ), Alice visits Eve’s competitor Bob. She connects her laptop to Bob’s
local network. Bob’s router announces the preﬁx PBob, and Alice’s laptop forms
a stable identiﬁer from this preﬁx. In addition, the privacy extension generates
a temporary address . On this day, Alice visits Eve’s website to
check current oﬀers and causes a respective log entry.
Eve is interested tracing her customers’ activities, and wants to ﬁnd out
whether (1) Alice is still interested in her oﬀers and visits the webserver, and
whether (2) Alice is drinking coﬀee at a competitor.
2 Although the T days do not necessarily have to be successive, we claim so here for
better readability. In case days are missing, e.g., due to weekends, one simply has to
consider these gaps when calculating the current state.
Privacy is Not an Option: Attacking the IPv6 Privacy Extension
455
We refer to this scenario in the remainder of the paper for illustration of our
attack. This scenario was developed due to its representativeness for day-to-day
life, but we are sure that there are plenty of alternative scenarios. The precon-
ditions for an adversary are moderate: She has to gain a victim’s MAC address
and T successive interface identiﬁers that have been generated by the privacy
extension. The MAC address is gained from local traﬃc as in the presented sce-
nario, or inferred from the stable IPv6 address in case the latter is in modiﬁed
EUI-64 format. Interface identiﬁers are included in the temporary addresses, and
are inferred from there.
5 Security Analysis
In this section, we perform a manual security analysis of the privacy exten-
sion’s algorithm for temporary interface identiﬁer generation as deﬁned in [7]
and presented in Sect. 2. Our analysis revealed four striking characteristics that
facilitate the prediction of future interface identiﬁers. While some of them might
seem minor in isolation, their combination forms a reasonable attack vector as
described in Sect. 6. In this section, we consider each characteristic separately:
First, we describe the characteristic and highlight the speciﬁcation’s argumen-
tation in its favor. Next, we infer implications on security. Figure 4 contrasts the
algorithm for temporary address generation with the discussed characteristics;
the depicted numbers are consistent with the following paragraphs.
Fig. 4. The privacy extension’s characteristics impacting its quality of protection
(1) Concatenation of Successive Hashes: Interface identiﬁers are based on
MD5 digests that are chained with each other because an iteration’s result is
partly included into the next hash calculation. The RFC states that “In theory,
generating successive randomized interface identiﬁers using a history scheme [...]
456
J. Ullrich and E. Weippl
has no advantages over generating them at random,” [7] but claims an advantage
in case two hosts have the same ﬂawed random number generators. Performing
duplicate address detection would make both hosts recognize their identical iden-
tiﬁers and trigger the generation of new identiﬁers. However, the ﬂawed random
number generators would again provide identical numbers, leading to identical
identiﬁers. The presented algorithm is said to avoid this as the inclusion of the
(globally unique) interface identiﬁer in modiﬁed EUI-64 format leads to diﬀerent
temporary interface identiﬁers in the next iteration.
It remains unclear why the inclusion of a globally unique identiﬁer, e.g.,
in modiﬁed EUI-64 format, requires working with a history scheme, i.e., the
concatenation of successive hashes. We believe that inclusion of a globally unique
interface identiﬁer and a random value into MD5 digest calculation is suﬃcient. It
seems unlikely that sequences of equivalent random numbers result in successive
collision in case a globally unique identiﬁer is included into calculation.
The concatenation does not only appear dispensable with respect to the dis-
cussed aspect, but also negatively impacts the algorithm’s quality of protection.
Successive interface identiﬁers are dependent on each other, and today’s state
inﬂuences future identiﬁers. An adversary might exploit this to predict a victim’s
future identiﬁers.
(2) Cryptographic Hash Function: The privacy extension aims to create
random-appearing interface identiﬁers, but states that pseudo-randomness suf-
ﬁces “so long as the speciﬁc sequence cannot be determined by an outsider exam-
ining information that is readily available or easily determinable” [7]. For the
algorithm, MD5 with its adequate properties with respect to randomization has
been “chosen for convenience” [7].
MD5 is considered broken, but a general dissolution would be an overshooting
reaction: MD5 turned out to be prone to collisions that can be found within sec-
onds on commodity hardware [19]. Pre-image attacks are still of high complexity
and remain practically infeasible. The privacy extension uses MD5 for random-
ization, and neither relies on collision resistance nor pre-image resistance. Taking
these considerations into account, the extension’s choice of MD5 is justiﬁable.
MD5 is, however, a comparably fast hash function and the more hashes per sec-
ond, the more feasible brute-force search becomes. This especially holds in com-
bination with a limited input range. In 2012, a cluster of four servers hosting 25
oﬀ-the-shelf graphics processing units (GPU) achieved 180 Gigahashes per second
[20], and time is usually in favor of the adversary as technology moves forward.
(3) Scarce Randomization: The RFC claims that “To make it diﬃcult to
make educated guesses as to whether two diﬀerent interface identiﬁers belong to
the same node, the algorithm for generating alternate identiﬁers must include
input that has an unpredictable component from the perspective of the outside
entities that are collecting information” [7].
Our analysis, however, identiﬁes only scarce unpredictability in the algorithm
for temporary address generation. Every iteration includes 128 bits into MD5
digest calculation:
Privacy is Not an Option: Attacking the IPv6 Privacy Extension
457
– 64 bit of the former iteration’s result, i.e., the remainder of the MD5 hash
that was not used for the temporary interface identiﬁer, and
– the 64 bit interface identiﬁer in modiﬁed EUI-64 format. This identiﬁer is not
kept secret. An adversary might infer it from the stable IPv6 address that is
assigned in addition to temporary addresses or from the MAC address. 17 bit
of this identiﬁer are ﬁxed and thus the same for all nodes anyway.
In conclusion, there is no entropy added per iteration and this fact makes
prediction of future identiﬁers easier as there are less possibilities. The only
unpredictable component of the presented algorithm is the very ﬁrst history
value of 64 bit that should “be generated using techniques that help ensure the
initial value is hard to guess” [7].
(4) Partial Disclosure of Digest: A temporary interface identiﬁer is gen-
erated by taking “the leftmost 64-bits of the MD5 digest and set bit 6 [...] to
zero” [7]. The gained interface identiﬁer forms a temporary IPv6 address when
combined with the current network preﬁx. The address is present in packets’
address ﬁelds and accessible by others.
As a consequence, an eavesdropper gains 63 bit (one bit is overwritten with
zero as mentioned above) of the calculated MD5 digest. This eavesdropped part
does not present the algorithm’s internal state, i.e., the history value, but both
are part of the same MD5 digest. In conclusion, 63 bit of every iteration’s MD5
digest is readily available to outsiders without any further processing eﬀort and
form a side channel of the algorithm’s internal state. The algorithm leaks infor-
mation but does not add entropy in an iteration.
6 Attack Design
We will now explain the steps of our attack in detail. We will include the char-
acteristics that have been found in the security analysis of Sect. 5. In a ﬁrst step,
we will analyse the predictability of future addresses if the current state (history
value) is known. As this turns out to be promising, we investigate methods to
gain the current state. Finally, we summarize our full attack.
Predictability of Future Identiﬁers: For rather unambiguous prediction of
future temporary identiﬁers, two requirements have to be met. First, future
identiﬁers have to be dependent on the current state of the algorithm. Second,
the calculation of the next identiﬁer should include little randomness. The less
random input, the better predictability.
We know from the previous section that both conditions apply to the IPv6
privacy extension: Interface identiﬁers are based on concatenated hashes. A part
of the digest is used for the identiﬁer, the other is called the history value and
used as an input for the next calculation. An iteration’s input is twofold – the
mentioned history value and the interface identiﬁer in modiﬁed EUI-64 format
that is inferred from the MAC address. This means that there are no unpre-
dictable components that are included. In conclusion, an adversary that is aware