audit events each time a packet matches it, but the action as-
sociated with that rule (allow or deny) will be ignored.
Audit is also very useful for “discovering” policy. For
example, to identify the network services that a particular
host requires to boot up and log on users to the net, we can
push an “allow but audit” policy to its EFW NIC. Then we
reboot the host and watch the audit logs. A network monitor
would perform a similar function.
Challenges. EFW is not immune to the policy manage-
ment challenges that face other packet ﬁlters, and the lim-
ited resources of the NIC make overcoming these chal-
lenges even more difﬁcult. For example, port mapping pro-
tocols, i.e., protocols that start on a well-known port then
negotiate a higher, random port to complete the session, re-
quire the ﬁrewall to maintain some state about the session.
Protocols that use a well-known control port and a random
data port (e.g., FTP and some streaming media protocols)
are similarly challenging. We are examining alternatives for
solving this problem for EFW. Fortunately, the challenge
exists only if we need to speciﬁcally allow these protocols
while denying everything else.
If we want to deny these
protocols, we can deny the connection to their well-known
ports.
Opportunities. Managing policy for a distributed ﬁrewall
like EFW is not simply a matter of moving the perimeter
ﬁrewall’s policy to each endpoint EFW device. Consider
the following policy:
Allow HTTP requests from a speciﬁc client to a
speciﬁc web server.
On a traditional ﬁrewall, this policy might be stated as a sin-
gle rule (see Table 1), where a rule is stated in the form (ac-
tion, protocol, port, source, destination). We assume that
trafﬁc is permitted in both directions.
(Allow, TCP, 80, client, web server
Table 1. Traditional Firewall
Placing this rule on both the EFW for the client and the
EFW for the web server would be redundant, and if it was
the only rule enforced by either EFW, it would probably
be overly restrictive. More likely, the policy writer would
choose to distribute the policy between the two devices,
such as illustrated in Table 2. However, the same effect
could be achieved by distributing the policy as in Table 3. In
both tables, the web server is restricted to processing HTTP
requests. However in Table 2, the client may make other
requests, while in Table 3, the client is restricted to HTTP
requests.
for host client
(Allow, *, *, client, *)
for host web server
(Allow, TCP, 80, *, web server)
Table 2. EFW — Option 1
for host client
(Allow, TCP, 80, client, *)
for host web server
(Allow, TCP, 80, *, web server)
Table 3. EFW — Option 2
Tables 2 and 3 express different policies from each other
and from Table 1; however, the differences are only evident
when we express the policies for EFW. The traditional ﬁre-
wall policy did not specify the behavior of the client and
the web server beyond HTTP requests ﬂowing through the
perimeter ﬁrewall. For a particular site, these distinctions
may be important, and EFW helps us to make them. EFW
lets the administrator state policies far more precisely.
5. EFW Applications
While EFW can certainly handle applications conceived
for traditional, packet-ﬁltering ﬁrewalls, its real power lies
in applications that are either not possible or not feasible
using traditional ﬁrewalls. This section describes several
useful applications that we have encountered. Each appli-
cation forms a building block that can be used to construct
even more interesting applications.
No snifﬁng, no spooﬁng. One of the most signiﬁcant ap-
plications for EFW is its ability to enforce good network
hygiene. In general, a host should not be able to sniff other
network trafﬁc or spoof its IP address to other hosts. Many
network attacks rely on one or both behaviors. Distributed
denial of service attacks, for example, direct zombies to
ﬂood the victim host with spoofed service requests. EFW
can prevent the NIC’s untrusted driver from placing the NIC
in promiscuous mode, and it can also prevent any packet
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:01 UTC from IEEE Xplore.  Restrictions apply. 
from leaving the host that is not tagged with a valid IP ad-
dress for that host.
Lock down the host. One of the biggest problems for IT
personnel is keeping up with the security patches that must
be installed. Often these patches are for services that are
installed by default when the operating system is installed.
Sometimes the services are network services that the user
should not be invoking anyway. Rather than manually re-
conﬁguring each host to disable the service, EFW can pre-
vent the service from being available.
Another problem is users who conﬁgure their hosts in vi-
olation of the organization’s security policy. For example,
most network administrators prefer that users share ﬁles us-
ing an IT-maintained resource. However, a user can easily
conﬁgure the typical PC to share ﬁles from the local disk.
EFW can prevent this behavior by preventing ﬁle access re-
quests from reaching the host.
Servers are not clients. Dedicated servers should not per-
form certain functions normally reserved for clients, such
as sending email, making web requests and so on. The
NIMDA worm, for example, relies on this behavior to prop-
agate. For TCP-based services, the easiest defense is to pre-
vent the host from initiating TCP connections to other hosts.
EFW can prevent unauthorized, outgoing TCP connection
initiation requests from ever reaching the network.
Clients are not servers. Similarly, client hosts should not
respond to service requests from other hosts. For TCP-
based services, EFW can prevent unauthorized, incoming
TCP connection initiation requests from ever reaching the
host.
Stay in your own backyard. With the exceptions of web
and certain related trafﬁc (FTP, streaming media, etc.),
client hosts obtain most network services from dedicated
LAN (local area network) servers. For example, it is typi-
cally not necessary for a user to access any DNS or SMTP
server other than the one assigned by IT. To accomplish this
goal, EFW can allow limited “external” requests, then re-
strict all other trafﬁc to the local subnet.
Don’t talk to strangers.
If a particular network service,
e.g., DNS, should be provided only by a speciﬁc server or
group of servers, then EFW can restrict access to that ser-
vice on only that server or group of servers.
Emergency rule set. This very useful application utilizes
the rule set feature of the EFW policy server. Rule sets are
included in policies by reference, not by value, so a change
in the rule set propagates to all affected policies. Using this
capability, an administrator can deﬁne an emergency rule set
to be included in all policies. If a network attack is detected
that requires a particular service port, the administrator can
add a rule to the emergency rule set denying that port. With
a click of a single button, the administrator can distribute
this new restriction to all EFW NICs in the EFW policy
domain.
Shared server. Business-to-business communications re-
quire an infrastructure for sharing information. Extranets
are the common solution, but extranets are expensive to im-
plement. EFW enables a lightweight, cheaper alternative:
the shared server.
A single host with two EFW NICs is placed where it
is accessible by both organizations. The organization that
hosts the server controls both EFW NICs. We assume that
both organizations may have administrator privileges to the
server. The EFW NIC that is attached to the controlling
organization’s LAN prevents the shared server from initiat-
ing unauthorized communication on the LAN and snifﬁng
trafﬁc on the LAN. The EFW NIC that is attached to the In-
ternet allows only protected communications with the busi-
ness partner. The business partner can enter and access the
shared server, but it is unable to exit out the “other side”.
6. Future Work
As we gain more experience with EFW, we envision ap-
plications will require features not yet present in the archi-
tecture. For example, through our DARPA-sponsored re-
search programs, we are currently investigating tie-ins to in-
trusion detection and response systems and using the EFW
NICs to provide load sharing within server clusters.
Another important area of investigation is a technology
we call virtual private groups (VPG) [2]. Like a virtual
private network (VPN), a VPG establishes a community of
interest that is not restricted by network topology. Unlike
the VPN, however, which establishes only pairwise rela-
tionships between the communicating entities, the VPG es-
tablishes group-wide relationships. The VPG architecture
signiﬁcantly simpliﬁes key management for hosts within the
group and makes management of secure group communica-
tions practical. When it is available, VPG technology will
enable organizations to quickly set up, use, and then tear
down secure group communications for wireless LANs and
collaboration tools.
The VPG technology will also be an important cata-
lyst for ensuring that network communication occurs only
through EFW NICs (see the ﬁrst assumption under Claim 2
in Section 2.1). If all hosts belong to one or more VPGs,
and if network services are available only to members of
the appropriate VPG, then only EFW NICs will be able to
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:01 UTC from IEEE Xplore.  Restrictions apply. 
access network services. The attacker who attempts to ac-
cess the network with an unsecured NIC will be completely
thwarted.
[7] A. White. New trojan disables ﬁrewall defences. Network
News, May 2001.
7. Summary
We have described a distributed, embedded ﬁrewall
called EFW that is implemented on the host’s network in-
terface card.
In addition, we have discussed several use-
ful and unique applications for EFW. EFW can be used to
lock down critical assets, such as corporate web servers,
databases and administrative workstations, and it can be
used to lock down critical services, such as DHCP, DNS and
so forth. It lets the administrator easily control unnecessary
capabilities on the network. Finally, EFW demonstrates that
ﬁner-grained network access control is possible and practi-
cal. Together with the perimeter ﬁrewall, it forms a strong
line of network defense.
8. Acknowledgments
The authors are grateful for the ﬁnancial support of the
US Defense Advanced Research Projects Agency. This
paper reﬂects work performed under the Releasable Data
Products Framework program (Contract no. F30602-99-C-
0125, administered by the Air Force Research Laboratory)
and the Autonomic Distributed Firewall program (Contract
no. N66001-00-C-8031, administered by the Space and
Naval Warfare Systems Center). The authors also wish to
thank the anonymous reviewers for their helpful and in-
sightful comments.
References
[1] S. M. Bellovin. Distributed ﬁrewalls. ;login:, pages 37–39,
November 1999.
[2] M. Carney, B. Hanzlik, and T. Markham. Virtual private
groups. In Network and Distributed System Security Sympo-
sium, February 2002. Submitted for publication.
[3] S. Ioannidis, A. D. Keromytis, S. M. Bellovin, and J. M.
Smith. Implementing a distributed ﬁrewall. In 7th ACM Con-
ference on Computer and Communications Security, Athens,
GREECE, November 2000. ACM.
[4] T. Markham and C. Payne. Security at the network edge: A
distributed ﬁrewall architecture. In DISCEX II, Anaheim, CA,
June 2001. DARPA, IEEE.
[5] D. Nessett and P. Humeen. The multilayer ﬁrewall.
In
Network and Distributed System Security Symposium, March
1998.
[6] C. N. Payne, J. N. Froscher, and C. E. Landwehr. Toward
a comprehensive INFOSEC certiﬁcation methodology.
In
Proceedings of the 16th National Computer Security Con-
ference, pages 165–172, Baltimore, MD, September 1993.
NIST/NSA.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:06:01 UTC from IEEE Xplore.  Restrictions apply.