::: section
::: titlepage
# []{#configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm_managing-smart-card-authentication.html#copying-certificates-from-active-directory-using-sftp_configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm}使用 sftp 从 Active Directory 复制证书 {.title}
:::
要能够使用智能卡验证，您需要复制以下证书文件：
::: itemizedlist
-   `CER`{.literal} 格式的根 CA 证书：IdM
    `服务器上的 adcs-winserver-ca.cer`{.literal}。
-   具有 `PFX`{.literal} 格式私钥的用户证书：IdM 客户端上的
    `aduser1.pfx`{.literal}。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这个过程预期 SSH 访问是允许的。如果 SSH 不可用，用户必须将 文件从 AD
服务器复制到 IdM 服务器和客户端。
:::
::: orderedlist
**流程**
1.  从 [**IdM 服务器**]{.strong} 连接，并将
    `adcs-winserver-ca.cer`{.literal} root 证书复制到 IdM 服务器：
    ``` literallayout
    root@idmserver ~]# sftp PI:EMAIL
    PI:EMAIL's password:
    Connected to Administrator@winserver.ad.example.com.
    sftp> cd 
    sftp> ls
    adcs-winserver-ca.cer    aduser1.pfx
    sftp>
    sftp> get adcs-winserver-ca.cer
    Fetching /adcs-winserver-ca.cer to adcs-winserver-ca.cer
    /adcs-winserver-ca.cer                 100%  1254    15KB/s 00:00
    sftp quit
    ```
2.  从 [**IdM 客户端**]{.strong} 连接，并将 `aduser1.pfx`{.literal}
    用户证书复制到客户端：
    ``` literallayout
    [root@client1 ~]# sftp PI:EMAIL
    PI:EMAIL's password:
    Connected to Administrator@winserver.ad.example.com.
    sftp> cd /
    sftp> get aduser1.pfx
    Fetching /aduser1.pfx to aduser1.pfx
    /aduser1.pfx                 100%  1254    15KB/s 00:00
    sftp quit
    ```
:::
现在，CA 证书保存在 IdM 服务器中，用户证书存储在客户端机器中。
:::
::: section
::: titlepage
# []{#configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm_managing-smart-card-authentication.html#configuring-the-idm-server-and-clients-for-smart-card-authentication-using-adcs-certificates_configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm}使用 ADCS 证书为智能卡验证配置 IdM 服务器和客户端 {.title}
:::
您必须配置 IdM（身份管理）服务器和客户端，以便在 IdM
环境中使用智能卡验证。IdM 包含进行所有必要更改的 `ipa-advise`{.literal}
脚本：
::: itemizedlist
-   安装所需的软件包
-   它配置 IdM 服务器和客户端
-   将 CA 证书复制到预期的位置
:::
您可以在 IdM 服务器中运行 `ipa-advise`{.literal}。
这个步骤描述了：
::: itemizedlist
-   在 IdM 服务器中：准备 `ipa-advise`{.literal} 脚本，为智能卡验证配置
    IdM 服务器。
-   在 IdM 服务器中：准备 `ipa-advise`{.literal} 脚本，以配置 IdM
    客户端以进行智能卡验证。
-   在 IdM 服务器中：使用 AD 证书应用 IdM 服务器上的
    `ipa-advise`{.literal} 服务器脚本。
-   将客户端脚本移动到 IdM 客户端机器中。
-   在 IdM 客户端上：使用 AD 证书在 IdM 客户端上应用
    `ipa-advise`{.literal} 客户端脚本。
:::
::: itemizedlist
**先决条件**
-   证书已复制到 IdM 服务器。
-   获取 Kerberos 票据。
-   以具有管理权限的用户身份登录。
:::
::: orderedlist
**流程**
1.  在 IdM 服务器上，使用 `ipa-advise`{.literal} 脚本来配置客户端：
    ``` literallayout
    [root@idmserver ~]# ipa-advise config-client-for-smart-card-auth > sc_client.sh
    ```
2.  在 IdM 服务器上，使用 `ipa-advise`{.literal} 脚本来配置服务器：
    ``` literallayout
    [root@idmserver ~]# ipa-advise config-server-for-smart-card-auth > sc_server.sh
    ```
3.  在 IdM 服务器中执行脚本：
    ``` literallayout
    [root@idmserver ~]# sh -x sc_server.sh adcs-winserver-ca.cer
    ```
    ::: itemizedlist
    -   它配置 IdM Apache HTTP 服务器。
    -   它在 KDC（Key Distribution Center）中启用 PKINIT（Public Key
        Cryptography for Initial Authentication in Kerberos）。
    -   它将 IdM Web UI 配置为接受智能卡授权请求。
    :::
4.  将 `sc_client.sh`{.literal} 脚本复制到客户端系统中：
    ``` literallayout
    [root@idmserver ~]# scp sc_client.sh PI:EMAIL:/root
    Password:
    sc_client.sh                  100%  2857   1.6MB/s   00:00
    ```
5.  将 Windows 证书复制到客户端系统中：
    ``` literallayout
    [root@idmserver ~]# scp adcs-winserver-ca.cer PI:EMAIL:/root
    Password:
    adcs-winserver-ca.cer                 100%  1254   952.0KB/s   00:00
    ```
6.  在客户端系统中运行客户端脚本：
    ``` literallayout
    [root@idmclient1 ~]# sh -x sc_client.sh adcs-winserver-ca.cer
    ```
:::
CA 证书以正确格式安装在 IdM
服务器和客户端系统中，下一步是将用户证书复制到智能卡本身。
:::
::: section
::: titlepage
# []{#configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm_managing-smart-card-authentication.html#converting-the-pfx-file_configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm}转换 PFX 文件 {.title}
:::
在将 PFX(PKCS#12)文件保存到智能卡中前，您必须：
::: itemizedlist
-   将文件转换为 PEM 格式
-   将私钥和证书提取到两个不同的文件
:::
::: itemizedlist
**先决条件**
-   PFX 文件被复制到 IdM 客户端机器中。
:::
::: orderedlist
**流程**
1.  在 IdM 客户端中，采用 PEM 格式：
    ``` literallayout
    [root@idmclient1 ~]# openssl pkcs12 -in aduser1.pfx -out aduser1_cert_only.pem -clcerts -nodes
    Enter Import Password:
    ```
2.  将密钥提取到单独的文件中：
    ``` literallayout
    [root@idmclient1 ~]# openssl pkcs12 -in adduser1.pfx -nocerts -out adduser1.pem > aduser1.key
    ```
3.  将公共证书提取到单独的文件中：
    ``` literallayout
    [root@idmclient1 ~]# openssl pkcs12 -in adduser1.pfx -clcerts -nokeys -out aduser1_cert_only.pem > aduser1.crt
    ```
:::
此时，您可以将 `aduser1.key`{.literal} 和 `aduser1.crt`{.literal}
存储在智能卡中。
:::
::: section
::: titlepage
# []{#configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm_managing-smart-card-authentication.html#installing-tools-for-managing-and-using-smart-cards_configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm}安装用来管理和使用智能卡的工具 {.title}
:::
要配置智能卡，您需要一些工具来生成证书并将其保存在智能卡中。
您必须：
::: itemizedlist
-   安装 `gnutls-utils`{.literal} 软件包，帮助您管理证书。
-   安装 `opensc`{.literal} 软件包，它提供一组库和实用工具来使用智能卡。
-   启动与智能卡读取器通信的 `pcscd`{.literal} 服务。
:::
::: orderedlist
**流程**
1.  安装 `opensc`{.literal} 和 `gnutls-utils`{.literal} 软件包：
    ``` literallayout
    # dnf -y install opensc gnutls-utils
    ```
2.  启动 `pcscd`{.literal} 服务。
    ``` literallayout
    # systemctl start pcscd
    ```
:::
验证 `pcscd`{.literal} 服务是否已启动并在运行。
:::
::: section
::: titlepage
# []{#configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm_managing-smart-card-authentication.html#storing-a-certificate-on-the-smart-card_configuring-certificates-issued-by-adcs-for-smart-card-authentication-in-idm}在智能卡中存储证书 {.title}
:::
本节论述了使用 `pkcs15-init`{.literal} 工具配置智能卡，帮助您配置：
::: itemizedlist
-   擦除智能卡
-   设置新的 PIN 和可选的 PIN Unblocking Keys（PUKs）
-   在智能卡上创建新插槽
-   在插槽存储证书、私钥和公钥
-   锁定智能卡设置（有些智能卡需要这种类型）
:::
::: itemizedlist
**先决条件**
-   已安装 `opensc`{.literal} 软件包，其中包含 `pkcs15-init`{.literal}
    工具。
    详情请查看[安装用于管理和使用智能卡的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth){.link}。
-   该卡插入读卡器并连接到计算机。
-   您有可保存在智能卡中的私钥、公钥和证书。在此过程中，`testuser.key`{.literal}、`testuserpublic.key`{.literal}
    和 `testuser.crt`{.literal} 是用于私钥、公钥和证书的名称。
-   您当前的智能卡用户 PIN 和 Security Officer PIN（SO-PIN）
:::
::: orderedlist
**流程**
1.  擦除智能卡并使用您的 PIN 验证自己：
    ``` literallayout
    $ pkcs15-init --erase-card --use-default-transport-keys
    Using reader with a card: Reader name
    PIN [Security Officer PIN] required.
    Please enter PIN [Security Officer PIN]:
    ```
    这个卡已经被清除。
2.  初始化智能卡，设置您的用户 PIN 和 PUK，以及您的安全响应 PIN 和 PUK：
    ``` literallayout
    $ pkcs15-init --create-pkcs15 --use-default-transport-keys \
        --pin 963214 --puk 321478 --so-pin 65498714 --so-puk 784123
    Using reader with a card: Reader name
    ```
    `pcks15-init`{.literal} 工具在智能卡上创建新插槽。
3.  为插槽设置标签和验证 ID：
    ``` literallayout
    $ pkcs15-init --store-pin --label testuser \
        --auth-id 01 --so-pin 65498714 --pin 963214 --puk 321478
    Using reader with a card: Reader name
    ```
    标签设置为人类可读值，本例中为
    `testuser`{.literal}。`auth-id`{.literal}
    必须是两个十六进制值，在本例中设为 `01`{.literal}。
4.  在智能卡的新插槽中存储并标记私钥：
    ``` literallayout
    $ pkcs15-init --store-private-key testuser.key --label testuser_key \
        --auth-id 01 --id 01 --pin 963214
    Using reader with a card: Reader name
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您为 `--id`{.literal}