-ip package_name, where package_name is the name of your package.
To exclude a package from trace for a process, run the executable JAR file with the options -i
identifier -ep package_name.
IBM MQ troubleshooting and support 435
Note: You can use multiple -ip and -ep options. These options are not checked for consistency.
When you specify a package for exclusion or inclusion, the handling of packages that have matching
prefixes is not affected. For example, excluding the package com.ibm.mq.jms from trace would not
exclude com.ibm.mq, com.ibm.msq.client.jms, or com.ibm.mq.remote.api, but it would exclude
com.ibm.mq.jms.internal.
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -list
10008 : 'MQSample'
9004 : ' MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -list'
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-status
Tracing enabled : false
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjakarta.trc
Package Include/Exclude tree
root - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-enable
Enabling trace
Tracing enabled : true
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-status
Tracing enabled : true
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjakarta_10008.trc
Package Include/Exclude tree
root - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-ip com.ibm.mq.jakarta.jms
Adding 'com.ibm.mq.jakarta.jms' to the list of packages included in trace
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-status
Tracing enabled : true
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjakarta_10008.trc
Package Include/Exclude tree
root - Included
com - Included
ibm - Included
mq - Included
jakarta - Included
jms - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-ip com.acme.banana -ep com.acme.banana.split -ip com.acme.banana.shake
Adding 'com.acme.banana' to the list of packages included in trace
Adding 'com.acme.banana.shake' to the list of packages included in trace
Adding 'com.acme.banana.split' to the list of packages excluded from trace
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.jakarta.client.jar -traceControl -i 10008
-status
Tracing enabled : true User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjakarta_10008.trc
Package Include/Exclude tree
root - Included
com - Included
acme - Included
banana - Included
shake - Included
split - Excluded
ibm - Included
mq - Included
jakarta - Included
jms - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -list
10008 : 'MQSample'
9004 : ' MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -list'
436 Troubleshooting and Support for IBM MQ
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008
-status
Tracing enabled : false
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjms.trc
Package Include/Exclude tree
root - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008
-enable
Enabling trace
Tracing enabled : true
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008
-status
Tracing enabled : true
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjms_10008.trc
Package Include/Exclude tree
root - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008 -ip
com.ibm.mq.jms
Adding 'com.ibm.mq.jms' to the list of packages included in trace
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008
-status
Tracing enabled : true
User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjms_10008.trc
Package Include/Exclude tree
root - Included
com - Included
ibm - Included
mq - Included
jms - Included
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008 -ip
com.acme.banana -ep com.acme.banana.split -ip com.acme.banana.shake
Adding 'com.acme.banana' to the list of packages included in trace
Adding 'com.acme.banana.shake' to the list of packages included in trace
Adding 'com.acme.banana.split' to the list of packages excluded from trace
C:>java -jar MQ_INSTALLATION_PATH/java/lib/com.ibm.mq.allclient.jar -traceControl -i 10008
-status
Tracing enabled : true User Directory : C:\Users\IBM_ADMIN\RTCworkspace\sandpit
Trace File Name : mqjms_10008.trc
Package Include/Exclude tree
root - Included
com - Included
acme - Included
banana - Included
shake - Included
split - Excluded
ibm - Included
mq - Included
jms - Included
The package inclusion-exclusion tree
The tracing mechanism for IBM MQ classes for Java and IBM MQ classes for JMS tracks the inclusion and
exclusion of packages by means of a tree structure, starting from a root node. In the tree structure each
node represents one element of a package name, identified by the package name element and containing
a trace status which can be either Included or Excluded. For example the package com.ibm.mq would
be represented by three nodes identified by the strings com, ibm, and mq.
Initially, the tree usually contains entries to include most packages, but the header and pcf packages are
excluded as they generate a lot of noise. So the initial tree will look something like this
root - Included
com - Included
ibm - Included
mq - Included
IBM MQ troubleshooting and support 437
headers - Excluded
pcf - Excluded
When the trace facility is determining whether to include or exclude a package, it matches leading
portions of the package name to the nodes in the tree as far as possible and takes the status
of the last matched node. At the initial state of the tree, the packages com.ibm.msg.client
and com.ibm.mq.jms would be included, as the last nodes in the tree that matches them
(com->ibm and com->ibm->mq respectively) are marked as Included. Conversely, the package
com.ibm.headers.internal would be excluded as the last matching node in the tree (com->ibm-
>mq->headers) is marked as Excluded.
As further changes are made to the tree by using the com.ibm.mq.TraceControl.jar, it is important
to remember that inclusion or exclusion only affects a package and child packages. So, given the initial
state that is shown previously, specifying -ep com.ibm.mq.jms, would update the tree to look like this:
root - Included
com - Included
ibm - Included
mq - Included
headers - Excluded
jms - Excluded
pcf - Excluded
This update would exclude packages com.ibm.mq.jms, and com.ibm.mq.jms.internal, without
affecting packages outside the com.ibm.mq.jms.* hierarchy.
If -ip com.ibm.mq.jms.admin is specified next, the tree would look like this:
root - Included
com - Included
ibm - Included
mq - Included
headers - Excluded
jms - Excluded
admin - Included
pcf - Excluded
This update would still exclude packages com.ibm.mq.jms, com.ibm.mq.jms.internal, but now the
packages com.ibm.mq.jms.admin, and com.ibm.mq.jms.admin.internal are included in trace.
Connecting remotely
You can connect remotely only if the process was started with a JMX agent that is enabled for remote
connection, and that uses the -Dcom.sun.management.jmxremote.port=port_number system
setting.
After you have started with this system setting, you can run the executable JAR file with the options -h
host_name -p port_number in place of the -i identifier option, where host_name is the name of
the host you want to connect to and port_number is the name of the port to be used.
Note: You must ensure that you take appropriate steps to minimize security risks by enabling TLS for the
connection. See the Oracle documentation on JMX for further details https://www.oracle.com.
Limitations
The following limitations exist:
• For non-IBM JVMs, the tool must be started with tools.jar added to its class path. The command
that is on these platforms is :
java -cp MQ_INSTALL_DIR/java/lib/com.ibm.mq.traceControl.jar;JAVA_HOME/lib/tools.jar
com.ibm.msg.client.commonservices.trace.TraceController
438 Troubleshooting and Support for IBM MQ
• Local attach is controlled by user ID. The tool must be run under the same ID as the process that is to
be controlled.
Tracing the IBM MQ resource adapter
The ResourceAdapter object encapsulates the global properties of the IBM MQ resource adapter. To
enable trace of the IBM MQ resource adapter, properties need to be defined in the ResourceAdapter
object.
About this task
The ResourceAdapter object has two sets of properties:
• Properties associated with diagnostic tracing
• Properties associated with the connection pool managed by the resource adapter
The way you define these properties depends on the administration interfaces provided by your
application server.
Table 31 on page 439 lists the properties of the ResourceAdapter object that are associated with
diagnostic tracing.
Table 31. Properties of the ResourceAdapter object that are associated with diagnostic tracing
Name of property Type Default value Description
traceEnabled String false A flag to enable or disable diagnostic tracing. If the
value is false, tracing is turned off.
traceLevel String 3 The level of detail in a diagnostic trace. The value can
be in the range 0, which produces no trace, to 10,
which provides the most detail. See Table 32 on page
439 for a description of each level. If trace is enabled,
traceLevel should be set to the value 10, unless
otherwise specified by IBM Support.
logWriterEnabled String true A flag to enable or disable the sending of a diagnostic
trace to a LogWriter object provided by the application
server. If the value is true, the trace is sent to a
LogWriter object. If the value is false, any LogWriter
object provided by the application server is not used.
Table 32 on page 439 describes the levels of detail for diagnostic tracing.
Table 32. The levels of detail for diagnostic tracing
Level
number Level of detail
0 No trace.
1 The trace contains error messages.
3 The trace contains error and warning messages.
6 The trace contains error, warning, and information messages.
8 The trace contains error, warning, and information messages, and entry and exit information
for methods.
9 The trace contains error, warning, and information messages, entry and exit information for
methods, and diagnostic data.
10 The trace contains all trace information.
IBM MQ troubleshooting and support 439
Note: Any level that is not included in this table is equivalent to the next lowest level. For example,
specifying a trace level of 4 is equivalent to specifying a trace level of 3. However, the levels that are not
included might be used in future releases of the IBM MQ resource adapter, so it is better to avoid using
these levels.
If diagnostic tracing is turned off, error and warning messages are written to the system error stream. If
diagnostic tracing is turned on, error messages are written to the system error stream and to the trace
destination, but warning messages are written only to the trace destination. However, the trace contains
warning messages only if the trace level is 3 or higher. By default, the trace destination is the current
working directory, but if the logWriterEnabled property is set, the trace is sent to the application server.
In general, the ResourceAdapter object requires no administration. However, you can enable diagnostic
tracing on AIX and Linux systems for example, by setting properties.
Procedure
• To enable diagnostic tracing on AIX and Linux systems for example, you can set the following
properties:
traceEnabled: true
traceLevel: 10
These properties have no effect if the resource adapter has not been started, which is the case,
for example, when applications using IBM MQ resources are running only in the client container. In
this situation, you can set the properties for diagnostic tracing as Java virtual machine (JVM) system
properties. You can set the properties by using the -D flag on the java command, as in the following
example:
java ... -DtraceEnabled=true -DtraceLevel=10
Hints and tips:
– You do not need to define all the properties of the ResourceAdapter object. Any properties that
remain unspecified take their default values.
– In a managed environment, it is better not to mix the two ways of specifying properties. If you do
mix them, the JVM system properties take precedence over the properties of the ResourceAdapter
object.
– When using WebSphere Application Server traditional 9.0 with the IBM MQ 9.0 resource adapter, as
the Java EE Dependency Injection is a common Java EE paradigm, the standard trace string should
be updated to include com.ibm.ws.cdi.jms*=all. This means that the full string is:
*=info:jmsApi=all:Messaging=all:com.ibm.mq.*=all:JMSApi=all:com.ibm.ws.cdi.jms*=all
For more information about using trace with WebSphere Application Server traditional, see the
technote Enabling Java Message Service (JMS) trace for WebSphere Application Server.
Tracing additional IBM MQ Java components
For Java components of IBM MQ, for example the IBM MQ Explorer and the Java implementation of IBM
MQ Transport for SOAP, diagnostic information is output using the standard IBM MQ diagnostic facilities or
by Java diagnostic classes.
Diagnostic information in this context consists of trace, first-failure data capture (FFDC) and error
messages.
You can choose to have this information produced using IBM MQ facilities or the facilities of IBM MQ
classes for Java or IBM MQ classes for JMS, as appropriate. Generally use the IBM MQ diagnostic facilities
if they are available on the local system.
You might want to use the Java diagnostics in the following circumstances:
440 Troubleshooting and Support for IBM MQ
• On a system on which queue managers are available, if the queue manager is managed separately from
the software you are running.
• To reduce performance effect of IBM MQ trace.
To request and configure diagnostic output, two system properties are used when starting an IBM MQ
Java process:
• System property com.ibm.mq.commonservices specifies a standard Java property file, which
contains a number of lines which are used to configure the diagnostic outputs. Each line of code in the
file is free-format, and is terminated by a new line character.
• System property com.ibm.mq.commonservices.diagid associates trace and FFDC files with
the process which created them.
For information about using the com.ibm.mq.commonservices properties file to configure diagnostics
information, see “Using com.ibm.mq.commonservices” on page 441.
For instructions on locating trace information and FFDC files, see “Java trace and FFDC files” on page
442.
Related concepts
“Tracing TLS: runmqakm, strmqikm, and runmqckm functions” on page 466
How to trace Transport Layer Security (TLS), and request runmqakm tracing and strmqikm (iKeyman) and
runmqckm (iKeycmd) tracing.
Related tasks
“Tracing on Windows” on page 391
On Windows, you can use the strmqtrc and endmqtrc commands to start and end tracing. You can also
use IBM MQ Explorer to start and end tracing.