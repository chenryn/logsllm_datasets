#BHUSA @BlackHatEvents
Living Off the Walled Garden: 
Abusing the Features of the Early Launch 
Antimalware Ecosystem
Matt Graeber
Director, Threat Research @ Red Canary
#BHUSA @BlackHatEvents
Information Classification: General
Who protects the protector?
Introduction to ELAM and PPL
#BHUSA @BlackHatEvents
Information Classification: General
Previous work - Everything is derivative
Thank you James 
and Alex!
#BHUSA @BlackHatEvents
Information Classification: General
Protected Process Light Protections
● Designed to prevent tampering in user-mode, even as admin.
● Cannot start or stop protected processes
● Cannot get a handle to a protected process
● Cannot attach a debugger to a protected process
● To run protected, an executable must meet specific signing 
requirements.
#BHUSA @BlackHatEvents
Information Classification: General
Early Launch AntiMalware (ELAM) Drivers
● Microsoft’s supported 3rd party security product anti-tampering 
mechanism.
● Specifies certificate hashes allowed to run at the Antimalware-
Light PPL protection level
● “Microsoft requires that Early Launch Antimalware vendors be 
members of the Microsoft Virus Initiative (MVI).”
● Vendors must pass the WHQL driver submission.
#BHUSA @BlackHatEvents
Information Classification: General
Enumerating installed ELAM drivers
#BHUSA @BlackHatEvents
Information Classification: General
Early Launch Antimalware (ELAM) Driver Hashes
● Certificate hashes are To-Be-Signed (TBS) hashes.
● TBS hash is not the same as a Thumbprint!
● Tools to calculate TBS hash:
○ certmgr.exe (Windows SDK)
○ Get-TBSHash
● VirusTotal doesn’t understand TBS hashes…
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Driver Signer Resource
MicrosoftElamCertificateInfo
MSElamCertInfoID
{
3, // count of entries
L”CertHash1\0”,
Algorithm,
L”EKU1\0”,
L”CertHash2\0”,
Algorithm,
L”\0”, //No EKU for cert hash 2
L”CertHash3\0”,
Algorithm,
L”EKU3a;EKU3b;EKU3c\0”,  //multiple EKU entries supported (max: 3)
}
Protecting anti-malware services
#BHUSA @BlackHatEvents
Information Classification: General
An Example Parsed ELAM Ruleset - WdBoot.sys
● Allow Rule #1
SignerHash: 
f6f717a43ad9abddc8cefdde1c505462535e7d1307e630f9544a2d14fe8bf26e
SignerHashAlgorithm: SHA256
SignerEKUs: 1.3.6.1.4.1.311.76.8.1;1.3.6.1.4.1.311.76.11.1
● Allow Rule #2
SignerHash: 
4e80be107c860de896384b3eff50504dc2d76ac7151df3102a4450637a032146
SignerHashAlgorithm: SHA256
SignerEKUs: 1.3.6.1.4.1.311.76.8.1;1.3.6.1.4.1.311.76.11.1
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Ruleset - WdBoot.sys
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Ruleset - WdBoot.sys
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Ruleset - WdBoot.sys
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Ruleset - WdBoot.sys
PsProtectedSignerAntimalware = 0n3
#BHUSA @BlackHatEvents
Information Classification: General
ELAM is an allowlist for 
Antimalware-Light PPL 
process execution.
What if the allowlist is overly 
permissive?
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Driver Hunting and Auditing
#BHUSA @BlackHatEvents
Information Classification: General
Hunting for ELAM drivers
VirusTotal search:
signature:"Microsoft Windows Early Launch 
Anti-malware Publisher"
tag:native tag:signed tag:peexe
not tag:invalid-signature
#BHUSA @BlackHatEvents
Information Classification: General
Additional ELAM driver validation
● Confirm the ELAM driver has a valid signature
● The name of the leaf certificate is "Microsoft Windows Early 
Launch Anti-malware Publisher"
● The driver has a MSELAMCERTINFOID resource consisting of a 
parsed signer allow list.
● 866     766 unique ELAM drivers
#BHUSA @BlackHatEvents
Information Classification: General
Identified ELAM Vendors
●
Microsoft Corporation
●
McAfee, LLC
●
VMware, Inc.
●
Total Defense, Inc.
●
●
COMODO
●
Broadcom Corporation
●
CrowdStrike, Inc.
●
Bitdefender
●
AO Kaspersky Lab
●
ESET
●
AVG Technologies CZ, s.r.o.
●
AVAST Software
●
Cisco Systems, Inc.
●
AhnLab, Inc.
●
Windows (R) Win 7 DDK provider
●
F-Secure Corporation
●
Trend Micro Inc.
●
Carbon Black, Inc.
●
K7 Computing Pvt Ltd
●
Sophos Limited
●
ESTsecurity Corp.
●
Panda Security, S.L.
●
Malwarebytes
●
Broadcom
●
Avira Operations GmbH & Co. KG
●
360.cn
●
Doctor Web, Ltd.
●
Beijing Rising Network Security Technology Co., Ltd.
●
Cynet Security Ltd
●
TODO: 
●
Fortinet Inc
●
IKARUS Security Software GmbH
●
Beijing Huorong Network Technology Co., Ltd.
●
ThreatTrack Security, Inc.
●
Acronis International GmbH
●
BullGuard Ltd.
●
Arcabit/mks_vir
●
FireEye, Inc.
●
Check Point Software Technologies
●
Symantec Corporation
●
Quick Heal Technologies Ltd.
●
电脑管家
●
G DATA Software AG
●
Webroot
●
Reason CyberSecurity Inc.
●
Hammock Corporation
●
SentinelOne, Inc.
●
Beijing Rising Information Technology Co., Ltd.
●
SecureTrust
●
Fidelis Cybersecurity
●
Faronics Corporation
●
IObit
●
VIPRE Security
●
Emsisoft Ltd
●
SecureIT
●
Rising
●
TG Soft - www.tgsoft.it
●
MicroWorld Technologies Inc.
●
Avira Operations GmbH
●
Wontok, Inc
●
TeamViewer
●
enSilo
●
AdAware
●
TeamViewer Germany GmbH
●
G DATA CyberDefense AG
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Auditing Strategy
● Identify the corresponding certificate with the TBS hash.
● Search for EXEs and DLLs signed with that certificate in the 
chain.
● Identify signed code that might permit code execution.
● Low-hanging fruit: LOLbins?
● Install candidate executables as a protected service.
#BHUSA @BlackHatEvents
Information Classification: General
ELAM Auditing Challenges
● VirusTotal doesn’t understand TBS hashes - only Thumbprint
● You are lucky if there are any Google hits…
#BHUSA @BlackHatEvents
Information Classification: General
Associating TBS Hash to Thumbprint
● Sometimes you’ll get lucky…
name: Microsoft Code Signing PCA 2011
issuer: Microsoft Root Certificate Authority 2011
thumbprint: f252e794fe438e35ace6e53762c0a234a2c52135
signature hash: f6f717a43ad9abddc8cefdde1c505462535e7d1307e630f9544a2d14fe8bf26e
https://famellee.wordpress.com/2016/09/08/retrieve-digital-signatures-using-wintrust/
#BHUSA @BlackHatEvents
Information Classification: General
Hunting for Potential Protected Executables
Note: this particular rule has an EKU restriction…
● 1.3.6.1.4.1.311.76.8.1
(Microsoft Publisher)
● 1.3.6.1.4.1.311.76.11.1
(Microsoft AntiMalware)
#BHUSA @BlackHatEvents
Information Classification: General
Identified Overly-Permissive Allowed Signers
Leaf Certificates
●
Microsoft Corporation (Thumbprint: B9EAA034C821C159B05D3521BCF7FEB796EBD6FF)
○
TBS: 84D8717A416C8C9E214C6E0DBD091860D8133F413BCFF35673998F27BBA084CA
●
Microsoft Corporation (Thumbprint: 62009AAABDAE749FD47D19150958329BF6FF4B34)
○
TBS: E17764C39F2AFD7114F8528D2F9783D9A591F6679715EECE730A262CF5CFD3B3
Intermediate Certificates
●
Symantec Class 3 SHA256 Code Signing CA (Thumbprint: 007790F6561DAD89B0BCD85585762495E358F8A5)
○
TBS: A08E79C386083D875014C409C13D144E0A24386132980DF11FF59737C8489EB1
●
VeriSign Class 3 Public Primary Certification Authority - G5 (Thumbprint: 
495847a93187cfb8c71f840cb7b41497ad95c64f)
○
TBS: 4843A82ED3B1F2BFBEE9671960E1940C942F688D
●
DigiCert Assured ID Code Signing CA-1 (Thumbprint: 409AA4A74A0CDA7C0FEE6BD0BB8823D16B5F1875)
○
TBS: 47F4B9898631773231B32844EC0D49990AC4EB1E
#BHUSA @BlackHatEvents
Information Classification: General
Identified Overly-Permissive Allowed Signers
#BHUSA @BlackHatEvents
Information Classification: General
Weaponization
#BHUSA @BlackHatEvents
Information Classification: General
Identifying a Candidate Abusable Executable
#BHUSA @BlackHatEvents
Information Classification: General
Weaponization Steps
● Register overly-permissive ELAM driver with 
InstallELAMCertificateInfo function in kernel32.dll.
● Create service for abusable executable (e.g. MSBuild)
● Specify service as 
SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT 
with ChangeServiceConfig2W
● Start service. Profit.
#BHUSA @BlackHatEvents
Information Classification: General
Weaponization Constraints
● Many “LOLBins” are likely not designed to run protected.
● PPL doesn’t permit spawning a child process by default.
● Must permit arbitrary unsigned code execution
● MSBuild payloads spawn a child process by default.
○ Property functions don’t spawn a child process!
○ Thank you, Casey Smith!
#BHUSA @BlackHatEvents
Information Classification: General
MSBuild Weaponization Constraints
MSBuild Property Function payload must be implemented as a one-liner using pseudo-
.NET syntax
$([System.Activator]::CreateInstance($([System.Reflec
tion.Assembly]::Load($([System.Convert]::FromBase64String("REPLACEM
E"))).GetType("Test")))))
#BHUSA @BlackHatEvents
Information Classification: General
Demo
#BHUSA @BlackHatEvents
Information Classification: General
Demo #1 – Running MSBuild Protected
https://youtu.be/-Pij0IoMWA4
#BHUSA @BlackHatEvents
Information Classification: General
Demo #2 – Killing Defender AV Protected Process
https://youtu.be/i2aM7jGDZsw
#BHUSA @BlackHatEvents
Information Classification: General
Mitigations and Detection
#BHUSA @BlackHatEvents
Information Classification: General
Mitigations
● A robust fix from Microsoft in the future?
● WDAC blocks loading/execution of disallowed ELAM drivers.
#BHUSA @BlackHatEvents
Information Classification: General
Detection and Recommendations
Defenders
• Focus on antimalware-light service creation.
•
HKLM\SYSTEM\CurrentControlSet\Services\SERVICE – LaunchProtected – 3
Vendors
• Use code-signing certificates with dedicated EKUs only for service executables and 
DLLs that are absolutely necessary.
• Perform an audit of ELAM rules and corresponding allowed binaries.
#BHUSA @BlackHatEvents
Information Classification: General
Conclusion
#BHUSA @BlackHatEvents
Information Classification: General
Why is this so bad?
● One overly permissive ELAM driver poisons the well across the 
entire 3rd party antimalware ecosystem.
● The vetting process for ELAM drivers is far from robust.
● Malware running as PPL
○ can kill security products
○ is afforded anti-tampering protection
#BHUSA @BlackHatEvents
Information Classification: General
Disclosure Timeline
● Dec 28, 2021 - Reported to MSRC
● Jan 11, 2022
○ MSRC closed report. Reason: not a security boundary
○ Passed on report to Defender Research team
● January to Present
○ Defender mitigation developed/implemented for Microsoft-signers
○ Issue and mitigation communicated to MVI vendors and engagement with vendors 
regarding affected ELAM drivers.
○ Communicated by us that scope extends beyond Microsoft-signers, making 
mitigation unviable.
○ Plan to treat overly-permissive ELAM drivers on an individual basis - e.g. potential 
blocking in CI/ASR
Thank you, David Kaplan, Gil Besso, and Philip Tsukerman @ Microsoft!!!
#BHUSA @BlackHatEvents
Information Classification: General
Official Microsoft Response
“Microsoft researchers have been collaborating with Matt Graeber on the 
findings and with Microsoft Virus Initiative (MVI) partners to address the 
issue from their own ELAM drivers. Customers using both Microsoft 
Defender Antivirus and Microsoft Defender for Endpoint are covered by 
potential abuse of the ELAM functionality.”
#BHUSA @BlackHatEvents
Information Classification: General
Resources
● Protecting anti-malware services
● ELAM Driver Requirements
● Unknown Known DLLs
● The Evolution of Protected Processes Parts 1, 2, and 3
● Building a WDAC Driver Allowlist
#BHUSA @BlackHatEvents
Information Classification: General
Code
● ELAM driver allow list parser - Get-ElamCertInfo
● TBS hash calculator - Get-TBSHash
● Defanged PPL Runner - AntimalwareBlight
○ Bring your own MSBuild and overly-permissive ELAM driver.
#BHUSA @BlackHatEvents
Information Classification: General
Thanks!