### Observers and End Hosts Utilizing VEC for RTT Measurement

When observers estimate the validity of their measurements using the Valid Edge Counter (VEC), end hosts can also leverage the VEC to signal when they are aware that the spin bit does not carry valid Round-Trip Time (RTT) information. This situation arises when an endpoint introduces excessive delay between receiving and transmitting a packet carrying a spin edge, such as due to application-limited traffic. The process is illustrated in Figure 2(b) and executed by the remaining (uncolored) lines in Algorithm 1. In such cases, the endpoint will reset the VEC to its initial value of '01'.

Endpoints can explicitly indicate their opt-out from RTT measurement by setting the VEC to '00' on all packets. They can also control the sample rate by probabilistically marking an otherwise non-'00' edge as '00'.

### Efficient Passive Measurement of Latency Spin Signal

Our passive observer implementation is based on Vector Packet Processing (VPP), a high-speed packet processing library in userspace. Our plugin adds a node to VPPâ€™s packet processing graph, which processes all traffic in four steps:
1. **Detection of Spin-Enabled Transports**: Using User Datagram Protocol (UDP) port pairs to detect QUIC and the spin bit in the SYN to detect TCP (as described in Section 4) with the spin signal.
2. **State Management**: Retrieving or creating state for the observed spin-enabled flows using the 5-tuple as a hash key.
3. **Extraction of Measurement Bits**: Extracting the measurement bits from the header.
4. **RTT Estimation**: Estimating RTT using the spin bit, VEC, and previous values from the flow state.

Our implementation either writes per-packet RTT estimations to a file or provides live statistics of all active flows via CLI commands (e.g., `sudo vppctl spinbit stat`).

The observer tracks flows based on the 5-tuple (source and destination IP address and port, as well as IP protocol number), resulting in 13 bytes of state for IPv4-based flows (37 bytes for IPv6). Additionally, the observer saves the initial source port (2 bytes) to identify the direction of the observed VEC, the current spin bit value (1 bit), and the start time of the current RTT measurement along with the previous RTT value. We use two 64-bit variables to save these time values. Rounding up, we need 32 bytes to measure the RTT of one IPv4 flow, allowing an on-path device to measure the RTT of approximately 32k concurrent flows per megabyte of memory.

In terms of computational complexity, the observer is lightweight. Each observed packet results in the retrieval of associated flow state (e.g., via hash table lookup), followed by at most three boolean comparisons to determine the packet's direction, find a new spin bit value, and validate the spin transition based on the observed VEC value. For valid transitions, we either save the starting time or perform a single subtraction of two 64-bit values to compute the observed RTT.

### The Valid Edge Counter (VEC)

While endpoints can easily detect reordering by observing the packet sequence number, this is not always possible for on-path observers, especially if the sequence information is encrypted (as in the case of QUIC packet numbers). An observer relying solely on the spin bit would incorrectly report two very short RTT samples when observing a reordered packet, as shown in Figure 1(d). To address this, we introduce the VEC, a two-bit signal that explicitly marks packets carrying a valid spin bit edge set by the endpoint. The VEC increases its value with the number of non-distorted transitions of the spin signal. Non-edge packets carry a VEC of zero, while all spin edges carry a nonzero VEC value, set either to one plus the VEC value of the packet that triggered the edge transition or at a maximum of three. The VEC indicates the number of network transitions during which the spin signal has not been distorted, allowing observers to decide if a spin edge can be used to begin or end an RTT measurement (Table 1).

For example, a VEC of two ('10') can either be used to start a new RTT measurement or end a RTT component measurement, indicating two network transitions without distortion.

### Sample Rate Analysis

The VEC enhances the accuracy of the signal by enabling observers to reject spin bit transitions that may result in poor samples, trading off sample rate for accuracy. Given independent random packet loss and reordering probabilities \( p_L \) and \( p_R \), and average flow RTT \( \text{RTT} \), Equation (1) provides a first-order approximation of the sample rate per flow direction:

\[
\text{sample rate} = \frac{(1 - p_L)(1 - p_R)^3}{\text{RTT}^3}
\]

The numerator represents the probability that an endpoint-generated spin transition carries a VEC value of 3, meaning the spin signal has not been disturbed by loss or reordering for at least three network transitions. For component RTTs, the numerator is squared rather than cubed. Equation (1) shows that the maximal number of RTT samples per RTT is limited to one (zero loss and reordering probability), allowing an observer to track changes in RTT due to congestion control adaptations while filtering out high-frequency oscillations.

The sample rate is also bounded by the sending rate of the underlying transport, as the latency spin signal does not change the traffic pattern. This is a characteristic of all passive latency measurements: one cannot measure what is not there.

### The Latency Spin Signal in QUIC

We added the latency spin signal to an open-source QUIC implementation. Due to the constant flux in the QUIC header format during our experiments and for flexibility, we added an additional measurement byte to the header. This byte carried the spin bit and VEC, among other experimental signals. Since a flow's initial RTT can be measured based on handshake semantics, the spin signal is only included in the QUIC short header (i.e., any packet after the initial QUIC version and key negotiation, which uses long headers).

### Evaluation: Accuracy and Sample Rate in Emulated Networks

We evaluated the QUIC implementation, enhanced with the latency spin signal, on an emulated network using Mininet. The emulated network had a base RTT of 40 ms, typical for regional-continental internet RTT. In each test, a client continuously uploaded data to a server with a constant rate below the maximum link capacity, while various impairments were introduced to the network. We only present results for non-adaptive traffic, as high loss rates or high degrees of reordering reduce the sending rate of adaptive traffic, making the impact of these impairments less visible.

We implemented four mechanisms to passively observe the RTT for comparison:
- **Spin Bit**: The observer monitors only the spin bit.
- **Packet Number**: The observer uses packet sequence information to reject reordered packets.
- **Heuristic**: The observer monitors only the spin bit but rejects RTT samples below one-tenth of the current estimate.
- **VEC**: The observer observes the full spin signal (spin bit and VEC) and rejects invalid edges based on the VEC value.

The quality of the spin signal was evaluated using two metrics: error relative to the client-estimated RTT as per RFC 6298 and the number of samples obtained per RTT. We also considered how many samples the VEC observer could take when measuring down- and upstream delays or component RTTs separately. Ideally, the observer should measure two samples (one for each direction) per RTT, but spin bit transitions with VEC values below two can lower the sample rate, while superfluous transitions can increase it incorrectly.

#### Packet Reordering

We first evaluated the tolerance of the spin signal to packet reordering using NetEm to randomly delay a configured fraction of packets by 1 ms. The results are shown in Figure 3.

- **Figure 3(a)**: Distribution of RTT estimation error at a 10% reordering rate. The spin-bit-only observer often produces RTT estimates with an error around -40 ms, corresponding to near-zero RTT samples caused by rapid spin bit transitions due to reordered packets. Other observers filter out this effect.
- **Figure 3(b)**: At higher reordering rates, the accuracy of the heuristic observer starts to deteriorate.
- **Figure 3(c)**: The VEC and packet number observers have similar error performance, but the VEC observer drops samples to avoid incorrect measurements, while the packet number observer continues to take RTT samples, leading to additional error. The VEC observer rejects fewer samples when measuring up- and downstream RTTs separately, as it can use spin bit transitions with VEC values of two.

#### Packet Loss

To evaluate loss tolerance, we configured NetEm to emulate burst loss using the Gilbert model. The good reception periods have an average length of 100 packets, and the average length of the loss bursts is varied. The results are shown in Figure 4.

- **Figure 4(a)**: Loss leads to overestimated RTTs because when a packet carrying a spin edge is lost, the RTT measurement is not stopped until the next packet with the new spin bit value is observed. The long tail in the ECDF is caused by retransmission timeouts.
- **Figure 4(b)**: The error in observed RTTs for increasing loss burst lengths.
- **Figure 4(c)**: The normalized number of RTT samples for increasing loss burst lengths.