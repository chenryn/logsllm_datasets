As observers estimate the validity of their measurements based
on the VEC, the end hosts can also use the VEC to signal when
they know that the spin bit does not carry valid RTT information.
This situation occurs when an endpoint introduces excessive delay
between receiving and transmitting a packet carrying a spin edge
(e.g. because of application-limited traffic). This is done by the
remaining (uncolored) lines in Algorithm 1, and is illustrated in
Figure 2(b). The endpoint will reset the VEC to its initial value of
‘01’.
Endpoints can also explicitly indicate that they have opted out
of RTT measurement by setting the VEC to ‘00’ on all packets, or
control the sample rate by probabilistically marking an otherwise
non-‘00’ edge as ‘00’.
2.3 Efficient Passive Measurement of the
Latency Spin Signal
Our passive observer implementation is based on Vector Packet
Processing (VPP)6, a library for high-speed packet processing in
userspace. Our plugin adds a node to VPP’s packet processing graph
that processes all traffic in four steps: (i) detecting spin-enabled
transports, using User Datagram Protocol (UDP) port pairs to detect
QUIC, and the spin bit in the SYN to detect TCP (as in Section 4) with
the spin signal7; (ii) retrieving or creating state for the observed
spin-enabled flows using the 5-tuple as hash key; (iii) extracting
the measurement bits from the header; and (iv) estimating RTT
using the spin bit, VEC and the previous values from the flow state.
Our implementation either writes per-packet RTT estimations to
a file or alternatively live stats of all active flows can be retrieved
using CLI commands (sudo vppctl spinbit stat).
Our observer implementation tracks flows based on the 5-tuple
(source and destination Ip address and port as well as IP protocol
number) which results in 13 bytes of state for IPv4-based flows (37
bytes for IPv6). In addition, the observer saves the initial source port
(2 bytes) to identify the direction of the observed VEC, the current
spin bit value (1 bit) as well as the start time of the current RTT
measurement and the previous RTT value. In our implementation,
we use two 64 bit variables to save these time values. Rounding up,
we need 32 bytes to measure the RTT of one IPv4 flow, allowing
an on-path device to measure the RTT of roughly 32k concurrent
flows per megabyte of memory.
The observer is also very lightweight in terms of computational
complexity. Each observed packet results in retrieval of associated
flow state (e.g. via hash table lookup), followed by at most three
boolean comparisons to determine the direction of the packet, to
find a new spin bit value and to validate the spin transition based
on the observed VEC value. In case of a valid transition, we either
save the starting time or perform a single subtraction of two 64 bit
values to compute the observed RTT.
6https://fd.io/technology/
7Note that our observer monitors all TCP traffic, for comparison with timestamp-based
RTT measurements.
(a) Increment VEC (with edge loss)
(b) Reset VEC on invalid edge
Figure 2: The VEC mechanism: VEC values are represented
in binary format; spin values as arrows.
Table 1: Overview of VEC values and usage.
10
01
11
✓ ✓ ✓
✓ ✓
✓
Spin bit transition can be used as
Start of an RTT measurement
End of an RTT component measurement
End of an RTT measurement
In order to provide resilience to packet reordering (Figure 1(d)),
the algorithm ignores all packets that were received out of order. Fig-
ures 1(e) and 1(f) illustrate how this mechanism removes distortions
in the spin bit sequence. In Lines 3 and 9 (green) of Algorithm 1 we
assume that every packet has a unique, in-order sequence number
(PN) which is at least visible to the endpoints, such as the sequence
number in TCP or packet number in QUIC.5
2.2 The Valid Edge Counter (VEC)
While the endpoints can trivially detect reordering by observing
the packet sequence number, this does not always hold for on-
path observers, as sequence information may be encrypted (as it is
the case with the QUIC packet number). An observer considering
only the spin bit would then incorrectly report two very short
RTT samples when observing a reordered packet, as illustrated in
Figure 1(d). To address this problem, we introduce the VEC, a two
bit signal that explicitly marks packets that carry a valid spin bit
edge set by the endpoint, and increases its value with the number
of non-distorted transitions of the spin signal. Figure 2(a) illustrates
this mechanism which is described in Lines 4, 5, 14 and 15 (blue)
of Algorithm 1. Non-edge packet carry a VEC of zero. All spin
edge carry a nonzero VEC value, which is set either to one plus
the VEC value of the packet that triggered the edge transision or at
maximum three. Thereby, the VEC indicates the number of network
transitions during which the spin signal has not been distorted.
Observers can use this information to decide if a spin edge can be
used to begin or end an RTT measurement as shown in Table 1.
As an example, a VEC of two (‘10’) can either be used to start a
new RTT measurement or end a RTT component measurement as
it indicates two network transitions during which the spin signal
5The correctness of the spin bit is shown in the following thesis report [4].
Time01⬇00⬇00⬇10⬇00⬇11⬆00⬆00⬆01⬇00⬇Time>ΔT11⬇11⬇01⬆IMC ’18, October 31–November 2, 2018, Boston, MA, USA
De Vaere et al.
2.4 Sample Rate Analysis
The VEC increases the accuracy of the signal by allowing observers
to reject spin bit transitions that may result in bad samples. In other
word, it trades off sample rate for accuracy. More precisely, given
independent random packet loss and reordering probabilities pL
and pR and average flow RTT RTT, Equation (1) gives a first order
approximation of the sample rate per flow direction.
sample rate =
(1 − pL )
(1 − pR )
3
RTT
3
(1)
The numerator of Equation (1) represents the probability that an
endpoint generated spin transition caries a VEC value of 3. That is,
the probability that the spin signal has not been disturbed by loss or
reordering for at least three network transitions. When measuring
component RTTs, the numerator is be squared rather then cubed.
Equation (1) shows once more that the maximal number of RTT
samples per RTT is limited to one (zero loss and reordering proba-
bility) which enables an observer to track changes in RTT due to
e.g. congestion control adaptations but at the same time filters out
high frequency oscillations.
Of course the sample rate has an additional upper bound of the
sending rate of the underlying transport, as the latency spin signal
does not change the traffic pattern. This is a property of all passive
latency measurement: one cannot measure what’s not there.
3 THE LATENCY SPIN SIGNAL IN QUIC
We added the latency spin signal to an open source QUIC imple-
mentation. Because the QUIC header format was in constant flux
when we did these experiments, and for flexibility of experimenta-
tion, we added an additional measurement byte to the header. This
byte carried — along with other experimental signals — the spin bit
and VEC. Because a flow’s initial RTT can be measured based on
handshake semantics, the spin signal is only carried in the QUIC
short header (i.e. any packet after the initial QUIC version and key
negotiation which uses long headers).
3.1 Evaluation: Accuracy and Sample Rate in
Emulated Networks
We evaluated the QUIC implementation, enhanced with the latency
spin signal, on an emulated network using Mininet [10]. The emu-
lated network has a base RTT (propagation delay without queuing)
of 40 ms (which we take as a typical regional-continental internet
RTT given the growing importance of content-delivery networks).
In each of our tests, a client continuously uploads data to a server
with a constant rate below the maximum link capacity, while vari-
ous impairments are introduced to the network. We only present
the results for non-adaptive traffic in this paper, as high loss rates
or high degrees of reordering reduces the sending rate of adaptive
traffic to a minimum, making the impact of these impairments less
visible.
We implemented four mechanisms to passively observe the RTT,
for comparison purposes:
Spin bit The observer monitors only the spin bit to get a base
measurement to rate the impact of reordering and loss.
Packet number The observer uses packet sequence information
to rejects reordered packets, similar to Algorithm 18.
Heuristic The observer monitors only the spin bit, but rejects RTT
samples below one tenth of the current estimate.
VEC The observer observes the full spin signal, i.e. spin bit and
VEC, and rejects invalid edges based on the VEC value.
The quality of the spin signal is evaluated using two metrics:
error relative to client estimated RTT as per RFC 6298 [13], and
the number of samples obtained per RTT. Furthermore, we also
consider how many samples can be taken by the VEC observer
when down- and upstream delay or component RTTs are measured
separately. Because our observers can see both flow directions, they
should ideally measure two samples (one for each direction) per
RTT. However, spin bit transitions with VEC values below two can
lower the sample rate, while superfluous transitions can increase it
incorrectly.
3.1.1 Packet reordering. We first evaluate the tolerance of the spin
signal to packet reordering. We use NetEm [8] to randomly delay
a configured fraction of packets by 1 ms. The results are shown
in Figure 3.
Figure 3(a) shows the distribution of the RTT estimation error at
a 10% reordering rate. It can be seen that the spin-bit-only observer
often produces RTT estimates with an error around -40 ms. As this
corresponds to the network’s RTT, this means that many near zero
RTT samples are taken. As can be seen in Figure 1(d), this is exactly
what is to be expected, as reordered packets cause rapid transitions
in the spin bit signal. Although this is a problem for the basic spin
bit observer, at this reordering rate, all other observers are able to
filter out this effect. However, as can be seen in Figure 3(b), this
does not hold anymore for higher reordering rates. That is, for
reordering rates above 10 % the accuracy of the heuristic observer
starts to deteriorate.
Although their error performance is similar, the VEC and packet
number observers are fundamentally different: when the spin signal
is disturbed, the VEC observer will drop the sample, avoiding all
samples that could lead to incorrect measurements. On the other
hand, the packet number observer continues to take RTT samples,
leading to additional error in the sample. This effect is very pro-
nounced in Figure 3(c). This figure also shows that the VEC observer
rejects less samples when the up- and downstream RTTs are mea-
sured separately as we can additionally use spin bit transitions with
VEC values of two (compare Table 1).
3.1.2 Packet loss. To evaluate loss tolerance, we configured NetEm
to emulate burst loss using the simple Gilbert model [6]. The good
reception periods have an average length of 100 packets. The av-
erage length of the loss bursts is varied. The results are shown
in Figure 4.
Figure 4(a) shows that loss leads to overestimated RTTs. This
is because when a packet carrying a spin edge is lost, the RTT
measurement is not stopped until the next packet with the new
spin bit value is observed. The long tail in the ECDF is caused by
8At the time of our experiments, QUIC’s packet numbers were exposed in the unen-
crypted QUIC header. However, at the time of this writing, the QUIC Internet-Drafts
specify encrypted packet numbers.
Three Bits Suffice: Explicit Latency Measurement
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
(a) Empirical Cumulative Distribution Function (ECDF)
for a 10% packet reordering rate.
(b) The error in the observed RTTs for increasing re-
ordering rates.
(c) The normalized number of RTT samples for increas-
ing reordering rates.
Figure 3: The effects of reordering on spin bit based RTT measurements of a flow with a 40 ms RTT.
(a) ECDF for an average burst length of 10 packets.
(b) The error in the observed RTTs for increasing loss
burst lengths.
(c) The normalized number of RTT samples for increas-
ing loss burst lengths.
Figure 4: The effects of burst loss on spin bit based RTT measurements of a flow with a 40 ms RTT.
retransmission timeouts. Because these timeouts are significantly