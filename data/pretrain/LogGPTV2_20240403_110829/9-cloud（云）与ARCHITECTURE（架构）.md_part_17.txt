\-\-- \-\-- PUT options is \-\-- \-\--
Array
(
)
# ES插件
![LINUXNSD_V01ARCHITECTUREDAY03_036](media/image122.png){width="7.264583333333333in"
height="3.573611111111111in"}
![LINUXNSD_V01ARCHITECTUREDAY03_037](media/image123.png){width="7.264583333333333in"
height="3.9277777777777776in"}
![LINUXNSD_V01ARCHITECTUREDAY03_038](media/image124.png){width="7.264583333333333in"
height="4.573611111111111in"}
## 安装插件:
必须是url安装(网络安装)
75 /usr/share/elasticsearch/bin/plugin install
file:///root/elasticsearch-head-master.zip
76 /usr/share/elasticsearch/bin/plugin install
file:///root/elasticsearch-kopf-master.zip
77 /usr/share/elasticsearch/bin/plugin install
[file:///root/bigdesk-master.zip](file://root\\bigdesk-master.zip)
访问:http://192.168.1.11:9200/\_plugin/插件名
![](media/image125.png){width="5.304166666666666in"
height="3.282638888888889in"}
![](media/image126.png){width="7.263194444444444in"
height="3.3645833333333335in"}
![](media/image127.png){width="7.263194444444444in"
height="4.770833333333333in"}
# RESTful API调用
![LINUXNSD_V01ARCHITECTUREDAY03_045](media/image128.png){width="7.264583333333333in"
height="3.5840277777777776in"}
![LINUXNSD_V01ARCHITECTUREDAY03_046](media/image129.png){width="7.264583333333333in"
height="5.448611111111111in"}
## curl命令创建索引
\~\]# curl -XPUT http://192.168.1.11:9200/tarena -d \'
\> {\"settings\": {
\> \"index\": {
\> \"number_of_shards\": 5,
\> \"number_of_replicas\": 1
\> }
\> }
\> }\'
![](media/image130.png){width="7.266666666666667in"
height="4.847916666666666in"}
## RESTful API的简单使用
\_cat API查询集群状态,节点信息
\[root@room9pc01 elk\]# curl 
#查看能查看的所有信息
=\^.\^=
/\_cat/allocation
/\_cat/shards
/\_cat/shards/{index}
/\_cat/master
/\_cat/nodes
/\_cat/indices
/\_cat/indices/{index}
/\_cat/segments
/\_cat/segments/{index}
/\_cat/count
/\_cat/count/{index}
/\_cat/recovery
/\_cat/recovery/{index}
/\_cat/health
/\_cat/pending_tasks
/\_cat/aliases
/\_cat/aliases/{alias}
/\_cat/thread_pool
/\_cat/plugins
/\_cat/fielddata
/\_cat/fielddata/{fields}
/\_cat/nodeattrs
/\_cat/repositories
/\_cat/snapshots/{repository}
\[root@room9pc01 elk\]# curl 
#master帮助
id \| \| node id
host \| h \| host name
ip \| \| ip address
node \| n \| node name
\[root@room9pc01 elk\]# curl http://192.168.1.11:9200/\_cat/master
8dE2fS3CR8aCtFaxxTL2pg 192.168.1.14 192.168.1.14 esl4
\[root@room9pc01 elk\]# curl 
#访问集群内任意主机都可
8dE2fS3CR8aCtFaxxTL2pg 192.168.1.14 192.168.1.14 esl4
\[root@room9pc01 elk\]# curl 
#查看索引
green open tarena 5 1 0 0 1.5kb 795b
green open f1 5 1 0 0 1.5kb 795b
\[root@room9pc01 elk\]# curl 
#查看f1
f1 3 p STARTED 0 159b 192.168.1.15 esl5
f1 3 r STARTED 0 159b 192.168.1.12 esl2
f1 1 p STARTED 0 159b 192.168.1.14 esl4
f1 1 r STARTED 0 159b 192.168.1.13 esl3
f1 4 r STARTED 0 159b 192.168.1.11 esl
f1 4 p STARTED 0 159b 192.168.1.12 esl2
f1 2 p STARTED 0 159b 192.168.1.13 esl3
f1 2 r STARTED 0 159b 192.168.1.15 esl5
f1 0 p STARTED 0 159b 192.168.1.11 esl
f1 0 r STARTED 0 159b 192.168.1.14 esl4
## RESTful 增加
创建一个索引,并设置分片数量与副本数量
\~\]# curl -XPUT http://192.168.1.11:9200/tarena -d \'
\> {\"settings\": {
\> \"index\": {
\> \"number_of_shards\": 5,
\> \"number_of_replicas\": 1
\> }
\> }
\> }\'
## RESTful API插入数据
\[root@room9pc01 elk\]# curl -XPUT
http://192.168.1.11:9200/tarena/teacher/1 -d \'
\> {\"姓名\": \"牛三牛\",
\> \"阶段\": \"2\",
\> \"爱好\": \"大锤\",
\> \"特长\": \"玩大锤\"
\> }\' #回车
{\"\_index\":\"tarena\",\"\_type\":\"teacher\",\"\_id\":\"1\",\"\_version\":1,\"\_shards\":{\"total\":2,\"successful\":2,\"failed\":0},\"created\":true}
## 增PUT
\[root@room9pc01 elk\]# curl -XPUT
http://192.168.1.11:9200/tarena/teacher/1 -d \'
{\"姓名\": \"李欣\",
\"阶段\": \"4\",
\"爱好\": \"开车\",
\"特长\": \"开车于无形之中\"
}\' #这样插入将覆盖第一条数据.要增加额外一条,得改1为2
![](media/image131.png){width="7.259722222222222in"
height="2.5541666666666667in"}
## 改 POST
\[root@room9pc01 elk\]# curl -XPOST
http://192.168.1.11:9200/tarena/teacher/2/\_update -d \'
{\"doc\": {\"特长\":\"开跑车\"}}\'
{\"\_index\":\"tarena\",\"\_type\":\"teacher\",\"\_id\":\"2\",\"\_version\":2,\"\_shards\":{\"total\":2,\"successful\":2,\"failed\":0}}
![](media/image132.png){width="7.263888888888889in" height="2.6875in"}
## 查 GET 
\[root@room9pc01 elk\]# curl -XGET
http://192.168.1.11:9200/tarena/teacher/2
{\"\_index\":\"tarena\",\"\_type\":\"teacher\",\"\_id\":\"2\",\"\_version\":2,\"found\":true,\"\_source\":{\"姓名\":\"李欣\",\"阶段\":\"4\",\"爱好\":\"开车\",\"特长\":\"开跑车\"}}
\[root@room9pc01 elk\]# curl -XGET
http://192.168.1.11:9200/tarena/teacher/2?pretty
{
\"\_index\" : \"tarena\",
\"\_type\" : \"teacher\",
\"\_id\" : \"2\",
\"\_version\" : 2,
\"found\" : true,
\"\_source\" : {
\"姓名\" : \"李欣\",
\"阶段\" : \"4\",
\"爱好\" : \"开车\",
\"特长\" : \"开跑车\"
}
}
## 删 DELITE
\[root@room9pc01 elk\]# curl -XDELETE 
#删除tedu所有数据
\[root@room9pc01 elk\]# curl -XDELETE
/teacher
\[root@room9pc01 elk\]# curl -XDELETE
/teacher/2
# 安装kibana
11 yum -y install kibana-4.5.2-1.x86_64.rpm
安装包在自己制作的yum源里面,也可以直接将安装包拷贝到主机上面直接安装,无依赖包
## 修改配置文件
13 vim /opt/kibana/config/kibana.yml
23 sed -i \'s/\^#\[\[:space:\]\]server.port/server.port/\'
/opt/kibana/config/kibana.yml
24 sed -i \'s/\^#\[\[:space:\]\]server.host/server.host/\'
/opt/kibana/config/kibana.yml
25 sed -i \'s/\^#\[\[:space:\]\]kibana.index/kibana.index/\'
/opt/kibana/config/kibana.yml
26 sed -i \'s/\^#\[\[:space:\]\]kibana.d/kibana.d/\'
/opt/kibana/config/kibana.yml
27 sed -i \'s/\^#\[\[:space:\]\]elasticsearch.ping/elasticsearch.ping/\'
/opt/kibana/config/kibana.yml
28 sed -i
\'s/\^#\[\[:space:\]\]elasticsearch.request/elasticsearch.request/\'
/opt/kibana/config/kibana.yml
29 sed -i
\'s/\^#\[\[:space:\]\]elasticsearch.startup/elasticsearch.startup/\'
/opt/kibana/config/kibana.yml
修改后如下
elasticsearch.url: \"http://esl:9200\"
server.port: 5601
server.host: \"0.0.0.0\"
kibana.index: \".kibana\"
kibana.defaultAppId: \"discover\"
elasticsearch.pingTimeout: 1500
elasticsearch.requestTimeout: 30000
elasticsearch.startupTimeout: 5000
\[root@kibana103 \~\]# systemctl start kibana.service
\[root@kibana103 \~\]# systemctl status kibana.service
![](media/image133.png){width="6.985416666666667in"
height="4.517361111111111in"}
配置成功,会多了.kibana的库,表示kibana与elasticsearch对接成功,如下图
![](media/image134.png){width="7.264583333333333in"
height="2.9090277777777778in"}
# 案例
案例1：ES集群安装
案例2：ES集群安装配置
案例3：练习curl命令
案例4：练习插件
案例5：插入，增加，删除查询数据
案例6：安装Kibana
1 案例1：ES集群安装
1.1 问题
本案例要求：
准备1台虚拟机
部署elasticsearch第一个节点
访问9200端口查看是否安装成功
1.2 方案
1）ELK是日志分析平台，不是一款软件,而是一整套解决方案,是三个软件产品的首字母缩写，ELK分别代表：
Elasticsearch:负责日志检索和储存
Logstash:负责日志的收集和分析、处理
Kibana:负责日志的可视化
2\)
ELK组件在海量日志系统的运维中,可用于解决分布式日志数据集中式查询和管理系统监控等，故障排查，安全信息和事件管理，报表功能
部署Elasticsearch分布式集群安装，Kibana作为可视化平台，实时总结流量和数据的图表，Logstash用来收集处理日志，如表-1所示：
表-1
1.3 步骤
实现此案例需要按照如下步骤进行。
步骤一：先准备一台虚拟机
1）更改主机名，配置IP，搭建第三方yum源(之前已经搭建过几次,这里不再赘述)
\[root@se1 \~\]# echo se1 \> /etc/hostname
\[root@se1 \~\]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
\# Generated by dracut initrd
DEVICE=\"eth0\"
ONBOOT=\"yes\"
IPV6INIT=\"no\"
IPV4_FAILURE_FATAL=\"no\"
NM_CONTROLLED=\"no\"
TYPE=\"Ethernet\"
BOOTPROTO=\"static\"
IPADDR=192.168.1.61
PREFIX=24
GATEWAY=192.168.1.254
\[root@se1 \~\]# vim /etc/yum.repos.d/local.repo
\[local_repo\]
name=CentOS-\$releasever - Base
baseurl=\"ftp://192.168.1.254/system\"
enabled=1
gpgcheck=1
\[elk\]
name=elk
baseurl=\"ftp://192.168.1.254/elk\"
enabled=1
gpgcheck=0
2）部署elasticsearch第一个节点
\[root@se1 \~\]# vim /etc/hosts
192.168.1.61 se1
192.168.1.62 se2
192.168.1.63 se3
192.168.1.64 se4
192.168.1.65 se5
\[root@se1 \~\]# yum -y install java-1.8.0-openjdk.x86_64
\[root@se1 \~\]# java -version
openjdk version \"1.8.0_131\"
OpenJDK Runtime Environment (build 1.8.0_131-b12)
OpenJDK 64-Bit Server VM (build 25.131-b12, mixed mode)
\[root@se1 \~\]# sestatus //查看selinux状态
SELinux status: disabled
\[root@se1 \~\]# yum -y install elasticsearch
\[root@se1 \~\]# vim /etc/elasticsearch/elasticsearch.yml
17 cluster.name: myelk //配置集群名字
23 node.name: se1 //当前主机名称
54 network.host: 0.0.0.0 // 0.0.0.0（监听所有地址）
68 discovery.zen.ping.unicast.hosts: \[\"se1\", \"se2\",\"se3\"\]
//声明集群里的主机成员有谁，不需要全部写进去
\[root@se1 \~\]# systemctl restart elasticsearch
\[root@se1 \~\]# systemctl enable elasticsearch
\[root@se1 \~\]# ss -antup \| grep 9200
tcp LISTEN 0 50 :::9200 :::\* users:((\"java\",pid=23231,fd=110))
3）访问9200端口查看是否安装成功，如图-1所示：
图-1
2 案例2：ES集群安装配置
2.1 问题
本案例要求：
一共安装5台虚拟机
在所有机器中部署ES
启动服务查看验证集群状态
2.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：安装elasticsearch和java-1.8.0-openjdk，同步配置文件
备注：在步骤一已经安装了一台elasticsearch，这里只需再准备四台即可
1）更改对应的主机名、 ip地址以及搭建yum源（以案例1为例子）
2）安装elasticsearch四台主机同样操作（以se2为例子）
\[root@se2 \~\]# yum -y install java-1.8.0-openjdk.x86_64
\[root@se2 \~\]# yum -y install elasticsearch
3）同步配置/etc/hosts和/etc/elasticsearch/elasticsearch.yml,
修改node.name字段（以se2为例子）
\[root@se1 \~\]# for i in {62..65} ; do scp /etc/hosts
192.168.1.\$i:/etc/hosts; done
\[root@se1 \~\]# for i in {62..65} ; do scp \\
/etc/elasticsearch/elasticsearch.yml \\
192.168.1.\$i:/etc/elasticsearch/elasticsearch.yml; done