### Probability Distribution of Prefixes and Update Bursts

The probability distribution of prefixes (selected uniformly) for a given or randomly chosen Autonomous System (AS) experiences an update burst starting at a specified time. Each update burst is realized by selecting the number of updates involved and the inter-arrival time according to the appropriate probability distribution, or it may be taken from a trace. The updates are then spaced within the available time frame. To instantiate a single update, the attribute changes (such as AS path changes, policy changes, or other attribute changes) must be selected based on observed attribute changes.

### Advantages of RTG

RTG's approach differs from black-box approaches that simply replay traces, as it captures the structure of BGP traffic. It is highly configurable, parameterizable, and scalable, allowing for insights into the reasons behind certain behaviors. Through its flexibility and parameterization, RTG enables the study of system sensitivities in a repeatable and consistent manner while still capturing different characteristics from various vantage points in the network. However, the ability to scale a trace or adapt it to a different scenario is limited. Traces from different vantage points can have significantly different characteristics and may or may not be suitable for specific tests [23]. Additionally, traces are often considered proprietary. Tools like RTG can be used by people in different locations and companies, who might not otherwise share data, to normalize their workloads [26]. RTG also allows for combining characteristics from multiple traces.

### Examples of RTG Applications

1. **Packet Classification Performance**: A realistic routing table is crucial for evaluating the performance of classification algorithms, such as determining memory requirements. The performance of some classification algorithms depends on the depth of a prefix in the tree. Each routing update has the potential to change the routing table and thus interact with forwarding performance. The number and type of updates required to break a router depend on the structure of the updates and the size of the table [20]. RTG allows for exploring this relationship in a defensible manner, rather than relying on traces to contain the necessary event sequences.
   
2. **Interactions of Routing Updates and Classification**: RTG helps in understanding how routing updates affect packet classification. By generating synthetic traffic, RTG can simulate various scenarios and help in analyzing the interactions between routing updates and classification performance.

### Validation

The goal of the workload generator is to produce synthetic traffic that accurately reflects real-world workloads. Therefore, validation is crucial for interpreting the results derived from using the workloads. Ideally, the validation should not only verify the parameters of the workload but also demonstrate that the performance of a system under the generated workload is similar to its performance under real-world conditions. This aspect is beyond the scope of this paper and will be addressed in a future study that examines the behavior of a router subjected to both trace-based and RTG-generated workloads.

Our trace analysis has shown that BGP traffic has many dependencies, which are partially captured by our workload model. To highlight some of RTG's features, we examine whether the characteristics of the generated workload are consistent with those of the measured workload. We focus on derived measures rather than distributions already part of RTG's configuration.

### Example Analysis

1. **BGP Prefix Forest**:
   - **Distance Distributions**: Since distances are not used as parameterized distributions in the table construction process, we present results about their distributions to verify nesting, fanout, and prefix length at different levels. Figure 26 shows the distribution of prefix distances for the class C address block, for a RTG-generated table with roughly twice the number of prefixes (227,747), and for the two routing tables RRC:2 and LISP:2. Despite the RTG-generated table containing twice the number of prefixes, there is good agreement. The plot also includes a routing table with IP addresses chosen randomly and prefix masks chosen according to the prefix length distribution, showing a significant difference. Checks of other metrics show good agreements at all depths.

2. **AS Path**:
   - **Density of Logarithm of Number of Prefixes per AS**: Figure 27 plots the density of the logarithm of the number of prefixes per AS (including transiting and originating). There is an apparent disagreement between the curves for the RTG-generated table and the two datasets for small numbers of prefixes per AS. However, this discrepancy is due to the RTG-generated table having twice the number of prefixes but the same number of ASes. Doubling the number of ASes results in good agreement. The tails of the distributions (not shown) also agree well.

3. **BGP Updates**:
   - **Update Rate per Minute**: The analysis in Section 4.2 highlighted some dependencies between BGP updates. We cannot validate this process with a single plot, so we focus on one type of instability creator: prefix addition/deletion, which each generates an update burst. We generate an event log with update bursts based on the inter-arrival time distributions of update bursts. In the first step, each update burst in the log file is replaced with an update burst of the same kind from the actual trace. Figure 28 shows the resulting rate of updates for both the actual update trace and the generated update trace (with twice as many prefixes). In the second step, we generate the update bursts according to the burst characteristics (not shown). The rate plot shows good agreement.

### Summary

This paper motivates and presents our workload model for BGP traffic and its prototype realization, RTG. The workload model is based on the key notion of a BGP instability creator, who creates correlated instability bursts via the AS path and affects BGP routing, characterized by the notion of a prefix forest. We show how to derive the distributional parameters of RTG from actual BGP tables and updates. Our analysis of instability creators and events in current Internet routing instabilities demonstrates that RTG is capable of generating realistic BGP traffic in the lab.

The development of our prototype tool is part of a larger research effort to bring the variability of the Internet into test labs. The goal is to study the impact of variability in a controlled environment. RTG adds an important component, routing, to the existing toolset of workload generators and traffic shaping tools. A test bed with all these components will enable us to answer the questions stated in the introduction and experiment with, evaluate, and judge most Internet components.

### Acknowledgments

We are grateful to Jan Bankstahl of SaarGate and the RIPE RIS project for access to the BGP data. Numerous colleagues at Saarland University provided valuable feedback on this work. We thank Jennifer Rexford, Andrew Moore, Mark Crovella, and the anonymous reviewers for their detailed and insightful comments, which greatly improved the paper. This research was partly supported by Cisco Systems and the Defense Advanced Research Projects Agency (DARPA), under grant N66001-00-8065 from the U.S. Department of Defense. The contents are solely the responsibility of the authors and do not necessarily represent the official views of Cisco Systems nor the Department of Defense.

### References

[References listed here, formatted consistently and updated as needed]