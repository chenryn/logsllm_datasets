In this paper, we present and demonstrate two novel at-
tacks for persistent Bluetooth impersonation, exploiting the
Bluetooth authentication mechanisms with increased viability
and effectiveness: link key extraction attack and page blocking
attack. The proposed attacks aim to break LMP authentication
and pairing authentication, respectively, considering the target
device’s status, either bonded or non-bonded.
First, the link key extraction attack extracts link keys of
Bluetooth devices by exploiting the Bluetooth protocol log
(i.e., HCI dump) in which link keys are logged. The attack
exhibits a signiﬁcant impact on Bluetooth security compared
to the previous attacks: 1) the attack aims to extract semi-
permanent (saved) link keys. Once the key is extracted, the
attacker can continuously exploit
it for multiple sessions,
breaking forward secrecy. Note that many existing attacks are
only valid for a single session. 2) The attack requires access
to the Bluetooth protocol layer that is typically open to users,
such that it increases practicality, while the previous attacks
require ﬁrmware layer manipulation.
Second, the page blocking attack establishes a MITM con-
nection in a deterministic manner, which can be subsequently
leveraged to downgrade SSP to Just Works mode. Although
downgrading SSP has been discussed in several previous
studies [1]–[3], how to establish and implement the MITM
attack on Bluetooth connections have never been discussed
in the literature. Since the Bluetooth handshake transcripts
for connection establishment are delivered through a wireless
channel, it is practically challenging to force the victim device
to justly connect to the attacker’s device in practice1. Our page
blocking attack solves this problem by exploiting the novel
vulnerability we found; the lack of veriﬁcation procedure of
the Bluetooth authentication mechanism that checks whether
the connection initiator actually initiates the pairing.
The main contributions of our work are summarized as:
• We ﬁrst present a link key extraction attack that exploits
the security ﬂaw in the HCI dump, which records all data
passed through the HCI interface in a log ﬁle, including
link keys. We then describe how to extract link keys by
exploiting the HCI ﬂaw against Android and Windows
systems in practice.
• Next, we propose a page blocking attack that ensures
MITM connection establishment between a victim and
1On the basis of our experiment,
the success rate of establishing the
MITM connection shows 42∼60%. More detailed experiment results will be
explained in Section VI.
2158-3927/22/$31.00 ©2022 IEEE
DOI 10.1109/DSN53405.2022.00033
227
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:30 UTC from IEEE Xplore.  Restrictions apply. 
attacker devices in a deterministic manner. It then leads
to a subsequent SSP downgrade attack to Just Works by
exploiting the lack of the authentication mechanism for
the connection initiator.
• We demonstrate the efﬁcacy of the link key extraction and
page blocking attacks via real-world implementations.
More precisely, our implementation of the link key ex-
traction shows that various systems (i.e., six smartphones
and two PC systems) are logging 128-bit link keys into
the HCI dump, which are extractable. We also implement
the page blocking attack on seven smartphones, and
show that the attack can force the victim devices to be
connected to the attacker’s device with a 100% success
rate and then downgraded to Just Works.
• To thwart our discovered attacks, we propose several
short-term mitigation mechanisms that are deployable in
the current Bluetooth networks and also discuss potential
long-term mitigation strategies.
Application 
Profile services 
Core system 
host 
GAP 
SDP 
ATT/ 
GATT 
SMP 
Protocols 
L2CAP 
HCI 
controller 
Device Manager 
Link Manager 
Baseband resource Manager 
Link Controller 
BR/EDR and LE Radio (PHY) 
Fig. 1: Bluetooth system architecture
Responsible Disclosure. We reported our ﬁndings and tech-
nical details to the Bluetooth SIG, and claimed the necessity
for the speciﬁcation revision such as the link key payload
encryption. We are now waiting for their responses, as of April
5th, 2022.
II. BACKGROUND
Bluetooth technology is implemented based on either Basic
Rate Enhanced Data Rate (BR/EDR) or Bluetooth Low Energy
(BLE). BR/EDR, also known as classic Bluetooth, usually
suits for high throughput services such as hands-free, audio
distribution that are normally used in car infotainment and
headset devices. Whereas, BLE, also known as Bluetooth
Smart, is designed to support applications that have lower
throughput and duty cycle such as IoT devices. The two
variants of the Bluetooth technology share a core system
architecture in common, which consists of three components:
host stack (or host), controller, and host controller interface
(HCI). Above the core system, Bluetooth application services
can be run at the application layer. Fig. 1 describes a typical
architecture of Bluetooth system. Server/client interoperability
of application services is accomplished by the speciﬁcations
called Bluetooth proﬁle such as Hands-Free proﬁle (HFP),
Phone Book Access Proﬁle (PBAP), and the network function-
alities for the proﬁles are supported by the core components.
A. Bluetooth Architecture
The Bluetooth core components are described as follows.
1) Host Stack: Host stack runs core protocols to manage
connection and logical links for proﬁle services in the applica-
tion layer. The core protocols include Generic Access Proﬁle
(GAP) for device connection, Service Discovery Protocol
(SDP) for service discovery and connection, and Logical Link
Control and Adaptation Protocol (L2CAP) for data fragmen-
tation, reconstruction, and per-channel communications, for
instance. Some host stack solutions are implemented based on
open source projects such as BlueZ [11] and Bluedroid [12],
and can be customized without much difﬁculty in practice.
2) Controller: The controller manages the trafﬁc of Blue-
tooth communications between devices. Link Manager Proto-
col (LMP) in the controller supports security operations, in-
cluding key generation, device authentication, and data encryp-
tion and decryption. Its software implementation is typically
dependent on the hardware structures within chipset. For this
reason, it is almost infeasible for the third party developers to
install their customized operations to the controller.
3) HCI: It enables data communication between the host
and controller via a serial interface. HCI is deﬁned in the
Bluetooth speciﬁcation [13] as a set of commands and events
for the host and the controller to interact with each other, along
with a data packet format and a set of rules for ﬂow control.
Since HCI is separated from the host, it allows a host stack
to be deployed with one or more controllers independently.
Furthermore, HCI is used to deploy a protocol tracking tool,
called HCI dump, which records whole HCI data into log ﬁles.
B. Bluetooth BR/EDR Discovery and Connection
BR/EDR devices can discover each other and establish a
new connection with the target device by the following pro-
cedures. Any device can be either an initiator or a responder.
1) Target Discovery: A responder device is set to a discov-
erable mode, and wait for receiving any inquiry message. An
initiator device broadcasts inquiry message to every device in
the supported signal range and requests a response message
from any responder. When any potential responder device re-
ceives the message, it responds to the inquiry by broadcasting
its information such as Bluetooth address (BDADDR), device
name, and supporting service.
2) Connection Establishment: The initiator device begins
the connection establishment by sending a page request to the
BDADDR of a discovered target device. The target responder
then sends a page response message to the initiator. Finally,
the initiator assigns an LT ADDR, which is a logical transport
address, to the responder to establish a Bluetooth connection.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:17:30 UTC from IEEE Xplore.  Restrictions apply. 
228
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:3)(cid:20)(cid:3)
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:3)(cid:21)(cid:3)
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:3)(cid:20)(cid:3)
(cid:39)(cid:72)(cid:89)(cid:76)(cid:70)(cid:72)(cid:3)(cid:21)(cid:3)
(cid:20)(cid:17)(cid:3)(cid:40)(cid:86)(cid:87)(cid:68)(cid:69)(cid:79)(cid:76)(cid:86)(cid:75)(cid:3)(cid:70)(cid:82)(cid:81)(cid:81)(cid:72)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:20)(cid:17)(cid:3)(cid:40)(cid:86)(cid:87)(cid:68)(cid:69)(cid:79)(cid:76)(cid:86)(cid:75)(cid:3)(cid:70)(cid:82)(cid:81)(cid:81)(cid:72)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:21)(cid:17)(cid:3)(cid:44)(cid:50)(cid:3)(cid:70)(cid:68)(cid:83)(cid:68)(cid:69)(cid:76)(cid:79)(cid:76)(cid:87)(cid:76)(cid:72)(cid:86)(cid:3)
(cid:11)(cid:82)(cid:80)(cid:76)(cid:87)(cid:87)(cid:72)(cid:71)(cid:12)(cid:3)
(cid:21)(cid:17)(cid:3)(cid:44)(cid:50)(cid:3)(cid:70)(cid:68)(cid:83)(cid:68)(cid:69)(cid:76)(cid:79)(cid:76)(cid:87)(cid:76)(cid:72)(cid:86)(cid:3)
(cid:22)(cid:17)(cid:3)(cid:40)(cid:38)(cid:39)(cid:43)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)(cid:83)(cid:68)(cid:85)(cid:68)(cid:80)(cid:72)(cid:87)(cid:72)(cid:85)(cid:86)(cid:3)
(cid:23)(cid:17)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:54)(cid:87)(cid:68)(cid:74)(cid:72)(cid:20)(cid:3)(cid:3)
(cid:11)(cid:78)(cid:72)(cid:92)(cid:3)(cid:83)(cid:68)(cid:85)(cid:68)(cid:80)(cid:72)(cid:87)(cid:72)(cid:85)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:12)(cid:3)
(cid:24)(cid:17)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:54)(cid:87)(cid:68)(cid:74)(cid:72)(cid:21)(cid:3)(cid:3)
(cid:11)(cid:39)(cid:43)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:12)(cid:3)
(cid:25)(cid:17)(cid:3)(cid:42)(cid:72)(cid:81)(cid:72)(cid:85)(cid:68)(cid:87)(cid:72)(cid:3)(cid:68)(cid:3)(cid:79)(cid:76)(cid:81)(cid:78)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)
(cid:26)(cid:17)(cid:3)(cid:47)(cid:48)(cid:51)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:27)(cid:17)(cid:3)(cid:40)(cid:81)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:22)(cid:17)(cid:3)(cid:40)(cid:38)(cid:39)(cid:43)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)(cid:83)(cid:68)(cid:85)(cid:68)(cid:80)(cid:72)(cid:87)(cid:72)(cid:85)(cid:86)(cid:3)
(cid:23)(cid:17)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:54)(cid:87)(cid:68)(cid:74)(cid:72)(cid:20)(cid:3)(cid:3)
(cid:11)(cid:78)(cid:72)(cid:92)(cid:3)(cid:83)(cid:68)(cid:85)(cid:68)(cid:80)(cid:72)(cid:87)(cid:72)(cid:85)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:12)(cid:3)
(cid:24)(cid:17)(cid:3)(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:54)(cid:87)(cid:68)(cid:74)(cid:72)(cid:21)(cid:3)(cid:3)
(cid:11)(cid:39)(cid:43)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:12)(cid:3)
(cid:25)(cid:17)(cid:3)(cid:42)(cid:72)(cid:81)(cid:72)(cid:85)(cid:68)(cid:87)(cid:72)(cid:3)(cid:68)(cid:3)(cid:79)(cid:76)(cid:81)(cid:78)(cid:3)(cid:78)(cid:72)(cid:92)(cid:3)
(cid:21)(cid:17)(cid:3)(cid:47)(cid:48)(cid:51)(cid:3)(cid:68)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:22)(cid:17)(cid:3)(cid:40)(cid:81)(cid:70)(cid:85)(cid:92)(cid:83)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(a) For non-bonded devices
(b) For bonded devices
Fig. 2: Pairing and authentication procedures
To prevent unintentional connections, a responder may set the
non-connectable mode to disable the page procedure.
C. Bluetooth Pairing and Authentication
Once two devices are connected, they conduct pairing, LMP
authentication and encryption to enforce the security rules as
shown in Fig. 2.
1) Secure Simple Pairing: Pairing refers to a procedure of
authenticating a newly connected device. In the legacy pairing,
a PIN number is manually entered. However, as it has been
recognized as vulnerable to diverse attacks [14], [15], Secure
Simple Pairing (SSP) was developed as a cryptographically-
enforced protocol. If two devices are connected, they exchange
their IO capabilities2 and ECDH key parameters. They then
authenticate each other based on the ECDH public parameters
and secret values exchanged in the previous step in the
‘Authentication Stage 1’; and ﬁnally the same link key is
derived in each device from the secret key (called DHKey)
agreed using ECDH algorithm as shown in Fig. 2a.
Once a link key is generated, both devices may save
it to reuse for subsequent authentication (called ‘bonding’)
such that the later pairing procedures can be omitted for the
‘bonded’ devices. For bonded devices, only LMP authentica-
tion is performed based on the previously shared link key as
shown in Fig. 2b.
2) LMP Authentication and Encryption: For the bonded
devices, SSP is omitted and only the LMP authentication
is launched between them. During the LMP authentication
procedure, each device checks if they possess the same link
key via a challenge-response protocol. Speciﬁcally, a veriﬁer