groupCount 377
first-class 87, 92
hasAnchoringBounds 388
introduced5
hasTransparentBounds 387
vs.metasequence 27
hitEnd 389-392
metasequence defined 27
1ookingAt 376
method chaining
389
matches 376
Java 389
pattern 393
methodindex
Java 366
quoteReplacement 379
mimic
region 384-389
$'357
region 386
$357
regionEnd 386
$&302,357
regionStart 386
atomic grouping 174
replaceA11 378
class set operations 126
replaceFirst 379
conditionalwithlookaround 140
replacement argument 380
initial-character discrimination optimiza-
requireEnd 389-392
tion 258-259
reset 392-393
named capture 344-345
start 377
POSIX matching 335
text 394
possessive quantifiers 343-344
toMatchResult 377
variable interpolation321
toString393
word boundaries 66,134,341-342
useAnchoringBounds 388
minlen lengtb362
usePattern 393,399
minus in character class9
useTransparentBounds 387
MISL .NET 410
Matcher object 373
“missing"functions
PHP 471
reusing 392-393
\p(Mn）
123
$matches
450
modemodifier
110, 135-136
ts.$al1_matches 454
mode-modifiedspan
110,135-136,367,
matches
392,407,446
unexpected 194-195
modesintroducedwith egrep 14-15
viewing all 332
\p(Modifier_Letter)
123
matches method
376,395
modifiers 372
Matches (Regex object method)
422
(see also match, modes)
MatchEvaluator
423-424
combining 69
matching
example with five 316
delimited text 196-198
/g51
HTML tag 200
/i47
longest-leftmost 177-179
“locking in”304-305
matchingcommentsJava 272-276
notation 99
Matchobject object(.NET)
creating 422
/osmosis293
\p(Math_Symbo1)
123
Perl292-293
Maton,William
xxiv,36
Perlcore 292-293
mb_ereg suite 439
with regex object 304-305
MBOL362
unknown 448
\p（Mc）123
\p(Modifier_Symbol)
123
McCloskey,Mike
xxiv
Morse, lan xxiv
McCulloch,Warren
85
mottoPerl348
\p（Me)
123
-Mre=debug
（bqep,a asns)
mechanicsviewing 331-332
multi-characterquotes165-166
Multi1ine (.NET) 408, 419-420, 427
---
## Page 529
索引
503
multiple-bytecharacterencoding29
.NET(cont'd)
MungeRegexLiteral
342-344,346
literal-text mode 136
Mustang Java 401
MISL 410
Am
object model 417
\p（）125
inembeddedcode338-339
regex approach 96-97
vs.1ocal 297
regexflavor 407
MySQL
search and replace 414,423-424
after-match data 138
URL example 204
DBIx:DWIW 258
version covered 405
version covered 91
word boundaries 134
wordboundaries 134
(see also VB.NET)
neurophysiologists
earlyregex study 85
neverending match
1222-228,330,340
\p(N)122,395
avoiding264-266
\n 49, 115-116
discovery 226-228
introduced 44
explanation 226-228
machine-dependency 115
non-determinism 264
$^N300-301,344-346
short-circuiting 250
(7n）408
solving with atomic grouping 268
named capture 138
solving with possessive quantifiers 268
mimicking 344-345
New Regex
96,99, 416, 421
.NET 408-409
newline and HTIP 115
numeric names 451
NEXT LINE 109,370,407
PHP 450-452, 457, 476477
NextMatch (Match objectmethod) 429
with unnamed capture409
NFA
naughty variables 356
acronym spelled out 156
OK for debugging331
and alternation 174-175
\p(Nd）123,368,406
compared with DFA 156-157,180-183
negated class
control benefits 155
introduced 10-11
efficiency 179
and lazy quantifiers 167
essence(see backtracking)
Tcl 112
first introduced 145
ncgativelookahead
1(see lookahead,
freeflowingregex277-281
negative)
and greediness 162
negativelookbehind
(see lookbehind,
implementation ease 183
negative)
introduction 153
NEL
109, 370, 407
nondeterminism 265
nervous system85
checkpoint 264-265
nested constructs
POSIXefficiency 179
.NET 436
testingfor 146-147
Perl 328-331,340-341
theory 180
PHP 475-478, 481
\p(N1）123
$NestedStuffRegex
339,346
\N(LATIN SHALL LETTER SHARP S)
290
.NET xvii, 405-438
\N(name)
290
$+202
(see also pragma)
after-match data 138
inhibiting 292
benchmarking 237
p(No)123
character-class subtraction 406
No DashesHall Of Shame
458
code example 219
no re 'debug'
361
flavor overview 92
no_match_vars
357
JTT410
nomenclature
27
line anchors 130
---
## Page 530
504
索引
non-capturingparentheses
45.137-138
optimization(cont'd)
(see also parentheses)
literal-string concatenation 247
NondeterministicFiniteAutomaton