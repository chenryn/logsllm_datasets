命令的整个输出结果，并在可将其排序并正确对齐前保存。可指定
`--unbuffered`{.option} 参数在生成后即刻显示未排序的输出结果。
:::
::: para
要制定可替换的列排序顺序，请使用任意报告命令的 `-O`{.option}
参数。不一定要在输出结果中包含这些字段。
:::
::: para
以下示例显示 `pvs`{.command}
命令的输出结果，其中显示内容包括物理卷名称、大小及可用空间。
:::
``` screen
# pvs -o pv_name,pv_size,pv_free
  PV         PSize  PFree
  /dev/sdb1  17.14G 17.14G
  /dev/sdc1  17.14G 17.09G
  /dev/sdd1  17.14G 17.14G
```
::: para
以下示例显示同样的输出结果，但根据可用空间字段排序。
:::
``` screen
# pvs -o pv_name,pv_size,pv_free -O pv_free
  PV         PSize  PFree
  /dev/sdc1  17.14G 17.09G
  /dev/sdd1  17.14G 17.14G
  /dev/sdb1  17.14G 17.14G
```
::: para
以下示例表示不需要显示用来排序的字段内容。
:::
``` screen
# pvs -o pv_name,pv_size -O pv_free
  PV         PSize
  /dev/sdc1  17.14G
  /dev/sdd1  17.14G
  /dev/sdb1  17.14G
```
::: para
要显示反向排序，请在 `-O`{.option} 参数前指定 的字段前添加 `-`{.option}
字符。
:::
``` screen
# pvs -o pv_name,pv_size,pv_free -O -pv_free
  PV         PSize  PFree
  /dev/sdd1  17.14G 17.14G
  /dev/sdb1  17.14G 17.14G
  /dev/sdc1  17.14G 17.09G
```
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#report_units}4.8.4. 指定单位 {.title}
:::
::: para
要指定 LVM 报告显示的单位，请使用该报告命令的 `--units`{.option}
参数。可指定 (b)、(k)、(m)、(g)、(t)、(e)xabytes、(p) 和 (h)。默认显示为
human-readable（用户可读）。可在 `lvm.conf`{.filename} 文件的
`global`{.literal} 部分设置 `units`{.literal} 参数覆盖默认值。
:::
::: para
以下示例采用 MB 指定 `pvs`{.command} 命令的输出结果，而不是默认的 GB。
:::
``` screen
# pvs --units m
  PV         VG     Fmt  Attr PSize     PFree
  /dev/sda1         lvm2 --   17555.40M 17555.40M
  /dev/sdb1  new_vg lvm2 a-   17552.00M 17552.00M
  /dev/sdc1  new_vg lvm2 a-   17552.00M 17500.00M
  /dev/sdd1  new_vg lvm2 a-   17552.00M 17552.00M
```
::: para
默认情况是以 2 的次方数（1024
的倍数）显示单位。可使用大写单位（B、K、M、G、T、H）以 1000
的倍数显示单位。
:::
::: para
下面的命令采用 1024 的倍数（即默认行为）显示命令输出结果。
:::
``` screen
# pvs
  PV         VG     Fmt  Attr PSize  PFree
  /dev/sdb1  new_vg lvm2 a-   17.14G 17.14G
  /dev/sdc1  new_vg lvm2 a-   17.14G 17.09G
  /dev/sdd1  new_vg lvm2 a-   17.14G 17.14G
```
::: para
下面的命令采用 1000 的倍数显示命令输出结果。
:::
``` screen
#  pvs --units G
  PV         VG     Fmt  Attr PSize  PFree
  /dev/sdb1  new_vg lvm2 a-   18.40G 18.40G
  /dev/sdc1  new_vg lvm2 a-   18.40G 18.35G
  /dev/sdd1  new_vg lvm2 a-   18.40G 18.40G
```
::: para
还可以指定 (s) 扇区（默认为 512 字节）或自定义单位。
:::
::: para
下面的示例以扇区数显示 `pvs`{.command} 命令的输出结果。
:::
``` screen
# pvs --units s
  PV         VG     Fmt  Attr PSize     PFree
  /dev/sdb1  new_vg lvm2 a-   35946496S 35946496S
  /dev/sdc1  new_vg lvm2 a-   35946496S 35840000S
  /dev/sdd1  new_vg lvm2 a-   35946496S 35946496S
```
::: para
下面的示例以 4MB 为单位显示 `pvs`{.command} 命令的输出结果。
:::
``` screen
# pvs --units 4m
  PV         VG     Fmt  Attr PSize    PFree
  /dev/sdb1  new_vg lvm2 a-   4388.00U 4388.00U
  /dev/sdc1  new_vg lvm2 a-   4388.00U 4375.00U
  /dev/sdd1  new_vg lvm2 a-   4388.00U 4388.00U
```
:::
:::
:::
[]{#LVM_examples.html}
::: chapter
::: titlepage
# [⁠]{#LVM_examples.html#LVM_examples}第 5 章 LVM 配置示例 {.title}
:::
[]{#LVM_examples.html#idm140426114369184 .indexterm}
::: para
本章提供了一些基本 LVM 配置示例。
:::
::: section
::: titlepage
# [⁠]{#LVM_examples.html#vol_create_ex}5.1. 在三个磁盘中创建 LVM 逻辑卷 {.title}
:::
[]{#LVM_examples.html#idm140426145111376
.indexterm}[]{#LVM_examples.html#idm140426167606784 .indexterm}
::: para
在这个示例中是要创建一个名为 `new_logical_volume`{.literal}
的逻辑卷，它由磁盘 `/dev/sda1`{.literal}、`/dev/sdb1`{.literal} 和
`/dev/sdc1`{.literal} 组成。
:::
::: section
::: titlepage
## [⁠]{#LVM_examples.html#pv_create_ex1}5.1.1. 创建物理卷 {.title}
:::
::: para
要在某个卷组中使用磁盘，需要将其标记为 LVM 物理卷。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
这个命令会破坏 `/dev/sda1`{.literal}、`/dev/sdb1`{.literal}
和`/dev/sdc1`{.literal} 中的所有数据。
:::
:::
:::
``` screen
# pvcreate /dev/sda1 /dev/sdb1 /dev/sdc1
  Physical volume "/dev/sda1" successfully created
  Physical volume "/dev/sdb1" successfully created
  Physical volume "/dev/sdc1" successfully created
```
:::
::: section
::: titlepage
## [⁠]{#LVM_examples.html#vg_create_ex1}5.1.2. 创建卷组 {.title}
:::
::: para
下面的命令可创建卷组 `new_vol_group`{.literal}。
:::
``` screen
# vgcreate new_vol_group /dev/sda1 /dev/sdb1 /dev/sdc1
  Volume group "new_vol_group" successfully created
```
::: para
可以使用 `vgs`{.command} 命令显示新卷组的属性。
:::
``` screen
# vgs
  VG            #PV #LV #SN Attr   VSize  VFree
  new_vol_group   3   0   0 wz--n- 51.45G 51.45G
```
:::
::: section
::: titlepage
## [⁠]{#LVM_examples.html#lv_create_ex1}5.1.3. 创建逻辑卷 {.title}
:::
::: para
下面的命令可在卷组 `new_vol_group`{.literal} 中创建逻辑卷
`new_logical_volume`{.literal}。本示例创建的逻辑卷使用了卷组的 2GB
容量。
:::
``` screen
# lvcreate -L 2 G -n new_logical_volume new_vol_group
  Logical volume "new_logical_volume" created
```
:::
::: section
::: titlepage
## [⁠]{#LVM_examples.html#fs_create_ex1}5.1.4. 创建文件系统 {.title}
:::
::: para
下面的命令在逻辑卷中创建了一个 GFS2 文件系统。
:::
``` screen
# mkfs.gfs2 -plock_nolock -j 1 /dev/new_vol_group/new_logical_volume
This will destroy any data on /dev/new_vol_group/new_logical_volume.
Are you sure you want to proceed? [y/n] y
Device:                    /dev/new_vol_group/new_logical_volume
Blocksize:                 4096
Filesystem Size:           491460
Journals:                  1
Resource Groups:           8
Locking Protocol:          lock_nolock
Lock Table:
Syncing...
All Done
```
::: para
下面的命令将挂载逻辑卷并报告文件系统磁盘空间用量。
:::
``` screen
# mount /dev/new_vol_group/new_logical_volume /mnt
[root@tng3-1 ~]# df
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/new_vol_group/new_logical_volume
                       1965840        20   1965820   1% /mnt
```
:::
:::
::: section
::: titlepage
# [⁠]{#LVM_examples.html#stripe_create_ex}5.2. 创建条带逻辑卷 {.title}
:::
[]{#LVM_examples.html#idm140426153985952
.indexterm}[]{#LVM_examples.html#idm140426153984512 .indexterm}
::: para
本示例为创建一个名为 `striped_logical_volume`{.literal}
的条带逻辑卷，并可在磁盘 `/dev/sda1`{.literal}、`/dev/sdb1`{.literal} 和
`/dev/sdc1`{.literal} 间跨磁盘条带分配数据。
:::
::: section
::: titlepage
## [⁠]{#LVM_examples.html#pv_create_ex2}5.2.1. 创建物理卷 {.title}
:::
::: para
将卷组中要使用的磁盘标记为 LVM 物理卷。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
这个命令会破坏 `/dev/sda1`{.literal}、`/dev/sdb1`{.literal}
和`/dev/sdc1`{.literal} 中的所有数据。
:::
:::
:::
``` screen
# pvcreate /dev/sda1 /dev/sdb1 /dev/sdc1
  Physical volume "/dev/sda1" successfully created
  Physical volume "/dev/sdb1" successfully created
  Physical volume "/dev/sdc1" successfully created
```
:::
::: section
::: titlepage