my_c=0x1e4232ba92296dbb142e36f2c68cc63a
print hex(my_simon.decrypt(my_c))
my_c=0xee84f579132c4058beabc443a36d6733
print hex(my_simon.decrypt(my_c))
my_c=0x5b2a61edc0862b924f91b71eff091380
print hex(my_simon.decrypt(my_c))
my_c=0x34339a815b13b10dd6d6198c1bb251c3
print hex(my_simon.decrypt(my_c))
#cfinal='\x08\xec\x4a\x98\x65\x34\xd3\xd7\xd5\xd9\x7e\x4d\x01\xf5\xbf\x96'
f1=open('dump','rb')
f2=open('myflag','wb')
data=f1.read()
count=0
my_c=0
for i in range(1,len(data)/8):
  tmp=(ord(data[i*8+7])>(8))
      data2=plaint&0xff
      f2.write('%s'%(chr(data2)))
    count=0
    my_c=0
#0x50e*0x174+0x24e
#0x50e*0x266+0x1a5
#from PIL import Image
import cv2
import numpy
'''im = Image.open("b.png")
im_alpha = im.convert('RGBA')
Pixels = list(im.getdata())
print map(hex,Pixels[0x50e*0x174+0x24e])'''
'''
with open('pixels','wb') as f:
for i in range(len(Pixels)):
  for j in range(len(Pixels[i])):
    f.write("%s"%chr(Pixels[i][j]))'''
image = cv2.imread("b.png",cv2.IMREAD_UNCHANGED)
RGBA = cv2.cvtColor(image,cv2.COLOR_BGRA2RGBA)
image = numpy.ndarray.tolist(RGBA)
'''print map(hex,image[0x1b6][0x2fe])
print map(hex,image[0x174][0x24e])
print map(hex,image[0x266][0x1a5])
print map(hex,image[0x1f9][0xe0])
print map(hex,image[0x260][0x212])
print map(hex,image[0x17][0x175])
print map(hex,image[0x18][0x259])
print map(hex,image[0x27][0x1b5])
print map(hex,image[0x2d7][0x18a])
print map(hex,image[0x255][0x173])
print map(hex,image[0x10a][0x4fb])
print map(hex,image[0x262][0x2ca])
print map(hex,image[0x124][0x3da])
print map(hex,image[0x191][0x43f])
print map(hex,image[0x100][0x1b2])
print map(hex,image[0xdc][0x18c])
print map(hex,image[0xe2][0x3cd])
print map(hex,image[0x280][0x75])
print map(hex,image[0x211][0x61])
print map(hex,image[0xa1][0x1b2])
print map(hex,image[0x221][0x363])
print map(hex,image[0x288][0x1a])
print map(hex,image[0x1f4][0x19])
print map(hex,image[0x1a][0x62])
print map(hex,image[0x3f][0x16c])
print map(hex,image[0xb7][0xf1])
print map(hex,image[0xef][0x20b])
print map(hex,image[0xcd][0x95])
print map(hex,image[0x24f][0x242])
print map(hex,image[0x167][0x34a])
print map(hex,image[0x7a][0x1fd])
print map(hex,image[0x28d][0x483])
print map(hex,image[0x35][0x222])'''
from speck import SpeckCipher
from simon import SimonCipher
my_simon = SimonCipher(0xe060607060a06000606000102000000)
my_plaintext = 0x31303938373635343332317b67616c66
simon_ciphertext = my_simon.encrypt(my_plaintext)
print hex(simon_ciphertext)
#print hex(my_simon.decrypt(simon_ciphertext))
my_plaintext = 0x6161616161616161616161
simon_ciphertext = my_simon.encrypt(my_plaintext)
print hex(simon_ciphertext)
simon_ciphertext=0x2e7ff95ecfe304903e39b69dbb085031
print hex(my_simon.decrypt(simon_ciphertext))
my_cipher='\\x08\\xec\\x4a\\x98\\x65\\x34\\xd3\\xd7\\xd5\\xd9\\x7e\\x4d\\x01\\
xf5\\xbf\\x96'
my_c=0x96bff5014d7ed9d5d7d33465984aec08
print hex(my_simon.decrypt(my_c))
my_c=0x26e105e5d76131d55e4c492b496ab27d
print hex(my_simon.decrypt(my_c))
my_c=0x95e451362de3c4217a872de63fd57945
print hex(my_simon.decrypt(my_c))
my_c=0x52cc6ae7bb9ad14aa48feea18bf8b5b5
print hex(my_simon.decrypt(my_c))
my_c=0x1e4232ba92296dbb142e36f2c68cc63a
print hex(my_simon.decrypt(my_c))
my_c=0xee84f579132c4058beabc443a36d6733
print hex(my_simon.decrypt(my_c))
my_c=0x5b2a61edc0862b924f91b71eff091380
print hex(my_simon.decrypt(my_c))
my_c=0x34339a815b13b10dd6d6198c1bb251c3
print hex(my_simon.decrypt(my_c))
#cfinal='\\x08\\xec\\x4a\\x98\\x65\\x34\\xd3\\xd7\\xd5\\xd9\\x7e\\x4d\\x01\\xf
5\\xbf\\x96'
f1=open('dump','rb')
f2=open('myflag','wb')
data=f1.read()
count=0
my_c=0
for i in range(1,len(data)/8):
  tmp=(ord(data[i*8+7])>(8))
      data2=plaint&0xff
      f2.write('%s'%(chr(data2)))
    count=0
    my_c=0
#0x50e*0x174+0x24e
#0x50e*0x266+0x1a5
#from PIL import Image
import cv2
import numpy
'''im = Image.open("b.png")
im_alpha = im.convert('RGBA')
Pixels = list(im.getdata())
print map(hex,Pixels[0x50e*0x174+0x24e])'''
'''
with open('pixels','wb') as f:
for i in range(len(Pixels)):
  for j in range(len(Pixels[i])):
    f.write("%s"%chr(Pixels[i][j]))'''
image = cv2.imread("b.png",cv2.IMREAD_UNCHANGED)
RGBA = cv2.cvtColor(image,cv2.COLOR_BGRA2RGBA)
image = numpy.ndarray.tolist(RGBA)
'''print map(hex,image[0x1b6][0x2fe])
print map(hex,image[0x174][0x24e])
print map(hex,image[0x266][0x1a5])
print map(hex,image[0x1f9][0xe0])
print map(hex,image[0x260][0x212])
print map(hex,image[0x17][0x175])
print map(hex,image[0x18][0x259])
print map(hex,image[0x27][0x1b5])
print map(hex,image[0x2d7][0x18a])
print map(hex,image[0x255][0x173])
print map(hex,image[0x10a][0x4fb])
print map(hex,image[0x262][0x2ca])
print map(hex,image[0x124][0x3da])
print map(hex,image[0x191][0x43f])
print map(hex,image[0x100][0x1b2])
print map(hex,image[0xdc][0x18c])
print map(hex,image[0xe2][0x3cd])
print map(hex,image[0x280][0x75])
print map(hex,image[0x211][0x61])
print map(hex,image[0xa1][0x1b2])
print map(hex,image[0x221][0x363])
print map(hex,image[0x288][0x1a])
print map(hex,image[0x1f4][0x19])
print map(hex,image[0x1a][0x62])
print map(hex,image[0x3f][0x16c])
print map(hex,image[0xb7][0xf1])
print map(hex,image[0xef][0x20b])
print map(hex,image[0xcd][0x95])
print map(hex,image[0x24f][0x242])
print map(hex,image[0x167][0x34a])
print map(hex,image[0x7a][0x1fd])
print map(hex,image[0x28d][0x483])
print map(hex,image[0x35][0x222])'''
from speck import SpeckCipher
from simon import SimonCipher
my_simon = SimonCipher(0xe060607060a06000606000102000000)
my_plaintext = 0x31303938373635343332317b67616c66
simon_ciphertext = my_simon.encrypt(my_plaintext)
print hex(simon_ciphertext)
#print hex(my_simon.decrypt(simon_ciphertext))
my_plaintext = 0x6161616161616161616161
simon_ciphertext = my_simon.encrypt(my_plaintext)
print hex(simon_ciphertext)
simon_ciphertext=0x2e7ff95ecfe304903e39b69dbb085031
print hex(my_simon.decrypt(simon_ciphertext))