### 图4：模拟结果

图4展示了在每个数据集上运行100次为期一个月的模拟实验的结果（每个数据点代表一次模拟）。管理员每月多次对文件进行重新加密。

最后，我们注意到，在RBAC0中，基于IBE/IBS和PKI的构建成本并没有显著差异。例如，图4f比较了场景“防火墙1”中每月执行的IBE加密次数与非对称加密次数，揭示了两种构建方法的成本分布相似。鉴于这些操作类别的成本相似性，我们可以得出结论，从计算角度来看，这两种构建方法同样昂贵。

### E. 将实验结果转换为实际成本

我们现在展示如何将通用IBE加密的成本转换为给定方案的实际计算成本。由于任何实现的运行时间取决于许多变量（如处理器速度、内存等），我们将重点放在需要执行的（配对友好）椭圆曲线密码操作数量上。我们假设方案使用的是不对称（类型3）配对：e : G × ˆG → GT，其中G, ˆG, GT是素数阶群；这种配对比对称（类型1）配对更高效 [25]。我们在G和ˆG中使用加法表示法，而在GT中使用乘法表示法。

我们以G中的乘法作为成本单位，并用这个操作来表示其他操作的相对成本。这些相对成本在不同的硬件和合理的实现中应该是相对稳定的。表III给出了这些相对成本，数据由Zeutro LLC公司的ABE/配对实现专家Ayo Akinyele提供（个人通信）。G, ˆG中的加法和GT中的乘法成本非常低，因此我们忽略它们。这些相对成本基于RELIC v0.4 [2] 的实现，使用Barreto-Naehrig曲线，基域大小为256位，GMP用于大数运算，并使用标准配置选项进行素数域算术。作为一个参考，一个现代工作站运行RELIC v0.4在这种曲线上平均需要约0.2毫秒来计算G中的乘法。

| 操作         | G 乘法 | ˆG 乘法 | GT 指数 | 配对 (e) |
|--------------|--------|----------|---------|----------|
|              | 1      | 4.5      | 9       | 9        |

**表III：RELIC v0.4 中类型3配对操作相对于G中乘法的相对成本**

为了确定具体成本，我们考虑三种代表性的IBE和IBS算法组合：

- **BF+CC**：来自[11, Sec. 4.1]的IBE方案和来自[13, Sec. 2]的IBS方案。两者都是高效的，并在随机预言模型中被证明是安全的。
- **BB1+PS**：来自[9, Sec. 4]的IBE方案和来自[54, Sec. 4]的IBS方案。这些方案不如BF+CC高效，但在标准模型中被证明是安全的。
- **LW+PS**：来自[44, App. C]的IBE方案和来自[54, Sec. 4]的IBS方案。这里的IBE方案效率较低但具有更强的安全属性。

表IV列出了每种RBAC0、读取和写入操作的成本，以G中的总“乘法单位”表示。也就是说，我们使用表III中的转换因子将密码操作的成本相加。表IV指出了操作调用者（管理员或用户）以及参考监视器所承担的成本。为了完整性，可以在伴随的技术报告[28]中找到这些方案中每个基本IBE/IBS操作的单独成本。

| 操作       | BF+CC  | BB1+PS | LW+PS |
|------------|--------|--------|--------|
| addU       | 5.5    | 14.5   | 32.5   |
| addP       | 15     | 25     | 29     |
| addR       | 18.5   | 33     | 55     |
| assignU    | 41     | 63.5   | 103.5  |
| assignP    | 41     | 63.5   | 103.5  |
| read       | 56     | 90     | 162    |
| write      | 58     | 96.5   | 168.5  |
| invoker    | 38     | 54     | 54     |
| R.M.       | 38     | 54     | 54     |

**表IV：操作成本以G中的乘法表示**

删除用户/角色或撤销用户/权限的成本取决于撤销时的RBAC状态，因此我们无法给出确切的成本。相反，我们使用第五节D部分的实验结果来了解撤销操作的成本。图5显示了使用上述三种IBE/IBS组合对每个数据集的成本。图5a显示了以G中的乘法表示的撤销用户的成本；图5b则显示了撤销权限的成本。请注意，对于我们的数据集，单个用户撤销通常需要超过10,000次G中的乘法（在现代工作站上约为2秒），并且某些数据集经常需要超过100,000次乘法（约为20秒）。尽管这不算特别巨大，但我们提醒读者，我们的成本估算没有考虑并发、通信和存储成本。此外，我们的构建通过使用延迟重新加密和混合加密来最小化其他成本。

### VI. 讨论

毫无疑问，IBE和ABE可以为云中的数据启用各种形式的密码访问控制。实际上，图4c、4e和4f所示的结果表明，在系统以单调方式增长的情况下（即，用户和文件被添加到系统中，并且角色被赋予新的权限），无需撤销、重新密钥或复杂的元数据管理：仅凭IBE就可以在云上实施RBAC访问控制。事实上，文献中甚至有暗示或直接声称，在静态设置下，可以完全移除参考监视器（例如，[30]，[31]，[49]）。然而，这并不意味着IBE或ABE可以完全替代在实现外包访问控制时使用的参考监视器：当需要动态控制时并非如此。

本文表明，IBE和PKI系统非常适合实现RBAC0系统的点状态。然而，管理这些状态之间的过渡——特别是支持从角色中移除用户、从角色中撤销权限以及对共享多个角色的文件进行有效更新——需要非平凡的元数据管理和一个小型的、最小信任的参考监视器，该监视器在文件删除和替换之前验证签名。在我们分析的一些数据集中，当一个用户从角色中被移除时，这可能导致数千次IBE加密（图4a）和超过一百次的文件重新密钥/重新加密（图4d）。

上述考虑导致了保密性和效率之间的权衡，必须由密码学家和系统设计者共同权衡。有两种明显的方法可以实现这一点：改变假设的威胁模型，或者开发更适合动态设置的密码方法。我们现在讨论这两种方法，并评论我们在分析过程中学到的经验教训，这些经验教训可以应用于更丰富的密码访问控制，例如使用HIBE支持RBAC1，或使用ABE支持ABAC。

#### A. 替代威胁模型

我们在前一节中报告的许多开销源于密码学文献中通常隐含的威胁模型（即，不信任的存储服务器，最小的客户端基础设施）。改变这一模型可以减少在云上强制执行动态访问控制的密码成本。这里我们考虑两种这样的替代模型。

- **加密/解密代理**：大量的开销来自于依赖云存储提供商充当（密码）元数据中介和文件存储。另一种方法可能是使用组织内部的加密/解密代理服务器，仅将云提供商用作加密文件的后备存储。此代理将充当传统的参考监视器，调解所有文件访问请求，下载并解密授权读者的文件，并返回明文给用户。这将消除除了认证对称密钥加密之外的所有密码需求，并可以利用经过验证的访问控制参考监视器。然而，这种方法带来了额外的基础设施开销（代理服务器本身），可能使其对希望在云托管文件上强制访问控制的个人缺乏吸引力。大型组织还可能需要在文件I/O需求超出单个服务器的能力时，跨多个代理同步访问控制策略和密钥材料。

- **可信硬件**：简化访问控制强制执行的密码开销的一种更为极端的方法是使用SGX飞地 [39]，[47] 来完成上述加密/解密代理的工作。