the hyperlinks for the history stealing attack. An attacker
can use standard web crawling techniques to download the
group directory, and then extract the group IDs from the
web page’s source code. Several social networks even allow
the group directory to be viewed by non-members, which
enables an attacker to use commercial crawling services for
this task (see Section IV-C for details).
Directory Reconstruction: Some social networks do not
publish a group directory or only do so partially (i.e., not
all information about groups can be accessed this way). We
implemented three methods to successfully circumvent this
obstacle in practice.
First, the group identiﬁers that we observed in our exper-
iments were either systematic (for example, numerical) or
names. If group IDs can be guessed by an attacker, the group
directory can be reconstructed by simply iterating over all
(or at least a large fraction of) the ID space. The presence of
the individual groups can be veriﬁed by trying to access each
group’s web page. In Section V, we show that this brute-
force technique can be used in practice effectively with a
relatively small effort.
Second, an attacker can use the built-in search function-
ality of social networking websites to expose the group
directory by listing all groups within a speciﬁc category of
groups. Group search results are usually ranked by member
size, which means that even if the result size is limited to a
ﬁxed value, an attacker gains valuable information.
Finally, we found that social networks may provide special
“public” member proﬁles that can be accessed by non-
members (i.e., they serve as “virtual” business cards). For
privacy reasons, these proﬁles usually contain less personal
information than the original member proﬁles. However,
these public proﬁles typically reveal the groups for a speciﬁc
member. In this case, an attacker can reconstruct the group
directory (including the group members) by crawling the
public member proﬁles. Note that this technique is rather
costly, since it requires to crawl member proﬁles.
2) Group Member Crawling: In addition to group IDs,
an attacker needs to obtain the IDs of the group members
for a signiﬁcant amount of groups to successfully de-
anonymize group members. This step can also be automated
and performed on a large-scale, as we discuss below.
If we deal with a public group, the easiest case is that the
social network allows all members of this group to be listed.
Then, we can use a standard crawling approach to discover
the group members and use them for our attack. As we show
in Section V, even tens of millions of group members can
be crawled with only a limited amount of resources.
Some social networks limit the size of the member list
that can be browsed. For example, Facebook only returns
the ﬁrst 6,000 members of a group. Hence, this limits a
crawling attempt to only fully discover groups with up to
6,000 members. While this is still useful in practice, clearly,
we would like to also be able to crawl larger groups.
In order to overcome this limitation, we take advantage
of the fact that social networks typically allow searching
within groups for members. This limits the amount of
members returned per search, but we can efﬁciently extract
most group members by searching for common ﬁrst or last
names. We use publicly available data from the U.S. Census
Bureau [17] to determine common names, and then utilize
this information to search within large groups to extract their
members.
If we are dealing with a closed group, we cannot easily
access the membership information for this group since only
members can access this information. Hence, we send a
request to join the group from a legitimate user account
by using a script (i.e., “I would like to become member
of this group”). If our application is accepted, we leave
the group after we have collected membership information.
Surprisingly, such a simple automated demand is successful
in practice as we show in Section V.
Note that, depending on the resources of an attacker,
the member crawling may optionally be performed on-
the-ﬂy instead of ofﬂine before the actual attack. In an
online setting, the attacker would crawl the groups a victim
is a member of on demand, and then use the collected
information for performing the second round of history
stealing (i.e., veriﬁcation step). From a conceptual point of
view, both attacks are similar. They just vary in the amount
of resources needed.
IV. CRAWLING EXPERIMENTS
In this section, we describe our empirical experiments to
extract group information from social networks and present
the results we obtained for three social networks.
A. Ethical and Legal Considerations
Crawling data in social networks is an ethically sensitive
area. Clearly, one question that arises is if it is ethically
acceptable and justiﬁable to conduct crawling experiments
in social networks. Similar to the experiments conducted
by Jakobsson et al. in [18], [19], we believe that realistic
experiments are the only way to reliably estimate success
rates of attacks in the real-world.
First,
in the crawling experiments we conducted, we
only accessed user information that was publicly available.
Second, note that the crawler we wrote was not powerful
enough to inﬂuence the performance of any social network
we investigated. Third, the commercial crawling services we
used had misuse protection mechanisms such as bandwidth
throttling in place that prevented them from launching denial
of service-like attacks against the websites that they were
crawling (i.e., because of a higher crawling load).
We also consulted the legal department of our university
(comparable to the IRB in the US), and we were informed
that our experiments are approved.
B. Overview
For our experiments, we performed an in-depth analysis
of the Xing platform. Furthermore, we carried out feasibility
studies for Facebook [2] and LinkedIn [20].
We chose these networks as they are representative of the
different categories of popular social networks. For example,
Facebook aims at an audience that would like to maintain
and create friendships, whereas LinkedIn and Xing are more
focused towards business users who would like to maintain
and extend their professional networks. Furthermore, each
network has a unique way of representing its member
and group directories. Because of resource limitations, and
because we had access to more Xing users for real-world
user experiments, we chose to perform an in-depth analysis
of Xing (Xing’s size is considerably smaller than Facebook
or LinkedIn, but it still has more than eight million users).
In the following, we discuss how an attacker can automat-
ically extract group information (i.e., which is a prerequisite
for the de-anonymization attack) from each of these social
networks.
C. Social Network Crawling Approaches
In order to access group information, an attacker can
either run crawlers on her machines, or use third-party crawl-
ing services. For our experimental evaluation, we followed
both approaches by implementing a custom web crawler,
and by using commercial crawling services.
1) Custom Crawler: We implemented a web crawler that
works by following the hyperlinks on a given starting public
web page and then continues to download the HTML source
code of each hyperlinked web page. To be able to also
access parts of the social network that are only restricted
to members, we added features that allow the crawler to
login using provided member credentials. To this end, we
manually registered three members to the social network
using valid registration data (e.g., e-mail for our lab, etc.).
To extract the desired data, the crawler matches a set
of regular expressions against the HTML source code. The
extracted data (for example, group IDs and group names) are
then stored in a database. To speed up the crawling process,
we ran up to four instances of our crawler simultaneously.
Anti-Crawling Techniques: Most social networks em-
ploy anti-crawling techniques to protect the data of their
members. Typically, if a member behaves suspiciously (for
example, if he tries to access an overly large amount of user
proﬁles in a short amount of time), this member’s account
will be temporarily, or permanently disabled. In contrast, no
similar restrictions are in place for group directories. We
believe that this mainly has two reasons:
1) The content
is regarded as being public, and not
security-relevant.
2) As a means of promoting groups, it should be inten-
tionally easy to access the directory.
In addition, we observed that group directories often
contain additional information that is relevant for an attacker
(e.g., group size, or additional meta data). In our scenario,
an attacker beneﬁts from these factors, as it allows her to
prepare the history stealing attack with relatively little effort.
2) Commercial Crawling Services: Attackers with lim-
ited computing or network resources might resort to com-
mercial crawling services instead of operating their own web
crawler. Such services allow customers to specify which
websites to visit. Typically,
the crawling service might
accept a given list of web pages and regular expressions.
Such a service can be very cost effective. For example,
services such as 80legs [21] charge as low as $0.25 per one
million crawled URLs. In our experiments, we used such a
service provider to perform some of our experiments.
D. Crawling Experiments
We applied the two different crawling strategies to the
three social networks Xing, Facebook and LinkedIn. In the
following, we elaborate on how the group directories for
each network can be retrieved, and provide an overview of
the results.
1) Xing: We mainly concentrated our crawling exper-
iments on this network, as its smaller size allowed us
to fully crawl its public groups. By directing our custom
crawler to Xing, we could download the data of 6,574
groups containing more than 1.8 million unique members.
Xing claims to have about 8 million members in total (i.e.,
including members that do not use groups at all). Hence, the
users in these groups represent a substantial fraction of the
entire social network.
Closed Groups: On Xing, the largest groups are public.
That
is,
there are no restrictions on who is allowed to
join these groups. On the other hand, an attacker might
also be interested in crawling closed groups (that require
manual approval by a moderator) in order to increase the
effectiveness of the de-anonymization attack. To test how
restrictive these groups are, we sent automated member
requests from a legitimate account to the groups that had
a large number of members.
We automatically applied for membership in 1,306
groups, and were accepted to 108 groups (8.2%). This
allowed us, as an attacker, to see the user IDs of a total
of 404,331 group members. Note that membership was
denied by 1,199 groups (91.8%). However, despite the high
rejection rate, we believe that our test demonstrates that
a malicious user can successfully launch automated social
engineering attacks to become member of closed groups.
In practice, a real attacker would probably use fake fotos,
detailed fake information, and a corresponding application
text to increase her success rate. In our experiments, we
simply asked if we could become member of the group.
Interestingly, our success rate was higher for the larger
(i.e., more important from the attacker’s point of view)
groups. We were often instantly added to the group with-
out receiving any feedback. Hence, membership application
seems to be a formality for many large, closed groups.
2) Facebook: Recovering the group directory for Face-
book initially appeared straightforward. The network pub-
lishes a group directory on its website. Access to the direc-
tory is not restricted. As a result, everyone can download it
from the web. The directory itself is organized in a multi-
level hierarchical collection of alphabetically ordered lists
that provide pointers to individual web pages to make it
convenient for a human to navigate.
Due to the large size of the dictionary, we decided to
use a commercial crawling service to download it. In total,
the dictionary consisted of 7.1GB of HTML data in about
7,4 million ﬁles that contain 39,156,580 group IDs. The
crawling service cost us $18.47 and we received the data
after ﬁve days.
To enumerate Facebook’s group members, we extracted
the group IDs from the group directory, and then used our
custom crawler to enumerate the members for each group.
Facebook permits each logged-in user to search within the
member lists of arbitrary groups. This search can be used
to ﬁlter the member lists to only show members whose ﬁrst
and/or last name fully matches the search token. Using an
empty string as the search token returns random sample of
the group members. The size of each search result is limited
to 6,000 members, and can be retrieved in chunks of 100
members per HTTP request.
Using Member Search Functionalities: Since most
Facebook groups have less than 6,000 members, this thresh-
old is high enough and often allows us to obtain full member
lists. An attacker can additionally use the search function-
ality to enumerate members in larger groups by searching
for common ﬁrst or last names. For example, with only 757
ﬁrst names (233 male, 524 female), an attacker would be
able to cover a cumulative percentage of more than 75% for
each gender. According to the public 1990 US census [17]
statistics,
the most common ﬁrst name, “James”, has a
3.318% probability among males, and 1.635% among the
overall population. Hence, for groups with about 367,000
members, an attacker could obtain all members with this
name (i.e.,
the search returns about 6,000 members for
each name) on average. An attacker could even reﬁne this
approach by computing a more accurate name distribution
by downloading Facebook’s own (also publicly available)
member directory.
Note that enumerating very large groups that contain
millions of members only provides a limited beneﬁt for
an attacker. Apart from the high crawling effort, the time
required to check for so many members via history stealing
would defeat the purpose of using groups as a means of
search space reduction in a realistic attack scenario (e.g.,
see throughput rates in Section V-C). However, an attacker
can also use the group member search functionality to verify
the membership of individual members.
Results: In total, we successfully crawled more than
43.2 million group members from 31,853 groups in a period
of 23 days using only two machines. While this is still only
a fraction of the overall Facebook groups and members, it
demonstrates the feasibility of the approach.
In general, we believe that an attacker could also use a
malicious botnet in real-life, or crawl for a longer period of
time, and collect signiﬁcantly more data compared to our
effort with only limited resources.
3) LinkedIn: Just like Xing, LinkedIn focuses on business
users. LinkedIn is a popular service and is widely-known.
Third-Party Crawling Use-Cases: LinkedIn does not
publish a full group directory, but provides a group search
functionality for logged-in users. Theoretically, this func-
tionality could be exploited in a similar fashion to the group
member search functionality of Facebook. However, this
requires a much larger effort due to the higher variation in
possible group names as opposed to ﬁrst or last names of
individuals.
LinkedIn uses easy to predict group IDs. Speciﬁcally,
LinkedIn uses numerical group IDs that range from 0 (old-
est) to about 3,000,000 (the newest groups). In addition, the
group ID space seems to be sparsely populated, as according
to the network itself, it currently has only 442,434 registered
groups.
In a two-phase crawling scenario, we ﬁrst started a crawl-
ing pass with a commercial service [21]. In a preparation
step, we ﬁrst generated three million hyperlinks for the
observed group ID space, and then used these links as
“seed” for the commercial crawling service. The results of
the crawling service can be used to identify which group
IDs actually exist (i.e., a group proﬁle page is returned if
the ID exists). The cost for this experiment was $7.49.
After probing for the existing groups, we performed a
second crawling run to retrieve additional information for
each group such as its group size and group description. As
Facebook
MySpace
Friendster
LinkedIn
StudiVZ
Uses dynamic links
Group directory
Member directory
Group member enumeration
Public member proﬁles
Vulnerable

Full
Full
≤6,000



Searchable
Searchable
Unlimited



Full
Full


Unlimited


Searchable