title:Privacy Requirements Implemented with a JavaCard
author:Anas Abou El Kalam and
Yves Deswarte
Anas Abou el Kalam 
LIFO – CNRS / ENSIB, France 
PI:EMAIL 
ABSTRACT 
Privacy 
important 
is  extremely 
in  healthcare 
systems.  Unfortunately,  most  of  the  solutions  already 
deployed  are  developed  empirically.  After  discussing 
some of such existing solutions, this paper describes an 
analytic and generic approach to protect personal data 
by  anonymization.  This  approach  is  then  applied  to 
some representative scenarios. The architecture and its 
implementation with a Javacard are finally presented.  
Our  analysis,  solution  and  implementation  are 
generic enough to be adapted to various collaborative 
systems 
that  process  sensitive  data  such  as  e-
commerce, e-government, social applications, etc. 
Keywords:  Privacy  and  security,  collaborative 
environments, healthcare systems, Javacard. 
1. Introduction 
Many  current information systems neglect security 
or  privacy,  or  give  more  importance  to  security  (in 
order  to  protect  the  system  owner’s  assets)  than  to 
privacy  (that  would  protect  other  people’s  personal 
data). In this paper, we suggest an analytic approach to 
privacy,  and  in  particular  for  healthcare  information 
systems.  These  systems  cover  most  of  the  needs 
generally  found  in  other  applications:  networking  of 
organizations, sensitivity of information, and diversity 
of  security  requirements.  Indeed,  although  healthcare 
networking  facilitates  data  communication,  it  creates 
serious  security  risks.  On  the  one  hand,  healthcare 
providers  must  reliably  identify  the  patients  and 
manage  all  the  information that  they  need  to  provide 
care  to  patients.  On  the  other  hand,  exchanging  and 
sharing  healthcare  data  between  various  actors 
endangers the patient’s privacy,  e.g., enabling attacks 
by inference on personal information.  
First, we discuss examples of how the United States 
and the European countries attempt to implement their 
healthcare  privacy  legislation.  Second,  we  present  a 
Privacy Requirements Implemented with a JavaCard 
Yves Deswarte 
LAAS-CNRS, Toulouse, France 
PI:EMAIL 
States 
systematic  methodology  that  links  privacy  needs  and 
adequate  solutions.  Then  we  propose  a  generic 
architecture  that  meets  the  privacy  requirements. 
Finally, we give the details of our implementation and 
we list the benefits of our work. 
2. Some existing solutions 
2.1.  Example  of  anonymization  in  the  United 
In 
the  United  States, 
the  Social  Security 
Administration uses a “Tricryption Engine" to protect 
medical data against malicious (internal and external) 
attacks.  The  Tricryption  Engine  is  a  large  encryption 
and  automated  key  management  system.  It  encrypts 
data  with  a  per-call  generated  cryptographic  key, 
encrypts the key and encrypts the link between the data 
and the key (Figure 1).  
Figure 1: Description of the tricryption engine used in 
the USA. 
The full process is detailed below: 
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:01 UTC from IEEE Xplore.  Restrictions apply. 
- 
Sensitive data to be encrypted are selected by the 
user, and a request for encryption is sent. 
-  A  randomly  generated,  symmetric  session  key  is 
created; and a random Key ID is created. 
-  The key is encrypted. 
-  The encrypted key and its Key ID are stored in a 
Key Database. 
-  The  Key  ID  is  encrypted,  producing  a  Hidden 
Link. 
key. 
-  The personal data are encrypted, using the session 
-  The  encrypted  data  and  the  Hidden  Link  are 
returned to the user. 
-  The  encrypted  data  and  the  session  key  used  to 
encrypt  them  are  completely  separated,  both 
physically  and  logically,  and  the  link  between 
them is hidden. 
The  Tricryption  Engine includes  a  fully  integrated 
administration  module,  which 
the 
administration of the Tricryption system, including the 
management of user authentication and authorization. 
supports 
Note that the administration module as well as the 
Key  Database  are  two  critical  entities  that  should  be 
well protected, otherwise all the whole security of the 
system collapses.  
2.2.  Example of anonymization in Germany 
identifying  data 
that  are  sufficient 
The  German  National  Cancer  Registry  gathers 
medical statistics related to German cancer cases. The 
procedure  of  the  population-based  cancer  registration 
is  realized in two  steps  by two institutions  [1].  In  the 
first  stage,  the  Trusted  Site  accumulates  the  data 
recorded  by  doctors.  The  Trusted  Site  anonymizes 
these data by an asymmetric procedure, e.g., a hybrid 
IDEA-RSA  encoding.  The 
is 
encrypted  with  an  IDEA  session  key,  generated 
randomly. The IDEA key is encoded by a public RSA 
key.  A  control  number  (a  pseudonym) 
thus 
generated,  using  different  attributes  of  the  personal 
data 
identify  each  patient 
uniquely. This control number is generated by using a 
one-way  hash  function  and  a  symmetrical  ciphering 
algorithm  (IDEA).  To  allow  data  coming  from  the 
different  federal  Lander  to  be  linked,  the  control 
number  generation  procedure  and  the  key  are  unique 
("Linkage  Format").  The  Trusted  Site  transfers  both 
the  encrypted  patient-identifying  data  and 
the 
epidemiological plaintext data to the Registry Site.  
The latter stores the record in the register database and 
brings together different records belonging to the same 
patient. After this matching of data, a random number 
is  added  to  the  control  number  and  the  result  is 
symmetrically encrypted by IDEA ("Storage Format"). 
to 
is 
To  match  new  records,  the  control  numbers  must  be 
deciphered  back  from  the  "Storage  Format"  to  the 
"Linkage Format". 
2.3.  Example of anonymization in Switzerland  
for 
data 
collecting  medical 
The  Swiss  Federal  Office  for  Statistics  (SFSO)  is 
responsible 
(in 
Switzerland).  To  preserve  the  patients’  privacy,  the 
SFSO  has  contacted  the  Swiss  Federal  Section  of 
Cryptography  (SFSC)  [2].  Their  analysis  concludes 
that  it  is  not  necessary  to  know  to  whom  a  given 
medical  record  belongs;  however  the  SFSO  needs  to 
recognize if two different records belong to the same 
patient.  
First,  identifying  data  (date  of  birth,  sex,  last  and 
first  name) 
is  replaced  by  a  fingerprint,  called 
anonymous  linking  code:  fingerprint  =  H  (ID-Data), 
with H being a secure hash function.  
Before  transmitting  medical  data  to  the  SFSO,  the 
hospital generates a session key c; this key is then used 
to  encrypt  the  fingerprint  during  the  transmission: 
IDEA{fingerprint}c; a public key cryptosystem (RSA) 
is used to transmit the session key RSA{c}E using the 
SFSO public key E. 
After reception, “c” is retrieved by using the SFSO 
private  key  D;  the  encrypted  fingerprints  are  then 
decrypted,  and  uniformly 
the 
symmetric  key  K  of  the  SFSO:  they  become  the 
anonymous linking codes used as personal codes. The 
key  K  is  distributed  among  several  trusted  persons, 
using Shamir’s secret sharing technique. 
re-encrypted  by 
However, it  is  easy  to  notice  that  the intermediate 
steps of these transformations should never be visible 
to the SFSO operators. Indeed, how can we be sure that 
the secret key c and the fingerprints are never recorded 
in  a  storage  medium?  It  is  clear  that  these  steps 
(calculation phases) should be done in a well-protected 
hardware  module  (a  kind  of  secure  “Black-box”).  In 
addition,  inviolable  access  control  mechanisms  (e.g., 
specific  tamperproof  hardware),  could  improve  the 
protection.  The  aim  is  that  only  trustworthy  persons, 
acting 
the  composite 
operation. 
together,  should  carry  out 
2.4.  Example of anonymization in France 
French hospitals [3] transform the patient’s identity 
by  using  a  one-way  hash  function  H  (e.g.,  SHA). 
Actually, two keys have been added before applying H. 
The first pad, k1, is used by all senders of information: 
“Code1=H (k1|Identity)”, and k2 used by the recipient: 
“H (k2 | Code1)”. The aim of k1 (resp. k2) is to prevent 
dictionary attacks by a recipient (resp. a sender).  
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:01 UTC from IEEE Xplore.  Restrictions apply. 
However,  this  protocol  seems  both  complex  and 
risky:  the  secret  key  should  be  the  same  for  all 
information  issuers  and  remains  the  same  over  time. 
Moreover, these keys must always remain secret: if a 
key is compromised, the security level is considerably 
reduced. It is very difficult to keep a key that is largely 
distributed  secret  for  a  long  time.  Hence,  new  keys 
must  be  generated  and  distributed  periodically.  The 
same applies when the algorithm (or the key length) is 
proven not sufficiently robust any more. But, how can 
we link all the information concerning the same patient 
before  and  after  changing  the  algorithm/key?  If  this 
problem occurs, the only possible solution consists in 
applying  another  cryptographic  transformation  to  the 
entire database, which may be very costly. 
Table  1  summarizes  the  four  solutions  presented 
Table1: Summary of the existing solutions.  
Purpose 
Social  security  data 
processing 
Statistics 
Linking medical data 
for 
evaluation 
purposes  
keys 
Technique 
Secret 
(Tricryption) 
Hybrid 
encryption 
hashing 
Symmetric  keys 
+ hashing 
+ 
above. 
Country 
USA 
Germany 
Switzerland 
France 
3. Analytic approach 
3.1. Privacy needs 
Most  of  the  solutions  presented  above  have  been 
developed  empirically  and  concern  only  one  specific 
use.  A  first  question  that  arises  is  “is  it  possible  to 
develop  a  generic  solution?”  Second,  we  believe  that 
before calling for technical or organizational solutions, 
it is necessary to develop a systematic methodology. In 
this  sense,  privacy  analysis  can  be  expressed  with 
respect to two levels of abstraction: 
- 
the  request  in  the  form  of  privacy  needs  to  be 
satisfied. 
the response in the form of security functionalities 
and solutions to implement.  
However,  our  methodology 
some 
intermediary  steps  between 
the 
response.  In  particular,  it  is  necessary  to  clearly 
express 
the  privacy 
objectives  (e.g.,  information  to  protect,  threats  to 
requirements 
avoid) 
and 
(formalization 
of 
functionalities). 
the  privacy 
needs, 
the  privacy  needs, 
the  request  and 
identification 
suggests 
identify 
specify 
of 
- 
to 
three 
instance, 
to  formalize.  For 
The privacy needs represent the user’s expectations; 
they  depend  on  the  system,  the  environment,  etc. 
generally,  their  form  is neither  very  explicit nor  very 
simple 
in  healthcare 
systems,  some  privacy  needs  could  be:  both  directly 
and indirectly nominative data should be anonymized; 
a  patient  appears  in  a  database  (e.g.,  for  a  medico-
commercial study) only if he gives his consent; etc. 
The  next  two  sections  present  what  we  mean  by 
privacy objectives and requirements. 
3.2.  Privacy objectives 
following  properties,  applied 
We define the privacy objective according to one of 
the 
the 
anonymization function: 
-  Reversibility:  hiding  data  by  encryption.  In  this 
case, from encrypted data, it is always possible to 
retrieve  the  corresponding  original  nominative 
data. 
Irreversibility: the property of anonymization. The 