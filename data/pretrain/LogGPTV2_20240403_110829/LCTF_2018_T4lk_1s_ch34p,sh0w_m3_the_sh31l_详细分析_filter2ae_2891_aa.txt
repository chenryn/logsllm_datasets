# LCTF 2018 T4lk 1s ch34p,sh0w m3 the sh31l 详细分析
##### 译文声明
本文是翻译文章，文章原作者 k0rz3n，文章来源：k0rz3n.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
作者：k0rz3n
转载自k0rz3n博客：[k0rz3n.com](http://k0rz3n.com)
## 0X00 两道题两个非预期
本来就出了这一道题，PHP 代码是用 orange 的改的，我本想设计一个不可上传，但是路径可知的目录，然后利用 java 的 xxe 实现文件上传，再利用
move 移动到那个已知的路径，通过反序列化临时文件来触发已知路径中的文件包含 getshell,但是由于我自己对orange
代码中沙盒的理解的不到位，导致了这道题彻底的非预期，后来我干脆删除了 java 的部分，因为师傅们发现 data 目录其实在 cookie
中能得到，而我在反序列化的时候也没有限制 data 目录的反序列化，并且上传的文件可控，那这样就直接能 getshell， 第二题虽然我限制了不能反序列化
data 目录下面的文件，但是由于我自己写 read_secret 时候的失误导致了另一个非预期，read_secret 本来应该是一个 shell
脚本，但我写成了一个字符串，返回值是 Null ,所以 cookie 中的 hmac 签名不攻自破，路径也就可以伪造，然后利用这种方法 getshell
,但是实际上这个两个题的代码就差了过滤 data 和 ..
的正则，还有一点像吐槽的就是我那个评论框真的是因为人性化做的不好，似乎人们都觉得那个是假的似的，那我下面的主要分析就按照我一开始的想法分析了。
## 0X01 说一下想要考察的点
LCTF2018 我出的这道题主要考察了两个知识点，一个就是当前最最最最，最火的 Phar 反序列化，另一个就是前一段时间比较众人皆知的 java 的
XXE
漏洞，毕竟微信的洞谁能不知道呢？虽然是大家比较熟悉的洞，但是我依然进行了比较深入的挖掘，考察的是比较容易被忽视的点，当然为了将这个两个点结合起来我也是花了非常大的功夫(如果说有脑洞其实我是不承认的，我承认的是由于将两者结合起来，利用的过程的确非常复杂)，那么接下来就让我好好的分析一下这道题，看看它能给我们带来什么样的头脑风暴
## 0X02 题目概览
### 1.题目描述如图所示：
[](https://picture-1253331270.cos.ap-beijing.myqcloud.com/LCTF_show_me_the_shell_.gif "此处输入图片的描述")
hh,这一部分的动态前端就是为了活跃气氛的(其实为了动态也写了我挺长时间)，当然也有一点提示，就是说下面有一个评论框可以写，说明这个东西是题目中的关键要素。点击标题就能看到正式的题目了
### 2.题目代码如下：
    avatar = $path;                                          
        }
    }
    class K0rz3n_secret_flag {
        protected $file_path;
        function __destruct(){
            if(preg_match('/(log|etc|session|proc|read_secret|history|class|data|\.\.)/i', $this->file_path)){
                die("Sorry Sorry Sorry");
            }
        include_once($this->file_path);
     }
    }
    function check_session() {
        global $SECRET;
        $data = $_COOKIE["session-data"];
        list($data, $hmac) = explode("-----", $data, 2);
        if (!isset($data, $hmac) || !is_string($data) || !is_string($hmac)){
            die("Bye");
        }
        if ( !hash_equals(hash_hmac("md5", $data, $SECRET), $hmac) ){
            die("Bye Bye");
        }
        $data = unserialize($data);
        if ( !isset($data->avatar) ){
            die("Bye Bye Bye");
        }
        return $data->avatar;                                               
    }
    function upload($path) {
        if(isset($_GET['url'])){
             if(preg_match('/^(http|https).*/i', $_GET['url'])){
                $data = file_get_contents($_GET["url"] . "/avatar.gif");                                                                                     
                if (substr($data, 0, 6) !== "GIF89a"){
                    die("Fuck off");
                }
                file_put_contents($path . "/avatar.gif", $data);
                die("Upload OK");
            }else{
                die("Hacker");
            }           
        }else{
            die("Miss the URL~~");
        }
    }
    function show($path) {
        if ( !is_dir($path) || !file_exists($path . "/avatar.gif")) {
            $path = "/var/www";
        }
        header("Content-Type: image/gif");
        die(file_get_contents($path . "/avatar.gif"));                     
    }
    function check($path){
        if(isset($_GET['c'])){
            if(preg_match('/^(ftp|php|zlib|data|glob|phar|ssh2|rar|ogg|expect)(.|\\s)*|(.|\\s)*(file|data|\.\.)(.|\\s)*/i',$_GET['c'])){
                die("Hacker Hacker Hacker");
            }else{
                $file_path = $_GET['c'];
                list($width, $height, $type) = @getimagesize($file_path);
                die("Width is ：" . $width." px" .
                    "Height is ：" . $height." px");
            }
        }else{
            list($width, $height, $type) = @getimagesize($path."/avatar.gif");
            die("Width is ：" . $width." px" .
                "Height is ：" . $height." px");
        }
    }
    function move($source_path,$dest_name){
        global $FILEBOX;
        $dest_path = $FILEBOX . "/" . $dest_name;
        if(preg_match('/(log|etc|session|proc|root|secret|www|history|file|\.\.|ftp|php|phar|zlib|data|glob|ssh2|rar|ogg|expect|http|https)/i',$source_path)){
            die("Hacker Hacker Hacker");
        }else{
            if(copy($source_path,$dest_path)){
                die("Successful copy");
            }else{
                die("Copy failed");
            }
        }
    }
    $mode = $_GET["m"];
    if ($mode == "upload"){
         upload(check_session());
    }
    else if ($mode == "show"){
        show(check_session());
    }
    else if ($mode == "check"){
        check(check_session());
    }
    else if($mode == "move"){
        move($_GET['source'],$_GET['dest']);
    }
    else{
        highlight_file(__FILE__);    
    }
    include("./comments.html");
有没有觉得似曾相识？没错这一部分是改编自 hitcon 2017 Orange 的 Phar 反序列化（当然我的出题的目的也是考察 Phar
的反序列化），简单的浏览一下代码，对比之前 Orange 的原题，我们发现这里做出了比较大的改动有三处，
#### 改动一:
我改变了 getflag 的方式，看类名就知道，我这里很明确地要求你反序列化的是下面这个类的对象
    class K0rz3n_secret_flag {
        protected $file_path;