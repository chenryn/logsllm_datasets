practices rules package to enforce the most common security standards for your
infrastructure. Ensure that assessments are run before any deployment to
proactively detect and address security issues before they reach the production
environment. You can ensure that security compliance standards are met at every
stage of your development life cycle. Moreover, Amazon Inspector provides
findings based on real activity and the actual configuration of your AWS
resources, so you can rest assured about the compliance of your environment.
Increasing development agility: Amazon Inspector is fully automatable through
API. Once you integrate it with your development and deployment process, your
security issues and your vulnerabilities are detected and resolved early, resulting
in saving a huge amount of resources. These resources can be used to develop
new features for your application and release it to your end users, thus increasing
the velocity of your development.
Leverage AWS Security expertise: Amazon Inspector is a managed service, so
when you select a rules package for assessment, you get assessed for the most
updated security issues and vulnerabilities for your EC2 instance. Moreover,
these rules packages are constantly updated with ever evolving threats,
vulnerabilities, and best practices by the AWS Security organization.
Integrated with AWS services and AWS partners: Amazon Inspector integrates
with AWS partners, providing security tools through its public-facing APIs. AWS
partners use Amazon Inspector's findings to create email alerts, security status
dashboards, pager platforms, and so on. Amazon Inspector works with a
network address translation (NAT) instance, as well as proxy environments. It
also integrates with the AWS Simple Notification Service (SMS) for notifications
and AWS CloudTrail for recording all API activity.
Securing Servers in AWS
[ 142 ]
The following figure shows the Amazon Inspector integration with AWS CloudTrail. All
activities related to Amazon Inspector are captured by AWS CloudTrail events:
Figure 7 - Amazon Inspector CloudTrail events
Amazon Inspector publishes real-time metrics data to AWS CloudWatch so you can analyze
metrics for your target (EC2 instance) as well as for your assessment template in AWS
CloudWatch. By default, Amazon Inspector sends data to AWS CloudWatch in interval of
five minutes. It could be changed to a one minute interval as well.
There are three categories of metrics available in AWS CloudWatch for Amazon Inspector,
as follows:
Assessment target
Assessment template
Aggregate
Securing Servers in AWS
[ 143 ]
The following figure shows metrics available for assessment targets in AWS CloudWatch:
Figure 8 - Amazon Inspector CloudWatch metrics
Amazon Inspector components
Amazon Inspector is accessible the through AWS Management Console, the AWS Software
Development Kit (SDK), AWS Command Line Tools, and Amazon Inspector APIs,
through HTTPS. Let's look at the major components of this service, as shown in the
following figure:
Figure 9 - Amazon Inspector dashboard
Securing Servers in AWS
[ 144 ]
AWS agent: This is a software agent developed by AWS that must be installed in
your assessment target, that is, your EC2 instance. This agent monitors all
activities and collects data for your EC2 instance, such as the installation,
configuration, and filesystem, as per the rules package selected by you for
assessment. It periodically sends this data to the Amazon Inspector service. AWS
Agent simply collects data; it does not change anything in the EC2 instance it is
running.
Assessment run: You will periodically run assessments on your EC2 instance
based on the rules package selected. Once your AWS agent performs assessment,
it discovers any security vulnerabilities in your EC2 instance. Once you have
completed the assessment, you will get findings, with a list of potential issues
and their severity.
Assessment target: Amazon Inspect or requires you to select an assessment
target; this is your EC2 instance or a group of EC2 instances that will be assessed
for any potential security issues. These instances should be tagged with key value
pairs. You can create up to 50 assessment targets per AWS account.
Finding: A finding is a potential security issue reported by Amazon Inspector
service after running an assessment for your target EC2 instance. These findings
are displayed in the Amazon Inspector web console or can be accessed through
API. These findings contain details about the issue, along with its severity and
recommendations to fix it.
Assessment report: This is a document that details what all was tested for an
assessment, along with the results of those tests. You can generate assessment
reports for all assessments once they are completed successfully. There are two
types of assessment reports:
The findings report
The full report
Rules package: Amazon Inspector has a repository of hundreds of rules, divided
under four rules packages. These rules packages are the knowledge base of the
most common security and vulnerability definitions. Your assessment target is
checked against the rules of a rules package. These rules packages are constantly
updated by the Amazon security team, as and when new threats, security issues,
and vulnerabilities are identified or discovered. These four rules packages are
shown in the following figure:
Securing Servers in AWS
[ 145 ]
Figure 10 - Amazon Inspector rules packages
Rules: Amazon Inspector has predefined rules in the rules packages; as of now,
custom rules cannot be defined for a rules package. A rule is a check performed
by an Amazon Inspector agent on an assessment target during an assessment. If a
rule finds a security issue, it will add this issue to findings. Every rule has a
security level assigned to it. There are four security levels for a rule, as follows:
High
Medium
Low
Informational
A high, medium, or low security level indicates an issue that might
cause an interruption in the ways in which your services are required to
run. An informational security level describes the security configuration
for your instance.
Securing Servers in AWS
[ 146 ]
Assessment template: This is your configuration for running an assessment. You
will choose your targets, along with one of the four predefined rules packages
that you want to run; you will also choose a duration, from 15 minutes to 24
hours, and other information, as shown in the following figure:
Figure 11 - Amazon Inspector assessment template
AWS Shield
AWS Shield is a managed Distributed Denial of Service (DDoS) protection service. It 
detects and automatically mitigates attacks that could potentially result in downtime for
your application and might also increase latency for your applications running on EC2
instances.
Securing Servers in AWS
[ 147 ]
A DDoS attack results in increased traffic for your EC2 instances, Elastic Load Balancer,
Route 53, or CloudFront. As a result, these services would need to scale up resources to
cope with the increased traffic. A DDoS attack usually happens when multiple systems are
compromised or infected with a Trojan flooding a target system with an intention to deny a
service to intended users by generating traffic and shutting down a resource so it cannot
serve more requests.
AWS Shield has two tiers: Standard and Advanced. All protection under the AWS Shield
Standard option is available to all AWS customers by default, without any additional
charge. The AWS Shield Advanced option is available to customers with business and
enterprise support at an additional charge. The advanced option provides protection
against more sophisticated attacks on your AWS resources, such as an EC2 instance, ELB,
and so on. The following figure shows AWS Shield tiers:
Figure 12 - AWS shield tiers
Securing Servers in AWS
[ 148 ]
AWS Shield benefits
AWS Shield is covered under the AWS suite of services that are eligible for Health
Insurance Portability and Accounting Act (HIPAA) compliance. It can be used to protect
websites hosted outside of AWS, as it is integrated with AWS CloudFront. Let's look at
other benefits of AWS Shield:
Seamless integration and deployment: AWS Shield Standard automatically
secures your AWS resources with the most common and regular DDoS attacks in
network and transport layers. If you require enhanced security for more
sophisticated attacks, you can opt for the AWS Shield Advanced option for your
AWS resources, such as EC2 Instances, Route 53 AWS CloudFront, and so on, by
enabling the AWS Shield Advanced option from the AWS Management Console
or through APIs.
Customizable protection: You can script your own customized rules to address
sophisticated attacks on your AWS resources using the AWS Shield Advanced
tier. You can deploy these rules immediately to avoid any imminent threat, such
as by blocking bad traffic or for automating response to security incidents. You
could also take the help of the AWS DDoS Response Team (DRT) to write the
rules for you. This team is available for your support 24/7.
Cost efficient: AWS provides free protection against network layer attacks for all
its customers through AWS Shield Standard. With AWS Shield Advanced, you
get protection against DDoS Cost Escalation, which prevents your cost going up
in case of DDoS attacks. However, if you are billed for any of your AWS resource
usage due to a DDoS attack, you can request credits from AWS through the AWS
support channel.
The AWS Shield Advanced billing plan starts at USD $3000 per month. Charges for data
transfer are calculated separately for all AWS resources selected for the AWS Shield
advanced protection.
AWS Shield features
Let's look at AWS Shield features for Standard and Advanced tiers.
Securing Servers in AWS
[ 149 ]
AWS Shield Standard
Quick detection: AWS Shield Standard automatically inspects all traffic for your
AWS resources through its continuous network flow monitoring feature. It 
detects any malicious traffic through a combination of advanced algorithms,
specific analysis, traffic signatures, and so on in real time, to prevent you from the
most common and frequent attacks.
Inline attack mitigation: AWS Shield Standard gives you protection against
Layer 3 and Layer 4 attacks that occur at the infrastructure layer through its
automated mitigation processes. These processes do not have any impact on
performance, such as the latency of your AWS resources, as they are applied
inline for your applications. Inline mitigation helps you avoid the downtime for
your AWS resources and your applications running on these AWS resources.
AWS Shield Advanced
Enhanced detection: This feature helps with detecting DDoS attacks on the application
layer, such as HTTP floods, as well as with monitoring and verifying network traffic flow.
Advanced attack mitigation: For protection against large DDoS attacks, AWS Shield
advanced provides protection automatically by applying advanced routing processes. You
also have access to the AWS DDoS Response Team (DRT), which can help you mitigate
more sophisticated and advanced DDoS attacks manually. DRT can work with you to
diagnose and manually mitigate attacks on your behalf.
You can also enable AWS Shield advanced on your multiple AWS accounts as long as all of
these accounts are under one single billing account and are owned by you, and all AWS
resources in these accounts are owned by you.
With AWS Shield advanced, you get a history of all incidents in your AWS account for the
past 13 months. As it is integrated with AWS CloudWatch, you get a notification through
AWS CloudWatch metrics as soon as an attack happens. This notification will be sent in a
matter of a few minutes.
Securing Servers in AWS
[ 150 ]
Summary
In this chapter, you learned about various features and services available in AWS to secure
your servers, most notably, EC2 instances. We went through best practices to follow for EC2
security.
Alongside, we dove deep into various measures to follow for all use cases for securing your
EC2 instances. These measures range from using IAM roles for all applications running on
EC2 instances to managing operating system access to building threat protection layers in
your multi-layered architectures and testing security for your EC2 instances with prior
permission from AWS support.
You learned about Amazon Inspector, an automated security assessment managed service
that integrates security assessment, identification, and remediation with development. This
results in faster deployment and better agility for your development process. You learned
about the various components of Amazon Inspector, such as agents, assessment template,
findings, and so on, to help use this service for EC2 instances.
Lastly, we went through AWS Shield, a managed DDoS protection service, along with its
features and benefits. You learned about the AWS Shield tiers, Standard and Advanced,
and how they can protect AWS resources from the most common, as well as the most
advanced and sophisticated, attacks. In this section, you learned about AWS DRT, a
team available 24/7 to help us mitigate attacks and respond to incidents that can also write
code for us if required.
In the next chapter, Securing Applications in AWS, you are going to learn about various AWS
services provided to AWS customers for securing applications running on AWS. These
could be a monolithic application, a web or a mobile application, a serverless application, or
a microservices-based application. These applications could run entirely on AWS, or they
could run in a hybrid mode, that is, partially in AWS and partially outside of AWS.
These applications might run on various AWS resources and interact with various AWS
resources, such as applications running on EC2 instances that store data on AWS S3. This
scenario opens up the possibility of attacks from various channels. AWS has a whole suite
of services and features to thwart all such attacks, including application-level firewalls,
managed services for user authentication, managed services for securing APIs, and so on.
6
Securing Applications in AWS
AWS gives you multiple services, features, and tools to build scalable, de-coupled, and
secure cloud applications. AWS supports web application development in programming
languages such as Python, JAVA, .NET, PHP, Ruby, and mobile application development as
well as Android and iOS platforms by providing Software Development Kits (SDKs).
Alongside this, it provides the following tools for developing applications in the AWS cloud
environment:
Integrated development environments (IDEs) such as Visual Studio and Eclipse
Command-line tools such as AWS CLI, AWS tools for PowerShell, and so on
Services for running these applications, such as Elastic Compute Cloud, AWS
Elastic Beanstalk, and Amazon EC2 Container Service
Tools and services for developing serverless applications such as AWS Serverless
Application Model (SAM) and AWS Lambda respectively
Managed services such as AWS CodeCommit for source control and AWS
CodeDeploy for automation of code deployment process
When you develop and deploy web and mobile applications in the cloud using the above-
mentioned services, tools, and features, you need to secure it from SQL injections,
unwanted traffic, intrusions, Distributed Denial of Service (DDoS) attacks, and other
similar threats. Furthermore, you need to ensure that all requests sent to AWS through your
applications are secure and recognized by AWS as authorized requests. Your applications
that are deployed on EC2 instances should be able to communicate securely with other
AWS services such as the Simple Storage Service (S3) or Relational Database Service
(RDS). Securing applications in AWS is as critical as securing your data and infrastructure
in AWS.
Securing Applications in AWS
[ 152 ]
In this chapter, we will learn about securing web and mobile applications in AWS cloud.
We will begin with Web Application Firewall (WAF), an AWS service that secures your
web applications from common threats by creating access control lists to filter threats. We
will learn the following about AWS WAF:
Benefits of AWS WAF
Working with AWS WAF
Security automation with AWS WAF
Moving on we will walk you through securing API requests by learning to sign these
requests while communicating with AWS services and resources.
Furthermore, we will learn about a couple of AWS services, as follows, that are extremely
useful in securing our applications in the cloud.
Amazon Cognito: A managed AWS service for authenticating user data for your
mobile applications.
Amazon API Gateway: A managed AWS service for securing, creating, and
managing APIs.
AWS Web Application Firewall (WAF)
AWS WAF is a web application firewall that helps you define various rules in the form of
conditions and access control lists to secure your web applications from common security
threats, such as cross-site scripting, DDoS attacks, SQL injections, and so on. These threats
may result in application unavailability or an application consuming excessive resources
due to an increase in malicious web traffic.
You secure your websites and web applications by monitoring, controlling, and filtering
HTTP and HTTPS requests received by the Application Load Balancer and Amazon
CloudFront. You can allow or reject these requests based on various filters, such as the IP
address sending these requests, header values, URI strings, and so on. These security
features do not impact the performance of your web applications.
AWS WAF enables you to perform three behaviors--allowing all requests other than the
ones that are specified by the access control lists; blocking all requests other than the ones
that have been allowed access by the access control lists; counting all requests that are
allowable as per the rules set in access control lists. You can use AWS WAF to secure
websites hosted outside of the AWS cloud environment, as Amazon CloudFront supports
origins outside of AWS. You can configure the Amazon CloudFront to display a custom
error page when a request matches your WAF rule and then block it.
Securing Applications in AWS
[ 153 ]
It is integrated with CloudWatch and CloudTrail so you can monitor the WAF metrics in
real time, such as the number of blocked requests and near real-time and historical audit
logs of WAF API respectively. The following figure shows the AWS WAF workflow:
Figure 1 - AWS Web Application Firewall
Benefits of AWS WAF
Let us look at the most popular benefits of AWS WAF:
Increased protection against web attacks: You get protection for your web
applications through AWS WAF. It will filter the web traffic based on the access
control lists and rules that you can configure for most common web exploits,
such as blocking specific IP addresses or blocking matching query strings 
containing malicious web traffic, and so on.
Security integrated with how you develop applications: AWS WAF enables you
to configure all of its features through its APIs and through the AWS
Management Console. It also imbibes the culture of DevSecOps in your
organization as the development team takes ownership of securing applications
by using WAF and adding rules at multiple areas and levels throughout the
application development cycle. So you have a developer writing code and adding
WAF rules, a DevOps engineer that will deploy this code, and a security auditor
who will audit all application security in place of web applications.
Securing Applications in AWS
[ 154 ]
Ease of deployment and maintenance: AWS WAF is integrated with Amazon
CloudFront and the Application Load Balancer. This makes it easy for you to
deploy web applications by making them part of your Content Delivery
Network (CDN) or by using the Application Load Balancer that is used to front
all your web servers. You do not need to install any additional software on any
servers or anywhere in your AWS environment. Moreover, you can write rules in
one place and deploy them across all your web applications hosted across various
resources in your AWS environment.
Improved web traffic visibility: You can set up metrics and dashboards for all
your web application requests that are evaluated against your WAF rules in
Amazon CloudWatch. You can monitor these metrics in near real-time and gauge
the health of your web traffic. You can also use this metrics information to
modify the existing WAF rules or create new ones.
Cost effective web application development: AWS WAF prevents you from
creating, managing, and deploying your own custom web monitoring and
firewall solution. It allows you to save development costs for your custom web
application firewall solution. AWS WAF, like other AWS services, allows you to
pay only for what you use without any upfront commitment or a minimum fee. It
has a flexible pricing model depending on the number of rules deployed and
traffic received by your web application in terms of HTTP and HTTPS requests.
Working with AWS WAF
When working with AWS WAF, you begin by creating conditions for matching malicious
traffic; next, you combine one or more of these conditions as rules and these rules are
combined as web access control lists. These web access control lists can be associated with
one or multiple resources in your AWS environment such as Application Load Balancers or
CloudFront web distributions.
Conditions: You can define one of the following conditions available in AWS WAF when
you would either want to allow or block requests based on these conditions:
Cross-site scripting 
Geo match
IP addresses
Size constraints
SQL injection