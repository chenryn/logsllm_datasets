(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:35)
(cid:35)
(cid:35)
(cid:35)
(cid:32)
(cid:35)
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:35)
(cid:32)
(cid:35)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
—
—
—
—
—
—
—
—
—
—
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
—
—
note
—
—
—
—
note
—
—
websites listed in the Alexa top-10K [2]. Of the 10K websites,
we eliminated the ones that did not complete the session
within 15 seconds. As a result, we found 6,500 websites were
reachable via the web rehosting services. We visited each
website twice via a web rehosting service. We used ProxySite
as a web rehosting service for this experiment because of its
fast response. We do not believe that using any of the service
signiﬁcantly affects ﬁngerprintability. The browser used for the
experiments was cleaned up, i.e., delete browsing data, after
we visited a website. This was performed every time.
Let W be a set of websites to be examined and F (w) be
a ﬁngerprint of a website w ∈ W. F (w) is determined as
F (w) = K(w, 1) ∩ K(w, 2),
where K(w, n) is a set of keys extracted from the website w
for the n-th trial (n ∈ {1, 2}). That is, if we found a set of keys
that appeared in both trials, we extract them as the ﬁngerprint
of the website. A ﬁngerprint, F (w), is distinguishable (unique)
if it satisﬁes the following condition:
F (w) (cid:42) (cid:91)
F (x).
∀x∈W\{w}
We tested the condition shown above for the 6,500 web-
sites which were accessible. We found that the fraction of
websites uniquely identiﬁable by our proposed ﬁngerprint
was 39.1% (2,541). Table V presents the top-10 categories
for the ﬁngerprintable websites. We have identiﬁed these
categories based on the Alexa [2] list. We found that the
categories of ﬁngerprintable websites contained the ones that
are preferred by people with speciﬁc attributes, such as anime
and programming, as well as the ones that everyone visits,
such as news and portals. This observation implies that an
attacker can estimate the proﬁle of victims by the history theft
attack. Moreover, we found ﬁngerprintable websites, including
sensitive sites such as porn, dating, and piracy websites.
The examples taken into consideration were porn[.]com,
theporndude[.]com, tinder[.]com, match[.]com,
pirate-bay[.]net and nyaa[.]si. The visits of a user
(cid:32)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:32)
(cid:35)
(cid:35)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
(cid:35)
(cid:35)
(cid:35)
9
websites that are internally associated. All of the relayed
cookies were without an expiration date, but as mentioned
in Section II-C, this does not prevent a hijacking attack. On
the other hand, Hide My Ass! adopts an implicit relay, and
additionally, the session of web rehosting itself was protected
by a cookie’s HttpOnly option; in this case, there is no risk
of session hijacking.
For Weblio and Wayback Machine, a user cannot login
to a rehosted website as these services are not web proxies,
but a user can still login to the service itself. These services
provide additional features to logged-in users; for example,
Weblio offers a vocabulary book or a console for viewing
exam results, and Wayback Machine allows a user to view
the list of uploaded or favorited webpages. For these services,
we discovered that
the login session of the service itself
can be hijacked using procedures similar to those described
in Section III-B5. With a hijacked session, an attacker can
view the activities associated with the user account and steal
personal information such as user names and email addresses
from the proﬁle page.
B. Evaluation of Fingerprinting
We have shown that many of the web rehosting services
are vulnerable to the browsing history theft. The history theft
exploits the availability of the website ﬁngerprints, which are
extracted from the data written to the browser storage by
each website. This section evaluates the effectiveness of the
ﬁngerprinting technique used for the browsing history theft.
We evaluate the effectiveness of the following three aspects:
1) ﬁngerpritability of websites, 2) lifetime of ﬁngerprints, and
3) ﬁngerprints that leak the time of visits to websites.
1) Testing the Fingerprintability of Websites: To generate
a ﬁngerprint of a website, we combine the keys extracted from
the following three sources: keys contained in the cookie, keys
contained in the localStorage, and the keys contained in the
JSON dictionary, which is extracted from the values contained
in the localStorage. To evaluate the distinguishability of the
generated ﬁngerprints, we performed experiments using the
TABLE V.
TOP 10 CATEGORIES OF FINGERPRINTABLE WEBSITES.
Category
E-mail
Chat
Adult
Videos
News
Animation
Portals
Encyclopedias
Programming
Photos
# domains
210
125
124
116
72
57
55
48
43
40
to these websites may be used for further attacks, such as social
engineering.
Although we recognize that the identiﬁable rate depends
on the size of W, setting it to 10k is not an overestimation
for the following reasons. First, as previous studies [1], [10]
showed, most Internet trafﬁc is concentrated on top-ranked
websites;
therefore, users rarely have keys issued by the
websites less popular than the top-10k. Second, a website often
stores data with a unique key due to the use of third-party
modules. For instance, a website with a code for the Google
tag manager [21], which is part of the trafﬁc analysis suite,
writes a cookie with a unique ID for each website as a key.
For more precise ﬁngerprinting, we need to consider pages that
change over time and pages other than the main page of each
domain name. We leave these issues for our future work.
2) Lifetime of Fingerprints: The evaluation above did not
consider the expiration of the cookie. However, cookies will
be deleted after the expiration date, leading to a decrease in
the uniqueness of a ﬁngerprint. In addition, as mentioned in
Section II, cookies that do not have an expiration date are
treated as session cookies, which will or will not be deleted
when the browser process is terminated, depending on the
user’s environment. Note that unlike cookies, localStorage will
keep the data persistently. To study the impact of elapsed time
on the uniqueness of ﬁngerprints, we performed an experiment
that simulates the deletion of expired cookies after a user visits
a website. We assume that a user visits each website just once.
Figure 6 shows the change of availability for website
ﬁngerprints. Two scenarios are shown: when all the session
cookies are alive and when they are expired. When the elapsed
time is zero, the percentages of available ﬁngerprints are 100%
(for session cookies that are alive) and 96.4% (for session
cookies that are expired). After one day of user visits, the
percentages drop to 69.4% and 64.2%, respectively. Cookies
that do not need to be stored for a long time often have an
expiration date of fewer than 24 hours. The declining trend
after day two becomes mild as a cookie with a long lifetime
and a persistent localStorage key contributes to the uniqueness
of the ﬁngerprints.
As several websites set the expiration date in units of
months, such as one, two, or three months, we can see small
spikes at the 30th, 60th, and 90th days. The percentages of
available ﬁngerprints on day 364 are 64.3% (session cookie
alive) and 58.6% (session cookie expired), but on day 365,
they drop to 59.7% (session cookie alive) and 53.6% (session
cookie expired) in only one day. This phenomenon reﬂects the
fact that many websites have set the expiration date for cookies
to exactly one year. To summarize, we found that more than
Fig. 6. Relationship between the elapsed time (days) after a user visits a
website and the fraction of ﬁngerprintable websites.
TABLE VI.
LIST OF INVESTIGATED BROWSERS.
Browser
Google Chrome
Mozilla Firefox
Microsoft Internet Explorer
Microsoft Edge
Apple Safari
Opera
Brave Browser
Google Chrome for mobile
Abbreviation
Chrome
Firefox
IE
Edge
Safari
Opera
Brave
Chrome-M
Version
76.0.3809.132
69.0
11.0.140
42.17134.1.0
12.1.2
62.0.3331.116
0.68.132
76.0.3809.132
50% of website ﬁngerprints still work for the history theft for
one year after the website visit.
3) Fingerprints Leaking User Visit Time: As the cookie
expiration time is typically set to the visit time plus a period
of time, the visit time can be deduced by subtracting this
increment from the cookie expiration time contained in the
ﬁngerprint. This estimation makes it possible for an attacker
to track users more precisely by reﬂecting the time series of
website transitions. We identiﬁed a website with a cookie with
the unique key that has a constant difference between the
access time and the expiration date, that is, a website that
adds a certain value to the access time and sets the expiration
date. As a result, we found that 73.6% of ﬁngerprints leaked
visit time.
C. Resource Accesses Behavior for Each Browser
We now discuss the browser differences in resource access
behavior and their impact on attack success and failure. We
investigated eight browsers as shown in Table VI: Chrome,
Firefox, IE, Edge, Safari, and Opera which are major PC
browsers; Brave [6] which is known for its strong privacy
policy; and the mobile version of Chrome. All versions are
latest as of September 2019.
The results are shown in Table VII. As a service worker
and AppCache are both available on all browsers, with the only
browser not supporting a service worker being IE, all browsers