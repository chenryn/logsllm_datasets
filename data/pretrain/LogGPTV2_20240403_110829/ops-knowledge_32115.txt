User:  How to use Ansible to automatically deploy a web server and perform basic configuration.
Assistant: The steps are as follows: 1. First create an ansible playbook file, such as: webserver-playbook.yml 2. Edit the playbook, specify the software package to be installed (such as: apache or nginx), and configure basic settings (such as: set the listening port, virtual host, etc.). 3. Create an inventory file and specify the server address or host name to be deployed. Either an IP address or a DNS name can be used. 4. To run the playbook, use the ansible-playbook command. Ansible can automatically deploy the web server and perform basic configuration by specifying the inventory file and playbook file. Here is a sample playbook file: ``` --- name: Install and configure web server hosts: webserver become: true tasks: - name: Install Apache web server apt: name: apache2 state: present notify: start apache - name : Configure virtual hosts copy: src: "{{ item.src }}" dest: /etc/apache2/sites-available/{{ item.name }}.conf owner: root group: root mode: '0644' with_items: - { name: 'example1', src: 'files/example1.conf' } - { name: 'example2', src: 'files/example2.conf' } notify: reload apache handlers: - name: start apache service: name : apache2 state: started - name: reload apache service: name: apache2 state: reloaded ``` Among them, hosts specifies the server address or host name to be deployed, apt module installs software packages, copy module copies configuration files, notify and handlers are used to restart the service. Example inventory file: ``` [webserver] 123.123.123.123 ``` Run the following command to run the playbook file: ``` $ ansible-playbook -i inventoryfile webserver-playbook.yml ```