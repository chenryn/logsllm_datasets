，他促使我这本书，但是不允许不经过他的
，因为他们知道已经有人读过它了。我应感
- 15 -
 50192241
在那里人们可以很容易地陶醉在有
我在UNIX/World上发表了3篇
，Glenn Saito, Geoff
前言
我
---
## Page 16
中国：
美国：
面的地址告诉我们：
难
本书的内容都经过测试，
建议与评论
Katie, Ben 和gleda.
Jerry Peek,
Hagel, Tony Hurson,
他们给我发邮件指出排印错误和其他错误。最后，最值得感谢的是Nancy和
免的。如果你发现有什么错误，或是针对将来的版本有什么建议，请通过下
10080北京市海淀区知春路 49号希格玛公寓B座 809室
奥莱理软件（北京）有限公司
1-800-998-9938 (in the U.S. or Canada)
101 Morris Street 
O′ Reilly & Associates,
1-707-829-0104
1-707-829-0515 (international or local)
 Mike Tiller, 和 Lenny Muellner 
(FAX)
尽管我们做了最大的努力，
QQ群：
Inc.
16
50192241
但错误和疏忽仍然是在所
前言
---
## Page 17
几次之后，
最初，使用 sed 和 awk 来完成一项任务看起来像是需要很长的时间。在尝试
重复一系列按键。除此之外，
注1：
总结了一个解决方案以取代
题
用（注1）。有些人（包括我自己）对某个问题是否乐于去解决，取决于该问
解决有趣的问题
功倍的效果，
sed 和 awk 是特殊的，它们需要花时间来学习，但是它们的功能将带给你事半
awk 在达到同样结果的情况下可以节省大量重复性工作。
中所做的大部分事情都可以用文本编辑器交互式地完成。然而，使用 sed 和
对于创建和修改文本文件的人来说，sed 和 awk 是编辑的动力工具。这些工作
锯。动力锯的速度和效率对多产是很重要的。[D.D.］
搭架子这样的周末工程。然而，
我的妻子不让我买动力锯，她怕我用时会发生意外。所以我依靠手锯进行类似
复
习如何使用 sed 和 awk，而且还要了解在什么情况下使用它们更好。你越精
象有了一点魔法一样，省去了一些枯燥的劳动。
性编辑工作，我选择 sed，
是否单调乏味。如果让我选择使用vi 还是 sed 来对大量文件进行一系列重
解决问题就越快而且与也越广。
?
本章内容
解决有趣的问题
个障碍
掌握 sed 和 awk 的四
匹配的程序设计语言
字符流编辑器
，你可能还会觉得用手工完成任务还更容易些。耐心点！你不但需要
会去解决它。［D.D.］
和TimO’Rei曾经对我说过的话-
，尤其是当文本编辑是你的职业的正常组成部分时。
QQ群：
一旦完成了任务，
因为对我来说，它可以使这些问题更加有趣。我
50192241
如果我从事木工工作，
- 17 -
在解决文本编辑的一般问题时它们很有
我会为自己的聪明而自豪。好
一如果人们发现一个问题有趣就
强大的编辑工具
第一章强大的编辑工具
那么我就必须使用动力
第一章
---
## Page 18
的工具。
脚本也可以对于其他书中的交叉引用进行扩展，它将大大节省你编写特殊替换
awk）构建一个工具，这个工具对遵循这种语法的任何交叉引用都起作用。这个
于每个交叉引用，都需要编写一个条命令来进行替换。第三种方法（使用
第一种方法明显的很耗时（而且没有趣！）。
23
解决这个问题有3种可能的方式：
引用的内容。
sqtroff格式化软件，所以需要利用一些方式来扩展文件中的交叉引用。话句
文档时，
使用符号交叉引用模式而不使用显式引用的优点是，如果添加、删除或重新排
件中，对有关错误处理一章的引用可能是按如下方式编码的
列
我们面临的问题时必须使用同样的文件来创建本书的在线版本。
我们给出了一个示例（没有给出任何程序代码）。在我们写的书中有一本实用
果与一类问题相关，这样就能够设计出在其他情况下可以重用的解决方案。
你还有机会发现解决特俗问题的一般方法。
脚
并
是
序
串
用
“CHerrorhand”是引用的名字，
川表的时间。它是这三种方法中最常用的解决方案
本可用于修改文档的每个文件。缺点是这种替换是硬编码的，也就是说，对
用“Chapter 16,Error Handling”来代替它的 sed 脚本相当简单。同样的
它可以创建一个工具来完成这项工作。
活说，就是不希望文件中包含“\*[CHerrorhand]”
文章，
。例如，
序列。在中心文件中，文档中用于交叉引用的名字被定义为 satroff 字符
交叉引用命名模式，
的名字并用其定义代替它。
使
使用 sed 进行编辑工作。这类似于手工编辑工作，只是比较快。
使用文本编辑器查找所有的引用并用适当的文字串代替它们。
引用呗正确的重新解析和扩展。
定
只需要编辑中心文件就可以反映新的组织结构)。当用格式化软件处理
义的列表；（b）读取文档查找引用调用序列；（c）查寻列表中引用
用awk 编写一个程序：（a）用来读取中心文件，并生成引用名及其
\*[CHerrorhand]
QQ群：
，即引用由格式化软件（sqtroff）定义和处理。在文本文
50192241
“\*[”和“］”是区分引用和其他文本的调
18 -
例如，
你会发现，
。第二种方法（使用 sed）的优点
，编写寻找“\*[CHerrorhand]”
案，并且被设计为最可能重
第一章强大的编辑工具
，而想要“CHerrorhand”
考虑某种问题的方式如
，因为不能使用
要
---
## Page 19
sed 能够用来保持整个文档的一致性。你可以查找到某个特定术语的所有不同
改将是一个非常简单的过程。
的名字或它的组件可能会改变，你必须找到他们并进行修改。使用 sed 进行修
成，而且每个章节有存在不同的文件中时。通常，在评审返回文档的草稿之
在创建和维护文档的过程中也经常会用到 sed，尤其当文档由独立的章节组
很慢。
通过文件传递一次来执行它们。你不必进入每个文件来做每个修改。sed 还可
注2：
编辑指令，
使用 sed和编写简单的 shelI脚本（或 DOS 中的批处理文件）类似，可以指定
工作可以在几分钟之内完成，你就会知道 sed 的强大了。
现一次的术语时，你可能不常用 sed，但你会发现利用它处理很多文件中的一
换程序可以被全局的应用于单个文件或一组文件。在处理一个特定文件中之出
sed 提供的功能好像是交互式文本编辑的自然延伸。例如，
将要执行的动作。
屏幕上，
认为是面向字符流的，这是因为输入流通过程序并将输出直接送到标准输出
sed是一个“作交互式的”面向字符流的编辑器。它和许多UNIX程序一样，
字符流编辑器
杂的 awk 脚本才能解决。必须要记住 sed 和 awk 对什么样的应用是最合适的。
好的选择，因为问题本身可能无法用 awk 进行处理，或者可能需要非常冗长复
解决问题中的部分工作是要知道构建哪种工具。有时 sed 脚本可能是一个比较
后
以
换
来
端
，有许多修改可以应用于所有的文件。例如，在软件文档设计过程中，软
以有效地用于编辑非常庞大的文件，而这个文件利用交互式编辑进行处理将会
文本、删除行、插入新文本等等。sed 的优点是可以在一个地方指定所有的
-系列顺序执行的动作。其中的大多数动作可以在vi的内部用手工来完成：替
自文件，但是也可以直接来自键盘（注2）。输出在默认情况下输出到终端
（例如，vi 不是面向字符流的，
，但是也可以输出到文件中，sed 通过解释脚本来工作，该脚本指定了
然而，这么做并不特别有用。
然后
器
QQ群：
50192241
，大多数DOS应用程序也不是）。输入一般
第一章 
它提供的查找和替
强大的编辑工具
件
被
---
## Page 20
sed 很容易被堪称是与交互式编辑相反的程序。sed 程序与如何手动地应用编辑
多的控制。
是解决问题的一种不同方法,即利用这种方法可以对计算机所要做的事情增加更
将 awk 称为程序设计语言会吓跑一些人。如果你是其中之一，
模式匹配的程序设计语言
23
使用 sed 的小结：
看到这个脚本）。它允许你匹配包含两行的模式，寻址 grep 的特殊限制。
sed 正在被使用。一个 shell包装器的例子如 phrase 脚本（在本书后面我们将
除了最简单的 sed 脚本外，几乎所有的都是从“shell实现”中调用的，shell
行的处理能力方面有限制。
Sed 拥有用于构建更复杂的脚本的几个基本的程序设计结构。它在每次多于一
转换不同函数的名字
SunView 程序转换成Xview 的转换程序，这些程序主要由 sed 脚本组成，可以
sed 脚本（也许利用 sed 可以将用某种语言的语法编写的程序，转换成具有另
的格式化代码转换成troff，或者转换PC字处理文件，
作者或出版商可以用 sed 编写大量的转换程序，例如，将Scribe 或 TBX 文件中
到troff 进行格式化之前插入troff 宏。它允许你动态（on the fly）编辑
果发送到另外一个程序。例如，你可以使用 sed 分析纯文本本件并在将输出送
sed还可以作为编辑过滤器使用。换句话说，你可以处理输入文件并将输出结
后的双引号（“弯引号”而不是“直引号”）。
sed 插入特殊的排版代码或符号。例如，利用 sed 可以用 ASCⅡl字符代码取代前
的使用方式并且使它们变得一致。在通过troff进行格式化之前，可以使用
，
是
一种语言的语法的程序）。
（也许是临时的）。
一个命名和执行单字命令的简单方式。
编写转换程序。
简化对多个文件执行相同的编辑处理工作。
在一个或多个文件上自动实现编辑操作。
字
QQ群：
。当Sun公司首次产生Xview时，它们发布了一些将
50192241
-20-
，使用这个命令的用户甚至不需要知道
第一章 
，例如 WordStar。稍后，
强大的编辑工具
，可以把 awk 看做
---
## Page 21
下面是awk 能够完成的一些功能：
个 shell脚本，它通常包含调用 awk 的命令行以及 awk 解释的脚本。简单的一
和 sed 脚本一样,
以将列变成行以及将行变成列。
所组成的表是高度结构化的。可以使用 awk 脚本对数据的列重新排序，甚至
松或紧。包含主要的节和次要的节的一章也是一种结构。我们将看到一个脚
因为，当数据拥有某种结构时就能最好地体现 awk 的好处。文本文件的结构或
允许你在编写放进和拿出东西的程序中使用文本文件结构。
选要送去洗的东西，以及当你要穿衣服时，
衣柜由多个抽屉组成，
所有这些操作的关键是数据拥有某种结构，我们可以利用衣柜来类比解释它。
据并生成报告的过程。
用程序。数据项是以结构化方式记录数据的过程。数据检索式从文件中提取数
将数据汇总。另一个例子是由独立的数据项和数据检索程序组成的数据处理应
序（例如uucp）产生的日志文件，而且报表以一种对系统管理员有用的格式化
awk 程序的典型示例是将数据转换成格式化的报表。这些数据可能是由UNIX程
并
了更一般的计算模型。
是很相近的。Sed 限制你利用在文本编辑器中使用的方法。Awk 为处理文件提供
●
本
另
，用于提取章节标题并将它们编号以生成一个大纲，由制表符分隔的列项目
将不同种类的东西放在一起。这些就是决定了东西放在哪里的结构，当你挑
一个抽屉式内衣，
更加巧妙的处理命令行的参数。
处理 UNIX命令的结果。
从脚本中执行UNIX命令。
使用变量操作数据库。
将文本文件看做由记录和字段组成的文本数据库。
更
定
生
使
使
容易地处理多个输入流。
义函数。
成格式化报告。
用普通的程序设计结构，例如循环和条件。
用算术和字符串操作符。
awk 脚本一般是利用 shell包装器来调用。Shell包装器是一
第三个抽屉式运动衫。有事抽屉里面可以分隔成几个间
QQ群：
50192241
21
，就可以在他们所在的地方找到。Awk
第
一章 
强大的编辑工具
隔
---
## Page 22
注3:
如果你正进行跨栏竞赛，
?
3
在掌握 sed 和 awk 的过程中存在四个障碍，
和
有许多介绍UNIX的书都可以让你了解 sed 和 awk。本书的目的是帮组你以最快
掌握 sed和 awk 的四个障碍
Awk 的功能将文本编辑的思想扩展到计算，
到的功能。
由于这些特征，用户可以根据 awk 所具有的能力和适用范围来处理由 she脚
力
过
它
务
了跨栏”，要让你的脚本处理问题更有趣，就要获得在竞赛中跑的更快的能
最容易地方式更进一步的掌握 sed 和 awk。
，包括分析、提取和数据报告。实际上，
。
注意大量的示例，而且必须亲自尝试编写脚本。
部分都介绍脚本编写。使用 sed,
脚本编写的技巧。这是最困难的，这就像跨栏竞赛中的高栏。因此，
用单引号包含你的脚本。如果将 csh 作为你的交互式 shell，记住要用反斜
命令的交互式一人
如何与 shell进行交
语法”
使用也越容易，
和 awk 共有的特征，
应用 UNIX 正则表达式语法。使用 UNIX 正则表达式语法进行模式匹配是 sed
的机制。
类似，都基于行编辑器ed。第二章“了解基本操作”概述了使用 sed 和 awk
如何使用 sed 和 awk。清楚这个障碍相对容易，因为 sed 和 awk 的工作方式
行
符
碍
的话，就为脚
。如果可以的话，
是很少有人能完全
，原因有两个：语法是神秘的，虽然许多人都有使用正则表达式的经验，
中讨论
可以设置 histchars 变量。参见 csh 帮助页。
正
个困难的问是
这京
本使厂
QQ群：
表
就
全掌握语法。
，通过在独立的文件中放置脚本来避免这种问题。如果)
只是跃过跨栏并不能赢得比赛，
达式的原区
是我们为什么要花大量时间在第三章“了解正则表达式
用兼容的Bourne shell（引用规则更加直观），
对许多其他的 UNIX 程序一样。这是一个较苦难的障
系
50192241
。没有其他的方式能让csh 别管感叹号（注3）。
JT
因
- 22 -
因为 shell与两个程序共享大量特殊的