1.  ::: para
    在 `/etc/dconf/db/local.d/00-extensions`{.filename}
    中创建一个用于计算机范围设置的 `local`{.code} 数据库文件。
    :::
    ``` programlisting
    [org/gnome/shell]
    # List all extensions that you want to have enabled for all users
    enabled-extensions=['PI:EMAIL', 'PI:EMAIL']
    # Disable access to Looking Glass
    development-tools=false
    ```
    ::: para
    `enabled-extensions`{.code} 的键值通过扩展程序的 uuid
    规定了被启用的扩展程序（*PI:EMAIL* 和
    *PI:EMAIL*）。
    :::
    ::: para
    `development-tools`{.code}
    的键值被设置为假（false），以阻止用户使用应用程序 [**Looking
    Glass**]{.application}。
    :::
2.  ::: para
    覆盖用户设置，并阻止用户在文件
    `/etc/dconf/db/local.d/locks/extensions`{.filename} 中对此修改：
    :::
    ``` programlisting
    # Lock the list of mandatory extensions and access to Looking Glass
    /org/gnome/shell/enabled-extensions
    /org/gnome/shell/development-tools
    ```
3.  ::: para
    更新系统数据库：
    :::
    ``` screen
    # dconf update
    ```
:::
::: para
锁定 `org.gnome.shell.enabled-extensions`{.code} 和
`org.gnome.shell.development-tools`{.code} 的键值之后，GNOME Shell
将不会加载任何安装在 `~/.local/share/gnome-shell/extensions`{.filename}
或 `/usr/share/gnome-shell/extensions`{.filename} 中的没有被列在
`org.gnome.shell.enabled-extensions`{.code}
键值中的扩展程序，从而阻止用户使用它们。
:::
:::
::: section
::: titlepage
# [⁠]{#GNOME-shell-extensions.html#extensions-mandatory}11.4. 设置强制性扩展程序 {.title}
:::
::: para
在 GNOME Shell 系统中，您可以提供一组用户必须使用的扩展程序。为此，在
`/usr/share/gnome-shell/extensions`{.filename}
目录中安装这些扩展程序，然后锁定
`org.gnome.shell.enabled-extensions`{.code} 和
`org.gnome.shell.development-tools`{.code} 的键值。
:::
::: para
锁定 `org.gnome.shell.development-tools`{.code} 的键值可以确保用户无法用
GNOME Shell 的内置调试器和检查工具（[**Looking
Glass**]{.application}）停用任何强制性的扩展程序。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#GNOME-shell-extensions.html#idm139838618440752}
**过程 11.4. 设置强制性扩展程序**
1.  ::: para
    在 `/etc/dconf/db/local.d/00-extensions-mandatory`{.filename}
    中创建一个用于计算机范围设置的 `local`{.code} 数据库文件。
    :::
    ``` programlisting
    [org/gnome/shell]
    # List all mandatory extensions
    enabled-extensions=['PI:EMAIL', 'PI:EMAIL']
    # Disable access to Looking Glass
    development-tools=false
    ```
    ::: para
    `enabled-extensions`{.code} 的键值通过扩展程序的 uuid
    规定了被启用的扩展程序（*PI:EMAIL* 和
    *PI:EMAIL*）。
    :::
    ::: para
    `development-tools`{.code}
    的键值被设置为假（false），以阻止用户使用应用程序 [**Looking
    Glass**]{.application}。
    :::
2.  ::: para
    覆盖用户设置，并阻止用户在
    `/etc/dconf/db/local.d/locks/extensions-mandatory`{.filename}
    中对此修改：
    :::
    ``` programlisting
    # Lock the list of mandatory extensions and access to Looking Glass
    /org/gnome/shell/enabled-extensions
    /org/gnome/shell/development-tools
    ```
3.  ::: para
    更新系统数据库：
    :::
    ``` screen
    # dconf update
    ```
:::
:::
:::
[]{#installing-integrating-applications.html}
::: chapter
::: titlepage
# [⁠]{#installing-integrating-applications.html#installing-integrating-applications}第 12 章 整合应用程序 {.title}
:::
::: para
在 GNOME
桌面上整合应用程序时，系统管理员通常会执行有关定制"[**应用程序**]{.guimenu}"菜单结构和
MIME 类型的相关任务，例如：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    通过创建或修改子菜单为应用程序添加或修改一个菜单项，或自定义"[**应用程序**]{.guimenu}"的菜单结构。关于菜单定制的更多信息，请参见
    〈[第 12.1 节
    "自定义菜单"](#installing-integrating-applications.html#customizing-menus){.xref}〉。
    :::
-   ::: para
    在"`活动概览`{.systemitem}"中自定义 GNOME Shell *dash*
    上可见的默认最热门程序。关于如何操作的更多信息，请参见 〈[第 12.2 节
    "自定义默认的最热门程序"](#installing-integrating-applications.html#default-favorites){.xref}〉。
    :::
-   ::: para
    添加或修改应用程序的 MIME 类型，并赋予应用程序某一特定的 MIME
    类型。关于配置 MIME 类型的更多信息，请参见 〈[第 12.3 节
    "配置文件关联"](#installing-integrating-applications.html#File_Formats){.xref}〉。
    :::
:::
::: section
::: titlepage
# [⁠]{#installing-integrating-applications.html#customizing-menus}12.1. 自定义菜单 {.title}
:::
::: para
GNOME 菜单系统基于 *freedesktop.org Desktop Menu
Specification*，由三组主要的配置文件和数据文件组成。
:::
::: variablelist
[桌面项文件（`.desktop`{.filename}）]{.term}
:   ::: para
    后缀 `.desktop`{.filename}
    的文件提供每个菜单项的名称、运行命令、图标等数据。后缀
    `.desktop`{.filename}
    的条目文件也规定了菜单项在菜单结构中的位置，以及在"`活动概览`{.systemitem}"中搜寻应用程序所使用的键值。
    :::
    ::: para
    `.desktop`{.filename} 系统文件位于
    `/usr/share/applications/`{.filename} 目录下。针对用户特定的
    `.desktop`{.filename} 文件位于
    `~/.local/share/applications/`{.filename} 目录下。
    :::
    ::: para
    以下是一个名为
    `~/.local/share/applications/myapplication1.desktop`{.filename} 的
    `.desktop`{.filename} 样本文件：
    :::
    ``` programlisting
    [Desktop Entry]
    Type=Application
    Name=My Application 1
    Icon=myapplication1
    Exec=myapplication1
    Categories=Network;WebBrowser;
    MimeType=application/x-newtype
    ```
    ::: para
    上述文件规定了应用程序的名称（[**My Application
    1**]{.application}），应用程序的图标（`myapplication1`{.filename}），以及运行该应用程序的命令（`myapplication1`{.command}）。它还将这个应用程序放置在一个特定的类别目录下（"`Network;WebBrowser;`{.systemitem}"），并且将该应用程序与"`application/x-newtype`{.systemitem}"MIME
    类型关联。
    :::
[菜单定义文件（`.menu`{.filename}）]{.term}
:   ::: para
    `.menu`{.filename} 文件是 XML
    配置文件，它们规定了菜单和菜单项的顺序、级别和合并。
    :::
    ::: para
    计算机范围的 `.menu`{.filename} 文件位于
    `/etc/xdg/menus/`{.filename} 目录下。针对用户特定的
    `.menu`{.filename} 文件位于 `~/.config/menus/`{.filename}
    目录下，它们可以用来覆盖计算机范围的 `.menu`{.filename}
    文件中规定的值。
    :::
    ::: para
    特别的一点是， `/etc/xdg/menus/applications.menu`{.filename}
    文件中包括对"[**应用程序**]{.guimenu}"菜单布局的定义。
    :::
[目录项文件（`.directory`{.filename}）]{.term}
:   ::: para
    `.directory`{.filename} 文件提供每个菜单的名称等数据，它们位于
    `/usr/share/desktop-directories/`{.filename} 中。
    :::
:::
### [⁠]{#installing-integrating-applications.html#customize-menus-more-information}获得更多信息
::: para
关于描述桌面项文件的更多信息，请参见位于 freedesktop.org
网站的《*桌面项说明* 》：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    :::
:::
::: para
关于描述 GNOME 菜单系统执行情况的详细信息，请参见位于 freedesktop.org
网站的《*桌面菜单说明* 》。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    :::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#remove-menu-item-user}12.1.1. 为个别用户移除某个菜单项 {.title}
:::
::: para
针对某个指定用户的"[**应用程序**]{.guimenu}"菜单定制默认存储于
`~/.config/menus/gnome-applications.menu`{.filename}
定义文件中。该文件的位置可以通过设置 `$XDG_DATA_HOME`{.envar}
环境变量被覆盖。
:::
::: para
如需覆盖"[**应用程序**]{.guimenu}"菜单的默认属性，首先需要创建一个
`gnome-applications.menu`{.filename}
文件。要注意，从"[**应用程序**]{.guimenu}"菜单移除一个目录项及其子菜单时，也会将它从"`活动概览`{.systemitem}"中的应用程序视图里移除，从而防止用户在"`概览`{.systemitem}"中搜索该项。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#installing-integrating-applications.html#idm139838608730960}
**过程 12.1. 示例：从附件子菜单中移除计算器菜单项**
1.  ::: para
    查阅 `/usr/share/applications/`{.filename}
    目录的内容，并确定您想要移除的菜单项所对应的 `.desktop`{.filename}
    文件：
    :::
    ``` screen
    $ grep -r "Name=Calculator" /usr/share/applications/
    /usr/share/applications/gcalctool.desktop:Name=Calculator
    ```
    ::: para
    如上所示，"[**计算器**]{.guimenuitem}"菜单项对应
    `/usr/share/applications/gcalctool.desktop`{.filename} 文件。
    :::
2.  ::: para
    创建一个 `~/.config/menus/gnome-applications.menu`{.filename} 文件：
    :::
    ``` programlisting
    ​
    ​
    ​
    ​  Applications
    ​  /etc/xdg/menus/gnome-applications.menu
    ​
    ​
    ​  
    ​    Accessories
    ​    
    ​      gcalctool.desktop
    ​    
    ​  
    ​
    ​
    ​
    ```
    ::: para
    如上所示，文件中包括一个规定子菜单名字（*Accessories*）的
    ``{.code} 部分、`.desktop`{.filename}
    文件的名字（*gcalctool.desktop*）、以及 ``{.code} 元素。
    :::
:::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#remove-menu-item-all-users}12.1.2. 为所有用户移除某个菜单项 {.title}
:::
::: para
面向所有用户的"[**应用程序**]{.guimenu}"菜单定制默认存储于
`/etc/xdg/menus/applications.menu`{.filename}
定义文件中。该文件的位置可以通过设置 `$XDG_CONFIG_DIRS`{.envar}
环境变量被覆盖。
:::
::: para
如需覆盖"[**应用程序**]{.guimenu}"菜单的默认属性，您需要编辑那个
`.menu`{.filename}
文件。要注意，从"[**应用程序**]{.guimenu}"菜单移除一个目录项及其子菜单时，也会将它从"`活动概览`{.systemitem}"中的应用程序视图里移除，从而防止用户在"`概览`{.systemitem}"中搜索该项。
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
[⁠]{#installing-integrating-applications.html#idm139838614005488}
**过程 12.2. 示例：从附件子菜单中移除计算器菜单项**
1.  ::: para
    查阅 `/usr/share/applications/`{.filename}
    目录的内容，并确定您想要移除的菜单项所对应的 `.desktop`{.filename}
    文件：
    :::
    ``` screen
    $ grep -r "Name=Calculator" /usr/share/applications/
    /usr/share/applications/gcalctool.desktop:Name=Calculator
    ```
    ::: para
    如上所示，"[**计算器（Calculator）**]{.guimenuitem}"菜单项对应
    `/usr/share/applications/gcalctool.desktop`{.filename} 文件。
    :::
2.  ::: para
    编辑 `/etc/xdg/menus/applications.menu`{.filename}
    文件，并通过如下所示的 ``{.code} 元素在那个
    `.menu`{.filename} 文件末尾处最后的 ``{.code}
    标签前添加一个新的 ``{.code} 部分。
    :::
    ``` programlisting
    ​
    ​
    ​  
    ​    Accessories
    ​    
    ​      gcalctool.desktop
    ​    
    ​  
    ​
    ​
    ​
    ​ 
    ```
:::
:::
::: section
::: titlepage
## [⁠]{#installing-integrating-applications.html#remove-submenu-user}12.1.3. 为个别用户移除某个子菜单 {.title}
:::
::: para
针对某个指定用户的"[**应用程序**]{.guimenu}"菜单定制默认存储于
`~/.config/menus/gnome-applications.menu`{.filename}
定义文件中。该文件的位置可以通过设置 `$XDG_DATA_HOME`{.envar}
环境变量被覆盖。
:::
::: para
如需覆盖"[**应用程序**]{.guimenu}"菜单的默认属性，首先需要创建一个
`gnome-applications.menu`{.filename}
文件。要注意，从"[**应用程序**]{.guimenu}"菜单中移除一个子菜单时，也会将它所包括的所有菜单项从"`活动概览`{.systemitem}"中的应用程序视图里移除，从而防止用户在"`概览`{.systemitem}"中搜索这些项目。
:::
::: example
[⁠]{#installing-integrating-applications.html#idm139838604428816}
**例 12.1. 从应用程序菜单中移除系统工具子菜单**
::: example-contents