for N1 and N2. Solution 1 by nature prevents N1 and N2 with
local certiﬁcates. However, such solution can be evaded if at-
tackers are still able to collect legitimately signed certiﬁcates
with the attacker-desired hash values by snifﬁng CV network
trafﬁc. As estimated in Table 7, as long as the attacker can
collect over 12000 different certiﬁcates, she can almost guar-
antee (>98% probability) that she can always have a certiﬁcate
ready for triggering a 3-byte hash collision, which thus allow
her to still launch N1 and N2 in real time. Collecting this
many different certiﬁcates is completely realistic, considering
that such collection process can be done ofﬂine. In addition,
the collection process can also be greatly accelerated since
the attacker can actively broadcast learning requests to trigger
surrounding vehicles to return certiﬁcates with desired hash
values, and also can place multiple attack devices in different
locations to parallelize the collection process.
Table 7: Number of hash values needed for hash values of
n-bits to cause a hash collision probability at p.
Number of hash values (k)
Prob. of hash
collision (p)
0.5
0.99
Number of bits of the hash value (n)
24
4823
12431
64
5.069
1.3010
80
1.2912
3.3412
256
4.0138
1.0339
512
1.3677
3.5177
Solution 2 aims at increasing the difﬁculty of causing a hash
collision, the key enabler for N1 and N2. As shown in Table 7,
it will be much more difﬁcult for the attacker either to compute
or to gather proper malicious learning responses. However,
this will increase the DSRC packet size and thus may decrease
the network performance, e.g., increasing network latency. We
have reached out to the protocol developer, and conﬁrmed
that it is indeed a design choice to reduce the DSRC packet
size. Thus, when applying Solution 2, the new size of the
truncated hash type needs to be carefully chosen to balance
such trade-off between security and protocol performance.
From our discussion above, neither solution 1 or 2 can
fully eliminate the attack possibilities for N1 and N2. Thus,
to maximize the chance of preventing the attack in practice,
the best choice would be using them jointly.
Defense against N3 and N4. Solution 3 is proposed for N3
and N4, which thwarts both attacks by making it impossible
to unicast the malicious learning request to block the P2PCD
process. However, the down side is that this may break de-
signed usage of unicast-based learning request. For example,
as speciﬁed in IEEE 1609.0-2019 [36], CV applications will
decide whether to use either unicast or broadcast, while re-
ceiving advertised services. Systematically understanding this
trade off requires surveying and quantifying the demands of
unicast-based learning requests at the CV application level,
which we leave as future work.
Defense against A3. Solution 4 can prevent the attacker
from triggering the split maneuver at arbitrary positions, but
cannot stop her splitting succeeding platoon members. The
certiﬁcate deﬁned in IEEE 1609.2 [12, 32] provides a unique
identity for each CV device. Safety-critical CV applications
like PMP should always use unique and secure identities (e.g.,
certiﬁcates) rather than using self-deﬁned identity (e.g., depth
number), which is easily spoofed by the attacker. However,
the attacker can still send a LEAVE_REQ to split at the succeed-
ing vehicle and herself, which is a designed follower-leave
behavior. The attacker can then join back to the platoon and
launch the attack repeatedly. To completely address A3, we
may require the assistant of misbehavior detection [12]. For
example, a vehicle that keeps leaving and joining a platoon
is highly suspicious. Designing an effective misbehavior de-
tection requires comprehensively characterizing malicious
behaviors, which we leave as future work.
Defense against A4 and A15. Solution 5 aims at elimi-
nating wrong and inconsistent platoon information caused
by A4 and A15. In centralized PMP, a platoon leader is re-
sponsible for passing platoon conﬁguration data to the new
leader, when it leaves the platoon. The new leader can only
accept the information from the old leader because it does not
store any platoon conﬁguration data. The design goal of the
centralized PMP is to improve coordination efﬁciency and to
enhance privacy because followers dynamically enter and exit
the platoon [5]. However, the centralized design sacriﬁces
the security, as a malicious leader can provide wrong pla-
toon conﬁguration data. To address A4 and A15, on one hand,
the platoon members can maintain a local copy of platoon
conﬁgurations. On the other hand, RSUs can also provide ser-
vices to remotely assist platoon members for tracking platoon
conﬁgurations and guarding PMP commands [1]. As RSUs
are often deployed and managed by trustworthy authorities,
platoon members can rely on the infrastructures to correct
wrong or inconsistent information.
Defense against A5-14. Solution 6 is straightforward and
proposed for all PMP block attacks. As we mentioned before,
CV applications should design their own error recovery mech-
anisms. With the error recovery mechanism, PMP should be
able to recover from continuous packet loss. For example,
PMP can deﬁne the retransmission and timeout threshold to
avoid hanging at speciﬁc states. Apart from the classic solu-
3232    30th USENIX Security Symposium
USENIX Association
tion to communication failures, it’s worthing noting that PMP
should also adjust the intra-platoon spacing between the “of-
ﬂine” member and the trailing platoon members accordingly
to avoid trafﬁc collision. If necessary, the platoon leader can
dissolve the platoon and falls back to ACC mode.
8 Related Work
CV security analysis. Since the idea of VANET (i.e., the
original idea of CV) has been around for more than ten years,
many researches have already studied general threats to CV
network [4, 28, 29, 44, 55, 55, 73]. However, as discussed
in §1, existing works generally suffer from three limitations:
(1) rely on manual inspection to identify potential threats
[44, 55, 73], as opposed to automatic discovery in our work,
(2) focus on security properties such as integrity, conﬁdential-
ity, and privacy, as opposed to availability in our work, and
(3) focus on prior generations of protocols or are conducted
before the standardization of IEEE 1609 [4, 29, 44, 55, 73],
as opposed to the latest version studied in our work.
Model checking security protocols. Model checking is a
mature formal veriﬁcation technique for ﬁnite state concurrent
systems, and has been applied to several complex network
protocols [22, 26, 30, 48, 50]. These works aim at expos-
ing vulnerabilities in network protocols but does not consider
quantitative assessments. CVAnalyzer can ﬁnish the attack dis-
covery and the quantitative threat assessment without touch-
ing implementation details. Therefore, CVAnalyzer can be
used by the protocol designer to evaluate the correctness of the
protocol and also understand the severity of identiﬁed attacks,
which can further guide the design of mitigation solutions.
Also, this can largely minimize the cost to ﬁx vulnerabilities,
as all problems can be solved at the early stage.
Secure membership management. For a wireless ad-hoc
network, a secure membership management system is nec-
essary. Usually, network nodes form a peer group to share
data with each other [49, 58, 76], and a group leader or other
trusted entity is responsible for membership management.
Wagner et al. [70] designed a decentralized blockchain-based
system membership management for the platoon, in which
each platoon member maintains a local copy of the blockchain,
storing platoon information; however, it has scalability issues.
Due to the high mobility, the latest CV network does not
form different communication groups, but adopts the digi-
tal signature (ECDSA), with the support of a PKI system,
SCMS [12], to secure the communication. Any CV devices
with valid certiﬁcates can broadcast data to others. To manage
membership, the recently deployed SCMS [12] introduces
misbehavior detection to identify malicious or malfunction-
ing members and then revoke their certiﬁcates. For our attacks,
the certiﬁcate revocation in existing SCMS cannot prevent
P2PCD attacks but can mitigate PMP attacks. The learning re-
sponse in N1 and N2 does not require any signing certiﬁcates,
so the certiﬁcate revocation cannot prevent the attacker from
launching these two attacks. In N3 and N4, the attacker can
always generate new syntax-valid certiﬁcates for the learning
request (i.e., an SPDU). Since the vehicle cannot distinguish
the self-generated certiﬁcates with unknown certiﬁcates, the
learning request ﬁeld will still be processed. Unless the vehi-
cle can always connect to the PKI (through RSU) to check the
validity of unknown certiﬁcates, it is impossible to prevent the
attacker from using self-generated certiﬁcates in the current
CV network stack. Unfortunately, communication with the in-
frastructure may not always be present due to the deployment
difﬁculties. We admit that if the PKI supports the online cer-
tiﬁcate status check, with the infrastructure coverage increase,
the impact of P2PCD attacks will be diminished.
9 Conclusion
In this paper, we presents CVAnalyzer that harnesses the at-
tack discovery capability of the general model checker and
the quantitative threat assessment of the probabilistic model
checker to automate the analysis. CVAnalyzer successfully
detects 4 new DoS attacks in P2PCD and 15 attacks in PMP;
also, we construct practical exploits and validate them in a
real-world testbed. We have reported 4 P2PCD attacks to
IEEE 1609 Working Group [35] and received conﬁrmations.
Also, we discuss the fundamental reasons for these vulnera-
bilities and propose effective mitigation solutions.
Future work. In the future, we would like to extend CVAn-
alyzer to verify more security properties, such as unlinkability.
Though we only inspect the availability property in this pa-
per, CVAnalyzer is actually general and can be extended to
improve the veriﬁcation capabilities. On the other hand, CV-
Analyzer can be also extended to support other protocols in
the context of CV (e.g., SCMS [12]). Also, we would like to
improve the usability of CVAnalyzer. For example, we can
introduce an intermediate representation for the model that
can be automatically converted into the modeling language
used by different model checkers. Therefore, we do not need
to write the model twice for two different model checkers.
Acknowledgments
We would like to thank Yulong Cao, David Ke Hong, Yuru
Shao, and the anonymous reviewers for providing valuable
feedback on our work. This research was supported in part
by an award from Mcity at University of Michigan, and by
the National Science Foundation under grant CNS-1930041,
CNS-1526455, CNS-1850533 and CNS-1929771.
References
[1] A. Abdo, S. M. B. Malek, Z. Qian, Q. Zhu, M. Barth, and N. B. Abu-
Ghazaleh. Application level attacks on connected vehicle protocols. In
Proc. RAID, 2019.
[2] F. Ahmed-Zaid, F. Bai, S. Bai, C. Basnayake, B. Bellur, S. Bro-
vold, G. Brown, L. Caminiti, et al. Vehicle safety communications–
applications (vsc-a) ﬁnal report. Technical report, 2011.
[3] F. Ahmed-Zaid, F. Bai, S. Bai, C. Basnayake, B. Bellur, S. Bro-
vold, G. Brown, L. Caminiti, et al. Vehicle Safety Communications–
USENIX Association
30th USENIX Security Symposium    3233
Applications (VSC-A) Final Report: Appendix Volume 1 System De-
sign and Objective Test. Technical report, 2011.
[4] F. Ahmed-Zaid, F. Bai, S. Bai, C. Basnayake, B. Bellur, S. Bro-
vold, G. Brown, L. Caminiti, et al. Vehicle Safety Communications–
Applications (VSC-A) Final Report: Appendix Volume 3 Security.
Technical report, 2011.
[5] M. Amoozadeh, H. Deng, C. Chuah, H. M. Zhang, and D. Ghosal.
Platoon management with cooperative adaptive cruise control enabled
by VANET. Vehicular Communications, 2015.
[6] K. R. Apt and D. Kozen. Limits for automatic veriﬁcation of ﬁnite-state
concurrent systems. Inf. Process. Lett., 1986.
[7] F. Bai and H. Krishnan. Reliability analysis of DSRC wireless commu-
nication for vehicle safety applications. In IEEE ITSC, 2006.
[8] D. A. Basin, C. Cremers, and C. A. Meadows. Model checking security
protocols. In Handbook of Model Checking. 2018.
[9] D. A. Basin, J. Dreier, L. Hirschi, S. Radomirovic, R. Sasse, and V. Stet-
tler. A formal analysis of 5g authentication. In Proc. ACM CCS, 2018.
[10] J. Bellardo and S. Savage. 802.11 denial-of-service attacks: Real
vulnerabilities and practical solutions. In Proc USENIX Security, 2003.
[11] V. Bénony. Hopper. https://www.hopperapp.com/, 2019.
[12] B. Brecht, D. Therriault, A. Weimerskirch, W. Whyte, V. Kumar,
T. Hehn, and R. Goudy. A security credential management system
IEEE Trans. Intelligent Transportation
for V2X communications.
Systems, 2018.
[13] S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham, S. Sav-
age, K. Koscher, A. Czeskis, F. Roesner, and T. Kohno. Comprehensive
experimental analyses of automotive attack surfaces. In Proc. USENIX
Security, 2011.
[14] Q. A. Chen, Y. Yin, Y. Feng, Z. M. Mao, and H. X. Liu. Exposing
congestion attack on emerging connected vehicle based trafﬁc signal
control. In Proc. NDSS, 2018.
[15] Q. A. Chen, Y. Yin, Y. Feng, Z. M. Mao, and H. X. Liu. Vulnerability
of Trafﬁc Control System Under Cyber-Attacks Using Falsiﬁed Data.
In Transportation Research Board 2018 Annual Meeting (TRB), 2018.
[16] A. Cimatti, E. M. Clarke, E. Giunchiglia, F. Giunchiglia, M. Pistore,
M. Roveri, R. Sebastiani, and A. Tacchella. NuSMV 2: An opensource
tool for symbolic model checking. In Proc. CAV, 2002.
[17] E. M. Clarke, O. Grumberg, S. Jha, Y. Lu, and H. Veith. Progress on
the state explosion problem in model checking. In Informatics, 2001.
[18] E. M. Clarke, W. Klieber, M. Novácek, and P. Zuliani. Model checking
and the state explosion problem. In LASER Summer School on Software
Engineering, 2011.
[19] Cohda Wireless. Mk5 obu. https://tinyurl.com/y6qepj6h, 2019.
[20] C.-C. T. Committee. Dedicated short range communications (dsrc)
message set dictionaryTM set. SAE International, Mar. 2016.
[21] D. L. Dill. The murphi veriﬁcation system. In Proc. CAV, 1996.
[22] M. Eian and S. F. Mjølsnes. A formal analysis of IEEE 802.11w
deadlock vulnerabilities. In Proc. IEEE INFOCOM, 2012.
[23] J. Erickson, S. Chen, M. Savich, S. Hu, and Z. M. Mao. Commpact:
Evaluating the feasibility of autonomous vehicle contracts. In Proc.
IEEE VNC, 2018.
[24] ETSI. Telecommunications and Internet Protocol Harmonization Over
Networks (TIPHON) Release 4; Protocol Framework Deﬁnition; Meth-
ods and Protocols for Security; Part 1: Threat Analysis. Technical
Speciﬁcation ETSI, 2003.
[25] J. Harding, G. Powell, R. Yoon, J. Fikentscher, C. Doyle, D. Sade,
M. Lukuc, J. Simons, and J. Wang. Vehicle-to-Vehicle Communica-
tions: Readiness of V2V Technology for Application. Technical report,
2014.
[26] C. He and J. C. Mitchell. Analysis of the 802.11i 4-way handshake. In
Proc. WiSec, 2004.
[27] G. J. Holzmann. The model checker SPIN. Trans. Software Eng., 1997.
[28] H. Hsiao, A. Studer, C. Chen, A. Perrig, F. Bai, B. Bellur, and A. Iyer.