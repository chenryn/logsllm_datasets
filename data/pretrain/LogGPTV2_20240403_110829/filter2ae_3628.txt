**作者：天融信阿尔法实验室  
公众号： **
### 概述
#### 1.1 前言
2019年3月13号，RIPS又放了一个WordPress的CSRF，与此同时WordPress官方也提交相应的Commit，算是一个比较新的洞。问题出在文章的评论上，其实是有防CSRF相应的wpnonce，熟悉wp的人肯定不会陌生wpnonce，这是wp的防御机制，
**动作** 和 **postid** 构成的 **token** ，用来验证 **reference**
，而且wordpress对标签的过滤机制比较严格的。白名单机制，列如a标签的名单为
看起来是比较严格的，基本带动作的标签不可能出现，插不进js。比较有趣是两个对评论的filter组合起来造成了，a标签中的属性逃逸。RIPS文章也说的比较简单，接下来看看具体的实现过程，其实存在利用条件的，RIPS也没有指出来，总结时详细说明。
#### 1.2 背景介绍
##### 1.2.1 漏洞描述
漏洞存在于5.1.1之前的WordPress版本中，可以使用默认设置进行利用。
根据其WordPress官方下载页面，超过33％的互联网网站正在使用WordPress。
文章评论是博客的核心功能并且默认情况下已启用，该漏洞会影响数百万个网站。
##### 1.2.2 受影响版本
WordPress 
通过拼接变成
在后面的过程中属性里面的特殊字符会被转义成实体。涉及到写js的可能需要绕一下不能用引号和双引号，可以这样绕一下
playload如下：
### 0×03 总结
#### 3.1 利用条件
其实这个洞再利用条件的有一定限定RIPS也没有指出来，我在刚做时候，我添加了一个评论，我没有去文章页面看，我去的后台管理界面评论管理处看，发现并没有出现
**xss** 的情况，我很诧异不应该是一样吗？而后发现在输出评论前
进行了标签为 **comment_text** 的过滤器，其中包含了 **wp_kses_post** 钩子
这也是为什么后台不行。但是应该这个思路，文章显示处也肯定用了这个标签的过滤器，但是理论上是没有使用的，因为使用以后溢出的属性会被过滤掉。
在仔细跟一下，发现确实有存在使用这个标签的情况，对`comment_text`过滤器的使用在`check_comment()`中
是个判断，看到这里你是否明白了这个使用的限定的条件？也就是说用户评论自己的文章时是不需要check的，所以这里存在一定使用条件，在进行添加评论的时候必须是管理员发布的文章才行。
这个洞其实一眼真的很难看出来。白名单验证，直接就放弃了。可不曾想存在一个弄巧的钩子。官方修复在验证 **wpnonce**
不成立时给强制加了`wp_filter_kses`完全限定死了。当然了这个csrf依然存在。因为涉及到wp的特性
**pingback/trackback** 。总的来说还是非常细节的，在挖洞只能拼细节在这种流行的框架下。
### 0X04 修复建议
wp默认是开启自动更新的，最新版本中已经得到修复，若关闭自动更新的环境，请及时检查更新。
可手动修复：
### 0×05 参考连接
* * *