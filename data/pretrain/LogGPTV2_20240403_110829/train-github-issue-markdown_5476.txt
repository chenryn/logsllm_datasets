The help system does not explicitly indicate that a function is deprecated. However, you can infer this information if you notice that the function is defined in `deprecated.jl`.

For example, consider the `fft` function:

```julia
help?> fft
search: fft fft! FFTW fftshift rfft ifft bfft ifft! bfft! ifftshift irfft brfft
  No documentation found.
  Base.DFT.fft is a Function.
  # 1 method for generic function "fft":
  [1] fft(args...; kwargs...) in Base.DFT at deprecated.jl:133
```

When you try to use the `fft` function, you receive an error message indicating that it has been moved to the `FFTW.jl` package:

```julia
julia> fft()
ERROR: Base.DFT.fft has been moved to the package FFTW.jl.
Run `Pkg.add("FFTW")` to install it, restart Julia,
and then run `using FFTW` to load it.
Stacktrace:
 [1] error(::Function, ::String, ::String, ::String, ::String, ::String, ::String, ::String, ::String, ::String) at ./error.jl:44
 [2] fft() at ./deprecated.jl:133
 [3] top-level scope
```

To resolve this, you need to install the `FFTW.jl` package and use it instead:

```julia
julia> using Pkg
julia> Pkg.add("FFTW")
julia> using FFTW
```

After installing and loading the `FFTW` package, you can use the `fft` function as intended.