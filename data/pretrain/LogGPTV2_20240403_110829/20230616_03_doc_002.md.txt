# PostgreSQL 数据库结构

## 目标
- 了解 PostgreSQL 数据库的逻辑结构
- 了解 PostgreSQL 数据库的物理结构
- 了解 PostgreSQL 表空间结构

## 数据库集簇逻辑结构
### 对象标识符 (OID)
- 在 PostgreSQL 中，所有数据库对象都由各自的对象标识符（OID）进行内部管理。
- 这些 OID 是无符号的 4 字节整数。
- 数据库对象和相应的 OID 之间的关系存储在适当的系统目录中，具体取决于对象的类型。
- 数据库的 OID 存储在 `pg_database` 系统表中。
- 数据库的 OID 与对应的数据库目录名一致。

## 数据库集簇物理结构
- 每个数据库是 `base` 子目录下的一个子目录；数据库目录名与相应的 OID 相同。
- 例如，当数据库 `sampledb` 的 OID 为 16384 时，其子目录名为 16384。

```bash
$ cd $PGDATA
$ ls -ld base/16384
drwx------ 213 postgres postgres 7242 8 26 16:33 16384
```

### 主要文件和子目录
- **PG_VERSION**: 包含 PostgreSQL 的主要版本号。
- **pg_hba.conf**: 控制 PostgreSQL 客户端认证的文件。
- **pg_ident.conf**: 控制 PostgreSQL 用户名映射的文件。
- **postgresql.conf**: 设置配置参数的文件。
- **postgresql.auto.conf**: 用于存储通过 `ALTER SYSTEM` 设置的配置参数（从版本 9.4 开始）。
- **postmaster.opts**: 记录服务器上次启动时使用的命令行选项。

### 子目录描述
- **base/**: 包含每个数据库的子目录。
- **global/**: 包含集群范围内的表，如 `pg_database` 和 `pg_control`。
- **pg_commit_ts/**: 包含事务提交时间戳数据（从版本 9.5 开始）。
- **pg_clog/**: 包含事务提交状态数据（在版本 9.6 或更早版本中使用，在版本 10 中被重命名为 `pg_xact`）。
- **pg_dynshmem/**: 包含动态共享内存子系统的文件（从版本 9.4 开始）。
- **pg_logical/**: 包含逻辑解码的状态数据（从版本 9.4 开始）。
- **pg_multixact/**: 包含多事务状态数据（用于共享行锁）。
- **pg_notify/**: 包含 `LISTEN/NOTIFY` 状态数据。
- **pg_repslot/**: 包含复制槽数据（从版本 9.4 开始）。
- **pg_serial/**: 包含已提交的可序列化事务的信息（从版本 9.1 开始）。
- **pg_snapshots/**: 包含导出的快照（从版本 9.2 开始）。PostgreSQL 的 `pg_export_snapshot` 函数会在该子目录中创建快照信息文件。
- **pg_stat/**: 包含统计子系统的永久文件。
- **pg_stat_tmp/**: 包含统计子系统的临时文件。
- **pg_subtrans/**: 包含子事务状态数据。
- **pg_tblspc/**: 包含指向表空间的符号链接。
- **pg_twophase/**: 包含预处理事务的状态文件。
- **pg_wal/**: 包含 WAL（预写日志）段文件（从版本 10 开始）。在版本 10 中从 `pg_xlog` 重命名。
- **pg_xact/**: 包含事务提交状态数据（从版本 10 开始）。在版本 10 中从 `pg_clog` 重命名。
- **pg_xlog/**: 包含 WAL（预写日志）段文件（在版本 9.6 或更早版本中使用）。在版本 10 中被重命名为 `pg_wal`。

## 表空间
- **概念**: PostgreSQL 中的表空间是基本目录之外的附加数据区域。此功能在版本 8.0 中实现。
- **默认表空间**:
  - `pg_default`: 默认表空间，物理文件位置在数据目录的 `base` 子目录中。
  - `pg_global`: 用于保存系统表，物理文件位置在数据目录的 `global` 子目录中。
- **创建数据库时**:
  - 默认从 `template1` 数据库克隆，除非特别指定了新建数据库的表空间，否则默认使用 `pg_default` 表空间。
  
### 创建表空间
- 创建表空间时生成的目录命名规则为 `PG_` + `主版本号` + `_` + `目录版本号`。
  ```sql
  sampledb=# create tablespace new_tblspc location '/home/postgres/tblspc';
  ```
  ```bash
  $ ls -l /home/postgres/tblspc/
  total 4
  drwx------ 4 postgres postgres PG_12_201909212
  ```

- 新建表空间的目录由 `pg_tblspc` 子目录中的软链接寻址，链接名与表空间的 OID 值相同。
  ```sql
  postgres=# select oid, spcname from pg_tablespace;
  oid | spcname
  -------+------------
  1663 | pg_default
  1664 | pg_global
  90208 | new_tblspc
  (3 rows)
  ```
  ```bash
  $ ls -l $PGDATA/pg_tblspc/
  total 0
  lrwxrwxrwx. 1 postgres postgres 90208 -> /home/postgres/tblspc
  ```

- **指定表空间创建数据库**:
  ```sql
  testdb=# create database newdb tablespace new_tblspc;
  ```

- **初建表时指定表空间**:
  ```sql
  testdb=# create table test1 (id int) tablespace new_tblspc;
  testdb=# SELECT pg_relation_filepath('test1');
  pg_relation_filepath
  ---------------------------------------------
  pg_tblspc/90208/PG_12_201909212/16385/90210
  ```

## 总结
- 了解了 PostgreSQL 数据库的逻辑结构、物理结构以及表空间结构。

## 练习
1. 创建一个表空间，并在该表空间中创建一个表。写入测试数据，并使用 `pg_relation_filepath` 观察这个表的数据文件存放路径，尝试解读路径中的目录结构。