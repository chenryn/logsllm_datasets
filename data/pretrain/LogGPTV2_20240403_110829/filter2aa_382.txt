我的CS笔记之- In-memory Evasion 4-5
0x00 前言
In-memory Evasion 4-5其中包含了威胁模拟的介绍，大致意思就是通过修改c2profile模仿真实APT的样
本会产生的特征行为等，也不是百分百模拟，就是模拟了一下yara规则中的静态特征，感兴趣的小伙伴
自行学习，我就不做笔记了。除了威胁模拟，视频中还介绍了cs3.11引入 的一些内存对抗新功能主要是
Module Stomping和cleanup这2个功能。这里不由感叹一句，自从CS被卖了以后的，更换了老大以
后，更新越来越不行了，还开始搞java代码混淆，class完整性校验。多把精力花在怎么进化CS上吧，
@Joe Vest @Greg Darwin（ps:虽然这俩肯定是看不到这个文档的）。
言归正传，我主要记录Module Stomping和cleanup这2个功能。
0x01 Module Stomping和cleanup
我们首先回忆一下In-memory Evasion 2中的stageless payload加载过程中的：
1. 申请一个块儿内存（allocate memory）
2. 复制Stager去这一块儿内存里
3. 创建一个线程，运行这个Stager
4. 这个Stager会再次申请一块儿内存
5. Stager去下载加密的payload，写入申请的内存中
6. Stager把执行流程转递给这个加密的payload
7. 加密的payload自解密成Reflective DLL
8. 然后把执行流程传递给Reflective DLL
9. Reflective DLL 申请一块儿内存
10. 然后初始化自己在新的内存里面
11. 最后reflective DLL 调用payload的入口点函数
上面的步骤分配了2次内存，在内存中如图所示：
1-3 我们可以使用artifact kit做自定义处理，但是9-11就很麻烦，9-11是一个反射DLL这个反射dll包含2
部分，一部分是反射loader，一部分是beacon的功能，9-10就是使用反射loader来加载beacon功能的
过程。这儿也是被防御查杀拦截的重点。我开始对CS4.4新的自定义反射dll loader kit理解错误，也是这
儿，cs4.4这个自定义kit自定义的只是这个反射loader，并不包含beacon的功能，而BeaconEye的查杀
点是Beacon功能中的行为，因此cs4.4这个kit也不能直接对抗BeaconEye，这个kit并不包含自定义
Beacon功能。回归正题，我们的Module Stomping是怎么在9-11中起作用的。
我们知道反射DLL分为反射dll loader和beacon的功能，在loader加载功能的时候，我们就可以做很多事
情，Module Stomping就是在这个过程中起作用的。
我们再看看Module Stomping，具体是什么。技术很简单，就是导入一个系统上正常的DLL进入内存
中，然后替换内存内容为我们的beacon功能，这样可以避免使用虚拟内存分配函数virtualAlloc等。同时
让beacon功能看上去很像一个正常DLL。这里面存在几个问题：
导入的DLL不能太小，太小导致内存空间小，不能够完全复制我们的beacon功能进去。
同一个DLL在不同系统上的大小可能是不一样，有些dll在win10上很大，08上只有1/3大小，因此
你上线win10正常，上线08可能就crash了。
这个系统的DLL必须有导出函数，因为反射loader需要通过导出函数去找DLL在内存中的位置
当然反射loader也有一些防止出错的机制：
Author: L.N. / Date: 2021-09-07 Produced by AttackTeamFamily
No. 1 / 2 - Welcome to www.red-team.cn
如果配置的系统DLL不存在，会返回使用VirtualAlloc
如果配置中的DLL，已经被进程导入了，会返回使用VirtualAlloc
使用前用一定要用c2lint测试一下
当然了我们写入到内存的beacon代码也是可以开启混淆的。因为Module Stomping功能具有一定隐蔽
性，因此适合长期潜伏通道。同时这个功能也不适合高频次的操作，操作多容易出错。
我们再回到1-3步中的如果不使用artifact kit自定义，使用默认的stageless，初始化的时候就存在一次内
存申请，申请的内存在后面其实是不会使用了，但是也没有释放，因此很容易被拿去做内存扫描特征，
如果我们设置了cleanup，就会调用VirtualFree释放这个初始化过程中的内存。
我们开启这3个配置：
也是被混淆的
RWX当然也可以通过c2profile配置进行规避。
0x02 总结
这个In-memory Evasion系列视频是作者2018年录制的，也是cs3.11发布不久。回头来看对理解CS非常
有帮助，能够让我们更好的使用CS里面的PE扩展相关的配置功能。同时视频从防御着和攻击者2个角度
分析，能够让读者很好的理解为什么？当然我个人英语和技术能力有限，可能在理解的时候出现错误，
如果整个系列中有出错的地方，请各位指正。
Author: L.N. / Date: 2021-09-07 Produced by AttackTeamFamily
No. 2 / 2 - Welcome to www.red-team.cn