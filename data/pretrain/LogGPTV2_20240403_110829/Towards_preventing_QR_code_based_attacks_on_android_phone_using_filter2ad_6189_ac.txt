11              status++; 
12     if  status == 0 && end‐with‐apk(url) 
13         status = 4;  
14    return status; 
In the code, the status variable representing the security status of 
a URL has 5 different values. The status variable is initialized to 
0,  implying  a  safe  URL.  Its  value  becomes  1  when  a  URL  is 
detected  as  a  phishing  one,  2  when  a  URL  is  detected  as  a 
malware website, 3 when a URL is a both phishing and malware 
site,  4  when  a  URL  is  checked  safe  through  the  Safe  Browsing 
and PhishTank but ends with “.apk”. 
3.2  Security Warning Design 
Studies have shown that warning designs affect user’s decision to 
obey or ignore the warnings [22, 23], thus designing an effective 
security  warning  by  providing  better  risk  perception  is  a 
significant  part  of  our  solution.  We  applied  existing  warning 
design  recommendations  [22,  24]  and  Microsoft’s  NEAT  (Neat, 
Explained,  Actionable,  Tested)  &  SPRUCE  (Source,  Process, 
Risk,  Unique,  Choices  and  Evidence)  [25]  into  our  warning 
message design as follows: we first set the warnings mainly with 
black  and  red  colors,  since  this  color  combination  is  quite 
effective to prevent users from attacks [22]; we  made  the  safest 
button  “Get  me  out  of  here”,  as  a  recommended  action,  most 
visible  by  setting  its  background  green,  which  also  helps  users 
344think of safe actions; since users are likely to ignore lengthy text, we 
only include necessary words in the warning, giving users a chance to 
click  “Show  Details”  button  for  viewing  details.    In  addition,  only 
simple  words  are  used,  for  users  will  not  understand  or  will 
misinterpret technical jargons.  
Two  screenshots  of  our  solutions  are  captured  in  Figure  2  (a)  (b) 
respectively. Figure 2 (a) shows the display of our solution when a 
user scans a QR code with a phishing or malware URL. Figure 2 (b) 
shows the screenshot when a user scans a QR code whose encoded 
URL ends with “.apk”.    
If the website addressed by the URL is a phishing website or contains 
malware,  we  immediately  return  a  negative  evaluation,  which  is 
shown  in  Figure  2(a).  If  the  URL  ends  with  “.apk”,  we  return  an 
uncertain evaluation, shown in Figure 2(b), for .apk file may be not a 
malware.  Compared  to  Norton  Snap  and  QR  Pal,  our  security 
warning design is better understood by providing the sufficient risk 
details and the recommended action without using technical jargons, 
and  this  is  confirmed  by  the  results  of  our  user  study  in  the  next 
section.     
4.  USER STUDY 
To investigate the effectiveness of our solution, we designed a user 
study  to  explore  the  effectiveness  of  the  security  warning  in  our 
solution. Our user study also was to compare our solution against the 
existing two solutions we discussed in the previous section. We also 
wanted  to  study  how  all  of  these  solutions  compare  against  the 
absence of any visual security warning.  
4.1  Design and Recruitment 
We defined four separate user groups, each of which was exposed to 
a different warning provided by a different QR code scanner. 
(cid:131)  Group 1: Exposed to the attack with no warning, using QR-code 
Scanner  
(cid:131)  Group 2: Exposed to the attack with Norton Snap’s warning 
(cid:131)  Group 3: Exposed to the attack with QR Pal’s warning 
(cid:131)  Group 4: Exposed to the attack with our designed warning 
In the design of our experiment, we performed a power analysis to 
determine the minimum sample size that we would require to test our 
hypotheses. We chose an error of 0.05 and a power of 0.8, common 
among such experiments, and determined a minimum sample size of 
19 subjects across the four user groups. Based on this analysis, we 
chose to recruit 80 participants with which 20 subjects in each of the 
four  groups.  It  was  necessary  for  participants  to  have  a  Facebook 
account, so that we can test their reactions after scanning a QR code 
containing the URL of the Facebook authentication page. 
Our  participants,  20  females  and  60  males,  have  a  high  education 
rate,  with  all  having  completed  at  least  high  school  degree,  and 
83.75% (67/80) having or currently pursuing undergraduate college 
degrees. Age groups of our participants include 38 from 10-20 years 
old, 32 from 21-30 years old, 5 from 31-40 years old, 2 from 41-50 
years old, 2 from 51-60 years old, 1 from 61-70 years old. Relative to 
security  knowledge,  the  participants  in  our  sample  are  very 
sophisticated,  with  only  7  claiming  they  have  poor  security 
knowledge.  54%  (43/80)  of  the  participants  replied  that  they  had 
good security knowledge or above. 
4.2  Experiment 
During the experiment, we randomly assign 20 participants to each of 
four  test  groups.  Each  group  was  exposed  to  the  phishing  attack; 
three groups were given a specific warning respectively by Norton 
Snap, QR Pal, and SafeQR, and the fourth group was not warned at 
all by using QR-code Scanner. To avoid the framing effect, we did 
not want the users to be aware that we were testing their reaction to a 
security warning. In addition, we wanted the users to be exposed to 
the warnings as an abnormality or exceptional condition. To achieve 
both  goals,  we  told  the  participants  that  we  were  investigating 
whether they made full use of smart phone apps, and evaluating the 
usability of using QR code scanners to access websites. 
The hypotheses we wanted to test were on (1) the user unawareness 
of  malicious  QR  codes,  (2)  the  effectiveness  of  QR  code  based 
phishing  attacks,  and  (3)  the  helpfulness  of  security  warnings. 
Finally, we wanted to verify that our proposed warning design would 
be more effective than the existing solutions.  
The participants were given an Android smart phone where the QR 
code apps were installed and were told that we would be interested in 
improving the usability of the apps, so they were encouraged to use 
the  app  with  their  real  credentials  to  help  us  achieve  the  goal. 
Besides,  users  were  asked  to  act  as  if  they  were  using  their  own 
phone, in that all decisions they made should be the same as if they 
were  being  made  on  their  own  private  phone.  Security  was  never 
explicitly mentioned. Although we initially thought the “make all the 
decisions as if this was your phone” statement could bring focus on 
security issues, the results showed us that this was not the case. 
4.3  User Study Results 
Each user was asked to take an exit survey, which was also used to 
test  our  hypotheses.  Our  first  hypothesis  was  tested  by  asking  the 
subjects  whether  they  had  ever  thought  of  any  security  problems 
caused  by  QR  codes.  Out  of  80  subjects,  67.5%  (54/80)  were  not 
aware  that  malicious  QR  codes  existed.  Hence,  we  concluded  that 
most  of  the  users  were  unaware  of  malicious  QR  codes.  From  the 
results of our second hypothesis testing, we learned that without any 
added security mechanisms, the phishing attack is highly effective, 
for 100% (20/20) of the participants opened the link and 75% (15/20) 
of them submitted their Facebook username and password. We also 
found that the security warnings provided by the QR code scanners, 
i.e.  Norton  Snap,  QR  Pal,  and  SafeQR,  helped  users  perceive 
potential dangers and avoid phishing  attacks, as shown in Table 3. 
Hence, our third hypothesis was confirmed. The results obtained for 
our proposed solution SafeQR proved more efficient than the existing 
solution. In terms of opening the link, Norton Snap only led 5 out of 
20 users to not open the link, QR Pal led 11 out of 20 users to not 
open the link, while our solution SafeQR led 17 out of 20 users to not 
open the link. In terms of submission, both Norton Snap and QR Pal 
led 13 out of 20 users to not submit their credentials. Our solution 
SafeQR led 18 out of 20 users to not submit their credentials. 
Table 3. For different study groups, # of open and submit 
QR-code Scanner 
Norton Snap 
QR Pal 
SafeQR 
Open 
20 
15 
9 
3 
Submit 
15 
7 
7 
2 
3455.  CONCLUSION AND FUTURE WORK 
In this paper, we presented an approach to preventing QR code-
based phishing and malware attacks. Specifically, we first studied 
the current status of existing QR code scanners in terms of their 
detection rate for malicious URLs. Then we proposed our solution 
to  detect  malicious  URLs  more  effectively  by  using  two  well-
know  security  APIs  along  with  visual  security  warning  design. 
Lastly  we  discussed  our  user  study  design  to  evaluate  the 
effectiveness of the proposed solution.  
This  research  is  by  no  means  complete.  Firstly,  our  immediate 
future work is to analyze the data from user study to provide some 
insightful guidelines about designing effective security warnings 
on mobile phones. Secondly, in this paper, we mainly focused on 
security  hardening  on  QR  code  scanners.  Our  future  research 
direction will include an extensive study of whether it is possible 
to enhance the security of QR code itself. This could be achieved 
by considering some cryptographic methods applied to QR codes 
for  the  purpose  of  certification  and  identification.  Lastly,  the 
phishing URLs that we used for this study came from PhishTank. 
In our immediate future work, we are going to use sample URLs 
from other sources such as Spamscatter to evaluate our proposed 
solution.  
6.  ACKNOWLEDGMENTS 
This  work  was  partially  supported  at  the  Secure  Computing 
Laboratory at New Mexico Tech by the grant from the National 
Science  Foundation  (NSF-IIS-0916875).  The  authors  would  like 
to  thank  Chen  Sun  from  NM  Tech  and  three  anonymous 
reviewers for their valuable comments and suggestions. 
7.  REFERENCES 
[1]  C. Woo Bong, H. Keon il, L. Won Gyu, P. Won Hyung, and 
C. Tai Myoung, "The New Vulnerability of Service Set 
Identifier (SSID) Using QR Code in Android Phone," in 
International Conference on Information Science and 
Applications (ICISA), Washington, DC, USA, 2011. 
[2]  CNET. (2012). The Dark Side of QR Codes. Available: 
http://news.cnet.com/8301-1009_3-57464276-83/the-dark-
side-of-qr-codes/. 
[3]  Z. Yajin and J. Xuxian, "Dissecting Android Malware: 
Characterization and Evolution," Security and Privacy (SP), 
2012 IEEE Symposium on, 2012. 
[4]  D. Winder. (2012). Five Hidden Security Threats. Available: 
http://www.pcpro.co.uk/features/374896/five-hidden-
security-threats. 
[5]  R. Dhamija, J. D. Tygar, and M. Hearst, "Why phishing 
works," Proceedings of Conference on Human Factors in 
Computing Systems, Montréal, Québec, Canada, 2006. 
[6]  P. Soni, S. Firake, and B. B. Meshram, "A phishing analysis 
of web based systems," Proceedings of the 2011 
International Conference on Communication, Computing; 
Security, Rourkela, Odisha, India, 2011. 
[7]  P. Kieseberg, M. Leithner, M. Mulazzani, L. Munroe, S. 
Schrittwieser, M. Sinha, and E. Weippl, "QR code security," 
Proceedings of the 8th International Conference on 
Advances in Mobile Computing, Paris, France, 2010. 
[8]  V. Sharma, "A Study of Malicious QR Codes," International 
Journal of Computational Intelligence and Information 
Security (IJCIIS), vol. 3, May 2012. 
[9]  A. P. Felt and D. Wagner, "Phishing on Mobile Devices," the 
WEB 2.0 Security and Privacy (W2SP), Oakland, California, 
USA, 2011. 
[10] Monthly Malware Statistics: September 2011. Available: 
www.securelist.com/en/analysis/204792195/Monthly_Malw
are_Statistics_September_2011 
[11] L. Borrett. (2011). Beware of Malicious QR Codes. 
Available: http://www.abc.net.au/technology/articles/ 
2011/06/08/3238443.htm 
[12] A. Kieyzun, P. J. Guo, K. Jayaraman, and M. D. Ernst, 
"Automatic creation of SQL Injection and cross-site scripting 
attacks," Proceedings of the 31st International Conference on 
Software Engineering, 2009. 
[13] Netscape. DMOZ Open Directory Project. Available: 
http://www.dmoz.org 
[14] PhishTank. Available: http://www.phishtank.com 
[15] J. Ma, L. K. Saul, S. Savage, and G. M. Voelker, "Beyond 
blacklists: learning to detect malicious web sites from 
suspicious URLs," Proceedings of the 15th ACM SIGKDD, 
Paris, France, 2009. 
[16] S. Abu-Nimeh, D. Nappa, W. Xinlei, and S. Nair, 
"Distributed Phishing Detection by Applying Variable 
Selection Using Bayesian Additive Regression Trees," in 
Communications, 2009. ICC '09. 
[17] Norton Safe Web. Available: http://safeweb.norton.com/ 
[18] Norton. Ecommerce Safety. Available: 
https://safeweb.norton.com/help/ecommerce_safety 
[19] Safe Browsing API. Available: 
https://developers.google.com/safe-browsing 
[20] OpenDNS. PhishTank API Information. Available: 
http://www.phishtank.com/api_info.php 
[21] Safe Browsing Lookup API Developer’s Guide. Available: 
https://developers.google.com/safe-browsing/lookup_guide 
[22] J. Sunshine, S. Egelman, H. Almuhimedi, N. Atri, and L. F. 
Cranor, "Crying wolf: an empirical study of SSL warning 
effectiveness," Proceedings of the 18th conference on 
USENIX security symposium, Montreal, Canada, 2009. 
[23] S. Egelman, L. F. Cranor, and J. Hong, "You've been 
warned: an empirical study of the effectiveness of web 
browser phishing warnings," Proceedings of Conference on 
Human Factors in Computing Systems, Italy, 2008. 
[24] L. Zeltser. (2011). How to Design Security Warnings to 
Protect Users. Available: http://blog.zeltser.com/post/ 
3638747689/designing-security-warnings 
[25] R. Reeder, E. C. Kowalczyk, and A. Shostack, "Helping 
Engineers Design NEAT Security Warnings," presented at 
the Symposium On Usable Privacy and Security (SOUPS) 
Pittsburgh, PA, USA, 2011. 
346