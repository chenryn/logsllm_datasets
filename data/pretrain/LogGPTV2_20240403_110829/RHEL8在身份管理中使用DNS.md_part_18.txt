-   [**host03**]{.strong} A 记录存在于 [**idm.example.com**]{.strong}
    区域中。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  `打开清单文件，并确保[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-CNAME-record-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-CNAME-record-is-present.yml ensure-CNAME-record-is-present-copy.yml
    ```
4.  打开 [**ensure-CNAME-record-is-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   （可选）调整 play `名称提供的描述`{.literal}。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   在 Record `变量部分中`{.literal}，设置以下变量和值：
        ::: itemizedlist
        -   将 `name`{.literal} 变量设置为 [**www**]{.strong}。
        -   将 `cname_hostname`{.literal} 变量设置为
            [**host03**]{.strong}。
        -   将 `name`{.literal} 变量设置为 [**ftp**]{.strong}。
        -   将 `cname_hostname`{.literal} 变量设置为
            [**host03**]{.strong}。
        :::
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure that 'www.idm.example.com' and 'ftp.idm.example.com' CNAME records point to 'host03.idm.example.com'.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipadnsrecord:
          ipaadmin_password: Secret123
          zone_name: idm.example.com
          records:
          - name: www
            cname_hostname: host03
          - name: ftp
            cname_hostname: host03
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-CNAME-record-is-present.yml
    ```
:::
::: itemizedlist
**其它资源**
-   您可以在
    ` /usr/share/doc/ansible-freeipa/ 目录中的README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible-freeipa``{=html} ``{=html}
    `ipadnsrecord 模块的更多`{.literal} Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_working-with-vaults-in-idm.html#ensuring-the-presence-of-an-srv-record-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}使用 Ansible 在 IdM 中存在 SRV 记录 {.title}
:::
DNS
服务(SRV)记录定义域中可用服务的主机名、端口号、传输协议、优先级和权重。在
Identity Management(IdM)中，您可以使用 SRV 记录来定位 IdM 服务器和副本。
本节介绍 Identity Management(IdM)管理员如何使用 Ansible playbook 来确保
IdM DNS 中存在 SRV 记录。在以下示例中，IdM 管理员可确保存在
[**\_kerberos.\_udp.idm.example.com**]{.strong} SRV 记录，其值为 [**10
50 88 idm.example.com**]{.strong}。这会设置以下值：
::: itemizedlist
-   它将服务的优先级设置为 10。
-   它将服务的权重设置为 50。
-   它将服务要使用的端口设置为 88。
:::
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS [区域的更多信息，请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html "第 3 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  `打开清单文件，并确保[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-SRV-record-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-SRV-record-is-present.yml ensure-SRV-record-is-present-copy.yml
    ```
4.  打开 [**ensure-SRV-record-is-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为
        [**\_kerberos.\_udp.idm.example.com**]{.strong}。
    -   `将srv_rec`{.literal} 变量设置为 [**\'10 50 88
        idm.example.com\'**]{.strong}。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
        对于当前示例，此修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Test multiple DNS Records are present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure a SRV record is present
      - ipadnsrecord:
          ipaadmin_password: Secret123
          name: _kerberos._udp.idm.example.com
          srv_rec: ’10 50 88 idm.example.com’
          zone_name: idm.example.com
          state: present
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-SRV-record-is-present.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 SRV 记录的更多信息，请参阅 [IdM 中的 DNS
    记录](#managing-dns-records-in-idm_working-with-vaults-in-idm.html#dns-records-in-idm_managing-dns-records-in-idm "IdM 中的 DNS 记录"){.link}。
-   您可以在
    ` /usr/share/doc/ansible-freeipa/ 目录中的README-dnsrecord.md`{.literal}
    Markdown 文件中看到 ansible-freeipa``{=html} ``{=html}
    `ipadnsrecord 模块的更多`{.literal} Ansible playbook
    示例。该文件还包含 `ipadnsrecord`{.literal} 变量的定义。
-   您可以在
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord 目录中看到 ipadnsrecord`{.literal}
    模块的``{=html} Ansible playbook 示例。
:::
:::
:::
[]{#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html}
::: chapter
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm}第 9 章 在 IdM 中使用规范化 DNS 主机名 {.title}
:::
默认情况下，在 Identity Management(IdM)客户端上禁用 DNS
规范化，以避免潜在的安全风险。例如，如果攻击者控制 DNS
服务器和域中的主机，攻击者可以导致短主机名（如 `demo`{.literal}
）解析到被入侵的主机，如
`bad.example.com`{.literal}。在这种情况下，用户连接到与预期不同的服务器。
本节论述了如何在 IdM 客户端中使用规范化主机名。
::: section
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#adding-an-alias-to-a-host-principal_using-canonicalized-dns-host-names-in-idm}向主机主体中添加别名 {.title}
:::
默认情况下，使用 `ipa-client-install`{.literal}
命令注册的身份管理(IdM)客户端不允许在服务主体中使用短主机名。`例如，在访问服务时，用户只能使用 host/`{.literal}
而不是 host/``{=html}。
这部分论述了如何向 Kerberos 主体添加别名。请注意，您也可以在
`/etc/krb5.conf`{.literal} 文件中启用主机名规范化。详情请查看
["在客户端的服务主体中启用主机名规范"一节](#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#enabling-canonicalization-of-host-names-in-service-principals-on-clients_using-canonicalized-dns-host-names-in-idm "在客户端的服务主体中启用主机名规范"){.xref}。
::: itemizedlist
**先决条件**
-   已安装 IdM 客户端。
-   主机名在网络中是唯一的。
:::
::: orderedlist
**流程**
1.  以 `admin`{.literal} 用户身份对 IdM 进行身份验证：
    ``` literallayout
    $ kinit admin
    ```
2.  将别名添加到主机主体。例如，要在 `demo. `{.literal} examle.com
    主机主体中添加 demo``{=html} 别名：
    ``` literallayout
    $ ipa host-add-principal demo.example.com --principal=demo
    ```
:::
:::
::: section
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#enabling-canonicalization-of-host-names-in-service-principals-on-clients_using-canonicalized-dns-host-names-in-idm}在客户端的服务主体中启用主机名规范 {.title}
:::
本节论述了如何在客户端的服务主体中启用主机名规范化。
请注意，如果您使用主机主体别名，如
["向主机主体中添加别名"一节](#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#adding-an-alias-to-a-host-principal_using-canonicalized-dns-host-names-in-idm "向主机主体中添加别名"){.xref}
所述，则不需要启用规范化。
::: itemizedlist
**先决条件**
-   已安装 Identity Management(IdM)客户端。
-   以 `root`{.literal} 用户身份登录 IdM 客户端。
-   主机名在网络中是唯一的。
:::
::: orderedlist
**流程**
1.  将 `/etc/krb5.conf`{.literal} 文件中的 `[libdefaults]`{.literal}
    部分中的 `dns_canonicalize_hostname`{.literal} 参数设置为
    `false`{.literal} ：
    ``` literallayout
    [libdefaults]
    ...
    dns_canonicalize_hostname = true
    ```
:::
:::
::: section
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#options-for-using-host-names-with-dns-host-name-canonicalization-enabled_using-canonicalized-dns-host-names-in-idm}启用 DNS 主机名规范化使用主机名的选项 {.title}
:::
如果您如
["在客户端的服务主体中启用主机名规范"一节](#using-canonicalized-dns-host-names-in-idm_working-with-vaults-in-idm.html#enabling-canonicalization-of-host-names-in-service-principals-on-clients_using-canonicalized-dns-host-names-in-idm "在客户端的服务主体中启用主机名规范"){.xref}
所述，在 `/etc/krb5.conf`{.literal} 文件中设置了
`dns_canonicalize_hostname = true`{.literal}，您可以在服务主体中使用主机名时具有以下选项：
::: itemizedlist
-   在 Identity
    Management(IdM)环境中，您可以在服务主体中使用完整主机名，如
    `host/`{.literal}。
-   在没有 IdM 的环境中，但如果 RHEL 主机作为 Active
    Directory(AD)域的成员，则不需要进一步考虑，因为 AD
    域控制器(DC)自动为注册到 AD 的机器的 NetBIOS 名称创建服务主体。
:::
:::
:::