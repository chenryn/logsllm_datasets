msc Attack on basic signature-based Brands and Chaum
Dishonest prover
Honest prover
P
P (cid:2)
Veriﬁer
V
m ∈R {0, 1}k
commit (m)
α ∈R {0, 1}k
Rapid bit exchange for i = 1 to k
αi
βi = αi ⊕ mi
c ← α1|β1| · · · |αk|βk
(open commit), sign P (cid:2) (c)
(open commit), sign P (c)
Verify commit
c ← α1|β1| · · · |αk|βk
verify sign P (c)
Figure 2. Distance Hijacking attack on basic signature-based Brands and
Chaum. sign P and sign P (cid:2) denote the signatures with the signature keys
of P and P (cid:2), respectively.
the distance computed from the distance bounding phase,
even though in reality, this phase was performed by P (cid:2).
We next show an example scenario in which Distance
Hijacking attacks pose a threat.
Example 2 (Real-world scenario). Consider the scenario
depicted in Figure 3, in which several people work in a secure
facility. In the facility is a mainframe containing sensitive
information. The mainframe can be accessed wirelessly by
all authorized personnel, in order to facilitate easy access
by multiple people at the same time. As an added security
mechanism, in case an employee loses his smartcard with his
private key, the mainframe can only be accessed by people
inside the building. This is veriﬁed every time an employee
logs in to the system, by running a distance bounding protocol
between a station in the building (acting as the veriﬁer) and
the employees terminal (acting as the prover).
Assume that an attacker has managed to get hold of an
employee smartcard but is unable to physically access the
building. He is instead located in a van in the parking lot
where he has a powerful antenna capable of communicating
with the wireless terminal inside the building. However in
order to log in to the system the attacker needs to prove that
he is inside the building by running a distance bounding
protocol.
If the distance bounding protocol in use is vulnerable to
distance hijacking, the attacker can exploit the presence of
the smartcard of another (non-collaborating and unaware)
employee inside the building to execute a Distance Hijacking
attack. The mainframe security system now believes that the
Figure 3. Real-world scenario for Distance Hijacking. P has a (stolen)
smartcard. However, he cannot enter the secure facility and he does not
have any collaborators inside the facility. In a Distance Hijacking attack, P
exploits the presence of an honest P (cid:2) to convince V that P is within the
secure facility.
attacker is in the building with a valid private key, and he
is granted wireless access.
As straightforward as this type of attack may seem, a sur-
prising number of distance bounding protocols are vulnerable
to Distance Hijacking, as we will show in Section III-E. In
Section VI we discuss more complex Distance Hijacking
attacks, where several different distance bounding protocols
are used in the same environment.
B. Relation to historical attack types
We ﬁrst relate Distance Hijacking to the three attack
types that are traditionally considered for distance bounding
protocols.
As stated in the introduction, conceptually speaking,
Distance Hijacking can be placed between Distance Fraud
and Terrorist Fraud. One could thus consider extending the
deﬁnition of either Distance Fraud or Terrorist Fraud to
also include Distance Hijacking attacks. However, given
that previous analyses and countermeasures do not exclude
such attacks, the consequence would be that many protocols
would be incorrectly labeled as being resistant against the
(new deﬁnitions of) Distance Fraud or Terrorist Fraud, or
that existing countermeasures are insufﬁcient. We therefore
choose to introduce Distance Hijacking as a separate type
of attack.
We show why the existing three attack types do not cover
Distance Hijacking. In Maﬁa Fraud attacks the prover is
honest. Distance Fraud attacks are deﬁned as attacks by a
lone dishonest prover. These two types are therefore clearly
different from Distance Hijacking, which involves at least a
dishonest prover and another honest party.
To illustrate the difference between Distance Hijacking and
the attack type that is conceptually closest, Terrorist Fraud,
we consider again the scenario from Example 2. Recall that
in Terrorist Fraud, the dishonest prover collaborates with
another (closer) attacker. In the scenario from the example,
there are two main reasons why the absence of Terrorist Fraud
attacks does not guarantee the absence of Distance Hijacking
116
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:52 UTC from IEEE Xplore.  Restrictions apply. 
Figure 4. Classiﬁcation of attacks on distance bounding protocols, in which a veriﬁer computes an incorrect distance bound for a prover.
attacks. First, we observe that Terrorist Fraud is not possible
in this scenario, because the attacker does not have another
attacker inside the building that is willing to cooperate with
him. Hence the designers of the system could consider using
a protocol such as signature-based Brands and Chaum, on
which Distance Hijacking may still be possible. Second, the
common countermeasure to Terrorist Fraud is to force the
attacker to reveal his long term key to his accomplice, based
on the assumption that this will deter the attacker. However,
in the scenario from Example 2 this assumption does not
hold: the attacker has no problem with leaking the (stolen)
long term key. Additionally, even if he does transmit the
key, it will be to the (unmodiﬁed) smartcard of an honest
employee. The employee’s smartcard will typically not detect
this key, and will even delete the received data after the
session ends. Hence guaranteeing the absence of Terrorist
Fraud attacks, either by assumption or by countermeasure,
does not guarantee the absence of Distance Hijacking.
C. Attack classiﬁcation
The traditional attack types Maﬁa Fraud, Distance Fraud,
and Terrorist Fraud, are deﬁned independent of each other and
usually in incompatible ways. This makes it hard to determine
whether all possible attacks on distance bounding protocols
are covered by these types, even if we include Distance
Hijacking attacks. We propose to remedy this situation by
deriving attack type deﬁnitions that cover all possible attacks
by construction. Intuitively, we perform a sequence of case
distinctions based on three attributes of attacks on distance
bounding protocols: whether the prover is honest, whether
the prover is the only party involved in attacking the veriﬁer,
and if not, whether one of the other involved parties is honest.
By considering these three attributes we arrive at deﬁnitions
for four attack types.
We introduce some additional terminology. The goal of a
distance bounding protocol is to compute a correct distance
bound. More precisely, we say that the veriﬁer V computes
the correct distance bound d on P , if P or his identifying
key1 is indeed within the (computed or expected) distance d.
We make two assumptions on distance-bounding protocols.
First, in the absence of attackers, the veriﬁer computes the
1In our context, P is identiﬁed by his key. If others know P ’s key, they
cannot be distinguished from P .
correct distance bound. Second, we assume that the protocols
guarantee weak authentication of P (i. e., aliveness [17]).
Using the above terminology and assumptions, we provide
an exhaustive classiﬁcation of attacks on distance bounding
protocols attacks in which the veriﬁer computes an incorrect
distance bound for the prover, represented in Figure 4.
Assume that V does not compute the correct distance bound
d for P . Thus, neither P nor his identifying key is within
the distance d. Because of our ﬁrst protocol assumption, this
must be caused by an attacker.
We distinguish two main cases. If P is honest, then P is
not the attacker, and therefore an external attacker is changing
the distance. We call this type of attack External Distance
Fraud.
Deﬁnition 2. An External Distance Fraud attack is an
attack in which an attacker provides a veriﬁer V with false
information about the distance between an honest prover P
and V .
In the second case, if P is not honest, then we distinguish
again between two cases. First, if only P is involved in the
attack, he must be the attacker, trying to change his own
distance. We call this type of attack Lone Distance Fraud.
Deﬁnition 3. A Lone Distance Fraud attack is an attack
in which a lone prover P provides a veriﬁer V with false
information about the distance between P and V .
If other parties are involved, we make a ﬁnal distinction.
If all of the other parties are dishonest or collaborating, the
attack is called an Assisted Distance Fraud attack.
Deﬁnition 4. An Assisted Distance Fraud attack is an attack
in which a prover P is assisted by one or more other parties,
none of which are honest, to provide a veriﬁer V with false
information about the distance between P and V .
Alternatively, if one of the other parties involved in the
attack is honest, we call the attack a Distance Hijacking
attack, as in Deﬁnition 1.
In constructing the above classiﬁcation, we have tried to
stay close to the historical attack types. In fact, three of our
attack types are variants of the historical types. However, we
have tried to provide them with more descriptive and less
generic names. In particular, our deﬁnition of Lone Distance
Fraud closely resembles the classical notion of Distance
117
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:52 UTC from IEEE Xplore.  Restrictions apply. 
Fraud. Our deﬁnition of External Distance Fraud resembles
that of Maﬁa Fraud, and our deﬁnition of Assisted Distance
Fraud includes Terrorist Fraud attacks.
It is worth pointing out that although P refers to a speciﬁc
identity, or rather the identity of a party holding a speciﬁc key,
this classiﬁcation is also valid in the context of anonymous
distance bounding protocols [30]. In anonymous distance
bounding, the only guarantee provided to the veriﬁer is that
someone is within a speciﬁc distance, as opposed to P is
within a speciﬁc distance. In order to ﬁt anonymous distance
bounding protocols into this model, we say that all provers
in anonymous distance bounding share the same key (which
could be public) and, in the decision points in Figure 4, “the
prover” must be replaced by “the closest prover”.
D. Multi-prover environments
The main requirement for Distance Hijacking is that there
are other parties in the environment, which can be exploited
by a dishonest prover. We call environments in which multiple
provers may occur multi-prover environments. We give two
concrete examples of such environments.
Multiple provers, single veriﬁer: One such a scenario
occurs when a veriﬁer accepts proofs from multiple provers,
as depicted in Figure 5. For example, this may occur in RFID
distance bounding where a reader may accept multiple tags. In
this case, Distance Hijacking occurs when a dishonest prover
P hijacks the distance from P (cid:2) to V and instead convinces
V that P is at this distance, thereby falsely “shortening” the
distance between P and V .
Note that
in the above example,
the veriﬁers accept
protocol sessions from multiple provers. Below we show
that this is not required for the attacks.
Multiple provers, multiple veriﬁers: Consider an envi-
ronment with multiple provers P, P (cid:2), . . . and corresponding
veriﬁers, VP , VP (cid:2) , . . ., where veriﬁer VP only accepts proofs-
of-distance from prover P and veriﬁer VP (cid:2) only from prover
P (cid:2). Even in this scenario, a prover P can hijack a session
from a prover P (cid:2) to a veriﬁer VP (cid:2) to make VP falsely believe
that P is at distance dist(P (cid:2), VP ). This type of scenario is
depicted in Figure 6. P (cid:2) assumes that he is proving his
distance to VP (cid:2), but instead, the fast response of P (cid:2)
is
accepted by VP , who assumes that it was sent by P .
Note that for the attack to work, neither P and VP
nor P and P (cid:2) need to be physically close. Instead, the
communication between P (cid:2) and VP (cid:2) can be enabled by the
attacker who created a relay between them whereas P can
communicate to P (cid:2) using a high power transceiver and a
high gain antenna. This second scenario may even occur
across domains: the only requirement is that the distance
measurement (e. g., rapid bit exchange) phases used in both
domains are to some extent compatible.
E. Analysis of Existing Distance Bounding Protocols
We have analyzed several protocols and found numerous
new attacks that fall into the class of Distance Hijacking
118
Figure 5.
Scenario in which
V accepts protocol sessions from
multiple provers, here P and P (cid:2),
where Distance Hijacking may be
a threat.
Figure 6.
Scenario with mul-
tiple prover/veriﬁer pairs, where
Vx only accepts sessions from
x. Even in this case, Distance
Hijacking may be possible.
attacks. We give an overview of the protocols analyzed
in Table I. The vast majority of the attacks we ﬁnd are
new. To the best of our knowledge, only two such attacks
were previously reported in the literature. The attack on a
simpliﬁed version of “Brands and Chaum (signature)” is
described in [25]. The attack on a member of the protocol
family proposed by Meadows et al., in particular for the
instance with F (NV , NP , P ) = (cid:4)NV , NP⊕P(cid:5), is described
in [3]. All other attacks in the table are new.
In our analysis we used the following system and attacker
model. We assume that the attacker controls the network
and may eavesdrop, intercept, inject, and block messages.
We do not pose any restrictions on the number or locations
of devices that the attacker holds; the attacker can control
several dishonest provers as well as other wireless devices.
Entities are identiﬁed by their keys; entities that hold the
same keys cannot be distinguished.
In this paper, we describe two attacks from the table
in detail. We already described the attack on the basic
Brands and Chaum protocol with signatures in Example 1.
We describe an attack on the Kuhn, Luecken, Tippenhauer
protocol in Example 4.
In general, it seems that protocols that closely follow the
original Brands and Chaum protocols do not offer protection
against Distance Hijacking. In contrast, protocols that derive
from the Hancke and Kuhn protocol, which explicitly uses
the key shared between agents in the distance bounding
phase, protect against Distance Hijacking in single-protocol
environments. However, as we explain in Section VI, all
protocols, including the ones derived from the Hancke and
Kuhn protocol, are vulnerable to Distance Hijacking in
speciﬁc multi-protocol environments.
We note that for many of the attacks in the table, it
is required that the veriﬁer V is not “disturbed” by P ’s
messages. As a concrete example, consider the attack in
Figure 2. If V would receive and parse P ’s ﬁnal signed
message, V might abort the protocol, in which case the
attack fails. There are several practical scenarios in which
the attacks are directly possible. For example, assume that
the signed message is sent through standard WiFi channels,
and P assumes that he is responding to some other veriﬁer
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:52 UTC from IEEE Xplore.  Restrictions apply. 
No.
Protocol
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
Brands and Chaum (Fiat-Shamir) [4, p. 351]
Brands and Chaum (Schnorr) [4, p. 353]
Brands and Chaum (signature) [4, p. 350]
Bussard and Bagga [5]
CRCS [23]
Hancke and Kuhn [12]
Hitomi [20]
KA2 [15]
Kuhn, Luecken, Tippenhauer [16]
MAD [29]
Meadows et al. for F (. . .) = (cid:2)NV , NP ⊕ P(cid:4) [18]
Munilla and Peinado [19]
Noise resilient MAD [27]
Poulidor [28]
Reid et al. [24]
Swiss-Knife [14]