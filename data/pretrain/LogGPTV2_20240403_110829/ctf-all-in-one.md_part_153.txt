snaplen ：数据包最大长度：4 字节，该值设置所抓获的数据包的最大长度
linktype ：链路层类型：4 字节，数据包的链路层包头决定了链路层的类型
接下来是数据包头，总共 16 个字节：
struct pcap_pkthdr {
struct timeval ts; /* time stamp */
bpf_u_int32 caplen; /* length of portion present */
bpf_u_int32 len; /* length this packet (off wire)
*/
};
struct timeval {
long tv_sec; /* seconds (XXX should b
e time_t) */
suseconds_t tv_usec; /* and microseconds */
};
ts ：时间戳：8 字节，4字节表示秒数，4字节表示微秒数
caplen ：当前数据区长度：4 字节，表示所抓获的数据包保存在 pcap 文件
中的实际长度
1502
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
len ：离线数据长度：4 字节，如果文件中保存的不是完整数据包，可能比
caplen 大
我们从 tcpdump 的测试集中找到这样一个测试用例，整个包是这样的：
$ xxd -g1 slip-bad-direction.pcap
00000000: d4 c3 b2 a1 02 00 04 00 00 00 00 00 00 00 00 00 .....
...........
00000010: 00 00 04 00 08 00 00 00 f6 b5 a5 58 f8 bd 07 00 .....
......X....
00000020: 27 00 00 00 36 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 '...6
...........
00000030: e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 e7 ca 00 .....
...........
00000040: 00 52 54 00 12 35 02 08 00 27 bd c8 2e 08 00 .RT..
5...'.....
所以其链路层类型为 08 ，即 SLIP（Serial Line Internet Protocol）。通常一个
SLIP 的包结构如下：
+-------------------------+
| Direction |
| (1 Octet) |
+-------------------------+
| Packet type |
| (1 Octet) |
+-------------------------+
| Compression information |
| (14 Octets) |
+-------------------------+
| Payload |
. .
. .
. .
direction 字段指示发送或接收
0 ：表示本机接收的包
1 ：表示本机发送的包
1503
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
在这里 direction 是 0xe7 ，并且由于 packet type 被设置了，所以 payload 是一
个压缩的 TCP/IP 包，它的 packet type 和 compression information 共同构成了压
缩的 TCP/IP 数据报，其结构如下：
+-------------------------------+ Byte
| | C | I | P | S | A | W | U | 0
+-------------------------------+
| connection number | 1
+-------------------------------+
| TCP checksum | 2-3
+-------------------------------+
| data | 3-16
. .
. .
. .
在 sliplink_print 函数处下断点：
gdb-peda$ b sliplink_print
gdb-peda$ r -e -r slip-bad-direction.pcap
Starting program: /usr/local/sbin/tcpdump.4.9.0 -e -r slip-bad-d
irection.pcap
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/i386-linux-gnu/libthread_d
b.so.1".
reading from file slip-bad-direction.pcap, link-type SLIP (SLIP)
[----------------------------------registers--------------------
---------------]
EAX: 0x1
EBX: 0xe7e7e736
ECX: 0x0
EDX: 0xbfffdb94 --> 0x1
ESI: 0xb65ba810 --> 0xe7e7e7e7
EDI: 0xbfffdb90 --> 0x0
EBP: 0x27 ("'")
ESP: 0xbfffd760 --> 0xe7e7e726
EIP: 0x815efc0 (: mov eax,DWORD PTR [esp+
0x48])
1504
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT dire
ction overflow)
[-------------------------------------code----------------------
---------------]
0x815efbc : pop ebp
0x815efbd : ret
0x815efbe : xchg ax,ax
=> 0x815efc0 : mov eax,DWORD PTR [esp+0x4
8]
0x815efc4 : mov edx,DWORD PTR [esp+0x4
8]
0x815efc8 : shr eax,0x3
0x815efcb : and edx,0x7
0x815efce : movzx eax,BYTE PTR [eax+0x20
000000]
[------------------------------------stack----------------------
---------------]
0000| 0xbfffd760 --> 0xe7e7e726
0004| 0xbfffd764 --> 0xb65ba800 --> 0xe7e7e7e7
0008| 0xbfffd768 --> 0x27 ("'")
0012| 0xbfffd76c --> 0xfbad2488
0016| 0xbfffd770 --> 0xb5803e68 --> 0x10
0020| 0xbfffd774 --> 0xb7ff0030 (: po
p edx)
0024| 0xbfffd778 --> 0xb795af4b (: add ebx
,0xbc0b5)
0028| 0xbfffd77c --> 0x80e6a200
[---------------------------------------------------------------
---------------]
Legend: code, data, rodata, value
Breakpoint 1, sl_if_print (ndo=0xbfffdb90, h=0xbfffd82c,
p=0xb65ba800 '\347' , ) at ./print-sl.c:77
77 sliplink_print(ndo, p, ip, length);
gdb-peda$ x/10x 0xb65ba800
0xb65ba800: 0xe7e7e7e7 0xe7e7e7e7 0xe7e7e7e7 0xe7e7e
7e7
0xb65ba810: 0xe7e7e7e7 0x00cae7e7 0x00545200 0x08023
512
1505
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
0xb65ba820: 0xc8bd2700 0xbe00082e
参数 p=0xb65ba800 位置处存放着从 pcap 中解析出来的 data，总共 39 个字
节。
然后语句 dir = p[SLX_DIR] 从 data 中取出第一个字节作为 dir，即 0xe7 ：
[----------------------------------registers--------------------
---------------]
EAX: 0xe7
EBX: 0xe7e7e736
ECX: 0x0
EDX: 0x0
ESI: 0xb65ba810 --> 0xe7e7e7e7
EDI: 0xbfffdb90 --> 0x0
EBP: 0x27 ("'")
ESP: 0xbfffd760 --> 0xe7e7e726
EIP: 0x815efe8 (: mov DWORD PTR [esp+0x4]
,eax)
EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT dire
ction overflow)
[-------------------------------------code----------------------
---------------]
0x815efdb : jne 0x815f3c6 
0x815efe1 : mov eax,DWORD PTR [esp+0x4
8]
0x815efe5 : movzx eax,BYTE PTR [eax]
=> 0x815efe8 : mov DWORD PTR [esp+0x4],ea
x
0x815efec : lea eax,[edi+0x74]
0x815efef : mov ecx,eax
0x815eff1 : mov DWORD PTR [esp+0x8],ea
x
0x815eff5 : shr eax,0x3
[------------------------------------stack----------------------
---------------]
0000| 0xbfffd760 --> 0xe7e7e726
0004| 0xbfffd764 --> 0xb65ba800 --> 0xe7e7e7e7
0008| 0xbfffd768 --> 0x27 ("'")
1506
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
0012| 0xbfffd76c --> 0xfbad2488
0016| 0xbfffd770 --> 0xb5803e68 --> 0x10
0020| 0xbfffd774 --> 0xb7ff0030 (: po
p edx)
0024| 0xbfffd778 --> 0xb795af4b (: add ebx
,0xbc0b5)
0028| 0xbfffd77c --> 0x80e6a200
[---------------------------------------------------------------
---------------]
Legend: code, data, rodata, value
0x0815efe8 133 dir = p[SLX_DIR];
然后程序将 dir==0xe7 与 SLIPDIR_IN==0 作比较，肯定不相等，于是错误地
把 dir 当成 SLIPDIR_OUT==1 处理了：
[----------------------------------registers--------------------
---------------]
EAX: 0x8237280 --> 0x204f ('O ')
EBX: 0xe7e7e736
ECX: 0xe7
EDX: 0x8237280 --> 0x204f ('O ')
ESI: 0xb65ba810 --> 0xe7e7e7e7
EDI: 0xbfffdb90 --> 0x0
EBP: 0x27 ("'")
ESP: 0xbfffd750 --> 0xbfffdb90 --> 0x0
EIP: 0x815f02b (: call DWORD PTR [edi+0x74
])
EFLAGS: 0x292 (carry parity ADJUST zero SIGN trap INTERRUPT dire
ction overflow)
[-------------------------------------code----------------------
---------------]
0x815f026 : sub esp,0x8
0x815f029 : push eax
0x815f02a : push edi
=> 0x815f02b : call DWORD PTR [edi+0x74]
0x815f02e : lea edx,[edi+0x10]
0x815f031 : add esp,0x10
0x815f034 : mov eax,edx
0x815f036 : shr eax,0x3
1507
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
Guessed arguments:
arg[0]: 0xbfffdb90 --> 0x0
arg[1]: 0x8237280 --> 0x204f ('O ')
[------------------------------------stack----------------------
---------------]
0000| 0xbfffd750 --> 0xbfffdb90 --> 0x0
0004| 0xbfffd754 --> 0x8237280 --> 0x204f ('O ')
0008| 0xbfffd758 --> 0x0
0012| 0xbfffd75c --> 0x0
0016| 0xbfffd760 --> 0xe7e7e726
0020| 0xbfffd764 --> 0xe7
0024| 0xbfffd768 --> 0xbfffdc04 --> 0x8060b00 (:
mov eax,0x8330fa4)
0028| 0xbfffd76c --> 0xfbad2488
[---------------------------------------------------------------
---------------]
Legend: code, data, rodata, value
0x0815f02b 134 ND_PRINT((ndo, dir == SLIPDIR_IN ? "I "
: "O "));
继续往下执行，终于在执行到语句 lastlen[dir][lastconn] = length -
(hlen  0x8060b00 (: mov eax,0x833
0fa4)
EDX: 0xe7
ESI: 0xb65ba810 --> 0xe7e7e7e7
EDI: 0xbfffdb90 --> 0x0
EBP: 0x27 ("'")
ESP: 0xbfffd760 --> 0xe7e7e726
EIP: 0x815f697 (: mov DWORD PTR [eax*4+0
x83ebcc0],ebx)
EFLAGS: 0x10206 (carry PARITY adjust zero sign trap INTERRUPT di
rection overflow)
1508
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
[-------------------------------------code----------------------
---------------]
0x815f68e : mov ebx,DWORD PTR [esp+0x
14]
0x815f692 : shl eax,0x8
0x815f695 : add eax,edx
=> 0x815f697 : mov DWORD PTR [eax*4+0x83
ebcc0],ebx
0x815f69e : mov eax,ecx
0x815f6a0 : shr eax,0x3
0x815f6a3 : movzx edx,BYTE PTR [eax+0x2
0000000]
0x815f6aa : mov eax,ecx
[------------------------------------stack----------------------
---------------]
0000| 0xbfffd760 --> 0xe7e7e726
0004| 0xbfffd764 --> 0xe7
0008| 0xbfffd768 --> 0xbfffdc04 --> 0x8060b00 (:
mov eax,0x8330fa4)
0012| 0xbfffd76c --> 0xb65ba801 --> 0xe7e7e7e7
0016| 0xbfffd770 --> 0xb65ba809 --> 0xe7e7e7e7
0020| 0xbfffd774 --> 0xe7e7e6de
0024| 0xbfffd778 --> 0xb795af00 (: push ebx
)
0028| 0xbfffd77c --> 0x80e6a200
[---------------------------------------------------------------
---------------]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x0815f697 in compressed_sl_print (dir=0xe7, length=0xe7e7e726,
ip=0xb65ba810,
chdr=0xb65ba801 '\347' , , ndo=0xbfffdb90)
at ./print-sl.c:253
253 lastlen[dir][lastconn] = length - (hlen << 2);
gdb-peda$ x/x $eax*4+0x83ebcc0
0x8425c5c: Cannot access memory at address 0x8425c5c
1509
7.1.1 CVE-2017-11543 tcpdump sliplink_print 栈溢出漏洞
说一下 compressed_sl_print 的参数：
dir=0xe7 是 direction
length=0xe7e7e726 是长度，由包头的 len 计算得到
ip=0xb65ba810 指向 data
chdr=0xb65ba801 指向压缩的 TCP/IP 头