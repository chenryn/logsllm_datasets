**Linked USDL: A Vocabulary for Web-Scale Service Trading**

**Authors:**
- Carlos Pedrinaci¹
- Jorge Cardoso²,³
- Torsten Leidig⁴

¹ Knowledge Media Institute, The Open University, Milton Keynes, United Kingdom
² CISUC/Dept. of Informatics Engineering, University of Coimbra, Coimbra, Portugal
³ Technical University of Dresden, Dresden, Germany
⁴ SAP Research Karlsruhe, Germany

**Abstract:**
Real-world services, ranging from cloud solutions to consulting, currently dominate economic activity. Despite the increasing number of online service marketplaces, web-based service trading remains highly restricted. Services are often traded within closed silos that offer limited manual search and comparison capabilities through a web storefront. This makes it difficult to automate the customization, bundling, and trading of services, which would foster a more efficient and effective service sector. In this paper, we present Linked USDL, a comprehensive vocabulary for capturing and sharing rich service descriptions. This vocabulary aims to support the trading of services over the web in an open, scalable, and highly automated manner. It leverages Linked Data to efficiently support communication over the web, promote and simplify adoption by reusing vocabularies and datasets, and enable the opportunistic engagement of multiple cross-domain providers.

**Keywords:** #eswc2014, Pedrinaci, Services, Vocabulary, Linked Data, USDL, eCommerce

**1. Introduction**
The importance of real-world services, such as business activities of an intangible nature (e.g., life insurance, consulting), has grown significantly over the past 50 years, dominating economic activity [1]. Due to their intangible nature, services can be bundled, adapted, and traded in an automated manner. To exploit the web as a service trading platform, various service marketplaces have emerged, ranging from purely technical registries like UDDI [2] to business-oriented marketplaces such as Google Helpouts. Technical registries focus primarily on the computer science aspects of services, which is limiting as it ignores fundamental characteristics including economic, social, and business contexts [3]. Business-oriented marketplaces, on the other hand, provide silos with limited search and comparison capabilities through a human-oriented storefront [4]. As a result, common and essential economic activities in the service sector, such as generating customized offerings, creating and trading cross-domain and multi-provider service bundles, or simply communicating between customers and providers, remain largely manual [4].

Supporting the trading of services over the web in an open, scalable, and automated manner, enabling the opportunistic engagement of multiple cross-domain providers, requires a shared means for capturing and reasoning upon the economic, social, and technical aspects governing service exchanges [1, 3, 4]. The Unified Service Description Language (USDL) is the most comprehensive attempt in this direction but has received limited adoption due to its complexity and limitations in extensibility and automation. In this paper, we present Linked USDL, a new vocabulary that builds upon the results and experience gained with USDL, combined with prior research on Semantic Web Services, business ontologies, and Linked Data, to better support web-scale automated service trading. We describe the methodology and main decisions adopted for transforming the complex USDL specification into a network of vocabularies anchored on simplicity and reuse. The resulting vocabulary is thoroughly evaluated in terms of domain coverage, suitability for purpose, and current level of adoption.

**2. Related Work**
Service Science aims to enhance our understanding of services, service networks, value co-creation, and service innovation [1]. These efforts, spanning several disciplines, aim to establish solid foundations for designing, creating, and analyzing service systems with both business and societal purposes in mind. Relevant work in Computer Science includes service-oriented systems, which develop complex applications by integrating networked software components called web services [2]. This area has been prolific in terms of tooling and specifications, including approaches for describing technical services semantically, such as OWL-S, SAWSDL, and WSMO [5, 6]. Although (semantic) web services provide advanced support for discovering or composing technical services, they disregard the fundamental socio-economic context of real-world services (e.g., value chains and offerings) and do not cover widespread manual services (e.g., consulting) [3]. Complementary work on Workflow and Business Process Management has focused on operationalizing processes within enterprises [2, 3, 5], which has more recently incorporated human activities [7]. However, this work is centered on a procedural view of how activities are carried out within an organization, which is orthogonal to the business characteristics of the services offered (e.g., speed of internet connection), which are essential for service trading.

The most notable effort able to represent and reason about business models, services, and value networks is the e3 family of ontologies, which includes the e3service and e3value ontologies [3, 8]. This research, however, has not been much concerned with the computational and operational perspectives, such as the actual interaction with services. Similarly, the technical issues related to enabling a web-scale deployment and adoption of these solutions were not core to this work. GoodRelations [9] (GR) is a popular vocabulary for describing products and offerings semantically. Although GR originally aimed to support both services and products, it is mostly centered on products, leaving aside the coverage of modes of interaction and support for value chains.

USDL [4, 10] is, to date, the most comprehensive approach to supporting the description of services for automated processing. USDL consists of nine modules modeled in eCore, capturing services, interaction interfaces, pricing models, service level agreements, and related legal issues. Despite its comprehensive support, this effort underestimated the need for such an all-encompassing model to be widely open, highly flexible, and extensible, yet simple in nature [11]. On one hand, the centralized and controlled nature of the approach led to an overly complex model that was hard to grasp and apply. On the other hand, eCore exhibited technical limitations towards its extensibility and use as a lingua franca on the web, where Linked Data and light semantics are considered more appropriate technologies.

**3. Requirements Analysis**
Based on research on services, including the related work covered earlier, we have identified several requirements that Linked USDL and any other language or vocabulary with similar ambitions should address. This includes coverage requirements, which we will cover first. We also present additional criteria identified during the standardization activities of USDL as potential issues and limitations for its web-scale adoption [11].

**3.1 Description Requirements**
One of the essential difficulties when dealing with services beyond mere technical interfaces is that they intersect many diverse disciplines, ranging from technical aspects to operational, socio-economic, and even legal issues. Being able to move across each of these domains is essential to support the trading of services online. We detail the main dimensions next.

- **Functionality**: Services are business activities that typically take place through (possibly technology-mediated) interactions between stakeholders, resulting in benefits to the actors involved. Fundamental to the notion of service is its functionality in terms of what it does, requires, and provides. Given the highly diverse nature of services, this should cover the entire spectrum from fully automated provisioning (e.g., Spotify) to those that are essentially manual (e.g., car repair service). Depending on the stakeholder, the level of abstraction could vary from a detailed operational view (provider) to a high-level one for customers.
- **Agents and Networks**: Service delivery involves several stakeholders in (possibly ephemeral) ad-hoc business networks, e.g., banks often partner with insurance companies to provide accounts with integrated travel insurance. The modeling of services should seamlessly support the emergence and analysis of such networks to enable the dynamic co-creation of value through web-wide service trading. Important aspects to cover include the agents involved in a certain network and the roles they play.
- **Service Relationships**: Thanks to their intangible nature, services can be combined, repurposed, and adapted to better meet customer needs. Services are often related to other services and products. For instance, services can be enhanced with others, or there can be variations over established types. Services are often bundled, i.e., aggregated and offered jointly in packages like broadband and TV services. In the case of automated services, services may be composed according to specific data and control flow to achieve a complex objective from simpler components.
- **Operational and Delivery**: The delivery of services is often subject to restrictions or conditions, ranging from geographical concerns (e.g., the insured individual must live in the UK), temporal availability, legal issues, variable pricing, and so on. From a service provider's operational perspective, there may be limitations due to the resources required, such as staffing, which need to be tracked as they determine the costs and capacity for providing a service.
- **Consumption**: Services are most often accessed or "consumed" through interactions via designated communication channels. For example, making an insurance claim may require the customer to phone the insurance company or fill out a form online. These communication channels may vary during the service delivery process (e.g., initially claim by phone and check progress online), and there may be restrictions on how interactions should take place. For instance, a car repair service may require you to bring the car to the garage, whereas in other cases, the service may send a mechanic within some geographical boundaries.

**3.2 Language Requirements**
In addition to the aforementioned coverage requirements, research in the area has highlighted further requirements that the language should meet. First and foremost, given the complexity of the domain and the aim to maximize the level of automation that can be achieved during the lifecycle of services, the modeling of services needs to rely on a conceptual model with formal foundations that can enable automated processing [3, 10]. Nonetheless, the language should be modular and extensible to accommodate different domains and the many facets of services while minimizing complexity for users and tool developers.

Our subsequent work on standardization highlighted that although necessary, these requirements did not appear to be sufficient for web-scale adoption:

- **An Open Solution**: To support the engagement of any business entity across any domain, the technological approach should be open. It should be open to allow anyone to engage and trade services online, as well as towards its evolution to cater to new requirements, accommodate new ways of doing business, or support new domains.
- **A Web-Based Solution**: A scenario like the one envisaged requires an approach that can support the engagement of millions of service providers and consumers in exposing, locating, interpreting, and contracting services. This necessarily calls for highly interoperable and scalable solutions in terms of data sharing, data processing, and communication protocols.
- **Promoting Take Up**: While providing an open solution is likely to have a positive impact on technology take-up, adoption will largely be determined by the simplicity with which any business entity could adopt a solution based on these technologies and the compatibility with existing legacy systems.

**4. Linked USDL Vocabulary**
Driven by the aforementioned requirements and informed by the drawbacks exhibited by USDL, we worked on Linked USDL, focusing essentially on reducing the complexity underlying USDL and fostering its wider adoption through the use of web-centric technologies that are more amenable to extension, modification, and automation at a large scale.

**4.1 Design Decisions**
First, due to the success, scale, growth, and current adoption of the web for worldwide telecommunications and electronic commerce, we believe that any technology hoping to enable service trading online should necessarily embrace and build upon web principles and technologies [12]. Notably, Linked USDL should also embrace principles such as:
- **Global Identifiers**: Using URIs to identify services and providers.
- **Links to Other Resources**: Enriching a particular datum with reusable and externally provided information, e.g., pointing to complementary services.
- **HTTP Protocol**: Using HTTP as a simple, uniform protocol for supporting interactions.
- **Decoupling Resources and Representations**: Allowing resources to be decoupled from their representations.

By doing so, we bring a technology stack that has proven to support large-scale, efficient, multi-party interactions and directly provides an integration point with open, standard technologies that are already widely used and supported.

Second, to enable effective interactions at the business level, we need to provide standards that go beyond data transportation and syntactic representation [1]. To this end, Linked USDL embraces the use of formal ontology representation languages to capture the semantics of services, making them amenable to automated processing.