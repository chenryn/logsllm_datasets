gummo:x:12504 : 3000:Gusmo Marx:/home/gummo:/usr/1oca1/bin/ksh93
groucho:x:12503:2000:Groucho Harx: /home/groucho: /bin/sh
注意，输出结果变短了：有三个用户都为组1000，但只有一个输出。我们会在4.2节中
说明其他选出唯一记录的方式。
4.1.3文本块排序
有时，你会需要将多行记录组合而成的数据排序。地址清单就是一个很好的例子，为了
方便阅读，地址记录经常会切断，以一个或数个空行将彼此隔开。像这种数据，没有一
定的排序键值位置可供-k选项使用，所以你得自教，提供一些额外标记（markup）给
这些数据，这里是一个简单范例：
S cat my-friends
显示地址数据文件
 SORTKEY: Schlo&, Hans Jurgen
www.TopSage.com
---
## Page 99
文本处理工具
87
Hans Jirgen Schlo5
Unter den Linden 78
Germany
D-10117 Berlin
SORTKEY: Jones, Adrian
371 Montgomery Park Road
Adr1an Jones
Hen1ey-on=Thames RG9 4AJ
 SORTKEY: Brown, Kim
1841 S Main Street
Kim Brown
Westchester, NY 10502
USA
这里的排序小技巧，就是利用awk处理较一般性的记录分隔字符的能力，识别段落间隔，
在每个地址内暂时使用一个未使用过的字符（例如使用一个无法打印的控制字符），取
代分行，以及用换行字符取代段落间隔。8ort看到的行就会变成这样：
# sORTKEY: SchloB, Hans JUxgen^ZMans Jurgen Schlo&~zOnter den Linden 78^Z...
 SORTKEY: Jones, Adrian^ZAdrian Jones^2371 Montgomery Park Road^2...
 SORTKEY: Browm, Kim*ZKim Brown^Z1841 S Main Street~Z.. *
在这里，^z是一个Ctrl-Z字符，第一个过滤步骤是通过sort排序后恢复换行与段落的
分隔符号，且排序键值行是容易删除的，如有需要，可使用grep轻松地删除它们。整
个管道看起来就像这样：
cat my-friends 1
在地址数据文件里的管道
awk -v RS=**'[ gsub("\n*, *^g*): print )′ 1
排序地址数据，怎略大小写
转换地址为单个行
sort -f 1
aak -v ORS=*\n\n**( gsub(*
Hans Jorgen
Sch1o8
Unter den Linden
78
D-10117
Germany
Berlin
有了这种较为华丽的数据处理过滤程序，你可以先以国家与邮政编码排序好邮件，让邮
局在处理时更为顺畅，不过我们前面提到的小标记与简单管道处理方式，多半就足以完
成此工作了。
4.1.4sort的效率
排序数据的操作，很明显地就是比较所有成对的项目，看哪个在先哪个在后，因此得到
为人所熟知的算法，如冒泡排序（bubble sort）与插入排序（insertion sort）。这些讲求
快速排序（quick-and-dirty）的算法，在处理少量数据时很好用，不过当面临大量的数
据需要处理时速度就不够快了，因为如果需要排序条记录，它们会让数据增加到几乎
是n”（平方）那么大。这和我们在本书里所讨论的大部分过滤器完全不同：后者是读取
一条记录，处理它并输出它，所以它们的执行时间完金与记录的数量n成比例。
www.TopSage.com
---
## Page 101
文本处理工具
89
幸运的是，计算领城中的很多人在关心排序的问题，有一些不错的排序算法，例如从复
杂度来看，有n次方（Shellsort）、nlogn（heapsort，mergesort及quicksort）。.从针
对受限制的数据种类来看，有n的分布排序（distribution sort）。UNIX的sort命令卖
现，已有许多人在进行研究并优化调整：你可以相信它的工作效率，它一定可以比你自
已做得好，而且几乎不必学习一堆的排序算法。
4.1.5sort的稳定性
在排序算法里有个重要的问题：是否稳定（stable）？这个问题指的是：相同的记录输人
顺序是否在输出时也可保持原状？当你以多键值为记录进行排序，或是以管道处理时，
排序稳定性就非常重要了。POSIX不需要这个所调的sOrt的稳定性，绝大多数的实现
也不需要，来看看下面这个范例：
$ sort -t_ -k1,1 -k2,2  one_tvo_three
> one_two
>
one_tvo_four
> one_tvo_five
> BOF
one_two
one_two_five
one_two_four
one_two_three
每条记录内的排序字段都相同，但输出却与输人不一致，所以我们说sort并不稳定，
幸好：GNU实现了coreutils包（注1）弥补不足，它可以通过--stable选项补教此
问题：设置此选项，上例的输出便可与输入一致了，
4.1.6sort小结
sort绝对排得进UNIX重要命令前十名：把它学好一定没错，因为你会经常用到。本
章一开始，就详细介绍过sort了，不过你可以参考计算机里的sorr（1）手册页（manual
page），来了解更多用法，sort当然经过POSIX的标准化，所以几平在所有机器上都
能使用。
4.2删除重复
有时，将数据流里连续重复的记录到除是有必要的，我们在4.1.2节里介绍过sort-u
的用法，不过我们也知道，它的消除操作是依据匹配的键值，而非匹配的记录。unig
证 1:
可到ftp://ftp.gnu.org/gnw/corewrils/ 下 载
www.TopSage.com
---
## Page 102
90
第4章
命令提供另一种过滤数据的方式：它常用于管道中，用来删除已使用sort排序完成的
重复记录：
sort ... I unig I ...
uniq有3个好用选项：-c可在每个输出行之前加上该行重复的次数，这部分我们在第
5章例5-5的单词出现频率过滤器里会用到：-d选项则用于仅显示重复的行：而-u仅
显示未重复的行。下面是一些范例说明：
S cat latin-number8
显示测试文件
tres
unus
duo
tres
duo
tres
S sort latin-numbers 1 unig
显示唯一的、排序后的记录，重复则仅取唯一行
duo
tres
unus
S sort latin-numbers 1 unig -0
计数唯一的、排序后的记录
3 tres
2 duo
1 unus
S sort latin-numbers 1 unig -d
仅显示重复的记录
tres
duo
$ sort latis-sumbere 1 unig u
仅显示米重复的记录
unus
uniq有时会拿来与diff工具搭配应用，在找出两个相似数据流的异同的时候很方便，
例如字典单词列表、在映射目录树内的路径、电话薄等等。在大部分的实现中有很多其
他的选项可供使用，你可以在uniq（1）手册页里找到相关描述，不过它们很少使用。而
uniq就像sort一样，已被POSIx标准化，所以在哪儿都能使用。
4.3重新格式化段落
大部分功能强大的文本编辑器都提供重新格式化段落的命令，供用户切分段落，使文本
行数不要超出我们看得到的屏幕范围；我们写这本书时就用了许多类似命令。有时你在
Shel1脚本内处理数据流时需要完成重新格式化：或者在一个缺乏重新格式化命令但提供
了Shell转义的编辑器内完成它。在不提供此功能的情况下，你可以使用fmt命令。虽
然POSIX未提及fmt，不过你还是可以在许多现行的UNIX系统下找到它：如果你的旧
系统里没有fmt，只要安装GNU的coreutils包即可。
www.TopSage.com
---
## Page 103
文本处理工具
97
虽然一些fmt的实现有较多的选项可用，但其实我们发现只有两种较常用到：仅切O1m1
割较长的行，但不会将短行结合成较长的行，面-wn则设置输出行宽度为n个字符（默
认通常约75个左右）。这里的几个例子是一字一行的拼音字典：
Sed-a-e9991,10010p/umr/dlct/words1fmt重新格式化20个字典单词
Graff graft graham grail grain grainy grammar granmarian grammatic
granary grand grandchild grandchildren granddaughter grandeur grandfather
grandiloquent grandiose grandma grandnother
$sed--e9995,10004p/u8r/dLet/worde1fmt-30重新将10个单词格式化为短的行
grammarian grammatic
grain grainy gramnar
granary grand grandchi1d
grandchi1dren granddaughter
如果你的系统里没有/usr/dict/wordsr，那么有可能文件是在/usr/share/dict/
words 或/usr/share/1ib/dict/words。
仅作切割的选项：-5，在你想将长的行绕回，短的行保持不动时很好用，这么做也能使
结果与原始版本间的差异达到最小：
>one tvo three four five
S fnt -s -w 10 seven
> six
> elght
one two
three
four five
81x
seven
eight.
警告：你可能觉得，使用fmt-0就能将输入数据流切为一字一行：或者你想用较长的宽度，
将所有的字符串在一起，并删除分行。遗憾的是，fmt的每个版本，都有不同的行为：
旧版的fmt不提供-w选项：它们使用-n指定宽度为n个字符宽。
所有版本都禁止将宽度设为零，不过接受-w1或-1的用法。
所有版本都保留开头的空自。
有些版本会保留类似邮件标题的行。
有些版本会保留开头为一个点号的行（txoff排字命令）。
宽度限制各有不同.我们发现的就有好几种：Solaris的上限是1021、HP/UX11的是
2048、AIX与IRIX的是4093、OSF/1 4.0的是8189、OSF/15.1的是12285，还有
FreeBSD、GNU/Linux与Mac OS（最大的32位带符号的整数）的是2147483647。
www.TopSage.com
---
## Page 104
92
第4章
，
NetBSD与OpenBSD的fmt版本有不间的命令行语法，看起来应是分配一个级冲区
以保留输出行，因为它们会针对大的宽度值给出outof memory这祥的信息。
IRIX的fmt位于/usr/sbin，此目录不太可能出现在你的查找路径里。
·HP/UX在11.0之前的版本没有fmt
由于这些fmt版本各有不同的特性，使得它很难用于对可移植性要求很高的脚本中或是复
杂的重新格式化工作中。
4.4
计算行数、字数以及字符数
我们已使用过字数计算工具wc好几次了。它可能是UNIX工具集里最古老也最简单的
工具程序，同时POSIX也已将它标准化，wc的默认输出是一行报告，包括行数、字数
以及字节数：
$ ecbo This is a test of tbe energency broadcaet eystem 1 wc
计数报告
49