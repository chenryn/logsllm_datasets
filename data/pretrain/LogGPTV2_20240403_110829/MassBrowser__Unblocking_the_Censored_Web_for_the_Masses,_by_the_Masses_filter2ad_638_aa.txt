title:MassBrowser: Unblocking the Censored Web for the Masses, by the Masses
author:Milad Nasr and
Hadi Zolfaghari and
Amir Houmansadr and
Amirhossein Ghafari
Unblocking the Censored Web for the Masses,
MassBrowser:
by the Masses
Milad Nasr, Hadi Zolfaghar, Amir Houmansadr, and Amirhossein Ghafari
College of Information and Computer Sciences
University of Massachusetts Amherst
{milad, hadi, amir, ghafari}@cs.umass.edu
Webpage: https://massbrowser.cs.umass.edu
Abstract—Existing  censorship  circumvention  systems  fail  to 
offer  reliable  circumvention  without  sacriﬁcing  their  users’  QoS 
and  privacy,  or  undertaking  high  costs  of  operation.  We  have 
designed  and  implemented  a  censorship  circumvention  system, 
MassBrowser, whose goal is to offer effective censorship circumven-
tion to a large mass of censored users, with a high quality of service 
(QoS),  low  cost  of  operation,  and  adjustable  privacy  protection. 
Towards this,  we  have  made  several  key  decisions  in  designing 
our  system.  First,  we  argue  that  circumvention  systems  should 
not  bundle  strong  privacy  protections  (like  anonymity)  with 
censorship  circumvention.  Additional  privacy  properties  should 
be  offered  to  the  users  of  circumvention  systems  as  optional 
features  which  can  be  enabled  by  speciﬁc  users  or  on  speciﬁc 
connections (perhaps by trading off some QoS). Second, we have 
engineered  MassBrowser  by  combining  various  state-of-the-art 
circumvention  techniques  to  ensure  strong  censorship  resilience 
at  a  very  low  cost  of  operation  (i.e.,  $0.0001  per  censored  client 
per  month  when  deployed  at  a  large  scale).  In  particular,  Mass-
Browser aims at increasing the collateral damage of censorship by 
employing a “mass” of normal Internet users, from both censored 
and non-censored areas, to serve as circumvention proxies. Also, 
MassBrowser  uses  various  techniques,  like  CDNBrowsing,  to 
optimize  the  loads  on  circumvention  proxies.
We  have  built  and  deployed  MassBrowser  as  a  fully  opera-
tional  system  with  end-user  GUI  software  for  major  operating 
systems.  Our  system  has  been  in  the  beta  release  mode  for 
over a year with hundreds of invited users from major censored 
countries  testing  it  on  a  daily  basis.
I. 
INTRODUCTION
The  Internet  plays  a  crucial  role  in  today’s  social  and 
political  movements  by  facilitating  the  free  circulation  of 
speech,  information,  and  ideas;  democracy  and  human  rights 
throughout  the  world  critically  depend  on  preserving  and 
bolstering  the  Internet’s  openness.  Consequently,  repressive 
regimes,  totalitarian  governments,  and  corrupt  corporations 
regulate, monitor, and restrict the access to the Internet, which 
is broadly known as Internet censorship. The techniques com-
monly used to enforce censorship include IP address blocking, 
DNS  hijacking,  and  TCP  content  ﬁltering  [41],  [25],  [39],
Network  and  Distributed  Systems  Security  (NDSS)  Symposium  2020
23-26  February  2020,  San  Diego,  CA,  USA
ISBN  1-891562-61-4
https://dx.doi.org/10.14722/ndss.2020.24340
www.ndss-symposium.org
[65] to block access to certain destinations or to prevent
certain forms of content from being transmitted. To ensure
compliance and to detect undercover political/social activists,
repressive regimes additionally utilize advanced networking
tools, including deep packet inspection (DPI), to prevent the
use of the censorship circumvention technologies by their
citizens [81], [16], [36], [37].
To restore the openness of the Internet, researchers have
designed and deployed an arsenal of tools [25], [66], [14], [42],
[47], [78], [33], [77], [8], [84], [32], [53] to help users bypass
censorship. Such tools, known as circumvention systems, de-
ploy a variety of techniques ranging from IP indirection to
onion routing to trafﬁc obfuscation [39], [65].
Key shortcomings of existing systems: Unfortunately, ex-
isting circumvention systems fail to offer reliable, low-cost
circumvention without sacriﬁcing their users’ QoS or privacy.
Speciﬁcally, existing systems suffer from one or all of the
following weaknesses: (1) Easily blocked: A majority of
in-the-wild circumvention systems,
including Tor, Lantern,
Psiphon, and VPNs, work by setting up proxy servers outside
the censorship regions, which relay trafﬁc for censored users.
Unfortunately, the proxies are implemented in a way that are
easily blockable by the censors, e.g., due to using a small set
of IP addresses that can get enumerated and blacklisted by the
censors [81], [61], [79], [16]. (2) Costly to operate: To resist
proxy blocking by the censors, recent circumvention systems
have started to deploy proxies on shared-IP platforms such as
CDNs [45], App Engines [26], and Cloud Storage services [7],
a technique broadly referred to as domain fronting [20]. This
mechanism, however, is prohibitively expensive [46] to be
used at large scale. (3) Poor QoS: Proxy-based circumvention
systems like Tor and its variants [33], [44], [70] are infamous
for their low quality of service (e.g., very high latencies
and low bandwidths). This is primarily due to the imbalance
between the bandwidth demand from censored users versus the
bandwidth provided by the proxies (e.g., Tor’s ≈ 6500 relays
need to proxy trafﬁc for around two million daily users [64],
while some users leverage Tor for bandwidth-extensive ap-
plications like BitTorrent. (4) Lack of user-adjustable pri-
vacy: Existing circumvention systems do not give users much
control on their privacy protection while using such systems.
On one hand, some circumvention systems like Tor bundle
strong privacy protections like anonymity with circumvention,
causing huge degradations to QoS and therefore scaring away
typical Internet users. On the other hand, VPNs and one-hop
proxy-based systems provide weak privacy protections to their
users regardless of speciﬁc privacy needs of different users.
(5) Hard to deploy: Modern circumvention systems proposed
in academia are impractical to be used at large scale due to
various reasons. For instance, decoy routing systems [32], [84],
[38] require wide adoption by Internet ISPs, and tunneling
systems [33], [35], [44], [70] can be disabled by third-party
service providers they use for tunneling.
Our contributions:
In this paper, we present the Mass-
Browser circumvention system, which aims at addressing the
discussed shortcomings of existing circumvention solutions.
Towards this goal, we base our design on the separation of
properties (SoP) principle:
the key feature targeted by an
effective circumvention system should be blocking resistance,
and other features such as anonymity and browsing privacy
should be provided as optional features to the users. We argue
for the SoP principle based on the real-world observation [10],
[11], [71], [72], [21] that the majority of censored users are
solely interested in blocking resistance, e.g., to be able to
access blocked news articles and be able to communicate
through blocked social networks, but for the majority of the
censored users properties like anonymity are not a concern.
This is evident by the fact
that “public” VPNs, “public”
HTTP proxies, and centralized circumvention systems like
Lantern [40] and Psiphon [58] are the most popular among
censored users in China and Iran [71], [72] (when compared
to privacy-preserving alternatives like Tor) despite the fact
that they provide no anonymity or browsing privacy [11].
MassBrowser users can enable stronger privacy protections for
speciﬁc (e.g., more sensitive) connections by compromising on
the QoS of those speciﬁc connections.
The SoP principle enables us to optimize the performance
of MassBrowser around blocking resistance, and to offer
features like anonymity and browsing privacy as options to
the users. We will demonstrate how basing our design on the
SoP enables us to overcome the circumvention shortcomings
discussed above. Note that, unlike VPNs and one-hop proxy
circumvention systems, MassBrowser does not neglect privacy
protection. Instead,
it hands the control over the privacy-
usability tradeoff to the users.
In addition to separating circumvention from add-on pri-
vacy protections, we make several decisions on the technical
approach of MassBrowser to optimize its resilience, QoS, and
cost of operation. First, MassBrowser leverages censored users
in various regions to help each other bypass censorship by im-
plementing client-to-client proxying. This is motivated by our
measurements showing that users in various censored regions
are subject to different censorship regulations. Second, Mass-
Browser uses volunteer Internet users living in non-censored
areas to proxy trafﬁc for censored users. Third, we have
implemented advanced TCP/UDP NAT traversal mechanisms
into MassBrowser, allowing censored clients to connect to
other clients and volunteer proxies behind NAT. This provides
strong censorship resilience due to the high collateral dam-
age of blocking NATed Internet users. Finally, MassBrowser
combines several techniques including CacheBrowsing [30],
selective proxying, and Domain Fronting [20] to optimize
the QoS of circumvention connections while minimizing its
operational costs. As shown in Section VI-C, we estimate
the total cost of deploying MassBrowser to be no more than
$0.0001 per active client per month once deployed at large
scale.
Deployment: MassBrowser has been under active develop-
ment and testing for over two years. We have implemented
cross-platform (Mac, Windows, and Linux) end-user GUI
software for novice clients and volunteers. Our client and
volunteer software is written in NodeJS in approximately 50K
lines of code. We have also implemented a browser bundle
which contains a customized Firefox browser pre-conﬁgured
to work out of the box.
MassBrowser’s backend services, which we refer to as the
Operator, is written in Python (approximately 10K lines of
code). The Operator runs a range of services essential to the
reliable operation of MassBrowser, from strategic pairing of
clients and proxies, to monitoring the reachability and health
of various parts of the system, to measuring the performance
of MassBrowser in censored countries.
Our system is currently in the beta release mode, and we
have been continuously testing and improving its performance
based on feedback from hundreds of invited volunteer clients
from various censored countries, including China, Turkey, and
Iran. Joining our system is currently invitation-based only, and
we expect to open the project to the public soon (pending a
security code audit by a third-party organization, Subgraph1).
Our software as well as the source code can be obtained from
https://massbrowser.cs.umass.edu.
Paper’s Organization: The rest of this paper is organized
as follows. We start by overviewing existing circumvention
solutions and their weaknesses in Section II. In Section III,
we introduce the core ideas used in the design MassBrowser,
and discuss how these ideas help MassBrowser overcome the
challenges of prior circumvention systems. We discuss the
technical decisions we made in designing MassBrowser in Sec-
tion IV, and present MassBrowser’s implementation details in
Section V. Finally, we provide various performance evaluations
in Section VI and discuss MassBrowser’s privacy guarantees
in Section VII. The paper is concluded in Section VIII.
II. BACKGROUND ON CIRCUMVENTION SYSTEMS
Internet censorship is undoubtedly the biggest threat to
the freedom of speech,
ideas, and information across the
globe [23]. To help censored users regain open access to
the Internet, researchers and practitioners have designed and
deployed an arsenal of tools known as circumvention systems
[25], [66], [14], [42], [47], [78], [33], [77], [8], [84], [32], [53],
[25], [39], [65]. Censorship authorities utilize their censorship
technology to prevent the use of such censorship circumvention
technologies by their citizens [81], [16], [36], [37], i.e., they
block circumvention systems. In the following, we overview
the major classes of circumvention systems and their weak-
nesses.
Proxy-based Systems The most common approach used
by circumvention systems is to run network proxies outside
the censorship region, and use them to relay the trafﬁc of
1https://subgraph.com/about-us/index.en.html
2
censored users to censored Internet destinations. Many in-the-
wild circumvention systems such as Tor [15], Psiphon [58],
Lantern [40], and VPN services [56], [52] deploy circumven-
tion proxies in different ways to help censored users. Most
circumvention systems [58], [67], [52], [40] use simple, single-
hop proxies, while others [15], [57] use more complex models
for proxy deployment. Tor, in particular, has implemented var-
ious pluggable transports [57], [53] to further hinder blocking
by obfuscating the characteristics of Tor trafﬁc.
Domain Fronting Domain fronting [20] is a blocking-
resistant approach for setting up circumvention proxies. In
this approach, the circumvention proxy is hosted on shared-
IP infrastructures such as content delivery networks (CDNs),
App Engines, and Cloud Computing services. Therefore the
domain-fronted proxy will share its IP address with other,
oblivious services making any censorship attempt susceptible
to collateral damage. For instance, blocking a domain-fronted
proxy hosted on a CDN requires the censors to block all the
web content served by that CDN. CloudTransport [7] is an
older variation of domain fronting, in which proxies are run
over shared cloud storage services. Recently, several major
content providers, including CloudFlare [12], Google [27], and
Amazon [3], have started to disable or interfere with domain
fronting, presumably in the fear of losing their market inside
censored countries.
CacheBrowsing CacheBrowsing [30], [85] is a technique
to fetch CDN-hosted censored content directly from CDN
edge servers with no need to use circumvention proxies.
To do so, various bootstrapping mechanisms are used to
enable a censored client
to locate the CDN edge servers
hosting her censored content of interest. CacheBrowsing is
signiﬁcantly cheaper [30], [46] than domain fronting since
the CDN expenses are paid by the publishers of the censored
content, not the circumvention operators. On the other hand,
CacheBrowsing has a more limited scope as it can only be
used to unblock certain censored content, i.e., those hosted
on CDNs. In this paper, we leverage CacheBrowsing as a
technique to optimize load on circumvention proxies, but not
as a standalone circumvention system.
Protocol Tunneling Several circumvention proposals sug-
gest to tunnel trafﬁc through popular Internet services that
are unlikely to be entirely blocked by the censors. For in-
stance, FreeWave [33] tunnels circumvention trafﬁc through
VoIP services like Skype, and CovertCast [44] tunnels trafﬁc
through video streaming services. Alternatively, Rook [70]
and Castle [29] tunnel trafﬁc through gaming applications,
and Sweet [35] tunnels through email communications. To
block a tunneling circumvention system, the censors will need
to block the oblivious service being used for tunnel, which
has signiﬁcant collateral damage to the censors [9]. On the
downside, tunneling circumvention systems offer impractical
QoS (e.g., high latencies and low bandwidth) due to the
limitations imposed by their hosting services.
Decoy Routing Decoy routing aims at defeating IP address
blocking by integrating circumvention software into the routing
infrastructure [84], [32], [38], [50]. In decoy routing, censor-
ship circumvention is implemented with help from a number of
friendly Internet autonomous systems, called decoy ASes. Each
decoy AS modiﬁes some of its routers (e.g., its border routers)
TABLE I.
WEAKNESSES OF MAJOR TYPES OF CIRCUMVENTION
SYSTEMS
Category
Proxy-Based
Domain Fronting
CacheBrowsing
Tunneling
Decoy Routing
Easily blocked
(cid:32)
(cid:35)
(cid:35)
(cid:35)
(cid:35)
Costly
(cid:71)(cid:35)
(cid:32)
(cid:35)
(cid:71)(cid:35)
(cid:71)(cid:35)
Poor QoS
(cid:32)
(cid:35)
(cid:32)
(cid:32)
(cid:35)
Deployability
(cid:35)
(cid:35)
(cid:35)
(cid:71)(cid:35)