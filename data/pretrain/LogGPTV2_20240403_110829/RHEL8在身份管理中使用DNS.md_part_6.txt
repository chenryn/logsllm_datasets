    ``` literallayout
    $ ipa dnszone-mod --allow-transfer=192.0.2.1;198.51.100.1;203.0.113.1 idm.example.com
    ```
:::
::: orderedlist
**验证步骤**
1.  SSH 到启用了区传输的 DNS 服务器之一：
    ``` literallayout
    $ ssh 192.0.2.1
    ```
2.  使用 `dig`{.literal} 工具传输 IdM DNS 区域：
    ``` literallayout
    # dig @ipa-server zone_name AXFR
    ```
:::
如果命令没有返回任何错误，则您已成功为 [*zone_name*]{.emphasis}
启用区域传送。
:::
::: section
::: titlepage
# []{#managing-dns-zones-in-idm_working-with-vaults-in-idm.html#additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   有关如何使用 Red Hat Ansible Engine 管理 IdM DNS
    [区域的更多信息，请参阅使用 Ansible playbook 管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html "第 3 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
:::
:::
:::
[]{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm}第 3 章 使用 Ansible playbook 管理 IdM DNS 区域 {.title}
:::
作为身份管理(IdM)管理员，您可以使用 `ansible-freeipa`{.literal}
软件包中的 `dnszone`{.literal} 模块来管理 IdM DNS
区域的工作方式。本章描述了以下主题和程序：
::: itemizedlist
-   [IdM 中支持哪些 DNS
    区域类型](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#supported-dns-zone-types_using-ansible-playbooks-to-manage-idm-dns-zones "支持的 DNS 区类型"){.link}
-   [您可以在 IdM 中配置的 DNS
    属性](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones "主要 IdM DNS 区的配置属性"){.link}
-   [如何使用 Ansible playbook 在 IdM DNS
    中创建主区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#using-ansible-to-create-a-primary-zone-in-idm-dns_using-ansible-playbooks-to-manage-idm-dns-zones "使用 Ansible 在 IdM DNS 中创建主区域"){.link}
-   [如何使用 Ansible playbook 确保存在带有多个变量的主 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#using-an-ansible-playbook-to-ensure-the-presence-of-a-primary-dns-zone-in-idm-with-multiple-variables_using-ansible-playbooks-to-manage-idm-dns-zones "使用 Ansible playbook 确保 IdM 中存在一个带有多个变量的主 DNS 区域"){.link}
-   [在提供 IP 地址时，如何使用 Ansible playbook 确保存在用于反向 DNS
    查找的区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#using-an-ansible-playbook-to-ensure-the-presence-of-a-zone-for-reverse-dns-lookup-when-an-ip-address-is-given_using-ansible-playbooks-to-manage-idm-dns-zones "在给定 IP 地址时，使用 Ansible playbook 确保存在用于反向 DNS 查找的区域"){.link}
:::
::: itemizedlist
**先决条件**
-   DNS 服务安装在 IdM 服务器上。有关如何使用 Red Hat Ansible Engine
    安装带有集成 DNS 的 IdM 服务器的更多信息，请参阅使用 [Ansible
    playbook
    安装身份管理服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management){.link}。
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#supported-dns-zone-types_using-ansible-playbooks-to-manage-idm-dns-zones}支持的 DNS 区类型 {.title}
:::
身份管理(IdM)支持两种类型的 DNS [*区域：主区和 []{.emphasis}
转发区域*]{.emphasis}。这部分论述了这两个类型的区，并包括 DNS
转发的示例场景。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本指南对区域类型使用 BIND 术语，不同于用于 Microsoft Windows DNS
的术语。BIND 中的主要区域与 Microsoft Windows [*DNS 中的正向查找区域和
[]{.emphasis} 反向查找区域的作用相同*]{.emphasis}。BIND
中的转发区域的作用与 Microsoft Windows DNS
[*中的条件转发器相同*]{.emphasis}。
:::
::: variablelist
[主 DNS 区域]{.term}
:   主 DNS 区域包含权威 DNS 数据，并且可以接受动态 DNS
    更新。此行为等同于标准 BIND `配置中的类型 master`{.literal}
    设置。您可以使用 `ipa dnszone-*`{.literal} 命令管理主区域。
    根据标准 DNS `规则，每个主区域必须包含授权起始`{.literal} (SOA)
    `和名称服务器`{.literal} (NS)记录。在创建 DNS 区域时，IdM
    会自动生成这些记录，但您必须手动将 NS
    记录复制到父区域，以创建正确委托。
    根据标准 BIND 行为，查询服务器不具有权威的名称将转发到其他 DNS
    服务器。这些 DNS 服务器（称为转发器）可能是也可能不是查询的权威。
    ::: example
    []{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#idm140350711838304}
    **例 3.1. DNS 转发的示例**
    ::: example-contents
    IdM 服务器包含 `test.example.`{.literal} 主区域。此区域包含
    `sub.test.example.`{.literal} 名称的 NS
    委派记录。`此外，test.example.`{.literal} 区域还配置了
    ` sub.text.example 子区域的 192.0.2.254`{.literal} ``{=html}
    转发器 IP 地址。
    `查询名称不存在.test.example.`{.literal} 的客户端会收到
    `NXDomain`{.literal} 回答，并且不会发生转发，因为 IdM
    服务器对此名称具有权威。
    另一方面，查询 `host1.sub.test.example.`{.literal} name
    会转发到配置的转发器 `192.0.2.254`{.literal}，因为 IdM
    服务器对此名称没有权威。
    :::
    :::
[转发 DNS 区域]{.term}
:   从 IdM 的角度来看，转发 DNS
    区域不包含任何权威数据。事实上，正向\"区\"通常仅包含两段信息：
    ::: itemizedlist
    -   域名
    -   与域关联的 DNS 服务器的 IP 地址
    :::
:::
所有对属于定义的域的名称的查询都转发到指定的 IP 地址。此行为等同于标准
BIND 配置中的 `type forward`{.literal} 设置。您可以使用
`ipa dnsforwardzone-*`{.literal} 命令管理转发区。
转发 DNS 区域在 IdM-Active Directory(AD)信任的上下文中特别有用。如果 IdM
DNS 服务器对 [**idm.example.com**]{.strong} 区域具有权威，并且 AD DNS
服务器对 [**ad.example.com**]{.strong} 区域具有权威，则
[**ad.example.com**]{.strong} 是 [**idm.example.com**]{.strong} 主区的
DNS 转发区域。这意味着，当查询来自 IdM 客户端以获取
[**somehost.ad.example.com**]{.strong} 的 IP 地址时，查询将转发到
[**ad.example.com**]{.strong} IdM DNS 转发区域中指定的 AD 域控制器。
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#configuration-attributes-of-primary-idm-dns-zones_using-ansible-playbooks-to-manage-idm-dns-zones}主要 IdM DNS 区的配置属性 {.title}
:::
身份管理(IdM)创建一个具有特定默认配置的新区域，如刷新周期、传输设置或缓存设置。在
[IdM DNS
区属性中](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#tab.idm-dns-zone-attributes_using-ansible-playbooks-to-manage-idm-dns-zones "表 3.1. IdM DNS 区域属性"){.link}，您可以使用以下选项之一查找默认区配置的属性：
::: itemizedlist
-   命令行界面(CLI)中的 `dnszone-mod`{.literal}
    命令。[如需更多信息，请参阅在 IdM CLI 中编辑主 DNS
    区域的配置](#managing-dns-zones-in-idm_working-with-vaults-in-idm.html#editing-the-configuration-of-a-primary-dns-zone-in-idm-cli_managing-dns-zones-in-idm "在 IdM CLI 中编辑主 DNS 区域的配置"){.link}。
-   IdM Web UI.[如需更多信息，请参阅在 IdM Web UI 中编辑主 DNS
    区域的配置](#managing-dns-zones-in-idm_working-with-vaults-in-idm.html#editing-the-configuration-of-a-primary-dns-zone-in-idm-web-ui_managing-dns-zones-in-idm "在 IdM Web UI 中编辑主 DNS 区域的配置"){.link}。
-   使用 `ipadnszone`{.literal} 模块的 Ansible
    playbook。[如需更多信息，请参阅使用 Ansible playbook 管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html "第 3 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
:::
除了设置区域的实际信息外，这些设置定义了 DNS
[*服务器如何处理权威启动*]{.emphasis} (SOA)记录条目以及它如何从 DNS
名称服务器更新其记录。
::: table
[]{#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-vaults-in-idm.html#tab.idm-dns-zone-attributes_using-ansible-playbooks-to-manage-idm-dns-zones}
**表 3.1. IdM DNS 区域属性**
::: table-contents
+--------------------+-----------------------+-----------------------+
| attribute          | ansible-freeipa 变量  | 描述                  |
+:===================+:======================+:======================+
| 权威名称服务器     | `n                    | 设置主 DNS            |
|                    | ame_server`{.literal} | 名称                  |
|                    |                       | 服务器的域名，也称为  |
|                    |                       | SOA MNAME。           |
|                    |                       |                       |
|                    |                       | 默认情况下，每个 IdM  |
|                    |                       | 服务器在 SOA MNAME    |
|                    |                       | 字段中公              |
|                    |                       | 告其自身。因此，使用  |
|                    |                       | `--n                  |
|                    |                       | ame-server`{.literal} |
|                    |                       | 在 LDAP               |
|                    |                       | 中存储的值将被忽略。  |
+--------------------+-----------------------+-----------------------+
| 管理员电子邮件地址 | `a                    | 设置要用于区          |
|                    | dmin_email`{.literal} | 域管理员的电子邮件地  |
|                    |                       | 址。这默认为主机上的  |
|                    |                       | root 帐户。           |
+--------------------+-----------------------+-----------------------+
| SOA 串行           | `serial`{.literal}    | 在 SOA                |
|                    |                       | 记录中设              |
|                    |                       | 置序列号。请注意，IdM |
|                    |                       | 会自动设置版本号      |
|                    |                       | ，用户不应该修改它。  |
+--------------------+-----------------------+-----------------------+
| SOA 刷新           | `refresh`{.literal}   | 设置次要 DNS          |
|                    |                       | 服务器在从主 DNS      |
|                    |                       | 服                    |
|                    |                       | 务器请求更新前等待的  |
|                    |                       | 间隔（以秒为单位）。  |
+--------------------+-----------------------+-----------------------+
| SOA 重试           | `Retry`{.literal}     | 设置在重试失败        |
|                    |                       | 的刷新操作前要等待的  |
|                    |                       | 时间（以秒为单位）。  |
+--------------------+-----------------------+-----------------------+
| SOA 过期           | `过期`{.literal}      | 设置次要 DNS          |
|                    |                       | 服                    |
|                    |                       | 务器在结束操作尝试之  |
|                    |                       | 前尝试执行刷新更新的  |
|                    |                       | 时间（以秒为单位）。  |
+--------------------+-----------------------+-----------------------+
| 最低 SOA           | `最小值`{.literal}    | 根据 [RFC             |
|                    |                       | 2308](http:/          |
|                    |                       | /tools.ietf.org/html/ |
|                    |                       | rfc2308){.link}，将生 |
|                    |                       | 存时间(TTL)值（以秒为 |
|                    |                       | 单位）设置为负缓存。  |
+--------------------+-----------------------+-----------------------+
| SOA 生存时间       | `ttl`{.literal}       | 为区域 apex           |
|                    |                       | 的记录设置            |
|                    |                       | TTL（以秒为单         |
|                    |                       | 位）。`例如，在区域 e |
|                    |                       | xample.com`{.literal} |
|                    |                       | 中，配置了名称        |
|                    |                       | `e                    |
|                    |                       | xample.com`{.literal} |
|                    |                       | 下的所有记录（A、NS   |
|                    |                       | 或                    |
|                    |                       | SOA），               |
|                    |                       | 但不影响其他域名，如  |
|                    |                       | `test.exa             |
|                    |                       | mple.com`{.literal}。 |
+--------------------+-----------------------+-----------------------+
| 默认生存时间       | `d                    | 将默认时间设置为      |
|                    | efault_ttl`{.literal} | live(TTL)，以秒为单   |
|                    |                       | 位，为之前未设置单个  |
|                    |                       | TTL                   |
|                    |                       | 值的区域中的          |
|                    |                       | 所有值提供负缓存。更  |
|                    |                       | 改生效后，需要在所有  |
|                    |                       | IdM DNS               |
|                    |                       | 服务器上重新启动      |
|                    |                       | `na                   |
|                    |                       | med-pkcs11`{.literal} |
|                    |                       | 服务。                |
+--------------------+-----------------------+-----------------------+
| BIND 更新策略      | `upd                  | 设置 DNS              |
|                    | ate_policy`{.literal} | 区域                  |
|                    |                       | 中客户端允许的权限。  |
+--------------------+-----------------------+-----------------------+
| 动态更新           | `dynamic_update`{     | 启用对客户端的 DNS    |
|                    | .literal}=TRUE\|FALSE | 记录的动态更新。      |
|                    |                       |                       |
|                    |                       | 请注意，如果设置为    |
|                    |                       | false，IdM            |
|                    |                       | 客户端计算            |
|                    |                       | 机将无法添加或更新其  |
|                    |                       | IP 地址。             |
+--------------------+-----------------------+-----------------------+
| 允许传输           | `allow                | 提                    |
|                    | _transfer`{.literal}= | 供允许传输给定区域的  |
|                    | [*string*]{.emphasis} | IP                    |
|                    |                       | 地址或网络名称        |
|                    |                       | 列表，用分号(;)分隔。 |
|                    |                       |                       |
|                    |                       | 默认情况下            |
|                    |                       | 禁用区域传送。默认的  |
|                    |                       | `allo                 |
|                    |                       | w_transfer`{.literal} |
|                    |                       | 值为                  |
|                    |                       | `none`{.literal}。    |
+--------------------+-----------------------+-----------------------+
| 允许查询           | `a                    | 提供允许发出 DNS      |
|                    | llow_query`{.literal} | 查询的 IP             |
|                    |                       | 地址或网络名称        |
|                    |                       | 列表，用分号(;)分隔。 |
+--------------------+-----------------------+-----------------------+
| 允许 PTR 同步      | `allow_syn            | 设置区域的 A 或 AAAA  |
|                    | c_ptr`{.literal}=1\|0 | 记录（转              |
|                    |                       | 发记录）是否将自动与  |
|                    |                       | PTR（反向）记录同步。 |
+--------------------+-----------------------+-----------------------+
| 区域转发器         | `forw                 | 指定为 DNS            |
|                    | arder`{.literal}=[*IP | 区域特                |
|                    | _address*]{.emphasis} | 别配置的转发器。这与  |
|                    |                       | IdM                   |
|                    |                       | 域中使用的            |
|                    |                       | 任何全局转发器分开。  |
|                    |                       |                       |
|                    |                       | 要指定多              |
|                    |                       | 个转发器，请多次使用  |
|                    |                       | 选项。                |
+--------------------+-----------------------+-----------------------+
| forward 策略       | `f                    | 指定 forward          |
|                    | orward_policy`{.liter | 策略。有关支持        |
|                    | al}=none\|only\|first | 的策略的详情，请查看  |
|                    |                       | [IdM 中的 DNS         |
|                    |                       | 转发                  |
|                    |                       | 策略](#managing-glob  |
|                    |                       | al-dns-configuration- |
|                    |                       | in-idm-using-ansible- |
|                    |                       | playbooks_working-wit |
|                    |                       | h-vaults-in-idm.html# |
|                    |                       | dns-forward-policies- |
|                    |                       | in-idm_managing-globa |
|                    |                       | l-dns-configuration-i |
|                    |                       | n-idm-using-ansible-p |