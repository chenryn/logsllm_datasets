 **Christopher Nichols** opened **SPR-7584** and commented
Lightly wordsmithing the original post from the forum.
"We recently upgraded from Spring 2.5.6 to Spring 3.0.2. We had "default-lazy-
init" set to true for the majority of the beans and didn't change those
settings with our Spring upgrade. However, we found that the lazy-init
behavior changed between Spring 2.5 and 3.0.
With 2.5, the beans flagged for lazy-init are truly lazily initialized, i.e.
they are initialized on demand after the Spring Application Context
instantiation is complete.
With 3.0, the Spring container attempts to eagerly initiate all beans
including the ones flagged for lazy-init, as part of the Spring Application
Context instantiation step. If any bean flagged for lazy-init throws exception
during initialization, the exception will be ignored and Spring Application
Context instantiation will continue on..." See the forum post for more
details.
The upgrade guide doesn't have any details about lazy-init changing the way it
functions. As such, this looks a bug.
* * *
**Affects:** 3.0.2
**Reference URL:**
http://forum.springsource.org/showthread.php?p=318697#post318697
**Issue Links:**
  * #12992 Lazy-init beans are unnecessarily created during the candidate determination process ( _ **"duplicates"**_ )