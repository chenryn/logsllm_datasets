Figure 15: Transit power and frequency deviation in inter-zone attack at different levels of total network power and rotational
inertia
For the simulation, we extended our model by another feed-
back loop representing secondary control, see Figure 13. Secondary
control calculates the Area Control Error (ACE) as described in
Section 2.2. Pmeasured, i.e., the transit to other areas, is fed into the
model via input 2, Pplanned is assumed to be zero. The ACE is then
forwarded to a delay (which might be up to 5 seconds [56]), and
eventually to a PID controller representing the secondary controller
with anti-wind-up functionality (Cp = 0.17,TN = 120), a saturation
when reaching the maximum amount of secondary control, again a
PT1-element representing turbine characteristics tN = 2 s (fast gas
turbine), and a ramping as power plants cannot increase/decrease
with arbitrary dynamics. Then, we took two such areas and con-
nected them to a 2-area model by subtracting one area’s frequency
from the other and feeding the result into the transfer function
2π PTie
to finally gain the power in transmission. Their frequencies
s
Table 3: Prototypical computer hardware configurations
with expected modulatable load
Office
5%
40%
30%
15%
10%
50%
30%
15%
5%
125%
5%
Components
Core2
i3
i5
i7
i7E
GPU-Low
GPU-Mid
GPU-High
GPU-Top
TFT
Laser Printer
Expected ∆ Load
Home
5%
30%
40%
20%
5%
50%
30%
15%
5%
110%
30%
600.75
Server
0%
30%
80%
90%
50%
0%
0%
0%
0%
0%
0%
233.8
Game
0%
5%
30%
40%
25%
5%
40%
40%
15%
150%
30%
715.8
∆ Watt
35
64
84
86
140
49
126.5
194
249
80
1,100
338.45
are feed into the tie line’s transfer function and further to both
areas but with opposite sign.
Figure 14 shows the load that is modulated by the adversary in
areas 1 and 2; Figure 15 shows the result in dependence of total
network power load and rotational inertia. Figures 15a-15c show
that the maximum amount of power in transit over the tie line is to
a great extent independent from these parameters. They rather have
an impact on the frequency deviation as shown in Figures 15d-15f,
but inter-zone attacks aim to trip power lines. Thus, the adversary
has to aim for a maximal power spike between area 1 and area 2
and fast changes, as line-tripping is done based on the total amount
of load in transit as well as its time derivative [53].
6 DISCUSSION
In Section 3.2 we outlined the botnet and in Sections 4 and 5 we
measured and simulated the components and attacks. In Section
6 we put the pieces together and sketch different distributions
of infections to estimate the botnet size needed for an successful
attack.
Based on the hardware listed in Table 2 we created four proto-
typical desktop computer configurations as presented in Table 3
which reads as follows: We assumed that home computers have
a CPU-class distribution of 5% Core2, 30% i3, 40% i5, 20% i7, and
5% i7E or equivalents, totaling 100%. GPU values read accordingly,
again summing up to 100%. For servers we assumed a higher prob-
ability for real multi-processor systems, effectively summing up to
more than 100%. Likewise, gaming PCs (and to some degree others
as well) have a higher probability of being connected to more than
one screen [59]. The lowest row lists the expected controllable load
per infected PC.
For IoT devices (Table 4) we created two different scenarios: A
conservative one with just smart thermostats and another one with
-4000-2000 0 2000 4000 6000 0 50 100 150 200 250 300Transit from Area 1 to Area 2 in MWTime in sTS = 6sTS = 10s-4000-2000 0 2000 4000 6000 0 50 100 150 200 250 300Transit from Area 1 to Area 2 in MWTime in sTS = 6sTS = 10s-4000-2000 0 2000 4000 6000 0 50 100 150 200 250 300Transit from Area 1 to Area 2 in MWTime in sTS = 6sTS = 10s 49 49.2 49.4 49.6 49.8 50 50.2 50.4 0 50 100 150 200 250 300Frequency in HzTime in sArea 1, TS = 6sArea 2, TS = 6sArea 1, TS = 10sArea 2, TS = 10s 49 49.2 49.4 49.6 49.8 50 50.2 50.4 0 50 100 150 200 250 300Frequency in HzTime in sArea 1, TS = 6sArea 2, TS = 6sArea 1, TS = 10sArea 2, TS = 10s 49 49.2 49.4 49.6 49.8 50 50.2 50.4 0 50 100 150 200 250 300Frequency in HzTime in sArea 1, TS = 6sArea 2, TS = 6sArea 1, TS = 10sArea 2, TS = 10s311Table 4: IoT scenarios
IoT
AC
Thermostat
Oven
Refrigerator
Kettle
Expected ∆ Load
∆ Watt Mix 1 Mix 2
4%
8%
1%
1%
1%
800
8,000
2,500
400
1,250
0%
4%
0%
0%
0%
320
692.75
Table 5: Infections needed
Distribution 1 Distribution 2 Distribution 3
Office PC
Home PC
Gameing PC
Server
+ IoT-Mix (Table 4)
Avg. ∆ Load p. Infection
Infections 3000 MW (1 RI)
Infections 4500 MW (1.5 RI)
40%
30%
15%
15%
-
40%
30%
15%
15%
Mix 1
30%
40%
20%
10%
Mix 2
458.045 W 778.045 W 1,201.125 W
6,549,575
2,497,659
3,746,488
9,824,363
3,855,819
5,783,728
additional devices. The former reflects the fact that est. 20 Million
devices [52] have been sold in the last 4 years in the U.S. to their
126 Mio. housholds [49]. We reduced the factor by 1/3 to account
for to the distribution of electric heating systems [40] in the U.S.
Table 5 combines the different computer types from Table 3 as
well as the IoT scenarios into three possible infection distributions,
whereas the first — most conservative estimation — excludes IoT
devices completely. The second distribution corresponds with the
first, with the addition of thermostats and the third adds all classes
of IoT devices.
The following row computes the expected controllable load on
average per installation of a botnet client, based on the distribution
of infected computers. The last two rows display the botnet size
necessary for 1 and 1.5 reference incidents (3,000 MW or 4,500 MW
respectively).
Depending on the mix of infected devices, a successful attack
can be achieved with 2.5 to 9.8 million devices — depending on
other conditions described in Section 5 are met, such as day of time
and mix of energy sources. For attacks 1 and 2 the infections can
be located anywhere within the synchronous grid.
While this can only be considered a rough estimate, it is well
within reach of real-world botnets. More accurate estimates are
difficult [6, 44], but go up to 50 Mio. infected computers at the
peaks times of certain botnets [51]. These figures cover infections
globally, but Europe’s estimated 17% share of Internet users in 2017
[35] and high technological level let these numbers appear feasible.
Furthermore, we anticipate an increase of connected computers
and Internet-enabled devices in the next years.
6.1 Limitations
The used simulation models are based on Ulbig et al. [53] and have
to estimate some properties of the grid such as the mix of generator
characteristics. A more precise simulation is possible with data
from TSOs or ENTSO-E which include the exact mix of connected
power plants and their scheduled (or actual) availability.
6.2 Future work
The simulation model for attack 2 uses resonance mainly caused
by activation delay and generator characteristics of the primary
control. However, additional grid-inherent resonances are known
for the ENTSO-E synchronous area [18],[54, p.77],[26, p.3]. An
attacker could piggyback on top of them and try to amplify them
to gain more leverage. Grid-inherent resonant frequencies could
also amplify the effects of attack 3.
We did not look at cascading effects which were almost always
involved in large scale power outages [19, 54, 58]. These simulations
are only possible with grid wide topology data including all tie lines
characteristics.
In this paper we only targeted severe power disruptions of the
grid e.g., by load shedding. However, an attacker could also just
aim for economic damage invisible to the end-customer. Immediate
costs arise by the additional deployment of reserves and increased
unplanned international transfers. Long-term costs are associated
with the permanent allocation of reserves as preparation for such
attacks.
7 RELATED WORK
Irregular behavior in power grids happens from time to time, mostly
due to unexpected incidents and not as a consequence of mali-
cious behavior. ENTSO-E investigates and publishes such incidents
to advance the knowledge for proper incident response. Thereby,
ENTSO-E reported on inter-area oscillations [18], the impact of
solar eclipses on power production [45], a blackout in larger parts
of central Europe caused by a cascade of tripping lines [54], and a
similar one in Turkey [19]. The first action against a power grid
known to have been malicious happened in the Ukraine in 2015. The
adversaries used malware delivered via e-mails, stole credentials
and finally got access to the power providers’ SCADA systems [8].
The adversaries used attack vectors well-known in traditional IT,
whereas our attacks strike the power grid – a cyber-physical system
– in its physical part.
Numerous works considered false data injection attacks, i.e., an
adversary compromising meters and sending wrong data to the
provider, and their detection [29–31, 63, 65]. Mishra et al. [36] inves-
tigated rate alteration attacks, i.e., fabrication of price messages, in
smart grids. Mohsenian et al. [37] introduced the notion of Internet-
based load attacks on smart grids, for example by manipulating
computational load, exploiting capabilities of demand-side manage-
ment or (apparently) manipulating spot-market electricity prices,
e.g., so that programmable smart meters start charging electric cars
all at once. Furthermore, the remote kill switch found in some smart-
meters to disconnect subscribers from the grid has been suggested
for similar destabilizing attacks on power grids as in our paper
[5, 13]. However, as of 2017, meters with demand-side management
are rolled out only to a limited extent. Smart meters that are rolled
out at large-scale under various national and EU programs [24]
often are metering-only and do not include a power control switch
as they are more expensive and some nations completely opt out
from such functionality [22].
Amini et al. [3, 4] claim that dynamic load attacks are more
successful with respect to their impact on grid frequency. Their