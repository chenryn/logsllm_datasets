0%
EI M - D
S
S
S
I M - D
100%
20%
40%
60%
80%
100%
Disk I/O access
Server computation
Data transmission
Client computation
(a) Keyword search
(b) File update
Figure 4: Detailed costs of IM-DSSE framework with moderate network and SSD server-storage.
Cost breakdown. We dissected the overall cost of our schemes previously presented in Figures 1, 2
and 3 to investigate which factors contribute a signi(cid:27)cant amount to the total delay of each scheme.
For analysis, we selected the cost of our schemes when performing on the largest encrypted index size
being experimented (i.e.,2.36×1011) with moderate network speed, where the encrypted index is stored
of delay of all schemes. In our IM-DSSE and IM-DSSEI schemes, most of the computations were per-
on a SSD drive. Figure 4 presents the major factors that contribute to the total delay of our schemes
during keyword search and (cid:27)le update operations.
Considering the search operation, it is clearly data transmission what occupied the largest amount
formed by the server wherein cryptographic operations were accelerated by AES-NI so that they only
took a small number of the total, especially in IM-DSSEI scheme. Meanwhile, the client only performed
simple computations such as search token generation so that its cost was negligible. In IM-DSSEII and
IM-DSSEI+II schemes, encrypted data were decrypted at the client side, while the server did nothing
but transmission. Therefore, the client computation cost took a small portion of the total delay and
the server’s cost was negligible. However, as indicated in Section 3, the client computation and data
transmission in IM-DSSEII and IM-DSSEI+II are fully parallelizable where their partially parallel costs
are indicated by their overlapped area in Figure 4a. Hence, we can infer that client computation was
actually dominated by data transmission and, therefore, the computation cost did not a(cid:29)ect the total
delay of the schemes. As explained above, we stored the encrypted matrix on disk with row-friendly
strategy so that the disk I/O access time due to keyword search was insigni(cid:27)cant, which contributed
less than 3% to the total delay.
all delay of the update operation, especially in the IM-DSSE and IM-DSSEII schemes due to non-
In contrast, it is clear that disk I/O access time occupied a considerable proportion of the over-
contiguous memory access. Data transmission was the second major factor contributing to the total
delay. As the server did not perform any expensive computations, its cost was negligible in all schemes.
The client performed cryptographic operations which were accelerated by AES-NI library so that it only
contributed less than 7% of the overall cost. Additionally, the client computation was mostly parallelized
with the data transmission and the server’s operations in IM-DSSEII and IM-DSSEI+II schemes so that
it can be considered not to signi(cid:27)cantly impact the total delay.
Realization on mobile environments. Finally, we evaluated our schemes’ performance when de-
ployed on a mobile device with limited computational resources. Similarly to the desktop experiments,
we tested on fast and moderate network speed by geographically locating the server close and far away
from the mobile phone, respectively. The phone was connected to a local WiFi which, in turn, allowed
the establishment of the connection to the server via a wireless network resulting in the network latency
and throughput of fast network case to be 18.8 ms, 136 Mbps while those of moderate case were 76.3 ms
and 44 Mbps respectively. Figures 5 and 6 present the benchmarked results with aforementioned net-
18
1010
0246⋅102
0246⋅102
1010
ms
1010
051015⋅103
05101520⋅103
1010
1011
1011
1010
3456⋅102
3456⋅102
1010
1011
1011
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
ms
1010
05101520⋅103
01020⋅103
1010
1011
1011
1011
1011
ms
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
ms
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
# keyword-(cid:27)le pairs (log)
(a) Keyword search
# keyword-(cid:27)le pairs (log)
(b) File update
# keyword-(cid:27)le pairs (log)
(c) Keyword search
# keyword-(cid:27)le pairs (log)
(d) File update
Figure 5: The latency of IM-DSSE framework on mobile and RAM server-storage with (a,b) fast and
(c,d) moderate networks.
ms
ms
ms
ms
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
IM-DSSE
IM-DSSEI
IM-DSSEII
IM-DSSEI+II
# keyword-(cid:27)le pairs (log)
(a) Keyword search
# keyword-(cid:27)le pairs (log)
(b) File update
# keyword-(cid:27)le pairs (log)
(c) Keyword search
# keyword-(cid:27)le pairs (log)
(d) File update
Figure 6: The latency of IM-DSSE framework on mobile and SSD server-storage with (a,b) fast and (c,d)
moderate networks.
S
S
EI + II
EII
EI
S
S
S
I M - D
I M - D
0%
EI M - D
S
S
S
I M - D
20%
40%
60%
80%
S
S
EI + II
EII
EI
S
S
S
I M - D
I M - D
0%
EI M - D
S
S
S
I M - D
100%
20%
40%
60%
80%
100%
Disk I/O access
Server computation
Data transmission
Client computation
(a) Keyword search
(b) File update
Figure 7: Detailed costs of IM-DSSE framework on mobile with moderate network and SSD server-
storage.
work settings when the data in the server were stored on primary (i.e., RAM) and secondary (i.e., SSD)
storage units, respectively. In the mobile environment, the IM-DSSEII scheme performed considerably
slower than others in terms of keyword search. That is because, in this scheme, a number of crypto-
graphic operations (i.e.,()) were performed by the mobile device. Moreover, these operations were
the size of encrypted index exceeded1011 keyword-(cid:27)le pairs. This is because starting from this size of
delays of our schemes, especially the IM-DSSE and IM-DSSEII schemes, were substantial in the
not accelerated by AES-NI library as in our Desktop machine because the mobile CPU did not have spe-
cial crypto accelerated instructions. Considering the keyword search performance of IM-DSSEII in the
moderate network setting (i.e., Figures 5c and 6c), we can see that its delay signi(cid:27)cantly increased when
the encrypted index, the client computation began to dominate the data transmission cost. The update
mobile environment because the mobile platform had to perform intensive cryptographic operations.
Figure 7 shows the decomposition of the total end-to-end delay of our schemes in the out-of-state
19
L2



L1




KPR12 [18]
L5



L2

