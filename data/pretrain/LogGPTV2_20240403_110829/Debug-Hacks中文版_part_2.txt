表示注意和警告等。
表示提示、建议等。
中级
www.TopSage.com
高级
前言 1XIII
---
## Page 14
注1：这些示例代码是笔者在执笔时使用的程序，并不保证能在任何环境下正常运
关于 O'Reilly的其他信息请访问下面的网站。
本书的网页、示例代码"、勘误表和追加信息位于：
有关本书的技术问题和意见，请发送至以下电子邮件：
中国：
XIVI
http://www.oreilly.co.jp/books/9784873114040/
http://www.oreilly.com/（英语）
http:/www.oreilly.cojp/（日语）
http://www.oreilly.com.cn/(中文)
PI:EMAIL
PI:EMAIL
奥莱利技术咨询（北京）有限公司
北京市西城区西直门南大街2号成铭大厦C座807室（100035）
电子邮件 PI:EMAIL
FAX: 03-3356-5261
电话：03-3356-5227
东京都新宿区坂町 26 番地 27 Inteligent PlazaBuilding 1F 邮编160-0002
前言
码提供任何支持。
行，而且可能会在没有预先通知的情况下做出修改。另外，本书不为示例代
www.TopSage.com
---
## Page 15
第3章
第2章调试前的必知必会
第1章热身准备.
3.调试的心得…
2.Debug hacks的地图..
1.调试是什.
21.
0
15.
3
三
10.
9.
8
.
5
调试器（GDB）的基本使用方法（之二）
调试器（GDB）的基本使用方法（之一）
使用kdump获取内核溃转储…
函数调用时的参数传递方法（i386篇），
函数调用时的参数传递方法（x86_64篇）
调试器（GDB）的基本使用方法（之三）
使用diskdump获取内核崩溃转储.
使用.inico.进行连..
从汇编代码查找相应的源代
怎样学编·
函数调用时的参数传递方法（C++篇）
www.TopSage.com
+....
目
大家网
...........
............
录
104
6
90
8
8
S
3
9
---
## Page 16
第6章
第5章实践内核调试..
第4章
33.
26．发生SIGSEGV，应用程序异常停止.…
6
24
Z
25.
22．死机时利用 IPMIl watchdog timer 获取崩溃转储.
8
46
5
44.
43.
9
8
3
6
32.
26
88
4
．CPU负载过高的故障..
：kernel panic（空指针引用篇）
应用程序停止响应（死循环篇）
应用程序调试实
．内核独有的汇编指令（之二）
．内核独有的汇编指令（之一）
利用 kprobes 获取内核内部信息.
内核停止响应（信号量篇）……
内核停止响应（死循环篇）…
应用程序停止响应（死锁篇）
利用监视点检测非法内存访问.
数组非法访问导致内存破坏.…
Valgrind 的使用方法（实践篇）
Valgrind 的使用方法（基本篇）
使用 strace 寻找故障原因的线索....
实时进程停止响
内核停止响应（自旋锁篇之二）
内核停止响应（自旋锁篇之一）
kernel panic....
kernel panic（链表破坏篇），
www.TopSage.com
........
....
一
·..·........
.........
+++....
....
2
259
232
25
100
15
68
6
---
## Page 17
附录Debug hacks 术语的基础知识...
8
50．使用kprobes 在内核内部任意位置通过变量名获取信息....287
64.
3
88
9
15
8
利用VMwareVyprobe 获取信息....
利用错误注入发现Linux内核的潜在bug....
使用 systemtap 调试运行中的内核（之二）
使用 systemtap 调试运行中的内核（之一）
www.TopSage.com
目录I XVII
297
---
## Page 18
www.TopSage.com
---
## Page 19
误和构建错误。
编写代码时，感到完成到某种程度时，就应该进行编译和构建，修改并消灭编译错
程序员书写代码直到完成的过程中，会经历需求定义、设计、编码、测试和调试等
编程的流程
种差别，不断积累，我们程序员才能提高对编程和调试的认识。
丰富的程序员们，希望大家阅读本书，找出和自己方法之间的差别。此外，明确这
有某种价值的。那就是，明确地写下来，经验较少的程序员就能直接学到别人无法
方法是最佳方法、除此之外别无他路。即便如此，把调试方法明确地写下来，也是
在本书中，我们根据自己的调试体会来介绍调试方法。我们不敢，也不会声称这些
程的文档，真是匪夷所思。10个程序员就有10 种迥异的方法，然而这些方法却从
调试究竟是什么过程呢？尽管是个程序员都会调试，但却没有任何详细记载调试过
阶段（如图1-1所示)。这里详细讨论编码、测试和调试阶段。
传授的调试方法，而经验丰富的程序员也会再次思考自己的调试方法。特别是经验
未被明确记载过。
本书从基础到应用逐步说明调试过程。
调试是什么
L
www.TopSage.com
热身准备
hack #1~#3
第1章
---
## Page 20
bug的意志。
种主动的说法，是通过测试（主动）发现了bug。从这种观点中能感受到积极寻找
从测试的立场来看，发现bug的测试是成功的测试。这是因为，行为与规格
好的测试能发现大量bug，而测试的初衷就是找出更多的bug。
寻找 bug 这件事
不论哪种情况，调试总是开始于bug被确认之后。
就称为 bug。测试就是寻找程序中的 bug的过程。
测试就是确认程序是否与规格一致的工作。程序行为与期待行为（规格）不一致，
这里先定义一下测试和调试。
非正式测试（确认能否启动等最基本的功能）之后，就是测试和调试工作。
调试和测试
溃等bug，应该在进入测试阶段之前全部改掉。
预期一致。这并不是正式的测试，而是先看看能否启动、能否运行。不能启动或崩
消灭编译错误后，虽然功能尚未完成，但也能运行，因此先跑起来看看行为是否与
图1-1编程的流程
21第1章热身准备
是“成功”（参考文献）。
（specification)不一致的程序是“失败”的程序，但作为测试而言，找到了bug就
试仅仅指对通过某种方法发现的bug进行修正的过程。
试”，如觉得程序行为有些奇怪，或是针对用户提问进行确认等工作。但本书中调
一些人认为，即使bug没有被正式确认，某些工作也应当包括进来成为广义的“调
他人发现，其发现方式多种多样。
bug不仅会在正式的测试阶段发现，也会在平常随意使用时发现，被自己以外的其
编写代码—
编译（构建）—
www.TopSage.com
红网
---
## Page 21
②和③的情况下就需要调试。本书说明这些情况应该如何调试。
③为死循环或死锁等情况，对于给定的输入，无法输出期待的值，程序也不结束。
②是对于给定的输入，没有输出预期的值的情况。这时就发现了 bug。
发现 bug，因此不需要调试。但是，仅仅是测试中没发现 bug，并不能保证 bug 不
验其输出的过程。
如果把编程简单地看做提供输入并获得输出的过程，那么测试就是针对几组输入检
①执行期待的行为并结束。
程序的行为可以分为以下几种。
bug 的分类
可以说它是集测试、编程和调试于一身的方法论，不过本书不打算详细讲解。
此外，有的方法论主张在编写程序代码之前先编写测试程序。这种方法称为 TDD
作为程序员，谁都希望 bug 在被别人发现之前自己发现，哪怕只早一点点也好。
主动地找出 bug 并改正。
bug 并非自然发生，而是程序员自己写出来的，因此不应该被动地被发现，而是要
调试的流程请见图 1-2。
调试的流程
存在。
①为与输入相应的输出等于期待的输出（规格)，并且可以结束。这种情况并没有
?
②
(测试驱动开发)。它主张，不要去测试程序，而是每个程序都应事先准备好测试。
不结束。
不执行期待的行为并结束。
www.TopSage.com
HACK#1  调试是什么| 3
---
## Page 22
注1：
原因区分方法和有关的 hack 编号。内核故障的区分方法参见表1-1。
“，，，
本 hack 将对 bug 进行分类，以判断使用本书的哪一条 hack 来解决问题。
#2
参考文献
如下。
有的 bug 是通过前述的测试发现的，有的 bug 是被其他人发现的。调试的流程
本书将讲述各种各样的bug调试方法。
图1-2调试的流程
《·の技法第2版》（等著，近代科学社出版，ISBN
?
?
?
4
丨第1章热身准备
程序行为与预期相同，则停止；程序行为与预期不同，转到②。
确认执行过程 (测试)。
调试。
bug 复现。
版)》，机械工业出版社，ISBN 978-7111173199。
Wiley 出版，ISBN 978-0471469124。中文译本为《软件测试的艺术（原书第2
一开始很难判断bug的种类。
Debug hacks 的地图
www.TopSage.com
编码
I▼
调试
一译者注
一吉冈弘隆
---
## Page 23
图1-4程序不结束时的应对方法
图 1-3程序异常结束时的应对方法
积序不结
性牧人
参考表 1-1
其他现象
IX
Yes
No
s
用top等调查
www.TopSage.com
panic)
常的情况
浏就
kemel
设翼WDT
负载高？
无法获取转储
No
原因分类
其他原因
No
HACK #28~#30
HACK#2 Debug hacks 的地图[
内存非法访间
SysRq键利minicom的用法
HACK #22、#23
WDT的设置方法
HACK#32
死循环
HACK#31
死锁
HACK#45、#48、#54
HACK #41、#42
degradation
HACK#16、18
内存泄澜
HACK#33~#35
检测到异常WDT