---
author: Gabriel Cánepa
category: 技术
comments_data:
- date: '2015-09-21 09:14:25'
  message: 虽然考过了7的ce,但确实没认真关注过新特性。
  postip: 119.4.252.234
  username: 来自四川成都的 Sina Weibo 5.4|iOS 9.0 用户
- date: '2015-10-09 08:23:29'
  message: mark
  postip: 222.72.138.207
  username: i720522 [Chrome 44.0|Windows 10]
- date: '2016-04-25 17:44:00'
  message: 学习中
  postip: 221.237.179.108
  username: w761556759 [Chrome 45.0|Windows 7]
count:
  commentnum: 3
  favtimes: 8
  likes: 0
  sharetimes: 0
  viewnum: 8480
date: '2015-09-21 08:23:00'
editorchoice: false
excerpt: '在本篇文章中，我们将讨论在 RHEL 7 中如何使用传统的工具来设置和配置本地系统存储，并介绍系统存储管理器（也称为 SSM），它将极大地简化上面的任务。  RHCSA:
  配置和加密系统存储  Part 6 请注意，我们将在这篇文章中展开这个话题，但由于该话题的宽泛性，我们将在下一期中继续介绍有关它的描述和使用。 在 RHEL 7
  中创建和修改分区 在 RHEL 7 中， parted 是默认的用来处理分区的程序，且它允许你：  展示当前的分区表 操纵（扩大或缩小分区的大小）现有的分区 利用空余的磁盘空间或额外的物理存储设备来创建分区  强烈建议你在试图增'
fromurl: http://www.tecmint.com/rhcsa-exam-create-format-resize-delete-and-encrypt-partitions-in-linux/
id: 6257
islctt: true
largepic: /data/attachment/album/201509/20/222535dftss9vstvvvz9hv.png
permalink: /article-6257-1.html
pic: /data/attachment/album/201509/20/222535dftss9vstvvvz9hv.png.thumb.jpg
related:
- displayorder: 0
  raid: 6249
- displayorder: 0
  raid: 6263
reviewer: ''
selector: ''
summary: '在本篇文章中，我们将讨论在 RHEL 7 中如何使用传统的工具来设置和配置本地系统存储，并介绍系统存储管理器（也称为 SSM），它将极大地简化上面的任务。  RHCSA:
  配置和加密系统存储  Part 6 请注意，我们将在这篇文章中展开这个话题，但由于该话题的宽泛性，我们将在下一期中继续介绍有关它的描述和使用。 在 RHEL 7
  中创建和修改分区 在 RHEL 7 中， parted 是默认的用来处理分区的程序，且它允许你：  展示当前的分区表 操纵（扩大或缩小分区的大小）现有的分区 利用空余的磁盘空间或额外的物理存储设备来创建分区  强烈建议你在试图增'
tags:
- RHCSA
- 分区
- SSM
- LVM
thumb: false
title: 'RHCSA 系列（六）: 使用 Parted 和 SSM 来配置和加密系统存储'
titlepic: false
translator: FSSlc
updated: '2015-09-21 08:23:00'
---
在本篇文章中，我们将讨论在 RHEL 7 中如何使用传统的工具来设置和配置本地系统存储，并介绍系统存储管理器（也称为 SSM），它将极大地简化上面的任务。
![配置和加密系统存储](/data/attachment/album/201509/20/222535dftss9vstvvvz9hv.png)
*RHCSA: 配置和加密系统存储 – Part 6*
请注意，我们将在这篇文章中展开这个话题，但由于该话题的宽泛性，我们将在下一期中继续介绍有关它的描述和使用。
### 在 RHEL 7 中创建和修改分区
在 RHEL 7 中， parted 是默认的用来处理分区的程序，且它允许你：
* 展示当前的分区表
* 操纵（扩大或缩小分区的大小）现有的分区
* 利用空余的磁盘空间或额外的物理存储设备来创建分区
强烈建议你在试图增加一个新的分区或对一个现有分区进行更改前，你应当确保该设备上没有任何一个分区正在使用（`umount /dev/分区`），且假如你正使用设备的一部分来作为 swap 分区，在进行上面的操作期间，你需要将它禁用（`swapoff -v /dev/分区`） 。
实施上面的操作的最简单的方法是使用一个安装介质例如一个 RHEL 7 的 DVD 或 USB 安装盘以急救模式启动 RHEL（`Troubleshooting` → `Rescue a Red Hat Enterprise Linux system`），然后当让你选择一个选项来挂载现有的 Linux 安装时，选择“跳过”这个选项，接着你将看到一个命令行提示符，在其中你可以像下图显示的那样开始键入与在一个未被使用的物理设备上创建一个正常的分区时所用的相同的命令。
![RHEL 7 急救模式](/data/attachment/album/201509/20/222536ga4rzdrd44clekut.png)
*RHEL 7 急救模式*
要启动 parted，只需键入：
```
# parted /dev/sdb
```
其中 `/dev/sdb` 是你将要创建新分区所在的设备；然后键入 `print` 来显示当前设备的分区表：
![创建新的分区](/data/attachment/album/201509/20/222537fcm60znwl4ezbep0.png)
*创建新的分区*
正如你所看到的那样，在这个例子中，我们正在使用一个 5 GB 的虚拟驱动器。现在我们将要创建一个 4 GB 的主分区，然后将它格式化为 xfs 文件系统，它是 RHEL 7 中默认的文件系统。
你可以从一系列的文件系统中进行选择。你将需要使用 `mkpart` 来手动地创建分区，接着和平常一样，用 `mkfs.类型` 来对分区进行格式化，因为 `mkpart` 并不支持许多现代的文件系统的到即开即用。
在下面的例子中，我们将为设备设定一个标记，然后在 `/dev/sdb` 上创建一个主分区 `(p)`，它从设备的 0% 开始，并在 4000MB(4 GB) 处结束。
![在 Linux 中设定分区名称](/data/attachment/album/201509/20/222537umuaaa11qas9cams.png)
*标记分区的名称*
接下来，我们将把分区格式化为 xfs 文件系统，然后再次打印出分区表，以此来确保更改已被应用。
```
# mkfs.xfs /dev/sdb1
# parted /dev/sdb print
```
![在 Linux 中格式化分区](/data/attachment/album/201509/20/222538w4y4dyy4cbu66dn4.png)
*格式化分区为 XFS 文件系统*
对于旧一点的文件系统，在 parted 中你可以使用 `resize` 命令来改变分区的大小。不幸的是，这只适用于 ext2, fat16, fat32, hfs, linux-swap, 和 reiserfs （若 libreiserfs 已被安装）。
因此，改变分区大小的唯一方式是删除它然后再创建它（所以，确保你对你的数据做了完整的备份！）。毫无疑问，在 RHEL 7 中默认的分区方案是基于 LVM 的。
使用 parted 来移除一个分区，可以用：
```
# parted /dev/sdb print
# parted /dev/sdb rm 1
```
![在 Linux 中移除分区](/data/attachment/album/201509/20/222539sdyyp6axrx06rrjv.png)
*移除或删除分区*
### 逻辑卷管理(LVM)
一旦一个磁盘被分好了分区，再去更改分区的大小就是一件困难或冒险的事了。基于这个原因，假如我们计划在我们的系统上对分区的大小进行更改，我们应当考虑使用 LVM 的可能性，而不是使用传统的分区系统。这样多个物理设备可以组成一个逻辑组，以此来存放任意数目的逻辑卷，而逻辑卷的增大或减少不会带来任何麻烦。
简单来说，你会发现下面的示意图对记住 LVM 的基础架构或许有用。
![LVM 的基本架构](/data/attachment/album/201509/20/222541fqvz6iodih5u6vzv.png)
*LVM 的基本架构*
#### 创建物理卷，卷组和逻辑卷
遵循下面的步骤是为了使用传统的卷管理工具来设置 LVM。由于你可以通过阅读这个网站上的 LVM 系列来扩展这个话题，我将只是概要的介绍设置 LVM 的基本步骤，然后与使用 SSM 来实现相同功能做个比较。
**注**: 我们将使用整个磁盘 `/dev/sdb` 和 `/dev/sdc` 来作为物理卷（PV），但是否执行相同的操作完全取决于你。
**1. 使用 /dev/sdb 和 /dev/sdc 中 100% 的可用磁盘空间来创建分区 `/dev/sdb1` 和 `/dev/sdc1`：**
```
# parted /dev/sdb print
# parted /dev/sdc print
```
![创建新分区](/data/attachment/album/201509/20/222542csrwq4trr3el34ls.png)
*创建新分区*
**2. 分别在 /dev/sdb1 和 /dev/sdc1 上共创建 2 个物理卷。**
```
# pvcreate /dev/sdb1
# pvcreate /dev/sdc1
```
![创建两个物理卷](/data/attachment/album/201509/20/222543h899swmaa0eawses.png)
*创建两个物理卷*
记住，你可以使用 pvdisplay /dev/sd{b,c}1 来显示有关新建的物理卷的信息。
**3. 在上一步中创建的物理卷之上创建一个卷组（VG）：**
```
# vgcreate tecmint_vg /dev/sd{b,c}1
```
![在 Linux 中创建卷组](/data/attachment/album/201509/20/222543t5a5ak905jvati7j.png)
*创建卷组*
记住，你可使用 vgdisplay tecmint\_vg 来显示有关新建的卷组的信息。
**4. 像下面那样，在卷组 tecmint\_vg 之上创建 3 个逻辑卷（LV）：**
```
# lvcreate -L 3G -n vol01_docs tecmint_vg       [vol01_docs → 3 GB]
# lvcreate -L 1G -n vol02_logs tecmint_vg       [vol02_logs → 1 GB]
# lvcreate -l 100%FREE -n vol03_homes tecmint_vg    [vol03_homes → 6 GB]