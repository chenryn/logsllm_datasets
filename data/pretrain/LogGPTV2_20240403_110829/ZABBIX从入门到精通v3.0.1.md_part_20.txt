命令详解
使用语法
zabbix_server [-hV] [-c ] [-n ] [-R ]
命令选项
-c --config  配置文件路径
-n --new-nodeid  将数据转为nodeid，如果当前服务器想作为一个nodeid需要使用名，切记，操作
不可逆
-R --runtime-control  执行管理功能，如：config_cache_reload
Runtime 控制项:
config_cache_reload reload配置缓存
zabbix_server 命令实例
启动zabbix server
/usr/local/zabbix-2.2.1/sbin/zabbix_server -c /usr/local/zabbix-2.2.1/etc/zabbix_server.conf
转为node模式（只做转换，不会启动server）
/usr/local/zabbix-2.2.1/sbin/zabbix_server -c /usr/local/zabbix-2.2.1/etc/zabbix_server.conf -n 12
reload配置缓存
/usr/local/zabbix-2.2.1/sbin/zabbix_server -c /usr/local/zabbix-2.2.1/etc/zabbix_server.conf -R config_cache_reload
Zabbix 命令：zabbix_get
zabbix_get 作用
总有人在群里提问，为什么zabbix获取不到数据，为什么zabbix提示Not Support，怎么办？别老问，用zabbix_get
试着获取数据即可。在zabbix server上执行zabbix_get命令来试着获取item值
zabbix_get 命令详解
命令在zabbix安装目录bin下，如果是window命令自然是zabbix_get.exe，使用方法都是一样的。端口和源（绑定）
IP是可选的，其他参数不能漏掉
# /usr/local/zabbix-2.2.1/bin/zabbix_get -h
Zabbix get v2.2.1 (revision 40808) (09 December 2013)
usage: zabbix_get [-hV] -s  [-p ] [-I ] -k 
Options:
-s --host  Specify host name or IP address of a host
-p --port  Specify port number of agent running on the host. Default is 10050
-I --source-address  Specify source IP address
-k --key  Specify key of item to retrieve value for
-h --help Give this help
-V --version Display version number
Example: zabbix_get -s 127.0.0.1 -p 10050 -k "system.cpu.load[all,avg1]"
参数说明：
-s –host： 指定客户端主机名或者IP
-p –port：客户端端口，默认10050
-I –source-address：指定源IP，写上zabbix server的ip地址即可，一般留空，服务器如果有多ip的时候，你指定
一个。
-k –key：你想获取的key
至于使用长参数还是短的，自己选，我经常使用-s而不是-host，太长了。来个例子咯
zabbix_get 获取数据
获取负载
./zabbix_get -s 127.0.0.1 -p 10050 -k "system.cpu.load[all,avg15]"
0.270000
获取主机名
# ./zabbix_get -s 127.0.0.1 -p 10050 -I 127.0.0.1 -k "system.hostname"
10-9-4-20
Zabbix 命令：zabbix_agentd
zabbix_agentd 用途
zabbix_agentd非常非常重要，它是每个学习zabbix必须熟悉也必须接触到得东西，把zabbix_agentd安装到被监控
服务器上，zabbix_server便可以和zabbix_agentd通信来获取数据。下面来详细聊聊zabbix_agentd。
兼容系统
作为一个跨平台的监控系统，zabbix_agentd可以被安装到各式各样的系统中，如下：
 Linux
 IBM AIX
 FreeBSD
 NetBSD
 OpenBSD
 HP-UX
 Mac OS X
 Solaris: 9, 10, 11
 Windows: 2000, Server 2003, XP, Vista, Server 2008, 7
命令详解（Linux）
linux和windows上略有不同，不过基本上差不多
使用方法
usage: zabbix_agentd [-Vhp] [-c ] [-t ]
参数
-c --config  配置文件绝对路径
-p --print 打印出所有的item，然后退出
-t --test  测试指定item key，然后退出
-h --help 帮助
-V --version 显示版本号
命令详解（Windows）
基本上使用方法和linux一样，不过有些特殊，在window里，zabbix_agentd多了服务这块。
-i --install 安装为服务
-d --uninstall 移除服务
-s --start 启动服务zabbix_agentd
-x --stop 关闭zabbix_agentd
-m --multiple-agents 多个服务，服务名包含agentd的主机名（不常用）
实例测试
列出 items
# ./zabbix_agentd -p | grep uptime
system.uptime [u|15923945]
测试 key
# ./zabbix_agentd -t system.uptime -c /usr/local/zabbix-2.2.1/etc/zabbix_agentd.conf
system.uptime [u|15923992]
启动 zabbix_agentd
# ./zabbix_agentd -c /usr/local/zabbix-2.2.1/etc/zabbix_agentd.conf
Zabbix 命令：zabbix_sender
zabbix_sender 用途
zabbix获取key值有超时时间，如果自定义的key脚本一般需要执行很长时间，这根本没法去做监控，那怎么办呢？
使用zabbix监控类型zabbix trapper，需要配合zabbix_sender给它传递数据。关于trapper的用法，我们来弄个实
例。
执行超长时间脚本，如：脚本去几十台服务器拉去数据，每个日志都上 G，然后日志整合在一起，统计出返回值。
这种脚本比如超时，所以我们必须改成让客户端提交数据的方式。
命令详解
语法
usage: zabbix_sender [-Vhv] {[-zpsI] -ko | [-zpI] -T -i  -r} [-c ]
使用参数
-c --config  配置文件绝对路径
-z --zabbix-server  zabbix server的IP地址
-p --port  zabbix server端口.默认10051
-s --host  主机名，zabbix里面配置的主机名（不是服务器的hostname），不能使用
ip地址
-I --source-address  源IP
-k --key  监控项的key
-o --value  key值
-i --input-file  从文件里面读取hostname、key、value 一行为一条数据，使用空格作为分隔符，
如果主机名带空格，那么请使用双引号包起来
-T --with-timestamps 一行一条数据，空格作为分隔符:    ，配
合 --input-file option，timestamp为unix时间戳
-r --real-time 将数据实时提交给服务器
-v --verbose 详细模式, -vv 更详细
使用实例
# ./zabbix_sender -s 127.0.0.1 -z 127.0.0.1 -k "ttlsa.trapper" -o 1 -r
info from server: "processed: 0; failed: 1; total: 1; seconds spent: 0.000024"
sent: 1; skipped: 0; total: 1
ttlsa.trapper：是我们定义好的key
-0 1：1是key值
failed：错误数，说了-s不能用ip地址，那么我们改成配置文件中得主机名吧
# ./zabbix_sender -s "Zabbix server" -z 127.0.0.1 -k "ttlsa.trapper" -o 1 -r
info from server: "processed: 1; failed: 0; total: 1; seconds spent: 0.000035"
sent: 1; skipped: 0; total: 1
zabbix_sender批量传递key值
#cat f.txt
"Zabbix server" ttlsa.trapper 10
"Zabbix server" ttlsa.trapper 20
"Zabbix server" ttlsa.trapper 30
"Zabbix server" ttlsa.trapper 40
"Zabbix server" ttlsa.trapper 1
# ./zabbix_sender -z 127.0.0.1 -i f.txt
info from server: "processed: 5; failed: 0; total: 5; seconds spent: 0.000085"
sent: 5; skipped: 0; total: 5
每行对应一个key值，一般是不同的主机名、不同的key、不同的key值。这边方便测试，所以都用了同一个key
Zabbix 命令：zabbix_proxy
zabbix_proxy介绍请看《zabbix proxy分布式配置》 ，zabbix_proxy收集被监控端的数据，先缓存到本地然后把数
据传给zabbix server，因为zabbix_proxy基本上是在收集数据，而不像server一样要处理数据，所以zabbix_proxy
对硬件的要求相对不高，今天主要是来了解zabbix_proxy命令的，往下看吧。
兼容系统
和zabbix server基本一样，server支持什么，proxy就支持什么。请参考《zabbix_server命令详解》
命令详解
使用语法
zabbix_proxy [-hV] [-c ] [-R ]
使用参数
-c --config  配置文件路径
-R --runtime-control  执行管理功能
Runtime control options:
config_cache_reload Reload配置缓存
启动 proxy
# /usr/local/zabbix-2.2.1/sbin/zabbix_proxy -c /usr/local/zabbix-2.2.1/etc/zabbix_proxy.conf
Rreload proxy 配置缓存
# /usr/local/zabbix-2.2.1/sbin/zabbix_proxy -c /usr/local/zabbix-2.2.1/etc/zabbix_proxy.conf -R config_cache_reload
第十五章：分布式监控
zabbix 分布式监控 proxy vs nodes
概述
zabbix 为IT基础设施提供有效和可用的分布式监控,zabbix提供了两种解决方案：proxy和nodes.proxy代替 zabbix
server在本地检索数据，然后提交给zabbix server. Nodes则就是一个完整的zabbix Server.
Proxy vs. node
服务器一多以及服务器分布在各个不同地区，便需要考虑使用分布式监控，那么我们到底选择proxy还是nodes呢,
请看如下的对照表，看完之后，我想你能选到一个你满意的方式.
功能 Proxy Node 描述
轻量级 Yes No 安装完毕即可,Proxy必须更轻量级
GUI/图形界面 No Yes proxy的配置都在servers上，而node是一个完整的server
独立工作 Yes Yes
易于维护 Yes No
自动生成数据库 Yes No
本地管理 No Yes
Ready for embedded Yes No
hardware
One way TCP connections Yes Yes
集中配置 Yes No proxy配置全部集中在server上，node自己维护自己的配置
通知 No Yes
备注：只有SQLite才支持自动创建数据库，其他数据都需要手动创建.
zabbix proxy 分布式监控配置
概述
zabbix proxy可以代替zabbix server检索客户端的数据，然后把数据汇报给zabbix server，并且在一定程度上分担了
zabbix server的压力.zabbix proxy可以非常简便的实现了集中式、分布式监控.
zabbix proxy使用场景:
 监控远程区域设备
 监控本地网络不稳定区域
 当zabbix监控上千设备时，使用它来减轻server的压力
 简化zabbix的维护
 zabbix proxy仅仅需要一条tcp连接到zabbix server,所以防火墙上仅仅需要加上一条规则即可.zabbix proxy数据
库必须和server分开，否则数据会被破坏，毕竟这两个数据库的表大部分都相同。总之记住，数据库分开即可。
 proxy收集到数据之后，首先将数据缓存在本地，然后在一定得时间之后传递给zabbix server.这个时间由proxy
配置文件中参数ProxyLocalBuffer and ProxyOfflineBuffer决定.
 zabbix proxy是一个数据收集器，它不计算触发器、不处理事件、不发送报警，如下是proxy的功能.
Items proxy support(yes/no)
Zabbix agent checks Yes
Zabbix agent checks (active) Yes
Simple checks Yes
Trapper items Yes
SNMP checks Yes
SNMP traps Yes
IPMI checks Yes
JMX checks Yes
Log file monitoring Yes
Internal checks Yes
SSH checks Yes
Telnet checks Yes
External checks Yes
Built-in web monitoring Yes
Network discovery Yes
Low-level discovery Yes
Calculating triggers No
Processing events No
Sending alerts No
Remote commands No
备注：使用agent active模式，一定要记住在agent的配置文件参数ServerActive加上proxy的IP地址.切记
配置
如果你安装好proxy（安装方法我们后续讲）之后，我们便可以在zabbix管理站点上配置proxy了.
添加proxy
ministration（管理） → DM（分布式监控）–>Create proxy（创建代理）
参数 描述
Proxy name proxy名称，必须和proxy配置文件中的hostname一致
Proxy mode 选择proxy模式
Active proxy主动连接到zabbix server并且请求配置文件数据
Passive Zabbix server连接到proxy
Hosts 哪些主机需要被proxy监控
Host配置
配置主机HOST的时候，如果需要被proxy代理，那么都选择对应的proxy名称
第十六章：性能优化
zabbix 性能优化中的几个中肯建议
随着 zabbix 的广泛应用，少数人的 zabbix 服务器在性能上出现瓶颈，或者在未来会出现性能方面的瓶颈，接下来
讨论几个有效并且简单的优化方案。
 服务器硬件
想通过几个简单的配置让服务器提高成倍的性能，想法很好，但是基本不太现实。简单的说，你需要搭配更好
的CPU、更大的内存，更快的硬盘：条件允许的花，可以考虑购买SSD，它比更大的cpu和更大的内存带来的效果
更好，或者考虑使用SAS 15K硬盘，组raid等等，总之一句话，配置优化不动的情况，增加硬件投入，别绞尽脑汁