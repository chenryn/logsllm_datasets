前面的方法使用自动脚本在 Linux 上安装 Docker。
# 还有更多...
为了升级 Docker，您需要在主机上使用包管理器。如果试图重新添加已经添加的存储库，重新运行脚本可能会导致问题。参见前面的食谱，了解如何使用它们各自的包管理器升级 CentOS 和 Ubuntu 上的 Docker。
# 为窗口安装 Docker
Docker for Windows 是一个本机应用，与 Hyper-V 虚拟化以及 Windows 网络和文件系统深度集成。这是一个功能齐全的开发环境，可用于在 Windows 电脑上构建、调试和测试 Docker 应用。它还可以很好地与虚拟专用网络和代理一起工作，使其在企业环境中使用时更容易。
Docker for Windows 开箱即用地支持 Windows 和 Linux 容器，在两者之间切换以构建您的多平台应用非常容易。它配备了 Docker 命令行界面客户端、Docker 编写、Docker 机器和 Docker 公证人。
最近的版本也增加了对 Kubernetes 的支持，这样您只需点击一个按钮，就可以轻松地在您的机器上创建完整的 Kubernetes 环境。
# 准备好
Windows docker 有以下系统要求:
*   64 位 Windows 10 Pro、企业版和教育版(1607 周年更新，版本 14393 或更高版本)
*   虚拟化必须在基本输入输出系统中启用，并且能够支持中央处理器。
*   4 GB 内存
If your system does not satisfy these requirements, fear not—all is not lost. You can install Docker Toolbox ([https://docs.docker.com/toolbox/overview/](https://docs.docker.com/toolbox/overview/)), which uses Oracle VirtualBox instead of Hyper-V. It isn't as good, but it is better than nothing.
# 怎么做
要为 Windows 安装 Docker，请执行以下步骤:
1.  从 Docker 商店[下载 Windows Docker，网址为 https://Store . Docker . com/editions/community/Docker-ce-desktop-Windows](https://store.docker.com/editions/community/docker-ce-desktop-windows)。您需要登录才能下载安装程序。如果您没有 Docker 帐户，您可以在[https://store.docker.com/signup](https://store.docker.com/signup)创建一个。
2.  双击从商店下载的安装文件。应该叫类似`Docker for windows` `Installer.exe`的东西:
![](img/44abbb34-c1c2-4a58-9a94-28e9fe2ca53b.png)
一旦安装完成，它将自动启动。您会在任务栏的通知区域注意到一个小鲸鱼图标。如果需要更改任何设置，右键单击图标并选择设置。
3.  打开命令行终端并检查以确保安装工作正常:
```
 $ docker container run hello-world
```
# 它是如何工作的...
这个食谱将告诉你如何在你的 Windows 机器上安装 Docker 开发环境。
# 还有更多
现在您已经安装了 Docker for Windows，请查看以下提示以充分利用您的安装:
*   视窗 Docker 支持视窗和 Linux 容器。如果你想切换，你只需要右击鲸鱼图标，选择切换到 Windows 容器...，然后单击“切换”按钮:
![](img/272436dd-ac71-4bea-9f61-da10ed1cc077.png)
要切换回来，做同样的事情，除了这次，选择切换到 Linux 容器....
*   Windows docker 将自动检查新的更新，并让您知道何时有新版本可供安装。如果您同意升级，它将下载新版本并为您安装。
*   默认情况下，Kubernetes 不运行。如果你想打开它，你需要右击任务栏中的 Docker whale 图标，然后选择设置。在“设置”菜单中，有一个 Kubernetes 选项卡。单击选项卡，然后单击启用 Kubernetes 选项并点击应用按钮:
![](img/262de802-5483-440e-b973-41ddc1ecca5f.png)
# 请参见
有关 Windows Docker 的更多信息，以及实验室和更多示例的链接，请访问[https://docs.docker.com/docker-for-windows/](https://docs.docker.com/docker-for-windows/)。
# 为 Mac 安装 Docker
Mac 的 Docker 是在 Mac 上运行 Docker 最快、最可靠的方法。它安装了在您的 Mac 上设置完整的 Docker 开发环境所需的所有工具。它包括 Docker 命令行、Docker 编写和 Docker 公证。它还可以很好地与虚拟专用网络和代理一起工作，使其在企业环境中使用时更容易。
最近的版本也增加了对 Kubernetes 的支持，这样您只需点击一个按钮，就可以轻松地在您的机器上创建完整的 Kubernetes 环境。
# 准备好
Docker 有以下系统要求:
*   macOS El Capitan 10.11 或更新的 macOS 版本
*   至少 4 GB 内存
*   Mac 硬件必须是 2010 年或更高版本，英特尔硬件支持**内存管理单元** ( **MMU** )虚拟化，包括**扩展页表** ( **EPT** )和无限制模式。要查看您的机器是否支持此功能，请在终端中运行以下命令:
```
 $ sysctl kern.hv_support
 kern.hv_support: 1
```
If your system does not satisfy these requirements, fear not—all is not lost. You can install Docker Toolbox ([https://docs.docker.com/toolbox/overview/](https://docs.docker.com/toolbox/overview/)), which uses Oracle VirtualBox instead of HyperKit. It isn't as good, but it is better than nothing.
# 怎么做
要为 Mac 安装 Docker，请执行以下步骤:
1.  从 Docker 商店[https://Store . Docker . com/editions/community/Docker-ce-desktop-Mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)下载 Docker for Mac。您需要登录才能下载安装程序。如果您没有 Docker 帐户，您可以在[https://store.docker.com/signup](https://store.docker.com/signup)创建一个。
2.  打开从商店下载的安装文件。应该叫`Docker.dmg`之类的东西。
3.  将鲸鱼图标拖放到应用文件夹中:
![](img/1849e0ce-8c20-4eb8-8ac5-0d761d1d27b0.png)
4.  双击应用文件夹中的 Docker.app 图标启动 Docker，如下图所示:
![](img/1823ad09-a79b-4609-8957-774b46f43abe.png)
5.  系统将提示您使用系统密码授权 Docker.app。这很正常——docker . app 需要特权访问才能安装它的一些组件。单击“确定”并输入您的密码，以便完成安装:
![](img/f65f7067-9145-41c4-a8af-72fc51281b8d.png)
6.  当 Docker 完成后，屏幕右上角的状态菜单中会出现一个小鲸鱼图标，如下图所示:
![](img/4c91110a-0fed-484c-96de-05eec3f7bbd6.png)
7.  如果您点击鲸鱼，您可以访问应用首选项和其他选项。
8.  选择“关于 Docker”按钮以验证您是否拥有最新版本。
9.  检查以确保它已安装并正常工作。打开终端窗口并键入以下内容:
```
 $ docker container run hello-world
```
# 它是如何工作的...
上面的方法将在你的 Mac 上下载并安装一个 Docker 开发环境。
# 还有更多...
现在您已经安装了 Docker for Mac，下面是一些入门的提示:
*   Docker 将自动检查新的更新，并让您知道何时有新版本可供您安装。如果你同意升级，它会做所有的工作，下载新版本并为你安装。
*   默认情况下，Kubernetes 不运行。如果你想打开它，你需要点击状态菜单中的 Docker whale 图标，然后选择首选项。在首选项中，有一个 Kubernetes 选项卡。单击选项卡，然后单击启用库本内斯选项，并点击应用按钮:
![](img/ee1473a9-b1c5-4975-a350-cc5ac7f9746b.png)
# 请参见
请访问*开始使用 Mac Docker*指南，帮助您了解该应用以及如何最好地使用它。你可以在[https://docs.docker.com/docker-for-mac/](https://docs.docker.com/docker-for-mac/)找到它。
# 提取映像并运行容器
我借用下一章的食谱来介绍一些概念。如果食谱不能说明一切，不要担心；我们将在本章后面或接下来的几章中详细介绍这些主题。现在，让我们拉一个映像并运行它。我们还将熟悉 Docker 架构及其在本食谱中的组件。
# 准备好
首先，访问安装了 Docker 的系统。
# 怎么做...
要提取映像并运行容器，请执行以下步骤:
1.  通过运行以下命令拉出映像:
```
 $ docker image pull alpine
```
2.  使用以下命令列出现有映像:
```
 $ docker image ls
```
![](img/8260c771-a9dc-4aca-8199-7ab019da0a9e.png)
3.  使用提取的映像创建容器，并按如下方式列出容器:
```
 $ docker container run -id --name demo alpine ash
```
![](img/1edd62b0-3813-41df-920c-9d0087082f44.png)
# 它是如何工作的…
Docker 采用客户机-服务器架构。它的二进制文件由 Docker 客户端和服务器守护程序组成，可以驻留在同一台主机上。客户端可以通过套接字或 RESTful API 与本地或远程 Docker 守护程序进行通信。Docker 守护进程构建、运行和分发容器。如下图所示，Docker 客户端向主机上运行的 Docker 守护程序发送命令。Docker 守护程序还连接到公共或本地注册表，以获取客户端请求的映像:
![](img/7fbf296f-ee20-4106-9437-86c79d7ca81c.png)
因此，在我们的例子中，Docker 客户端向本地系统上运行的守护程序发送请求，然后守护程序连接到公共 Docker 注册表并下载映像。下载后，我们就可以运行它了。
# 还有更多…
让我们来探究一下我们在本食谱前面遇到的一些关键词:
*   **映像** : Docker 映像是只读模板，在运行时给我们容器。它们是基于一个基本映像和位于其上的图层的想法。例如，我们可以有一个 Alpine 或 Ubuntu 的基础映像，然后我们可以在基础映像上安装软件包或进行修改，以创建一个新的层。基础映像和新图层可以被视为新映像。例如，在下图中，Debian 是基础映像，然后 Emacs 和 Apache 是添加在它上面的两个层。它们高度便携，可以轻松共享:
![](img/6b596aa5-250d-4a92-84fc-0bd8d0bc9c3c.png)
图层透明地放置在基础映像的顶部，以创建一个统一的文件系统。
*   **注册表**:注册表保存 Docker 映像。它可以是公共的或私有的，这取决于您可以下载或上传映像的位置。公共 Docker 登记处被称为**Docker 中心**，我们将在后面介绍。
*   **索引**:索引管理用户帐户、权限、搜索、标记以及 Docker 注册表的公共网络界面中的所有好东西。
*   **容器**:容器运行由基础映像和其上的图层组合而成的映像。它们包含运行应用所需的一切。如上图所示，在启动容器时还添加了一个临时层，如果在容器停止并删除后没有提交，这个临时层将被丢弃。如果它被提交，那么它将创建另一个层。
*   **存储库**:一个映像的不同版本可以通过多个标签进行管理，用不同的 GUID 进行保存。存储库是由 GUIDs 跟踪的映像的集合。
# 请参见
有关更多信息，请查看 Docker 网站上的文档，网址为[https://docs.docker.com/engine/docker-overview/](https://docs.docker.com/engine/docker-overview/)。
# 添加非根用户来管理 Docker
为了便于使用，我们可以允许非根用户通过将其添加到 Docker 组来管理 Docker。在 Mac 或 Windows 上使用 Docker 时，这不是必需的。
# 准备好
要准备添加非根用户来管理 Docker，请执行以下步骤:
1.  创建 Docker 组(如果还没有):
```
 $ sudo groupadd docker
```
2.  创建要授予其管理 Docker 权限的用户:
```
 $ sudo useradd dockertest
```
# 怎么做...
运行以下命令，将新创建的用户添加到 Docker 中进行管理:
```
 $ sudo usermod -aG docker dockertest
```
# 它是如何工作的…
前面的命令将用户添加到 Docker 组。这样，添加的用户将能够执行所有 Docker 操作。
# 使用 Docker 命令行查找帮助
Docker 命令被很好地记录下来，并且可以在任何需要的时候被引用。许多文档也可以在线获得，但是它可能与您正在运行的 Docker 版本的文档不同。
# 准备好
首先，在您的系统上安装 Docker。
# 怎么做…
1.  在基于 Linux 的系统上，您可以使用`man`命令来查找帮助，如下所示:
```
 $ man docker
```
2.  也可以通过以下任一命令找到特定于子命令的帮助:
```
 $ man docker ps
 $ man docker-ps
```
# 它是如何工作的…
`man`命令使用 Docker 包安装的`man`页面提供帮助。
# 请参见
有关更多信息，请参见 Docker 网站上位于[https://docs.docker.com/engine/reference/commandline/cli/](https://docs.docker.com/engine/reference/commandline/cli/)的文档。