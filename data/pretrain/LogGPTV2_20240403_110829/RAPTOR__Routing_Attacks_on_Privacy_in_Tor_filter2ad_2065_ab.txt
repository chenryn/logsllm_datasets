### Dresses (Anonymity Set) Associated with a Guard Relay

The anonymity set associated with a guard relay, and the target connection to a sensitive web server, is a critical aspect of maintaining user privacy. In a prefix-hijack attack, the captured traffic is blackholed, leading to the eventual termination of the client's connection to the guard. This makes it challenging to perform fine-grained traffic analysis to infer the true client identity from this anonymity set. However, even the identification of a reduced anonymity set (as opposed to the entire set of Tor users) represents significant information leakage. This reduced set can be combined with other contextual information to break user anonymity [18]. In Section 5, we detail several real-world BGP hijack attacks where Tor relays were among the targeted prefixes.

### 2.4 BGP Interception

The BGP hijack attack discussed above allows adversaries to capture traffic destined for a target Tor prefix. However, the captured traffic is blackholed, resulting in the connection being dropped. We now discuss a more sophisticated routing attack called the BGP interception attack [16], which enables exact deanonymization of Tor users.

#### BGP Interception Attack

A prefix interception attack allows a malicious AS to become an intermediate AS in the path towards the guard relay. After interception, the traffic is routed back to the actual guard relay, keeping the connection alive. This setup enables the malicious AS to exactly deanonymize the client via asymmetric traffic analysis.

Consider an adversary attempting to deanonymize a user connecting to a sensitive website. The adversary can first uncover the identity of the guard relay using existing attacks [39] and then launch a prefix interception attack against the guard relay. Since the adversary routes the traffic back to the guard relay, the client’s connection remains active, allowing the adversary to launch asymmetric traffic correlation attacks. Unlike BGP hijack attacks, BGP interception attacks can perform exact deanonymization of Tor clients.

These attacks enable malicious ASes to deanonymize user identities corresponding to monitored target connections. Similarly, ASes that already see the client’s traffic to its guard can position themselves to observe the traffic between the server and the exit relay by launching interception attacks against exit relays. Figure 3 illustrates this attack scenario.

Finally, a remote adversary can simultaneously launch interception attacks against both guard relays and exit relays to perform general surveillance of the Tor network. In Section 5, we demonstrate a real-world BGP interception attack against a live Tor relay in collaboration with autonomous system operators.

### 3 Asymmetric Traffic Analysis

In this section, we experimentally show that asymmetric traffic analysis attacks are feasible using the live Tor network. To protect the safety of real Tor users, we generate our own traffic through the Tor network. Our goal is to investigate the accuracy of asymmetric traffic analysis in deanonymizing our generated traffic.

#### Experimental Setup

To generate our own traffic through the live Tor network, we use PlanetLab nodes as clients and web servers. PlanetLab is an open platform for networking research, providing access to hundreds of geographically distributed machines. We randomly selected 100 machines on PlanetLab, located across the United States, Europe, and Asia. We installed Tor clients on 50 of these machines and used the Privoxy tool (www.privoxy.org) to configure wget requests to tunnel over Tor. The remaining 50 machines were set up as web servers, each containing a 100MB image file.

We used the default Tor configuration on the 50 client machines. We launched wget requests on the 50 clients simultaneously, each requesting a 100MB image file from one of the 50 web servers. We used tcpdump to capture data for 300 seconds at the clients and the servers during this process.

#### Asymmetric Correlation Analysis

In each packet trace, we first extracted the TCP sequence number and TCP acknowledgment number fields in the TCP header. Using these numbers, we computed the number of transmitted data bytes per unit time. For each pair of observed traces, we computed the correlation between the vector of transmitted data bytes over time. For our analysis, we used the Spearman’s rank correlation coefficient (other correlation metrics could also be applicable). For each client, our asymmetric traffic analysis attack selected the server trace with the highest correlation as the best match.

#### Results

Figure 4 illustrates our asymmetric analysis computed between a communicating client-server pair, showing high correlation in all four observation scenarios discussed in Section 2. Figure 5 illustrates our asymmetric analysis computed between a non-communicating client-server pair, showing poor correlation in all four observation scenarios. Figure 6 shows that the detection accuracy rate increases as the duration of the attack increases, especially in the first 30 seconds.

We computed the detection accuracy of our asymmetric traffic analysis attacks in all four scenarios after 300 seconds (by selecting the highest correlated pair), and obtained an average accuracy of 95% (Table 2). All error matches were false negatives, where the client had insignificant correlation coefficients with all servers, failing to be matched to any servers. No false positives were observed in our results.

| Scenario | False Negative | False Positive |
|----------|----------------|----------------|
| Client ACK/Server ACK | 96% | 4% |
| Client ACK/Server Data | 94% | 6% |
| Client Data/Server ACK | 96% | 4% |
| Client Data/Server Data | 94% | 6% |

**Table 2: Asymmetric Traffic Analysis Accuracy Rate**

In addition to the actual observed error rate, we performed statistical tests to compute the 95% confidence interval on our error rate, given our sample size of 50 client machines and 50 server machines. Table 3 illustrates the confidence intervals on our error rates.

| Scenario | False Negative | False Positive |
|----------|----------------|----------------|
| Client ACK/Server ACK | 0.48% – 13.71% | 0% – 0.15% |
| Client ACK/Server Data | 1.25% – 16.54% | 0% – 0.15% |
| Client Data/Server ACK | 0.48% – 13.71% | 0% – 0.15% |
| Client Data/Server Data | 1.25% – 16.54% | 0% – 0.15% |

**Table 3: Asymmetric Traffic Analysis Error Rate Confidence Interval**

### 4 Natural Churn

In this section, we study and evaluate how routing dynamics, or churn, increase the power of AS-level adversaries in anonymity systems such as Tor. We start with an exhaustive control-plane analysis using collected BGP data.