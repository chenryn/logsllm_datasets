for resource-constrained devices. We refer the reader to [37] for
more BA protocols. In this work, we focus on designing a light-
weight signature scheme that has an optimized lightweight signing
procedure.
Online/Offline Signature. To enable the digital signature on a
resource-constrained device, the online/offline signature scheme
was invented [10]. The idea of such a scheme is to run those ex-
pensive public-key cryptographic operations (such as the exponen-
tiation) in a signature scheme at the offline phase and pre-store
the intermediate private data on the device, so that in the online
phase the signer can sign a message in very fast speed with a few
cheap arithmetic operations. Hence, the online/offline signatures
are suitable for many applications where the signer (e.g., sensors
or RFID) has very limited computational resources. In 2013, Yao
and Zhao proposed a variant of Fiat-Shamir paradigm [38] called
Γ-transformation that can transform Fiat-Shamir style signature
schemes (such as Schnorr [9]) into efficient online/offline signa-
ture schemes. The security of their scheme is further studied in
[39]. Moreover, there are also some variants [40–42] which are
proposed in the identity-based setting. However, a shortcoming of
online/offline signatures is that they require the signer to pre-store
a non-trivial amount of intermediate private data, and this data
needs to be replenished when it is used out. Thus, it does not fit
cyber-physical systems that have a high demand for continuous
message authentication without interruptions. In contrast, we are
interested in the lightweight signature schemes that have a small
constant-sized storage cost for the signer without any need for
replenishment.
In 2019, Yavuz and Ozmen [13] proposed a lightweight signature
scheme called SEMECS, which is adapted from the Schnorr signa-
ture. To facilitate the signature generation, SEMECS particularly
chain up the exponents of verification keys, such that rj := H(rj−1),
where the j-th verification key is computed as дrj and д is the group
generator of a cyclic abelian group, so that it can pre-compute all
verification keys in advance. To sign a message mj, the signer only
needs to compute the randomness of the Schnorr signature by using
one multiplication and one subtraction, i.e., sj := rj −mj · sk, where
sk is the signing key. However, the SEMECS does not consider the
verification key replenishment problem like our schemes. Hence,
it is not suitable for continuous message authentication. Note that
it is not allowed to outsource the verification key replenishment
procedure to a third party or the verifier by handing over the seed
rj−1. Once the attackers get rj and rj−1, and the corresponding
messages (mj−1, mj), it can trivially extract the signing key. Our
scheme does not have this problem since we only chain up the
randomness.
Message Authentication using Chameleon Hash. Chameleon
hash functions (CHF) [15] are not only probabilistic (randomized)
collision-resistant but also adaptable with a trapdoor (i.e., one can
efficiently generate hash collisions based on the given trapdoor).
CHF is widely used as a building block in various cryptographic
primitives and protocols. In 2010, Mohassel[43] proposed a general
construction for transforming any chameleon hash function to a
strongly unforgeable one-time signature scheme. But, unlike ours,
it did not build a regular (multiple-times) signature scheme for
continuous message authentication in cyber-physical systems. CHF
is also used in many real-world application such as the vehicular
communications [44], verifiable data streaming [45], and rewritable
block-chains [46]. However, all these constructions require the
(message) sender to compute the hash value of the CHF, which
involves two expensive exponentiation operations. In contrast, we
use the chameleon hash function in a different way by leverag-
ing the collision generation function to generate the signatures.
Therefore our signing procedure is much more efficient.
10 CONCLUSIONS
In this work, we proposed a signature framework called LiS, which
consists of two concrete signature schemes based on chameleon
hash functions. The proposed signature schemes have very fast
signing algorithms and require a small constant storage cost on the
signing device, so they are particularly suitable for cyber-physical
systems with continuous message authentication services. We also
implemented our schemes on embedded devices to show the prac-
ticality of our schemes. In contrast to prior work (especially on-
line/offline signatures), our schemes have much smaller storage
Session 14: CPS Security ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan729cost, and the signing key does not need to be replenished during its
whole lifespan. In addition, we discuss the potential applications of
our signature schemes in specific types of cyber-physical systems.
An open problem remaining is how to modify LiS further to pro-
vide public verifiability without using SAR. One may check whether
the state-of-the-art cryptographic technique: indistinguishability
obfuscators (IO) [47, 48] can work in this scenario. For instance,
one may apply IO to obfuscate our modified verification algorithms
to hide the dummy randomness r′.
ACKNOWLEDGMENTS
We would like to thank the anonymous reviewers for their helpful
comments. This research is supported by A*STAR under its RIE2020
Advanced Manufacturing and Engineering (AME) Industry Align-
ment Fund - Pre Positioning (IAF-PP) Award A19D6a0053. Any
opinions, findings and conclusions or recommendations expressed
in this material are those of the author(s) and do not reflect the
views of A*STAR. This was partially supported by the Natural Sci-
ence Foundation of China under Grant No. 61872051 and 61402085.
Chenglu Jin’s work was done when he was with the University
of Connecticut and was supported by AFOSR MURI under award
number FA9550-14-1-0351.
REFERENCES
[1] Nicolas Falliere, Liam O Murchu, and Eric Chien. 2011. W32. stuxnet dossier.
White paper, Symantec Corp., Security Response 5, 6 (2011), 29.
[2] Eduard Kovacs. [n.d.]. Attackers Alter Water Treatment Systems in Utility
Hack: Report. https://www.securityweek.com/attackers-alter-water-treatment-
systems-utility-hack-report.
[3] Chuadhry Mujeeb Ahmed, Jianying Zhou, Aditya Mathur, Rizwan Qadeer, Reza
Rahaeimehr, Carlos Murguia, and Justin Ruths. 2018. NoisePrint: Attack Detec-
tion Using Sensor and Process Noise Fingerprint in Cyber Physical Systems. In
AsiaCCS. Springer, 483–497.
[4] Nils Ole Tippenhauer, Christina Pöpper, Kasper Bonne Rasmussen, and Srdjan
Capkun. 2011. On the requirements for successful GPS spoofing attacks. In CCS.
ACM, 75–86.
[5] Yao Liu, Peng Ning, and Michael K Reiter. 2011. False data injection attacks
against state estimation in electric power grids. ACM Transactions on Information
and System Security (TISSEC) 14, 1 (2011), 13.
[6] Marten van Dijk, Chenglu Jin, Hoda Maleki, Phuong Ha Nguyen, and Reza
Rahaeimehr. 2018. Weak-Unforgeable Tags for Secure Supply Chain Management.
In FC. Springer, 80-98.
[7] Taher A El Gamal. 1984. Cryptography and logarithms over finite fields. Ph.D.
[8] Nils Fleischhacker, Tibor Jager, and Dominique Schröder. 2019. On Tight Security
Dissertation. UMI.
[9] Claus-Peter Schnorr. 1989. Efficient Identification and Signatures for Smart Cards.
[11] Adi Shamir and Yael Tauman. 2001. Improved Online/Offline Signature Schemes.
[10] Shimon Even, Oded Goldreich, and Silvio Micali. 1996. On-Line/Off-Line Digital
Proofs for Schnorr Signatures. J. Cryptology 32, 2 (2019), 566–599.
In CRYPTO. Springer, 239–252.
Signatures. J. Cryptology 9, 1 (1996), 35–67.
In CRYPTO. Springer, 355–367.
[12] Andrew Chi-Chih Yao and Yunlei Zhao. 2013. Online/Offline Signatures for
Low-Power Devices. IEEE Trans. Information Forensics and Security 8, 2 (2013),
283–294.
[13] A. A. Yavuz and M. O. Ozmen. 2019. Ultra Lightweight Multiple-time Digital
IEEE Transactions on Services
https://en.wikipedia.org/wiki/
Signature for the Internet of Things Devices.
Computing (2019), 1–1. https://doi.org/10.1109/TSC.2019.2928303
\Automatic_identification_system. Accessed: 2019-07-25.
Automatic identification system.
[15] Hugo Krawczyk and Tal Rabin. 2000. Chameleon Signatures. In NDSS. The
[16] Burton H Bloom. 1970. Space/time trade-offs in hash coding with allowable
Internet Society.
[14] [n.d.].
[17] Larry Carter and Mark N. Wegman. 1977. Universal Classes of Hash Functions
errors. Commun. ACM 13, 7 (1970), 422-426.
(Extended Abstract). In STOC. ACM, 106–112.
replacement. In SODA. SIAM, 823–829.
EUROCRYPT. Springer, 92–111.
[18] Anna Pagh, Rasmus Pagh, and S. Srinivasa Rao. 2005. An optimal Bloom filter
[19] Mihir Bellare and Phillip Rogaway. 1994. Optimal Asymmetric Encryption. In
[20] Dan Boneh and Xavier Boyen. 2004. Short Signatures Without Random Oracles.
[21] Victor Shoup. 2004. Sequences of games: a tool for taming complexity in security
In EUROCRYPT. Springer, 56–73.
proofs. IACR Cryptology ePrint Archive 2004 (2004), 332.
[22] PUB FIPS. 2012. 180-4. Secure hash standard (SHS),âĂİ March (2012).
[23] Martin Dietzfelbinger, Torben Hagerup, Jyrki Katajainen, and Martti Pentto-
nen. 1997. A Reliable Randomized Algorithm for the Closest-Pair Problem. J.
Algorithms 25, 1 (1997), 19–51.
[24] A. Jafarnia-Jahromi, A. Broumandan, J. Nielsen, and G. Lachapelle. 2012. GPS
vulnerability to spoofing threats and a review of Antispoofing techniques. Int J
Navigation and Observation 2012 (2012).
[25] Eric Horton and Prakash Ranganathan. 2018. Development of a GPS spoofing
apparatus to attack a DJI Matrice 100 Quadcopter. The Journal of Global Positioning
Systems 16, 1 (03 Jul 2018), 9.
[26] Gyorgy Dan and Henrik Sandberg. 2010. Stealth attacks and protection schemes
for state estimators in power systems. In SmartGridComm. IEEE, 214–219.
[27] Emiliano Sisinni, Abusayeed Saifullah, Song Han, Ulf Jennehag, and Mikael
Gidlund. 2018.
Industrial internet of things: Challenges, opportunities, and
directions. IEEE Transactions on Industrial Informatics 14, 11 (2018), 4724–4734.
[28] Miracl 2018. MIRACL Cryptographic Library. https://bit.ly/2MltKVG
[29] Adrian Perrig, Ran Canetti, Dawn Song, Professor Doug Tygar, and Bob Briscoe.
2005. Timed Efficient Stream Loss-Tolerant Authentication (TESLA): Multicast
Source Authentication Transform Introduction. RFC 4082. https://doi.org/10.
17487/RFC4082
[30] Adrian Perrig, Ran Canetti, Dawn Xiaodong Song, and J. D. Tygar. 2001. Efficient
and Secure Source Authentication for Multicast. In NDSS. The Internet Society.
[31] Adrian Perrig, Robert Szewczyk, J. D. Tygar, Victor Wen, and David E. Culler.
2002. SPINS: Security Protocols for Sensor Networks. Wireless Networks 8, 5
(2002), 521–534.
[32] Donggang Liu and Peng Ning. 2004. Multilevel µTESLA: Broadcast authentication
for distributed sensor networks. ACM Trans. Embedded Comput. Syst. 3, 4 (2004),
800–836.
[33] Adrian Perrig. 2001. The BiBa one-time signature and broadcast authentication
protocol. In CCS. ACM, 28–37.
[34] Shang-Ming Chang, Shiuhpyng Shieh, Warren W. Lin, and Chih-Ming Hsieh.
2006. An efficient broadcast authentication scheme in wireless sensor networks.
In AsiaCCS. ACM, 311–320.
[35] Jaeheung Lee, Seokhyun Kim, Yookun Cho, Yoojin Chung, and Yongsu Park. 2012.
HORSIC: An efficient one-time signature scheme for wireless sensor networks.
Inf. Process. Lett. 112, 20 (2012), 783–787.
[36] Farah Afianti, Wirawan, and Titiek Suryani. 2018. Dynamic Cipher Puzzle for
Efficient Broadcast Authentication in Wireless Sensor Networks. Sensors 18, 11
(2018), 4021.
[37] Kanika Grover and Alvin S. Lim. 2015. A survey of broadcast authentication
[38] Amos Fiat and Adi Shamir. 1986. How to Prove Yourself: Practical Solutions to
[43] Payman Mohassel. 2010. One-Time Signatures and Chameleon Hash Functions.
schemes for wireless networks. Ad Hoc Networks 24 (2015), 288–316.
Identification and Signature Problems. In CRYPTO. Springer, 186–194.
[39] Özgür Dagdelen, David Galindo, Pascal Véron, Sidi Mohamed El Yousfi Alaoui,
and Pierre-Louis Cayrel. 2016. Extended security arguments for signature
schemes. Des. Codes Cryptogr. 78, 2 (2016), 441–461.
[40] Joseph K. Liu, Joonsang Baek, Jianying Zhou, and Jun Wen Wong. 2010. Efficient
online/offline identity-based signature for wireless sensor network. Int. J. Inf.
Sec. 9, 4 (2010), 287–296.
[41] Ya Gao, Peng Zeng, Kim-Kwang Raymond Choo, and Fu Song. 2016. An Improved
Online/Offline Identity-Based Signature Scheme for WSNs. I. J. Network Security
18, 6 (2016), 1143–1151.
[42] Chandrashekhar Meshram, Chun-Ta Li, and Sarita Gajbhiye Meshram. 2019. An
efficient online/offline ID-based short signature procedure using extended chaotic
maps. Soft Comput. 23, 3 (2019), 747–753.
In SAC. Springer, 302–319.
[44] Song Guo, Deze Zeng, and Yang Xiang. 2014. Chameleon Hashing for Secure
and Privacy-Preserving Vehicular Communications. IEEE Trans. Parallel Distrib.
Syst. 25, 11 (2014), 2794–2803.
[45] Johannes Krupp, Dominique Schröder, Mark Simkin, Dario Fiore, Giuseppe Ate-
niese, and Stefan Nürnberger. 2016. Nearly Optimal Verifiable Data Streaming.
In PKC. Springer, 417–445.
[46] David Derler, Kai Samelin, Daniel Slamanig, and Christoph Striecks. 2019. Fine-
Grained and Controlled Rewriting in Blockchains: Chameleon-Hashing Gone
Attribute-Based. In NDSS. The Internet Society.
from Functional Encryption. J. ACM 65, 6 (2018), 39:1–39:37.
[48] Shweta Agrawal. 2019. Indistinguishability Obfuscation Without Multilinear
Maps: New Methods for Bootstrapping and Instantiation. In EUROCRYPT (1).
Springer, 191–225.
[49] Sven Schäge. 2011. Tight Proofs for Signature Schemes without Random Oracles.
[47] Nir Bitansky and Vinod Vaikuntanathan. 2018. Indistinguishability Obfuscation
In EUROCRYPT. Springer, 189–206.
Session 14: CPS Security ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan730A THE ORIGINAL DISCRETE LOGARITHM
BASED CHAMELEON
In the following, we briefly review the discrete logarithm based
chameleon hash function of [15].
• CHKGen(1κ): The key generation algorithm samples ran-
$← Zq and a secret key skCH
$← Zq,
dom group generator д
and computes the public key pkCH := дskCH (mod p).
• CHF(pkCH, m, r): The evaluation algorithm takes as input a
public key pkCH ∈ Z∗
q and a randomness
r ∈ Z∗
• CHColl(skCH, r′, m, m′): An efficient deterministic collision
algorithm CHColl takes as input the secret key skCH, and
(r′, m′, m) ∈ Z∗
(mod q).
q, and outputs a hash value y := дmpkr
q, outputs a value r′ := m+r ·skCH−m′
p, a message m ∈ Z∗
CH (mod p).
skCH
B PROOF OF THEOREM 4.1
denote an event that there exists an adversary A wins in
Let BKi
Game i. Note that BK0 is the advantage of A breaking the scheme
in the real game. In the following, we will change the games starting
from the real game until the last game in which the advantage of
A is zero.
Game 0. This game equals to the real SEUF-wCMA security ex-
periment of the digital signature scheme. Meanwhile, all queries
are answered honestly according to the specification of LiS1. Thus,
we have that
Pr[BK0] = Adv0 = AdvSIGA,LiS1(κ, ℓ).
Game 1. This game proceeds like before but the challenger uses the
ℓ uniformly distributed dummy randomness {r′
i }i∈[ℓ] to generate
the verification key without using the universal hash function UHF.
This modification actually does not change the distribution of the
dummy randomness. Recall that the seed of UHF is a random value
r0, and the hash keys of UHF are random in our design as well.
Thus, the outputs of UHF are distributed uniformly in terms of
Definition 2.1. Hence, we can just randomly choose those dummy
randomnesses {r′
i }i∈[ℓ]. Thus, we have that
Pr[BK1] = Pr[BK0].
Game 2. This game proceeds like before, but the challenger changes
$← RCH for each
the game as follows. It chooses the randomness xi
message mi ∈ M (submitted by A) as the signature instead of
running the collision generation function CHColl. The verifica-
tion key is generated using the real signature and message pairs,
i.e., {(xi , mi)}i∈[ℓ]. Note that xi
i − mi · skCH
(mod q). We can rewrite xi as xi := r′
+ ˜mi (mod q) where ˜mi =
M · skCH − mi · skCH. Since each mi is unique, so is ˜mi. We claim
that each xi is statistically close to a uniform random value with
distance 0. The proof of this claim could follow the proof of the
combining functions of [49, Lemma 1]. Thus, we have that
:= M · skCH + r′
i
Pr[BK2] = Pr[BK1].
In this game, the challenger C proceeds exactly like
Game 3.
the previous game but adds an abort rule. Namely, C aborts if the
adversary submits a tuple (m∗, x∗) which leads to a collision to one
of those hash values recorded in BF, i.e., CHF(m∗, x∗) = CHF(M, r′
i)
for some r′
. If this case occurs with a non-negligible probability
AdvCHA,CHF(κ), then we can construct an efficient algorithm F by
i
using A to break the security of the chameleon hash function.
Specifically, F could simulate the signature game for A while re-
ceiving a challenge public key pk∗
from the chameleon hash chal-
lenger. However, without knowing the secret key sk∗
, F cannot
compute the collisions online as done in LiS1. Instead, F uses the
real signatures randomly chosen as the previous game to generate
the verification key rather than using dummy message/randomness
pairs. This change is possible because of the modifications in the
previous games.
Due to the security of chameleon hash function, we have that
CH
CH
Pr[BK2] ≤ Pr[BK3] + AdvCHA,CHF(κ).
Game 4. In this game, C proceeds as before, but aborts if the adver-
sary A submits a tuple (m∗, x∗) such that Check(CHF(m∗, x∗)) = 1
and (m∗, x∗) has not been queried by the adversary before, i.e., A
finds a false positive error of BF. By applying the false positive
probability of BF, we have that
Pr[BK3] ≤ Pr[BK4] + 2−ϵ .
In this game, if C does not abort then the Proc.Finalize query
would always return 0. Thus, the advantage of A in this game is
zero, i.e., Pr[BK4] = 0.
the following probability:
Putting the probabilities altogether in the above games, we have
Adv0 ≤ AdvCHA,CHF(κ) + 2−ϵ
, which is the result of Theorem 4.1.
Session 14: CPS Security ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan731