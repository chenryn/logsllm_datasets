processoptimizatioininthebanditsetting:Noregretand Methodology),63:411–423,2001.
experimentaldesign.InProceedingsofthe27th [56] R.J.Tibshirani,A.Rinaldo,R.Tibshirani,and
InternationalConferenceonMachineLearning,2010. L.Wasserman.Uniformasymptoticinferenceandthe
[46] M.Stonebraker,S.Madden,andP.Dubey.Intel"bigdata" bootstrapaftermodelselection.arXivpreprint
scienceandtechnologycentervisionandexecutionplan. arXiv:1506.06266,2015.
SIGMODRec.,42(1):44–49,May2013. [57] R.J.Tibshirani,J.Taylor,R.Lockhart,andR.Tibshirani.
[47] A.J.Storm,C.Garcia-Arellano,S.S.Lightstone,Y.Diao, Exactpost-selectioninferenceforsequentialregression
andM.Surendra.Adaptiveself-tuningmemoryinDB2.In procedures.arXivpreprintarXiv:1401.3889,2014.
VLDB,pages1081–1092,2006. [58] D.N.Tran,P.C.Huynh,Y.C.Tay,andA.K.H.Tung.A
[48] C.Sugar.Techniquesforclusteringandclassificationwith newapproachtodynamicself-tuningofdatabasebuffers.
applicationstomedicalproblems.PhDthesis,Stanford Trans.Storage,4(1):3:1–3:25,May2008.
University,1998. [59] G.Valentin,M.Zuliani,D.Zilio,G.Lohman,and
[49] D.G.Sullivan,M.I.Seltzer,andA.Pfeffer.Using A.Skelley.DB2advisor:anoptimizersmartenoughto
probabilisticreasoningtoautomatesoftwaretuning. recommenditsownindexes.InICDE,pages101–110,2000.
SIGMETRICS,pages404–405,2004. [60] G.Weikum,C.Hasse,A.Mönkeberg,andP.Zabback.The
[50] M.A.etal.TensorFlow:Large-ScaleMachineLearningon COMFORTautomatictuningproject.InformationSystems,
HeterogeneousDistributedSystems.CoRR,abs/1603.04467, 19(5):381–432,July1994.
2016. [61] B.Xi,Z.Liu,M.Raghavachari,C.H.Xia,andL.Zhang.A
[51] TheTransactionProcessingCouncil.TPC-CBenchmark smarthill-climbingalgorithmforapplicationserver
(Revision5.9.0). configuration.InWWW,pages287–296,2004.
http://www.tpc.org/tpcc/spec/tpcc_current.pdf,June2007. [62] K.Yagoub,P.Belknap,B.Dageville,K.Dias,S.Joshi,and
[52] TheTransactionProcessingCouncil.TPC-HBenchmark H.Yu.Oracle’ssqlperformanceanalyzer.IEEEData
(Revision2.16.0). EngineeringBulletin,31(1),2008.
http://www.tpc.org/tpch/spec/tpch2.16.0.pdf,December [63] D.Y.Yoon,N.Niu,andB.Mozafari.DBSherlock:a
2013. performancediagnostictoolfortransactionaldatabases.In
[53] W.Tian,P.Martin,andW.Powley.Techniquesfor SIGMOD,pages1599–1614,2016.
automaticallysizingmultiplebufferpoolsinDB2.In [64] C.Zhang,A.Kumar,andC.Ré.Materialization
CASCON,pages294–302,2003. optimizationsforfeatureselectionworkloads.InSIGMOD,
[54] R.Tibshirani.Regressionshrinkageandselectionviathe pages265–276,2014.
lasso.JournaloftheRoyalStatisticalSociety.SeriesB [65] D.C.Zilio.PhysicalDatabaseDesignDecisionAlgorithms
(Methodological),58:267–288,1996. andConcurrentReorganizationforParallelDatabase
[55] R.Tibshirani,G.Walther,andT.Hastie.Estimatingthe Systems.PhDthesis,UniversityofToronto,1998.
numberofclustersinadatasetviathegapstatistic.Journal
1022
innodbbufferpoolsize innodbmaxdirtypagespctlwm2 knobs (or function of knobs) have on the 99th percentile latency.
innodblogfilesize2 innodbbufferpoolsize2 OtterTuneusesthisorderingtoranktheknobsfrommosttoleast
innodbflushmethod2 innodbthreadsleepdelay2 important.
innodbthreadsleepdelay innodbthreadconcurrency2 AsdescribedinSect.5.2,OtterTuneincludessecond-degreepoly-
nomialfeaturestoimprovetheaccuracyofitsregressionmodels.
0.30
Thetwotypesoffeaturesthatresultfromthesecond-orderpoly-
nomialexpansionofthelinearfeaturesareproductsofeithertwo
0.20
distinctknobsorthesameknob.Thefirsttypeareusefulfordetect-
sthgieW
ingpairsofknobsthatarenon-independent. Forexample,Fig.13
0.10
showsthatadependencyexistsbetweentwooftheknobsthatcon-
trolaspectsofthequeryoptimizer:default_statistics_target
0.00 andeffective_cache_size.
Thesecondtyperevealswhetheraquadraticrelationshipexists
-0.10 betweenaknobandthetargetmetric.Whenwesaythatarelation-
L1penalty(decreasing)
shipis“quadratic”,wedonotmeanthatitisanexactquadratic,but
Figure12:LassoPath(MySQL) ratherthatitexhibitssomenonlinearity. Ifthelinearandquadratic
terms for a knob both appear in the regression around the same
effectivecachesize2 bgwriterlrumaxpages time,thenitsrelationshipwiththetargetmetricislikelyquadratic.
sharedbuffers defaultstatstarget effectivecachesize
∗ But if the linear term for a knob appears in the regression much
checkpointsegments2 deadlocktimeout effectivecachesize
∗ earlierthanthequadratictermthentherelationshipisnearlylinear.
checkpointsegments effectivecachesize
OneknobthattheDBMSshaveincommonisthesizeofthebuffer
0.03 pool. Figs. 12 to 14 show that, as expected, the relationship be-
tweenthebufferpoolsizeknobandthelatencyisquadraticforall
0.02 oftheDBMSs(thequadratictermforPostgres’knobisnotshown
butisthe13thtoentertheregression). sthgieW
0.01
B. EFFICACYCOMPARISON
0.00 ThissectionisanextensionofSect.7.6,whereweprovidethe
DBMSconfigurationsgeneratedbyOtterTune,theDBA,thetuning
-0.01 script,andAmazonAWSthatwereusedintheevaluation.Tables1
L1penalty(decreasing)
and2showtheconfigurationsfortheTPC-Cworkloadrunningon
Figure13:LassoPath(Postgres) MySQLandPostgres, respectively. Fortheconfigurationsgener-
ated by OtterTune, the tables display only the 10 most impactful
engine.maxparallelismlevel system.vectorsize2 knobs,whichareorderedbyimportance. Forallotherconfigura-
cbm.bufferpoolsize cbm.bufferpoolsize2 tions,theknobsarepresentedinlexicographicalorder.
system.vectorsize memory.hugetlblim2
engine.maxparallelismlevel2 system.maxoldlogsize2
C. FUTUREWORK
0.60
Thereareimportantproblemsthatremainunsolvedinthisline
ofwork.ForemostisthatwewanttoenableOtterTunetoautomat-
0.30
icallydetectthehardwarecapabilitiesofthetargetDBMS.Thisis
sthgieW
trickybecauseitmustbeabletodosowithonlyremoteaccessto
0.00 the DBMS’s host machine. This restriction is necessary because
oftheprevalenceofdatabase-as-a-servicedeploymentswheresuch
-0.30 access is not available. One approach might be for OtterTune to
executeamicrobenchmarkbeforeitbeginstheworkloadmapping
-0.60 stepthatwouldstressdifferentresourcesintheDBMSseparately.
L1penalty(decreasing)
Anotherproblemthatweplantoexploreishowtoadapttheauto-
Figure14:LassoPath(Vector) tuningtechniquesdescribedinthispapertooptimizethephysical
design of a database. In particular, we are interested in leverag-
APPENDIX
ing data from previous tunings to speed up the process of tuning
a new application. Similar to tuning DBMS configurations, tun-
A. IDENTIFYINGIMPORTANTKNOBS
ing the physical design is becoming increasingly complex to the
ThissectionextendsthediscussionoftheLassopathalgorithm point where techniques that are able to reduce the complexity of
presentedinSect.5.1.TheresultsinFigs.12to14showtheLasso theproblemarebecomingmoreandmorenecessary.
pathscomputedforthe99thpercentilelatencyforMySQL,Post-
gres,andVector,respectively. Forclarity,weshowonlytheeight D. ACKNOWLEDGEMENTS
most impactful features in these results. Each curve represents a
This research was funded (in part) by the U.S. National Sci-
different feature of the regression model’s weight vector. These
enceFoundation(III-1423210),theNationalScienceFoundation’s
figuresshowthepathsoftheseweightsbyplottingthemasafunc-
tionoftheL penalty. Theorderinwhichtheweightsappearin GraduateResearchFellowshipProgram(DGE-1252522),andAWS
1
CloudCreditsforResearch.
theregressionindicateshowmuchofanimpactthecorresponding
1023
(a)OtterTuneConfiguration(Postgres) (a)OtterTuneConfiguration(MySQL)
shared_buffers 4G innodb_buffer_pool_size 8.8G
checkpoint_segments 540 innodb_thread_sleep_delay 0
effective_cache_size 18G innodb_flush_method O_DIRECT
bgwriter_lru_maxpages 1000 innodb_log_file_size 1.3G
bgwriter_delay 213ms innodb_thread_concurrency 0
checkpoint_completion_target 0.8 innodb_max_dirty_pages_pct_lwm 0
deadlock_timeout 6s innodb_read_ahead_threshold 56
default_statistics_target 78 innodb_adaptive_max_sleep_delay 150000
effective_io_concurrency 3 innodb_buffer_pool_instances 8
checkpoint_timeout 1h thread_cache_size 9
(b)DBAConfiguration(Postgres) (b)DBAConfiguration(MySQL)
bgwriter_lru_maxpages 1000 innodb_buffer_pool_dump_at_shutdown 1
bgwriter_lru_multiplier 4 innodb_buffer_pool_load_at_startup 1
checkpoint_completion_target 0.9 innodb_buffer_pool_size 12G
checkpoint_segments 32 innodb_doublewrite 0
checkpoint_timeout 60min innodb_flush_log_at_trx_commit 0
cpu_tuple_cost 0.03 innodb_flush_method O_DIRECT
effective_cache_size 10G innodb_log_file_size 1G
from_collapse_limit 20 skip_performance_schema –
join_collapse_limit 20
(c)TuningScriptConfiguration(MySQL)
maintenance_work_mem 1G
innodb_buffer_pool_instances 4
random_page_cost 1
innodb_buffer_pool_size 4G
shared_buffers 2G
query_cache_limit 2G
wal_buffers 32M
query_cache_size 2G
work_mem 150M
query_cache_type 1
(c)TuningScriptConfiguration(Postgres)
(d)AmazonRDSConfiguration(MySQL)
checkpoint_completion_target 0.9
innodb_buffer_pool_size 10.9G
checkpoint_segments 64
innodb_flush_method O_DIRECT
default_statistics_target 100
innodb_log_file_size 128M
effective_cache_size 23.3G
key_buffer_size 16M
maintenance_work_mem 1.9G
max_binlog_size 128M
shared_buffers 7.8G
read_buffer_size 256k
wal_buffers 16M
read_rnd_buffer_size 512M
work_mem 40M
table_open_cache_instances 16
(d)AmazonRDSConfiguration(Postgres) thread_cache_size 20
checkpoint_completion_target 0.9
checkpoint_segments 16 Table 1: DBMS Configurations (MySQL) – The best configurations
effective_cache_size 7.2G fortheTPC-CworkloadrunningonMySQLgeneratedby(a)OtterTune,
(b)theDBA,(c)thetuningscript,and(d)AmazonRDS.
maintenance_work_mem 243M
max_stack_depth 6M
shared_buffers 3.6G
wal_buffers 16M
Table 2: DBMS Configurations (Postgres) – The best configurations
fortheTPC-CworkloadrunningonPostgresgeneratedby(a)OtterTune,
(b)theDBA,(c)thetuningscript,and(d)AmazonRDS.
1024