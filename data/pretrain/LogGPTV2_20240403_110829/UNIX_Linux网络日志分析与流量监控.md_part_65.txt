OSSIMAgent配置的相关目录在/etc/ossim/agent/，代理
生后由代理自动向服务器发送，包括 Snort、Apache 等，而 monitor 必须由服务器主动查询。
置，以便能够远程访问，也不需要安装额外的工具软件。
Agent 的主要功能是接收或主动抓取Plugins发送过来或者生成的文件型日志,经过归-
2.代理（Agent）1
OSSIM 插件位置在哪里呢？其实在安装时系统就将全部插件复制到/etc/ossim/agent/
detector和 monitor 两者虽然都属于OSSIM 插件，可工作原理有着本质不同。detector 在产
代理进程即Agent（采用Python 语言编写，所以无需编译就能在 Python Shell 环境运
负载均衡
漏洞扫描
虚拟化
网络监控
防火墙
防病毒
访问控制
HIDS
ntopmonitor,fpadspradssion-ntor,rakon
allot,isco-ace,itrix-netscaler,f5,heartbeat
ossec,ossec-single-line Osiris
fwl-al-xwenigla
nessusessus-detector,Nessus-mnir
avast,gfi security,mcafee,clamav
ciso-acscisc-ac-idm,is-
表14-1OSSIM主要插件
插件名称
第14章OSSIM综合应用353
图14-4Agent 结构
ins
ene
Plugins
Monitor
Active
CBRn
Detector
Engine
---
## Page 377
器的详细配置。如图14-6所示。
量监控时必须确保Sensor正常工作。
个传感器的工作状态，包括IP 地址、名称、优先级、工作状态等信息。当使用Ntop 作为流
SensorsDisaying1t3orsensors
情，如图14-5所示。
在 Deployment→Alienvault Components 中的 Sensors 标签查看OSSIM系统传感器的状态详
监控功能的组合称为传感器（Sensor），Sensor的主要功能有：
会自动重启故障进程。
354UNIX/Linux网络日志分析与流量监控
Sensors
库，
另外，在Deployment→SystemConfiguration下的SensorConfiguration中还能查看传感
192.166.150.10
对于大型网络监控需采用分布式OSSIM，其中有多个传感器，在图14-5中可以查看每
Sensors可以采集路由器、防火墙、IDS等硬件设备日志，还可以监控它们的流量。可
Arpwatch 主要监视网络中新出现的 MAC 地址，它具有所监视网段IP-MAC 对应数据
·入侵检测（OSSIM4以前的版本采用单线程的Snort，最新版本换成了多线程的
传感器（Sensor）又称探针。在OSSIM.系统中，把Agent 和插件构成的具有网络行为
3.传感器（Sensor）
8）Watchdog：监视进程，它的作用是检查各 plugin 是否已经开始运行。如遇意外，它
·异常检测（Spade、POf、Pads、ARPWatch等）
●漏洞扫描（包括OpenVas、Nmap等）
7）DB-Connect：连接到本地/远程OSSIM数据库。
6）Monitor-plugins：请求监视器数据。
5）Detector-plugins：读取日志，使其标准化和进行归一化处理。
4）Engine：管理线程，处理监视器请求。的目
3）Active：接收服务器输入并且根据请求扫描主机。回
2）Listener：接收新的服务器连接请求。
1）40002/tcp：收听服务器的原始请求。
Suricata系统）
SeversLocabons
serveri
Mane
10004
Priority
图14-5
多传感器的情况
Version
410
生国靠然用两n
养
<
Status
odve
Sho20<Pa1@
Description
来美12
gio.ginaotnogcima
OOLE
TAG
---
## Page 378
请求。这个端口数值由 OSSIM系统在配置文件/etc/ossim/ossim_setup.conf 中定义。
写出XML 格式的规则即可。
管理、报警和调度、策略管理。其配置文件在/etc/ossim/server 目录下，文件分别为
评估。其工作流程如图14-7所示。
将 Snort、Nessus 以及 OpenVAS 等 Agents 传送来的事件进行关联，并对网络资产进行风险
在OSSIM系统中通过以下命令可以清楚地看到其工作端口：
关联引擎结构如图14-8所示，其工作原理包含下面6个步骤：
以上文件都是采用 XML 编写，易读易理解。当需要添加新规则时，只需按照规则要求
OSSIM服务器的核心组件功能包含：事件关联、风险评估和确定优先次序和身份认证
关联引擎（Server）是OSSIM安全集成管理系统的核心部分，它支持分布式运行，负责
alienvault-policy.xml
alienvault-scan.xml
alienvault-bruteforce.xml
alienvault-acctacks.xml
4.关联引擎
Agent
OpenVAs
图14-7关联引擎的工作流程
集成化处理
图14-6传感器详情
数据
关联分析
S
8-
第14章OSSIM综合应用355
EDB
数据库
南
ueppv
凉
---
## Page 379
所以实时性不强，2013年OSSIM4.2发行版中用Percona_server5.5替换了原来的MySQL5.1，
ServersDisplaying1to1of1servers
看详情，如图14-9所示。
Framework连接。
idmJ项配置。
Server 对采集事件进行分配和传递。此端口属性在/etc/ossim/agent/config.cfg文件的[output-
356UNIX/Linux网络日志分析与流量监控
其实它就是MySQL的一个衍生版本，由于使用了XtraDB存储引擎，而且对MySQL进行了优
用MySQL5.1版本，在系统中数据库的负担最重，因为除了存储数据还要对其进行分析整理，
数据库（UDB)。OSSIM系统默认使用的MySQL监听端口是3306,在OSSIM3.x以前的版本使
析和策略调整的信息源。从总体上将其划分为事件数据库（EDB）、知识数据库（KDB）、用户
员）也可通过Framework（Web前端控制台）对Database进行读写。数据库是整个系统事件分
SeisorsServersLocalions
192,108.120.89
3）Listener:
OSSIM系统的关联引擎的状态可在Deployment→Alienvault components 中的 Servers查
OSSIM系统启动时，会自动启动关联引擎。系统调试时需要用到手工操作，命令如下：
4）DB Connect：主要是OSSIM DB 与 Snort DB 之间的连接。
2）Connect：当连接到端口为 40002 指定的Agent时,连接到端口为 40001 的其他
数据库（Database）由 Server关联后将其结果写入Database。此外，系统用户（如安全管理
5.数据库（Database）
6）Engine：事件的授权、关联、分类和采集。
5）Agent Connect：启动Agent与Forwarding Server 之间的连接。
友
#ossim-server-d-c/etc/ossim/server/config.xml
：接收各个 Agent 的连接数据，它还可以细分为 Forwarding Server 连接和
Engine
Listener
图14-9关联引擎详细状态
图14-8关联引擎的结构
品
0001/TCP
Date/sensor/1607.log
Date/sensor/1604.log
Date/sensor/1601.log
Shorw20Pageof
郑关
---
## Page 380
件和服务事件4种，下面分别对这几种类型事件日志格式进行说明。
lsmOSSIM 系统从不同设备接收到的事件日志大致分为普通事件、MAC 事件、操作系统事
14.2.2Agent事件类型
解这些信息能帮助我们对OSSIM进行二次开发。
权限，安装了 Mrtg、Rrdtool 来绘制监控图，安装了 ACID/base 作为事件的前端控制台。
装了 Apache+PHP+ADODB 来搭建支持 PHP 的 Web Server，安装了 PHPGACL 来处理用户
和系统的其他组件相关联，并绘制Web图表供前端显示。在OSSIM系统中，Framework
+M-i4lgrep ossim-fra”也可以清楚看到服务端口信息)，它负责将Frontend 收到的用户指令
口是40003（在/etc/ossim/ossim_setup.conf 配置文件可以查看到，同样通过命令“lsof-Pnl
Frameworkd是一个守护进程，采用Python编写，它绑定OSSIM的知识库和事件库，监听端
个部分：Frontend采用PHP 语言编写，它是系统的一个Web 页面，提供系统的用户终端；
置策略），是整个系统的前端，用来实现用户和系统的B/S 模式交互。Framework可以分为
台，其中Web 框架（Framework）控制台，提供用户Web 页面从而控制系统的运行（例如设
大量*py、*pl 和*php 的程序文件)，许多模块发挥各自的优势，共同组成一个开源安全平
在OSSIM数据库中，用来记录用户行为，对应于设计阶段的UDB。
作为Snort数据库的前端控制台，对应于设计阶段的EDB；此外ACID数据库相关表格可包含
底层的事件数据库，它记录了安全插件的全部工作信息，在Framework 中使用ACID/Base 来
用来记录与关联相关的信息，对应于设计阶段的KDB和EDB的关联事件部分：Snort数据库是
化和改进，因此功能和性能明显提升。OSSIM各版本对应的数据库见表14-2。OSSIM数据库
·plugin_id：前端探针编号，用以区分是哪个NIDS 或扫描设备产生的事件，这里
●interface：网络接口。
●sensor：传感器生成日志的IP地址。
●date：从设备接收日志的时间。
●type：事件类型，一般有两种类型：detector或 monitor。
"192.168.150.10" interface="eth0" priority="1" src_ip="192.168.150.8" dst ip="192.168.150.8" data="user1"
1.普通日志举例
euid=0 tty=ssh ruser= rhost=localhost user-userl"
OSSIM系统是由Perl/Python/PHP等多种工具开发的（在/usr/share/ossim等路径下有着
解释如下：
log="Aug912:12:11ossim-sensor sshd[6567]:（pam_unix）authentication failure;logname=uid=0
6.Web框架
plugin_id=4003,代表 SSHd（Secure ShellDaemon）。
OSSIM3.1
OSSIM2.3
版本
eventtype="detector"
date="2012-08-0912:12:11"
表14-2OSSIM主要版本数据库变迁
Mysql-server5.1
Mysql-server 5.1
数据库
第14章OSSIM综合应用357
plugin_id="4003"
版本
OSSIM4.2
OSSIM4.1
类志日书票
元
Percona-server-5.5
Percona-server-5.5
:1020
nobnsy
数据库
安
---
## Page 381
358UNIX/Linux网络日志分析与流量监控
InventoryData SourcesDownioade
OSSIM系统数据源描述如图14-10所示。
3.操作系统事件日志举例
●host：当主机的MAC 发生改变时，记录的IP 地址。
2.MAC事件日志举例
是以此插件为基础的。主，息目工
·plugin_sid：前端探针探测到的事件类型，用以区分同一探针探测到的不同事件类型，
vendor：网卡厂家。
●mac：用十六进制表示的网卡物理地址。
解释如下：
Corporationtimestamp:Friday,March17,201211:30:09+0100"
host-mac-eventhost192.168.150.8"interface="eth1mac="00:24:80:fb:bc
D
host-os-eventhost192.168.150.8"
interface：网卡接口。
sensor：嗅探服务器的 IP 地址。
log：日志内容。
date：事件发生时日期。
dst_port:目标端口。
dst_ip：目标IP地址。
src_port：源端口。
src ip：源IP地址。
protocol：协议类型，有三种协议类型；TCP，UDP，ICMP。
priority：优先级（0为最低，5为最高）。
一
面
哈自
Name
图14-10数据源描述信息
os="Windows"
date=2012-12-2002:50:13
类
-mq-M
口10003
3osheim
702052