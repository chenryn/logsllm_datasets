### Performance and Results
Our method was able to reduce the number of false positives (FPs) on the LANL dataset by nearly 40%, while maintaining a true positive rate with a loss of less than 1%.

### 5. Related Work
This section reviews related work in the areas of anomaly detection and node embedding methods.

#### Anomaly Detection for APT Identification
Anomaly detection for Advanced Persistent Threat (APT) identification has been extensively studied. Most of these works rely on host-based log analysis, focusing on detecting anomalous process activity indicative of malware or exploitation [23, 6, 24, 16]. Some approaches even mine information from user-driven commands for anomaly detection [14]. While host logs may be available in some environments, capturing and storing verbose host-based logs, such as system call traces, can be a significant burden for large enterprises.

At the network level, techniques have been developed for detecting web-based attacks [13] and botnet activity [1] using anomaly detection algorithms. A highly related technique [4] combines host and network information to detect lateral movement. However, this approach requires process-level information from hosts, making it unsuitable for large-scale enterprise environments. Given the difficulty of detecting lateral movement, some approaches focus instead on assessing the vulnerability of environments to such attacks [10].

Other methods, such as Holmes [20] and Poirot [19], look for deviations from known, specification-driven rules of how an environment should behave. These methods can reduce false positives by explicitly defining malicious behavior, but they are based on human-derived knowledge and thus risk being circumvented by new and novel attack paths. Additionally, these techniques require constant maintenance and updates to adapt to the evolving attack surface.

#### Node Embedding Methods
Node embedding methods aim to learn representative embeddings for each node in a graph, which have been successfully applied to various downstream machine learning tasks, such as node classification [22], link prediction [7], and node recommendation [30]. Existing methods typically involve two steps: sampling meaningful paths to represent structural information in the graph, and applying data mining techniques, often from natural language processing (NLP), to learn meaningful vector embeddings.

The main difference between existing methods lies in the first step—how to sample better paths to capture the most important graph information. For example, DeepWalk [22] uses random walks to build paths for each node. Line [27] applies a breadth-first search strategy to build paths for one-hop and two-hop neighbors, giving more importance to close-by neighbors. Node2vec [7] introduces a biased random walk embedding process that models both homophily (embedding nodes closely if they are highly interconnected and in similar clusters) and structural equivalence (embedding nodes closely if they share similar structural roles).

Recent graph neural network architectures, such as GCN [12], GAT [28], and their variants [9], have also been proposed. However, these are mostly designed for semi-supervised or supervised tasks and are less suitable for unsupervised learning compared to the random-walk-based approaches mentioned earlier.

### 6. Limitations and Future Work
Despite the promising results, our approach has several limitations. The first is the issue of explainability, a common challenge in machine learning. When our graph learning algorithms label an event as an anomaly, it is difficult to determine why. Current research on explaining machine learning and AI algorithms [3], including specific techniques for graph learning [29], may help address this in the future.

Another limitation is the assumption that we will have historical data for each entity we plan to perform link prediction on. If we encounter a new entity, we will not have an embedding for it, and thus cannot perform link prediction. Potential solutions include assigning a generic "new node" embedding or using the average embedding of its neighbors, but the impact of these approaches needs further exploration. We believe that, at least in the case of enterprise network authentication, it is reasonable to assume that most user accounts will have some historical behavior data over a sufficiently long period.

In this work, we focused on log data related to authentication events. In the future, we plan to incorporate additional data, such as DNS requests and file-share accesses, to expand our detection algorithm to identify other stages of the kill chain, such as command and control traffic, which would likely cause anomalous DNS requests.

### 7. Conclusion
In this work, we addressed the challenging problem of detecting lateral movement of APT-level adversaries within enterprise computer networks. We explained why existing signature-based intrusion detection techniques and fine-grained behavioral analytics are insufficient. We introduced a technique that abstracts a computer network into a graph of authenticating entities and performs unsupervised graph learning to generate node behavior embeddings. We used these embeddings for link prediction and anomaly detection of malicious authentication events. Our techniques were applied to both simulated and real-world datasets, achieving increased true positive rates and decreased false positive rates compared to rule-based heuristics and non-graph ML anomaly detectors. We analyzed the results and developed simple filters to further reduce the false positive rate.

### Acknowledgment
This work was supported in part by DARPA under agreement number N66001-18-C-4033, National Science Foundation CAREER award 1350766, grants 1618706 and 1717774, and support from the ARCS Foundation. The views, opinions, and findings expressed in this material are those of the authors and should not be interpreted as representing the official views or policies of the Department of Defense, National Science Foundation, ARCS, or the U.S. Government.

### References
[1] Leyla Bilge, Davide Balzarotti, William Robertson, Engin Kirda, and Christopher Kruegel. Disclosure: Detecting botnet command and control servers through large-scale NetFlow analysis. In Proceedings of the 28th Annual Computer Security Applications Conference, pages 129–138. ACM, 2012.
[2] Markus M Breunig, Hans-Peter Kriegel, Raymond T Ng, and Jörg Sander. LOF: Identifying density-based local outliers. In ACM SIGMOD Record, volume 29, pages 93–104. ACM, 2000.
[3] Mengnan Du, Ninghao Liu, Qingquan Song, and Xia Hu. Towards explanation of DNN-based prediction with guided feature inversion. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 1358–1367, 2018.
[4] A. Fawaz, A. Bohara, C. Cheh, and W. H. Sanders. Lateral movement detection using distributed data fusion. In 2016 IEEE 35th Symposium on Reliable Distributed Systems (SRDS), pages 21–30, Sep. 2016.
[5] FireEye. M-Trends 2019. https://content.fireeye.com/m-trends/rpt-m-trends-2019, 2019.
[6] S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A. Longstaff. A sense of self for Unix processes. In Proceedings 1996 IEEE Symposium on Security and Privacy, pages 120–128, May 1996.
[7] Aditya Grover and Jure Leskovec. node2vec: Scalable feature learning for networks. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 855–864. ACM, 2016.
[8] Michael Gutmann and Aapo Hyvärinen. Noise-contrastive estimation: A new estimation principle for unnormalized statistical models. In Proceedings of the Thirteenth International Conference on Artificial Intelligence and Statistics, pages 297–304, 2010.
[9] William L Hamilton, Rex Ying, and Jure Leskovec. Representation learning on graphs: Methods and applications. arXiv preprint arXiv:1709.05584, 2017.
[10] John R Johnson and Emilie A Hogan. A graph analytic metric for mitigating advanced persistent threat. In 2013 IEEE International Conference on Intelligence and Security Informatics, pages 129–133. IEEE, 2013.
[11] Alexander D. Kent. Comprehensive, Multi-Source Cyber-Security Events. Los Alamos National Laboratory, 2015.
[12] Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. arXiv preprint arXiv:1609.02907, 2016.
[13] Christopher Kruegel and Giovanni Vigna. Anomaly detection of web-based attacks. In Proceedings of the 10th ACM Conference on Computer and Communications Security, pages 251–261. ACM, 2003.
[14] Wenke Lee, Salvatore J Stolfo, and Kui W Mok. A data mining framework for building intrusion detection models. In Proceedings of the 1999 IEEE Symposium on Security and Privacy (Cat. No. 99CB36344), pages 120–132. IEEE, 1999.
[15] Fei Tony Liu, Kai Ming Ting, and Zhi-Hua Zhou. Isolation forest. In 2008 Eighth IEEE International Conference on Data Mining, pages 413–422. IEEE, 2008.
[16] Emaad Manzoor, Sadegh M Milajerdi, and Leman Akoglu. Fast memory-efficient anomaly detection in streaming heterogeneous graphs. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 1035–1044. ACM, 2016.
[17] Lockheed Martin. The cyber kill chain. https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html, Accessed: 2020-01-16.
[18] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed representations of words and phrases and their compositionality. In Advances in Neural Information Processing Systems, pages 3111–3119, 2013.
[19] Sadegh M. Milajerdi, Birhanu Eshete, Rigel Gjomemo, and V.N. Venkatakrishnan. Poirot: Aligning attack behavior with kernel audit records for cyber threat hunting. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, CCS '19, page 1795–1812, New York, NY, USA, 2019. Association for Computing Machinery.
[20] Sadegh M Milajerdi, Rigel Gjomemo, Birhanu Eshete, R Sekar, and VN Venkatakrishnan. Holmes: Real-time APT detection through correlation of suspicious information flows. In 2019 IEEE Symposium on Security and Privacy (SP), pages 1137–1152. IEEE, 2019.
[21] MITRE. MITRE ATT&CK. https://attack.mitre.org/, 2020. Accessed: 2020-01-16.
[22] Bryan Perozzi, Rami Al-Rfou, and Steven Skiena. DeepWalk: Online learning of social representations. In Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 701–710. ACM, 2014.
[23] R Sekar, Mugdha Bendre, Dinakar Dhurjati, and Pradeep Bollineni. A fast automaton-based method for detecting anomalous program behaviors. In Proceedings 2001 IEEE Symposium on Security and Privacy. S&P 2001, pages 144–155. IEEE, 2000.
[24] Xiaokui Shu, Danfeng Yao, and Naren Ramakrishnan. Unearthing stealthy program attacks buried in extremely long execution paths. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security, pages 401–413. ACM, 2015.
[25] Snort. Snort. https://www.snort.org/, 2020. Accessed: 2020-01-16.
[26] Splunk. Splunk. https://www.splunk.com, 2020. Accessed: 2020-01-16.
[27] Jian Tang, Meng Qu, Mingzhe Wang, Ming Zhang, Jun Yan, and Qiaozhu Mei. LINE: Large-scale information network embedding. In Proceedings of the 24th International Conference on World Wide Web, pages 1067–1077. International World Wide Web Conferences Steering Committee, 2015.
[28] Petar Veličković, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017.
[29] Rex Ying, Dylan Bourgeois, Jiaxuan You, Marinka Zitnik, and Jure Leskovec. GNN Explainer: A tool for post-hoc explanation of graph neural networks. arXiv preprint arXiv:1903.03894, 2019.
[30] Xiao Yu, Xiang Ren, Yizhou Sun, Quanquan Gu, Bradley Sturt, Urvashi Khandelwal, Brandon Norick, and Jiawei Han. Personalized entity recommendation: A heterogeneous information network approach. In Proceedings of the 7th ACM International Conference on Web Search and Data Mining, pages 283–292, 2014.
[31] Zeek. The Zeek Network Security Monitor. https://zeek.org, 2020. Accessed: 2020-01-16.