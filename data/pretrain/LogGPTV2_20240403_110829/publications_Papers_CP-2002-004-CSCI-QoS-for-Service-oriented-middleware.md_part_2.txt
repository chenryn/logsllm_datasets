failure. For data networks, the QoS generally focuses on
(cid:131) A QoS model must be developed to allow for the domain specific dimensions such as bandwidth, latency,
specification of workflow QoS metrics. This model jitter, and loss (Nahrstedt and Smith 1996). Based on
allows suppliers to specify the duration, quality, cost, previous studies, and our experience in the workflow and
fidelity, etc., of the services and products to be process domains we construct a QoS model composed of
delivered. Specifications can be set at design-time, the following dimensions: time, cost, reliability, and
when designers build workflow applications, or they fidelity. We will use these four dimensions and develop a
can be adjusted at run-time. QoS framework suitable for Grid/Web services.
(cid:131) Algorithms and methods must be developed to
In order to be more precise, we provide our definitions of
estimate the QoS of a workflow both before instances
the four dimensions. (1) For a Web service, the response
are started and during instance execution. The
time can be defined as the time that elapses between
estimation of QoS before instantiation allows
service requests arrival and the completion of that service
suppliers to ensure that the workflow processes to be
request. Response time is the sum of waiting time and
executed will indeed exhibit the QoS requested by
actual processing time. (2) Cost represents the cost
customers. The analysis of QoS during instance
associated with the execution of Grid/Web services. It is a
execution allows the SoM infrastructure to constantly
fundamental issue for organizations that wish to reduce
compute QoS metrics and register any deviations
their expenditures with internal processes and service cost.
from the initial requirements.
(3) Reliability corresponds to the likelihood that a service
(cid:131) Tools must be available to monitor the QoS of will perform for its users when the user demands it and it
running applications. Users and managers need to is a function of failure rate. Reliability is given as the
receive information about the QoS status and ratio of successful executions/scheduled executions. (4)
possible deviations from the desired metrics that Fidelity reflects how well a product is being produced or
might occur. The use of QoS monitoring tools can how well a service is being rendered. Fidelity is treated as
automatically detect this variation in fidelity and a vector composed of fidelity attributes. Each fidelity
automatically notify interested users. attribute refers to a property or characteristic of the
product being created, transformed, or analyzed. Fidelity
(cid:131) Mechanisms must be available which control the
attributes are used to determine how well services are
QoS of applications. Control is necessary when
meeting user specifications.
applications do not behave according to initial
requirements. Let us consider the following example: 3.3 Creation of QoS Estimates
workflow instances are running correctly and the
Determining useful estimates for the QoS properties of a
QoS specifications are being followed when a task
Web service can be a challenging task. A combination of
fails. As a consequence, QoS specifications of time
a priori estimates from designers as well as estimates
are no longer satisfied, and the SoM infrastructure
computed from prior executions will be used, with the
raises a warning, an alert, or an exception. The faulty
historical data playing a larger role as more data is
task needs to be replaced by an equivalent task to
collected. Additional complexities are due to the fact that
restore the soundness of the system. This
QoS is parametric. For example, the response time of a
replacement can be accomplished by applying
service that takes an XML document as input will depend
dynamic changes to the instances, either manually or
on the size of the document. Estimates for composite
automatically (Cardoso, Luo et al. 2001).
Web services can be developed in two ways: (a) estimates
In session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics and
Informatics, Orlando, FL, July 2002.
for the entire composite service can be created just like In a sequential system p = 1. This reduction can only be
j
they are for ordinary/atomic services (i.e., a priori applied if the following two rules are satisfied: a) t is not a
i
estimates refined as execution monitoring data is xor/and split and b) t is not a xor/and join. These rules
j
collected), (b) the QoS properties can be synthesized from prevent this reduction to be applied in a parallel,
the QoS properties of the component services making up conditional, and loop systems. To compute the QoS of the
the composite service. Synthesizing aggregate estimates reduction the following formulae are applied:
requires several problems to be solved, among them (1)
determination of branching probabilities from branching
Time : T(t ) = T(t) + T(t)
conditions and (2) dealing with correlation between ij i j
Cost: C(t )= C(t) + C(t)
individual services. ij i j
Reliability: R(t ) = R(t) * R(t)
ij i j
A web service runtime behavior specification is composed
of two classes of information: basic and distributional.
While mathematical methods can be effectively used,
The basic class associates with each service QoS
another alternative is to utilize simulation analysis (Miller,
dimension the minimum value, average value, and
Cardoso et al. 2002). Simulation can play an important
maximum value the dimension can take. For example, the
role in fine-tuning tuning the QoS metrics of workflows,
cost dimension corresponds to the minimum, average, and
by exploring “what-if" questions. When the need to adapt
maximum cost associated with the execution of a task.
or to change a workflow is detected, deciding what
The second class, the distributional class, corresponds to
changes to carry out can be very difficult. Before a change
the specification of a constant or of a distribution function
is actually made, its possible effects can be explored with
(such as Exponential, Lognormal, Normal, Rayleigh,
simulation. To facilitate rapid feedback, the workflow
Time-Independent, Weibull, and Uniform) which
system and the simulation system need to interoperate. In
statistically describes task behavior at runtime. The values
particular, workflow specification documents need to be
specified in the basic class are typically employed by
translated into simulation model specification documents
mathematical methods in order to compute process QoS
so that the new model can be executed/animated on-the-
metrics, while the distributional class information is used
fly. In our project, these capabilities involve a loosely-
by simulation systems to compute workflow QoS. To
coupled integration of the METEOR WfMS and the JSIM
devise values for the two classes, appropriate function are
simulation system (Nair, Miller et al. 1996; Miller, Nair et
applied to derive the QoS metrics for individual services
al. 1997; Miller, Seila et al. 2000). The simulation model
(Cardoso, Miller et al. 2002).
is displayed graphically and then executed/animated.
3.4 Computing Process QoS Statistical results are collected and displayed, indicating
workflows QoS.
Comprehensive solutions to the difficult problems
encountered in synthesizing QoS for composite services 3.5 System Inplementation
are discussed in detail (Cardoso, Luo et al. 2001; Cardoso,
Miller et al. 2002). The latter paper presents a To enable SoM to support an efficient QoS management
mathematical model and a network reduction algorithm several enhancements need to be made to the middleware
for computing aggregate QoS properties step-by-step. At infrastructure. The enhancements include the development
each step, a reduction rule is applied to shrink a process and support of a comprehensive QoS model and the
network. This is continued until only one node is left in implementation of methodologies (a mathematical model
the network. The set of reduction rules that can be applied and simulation) to compute and predict QoS. We have
to a composite service (network) corresponds to the set of developed a stochastic workflow reduction algorithm
inverse operation that can be used to construct a network (SWR) for the step-by-step computation of QoS metrics.
of services. To compute QoS metrics, we use a set of six Our work has been carried out for the METEOR system to
distinct reduction systems: (1) sequential system, (2) allow the specification, computation, and management of
parallel system, (3) conditional system, (4) fault-tolerant QoS. The support of QoS requires the modification and
system, (5) loop system, and (6) network system. As an extension of several workflow system components, and
illustration, we will show how reduction works for a the development of additional modules. While the
sequence of services. implementation was made for the METEOR system, and
the development was based on a specific conceptual
p model, the main ideas can be applied to the vast majority
j
t t t of workflow systems available (Aalst, Barros et al. 2002).
i j ij
The support of QoS management requires the
(a) (b) modification and extension of most of workflow system
components. This includes the enactment system, the
Figure 1 - Sequential system reduction workflow builder (or designer), the monitor, the code
generator, the repository, the workflow model, and the
Reduction of a Sequential System. Two sequential task model. Additionally, new components need to be
service tasks t and t are reduced to a single task t . In this implemented, such as a QoS estimator module to create
i j ij
reduction the incoming transitions of t and outgoing QoS estimates for tasks and probabilities for transitions.
i
transition of tasks t are transferred to task t . The monitor needs an additional interface so that runtime
j ij
In session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics and
Informatics, Orlando, FL, July 2002.
tasks QoS metrics are propagated and logged into a
database for data processing purposes.
4 Future Work
Specification of Process QoS
Descriptions of QoS for Grid/Web services need to be
stored in a fashion suitable for automatic processing. In
other words, QoS information should be stored with
functional descriptions of services in
registries/repositories. As suggested by (Foster, Roy et al.
2001), we are working on defining and using an extended
Web Services Description Language (WSDL) to describe
services. Similarly, an extended Web Services Flow
Language (WSFL) will be used for composite services SPC Engine Service
Agent
built out of simpler services.
Service
Scheduler
The extended WSDL should provide additional
Application Metalogic
information prescribed by the OGSA. These include
Service Service
discovery, soft state destruction, explicit destruction, Scheduler Scheduler
notification source, notification sink, registry, factory, ScS he er dv uic le er ScS he er dv uic le er ScS he er dv uic le er
factory primary key, handle mapper, and manageability Service
Scheduler
(Foster, Kesselman et al. 2001). We assume that such
descriptions must be provided for a service to be S Ae grv ei nc te S Ae grv ei nc te S Ae grv ei nc te S Ae grv ei nc te S Ae grv ei nc te S Ae grv ei nc te
considered a Grid service. We will take a WSDL with
extensions for OGSA, and augment it with our additional
QoS information with security to form a WDSL+QoS Web Services
description. These descriptions will be stored in
repositories (Arpinar, Miller et al. 2001) that are upward
compatible with UDDI registries. Such repositories will
Figure 2: SPC Engine based on METEOR system
allow Grid services be located through advanced
query/search mechanisms.
We also wish to be able to save descriptions of composite
Grid services made up of component services. For this
will propose to use WSFL+QoS. This specification will
indicate the process logic for a composite service. The
information is created with our SoM application builder
and again stored in the repository. Figure above shows
SoM Process Control (SPC) engine, which will be
build upon the METEOR architecture. It will be
responsible for executing the designed SoM
applications.
As we extend WSFL, we will keep track of progress of its