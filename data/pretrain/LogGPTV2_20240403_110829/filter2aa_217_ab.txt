if(f_tag_data_size == 63) { 
unsigned long 
f_tag_data_real_size; 
}
else { 
f_tag_data_real_size = f_tag_data_size; 
} 
}; 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
43 02 
  ↓ 
TagID:09 Size:3 
Bit operation! 
SetBackgroundColor(TagID:09) → RR GG BB (3byte) 
t1 t0  s5 s4  s3 s2  s1 s0    t9 t8 t7 t6  t5 t4 t3 t2 
4      3       0     2 
 0  1   0  0   0  0   1  1     0  0  0  0   0  0  1  0 
1. If Size  62 byte 
a      6       0     1 
0      0       0     0 
Next 4byte (32bit int) is real size data 
TagID = t0*2^0 + t1*2^1 + t2*2^2 + t3*2^3 +  t9*2^9 = t2*4 +t3*8 = 4 + 8 = 12 
 Size = 2^0 + 2^1 + 2^2 + 2^3 + 2^4 + 2^5 = 63 (0x3f) ← magic number 
422 
byte 
Lesson 1. (calculate SWF Tag header) 
nFor instance, the data of tag is converted 
into the byte sequence of such feeling 
SetBgColor   (TagID= 9, Size=3) → 43 02 RR GG BB 
doAction     (TagID=12,Size=422)→ 3f 03 a6 01 00 00 xx  xx  
PlaceObject  (TagID= 4, Size=7) → 07 01 xx xx xx xx xx xx xx  
PlaceObject2 (TagID=26, Size=8) → 88 06 xx xx xx xx xx xx xx xx 
ShowFrame    (TagID= 1, Size=0) → 40 00  
End          (TagID= 0, Size=0) → 00 00  
442byte 
3byte 
5. doAction Tag 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
[00c]        23 DOACTION 
                 (   18 bytes) action: Push String:"o" String:"Hello world!¥n" 
                 (    0 bytes) action: SetVariable 
                 (    0 bytes) action: End 
TagID    Size 
17 03 = TagID:12  Size:23byte 
Action Script Byte Code (explain later) 
Flasm  
Flasm 1.62 build Jun  9 2007 
(c) 2001 Opaque Industries, (c) 2002-2007 Igor Kogan, (c) 2005 Wang Zhen 
All rights reserved. See LICENSE.TXT for terms of use. 
Usage: flasm [command] filename 
Commands: 
   -d     Disassemble SWF file to the console 
   -a     Assemble Flasm project (FLM) 
   -u     Update SWF file, replace Flasm macros 
   -b     Assemble actions to __bytecode__ instruction or byte sequence 
   -z     Compress SWF with zLib 
   -x     Decompress SWF 
Backups with $wf extension are created for altered SWF files. 
To save disassembly or __bytecode__ to file, redirect it: 
flasm -d foo.swf > foo.flm 
flasm -b foo.txt > foo.as 
Read flasm.html for more information. 
http://flasm.sourceforge.net/ 
6. DefinedEditText Tag 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
[025]        13 DEFINEEDITTEXT defines id 0001 variable "o"  
[004]         5 PLACEOBJECT places id 0001 at depth 0001 
                 | Matrix             | CXForm    r    g    b    a  
                 | 1.000 0.000   0.00 | mul     1.0  1.0  1.0  1.0  
                 | 0.000 1.000   0.00 | add       0    0    0    0  
[001]         0 SHOWFRAME 1 (00:00:00,000) 
[000]         0 END 
TagID    Size 
7. PlaceObject Tag 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
[025]        13 DEFINEEDITTEXT defines id 0001 variable "o"  
[004]         5 PLACEOBJECT places id 0001 at depth 0001 
                 | Matrix             | CXForm    r    g    b    a  
                 | 1.000 0.000   0.00 | mul     1.0  1.0  1.0  1.0  
                 | 0.000 1.000   0.00 | add       0    0    0    0  
[001]         0 SHOWFRAME 1 (00:00:00,000) 
[000]         0 END 
TagID    Size 
swf_matrix (variable length) 
struct swf_matrix {  
       char align;  
       unsigned                f_has_scale : 1;  
       if (f_has_scale) {  
               unsigned        f_scale_bits : 5;  
               signed fixed    f_scale_x : f_scale_bits;  
               signed fixed    f_scale_y : f_scale_bits;  
       }  
       unsigned                f_has_rotate : 1;  
       if (f_has_rotate) {  
               unsigned        f_rotate_bits : 5;  
               signed fixed    f_rotate_skew0 : f_rotate_bits;  
               signed fixed    f_rotate_skew1 : f_rotate_bits;  
       }  
       unsigned                f_translate_bits : 5;  
       signed                  f_translate_x : f_rotate_bits;  
       signed                  f_translate_y : f_rotate_bits;  
};  
8. ShowFrame Tag 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
[025]        13 DEFINEEDITTEXT defines id 0001 variable "o"  
[004]         5 PLACEOBJECT places id 0001 at depth 0001 
                 | Matrix             | CXForm    r    g    b    a  
                 | 1.000 0.000   0.00 | mul     1.0  1.0  1.0  1.0  
                 | 0.000 1.000   0.00 | add       0    0    0    0  
[001]         0 SHOWFRAME 1 (00:00:00,000) 
[000]         0 END 
TagID    Size 
9. End Tag 
46 57 53 04 4b 00 00 00 60 00 3f c0 00 3f c0 00 
0c 02 00 43 02 33 33 33 17 03 96 12 00 00 6f 00 
00 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 0a 00 1d 
00 4d 09 01 00 60 0a 3e 80 0a 3e 80 60 08 6f 00 
05 01 01 00 01 00 00 40 00 00 00 
[025]        13 DEFINEEDITTEXT defines id 0001 variable "o"  
[004]         5 PLACEOBJECT places id 0001 at depth 0001 
                 | Matrix             | CXForm    r    g    b    a  
                 | 1.000 0.000   0.00 | mul     1.0  1.0  1.0  1.0  
                 | 0.000 1.000   0.00 | add       0    0    0    0  
[001]         0 SHOWFRAME 1 (00:00:00,000) 
[000]         0 END 
TagID    Size 
ActionScript 
Decompiler 
(1) Sothink SWF Decompiler 
http://www.sothink.com/product/flashdecompiler/ 
(1) SWF à ActionScriptSothink SWF Decompiler 
(2) Flare 
http://www.nowrap.de/flare.html 
[Demo] flare nicovideo.swf à nicovideo.flr 
    _global.styles.TextArea.setStyle('borderStyle', 'solid'); 
    _global.styles.TextArea.setStyle('backgroundColor', '0xFFFFEE'); 
    _global.styles.ComboBox.setStyle('rollOverColor', '0xF0FFF0'); 
    var arr = _url.split('/'); 
    var U = 'http://' + strReplace(arr[2], 'res', (country_code == undefined) ? 
'www' : country_code) + ((arr[3].charAt(0) == '~') ? '/' + arr[3] : '') + '/'; 
    var NICOVIDEO_URL = 'http://' + strReplace(arr[2], 'ext', (country_code == 
undefined) ? 'www' : country_code) + ((arr[3].charAt(0) == '~') ? '/' + 
arr[3] : '') + '/'; 
    var PLAYER_VERSION = '200808211900'; 
    var B = U + 'api/'; 
    system.useCodepage = true; 
    Stage.scaleMode = 'noScale'; 
    Stage.align = 'TL'; 
    System.security.allowDomain('www.nicovideo.jp'); 
    System.security.allowDomain('www.dev.nicovideo.jp'); 
    System.security.allowDomain('res.nicovideo.jp'); 
    System.security.allowDomain('dwango.co.jp'); 
[Demo] 
swf2protect 
swf2protect (How to use) 
swf2protect (anti-decompiling) 
swf2protect (Demo) 
Result: Flare failed to decompile (SEGV) 
Result: Flare failed to decompile (SEGV) 
Flash Player vs. ActionScript Decompiler 
nBoundary jump (ActionScript byte code) 
de ad be ef 
96 = push data (z size) 
99 xx xx yy yy 96 zz zz 
99 = AlwaysBranch (+ y byte) 
AVM1 
(Flash Player)