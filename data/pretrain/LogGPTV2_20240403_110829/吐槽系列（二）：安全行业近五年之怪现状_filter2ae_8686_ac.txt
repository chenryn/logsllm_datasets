顺便说个题外话，恰巧行文前，在某年度大型线上真人匿名交友活动中，见识了如何被恶意标识的社区情报曲折离奇地误伤到，有点哭笑不得，又有点怨气。辛苦努力，差点清零，难道这年头，做情报的都不审核了么？另外，也正好看到瘦总讲情报的一篇文章，有提到IOC注水的事。这个槽点，后文讲POC时再说。
### 4、MITRE ATT&CK™
说到最近安全技术热词的当红炸子鸡，那当属ATT&CK。在我理解，ATT&CK并不是一项技术，而是更接近于与NIST提出的SCAP体系类似的一个知识体系，里面应该会包含语言类、枚举类和度量类的内容、定义和方法，以模型、机制为主。同事，ATT&CK提供了一个开放社区，让学术、产业界每个感兴趣的人都能参与进来。这种体系建设与运作机制是鹰酱的惯用方法。
然而，在近一两年不少安全会议中，笔者碰到的很多厂商，甚至某些甲方，都在宣称自己采用了ATT&CK技术，并在自身的产品宣讲PPT中将ATT&CK作为一项关键功能模块大书特书，大谈自己完全采用了ATT&CK技术，因此任何AP攻击都能检测出来，绝不会有遗漏。自谦曰国内检测能力我认第二，看谁敢认第一。且不论大家对APT的定义仍是众说纷纭，单这种歪曲ATT&CK本意的填词方式，也算是让人哭笑不得。
忍不住开个地图炮：真心希望各家厂商好好培养和锻炼自家的售前和专家们，很多概念、理论、技术并没有太多门槛，介绍和分析文章网上到处都有，看都不看一下就出来瞎吹胡吹的，不仅丢自己的人，也败东家的脸。
## 三、安全战忽局：安全专家在线忽悠，以小博大，紧张刺激
战忽局，按照知乎上看到的说法，是“以国家安全为目标，通过忽悠，误导，渗透等手段促使敌对势力对我方实力与格局进行错误判断，从而占据战场主动地位，潜伏实力，蛊惑敌心。发展至当代，其作战理论有了显著发展，搭配因果律武器（天火降航母)，灵活运用天象学（雾霾防激光），生物学（海草缠潜艇）等当代基础学科，可谓我军克敌制胜的法宝。”如今，笔者在大大小小的安全会议和技术交流中，深刻感受了安全战忽局的威力：感觉就像在线菠菜一样，循循善诱，步步惊心，一朝不慎，就成了被忽悠、蛊惑的对象。
1、我说有的并不代表着它真的有
近几年，笔者前后大约收集近千份讲产品、讲理念的PPT，和多个厂商也交流过近百场。因为几份工作都需要对接和测试产品，或是做集成架构设计，所以常常抓着产品架构图看，或者追着问些架构设计上的问题。于是乎，由于过于“好学”，经常不经意地发现一些架构上的小“猫腻”，并因此踩坑无数。
一种“猫腻”是宣传的架构图上画着Kafka、Flink、InfluxDB、ES、Neo4j等等，甚至为了体现研发能力的强大，宣称自己定制开发了一个绝对牛逼过原版的XXlink、XXDB、XXSQL、XXES…然而，当你信以为真并真的开始用起来的时候，kafka消息堆积、Flink作业异常、InfluDB数据丢失、ES数据倾斜、Neo4j节点值为空等各种让人无语的问题接踵而至，而且大多需要研发排期修改，一拖就是几周、几月，甚至大半年，让你不禁疑惑，到底甲方是爸爸，还是小白鼠
此外，笔者还碰到过架构图胡画一气，明显就有问题的。比如，将Flink画在ES后面的，让人好奇Flink到底用来干啥；。又或者一张架构图里Kafka、Redis、RabbitMQ、Spark、Flink、ES、MongoDB、MySQL、InfluxDB、Neo4j全家福的，让你惊讶这是何等复杂的产品和架构，是要造个卫星上天吗？
当然，这还算好的，见过最夸张的就是架构图里画着有，售前过来也说有，产品部署也貌似有，等到真正要去用的时候（比如kakfa），那就是真的没有，或者说无法对外开放，让你忍受时断时续、老丢数据的syslog，或是一用就挂的API接口。这种做法，与菠菜网站套现后跑路又有啥区别？
### 2、走过最深的路，就是POC的套路
说到POC的套路，很多甲方都会想起一幕幕的血泪史。产品测试的时候各种牛逼，各种OK，无论是你拿什么指标，什么功能去测试，总能让你满意。但一到正式使用，各种不行，让你怀疑人生，感觉像是进入了一个“杀猪盘”。为啥频频甲方会中套路？安全POC为啥测不出真实效果？在笔者看来，核心就在于：信息不对称。
绝大多数情况下，一个安全产品就是一个黑盒，盒子里有啥，实际你是不知道的。而由于安全领域的特殊性，大部分安全产品的核心不在于功能，而在于知识。这些知识在很多情况下都是非公开的，导致甲乙双方的信息不对称。而安全产品的POC套路，大多源于在产品测试中如何有效地利用这种信息不对称优势。
典型的例子，就有情报的测试。瘦总的《从IOC的一些真相谈对其的评价标准
》一文中，提到IOCs的几个参考指标中，日均更新量、条目数量都很容易注水，建议用发生命中的独立IOC数、命中的总次数、非开源IOC的占比这三个指标来衡量情报IOCs的全面性。然而，在笔者获知的某个真实测试案例中，某厂商居然在自己的测试系统中用随机碰撞命中再随机标记威胁类型的方式来刷命中数，并被竞对当场抓到。由此可见黑盒模式下，我们以为有用的测试方法，也不见得躲得过各种套路。此外，还听说过为了保证威胁检出率，让自家或甲方小伙伴在模拟攻击流量时，于payload中暗藏特定的tag，确保一抓一个准的。或是有专门的测试机，实际性能比宣称性能高上数倍的，等等等等，诸如此类，防不胜防。
最后，只能提醒一下甲方同学，最好是自己写测试用例且用例尽量全（正反向用例都要考虑），尽量做到测试时间、过程和内容对参测厂商黑盒，用套路反套路，方有可能避免被套路。
## 四、这是一个“比烂”的时代：不需要做好，只需要证明别人更烂
最后这节，是吐槽产品的。此文写成时，正值某年度大型线上真人匿名交友活动第二阶段如火如荼之时，笔者所在单位虽不在活动名单中，却也从各个渠道获得了各种信息。其中最多的，就是每天的安全产品花式爆洞环节，以及后续的在线撕逼和飞翔的小道消息。在吃瓜的同时，作为一个安全从业者，却又深感悲哀。
从何时起，安全行业变成了一个“比烂”的行业？从何时起，安全产品成为整个甲方安全体系里面最不安全、最不可控的环节？从何时起，一个安全产品的好坏和口碑，是靠证明别人的产品更烂来评价的？明明各个厂商有着大量的攻防专家，有着丰富的理论基础，还到处指导、协助甲方去规划安全体系、做安全攻防演练和测试、建SDLC和Devsecops，却搞不定自家产品一个简单的SQL注入或是越权？除此之外，肆无忌惮地爆竞对的产品漏洞，将用对方产品的甲方置于无防护状态，心惊胆战。用这种方法来证明自己能力强，别人烂，又怎么能让甲方对乙方能报以更多的信任？
这或许就是为什么阿里、腾讯、华为、百度、美团等大厂在大部分情况下宁可招高水平的人自研大部分安全工具，也不愿用外部产品的原因之一吧。
## 写在最后
造词、填词和忽悠，在当前安全行业厂商所面临的生存、资本压力下，从商业角度，笔者表示很能理解，毕竟十多年混迹乙方，自己也干过这些事。然而，比烂这件事，算是与“安全为国，不忘初心”的宗旨相违背的。
安全，和芯片、机床这些东西一样，无论外表如何花团锦簇，如何粉饰太平，最终是要拉到战场上见真章，对外打硬仗的。无论热词怎么造，怎么填，也无论怎么忽悠，内功修炼还是得扎实，该干的事还是得干好，比烂是千万要不得。真不希望等到真需要我们为国效力时，却只能喊一句“臣妾做不到”。
所以，希望大家少一点浮躁，多一点踏实。这个行业，毕竟我们还是要待很久的。