### Android App逆向工程与签章技术

#### 演讲者：Joey Chen
- **联系方式**：27350000 @ hst.tw

#### 演讲主题：“三不一没有”
- **三不**
  - 我不是黑客（我只是一个普通人）
  - 我对Android并不精通
  - 这场演讲内容简单易懂，适合所有人
- **一没有**
  - 演讲中不会有很多笑话，希望大家能够理解并支持

#### 关于我
- **姓名**：Joey Chen
- **现职**：
  - 国立台湾科技大学资管所研究生
  - Hack-Stuff Technology Core 成员
  - 趋势科技实习生
- **证照**：
  - ISO 27001:2013
  - BS 10012:2009
- **经历**：
  - 2012年黑客年会第三名
  - 2013年黑客年会第二名
  - 2014年Honeynet CTF第二名
- **专长**：
  - 加解密与数位签章
  - 逆向工程

#### 演讲重点
- 本次演讲将不再过多涉及“技术”层面。
- 演讲的核心在于强调“努力”的重要性。
- 希望大家能够找到自己的“热情”。

#### 大纲
- 逆向工程
- 签章技术
- 工具介绍
- Android OS介绍
- 拆解第一个App
- 修改第一个App
- 保护App
- 结论
- Q&A

#### 预备知识（1）：逆向工程
- **编译器 vs. 逆向工程师**
- **直译式语言 vs. 编译式语言**
- **不同编程语言**：如C/C++、.Net、Java等
- **文件格式**：如*.exe、*.dll、*.jar等
- **编译过程**：
  - 原始码 -> 预处理 -> 编译 -> 组译 -> 连接 -> 执行档
  - 中间生成的文件包括：*.obj、*.lib

#### 工具介绍
- **Genymocom**：虚拟设备模拟工具
- **Sublime**：代码编辑器
- **IDA Pro**：反汇编和调试工具

#### 预备知识（2）：数位签章
- **发送方**：
  - 使用私钥加密哈希值，生成签名
- **接收方**：
  - 使用公钥解密签名，验证数据完整性及发送方身份
- **流程**：
  - 发送方使用杂凑函数生成哈希值
  - 私钥加密哈希值，生成签名
  - 将签名与原文一起发送给接收方
  - 接收方使用公钥解密签名，验证哈希值是否一致

#### Android OS
- **资料来源**：[Wikipedia](https://en.wikipedia.org/wiki/Android_(operating_system))

#### APK打包过程
- **应用资源**：包括R.java、.class文件、源代码、.aidl文件等
- **编译步骤**：
  - aapt处理资源
  - aidl处理接口
  - Java编译器编译源代码
  - dex编译字节码
  - apkbuilder打包成APK
- **第三方库**：包含.class文件和其他资源

#### APK签章过程
- **Keystore**：存储密钥
- **Jarsigner**：签署APK
- **Zipalign**：优化APK对齐
  - 对齐后的APK文件访问速度更快

#### 破解第一支App
- **破解工具**：Apktool, dex2jar, JD-GUI, IDA Pro, androguard
- **环境**：OSX, Windows, Linux
- **开发工具**：Eclipse, Android SDK, Android NDK, Genymotion
- **先备语言**：Java, C/C++, .Net

#### 检视APK档案格式
- **APK**：Android应用程式套件
  - **META-INF**：包含MANIFEST.MF、CERT.RSA、CERT.SF
  - **Lib**：已编译好的程序
  - **Res**：不需要编译的资源文件
  - **Assets**：静态文件
  - **AndroidManifest.xml**：应用清单
  - **classes.dex**：Dalvik虚拟机执行的主要代码
  - **resources.arsc**：编译过的资源文件

#### Apktool
- **功能**：用于反编译和重新编译APK文件

希望以上内容对您有所帮助。如有任何问题，请随时提问。