infer information (such as the visited page on an en-
crypted connection) by solely observing traﬃc pat-
terns at the network/transport level.
Fingerprinting involves a training phase during which
the adversary builds a ﬁngerprint of each of the mon-
itored pages. This is accomplished by fetching multi-
ple times the monitored pages and recording features
of the generated traﬃc such as packet size or inter-
arrival times. Later, the adversary eavesdrops on the
client’s connection, extracts the same features from
the client’s traﬃc, and tries to match the client trace
to one of the ﬁngerprints computed during the train-
ing phase. Diﬀerences between the training data and
the client (or test) data, due to, e.g., diﬀerent routes
or congestions are mitigated using statistical meth-
ods.
We use and adapt to our scenario the ﬁngerprinting
technique of [11] – the most accurate web ﬁngerprint-
ing framework to date – that uses as features the size
and the direction of each packet of a TCP connection.
The classiﬁer is, therefore, robust against diﬀerences
in bandwidth or congestions along the route. The au-
thors of [11] show that page ﬁngerprinting is hard in
an open-world scenario in which the client can browse
Figure 2: Accuracy of the classiﬁer when fetching
pages from a PC (with and without cache) and from
a Mobile Device.
any page outside of the set monitored by the eaves-
dropper. We show that webpage ﬁngerprinting can
be reasonably accurate in a closed-world scenario in
which the eavesdropper monitors all the pages that
the client can possibly visit. This assumption is real-
istic in our settings because the eavesdropper knows
the website requested by the user (by looking at the
SNI in the client_hello message) and must infer
which page she is browsing within that website.
The features we extract from the traﬃc generated
by downloading a page include: the number of in-
coming packets and the number of outgoing ones, the
total size of incoming packets and the total size of out-
going ones, and a trace deﬁned over the size and the
order of the observed packets.3 We use an SVM clas-
siﬁer with an RBF kernel with γ, c ∈ [0.001, 10000].
For each website, we capture with tcpdump the traﬃc
generated by fetching each of the 1-st level pages 50
times and measure the accuracy of the classiﬁer using
10-fold cross validation.
Classiﬁer Accuracy.
For this experiment we pick 9 websites that have
low Jaccard index between the main page and the 1-st
3Given the space constraints, we refer the reader
to [11] for the details on the feature selection process.
ShoppingScienceComputers&ElectronicsBusiness&IndustrialOnlineCommunitiesNewsInternet&TelecomPets&AnimalsBeauty&FitnessFinanceArts&EntertainmentTravelHobbies&LeisureBooks&LiteratureHome&GardenFood&DrinkLaw&GovernmentJobs&EducationAutos&VehiclesReferencePeople&SocietySportsRealEstateGames0.00.20.40.60.81.0JaccardIndexamazon.comrakuten.comaarp.comwonderhowto.comabout.commashable.comslashdot.orgnbcnews.comreuters.com0.00.20.40.60.81.0ClassiﬁerAccuracyPC(NoCache)PC(Cache)MobileDevice375papers, retailers and other websites such as the main
railway company in Spain (www.renfe.com/).
We have trained a classiﬁer for each one of the se-
lected website in the “PC, No-cache” scenario. As
shown in Figure 3, proﬁling accuracy is higher than
90% for 18 of the 33 websites, and higher than 70%
for 29 of them. We experienced worse results on
4 websites: the proﬁling accuracy on www.antena3.
com/, www.tripadvisor.es/, www.fnac.es/ and www.
ebay.es/ was 13, 41, 45 and 49% respectively. Those
websites use a common template to show most of the
internal pages and leverage CDNs to deliver content.
Since our system does not consider data fetched from
other domains (i.e., CDNs) the common template of
the internal pages make webpage prediction a hard
task. We speculate that jointly considering the data
fetched from CDNs will increase the proﬁling accu-
racy but defer this to future work.
From Page Prediction to User Proﬁling.
In this experiment we take a closer look at the eﬀect
of the classiﬁer accuracy on the quality of the user
proﬁles built by the eavesdropper.
Figure 4a shows the confusion matrix for edition.
cnn.com/ where pages are sorted lexicographically
based on their URL. For the same website and the
same sorting of its pages, the matrix in Figure 4b
shows the Jaccard index between any pair of 1st-
level pages. Due to the sorting, pages under the same
branch of the website, say edition.cnn.com/style/ ap-
pear sequentially, in both matrices. Figure 4a shows
that when the classiﬁer makes a mistake, the output
page tends to be “close” to the correct one. For exam-
ple edition.cnn.com/style/arts/ is often mis-classiﬁed
as edition.cnn.com/style/fashion/ and viceversa. This
is because the features we use to train the classiﬁer
look at the structure of a page (e.g., the number and
position of textboxes) rather than its content (e.g.,
the actual text). Therefore, when pages within the
same branch of a website share a similar structure,
we experience classiﬁcation mistakes similar to the
ones of Figure 4a.
When mis-classiﬁcation happens, the amount of
damage to user proﬁling accuracy depends on whether
the categories of the true page and the categories of
the page output by the classiﬁer overlap or not. For
example, because of their similar structure, edition.
cnn.com/asia/ is likely to be predicted as edition.cnn.
com/africa/ by the classiﬁer (see box 1 in Figure 4a);
however, given that the set of their categories is very
similar (see box 1 in Figure 4b), the mistake of the
classiﬁer has very little impact on the quality of user
proﬁling. Of course this is not always the case. For
example the pages under edition.cnn.com/style/ (see
box 2 in Figure 4a) are likely to be confused with
one an other by the classiﬁer. This, however, leads
to high proﬁling error because diﬀerent pages under
Figure 3: Accuracy of the classiﬁer for the most pop-
ular pages in Spain.
level pages (see Figure 1). For each website we train
the classiﬁer and test its accuracy in three diﬀerent
scenarios. We use a PC with Mozilla Firefox with
and without cache, and a mobile device with Google
Chrome with cache enabled.
In the latter scenario
we use the Android emulator to fetch the pages from
an emulated Nexus 5 using the built-in feature of the
emulator to simulate the conditions of a 3G network.
Figure 2 shows the accuracy of the classiﬁer for
the 9 websites in each one of the aforementioned sce-
narios. We found the lower accuracy for the PC with
cache scenario when predicting pages of aarp.com (0.79)
while we experienced the highest accuracy for ama-
zon.com (0.97). Caching inevitably hinders the ac-
curacy of the classiﬁer by 10.3% on average, but the
average accuracy never drops below 0.48. The ac-
curacy decreases because when parts of a page are
in the local cache, the traﬃc trace available to the
classiﬁer becomes shorter and, therefore, more likely
to be confused with that of another page.4 The mo-
bile phone scenario suﬀers from a similar issue, not
due to caching only, but also because mobile versions
of a website are typically simpler than their desktop
counterparts, and thus they end up producing more
similar traﬃc traces.
In order to conﬁrm the results of the previous ex-
periment on a larger number of websites, we selected
the 100 most visited websites from the traces collected
by the main network operator in Spain. After manu-
ally ﬁltering search engines (i.e., www.google.com/),
websites that require the user to login (i.e., www.
facebook.com/) and those ones dedicated to content
delivery or advertising (i.e., www.doubleclick.net/),
we were left with 33 websites including online news-
4In the extreme case of a page whose elements are
all in the cache, the resulting trace becomes totally
indistinguishable from that of any other fully cached
page.
antena3.comtripadvisor.esfnac.esebay.escarrefour.esidealista.comredcoon.eselpais.comforocoches.comeleconomista.estelecinco.eslavanguardia.commilanuncios.compccomponentes.commediamarkt.eselconﬁdencial.comabc.esbooking.comas.comapple.commsn.comes.aliexpress.comelmundo.eshuﬃngtonpost.esmarca.comes.ccm.netrtve.es20minutos.esamazon.comwordreference.comexpansion.comtiendas.mediamarkt.esrenfe.com0.00.20.40.60.81.0ClassiﬁerAccuracy376(a)
(b)
Figure 4: Confussion matrix (a) of the classiﬁer
and the Jaccard index between the categories as-
signed to two diﬀerent pages (b) for edition.cnn.com.
Box number 1 highlights URLs of the type edi-
tion.cnn.com/[region]. Box number 2 shows URLs
under the branch edition.cnn.com/style/
the “style” branch of the website have little overlap in
term of categories (see box 2 in Figure 4b).
Figure 5 depicts the performance of the basic and
the advanced proﬁling techniques when monitoring
the 9 websites of Figure 2. Dashed bars show the
precision and recall of the basic proﬁling technique
described in Section 3. Solid bars show the precision
and recall of the advanced proﬁling mechanism that
leverages the web ﬁngerprinting technique described
above. User proﬁling leveraging web ﬁngerprinting
clearly outperforms the basic proﬁling technique.
Classiﬁer Freshness.
The diﬀerence between the time when the classiﬁer
is trained and the time when pages are predicted may
aﬀect the prediction accuracy. This is especially true
for very dynamic websites (e.g., news or online com-
munity websites).
In this experiment we discretize
Figure 5: Precision and recall of the baseline eaves-
dropper and the eavesdropper leveraging website ﬁn-
gerprinting.
Figure 6: Accuracy of the classiﬁer days after training
for a dynamic website (nbcnews.com) and a static one
(bu.edu).
time in epochs and we assume that website content
only change from one epoch to the next one. If the
train and the test data are collected in the same
epoch, we say that the classiﬁer is fresh; otherwise
we say that the classiﬁer is stale. We deﬁne epochs
as days. We train the classiﬁer over a snapshot of the
website on a given day, and we try to predict pages
fetched throughout the following 6 days.
We expect a detectable diﬀerence in accuracy be-
tween a stale classiﬁer and a fresh one for dynamic
pages where content changes every day (e.g., news
websites). In the case of websites with static content,
the diﬀerence between a stale classiﬁer and a fresh
one are expected to be less pronounced. To verify
this, we add 4 websites with mostly static content (2
corporate and 2 academic ones) to the the 9 websites
of the previous experiments.
Figure 6 shows the eﬀect of staleness on the accu-
racy of the classiﬁer for both a static and a dynamic
website. The dashed lines represent the percentage of
1st-level pages that remain linked in the main page
across days, while the solid ones represent the accu-
racy of the classiﬁer. We observe the accuracy of the
classiﬁer for the dynamic website decreases rapidly
PredictedURLActualURL210102030405060708090100%ofpredictionsPredictedURLActualURL210.00.10.20.30.40.50.60.70.80.91.0JacardIndexamazon.comrakuten.comaarp.comwonderhowto.comabout.commashable.comslashdot.orgnbcnews.comreuters.com0.00.20.40.60.81.0BasicRecallBasicPrecisionAdvancedRecallAdvancedPrecision0123456Daysaftertraining0.00.20.40.60.81.0ClassiﬁerAccuracynbcnews.comClassiﬁerAccuracyStableURLsbu.eduClassiﬁerAccuracyStableURLs377while the accuracy for the static one decreases slowly
during the ﬁrst two days and then stabilizes around
80% accuracy. For both lines, the shadows denote the
minimum and the maximum of the statistics.
5. OPTIMIZING BANDWIDTH USE
In a real-world deployment, the eavesdropper may
not have the bandwidth required to refresh the classi-
ﬁer of each monitored website at every epoch. In the
following we formulate an optimization problem for
maximizing the proﬁling quality given a bandwidth
constraint.
1, . . . , pi
We consider an eavesdropper that monitors a cor-
pus of n websites w1, . . . , wn. Website wi has a main
0 and si 1-st level pages pi
page pi
si. We also
use c(pi
j) to denote the set of categories of page pi
j.
When browsing website wi, the user may visit any
page pi
j, with j = 0, . . . , si. Since the connection is
encrypted, we do not make any assumption on which
are the most popular pages within wi.
If the user
visits page pi
j, the correct categories that should be
assigned to that user when browsing wi are, therefore,