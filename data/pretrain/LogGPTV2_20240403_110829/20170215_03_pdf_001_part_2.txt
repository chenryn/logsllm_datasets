Thereisonlyoneconstructorfunctionforsphericalpoints.
spoint(float8 lng, float8 lat);
wherelng isthelongitudeofthesphericalpointinradians,lng isthelatitudeofthesphericalpointinradians.
Example14.Asphericalpointfromlongitudeandlatitude
Getasphericalpositionwith270◦oflongitudeand-30◦oflatitude.
sql> SELECT spoint ( 270.0*pi()/180.0,-30.0*pi()/180.0 ) AS spoint;
4.2. Euler transformation
TherearetwoconstructorfunctionsforanEulertransformation:
strans(float8 phi, float8 theta, float8 psi);
strans(float8 phi, float8 theta, float8 psi, character axis);
where phi, theta and psi are the three angles of Euler transformation. The fourth parameter is the three
letter code of Euler the transformation axis. If that parameter is omitted, pgSphere will assume ZXZ. For more
informationaboutthatparameter,seeSection3.3.
Example15.CreateanEulertransformationobject
Createatransformationobjecttorotateasphericalobjectcounterclockwise,first20◦ aroundthex-axis,second
-270◦aroundthez-axis,andlast70.5◦aroundthey-axis.
sql> SELECT strans ( 20.0*pi()/180.0, -270.0*pi()/180.0, 70.5*pi()/180.0, ’XZY’);
4.3. Circle
Thefunction
scircle(spoint center, float8 radius);
returnsasphericalcirclewithcenteratcenterandaradiusradiusinradians.Thecircleradiushastobelarger
thanorequaltozerobutlessorequalto90◦.Otherwise,thisfunctionreturnsanerror.
Example16.Acirclearoundthenorthpole
GetasphericalcirclearoundtheNorthPolewitharadiusof30◦.
sql> SELECT set_sphere_output(’DEG’);
set_sphere_output
-------------------
SET DEG
(1 row)
12
pgSphere1.1.5
sql> SELECT scircle ( spoint ’(0d,90d)’, 30.0*pi()/180.0 );
scircle
--------------------
(1 row)
4.4. Line
The input of spherical lines using Euler transformation and length is quite circumstantial (see Section 3.5). For
shortlinesitiseasiertoinputalinespecifyingthebeginningandtheendoftheline.
sline(spoint begin, spoint end);
Ifthedistancebetweenbeginandendis180◦ (π),thisfunctionreturnsanerrorbecausethelocationoftheline
isundefined.However,iflongitudesofbeginandend areequal,pgSphereassumesameridianandreturnsthe
correspondingsphericalline.
Example17.Alinecreatedusingbeginandendofline
Alinestartingatspoint ’(270d,10d)’andendingatspoint ’(270d,30d)’:
sql> SELECT set_sphere_output(’DEG’)
set_sphere_output
-------------------
SET DEG
(1 row)
sql> SELECT sline( spoint ’(270d,10d)’, spoint ’(270d,30d)’);
sline
----------------------------
( 10d, 90d, 270d, ZXZ ), 20d
(1 row)
Furthermore,thereisafunctionforinputingalineusingEulertransformationtransandlinelengthlength
sline(strans trans, float8 length);
wherethelinelengthlengthmustbegiveninradians.
Example18.Alinecreatedwithitstransformationandlength
ThesamelineasinExample17,butusingtransformationandlinelength.
sql> SELECT sline ( strans ’10d, 90d, 270d, ZXZ’, 20.0*pi()/180.0 );
sline
------------------------------
( 10d, 90d, 270d, ZXZ ), 20d
(1 row)
4.5. Ellipse
Youcanusethefunction
sellipse(spoint center, float8 major_rad, float8 minor_rad, float8 incl);
13
pgSphere1.1.5
tocreateasphericalellipse.Thefirstparametercenter isthecenterofellipse.Theparametermajor_rad and
minor_rad arethemajorandtheminorradiioftheellipseinradians.Ifthemajorradiusissmallerthanminor
radius,pgSphereswapsthevaluesautomatically.Thelastparameterinclistheinclinationangleinradians.For
moreinformationsaboutellipses,seeSection3.6.
Example19.Createanellipse
Anellipsewithacenterat20◦ oflongitudeand0◦ oflatitude.Theminorradiusispartoftheequator.Themajor
radiushasasizeof10◦.Theminorradiushas5◦.
sql> SELECT set_sphere_output(’DEG’);
set_sphere_output
-------------------
SET DEG
(1 row)
sql> SELECT sellipse ( spoint ’( 20d, 0d )’, 10.0*pi()/180.0, 5.0*pi()/180.0,
pi()/2.0 );
sellipse
-----------------------------------
(1 row)
4.6. Polygon
Theaggregatefunction
spoly(spoint edge);
canbeusedtocreateapolygonfromasetofsphericalpoints.Therearethesamerestrictionsasforusingtheinput
functionofsphericalpolygon(seeSection3.8).ThefunctionreturnsNULL,ifthepolygoncouldn’tbecreated.
Example20. Createasphericalpolygonusingasetofsphericalpoints
CreateatableandputinsomesphericalpointswithauniqueID.Then,createtwopolygonswithdifferentedge
sequences.
sql> SELECT set_sphere_output(’DEG’);
set_sphere_output
-------------------
SET DEG
(1 row)
sql> CREATE TABLE points ( i int PRIMARY KEY, p spoint );
sql> INSERT INTO points VALUES (1, ’( 0d, 0d)’);
sql> INSERT INTO points VALUES (2, ’(10d, 0d)’);
sql> INSERT INTO points VALUES (3, ’( 0d,10d)’);
sql> SELECT spoly(data.p) FROM ( SELECT p FROM points ORDER BY i ASC ) AS data ;
spoly
-----------------------------------
{(0d , 0d),(10d , 0d),(0d , 10d)}
(1 row)
sql> SELECT spoly(data.p) FROM ( SELECT p FROM points ORDER BY i DESC ) AS data ;
spoly
-----------------------------------
{(0d , 10d),(10d , 0d),(0d , 0d)}
(1 row)
14
pgSphere1.1.5
4.7. Path
Similartosphericalpolygons,youcanusetheaggregatefunction
spath(spoint edge);
tocreateasphericalpathusingasetofsphericalpoints.Therearethesamerestrictionsaswiththeinputfunction
ofsphericalpath(seeSection3.7).ThefunctionreturnsNULLifthepathcouldn’tbecreated.
Example21. Createasphericalpathusingasetofsphericalpoints
CreateatableandputinsomesphericalpointswithauniqueID.Then,createasphericalpathfromit.
sql> SELECT set_sphere_output(’DEG’);
set_sphere_output
-------------------
SET DEG
(1 row)
sql> CREATE TABLE points ( i int PRIMARY KEY, p spoint );
sql> INSERT INTO points VALUES (1, ’( 0d, 10d)’);
sql> INSERT INTO points VALUES (2, ’( 0d, 0d)’);
sql> INSERT INTO points VALUES (3, ’( 0d,-10d)’);
sql> SELECT spath(data.p) FROM ( SELECT p FROM points ORDER BY i ASC ) AS data ;
spath
---------------------------------------------------
{(0d , 10d),(0d , 0d),(0d , -10d)}
(1 row)
sql> SELECT spath(data.p) FROM ( SELECT p FROM points ORDER BY i DESC ) AS data ;
spath
---------------------------------------------------
{(0d , -10d),(0d , 0d),(0d , 10d)}
(1 row)
4.8. Coordinates range
Thefunction
sbox(spoint south_west, spoint north_east);
creates an sbox object with its first parameter south_west as the southwest edge and its second parameter
northeastasthenorth-eastedgeofthecoordinatesrange.
Example22.Createasphericalboxusingedges
Acoordinaterangebetween0◦and+10◦inlatitudeandlongitude.
sql> SELECT sbox ( spoint ’(0d,0d),(10d,10d)’ );
15
pgSphere1.1.5
5. Operators
5.1. Casting
pgSphereprovidessomecastingoperators.So,youcantransformanobjecttoanotherdatatype.Acastisdone
usingaCAST(x AS typename),x::typenameortypename(x)construct.
Table2.Castings
castingargument
typetarget returns
spoint scircle circlewithcenterpositionspointandradius0.0
spoint sellipse anellipseatpositionspointandradius0.0
spoint sline alinewithlength0.0atpositionspoint
scircle sellipse thescircleassellipse
sline strans theEulertransformationofsline
sellipse scircle theboundingcircleofsellipse
sellipse strans theEulertransformationofsellipse
Example23.Castasphericalpointasacircle
sql> SELECT CAST ( spoint ’(10d,20d)’ AS scircle );
scircle
--------------------
(1 row)
5.2. Equality
AlldatatypesofpgSpherehaveequalityoperators.TheequalityoperatorisasinSQL=.Furthermore,thereare
twovalidnegatorstoindicatethattwoobjectsarenotequal:!=and<>.
Example24.Equalityoftwosphericalpoints
sql> SELECT spoint ’(10d,20d)’ = spoint ’(370d,20d)’ ;
test
------
t
(1 row)
5.3. Contain and overlap
On the sphere, an equality relationship is rarely used. There are frequently questions like Is object a contained
byobjectb?orDoesobjectaoverlapobjectb?pgSpheresupportssuchqueriesusingbinaryoperatorsreturning
trueorfalse:
16
pgSphere1.1.5
Table3.Containandoverlapoperators
operator operatorreturnstrue,if
@or theleftobjectcontainstherightobject
!@or! theleftobjectdoesnotcontaintherightobject
&& theobjectsoverlapeachother
!&& theobjectsdonotoverlapeachother
Anoverlaporcontainoperatordoesnotexistforallcombinationsofdatatypes.Forinstance,scircle@spointis
uselessbecauseasphericalpointcannevercontainasphericalcircle.
Example25.Istheleftcirclecontainedbytherightcircle?
sql> SELECT scircle ’’ @ scircle ’’ AS test ;
test
------
t
(1 row)
Example26.Arethecirclesoverlapping?
sql> SELECT scircle ’’ && scircle ’’ AS test ;
test
------
f
(1 row)
5.4. Crossing of lines
Another binary relationship is crossing. pgSphere supports only crossing of lines. The correlative operator is
named#.
Example27.Arethelinescrossed?
sql> SELECT sline ’(0d,0d,0d),10d’ # sline ’(90d,5d,5d,XYZ),10d’ AS test ;
test
------
t
(1 row)
5.5. Distance
Thebinarydistanceoperatorisanon-booleanoperatorreturningthedistancebetweentwoobjectsinradians.
Currently,pgSpheresupportsonlydistancesbetweenpoints,circles,andbetweenpointandcircle.Iftheobjects
areoverlapping,thedistanceoperatorreturnszero(0.0).
17
pgSphere1.1.5
Example28.Distancebetweentwocircles
sql> SELECT 180 * ( scircle ’’  scircle ’’ )
/ pi() AS dist ;
dist
------
16
(1 row)
5.6. Length and circumference
Thelength/circumferenceoperator@-@isanon-booleanunaryoperatorreturningthecircumferenceorlengthof
an object. In the current implementation, pgSphere supports only circumferences of circles, polygons, and
boxes. It supports lengths of lines and paths too. Instead of using the operator, you can use the functions
circum(object)orlength(object).
Example29.Circumferenceofacircle
sql> SELECT 180 * ( @-@ scircle ’’ )/ pi() AS circ ;
circ
------
180
(1 row)
Example30.Lengthofaline
sql> SELECT 180 * ( @-@ sline ’(0d,0d,0d),30d’ )/ pi() AS length ;
length
--------
30
(1 row)
5.7. Center
The center operator @@ is a non-boolean unary operator returning the center of an object. In the current imple-
mentationofpgSphere,onlycentersofcirclesandellipsesaresupported.Insteadofusingtheoperator,youcan
usethefunctioncenter(object).
Example31.Centerofacircle
sql> SELECT @@ scircle ’’;
5.8. Change the direction
Theunaryoperator-changesthedirectionofslineorspathobjects.YoucanuseitwithanEulertransformation
objectinthefigurativesense,too(Section5.10).
18
pgSphere1.1.5
Example32.Swapbeginandendofasline
sql> SELECT - sline (spoint ’(0d,0d)’, spoint ’(10d,0d)’);
5.9. Turn the path of a line
Theunaryoperator!turnsthepathofslineobjects,butpreservesbeginandendofthesphericalline.Thelength
ofreturnedlinewillbe360◦minusthelinelengthofoperator’sargument.
Theoperator!returnsNULL,ifthelengthofslineargumentis0,becausethepathofreturnedslineisundefined.
Example33.Returnlengthandcheckifnorthpoleonslines
sql> SELECT set_sphere_output(’DEG’);
set_sphere_output
-------------------
SET DEG
(1 row)
sql> SELECT length ( sline ( spoint ’(0d,0d)’, spoint ’(0d,10d)’ ) ) *
180.0 / pi() AS length;
length
--------
10
(1 row)
sql> SELECT spoint ’(0d,90d)’ @
sline ( spoint ’(0d,0d)’, spoint ’(0d,10d)’ ) AS test;
test
------
f
(1 row)
sql> SELECT length ( ! sline ( spoint ’(0d,0d)’, spoint ’(0d,10d)’ ) ) *
180.0 / pi() AS length;
length
--------
350
(1 row)
sql> SELECT spoint ’(0d,90d)’ @
! sline ( spoint ’(0d,0d)’, spoint ’(0d,10d)’ ) AS test;
test
------
t
(1 row)
5.10. Transformation
As in a plane, translations and rotations are needed to do object or coordinate transformations. With pgSphere,
it is done using Euler transformations (strans). On a sphere, there aren’t real translations. All movements on a