# Custom Client for Video Streaming: Analysis and Optimization

## 1. Introduction
This document analyzes a custom client designed to mimic the behavior of a commercial video streaming service, referred to as "Service A." The custom client is used to validate and optimize the rate selection algorithm, filtering method, and segment size. We explore how these changes affect the video quality, playback buffer, and overall user experience.

## 2. Initial Setup and Validation
### 2.1 Bandwidth Estimation and Filtering
Service A estimates bandwidth by dividing the download size by the download time and passing it through a fixed-size moving average filter. Traces suggest a filter with 10 samples, though the actual algorithm may be more nuanced.

### 2.2 Custom Client Configuration
To closely mimic Service A, our custom client:
- Requests video segments from the same CDN locations.
- Uses the same segment sizes and map.
- Sets the playback buffer to 240 seconds.
- Uses a single persistent connection to the server.
- Pauses when the buffer is full.

### 2.3 Validation
Figure 20 shows the custom client in action. After downloading each segment, the custom client selects the playback rate based on Service A's conservative rate selection algorithm. When a competing flow starts, the playback rate drops suddenly, then fluctuates. The downward spiral does not bottom out, suggesting subtle differences between Service A's algorithm and ours.

## 3. Optimizations
### 3.1 Less Conservative Algorithm
Bandwidth estimates based on download sizes and durations tend to under-report available bandwidth, especially in the presence of a competing flow. A less conservative algorithm (10% conservatism instead of 40%) results in higher video rates and higher quality video, while maintaining high playback buffer occupancy. Figure 21 illustrates this.

### 3.2 Better Filtering
Averaging filters provide stable bandwidth estimates but are vulnerable to outliers. Using medians or percentiles can reduce this vulnerability. Figure 22 shows the effect of using the 80th percentile of measured rates over the past ten segment downloads. This reduces variation, and the majority of the movie plays at the highest available rate.

### 3.3 Bigger Segments
Larger segments provide better bandwidth estimates and allow TCP to escape slow-start. Figure 23 shows the effect of aggregating five requests into one. With larger segment sizes, the video throughput and playback rate are more stable.

## 4. Summary of Findings
- Larger segments let TCP reach its fair share and improve video throughput.
- Picking higher rates less conservatively and filtering measurements more carefully can improve video quality.
- These improvements are specific to one movie on one service and should not be interpreted as hard recommendations.

## 5. Related Work
### 5.1 Video Streaming Services
Commercial services like Adobe, Apple, and Microsoft use HTTP for video streaming. MPEG DASH standardizes video content formatting and leaves the specific client player algorithm open. These techniques underpin major services like YouTube, Netflix, and Hulu.

### 5.2 Video Streaming Measurement
Studies measure the performance of video streaming clients under various conditions. Some focus on unfairness problems among players, while others examine the impact of network characteristics on video streaming traffic.

### 5.3 Rate Selection Algorithms
Research on rate selection algorithms complements our work. For example, [8] proposes an algorithm to maintain the playout buffer at a target level, and [17] implements a buffer-aware rate selection algorithm.

## 6. Conclusion
All three services studied display degraded performance in the presence of competing traffic. The root cause is a lack of information at the HTTP layer about the fair share of bandwidth. Two potential solutions are:
1. Improve information flow from TCP to the HTTP layer.
2. Eliminate bandwidth estimation and rely on TCP for fair share allocation.

Future research could design video-streaming clients that deliver high performance by eliminating bandwidth estimation altogether.

## 7. Acknowledgments
We thank the anonymous reviewers, Nina Taft, and other contributors for their valuable feedback. This work was supported by various fellowships and grants.

## 8. References
[1] Adhikari, V., Guo, Y., Hao, F., Hilt, V., & Zhang, Z.-L. (2012). A Tale of Three CDNs: An Active Measurement Study of Hulu and its CDNs. In Proceedings of IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), pages 7–12, March 2012.
...
[24] Zink, M., Suh, K., Gu, Y., & Kurose, J. (2009). Characteristics of YouTube network traffic at a campus network - Measurements, models, and implications. In Computer Networks, Volume 53, Issue 4, pages 501–514. Elsevier, 2009.