title:POSTER: Fingerprinting Tor Hidden Services
author:Asya Mitseva and
Andriy Panchenko and
Fabian Lanze and
Martin Henze and
Klaus Wehrle and
Thomas Engel
CHAPTER 66
Tor Hidden Services
One natural by-product of creating an anonymization network
protocol like that used by Tor is that it makes it possible for a node
that exists on the network to act not just as a client (e.g., for browsing
websites on the public Internet anonymously) but also to act as a
server. A server that can be accessed by other clients within the ano-
nymity network, while the actual location (IP address) of the server
remains anonymous.
When using Tor to maintain anonymity as a client while accessing
the global Internet, the Tor network itself (comprising all those systems
set up to act as Tor relays) functions (for the user) like a simple
network proxy.
The user in those cases doesn’t access anything connected to the
Tor anonymity network, except Tor relays. This actually implies that
there is (and must be) a Tor networking protocol capable of support-
ing basic networking functions (directory services, routing protocols)
and data formats, and the rest of the infrastructure to allow systems to
communicate anonymously—whether they are acting as clients or ser-
vers. This is how the anonymization network produces as a by-product
the ability to run a server, anonymously.
6.1 WHY? WHY PEOPLE WANT TO USE HIDDEN SERVICES
The first question about Tor hidden services is usually about “good”
uses for Tor hidden services; this is probably the result of the amount
of media coverage given to Tor hidden services that are used to break
laws, fueled by calls for regulation of Tor by frustrated politicians and
law enforcement officials.
Why speak of “good” (or “bad”) here? Like any tool, Tor hidden
services are not in themselves inherently good or bad, but they can be
used to achieve good or bad ends. While hidden services can be (and
are) used by criminals, they are also used by those working on behalf
of human rights, personal freedom, and safety for victims of abuse.
90
Practical Anonymity
The difference is that if there were no Tor network, criminals are will-
ing and able to commit crimes to further their activities by stealing
mobile phones, hacking e-mail accounts,
identity theft, and more.
Law-abiding citizens do not have these options to secure their own
personal privacy.
Any service that can be published to the Internet can be hosted as a
Tor hidden service, though most commonly people set up a web server
to run as a hidden web server. You could also set up e-mail, file
transfer, or chat servers as hidden services.
Tor Project’s page, “Using Tor hidden services for good” (https://blog.
torproject.org/blog/using-tor-good), is a good place to start for some sug-
gested applications, and for understanding the valuable benefits of using
them. Here is a short overview of some of those “good” uses:
(cid:129) People in areas where state-sponsored attacks prevent them from
blogging freely. One solution is to have someone outside the region
host a hidden server for submitting new content to the blog, and
publish that content on the public Internet as static HTML.
(cid:129) Mirroring a news or activist site as a hidden service means that even
if a government attempts to shut down the site, the hidden service
mirror will still be accessible (to Tor users, at least).
(cid:129) Hidden services are useful for those interested in publishing or col-
lecting information from whistle-blowers, without being subject to
prior restraint or complete censorship by organizations or govern-
ments that may not approve of the publication of unflattering
information. See for example http://globaleaks.org/ or https://wiki-
leaks.org/.
Other possible good uses for Tor hidden services would include chat
or other social media services that cannot track individual users and
that provide a forum for unimpeded free speech in parts of the world
where governments or corporations would prefer to monitor and
censor such speech.
6.2 HOW TOR HIDDEN SERVICES WORK
To run a Tor hidden server, the first requirement is that the system be
connected to the Tor network. While there are ways to access Tor hid-
den services without using Tor, they do not offer any anonymity or
security to the user (see Section 6.2.3).
Tor Hidden Services
91
Anonymity of the publisher begins with the server being a Tor
network node (connected to the Tor network anonymously). Even so,
there is still a network address (an anonymous address) associated with
the (anonymously) connected computer: if I know this address, I can
connect to the web or e-mail server running on that computer, wher-
ever it happens to be and whoever is hosting it.
It’s worthwhile to think of the Tor network as an abstraction, sim-
ply a medium through which nodes communicate anonymously.
Doing so allows you to ignore the details of the creation of Tor cir-
cuits, and more easily visualize the interactions between the various
anonymous nodes.
6.2.1 The Tor Hidden Service Protocol
The Tor Hidden Service Protocol (see https://www.torproject.org/docs/
hidden-services.html) describes how Tor hidden services work. When set-
ting up a Tor hidden service, the hidden server chooses, at random, three
Tor relays to be used as introduction points. The hidden server creates
separate Tor circuits for each of these relays: three separate and complete
Tor circuits, so that none of the introduction points are connected to
the same IP addresses, but the hidden server is still uniquely identifiable
through cryptographic means. It doesn’t matter what IP address
the server is hiding behind, the hidden server can, and does, prove its
identity cryptographically—by using its own secret key to demonstrate
that it is the owner of the pseudo-URL (also known as the onion address)
derived from the server’s public key.
Once those three Tor circuits are in place, the hidden server can
publish the data necessary to connect: the introduction points and the
identifying data required to cryptographically assure that communica-
tions directed to that hidden service arrive there.
The hidden server registers this data with the systems hosting the
hidden service directory database. When someone wants to connect
to the hidden service, they send a request to this database, which
then directs them to one of the hidden service’s introduction points.
From there, the Tor client and the hidden server negotiate a circuit
through a rendezvous point. At
the client has three
Tor relays between it and the rendezvous point, and the hidden
server is similarly buffered by three Tor relays between itself and its
rendezvous point.
this point,
92
Practical Anonymity
In other words, it goes like this:
Tor client 
hidden server
Tor entry relay 
Tor entry relay 
Tor transit relay 
Tor transit relay 
Tor transit relay  
Tor transit relay 
 RENDEZVOUS POINT 
The introduction points know the client and server only through
their anonymized Tor circuits; the client and server then negotiate fur-
ther anonymity by using the introduction point only long enough to
set up the rendezvous point. The rendezvous point will be different
every time the client and server connect, so it becomes difficult/impos-
sible to link a hidden service with a location by monitoring and com-
paring network traffic. And even the introduction points have no way
of linking the hidden server with an IP address, because the introduc-
tion points point only to the Tor transit nodes through which the hid-
den service is connected, not the hidden server itself.
6.2.2 Onion Pseudo-URLs
Tor hidden services are not directly addressable from the global/public
Internet: instead of a standard Internet domain name (like example.
com or example.org), they must use what is known as a pseudo-URL.
Tor hidden service names sort of look like ordinary domain names,
but rather than using a global Internet top-level domain (like .com,
.edu, .de, or .info) they end in .onion (pronounced “dot-onion” and
referring to the origins of the Tor project, onion routing).
The first part of the domain name is a 16-character string (numbers
and letters only) that is derived from the hidden service’s public key (see
section 6.3, “How to Set Up a Tor HIdden Service”, for more on
page 95). These names appear randomly, and are necessary so that the
hidden server can respond to requests by authenticating themselves using
their secret key to demonstrate they are, indeed, the holder of the public
key linked to that 16-byte service name.
See Table 6.1 for some examples of Tor hidden services and their
Tor addresses.
Tor Hidden Services
93
The .onion domain names form the pseudo-URLs in the same way
that public Internet domain names are used to make URLs. So to
reach a nonweb service, like file transfer protocol (FTP), you would
create a pseudo-URL like this:
ftp://kj22ic3odyoqeac7.onion
Also, to address a page on a .onion website, you would add the
directory/filename the same as with a standard URL:
http://kj22ic3odyoqeac7.onion/blog/this-is-a-blog-entry-title
Note that hidden services aren’t usually published as HTTPS sites,
because to do so would require setting up a cryptographic certificate,
which might compromise anonymity for the publisher. Also, because
(of course) content sent to and from a hidden service is already
encrypted sufficiently to protect against network monitoring—exactly
the purpose of using HTTPS (see sidebar, “HTTP Secure and HTTPS
Everywhere”, on page 15).
6.2.3 Web-to-Onion Proxies
The Tor network is just that, a network—the same as the global Internet
is a network. When someone wants to connect from one network to
another, there must, first, be a physical network connection: a wireless
network, a physical cable link, or a special system that has physical con-
nections to both networks.
Table 6.1 Some Examples of Tor Hidden Services and Their Tor Addresses
Description
Hidden Service
The Tor Project website, hosted as a
hidden service
Tor Project package archive of all
software released by Tor Project
Tor Project official bug tracker and
wiki site
Tor Project official media archive: all
Tor images, videos, and related files
http://idnxcnkne4qt76tg.onion/
http://j6im4v42ur6dpic3.onion/
http://vwp5zrdfwmw4avcq.onion/
http://p3igkncehackjtib.onion/
Duck Duck Go (anonymous web searching)
http://3g2upl4pq6kufc4m.onion/
New Yorker Strongbox, for anonymously s
ubmitting files or messages to New Yorker magazine
staff
http://tnysbtbxsf356hiy.onion
Note that the Tor Project hidden service hosts the exact same website as hosted at torproject.org, which means
that links to other Tor Project websites (such as the Tor Project bug tracker/wiki and the Tor Project blog)
point to the public Internet, not the .onion versions of those sites; see below for those addresses.
94
Practical Anonymity
If the systems on both networks use the same set of protocols to
determine how data is exchanged, such as TCP/IP for networks like
the Internet, then interoperability requires only the network connection
and the common protocols.
However, the Tor network uses a different set of protocols (the Tor
protocols), which run on top of TCP/IP; the Internet uses TCP/IP
alone. To connect to a Tor hidden service, you would need to run
Tor—OR, you could connect via Internet to a system that is connected
both to the Tor network and the Internet.
There are a number of websites that do just that: they accept a Tor
hidden service, .onion address, and act as a proxy to that service.
Some onion proxy services include:
tor2web (http://tor2web.org/);
(cid:129)
(cid:129) Onion.to (http://onion.to/);
(cid:129) Onion.sh (https://onion.sh/).
While this type of Tor hidden service proxy can be convenient for
quickly taking a peek at hidden services, they do not provide any real
protection for the user, and may represent an extra risk, in that the
operators of these proxy websites may retain information from your
sessions with the hidden servers. The publishers of the hidden services
are still shielded, but your activity on those sites will be relatively easy
for an adversary to monitor and link to you.
6.2.4 Turning Over the Rocks
There are probably quite a few hidden services floating around the Tor