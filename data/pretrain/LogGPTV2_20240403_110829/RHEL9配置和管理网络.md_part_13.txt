**其他资源**
-   `nm-settings(5)`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#proc_creating-a-network-bridge-with-a-vxlan-attached_assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms}创建附加了 VXLAN 的网络桥接 {.title}
:::
要使虚拟可扩展局域网(VXLAN)无法对虚拟机(VM)可见，在主机上创建一个网桥，并将
VXLAN 与网桥连接。使用 NetworkManager 创建网桥和
VXLAN。您不会向网桥中添加虚拟机的任何流量访问点(TAP)设备（通常名为
`vnet*`{.literal} ）。`libvirtd`{.literal} 服务在虚拟机启动时动态添加。
在 RHEL 主机上运行这个步骤，并相应地调整 IP 地址。
::: orderedlist
**步骤**
1.  创建网桥 `br0`{.literal} ：
    ``` literallayout
    # nmcli connection add type bridge con-name br0 ifname br0 ipv4.method disabled ipv6.method disabled
    ```
    此命令在网桥设备上设置 IPv4 和 IPv6 地址，因为此网桥在第 2
    层中工作。
2.  创建 VXLAN 接口，并将它连接到 `br0`{.literal} ：
    ``` literallayout
    # nmcli connection add type vxlan slave-type bridge con-name br0-vxlan10 ifname vxlan10 id 10 local 198.51.100.2 remote 203.0.113.1 master br0
    ```
    这个命令使用以下设置：
    ::: itemizedlist
    -   `id 10`{.literal} ：设置 VXLAN 标识符。
    -   `local 198.51.100.2`{.literal} ：设置传出数据包的源 IP 地址。
    -   `remote 203.0.113.1`{.literal} ：当 VXLAN
        设备转发数据库中不知道目标链路层地址时，将单播或多播 IP
        地址设置为在传出数据包中使用。
    -   `master br0`{.literal} ：设置此 VXLAN 连接，使其在
        `br0`{.literal} 连接中作为端口创建。
    -   `ipv4.method disabled`{.literal} 和
        `ipv6.method disabled`{.literal} ：禁用网桥上的 IPv4 和 IPv6。
    :::
    默认情况下，NetworkManager 使用 `8472`{.literal}
    作为目的地端口。如果目标端口不同，还要将
    `destination-port `{.literal} 选项传递给该命令。
3.  激活 `br0`{.literal} 连接配置集：
    ``` literallayout
    # nmcli connection up br0
    ```
4.  在本地防火墙中为传入的 UDP 连接打开端口 `8472`{.literal} ：
    ``` literallayout
    # firewall-cmd --permanent --add-port=8472/udp
    # firewall-cmd --reload
    ```
:::
::: itemizedlist
**验证**
-   显示转发表：
    ``` literallayout
    # bridge fdb show dev vxlan10
    2a:53:bd:d5:b3:0a master br0 permanent
    00:00:00:00:00:00 dst 203.0.113.1 self permanent
    ...
    ```
:::
::: itemizedlist
**其他资源**
-   `nm-settings(5)`{.literal}
:::
:::
::: section
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#proc_creating-a-virtual-network-in-libvirt-with-an-existing-bridge_assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms}使用现有网桥在 libvirt 中创建虚拟网络 {.title}
:::
要启用虚拟机(VM)将 `br0`{.literal} 网桥与附加的虚拟可扩展
LAN(VXLAN)一起使用，首先向使用该网桥的 `libvirtd`{.literal}
服务添加虚拟网络。
::: itemizedlist
**先决条件**
-   已安装 `libvirt`{.literal} 软件包。
-   您启动并启用 `libvirtd`{.literal} 服务。
-   已使用 RHEL 上的 VXLAN 配置了 `br0`{.literal} 设备。
:::
::: orderedlist
**步骤**
1.  使用以下内容创建 `~/vxlan10-bridge.xml`{.literal} 文件：
    ``` literallayout
     vxlan10-bridge
    ```
2.  使用 `~/vxlan10-bridge.xml`{.literal} 文件在 `libvirt`{.literal}
    中创建一个新虚拟网络：
    ``` literallayout
    # virsh net-define ~/vxlan10-bridge.xml
    ```
3.  删除 `~/vxlan10-bridge.xml`{.literal} 文件：
    ``` literallayout
    # rm ~/vxlan10-bridge.xml
    ```
4.  启动 `vxlan10-bridge`{.literal} 虚拟网络：
    ``` literallayout
    # virsh net-start vxlan10-bridge
    ```
5.  将 `vxlan10-bridge`{.literal} 虚拟网络配置为在 `libvirtd`{.literal}
    服务启动时自动启动：
    ``` literallayout
    # virsh net-autostart vxlan10-bridge
    ```
:::
::: itemizedlist
**验证**
-   显示虚拟网络列表：
    ``` literallayout
    # virsh net-list
     Name              State    Autostart   Persistent
    ----------------------------------------------------
     vxlan10-bridge    active   yes         yes
     ...
    ```
:::
::: itemizedlist
**其他资源**
-   `virsh(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms_configuring-and-managing-networking.html#proc_proc_configuring-virtual-machines-to-use-vxlan_assembly_using-a-vxlan-to-create-a-virtual-layer-2-domain-for-vms}将虚拟机配置为使用 VXLAN {.title}
:::
要将虚拟机配置为使用主机上附加的虚拟可扩展
LAN(VXLAN)的桥接设备，请创建一个使用 `vxlan10-bridge`{.literal}
虚拟网络的新虚拟机，或更新现有虚拟机的设置以使用此网络。
在 RHEL 主机上执行这个步骤。
::: itemizedlist
**先决条件**
-   您已在 `libvirtd`{.literal} 中配置了 `vxlan10-bridge`{.literal}
    虚拟网络。
:::
::: itemizedlist
**步骤**
-   要创建新虚拟机，并将其配置为使用 `vxlan10-bridge`{.literal}
    网络，在创建虚拟机时将 `--network network:vxlan10-bridge`{.literal}
    选项传递给 `virt-install`{.literal} 命令：
    ``` literallayout
    # virt-install ... --network network:vxlan10-bridge
    ```
-   更改现有虚拟机的网络设置：
    ::: orderedlist
    1.  将虚拟机的网络接口连接到 `vxlan10-bridge`{.literal} 虚拟网络：
        ``` literallayout
        # virt-xml VM_name --edit --network network=vxlan10-bridge
        ```
    2.  关闭虚拟机，然后再次启动它：
        ``` literallayout
        # virsh shutdown VM_name
        # virsh start VM_name
        ```
    :::
:::
::: orderedlist
**验证**
1.  显示主机上虚拟机的虚拟网络接口：
    ``` literallayout
    # virsh domiflist VM_name
     Interface   Type     Source           Model    MAC
    -------------------------------------------------------------------
     vnet1       bridge   vxlan10-bridge   virtio   52:54:00:c5:98:1c
    ```
2.  使用 `bridge-utils`{.literal} 软件包提供的 `brctl`{.literal}
    工具来显示主机上配置的网桥及其附加接口：
    ``` literallayout
    # brctl show
    bridge name	bridge id		STP enabled	interfaces
    br0		8000.9270aef5b21e	yes		vnet1
    							vxlan10
    ```
    请注意，`libvirtd`{.literal} 服务会动态更新网桥的配置。当您启动使用
    `vxlan10-bridge`{.literal} 网络的虚拟机时，主机上的对应的
    `vnet*`{.literal} 设备将显示为网桥的端口。
3.  使用地址解析协议(ARP)请求来验证虚拟机是否位于同一 VXLAN 中：
    ::: orderedlist
    1.  在同一 VXLAN 中启动两个或多个虚拟机。
    2.  从一个虚拟机发送 ARP 请求到另一个虚拟机：
        ``` literallayout
        # arping -c 1 192.0.2.2
        ARPING 192.0.2.2 from 192.0.2.1 enp1s0
        Unicast reply from 192.0.2.2 [52:54:00:c5:98:1c] 1.450ms
        Sent 1 probe(s) (0 broadcast(s))
        Received 1 response(s) (0 request(s), 0 broadcast(s))
        ```
        如果命令显示回复，虚拟机位于相同的第 2
        层域中，在这种情况下，在同一 VXLAN 中。
        安装 `iputils`{.literal} 软件包以使用 `arping`{.literal} 工具。
    :::
:::
::: itemizedlist
**其他资源**
-   `virt-install(1)`{.literal} man page
-   `virt-xml(1)`{.literal} man page
-   `virsh(1)`{.literal} man page
-   `arping(8)`{.literal} man page
:::
:::
:::
[]{#configuring-a-network-bridge_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge_configuring-and-managing-networking}第 10 章 配置网络桥接 {.title}
:::
网络桥接是一个链路层设备，它可根据 MAC
地址列表转发网络间的流量。网桥通过侦听网络流量并了解连接到每个网络的主机来构建
MAC 地址表。例如，您可以使用 Red Hat Enterprise Linux
主机上的软件桥接模拟硬件桥接或在虚拟化环境中，将虚拟机(VM)集成到与主机相同的网络中。
桥接需要在桥接应该连接的每个网络中有一个网络设备。当您配置网桥时，网桥被称为
`controller`{.literal}，其使用的设备为 `ports`{.literal}。
您可以在不同类型的设备中创建桥接，例如：
::: itemizedlist
-   物理和虚拟以太网设备
-   网络绑定
-   网络团队（team）
-   VLAN 设备
:::
由于 IEEE 802.11 标准指定在 Wi-Fi 中使用 3
个地址帧以便有效地使用随机时间，您无法通过 Ad-Hoc 或者 Infrastructure
模式中的 Wi-Fi 网络配置网桥。
::: section
::: titlepage
# []{#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nmcli-commands_configuring-a-network-bridge}使用 nmcli 命令配置网络桥接 {.title}
:::
本节介绍如何使用 `nmcli`{.literal} 实用程序配置网络桥接。
::: itemizedlist
**先决条件**
-   在服务器中安装两个或者两个以上物理或者虚拟网络设备。
-   要将以太网设备用作网桥的端口，必须在服务器中安装物理或者虚拟以太网设备。
-   要使用 team、bond 或 VLAN
    设备作为网桥的端口，您可以在创建桥接时创建这些设备，或者预先创建它们，如：
    ::: itemizedlist
    -   [使用 nmcli
        命令配置网络团队](#configuring-network-teaming_configuring-and-managing-networking.html#configuring-a-network-team-using-nmcli-commands_configuring-network-teaming "使用 nmcli 命令配置网络团队"){.link}
    -   [使用 nmcli
        命令配置网络桥接](#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nmcli-commands_configuring-a-network-bridge "使用 nmcli 命令配置网络桥接"){.link}
    -   [使用 nmcli 命令配置 VLAN
        标记](#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nmcli-commands_configuring-vlan-tagging "使用 nmcli 命令配置 VLAN 标记"){.link}
    :::
:::
::: orderedlist
**步骤**
1.  创建网桥接口：
    ``` literallayout
    # nmcli connection add type bridge con-name bridge0 ifname bridge0
    ```
    这个命令会创建一个名为 `bridge0`{.literal} 的网桥，输入：
2.  显示网络接口，并记录您要添加到网桥中的接口名称：
    ``` literallayout
    # nmcli device status
    DEVICE  TYPE      STATE         CONNECTION
    enp7s0  ethernet  disconnected  --
    enp8s0  ethernet  disconnected  --
    bond0   bond      connected     bond0
    bond1   bond      connected     bond1
    ...
    ```
    在本例中：
    ::: itemizedlist
    -   `enp7s0`{.literal} 和 `enp8s0`{.literal}
        未配置。要将这些设备用作端口，请在下一步中添加连接配置集。
    -   `bond0`{.literal} 和 `bond1`{.literal}
        已有连接配置集。要将这些设备用作端口，请在下一步中修改其配置集。
    :::
3.  将接口分配给网桥。
    ::: orderedlist
    1.  如果没有配置您要分配给网桥的接口，为其创建新的连接配置集：