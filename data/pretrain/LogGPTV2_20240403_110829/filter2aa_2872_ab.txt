  Coil	
  tuned	
  to	
  carrier	
  frequency	
  (e.g.	
  125kHz)	
  Reader	
  energizes	
  coil	
  to	
  power	
  chip	
  Chip	
  modulates	
  signal	
  by	
  adjusting	
  damping	
  Damping	
  controls	
  how	
  the	
  circuit	
  resonates	
Common	
  Modulations	
• Frequency	
  Shift	
  Keying	
FSK	
• Phase	
  Shift	
  Keying	
PSK	
• Amplitude	
  Shift	
  Keying	
ASK	
• On/Oﬀ	
  Keying	
OOK	
LF	
  Cloning	
  (T55xx)	
  Low-­‐Frequency	
  tag	
  with	
  conﬁgurable	
  properties	
  Modulation:	
  FSK/PSK/ASK	
  Encoding:	
  Manchester/Biphase	
  8	
  4-­‐byte	
  storage	
  blocks	
  1	
  Conﬁg	
  Block	
  (0)	
  7	
  Bitstream	
  Blocks	
  (1-­‐7)	
T5557	
  Block	
  0	
  Conﬁg	
T5557	
  Block	
  0	
  (from	
  datasheet)	
Proxmark:	
  lf	
  search	
Identify	
  unknown	
  tag	
  lf	
  search	
  :	
  Automated	
  LF	
  Tag	
  Detection	
  Step	
  1:	
  lf	
  read	
  s	
  Step	
  2:	
  data	
  samples	
  30000	
  Step	
  3..n:	
  Test	
  each	
  data	
  *demod	
  command	
  until	
  success	
Proxmark:	
  lf	
  search	
Identify	
  unknown	
  tag	
Proxmark	
  Demodbuﬀer	
Extract	
  Tag	
  Bitstream	
DemodBuﬀer	
  is	
  the	
  raw	
  demodulated	
  tag	
  data	
  Data	
  can	
  be	
  split	
  into	
  4-­‐byte	
  blocks	
  for	
  T55xx	
Bitstream	
  starts	
  with	
  block	
  1	
Proxmark	
  Demodbuﬀer	
Print	
  Tag’s	
  Demodulated	
  Bitstream	
Block 1             
Block 2
Block 3
0x1D555555
0xA6A999A6
0x9AA9A9AA
Setting	
  T55xx	
  Conﬁg	
  Option	
  1:	
  Determine	
  block	
  0	
  manually	
  via	
  datasheets	
  Option	
  2:	
  Refer	
  to	
  excellent	
  thread	
  at	
  proxmark.org	
http://www.proxmark.org/forum/viewtopic.php?id=1767	
  HID	
  Tag	
  uses:	
  0x00107060	
  3	
  Blocks	
  FSK	
  2a	
  Modulation	
  RF/50	
  Data	
  Rate	
Proxmark:	
  T55xx	
  Writes	
Programming	
  a	
  T5557	
  Card	
  with	
  HID	
  37	
  deadbeef	
Proxmark:	
  HID	
  Reading	
Trust	
  But	
  Verify	
  (with	
  lf	
  hid	
  fskdemod)	
What	
  is	
  Mifare?	
MiFare	
  is	
  a	
  family	
  of	
  tags	
  not	
  just	
  a	
  single	
  tag	
  type	
MiFare	
  Classic	
MiFare	
  Ultralight	
  (and	
  variations)	
MiFare	
  DESFire	
  (and	
  variations)	
  Others?	
  Tags	
  support	
  encryption	
  in	
  various	
  capacities	
  All	
  tags	
  have	
  a	
  UID	
  and	
  sometimes	
  that’s	
  all	
  that	
  matters	
  Mifare	
  is	
  used	
  everywhere	
  (trains,	
  payment	
  cards,	
  hotels,	
smartphone	
  tags,	
  etc)	
Mifare	
  Classic	
  Cracking	
The	
  result	
  is	
  complete	
  key	
  pwn	
  in	
  under	
  1	
  minute	
Once	
  any	
  key	
  is	
  known,	
  nested	
  attacks	
  are	
  possible	
Processes	
  exist	
  to	
  recover	
  keys	
  from	
  Mifare	
  Classic	
“Magic”	
  Cards	
  Normally	
  read-­‐only	
  UID	
  is	
  read-­‐write	
  instead	
www.CloneMyKey.com	
  (fast	
  and	
  reliable)	
  eBay	
  “UID	
  Changeable”	
  (one	
  vendor	
  took	
  6+	
  weeks)	
  Allows	
  complete	
  duplication	
  of	
  some	
  card	
  types	
  I	
  have	
  succeeded	
  with	
  Classic	
  1K	
  and	
  Ultralight	
  cards	
  This	
  is	
  why	
  UID	
  must	
  not	
  be	
  used	
  as	
  a	
  secure	
  token	
libNFC	
  Cloning	
  Example	
  NXP	
  PN533	
  w/	
  libNFC	
  and	
  “Magic”	
  Mifare	
  Ultralight	
nfc-­‐mfultralight	
  r	
  dump.mfd	
  Create	
  Mifare	
  dump	
  of	
  target	
  card	
nfc-­‐mfultralight	
  w	
  source.mfd	
  Write	
  contents	
  of	
  source.mfd	
  to	
  changeable	
  tag	
  Tested	
  with	
  key	
  from	
  CloneMyKey.com	
Cloneable	
  Stuﬀ	
  Hotel	
  Contactless	
  Key	
  Cards	
  Several	
  hotels	
  are	
  using	
  insecure	
  MIFARE	
  variants	
  EMV	
  Legacy	
  Transactions	
  (Peter	
  Fillmore,	
  BH	
  US	
  2015)	
  Due	
  to	
  support	
  for	
  contactless	
  ‘legacy’	
  modes	
  Android	
  ‘Smart	
  Unlock’	
  tags	
  &	
  some	
  home	
  NFC	
  locks	
  Systems	
  only	
  validate	
  UID	
  which	
  is	
  easy	
  to	
  spoof	
Hotel	
  Card	
  Clone	
  Demo	
Firmware	
  Hacking	
Stand-­‐Alone	
  NFC	
• Capture	
  Tags	
• Clone	
  UID	
• Replay	
  UID	
Proxmark3	
  LF	
  Stand-­‐Alone	
Default	
  PM3	
  standalone	
  operation	
  ﬂow	
  from	
  ProxBrute	
  whitepaper	
Stand-­‐Alone	
  Design	
Using	
  ARM	
  CPU	
  for	
  independent	
  operation	
• armsrc/appmain.c	
  runs	
  after	
  init	
• SamyRun()	
  is	
  invoked	
  based	
  on	
  BUTTON_HELD(1000)	
CmdHIDdemodFSK	
  and	
  related	
  functions	
  used	
• Capture/Replay/T55x7	
  Clone	
  toggle	
  with	
  button	
• Visual	
  indication	
  through	
  LED	
  changes	
Proxmark3	
  HF	
  Stand-­‐Alone	
  Goal	
  is	
  reproducing	
  the	
  LF/HID	
  functions	
  for	
  HF	
  Focus	
  is	
  on	
  the	
  popular	
  Mifare	
  card	
  formats	
  Initial	
  support	
  for	
  UID	
  value	
  only	
  Demonstrates	
  insecure	
  use	
  of	
  UID	
  for	
  authentication	
  Cloning	
  to	
  changeable	
  (magic)	
  Mifare	
  Classic	
  only	
  Support	
  for	
  other	
  tags	
  can	
  be	
  added	
  easily	
Oﬄine	
  HF	
  Read	
  (code)	
iso14443a_setup(FPGA_HF_ISO14443A_READER_MOD)	
iso14443a_select_card(uid,	
  NULL,	
  &cuid)	
Return	
  true	
  means	
  that	
  a	
  card	
  select	
  succeeded	
Oﬄine	
  HF	
  Sim	
  (code)	
UID	
  is	
  split	
  into	
  2	
  4	
  byte	
  values	
  with	
  valid	
  byte	
  order	
SimulateIso14443aTag(1,uid_1st,uid_2nd,NULL)	
UID	
  only	
  simulation	
  (i.e.	
  data	
  support	
  later?)	
Oﬄine	
  HF	
  Clone	
Goal	
  is	
  to	
  just	
  set	
  recorded	
  UID	
  on	
  new	
  tag	
MiFare	
  Classic	
  support	
  only	
  initially	
• hf	
  mf	
  csetuid	
Useful	
  for	
  systems	
  relying	
  on	
  UID	
  for	
  auth	
• Samsung	
  NFC	
  locks,	
  Smartphone	
  unlock	
  tags,	
  etc.	
New	
  Flow	
HF	
  Stand-­‐Alone	
Demo!	
Firmware	
  Hacking	
Extending	
  AWID	
• Reader	
  Mode	
• Sim	
  from	
  IDs	
• Clone	
  from	
  IDs	
Adding	
  PM3	
  Commands	
  Target:	
  ‘lf	
  awid’	
  Proxmark3	
  context	
fskdemod	
  –	
  Real-­‐time	
  demodulation	
  for	
  AWID	
  tag	
  clone	
  –	
  Prepare	
  T55xx	
  card	
  based	
  on	
  speciﬁed	
  ID	
sim	
  –	
  Tag	
  emulation	
  based	
  on	
  ID	
  PM3	
  had	
  no	
  AWID26	
  code	
  until	
  this	
  year	
fskawiddemod	
  added	
  2015	
  No	
  lf	
  awid	
  context	
  was	
  added	
  Looked	
  like	
  a	
  good	
  place	
  to	
  contribute	
AWID26	
  8-­‐bit	
  Facility	
  &	
  16-­‐bit	
  card	
  number	
  printed	
  on	
  tag	
  125kHz	
  FSK2a	
  (RF/50	
  data	
  rate)	
  FSK	
  Logic	
  0:	
  8	
  cycles,	
  FSK	
  Logic	
  1:	
  10	
  cycles	
www.proxclone.com/pdfs/AWID_FSK_Format.pdf	
  96-­‐bit	
  transmission	
  Every	
  4th	
  bit	
  is	
  a	
  parity	
  bit	
  2	
  more	
  parity	
  bits	
  for	
  wiegand	
  validation	
Command	
  Structure	
  Commands	
  live	
  in	
  the	
  proxmark3	
  client	
  client/cmdlf.c	
  for	
  LF	
  commands	
  New	
  commands	
  added	
  to	
  CommandTable	
  client/cmdlfawid.c	
  created	
  for	
  deﬁnitions	
  Prepare	
  &	
  send	
  UsbCommand	
  to	
  PM3	
lf	
  awid	
  fskdemod	
  Loop	
  collecting	
  samples	
  and	
  demodulating	
  as	
  AWID	
  Runs	
  as	
  CmdAWIDdemodFSK()	
  on	
  ARM	
  (armsrc/lfops.c)	
  Structure	
  copied	
  from	
  CmdHIDdemodFSK()	
  CMD_AWID_DEMOD_FSK	
  deﬁned	
  for	
  USB	
  command	
  Logic	
  in	
  cmdlfawid.c	
  exposes	