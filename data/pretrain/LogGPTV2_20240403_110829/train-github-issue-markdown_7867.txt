#### Problem description
There are several convenient datasets available in `sklearn`. They
consistently return the `Bunch` `sklearn` object. Therefore, it would not be
too difficult to create a function to convert from `sklearn` into a nice,
clean `pandas` dataframe.
#### Proposal
I am happy to take on the task of creating this conversion, but I'd like to
get some input so that I create what users would actually want, and ideally my
pull request would be accepted.
Below is a toy example of how I would expect the API to work, where
`to_dataframe` is the name of the new method. (I'm happy to call it whatever,
that just seemed like a good guess.)
    >>> from sklearn.datasets import load_iris
    >>> sk_iris = load_iris()
    >>> pd_iris = sk_iris.to_dataframe()
    >>> pd_iris.head()
       sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  target
    0                5.1               3.5                1.4               0.2     setosa
    1                4.9               3.0                1.4               0.2     setosa
    2                4.7               3.2                1.3               0.2     setosa
    3                4.6               3.1                1.5               0.2     setosa
    4                5.0               3.6                1.4               0.2     setosa
    >>> pd_iris.dtypes
    sepal length (cm)     float64
    sepal width (cm)      float64
    petal length (cm)     float64
    petal width (cm)      float64
    target                category
    dtype: object
    >>> type(pd_iris)
Would this be desirable? Is this API I propose reasonable? What should I
consider in the API? (E.g., in the example above, I have taken the fact that
the `sklearn` dataset object has both a `target` and `target_names`, which
means that I could infer that this should be a categorical. This can obviously
make things a bit more fragile. Should this inference be skipped?