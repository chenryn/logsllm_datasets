title:In search of an anonymous and secure lookup: attacks on structured
peer-to-peer anonymous communication systems
author:Qiyan Wang and
Prateek Mittal and
Nikita Borisov
In Search of an Anonymous and Secure Lookup
Attacks on Structured Peer-to-Peer Anonymous Communication Systems
Qiyan Wang
UIUC
PI:EMAIL
Prateek Mittal
UIUC
PI:EMAIL
Nikita Borisov
UIUC
PI:EMAIL
ABSTRACT
The ability to locate random relays is a key challenge for
peer-to-peer (P2P) anonymous communication systems. Ear-
lier attempts like Salsa and AP3 used distributed hash ta-
ble lookups to locate relays, but the lack of anonymity in
their lookup mechanisms enables an adversary to infer the
path structure and compromise user anonymity. NISAN
and Torsk are state-of-the-art systems for P2P anonymous
communication. Their designs include mechanisms that are
speciﬁcally tailored to mitigate information leak attacks.
NISAN proposes to add anonymity into the lookup mech-
anism itself, while Torsk proposes the use of secret buddy
nodes to anonymize the lookup initiator.
In this paper, we attack the key mechanisms that hide
the relationship between a lookup initiator and its selected
relays in NISAN and Torsk. We present passive attacks
on the NISAN lookup and show that it is not as anony-
mous as previously thought. We analyze three circuit con-
struction mechanisms for anonymous communication using
the NISAN lookup, and show that the information leaks in
the NISAN lookup lead to a signiﬁcant reduction in user
anonymity. We also propose active attacks on Torsk that
defeat its secret buddy mechanism and consequently com-
promise user anonymity. Our results are backed up by prob-
abilistic modeling and extensive simulations. Our study mo-
tivates the search for a DHT lookup mechanism that is both
secure and anonymous.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and protection; C.2.4 [Computer-Communication
Networks]: Distributed Systems
General Terms
Security
Keywords
Anonymity, attacks, information leaks, peer-to-peer
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
Copyright 2010 ACM 978-1-4503-0244-9/10/10 ...$10.00.
1.
INTRODUCTION
Anonymous communication hides the identities of com-
municating partners from third parties, or the user identity
from a remote party. As a key privacy-enhancing technology,
anonymous communication is gaining widespread popular-
ity in an era of pervasive surveillance. The Tor network [8]
is a deployed anonymous communication system that cur-
rently serves hundreds of thousands of users a day [13]. Tor
is widely used to preserve privacy for journalists, whistle-
blowers, law enforcement, and even embassies [10].
A key problem in Tor’s architecture is that it requires all
users to maintain a global view of the system, which could be
costly as the size of the Tor network increases. McLachan
et al. [16] show that in the near future, the Tor network
could be spending an order of magnitude more bandwidth
in maintaining a global view of the system, than for relaying
anonymous traﬃc. In order to address this problem, a peer-
to-peer (P2P) architecture will likely be necessary. Indeed,
several proposals for P2P anonymous communication have
been put forward [17, 24, 9, 29, 16, 25, 19].
P2P networks present new challenges to anonymity, in-
cluding the ability to locate random relays for anonymous
communication. Earlier attempts at P2P anonymous com-
munication like Salsa [24] and AP3 [17] used distributed
hash table (DHT) lookups to locate random relays. Mit-
tal and Borisov [18] showed that the lookup mechanisms
of these systems leak information about the relationship be-
tween a lookup initiator and the communication destination,
and thus are not anonymous. Moreover, such information
leaks in the lookup could then be used to attack the circuit
construction mechanisms and compromise user anonymity.
Recently, NISAN [25] and Torsk [16] P2P systems have
been proposed to alleviate the scalability problems in the Tor
network. Both NISAN and Torsk also use DHT lookups to
locate relays for anonymous communication, but in contrast
to Salsa and AP3, they include mechanisms that are specif-
ically designed to mitigate information leak attacks [18]. In
this paper, we show that these mechanisms are vulnerable
to several passive and active attacks.
NISAN proposes the use of a custom secure and anony-
mous lookup mechanism to locate relays. The NISAN lookup
relies on redundancy and bound checking [25] to defend
against active attacks, while trying to keep the lookup des-
tination secret from attackers.
In this paper, we present
passive attacks on the NISAN lookup and show that it is
not as anonymous as previously thought. We analyze three
circuit construction mechanisms for anonymous communi-
cation using the NISAN lookup, and show that information
308leaks in the NISAN lookup lead to a signiﬁcant reduction in
user anonymity for all the three circuit construction strate-
gies. For a network size of 10 000 nodes, with 20% compro-
mised nodes, our analysis and simulation results show that
our passive attacks can reduce entropy of the circuit initia-
tor by 2.2 bits, which is close to the ideal passive attacks
whose entropy reduction is 2.6 bits.
Unlike NISAN, Torsk [16] does not attempt to add anony-
mity into the lookup itself.
Instead, nodes in Torsk per-
form random walks to obtain secret buddy nodes before the
lookups are performed. The lookup querier can then use the
secret buddy node as a proxy to perform the lookup on its
behalf, thus hiding the relationship between itself and the
lookup target. However, we shall show that the informa-
tion leaks in the lookup itself allow an attacker to launch
active attacks to defeat the secret buddy mechanism, and
consequently compromise user anonymity. Our analysis and
simulation results show that with 20% malicious nodes, the
attacker can compromise over 80% of constructed circuits.
We also study potential improvements to Torsk, but ﬁnd
that they do not fully defend against our attacks.
Our analysis of NISAN and Torsk shows that their key
mechanisms to anonymously look up a node are vulnerable
to either passive attacks or active attacks, motivating the
search for a secure and anonymous DHT lookup. We note
that the vulnerabilities in the current P2P anonymous com-
munication designs are a result of some properties in their
lookup mechanisms not being fully analyzed in the security
evaluation of the system, leading us to conclude that system
designers should explicitly model the mechanism for anony-
mous lookup and analyze its security.
The remainder of the paper is organized as follows. We
describe background material including the threat model in
Section 2. We show that both NISAN and Torsk lookups
are not anonymous in Section 3. In Section 4, we propose
circuit construction strategies using the NISAN lookup and
analyze their anonymity. Section 5 describes our attacks
on Torsk and considers potential improvements. Finally, we
discuss related work in Section 6 and conclude in Section 7.
2. BACKGROUND
In this section, we present a brief overview of anonymous
communication. We discuss why P2P systems have strong
potential for anonymous communication, and describe the
state-of-the-art systems that are based on DHT lookups.
We also describe our adversarial threat model.
2.1 Low-Latency Anonymous Communication
Systems
Anonymous systems are typically divided into high-latency
and low-latency systems. High-latency anonymous systems,
such as Mixminion [6] and Mixmaster [20], are designed to
resist a powerful global attacker, but the communication la-
tency for such systems could be up to several hours, which
make them unsuitable for interactive communications, such
as web browsing and instant messaging. The focus of this
paper is on low-latency anonymous communication systems.
Tor [8] is a popular low-latency anonymous communica-
tion system, which serves hundreds of thousands of users
every day [13]. Each Tor client obtains a list of servers
from a central directory authority, and selects random re-
lays from the list to construct a circuit for onion routing
[31]. Tor requires each client to maintain a global view of
all the servers. However, as the number of servers increases,
maintaining a global view of the system become costly, since
churn will cause frequent updates and a large bandwidth
overhead.
In fact, McLachan et al. [16] show that in the
near future, the Tor network could be spending an order
of magnitude more bandwidth in maintaining a global view
of the system, than for relaying anonymous traﬃc. A P2P
architecture will likely be necessary to address this problem.
Several designs for P2P anonymous communication have
been proposed [9, 29, 17, 24, 19, 16, 25]. We can broadly
classify these designs based on their mechanisms to locate
relays. Designs like Tarzan [9], Morphmix [29] and Shad-
owWalker [19] perform random walks on restricted topolo-
gies to ﬁnd relays, while Salsa [24], AP3 [17], NISAN [25]
and Torsk [16] use DHT lookups to select random relays. In
this work, we focus on DHT-lookup-based P2P anonymous
communication systems.
Distributed hash tables, also known as structured peer-
to-peer topologies, provide an attractive foundation for P2P
anonymous communication. Structured topologies assign
neighbor relationships using a pseudorandom but determin-
istic mathematical formula based on the IP addresses or
public keys of nodes. This allows the relationships to be ver-
iﬁed externally, presenting fewer opportunities for attacks.
We now brieﬂy describe the P2P anonymous communication
systems that use DHT lookups.
The design of Salsa [24] is similar to Tor, in that a circuit
is built by selecting three random nodes (or relays) in the
network and constructing a circuit through them. Salsa uses
a speciﬁcally designed secure lookup over a custom DHT to
locate relays. The secure lookup uses redundant checks to
mitigate potential attacks. These checks are able to limit
the bias an adversary can introduce in the lookup, but make
Salsa susceptible to information leak attacks: attackers can
detect a large fraction of lookups and thus infer the path
structure [18]. Salsa is also vulnerable to selective denial-
of-service (DoS) attack, where nodes try to deny service for
circuits that they cannot compromise [3].
AP3 [17] also relies on secure lookups to locate relays,
but the design of AP3 is more similar to Crowds [28] than
to Tor, with paths being formed by performing a stochas-
tic expected-length random walk. The stochastic nature of
AP3 makes it diﬃcult for a rogue node to decide whether
its preceding hop is the initiator or simply a relay on the
path. However, for low-latency communication, timing at-
tacks may make this decision simpler. Similar to Salsa, the
secure lookup used in AP3 reveals a lot of information about
the lookup initiator, and makes it vulnerable to passive in-
formation leak attacks [18].
NISAN and Torsk are the state-of-the-art P2P anonymous
communication systems. Their designs include mechanisms
that are speciﬁcally tailored to mitigate information leak
attacks. NISAN proposes to incorporate anonymity into the
lookup itself, and Torsk uses secret buddy nodes. However,
we shall show that these mechanisms are vulnerable to either
passive attacks or active attacks, resulting in a signiﬁcant
reduction in user anonymity.
2.2 Threat Model
Low-latency anonymous communication systems are not
designed to resist a global passive adversary. We consider a
partial adversary who controls a fraction f of all the nodes
in the network. This set of malicious nodes collude and can
309launch both passive and active attacks. We consider the
set of colluding nodes is static and the adversary cannot
compromise nodes at will.
Even in networks with a large number of nodes, f can
be a signiﬁcant fraction of the network size. Powerful ad-
versaries, such as governments or large organizations, can
potentially deploy enough nodes to gain a signiﬁcant frac-
tion of the network. Similarly, botnets, whose average size
has grown in excess of 20 000 nodes [26], present a real threat
to anonymous systems. In our analysis, we will consider the
maximum value of f to be 0.2, since P2P systems are not
designed to be secure at higher values of f .
3.
INFORMATION LEAKS IN DHT
LOOKUPS
In this section, we study two recently proposed DHT lookup
mechanisms, Torsk [16] and NISAN [25], and analyze infor-
mation leaks in both lookups. Since the Torsk lookup is
“louder” and simpler to analyze, we start with discussing
the Torsk lookup.
3.1 Torsk Lookup
The authors of Torsk [16] proposed a custom secure it-
erative lookup scheme (we refer to as the Torsk lookup) to
construct Torsk. The design of the Torsk lookup is based
on Kademlia DHT [15] and Myrmic [33]. Its main goal is
to resist active attacks, rather than preserving information
leaks.
In the Torsk lookup, a querier Q who wants to look up a
target x ﬁrst selects t ﬁngers from its ﬁnger table (FT) that
are closest to x (typically, t = 3), and uses them as starting
points for t independent lookup branches. Q maintains a
best list of closest ﬁngers to x for each lookup branch. In
each iteration, t ﬁngers that have not been contacted are
selected from each best list and are queried with x in paral-
lel. Any requested node returns k ﬁngers closest to x. The
wide parallel lookup process terminates when any best list
is unchanged at the end of one iteration. To resist active
attacks, each node U keeps a certiﬁcate (nCertU ) issued by
a trusted central authority. nCertU includes all ﬁngers of U
and its expiration time etc. Therefore, Q can verify whether
the ﬁnally found node V is responsible for x by verifying
nCertV and querying V ’s neighbors about the freshness of
nCertV . V is accepted by Q only when V passes all these
checkings.
Since x is revealed to each queried node, an attacker can
observe the lookup and associate V with Q, as long as one
malicious node is queried in the lookup. We simulate the
Torsk lookup using a simulator written in C++ with about
1000 lines. We measure the probability of associating the
target with the querier in diﬀerent sized networks (n = 1000,
2000, 5000). We choose typical values for parameters used in
the simulation according to the Torsk paper [16] (ID space
= 220, #buckets = 16, bucket size = 20, and nList size =
6). Each data point is averaged over 100 random topologies
with 10 000 independent runs. We can see from Figure 1 that
when f = 0.2, the attacker can nearly observe all lookups
and associate all the targets with the queriers. Also, as the
size of the network grows, the attacker has a better chance to
observe the lookup with the same fraction of compromised
nodes. This is because as the length of the lookup path
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
s
p
u
k
o
o
l
d
e
v
r
e
s
b
o
f
o
n
o
t
c
a
r
F
i
0.2
0.02
0.04
0.06
0.08
0.1
Fraction of malicious nodes (f)
0.12
0.14
n=1000
n=2000
n=5000
0.16
0.18
0.2
Figure 1: Simulation results: probability that the
attacker can associate the querier with the target in
the Torsk lookup.
increases, a malicious node would more likely be involved in
the lookup.
3.2 NISAN Lookup