### Optimized Text

As additional noise increases, the distance between the probability distributions computed from the original and perturbed graph series also increases. However, as the application parameter \( l \) increases, the distance metric decreases. This indicates that LinkMirage is more suitable for security applications that rely on macro structures rather than those requiring exact information about one or two-hop neighborhoods. Additionally, our experimental results in Table III demonstrate the superior utility of LinkMirage compared to the approach by Mittal et al. [27] in real-world applications.

### VIII. RELATED WORK

#### Privacy with Labeled Vertices

A significant area of research focuses on preserving link privacy between labeled vertices by obfuscating edges through the addition or deletion of edges [16, 27, 42]. These methods aim to randomize the social graph's structure, but they differ in how they introduce noise.

- **Hay et al. [16]**: Perturb the graph by performing a sequence of edge deletions and insertions. The deleted edges are uniformly selected from existing edges, while added edges are uniformly selected from non-existing edges. However, this method does not consider the graph's structural properties.
- **Ying and Wu [42]**: Proposed a perturbation method to preserve spectral properties, though its privacy performance was not analyzed.
- **Mittal et al. [27]**: Deleted all edges in the original graph and replaced them with fake edges sampled based on the graph's structural properties using random walks. Compared to the methods by Hay et al. [16] and Mittal et al. [27], LinkMirage provides up to 3x privacy improvement for static social graphs and up to 10x for dynamic social graphs.

Another line of research aims to preserve link privacy by aggregating vertices and edges into super-vertices [15, 44]. This naturally protects the privacy of links within each super-vertex but limits the fine-grained utilization of graph properties, making it challenging to apply to applications such as social network-based anonymous communication and Sybil defenses.

#### Privacy with Unlabeled Vertices

While our focus is on preserving link privacy in the context of labeled vertices, another line of research addresses privacy in the context of unlabeled vertices (vertex privacy) [4, 25, 34].

- **Liu et al. [25]**: Proposed k-anonymity to anonymize unlabeled vertices by placing at least \( k \) vertices at an equivalent level.
- **Sala et al. [34]**: Leveraged differential privacy to privately publish social graphs with unlabeled vertices.

LinkMirage can also serve as a foundation for preserving vertex privacy, as discussed in Section VI-B. Shokri et al. [35] addressed the privacy-utility trade-off using game theory, which can be generalized to consider temporal effects by updating the prior after each iteration. In [39], they considered the correlation over time in the utility-privacy game designed in [36].

We further consider anonymity in temporal graphs with unlabeled vertices. Time series data should be carefully considered, as adversaries can combine multiple published graph snapshots to launch enhanced attacks and infer more information. [5, 10, 38] explored privacy degradation in vertex privacy schemes due to the release of multiple graph snapshots, motivating our work even though we focus on labeled vertices.

#### De-anonymization

In recent years, the security community has proposed several sophisticated attacks for de-anonymizing social graphs [20, 30, 32, 37]. While most of these attacks target vertex privacy, they highlight the importance of considering adversaries with prior information about the social graph. We perform a rigorous privacy analysis of LinkMirage (Section V) by considering a worst-case adversary who knows the entire social graph except for one link, demonstrating that even such an adversary is limited in their inference capability. For example, Burattin et al. [6] exploited inadvertent information leaks via Facebook’s Graph API to de-anonymize social links; Facebook’s new Graph API (v2.0) features stringent privacy controls as a countermeasure.

### IX. DISCUSSION

#### Privacy-Utility Tradeoffs

LinkMirage mediates privacy-preserving access to users' social relationships. Our privacy analysis considers the worst-case adversary who knows the entire social link information except one link, conservatively demonstrating the superiority of our algorithm over state-of-the-art approaches. LinkMirage benefits many applications that depend on graph-theoretic properties of the social graph, including recommendation systems and e-commerce applications.

#### Broad Applicability

While our theoretical analysis of LinkMirage relies on undirected links, the obfuscation algorithm can be generally applied to directed social networks. Furthermore, our underlying techniques have broad applicability beyond social networks, including communication networks and web graphs.

### X. CONCLUSION

LinkMirage effectively mediates privacy-preserving access to users' social relationships by:

1. Preserving key structural properties in the social topology while anonymizing intra-community and inter-community links.
2. Providing rigorous guarantees for anti-inference privacy, indistinguishability, and anti-aggregation privacy to defend against sophisticated threat models for both static and temporal graph topologies.
3. Significantly outperforming baseline static techniques in terms of both link privacy and utility, as verified both theoretically and experimentally using real-world datasets from Facebook (with 870K links) and Google+ (with 940M links).

LinkMirage enables the deployment of real-world social relationship-based applications such as graph analytics, anonymity systems, and Sybil defenses while preserving the privacy of users' social relationships.

### ACKNOWLEDGEMENT

We would like to thank the anonymous reviewers at NDSS 2016 for their helpful feedback, and we are especially grateful to Reza Shokri for his guidance as our shepherd. This work was supported in part by NSF awards number CNS-1409415 and CNS-1423139.

### REFERENCES

[1] L. J. Almeida and A. de Andrade Lopes, “An ultra-fast modularity-based graph clustering algorithm,” in Proceedings 14th Portuguese Conference on Artificial Intelligence (EPIA), 2009.
...
[35] R. Shokri, “Privacy games: Optimal user-centric data obfuscation,” in PETS, 2015.
...

### Mathematical Analysis

The total variation distance of LinkMirage is denoted as follows. Let the communities be \( C_1, C_2, \ldots, C_{K_t} \) and the inter-community subgraphs as \( C_{12}, C_{13}, \ldots \). We have:

\[
\|P_t - P'_t\|_{TV} = \frac{1}{|V_t|} \left( \sum_{k=1}^{K_t} |V_t(k)| \|P_t(k,k) - P'_t(k,k)\|_{TV} + \sum_{k,j=1, k \neq j}^{K_t} |E_t(k, j)| \|P_t(k,j) - P'_t(k,j)\|_{TV} \right)
\]

Here, \( \delta_t \) is the ratio cut of the graph, and \( \delta_t = \frac{|E_{t-\text{in}}|}{|V_t|} = \sum_{k,j=1, k \neq j}^{K_t} \frac{|E_t(k, j)|}{|V_t|} \). For arbitrary matrices \( P \) and \( Q \), we have \( \|P^l - Q^l\|_{TV} \leq l \|P - Q\|_{TV} \). Combining these results, we get:

\[
\|P_t - P'_t\|_{TV} \leq l (\epsilon + \delta_t)
\]

Then, we generalize the utility analysis of intermediate perturbation to our dynamic perturbation. Assume that there are \( K_c \) out of \( K_t \) clusters that are considered changed and will be perturbed independently, and \( K_u \) out of \( K_t \) clusters are considered unchanged, i.e., their perturbation follows the manner in \( G'_{t-1} \). To simplify, we use \( P_t(k) \) instead of \( P_t(k,k) \) to represent the TPM of the k-th community. Thus, we have:

\[
UD(G_t, G'_t) \leq \frac{1}{|K_t|} \left( \sum_{k=1}^{K_c} \|P_t(k) - P'_t(k)\|_{TV} + \sum_{j=1}^{K_u} \|P_t(j) - P'_t(j)\|_{TV} + \delta_t \right)
\]

\[
\leq \frac{1}{|K_t|} \left( \sum_{k=1}^{K_c} \|P_t(k) - P'_t(k)\|_{TV} + \sum_{j=1}^{K_u} \|P_t(j) - P_{t-1}(j)\|_{TV} + \delta_t \right)
\]

\[
\leq UD(G_t, G'_t, 1) + \epsilon + \delta_t
\]

This completes the mathematical analysis.