since additional noise increase the distance between probability
distributions computed from the original and the perturbed
graph series. As the application parameter l increases, the dis-
tance metric decreases. This illustrates that LinkMirage is more
suited for security applications that rely on macro structures,
as opposed to applications that require exact information about
one or two hop neighborhoods. Furthermore, our experimental
results in Table III also demonstrate the utility advantage of
our LinkMirage over the approach of Mittal et al. [27] in real
world applications.
VIII. RELATED WORK
Privacy with labeled vertices An important thread of research
aims to preserve link privacy between labeled vertices by
obfuscating the edges, i.e., by adding /deleting edges [16],
[27], [42]. These methods aim to randomize the structure of
the social graph, while differing in the manner of adding noise.
Hay et al. [16] perturb the graph by applying a sequence of
r edge deletions and r edge insertions. The deleted edges
are uniformly selected from the existing edges in the original
graph while the added edges are uniformly selected from the
non-existing edges. However, neither the edge deletions nor
edge insertions take any structural properties of the graph into
consideration. Ying and Wu [42] proposed a new perturbation
method for preserving spectral properties, without analyzing
its privacy performance.
Mittal et al. proposed a perturbation method in [27], which
serves as the foundation for our algorithm. Their method
deletes all edges in the original graph, and replaces each edge
with a fake edge that is sampled based on the structural prop-
13
erties of the graph. In particular, random walks are performed
on the original graph to sample fake edges. As compared to the
methods of Hay et al. [16] and Mittal et al. [27], LinkMirage
provides up to 3x privacy improvement for static social graphs
and up to 10x privacy improvement for dynamic social graphs.
Another line of research aims to preserve link privacy [15]
[44] by aggregating the vertices and edges into super vertices.
Therefore, the privacy of links within each super vertex is
naturally protected. However, such approaches do not permit
ﬁne grained utilization of graph properties, making it difﬁcult
to be applied to applications such as social network based
anonymous communication and Sybil defenses.
Privacy with unlabeled vertices While the focus of our paper
is on preserving link privacy in context of labeled vertices,
an orthogonal line of research aims to provide privacy in
the context of unlabeled vertices (vertex privacy)
[4], [25],
[34]. Liu et al. [25] proposed k-anonymity to anonymize
unlabeled vertices by placing at least k vertices at an equivalent
level. Differential privacy provides a theoretical framework
for perturbing aggregate information, and Sala et al. [34]
leveraged differential privacy to privately publish social graphs
with unlabeled vertices. We note that LinkMirage can also
provide a foundation for preserving vertex privacy as stated in
Section VI-B. Shokri et al. [35] addresses the privacy-utility
trade-off by using game theory, which can be generalized
to consider the temporal effects by updating the prior after
each iteration. In [39], they take the correlation over time into
account on the utility-privacy game designed in [36].
We further consider anonymity in temporal graphs with
unlabeled vertices. The time series data should be seriously
considered, since the adversaries can combine multiple pub-
lished graph to launch enhanced attacks for inferring more
information. [5], [10], [38] explored privacy degradation in
vertex privacy schemes due to the release of multiple graph
snapshots. These observations motivate our work, even though
we focus on labeled vertices.
De-anonymization In recent years, the security community
has proposed a number of sophisticated attacks for de-
anonymizing social graphs [20], [30], [32], [37]. While most
of these attacks are not applicable to link privacy mecha-
nisms (their focus is on vertex privacy), they illustrate the
importance of considering adversaries with prior information
about the social graph5. We perform a rigorous privacy anal-
ysis of LinkMirage (Section V) by considering a worst-case
(strongest) adversary that knows the entire social graph except
one link, and show that even such an adversary is limited in
5Burattin et al [6] exploited inadvertent information leaks via Facebook’s
graph API to de-anonymize social links; Facebook’s new graph API (v2.0)
features stringent privacy controls as a countermeasure.
0510152000.20.40.60.81(a) Application level parameter lUtility Distance  k=2k=546810121416182000.20.40.60.81(b) Application level parameter lUtility distance  k=5k=20its inference capability.
IX. DISCUSSION
Privacy Utility Tradeoffs: LinkMirage mediates privacy-
preserving access to users’ social relationships. In our privacy
analysis, we consider the worst-case adversary who knows
the entire social
link information except one link, which
conservatively demonstrates the superiority of our algorithm
over the state-of-the-art approaches. LinkMirage beneﬁts many
applications that depend on graph-theoretic properties of the
social graph (as opposed to the exact set of edges). This also
includes recommendation systems and E-commerce applica-
tions.
Broad Applicability: While our
theoretical analysis of
LinkMirage relies on undirected links,
the obfuscation al-
gorithm itself can be generally applied to directed social
networks. Furthermore, our underlying techniques have broad
applicability to domains beyond social networks, including
communication networks and web graphs.
X. CONCLUSION
LinkMirage effectively mediates privacy-preserving access
to users’ social
relationships, since 1) LinkMirage pre-
serves key structural properties in the social topology while
anonymizing intra-community and inter-community links; 2)
LinkMirage provides rigorous guarantees for the anti-inference
privacy, indistinguishability and anti-aggregation privacy, in
order to defend against sophisticated threat models for both
static and temporal graph topologies; 3) LinkMirage signiﬁ-
cantly outperforms baseline static techniques in terms of both
link privacy and utility, which have been veriﬁed both theoret-
ically and experimentally using real-world Facebook dataset
(with 870K links) and the large-scale Google+ dataset (with
940M links). LinkMirage enables the deployment of real-world
social relationship based applications such as graph analytic,
anonymity systems, and Sybil defenses while preserving the
privacy of users’ social relationships.
ACKNOWLEDGEMENT
We would like to thank the anonymous reviewers at NDSS
2016 for helpful feedback, and we are especially grateful to
Reza Shokri for his guidance as our shepherd. This work was
supported in part by NSF awards number CNS-1409415 and
CNS-1423139.
REFERENCES
[1] L. J. Almeida and A. de Andrade Lopes, “An ultra-fast modularity-based
graph clustering algorithm,” in Proceedings 14th Portuguese Conference
on Artiﬁcial Intelligence (EPIA), 2009.
[2] R. Andersen, C. Borgs, J. Chayes, U. Feige, A. Flaxman, A. Kalai,
V. Mirrokni, and M. Tennenholtz, “Trust-based recommendation sys-
tems: an axiomatic approach,” in WWW, 2008.
[3] T. Aynaud, E. Fleury, J.-L. Guillaume, and Q. Wang, “Communities in
evolving networks: Deﬁnitions, detection, and analysis techniques,” in
Dynamics On and Of Complex Networks, 2013.
[4] F. Beato, M. Conti, and B. Preneel, “Friend in the middle (ﬁm): Tackling
de-anonymization in social networks,” in PERCOM, 2013.
[5] S. Bhagat, G. Cormode, B. Krishnamurthy, and D. Srivastava, “Privacy
in dynamic social networks,” in WWW, 2010.
[6] A. Burattin, G. Cascavilla, and M. Conti, “Socialspy: Browsing (sup-
posedly) hidden information in online social networks,” arXiv preprint,
2014.
[7] T. M. Cover and J. A. Thomas, Elements of information theory.
Wiley & Sons, 2012.
John
14
[8] G. Danezis and P. Mittal, “Sybilinfer: Detecting sybil nodes using social
networks.” in NDSS, 2009.
[9] R. Dey, Z. Jelveh, and K. Ross, “Facebook users have become much
more private: a large scale study,” in IEEE SESOC, 2012.
[10] X. Ding, L. Zhang, Z. Wan, and M. Gu, “De-anonymizing dynamic
social networks,” in GLOBECOM, 2011.
[11] R. Dingledine, N. Mathewson, and P. Syverson, “Tor: The second-
generation onion router,” in USENIX Security, 2004.
[12] C. Dwork, “Differential privacy,” in Automata, languages and program-
ming. Springer, 2006.
[13] C. Dwork and J. Lei, “Differential privacy and robust statistics,” in
STOC, 2009.
[14] N. Z. Gong, W. Xu, L. Huang, P. Mittal, E. Stefanov, V. Sekar,
and D. Song, “Evolution of social-attribute networks: measurements,
modeling, and implications using google+,” in IMC, 2012.
[15] M. Hay, G. Miklau, D. Jensen, D. Towsley, and P. Weis, “Resisting
structural re-identiﬁcation in anonymized social networks,” Proceedings
of the VLDB Endowment, 2008.
[16] M. Hay, G. Miklau, D. Jensen, P. Weis, and S. Srivastava, “Anonymiz-
ing social networks,” Technical Report, University of Massachusetts,
Amherst, 2007.
[17] H. Hodson, “Google software lets you get online via your friends,” New
Scientist, 2013.
[18] R. A. Horn and C. R. Johnson, Matrix analysis. Cambridge university
press, 2012.
[19] S. Ji, W. Li, P. Mittal, X. Hu, and R. Beyah, “Secgraph: A uniform
and open-source evaluation system for graph data anonymization and
de-anonymization,” in Usenix Security, 2013.
[20] S. Ji, W. Li, M. Srivatsa, and R. Beyah, “Structural data de-
anonymization: Quantiﬁcation, practice, and implications,” in CCS,
2014.
[21] Y. Kim and J. Srivastava, “Impact of social inﬂuence in e-commerce
decision making,” in Proceedings of the ninth international conference
on Electronic commerce, 2007.
[22] A. Kyrola, G. E. Blelloch, and C. Guestrin, “Graphchi: Large-scale
graph computation on just a pc.” in OSDI, 2012.
[23] N. Li, W. Qardaji, D. Su, Y. Wu, and W. Yang, “Membership privacy:
a unifying framework for privacy deﬁnitions,” in CCS, 2013.
[24] D. Liben-Nowell and J. Kleinberg, “The link-prediction problem for
the American society for information
social networks,” Journal of
science and technology, 2007.
[25] K. Liu and E. Terzi, “Towards identity anonymization on graphs,” in
SIGMOD, 2008.
[26] A. Mislove, A. Post, P. Druschel, and P. K. Gummadi, “Ostra: Lever-
aging trust to thwart unwanted communication.” in NSDI, 2008.
[27] P. Mittal, C. Papamanthou, and D. Song, “Preserving link privacy in
social network based systems,” in NDSS, 2013.
[28] P. Mittal, M. Wright, and N. Borisov, “Pisces: Anonymous communi-
cation using social networks,” in NDSS, 2013.
[29] S. Nagaraja, “Anonymity in the wild: mixes on unstructured networks,”
in PETS, 2007.
[30] A. Narayanan and V. Shmatikov, De-anonymizing social networks.
IEEE S&P, 2009.
[31] M. E. Newman, “Modularity and community structure in networks,”
Proceedings of the National Academy of Sciences, 2006.
[32] S. Nilizadeh, A. Kapadia, and Y.-Y. Ahn, “Community-enhanced de-
anonymization of online social networks,” in CCS, 2014.
[33] L. Page, S. Brin, R. Motwani, and T. Winograd, “The pagerank citation
ranking: Bringing order to the web.” 1999.
[34] A. Sala, X. Zhao, C. Wilson, H. Zheng, and B. Y. Zhao, “Sharing graphs
using differentially private graph models,” in IMC, 2011.
[35] R. Shokri, “Privacy games: Optimal user-centric data obfuscation,” in
PETS, 2015.
[36] R. Shokri, G. Theodorakopoulos, C. Troncoso, J.-P. Hubaux, and J.-
Y. Le Boudec, “Protecting location privacy: optimal strategy against
localization attacks,” in CCS, 2012.
distance of LinkMirage. Denoting the communities as C1, C2, ·, CKt and
the inter-community subgraphs as C12, C13, · · · , we have
(cid:107)Pt − Pt
(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)
=
=
1
|Vt|
1
+
|Vt|
≤  + δt
(cid:48),i(cid:107)TV
Pt(1,1) − P (cid:48)
Pt(2,1) − P (cid:48)
(cid:88)Kt
Pt(Kt,1) − P (cid:48)
(cid:88)Kt
k=1
...
k,j=1,k(cid:54)=j
t(1,1)
t(2,1)
. . .
. . .
Pt(1,Kt) − P (cid:48)
Pt(2,Kt) − P (cid:48)
t(1,Kt)
t(2,Kt)
...
. . . Pt(Kt,Kt) − P (cid:48)
...
t(Kt,1)
|Vt(k)|(cid:107)Pt(k,k) − P (cid:48)
t(k,k)(cid:107)TV
|Et(k, j)|(cid:107)Pt(k,j) − P (cid:48)
t(k,j)(cid:107)TV
(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)TV
t(Kt,Kt)
(7)
(cid:48),i
t , l) ≤ l(cid:107)Pt − P
(cid:80)Kt
Here, δt is the ratio cut of the graph [1], and δt = |Et−in|/|Vt| =
k,j=1,k(cid:54)=j |Et(k, j)|/|Vt|. For arbitrary matrix P and Q, we have
(cid:107)P l − Ql(cid:107)TV ≤ l(cid:107)P − Q(cid:107)TV. Combining the above results, we have
(cid:48),i
t (cid:107)TV ≤ l ( + δt). Then, we generalize
UD(Gt, G
the utility analysis of intermediate perturbation to our dynamic perturbation.
t out of Kt clusters that are considered as changed,
Assume that there are Kc
which would be perturbed independently, and Ku
t out of Kt clusters are
considered as unchanged, i.e., their perturbation would follow the perturbation
manner in G(cid:48)
t−1. To simplify derivation, we use Pt(k) instead of Pt(k,k) to
represent the TPM of the k-th community. Then, we have
UD(Gt, G(cid:48)
t
t
≤
|Kt|
t(cid:107)TV
(cid:80)Kc
t, 1) = (cid:107)Pt − P (cid:48)
k=1 (cid:107)Pt(k) − P (cid:48)
 Kc
t(cid:88)
(cid:80)Kt
+(cid:107)P(t−1)(j) − P (cid:48)
k=1 (cid:107)Pt(k) − P (cid:48)
t(k)(cid:107)TV +(cid:80)Ku
j=1 (cid:107)Pt(j) − P (cid:48)
t(cid:88)
t(k)(cid:107)TV +
(t−1)(j)(cid:107)TV + (cid:107)P (cid:48)
(t−1)(j) − P (cid:48)
|Ku
t |0
|Kt| + δt
(cid:107)Pt(k) − P (cid:48)
t (k)(cid:107)TV
≤ 1
|Kt|
k=1
Ku
j=1
+
=
≤ UD(Gt, G
|Kt|
(cid:48),i
t , 1) +  + δt
t(j)(cid:107)TV
+ δt
(cid:0)(cid:107)Pt(j) − P(t−1)(j)(cid:107)TV
(cid:17)(cid:17)
t(j)(cid:107)TV
+ δt
(8)
T +1
0, · · · G(cid:48)