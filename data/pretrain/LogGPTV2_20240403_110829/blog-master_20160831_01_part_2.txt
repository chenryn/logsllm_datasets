### curl
```
cd ~
wget https://curl.haxx.se/download/curl-7.44.0.tar.gz
tar -zxvf curl-7.44.0.tar.gz
cd curl-7.44.0
./configure --prefix=/home/digoal/app/curl
make -j 32
make install -j 32
export LD_LIBRARY_PATH=/home/digoal/app/curl/lib:/home/digoal/app/protobuf/lib:/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/curl/bin:/home/digoal/app/protobuf/bin:/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
### JDK
```
cd ~
http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
get   
Java SE Development Kit 8u102
Linux x64	173.03 MB  	jdk-8u102-linux-x64.tar.gz
tar -zxvf jdk-8u102-linux-x64.tar.gz
mv jdk1.8.0_102 /home/digoal/app/
export JAVA_HOME=/home/digoal/app/jdk1.8.0_102
```
### apache-maven
http://maven.apache.org/download.cgi  
```
wget http://mirrors.cnnic.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
tar -zxvf apache-maven-3.3.9-bin.tar.gz
mv apache-maven-3.3.9 /home/digoal/app/
export LD_LIBRARY_PATH=/home/digoal/app/apache-maven-3.3.9/lib:/home/digoal/app/curl/lib:/home/digoal/app/protobuf/lib:/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/apache-maven-3.3.9/bin:/home/digoal/app/curl/bin:/home/digoal/app/protobuf/bin:/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
```
or you can  
-------------
cd ~
sudo
# wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
# sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
# yum install -y apache-maven
--------------
```
### python pip paramiko pycrypto
```
cd ~
wget https://www.python.org/ftp/python/2.7.12/Python-2.7.12.tgz
tar -zxvf Python-2.7.12.tgz
cd Python-2.7.12
./configure --prefix=/home/digoal/app/python2.7 --enable-shared
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/python2.7/lib:/home/digoal/app/apache-maven-3.3.9/lib:/home/digoal/app/curl/lib:/home/digoal/app/protobuf/lib:/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/python2.7/bin:/home/digoal/app/apache-maven-3.3.9/bin:/home/digoal/app/curl/bin:/home/digoal/app/protobuf/bin:/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
sudo   
```
export LD_LIBRARY_PATH=/home/digoal/app/python2.7/lib:/home/digoal/app/apache-maven-3.3.9/lib:/home/digoal/app/curl/lib:/home/digoal/app/protobuf/lib:/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/python2.7/bin:/home/digoal/app/apache-maven-3.3.9/bin:/home/digoal/app/curl/bin:/home/digoal/app/protobuf/bin:/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
# vi ~/.pip/pip.conf
[global]
trusted-host=mirrors.aliyun.com
index-url=http://mirrors.aliyun.com/pypi/simple/
wget https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py
sudo pip --retries=50 --timeout=300 install simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi
sudo pip --retries=50 --timeout=300 install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz
sudo pip --retries=50 --timeout=300 install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz
```
### yum 
```
yum install --skip-broken -y texlive-latex libgfortran gcc-gfortran make gperf snappy-devel bzip2-devel libevent-devel libuuid-devel libgsasl-devel libxml2-devel readline-devel openssl-devel bison apr-devel libyaml-devel flex lcov libesmtp-devel
```
## os
```
mkdir -p /data01/corefiles
chmod 777 /data01/corefiles
vi /etc/sysctl.conf
# add by digoal.zhou
fs.aio-max-nr = 1048576
fs.file-max = 76724600
kernel.core_pattern= /data01/corefiles/core_%e_%u_%t_%s.%p         # /data01/corefiles事先建好，权限777
kernel.sem = 4096 2147483647 2147483646 512000    # 信号量, ipcs -l 或 -u 查看，每16个进程一组，每组信号量需要17个信号量。
kernel.shmall = 107374182      # 所有共享内存段相加大小限制(建议内存的80%)
kernel.shmmax = 274877906944   # 最大单个共享内存段大小(建议为内存一半), >9.2的版本已大幅降低共享内存的使用
kernel.shmmni = 819200         # 一共能生成多少共享内存段，每个PG数据库集群至少2个共享内存段
net.core.netdev_max_backlog = 10000
net.core.rmem_default = 262144       # The default setting of the socket receive buffer in bytes.
net.core.rmem_max = 4194304          # The maximum receive socket buffer size in bytes
net.core.wmem_default = 262144       # The default setting (in bytes) of the socket send buffer.
net.core.wmem_max = 4194304          # The maximum send socket buffer size in bytes.
net.core.somaxconn = 4096
net.ipv4.tcp_max_syn_backlog = 4096
net.ipv4.tcp_keepalive_intvl = 20
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_time = 60
net.ipv4.tcp_mem = 8388608 12582912 16777216
net.ipv4.tcp_fin_timeout = 5
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syncookies = 1    # 开启SYN Cookies。当出现SYN等待队列溢出时，启用cookie来处理，可防范少量的SYN攻击
net.ipv4.tcp_timestamps = 1    # 减少time_wait
net.ipv4.tcp_tw_recycle = 0    # 如果=1则开启TCP连接中TIME-WAIT套接字的快速回收，但是NAT环境可能导致连接失败，建议服务端关闭它
net.ipv4.tcp_tw_reuse = 1      # 开启重用。允许将TIME-WAIT套接字重新用于新的TCP连接
net.ipv4.tcp_max_tw_buckets = 262144
net.ipv4.tcp_rmem = 8192 87380 16777216
net.ipv4.tcp_wmem = 8192 65536 16777216
net.nf_conntrack_max = 1200000
net.netfilter.nf_conntrack_max = 1200000
vm.dirty_background_bytes = 4096000000       #  系统脏页到达这个值，系统后台刷脏页调度进程 pdflush（或其他） 自动将(dirty_expire_centisecs/100）秒前的脏页刷到磁盘
vm.dirty_expire_centisecs = 6000             #  比这个值老的脏页，将被刷到磁盘。6000表示60秒。
vm.dirty_ratio = 80                          #  如果系统进程刷脏页太慢，使得系统脏页超过内存 80 % 时，则用户进程如果有写磁盘的操作（如fsync, fdatasync等调用），则需要主动把系统脏页刷出。
vm.dirty_writeback_centisecs = 50            #  pdflush（或其他）后台刷脏页进程的唤醒间隔， 50表示0.5秒。
vm.extra_free_kbytes = 4096000
vm.min_free_kbytes = 2097152  # vm.min_free_kbytes 建议每32G内存分配1G vm.min_free_kbytes
vm.mmap_min_addr = 65536
vm.overcommit_memory = 0     #  在分配内存时，允许少量over malloc
vm.overcommit_ratio = 90     #  当overcommit_memory = 2 时，用于参与计算允许指派的内存大小。
vm.swappiness = 0            #  关闭交换分区
vm.zone_reclaim_mode = 0     # 禁用 numa, 或者在vmlinux中禁止.
net.ipv4.ip_local_port_range = 40000 65535    # 本地自动分配的TCP, UDP端口号范围
net.ipv4.tcp_max_syn_backlog = 16384
net.core.somaxconn = 16384
sysctl -p
vi /etc/security/limits.conf
* soft    nofile  1024000
* hard    nofile  1024000
* soft    nproc   unlimited
* hard    nproc   unlimited
* soft    core    unlimited
* hard    core    unlimited
* soft    memlock unlimited
* hard    memlock unlimited
rm -f /etc/security/limits.d/90-nproc.conf
```
## hadoop
```
cd ~
https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/SingleCluster.html  
http://apache.fayea.com/hadoop/common/stable/  
wget http://apache.fayea.com/hadoop/common/stable/hadoop-2.7.3.tar.gz
tar -zxvf hadoop-2.7.3.tar.gz
mv hadoop-2.7.3 /home/digoal/app/
cd /home/digoal/app/hadoop-2.7.3
$ bin/hadoop
Usage: hadoop [--config confdir] [COMMAND | CLASSNAME]
  CLASSNAME            run the class named CLASSNAME
 or
  where COMMAND is one of:
  fs                   run a generic filesystem user client
  version              print the version
  jar             run a jar file
                       note: please use "yarn jar" to launch
                             YARN applications, not this command.
  checknative [-a|-h]  check native hadoop and compression libraries availability
  distcp   copy file or directories recursively
  archive -archiveName NAME -p  *  create a hadoop archive
  classpath            prints the class path needed to get the
  credential           interact with credential providers
                       Hadoop jar and the required libraries
  daemonlog            get/set the log level for each daemon
  trace                view and modify Hadoop tracing settings
Most commands print help when invoked w/o parameters.
```
### hdfs
```
vi etc/hadoop/core-site.xml
        fs.defaultFS
        hdfs://localhost:8020
        ipc.client.connection.maxidletime
        3600000
        ipc.client.connect.timeout
        300000
        ipc.server.listen.queue.size
        3300
        hadoop.tmp.dir
        file:/u01/digoal/hadoop/tmp
        Abase for other temporary   directories.
vi etc/hadoop/hdfs-site.xml
        dfs.replication
        1
        dfs.allow.truncate
        true