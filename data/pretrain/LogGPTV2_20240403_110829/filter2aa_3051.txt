# 短网址攻击与防御
演讲人：彦修  
2018年

## 关于我
- 腾讯安全工程师
- 微博: @彦修_
- 喜爱美食、阅读，不求甚解
- Tencent Blade Team成员
  - 由腾讯安全平台部创立
  - 致力于AI、移动互联网、IoT及无线电等前沿技术领域的安全研究
  - 已向谷歌、苹果、亚马逊等多个国际知名厂商报告了70多个安全漏洞

## 目录
1. 短网址猜想
2. 何谓短网址
3. 短网址攻击实战
4. 扩展短网址攻击面
5. 短网址防御实践

### PART 01 短网址猜想
某个惠风和畅的下午收到一封邮件……是否可以通过更改短网址后缀来获取他人的发票链接？

例如：
- 原始短网址：`http://xx.com/t/vWiN39`
- 修改后的短网址：`http://xx.com/t/vWiN40`

进一步尝试其他域名：
- `http://xx.cn/t/vWiN39`
- `http://xx.to/t/vWiN39`

我们进行了大量的随机爆破测试，部分结果如下：
- **短网址第一猜想**：一旦发现某处存在问题，通常意味着不止这一处存在类似问题。
- **短网址第二猜想**：要解决问题，首先需要明确问题的本质。
- **短网址第三猜想**：（待补充）

### PART 02 何谓短网址
短网址服务可以提供一个简短的URL以代替较长的原始URL。用户访问缩短后的URL时，会被重定向到原始URL。

例如微博中常见的：`http://t.cn/h5BBi`

这类服务最初为满足如微博客服务的字数限制而生，现广泛应用于短信、电子邮件等领域。

#### 自用短网址服务产品（部分）
- （列举一些自用短网址服务产品）

#### 第三方短网址服务产品（部分）
- （列举一些第三方短网址服务产品）

#### 短网址工作流程
1. 用户提交长URL
2. 通过转换算法生成短URL
3. 将映射关系存储于数据库
4. 用户访问短URL时被重定向至原长URL

#### 短网址转换算法
根据GitHub上star数最多的10个开源项目分析，主要分为三类算法：进制算法、哈希算法及随机数算法。

- **进制算法**：生成的结果是连续的。
- **随机数算法**：生成的结果是非连续且无规律的。
- **哈希算法**：生成的结果也是非连续的。

##### 进制算法示例
- 字符集："0123456789abcdefghijklmnopqrstuvwxyz"
- 当ID=233时，计算过程如下：
  1. 233/36=6
  2. 233%36=17
  3. 结果字符为第6位和第17位字符，即 "6h"
- 最终生成的短网址：`xx.xx/6h`

##### 随机数算法示例
- 字符集："0123456789abcdefghijklmnopqrstuvwxyz"
- 当要求生成长度为2的短网址时，假设随机选择的两个位置分别为6和17，则结果同样为 "6h"。

##### 哈希算法示例
- 对ID进行SHA1加密并截取前几位作为短网址。
- ID=233时，SHA1加密结果可能为：`aaccb8bb2b4c442a7c16a9b209c9ff448c6c5f35:2`
- 截取前7位作为短网址：`xx.xx/2e8c027`

### PART 03 短网址攻击实战
基于短网址第一猜想，如果一处存在问题，那么很可能多处都存在类似问题。如何高效地进行爆破呢？

#### 短网址爆破最佳实践
- **字典生成模块**
- **请求模块**
- **算法识别模块**
- **代理IP池模块**
- **响应解析模块**
- **配置与检测模块**
- **远程服务器**
- **数据库存储模块**

##### 算法识别方法
- **进制算法**：多次输入网址，查看返回短网址是否连续。
- **哈希&随机数算法**：直接访问低位后缀，如 `xx.xxx/1` 及 `xx.xxx/2`，若均不存在则尝试对已知后缀进行增减操作，观察是否存在记录或有规律变化。

#### 攻击案例
- **案例一**：通过爆破短网址服务获取大量敏感信息，包括个人资料、合同详情及密码重置链接。
- **案例二**：利用短网址批量邀请注册新用户，从而完成薅羊毛活动。

### PART 04 扩展短网址攻击面
除了可被遍历的问题外，短网址还可能存在其他潜在风险：

- **SSRF（服务器端请求伪造）**：当远程访问功能过滤不严格时可能导致。
- **XSS（跨站脚本攻击）**：在获取标题或展示页面时，若过滤不当则可能发生。
- **SQL注入**：在查询长网址过程中可能出现。

### PART 05 短网址防御实践
#### 补救措施（针对现有系统）
- **增加单IP访问频率和总量限制**，超出阈值则封禁。
- **对包含权限或敏感信息的短网址设置有效期**。
- **增强包含敏感信息的长网址的安全性**，如二次鉴权。

#### 改造措施（面向未来开发）
- **避免使用短网址服务转化含有敏感信息或权限的长网址**。
- **尽量不采用明文Token等认证方式**。

感谢观看！  
@Wester的小号  
特别鸣谢 @Mart1n_ZHOU