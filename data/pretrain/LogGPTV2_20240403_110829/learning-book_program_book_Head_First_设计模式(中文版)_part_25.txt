变量比单件模式差。
件事。类如果能做两件事，就会被题：究竟可以不可以继承单件类？
答：
认为是不好的OO设计。单件有没有
在Java中、全局变量
违反这样的观念呢？
合：
继承单件类会遇到的一
基本上就是对对象的静态引用。在
个问题，就是构造器是私有的。你
这样的情况下使用全局变量会有一
不能用私有构造器来扩展类。所以
些缺点，我们已经提到了其中的一
个责任”原则。没错，你是对的。
你必须把单件的构造器改成公开的
个：急切实例化VS.延迟实例化。
单件类不只负责管理自己的实例（或受保护的。但是这么一来就不算
但是我们要记住这个模式的目的：
并提供全局访问），还在应用程序是“真正的”单件了、因为别的类
确保类只有一个实例并提供全局访
中担当角色，所以也可以被视为是也可以实例化它。
问。全局变量可以提供全局访问，
两个责任。尽管如此，由类管理自如果你果真把构造器的访问权限改
但是不能确保只有一个实例。全局
己的实例的做法并不少见。这可以了，还有另一个问题会出现。单件
变量也会变相鼓励开发人员，用许
让整体设计更简单。更何况，许多的实现是利用静态变量，直接继承
多全局变量指向许多小对象来造成
开发人员都已经熟悉了单件模式的会导致所有的派生类共享同一个实
命名空间（namespace）的污染。单
这种做法。
例变量，这可能不是你想要的。所
件不鼓励这样的现象，但单件仍然
以，想要让子类能工作顺利，基类
可能被溢用。
必须实现注册表（Registry）功能。
在这么做之前，你得想想，继承单
件能带来什么好处。就和大多数的
模式一样，单件不一定适合设计进
入一个库中。而且，任何现有的
类，都可以轻易地加上一些代码支
持单件模式。最后，如果你的应用
程序大量地使用了单件模式，那么
你可能需要再好好地检查你的设
计。因为通常适合使用单件模式的
机会不多。
你现在的位置
185
---
## Page 222
你的设计工具箱
设计箱内的工具
你又加了一个新的模式到工具箱里。单件提供另
要点
种创建对象的方法，创建独一无二的对象。
■单件模式确保程序中
个类最多只有一个实例。
00基础
由象
■单件模式也提供访问这
00原则
个实例的全局点。
装
态
■在Java中实现单件模式
封装变化
承
需要私有的构造器、一个静
多用组合，少用继承
针对接口编程，不针对实
态方法和一个静态变量。
现编程
■确定在性能和资源上
为交互对象之间的松耦合
的限制，然后小心地选择适
设计而努力
类应该对扩展开放，对修
当的方案来实现单件，以解
改美闭。
决多线程的问题（我们必须
依赖抽象，不要依赖具体
认定所有的程序都是多线程
类。
当你需要确保程序中的某
的）。
个类只有一个实例时，就
采用单件模式吧！
■如果不是采用第五版的
Java2，双重检查加锁实现
00模式
会失效。
提州一
个楼口
小心，你如果使用多个
鱼工厂楼式
一完义了一个剑建
工厂云法楼式一
类加载器，可能导致单件失
单件模式—确保一个类只有
效而产生多个实例。
一个实例，并提供全局访问点。
如果使用JVM1.2或之
前的版本，你必须建立单件
注册表，以免垃圾收集器将
单件回收。
正如你所看到的，尽管看起来很商单，但单件实现中涉及到了很
多细节。读完本章后，你就可以使用单件了。
186
第5章
---
## Page 223
单件模式
坐下来，打开因为解决多线程问题而获赠的巧克力，花一点儿时间解决
这个填字游戏，所有的答案都是来自本章的英文词汇。
横排提示：
竖排提示：
1. It was “one of a kind"
1. Multiple
can cause problems
2. Added to chocolate in the boiler
3.A Singleton is a class that manages an
8. An incorrect implementation caused this to
instance of
overflow
4.lf you don't need to worry about lazy
10. Singleton provides a single instance and
instantiation,you can create your instance
(three words)
12. Flawed multithreading approach if not using
5.Prior to 1.2, this can eat your Singletons (two
Java 1.5
words)
13.Chocolate capital of the US
6. The Singleton was embarassed it had no
14. One advantage over global variables:
public
creation
7.The classic implementation doesn't handle
15. Company that produces boilers
this
PDG
16. To totally defeat the new constructor, we
9. Singleton ensures only one of these exist
have to declare the constructor
11. The Singleton Pattern has one
你现在的位置
187
---
## Page 224
习题解答
化身为JVM
线程一
线程二
uniqueinstance
的值
getInstance ()(
na11
public static ChocolateBoiler
哦：不！这看
getInstance ()(
起来不妙！
if
(uniqueInstance "= nu11)(
i.f
(uniqueTnstance
nu111
nal1
uniqueInstance =
nev ChocolateBoiler () ;
cobject1x
Cobject)
niqueInstance *
new ChocolateBoiler () ;
糖糕：返回了两
个不同对象，变成
有两个巧克力锅炉
pencil
请帮Choc-O-Holic改进ChocolateBoiler类，把此类设计成单件
public class ChocolateBoiler (
private boolean empty:
private boolean boiled;
public static ChocolateBoiler getInstance()(
privateChocolateBoiler(){
boiled = false;
empty = true;
if (uniqueInstance -= null) (
uniqueInstance = new ChocolateBoiler ():
return uniqueTnstance}
publie static ChocolateBoiler getInstance(){
public void fill() {
if (isEmpty()){
empty - false;
boiled = false;
PD
//用牛奶，巧克力混合物填充锅护
// 剩余的ChocolateBoiler编码
188
第5章
---
## Page 225
单件模式
习题解答
yourpencil
描述每一种方案对于修改巧克力锅炉代码所遇到的问题的适用性。
同步getinstance（）方法：
这是保证可行的最直接做法。对于巧充力锡炉似乎没有性能的考虑
所以可以用这个方法。
急切实例化
我们一定需要用到一个巧充力锅炉，所以静态地初始化实例并不是不可以。
虽然对于采用标准模式的丹复人员来说，此做法可能稍微陌生一点。但它还是可行的。
双重检查加锁
由于没有性能上的考虑，所以这个方法似乎杀难用了牛刀。另外，采用这个方法
还得确定使用的是7a5k上的版本。
PDG
你现在的位置
189
---
## Page 226
填字游戏解答
习题解答
N
E
R
T
PDG
190
第5章
---
## Page 227
6命令模式
封装调用
这些绝密文件的投递箱已经促成了间
课工业的革命。我只要把需求丢进去，
就有人会消失、政府一少之间改朝换
代，而我的干洗衣物也好了。我不必管
何时、何处，或者如何完成：反正就是
完成了！
绝密
文件
投递箱
在本章，我们将把封装带到一个全新的境界：把方法调
用（methodinvocation）封装起来。没错，通过封装方法调
用，我们可以把运算块包装成形。所以调用此运算的对象不需要关心事情是如
何进行的，只要知道如何使用包装成形的方法来完成它就可以。通过封装方法
PDG
调用，也可以做一些很聪明的事情，例如记录日志，或者重复使用这些封装来
实现撤销（undo）。
这是新的一章
191
---
## Page 228
巴斯特家电自动化公司
巴斯特家电自动化公司
伊利诺伊州
本来城工业路1221号
您好！
最近JohnnyHurricane（Weather-O-Rama气象站CEO）向我展示
并简单介绍了新扩张的气象站。我必须说，我对于该软件架构
的印象非常深刻，所以想邀请你为我们设计一个家电自动化遥
控器的API。作为服务回报，我们将慷概地提供给您巴斯特家电
自动化公司的股票期权。
附上一个创新控制器的原型以供你研究。这个遥控器具有七个
可编程的插槽（每个都可以指定到一个不同的家电装置），每
个插槽都有对应的开关按钮。这个遥控器还具备一个整体的撤
销按钮。
我也在光盘里附上一组Java类，这些类是由多家厂商开发出来
的，用来控制家电自动化装置，例如电灯、风扇、热水器、音
响设备和其他类似的可控制装置。
希望你能够创建一组控制遥控器的API，让每个插槽都能够控制
一个或一组装置。请注意，能够控制目前的装置和任何未来可
能出现的装置，这一点是很重要的。
基于你帮Weather-O-Rama气象站所做的成果，我们知道您一定
能把这个遥控器设计得很好！
期待看到你的设计。
诚挚的，
Bill “X-10" Thompson, CEO
家电自动化
厂商类
PDG
192
2第6章
---
## Page 229
命令模式
让硬件解脱！让我们看看这个遥控器·····
这七个插槽具务各旬
的“丹”与“关”按钮。
有七个插槽需要编程。可以在每个
楼放上不同的装重，然后用按
钮控制它。
这两个按钮是控制第
一号插槽上的家用装
.而这两个按银是
控制第二号插楼上的
家用装置的…
.依次类推。
拿出你的Sharpie记号笔
（译注：世界销量第一的
记号笔品牌），在这里写
这是一个整体共用的“撤销”按
上装置名称。
钮，会撤销最后一个按钮的动作。
PDG
你现在的位置
193
---
## Page 230
从家电自动化公司取得的厂商类
看一下厂商的类
看看光盘上面的厂商类，可以使你对即将设计的对象的接口有
一些想法。
ApplianceControl
on()
家电自动化
off)
厂商类
Stereo
on()
CeilingLight
ofl)
on0
seDvd[
offi
AL
sefRadio()
dim()
OutdoorLight
sefVolume()
on()
FaucetControl
on()
offt
openValue()
of()
setinputChannel)
doseValue)
sefVolume[
CeilingFan
Hottub
high0
ciroulate)
medium)
GarageDoor
GardenLight
jetsOn()
lo8/)
up0
setDuskTime()
setDawnTime()
off()
dow()
setTemperaturet()
manuaiOn)
getSpeed)
stop()