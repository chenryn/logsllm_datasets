# Exploiting SSL VPN Vulnerabilities: A Comprehensive Guide

## Introduction
This document details the exploitation of SSL VPN vulnerabilities, specifically focusing on Fortigate and Pulse Secure SSL VPNs. It covers various attack vectors, including heap overflows, command injection, and arbitrary file reading, as well as mitigation strategies.

## Attack Vectors

### Overflowing SSL Structure
- **Massive Connections**: Establish a large number of connections to the target.
- **Normal Requests**: Send numerous normal requests.
- **Overflow Request**: Introduce an overflow request to trigger the vulnerability.

### Fortigate SSL VPN
- **Massive Connections**: Initiate a large number of connections.
- **Normal Requests**: Send multiple normal requests.
- **Overflow Request**: Trigger the overflow with a single request.
- **Fuzzer**: Use a fuzzer to exploit the connections.
- **Heap Memory**: Manipulate the heap memory to exploit the SSL structure.

### Triggering JavaScript Parsing
- **Heap Memory**: Allocate memory for JavaScript buffers.
- **Buffer Allocation**: Allocate a buffer in the heap memory.
- **Overflow SSL Structure**: Overwrite the SSL structure with a large amount of data.
- **JavaScript Buffer**: Use `memcpy` to copy the JavaScript URL into the buffer.

### From Segmentation Fault to Remote Code Execution (RCE)
- **Heap Memory**: Manipulate the heap memory to forge the SSL structure.
- **Forge SSL Structure**: Modify the SSL structure to include a system call.
- **JavaScript Buffer**: Use the JavaScript buffer to execute the system call.
- **Remote Shell**: Gain a remote shell on the target system.

### Exploitation Process
- **Send Fuzzy Connections**: Send connections to meet the required conditions.
- **Daemon Crashes**: The daemon may crash multiple times.
- **Reliable Watchdog**: Fortigate has a reliable watchdog to handle crashes.
- **Gain Shell**: Obtain a shell within 1 to 2 minutes.

### Finding Another Entry Point
- **MAGIC Backdoor**: Use a "magic" parameter for password reset.
- **Secret Key**: Utilize a secret key for resetting outdated passwords.
- **Lack of Authentication**: The backdoor lacks proper authentication.

### Demo
- **Root Shell**: Pop a root shell from the exposed HTTPS port.
- **Pulse Secure SSL VPN**: Exploit the vulnerabilities in the Pulse Secure SSL VPN.

## Pulse Secure SSL VPN Vulnerabilities

### Overview
- **Company Background**: Pulse Secure was formed from a divestiture of Juniper Networks.
- **Customized Web Server**: Uses a customized web server and architecture stack.
- **Perl Enthusiast**: Numerous Perl extensions in C++.
- **LD_PRELOAD**: All processes are preloaded with `libsafe.so` and `libpreload.so`.

### Identified Vulnerabilities
- **CVE-2019-11510**: Pre-auth arbitrary file reading.
- **CVE-2019-11538**: Post-auth NFS arbitrary file reading.
- **CVE-2019-11508**: Post-auth NFS arbitrary file writing.
- **CVE-2019-11542**: Post-auth stack buffer overflow.
- **CVE-2019-11539**: Post-auth command injection.
- **CVE-2019-11540**: XSSI session hijacking.
- **CVE-2019-11507**: Cross-site scripting.

### Arbitrary File Reading
- **CVE-2019-11510**: Webserver-level pre-auth file reading.
- **New Feature**: HTML5 Access introduced in SSL VPN version 8.2.
- **Path Validation**: Wider path validation to handle static resources.

### Am I Affected?
- **Vulnerable Versions**: All unpatched versions except the End-of-Life 8.1 code.
- **Check Vulnerability**:
  ```sh
  $ curl -I 'https://sslvpn/dana-na///css/ds.js'
  HTTP/1.1 400 Invalid Path
  $ curl -I 'https://sslvpn/dana-na///css/ds.js?/dana/html5acc/guacamole/'
  HTTP/1.1 200 OK
  ```

### Extractable Data
1. **Private Keys and System Configuration**: LDAP, RADIUS, and SAML.
2. **Hashed User Passwords**: MD5_crypt.
3. **Sensitive Cookies**: Google, Dropbox, iCloud, etc.
4. **Cached User Plaintext Passwords**.

### Command Injection
- **CVE-2019-11539**: Post-auth command injection.
- **Code Snippet**:
  ```perl
  sub tcpdump_options_syntax_check {
      my $options = shift;
      return $options if system("$TCPDUMP_COMMAND -d $options >/dev/null 2>&1") == 0;
      return undef;
  }
  ```

### Pulse Secure Hardening
- **System Integrity Check**: Ensures system integrity.
- **Read-Only Filesystem**: Only `/data` is writable.
- **DSSafe.pm**: Protects Perl from dangerous operations.

### DSSafe.pm Flaw
- **Command Line I/O Redirection**: Flaw in parsing.
- **Exploitation Example**:
  ```sh
  /usr/sbin/tcpdump -d -r'$x="ls",system$x#' 2>/data/runtime/tmp/tt/setcookie.thtml.ttc /dev/null 2>&1
  ```

### Response from Pulse Secure
- **Commitment**: Committed to providing secure access solutions.
- **Timeline**:
  - Reported on March 22, 2019.
  - Security advisory published on April 24, 2019.
  - CVEs assigned and advisory updated on April 25, 2019.
  - Reminder sent to customers on June 26, 2019.
- **Acknowledgment**: Thanks to DEVCORE Team for coordinated disclosure.

### Hacking Twitter
- **Monitoring**: Monitoring large corporations using Pulse Secure.
- **Vulnerability Check**:
  ```sh
  $ ./pulse_check.py .twitter.com
  [*] Date = Thu, 13 Dec 2018 05:34:28 GMT
  [*] Version = 9.0.3.64015
  [*] OK, .twittr.com is vulnerable
  ```

### Bypassing Two-Factor Authentication
- **Extract Cached Passwords**: From `/lmdb/dataa/data.mdb`.
- **Roaming Session**: Enabled by default.
- **Session Dump**: Download `/lmdb/randomVal/data.mdb` to dump sessions.
- **Forge User Session**: Reuse the session to bypass 2FA.

### Restricted Admin Interface
- **Admin Password Hash**: SHA256(MD5_crypt(salt, ...)).

### Weaponizing SSL VPN
- **Old-School Method**: Watering hole, drive-by download, and man-in-the-middle attacks.
- **New Method**: Leverage logon script feature to execute programs on connected clients.

### Recommendations
- **Client Certificate Authentication**.
- **Multi-Factor Authentication**.
- **Full Log Audit**: Ensure logs are sent to an out-bound server.
- **Security Advisory Subscription**: Keep the system updated.

## Conclusion
Thank you for your attention. For more information, contact:
- @orange_8361
- @mehqq_

---

This optimized text provides a clear, structured, and professional overview of the SSL VPN vulnerabilities and their exploitation, along with recommendations for mitigation.