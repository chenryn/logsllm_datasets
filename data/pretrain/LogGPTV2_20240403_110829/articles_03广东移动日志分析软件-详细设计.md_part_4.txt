> 2014-05-14 23:24:47 15752 \[Note\] Server hostname (bind-address):
> \'\*\'; port: 3306
我们会为用户解析出如下字段
> timestamp，loglevel，pid，message
**（2）配置日志解析规则**
日志分析软件内置了常用的日志解析规则，能够识别、解析常见的日志格式。对于日志分析软件预置规则不支持的日志格式，用户可以在产品页面的"设置"标签下的"日志格式"标签里配置日志格式解析规则，抽取自定义字段。
日志的解析
日志解析的主要作用是抽取用户认为重要的字段，这就需要用户熟悉解析规则的配置。例如这样一条日志：
192.168.1.103 - - \[01/Aug/2014:12:07:39 +0800\] \"GET / HTTP/1.1\\\"
200 3228 \"-\" \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
要抽取出如下字段：
1 \"ua\" : \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1;
Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR
3.5.30729; .NET CLR 1.1.4322; .NET4.0C)\"
1.1 \"os\" : \"Windows XP\"
1.2 \"os_v\" : \"Windows XP\"
1.3 \"browser\" : \"IE\"
1.4 \"browser_v\" : \"IE 8.0\"
1.5 \"device\" : \"Other\"
2 \"clientip\" : \"192.168.1.103\"
3 \"status\" : 200
4 \"resp_len\" : 3228
5 \"method\" : \"GET\"
6 \"version\": \"1.1\"
需要用户在数据接入系统前即配置好解析规则，方便用户后续根据日志字段来做相关的处理。
-   配置规则
日志的格式是多样化的，为了解析这些多样的日志，通常需要多种方法来处理。日志分析软件提供自定义日志格式配置功能，用户每次配置一项功能后解析成功即可点击"继续"，再配置下一项功能，当用户确定所有配置成功后点击"提交配置"。
####### 8.2 对于平台预置规则不支持的日志格式，用户可以在产品页面配置日志格式解析规则，抽取自定义字段
除了正常的正则表达式，我们还提供了一些常用的正则表达式，可以通过%{XXX}的方式来引用。比如可以使用%{NOTSPACE}来代替\\S+，这样的正则表达式为：
(?\%{NOTSPACE} %{NOTSPACE}) %{NOTSPACE:pid}
\\\[%{NOTSPACE:loglevel}\\\] %{GREEDYDATA:message}
默认的字段值是string类型的，如果用户想将其转换为number类型，可以在引用中加入type类型，目前仅支持int和float类型，例如：
%{XXX:int} 或者 %{XXX:float}
常用的正则表达式
1 基本：
%{NUMBER} (?:%{BASE10NUM})
%{POSINT} \\b(?:\[1-9\]\[0-9\]\*)\\b
%{NONNEGINT} \\b(?:\[0-9\]+)\\b
%{WORD} \\b\\w+\\b
%{NOTSPACE} \\S+
%{SPACE} \\s\*
%{MORESPACE} \\s+
%{DATA} .\*?
%{GREEDYDATA} .\*
%{IP} 略
%{PORT} 略
2 Apache/Nginx：
%{ApcClientIP}
%{ApcIdent}
%{ApcUser}
%{ApcTimestamp｝
%{ApcStatus}
%{ApcRespLen}
%{ApcReferer}
%{ApcUa}
%{ApcXForward}
%{ApcRequest}
例如原始日志:
192.168.1.139 - - \[24/Jan/2015:17:03:49 +0800\] \"GET
/api/v0/search/fields/?field=tag&filters=&order=desc&page=1&query=\*&size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields
HTTP/1.1\" 200 363
\"http://alltest.rizhiyi.com/search/?query=\*&time_range=-2d%2Cnow&order=desc&size=20&page=1&sourcegroup=all&type=timeline&\_t=1422088066859&title=%E9%BB%98%E8%AE%A4&index=0\"
\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:35.0) Gecko/20100101
Firefox/35.0\"
可以采用如下配置：
%{ApcClientIP} %{ApcIdent} %{ApcUser} %{ApcTimestamp} %{ApcRequest}
%{ApcStatus} %{ApcRespLen} %{ApcReferer} %{ApcUa}
抽取出如下字段：
注意事项
正则库使用的是完全匹配模式，即正则表达式需要消耗掉整条日志才可以匹配：
%{IP:ip}:%{PORT:port} 不会匹配2014-10-20
192.168.1.1:8080和 192.168.1.1:8080 2014-10-20，只会匹配192.168.1.1:8080
一个正则表达式中字段分组命名的字段不能重复，如果命名的字段有.
\@或空格，它们都会被替换成下划线\_，因此不要使用这些符号。
以下解析规则需要配置source（哪个字段），指定这个配置对哪个字段有效，如果没有指定source则默认指定的是原始日志。
KeyValue分解
KV主要用来解析明显的KV字符串，例如上面的例子中正则表达式解析后，request_query字段为：
field=tag&filters=&order=desc&page=1&query=\*&size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields
这是一个按照\"&\"和\"＝\"来分割的KV字段。添加解析规则：KeyValue分解，source字段选择request_query，定义字段间分隔符为&，定义k-v分隔符为=，点击解析，如图可看到解析结果：
数值型字段转换
默认提取出来的字段都是字符串类型的。如果用户希望将这个值转换成数值类型，以方便再后面做统计，则需要通过这个功能来做转换。转换时需要用户配置数值的类型：int/float
例如： 用户的日志经过解析得出如下字段：
k1: \"123\",
k2: \"123.0\"
经过转换可以转变为：
k1: 123,
k2: 123.0
如针对正则表达式的解析结果，选择resp_len字段，点击解析：
**url解码**
将编码过的url进行解码，这个操作只能针对已经解析出来的字段。
如针对正则表达式的解析结果，选择字段request_query.sourcegroupCn，点击解析：
**User Agent解析**
分析HTTP日志中User
Agent的用户操作系统和浏览器信息。如针对正则表达式解析后的结果，选择ua字段，点击解析：
**时间戳识别**
使用者通常关心日志发生的时间，比如检索最近几天的日志，需要转换日志中的timestamp字段的内容，日志分析软件系统就可以识别这条日志的时间戳。这就需要用户在之前抽取字段时就提取出timestamp字段。例如：
timestamp: \"150120 16:00:30\"
需要配置解析类型为：
yyMMdd HH:mm:ss
具体的配置格式参考：
  ------------------------------------------------------------------------
  符号   含义           格式          举例
  ------ -------------- ------------- ------------------------------------
  e      星期           数字          星期二：\
                                      e2\
                                      ee：02
  E      星期           文本          星期二：\
                                      E：Tue\
                                      EEEE：Tuesday
  M      月份           月            七月：\
                                      M:7\
                                      MM:07\
                                      MMM:Jul\
                                      MMMM:July
  d      一月的第几天   数字          第9天\
                                      d:9\
                                      dd:09
  H      0-23小时       数字          8点\
                                      H:8\
                                      HH: 08
  m      0-59分钟       数字          8分\
                                      m:8\
                                      mm:08
  s      0-59毫秒       数字          8秒\
                                      s:8\
                                      ss:08
  S      0-999毫秒      数字          888毫秒\
                                      SSS:888
  z      时区           文本          zzz:PST\
                                      zzzz:Pacific Standard Time;
  Z      时区           时区          Z: +0800;\
                                      ZZ: +08:00;\
                                      ZZZZ: America/Los_Angeles
  ------------------------------------------------------------------------
如果符合ISO8601标准可以直接配置成\"ISO8601\"，例如：Fri Jul 05 21:28:24
2013 ISO8601，
如果是UNIX格式可以直接配置成\"UNIX\"，例如：1412899200.000，
如果解析失败或者没有配置，默认使用进入系统的时间作为这条日志发生的时间。
对上面例子中的日志时间戳进行配置，source字段选择timestamp，填入"dd/MMM/yyyy:HH:mm:ss
Z"，点击解析，弹出配置成功窗口如下图：
**JSON解析**
JSON解析用来解析JSON格式的日志, 例如原始日志为：
{\"Name\": \"John Smith \", \"Age\": 23, \"Employed\": true,
\"Address\": {\"Street\": \"324 Chrome St\", \"City\": \"Portland, New
York,Los Angeles \", \"Country\": \"United States\"}}
JSON解析后如下图所示：
**字段值拆分**
将字符串切分，例如：
key：\"1.2.3.4, 2.4.5.6\"
可以根据"，"来对其进行切分成两个value:
key：\[\"1.2.3.4\", \"2.4.5.6\"\]
在上面的JSON解析结果中，Address.City字段内容为 \"Portland, New York,Los
Angeles
\"，将其作为source字段，将分隔符设定为","，点击解析，即得到解析结果如图所示:
管理原始数据以及正则提取后的数据，数据处理系统基于高性能内存流式计算架构Spark
Streaming，根据配置的规则抽取数据关键字段，将非结构化的数据转换成结构化数据。抽取关键字段的好处是可以对关键字段进行统计分析。日志分析软件将对关键字段及原始数据进行索引，用户可对关键字段及原始数据进行搜索。
日志分析软件已经配置了常见数据的解析规则，对于日志分析软件没有预先配置解析规则的数据，用户可通过后台或Web页面配置解析规则，抽取关键字段。即使没有抽取关键字段，用户仍然可以通过全文检索搜索数据。
日志分析软件在数据做索引之前抽取关键字段，提高了检索的速度。业界有的竞品在检索阶段抽取字段，导致检索速度慢。日志分析软件克服了这个弊端。
##### 9.搜索语法
搜索提供了功能强大、简单易用的方法来检索日志，可以快速过滤并找到相关的结果，搜索的四种方式包括范围查询、正则表达式、NOT/AND/OR布尔值和字段过滤。
功能要求：
（1）搜索方法
1\. 范围查询：可快速发现满足一定条件参数的事件，例如检索Apache
Web服务器响应时间大于200ms的事件。
2\.
正则表达式：可以定义查询模版来简化你的搜索输入，假如你有一批名为app01-app99机器，如果你只想搜索前30台，你可以输入"/app\[0-2\]\[0-9\]/"
来简化搜索输入。
3\. AND/OR/NOT布尔值：利用AND、OR、NOT和(
)的组合，用户可以自由构造各种复杂的组合查询语句。
4\.