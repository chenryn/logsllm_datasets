### 2. 配置日志解析规则

#### 2.1 日志分析软件内置的解析规则
日志分析软件内置了多种常用的日志解析规则，能够自动识别和解析常见的日志格式。对于不支持的日志格式，用户可以通过产品页面的“设置”标签下的“日志格式”标签来配置自定义的日志解析规则。

#### 2.2 日志解析的主要作用
日志解析的主要目的是抽取用户认为重要的字段。这需要用户熟悉解析规则的配置。例如，对于以下日志：
```
192.168.1.103 - - [01/Aug/2014:12:07:39 +0800] "GET / HTTP/1.1" 200 3228 "-" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C)"
```
可以抽取出如下字段：
- `ua`: `"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C)"`
- `os`: `"Windows XP"`
- `os_v`: `"Windows XP"`
- `browser`: `"IE"`
- `browser_v`: `"IE 8.0"`
- `device`: `"Other"`
- `clientip`: `"192.168.1.103"`
- `status`: `200`
- `resp_len`: `3228`
- `method`: `"GET"`
- `version`: `"1.1"`

#### 2.3 自定义日志格式配置
用户可以在数据接入系统前配置好解析规则，以便后续根据日志字段进行相关处理。配置步骤如下：
1. **选择功能**：用户每次配置一项功能后，点击“继续”以配置下一项。
2. **提交配置**：当所有配置成功后，点击“提交配置”。

#### 2.4 常用正则表达式
除了标准的正则表达式外，日志分析软件还提供了一些预定义的正则表达式，可以通过`%{XXX}`的方式引用。例如：
- `%{NOTSPACE}` 代替 `\S+`
- 示例正则表达式：
  ```
  (?<timestamp>\%{NOTSPACE} %{NOTSPACE}) %{NOTSPACE:pid}
  \[%{NOTSPACE:loglevel}\] %{GREEDYDATA:message}
  ```

默认提取的字段值为字符串类型。如果需要转换为数值类型（int 或 float），可以在引用中加入类型信息，例如：
- `%{XXX:int}`
- `%{XXX:float}`

#### 2.5 常见正则表达式
- **基本**：
  - `%{NUMBER}`: 匹配数字
  - `%{POSINT}`: 匹配正整数
  - `%{NONNEGINT}`: 匹配非负整数
  - `%{WORD}`: 匹配单词
  - `%{NOTSPACE}`: 匹配非空白字符
  - `%{SPACE}`: 匹配空白字符
  - `%{MORESPACE}`: 匹配多个空白字符
  - `%{DATA}`: 匹配任意字符（非贪婪模式）
  - `%{GREEDYDATA}`: 匹配任意字符（贪婪模式）
  - `%{IP}`: 匹配IP地址
  - `%{PORT}`: 匹配端口号

- **Apache/Nginx**：
  - `%{ApcClientIP}`
  - `%{ApcIdent}`
  - `%{ApcUser}`
  - `%{ApcTimestamp}`
  - `%{ApcStatus}`
  - `%{ApcRespLen}`
  - `%{ApcReferer}`
  - `%{ApcUa}`
  - `%{ApcXForward}`
  - `%{ApcRequest}`

例如，对于以下原始日志：
```
192.168.1.139 - - [24/Jan/2015:17:03:49 +0800] "GET /api/v0/search/fields/?field=tag&filters=&order=desc&page=1&query=*size=50&sourcegroup=all&sourcegroupCn=%E6%89%80%E6%9C%89%E6%97%A5%E5%BF%97&time_range=-2d,now&type=fields HTTP/1.1" 200 363 "http://alltest.rizhiyi.com/search/?query=*time_range=-2d%2Cnow&order=desc&size=20&page=1&sourcegroup=all&type=timeline&_t=1422088066859&title=%E9%BB%98%E8%AE%A4&index=0" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:35.0) Gecko/20100101 Firefox/35.0"
```
可以采用如下配置：
```
%{ApcClientIP} %{ApcIdent} %{ApcUser} %{ApcTimestamp} %{ApcRequest} %{ApcStatus} %{ApcRespLen} %{ApcReferer} %{ApcUa}
```

#### 2.6 注意事项
- 正则表达式需完全匹配整条日志。
- 字段分组命名不能重复，特殊字符会被替换为下划线 `_`。
- 解析规则需指定 `source` 字段，默认为原始日志。

#### 2.7 其他解析功能
- **KeyValue分解**：用于解析明显的键值对字符串。
- **数值型字段转换**：将字符串类型的字段转换为数值类型（int 或 float）。
- **URL解码**：对编码过的URL进行解码。
- **User Agent解析**：解析HTTP日志中的用户操作系统和浏览器信息。
- **时间戳识别**：识别并转换日志中的时间戳。
- **JSON解析**：解析JSON格式的日志。
- **字段值拆分**：将字符串切分为多个值。

### 3. 搜索语法
搜索提供了强大且易用的方法来检索日志，包括范围查询、正则表达式、布尔运算和字段过滤。

#### 3.1 搜索方法
1. **范围查询**：快速发现满足一定条件参数的事件，例如检索响应时间大于200ms的事件。
2. **正则表达式**：定义查询模板简化搜索输入。
3. **布尔运算**：使用AND、OR、NOT和括号组合构造复杂的查询语句。
4. **字段过滤**：通过指定字段进行过滤。

通过这些功能，用户可以高效地管理和分析日志数据。