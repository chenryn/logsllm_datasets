2003-10-20 3:00am
1,443
342
544
617
20
Since certain patterns are more visible by looking at pairs of these attributes,
the capability was added to calculate functional combinations of these ﬁve base
metrics given in the raw data. Currently, the only functions that work are the
four basic math operations (+,−,∗, and/), but these still can still reveal many
interesting features. For example, network scans tend to stand out when one
looks at the ratio of destinations to sources.
Figure 8 demonstrates how the drill down methodology works for ﬁnding
network scans by applying it to a 24 hour long dataset at 10 minute resolution.
Since we are looking for network scans, the metric being shown has been selected
to be the ratio of destinations to sources. Then, starting at the timeline on the
left, a spike is found on a high port that crosses several hours. One of these hours
is then selected for viewing in the grid based visualization. In it, there is exactly
one port with unusually large values in the range of ports that correspond to
the column in the timeline that has the spike. So the range around this port is
zoomed into which generates the third image (the one in the upper right). Finally,
the particular port of interest, which happens to be port 38293, is selected to be
shown in the port view. As can be seen in this view, there was an abnormally
Fig. 8. Methodology example. Systematically discovering a network scan.
278
C. Muelder, K.-L. Ma, and T. Bartoletti
large number of destinations being connected to by such a small number of
sources, which means that this is probably a network scan. Also of note is that
the duration of the scan on this port corresponds with the duration of the spike
seen on the timeline. A quick check through the hourly views during this duration
also conﬁrms that there were no other ports contributing substantially to the
spike in the histogram, meaning that the spike is caused by this port alone.
Network scans can be even easier to detect with the scatterplot then with the
grid based display. Rather than requiring the user to hunt through a range of
ports looking for the one that is a diﬀerent color, the scatterplot can be used to
isolate ports with network scans away from the rest of the ports. For example, in
ﬁgure 9, the scatterplot has been used to identify several possible network scans.
The scatterplot was generated with the source count metric on the y axis, and
the destination count metric on the x axis, because network scans are distinctive
in that they have high destination counts and low source counts. Therefore, they
should fall into the lower right corner of the plot, and during the hour of interest
shown in the ﬁgure, there were 5 such ports that stood out strongly. As can
be seen in the ﬁgure, they all actually do have high destination counts and low
source counts, meaning that there was likely a network scan running on each
port during that hour.
While network scans focus on single ports or small groups of ports, port scans
usually cover a large range of ports, possibly up to all 65536 ports. In Figure 10,
Fig. 9. A scatterplot showing destinations versus sources. The ports that are in the
lower right are probable network scans.
Interactive Visualization for Network and Port Scan Detection
279
Fig. 10. Two port scans: A rapid randomized scan and a slow sequential scan
two port scans are shown. The scan on the left is a “randomized” scan; over the
period of a few hours, the scanner hit ports at random, eventually trying all of
them. Network activity was fairly normal at ﬁrst, but random port hits increased
gradually, and during the ﬁnal hour, nearly every port was hit. The scan on the
right is a linear scan that was also run over a few hours. The scanning formed
every-other-port stripes that covered most of the upper port range (the missed
ports were covered in a subsequent scan, which is not shown here). Note that
both the randomized (top) and linear (bottom) scans stand out on the timeline,
making them easy to tag for this kind of detailed analysis.
Figure 11 demonstrates another way the system can be used for the detection
of port scans. The dataset in this example covers three and a half days at one
Fig. 11. This timeline visualization provides an overview of the collected data in a
highly compact fashion
280
C. Muelder, K.-L. Ma, and T. Bartoletti
Fig. 12. The variance visualization. Looking at the variance reveals probable port scan
activity.
hour resolution. The ﬁrst of the series of images shows the initial timeline view.
In it, several diagonal lines can be faintly seen running through the timeline. In
order to accentuate these lines, the gradient editor was used to show them with
high contrast in the second image. The third image highlights ﬁve of the possible
port scans discovered in this way. They can also be seen as planes in the volume
rendered view, as is shown in the fourth image. Note that these scans take place
over several hours each, so it is possible that they are slow enough that they
would not be picked up by a simple statistical detection program.
Figure 12 shows the variance analysis system in action. When the timeline for
this dataset was viewed with the ratio of destinations to sources metric, a region
showed a suspicious block of heavy activity on the lower half of the port space
over an entire day. When any of these times are viewed directly with the grid
visualization, they just show random noise over the port range. However, calcu-
lating the variance over this time range reveals an interesting striation pattern in
the range of ports being scanned, as can be seen in the ﬁgure. This pattern could
be indicative of the order that the ports were scanned or the tool that was used.
Or it is possible that it is just an artifact from the reduction to hourly counts, in
which case higher resolution data would be required. In either case, explaining
the pattern deﬁnitively would require access to more detailed data.
5 Conclusion
Among other anomalous features, port scans and network scans can often be
seen quite readily with these methods. Even with the limitations on the data,
many interesting security features can be detected and identiﬁed. Sometimes
Interactive Visualization for Network and Port Scan Detection
281
the cause of the interesting features can not be determined without using some
other methods, but knowing where the other methods should be applied is useful.
However, the techniques used are not bulletproof. Network scans that occur on
ports that are commonly used could easily go undetected, simply because the
normal usage overwhelms it. Port scans that are performed slowly enough with
a random order would also be very diﬃcult to detect, because they would be
ignored as being noise. However, this problem could be overcome by reﬁning and
reducing the data. That is, once scans are detected with a given time interval,
ﬁlter them out and increase the time interval. Then slower scans would show up
without being overwhelmed by the more rapid scans. Overall, the tool manages
to give a high level view into the status of a network without sacriﬁcing the
conﬁdentiality of a network’s infrastructure, and provides a rapid way to detect
both network and port scans.
6 Future Work
There is a limit to what can be done with summarized data; a large amount
of interesting work lies in the integration of more detailed data about network
activity. If IP addresses and other information about each session were incor-
porated, the existing visualizations could be made much more richly detailed,
and new visualizations could be created that could lead to insights that cannot
be found in summarized data. For example, being able to adjust the resolution
of the summarization dynamically could make the timeline a good zoomable
interface. In fact, it would be a good idea to add access to the full data as a
modular plug-in, so that in house analysts can access the full data, while the
basic summarized visualizations are usable even by third parties.
These visualization techniques were all developed based on summarizing the
data by port. It is also possible to summarize the data based on source addresses
or destination addresses, and apply the same visualization methods. For source
address summarization, the data values could be session count, destination ad-
dress count, port count, and unique destination address and port pairs. And for
destination address summaries, The values could be session count, source address
count, port count, and unique source address and destination port pairs. These
diﬀerent metrics would be able reduce the sensitive nature of the original data
just like the port summarization, and would provide another view of the data.
The combination of these various summarized datasets could allow the user to
gain a more insightful view of the data then any one dataset alone.
Currently, human pattern detection is relied upon to ﬁnd patterns in the
data and groups of related ports. However, machine learning could be poten-
tially applied to ﬁnd patterns and anomalies, augmenting human abilities. Since
the techniques being used do not label the data, clustering algorithms are likely
to be of use, since these have proven to be useful in discovering security events in
unlabeled data. [15] For instance, a self-organizing map [7] or multi-dimensional
scaling technique [18] could be used to organize the ports according to their
nearness in data space (similar to [4]), hopefully isolating the ports with un-
282
C. Muelder, K.-L. Ma, and T. Bartoletti
usual usage. Another machine learning approach to ﬁnding interesting outliers
is discussed in [2].
Once these scans are detected, there is still the question of what to do with
them. Given the limited dataset used in this project, there is not much more
that can be done. However, one can take information gained from looking at
this summarized data and isolate a scan in the original data. Then, analysis can
be done on more precise information such as the timing of packets to diﬀerent
destination addresses or ports. Some visualization and statistical techniques for
performing such an analysis have been developed by Bryan Parno and Tony
Bartoletti [14], and work is currently being done to extend these methods.
There are several other statistical calculations that could be used over ranges
of time instead of the variance based methods currently used. The standard
deviation and the coeﬃcient of variation would make good alternatives for vari-
ance and relative variance respectively, because they serve essentially the same
purpose. They also would have the advantage of preserving units, at the cost
of being slightly more computationally expensive. The covariance or correlation
between pairs of metrics could also make an interesting measurement.
It would also be useful for the system to have the capability to save and restore
visualization states, so that interesting views could be easily recalled. Very useful
views could evolve into a kind of “at-a-glance” network visualization system. The
system’s responsiveness could also be improved; currently, it reads data from the
raw text ﬁles and computes its statistics. It would save the user time if some of
the calculations were pre-processed and stored so that data loaded more quickly
upon startup.
Acknowledgements
This work has been sponsored in part by the U.S. National Science Founda-
tion under contracts ACI 9983641 (PECASE), ACI 0222991, and ANI 0220147
(ITR), ACI 0325934 (ITR), and the U.S. Department of Energy under Lawrence
Livermore National Laboratory Agreement No. B537770, No. 548210 and No.
550194. We would also like to thank the DOE Computer Incident Advisory
Capability (CIAC) operation at LLNL for providing the data upon which this
exploration was based and Andrew Brown for his ready assistance in extracting
and providing the statistical data.
References
1. Richard A. Becker, Stephen G. Eick, and Allan R. Wilks. Visualizing network data.
IEEE Transactions on Visualization and Computer Graphics, 1(1):16–28, 1995.
2. P. Dokas, L. Ertoz, V. Kumar, A. Lazarevic, J. Srivastava, and P. Tan. Data mining
for network intrusion detection. In Proc. NSF Workshop on Next Generation Data
Mining, 2002.
3. Robert F. Erbacher. Visual traﬃc monitoring and evaluation. In Proceedings of
the Conference on Internet Performance and Control of Network Systems II, pages
153–160, 2001.
Interactive Visualization for Network and Port Scan Detection
283
4. L. Girardin and D. Brodbeck. A visual approach for monitoring logs. In Proceedings
of the 12th Usenix System Administration conference, pages 299–308, 1998.
5. Tom Goldring. Scatter (and other) plots for visualizing user proﬁling data and
network traﬃc. In VizSEC/DMSEC ’04: Proceedings of the 2004 ACM workshop
on Visualization and data mining for computer security, pages 119–123, New York,
NY, USA, 2004. ACM Press.
6. Jaeyeon Jung, Vern Paxson, Arthur W. Berger, , and Hari Balakrishnan. Fast
portscan detection using sequential hypothesis testing. In Proc. IEEE Symposium
on Security and Privacy, 2004.
7. Teuvo Kohonen. Self-Organization and Associative Memory. Springer-Verlag,
Berlin, 3rd edition, 1989.
8. Kiran Lakkaraju, Ratna Bearavolu, and William Yurcik. NVisionIP—a traﬃc
visualization tool for security analysis of large and complex networks. In Interna-
tional Multiconference on Measurement, Modelling, and Evaluation of Computer-
Communications Systems (Performance TOOLS), 2003.
9. Stephen Lau. The spinning cube of potential doom. Communications of the ACM,
47(6):25–26, 2004.
10. David J. Marchette, V. Nair, M. Jordan, S. L. Lauritzen, and J. Lawless. Computer
Intrusion Detection and Network Monitoring: A Statistical Viewpoint. Statistics
for Engineering and Information Science. Springer-Verlag, New York, 2001.
11. J. McPherson, K.-L. Ma, P. Krystosk, T. Bartoletti, and M. Christensen. Portvis:
A tool for port-based detection of security events. In ACM VizSEC 2004 Workshop,
pages 73–81, 2004.
12. K. Mundiandy. Case study: Visualizing time related events for intrusion detection.
In Proceedings of the IEEE Symposium on Information Visualization 2001, pages
22–23, 2001.
13. Ruoming Pang, Vinod Yegneswaran, Paul Barford, Vern Paxson, and Larry Pe-
In Proceedings of the
terson. Characteristics of internet background radiation.
Internet Measurement Conference, 2004.
14. Bryan Parno and Tony Bartoletti.
Internet ballistics: Retrieving forensic data
from network scans. Poster Presentation, the 13th USENIX Security Symposium,
August 2004.
15. Leonid Portnoy, Eleazar Eskin, and Salvatore J. Stolfo. Intrusion detection with
unlabeled data using clustering. In Proceedings of ACM CSS Workshop on Data
Mining Applied to Security (DMSA-2001), 2001.
16. S. Staniford, V. Paxson, , and N. Weaver. How to own the internet in your spare
time. In Proceedings of the 2002 Usenix Security Symposium, 2002.
17. Soon Tee Teoh, Kwan-Liu Ma, S. Felix Wu, and Xiaoliang Zhao. Case study:
Interactive visualization for internet security. In Proc. IEEE Visualization, 2002.
18. F. W. Young and R. M. Hamer. Multidimensional Scaling: History, Theory and
Applications. Erlbaum, New York, 1987.
19. William Yurcik, James Barlow, Kiran Lakkaraju, and Mike Haberman. Two vi-
sual computer network security monitoring tools incorporating operator interface
requirements. In ACM CHI Workshop on Human-Computer Interaction and Se-
curity Systems (HCISEC), 2003.