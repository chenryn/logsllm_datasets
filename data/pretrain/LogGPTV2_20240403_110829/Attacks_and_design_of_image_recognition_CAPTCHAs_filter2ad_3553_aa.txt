title:Attacks and design of image recognition CAPTCHAs
author:Bin B. Zhu and
Jeff Yan and
Qiujie Li and
Chao Yang and
Jia Liu and
Ning Xu and
Meng Yi and
Kaiwei Cai
Attacks and Design of Image Recognition CAPTCHAs 
Bin B. Zhu*1, Jeff Yan2, Qiujie Li3, Chao Yang4, Jia Liu5, Ning Xu1, Meng Yi6, Kaiwei Cai7 
1 Microsoft Research Asia, Beijing, China 
2 Newcastle University, United Kingdom 
3 Nanjing University of Science and Technology, China 
4 University of Science and Technology of China, Hefei, China 
5 iCare Vision Tech.CO., LTD, Beijing R&D Center 
6 Computer and Information Science, Temple University, USA 
7 Beijing University, Beijing, China 
{binzhu, ningx}@microsoft.com, PI:EMAIL, PI:EMAIL, PI:EMAIL 
the  design  of 
ABSTRACT 
We  systematically  study 
image  recognition 
CAPTCHAs (IRCs) in this paper. We first review and examine all 
IRCs  schemes  known  to us  and evaluate  each  scheme  against  the 
practical  requirements  in  CAPTCHA  applications,  particularly  in 
large-scale real-life applications such as Gmail and Hotmail. Then 
we  present  a  security  analysis  of  the  representative  schemes  we 
have identified. For the schemes that remain unbroken, we present 
our  novel  attacks.  For  the  schemes  for  which  known  attacks  are 
available, we propose a theoretical explanation why those schemes 
have  failed.  Next,  we  provide  a  simple  but  novel  framework  for 
guiding the design of robust IRCs. Then we propose an innovative 
IRC  called  Cortcha  that  is  scalable  to  meet  the  requirements  of 
large-scale applications. Cortcha relies on recognizing an object by 
exploiting its surrounding context, a task that humans can perform 
well but computers cannot. An infinite number of types of objects 
can  be  used  to  generate  challenges,  which  can  effectively  disable 
the learning process in machine learning attacks. Cortcha does not 
require  the  images  in  its  image  database  to  be  labeled.  Image 
collection and CAPTCHA generation can be fully automated. Our 
usability  studies  indicate  that,  compared  with  Google’s  text 
CAPTCHA, Cortcha  yields a  slightly higher human accuracy rate 
but on average takes more time to solve a challenge.  
Categories and Subject Descriptors 
K.6.5 [Management  of  Computing  and  Information  Systems]: 
Security  and  Protection  –  authentication,  unauthorized  access; 
I.4.8 [Image  Processing  and  Computer  Vision]: Scene Analysis 
– object recognition.  
General Terms 
Security, Human Factors. 
Keywords 
CAPTCHA,  Human  Interactive  Proof,  HIP,  security,  robustness, 
Cortcha, image recognition CAPTCHA, IRC, object recognition. 
1.  INTRODUCTION 
CAPTCHA  (Completely  Automated  Public  Turing  test  to  tell 
Computers  and  Humans  Apart)  [1][2][3],  also  known  as  Human 
Interactive Proof (HIP), is an automated Turing test in which both 
generation  of  challenges  and  grading  of  responses  are  performed 
by  computer  programs.  CAPTCHAs  are  based  on  Artificial 
Intelligence  (AI)  problems  that  cannot  be  solved  by  current 
computer  programs  or  bots,  but are  easily  solvable  by  humans.  A 
client who provides a correct response to a challenge is presumed 
to  be  a  human;  otherwise  a  bot.  CAPTCHAs  have  been  widely 
used as a security measure to restrict access from bots. 1 
Text CAPTCHAs are almost exclusively used in real applications. 
In  a  text  CAPTCHA,  characters  are  deliberately  distorted  and 
connected to prevent recognition by bots. Most of the proposed or 
deployed text CAPTCHAs have  been broken [4][5][6][7][8][9]. It 
is  possible  to  enhance  the  security  of  an  existing  text  CAPTCHA 
by  systematically  adding  noise  and  distortion,  and  arranging 
characters  more  tightly.  These  measures,  however,  would  also 
make the characters harder for humans to recognize, resulting in a 
higher  error  rate  and  an  increased  level  of  frustration.  There  is  a 
limit  to  the  distortion  and  noise  that  humans  can  tolerate  in  a 
challenge  of  a  text  CAPTCHA.  Usability  is  always  an  important 
issue 
in  designing  a  CAPTCHA  [10].  With  advances  of 
segmentation 
(OCR) 
technologies,  the  capability  gap  between  humans  and  bots  in 
recognizing  distorted  and  connected  characters  becomes 
increasingly  smaller.  This 
text 
CAPTCHAs eventually ineffective. Finding alternative approaches 
in designing CAPTCHAs to replace text CAPTCHAs has become 
increasingly  important.  A  major  effort  has  been  directed  to 
developing  CAPTCHAs  based  on  image  or  object  recognition 
[11][12][13][15][16][17]. Images are rich in information, intuitive 
to  humans,  and  of  a  large  variation.  More  importantly,  there  are 
still  many  unsolved  AI  problems  in  image  perception  and 
interpretation. Images seem to be a better medium than characters 
for designing CAPTCHAs.  
and  Optical  Character  Recognition 
trend  would 
likely  render 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies  bear  this  notice  and  the  full  citation  on  the  first  page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
CCS’10, October 4-8, 2010, Chicago, Illinois, USA. 
Copyright 2010 ACM 978-1-4503-0244-9/10/10 …$10.00. 
187 
The  research  of  text  CAPTCHAs  has  roughly  proceeded  in  the 
following  way.  The  earliest  inspiration  was  a  clever  but  rough 
idea: although recognizing printed fonts was a solved problem, it is 
hard  for  OCR  to  recognize  distorted  fonts.  Therefore  early 
1*This  work  was  done  when  Qiujie  Li,  Chao  Yang,  Meng  Yi,  and 
Kaiwei  Cai  worked  as  interns  and  Jia  Liu  worked  as  staff  at 
Microsoft  Research  Asia.  The  contact  author  is:  Bin  B.  Zhu 
(PI:EMAIL or PI:EMAIL).  
schemes were designed to make them hard for OCR to recognize. 
Attacks  on  the  early  designs  were  studied,  and  the  principle  of 
segmentation  resistance  emerged:  computers  turn  out  to  perform 
better  than  humans  in  recognizing  individual  characters,  even 
under  severe  distortion  [18].  However,  segmentation,  which  is  to 
locate individual characters in the right order, is a computationally 
expensive  and  combinatorially  hard  problem.  Thus 
text 
CAPTCHAs should be designed to be segmentation-resistant [19]. 
The  attack  by  Yan  and  El  Ahmad  [9]  further  enhanced  our 
understanding  of  various  segmentation  resistance  mechanisms. 
Such an iterative process of designs and attacks has led to a better 
CAPTCHA  design.  In  the  meanwhile,  failure  modes  of  and  some 
design principles for CAPTCHAs have also started to emerge.  
We  believe  that  such  an  evolutionary  process  for  studying  text 
CAPTCHAs  is  applicable  to  the  domain  of  image  recognition 
CAPTCHAs  (IRCs).  In  this  paper,  we  systematically  study  the 
design of IRCs. Similar to text CAPTCHAs, the earliest inspiration 
for  the  design  of  IRCs  was  also  a  rough,  high-level  idea:  it’s 
difficult  for  current  computers  to  recognize  certain  content  of  an 
image. However, compared to the extensive security study of text 
CAPTCHAs, the current collective understanding of failure modes 
for IRCs is limited. There are few established insights or principles 
on  how  to  make  use  of  the  difficulty  of  image  recognition  in  a 
sound  way  to  design  secure  IRCs.  For  example,  it  is  well  known 
that a strong IRC should rely on image semantics. However, there 
is  no  deep  understanding  of  how  to  properly  make  use  of  image 
semantics.  It  is unclear  what  use  of  image  semantics  would  fail  a 
CAPTCHA or lead to a more secure design. We will show that by 
attacking  representative  IRC  schemes  and  by  providing  a 
theoretical  explanation  to  existing  attacks,  we  can  derive  useful 
lessons and fundamental principles for guiding the design of IRCs. 
Our  work  advances  the  current  collective  understanding  of  the 
design of such CAPTCHAs.  
This paper is organized as follows. We provide in Section 2 a brief 
yet  rather  comprehensive  review  of  existing  IRCs,  and  evaluate 
each  scheme  against  the  practical  requirements  in  CAPTCHA 
applications,  particularly  in  large-scale  real-life  applications  such 
as  Gmail  and  Hotmail.  In  Sections  3  and 4  we  present  attacks  on 
the  representative  schemes  identified  in  the  previous  section.  For 
the  representative  schemes  that  remain  unbroken,  we  present  our 
novel attacks in Section 3. For the schemes that known attacks are 
available, we describe the attacks briefly in Section 4. In Section 5, 
we  propose  a  theoretical  explanation  why  all  these  schemes  have 
failed.  We  also  define  a  framework  to  summarize  the  lessons  we 
have learned, as well as to provide guidelines for designing robust 
IRCs. Section 6 presents the design of a novel IRC called Cortcha, 
along  with  a  study  of  its  security,  usability,  and  potential  issues. 
Section 7 concludes the paper and discusses some future work. 
2.  EXISTING IRC SCHEMES: HOW GOOD 
ARE THEY? 
2.1  Desired Properties of CAPTCHAs 
Early  research  has  summarized  some  requirements  and  desirable 
properties  for  a  CAPTCHA  [1][3][12].  We,  however,  add  one 
additional  desirable property  that  comes  from  large-scale  real-life 
applications such as Gmail and Hotmail: 
•  Scalability.  Scalability  measures  the  range  (number)  of 
challenges  a  CAPTCHA  scheme  can  generate  without 
sacrificing  the  scheme’s  the  robustness  and  usability.  A 
scheme  is  scalable  if  it  can  scale  up its output  (the number  of 
generated challenges) with acceptable robustness and usability. 
A  scalable  scheme  can  meet  the  demand  of  large-scale 
applications  such  as  Gmail  and  Hotmail,  but  an  un-scalable 
one  cannot.  While  it  is  easy  for  text  CAPTCHAs  to  achieve 
scalability, many existing IRCs cannot generate a large number 
of challenges without sacrificing robustness or usability.  
should  be 
It is worth mentioning a fundamental requirement of CAPTCHAs 
under  the  context  of  IRCs:  both  challenge  generation  and  the 
response  grading 
automated  without  human 
involvement.  This  requirement  ensures  that  the  whole  system 
operates  in  an  automatic  manner.  This  requirement  is  feasible 
since  it  is  possible  that  a  task  and  its  reversal  have  asymmetric 
complexity. Such a difference in complexity is the base for modern 
public  key  cryptosystems.  This  requirement  is  easily  met  by  text 
CAPTCHAs, but has proven to be difficult for many IRCs for the 
following  simple  reason.  Typically,  an  IRC  builds  its  security  on 
the difficulty  for computers to understand the semantic content of 
images  or  visual  objects.  That  is,  computers  used  for  generating 
challenges  do  not  really  understand  the  images  or  visual  objects. 
As such, many IRCs require human involvement, in which images 
are manually labeled or selected. 
2.2  Metrics for Attack Effectiveness 
The  first  metric  in  evaluating  the  effectiveness  of  an  attack  is  the 
success rate of the attack. The tolerable success rate of an attack on 
a CAPTCHA depends on the cost of the attack. A rule of thumb is 
given  in  [20]:  bots  should  not  have  a  success  rate  higher  than 
0.01%.  This  is  a  very  challenging  number  in  designing  a 
CAPTCHA.  By  using  IP  monitoring  such  as  the  token  bucket 
scheme proposed in [15] together with a CAPTCHA, the tolerable 
success rate of attacks can be relaxed to 0.6% (assuming that TB-
Refill is 3 for the token bucket scheme). We adopt this threshold in 
this paper: bots should not have a success rate higher than 0.6%.  
The average time needed for an  attack to produce a response to a 
challenge,  referred  to  as  the  attack  response  time  in  this  paper,  is 
another metric to evaluate the effectiveness of the attack. An attack 
should  produce  a  response  within  the  time  frame  that  humans 
respond to a challenge. Otherwise it is easy to tell if a response is 
from  a  bot  or  human.  According  to [12],  a  CAPTCHA  should be 
designed such that humans can respond within 30s. As a result, an 
effective attack should also respond within 30s.  
The  following  criterion  is  adopted  in  this  paper:  if  on  average  an 
attack produces a response within 30s with a success rate of 0.6% 
or  higher,  the  attack  is  claimed  to  be  effective;  otherwise 
ineffective.  
2.3  Existing IRC Schemes 
Existing  IRCs  are  all  based  on  the  assumption  that  computers 
cannot perform well a certain type of task on images. As we shall 
see  later  in  this  paper,  many  of  these  assumptions  were  actually 
incorrect, and thus the IRC schemes can be successfully attacked. 
Early  IRCs  include  Bongo  [21]  in  which  two  groups  of  visual 
blocks (e.g., lines, circles, and squares) that humans can find some 
characteristics  to  separate  them  are  displayed.  A  user  is  asked  to 
classify a visual block into the right group. A random guess results 
in a success rate of 50%. Pix [21] is another early IRC that uses a 
large  database  of  labeled  images  which  are  pictures  of  concrete 
objects  (horses,  tables,  houses,  flowers,  etc.).  It  first  picks  an 
object label at random and finds six images of that object from the 
database,  randomly  distorts  them,  and  then  presents  to  a  user  to 
label  the  object.  Labeling  an  object  may  be  ambiguous.  Different 
188 
users  may  label  the  same  object  differently.  It  is  also  difficult  to 
evaluate an answer automatically. In addition, Pix depends on the 
language  that  users  use.  These  problems  are  addressed  in  Animal 
Pix [21] which differs from Pix in the following ways: 1) it uses 12 
animals instead of generic objects as the labeled objects; and 2) it 
asks a user to select from the set of predefined 12 animals instead 
of entering the object label. The cost is reduced security: a random 
guess of Animal Pix results in a success rate of 8.3%. 
Chew and Tygar [11] proposed three CAPTCHA algorithms based 
on a database of labeled images generated by collecting the first 20 
hits from Google’s image search on inputting each word from a list 
of easily-illustrated words. The first CAPTCHA algorithm (CT_L) 
presents  six  images  of  the  same  subject,  and  asks  a  user  to 
correctly describe the common term associated with the six images 