## 180115 (v.2.9.*)
### Feature updates
* The DevOps Kit PowerShell module will be renamed from 'AzSDK' to 'AzSK' in an upcoming release. As a first step towards that, aliases have been introduced for the commands. (Existing names will continue to work for the time being.)
* [Continuous Assurance:](https://azsk.azurewebsites.net/04-Continous-Assurance/Readme.html#setting-up-continuous-assurance---step-by-step)
	* CA can now be setup to send events to 2 different OMS workspaces. This provides a service group the ability to use a common workspace for viewing CA status across multiple service subscriptions (while individual dev ops teams can continue to use their own OMS workspaces for monitoring).
	* Added support for specifying a webhook in CA setup to facilitate downstream extensibility scenarios.
	* CA scan interval is now configurable. It can be set at an org or individual setup level. (The default is 24 hrs.)
	* The parallel-CA scanning feature has been enhanced to [(a) support appending to existing target subscriptions and (b) central logging with subscription id as parent folder,](https://azsk.azurewebsites.net/04-Continous-Assurance/Readme.html#1-central-scan-mode-ca-using-a-single-automation-account-default-behavior) [(c) Get-CA has been made 'central-scan' mode aware (will emit central scanning setup info)](https://azsk.azurewebsites.net/04-Continous-Assurance/Readme.html#1-central-scan-mode-ca-using-a-single-automation-account-default-behavior).
* OMS
	* If local OMS settings are not explicitly configured, local scans will attempt to leverage the OMS settings from the CA configuration for the subscription. (This can alleviate the need for individuals to explicitly configure local redirection.)
* ['Compliant' ARM Templates (Preview)](../ARMTemplates)
	* We are including ARM templates for various resources which can be used as reference when creating your own templates. These 'compliant' templates have been created after passing applicable AzSDK controls for corresponding resources. Looking forward to early adopters/feedback.  You can download  from http://aka.ms/azsk/armtemplates.
* [ARM Template Checker (Preview)](https://azsk.azurewebsites.net/03-Security-In-CICD/Readme.html#azsk-arm-template-checker)
	* We have created a VSTS extension that can run the DevOps Kit ARM Template Checker in the CICD pipeline. (The 'ARM Template Checker' provides an ability to scan ARM templates directly as opposed to the default AzSDK scanning which happens against deployed resources). This extension will provide us the ability to deny creation of non-compliant ARM resources out of the box.
### Other improvements/bug fixes
* SVTs: 
	* Subscription and Resource Scan checks will now also perform a lightweight "is CA correctly setup?" check at the start of the command.
	* Fixed a regression in the "-GenerateFixScript" feature.
* Controls: 
	* New controls added for App Service, Key Vault, Storage based on recent feature improvements from the product team.  
	* Fixed an issue with RDP-related control check in CloudService SVT 
        * A couple of controls have been removed from Storage: (a) GRS and (b) alerts for anonymous access. We are working with PG to get some clarifications for both
	* [New ARM policy has been introduced to support denying creation of classic resources.](https://azsk.azurewebsites.net/02-Secure-Development/ControlCoverage/Feature/ARMPolicyList.html)
* Get-AzSDKInfo command:
	* Improved UX for various queries (ControlInfo, BasicInfo, etc.)
	* Fixed a performance issue for the AttestationInfo option.
* Attestation:
	* Fixed a couple of issues where in absence of additional constraints/checks an attestation was applying to a broader scope than desired.
* CA:
	* Get-CA will now check that runbook version is up to date and, also, warn if there are resource locks on AzSDKRG.
* CICD: 
	* Implemented a workaround for a PG issue for our CICD extension that was resulting in SAS-token-based policy access to fail.