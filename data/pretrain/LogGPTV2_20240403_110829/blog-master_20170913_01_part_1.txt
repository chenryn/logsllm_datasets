## PostgreSQL、Greenplum 日常监控 和 维护任务 - 最佳实践     
### 作者                 
digoal                  
### 日期                
2017-09-13                    
### 标签                
PostgreSQL , Greenplum , Recommended Monitoring and Maintenance Tasks , 监控 , 维护    
----                
## 背景   
Greenplum的日常监控点、评判标准，日常维护任务。  
## 展示图层  
由于一台主机可能跑多个实例，建议分层展示。  
另外，即使是ON ECS虚拟机（一个虚拟机一个实例一对一的形态）的产品形态，实际上也建议分层展示，以示通用性。  
### 主机级图层  
1、全局  
2、以集群分组  
#### 展示图形  
1、饼图（正常、警告、严重错误、不可用，占比，数量）  
2、热力图（每台主机一个点，颜色描绘正常、警告、严重错误、不可用）  
3、列表（正常、警告、严重错误、不可用倒排，TOP 主机）  
### 实例级图层  
1、全局  
2、以集群分组  
#### 展示图形  
1、饼图（正常、警告、严重错误、不可用，占比，数量）  
2、热力图（每实例一个点，颜色描绘正常、警告、严重错误、不可用）  
3、列表（正常、警告、严重错误、不可用倒排，TOP 实例）  
### 明细图层  
全局、分组 -> 主机、实例 -> 主机、数据库实例明细监控指标  
全局、分组 -> 主机 -> 实例 -> 数据库实例明细监控指标  
## 数据库状态监控    
监控集群的健康状态。    
### 1、列出当前down的segment节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT * FROM gp_segment_configuration    
WHERE status <> 'u';    
```    
#### 判断方法：    
有返回，表示该segment已经down了。    
#### 事件级别：    
warning。    
如果有mirror节点，不影响使用。    
#### 重要程度：    
重要。    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
1、检查DOWN segment主机是否正常。    
2、检查DOWN segment的primary, mirror节点的pg_log日志。找出原因。    
3、如果没有异常，使用gprecoverseg把DOWN的节点拉起来。    
### 2、列出当前处于change tracking的segment节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT * FROM gp_segment_configuration    
WHERE mode = 'c';    
```    
#### 判断方法：    
如果有记录返回，表示有处于change tracking的segment。    
#### 事件级别：    
warning。    
#### 重要程度：    
重要    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
1、检查DOWN segment主机是否正常。    
2、检查DOWN segment的primary, mirror节点的pg_log日志。找出原因。    
3、如果没有异常，使用gprecoverseg把DOWN的节点拉起来。    
### 3、列出当前处于re-syncing状态的segment节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT * FROM gp_segment_configuration    
WHERE mode = 'r';    
```    
需要加入时间条件。判断是否长时间处于r状态。    
#### 判断方法：    
如果有记录返回，表示有处于re-syncing的segment。    
#### 事件级别：    
warning。    
#### 重要程度：    
重要    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
如果节点很长时间处于re-synched状态。检查SEGMENT的primary, mirror节点的pg_log，排查错误。    
### 4、列出当前角色未处于优先角色的节点的segment节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT * FROM gp_segment_configuration    
WHERE preferred_role <> role;    
```    
#### 判断方法：    
如果有记录返回，表示当前集群可能处于not balanced状态。    
#### 事件级别：    
warning。    
#### 重要程度：    
重要    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
如果当前集群处于not balanced状态，某个主机的primary节点可能更多，负担较重，影响性能。    
建议找到维护窗口，重启数据库集群。    
### 5、检测所有节点是否可达，确保QD(query dispatching)正常。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT gp_segment_id, count(*)    
FROM gp_dist_random('pg_class')    
GROUP BY 1;    
```    
#### 判断方法：    
正常情况下，每个节点返回一条记录，如果执行失败，表示有不可达的segment，执行SQL是QD阶段会失败。    
#### 事件级别：    
critical。    
#### 重要程度：    
严重    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
如果查询失败，表示某些segment节点的QD异常，这是一个罕见错误。需要检查异常节点(不能触及的segments)的硬件、网络是否正常。    
### 6、列出当前异常的master standby节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT summary_state    
FROM gp_master_mirroring;    
```    
#### 判断方法：    
返回Not Synchronized时，表示master standby异常。    
#### 事件级别：    
warning。    
#### 重要程度：    
重要。    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
检查master, standby的pg_log，是否有错误日志，针对性修复。    
如果没有unexpected错误，并且机器正常。那么使用gpinitstandby修复standby。    
GPDB 4.2以及以前的版本，需要重启GPDB集群。    
### 7、列出当前down的master standby节点。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT procpid, state FROM pg_stat_replication;    
```    
#### 判断方法：    
如果state不是'STREAMING'，或者没有记录返回，那么说明master standby节点异常。    
#### 事件级别：    
warning。    
#### 重要程度：    
重要    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
检查master, master standby节点的pg_log是否有异常日志。    
如果没有unexpected错误，并且机器正常。那么使用gpinitstandby修复standby。    
GPDB 4.2以及以前的版本，需要重启GPDB集群。    
### 8、检查master节点是否up并正常提供服务。    
#### 检查方法：    
连接到postgres数据库，执行：    
```    
SELECT count(*) FROM gp_segment_configuration;    
```    
#### 判断方法：    
QUERY正常返回，表示master节点正常。    
#### 事件级别：    
critical。    
#### 重要程度：    
严重    
#### 监控频率：    
5-10分钟。    
#### 处理方法：    
如果这个QUERY不能正常执行，说明active master节点可能DOWN了。    
重试若干次，如果都异常，关闭active master（一定要确保关闭无误），切换到standby master。    
### 列出master, segment, standby, mirror状态的其他方法   
使用命令查询master, segment, standby, mirror状态  
1、master和segment状态  
```  
gpstate  
或  
gpstate -s  
```  
2、segment mirror状态  
```  
gpstate -m   
```  
3、primary和mirror mapping状态  
```  
gpstate -c  
```  
4、master standby状态  
```  
gpstate -f  
```  
## 数据库告警日志监控    
### 1、列出FATAL and ERROR级别的错误日志。    
#### 检查方法：    
方法1，在安装了gpperfmon组件的情况下    
连接到gpperfmon数据库，执行：    
```    
SELECT * FROM log_alert_history    
WHERE logseverity in ('FATAL', 'ERROR')    
   AND logtime > (now() - interval '15 minutes');    
```    
方法2，查看所有节点(master, standby master, primary, mirror segments)的pg_log。过滤FATAL and ERROR级别的错误日志。    
方法3，查看这些系统视图    
```    
                        List of relations    
   Schema   |          Name          | Type |  Owner   | Storage     
------------+------------------------+------+----------+---------    
 gp_toolkit | gp_log_command_timings | view | digoal   | none  -- 统计    
 gp_toolkit | gp_log_database        | view | digoal   | none  -- 这个包含当前数据库日志    
 gp_toolkit | gp_log_master_concise  | view | digoal   | none  -- 统计    
 gp_toolkit | gp_log_system          | view | digoal   | none  -- 这个包含所有日志    
(4 rows)    
```    
实际上gp_log_system是一个command外部表，列出了所有segment, master的csvlog的内容。    
```    
View definition:    
 SELECT __gp_log_segment_ext.logtime, __gp_log_segment_ext.loguser, __gp_log_segment_ext.logdatabase, __gp_log_segment_ext.logpid, __gp_log_segment_ext.logthread, __gp_log_segment_ext.loghost, __gp_log_segment_ext.logport, __gp_log_segme    
nt_ext.logsessiontime, __gp_log_segment_ext.logtransaction, __gp_log_segment_ext.logsession, __gp_log_segment_ext.logcmdcount, __gp_log_segment_ext.logsegment, __gp_log_segment_ext.logslice, __gp_log_segment_ext.logdistxact, __gp_log_seg    
ment_ext.loglocalxact, __gp_log_segment_ext.logsubxact, __gp_log_segment_ext.logseverity, __gp_log_segment_ext.logstate, __gp_log_segment_ext.logmessage, __gp_log_segment_ext.logdetail, __gp_log_segment_ext.loghint, __gp_log_segment_ext.    
logquery, __gp_log_segment_ext.logquerypos, __gp_log_segment_ext.logcontext, __gp_log_segment_ext.logdebug, __gp_log_segment_ext.logcursorpos, __gp_log_segment_ext.logfunction, __gp_log_segment_ext.logfile, __gp_log_segment_ext.logline,     
__gp_log_segment_ext.logstack    
   FROM ONLY gp_toolkit.__gp_log_segment_ext    
UNION ALL     
 SELECT __gp_log_master_ext.logtime, __gp_log_master_ext.loguser, __gp_log_master_ext.logdatabase, __gp_log_master_ext.logpid, __gp_log_master_ext.logthread, __gp_log_master_ext.loghost, __gp_log_master_ext.logport, __gp_log_master_ext.l    
ogsessiontime, __gp_log_master_ext.logtransaction, __gp_log_master_ext.logsession, __gp_log_master_ext.logcmdcount, __gp_log_master_ext.logsegment, __gp_log_master_ext.logslice, __gp_log_master_ext.logdistxact, __gp_log_master_ext.logloc    
alxact, __gp_log_master_ext.logsubxact, __gp_log_master_ext.logseverity, __gp_log_master_ext.logstate, __gp_log_master_ext.logmessage, __gp_log_master_ext.logdetail, __gp_log_master_ext.loghint, __gp_log_master_ext.logquery, __gp_log_mas    
ter_ext.logquerypos, __gp_log_master_ext.logcontext, __gp_log_master_ext.logdebug, __gp_log_master_ext.logcursorpos, __gp_log_master_ext.logfunction, __gp_log_master_ext.logfile, __gp_log_master_ext.logline, __gp_log_master_ext.logstack    
   FROM ONLY gp_toolkit.__gp_log_master_ext    
  ORDER BY 1;    
```    
```    
postgres=# \d+ gp_toolkit.__gp_log_segment_ext    
                External table "gp_toolkit.__gp_log_segment_ext"    
     Column     |           Type           | Modifiers | Storage  | Description     
----------------+--------------------------+-----------+----------+-------------    
 logtime        | timestamp with time zone |           | plain    |     
 loguser        | text                     |           | extended |     
 logdatabase    | text                     |           | extended |     
 logpid         | text                     |           | extended |     
 logthread      | text                     |           | extended |     
 loghost        | text                     |           | extended |     
 logport        | text                     |           | extended |     
 logsessiontime | timestamp with time zone |           | plain    |     
 logtransaction | integer                  |           | plain    |     
 logsession     | text                     |           | extended |     
 logcmdcount    | text                     |           | extended |     
 logsegment     | text                     |           | extended |     
 logslice       | text                     |           | extended |     
 logdistxact    | text                     |           | extended |     
 loglocalxact   | text                     |           | extended |     
 logsubxact     | text                     |           | extended |     
 logseverity    | text                     |           | extended |     
 logstate       | text                     |           | extended |     
 logmessage     | text                     |           | extended |     
 logdetail      | text                     |           | extended |     
 loghint        | text                     |           | extended |     
 logquery       | text                     |           | extended |     
 logquerypos    | integer                  |           | plain    |     
 logcontext     | text                     |           | extended |     
 logdebug       | text                     |           | extended |     
 logcursorpos   | integer                  |           | plain    |     
 logfunction    | text                     |           | extended |     
 logfile        | text                     |           | extended |     
 logline        | integer                  |           | plain    |     
 logstack       | text                     |           | extended |     
Type: readable    
Encoding: UTF8    
Format type: csv    
Format options: delimiter ',' null '' escape '"' quote '"'    
Command: cat $GP_SEG_DATADIR/pg_log/*.csv    
Execute on: all segments    
```    
```    
postgres=# \d+ gp_toolkit.__gp_log_master_ext    
                External table "gp_toolkit.__gp_log_master_ext"    
     Column     |           Type           | Modifiers | Storage  | Description     
----------------+--------------------------+-----------+----------+-------------    
 logtime        | timestamp with time zone |           | plain    |     
 loguser        | text                     |           | extended |     
 logdatabase    | text                     |           | extended |     
 logpid         | text                     |           | extended |     
 logthread      | text                     |           | extended |     
 loghost        | text                     |           | extended |     
 logport        | text                     |           | extended |     
 logsessiontime | timestamp with time zone |           | plain    |     
 logtransaction | integer                  |           | plain    |     
 logsession     | text                     |           | extended |     
 logcmdcount    | text                     |           | extended |     
 logsegment     | text                     |           | extended |     
 logslice       | text                     |           | extended |     
 logdistxact    | text                     |           | extended |     
 loglocalxact   | text                     |           | extended |     
 logsubxact     | text                     |           | extended |     
 logseverity    | text                     |           | extended |     
 logstate       | text                     |           | extended |     
 logmessage     | text                     |           | extended |     
 logdetail      | text                     |           | extended |     
 loghint        | text                     |           | extended |     
 logquery       | text                     |           | extended |     
 logquerypos    | integer                  |           | plain    |     
 logcontext     | text                     |           | extended |     
 logdebug       | text                     |           | extended |     
 logcursorpos   | integer                  |           | plain    |     
 logfunction    | text                     |           | extended |     
 logfile        | text                     |           | extended |     
 logline        | integer                  |           | plain    |     
 logstack       | text                     |           | extended |     
Type: readable    
Encoding: UTF8    
Format type: csv    
Format options: delimiter ',' null '' escape '"' quote '"'    
Command: cat $GP_SEG_DATADIR/pg_log/*.csv    
Execute on: master segment    
```    
字段解释  
Field Name|	Data Type|	Description  
---|---|---  
event_time|	timestamp with time zone|	Time that the log entry was written to the log  
user_name|	varchar(100)|	The database user name  
database_name|	varchar(100)|	The database name  
process_id|	varchar(10)|	The system process ID (prefixed with "p")  
thread_id|	varchar(50)|	The thread count (prefixed with "th")  
remote_host|	varchar(100)|	On the master, the hostname/address of the client machine. On the segment, the hostname/address of the master.  
remote_port|	varchar(10)|	The segment or master port number  
session_start_time|	timestamp with time zone|	Time session connection was opened  
transaction_id|	int|	Top-level transaction ID on the master. This ID is the parent of any subtransactions.  
gp_session_id|	text|	Session identifier number (prefixed with "con")  
gp_command_count|	text|	The command number within a session (prefixed with "cmd")  
gp_segment|	text|	The segment content identifier (prefixed with "seg" for primaries or "mir" for mirrors). The master always has a content ID of -1.  
slice_id|	text|	The slice ID (portion of the query plan being executed)  
distr_tranx_id|	text|	Distributed transaction ID  
local_tranx_id|	text|	Local transaction ID  
sub_tranx_id|	text|	Subtransaction ID  
event_severity|	varchar(10)|	Values include: LOG, ERROR, FATAL, PANIC, DEBUG1, DEBUG2  
sql_state_code|	varchar(10)|	SQL state code associated with the log message  
event_message|	text|	Log or error message text  
event_detail|	text|	Detail message text associated with an error or warning message  
event_hint|	text|	Hint message text associated with an error or warning message  
internal_query|	text|	The internally-generated query text  
internal_query_pos|	int|	The cursor index into the internally-generated query text  
event_context|	text|	The context in which this message gets generated  
debug_query_string|	text|	User-supplied query string with full detail for debugging. This string can be modified for internal use.  
error_cursor_pos|	int|	The cursor index into the query string  
func_name|	text|	The function in which this message is generated  
file_name|	text|	The internal code file where the message originated  
file_line|	int|	The line of the code file where the message originated  
stack_trace|	text|	Stack trace text associated with this message  
#### 判断方法：    
1、排查业务逻辑错误、资源限制错误、数据库内核层面的严重错误。    
2、对于业务逻辑错误，建议在QUERY时过滤，避免日志过多。    
3、关注资源限制、内核错误。    
4、错误代码和解释参考  
http://gpdb.docs.pivotal.io/43160/admin_guide/managing/monitor.html  
SQL Standard Error Codes  
Table 4\. SQL Codes  
#### 事件级别：    
warning。    
#### 重要程度：    
重要    
#### 监控频率：    
15分钟。    
#### 处理方法：    
建立每种严重错误的处理方法。    
### 2、SNMP设置，事件自动通知设置。    
相关参数    
```    
gp_email_smtp_server    
gp_email_smtp_userid    
gp_email_smtp_password or gp_snmp_monitor_address    
gp_snmp_community    
gp_snmp_use_inform_or_trap    
```    
## 硬件和操作系统监控    