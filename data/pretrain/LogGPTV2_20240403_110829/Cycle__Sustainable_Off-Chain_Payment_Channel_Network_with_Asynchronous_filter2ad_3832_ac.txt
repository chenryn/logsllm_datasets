of a speciﬁc smart contract named cycle contract. We denote
the participants of the cycle contract as P ⊂ V and the
channels among them as C ⊂ E. We consider that the graph
(P,C) is a cycle graph and we call it a cycle. (A more general
case of multiple cycles will be discussed in § VI.) In the
cycle, each participant i ∈ P provides its expected offset
αi, the value of which equals the total value of its payments
for balancing, to denote the maximum global offset Δ it can
accept. Then, it signs and exchanges the message including
its expected offset. Although it is impossible to satisfy the
expectation of all participants at the same time, the global
offset Δ will be updated to a value that is valid and able
to maximize the overall beneﬁt in the cycle. Furthermore,
because of the existence of network latency or malicious
behaviors, the expected offsets received by different partici-
pants may be of different versions. We adopt an asynchronous
update policy for the global offset Δ in the cycle and resolve
the dispute “lazily” by off-chain communication or on-chain
arbitration using the cycle contract based on the signatures for
the expected offset of participants.
b) Detailed Design: The design is composed of two
kinds of smart contracts,
i.e., cycle contract and channel
contract, illustrated in Fig. 3 and an off-chain message com-
munication protocol illustrated in Algorithm 1. We denote
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:49 UTC from IEEE Xplore.  Restrictions apply. 
43
(cid:38)(cid:82)(cid:81)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87) (cid:38)(cid:92)(cid:70)(cid:79)(cid:72)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81) (cid:85)(cid:72)(cid:74)(cid:76)(cid:86)(cid:87)(cid:72)(cid:85)(cid:11)(cid:12)(cid:29)
(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:959)(cid:1556)(cid:882)(cid:15)(cid:3)(cid:2009)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:1870)(cid:1857)(cid:1859)(cid:1861)(cid:1871)(cid:1872)(cid:1857)(cid:1870)(cid:1857)(cid:1856)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:1846)(cid:1556)(cid:882)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:72)(cid:87)(cid:88)(cid:83)(cid:11)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3036) (cid:15)(cid:1846)(cid:12)(cid:29)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:1556) (cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3036) (cid:15)(cid:3)(cid:2009)(cid:1556) (cid:94)(cid:882)(cid:4669)(cid:3036)(cid:1488)(cid:3028)(cid:3031)(cid:3031)(cid:3045)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:1870)(cid:1857)(cid:1859)(cid:1861)(cid:1871)(cid:1872)(cid:1857)(cid:1870)(cid:1857)(cid:1856)(cid:1556) (cid:1858)(cid:1853)(cid:1864)(cid:1871)(cid:1857) (cid:3036)(cid:1488)(cid:3028)(cid:3031)(cid:3031)(cid:3045)(cid:15)(cid:3)(cid:1846)(cid:1556)(cid:1846)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:1870)(cid:1857)(cid:1859)(cid:1861)(cid:1871)(cid:1872)(cid:1857)(cid:1870)(cid:1857)(cid:1856)(cid:1865)(cid:1871)(cid:1859)(cid:484)(cid:1871)(cid:1857)(cid:1866)(cid:1856)(cid:1857)(cid:1870) (cid:3404)(cid:1872)(cid:1870)(cid:1873)(cid:1857)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:69)(cid:68)(cid:79)(cid:68)(cid:81)(cid:70)(cid:76)(cid:81)(cid:74)(cid:11)(cid:94)(cid:2009)(cid:3036)(cid:481)(cid:2026)(cid:96)(cid:3036)(cid:1488)(cid:3028)(cid:3031)(cid:3031)(cid:3045)(cid:12)(cid:29)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:87)(cid:75)(cid:72)(cid:85)(cid:72)(cid:3)(cid:72)(cid:91)(cid:76)(cid:86)(cid:87)(cid:86)(cid:3)(cid:1858)(cid:1853)(cid:1864)(cid:1871)(cid:1857) (cid:76)(cid:81)(cid:3)(cid:1870)(cid:1857)(cid:1859)(cid:1861)(cid:1871)(cid:1872)(cid:1857)(cid:1870)(cid:1857)(cid:1856)
(cid:73)(cid:82)(cid:85)(cid:3)(cid:72)(cid:68)(cid:70)(cid:75)(cid:3)(cid:1861)(cid:1488)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:29)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:86)(cid:76)(cid:74)(cid:81)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:3)(cid:2026) (cid:76)(cid:86)(cid:3)(cid:76)(cid:81)(cid:89)(cid:68)(cid:79)(cid:76)(cid:71)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:2009)(cid:4670)(cid:1861)(cid:4671)(cid:3408)(cid:2009)(cid:3036)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:2009)(cid:4670)(cid:1861)(cid:4671)(cid:1556)(cid:2009)(cid:3036)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:959)(cid:1556)(cid:143)(cid:139)(cid:144)(cid:4668)(cid:2009)(cid:4670)(cid:1861)(cid:4671)(cid:4669)(cid:3036)(cid:1488)(cid:3028)(cid:3031)(cid:3031)(cid:3045)
(cid:38)(cid:82)(cid:81)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87) (cid:38)(cid:75)(cid:68)(cid:81)(cid:81)(cid:72)(cid:79)
(cid:19)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:132)(cid:131)(cid:142)(cid:131)(cid:144)(cid:133)(cid:135)(cid:1556)(cid:1486)(cid:15)(cid:3)(cid:149)(cid:150)(cid:131)(cid:150)(cid:135)(cid:1556)(cid:882)
(cid:148)(cid:1556)(cid:882)
(cid:136)(cid:142)(cid:131)(cid:137)(cid:1556) (cid:655) (cid:6)(cid:3)(cid:83)(cid:82)(cid:86)(cid:86)(cid:76)(cid:69)(cid:79)(cid:72)(cid:3)(cid:89)(cid:68)(cid:79)(cid:88)(cid:72)(cid:3)(cid:4670)(cid:18)(cid:14)(cid:481)(cid:7)(cid:12)(cid:22)(cid:19)(cid:24)(cid:23)(cid:8)(cid:4671)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:72)(cid:87)(cid:88)(cid:83)(cid:11)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3036)(cid:481)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3037)(cid:481)(cid:2010)(cid:3036)(cid:481)(cid:2010)(cid:3037)(cid:481)(cid:820)(cid:1855)(cid:1877)(cid:1855)(cid:1864)(cid:1857)(cid:12)(cid:29)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:19)(cid:1556)(cid:4668)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3036)(cid:481)(cid:1853)(cid:1856)(cid:1856)(cid:1870)(cid:3037)(cid:4669)(cid:15)(cid:132)(cid:131)(cid:142)(cid:131)(cid:144)(cid:133)(cid:135)(cid:1556)(cid:4668)(cid:2010)(cid:3036)(cid:481)(cid:2010)(cid:3037)(cid:4669)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:1556)(cid:820)(cid:1855)(cid:1877)(cid:1855)(cid:1864)(cid:1857)(cid:15)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:1556)(cid:18)(cid:14)
(cid:1861) (cid:68)(cid:81)(cid:71)(cid:3)(cid:1862) (cid:76)(cid:81)(cid:89)(cid:82)(cid:78)(cid:72)(cid:3)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:17)(cid:85)(cid:72)(cid:74)(cid:76)(cid:86)(cid:87)(cid:72)(cid:85)(cid:11)(cid:12)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:72)(cid:87)(cid:86)(cid:87)(cid:68)(cid:87)(cid:72)(cid:11)(cid:1866)(cid:481)(cid:2012)(cid:481)(cid:2026)(cid:3036)(cid:481)(cid:2026)(cid:3037)(cid:12)(cid:29)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:1866)(cid:3409)(cid:1870)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:86)(cid:76)(cid:74)(cid:81)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:2026)(cid:3036)(cid:481)(cid:2026)(cid:3037) (cid:68)(cid:85)(cid:72)(cid:3)(cid:76)(cid:81)(cid:89)(cid:68)(cid:79)(cid:76)(cid:71)(cid:3)(cid:73)(cid:82)(cid:85)(cid:3)(cid:2012)(cid:481)(cid:1866)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:149)(cid:150)(cid:131)(cid:150)(cid:135)(cid:1556)(cid:2012)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:148)(cid:1556)(cid:1866)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:1556)(cid:18)(cid:14)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:86)(cid:72)(cid:87)(cid:87)(cid:79)(cid:72)(cid:11)(cid:12)(cid:29)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)(cid:87)(cid:85)(cid:76)(cid:74)(cid:74)(cid:72)(cid:85)(cid:11)(cid:12)(cid:29)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:3405)(cid:18)(cid:14)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:1556)(cid:7)(cid:12)(cid:22)(cid:19)(cid:24)(cid:23)(cid:8)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:3405)(cid:7)(cid:12)(cid:22)(cid:19)(cid:24)(cid:23)(cid:8)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:136)(cid:142)(cid:131)(cid:137)(cid:1556)(cid:18)(cid:14)(cid:15)(cid:3)(cid:148)(cid:1556)(cid:148)(cid:3397)(cid:883)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:70)(cid:88)(cid:85)(cid:85)(cid:72)(cid:81)(cid:87)(cid:3)(cid:87)(cid:76)(cid:80)(cid:72)(cid:3)(cid:3407)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:484)(cid:1846)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:3398)(cid:2010)(cid:3036)(cid:3409)(cid:1871)(cid:1872)(cid:1853)(cid:1872)(cid:1857)(cid:3398)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:484)(cid:959)(cid:3409)(cid:2010)(cid:3037)
(cid:86)(cid:72)(cid:87)(cid:3)(cid:132)(cid:131)(cid:142)(cid:131)(cid:144)(cid:133)(cid:135)(cid:1556)(cid:4668)(cid:882)(cid:481)(cid:882)(cid:4669)
(cid:86)(cid:72)(cid:81)(cid:71)(cid:3)(cid:2010)(cid:3036)(cid:3397)(cid:1871)(cid:1872)(cid:1853)(cid:1872)(cid:1857)(cid:3398)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:484)(cid:959) (cid:87)(cid:82)(cid:3)(cid:19)(cid:4670)(cid:882)(cid:4671)
(cid:86)(cid:72)(cid:81)(cid:71)(cid:3)(cid:2010)(cid:3037)(cid:3398)(cid:1871)(cid:1872)(cid:1853)(cid:1872)(cid:1857)(cid:3397)(cid:133)(cid:155)(cid:133)(cid:142)(cid:135)(cid:484)(cid:959) (cid:87)(cid:82)(cid:3)(cid:19)(cid:4670)(cid:883)(cid:4671)
(cid:71)(cid:76)(cid:86)(cid:70)(cid:68)(cid:85)(cid:71)(cid:3)(cid:76)(cid:73)(cid:3)(cid:87)(cid:75)(cid:72)(cid:3)(cid:71)(cid:76)(cid:86)(cid:83)(cid:88)(cid:87)(cid:72)(cid:3)(cid:71)(cid:82)(cid:72)(cid:86)(cid:3)(cid:81)(cid:82)(cid:87)(cid:3)(cid:72)(cid:91)(cid:83)(cid:76)(cid:85)(cid:72)
(cid:73)(cid:88)(cid:81)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81) (cid:90)(cid:76)(cid:87)(cid:75)(cid:71)(cid:85)(cid:68)(cid:90)(cid:11)(cid:12)(cid:29)
Fig. 3. Smart contracts for the balancing protocol
a channel contract as Chan, a cycle contract as Cycle and
the interaction with a smart contract as a function, e.g.
Chan.resolve, with the parameters omitted for readability.
The functions in Cycle and Chan are introduced as follows.
A Cycle can be created by Cycle.setup. Then, each partici-
pant can participate in a cycle via Cycle.register that validates
the signatures to verify the identities of participants in the
contract. (More detail about the creation of Cycle such as the
cycle planning and context of use will be described in § VI.)
Cycle.addr includes the addresses of all participants, Cycle.T
denotes the lifetime, and Cycle.Δ denotes the global offset of
the cycle. Furthermore, there is a list Cycle.α to on-chain
record the expected offset of participants. Cycle.balancing is
used to on-chain update the global offset Cycle.Δ. According
to the expected offsets of participants Cycle.α, the global
offset Cycle.Δ is updated by
Cycle.Δ = min{Cycle.α}.
(1)
Each channel in the cycle builds on a Chan which is an
improved version of the state channel in Sprites [34]. The
state channel is composed of an on-chain dispute resolution
in Chan and an off-chain state update between participants. To
participate in a cycle for balancing, a channel can be deployed
using Chan.setup and cycle denotes the address of Cycle.
After deployment, the participants of a channel can authorise
a new state, i.e., a balance deviation δ with a new round
number r, for the channel by collectively signing off-chain.
Furthermore, participants i and j invoke Cycle.register for
registration. Chan.trigger is used to initiate a dispute for the
state of the channel. Then, by providing the evidence about the
latest state of a channel, i.e., the collectively signed state of the
channel, via Chan.setstate, the contract can update the state
of the channel to the latest version during the dispute period.
Finally, Chan.settle is used to resolve the dispute when the
dispute period expires. Chan.withdraw allows the participants
to withdraw their balance after the life length of the cycle. The
most obvious difference between our modiﬁed version and the
original one is the state of our channel includes an additional
value Cycle.Δ for balancing. Because the state channel is not
the main focus of our paper, we omit some details in Sprites
[34] irrelevant to our topic, such as incremental deposits and
withdrawals, and refer readers to Sprites for them.
Depending on the above two smart contracts, each partici-
pant is provided with the payment functionality (Chan) as well
as balancing functionality (Cycle). Next, we describe the off-
chain protocol including the local variables and local behavior
of participants as follows.
Each participant stores some variables locally (Line 1). In
particular, participant i stores a local copy of the global offset
Δi, the state of its connected channels chi, and the list of
the expected offset of all participants αi. (Their superscript i
denotes that they are the local copy of i.) Note that the local
copies Δi and αi in different participants can be different
because of the transmission delay in the network or malicious
behavior of other participants, which will be discussed in
details in § IV. In the cycle, each participant i has two channels
connecting to two other participants which we deﬁne as i − 1
and i + 1, respectively. The initial balance for i in these two
channels is deﬁned as βi and β(cid:2)
i, respectively. The list chi
includes the state of these two channels.
After the registration of Cycle (Line 2), each participant
i keeps waiting for messages from the blockchain or other
participants. For the messages sent from other participants, i
validates their signatures based on the addresses recorded in
Cycle.addr and discards the invalid ones (Line 3). There are
three kinds of messages and we describe the corresponding
actions of participant i as follows.
1) The ﬁrst kind of messages is sent from another participant
and denotes the notiﬁcation of the update of its expected offset.
In particular, if the sender is j, the message is in the form of
(cid:5)αj, σ(cid:6) in which αj is the expected offset of participant j
and σ is the signature for the message (Line 6). In the cycle,
the update of a participant’s expected offset should follow
a conditional-revert rule, which means a participant cannot
withdraw its expected offset after signing and publishing,
unless it gets all the others’ approvals. The intuitive idea
behind the rule is to prevent malicious participants from
individually making the global offset revert, which causes the
balance of some channels to become illegal. (More detail will
be discussed in § IV.) To satisfy this rule, if the message
denotes a new expected offset larger than the stored one,
i.e., αj > αi
j, and σ includes j’s signature, participant i
will update its local copy of αi
j and Δi. Moreover, if σ
includes all participants’ signatures, participant i will update,
too. Otherwise, the message will be discarded (Line 7-8).
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:16:49 UTC from IEEE Xplore.  Restrictions apply. 
44
Algorithm 1: Off-chain message mechanism for each
participant i ∈ P in the cycle
Local variable:
1 Δi = 0, αi = {(αi
{(β(cid:2)
i−1,i, δi
Local behavior:
j, σ)}j∈P, chi =
i−1,i),(β(cid:2)
i−1, βi, ri
i,i+1)}
i, βi+1, ri
i,i+1,δi
2 Participate in the cycle and initialize local variables
3 Wait message and discard invalid message
4 while within the lifetime of the cycle do
5
case (cid:5)αj, σ(cid:6) from participant j do
6
7
switch message do
if (αj > αi
includes all participants’ signatures then
j and σ includes σj) orσ
j = αj and Δi = min{αi
case (cid:5)rij, δij(cid:6) from participant j do
ij and −βi ≤ δij − Δi ≤ βj then
if rij > ri
k}k∈P
set αi
exchange signature with participant j
set δi
update and broadcast (cid:5)αi, σ(cid:6)
ij = δij
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
else
exchange local state with participant j
if there is a dispute then
call Chan.trigger
case dispute event learned from blockchain do
call Cycle.balancing
call Chan.setstate
if dispute expires then
call Chan.settle
2) The second kind of messages is sent from a participant
j with channels connected to i, i.e., j ∈ {i − 1, i + 1}, and
denotes the request of state update of these channels (Line 9).
For example, if the sender is i−1, the message is in the form of
(cid:5)ri−1,i, δi−1,i(cid:6). If the round ri−1,i is larger than the historical
i−1,i recorded in i and the balance deviation δi−1,i
round ri
satisﬁes −β(cid:2)
i−1 ≤ δi−1,i − Δi ≤ βi (Line 10), participant i
accepts the state update request by exchanging the signature
of the new state with participant i − 1 (Line 11-12).
Otherwise if participant i does not agree with the i − 1’s
request (Line 14), it will ﬁrst exchange αi with participant
i − 1 for off-chain synchronization of the expected offset list
(Line 15). If there still exists a dispute between them, i or
i − 1 can initiate an on-chain dispute resolution process via
Chan.trigger (Line 16-17) and the dispute will be resolved
by the third kind of messages.
After the state update of the channel, if participant i decides
to add the payment into the payments for balancing, it can
update and sign its expected offset αi under the constraint of
(2)
Based on the conditional-revert rule, if αi decreases, i needs
to request the others’ signatures. For participant j, only when
αi ≤ min{δi−1,i, δi,i+1}.
(cid:886)(cid:882)(cid:882)
(cid:37)(cid:82)(cid:69)
(cid:885)(cid:882)(cid:882)
(cid:882)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)
(cid:272)(cid:455)(cid:272)(cid:367)(cid:286)
(cid:3398)(cid:883)(cid:882)(cid:882)
(cid:885)(cid:882)(cid:882)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)
(cid:3398)(cid:883)(cid:882)(cid:882)
(cid:42)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:3)
(cid:89)(cid:76)(cid:72)(cid:90)
(cid:36)(cid:79)(cid:76)(cid:70)(cid:72)(cid:182)(cid:86)(cid:3)
(cid:89)(cid:76)(cid:72)(cid:90)
(cid:37)(cid:82)(cid:69)(cid:182)(cid:86)(cid:3)
(cid:89)(cid:76)(cid:72)(cid:90)
(cid:38)(cid:68)(cid:85)(cid:82)(cid:79)(cid:182)(cid:86)(cid:3)
(cid:89)(cid:76)(cid:72)(cid:90)
(cid:2009)(cid:3002)
(cid:2009)(cid:3002)(cid:3002)
(cid:2009)(cid:3002)(cid:3003)
(cid:2009)(cid:3002)(cid:3004)