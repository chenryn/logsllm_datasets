When using custom formatters/locators, duplicate axis labels are produced if
the the formatters are set for both major and minor labels. I.e, this code:
    import matplotlib.pyplot as plt
    from matplotlib import ticker
    # Setup the figure
    fig = plt.figure()
    ax = fig.add_subplot(111) 
    # Setup a formatter (just returns the same label)
    fmt = ticker.StrMethodFormatter("{x:}")
    ax.xaxis.set_major_formatter(fmt)
    ax.xaxis.set_minor_formatter(fmt)
    # Setup a locator
    loc = ticker.LinearLocator(9)
    ax.xaxis.set_major_locator(loc)
    ax.xaxis.set_minor_locator(loc)
    # Rotate the labels, just to show that they are duplicated (one set of labels will get rotated, one will not)
    for lab in ax.xaxis.get_ticklabels():
         lab.set_rotation(45)
    plt.draw()
    plt.show()
Produces duplicate labels (note: The set_rotation is not needed to produce the
duplicates, but just shows that they actually are duplicated!)
If I remove the call to set_minor_locator/formatter, the code works as
expected:
    import matplotlib.pyplot as plt
    from matplotlib import ticker
    fig = plt.figure()
    ax = fig.add_subplot(111) 
    fmt = ticker.StrMethodFormatter("{x:}")
    ax.xaxis.set_major_formatter(fmt)
    loc = ticker.LinearLocator(9)
    ax.xaxis.set_major_locator(loc)
    for lab in ax.xaxis.get_ticklabels():
         lab.set_rotation(45)
    plt.draw()
    plt.show()
I've been looking through the code for a day, but can't find anywhere where
there is an obvious error and I don't think I am doing anything particularly
unusual in my code...
Any idea what might be causing this?
As far as I can tell, in order to produce this behaviour you need to set both
a formatter and a locator. I've only tested with the formatter/locator classes
given in the code above so far.