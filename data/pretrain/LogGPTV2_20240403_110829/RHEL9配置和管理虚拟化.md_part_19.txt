            2.  重新生成 GRUB 配置：
                ``` literallayout
                # grub2-mkconfig -o /boot/grub2/grub.cfg
                ```
            3.  重启主机。
            :::
        -   如果您的 AMD 主机使用单个引导条目：
            ::: orderedlist
            1.  使用 `iommu=pt`{.literal} 参数重新生成 GRUB 配置：
                ``` literallayout
                # grubby --args="iommu=pt" --update-kernel DEFAULT
                ```
            2.  重启主机。
            :::
        :::
    :::
:::
::: orderedlist
**步骤**
1.  [**可选：**]{.strong}确认您的网络设备可以使用的 VF
    的最大数量。要做到这一点，请使用以下命令，将 [*eth1*]{.emphasis}
    替换为您的 SR-IOV 兼容网络设备。
    ``` literallayout
    # cat /sys/class/net/eth1/device/sriov_totalvfs
    7
    ```
2.  使用以下命令来创建虚拟功能(VF)：
    ``` literallayout
    # echo VF-number > /sys/class/net/network-interface/device/sriov_numvfs
    ```
    在命令中，替换：
    ::: itemizedlist
    -   使用您要在其上创建 PF 的 VF 数替换 [*VF-number*]{.emphasis}。
    -   使用 VF 要创建的网络接口的名称替换
        [*network-interface*]{.emphasis}。
    :::
    以下示例从 eth1 网络接口创建 2 个 VF：
    ``` literallayout
    # echo 2 > /sys/class/net/eth1/device/sriov_numvfs
    ```
3.  确定已添加了 VF：
    ``` literallayout
    # lspci | grep Ethernet
    82:00.0 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)
    82:00.1 Ethernet controller: Intel Corporation 82599ES 10-Gigabit SFI/SFP+ Network Connection (rev 01)
    82:10.0 Ethernet controller: Intel Corporation 82599 Ethernet Controller Virtual Function (rev 01)
    82:10.2 Ethernet controller: Intel Corporation 82599 Ethernet Controller Virtual Function (rev 01)
    ```
4.  通过为创建 VF 的网络接口创建 udev 规则，使创建的 VF 持久。例如，对于
    [*eth1*]{.emphasis} 接口，创建
    `/etc/udev/rules.d/eth1.rules`{.literal} 文件，并添加以下行：
    ``` programlisting
    ACTION=="add", SUBSYSTEM=="net", ENV{ID_NET_DRIVER}=="ixgbe", ATTR{device/sriov_numvfs}="2"
    ```
    这样可确保在主机启动时，使用 `ixgbe`{.literal} 驱动程序的两个 VF
    将自动用于 `eth1`{.literal} 接口。如果不需要持久性 SR-IOV
    设备，请跳过这一步。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    目前，当试图在 Broadcom NetXtreme II BCM57810 适配器上保留 VF
    时，上述设置无法正常工作。另外，基于这些适配器将 VF 附加到 Windows
    虚拟机当前还不可靠。
    :::
5.  将新添加的 VF 接口设备热插到正在运行的虚拟机中。
    ``` literallayout
    # virsh attach-interface testguest1 hostdev 0000:82:10.0 --managed --live --config
    ```
:::
::: itemizedlist
**验证**
-   如果这个过程成功，客户端操作系统会检测到一个新的网卡。
:::
:::
::: section
::: titlepage
## []{#managing-virtual-devices_configuring-and-managing-virtualization.html#supported-devices-for-sr-iov-assignment-in-rhel_managing-sr-iov-devices}SR-IOV 分配支持的设备 {.title}
:::
并非所有设备都可用于 SR-IOV。在 RHEL 9 中，以下设备已被测试并验证为与
SR-IOV 兼容。
::: itemizedlist
**网络设备**
-   Intel 82599ES 10 Gigabit Ethernet Controller - 使用
    `ixgbe`{.literal} 驱动程序
-   Intel Ethernet Controller XL710 系列 - 使用 `i40e`{.literal}
    驱动程序
-   Mellanox ConnectX-5 以太网适配器卡 - 使用 `mlx5_core`{.literal}
    驱动程序
-   Intel 以太网网络适配器 XXV710 - 使用 `i40e`{.literal} 驱动程序
-   Intel 82576 Gigabit Ethernet Controller - 使用 `igb`{.literal}
    驱动程序
-   Broadcom NetXtreme II BCM57810 - 使用 `bnx2x`{.literal} 驱动程序
:::
:::
:::
::: section
::: titlepage
# []{#managing-virtual-devices_configuring-and-managing-virtualization.html#attaching-dasd-devices-to-virtual-machines-on-ibm-z_managing-virtual-devices}将 DASD 设备附加到 IBM Z 中的虚拟机 {.title}
:::
使用 `vfio-ccw`{.literal}
功能，您可以将直接访问存储设备(DASD)作为介质设备分配给 IBM Z
主机上的虚拟机(VM)。例如，虚拟机可以访问 z/OS 数据集，或向 z/OS
机器提供分配的 DASD。
::: itemizedlist
**先决条件**
-   您的主机系统使用 IBM Z 硬件构架并支持 FICON 协议。
-   目标虚拟机使用 Linux 客户机操作系统。
-   已安装 [*mdevctl*]{.emphasis} 软件包。
    ``` literallayout
    # dnf install mdevctl
    ```
-   已安装 [*driverctl*]{.emphasis} 软件包。
    ``` literallayout
    # dnf install driverctl
    ```
-   在主机中载入了必要的内核模块。要验证，请使用：
    ``` literallayout
    # lsmod | grep vfio
    ```
    输出应包含以下模块：
    ::: itemizedlist
    -   `vfio_ccw`{.literal}
    -   `vfio_mdev`{.literal}
    -   `vfio_iommu_type1`{.literal}
    :::
-   您有一个备用 DASD 设备供虚拟机独占使用，且您知道设备的标识符。
    这个过程使用 `0.0.002c`{.literal} 作为示例。当执行命令时，将
    `0.0.002c`{.literal} 替换为 DASD 设备的标识符。
:::
::: orderedlist
**步骤**
1.  获取 DASD 设备的子通道标识符。
    ``` literallayout
    # lscss -d 0.0.002c
    Device   Subchan.  DevType CU Type Use  PIM PAM POM  CHPIDs
    ----------------------------------------------------------------------
    0.0.002c 0.0.29a8  3390/0c 3990/e9 yes  f0  f0  ff   02111221 00000000
    ```
    在本例中，子通道标识符被检测到为
    `0.0.29a8`{.literal}。在以下命令中，将 `0.0.29a8`{.literal}
    替换为设备检测到的子频道标识符。
2.  如果上一步中的 `lscss`{.literal}
    命令仅显示标头输出且没有设备信息，请执行以下步骤：
    ::: orderedlist
    1.  从 `cio_ignore`{.literal} 列表中删除该设备。
        ``` literallayout
        # cio_ignore -r 0.0.002c
        ```
    2.  在客户机操作系统中，[编辑虚拟机的内核命令行](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-parameters-at-runtime_managing-monitoring-and-updating-the-kernel){.link}，将带有
        `!`{.literal} 标记的设备标识符添加到以 `cio_ignore=`{.literal}
        开头的行（如果它还没有存在）。
        ``` literallayout
        cio_ignore=all,!condev,!0.0.002c
        ```
    3.  在主机上重复第 1 步，以获取子通道标识符。
    :::
3.  将子通道绑定到 `vfio_ccw`{.literal} passthrough 驱动程序。
    ``` literallayout
    # driverctl -b css set-override 0.0.29a8 vfio_ccw
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    这会将 [*0.0.29a8*]{.emphasis} 子频道绑定到
    `vfio_ccw`{.literal}，这意味着 DASD
    将无法在主机上使用。如果您需要使用主机上的设备，您必须首先删除到
    \'vfio_ccw\' 的自动绑定，并将子通道重新绑定到默认驱动程序：
    [**\# driverctl -b css unset-override
    [*0.0.29a8*]{.emphasis}**]{.strong}
    :::
4.  生成 UUID。
    ``` literallayout
    # uuidgen
    30820a6f-b1a5-4503-91ca-0c10ba12345a
    ```
5.  使用生成的 UUID 创建 DASD 介质设备。
    ``` literallayout
    # mdevctl start --uuid 30820a6f-b1a5-4503-91ca-0c10ba12345a --parent 0.0.29a8 --type vfio_ccw-io
    ```
6.  使介质设备永久有效。
    ``` literallayout
    # mdevctl define --auto --uuid 30820a6f-b1a5-4503-91ca-0c10ba12345a
    ```
7.  如果虚拟机正在运行，请关闭虚拟机。
8.  将介质设备附加到虚拟机。为此，请使用 `virsh edit`{.literal}
    实用程序编辑虚拟机的 XML 配置，将以下部分添加到 XML 中，然后将
    `uuid`{.literal} 值替换为您在上一步中生成的 UUID。
    ``` programlisting
    ```
:::
::: orderedlist
**验证**
1.  获取 `libvirt`{.literal} 分配给介质 DASD
    设备的标识符。要做到这一点，显示虚拟机的 XML 配置并查找
    `vfio-ccw`{.literal} 设备。
    ``` literallayout
    # virsh dumpxml vm-name
    [...]
    [...]
    ```
    在本例中，该设备分配的标识符是 `0.0.0009`{.literal}。
2.  启动虚拟机并登录到其客户端操作系统。
3.  在客户端操作系统中，确认 DASD 设备已被列出。例如：
    ``` literallayout
    # lscss | grep 0.0.0009
    0.0.0009 0.0.0007  3390/0c 3990/e9      f0  f0  ff   12212231 00000000
    ```
4.  在客户端操作系统中，在线设置设备。例如：
    ``` literallayout
    # chccwdev -e 0.0009
    Setting device 0.0.0009 online
    Done
    ```
:::
::: itemizedlist
**其他资源**
-   [IBM documentation on
    `cio_ignore`{.literal}](https://www.ibm.com/docs/en/linux-on-systems?topic=parameters-cio-ignore){.link}
-   [在运行时配置内核参数](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/configuring-kernel-parameters-at-runtime_managing-monitoring-and-updating-the-kernel){.link}
:::
:::
:::
[]{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html}
::: chapter
::: titlepage
# []{#managing-storage-for-virtual-machines_configuring-and-managing-virtualization.html#managing-storage-for-virtual-machines_configuring-and-managing-virtualization}第 14 章 为虚拟机管理存储 {.title}
:::