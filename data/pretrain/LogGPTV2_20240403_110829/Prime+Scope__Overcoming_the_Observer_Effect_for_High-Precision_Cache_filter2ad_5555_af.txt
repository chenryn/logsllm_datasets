‚úì
‚úó
‚úì
7.2 Cache Attacks and Replacement Policies
Cache replacement policies were long perceived as obstacles, lead-
ing to techniques that minimize their influence (e.g., double pointer-
chasing [55] or black-box eviction strategies [24]). However, en-
abled by reverse-engineering advances [1, 2, 11, 59], some works
use replacement properties to the advantage of the attacker.
Same-Core. Xiong and Szefer [64] use the PLRU policy of the L1
cache to leak information between processes through LRU states.
Recently, R√∂ttger and Janc [48] use it to amplify the time difference
between presence and absence of a speculative memory access.
Cross-Core. Reload+Refresh [11] detects accesses to a shared
address by monitoring changes in the EVC. In this context, our
efficient Prime patterns may be useful to prepare the EVC. Wang
et al. [61] probe the L2 EVC to limit the impact of the aggressive
hardware prefetcher on low-end, in-order Intel CPUs. Their Prime
pattern consists of 2ùëä ordered accesses (all cache misses), making
it comparatively slow. Briongos et al. [10] detect the start of a victim
routine and exploit LLC replacement to evict prefetched lines at the
right time. As Prime+Probe lacks the required precision, they rely
on Prime+Abort for detection. Future work should investigate the
use of Prime+Scope to remove the dependency on Intel TSX.
To enable Rowhammer attacks without flushing, Gruss et al. [24]
find efficient eviction strategies for unknown replacement policies.
Aweke et al. [5] develop a pattern predicated on the Sandy Bridge
MRU policy, which De Ridder et al. [16] modernize and improve for
browser-based Rowhammer in the presence of DRAM mitigations.
8 LIMITATIONS AND COUNTERMEASURES
Requirements. Prime+Scope does not work on processors for
which the key properties (cf. Section 4) do not hold. For instance, it
fails when the shared structure ùê∂ùëÜ has a random replacement pol-
icy (as it eliminates predictability of the EVC), or if the lower-level
caches do not act as a filter for ùê∂ùëÜ (as it eliminates repeatability of
the measurement). We believe these two properties are the only
anchor points for the deployment of countermeasures to reduce
Prime+Scope to Prime+Probe. However, invalidating these prop-
erties may adversely affect multi-level cache performance.
Leakage Types. As demonstrated in Section 6, Prime+Scope is
able to extract information from fine-grained timing leaks. However,
if time differences are more coarse-grained (e.g., RSA square-and-
multiply [37, 67]), the increased precision of Prime+Scope does
not directly lead to a more efficient attack. Still, we note that the
windowless nature of Prime+Scope eliminates false-negative errors
due to overlap between measurement and event, which may help to
reduce the number of required observations to retrieve the secret.
High-Frequency Events. Recall that for Prime+Scope (and Prime+
Abort and Prime+Probe), even for windowless instances, the cache
state needs to be prepared after every detected event. If the event
rate is very high, i.e., when the temporal separation of accesses
to the same address is in the order of the Prime duration, the
preparation step becomes dominant for the time precision. We note
that, although Prime+Scope places more demands on cache state
preparation than its counterparts, the Prime patterns obtained with
PrimeTime are still fairly competitive, with most of them in the
range of 1000-1300 cycles (cf. Table 1).
Generic Countermeasures. Flush+Reload and Flush+Flush can
be thwarted by disallowing shared memory across security bound-
aries, but countermeasures to mitigate the cache contention channel
are far more invasive. However, in recent years, this defensive av-
enue has attracted attention in the research community. The main
lines of work are based on isolation, i.e., partitioning the cache
along isolated portions (e.g., [6, 14, 17, 19, 35]), or randomization,
i.e., obfuscating interference by modifying the set index mapping
(e.g., [36, 45, 46, 49, 54, 62, 63]). By strengthening cache contention
attacks, our work motivates further research in this direction.
9 CONCLUSION
This paper introduced Prime+Scope, a high-resolution primitive to
measure contention on shared cache resources. It can target last-
level caches and directories alike, and we found it to apply to all
tested Intel processors of the last decade. Roughly speaking, Prime+
Scope is a high-resolution successor to Prime+Probe, assuming the
same attacker capabilities that make the latter so widely applicable.
The fast and repeatable Scope measurement essentially optimizes
the resolution of cache contention attacks, delivering a cross-core
time precision that even flush-based techniques cannot provide.
We believe that Prime+Scope is a valuable addition to the mi-
croarchitectural attack toolbox. We quantitatively evaluated its
properties, and illustrated them with a high-bandwidth covert chan-
nel, a new fine-grained attack on AES T-tables, and a simple, effi-
cient, and portable routine to construct eviction sets.
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2918ACKNOWLEDGMENTS
We thank the anonymous CCS 2021 reviewers, as well as Frank
Piessens and M√°rton Bogn√°r, for their valuable feedback. This re-
search is partially funded by the European Research Council (ERC -
#695305) and the Flemish Government through the FWO project
TRAPS. It was also supported by the CyberSecurity Research Flan-
ders (#VR20192203). Additional funding was provided by a gener-
ous gift from Intel. Antoon Purnal is supported by a grant of the
Research Foundation - Flanders (FWO).
REFERENCES
[1] Andreas Abel and Jan Reineke. 2013. Measurement-based Modeling of the Cache
Replacement Policy. In IEEE Real-Time and Embedded Technology and Applications
Symposium (RTAS).
[2] Andreas Abel and Jan Reineke. 2020. nanoBench: a Low-overhead Tool for
Running Microbenchmarks on x86 Systems. In IEEE International Symposium on
Performance Analysis of Systems and Software (ISPASS).
[3] Thomas Allan, Billy Bob Brumley, Katrina Falkner, Joop Van de Pol, and Yuval
Yarom. 2016. Amplifying Side Channels Through Performance Degradation. In
Annual Conference on Computer Security Applications (ACSAC).
[4] Diego F Aranha, Felipe Rodrigues Novaes, Akira Takahashi, Mehdi Tibouchi, and
Yuval Yarom. 2020. Ladderleak: Breaking ECDSA With Less Than One Bit of
Nonce Leakage. In ACM SIGSAC Conference on Computer and Communications
Security (CCS).
[5] Zelalem Birhanu Aweke, Salessawi Ferede Yitbarek, Rui Qiao, Reetuparna Das,
Matthew Hicks, Yossi Oren, and Todd Austin. 2016. ANVIL: Software-based
Protection Against Next-generation Rowhammer Attacks. ASPLOS (2016).
[6] Raad Bahmani, Ferdinand Brasser, Ghada Dessouky, Patrick Jauernig, Matthias
Klimmek, Ahmad-Reza Sadeghi, and Emmanuel Stapf. 2021. {CURE}: A Security
Architecture with CUstomizable and Resilient Enclaves. In USENIX Security
Symposium.
[7] Mohammad Behnia, Prateek Sahu, Riccardo Paccagnella, Jiyong Yu, Zirui Zhao,
Xiang Zou, Thomas Unterluggauer, Josep Torrellas, Carlos Rozas, Adam Morrison,
Frank Mckeen, Fangfei Liu, Ron Gabor, Christopher W. Fletcher, Abhishek Basak,
and Alaa Alameldeen. 2021. Speculative Interference Attacks: Breaking Invisible
Speculation Schemes. ASPLOS (2021).
[8] Naomi Benger, Joop Van de Pol, Nigel P Smart, and Yuval Yarom. 2014. ‚ÄúOoh
Aah... Just a Little Bit‚Äù: A Small Amount of Side Channel can go a Long Way. In
Cryptographic Hardware and Embedded Systems (CHES).
[9] Daniel J Bernstein, Joachim Breitner, Daniel Genkin, Leon Groot Bruinderink,
Nadia Heninger, Tanja Lange, Christine van Vredendaal, and Yuval Yarom. 2017.
Sliding Right into Disaster: Left-to-right Sliding Windows Leak. In Cryptographic
Hardware and Embedded Systems (CHES).
[10] Samira Briongos, Ida Bruhns, Pedro Malag√≥n, Thomas Eisenbarth, and Jos√© M.
Moya. 2021. Aim, Wait, Shoot: How the CACHESNIPER Technique Improves
Unprivileged Cache Attacks. In IEEE European Symposium on Security and Privacy
(EuroS&P).
[11] Samira Briongos, Pedro Malagon, Jose M. Moya, and Thomas Eisenbarth. 2020.
RELOAD+REFRESH: Abusing Cache Replacement Policies to Perform Stealthy
Cache Attacks. In USENIX Security Symposium.
[12] Leon Groot Bruinderink, Andreas H√ºlsing, Tanja Lange, and Yuval Yarom. 2016.
Flush, Gauss, and Reload‚Äìa Cache Attack on the BLISS Lattice-based Signature
Scheme. In Cryptographic Hardware and Embedded Systems (CHES).
[13] Lucian Cojocar, Jeremie Kim, Minesh Patel, Lillian Tsai, Stefan Saroiu, Alec
Wolman, and Onur Mutlu. 2020. Are We Susceptible to Rowhammer? An End-
to-End Methodology for Cloud Providers. In IEEE Symposium on Security and
Privacy (S&P).
[14] Victor Costan, Ilia Lebedev, and Srinivas Devadas. 2016. Sanctum: Minimal Hard-
ware Extensions for Strong Software Isolation. In USENIX Security Symposium.
[15] Luca De Feo, Bertram Poettering, and Alessandro Sorniotti. 2021. On the (in)
security of ElGamal in OpenPGP. In ACM SIGSAC Conference on Computer and
Communications Security (CCS).
[16] Finn de Ridder, Pietro Frigo, Emanuele Vannacci, Herbert Bos, Cristiano Giuffrida,
and Kaveh Razavi. 2021. SMASH: Synchronized Many-sided Rowhammer Attacks
from JavaScript. In USENIX Security Symposium.
[17] Ghada Dessouky, Tommaso Frassetto, and Ahmad-Reza Sadeghi. 2020. HybCache:
Hybrid Side-Channel-Resilient Caches for Trusted Execution Environments. In
USENIX Security Symposium.
[18] Craig Disselkoen, David Kohlbrenner, Leo Porter, and Dean M. Tullsen. 2017.
Prime+Abort: A Timer-Free High-Precision L3 Cache Attack using Intel TSX. In
USENIX Security Symposium.
[19] Leonid Domnitser, Aamer Jaleel, Jason Loew, Nael Abu-Ghazaleh, and Dmitry
Ponomarev. 2012. Non-Monopolizable Caches: Low-Complexity Mitigation of
Cache Side Channel Attacks. ACM Transactions on Architecture and Code Opti-
mization (TACO) (2012).
[20] Daniel Genkin, Lev Pachmanov, Eran Tromer, and Yuval Yarom. 2018. Drive-by
Key-extraction Cache Attacks from Portable Code. In Applied Cryptography and
Network Security.
[21] Daniel Genkin, Luke Valenta, and Yuval Yarom. 2017. May the Fourth be With You:
A Microarchitectural Side Channel Attack on Several Real-world Applications
of Curve25519. In ACM SIGSAC Conference on Computer and Communications
Security (CCS).
[22] Enes G√∂ktas, Kaveh Razavi, Georgios Portokalidis, Herbert Bos, and Cristiano
Giuffrida. 2020. Speculative Probing: Hacking Blind in the Spectre Era. In ACM
SIGSAC Conference on Computer and Communications Security (CCS).
[23] Daniel Gruss, Julian Lettner, Felix Schuster, Olga Ohrimenko, Istvan Haller, and
Manuel Costa. 2017. Strong and Efficient Cache Side-channel Protection Using
Hardware Transactional Memory. In USENIX Security Symposium.
[24] Daniel Gruss, Cl√©mentine Maurice, and Stefan Mangard. 2016. Rowhammer.js: A
Remote Software-Induced Fault Attack in JavaScript. In Detection of Intrusions
and Malware, and Vulnerability Assessment (DIMVA).
[25] Daniel Gruss, Cl√©mentine Maurice, Klaus Wagner, and Stefan Mangard. 2016.
Flush+Flush: A Fast and Stealthy Cache Attack. In Detection of Intrusions and
Malware, and Vulnerability Assessment (DIMVA).
[26] Daniel Gruss, Raphael Spreitzer, and Stefan Mangard. 2015. Cache Template
Attacks: Automating Attacks on Inclusive Last-level Caches. In USENIX Security
Symposium.
[27] David Gullasch, Endre Bangerter, and Stephan Krenn. 2011. Cache Games‚Äì
Bringing Access-based Cache Attacks on AES to Practice. In IEEE Symposium on
Security and Privacy (S&P).
[28] Berk G√ºlmezoglu, Mehmet Sinan Inci, Gorka Irazoqui Apecechea, Thomas Eisen-
barth, and Berk Sunar. 2015. A Faster and More Realistic Flush+Reload Attack
on AES. In Constructive Side-Channel Analysis and Secure Design (COSADE).
[29] Ralf Hund, Carsten Willems, and Thorsten Holz. 2013. Practical Timing Side
Channel Attacks against Kernel Space ASLR. In IEEE Symposium on Security and
Privacy (S&P).
[30] Intel. 2019. Intel Transactional Synchronization Extensions (Intel TSX) Asyn-
chronous Abort. https://software.intel.com/security-software-guidance/deep-
dives/deep-dive-intel-transactional-synchronization-extensions-intel-tsx-
asynchronous-abort.
[31] Gorka Irazoqui, Thomas Eisenbarth, and Berk Sunar. 2015. S$A: A Shared Cache
Attack That Works Across Cores and Defies VM Sandboxing ‚Äì and Its Application
to AES. In IEEE Symposium on Security and Privacy (S&P).
[32] Gorka Irazoqui, Mehmet Sinan Inci, Thomas Eisenbarth, and Berk Sunar. 2014.
Wait a minute! A fast, Cross-VM attack on AES. In Research in Attacks, Intrusions,
and Defenses (RAID).
[33] Michael Kurth, Ben Gras, Dennis Andriesse, Cristiano Giuffrida, Herbert Bos,
and Kaveh Razavi. 2020. NetCAT: Practical Cache Attacks From the Network. In
IEEE Symposium on Security and Privacy (S&P).
[34] Moritz Lipp, Daniel Gruss, Raphael Spreitzer, Cl√©mentine Maurice, and Stefan
Mangard. 2016. ARMageddon: Cache Attacks on Mobile Devices. In USENIX
Security Symposium.
[35] Fangfei Liu, Qian Ge, Yuval Yarom, Frank Mckeen, Carlos Rozas, Gernot Heiser,
and Ruby B Lee. 2016. Catalyst: Defeating Last-level Cache Side Channel Attacks
in Cloud Computing. In IEEE International Symposium on High Performance
Computer Architecture (HPCA).
[36] Fangfei Liu and Ruby B. Lee. 2014. Random Fill Cache Architecture. In IEEE/ACM
International Symposium on Microarchitecture (MICRO).
[37] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee. 2015. Last-
Level Cache Side-Channel Attacks Are Practical. In IEEE Symposium on Security
and Privacy (S&P).
[38] Cl√©mentine Maurice, Christoph Neumann, Olivier Heen, and Aur√©lien Francillon.
2015. C5: Cross-Cores Cache Covert Channel. In Detection of Intrusions and
Malware, and Vulnerability Assessment (DIMVA).
[39] Cl√©mentine Maurice, Manuel Weber, Michael Schwarz, Lukas Giner, Daniel Gruss,
Carlo Alberto Boano, Stefan Mangard, and Kay R√∂mer. 2017. Hello from the
Other Side: SSH over Robust Cache Covert Channels in the Cloud. In Network
and Distributed System Security Symposium (NDSS).
[40] Ahmad Moghimi, Gorka Irazoqui, and Thomas Eisenbarth. 2017. CacheZoom:
How SGX Amplifies the Power of Cache Attacks. In Cryptographic Hardware and
Embedded Systems (CHES).
[41] Yossef Oren, Vasileios P. Kemerlis, Simha Sethumadhavan, and Angelos D.
Keromytis. 2015. The Spy in the Sandbox: Practical Cache Attacks in JavaScript
and Their Implications. In ACM SIGSAC Conference on Computer and Communi-
cations Security (CCS).
[42] Dag Arne Osvik, Adi Shamir, and Eran Tromer. 2006. Cache Attacks and Coun-
termeasures: The Case of AES. In Cryptographers‚Äô Track at the RSA Conference
on Topics in Cryptology (CT-RSA).
[43] Riccardo Paccagnella, Licheng Luo, and Christopher W. Fletcher. 2021. Lord of
the Ring(s): Side Channel Attacks on the CPU On-Chip Ring Interconnect Are
Practical. In USENIX Security Symposium.
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2919[44] Peter Pessl, Daniel Gruss, Cl√©mentine Maurice, Michael Schwarz, and Stefan
Mangard. 2016. DRAMA: Exploiting DRAM Addressing for Cross-cpu Attacks.
In USENIX Security Symposium.
[45] Moinuddin K. Qureshi. 2018. CEASER: Mitigating Conflict-based Cache Attacks
via Encrypted-address and Remapping. In IEEE/ACM International Symposium on
Microarchitecture (MICRO).
[46] Moinuddin K. Qureshi. 2019. New Attacks and Defense for Encrypted-address
Cache. In International Symposium on Computer Architecture (ISCA).
[47] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. 2009. Hey,
You, Get off of My Cloud: Exploring Information Leakage in Third-party Compute
Clouds. In ACM SIGSAC Conference on Computer and Communications Security
(CCS).
[48] Stephen R√∂ttger and Artur Janc. 2021. A Spectre proof-of-concept for a
https://github.com/google/security-research-pocs/tree/
Spectre-proof web.
master/spectre.js.
[49] Gururaj Saileshwar and Moinuddin Qureshi. 2021. MIRAGE: Mitigating Conflict-
Based Cache Attacks with a Practical Fully-Associative Design. In USENIX Secu-
rity Symposium.
[50] Michael Schwarz, Moritz Lipp, Daniel Moghimi, Jo Van Bulck, Julian Steck-
lina, Thomas Prescher, and Daniel Gruss. 2019. ZombieLoad: Cross-Privilege-
Boundary Data Sampling. In ACM SIGSAC Conference on Computer and Commu-
nications Security (CCS).
[51] Michael Schwarz, Samuel Weiser, Daniel Gruss, Cl√©mentine Maurice, and Stefan
Mangard. 2017. Malware Guard Extension: Using SGX to Conceal Cache Attacks.
In Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA).
[52] Anatoly Shusterman, Ayush Agarwal, Sioli O‚ÄôConnell, Daniel Genkin, Yossi Oren,
and Yuval Yarom. 2021. Prime+Probe 1, JavaScript 0: Overcoming Browser-based
Side-Channel Defenses. In USENIX Security Symposium.
[53] Anatoly Shusterman, Lachlan Kang, Yarden Haskal, Yosef Meltser, Prateek Mittal,
Yossi Oren, and Yuval Yarom. 2019. Robust Website Fingerprinting Through the
Cache Occupancy Channel. In USENIX Security Symposium.
[54] Qinhan Tan, Zhihua Zeng, Kai Bu, and Kui Ren. 2020. PhantomCache: Obfuscating
Cache Conflicts with Localized Randomization. In Network and Distributed System
Security Symposium (NDSS).
[55] Eran Tromer, Dag Arne Osvik, and Adi Shamir. 2010. Efficient Cache Attacks on
AES, and Countermeasures. Journal of Cryptology (2010).
[56] Jo Van Bulck, Nico Weichbrodt, R√ºdiger Kapitza, Frank Piessens, and Raoul
Strackx. 2017. Telling Your Secrets Without Page Faults: Stealthy Page Table-
based Attacks on Enclaved Execution. In USENIX Security Symposium.
[57] Stephan Van Schaik, Cristiano Giuffrida, Herbert Bos, and Kaveh Razavi. 2018.
Malicious management unit: Why stopping cache attacks in software is harder
than you think. In USENIX Security Symposium.
[58] Stephan Van Schaik, Alyssa Milburn, Sebastian √ñsterlund, Pietro Frigo, Giorgi
Maisuradze, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida. 2019. RIDL:
Rogue In-flight Data Load. In IEEE Symposium on Security and Privacy (S&P).
[59] Pepe Vila, Pierre Ganty, Marco Guarnieri, and Boris K√∂pf. 2020. CacheQuery:
Learning replacement policies from hardware caches. In ACM SIGPLAN Confer-
ence on Programming Language Design and Implementation.
[60] Pepe Vila, Boris K√∂pf, and Jos√© F. Morales. 2019. Theory and Practice of Finding
Eviction Sets. In IEEE Symposium on Security and Privacy (S&P).
[61] Daimeng Wang, Zhiyun Qian, Nael Abu-Ghazaleh, and Srikanth V Krishna-
murthy. 2019. Papp: Prefetcher-aware Prime and Probe Side-channel Attack. In
Design Automation Conference (DAC).
[62] Zhenghong Wang and Ruby B. Lee. 2007. New Cache Designs for Thwarting
Software Cache-based Side Channel Attacks. In International Symposium on
Computer Architecture (ISCA).
[63] Mario Werner, Thomas Unterluggauer, Lukas Giner, Michael Schwarz, Daniel
Gruss, and Stefan Mangard. 2019. SCATTERCACHE: Thwarting Cache Attacks
via Cache Set Randomization. In USENIX Security Symposium.
[64] Wenjie Xiong and Jakub Szefer. 2020. Leaking Information Through Cache LRU
States. In IEEE Symposium on High Performance Computer Architecture (HPCA).
[65] Mengjia Yan, Read Sprabery, Bhargava Gopireddy, Christopher W. Fletcher, Roy H.
Campbell, and Josep Torrellas. 2019. Attack Directories, Not Caches: Side Channel
Attacks in a Non-Inclusive World. In IEEE Symposium on Security and Privacy
(S&P).
[66] Yuval Yarom and Naomi Benger. 2014. Recovering OpenSSL ECDSA Nonces
Using the FLUSH+ RELOAD Cache Side-channel Attack. IACR Cryptol. ePrint
Arch. 2014/140 (2014).
[67] Yuval Yarom and Katrina Falkner. 2014. FLUSH+RELOAD: A High Resolution,
Low Noise, L3 Cache Side-channel Attack. In USENIX Security Symposium.
[68] Yinqian Zhang, Ari Juels, Michael K Reiter, and Thomas Ristenpart. 2012. Cross-
VM Side Channels and their use to Extract Private Keys. In ACM SIGSAC Confer-
ence on Computer and Communications Security (CCS).
[69] Yinqian Zhang, Ari Juels, Michael K Reiter, and Thomas Ristenpart. 2014. Cross-
tenant Side-channel Attacks in PaaS Clouds. In ACM SIGSAC Conference on
Computer and Communications Security (CCS).
Session 11A: Attestation and Firmware Security CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2920