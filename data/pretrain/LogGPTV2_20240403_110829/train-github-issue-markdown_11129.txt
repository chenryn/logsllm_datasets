The current code for `str::not_utf8` condition does this:
            cond.raise(fmt!("from_bytes: input is not UTF-8; first bad byte is %u",
                            first_bad_byte as uint))
It might be more reasonable for condition handlers to recover in this
situation if they had a reference to the original byte vector, rather than
just a string describing what was wrong.
(In one case, the byte vector being passed is a `~[u8]`, but in another it is
`&[u8]`; in the latter, case, attempting to do this would run into #5370,
unless we were willing to allocate a copy when raising the condition, which is
probably not a good idea.)
(Update: blake2-ppc makes a reasonable suggestion in his comment below, though
it involves a more substantial revision to the code. I've generalized the
title of this ticket accordingly.)