unit,  and  even  a  very  powerful  encryption  algorithm 
such  as  the  DES  cannot  prevent  the  leakage  of 
information  from  a  corrupt  host  machine  under  these 
circumstances.  For  example,  suppose  that  a  corrupt 
host wishes to communicate the bit pattern 01101 to a 
wiretapping accomplice. The host constructs a message 
XYYXY, where X and Y are arbitrary but distinct bit 
patterns of the same length and alignment as the units 
of  block  encryption,  and  sends  it  to  its  TNIU  for 
transmission.  The  TNIU  will  encrypt  the  message  to 
yield,  say,  PQQPQ  before  transmitting  it  over  the 
LAN, but the bit pattern 01101 remains visible in this 
encrypted  message  and  can  easily  be  extracted  by  a 
wiretapper. Notice that the threat here is not due to any 
184184
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:38:24 UTC from IEEE Xplore.  Restrictions apply. 
weakness in the encryption algorithm employed, but to 
the  way  in  which  it  is  used;  one  need  not  be  able  to 
decrypt  messages  to  extract  information  planted  by  a 
corrupt machine, 
is 
Figure 3: A securely partitioned system. 
Clandestine  communications  channels  based  on 
plaintext patterns that persist into the ciphertext can be 
thwarted  by  employing  a  more  elaborate  mode  of 
encryption  called  cipher  block  chaining,  or  CBC, 
which uses a feedback technique to mask such patterns 
by  causing  the  encrypted  value  of  each  block  to  be  a 
complex function of all previous blocks[8]. Of course, 
identical messages will yield identical ciphertexts, even 
when  CBC-mode 
used.  More 
importantly, messages that begin with the same prefix 
will yield ciphertexts that also share a common prefix. 
A  corrupt  host  can  therefore  signal  to  a  wiretapping 
accomplice by modulating the length of the prefix that 
successive messages have in common. This channel for 
clandestine  information  flow  must  be  closed,  and  this 
will  be  achieved  if  TNIUs  attach  a  random  block  of 
data,  different  in  each  case,  to  the  front  of  each 
message before encrypting it, 
encryption 
leaking 
information 
through  channels 
The  careful  use  of  CBC-mode  encryption  prevents 
information 
that 
modulate  message  contents,  but  significant  channels 
for 
leakage  still  remain.  These  are 
pattern-of-use  channels  whereby  a  corrupt  host 
modulates the visible parameters of messages in a way 
that can be decoded by a wiretapping accomplice. The 
properties  that  can  be  modulated  are  the  lengths  of 
individual  messages,  their  time  and  frequency  of 
transmission, and their destination. 
from 
All techniques for introducing noise inevitably 
reduce the bandwidth available for legitimate 
communications and may increase the latency of 
message delivery. 
(Presumably the source is fixed at the location of the 
corrupt  host.)  These  properties,  of  which  length  and 
destination  are  by  far  the  most  important,  can  be 
modulated 
communication 
channels  of  surprisingly  high  bandwidth.  Unless  link 
clandestine 
to  yield 
is 
to 
is  used 
reinforce 
the  end-to-end 
encryption 
encryption  described  here,  it  will  not  be  possible  to 
completely sever these channels. Since link encryption 
is  infeasible  with  most  LAN  technologies,  the  best 
approach 
these 
pattern-of-use  channels  to  a  tolerable  level,  either 
directly or through the introduction of noise, 
the  bandwidth  of 
to  reduce 
The length channel is the easiest to deal with. TNIUs 
process message units of a fairly large, fixed size – say 
1024  bytes.  Long  messages  must  be  broken  into  a 
number of separate message units; short ones, and the 
residue  of  long  ones,  must  be  padded  to  fill  a  whole 
unit. (If this technique causes great numbers of largely 
empty  message  units  to  be  generated,  some  of  the 
legitimate  bandwidth  of  the  LAN  will  be  wasted;  but 
this is not usually a scarce resource and some tuning of 
the  choice  of  the  unit  size  is  possible  in  any  case.) 
When  this  is  done,  a  wiretapper  cannot  observe  the 
exact  length  of  a  message  but  can  only  estimate  the 
number  of  message  units  that  it  occupies.  This 
information will be difficult to extract, and the corrupt 
host  will  also  have  to  modulate  a  second  parameter 
(e.g.,  destination)  so  that  the  wiretapper  can  identify 
the message units constituting each message. 
The  bandwidth  of  the  channel 
that  modulates 
message  destinations  can  only  be 
reduced  by 
introducing noise, thereby complicating traffic patterns 
so that the wiretapper finds it hard to detect and extract 
any deliberate modulation. The obvious way to do this 
is  for  each  TNIU  to  generate  a  steady  stream  of 
spurious  messages  to  all  other  TNIUs  in  its  own 
security  partition.  Spurious  messages  are  marked  as 
such (under encryption, of course) and are discarded by 
TNIUs that receive them. More refined strategies, such 
as  routing  messages  indirectly  through  a  number  of 
intermediate  TNIUs  before  delivering  them  to  their 
final destination, are clearly possible, but all techniques 
for  introducing  noise  inevitably  reduce  the  bandwidth 
available  for  legitimate  communications  and  may 
increase 
latency  of  message  delivery.  Each 
installation  must  choose  its  priorities  in  such  a 
trade-off. 
The  techniques  described  so  far  enforce  separation 
between 
the  outside  world  and  communications 
internal to the distributed secure system. They do not, 
however,  provide  separation  between  the  different 
internal communications channels of the system. Thus, 
the  reference  monitor  component  of  a  Secret-level 
TNIU  can  determine  that  its  host  is  attempting  to 
communicate  with  another  Secret-level  host  and  that 
this  communication  accords  with  the  security  policy 
and may therefore proceed; however, it cannot prevent 
the  LAN  messages  that  constitute  the  communication 
from being delivered, either through error or malice, to 
the  TNIU  of,  say,  an  Unclassified  host.  Furthermore, 
the 
185185
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:38:24 UTC from IEEE Xplore.  Restrictions apply. 
unless  additional  mechanisms  are  introduced,  the 
receiving  TNIU  will  not  necessarily  be  able  to  detect 
that the messages have been sent to it in error. 
Incorrect  delivery  can  occur  because  the  LAN 
hardware, by accident or intent, misinterprets message 
destination fields, or because those fields are modified 
by  an  active  wiretapper.  (Remember  that  these  fields 
must  be  in  the  clear  so  that  the  LAN  hardware  can 
interpret  them.)  TNIUs  may  attempt  to  overcome  this 
threat  by  embedding  the  true  source,  destination,  and 
security partition of each message unit inside the data 
portion  of  the  message  unit  itself,  where  it  will  be 
protected  by  encryption,  However,  this  technique  can 
be  defeated  by  an  active  wiretapper  who  splices  the 
identification  portion  of  a  genuinely  Unclassified 
message onto the body of a Secret one. 
It  might  appear 
that  CBC-mode  encryption 
automatically  protects  against  this  type  of  attack  and 
that because the encrypted value of each block within a 
message  unit  is  a  complex  function  of  all  previous 
blocks, messages formed by splicing parts of different 
messages  together  will  decrypt  unintelligibly,  In  fact, 
this  is  not  so.  Although  the  encrypted  value  of  each 
block  produced  by  CBC-mode  encryption  depends 
implicitly  on  all  prior  plaintext  blocks,  it  depends 
explicitly on only the immediately preceding ciphertext 
block[8]. Thus, damage  to the  contents or  sequencing 
of ciphertext blocks affects only the decryption of the 
following 
block 
the  damaged  or 
misplaced  block; 
in  other  words,  CBC-mode 
decryption is “self-healing.” 
immediately 
Two  methods  are  available  for  securely  separating 
the  communications  channels  belonging  to  different 
security  partitions.  The  first  uses  a  high-quality 
checksum  to  guarantee  the  integrity  of  each  message 
unit,  including  its  identification  fields.  TNIUs  must 
calculate  the  checksum  of  each  message  unit  before 
they encrypt it, and they must encrypt the message unit 
and its checksum as a single unit so that the checksum 
will  be  protected  by  encryption.  Whenever  a  TNIU 
receives  a  message  unit,  it  must  first  decrypt  it  and 
recompute  its  checksum.  Only  if  the  recomputed 
checksum matches the one sent with the message unit 
should  the  unit  be  accepted  by  the  TNIU  for  further 
processing. The integrity of all message units accepted 
is  thereby  guaranteed  because  they  cannot  be  forged, 
modified, or formed by splicing parts of different units 
together  during 
the  LAN, 
Consequently,  TNIUs  can  trust  the  value  of  the 
security partition identifier embedded in each message 
unit,  then  they  can  (and  must)  reject  those  bearing  a 
different identifier. 
transmission  over 
second  method 
the 
communications  belonging 
security 
partitions is to use a different encryption key for each 
for  distinguishing 
to  different 
The 
partition. (Until now, we have implicitly assumed that 
the  same  key  is  used  for  all  communications.)  Each 
TNIU  will  be  provided  with  only  the  single  key 
associated  with  its  own  security  partition  and  will 
therefore have no way of communicating with TNIUs 
belonging  to  different  partitions.  If  a  message  unit  is 
delivered  to  a  TNIU  belonging  to  a  different  security 
partition from its sender, it will be encrypted using one 
key  and  decrypted  using  another,  making 
it 
unintelligible  to  the  host  attached  to  the  receiving 
TNIU.  It  is  unwise,  however,  to  allow  the  untrusted 
host  machines 
to  see  even  such  unintelligible 
transmissions  from  another  security  partition,  so  we 
propose  to  combine  the  use  of  different  encryption 
keys with the checksum technique described earlier. A 
message  delivered  to  a  TNIU  in  a  different  security 
partition  from  its  sender,  and  therefore  encrypted  and 
decrypted  with  different  keys,  will  certainly  fail  to 
checksum correctly. 
The use of both checksums and different encryption 
keys is not strictly necessary, since either technique is 
sufficient  to  separate  the  communications  channels 
belonging  to  different  security  partitions.  The  two 
techniques  are  complementary,  however,  and  provide 
worthwhile  redundancy.  Checksums  guarantee  the 
integrity of message contents, a very desirable property 
in its own right, while  the use of different encryption 
keys provides failsafe separation. 
system  using  encryption  must  contain 
mechanisms  for  generating  and  distributing  keys 
securely.  But  unlike  connection-oriented 
(virtual 
circuit)  schemes  in  which  a  unique  key  must  be 
manufactured and distributed every time a new circuit 
is  opened,  our  system  imposes  no  requirement  for 
frequent or rapid key distribution. The key allocated to 
a TNIU is a function of the (fixed) security partition to 
which  its  host  belongs.  This,  combined  with  the 
is 
presumption 
geographically 
key 
distribution  perfectly  viable.  Because  of  its  evident 
simplicity  and  security,  this  is  the  mechanism  we 
employ.  If  the  fear  of  cryptanalysis  calls  for  more 
frequent  key  changes  than  is  convenient  for  manual 
distribution,  a  set  of  keys  can  be  installed  on  each 
occasion or  a single master key can be  installed from 
which  the  TNIU  can  manufacture  a  whole  set  of 
communications keys. In either case,  the TNIUs must 
contain  mechanisms  for  synchronizing  their  current 
encryption keys. 
compact,  makes  manual 
a  LAN-based 
system 
Although not strictly necessary, it is highly desirable 
to be able to detect and counter the activity of an active 
wiretapper  who  attempts  to  “spoof”  the  system  by 
replaying  recordings  of  genuine  LAN  messages. 
(Consider,  for  example,  a  banking  system  that  carries 
messages  such  as  “move  $100  from  account  A  to 
Any 
that 
186186
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:38:24 UTC from IEEE Xplore.  Restrictions apply. 
account  B.  “)  Spoofs  can  be  detected  if  sequence 
numbers or time stamps are embedded in each message 
unit. Of course, it  is perfectly feasible for hosts to do 
this  themselves,  but  it  seems  more  appropriate  for 
TNIUs to provide this function. The sequence number 
or time stamp of each message unit can constitute the 
unique material that should be attached to the front of 
each message prior to encryption to mask the similarity 