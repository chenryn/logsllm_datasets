User: I'm having a pretty unique problem. I'm using the python module urllib2 in order to get http responses from a local terminal. At first, urllib2 would only work with non-local addresses (i.e. google.com, etc.) and not local webservers. I eventually deduced that urllib2 was not respecting the no_proxy environment variable. If I manually erased the other proxy env variables in the code (i.e. set http_proxy to ''), then it seemed to fix it for my CentOS 6 box. 
However, I have a second machine running Fedora 12 that needs to run the same python script, and I cannot for the life of me get urllib2 to connect to the local terminal. If I set http_proxy to '' then I can't access anything at all - not google, not the local terminal. However, I have a third machine running Fedora 12 and the fix that I found for CentOS 6 works with that one. 
This leads me to my question. Is there an easy way to tell the difference between Fedora 12 Box#1 (which doesn't work) and Fedora 12 Box#2 which does? Maybe there's a list of linux config files that could conceivably affect the functionality of urllib2? I know /etc/environment can affect it with proxy-related environment variables and I know the routing tables could affect it. What else am I missing?
Note:
- Pinging the terminal with both boxes works. Urllib2 can only fetch http responses from the CentOS box and Fedora 12 Box#2, currently. 
Info:
I've tested this with
Python 2.6.2
Python 2.6.6
Python 2.7.5
on all three boxes. Same results each time.
Assistant: Permanent network settings are stored in various files in /etc/networking and /etc/network-scripts. You could use diff to compare what's in those files between the system. However, that's just the network stuff (static v.s. dynamic, routes, gateways, iptables firewalls, blah blah blah). If there's no differences there, you'll have to start expanding the scope of your search.