 658. Find K Closest Elements
661. Image Smoother
662. Maximum Width of Binary Tree
 668. Kth Smallest Number in Multiplication Table
 676. Implement Magic Dictionary 
682. Baseball Game
684. Redundant Connection
685. Redundant Connection II
693. Binary Number with Alternating Bits
695. Max Area of Island
697. Degree of an Array
699. Falling Squares
704. Binary Search
705. Design HashSet
706. Design HashMap
707. Design Linked List 
710. Random Pick with Blacklist
713. Subarray Product Less Than K
 714. Best Time to Buy and Sell Stock with Transaction Fee
715. Range Module
717. 1-bit and 2-bit Characters
 718. Maximum Length of Repeated Subarray
 719. Find K-th Smallest Pair Distance
720. Longest Word in Dictionary
721. Accounts Merge
725. Split Linked List in Parts
726. Number of Atoms
729. My Calendar 1
732. My Calendar IlI
733. Flood Fill
735. Asteroid Collision
739. Daily Temperatures
 744. Find Smallest Letter Greater Than Target
745. Prefix and Suffix Search
746. Min Cost Climbing Stairs
748. Shortest Completing Word
753. Cracking the Safe
756. Pyramid Transition Matrix
 762. Prime Number of Set Bits in Binary Representation
763. Partition Labels
 765. Couples Holding Hands 
766. Toeplitz Matrix
---
## Page 10
767. Reorganize String
771. Jewels and Stones
778. Swim in Rising Water
781. Rabbits in Forest
784. Letter Case Permutation
786. K-th Smallest Prime Fraction 
793. Preimage Size of Factorial Zeroes Function
802. Find Eventual Safe States
803. Bricks Falling When Hit
811. Subdomain Visit Count
812. Largest Triangle Area
815. Bus Routes
817. Linked List Components
819. Most Common Word
 826. Most Profit Assigning Work 
828. Unique Letter String
832. Flipping an Image
834. Sum of Distances in Tree
836. Rectangle Overlap
838. Push Dominoes
839. Similar String Groups
841. Keys and Rooms
 842. Split Array into Fibonacci Sequence
844. Backspace String Compare
845. Longest Mountain in Array
850. Rectangle Area Il
851. Loud and Rich
 852. Peak Index in a Mountain Array
853. Car Fleet
856. Score of Parentheses
862. Shortest Subarray with Sum at Least K
863. All Nodes Distance K in Binary Tree
864. Shortest Path to Get All Keys
867. Transpose Matrix
872. Leaf-Similar Trees
875. Koko Eating Bananas
876. Middle of the Linked List
878. Nth Magical Number
880. Decoded String at Index
881. Boats to Save People
884. Uncommon Words from Two Sentences
885. Spiral Matrix III
887. Super Egg Drop
888. Fair Candy Swap
891. Sum of Subsequence Widths
892. Surface Area of 3D Shapes
 895. Maximum Frequency Stack
896. Monotonic Array
897.Increasing Order Search Tree
---
## Page 11
898. Bitwise ORs of Subarrays
901. Online Stock Span
904. Fruit Into Baskets
907. Sum of Subarray Minimums
911. Online Election
914. X of a Kind in a Deck of Cards
918. Maximum Sum Circular Subarray
920. Number of Music Playlists
921. Minimum Add to Make Parentheses Valid
922. Sort Array By Parity ll
923. 3Sum With Multiplicity
924. Minimize Malware Spread
 925. Long Pressed Name
927. Three Equal Parts
928. Minimize Malware Spread II
930. Binary Subarrays With Sum
933. Number of Recent Calls
942. DI String Match
946. Validate Stack Sequences
947. Most Stones Removed with Same Row or Column
949. Largest Time for Given Digits
952. Largest Component Size by Common Factor
953. Verifying an Alien Dictionary
959. Regions Cut By Slashes
961. N-Repeated Element in Size 2N Array
968. Binary Tree Cameras
969. Pancake Sorting
970. Powerful Integers
973. K Closest Points to Origin
976. Largest Perimeter Triangle
 977. Squares of a Sorted Array
978. Longest Turbulent Subarray
979. Distribute Coins in Binary Tree
980. Unique Paths III
981. Time Based Key-Value Store
984. String Without AAA or BBB
985. Sum of Even Numbers After Queries
986. Interval List Intersections
 990. Satisfiability of Equality Equations
 992. Subarrays with K Different Integers
993. Cousins in Binary Tree
995. Minimum Number of K Consecutive Bit Flips
996. Number of Squareful Arrays
999. Available Captures for Rook
1002. Find Common Characters
1003. Check If Word Is Valid After Substitutions
1004. Max Consecutive Ones Il
1005. Maximize Sum Of Array After K Negations
1011. Capacity To Ship Packages Within D Days
---
## Page 12
1017. Convert to Base -2
1019. Next Greater Node In Linked List
1020. Number of Enclaves
1021. Remove Outermost Parentheses
1025. Divisor Game
1026. Maximum Difference Between Node and Ancestor
1028. Recover a Tree From Preorder Traversal
1030. Matrix Cells in Distance Order
1037. Valid Boomerang
1040. Moving Stones Until Consecutive Il
1047. Remove All Adjacent Duplicates In String
1049. Last Stone Weight Il
1051. Height Checker
1052. Grumpy Bookstore Owner
1054. Distant Barcodes
1073. Adding Two Negabinary Numbers
1074. Number of Submatrices That Sum to Target
1078. Occurrences After Bigram
1079. Letter Tile Possibilities
1089. Duplicate Zeros
1093. Statistics from a Large Sample
1105. Filling Bookcase Shelves
1108. Defanging an IP Address
1110. Delete Nodes And Return Forest
 1111. Maximum Nesting Depth of Two Valid Parentheses Strings
1122. Relative Sort Array
1123. Lowest Common Ancestor of Deepest Leaves
1128. Number of Equivalent Domino Pairs
1137. N-th Tribonacci Number
 1145. Binary Tree Coloring Game
1154. Day of the Year
1157. Online Majority Element In Subarray
1160. Find Words That Can Be Formed by Characters
1170. Compare Strings by Frequency of the Smallest Character
1171. Remove Zero Sum Consecutive Nodes from Linked List
1175. Prime Arrangements
1184. Distance Between Bus Stops
1185. Day of the Week
1189. Maximum Number of Ballons
1200. Minimum Absolute Difference
1201. Ugly Number IlI
1202. Smallest String With Swaps
1207. Unique Number of Occurrences
1208. Get Equal Substrings Within Budget
1217. Play with Chips
1221. Split a String in Balanced Strings
1232. Check If It Is a Straight Line
1234. Replace the Substring for Balanced String
1235. Maximum Profit in job Scheduling
---
## Page 13
1252. Cells with Odd Values in a Matrix
1254. Number of Closed Islands
1260. Shift 2D Grid
1266. Minimum Time Visiting All Points
1275. Find Winner on a Tic Tac Toe Game
1281. Subtract the Product and Sum of Digits of an Integer
1283. Find the Smallest Divisor Given a Threshold
1287. Element Appearing More Than 25% In Sorted Array
1290. Convert Binary Number in a Linked List to Integer
1295. Find Numbers with Even Number of Digits
1299. Replace Elements with Greatest Element on Right Side
1300. Sum of Mutated Array Closest to Target
1302. Deepest Leaves Sum
1304. Find N Unique Integers Sum up to Zero
1305. All Elements in Two Binary Search Trees
1306. Jump Game Ill
1313. Decompress Run-Length Encoded List
1317. Convert Integer to the Sum of Two No-Zero Integers
1380. Lucky Numbers in a Matrix
1385. Find the Distance Value Between Two Arrays
1389. Create Target Array in the Given Order
1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence
1464. Maximum Product of Two Elements in an Array
1470. Shuffle the Array
第一章序章
关于LeetCode
说到LeetCode，作为一个程序员来说，应该不陌生，近几年参加面试都会提到它。国内外的程序员用
它刷题主要是为了面试。据历史记载，这个网站2011年就成立了，马上就要到自己10周年的生日
了。每周举行周赛，双周赛，月赛，在有限时间内编码，确实非常能考验人的算法能力。一些大公司赞
助冠名的比赛获得前几名除了有奖品，还能直接拿到内推的机会。
什么是Cookbook
直译的话就是烹饪书，教你做各种食谱美食的书。经常看O'Reilly技术书的同学对这个名词会很熟悉。
一般动手操作，实践类的书都会有这个名字。
为什么会写这个开源书
---
## Page 14
笔者刷题刷了一年了，想和大家分享分享一些做题心得，解题方法。想和有相同爱好的人交个朋友，一
起交流学习。对于自己来说，写题解也是一种提高。把一道深奥的题目讲给一点都没有头绪的人，并能
己的知识漏洞，强迫自己去弥补。笔者在公司做过相关的分享，感受很深，双方受益都还不错。
另外，在大学期间，笔者做题的时候最讨厌写题解，感觉是浪费时间，用更多的时间去做更多的
题。现在不知道算不算是"出来混的，总是要还的”。
关于书的封面
常看O'Reilly动物书的同学一看这个封面就知道是向他们致敬。确实是这个目的。O'Reilly的封面动物
都是稀缺动物，并且画风都是黑白素描风。这些动物都有版权了，所以只能在网上找没有版权的黑白素
描风的图片。常见的能找到40张这种风格的图片。不过用的人太多了，笔者费劲的找了其他几张这种
图片，这张孔雀开屏是其中一张。孔雀开屏的意义是希望大家刷完LeetCode以后，提高了自身的算法
能力，在人生的舞台上开出自己的“屏”。全书配色也都是绿色，因为这是AC的颜色。
关于作者
笔者是一个刚刚入行一年半的gopher新人，还请各位大佬多多指点小弟我。大学参加了3年ACM-
ICPC，但是由于资质不高，没有掌到一块金牌。所以在算法方面，我对自己的评价算是新手吧。参加
ACM-ICPC最大的收获是训练了思维能力，这种能力也会运用到生活中。其次是认识了很多国内很聪明
的选手，看到了自己和他们的差距。最后，就是那200多页，有些自己都没有完全理解的，打印的密密
麻麻的算法模板。知识学会了，终身都是自己的，没有学会，那些知识都是身外之物。
际上每天有时候不止一题，最终完成了600+：
Basic profle
R Fofle
3405 submisions in the last yeer
haltost
★★★
一个温馨提示：笔者本以为每天做一题，会让这个submissions图全绿，但是我发现我错了。如
图也是按照这个时区计算的。也就是说，中国每天早上8点之前，是算前一天的！也是因为时区
的问题，导致我空白了这22个格子。比如有一道Hard题很难，当天工作也很多，晚上下班回家
想出来了就到第二天凌晨了。于是再做一题当做第二天的量。结果会发现这2题都算前一天的。
有时候笔者早上6点起床刷题，提交以后也都是前一天的。
（当然这些都是过去了，不重要了，全当是奋斗路上的一些小插曲）
2020年笔者肯定还会继续刷题，因为还没有达到自己的一些目标。可能会朝着1000题奋进，也有可能
刷到800题的时候回头开始二刷，三刷。（不达目的不罢休吧-）
关于书中的代码
---
## Page 15
代码都放在githubrepo中，按题号可以搜索到题目。
本书题目的代码都已经beats100%了。没有beats100%题解就没有放到本书中了。那些题目笔者会
继续优化到100%再放进来。
有可能读者会问，为何要追求beats100%。笔者认为优化到beats100%才算是把这题做出感觉了。
有好几道Hard题，笔者都用暴力解法AC了，然后只beats了5%。这题就如同没做一样。而且面试中
如果给了这样的答案，面试官也不会满意，“还有没有更优解？”。如果通过自己的思考能给出更优解，
面试官会更满意一些。
LeetCode统计代码运行时长会有波动的，相同的代码提交10次可能就会beats100%了。笔者开始没
有发现这个问题，很多题用正确的代码连续交了很多次，一年提交3400+次，导致我的正确率也变的奇
高
当然，如果还有其他更优美的解法，也能beats100%的，欢迎提交PR，笔者和大家一起学习。
目标读者
想通过LeetCode提高算法能力的编程爱好者。
编程语言
本书的算法全部用Go语言实现。
使用说明
·本电子书的左上角有搜索栏，可以迅速帮你找到你想看的章节和题号。
·本电子书每页都接入了Gitalk，每一页的最下方都有评论框可以评论，如果没有显示出来，请检查
自己的网络。
·关于题解，笔者建议这样使用：先自己读题，思考如何解题。如果15分钟还没有思路，那么先看
笔者的解题思路，但是不要看代码。有思路以后自己用代码实现一遍。如果完全不会写，那就看笔
者提供的代码，找出自己到底哪里不会写，找出问题记下来，这就是目己要弥补的知识漏润。如果
自己实现出来了，提交以后有错误，自己先debug。AC以后没有到100%也先自己思考如何优
化。如果每道题自己都能优化到100%了，那么一段时间以后进步会很大。所以总的来说，实在没
思路，看解题思路；实在优化不到100%，看看代码。
互动与勘误
如果书中文章有所遗漏，欢迎点击所在页面下边的edit按钮进行评论和互动，感谢您的支持与帮助。
最后
一起开始刷题吧～
---
## Page 16
LeetCode
fmt.Printf("Hello,Golang!")
本作品采用知识害名-非商业性使用-禁止演经（BY-NC-ND）4.0国际许可协议进行许可。
题解里面的所有题目版权均归LeetCode和力扣中国所有
第二章算法专题
---
## Page 17
本来天真的认为，把LeetCode所有题都完整刷一遍，就可以完整这本书了。经过事实证明，确实是天
真了。因为LeetCode每天都会增加新题，有时候工作忙了，刷题进度就完全追不上题目更新的速度
了。而且以我当前的刷题速度，一年才完成500+，一年LeetCode也会更新400+多题，要起码5-10
年才能把所有的题目刷完。时间太长了。所以先给自己定了一个小目标，500题就先把书写出来，总结
这个阶段的刷题心得，和大家一起交流。要想把LeetCode所有题目都刷完，看来这本书要迭代5-10
个版本了（一年迭代一版）。
那么这一章就把已经刷完了的专题都整理一遍。有相似套路的题目都放在一起，如果想快速面试的话，
其实相同的题目刷2，3道就可以了。相同类型的题目非常熟练的情况下，再多刷几道也是做无用功。
做到目前为止，笔者认为动态规划是最灵活的类型，这类题目没有一个模板可以给你套用，它也是算法
之优雅的地方。笔者认为称它为算法的艺术不为过。动态规划这类型，笔者也还没有刷完，只刷了一部
分，还在学习中。
那么就分享一下笔者目前刷过的题，和有相似点的题目吧。
Array
Title
Solution
Difficulty
Time
Space
收
藏
1. Two Sum
Go
Easy
O(n)
(u)o
 11. Container With Most Water
Go
Medium
(u)o
O(1)
15. 3Sum
Go
Medium
O(n^2)
(u)o
16. 3Sum Closest
Go
Medium
O(n^2)
O(1)
---
## Page 18
18. 4Sum
GQ
Medium
(Evu)o
O(n^2)
26. Remove Duplicates from Sorted
Array
Go
Easy
(u)o
O(1)
27. Remove Element
Go
Easy
(u)o
O(1)
O(n log
39. Combination Sum
G
Medium
n)