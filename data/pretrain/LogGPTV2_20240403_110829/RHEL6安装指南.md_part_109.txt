K20rusersd -> ../init.d/rusersd
K20rwhod -> ../init.d/rwhod
K24irda -> ../init.d/irda
K25squid -> ../init.d/squid
K28amd -> ../init.d/amd
K30spamassassin -> ../init.d/spamassassin
K34dhcrelay -> ../init.d/dhcrelay
K34yppasswdd -> ../init.d/yppasswdd
K35dhcpd -> ../init.d/dhcpd
K35smb -> ../init.d/smb
K35vncserver -> ../init.d/vncserver
K36lisa -> ../init.d/lisa
K45arpwatch -> ../init.d/arpwatch
K45named -> ../init.d/named
K46radvd -> ../init.d/radvd
K50netdump -> ../init.d/netdump
K50snmpd -> ../init.d/snmpd
K50snmptrapd -> ../init.d/snmptrapd
K50tux -> ../init.d/tux
K50vsftpd -> ../init.d/vsftpd
K54dovecot -> ../init.d/dovecot
K61ldap -> ../init.d/ldap
K65kadmin -> ../init.d/kadmin
K65kprop -> ../init.d/kprop
K65krb524 -> ../init.d/krb524
K65krb5kdc -> ../init.d/krb5kdc
K70aep1000 -> ../init.d/aep1000
K70bcm5820 -> ../init.d/bcm5820
K74ypserv -> ../init.d/ypserv
K74ypxfrd -> ../init.d/ypxfrd
K85mdmpd -> ../init.d/mdmpd
K89netplugd -> ../init.d/netplugd
K99microcode_ctl -> ../init.d/microcode_ctl
S04readahead_early -> ../init.d/readahead_early
S05kudzu -> ../init.d/kudzu
S06cpuspeed -> ../init.d/cpuspeed
S08ip6tables -> ../init.d/ip6tables
S08iptables -> ../init.d/iptables
S09isdn -> ../init.d/isdn
S10network -> ../init.d/network
S12syslog -> ../init.d/syslog
S13irqbalance -> ../init.d/irqbalance
S13portmap -> ../init.d/portmap
S15mdmonitor -> ../init.d/mdmonitor
S15zebra -> ../init.d/zebra
S16bgpd -> ../init.d/bgpd
S16ospf6d -> ../init.d/ospf6d
S16ospfd -> ../init.d/ospfd
S16ripd -> ../init.d/ripd
S16ripngd -> ../init.d/ripngd
S20random -> ../init.d/random
S24pcmcia -> ../init.d/pcmcia
S25netfs -> ../init.d/netfs
S26apmd -> ../init.d/apmd
S27ypbind -> ../init.d/ypbind
S28autofs -> ../init.d/autofs
S40smartd -> ../init.d/smartd
S44acpid -> ../init.d/acpid
S54hpoj -> ../init.d/hpoj
S55cups -> ../init.d/cups
S55sshd -> ../init.d/sshd
S56rawdevices -> ../init.d/rawdevices
S56xinetd -> ../init.d/xinetd
S58ntpd -> ../init.d/ntpd
S75postgresql -> ../init.d/postgresql
S80sendmail -> ../init.d/sendmail
S85gpm -> ../init.d/gpm
S87iiim -> ../init.d/iiim
S90canna -> ../init.d/canna
S90crond -> ../init.d/crond
S90xfs -> ../init.d/xfs
S95atd -> ../init.d/atd
S96readahead -> ../init.d/readahead
S97messagebus -> ../init.d/messagebus
S97rhnsd -> ../init.d/rhnsd
S99local -> ../rc.local
```
::: para
如这个列表所示，所有真正启动和停止服务的脚本都不在
`/etc/rc.d/rc5.d/`{.filename}
目录中。相反，`/etc/rc.d/rc5.d/`{.filename} 中的所有文件都是指向
`/etc/rc.d/init.d/`{.filename} 中的脚本的符号链接。在 `rc`{.filename}
里使用符号链接以便在不影响其参考的脚本的情况下，通过重新创建、修改和删除这些符号链接重新配置运行级别。
:::
::: para
每个符号链接的名字都以 `K`{.computeroutput} 或者 `S`{.computeroutput}
开头。以 `K`{.computeroutput}
开头的链接是在这个运行级别需要杀死的程序，而以 `S`{.computeroutput}
开头的链接是需要启动的程序。
:::
::: para
首先，`init`{.command} 命令通过
`/etc/rc.d/init.d/ stop`{.command} 命令来停止目录中的所有
`K`{.computeroutput} 符号链接，其中 *\*
是需要杀死的程序名。然后，它他通过
`/etc/rc.d/init.d/ start`{.command} 启动所有
`S`{.computeroutput} 符号链接。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
在系统完成引导后，也可以 root
用户登录，并执行这些同样的脚本启动和停止服务。例如，`/etc/rc.d/init.d/httpd stop`{.command}
可用来停止 Apache HTTP 服务器。
:::
:::
:::
::: para
为每个符号链接编号来指定启动顺序。可以更改这个数字可改变服务启动或停止的顺序。数字越小，就越早启动。有着相同数字的符号链接则按字母顺序启动。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
`init`{.command} 程序最后执行的是 `/etc/rc.d/rc.local`{.filename}
文件。这个文件对于自定义系统很有用。有关使用 `rc.local`{.filename}
文件的详情请参考 [第 F.3 节
"在引导时运行附加程序"](#ch-boot-init-shutdown.html#s1-boot-init-shutdown-run-boot){.xref}。
:::
:::
:::
::: para
After the `init`{.command} command has progressed through the
appropriate `rc`{.filename} directory for the runlevel,
[**Upstart**]{.application} forks an `/sbin/mingetty`{.command} process
for each virtual console (login prompt) allocated to the runlevel by the
job definition in the `/etc/event.d`{.filename} directory. Runlevels 2
through 5 have all six virtual consoles, while runlevel 1 (single user
mode) has one, and runlevels 0 and 6 have none. The
`/sbin/mingetty`{.command} process opens communication pathways to *tty*
devices
[⁠]{#ch-boot-init-shutdown.html#idm139817185524592}[^\[18\]^](#ch-boot-init-shutdown.html#ftn.idm139817185524592){.footnote
xmlns:d="http://docbook.org/ns/docbook"}, sets their modes, prints the
login prompt, accepts the user\'s username and password, and initiates
the login process.
:::
::: para
In runlevel 5, [**Upstart**]{.application} runs a script called
`/etc/X11/prefdm`{.filename}. The `prefdm`{.filename} script executes
the preferred X display manager
[⁠]{#ch-boot-init-shutdown.html#idm139817195578928}[^\[19\]^](#ch-boot-init-shutdown.html#ftn.idm139817195578928){.footnote
xmlns:d="http://docbook.org/ns/docbook"} --- `gdm`{.command},
`kdm`{.command}, or `xdm`{.command}, depending on the contents of the
`/etc/sysconfig/desktop`{.filename} file.
:::
::: para
完成后，系统将在运行级别 5 中运行并显示登录屏幕。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-boot-init-shutdown.html#s2-boot-init-shutdown-jobs}F.2.5. 任务定义 {.title}
:::
::: para
之前，[sysvinit]{.package} 软件包为默认配置提供 [**init**]{.application}
守护进程。当系统启动时，这个 [**init**]{.application} 守护进程运行
`/etc/inittab`{.filename}
脚本启动为每个运行级别定义的系统进程。默认配置现在使用事件驱动的由
[Upstart]{.package} 软件包提供的 [**init**]{.application}
守护进程。每当有特定的*事件*发生时，[**init**]{.application}
守护进程都会执行 `/etc/event.d`{.filename}
目录中保存的*作业*。[**init**]{.application}
守护进程也将系统的启动作为这样的一个事件。
:::
::: para
每个作业通常都会指定一个程序以及激发 [**init**]{.application}
运行或者停止该程序的事件。有些作业是由*任务*组成，这些任务执行动作，然后直到另一个事件激发该作业时终止动作。其他作业由*服务*组成，[**init**]{.application}
可保持其运行直到另一个事件（或者用户）停止它。
:::
::: para
例如：`/etc/events.d/tty2`{.filename} 作业是一个在
[**tty2**]{.application}
中从系统启动直到关闭为止，或者另一个事件（比如运行级别的改变）停止该作业时，维护虚拟终端的服务。该作业由服务组成，因此如果在此期间它意外停止，[**init**]{.application}
将重启虚拟终端：
:::
``` screen
# tty2 - getty
#
# This service maintains a getty on tty2 from the point the system is
# started until it is shut down again.
start on stopped rc2
start on stopped rc3
start on stopped rc4
start on started prefdm
stop on runlevel 0
stop on runlevel 1
stop on runlevel 6
respawn
exec /sbin/mingetty tty2
```
:::
:::
::: section
::: titlepage
# [⁠]{#ch-boot-init-shutdown.html#s1-boot-init-shutdown-run-boot}F.3. 在引导时运行附加程序 {.title}
:::
[]{#ch-boot-init-shutdown.html#idm139817110095392
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817111776464
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817206474560
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817209613712
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817198713856 .indexterm}
::: para
`/etc/rc.d/rc.local`{.filename} 脚本是在引导时或者更改运行级别时由
`init`{.command}
命令执行。可以在这个脚本的最后添加命令来执行某些必需的工作，如启动特殊的服务或初始化设备，而不需要在
`/etc/rc.d/init.d/`{.filename}
目录中编写复杂的初始化脚本并创建符号链接。
:::
::: para
如果必须在引导时引导时设置串口，则需要使用 `/etc/rc.serial`{.filename}
脚本。这个脚本执行 `setserial`{.command} 命令配置系统串口。详情请参考
`setserial`{.command} man page。
:::
:::
::: section
::: titlepage
# [⁠]{#ch-boot-init-shutdown.html#s1-boot-init-shutdown-sysv}F.4. SysV Init 运行级别 {.title}
:::
[]{#ch-boot-init-shutdown.html#idm139817191119840
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817184567760
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817191713024
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817116582176 .indexterm}
::: para
SysV init 运行级别系统提供一个标准进程来控制在初始化运行级别时
`init`{.command} 启动或者停止哪个程序。选择 SysV init
的原因是易于使用且比传统的 BSD 风格的 init 程序更加灵活。
:::
::: para
SysV init 的配置文件位于 `/etc/rc.d/`{.filename} 目录。在这个目录中有
`rc`{.filename}、`rc.local`{.filename}、`rc.sysinit`{.filename} 和可选的
`rc.serial`{.filename} 脚本，以及下面的目录：
:::
``` screen
init.d/ rc0.d/ rc1.d/ rc2.d/ rc3.d/ rc4.d/ rc5.d/ rc6.d/
```
::: para
`init.d/`{.filename} 目录包含控制服务时 `/sbin/init`{.command}
命令使用的脚本。每个以编号的目录代表 Red Hat Enterprise Linux
中六个默认配置的运行级别。
:::
::: section
::: titlepage
## [⁠]{#ch-boot-init-shutdown.html#s2-init-boot-shutdown-rl}F.4.1. 运行级别 {.title}
:::
[]{#ch-boot-init-shutdown.html#idm139817171356560
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817195702944 .indexterm}
::: para
SysV init 运行级别的目的是在不同的系统中使用不同的。例如： X Window
系统使用一定的系统资源，没有它的话，服务器的执行效率会更高。或者，有时候系统管理员需要在一个更低的运行级别下来执行某些诊断任务，如在运行级别
1 中修复磁盘。
:::
::: para
给定运行级别的特征决定了 `init`{.command}
停止启动哪些服务。例如，运行级别
1（单用户模式）停止所有的网络服务，而运行级别 3
则会启动这些服务。通过在某个运行级别下设置启动和停止的服务，`init`{.command}
可以在不需要用户手工停止和启动服务的情况下迅速更改机器模式。
:::
::: para
下面的运行级别是 Red Hat Enterprise Linux 中默认定义的：
:::
::: blockquote
> ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
> -   ::: para
>     `0`{.command} --- 停止
>     :::
>
> -   ::: para
>     `1`{.command} --- 单用户文本模式
>     :::
>
> -   ::: para
>     `2`{.command} --- 未使用（用户可自定）
>     :::
>
> -   ::: para
>     `3`{.command} --- 完全的多用户文本模式
>     :::
>
> -   ::: para
>     `4`{.command} --- 未使用（用户可自定）
>     :::
>
> -   ::: para
>     `5`{.command} --- 完全的多用户图形模式（基于 X Window 的登录页面）
>     :::
>
> -   ::: para
>     `6`{.command} --- 重启
>     :::
> :::
:::
::: para
通常，用户在运行级别 3 和 5 中操作 --- 这两个都是多用户模式。运行级别 2
和 4 没有被使用，用户有时可自定义它们来满足某些特定需要。
:::
::: para
系统的默认运行级别在 `/etc/inittab`{.filename}
中列车。要找到系统的默认运行级别，可以在 `/etc/inittab`{.filename}
靠最后的地方找如下的一行：
:::
``` screen
id:5:initdefault:
```
::: para
如第一个分号后所指出的，这个示例里的默认运行级别是 5。要更改它，可以
root 用户身份编辑 `/etc/inittab`{.filename}。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
编辑 `/etc/inittab`{.filename}
要非常小心。简单的输入错误就可以导致系统无法引导。如果发生了这样的事情，可以使用引导光盘，进入单用户模式，或者进入救援模式来引导系统并修复这个文件。
:::
::: para
有关单用户和救援模式详情请参考 [第 36 章
*基本系统恢复*](#ap-rescuemode.html){.xref}。
:::
:::
:::
::: para
通过修改引导装载程序传给内核的参数，也可以在引导时更改默认的运行级别。有关在引导时更改运行级别的详情请参考
[第 E.9 节
"在引导时改变运行级别"](#ch-grub.html#s1-grub-runlevels){.xref}。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-boot-init-shutdown.html#s2-boot-init-shutdown-sysv-util}F.4.2. 运行级别工具 {.title}
:::
[]{#ch-boot-init-shutdown.html#idm139817184436656
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817195179184
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817126397120
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817135347696
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817196282512
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817117288448
.indexterm}[]{#ch-boot-init-shutdown.html#idm139817204206992 .indexterm}
::: para
配置运行级别的最好方法之一是使用*初始化脚本工具*。这些工具可以简化 SysV
init 目录中的文件维护工作，使系统管理员不需要直接在
`/etc/rc.d/`{.filename} 的子目录中进行大量的符号链接操作。
:::