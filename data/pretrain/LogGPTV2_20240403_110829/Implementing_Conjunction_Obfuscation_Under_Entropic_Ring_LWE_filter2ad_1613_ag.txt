### References

1. D. Apon, N. Döttling, S. Garg, and P. Mukherjee, "Cryptanalysis of Indistinguishability Obfuscations of Circuits over GGH13," in *44th International Colloquium on Automata, Languages, and Programming (ICALP 2017)*, vol. 80, pp. 38:1–38:16, 2017.

2. S. Garg, E. Miles, P. Mukherjee, A. Sahai, A. Srinivasan, and M. Zhandry, "Secure Obfuscation in a Weak Multilinear Map Model." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2016, pp. 241–268. [Online]. Available: https://doi.org/10.1007/978-3-662-53644-5_10

3. M. Bellare and I. Stepanovs, "Point-Function Obfuscation: A Framework and Generic Constructions." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2016, pp. 565–594. [Online]. Available: http://dx.doi.org/10.1007/978-3-662-49099-0_21

4. S. Goldwasser and G. N. Rothblum, "On Best-Possible Obfuscation." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2007, pp. 194–213. [Online]. Available: http://dx.doi.org/10.1007/978-3-540-70936-7_11

5. B. Lynn, M. Prabhakaran, and A. Sahai, "Positive Results and Techniques for Obfuscation." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2004, pp. 20–39. [Online]. Available: http://dx.doi.org/10.1007/978-3-540-24676-3_2

6. G. D. Crescenzo, L. Bahler, B. A. Coan, Y. Polyakov, K. Rohloff, and D. B. Cousins, "Practical Implementations of Program Obfuscators for Point Functions," in *International Conference on High Performance Computing & Simulation, HPCS 2016*, Innsbruck, Austria, July 18-22, 2016, pp. 460–467. [Online]. Available: http://dx.doi.org/10.1109/HPCSim.2016.7568371

7. L. Bahler, G. Di Crescenzo, Y. Polyakov, K. Rohloff, and D. B. Cousins, "Practical Implementation of Lattice-Based Program Obfuscators for Point Functions," in *2017 International Conference on High Performance Computing & Simulation, HPCS 2017*, Genoa, Italy, July 17-21, 2017, pp. 761–768. [Online]. Available: https://doi.org/10.1109/HPCS.2017.115

8. Z. Brakerski and G. N. Rothblum, "Obfuscating Conjunctions," *Journal of Cryptology*, vol. 30, no. 1, pp. 289–320, 2017.

9. D. Micciancio and C. Peikert, "Trapdoors for Lattices: Simpler, Tighter, Faster, Smaller," in *Advances in Cryptology–EUROCRYPT 2012*. Springer, 2012, pp. 700–718.

10. C. F. F. Karney, "Sampling Exactly from the Normal Distribution," *ACM Trans. Math. Softw.*, vol. 42, no. 1, pp. 3:1–3:14, Jan. 2016. [Online]. Available: http://doi.acm.org/10.1145/2710016

11. D. Micciancio and M. Walter, "Gaussian Sampling Over the Integers: Efficient, Generic, Constant-Time," in *Advances in Cryptology - CRYPTO 2017 - 37th Annual International Cryptology Conference, Santa Barbara, CA, USA, August 20-24, 2017, Proceedings, Part II*, 2017, pp. 455–485.

12. J.-S. Coron, T. Lepoint, and M. Tibouchi, "Practical Multilinear Maps over the Integers." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2013, pp. 476–493. [Online]. Available: https://doi.org/10.1007/978-3-642-40041-4_26

13. S. Garg, C. Gentry, and S. Halevi, "Candidate Multilinear Maps from Ideal Lattices." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2013, pp. 1–17. [Online]. Available: http://dx.doi.org/10.1007/978-3-642-38348-9_1

14. K. Nayak, C. W. L. Fletcher, V. Goyal, S. Chandran, S. Lokam, E. Shi, and N. Ren, "Hop: Hardware Makes Obfuscation Practical," in *24th Annual Network and Distributed System Security Symposium, NDSS*. Internet Society, February 2017. [Online]. Available: https://www.microsoft.com/en-us/research/publication/hop-hardware-makes-obfuscation-practical-2/

15. D. Wichs and G. Zirdelis, "Obfuscating Compute-and-Compare Programs Under LWE," *Cryptology ePrint Archive*, Report 2017/276, 2017. [Online]. Available: http://eprint.iacr.org/2017/276

16. R. Goyal, V. Koppula, and B. Waters, "Lockable Obfuscation," *Cryptology ePrint Archive*, Report 2017/274, 2017. [Online]. Available: http://eprint.iacr.org/2017/274

17. M. Kubat, *An Introduction to Machine Learning*, 1st ed. Springer Publishing Company, Incorporated, 2015.

18. Y. Xiao, K. G. Mehrotra, and C. K. Mohan, "Efficient Classification of Binary Data Stream with Concept Drifting Using Conjunction Rule Based Boolean Classifier," 2015, pp. 457–467.

19. Y. LeCun, C. Cortes, and C. J. Burges, "The MNIST Database of Handwritten Digits," http://yann.lecun.com/exdb/mnist/, accessed: 2017-11-13.

20. A. Anand, L. Wilkinson, and D. N. Tuan, "An l-infinity Norm Visual Classifier," in *2009 Ninth IEEE International Conference on Data Mining*, Dec 2009, pp. 687–692.

21. L. Wilkinson, A. Anand, and D. N. Tuan, "Chirp: A New Classifier Based on Composite Hypercubes on Iterated Random Projections," in *Proceedings of the 17th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, ser. KDD '11*. New York, NY, USA: ACM, 2011, pp. 6–14. [Online]. Available: http://doi.acm.org/10.1145/2020408.2020418

22. V. Lyubashevsky, C. Peikert, and O. Regev, "A Toolkit for Ring-LWE Cryptography," in *EUROCRYPT, vol. 7881*. Springer, 2013, pp. 35–54.

23. A. Aysu, C. Patterson, and P. Schaumont, "Low-Cost and Area-Efficient FPGA Implementations of Lattice-Based Cryptography," in *Hardware-Oriented Security and Trust (HOST), 2013 IEEE International Symposium on*, June 2013, pp. 81–86.

24. C. Gentry, S. Halevi, and N. P. Smart, "Homomorphic Evaluation of the AES Circuit." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2012, pp. 850–867. [Online]. Available: https://doi.org/10.1007/978-3-642-32009-5_49

25. V. Lyubashevsky, C. Peikert, and O. Regev, "On Ideal Lattices and Learning with Errors over Rings." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2010, pp. 1–23. [Online]. Available: http://dx.doi.org/10.1007/978-3-642-13190-5_1

26. N. Genise and D. Micciancio, "Faster Gaussian Sampling for Trapdoor Lattices with Arbitrary Modulus," *Cryptology ePrint Archive*, Report 2017/308, 2017. [Online]. Available: http://eprint.iacr.org/2017/308

27. R. El Bansarkhani and J. Buchmann, "Improvement and Efficient Implementation of a Lattice-Based Signature Scheme," in *Selected Areas in Cryptography–SAC 2013*, T. Lange, K. Lauter, and P. Lisoněk, Eds. Springer, 2014, pp. 48–67.

28. L. Ducas, V. Lyubashevsky, and T. Prest, "Efficient Identity-Based Encryption over NTRU Lattices." *Berlin, Heidelberg: Springer Berlin Heidelberg*, 2014, pp. 22–41.

29. C. Peikert, "An Efficient and Parallel Gaussian Sampler for Lattices," in *CRYPTO*, 2010, pp. 80–97.

30. C. Gentry, C. Peikert, and V. Vaikuntanathan, "Trapdoors for Hard Lattices and New Cryptographic Constructions," in *Proceedings of the Fortieth Annual ACM Symposium on Theory of Computing, ser. STOC '08*. New York, NY, USA: ACM, 2008, pp. 197–206.

31. N. C. Dwarakanath and S. D. Galbraith, "Sampling from Discrete Gaussians for Lattice-Based Cryptography on a Constrained Device," *Applicable Algebra in Engineering, Communication and Computing*, vol. 25, no. 3, pp. 159–180, Jun 2014.

32. M. Albrecht, S. Scott, and R. Player, "On the Concrete Hardness of Learning with Errors," *Journal of Mathematical Cryptology*, vol. 9, no. 3, p. 169203, 10 2015.

33. M. Chase, H. Chen, J. Ding, S. Goldwasser, S. Gorbunov, J. Hoffstein, K. Lauter, S. Lokam, D. Moody, T. Morrison, A. Sahai, and V. Vaikuntanathan, "Security of Homomorphic Encryption," *HomomorphicEncryption.org, Redmond WA, Tech. Rep.*, July 2017.

34. J.-F. Dhem and J.-J. Quisquater, "Recent Results on Modular Multiplications for Smart Cards," in *Smart Card Research and Applications, ser. Lecture Notes in Computer Science*, J.-J. Quisquater and B. Schneier, Eds. Springer Berlin Heidelberg, 2000, vol. 1820, pp. 336–352.

### Pseudocode for Trapdoor Sampling Algorithms

#### Appendix A

**Algorithm 3: G-sampling [61]**

```plaintext
function SAMPLEG(σt, u, q)
    t is the vector of base-t digits in modulus q
    σ := σt / (t + 1)
    l0 := ⌊t (1 + 1/κ)⌋ + 1
    h0 := 0
    d0 := q0 / t
    for i = 1..κ − 1 do
        li := ⌊t (1 + 1/(κ − i))⌋
        hi := ⌊t (1 − 1/{κ − (i − 1)})⌋
        di := (di−1 + qi) / t
    end for
    Define Z ∈ Zκ×n
    for i = 0..n − 1 do
        v := u(i)
        p ← PERTURB(σ, l, h)
        c0 := (v0 − p0) / t
        for j = 1..κ − 1 do
            cj := (cj−1 + vj − pj) / t
        end for
        z ← SAMPLED(σ, c, d)
        t0 := t · z0 + q0 · zκ−1 + v0
        for j = 1..κ − 2 do
            tj := t · zj − zj−1 + qj · zκ−1 + vj
        end for
        tκ−1 := qκ−1 · zκ−1 − zκ−2 + vκ−1
        Z(:, i) := t
    end for
    return Z
end function
```

**Algorithm 4: Perturbation Generation [61]**

```plaintext
function PERTURB(σ, l, h)
    for i = 0..κ − 1 do
        zi ← SAMPLER(σ, 0)
    end for
    for i = 0..κ − 2 do
        pi := li · zi + hi+1 · zi+1
    end for
    pκ−1 := hκ−1 · zκ−1
    return p
end function
```

**Algorithm 5: Sample PZ [61]**

```plaintext
function SAMPLEPZ(n, q, s, σt, (ˆr, ˆe))
    z := ∑_{i=1}^κ ˆri^T ˆei / (s^2 - z^2)
    a := s^2 - z
    b := -z
    d := s^2 - z
    for i = 0..nκ − 1 do
        qi ← SAMPLEZ((s^2 - σt^2) / (s^2 - σt^2))
    end for
    convert q ∈ Zκ×n to ˆq ∈ Rκ
    c := - σt^2 / (s^2 - σt^2)
    p ← SAMPLE2Z(a, b, d, c)
    convert p ∈ Z2×n to ˆp ∈ R2
    return (ˆp, ˆq)
end function
```

**Algorithm 6: Sample 2Z [61]**

```plaintext
function SAMPLE2Z(a, b, d, c)
    let c = (c0, c1)
    q1 ← SAMPLEFZ(d, c1)
    convert q1 ∈ Zn to ˆq1 ∈ K2n
    c0 := c0 + bd^-1 (ˆq1 - c1)
    q0 ← SAMPLEFZ(a - bd^-1bT, c0)
    return (q0, q1)
end function
```

**Algorithm 7: Sample D [61]**

```plaintext
function SAMPLED(σ, c, d)
    zκ−1 ← SAMPLEZ(σ/dκ−1, -cκ−1/dκ−1)
    c := c - zκ−1d
    for i = 0..κ − 2 do
        zi ← SAMPLEZ(σ, -ci)
    end for
    return z
end function
```

### Derivation of Correctness Constraint for Conjunction Obfuscator

#### Appendix B

The expression corresponding to the minuend in Evaluate, i.e., \( A_0 S \Pi R_3 \), can be written as follows:

\[ A_0 S \Pi R_3 \]

This expression is derived from the correctness constraint for the conjunction obfuscator. The detailed derivation involves ensuring that the obfuscated program correctly evaluates the conjunction function while maintaining security properties. The specific steps and mathematical proofs are provided in the referenced literature.