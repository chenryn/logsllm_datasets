2018PostgreSQL中国技术大会
Your Topic Name
董红禹
PI:EMAIL
杭州乘数科技有限公司
2018年PostgreSQL中国技术大会
背景
高额的 费用
• license
每年将近几十万 费用，按 收费并做了硬限制
– licens CPU
特定业务场景不能满足
•
特定业务场景性能不能满足，扩展性不友好，与其他平台不能很
–
好融合
开源自主可用
•
随着发展企业将向开源自主可控转型
–
2018年PostgreSQL中国技术大会
迁移工作流程
调研 迁移方式 逐步迁移 正式割接
• 数据量、差异、 • 工具调研 • 部分业务、 • 全部业务切换完
存储过程、函数、 odbc_fdw 成
视图
2018年PostgreSQL中国技术大会
数据类型对比
SQL Server PostgreSQL
VARCHAR(N) TEXT/VARCHAR
DATETIME TIMESTAMP
CURRENT_TIMESTAMP(0)::TIMESTAMP
CLOCK_TIMESTAMP()::TIMESTAMP
MONEY NUMERIC(15,4)
IMAGE BYTEA
UNIQUEIDENTIFIER UUID
VARBINARY BYTEA
TIMESTAMP INTERVAL
2018年PostgreSQL中国技术大会
函数类型转换
SQL Server PostgreSQL
ISNULL() COALESCE()
DATALENGTH OCTET_LENGTH()
LEN() LENGTH()
CONVERT() ::TYPE / (CAST())
SUBSTRING('DFADF', 1, 2)[DF] SUBSTR()
CHARINDEX(';', 'FASD;FDS', 2) POSITION(';' IN 'FASD;FDS')
GETDATE() NOW();
DATEADD NOW()+INTERVAL '3 MONTHS';
DATEDIFF(DAY, STARTTIME, ENDTIME) DATE_PART('DAY', ENDTIME ‐ STARTTIME))
DATEPART() DATE_PART('WEEK', NOW());
2018年PostgreSQL中国技术大会
临时表
中临时表
• SQL Server
– CREATE TABLE #Temp ( id int, customer_name nvarchar(50), age int )
– select * into #t12 from table01;
中使用方式
• PG
– create temp table tmp_t12 on commit drop as select * from table01;
• on commit
– PRESERVE ROWS
– DELETE ROWS
– DROP
2018年PostgreSQL中国技术大会
视图、外键
视图
•
查询方式相同，需要注意 中基表的数据类型发生变化后，视图需要重建
– PG
开始事务
begin; ‐‐
设置锁超时
set local lock_timeout = '1s'; ‐‐
删除依赖视图
drop view v_test; ‐‐
修改字段长度
alter table test alter column a type varchar(32); ‐‐
创建视图
create view v_test as select id,c1 from test; ‐‐
结束事务
end; ‐‐
外键
•
中外键可以临时禁用
– SQL Server
中在创建表时设置是否可延迟约束
– PG
• DEFERRABLE
– INITIALLY DEFERRED
– INITIALLY IMMEDIATE
2018年PostgreSQL中国技术大会
索引
索引
•
中没有聚集索引
– PostgreSQL
对于选择性底的索引可以创建条件索引
–
• CREATE INDEX IDX_Job_CompanyId ON Job (CompanyId) WHERE IsDeleted =
false;
2018年PostgreSQL中国技术大会
部分索引
postgres=# create table t5(a int,name character varying);
postgres=# insert into t5 select 1,'test'||i from generate_series(1,100000) as t(i);
postgres=# insert into t5 select i,'test'||i from generate_series(1,1000) as t(i);
postgres=# explain select * from t5 where a=1;
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Seq Scan on t5 (cost=10000000000.00..10000001808.50 rows=100027 width=13)
Filter: (a = 1)
postgres=# create index idx_a_t5 on t5(a) where a<>1;
postgres=# explain select * from t5 where a=100;
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Index Scan using idx_a_t5 on t5 (cost=0.28..8.33 rows=3 width=13)
Index Cond: (a = 100)
(2 rows)
2018年PostgreSQL中国技术大会
非索引列的使用
postgres=# explain select * from t5 where a=1 and name='test1';
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Seq Scan on t5 (cost=10000000000.00..10000002061.00 rows=1 width=13)
Filter: ((a = 1) AND ((name)::text = 'test1'::text))
postgres=# create index idx_a_name_t5 on t5(a) where name='test100';
postgres=# explain select * from t5 where a=1 and name='test100';
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Index Scan using idx_a_name_t5 on t5 (cost=0.13..8.14 rows=1 width=13)
Index Cond: (a = 1)
2018年PostgreSQL中国技术大会
表达式索引
postgres=# explain select * from t5 where a+1=100;
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Seq Scan on t5 (cost=10000000000.00..10000002061.00 rows=505 width=13)
Filter: ((a + 1) = 100)
Time: 0.962 ms
postgres=# create index idx_a_t5 on t5((a+1));
CREATE INDEX
postgres=# explain select * from t5 where a+1=100;
QUERY PLAN
‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
Bitmap Heap Scan on t5 (cost=12.21..577.48 rows=505 width=13)
Recheck Cond: ((a + 1) = 100)
‐> Bitmap Index Scan on idx_a_t5 (cost=0.00..12.08 rows=505 width=0)
Index Cond: ((a + 1) = 100)
2018年PostgreSQL中国技术大会
应用 修改
SQL
相关
• SQL
字符串拼接
–
• SELECT FirstName + LastName FROM..
• SELECT FirstName || LastName FROM...
大小写敏感问题
–
中不区分大小写
• SQL Server
中可以使用 函数
• PG LOWER/UPPER
• Order by
中 首先会选择 值
– SQL Server Order by NULL
中可以选择先读取 值还是后读取 值
– PG NULL NULL
• select * from t order by name NULLS last;
• select * from t order by name NULLS FIRST;
2018年PostgreSQL中国技术大会
UUID
中
• SQL Server
用 函数生成 的
– newid() uuid
中使用方式
• PG
– create extension uuid‐ossp
生成
• uuid_generate_v1() uuid
2018年PostgreSQL中国技术大会
存储过程及函数
获取受影响行数
•
批量删除数据
while 1=1 loop ‐‐
delete from t_inofaout_zcq where trade_id=in_trade_id
and
in_trade_id>0 and rq> in_start_date and rq in_month);
return;
END;
$$ LANGUAGE plpgsql;
2018年PostgreSQL中国技术大会
存储过程及函数
返回多行多列
•
create or replace function sp_get_multiple_set1(
in f_id int,
refcursor,
refcursor
) returns setof refcursor
as
$tt$
declare r1 alias for $2;
r2 alias for $3;
begin
open r1 for select * from j1 where id =f_id;
return next r1;
open r2 for select * from tmp_2 where id = f_id;
return next r2;
end;
2018年PostgreSQL中国技术大会
存储过程及函数
存储过程中调用存储过程
•
中是
– SQL Server exec
中转为如果这个函数是返回单值的，就直接调用函数即可
– PG
• v_info := f_getinfo(‘aaaaa’);
如果是返回多行的，用
–
for rec in select * from func_name('xxxx') loop
...
end loop;
2018年PostgreSQL中国技术大会
存储过程及函数
不想处理函数返回值用 关键字
• perform
CREATE OR REPLACE FUNCTION f_test16(in in_id1 int)
RETURNS int
AS $$
DECLARE
rec record;
BEGIN
perform f_test15(10);
return 10;
END;
$$ LANGUAGE plpgsql;
2018年PostgreSQL中国技术大会
迁移工作
迁移工具
•
调研迁移工具及项目具体情况
–
最后选择自己使用 程序开发
• python
存储过程修改
•
个存储过程迁移
– 1500
演练测试
•
多次演练测试评估迁移时间窗口
–
2018年PostgreSQL中国技术大会
保持原有业务访问方式
原有业务通过函数方式访问数据库
•
同时考虑读写分离
–
HTTP
使用 创建读写集群
• plproxy
CREATE SERVER write_cluster FOREIGN DATA WRAPPER plproxy options
(connection_lifetime '1800',
p0 'dbname=db0 hostaddr=172.16.3.150 port=5432');
CREATE SERVER read_cluster FOREIGN DATA WRAPPER plproxy options
(connection_lifetime '1800',
p0 'dbname=db0 hostaddr=172.16.3.151 port=5432',
p1 'dbname=db1 hostaddr=172.16.3.152 port=5432',
p2 'dbname=db2 hostaddr=172.16.3.153 port=5432',
p3 'dbname=db3 hostaddr=172.16.3.151 port=5432');
2018年PostgreSQL中国技术大会
保持原有业务访问方式
原有业务通过函数方式访问数据库
•
同时考虑读写分离
–
创建函数时根据读写操作指定对应路由的
• cluster
#代理proxydb上插数据的函数:
CREATE OR REPLACE FUNCTION insert_user(i_username text, i_emailaddress text)
RETURNS integer AS $$
CLUSTER 'write_cluster';
RUN ON ANY;
$$ LANGUAGE plproxy;
#代理proxydb上查询数据的函数
CREATE OR REPLACE FUNCTION get_user_email(i_username text) RETURNS SETOF text AS $$
CLUSTER 'read_cluster';
RUN ON ANY;
$$ LANGUAGE plproxy;
2018年PostgreSQL中国技术大会
保持原有业务访问方式
原有业务通过函数方式访问数据库
•
同时考虑读写分离
–
调用函数时可直接路由
• CREATE or REPLACE FUNCTION sumtest(
username text,
完成读写分离
out out_result INT,
out em text,
out im INT
)returns record
as $$
BEGIN
BEGIN
em :=get_user_email(username);
im :=insert_user('xiaoming', em);
out_result:=1;
EXCEPTION
2018年PostgreSQL中国技术大会
过度迁移
迁移部分数据
•
与 同时使用
– PG SQL Server
使用 做数据同步
– ODBC_FDW
• https://github.com/hangzhou‐cstech/odbc_fdw
业务系统 业务系统
部分数据迁移
SQL
PG
Server
增量数据同步
Thanks