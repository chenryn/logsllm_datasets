In the following example, julia fails to elide the view of the array if the
view thinks the underlying array is a matrix rather than a vector.
    function matrix_view(a)
        @views a[:,1]
        0
    end
    a = randn(3)
    A = randn(3,1)
    @btime matrix_view($a)
    @btime matrix_view($A)
    julia> @btime matrix_view($a)
      48.592 ns (2 allocations: 96 bytes)
    julia> @btime matrix_view($A)
      1.541 ns (0 allocations: 0 bytes)
The problem might be related to the fact that the view thinks the parent is a
matrix based on the appearance of the indexing expression, which can not be
guaranteed.
    view(a, :, 1)
    3-element view(::Matrix{Float64}, :, 1) with eltype Float64: