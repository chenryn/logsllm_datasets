# 第12章：合成与Web服务

## Page 711
### 合成与Web服务
#### 运行测试
为AliensAbductedMe网站增加RSS新闻提要脚本。

**步骤：**
1. 创建一个新的文本文件，命名为`newsfeed.php`。
2. 输入Owen的RSS Newsfeed脚本代码（可以从HeadFirstLabs网站下载该脚本）。
3. 将脚本上传到您的Web服务器。
4. 在一个新闻阅读器中打开此脚本。大多数现代Web浏览器和一些电子邮件客户端都支持查看新闻提要。

**注意事项：**
- 如果您的浏览器无法直接访问新闻提要，请尝试在URL前添加`feed://`代替`http://`。
- `newsfeed.php`生成的是RSS文档而非HTML页面，但其访问方式与普通PHP脚本相同，只需在浏览器地址栏输入正确的URL即可。
- 为了让用户轻松找到并订阅这个RSS提要，在主页上提供一个明显的链接是必要的。

示例代码片段：
```php
echo substr($row['alien_description'], 0, 32) . '.';
echo 'http://www.aliensabductedme.com/index.php?abduction_id=' . $row['abduction_id'];
echo date('T', strtotime($row['when_it_happened_rfc']));
echo $row['what_they_did'];
```

## Page 712
### 提供一个RSS链接
#### 链接到RSS提要
为了帮助用户快速定位RSS提要，建议使用标准的RSS图标作为视觉指引。这些图标可以在[www.rssicons.com](http://www.rssicons.com/)免费获取。

**如何操作：**
- 下载rssicon.png图像，并将其放置于与index.php相同的目录下。
- 修改index.php文件，在适当位置加入如下HTML代码以创建指向newsfeed.php的链接：
  ```html
  <a href="newsfeed.php"><img src="rssicon.png" alt="RSS Feed"> 订阅我们的新闻提要</a>
  ```

## Page 713
### 合成与Web服务
#### 运行测试
为AliensAbductedMe主页增加新闻提要链接。

**具体步骤：**
1. 编辑`index.php`文件，在页面底部附近添加新闻提要链接。
2. 确保已从HeadFirstLabs下载了rssicon.png图片，并将其上传至Web服务器。
3. 测试新添加的链接是否能够正确导向新闻提要页面。

通过RSS订阅，用户可以自动接收最新的外星人绑架报告，而无需频繁访问网站。

## Page 714
### 为Owen的网站增加YouTube内容
#### 视频集成
有用户提醒Owen，指出某个YouTube视频中的狗可能就是Fang。因此，Owen考虑将YouTube视频整合进自己的网站，以便更广泛地传播信息。

**问题探讨：**
- 直接嵌入单个YouTube视频相对简单，只需要复制粘贴相应的HTML代码。
- 但是，Owen希望实现的功能是对YouTube上的相关视频进行实时搜索并将结果展示在其网站上。

## Page 715
### 试一试！
- 访问Owen的YouTube频道 [aliensabductedme](https://www.youtube.com/user/aliensabductedme) 查看更多关于外星人绑架事件的视频。
- 思考是否有视频中的狗可能是Fang。

## Page 716
### “拉”内容不同于“推”内容
#### 从其他来源“拉”Web内容
- **RSS推送机制**：让订阅者无需手动刷新就能收到更新。
- **REST请求**：用于从远程服务器获取数据，如YouTube视频。

**基本概念：**
- REST (Representational State Transfer) 是一种基于HTTP协议的数据交换架构风格。
- 通过构造特定格式的URL向YouTube发送请求，并处理返回的XML或JSON格式的数据来获取所需信息。

## Page 717
### 合成YouTube视频
#### 建立一个YouTube视频请求
- 构建适当的REST URL来指定所需的具体视频类型。
- 发送请求后，解析YouTube返回的XML文档以提取视频标题、缩略图等信息。
- 最终，将这些数据转换成HTML格式并显示给用户。

**技术流程：**
1. 客户端发起对网页的请求。
2. Web服务器执行PHP脚本来处理请求，包括向YouTube发出API调用。
3. YouTube响应请求，返回包含视频元数据的XML文件。
4. PHP脚本解析XML，生成最终的HTML页面并发送回客户端浏览器显示。

通过这种方式，不仅可以让访客更容易地发现有关Fang的新线索，还可以提升网站的整体互动性和用户体验。