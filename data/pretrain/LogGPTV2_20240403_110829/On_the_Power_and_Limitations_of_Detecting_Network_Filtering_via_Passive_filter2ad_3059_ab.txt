### Detecting Policy-Based TCP Port 445 Filtering

#### General Coverage
A natural first question is whether we observe traffic from a broad spectrum of Internet endpoints in our darknet. To quantify the fraction of the Internet that transmits traffic to our darknet, we used routing tables from Route Views at the beginning of our data collection (January 13, 2011) and determined that 2.43 billion addresses were routed. The set of /24 networks from which we received traffic corresponds to 2.40 billion IP addresses, or 98.8% of the routed IP addresses. Some of this traffic is likely spoofed, so we computed the number of addresses belonging to /24s that sent at least five scanning or backscatter packets. We found 1.85 billion such addresses, or 76.1% of the routed IP addresses. This analysis leads us to conclude that background radiation—and the lack thereof—arrives from a broad spectrum of the Internet, making it a potential source of information about policy-based filtering.

#### Conficker Coverage
While the amount and breadth of background radiation offer hope for broadly detecting filtering policies, Conficker is an imperfect marker. Conficker-infected endpoints are known to inhabit 1.6 million out of the 4.1 million /24 address blocks we observed sending traffic to our darknet. This partial coverage is due to an error in Conficker that prevents it from scanning three-quarters of the network. Although the footprint of the marker limits the network area we can assess, we are unaware of any other technique that achieves this level of coverage. Despite its imperfections, we believe even an imperfect marker can provide a better understanding than what we have today.

#### Conficker Behavior
Another preliminary question pertains to the behavior of Conficker. Before inferring missing marker traffic, we must understand how much such traffic we should expect. Conficker infectees scan only after five minutes of keyboard inactivity on a given host. Additionally, Conficker has four scanning modes, some of which are localized in scope. An infected host cannot scan when powered off. Given these constraints, we cannot simply compute an expectation based on continuous and uniform scanning.

To determine a rough idea of whether we should expect to observe traffic from each infectee, we know that each infected machine pauses between 100 ms and 2 s between probes. With nearly 84 million IP addresses observed, we would expect to see one out of every 52 probes, or one probe every 104 seconds at the slowest scanning rate. If we are to observe 10 probes from a given infected machine on each /8 we monitor, the host would need to scan for 86 minutes over the course of a week, or less than 1% of the week. Therefore, our initial assumption, which we revisit in Section 5, is that we should observe Conficker activity from all infected hosts.

#### Validation
The cursory analysis in Section 4 suggests that inferring policy-based filtering of TCP port 445 should be possible given both the proliferation of Conficker and our broad vantage point. This section tests our assumptions and frames the confidence we can gain from the results. Given the breadth with which we aim to develop understanding, we have no ground truth. Therefore, we cannot absolutely prove our inferences correct but aim to illustrate that they are likely to be so.

**An Anecdote:**
Comcast provides a list of ports subject to policy filtering for its residential customers, including TCP/445. In our darknet data, we find nearly 3 million packets from Comcast’s 76.102.0.0/15 address block. As expected, we find no TCP/445 traffic, even though our list indicates 81 Conficker-infected hosts within the given address block. While this is an anecdotal case, it illustrates our goal to detect policy from the absence of specific traffic from given address blocks.

**Conficker Sending Behavior:**
The preliminary analysis in Section 4 suggests our darknet is large enough to observe all Conficker-infected hosts scanning with high probability based on what we know about Conficker’s behavior. To check this, we considered all Conficker infectees from /24 address blocks where we observed some traffic to TCP port 445. In this case, we do not believe there is a general policy against TCP/445 traffic at the /24 level. However, we found TCP/445 traffic from only 51% of the infected hosts across these cases. Our data does not shed light on why we do not observe 49% of the Conficker hosts. Possible reasons include policy at finer granularity, reactive filtering, and removal of Conficker from the machine. We combat this by requiring multiple Conficker infectees per address block to overcome the seeming failure of some Conficker hosts to send scanning traffic.

**Active Measurement:**
Netalyzr [12] attempts to establish a TCP/445 connection to a known server as part of its suite of active measurements. We obtained Netalyzr test results starting one month before and ending one month after our darknet data collection. We found 1,555 hosts in the Netalyzr data that are also infected with Conficker, allowing us to evaluate our technique using the Netalyzr results as ground truth. First, we found 176 hosts (11%) where Netalyzr showed inconsistent results, indicating that filtering policy and end-host behavior are not consistent over two months. For another 647 hosts, Netalyzr concluded a port-based filter was in place, and the darknet data agreed with this assessment in 97% of the cases. In the 3% of cases where Netalyzr concluded port filtering, we found a minimum of 17 TCP/445 packets from each host, with a median of 1,369 TCP/445 packets, leading us to conclude no filter was in place. We believe the likely cause is a policy change. Finally, Netalyzr found 732 hosts to be unfiltered, but we only observed 279 (38%) sending traffic to our darknet. Applying the expectation that we can only expect traffic from roughly half the infected Conficker hosts, the accuracy of the inference from the darknet data increases to 76%.

**Broad Comparison:**
We compared our darknet observations with Netalyzr’s results, aggregating results across /24 address blocks, routed blocks, and autonomous systems. This allows us to use multiple infected hosts for our inference but at the expense of possibly observing multiple policy domains. Figure 2 shows the accuracy of our inference with respect to the Netalyzr results as a function of the number of Conficker infected hosts for the given aggregate block. The plot illustrates that the accuracy levels off once a handful of Conficker infectees are present within the block. The tighter we scope the block, the better the accuracy, with /24 blocks showing the best accuracy, followed by routed blocks and then autonomous systems. We believe this is because as we increase the aggregation, the instances of multiple policy domains also increase, leading to incorrect inferences.

We find that approximately half the hosts that contact the Conficker command and control structure ultimately show up in our darknet data. Requiring five infected hosts per /24 should mean one of the Conficker infectees sends traffic with a 96% likelihood. When applying this threshold and comparing with the Netalyzr results, we find an accuracy of 80%. In approximately 6% of the cases, Netalyzr determines the network is filtering traffic while we observe Conficker from the given /24 in our darknet data. Finally, in 14% of the cases, Netalyzr is able to establish a TCP/445 connection while we find no Conficker in our darknet collection, leading us to infer the given /24 is filtering TCP/445. While the reason for this discrepancy is not clear, it will cause an over-estimate of the amount of filtering in the network.

**Summary:**
Looking for the curious absence of traffic to understand fine-grain network filtering policy is not a clean process. We clearly need to understand the signal we expect to find. However, our conclusion is that, while this process is not perfect, we can use it to gain an approximate understanding of policy filtering in the network. Active measurements may be more precise, but they are much more difficult to obtain on a large scale basis, so we are trading absolute precision for breadth of understanding.

### Data Analysis

#### /24-Based Policy
As developed above, we believe Conficker is a marker that will illuminate network filtering policy for the broad regions of the network where it is known to exist, even if the marker is less than ideal in some situations. We aggregate and label traffic based on the source /24 address block, our expectations of Conficker, and the traffic that arrives in our darknet.

First, as sketched in Section 4, we do not expect Conficker from roughly 60% of the /24 blocks observed at our darknet monitors. For roughly 0.2% of the /24 blocks from which we do not expect Conficker traffic, we do observe likely Conficker at our darknet. This shows that the list of Conficker-infected hosts is comprehensive and not missing a significant portion of hosts infected with the malware. We do not further consider address blocks where we do not expect Conficker as we can infer nothing from its absence in these cases.

This leaves us with Conficker infectees in roughly 40% of the /24 address blocks in our darknet data. We now need a process to label each /24 address block by its filtering policy. Given our validation work in Section 5, we proceed in two steps. First, when we observe Conficker traffic from a /24 block, we determine there is no general TCP/445 filtering. Second, we know we cannot expect Conficker from all infectees, so the absence of the marker does not necessarily indicate a network filter. Rather, we determine a /24 block is filtering TCP/445 when (i) we find no TCP/445 traffic in our darknet data and (ii) the /24 block has at least five infectees. As developed in Section 5, the second criteria give us at least 96% confidence that Conficker should arrive, and when it does not, we infer a policy-based filter.

We find 434,000 (27%) of the 1.6 million /24 blocks with Conficker infectees are not imposing TCP/445 filtering on their traffic. Meanwhile, we infer that 448,000 /24 blocks (28%) filter TCP/445 traffic. That is, we are able to confidently characterize the filtering policy of 882,000 /24 networks, or 9.3% of all the routed address space. This is, by far, a larger portion than previous methodologies can claim—e.g., Netalyzr runs from the month surrounding our data collection cover 23,000 /24 networks. Our analysis leaves 747,000 /24 blocks (45%) from which we do not observe TCP/445 traffic but which do not contain five infectees. These are cases where we have an indication of possible filtering but cannot develop high confidence in this determination.

#### Routed Prefix-Based Policy
Next, we turn to a larger aggregation of address blocks to better understand filtering policy at a coarser granularity. We leverage routed prefixes as found in Route Views at the time of our darknet data collection for this analysis. Our general method to infer whether filtering happens for an entire prefix is to look for consistent behavior from the /24 blocks within the prefix. Since we tackle /24 address blocks above, in this section, we only study the 140,000 routed prefixes that are at least a /23 (out of 254,000 total routed prefixes).

Of the 140,000 prefixes we consider, we find no Conficker infectees and no TCP/445 traffic for 61,000 of the prefixes. We cannot further study these prefixes as we have no expectation of TCP/445 traffic, and therefore the absence of such traffic does not inform our assessment of filtering. This leaves roughly 79,000 prefixes on which we have some expectation of observing TCP/445 traffic. We summarize our results in Table 2.

First, when each /24 block containing at least one Conficker infectee within the routed prefix produces TCP/445 traffic, we conclude the network applies no general TCP/445 filtering. Table 2 shows 13% of the prefixes do not filter TCP/445. Similarly, when we observe no TCP/445 traffic for each /24 block containing at least one infectee across a prefix with at least five total infectees, we conclude filtering is in place for the entire prefix. We find prefix-wide filtering in 35% of the prefixes. We also find cases where no TCP/445 traffic arrives at our darknet, but the routed prefix contains fewer than five infectees. We cannot confidently determine that these prefixes filter TCP/445—even if the data suggests this may be the case. We denote these cases “low signal” in the table and find 28% of the prefixes fall into this category.

| **Classification** | **No Filtering** | **Filtering** | **Multiple Policies** |
|-------------------|------------------|---------------|----------------------|
| **Amount**        | 10,084           | 27,351        | 14,536               |
| **Percentage**    | 13%              | 35%           | 28%                  |

This comprehensive analysis provides a detailed understanding of the extent and nature of TCP port 445 filtering in the Internet, leveraging the unique insights provided by Conficker and our darknet data.