# 【安全报告】密钥重载攻击：强制WPA2重用Nonce
|
##### 译文声明
本文是翻译文章，文章来源：mathyvanhoef.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[Luojun, Xiaoxiong, Chenyuanhao
@360CERT](http://bobao.360.cn/member/contribute?uid=2910463042)
**0x00 摘要**
本文我们将介绍密钥重载攻击，这种攻击滥用了加密协议的设计和实现来重装一个已经在使用的key。重置和key相关的参数，例如传输的nonces和重传计数器。一些加密的Wi-Fi握手包也会受到该攻击影响。
所有受保护的Wi-Fi网络使用四次握手来产生一个新的session key。目前为止，握手协议已经使用了14年，一度被认为很安全，可以免受攻击。但是，
**本文证明了在密钥重载攻击面前四次握手协议是脆弱的。**
攻击者通过操作和应答握手信息来欺骗受害者重新安装一个已经在使用的key。当密钥重载时，相关的参数例如传输包的增长序列（nonce）和重传计数器被重置为初始值。密钥重载攻击也能破坏PeerKey，组密钥和Fast
BSS Transition（FT）握手协议。该影响取决于握手协议是否被攻击以及使用的数据加密协议。简单来说，针对AES-CCMP的攻击者可以应答和解密（不是伪造）握手包。这使得劫持TCP流并注入恶意数据变得有可能。而对于WPA-TKIP和GCMP允许应答、解密和伪造包影响是灾难性的。因为GCMP在传输的双方使用相同的key，影响尤为严重。
最后，我们在实践中验证了我们的观点，并发现每个Wi-Fi设备都有可能受到一些变种攻击的影响。值得注意的是，Android 6.0
强制客户端使用初始值全为零的加密key，使得我们的攻击对其影响是巨大的。
关键词：安全协议；网络安全；攻击；密钥重载；WAP2；nonce重用；握手包；包序列；初始向量
**0x01 介绍**
所有使用WPA/2协议的Wi-Fi网络被认为是安全的。更有甚者，由于Hotspot2.0，现在公共的热点也能用这种加密认证[7]。所有这些技术都依赖于四次握手协议，该协议被定义在802.11中的802.11i修正案中。本文我们将展示四次握手的设计流程和相关的握手包，因为我们认为这些握手包以及WPA和WPA2认证的产品都会受我们攻击的影响。
四次握手提供了相互认证和会话密钥协商协议，连同（AES）-CCMP，数据保密和完整性协议，构成了802.11i修正案的基础。作为802.11i的核心部分，自从2003年第一次被命名为WPA被引入，它就免受了攻击。实际上，802.11i目前已知的弱点是在（WPA-）TKIP[57,66]。其数据保密协议被设计作为破旧的WEP协议的一个短期解决方案。
**换句话说，TKIP从来没有打算作为一个长期的安全解决方案。** 此外，虽然过去几年有几次针对Wi-Fi网络的攻击被发现，
**但都不是利用802.11i协议。** 而是
**利用WPS[73]，有缺陷的驱动程序[13,20]，有缺陷的随机数字生成器[72]，可预测的预共享密钥[45]，不安全的企业认证[21]等等**
。在CCMP和四次握手里没有发现重大的弱点。这并不奇怪，毕竟，两者都被正式证明是安全的[39,42]。考虑以上几点，人们可以合理地假设四次握手确实是安全的。
尽管历史证明它是安全的，但我们可以证明四次握手面对密钥重载攻击是脆弱的。此外，我们发现了其他Wi-Fi握手协议中有相似的缺陷。这意味着，我们也能攻击PeerKey握手，组密钥握手和Fast BSS Transition (FT) 握手。
我们攻击背后的原理在事后看来其实很简单。概括如下：
当客户端加入一个网络时，它会执行四次握手来协商得到一个新的会话key。在接收到握手的Message 3后，它会安装该key。
**一旦key被安装，它将被用于数据保密协议来加密正常的数据帧**
。但是因为消息可能丢失，如果没有收到合适的响应作为应答，接入点（AP）将重发Message 3。所以，于是客户端可能收到多次的Message
3。每次接收到该消息，客户端就会重新安装相同的会话密钥，从而重置不断增长的传输包的序列号（nonce）以及数据保密协议使用的重传计数器。我们证明了攻击者可以通过收集和重发Message
3来强制重置nonce。通过临时重置nonce，可以攻击数据保密协议。例如，数据包可以被重放，解密，或伪造，这样的技术也可以用来攻击组密钥，PeerKey，fast
BSS Transition。
当四次握手或fastBSS 握手被攻击时，影响的大小取决于使用的数据保密协议。如果是使用CCMP，任意数据包都可以被解密，反之，这可以用来解密TCP
SYN包来挟持TCP连接。例如，攻击者可以注入恶意内容到未加密的HTTP连接中。如果是使用TKIP或GCMP，攻击者可以解密并注入任意包。尽管GCMP是一个相对较新的Wi-Fi协议，预计在今后几年中会有很高的采用率。最后，当组密钥握手被攻击时，攻击者可以重放组寻址帧，即广播和多播帧。
我们的攻击对于wpa_supplicant（Linux系统常用的Wi-Fi客户端）2.4版本和2.5版本影响巨大，该客户端将安装一个全零的加密key而不是重装一个真实的key。该漏洞由802.11标准中的一句话引发：如果会话密钥已经被安装，建议从内存中清除部分的会话密钥[1,
§12.7.6.6]。 **因为Android使用了改进的wpa_supplicant，所以Android 6.0和Android Wear
2.0也包含此漏洞** 。因此，目前31.2%的Android设备很容易受到这种攻击变种的破坏。[ 33 ]
有趣的是，我们的攻击并不违反四次握手和组密钥握手被证明的安全属性。特别值得一提的是，这些证明表明协商的会话密钥仍然是私有的，并且客户端和接入点（AP）的身份是被确认的。我们的攻击不会泄露会话密钥。（另外，虽然使用TKIP或GCMP可以导致正常的数据帧被伪造，但是攻击者不能伪造EAPOL消息，因此不能在握手期间伪装成客户端或AP，所以不能模拟key的安装。不同的是，当一个协商key应该被安装时，他们的模型不能阐述。）实际中，
**这意味着相同的key可以被安装多次，从而重置nonces和数据保密协议使用的重传计数器。**
总之，本文的主要阐述如下：
（1）我们介绍了密钥重载攻击，攻击者强制重载一个已经使用过的key，从而重置任何相关的nonces或重传计数器。
（2）我们认为四次握手，PeerKey握手，组密钥握手和fast BSS transition握手容易受到密钥重载攻击。
（3）我们在实践中实施了我们的攻击，这表明所有的实现都易受某些变种的攻击。
（4）我们评估了所有802.11的数据保密协议重用nonce的影响。
本文的其余部分如下：
第二节将介绍802.11标准的相关方面。第三节主要阐述针对四次握手和PeerKey握手的密钥重载攻击。第四节则是针对组密钥的描述。第五节描述针对fast
BSS
transition握手的攻击。在第六节，我们将描述攻击的影响，提出对策，解释安全性失败的原因，并讨论吸取的教训。最后我们会在第七节介绍本文的相关工作，并在第八节进行总结。
**0x02 背景**
这个章节主要介绍802.11i修正协议，在连入WiFi网络时的各种消息和协议和802.11中使用的各种数据机密性完整性协议。
**2.1 802.11i修正协议**
在WEP安全性从根本上打破之后，IEEE提供了一个更加健壮的解决方式，使用802.11i作为802.11的修正协议。修正协议定义了四次握手和两个数据机密性、完整性协议WPA-TKIP和AES-CCMP。尽管802.11i修正案还在开发中，WiFi联盟开始根据802.11i D3.0版本的草案来验证设备。验证程序叫做 **WiFi
Protected Access（WPA）** 。一旦802.11i
的D9.0最终版本被批准，WPA2的认证就建立在这个正式批准的版本上。因为WPA和WPA2都是基于802.11，所以在技术水平上两者几乎相同的。最主要的区别是WPA2要求支持更安全的CCMP，可选使用TKIP，而WPA是相反的。
因为功能需求，WPA和WPA2都采用四次握手保护WiFi网络。企业版网络也是依赖于四次握手。因此所有使用四次握手的WiFi网络都被这次攻击影响。