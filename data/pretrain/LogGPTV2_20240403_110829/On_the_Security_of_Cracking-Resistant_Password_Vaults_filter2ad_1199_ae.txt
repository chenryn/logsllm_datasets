password pairs of diﬀerent edit distances); n-gram struc-
ture (comprises percentage frequencies for the most popular
n-grams, to characterize token reuse); Combined (combina-
tion of the three features above). We re-created the classiﬁer
with the information available and some deliberate tuning
of the parameters, obtaining a classiﬁer that shows similar
performance to the original classiﬁer. The results both for
vaults and artiﬁcial vaults (called MPW in NoCrack’s termi-
nology) are shown in Table 5. To facilitate the comparison
between the original SVM and our re-implementation, we
list the results for NoCrack by Chatterjee et al. [9] as well.
We see that both NoCrack and Markov perform very similar
against this classiﬁer and that the values are very similar to
the reported ones for vaults and similar for MPW. However,
this is mostly a sign for the ineptness of the used features,
as we have seen that KL divergence is substantially better
in ranking than this classiﬁer.
6.3 Adaptive Construction
The basic idea of the adaptive construction is to mod-
ify the n-gram model such that it does not assign very low
probabilities to passwords that actually appear in the vault.
Otherwise, the appearance of a very improbable password
in a candidate vault would be a strong signal for the real
vault. Therefore, we modify the transition probabilities of
an n-gram model as follows:
(i) For each password occur-
ring in the vault, we choose one n-gram from that password
at random and increase the probability by multiplying it
with 5. (ii) For all remaining n-grams, we increase probabil-
ities by a factor of 5 with a probability of 20 %. (iii) Finally,
we re-normalize all probabilities. Here, the constants 5 and
20 % are determined empirically to work well and provide
reasonable security guarantees (see below). In the next sub-
section, we establish that the resulting (adaptive) NLE pre-
vents online-veriﬁcation attacks much better than previously
seen (static) NLEs, and we discuss the security implications
of the adaptive property in the subsequent section.
6.4 Performance of the Adaptive NLE
To evaluate the performance of the adaptive NLE, we re-
run the same experiment as before using KL divergence and
the PBVault dataset. The results are summarized in Ta-
ble 4. They show that the real vault cvreal is ranked on
average among the 40.12 % of the most likely vaults, thus
increasing the amount of online guessing substantially. Note
speciﬁcally that the 1st Quartile dropped from 0.39 % for the
static Markov NLE to 9.12 % for the adaptive Markov NLE.
We tested several other boosting constants (2, 4, 5, 6, 8, 10)
which resulted in the following mean values (33.71 %, 39.38 %,
40.12 %, 40.36 %, 41.56 %, 43.4 %). We considered 5 to be
suitable as beyond the improvements are small.
6.5 Security of the Adaptive NLE
We have to assume that an attacker is able to determine
which n-grams have been boosted in the process, either be-
cause the attacker knows which corpus the original n-gram
model has been trained on, or because the attacker is able to
notice deviations from a “normal” distribution. In this case,
it might be possible to infer information about the passwords
stored in the vault. (In fact, if we only boosted n-grams for
passwords in the vault and omitted the random boosting of
other n-gram probabilities, then this would give rise to an
easy and very eﬃcient attack.) Next, we will show that the
information that an attacker can infer is very limited.
Let B be the set of those n-grams that have been boosted
(and this set is known to the attacker). Consider a password
pwd, which might or might not be in the vault, and let N
be the set of n-grams that pwd contains. Depending on if it
is in the vault or not, the size of the intersection N ∩ B will
change (it will be larger on average if pwd is in the vault,
as in this case N ∩ B is guaranteed to be greater than 1).
We consider the inﬂuence that learning the value i := N ∩ B
has on the probability of seeing a password pwd0. The ratio
between P (pwd = pwd0) and P (pwd = pwd0|i = i0) can be
estimated as follows, using Bayes’ rule, writing f (k; n, p) for
the probability mass function of the Binomial distribution,
writing len(pwd) for the length of a password and p = 0.2:
P (pwd = pwd0|i = i0)
P (i = i0|pwd = pwd0)
P (pwd = pwd0)
=
f (i0 − 1; len(pwd) − 3, p)
f (i0; len(pwd) − 2, p)
=
P (i = i0)
<
1
1 − p
= 1.25
In other words, even an adversary knowing the exact set of
boosted n-grams will increase the estimate of the probability
of the correct password by a factor of 1.25, which has a very
limited eﬀect on the guessing behavior for an online guessing
attack. The exact inﬂuence on password guessing depends
on the precise distribution of passwords, or more speciﬁcally
on the attacker’s belief about the password distribution, and
is thus hard to precisely quantify.
6.6 Limitations of the Adaptive NLE
Finally, we discuss some limitations of adaptive NLEs
and the Markov-based adaptive NLE in particular. Adap-
tive NLEs demonstrate an interesting direction to overcome
fundamental limitations of static NLEs, as we have demon-
strated in Section 4. However, more work is required to
better understand the mechanisms for providing adaptive
NLEs and to quantify their security guarantees.
Our method for implementing adaptive NLEs based on
n-gram models shows a ﬁrst step towards realizing adaptive
NLEs. The technique is straightforward, but better meth-
ods may exist. Note that we are unaware of an easy and
promising way to base adaptive NLEs on PCFGs. The pa-
rameters that we used were determined empirically and seem
to work well, but a more systematic treatment may reveal
parameters with better overall performance. Altogether, we
consider adaptive NLEs as still being work-in-progress.
So far we have considered vaults that do not change over
time. If a new password is added to a vault, one possible way
is to re-encode the entire vault as described in Section 6.3.
Then the construction is vulnerable to the same intersection
attack as NoCrack: Given the same vault before and after
adding a new password, the correct master password will
decrypt both vaults to the same set of passwords, whereas
a wrong master password will decrypt to diﬀerent decoys
with high probability. It is unclear how this problem can be
avoided, both for static and adaptive vaults.
7. CONCLUSION
There are various attacks against cracking-resistant vaults,
of which distribution-based attacks are only one possible
class. We showed that the proposed NoCrack NLE, which
is based on a PCFG model, is too simple. We highlighted
that the inability to distinguish, of the applied SVM-based
machine learning engine, does not serve as a lower-bound se-
curity guarantee. Rather, we provided a distribution-based
attack, utilizing KL divergence, which can distinguish real
from decoy vaults. Additionally, we described further issues
that need to be considered for the construction of a well-
performing NLE. Next, we demonstrated that our proposed
n-gram model outperforms the PCFG-based solution. More-
over, we introduced the notion of adaptive NLEs, where the
generated distribution of decoy vaults depends on the actual
passwords stored in the vault. This makes it unnecessary to
“predict” the changes in password distributions over time,
an inherent ﬂaw of static NLEs. Unfortunately, the lack
of real-world statistics and sample data on vaults does not
exactly ease the situation in vault security research.
8. ACKNOWLEDGMENTS
This work was supported by the German Research Foun-
dation (DFG) Research Training Group GRK 1817/1.
9. REFERENCES
[1] AgileBits, Inc. 1Password Support: Technical
Document – OPVault Format, Dec. 2012.
https://support.1password.com/opvault-design, as of
August 16, 2016.
[2] D. V. Bailey, M. D¨urmuth, and C. Paar. Statistics on
Password Re-use and Adaptive Strength for Financial
Accounts. In Conference on Security and Cryptography
for Networks, pages 218–235. Springer, 2014.
[3] H. Bojinov, E. Bursztein, X. Boyen, and D. Boneh.
Kamouﬂage: Loss-resistant Password Management. In
European Conference on Research in Computer
Security, pages 286–302. Springer, 2010.
[4] J. Bonneau. Guessing Human-chosen Secrets. PhD
thesis, University of Cambridge, 2012.
[5] J. Bonneau, C. Herley, P. C. van Oorschot, and
F. Stajano. The Quest to Replace Passwords: A
Framework for Comparative Evaluation of Web
Authentication Schemes. In IEEE Security and
Privacy, pages 553–567. IEEE, 2012.
[6] C. Castelluccia, A. Chaabane, M. D¨urmuth, and
D. Perito. When Privacy Meets Security: Leveraging
Personal Information for Password Cracking. CoRR,
abs/1304.6584, 2013.
[7] C. Castelluccia, M. D¨urmuth, and D. Perito. Adaptive
Password-Strength Meters from Markov Models. In
Network and Distributed System Security. Internet
Society, 2014.
[8] R. Chatterjee. NoCrack Password Vault, Sept. 2015.
https://github.com/rchatterjee/nocrack, as of August
16, 2016.
[9] R. Chatterjee, J. Bonneau, A. Juels, and
T. Ristenpart. Cracking-Resistant Password Vaults
using Natural Language Encoders. In IEEE Security
and Privacy, pages 481–498. IEEE, 2015. Full Version:
https://eprint.iacr.org/2015/788, as of August 16,
2016.
Probabilistic Password Models. In IEEE Security and
Privacy, pages 689–704. IEEE, 2014.
[22] D. McCarney, D. Barrera, J. Clark, S. Chiasson, and
P. C. van Oorschot. Tapas: Design, Implementation,
and Usability Evaluation of a Password Manager. In
Annual Computer Security Applications Conference,
pages 89–98. ACM Press, 2012.
[23] A. Narayanan and V. Shmatikov. Fast Dictionary
Attacks on Passwords Using Time-space Tradeoﬀ. In
ACM Computer and Communications Security, pages
364–372. ACM, 2005.
[10] A. Das, J. Bonneau, M. Caesar, N. Borisov, and
[24] A. Peslyak. John the Ripper’s Cracking Modes, the
X. Wang. The Tangled Web of Password Reuse. In
Network and Distributed System Security. Internet
Society, 2014.
“Single Crack” Mode, May 2013.
http://www.openwall.com/john/doc/MODES.shtml,
as of August 16, 2016.
[11] M. D¨urmuth, F. Angelstorf, C. Castelluccia, D. Perito,
[25] S. Proﬁs. The Guide to Password Security, Jan. 2016.
and A. Chaabane. OMEN: Faster Password Guessing
Using an Ordered Markov Enumerator. In
International Symposium on Engineering Secure
Software and Systems, pages 119–132. Springer, 2015.
[12] D. Florˆencio, C. Herley, and P. C. van Oorschot.
Password Portfolios and the Finite-Eﬀort User:
Sustainably Managing Large Numbers of Accounts. In
USENIX Security Symposium, pages 465–479.
USENIX Association, 2014.
[13] P. Gasti and K. B. Rasmussen. On the Security of
Password Manager Database Formats. In European
Symposium on Research in Computer Security, pages
770–787. Springer, 2012.
[14] J. Goldberg. On Hashcat and Strong Master
Passwords as Your Best Protection, Apr. 2013.
https://blog.agilebits.com/2013/04/16/
1password-hashcat-strong-master-passwords/, as of
August 16, 2016.
[15] A. Greenberg. Password Manager LastPass Got
Breached Hard, June 2015.
https://www.wired.com/2015/06/
hack-brief-password-manager-lastpass-got-breached-hard/,
as of August 16, 2016.
[16] M. Horsch, M. Schlipf, J. Braun, and J. Buchmann.
Password Requirements Markup Language. In
Australasian Conference on Information Security and
Privacy, pages 426–439. Springer, 2016.
[17] A. Juels and T. Ristenpart. Honey Encryption:
Security Beyond the Brute-Force Bound. In Advances
in Cryptology - EUROCRYPT, pages 293–310.
Springer, 2014.
http://www.cnet.com/how-to/
the-guide-to-password-security-and-why-you-should-care/,
as of August 16, 2016.
[26] A. Rabkin. Personal Knowledge Questions for Fallback
Authentication: Security Questions in the Era of
Facebook. In USENIX Symposium on Usable Privacy
and Security, pages 13–23. USENIX Association, 2008.
[27] D. Reichl. KeePass Help Center: Protection against
Dictionary Attacks, June 2016.
http://keepass.info/help/base/security.html, as of
August 16, 2016.
[28] S. Schechter, A. J. B. Brush, and S. Egelman. It’s No
Secret. Measuring the Security and Reliability of
Authentication via “Secret” Questions. In IEEE
Security and Privacy, pages 375–390. IEEE, 2009.
[29] D. Silver, S. Jana, D. Boneh, E. Chen, and
C. Jackson. Password Managers: Attacks and
Defenses. In USENIX Security Symposium, pages
449–464. USENIX Association, 2014.
[30] J. Steube. Introducing PRINCE. In International
Conference on Passwords, pages 1–42. Springer, 2014.
[31] B. Stock and M. Johns. Protecting Users Against
XSS-based Password Manager Abuse. In ACM
Symposium on Information, Computer and
Communications Security, pages 183–194. ACM, 2014.
[32] B. Ur, F. Noma, J. Bees, S. M. Segreti, R. Shay,
L. Bauer, N. Christin, and L. F. Cranor. ”I Added ’!’
at the End to Make It Secure”: Observing Password
Creation in the Lab. In USENIX Symposium on
Usable Privacy and Security, pages 123–140. USENIX
Association, 2015.
[18] B. Kaliski. PKCS #5: Password-Based Cryptography
[33] R. Veras, C. Collins, and J. Thorpe. On the Semantic
Speciﬁcation Version 2.0. RFC 2898, RFC Editor,
Sept. 2000.
[19] A. Karole, N. Saxena, and N. Christin. A
Comparative Usability Evaluation of Traditional
Password Managers. In International Conference on
Information Security and Cryptology, pages 233–251.
Springer, 2010.
Patterns of Passwords and their Security Impact. In
Network and Distributed System Security. Internet
Society, 2014.
[34] M. Weir, S. Aggarwal, B. D. Medeiros, and B. Glodek.
Password Cracking Using Probabilistic Context-Free
Grammars. In IEEE Security and Privacy, pages
391–405. IEEE, 2009.
[20] Z. Li, W. He, D. Akhawe, and D. Song. The
[35] F. Wiemer and R. Zimmermann. High-Speed
Emperor’s New Password Manager: Security Analysis
of Web-based Password Managers. In USENIX
Security Symposium, pages 465–479. USENIX
Association, 2014.
[21] J. Ma, W. Yang, M. Luo, and N. Li. A Study of
Implementation of bcrypt Password Search using
Special-Purpose Hardware. In International
Conference on ReConFigurable Computing and
FPGAs, pages 1–6. IEEE, 2014.