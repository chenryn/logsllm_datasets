Betrayal of Reputation
Trusting the Untrustable Hardware and Software with Reputation
Seunghun Han
Senior Security Researcher at National Security Research Institute
29 May 2019
- Senior security researcher at NSR (National Security 
Research Institute of South Korea)
- Influencer Member of Black Hat Asia 2019
- Review Board Member of KIMCHICON
- Speaker at
- USENIX Security 2018 
- Black Hat Asia 2017 - 2019
- HITBSecConf 2016 - 2017
- BeVX and KIMCHICON 2018
- Author of “64-bit multi-core OS principles and structure, Vol. 1 and Vol. 2)
- a.k.a kkamagui
@kkamagui1
Who Am I?
- Introduce a stereotype about reputation 
- REPUTATION does not mean TRUSTWORTHINESS!
- Unfortunately, we easily trust something because of REPUTATION!
- Present the case that the reputation betrays you
- BIOS/UEFI firmware and Trusted Platform Module (TPM) were made 
by REPUTABLE companies!
- However, I found two vulnerabilities, CVE-2017-16837 and CVE-2018-
6622, that can subvert the TPM
- Present countermeasures and what we should do
- Trust nothing with REPUTATION and check everything for yourself!
Goal of This Talk
Previous Works
Reputation
is based on
trust!
We just believe
products
of reputable companies
trustable
Reputable Companies
(High Price)
Other Companies
(Low Price)
for you!
for presents!
Reputable Companies
(High Price)
Other Companies
(Low Price)
for you!
for presents!
I KNOW WHAT YOU DID
FOR THE PRESENTS!
Trusted Building Block
Root of Trust for Measurement
Core RTM
Reputable products
are really
trustable?
Reputable
Trustable!
Everyone has a plan, 
until they get punched in the mouth.
- Mike Tyson
Everyone has a plan, 
until they get punched in the mouth.
- Mike Tyson
Every researcher has a plan, 
until they encounter their manager.
- Unknown
You
Every researcher has a plan, 
until they encounter their manager.
- Unknown
Manager
CEO
Timeline
~~
Happiness
0
5
10
- 10
- 5
- 1000
- 100
2017
2018
2019
Time
(year)
First Encounter
Second Encounter
CVE-2017-
16837
CVE-2018-
6622
USENIX
Security
Black Hat
Asia
Black Hat Asia
with Napper
~~
Happiness
0
5
10
- 10
- 5
- 1000
- 100
2017
2018
2019
Time
(year)
First Encounter
Second Encounter
CVE-2017-
16837
CVE-2018-
6622
USENIX
Security
Black Hat
Asia
Black Hat Asia
with Napper
Contents - Background
Trusted Computing Group (TCG)
- Defines global industry specifications and standards
- All reputable companies such as Intel, AMD, IBM, HP, Dell, Lenovo, 
Microsoft, Cisco, Juniper Networks, and Infineon are members of it
- Is supportive of a hardware root of trust
- Trusted Platform Module (TPM) is the core technology
- TCG technology has been applied to Unified Extensible Firmware 
Interface (UEFI)
Trusted Computing Base (TCB) of TCG
- Is a collection of software and hardware on a host 
platform
- Manages and enforces a security policy of the system
- Is able to prevent itself from being compromised
- The Trusted Platform Module (TPM) helps to ensure that the TCB is 
properly instantiated and trustworthy
Trusted Platform Module (TPM) (1)
- Is a tamper-resistant device
- Has own processor, RAM, ROM, and 
non-volatile RAM
- It has own state separated from the system
- Provides cryptographic and accumulating measurements 
functions
- Measurement values are accumulated to Platform Configuration 
Registers (PCR #0~#23)
Trusted Platform Module (TPM) (2)
- Is used to determine the trustworthiness of a system by 
investigating the values stored in PCRs
- A local verification or remote attestation can be used
- Is used to limit access to secret data based on specific PCR 
values
- “Seal” operation encrypts secret data with the PCRs of the TPM
- “Unseal” operation can decrypt the sealed data only if the PCR values 
match the specific values
Root of Trust for Measurement (RTM)
- Sends integrity-relevant information (measurements) to 
the TPM
- TPM accumulates the measurements to a PCR with the previously 
stored value in the PCR
- Is the CPU controlled by Core RTM (CRTM)
- The CRTM is the first set of instructions when a new chain of trust is 
established
Extend: PCRnew = Hash(PCRold || Measurementnew)
Static and Dynamic RTM (SRTM and DRTM)
- SRTM is started by static CRTM (S-CRTM) when the host 
platform starts at POWER-ON or RESTART
- DRTM is started by dynamic CRTM (D-CRTM) at runtime 
WITHOUT platform RESET
- They extend measurements (hashes) of components to 
PCRs BEFORE passing control to them
: Extend a hash of next code to the TPM
: Execute next code
BIOS/UEFI firmware
BIOS/UEFI
Code
TPM
Bootloader
Kernel
User
Applications
Static Root of Trust for Measurement (SRTM)
S-CRTM
Power On/
Restart
D-CRTM
(SINIT, DCE)
TPM
tboot
(DLME)
Dynamic Root of Trust for Measurement (DRTM)
(Intel Trusted Execution Technology)
Untrusted
Code
DL Event
Bootloader
User
Applications
Kernel
DLME: Dynamically Launched Measured Environment
DL Event : Dynamic Launch Event
DCE: DRTM Configuration Environment
DRTM
SRTM
PCR Protection
- They MUST NOT be reset by disallowed operations even 
though an attacker gains a root privilege!
- Static PCRs (PCR #0~#15) can be reset only if the host resets
- Dynamic PCRs (PCR #17~#22) can be reset only if the host initializes 
the DRTM
- If PCRs are reset by attackers, they can reproduce specific 
PCR values by replaying hashes
- They can steal the secret and deceive the local and remote 
verification
We trust all these mechanisms
because of REPUTATION!
Fortunately, they worked!
We trust all these mechanisms
because of REPUTATION!
UNTIL I PUBLISHED 
THE VULNERABILITIES!
Fortunately, they worked!
YOU BETRAY ME!
~~
Happiness
0
5
10
- 10
- 5
- 1000
- 100
2017
2018
2019
Time
(year)
First Encounter
Second Encounter
CVE-2017-
16837
CVE-2018-
6622
USENIX
Security
Black Hat
Asia
Black Hat Asia
with Napper
Contents - CVE-2017-16837
Intel Trusted Execution Environment (TXT)
- Is the DRTM technology of TCG specification
- Intel just uses their own terminologies
- ex) DCE = Secure Initialization Authenticated Code Module (SINIT ACM)
DLME = Measured Launched Environment (MLE)
- Has a special command (SENTER and  SEXIT) to enter 
trustworthy state and exit from it
- SENTER checks if SINIT ACM has a valid signature
- Intel publishes SINIT ACM on the website
Trusted Boot (tBoot)
- Is a reference implementation of Intel TXT
- It is an open source project (https://sourceforge.net/projects/tboot/)
- It has been included many Linux distros such as RedHat, SUSE, and 
Ubuntu
- Can verify OS and Virtual Machine Monitor (VMM)
- It measures OS components and stores hashes to the TPM
- Measured results in PCRs of the TPM can be verified by a remote 
attestation server such as Intel Open CIT
- It is typically used in server environments
Boot Process of tBoot
CRTM
BIOS/UEFI
Code
GRUB
Pre-
Launch
Code
Kernel
initrd
Remote
Attestation
Tool
Static PCRs (PCR#0-15)
Dynamic PCRs (PCR#17-22)
SINIT
ACM
(DCE)
Post-
Launch
Code
CPU
tBoot (DLME)
TPM
Microcode
SENTER
(DL event)
: Execution
: Measurement
PCR #17
PCR #17~
#19
R.A. Server
Attestation
Boot process is
perfect!
How about 
sleep process?
Advanced Configuration and Power Interface (ACPI) 
and Sleeping States
- Cut off the power of…
- S0: Normal, no context is lost
- S1: Standby, the CPU cache is lost
- S2: Standby, the CPU is POWERED OFF
- S3: Suspend, CPU and devices are POWERED OFF
- S4: Hibernate, the CPU, devices, and RAM are POWERED OFF
- S5: Soft Off, all parts are POWERED OFF
TPM is also POWERED OFF!
Code is measured again while waking up!
Resume
Restart DRTM
Measure
Again!
Waking Up Process of the DRTM
Sleep Process with tBoot
Seal S3 key and MAC of Kernel Memory with Post-Launch PCRs
Save Static PCRs(0~16)
- seal_post_k_state() → g_tpm->seal()
- tpm->save_state()
- shutdown_system()
Shutdown Intel TXT
- txt_shutdown()
Sleep. Power off the CPU and the TPM!
Launch MLE again and then, Unseal S3 key and MAC with P-Launch 
PCRs
Extend PCRs and Resume Kernel
Wake Up, Restore Static PCRs, and Resume tBoot
- Real Mode, Single CPU
- begin_launch() → txt_s3_launch_environment()
- post_launch() → s3_launch() → verify_integrity() → g_tpm->unseal()
- verify_integrity() → extends_pcrs() →g_tpm→extend()
- s3 launch()-> prot to real()
Sleep Process with tBoot
Seal S3 key and MAC of Kernel Memory with Post-Launch PCRs
Save Static PCRs(0~16)
- seal_post_k_state() → g_tpm->seal()
- tpm->save_state()
- shutdown_system()
Shutdown Intel TXT
- txt_shutdown()
Sleep. Power off the CPU and the TPM!
Launch MLE again and then, Unseal S3 key and MAC with P-Launch 
PCRs
Extend PCRs and Resume Kernel
Wake Up, Restore Static PCRs, and Resume tBoot
- Real Mode, Single CPU
- begin_launch() → txt_s3_launch_environment()
- post_launch() → s3_launch() → verify_integrity() → g_tpm->unseal()
- verify_integrity() → extends_pcrs() →g_tpm→extend()
- s3 launch()-> prot to real()
?!
“Lost Pointer” Vulnerability
(CVE-2017-16837)
Memory Layout of tBoot
Multiboot Header
Code (.text)
Read-Only Data 
(.rodata)
Uninitialized Data
(.bss)
Measured by Intel TXT!
_mle_start
_mle_end
…
Initialized Data 
(.data)
struct tpm_if *g_tpm
struct tpm_if tpm_12_if
struct tpm_if tpm_20_if
“Lost Pointer” Vulnerability
(CVE-2017-16837)
Memory Layout of tBoot
Multiboot Header
Code (.text)
Read-Only Data 
(.rodata)
Uninitialized Data
(.bss)
Measured by Intel TXT!
_mle_start
_mle_end
…
Initialized Data 
(.data)
struct tpm_if *g_tpm
struct tpm_if tpm_12_if