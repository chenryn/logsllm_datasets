# Table 3: Control Overheads as a Percentage of Successfully Received Data Packets
These numbers are for the optimized flooding algorithm. "NC" stands for "not complete," indicating that the simulation ran out of memory.

| NC | 2.37% | 2.95% |
|----|-------|-------|
|    | 2.72% | 3.20% |
|    | 3.06% | 3.72% |
|    | 3.69% |       |
|    | 3.12% | 4.00% |
|    | 2.22% | 2.66% |
|    | 2.65% | 2.97% |
|    | 2.65% | 3.09% |

## Analysis of Control Overheads

The control overheads, expressed as a percentage of successfully received data packets, are shown in Table 3. These results are for the optimized flooding algorithm. The term "NC" (not complete) indicates that the simulation ran out of memory.

### Update Frequency and Bursty Traffic
The update frequency decreases over time, meaning that the rate at which updates are sent by the triggering process increases much more slowly compared to the sending rates. Additionally, the overheads for bursty traffic sources are slightly higher than those for CBR (Constant Bit Rate) sources. This is expected because bursty sources cause more unpredictable changes in traffic patterns compared to CBR sources.

### Effect of Flooding Optimization
Figure 6 illustrates the effect of the flooding optimization on control overheads for bursty traffic sources. For each topology, the comparison figures are shown for the highest sending rate at which the simulation could be completed without running out of memory. The results indicate a 7-fold improvement in terms of the percentage of control packets. The improvements in delay and jitter times were similar in both the optimized and unoptimized cases. Note that all previous results were based on the optimized version of the PBTA (Potential-Based Traffic-Aware) algorithm.

## Scatter Plot of Mean Transit Times
Figures 5(a), 5(b), and 5(c) show the mean end-to-end delay times for the three networks using a Pareto traffic generator.

- **WAX Network, Pareto Traffic**
- **BA Network, Pareto Traffic**
- **ISP Network, Pareto Traffic**

## Impact on Route Stability
The results also indirectly suggest that for any network node \( v \), the routes to distant destinations change less frequently than routes to nearby destinations. In other words, route fluctuations are confined to destinations close to \( v \), thereby improving the stability of routes.

## Packet Loss Rates
Finally, we estimated the effect of the PBTA algorithm on packet losses in the network by running simulations with both CBR and bursty traffic sources. The queue size for each scenario was set to 10,000 packets. Table 4 shows the results for the maximum send rates at which the simulation could run without running out of memory. The table presents the ratio of the number of packets dropped using the shortest path algorithm to the number of packets dropped using the PBTA algorithm. The results indicate that the number of packets dropped improved by a factor of 3 to 5 when the PBTA algorithm was used. The improvement factor is approximately the same for both CBR and bursty traffic across all three topologies.

## Summary
We have demonstrated that the PBTA algorithm significantly improves end-to-end delay, jitter, and packet loss rates, while maintaining reasonable control overheads and reordering only a small fraction of TCP packets. These characteristics make the PBTA algorithm an attractive alternative for routing in the future Internet.

## Related Work
The steepest gradient search method has been well-studied and applied in various fields, including path planning in robotics, artificial intelligence, and Monte Carlo simulations in statistical physics. The basic idea is to optimize a non-linear function by evaluating it at an initial point and then moving towards an optimal point by executing small steps in the direction of the steepest gradient. In our work, we adapted this method to identify the direction for routing packets in a data network, avoiding highly congested areas by assigning carefully designed potentials based on traffic experienced at a network node.

## Conclusion and Future Work
In this paper, we applied the steepest gradient-based search to Internet routing, developing a routing paradigm called PB-routing. The key concept is to define a scalar potential field on the network and route packets in the direction of the maximum force (steepest positive gradient in the potential field). We showed that this methodology produces loop-free routes and significantly improves end-to-end delays and jitter without requiring excessive control overhead.

Future work will explore adapting the general PB-routing paradigm for various applications, such as providing differentiated services, applying similar techniques to ad hoc networks, and using PB-routing as an alternative routing methodology for overlay networks.

## Acknowledgments
We would like to thank our shepherd Sugih Jamin, the program chairs Jon Crowcroft and David Wetherall, Steve Simon, and the anonymous referees for their valuable comments.

## References
[References listed as in the original text]