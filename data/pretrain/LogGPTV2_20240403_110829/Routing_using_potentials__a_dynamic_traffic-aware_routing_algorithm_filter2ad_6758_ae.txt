NC
2.37% 2.95%
2.72% 3.20%
3.06% 3.72%
3.69%
3.12% 4.00%
2.22% 2.66%
2.65% 2.97%
2.65% 3.09%
Table 3: Control overheads as a percentage of successfully received data
packets. These numbers are for the optimized ﬂooding algorithm. NC
stands for not complete, i.e., ns ran out of memory.
dates go out less frequently. In other words, the rate at which updates
get sent out by the triggering process increases much more slowly than
the sending rates. Finally, the overheads for the bursty trafﬁc sources
are slightly higher than that for the CBR sources — this is to be ex-
pected since bursty sources cause more unpredictable changes in trafﬁc
patterns than CBR sources.
The effect of the ﬂooding optimization is shown in Figure 6 for
the bursty trafﬁc sources only. For each topology, we have shown
the comparison ﬁgures for the highest sending rate for which ns was
able to complete execution in the non-optimized case without running
out of memory. We see that there is a 7-fold improvement in terms
of the percentage of control packets while the improvements in the
delay and the jitter times were similar in both cases (the delay and the
jitter data for the unoptimized case are not shown here due to lack of
space). We point out here that all the previous results were shown for
the optimized version of the PBTA algorithm.
Scatter Plot of Mean Transit Times
WAX network, Pareto
Scatter Plot of Mean Transit Times
BA Network, Pareto
Scatter Plot of Mean Transit times
ISP Network, Pareto Traffic
60
50
40
30
20
10
P
P
S
1.5 Mbps
1.2 Mbps
1 Mbps
15
P
P
S
10
5
1.2 Mbps
1 Mbps
0.8 Mbps
25
20
P
P
S
15
10
5
1.5 Mbps
1.2 Mbps
1 Mbps
0
10
20
30
40
50
2
4
6
8
10
5
10
15
20
25
30
35
PBTA
(a)
PBTA
(b)
PBTA
(c)
Figure 5: (a) through (c) show the mean end-to-end delay times for the three networks using a Pareto trafﬁc generator.
no opt
opt
Topology
WAX
BA
BA
ISP
Rate
1.2Mbps
1.2Mbps
1.0Mbps
1.2Mbps
CBR Pareto
3.00
3.03
4.81
5.00
3.14
4.44
s
d
a
e
h
r
e
v
o
l
o
r
t
n
o
c
f
o
%
30
20
10
0
WAX 1.0Mbps
BA 1.2Mbps
ISP 1.5Mbps
Figure 6: The effect of the ﬂooding optimization on control overheads for
bursty sources. The bars show the percentage of control overheads in both
the optimized and the unoptimized cases.
We also note that these results indirectly indicate that for any net-
work node v, the routes to destinations that are distant change much
less frequently than routes to destinations that are close by. In other
words, route ﬂuctuations are conﬁned to destinations that are close to
v and thereby improves the stability of routes.
Packet Loss Rates. Finally, we estimated the effect of the PBTA
algorithm on packet losses in the network by running simulations on
all the networks using both CBR and bursty trafﬁc sources. The queue
size for each scenario was set to 10000 packets. In Table 4, we show
the results corresponding to the maximum send rates for which we
could run ns without running out of memory. The numbers in the ta-
ble show the ratio of the number of packets dropped using the shortest
path algorithm to the number of packets dropped using the PBTA al-
gorithm. We see that the number of packets dropped improved by a
factor of 3 to 5 when the PBTA algorithm was used. The improve-
ment factor is approximately the same for both CBR and bursty trafﬁc
for all the three topologies.
Summary. We have shown that the PBTA algorithm produces sig-
niﬁcant improvements in end-to-end delay, jitter, and packet loss rates,
has very reasonable control overheads, and reorders a small fraction of
TCP packets. These characteristics make the PBTA algorithm an at-
tractive alternative for routing in the future Internet.
5. Related Work
The steepest gradient search method [23] has been well studied in
the past. This method has been extensively used for optimization prob-
lems and has had applications in such diverse disciplines as path plan-
ning in robotics [8, 15], artiﬁcial intelligence [30], and monte-carlo
Table 4: Loss rate improvements for the three topologies. All sending
rates were 1.2Mbps, except the CBR rate for the BA topology, which was
1.0Mbps (ns ran out of memory for the 1.2Mbps rate). The table shows the
factor by which the number of dropped packets went down.
simulations in statistical physics [6]. The basic idea in steepest gra-
dient search is to optimize a (non-linear) function by evaluating the
function at an initial point and then moving towards an optimal point
by executing small steps in the direction of the steepest gradient. In our
work, we have adapted this method to identify the direction in which
to route packets in a data network such that highly congested areas in
the network are avoided. This is accomplished by assigning carefully
designed potentials based on trafﬁc experienced at a network node.
The area of trafﬁc-aware routing (i.e., routing techniques that take
into account trafﬁc conditions) has also been studied extensively both
from both practical and theoretical perspectives. One practical ap-
proach [2] uses probe packets to estimate delays and loss rates that are
used to compute long term averages of these metrics. These averages
are then used to route packets over paths with low delays and/or loss
rates. A different method is to use emergency exits [28] where, on en-
countering congestion, a packet is routed along a previously computed
alternative path to the destination.
Another work has proposed the idea of splitting the trafﬁc into long
lived and short lived IP ﬂow patterns [24]. Trafﬁc-aware (or load sen-
sitive, as this work calls it) routing is used only for the long lived ﬂows.
Such a technique improves the stability of the routing algorithm and
the allocation of resources for long lived ﬂows. This is achieved by pe-
riodic (but rare) distribution of link-state updates that limits the control
overheads. We believe that it is possible to use PB-routing in conjunc-
tion with the methods described in this work to route the long lived
ﬂows.
From a theoretical perspective, almost all of the algorithms that have
been developed require a point-to-point trafﬁc demand matrix to be
speciﬁed. One class of algorithms uses link utilization as a measure
of trafﬁc and attempts to minimize the maximum (or worst-case) link
utilization, given a set of point-to-point trafﬁc demands. These algo-
rithms are known as “maximum concurrent ﬂow” algorithms for which
both exact [1] and approximate [9, 11] solutions are known.
Other algorithms have attempted to minimize end-to-end delay mod-
eled as a convex function of trafﬁc. One of the earliest works in this
area was Gallager’s minimum-delay routing algorithm [5]. Modiﬁca-
tions to this work assume minor ﬂuctuations of trafﬁc about an other-
wise “equilibrium pattern” [3, 27]. A similar work in this area [16]
uses a closed queueing model to optimize network delays.
A different technique is to reduce delay (and congestion) by assign-
ing static OSPF link weights based on a known trafﬁc demand ma-
trix [10]. All of the algorithms that optimize delay assuming known
(and static) trafﬁc patterns can be shown to be optimal (or close to
optimal), typically by following Gallager’s bounds. Our work com-
plements these algorithms in the sense that it tolerates more dynamic
trafﬁc patterns but provides performance improvements that are of a
statistical nature.
6. Conclusion and Future Work
In this paper, we have applied the idea of steepest gradient based
search to Internet routing to develop a routing paradigm called PB-
routing. The key concept here is to deﬁne a scalar potential ﬁeld on the
network and route packets in the direction of maximum force (steep-
est positive gradient in the potential ﬁeld). We have described how
this idea can be adapted to provide dynamic, trafﬁc-aware routing by
designing a trafﬁc-based potential. Since our trafﬁc-based potential is
dominated by large, (and hence) slowly-varying queues, our routing al-
gorithm is relatively stable and tolerant of dynamic trafﬁc conditions.
Using a combination of analytic methods and simulations, we have
shown that this methodology produces loop-free routes and causes sig-
niﬁcant improvements in end-to-end delays and jitter without requiring
too much control overhead.
We believe that the general PB-routing paradigm can be adapted for
a variety of applications. First, we can envisage providing differenti-
ated services by setting the relative weight of the trafﬁc-based potential
differently for different trafﬁc classes. Priority trafﬁc would thus ex-
perience lower end-to-end delays and jitter. Second, it is possible to
apply similar techniques to adhoc networks. For example, we can use
PB-routing to compute paths to route around congested areas, and even
create new links on the ﬂy to alleviate congestion by following direc-
tions of maximum force. Third, PB-routing could be used as an alter-
native routing methodology for overlay networks by using application
speciﬁc metrics as potential functions. These and other applications
would be the subject of future work in this area.
Acknowledgments
We would like to thank our shepherd Sugih Jamin, the program chairs
Jon Crowcroft and David Wetherall, Steve Simon, and the anonymous
referees for their valuable comments.
7. References
[1] R. Ahuja, T. Magnanti, and J. Orlin. Network Flows: Theory, Algorithms,
and Applications. Prentice Hall, Englewood Cliffs, NJ, 1993.
[2] D. Andersen, H. Balakrishnan, M. F. Kaashoek, and R. Morris. Resilient
Overlay Networks. In Proceedings of the 18th ACM Symposium on Op-
erating System Principles, pages 131–145, Chateau Lake Louise, Banff,
Canada, October 2001.
[3] E. J. Anderson, T. E. Anderson, S. D. Gribble, A. R. Karlin, and
S. Savage. A Quantitative Evaluation of Trafﬁc-Aware Routing Strate-
gies. ACM SIGCOMM Computer Communication Review, 32(1):67–67,
January 2002.
[4] A. L. Barab´asi and R. Albert. Emergence of Scaling in Random Networks.
Science, 286:509–512, 1999.
[5] D. Bertsekas and R. Gallager. Second Derivative Algorithm for Minimum
Delay Distributed Routing in Networks. IEEE Transactions on Commu-
nications, 32(8):911–919, 1984.
[6] K. Binder and D. W. Heermann. Monte Carlo Simulation in Statistical
Physics. Springer Verlag, Berlin, Germany, 4th edition, August 2002.
[7] E. W. Dijkstra. A Note on Two Problems in Connexion with Graphs. Nu-
merische Mathematik, 1:269–271, 1959.
[8] B. Faverjon and P. Tournassoud. A Local Based Approach for Path Plan-
ning of Manipulators with a High Number of Degrees of Freedom. In
Proceedings of IEEE International Conference on Robotics and Automa-
tion, pages 1152–1159, March 1987.
[9] L. K. Fleischer. Approximating Fractional Multicommodity Flow Inde-
pendent of the Number of Commodities. In Proceedings of the 40th An-
nual Symposium on Foundations of Computer Science, pages 24–31, New
York, NY, October 1999.
[10] B. Fortz and M. Thorup. Internet Trafﬁc Engineering by Optimizing
OSPF Weights. In Proceedings of Infocom ’00, pages 519–528, Tel Aviv,
Israel, March 2000.
[11] N. Garg and J. Konemann. Faster and Simpler Algorithms for Multicom-
modity Flow and Other Fractional Packing Problems. In Proceedings of
the 39th Annual Symposium on Foundations of Computer Science, pages
300–309, Palo Alto, CA, November 1998.
[12] V. Guruswami, S. Khanna, R. Rajaraman, F. B. Shepherd, and M. Yan-
nakakis. Near-Optimal Hardness Results and Approximation Algorithms
for Edge-Disjoint Paths and Related Problems. In Proceedings of the 31st
ACM Symposium on Theory of Computing, pages 19–28, Atlanta, GA,
May 1999.
[13] S. Herzog. RSVP Extensions for Policy Control. RFC 2750, IETF, Jan-
uary 2000.
[14] J. D. Jackson. Classical Electrodynamics. John Wiley & Sons, New York,
NY, 3rd edition, August 1998.
[15] O. Khatib and J. F. Le Maitre. Dynamic Control of Manipulators Op-
erating in A Complex Environment. In Proceedings of the 3rd CISM-
IFToMM, Udine, Italy, 1978.
[16] H. Kobayashi and M. Gerla. Optimal Routing in Closed Queuing Net-
works. ACM Transactions on Computer Systems, 1(4):294–310, Novem-
ber 1983.
[17] E. Kreyszig. Advanced Engineering Mathematics. John Wiley & Sons,
New York, NY, 8th edition, December 1998.
[18] A. Medina, A. Lakhina, I. Matta, and J. Byers. BRITE: An approach
to Universal Topology Generation. In Proceedings of the International
Workshop on Modeling, Analysis and Simulation of Computer and
Telecommunications Systems, Cincinnati, OH, August 2001.
[19] J. Moy. OSPF Version 2. RFC 2328, IETF, April 1998.
[20] The Network Simulator — ns-2. http://www.isi.edu/nsnam/ns/.
[21] V. Paxson and S. Floyd. Wide Area Trafﬁc: The Failure of Poisson Mod-
eling. IEEE/ACM Transactions on Networking, 3(3):226–244, 1995.
[22] W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Vetterling. Nu-
merical Recipes in C. Cambridge University Press, Cambridge, UK, 2nd
edition, January 1993.
[23] R. L. Rardin. Optimizations in Operations Research. Prentice Hall, Upper
Saddle River, NJ, 1998.
[24] A. Shaikh, J. Rexford, and K. G. Shin. Load-Sensitive Routing of Long-
Lived IP Flows. In Proceedings of SIGCOMM ’99, pages 215–226,
Boston, MA, August–September 1999.
[25] W. R. Stevens. TCP/IP Illustrated, volume 1. Addison-Wesley, Boston,
MA, January 1994.
[26] L. Tassiulas and A. Ephremides. Stability Properties of Constrained
Queueing Systems and Scheduling Policies for Maximum Through-
put in Multihop Networks. IEEE Transactions on Automatic Control,
37(12):1936–1948, December 1992.
[27] S. Vutukury and J. J. Garcia-Luna-Aceves. A Simple Approximation to
Minimum Delay Routing. In Proceedings of SIGCOMM ’99, pages 227–
238, Boston, MA, August–September 1999.
[28] Z. Wang and J. Crowcroft. Shortest Path First with Emergency Exits. In
Proceedings of SIGCOMM ’90, pages 166–176, Philadelphia, PA, August
1990.
[29] B. Waxman. Routing of Multipoint Connections. IEEE Journal on Se-
lected Areas in Communications, 6(9):1617–1622, December 1998.
[30] P. H. Winston. Artiﬁcial Intelligence. Addison Wesley, Boston, MA, 3rd
edition, January 1992.