### Optimized Text

#### 2.1 Timing Analysis
Let \( T_1 \) be the time of arrival of the last RTP packet before the fake BYE/REINVITE message. Assume, without loss of generality, that this message originates from the sender at time 0. Thus, \( T_1 \) represents the transport delay for this RTP packet. Let \( T_{\text{SIP}} \) be the time of arrival of the SIP message. Let \( T_2 \) be the time of arrival of the next RTP packet, which is generated 20 ms after the previous RTP packet.

We assume that the fake SIP message is generated after the first RTP packet but before the second RTP packet. Upon receiving the SIP message, the IDS system monitors for RTP packets for a total duration of \( m \) milliseconds. Clearly, \( T_1 \), \( T_2 \), and \( T_{\text{SIP}} \) are random variables, while \( m \) is a fixed value. The detection delay \( D \) is a function of these four parameters:
\[ D = T_2 - T_{\text{SIP}} \]

The random variables \( N_{\text{RTP}} \) and \( N_{\text{SIP}} \) represent the network delays for each packet. If the fake SIP message is generated uniformly between 0 and 20 ms, and the network delay is assumed to be independent and identical for all packets, the expected detection delay is 10 ms, which is half of the RTP packet generation period.

#### 2.2 Probability of Missed Alarm
Since the detection depends on monitoring after a SIP message arrival and the monitoring interval is finite (\( m \)), there is a probability that the IDS system may not detect the intrusion. For example, if subsequent RTP packets from the original sender are lost in the network and no RTP packet arrives within the monitoring interval, no alarm will be raised. The probability of a missed alarm is given by:
\[ P_f = \Pr(T_2 > T_{\text{SIP}} + m) = \Pr(N_{\text{RTP}} - G_{\text{SIP}} - N_{\text{SIP}} > m - 20) \]

#### 2.3 Probability of False Alarm
Although rare, it is possible for a valid BYE message to arrive before the RTP packet if they take different routes. In this case, the IDS system will raise a false alarm. To compute this probability, we assume that the sender generates the valid SIP BYE/REINVITE immediately (with zero delay) after sending the last RTP packet. The false alarm probability is given by:
\[ P_f = \Pr(N_{\text{RTP}} < N_{\text{SIP}}) \]
If the density functions \( f_{N_{\text{RTP}}}(t) \) and \( f_{N_{\text{SIP}}}(t) \) are identical and independent, then:
\[ P_f = \int_0^m F_{N_{\text{SIP}}}(t) f_{N_{\text{RTP}}}(t) \, dt \]

### 5. Related Work
Currently, there are no dedicated IDS systems for VoIP. One possibility is to use a general-purpose network IDS like Snort [10]. Such a network-based IDS would sniff packets arriving at a host and attempt to find predefined patterns indicating an attack. However, if the target pattern is fragmented across multiple packets, the IDS may miss it. To address this, Snort includes an IP fragmentation-reassembly module and a stream4 reassembly module for TCP packets.

While Snort's matching infrastructure is versatile and effective for most network intrusions, it has two drawbacks for VoIP applications:
1. No reassembly functionality for grouping UDP packets in a VoIP session.
2. Detection is session-unaware, lacking stateful detection for VoIP sessions.

The WebSTAT system [1] provides stateful intrusion detection for web servers, building on STAT [11] to model multi-step, complex attacks. WebSTAT operates on multiple event streams, correlating network-level and operating system-level events with server logs. However, it is primarily an alert correlation engine and does not use considerable state across protocols. Additionally, the state is gathered from vertically layered elements in the protocol stack, whereas SCIDIVE performs state aggregation across concurrently executing application-level protocols.

Research on alert correlation methods [15, 16, 17] has focused on correlating elementary alerts based on properties such as pre-conditions and post-conditions. These can be adapted for SCIDIVE, but the modifications are non-trivial. SCIDIVE can also use aggregate alerts from these systems as events in its structure.

### 6. Conclusions
In this paper, we presented the design and implementation of SCIDIVE, an intrusion detection system for VoIP. The protected system uses multiple application protocols, with SIP and RTP used for signaling and data transport, respectively. SCIDIVE introduces two key abstractions: stateful detection and cross-protocol detection. Stateful detection aggregates state from multiple packets, while cross-protocol detection matches rules spanning multiple protocols. The system's capability is demonstrated through four types of attacks.

Future work will investigate cooperative detection between multiple SCIDIVE components, including their placement and the state exchange required. A challenge is designing an appropriate protocol that does not overwhelm the system with control messages. This may necessitate a hierarchical decomposition of the system, with different layers looking at different levels of abstraction. We plan to evaluate SCIDIVE's effectiveness and accuracy through simulated attacks, anticipating that detection accuracy will depend on the input rule base and the design of SCIDIVE components. The efficiency of the algorithm for creating events from footprints and matching them against the rule set will affect detection latency.

### References
[1] G. Vigna, W. Robertson, V. Kher, R.A. Kemmerer, “A Stateful Intrusion Detection System for World-Wide Web Servers,” In Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC ’03), December ‘03.
[2] ITU-T, “Packet-based multimedia communications systems,” Recommendation H.323, February 1998.
[3] M. Handley et al., “SIP: Session Initiation Protocol,” RFC 2543, March 1999.
[4] H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, "RTP: A Transport Protocol for Real-Time Applications," IETF, RFC 3550, July 2003, Available at: http://www.ietf.org/rfc/rfc3550.txt?number=3550.
[5] M. Arango et al., “Media Gateway Control Protocol (MGCP) Version 1.0,” RFC 2705, October 1999.
[6] F. Cuervo et al., “Megaco Protocol Version 1.0,” RFC 3015, November 2000.
[7] ITU-T, “Call Signaling protocols and media stream packetization for packet-based multimedia communication systems,” Recommendation H.225.0, February 1988.
[8] ITU-T, “Control protocol for multimedia communication,” Recommendation H.245, September 1988.
[9] Yu-Sung Wu, Bingrui Foo, Yongguo Mei, and Saurabh Bagchi, “Collaborative Intrusion Detection System (CIDS): A Framework for Accurate and Efficient IDS,” In Proceedings of the 19th Annual Computer Security Applications Conference (ACSAC ’03), December ‘03.
[10] M. Roesch, “Snort – Lightweight Intrusion Detection for Networks,” In Proceedings of USENIX LISA’99, November 1999.
[11] S.T. Eckmann, G. Vigna, and R.A. Kemmerer, “STATL: An Attack Language for State-based Intrusion Detection,” Journal of Computer Security, 10(1/2):71–104, 2002.
[12] CERT Coordination Center, Carnegie Mellon Software Engineering Institute, “Vulnerabilities, Incidents and Fixes.”
[13] “Prelude Hybrid IDS,” At: http://www.prelude-ids.org
[14] IBM Software, “IBM Tivoli Intrusion Manager,” At: http://www.ibm.com/software/tivoli/products/intrusion-mgr/
[15] P. A. Porras AND P. G. Neumann, “EMERALD: Event Monitoring Enabling Responses to Anomalous Live Disturbances,” in Proc. 20th National Information Systems Security Conference, October 1997, pp. 353-365.
[16] F. Cuppens and A. Miege, “Alert Correlation in a Cooperative Intrusion Detection Framework”, In IEEE Symposium on Security and Privacy, Oakland, USA, 2002.
[17] Peng Ning, Yun Cui, Douglas S. Reeves, “Constructing Attack Scenarios through Correlation of Intrusion Alerts”, In Proceedings of the ACM CCS 2002, pages 245-254, November 2002.