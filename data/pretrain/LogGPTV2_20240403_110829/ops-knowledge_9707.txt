User: 请解答这个和日志有关的问题How does a browser manage secure sessions and store session keys? I am interested in how a browser manages secure sessions. As I understand it this is the scenario when logging into a google account: 

1) Browser (B) and google Server (S) perform a handshake to create a secure session by encrypting http traffic using TLS or SSL. 

2) User (U) enters log in details

3) U is authenticated

4) U opens a tab to youtube, and is provided with an option to sign in using their google account.

5) U uses their google account, but is not required to enter any details as their browser still has a secure session with their google account.

My question is, how is steps 4-5 performed with respect to the browser, how does the webpage like youtube hoover up the passwords and session details to send to the youtube server? How does the browser store and manage this? 

I am familiar with the operation of protocols like sso and federated identity, but here I'm interested in writing a webpage/app capable of picking up this information from the browser.

Assistant: Secure session details per-website are stored in local cookies set by a response and sent to the server in future requests. 

For cross-domain example, like you described with youtube (and a comment described), the standard method is OAUTH or OAUTH2. It is the same mechanism that you may allow other websites to access your facebook or twitter details. 

This all manifests as a series of requests with parameters and responses redirecting to other targets. 

OAUTH has some "implicit" flows that may allow auto-login across websites without the user explicitly approving it. 

You can interactively move through some example requests here: https://developers.google.com/oauthplayground/