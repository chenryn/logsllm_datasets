### Safe Browsing Trends and Malware Distribution

#### Introduction
The following text provides an in-depth analysis of a specific malware campaign, focusing on the distribution methods and the effectiveness of different web services in classifying URLs. The campaign primarily used free domain providers to distribute Fake Anti-Virus (AV) binaries, which were frequently rotated to evade detection.

#### URL Classification by Web Services
Figures 13 and 14 show how different web services classify URLs flagged as benign and malicious by CAMP (Content-Agnostic Malware Protection). The graphs illustrate the varying degrees of agreement among these services.

- **Figure 13:** URLs flagged as benign by CAMP.
- **Figure 14:** URLs flagged as malicious by CAMP.

#### Domain Analysis
The Fake AV binaries were primarily hosted on the free domain provider `uni.me`. Free domain providers allow third parties to register many domain names at low cost, making them attractive for adversaries seeking to distribute malware. The campaign followed a specific pattern for domain registration:

- **Pattern:** `[srv|www|server|update]NN.dict.uni.me`
  - `dict` corresponds to a random English word.
  - Each domain was active for only a short period of time.

To estimate the domain lifetime, we analyzed client-host 1-day aggregates from February and computed the lifetime as the difference between the last observed download request and the first. The median lifetime for a domain was 406 seconds, with the 90th percentile at 1749 seconds. Some domains were active simultaneously.

**Table II: Example Domains and Their Lifetime**

| Host (.uni.me)                | Time of First Appearance         | Lifetime (sec) |
|-------------------------------|----------------------------------|----------------|
| srv62.specialarmor             | 2012/02/18 15:02:00             | 632            |
| srv76.specialarmor             | 2012/02/18 15:02:02             | 330            |
| www12.fuelwire                 | 2012/02/18 15:02:05             | 629            |
| server78.fuelwire              | 2012/02/18 15:02:06             | 587            |
| www82.fuelwire                 | 2012/02/18 15:02:15             | 246            |
| update96.fuelwire              | 2012/02/18 15:02:26             | 25             |
| server45.specialarmor          | 2012/02/18 15:02:38             | 560            |
| server52.specialarmor          | 2012/02/18 15:02:50             | 693            |
| www77.fuelwire                 | 2012/02/18 15:02:53             | 575            |
| www92.specialarmor             | 2012/02/18 15:02:57             | 1258           |

Over a two-week period, more than 13,000 unique domains on `uni.me` were involved in this campaign.

#### Challenges for Blacklisting
The high frequency of domain changes makes simple blacklisting-based approaches ineffective. The maintainers of the blacklist would need to fetch, analyze, and push out list updates within minutes. Additionally, each domain stopped resolving properly after a short period, making content fetching challenging.

#### Binary Changes
The campaign not only switched domains but also changed the binaries served, as indicated by their changing content hash. The binaries served by each host changed approximately every 10 minutes. We fetched and analyzed several samples, and they all offered the same functionality: a Fake Anti-Virus that hijacks the user’s system and refuses to release it until a registration fee is paid. One sample submitted to VirusTotal was identified as malware by only one of 40 AV engines.

#### Mechanism of Malware
The malware hijacks the user’s machine by setting the execution environment for all essential system processes to run in a debugger that points to a dummy process. This is achieved by setting the registry key:

```
HKLM\software\microsoft\windows nt\currentversion\image file execution options\msa.exe\Debugger:svchost.exe
```

This prevents key processes from performing meaningful tasks, rendering the machine unusable. The Fake AV binary provides a mechanism to "fix" the problem once the software is registered for a fee.

#### Campaign Analysis
During the campaign, our analysis pipeline fetched only a few samples, resulting in over 900 distinct content hashes with identical behavior. In total, we observed over 41,000 different binaries exhibiting similar behavior.

When the campaign started, CAMP replied with an unknown verdict, protecting users from these downloads. In general, when we cannot fetch the binaries, the unknown verdict offers protection. Future updates to CAMP could use the inability to fetch content as a feature itself. The browser could also be modified to allow users to upload files, facilitating the analysis of campaigns that host executables on one-time URLs.

#### IP Address Analysis
While the campaign aggressively switched domains and binaries, it did not rotate IP addresses as frequently. We observed it across only five IPs during a two-week period:
- 95.143.37.145
- 46.21.154.155
- 194.28.114.103
- 194.28.114.102
- 217.116.198.33

Our hypothesis is that the adversaries focused on domain rotation to avoid widely-deployed blacklists and binary mutation to avoid AV engines, but were not concerned with IP rotation due to the limited deployment of IP-based blacklists.

#### Discussion
CAMP bridges the gap between blacklists and whitelists by augmenting both approaches with a reputation system applied to unknown content. Our evaluation shows that CAMP does not suffer from significant false positives but could benefit from higher detection rates. Utilizing traditional machine learning approaches in addition to the current binary circuit may improve detection, but human reasoning about detection verdicts remains important.

#### Conclusion
CAMP, a content-agnostic malware protection system, employs a reputation system that detects malware independently of the actual binary contents. It protects browser users from malware downloads while minimizing the impact on user privacy. Our six-month evaluation with over 200 million unique Google Chrome users showed that CAMP is both accurate and well-performing, processing requests in less than 130 ms on average. CAMP outperforms Anti-Virus and various web services, flagging 5 million malware downloads per month that were not previously identified.

#### Acknowledgements
The authors would like to thank Michael Bailey for helpful suggestions and Lenx Wei for valuable feedback.

#### References
[References are listed in the original document and remain unchanged.]

This revised text aims to provide a clear, coherent, and professional overview of the malware campaign and the effectiveness of CAMP in detecting and mitigating such threats.