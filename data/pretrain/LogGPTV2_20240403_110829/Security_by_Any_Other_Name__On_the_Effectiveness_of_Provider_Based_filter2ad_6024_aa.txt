title:Security by Any Other Name: On the Effectiveness of Provider Based
Email Security
author:Ian D. Foster and
Jon Larson and
Max Masich and
Alex C. Snoeren and
Stefan Savage and
Kirill Levchenko
Security by Any Other Name:
On the Effectiveness of Provider Based Email Security
Ian Foster, Jon Larson, Max Masich, Alex C. Snoeren, Stefan Savage, and Kirill Levchenko
{idfoster,mmasich,snoeren,savage,klevchen}@cs.ucsd.edu
Department of Computer Science and Engineering
University of California, San Diego
ABSTRACT
Email as we use it today makes no guarantees about message in-
tegrity, authenticity, or conﬁdentiality. Users must explicitly en-
crypt and sign message contents using tools like PGP if they wish
to protect themselves against message tampering, forgery, or eaves-
dropping. However, few do, leaving the vast majority of users open
to such attacks. Fortunately, transport-layer security mechanisms
(available as extensions to SMTP, IMAP, POP3) provide some de-
gree of protection against network-based eavesdropping attacks. At
the same time, DKIM and SPF protect against network-based mes-
sage forgery and tampering.
In this work we evaluate the security provided by these proto-
cols, both in theory and in practice. Using a combination of mea-
surement techniques, we determine whether major providers sup-
ports TLS at each point in their email message path, and whether
they support SPF and DKIM on incoming and outgoing mail. We
found that while more than half of the top 20,000 receiving MTAs
supported TLS, and support for TLS is increasing, servers do not
check certiﬁcates, opening the Internet email system up to man-
in-the-middle eavesdropping attacks. At the same time, while use
of SPF is common, enforcement is limited. Moreover, few of the
senders we examined used DKIM, and fewer still rejected invalid
DKIM signatures. Our ﬁndings show that the global email system
provides some protection against passive eavesdropping, limited
protection against unprivileged peer message forgery, and no pro-
tection against active network-based attacks. We observe that pro-
tection even against the latter is possible using existing protocols
with proper enforcement.
1.
INTRODUCTION
Few users sign or encrypt email today, despite ready software
support for PGP and S/MIME. The vast majority of email users
continue to send email in the clear, with no safeguards against
eavesdropping, tampering, or forgery. Despite rising public con-
cern about mass surveillance, universal end-to-end email security
still remains elusive.
While user adoption of email security tools has been poor, use of
lower-layer security mechanisms, namely TLS, SPF, and DKIM,
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813607.
has been on the rise. Google recently reported 59% adoption of
TLS by sending and 79% by receiving servers, and our own mea-
surements (reported in this work) echo these statistics. We are led to
consider whether some of the security goals of end-to-end tools like
PGP can be satisﬁed using these protocols. Remarkably, when used
correctly and enforced, TLS and DKIM with DNSSEC can pro-
tect against active network-based man-in-the-middle attacks. These
guarantees, however require trusting the provider, something that is
explicitly not necessary when end-to-end security mechanisms like
PGP are used.
Whether email providers are trustworthy is a separate, no less
important, question which we do not consider in this work. We rec-
ognize that for some readers, any solution that requires trusting an
email provider is unacceptable as a matter of principle. For others,
trusting an email provider is a fait accompli—users already trust
their provider. (In fact, even Google’s End-to-End initiative, based
on OpenPGP, delegates key veriﬁcation to centralized providers.1
Our work, then, should be viewed as answering the question of
what guarantees TLS, DKIM and SPF can provide, if the provider
is already trusted. Of course, use of these provider security mecha-
nisms does not preclude users from using an end-to-end mechanism
as well.
If securing email against network attacks is possible using exist-
ing protocols, then we must ask whether these protocols are being
used in a way that achieves this. The greater portion of this paper is
devoted to this question, namely whether the current deployment of
TLS, DKIM, and SPF provides these level of security possible un-
der ideal conditions. To answer this question, we measured the level
of support for TLS, DKIM, and SPF among top email providers
and determined whether they enforce correct protocol use. Because
DKIM and SPF depend on DNS for protection against an active
(man-in-the-middle) attacker, we also measure the use of DNSSEC
among providers.
We relied on a combination of active probing techniques to carry
out the measurement study, some new and of independent interest
to the Internet measurement community. To determine how much
protection TLS provided against eavesdropping, we determined,
where possible, whether TLS was supported and used along each
hop along a message path between two providers, and whether
server certiﬁcate checking was done. For hops internal to a provider
where we could not interact with servers directly, we relied on in-
formation in Received email headers. For DKIM and SPF, we mea-
sured support on the sending end by examining messages generated
by providers (DKIM only), retrieving the necessary DNS records,
and noting support for DNSSEC. On the receiving end, we mea-
1End-to-End relies on a mechanism akin to CA Certiﬁcate Transparency to mitigate
the risk of impersonation, however, the effectiveness of such a mechanism has seen
little evaluation.
450sured provider veriﬁcation of DKIM signatures and enforcement of
SPF policies by generating mail of varying levels of conformance.
Where measurement could be automated, we probed the top million
mail servers (ranked by their prevalence among users in the Adobe
leaked user database). Whenever manual interaction was necessary,
we examined the top 22 email providers (based on Adobe rank) as
well as select email-generating services (e.g. amazon.com).
In brief, we found that, while many providers support TLS for
mail submission, transport, and delivery, all but one do not verify
certiﬁcates, making them vulnerable to an active attacker. We also
found that while DKIM provides message integrity, it is dependent
on DNS, which is vulnerable to active attacks.
The ﬁnal part of this paper brieﬂy addresses the changes nec-
essary to improve the current state of affairs. For some providers,
the ﬁrst step is to deploy these protocols. As we show in the mea-
surement study, of the four protocols, DNSSEC has the lowest de-
ployment, even among the top providers. The second step, enforce-
ment, is less straightforward. Enforcing a security policy neces-
sarily means rejecting non-conforming mail, an action that directly
impacts the user experience. In the last part of the paper, we discuss
the trade-offs involved in enforcing adherence to each protocol.
Our main contributions are:
O A methodology for determining TLS use along the full
message path between two providers. We use both di-
rect measurement (interaction with servers along the
path) and information recorded in mail headers to de-
termine whether a server uses TLS, and in the case of
the former, whether it does certiﬁcate checking.
O An analysis of the current state of TLS, DKIM, SPF,
and DNSSEC deployment. We report on the level of
TLS support of 96 incoming mail servers and 302938
outgoing mail servers of popular Internet services. We
also report on the level of DKIM, SPF, and DNSSEC
support among these servers.
O We describe how correct use of the above protocols can
provide message conﬁdentiality and integrity in a re-
laxed threat model. We identify the changes in the cur-
rent Internet email ecosystem necessary to provide this
level of security.
The rest of the paper is organized as follows. Section 2 describes
the threat model that this work is mostly concerned with. Section 3
provides the necessary technical background for the rest of the pa-
per. Section 4 describes our methodology used in our analysis. Sec-
tion 5 provides the ﬁnal analysis of our collected data. Section 6
lists other work that has been done on the same subject. Section 7
discusses the implications of our results. Section 8 concludes the
paper.
2. THREAT MODEL
The subject of this paper is the conﬁdentiality, integrity, and
authenticity of email communications achieved when TLS is used
along the message path and DKIM, SPF, and DNSSEC by the end
providers. In this section we describe the threat model we
consider, namely network-based attacks. In particular, we consider
three kinds of network attacker:
Active. An active attacker, also called a man-in-the-middle
attacker, can observe and modify all packets, and inject
arbitrary packets, between a target and the rest of the Internet.
Passive. A passive attacker can observe but not modify the
trafﬁc between a target and the rest of the Internet. (We
consider passive attacks on conﬁdentiality only.)
Figure 1: Typical path of a mail message from sender to receiver.
Peer. A network peer is an ordinary host connected to the
Internet, capable of sending arbitrary packets and receiving
packets for which it is the destination.
Other than the degree of network access above, we assume no other
attacker capability. In particular, we assume that the email providers
involved are trusted and do not collude with a network attacker. As
discussed above, the assumption of a trusted provider is not pre-
scriptive and not meant to suggest that providers are trustworthy or
should be trusted. Rather, it should be understood as a logical an-
tecedent of our results: if the provider is trusted and the protocols in
question are used correctly, then a certain level of security against
a network attacker can be achieved.
3. BACKGROUND
In this section we describe the level of security achievable when
TLS, DKIM, SPF, and DNSSEC are used correctly. Our goal is
also to identify those points of the protocol where failure would
compromise overall security. In Section 5 we focus on these points
to assess the real-world state of affairs.
We expect that most readers are familiar with the protocols in
question, however, the Appendix provides the background neces-
sary for the rest of the paper.
3.1 Security Properties
The security properties of concern to us are message
conﬁdentiality, message authenticity, and message integrity. Put
plainly, these translate into the following:
Conﬁdentiality. Can an attacker read a message?
Authenticity. Can an attacker forge a message?
Integrity. Can an attacker modify a message?
We consider attacks on conﬁdentiality by active (man-in-the-middle)
and passive attackers, attacks on authenticity by active and peer at-
tackers, and attacks on integrity by active attackers only. The re-
maining combinations of attacker and attacked security property
are excluded by deﬁnition. For example, a passive or peer attacker
cannot compromise message integrity because she does not (by def-
inition) have the ability to modify a message.
3.2 Mail Path
A typical path of a mail message is shown in Figure 1. Starting
with the sending user’s Mail User Agent (MUA), the message is
ﬁrst transmitted to the sender’s mail provider (a) using the Simple
Mail Transfer Protocol (SMTP), using HTTP via a Web interface,
or, in some cases, using a proprietary protocol. After processing in-
side the provider (b), the message is transmitted to the recipient’s
provider (c) using SMTP. After receiver processing (d), which may
include spam ﬁltering, the message is delivered to the recipient us-
ing the Internet Message Access Protocol (IMAP), the Post Ofﬁce
Protocol (POP), HTTP via a Web interface or using a proprietary
protocol.
3.3 Conﬁdentiality
A network-based eavesdropper may gain access to a message
during submission, provider processing, transfer between providers,
and delivery. The standard protocols, namely HTTP, SMTP, IMAP,
451and POP, used along the mail path defend against eavesdropping us-
ing TLS encryption. While in principle, proprietary protocols used
on the submission and delivery hops, labeled (a) and (e), respec-
tively, in Figure 1, may use non-standard cryptographic protocols.
Some providers also use SMTP internally, hops (b) and (d), how-
ever there is no requirement to do so. Communication internal to a
provider has usually been considered secure, since it is common
to collocate a MSA and MTA, or even combine the two roles in
a single host. At larger providers, internal hops may be located in
geographically separate data centers.2
Against a passive attacker, it is sufﬁcient to use TLS on all at-
tacker accessible links, provided a strong cipher suite is used. In
particular, use of the STARTTLS option or direct TLS encapsula-
tion with SMTP, IMAP, and POP or HTTPS will protect against a
passive attacker. Provider-internal links may be secured physically
or using TLS in the same manner. Since a passive attacker cannot
modify network trafﬁc, it is possible to exchange keys securely;
defense against a passive attacker does not require certiﬁcate veri-
ﬁcation.
An active attacker, on the other hand, can impersonate each side
of a connection to the other. Defending against such a man-in-the-
middle attack requires the sender to verify the identity of the re-
ceiver. If an active attacker can gain control of any hop along the
message path and either TLS is not used on that hop, or TLS is
used without server certiﬁcate veriﬁcation, the attacker will be able
to impersonate the receiver and gain access to the message.
We note that DNS integrity is not required for TLS if the com-
mon name (CN) or the subjectAltName is checked against the in-
tended server domain name (rather than IP address). Even if an
attacker tricks a client into contacting a server under her control,
the client can check that certiﬁcate provided by the server matches
the host name of the intended server.
3.4 Authenticity
To forge a message, an attacker must be able to inject it at some
point in the mail path in a such a way that it is accepted by the
receiver. To forge a message at submission (a), the attacker must
be able to authenticate as the user to the provider, usually using a
password. An active attacker can trick the user into revealing his
password by impersonating the provider (at either the submission
or delivery end). Secrecy of the password thus requires server cer-
tiﬁcate checking by the user agent. In addition, failure to verify the
server certiﬁcate of the MDA would allow a active attacker to im-
personate the MDA and, in addition to learning the password, inject
a forged message to the user on delivery (e). Message authenticity
(and integrity) inside a provider can be achieved by physically se-
curing the links or with the use of client certiﬁcates.
The hop most vulnerable to forgery, is the hop between providers
(c). An incoming MTA, upon receiving a message, must be able to
determine if the message originated from a provider authorized to
send email with the sender email domain appearing in the message.
Recall that our threat model posits a network-based attacker, so it
is sufﬁcient that verify that an incoming message originated at the
sender’s provider; the sender’s provider ensures that the submitting
MUA is authorized to send email from the user named as the mes-
sage sender.
Both DKIM and SPF provide protection against forgery. DKIM
provides a message signature covering the body and a subset of
message headers. The signature is created by the sender’s provider
and is intended to convince the recipient’s provider that the mes-
2Leaked documents indicate that the NSA has been eavesdropping on the (unen-
crypted) inter-datacenter trafﬁc of both Google and Yahoo [4]. In light of this, many
providers have moved to encrypting inter-datacenter trafﬁc [1].
sage is authentic and provide protection against tampering. SPF, on
the other hand, allows a provider to identify (by domain name or
IP address) a set of authorized senders for the domain. An incom-
ing MTA can verify that the outgoing MTA sending the message is
authorized to send email for the domain.
In principle, SPF can protect against forgery by a peer attacker
by only allowing certain network hosts to send email on behalf of a
domain. A peer attack cannot impersonate a host on the allowed list
because she cannot complete a TCP connection from an allowed
peer. An active attacker, on the other hand, can impersonate any
host. SPF, thus, provides no protection against an active attacker.
DKIM, on the other hand, relies on a digital signature to pro-
tect the message, including the sender address. As such, DKIM
can protect against message forgery and tampering, even against
an active attacker. It is worth considering, then, what is required
of an attacker to forge a DKIM signature. DKIM relies on DNS
for key distribution. The key used to generate a particular signa-
ture is provided in a TXT record for a name in a special subdo-
main of the sender’s domain. Thus, a message from example.com