t
)
e
g
a
n
e
c
r
e
p
(
y
c
a
r
u
c
c
A
0
9
0
8
0
7
0
6
89.1
63.9
DVFS−induced
AM−modulated
Fig. 14: Website ﬁngerprinting accuracy comparison of ex-
ploiting DVFS-induced and AM-modulated EM emanations
from NVIDIA RTX 3060 with Windows being the OS
From the results, we can ﬁnd that
the accuracy is as
high as 89.1%, which is much better than that exploiting
the DVFS-induced EM emanations (i.e., 63.9%). Such good
performance indicates that the AM-modulated EM emanations
can be exploited to effectively mount website ﬁngerprinting
attacks. Even compared with the last column in Table IX in
Appendix G where data collected at the other seven spots
is used for training, we can observe that the accuracy here
is much higher. If considering only the fact that disabling
GPU DVFS is actually used as a countermeasure, it would
be unexpected to ﬁnd that such a mitigation method helps
rather than thwarts attacks.
We have also veriﬁed that we are able to perform keystroke
timing inference by exploiting such AM-modulated EM sig-
nals. In this case, two keystrokes separated by 20 ms are still
well distinguishable no matter which NVIDIA GPU is used.
the considerably increased attack
performance when leveraging the AM-modulated EM em-
anations is that
the granularity of information carried in
such EM signals is much ﬁner than the DVFS-induced ones.
Although GPU DVFS is rapid enough to reveal changes in
Our conjecture about
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:13:36 UTC from IEEE Xplore.  Restrictions apply. 
1451
GPU workloads, it cannot enable us to pry more detailed
activities inside each workload. In the speciﬁc case of website
ﬁngerprinting attack, if some ﬁner-grained information can
be acquired, it may help distinguish webpages that generate
similar sequences of GPU workloads during their rendering.
By contrast, the emanations whose strength is AM-modulated
by GPU memory accesses inevitably contain information about
the modulating memory activities of each workload. Thus,
given the webpages which are often misclassiﬁed as each
other when the DVFS-induced EM side-channel vulnerability
is exploited, they become more discernible from each other
when using the AM-modulated EM emanations.
Notice that, the EM side-channel vulnerability presented in
this section and the DVFS-induced one cannot be exploited at
the same time. We ﬁnd that the AM-modulated vulnerability
emerges only when the performance level is ﬁxed. Therefore,
although the AM-modulated EM side-channel vulnerability
can be leveraged to achieve more effective attacks, it is the
DVFS-induced one that will be exploited in many realistic
situations, because, most of the time, a user will not change the
settings on GPU DVFS which is active by default. However,
as we have seen in this section, if the GPU DVFS is turned
off, the other EM vulnerability becomes available for being
exploited.
IX. COUNTERMEASURES
As described in Section VIII, the straightforward mitigation
approach that disables GPU DVFS by ﬁxing the performance
level fails to effectively prevent
information leakage from
many GPUs. In this section, we propose several other coun-
termeasures that we believe can potentially mitigate the EM
side-channel vulnerabilities of GPU.
The ﬁrst mitigation direction is to try to signiﬁcantly lower
the SNR of the exploitable EM emanations that an attacker
can measure. To achieve this, we may have different options
(e.g., using an RF device to generate some EM noise over
the targeted frequency range), but a plausible and attainable
method is to shield the computer for reducing the intensity
of the emitted EM signals. For example, we may be tempted
to tape some shielding Faraday fabric on the computer case
sides. We have performed such experiments and found that, if
we just naively rely on the patterns of stripe appearance on
the spectrograms for exploitation, this can indeed make far-off
attacks much harder or even impossible. However, if we apply
the techniques proposed in Section V ﬁrst, we can still acquire
the target signal’s appearance/disappearance patterns even
when the SNR becomes very low, which defeats the purpose of
having EM shielding in such a simple way. Therefore, more
carefully engineered EM shielding computer cases are needed.
Moreover, hardware manufacturers should devote more efforts
to minimizing EM emissions in their future product designs,
as replied by NVIDIA to us.
The second mitigation direction is to make the granularity
of the EM side-channel information much coarser. For this
purpose, we may try to reduce the sensitivity of GPU DVFS
to workload changes. In such a case, the performance level
may not be switched during activities like webpage rendering,
and thus the leaked information will be coarse-grained so that
very little sensitive information can be inferred. Although this
method does not try to eliminate side-channel information, it
can reduce the entropy of that side-channel and thus reduce the
overall exploitability. Since this will hurt energy efﬁciency, a
problem is how to ﬁnd a good trade-off between security and
power consumption.
In addition to reducing the SNR of the EM signals and
increasing the granularity of the side-channel information, a
third direction is through obfuscation. For instance, when a
sensitive activity is using GPU, we may deliberately generate
some random GPU workloads to disrupt its original GPU use
pattern such that the predictability is reduced. With respect
to the website ﬁngerprinting attacks studied in this paper,
we may implement a thread in the browser to randomly use
GPU for some dummy computation during webpage rendering
via certain interfaces like WebGL. In terms of Chrome in
particular, we may simply create an extension to send random
requests to the GPU process which is the speciﬁc process in
Chrome for managing interactions with GPU.
X. RELATED WORK
EM emanations generated by computing devices have been
extensively exploited to carry out various side-channel attacks,
e.g., stealing cryptographic keys [2], [12]–[14] and inferring
private information [10], [25], [32]. (EM emanations have also
been exploited to construct covert communication channels for
data exﬁltration [16], [61].) As mentioned in [4], many of the
EM side-channel attacks are only short-range given the fact
that most exploitable EM emanations are weak near-ﬁeld ones.
To perform long-range attacks, Camurati et al. have discovered
that wireless communication signals may be exploited, as such
RF signals can be inadvertently AM-modulated (in a cascaded
manner) by the EM emanations from the digital circuit of the
mixed-signal chip due to substrate noise coupling [4]. (Later,
Wang et al. improved Camurati’s work by using deep learning-
based analysis techniques [58].) Moreover, Callan et al. have
observed that exploitable information may be carried by some
strong EM signals (generated by certain voltage regulators or
clocks) in the form of AM-modulation [3], which has been
leveraged in attacks and defenses [43], [50], [61], [64].
Similar to our work, Sehatbakhsh et al. have also exploited
EM emanations involved with power management for attacks
very recently [51]. While there are similarities, fundamental
differences exist. First, our work leverages the effect of DVFS
on GPU clocks, whereas their work uses the effect of demand-
based switching on CPU voltage regulators. Second, our work
also studies how to increase the SNR of the EM emanations
of interest to make them still exploitable even in the presence
of EM shielding and strong noise contamination. Third, aside
from the overlap in terms of inferring keystroke timing, the two
works demonstrate different attacks, where the work presented
in [51] builds covert channels for data exﬁltration and our work
showcases website ﬁngerprinting. Finally, our work illustrates
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:13:36 UTC from IEEE Xplore.  Restrictions apply. 
1452
that disabling DVFS as a countermeasure may not be fully
effective.
Given the rising popularity of modern GPUs, research on
their security implications has begun drawing attentions in
recent years. Several studies exploit possible residues in GPU
memory that may not be properly cleared after use. Pietro et
al. have shown that the lack of memory-zeroizing operations
can be exploited to attack CUDA AES implementations [47],
and the memory residual leakage vulnerabilities in virtualized
and cloud computing environments have been investigated by
Maurice et al. [33]. Furthermore, Zhou et al. have studied
how to extract raw images from GPU memory residues [65].
In [27], Lee et al. have successfully inferred the web browsing
history by examining GPU memory dumps.
Other than relying on GPU memory residues, many attacks
exploit possible logical or physical side-channel information
of GPU to breach conﬁdentiality. Jiang et al. have studied the
timing differences due to contentions on shared GPU caches
or memory banks and leveraged such timing side-channels to
break AES implementations on GPU [20], [21]. Luo et al.
have demonstrated that CUDA RSA implementations are also
susceptible to timing side-channel analysis [29]. Aside from
logical side-channel information, Luo et al. have also used
GPU power consumption traces for cryptanalysis of CUDA
AES [30], while Gao et al. have used near-ﬁeld localized EM
emanations from GPU for the same purpose [11]. In addition
to subverting GPU-accelerated cryptosystems, Naghibijouy-
bari et al. have studied GPU side-channel attacks in a more
general context, where they used performance counters or
resource tracking APIs to measure shared GPU resource con-
tentions and exploited such information to ﬁngerprint websites,
infer user activities, and reverse engineer neural networks [41].
GPUs can also be a new venue of which malware takes
advantage to increase its stealthiness [56]. In [26], Ladakis
et al. have implemented a piece of GPU-based malware that
directly monitors the keyboard buffer from GPU via DMA to
log keystrokes, and in [66], Zhu et al. have conducted a more
comprehensive study on such a topic. In [40], Naghibijouybari
et al. have showed that malware may exploit contentions on
shared GPU resources to construct covert channels for data
exﬁltration. In [7], Davidov and Oldenburg have also exploited
GPU’s EM emanations, but they only showed a malware-
enabled covert channel on an AMD GPU.
Website ﬁngerprinting and/or keystroke timing attacks have
been investigated to a great extent in the past. Other than
network trafﬁc analysis, an attacker may exploit certain logical
side-channel information, such as cache timings [45], [53],
memory footprints [19], storage usage statistics [22], shared
event loops [57], and interrupt timings [28], to achieve such
attacks. Like our work, physical side-channel information has
also been studied for this malicious purpose [6], [15], [63]. In
particular, an EM-based website ﬁngerprinting attack is shown
feasible in a mobile setting by Matyunin et al. [32], in contrast
to which, our work focuses on scenarios where discrete GPUs
are used.
XI. CONCLUSION
In this paper, we have presented our newly discovered EM
side-channel vulnerability that exists in many modern GPUs
and conducted two case studies, website ﬁngerprinting and
keystroke timing attacks, to demonstrate that this new EM
vulnerability is highly exploitable. Even though the root cause
of this vulnerability is identiﬁed as the commonly used DVFS
feature in GPU, we have shown that simply disabling DVFS
by setting GPU to a speciﬁc performance level may not be
an effective countermeasure since another AM-modulated EM
vulnerability emerges. We have also discussed some potential
mitigation approaches.
As research on information leakage vulnerabilities of GPU
has just started lately, we believe that the currently disclosed
ones and their exploitation represent only the tip of the iceberg,
and many other exploitable ones lurk in the darkness. The
study carried out in this paper argues for more rigid evaluation
on the security of GPU from different perspectives.
ACKNOWLEDGMENT
This work is supported in part by the National Science
Foundation (NSF) grants CNS-2147217 and CNS-1739328.
The authors would like to thank the anonymous reviewers
for their comments and suggestions that help us improve the
quality of the paper.
REFERENCES
[1] Y. Abe, H. Sasaki, S. Kato, K. Inoue, M. Edahiro, and M. Peres, “Power
and Performance Characterization and Modeling of GPU-Accelerated
Systems,” in 2014 IEEE 28th International Parallel and Distributed
Processing Symposium (IPDPS).
IEEE, 2014, pp. 113–122.
[2] M. Alam, H. A. Khan, M. Dey, N. Sinha, R. Callan, A. Zajic, and
M. Prvulovic, “One&Done: A Single-Decryption EM-Based Attack on
OpenSSL’s Constant-Time Blinded RSA,” in 27th USENIX Security
Symposium (USENIX Security 18), 2018, pp. 585–602.
[3] R. Callan, A. Zaji´c, and M. Prvulovic, “FASE: Finding Amplitude-
Modulated Side-Channel Emanations,” in Proceedings of
the 42nd
Annual International Symposium on Computer Architecture (ISCA),
2015, pp. 592–603.
[4] G. Camurati, S. Poeplau, M. Muench, T. Hayes, and A. Francillon,
“Screaming Channels: When Electromagnetic Side Channels Meet Ra-
dio Transceivers,” in Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security (CCS), 2018, pp. 163–177.
[5] X. Chen, Z. Xu, H. Kim, P. Gratz, J. Hu, M. Kishinevsky, and
U. Ogras, “In-Network Monitoring and Control Policy for DVFS of
CMP Networks-on-Chip and Last Level Caches,” ACM Transactions on
Design Automation of Electronic Systems, vol. 18, no. 4, Oct. 2013.
[6] S. S. Clark, H. Mustafa, B. Ransford, J. Sorber, K. Fu, and W. Xu, “Cur-
rent Events: Identifying Webpages by Tapping the Electrical Outlet,” in
European Symposium on Research in Computer Security (ESORICS),
2013, pp. 700–717.
[7] Davidov, Mikhail and Oldenburg, Baron, “TEMPEST@Home - Find-
ing Radio Frequency Side Channels,” https://duo.com/labs/research/
ﬁnding-radio-sidechannels#section9, 2020.
[8] Q. Deng, D. Meisner, L. Ramos, T. F. Wenisch, and R. Bianchini, “Mem-
Scale: Active Low-Power Modes for Main Memory,” in Proceedings
of the Sixteenth International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS), 2011, pp.
225–238.
[9] V. Dhakal, A. M. Feit, P. O. Kristensson, and A. Oulasvirta, “Observa-
tions on Typing from 136 Million Keystrokes,” in Proceedings of the
2018 CHI Conference on Human Factors in Computing Systems, 2018,
pp. 1–12.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:13:36 UTC from IEEE Xplore.  Restrictions apply. 
1453
[10] M. Enev, S. Gupta, T. Kohno, and S. N. Patel, “Televisions, Video
Privacy, and Powerline Electromagnetic Interference,” in Proceedings of
the 18th ACM Conference on Computer and Communications Security
(CCS), 2011, pp. 537–550.
[11] Y. Gao, H. Zhang, W. Cheng, Y. Zhou, and Y. Cao, “Electro-Magnetic
Analysis of GPU-Based AES Implementation,” in Proceedings of the
55th Annual Design Automation Conference (DAC), 2018.
[12] D. Genkin, L. Pachmanov, I. Pipman, and E. Tromer, “Stealing Keys
from PCs Using a Radio: Cheap Electromagnetic Attacks on Windowed
Exponentiation,” in International Conference on Cryptographic Hard-
ware and Embedded Systems (CHES), 2015, pp. 207–228.
[13] ——, “ECDH Key-Extraction via Low-Bandwidth Electromagnetic At-
tacks on PCs,” in Topics in Cryptology - CT-RSA 2016, 2016, pp. 219–
235.
[14] D. Genkin, L. Pachmanov, I. Pipman, E. Tromer, and Y. Yarom,
“ECDSA Key Extraction from Mobile Devices via Nonintrusive Physical
Side Channels,” in Proceedings of the 2016 ACM SIGSAC Conference on
Computer and Communications Security (CCS), 2016, pp. 1626–1638.
[15] D. Genkin, M. Pattani, R. Schuster, and E. Tromer, “Synesthesia:
Detecting Screen Content via Remote Acoustic Side Channels,” in
Proceedings of the 2019 IEEE Symposium on Security and Privacy
(S&P), 2019, pp. 853–869.
[16] M. Guri, A. Kachlon, O. Hasson, G. Kedma, Y. Mirsky, and Y. Elovici,
“GSMem: Data Exﬁltration from Air-Gapped Computers over GSM
Frequencies,” in 24th USENIX Security Symposium (USENIX Security
15), Aug. 2015, pp. 849–864.
[17] Y. Han, S. Etigowni, H. Liu, S. Zonouz, and A. Petropulu, “Watch
Me, but Don’T Touch Me! Contactless Control Flow Monitoring via
Electromagnetic Emanations,” in Proceedings of the 2017 ACM SIGSAC
Conference on Computer and Communications Security (CCS), 2017,
pp. 1095–1108.
[18] K. B. Hardin, J. T. Fessler, and D. R. Bush, “Spread Spectrum Clock
Generation for the Reduction of Radiated Emissions,” in Proceedings of
IEEE Symposium on Electromagnetic Compatibility (EMC), 1994, pp.
227–231.
[19] S. Jana and V. Shmatikov, “Memento: Learning Secrets from Process
Footprints,” in Proceedings of the 2012 IEEE Symposium on Security
and Privacy (S&P), 2012, pp. 143–157.
[20] Z. H. Jiang, Y. Fei, and D. Kaeli, “A Complete Key Recovery Timing
Attack on a GPU,” in 2016 IEEE International symposium on high
performance computer architecture (HPCA), 2016, pp. 394–405.
[21] ——, “Exploiting Bank Conﬂict-Based Side-Channel Timing Leakage
of GPUs,” ACM Transactions on Architecture and Code Optimization,
vol. 16, no. 4, Nov. 2019.
[22] H. Kim, S. Lee, and J. Kim, “Inferring Browser Activity and Status
through Remote Monitoring of Storage Usage,” in Proceedings of the
32nd Annual Conference on Computer Security Applications (ACSAC),
2016, pp. 410–421.
[23] W. Kim, M. S. Gupta, G.-Y. Wei, and D. Brooks, “System Level Analysis
of Fast, Per-Core DVFS using On-Chip Switching Regulators,” in 2008
IEEE 14th International Symposium on High Performance Computer
Architecture (HPCA), 2008, pp. 123–134.
[24] M. Kosaka, “Inside Look at Modern Web Browser.”
[25] M. G. Kuhn, “Electromagnetic Eavesdropping Risks of Flat-Panel Dis-
plays,” in Proceedings of the 4th International Conference on Privacy
Enhancing Technologies (PETS), 2004, pp. 88–107.
[26] E. Ladakis, L. Koromilas, G. Vasiliadis, M. Polychronakis, and S. Ioan-
nidis, “You Can Type, but You Can’t Hide: A Stealthy GPU-based
Keylogger,” in Proceedings of the 6th European Workshop on System
Security (EuroSec), 2013.
[27] S. Lee, Y. Kim, J. Kim, and J. Kim, “Stealing Webpages Rendered on
Your Browser by Exploiting GPU Vulnerabilities,” in Proceedings of
the 2014 IEEE Symposium on Security and Privacy (S&P), 2014, pp.
19–33.
[28] M. Lipp, D. Gruss, M. Schwarz, D. Bidner, C. Maurice, and S. Man-
gard, “Practical Keystroke Timing Attacks in Sandboxed JavaScript,” in
European Symposium on Research in Computer Security (ESORICS),
2017, pp. 191–209.
[29] C. Luo, Y. Fei, and D. Kaeli, “Side-Channel Timing Attack of RSA
on a GPU,” ACM Transactions on Architecture and Code Optimization,
vol. 16, no. 3, Aug. 2019.
[30] C. Luo, Y. Fei, P. Luo, S. Mukherjee, and D. Kaeli, “Side-Channel
Power Analysis of a GPU AES Implementation,” in Proceedings of the
2015 33rd IEEE International Conference on Computer Design (ICCD),
2015, pp. 281–288.
[31] K. Ma, X. Li, W. Chen, C. Zhang, and X. Wang, “GreenGPU: A
Holistic Approach to Energy Efﬁciency in GPU-CPU Heterogeneous
Architectures,” in Proceedings of the 2012 41st International Conference
on Parallel Processing (ICPP), 2012, pp. 48–57.
[32] N. Matyunin, Y. Wang, T. Arul, K. Kullmann, J. Szefer, and S. Katzen-
beisser, “MagneticSpy: Exploiting Magnetometer in Mobile Devices for
Website and Application Fingerprinting,” in Proceedings of the 18th
ACM Workshop on Privacy in the Electronic Society (WPES), 2019, pp.
135–149.
[33] C. Maurice, C. Neumann, O. Heen, and A. Francillon, “Conﬁdentiality
Issues on a GPU in a Virtualized Environment,” in International Con-
ference on Financial Cryptography and Data Security (FC), 2014, pp.
119–135.
[34] X. Mei, L. S. Yung, K. Zhao, and X. Chu, “A Measurement Study of
GPU DVFS on Energy Conservation,” in Proceedings of the Workshop
on Power-Aware Computing and Systems (HotPower), 2013.
[35] Micron Technology, Inc., “GDDR5 SGRAM Introduction.”
[36] ——, “GDDR6: The Next-Generation Graphics DRAM.”
[37] A. K. Mishra, R. Das, S. Eachempati, R. Iyer, N. Vijaykrishnan,
and C. R. Das, “A Case for Dynamic Frequency Tuning in On-Chip
Networks,” in 2009 42nd Annual IEEE/ACM International Symposium
on Microarchitecture (MICRO), 2009, pp. 292–303.
[38] A. Miyoshi, C. Lefurgy, E. Van Hensbergen, R. Rajamony, and R. Ra-
jkumar, “Critical Power Slope: Understanding the Runtime Effects of
Frequency Scaling,” in Proceedings of the 16th International Conference
on Supercomputing (ICS), 2002, pp. 35–44.
[39] J. V. Monaco, “SoK: Keylogging Side Channels,” in Proceedings of
the 2018 IEEE Symposium on Security and Privacy (S&P), 2018, pp.
211–228.
[40] H. Naghibijouybari, K. N. Khasawneh, and N. Abu-Ghazaleh, “Con-
structing and Characterizing Covert Channels on GPGPUs,” in Pro-
ceedings of the 50th Annual IEEE/ACM International Symposium on
Microarchitecture (MICRO), 2017, pp. 354–366.
[41] H. Naghibijouybari, A. Neupane, Z. Qian, and N. Abu-Ghazaleh,
“Rendered Insecure: GPU Side Channel Attacks Are Practical,” in
Proceedings of the 2018 ACM SIGSAC Conference on Computer and
Communications Security (CCS), 2018, pp. 2139–2153.