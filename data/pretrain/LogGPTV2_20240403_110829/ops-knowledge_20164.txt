Over the past week, I encountered an issue with a third-party DLL that is required for my system to function correctly. I placed the DLL in the same directory (C:/xyz) as my Python script and attempted to run the script using IronPython from the command prompt. However, I received an error message indicating that the DLL could not be found. Interestingly, the script runs without any issues when executed within the IronPython environment in Visual Studio.

The problem has now been resolved. It turned out that the third-party DLL must be located in the directory where the IronPython executable (ipy.exe) is installed. For example, if ipy.exe is in C:\Program Files (x86)\IronPython2.7, then the DLL should also be placed there.

What made this particularly challenging was that, with the previous version of the DLL provided by the third party, it was not necessary to copy the DLL into the IronPython installation directory. The new version, however, requires this step. This difference in behavior between the two versions of the DLL was quite unexpected.