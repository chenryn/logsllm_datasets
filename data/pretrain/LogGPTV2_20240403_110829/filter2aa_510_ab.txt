DHCP Service
129
Starting and Stopping DHCP Service
129
Checking the Status of DHCP Service
129
Viewing DHCP Service Settings
130
Changing DHCP Service Settings
130
DHCP Service Settings
131
DHCP Subnet Settings Array
133
Adding a DHCP Subnet
134
List of DHCP serveradmin Commands
134
Viewing the DHCP Service Log
135
DNS Service
135
Starting and Stopping the DNS Service
135
Checking the Status of DNS Service
135
Viewing DNS Service Settings
135
Changing DNS Service Settings
135
DNS Service Settings
135
List of DNS serveradmin Commands
135
Viewing the DNS Service Log
136
Listing DNS Service Statistics
LL2354.book  Page 8  Monday, October 20, 2003  9:47 AM
Contents
9
136
Firewall Service
136
Starting and Stopping Firewall Service
137
Checking the Status of Firewall Service
137
Viewing Firewall Service Settings
137
Changing Firewall Service Settings
137
Firewall Service Settings
138
Defining Firewall Rules
141
IPFilter Rules Array
141
Firewall serveradmin Commands
142
Viewing Firewall Service Log
142
Using Firewall Service to Simulate Network Activity
142
NAT Service
142
Starting and Stopping NAT Service
142
Checking the Status of NAT Service
142
Viewing NAT Service Settings
143
Changing NAT Service Settings
143
NAT Service Settings
144
NAT serveradmin Commands
144
Viewing the NAT Service Log
145
VPN Service
145
Starting and Stopping VPN Service
145
Checking the Status of VPN Service
145
Viewing VPN Service Settings
145
Changing VPN Service Settings
146
List of VPN Service Settings
149
List of VPN serveradmin Commands
149
Viewing the VPN Service Log
150
IP Failover
150
Requirements
150
Failover Operation
151
Enabling IP Failover
152
Configuring IP Failover
153
Enabling PPP Dial-In
Chapter 14
155
Working With Open Directory
155
General Directory Tools
155
Testing Your Open Directory Configuration
155
Modifying an Open Directory Node
155
Testing Open Directory Plugins
156
Registering URLs With Service Location Protocol (SLP)
156
Changing Open Directory Service Settings
157
LDAP
157
Configuring LDAP
LL2354.book  Page 9  Monday, October 20, 2003  9:47 AM
10
Contents
157
A Note on Using ldapsearch
158
Idle Rebinding Options
158
Additional Information About LDAP
159
NetInfo
159
Configuring NetInfo
159
Password Server
159
Working With the Password Server
159
Viewing or Changing Password Policies
159
Enabling or Disabling Authentication Methods
160
Kerberos and Single Sign On
Chapter 15
161
Working With QuickTime Streaming Server
161
Starting QTSS Service
161
Stopping QTSS Service
161
Checking QTSS Service Status
162
Viewing QTSS Settings
162
Changing QTSS Settings
163
QTSS Settings
166
QTSS serveradmin Commands
166
Listing Current Connections
167
Viewing QTSS Service Statistics
168
Viewing Service Logs
168
Forcing QTSS to Re-Read its Preferences
169
Preparing Older Home Directories for User Streaming
Index
171
LL2354.book  Page 10  Monday, October 20, 2003  9:47 AM
11
Preface
About This Book
Notation Conventions
The following conventions are used throughout this book.
Summary
Commands and Other Terminal Text
Commands or command parameters that you might type, along with other text that 
normally appears in a Terminal window, are shown in this font. For example,
You can use the doit command to get things done.
When a command is shown on a line by itself as you might type it in a Terminal 
window, it follows a dollar sign that represents the shell prompt. For example,
$ doit
To use this command, type “doit” without the dollar sign at the command prompt in a 
Terminal window, then press the Return key.
Command Parameters and Options
Most commands require one or more parameters to specify command options or the 
item to which the command is applied.
Notation
Indicates
monospaced font
A command or other terminal text
$
A shell prompt
[text_in_brackets]
An optional parameter
(one|other)
Alternative parameters (type one or the other)
underlined
A parameter you must replace with a value
[...]
A parameter that may be repeated
A displayed value that depends on your server configuration
LL2354.book  Page 11  Monday, October 20, 2003  9:47 AM
12
Preface    About This Book
Parameters You Must Type as Shown
If you need to type a parameter as shown, it appears following the command in the 
same font. For example,
$ doit -w later -t 12:30
To use the command in the above example, type the entire line as shown.
Parameter Values You Provide
If you need to supply a value, its placeholder is underlined and has a name that 
indicates what you need to provide. For example,
$ doit -w later -t hh:mm
In the above example, you need to replace hh with the hour and mm with the minute, as 
shown in the previous example.
Optional Parameters
If a parameter is available but not required, it appears in square brackets. For example,
$ doit [-w later]
To use the command in the above example, type either doit or doit -w later. The 
result might vary but the command will be performed either way.
Alternative Parameters
If you need to type one of a number of parameters, they’re separated by a vertical line 
and grouped within parentheses ( | ). For example,
$ doit -w (now|later)
To perform the command, you must type either doit -w now or doit -w later.
Default Settings
Descriptions of server settings usually include the default value for each setting. When 
this default value depends on other choices you’ve made (such as the name or IP 
address of your server, for example), it’s enclosed in angle brackets <>. 
For example, the default value for the IMAP mail server is the host name of your server. 
This is indicated by mail:imap:servername = "".
Commands Requiring Root Privileges
Throughout this guide, commands that require root privileges begin with sudo.
LL2354.book  Page 12  Monday, October 20, 2003  9:47 AM
1
13
1 Typing Commands
How to use Terminal to execute commands, connect to a 
remote server, and view online information about 
commands and utilities.
To access a UNIX shell command prompt, you open the Terminal application. In 
Terminal, you can use the ssh command to log in to other servers. You can use the man 
command to view online documentation for most common commands.
Using Terminal
To enter shell commands or run server command-line tools and utilities, you need 
access to a UNIX shell prompt. Both Mac OS X and Mac OS X Server include Terminal, 
an application you can use to start a UNIX shell command-line session on the local 
server or on a remote server.
To open Terminal:
m Click the Terminal icon in the dock or double-click the application icon in the Finder (in 
/Applications/Utilities).
Terminal presents a prompt when it’s ready to accept a command. The prompt you see 
depends on Terminal and shell preferences, but often includes the name of the host 
you’re logged in to, your current working directory, your user name, and a prompt 
symbol. For example, if you’re using the default bash shell and the prompt is
server1:~ admin$
you’re logged in to a computer named “server1” as the user named “admin” and your 
current directory is the admin’s home directory (~).
Throughout this manual, wherever a command is shown as you might type it, the 
prompt is abbreviated as $.
LL2354.book  Page 13  Monday, October 20, 2003  9:47 AM
14
Chapter 1    Typing Commands
To type a command:
m Wait for a prompt to appear in the Terminal window, then type the command and 
press Return.
If you get the message command not found, check your spelling. If the error recurs, 
the program you’re trying to run might not be in your default search path. Add the 
path before the program name or change your working directory to the directory that 
contains the program. For example:
[server:/] admin$ serversetup -getAllPort
serversetup: Command not found.
[server:/] admin$ /System/Library/ServerSetup/serversetup -getAllPort
1
Built-in Ethernet
[server:/] admin$ cd /System/Library/ServerSetup
[server:/System/Library/ServerSetup] admin$ ./serversetup -getAllPort
1
Built-in Ethernet
[server:/System/Library/ServerSetup] admin$ cd /
[server:/] admin$ PATH = "$PATH:/System/Library/ServerSetup"
[server:/] admin$ serversetup -getAllPort
1
Built-in Ethernet
Correcting Typing Errors
To correct a typing error before you press Return to issue the command, use the Delete 
key or press Control-H to erase unwanted characters and retype.
To ignore what you have typed and start again, press Control-U.
Repeating Commands
To repeat a command, press Up-Arrow until you see the command, then press Return.
To repeat a command with modifications, press Up-Arrow until you see the command, 
press Left-Arrow or Right-Arrow to skip over parts of the command you don’t want to 
change, press Delete to remove characters, type regular characters to insert them, then 
press Return to execute the command.
Including Paths Using Drag-and-Drop
To include a fully-qualified file name or directory path in a command, stop typing 
where the item is required in the command and drag the folder or file from a Finder 
window into the Terminal window.
LL2354.book  Page 14  Monday, October 20, 2003  9:47 AM
Chapter 1    Typing Commands
15
Commands Requiring Root Privileges
Many commands used to manage a server must be executed by the root user. If you 
get a message such as “permission denied,” the command probably requires root 
privileges.
To issue a single command as the root user, begin the command with sudo. 
For example:
$ sudo serveradmin list
You’re prompted for the root password if you haven’t used sudo recently. The root user 
password is set to the administrator user password when you install Mac OS X Server.
To switch to the root user so you don’t have to repeatedly type sudo, use the su 
command:
$ su root
You’re prompted for the root user password and then are logged in as the root user 
until you log out or use the su command to switch to another user.
Important:  As the root user, you have sufficient privileges to do things that can cause 
your server to stop working properly. Don’t execute commands as the root user unless 
you understand clearly what you’re doing. Logging in as an administrative user and 
using sudo selectively might prevent you from making unintended changes.
Throughout this guide, commands that require root privileges begin with sudo.
LL2354.book  Page 15  Monday, October 20, 2003  9:47 AM
16
Chapter 1    Typing Commands
Sending Commands to a Remote Server
Secure Shell (SSH) lets you send secure, encrypted commands to a server over the 
network. You can use the ssh command in Terminal to open a command-line 
connection to a remote server. While the connection is open, commands you type are 
performed on the remote server.
Note:  You can use any application that supports SSH to connect to Mac OS X Server.
To open a connection to a remote server:
1 Open Terminal.
2 Type the following command to log in to the remote server:
ssh -l username server
where username is the name of an administrator user on the remote server and 
server is the name or IP address of the server.
Example:  ssh -l admin 10.0.1.2
3 If this is the first time you’ve connected to the server, you’re prompted to continue 
connecting after the remote computer’s RSA fingerprint is displayed. Type yes and 
press Return.
4 When prompted, type the user’s password (the user’s password on the remote server) 
and press Return.
The command prompt changes to show that you’re now connected to the remote 
server. In the case of the above example, the prompt might look like
[10.0.1.2:~] admin$
5 To send a command to the remote server, type the command and press Return.
To close a remote connection
m Type logout and press Return.
Sending a Single Command
You can authenticate and send a command using a single typed line by appending the 
command you want to execute to the basic ssh command. 
For example, to delete a file you could type
$ ssh -l admin server1.company.com rm /Users/admin/Documents/report
or
$ ssh -l PI:EMAIL "rm /Users/admin/Documents/report"
You’re prompted for the user’s password.
LL2354.book  Page 16  Monday, October 20, 2003  9:47 AM
Chapter 1    Typing Commands
17
Updating SSH Key Fingerprints
The first time you connect to a remote server using SSH, the local computer asks if it 
can add the remote server’s “fingerprint” (a security key) to a list of known remote 
computers. You might see a message like this:
The authenticity of host "server1.company.com" can’t be established.
RSA key fingerprint is a8:0d:27:63:74:f1:ad:bd:6a:e4:0d:a3:47:a8:f7.
Are you sure you want to continue connecting (yes/no)?
Type yes and press Return to finish authenticating.
If you later see a warning message about a “man-in-the-middle” attack when you try to 
connect, it might be because the key on the remote computer no longer matches the 
key stored on the local computer. This can happen if you:
• Change your SSH configuration
• Perform a clean install of the server software
• Start up from a Mac OS X Server CD
To connect again, delete the entries corresponding to the remote computer (which can 
be stored by both name and IP address) in the file ~/.ssh/known_hosts.
Important:  Removing an entry from the known_hosts file bypasses a security 
mechanism that helps you avoid imposters and “man-in -the-middle” attacks. Be sure 
you understand why the key on the remote computer has changed before you delete 
its entry from the known_hosts file. 
Notes on Communication Security and servermgrd
When you use the Server Admin GUI application or the serveradmin command-line 
tool, you’re communicating with a local or remote servermgrd process.
• servermgrd uses SSL for encryption and client authentication but not for user 
authentication, which uses HTTP basic authentication along with Directory Services.
• servermgrd uses a self-signed (test) SSL certificate installed by default in 
/etc/servermgrd/ssl.crt/. You can replace this with an actual certificate.
• The default certificate format for SSLeay/OpenSSL is PEM, which actually is Base64 
encoded DER with header and footer lines (from www.modssl.org).
• servermgrd checks the validity of the SSL certificate only if the “Require valid digital 
signature” option is checked in Server Admin preferences. If this option is enabled, 
the certificate must be valid and not expired or Server Admin will refuse to connect.
• The SSLOptions and SSLRequire settings determine what SSL encryption options are 
used. By default, they’re set as shown below but can be changed at any time by 
editing /etc/servermgrd/servermgrd.conf, port 311. 
SSLCertificateFile /private/etc/servermgrd/ssl.crt/server.crt
SSLCertificateKeyFile /private/etc/servermgrd/ssl.key/server.key
SSLCipherSuite 
ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
SSLOptions +StdEnvVars
LL2354.book  Page 17  Monday, October 20, 2003  9:47 AM
18
Chapter 1    Typing Commands
Using Telnet
Because it isn’t as secure as SSH, Telnet access isn’t enabled by default.
To enable Telnet access:
$ service telnet start
To disable Telnet access:
$ service telnet stop
Getting Online Help for Commands
Onscreen help is available for most commands and utilities.
Note:  Not all techniques work for all commands, and some commands have no 
onscreen help.
To view onscreen information about a command, try the following:
• Type the command without any parameters or options. This will often list a summary 
of options and parameters you can use with the command.
Example:
$ sudo serveradmin
• Type man command, where command is the command you’re curious about. This 
usually displays detailed information about the command, its options, parameters, 
and proper use.
Example:
$ man serveradmin
For help using the man command, type:
$ man man
• Type the command followed by a -help, -h, --help, or help parameter.
Examples:
$ hdiutil help
$ dig -h
$ diff --help
LL2354.book  Page 18  Monday, October 20, 2003  9:47 AM
Chapter 1    Typing Commands
19
Notes About Specific Commands and Tools
serversetup
The serversetup utility is located in /System/Library/ServerSetup. To run this 
command, you can type the full path, for example:
$ /System/Library/ServerSetup/serversetup -getAllPort
Or, if you want to use the utility to perform several commands, you can change your 
working directory and type a shorter command:
$ cd /System/Library/ServerSetup
$ ./serversetup -getAllPort
$ ./serversetup -getDefaultInfo
or add the directory to your search path for this session and type an even shorter 
command:
$ PATH = "$PATH:/System/Library/ServerSetup"
$ serversetup -getAllPort
To permanently add the directory to your search path, add the path to the file 
/etc/profile.
serveradmin
You can use the serveradmin tool to perform many service-related tasks. You’ll see it 
used throughout this guide.
Determining Whether a Service Needs to be Restarted
Some services need to be restarted after you change certain settings. If a change you 
make using a service’s writeSettings command requires that you restart the service, 
the output from the command includes the setting :needsRecycleOrRestart 
with a value of yes.
Important:  The needsRecycleOrRestart setting is displayed only if you use the 
serveradmin svc:command = writeSettings command to change settings. You 
won’t see it if you use the serveradmin settings command. 
LL2354.book  Page 19  Monday, October 20, 2003  9:47 AM
LL2354.book  Page 20  Monday, October 20, 2003  9:47 AM
2
21
2 Installing Server Software and 
Finishing Basic Setup
Commands you can use to install, set up, and update 
Mac OS X Server software on local or remote computers.
Installing Server Software
You can use the installer command to install Mac OS X Server or other software on a 
computer. For more information, see the man page.
Automating Server Setup
Normally, when you install Mac OS X Server on a computer and restart, the Server 
Assistant opens and asks you to provide the basic information necessary to get the 
server up and running (for example, the name and password of the administrator user, 
the TCP/IP configuration information for the server’s network interfaces, and how the 
server uses directory services). You can automate this initial setup task by providing a 
configuration file that contains these settings. Servers starting up for the first time look 
for this file and use it to complete initial server setup without user interaction.
Creating a Configuration File Template
An easy way to prepare configuration files to automate the setup of a group of servers 
is to start with a file saved using the Server Assistant. You can save the file as the last 
step when you use the Server Assistant to set up the first server, or you can run the 
Server Assistant later to create the file. You can then use that first file as a template for 