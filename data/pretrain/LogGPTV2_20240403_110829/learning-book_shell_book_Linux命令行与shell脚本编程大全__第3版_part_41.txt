cosmanda
f
当ir语句中的命令返回退出状态码o时，then部分中的命令会被执行，这跟普通的if-then
语句一样。当ir语句中的命令返回非零退出状态码时，bash shell会执行else部分中的命令。
现在可以复制并修改测试脚本来加人else部分。
S cp test3.ah test4.sh
S nano test4.sh
S cat test4.sh
# teating the else section
 1/bin/bash
testuser=NoSuchUsex
if grep Stestuser /etc/passnd
then
1.g -a /hone/Steatuaer/ ,b*
echo
else
echo
f1
S./test4.sh
The user NoSuchUsex (
这样就更友好了。跟then部分一样，else部分可以包含多条命令。fi语句说明else部分
12
结束了。
12.3嵌套if
有时你需要检查脚本代码中的多种条件。对此，可以使用嵌套的if-then语句。
---
## Page 251
236
第12章使用结构化命令
要检查/etc/passwd文件中是否存在某个用户名以及该用户的目录是否尚在，可以使用嵌套的
if-then语句。嵌套的if-then语句位于主if-then-else语句的else代码块中。
1s -d /home/NoSucbUser/
/home/NoSucht7ser/
eat test5.sh
+1/bin/bssh
 Testing nested ifs
testuser=oSuchUser
if grep $testuser /etc/passwd
then
echo *The user Stestuser exists on this system.*
else
echo *The user Stestuser does not exiet on this bysten,*
if 1s -d /hone/Stestuser/
then
echo *However, $testuser bas a directory.*
fi
fi
$
S./test5.sh
/home/MoSuchtser/
However, MoSuchUser has a directory-
$
这个脚本准确无误地发现，尽管登录名已经从/etc/passwd中删除了，但是该用户的目录
仍然存在。在脚本中使用这种嵌套if-then语句的问题在于代码不易阅读，很难理清逻辑流程。
可以使用else部分的另一种形式：elif。这样就不用再书写多个if-then语句了。elif使
用另一个if-then语句延续else部分。
if commandI
then
elif cosmsod2
commands
then
more cormands
fi
elif语句行提供了另一个要测试的命令，这类似于原始的ir语句行。如果elif后命令的退
出状态码是a，则bash会执行第二个then语句部分的命令。使用这种嵌套方法，代码更清晰，逻
辑更易懂。
 cat tests.sh
 Testing nested ifa - use elif
1/bin/bash
testuser=NoSuchUser
---
## Page 252
12.3丧套if
237
If grep Steatuser /etc/passvd
then
echo *The user Steatuser exiata on thia ayatem.*
ellf la -d /home/$teatuser
then
echo *However, Stestuser haa a directory.*
#
fL
$
S./test5.sh
The user NoSuchUeer doea not exiat on this syatem.
/home/KoSuchUser
Hovever, NoSuchser has a directory .
甚至可以更进一步，让脚本检查拥有目录的不存在用户以及没有拥有目录的不存在用户。这
可以通过在嵌套elif中加人一个else语句来实现。
S cat teat5.ab
 Testing nested lfa - use elif ≤ else
#1/bin/bash
testuser=NoSuchUser
If grep Steatuser /etc/passvd
then
echo *The user Steatuser exiata on thia ayatem.*
e1lf 1a -d /home/$teatuser
then
echo *The user Stestuser does not exist on thia syaten.*
echo *However, Stestuser has a directory.*
else
echo *And, Stestuser does not have a directory.*
$
S-/test5.sh
The usex NoSuchUser does not exiat on thia ayatem.
/home /NoSuchUaer
Hovever, NoSuchUser has a dlrectory .
S sudo rmdir /home/NoSuchUser
12
[audo]  passvord  for  Chxiatine:
1s: cannot access /hone/NosuchUeer: No such file or Girectory
S-/test5.sh
The
user NoSuchUer doea not exiat on this ayatem.
And, NoSschUser does not have a Girectory-
---
## Page 253
238第12章使用结构化命令
在/home/NoSuchUser目录被删除之前，这个测试脚本执行的是elif语句，返回零值的退出状
态。因此elif的then代码块中的语句得以执行。删除了/home/NoSuchUser目录之后，elif语句
返回的是非零值的退出状态。这使得elif块中的else代码块得以执行。
窍门记住，在elif语句中，紧跟其后的else语句属于elif代码块。它们并不属于之前的
i f-then代码块
可以继续将多个elif语句串起来，形成一个大的if-then-elif嵌套组合。
1 f command1
:hen
e11f conmand2
cormand set 1
:hen
o11f cosnand3
osmand set 2
then
e11t cosmand4
cosmand set 3
:hen
cosmand set 4
f 1
每块命令都会根据命令是否会返回退出状态码o来执行。记住，bashshell会依次执行iE语句，
只有第一个返回退出状态码o的语句中的then部分会被执行。
尽管使用了elif语句的代码看起来更清晰，但是脚本的逻辑仍然会让人犯晕。在12.7节，你
会看到如何使用case命令代替if-then语句的大量嵌套。
12.4test命令
到目前为止，在if语句中看到的都是普通shell命令。你可能想问，if-then语句是否能测试
命令退出状态码之外的条件。
答案是不能。但在bash shell中有个好用的工具可以帮你通过if-then语句测试其他条件。
test命令提供了在if-then语句中测试不同条件的途径。如果test命令中列出的条件成立，
test命令就会退出并返回退出状态码o。这样if-then语句就与其他编程语言中的if-then语句
以类似的方式工作了。如果条件不成立，test命令就会退出并返回非零的退出状态码，这使得
if-then语句不会再被执行。
test命令的格式非常简单。
test condition
condition是test命令要测试的一系列参数和值。当用在if-then语句中时，test命令看
起来是这样的。
---
## Page 254
12.4test 命令
239
if test condition
then
cosmanda
f
如果不写test命令的condition部分，它会以非零的退出状态码退出，并执行else语句块。
#1/bin/ba.sh
S cat test6.sh
#Testing the test conmand
if tent
then
8n.x, e guxnqex totesaadxa on o2e
else
f1
No expression retuzms a False
S./test6.sh
当你加人一个条件时，test命令会测试该条件。例如，可以使用test命令确定变量中是否
有内容。这只需要一个简单的条件表达式。
S cat test6.sh
 Testing the teat conmand
#1/bin/bash
my_variable=*Pu11*
if teat Smy_variable
then
else
fL
$
S-/test6.sh
The Full expression returns a True
变量=y_variable中包含有内容（Ful1）.因此当test命令测试条件时，返回的退出状态
为0。这使得then语句块中的语句得以执行。
如你所料，如果该变量中没有包含内容，就会出现相反的情况。
12
S cat test6.sh
 Teating the test conmand
#1/bin/bash
my_variable=**
if test Smy_variable
---
## Page 255
240
第12章
使用结构化命令
then
e1se
f 1
$
Theexpression returns a False
S./test6.sh
bash shel提供了另一种条件测试方法，无需在if-then语句中声明test命令。
1f [ condition 1
then
conmands
f 1
方括号定义了测试条件。注意，第一个方括号之后和第二个方括号之前必须加上一个空格，
否则就会报错。
test命令可以判断三类条件：
口数值比较
口字符串比较
口文件比较
后续章节将会介绍如何在if-then语句中使用这些条件测试。
12.4.1数值比较
使用test命令最常见的情形是对两个数值进行比较。表12-1列出了测试两个值时可用的条件
参数。
表12-1test命令的数值比较功能
比较
描述
n1 -eq n2
检查n1是否与n2相等
nl -ge n2
检查n1是否大于或等于n2
nl -gt n2
检查n1是否大于n2
n1 -1e n2
检查n1是否小于或等于n2
n1 -1t n2
检查n1是否小于n2
n1 -ne n2
检查n1是否不等于m2
数值条件测试可以用在数字和变量上。这里有个例子。
Scat numeric_test.sh
+1/bin/bssh
 Vsing mumeric test evaluations
---
## Page 256
12.4test命令
241
value1=10
value2=11
[s 6-ontens ]3T
then
echo *The test value Svaluel la greater than 5*
f1
f [ $valuel -eq Svalue2 ]
then
echo *The valuea are equal*
else
echo *The values are different*
$
第一个条件测试：
[s 16-ontens 1 3T
测试变量value1的值是否大于5。第二个条件测试：
f [ $valuel -eq Svalue2 ]
测试变量value1的值是否和变量value2的值相等。两个数值条件测试的结果和预想一致。
The test value 1o la greater than 5
S./numeric_test.sh
The values are different
但是涉及浮点值时，数值条件测试会有一个限制。
S cat floating_point_test.ab
 Uaing floating point numbera in test evaluations
#1 /bin/ba.sh
value1=5.555
echo *The test value ia $value1*
[s 6-onens ]3T
then
f1
S./floating_point_test.ah
The test value ia 5.555
./floating_point_teat.sh: line 8:
[: 5 . 555: integer expression expected
此例，变量value1中存储的是浮点值。接着，脚本对这个值进行了测试。显然这里出错了。
记住，bash shell只能处理整数。如果你只是要通过echo语句来显示这个结果，那没问题。
---
## Page 257
242
第12章使用结构化命令