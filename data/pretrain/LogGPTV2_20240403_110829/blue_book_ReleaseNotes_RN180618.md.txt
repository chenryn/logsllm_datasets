## 180618 (AzSKPreview v.3.3.*)
#### Important Note:
This time we are releasing only a preview version of the DevOps Kit. 
To try out the preview features, use the following steps:
In a new PS session, run:
```PowerShell
Install-Module AzSKPreview
```
In a new PS session, run the below command before running any AzSK commands. 
```PowerShell
Import-Module AzSKPreview
```
### Feature updates
DevOps Kit Module Migration:
*	All tasks for migration from AzSDK -> AzSK have been completed. Support for migration shall be discontinued from this release.
*   Moving forward AzSK commands will delete AzSDKRG (older resource group) if the caller has sufficient privilege to do so
Security Verification Tests (SVTs):
*   Completed control implementation for Bot Service and Container Instances.
Attestation Workflow Changes:
*	Ability to mark certain controls as "not attestable" and, also, to specify permissible attestation states for others.
*	Split "NotAnIssue" (which had an overloaded meaning earlier) into the following 3 possible states:
*	(Genuine) NotAnIssue -- to represent situations where the control is implemented in another way, so the finding does not apply.
*	StateConfirmed -- to represent acknowledgment by a user that the control state (e.g., IP addressed ranges on a firewall) is correct/appropriate
*	NotApplicable -- the control is NA for the given design/context (e.g., a storage container that is public access ‘by design’)
Cmdlet to generate a compliance summary (preview):
*	Ability to list the current (latest) view of all controls from a compliance standpoint.
*	Currently this will need to be locally enabled. (In the next sprint we will work on updating the compliance snapshot also from CA/CICD.)
Support Bot on AzSK Web Site (preview):
*	A new Bot has been added to our website https://azsk.azurewebsites.net to answer support queries. Please give it a try and share your feedback.
Support for 'user comments' or 'user tags' on control results. 
*	This allows users to place 'markers' on controls which are remembered in the subscription. 
*	This feature permits individual teams to support additional workflows for control triaging, fix tracking, etc. 
*	These user comments will be available as another column in the CSV produced by GSS/GRS scans by specifying "-IncludeUserComments" switch. 
*	Likewise, uploading user comments can be done by the command: "Update-AzSKPersistedState" and including a "UserComments" column in the CSV with the comments to include for each {resource, control} tuple.
Org-policy feature updates (non-CSE):
*	Script to check health/correctness of org policy configuration for a given setup and to also help remediate issues that were found.
*	Ability to generate compliance dashboard (PBI content pack with org CSV based on AppInsights repo) available from GitHub. 
### Other improvements/bug fixes
SVTs: 
*	When running GSS, if the calling user does not have enough access for certain controls, then those controls will be skipped and a warning message displayed.
Performance improvements:
*	Command startup has been sped up further. 
*	Telemetry calls to OMS, EventHub or WebHook - which were per-control earlier - have been batched per resource. This speeds up each control evaluation by about 2.4s.
Controls: 
*	Fixed an issue with Batch service controls due to a schema change of alerts from the product team.
*	Controls in resources such as ADLA that were reliant on storage encryption at rest have been made 'Informational' as SSE is enabled by default.
CA:
*	Guardrails to protect against unusual combination of parameters during CA setup in central mode or multi-CA configurations.
*	Users can now explicitly request creation of new SPN for CA runtime account when calling Update-CA. (Previously we silently used an existing SPN if the user had permissions to it.)
*	Get-CA now always shows a summary of CA config even if one of the interim health checks fails. It used to do so only after completion of all health checks earlier. This caused the summary to be skipped if any of the checks failed.
*	Made changes to ensure that CA can function correctly even if there is a subscription level 'DoNotDelete' lock in effect. (Earlier this was causing an issue because we need to delete our schedule at the end of a CA scan.)
*	Added ability to specify 'UpdateToLatestVersion' via a CA variable (earlier it could only be set inside the runbook). This lets org policy owners control their local setup to perform pre-testing of the latest AzSK module before enabling all CA deployments in the org to start using it.