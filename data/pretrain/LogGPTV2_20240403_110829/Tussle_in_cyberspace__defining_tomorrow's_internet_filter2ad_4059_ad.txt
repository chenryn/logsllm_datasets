This is a lot of mechanism, a large potential loss of trans-
parency, and an increasing focus on improving existing ap-
plications at the expense of new ones. So what is the future
of the end to end arguments? We argue that the end to
end arguments are still valid and powerful, but need a more
complex articulation in today’s world. The discussion to
this point gives us some guidance.
Evolution and “enhancement” of existing, mature
applications is inevitable. As applications become pop-
ular, lots of players, including application providers and the
ISPs, will want to get involved in them, whether as a move
toward vertical integration, enhancement of performance or
reliability, or some other reason. This will almost certainly
lead to increased complexity, perhaps decreased reliability
or predictability, and perhaps an evolution of the overall
application away from the original vision. We should not
imagine that anyone can do much about this. If we design
applications so that the user can control what features “in
the network” are invoked, we may have done as much as we
can.
The most we can do to protect maturing applica-
tions is to bias the tussle. If application designers want
to preserve choice and end user empowerment, they should
be given advice about how to design applications to achieve
this goal. This observation suggests that we should gener-
ate “application design guidelines” that would help designers
avoid pitfalls, and deal with the tussles of success.
Keeping the net open and transparent for new ap-
plications is the most important goal. Innovation and
the launch of new applications is the engine that has driven
the growth of the Internet and the generation of new value.
So barriers to new applications are much more destructive
than network-based support of proven applications. Since
new applications must, almost of necessity, launch incremen-
tally, they most beneﬁt from the transparent simplicity that
the end to end arguments fostered. By the principle of isola-
tion of tussle, any barriers that are put into the network as
a result of the desire to control mature applications or issues
of trust should not prevent parties that want transparency
from getting it.
Failures of transparency will occur—design what
happens then. Today, when an IP address is unreachable,
there is little in the way of helpful information about why.
A sophisticated user can run traceroute, but today’s normal
user just gets frustrated. Tools for fault isolation and error
reporting would help – the hard challenge is not so much to
ﬁnd the fault but to report the problem to the right person
in the right language. That person may be someone who
can ﬁx the problem, or someone who can decide to choose
a diﬀerent path or provider – fault reporting is as much a
tool of tussle management as it is a tool of technical re-
pair. Of course, some devices that impair transparency may
intentionally give no error information or even reveal their
presence, and that must be taken into account in design of
diagnostic tools.10
Peeking is irresistible.
If there is information visible
in the packet, there is no way to keep an intermediate node
from looking at it. So the ultimate defense of the end to
end mode is end to end encryption. In most discussions of
the need for encryption, the putative threat is someone who
wants to steal your information or modify it. The ISP as
a “threat” is not the normal assumption. But if the ISP is
trying to control or modify what you are doing, then the
ISP is the issue.
Of course, encrypting the data stream has drawbacks.
One is that the actions of the ISP might actually be making
things better. They might be oﬀering performance improve-
ments or other beneﬁts that the end user actually wants.
But this situation is not an issue; if the user has control over
whether the data is encrypted or not, the user can decide
if the ISP actions are a beneﬁt or a hindrance. The other
drawback is that encrypting the stream might just be the
ﬁrst step in an escalating tussle between the end user and
the network provider, in which the response of the provider
is to refuse to carry encrypted data. It is probably not the
case that a commercial ISP would escalate to this level. In
the U.S., competition would probably discipline a provider
that tried to do this. But a conservative government with
a state-run monopoly ISP might. And in that case, policy
will probably trump technology in any case. Then the ad-
vantage of having the encrypted mode is that it would force
the government to be explicit about what their policy was.
Forcing the choice to be public and visible is about all that
technology can do to moderate this situation.11
Note that in a multi-way application, where third parties
are involved to insure the validity of the transaction, the
meaning of “end to end” gets more complex, and so does
the proper use of encryption.
10See the footnote above on the deliberations by the IAB on
the charter for the OPES working group.
11The next step in this sort of escalation is steganography—
the hiding of information inside some other form of data.
It is a signal of a coming tussle that this topic is receiving
attention right now.
3544.2 Separation of policy and mechanism
5. LESSONS FOR DESIGNERS
Another design principle of great age and uncertain ori-
gin12 is that technologists should design policy-free mecha-
nism, and allow those who use the system (whether literal
“users”, administrators, etc) to adjust the mechanisms to
match their speciﬁc needs. This paper challenges this prin-
ciple as perhaps being too simplistic. True value-neutral
design is, at best, extremely diﬃcult. Mechanism deﬁnes
the range of “policies” that can be invoked, which is an-
other way of saying that mechanism bounds the range of
choice. So in principle there is no pure separation of policy
from mechanism.
However, this does not negate the principle. The chief ad-
vantage of attempting to separate mechanism and policy is
to isolate some regions of the system from tussle. Even if the
attempt is not completely successful, these isolation regions
can serve to separate diﬀerent tussles from each other, and
can serve as technological ‘ﬁxed points’ that allow diﬀerent
tussles to play out at diﬀerent speeds.
• Perhaps the most challenging intellectual puzzle in this
design space is to discover parts of mechanism that
really can be divorced from policy — which, in other
words, actually are value-neutral.
One value (or bias) that is shared by many people is user
empowerment. This is the preference that the user, rather
than the service provider or the software provider, be able
to pick what applications to run, what servers and services
to use, and so on. User empowerment, to many, is a basic
Internet principle, but for this paper, it is the manifestation
of the right to choose—to drive competition, and thus drive
change.
One could argue that user empowerment is a bias, of the
“David and Goliath” sort—a bias imposed on the tussle be-
tween the little guy and the provider, who is seen as “big and
bad”. This view would suggest that to the extent one tries
to be value-neutral in the design of mechanism, one should
not favor user empowerment. One could also argue that the
fundamental design goal of the Internet is to hook comput-
ers together, and since computers are used for unpredictable
and evolving purposes, making sure that the users are not
constrained in what they can do is doing nothing more that
preserving the core design tenet of the Internet.
In this
context, user empowerment is a basic building block, and
should be embedded into all mechanism whenever possible.
This paper suggests that the latter view is the defensible
one, because choice is a basic tool to deal with tussle.
The recognition of tussle as a fundamental behavior does
give one further hint at how to try to separate mechanism
from policy. If one can ﬁnd spaces where tussle are unlikely,
then (as noted above) the interfaces and mechanisms can
be simpler. If one can truly separate tussles, then one can
do a better job of matching mechanism to problem. So the
instruction to “separate mechanism from policy” is not in-
correct, but just requires careful thought to carry out as best
one can.
12An early articulation of the principle can be found in [8].
This more complex interpretation of old design principles,
and the introduction of new principles, needs to be seen in
terms of system synthesis. How can we, as designers, build
systems with desired characteristics and improve the chances
that they come out the way we want? If we try to design
a system that is open, for example, which means we will
encounter the tussles surrounding vertical integration and
capture of value in exchange for investment, how can we
proceed?
One can learn from the past. To some of us in the re-
search community, a real frustration of the last few years is
the failure of explicit QoS to emerge as an open end-to-end
service. This follows on the failure of multicast to emerge
as an open end-to-end service. It is instructive to do a post-
mortem on these failures.13 Here is one hypothesis. For the
ISPs to deploy QoS, they would have to spend money to up-
grade routers and for management and operations. So there
is a real cost. There is no guarantee of increased revenues.
Why risk investment in this case? If the consumer could
exercise eﬀective competitive pressure in ISP selection, fear
and greed might have driven ISPs to invest, but the com-
petitive pressures were not suﬃcient. On the other hand, if
ISPs use the new QoS mechanisms in a closed way, rather
than an open way, they greatly enhance revenue opportu-
nities. Thus, for example, if they deploy QoS mechanisms
but only turn them on for applications that they sell, they
reduce the open nature of the Internet and create opportu-
nities for vertical integration. If Internet Telephony requires
QoS to work, and they only turn on QoS for their version
of Internet Telephony, then they can price it at monopoly
prices.
One can thus see the failure of QoS deployment as a fail-
ure ﬁrst to design any value-transfer mechanism to give the
providers the possibility of being rewarded for making the
investment (greed), and second, a failure to couple the de-
sign to a mechanism whereby the user can exercise choice
to select the provider who oﬀered the service (competitive
fear). The argument about choice here is actually subtle.
The user had the power to choose the level of QoS needed—
that could be expressed in the ToS bits. What was missing
was routing, to allow the user to favor one ISP over another
if that ISP honored the bits.
• Anyone who designs a new enhancement for the Inter-
net should analyze the tussles that it will trigger, and
the tussles in the surrounding context, and consider
how they can be managed to ensure that the enhance-
ment succeeds. As noted above, a powerful force is
the tussle of competition. Protocol design, by creating
opportunities for competition, can impose a direction
on evolution.
6. CONCLUSION
As the Internet evolves to become a full component of
society, the person most likely to be dismayed is the fabled
cypherpunk. [7] summarizes the cypherpunk view of privacy
as follows: “[T]he cypherpunk’s credo can be roughly para-
phrased as ‘privacy through technology, not through leg-
13The case study of the failure to deploy multicast is left as
an exercise for the reader.
355islation.’
If we can guarantee privacy protection through
the laws of mathematics rather than the laws of men and
whims of bureaucrats, then we will have made an important
contribution to society. It is this vision which guides and
motivates our approach to Internet privacy.” Our position
is that the laws of men and the so-called whims of bureau-
crats are part of the fabric of society, like it or not. They
are some of the building blocks of tussle, and must be ac-
cepted as such. We, as technical designers, should not try
to deny the reality of the tussle, but instead recognize our
power to shape it. Once we do so, we acquire a new set of
hard, technical problems to solve, and this is a challenge we
should step up to willingly.
7. ACKNOWLEDGMENTS
The authors gratefully acknowledge essential and ongoing
discussions with members of the NewArch project,14 partic-
ularly Mark Handley, Noel Chiappa, Ted Faber, and Aaron
Falk. Sharon Gillette, Jean Camp and the Sigcomm re-
viewers provided welcome comments and feedback, shaping
our future work as well as this paper. Sally Floyd provided
invaluable encouragement at a well chosen moment. Our
sincere thanks to all.
8. REFERENCES
[1] Blumenthal, M. S., and Clark, D. D. Rethinking
the design of the Internet: The end to end arguments
vs. the brave new world. ACM Transactions on
Internet Technology 1, 1 (August 2001). Version
appeared in Communications Policy in Transition:
The Internet and Beyond, B. Compaine and S.
Greenstein, eds. MIT Press, Sept. 2001.
[2] Computer Science and Telecommunications
Board, National Research Council. Realizing the
information future: The Internet and beyond, June
1994.
[3] Computer Science and Telecommunications
Board, National Research Council. Broadband:
Bringing home the bits, January 2002.
[4] Computer Systems Policy Project. Perspectives
on the national information infrastructure: Ensuring
interoperability, 1994.
[5] Cross-Industry Working Team. An architectural
framework for the national information infrastructure,
1994.
[6] Economides, N. The economics of networks.
International Journal of Industrial Organization 14, 6
(1996), 670–699.
[7] Goldberg, I., Wagner, D., and Brewer, E.
Privacy-enhancing technologies for the internet. In
Proceedings of IEEE COMPCON 97 (1997),
pp. 103–109.
[8] Levin, R., Cohen, E. S., Corwin, W. M.,
Pollack, F. J., and Wulf, W. A.
Policy/mechanism separation in HYDRA. In
Symposium on Operating Systems Principles (1975),
pp. 132–140.
[9] McKnight, L., and Bailey, J., Eds. Internet
Economics. MIT Press, 1997.
[10] Nissenbaum, H. Securing trust online: Wisdom or
oxymoron. Boston University Law Review (2001).
Available as http:
//www.princeton.edu/~helen/BU-final-trust.pdf.
[11] Saltzer, J., Reed, D., and Clark, D. D.
End-to-end arguments in system design. ACM
Transactions on Computer Systems 2, 4 (Nov. 1984).
14http://isi.edu/newarch
356