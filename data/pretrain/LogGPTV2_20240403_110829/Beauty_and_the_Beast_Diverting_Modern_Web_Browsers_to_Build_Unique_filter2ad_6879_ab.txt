### Entropy in Fingerprinting

The entropy of a fingerprint is a measure of its uniqueness and identifiability. The higher the entropy, the more unique and identifiable the fingerprint. Let \( H \) be the entropy, \( X \) a discrete random variable with possible values \(\{x_1, x_2, \ldots, x_n\}\), and \( P(X) \) a probability mass function. The entropy is given by the formula:

\[ H(X) = - \sum_{i=1}^{n} P(x_i) \log_b P(x_i) \]

where \( b = 2 \) for Shannon's entropy, resulting in units of bits. One bit of entropy reduces the probability of an event occurring by half.

### Normalized Shannon’s Entropy

To compare the AmIUnique and Panopticlick datasets, which have different sizes, we use a normalized version of Shannon’s entropy:

\[ \text{Normalized Entropy} = \frac{H(X)}{H_M} \]

where \( H_M \) represents the worst-case scenario where the entropy is maximum, and all values of an attribute are unique. This is calculated as \( H_M = \log_2(N) \), with \( N \) being the number of fingerprints in the dataset.

The advantage of this measure is that it does not depend on the size of the anonymity set but rather on the distribution of probabilities. This allows us to quantify the quality of our dataset with respect to an attribute's uniqueness independently of the number of fingerprints in the database, enabling a qualitative comparison between the two datasets despite their different sizes.

### Comparison with Panopticlick

**Table III: Normalized Shannon’s Entropy for Six Attributes**

| Attribute              | AmIUnique | Panopticlick |
|------------------------|-----------|--------------|
| User Agent             | 0.570     | 0.531        |
| List of Plugins        | 0.578     | 0.817        |
| List of Fonts          | 0.446     | 0.738        |
| Screen Resolution      | 0.277     | 0.256        |
| Timezone               | 0.201     | 0.161        |
| Cookies Enabled        | 0.042     | 0.019        |

For a fair comparison, we used our entire dataset, including fingerprints without JavaScript. We observe that the entropy values for both datasets are similar for all attributes except for the list of plugins and the list of fonts.

- **List of Plugins**: The most discriminating attribute, but there is a difference of 0.24. This can be attributed to the absence of plugins on mobile devices and the lack of support for the old NPAPI plugin architecture on Chrome since April 2015.
- **List of Fonts**: A noticeable drop of 0.29 occurs because half of the fingerprints in the AmIUnique dataset were collected on browsers without the Flash plugin installed or activated. Since our fingerprinting script collects the list of fonts through the Flash API, this means half of our fingerprints do not contain a list of fonts, reducing its entropy. The absence of Flash can be explained by (i) the lack of Flash on mobile devices and (ii) privacy-conscious users deactivating Flash. Despite this, the entropy of the list of fonts remains high.

The small value of entropy for the timezone indicates that our dataset is biased towards visitors living in the same geographical areas. A higher level of entropy would suggest a more globally distributed dataset.

### Distribution of Fingerprints

We compared frequency distributions with respect to anonymity set sizes from both datasets and observed very similar trends. Each attribute was also studied separately, and the most discriminating attributes were found to be consistent with those identified by Eckersley, with the addition of new efficient techniques like canvas fingerprinting. More details on the distributions can be found in Appendix D.

### Fingerprinting with Recent Web Technologies

AmIUnique collects 17 attributes to form a browser fingerprint. Out of the 118,934 fingerprints studied, 89.4% are unique. In this section, we analyze how the attributes collected with the most recent technologies (7 attributes) contribute to the uniqueness of fingerprints.

#### Canvas Fingerprinting

The HTML5 canvas element allows for scriptable rendering of 2D shapes and text, enabling websites to offer dynamic and interactive content. As discovered by Mowery et al. [4] and investigated by Acar et al. [6], canvas fingerprinting can differentiate devices with pixel precision by rendering a specific picture following a fixed set of instructions. This technique is gaining popularity in tracking scripts due to the rendered picture's dependence on several system layers (browser, OS, graphics drivers, and hardware).

**Our Test:**
The fingerprinting script used by AmIUnique includes a test based on the canvas element. Figure 1 displays the image rendered by a Firefox browser running on Fedora 21 with an Intel i7-4600U processor. Our test replicates the test performed by AddThis and described in detail by Acar et al. [6]: print a pangram twice with different fonts and colors, the U+1F603 Unicode character, and a rectangle with a specific color. The only adaptation is to change the position of the second string so that it is not intertwined with the first one.

**Figure 1: Example of a Rendered Picture Following the Canvas Fingerprinting Test Instructions**

**Figure 2: Comparison of the “Smiling Face with Open Mouth" Emoji on Different Devices and Operating Systems**

- **Font Probing:** This test captures OS diversity by rendering the same pangram twice. For the first line, we force the browser to use one of its fallback fonts by asking for a font with a fake name. For the second line, the browser uses the Arial font, common in many operating systems.
- **Device and OS Fingerprinting:** The last character of our string, the U+1F603 Unicode character, is crucial. This character should not be confused with an emoticon, which is a succession of letters, numbers, and punctuation marks.

### Mobile and Desktop Fingerprint Comparison

Using the attributes from Table I, we uniquely identified 90% of desktop fingerprints. This number is lower for mobile fingerprints at 81%, yet still effective. The discriminating attributes for mobile fingerprints differ significantly from those for desktop fingerprints, primarily due to the lack of plugins, especially Flash, on mobile devices.

**Figure 3: Comparison of Anonymity Set Sizes on the List of Plugins Between Desktop and Mobile Devices**

**Figure 4: Comparison of Anonymity Set Sizes on the User-Agent Between Desktop and Mobile Devices**

**Figure 5: Comparison of Anonymity Set Sizes on the User-Agent Between Android and iOS Devices**

Despite the unavailability of the two most discriminating attributes from desktop fingerprints (list of fonts and plugins), mobile fingerprints remain highly recognizable. This is due to:
- **Rich and Revealing User Agents:** Mobile user-agents often include the model of the phone and the version of the Android firmware, making them five times more unique than desktop user-agents.
- **Discriminating Emojis:** Mobiles have unique hardware impacting the final rendered picture, and emojis can be very discriminating between devices.

In the end, desktop and mobile fingerprints are equally unique, though the discriminating information comes from different attributes.

### Comparison of Mobile OS and Browsers

More than 97% of mobile fingerprints collected on AmIUnique run on either Android or iOS. Figure 5 shows the size of anonymity sets for user-agents on both Android and iOS devices. Android devices show more diversity, with three times as many users in an anonymity set of size 1 (9% for iOS devices and 35% for Android devices). This is due to the wealth of Android models available. For iOS devices, the diversity is less pronounced, with half of the collected iOS fingerprints in large anonymity sets.

**Figure 5: Comparison of Anonymity Set Sizes on the User-Agent Between Android and iOS Devices**

The complete details of attributes' entropy between desktop and mobile devices can be found in Table A of the Appendix.