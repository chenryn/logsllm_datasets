Automatic Database Management System Tuning Through
Large-scale Machine Learning
Dana Van Aken Andrew Pavlo Geoffrey J. Gordon Bohan Zhang
CarnegieMellonUniversity CarnegieMellonUniversity CarnegieMellonUniversity PekingUniversity
PI:EMAIL PI:EMAIL PI:EMAIL PI:EMAIL
ABSTRACT manyconfigurationknobs[22,47,36].PartofwhatmakesDBMSs
soenigmaticisthattheirperformanceandscalabilityarehighlyde-
Databasemanagementsystem(DBMS)configurationtuningisan
pendentontheirconfigurations.Furtherexacerbatingthisproblem
essential aspect of any data-intensive application effort. But this
isthatthedefaultconfigurationsoftheseknobsarenotoriouslybad.
is historically a difficult task because DBMSs have hundreds of
Asanexample,thedefaultMySQLconfigurationin2016assumes
configuration“knobs”thatcontroleverythinginthesystem, such
thatitisdeployedonamachinethatonlyhas160MBofRAM[1].
as the amount of memory to use for caches and how often data
Giventhis,manyorganizationsresorttohiringexpensiveexperts
is written to storage. The problem with these knobs is that they
toconfigurethesystem’sknobsfortheexpectedworkload. Butas
arenotstandardized(i.e.,twoDBMSsuseadifferentnameforthe
databasesandapplicationsgrowinbothsizeandcomplexity,opti-
sameknob),notindependent(i.e.,changingoneknobcanimpact
mizingaDBMStomeettheneedsofanapplicationhassurpassed
others),andnotuniversal(i.e.,whatworksforoneapplicationmay
theabilitiesofhumans[11]. Thisisbecausethecorrectconfigura-
besub-optimalforanother). Worse,informationabouttheeffects
tionofaDBMSishighlydependentonanumberoffactorsthatare
oftheknobstypicallycomesonlyfrom(expensive)experience.
beyondwhathumanscanreasonabout.
Toovercomethesechallenges,wepresentanautomatedapproach
PreviousattemptsatautomaticDBMSconfigurationtoolshave
thatleveragespastexperienceandcollectsnewinformationtotune
certaindeficienciesthatmaketheminadequateforgeneralpurpose
DBMSconfigurations:weuseacombinationofsupervisedandun-
database applications. Many of these tuning tools were created
supervisedmachinelearningmethodsto(1)selectthemostimpact-
byvendors, andthustheyonlysupportthatparticularcompany’s
ful knobs, (2) map unseen database workloads to previous work-
DBMS[22,33,37].Thesmallnumberoftuningtoolsthatdosup-
loadsfromwhichwecantransferexperience,and(3)recommend
portmultipleDBMSsstillrequiremanualsteps,suchashavingthe
knobsettings.Weimplementedourtechniquesinanewtoolcalled
DBA(1)deployasecondcopyofthedatabase[24],(2)mapdepen-
OtterTuneandtesteditonthreeDBMSs.Ourevaluationshowsthat
denciesbetweenknobs[49],or(3)guidethetrainingprocess[58].
OtterTunerecommendsconfigurationsthatareasgoodasorbetter
AllofthesetoolsalsoexamineeachDBMSdeploymentindepen-
thanonesgeneratedbyexistingtoolsorahumanexpert.
dentlyandthusareunabletoapplyknowledgegainedfromprevi-
oustuningefforts.Thisisinefficientbecauseeachtuningeffortcan
1. INTRODUCTION
takealongtimeandusealotofresources.
Theabilitytocollect,process,andanalyzelargeamountsofdata Inthispaper,wepresentatechniquetoreusetrainingdatagath-
isparamountforbeingabletoextrapolatenewknowledgeinbusi- eredfromprevioussessionstotunenewDBMSdeployments. The
nessandscientificdomains[35,25]. DBMSsarethecriticalcom- crux of our approach is to train machine learning (ML) models
ponentofdata-intensive(“BigData”)applications[46]. Theper- frommeasurementscollectedfromtheseprevioustunings,anduse
formance of these systems is often measured in metrics such as themodelsto(1)selectthemostimportantknobs,(2)mapprevi-
throughput(e.g.,howfastitcancollectnewdata)andlatency(e.g., ouslyunseendatabaseworkloadstoknownworkloads,sothatwe
howfastitcanrespondtoarequest). cantransferpreviousexperience,and(3)recommendknobsettings
AchievinggoodperformanceinDBMSsisnon-trivialastheyare thatimproveatargetobjective(e.g.,latency,throughput). Reusing
complexsystemswithmanytunableoptionsthatcontrolnearlyall pastexperiencereducestheamountoftimeandresourcesittakes
aspectsoftheirruntimeoperation[24]. Suchconfigurationknobs totuneaDBMSforanewapplication. Toevaluateourwork,we
allowthedatabaseadministrator(DBA)tocontrolvariousaspects implemented our techniques using Google TensorFlow [50] and
oftheDBMS’sruntimebehavior. Forexample, theycansethow Python’s scikit-learn [39] in a tuning tool, called OtterTune,
much memory the system allocates for data caching versus the andperformedexperimentsfortwoOLTPDBMSs(MySQL,Post-
transaction log buffer. Modern DBMSs are notorious for having gres) and one OLAP DBMS (Vector). Our results show that Ot-
terTuneproducesaDBMSconfigurationfortheseworkloadsthat
Permissiontomakedigitalorhardcopiesofallorpartofthisworkforpersonalor achieves58–94%lowerlatencycomparedtotheirdefaultsettings
classroomuseisgrantedwithoutfeeprovidedthatcopiesarenotmadeordistributed
orconfigurationsgeneratedbyothertuningadvisors.Wealsoshow
forprofitorcommercialadvantageandthatcopiesbearthisnoticeandthefullcitation
onthefirstpage. Copyrightsforcomponentsofthisworkownedbyothersthanthe that OtterTune generates configurations in under 60 min that are
author(s)mustbehonored.Abstractingwithcreditispermitted.Tocopyotherwise,or within94%ofonescreatedbyexpertDBAs.
republish,topostonserversortoredistributetolists,requirespriorspecificpermission
Theremainderofthispaperisorganizedasfollows. Sect.2be-
and/orafee.Requestpermissionsfrompermissions@acm.org.
ginswithadiscussionofthechallengesindatabasetuning.Wethen
SIGMOD’17,May14-19,2017,Chicago,IL,USA
provideanoverviewofourapproachinSect.3,followedbyade-
©2017Copyrightheldbytheowner/author(s). PublicationrightslicensedtoACM.
ISBN978-1-4503-4197-4/17/05...$15.00 scriptionofourtechniquesforcollectingDBMSmetricsinSect.4,
DOI:http://dx.doi.org/10.1145/3035918.3064029
1009
)ces(elit-%ht99
2.0 3.0 6.0 Workload#1 600 MySQL 1.5 Workload#2 )ces(elit-%ht99 )ces(elit-%ht99 sbonkforebmuN
1.0 2.0 4.0 Workload#3 400 Postgres
0.5
0.0 1.0 2.0 200
Logfil2 e0 s0
4 iz0 e0
6 (M00 B8 )00 25002 B0 u00 ffe1 r5 p0 o0 o1 l0 s0 iz0 e5 (0 M0 B) 0.0 500 B10 u0 ff0 erp1 o5 o0 l0 size20 (0 M0 B)2500 3000 0.0 Config#1 Config#2 Config#3 20 000 2004 Rel2 e0 a0 s8 edate2012 2016
(a)Dependencies (b)ContinuousSettings (c)Non-ReusableConfigurations (d)TuningComplexity
Figure 1: Motivating Examples – Figs. 1a to 1c show performance measurements for the YCSB workload running on MySQL (v5.6) using different
configurationsettings.Fig.1dshowsthenumberoftunableknobsprovidedinMySQLandPostgresreleasesovertime.
identifyingtheknobsthathavethemostimpactinSect.5,andrec- encesinperformancefromonesettingtothenextcouldbeirreg-
ommendingsettingsinSect.6. InSect.7,wepresentourexperi- ular. Forexample, thesizeoftheDBMS’sbufferpoolcanbean
mentalevaluation.Lastly,weconcludewithrelatedworkinSect.8. arbitraryvaluefromzerototheamountofDRAMonthesystem.
In some ranges, a 0.1 GB increase in this knob could be incon-
2. MOTIVATION sequential, while in other ranges, a 0.1 GB increase could cause
performancetodropprecipitouslyastheDBMSrunsoutofphys-
There are general rules or “best practice” guidelines available
ical memory. To illustrate this point, we ran another experiment
for tuning DBMSs, but these do not always provide good results
whereweincreaseMySQL’sbufferpoolsizefrom10MBto3GB.
forarangeofapplicationsandhardwareconfigurations. Although
TheresultsinFig.1bshowthatthelatencyimprovescontinuously
onecanrelyoncertainpreceptstoachievegoodperformanceona
upuntil1.5GB,afterwhichtheperformancedegradesbecausethe
particularDBMS,theyarenotuniversalforallapplications. Thus,
DBMSrunsoutofphysicalmemory.
manyorganizationsresorttohiringexpensiveexpertstotunetheir
system.Forexample,a2013surveyfoundthat40%ofengagement Non-ReusableConfigurations: TheeffortthataDBAspends
requestsforalargePostgresservicecompanywereforDBMStun- ontuningoneDBMSdoesnotmaketuningthenextoneanyeas-
ingandknobconfigurationissues[36]. ier. Thisisbecausethebestconfigurationforoneapplicationmay
OnecommonapproachtotuningaDBMSisfortheDBAtocopy not be the best for another. In this experiment, we execute three
thedatabasetoanothermachineandmanuallymeasuretheperfor- YCSBworkloadsusingthreeMySQLknobconfigurations. Each
manceofasampleworkloadfromtherealapplication. Basedon configurationisdesignedtoprovidethebestlatencyforoneofthe
theoutcomeofthistest,theywillthentweaktheDBMS’sconfigu- workloads(i.e.,config#1isthebestforworkload#1,samefor#2
rationaccordingtosomecombinationoftuningguidelinesandin- and#3).Fig.1cshowsthatthebestconfigurationforeachworkload
tuitionbasedonpastexperiences.TheDBAthenrepeatstheexper- istheworstforanother. Forexample,switchingfromconfig#1to
imenttoseewhethertheperformanceimproves[47].Sucha“trial- config#3improvesMySQL’slatencyforworkload#3by90%,but
and-error” approach to DBMS tuning is tedious, expensive, and degradesthelatencyofworkload#1by3500%.Config#2provides
inefficientbecause(1)manyoftheknobsarenotindependent[24], thebestaverageperformanceoverall. Butbothworkloads#1and
(2)thevaluesforsomeknobsarecontinuous,(3)oneoftencannot #3improvebyover2×usingtheiroptimizedconfigurations.
reusethesameconfigurationfromoneapplicationtothenext,and TuningComplexity: Lastly,thenumberofDBMSknobsisal-
(4)DBMSsarealwaysaddingnewknobs. ways increasing as new versions and features are released. It is
Wenowdiscusstheseissuesinfurtherdetail. Tohighlighttheir difficultforDBAstokeepuptodatewiththesechangesandunder-
implications,weranaseriesofexperimentsusingMySQL(v5.6) standhowthatwillaffecttheirsystem.ThegraphinFig.1dshows
thatexecutevariationsoftheYCSBworkloadwithdifferentknob thenumberofknobsfordifferentversionsofMySQLandPostgres
settings. Wepresentthedetailsofouroperatingenvironmentfor datingbackto2001. Thisshowsthatover15yearsthenumberof
theseexperimentsinSect.7. knobsincreasedby3×forPostgresandbynearly6×forMySQL.
Dependencies: DBMS tuning guides strongly suggest that a TheaboveexamplesshowhowtrickyitistoconfigureaDBMS.
DBA only change one knob at a time. This is wise but woefully Thiscomplexityisamajorcontributingfactortothehightotalcost
slowgiventhelargenumberofknobs.Itisalsonotentirelyhelpful of ownership for database systems. Personnel is estimated to be
becausechangingoneknobmayaffectthebenefitsofanother.But almost50%ofthetotalownershipcostofalarge-scaleDBMS[43],
it is difficult enough for humans to understand the impact of one andmanyDBAsspendnearly25%oftheirtimeontuning[21].
knobletalonetheinteractionsbetweenmultipleones. Thediffer- Abetterapproachthanexaminingeachdatabaseapplicationsep-
entcombinationsofknobsettingsmeansthatfindingtheoptimal arately is to use an automated tool that leverages the knowledge
configurationisNP-hard[49].Todemonstratethispoint,wemea- gainedfromoneapplicationtoassistinthetuningofothers.
suredtheperformanceofMySQLfordifferentconfigurationsthat
vary the size of its buffer pool1 and the size of its log file.2 The
resultsinFig.1ashowthattheDBMSachievesbetterperformance
3. SYSTEMOVERVIEW
whenboththebufferpoolandlogfilesizesarelarge. Butingen-
eral,thelatencyislowwhenthebufferpoolsizeandlogfilesize We now present our automatic database tuning tool that over-
are “balanced.” If the buffer pool is large and the log file size is comestheproblemsthatwedescribedabove.OtterTuneisatuning
small,thentheDBMSmaintainsasmallernumberofdirtypages service that works with any DBMS. It maintains a repository of
andthushastoperformmoreflushestodisk. datacollectedfromprevioustuningsessions,andusesthisdatato
buildmodelsofhowtheDBMSrespondstodifferentknobconfigu-
ContinuousSettings:AnotherdifficultaspectofDBMStuning
rations.Foranewapplication,itusesthesemodelstoguideexperi-
is that there are many possible settings for knobs, and the differ-
mentationandrecommendoptimalsettings.Eachrecommendation
1 MySQLKnob:innodb_buffer_pool_size providesOtterTunewithmoreinformationinafeedbackloopthat
2 MySQLKnob:innodb_log_file_size allowsittorefineitsmodelsandimprovetheiraccuracy.
1010
WhenOtterTune’stuningmanagerreceivestheresultofanew
Tuning Manager
observationperiodfromthecontroller,itfirststoresthatinforma-
Analysis Planning
tioninitsrepository. Fromthis,OtterTunethencomputesthenext
rellortnoC
configurationthatthecontrollershouldinstallonthetargetDBMS.
AswediscussinSect.6,selectingthisnextconfigurationisthecrit-
ML Models Data JDBC DBMS icaltaskinOtterTune. Therearetwodistinctstepsthattakeplace
Repository aftereachobservationperiodthatdeterminewhatkindofconfigu-
rationthesystemwillrecommend.Inthefirststep,OtterTunetries
Figure2: OtterTuneArchitecture–Anoverviewofthecomponentsin to“understand”thetargetworkloadandmapittoaworkloadfor
theOtterTunesystem. ThecontrollerconnectstotheDBMSandcollects thesameDBMSandhardwareprofilethatithasseen(andtuned)
informationabouttheperformanceofthesystem.Thisinformationisthen in the past. Once the tuning manager has found the best match
senttothetuningmanagerwhereitisstoredinitsrepository.Itthenbuilds usingthedatathatithascollectedsofar,itthenstartsthesecond
modelsthatareusedtoselectanoptimalconfigurationfortheDBMS.
stepwhereitrecommendsaknobconfigurationthatisspecifically
Fig.2showsanoverviewofOtterTune’sarchitecture. Thesys- designedtoimprovethetargetobjectiveforthecurrentworkload,
temiscomprisedoftwoparts.Thefirstistheclient-sidecontroller DBMS, and hardware. Toassist theDBA withdeciding whether
thatinteractswiththetargetDBMStobetuned.Itcollectsruntime toterminatethetuningsession, OtterTuneprovidesthecontroller
informationfromtheDBMSusingastandardAPI(e.g.,JDBC),in- withanestimateofhowmuchbettertherecommendedconfigura-
stallsnewconfigurations,andcollectsperformancemeasurements. tion is compared to the best configuration that it has seen so far.