protected.
As a general rule, the only reason why hacking a machine takes any time at all is
because there are things about it that we don’t know. In a majority of cases, if we
knew everything there was to know about a specific target ahead of time, then
we would already know the precise few commands or lines of code necessary to
compromise it.
With this in mind, we can think about PWK as teaching two sets of different skills at the same
time: one relating to penetration testing technique, and one relating to methodology, approach,
and attitude.
The object level set of skills is taught explicitly via the Modules’ Learning Objectives. You will read
about how to gather information, find and exploit perimeter defenses, escalate your privileges,
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 22
Made in Morocco
Penetration Testing with Kali Linux
move laterally between machines, and pivot to other networks. All of this information is covered
extensively and inside the PWK Modules themselves.
However, the structure of the course enables a second order of learning. This second layer is
arguably the more important one, though it is much more difficult to quantify. It provides learners
with a framework for how to think, feel, and act in novel scenarios. And since penetration testing
is about novel scenarios (i.e. uncertainty), it is critical that we become comfortable orienting them.
PWK contains seven learning modalities:
1. Learning Modules
2. Demonstration Module Exercises
3. Application Module Exercises
4. Capstone Module Exercises y
5. The Assembling the Pieces Module
k
6. Challenge Labs (type one)
7. Challenge Labs (type two) s
We can think about these learning modalities as points along a spectrum, where our uncertainty
o
about the space we’re operating in increases as we progress through the course. Let’s consider
each mode one by one.
n
2.2.2 Learning Modules
As mentioned above, the text-baseid Learning Modules all cover specific penetration testing
concepts, techniques, and skills. Tzhey are each approximately between 30 and 50 pages in length,
and they are accompanied by videos that go over the same concepts in a visual and interactive
manner. They are logically ordered in a way that allows for progressively building on top of
D
previously learned skills.
In our model of uncertainty, they are considered to be no/low uncertainty, because the learner only
needs to passively read or watch the content. However, we encourage you to start the relevant
lab machines and follow along by typing the commands and clicking around in the same manner
as demonstrated. This helps you internalize the material.
2.2.3 Demonstration Module Exercises
There are several types of Module exercise. The objective of the first kind is for the learner to
actually absorb the content by following the demonstration.
This type of exercise asks the learner to either input some factual, knowledge based answer to
the question, or to obtain a randomized flag by copying the exact some commands and input
shown in the course material.
The amount of uncertainty here is still very low, because the learner can obtain the solution
directly by reading or watching the Module.
For example, the Client Side Attacks Module has a Learning Unit about exploiting Microsoft Office.
In that Learning Unit, the learner will be asked to perform the demonstrated techniques on a copy
of the original machine used to create the demonstration.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 23
Made in Morocco
Penetration Testing with Kali Linux
2.2.4 Applied Module Exercises
Here we start to slowly increase the amount of uncertainty. Instead of the learner needing to copy
exactly the same steps, the learner now must apply their skills in novel but limited scenarios.
For example, the previously mentioned Learning Unit on Microsoft Office contains a second
machine that is slightly modified from the first. The learner needs to use the same type of
techniques, but the modifications on the second machine will require that the learner adapt to the
new situation.
This kind of exercise helps the learner reinforce what they learned in the demonstration, and also
gives them the opportunity to think outside of the box.
2.2.5 Capstone Module Exercises
y
While demonstration and application exercises are constrained to specific Learning Units,
Capstone Exercises have a wider scope. In particular they encompass the entire Module. This
k
increases the amount of uncertainty present, because the learner may not know which
techniques or concepts from the module are specifically required to complete the exercise.
s
In addition to a Learning Unit on exploiting Microsoft Office, the Client Side Attacks Module also
contains Learning Units on reconnaissance, and another on Windows Library files. So a capstone
o
exercise for this Module might include a directive to attack a specific machine with one of the
client-side attacks, but it won’t necessarily be clear which one to use without exploration of the
machine. n
The purpose of Capstone exercises is to provide ample opportunities to actually hack machines
from beginning to end, but still undeir relatively constrained parameters. In particular, the learner
knows the kind of attacks to use, zand they know which machines to use them on.
2.2.6 Assembling the Pieces
D
There are 22 Modules in PWK (aside from this introduction and the final module) and for each of
them the learner will go through the process of:
1. Reading and watching the Module and preferably following along
2. Completing the Demonstration exercises by copying the input
3. Working through the Application exercises by using specific techniques
4. Attacking machines from start to finish via the Capstone Exercises
At this point, learners will be just about ready for the Challenge Labs. The Assembling the Pieces
Module represents a bridge between the Modules and the Labs. It provides a full walkthrough of a
small penetration test and allows the learner to follow along with all demonstrated steps. In a
sense, this Module is the equivalent of a demonstration exercise for the entire set of Challenge
Labs.
2.2.7 Challenge Labs 1-3
There are two types of Challenge Labs. The first three are called scenarios. Each scenario
consists of a set of networked machines and a short background story that puts those machines
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 24
Made in Morocco
Penetration Testing with Kali Linux
in context. Your goal is to obtain access to a Domain Administrator account on an Active
Directory domain, and compromise as many machines on the network as possible.
In the same way that Capstone Exercises test the learner on the material of multiple Learning
Units, so too do these scenarios test the learner on the material of multiple Learning Modules.
The uncertainty here is high, because you will not know which machines are vulnerable to what
types of attacks. In addition, each of the three Challenge Labs progressively increase in
complexity due to additional machines, subnetworks, and attack vectors.
Further, you will not know that any specific machine is directly vulnerable in the first place. Some
machines will be dependent on information, credentials, or capabilities that will be found on other
machines. And some machines may not even be (intentionally) exploitable until after the Domain
Controller is compromised.
All machines contain either a local.txt file, a proof.txt file, or both. The contents of these files are
y
randomized hashes that can be submitted to the OLP to log each compromise. Just like the
Module exercise flags, the contents of these files will change on every revert of the machine. We’ll
k
discuss more details related to these scenarios in the final Module of PWK.
2.2.8 Challenge Labs 4-6 s
The second type of Challenge Lab consists of an OSCP-like experience. They are each composed
o
of six OSCP machines. The intention of these Challenges is to provide a mock-exam experience
that closely reflects a similar level of difficulty to that of the actual OSCP exam.
n
Each challenge contains three machines that are connected via Active Directory, and three
standalone machines that do not have any dependencies or intranet connections. All the
standalone machines have a local.txit and a proof.txt.
z
While the Challenge Labs have no point values, on the exam the standalone machines would be
worth 20 points each for a total of 60 points. The Active Directory set is worth 40 points all
D
together, and the entire domain must be compromised to achieve any points for it at all.
All the intended attack vectors for these machines are taught in the PEN-200 Modules, or are
leveraged in the first three Challenge Labs. However, the specific requirements to trigger the
vulnerabilities may differ from the exact scenarios and techniques demonstrated in the course
material. You are expected to be able to take the demonstrated exploitation techniques and
modify them for the specific environment.
Also included with your initial purchase of the PWK course is an attempt at the OSCP certification
exam4 itself. The exam is optional, so it is up to you to decide whether or not you would like to
tackle it.
To schedule your OSCP exam, go to your exam scheduling calendar. The calendar can be located
in the OffSec Learning Portal under the course exam page. Here you will find your exam expiry
date, as well as schedule the exam for your preferred date and time.
Keep in mind that you won’t be able to select a start time if the exam labs are full for that time
period so we encourage you to schedule your exam as soon as possible.
4 (OffSec, 2023), https://help.offsec.com/hc/en-us/categories/360002666252-General-Frequently-Asked-Questions-FAQs-
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 25
Made in Morocco
Penetration Testing with Kali Linux
We will cover the exam in more detail in the final Learning Module of this course. For additional
information, please visit our support page.5
2.3 Summary of PWK Learning Modules
This Learning Unit covers the following Learning Objectives:
• Obtain a high level overview of what’s covered in each PEN-200 Learning Module
In the previous Learning Units, we went over the general structure and specific components of
PWK. In this Learning Unit, we will summarize each of the Learning Modules included within the
course.
2.3.1 Getting Started: Optional Ramp-up Modules
y
We begin with three optional Modules from our Fundamentals series. These Modules are
included in PWK for those learners who desire a softer start to their PWK learning journey.
k
Introduction to Cybersecurity provides a broad survey on the current state of the world of
Cybersecurity. It covers how Cybersecurity is practiced sas a discipline and what kinds of threats
and threat actors exist. It also covers security principles, controls and strategies, Cybersecurity
laws, regulations and frameworks, and career opportunities within the industry.
o
Effective Learning Strategies is a practical introduction to learning theory that explains OffSec’s
unique approach to teaching. This module nbegins with an overview of how learning happens and
then explores the construction of OffSec materials. The second half of the module is immediately
applicable for learners and includes tactics, strategies, and specific, practical steps.
i
Finally, we continue with a Mozdule on Report Writing for Penetration Testers. This Module
provides a framework, some advice, and some tips on writing notes as you progress through a
penetration test. It also covers how you might think about writing a penetration testing report. The
D
OSCP exam requires each learner to submit a report of their exam penetration test, so it is
recommended to practice your note taking and report writing skills as you proceed with the
Module exercises and Challenge Lab machines.
2.3.2 Enumeration and Information Gathering
We then dive into PWK proper, starting with one of the most important aspects of penetration
testing: Information Gathering. Often called by its synonym enumeration, the vast majority of one’s
time during a penetration test is spent on information gathering of one form or another. However,
this Module is specifically about how to approach a network at the very outset of an engagement.
We extend our information gathering toolkit by exploring the concept of Vulnerability Scanning.6
Vulnerability scanning offers us several techniques to narrow our scope within a particular
network. It helps us identify machines that are especially likely to be vulnerable. Attack vectors on
such machines are often colloquially called low-hanging fruit, as the imagery of reaching up to
take the easy pieces of fruit off a tree is particularly powerful.
5 (OffSec, 2023), https://help.offsec.com/
6 (Wikipedia, 2023), https://en.wikipedia.org/wiki/Vulnerability_scanner
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 26
Made in Morocco
Penetration Testing with Kali Linux
2.3.3 Web Application and Client Side Attacks
It is now time to start learning some perimeter attacks. By perimeter attacks, we mean methods
of infiltration that can be reliably done from the internet. In other words, attacks that can be
initiated without any sort of access to an organization’s internal network.
We begin with an extensive exploration of Web Application attacks. There are two primary
reasons for starting here. The first is that Web vulnerabilities are among the most common
attacks vectors available to us, since modern web apps usually allow users to submit data to
them. The second is that web applications are inherently visual and therefore provide us with a
nice interface for understanding why our attacks work in the way that they do.
Introduction to Web Applications begins by covering a methodology, a toolset, and an
enumeration framework related to web applications that will help us throughout the course. It
then covers our first vulnerability class: Cross-Site Scripting (XySS).7 XSS is an excellent
vulnerability to start with because it targets the user of a web application as opposed to the
server running it. Since the vast majority of our regular day-to-day usage of web applications is as
k
normal users, XSS can be unusually intuitive, compared to other types of attacks.
s
Due to the fact that XSS targets users, it can be considered both a Web
o
Application attack and a Client-Side Attack as we’ll soon learn.
n
We continue our exploration of web application attacks in Common Web Application Attacks,
where we survey four different kinds of vulnerabilities. Directory Traversal8 provides us with an
i
example of how we can obtain access to information that we’re not supposed to. File Inclusion
z
shows us what can happen when certain configurations are not set up judiciously by a web
administrator. File Upload Vulnerabilities9 demonstrate how we can take advantage of the ability
to upload our own files to aD web server. Finally, Command Injection10 allows us to run code of our
choice on the web server itself.
Our examination of web-based attacks concludes with a dedicated Module on SQL Injection,
otherwise known as SQLi.11 This vulnerability class is particularly important not only because of
how common it is, but because it teaches us how weaknesses can arise in a system due to
multiple components interacting with each other in complex ways. In the case of SQLi, a web
server and a database need to both be set up in precise ways so that we as attackers cannot
abuse them.
Client-Side Attacks are another very common external class of attacks. They generally deal with
methods of taking advantage of human users of computer systems. In this Module, we’ll learn
how to perform reconnaissance on a system, attack users of common programs like Microsoft
Office, and even how to abuse Microsoft Library Files.
7 (OffSec, 2023), https://www.offsec.com/offsec/clarifying-hacking-with-xss/
8 (OWASP, 2023), https://owasp.org/www-community/attacks/Path_Traversal
9 (OWASP, 2023), https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload
10 (OWASP, 2023), https://owasp.org/www-community/attacks/Command_Injection
11 (OffSec, 2023), https://www.offsec.com/offsec/start-studying-security-with-sqli/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 27
Made in Morocco
Penetration Testing with Kali Linux
2.3.4 Other Perimeter Attacks
It is relatively common to encounter various types of external-facing services on a penetration
test that are vulnerable to different kinds of attacks. However, as penetration testers we will rarely
have time to write our own exploits from scratch in the middle of an engagement.
Luckily, there are several ways in which we can benefit from the experience of the information
security community. Locating Public Exploits will portray several different means of working with
exploits that are available on Kali Linux and on the internet.12 Then, Fixing Exploits will help us
adapt these exploits to suit our specific needs.
We then explore the very surface of a very exciting subject: Anti Virus Evasion. While Anti Virus
(AV) evasion isn’t itself a perimeter attack, having some knowledge of how to avoid AV will be
helpful since most modern day enterprises do deploy AV solutions.
y
Finally, we complete our review of perimeter attacks with an analysis of cryptography and
Password Attacks. Weak or predictable passwords are extremely common in most organizations.
k
This Module covers how to attack network services and how to obtain and crack various kinds of
credentials.
s
2.3.5 Privilege Escalation and Lateral Movement
o
Once we obtain access to a machine, we suddenly have a whole set of new actions and activities
open to us. We may want to increase our privileges13 on the machines so that we can fully control
it, or we might want to use it to gain accessn to other machines on the network.
Windows Privilege Escalation demonstrates how after compromising a Windows target, we can
use our new legitimate permissionsi to become an Administrator. We will learn how to gather
information, exploit various types zof services, and attack different Windows components.
Then, Linux Privilege Escalation goes through the same process with Linux targets and obtaining
D
root level permissions. It reinforces the methodology learned in the previous Module and covers
Linux-specific techniques.
Escalating permissions is instrumentally important on an engagement because doing so gives us
more access. But as penetration testers, we always want to ask ourselves what the biggest
impact our attacks can have on the network to provide the most value for our clients. Sometimes,
it can be even more effective to gain access to another machine owned by the organization.
When we move from one machine to another on the same network, we call this pivoting,14 and
when we move into another subnetwork we call this tunneling.15 Port Redirection and SSH
Tunneling covers the basics of these persistence skills, while Tunneling through Deep Packet
Inspection showcases a particular technique that can be used to evade a common network-layer
defense.
12 (OffSec, 2023), https://www.exploit-db.com/
13 (Wikipedia, 2023), https://en.wikipedia.org/wiki/Privilege_escalation
14 (NIST, 2022), https://csrc.nist.gov/glossary/term/pivot#:~:text=Definition(s)%3A,persistent%20threat%20(APT)%20attacks.
15 (Wikipedia, 2023), https://en.wikipedia.org/wiki/Tunneling_protocol
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 28
Made in Morocco
Penetration Testing with Kali Linux
We wrap up this portion of the course with an exploration of The Metasploit Framework (MSF).16
MSF is a powerful set of tools that help us automate many of the enumeration and exploitation
steps we’ve learned so far.
2.3.6 Active Directory
Active Directory17 is one of the most complex and important technologies for us to learn as
penetration testers because it is ubiquitous in today’s enterprise environment. PWK dedicates
three Modules to this area: Active Directory Introduction and Enumeration paints a picture of how
to think specifically about Windows machines in the context of an Active Directory domain. We