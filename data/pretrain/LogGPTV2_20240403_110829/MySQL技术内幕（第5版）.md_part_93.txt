---
## Page 406
盟办公室递交更改申请。提供这项功能，有助于保持成员信息处于最新状态，同时减少联盟
己的成员资料。有了这个脚本，成员便可以随时改正或者更新他们自己的资料，而不必再向联
9.2.3在线编辑美史联盟成员信息
的信息，应该选用其他办法，如选用会话，它会把信息保存在服务器端。
为 index.php，以替换原有的那个同名文件。）
链接，然后访问者便可以通过这个小测验来测试他们自己的知识水平。（你可以把index5.php
或者再次显示刚才那道测验题：
根据比较结果，check_response（）函数会提供一些反馈，然后生成并显示一道新的测验题
字段里，而用户的选择答案编码在 response 字段里，因此只需要比较这两个字段的值即可。
什么大问题，但这个例子正好说明隐藏字段一点儿也不安全。对于那些需要向用户严格保密
想知道其中的原因，可以把 pres_quiz.php 脚本安装到 Web 服务器文档树的 ushl 目录里,
藏字段不应该用于传递任何不能让用户直接查看的信息，因为它们其实毫无安全可言。如果
用户不会看到它们。对于这种只是为了好玩而编写的脚本，这种方式没什么问题。但是，隐
386
可以看到它。这意味着这个小测验很容易出现作弊情况。单就这个特定应用而言，这不是个
源代码。你会发现那个隐藏字段place 的内容实际包含了当前测验题的正确答案，任何人都
并从浏览器去请求它。然后使用浏览器的“查看源代码”命令，查看这个测验题页面的HTML
要编写的最后一个PHP脚本是edit_member.php,它可以让美史联盟成员在线修改他们自
至此，我们完成了所有的工作。在美史联盟的主页上增加一个指向 pres_quiz.php 脚本的
function check_response ($dbh)
pres_quiz.php 脚本依靠隐藏字段来传递信息，这些信息是脚本下次调用时需要的，但
if ($response == $place)
#用户选择的出生地正确吗？
$response = script_param ("response");
$place = script_param ("place");
$name = script_param ("name");
else
第9章用PHP语言编写MySQL程序
$choices=explode（"#"
printf ("\"%s\" is not correct.
present_question($dbh) ;
print ("That is correct!\n");
htmlspecialchars ($response));
htmlspecialchars ($place));
htmlspecialchars ($name),
$place,$choices);
(u\usn
使用隐藏字段并不安全
$choices);
Please try again.\n",
---
## Page 407
架如下所示：
说明
码来获得访问任何成员资料的权限：
“0号成员”，并将其密码设置为bigshot，用于管理员（超级）用户。联盟秘书可以用这个密
密码，不过这里使用的这个技术可以便捷初始化所有密码：
随机数生成一个MD5校验和，并使用结果的前8个字符。在实际应用中，应该让成员自己设置
工作流程如下所示。
且要求成员只有在提供正确的密码之后，才能获得对脚本所给表单进行修改的权限。此脚本的
些安全措施。为了演示简单的身份验证机制，我们将使用MySQL来存储各位成员的密码，并
书的工作量。
在创建好 member_pass 表之后，就可以开始编写 edit_member.php 脚本了。此脚本的框
#确定要执行的动作（如果未指定动作，
#…．．此处放置输入处理函数..·
INSERT INTO member_pass (member_id, password) VALUES(O,*bigshot');
$title = "U.s. Historical League -- Member Editing Form";
#定义动作常量
dude>
除了为 member 表里的每位成员生成密码外，还需要在 member_pass 表里增加一个特殊的
CREATE TABLE member_pass
在开始上述工作之前，需要先分配好密码。比较简便的办法是随机生成这些密码。
口当首次调用时，edit_member.php会呈现一个登录表单，其中包含成员 ID和密码字段。
一定要注意，必须确保成员资料只能由其本人或者联盟秘书来修改。这意味着必须增加一
$dbh = sampdb_connect （）;
html_begin($title,$title);
define
define
define
require_once
edit_member.php－通过Web 编辑美史联盟成员资料
INSERT INTO member_pass (member_id,password)
口
口
则显示初始页面）
中包括member_pass 表。因此，它可用于查看联盟成员密码或管理员密码。
在创建member_pass 表之前，应该先删除Web服务器目录下的db_browse.pl脚本。
SELECT member_id, LEFT(MD5(RAND()),8) AS password FROM member;
这个脚本是在8.4.4节编写的，它允许任何人查看sampdb数据库里任何表的内容一
password
member_id INT UNSIGNED NOT NULL PRIMARY KEY,
当提交编辑表单时，此脚本会利用这个表单的内容在数据库里更新成员的资料。
将从member表里找出这位成员的资料，并显示它，供成员编辑。
当提交登录表单时，脚本会检查与成员ID 和密码相关的密码表。如果密码匹配，脚本
（"UPDATE_ENTRY",2）;
("DISPLAY_ENTRY",
("SHOW_INITIAL_PAGE"，O）;
CHAR(8)
"sampdb_pdo.php";
1）;
9.2PHP脚本实战
下面的
387
其
---
## Page 408
它们。text_field(）函数负责生成一个可编辑的文本输入框：
排列，有利于用户阅读和理解。
表单包含有多个不同长度的标题时，因为它可以让表单变得非常整齐。让表单的各个组件整齐
涉及两个字段，所以效果似乎不太明显。
其ID 和密码：
388
display_login_page（）函数还用到了两个辅助函数，你在 sampdb.php 库文件里能找到
function text_field ($name, $value, $size)
display_login_page（）函数负责生成初始页面，其中包含一个表单，用于要求成员输人
这个表单会把标题和输入框显示在一个HTML表格里，以便让它们排列整齐。因为这里只
function display_login_page ()
html_end ();
$dbh= NULL;
default:
case UPDATE_ENTRY:
case DISPLAY_ENTRY:
case SHOW_INITIAL_PAGE:
switch ($action)
printf ("\n",
2>
printf ("\n",
die ("Unknown action
break;
update_entry ($dbh);
display_entry ($dbh) ;
display_login_page ();
$action = SHOW_INITIAL_PAGE;
print"\n";
submit_button("button","Submit");
print("\n");
print(""）;
password_field ("password",
print
print
print("");
text_field ("member_id","", 10);
print("Member ID");
print
print
print
print
break
第9章用PHP语言编写MySQL程序
("Password");
("");
("\n");
("then select Submit.\n\n");
---
## Page 409
以检查用户输入的密码。如果密码匹配则显示该成员的信息：
function display_entry (sdbh)
当用户输入成员 ID 和密码并提交表单时，action 参数的值将为 DISPLAY_ENTRY，而
password_fiela（）函数代码与之相似，
display_column ("Member ID", $row,
#把成员ID显示为静态文本
print("\n");
#格式化语句的结果，以便于编辑
hidden_field("member_id",$member_id);
printf
if (!($row = $sth->fetch （））)
$sth= Sdbh->prepare
if (!ctype_digit“(Smember_id))
$password = script_param ("password");
$member_id = trim (script_param ("member_id"));
#但密码不需要这样做，
hidden_field
sstmt
else
die ("No user with member_id = $member_id was found\n");
$admin= TRUE;
f
获得脚本参数。
不需要用户再次输入密码了。
die
Sadmin
die ("No password was specified\n");
以辨别出表单所对应的是哪一条记录，这样就
(empty
="SELECT
（"Invalid
("\n"
UPDATE_ENTRY);
script_name (),
ORDER BY last_name";
htmlspecialchars
=FALSE;
htmlspecialchars
htmlspecialchars
last_name,
($password))
state,zip,
("password", $password);
其中，ID值需要去除空白；
password\n");
因为密码必须严格匹配。
($member_id));
（$stmt);
($dbh,
Smember_id，$password)）#常规数字
ID was specified (must be an integer)\n");
phone,
($size));
(Svalue)
(Sname)
0，
interests, member_id, expiration
Spassword))
，不同之处在于type 属性的值为 password。
"member_id",FALSE);
#管理员
#必须像整数
9.2
PHP脚本实战
389
---
## Page 410
数的代码：
框还是静态文本的布尔值。最后那个值为可选的，默认为 TRUE。下面是display_column（）函
包含待编辑行的数组；在行内与字段值相对应的列名；一个用于表明该字段显示为可编辑文本
效期。
为可编辑字段。假设联盟秘书知道这个密码，那么他便可以为那些更新成员资格的成员更新有
资格。）另一方面，如果用户在登录表单时给出了管理密码，那么脚本需要把这个有效期显示
员本人就能把这个日期修改为将来很远的某个日期，从而导致他们不交费也能延续自己的成
唯
本，用户可以更改它们，只有两个例外。第一个，member_ia值会显示为静态文本。因为它是
个行，然后生成一个编辑表单，并用这个行里的各个值来初始化它。大多数字段都是可编辑文
表里选出一个行，并把该行中的password值与用户在登录表单里提供的密码进行比较：
里，供用户编辑。负责密码检查的check_pass（）函数会运行一个简单的查询，从 member_pass
雷
员
一标识行的键值，所以不允许改变。第二个，有效期也不允许联盟成员自行修改。（否则，成
”的密码）相匹配，那么edit_member.php脚本将把这位成员的个人资料显示在一个表单
display_column（）函数负责显示各字段的标签和值。其参数有：显示在字段值旁边的标签
function display_column ($label, $row, $col_name, $editable = TRUE)
假设密码匹配，display_entry（）函数会从 member表里检索出与给定成员 ID相对应的那