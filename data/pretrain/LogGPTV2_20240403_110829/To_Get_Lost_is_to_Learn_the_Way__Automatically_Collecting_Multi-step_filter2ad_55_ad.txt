has the similar purpose as StraySheep for finding HTML elements
that are made to deceive users and direct to a malicious site or mal-
ware executable, but it only finds elements displayed by advertising
providers regardless of the web site owner’s intention.
Since the source code of TrueClick has not been published, we
re-implemented TrueClick based on the implementation details of
the paper [13] using a manually collected dataset containing 87
trick banners and 51 genuine banners, which is almost equivalent to
the amount of the original dataset (165 trick banners and 94 genuine
download links), to train a machine learning model. The trained
model identifies trick banners with 98.6% accuracy. We then created
a baseline crawling module by replacing StraySheep’s selecting
component (Section 3.2.1) with TrueClick implementation.
To equivalently compare the crawling results under the same
experimental condition in terms of the period of landing-page col-
lection and web crawling, we have collected 5k URLs in the same
manner as that mentioned in Section 4.4 and crawled them using
both StraySheep’s web-crawling module and the baseline module
as of November 2019. Table 5 summarizes the results. StraySheep
visited more SE pages than TrueClick because it follows not only
trick banners but also buttons and links intentionally placed by
web site owners to lead to SE attacks. While StraySheep success-
fully downloaded 266 malware samples, TrueClick downloaded
only 1 malware sample. This is because, in most cases, genuine
download links distribute malware samples instead of trick banners
on web pages redirected from the first trick banners on landing
pages. Table 6 shows the number of unique SE pages observed at
each depth. Similar to the results in Table 11, Straysheep reached
more SE attacks as it crawled deeper. Conversely, the number of
SE pages that TrueClick reached considerably decreased deeper
than depth three. The reason for this is that as we crawl deeper
from the landing page, the number of trick banners decreases. Ad-
ditionally, intentionally placed lure elements including genuine
download links mainly lead to SE attacks at deeper depths. Figure 6
shows the overlap of SE pages’ domain names observed using each
crawler. Although StraySheep did not visit a small number of SE
pages dynamically served by ads, it covered most of the SE pages
observed by TrueClick. In summary, to collect more multi-step SE
attacks, we need not only to detect trick banners but also follow
lure elements.
4.5 Evaluating the SE Detection Module
We evaluated the effectiveness of StraySheep’s SE-detection mod-
ule using WebTrees, which are the outputs of StraySheep’s web-
crawling module. We used 30k WebTrees constructed from the
results of web crawling starting from 30k landing pages. These Web-
Trees consisted of the 10k landing pages crawled by StraySheep’s
web-crawling module (Section 4.4) and additional 20k landing pages.
The 20k landing pages were collected and randomly sampled in the
same manner as for the 10k landing pages mentioned in Section 4.3.
We carried out the web crawling in the same environment at the
same period to output additional 20k WebTrees.
To create datasets for evaluation, we extracted malicious and
benign sequences from the 30k WebTrees. The 30k WebTrees con-
tained a total of 243,914 unique web pages (13,415 unique domains)
of visited web pages. To label these web pages as SE pages, we
used blacklists (same as in Sections 4.3 and 4.4) and VirusTotal.
We labeled 51,501 unique web pages (unique 1,066 domains) as SE
pages and extracted 1,066 sequences, which reached 1,066 different
domain names from distinct landing pages. We excluded unreach-
able or parking domain pages and created 1,045 sequences as the
malicious dataset. To create a benign dataset, we randomly sampled
1,045 sequences that did not visit SE pages.
To evaluate the detection accuracy of the SE-detection module,
we conducted a 10-fold cross-validation (CV) on the labeled dataset.
The SE-detection module classified our dataset with a precision of
97.4%, recall of 93.5%, and accuracy of 95.5%. When we changed the
learning algorithm from random forest to support vector machine,
logistic regression, and decision tree, their accuracies were 93.6%,
90.8%, and 90.7%, respectively. The percentage of feature importance
accounted for 65.2% of features extracted from the last page (last
page features), 28.2% of features extracted from the previous page
(previous page features), and 6.6% of features extracted from the
entire sequence (sequence features), as shown in Table 10.
To show the relationship between detection accuracy and fea-
tures, we divided the features into four feature sets: last page, pre-
vious page, sequence, and the combination of last and previous
page (feature sets without our proposed sequence features). We
conducted 10-fold CVs using all feature sets and four divided fea-
ture sets with the same dataset discussed in Section 4.5. Figure 7
148672StraySheepTrueClickSession 8: Web Security ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan402Table 7: SE attack categories
SE domain names Category
94 (6.7%) Cryptojacking
70 (5.0%) Other SE attacks
25 (1.8%)
566 (40.2%) Tech support scam
310 (22.1%) Fake browser history injection
181 (12.9%) Malvertisement redirection
Category
PUP
Malware
Unwanted browser extension
Multimedia scam
Phishing
Survey scam
and 56,922 sequences reached the 1,404 domain names. The num-
ber of sequences’ steps (i.e., the number of page transitions) from
one to three is 11,855 (20.8%), 13,813 (24.3%), and 31,254 (54.9%),
respectively.
SE domain names
20 (1.4%)
16 (1.1%)
13 (0.9%)
3 (0.2%)
109 (7.8%)
Figure 7: ROC curves of SE detection results for each feature
set.
shows the receiver operating characteristic (ROC) curves for the
classification results. The most accurate result was the CV using all
features in order of the combination of last and previous page, last
page, sequence, and previous page feature sets. The area under the
curve (AUC) for each result was 0.965, 0.955, 0.948, 0.923, and 0.829.
This experiment revealed that our original page-level features that
analyzed linguistic, image, and HTML characteristics were useful
in detecting various types of SE attacks, i.e., not limited to a specific
SE attack. However, we can classify more accurately by using the
features of a previous page and sequence together that StraySheep
automatically collects.
5 DETAILED ANALYSIS OF DETECTED
MULTI-STEP SE ATTACKS
We conducted detailed analysis of the collected multi-step SE at-
tacks mentioned in Section 4. To show that StraySheep found a
wide variety of SE attacks, we categorized the observed SE page’s
domain names and investigated the attacker techniques to deceive
and persuade users for each SE attack category. We then analyzed
the browser interactions and advertising providers that led to SE
pages to clarify the cause of SE attacks. Finally, we investigated
network infrastructures hosting SE attacks.
We first explain the detected sequences and domain names used
for the detailed analysis. As we explained in Section 4, there are
suspicious web pages that have similar appearances to known SE
pages. To find such SE pages, we leveraged the SE-detection mod-
ule to classify the remaining 192,620 sequences of the 11,304 do-
main names not used in the evaluation (Section 4.5). As a result
of manually excluding false positives (27 domains) from the clas-
sification results, we found 359 domain names as SE attacks. This
process was conducted by analyzing screenshots to check whether
suggested software and extensions or login pages are associated
with legitimate services. One example of the false positives was a
Facebook login page opened by a popup that redirected from an
illegal software-download blog by clicking a share button. Another
example was a download page of legitimate anti-virus products
that transferred by clicking advertising in an iframe. We analyzed
a total of 1,404 unique domain names (the 1,045 domain names
mentioned in Section 4 and newly detected 359 domain names),
5.1 SE Attack Categories
To clarify the types of multi-step SE attacks detected by StraySheep,
we categorized the 1,404 domain names into 11 categories as shown
in Table 7. We used labels of blacklists (Google Safe Browsing,
Symantec DeepSight, hpHosts) and virus scan results of VirusTotal
to categorize the attacks. We leveraged AVClass [28] to classify de-
tected binaries as PUPs or malware. We also checked the appearance
of these domain names’ web page to complement categorization.
PUP and Malware The most common categories we identified
were PUP (566 domain names) and malware (310 domain names).
These categories are SE attacks where PUPs and malware were
downloaded due to browser interactions. StraySheep downloaded
6,924 unique binary executable files (e.g., .exe or .dmg). For ex-
ample, we found that these binaries were disguised as fake game
installers, fake anti-virus software, and fake Java/Flash updaters.
Out of the 6,924 binaries, we detected 1,591 unique binaries includ-
ing 1,090 malware samples and 501 PUPs by checking their MD5
hash in VirusTotal and using AVClass. We confirmed that 3,336
unique binaries were never uploaded to VirusTotal. Although the
remaining 1,997 unique binaries were already uploaded, they were
not detected by any anti-virus software in VirusTotal.
The 2,141 out of the 3,336 binaries that were not uploaded had
1,347 unique filenames, which were automatically set according to
the previous page (e.g., “[the title of the previous page].exe.rename”).
The web pages that downloaded these binaries contained instruc-
tions to entice users to remove “.rename” and execute them. We
found 504 unique domain names downloading these binaries. The
175 out of these 504 domain names matched the blacklists and the
other 329 domain names were newly detected by StraySheep. The
reason for making users change the file extension is to circumvent
the download-protection function of web browsers. Since the hash
values of these binaries also changed at every downloading, none
were ever uploaded to VirusTotal. To check whether these binaries
were malicious, we chose ten samples from the binaries and up-
loaded them to VirusTotal. Then, all ten samples were detected as
“StartSurf” or “Prepscram” family names.
Unwanted Browser Extension We categorized 181 domain names
as distributing unwanted browser extensions. We confirmed that
these domain names were detected as “Fake Browser Extension
Download” or “Unwanted Extension”, which led to install pages
(https://chrome.google.com/webstore) of 128 unique Google
Chrome browser extensions. However, we found that 119 (93.0%)
extensions were still available on the browser extension install
pages a month after the crawling. By investigating these browser
extensions, we found that 18 (14.1%) extensions were search tool
0.00.20.40.60.81.0FalsePositiveRate0.00.20.40.60.81.0TruePositiveRateAllfeaturesLastpagefeaturesPreviouspagefeaturesSequencefeaturesLastandpreviouspagefeaturesSession 8: Web Security ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan403bars and 14 (10.9%) extensions were file converters. Security ven-
dor blog postings and online forums stated that some extensions
were malicious extensions or browser hijackers that modify web
browser settings, track user’s browsing, and inject unwanted ad-
vertisements [10]. As a result of our dynamic analysis of some
browser extensions using a real browser, we observed suspicious
behavior such as displaying popup advertisements and changing
the default browser’s homepage and search engine to web pages
hard coded in many malware samples. To determine the popularity
of these browser extensions, we searched each extension name
on a search engine. We then found that the search results of 100
extensions (78.1%) consisted of one or more web pages explain-
ing “How to remove [browser extension name]” or “Virus removal
guide”. Surprisingly, most of these web pages introduced not only
removal methods but also suggested yet more fake removal tools,
which were detected as PUPs or malware. Attackers prepared the
web pages for tricking technically unsophisticated users who dis-
rupt these browser extensions. Thus, even if the users successfully
remove the unwanted browser extensions, they also become vic-
tims of other SE attacks. StraySheep’s SE-detection module newly
found 21 domain names out of the 181 domain names we catego-
rized. StraySheep successfully finds unwanted browser extensions
by analyzing distribution web pages and sequences led to them
instead of analyzing their source codes and behaviors.
Multimedia Scam We found web pages (94 domain names) that
ask for credit card registration in exchange for offering free access
to movies or music. Their content, such as input forms, logos, and
background images, were shared among each other. We call them
multimedia scams in this paper. Only 27.7% (26/94) of domain names
were listed in blacklists; however, StraySheep’s SE-detection mod-
ule newly found 72.3% (68/94) domain names. Some security vendor
blog postings and online forums reported that these web pages
fraudulently charge credit cards [8]. We found that some words
(e.g., media, play, and book) were frequently used in the domain
names, such as etnamedia.net, kelpmedia.com, dewymedia.com,
parryplay.com, cnidaplay.com, and mossyplay.com.
Phishing We observed 94 domain names detected as phishing,
which were attempting to steal user’s sensitive information such
as email addresses or passwords.
Survey Scam We found 25 survey scam domain names, which
spoofed famous companies and promised rewards such as iPhones
and gift cards. Although Surveylance [17] only identified landing
pages that have survey content and interacted with them to reach
survey scams, StraySheep recursively followed lure elements to
detect survey scams reached from landing pages that did not have
survey content.
Tech Support Scam We observed 20 tech support scam domain
names that displayed fake virus-infection messages and telephone
numbers of support centers to urge users to call. StraySheep
reached the scams from sequences of web pages starting from the
search engine’s results and social media postings, which are not
observed with other systems [23, 29].
Fake Browser History Injection We found 16 Fake browser his-
tory injection attacks domain names, which injected URLs into
browser’s history to force users to redirect to another SE page
when the browser’s back button is clicked. To interact with such
attacks, StraySheep attempted clicking the back button for each
web page and determined that the action led to other SE pages.
Malvertisement Redirection We found 13 Malvertisement web-
site redirect domains [20, 38] that also led users to other SE pages.
Cryptojacking We found three Cryptojacking domain names that
secretly used user’s CPU resources to mine cryptocurrencies by
injecting JavaScript codes.
Other SE Attacks We observed various SE attacks other than those
mentioned above, e.g., simply detected the “Social engineering”
label.
5.2 Common Infrastructures of Multi-step SE
Attacks
To clarify the common infrastructures of multi-step SE attacks and
attacker’s techniques leading to the attacks, we analyzed the 56,922
sequences (see Section 5) that led to SE pages.
SE Attacks Caused by Unintended Clicks We observed open-
ing popup/popunder windows caused by unintended clicks such as
clicking anywhere on a web page and on the browser’s back button.
Such popups are often set by JavaScript codes provided by advertis-
ing providers to the web page’s owner. The following three files are
the most frequently loaded on web pages leading users to SE pages:
“c1.popads[.]net/pop.js”, “cdn.popcash[.]net/pop.js”, and
“cdn.cpmstar[.]com/cached/jspopunder_v101.pack.js”. Since
such advertisements are common infrastructures for SE attack dis-
tribution, they are used in various web pages. The sequences in
which popups caused by unintended clicks occurred were 20.0%
(11,373/56,922) of all sequences. The sequences in which popups
caused by unintended clicks occurred in the landing pages were
8.7% (4,952/56,922) of all sequences. We also observed exit-driven
redirections that were triggered by clicking on the browser’s back
button, which was 4.5% (2,578/56,922) of all sequences.
Alert Dialog Of all sequences, 2.9% (1,651/56,922) included a web
page that displayed more than one alert dialog. We found 66 distinct
alert messages, such as of fake virus infection and fake rewards,
which might strongly influence user psychology. To investigate
the relationship between the content of alert messages and SE at-
tacks, we categorized the 66 alert messages into the three attack
classes of comply, alarm, and entice. These classes were defined in
a previous study [25]. We found 30 Comply alerts that were often
used on fake Java/Flash update web pages for luring users to install
PUPs and malware, such as “Please install Java to continue.” and
“Your Flash Player might be out of date. Please install update to
continue.” We found 19 Entice alerts that made users input sensi-
tive information, such as “CONGRATULATIONS! Your IP address
has been selected to receive a Year of FREE Netflix!” We found 17
Alarm alerts that showed warning messages such as “IMMEDIATE
ACTION REQUIRED We have detected a trojan virus” with alert
sounds in some cases (e.g., ).
Users were directed to install fake anti-virus software or call fake
technical support centers.
Advertising Domain Names Online advertising often results in
SE attacks [17, 25]. To analyze SE attacks delivered by advertis-
ing providers, we extracted advertising providers’ domain names
(ad domain) from server-side redirection on the sequences. We
leveraged public advertising provider lists [3] to identify ad do-
mains. Table 9 shows a list of ad domains and the number of unique
Session 8: Web Security ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan404Table 8: Newly observed SE pages’ domain names at each depth in ascending order and their user access investigated by Simi-
larWeb, Alexa Web Information Service, and DNSDB.
Depth # domains
SimilarWeb (total visits per month)
Alexa Web Information Service
(pageviews per million users)
1
2
3
4
Total
94
680
288
342
1,404
# domain names
with valid data
39
261
108
28
436
Min
16,616
9,926
16,326
15,191
9,926
Max
110,300,000