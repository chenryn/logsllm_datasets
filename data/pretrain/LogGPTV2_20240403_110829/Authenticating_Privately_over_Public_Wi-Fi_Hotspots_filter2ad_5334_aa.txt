title:Authenticating Privately over Public Wi-Fi Hotspots
author:Aldo Cassola and
Erik-Oliver Blass and
Guevara Noubir
Authenticating Privately over Public Wi-Fi Hotspots
Aldo Cassola
Northeastern University
Universidad
San Francisco de Quito
Quito, Ecuador
PI:EMAIL
Erik-Oliver Blass
Airbus Group Innovations
Northeastern University
Munich, Germany
erik-oliver.blass
@airbus.com
Guevara Noubir
Northeastern University
Boston, Massachusetts
PI:EMAIL
ABSTRACT
Wi-Fi connectivity using open hotspots hosted on untrusted
Access Points (APs) has been a staple of mobile network de-
ployments for many years as mobile providers seek to oﬄoad
smartphone traﬃc to Wi-Fi. Currently, the available hotspot
solutions allow for mobility patterns and client identities
to be monitored by the parties hosting the APs as well as
by the underlying service provider. We propose a protocol
and system that allows a service provider to authenticate
its clients, and hides the client identity from both AP and
service provider at the time of authentication. Particularly,
the client is guaranteed that either the provider cannot do
better than to guess their identity randomly or they ob-
tain proof that the provider is trying to reveal their identity
by using diﬀerent keys. Our protocol is based on Private
Information Retrieval (PIR) with an augmented cheating
detection mechanism based on our extensions to the NTRU
encryption scheme. The somewhat-homomorphic encryption
makes auditing of multiple rows in a single query possible,
and optimizes PIR for highly parallel GPU computations
with the use of the Fast Fourier Transform (FFT).
In this work we lay out the operation of our protocol in
detail, its security analysis, and propose an implementation
compatible with the Wi-Fi Extensible Authentication Pro-
tocol (EAP) along with optimizations for deployments of
over 10 million clients. We evaluate the performance of its
mobile and provider components, and show that a client can
be authenticated in 43.9 milliseconds on a GPU platform,
giving an end-to-end authentication of 1.12 seconds.
Categories and Subject Descriptors
K.6 [Security and Protection]: Authentication; K.4 [Pub-
lic Policy Issues]: Privacy
Keywords
Mobile; Wi-Fi; Authentication; Anonymity; Private Informa-
tion Retrieval; NTRU; ISP; GPU
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813647.
1.
INTRODUCTION
Recent trends in oﬄoading mobile traﬃc to Wi-Fi hotspots
solve traﬃc congestion issues for providers at the cost of client
identity and mobility patterns. Hotspots are largely deployed
as unencrypted untrusted Access Points (AP) with a captive
portal backend—often owned and operated by other ISP sub-
scribers. In this scenario a dishonest ISP may track which
APs a client connects to and when, revealing client’s mobility
patterns and from them other sensitive information, as was
shown in [42]. With the ongoing growth in mobile network
access, extensive quantities of data on clients’ mobility pat-
terns are being generated, and few countermeasures exist to
protect this leakage of private and sensitive information.
Under these conditions, some providers reacted to pro-
tect device identity information. For instance, smartphone
vendors (e.g., Apple iOS 8) included MAC address random-
ization [3] to prevent some types of device tracking. However,
mobility patterns can still be deduced from clients with dy-
namic addresses by the mobile provider by tracking client
ID access on APs over time. Alternatively, one can imagine
using a pass-through authentication scheme such as UMTS’
EAP-AKA [32] (or it’s GSM variant EAP-SIM) to prevent the
AP from tracking users. However, this does not prevent the
cellular operator from tracking the users mobility patterns.
While the problem of anonymity and particularly anony-
mous credentials has received a signiﬁcant amount of at-
tention for a long time, the literature does not cover the
cases where an anonymous side channel is not available for
re-keying, changes to group membership are common, with
clients entering and leaving the system constantly, and that
protects against a server attempting to deanonymize clients.
In this work, we propose an anonymous authentication
scheme named TracEdge that hides client’s identity from
both AP operators and authentication server. Our proposed
scheme re-keys clients by letting them retrieve a diﬀerent
access keys anonymously when needed, removing the need
for an anonymous side channel. Credentials in TracEdge are
not bound to the current set of authorized clients, making
membership changes a constant-time operation that does not
require long-term client re-keying. In the case of dishonest
providers, our protocol interaction gives clients proof that
a server has attempted to identify them, even before the
authentication is complete. The proof of misbehavior can
be disclosed and veriﬁed by any other third party, thereby
exposing malicious servers’ activities. This capability serves
as deterrent for dishonest servers, and it gives honest ones a
mechanism to keep client trust.
1346TracEdge, as any security mechanism, is not free. It adds
computational costs for the ISP, and client authentication
time may increase. Privacy-conscious providers however have
a strong incentive to adopt such anonymizing mechanisms
for two reasons: First, honest service providers may ﬁnd that
the information their systems collect can become a liability,
and that it is in their best interest to keep client information
private on technical unavailability grounds. For instance,
Lavabit [50], a secure email provider, found itself closing
shop, rather than releasing client information. Secondly,
TracEdge’s costs are reasonabe as we will see in Section 6.
1.1 Problem Statement
A service provider oﬀers network access to clients through
a set of Access Points (e.g., Wi-Fi hotspots) connected to
its system. Users subscribe to the service at any time by
contacting the provider, and agreeing to some terms of ser-
vice. By the end of the subscription process, the provider
knows identifying information about the subscribed client.
Likewise, clients may unsubscribe from service, ending their
authorization to the system.
After subscription, the client associates to an AP in the
provider’s network near to their current location and uses it to
authenticate to the provider’s server. The server must decide
whether the authenticating client is one of the subscribers.
The client however, does not wish to leak their identity to
either the ISP’s server or AP operator when connecting.
Speciﬁcally, we view both the access point and the authen-
tication server as active adversaries trying to deanonymize
the client at authentication time. The exchange between
this client and the server must therefore be indistinguishable
from any authentication exchange not just to third-party
eavesdroppers but to the authentication peers: the server
and AP.
We deﬁne an anonymous authentication protocol as an
exchange between client and server that has the following
properties. Let UID = {Ci : 1 ≤ i ≤ n} be the set of n client
identities known to provider P .
1. Given an authentication exchange with client c, the
server can decide if c is an element of UID.
2. For any server, access point, and external observer,
authentication exchanges for some client Ci are indis-
tinguishable from those for client Cj, for all 1 ≤ i, j ≤ n.
3. An authorized client Ci knows with a certain probability
of anonymity Pa whether presenting her credentials will
leak her identity to the provider.
4. If a malicious server can identify Ci, the authentica-
tion exchange provides proof that it has targeted Ci’s
identity.
We further constrain our scenario by noting clients do not
have access to an anonymous channel over which to interact
with the server without revealing their identity. Such is
the case when clients build and destroy links to the server
network over time.
1.2 Contributions
We design an anonymous authentication scheme as deﬁned
above employing privacy-preserving techniques as building
blocks, and evaluate its performance. Our contributions are:
• A PIR-based authentication protocol enabling a client
to prove that they are authorized to access the network
without leaking any information about their identity.
Our protocol is secure against fully malicious, covert
adversaries [4], allowing detection of dishonest servers.
• A new underlying NTRU-based PIR technique we call
Multiple Row Selection (MRS) that allows the retrieval
of the sum of any subset of rows by using arbitrary
N -degree polynomials with a reduced number of mul-
tiplications on the server. This is a contribution of
independent interest, and it may be used as the PIR
mechanism for other applications.
• We design and implement a Wi-Fi construction for
TracEdge compatible with the Extensible Authentica-
tion Protocol (EAP). Our implementation scales to
databases in the order of 107 clients. Our FFT imple-
mentation using parallel GPU computations enable us
to reduce the server PIR computation time to 43.9ms.
To the best of our knowledge, TracEdge is the ﬁrst anony-
mous authentication scheme that allows clients to detect
identity leaks and has sub-linear communication complexity
in the number of clients in a dynamic client membership
context. Our underlying NTRU-based PIR makes key re-
vocation immediate, with no communication cost, and with
constant authentication key sizes.
The subject of full client anonymity is a complex one, as in-
formation leaked by each communication layer can be used to
deanonymize clients. For instance, physical layer ﬁngerprint-
ing techniques can use variations of behavior of hardware
implementations to identify devices [34]. On higher layers,
traﬃc patterns of the client after authentication succeeds
could be observed by the AP operator to deanonymize them.
While the above are real and interesting problems, TracEdge
does not claim to address them, and it is designed to be a
solution to the problem of anonymous Wi-Fi authentication.
We oﬀer some discussion on the subject in Section 7.
1.3 Notation
We denote K {m} as the symmetric-key encryption of mes-
sage m with key K. Public key encryption and decryption
of m using key PK is written as EPK(m) and DPK(m) re-
spectively. We use E(m) and D(m) for an homomorphic
encryption scheme to distinguish it from the above. Signa-
tures are noted as SigPK(m). The concatenation of a and b
is noted as a (cid:107) b, and the symbol ⊥ represents an invalid key
value.
2. RELATED WORK
Work on anonymous credentials spans several decades [5,
9, 10, 14]. With anonymous credentials, clients create inde-
pendent identities called pseudonyms with organizations who
will authenticate them, and in turn clients receive credentials
which they use on Zero-Knowledge proofs to authenticate
themselves to organizations. Pseudonyms are created such
that they do not reveal anything about the user apart from
ownership of some credential, and two pseudonyms belong-
ing to the same user do not reveal his underlying identity.
In addition to the above properties, proposed anonymous
credentials in the literature include other features such as
protections against user sharing of credentials, user revoca-
tion, and delegation of credentials. While user revocation
is practical in past work, it still requires relatively costly
computation to perform, and the identity of the user can be
1347retrieved either by the system’s CA, or deduced due to reuse
of credentials. Our work provides immediate and uncondi-
tional credential revocation and user deregistration while
maintaining the user identity hidden from the authenticating
access points.
Authentication protocols providing proof of membership
have been present in the literature for decades. Group [15]
and ring [49] signatures allow members of a group to sign a
message such that any third party can verify the message
was signed by a member of the group, but not its identity. In
both of these schemes signature size is linear in the number of
group members, which does not scale. In addition, members
entering and leaving the group in these schemes require
new keys to be generated—an expensive operation—and
to be provided to the members, limiting their practicality.
Anonymous authentication by Schechter et al. [51] is also
linear in the size of the group, but allows for dynamic group
membership. However, in optimizing the scheme for large
groups, a trade-oﬀ in privacy must be made by authenticating
smaller client subsets. Jarecki et al. [33] allow members of
groups to authenticate each other when they belong to the
same group and without revealing aﬃliation or the identity
of the group, but still depends on key redistribution when
members leave the group.
A substantial body of work [6, 17, 22, 53] relating to
Location-Based Services has been constructed over the years
due to their widespread deployment on smartphones. The
main idea behind much of these schemes relates to hiding
location data to thwart the adversary through various means,
some of them relying on collaborating with other clients to
perform queries. While such strategies protect against parties
that have no access to the location service itself, this would
not be the case in the scenario of network access, where the
mere act of authenticating to the hotspot provider already
leaks user location and identity.
Broadcast encryption [7, 19, 21, 29] considers the distri-
bution of protected content to authorized viewers, part of
its interest being due to its applications in digital copyright
management. User collusion is prevented by careful distri-
bution of keys to clients, limiting practicality of key sharing.
Part of our protocol may be formulated as a case of broad-
cast encryption, however existing schemes such as Fiat-Naor
are designed for one-way channels with limited collusion
protection.
Similarly, Logical Key Hierarchy (LKH) schemes [27, 41,
43, 58, 61] seek to distribute a secret among n recipients
such that revoked members cannot decrypt new messages.
For this the recipients are logically organized as leafs a tree
structure and store their own key as well as the keys of
every node in the way to the root. To update keys after the
revoking node x, the root sends new keys to every node on the
path to x, reducing broadcast costs to O (r log (n/r)) where
r is the number of revoked devices. Broadcast encryption
and LKH require re-keying and communication with users,
typically necessitating a channel that does not leak user
location, and do not protect against a cheating server. Our
work in contrast, does not make such assumptions about the
channel, makes a contribution on how it may be constructed
in practice, and provides clients with proof in the case of
server wrongdoing.
Private Information Retrieval has been an active area of
research starting with [16], where Chor, et al. showed in-
formation retrieval protocols over database replicas guar-
anteeing client privacy as long as at least some servers
do not collude. These protocols provide information theo-
retic security. Single-database Private Information Retrieval