title:C-Sim - The C Language Enhancement for Discrete-Time Simulations
author:Jan Hlavicka and
Stanislav Racek
C-Sim -The C Language Enhancement for Discrete-Time 
Simulation 
Czech Technical 
Jan Hlavicka, 
Stanislav Racek 
in Prague, University 
University 
PI:EMAIL, PI:EMAIL 
o/West Bohemia in Pilsen 
Abstract 
The paper presents 
the C-Sim simulation 
environment, 
of several  processes 
mode using the global simulation  lime 
which enables tire execution 
interleaved 
concept. 
Injection 
simulation 
embedded compUier system in order to verify its 
dependability 
C-Sim was usedwilhin 
for Time Triggered 
Fault 
(FIT) to build a 
through fault injection. 
the EUlIST project 
model of 1TPlC protocol based real-time 
Architecture 
in an 
protocols, 
fault-toleran t systems 
modelling, e.g. 
of discrete-time 
of properties of par allel programs and 
traditional  applications 
verification 
systems. communication 
an d algorithms,  algorithms 
applications,  etc. C-Sim based simulation program can 
describe both the fun ctions of system HW (at a chosen 
level of abstraction) 
application source code can be direc tly used as a part of 
C-Sim based simulation 
accessible at www [1] including a user manual. 
and SW (here the C-coded parts of an 
program code). C-Sim is freely 
of real-time 
safety-critical 
1. CSim characteristics 
4. CSim case study 
of the C 
discrete­
C-Sim is a simple program enhancement 
used for creating 
models based on the method of pseudo­
language (ANSI specification) 
time simulation 
parallel processes. C-Sim kernel has the fonn of a library 
of basic object types and operations on them. The goal of 
its design was to create a portable 
and to a certain degree 
machine independent tool for computer implementation 
of discrete-time 
from the programming language SIMULA The C 
language, unlike SIMULA, has no  tools 
programming but some of the basic principles 
oriented 
were implemented using predefined macro commands. 
systems simulation. The idea was taken 
for object­
2. C-Sim portabilit
y 
accept such program as 
Most of C++ compilers 
C-Sim kernel is ANSI-C portable, so C program using 
only the kernel can be made ANSI-C portable as well (it 
assumes only the use of YO capabilities of the standard C 
libraries). 
well. It is possible to create customized 
environm ents in order to manage  a class of simulation 
experiments. 
X-Windows and NT Windows have been created so far. 
A complex application-dependent 
(including 
a separated SW layer. 
run-time environment 
can be constru cted as 
Simple run-time environments 
e.g. model viSUalization) 
for MS DOS, 
run-time 
3. C-Sim appJicatioD 
area 
C-Sim can  be used in all the traditional 
discrete-time 
networks modelling. 
simulation, 
areas of 
e.g. in the  area of queuing 
Moreover it can be used for non-
Within the EU/IST project Fault Injection 
for Time 
(FIT) we used C-sim to build a 
Architecture 
model of TIP/C protoco l based real-time 
Triggered 
simulation 
embedded computer systems in order to inject faults an d 
to follow their influence [2}. The source code of the model 
has two basic SW layers: 
•  C-reforence 
model of ITPIC protocol: 
language coded TTP/C specification, 
types (CNJ, 
MEDL) and fim ctions (TTP/C services), 
contains C­
including 
data 
activity: 
ITPIC 
•  C-Sim code of a program of (abstract) 
this program serves as a template 
controller 
to create the required number of TTP/C processes 
(i.e. abstract 
cluster 
as  a part of the TTP/C 
controllers) 
model. 
form of the simulation  model 
processes (a node host processor computation 
its operating system TTpos), processes of 
we 
The process-oriented 
enables us to include easily other proce sses, like e.g. 
application 
including 
controlled object, 
for 4 wheels) that was 
used BBW-4W (Brake-By-Wire 
developed by Volvo company, which is one of 
participants 
implemented 
of the FIT project. 
in C-Sim was presented in [3]. 
etc. As the main testing 
Another case study 
application 
5. References 
[1] http://www.c-sim.zcu.cz 
[2] http://www.fit.zcu.cz 
[3] J.Hlavicica, S. Racek and P. Herout.: 
Process Controller 
-Simulation 
Practice 
March 2000, ISSN 0928-4869, 
pp. 769-790. 
Fault Tolerance Using Simulation. 
and Theory, Volume 7, Issue 8, 15 
Evaluation of 
539 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:11:30 UTC from IEEE Xplore.  Restrictions apply.