in general, a function is async-signal-safe either because it is reentrant
or because it is atomic with respect to signals
(i.e., its execution can't be interrupted by a signal handler).
.pp
the set of functions required to be async-signal-safe by posix.1
is shown in the following table.
the functions not otherwise noted were required to be async-signal-safe
in posix.1-2001;
the table details changes in the subsequent standards.
.pp
.ts
lb lb
l l.
function	notes
\fbabort\fp(3)	added in posix.1-2001 tc1
\fbaccept\fp(2)
\fbaccess\fp(2)
\fbaio_error\fp(3)
\fbaio_return\fp(3)
\fbaio_suspend\fp(3)	see notes below
\fbalarm\fp(2)
\fbbind\fp(2)
\fbcfgetispeed\fp(3)
\fbcfgetospeed\fp(3)
\fbcfsetispeed\fp(3)
\fbcfsetospeed\fp(3)
\fbchdir\fp(2)
\fbchmod\fp(2)
\fbchown\fp(2)
\fbclock_gettime\fp(2)
\fbclose\fp(2)
\fbconnect\fp(2)
\fbcreat\fp(2)
\fbdup\fp(2)
\fbdup2\fp(2)
\fbexecl\fp(3)	t{
added in posix.1-2008; see notes below
t}
\fbexecle\fp(3)	see notes below
\fbexecv\fp(3)	added in posix.1-2008
\fbexecve\fp(2)
\fb_exit\fp(2)
\fb_exit\fp(2)
\fbfaccessat\fp(2)	added in posix.1-2008
\fbfchdir\fp(2)	added in posix.1-2008 tc1
\fbfchmod\fp(2)
\fbfchmodat\fp(2)	added in posix.1-2008
\fbfchown\fp(2)
\fbfchownat\fp(2)	added in posix.1-2008
\fbfcntl\fp(2)
\fbfdatasync\fp(2)
\fbfexecve\fp(3)	added in posix.1-2008
\fbffs\fp(3)	added in posix.1-2008 tc2
\fbfork\fp(2)	see notes below
\fbfstat\fp(2)
\fbfstatat\fp(2)	added in posix.1-2008
\fbfsync\fp(2)
\fbftruncate\fp(2)
\fbfutimens\fp(3)	added in posix.1-2008
\fbgetegid\fp(2)
\fbgeteuid\fp(2)
\fbgetgid\fp(2)
\fbgetgroups\fp(2)
\fbgetpeername\fp(2)
\fbgetpgrp\fp(2)
\fbgetpid\fp(2)
\fbgetppid\fp(2)
\fbgetsockname\fp(2)
\fbgetsockopt\fp(2)
\fbgetuid\fp(2)
\fbhtonl\fp(3)	added in posix.1-2008 tc2
\fbhtons\fp(3)	added in posix.1-2008 tc2
\fbkill\fp(2)
\fblink\fp(2)
\fblinkat\fp(2)	added in posix.1-2008
\fblisten\fp(2)
\fblongjmp\fp(3)	t{
added in posix.1-2008 tc2; see notes below
t}
\fblseek\fp(2)
\fblstat\fp(2)
\fbmemccpy\fp(3)	added in posix.1-2008 tc2
\fbmemchr\fp(3)	added in posix.1-2008 tc2
\fbmemcmp\fp(3)	added in posix.1-2008 tc2
\fbmemcpy\fp(3)	added in posix.1-2008 tc2
\fbmemmove\fp(3)	added in posix.1-2008 tc2
\fbmemset\fp(3)	added in posix.1-2008 tc2
\fbmkdir\fp(2)
\fbmkdirat\fp(2)	added in posix.1-2008
\fbmkfifo\fp(3)
\fbmkfifoat\fp(3)	added in posix.1-2008
\fbmknod\fp(2)	added in posix.1-2008
\fbmknodat\fp(2)	added in posix.1-2008
\fbntohl\fp(3)	added in posix.1-2008 tc2
\fbntohs\fp(3)	added in posix.1-2008 tc2
\fbopen\fp(2)
\fbopenat\fp(2)	added in posix.1-2008
\fbpause\fp(2)
\fbpipe\fp(2)
\fbpoll\fp(2)
\fbposix_trace_event\fp(3)
\fbpselect\fp(2)
\fbpthread_kill\fp(3)	added in posix.1-2008 tc1
\fbpthread_self\fp(3)	added in posix.1-2008 tc1
\fbpthread_sigmask\fp(3)	added in posix.1-2008 tc1
\fbraise\fp(3)
\fbread\fp(2)
\fbreadlink\fp(2)
\fbreadlinkat\fp(2)	added in posix.1-2008
\fbrecv\fp(2)
\fbrecvfrom\fp(2)
\fbrecvmsg\fp(2)
\fbrename\fp(2)
\fbrenameat\fp(2)	added in posix.1-2008
\fbrmdir\fp(2)
\fbselect\fp(2)
\fbsem_post\fp(3)
\fbsend\fp(2)
\fbsendmsg\fp(2)
\fbsendto\fp(2)
\fbsetgid\fp(2)
\fbsetpgid\fp(2)
\fbsetsid\fp(2)
\fbsetsockopt\fp(2)
\fbsetuid\fp(2)
\fbshutdown\fp(2)
\fbsigaction\fp(2)
\fbsigaddset\fp(3)
\fbsigdelset\fp(3)
\fbsigemptyset\fp(3)
\fbsigfillset\fp(3)
\fbsigismember\fp(3)
\fbsiglongjmp\fp(3)	t{
added in posix.1-2008 tc2; see notes below
t}
\fbsignal\fp(2)
\fbsigpause\fp(3)
\fbsigpending\fp(2)
\fbsigprocmask\fp(2)
\fbsigqueue\fp(2)
\fbsigset\fp(3)
\fbsigsuspend\fp(2)
\fbsleep\fp(3)
\fbsockatmark\fp(3)	added in posix.1-2001 tc2
\fbsocket\fp(2)
\fbsocketpair\fp(2)
\fbstat\fp(2)
\fbstpcpy\fp(3)	added in posix.1-2008 tc2
\fbstpncpy\fp(3)	added in posix.1-2008 tc2
\fbstrcat\fp(3)	added in posix.1-2008 tc2
\fbstrchr\fp(3)	added in posix.1-2008 tc2
\fbstrcmp\fp(3)	added in posix.1-2008 tc2
\fbstrcpy\fp(3)	added in posix.1-2008 tc2
\fbstrcspn\fp(3)	added in posix.1-2008 tc2
\fbstrlen\fp(3)	added in posix.1-2008 tc2
\fbstrncat\fp(3)	added in posix.1-2008 tc2
\fbstrncmp\fp(3)	added in posix.1-2008 tc2
\fbstrncpy\fp(3)	added in posix.1-2008 tc2
\fbstrnlen\fp(3)	added in posix.1-2008 tc2
\fbstrpbrk\fp(3)	added in posix.1-2008 tc2
\fbstrrchr\fp(3)	added in posix.1-2008 tc2
\fbstrspn\fp(3)	added in posix.1-2008 tc2
\fbstrstr\fp(3)	added in posix.1-2008 tc2
\fbstrtok_r\fp(3)	added in posix.1-2008 tc2
\fbsymlink\fp(2)
\fbsymlinkat\fp(2)	added in posix.1-2008
\fbtcdrain\fp(3)
\fbtcflow\fp(3)
\fbtcflush\fp(3)
\fbtcgetattr\fp(3)
\fbtcgetpgrp\fp(3)
\fbtcsendbreak\fp(3)
\fbtcsetattr\fp(3)
\fbtcsetpgrp\fp(3)
\fbtime\fp(2)
\fbtimer_getoverrun\fp(2)
\fbtimer_gettime\fp(2)
\fbtimer_settime\fp(2)
\fbtimes\fp(2)
\fbumask\fp(2)
\fbuname\fp(2)
\fbunlink\fp(2)
\fbunlinkat\fp(2)	added in posix.1-2008
\fbutime\fp(2)
\fbutimensat\fp(2)	added in posix.1-2008
\fbutimes\fp(2)	added in posix.1-2008
\fbwait\fp(2)
\fbwaitpid\fp(2)
\fbwcpcpy\fp(3)	added in posix.1-2008 tc2
\fbwcpncpy\fp(3)	added in posix.1-2008 tc2
\fbwcscat\fp(3)	added in posix.1-2008 tc2
\fbwcschr\fp(3)	added in posix.1-2008 tc2
\fbwcscmp\fp(3)	added in posix.1-2008 tc2
\fbwcscpy\fp(3)	added in posix.1-2008 tc2
\fbwcscspn\fp(3)	added in posix.1-2008 tc2
\fbwcslen\fp(3)	added in posix.1-2008 tc2
\fbwcsncat\fp(3)	added in posix.1-2008 tc2
\fbwcsncmp\fp(3)	added in posix.1-2008 tc2
\fbwcsncpy\fp(3)	added in posix.1-2008 tc2
\fbwcsnlen\fp(3)	added in posix.1-2008 tc2
\fbwcspbrk\fp(3)	added in posix.1-2008 tc2
\fbwcsrchr\fp(3)	added in posix.1-2008 tc2
\fbwcsspn\fp(3)	added in posix.1-2008 tc2
\fbwcsstr\fp(3)	added in posix.1-2008 tc2
\fbwcstok\fp(3)	added in posix.1-2008 tc2
\fbwmemchr\fp(3)	added in posix.1-2008 tc2
\fbwmemcmp\fp(3)	added in posix.1-2008 tc2
\fbwmemcpy\fp(3)	added in posix.1-2008 tc2
\fbwmemmove\fp(3)	added in posix.1-2008 tc2
\fbwmemset\fp(3)	added in posix.1-2008 tc2
\fbwrite\fp(2)
.te
.pp
notes:
.ip * 3
posix.1-2001 and posix.1-2001 tc2 required the functions
.br fpathconf (3),
.br pathconf (3),
and
.br sysconf (3)
to be async-signal-safe, but this requirement was removed in posix.1-2008.
.ip *
if a signal handler interrupts the execution of an unsafe function,
and the handler terminates via a call to
.br longjmp (3)
or
.br siglongjmp (3)
and the program subsequently calls an unsafe function,
then the behavior of the program is undefined.
.ip *
posix.1-2001 tc1 clarified
that if an application calls
.br fork (2)
from a signal handler and any of the fork handlers registered by
.br pthread_atfork (3)
calls a function that is not async-signal-safe, the behavior is undefined.
a future revision of the standard
.\" http://www.opengroup.org/austin/aardvark/latest/xshbug3.txt
is likely to remove
.br fork (2)
from the list of async-signal-safe functions.
.\"
.ip * 3
asynchronous signal handlers that call functions which are cancellation
points and nest over regions of deferred cancellation may trigger
cancellation whose behavior is as if asynchronous cancellation had
occurred and may cause application state to become inconsistent.
.\"
.ss errno
fetching and setting the value of
.i errno
is async-signal-safe provided that the signal handler saves
.i errno
on entry and restores its value before returning.
.\"
.ss deviations in the gnu c library
the following known deviations from the standard occur in
the gnu c library:
.ip * 3
before glibc 2.24,
.br execl (3)
and
.br execle (3)
employed
.br realloc (3)
internally and were consequently not async-signal-safe.
.\" https://sourceware.org/bugzilla/show_bug.cgi?id=19534
this was fixed in glibc 2.24.
.ip *
.\" fixme . https://sourceware.org/bugzilla/show_bug.cgi?id=13172
the glibc implementation of
.br aio_suspend (3)
is not async-signal-safe because it uses
.br pthread_mutex_lock (3)
internally.
.sh see also
.br sigaction (2),
.br signal (7),
.br standards (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/circleq.3
.\" copyright (c) 1995 martin schulze 
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.\" 1995-10-18  martin schulze  
.\"	* first released
.\" 2002-09-22  seth w. klein  
.\"     * protocol numbers are now assigned by the iana
.\"
.th protocols 5 2012-08-05 "linux" "linux programmer's manual"
.sh name
protocols \- protocols definition file
.sh description
this file is a plain ascii file, describing the various darpa internet
protocols that are available from the tcp/ip subsystem.
it should be
consulted instead of using the numbers in the arpa include files, or,
even worse, just guessing them.
these numbers will occur in the
protocol field of any ip header.
.pp
keep this file untouched since changes would result in incorrect ip
packages.
protocol numbers and names are specified by the iana
(internet assigned numbers authority).
.\" .. by the ddn network information center.
.pp
each line is of the following format:
.pp
.rs
.i protocol number aliases ...
.re
.pp
where the fields are delimited by spaces or tabs.
empty lines are ignored.
if a line contains a hash mark (#), the hash mark and the part
of the line following it are ignored.
.pp
the field descriptions are:
.tp
.i protocol
the native name for the protocol.
for example
.ir ip ,
.ir tcp ,
or
.ir udp .
.tp
.i number
the official number for this protocol as it will appear within the ip
header.
.tp
.i aliases
optional aliases for the protocol.
.pp
this file might be distributed over a network using a network-wide
naming service like yellow pages/nis or bind/hesiod.
.sh files
.tp
.i /etc/protocols
the protocols definition file.
.sh see also
.br getprotoent (3)
.pp
.ur http://www.iana.org\:/assignments\:/protocol\-numbers
.ue
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright (c) bruno haible 
.\"
.\" %%%license_start(gplv2+_doc_onepara)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\" %%%license_end
.\"
.\" references consulted:
.\"   gnu glibc-2 source code and manual
.\"   dinkumware c library reference http://www.dinkumware.com/
.\"   opengroup's single unix specification http://www.unix-systems.org/online.html
.\"   iso/iec 9899:1999
.\"
.th mbsrtowcs 3  2021-03-22 "gnu" "linux programmer's manual"
.sh name
mbsrtowcs \- convert a multibyte string to a wide-character string
.sh synopsis
.nf
.b #include 
.pp
.bi "size_t mbsrtowcs(wchar_t *restrict " dest ", const char **restrict " src ,
.bi "                 size_t " len ", mbstate_t *restrict " ps );
.fi
.sh description
if
.i dest
is not null, the
.br mbsrtowcs ()
function converts the
multibyte string
.i *src
to a wide-character string starting at
.ir dest .
at most
.i len
wide characters are written to
.ir dest .
the shift state
.i *ps
is updated.
the conversion is effectively performed by repeatedly
calling
.i "mbrtowc(dest, *src, n, ps)"
where
.i n
is some
positive number, as long as this call succeeds, and then incrementing
.i dest
by one and
.i *src
by the number of bytes consumed.
the conversion can stop for three reasons:
.ip 1. 3
an invalid multibyte sequence has been encountered.
in this case,
.i *src
is left pointing to the invalid multibyte sequence,
.i (size_t)\ \-1
is returned,
and
.i errno
is set to
.br eilseq .
.ip 2.
.i len
non-l\(aq\e0\(aq wide characters have been stored at
.ir dest .
in this case,
.i *src
is left pointing to the next
multibyte sequence to be converted,
and the number of wide characters written to
.i dest
is returned.
.ip 3.
the multibyte string has been completely converted, including the
terminating null wide character (\(aq\e0\(aq), which has the side
effect of bringing back
.i *ps
to the
initial state.
in this case,
.i *src
is set to null, and the number of wide
characters written to
.ir dest ,
excluding the terminating null wide character, is returned.
.pp
if
.ir dest
is null,
.i len
is ignored,
and the conversion proceeds as above,
except that the converted wide characters are not written out to memory,
and that no length limit exists.
.pp
in both of the above cases,
if
.i ps
is null, a static anonymous
state known only to the
.br mbsrtowcs ()
function is used instead.
.pp
the programmer must ensure that there is room for at least
.i len
wide
characters at
.ir dest .
.sh return value
the
.br mbsrtowcs ()
function returns the number of wide characters that make
up the converted part of the wide-character string, not including the
terminating null wide character.
if an invalid multibyte sequence was
encountered,
.i (size_t)\ \-1
is returned, and
.i errno
set to
.br eilseq .
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lb lb lbx
l l l.
interface	attribute	value
t{
.br mbsrtowcs ()
t}	thread safety	t{
mt-unsafe race:mbsrtowcs/!ps
t}
.te
.hy
.ad
.sp 1
.sh conforming to
posix.1-2001, posix.1-2008, c99.
.sh notes
the behavior of
.br mbsrtowcs ()
depends on the
.b lc_ctype
category of the
current locale.
.pp
passing null as
.i ps
is not multithread safe.
.sh see also
.br iconv (3),
.br mbrtowc (3),
.br mbsinit (3),
.br mbsnrtowcs (3),
.br mbstowcs (3)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,