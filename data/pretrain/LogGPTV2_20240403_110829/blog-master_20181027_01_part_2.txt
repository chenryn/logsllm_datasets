-- returns NULL for non-resolvable hostnames  
CREATE OR REPLACE FUNCTION hostbyname_n (name text)  
    RETURNS ip4  
AS $$  
    import socket  
    if name is None: return None  
    try:  
        addr = socket.gethostbyname(name)  
    except Exception, e:   
        addr = None  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostbyname_n (text) IS 'Returns an IP address for the given hostname, NULL on error. Returns NULL on NULL input.';  
-- returns all IP addresses for the given hostname  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname (name text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted(ipaddrlist), '\n')  
    except Exception, e:   
        addr = str(e)  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname (text) IS 'Returns all IP addresses for the given hostname. Returns an error string on resolution errors. Returns NULL on NULL input.';  
-- returns all IP addresses for the given hostname as a set (multiple rows)  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname_s (name text)  
    RETURNS SETOF ip4  
AS $$  
    import socket, string  
    if name is None: return []  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = sorted(ipaddrlist)  
    except Exception, e:   
        addr = [str(e)]  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname_s (text) IS 'Returns all IP addresses for the given hostname as multiple rows. Returns an error string on resolution errors. Returns empty set on NULL input.';  
-- returns all IP addresses for the given hostname as a string where the elements are separated by sep  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname (name text, sep text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None or sep is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted(ipaddrlist), sep)  
    except Exception, e:   
        addr = str(e)  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname (text, text) IS 'Returns all IP addresses for the given hostname with custom delimiter. Returns an error string on resolution errors. Returns NULL on NULL input.';  
-- returns all IP addresses for the given hostname  
-- returns NULL for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname_n (name text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted(ipaddrlist), '\n')  
    except Exception, e:   
        addr = None  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname_n (text) IS 'Returns all IP addresses for the given hostname, NULL on error. Returns NULL on NULL input.';  
-- returns all IP addresses for the given hostname as a set (multiple rows)  
-- returns an empty set for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname_ns (name text)  
    RETURNS SETOF ip4  
AS $$  
    import socket, string  
    if name is None: return []  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = sorted(ipaddrlist)  
    except Exception, e:   
        addr = ()  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname_ns (text) IS 'Returns all IP addresses for the given hostname as a set (multiple rows), empty set on error or NULL input.';  
-- returns all IP addresses for the given hostname as a string where the elements are separated by sep  
-- returns NULL for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION addrsbyname_n (name text, sep text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None or sep is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted(ipaddrlist), sep)  
    except Exception, e:   
        addr = None  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION addrsbyname_n (text, text) IS 'Returns all IP addresses for the given hostname with custom delimiter, NULL on error or NULL input.';  
/* **********   hostname alias resolution    ********** */  
-- returns all hostnames for the given hostname  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname (name text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted([hostname] + aliaslist), '\n')  
    except Exception, e:   
        addr = str(e)  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname (text) IS 'Returns all hostnames for the given hostname. Returns an error string on resolution errors. Returns NULL on NULL input.';  
-- returns all hostnames for the given hostname as a string where the elements are separated by sep  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname (name text, sep text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None or sep is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted([hostname] + aliaslist), sep)  
    except Exception, e:   
        addr = str(e)  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname (text, text) IS 'Returns all hostnames for the given hostname with custom delimiter. Returns an error string on resolution errors. Returns NULL on NULL input.';  
-- returns all hostnames for the given hostname as a set  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname_s (name text)  
    RETURNS SETOF text  
AS $$  
    import socket, string  
    if name is None: return []  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = sorted([hostname] + aliaslist)  
    except Exception, e:   
        addr = [str(e)]  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname_s (text) IS 'Returns all hostnames for the given hostname as a set. Returns an error string on resolution errors. Returns empty set on NULL input.';  
-- returns all hostnames for the given hostname  
-- returns NULL for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname_n (name text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted([hostname] + aliaslist), '\n')  
    except Exception, e:   
        addr = None  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname_n (text) IS 'Returns all hostnames for the given hostname, NULL on error. Returns NULL on NULL input.';  
-- returns all hostnames for the given hostname as a string where the elements are separated by sep  
-- returns NULL for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname_n (name text, sep text)  
    RETURNS text  
AS $$  
    import socket, string  
    if name is None or sep is None: return None  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = string.join(sorted([hostname] + aliaslist), sep)  
    except Exception, e:   
        addr = None  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname_n (text, text) IS 'Returns all hostnames for the given hostname with custom delimiter, NULL on error. Returns NULL on NULL input.';  
-- returns all hostnames for the given hostname as a set  
-- returns an error string for non-resolvable hostnames or resolution errors  
CREATE OR REPLACE FUNCTION hostsbyname_ns (name text)  
    RETURNS SETOF text  
AS $$  
    import socket, string  
    if name is None: return []  
    try:  
        (hostname, aliaslist, ipaddrlist) = socket.gethostbyname_ex(name)  
        addr = sorted([hostname] + aliaslist)  
    except Exception, e:   
        addr = ()  
    return addr  
$$ LANGUAGE plpythonu;  
COMMENT ON FUNCTION hostsbyname_ns (text) IS 'Returns all hostnames for the given hostname as a set, on error or on NULL input returns empty set.';  
/* end of file */  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")