Question: "An application developer is implementing a function to process user-supplied data. Which of the following strategies would best prevent an out-of-bounds read vulnerability given the need to handle a wide range of inputs?"
 "A": "Using a denylist to block known bad inputs and relying on this exclusively for input validation."
 "B": "Employing an 'accept known good' input validation strategy, where inputs are checked against a list of acceptable values."
 "C": "Adding sentinel values such as a NUL character at the end of data inputs to signal the end of input."
 "D": "Choosing a programming language that does not provide memory abstractions."
Answer: B