root@kali:/media/sf_CTFs/mossad/2#  openssl pkcs12 -in intermediate.p12 -clcerts -nokeys -out intermediate.pem
Enter Import Password:
root@kali:/media/sf_CTFs/mossad/2# openssl x509 -in intermediate.pem -text -noout
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 1 (0x1)
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: O = International Weapons Export Inc.
        Validity
            Not Before: May 12 19:42:38 2019 GMT
            Not After : May 11 19:42:38 2020 GMT
        Subject: CN = Evil MITM
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:cb:87:89:23:0d:e0:e9:dd:e0:09:bb:26:df:86:
                    72:6e:7e:52:b0:f7:1e:98:54:89:00:c8:9f:48:b6:
                    8d:83:c5:76:55:0b:65:9f:b2:72:28:42:c3:ab:a7:
                    68:ef:b1:2b:1c:34:b1:f6:c9:77:6f:a4:1a:7e:8d:
                    21:38:04:88:31:3d:a1:63:bd:22:df:6f:de:d2:ed:
                    57:ad:9b:93:64:03:4e:02:b4:d8:af:f3:d5:bc:a0:
                    50:cd:df:74:37:85:a1:aa:98:cc:a5:4b:d4:cc:88:
                    8a:04:3d:2e:aa:bc:06:6a:a2:52:c0:44:92:37:8f:
                    10:72:28:e7:15:e2:ad:b7:b5:24:b3:ff:fc:29:09:
                    d1:c2:42:96:bf:05:9f:1a:75:3b:3a:65:a9:5b:d2:
                    7c:4a:47:ac:1c:d4:f9:a1:64:83:5a:11:cf:8b:f6:
                    ab:09:80:23:a1:c6:8e:d2:41:39:e1:05:96:28:84:
                    a6:6d:8b:83:11:6f:2b:a9:30:4f:4d:2e:e6:75:59:
                    e2:79:15:f0:db:88:13:24:ce:3c:83:68:b2:54:31:
                    9d:b5:0e:3a:44:5a:b3:64:22:11:ef:98:4f:0d:55:
                    6f:94:b6:a6:fd:f6:54:0d:95:c4:68:f7:ba:49:10:
                    b8:a9:fb:f8:25:51:5e:46:cd:6d:24:4b:64:17:49:
                    06:03
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:TRUE
            X509v3 Subject Key Identifier:
                01:12:D6:0D:F5:04:76:E2:5C:3B:68:7B:37:F3:AB:C4:B4:E6:31:13
    Signature Algorithm: sha256WithRSAEncryption
         7d:2e:1e:c9:df:d0:20:29:a0:5e:11:87:a1:d3:e2:3f:76:c6:
         2d:5d:da:d5:53:51:5c:6b:b1:5c:e9:37:9d:69:ed:43:fe:e1:
         ab:75:4f:22:42:43:cf:f4:6f:4f:a8:fc:70:82:a1:82:bc:26:
         6f:7c:7e:7c:13:52:96:b3:16:85:af:fe:78:93:0b:06:05:c9:
         aa:99:ed:86:84:66:54:14:ca:5b:58:5f:56:1c:c8:ad:5b:9a:
         84:b1:2b:e8:19:95:37:2a:f9:73:99:14:7c:d7:e2:8e:d5:09:
         9b:29:02:ac:43:91:f1:df:ed:5c:2e:b0:70:33:d5:5b:16:56:
         25:c7:2c:1e:92:01:8c:e3:27:05:06:0e:53:0f:0b:93:d2:03:
         d2:14:97:b9:9f:d5:d9:9f:2b:c5:26:a8:3c:09:23:13:b2:16:
         87:32:39:73:e4:e0:ac:4a:c6:c1:35:24:f5:4e:38:3f:87:7e:
         7b:b9:8e:1a:46:e2:c6:5c:fb:7f:c9:63:eb:e0:72:8b:3a:43:
         34:6a:b3:1d:61:13:39:de:d0:48:0f:27:81:52:ac:62:c2:9c:
         e4:ae:92:8d:45:77:52:e2:0d:e2:ca:13:3b:33:da:a5:02:8d:
         12:ed:00:f9:3e:4d:36:e3:89:79:7c:b1:cd:22:e3:94:3a:86:
         6f:1b:a4:9d
```
We got a certificate with CA = TRUE!
Now we create a leaf with CN = administrator:
```console
root@kali:/media/sf_CTFs/mossad/2# openssl genrsa -out leaf_key.pem 2048
Generating RSA private key, 2048 bit long modulus (2 primes)
...............................................+++++
........................+++++
e is 65537 (0x010001)
root@kali:/media/sf_CTFs/mossad/2# openssl req -new -key leaf_key.pem -out leaf_csr.pem
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:.
State or Province Name (full name) [Some-State]:.
Locality Name (eg, city) []:.
Organization Name (eg, company) [Internet Widgits Pty Ltd]:.
Organizational Unit Name (eg, section) []:.
Common Name (e.g. server FQDN or YOUR name) []:administrator
Email Address []:.
Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
root@kali:/media/sf_CTFs/mossad/2# cat leaf.ext
basicConstraints=CA:FALSE
subjectKeyIdentifier=hash
root@kali:/media/sf_CTFs/mossad/2# openssl x509 -req -in leaf_csr.pem -CA intermediate.pem -CAkey intermediate_key.pem -CAcreateserial -out leaf.pem  -days 1825 -sha256 -extfile leaf.ext
Signature ok
subject=CN = administrator
Getting CA Private Key
```
Double check that the leaf looks ok:
```console
root@kali:/media/sf_CTFs/mossad/2# openssl x509 -in leaf.pem -text -noout
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            45:c9:6a:20:cc:15:ba:7d:08:79:a7:53:b7:19:91:b9:20:60:45:40
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN = Evil MITM
        Validity
            Not Before: May 12 19:49:48 2019 GMT
            Not After : May 10 19:49:48 2024 GMT
        Subject: CN = administrator
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:ce:4a:cd:69:f9:b8:a4:fd:3d:bb:79:a2:a7:43:
                    7b:67:3c:81:18:27:f8:79:83:58:cd:0a:a7:b0:21:
                    0a:08:c2:d3:d3:f6:28:d4:47:48:ac:14:1f:1c:dc:
                    ef:21:99:39:70:9e:c4:b4:c8:6e:ce:da:1e:77:01:
                    fe:e3:c2:1c:95:5e:0d:91:47:d5:ee:c7:8b:da:c9:
                    30:f6:ac:ea:43:c9:3e:08:c1:23:7a:e2:bb:3a:69:
                    2b:0d:38:16:53:91:cb:10:c3:b0:c4:34:13:29:3a:
                    eb:ec:56:15:35:a0:8a:de:60:5b:08:2d:e2:af:52:
                    db:a0:54:1c:f2:44:71:fd:c2:69:da:99:ff:c4:08:
                    93:67:14:16:c7:14:63:46:53:b6:df:f4:48:aa:c0:
                    b8:5f:a7:0d:55:31:13:a2:d7:d9:4b:47:6f:a0:2a:
                    a4:60:e7:e1:22:df:f7:39:da:b5:5e:71:6e:e5:85:
                    cf:a4:37:7b:b7:12:4a:9e:83:0b:ad:2a:a4:e0:ef:
                    9c:b9:b7:3f:e6:26:a4:6c:2d:fa:86:d2:65:e4:64:
                    38:7d:14:c9:3e:22:4e:33:d1:00:84:e0:62:13:8a:
                    07:ca:f1:c9:5c:bc:2b:bb:d8:ff:2d:1a:95:ac:83:
                    9e:41:98:4c:81:fa:8d:22:8c:b9:33:2c:c3:09:ff:
                    cc:8d
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            X509v3 Subject Key Identifier:
                40:18:7D:C1:BD:8C:70:DA:02:47:E0:7C:65:F2:64:F9:13:7F:D4:4A
    Signature Algorithm: sha256WithRSAEncryption
         59:b1:99:89:bd:19:3c:4d:81:8e:ea:89:e4:20:7d:1d:8a:b5:
         35:a3:b6:38:50:6c:fe:7b:f6:fe:99:ea:9e:3d:f8:43:6c:a4:
         4e:c9:7b:d0:52:eb:6b:b4:90:7c:a7:7e:f9:c5:3f:55:25:4f:
         60:71:1a:e4:48:a2:72:7f:9d:8e:3d:d5:e5:e5:9e:9d:a2:61:
         d0:ca:ff:ed:33:79:2d:d3:90:74:6e:4c:b0:c2:d2:c4:f2:7e:
         59:44:89:64:d3:0a:fb:fe:32:d3:ed:5c:88:99:bd:89:28:9d:
         f6:72:5c:24:ac:06:fe:6a:d1:e0:ea:c7:54:30:db:ac:52:f4:
         83:6f:41:d8:e0:45:23:0b:07:bc:60:aa:f3:e8:8d:af:53:2e:
         a1:4f:c9:28:91:ce:14:ef:26:9a:64:19:a8:4a:76:72:f1:cf:
         9f:d4:26:b2:fe:0b:bd:3f:5e:67:d2:e0:d2:b0:4b:df:a0:99:
         09:14:48:8f:82:6d:6c:b2:02:14:3c:60:a0:d9:f4:45:42:ba:
         10:ec:47:b0:e7:2a:a3:a2:d0:4e:bc:7a:02:56:41:ec:4e:85:
         b1:3c:81:45:85:75:d1:ab:0c:c9:a6:0d:24:b9:3e:74:84:70:
         3a:a0:c7:98:ad:83:35:1c:88:1e:80:b9:53:e7:b6:fa:47:95:
         53:85:fa:78
```
We create a PKCS#12 file:
```console
root@kali:/media/sf_CTFs/mossad/2# openssl pkcs12 -export  -inkey leaf_key.pem -in leaf.pem -certfile intermediate.pem -out final.pfx
Enter Export Password:
Verifying - Enter Export Password:
```
Now we import it in the browser and try to access the settings:
![](images/missle_settings.png)
We're in!
We have access to a telnet debug interface which allows entering an IP and port, and a list of IPs and ports.
Anything but the first one (Management Status - Managed by 10.0.0.1:80) returns "Only one connection at a time is allowed". Therefore, we'll investigate the first interface.
Since the port is 80, we can try to issue raw HTTP commands:
```
GET / HTTP/1.0