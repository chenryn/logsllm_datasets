# Title: Runtime MAC Reconfiguration Using a Meta-Compiler Assisted Toolchain

## Authors
Xi Zhang, Junaid Ansari, and Petri Mähönen  
RWTH Aachen University, Institute for Networked Systems, Kackertstrasse 9, D-52072 Aachen, Germany  
Emails: {xzh, jan, pma}@inets.rwth-aachen.de

## Abstract
Rapid reconfiguration of medium access control (MAC) schemes is essential for optimizing runtime performance in dynamic spectrum access and meeting varying Quality of Service (QoS) demands. We have developed TRUMP, a toolchain that enables the composition of MAC solutions at runtime [1, 2]. In this demonstration, we will showcase how TRUMP efficiently achieves MAC reconfiguration. Inspired by the optimal route calculation method used in car navigation systems, TRUMP's compiler toolchain selects an appropriate MAC solution at runtime. TRUMP allows users to specify various constraints and options such as speed, energy consumption, and packet delivery rate, leading to different MAC compositions. The live demonstration will be conducted on the WARP SDR platform [3].

## Categories and Subject Descriptors
C.2.1 [Network Architecture and Design]: Wireless communication

## General Terms
Design, Experimentation, Performance

## Keywords
MAC, Reconfiguration, Compiler-assisted, SDR platform

## 1. Introduction
The increasing number and complexity of wireless communication applications present new challenges in providing stable and high QoS. These challenges arise due to the crowded spectrum, changing application requirements, and the need to coexist with other wireless applications. Given the highly dynamic nature of the spectral environment and performance expectations, a runtime reconfigurable medium access scheme is necessary to optimize performance characteristics. For example, resource-constrained devices prioritize energy efficiency, while video streaming applications prioritize data rate. To achieve the desired performance, applications should be able to specify their preferences, enabling the MAC protocol to reconfigure at runtime.

Traditionally, protocols are implemented in a monolithic fashion, which limits reconfigurability in a dynamic spectrum access paradigm. Common approaches for reconfiguration involve setting parameters of a particular protocol, such as modulation and coding schemes in LTE [4], or switching among pre-defined standalone protocols as in MultiMAC [5]. While these methods provide some flexibility, they are limited to a subset of tunable parameter values and pre-selected options. Tinnirello et al. [6] have demonstrated the runtime composition of various IEEE 802.11 WLAN MAC behaviors on commodity hardware, but this approach is limited to 802.11 MAC protocols. Our demonstration uses TRUMP [1], which allows composing a wide range of MAC protocols for various types of wireless networks at runtime by binding reusable MAC functional components [7].

To enable runtime protocol realization tailored to a wide range of user-specified application preferences, TRUMP adopts an approach similar to car navigation systems. Car navigation systems plan optimal routes based on real-time car positions and driver preferences. Similarly, TRUMP's meta-compiler allows users to specify multiple criteria for MAC realization, such as maximum energy efficiency, minimum latency, and maximum data reliability. The meta-compiler requires pre-fed knowledge, such as the execution time of each individual functional component and energy consumption at different protocol and hardware states, to select the optimal combination of components and parameters.

## 2. System Design and Implementation
TRUMP supports protocol realization based on user preferences both at the design stage and during runtime, as shown in Figure 1. At the design stage, the meta-compiler provides the MAC protocol designer with predicted protocol performance in terms of execution speed and power consumption, without deploying the MAC code on the target platform. The compiler also selects MAC parameters based on the designer's preferences. If multiple implementations for the same functionality are available and the user does not specify a choice, the compiler selects the implementation optimized for user preferences.

For example, when sending a packet, the user can specify the modulation scheme used on the packet payload. If the designer wants to send packets as fast as possible without detailed knowledge of each modulation option, they can set the optimization criteria for minimum execution speed and leave the modulation parameter for the `SendPacket()` interface as `ANY`. The compiler queries the performance database and replaces `ANY` with the modulation scheme that results in the highest data rate, such as QAM16. If the user prioritizes maximum data reliability, the compiler will return BPSK for the modulation parameter.

At runtime, an optimizer monitors the performance of the currently executing MAC. With feedback from the meta-compiler, it adapts the protocol according to the user's preferences by changing protocol functionalities and parameters. It also monitors spectral conditions by periodically sampling the received signal strength indicator. For instance, if a wireless channel is heavily used by other networks, the optimizer will detect increased latency due to the lack of free channels. If the application prioritizes minimizing latency, the protocol can deploy functionalities for multiple-channel support, providing a higher chance of finding a non-occupied medium. However, using multiple channels increases control overhead and energy consumption. Therefore, if the application prioritizes energy efficiency, the protocol can avoid the multichannel scheme. Based on the selected criteria and spectral conditions, the MAC protocol adapts itself to the best-suited behavior by modifying the composition of MAC components at runtime.

We have implemented our solution on WARP, a software-defined radio (SDR) platform with a Virtex Pro II FPGA [3], based on the v16 OFDM reference design. The host compiler is developed using Lex & Yacc [9] and modified for our target platform.

## 3. Demonstration Description
This demonstration will allow the audience to interactively modify protocol realization criteria and observe the resulting MAC reconfigurations and performances. The demonstration will also show efficient runtime adaptation of the MAC protocol based on channel conditions. A controlled external interferer will influence the spectral environment, initiating automatic MAC reconfiguration. Two WARP boards will be connected to a PC, and an interactive Graphical User Interface (GUI) will display live MAC performance statistics. The demonstration will use two channels in the 2.4 GHz ISM band.

## Acknowledgment
We thank RWTH Aachen University, DFG through the UMIC research center (Nucleus project), and the EU through the 2PARMA project for partial financial support. We also thank Mr. Guangwei Yang for his technical support.

## References
1. X. Zhang, J. Ansari, G. Yang, and P. Mähönen. "TRUMP: Efficient Realization of Protocols for Cognitive Radio Networks." In Proc. of IEEE DySPAN, 2011.
2. J. Ansari, X. Zhang, and P. Mähönen. "A Compiler-Assisted Approach for Component-Based Reconfigurable MAC Design." In Proc. of Med-Hoc-Net (invited paper), 2011.
3. A. Khattab, J. Camp, C. Hunter, P. Murphy, A. Sabharwal, and E. Knightly. "WARP: A Flexible Platform for Clean-Slate Wireless Medium Access Protocol Design." In SIGMOBILE Mob. Comput. Commun. Rev, 2008.
4. 3rd Generation Partnership Project (3GPP). The LTE Protocol Specification, 3GPP Rel8. Available at: http://www.3gpp.org/Release-8. [Last visited: 10.06.2012]
5. C. Coerr, M. Neufeld, J. Fifield, T. Weingart, D. C. Sicker, and D. Grunwald. "MultiMAC - An Adaptive MAC Framework for Dynamic Radio Networking." In Proc. of IEEE DySPAN, 2005.
6. I. Tinnirello, G. Bianchi, P. Gallo, D. Garlisi, F. Giuliano, and F. Gringoli. "Wireless MAC Processors: Programming MAC Protocols on Commodity Hardware." In Proc. of IEEE INFOCOM, 2012.
7. J. Ansari, X. Zhang, and P. Mähönen. "A Flexible MAC Development Framework for Cognitive Radio Systems." In Proc. of IEEE WCNC, 2011.
8. J. Ansari, X. Zhang, and P. Mähönen. "A Decentralized MAC for Opportunistic Spectrum Access in Cognitive Wireless Networks." In Proceedings of the ACM SIGMOBILE Workshop on Cognitive Wireless Networking, 2010.
9. The Lex & Yacc Page. Available at: http://dinosaur.compilertools.net. [Last visited: 10.06.2012]

---

This version of the text is more structured, clear, and professional, with improved readability and coherence.