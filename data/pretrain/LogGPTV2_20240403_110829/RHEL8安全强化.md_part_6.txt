`/etc/httpd/conf.modules.d/ 或 /etc/`{.literal}
httpd/conf.d/``{=html} 目录中的配置文件。例如，删除代理模块：
``` screen
echo '# All proxy modules disabled' > /etc/httpd/conf.modules.d/00-proxy.conf
```
::: itemizedlist
**其它资源**
-   [Apache HTTP
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/chap-managing_confined_services-the_apache_http_server){.link}
-   [为 Apache HTTP 服务器自定义 SELinux
    策略](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/using_selinux/index#customizing-the-selinux-policy-for-the-apache-http-server-in-a-non-standard-configuration_configuring-selinux-for-applications-and-services-with-non-standard-configurations){.link}
:::
:::
::: section
::: titlepage
## []{#securing-services_security-hardening.html#securing-nginx_securing-http-servers}安全 NGINX 服务器 {.title}
:::
NGINX 是高性能 HTTP 和代理服务器。您可以在 NGINX 配置文件的 server
部分中执行以下配置更改，以强化 NGINX 配置。
::: title
**禁用版本字符串**
:::
禁用 `server_tokens`{.literal}
配置选项，以停止显示其他详细信息，如服务器版本号。此配置在 NGINX
提供的所有请求中仅显示服务器名称，例如：
``` screen
$ curl -sI http://localhost | grep Server
Server: nginx
```
::: title
**包括其他与安全相关的标头**
:::
NGINX 服务的每个请求都可以包括额外的 HTTP 标头来缓解某些已知的 Web
应用程序漏洞：
::: variablelist
[`添加_header X-Frame-Options SAMEORIGIN；`{.literal}]{.term}
:   此选项拒绝域外的任何页面框，以构建由 NGINX
    提供的任何内容，从而减少了点击攻击。
[`add_header X-Content-Type-Options nosniff;`{.literal}]{.term}
:   这个选项可防止在某些较旧的浏览器中使用 MIME 类型嗅探功能。
[`add_header X-XS-Protection "1; mode=block";`{.literal}]{.term}
:   此选项启用跨站点脚本(XSS)过滤，可防止浏览器呈现 NGINX
    响应中包含的潜在恶意内容。
:::
::: title
**限制 HTTP 方法**
:::
您可以限制面向公众的服务，并限制他们从事的工作和接受访客的行为。例如，以下代码片段将限制对除
`GET`{.literal} 和 `HEAD`{.literal} 以外的所有方法的访问：
``` screen
limit_except GET {
    allow 192.168.1.0/32;
    deny  all;
}
```
::: title
**禁用 HTTP 方法**
:::
如果启用，一些 HTTP 方法可能会允许攻击者在 Web
服务器上执行专为开发人员测试 Web 应用的操作。例如，了解 TRACE
方法允许跨站点跟踪(XST)。NGINX
服务器可以通过仅允许特定方法禁止这些错误的 HTTP 方法以及任意方法。例如：
``` screen
# Allow GET, PUT, POST; return "405 Method Not Allowed" for all others.
if ( $request_method !~ ^(GET|PUT|POST)$ ) {
    return 405;
}
```
::: title
**配置 SSL**
:::
要保护 NGINX Web 服务器提供的数据，请考虑仅通过 HTTPS
提供。您可以生成安全配置配置文件，以使用 Mozilla SSL 配置生成器在 NGINX
服务器中启用 SSL。生成的配置可确保禁用已知漏洞协议（如 SSLv2 或
SSLv3）、密码和哈希算法（如 3DES 或 MD5）。您还可以使用 SSL
服务器测试来验证您的配置是否满足现代安全要求。
::: itemizedlist
**其它资源**
-   [Mozilla SSL 配置生成器](https://ssl-config.mozilla.org/){.link}
-   [SSL 服务器测试](https://www.ssllabs.com/ssltest/){.link}
:::
:::
:::
:::
[]{#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening.html}
::: chapter
::: titlepage
# []{#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening.html#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening}第 4 章 安装启用了 FIPS 模式的 RHEL 8 系统 {.title}
:::
要启用联邦信息处理标准(FIPS)140-2 要求的加密模块自我检查，您必须以 FIPS
模式运行 RHEL 8。
您可以通过以下方法达到此目的：
::: itemizedlist
-   以 FIPS 模式开始安装。
-   安装后将系统切换到 FIPS 模式。
:::
为避免加密密钥材料再生和重新评估与转换已部署系统相关的最终系统的合规性，红帽建议以
FIPS 模式开始安装。
::: section
::: titlepage
# []{#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening.html#con_federal-information-processing-standard-fips_assembly_installing-a-rhel-8-system-with-fips-mode-enabled}联邦信息处理标准(FIPS) {.title}
:::
联邦信息处理标准(FIPS)出版物 140-2
是美国开发的计算机安全标准。政府和行业工作组来验证加密模块的质量。请参阅
[NIST
计算机安全资源中心](https://csrc.nist.gov/publications/fips){.link}
上的官方 FIPS 出版物。
FIPS 140-2
标准确保加密工具正确地实施它们的算法。其中一个机制是运行时自我检查。如需了解更多与
FIPS 标准相关的信息，请参阅 [FIPS PUB
140-2](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf){.link}
的完整 FIPS 140-2 标准。
要了解合规要求，请参阅
[红帽政府标准](https://access.redhat.com/articles/2918071){.link} 页面。
:::
::: section
::: titlepage
# []{#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening.html#proc_installing-the-system-with-fips-mode-enabled_assembly_installing-a-rhel-8-system-with-fips-mode-enabled}安装启用了 FIPS 模式的系统 {.title}
:::
要启用加密模块自我检查联邦信息处理标准(FIPS)出版物 140-2
强制的加密模块，请在系统安装过程中启用 FIPS 模式。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽建议安装启用了 FIPS 模式的 Red Hat Enterprise Linux
8，而不是以后启用 FIPS 模式。在安装过程中启用 FIPS 模式可确保系统使用
FIPS 批准的算法生成所有的密钥，并持续监控测试。
:::
::: itemizedlist
**流程**
-   在系统安装过程中，将 `fips=1`{.literal} 选项添加到内核命令行。
    在软件选择阶段，请勿安装任何第三方软件。
:::
安装后，系统会自动以 FIPS 模式启动。
::: itemizedlist
**验证**
-   系统启动后，检查是否启用了 FIPS 模式：
    ``` screen
    $ fips-mode-setup --check
    FIPS mode is enabled.
    ```
:::
::: itemizedlist
**其它资源**
-   在 [执行高级 RHEL 安装 中的
    编辑引导选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_an_advanced_rhel_installation/){.link}
    部分
:::
:::
::: section
::: titlepage
# []{#assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   [将系统切换到 FIPS
    模式](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#switching-the-system-to-fips-mode_using-the-system-wide-cryptographic-policies){.link}
-   [在容器中启用 FIPS
    模式](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#enabling-fips-mode-in-a-container_using-the-system-wide-cryptographic-policies){.link}
-   [使用与 FIPS 140-2 不兼容的加密的 RHEL 8
    应用程序列表](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#ref_list-of-rhel-applications-using-cryptography-that-is-not-compliant-with-fips-140-2_using-the-system-wide-cryptographic-policies){.link}
:::
:::
:::
[]{#using-the-system-wide-cryptographic-policies_security-hardening.html}
::: chapter
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#using-the-system-wide-cryptographic-policies_security-hardening}第 5 章 使用系统范围的加密策略 {.title}
:::
Crypto 策略是一个系统组件，它可配置核心加密子系统，覆盖
TLS、IPSec、SSH、DNSSEC 和 Kerberos
协议。它提供了一小组策略，管理员可以选择这些策略。
::: section
::: titlepage
# []{#using-the-system-wide-cryptographic-policies_security-hardening.html#system-wide-crypto-policies_using-the-system-wide-cryptographic-policies}系统范围的加密策略 {.title}
:::
设置系统范围的策略时，RHEL
中的应用程序会遵守它，并拒绝使用不符合该策略的算法和协议，除非您明确要求应用程序这样做。也就是说，在运行系统提供的配置时，策略适用于应用程序的默认行为，但在需要时您可以覆盖它。
RHEL 8 包含以下预定义的策略：
::: informaltable
  --------------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `DEFAULT`{.literal}   默认的系统范围加密策略级别为当前威胁模型提供了安全设置。它允许 TLS 1.2 和 1.3 协议，以及 IKEv2 和 SSH2 协议。如果 RSA 密钥和 Diffie-Hellman 参数至少是 2048 位，则可以接受它们。
  `LEGACY`{.literal}    此策略确保了与 Red Hat Enterprise Linux 5 及更早版本的最大兼容性；由于攻击面的增加，它的安全性较低。除了 `DEFAULT`{.literal} 级别算法和协议外，它还包括对 TLS 1.0 和 1.1 协议的支持。允许算法 DSA、3DES 和 RC4，如果 RSA 密钥和 Diffie-Hellman 参数至少是 1023 位，则可以接受它们。
  `FUTURE`{.literal}    这是一种保守的安全级别，被认为可以抵御任何近期的攻击。这个级别不允许在签名算法中使用 SHA-1。它允许 TLS 1.2 和 1.3 协议，以及 IKEv2 和 SSH2 协议。如果 RSA 密钥和 Diffie-Hellman 参数至少是 3072 位，则可以接受它们。
  `FIPS`{.literal}      符合 FIPS 140-2 要求的策略级别。这由 `fips-mode-setup`{.literal} 工具在内部使用，该工具将 RHEL 系统切换到 FIPS 模式。
  --------------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:::
红帽不断调整所有策略级别，以便所有库（使用 LEGACY
策略时除外）都提供安全默认值。尽管 LEGACY
配置文件不提供安全默认值，但它不包括任何易被利用的算法。因此，在 Red Hat
Enterprise Linux
生命周期内，任何所提供的策略中启用的算法或可接受的密钥大小可能会发生变化。
此变更反映了新的安全标准和新的安全研究。如果您必须确保在 Red Hat
Enterprise Linux
的整个生命周期内与特定系统的互操作性，对于与该系统交互的组件，您应该不使用加密策略，或者使用自定义策略重新启用特定的算法。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
因为客户门户网站 API 中的证书使用的加密密钥不满足 `FUTURE`{.literal}
系统范围的加密策略的要求，所以 `redhat-support-tool`{.literal}
程序目前无法使用这个策略级别。
要临时解决这个问题，在连接到客户门户网站 API 时使用 `DEFAULT`{.literal}
加密策略。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
只有应用程序支持时，策略级别中描述的特定算法和密码才可用。
:::
### []{#using-the-system-wide-cryptographic-policies_security-hardening.html#_tool_for_managing_crypto_policies}管理加密策略的工具
要查看或更改当前系统范围的加密策略，请使用
`update-crypto-policies`{.literal} 工具，例如：
``` screen
$ update-crypto-policies --show
DEFAULT
# update-crypto-policies --set FUTURE
Setting system policy to FUTURE
```
要确保应用了加密策略的修改，请重启系统。
### []{#using-the-system-wide-cryptographic-policies_security-hardening.html#_strong_crypto_defaults_by_removing_insecure_cipher_suites_and_protocols}强大的加密默认方法是删除不安全的密码套件和协议
以下列表包含从 Red Hat Enterprise Linux 8
核心加密库中删除的密码套件和协议。它们不存在于源中，或者其支持在构建期间被禁用，因此应用程序无法使用它们。
::: itemizedlist
-   DES（自 RHEL 7 开始）
-   所有导出评级密码套件（自 RHEL 7 开始）
-   签名中的 MD5（自 RHEL 7 开始）