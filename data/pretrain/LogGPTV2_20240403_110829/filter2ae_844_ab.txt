        while len(l) > 0:
            x = l.pop()
            if x not in fuhao:
                s.append(x)
            else:
                r1 = s.pop()
                if x == 'OP_NOT':
                    s.append("!{}".format(r1))
                else:
                    r2 = s.pop()
                    x = x.replace("OP_AND", "and")
                    x = x.replace("OP_OR", "or")
                    s.append(f"({r1} {x} {r2})")
        if len(s) != 1:
            raise Exception("错误")
        return s[0]
    if __name__ == '__main__':
        a = [1, 2, 3, 4, 'OP_OR', 'OP_OR', 'OP_OR']
        s = zhuanh(a)
        print(s)
1,2,3,4代表这四个规则，最后输出结果即
接下来找一个规则复杂一些的尝试一下
    1229    : OP_INIT_RULE  ;{"flags": 0, "identifier": "rule_9", "metadata": {"rule_id": "9", "level": "5", "softhard": "2", "product": "TongDa-OA", "company": "TongTa", "category": "OA", "parent_category": "Enterprise Application"}, "ns": "default:"}
    1246    : OP_OBJ_LOAD 5052822 ;fofa
    1255    : OP_OBJ_FIELD 5052827 ;body_contains
    1264    : OP_PUSH 5052841 ;/static/templates/2013_01/index.css/
    1273    : OP_CALL 5052889 ;s
    1282    : OP_OBJ_VALUE  ;
    1283    : OP_JTRUE 1810 ;if sucess
    1292    : OP_OBJ_LOAD 5052891 ;fofa
    1301    : OP_OBJ_FIELD 5052896 ;body_contains
    1310    : OP_PUSH 5052910 ;javascript:document.form1.uname.focus()
    1319    : OP_CALL 5052961 ;s
    1328    : OP_OBJ_VALUE  ;
    1329    : OP_JTRUE 1808 ;if sucess
    1338    : OP_OBJ_LOAD 5052963 ;fofa
    1347    : OP_OBJ_FIELD 5052968 ;body_contains
    1356    : OP_PUSH 5052982 ;href="/static/images/tongda.ico"
    1365    : OP_CALL 5053026 ;s
    1374    : OP_OBJ_VALUE  ;
    1375    : OP_JTRUE 1806 ;if sucess
    1384    : OP_OBJ_LOAD 5053028 ;fofa
    1393    : OP_OBJ_FIELD 5053033 ;body_contains
    1402    : OP_PUSH 5053047 ;
    1411    : OP_CALL 5053113 ;s
    1420    : OP_OBJ_VALUE  ;
    1421    : OP_JTRUE 1804 ;if sucess
    1430    : OP_OBJ_LOAD 5053115 ;fofa
    1439    : OP_OBJ_FIELD 5053120 ;body_contains
    1448    : OP_PUSH 5053134 ;oa提示：不能登录oa
    1457    : OP_CALL 5053171 ;s
    1466    : OP_OBJ_VALUE  ;
    1467    : OP_JFALSE 1514 ;if sucess
    1476    : OP_OBJ_LOAD 5053173 ;fofa
    1485    : OP_OBJ_FIELD 5053178 ;body_contains
    1494    : OP_PUSH 5053192 ;紧急通知：今日10点停电
    1503    : OP_CALL 5053236 ;s
    1512    : OP_OBJ_VALUE  ;
    1513    : OP_AND  ;
    1514    : OP_NOP  ;
    1515    : OP_JTRUE 1802 ;if sucess
    1524    : OP_OBJ_LOAD 5053238 ;fofa
    1533    : OP_OBJ_FIELD 5053243 ;title_contains
    1542    : OP_PUSH 5053258 ;office anywhere 2013
    1551    : OP_CALL 5053290 ;s
    1560    : OP_OBJ_VALUE  ;
    1561    : OP_JTRUE 1800 ;if sucess
    1570    : OP_OBJ_LOAD 5053292 ;fofa
    1579    : OP_OBJ_FIELD 5053297 ;title_contains
    1588    : OP_PUSH 5053312 ;office anywhere 2015
    1597    : OP_CALL 5053344 ;s
    1606    : OP_OBJ_VALUE  ;
    1607    : OP_JTRUE 1798 ;if sucess
    1616    : OP_OBJ_LOAD 5053346 ;fofa
    1625    : OP_OBJ_FIELD 5053351 ;body_contains
    1634    : OP_PUSH 5053365 ;tongda.ico
    1643    : OP_CALL 5053387 ;s
    1652    : OP_OBJ_VALUE  ;
    1653    : OP_JFALSE 1748 ;if sucess
    1662    : OP_OBJ_LOAD 5053389 ;fofa
    1671    : OP_OBJ_FIELD 5053394 ;title_contains
    1680    : OP_PUSH 5053409 ;oa
    1689    : OP_CALL 5053423 ;s
    1698    : OP_OBJ_VALUE  ;
    1699    : OP_JTRUE 1746 ;if sucess
    1708    : OP_OBJ_LOAD 5053425 ;fofa
    1717    : OP_OBJ_FIELD 5053430 ;title_contains
    1726    : OP_PUSH 5053445 ;办公
    1735    : OP_CALL 5053463 ;s
    1744    : OP_OBJ_VALUE  ;
    1745    : OP_OR  ;
    1746    : OP_NOP  ;
    1747    : OP_AND  ;
    1748    : OP_NOP  ;
    1749    : OP_JTRUE 1796 ;if sucess
    1758    : OP_OBJ_LOAD 5053465 ;fofa
    1767    : OP_OBJ_FIELD 5053470 ;body_contains
    1776    : OP_PUSH 5053484 ;class="style1">新oa办公系统
    1785    : OP_CALL 5053528 ;s
    1794    : OP_OBJ_VALUE  ;
    1795    : OP_OR  ;
    1796    : OP_NOP  ;
    1797    : OP_OR  ;
    1798    : OP_NOP  ;
    1799    : OP_OR  ;
    1800    : OP_NOP  ;
    1801    : OP_OR  ;
    1802    : OP_NOP  ;
    1803    : OP_OR  ;
    1804    : OP_NOP  ;
    1805    : OP_OR  ;
    1806    : OP_NOP  ;
    1807    : OP_OR  ;
    1808    : OP_NOP  ;
    1809    : OP_OR  ;
    1810    : OP_NOP  ;
    1811    : OP_MATCH_RULE 1812 ;
优化为的后缀表达式
    1
    2
    3
    4
    5
    6
    and
    7
    8
    9
    10
    11
    or
    and
    12
    or
    or
    or
    or
    or
    or
    or
    or
后缀表达式转中缀表达式结果
    ((((((((12 or ((11 or 10) and 9)) or 8) or 7) or (6 and 5)) or 4) or 3) or 2) or 1)
就这样，能将所有规则之间的逻辑关系处理了。
中缀表达式处理程序有一个小问题，就是表达式的括号会很多，这个自行优化下吧 = -
## 最后
我将规则处理为了json格式，方便阅读和扫描器引用，类似如下
goby因为只需要访问一次首页，剩下的由yara规则进行识别，所以速度会很快。用yara识别web指纹学习到了。
如果要自己写扫描器引入fofa指纹的话，还需要写个表达式解析器来解析各种规则，这个我以前也写过了
那么能不能直接用yara调用goby的指纹呢？
理论上是可以的，只是需要自己写一个名称为`fofa`的模块，实现所有判断的方法，在编译到yara中。