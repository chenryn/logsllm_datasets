    :::
    :::
-   `--port=`{.literal} - 您可以使用 port:protocol
    格式指定允许通过防火墙的端口。例如，要允许 IMAP
    通过您的防火墙，可指定
    `imap:tcp`{.literal}。数字端口也可以明确指定；例如，要允许 UDP
    数据包在端口 1234 到，请指定
    `1234:udp`{.literal}。要指定多个端口，用逗号将它们隔开。
-   `--service=`{.literal} -
    此选项提供允许服务穿过防火墙的更高级别方法。有些服务（如
    `cups`{.literal}、`vahi`{.literal}
    等）需要打开多个端口或其他特殊配置才能使服务正常工作。您可以使用
    `--port`{.literal} 选项指定各个端口，或者指定 `--service=`{.literal}
    并一次性全部打开它们。
    有效选项是 [**[firewalld]{.package}**]{.strong} 软件包中
    `firewall-offline-cmd`{.literal} 程序可识别的任何内容。如果
    `firewalld`{.literal}
    服务正在运行，`firewall-cmd --get-services`{.literal}
    会提供已知服务名称的列表。
-   `--use-system-defaults`{.literal} - 完全不配置防火墙。这个选项告诉
    anaconda 不做任何工作，并允许系统依赖软件包或者 ostree
    提供的默认值。如果将这个选项与其它选项一同使用，则将忽略所有其他选项。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#group_kickstart-commands-for-system-configuration}group {.title}
:::
`group`{.literal} Kickstart 命令是可选的。它在系统中创建新用户组。
``` screen
group --name=name [--gid=gid]
```
::: itemizedlist
**必填选项**
-   `--name=`{.literal} - 提供组的名称。
:::
::: itemizedlist
**可选选项**
-   `--gid=`{.literal} - 组的
    GID。如果没有提供，则默认使用下一个可用的非系统 GID。
:::
::: itemizedlist
**备注**
-   如果具有指定名称或 GID 的组群已经存在，这个命令会失败。
-   `user`{.literal} 命令可用于为新创建的用户创建新组。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#keyboard-required_kickstart-commands-for-system-configuration}keyboard（必需） {.title}
:::
`keyboard`{.literal} Kickstart
命令是必需的。它为系统设置一个或多个可用的键盘布局。
::: title
**语法**
:::
``` screen
keyboard --vckeymap|--xlayouts OPTIONS
```
::: itemizedlist
**选项**
-   `--vckeymap=`{.literal} - 指定应使用的 `VConsole`{.literal}
    键映射。有效名称与 `/usr/lib/kbd/keymaps/xkb/`{.literal}
    目录中的文件列表对应，没有 `.map.gz`{.literal} 扩展名。
-   `--xlayouts=`{.literal} - 指定 X
    布局列表，该列表应当用作逗号分隔的列表，没有空格。接受与
    `setxkbmap(1)`{.literal} 相同格式的值，可以是 `布局`{.literal}
    格式（如 as `cz`{.literal}），也可以是 `布局 （变体）`{.literal}
    格式（如 `cz (qwerty)`{.literal}）。
    可以在下方的 `xkeyboard-config(7)`{.literal} man page 中查看所有可用
    `布局`{.literal}。
-   `--switch=`{.literal} -
    指定布局切换选项列表（在多个键盘布局之间切换的快捷方式）。必须使用逗号分开多个选项，没有空格。接受与
    `setxkbmap(1)`{.literal} 相同格式的值。
    您可以在 `xkeyboard-config(7)`{.literal} man page 上的
    `Options`{.literal} 下查看可用的切换选项。
:::
::: itemizedlist
**备注**
-   必须使用 `--vckeymap=`{.literal} 或 `--xlayouts=`{.literal} 选项。
:::
::: title
**示例**
:::
以下示例使用 `--xlayouts=`{.literal} 选项设置了两种键盘布局
（`English (US)`{.literal} 和 `Czech (qwerty)`{.literal}），并允许使用
[**Alt**]{.keycap}+[**Shift**]{.keycap} 在它们之间切换：
``` screen
keyboard --xlayouts=us,'cz (qwerty)' --switch=grp:alt_shift_toggle
```
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#lang-required_kickstart-commands-for-system-configuration}lang（必需） {.title}
:::
`lang`{.literal} Kickstart
命令是必需的。它设置了在安装过程中使用的语言以及系统的默认语言。
::: title
**Syntax**
:::
``` screen
lang language [--addsupport=language,...]
```
::: itemizedlist
**必填选项**
-   `language`{.literal} - 安装对此语言的支持并将其设置为系统默认。
:::
::: itemizedlist
**可选选项**
-   `--addsupport=`{.literal} -
    添加对其他语言的支持。格式为使用逗号分开的列表，无空格。例如：
    ``` screen
    lang en_US --addsupport=cs_CZ,de_DE,en_UK
    ```
:::
::: itemizedlist
**备注**
-   `locale -a | grep _`{.literal} 或
    `localectl list-locales | grep _`{.literal} 命令返回支持的区域列表。
-   文本模式安装中不支持某些语言（比如中文、日语、韩文和印度的语言）。如果您使用
    `lang`{.literal}
    命令指定这些语言中的一种，安装过程将继续使用英语，但安装的系统会使用您选择的语言作为其默认语言。
:::
::: title
**示例**
:::
要将语言设置为英语，Kickstart 文件应包含以下行：
``` screen
lang en_US
```
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#module_kickstart-commands-for-system-configuration}module {.title}
:::
`module`{.literal} Kickstart 命令是可选的。使用这个命令在 kickstart
脚本中启用软件包模块流。
::: title
**Syntax**
:::
``` screen
module --name=NAME [--stream=STREAM]
```
::: variablelist
**必填选项**
[`--name=`{.literal}]{.term}
:   指定要启用的模块名称。使用实际名称替换 [*NAME*]{.emphasis}。
:::
::: variablelist
**可选选项**
[`--stream=`{.literal}]{.term}
:   指定要启用的模块流的名称。将 [*STREAM*]{.emphasis} 替换为实际名称。
    您不需要为定义的默认流的模块指定此选项。对于没有默认流的模块，这个选项是强制的，省略它将导致错误。无法多次启用带有不同流的模块。
:::
::: itemizedlist
**备注**
-   通过这个命令和 `%packages`{.literal}
    部分的组合，您可以安装由启用的模块和流组合提供的软件包，而无需明确指定模块和流。安装软件包前必须启用模块。使用
    `module`{.literal} 命令启用模块后，您可以通过在
    `%packages`{.literal} 部分列出此模块启用的软件包来安装它们。
-   单个 `module`{.literal}
    命令只能启用单个模块和流组合。要启用多个模块，请使用多个
    `module`{.literal} 命令。无法多次启用带有不同流的模块。
-   在 Red Hat Enterprise Linux 9 中，模块仅存在于 AppStream
    软件仓库中。要列出可用的模块，请在已安装的 Red Hat Enterprise Linux
    9 系统上使用带有有效订阅的 `dnf module list`{.literal} 命令。
:::
::: itemizedlist
**其他资源**
-   [使用 DNF
    工具管理软件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_software_with_the_dnf_tool/index){.link}
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#repo_kickstart-commands-for-system-configuration}repo {.title}
:::
`repo`{.literal} Kickstart 命令是可选的。它配置额外的 dnf
存储库，可用作软件包安装的来源。您可以添加多个 `repo`{.literal} 行。
::: title
**Syntax**
:::
``` screen
repo --name=repoid [--baseurl=url|--mirrorlist=url|--metalink=url] [OPTIONS]
```
::: itemizedlist
**必填选项**
-   `--name=`{.literal} - 存储库
    ID。这个选项是必需的。如果库的名称与另一个之前添加的库冲突，则会忽略它。因为安装程序使用预设置程序库列表，这意味着您无法添加名称与预先设置的库的名称相同的库。
:::
::: title
**URL options**
:::
这些选项是互斥的，也是可选的。此处不支持 dnf
存储库配置文件中可以使用的变量。您可以使用字符串 `$releasever`{.literal}
和 `$basearch`{.literal}，它们由 URL 中的对应值替换。
::: itemizedlist
-   `--baseurl=`{.literal} - 存储库的 URL。
-   `--mirrorlist=`{.literal} - 指向存储库镜像列表的 URL。
-   `--metalink=`{.literal} - 存储库的 metalink 的 URL。
:::
::: itemizedlist
**可选选项**
-   `--install`{.literal} - 将已安装系统上的仓库配置保存在
    `/etc/yum.repos.d/`{.literal} 目录中。如果不使用这个选项，在
    Kickstart
    文件中配置的程序库将只在安装过程中使用，而无法在安装的系统中使用。
-   `--cost=`{.literal} -
    为这个存储库分配成本的整数值。如果多个库提供同样的软件包，这个数字就会被用来决定优先使用哪个库。成本低的软件仓库优先于成本高的软件仓库。
-   `--excludepkgs=`{.literal} -
    [*不能*]{.emphasis}从此存储库拉取的软件包名称，是一个以逗号分隔的列表。如果多个存储库提供同样的软件包，您希望这个软件包来自特定的仓库，可以使用它。可接受完整软件包名称（如
    `publican`{.literal}）和 globs（如 `gnome-*`{.literal}）。
-   `--includepkgs=`{.literal} - 允许从此存储库拉取的软件包名称和 glob
    的逗号分隔列表。该程序仓库提供的其他软件包将被忽略。如果您只想从库中安装单个软件包或软件包组而不包括该程序库提供的所有其他软件包，这个选项就很有用了。
-   `--proxy=[protocol://][username[:password]@]host[:port`{.literal}
    \] - 指定仅用于此存储库的 HTTP/HTTPS/FTP
    代理。此设置不会影响任何其他存储库，也不会影响在 HTTP 安装中如何获取
    `install.img`{.literal}。
-   `--noverifyssl`{.literal} - 连接到 `HTTPS`{.literal} 服务器时禁用
    SSL 验证。
:::
::: itemizedlist
**备注**
-   用于安装的软件仓库必须是稳定版本。如果在安装完成前修改库，则安装会失败。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#rootpw-required_kickstart-commands-for-system-configuration}rootpw（必需） {.title}
:::
需要 `rootpw`{.literal} Kickstart 命令。它将系统的根密码设置为
[*password*]{.emphasis} 参数的值。
::: title
**语法**
:::
``` screen
rootpw [--iscrypted|--plaintext] [--lock] password
```
::: itemizedlist
**必填选项**
-   [*password*]{.emphasis} - 密码规格。纯文本或者加密字符串。请参阅以下
    `--iscrypted`{.literal} 和 `--plaintext`{.literal}。
:::
::: itemizedlist
**选项**