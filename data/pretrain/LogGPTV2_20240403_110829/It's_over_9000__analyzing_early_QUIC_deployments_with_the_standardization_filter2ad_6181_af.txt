extensive deployment by large network providers.
Stateful scans with the QScanner reveal that TLS as an integral
part is similarly configured between QUIC and TLS over TCP stacks
273
for the same target. In contrast, different implementations and
configurations, with 45 transport parameter sets can be found on
the Internet. A thorough analysis of these differences and their
impact on network communications and especially user experience
in the future is necessary to improve the Internet, support long-term
deployment of QUIC and allow the evaluation of design decisions
from the protocol specification.
The Dominance of CDNs. Similar to related work from Rüth
et al. [39], a small group of providers dominates the deployment
of QUIC. While their research reported in 2018, that a majority of
found deployments could be associated to Google, our work shows,
that the current state of IETF QUIC is mainly dominated by Cloud-
flare. Google is still highly involved in the development of QUIC
but deploys its own version of QUIC in parallel. The dominance of
large providers during the deployment of IETF drafts in their early
years has also been shown by Holz et al. [19]. Mainly Cloudflare,
but also Google, Akamai and Mozilla are the driving forces behind
the quick deployment of TLS 1.3 on the Internet. While our work
shows that QUIC capable hosts can be found in more than 4.7 k
ASes and successful connections can be established with targets in
4.4 k ASes, the analysis of transport parameters and HTTP Server
Header values indicates, that many of these are orchestrated by
large CDNs as edge POPs similar to the work from Gigis et al. [16].
We argue that it has to be considered carefully by research in
the future and leads to substantial centralization. Measurement
studies are easily biased towards these providers. Operators cannot
solely be identified based on ASes but might be responsible for
distributed deployments. Nevertheless, it can be seen that QUIC
as new protocol is used by individuals even before the QUIC draft
is finally standardized and even though prominent HTTP servers,
e.g., NGINX [35], only provide QUIC support on specific branches.
With the standardization of QUIC and increased deployment, its
status needs to be further evaluated in the future.
Fingerprinting QUIC. Based on presented results, we argue that
the combination of functionality from multiple layers of the net-
work stack into a single protocol increases the possibility to fin-
gerprint specific implementations. As long as many QUIC stacks
implement transport functionality, necessary TLS adaptations and
HTTP servers on top individually, the number of parameters point-
ing towards a specific implementation is comparably higher than
for traditional HTTP servers with exchangeable TLS libraries built
on top of an independent TCP stack. As shown in Section 5 we find
45 sets of QUIC parameters, out of which, some are closely related to
specific providers. Further adding TLS properties and HTTP results
allowed us to identify edge POP deployments of specific providers.
Whether this persists in the future or whether the standardization
leads to a separation of functionality, e.g., with TLS specific libraries
adapting to new requirements should be evaluated.
ACKNOWLEDGMENTS
The authors would like to thank the anonymous reviewers and our
shepherd Steve Uhlig for their valuable feedback. This work was
partially funded by the German Federal Ministry of Education and
Research under the project PRIMEnet, grant 16KIS1370 and the
German-French Academy for the Industry of the Future.
IMC ’21, November 2–4, 2021, Virtual Event, USA
Johannes Zirngibl, Philippe Buschmann, Patrick Sattler, Benedikt Jaeger, Juliane Aulbach, and Georg Carle
Definitions. RFC 6066.
REFERENCES
[1] Donald E. Eastlake 3rd. 2011. Transport Layer Security (TLS) Extensions: Extension
[2] Alexa. 2021. Top 1M sites. https://www.alexa.com/topsites
[3] Johanna Amann, Oliver Gasser, Quirin Scheitle, Lexi Brent, Georg Carle, and
Ralph Holz. 2017. Mission Accomplished? HTTPS Security after Diginotar. In
Proceedings of the 2017 Internet Measurement Conference (IMC ’17). Association
for Computing Machinery, New York, NY, USA, 325–340.
[4] Mike Bishop. 2021. Hypertext Transfer Protocol Version 3 (HTTP/3). Internet-Draft
draft-ietf-quic-http-34. Internet Engineering Task Force. https://datatracker.ietf.
org/doc/html/draft-ietf-quic-http-34 Work in Progress.
[5] Cisco. 2021. Umbrella Top 1M List.
https://umbrella.cisco.com/blog/cisco-
umbrella-1-million
[6] crt.sh. 2021. Certificates for Google Video in CT Log. Retrieved 2021-05-27 from
https://crt.sh/?q=googlevideo.com https://web.archive.org/web/20210526164544/
https://crt.sh/?q=googlevideo.com.
[7] Dragana Damjanovic. 2021. QUIC and HTTP/3 Support now in Firefox Nightly
and Beta. Retrieved 2021-09-27 from https://hacks.mozilla.org/2021/04/quic-
and-http-3-support-now-in-firefox-nightly-and-beta/
[8] David Schinazi and Fan Yang and Ian Swett. 2020. Chrome is deploying HTTP/3
and IETF QUIC. Retrieved 2021-09-27 from https://blog.chromium.org/2020/10/
chrome-is-deploying-http3-and-ietf-quic.html
[9] David Dittrich, Erin Kenneally, et al. 2012. The Menlo Report: Ethical principles
guiding information and communication technology research. US Department of
Homeland Security (2012).
[10] Zakir Durumeric, Eric Wustrow, and J. Alex Halderman. 2013. ZMap: Fast
Internet-wide Scanning and Its Security Applications. In Proc. USENIX Security
Symposium. Washington, D.C., USA.
[11] Facbook. 2021. mvfst. https://github.com/facebookincubator/mvfst
[12] Facbook. 2021. Proxygen: Facebook’s C++ HTTP Libraries. https://github.com/
facebook/proxygen
[13] Marc Fischlin and Felix Günther. 2014. Multi-Stage Key Exchange and the Case
of Google’s QUIC Protocol. In Proceedings of the 2014 ACM SIGSAC Conference
on Computer and Communications Security (CCS ’14). Association for Computing
Machinery, New York, NY, USA, 1193–1204.
[14] Oliver Gasser, Quirin Scheitle, Pawel Foremski, Qasim Lone, Maciej Korczyński,
Stephen D. Strowes, Luuk Hendriks, and Georg Carle. 2018. Clusters in the
Expanse: Understanding and Unbiasing IPv6 Hitlists. In Proceedings of the Internet
Measurement Conference 2018 (IMC ’18). Association for Computing Machinery,
New York, NY, USA, 364–378.
[15] Ghedini Alessandro. October 17, 2019. Experiment with HTTP/3 using NGINX
and quiche. https://blog.cloudflare.com/experiment-with-http-3-using-nginx-
and-quiche/
[16] Petros Gigis, Matt Calder, Lefteris Manassakis, George Nomikos, Vasileios Kotro-
nis, Xenofontas Dimitropoulos, Ethan Katz-Bassett, and Georgios Smaragdakis.
2021. Seven Years in the Life of Hypergiants’ off-Nets. In Proceedings of the 2021
ACM SIGCOMM 2021 Conference (SIGCOMM ’21). Association for Computing
Machinery, New York, NY, USA, 516–533.
[17] IETF QUIC Working Group. 2021. Implementations. https://github.com/quicwg/
[18] IETF QUIC Working Group. 2021. QUIC Versions. https://github.com/quicwg/
base-drafts/wiki/Implementations
base-drafts/wiki/QUIC-Versions
[19] Ralph Holz, Jens Hiller, Johanna Amann, Abbas Razaghpanah, Thomas Jost,
Narseo Vallina-Rodriguez, and Oliver Hohlfeld. 2020. Tracking the Deployment
of TLS 1.3 on the Web: A Story of Experimentation and Centralization. SIGCOMM
Comput. Commun. Rev. 50, 3 (July 2020), 3–15.
[20] ICAN. 2021. Centralized Zone Data Service. https://czds.icann.org/home
[21] Jana Iyengar and Martin Thomson. 2021. QUIC: A UDP-Based Multiplexed and
Secure Transport. RFC 9000. https://doi.org/10.17487/RFC9000
[22] Jana Iyengar and Martin Thomson. 2021. QUIC: A UDP-Based Multiplexed and
Secure Transport. Internet-Draft draft-ietf-quic-transport-34. Internet Engineering
Task Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-transport-34
Work in Progress.
[23] Jim Roskind. June 27, 2013. Experimenting with QUIC. https://blog.chromium.
org/2013/06/experimenting-with-quic.html
[24] Matt Joras and Yang Chi. 2020. How Facebook is bringing QUIC to billions.
Retrieved 2021-09-27 from https://engineering.fb.com/2020/10/21/networking-
traffic/how-facebook-is-bringing-quic-to-billions/
[25] Arash Molavi Kakhki, Samuel Jero, David Choffnes, Cristina Nita-Rotaru, and
Alan Mislove. 2017. Taking a Long Look at QUIC: An Approach for Rigorous
Evaluation of Rapidly Evolving Transport Protocols. In Proceedings of the 2017
Internet Measurement Conference (IMC ’17). Association for Computing Machinery,
New York, NY, USA, 290–303.
[26] Arash Molavi Kakhki, Samuel Jero, David Choffnes, Cristina Nita-Rotaru, and
Alan Mislove. 2019. Taking a Long Look at QUIC: An Approach for Rigorous
Evaluation of Rapidly Evolving Transport Protocols. Commun. ACM 62, 7 (June
2019), 86–94.
[27] Kim, Hyojeong and Zeng, James Hongyi. August 21, 2017. Steering oceans of
content to the world. https://research.fb.com/steering-oceans-of-content-to-
the-world/
[28] Platon Kotzias, Abbas Razaghpanah, Johanna Amann, Kenneth G. Paterson,
Narseo Vallina-Rodriguez, and Juan Caballero. 2018. Coming of Age: A Longi-
tudinal Study of TLS Deployment. In Proceedings of the Internet Measurement
Conference 2018 (IMC ’18). Association for Computing Machinery, New York, NY,
USA, 415–428.
[29] Adam Langley, Alistair Riddoch, Alyssa Wilk, Antonio Vicente, Charles Krasic,
Dan Zhang, Fan Yang, Fedor Kouranov, Ian Swett, Janardhan Iyengar, Jeff Bai-
ley, Jeremy Dorfman, Jim Roskind, Joanna Kulik, Patrik Westin, Raman Tenneti,
Robbie Shade, Ryan Hamilton, Victor Vasiliev, Wan-Teh Chang, and Zhongyi Shi.
2017. The QUIC Transport Protocol: Design and Internet-Scale Deployment. In
Proceedings of the Conference of the ACM Special Interest Group on Data Commu-
nication (SIGCOMM ’17). Association for Computing Machinery, New York, NY,
USA, 183–196.
[30] LiteSpeed QUIC Team. 2021. LiteSpeed QUIC (LSQUIC) Library. https://github.
com/litespeedtech/lsquic
[31] Robert Lychev, Samuel Jero, Alexandra Boldyreva, and Cristina Nita-Rotaru. 2015.
How Secure and Quick is QUIC? Provable Security and Performance Analyses.
In 2015 IEEE Symposium on Security and Privacy. 214–231.
million/
[32] Majestic. 2021. The Majestic Million. https://majestic.com/reports/majestic-
[33] Robin Marx, Joris Herbots, Wim Lamotte, and Peter Quax. 2020. Same Standards,
Different Decisions: A Study of QUIC and HTTP/3 Implementation Diversity. In
Proceedings of the Workshop on the Evolution, Performance, and Interoperability
of QUIC (EPIQ ’20). Association for Computing Machinery, New York, NY, USA,
14–20.
[34] Késsia Nepomuceno, Igor Nogueira de Oliveira, Rafael Roque Aschoff, Daniel
Bezerra, Maria Silvia Ito, Wesley Melo, Djamel Sadok, and Géza Szabó. 2018. QUIC
and TCP: A Performance Evaluation. In 2018 IEEE Symposium on Computers and
Communications (ISCC). 00045–00051.
[35] NGINX QUIC. 2021. Welcome to the demo site for nginx-quic. https://quic.
nginx.org/
[36] Mark Nottingham, Patrick McManus, and Julian Reschke. 2016. HTTP Alternative
[37] Craig Partridge and Mark Allman. 2016. Addressing Ethical Considerations in
Services. RFC 7838.
Network Measurement Papers. Commun. ACM 59, 10 (Oct. 2016).
[38] Maxime Piraux, Quentin De Coninck, and Olivier Bonaventure. 2018. Observing
the Evolution of QUIC Implementations. In Proceedings of the Workshop on the
Evolution, Performance, and Interoperability of QUIC (EPIQ’18). Association for
Computing Machinery, New York, NY, USA, 8–14.
[39] Jan Rüth, Ingmar Poese, Christoph Dietzel, and Oliver Hohlfeld. 2018. A First Look
at QUIC in the Wild. In Passive and Active Measurement. Springer International
Publishing, 255–268.
[40] David Schinazi and Eric Rescorla. 2021. Compatible Version Negotiation for QUIC.
Internet-Draft draft-ietf-quic-version-negotiation-03. Internet Engineering Task
Force. https://datatracker.ietf.org/doc/html/draft-ietf-quic-version-negotiation-
03 Work in Progress.
[41] Benjamin M. Schwartz, Mike Bishop, and Erik Nygren. 2021. Service binding
and parameter specification via the DNS (DNS SVCB and HTTPS RRs). Internet-
Draft draft-ietf-dnsop-svcb-https-05. Internet Engineering Task Force. https:
//datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-05 Work in Progress.
[42] Marten Seemann and Jana Iyengar. 2020. Automating QUIC Interoperability
Testing. In Proceedings of the Workshop on the Evolution, Performance, and Inter-
operability of QUIC (EPIQ ’20). Association for Computing Machinery, New York,
NY, USA, 8–13.
[43] Martin Thomson and Sean Turner. 2021. Using TLS to Secure QUIC. RFC 9001.
https://doi.org/10.17487/RFC9001
[44] Martin Thomson and Sean Turner. 2021. Using TLS to Secure QUIC. Internet-Draft
draft-ietf-quic-tls-34. Internet Engineering Task Force. https://datatracker.ietf.
org/doc/html/draft-ietf-quic-tls-34 Work in Progress.
[45] Martino Trevisan, Danilo Giordano, Idilio Drago, and Ali Safari Khatouni. 2021.
Measuring HTTP/3: Adoption and Performance. CoRR abs/2102.12358 (2021).
arXiv:2102.12358 https://arxiv.org/abs/2102.12358
[46] Konrad Wolsing, Jan Rüth, Klaus Wehrle, and Oliver Hohlfeld. 2019. A Perfor-
mance Perspective on Web Optimized Protocol Stacks: TCP+TLS+HTTP/2 vs.
QUIC. In Proceedings of the Applied Networking Research Workshop (ANRW ’19).
Association for Computing Machinery, New York, NY, USA, 1–7.
274
It’s Over 9000: Analyzing Early QUIC Deployments with the Standardization on the Horizon
IMC ’21, November 2–4, 2021, Virtual Event, USA
B IMPORTANT AS NAMES
Table 7 provides a summary of important ASes and their according
names.
Table 7: Important ASes and according names.
Name
GTS Telecom SRL
1&1 IONOS SE
Cloudflare, Inc.
DigitalOcean, LLC
Google LLC
OVH SAS
Amazon.com, Inc.
Akamai International B.V.
SYNERGY WHOLESALE PTY LTD
Hostinger International Limited
Fastly
A2 Hosting, Inc.
Reliance Jio Infocomm Limited
PrivateSystems Networks
Linode, LLC
AS
AS5606
AS8560
AS13335
AS14061
AS15169
AS16276
AS16509
AS20940
AS45638
AS47583
AS54113
AS55293
AS55836
AS63410
AS63949
AS209242 Cloudflare London, LLC
AS210079
EuroByte LLC
A ETHICS
All our scans are set up based on a set of ethical measures we follow
strictly. These are mainly based on informed consent [9] and well
known best practices [37]. Our study does not involve users, their
information or sensitive data but focuses on publicly reachable
and available services. To not cause harm to any infrastructure, we
apply measures described by Durumeric et al. [10]. We limit the
rate of our scans and use a collective blocklist based on requests
to be excluded from our scans. We are directly registered as abuse
contact for our scan infrastructure and react quickly to all requests.
Furthermore, we host websites on all IP addresses used for scanning
to inform about our research and provide contact information for
further details or scan exclusion.
As explained in Section 2, Initial packets need to be at least 1200 B.
This increases the overall traffic from our scans in comparison to
most TCP ZMap scans but mainly impacts our own uplink to the
Internet. Due to the randomization of scanned targets, we argue
that the impact on servers is still small. Furthermore, we limit the
number of scanned domains per IP address to reduce the load on
hosting services and providers.
275