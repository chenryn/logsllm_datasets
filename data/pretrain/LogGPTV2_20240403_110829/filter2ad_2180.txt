title:Applying Principles of Active Available Bandwidth Algorithms to Passive
TCP Traces
author:Marcia Zangrilli and
Bruce Lowekamp
Applying Principles of Active Available
Bandwidth Algorithms to Passive TCP Traces
Marcia Zangrilli and Bruce B. Lowekamp
College of William and Mary, Williamsburg VA 23187, USA
{mazang, lowekamp}@cs.wm.edu
Abstract. While several algorithms have been created to actively mea-
sure the end-to-end available bandwidth of a network path, they require
instrumentation at both ends of the path, and the traﬃc injected by
these algorithms may aﬀect the performance of other applications on
the path. Our goal is to apply the self-induced congestion principle to
passive traces of existing TCP traﬃc instead of actively probing the
path. The primary challenge is that, unlike active algorithms, we have
no control over the traﬃc pattern in the passive TCP traces. As part
of the Wren bandwidth monitoring tool, we are developing techniques
that use single-sided packet traces of existing application traﬃc to mea-
sure available bandwidth. In this paper, we describe our implementation
of available bandwidth analysis using passive traces of TCP traﬃc and
evaluate our approach using bursty traﬃc on a 100 Mb testbed.
1
Introduction
Available bandwidth is typically measured by actively injecting data probes
into the network. The active approach often produces accurate measurements,
but it may cause competition between application traﬃc and the measurement
traﬃc, reducing the performance of useful applications. Most of these active al-
gorithms rely on UDP traﬃc to probe the path for available bandwidth, however
applications typically use TCP traﬃc. Because UDP and TCP traﬃc may be
packet-shaped diﬀerently along the same path, measurements made with UDP
traﬃc may not reﬂect the actual bandwidth available to TCP applications. Fur-
thermore, these available bandwidth algorithms require instrumentation on both
ends of the path, which may not always be possible.
Our goal is to use passive traces of existing TCP traﬃc instead of actively
generating the traﬃc being used to measure available bandwidth. By monitoring
the traﬃc that an application generates, we can calculate the available band-
width even when the application has not generated suﬃcient traﬃc to saturate
that path. Our available bandwidth measurements can be used by an application
already generating traﬃc to determine if it can increase its sending rate, by net-
work managers who are interested in observing traﬃc, capacity planning, SLA
monitoring, etc., or by central monitoring systems[1, 2] that store measurements
for future use or use by other applications.
C. Dovrolis (Ed.): PAM 2005, LNCS 3431, pp. 333–336, 2005.
c(cid:1) Springer-Verlag Berlin Heidelberg 2005
334
M. Zangrilli and B.B. Lowekamp
Because our approach uses existing application traﬃc to measure available
bandwidth, the monitored traﬃc is not an additional burden on the path and
experiences the same packet shaping issues aﬀecting applications. To achieve the
necessary accuracy and avoid intrusiveness, our passive monitoring system uses
the Wren packet trace facility [3] to collect kernel-level traces of application traf-
ﬁc and analyzes the traces in the user-level. Our trace facilities can be deployed
on one or two end hosts or on a single packet capture box, which is an advantage
over tools that must be deployed on both ends of the path.
This paper describes how to apply the self-induced congestion principle to
passive traces of application traﬃc, a task complicated because we have no con-
trol over the application traﬃc pattern. We describe an algorithm for applying
the self-induced congestion principle to passive, one-sided traces of TCP traﬃc
and demonstrate that our algorithm produces measurements that are responsive
to changes in available bandwidth.
2 Background
Available bandwidth describes what portion of the path is currently unused by
traﬃc. More precisely, available bandwidth is determined by subtracting the
utilization from the capacity of the network path [4, 5]. In practice, available
bandwidth may also be aﬀected by traﬃc shapers that allow some traﬃc to
consume more or less bandwidth than other traﬃc can consume.
The basic principle of the self-induced congestion (SIC) technique is that if
packets are sent at a rate greater than the available bandwidth, the queuing
delays will have an increasing trend, and the rate the packets arrive at the
receiver will be less than the sending rate. If the one-way delays are not increasing
and the rate the packets arrive is the same as the sending rate of the packets,
then the available bandwidth is greater than or equal to the sending rate. Tools
that utilize this concept [6, 7, 8, 9] probe the network path for the largest sending
rate that does not result in queuing delays with an increasing trend because this
sending rate reﬂects the available bandwidth of the path.
Proposed improvements to the TCP protocol have set a precedent for mea-
suring available bandwidth on a single end host. Paced Start (PaST)[10] incorpo-
rates the self-induced congestion principle into the TCP protocol to reduce the
amount of time taken before transitioning into the congestion avoidance phase.
3 Passive One-Sided SIC Implementation
Our one-sided passive SIC implementation uses the timestamps of data and ACK
packets on the sending host to calculate the round trip times (RTT) and the
initial sending rates of the stream of packets. Our implementation is similar to
the pathload [8], which uses trends in one-way delays to determine the available
bandwidth.
We group packets together into streams and identify the trend in RTTs of
each packet group. We impose the condition that grouped packets are the same
Applying Principles of Active Available Bandwidth Algorithms
335
size so that all packets we consider have experienced the same store-and-forward
delays at the links along the path. Because congestion window size often deter-
mines the sending rate of the TCP application, we also ensure that all packets
grouped together have the same congestion window size. The number of packets
in each group is determined by the congestion window size. For each stream
of packets, we calculate the RTTs of each packet, calculate the initial sending
rate, and determine if there is an increasing trend in the RTTs. We group sev-
eral streams together and try to identify the maximum value for the available
bandwidth. For each group, the stream with the largest sending rate and no
increasing trend determines the available bandwidth.
To emulate traﬃc generated by on-oﬀ applications, we created traﬃc gener-
ators that send 256K messages with a variable delay. The variable delay causes
the throughput of the generators to oscillate.
Figure 1 presents the results of applying our passive SIC approach to one-
sided traces of two traﬃc generators. In the left graph, the average throughput of
the traﬃc generator is 65 Mbps on an uncongested LAN. The traﬃc generator
was run on a 100 Mb testbed with varying amounts of cross traﬃc present.
This graph shows distinct bands that demonstrate our algorithm can detect the
changes in the amount of available bandwidth.
The second traﬃc generator was designed to send out bursts of messages with
varying throughput. In this experiment, there is 20 Mbps of cross traﬃc present
for the ﬁrst 15 seconds and 40 Mbps of cross traﬃc present for the last 15 sec-
onds. In the right graph in Fig. 1, the line represents the throughput of the traﬃc
generator and the points are the measurements produced by our passive algo-
rithm. Notice how the third peak does not reach the true available bandwidth,
but our algorithm is still able to produce an accurate measurement. This graph
shows that our SIC algorithm is able to measure the available bandwidth using
)
s
p
b
M
(
h
t
d
i
w
d
n
a
b
 100
 80
 60
 40
 20
 0
)
s
p
b
M
(
h
t
d
i
w
d
n
a
b
 80
 60
 40
 20
 0
 0
 5  10  15  20  25  30
Time (seconds)
 0
 20
 40
 60
Time (seconds)
Fig. 1. The left graph shows how our SIC algorithm is responsive to changes in available
bandwidth. The right graph demonstrates our SIC algorithm’s ability to accurately
measure the available bandwidth even when TCP throughput is ramping up
336
M. Zangrilli and B.B. Lowekamp
one-sided traces of application traﬃc with on-oﬀ communication patterns, even
when the application traﬃc throughput is less than the available bandwidth.
4 Conclusion
We have described the implementation of a passive available bandwidth tech-
nique based on the self-induced congestion principle. Our preliminary evaluation
of our one-sided passive SIC technique is quite promising and shows that we can
obtain valid available bandwidth measurements in congested environments using
bursty application traﬃc.
We are continuing to evaluate our one-sided passive SIC algorithms. We are
interested in qualifying what types of traﬃc patterns are best suited for our algo-
rithm to produce valid measurements, and performing more detailed analysis on
the aﬀects of traﬃc burstiness, bottlenecks, and delayed ACKs on the accuracy
of our algorithm’s measurements.
References
1. Adams, A., Mahdavi, J., Mathis, M., Paxson, V.: creating a scalable architecture
for internet measurement. In: Proceedings of INET’98. (1998)
2. Wolski, R.: Forecasting network performance to support dynamic scheduling us-
In: Proceedings of the 6th High Performance
ing the network weather service.
Distributed Computing Conference (HPDC). (1997)
3. Zangrilli, M., Lowekamp, B.B.: Using passive traces of application traﬃc in a
network monitoring system. In: High Performance Distributed Computing (HPDC
13). (2004)
4. Prasad, R., Murray, M., Dovrolis, C., Claﬀy, K.: Bandwidth estimation: Metrics,
measurement techniques, and tools. In: IEEE Network. (2003)
5. Lowekamp, B.B., Tierney, B., Cottrell, L., Hughes-Jones, R., Kielmann, T., Swany,
M.: Enabling network measurement portability through a hierarchy of character-
istics. In: Proceedings of the 4th Workshop on Grid Computing (GRID). (2003)
6. Jin, G., Tierney, B.: Netest: A tool to measure the maximum burst size, available
bandwidth and achievable throughput. In: International Conference on Information
Technology Research and Education. (2003)
7. Ribeiro, V., Riedi, R.H., Baraniuk, R.G., Navratil, J., Cottrell, L.: pathChirp:
In: Passive and
Eﬃcient Available Bandwidth Estimation for Network Paths.
Active Measurement Workshop (PAM). (2003)
8. Jain, M., Dovrolis, C.: Pathload: a measurement tool for end-to-end available
bandwidth. In: Passive and Active Measurements Workshop. (2002)
9. Hu, N., Steenkiste, P.: Evaluation and characterization of available bandwidth
techniques. IEEE JSAC Special Issue in Internet and WWW Measurement, Map-
ping, and Modeling (2003)
10. Hu, N., Steenkiste, P.: Improving tcp startup performance using active measure-
ments: Algorithm and evaluation. In: International Conference on Network Proto-
cols (ICNP). (2003)