118
4
1
220
5 1146
5 1171
326
4
116
4
120
4
0
17
111
4
0
0
347
347
347
347
347
347
347
347
347
347
71
325
68
347
347
347
347
347
71
325
35
145
145
145
145
145
92
556
872
554
144
26
76
792
100
556
874
553
144
26
76
344
548
548
548
548
548
548
548
548
548
548
241
522
95
548
548
548
548
548
241
522
39
77
77
77
77
67
69
70
60
69
70
9
66
17
52
69
57
69
70
9
66
0
75
30
30
30
75
75
75
75
75
75
1
73
9
75
75
75
75
75
1
73
4
63
28
28
28
65
65
65
65
65
65
1
65
8
65
65
65
65
65
1
65
3
5
2
2
2
5
5
5
5
5
5
0
5
1
5
5
5
5
5
0
5
0
33
33
33
33
33
47
568
33
33
33
2
17
7
47
570
33
33
33
2
17
2
33
33
33
33
33
33
33
33
33
33
2
17
7
33
33
33
33
33
2
17
2
only suspicious activity. The best response from an intrusion-detection probe
facing this kind of traﬃc would be a single event, or the same event repeated
at regular intervals with update information. What we see here is a chain of
uncorrelated events (uncorrelated in the sense that the intrusion-detection
probe does not link them, because an obvious correlation chain from IP
address and monotonically increasing port number exists in the logs) that
requires an operator manual analysis, not the complete diagnostic that would
bring the expected value from this tool. Snort is the only tool to indicate
that, with some evasion modes, it is facing a Whisker scan; this takes the
form of additional alerts in evasion modes -I 3, -I 4, -I 5 either alone
or combined. IDS-A and IDS-C without explicitly mentioning Whisker at
least give an indication of the evasion mode for some of them.
Missed identiﬁcation of targets. A follow-up observation is that since this
is merely a scan and not actual attacks, all of the alerts generated could be
considered false alerts, from the point of view of an operator who would be
looking for successful intrusions, or even intrusion attempts. A scan here at-
tempts to assert that superﬁcial traces of a vulnerability exist on the scanned
web server. It does not attempt to use the potential vulnerability to break
into the server. This unfortunately points out the fact that the intrusion-
detection signatures implemented are attached to very superﬁcial charac-
teristics of the attacks and do not take into account symptoms indicating
188
H. Debar and B. Morin
a really malicious attempt. The only anomalous symptom that the probes
seem to look for is a request for the UNIX password ﬁle at the well-known lo-
cation /etc/passwd. Our scan included attempts against other sensitive ﬁles
(.rhost, /etc/exports, /etc/shadow) without the probes noticing them.
Ignorance of directory scanning. As shown in the Dir columns, most
probes fail to detect directory scanning. This is a reasonable way to practice
unless directory browsing is enabled on the web server.
Continuing issues with evasion modes. Attack detection is very much de-
pendant of the kind of evasion mode that is activated. Evasion mode -I 8
is particularly deadly, as it carries out most of the scanning activity with a
very low detection probability. IDS-C resists better to the various evasion
modes that the others, which indicates that the analysis engine has at least
some notion of what an HTTP session should look like. The reason why
this change from “/” to “\” is deadly for the probes is that many of them
use the “/” character in the signatures to anchor the pattern; a signature
pattern for the phf vulnerability could look like ‘‘/phf?’’ to indicate that
the phf string is at the end of the request string and needs arguments. If
the probe doesn’t translate “\” to “/”, the trigger is missed. Even though
it also shows failures from the probes, mode -I 7 is not as dangerous for
the server, as it applies mostly to directory scanning; this gives an attacker
some information about the directory structure of the server and as such
some information about potential weaknesses, but it would still require a lot
of work to actually break in the site.
Reaction of the various intrusion-detection probes to evasion varies greatly.
Snort and IDS-C (and IDS-A to a lesser extend) become extremely verbose
with certain modes. In the long URL mode (-I 3, -I 4 or -I 5), they also
generate a number of false alerts because the random characters inserted
match existing, too simple signatures. This test shows that even though
the tested intrusion-detection probes have made progress with respect to
interpreting the various subtleties of the HTTP protocol encoding (a similar
test two years ago showed all probes failing detection even with the simplest
encoding tricks), they could still be improved.
4.4 Whisker Scan and the Structure of Alerts
Table 3 focuses on the structure of the alerts generated by the intrusion-detection
systems, in response to the same Whisker scan shown in Sect. 4.3. The total
number of alerts is given in columns T. Then, alerts are classiﬁed into 4 groups: G
for good alerts giving meaningful information about the event (although maybe
not as exhaustive as what we would like), A for approximate, giving information
that is correct but marginally relevant for the analysis of the actual event, B for
bad alerts that are clearly false alerts, and E for alerts related to the evasion
method used rather than the actual event. The deﬁnition of these groups is
conﬁgured into the result analysis tool.
Concerning the E (Evasion) column, it means diﬀerent things for each probe.
For IDS-B, almost all alerts classiﬁed in that category indicate that the probe
Evaluation of the Diagnostic Capabilities
189
has caught a HEAD request. Such an alert is not systematically generated for
every HEAD request. The most likely hypothesis at this stage is that there is a
second factor that is required for the creation of the alert, yet unidentiﬁed. Some
scan events not generating an alert in modes 1-3, but fairly close in patterns (e.g.
Perl and Perl5) do give a HEAD alert. A second hypothesis is that IDS-B
understands that there is an anomaly with the request. It then generates alerts
with a slightly broader coverage in terms of pattern matching. Finally, the HEAD
alert is sometimes doubled, e.g. two messages arrive in the syslog ﬁle for only
one scan event. As such, it is unclear whether it is a bad alert or a useful one.
For IDS-A, evasion almost exclusively means that it has seen the infamous
“../..” string in the URL. This pattern is inserted by whisker’s mode 4 and is
ﬂagged by IDS-A as an attempt to exploit an IIS vulnerability, which is ob-
viously an erroneous interpretation (even though the alert should not, in our
opinion, be classiﬁed as bad because the request indeed presents the required
characteristics). For IDS-C and Snort, it is a mixed bag of things, “../..” strings