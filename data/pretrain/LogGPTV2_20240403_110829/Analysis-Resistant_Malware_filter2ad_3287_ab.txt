achieved alone.
These properties have another interesting relationship.
When a malware author wishes to hide the function being
computed on the compromised host, this actually intensi-
ﬁes the need for the reduced communication in the follow-
ing way. Whenever either a public key obfuscation scheme
or the trivial method of returning all the input data is being
used to hide the function being computed, all an analyst on
the remote host will be able to see is the set of inputs that
are read. The malware author will want this set to be as
large and generic as possible to minimize the information
revealed about their activities. In the case of PIR in partic-
ular, the set of inputs read reveals everything the malware
could possibly be retrieving, so it must be large if meaning-
ful secrecy is to be achieved. This relationship between the
need for secrecy of the function computed (or documents
returned in the special case of PIR) and the need to read a
great deal of data on the remote host narrows the circum-
stances under which the trivial approach of returning all in-
put is possible. In particular, the malware author may wish
to limit exﬁltration bandwidth used by the malware to re-
duce the chances of detection.
The two properties offered by these techniques are then
Low bandwidth
The malware may scan a large amount of data and thus
effectively hide its intentions, but only use bandwidth
to send back what is deemed relevant, thus decreasing
the likelihood of detection.
Hiding
In case of discovery, the malware will not reveal what
speciﬁc information was sought. Even with full access
to and control over the malware binary (or even its
source code), its execution environment, and all data
included with it, security professionals and researchers
will be provably unable to determine which speciﬁc
pieces of data the malware was retrieving.
This raises a natural question: “Under what circumstances
are these properties important to a malware author?”. To an-
swer this question, in the next section we explore the goals
of authors targeted malware and the constraints under which
they operate.
3 PIR-Based Malware
Having considered the general deﬁnitions of public key
obfuscation and cryptographic tools for implementing it, we
now consider in depth a speciﬁc example of such techniques
that could be used in malware today. Speciﬁcally, we inves-
tigate the possibility of malware employing PIR techniques.
3.1 Targeted Espionage
Compromised hosts are of course desired for a variety of
purposes, including DDOS attacks and as stepping stones
for further malicious activities. PIR techniques, however,
will be naturally most useful in the case of malware de-
signed to retrieve information. Recent years have seen
increasing cases of malware found within organizations
speciﬁcally targeted for military or industrial espionage.
In one such case, dubbed “Trojangate”, ten’s of thou-
sands of commercially sensitive documents were captured
by malware on hosts within dozens of prominent Israeli
companies and exﬁltrated to about 100 receiving servers,
causing widespread media attention [29, 27]. The trojan,
known as Rona or Hotword.B, was speciﬁcally written for
espionage purposes and had not been previously encoun-
tered in the wild. Furthermore, the incident was not an op-
portunistic attempt on the part of an isolated hacker to ob-
tain valuable information; instead the malware was sold to
and used by several private investigation ﬁrms that had been
hired by three of Israel’s top telecom companies. The tro-
jan was introduced into the targeted organizations through
carefully executed social engineering efforts employing in-
fected documents attached to emails and delivered on CD’s.
There it used lists of keywords to trigger keystroke logging
and screen captures, in addition to searching for sensitive
documents [20]. Due to the low proﬁle maintained by the
infected machines, the trojan was not discovered for over a
year and a half, causing what the head of the Israeli inves-
tigation called “one of the gravest scandals in ... industrial
and market espionage in Israel”. The incident ultimately
resulted in stock losses, numerous arrests, and a possible
attempted homicide.
A number of other incidents highlight the threat of care-
fully targeted malware. In 2004, several New York banks
were affected by a piece of malware that was designed
to infect only speciﬁc systems within their organizations;
a project by the Ponemon Institute revealed malware that
searched for documents ﬂagged as conﬁdential or “critical”;
and anti-virus ﬁrm MessageLabs discovered a trojan specif-
ically designed to obtain data from an application used in
airplane design – suggesting military espionage [29]. These
incidents reveal a setting in which stealthy operation may be
of paramount importance to the malware author; explicitly
searching for sensitive documents may unacceptably reveal
a link between the malware and its origin when it is eventu-
ally analyzed. In cases of military, political, or commercial
espionage, PIR techniques may be the key to effectively ob-
taining sensitive information while exﬁltrating minimal data
and thus avoiding detection.
3.2 Attacker Goals and PIR
We now consider in greater detail the possible motiva-
tions of malware authors and challenges they face to de-
termine the conditions under which PIR techniques will be
beneﬁcial. Table 1 lists a number of types of information
they may seek from a compromised host.
Exﬁltration strategies. For each example in Table 1, we
give the general type of document or kind of data de-
sired (second column), the criteria for ﬁnding the speciﬁc
documents or pieces of data of interest (third and fourth
columns), and the risk incurred by performing an explicit
search for the items of interest (ﬁfth column). In the sixth
column we give the bandwidth necessary to exﬁltrate all
data of that type, and in the seventh, the bandwidth nec-
essary to exﬁltrate only a speciﬁc item of interest. Note that
some of these examples are concerned with transient data
(e.g., network trafﬁc), which must be recorded by malware
present on the system as it arises, while others correspond
to static data which is stored on the host. In the case of static
data, the malware may immediately begin scanning for and
exﬁltrating data upon arrival and terminate upon comple-
tion, while malware seeking transient data must wait within
the system.
To retrieve the desired information, a malware author has
three options.
Return all
Exﬁltrate all data of that type.
Explicit search
Include keyword list or other search criteria, and only
return the relevant items.
Private search
Use PIR techniques to return the relevant items while
hiding the search criteria.
The return all strategy may be employed whenever a type
of data is small enough to be exﬁltrated in its entirety with-
out arousing suspicion or the malware author knows that
no system will be monitoring bandwidth. In this case, PIR
techniques are not necessary. Otherwise, the malware au-
thor will need to selectively return only items matching a
list of keywords or other criteria. If these keywords or crite-
ria do not reveal an unacceptable link with the source of the
malware or their intentions, the search may be performed
Information
desired
Data to
return
Data to
search
Search
query
System
passwords
Logged
keystrokes
Bank and
other online
account
credentials
User web
activity
Business
materials
Visual
snapshot
of user
activities
SIP / VoIP
conversations
(to and from
one phone)
Email
(to and from
one user)
HTTP POST
request
con-
tent
URL’s in
browser
history and
pages
in cache
Productivity
application
documents
(i.e., .doc,
.xls, etc.)
Screenshots
Speech
recording
Email headers
and body
Importance
of query
secrecy
Low
Low
Potentially
high
Bandwidth
for all data
of type
< 10 KB
per day
< 60 KB
per day [7]
100’s of MB
to multiple
GB1
10’s of MB
Bandwidth
for desired
data
10’s of
bytes per
password
< 3 KB
per post [7]
10’s of KB
per page
100’s of KB
per docu-
ment
≈100 KB
per screen-
shot
≈3 KB
per minute
10’s of KB
per docu-
ment
Utility of
PIR
Low: use
explicit search
or return all
Low: use
explicit search
or return all
High
High
High
High
High
Keystrokes,
window
titles and
content
Destination
URL
URL’s, web
page text
Trigger text in-
dicating pass-
word entry
List of
domains
(ﬁnancial, etc.)
List of
keywords
and URL’s
of interest
Document
content
Keywords
interest
of
Potentially
high
Keystrokes,
window
titles and
content
Name of
caller or
callee, text
from voice
recognition
Email
addresses,
email body
Trigger
text and
keywords of
interest
List of
names,
keywords of
interest
List of
addresses,
keywords of
interest
Potentially
high
100’s of MB
per day2
Likely high
≈100 MB
per day3
Likely high
100’s of KB
per day
Table 1. Example scenarios for the capture and exﬁltration of sensitive information by malware. The ﬁrst column lists a general type
of information a malware author or user may wish to obtain from a compromised machine. Columns 2 - 5 describe the speciﬁc pieces
of data to be retrieved and how the malware may search for them. Columns 6 and 7 estimate bandwidth necessary to exﬁltrate all data
of that type or only the pieces of interest, and the ﬁnal column suggests the resulting utility of PIR techniques. Bandwidths given are
rough estimations (to an order of magnitude) of typical usage, and compression is assumed where possible.
1By default, Internet Explorer sets the size of the web cache to 10% of the installed hard drive space, often causing unreasonably large caches. Other
browsers use more modest values.
2One screenshot every 2 to 10 seconds of user activity, with 3 to 7 hours of user activity per day.
3About 30 to 40 minutes per day of G.729 or G.723.1 encoded speech.
normally within the malware (explicit search), and PIR
techniques are again unnecessary. However, when exﬁltrat-
ing all data possibly of interest would consume a conspic-
uous amount of bandwidth and revealing the speciﬁc infor-
mation sought would be unacceptable, the private search
strategy becomes key to achieving the malware author’s
goals. We will now consider the bandwidth constraints of
malware authors and their motivation for hiding the infor-
mation they seek in order to determine when both these con-
ditions hold.
Available bandwidth. To date, malware authors have pri-
marily retrieved information from compromised machines
by directly forming new outgoing connections rather than
attempting to piggy back data on existing trafﬁc using net-
work covert channels. To help avoid detection, the trafﬁc
may be minimally disguised as legitimate, for example by
using port 80 and formatting the trafﬁc as an HTTP request.
Recently, a web proxy dubbed Web Tap that attempts
to detect automated outbound transmissions disguised as
browsing sessions was developed [7]. By recordings statis-
tics such as the timing and sizes of HTTP requests in le-
gitimate browsing sessions, Web Tap was able to detect a
number of spyware clients and backdoors that tunnel com-
munication in this manner. To avoid detection in the place
of similar monitoring techniques, the malware must time
trafﬁc to blend in with existing web browsing sessions and
throttle its bandwidth to be below alert thresholds. Both
of these techniques have been observed in the wild [8, 20].
During the development of Web Tap, detailed statistics on