### 8. DISCUSSION

#### 8.1 Responsible Disclosure
As discussed in Section 4, we have responsibly reported the OS design weaknesses to the corresponding vendors. While Microsoft and Apple dismissed our reports, Google has planned fixes for both Chrome OS and Android. The CAT profile issues discussed in Section 6 have also been disclosed to the affected TEIs. Some TEIs responded that they fixed the issues following our reports, while others stated they are discontinuing eduroam CAT and have removed the profiles entirely. Some acknowledged but dismissed the reported weaknesses, claiming the probability of exploitation is low. Others took our reports more seriously and engaged in further discussions with us and an engineer from eduroam.

A problem faced by some TEIs is that Chrome OS can only handle a set of names when matching subject alternative names, not subject names. However, these TEIs have multiple servers with subject names belonging to different third/second-level domains, leading them to use very permissive hostname constraints (e.g., a TLD) in their profiles. This contributes to the findings discussed in Sections 6.2 and 6.3, highlighting another example of poor OS designs compromising user security. We have relayed these deployment challenges back to the Chrome OS team, and they are now considering adding new parameters to their profile format to facilitate name checking.

For the suspected cases of key reuse (Section 7.2.3), we contacted the IAM vendors but received no responses. After 30 days, we then contacted the affected TEIs. Two schools acknowledged our findings and changed their keys and certificates following our reports. For the problematic configuration instructions (Section 5), we prepared sample instructions recommending good practices and shared them with the affected TEIs. To enhance the impact of our reports, we manually located the contact methods of the IT staff responsible for the instructions/profiles. Each report was tailored according to the security labels assigned to the instructions, including explanations of the issues and suggested fixes. We completed the disclosure process in early August 2021, contacting 1732 TEIs with insecure manual configuration instructions and receiving 48 acknowledgments a month later. Some TEIs have updated their instructions following our reports.

#### 8.2 Suggestions for Improving Security
Based on our results, we make the following suggestions for improving the security of WPA2-Enterprise:

1. **Use of Pre-configured Profiles**: Encourage the use of pre-configured profiles, as they tend to result in significantly higher quality configurations (see Section 6) and help prevent human errors from Wi-Fi users.
2. **OS Vendors' Design Revamp**: OS vendors need to revamp their designs of the Wi-Fi configuration UI. Insecure options should be made difficult to apply or even removed. Relying on human intervention (e.g., iOS and macOS) is generally a bad idea, and the design of Android 7+ has merits as it increases the chance of arriving at a secure configuration (see Section 5.2).
3. **Multi-factor Authentication**: To reduce the impact of ET attacks, TEIs should consider using multi-factor authentication to protect services that share SSO credentials with Wi-Fi, or use separate credentials for Wi-Fi.
4. **Simpler Server Authentication**: We question the benefits of using the X.509 PKI in WPA2-Enterprise. Wi-Fi does not require a scalable authentication solution like the X.509 PKI, which is known to be difficult to implement and deploy correctly. The current design seems to inherit all of the PKI's complexity and deployment challenges without apparent benefits. A simpler means of server authentication might be more effective, but this requires further exploration.

#### 8.3 Ethical Considerations
We took the following ethical considerations into account during our study:

1. **Manual Retrieval of Configuration Instructions**: We manually retrieved configuration instructions from TEIs without programmatic scraping of their websites, thus robots.txt does not apply.
2. **Redaction of TEI Names**: We redacted the names of TEIs in our results, as some of the weaknesses might still persist.
3. **TLS Parameter Collection**: When collecting TLS parameters from eduroam authentication servers, we did not complete the TLS handshakes and never attempted any actual user log-ins. For 223 out of the 3637 successfully probed eduroam domains, we used actual user email addresses collected from Google Scholar and IEEE Xplorer. We conclude that this use of email addresses is highly unlikely to cause harm based on the following considerations:
   - During eduroam authentication, phase-1 traffic is not encrypted, and the outer identity can be snooped by the host institute (if roaming) and eavesdroppers within range. Some schools encourage the use of anonymous outer identities because of this.
   - In an ideal world, our data collection should succeed with only anonymous identities. However, some servers perform a legitimacy check on the outer identity before proceeding to the TLS handshake. Thus, to increase coverage, we tried real email addresses in cases where generic accounts did not work.
   - Since the outer identity is an unauthenticated input, the account owners can repudiate ever initiating the phase-1 traffic when phase-2 authentication is unsuccessful, which is guaranteed by our aborted TLS handshakes. This should pose little to no risk to the corresponding users.
   - Over the data collection period, our probing only incurred infrequent, negligible traffic (a few partial TLS handshakes) to the TEIs' authentication servers, which should not disrupt their benign services.

### 9. RELATED WORK
Given its importance, implementations and deployments of TLS have undergone extensive scrutiny over the years [14, 15, 25, 27, 32, 37, 45, 53]. TLS typically relies on X.509 certificates for server authentication, which is itself tricky to implement and configure correctly [17, 19, 20, 35, 41, 58]. Various appliances intercept TLS for different reasons, though many have been found to compromise security due to the use of broken ciphers and improper validation of certificates [24, 26, 29, 29, 62]. Some of these results inspired the design of our measurement study presented in Sections 6 and 7. Although enterprise Wi-Fi has been shown to be vulnerable to different attacks under various settings [12, 13, 16, 18, 49, 60, 61], to the best of our knowledge, this is the most extensive measurement study to date covering different aspects of supplicant and server configurations, and the first to establish links between the misguided UI designs of mainstream OSs and poor supplicant configurations. Our results also suggest that awareness of the ET attack remains low among practitioners, despite years of academic research on the topic.

### 10. CONCLUSION
In this paper, we presented a multifaceted study of the WPA2-Enterprise ecosystem. We first proposed a framework for comparing the security of WPA2-Enterprise configurations. We then utilized this framework to evaluate the realizable configurations supported by the UIs of mainstream OSs and discovered many design weaknesses that can negatively impact security. Moreover, we conducted a large-scale evaluation of 7275 configuration instructions from 2061 TEIs and observed that 85.7% of TEIs were prone to credential thefts on at least one OS. We also analyzed 3593 eduroam CAT profiles and discovered additional configuration issues. Finally, we collected and evaluated the TLS parameters used by the authentication servers of 3637 eduroam domains, identifying numerous security issues, including the use of weak signature algorithms and suspected cases of key reuse. The results of our study show that the WPA2-Enterprise ecosystem has numerous security holes caused by poor supplicant and server configurations. Vendors, IT administrators, and users all need to do their part to fully realize the security promises of WPA2-Enterprise.

### ACKNOWLEDGMENTS
We thank the reviewers, especially our shepherd Frank Li, for their insightful comments and suggestions on how to improve this paper. We would also like to thank the engineers at eduroam, particularly Stefan Winter, for taking the time to discuss some of the problems found in CAT profiles and the deployment challenges faced by certain TEIs. This work was supported in part by the departmental startup budget NEW/SYC, GRF matching fund GRF/20/SYC, and Project Impact Enhancement Fund 3133292C from The Chinese University of Hong Kong (CUHK), as well as US Department of Defense (DARPA) Grant D19AP00039, and US National Science Foundation (NSF) grants CNS-2007512 and CNS-2006556. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the policies or endorsements of the funding agencies.

### REFERENCES
[References listed here as provided in the original text]

### APPENDIX A: ASSUMPTIONS AND CONSIDERATIONS OF OUR COMPARISON FRAMEWORK

#### A.1 Trust Anchors and Issuance Policies
To keep our framework concise, we do not enumerate the number of trust anchors, nor do we compare the trustworthiness of different CAs. We acknowledge that not all CAs follow the same set of issuance policies, and some CAs might be easier to compromise than others. The policies that a CA adheres to in its daily operations will significantly influence the actual security of configurations with Î² = Sp.. Certificate validation can be rendered pointless if the specified trust anchors contain a CA that will issue any certificates to arbitrary entities, including potential attackers. On the other extreme, if one unique CA is specified as the sole trust anchor, and this turns out to be a dedicated CA that will only sign the certificate used by the authentication server but nothing else, then even supposedly vulnerable configurations (the four of (_, Sp., N, _)) might turn out to be safe from the ET attack, as the attacker will be unable to obtain a workable certificate. This is why those 4 nodes are colored purple in Figure 1, denoting that the actual success of the attack depends on the policies and practices of the specified trust anchors. This consideration is particularly important for OSs that do not support server name checking (Î³ = N), as a dedicated CA could be the only means for achieving secure supplicant configurations.

#### A.2 Phase-2 Methods
When we rank (Î´ = Ob.) to be better than (Î´ = Cl.), we only make the distinction on whether the credentials are sent in cleartext, refraining from a fine-grained comparison of the security of possible obfuscation algorithms (e.g., different hash digests and ciphers). This approach keeps the framework from becoming unnecessarily complex, especially given that only a handful of phase-2 methods are actually deployed at the time of writing.

#### A.3 Usability
In Figure 1, nodes are ranked only in terms of security, not usability. For certificate validation, while programmatically rejecting invalid ones (Î± = P) might put less burden on the user, given the same set of trust anchors and a careful user, we assume that manual rejection (Î± = M) can achieve the same level of security.