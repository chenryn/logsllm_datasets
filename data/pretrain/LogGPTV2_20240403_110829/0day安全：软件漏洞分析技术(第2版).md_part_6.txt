等重要信息，其至还会自动为您标
注出完整的栈帧！
图1.3.1OllyDbg调试界面简介
写，即实体电路模拟器，简单说来就是用于截获CPU所有动作的一种设备。通常要做到彻底
监视CPU的所有动作是需要硬件设施的，但SoftuICE用软件方式实现了这一功能。不夸张地说，
如果您懂得怎么用它，您就可以crack任何软件，甚至是操作系统。
易用性在很大程度上受到了OllyDbg的挑战。比如很多人喜欢听着音乐工作，但媒体播放器进
程一样会被SoftICE中断。此外，由于SoftICE能够调试和修改很底层的东西，在使用过程中
死机、蓝屏也是家常便饭。即便如此，还是有众多资深的调试员忠实地支持着SoftICE。
依以往的经验，如果调试ring3级的用户态进程，我们所推荐的首选调试器还是
OllyDbg，方便也安全：但若调试ring0，命令就命令吧，反正想要调试内核的人都不是刚
刚入行的菜鸟。
在CompuwareNuMega公司把SoftlCE打包进“CompuwareSoftlCEDriverSuite”驱动开
发套件之前，安装SoftICE并不是一件容易的事情，因为总是存在一些兼容性的问题，例如，
鼠标异常、断点异常、显卡驱动不匹配导致显示不正常等。另外，有许多文献资料都建议在
Windows2000上安装SofulCE。
当CompuwareSoftICEDriverSuite驱动套件出现后，SoftICE的安装问题似乎就变成了历
史性话题。我们可以轻松地在WindowsXP上安装并设置SofiCE。我目前使用的就是
CompuwareSoftlCEDriverSuiteRelease2.7。
12
---
## Page 38
第
题外话：SoftICE被呼出时会独占CPU，中断一切进程和消息。例如，随着调试的进
1
行，您会发现Windows桌面右下角的时间开始出现偏差，因为时钟也被中断了。由于
章
Windows的截图热键“printscreen”和其他的截图软件都会被中断，如果不用虚拟机，
要获得一张SoftICE的运行截图着实要花一番工夫。甚至在一些文献中有人用数码相
基
础
机拍下SofulCE运行界面。
知
图1.3.2是安装好后默认的SoftICE界面，包括了常用的寄存器信息、反汇编信息和命令执
识
行情况等。
TSL-2
图1.3.2SoftICE调试界面
默认的SoftICE界面很小，字体和显示行数看起来都不是很舒服，通常需要进一步设置才
能顺手地使用。SoftICE有一套设置窗口属性的命令用来自定义工作界面。
从开始菜单中找到“CompuwareSoftICEDriverSuite”下SoftICE的“Settings”，打开后如
图1.3.3所示。
DriverStudio Configuration on faihwest
本
Control Pene
SofuCEse
在这里输入界
ntalbato
面设置命令
Symed
Expots
Network.Debugoing
SerlalDet
uogng
Hkory bulfrse ()
Keyboard Mapongt
56
TroubleShe
[ scug copw
Advanced
2048
SoRUCE
udoplandna
rapN
广Lo
suppot
OK
Aoply
图1.3.3SoftICE配置界面
选择“General”，可以看到在默认安装的情况下，SoftICE的初始化命令只有一条：X。
在“Initialization”编辑框中输入如下命令：
Faultsoff;setfont2:1ines44;data 3;dd;dex3ss:esp;data0;wc20;
codeon;X;
13
---
## Page 39
0
day
这样，调试界面就变得比较顺眼了。这串初始化命令的含义如表1-3-2所示。
安全
表1-3-2初始化命令的含义
：
令
解释
软件漏
Faults off
关闭错误提示。SoftICE在加载进程时总是会发出一些错误警告
set font 2
设置2号字体。SofICE有3种字体，默认情况为小号字，2号字体为中号字
Lines 44
Lines命令用于设置界面显示的行数，显示范围是25~128，这里总共显示44行
洞
分析技
data 3
打开3号窗口
Dd
按照DWORD显示数据
dex 3 ss:esp
在3号窗口中显示栈信息
术
data 0
设置0号窗口（命令输入窗口）为当前窗口
wc 20
代码窗口占20行
Code on
显示机器代码
2
X
显示调试界面
版
在调试时，首先选择从开始菜单中通过“StartSoftICE”启动批处理文件“ntice.bat”，运行
SofulCE，然后通过开始菜单中的“SymbolLoader”启动装载界面，选择要装载运行的PE文件，
最后单击“装载运行”按钮，运行程序，如图1.3.4所示。
SottCE Symbol Loader -[crack_me.exe]
TyPe
bolstor
装载程序
32
32bt
32 bt
图1.3.4用SoftICE加载进程
程序运行起来后，用快捷键Ctrl+D即可激活SoftICE，调出调试界面。
SoftICE的调试命令非常多，这里作为入门性介绍，只给出几个最常用的命令让您上手。
（1）基础调试命令（如表1-3-3所示）
---
## Page 40
第
表1-3-3基础调试命令
1
功
能
令
解释
或者F8
stepinto.单步执行，遇到函数进入执行
单步执行
基
p或者F10
stepover，单步执行，遇到函数不跟入
础
pret或者F12
stepout，执行到当前函数结束
知
如不跟地址，将把控制权交还进程持续执行：如跟地址。
识
执行到指定位置go
g[地址]
则执行到指定地址所在的指令后停下
bl
列出当前所有断点（breakpoint list）
激活断点，其中，断点ID可以是多个，用空格或逗号隔
be [断点ID1*]
开，如果用“*"，则激活所有断点（breakpoint enable）
断点命令
bd [断点 ID 1 *]
禁用断点，参数同上.（breakpointdisable）
bc [断点 ID1*]
清除断点，参数同上（breakpointclear）
bpx[地址l函数名]
为指定的地址或API函数下断点
bpm[数据类型】地
内存断点。数据类型可以是b字节、w字（双字节）、d
址】访问类型]
双字（四字节）：访问类型可以是r只读、w写、rw读写
（2）信息查看与编辑命令（如表1-3-4所示）
表1-3-4信息查看与编辑命令
功能
命令
说明
db[地址]
按照字节模式显示内存数据（displaybyte）
dw [地址]
按照字（双字节）模式显示内存数据（displayword）
数据显示
(Display)
PP
按照双字（四字节）模式显示内存数据（displaydword）
ds
按短整型模式显示内存数据（displayshort）
dl
按长整型模式显示内存数据（displaylong）
eb[地址】[数据]
按字节模式将数据写入内存任意地址（editbyte）
数据编辑
ew[地址][数据]
按字模式将数据写入内存任意地址（editword）
(Edit)
ed[地址数据]
按双字模式将数据写入内存任意地址（editdword）
es[地址][数据]
按短整型模式将数据写入内存任意地址（editshort）
el[地址][数据]
按长整型模式将数据写入内存任意地址（editlong）
栈帧显示
stack
显示当前找帧信息
编辑寄存
r[寄存器名][值]
修改或查看寄存器的值，如lreax0
反汇编
u[地址]
对指定地址的二进制进行反汇编并显示
命令虽然比较多，但实际上只要知道bp是下断点，d是显示数据（display），e是修改数
据（edit），再记住三个单步的快捷键，以及用快捷键Curl+D在操作系统和SoftICE之间切换控
制权，您就可以上手进行最简单的跟踪和调试了。
如果想深入学习，您可以在看雪学院（http://www.pediy.com/）找到SoftICE的命令手册和
使用教程。
15
---
## Page 41
0
day
1.3.3WinDbg简介
安
全
个人感觉，WinDbg的风格介于OllyDbg和SoftICE之间，是一款比较“温和”的调试器，
：
其调试界面如图1.3.5所示。它可以调试内核，但却不像SoftICE那么暴力，总是中断操作系统：
软
它保留了一部分VisualStudio中常用的快捷按钮，也保留了和SofICE一样丰富的调试命令。从
件漏
功能上讲，它可以设置异常复杂的断点条件逻辑，在这一点上丝毫不比SofuCE和OllyDbg逊色。
从WinDbg功能界面上那些熟悉的调试快捷按钮上很容易找到VisualStudio6.0的影子。比
洞
分析
起OllyDbg绚丽的GUI界面，一些初学者不喜欢它稍显干的界面和繁多的调试命令。然而由
技
矩矩”的程序员。
术
WinDbg的主要功能都是靠调试命令来完成的，而且这些命令很大程度上和SoftICE所使
（第
用的调试命令类似。这里给出一些最常用的命令。这些命令大多是英文单词的缩写，所以结合
2
单词的含义更容易被掌握。
版
C:rgrnF
0
7e901256
c90
D
0
05
02
49
d5
89
电1
L
Bop
ed1.ed1
c64.
0025"
1012tb2
121c94
20200000-112
e901230
int
：00
图1.3.5WinDbg调试界面
调试功能的命令如表1-3-5所示。
表1-3-5调试功能的命令
功
能
命令
说
明
t或者F11
单步，遇到函数跟进（stepinto）
单步调试
P或者F10
单步，遇到函数跳过（stepover）
Shift + F11
跳出当前函数（stepout）
16
---
## Page 42
第
续表
1
功能
命令
说
明
章
g[地址涡数名]
持续执行到指定位置的指令
执行到指定位置
基
(Go)
gh[地址：函数名]
持续执行时，如果遇到异常则中断
础
gn[地址l函数名]
持续执行时，即使遇到异常也忽略
知
列出已设置的断点。显示结果中，第一列为断点的ID：第二列为断
识
bl
点当前状态，‘e'表示断点处于活动状态（enable），‘d”表示断点暂
时被禁用：第三列为断点的位置（breakpointlist）
be[断点 ID]
激活断点（breakpointenable）
断点功能
bd[断点ID]
禁用断点（breakpointdisable）
(Break Point)
bc[断点ID]
清除断点（break point clear）
设置断点。如不指定地址，则在当前指令上下断点。注意，这里介
bp[地址:函数名]
绍的是最基础的断点方式，WinDbg中可以结合地址、函数名、消息
等各种条件设置很复杂的断点。此外，bu、bm等命令也可设置断点
信息显示与编辑功能如表1-3-6所示。
表1-3-6信息显示与编辑功能
功
能
命
令
显示内存数据。默认情况下按照字节和ASCI显示，即等同于DB命令。
d[地址]
如果修改了显示模式，再次使用时则与最后一次数据显示命令所使用的显
示模式相同
db[地址]
按照字节模式显示内存数据（displaybyte）
dd[地址]
按照双字模式显示内存数据（displaydword）
dD
按双精度浮点数的模式显示内存数据。注意这条命令和前面一条命令是
数据显示
区别大小写的（displayDoubleFloat）
da
按ASClI模式显示（displayASCII）
(Display)
du
按Unicode模式显示（displayUnicode）
按字符串模式显示。注意，在没有‘Vo’作为字符中结束时，不要轻易
ds
用这条命令打印内存，否则WinDbg会将遇到的第一个NULL前的东西都
打印出来（displayString）
套用已知的数据结构模板（structure）显示内存。这个命令很有用，例
p
如，在调试堆时可以直接用这个命令把内存按照堆表的格式显示出来。关