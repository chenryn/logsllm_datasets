two random bits b1, b2 ∈U {0, 1}, sets mex = F(mb2
(mex) and sends σ = (mex, σex) to D. Then, D answers a bit b00
σex = ExSignKS
to UD. Finally, UD answers a bit b0 = b1⊕b2⊕b00 (If D aborts, we pick a random
b00.) to its challenger. It remains to compute the probability of success of UD.
To this end, we compute Pr[b0 = b] = Pr[b0 = b ∧ b2 = b] + Pr[b0 = b ∧ b2 6= b].
We also have
Pr[b0 = b ∧ b2 6= b] = Pr[b00 = b ⊕ b2 ⊕ b1 ∧ b2 6= b] = Pr[b00 = ¬b1|b2 6= b] · 1
2 .
When b2 6= b then (mb2
un, σun) is uniformly distributed and independent from b1,
hence b00 is independent from b1. Thus, Pr[b0 = b ∧ b2 6= b] = 1/4. Finally, since
Pr[b0 = b ∧ b2 = b] = (1/2 + ε) Pr[b2 = b] = 1/2(1/2 + ε) we get Pr[b0 = b] =
ut
1/2 + ε/2.
un, m1
s
10
The scheme Sign does not satisfy the stronger adaptive invisibility notion
deﬁned in [3]. Namely, after having received the challenged signature σ, D could
deduce the two pairs (m0
un) which would correspond to m0 and
m1. Then, D generates a signature σ0 on another message m0 by using (m0
un)
and queries the pair (m0, σ0) to the conﬁrmation and denial oracle. Depending
on the answer, D deduces whether (m0
un) is valid or not. From this, we see
that D wins the invisibility game under an adaptive attack.
un), (m1
un, σ1
un, σ0
un, σ0
un, σ0
The fundamental problem relies on the fact that the attacker can always
retrieve the corresponding pair (mun, σun) (as any veriﬁer) from a message-
signature pair with respect to Sign. He can then sign a new message m0 by
reusing the pair (mun, σun) and query the obtained pair to the Conﬁrm or Deny
oracle. Assuming that the veriﬁer has to retrieve (mun, σun), the only way to
thwart such an attack is to make sure that the attacker cannot generate a new
signature with another message m0 with the same pair (mun, σun). This seems
to imply that (mun, σun) has to depend on m. Moreover, the veriﬁer should not
be able to verify how (mun, σun) was generated since it would trivially break the
invisibility. This leads us to believe that the signer has to encrypt an element
with the secret conﬁrmer key such as in the scheme proposed in [3]. Obviously,
the above discussion motivates the fact that we should strongly modify the gen-
eralized Chaum’s scheme, in particular the conﬁrmation (resp. denial) protocol
cannot be achieved only with UnConﬁrm (resp. UnDeny).
5.3 Other Security Properties
The other security properties of our scheme are easier to prove, namely the
completeness of the conﬁrmation resp. denial protocol is straightforward. The
other properties such as the soundness are inherited from the undeniable sig-
nature scheme. The non-transferability is also inherited. The non-coercibility
is obtained if the signer deleted intermediate computations from UnForge. In
this case, the invisibility of the undeniable signature scheme applies. Note that
receipt-freeness is not guaranteed.
6 A Practical Example
s ,KC
p. Then, (KC
Here, we propose a practical realization of the presented construction quite sim-
ilar to that of Chaum [6]. First, we consider the Chaum’s undeniable signature
scheme [5] for UnSign. Let p be a prime integer of 1024 bits and g be a public
generator of Z∗
p−1. We
recall that Chaum’s undeniable signature of a message mun ∈ Z∗
un mod p.
Hence, UnForge can be implemented by picking a random element r ∈ Zp−1 and
outputting the pair (mun, σun) := (gr mod p, hr mod p). The random function F
applied on (mun, σun) can be implemented by computing an AES with a ﬁxed key
in a kind of CBC mode on mun||σun by B(mun||σun) = (x0|| . . .||x15) where xi ∈
{0, 1}128 and C(x0|| . . .||x15) = (x16|| . . .||x31) with xi = AES(xi−16) ⊕ xi−1.
p ) = (c, gc mod p) := (c, h) for a c ∈U Z∗
p is mc
11
Note that we must choose p close enough to 21024. The hash function h can be in-
stantiated with SHA-1 by h(m) = trunc2048(SHA-1(1||m)|| . . .||SHA-1(13||m)),
where trunc2048 outputs the 2048 most signiﬁcant bits of the input. The group
operation ﬂ can be replaced by the XOR operation ⊕ on the set {0, 1}2048. We
ﬁnally take the plain DSA scheme for ExSign. Let q1 be a prime integer close
to 22048, a large prime number q2 = aq1 + 1 and a generator of Z∗
q2 whose a-th
power is denoted as gq. Then, (KS
q1. Then,
k mod q1 for a random
σex = (r, s), where r = (gk
k ∈U Z∗
q1.
q mod q2) mod q1 and s = mex+xr
q mod q2) for x ∈U Z∗
p ) = (x, gx
s ,KS
7 On Feasibility Results based on Cryptographic
Primitives
7.1 Discussion
This subsection provides a discussion on the relevance of the primitives used
in the generalized Chaum’s designated conﬁrmer signature scheme. Namely, we
would like to explain why this construction is possible although a previous re-
sult of Okamoto [19] seems at the ﬁrst glance to provide strong evidence of its
impossibility.
The study of relations between the cryptographic primitives always played
a central role in cryptography. In particular, it allows to clarify the kind of
primitives required to achieve the security of a given construction. Examples of
well-known basic primitives are one-way function, trapdoor one-way function, or
trapdoor predicates which were introduced by Goldwasser and Micali [10]. Here,
we will focus on two classes of equivalent primitives, that of one-way functions
and that of trapdoor predicates. These two classes contain respectively two ma-
jor cryptographic primitives, namely the digital signatures resp. the public-key
encryption. Rompel [24] proved that one-way functions are equivalent to signa-
tures and Goldwasser and Micali [10] showed the equivalence between trapdoor
predicates and public-key encryption. Since then, several cryptographic primi-
tives have been shown to belong to one of these classes, e.g. undeniable signatures
exist if and only if digital signatures exist [1].
Soon after their invention, designated conﬁrmer signatures were proved to
belong in the public-key encryption class [19]. This showed that despite of their
similarities to undeniable signatures these two primitives are not equivalent.
Separation between these two classes was proved by Impagliazzo et al. [13] in
the black-box case, i.e., when the primitives are considered as black-box. This is
quite relevant since almost all reductions considered in cryptography are black-
box. Hence, this shows that the construction of a designated conﬁrmer signature
requires a primitive equivalent to the public-key encryption.
Our proposed construction seems only to be based on primitives belonging
to the digital signatures class. Actually, this comes from an insuﬃcient precise
way to characterize cryptographic primitives. For instance, when we talk about
a digital signature scheme, we mean a signature which is resistant to existen-
tial forgery under an adaptive chosen-message attack. Similarly an undeniable
12
signature is meant to be implicitly secure in terms of existential forgery attacks
and signatures invisibility. In this generalized Chaum’s scheme, we have consid-
ered a special kind of undeniable signature which is existentially forgeable but
remains invisible under a lunchtime known-message attack. In the next subsec-
tion, we prove that the existence of such a primitive indeed implies the existence
of a public-key encryption semantically secure under a chosen-plaintext attack
(IND-CPA). So we prove that undeniable signatures may belong to two diﬀerent
classes depending on the security properties we require. Paradoxically, although
this kind of undeniable signature satisﬁes weaker security properties than usual,
it belongs to a stronger class namely that of public-key encryption. Intuitively,
this can be explained by the fact that it seems more diﬃcult for an existen-
tially forgeable undeniable signature to remain invisible than for an undeniable
signature which is resistant to existential forgery attacks.
7.2 UnSign and Public-Key Encryption
We explain here how we can construct an IND-CPA public-key cryptosystem
from the existentially forgeable undeniable signature scheme UnSign. We recall
that UnSign is assumed to satisfy invisibility under a lunchtime known-message
attack (this was required to prove that Sign is invisible under a lunchtime chosen-
message attack). For the sake of simplicity, this cryptosystem will encrypt only
one bit at a time. We denote the encryption scheme PKE. It is composed of
three polynomial time algorithms which are the key generator KGen, the encryp-
tion algorithm Enc, and the decryption algorithm Dec. The scheme is inspired
from [19].
KGen The key generator KGen generates a pair of key (pk, sk) by calling the key
generator of UnSign. It computes (KC
p ,KC
s ) ← SetupC(1k) from the security
parameter k and sets (pk, sk) := (KC
p ,KC
s ).
Enc Let b ∈ {0, 1} a bit to encrypt. If b = 0, we call the probabilistic algo-
rithm UnForge to generate a valid pair (mun, σun) ← UnForge(KC
p ). The
pair (mun, σun) is set to be the ciphertext of b. If b = 1, we pick a pair
(mun, σun) ∈U Mun × Σun uniformly at random. The pair (mun, σun) is the
ciphertext of b in this case.
Dec Let (mun, σun) be a ciphertext. Using the secret key sk = KC
s , it suﬃces
to simulate UnConﬁrm or UnDeny to determine whether this pair is valid or
not. If the pair is valid the decrypted ciphertext is 0, else it is 1.
We prove here that PKE is IND-CPA secure provided that UnSign is invisible
under a lunchtime known-message attack. Assume the existence of an adversary
A which wins in an IND-CPA game against PKE with a non-negligible advantage
ε. Consider an adversary B which takes advantage of A in order to break the
invisibility of UnSign under a lunchtime known-message attack.
At the beginning of the invisibility game, B receives a challenged pair of key
(KC
p ,KC
s ) and playing the role of the challenger in the IND-CPA game forwards
the same key pair to A. After a given time, A will trivially send two bits 0, 1
13
to B. After a lunchtime, B will receive two challenged messages m0
un with
un, σun) to A. Note that this
a signature σun. B sends the challenged pair (m0
challenge is perfectly simulated except when σun is a valid signature to both m0
un
and m1
un. Such an event occurs with a probability ν. Otherwise, the probability
un, σun) to be a valid message-signature pair is exactly 1/2. Then, A
for (m0
answers a bit b. This bit b is also the answer of B to its challenger. Thus, the
advantage ε0 of B satisﬁes ε0 ≥ ε − ν.
un, m1
8 Conclusion
We revisited the designated conﬁrmer signature scheme of Chaum and extended
this one in a natural way in a generic scheme which transforms an undeniable
signature scheme into a designated conﬁrmer signature scheme. In the random
oracle model, we proved that this construction is resistant against existential
forgery under an adaptive chosen-message attack in which the attacker is the
conﬁrmer. It satisﬁes invisibility in the non-adaptive scenario in which the at-
tacker is the signer. Our results trivially apply to the original Chaum scheme.
Selective convertibility can also be included in this construction. As far as we
know this construction is the only one which is based on a generic undeniable sig-
nature scheme and which is proven existentially unforgeable against an attacker
having the conﬁrmer’s secret key. Finally, we proved that an existentially un-
forgeable undeniable signature which is invisible under a known-message attack
scheme lies in the class of cryptographic primitives equivalent to the public-key
encryption.
References
1. J. Boyar, D. Chaum, I. Damg˚ard, and T. Pedersen, Convertible Undeniable Sig-
natures, Advances in Cryptology - Crypto ’90, LNCS 537, pp. 189–205, Springer,
1991.
2. G. Brassard, D. Chaum, and C. Cr´epeau, Minimum Disclosure Proofs of Knowl-
edge, Journal of Computer and System Sciences, vol. 37 (2), pp. 156-189, 1988.
3. J. Camenisch and M. Michels, Conﬁrmer Signature Schemes Secure against Adap-
tive Adversaries, Advances in Cryptology - Eurocrypt ’00, LNCS 1807, pp. 243-
258, Springer, 2000.
4. J. Camenisch and V. Shoup, Practical Veriﬁable Encryption and Decryption of
Discrete Logarithms, Advances in Cryptology - Crypto ’03, LNCS 2729, pp. 126-
144, Springer, 2003.
5. D. Chaum, Zero-Knowledge Undeniable Signatures, Advances in Cryptology - Eu-
rocrypt ’90, LNCS 473, pp. 458-464, Springer, 1990.
6. D. Chaum, Designated Conﬁrmer Signatures, Advances in Cryptology - Euro-
crypt ’94, LNCS 950, pp. 86-91, Springer, 1995.
7. D. Chaum and H. van Antwerpen, Undeniable Signatures, Advances in Cryptology
- Crypto ’89, LNCS 435, pp. 212-217, Springer, 1989.
8. S. Galbraith and W. Mao, Invisibility and Anonymity of Undeniable and Conﬁrmer
Signatures, CT-RSA 2003, LNCS 2612, pp. 80-97, Springer, 2003.
14
9. R. Gennaro, T. Rabin, and H. Krawczyk, RSA-Based Undeniable Signatures, Jour-
nal of Cryptology, vol. 13 (4), pp. 397-416, Springer, 2000.
10. S. Goldwasser and S. Micali, Probabilistic encryption, Journal of Computer and
System Sciences, vol. 28 (2), pp. 270-299, 1984.
11. S. Goldwasser, S. Micali, and R. Rivest, A Digital Signature Scheme Secure Against
Adaptive Chosen-Message Attacks, SIAM Journal on Computing, vol. 17 (2),
pp. 281-308, 1988.
12. S. Goldwasser and E. Waisbard, Transformation of Digital Signature Schemes into
Designated Conﬁrmer Signatures Schemes, TCC ’04, LNCS 2951, pp. 77-100,
Springer, 2004.
13. R. Impagliazzo and S. Rudich, Limits on the Provable Consequences of One-way
Permutations, 21st Annual ACM Symposium on Theory of Computing, pp. 44-61,
ACM Press, 1989.
14. M. Jakobsson, K. Sako, and R. Impagliazzo, Designated Veriﬁer Proofs and Their
Applications, Advances in Cryptology - Eurocrypt ’96, LNCS 1070, pp. 143-154,
Springer, 1996.
15. B. Libert and J.-J. Quisquater, Identity Based Undeniable Signatures, CT-RSA ’04,
LNCS 2964, pp. 112-125, Springer, 2004.
16. M. Michels and M. Stadler, Generic Constructions for Secure and Eﬃcient Con-
ﬁrmer Signatures Schemes, Advances in Cryptology - Eurocrypt ’98, LNCS 1403,
pp. 406-421, Springer, 1998.
17. J. Monnerat and S. Vaudenay, Undeniable Signatures Based on Characters,
PKC ’04, LNCS 2947, pp. 69-85, Springer, 2004.
18. J. Monnerat and S. Vaudenay, Generic Homomorphic Undeniable Signatures, Ad-
vances in Cryptology - Asiacrypt ’04, LNCS 3329, pp. 354-371, Springer, 2004.
19. T. Okamoto, Designated Conﬁrmer Signatures and Public-key Encryption are
Equivalent, Advances in Cryptology - Crypto ’94, LNCS 839, pp. 61-74, Springer,
1994.
20. T. Okamoto and D. Pointcheval, The Gap-Problems: A New Class of Problems
for the Security of Cryptographic Schemes, PKC ’01, LNCS 1992, pp. 104-118,
Springer, 2001.
21. D. H. Phan and D. Pointcheval, Chosen-Ciphertext Security without Redundancy,
Advances in Cryptology - Asiacrypt ’03, LNCS 2894, pp. 1-18, Springer, 2003.
22. D. Pointcheval and J. Stern, Security Arguments for Digital Signatures and Blind
Signatures, Journal of Cryptology, vol. 13 (3), pp. 361-396, 2000.
23. R. Rivest, A. Shamir, and A. Tauman, How to Leak a Secret, Advances in Cryp-
tology - Asiacrypt ’01, LNCS 2248, pp. 552-565, Springer, 2001.
24. J. Rompel, One-Way Functions are Necessary and Suﬃcient for Secure Signatures,
22nd Annual ACM Symposium on Theory of Computing, pp. 387-394, ACM Press,
1990.
25. K. Sakurai and S. Miyazaki, An Anonymous Electronic Bidding Protocol Based on
a New Convertible Group Signature Scheme, ACISP ’00, LNCS 1841, pp. 385-399,
Springer, 2000.
26. V. Shoup, Sequences of Games: a Tool for Taming Complexity in Security Proofs,
Cryptology ePrint Archive, Report 2004/332, http://eprint.iacr.org/, 2004.
15