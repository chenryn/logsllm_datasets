ü  代码复制:进⼊入同⼀一⽬目的地的不不同路路径(由虚拟化混淆器器使⽤用)。 
DEF"CON"CHINA"1.0"(2019)"
31"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
ü  间接控制 1: 调⽤用指令 à栈指针更更新 à 返回跳过⼀一些垃圾代码
后的调⽤用指令 (RET x). 
ü  间接控制 2: 恶意软件引发异常 à调⽤用已注册的异常 à 新的指
令分支。 
ü  隐含谓词:虽然显然存在⼀一个求值(条件跳转:jz/jnz)，但结果总
是被求值为true(或false)，这意味着⽆无条件跳转。这样，就有了了
死跳转。 
ü  反调试: 使⽤用复杂的技术使分析变慢. 
ü  多态性:它由⾃自修改代码(如shell代码)和加密资源(类似于⼤大多数
恶意软件样本)生成。 
DEF"CON"CHINA"1.0"(2019)"
32"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
ü  调⽤用堆栈处理理: 通过使⽤用由ret指令组成的指令技巧更更改堆栈
流，从而隐藏真实的ret。 
ü  是否有可能消除虚拟化指令的混淆?是的，可以使用反向递归
替换(类似于Metasm中的回溯特性，但不相等)。 
ü  此外，符号⽅方程系统是另一种很好的方法。（Metasm和
MIASM!) 
ü  有很多很好的插件，比如Code Unvirtualizer、VMAttack、
VMSweeper等等，它们可以⽤用来处理理简单的虚拟化问题。 
ü  使⽤用简单⽽而有效的隐写术概念作为替换盒(s - box)，指令虚拟
化器器的⼀一些改进已经出现。 
DEF"CON"CHINA"1.0"(2019)"
33"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
ü  该技术⽤用于隐藏程序的
实际控制流。 
ü  ⼀一般来说，其思想是通
过删除if语句句和循环来
中断控制流，在⼀一系列列
开关⽤用例例语句句中转换
流. 
ü  因此，有一个分发器器将
控制流交给处理理程序，
每个处理理程序将更更新指
令指针，使之指向下⼀一
个要执⾏行行的处理理程序的
值(虚拟化流控制)。 
ü  通常有一个调⽤用存根，
它完成从本机指令到虚
拟化指令的转换。 
ü  代码流图扁平化:  
ü  这种⽅方法提出了了两
个反向问题:从CISC
到RISC指令的映射
和从VM将原始寄
存器器转换为专⽤用寄
存器器。 
ü  因为要权衡利利弊，
CFG只适用于特定
的功能 
DEF"CON"CHINA"1.0"(2019)"
34"
#include  
int main (void)  
{ 
 int aborges = 0; 
 while (aborges <  30) 
 { 
 printf(“%d\n”, aborges); 
 aborges++; 
 } 
 return 0; 
} 
Loading libs 
aborges = 0 
aborges < 30 
 printf( ) 
aborges++ 
return 0 
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
35"
cc = 1 
cc != 0 
switch(cc) 
aborges < 
30 
cc = 0 
cc = 3 
break 
aborges = 0 
cc = 2  
break 
printf 
aborges++ 
break 
cc = 2 
loading libs 
cc!=!1!
cc!=!2!
cc!=!3!
v  缺点: 
ü  损失的性能 
ü  容易易识别CFG的扁平化 
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
36"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
原始程序 
DEF"CON"CHINA"1.0"(2019)"
37"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
ü  用于代码模糊处理理的obfusator -llvm是⼀一个⾮非常好的项⽬目。为了了安装它建议
先添加⼀一个交换⽂文件(因为链接阶段): 
ü  fallocate -l 8GB /swapfile 
ü  chmod 600 /swapfile 
ü  mkswap /swapfile 
ü  swapon /swapfile 
ü  swapon --show 
ü  apt-get install llvm-4.0 
ü  apt-get install gcc-multilib (install gcc lib support to 32 bit) 
ü  git clone -b llvm-4.0 https://github.com/obfuscator-llvm/obfuscator.git 
ü  mkdir build ; cd build/ 
ü  cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_INCLUDE_TESTS=OFF ../
obfuscator/ 
ü  make -j7 
ü  可能会⽤用到： 
ü  ./build/bin/clang alexborges.c -o alexborges -mllvm -fla 
ü  ./build/bin/clang alexborges.c -m32 -o alexborges -mllvm -fla 
ü  ./build/bin/clang alexborges.c -o alexborges -mllvm -fla -mllvm -sub 
DEF"CON"CHINA"1.0"(2019)"
38"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
主要调度程序 
序言和初始任务 
DEF"CON"CHINA"1.0"(2019)"
39"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
程序的主要块 
DEF"CON"CHINA"1.0"(2019)"
40"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
模糊代码的概述 
DEF"CON"CHINA"1.0"(2019)"
41"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
42"
.text:00401000 loc_401000:                      
 ; CODE XREF: _main+Fp 
.text:00401000                 
 push     ebp 
.text:00401001                 
 mov      ebp, esp 
.text:00401003                 
 xor      eax, eax 
.text:00401005                 
 jz      
 short near ptr loc_40100D+1 
.text:00401007                
 jnz      near ptr loc_40100D+4 
.text:0040100D 
.text:0040100D loc_40100D:                    ; CODE XREF: .text:00401005j 
.text:0040100D                                         ; .text:00401007j 
.text:0040100D                 
 jmp     near ptr 0D0A8837h 
简单隐含谓词和反汇编技术 
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
43"
解密 
shellcode 
Decryption 
instructions J 
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
44"
00401040
 call + $5 
00401045
 pop ecx
00401046
 inc ecx 
00401047
 inc ecx 
00401048
 add ecx, 4 
00401049
 add ecx, 4   
0040104A
 push ecx 
0040104B
 ret 
0040104C
 sub ecx, 6 
0040104D  
 dec ecx 
0040104E
 dec ecx 
0040104F
 jmp 0x401320 
v 调⽤用堆栈操作:  
ü  你知道这⾥里里发⽣生了了什什
么吗?   J 
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
"METASM 
DEF"CON"CHINA"1.0"(2019)"
45"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
DEF"CON"CHINA"1.0"(2019)"
46"
ALEXANDRE"BORGES"–"MALWARE"AND"SECURITY"RESEARCHER"
sub!eax,!B9!
add!eax,ecx!
add!eax,!B9!
sub!eax,!B9!
sub!eax,!86!
add!eax,ecx!
add!eax,!86!
push!edx!
mov!edx,!42!
inc!edx!
dec!edx!
add!edx,!77!
add!eax,!edx!
pop!edx!
push!ebx!
mov!ebx,!B9!
sub!eax,!ebx!
pop!ebx!
sub!eax,!55!
sub!eax,!32!
add!eax,!ecx!
add!eax,!50!
add!eax,!37!
push!edx!
push!ecx!
mov!ecx,!49!
mov!edx,!ecx!
pop!ecx!
inc!edx!
add!edx,!70!