# 0x01 前言
如需进行技术交流或有渗透测试、代码审计、SRC漏洞挖掘、红队方向综合培训、红蓝对抗评估、安全产品研发及安全服务需求的朋友，欢迎通过QQ/VX：547006660与我联系。您也可以访问我的GitHub主页：[https://github.com/J0o1ey/BountyHunterInChina](https://github.com/J0o1ey/BountyHunterInChina) 并为“重生之我是赏金猎人”系列项目点个star。

# 0x02 缘起
某日清晨，在浏览微信聊天群时，偶然发现了一个新上线的SRC（Security Response Center）。通常情况下，这类新平台的安全防护措施尚未完善，因此更容易找到潜在的安全问题。本文将记录我对该SRC的一次探索过程。

# 0x03 资产搜集到默认密钥被更改 —— 山穷水尽
首先，利用目标网站证书信息对网络空间中的相关资产进行了初步收集。在这一过程中注意到，该组织使用了一种以短横线分隔命名法来区分不同环境下的域名（例如开发、测试和生产），这种做法在大型企业中较为常见。
- 开发环境: dev
- 测试环境: test, uat, pr
- 生产前准备: pre
- 正式环境: pro

之后尝试访问一个疑似管理API接口的子域名，并基于页面返回的信息推测其背后运行的是Apache APISIX网关服务。鉴于过去曾复现过利用APISIX默认密钥添加恶意路由从而实现远程代码执行（RCE）的案例，于是决定在此处进行尝试。遗憾的是，由于目标已修改了默认密钥设置，使得直接利用此方法无法奏效。

# 0x04 理顺思路 - 发现隐藏的测试环境资产
尽管初次尝试未果，但我们并未放弃。考虑到之前观察到的域名命名规律，我们可以通过模糊测试工具FFUF进一步探索可能存在的其他非生产环境资产。
```bash
./ffuf -w domain_test -u https://gateway-xxx-xxx-FUZZ.xxx.com -mc 404 -t 1
```
最终成功识别出了四个未公开的测试子域。

# 0x05 测试环境中默认密钥引发的RCE
接下来，在这四个新发现的测试环境中尝试使用默认密钥创建恶意Lua脚本路由，结果均告成功。由此证明这些测试系统确实存在严重的安全风险。考虑到它们很可能运行于Kubernetes集群之上且采用了未经更新的老版本镜像，运维人员也未能及时调整配置，导致了此次远程代码执行漏洞的发生。

# 0x06 技术总结
本次案例展示了如何结合目标域名命名规则有效识别并利用隐藏的开发/测试环境资源；同时也提醒我们在日常工作中需要注意保持敏感信息的安全性以及定期更新软件版本的重要性。

Written by J0o1ey: 547006660