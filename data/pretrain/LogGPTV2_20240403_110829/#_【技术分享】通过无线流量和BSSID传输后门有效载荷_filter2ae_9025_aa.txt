# 【技术分享】通过无线流量和BSSID传输后门有效载荷
|
##### 译文声明
本文是翻译文章，文章来源：peerlyst.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
翻译：[金乌实验室](http://bobao.360.cn/member/contribute?uid=2818394007)
稿费：200RMB（不服你也来投稿啊！）
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**前言**
在这篇文章中，我想聊一聊无线AP和BSSID（AP的MAC地址）。我们的后门有效载荷没有进行文件系统加密和硬编码，因此我们可以利用这种方法绕过杀毒软件。我们的Meterpreter
有效载荷在网络流量中传输。
在这种情况下，攻击者可以通过篡改BSSID（环路更改，伪造AP）和逐步将后门有效载荷注入到BSSID（伪造的AP的MAC地址）发动攻击。在客户端，被感染的系统（后门系统）可以通过在AIR上扫描AP的MAC地址（BSSID）来转储这些有效载荷，不需要通过user-pass连接到伪造的AP。通过Wifi设备传输有效载荷，例如wlan（无线流量）也在我的讨论范围之内。在AIR上扫描BSSID
转储有效载荷后，Meterpreter会话通过Ethernet Network建立（没有Wifi 或者无线设备）。
恶意软件代码或简单的后门代码可以利用WIFI设备传输或者转储有效载荷，例如Wlan，最后你将得到有简单C＃代码的 meterpreter 会话。
在这篇文章中，我使用Wifi设备仅仅是传输有效载荷（步骤1），通过扫描Wifi设备MAC地址（BSSID）
转储这些有效载荷，然后我的后门将通过eth0或Ethernet卡建立Meterpreter
会话，因此在这个阶段（步骤2），我们使用网络流量来建立Meterpreter 会话，不使用WIFI设备，。
注意：如果你想只通过WIFI设备来完成步骤1和步骤2，我认为技术上是可行的，但是我自己没有测试过。在步骤2中你可能会需要用到EvilTwin
AP，还需要使Meterpreter Listener在伪造的AP网络子网中有一个IP地址，你可以使用MANA-Toolkit来完成这个操作。
链接：
**这个方法的重点是什么**
重点是：恶意软件或后门有效载荷注入到WiFi设备的BSSID，以及通过无线流量传输是可能的。
**从伪造的AP扫描注入的有效载荷到BSSID，步骤如下**
例如我们要传输以下的有效载荷：
    “fec8b00011ddc00945f1”
**步骤1：** 攻击者系统将伪造的AP命名为“Fake”，MAC地址为00：fe：c8：b0：00：11
注意：Mac地址00：fe：c8：b0：00：11是注入的有效载荷，所以我们的有效载荷是“fec8b00011”,是有效载荷“fec8b00011ddc00945f1”的前半部分。
**步骤2：** 后门系统扫描Essid“Fake”并转储BSSID
注意：你的后门代码应该转储这部分的BSSID或Mac地址fe：c8：b0：00：11 ==> fec8b00011
**步骤3：** 攻击者系统将伪造的AP命名为“Fake”，Mac地址是00：dd：c0：09：45：f1
注意：Mac地址00：dd：c0：09：45：f1是注入的有效载荷，所以我们的有效载荷是“ddc00945f1”，是有效载荷
“fec8b00011ddc00945f1”的后半部分。
**步骤4：** 后门系统扫描Essid“Fake”并转储BSSID
注意：你的后门代码应该转储这部分的BSSID或Mac地址dd：c0：09：45：f1 ==> ddc00945f1
这2步扫描之后，在被感染的系统（后门系统）中你将会得到有效载荷 fec8b00011ddc00945f1。
现在你了解了这种方法的工作原理，接下来我将通过在linux端的命令向你展示（步骤1和步骤3）更多的信息。下面我将通过命令伪造AP。
**可选命令：** 在创建Wlan0mon之前更改WiFi卡的TXPower，这些命令可以帮助你更好的伪造AP信号，以便你可以手动操作此命令。
    ifconfig wlan0 down
    iw reg set BO
    ifconfig wlan0 up
    iwconfig wlan0 txpower 30
注意：这些命令在通过airmon-ng创建Wlan0Mon之前就该使用，这些命令是可选的，不是必需的。
**使用WLAN卡的监控模式是伪造AP的重要步骤**
你可以使用命令“airmon-ng start wlan0”为Wlan0创建“Wlan0Mon”监控模式。
注意：你可以手动运行此命令，或者可以在script1.sh文件中使用此命令，如步骤（cmd 1-1）。在本文中，我在攻击者端手动运行此命令。
**步骤1：** 攻击者系统将伪造的AP命名为“Fake”，MAC地址为00：fe：c8：b0：00：11。
注意：Mac地址00：fe：c8：b0：00：11是注入的有效载荷，所以我们的有效载荷是“fec8b00011”
cmd 1-1：airmon-ng start wlan0
注意：创建Wlan0Mon（监控模式）
cmd 1-2：airbase-ng -a 00：fe：c8：b0：00：11 -essid“Fake”-I 10 -0 wlan0mon
注意：你需要15秒伪造AP，15秒后你可以通过killall命令在cmd 1-2终止这个命令。
cmd 1-3：sleep 15
cmd 1-4：killall airbase-ng
**步骤3：** 攻击者系统将伪造的AP命名为“Fake”，MAC地址为00：dd：c0：09：45：f1
注意：Mac地址00：dd：c0：09：45：f1是注入的有效载荷，所以我们的有效载荷是“ddc00945f1”
cmd 3-1：airbase-ng -a 00：dd：c0：09：45：f1 -essid“Fake”-I 10 -0 wlan0mon
注意：你需要15秒伪造AP，15秒后你可以通过killall命令在cmd 3-1终止这个命令。cmd 3-2：sleep 15
cmd 3-3：killall airbase-ng
你可以看到在实施这些步骤的时候，我们需要使用以上命令，但是我在airbase-ng命令上遇到了大问题。
**问题以及解决方案**
问题出现在步骤（cmd 1-2）到（cmd 1-3）。
在步骤（cmd 1-2）之后，只有通过ctrl + c或kill能终止airbaseng命令，所以我的bash脚本总是停在步骤（cmd
1-2），直到我终止了进程。
针对这个问题，我的解决方案是使用2 个bash脚本文件：
第一个bash脚本文件是 “Script1.sh”， 使用于步骤（cmd 1-2和cmd 3-1）
注意：你可以在bash脚本的第一行中添加步骤（cmd 1-1）或手动执行。在本文中，我手动执行cmd 1-1。
第二个bash脚本是 “Script2.sh”，使用于步骤（cmd 1-3 & cmd 1-4 & cmd 3-2 & cmd 3-3）
所以在这种情况下，我们应该首先运行bash脚本“Script1.sh”，然后立即或2-3秒后运行bash脚本“Script2.sh”。
我们得到以下的文件：
Script1.sh文件：
    ＃！/ bin / bash
    airbase-ng -a 00：fe：c8：b0：00：11 -essid“Fake”-I 10 -0 wlan0mon;
    airbase-ng -a 00：dd：c0：09：45：f1 -essid“Fake”-I 10 -0 wlan0mon;
    Script2.sh文件：
    #!/bin/bash
    sleep 15 ;
    killall airbase-ng ;