    - [luaL_checkinteger](#lual_checkinteger)
    - [luaL_checklstring](#lual_checklstring)
    - [luaL_checknumber](#lual_checknumber)
    - [luaL_checkoption](#lual_checkoption)
    - [luaL_checkstack](#lual_checkstack)
    - [luaL_checkstring](#lual_checkstring)
    - [luaL_checktype](#lual_checktype)
    - [luaL_checkudata](#lual_checkudata)
    - [luaL_checkversion](#lual_checkversion)
    - [luaL_dofile](#lual_dofile)
    - [luaL_dostring](#lual_dostring)
    - [luaL_error](#lual_error)
    - [luaL_execresult](#lual_execresult)
    - [luaL_fileresult](#lual_fileresult)
    - [luaL_getmetafield](#lual_getmetafield)
    - [luaL_getmetatable](#lual_getmetatable)
    - [luaL_getsubtable](#lual_getsubtable)
    - [luaL_gsub](#lual_gsub)
    - [luaL_len](#lual_len)
    - [luaL_loadbuffer](#lual_loadbuffer)
    - [luaL_loadbufferx](#lual_loadbufferx)
    - [luaL_loadfile](#lual_loadfile)
    - [luaL_loadfilex](#lual_loadfilex)
    - [luaL_loadstring](#lual_loadstring)
    - [luaL_newlib](#lual_newlib)
    - [luaL_newlibtable](#lual_newlibtable)
    - [luaL_newmetatable](#lual_newmetatable)
    - [luaL_newstate](#lual_newstate)
    - [luaL_openlibs](#lual_openlibs)
    - [luaL_optinteger](#lual_optinteger)
    - [luaL_optlstring](#lual_optlstring)
    - [luaL_optnumber](#lual_optnumber)
    - [luaL_optstring](#lual_optstring)
    - [luaL_prepbuffer](#lual_prepbuffer)
    - [luaL_prepbuffsize](#lual_prepbuffsize)
    - [luaL_pushresult](#lual_pushresult)
    - [luaL_pushresultsize](#lual_pushresultsize)
    - [luaL_ref](#lual_ref)
    - [luaL_Reg](#lual_reg)
    - [luaL_requiref](#lual_requiref)
    - [luaL_setfuncs](#lual_setfuncs)
    - [luaL_setmetatable](#lual_setmetatable)
    - [luaL_Stream](#lual_stream)
    - [luaL_testudata](#lual_testudata)
    - [luaL_tolstring](#lual_tolstring)
    - [luaL_traceback](#lual_traceback)
    - [luaL_typename](#lual_typename)
    - [luaL_unref](#lual_unref)
    - [luaL_where](#lual_where)
- [标准库](#标准库)
  - [基础函数](#基础函数)
    - [assert](#assert)
    - [collectgarbage](#collectgarbage)
    - [dofile](#dofile)
    - [error](#error)
    - [_G](#_g)
    - [ipairs](#ipairs)
    - [load](#load)
    - [loadfile](#loadfile)
    - [next](#next)
    - [pairs](#pairs)
    - [pcall](#pcall)
    - [print](#print)
    - [rawequal](#rawequal)
    - [rawget](#rawget)
    - [rawlen](#rawlen)
    - [rawset](#rawset)
    - [select](#select)
    - [setmetatable](#setmetatable)
    - [tonumber](#tonumber)
    - [tostring](#tostring)
    - [type](#type)
    - [_VERSION](#_version)
    - [xpcall](#xpcall)
  - [协程管理](#协程管理)
    - [coroutine.create](#coroutinecreate)
    - [coroutine.isyieldable](#coroutineisyieldable)
    - [coroutine.resume](#coroutineresume)
    - [coroutine.running](#coroutinerunning)
    - [coroutine.status](#coroutinestatus)
    - [coroutine.wrap](#coroutinewrap)
    - [coroutine.yield](#coroutineyield)
  - [模块](#模块)
    - [require](#require)
    - [package.config](#packageconfig)
    - [package.cpath](#packagecpath)
    - [package.loaded](#packageloaded)
    - [package.loadlib](#packageloadlib)
    - [package.path](#packagepath)
    - [package.preload](#packagepreload)
    - [package.searchers](#packagesearchers)
    - [package.searchpath](#packagesearchpath)
  - [字符串处理](#字符串处理)
    - [string.byte](#stringbyte)
    - [string.char](#stringchar)
    - [string.dump](#stringdump)
    - [string.find](#stringfind)
    - [string.format](#stringformat)
    - [string.gmatch](#stringgmatch)
    - [string.gsub](#stringgsub)
    - [匹配模式](#匹配模式)
    - [打包和解包用到的格式串](#打包和解包用到的格式串)
  - [UTF-8 支持](#utf-8-支持)
    - [utf8.char](#utf8char)
    - [utf8.codes](#utf8codes)
    - [utf8.codepoint](#utf8codepoint)
    - [utf8.len](#utf8len)
    - [utf8.offset](#utf8offset)
  - [表处理](#表处理)
    - [table.concat](#tableconcat)
    - [table.insert](#tableinsert)
    - [table.move](#tablemove)
    - [table.pack](#tablepack)
    - [table.remove](#tableremove)
    - [table.sort](#tablesort)
    - [table.unpack](#tableunpack)
  - [数学函数](#数学函数)
    - [math.abs](#mathabs)
    - [math.acos](#mathacos)
    - [math.asin](#mathasin)
    - [math.atan](#mathatan)
    - [math.ceil](#mathceil)
    - [math.cos](#mathcos)
    - [math.deg](#mathdeg)
    - [math.exp](#mathexp)
    - [math.floor](#mathfloor)
    - [math.fmod](#mathfmod)
    - [math.huge](#mathhuge)
    - [math.log](#mathlog)
    - [math.max](#mathmax)
    - [math.maxinteger](#mathmaxinteger)
    - [math.min](#mathmin)
    - [math.mininteger](#mathmininteger)
    - [math.modf](#mathmodf)
    - [math.pi](#mathpi)
    - [math.rad](#mathrad)
    - [math.random](#mathrandom)
    - [math.randomseed](#mathrandomseed)
    - [math.sin](#mathsin)
    - [math.sqrt](#mathsqrt)
    - [math.tan](#mathtan)
    - [math.tointeger](#mathtointeger)
    - [math.type](#mathtype)
    - [math.ult](#mathult)
  - [输入输出库](#输入输出库)
    - [io.close](#ioclose)
    - [io.flush](#ioflush)
    - [io.input](#ioinput)
    - [io.lines](#iolines)
    - [io.open](#ioopen)
    - [io.output](#iooutput)
    - [io.popen](#iopopen)
    - [io.read](#ioread)
    - [io.tmpfile](#iotmpfile)
    - [io.type](#iotype)
    - [io.write](#iowrite)
    - [file:close](#fileclose)
    - [file:flush](#fileflush)
    - [file:lines](#filelines)
    - [file:read](#fileread)
    - [file:seek](#fileseek)
    - [file:setvbuf](#filesetvbuf)
    - [file:write](#filewrite)
  - [操作系统库](#操作系统库)
    - [os.clock](#osclock)
    - [os.date](#osdate)
    - [os.difftime](#osdifftime)
    - [os.execute](#osexecute)
    - [os.exit](#osexit)
    - [os.getenv](#osgetenv)
    - [os.remove](#osremove)
    - [os.rename](#osrename)
    - [os.setlocale](#ossetlocale)
    - [os.time](#ostime)
    - [os.tmpname](#ostmpname)
  - [调试库](#调试库)
    - [debug.debug](#debugdebug)
    - [debug.gethook](#debuggethook)
    - [debug.getinfo](#debuggetinfo)
    - [debug.getlocal](#debuggetlocal)
    - [debug.getmetatable](#debuggetmetatable)
    - [debug.getregistry](#debuggetregistry)
    - [debug.getupvalue](#debuggetupvalue)
    - [debug.getuservalue](#debuggetuservalue)
    - [debug.sethook](#debugsethook)
    - [debug.setlocal](#debugsetlocal)
    - [debug.setmetatable](#debugsetmetatable)
    - [debug.setupvalue](#debugsetupvalue)
    - [debug.setuservalue](#debugsetuservalue)
    - [debug.traceback](#debugtraceback)
    - [debug.upvalueid](#debugupvalueid)
    - [debug.upvaluejoin](#debugupvaluejoin)
- [独立版 Lua](#独立版-lua)
- [与之前版本不兼容的地方](#与之前版本不兼容的地方)
  - [语言的变更](#语言的变更)
  - [库的变更](#库的变更)
  - [API 的变更](#api-的变更)
- [Lua 的完整语法](#lua-的完整语法)
# 基本概念
本章描述了语言的基本概念。
## 值与类型
`Lua` 是一门动态类型语言。 这意味着变量没有类型；只有值才有类型。 语言中不设类型定义。 所有的值携带自己的类型。  
`Lua` 中所有的值都是 一等公民。 这意味着所有的值均可保存在变量中、 当作参数传递给其它函数、以及作为返回值。  
`Lua` 中有八种基本类型： `nil`、`boolean`、`number`、`string`、`function`、`userdata`、 `thread` 和 `table`。 `Nil` 是值 `nil` 的类型， 其主要特征就是和其它值区别开；通常用来表示一个有意义的值不存在时的状态。 `Boolean` 是 `false` 与 `true` 两个值的类型。 `nil` 和 `false` 都会导致条件判断为假； 而其它任何值都表示为真。 `Number` 代表了整数和实数（浮点数）。 `String` 表示一个不可变的字节序列。   
`Lua` 对 8 位是友好的： 字符串可以容纳任意 8 位值， 其中包含零 `('\0')` 。   
`Lua` 的字符串与编码无关； 它不关心字符串中具体内容。  
`number` 类型有两种内部表现方式， 整数 和 浮点数。 对于何时使用哪种内部形式，`Lua` 有明确的规则， 但它也按需（参见 §3.4.3）作自动转换。 因此，程序员多数情况下可以选择忽略整数与浮点数之间的差异或者假设完全控制每个数字的内部表现方式。 标准 `Lua` 使用 64 位整数和双精度（64 位）浮点数， 但你也可以把 `Lua` 编译成使用 32 位整数和单精度（32 位）浮点数。 以 32 位表示数字对小型机器以及嵌入式系统特别合适。 （参见 `luaconf.h` 文件中的宏 `LUA_32BITS` 。）  
`Lua` 可以调用（以及操作）用 `Lua` 或 C （参见 §3.4.10）编写的函数。 这两种函数有统一类型 function。  
userdata 类型允许将 C 中的数据保存在 `Lua` 变量中。 用户数据类型的值是一个内存块， 有两种用户数据： 完全用户数据 ，指一块由 `Lua` 管理的内存对应的对象； 轻量用户数据 ，则指一个简单的 C 指针。 用户数据在 `Lua` 中除了赋值与相等性判断之外没有其他预定义的操作。 通过使用 元表 ，程序员可以给完全用户数据定义一系列的操作 （参见 [元表及元方法](#元表及元方法)）。 你只能通过 C API 而无法在 `Lua` 代码中创建或者修改用户数据的值， 这保证了数据仅被宿主程序所控制。
thread 类型表示了一个独立的执行序列，被用于实现协程 （参见 §2.6）。 `Lua` 的线程与操作系统的线程毫无关系。 `Lua` 为所有的系统，包括那些不支持原生线程的系统，提供了协程支持。
table 是一个关联数组， 也就是说，这个数组不仅仅以数字做索引，除了 nil 和 NaN 之外的所有 `Lua` 值 都可以做索引。 （Not a Number 是一个特殊的数字，它用于表示未定义或表示不了的运算结果，比如 0/0。） 表可以是 异构 的； 也就是说，表内可以包含任何类型的值（ nil 除外）。 任何键的值若为 nil 就不会被记入表结构内部。 换言之，对于表内不存在的键，都对应着值 nil 。
表是 `Lua` 中唯一的数据结构， 它可被用于表示普通数组、序列、符号表、集合、记录、图、树等等。 对于记录，`Lua` 使用域名作为索引。 语言提供了 `a.name` 这样的语法糖来替代 `a["name"]` 这种写法以方便记录这种结构的使用。 在 `Lua` 中有多种便利的方式创建表（参见 §3.4.9）。
我们使用 序列 这个术语来表示一个用 `{1..n}` 的正整数集做索引的表。 这里的非负整数 n 被称为该序列的长度（参见 §3.4.7）。