### Optimized Text

Messages sent every 20 milliseconds from different ECUs showed a near-zero correlation. According to the Birthday Paradox, some ECUs in the vehicle may have nearly equivalent clock skews, as observed for messages 0x20 and 0x2C1 in a 2010 Toyota Camry (see Fig. 5(c)). Although clock skews can be similar, the instantaneous clock offsets of two different ECUs cannot be equivalent and are thus uncorrelated, as they run different processes. The results in Fig. 9(b) support this by showing that the clock offsets of messages 0x20 and 0xB2, which were sent by the same ECU, had a high correlation of 0.9860, while the offsets of messages 0x20 and 0x2C1, sent by different ECUs with similar clock skews, had a low correlation of 0.0331. Therefore, for messages with near-equivalent clock skews, CIDS can further examine the correlation between their clock offsets to correctly determine their transmitters. These observations indicate the feasibility and efficiency of message-pairwise detection in CIDS.

To demonstrate that message-pairwise detection can support per-message detection in reducing false positives and negatives by examining offset correlations, we consider a scenario where an attacker V1 mounts a masquerade attack on a Honda Accord ECU V2 at \( t_{\text{masq}} = 800 \) seconds. We refer to V2 as the ECU that originally transmits message 0x1B0. To simulate the worst-case scenario for detecting the masquerade attack, we assume that the clock skews of V1 and V2 are nearly equivalent, similar to messages 0x20 and 0x2C1 in the Toyota Camry. We replicated this worst-case scenario by randomly permuting the acquired offset values of 0x1B0 for \( t > t_{\text{masq}} \) and considering the permuted values as output from V1. As shown in Fig. 10(a), this leads to a situation where the clock skew does not change even though the message transmitter has been altered. Although the clock skew remained equivalent at \( t = t_{\text{masq}} \), the correlation between the offsets of 0x1B0 and 0x1D0 suddenly dropped from 0.9533 to 0.1201, indicating a shift from a linear to a non-linear relationship. Consequently, as shown in Fig. 10(b), the control limits in CIDS's message-pairwise detection exceeded the threshold \( \Gamma_L = 5 \). In contrast, per-message detection was unable to detect the intrusion due to the equivalent clock skews before and after the attack.

### False Alarm Rate

We also evaluated the false alarm rate of CIDS under real vehicle conditions. Results from the CAN bus prototype are omitted due to their insignificance, as few false alarms occurred due to its less complex bus traffic. Based on data recorded for 30 minutes from a 2013 Honda Accord—approximately 2.25 million messages on the CAN bus—four attack datasets were constructed, each containing 300 different intrusions. These intrusions included various injection timings, suspension timings, or changes in clock skews, in the form of fabrication attacks, suspension attacks, mistimed masquerade attacks, and timed masquerade attacks. For each dataset, we varied the \( \kappa \) parameter of CIDS to obtain one false positive rate (false-alarm rate) and one false negative rate (1 - detection rate).

Fig. 11(a) shows the Receiver Operating Characteristic (ROC) curve of CIDS, representing the trade-off between false alarms and detection, using only per-message detection on the attack datasets. CIDS is shown to detect fabrication, suspension, and masquerade attacks with a high probability. The timed masquerade attack, being the most difficult to detect, showed the highest false positive rate among all attack scenarios: a false positive rate of 0.055% while maintaining 100% true positives. Even for false positives < 0.055%, CIDS detected 97% of the anomalies. However, these false positives can be a significant concern for in-vehicle networks. To eliminate such false positives, CIDS can additionally run message-pairwise detection. Fig. 11(b) shows the ROC curve of CIDS, executing both per-message and message-pairwise detection for further verification. This approach allowed CIDS to detect all types of attacks without any false positives, in contrast to CIDS with only per-message detection.

### Discussion

Below, we discuss the overhead, deployment, limitations, and applications of CIDS.

#### Identification Algorithm
To estimate clock skew, other algorithms such as Total Least Squares (TLS) and Damped Least Squares (DLS) can be used, which perform orthogonal linear and non-linear regression, respectively. Although these methods might identify clock skew with higher accuracy than Recursive Least Squares (RLS), their computational complexity is significantly higher. TLS requires Singular Value Decomposition (SVD), which is computationally expensive, and DLS requires a large number of iterations for curve fitting. RLS has a computational complexity of \( O(N^2) \) per iteration, where \( N \) is the size of the data matrix. However, in CIDS, only a scalar clock offset is used for identification, making the computational complexity relatively low.

#### Defeating CIDS
An adversary may attempt to defeat CIDS by compromising the ECU running CIDS and disabling it. However, if cross-validation is employed, such attempts can be mitigated. For intrusion detection, CIDS only requires an ECU to record the timestamps of message arrivals, which is a low overhead. This makes it feasible to install CIDS distributively across several in-vehicle ECUs for cross-validation. For example, if ECU A monitors attacks on messages {M1, M2}, ECU B monitors {M2, M3}, and ECU C monitors {M1, M3}, CIDS provides multiple perspectives of clock behaviors for each message ID. Thus, even if an ECU running CIDS is compromised, cross-validation via CIDS can handle the problem.

Another way an adversary might try to defeat CIDS is by adapting to how its algorithm runs and deceiving it. The adversary might determine the clock skew of the target ECU and then heat up or cool down the compromised ECU to match the clock skew of the target. In such a case, the clock skew can be matched, potentially bypassing CIDS's per-message detection. However, as discussed in Section 5.4, unless the adversary also matches the instantaneous clock offset, which is affected by the ECU's momentary workload and temperature, CIDS can detect the intrusion via message-pairwise detection.

#### Upon Intrusion Detection
False alarms in intrusion detection systems, especially in in-vehicle networks, are critical. Therefore, CIDS should handle them accurately. If an intrusion is detected, even after the verification process, CIDS can follow these steps for further examination:
1. If an intrusion is detected using only per-message detection, examine it further via message-pairwise detection.
2. If still alarmed as an intrusion and the attacked ECU is safety-critical, proceed to step 4.
3. If not, communicate with other ECUs for cross-validation to provide different perspectives of the clock skew results. If communicating with other ECUs incurs too much overhead, send traffic data for remote diagnosis.
4. Request re-patching of firmware and advise the driver to stop the vehicle.

#### Limitation of CIDS
CIDS is effective in detecting various types of in-vehicle network intrusions. One limitation is that it can only extract clock skews from periodic messages, making it difficult to fingerprint ECUs sending aperiodic messages. If an attacker injects messages aperiodically, although CIDS can still detect the intrusion, it cannot pinpoint the source of the attack. Future work aims to find new features other than clock skew to fingerprint ECUs, regardless of whether they send messages periodically or aperiodically.

#### Applicability to Other In-Vehicle Networks
Although most modern in-vehicle networks are based on CAN, some may use other protocols like CAN-FD, TTCAN, and FlexRay for more complex operations. CAN-FD, an enhanced version of CAN, provides flexible and higher data rates [5]. Since its basic components conform to CAN and lack synchronization, CIDS can be applied to CAN-FD. For protocols like TTCAN [21] and FlexRay [22], nodes are periodically synchronized for deterministic timing of message exchanges. The interval between consecutive synchronizations depends on the protocol's deployment [32]. For TTCAN, it can be up to \( 2^{16} = 65536 \) bits long, i.e., 131ms in a 500Kbps bus [37]. This allows some messages to be sent multiple times between consecutive synchronizations. If the time interval is long, CIDS can still extract clock skews from messages sent multiple times. However, if the period is short, CIDS may not be feasible. Given the high implementation cost of TTCAN and FlexRay, and the minimal cost of CAN-FD, CAN-FD is a favorite candidate for next-generation in-vehicle networks [6, 39]. This means CIDS can be applicable to both current and future in-vehicle networks.

### Conclusion
New security breaches in vehicles have made vehicle security a critical issue. To defend against vehicle attacks, several security mechanisms have been proposed. While these can cope with some attacks, they cannot cover other safety-critical attacks, such as masquerade attacks. To address this, we propose CIDS, which extracts clock skews from message intervals, fingerprints the transmitter ECUs, and models their clock behaviors using RLS. CIDS then detects intrusions via CUSUM analysis. Based on experiments on a CAN bus prototype and real vehicles, CIDS is shown to be capable of detecting various types of in-vehicle network intrusions. CIDS can address all attacks that existing IDSs can and cannot handle, and facilitates root-cause analysis, enhancing vehicle security and safety.

### Acknowledgments
We would like to thank the anonymous reviewers and the shepherd, Tadayoshi Kohno, for their constructive suggestions. This work was supported in part by the NSF/Intel Grant CNS-1505785 and the DGIST Global Research Laboratory Program through NRF funded by MSIP of Korea (2013K1A1A2A02078326).

### References
[References remain unchanged]