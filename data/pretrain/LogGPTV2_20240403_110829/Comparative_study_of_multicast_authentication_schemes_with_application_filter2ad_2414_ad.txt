(S1, . . . , St)
Si ← wg, vi ← H wg (si), ∀i ∈ {1, . . . , t}
c ← 0
repeat
Signing(M , s1, s2, . . . , st):
(h1, h2, . . . , hg) ← Splitg(H (M (cid:5)c))
(i1, . . . , in1 ) ← Splitn1 (h1)
(in1+1, . . . , in1+n2 ) ← Splitn2 (h2)
·· ·
(ik−ng +1, . . . , ik) ← Splitng (hg)
i1, . . . , ik are distinct then
Sij
Sij
· ··
Sij
return (c, H Si1 (si1 ), . . . , H Sik (sik ))
− 1, ∀j ∈ {1, . . . , n1}
− 2, ∀j ∈ {n1 + 1, . . . , n1 + n2}
− g, ∀j ∈ {k − ng + 1, . . . , k}
← Sij
← Sij
← Sij
end if
c ← c + 1
end repeat
Veriﬁcation(M , c, σ1, σ2, . . . , σk):
(h1, h2, . . . , hg) ← Splitg(H (M (cid:5)c))
(i1, . . . , in1 ) ← Splitn1 (h1)
(in1 +1, . . . , in1+n2 ) ← Splitn2 (h2)
· ··
(ik−ng +1, . . . , ik) ← Splitng (hg)
293Public key 
for epoch 1
s1,0
s1,1
s2,0
s3,0
s2,1
s3,1
Private key 
for epoch 1
s1,2
s2,2
s3,2
s1,3
s2,3
s3,3
s1,4
s2,4
s3,4
...
...
...
Private key 
for epoch j
s1,wgj
s1,wgj+1
s2,wgj
s3,wgj
s2,wgj+1
s3,wgj+1
...
...
...
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
st,0
st,1
st,2
st,3
st,4
...
st,wgj
st,wgj+1
...
Figure 4: TSV+ with uniform chain traversal, and
k = g = w = 2, n1 = n2 = 1, so wg = 4 (see Algorithm 4
for deﬁnition of symbols). In this example, suppose
corresponding to the ﬁrst message M 1, H (M 1 (cid:9)c1) =
1(cid:9)2, so the ﬁrst signature is (H 4−1(s1,4), H 4−2(s2,4)) =
(s1,1, s2,2). Suppose corresponding to the second mes-
sage M 2, H (M 2 (cid:9)c2) = 2(cid:9)3, so the second signature is
(H 2−1(s2,4), H 4−2(s3,4)) = (s2,3, s3,2).
(a)
Present signature element 
s1,x somewhere here
Last received signature 
element somewhere here
s1,wg(j-d-2)
...
s1,wg(j-d-1)
...
s1,wg(j-1)
...
s1,wgj
Dpast
Dpres
(b)
Last received signature 
element somewhere here
Present signature element 
s1,x somewhere here
s1,wg(j-1)
...
...
s1,wgj
Dpres
Figure 5: Two cases to be considered for the deriva-
tion of Cv for TSV+.
The probability of ﬁnding an acceptable c is correctly
g
i=1 ni!) [15]. Using the same rea-
(cid:2)
= k!
/(tk
t
k
given by PS
soning for (5),
(cid:3)
(cid:2)
(cid:18)
#
(cid:16)
(cid:17)(cid:19)
Lσ =
log2
log1−PS
+ 2
+ k lH ,

PS
−4. After
where  is a small user-deﬁned constant, e.g., 10
ﬁnding c, the signer invokes H at a multiplicity that depends
on the state tuple (S1, . . . , St) at the last line of Algorithm 4
– we need to calculate the expected value of this multiplicity.
Let Ag1,g2,...,gi denote the event that a one-way chain is
used for i out of r signatures in an epoch, and for the i
signatures, the one-way chain belongs to groups g1, g2, . . . , gi
respectively. Event Ag1,g2,...,gi occurs at a probability of
(cid:6)
(cid:7)(cid:16)
r
i
(cid:17)
i
(cid:16)
1 − k
t
k
t
(cid:17)
r−i ng1 ng2 ···n gi
,
ki
during which the expected number of hash invocations is
(wg − g1) + (wg − g1 − g2) + · ·· + (wg − g1 − g2 − ··· − gi)
r
(cid:6)
(cid:16)
Since there are t one-way chains,
1 − k
t
r(cid:4)
Cσ =
(cid:17)
1
PS
+ t
(cid:7)(cid:16)
i
(cid:17)
k
t
r
i
(wg − g1) + ··· + (wg − g1 − g2 − ··· −g i)
gi=1
g1=1
···
.
r
i=1
ng1 · ·· ngi
ki
g(cid:4)
r−i
g(cid:4)
(15)
For the case n1 = n2 = ··· = ng = k/g, (15) can be simpli-
ﬁed as
(cid:6)
(cid:7)(cid:16)
r(cid:4)
i=1
Cσ =
1
PS
+
t
r
i
r
i
(cid:17)
r−i ···
(cid:17)
k
t
i
(cid:17)
(cid:16)
1 − k
(cid:25)(cid:16)
t
w − i + 1
(cid:16)
4
k − kr
− 1
2
4t
g − i + 1
(cid:17)
4
(cid:26)
=
1
PS
+ kwg + k(g + 1)
.
(16)
(15) can be further simpliﬁed when k/t and r are small. In
this case, the probability that a one-way chain is used more
than once in an epoch is negligible. In an epoch, a one-way
chain is chosen at a probability of k/t, and when chosen, it
belongs to one of g groups. The probability of the one-way
chain belonging to group i is given by ni/k (i = 1, . . . , g).
Therefore,
(cid:17)
g(cid:4)
i=1
1 − k
t
· 0 +
(wg − i)
k
t
ni
k
(cid:9)
(cid:5)(cid:16)
g(cid:4)
+ t
+
i=1
Cσ =
=
1
PS
1
PS
ni(wg − i).
(17)
Deriving Cv is more involved. Suppose the present signa-
ture element s1,x, which without loss of generality, falls on
the ﬁrst one-way chain. If s1,x belongs to the ﬁrst signature
in an arbitrary epoch j, then by deﬁnition, the last received
signature element on the same one-way chain must be from
a past epoch. The expected “distance” between s1,x and the
last received signature element (see Fig. 5(a)) is the sum of
• Dpast
(cid:2)
= the expected distance between the last re-
ceived signature element and s1,wg(j−1); and
• Dpres
s1,x.
(cid:2)
= the expected distance between s1,wg(j−1) and
So when s1,x belongs to a ﬁrst signature, which occurs at a
probability of 1/r, the distance is Dpast + Dpres.
Now, suppose s1,x belongs to the second signature in epoch
j. The last received signature element on the same one-way
chain can either be
1. from a past epoch, at a probability of q
2. from the current epoch, at a probability of 1 − q.
(cid:2)
= 1 − k/t; or
For the ﬁrst case, we showed that the expected distance is
Dpast + Dpres, whereas for the second case, the expected
distance is Dpres (see Fig. 5(b)). So when s1,x belongs to a
second signature, which occurs at a probability of 1/r, the
expected distance is (Dpast + Dpres)q + Dpres(1 − q).
Applying the reasoning above to the cases that s1,x be-
longs to the third signature, the fourth signature and so on,
.
294captured signature elements of groups i, i + 1, . . . , g (i =
1, . . . , g). Hence, Gg has rng elements, Gg−1 has r(ng−1 +
ng) elements, and so on. An attacker successfully forges
a signature if he/she is able to ensure the forged group-g
signature elements lie on any ng one-way chains from the
set Gg; the forged group-(g − 1) signature elements lie on
ng−1 one-way chains from the set Gg−1 that are distinct
from previously chosen one-way chains; and so on. In other
words, the number of ways to forge a signature is
(cid:6)
(cid:7)(cid:6)
(cid:7)
rng
ng
(cid:6)
=
rng
ng
···
ng−1
rnr−1 + (r − 1)ng
(cid:6)
rn1 + (r − 1)(ng + ng−1 + · ·· + n2)
(cid:7)
g−1(cid:8)
(cid:6)
n1
rni + (r − 1)
ni
g
j=i+1 nj
(cid:22)
(cid:7)
(cid:7)
i=1
.
(23)
When r = 1, (23) reduces to 1, consistent with intuition.
Therefore,
(cid:3) .
(24)
(cid:2)
(cid:3)#
rng
ng
(cid:2)
(cid:2)
(cid:2)
t
k
(cid:3)
(cid:3)
t
k
we can write the expected distance between s1,x and the last
received signature element as
r(cid:4)
1
r
=
i=1
{(Dpast + Dpres)qi−1
(1 − qr)
r(1 − q)
Dpast + Dpres.
+ Dpres(1 − qi−1
)}
(18)
The estimation of Cv is now reduced to the estimation of
Dpast and Dpres in (18). Dpres is simply
Dpres =
1
g
i =
g + 1
2
.
(19)
g(cid:4)
i=1
To ﬁnd Dpast, let Ad,g1,g2,...,gi denote the event that
• the past epoch and the present epoch in Fig. 5(a) are
separated by d epochs of no signature, where d ≥ 0;
• and in the past epoch, i signature elements have been
received, which belong to group g1, g2, . . . , gi respec-
tively.
Event Ad,g1,g2,...,gi occurs at a probability of
(cid:17)
i
(cid:16)
(cid:6)
(cid:7)(cid:16)
r
i
k
t
1 − k
t
(cid:17)(d+1)r−i ng1 ng2 · ·· ngi
ki
during which the distance is
dwg + (wg − g1 − g2 − ··· − gi).
∞(cid:4)
r(cid:4)
g(cid:4)
g(cid:4)
···
Therefore,
Dpast =
(20)
d=0
i=1
g1=1
gi=1
[(d + 1)wg − g1 − ··· − gi] Pr[Ad,g1,g2,...,gi ].