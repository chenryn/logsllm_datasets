---
## Page 69
一次网络抖动经典案例分析/proc/sys/vm/
drop_caches && sync的方式来释放缓存，缓解问题。
但是其买事情选选没有就此结束，找们需要注意两个天键性的问题：
1.是什么程序在反复地获取slab信息，产生类似cat/proc/slabinfo的效果。
2.这么多dentry生成的原因是什么。
如果不知道这两点这个问题随时可能会复现。而周期性地drop cache 并不是一个长
久根治的方案。
看到这里，这个缓存问题的处理是不是在哪儿见过？对的，在系统性能分析那一章节
我们也提到相似的问题，建议再往前回顾一下心中应该就差不多有答案了。
---
## Page 70
Linux系统服务与参数问题
至此，我们分享了关于系统启动登录、性能、网络等三个方面遇到的一些经典
和有趣案例，而这三个方面也基本涵盖了目前我们遇到的大部分的系统故障问
题。此外，还有一类系统服务参数问题在我们处理的案例中也展见不鲜。阿里
云结合多年云上ECS运维经验和用户业务反馈，不断优化ECS系统镜像以
最大化发挥用户业务效益，但很多时候由于业务增长缺少准确的预估，应用程
序不合理设计等方面，需要调整系统默认的参数配置来适应和改善业务运行状
态。下面我们分享几个案例来帮助大家更好的理解一些系统参数的实际参考和
应用意义。
4个limits生效的问题
第一个问题
limits.conf 的限制在 /proc/pid/limits 中未生效
# cat /pzoc/3606/11nita
Limdt
Soft Limit
Bard Linit
Units
Max processes
31202
31202
processea
Max open fi1ea
1024
4096
fi1es
在 CentOS 7& Ubuntu系统中，使用Systemd 替代了之前的 SysV。/etc/security/
limits.conf文件的配置作用域缩小了。
---
## Page 71
4 个 Iimits 生效的问题4 个 limits 生效的问题
0S E559=8pFutu
 min. avail stsrtup file descriptorsj
default 1024
minprocs=65535
I min. avail process descriptors;default 200
# cat /proc/2423/1imits
Limit
Soft Limit
Bard Limit
Units
Max cpu tine
unlimited
umlimited
seconds
Max dsta size
Max file size
unlimited
umlimited
bytes
unlimited
umlimited
bytes
Max core file size
Max stack size
8099859
umlimited
23q
D
umlimited
bytes
Max resident set
unlimited
umlimited
bytes
SE559
SE5S9
Max open files
05E559
0SES59
files
-修改成功
Max locked menory
9E559
9E559
bytes
Max address Bpace
unlimited
unl imited
unlinited
umlimited
23q
Max file locks
Max pending signal8
61946
61946
Max msgqueue size
819200
819200
23q
Msx realtine priority
Max nice priority
0
Max realtine tineout
D
unlimited
umlimited
关于file-maxnr_open file_nr的解释可参考：
https://www.kernel.org/doc/Documentation/sysct/fs.txt
参考外部文档：
https://www.cnblogs.com/zengkefuw/p/5635153.html
https://blog.csdn.net/go0gle0802/article/details/52304776
http://blog.cloud.360.cn/post/tuning-your-system-for-high-concurrency.htm
https://blog.csdn.net/oq_38165374/article/details/104881340
---
## Page 75
6 步排查 ss& netstat 统计结果不样的原因
75
6步排查ss&netstat统计结果不一样的原因
Ss的结果，closed状态的有3w多
8- 28 #
Total: 30756 (kermel 31201)
TCP: 34076 (estab 9, closed 34011, orphaned 0, Bynrecv 0, tinewait 4184/0) ,
ports 0
Transport Tota1
IP
IPv6
31201
2
2
0
UDP
13
9
TCP
65
12
IMET
80
23
LS
FRAG
G
0
2
netstat统计只有一百来个连接
# netatat -n |avik •/^tcp/ {++s[$xF] ] sMD {for (a in S) pxint a, S[a]]
ESTABLISHED 9
TIXE_KAIT 79
3
通过strace看看二者的统计方式得不同
ss 直接取自/proc/net/sockstat。
# atrace -F -ff -t -tt -s 4096 -o s.out ss -
1563360794 995285 open (*/proc/net/sockstat*, O_RDoNLr) = 3
1563360794 995358 fatat [3, [at_node=S_IFREG|0444, st_size=0, ---}) = 0
1563360794 99541T Tnap (BULL, 4096, PR0T_READ| PROT_MRITE, MAP_PRIVATE |AP_
ANONYM00S, -1, 0] =Ox7E94e5a25000
1563360794 995470 xead (3, *sockete: used 30741\,nTCP: Inuse 11 ozphan 0 tw
4671 al1oc 29878 men B47,nUDP: 1nuse 9 men 2nUDPLITE: inuse 0′nRAM: Inuse
2\nFRAG: 1nuse 0 me
nory 0\n", 1024) = 143
---
## Page 76
76
>6 步排查 ss& netstat 统计结果不样的原因
netstat 是读取的 /proc/pidl/fd 下面关联 tcp 的 socket。
strace -F -ff -t -tt -α 4096 =o n.out netstat -antp1
1563360883 910941 open */proc/1500/attx/curxent*, 0_RDoMLY|0_CL0&xEC) = 5
1563360883 910993 xead (5, 0x56114ec94ba0, 4095) = -1 EINVAL (Inva11d
argunent)
1563360883 . 911051 c1ose (5)
= 0
1563360883 911106 read1ink (*/pzoc/1500/rd/6a, *sccket: [38288]*, 29] = 14
1563360883 911159 open(*/proc/1so0/attx/curxent*, 0_BDcmLY|0_CL08XEC)
1563360883 911209 read (5, 0x56114ec94c00, 4095) = -1 EINVAL (Invalld
= 5
1563360883 911257 close [5)
argunent)
= 0
t = [6& * [6ez9e] :sxoos。 *=L/p3/00st/0oxd/a)xuTTpeax 0ett6E8e09ce95t
1563360883 911357 open (*/proc/1500/attx/curxent*, 0_RDc8LY|0_CL08xEC)
1563360883 911407 read(5, 0x56114ec94c60, 4095) = -1 EINVAL (Inva1ld
= 5
1563360883 911454 c1ose (5)
argunent)
1563360883 911502 read1ink (*/pzoc/1500/fd/8a, *socket: [38290] *, 29] = 14
= 0
1563360883 911554 open (*/proc/1500/attx/curxent*, 0_RDc8LY|0_CL08xEC) = 5
1563360883 911604 read(5, 0x56114ec94cc0, 4095) - -1 EINVAL (Inval1d
1563360883 911651 c1ose (5)
argunent)
= 0
1563360883 911699 xead1ink (*/pzoc/1500/td/9*, *socket : [38291] *, 29) = 14
1563360883 911751 open (*/proc/1500/attx/curxent*, 0_Do8LY|0_CL0gxEC)
1563360883 911801 read (5, 0x56114ec94d20, 4095) = -1 EINVAL (Inva11d
5
argusent)
1563360883 911848 c1ose (5)
= 0
5 =(xoxoo *axa/x/00st/0od/。)uado 乙6TT6E8e09EE9ST
1563360883 911919 xead1ink ("/pzoc/1500/fd/10*, "socket: [38292] *, 29) = 14
1563360883 912023 read(5, 0xS6114ec94d80, 4095) - -1 EINVAL (Inval1d argunen
# gxep -c socket 1.out.764
30133