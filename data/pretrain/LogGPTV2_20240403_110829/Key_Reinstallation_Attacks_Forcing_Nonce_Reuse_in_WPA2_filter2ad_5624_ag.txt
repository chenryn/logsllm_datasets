### Analysis of Security Vulnerabilities in Wi-Fi Handshakes and Data-Confidentiality Protocols

#### 4-Way and Group Key Handshakes
The 4-way handshake and the group key handshake [39] have been formally analyzed for security. However, these analyses did not explicitly model cipher selection and downgrade protection. This oversight allowed Vanhoef and Piessens to execute a downgrade attack against the 4-way handshake [72]. In this attack, the access point (AP) is tricked into using RC4 to encrypt the group key when it is transmitted in message 3. This attack is feasible only if the network supports WPA-TKIP, which is already known to be a weak cipher [66, 69].

Additionally, the models in [39] do not specify the timing for installing the negotiated session key or transported group key. We demonstrated that this timing is crucial because improper installation can lead to key reinstallation attacks.

#### Fast BSS Transition (FT) Handshake
The FT handshake is based on the 4-way handshake [5], but no formal security analysis has been conducted on it. Existing works focus primarily on its performance, such as [11, 46]. Several studies examine authentication mechanisms that negotiate master keys (PMKs) [19, 21, 59, 75]. Some of these mechanisms rely on establishing a secure TLS session first [9]. Consequently, recent attacks on TLS, such as those described in [10, 14, 15, 27, 62], also affect these mechanisms. In our study, we focused on handshakes that derive fresh session keys from a negotiated or pre-shared master key.

#### Data-Confidentiality Protocols
The first practical attack on WPA-TKIP was discovered by Beck and Tews [66]. They demonstrated how to decrypt a small TKIP packet, recover the MIC key, and forge packets. Subsequent works [36, 67, 69, 70] further improved this attack. Researchers also exploited biases in RC4 to attack the weak per-packet key construction of TKIP [6, 57, 71]. Due to these security issues, the Wi-Fi Alliance has deprecated TKIP [74].

Although CCMP has faced some criticism [60], it has been proven to provide security guarantees similar to modes like OCB [42]. Fouque et al. [31] discuss theoretical message forging attacks when nonces are repeated in CCMP.

The GCM cipher is known to be vulnerable when short authentication tags are used [29] or when nonces are reused [43]. BÃ¶ck et al. [16] empirically investigated nonce reuse in GCM when used in TLS and found several servers that reuse nonces. Our attack on GCMP in 802.11 is unique because we can control when an endpoint reuses a nonce, and because GCMP uses the same (authentication) key in both communication directions. Recent cryptographers have referred to GCM as fragile [35, 56].

#### Additional Security Issues
Other works have highlighted security issues in Wi-Fi implementations or related technologies. For example, design flaws were discovered in Wi-Fi Protected Setup (WPS) [73], vulnerabilities were found in drivers [13, 20], and routers were found to use predictable pre-shared keys [45].

### Conclusion
Despite the formal security proofs of the 4-way and group key handshakes, we demonstrated that they are susceptible to key reinstallation attacks. These attacks do not violate the security properties established by the formal proofs but highlight the limitations of the models used. Specifically, the models do not specify when a key should be installed for use by the data-confidentiality protocol. Additionally, we showed that the PeerKey and fast BSS transition handshakes are vulnerable to key reinstallation attacks.

All Wi-Fi clients we tested were vulnerable to our attack on the group key handshake, enabling an adversary to replay broadcast and multicast frames. The impact of attacking the 4-way or fast BSS transition handshake depends on the data-confidentiality protocol in use. In all cases, it is possible to decrypt frames and hijack TCP connections, allowing the injection of data into unencrypted HTTP connections. Against Android 6.0, our attack triggered the installation of an all-zero key, completely voiding any security guarantees.

Worryingly, our key reinstallation attack can occur spontaneously if certain handshake messages are lost due to background noise. This means that under certain conditions, implementations may reuse nonces even without an adversary being present.

Future research should investigate whether other protocol implementations are also vulnerable to key reinstallation attacks. Protocols that must account for message loss are particularly at risk, as they are designed to process retransmitted frames and may reinstall keys during this process.

### Acknowledgments
This research was partially funded by the Research Fund KU Leuven and the imec High Impact Initiative Distributed Trust project.

### References
[References are listed as provided, with minor formatting adjustments for clarity and consistency.]