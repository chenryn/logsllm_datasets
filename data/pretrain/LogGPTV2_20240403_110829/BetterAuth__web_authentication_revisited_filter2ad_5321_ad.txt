# 优化后的文本

## 表1: JavaScript 实现性能
（时间以毫秒为单位，基于十次运行的平均值）

- **Chrome/Win 73**: 932.7 ms
- **IE 9/Win 73**: 4511.2 ms
- **Acer Aspire, Ubuntu 11.10, Core i5, 2.53 GHz, 4GB RAM**
- **MacBook Pro, Os X 10.7.2, Core i7, 2.2 GHz, 8GB RAM**
- **ThinkPad T410s, Win7 Pro x64 SP1, Core i5 2.6 GHz, 4GB RAM**

### 密钥长度与性能

- **1024 位**:
  - 261.1 ms
  - 426.8 ms
  - 257.9 ms
  - 942.5 ms
  - 281.9 ms
  - 1314.6 ms

- **768 位**:
  - 116.7 ms
  - 182.6 ms
  - 113.9 ms
  - 405.6 ms
  - 127.2 ms
  - 592.2 ms

## 用户欺骗与密码窃取
如果用户被诱骗在非BetterAuth表单字段中输入密码，攻击者仍然可以窃取该密码。为了封堵这一漏洞，需要一个从用户到浏览器内隔离密码处理程序的视觉上不可伪造的“可信路径”[43]。

若提供此类功能，可以更稳健地引入关于密码数据处理的安全保证。实现这种方案在工程层面上并不困难，部分已在HTTP基本和摘要认证对话框及各种研究原型中实现。然而，在UI设计方面是一个重大挑战。必须在Web UI设计师的需求与用户可靠识别此类“安全”输入表单的能力之间找到合适的平衡点。

## 有限的点击劫持防护
如2.2.2节所述，点击劫持可视为当前认证跟踪实践中的漏洞类别。具体来说，点击劫持依赖于攻击者加载跨域、已认证的GUI界面到iframe中的能力。若未配置任何公共接口（见3.5节），此攻击模式将无法实施，因为无法从认证上下文外部访问应用程序逻辑入口点。然而，一旦添加了公共接口，情况就会改变：在这种情况下，应用程序可能提供了从公共接口到目标GUI界面的导航路径。通过诱使用户多次点击伪装的iframe，攻击者可能会诱导用户无意间进行导航。由于所有来自公共接口的请求都来自认证上下文，它们会透明地接收请求签名，导致攻击者可能访问目标Web GUI。因此，公共接口仍应采用防框架措施。尽管如此，BetterAuth提高了点击劫持攻击的难度，并且通过限制和明确配置的公共接口，全面的防框架保护变得相对简单。

## 重放攻击
按照第3节描述的方式实现时，浏览器与服务器之间的通信易受网络攻击者的重放攻击。为了简洁明了，我们在此省略了对此问题的处理。不过，通过在请求中使用单调递增的nonce滑动窗口并在服务器端保持有限状态，可以轻松添加重放保护。

## 相关工作
针对Web认证的安全性方面已经得到了广泛关注，特别是钓鱼[8, 37, 41]、跨站脚本[25, 29, 20, 31] 和CSRF [3, 33]等领域。由于这些工作的焦点较为狭窄，我们将不再详细讨论。本文余下部分将重点讨论密码协议及其针对Web认证的方法。

### 密码协议
Bellovin和Merritt提出了基于预共享秘密（即密码）并能抵御字典攻击的加密密钥交换（EKE）协议[4, 5]。他们强调了哪些消息应该用密码加密，而不会增加离线暴力破解的风险。然而，在现代Web场景中，这种方法的一个缺点是密码必须以明文形式存储在服务器端。Jablon提出了一种改进方法，消除了这种需求[18]。Wu提出了EKE的修改版本，称为不对称密钥交换（AKE），最终用于派生安全远程密码（SRP）协议[42]。它不再使用对称加密，而是专注于防止服务器用户数据库或会话密钥泄露的强大安全性。Steiner等人描述了将Bellovin和Merritt方法的略微修改版本[4]（命名为DH-EKE）集成到TLS中的方法[40]。这样，他们消除了对公钥基础设施的需求。由于双向认证，证书变得过时。他们的基于安全密码的TLS密码套件实现了机密性和真实性。

### Web认证
SessionLock [1] 与我们的过渡JavaScript实现的BetterAuth密切相关。该论文展示了如何使用标准JavaScript替代基于cookie的认证跟踪，采用浏览器驱动的HMAC方案。SessionLock不解决CSRF问题，也不处理初始认证步骤。[2]介绍了无需用户认证的浏览器认证：浏览器生成自签名证书。此证书不得包含任何用户相关信息。客户端为每个单独的服务器域名（“源”）颁发新证书。通过将会话cookie关联到相应的客户端证书，可以确保会话跟踪的安全性，从而缓解了多个与cookie相关的威胁，如SID盗窃或会话固定。最后，最新的HTTP/1.1规范草案提供了一种基于质询-响应认证的长期存在的HTTP基本和摘要认证扩展[13]，防止了先前HTTP认证标准中的已知窃听攻击。

Chen等人解决了同时浏览敏感和不可信网站时发生的跨站点攻击问题[7]。为此，他们隔离了浏览器会话，防止了跨域攻击。同域攻击不在此方法的范围内。此功能类似于我们的上下文相关认证和公共接口。应用隔离的安全级别相当于使用不同浏览器浏览不同网站。

## 结论
本文介绍了BetterAuth。BetterAuth是一种默认安全的相互Web认证协议，解放了Web应用程序开发人员和运营人员，使其不必在应用程序架构的各个异构位置应对潜在威胁，这是目前既定方法所要求的。BetterAuth显著提高了认证过程对已知威胁的抵抗力，范围从网络攻击、跨站请求伪造到钓鱼攻击。此外，该协议的设计允许在标准JavaScript中实现，即使在没有广泛原生浏览器支持的情况下也能部署。

## 参考文献
[此处列出参考文献]

---

希望以上优化后的文本更加清晰、连贯和专业。如果有更多细节需要调整，请告诉我。