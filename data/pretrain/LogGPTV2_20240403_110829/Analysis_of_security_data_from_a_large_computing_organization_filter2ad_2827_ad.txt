SPAM/phishing (11)   
Incidents resulted in sending spam and 
phishing emails.  
Unknown   
Link click   
Misconfiguration  
(6) 
(3) 
(2) 
(8) 
Spam  
Web spam  
(2) 
Malware distribution  (1)  
(8) 
Unknown   
Confiker    
(1) 
W32.Welchia.Worm   (1) 
W32/SDBot  
(1) 
Unknown   
(3) 
Scan  
Spyware    
Bot  
IRC Bouncer  
DDoS  
Scan  
(7) 
(1) 
(1) 
(1) 
(1)  
(3)  
Alert generated (count) 
FTP Analyzer        
(3) 
HTTP Analyzer          (3) 
(1) 
IRC Analyzer 
(9) 
Notification 
User profiling 
(11) 
Watchlist                    (5) 
Darknet 
                  (1) 
Google alerts 
(4) 
       HTTP                   (1) 
       IRC  
(1) 
Malware 
                  (1) 
      Notification           (8) 
Scan int/ext 
(1) 
TopN  
(4) 
Watchlist                     (1) 
                  (1) 
HTTP 
IRC 
                  (5) 
(3) 
Notification  
(3) 
Scan int/ext 
                  (8) 
TopN  
User profiling  
(1) 
  Watchlist                   (1) 
(8) 
IRC  
Notification  
(2) 
SSH scan                    (1) 
TopN 
(3) 
                  (2) 
Undernet 
User Profiling  
(2) 
Watchlist                     (2) 
Google alerts  
(1) 
                  (1) 
HTTP  
                  (4) 
Malware 
Notification  
(4) 
Watchlist                    (1) 
Notification  
(4) 
(3) 
Scan int/ext 
(2) 
TopN  
Virus/worm 
(1) 
Watchlist                    (1) 
Notification  
(1)  
(2) 
TopN  
Infected system (11)  
A host in the network is infected with a 
virus or a known malware. 
Pre-infected host (3)  
Systems infected outside the network 
boundaries and brought back into the 
network.  
Social engineering (2)  
Attempts to manipulate users to divulge 
critical system information such as 
passwords. 
Internal investigation (1)  
A policy violation by an action of an 
internal employee/user.  
A. 
Incident Type  
Instant Messenger  
Unknown   
(1) 
(1)  
Privilege Escalation   (1) 
ID theft  
(1) 
Notification 
(2) 
Insider  
(1) 
Unauthorized privilege  
retain  
(1) 
File Integrity Monitor (1)  
Classification  in  Table  III  provides  a  description  of 
incident  types  along  with  their  counts.  Each  incident 
category  includes  attacks/compromises  which  share  similar 
characteristics.  For  example,  the  set  of  analyzed  incidents 
includes  22  successful  attacks  involving  exploitation  of 
certain  vulnerabilities  in  applications  such  as  VNC,  MySql, 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:46:24 UTC from IEEE Xplore.  Restrictions apply. 
513MSSQL, and OpenSSL. All these incidents are combined into 
the application compromise category. Likewise, 32 incidents 
that resulted in an attacker gaining access to the system by 
using stolen password/key-pairs are combined together in the 
credential compromise category.  
Closer  analysis  of  the  identified  incident  types  leads  to 
several observations:  
thus 
(Web 
attacks 
indicating 
that  attackers  dealing 
The majority of incidents (55%) were due to attacks 
• 
on  authentication  mechanisms  with  varying  levels  of 
sophistication:  (i)  bruteforce  SSH  accounts  for  19 
incidents, (ii) credentials compromise – 32 incidents, (iii) 
application  compromises  –  10  incidents  (VNC  null 
session  –  6  incidents,  and  exploiting  vulnerabilities  in 
telnet,  rlogin,  Open  X11  –  4  incidents),  and  Web 
server/application  –  7  incidents  due  to  Web  server 
misconfiguration. 
server/application 
•  Web-based 
category) were primarily a result of misconfiguration (7) 
or web-application vulnerability (10). In terms of misuse, 
attackers were seen establishing backdoors (3) and scan 
other  hosts  (5),  rather  than  mere  defacements  (i.e., 
subverting the web site content).  
Attackers deploying unauthorized media (10 warez 
• 
incidents)  were  found  to  be  very  sophisticated  in  their 
ability  to  cover  their  tracks  and  malware  by  installing 
rootkits  and  hiding  media  using  alternate  data  streams. 
All 10 incidents were part of the application compromise 
category, 
in 
distribution of illegal media have access to a much wider 
range of exploits. 
Application  compromises,  Spam/phishing  and 
• 
Infected systems categories combined caused a total of 20 
(16%)  incidents  where  the  initial  entry  point  was 
unknown.  Even though viruses and worms are studied in 
depth individually, the variation of payload delivery (e.g., 
innocuous 
replicating 
themselves via open network shares, or exploits of web 
browser  vulnerabilities)  is  so  broad  that  most  of  entry 
points are difficult to establish. This observation calls for 
monitoring  techniques  which  can  quickly  adapt  to 
changes in attackers behavior 
Association of incident types and alert categories reveals 
that each alert detects multiple incident types. This suggests 
that while the exploits may be different, the incidents share a 
common  attack  path.  For  example,  in  a  credential  stealing 
incident  an  attacker  logs  in  with  a  known  credential, 
downloads  local  root  escalation  exploit  over  HTTP  using 
wget. In an application compromise incident, a host running 
phpmyadmin  downloads  a  c99  phpshell  via  http  after 
undergoing  a  remote  code  injection  exploit.  Both  incidents 
have different attack vectors, different exploits, and different 
misuse.  However,  the  http-user  agent  is  determined  to  be 
wget. Alerting for anomalous http requests originating with 
“wget” as user-agent can reveal two distinct incident types. 
Fig. 4 shows that bruteforce SSH incidents can trigger IDS 
alerts (IRC and Scan), flow alerts (TopN and watchlist) and 
syslog  alerts  depending  on  the  sequence  of  actions  the 
attacker takes when penetrating the system. 
attachments,  viruses 
email 
B.  Attack Phases 
Using  the  attack  stages  proposed  by  [17],  alerts  for  all 
incidents are mapped into seven phases. Table IV defines the 
incident  phases.  Numbers  in  the  last  column  of  Table  IV 
provide  (actual  incidents/incident  investigations)  counts  for 
each phase during which the alert was observed in our data. 
A  useful  metric  to  study  the  effectiveness  of  a  detection 
mechanism  is  the  phase  of  the  attack  during  which  the 
notifying alert originated.  
Note that not all the incidents are necessarily required to 
fulfill  each  stage  of  attack  described  in  the  Table  IV.  For 
example, while each attack usually leads to the misuse of the 
system, not all the attacks require the embedding phase. This 
raises  the  possibility  that  low  number  of  notifications  in  a 
stage  may  be  due to  few  incidents  in  the available data  set 
encompassing  that  specific  stage,  other  than  due  to  the 
deficiency of the monitoring tools. Thus, absence of an alert 
in a particular attack stage is not necessarily an indication of 
the deficiency of the monitoring tools.   
However, Table IV also clearly reveals a skewed picture 
for  early  stage  (scan  phase)  versus  late  stage  detection 
(misuse  phase)  –  both  of  these  phases  are  generally 
unavoidable.  For  other 
(where 
applicable) not many monitors are deployed and configured 
to  alert  at  that  level  of  granularity,  especially  in  a  non-
centralized environment.  
intermediate 
Additionally,  detection 
time 
monitoring  tools  took  to  alert  on  the  incident)  is  not  being 
considered  in  our  analysis.  Close  look  at  data  revels  most 
alerts are generated near real time. 
(amount  of 
latency 
stages 
Internal Investigation       (1)
Pre-infected host               (3)
SPAM/Phishing                   (11)
Application Compromise  (22)
Credentials Compromise  (32)
Social Engineering             (2)
Infected System                 (11)
Bruteforce SSH                   (20)
Web Server/Web App       (22)
s
t
n
e
d
i
c
n
I
f
o
r
e
b
m
u
N
20
18
16
14
12
10
8
6
4
2
0
Figure 4: Alert distribution based on incident types 
Alert Types
As  shown  in  Fig.  5  nearly  39%  (48/124)  of  detected 
incidents were discovered in the very last stage of the attack, 
i.e., in the attack-relay/misuse phase. This data indicates two 
major issues with detection mechanisms. First, an attacker is 
successful in concealing his/her identity/presence during the 
initial  phases  of  the  attack,  and  monitors  fail  to  detect  the 
compromise  early.  Perhaps  a  notion  of  pre-emption  and 
execution  under  probation  can  be  of  value  here.  Second, 
exploit signature-based alerts were able to detect only 13% 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:46:24 UTC from IEEE Xplore.  Restrictions apply. 
514of  the  incidents,  while  anomaly-based  detectors  (which 
capture  the  impact  of  an  exploit  or  an  attacker’s  actions) 
caught the remaining 87%. 
Attack 
Phase 
Scan Phase 
Breach 
Phase 
Penetration 
Control 
Embedding 
Data 
extraction/ 
modification 
Attack-
relay/ 
misuse 
TABLE IV.  
ATTACK PHASES 
Description 
Attackers try to identify vulnerable hosts 
and gather information about the target, 
e.g., services that are running.  
Attackers gain access to the system (e.g., 
using stolen or guessed credentials or by 
exploiting system misconfiguration (e.g., 
world writable files on an open share). 
Attackers exploit vulnerability (e.g., 
buffer overflow vulnerability) to obtain 
unauthorized access to the system. 
Attackers set up the compromised host to 
accept remote commands and provide 
reusable access (e.g., connect to 
command and control channel or install a 
backdoor).  
Attackers hide their malware and tracks 
by embedding the malware in the 
system, e.g., installing a rootkit, deleting 
system logs, adding ssh keys to 
authorized_key file, changing 
configuration files. 
Attackers change or modify data in the 
system, e.g., deface web pages, copy 
database content, or steal information. 
Attackers start misusing the system for 
personal gain, e.g., spam, DDoS using a 
bot, password harvesting, distributing 
warez, spreading virus, and phishing.  
Incident 
Count 
1/1 
30/39 
9/10 
21/23 
8/9 
7/7 
48/61 
 Application compromise
Pre-infected host
Internal investigation
Social engineering
Credential compromise
 Bruteforce SSH
Infected system
SPAM/phishing
Web server/application
s
t
n
e
d
i
c
n
i
f
o
r
e
b
m
u
N
60
50
40
30