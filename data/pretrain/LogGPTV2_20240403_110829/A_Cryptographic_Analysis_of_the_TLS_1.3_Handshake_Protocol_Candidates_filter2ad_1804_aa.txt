title:A Cryptographic Analysis of the TLS 1.3 Handshake Protocol Candidates
author:Benjamin Dowling and
Marc Fischlin and
Felix G&quot;unther and
Douglas Stebila
A preliminary version of this paper appears in the proceedings of the 22nd ACM Conference on Computer and
Communications Security (CCS 2015), DOI: 10.1145/2810103.2813653. This is the full version.
A Cryptographic Analysis of the
TLS 1.3 Handshake Protocol Candidates
Benjamin Dowling1
Marc Fischlin2
Felix Günther2
Douglas Stebila3
1 Royal Holloway, University of London, Egham, United Kingdom
2 Cryptoplexity, Technische Universität Darmstadt, Darmstadt, Germany
3 McMaster University, Hamilton, Ontario, Canada
PI:EMAIL, PI:EMAIL,
PI:EMAIL, PI:EMAIL
January 31, 2017
Abstract. The Internet Engineering Task Force (IETF) is currently developing the next version of the
Transport Layer Security (TLS) protocol, version 1.3. The transparency of this standardization process
allows comprehensive cryptographic analysis of the protocols prior to adoption, whereas previous TLS
versions have been scrutinized in the cryptographic literature only after standardization. Here we look
at two related, yet slightly diﬀerent candidates which were in discussion for TLS 1.3 at the point of
writing of the main part of the paper in May 2015, called draft-ietf-tls-tls13-05 and draft-ietf-
tls-tls13-dh-based.
We give a cryptographic analysis of the primary ephemeral Diﬃe–Hellman-based handshake protocol,
which authenticates parties and establishes encryption keys, of both TLS 1.3 candidates. We show
that both candidate handshakes achieve the main goal of providing secure authenticated key exchange
according to an augmented multi-stage version of the Bellare–Rogaway model. Such a multi-stage
approach is convenient for analyzing the design of the candidates, as they establish multiple session
keys during the exchange.
An important step in our analysis is to consider compositional security guarantees. We show that, since
our multi-stage key exchange security notion is composable with arbitrary symmetric-key protocols, the
use of session keys in the record layer protocol is safe. Moreover, since we can view the abbreviated
TLS resumption procedure also as a symmetric-key protocol, our compositional analysis allows us to
directly conclude security of the combined handshake with session resumption.
We include a discussion on several design characteristics of the TLS 1.3 drafts based on the observations
in our analysis.
Keywords. Transport Layer Security (TLS), key exchange, protocol analysis, composition
1
Contents
1 Introduction
1.1 Towards the New Standard TLS 1.3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 Modeling TLS 1.3 as a Multi-Stage Key Exchange Protocol
. . . . . . . . . . . . . . . . . .
1.3 Our Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.4 Related Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.5 Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2 The TLS 1.3 Handshake Protocol
2.1 draft-05 Handshake . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 draft-dh Handshake
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3 Session Resumption . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
3
4
4
5
6
7
7
8
8
3 Comments on the TLS 1.3 Design
3.1 Basic Handshake Protocols
3.2
9
9
0-RTT Handshake Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4 Multi-Stage Key Exchange Model
12
4.1 Outline of the Model for Multi-Stage Key Exchange . . . . . . . . . . . . . . . . . . . . . . 12
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
4.2 Preliminaries
4.3 Authentication Types
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
4.4 Adversary Model
4.5 Security of Multi-Stage Key Exchange Protocols
. . . . . . . . . . . . . . . . . . . . . . . . 18
4.5.1 Match Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
4.5.2 Multi-Stage Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
5 Security of the draft-05 Handshake
6 Security of the draft-dh Handshake
19
26
7 Composition
30
7.1 Preliminaries
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
7.2 Compositional Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
8 Multi-Stage Preshared-Secret Key Exchange Model
8.1 Adversary Model
8.2 Security of Preshared Key Exchange Protocols
36
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
. . . . . . . . . . . . . . . . . . . . . . . . . 37
8.2.1 Match Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
8.2.2 Multi-Stage Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38
9 Security of the draft-05 Session Resumption
10 Conclusion
A Proof of Theorem 5.2: Hybrid Argument
B The PRF-ODH Assumption
2
39
41
45
48
Introduction
1
The Transport Layer Security (TLS) protocol is one of the most widely deployed cryptographic protocols
in practice, protecting numerous web and e-mail accesses every day. The TLS handshake protocol allows
a client and a server to authenticate each other and to establish a key, and the subsequent record layer
protocol provides conﬁdentiality and integrity for communication of application data. Despite its large-scale
deployment, or perhaps because of it, we have witnessed frequent successful attacks against TLS. In the
past few years alone, there have been many practical attacks that have received signiﬁcant attention, either
exploiting weaknesses in underlying cryptographic primitives (such as weaknesses in RC4 [ABP+13]), errors
in the design of the TLS protocol (BEAST [Duo11], the Lucky 13 attack [AP13], the triple handshake attack
[BDF+14], the POODLE attack [MDK14], the Logjam attack [ABD+15]), or ﬂaws in implementations (the
Heartbleed attack [Cod14], state machine attacks (SMACK [BBDL+15])). Some of these attacks apply
only to earlier versions of the TLS protocol, but for legacy reasons many parties still support versions older
than the latest one, TLS 1.2.
1.1 Towards the New Standard TLS 1.3
Partly due to the above security problems with the existing versions of TLS, but also because of additional
desirable privacy features and functional properties such as low handshake latency, the Internet Engineer-
ing Task Force (IETF) is currently drafting a new TLS 1.3 standard. As of May 2015, there were two
(slightly diﬀerent) candidates in discussion: one is draft-ietf-tls-tls13-05 [Res15a] (which we shorten
to draft-05), the other one is the forked draft-ietf-tls-tls13-dh-based [Res15c] (which we shorten
to draft-dh), incorporating a diﬀerent key schedule based on ideas by Krawczyk and Wee.1 In this work,
we provide a comprehensive cryptographic evaluation of the primary Diﬃe–Hellman-based handshake of
both drafts.2 We believe that it is important that cryptographic evaluation take place before standardiza-
tion. This contrasts with the history of TLS and its predecessor the Secure Sockets Layer (SSL) protocol:
SSL 3 was standardized in 1996, TLS 1.0 in 1999, TLS 1.1 in 2006, and TLS 1.2 in 2008, but the ﬁrst
comprehensive cryptographic proof of any complete TLS ciphersuite did not appear until 2012 [JKSS12].
The protocol design in both TLS 1.3 drafts includes several cryptographic changes that are substantially
diﬀerent from TLS 1.2, including: (1) encrypting some handshake messages with an intermediate session
key, to provide conﬁdentiality of handshake data such as the client certiﬁcate; (2) signing the entire
handshake transcript for authentication; (3) including hashes of handshake messages in a variety of key
calculations; (4) encrypting the ﬁnal Finished messages in the handshake with a diﬀerent key than is used
for encrypting application data; (5) deprecating a variety of cryptographic algorithms (including RSA key
transport, ﬁnite-ﬁeld Diﬃe–Hellman key exchange, SHA-1, RC4, CBC mode, MAC-then-encode-then-
encrypt); (6) using modern authenticated encryption with associated data (AEAD) schemes for symmetric
encryption; and (7) providing handshakes with fewer message ﬂows to reduce latency.
These changes are meant in part to address several of the aforementioned attacks. While some of
those attacks are implementation-speciﬁc and escape abstract cryptographic evaluation, assessing the
cryptographic security of the design of TLS 1.33 can provide assurance that the protocol design does
not display any unexpected cryptographic weaknesses. Our goal is a comprehensive assessment of the
security of the handshake protocol in draft-05 and draft-dh. We focus solely on the handshake protocol
as a key exchange protocol; these drafts provide a cleaner separation between the key exchange in the
1Since May 2015, several follow-up draft versions of TLS 1.3 have been published that build on draft-05 but incorporate
major changes including the draft-dh key schedule. A later analysis of ours [DFGS16] covers the design of draft-10 [Res15b].
2draft-05 foresees and draft-dh sketches a subordinate pre-shared key variant relying on previously shared keys. Later
drafts merge pre-shared key and session resumption.
3When we refer to “TLS 1.3”, we mean the common features of draft-05 and draft-dh.
3
handshake protocol and the use of the resulting session key in the record layer protocol. This contrasts
with TLS 1.2 and earlier, where the session key was used both for record layer encryption and encryption
of the Finished messages in the handshake, making it impossible for TLS 1.2 to satisfy standard key
exchange indistinguishability notions and requiring either (a) a more complex security model that treats
the handshake and record layer together [JKSS12] or (b) a cunning approach to release the record layer
key early [BFK+14] (see also Section 1.4). The cleaner separation in the TLS 1.3 design allows us to take a
compositional approach to the security of TLS 1.3, treating the handshake separate from the record layer,
and also allowing us to include session resumption for abbreviated handshakes.
1.2 Modeling TLS 1.3 as a Multi-Stage Key Exchange Protocol
The message ﬂow for both drafts is similar and shown in Figures 1 and 2 along with the respective key
schedule. It is convenient to view TLS 1.3 as a multi-stage key exchange protocol [FG14] in which both
parties, the client and the server, agree on multiple session keys, possibly using one key to derive the next
one.
In the ﬁrst stage, the ﬁrst session key is derived via an anonymous Diﬃe–Hellman key exchange
(in the ClientKeyShare and ServerKeyShare messages) from which a handshake master secret HMS is
computed. This handshake master secret is used to compute a handshake traﬃc key tkhs which encrypts the
remaining messages of the handshake and should provide some form of outsider privacy for the exchanged
certiﬁcates.
In the second stage, the parties (depending on the desired authentication level) exchange signatures
over the (hash of the) transcript under a certiﬁed key in order to authenticate. They then derive the
application traﬃc key tkapp for securing the application messages, the resumption master secret RMS if
they resume sessions, and the exporter master secret EMS which can be used for deriving additional keying
material. Viewing each of the keys as one of the multi-stage session keys enables us to argue about their
security, even if the other keys are leaked. Both parties conclude the protocol by exchanging Finished
messages over the transcripts, generated using HMS or a separate key.
1.3 Our Results
Security of draft-05 and draft-dh full handshakes. First, we show (in Sections 5 and 6) that both
TLS 1.3 drafts are secure multi-stage key exchange protocols where diﬀerent stages and simultaneous runs
of the protocols can be unauthenticated, unilaterally authenticated, or mutually authenticated. On a high
level, this means that the handshakes establish record layer keys, resumption keys, and exporter keys that
look random to an adversary. This holds even with sessions that run concurrently and if the adversary
controls the whole network, is able to corrupt the long-term secret keys of other parties, and allowed
to reveal keys established in other sessions, thus providing quite strong security guarantees for practice.
Moreover, the multi-stage model used allows us to show that even leakage of record layer or exporter keys
in the same handshake session do not compromise each other’s security.
This requires some additions to the multi-stage key exchange security model of Fischlin and Günther
[FG14] to allow for unauthenticated sessions and post-speciﬁed peers, as described in Section 4, as well as to
handle authentication based on pre-shared symmetric keys, as described in Section 8. Our security proof
relies on mostly standard cryptographic assumptions such as unforgeability of the deployed signature
scheme, collision resistance of the hash function, and pseudorandomness of the HKDF key derivation
function. In addition, we employ the pseudorandom oracle-Diﬃe–Hellman (PRF-ODH) assumption which
has been introduced and used for analyses of the previous TLS version 1.2 [JKSS12, KPW13], in a slightly
stronger variant (cf. Appendix B). Note that the proceedings version and an earlier full version of this
paper contained an incorrect proof which instead of the PRF-ODH assumption employed only on the DDH
assumption (and PRF security). This version corrects this proof; see Sections 5 and 6 for the technical
4
details.
Composition theorem for use of session keys.
In order to show that the keys established in TLS 1.3’s
multi-stage key exchange handshake can be safely used in the record layer encryption, we extend the
composition frameworks of Brzuska et al. [BFWW11] and Fischlin and Günther [FG14] in Section 7 to
multi-stage key exchange protocols with mixed unauthenticated, unilateral, and mutual authentication.
A key point to secure composition of multi-stage key agreement protocols with arbitrary symmetric-key
protocols in [FG14] is (session-)key independence. This roughly means that one can reveal a session key
without endangering the security of future session keys. Both TLS 1.3 drafts satisfy this, enabling us to
argue about secure composition of the full handshake protocols with, say, a secure channel protocol.4
Recent work by Badertscher et al. [BMM+15] shows that the authenticated encryption (with associated
data) used in the record layer in both TLS 1.3 drafts is secure. See also Fischlin et al. [FGMP15] for
reassuring results about the design of the record layer protocol when viewed in terms of data streams.
Our compositional approach immediately implies that the application traﬃc keys output by both drafts’
handshakes can be safely used in the record layer.
Security of session resumption in TLS 1.3 drafts. TLS includes a mode for abbreviated handshakes,
in which parties who have previously established a session can save round trips and computation by using