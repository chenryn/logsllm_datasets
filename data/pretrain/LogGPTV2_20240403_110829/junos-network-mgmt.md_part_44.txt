if ($id == 'UI_DBASE_LOGIN_EVENT'){
var $committing-user = event-script-input/trigger-event/attribute-list/
attribute[name=="username"]/value;
var $requestSnmpTrap =  {
 "enteredConfigMode";
"username=" _ $committing-user;
}
var $snmpTrapResults = jcs:invoke( $requestSnmpTrap );
}
else if ($id == 'UI_COMMIT'){
var $committing-user = event-script-input/trigger-event/attribute-list/
attribute[name=="username"]/value;
var $committing-command = event-script-input/trigger-event/attribute-list/
attribute[name=="command"]/value;
var $committing-comment = event-script-input/trigger-event/attribute-list/
attribute[name=="message"]/value;
var $requestSnmpTrap =  {
 "configCommitted";
"username=" _ $committing-user _ ", command=" _ $committing-command _ ",
comment=" _ $committing-comment;
}
var $snmpTrapResults = jcs:invoke( $requestSnmpTrap );
}
514
}
}
Release History Table
Release Description
20.1R1 Starting in Junos OS Release 20.1, after graceful routing engine switchover (GRES), the new primary
Routing Engine sends a single warmStart notification.
Trace SNMP Activity
IN THIS SECTION
Monitor SNMP Activity and Track Problems That Affect SNMP Performance on a Device Running Junos
OS | 514
Trace SNMP Activity on a Device Running Junos OS | 518
Example: Tracing SNMP Activity | 522
Configure the Certificate Expiration Trap | 523
Enable Peer Down and IPsec Tunnel Down Traps | 524
Monitor SNMP Activity and Track Problems That Affect SNMP
Performance on a Device Running Junos OS
IN THIS SECTION
Check for MIB Objects Registered with SNMPd | 515
Track SNMP Activity | 516
Monitor SNMP Statistics | 516
Check CPU Utilization | 517
Check Kernel and Packet Forwarding Engine Response | 517
515
On Junos OS devices, you can view the information about monitoring the SNMP activity and identifying
the problems that impact the SNMP performance:
Check for MIB Objects Registered with SNMPd
To access data related to a MIB object, the MIB object must be registered with the snmpd. When an
SNMP subagent is online, it registers the associated MIB objects with the snmpd. The snmpd maintains
a mapping of the objects and the subagents with which the objects are associated. However, the
registration attempt fails occasionally, and the objects remain unregistered with the snmpd until the next
time the subagent restarts and successfully registers the objects.
When a network management system polls for data related to objects that are not registered with the
snmpd, the snmpd returns either a noSuchName error (for SNMPv1 objects) or a noSuchObject error (for
SNMPv2 objects).
You can use the following commands to check for MIB objects that are registered with the snmpd:
• show snmp registered-objects—Creates a /var/log/snmp_reg_objs file that contains the list of registered
objects and their mapping to various subagents.
• file show /var/log/snmp_reg_objs—Displays the contents of the /var/log/snmp_reg_objs file.
The following example shows the steps for creating and displaying the /var/log/snmp_reg_objs file:
user@host> show snmp registered-objects
user@host> file show /var/log/snmp_reg_objs
--------------------------------------------------------------
Registered MIB Objects
root_name =
--------------------------------------------------------------
.1.2.840.10006.300.43.1.1.1.1.2 (dot3adAggMACAddress) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.3 (dot3adAggActorSystemPriority) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.4 (dot3adAggActorSystemID) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.5 (dot3adAggAggregateOrIndividual) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.6 (dot3adAggActorAdminKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.7 (dot3adAggActorOperKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.8 (dot3adAggPartnerSystemID) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.9 (dot3adAggPartnerSystemPriority) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.10 (dot3adAggPartnerOperKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.1.1.11 (dot3adAggCollectorMaxDelay) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.1.2.1.1 (dot3adAggPortListPorts) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.2 (dot3adAggPortActorSystemPriority) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.3 (dot3adAggPortActorSystemID) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.4 (dot3adAggPortActorAdminKey) (/var/run/mib2d-11)
516
.1.2.840.10006.300.43.1.2.1.1.5 (dot3adAggPortActorOperKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.6 (dot3adAggPortPartnerAdminSystemPriority) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.7 (dot3adAggPortPartnerOperSystemPriority) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.8 (dot3adAggPortPartnerAdminSystemID) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.9 (dot3adAggPortPartnerOperSystemID) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.10 (dot3adAggPortPartnerAdminKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.11 (dot3adAggPortPartnerOperKey) (/var/run/mib2d-11)
.1.2.840.10006.300.43.1.2.1.1.12 (dot3adAggPortSelectedAggID) (/var/run/mib2d-11)
---(more)---
The /var/log/snmp_reg_objs file contains objects that are associated with the Junos OS processes
which are registered with the snmpd. You can view the objects using the show snmp registered-objects
command. If a MIB object related to a Junos OS process that is up and running is not shown in the list of
registered objects, you might want to restart the software process to retry object registration with the
snmpd.
Track SNMP Activity
SNMP tracing operations track activity of SNMP agents and record the information in log files. By
default, Junos OS does not trace any SNMP activity. To enable tracking of SNMP activities on a device
running Junos OS, include the set traceoptions flag all statement at the [edit snmp] hierarchy level.
The following log files are created:
• snmpd
• mib2d
• rmopd
You can use the show log log-filename operational command to view the contents of the log file. In the
snmpd log file (see the following example), a sequence of >>> represents an incoming packet, whereas a
sequence of  show log mib2d | grep “kernel response time”
Aug 17 22:39:37 == kernel response time for
COS_IPVPN_DEFAULT_OUTPUT-t1-7/3/0:10:27.0-o: 9.126471 sec, range
(0.000007, 11.000806)
Aug 17 22:39:53 == kernel response time for
COS_IPVPN_DEFAULT_INPUT-t1-7/2/0:5:15.0-i: 5.387321 sec, range
(0.000007, 11.000806)
Aug 17 22:39:53 == kernel response time for ct1-6/1/0:9:15: 0.695406
sec, range (0.000007, 11.000806)
Aug 17 22:40:04 == kernel response time for t1-6/3/0:6:19: 1.878542
sec, range (0.000007, 11.000806)
Aug 17 22:40:22 == kernel response time for lsq-7/0/0: 2.556592 sec,
range (0.000007, 11.000806)
518
Trace SNMP Activity on a Device Running Junos OS
IN THIS SECTION
Configure the Number and Size of SNMP Log Files | 519
Configure Access to the Log File | 519
Configure a Regular Expression for Lines to Be Logged | 520
Configure the Trace Operations | 520
SNMP tracing operations track activity for SNMP agents and record the information in log files. The
logged error descriptions provide detailed information to solve problems.
By default, Junos OS does not trace any SNMP activity. If you include the traceoptions statement at the
[edit snmp] hierarchy level, the default tracing behavior is:
• Important activities are logged in files located in the /var/log directory. Each log is named after the
SNMP agent that generates it. Currently, the following log files are created in the /var/log directory
when the traceoptions statement is used:
• chassisd
• craftd
• ilmid
• mib2d
• rmopd
• serviced
• snmpd
• When a trace file named filename reaches its maximum size, it is renamed filename.0, then
filename.1, and so on, until the maximum number of trace files is reached. Then the oldest trace file
is overwritten. (For more information about how log files are created, see the System Log Explorer.)
• Log files can be accessed only by the user who configured the tracing operation.
519
You cannot change the directory (/var/log) in which trace files are located. However, you can customize
the other trace file settings by including the following statements at the [edit snmp] hierarchy level:
[edit snmp]
traceoptions {
file    ;
flag flag;
memory-trace;
no-remote-trace;
no-default-memory-trace;
}
These statements are described in the following sections:
Configure the Number and Size of SNMP Log Files
By default, when the trace file reach 128 kilobytes (KB) in size, it is renamed filename.0, then filename.1,
and so on, until there are three trace files. Then the oldest trace file (filename.2) is overwritten.
You can configure the limits on the number and size of trace files by including the following statements
at the [edit snmp traceoptions] hierarchy level:
[edit snmp traceoptions]
file files number size size;
For example, set the maximum file size to 2 MB, and the maximum number of files to 20. When the file
that receives the output of the tracing operation (filename) reaches 2 MB, filename is renamed
filename.0, and a new file called filename is created. When the new filename reaches 2 MB, filename.0
is renamed filename.1 and filename is renamed filename.0. This process repeats until there are 20 trace
files. Then the oldest file (filename.19) is overwritten by the newest file (filename.0).
The number of files can be from 2 through 1000 files. The file size of each file can be from 10 KB
through 1 gigabyte (GB).
Configure Access to the Log File
By default, log files can be accessed only by the user who configured the tracing operation.
520
To specify that any user can read all log files, include the file world-readable statement at the [edit snmp
traceoptions] hierarchy level:
[edit snmp traceoptions]
file world-readable;
To explicitly set the default behavior, include the file no-world-readable statement at the [edit snmp
traceoptions] hierarchy level:
[edit snmp traceoptions]
file no-world-readable;
Configure a Regular Expression for Lines to Be Logged
By default, the trace operation output includes all lines relevant to the logged activities.
You can refine the output by including the match statement at the [edit snmp traceoptions file filename]
hierarchy level and specifying a regular expression (regex) to be matched:
[edit snmp traceoptions]
file filename match regular-expression;
Configure the Trace Operations
By default, only important activities are logged. You can specify which trace operations are to be logged
by including the following flag statement (with one or more tracing flags) at the [edit snmp traceoptions]
hierarchy level:
[edit snmp traceoptions]
flag {
all;
configuration;
database;
events;
general;
interface-stats;
nonvolatile-sets;
pdu;
policy;
protocol-timeouts;
521
routing-socket;
server;
subagent;
timer;
varbind-error;
}
Table 46 on page 521 describes the meaning of the SNMP tracing flags.
Table 46: SNMP Tracing Flags
Flag Description Default Setting
all Log all operations. Off
configuration Log reading of the configuration at the [edit snmp] Off
hierarchy level.
database Log events involving storage and retrieval in the events Off
database.
events Log important events. Off
general Log general events. Off
interface-stats Log physical and logical interface statistics. Off
nonvolatile-set Log nonvolatile SNMP set request handling. Off
pdu Log SNMP request and response packets. Off
policy Log policy processing. Off
protocol-timeouts Log SNMP response timeouts. Off
routing-socket Log routing socket calls. Off
522
Table 46: SNMP Tracing Flags (Continued)
Flag Description Default Setting
server Log communication with processes that are generating Off
events.
subagent Log subagent restarts. Off
timer Log internal timer events. Off
varbind-error Log variable binding errors. Off
To display the end of the log for an agent, issue the show log agentd | last operational mode command:
[edit]
user@host# run show log agentd | last
where agent is the name of an SNMP agent.
Example: Tracing SNMP Activity
Trace information about SNMP packets:
[edit]
snmp {
traceoptions {
file size 10k files 5;
flag pdu;
flag protocol-timeouts;
flag varbind-error;
}
}
523
Configure the Certificate Expiration Trap
Before you begin:
• Understand how certificates works on VPN. Read Understanding Certificate Chains.
This topic shows how to configure certificate expiration trap and configure the number of days before to
generate the trap.
1. Configure the number of days before to generate the trap for all certificates.
user@host# set security pki trap all-certificates number-of-days
2. Configure the number of days before to generate the trap for CA certificate.
user@host# set security pki trap ca-identity ca-profile-name number-of-days
3. Configure the number of days before to generate the trap for local certificate.
user@host# set security pki trap certificate-idcertificate-id-name number-of-days
4. Confirm your configuration by entering the show security pki trap command.
user@host# show security pki trap
certificate-id crt_spk1 {
30;
}
ca-identity Root-CA {
30;
}
all-certificates {
30;
}
SEE ALSO
trap (Security PKI)
show security ipsec statistics
524
Enable Peer Down and IPsec Tunnel Down Traps
This topic shows how to enable peer-down and ipsec-tunnel-down traps.
1. Enable the IKE trap peer down. Trap gets generated when the peer is down.
user@host# set security ike trap peer-down
2. Enable the IKE trap IPsec tunnel down. Trap gets generated when the peer is up and the IPsec SA is
down.
user@host# set security ike trap ipsec-tunnel-down
3. Confirm your configuration by entering the show security ike trap command.
user@host# show security ike trap
ipsec-tunnel-down;
peer-down;
SEE ALSO
trap (Security PKI)
show security ipsec statistics
Access Privileges for an SNMP Group
IN THIS SECTION
Configure the Access Privileges Granted to a Group | 525
Example: Configure the Access Privileges Granted to a Group | 529
Assign Security Model and Security Name to a Group | 530
Example: Security Group Configuration | 532
525
SNMP version 3 (SNMPv3) uses the view-based access control model (VACM), which allows you to
configure the access privileges granted to a group. You can control the access by filtering the MIB
objects available for a specific operation through a predefined view. You assign views to determine the
objects that are visible for read, write, and notify operations for a particular group, using a particular
context, a particular security model (v1, v2c, or usm), and a particular security level (authenticated,
privacy, or none). For information about how to configure views, see "Configure MIB Views" on page
573.
You define user access to management information at the [edit snmp v3 vacm] hierarchy level. All access
control within VACM operates on groups, which are collections of users as defined by USM, or
community strings as defined in the SNMPv1 and SNMPv2c security models.
The term security-name refers to these generic end users. The group to which a specific security name
belongs is configured at the [edit snmp v3 vacm security-to-group] hierarchy level. That security name can
be associated with a group defined at the [edit snmp v3 vacm security-to-group] hierarchy level. A group
identifies a collection of SNMP users that share the same access policy. You then define the access
privileges associated with a group at the [edit snmp v3 vacm access] hierarchy level. You can define the
access using views. For each group, you can apply different views depending on the SNMP operation;
for example, read (get, getNext, or getBulk) write (set), notifications, the security level used (authentication,
privacy, or none), and the security model (v1, v2c, or usm) used within an SNMP request.
You configure members of a group with the security-name statement. For v3 packets using USM, the
security name is the same as the username. For SNMPv1 or SNMPv2c packets, the security name is
determined based on the community string. Security names are specific to a security model. If you are
also configuring VACM access policies for SNMPv1 or SNMPv2c packets, you must assign security
names to groups for each security model (SNMPv1 or SNMPv2c) at the [edit snmp v3 vacm security-to-
group] hierarchy level. You must also associate a security name with an SNMP community at the [edit
snmp v3 snmp-community community-index] hierarchy level.
To configure the access privileges for an SNMP group, include statements at the [edit snmp v3 vacm]
hierarchy level. For more information about this statement, see vacm.
Configure the Access Privileges Granted to a Group
IN THIS SECTION
Configure the Group | 526
Configure the Security Model | 526
Configure the Security Level | 527
526
Associate MIB Views with an SNMP User Group | 527
This topic includes the following sections:
Configure the Group
To configure the access privileges granted to a group, include the group statement at the [edit snmp v3 vacm
access] hierarchy level:
[edit snmp v3 vacm access]