替盒，或S盒完成。每一个S盒都有6位输入，4位输出，且这8个S盒是不同的，48位的输
入被分为8个6位分组，每一分组对应一个S盒代替操作：分组1由S盒1操作，分组2由S
盒2操作，如此进行。
5.P盒置换
S盒大体运算后的32位输出依照P盒进行置换。该置换把每输入位映射到输出位，任一
位不能被映射两次。也不能被略去，这个置换叫做直接置换。下面给出了每位移至位置：
16,7.20.21,29.12.28,17,1,15,23,26,5,18,31,10,
2,8,24.14.32,27,3,9,19,13,30,6,22,11.4.25,
最后，将P盒置换的结果与最初的64位分组的左半部分异或，然后左、右半部分交换，
接着开始另一轮。
6.末置换
末置换是初始置换的逆过程。应该注意的是DES在最后一轮后，左半部分和右半部分并
未交换，而是将R16与L16并在一起，形成一个分组作为末置换的输入。其实交换左、右两
部分并循环移动，仍将获得完全相同的结果：但这样做，就使该算法既能作加密又能解密。如
246
---
## Page 255
与S
下所示：
40.8,
48,
16,
56,
24,
64,
32,
39,
7.47.
15,
55.23,63,31,
38,
6，
46,
14,
54,
22,
62,
30,
37,
5,
45,
13,
53.
21.
61，
29
36,4,
44,
12,
52,
20,
60,
28.
35,
43,
11，
51.
19.59,27
34.2,42,
10,
50,
18,58,
26，
33,1,41,9,
49.17.57.25,
7.DES解密
在经过所有的代替、置换、异或盒循环之后，读者也许认为解密算法与加密算法完全不
同。恰恰相反，经过精心选择的各种操作，获得了一个非常有用的性质：加密和解密使用相
同的算法。
DES加密和解密唯一的不同是密钥的次序相反。如果各轮加密密钥分别是K1，K2，K3，
K16，那么解密密钥就是K16，K15，K14，，K1.为各轮产生的密钥的算法也是循环的。
密钥向右移动，每次移动的个数为0，1，2.2，2.2，2，2.1，2，2，2.2，2.2，1。
5.4.3利用VC实现的DES算法分析
算法是枯燥的，但只要我们通过实例分析，就会发现其中的奥妙。例如：已知明文
m=learming，密钥k=computer。如图5.30所示是在VC++6.0中实现的界面。
ES加E法乐序
01000
100901010111000100011000
文g
厂
图5.30DES加密算法
具体实现的算法过程如下。
明文m的ASCII二进制表示：
m=01101100 01100101 01100001 01110010 01101110 01101001 01101110 01100111
密钥k的ASCII二进制表示：
k=01100011 0110111101101101011100000111010101110100 0110010101110010
明文m经过IP置换后，得：
11111111 00001000 11010011 10100110 00000000 11111111 01110001 11011000
等分为左右两段：
L0=11111111 00001000 11010011 10100110
R000000000 11111111 01110001 11011000
247.
---
## Page 256
网络安全进阶笔记
经过16次选代后，所得结果为：
L100000000 11111111 01110001 11011000
R1=00110101 00110001 00111011 10100101
L2-00110101 00110001 00111011 10100101
R2=00010111 11100010 10111010 10000111
L300010111 11100010 10111010 10000111
R3=00111110 10110001 00001011 10000100
L400111110101100010000101110000100
R4=11110111110101111111101000111110
L5=11110111110101111111101000111110
R5=10010110011001110100111111100101
L6=10010110011001110100111111100101
R6-11001011001010000101110110100111
L7=11001011001010000101110110100111
R701100011110011101000111011011001
L801100011110011101000111011011001
R8=01001011110100001111001000000100
L901001011110100001111001000000100
R900011101001101111010111011100001
L1000011101001101111010111011100001
R10=11101110111110111111010100000101
L11=11101110111110111111010100000101
R11-01101101111011011110010111111000
L1201101101111011011110010111111000
R12=11111101110011100111000110110111
L13=11111101110011100111000110110111
R13=11100111111001011010101000000100
L14=11100111111001011010101000000100
R14=00011110010010011011100001100001
L15=00011110010010011011100001100001
R15=01010000111001001101110110100011
L16=01010000111001001101110110100011
R16-01111101101010000100110001100001
其中，f函数的结果为：
f111001010001110011110100000000011 f2=00010111000111011100101101011111
f3=00001011100000000011000000100001 f4=11100000001101010100000010111001
f5=10101000110101100100010001100001 6=00111100111111111010011110011001
711110101101010011100000100111100 f810000000111110001010111110100011
f9=01111110111110010010000000111000 f1010100101001010110000011100000001
248
---
## Page 257
第5章理解加密与解密
f11=01110000110110100100101100011001 f12=00010011001101011000010010110010
f13=10001010000010000100111111111100 f14=11100011100001111100100111010110
f15=10110111000000010111011110100111 f16=01100011111000011111010000000000
16个子密钥为：
K1=11110000101111101110111011010000K2=11100000101111101111011010010101
K3=11110100111111100111011000101000K4=11100110111101110111001000011010
K5=11101110110101110111011100100110K6=11101111110100110101101110001011
K7=00101111110100111111101111100110K8=10111111010110011101101101010000
K900011111010110111101101101000100K10=00111111011110011101110100001001
K11=00011111011011011100110101101000K12=01011011011011011011110100001010
K13=11011101101011011010110110001111 K14=11010011101011101010111110000000
K15=11111001101111101010011011010011 K16=11110001101111100010111000000001
S盒中，16次运算时，每次的8个结果为：
第一次：5,11，4.1.0.3,13.9；
第二次：7,13，15.8,12,12,13,1；
第三次：8,0.0.4.8.1，9.12；
第四次：0，7,4，1,7.6,12,4；
第五次：8,1,0,11，5.0,14,14:
第六次：14,12，13，2，7,15.14,10：
第七次：12，15,15,1,9,14.0,4；
第八次：15，8.8,3，2，3，14，5；
第九次：8,14,5.2,1,15，5,12:
第十次：2，8,13，1，9,2，10.2:
第十一次：10,15,8,2.1,12.12.3
第十二次：5.4,4.0,14,10.7.4；
第十三次：2,13，10，9.2，4.3,13；
第十四次：13.7,14，9，15,0,1，3；
第十五次：3.1.15.5,11，9.11.4
第十六次：12.3，4,6,9,3，3，0:
子密钥生成过程中，生成的数值为：
C00000000011111111111111111011
1D0=1000001101110110000001101000
C1=0000000111111111111111110110D1=0000011011101100000011010001
C2=0000001111111111111111101100D2=0000110111011000000110100010
C30000111111111111111110110000D30011011101100000011010001000
C4=0011111111111111111011000000D4=1101110110000001101000100000
C5=1111111111111111101100000000D5=0111011000000110100010000011
C6=1111111111111110110000000011D6=1101100000011010001000001101
C71111111111111011000000001111D7=0110000001101000100000110111
C8=1111111111101100000000111111D8=1000000110100010000011011101
249
---
## Page 258
网络安全进阶笔记