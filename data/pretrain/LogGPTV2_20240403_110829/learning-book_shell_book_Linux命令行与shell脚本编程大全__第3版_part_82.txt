/home /Does_not_exlat
/home /ChxIatLne /Documenta
24
说明如果你使用的是带图形化桌面的Linux发行版，那么归档整个SHOME目录时要注意。尽管
这个想法很有吸引力，但SHOME目录含有很多跟图形化桌面有关的配置文件和临时文
件。它会生成一个比你想象中大很多的归档文件。选择一个用来存储工作文件的子目录，
然后在归格配置文件中加入那个子目录。
可以让脚本读取配置文件，然后将每个目录名加到归档列表中。要实现这一点，只需要使用
read命令（参见第14章）来读取该文件中的每一条记录就行了。不过不用像之前那样（参见第
13章）通过管道将cat命令的输出传给whi1e循环，在这个脚本中我们使用exec命令（参见第14
章）来重定向标准输人（STDIN），用法如下。
---
## Page 531
516
第24章编写简单的脚本实用工具
exec /Gev/nu11
24
echo *Archive conpleted*
echo
“Resulting archive file ia: SDESTINATION*
echo
ex1t
4.运行按日归档的脚本
在测试脚本之前，别忘了修改脚本文件的权限（参见第11章）。必须赋予文件属主可执行权
限（x）才能够运行脚本。
 1s -1 Daily_Archive.sh
 chmod u+x Daily_Archive.sh
---
## Page 535
520
第24章编写简单的脚本实用工具
S 1a -1 Daily_Archive.sh
-ruxrvY--, 1 ChxiatIne Chr1acIne 1994 Aug 28 15:58 Da11y_Axchive.ah
测试Daily_Archive脚本非常简单。
S./Daily_Archive.sh
/home/Does_not_exiat, does not exiat.
Obviously, I wlll not include It in chia archive.
Continuing to bulld archive liat...
It is llsted on line 3 of the config file.
Start ing archive...
Resulting archlve fi1e 1a:/archlve/archivel40828,tar,gz
Archive completed
S 1s /archive
archive140828 tar , gzF11es_To_Backcup
你会看到这个脚本发现了一个不存在的目录：/home/Does_not_exist。脚本能够告诉你这个错
误的行在配置文件中的行号，然后继续创建列表和归档数据。现在数据已经稳妥地归档到了tarball
文件中。
5.创建按小时归档的脚本
如果你是在文件更改很频繁的高容量生产环境中，那么按日归档可能不够用。如果要将归档
频率提高到每小时一次，你还要考虑另一个因素。
在按小时备份文件时，如果依然使用date命令为每个tarball文件加人时间藏，事情很快就会
变得丑陋不堪。筛选一个含有如下文件名的目录会很乏味：
archive010211110233,car,gz
不必将所有的归档文件都放到同一目录中，你可以为归档文件创建一个目录层级。图24-1演
示了这个原则。
这个归档目录包含了与一年中的各个月份对应的目录，将月的序号作为目录名。面每月的目
录中又包含与当月各天对应的目录（用天的序号作为目录名）。这样你只用给每个归档文件加上
时间截，然后将它们放到与月日对应的目录中就行了。
首先，必须创建新目录/archive/hourly，并设置适当的权限。之前我们说过，Archivers组有权
在目录中创建归档文件。因此，这个新创建的目录也得修改它的属组以及组权限。
S sudo nkdir /archive/hourly
[audo]passuord for Chrlat ine:
S sudo chgrp Archivers /archive/hourly
/Aamog/goxe/ D- S
/xnou/oxe/2=60zds960sxuox oox *xxxxnx
---
## Page 536
24.1归档
521
 1s -1d /archive/hourly
dxwxrwxr-x, 2 root Archivera 4096 Sep
2 09:24 /archive/hour1y
基点
/archive/hourly
图24-1创建归档目录层级结构
新目录设置好之后，将按小时归档的配置文件File_To_Backup移动到该目录中。
S cat Piles_To_Backup
/bome/Development/Simulat ion_Logs
/usr/local/Production/Machine_Errors
24
$ mr Fi1es_To_Backup /archive/hourly/
现在，还有个新问题要解决。这个脚本必须自动创建对应每月和每天的目录，如果这些目录
已经存在的话，脚本就会报错。这可不是我们想要的结果！
如果仔细查看mkdir命令的命令行选项的话（参见第3章），会发现有一个-p命令行选项。这
个选项允许在单个命令中创建目录和子目录。另外，额外的福利是：就算目录已经存在，它也不
会产生错误消息。这正是我们的脚本中所需要的！
现在可以创建Hourtly_Archive.sh脚本了。以下是前脚本的前半部分。
 ! /bin/bash
 Hourly_Archive - Every hour create an. archive
---
## Page 537
522
第24章编写简单的脚本实用工具
Set Configuratlon F11e
COMFIG_pILE=/archive/hourly/P11es_To_Backup
 Set Base Archive Deatination Location
BASEDEST=/arch1ve/bour1y
 Gather Current Day, Month & Tine
DAY=S (date +ld)
TIHE=S (date +8kIM)
HOWTH=$ (date +lin)
#Create Archive Destinatlon Dlrectory
AVOS/HINORS/LS30ESYES d- xTpx
 Bul1d Axchive Destination Fi1e Bane
DESTINATION=SBASEDEST/SHOHMTH/SDAY/arch1 ve$TIME , tar gz
###*###### Hain Script ###*######*######*
[ · - · ]
一旦脚本Hourly_Archive.sh到了Main Script部分，就和Daily_Archive.sh脚本完全一样了。大
部分工作都已经完成。
Hourly_Archive.sh会从date命令提取天和月，以及用来唯一标识归档文件的时间截。然后它
用这个信息创建与当天对应的目录（如果已经存在的话，就安静地退出）。最后，这个脚本用tar
命令创建归档文件并将它压缩成一个tarball。
6.运行按小时归档的脚本
跟Daily_Archive.sh脚本一样，在将Hourly_Archive.sh脚本放到cron表中之前最好先测试一下。
脚本运行之前必须修改好权限。另外，通过date命令检查小时和分钟。知道了当前的时和分才
能够验证最终归档文件名的正确性。
S chnod u+x Hourly_Archive.sh
S date +sksH
1.011
./Boarly_Archive .ah
Starting archive...
Archive conpleted
Resulting archlve fi1e 18: /archlve/bouxly/09/02/axchive1011,tar gz
---