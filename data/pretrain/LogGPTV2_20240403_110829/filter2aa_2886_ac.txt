Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
MPI Buffer
ICM WT 1
I/O Handler
MPI Buffer
WT 1 OFFSET: 1
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
MPI Buffer
GET /1 HTTP/1.1
Body + X
X
HTTP/1.1 200 OK
HTTP/1.1 200 OK
READ
PARSE
X[x00]
Smuggling without a Proxy
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 1
I/O Handler
X[x00]
MPI Buffer
WT 1 OFFSET: 1
ICM WT 2
ICM WT 2
I/O Handler
READ
GET / HTTP/1.1
Host: SapSys.com
….
MPI Buffer
X
WT 2 OFFSET: 0
Smuggling without a Proxy
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 1
I/O Handler
ICM WT 2
ICM WT 2
I/O Handler
READ
GET / HTTP/1.1\r\n
Host: SapSys.com\r\n
Content-Length: 0\r\n
\r\n[x00]
MPI Buffer
WT 1 OFFSET: 1
MPI Buffer
GET / HTTP/1.1
WT 2 OFFSET: 55
ET /otherURL 
HTTP/1.1
Host: SapSys.com
Smuggling without a Proxy
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 1
I/O Handler
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
WT 1 OFFSET: 43
MPI Buffer
GET /otherURL
WT 2 OFFSET: 55
GET /otherURL HTTP/1.1\r\n
Host: SapSys.com\r\n
Length: 0\r\n
\r\n[x00]
HTTP/1.1 200 OK
Response for /otherURL
MPI Buffer
HTTP/1.1 200 OK
Smuggling without a Proxy
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 1
I/O Handler
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
WT 1 OFFSET: 43
MPI Buffer
GET /otherURL
WT 2 OFFSET: 55
GET /otherURL HTTP/1.1\r\n
Host: SapSys.com\r\n
Length: 0\r\n
\r\n[x00]
MPI Buffer
HTTP/1.1 200 OK
HTTP/1.1 200 OK
Smuggling without a Proxy
●
Steps:
a.
Attacker hijack MPI Buffer
b.
Victim place request in hijacked buffer
c.
Attacker tamper Victim’s request
d.
Victim receives malicious response
●
Same HTTP Smuggling exploitation
●
No proxy is required, but less reliable
●
Multi-Purpose Buffers… Requests or Response?
?
Smuggling without a Proxy
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
X[x00]
MPI Buffer
WT 1 OFFSET: 1
ICM WT 2
ICM WT 2
I/O Handler
READ
GET /A HTTP/1.1
Host: SapSys.com
….
X
ICM WT 1
I/O Handler
Response Tampering
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
WT 1 OFFSET: 1
MPI Buffer
GET /A HTTP/1.1
WT 2 OFFSET: 0
X[x00]
HTTP/1.1 200 OK
Response for A
MPI Buffer
ICM WT 1
I/O Handler
READ
X
Response Tampering
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
WT 1 OFFSET: 1
MPI Buffer
GET /A HTTP/1.1
WT 2 OFFSET: 53
MPI Buffer
HTTP/1.1 200 OK
ICM WT 1
I/O Handler
TTP 200 OK
Sap-Cache-Control: …
Content-Length: 25
READ
MPI Buffer
HTTP/1.1 200 OK\r\n
Content-Length: 14\r\n
\r\n
Response for A[x00]
Response Tampering
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
WT 1 OFFSET: 88
MPI Buffer
GET /A HTTP/1.1
WT 2 OFFSET: 53
HTTP 200 OK\r\n
Sap-Cache-Control: Max-Age=100\r\n
Content-Length: 25\r\n
\r\n
[x00]
MPI Buffer
HTTP/1.1 200 OK
ICM WT 1
I/O Handler
TTP 200 OK
Sap-Cache-Control: …
Content-Length: 25
HTTP/1.1 200 OK
Cache Handler
Response Parser
Cache Handler
Response Parser
ICM Arbitrary Cache Poisoning
ICM WT 1
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
WT 1 OFFSET: 88
MPI Buffer
GET /A HTTP/1.1
HTTP 200 OK\r\n
Sap-Cache-Control: Max-Age=100\r\n
Content-Length: 25\r\n
\r\n
[x00]
MPI Buffer
HTTP/1.1 200 OK
ICM WT 1
I/O Handler
TTP 200 OK
Sap-Cache-Control: …
Content-Length: 25
HTTP/1.1 200 OK
Cache Handler
Cache Handler
ICM Web Cache
/A
Resp
WT 2 OFFSET: 53
ICM Arbitrary Cache Poisoning
●
Steps:
a.
Attacker_1 hijack MPI Buffer
b.
Attacker_2 place target request in hijacked buffer
c.
Java generates response for Attacker_2
d.
Attacker_1 tampers response 
e.
ICM stores response in internal cache
●
Multiple HTTP connections to hijack more MPI Buffers
●
A successful attack persists malicious response
ICM Arbitrary Cache Poisoning
DEMO:
MPI Use After Free
●
Out Of Bound (OOB) MPI Buffers transfer information about the request
●
Request and Response MPI Buffer pointers are communicated through OOB
●
Read memory by modifying Response MPI pointers
○
Generate response
○
Tamper OOB Buffer
○
Replace response Buffer with target address
○
Read up to 65KB of arbitrary ICM memory
●
Tamper function pointers on OOB Buffers
○
Guess memory layout by reading ICM memory
○
Find ROP gadget to write near stack
○
Load registers and Ret2Libc (system)
RCE - OOB Use After Free
●
Hijacking OOB Buffers is not reliable (operates too fast)
●
Tampering OOB Buffers crashes the ICM (MPIfreeBuffer fails) 
●
Other option? Tamper internal Cache
●
Internal Cache stores Responses with a ﬁle header (Length, Encoding, body offset, …)
RCE - Cache Tampering
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
GET /A HTTP/1.1
MPI Buffer
HTTP/1.1 200 OK
ICM WT 1
I/O Handler
TTP 200 OK
Sap-Cache-Control: …
Content-Length: 25
HTTP/1.1 200 OK
Cache Handler
Response Parser
Cache Handler
Response Parser
ICM Cache Buffer Overﬂow
WT 1 OFFSET: 1
WT 2 OFFSET: 85
MPI Buffer
HTTP/1.1 200 OK\r\n
Content-Length: 14\r\n
Sap-Cache-Control: Max-Age=100\r\n
\r\n
Response for A[x00]
READ
Cache File
Length: 85 
GZ: 0 
Body: 71 
ICM WT 1
Java Process
Free MPI Buffer
Free MPI Buffer
Free MPI Buffer
Shared Memory
ICM WT 2
ICM WT 2
I/O Handler
MPI Buffer
GET /A HTTP/1.1
MPI Buffer
ICM WT 1
I/O Handler
TTP 200 OK
Sap-Cache-Control: …
Content-Length: 29
AAAAAAAAAAAAAA…
Cache Handler
Cache Handler
ICM Cache Buffer Overﬂow
Cache File
Length: 85 
GZ: 0 
Body: 71 
HTTP 200 OK\r\n
Sap-Cache-Control: Max-Age=100\r\n
Content-Length: 29\r\n
\r\n
AAAAAAAAAAAAAAAAAAAAAAAAA[x00]
HTTP/1.1 200 OK
MPI Buffer
WT 1 OFFSET: 96
WT 2 OFFSET: 85
HTTP 200 OK\r\n
Sap-Cache-Control: Max-Age=100\r\n
Content-Length: 29\r\n
\r\n
AAAAAAAAAAAAAAAAAAAAAAAAAAAAA[x00]
ICM WT
ICM WT
I/O Handler
GET /A HTTP/1.1
…
Req Cache Handler
ICM Web Cache
/A
Corrupt
ICM Cache Buffer Overﬂow
Cache File
Length: 85 
GZ: 0 
Body: 71 
HTTP 200 OK
Sap-Cache-Control: Max-Age=100
Content-Length: 25
[x00] 
Length: 85 
Body: 71 
HEAP Buffer 
Overflow
Solutions
●
CVE-2022-22536: CVSS 10 (AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H)
●
CVE-2022-22532: CVSS 8.1 (AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H)
●
SAP Netweaver (Java and ABAP), S/4Hana, WebDispatcher… any SAP Installation
●
SAP Security Notes: 3123396 & 3123427
●
Manual Workaround implemented at Netweaver and WebDispatcher
●
Detection Tool https://github.com/Onapsis/onapsis_icmad_scanner
●
HTTP Servers as a target 
○
Reverse Engineer with RFC in mind
○
Similar functions and workﬂow
○
Identify Requests and Responses in memory
●
Escalate low level vulnerabilities with HTTP exploitation
○
Complex architectures with multiple internal Parsers
○
Not based on “invalid” HTTP headers
○
DNS Rebinding to bypass VPNs (botnet)
●
ICMAD addressed by CISA: 
○
Critical impact
○
All SAP installations affected
○
Accessible through most exposed service (HTTP/S)
Conclusions
Questions?