### Transitioning from Syntactic to Semantic: Organizations Utilizing JXML2OWL

**Authors:**
- Toni Rodrigues¹
- Pedro Rosa²
- Jorge Cardoso³ (Contact Author)

**Affiliations:**
- ¹ SQLI, Immeuble le Pressensé, 268 Avenue du Président Wilson, 93210 La Plaine Saint-Denis, France
- ² Department of Mathematics and Engineering, University of Madeira, 9050-390 Funchal, Portugal
- ³ SAP Research CEC Dresden – SAP AG, Chemnitzer Strasse 48, 01187 Dresden, Germany
  - T +49 351 4811-6145
  - F +49 6227 78 50340

**Abstract:**
Modern enterprises face significant challenges in integrating disparate information across multiple data sources, both internal and external. Many organizations rely on XML standards for their data models. However, even with XML, integration issues arise when combining different data sources. Emerging Semantic Web technologies, such as ontologies, RDF, RDFS, and OWL, offer a promising solution for the semantic definition and integration of data. This study presents a framework, JXML2OWL, designed to assist organizations in transitioning from a syntactic data infrastructure defined in XML to a semantic data infrastructure using OWL. The framework supports mappings and fully automated instance transformations from XML data sources to a common shared global model defined by an ontology. JXML2OWL enables organizations to automatically convert their XML data sources into a semantic model defined in OWL.

**Keywords:** semantic web, ontologies, information systems integration, mapping, transformation

### 1. Introduction

The Semantic Web is a project and vision of the World Wide Web Consortium (W3C), aiming to extend the current Web by providing well-defined meanings to information, thereby enhancing cooperation between computers and humans. While the current Web is primarily human-understandable, the Semantic Web aims to make content machine-processable. To achieve this, several W3C standards, including RDF, RDFS, and OWL, have emerged. Ontologies play a crucial role in this vision, enabling data to be defined and linked in a way that facilitates discovery, integration, and re-use across various applications.

According to TopQuadrant, a consulting firm specializing in Semantic Web technologies, the market for semantic technologies is expected to grow at an annual rate of 60-70% until 2010, increasing from $2 billion to $63 billion. One of the primary commercial users of Semantic Web technologies are organizations with data integration needs, which are constantly seeking better integration solutions. Factors driving the need for data integration include company mergers, the integration of new software with legacy systems, the necessity for a unified global view of internal and external data sources, and compliance with emerging standards for B2B cooperation. According to InfoWorld’s 2002 Application Integration Survey, integration costs consumed an average of 24% of the yearly IT budget, representing millions of dollars for midsize to large companies. The year 2005 was particularly active for data integration, and companies are now increasing their budgets to address these needs more effectively.

Data integration from various sources is challenging due to several obstacles, primarily related to semantic heterogeneity. These include:
- **Syntactic Obstacles:** Different terms can refer to semantically identical concepts.
- **Semantic Obstacles:** Similar terms can have different meanings.
- **Structural Obstacles:** Information may be structured differently and use distinct data formats.

Current data integration approaches rely heavily on metadata, which is essential for easing data integration and discovery. Enterprise metadata repositories based on standards can serve as platforms for storing, accessing, and managing metadata, and can also help locate information across an organization. Semantic metadata, combined with domain-specific information, can describe contextually relevant or domain-specific information about content.

Ontologies, which are formal, explicit specifications of shared conceptualizations, are particularly suitable for representing domain models. They are not only human-understandable but also machine-processable, enabling logical reasoning and the derivation of new knowledge from existing facts. Products like Oracle 10g and Cerebra Server already use ontologies for metadata description, global domain model specification, and data integration.

The S2S (Syntactic-to-Semantic) middleware follows this paradigm, using ontologies to provide a semantic layer and transparently integrate disparate data assets, hiding details such as the distributed nature of data sources and their structure. The S2S architecture includes key modules like the Extractor, Mapper, and Instance Generator. When applications perform queries, the Extractor module extracts the necessary data, which is then transformed into instances of the ontology by the Instance Generator according to the mappings performed by the Mapper module. This approach allows organizations to view their heterogeneous data sources as a single global ontology, enabling the discovery of new knowledge, sharing of the global model, and annotation of data with metadata to ease integration and discovery.

In this paper, we focus on the Mapper and Instance Generator modules, proposing the JXML2OWL framework for mapping syntactic data in XML format to an ontology defined in OWL. The paper is organized as follows: Section 2 provides an overview of the JXML2OWL project and compares it to related works. Section 3 introduces a notation for specifying mappings between XML schema and OWL ontology and discusses important aspects of instance generation. Section 4 presents the prototype we implemented, and Section 5 concludes the paper.

### 2. Overview of JXML2OWL

The JXML2OWL project consists of two sub-projects: JXML2OWL API and JXML2OWL Mapper. The API is a generic, reusable, open-source library for mapping XML schemas to OWL ontologies on the Java platform, while the Mapper is a Java Swing application with a graphical user interface (GUI) that uses the API to facilitate the mapping process.

The goal of JXML2OWL is to develop a user-friendly, interactive, and manual mapping tool that allows users to map syntactic data in XML format to any existing OWL ontology, easing and automating the semantic data integration process. The tool supports mappings between any XML schema (XSD and DTD) and concepts (classes and properties) of any OWL ontology. Based on the mapping, the tool generates XSL documents that enable the automatic transformation of XML data into instances of the mapped ontology. XML is chosen as the input format because many commercial and scientific applications, as well as databases, support exporting data into XML. Additionally, XML is the de facto standard for B2B data exchange.

#### 2.1 Related Work

While Semantic Web technologies, especially OWL, are still emerging, there are few industry applications. Researchers are also developing specifications for semantic rules, but there is a lack of prototypes demonstrating the Semantic Web's potential. Many vendors are taking a "wait-and-see" approach as standards converge.

Despite this, numerous academic projects and theses have developed OWL applications, which can be categorized into:
- **Editors/Browsers:** Applications for creating, editing, and browsing OWL ontologies.
- **Annotation Tools:** Applications for annotating existing data with semantic context.
- **Mapping Tools:** Tools for creating correspondences/mappings between two schemas.

Most OWL applications fall into the Editor/Browser or Annotation categories. Mapping tools involving XML and OWL are rare. Our research did not find any tool supporting mappings from XML schemas to existing OWL ontologies, making JXML2OWL a unique contribution.

Several mapping tools, such as FOAM, COMA++, XML2OWL, and Lifting XML Schema to OWL, are related to JXML2OWL but differ in their objectives. For example, COMA++ supports XML schema and OWL ontology matching but does not aim to transform schema instances into ontology individuals. XML2OWL and Lifting XML Schema to OWL create new ontologies from XML schemas, whereas JXML2OWL maps XML schemas to existing ontologies, allowing for incremental addition and mapping of new data sources.

### 3. XML to OWL Mapping: Specification and Instance Transformation

This section defines a notation for specifying mappings between an XML schema and an OWL ontology. It also discusses important aspects of instance transformation.