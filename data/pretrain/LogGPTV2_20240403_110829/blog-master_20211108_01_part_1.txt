## PolarDB for PostgreSQL 开源版本 on 共享存储块设备 多机部署实践     
### 作者  
digoal  
### 日期  
2021-11-08  
### 标签  
PostgreSQL , PolarDB    
----  
## 背景  
视频回放: https://www.bilibili.com/video/BV1Yb4y1879P/  
本文描述在共享存储+多个计算节点的环境中PolarDB for PostgreSQL开源版本的部署实践.   
其中共享存储使用的是NBD设备, 这种环境比较容易获取, 你只要有服务器就可以搭建, 降低了学习PolarDB for PG的门槛.  但是不建议生产环境使用, 如果生产环境建议使用商业的SAN存储或者是商业的分布式共享块存储.  搭建方法与本文类似, 跳过NBD的部署使用其他共享块设备替代NBD即可.   
环境:   
```  
8c32G  
ecs 共享存储 , 3块网络共享盘 1台   
172.25.9.67  
ecs rw 1台   
172.25.9.68  
ecs ro 2台   
172.25.9.69  
172.25.9.70  
```  
PS: ECS需要能连接公网, 安装过程有一些获取cpan, yum等安装操作.    
PS: PolarDB for PostgreSQL 开源地址如下:  https://github.com/ApsaraDB    
### 1、部署os (所有ECS)  
参考 [《network block device(nbd) 共享网络块设备 - 用于测试RAC和PolarDB for PG共享存储版》](../202110/20211015_01.md)    
### 2、部署nbd软件 (所有ECS)  
参考 [《network block device(nbd) 共享网络块设备 - 用于测试RAC和PolarDB for PG共享存储版》](../202110/20211015_01.md)    
### 3、export nbd 共享块设备 (共享存储ECS)  
参考 [《network block device(nbd) 共享网络块设备 - 用于测试RAC和PolarDB for PG共享存储版》](../202110/20211015_01.md)    
查看用于nbd的块设备如下, 有vdb, vdc, vdd 3块盘用于nbd    
```  
[root@iZbp10sz66ubwpqzg2ry5gZ ~]# lsblk  
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT  
vda    253:0    0  100G  0 disk   
└─vda1 253:1    0  100G  0 part /  
vdb    253:16   0  100G  0 disk   
vdc    253:32   0  100G  0 disk   
vdd    253:48   0  100G  0 disk   
```  
编写nbd server配置文件, 注意nbd.conf正常配置的行末尾绝对不要存在空格, 否则会启动失败.    
```  
# vi /root/nbd.conf  
# This is a comment  
[generic]
    # The [generic] section is required, even if nothing is specified  
    # there.  
    # When either of these options are specified, nbd-server drops  
    # privileges to the given user and group after opening ports, but  
    # _before_ opening files.  
    # user = nbd  
    # group = nbd  
    listenaddr = 0.0.0.0
    port = 1921
[export1]
    exportname = /dev/vdb
    readonly = false
    multifile = false
    copyonwrite = false
    flush = true
    fua = true
    sync = true
[export2]
    exportname = /dev/vdc
    readonly = false
    multifile = false
    copyonwrite = false
    flush = true
    fua = true
    sync = true
[export3]
    exportname = /dev/vdd
    readonly = false
    multifile = false
    copyonwrite = false
    flush = true
    fua = true
    sync = true
```  
启动nbd-server    
```    
# nbd-server -C /root/nbd.conf     
```    
```  
# netstat -anp|grep 1921  
tcp        0      0 0.0.0.0:1921            0.0.0.0:*               LISTEN      1296/nbd-server   
```  
### 4、挂载nbd共享块设备 (rw, ro ECS)  
参考 [《network block device(nbd) 共享网络块设备 - 用于测试RAC和PolarDB for PG共享存储版》](../202110/20211015_01.md)    
重启服务器后, 必须modprobe nbd加载模块, 再挂载nbd    
```  
nbd-client 172.25.9.67 1921 -N export1 /dev/nbd0     
nbd-client 172.25.9.67 1921 -N export2 /dev/nbd1   
nbd-client 172.25.9.67 1921 -N export3 /dev/nbd2    
```  
```  
[root@iZbp13tgwor95f2508zo4oZ ~]# nbd-client 172.25.9.67 1921 -N export1 /dev/nbd0     
Negotiation: ..size = 102400MB  
bs=1024, sz=107374182400 bytes  
[root@iZbp13tgwor95f2508zo4oZ ~]# nbd-client 172.25.9.67 1921 -N export2 /dev/nbd1   
Negotiation: ..size = 102400MB  
bs=1024, sz=107374182400 bytes  
[root@iZbp13tgwor95f2508zo4oZ ~]# nbd-client 172.25.9.67 1921 -N export3 /dev/nbd2    
Negotiation: ..size = 102400MB  
bs=1024, sz=107374182400 bytes  
```  
```  
vi /etc/rc.local  
nbd-client 172.25.9.67 1921 -N export1 /dev/nbd0     
nbd-client 172.25.9.67 1921 -N export2 /dev/nbd1     
nbd-client 172.25.9.67 1921 -N export3 /dev/nbd2     
#nbd-client -d /dev/nbd0  
#nbd-client -d /dev/nbd1  
#nbd-client -d /dev/nbd2  
```  
### 5、安装pfs软件 (rw, ro ECS)  
https://github.com/ApsaraDB/PolarDB-for-PostgreSQL/blob/POLARDB_11_STABLE/README-CN.md#%E6%96%B9%E5%BC%8F3%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8Enbd%E5%85%B1%E4%BA%AB%E5%AD%98%E5%82%A8%E7%9A%84%E5%AE%9E%E4%BE%8B  
https://github.com/ApsaraDB/PolarDB-FileSystem/blob/master/Readme-CN.md  
```  
yum install -y cmake3 gcc gcc-c++ libaio-devel git unzip    
ln -s /usr/bin/cmake3 /usr/bin/cmake  
```  
https://github.com/HardySimpson/zlog/releases  
```  
wget https://github.com/HardySimpson/zlog/archive/refs/tags/1.2.15.tar.gz  
tar -zxvf 1.2.15.tar.gz  
cd zlog-1.2.15/  
make  
make install  
echo "/usr/local/lib" >> /etc/ld.so.conf  
ldconfig
ldconfig -v|grep zlog  
 ... ...   
	libzlog.so.1.2 -> libzlog.so.1.2  
```  
```  
su - root
cd ~
# 注意分支, 建议使用stable分支或者release分支, 具体请参考对应文档说明.
git clone https://github.com/ApsaraDB/PolarDB-FileSystem  
cd PolarDB-FileSystem  
./autobuild.sh   
... ...  
[100%] Linking CXX executable ../../../bin/pfsdaemon  
[100%] Built target pfsdaemon  
~/PolarDB-FileSystem-master  
 end compile, binary's in ./bin, library's in ./lib   
./install.sh  
install pfsd success!  
```  
### 6、配置pfs (rw, ro ECS)  
不同块设备可以创建不同的路径, 同一个块设备里面也可以创建不同的目录. 通过这种方式将块设备映射到目录, 从而映射到数据库的表空间.   
块设备重命名  
PFS仅支持特定字符开头的块设备进行访问，建议所有块设备访问节点都通过软链接使用相同名字访问共享块设备。  
NBD客户端主机上执行：  
```  
ln -s /dev/nbd0 /dev/nvme0n1  
ln -s /dev/nbd1 /dev/nvme0n2  
ln -s /dev/nbd2 /dev/nvme0n3  
```  
块设备初始化  
注意: 只在RW节点执行PFS操作来格式化共享块设备即可：  
```  
pfs -C disk mkfs nvme0n1  
pfs -C disk mkfs nvme0n2  
pfs -C disk mkfs nvme0n3  
...  
pfs mkfs succeeds!  
```  
块设备挂载  
在RW, RO节点上，分别启动PFS，挂载共享盘：  
```  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n1  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n2  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n3  
...  ...    
pfsdaemon nvme0n1 start success  
pfsdaemon nvme0n2 start success  
pfsdaemon nvme0n3 start success  
```  
```  
vi /etc/rc.local  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n1  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n2  
/usr/local/polarstore/pfsd/bin/start_pfsd.sh -p nvme0n3  
# /usr/local/polarstore/pfsd/bin/stop_pfsd.sh nvme0n1  
# /usr/local/polarstore/pfsd/bin/stop_pfsd.sh nvme0n2  
# /usr/local/polarstore/pfsd/bin/stop_pfsd.sh nvme0n3  
```  
### 7、安装polardb软件 (rw, ro ECS)  
[《PolarDB for PostgreSQL 开源版 - 计算存储分离版(类似Oracle RAC架构) 部署指南》](../202109/20210901_01.md)    
```      
su - root  
yum install -y readline-devel zlib-devel perl-CPAN bison flex git       
cpan -fi Test::More IPC::Run      
```      
```      
useradd polardb    
su - polardb      
cd ~      
wget https://github.com/ApsaraDB/PolarDB-for-PostgreSQL/archive/refs/heads/POLARDB_11_STABLE.zip     
unzip POLARDB_11_STABLE.zip
cd PolarDB-for-PostgreSQL-POLARDB_11_STABLE  
./polardb_build.sh --noinit --with-pfsd  
```     
### 8、初始化rw节点 (rw ECS)  
```      
su - polardb  
cd ~
$HOME/tmp_basedir_polardb_pg_1100_bld/bin/initdb -D primary -E UTF8 --lc-collate=C --lc-ctype=en_US.utf8 -U polardb  
# 共享存储初始化  
su - root  
pfs -C disk mkdir /nvme0n1/shared_data  
# 这一这一步也是用root执行
/home/polardb/tmp_basedir_polardb_pg_1100_bld/bin/polar-initdb.sh /home/polardb/primary/ /nvme0n1/shared_data/  
```  
节点配置  
```  
su - polardb  
cd ~/primary  # 注意  
```  
打开postgresql.conf，增加以下配置项：  
```  
listen_addresses = '0.0.0.0'		  
port = 5432				  
max_connections = 1000			  
unix_socket_directories = '., /tmp'	  
tcp_keepalives_idle = 60		  
tcp_keepalives_interval = 10		  
tcp_keepalives_count = 10		  
shared_buffers = 8GB			  
maintenance_work_mem = 1GB		  
dynamic_shared_memory_type = posix	  
parallel_leader_participation = off  
random_page_cost = 1.1			  
log_destination = 'csvlog'		  
logging_collector = on		  
log_directory = 'log'			  
log_truncate_on_rotation = on		  
log_checkpoints = on  
log_connections = on  
log_disconnections = on  
log_error_verbosity = verbose    
log_lock_waits = on			  
log_statement = 'ddl'			  
log_timezone = 'Asia/Shanghai'  
log_autovacuum_min_duration = 0	  
autovacuum_vacuum_cost_delay = 0ms	  
datestyle = 'iso, mdy'  
timezone = 'Asia/Shanghai'  
lc_messages = 'en_US.UTF-8'			  
lc_monetary = 'en_US.UTF-8'			  
lc_numeric = 'en_US.UTF-8'			  
lc_time = 'en_US.UTF-8'				  
default_text_search_config = 'pg_catalog.english'  
polar_hostid=1  # 注意  
polar_enable_shared_storage_mode=on  
polar_disk_name='nvme0n1' # 注意  
polar_datadir='/nvme0n1/shared_data/'  # 注意  
polar_vfs.localfs_mode=off  
shared_preload_libraries='$libdir/polar_vfs,$libdir/polar_worker'  
polar_storage_cluster_name='disk'  
synchronous_standby_names='replica1, replica2'  # 注意  
```  
打开pg_hba.conf，增加以下配置项：  
```  
host	replication	polardb	 172.25.9.68/32	trust  