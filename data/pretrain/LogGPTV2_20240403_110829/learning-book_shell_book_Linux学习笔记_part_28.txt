KDE桌面环境下，大家一般都用kpPp拔号工具，点鼠标就可以完成；
wvdial工具是文本的，儿乎在各大发行版都有。wvdial的配置文件是/etc/wvdial.conf。如果您
的猫已经驱动好了，运行一下wvdialconf命令就生成了/etc/wvdial.conf了。当然您得查看一下它
的内容：
1.[rootélocalhost ~]# wvdialconf
2.[rootélocalhost ~]# more /etc/wvdial. conf
关于wvdial工具的使用，请查者《普通56k猫拔号上网工具wvdial介绍》
6、无线网卡：
正在更新之中：由于我没有这样的网卡，是否有弟兄写一篇详尽一点的？在所有涉及无线网卡的文
7、DNS 客户端配置文件/etc/resolv.conf;
本来不应该把DNS客户端配置文件放在这里来说，但由于新手弟兄上网时，虽然能拔号，但不能以
域名访问。究其原因是由于没有修改/etc/resolv.conf 文件：
/etc/resolv.conf里面存放的是各大通信公司DNS服务器列表：下面的三个地址可以用一用：当
然您可以打电话问你的服务商：
1. nameserver 202. 96. 134. 133
2.nameserver 202. 96. 128. 143
3.nameserver 202. 96. 68. 38
本文写了常用的乙太网接口的配置，介绍了Linux ifconfig、netconfig等，我感觉最重要的还
是配置文件，新手弟兄还是仔细看看配置文件吧。当您用工具配置完成后，不妨查看一下相应配置文件
的变化。我认为这样的学习方式，能知其然，然后知所以然：
---
## Page 119
7.10、tcpdump
tcpdump是一个用于截取网络分组，并输出分组内容的工具。tcpdump凭借强大的功能和灵活的截
取策略，使其成为类UNIX系统下用于网络分析和问题排查的首选工具。
tcpdump提供了源代码，公开了接口，因此具备很强的可扩展性，对于网络维护和入侵者都是非常
有用的工具。tcpdump存在于基本的Linux系统中，由于它需要将网络界面设置为混杂模式，普通用户
不能正常执行，但具备root权限的用户可以直接执行它来获取网络上的信息。因此系统中存在网络分
析工具主要不是对本机安全的威胁，而是对网络上的其他计算机的安全存在威胁。
7.1.1概述
顾名思义，tcpdump可以将网络中传送的数据包的“头”完全截获下来提供分析。它支持针对网络层、
协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你去掉无用的信息。
引用
# tcpdump vv
tcpdump: listening on eth0, 1inktype EN10MB (Ethernet), capture size 96 bytes
11:53:21. 444591 IP (tos 0x10, tt1 64, id 19324, offset 0, flags [DF], proto 6, 1ength: 9
2) asptest. 1ocaldomain. ssh > 192. 168. 228. 244. 1858: P 3962132600:3962132652 (52) ack 272652
5936 win 1266
asptest. 1oca1domain. 1077 > 192. 168. 228. 153. domain: [bad udp cksum 166e1]  325+ PTR? 244. 2
28. 168. 192. inaddr. arpa. (46)
11:53:21. 446929 IP (tos 0x0, ttl 64, id 42911, offset 0, flags [DF], proto 17, 1ength: 1
51) 192. 168. 228. 153. domain > asptest, 1ocaldomain. 1077:  325 NXDomain q: PTR? 244. 228. 168.
192. inaddr. arpa. 0/1/0 ns: 168. 192. inaddr. arpa. (123)
11:53:21. 447408 IP (tos 0x10, tt1 64, id 19328, offset 0, flags [DF], proto 6, 1ength: 1
72) asptest. 1oca1domain. ssh > 192. 168. 228. 244. 1858: P 168:300 (132) ack 1 win 1266
347 packets captured
1474 packets received by filter
745 packets dropped by kerne1
不带参数的tcpdump会收集网络中所有的信息包头，数据量巨大，必须过滤。
7.1.2、命令介绍
命令格式为：tcpdump[-nn][-i接口][w储存档名][c次数][-Ae]
[-qX][-r文件][所欲捕获的数据内容]
参数：
-nn，直接以IP 及Port Number 显示，而非主机名与服务名称。
-i，后面接要“监听”的网络接口，例如 eth0，lo，Ppp0 等等的接口。
w，如果你要将监听所得的数据包数据储存下来，用这个参数就对了。后面接文件名。
c，监听的数据包数，如果没有这个参数，tcpdump会持续不断的监听，
直到用户输入[ctrl]-c为止。
-A，数据包的内容以ASCII显示，通常用来捉取WMW的网页数据包资料。
re，使用资料连接层（OSI第二层）的MAC数据包数据来显示。
---
## Page 120
q，仅列出较为简短的数据包信息，每一行的内容比较精简。
-X，可以列出十六进制（hex）以及ASCII的数据包内容，对于监听数据包内容很有用。
-r，从后面接的文件将数据包数据读出来。那个“文件”是已经存在的文件，并且这个“文件”是由
-所制作出来的。所欲插获的数据内容：我们可以专门针对某些通信协议或者是IP来源进行数据包
捕获。
那就可以简化输出的结果，并取得最有用的信息。常见的表示方法有。
hostfoo”，“host127.0.0.1’：针对单台主机来进行数据包捕获。
net192.168”：针对某个网段来进行数据包的捕获。
src host 127.0.0.1’*dst net192.168”：同时加上来源（src)或目标(dst）限制。
tcp port 21'：还可以针对通信协议检测，如 tcp、udp、arp、ether 等。
除了这三种类型的关键字之外，其他重要的关键字如下：gateway，broadcast，less,
范例一：以IP与PortNumber捉下eth0这个网卡上的数据包，持续3秒
[rootelinux ~]# tcpdump i eth0 nn
tcpdump: verbose output suppressed, use v or vv for full protocol decode
listening on eth0, linktype EN10MB (Ethernet), capture size 96 bytes
01:33:40. 41 IP 192. 168. 1. 100. 22 > 192. 168. 1. 11. 1190: P 116:232 (116) ack 1 win
9648
01:33:40. 41 IP 192. 168. 1. 100. 22 > 192. 168. 1. 11. 1190: P 232:364 (132) ack 1 win
9648
：传送端是192.168.1.100 这个IP,而传送的 Port Number为22，那个大于（>)
的符号指的是数据包的传输方向。
·192.168.1.11.1190：接收端的IP是192.168.1.11，且该主机开启 port 1190 来接收。
·P116:232（116)：这个数据包带有PUSH的数据传输标志，且传输的数据为整体数据的116~232Byt
e，所以这个数据包带有116Bytes的数据量。
·ack 1 win 9648：ACK与 Window size 的相关资料。
最简单的说法，就是该数据包是由192.168.1.100 传到192.168.1.11，通过的port 是由 22到1190，
且带有116Bytes的数据量，使用的是PUSH的标记，而不是SYN之类的主动联机标志。
---
## Page 121
接下来，在一个网络状态很忙的主机上面，你想要取得某台主机对你联机的数据包数据时，使用tcpdu
mp配合管线命令与正则表达式也可以，不过，毕竞不好捕获。我们可以通过tcpdump的表达式功能，
就能够轻易地将所需要的数据独立的取出来。在上面的范例一当中，我们仅针对eth0做监听，所以整
个etho接口上面的数据都会被显示到屏幕上，但这样不好分析，可以简化吗？例如，只取出port 21
的联机数据包，可以这样做：
[Z 4.1od uu0u4a [ dunpdo #[_ xnu1[e4oo.1]
tcpdump: verbose output suppressed, use -v or vv for full protocol decode
listening on eth0, linktype EN10MB (Ethernet), capture size 96 bytes
01:54:37. 96 IP 192. 168. 1. 11. 1240 > 192. 168. 1. 100. 21:. ack 1 vin 65535
01:54:37. 96 1P 192. 168. 1. 100. 21 > 192. 168. 1. 11. 1240:P 1:21 (20) ack 1 win 5840
01:54:38. 12 1P 192. 168. 1. 11. 1240 > 192. 168. 1. 100. 21:. ack 21 win 65515
01:54:42. 79 IP 192. 168. 1. 11. 1240 > 192. 168. 1. 100. 21:P 1:17 (16) ack 21 win 65515
01:54:42. 79 IP 192. 168. 1. 100. 21 > 192. 168. 1. 11. 1240: . ack 17 win 5840
01:54:42. 79 1P 192. 168. 1. 100. 21 > 192. 168. 1. 11. 1240: P 21:55 (34) ack 17 win 5840
看！这样就仅取出port 21的信息，如果仔细看的话，你会发现数据包的传递都是双向的，Client 端
发出请求而Server端则予以响应，所以，当然是有去有回了。而我们也就可以经过这个数据包的流向
来了解到数据包运动的过程了。例如：
·我们先在一个终端机窗口输入“tcpdump-ilo-nn”的监听。
uuo[ Idunpdo #[_ xnu![@4oo.1]
1 tcpdump: verbose output suppressed, use v or vv for full protocol decode
2 listening on 1o, 1inktype EN10MB (Ethernet), capture size 96 bytes
3 11:02:54. 253777 IP 127. 0. 0. 1. 32936 )
127. 0. 0. 1. 22: S 933696132:933696132 (0)
win 32767
4 11:02:54. 253831 IP 127. 0. 0. 1. 22 > 127. 0. 0. 1. 32936:
S 920046702: 920046702 (0)
ack 933696133 win 32767
5 11:02:54. 253871 IP 127. 0. 0. 1. 32936 > 127. 0. 0. 1. 22: . ack 1 win 8192
6 11:02:54. 272124 IP 127. 0. 0. 1. 22 > 127. 0. 0. 1. 32936:
P 1:23 (22) ack 1 win 8192
7 11:02:54. 272375 IP 127. 0. 0. 1. 32936 > 127. 0. 0. 1. 22: - ack 23 win 8192
代码显示的头两行是tcpdump的基本说明，然后：
·第3行显示的是来自Client端带有SYN主动联机的数据包。
·第4行显示的是来自 Server端，除了响应Client端之外（ACK），还带有SYN主动联机的标志。
·第5行则显示Client端响应Server确定联机建立（ACK）。
·第6行以后则开始进入数据传输的步骤。
---
## Page 122
从第3~5行的流程来看，熟不熟悉啊？没错。那就是3次握手的基础流程，有趣吧。不过tcpdump之所
以被称为黑客软件之一远不止上面介绍的功能。上面介绍的功能可以用来作为我们主机的数据包联机与
传输的流程分析，这将有助于我们了解到数据包的运作，同时了解到主机的防火墙设置规则是否有需要
修订的地方。
还有更神奇的用法。当我们使用tcpdump在Router上面监听明文的传输数据时，例如 FTP传输协议，
你觉得会发生什么间题呢？我们先在主机端执行“tcpdump-i1oport 21-nn-X”，然后再以 FTP
登录本机，并输入账号与密码，结果你就可以发现如下的状况：
I7 4xod xuuoI  dunpdo #[ xnu[e4oo.1]
0x0000:  4500 0048 2a28 4000 4006 1286 7f00 0001 E..H*(@.@...-...
0x0010: 7f00 0001 0015 80ab 8355 2149 835c d825 -..--....U!I.\. %
0x0020: 8018 2000 fe3c 0000 0101 080a 0e2e 0b67 .............2
0x0030: 0e2e 1b38 5041 5353 206d 7970 6173 7377 -.. 8PASS.mypassw
0x0040:  6f72 6469 7379 6f75 0d0a
ordisyou. 
上面的输出结果已经被简化过了，你需要自行在你的输出结果中搜索相关的字符串才行。从上面输出结
果的特殊字体中，我们可以发现该FTP软件使用的是vsFTPd，并且用户输入dmtsai这个账号名称，且
密码是mypasswordisyou。如果使用的是明文方式来传输你的网络数据呢？
另外你得了解，为了让网络接口可以让tcpdump监昕，所以执行tcpdump时网络接口会启动在“混杂模
式（promiscuous）”，所以你会在/var/log/messages 里面看到很多的警告信息，通知你说你的网卡被
设置成为混杂模式。别担心，那是正常的。至于更多的应用，请参考mantcpdump了。
例题：如何使用tcpdump监听来自eth0适配卡且通信协议为port 22，目标来源为192.168.1.100 的
数据包资料？
答: tcpdump i eth0 nn port 22 and src host 192. 168. 1. 100
例题：如何使用 tcpdump 抓取访间eth0适配卡且访问端口为tcp 9080？
答:tcpdump i eth0 dst 172. 168. 70. 35 and tcp port 9080
例题：如何使用tcpdump抓取与主机192.168.43.23或着与主机192.168.43.24通信报文，并且显示在
控制台上
答: tcpdump X s 1024 i eth0 host \(192. 168. 43. 23 or 192. 168. 43. 24\) and host 172. 16. 7
0. 35
---
## Page 123
注：必须指定网卡
7.1.3、tcpdump的表达式介绍
表达式是一个正则表达式，tcpdump利用它作为过滤报文的条件，如果一个报文满足表达式的条件，
则这个报文将会被捕获。如果没有给出任何条件，则网络上所有的信息包将会被截获。
在表达式中一般如下几种类型的关键字：
引用
第一种是关于类型的关键字，主要包括host，net，port，例如 host 210.27.48.2，指明 210.27.48.
2是一台主机，net 202.0.0.0指明 202.0.0.0是一个网络地址，port 23指明端口号是23。如果没有
指定类型，缺省的类型是host。
第二种是确定传输方向的关键字，主要包括 src，dst，dst or src，dst and src，这些关键字指明
了传输的方向。举例说明，src 210.27.48.2，指明ip包中源地址是210.27.48.2，dstnet 202.
0.0.0指明目的网络地址是202.0.0.0。如果没有指明方向关键字，则缺省是src or dst关键字。
第三种是协议的关键字，主要包括fddi，ip，arp，rarp，tcp，udp等类型。Fddi指明是在FDDI（分
布式光纤数据接口网络）上的特定的网络协议，实际上它是”ether”的别名，fddi和ether具有类似
的源地址和目的地址，所以可以将fddi协议包当作ether的包进行处理和分析。其他的儿个关键字就
是指明了监听的包的协议内容。如果没有指定任何协议，则tcpdump将会监听所有协议的信息包。
除了这三种类型的关键字之外，其他重要的关键字如下：gateway，broadcast，less，greater，
，，u，非三
&#124：：这些关键字可以组合起来构成强大的组合条件来满足人们的需要。
四、输出结果介绍
下面我们介绍儿种典型的tcpdump命令的输出信息
(1）数据链路层头信息
使用命令：
#tcpdump —e host ICE
ICE是一台装有1inux的主机。它的MAC地址是0：90：27：58:AF：1AH219是一台装有Solaris 的
SUN工作站。它的MAC地址是8：0：20：79：5B：46：上一条命令的输出结果如下所示：
引用
21:50:12. 847509 eth0  ICE. te1ne t
0 : 0 (0) ack 22535 win 8760 (DF)
21：50：12是显示的时间，847509是ID号，eth0表示
从网络接口设备发送分组，8：0:20：79：5b：46是主机H219的MAC地址，它表明是从源地址H219发来
的分组.0:90:27:58:af:1a是主机ICE的MAC地址，表示该分组的目的地址是ICE。ip 是表明该分
组是IP分组，60是分组的长度，h219.33357 >ICE.telnet 表明该分组是从主机H219的33357端
口发往主机ICE的 TELNET(23)端口。ack 22535表明对序列号是222535 的包进行响应。win 8760
表明发送窗口的大小是8760。
(2)ARP 包的 tcpdump 输出信息
使用命令：
#tcpdump arp
---
## Page 124
得到的输出结果是：
引用
22:32:42. 802509 eth0 > arp who-has route te11 ICE (0:90:27:58:af:1a)
22:32:42. 802902 eth0 表明从主机发出该分组，arp表明是ARP请求包，who
-has route te11 ICE表明是主机ICE请求主机 route 的 MAC 地址。0:90:27:58:af:1a 是主机 ICE 的
MAC 地址。
(3）TCP包的输出信息
用 tcpdump捕获的TCP包的一般输出信息是：
引用
src > dst: flags dataseqno ack window urgent options
src>dst:表明从源地址到目的地址，flags是TCP报文中的标志信息，S 是SYN标志，F（FIN)，
P（PUSH)，R（RST）*.”（没有标记）：data-seqno 是报文中的数据 的顺序号，ack是下次期望的顺
序号，window是接收缓存的窗口大小，urgent 表明报文中是否有紧急指针。Options 是选项。
(4）UDP包的输出信息
用 tcpdump捕获的UDP包的一般输出信息是：
引用
route. port1 > ICE. port2: udp lenth
UDP十分简单，上面的输出行表明从主机route 的 port1端口发出的一个UDP报文到主机ICE的port
2端口，类型是UDP，包的长度是lenth。
五、举例
（1）想要截获所有210.27.48.1的主机收到的和发出的所有的分组：
#tcpdump host 210. 27. 48. 1
(2）想要截获主机210.27.48.1和主机210.27.48.2或210.27.48.3的通信，使用命令（注意：括号
前的反斜杠是必须的）：
#tcpdump host 210. 27. 48. 1 and ^(210. 27. 48. 2 or 210. 27. 48. 3 \)
(3)如果想要获取主机210.27.48.1除了和主机210.27.48.2 之外所有主机逾信的 ip 包，使用命令：
282 01 1 p 18201 1 d1 #
（4）如果想要获取主机192.168.228.246接收或发出的ssh包，并且不转换主机名使用如下命令：
#tcpdump nn n src host 192. 168. 228. 246 and port 22 and tcp
(5）获取主机192.168.228.246接收或发出的ssh包，并把mac地址也一同显示：
u u do1 pue 2 41od pue 91z 82z 891 761 4soq o.1s a dmmpdo1 #
(6）过滤的是源主机为192.168.0.1与目的网络为192.168.0.0的报头：
tcpdump src host 192. 168. 0. 1 and dst net 192. 168. 0. 0/24
（7）过滤源主机物理地址为XXX的报头：
tcpdump ether src 00:50:04:BA:9B and dst**
（为什么ether src后面没有host或者net?物理地址当然不可能有网络喽）。
(8）过滤源主机192.168.0.1和目的端口不是telnet 的报头，并导入到tes.t.txt文件中：
---
## Page 125
Tcpdump src host 192. 168. 0. 1 and dst port not telnet 1 > test. txt
ipicmp arprarp 和 tcp、udp、icmp 这些选项等都要放到第一个参数的位置，用来过滤数据报的类
型。
十五、配置文件
1、配置文件介绍：
每个Linux程序都是一个可执行文件，它含有操作码列表，CPU将执行这些操作码来完成特定的操作。
例如，1s命令是由/bin/1s文件提供的，该文件含有机器指令的列表，在屏幕上显示当前目录中文件
的列表时需要使用这些机器指令。几乎每个程序的行为都可以通过修改其配置文件来按照您的偏好或需
要去定制。
Linux中有没有一个标准的配置文件格式？
一句话，没有。不熟悉Linux的用户（一定）会感到沮丧，因为每个配置文件看起来都象是一个要迎
接的新挑战。在Linux中，每个程序员都可以自由选择他或她喜欢的配置文件格式。可以选择的格式
很多，从/etc/shells 文件（它包含被一个换行符分开的shel1的列表），到Apache 的复杂的
/etc/httpd.conf 文件。
什么是系统配置文件？