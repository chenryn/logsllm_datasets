(100ms, 0.1)
Lossy links (D, pL)
Figure 3. S1 in lossy networks
6.3. The Service S2
Description. Roughly speaking, the leader election algo-
rithm of S2, denoted Ωlc, works as follows (a detailed de-
scription appears in [4]). Each process p keeps track of the
last time it was suspected of having crashed, called p’s ac-
cusation time, and p selects its leader among a set of pro-
cesses that is constructed in two stages. In the ﬁrst stage, p
selects its local leader as the process with the earliest accu-
sation time among the processes that p believes to be alive
(i.e., among the processes from which p recently received
an alive message). In the second stage, p selects its (global)
leader as the local leader with the earliest accusation time
among the local leaders of the processes that p believes to
4This is not surprising since we set the QoS of the FD to make at most
one mistake every 100 days (per monitored process).
be alive. This (local) leader forwarding mechanism makes
the algorithm robust in the face of link failures. In fact, [4]
shows that Ωlc works in a system where every link can be
lossy or permanently crash, except for the outgoing links of
some non-faulty process (these links must be timely).
)
s
d
n
o
c
e
s
(
r
T
1.3
1.2
1.1
1.0
0.9
0.8
0.7
0.6
10
)
r
u
o
h
/
s
e
k
a
t
s
i
m
(
u
λ
8
6
4
2
0
S1 (cid:5) S2 ×
×
3
×
3
×
3
×
3
×
3
(0.025ms, 0) (10ms, 0.01) (100ms, 0.01) (10ms, 0.1)
(100ms, 0.1)
3
×
3
×
3
×
3
×
3
×
(0.025ms, 0) (10ms, 0.01) (100ms, 0.01) (10ms, 0.1)
(100ms, 0.1)
1.0
r
e
d
a
e
l
P
0.999
0.998
0.997
×
3
×
3
×
3
×
3
×
3
(0.025ms, 0) (10ms, 0.01)(100ms, 0.01) (10ms, 0.1) (100ms, 0.1)
Lossy links (D, pL)
Figure 4. S1 and S2 in lossy networks
Experimental Evaluation. We compared S2 to S1 with
the same settings as in the previous experiments (see Fig-
ure 4). First note that, in contrast to S1, S2 was perfectly
stable: in each of the 5 networks considered, λu = 0, i.e.,
no unjustiﬁed demotions occurred. This is a remarkable re-
sult given the high rate of failures and recoveries (recall that
each workstation crashes and recovers every 10 minutes on
average) and the very poor quality of the links in some of
the networks considered.
The average leader recovery time of S2, however, is
slightly larger than the one of S1 (this is due to the leader
forwarding mechanism of S2 which slightly delays the de-
motion of a crashed leader). Despite this fact, thanks to its
excellent stability, S2 has a better leader availability than
S1 in all 5 networks. In fact, the availability of S2 is sur-
prisingly high: even when every link drops one message
out of 10 (on average), the average message delay is 100ms,
and every workstation crashes about every 10 minutes, S2
provides a leader 99.82% of the time.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE213DSN 2008: Schiper & TouegWith both S1 and S2, however, the number of alive mes-
sages that are periodically exchanged is quadradic with the
number of processes in the group. We now consider a leader
election service with a smaller “message-overhead”.
6.4. The Service S3
Description. The service S3 is based on a leader election al-
gorithm, denoted Ωl, that is communication-efﬁcient: even-
tually only the elected leader transmits alive messages [2].
As with Ωlc, processes select their leader as the process
with the smallest accusation time among a set of processes
that compete for leadership. Communication-efﬁciency is
achieved by reducing the set of competing processes, as fol-
lows. First, a process p considers that a process q is com-
peting for leadership only if p receives an alive message
directly from q. Second, if p ﬁnds that a competing process
q has a smaller accusation time (and hence q is a better can-
didate for leadership than p), p voluntarely drops from the
competition for leadership by stopping to send alive mes-
sages. Note that if p stops sending alive messages, other
processes may think that p crashed, even though this is not
the case. The algorithm includes a mechanism to ensure that
such false suspicions do not increase p’s accusation time.
Experimental Evaluation. We compared S3 to S2 with the
same settings as before. Overall, our experiments showed
that the message-efﬁcient S3 is essentially as good as S2 in
networks with lossy links (see Figure 5).
First, S3 was exceptionally stable: as with S2, in all our
experiments S3 never demoted an operational leader (we do
not show the graph for λu here, since, for all 5 network set-
tings, λu = 0 for both S3 and S2). Second, the average
leader recovery times of S3 and S2 were very similar: they
were both close to the 1 second upper-bound on the time to
detect a crash that we chose for the underlying FD. Third,
even in the worst of all 5 network settings (where each of
the 12 processors crashes every 10 minutes, each of the 132
links loses 1 every 10 messages, and the average message
delay and its standard deviation is 100ms) both services pro-
vide an operational leader at least 99.82 percent of the time.
6.5. Trade-oﬀ between S2 and S3
The previous results indicate that in networks with lossy
links, both S2 and S3 behave well. In contrast to S3, how-
ever, the leader election algorithm of S2 was originally de-
signed to tolerate some permanent link crashes in addition
to lossy links, and so S2 is potentially more robust than S3
in extreme network conditions. As we shall see in this sec-
tion, there is indeed a tradeoff between overhead and robust-
ness: our experiments here indicate that while S3 is more
scalable than S2, S2 performs better than S3 in networks
with frequent link crashes.
CPU and bandwidth overhead. The graphs of Figure 6
show the overhead that S2 and S3 impose on the system
S2 × S3 +
×
+
×
+
)
s
d
n
o
c
e
s
(
r
T
1.3
1.2
1.1
1.0
0.9
0.8
0.7
0.6
×
+
+
×
×
+
(0.025ms, 0) (10ms, 0.01) (100ms, 0.01) (10ms, 0.1)
(100ms, 0.1)
1.0
r
e
d
a
e
l
P
0.999
0.998
0.997
×
+
×
+
×
+
×
+
×
+
(0.025ms, 0) (10ms, 0.01) (100ms, 0.01) (10ms, 0.1)
(100ms, 0.1)
Lossy links (D, pL)
Figure 5. S2 and S3 in lossy networks
in terms of CPU and network bandwidth usage. Speciﬁ-
cally, they show the overhead that we measured (per work-
station) when we run S2 and S3 on 4, 8 or 12 workstations,
in two very different networks: our (real) local area net-
work, where the average message delay is 0.025 millisecond
and there is practically no message loss, and a (simulated)
network with lossy links, where the average message delay
is 100ms and the probability of message loss is 1/10.
In
all cases, the QoS of the underlying FD is set to the usual
default values explained in Section 6.1.
Note that when the number of workstations increases,
the CPU and network utilization of S2 grow more or less
quadratically, but with S3 they grow only linearly. When
the network quality degrades, the overhead of both services
also increases. Overall, we can say that both services are
lightweight in terms of CPU overhead:
in the worst-case
here S3 takes less than 0.04% of the CPU, and S2 takes
at most 0.3% of the CPU. In terms of network bandwidth,
in the worst-case S3 generates at most 6.48 KB/second of
message trafﬁc per workstation, while S2 generates 62.38
KB/s per workstation (which is considerably higher but still
reasonable for many networks).
Robustness. We now compare the robustness of S2 and
S3 in particularly chaotic environments. In our experiments,
we run each service on a network of 12 workstations where
(on average): (1) every workstation crashes (and later re-
covers) every 10 minutes, and (2) every link crashes every
10 minutes, every 5 minutes, or every minute, for a duration
of 3 seconds on average after each crash.5 The results are
shown in Figure 7.
5When a link crashes, it completely disconnects the receiver from the
sender (by dropping all the sender’s messages) until the link recovers.
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 20081-4244-2398-9/08/$20.00 ©2008 IEEE214DSN 2008: Schiper & TouegS2-(100ms, 0.1) 2 S3-(100ms, 0.1) ×
S2-(0.025ms, 0) (cid:5) S3-(0.025ms, 0) ◦
S2 × S3 +
)
%
(
.
t
s
k
r
o
w
U
P
C
/
.
g
r
v
a
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0.0
)
s
/
B
K
(
.
t
s
k
r
o
w
/
.
f
f
a
r
t
.
g
r
v
a
70
60
50
40
30
20
10