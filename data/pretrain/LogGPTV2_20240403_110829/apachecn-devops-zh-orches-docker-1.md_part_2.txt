1.  从[http://boot2docker.io/](http://boot2docker.io/)下载最新版本的 OSX bootwocker 安装程序。
2.  运行安装程序，将更新 VirtualBox 和 Boot2Docker 管理工具。
要升级现有虚拟机，请打开终端并运行以下命令:
```
$ boot2docker stop
$ boot2docker download
```
# OpenStack
**OpenStack** 是一款免费开源软件，可以让设置云。主要用于部署公共和私有**基础设施** **作为** **a** **服务** ( **IaaS** )解决方案。它由一组相互关联的项目组成，用于云设置的不同组件，如计算调度器、钥匙串管理器、网络管理器、存储管理器、仪表板等。
Docker 可以充当 OpenStack Nova Compute 的虚拟机管理程序驱动程序。OpenStack 的 Docker 支持是随着 **Havana** 版本推出的。
但是...怎么做？
Nova 的 Docker 驱动程序嵌入了一个微型 HTTP 服务器，该服务器通过一个 **UNIX** **TCP** 套接字与 Docker 引擎的内部**具象**状态 T5】传输 ( **REST** ) API(稍后您会了解到更多这方面的信息)进行对话。
Docker 有自己的名为 Docker-Registry 的映像存储系统，可以将嵌入到 glass(OpenStack 的映像存储库)中，以推送和拉取 Docker 映像。Docker-Registry 既可以作为`docker`容器运行，也可以在独立模式下运行。
## 使用开发栈安装
如果您只是设置 OpenStack 并采用 DevStack 路线，那么配置设置使用 Docker 是非常容易的。
在运行开发栈路线的`stack.sh`脚本之前，在`localrc`文件中配置**虚拟** **驱动程序**选项以使用 Docker:
```
VIRT_DRIVER=docker
```
然后从`devstack`目录运行 Docker 安装脚本。该脚本需要`socat`实用程序(通常由`stack.sh`脚本安装)。如果您没有安装`socat`实用程序，请运行以下命令:
```
$ apt-get install socat
$ ./tools/docker/install_docker.sh
```
最后，从`devstack`目录运行`stack.sh`脚本:
```
$ ./stack.sh
```
## 手动安装 OpenStack 的 Docker
如果您已经设置了 OpenStack，或者如果 DevStack 方法没有成功，docker 也可以手动安装:
1.  Firstly, install Docker according to one of the Docker installation procedures.
    如果您将`docker`注册表放在扫视服务旁边，请运行以下命令:
    ```
    $ sudo yum -y install docker-registry
    ```
    在`/etc/sysconfig/docker-registry`文件夹中，设置`REGISTRY_PORT`和`SETTINGS_FLAVOR`注册表如下:
    ```
    $ export SETTINGS_FLAVOR=openstack
    $ export REGISTRY_PORT=5042
    ```
    在`docker`注册表文件中，还需要指定 OpenStack 身份验证变量。以下命令可以实现这一点:
    ```
    $ source /root/keystonerc_admin
    $ export OS_GLANCE_URL=http://localhost:9292
    ```
    默认情况下，`/etc/docker-registry.yml`在`/tmp`下设置 openstack 配置的本地或备用`storage_path`路径。您可能希望将路径更改为更永久的位置:
    ```
    openstack:
     storage: glance
     storage_alternate: local
     storage_path: /var/lib/docker-registry
    ```
2.  为了让 **Nova** 通过其本地插座与 Docker 进行通信，请将`nova`添加到`docker`组，并重新启动`compute`服务以获取更改:
    ```
    $ usermod -G docker nova
    $ service openstack-nova-compute restart
    ```
3.  启动 Redis(由 Docker 注册表使用)，如果尚未启动:
    ```
    $ sudo service redis start
    $ sudo chkconfig redis on
    ```
4.  最后，启动注册表:
    ```
    $ sudo service docker-registry start
    $ sudo chkconfig docker-registry on
    ```
## 新星形态
Nova 需要配置为使用`virt` Docker 驱动程序。
根据以下选项编辑`/etc/nova/nova.conf`配置文件:
```
[DEFAULT]
compute_driver = docker.DockerDriver
```
或者，如果您想要使用您自己的 Docker-Registry，它在不同于 5042 的端口上监听，您可以覆盖以下选项:
```
docker_registry_default_port = 5042
```
## 扫视配置
扫视需要配置为支持 Docker 容器格式。只需将 Docker 添加到扫视配置文件的容器格式列表中:
```
[DEFAULT]
container_formats = ami,ari,aki,bare,ovf,docker
```
### 类型
保留默认格式，以免破坏现有的扫视安装。
## Docker-开放叠流
一旦将 Nova 配置为使用`docker`驱动程序，流程与任何其他驱动程序相同:
```
$ docker search hipache
Found 3 results matching your query ("hipache")
NAME                             DESCRIPTION
samalba/hipache                  https://github.com/dotcloud/hipache
```
然后用 Docker-Registry 位置标记映像并推送:
```
$ docker pull samalba/hipache
$ docker tag samalba/hipache localhost:5042/hipache
$ docker push localhost:5042/hipache
```
推送指的是一个存储库:
```
[localhost:5042/hipache] (len: 1)
Sending image list
Pushing repository localhost:5042/hipache (1 tags)
Push 100% complete
```
在这种情况下，Docker-Registry(运行在端口映射为 5042 的 Docker 容器中)会将映像推送到 glass。从那里，Nova 可以到达他们，您可以使用扫视**命令** - **线** **界面** ( **CLI** )验证映像:
```
$ glance image-list
```
### 注
只有 docker 容器格式的映像才是可引导的。该映像基本上包含一个容器文件系统的 tarball。
您可以使用`nova` `boot`命令引导实例:
```