1 : display chs(*)
AMQ8417: Display Channel Status details.
CHANNEL(DEMO.QM2) XMITQ(SYSTEM.CLUSTER.TRANSMIT.QUEUE)
CONNAME(computer.ibm.com(1414))
CURRENT CHLTYPE(CLUSSDR)
STATUS(RETRYING)
Cause
1.The remote queue manager is not available.
2.An incorrect parameter is defined either for the local manual cluster-sender channel or the remote
cluster-receiver channel.
Solution
Check whether the problem is the availability of the remote queue manager.
1.Are there any error messages?
2.Is the queue manager active?
3.Is the listener running?
4.Is the cluster-sender channel able to start?
If the remote queue manager is available, is there a problem with a channel definition? Check the
definition type of the cluster queue manager to see if the channel is continually trying to start; for
example:
1 : dis clusqmgr(*) deftype where(channel eq DEMO.QM2)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM2) CHANNEL(DEMO.QM2) CLUSTER(DEMO)
DEFTYPE(CLUSSDRA)
If the definition type is CLUSSDR the channel is using the local manual cluster-sender definition. Alter any
incorrect parameters in the local manual cluster-sender definition and restart the channel.
If the definition type is either CLUSSDRA or CLUSSDRB the channel is using an auto-defined cluster-
sender channel. The auto-defined cluster-sender channel is based on the definition of a remote cluster
receiver channel. Alter any incorrect parameters in the remote cluster receiver definition. For example,
the conname parameter might be incorrect:
1 : alter chl(demo.qm2) chltype(clusrcvr) conname('newhost(1414)')
AMQ8016: IBM MQ channel changed.
Changes to the remote cluster-receiver definition are propagated out to any cluster queue managers that
are interested. The corresponding auto-defined channels are updated accordingly. You can check that the
updates have been propagated correctly by checking the changed parameter. For example:
1 : dis clusqmgr(qm2) conname
IBM MQ troubleshooting and support 203
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM2) CHANNEL(DEMO.QM2) CLUSTER(DEMO) CONNAME(newhost(1414))
If the auto-defined definition is now correct, restart the channel.
DISPLAY CLUSQMGR shows CLUSQMGR names starting SYSTEM.TEMP.
The queue manager has not received any information from the full repository queue manager that the
manually defined CLUSSDR channel points to. Check that the cluster channels are defined correctly.
Symptom
1 : display clusqmgr(*)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(SYSTEM.TEMPUUID.computer.(1414))
CLUSTER(DEMO) CHANNEL(DEMO.QM2)
CSQM201I +CSQ2 CSQMDRTC DISPLAY CLUSQMGR DETAILS
CLUSQMGR(SYSTEM.TEMPQMGR.(1716))
CLUSTER(DEMO)
CHANNEL(TO.CSQ1.DEMO)
END CLUSQMGR DETAILS
Cause
The queue manager has not received any information from the full repository queue manager that the
manually defined CLUSSDR channel points to. The manually defined CLUSSDR channel must be in running
state.
Solution
Check that the CLUSRCVR definition is also correct, especially its CONNAME and CLUSTER parameters.
Alter the channel definition, if the definition is wrong.
You also need to give the correct authority to the SYSTEM.CLUSTER.TRANSMIT.QUEUE by
issuing the following command:
setmqaut -m  -n SYSTEM.CLUSTER.TRANSMIT.QUEUE -t q -g mqm +all
It might take some time for the remote queue managers to attempt a new restart, and start their channels
with the corrected definition.
Return code= 2035 MQRC_NOT_AUTHORIZED
The RC2035 reason code is displayed for various reasons including an error on opening a queue or a
channel, an error received when you attempt to use a user ID that has administrator authority, an error
when using an IBM MQ JMS application, and opening a queue on a cluster. MQS_REPORT_NOAUTH and
MQSAUTHERRORS can be used to further diagnose RC2035.
Specific problems
See Specific problems generating RC2035 for information on:
• JMSWMQ2013 invalid security authentication
204 Troubleshooting and Support for IBM MQ
• MQRC_NOT_AUTHORIZED on a queue or channel
• MQRC_NOT_AUTHORIZED (AMQ4036 on a client) as an administrator
• MQS_REPORT_NOAUTH and MQSAUTHERRORS environment variables
Opening a queue in a cluster
The solution for this error depends on whether the queue is on z/OS or not. On z/OS use your security
manager. On other platforms create a local alias to the cluster queue, or authorize all users to have access
to the transmission queue.
Symptom
Applications receive a return code of 2035 MQRC_NOT_AUTHORIZED when trying to open a queue in a
cluster.
Cause
Your application receives the return code of MQRC_NOT_AUTHORIZED when trying to open a queue in a
cluster. The authorization for that queue is correct. It is likely that the application is not authorized to put
to the cluster transmission queue.
Solution
The solution depends on whether the queue is on z/OS or not. See the related information topic.
Related reference
2035 (07F3) (RC2035): MQRC_NOT_AUTHORIZED
Return code= 2085 MQRC_UNKNOWN_OBJECT_NAME when trying to open a
queue in the cluster
Symptom
Applications receive a return code of 2085 MQRC_UNKNOWN_OBJECT_NAME when trying to open a queue
in the cluster.
Cause
The queue manager where the object exists or this queue manager might not have successfully entered
the cluster.
Solution
Make sure that they can each display all the full repositories in the cluster. Also make sure that the
CLUSSDR channels to the full repositories are trying to start.
If the queue is in the cluster, check that you have used appropriate open options. You cannot get
messages from a remote cluster queue, so make sure that the open options are for output only.
1 : display clusqmgr(*) qmtype status
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) QMTYPE(NORMAL)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM2) CLUSTER(DEMO)
CHANNEL(DEMO.QM2) QMTYPE(REPOS)
STATUS(RUNNING)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM3) CLUSTER(DEMO)
CHANNEL(DEMO.QM3) QMTYPE(REPOS)
STATUS(RUNNING)
IBM MQ troubleshooting and support 205
Note: When using IBM MQ with WebSphere Application Server, you might also see this issue if you have a
JMS application which connects to an IBM MQ queue manager belonging to an IBM MQ cluster and your
JMS application tries to access a cluster queue which somewhere else in the cluster. Your application
needs to leave the queue manager blank if it wants to open a cluster queue located in the cluster, or
specify the name of a queue manager in the cluster which hosts the cluster queue.
Related reference
2085 (0825) (RC2085): MQRC_UNKNOWN_OBJECT_NAME
Return code= 2189 MQRC_CLUSTER_RESOLUTION_ERROR when trying to open
a queue in the cluster
Make sure that the CLUSSDR channels to the full repositories are not continually trying to start.
Symptom
Applications receive a return code of 2189 MQRC_CLUSTER_RESOLUTION_ERROR when trying to open a
queue in the cluster.
Cause
The queue is being opened for the first time and the queue manager cannot contact any full repositories.
Solution
Make sure that the CLUSSDR channels to the full repositories are not continually trying to start.
1 : display clusqmgr(*) qmtype status
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) QMTYPE(NORMAL)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM2) CLUSTER(DEMO)
CHANNEL(DEMO.QM2) QMTYPE(REPOS)
STATUS(RUNNING)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM3) CLUSTER(DEMO)
CHANNEL(DEMO.QM3) QMTYPE(REPOS)
STATUS(RUNNING)
Related reference
2189 (088D) (RC2189): MQRC_CLUSTER_RESOLUTION_ERROR
Return code=2082 MQRC_UNKNOWN_ALIAS_BASE_Q opening a queue in the
cluster
Applications get rc=2082 MQRC_UNKNOWN_ALIAS_BASE_Q when trying to open a queue in the cluster.
Problem
An MQOPEN or MQPUT1 call was issued specifying an alias queue as the target, but the BaseQName in the
alias queue attributes is not recognized as a queue name.
This reason code can also occur when BaseQName is the name of a cluster queue that cannot be resolved
successfully.
MQRC_UNKNOWN_ALIAS_BASE_Q might indicate that the application is specifying the
ObjectQmgrName of the queue manager that it is connecting to, and the queue manager that is hosting
the alias queue. This means that the queue manager looks for the alias target queue on the specified
queue manager and fails because the alias target queue is not on the local queue manager.
206 Troubleshooting and Support for IBM MQ
Solution
Leave the ObjectQmgrName parameter blank, so that the clustering decides which queue manager to
route to.
If the queue is in the cluster, check that you have used appropriate open options. You cannot get
messages from a remote cluster queue, so make sure that the open options are for output only.
Related reference
2082 (0822) (RC2082): MQRC_UNKNOWN_ALIAS_BASE_Q
Messages are not arriving on the destination queues
Make sure that the corresponding cluster transmission queue is empty and also that the channel to the
destination queue manager is running.
Symptom
Messages are not arriving on the destination queues.
Cause
The messages might be stuck at their origin queue manager.
Solution
1.Identify the transmission queue that is sending messages to the destination and the status of the
channel.
1 : dis clusqmgr(QM1) CHANNEL(*) STATUS DEFTYPE QMTYPE XMITQ
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) DEFTYPE(CLUSSDRA)
QMTYPE(NORMAL) STATUS(RUNNING)
XMITQ(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM1)
2.Make sure that the cluster transmission queue is empty.
1 : display ql(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM1) curdepth
AMQ8409: Display Queue details.
QUEUE(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM1) CURDEPTH(0)
Messages put to a cluster alias queue go to SYSTEM.DEAD.LETTER.QUEUE
A cluster alias queue resolves to a local queue that does not exist.
Symptom
Messages put to an alias queue go to SYSTEM.DEAD.LETTER.QUEUE with reason
MQRC_UNKNOWN_ALIAS_BASE_Q.
Cause
A message is routed to a queue manager where a clustered alias queue is defined. A local target queue is
not defined on that queue manager. Because the message was put with the MQOO_BIND_ON_OPEN open
option, the queue manager cannot requeue the message.
When MQOO_BIND_ON_OPEN is used, the cluster queue alias is firmly bound. The resolved name is
the name of the target queue and any queue manager on which the cluster queue alias is defined.
The queue manager name is placed in the transmission queue header. If the target queue does not
exist on the queue manager to which the message is sent, the message is put on the dead letter
queue. The destination is not recomputed, because the transmission header contains the name of the
IBM MQ troubleshooting and support 207
target queue manager resolved by MQOO_BIND_ON_OPEN. If the alias queue had been opened with
MQOO_BIND_NOT_FIXED, then the transmission queue header would contain a blank queue manager
name, and the destination would be recomputed. In which case, if the local queue is defined elsewhere in
the cluster, the message would be sent there.
Solution
1.Change all alias queue definitions to specify DEFBIND ( NOTFIXED).
2.Use MQOO_BIND_NOT_FIXED as an open option when the queue is opened.
3.If you specify MQOO_BIND_ON_OPEN, ensure that a cluster alias that resolves to a local queue defined
on the same queue manager as the alias.
A queue manager has out of date information about queues and channels in
the cluster
Symptom
DISPLAY QCLUSTER and DISPLAY CLUSQMGR show objects which are out of date.
Cause
Updates to the cluster only flow between the full repositories over manually defined CLUSSDR channels.
After the cluster has formed CLUSSDR channels display as DEFTYPE ( CLUSSDRB) channels because they
are both manual and automatic channels. There must be enough CLUSSDR channels to form a complete
network between all the full repositories.
Solution
• Check that the queue manager where the object exists and the local queue manager are still connected
to the cluster.
• Check that each queue manager can display all the full repositories in the cluster.
• Check whether the CLUSSDR channels to the full repositories are continually trying to restart.
• Check that the full repositories have enough CLUSSDR channels defined to correctly connect them
together.
1 : dis clusqmgr(QM1) CHANNEL(*) STATUS DEFTYPE QMTYPE
XMITQ
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) DEFTYPE(CLUSSDRA)
QMTYPE(NORMAL) STATUS(RUNNING)
XMITQ(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM1)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM2) CLUSTER(DEMO)
CHANNEL(DEMO.QM2) DEFTYPE(CLUSRCVR)
QMTYPE(REPOS)
XMITQ(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM2)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM3) CLUSTER(DEMO)
CHANNEL(DEMO.QM3) DEFTYPE(CLUSSDRB)
QMTYPE(REPOS) STATUS(RUNNING)
XMITQ(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM3)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM4) CLUSTER(DEMO)
CHANNEL(DEMO.QM4) DEFTYPE(CLUSSDRA)
QMTYPE(NORMAL) STATUS(RUNNING)
XMITQ(SYSTEM.CLUSTER.TRANSMIT.DEMO.QM4)
208 Troubleshooting and Support for IBM MQ
No changes in the cluster are being reflected in the local queue manager
The repository manager process is not processing repository commands, possibly because of a problem
with receiving or processing messages in the command queue.
Symptom
No changes in the cluster are being reflected in the local queue manager.
Cause
The repository manager process is not processing repository commands.
Solution
1.Check that the SYSTEM.CLUSTER.COMMAND.QUEUE is empty.
1 : display ql(SYSTEM.CLUSTER.COMMAND.QUEUE) curdepth
AMQ8409: Display Queue details.
QUEUE(SYSTEM.CLUSTER.COMMAND.QUEUE) CURDEPTH(0)
2. Check that the channel initiator is running on z/OS.
3.Check that there are no error messages in the error logs indicating the queue manager has a temporary
resource shortage.
DISPLAY CLUSQMGR displays a queue manager twice
Use the RESET CLUSTER command to remove all traces of an old instance of a queue manager.
1 : display clusqmgr(QM1) qmid
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) QMID(QM1_2002-03-04_11.07.01)
AMQ8441: Display Cluster Queue Manager details.
CLUSQMGR(QM1) CLUSTER(DEMO)
CHANNEL(DEMO.QM1) QMID(QM1_2002-03-04_11.04.19)
The cluster functions correctly with the older version of the queue manager being ignored. After about
90 days, the cluster's knowledge of the older version of the queue manager expires, and is deleted
automatically. However you might prefer to delete this information manually.
Cause
1.The queue manager might have been deleted and then re-created and redefined.
2.It might have been cold-started on z/OS, without first following the procedure to remove a queue
manager from a cluster.
Solution
To remove all trace of the queue manager immediately use the RESET CLUSTER command from a full
repository queue manager. The command removes the older unwanted queue manager and its queues
from the cluster.
2 : reset cluster(DEMO) qmid('QM1_2002-03-04_11.04.19') action(FORCEREMOVE) queues(yes)
AMQ8559: RESET CLUSTER accepted.