title:Evaluating the Security Threat of Firewall Data Corruption Caused
by Transient Errors
author:Shuo Chen and
Jun Xu and
Ravishankar K. Iyer and
Keith Whisnant
Evaluating the Security Threat of Firewall 
Data Corruption 
Caused by Instruction 
Transient Errors 
Shuo Chen, Jun Xu, Ravishankar 
Center for Reliable 
University 
and High-Performance 
Computing 
of Illinois at Urbana-Champaign 
K. Iyer, Keith Whisnant 
1308 W. Main Street, 
Urbana, IL 61801 
{shuochen, 
junxu, iyer, kwhisnan} @crhc.uiuc.edu 
Abstract 
This paper experimental
ly evaluates 
and models the 
vulnerabilities 
and the  resulting 
of two Linux kernel firewalls: 
to this work: to 
There are two major aspects 
IPChains 
error injection 
experiments 
on the Linux 
the possibility 
of error-caused 
using a SAN model. The error injection 
show that about 2% of errors injected into the 
code segment cause security 
security 
vulnerabilities. 
vulnerabilities 
Two 
are 
temporary, which disappear 
which persist 
when the error 
even after the 
and permanent, 
as long as the system is not rebooted. 
security 
extensive 
violations 
violations 
error-caused 
security 
and Netfilter. 
conduct 
kernel and to quantify 
security 
experiments 
firewall 
types of error-caused 
distinguished: 
disappears, 
error is removed, 
Results 
an error rate of 0.1 error/day 
networked 
system protected 
(on the average) 
indicates 
a non-negligible 
secure system. 
from simulating 
will experience 
security 
by 20 firewalls, 
2 machines 
violations. 
vulnerabilities 
can be 
This 
that error-caused 
security 
source of a security  threats 
to a highly 
the SAN model indicate 
that under 
during a I-year period in a 
1. Introduction 
Security of critical systems can be compromised in a 
to potential 
of security violations 
systems. 
hardware 
that errors can be exploited to obtain 
access to secure or cryptographic 
variety of ways. Recent studies have addressed the 
possibility 
due to errors. It has been 
demonstrated 
unauthorized 
induced transient 
For example, (i) intentionally 
used to obtain confidential 
errors have been successfully 
information from smartcards 
[1], (ii) injected software 
errors have been used to identify regions of software 
vulnerable 
security attacks [3], and (iii) 
naturally occurring hardware errors (errors occurring in an 
operational 
rather than deliberately 
errors) have been shown to result in security 
in network applications 
third case, relatively 
the vulnerabilities, 
is small, considering 
operating in the field, the probability 
vulnerabilities  cannot 
This paper experimentally 
of these events 
the large number of systems 
passive but illegal users can exploit 
such as an FIP and SSH [6]. In the 
and while the likelihood 
be neglected. 
environment 
and models the 
evaluates 
induced 
of such 
vulnerabilities 
For clarity, we first define the terms security 
violation 
and security 
vulnerability 
in the context of this 
is a state of the software in 
can enter the system 
vulnerability 
paper. A security 
which any packet (legal or illegal) 
If a hardware transient 
unchecked. 
the software in a state in which any packet can enter the 
system unchecked, 
is said to occur. The time period during which such a 
vulnerability 
If 
packetsl enter the system during 
more than five malicious 
a window of vulnerability, 
is said to 
have occurred. 
an error caused-security 
persists 
error results in putting 
There are two major aspects to this work: 
a security  violation 
is called a window of vulnerability. 
vulnerability 
1. Extensive error injection 
on the two 
firewalls to analyze how an error in the firewall code 
implementing security policies can compromise 
system security. 
experiments 
2. A SAN (Stochastic 
Activity Network) model to 
between the error 
(i.e., 
the 
to the firewall), 
and 
quantify and analyze the interaction 
occurrence process, 
arrival of legal or illegal  packets 
processor cache miss rates and replacement 
characteristics. 
the packet  arrival  process 
The error injection 
•  Of errors injected into the firewall code segment, 
experiments show the following: 
about 2 percent cause security vulnerabilities; 
•  There are two distinct types of error-caused 
vulnerabilities: 
A temporary security 
vulnerability 
results from an 
error that impacts an executing instruction. It 
disappears 
when the erroneous location 
cached out, or the system is rebooted. 
window of vulnerability 
is 
instruction, 
affected. If the error affects the cache, the 
vulnerability 
out. 
can be as short as a single 
if only the executing instruction 
is overwritten, 
The resulting 
persists  until  the  instruction 
is cached 
security 
A permanent 
vulnerability 
an error that impacts an executing 
it corrupts the semantic or structural 
permanent data structures. 
also results from 
instruction, 
but now 
integrity of the 
Removing such errors 
security vulnerabilities 
and the resulting 
error-caused 
security violations 
facilities: 
IPChains 
enhanced replacement, 
on two Linux kernel based firewall 
from kernel version 2.2 and an 
from kernel version 2.4. 
Net/ilter 
1 With as few as five packets, 
with the remote machine and launch an actual attack, 
FrontPage Server Extension Sub-Component Buffer Overflow 
Vulnerability. 
a TCP connection 
e.g., exploiting 
an intruder 
can establish 
[17] 
the 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:19:24 UTC from IEEE Xplore.  Restrictions apply. 
without rebooting the system does not eliminate the 
security vulnerabili
ty. 
Using data on field failures, data from the error 
the mean time 
and system performance parameters 
cache miss and replacement rates, we 
vulnerability  and 
under realistic 
injection experiments, 
sch as  processor 
sImulate the proposed SAN model to predict 
to security 
vulnerability 
indicate 
negligible 
under a realistic 
period in a networked system (e.g., 
campus) protected 
average) will experience 
source of  security 
that the error-caused vulnerabilities 
error rate of 0.1 error/day  during 
a large university 
a I-year 
by 20 firewalls, 2 machines (on the 
the duration of the window of 
conditions. 
The results 
How does  this 
security 
relatively 
violations. 
low rate of error-caused 
can be a non­
violations. For example, 
security vulnerabilit
programm ers can  take 
secty-sensitive 
ies. The authors argue that the 
of the tool to identify 
segments. This information can also help 
advantages 
ies. Research 
sources of vulnerabilit
conduct code inspections 
potential 
or formal analysis to 
deSIgners 
eliminate 
in 
[6] quantifies the impact of hardware errors on the FTP 
. The paper shows that 
server and SSH server applications
errors can impact the authentication 
code of these 
applications 
passive 
can gain access to the servers using correct logins but 
random passwords. 
in such a way that relatively 
In [ 14], a Markov model is used to evaluate 
the effort 
of an attacker  to 
required 
an attacker's 
model  parameter, 
vulnerabilities 
in UNIX. 
effort to create a security 
a key 
the study models several known 
target. Using 
violation  as 
reach the specified 
intruders 
available 
lities compare with  the  rate 
of security 
vulnerabi
ies due to software bugs?  Publicly 
vulnerabilit
vulnerabilities 
reports [16] on security 
in RedHat Linux 
recorded 
7.0 (or above) show 12 vulnerabilities 
during a 
1 3-month period ( 1 112000-1212001). Although a 
substanive conclusion  cannot 
be arrived at by simply 
comparmg these two data points, it is clear that error­
caused security vulnerabi
secure environment. 
are important 
in  a highly 
lities 
The present study focuses on the impact  of 
errors 
integrity 
of the 
for enforcing 
of these data structures 
and/or the structural 
that store  rules 
Any corruption 
affecting the semantics 
firewall data structures 
security  policies. 
can potentially 
vulnerabilitie
model, the  possibility 
error  rate
packet arrival rates (legal or illegal) 
s, processor/cache 
s. Via experimental 
evaluation 
of security violations 
and a SAN 
for realistic 
create temporary or permanent security 
performance 
parameters, and 
is evaluated. 
2. Related Work 
A number of researchers 
relationship 
between errors and system security. Past research  has 
have studied the 
ocused on four issues: 
(1) the impact of intentionally 
to compromise 
for locating 
transients on smartcards 
systems, (2) techniques 
mduced hardware 
cryptographic 
security-sensitive 
real systems to quantify the probability of a security 
vulnerability 
bugs, and (4)  impact  of 
security. 
due to system misconfigaration  or 
regions of applications
hardware errors on system 
software 
, (3)  modeling 
Several studies 
have shown that hardware transients 
can  be used as an effective means to attack smart-card­
based cryptographic systems to which attackers 
hysical acess. Boneh et ak [2] found that a popular 
can have 
. Such transients 
of the erroneous 
to hardware transients
of the CRT -based private 
can cause an erroneous cipher-text 
A recipient 
RSA private  key 
ImplementatIOn of the RSA [4] encryption algorithm, 
based on the Chinese Remainder Theorem (CRT) is 
vulnerable 
occurring during certain phases 
key operation 
produced. 
derive  the 
comno n divisor) 
techmques 
phases of cryptographic 
phase is located, 
techniques 
et aL [1] can be applied 
the secret key. Ghosh et  al. 
tool that 
uses a source-co de-based mutation 
critical 
operation. Using the power analysis 
different 
similar to those used by Kuhn 
to inject transient faults to discover 
to be 
cipher text can 
algorithms. Once the vulnerable 
using a simple gcd (greatest 
from Kocher [7],  one 
regions of programs that, if flawed, can result  in 
test to identify security­
can pinpoint 
a software 
[3] present 
2 The RSA cryptosystem 
encryption 
and digital 
is a public key cryptosystem 
that offers both 
signatures 
(authentication) 
[4]. 
3. Target Applications: 
IPChains and 
Netfilter 
Firewalls 
is a mechanism for enforcing network 
A firewall 
(e.g., 
policies; 
it protects. It also prevents 
exposing confidential 
network topology) or critical 
it keeps unauthorized packets from 
security 
gaining access to the machines 
insiders from accidentally 
information 
The core functionality 
filtering out potentially 
packets 
a network administrator 
(e.g., "reject any packet from enemy. com") that the 
firewall implements
of a firewall is packet filtering: 
malicious 
legitimate 
specifies 
through. Typically, 
a set of rules and policies 
or unauthorized 
while letting 
packets 
network 
services. 
. 
is implemented in 
and Netfilter. IPChains 
features, including Network Address 
ion, which converts an IP address 
built into Linux kernel version 2.4, provides 
This paper studies two widely used firewalls: 
IPChains 
Linux 
kernel version 2.2; its sole function is packet filtering [8]. 
Netfilter, 
additional 
IP 
Translat
address and is used for IP masquerading 
balancing, 
which maintains 
information on the state of each connection, enabling 
checking 
rules that use state information at a finer level of 
granularity. Thus, one policy can be applied to the first 
packet of a connection 
an established 
into another 
and load 
packet inspection, 
to packets belonging 
and another 
and stateful 
connection. 
to 
3.1. Structure 
and Packet Filtering of IPChains 
Rules in IPChains 
are organized 
as a linked list 
of rule­
Each rule-chain 
chains. 
rules and a policy for accepting or rejecting 
packet. 
Figure 1 illustrates  an 
is structured 
example configuration of 
as a linked list of 
an incoming 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:19:24 UTC from IEEE Xplore.  Restrictions apply. 
s. Each rule in a 
condition. 
which specifies 
of two rule-chain
(e.g., source address 
the  linked  list  of 
is a.b.c.d) 
the next rule-chain 
to 
by a solid arrow in Figure 1 )  if a 
Starting with Rule­
rules. If the 
of a rule, the traversal 
jumps 
IPChains 
that consists 
has a condition 
rule-chain 
and a branch target, 
be traversed (depicted 
packet matches the specified 
chain I ,  a packet traverses 
packet matches the condition 
to the rule-chain 
stops when the packet either reaches the end of a rule­
chain without a match or reaches a NULL rule-chain, 
containing 
of the rule-chain 
In 
Figure 1 ,  the dashed line depicts the path traversed by 
IPChains 
to 
address 
in the branch target field. The traversal 
(accept/reject) is applied to the packet. 
for a packet from address a.b.c.d 
only a defined policy. 
case, the policy 
In  either 
destined 
w.x.y.z. 
this rule is applied (the packet is rejected (R) in the 
example in Figure 2). 
Two critical 
functions from Netfilter 
were selected  as 
for  this  study: 
targets 
The former 
the function performing the stateful 
ipCdo_table 
the traversal algorithm; 
implements 
inspection. 
the latter 
is 
and ip_conntrack_in. 
4. Experimental 
Setup and Approach 
The  goal 
of the experimentati
on was to determine the 
that an error impacting the semantics or 
or 
probability 
structure of the firewall data will result in temporary 
Toward this end, several 
permanent security vulnerability. 
consisted 
machines were set up in pairs.  Each  pair 
of a 
machine whose sole 
firewall machine and an attacker 
purpose was to bombard the 
packets. 
Errors were injected exhaustively 
rule-checking 
the error injection 
an instruction, 
machine to expose the impact of the error on firewall. The 
specific steps of an injection 
below and 
illustrated 
two firewalls. Each run of 
involved 
a single bit-flip in 
for the 
experiment 
while a packet was sent  from 
firewall with illegal 
run are described 
into  the 
functions 
in Figure 3: 
four specified 
the attacker 
Figure 1: Rule-chain 
in IPChains 
Rule: I condition I branch  
-+ next 
Structure 
The  two critical 
functions 
that implement 
the packet 
are ipJwJheck and ipJule_match. 