na
t 2bp − mnr
2bp − mnr ≈ na
t
(9)
where the ratio of the number of revoked alias tokens and the
length of one segment of the revocation code is represented
by nt = mnr/2bs . For nt < 1, Pf a decreases by increasing
a which is the maximum number of iterations or segments
processed by the veriﬁer before making a revocation status
decision. Here, we assume that all revoked alias tokens have
unique segments, and hence the above equation gives the
upper bound of Pf a. Note that each alias token of bp bits is
unique; however each segment of an alias token, which is bs
bits long, is not necessarily unique.
t
If the veriﬁer runs RevCheck for a iterations, then the
length of the alias code that has to be processed is lr =
a · 2bs , and Pf a ≈ nlr nt/mnr
. Note that the computational
overhead for RevCheck is directly proportional to lr. There is
a tradeoﬀ between Pf a and RevCheck’s computational cost,
and there are a number of diﬀerent strategies for making an
advantageous tradeoﬀ. One possible strategy is to construct
the revocation code in such a manner that minimizes Pf a
for a given value of lr and for a given number of revoked
alias tokens (i.e., mnr) by selecting an optimal value of bs.
Once the optimal value of bs is computed, the corresponding
nt can be computed using the relation nt = mnr/2bs . This
value can be readily derived as nt = exp(−1) ≈ 0.3679.
However, mnr and 2bs are both integer values, and hence
to minimize Pf a, the group manager needs to select bs such
that exp(−1)/2 ≤ mnr/2bs < 3 exp(−1)/2.
As discussed above, the number of iterations (i.e., a) and
the number of bits in each segment of an alias token (i.e., bs)
are adjustable parameters that directly impact Pf a. Figure 1
shows the impact of a on Pf a for a ﬁxed value of bs = 19.
This ﬁgure suggests that the veriﬁer can decrease Pf a at
the cost of increasing the computational cost of performing
RevCheck. Figure 2 illustrates the impact of bs on Pf a when
the veriﬁer utilizes all of the d segments of the revocation
code to check the revocation status of an alias token.
In
both ﬁgures, we ﬁxed the values m = 120 and bp = 160 bits.
5.4.4 Security Implications of the Alias Codes
There is a one-to-one mapping between an alias code and
an alias token deﬁned by Fc. Although the alias codes have a
non-random structure, the alias tokens, which are embedded
in the signature, are random numbers under the random
oracle model. Hence, the use of alias codes should have
no impact on the traceability property of GSPR, which is
deﬁned by Theorem 2.
6. PERFORMANCE EVALUATION
In this section, we evaluate the computational and com-
munication overhead of GSPR, and compare GSPR’s per-
formance with two schemes in the prior art—the Boneh-
Shacham (BS) scheme proposed in [6] and the Bichsel-Camenisch-
Neven-Smart-Warinschi (BCNSW) scheme proposed in [3].
1342GSPR
BS
BCNSW
5
10
4
10
3
10
2
10
1
10
)
s
m
(
d
a
e
h
r
e
v
o
l
a
n
o
i
t
a
t
u
p
m
o
C
0
10
0
10
3
1
10
10
Number of revoked private keys (n
)
r
2
10
4
10
GSPR
BS
BCNSW
PS
6
10
4
10
2
10
0
10
)
B
K
(
d
a
e
h
r
e
v
o
n
o
i
t
i
a
c
n
u
m
m
o
C
−2
10
0
10
3
1
10
10
Number of revoked private keys (n
)
r
2
10
4
10
Figure 3: Computation overhead of verifying a signature
vs. the number of revoked private keys.
Figure 4: Communication overhead of transmitting the re-
vocation list/code vs. the number of revoked private keys.
Table 2: Comparison of computationally expensive opera-
tions.
GSPR
BS
BCNSW
Sign
SignCheck
RevCheck
Sign
SignCheck
RevCheck
Sign
SignCheck
RevCheck
Exp. in
G1/G2
6
2
0
5
4
0
3
0
0
Exp. in
Bilinear
GT
4
5
0
3
4
0
1
2
0
map
3
4
0
3
4
nr + 1
1
5
nr
Table 3: Comparison of computational overhead (ms).
GSPR
Sign
14.952
15.417
BCNSW 3.242
BS
SignCheck RevCheck
9.124
15.378
8.302
5.819
1628.729
1592.019
Table 4: Comparison of number of elements communicated
in the considered scenarios.
Elem.
in Z∗
p
Elem. in
G1/G2
Int.
GSPR
BS
BCNSW
manager-signer
signer-veriﬁer
manager-veriﬁer
manager-signer
signer-veriﬁer
manager-veriﬁer
manager-signer
signer-veriﬁer
manager-veriﬁer
1
5
0
1
5
0
1
2
0
1
4
0
1
2
nr
3
3
nr
0
0
l
0
0
0
0
0
0
Table 5: Comparison of communication overhead (bits).
GSPR
BS
BCNSW
manager-
signer
signer-
veriﬁer
672
672
1696
2848
1824
1856
manager-
veriﬁer
5.03 · 107
5.24 · 105
5.24 · 105
In [13], Manulis et al. concluded that BS and BCNSW are
two of the most practical group signature schemes in terms
of being scalable to large networks. We assume that isomor-
phism is an identity map which means that G1 = G2. We
assume symmetric 80-bit security level, which provides ap-
proximately the same level of security as an RSA signature
with a modulus size of 1024 bits. In an elliptic curve cryp-
tosystem, to achieve the same security strength, the length
of an element in Z∗
p, and G1 needs to be approximately equal
to 160 bits [6]. Speciﬁcally, we utilize the “Type A” inter-
nal described in pairing-based cryptography (PBC) library
available at [1]. The internal is constructed on a supersingu-
lar curve of the form y2 = x3 + x over the ﬁeld Fq for some
prime q = 3 mod 4.
p is
denoted by 160 bits, and an element in G1 or G2 is denoted
by 512 bits. For GSPR, we assume that the group manager
distributes 120 alias tokens for each signer, and the veriﬁer
needs the probability of false alarm to be less than 0.01.
In the internal, an element in Z∗
6.1 Computational Overhead
In this section, we compare the computational cost of