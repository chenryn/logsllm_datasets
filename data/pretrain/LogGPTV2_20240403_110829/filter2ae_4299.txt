## 写在前面
偶然看到了CVE-2022-31197，是由于`ResultSet.refreshRow()`引发的SQL注入，感觉有点小有意思，正好之前学习了JDBC
attack,决定分析一下漏洞造成的原因
## 漏洞分析
在官方的[描述](https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2)中，被修复版本有`42.2.26
42.4.1`
这里我们选用`42.2.23`版本的`postgresql`数据库依赖
        org.postgresql
        postgresql
        42.2.23
在连接中，他给出了一个payload
    CREATE TABLE refresh_row_example (
      id     int PRIMARY KEY,
      "1 FROM refresh_row_example; SELECT pg_sleep(10); SELECT * " int
    );
这个cve的漏洞点主要是在`PgResultSet#refreshRow`方法中，在该方法中打下断点，跟进代码
在这个方法中我观察到有一处执行sql语句的地方，或许那里就是漏洞触发点吧？
言归正传，如果我们需要到达漏洞触发点位置第一个拦路虎就是else if语句中的判断
拆分开来，第一个是需要使得`this.isBeforeFirst()`为false，跟进代码逻辑
其中需要使得`this.rowOffset + this.currentRow 
在修复版本中，不在直接将列名写入sql语句中，而是经过了`Utils.escapeIdentifier`的处理
## Ref