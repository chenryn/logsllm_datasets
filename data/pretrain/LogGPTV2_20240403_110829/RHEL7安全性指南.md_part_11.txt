### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_Portreserve-Protect_rpcbind_With_TCP_Wrappers}4.3.4.1. 使用 TCP Wrapper 保护 rpcbind {.title}
:::
::: para
因为 TCP Wrapper 没有内嵌的认证形式，所以使用 TCP Wrapper
限制哪些网络或者主机可以访问 `rpcbind`{.command} 服务很重要。
:::
::: para
另外，限制对服务的访问时，"[*只*]{.emphasis}"使用 IP 地址。由于通过使
DNS 中毒和其它方法可以伪造主机名，所以请避免使用主机名。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_Portreserve-Protect_rpcbind_With_firewalld}4.3.4.2. 使用防火墙保护 rpcbind {.title}
:::
::: para
要进一步限制访问 `rpcbind`{.command} 服务，最好是为该服务器添加
`firewalld`{.systemitem} 规则，并限制对具体网络的访问。
:::
::: para
以下是 `firewalld`{.systemitem} Rich Text
命令的两个示例。第一个是实现从网络 192.168.0.0/24 到 111
端口（`rpcbind`{.command} 服务使用的端口）的 TCP
连接的示例。第二个是实现从本地主机到同一端口的 TCP
连接的示例。丢弃所有其它数据包。
:::
``` screen
~]# firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="tcp" source address="192.168.0.0/24" invert="True" drop'
~]# firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="tcp" source address="127.0.0.1" accept'
```
::: para
同样地，要限制 UDP 流量，则须使用以下命令：
:::
``` screen
~]# firewall-cmd --add-rich-rule='rule family="ipv4" port port="111" protocol="udp" source address="192.168.0.0/24" invert="True" drop'
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
将 `--permanent`{.command} 添加到 `firewalld`{.systemitem} Rich Text
命令中，以实现永久设置。有关执行防火墙的更多信息，请参阅〈 [第 4.5 节
"使用防火墙"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Using_Firewalls){.xref}
〉。
:::
:::
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_NIS}4.3.5. 保证 NIS 安全 {.title}
:::
::: para
"*网络信息服务*"
(``{=html}NIS``{=html}) 是一个 RPC
服务，亦称之为 `ypserv`{.command}， 可与 `rpcbind`{.command}
及其它相关服务一同使用，向自称在其域中的所有计算机发布用户名、密码以及其它敏感信息映射。
:::
::: para
NIS 服务器由许多应用程序组成。它包括以下的应用程序：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    `/usr/sbin/rpc.yppasswdd`{.command} --- 也称为 `yppasswdd`{.command}
    服务，这个守护进程允许用户更改其 NIS 密码。
    :::
-   ::: para
    `/usr/sbin/rpc.ypxfrd`{.command} --- 也称为 `ypxfrd`{.command}
    服务，这个守护进程负责通过网络的 NIS 映射传输。
    :::
-   ::: para
    `/usr/sbin/ypserv`{.command} --- 这是 NIS 服务器守护进程。
    :::
:::
::: para
就当今的标准而言， NIS
在某种程度上并不安全。它没有主机认证机制，且所有通过网络的传输都是不加密的，包括哈希密码。因此设置使用
NIS 的网络时，要特别小心。事实上， NIS
的默认配置本身就不安全，这也让情况变得更为复杂。
:::
::: para
建议任何想要运行 NIS 服务器的人先要保障 `rpcbind`{.command}
服务的安全，正如在〈[第 4.3.4 节 "保障
rpcbind"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_rpcbind){.xref}〉中概括的那样，然后解决以下的问题，比如网络计划。
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_NIS-Carefully_Plan_the_Network}4.3.5.1. 谨慎规划网络 {.title}
:::
::: para
由于 NIS
通过网络传输敏感信息时未经加密，所以在防火墙后，且在隔离和安全的网络中运行就非常重要。使用不安全的网络传输
NIS
信息，无论何时都有被截获的风险。谨慎规划网络有助于防止严重的安全漏洞。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_NIS-Use_a_Password_like_NIS_Domain_Name_and_Hostname}4.3.5.2. 使用类似密码的 NIS 域名和主机名 {.title}
:::
::: para
只要用户知道 NIS 服务器的 DNS 主机名和 NIS 域名，那么在 NIS
域中的任何计算机都可以在未经认证的情况下使用命令从服务器中提取信息。
:::
::: para
例如：如果有人是从笔记本电脑连接到网络或者从外部侵入（并要嗅探内部 IP
地址），那么以下命令就可揭示 `/etc/passwd`{.command} 映射：
:::
``` synopsis
ypcat -d  -h  passwd
```
::: para
如果这个攻击者是 root 用户，那么他们就可通过以下命令获取
`/etc/shadow`{.command} 文件：
:::
``` synopsis
ypcat -d  -h  shadow
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
如果使用 Kerberos ，那么 `/etc/shadow`{.command} 文件就不会储存在 NIS
映射中。
:::
:::
:::
::: para
要让攻击者更难访问 NIS 映射，则须让 DNS 主机名生成一个随机字符串 ，比如
`o7hfawtgmhwg.domain.com`{.filename}。同样地，也可创建一个"[*不同的*]{.emphasis}"随机
NIS 域名。这就让攻击者访问该 NIS 服务器变得更加困难。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_NIS-Edit_the_varypsecurenets_File}4.3.5.3. 编辑 `/var/yp/securenets`{.filename} 文件 {.title}
:::
::: para
如果 `/var/yp/securenets`{.filename}
文件是空白文件，或是根本不存在（默认安装后就是这种情况），那么 NIS
就会侦听所有网络。首先要做的就是在该文件中添加子网掩码/网络对，这样一来
`ypserv`{.command} 只会响应来自对应网络的请求。
:::
::: para
以下是 `/var/yp/securenets`{.filename} 文件的条目示例：
:::
``` programlisting
255.255.255.0     192.168.0.0
```
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
首次启动 NIS 服务器时，一定要有已生成的 `/var/yp/securenets`{.filename}
文件。
:::
:::
:::
::: para
这个技术并不提供对 IP 嗅探式攻击的保护，但至少可以限制 NIS
服务器提供服务的网络。
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_NIS-Assign_Static_Ports_and_Use_Rich_Text_Rules}4.3.5.4. 分配静态端口并使用 Rich Text 规则 {.title}
:::
::: para
所有与 NIS 关联的服务器都可以分配到指定的端口，`rpc.yppasswdd`{.command}
除外 --- 该守护进程允许用户更改其登录密码。其它两个 NIS 服务器守护进程
`rpc.ypxfrd`{.command} 和 `ypserv`{.command}
分配端口，这就可允许创建防火墙规则，以便进一步防止入侵者破坏 NIS
服务器守护进程。
:::
::: para
要做到这一点，怎行在 `/etc/sysconfig/network`{.filename}
中添加以下命令行：
:::
``` programlisting
YPSERV_ARGS="-p 834"
YPXFRD_ARGS="-p 835"
```
::: para
以下 rich text `firewalld`{.systemitem}
规则可用于强制设定服务器用这些端口进行侦听的网络：
:::
``` screen
~]# firewall-cmd --add-rich-rule='rule family="ipv4" source address="192.168.0.0/24" invert="True" port port="834-835" protocol="tcp" drop'
~]# firewall-cmd --add-rich-rule='rule family="ipv4" source address="192.168.0.0/24" invert="True" port port="834-835" protocol="udp" drop'
```
::: para
这就是说，如果请求来自
`192.168.0.0/24`{.systemitem}网络，那么服务器就只可连接到 834 和 835
端口。第一规则用于 `TCP`{.systemitem} ，第二规则用于
`UDP`{.systemitem}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
有关用 iptables 命令运行防火墙的更多信息，情参阅〈 [第 4.5 节
"使用防火墙"](#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Using_Firewalls){.xref}〉。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Securing_NIS-Use_Kerberos_Authentication}4.3.5.5. 使用 Kerberos 认证 {.title}
:::
::: para
NIS
用于认证操作时，其中要考虑的问题是，无论用户何时登录机器，`/etc/shadow`{.filename}
映射上的哈希密码都是通过网络进行传送。如果入侵者可以访问 NIS
域或者探查网络流量，那么他们就可以收集用户名以及哈希密码。在拥有充足时间的情况下，密码破译程序可以猜对较弱的密码，那么攻击者就可以访问网络上的有效账户。
:::
::: para
因为 Kerberos
使用密钥加密，那么就不用通过网络发送哈希密码，所以系统就更加安全。关于
Kerberos 的更多信息，请参阅〈
[Linux域身份，认证，策略指导](https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/index.html)
〉。
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_NFS}4.3.6. 保证 NFS 安全 {.title}
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
NFS 流量可通过使用不同版本的 TCP 进行传送，但它应在 NFSv3 下使用，而不是
UDP ；在使用 NFSv4 时，NFS 流量是必要的。所有版本的 NFS 都支持 Kerberos
用户和分组认证，作为 `RPCSEC_GSS`{.filename} 内核模块的一部分。因为
Red Hat Enterprise Linux 7 支持 NFSv3 使用 `rpcbind`{.command}，所以有关
`rpcbind`{.command} 信息也包括在内。
:::
:::
:::
::: section
::: titlepage