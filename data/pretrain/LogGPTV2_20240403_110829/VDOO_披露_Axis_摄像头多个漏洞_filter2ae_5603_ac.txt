**POC**
这个漏洞通过向 **.cgi** 脚本 URL 发送带有 **PATH_INFO** 参数并以 **.srv** 拓展结束的 HTTP 请求触发。
###  CVE-2018-10663 —— /bin/ssid 进程信息泄露漏洞
这个漏洞不需要任何用户凭证。用户控制着在 /bin/ **ssid** 的 **.srv** 功能中的查询字符 **return_page** 和
**servermanager_return_page** 。当在响应构建代码处理时 —— 这些字段的值被缩减为 0x200 字节，并通过使用安全的
**__snprintf_chk** 函数复制到已分配的 0x200 字节的空间。然后 **__snprintf_chk**
函数的返回值(假设它们的长度)保存在结构体成员变量中，以便以后计算响应的内容长度。  
__snprintf_chk 的返回值保存在结构体成员变量的 IDA 截图（部分）
**_snprint_chk** 函数的返回值的问题在于，“The number of characters that would have been
written if n had been sufficiently large…”（摘自 sprintf
的手册）。这导致计算出来的内容的长度大于实际数据的大小，因此，内存中额外的字节会泄露在响应中。
**POC**
仔细观察返回值末尾的变化。额外的符号和字符是泄漏的字节，这些字节与内存中的响应缓冲区相邻。
###  CVE-2018-10658 —— 使 /bin/ssid 进程崩溃
这个漏洞不需要任何用户凭证。未认证的用户能够发送带有特殊的字符 dbus 请求致使 **ssid** 服务崩溃。崩溃源于 **libbus-send.so** 共享对象或相似的代码中。它生成的日志如下：
[ INFO ] ssid[2334]: process 2334: arguments to dbus_message_new_method_call()
were incorrect, assertion “iface == NULL || _dbus_check_is_valid_interface
(iface)” failed in file ../../dbus-1.10.14/dbus/dbus-message.c line 1373.
程序崩溃同样出现在直接调用带有相似字符的 “/usr/bin/ **dbus-send** “ 时。他可能还影响到包含这些代码其他进程。值得注意的是
/bin/ **ssid** 进程将会重启。
**POC**
###  CVE-2018-10658 —— 使 /bin/ssid 进程崩溃
未授权用户可以发送（通过 /bin/ **ssid .srv** 接口）特殊构造的命令，该命令将调用 **UND** undefined ARM
指令（MIPS 或者其他架构的摄像头可能也有类似的情况），这样导致进程崩溃。值得注意的是 /bin/ **ssid** 进程将会重启。
在触发这个漏洞以后会出现以下的日志：
    [ ERR     ] kernel: [ 2390.374778] ssid: ssid: potentially unexpected fatal signal 11.
这个漏洞不需要任何的用户凭证。
**POC**
## 给设备制造商的建议
我们想谈谈在本研究中分析的摄像机中发现的一些糟糕的架构，它们使得攻击者更容易发现和利用漏洞。我们鼓励设备制造商考虑以下建议。
  * **缺乏特权分离：** 这违反了特权分离的概念([https://en.wikipedia.org/wiki/Privilege_separation)，它规定程序应该被分成若干部分](https://en.wikipedia.org/wiki/Privilege_separation\)%EF%BC%8C%E5%AE%83%E8%A7%84%E5%AE%9A%E7%A8%8B%E5%BA%8F%E5%BA%94%E8%AF%A5%E8%A2%AB%E5%88%86%E6%88%90%E8%8B%A5%E5%B9%B2%E9%83%A8%E5%88%86) —— 每个部分都限制在它自己需要的特权中。虽然系统中的每个进程都作为 rot 权限运行 —— 任何系统进程中的代码执行漏洞都将导致攻击者提升到 root 权限。另一方面，如果使用高权限的程序越少，攻击者将不得不在一组受限制的进程中发现漏洞，以升级特权。这是一项更困难的任务。 
    * 例如，在 **CVE-2018-10662** 中 /bin/ **ssid** 有一个不受限制的 dbus 接口 —— 这将允许攻击者调用 dbus 服务函数。如果这个进程没有以 root 权限运行，那么 dbus 授权策略将不允许调用许多 dbus 特权服务函数。但是正由于 /bin/ **ssid** 以 root 权限运行，所有的 dbus 函数都在没有授权限制的情况下暴露给了攻击者。
  * **缺乏适当的输入过滤：** 当从外部接口接收输入时，输入应该过滤掉具有潜在威胁的字符。这可以阻止 **CVE-2018-10660** —— shell 的特殊字符不会被绕过。
  * **最小化 shell 脚本的使用：** 不鼓励将用户输入的参数作为 shell 脚本使用。这将导致 **CVE-2018-10660** 。另外一个需要注意的 —— 替代直接执行 dbus 命令 —— 可以使用 parhand 结构（结合 dbus 和 getters 命令）。
  * **缺乏二进制固件加密：** 固件加密会让安全上一个台阶，攻击者更难分析出固件中的漏洞，特别是使用二进制 diffing 方法比较最新的和以前的固件发现和分析补丁 —— 通过这种方法，发现之前版本存在的漏洞。此外，设备包含带有函数名等符号的二进制。这有助与理解代码是如何运行的。另一方面，值得注意的是如果对固件内容采用 _隐藏式安全_ , 固件被正确的加密，那么找到并修复漏洞就变得不那么容易。供应商应该仔细权衡这个问题。
## 感谢
我们要感谢 Axis 安全团队高效、及时地处理这些安全问题，以及他们专业的沟通能力。
## 荣誉
Or Peles (@peles_o), VDOO
## FAQ 部分
###  Q1. 我如何知道我的设备是否易受到攻击？
为了验证你的设备是否存在这些漏洞 —— 你需要检查 [ACV-128401
受影响设备列表](https://www.axis.com/files/sales/ACV-128401_Affected_Product_List.pdf)。如果摄像头的固件版本低于
ACV-128401 受影响设备列表中公布的版本，那么你的设备是存在漏洞的。我们强烈建议立即更新固件。去检查你正在使用的设备的固件版本，你可以按照以下几步：
  1. 使用浏览器访问摄像头。
  2. 输入用户名和密码。
  3. 点击 “System” -> “Option” -> “Support” -> “System Overview”。
  4. 查看固件版本。
如果你有多个设备，那么使用 Axis 设备管理器软件或通过 Axis VAPIX API 以编程方式获取固件版本可能更值得(请参阅 [VAPIX
官方文档](https://www.axis.com/files/manuals/vapix_parameter_management_52931_en_1307.pdf)中的
2.2 节)。
###  Q2. 如何判断的设备是否已遭受攻击？
你的设备被攻破的几率非常低，因为在发布的时候没有已知的恶意软件利用这些漏洞。  
由于物联网恶意软件通常被精心设计以不被发现，所以没有简单的方法可以确定。任何对设备的可疑更改都可能表明您的设备上存在僵尸网络恶意软件。
几种检查的方法：
  1. **你的密码是否可用** （不是应为你忘记了密码） —— 这是你的设备已经被接管的强烈信号。
  2. **你设备的设置被修改** —— 例如，视频被发送到了另外一个服务器。
  3. **网络流量激增** —— 如果可能的话，检查路由器网络统计信息。僵尸网络会增加来自摄像头的网络流量。任何流量尖峰都应该提醒你，因为除非你从摄像头上观看视频，否则这个数值应该相对较低。
###  Q3. 如果已经被攻击，那么有什么建议吗？
在发布时，我们没有发现任何恶意软件滥用这些漏洞。如果您怀疑您的摄像头被攻破，请将摄像头恢复到出厂设置。这样做会将配置恢复到默认设置，允许您连接和升级固件。请记住，如果您使用的固件易受
VDOO
检测到的漏洞的影响，那么该设备可能会成为被攻击的目标，并可能很快再次受到感染。因此，在重新设置设备后，请确保在把摄像头直连到互联网之前执行固件升级。
###  Q4. 如果我不能更新相机的固件，如何降低风险?
为了减少摄像头远程管理能力被暴露，建议将设备放置在防火墙屏蔽端口 80 和 443
(或摄像头配置中指定的端口)的后面，并且不允许摄像头启动任何出站连接。另一种选择是将设备放在反向代理的后面，该代理阻止我们用于漏洞利用的 URLs
(详细信息见上文)。如果需要其他帮助，请联系PI:EMAIL。
###  Q5. 如何更新摄像头的固件？
升级到最新固件，你可以使用 Axis 设备管理器，摄像头的 web 界面或者 FTP。在  页面查看厂商关于固件更新的说明。
原文：[VDOO Discovers Significant Vulnerabilities in Axis Cameras  
](https://blog.vdoo.com/2018/06/18/vdoo-discovers-significant-vulnerabilities-in-axis-cameras/)
审核人：yiwang 编辑：少爷