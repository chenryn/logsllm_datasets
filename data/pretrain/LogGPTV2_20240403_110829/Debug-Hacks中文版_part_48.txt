model
cpu family
vendor_id
processor
unsigned int *ecx, unsigned int *edx)
本 hack介绍通过读取处理器信息来判断是否支持64位模式的方法，
查看手头的x86机器是否支持64位模式
: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge
55
: GenuineIntel
www.TopSage.com
(1<<29)
---
## Page 385
本书执笔过程中，写作组成员讨论了一个问题，那就是“怎样才能判断自已的机
总结
在支持64位模式的系统上执行，显示结果如下。
x86_64 Long Mode is supported.
$./chkLm
$gcc-ochklmchklm.c
no_Llongmode:
int main(void)
returnl;
printf(“x86_64Long Modeis not supported.\n");
return0;
printf("x86_64Long Mode is supported.\n");
if（!(X86_FEATURE_LM&edx))
cpuid(0x80000001,&eax,&ebx,&ecx,&edx);
/*检查LongMode比特*/
if(eax<0x80000001)
cpuid(0x8000000,&eax,&ebx,&ecx,&edx);
/*检查能否获取扩展功能CPUID信息*/
unsigned int eax,ebx,ecx,edx;
-_asm__("cpuid"
gotono_longmode;
goto no_longmode;
：“0"（op));
：“=a”(*eax)
"=d"(*edx)
"=c"（*ecx），
"=b"(*ebx)，
www.TopSage.com
377
---
## Page 386
注8：
注 7：译者注：该文档的英文标题是《Intel@ Extended Memory 64 Technology Software
参考
本hack跟调试没什么关系，但希望大家能喜欢。
器的确支持64位模式？”,因此打算把这个问题也写入本书，于是出现了本hack。
368丨第6章高手们的调试技术
htp://www.amd.com/us-en/assets/content_type/white_papers_and_tech_docs/24594.pdf
System Instructions
http://download.intel.com/jp/developer/jpdoc/Processor_Identification_071405_i.pdf
の识别CPUID命令
 http://download.intel.com/jp/developer/jpdoc/EM64T_VOL1_30083402_i.pdf
译者注：该文档的英文标题是《Intel@ Processor Identification and the CPUID
Developer's Guide 》。
www.TopSage.com
—安部东洋
---
## Page 387
Asianux Server 3
Asianux
APIC. Local APIC. I/O APIC 
Application Binary Interface 的缩写，与规定源代码级别接口的 Application
ABI
Asianux 项目开发的面向服务器的Linux 发行版。它开发并包含了kdump、Live 
由日本的 Miracle Linux （MIRACLE LINUX CORPORATION)、中国北京中科
Advanced Programmable Interrupt Controller 的缩写，是 SMP 系统中管理中断信
崩溃转储（crash dump）时，是否理解 ABI，对调试者的水平有很大影响。
Programming Interface（API）不同，它规定了目标代码（即二进制代码）级别的
这里简单地介绍本书出现的有代表性的术语。
Debughacks术语的基础知识
版本，也称为 MIRACLELINUXV5。
（userland）的功能针对服务器进行了优化。它是MIRACLELINUX 4.0的下一
Patch（KAHO）、kprobes、jprobes 等本书介绍的许多功能，将内核和用户空间
开发的Linux OS 的名称，也是该开发项目的名称。
（HAANSOFT,Inc.）及3家公司联合成立的Asianux Corporation 4家公司共同
红旗软件技术有限公司（Red Flag Software Co.，Ltd.）、韩国Hansoft
中断申请并将其通知某个 CPU 的I/O APIC。
号的控制器。APIC 包括各 CPU 内部实现的 Local APIC，以及接受周边设备的
法、返回值的返回方法等。使用GDB 调试不包含调试信息的可执行文件或分析
接口，各种CPU 架构各不相同。具体来说，它规定了函数调用时的参数传递方
www.TopSage.com
附录
380
379
---
## Page 388
i386
git
GDB. gdb
Fedora
diskdump
 Debian GNU/Linux 
crash
CentOS
370 |附录 Debug hacks 术语的基础知识
Intel 的 32 位架构的通称，由最初使用该架构的 CPU 而得名。Intel 的 32 位处
工具，还指代由 git 创建的代码库（repository）。
源代码管理工具的一种，Linux 内核代码管理用的就是 git。本书中不仅指代 git 
用顺序确认等调试的必要操作。本书详细说明了 GDB 的使用方法。
时常写为 gdb。使用 GDB 可以使程序在任意位置暂停，以进行变量值检查、调
GNU/Linux 系统中的标准调试器。指代程序名称时常写为GDB，指代命令名
Fedora Core，从第7版开始仅称为Fedora。
行开发，开发成果吸收进 RHEL，因此其目的为开发和验证。第6版之前称为
由 Red Hat 支持的“Fedora Project”社区开发的免费Linux 发行版。由社区进
版采用。详细情况请参考“HACK#19使用 diskdump 获取内核崩溃转储"。
采集内核转储（kermel dump）的功能，被 RHEL4 等 RedHat 家族的一部分发行
件指引（DFSG)。
遵守 Debian 社会契约（Debian Social Contract）和契约中包含的 Debian 自由软
软件包管理系统、设置方法等与 RedHat 家族的发行版有很大不同。极其重视
KDB 等，但本书未介绍。
由于无法停止内核的运行，因此称不上调试。Linux 上的内核调试器有 kgdb、
分析崩溃转储（crash dump）的命令行工具。虽然也能分析执行中的内核，但
结果。
是根据 Red Hat 公司免费公开的源代码，去掉商标和商业软件包后重新编译的
以完全兼容 RHEL（Red Hat Enterprise Linux）为目标的免费 Linux 发行版。它
www.TopSage.com
---
## Page 389
OOM Killer (Out of Memory Killer)
 objdump 
NMI watchdog
[6-] ]
kdump
IPMI watchdog
行结束进程以获得空闲内存。该机制的目的是为了防止空闲内存不足而导致的
是 Linux 内核的一种机制，可以在当操作系统无法分配必要的内存空间时，强
细请参照“HACK#44objdump 的方便选项”。
获取Linux 内核（vmlinux）或执行文件信息的命令。可以显示文件的头部
利用 IPMI watchdog timer 获取崩溃转储”。
在致命错误情况下通过硬件强制重启。详细情况请参考“HACK#22死机时<382
检测系统停止响应的功能。检测到系统停止响应时，就采集内核转储并重新启
关闭进程。此外，不指定选项时发送TERM信号。此时，一般情况下进程会自
给进程发送信号的命令。指定选项“-9”则发送 KILL 信号，操作系统将强行
用。详细情况参考“HACK#20使用 kdump 获取内核崩溃转储"。
收集内核转储的功能。在 RHEL5 等内核版本不低于 2.6.13 的发行版中可以使
操作系统停止响应这种最坏的情况。
动。该功能可以在大多数 PC 上使用，但与 IPMI watchdog 不同的是，它无法
行结束，但如果进程停止响应，就无法执行结束处理。
#23用 NMI watchdog 在死机时获取崩溃转储”。
专用硬件，这种硬件通常只有中高端服务器才会配置。详细情况请参考“HACK
通过硬件强行重启或关闭电源。但是，实现该功能需要能检测系统停止响应的
内核转储后重新启动。此外，即使发生致命错误，连该功能都无法执行，也能
检测系统停止响应（freeze，stall）的功能。能够在检测到系统停止响应时获取
（header）和各个节（section），也可以对代码进行反汇编，或是查看数据。详
是i386。
理器架构后来经过多次扩展，分别称为 i486、i586、i686，这些架构的总称也
www.TopSage.com
附录 Debug hacks 术语的基础知识】 371
---
## Page 390
383
syslog
strace
softdog
SMP
SIGSEGV. segmentation fault
RHEL
ps
372|附录Debug hacks术语的基础知识
/var/log/syslog。大多数情况下，发生错误时，该文件中会记录一些信息。
所不同，RedHat 家族中大多数为/var/log/messages，Debian家族中多为
记录内核或进程的信息（message）的文件。该文件的名称在各种发行版中有
地点时能发挥巨大威力。详细情况参见“HACK#43使用strace寻找故障原
跟踪进程的系统调用的命令。在调查由于系统调用引发错误时、区分错误发生
使用，但在某些原因引起的系统停止响应的情况下无法正常工作。
新启动。与IPMIwatchdog和NMIwatchdog不同，该功能尽管能在所有PC上
检测系统停止响应的功能。可以在检测到系统停止响应时，采集内核转储并重
面上需要考虑的事情更多，由SMP引发的bug也屡屡发生。
心都可以执行同样的处理。由于可以同时执行多个处理，与UP相比，软件层
SymmetricMulti Processing的缩写，系统中配置多个CPU核心，每个CPU核
接结束。它是由bug引起的典型现象之一，参见[HACK#26]。
入时，操作系统就会通知该信号。如果不存在相应的信号处理程序，进程就直
内存非法访问的意思。代码跳转到不存在的地址或向不能写的内存空间试图写
Manager，以前称为Red Hat Package Manager）。
Linux 4Update7）、RHEL5.2等。软件包管理系统采用RPM（RPMPackage
Linux的简称。打过更新补丁的版本简称为RHEL4.7（旧称RedHat Enterprise
Red Hat,Inc.开发并销售的面向企业的商业 Linux发行版，为 Red Hat Enterprise
因的线索”。
命令行选项等详细信息。
父进程PID、TTY、内存使用量、运行状态、开始时间、执行时间、优先级、
www.TopSage.com
家网
---
## Page 391
attach.detach
汇编语言
Xen 
x86_64
VMware
top
SysRq 键
UP
利用调试器连接正在运行的进程称为 attach，切断连接称为 detach。本书中介
含大量的汇编语言。本书的 hack 中也写做汇编语言、汇编代码。
将机器语言用人类容易理解的形式书写的低级语言，汇编语言程序使用名为助
称为 Domain 0；还有作为一般的虚拟机使用的 Domain U和 HVM Domain 等。
称为Domain（域），Domain中包含访问物理硬件和管理其他域的特权Domain,
Hypervisor 类型的虚拟机软件，运行在 RINGO 之上。Xen 将虚拟机的运行单位
指令，因此在使用64位环境的同时也能继续沿用 i386 的软件资源。
中还有个 ia64，但这两者是完全不同的。x86_64架构的特征是它能执行i386
件上（RINGO），以此建立虚拟机环境。
类虚拟机软件，它不需要宿主操作系统，名为VMkermel的软件直接运行在硬
件上的宿主操作系统中创建虚拟机并执行。VMware ESX、ESXi 是 Hypervisor
VMware Workstation、VMware Server、VMware Fusion 是虚拟机软件，能在硬
Uni Processing 的缩写，只包含一个 CPU核心的系统。
使用汇编语言编写的。Linux 内核中的异常处理和处理器模式切换等功能也包
架构的助记符都不相同。针对特殊用途而优化的程序中，即使是现在也仍然有
记符（mnemonic）的命令书写。助记符是与机器语言一一对应的，各种CPU
优先级、执行时间、PID 等信息也会一同显示，可以方便地获知进程的状态。
将进程按照CPU 负载排序并显示的命令。除了CPU 负载之外，内存使用量、
详细使用方法请参见“HACK#18使用 SysRq 键调试"。
a，（） 
www.TopSage.com
附录Debug hacks 术语的基础知识| 373
---
## Page 392
崩溃(crash)
反汇编
内核信息（kernel message）
内核转储（kernel dump)．崩溃转储（crash dump）
内核配置
374| 附录Debug hacks 术语的基础知识
内核转储（core dump）
内核参数．内核启动参数
内核
objdump，一般的调试器也有反汇编功能。反汇编在本书中无处不在，是调试
等条件。使用 crash 等分析工具和崩溃转储，就能获知问题发生时的内核状态。
将某个时刻的内核内存映像和寄存器内容等保存到文件中的行为，或是指保存
操作系统核心部分的程序。本书指 Linux 内核。
指将某一时刻的处理器的内存映像和寄存器内容等保存到文件中的动作，或指
然后进行调试。
因为硬件的故障。如果是软件 bug，那么一般情况下，用户应用程序崩溃时要
指用户应用程序或操作系统突然停止运行。绝大部分原因是软件 bug，也有是
的必备工具。
将机器语言变成人类易于理解的汇编语言的软件。Linux 中的代表性工具为
内容还会输出到控制台或 syslog 中。此外，通过 dmesg 命令也可以查看。
内核输出的信息，其内容从调试信息到致命错误信息等无所不包，某些重要的
数，无须重新编译内核即可改变内核的行为和设置。
GRUB、LILO等启动器（boot loader）启动 Linux 时设定的参数。通过这些参
后的文件。许多实现中可以选择只保存内核内存映像，还是保存全部内存映像
panic（链表破坏篇）、“HACK#57错误注入”介绍了内核配置的实例。
调试功能是禁用的，要使用调试功能，就要改变内核配置。“HACK#34kermel
给内核添加功能、删除不用的功能，或是设置内核参数的内核配置。默认情况下
绍了利用 GDB 或 strace 等 attach 到进程上进行调试的方法。
www.TopSage.com
---
## Page 393
注1：
线程、进程
自旋锁(spinlock)
stock kernel（标准内核）
停止响应（stall)、挂起（hang）
栈溢出（stack overflow）
调度器（scheduler）
在Linux中，线程是内核管理的最小的程序运行实例，进程是由一个或多个线
由 Linus Torvalds 发布的、作为标准的 Linux 内核,也称为 main line、vanilla kemel
程组成的程序运行实例。进程内的各个线程共享内存空间，所以某个线程发生
核停止响应（自旋锁篇之一”、“HACK#38内核停止响应（自旋锁篇之二)”。
在栈上保存的数据量超过栈空间的大小。发生栈溢出后，操作系统就会给进程
内存非法访问等bug，经常会影响到其他线程的运行。
锁机制的一种，是Linux 内核中用得最多的一种锁。由于该锁的处理代价很低，
发送 SIGSEGV 信号。执行递归的程序很容易发生该现象。
常困难。
结束、系统挂起甚至崩溃等致命故障的可能性就会大大提高，而且调试起来非
响应性能，可以说是操作系统的核心。调度器中发生 bug 的话，出现程序无法
Linux 中也称为任务调度器（task scheduler）。由于调度器能大幅度影响系统的
多任务操作系统中按照进程或线程等运行单位来分配CPU使用权的功能，
以由NMI watchdog或IPMI watchdog获取崩溃转储。详情参考“HACK#37内
常在临界区（critical section）等短小的地方使用。自旋锁引发死锁时，通常可
（纯正内核）等。
问题发生时的处理器状态。详情参见“HACK#4获取进程的内核转储"。
某些操作系统会生成内核转储。GDB等调试器与内核转储结合使用，就能获知
保存后的文件，保存后的文件也称为内核转储。一般来说，程序异常结束时，
此处原文介绍了日语中的别称，不再原样翻译。——译者注
www.TopSage.com
附录Debug hacks 术语的基础知识” 375
386
---
## Page 394
奇偶校验错（parity error）
panic、kernel panic（内核挂起）
缓冲区溢出
死锁 (dead lock)
任务（task)
信号量（semaphore）
section（节）
376 1  附录 Debug hacks 术语的基础知识
本书指进程、线程之外的一般处理。
有 PC 都有可能发生该故障，但检测该故障则需要内存控制器等硬件的支持。
由于噪声等硬件原因，导致内存中的一个比特出错的故障。从原理上来说，所
内核中发生致命错误，导致操作系统完全停止。Linux则会显示 Oops 等错误信
segmentation fault.
引发程序的异常行为。如果缓冲区旁的内存空间没有映射，就会引发
生这种 bug。如果缓冲区旁边就是其他数据区域，就会导致其他数据被破坏,
将数据写到缓冲区的区域之外的 bug。例如，在C语言中使用数组时经常会发
锁的同时等待锁事件发生的情况，是系统停止响应的典型原因之一。
或者按照错误的顺序加锁而导致多个线程互相等待锁的情况下，就会发生持有
互斥处理的故障的一种，指陷入永远等待锁的状态。多次尝试给同一个锁加锁，
参考“HACK#39
信号量。内核信号量上发生死锁时，通常通过 SysRq 键来采集崩溃转储。详情
内核内部也使用信号量，称为内核信号量（kermel semaphore），或者仅仅称为
锁机制的一种。Linux用户应用程序可以使用 Posix信号量和 IPC 信号量。Linux
节”中介绍了与 section有关的调试案例。
section，编译器或连接器会为每个 section 按照其功能进行定位。本书的
的只读数据为.rodata section，无初始值的数据为.bss section，可执行代码为.text