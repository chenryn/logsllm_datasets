The "fetch" function does not allow to modify the "host" in the request
header, resulting in the inability to implement the proxy request of the
reverse proxy server.
This can be done in nodejs.
This is not possible in deno.
    import { serve } from "https://deno.land/std@0.144.0/http/mod.ts";
    import { assertEquals } from "https://deno.land/std@0.144.0/testing/asserts.ts";
    Deno.test("http-request-host", async () => {
        const ac = new AbortController();
        const { signal } = ac;
        const p = serve(async (req) => new Response(req.url), {
            signal,
            port: 5000,
        });
        const response = await fetch("http://127.0.0.1:5000/", {
            headers: { host: "localhost.hello.world:9900" },
        });
        const text = await response.text();
        assertEquals(text, "http://localhost.hello.world:9900/");
        ac.abort();
        await p;
    });
    http-request-host ... FAILED (30ms)
     ERRORS
    http-request-host => ./test.ts:4:6
    error: AssertionError: Values are not equal:
        [Diff] Actual / Expected
    -   http://127.0.0.1:5000/
    +   http://localhost.hello.world:9900/
      throw new AssertionError(message);
            ^
        at assertEquals (https://deno.land/std@0.144.0/testing/asserts.ts:176:9)
        at file:///C:/Documents/test/test.ts:15:5
     FAILURES
    http-request-host => ./test.ts:4:6
    test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out (59ms)
    error: Test failed