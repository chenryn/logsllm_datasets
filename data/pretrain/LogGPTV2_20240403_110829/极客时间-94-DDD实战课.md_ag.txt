## 思考题请结合你所在公司的业务情况，尝试给业务做一个领域拆分，看看哪些子域是核心域，哪些子域是通用域和支撑域？欢迎留言和我分享你的思考和疑惑，你也可以把今天所学分享给身边的朋友，邀请他加入探讨，共同进步。![unpreview](Images/e4872e412bb3131e6dec8a85bb125c27.png){savepage-src="https://static001.geekbang.org/resource/image/7b/33/7b1a917aff0ec923b78a54e81ed90733.jpg"}
# 03 \| 限界上下文：定义领域边界的利器你好，我是欧创新。今天我们重点学习"限界上下文"。在 DDD领域建模和系统建设过程中，有很多的参与者，包括领域专家、产品经理、项目经理、架构师、开发经理和测试经理等。对同样的领域知识，不同的参与角色可能会有不同的理解，那大家交流起来就会有障碍，怎么办呢？因此，在DDD 中就出现了"通用语言"和"限界上下文"这两个重要的概念。这两者相辅相成，[通用语言定义上下文含义，限界上下文则定义领域边界，]{.orange}以确保每个上下文含义在它特定的边界内都具有唯一的含义，领域模型则存在于这个边界之内。你是不是感觉这么描述很抽象？没关系，接下来我会给你一一详细讲解。在这之前，我想请你先看这样两个问题，这也是今天内容的核心。1.  为什么要提出限界上下文的概念（也就是说除了解决交流障碍这个广义的原因，还有更具体的吗）？2.  限界上下文在微服务设计中的作用和意义是什么？
## 什么是通用语言？为了更好地理解限界上下文，回答这两个问题，我们先从通用语言讲起。怎么理解通用语言这个概念呢？[在事件风暴过程中，通过团队交流达成共识的，能够简单、清晰、准确描述业务涵义和规则的语言就是通用语言。]{.orange}也就是说，通用语言是团队统一的语言，不管你在团队中承担什么角色，在同一个领域的软件生命周期里都使用统一的语言进行交流。``{=html}那么，通用语言的价值也就很明了了，它可以解决交流障碍这个问题，使领域专家和开发人员能够协同合作，从而确保业务需求的正确表达。但是，对这个概念的理解，到这里还不够。通用语言包含术语和用例场景，并且能够直接反映在代码中。通用语言中的名词可以给领域对象命名，如商品、订单等，对应实体对象；而动词则表示一个动作或事件，如商品已下单、订单已付款等，对应领域事件或者命令。通用语言贯穿 DDD的整个设计过程。作为项目团队沟通和协商形成的统一语言，基于它，你就能够开发出可读性更好的代码，将业务需求准确转化为代码设计。下面我带你看一张图，这张图描述了从事件风暴建立通用语言到领域对象设计和代码落地的完整过程。![](Images/ddd0f35334caaee49e17362ffe686fb9.png){savepage-src="https://static001.geekbang.org/resource/image/69/ee/69f44e120de5019c0fbff4d3fbc0afee.png"}1.  在事件风暴的过程中，领域专家会和设计、开发人员一起建立领域模型，在领域建模的过程中会形成通用的业务术语和用户故事。事件风暴也是一个项目团队统一语言的过程。2.  通过用户故事分析会形成一个个的领域对象，这些领域对象对应领域模型的业务对象，每一个业务对象和领域对象都有通用的名词术语，并且一一映射。3.  微服务代码模型来源于领域模型，每个代码模型的代码对象跟领域对象一一对应。这里我再给你分享一条经验，我自己经常用，特别有效。[设计过程中我们可以用一些表格，来记录事件风暴和微服务设计过程中产生的领域对象及其属性。]{.orange}比如，领域对象在DDD 分层架构中的位置、属性、依赖关系以及与代码模型对象的映射关系等。下面是一个微服务设计实例的部分数据，表格中的这些名词术语就是项目团队在事件风暴过程中达成一致、可用于团队内部交流的通用语言。在这个表格里面我们可以看到，DDD分析过程中所有的领域对象以及它们的属性都被记录下来了，除了 DDD的领域对象，我们还记录了在微服务设计过程中领域对象所对应的代码对象，并将它们一一映射。![](Images/ee2346d3fdfcebe2029442ad6b39eb1d.png){savepage-src="https://static001.geekbang.org/resource/image/09/b8/09ca1ccc982d02634a856b2e80cf24b8.jpg"}到这里，我要再强调一次。DDD分析和设计过程中的每一个环节都需要保证限界上下文内术语的统一，在代码模型设计的时侯就要建立领域对象和代码对象的一一映射，从而[保证业务模型和代码模型的一致，实现业务语言与代码语言的统一。]{.orange}如果你做到了这一点，也就是建立了领域对象和代码对象的映射关系，那就可以指导软件开发人员准确无误地按照设计文档完成微服务开发了。即使是不熟悉代码的业务人员，也可以很快找到代码的位置。