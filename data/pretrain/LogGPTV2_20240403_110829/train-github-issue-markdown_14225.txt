### Version: Sharing Proxy 5.0.0-RC

#### Configuration: `server.xml`

```yaml
scaling:
  blockQueueSize: 10000
  workerThread: 40
  clusterAutoSwitchAlgorithm:
    type: IDLE
    props:
      incremental-task-idle-minute-threshold: 30
  dataConsistencyCheckAlgorithm:
    type: DEFAULT

mode:
  type: Cluster
  repository:
    type: ZooKeeper
    props:
      namespace: governance_ds
      server-lists: local.zookeeper.cn:2181
      retryIntervalMilliseconds: 500
      timeToLiveSeconds: 60
      maxRetries: 3
      operationTimeoutMilliseconds: 500
  overwrite: false

rules:
  - !AUTHORITY
    users:
      - root@%:123456
      - test@%:yunnex
      - sharding@:sharding
    provider:
      type: ALL_PRIVILEGES_PERMITTED
  - !TRANSACTION
    defaultType: LOCAL

props:
  max-connections-size-per-query: 1
  kernel-executor-size: 16  # Default is infinite.
  proxy-frontend-flush-threshold: 128  # Default value is 128.
  proxy-opentracing-enabled: false
  proxy-hint-enabled: false
  sql-show: false
  check-table-metadata-enabled: true
  lock-wait-timeout-milliseconds: 50000  # Maximum time to wait for a lock.
  show-process-list-enabled: true
  proxy-backend-query-fetch-size: -1  # Default value is -1, which sets the minimum value for different JDBC drivers.
  check-duplicate-table-enabled: false
  sql-comment-parse-enabled: false
  proxy-frontend-executor-size: 0  # Default value is 0, which lets Netty decide.
  proxy-backend-executor-suitable: OLAP  # Options: OLAP (default), OLTP. OLTP may reduce packet writing time but increase SQL execution latency if client connections exceed the frontend executor size.
  proxy-frontend-max-connections: 20  # Less than or equal to 0 means no limit.
  sql-federation-enabled: false
```

#### Startup Log

```
[INFO] 2021-11-04 14:04:13.919 [main-EventThread] o.a.c.f.state.ConnectionStateManager - State change: CONNECTED
[INFO] 2021-11-04 14 :04:14.046 [main-EventThread] o.a.c.framework.imps.EnsembleTracker - New config event received: {}
[INFO] 2021-11-04 14:04:14.046 [main-EventThread] o.a.c.framework.imps.EnsembleTracker - New config event received: {}

WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/C:/Users/Awoo/.m2/repository/org/codehaus/groovy/groovy/2.4.19/groovy-2.4.19-indy.jar) to method java.lang.Object.finalize()
WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release

Thanks for using Atomikos! Evaluate http://www.atomikos.com/Main/ExtremeTransactions for advanced features and professional support or register at http://www.atomikos.com/Main/RegisterYourDownload to disable this message and receive FREE tips & advice.
```

This version of the text is more structured, with clear headings and consistent formatting, making it easier to read and understand.