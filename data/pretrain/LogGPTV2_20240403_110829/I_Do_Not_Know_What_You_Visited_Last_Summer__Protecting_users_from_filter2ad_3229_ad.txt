### Cross-Site Link Analysis

In this scenario, we analyzed and tested 58 browsing practices from the top 500 websites listed on Alexa. The results indicate that TrackingFree allows 4,852 message events between site A and B, and 6 message events between site B and C. Specifically, all six messages were exchanged between `stubhub.com` (site C) and `doubleclick.net` (site B), one of the largest tracking companies. In summary, out of the 7,971 communications allowed in a regular browser, TrackingFree only prohibits 6.

### Related Work

#### Measurement of Web Tracking

Web tracking has been extensively studied. Mayer and Mitchell provide a comprehensive discussion on third-party tracking, including techniques, business models, defense mechanisms, and policy debates [26]. Roesner et al. propose a detailed classification framework for different web tracking practices [34]. Soltani et al. and Ayenson et al. measure the prevalence of non-cookie-based stateful tracking and demonstrate how tracking companies use multiple client-side states to respawn deleted identifiers [35, 4]. Yen et al. and Nikiforakis et al. discuss stateless tracking techniques in their works [41, 32]. Additionally, Krishnamurthy et al. [20, 19, 18, 21] focus on the risks associated with web tracking, showing that sensitive personal information, such as names and email addresses, can be leaked.

#### Existing Anti-Tracking Mechanisms

Despite the attention given to web tracking, no effective defense system has been proposed. Most commercial anti-tracking tools (e.g., [2, 13, 30]) rely on blacklists, which leave users unprotected if trackers are not included in their databases. Roesner et al. [34] introduced ShareMeNot, but it is limited to social media button tracking, a small subset of tracking practices. Private browsing mode [40] significantly impacts user experience by preventing persistent client-side state storage, and users can still be tracked before closing the browser. The Do Not Track (DNT) header [39] and related legislation require tracker compliance but fail to effectively protect users in practice [34, 26]. Disabling third-party cookies, supported by most browsers [29, 14, 27], can be easily bypassed through non-cookie-based tracking methods [17, 34, 35, 4] and may cause compatibility issues. For example, disabling third-party cookies prevents users from logging into `sears.com` using a `Facebook.com` account. According to existing work [34], among the 476 cross-site trackers found in the top 500 Alexa websites, DNT blocks only 27 (5.7%) of them, while disabling third-party cookies blocks 367 (77.1%).

#### Existing Multi-Principal Browsers

Several researchers and companies have proposed browsers with various isolation mechanisms [5, 28, 15, 38, 10, 15, 7, 6, 23, 8, 12] or utilities that facilitate browsing with multiple browsers [11, 25]. Gazelle [38], WebShield [23], Chromium [5], Internet Explorer 8 (IE8) [28], VirtualBrowser [6], COP [7], and OP browser [15] adopt different isolation policies. However, they only isolate the browser's in-memory state. AppIsolation [8] and Tahoma [10] aim to protect sensitive web applications from untrusted ones by isolating both in-memory and persistent states. AppIsolation uses a lightweight isolation mechanism on Chromium, while Tahoma employs heavyweight virtual machines (VMs) to isolate principals. Stainless [12] is another multi-process browser with parallel sessions. Fluid [11] and MultiFirefox [25] are popular site-specific browser utilities that allow users to visit different sites with different browsers. We compare these works' anti-tracking capabilities with TrackingFree in terms of isolation mechanism and content allocation policy. Table V summarizes the comparison details.

#### Content Allocation Policies

- **Tab-based policy** (adopted by IE8): This policy does not switch principals during cross-site navigation, allowing multiple websites to share the same principal.
- **Top-frame based policy** (adopted by Chromium): All web pages and their contents, including third-party iframes, are kept in the same principal if they are from the same site.
- **SOP-based policy** (adopted by Gazelle and WebShield): This policy strictly follows the same-origin policy, placing child frames with different origins into different principals.
- **User configuration-based and server configuration-based policies**: These require manual definition of allocation policies. The most privacy-preserving configuration a user can achieve is to assign each site a principal, similar to the top-frame based policy, which suffers from the same privacy issues. Server configuration-based mechanisms require server-side collaboration, which is unlikely to occur. The OP browser, adopting a web page-based policy, always opens a new web page instance during navigation, which is unnecessary and leads to serious compatibility issues.

#### Isolation Mechanisms

Most browsers do not isolate client-side state and cannot prevent web tracking. The technique-specific storage (TSS) mechanism, adopted by AppIsolation and Stainless, can isolate some or all web data storages (e.g., cookie jars, HTML local storage, cache stores). However, it can be bypassed when trackers abuse other client-side states (e.g., user preferences) [22]. Among the browsers or utilities that adopt complete isolation mechanisms (i.e., profile and virtual machine), TrackingFree is the only one that allows principal communication.

### Conclusion

In this paper, we designed and implemented TrackingFree, the first anti-tracking browser that completely blocks stateful third-party tracking. To balance anti-tracking capability and compatibility, we propose a novel content allocation mechanism and a secure principal communication channel. Our evaluation shows that TrackingFree can block all 647 trackers found in the top 500 Alexa websites with minimal overhead. Furthermore, we formally prove TrackingFree's anti-tracking capability using Alloy, demonstrating that even in the worst-case scenario, trackers can correlate TrackingFree users' online behaviors on at most three sites.

### References

[1] Are We Private Yet? An Open Source Project. http://www.areweprivateyet.com/.

[2] Abine Inc. Donottrackme. https://www.abine.com/dntdetail.php.

[3] Devdatta Akhawe, Adam Barth, Peifung E Lam, John Mitchell, and Dawn Song. Towards a formal foundation of web security. In Computer Security Foundations Symposium (CSF), 2010 23rd IEEE, pages 290–304. IEEE, 2010.

[4] Mika Ayenson, Dietrich Wambach, Ashkan Soltani, Nathan Good, and Chris Hoofnagle. Flash cookies and privacy ii: Now with html5 and etag respawning. Available at SSRN 1898390, 2011.

[5] Adam Barth, Collin Jackson, Charles Reis, and TGC Team. The security architecture of the chromium browser, 2008.

[6] Yinzhi Cao, Zhichun Li, Vaibhav Rastogi, Yan Chen, and Xitao Wen. Virtual browser: a virtualized browser to sandbox third-party javascripts with enhanced security. In Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security, pages 8–9. ACM, 2012.

[7] Yinzhi Cao, Vaibhav Rastogi, Zhichun Li, Yan Chen, and Alexander Moshchuk. Redefining web browser principals with a configurable origin policy. In Dependable Systems and Networks (DSN), 2013 43rd Annual IEEE/IFIP International Conference on, pages 1–12. IEEE, 2013.

[8] Eric Yawei Chen, Jason Bau, Charles Reis, Adam Barth, and Collin Jackson. App isolation: get the security of multiple browsers with just one. In Proceedings of the 18th ACM conference on Computer and communications security, pages 227–238. ACM, 2011.

[9] Chromium. Creating and using profiles. http://www.chromium.org/developers/creating-and-using-profiles.

[10] R.S. Cox, J.G. Hansen, S.D. Gribble, and H.M. Levy. A safety-oriented platform for web applications. In IEEE Symposium on Security and Privacy. Citeseer, 2006.

[11] Todd Ditchendorf. Fluid: Turn your favorite web apps into real mac apps. http://fluidapp.com/.

[12] Danny Espinoza. Stainless: A multi-process browser alternative to Google Chrome. http://www.stainlessapp.com/.

[13] Ghostery. Ghostery. http://www.ghostery.com/.

[14] Google. Manage your cookies and site data. https://support.google.com/chrome/answer/95647?hl=en.

[15] Chris Grier, Shuo Tang, and Samuel T King. Secure web browsing with the OP web browser. In Security and Privacy, 2008. SP 2008. IEEE Symposium on, pages 402–416. IEEE, 2008.

[16] Daniel Jackson. Alloy: a lightweight object modelling notation. ACM Transactions on Software Engineering and Methodology (TOSEM), 11(2):256–290, 2002.

[17] Samy Kamkar. Evercookie. http://samy.pl/evercookie/.

[18] Balachander Krishnamurthy, Konstantin Naryshkin, and Craig Wills. Privacy leakage vs. protection measures: the growing disconnect. In Web 2.0 Security and Privacy Workshop, 2011.

[19] Balachander Krishnamurthy and Craig Wills. Privacy diffusion on the web: a longitudinal perspective. In Proceedings of the 18th international conference on World wide web, pages 541–550. ACM, 2009.

[20] Balachander Krishnamurthy and Craig E Wills. Generating a privacy footprint on the internet. In Proceedings of the 6th ACM SIGCOMM conference on Internet measurement, pages 65–70. ACM, 2006.

[21] Balachander Krishnamurthy and Craig E Wills. Characterizing privacy in online social networks. In Proceedings of the first workshop on Online social networks, pages 37–42. ACM, 2008.

[22] Teddy Leva. STS design questions around probing what sites a user has been to. http://code.google.com/p/chromium/issues/detail?id=33445.

[23] Zhichun Li, Yi Tang, Yinzhi Cao, Vaibhav Rastogi, Yan Chen, Bin Liu, and Clint Sbisa. Webshield: Enabling various web defense techniques without client side modifications. In NDSS, 2011.

[24] ROBERT S Liverani and Nick Freeman. Abusing Firefox Extensions. Defcon17, July, 2009.

[25] Dave Martorana. Multifirefox. http://davemartorana.com/multifirefox/.

[26] Jonathan R Mayer and John C Mitchell. Third-party web tracking: Policy and technology. In Security and Privacy (SP), 2012 IEEE Symposium on, pages 413–427. IEEE, 2012.

[27] Microsoft. Description of cookies. http://support.microsoft.com/kb/260971.

[28] Microsoft. IE8 Security Part V: Comprehensive Protection. http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx?Redirected=true.

[29] Mozilla. Disable third-party cookies in Firefox to stop some types of tracking by advertisers. http://support.mozilla.org/en-US/kb/disable-third-party-cookies.

[30] Mozilla. Lightbeam for Firefox. http://www.mozilla.org/en-US/lightbeam/.

[31] Mozilla. Use the Profile Manager to Create and Remove Firefox Profiles. https://support.mozilla.org/en-US/kb/profile-manager-create-and-remove-firefox-profiles.

[32] Nick Nikiforakis, Alexandros Kapravelos, Wouter Joosen, Christopher Kruegel, Frank Piessens, and Giovanni Vigna. Cookieless monster: Exploring the ecosystem of web-based device fingerprinting. In IEEE Symposium on Security and Privacy, 2013.

[33] M Perry, E Clark, and S Murdoch. The design and implementation of the Tor Browser [draft][online], United States, 2011.

[34] Franziska Roesner, Tadayoshi Kohno, and David Wetherall. Detecting and defending against third-party tracking on the web. In Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation, NSDI’12, pages 12–12, Berkeley, CA, USA, 2012. USENIX Association.

[35] Ashkan Soltani, Shannon Canty, Quentin Mayo, Lauren Thomas, and Chris Jay Hoofnagle. Flash cookies and privacy. In AAAI Spring Symposium: Intelligent Information Privacy Management, 2010.

[36] The World Wide Web Consortium. W3C editor’s draft: HTML5. http://www.w3.org/html/wg/drafts/html/master/browsers.html#unit-of-related-browsing-contexts.

[37] W3C. HTTP ETag. http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html.

[38] Helen J Wang, Chris Grier, Alexander Moshchuk, Samuel T King, Piali Choudhury, and Herman Venter. The multi-principal OS construction of the Gazelle web browser. In USENIX Security Symposium, pages 417–432, 2009.

[39] Wikipedia. Do Not Track Policy. http://en.wikipedia.org/wiki/Do_Not_Track_Policy.

[40] Wikipedia. Privacy Mode. http://en.wikipedia.org/wiki/Privacy_mode.

[41] Ting-Fang Yen, Yinglian Xie, Fang Yu, Roger Peng Yu, and Martín Abadi. Host fingerprinting and tracking on the web: Privacy and security implications. In Proceedings of NDSS, 2012.