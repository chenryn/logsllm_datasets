a cross-site link toward site C. We ﬁnd and test 58 browsing
practices in this scenario from Alexa Top 500 web sites. The
results show that the number of message events between site A
and B, which TrackingFree allows is 4,852 and the number of
message events between B and C is 6. All of the six messages
are communicated between stubhub.com (C) and doubleclick.net
(B), one of the largest tracking companies. In sum, among all the
7,971 communications allowed in regular browser, TrackingFree
only forbids 6 of them.
VII. RELATED WORK
Measurement of Web Tracking. The practice of web
tracking has been studied extensively. Mayer and Mitchell give
the most comprehensive discussion about third-party tracking,
including tracking techniques, business models, defense choices
and policy debates [26]. Another important measurement work
is proposed by Roesner et al., in which the authors propose
a comprehensive classiﬁcation framework for different web
tracking practices [34]. Soltani et al. and Ayenson et al.
measure the prevalence of non-cookie based stateful tracking
and show how tracking companies use multiple client-side
states to respawn deleted identiﬁers [35] [4]. Yen et al. and
Nikiforakis et al. discuss the techniques of stateless tracking
in their works [41] [32]. In addition to tracking behaviors and
techniques, Krishnamurthy et al. [20] [19] [18] [21] focus on
the risk of harm resulted from web tracking, showing that not
only user’s browsing history, but also other sensitive personal
information, such as name and email, can be leaked out.
Existing Anti-tracking Mechanisms. Although web track-
ing has garnered much attention, no effective defense system
has been proposed. Most commercial anti-tracking tools ( [2],
[13], [30]) are based on blacklists, which will
leave user
unprotected were the trackers not collected by their databases;
Roesner et al. [34] proposed a tool called ShareMeNot, but
it can only defeat against social media button tracking, a
small subset of tracking practices. Private browsing mode [40]
signiﬁcantly affects user experience as user can not persistently
save anything on client-side state and users can still be tracked
before closing the browser. The Do Not Track(DNT) [39] header
and legislation require tracker compliance and cannot effectively
protect users from tracking in reality [34] [26]. Disabling third-
party cookie, which is supported by most browsers [29] [14]
[27], can be easily bypassed through non-cookie-based tracking
approaches [17] [34] [35] [4] and also suffer from compatibility
issues5. According to existing work [34], among all the 476
cross-site trackers found in Alexa Top 500 web sites, DNT can
only block 27 (5.7%) of them, while disabling third-party cookie
can block 367 (77.1%) of them.
Existing Multi-principal Browsers. A number of re-
searchers and companies have proposed browsers with different
isolation mechanisms [5] [28] [15] [38] [10] [15] [7] [6]
[23] [8] [12] or utilities that facilitate browsing with multiple
browsers [11] [25]. Gazelle [38], WebShield [23], Chromium [5],
Internet Explorer 8 (IE8) [28], VirtualBrowser [6], COP [7]
and OP browser [15] adopt different isolation policies, but
5For example, when disabling third-party cookies, user will fail login sears.com
with Facebook.com account
13
Browser
Isolation Mechanism
Contents Allocation Mechanism Stateful Anti-tracking
Capability
No
No
No
No
No
No
Incomplete
Incomplete
Incomplete
Incomplete
Complete
Gazelle [38], WebShield [23]
Chromium [5]
COP [7]
IE8 [28]
OP [15]
VirtualBrowser [6]
AppIsolation [8]
Stainless [12]
Tahoma [10]
TrackingFree
Fluid [11], MultiFirefox [25]
Proﬁle
In-memory Isolation
In-memory Isolation
In-memory Isolation
In-memory Isolation
In-memory Isolation
In-memory Isolation
Technique-speciﬁc Storage
Technique-speciﬁc Storage
Virtual Machine
Top-frame based
Server Conﬁguration based
Same-origin-policy (SOP) based
Tab based
Web Page based
User Conﬁguration based
User Conﬁguration based
User Conﬁguration based
User Conﬁguration based
User Conﬁguration based
In-degree-bounded Graph based
Table V: Multi-principal Browser Anti-tracking Capability Comparison
Proﬁle
only isolate browser’s in-memory state. AppIsolation [8] and
Tahoma [10], aiming to protect sensitive web applications from
untrusted ones, isolate sensitive application’s in-memory and
persistent states. AppIsolation adopts a light-weighted isolation
mechanism implemented on Chromium, while Tahoma utilizes
heavy-weighted virtual machines (VM) to isolate principals.
Stainless [12] is another multi-process browser but with a feature
of parallel sessions. Fluid [11] and MultiFirefox [25] are two
popular site-speciﬁc browser utilities, facilitating user to visit
different sites with different browsers. We compare these works’
anti-tracking abilities with TrackingFree from two aspects: 1).
isolation mechanism and 2). contents allocation policy. Table V
lists the comparison details.
Tab based contents allocation policy is adopted by IE8.
When a cross-site navigation occurs, this policy will not switch
principal and allow multiple web sites using the same principal.
Chromium’s process-per-site mode adopts top-frame based policy,
in which all the web pages and their contents, including third-
party iframes, are kept in the same principal if and only if they
are from the same site. SOP based policy, adopted by Gazelle
and WebShield, strictly follows same-origin policy and puts all
the child frames with different origins into different principals.
We formally evaluate the anti-tracking ability of top-frame based
and SOP based contents allocation policy with Alloy and the
results show that they cannot protect user’s privacy: in the worst
case, tracker can correlate user’s activities on unlimited number
of web sites (see Section VI for details). User conﬁguration based
and server conﬁguration based allocation mechanism require user
or server to manually deﬁne allocation policy. The most privacy-
preserving conﬁguration a user can achieve is to assign each site
a principal, similar to top-frame based allocation mechanism
and therefore suffering from the same privacy issue. Server
conﬁguration based mechanism requires server-side collaboration,
which is unlikely to happen. OP browser, adopting web page
based policy, will always open a new web page instance whenever
navigation occurs, which is not necessary and suffers from
serious compatibility issues.
As for isolation mechanism, most browsers do not iso-
late client-side state and cannot prevent web tracking at
all. Technique-speciﬁc storage (TSS) mechanism, adopted by
AppIsolation and Stainless, can isolate some or even all of
web data storages (e.g., cookie jar, HTML local storage, cache
store), but it can still be bypassed when trackers abuse those
client-side state that do not belong to web data storages, (e.g.,
user preference) [22]. Among the browsers or utilities that
adopt complete isolation mechanisms, i.e., proﬁle and virtual
machine, TrackingFree is the only one that allows principal
communication.
VIII. CONCLUSION
In this paper, we design and implement TrackingFree, the
ﬁrst anti-tracking browser that can completely block stateful
third-party tracking practice. To strike a balance between anti-
tracking ability and compatibility, we propose a novel content
allocation mechanism and a secure principal communication
channel. Our evaluation shows that TrackingFree can block all the
647 trackers we found in Alexa Top 500 web sites with affordable
overhead. Moreover, we formally prove TrackingFree’s anti-
tracking ability with Alloy, theoretically showing that even in
the worst scenario, trackers can at most correlate TrackingFree
user’s online behaviors on three sites.
REFERENCE
[1] Are We Private Yet? An Open Source Project. http://www.areweprivate
yet.com/.
[2] Abine Inc. Donottrackme. https://www.abine.com/dntdetail.php.
[3] Devdatta Akhawe, Adam Barth, Peifung E Lam, John Mitchell, and Dawn
Song. Towards a formal foundation of web security. In Computer Security
Foundations Symposium (CSF), 2010 23rd IEEE, pages 290–304. IEEE,
2010.
[4] Mika Ayenson, Dietrich Wambach, Ashkan Soltani, Nathan Good, and
Chris Hoofnagle. Flash cookies and privacy ii: Now with html5 and etag
respawning. Available at SSRN 1898390, 2011.
[5] Adam Barth, Collin Jackson, Charles Reis, and TGC Team. The security
architecture of the chromium browser, 2008.
[6] Yinzhi Cao, Zhichun Li, Vaibhav Rastogi, Yan Chen, and Xitao Wen.
Virtual browser: a virtualized browser to sandbox third-party javascripts
with enhanced security. In Proceedings of the 7th ACM Symposium on
Information, Computer and Communications Security, pages 8–9. ACM,
2012.
[7] Yinzhi Cao, Vaibhav Rastogi, Zhichun Li, Yan Chen, and Alexander
Moshchuk. Redeﬁning web browser principals with a conﬁgurable origin
policy. In Dependable Systems and Networks (DSN), 2013 43rd Annual
IEEE/IFIP International Conference on, pages 1–12. IEEE, 2013.
[8] Eric Yawei Chen, Jason Bau, Charles Reis, Adam Barth, and Collin
Jackson. App isolation: get the security of multiple browsers with just
one.
In Proceedings of the 18th ACM conference on Computer and
communications security, pages 227–238. ACM, 2011.
[9] Chromium. Creating and using proﬁles. http://www.chromium.org/devel
opers/creating-and-using-profiles.
[10] R.S. Cox, J.G. Hansen, S.D. Gribble, and H.M. Levy. A safety-oriented
In IEEE Symposium on Security and
platform for web applications.
Privacy. Citeseer, 2006.
[11] Todd Ditchendorf. Fluid: Turn your favorite web apps into real mac apps.
http://ﬂuidapp.com/.
14
[12] Danny Espinoza. Stainless: A multi-process browser alternative to google
chrome. http://www.stainlessapp.com/.
[13] Ghostery. Ghostery. http://www.ghostery.com/.
[14] Google. Manage your cookies and site data. https://support.google.com/c
hrome/answer/95647?hl=en.
[15] Chris Grier, Shuo Tang, and Samuel T King. Secure web browsing with
In Security and Privacy, 2008. SP 2008. IEEE
the op web browser.
Symposium on, pages 402–416. IEEE, 2008.
[16] Daniel Jackson. Alloy: a lightweight object modelling notation. ACM
Transactions on Software Engineering and Methodology (TOSEM),
11(2):256–290, 2002.
[17] Samy Kamkar. Evercookie. http://samy.pl/evercookie/.
[18] Balachander Krishnamurthy, Konstantin Naryshkin, and Craig Wills.
In
Privacy leakage vs. protection measures: the growing disconnect.
Web 2.0 Security and Privacy Workshop, 2011.
[19] Balachander Krishnamurthy and Craig Wills. Privacy diffusion on the
web: a longitudinal perspective. In Proceedings of the 18th international
conference on World wide web, pages 541–550. ACM, 2009.
[20] Balachander Krishnamurthy and Craig E Wills. Generating a privacy
footprint on the internet. In Proceedings of the 6th ACM SIGCOMM
conference on Internet measurement, pages 65–70. ACM, 2006.
[21] Balachander Krishnamurthy and Craig E Wills. Characterizing privacy in
online social networks. In Proceedings of the ﬁrst workshop on Online
social networks, pages 37–42. ACM, 2008.
[22] Teddy Leva. Sts design questions around probing what sites a user has
been to. http://code.google.com/p/chromium/issues/detail?id=33445.
[23] Zhichun Li, Yi Tang, Yinzhi Cao, Vaibhav Rastogi, Yan Chen, Bin Liu,
and Clint Sbisa. Webshield: Enabling various web defense techniques
without client side modiﬁcations. In NDSS, 2011.
[24] ROBERT S Liverani and Nick Freeman. Abusing Firefox Extensions.
Defcon17, July, 2009.
[25] Dave Martorana. Multiﬁrefox. http://davemartorana.com/multifirefox/.
[26]
Jonathan R Mayer and John C Mitchell. Third-party web tracking: Policy
and technology. In Security and Privacy (SP), 2012 IEEE Symposium
on, pages 413–427. IEEE, 2012.
[27] Microsoft. Description of cookies.
/260971.
http://support.microsoft.com/kb
[28] Microsoft.
IE8 Security Part V: Comprehensive Protection.
[28] Microsoft.
IE8 Security Part V: Comprehensive Protection.
http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-
comprehensive-protection.aspx?Redirected=true.
[29] Mozilla. Disable third-party cookies in ﬁrefox to stop some types of
tracking by advertisers. http://support.mozilla.org/en-US/kb/disable-third-
party-cookies.
[30] Mozilla. Lightbeam for Firefox. http://www.mozilla.org/en-US/lightbeam/.
[31] Mozilla. Use the Proﬁle Manager to Create and Remove Firefox
Proﬁles. https://support.mozilla.org/en-US/kb/profile-manager-create-and-
remove-ﬁrefox-profiles.
[32] Nick Nikiforakis, Alexandros Kapravelos, Wouter Joosen, Christopher
Kruegel, Frank Piessens, and Giovanni Vigna. Cookieless monster:
Exploring the ecosystem of web-based device ﬁngerprinting. In IEEE
Symposium on Security and Privacy, 2013.
[33] M Perry, E Clark, and S Murdoch. The design and implementation of
the tor browser [draft][online], united states, 2011.
[34] Franziska Roesner, Tadayoshi Kohno, and David Wetherall. Detecting
and defending against third-party tracking on the web. In Proceedings
of the 9th USENIX Conference on Networked Systems Design and
Implementation, NSDI’12, pages 12–12, Berkeley, CA, USA, 2012.
USENIX Association.
[35] Ashkan Soltani, Shannon Canty, Quentin Mayo, Lauren Thomas, and
In AAAI Spring
Chris Jay Hoofnagle. Flash cookies and privacy.
Symposium: Intelligent Information Privacy Management, 2010.
[36] The World Wide Web Consortium. W3C editor’s draft: HTML5.
http://www.w3.org/html/wg/drafts/html/master/browsers.html#unit-of-
related-browsing-contexts.
[37] W3C. HTTP ETag. http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.
html.
[38] Helen J Wang, Chris Grier, Alexander Moshchuk, Samuel T King, Piali
Choudhury, and Herman Venter. The multi-principal os construction of
the gazelle web browser. In USENIX Security Symposium, pages 417–432,
2009.
[39] Wikipedia. Do Not Track Policy. http://en.wikipedia.org/wiki/Do_Not_T
rack_Policy.
[40] Wikipedia. Privacy Mode. http://en.wikipedia.org/wiki/Privacy_mode.
[41] Ting-Fang Yen, Yinglian Xie, Fang Yu, Roger Peng Yu, and Martın
Abadi. Host ﬁngerprinting and tracking on the web: Privacy and security
implications. In Proceedings of NDSS, 2012.
15