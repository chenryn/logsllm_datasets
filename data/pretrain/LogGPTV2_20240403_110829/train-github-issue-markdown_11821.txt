Hey Sokra,
This is my first webpack plugin and contribution to the open source community.
The issue that I was faced with is that we have multiple projects and even
some runtime loadable code and many developers. Some parts of one project may
run standalone or is loaded by another project.
The idea is that we'd like to have separate webpack and some non-webpack
projects but be able to share code in memory without duplicating it.
To do this I created a plugin that:
  1. Uses the request as the module id instead of an integer so require("jquery") because **_webpack_require** ("jquery")
  2. Causes the bootloader to construct and use internal and a global table for installed modules. it checks the internal table first then the global table then constructs the module and puts it in the global table.
  3. Allows modules that are defined as external to be require()'d without throwing a build error
  4. Skips rendering modules that are defined as external
Now using this plugin I can successfully have loadable code that assumes its
dependencies have already been loaded.
There are many more features that I'd like to add to it such as being able to
wait until' a dependency is loaded and etc...
I'd like to get your opinion on this plugin. it is located at:  
https://github.com/EliteScientist/SharedRequirePlugin