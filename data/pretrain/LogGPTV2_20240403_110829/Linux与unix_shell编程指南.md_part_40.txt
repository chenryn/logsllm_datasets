### 29. CGI 脚本

#### 29.1 使用 POST 方法发送数据

要使用 POST 方法发送表单数据，请访问以下 URL：
```
http://<your_server>/cgi-bin/booka.cgi
```

图 29-11 显示了我输入的信息。在填写完表单后，点击“发送”按钮，结果如图 29-12 所示。

该脚本会检查每个变量，确认是否已输入相应的信息。为了进一步改进，可以添加对所有变量的值进行验证的功能。如果用户未在某个输入域中输入任何信息，则重新显示表单并要求用户重新输入。如果用户提供了完整的表单信息，可以将这些信息附加到一个文件的末尾，创建一个微型数据库。

**图 29-11：使用 POST 方法的 CGI 表单**

**图 29-12：使用 POST 方法解码后的数据**

#### 29.2 创建更实用的 CGI 脚本

接下来，我们将创建一个更为实用的 CGI 脚本。假设有一家名为 "Wonder Gifts" 的公司，我们需要根据用户的选择生成该公司报表。

会计文件包含该公司 1998 年每个季度每个部门的销售额。文件中的部门包括文具、图书和礼品。

我们的任务是根据用户的输入生成报表。用户可以选择按季度或部门查看报表。收到用户选择后，程序将计算所选部门和季度的所有月份销售额总和。输出可以是屏幕、打印机或两者兼有。

表单包含两个下拉列表框（分别用于选择部门和季度）和一个单选按钮（用于选择输出形式）。尽管实际上报表仅显示在屏幕上，但单选按钮用于演示目的。

以下是原始数据文件的格式：
- 部门
- 年份
- 季度
- 该季度每个月的销售额

#### 29.3 表单脚本

表单脚本如下：

```html
<form action="/cgi-bin/gifts.cgi" method="post">
    <select name="dept">
        <option value="stationery">文具</option>
        <option value="books">图书</option>
        <option value="gifts">礼品</option>
    </select>
    <select name="qtr">
        <option value="Q1">第一季度</option>
        <option value="Q2">第二季度</option>
        <option value="Q3">第三季度</option>
        <option value="Q4">第四季度</option>
    </select>
    <input type="radio" name="stdout" value="printer" checked> 打印机
    <input type="radio" name="stdout" value="screen"> 屏幕
    <input type="radio" name="stdout" value="both"> 两者皆有
    <input type="submit" value="发送">
</form>
```

#### 29.4 处理脚本

处理脚本如下：

```bash
#!/bin/bash

# 读取用户输入
dept=$FORM_dept
qtr=$FORM_qtr
stdout=$FORM_stdout

# 初始化总销售额
total_sales=0

# 读取数据文件
while read -r line; do
    DEPT=$(echo $line | cut -d: -f1)
    YEAR=$(echo $line | cut -d: -f2)
    Q=$(echo $line | cut -d: -f3)
    P1=$(echo $line | cut -d: -f4)
    P2=$(echo $line | cut -d: -f5)
    P3=$(echo $line | cut -d: -f6)

    # 检查部门和季度是否匹配
    if [ "$DEPT" == "$dept" ] && [ "$Q" == "$qtr" ]; then
        total_sales=$((P1 + P2 + P3))
    fi
done < qtr_1998.txt

# 输出结果
echo "Content-type: text/html"
echo ""
echo "<h1>销售报表</h1>"
echo "<p>部门: $dept</p>"
echo "<p>季度: $qtr</p>"
echo "<p>总销售额: $total_sales</p>"
```

#### 29.5 自动刷新页面

在某些情况下，自动刷新页面非常有用，例如实时监控系统状态。下面的命令每 60 秒刷新一次 `dfspace.cgi` 脚本：

```html
<meta http-equiv="refresh" content="60;url=http://<your_server>/cgi-bin/dfspace.cgi">
```

关键字 `Refresh` 告诉 Web 服务器重新加载页面，`content=60` 表示每次刷新的时间间隔为 60 秒。

#### 29.6 小结

通过 CGI 脚本，我们可以创建更有趣的用户界面。HTML 页面可以作为各种处理过程的前端界面。CGI 脚本可用于监视、显示、数据库查询等多种应用。HTML 已成为许多应用程序文档的标准格式。

希望以上内容对你有所帮助！如果有更多问题，请随时联系我。