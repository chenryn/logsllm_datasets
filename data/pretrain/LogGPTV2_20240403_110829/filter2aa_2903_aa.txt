目      录
版权信息
版权
内容提要
历史回眸
第2版前言
第1版前言
资源与支持
第一篇 绪 论
第1章 软件调试基础
1.1 简介
1.1.1 定义
1.1.2 基本过程
1.2 基本特征
1.2.1 难度大
1.2.2 难以估计完成时间
1.2.3 广泛的关联性
1.3 简要历史
1.3.1 单步执行
1.3.2 断点指令
1.3.3 分支监视
1.4 分类
1.4.1 按调试目标的系统环境分类
1.4.2 按目标代码的执行方式分类
1.4.3 按目标代码的执行模式分类
1.4.4 按软件所处的阶段分类
1.4.5 按调试器与调试目标的相对位置分类
1.4.6 按调试目标的活动性分类
1.4.7 按调试工具分类
1.5 调试技术概览
1.5.1 断点
1.5.2 单步执行
1.5.3 输出调试信息
1.5.4 日志
1.5.5 事件追踪
1.5.6 转储文件
1.5.7 栈回溯
1.5.8 反汇编
1.5.9 观察和修改内存数据
1.5.10 控制被调试进程和线程
1.6 错误与缺欠
1.6.1 内因与表象
1.6.2 谁的bug
1.6.3 bug的生命周期
1.6.4 软件错误的开支曲线
1.7 重要性
1.7.1 调试与编码的关系
1.7.2 调试与测试的关系
1.7.3 调试与逆向工程的关系
1.7.4 学习调试技术的意义
1.7.5 调试技术尚未得到应有的重视
1.8 本章小结
参考资料
第二篇 CPU及其调试设施
第2章 CPU基础
2.1 指令和指令集
2.1.1 基本特征
2.1.2 寻址方式
2.1.3 指令的执行过程
2.2 英特尔架构处理器
2.2.1 80386处理器
2.2.2 80486处理器
2.2.3 奔腾处理器
2.2.4 P6系列处理器
2.2.5 奔腾4处理器
2.2.6 Core 2系列处理器
2.2.7 Nehalem微架构
2.2.8 Sandy Bridge微架构
2.2.9 Ivy Bridge微架构
2.2.10 Haswell微架构
2.2.11 Broadwell微架构
2.2.12 Skylake微架构
2.2.13 Kaby Lake微架构
2.3 CPU的操作模式
2.4 寄存器
2.4.1 通用数据寄存器
2.4.2 标志寄存器
2.4.3 MSR寄存器
2.4.4 控制寄存器
2.4.5 其他寄存器
2.4.6 64位模式时的寄存器
2.5 理解保护模式
2.5.1 任务间的保护机制
2.5.2 任务内的保护
2.5.3 特权级
2.5.4 特权指令
2.6 段机制
2.6.1 段描述符
2.6.2 描述符表
2.6.3 段选择子
2.6.4 观察段寄存器
2.7 分页机制
2.7.1 32位经典分页
2.7.2 PAE分页
2.7.3 IA-32e分页
2.7.4 大内存页
2.7.5 WinDBG的有关命令
2.8 PC系统概貌
2.9 ARM架构基础
2.9.1 ARM的多重含义
2.9.2 主要版本
2.9.3 操作模式和状态
2.9.4 32位架构核心寄存器
2.9.5 协处理器
2.9.6 虚拟内存管理
2.9.7 伪段支持
2.9.8 64位ARM架构
2.10 本章小结
参考资料
第3章 中断和异常
3.1 概念和差异
3.1.1 中断
3.1.2 异常
3.1.3 比较
3.2 异常的分类
3.2.1 错误类异常
3.2.2 陷阱类异常
3.2.3 中止类异常
3.3 异常例析
3.3.1 列表
3.3.2 错误代码
3.3.3 示例
3.4 中断/异常的优先级
3.5 中断/异常处理
3.5.1 实模式
3.5.2 保护模式
3.5.3 IA-32e模式
3.6 ARM架构中的异常机制
3.7 本章小结
参考资料
第4章 断点和单步执行
4.1 软件断点
4.1.1 INT 3
4.1.2 在调试器中设置断点
4.1.3 断点命中
4.1.4 恢复执行
4.1.5 特殊用途
4.1.6 断点API
4.1.7 系统对INT 3的优待
4.1.8 观察调试器写入的INT 3指令
4.1.9 归纳和提示
4.2 硬件断点
4.2.1 调试寄存器概览
4.2.2 调试地址寄存器
4.2.3 调试控制寄存器
4.2.4 指令断点
4.2.5 调试异常
4.2.6 调试状态寄存器
4.2.7 示例
4.2.8 硬件断点的设置方法
4.2.9 归纳
4.3 陷阱标志
4.3.1 单步执行标志
4.3.2 高级语言的单步执行
4.3.3 任务状态段陷阱标志
4.3.4 按分支单步执行标志
4.4 实模式调试器例析
4.4.1 Debug.exe
4.4.2 8086 Monitor
4.4.3 关键实现
4.5 反调试示例
4.6 ARM架构的断点支持
4.6.1 断点指令
4.6.2 断点寄存器
4.6.3 监视点寄存器
4.6.4 单步跟踪
4.7 本章小结
参考资料
第5章 分支记录和性能监视
5.1 分支监视概览
5.2 使用寄存器的分支记录
5.2.1 LBR
5.2.2 LBR栈
5.2.3 示例
5.2.4 在Windows操作系统中的应用
5.3 使用内存的分支记录
5.3.1 DS区
5.3.2 启用DS机制
5.3.3 调试控制寄存器
5.4 DS示例：CpuWhere
5.4.1 驱动程序
5.4.2 应用界面
5.4.3 2.0版本
5.4.4 局限性和扩展建议
5.4.5 Linux内核中的BTS驱动
5.5 性能监视
5.5.1 奔腾处理器的性能监视机制
5.5.2 P6处理器的性能监视机制
5.5.3 P4处理器的性能监视
5.5.4 架构性的性能监视机制
5.5.5 酷睿微架构处理器的性能监视机制
5.5.6 资源
5.6 实时指令追踪
5.6.1 工作原理
5.6.2 RTIT数据包
5.6.3 Linux支持
5.7 ARM架构的性能监视设施
5.7.1 PMUv1和PMUv2
5.7.2 PMUv3