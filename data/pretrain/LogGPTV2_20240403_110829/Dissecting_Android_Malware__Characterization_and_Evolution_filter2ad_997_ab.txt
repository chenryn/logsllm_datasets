m
a
S
l
e
r
a
w
a
M
w
e
N
f
o
r
e
b
m
u
N
e
v
i
t
a
u
m
u
C
e
h
T
l
1400
1200
1000
800
600
400
200
0
2010 2011
1260
AnserverBot
DroidKungFu
(including its variants)
527
678
403
209
66
66
115
23
33
13
13
08 09 10 11 12 01 02 03 04 05 06 07 08 09 10 11
13
14
18
(a) The Monthly Breakdown of New Android Malware Families
(b) The Cumulative Growth of New Malware Samples in Our Collection
Figure 1. The Android Malware Growth in 2010-2011
To better illustrate the malware growth, we show in Fig-
ures 1(a) and 1(b) the monthly breakdown of new Android
malware families and the cumulative monthly growth of
malware samples in our dataset. Consistent with others [2]
[3], starting summer 2011, the Android malware has indeed
increased dramatically, reﬂected in the rapid emergence of
new malware families as well as different variants of the
same type. In fact, the number of new Android malware
in July 2011 alone already exceeds the total number in
the whole year of 2010. Figure 1(b) further reveals two
major Android malware outbreaks, including DroidKungFu
(starting June, 2011) and AnserverBot (starting September,
2011). Among these 1260 samples in our collection, 37.5%
of them are related to DroidKungFu [14] and its variants;
14.8% are AnserverBot [4]. Both of them are still actively
evolving to evade the detection from existing anti-virus
software – a subject we will dive into in Section IV.
III. MALWARE CHARACTERIZATION
In this section, we present a systematic characterization
of existing Android malware, ranging from their installation,
activation, to the carried malicious payloads.
A. Malware Installation
By manually analyzing malware samples in our collection,
we categorize existing ways Android malware use to install
onto user phones and generalize them into three main so-
cial engineering-based techniques, i.e., repackaging, update
attack, and drive-by download. These techniques are not
mutually exclusive as different variants of the same type may
use different techniques to entice users for downloading.
1) Repackaging
Repackaging is one of the most
common techniques malware authors use to piggyback mali-
cious payloads into popular applications (or simply apps). In
essence, malware authors may locate and download popular
apps, disassemble them, enclose malicious payloads, and
then re-assemble and submit the new apps to ofﬁcial and/or
alternative Android Markets. Users could be vulnerable by
being enticed to download and install these infected apps.
To quantify the use of repackaging technique among our
collection, we take the following approach:
if a sample
shares the same package name with an app in the ofﬁcial
Android Market, we then download the ofﬁcial app (if
free) and manually compare the difference, which typically
contains the malicious payload added by malware authors. If
the original app is not available, we choose to disassemble
the malware sample and manually determine whether the
malicious payload is a natural part of the main functionality
of the host app. If not, it is considered as repackaged app.
In total, among the 1260 malware samples, 1083 of them
(or 86.0%) are repackaged. By further classifying them
based on each individual family (Table II), we ﬁnd that
within the total 49 families in our collection, 25 of them
infect users by these repackaged apps while 25 of them
are standalone apps where most of them are designed to
be spyware in the ﬁrst place. One malware family, i.e.,
GoldDream, utilizes both for its infection.
Among the 1083 repackaged apps, we ﬁnd that malware
authors have chosen a variety of apps for repackaging,
including paid apps, popular game apps, powerful utility
apps (including security updates), as well as porn-related
apps. For instance, one AnserverBot malware sample (SHA1:
ef140ab1ad04bd9e52c8c5f2fb6440f3a9ebe8ea) repackaged
a paid app com.camelgames.mxmotor available on the ofﬁ-
cial Android Market. Another BgServ [15] malware sam-
ple (SHA1: bc2dedad0507a916604f86167a9fa306939e2080)
repackaged the security tool released by Google to remove
DroidDream from infected phones.
Also, possibly due to the attempt
to hide piggy-
backed malicious payloads, malware authors tend to use
the class-ﬁle names which look legitimate and benign.
For example, AnserverBot malware uses a package name
com.sec.android.provider.drm for
its payload, which
looks like a module that provides legitimate DRM func-
tionality. The ﬁrst version of DroidKungFu chooses to use
com.google.ssearch to disguise as the Google search mod-
ule and its follow-up versions use com.google.update to
pretend to be an ofﬁcial Google update.
It
is interesting to note that one malware family –
jSMSHider – uses a publicly available private key (serial
number: b3998086d056cffa) that is distributed in the An-
droid Open Source Project (AOSP). The current Android
security model allows the apps signed with the same plat-
form key of the phone ﬁrmware to request the permissions
97
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:05 UTC from IEEE Xplore.  Restrictions apply. 
AN OVERVIEW OF EXISTING ANDROID MALWARE (PART I: INSTALLATION AND ACTIVATION)
Table II
Installation
Update
Drive-by
Download
Standalone
Activation
CALL
√
USB
√
PKG
BATT
√
√
SYS MAIN
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
5
56
ADRD
AnserverBot
Asroot
BaseBridge
BeanBot
BgServ
CoinPirate
Crusewin
DogWars
DroidCoupon
DroidDeluxe
DroidDream
DroidDreamLight
DroidKungFu1
DroidKungFu2
DroidKungFu3
DroidKungFu4
DroidKungFuSapp
DroidKungFuUpdate
Endofday
FakeNetﬂix
FakePlayer
GamblerSMS
Geinimi
GGTracker
GingerMaster
GoldDream
Gone60
GPSSMSSpy
HippoSMS
Jifake
jSMSHider
KMin
Lovetrap
NickyBot
Nickyspy
Pjapps
Plankton
RogueLemon
RogueSPPush
SMSReplicator
SndApps
Spitmo
TapSnake
Walkinwat
YZHC
zHash
Zitmo
Zsone
number of families
number of samples
Repackaging
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
25
1083
√
√
√
√
4
85
√
√
√
√
4
4
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
SMS
√
√
√
√
√
√
BOOT
√
√
√
√
√
√
√
NET
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
21
398
25
177
29
1050
4
288
6
112
1
187
2
17
8
725
8
782
which are otherwise not available to normal third-party apps.
One such permission includes the installation of additional
apps without user intervention. Unfortunately, a few (ear-
lier) popular custom ﬁrmware images were signed by the
default key distributed in AOSP. As a result, the jSMSHider-
infected apps may obtain privileged permissions to perform
dangerous operations without user’s awareness.
2) Update Attack The ﬁrst technique typically piggy-
backs the entire malicious payloads into host apps, which
could potentially expose their presence. The second tech-
nique makes it difﬁcult for detection. Speciﬁcally, it may still
repackage popular apps. But instead of enclosing the payload
as a whole,
that
will fetch or download the malicious payloads at runtime.
it only includes an update component
As a result, a static scanning of host apps may fail to
capture the malicious payloads. In our dataset, there are four
i.e., BaseBridge, DroidKungFuUpdate,
malware families,
AnserverBot, and Plankton, that adopt this attack (Table II).
The BaseBridge malware has a number of variants. While
some embed root exploits that allow for silent installation
of additional apps without user intervention, we here focus
on other variants that use the update attacks without root
exploits. Speciﬁcally, when a BaseBridge-infected app runs,
it will check whether an update dialogue needs to be
displayed. If yes, by essentially saying that a new version
is available, the user will be offered to install the updated
version (Figure 2(a)). (The new version is actually stored in
the host app as a resource or asset ﬁle.) If the user accepts,
an “updated” version with the malicious payload will then
98
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:50:05 UTC from IEEE Xplore.  Restrictions apply. 
GET /appfile/acc9772306c1a84abd02e9e7398a2cce/FinanceAccount.apk HTTP/1.1
Host: 219.234.85.214
Connection: Keep-Alive
User-Agent: Apache-HttpClient/UNAVAILABLE (java 1.4)
HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Accept-Ranges: bytes
ETag: W/"377865-1315359197000"
Last-Modified: Wed, 07 Sep 2011 01:33:17 GMT
Content-Type: application/vnd.android.package-archive
Content-Length: 377865
Date: Tue, 25 Oct 2011 02:07:45 GMT
PK.........\$?................META-INF/MANIFEST.MF.Y[s...}.....
xNY.@.dW..PD.. r.%.U>...r......N.O’UI.C...,....W.......w./ ....
..../...K....OoP..#../..........".-,..~.S..._.|......o..1..k...
..........]SSSSSSSSSSSkSSSS7WB5
 rthyOV3JeJ4q96sSrc5Os7g6Wsz8hJn99P6O6UaRgkSZsu
 ...
Figure 4. An Update Attack from AnserverBot
Jifake [18], Spitmo [19] and ZitMo [20]. The last two are
designed to steal user’s sensitive banking information.
The GGTracker malware starts from its in-app advertise-
ments. In particular, when a user clicks a special advertise-