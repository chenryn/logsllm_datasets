oid pingMIB include;
oid jnxPingMIB include;
community private {
authorization read-write;
view ping-mib-view;
}
}
}
The following configuration allows read-only access to clients with IP addresses in the range 1.2.3.4/24,
and denies access to systems in the range fe80::1:2:3:4/64:
[edit]
snmp {
community field-service {
authorization read-only;
clients {
default restrict; # Restrict access to all SNMP clients not explicitly
# listed on the following lines.
1.2.3.4/24; # Allow access by all clients in 1.2.3.4/24 except
fe80::1:2:3:4/64 restrict;# fe80::1:2:3:4/64.
}
}
}
566
Configure the SNMPv3 Community
IN THIS SECTION
Configuring the Community Name | 567
Configuring the Context | 567
Configuring the Security Names | 568
Configuring the Tag | 568
The SNMP community defines the relationship between an SNMP server system and the client systems.
This statement is optional.
To configure the SNMP community, include the snmp-community statement at the [edit snmp v3] hierarchy
level:
[edit snmp v3]
snmp-community community-index;
community-index is the index for the SNMP community.
To configure the SNMP community properties, include the following statements at the [edit snmp v3 snmp-
community community-index] hierarchy level:
[edit snmp v3 snmp-community community-index]
community-name community-name;
context context-name;
security-name security-name;
tag tag-name;
The following is a minimal set of sample configuration that is needed for snmp v3 snmp-community
configuration:
set snmp v3 vacm security-to-group security-model v2c security-name NOSNMPV3 group SNMPV3GROUP
set snmp v3 vacm access group SNMPV3GROUP default-context-prefix security-model any security-
level none read-view SNMPVIEW
set snmp v3 vacm access group SNMPV3GROUP default-context-prefix security-model any security-
567
level none write-view SNMPVIEW
set snmp v3 snmp-community SNMPV3COMMUNITY community-name JTACCOMMUNITY
set snmp v3 snmp-community SNMPV3COMMUNITY security-name NOSNMPV3
set snmp view SNMPVIEW oid .1 include
NOTE: The community used by the user which does not support SNMPv3, will continue to use
SNMPv2.
For more information, see the following configuration:
snmpget -v 2c -c JTACCOMMUNITY 10.52.170.100 sysUpTime.0
This section includes the following topics:
Configuring the Community Name
The community name defines the SNMP community. The SNMP community authorizes SNMPv1 or
SNMPv2c clients. The access privileges associated with the configured security name define which MIB
objects are available and the operations (read, write, or notify) allowed on those objects.
To configure the SNMP community name, include the community-name statement at the [edit snmp v3 snmp-
community community-index] hierarchy level. For more information about this statement, see community-
name.
Configuring the Context
An SNMP context defines a collection of management information that is accessible to an SNMP entity.
Typically, an SNMP entity has access to multiple contexts. A context can be a physical or logical system,
a collection of multiple systems, or even a subset of a system. Each context in a management domain
has a unique identifier.
To configure an SNMP context, include the context context-name statement at the [edit snmp v3 snmp-
community community-index] hierarchy level. For more information about this statement, see context
(SNMPv3).
NOTE: To query a routing instance or a logical system,
568
Configuring the Security Names
To assign a community string to a security name, include the security-name statement at the [edit snmp v3
snmp-community community-index] hierarchy level:
[edit snmp v3 snmp-community community-index]
security-name security-name;
security-name is used when access control is set up. The security-to-group configuration at the [edit snmp v3
vacm] hierarchy level identifies the group.
NOTE: This security name must match the security name configured at the [edit snmp v3 target-
parameters target-parameters-name parameters] hierarchy level when you configure traps.
Configuring the Tag
To configure the tag, include the tag statement at the [edit snmp v3 snmp-community community-index] hierarchy
level. For more information about this statement, see tag.
Example: Configure SNMPv3 Community
IN THIS SECTION
Requirements | 568
Overview | 569
Configuration | 569
Verification | 572
This example shows how to configure an SNMPv3 community.
Requirements
No special configuration beyond device initialization is required before configuring this example.
569
Overview
This example demonstrates how to create an SNMPv3 community. Define the SNMP community name,
specify security name to perform the access control, and define tag name which identifies the address of
managers that are allowed to use a community string. The target address defines a management
application's address and parameters that are used in sending notifications.
When the device receives a packet with a recognized community string and a tag is associated with that
packet, the Junos software looks up all the target addresses with this tag and verifies that the source
address of this packet matches one of the configured target addresses.
Specify where you want the traps to be sent and define what SNMPv1 and SNMPv2c packets are
allowed. Specify target address name that identifies the target address, define the target address, mask
range of address, port number, tag list, and target parameter.
Configuration
IN THIS SECTION
CLI Quick Configuration | 569
Procedure | 570
Results | 571
CLI Quick Configuration
To quickly configure this example, copy the following commands, paste them into a text file, remove any
line breaks, change any details necessary to match your network configuration, copy and paste the
commands into the CLI at the [edit snmp v3] hierarchy level, and then enter commit from configuration
mode.
set snmp-community index1 community-name "public"
set snmp-community index1 security-name john
set snmp-community index1 tag router1
set target-address ta1 address 10.1.1.1
set target-address ta1 address-mask 255.255.255.0
set target-address ta1 port 162
set target-address ta1 tag-list router1
set target-address ta1 target-parameters tp1
570
Procedure
Step-by-Step Procedure
The following example requires you to navigate various levels in the configuration hierarchy. For
instructions on how to do that, see Using the CLI Editor in Configuration Mode in the Junos OS CLI User
Guide .
1. Configure the SNMP community name.
[edit snmp v3]
user@host# set snmp-community index1 community-name "public"
NOTE: The SNMP community name must be unique.
2. Configure the security name to perform access control.
[edit snmp v3]
user@host# set snmp-community index1 security-name john
3. Define the tag name. The tag name identifies the address of managers that are allowed to use a
community string.
[edit snmp v3]
user@host# set snmp-community index1 tag router1
4. Configure SNMP target address.
[edit snmp v3]
user@host# set target-address ta1 address 10.1.1.1
5. Configure the mask range of the address for the community string access control.
[edit snmp v3]
user@host#set target-address ta1 address-mask 255.255.255.0
571
6. Configure SNMPv3 target port number.
[edit snmp v3]
user@host#set target-address ta1 port 162
7. Configure SNMPv3 tag list to select the target addresses.
[edit snmp v3]
user@host#set target-address ta1 tag-list router1
8. Configure SNMPv3 target parameter name in the target parameter table.
[edit snmp v3]
user@host#set target-address ta1 target-parameters tp1
Results
From configuration mode, confirm your configuration by entering the show snmp v3 command. If the
output does not display the intended configuration, repeat the configuration instructions in this
example.
[edit]
user@host# show snmp v3
target-address ta1 {
address 10.1.1.1;
port 162;
tag-list router1;
address-mask 255.255.255.0;
target-parameters tp1;
}
snmp-community index1 {
community-name "$9$JOZi.QF/AtOz3"; ## SECRET-DATA
security-name john;
tag router1;
}
572
Verification
IN THIS SECTION
Verifying SNMPv3 community | 572
Verifying SNMPv3 community
Purpose
Verify if SNMPv3 community is enabled.
Action
To verify SNMPv3 community configuration, enter show snmp v3 community command. If the output does
not display the intended configuration, repeat the instructions in this example to correct the
configuration.
Community Security Context Tag Storage Status
index1 john router1 nonvolatile active
Meaning
The output displays the information about SNMPv3 community being enabled on the system.
MIB Views
IN THIS SECTION
Configure MIB Views | 573
Configure Ping Proxy MIB | 574
573
SNMPv3 defines the concept of MIB views in RFC 3415, View-based Access Control Model (VACM) for
the Simple Network Management Protocol (SNMP). MIB views provide an agent better control over who
can access specific branches and objects within its MIB tree. A view consists of a name and a collection
of SNMP object identifiers, which are either explicitly included or excluded. Once defined, a view is then
assigned to an SNMPv3 group or SNMPv1/v2c community (or multiple communities), automatically
masking which parts of the agentâ€™s MIB tree members of the group or community can (or cannot) access.
Configure MIB Views
By default, an SNMP community grants read access and denies write access to all supported MIB
objects (even communities configured as authorization read-write). To restrict or grant read or write access
to a set of MIB objects, you must configure a MIB view and associate the view with a community.
To configure MIB views, see view (Configuring a MIB View).
To remove an OID completely, use the delete view all oid oid-number command but omit the include
parameter.
[edit groups global snmp]
user@host# set view view-name oid object-identifier (include | exclude)
The following example creates a MIB view called ping-mib-view. The oid statement does not require a
dot at the beginning of the object identifier. The snmp view statement includes the branch under the
object identifier .1.3.6.1.2.1.80. This includes the entire DISMAN-PINGMIB subtree (as defined in RFC
2925, Definitions of Managed Objects for Remote Ping, Traceroute, and Lookup Operations), which
effectively permits access to any object under that branch.
[edit groups global snmp]
user@host# set view ping-mib-view oid 1.3.6.1.2.1.80 include
The following example adds a second branch in the same MIB view.
[edit groups global snmp]
user@host# set view ping-mib-view oid jnxPingMIB include
Assign a MIB view to a community that you want to control.
To associate MIB views with a community, see view (SNMP Community).
For more information about the Ping MIB, see RFC 2925 and PING MIB.
574
SEE ALSO
oid
Configure Ping Proxy MIB
Restrict the ping-mib community to read and write access of the Ping MIB and jnxpingMIB only. Read or
write access to any other MIB using this community is not allowed.
[edit snmp]
view ping-mib-view {
oid 1.3.6.1.2.1.80 include; #pingMIB
oid jnxPingMIB include; #jnxPingMIB
}
community ping-mib {
authorization read-write;
view ping-mib-view;
}
The following configuration prevents the no-ping-mib community from accessing Ping MIB and
jnxPingMIB objects. However, this configuration does not prevent the no-ping-mib community from
accessing any other MIB object that is supported on the device.
[edit snmp]
view no-ping-mib-view {
oid 1.3.6.1.2.1.80 exclude; # deny access to pingMIB objects
oid jnxPingMIB exclude; # deny access to jnxPingMIB objects
}
community no-ping-mib {
authorization read-write;
view ping-mib-view;
}
SEE ALSO
view (Configuring a MIB View)
oid
575
SNMP MIBs Supported by Junos OS and Junos OS
Evolved
IN THIS SECTION
SNMP MIBs Support | 575
MIB Objects for the QFX Series | 584
Fabric Chassis MIB | 588
Standard SNMP MIBs Supported by Junos OS | 594
Enterprise-Specific MIBs for Junos OS Evolved | 609
Enterprise-Specific SNMP MIBs Supported by Junos OS | 622
Standard MIBs for Junos OS Evolved | 643
SNMP MIBs Support
IN THIS SECTION
MIBs Supported on QFX Series Standalone Switches and QFX Series Virtual Chassis | 575
MIBs Supported on QFabric Systems | 581
The QFX Series standalone switches, QFX Series Virtual Chassis, and QFabric systems support standard
MIBs and Juniper Networks enterprise-specific MIBs.
For information about enterprise-specific SNMP MIB objects, see the SNMP MIB Explorer. You can use
SNMP MIB Explorer to view information about various MIBs, MIB objects, and SNMP notifications
supported on Juniper Networks devices.
MIBs Supported on QFX Series Standalone Switches and QFX Series Virtual Chassis
The QFX Series standalone switches and QFX Series Virtual Chassis support both standard MIBs and
Juniper Networks enterprise-specific MIBs. For more information, see:
576
â€¢ Table 48 on page 576 for standard MIBs.
â€¢ Table 49 on page 578 for Juniper Networks enterprise-specific MIBs.
Table 48: Standard MIBs Supported on QFX Series Standalone Switches and QFX Series Virtual Chassis
RFC Additional Information
IEEE 802.1ab section 12.1, Link Layer Supported tables and objects:
Discovery Protocol (LLDP) MIB
â€¢ lldpRemManAddrOID
â€¢ lldpLocManAddrOID
â€¢ lldpReinitDelay
â€¢ lldpNotificationInterval
â€¢ lldpStatsRxPortFramesDiscardedTotal
â€¢ lldpStatsRxPortFramesError
â€¢ lldpStatsRxPortTLVsDiscardedTotal
â€¢ lldpStatsRxPortTLVsUnrecognizedTotal
â€¢ lldpStatsRxPortAgeoutsTotal
IEEE 802.3ad, Aggregation of Multiple The following tables and objects are supported:
Link Segments
â€¢ dot3adAggPortTable, dot3adAggPortListTable, dot3adAggTable, and
dot3adAggPortStatsTable
â€¢ dot3adAggPortDebugTable (only dot3adAggPortDebugRxState,
dot3adAggPortDebugMuxState,
dot3adAggPortDebugActorSyncTransitionCount,
dot3adAggPortDebugPartnerSyncTransitionCount,
dot3adAggPortDebugActorChangeCount, and
dot3adAggPortDebugPartnerChangeCount)
â€¢ dot3adTablesLastChanged
RFC 1286, Definitions of Managed â€”
Objects for Bridges
577
Table 48: Standard MIBs Supported on QFX Series Standalone Switches and QFX Series Virtual Chassis
(Continued)
RFC Additional Information
RFC 2576, Coexistence between NOTE: RFC 2576 has been replaced by RFC 3584. However, Junos OS
Version 1, Version 2, and Version 3 of supports both RFC 2576 and RFC 3584.
the Internet-standard Network
Management Framework
RFC 2933, Internet Group â€”
Management Protocol (IGMP) MIB
RFC 4318, Definitions of Managed Supports 802.1w and 802.1t extensions for RSTP.
Objects for Bridges with Rapid
Not supported on OCX Series devices.
Spanning Tree Protocol
RFC 4363b, Q-Bridge VLAN MIB NOTE: On QFX3500 and QFX3600 switches, the dot1dTpFdbTable
table (RFC 4188, Definitions of Managed Objects for Bridges) is
populated only with MAC addresses learned on the default VLAN. To
see the MAC addresses of all VLANs, specify the dot1qTpFdbTable
table (in this MIB) when you issue the show snmp mib walk command.
Not supported on OCX Series devices.
Internet Assigned Numbers Authority, See http://www.iana.org/assignments/ianaiftype-mib .
IANAiftype Textual Convention MIB
(referenced by RFC 2233)
Internet draft draft-reeder-snmpv3- â€”
usm-3desede-00.txt, Extension to the
User-Based Security Model (USM) to
Support Triple-DES EDE in â€˜Outsideâ€™
CBC Mode
Internet draft draft-ietf-idmr-igmp- â€”
mib-13.txt, Internet Group
Management Protocol (IGMP) MIB
578
Table 48: Standard MIBs Supported on QFX Series Standalone Switches and QFX Series Virtual Chassis
(Continued)
RFC Additional Information
ESO Consortium MIB NOTE: The ESO Consortium MIB has been replaced by RFC 3826. See
http://www.snmp.com/eso/.
Table 49: Juniper Networks Enterprise-Specific MIBs Supported on QFX Series Standalone Switches
and QFX Series Virtual Chassis
MIB Description
Alarm MIB (mib-jnx-chassis- Provides support for alarms from the switch.
alarm)
Analyzer MIB (mib-jnx- Contains analyzer and remote analyzer data related to port mirroring.
analyzer)
Not supported on OCX Series devices.
Chassis MIB (mib-jnx-chassis) Provides support for environmental monitoring (power supply state, board
voltages, fans, temperatures, and airflow) and inventory support for the chassis,
Flexible PIC Concentrators (FPCs), and PICs.
NOTE: The jnxLEDTable table has been deprecated.
Chassis Definitions for Router Contains the object identifiers (OIDs) that are used by the Chassis MIB to
Model MIB (mib-jnx-chas- identify routing and switching platforms and chassis components. The Chassis
defines) MIB provides information that changes often, whereas the Chassis Definitions
for Router Model MIB provides information that changes less often.
Class-of-Service MIB (mib-jnx- Provides support for monitoring interface output queue statistics per interface
cos) and per forwarding class.
Configuration Management Provides notification for configuration changes and rescue configuration
MIB (mib-jnx-cfgmgmt) changes in the form of SNMP traps. Each trap contains the time at which the
configuration change was committed, the name of the user who made the
change, and the method by which the change was made.
A history of the last 32 configuration changes is kept in jnxCmChgEventTable.