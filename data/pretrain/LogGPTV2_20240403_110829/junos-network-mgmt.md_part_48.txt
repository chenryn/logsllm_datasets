### Configuring SNMP Communities and MIB Views

#### Overview
This document provides a detailed guide on configuring SNMP communities and MIB views, including examples and verification steps. It covers both standard and enterprise-specific MIBs supported by Junos OS and Junos OS Evolved.

#### Configuring the SNMP Community

##### Introduction
The SNMP community defines the relationship between an SNMP server system and the client systems. This section explains how to configure the SNMP community, including the community name, context, security names, and tags.

##### Minimal Configuration Example
To configure the SNMPv3 community, you need to include the `snmp-community` statement at the `[edit snmp v3]` hierarchy level. Here is a minimal configuration example:

```plaintext
set snmp v3 vacm security-to-group security-model v2c security-name NOSNMPV3 group SNMPV3GROUP
set snmp v3 vacm access group SNMPV3GROUP default-context-prefix security-model any security-level none read-view SNMPVIEW
set snmp v3 vacm access group SNMPV3GROUP default-context-prefix security-model any security-level none write-view SNMPVIEW
set snmp v3 snmp-community SNMPV3COMMUNITY community-name JTACCOMMUNITY
set snmp v3 snmp-community SNMPV3COMMUNITY security-name NOSNMPV3
set snmp view SNMPVIEW oid .1 include
```

**Note:** The community used by users who do not support SNMPv3 will continue to use SNMPv2.

##### Detailed Configuration

###### Configuring the Community Name
The community name authorizes SNMPv1 or SNMPv2c clients. Access privileges associated with the configured security name define which MIB objects are available and the operations (read, write, or notify) allowed on those objects.

**Configuration:**
```plaintext
[edit snmp v3 snmp-community community-index]
community-name community-name;
```

###### Configuring the Context
An SNMP context defines a collection of management information accessible to an SNMP entity. Each context in a management domain has a unique identifier.

**Configuration:**
```plaintext
[edit snmp v3 snmp-community community-index]
context context-name;
```

**Note:** To query a routing instance or a logical system, ensure the context is correctly configured.

###### Configuring the Security Names
Assign a community string to a security name for access control.

**Configuration:**
```plaintext
[edit snmp v3 snmp-community community-index]
security-name security-name;
```

**Note:** This security name must match the security name configured at the `[edit snmp v3 target-parameters target-parameters-name parameters]` hierarchy level when configuring traps.

###### Configuring the Tag
A tag identifies the address of managers that are allowed to use a community string.

**Configuration:**
```plaintext
[edit snmp v3 snmp-community community-index]
tag tag-name;
```

#### Example: Configure SNMPv3 Community

##### Requirements
No special configuration beyond device initialization is required before configuring this example.

##### Overview
This example demonstrates how to create an SNMPv3 community, define the SNMP community name, specify a security name for access control, and define a tag name.

##### Configuration

###### CLI Quick Configuration
```plaintext
set snmp-community index1 community-name "public"
set snmp-community index1 security-name john
set snmp-community index1 tag router1
set target-address ta1 address 10.1.1.1
set target-address ta1 address-mask 255.255.255.0
set target-address ta1 port 162
set target-address ta1 tag-list router1
set target-address ta1 target-parameters tp1
```

###### Step-by-Step Procedure
1. **Configure the SNMP community name:**
   ```plaintext
   [edit snmp v3]
   user@host# set snmp-community index1 community-name "public"
   ```

2. **Configure the security name for access control:**
   ```plaintext
   [edit snmp v3]
   user@host# set snmp-community index1 security-name john
   ```

3. **Define the tag name:**
   ```plaintext
   [edit snmp v3]
   user@host# set snmp-community index1 tag router1
   ```

4. **Configure the SNMP target address:**
   ```plaintext
   [edit snmp v3]
   user@host# set target-address ta1 address 10.1.1.1
   ```

5. **Configure the mask range of the address:**
   ```plaintext
   [edit snmp v3]
   user@host# set target-address ta1 address-mask 255.255.255.0
   ```

6. **Configure the SNMPv3 target port number:**
   ```plaintext
   [edit snmp v3]
   user@host# set target-address ta1 port 162
   ```

7. **Configure the SNMPv3 tag list:**
   ```plaintext
   [edit snmp v3]
   user@host# set target-address ta1 tag-list router1
   ```

8. **Configure the SNMPv3 target parameter name:**
   ```plaintext
   [edit snmp v3]
   user@host# set target-address ta1 target-parameters tp1
   ```

##### Verification
To verify the SNMPv3 community configuration, use the following command:
```plaintext
show snmp v3 community
```

Example output:
```plaintext
Community Security Context Tag Storage Status
index1 john router1 nonvolatile active
```

#### Configuring MIB Views

##### Introduction
MIB views provide an agent better control over who can access specific branches and objects within its MIB tree. A view consists of a name and a collection of SNMP object identifiers, which are either explicitly included or excluded.

##### Creating a MIB View
To create a MIB view, use the following command:
```plaintext
[edit groups global snmp]
user@host# set view view-name oid object-identifier (include | exclude)
```

**Example:**
```plaintext
[edit groups global snmp]
user@host# set view ping-mib-view oid 1.3.6.1.2.1.80 include
[edit groups global snmp]
user@host# set view ping-mib-view oid jnxPingMIB include
```

##### Assigning MIB Views to a Community
To associate MIB views with a community, use the `view` statement:
```plaintext
[edit snmp]
view ping-mib-view {
    oid 1.3.6.1.2.1.80 include; # pingMIB
    oid jnxPingMIB include; # jnxPingMIB
}
community ping-mib {
    authorization read-write;
    view ping-mib-view;
}
```

##### Example: Restricting Access
To prevent a community from accessing certain MIB objects, exclude those OIDs:
```plaintext
[edit snmp]
view no-ping-mib-view {
    oid 1.3.6.1.2.1.80 exclude; # deny access to pingMIB objects
    oid jnxPingMIB exclude; # deny access to jnxPingMIB objects
}
community no-ping-mib {
    authorization read-write;
    view no-ping-mib-view;
}
```

#### Supported MIBs

##### Standard MIBs
- **LLDP MIB (IEEE 802.1ab):** Supports various tables and objects.
- **Aggregation MIB (IEEE 802.3ad):** Supports multiple link segments.
- **Bridges MIB (RFC 1286):** Definitions of managed objects for bridges.
- **Coexistence MIB (RFC 2576):** Supports coexistence between different versions of the Internet-standard Network Management Framework.
- **IGMP MIB (RFC 2933):** Internet Group Management Protocol.
- **RSTP MIB (RFC 4318):** Rapid Spanning Tree Protocol.
- **Q-Bridge VLAN MIB (RFC 4363b):** Q-Bridge VLAN MIB.
- **IANAiftype MIB (RFC 2233):** IANAiftype Textual Convention MIB.
- **USM MIB (draft-reeder-snmpv3-usm-3desede-00.txt):** Extension to the User-Based Security Model.
- **IGMP MIB (draft-ietf-idmr-igmp-mib-13.txt):** Internet Group Management Protocol MIB.
- **ESO Consortium MIB:** Replaced by RFC 3826.

##### Enterprise-Specific MIBs
- **Alarm MIB (mib-jnx-chassis-alarm):** Provides support for alarms.
- **Analyzer MIB (mib-jnx-analyzer):** Contains analyzer and remote analyzer data.
- **Chassis MIB (mib-jnx-chassis):** Supports environmental monitoring and inventory.
- **Chassis Definitions MIB (mib-jnx-chas-defines):** Identifies routing and switching platforms.
- **Class-of-Service MIB (mib-jnx-cos):** Monitors interface output queue statistics.
- **Configuration Management MIB (mib-jnx-cfgmgmt):** Provides notifications for configuration changes.

For more information about these MIBs, refer to the SNMP MIB Explorer and relevant RFCs.