User: 如何创建一个简单的Python脚本，在每天早上定时向某个邮箱发送服务器的CPU、内存、磁盘使用情况？
Assistant: 要创建一个简单的Python脚本，每天早上定时向某个邮箱发送服务器的CPU、内存、磁盘使用情况，请按照以下步骤操作：

Step 1：安装必要的Python库
你需要安装psutil和smtplib库，这是用来获取系统资源使用情况和发送Email的。可以在终端里使用pip安装。

pip install psutil
pip install smtplib

Step 2：编写Python脚本
请按照以下Python脚本编写。该脚本将使用psutil库获取系统资源使用情况，并使用smtplib库将这些信息发送到指定的邮箱。

```
import smtplib
import psutil
import datetime
from email.mime.text import MIMEText
from email.header import Header

# 邮件服务器配置
smtp_server = 'smtp.exmail.qq.com'  # 邮件服务器
smtp_port = 465  # 端口号
smtp_user = 'your-email-address'  # 邮箱账户
smtp_password = 'your-email-password'  # 邮箱密码

# 发送邮件的基本信息
sender = 'your-email-address'  # 发件人邮箱
receiver = 'recipient-email-address' # 收件人邮箱

# 获取CPU、内存、磁盘使用情况
cpu_percent = psutil.cpu_percent(interval=1)
mem_info = psutil.virtual_memory()
mem_percent = mem_info.percent
disk_info = psutil.disk_usage('/')
disk_percent = disk_info.percent

# 构造邮件内容
now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
message = MIMEText('服务器资源使用情况：\n' +
                   'CPU使用率：' + str(cpu_percent) + '%\n' +
                   '内存使用率：' + str(mem_percent) + '%\n' +
                   '磁盘使用率：' + str(disk_percent) + '%\n' +
                   '发送时间：' + str(now), 'plain', 'utf-8')
message['From'] = Header('Server Monitoring', 'utf-8')
message['To'] = Header('Admin', 'utf-8')
message['Subject'] = Header('Server Usage Report', 'utf-8')

# 发送邮件
try:
    smtpObj = smtplib.SMTP_SSL(smtp_server, smtp_port)
    smtpObj.login(smtp_user, smtp_password)
    smtpObj.sendmail(sender, receiver, message.as_string())
    smtpObj.quit()
    print("邮件发送成功")
except smtplib.SMTPException as e:
    print("Error: 无法发送邮件，错误详情：" + str(e))
```

Step 3：设置计划任务
为了在每天早上定时发送邮件，你需要使用计划任务系统来定期运行Python脚本。在Linux系统上，你可以使用crontab来设置计划任务。例如，我们可以在早上6点运行这个脚本。可以在终端里输入以下命令来编辑cron表：

crontab -e

然后在打开的文件末尾添加一行如下：

0 6 * * * python /path/to/your/script.py >/dev/null 2>&1

这样，计划任务将在每天早上6点自动运行Python脚本，并将结果发送到指定的邮箱。

希望这个简单的Python脚本能对你有所帮助！