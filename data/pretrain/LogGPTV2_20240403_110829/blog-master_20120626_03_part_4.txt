show remote memory-read-packet-size -- Show the maximum number of bytes per memory-read packet  
show remote memory-write-packet-size -- Show the maximum number of bytes per memory-write packet  
show remote noack-packet -- Show current use of remote protocol `QStartNoAckMode' (noack) packet  
show remote osdata-packet -- Show current use of remote protocol `qXfer:osdata:read' (osdata) packet  
show remote p-packet -- Show current use of remote protocol `p' (fetch-register) packet  
show remote pass-signals-packet -- Show current use of remote protocol `QPassSignals' (pass-signals) packet  
show remote query-attached-packet -- Show current use of remote protocol `qAttached' (query-attached) packet  
show remote read-aux-vector-packet -- Show current use of remote protocol `qXfer:auxv:read' (read-aux-vector) packet  
show remote read-siginfo-object-packet -- Show current use of remote protocol `qXfer:siginfo:read' (read-siginfo-object) packet  
show remote read-spu-object-packet -- Show current use of remote protocol `qXfer:spu:read' (read-spu-object) packet  
show remote read-watchpoint-packet -- Show current use of remote protocol `Z3' (read-watchpoint) packet  
show remote reverse-continue-packet -- Show current use of remote protocol `bc' (reverse-continue) packet  
show remote reverse-step-packet -- Show current use of remote protocol `bs' (reverse-step) packet  
show remote run-packet -- Show current use of remote protocol `vRun' (run) packet  
show remote search-memory-packet -- Show current use of remote protocol `qSearch:memory' (search-memory) packet  
show remote set-register-packet -- Show current use of remote protocol `P' (set-register) packet  
show remote software-breakpoint-packet -- Show current use of remote protocol `Z0' (software-breakpoint) packet  
show remote supported-packets-packet -- Show current use of remote protocol `qSupported' (supported-packets) packet  
show remote symbol-lookup-packet -- Show current use of remote protocol `qSymbol' (symbol-lookup) packet  
show remote system-call-allowed -- Show if the host system(3) call is allowed for the target  
show remote target-features-packet -- Show current use of remote protocol `qXfer:features:read' (target-features) packet  
show remote verbose-resume-packet -- Show current use of remote protocol `vCont' (verbose-resume) packet  
show remote write-siginfo-object-packet -- Show current use of remote protocol `qXfer:siginfo:write' (write-siginfo-object) packet  
show remote write-spu-object-packet -- Show current use of remote protocol `qXfer:spu:write' (write-spu-object) packet  
show remote write-watchpoint-packet -- Show current use of remote protocol `Z2' (write-watchpoint) packet  
show remoteaddresssize -- Show the maximum size of the address (in bits) in a memory packet  
show remotebaud -- Show baud rate for remote serial I/O  
show remotebreak -- Show whether to send break if interrupted  
show remotecache -- Show cache use for remote targets  
show remoteflow -- Show use of hardware flow control for remote serial I/O  
show remotelogbase -- Show numerical base for remote session logging  
show remotelogfile -- Show filename for remote session recording  
show remotetimeout -- Show timeout limit to wait for target to respond  
show remotewritesize -- Show the maximum number of bytes per memory write packet (deprecated)  
show schedule-multiple -- Show mode for resuming threads of all processes  
show scheduler-locking -- Show mode for locking scheduler during execution  
show serial -- Show default serial/parallel port configuration  
show solib-absolute-prefix -- Show the current system root  
show solib-search-path -- Show the search path for loading non-absolute shared library symbol files  
show stack-cache -- Show cache use for stack access  
show step-mode -- Show mode of the step operation  
show stop-on-solib-events -- Show stopping for shared library events  
show struct-convention -- Show the convention for returning small structs  
show substitute-path -- Usage: show substitute-path [FROM]  
show symbol-reloading -- Show dynamic symbol table reloading multiple times in one run  
show sysroot -- Show the current system root  
show target-async -- Show whether gdb controls the inferior in asynchronous mode  
show target-charset -- Show the target character set  
show target-wide-charset -- Show the target wide character set  
show tcp -- TCP protocol specific variables  
show tcp auto-retry -- Show auto-retry on socket connect  
show tcp connect-timeout -- Show timeout limit for socket connection  
show tdesc -- Show target description specific variables  
show tdesc filename -- Show the file to read for an XML target description  
show trace-commands -- Show state of GDB CLI command tracing  
show trust-readonly-sections -- Show mode for reading from readonly sections  
show tui -- TUI configuration variables  
show tui active-border-mode -- Show the attribute mode to use for the active TUI window border  
show tui border-kind -- Show the kind of border for TUI windows  
show tui border-mode -- Show the attribute mode to use for the TUI window borders  
show unwind-on-terminating-exception -- Show unwinding of stack if std::terminate() is called while in a call dummy  
show unwindonsignal -- Show unwinding of stack if a signal is received while in a call dummy  
show user -- Show definitions of user defined commands  
show values -- Elements of value history around item number IDX (or last ten)  
show verbose -- Show verbosity  
show version -- Show what version of GDB this is  
show warranty -- Various kinds of warranty you do not have  
show watchdog -- Show watchdog timer  
show width -- Show number of characters gdb thinks are in a line  
show write -- Show writing into executable and core files  
Command class: support  
apropos -- Search for commands matching a REGEXP  
define -- Define a new command name  
document -- Document a user-defined command  
dont-repeat -- Don't repeat this command  
down-silently -- Same as the `down' command  
echo -- Print a constant string  
help -- Print list of commands  
if -- Execute nested commands once IF the conditional expression is non zero  
interpreter-exec -- Execute a command in an interpreter  
make -- Run the ``make'' program using the rest of the line as arguments  
overlay -- Commands for debugging overlays  
overlay auto -- Enable automatic overlay debugging  
overlay list-overlays -- List mappings of overlay sections  
overlay load-target -- Read the overlay mapping state from the target  
overlay manual -- Enable overlay debugging  
overlay map-overlay -- Assert that an overlay section is mapped  
overlay off -- Disable overlay debugging  
overlay unmap-overlay -- Assert that an overlay section is unmapped  
quit -- Exit gdb  
require -- Prefix command for requiring features  
require command -- Demand-load a command by name  
require function -- Demand-load a function by name  
shell -- Execute the rest of the line as a shell command  
source -- Read commands from a file named FILE  
up-silently -- Same as the `up' command  
while -- Execute nested commands WHILE the conditional expression is non zero  
Command class: tracepoints  
actions -- Specify the actions to be taken at a tracepoint  
collect -- Specify one or more data items to be collected at a tracepoint  
end -- Ends a list of commands or actions  
passcount -- Set the passcount for a tracepoint  
save-tracepoints -- Save current tracepoint definitions as a script  
tdump -- Print everything collected at the current tracepoint  
tfind -- Select a trace frame;  
tfind end -- Synonym for 'none'  
tfind line -- Select a trace frame by source line  
tfind none -- De-select any trace frame and resume 'live' debugging  
tfind outside -- Select a trace frame whose PC is outside the given range  
tfind pc -- Select a trace frame by PC  
tfind range -- Select a trace frame whose PC is in the given range  
tfind start -- Select the first trace frame in the trace buffer  
tfind tracepoint -- Select a trace frame by tracepoint number  
tstart -- Start trace data collection  
tstatus -- Display the status of the current trace data collection  
tstop -- Stop trace data collection  
while-stepping -- Specify single-stepping behavior at a tracepoint  
Command class: user-defined  
Unclassified commands  
function -- Placeholder command for showing help on convenience functions  
unset -- Complement to certain "set" commands  
unset environment -- Cancel environment variable VAR for the program  
unset exec-wrapper -- Disable use of an execution wrapper  
unset substitute-path -- Usage: unset substitute-path [FROM]  
unset tdesc -- Unset target description specific variables  
unset tdesc filename -- Unset the file to read for an XML target description  
```  
例子:  
```
First of all, find the directory where the corefile is generated.
Then use ls -ltr command in the directory to find the latest generated corefile.
To load the corefile use
gdb binary path of corefile
This will load the corefile.
Then you can get the information using the bt command.
For a detailed backtrace use bt full.
To print the variables, use print variable-name or p variable-name
To get any help on GDB, use the help option or use apropos search-topic
Use frame frame-number to go to the desired frame number.
Use up n and down n commands to select frame n frames up and select frame n frames down respectively.
To stop GDB, use quit or q.
```
```
You just need a binary (with debugging symbols included) that is identical to the one that generated the core dump file. Then you can run gdb path/to/the/binary path/to/the/core/dump/file to debug it.
When it starts up, you can use bt (for backtrace) to get a stack trace from the time of the crash. In the backtrace, each function invocation is given a number. You can use frame number (replacing number with the corresponding number in the stack trace) to select a particular stack frame.
You can then use list to see code around that function, and info locals to see the local variables. You can also use print name_of_variable (replacing "name_of_variable" with a variable name) to see its value.
Typing help within GDB will give you a prompt that will let you see additional commands.
```
```
gdb path/to/the/binary path/to/the/core/dump/file
bt
bt full
frame number
list
info locals
print var_name
help
```
https://stackoverflow.com/questions/5115613/core-dump-file-analysis  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")