zenu $m -tearoff 0
Sn add radio
-comand SetBg
-1abe1*Red*-background red-variable background -value red\
$n add radio -label*Yellow* =background yellow variable background \
-value yellow -command SetBg
Se add radio -label *white*-background white -variable background -value white 1
-command SetBg
-conand RetBg
Sm invoke 3
Insert option button cascade Menu
set m.menu.options.font
menu Sn =tearoff 0
Bold*-variable bold -command ConfigureFont
Sm invoke 3
从上面的代码可以看出，在标准的素材选项之外，菜单里的菜单项还可以配置为有不同的
背景和前景。
6）接下来，我们在主菜单里再增加一个把位图插人到文本素材里去的子菜单项。我们已经
说过，这些位图菜单项命令有一个副作用一但只有这样才能保证每次选择这个菜单项都能把位
图成功地插人到文本素材里。
Create insert menu option
set m.menu.insert
1
.menu add cascade -labe1*Insert* -menu $m -underline 0
Denu $m -tearoff 0
foreach 1（info questhead error)（
-hidemargin 1 -coomand *InsertInage $i*
Sm entryconfiguze 2 -colurmbreax 1
观察上面的代码段可以发现：菜单里的菜单项可以通过“entryconfigure”命令和它的“-
columnbreak”选项被摆放为一个表格的样子。
7）最后，我们把菜单连接到顶层素材上去，使它成为缺省的菜单条。我们还用到了
>虚拟事件，它会在任何菜单或它的菜单项被选取时触发。>虚拟
加入java编程群：524621833
---
## Page 528
510
Linux程序设计
事件会在那个消息标题签里显示一条消息，告诉用户哪个菜单项被选中了。
Attach the menu to the toplevel ment
configure -menu.nenu
bind Menu >{
if {[catch (%w entrycget active -1abel} 1abel]){
global nessage
set label *
set mesgage *You have selected Slabel...*
8）当你用下面的命令运行这个程序示例的时候
S vieh nenu.tcl
你将看到如图16-12所示的窗口。
Me lemonstr
E
Jnsert
tntiml
东里单
YO
图16-12
14.莱单按钮
菜单按钮（MenuButton）和带关联菜单的下压按钮其作用效果是一样的。它们能够通过一
个按钮提供一组选择项，而这在图形化用户操作界面里是很常见也很有用的。但菜单按钮和菜
单条又是有区别的，后者通常关联着不止一个的下级菜单，而前者只关联有一个菜单。一个顶
层窗口只能关联有一个菜单条，可菜单按钮却可以嵌人在用户操作界面的任何位置。
菜单按钮也可以组织起来构成菜单条，这个菜单条可以放在用户操作界面里的任何位置
（与顶层菜单不同）。你可以用它们在自己的用户操作界面里创建出工具条或类似的东西来。通
常，如果设置了-indicator选项，菜单按钮的行为也可以配置得象是一个选项菜单。菜单按钮的
命令语法如下所示：
senubutton pathMaze 7optlons?
加入jaVa编程群：524621833
---
## Page 529
第16章X窗口系统的程序设计
511
动手试试：莱单按钮
为演示菜单按钮的功能，我们将编写一个简单的应用程序，它在画布上以指定的填充色
绘制圆形和正方形。我们先来编写一个能够在画布上绘制圆形和正方形的功能过程。它使用了
三个全局变量；x、y、sgsize。坐标（x，y)用来指定需要在画布上的什么地方绘制出对象来；
sqsize被用做圆形的直径或正方形的边长、
1）让我们先从画圆形和方形开始。
w title .*Menubutton demonstration*
Initial paraneters to draw circles and squares
set x 50
set y 50
set sqsize 30
 procedure to draw canvas objects
proc Addobject {type}{
global x y sgsize sgsize fillc
if {Stype scircle*]{
C create oval Sx $y [expr $x+$sgsize][expr Sy+$sgsize]\
}elseif（$type =*square′)[
-tags item -tiil Sfi1lc
.C create rectangie Sx $y [expr Sx+$sqsize}[expr Sy+$sqsize]\
tags item -fill sfi11c
incr x 10
1
incr y 10
P
2）接下来，我们创建一个带有一个框、一个菜单按钮和一个退出按钮的画布。框素材用来
容纳菜单和退出按钮。我们打包所有这些元素，创建出用户操作主界面来。
frane .f -bd 2
menubutton_,f.ml -nenu .t.ml.menu -text *Draw*-relief raised -underline 0\
button .f.exit -text *Dismiss′-command *exit*
-direction left
$nanage the vidgets using the grid geometry manager.
s puodxa.x I- do apre- yoed
pack .f.1 .f.exit -side 1eft -expand 1
3）最后，我们给菜单按钮加上一个菜单。我们创建一个菜单再给它加上三个菜单项：两个
命令菜单项，分别绘制医形和正方形；一个子菜单素材，用来选择填充颜色。
menu $m -tearoff 0
set m .f.ml.menu
Sn add command -1abel *Circle* -command *Addobject circle*-accelerator *Meta-c*
Sn add command -label*Square′-command *Addobject square”-accelerator “Meta-s*
bind.
Addobject circle*
.c->
加入jaVa编程群：524621833
---
## Page 530
5/2
Linux程序设计
St add separator
Sm add cascade -label *F1ll Color..* -menu .f.ml.cascade
set n.f.ml.cascade
Sm add radio-labe1*Red*-background red-variable background value red\
menuSm =tearuff0
-cormand *set fillc red"
-value yellow -coemand *set fi1lc yellow*
$m add radio
-1abel *8lue*-background blue -variable background -value blue \
Sm add radio-label *White*-background white -variable background -value white 
-coemand *set fillc blue*
-connand *set fillc white*
$n invoke 1
从上面的代码可以看出，我们不仅可以给菜单项加上快捷键，还可以通过bind命令明确地创
建出绑定来。
15.弹出策单
Tk还支持弹出菜单（PopupMenu）。菜单按钮和菜单条提供的都是静态菜单，弹出菜单与它
们不同，它被用来提供上下文敏感的菜单系统。举个例子，假设你正在设计一个文本编辑器，
菜单里是“Spell..."、“Format..."、“Copy..."、“Delete...”等莱单项。弹出莱单能够帮
助完成这类的任务。弹出菜单能够把菜单关联到任何类型的素材上去，比如文本素材和画布素
材等。弹出菜单上没有任何关联的菜单按钮，它们只是普通的菜单。把一个绑定关联到某个特
定的素材，然后在该绑定的事件处理器里调用tk_popup命令，这样就可以动态地张贴出“普通
的”弹出菜单了。因为这些菜单是动态地张贴出来的，所以弹出菜单里的菜单项可以动态地生
成，只显示那些用得着的菜单项。
创建弹出菜单的常用命令格式如下所示：
tk_popup menu x y ?entry?
其中menu是将要张贴的菜单，x和y给出的是坐标，entry给出了菜单里某个菜单项的下标。
摆放菜单就等于是把菜单项摆放到指定地点。我们来建立儿个弹出菜单。
动手试试：弹出策单
1)首先，创建一个菜单，再给与该菜单关联的顶层窗口增加一个绑定。这样，当用户在这
个窗口上按下鼠标的第三键时，菜单就会被张贴出来。
catch (destroy $)
set .menu
bind{
menu Sw
Xe xe nueudndodx
2)创建菜单项。大家可以看出，弹出菜单在功能方面与普通菜单是完全一样的。
 Add menu entries
Sw add command -label *Print hello*\
加入java编程群：524621833
---
## Page 531
第16章X窗口系统的程序设计
513
$w add command -label *Red* -background red
Add a Cascade menu
set m Sw.cascade
Sv add cascade -label *Cascades* -menu Sm -underline 0
menu Sm -tearoff 0
S add cascade -1abel*Check buttons*\
set m $w.cascade.check
-menu $w.cascade.check -underline 0
menu $m -tearoff 0
$m add check -1abel
Oil checked’-variable oi1
*Transnission checked* -variable trans
$m add check
-1abel
‘Brakes checked"
-variable brakes
Sm add separator
$m invoke 1
$m invcke 3
$m add cascade -label*Radio buttons*\
set n Sw.cascade.radio
-menu Sw.cascade.radio -underline 0
menu $m -tearoff 0
Sn add radio -1abel
10 point*-variable pointSize -value 10
$m add zadio
-1abe1
"14point"
'18point"
 -
$m
add radio
-1abe1
'24point"
-variable pointsize -value
$m add radio
-label
-variable pointSize
-value
18
$m add radio
'32 point"
24
$m
PPR
sep
$m add radio
-label
*Roman*variable style -value roman
Sm add radio
-1abe1
Bold-variable style -value bold
$m add radio
$m invoke 1
$m invoke 7
当你通过“wishpopup.tk”命令运行这个程序示例的时候，将看到如图16-13所示的窗口。
ponptk
Printheto
Cascades
Check bultons
图16-13
加入iava编程群：524621833
---
## Page 532
Linux程序设计
16.选项莱单
Tk的选项莱单（OptionMenu）完全是用Tk编写的，目的是为了模仿Motif的选项按钮。它
的命令语法如下所示：
tk optionMenu w varNsme value 7value value ...7
tk_optionMenu命令创建出一个选项菜单按钮w，再给它关联上一个菜单。菜单按钮及其关
联菜单加在一起使用户能够选取由value参数给定的值中的一个。当前值将被保存在全局变量
varName里，用户可以通过这个变量对选项按钮进行操作和处理。调用tk_optionMenu返回的是
与该选项按钮关联着的菜单。
让我们用选项按钮来重新实现前面的按钮示例程序：
动手试试：莱单选项
1）我们把全局变量state设置为等于1，创建一个单选按钮和一个选项菜单。打包，把它们并
排摆放在--起。如下所示：
#1/usr/bin/wish -f
set state 1
checkbutton .lan -text ‘Language*-conmand {changeState} -relief flat\
set optMenu [tk_optionMenu .opt lang Tcl C Lisp C++]
-variable state
-onvalue
-
pack .1an opt -side left