    - name: Configure an Ethernet connection with 802.1X authentication
      hosts: node.example.com
      become: true
      tasks:
        - name: Copy client key for 802.1X authentication
          copy:
            src: "/srv/data/client.key"
            dest: "/etc/pki/tls/private/client.key"
            mode: 0600
        - name: Copy client certificate for 802.1X authentication
          copy:
            src: "/srv/data/client.crt"
            dest: "/etc/pki/tls/certs/client.crt"
        - name: Copy CA certificate for 802.1X authentication
          copy:
            src: "/srv/data/ca.crt"
            dest: "/etc/pki/ca-trust/source/anchors/ca.crt"
        - include_role:
            name: linux-system-roles.network
          vars:
            network_connections:
              - name: enp1s0
                type: ethernet
                autoconnect: yes
                ip:
                  address:
                    - 192.0.2.1/24
                    - 2001:db8:1::1/64
                  gateway4: 192.0.2.254
                  gateway6: 2001:db8:1::fffe
                  dns:
                    - 192.0.2.200
                    - 2001:db8:1::ffbb
                  dns_search:
                    - example.com
                ieee802_1x:
                  identity: user_name
                  eap: tls
                  private_key: "/etc/pki/tls/private/client.key"
                  private_key_password: "password"
                  client_cert: "/etc/pki/tls/certs/client.crt"
                  ca_cert: "/etc/pki/ca-trust/source/anchors/ca.crt"
                  domain_suffix_match: example.com
                state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   以 `root`{.literal} 用户身份连接到受管主机，输入：
        ``` literallayout
        # ansible-playbook -u root ~/enable-802.1x.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确定
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，请以当前登录到控制节点的用户 `ansible-playbook`{.literal}
    连接到受管主机。
:::
::: itemizedlist
**其它资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    file
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    file
-   `ansible-playbook(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#authenticating-a-rhel-client-to-the-network-using-the-802-1x-standard_configuring-and-managing-networking.html#configuring-802-1x-network-authentication-on-an-existing-wi-fi-connection-using-nmcli_authenticating-a-rhel-client-to-the-network-using-the-802-1x-standard}使用 nmcli 在现有 Wi-Fi 连接中配置 802.1X 网络身份验证 {.title}
:::
使用 `nmcli`{.literal}
工具，您可以配置客户端向网络验证其自身。这个过程描述了如何在现有名为
`wlp1s0`{.literal} 的 NetworkManager Wi-Fi 连接配置集中使用微软
Challenge-Handshake Authentication Protocol 版本 2（MSCHAPv2）
配置保护扩展验证协议（PEAP）验证。
::: orderedlist
**先决条件**
1.  网络必须具有 802.1X 网络身份验证。
2.  Wi-Fi 连接配置集存在于 NetworkManager 中，且具有有效的 IP 配置。
3.  如果需要客户端验证验证程序证书,则必须将证书颁发机构（CA）证书存储在
    `/etc/pki/ca-trust/source/anchors/`{.literal} 目录中。
4.  已安装 `wpa_supplicant`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  将 Wi-Fi 安全模式设置为 `wpa-eap`{.literal}，扩展验证协议(EAP)设置为
    `peap`{.literal}，内部验证协议为 `mschapv2`{.literal}，用户名：
    ``` literallayout
    # nmcli connection modify wpl1s0 802-11-wireless-security.key-mgmt wpa-eap 802-1x.eap peap 802-1x.phase2-auth mschapv2 802-1x.identity user_name
    ```
    请注意，您必须在单个命令中设置
    `802-11-wireless-security.key-mgmt`{.literal}、`802-1x.eap`{.literal}、`802-1x.phase2-auth`{.literal}
    和 `802-1x.identity`{.literal} 参数。
2.  另外，还可将该密码存储在配置中：
    ``` literallayout
    # nmcli connection modify wpl1s0 802-1x.password password
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    默认情况下，网络管理器（NetworkManager）在
    `/etc/sysconfig/network-scripts/keys-connection_name`{.literal}
    文件中以明文形式保存密码，这只可由 `root`{.literal}
    用户读取。但是，在配置文件中清除文本密码会有安全隐患。
    要提高安全性，将 `802-1x.password-flags`{.literal} 参数设置为
    `0x1`{.literal}。使用这个设置，在有 GNOME 桌面环境或
    `nm-applet`{.literal} 的服务器上，NetworkManager
    从这些服务中检索密码。在其他情况下，NetworkManager 会提示输入密码。
    :::
3.  如果需要客户端验证验证器的证书，请将连接配置集中的
    `802-1x.ca-cert`{.literal} 参数设置为 CA 证书的路径：
    ``` literallayout
    # nmcli connection modify wpl1s0 802-1x.ca-cert /etc/pki/ca-trust/source/anchors/ca.crt
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    为了安全起见，红帽建议使用验证程序证书来使客户端能够验证验证器的身份。
    :::
4.  激活连接配置集：
    ``` literallayout
    # nmcli connection up wpl1s0
    ```
:::
::: itemizedlist
**验证步骤**
-   访问需要网络身份验证的网络上的资源。
:::
::: itemizedlist
**其它资源**
-   有关添加 NetworkManager [以太网连接配置集的详情，请参阅管理 Wi-Fi
    连接](#managing-wi-fi-connections_configuring-and-managing-networking.html "第 9 章 管理 Wi-Fi 连接"){.link}。
-   有关 802.1X 相关参数及其描述，请查看 `nm-settings(5)`{.literal} man
    page 中的 `802-1x settings`{.literal} 部分。
-   有关 `nmcli`{.literal} 工具程序的详情，请查看 `nmcli(1)`{.literal}
    man page。
:::
:::
:::
[]{#managing-the-default-gateway-setting_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#managing-the-default-gateway-setting_configuring-and-managing-networking}第 20 章 管理默认网关设置 {.title}
:::
默认网关是在其他路由都与数据包目的地匹配时转发网络数据包的路由器。在本地网络中，默认网关通常是更接近互联网的主机。
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#setting-the-default-gateway-on-an-existing-connection-using-nmcli_managing-the-default-gateway-setting}使用 nmcli 在现有连接上设置默认网关 {.title}
:::
[在大多数情况下，管理员在创建连接时设置默认网关，如使用 nmcli
配置静态以太网连接中所述](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection "使用 nmcli 配置静态以太网连接"){.link}。
本节论述了如何使用 `nmcli`{.literal}
实用程序在之前创建的连接中设置或更新默认网关。
::: itemizedlist
**先决条件**
-   至少需要在设置默认网关的连接上配置一个静态 IP 地址。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，用户必须拥有
    `root`{.literal} 权限。
:::
::: orderedlist
**流程**
1.  设置默认网关的 IP 地址。
    例如，要将 `example`{.literal} 连接中默认网关的 IPv4 地址设置为
    `192.0.2.1`{.literal}:
    ``` literallayout
    $ sudo nmcli connection modify example ipv4.gateway "192.0.2.1"
    ```
    例如，要将 `example`{.literal} 连接中默认网关的 IPv6 地址设置为
    `2001:db8:1::1`{.literal}:
    ``` literallayout
    $ sudo nmcli connection modify example ipv6.gateway "2001:db8:1::1"
    ```
2.  重启网络连接以使更改生效。例如，要使用命令行重启 `example`{.literal}
    连接：
    ``` literallayout
    $ sudo nmcli connection up example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    所有目前使用这个网络连接的连接在重启过程中暂时中断。
    :::
3.  （可选）验证路由是否活跃。
    显示 IPv4 默认网关：
    ``` literallayout
    $ ip -4 route
    default via 192.0.2.1 dev example proto static metric 100
    ```
    显示 IPv6 默认网关：
    ``` literallayout
    $ ip -6 route
    default via 2001:db8:1::1 dev example proto static metric 100 pref medium
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 nmcli
    配置静态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection "使用 nmcli 配置静态以太网连接"){.link}
:::
:::
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#setting-the-default-gateway-on-an-existing-connection-using-the-nmcli-interactive-mode_managing-the-default-gateway-setting}使用 nmcli 互动模式在现有连接上设置默认网关 {.title}
:::
[在大多数情况下，管理员在创建连接时设置默认网关，如使用 nmcli
交互式编辑器配置动态以太网连接中所述](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection "使用 nmcli 互动编辑器配置动态以太网连接"){.link}。
本节论述了如何使用 `nmcli`{.literal}
工具的互动模式在之前创建的连接中设置或更新默认网关。
::: itemizedlist
**先决条件**
-   至少需要在设置默认网关的连接上配置一个静态 IP 地址。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，该用户必须具有
    `root`{.literal} 权限。
:::
::: orderedlist
**流程**
1.  为所需连接打开 `nmcli`{.literal} 互动模式。例如，要为
    [*example*]{.emphasis} 连接打开 `nmcli`{.literal} 互动模式：
    ``` literallayout
    $ sudo nmcli connection edit example
    ```
2.  设置默认网关。
    例如，要将 `example`{.literal} 连接中默认网关的 IPv4 地址设置为
    `192.0.2.1`{.literal}:
    ``` literallayout
    nmcli> set ipv4.gateway 192.0.2.1
    ```
    例如，要将 `example`{.literal} 连接中默认网关的 IPv6 地址设置为
    `2001:db8:1::1`{.literal}:
    ``` literallayout
    nmcli> set ipv6.gateway 2001:db8:1::1
    ```
3.  另外，还可验证默认网关是否正确设置：
    ``` literallayout
    nmcli> print
    ...
    ipv4.gateway:                           192.0.2.1
    ...
    ipv6.gateway:                           2001:db8:1::1
    ...
    ```
4.  保存配置：
    ``` literallayout
    nmcli> save persistent
    ```
5.  重启网络连接以使更改生效：
    ``` literallayout
    nmcli> activate example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    所有目前使用这个网络连接的连接在重启过程中暂时中断。
    :::
6.  保留 `nmcli`{.literal} 互动模式：
    ``` literallayout
    nmcli> quit
    ```
7.  （可选）验证路由是否活跃。
    显示 IPv4 默认网关：
    ``` literallayout
    $ ip -4 route
    default via 192.0.2.1 dev example proto static metric 100
    ```
    显示 IPv6 默认网关：
    ``` literallayout
    $ ip -6 route
    default via 2001:db8:1::1 dev example proto static metric 100 pref medium
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 nmcli
    互动编辑器配置静态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection "使用 nmcli 互动编辑器配置静态以太网连接"){.link}
:::
:::