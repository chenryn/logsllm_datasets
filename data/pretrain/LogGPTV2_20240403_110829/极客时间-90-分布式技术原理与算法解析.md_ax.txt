## 思考题你能和我分享下，Google Borg 是采用什么技术实现的资源隔离吗？我是聂鹏程，感谢你的收听，欢迎你在评论区给我留言分享你的观点，也欢迎你把这篇文章分享给更多的朋友一起阅读。我们下期再会！![](Images/c191f391e2aab7575517a886bbd7a681.png){savepage-src="https://static001.geekbang.org/resource/image/a4/8c/a42a16601611a1a72599ecfca434508c.jpg"}
# 12 \| 分布式调度架构之两层调度：物质文明、精神文明两手抓你好，我是聂鹏程。今天，我来继续带你打卡分布式核心技术。我在上一篇文章中，与你分享了单体调度。单体调度的核心是，所有节点的资源以及用户的任务均由中央服务器统一管理和调度。因此，中央服务器很容易成为单点瓶颈，会直接导致其支持的调度规模和服务类型受限。于是两层调度就出现了。那么，到底什么是两层调度呢，它是如何设计的，又有哪些调度算法呢？接下来，就和我一起打卡分布式调度架构的两层调度，去探寻这些问题的答案吧。
## 什么是两层调度？在单体调度架构中，中央服务器的单点瓶颈问题，会限制调度的效率和支持的任务类型。中央服务器的性能会限制调度的效率，很好理解，但为什么会限制支持的任务类型呢？简单地说，这是因为不同的服务具有不同的特征，对调度框架和计算的要求都不一样。比如说，你的业务最开始时只有批处理任务，后来发展到同时还包括流数据任务，但批处理任务是处理静态数据，流数据任务却是处理实时数据。显然，单体调度框架会随着任务类型增加而变得越来越复杂，最终出现扩展瓶颈。那么，为了提升调度效率并支持多种类型的任务，最直接的一个想法就是，能不能把资源和任务分开调度，也就是说一层调度器只负责资源管理和分配，另外一层调度器负责任务与资源的匹配呢。``{=html}很显然，这个解决方案是可以的。这种调度架构，就是我们通常所说的**两层调度**。如果我们还是把资源比作物质文明、把任务比作精神文明的话，两层调度就可以理解为"物质文明与精神文明两手抓"。两层调度结构对应的就是两层调度器，资源的使用状态同时由中央调度器和第二层调度器管理，中央调度器从整体上进行资源的管理与分配，将资源分配到第二层调度器；再由第二层调度器负责将资源与具体的任务配对，因此第二层调度可以有多个调度器，以支持不同的任务类型。如下图所示，Scheduler-1表示第一层调度，负责收集和管理集群中的资源信息；Scheduler-2表示第二层调度，Scheduler-1 会将集群资源发送给 Scheduler-2，然后Scheduler-2 根据任务的资源需求和 Scheduler-1发送的资源信息进行任务匹配和调度。![](Images/6f6f0db44b9a252802da3c24915dcb4d.png){savepage-src="https://static001.geekbang.org/resource/image/8e/a2/8e7371cc970c85c23fc8f2e70f4fa3a2.png"}两层调度器中的第一层调度器仍是一个经简化的中央调度器，通常放在分布式集群管理系统中，而第二层调度则是由各个应用程序框架完成。两层调度器的职责分别是：第一层调度器负责管理资源并向框架分配资源，第二层调度器接收分布式集群管理系统中第一层调度器分配的资源，然后根据任务和接收到的资源进行匹配。采用两层调度结构的集群管理系统有很多，典型代表是 Apache Mesos 和 HadoopYARN。我在[第 9篇文章](https://time.geekbang.org/column/article/148187)中讲述 Mesos的体系结构时，和你分析了它采用的是典型的两层调度。那么今天，我就继续以Mesos 为例，带你学习两层调度的架构设计和对应的分配算法吧。
## 两层调度设计由于 Mesos 只负责底层资源的管理和分配，并不涉及存储、任务调度等功能，因此 Mesos 要实现类似 Borg那样的资源与任务管理，还需要上层框架的配合。具体到两层调度架构上，Mesos本身实现的调度器为第一层调度，负责资源管理，然后将第二层任务调度交给了框架完成。接下来，我们就具体看看吧。