### System Information
- **OpenCV Version:** 4.2.0
- **Operating System/Platform:** Windows 7 64-bit
- **Compiler:** Visual Studio 2019
- **CMake Version:** 3.16.5

### Detailed Description
When building OpenCV 4.2.0 from source, CMake fails to configure the environment after processing the WORLD modules. The error is a syntax error, which appears to be caused by the use of backslashes or forward slashes in the command line arguments. Even when only forward slashes are used, the error message shows both types of slashes. This issue is similar to one discussed on Stack Overflow: [CMake Parse Error: Invalid Escape Sequence](https://stackoverflow.com/questions/14112279/cmake-parse-error-invalid-escape-sequence-o). Following the recommendation by "Fraser," I was able to resolve the issue and the script executed without further problems.

### Error Message
![Error Screenshot](https://user-images.githubusercontent.com/23083317/76022245-5cc61680-5eec-11ea-9ba8-1fdf067add5b.png)

### Command Line Configuration
```cmd
"C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars64.bat"
set "openCvSource=D:/Workspace/opencv/opencv-4.2.0"
set "openCVExtraModules=D:/Workspace/opencv/opencv_contrib-4.2.0/modules"
set "openCvBuild=%openCvSource%/build"
set "buildType=Release"
set "generator=Ninja"
set "pathToAnaconda=C:/ProgramData/Anaconda3"
set "pyVer=37"

"C:/Program Files/CMake/bin/cmake.exe" -B"%openCvBuild%/" -H"%openCvSource%/" -G"%generator%" -DCMAKE_BUILD_TYPE=%buildType% -DOPENCV_EXTRA_MODULES_PATH="%openCVExtraModules%/" ^
-DINSTALL_TESTS=ON -DINSTALL_C_EXAMPLES=ON -DBUILD_EXAMPLES=ON -DBUILD_opencv_world=ON ^
-DWITH_CUDA=ON -DCUDA_TOOLKIT_ROOT_DIR="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2" -DCUDA_FAST_MATH=ON -DWITH_CUBLAS=ON -DCUDA_ARCH_BIN=5.3,6.0,6.1,7.0,7.5 -DCUDA_ARCH_PTX=7.5 -DWITH_NVCUVID=ON ^
-DWITH_OPENGL=ON -DWITH_MFX=ON -DBUILD_opencv_python3=ON -DPYTHON3_INCLUDE_DIR=%pathToAnaconda%/include -DPYTHON3_LIBRARY=%pathToAnaconda%/libs/python%pyVer%.lib -DPYTHON3_EXECUTABLE=%pathToAnaconda%/python.exe -DPYTHON3_NUMPY_INCLUDE_DIRS=%pathToAnaconda%/lib/site-packages/numpy/core/include -DPYTHON3_PACKAGES_PATH=%pathToAnaconda%/Lib/site-packages/ -DOPENCV_SKIP_PYTHON_LOADER=ON
```

### Steps to Reproduce
1. Follow this tutorial: [Accelerate OpenCV 4.2.0 Build with CUDA and Python Bindings](https://jamesbowley.co.uk/accelerate-opencv-4-2-0-build-with-cuda-and-python-bindings/)
2. Use Anaconda x64 with Python 3.7.4 located at `C:\ProgramData\Anaconda3`.
3. Add the Ninja compiler to the system path.
4. Run the above command configuration in the terminal.

### Notes
I resolved the issue by changing the `macro` and `endmacro` keywords on lines 1420 and 1429 in `OpenCVUtils.cmake` to `function` and `endfunction`, respectively.