，
'onkeypress'
，
'onkeyup'
，
'onlayoutcomplete'
，
'onload'
，
'onlosecapture'
，
'onmousedown'
，
'onmouseenter'
，
'onmouseleave'
，
'onmousemove'
，
'onmouseout'
，
'onmouseover'
，
'onmouseup'
，
'onmousewheel'
，
'onmove'
，
'onmoveend'
，
'onmovestart'
，
'onpaste'
，
'onpropertychange'
，
'onreadystatechange'
，
'onreset'
，
'onresize'
，
'onresizeend'
，
'onresizestart'
，
'onrowenter'
，
'onrowexit'
，
'onrowsdelete'
，
'onrowsinserted'
，
'onscroll'
，
'onselect'
，
'onselectionchange'
，
'onselectstart'
，
'onstart'
，
'onstop'
，
'onsubmit'
，
'onunload'
，
'style'
，
'href'
，
'action'
，
'location'
，
'background'
，
'src'
，
'poster'
）；
    $parm3= Array
（
'alert'
，
'sleep'
，
'load_file'
，
'confirm'
，
'prompt'
，
'bench-mark'
，
'select'
，
'update'
，
'insert'
，
'delete'
，
'alter'
，
'drop'
，
'truncate'
，
'script'
，
'eval'
）；
    $parm = array_merge
（
$parm1
，
$parm2
，
$parm3
）；
      for
（
$i = 0
；
$i  0
）
{
            $pattern .= '
（
'
；
            $pattern .= '
（
&#[x|X]0
（
[9][a][b]
）；？）？
'
；
            $pattern .= '|
（
&#0
（
[9][10][13]
）；？）？
'
；
            $pattern .= '
）？
'
；
              }
          $pattern .= $parm[$i][$j]
；
          }
          $pattern .= '/i'
；
          $string = preg_replace
（
$pattern
，
'****'
，
$string
）；
      }
      return $string
；
}
在new_html_special_chars（）函数中可以看到，这个函数对&符号、双引号以及尖括号进行了html实体编码，并且使用strip_tags（）函数进行了二次过滤。而remove_xss（）函数则是对一些标签关键字、事件关键字以及敏感函数关键字进行了替换。
再往下走有一个获取IP地址的函数getip（），是可以伪造IP地址的：
function getip
（）
{
      if
（
getenv
（
'HTTP_CLIENT_IP'
）
and strcasecmp
（
getenv
（
'HTTP_CLIENT_IP'
），
'unknown'
））
{
          $onlineip=getenv
（
'HTTP_CLIENT_IP'
）；
      }elseif
（
getenv
（
'HTTP_X_FORWARDED_FOR'
）
and strcasecmp
（
getenv
（
'HTTP_X_FORWARDED_FOR'
），
'unknown'
））
{
          $onlineip=getenv
（
'HTTP_X_FORWARDED_FOR'
）；
      }elseif
（
getenv
（
'REMOTE_ADDR'
）
and strcasecmp
（
getenv
（
'REMOTE_ADDR'
），
'unknown'
））
{
          $onlineip=getenv
（
'REMOTE_ADDR'
）；
      }elseif
（
isset
（
$_SERVER['REMOTE_ADDR']
）
and $_SERVER['REMOTE_ADDR'] and strcasecmp
（
$_SERVER['REMOTE_ADDR']
，
'unknown'
））
{
          $onlineip=$_SERVER['REMOTE_ADDR']
；
      }
      preg_match
（
"/\d{1
，
3}\.\d{1
，
3}\.\d{1
，
3}\.\d{1
，
3}/"
，
$onlineip
，
$match
）；
      return $onlineip = $match[0]
？
$match[0]
：
'unknown'
；
}
很多应用都会由于在获取IP时没有验证IP格式，而存在注入漏洞，不过这里还只是可以伪造IP。
再往下看可以看到一个值得关注的地方，SQL查询统一操作函数inserttable（）以及updatetable（）函数，大多数SQL语句执行都会经过这里，所以我们要关注这个地方是否还有过滤等问题。
function inserttable
（
$tablename
，
$insertsqlarr
，
$returnid=0
，
$replace = false
，
$silent=0
）
{global $db
；
$insertkeysql = $insertvaluesql = $comma = ''
；
foreach
（
$insertsqlarr as $insert_key => $insert_value
）
{$insertkeysql .= $comma.'`'.$insert_key.'`'
；
$insertvaluesql .= $comma.'\''.$insert_value.'\''
；
$comma = '
，
'
；
}$method = $replace
？
'REPLACE'
：
'INSERT'
；
// echo $method." INTO $tablename
（
$insertkeysql
）
VALUES
（
$insertvaluesql
）
"
，
$silent
？
'SILENT'
：
''
；
die
；
$state = $db->query
（
$method." INTO $tablename
（
$insertkeysql