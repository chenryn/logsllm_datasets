4.0
21’21
4.0
21’45
20’43
3.9
4.0
21.18
UCLA-3
131.179.136.151
time
0’01
0’01
0’02
0’01
0’02
0’16
0’16
0’16
0’16
0’16
22’49
22’53
22’48
27’41
29’47
C
96
97
97
98
99
98
98
98
98
98
18
18
18
18
18
UA
130.160.47.35
C
time
98
0’02
79
0’04
0’17
83
98
0’09
95
0’09
86
5’19
88
5’20
133
5’18
5’19
88
132
5’19
34
3 hr
31
3 hr
32
3 hr
3 hr
34
30
3 hr
NTNU
140.122.77.6
C
time
97
0’07
97
0’07
0’22
97
99
0’04
96
0’04
97
0’29
97
0’25
97
0’25
0’26
97
97
0’25
34
3 hr
35
3 hr
34
3 hr
3 hr
35
35
3 hr
ing of diﬀerent packet sizes. In [11], Lai used packet pair
measurements, but ﬁltered them through a kernel density
estimator [15]. The kernel density algorithm is known to be
statistically valid and is relatively simple and fast to com-
pute. The underlying assumption of all these techniques is
that the distribution of measurements obtained from packet
pair samples is unimodal, i.e., the sample with the maximum
frequency of occurrence corresponds to the capacity.
Paxson showed in [14] that this distribution can be multi-
modal. He identiﬁed multi-channel links as a failure case of
packet pairs and presented the Packet Bunch Modes (PBM)
technique to overcome this limitation. The PBM method-
ology consists of sending packet trains of diﬀerent lengths
in response to a distribution with multiple modes, treat-
ing multiple modes as corresponding to multi-channel links.
Dovrolis [4] elaborated further on the occurrence of multiple
modes. They showed that the strongest mode in the mul-
timodal distribution may correspond to the capacity, or to
an under- or to an over-estimate of the capacity. Under-
estimation occurs when the network is heavily congested,
while over-estimation occurs, to various degrees, when the
narrow link is followed by links of higher capacity, referred
to as Post-Narrow Links. They also observed that a packet
train of N packets is most useful for estimating capacity
when N = 2, corresponding to a packet pair, since interfer-
ence from cross-traﬃc is likely to increase as N increases.
Finally, they presented a capacity estimation methodology,
which ﬁrst sends packet pairs. If this yields a multimodal
distribution, then probing with packet trains with an in-
creasing value of N is initiated. For some value of N , the
distribution becomes unimodal, and the capacity is selected
as the next highest mode after this mode in the multimodal
distribution that was obtained from packet pairs.
A diﬀerent technique, not based on dispersion of packet
pairs, but rather on the variation of the round-trip delay as
the packet size increases, was used by Jacobson in pathchar [8].
This technique, based on the generation of ICMP replies
from routers, is known to have scalability problems. Pathchar
tries to estimate the capacity of a link by sending sets of
packets (not packet pairs) to a link, with each set having a
diﬀerent packet size. It assumes the minimum delay in each
set to be the no-queuing delay for the particular packet size.
The minimum delays for diﬀerent packet sizes yield a set of
linear equations that are solved to obtain the bandwidth of
the link. This procedure is repeated for each link on the
path and the minimum among the link bandwidths is cho-
sen as the path capacity. Pathchar is known to consume
a signiﬁcant amount of bandwidth [11]. Also, we tested
pathchar and found that its estimation accuracy fell as the
path length was increased, mainly due to accumulation of
estimation errors. Clink [5] diﬀers from pathchar in the
manner it generates its interval capacity estimates. Pchar
is based on a similar concept as pathchar and uses regres-
sion to determine the slope of the minimum RTT versus the
probing packet size. The key diﬀerence between pathchar
and CapProbe is that whereas pathchar uses packets delays
to estimate capacity, CapProbe uses packet delays only as
an indicator of which sample’s dispersion to choose for esti-
mating capacity. In [2], the authors study another technique
based on probing with variable packet sizes.
Packet tailgating is another technique proposed by Lai [12].
This technique is divided into two phases: the Sigma phase,
which measures the characteristics of the entire path, and
the Tailgating phase, which measures the characteristics of
each link individually.
9. CONCLUSIONS
This paper presented and studied a new capacity estima-
tion technique, called CapProbe. CapProbe relies on a novel
scheme that uses packet delays to ﬁlter out packet pairs with
distorted dispersion. Simulations showed that CapProbe
is able to estimate capacity correctly except when cross-
traﬃc is both intensive and non-reactive (like UDP). We also
compared CapProbe, using measurements, with two well-
known capacity estimation methods, pathchar and pathrate.
We found that the accuracy of CapProbe is similar to that
of pathrate. Pathchar was found to be less accurate.
In
terms of speed, CapProbe out-performed both pathchar and
pathrate.
We are hopeful that new and emerging applications can
make use of capacity estimates and this is one direction of
our future work. Another direction for the future is to build
and study more sophisticated analytical models to gain fur-
ther insight on the convergence speed of CapProbe in diﬀer-
ent network conditions.
10. ACKNOWLEDGMENTS
We are grateful to the following people for their help
in carrying out CapProbe measurements: Jun-Hong Cui
(University of Connecticut), Xiaoyan Hong (The Univer-
sity of Alabama), Yi-Wen Jiu (National Wuling Senior High
School, Taiwan) and Che-Chih Liu (National Taiwan Nor-
mal University). We also want to thank the anonymous
reviewers for their valuable comments and suggestions.
11. REFERENCES
[1] Network simulator ns-2. http://www.isi.edu/nsnam/ns.
[2] J. C. Bolot. Characterizing end-to-end packet delay and
loss in the internet. In Proceedings of ACM SIGCOMM,
pages 289–298, September 1993.
[3] R. Carter and M. Crovella. Measuring bottleneck link
speed in packet-switched networks. Performance
Evaluation, 27(8):297–318, October 1996.
[4] C. Dovrolis, P. Ramanathan, and D. Moore. Packet
dispersion techniques and capacity estimation. submitted to
IEEE/ACM Transactions of Networking.
[5] A. B. Downey. Using pathchar to estimate internet link
characteristics. In Proceedings of ACM SIGCOMM, pages
241–250, September 1999.
[6] M. Goutelle and P. Vicat-Blanc/Primet. Study of a
non-intrusive method for measuring the end-to-end
capacity and useful bandwidth of a path. In Proceedings of
ICC, June 2004.
[7] N. Hu and P. Steenkiste. Evaluation and characterization of
available bandwidth techniques. IEEE JSAC Special Issue
in Internet and WWW Measurement, Mapping, and
Modeling, 21(6):879–894, August 2003.
[8] V. Jacobson. Pathchar: A tool to infer characteristics of
internet paths. ftp://ftp.ee.lbl.gov/pathchar/.
[9] S. Keshav. A control-theoretic approach to ﬂow control. In
Proceedings of ACM SIGCOMM, pages 3–15, September
1991.
[10] L. Kleinrock. Queueing Systems, Volume I: Theory. Wiley,
1975.
[11] K. Lai and M. Baker. Measuring bandwidth. In Proceedings
of IEEE INFOCOM, pages 235–245, March 1999.
[12] K. Lai and M. Baker. Measuring link bandwidth using a
deterministic model of packet delay. In Proceedings of ACM
SIGCOMM, pages 283–294, August 2000.
[13] S. McCreary and K. Claﬀy. Trends in Wide Area IP Traﬃc
Patterns. Technical Report, CAIDA, February 2000.
[14] V. Paxson. Measurements and Dynamics of End-to-End
Internet Dynamics. Ph.D. Thesis, Computer Science
Division, Univ. Calif. Berkeley, April 1997.
[15] D. Scott. Multivariate Density Estimation: Theory,
Practice and Visualization. Addison Wesley, 1992.
[16] M. S. Taqqu, W. Willinger, and R. Sherman. Proof of a
fundamental result in self-similar traﬃc modeling.
ACM/SIGCOMM Computer Communications Review,
27(2):5–23, April 1997.
APPENDIX
To calculate residual lifetime when renewal process is Pareto dis-
tribution, we deﬁne the following random variables: X is the life-
time of a typical interval with Pareto renewal processes, and Y is
the residual lifetime of the selected interval when the ﬁrst packet
in a packet pair probe arrives. Let the residual life have a distri-
bution ˆF (x) = P [Y ≤ x] with density ˆf (x) = d ˆF (x)
dx , and let the
typical lifetime X have a pdf f (x) and cumulative distribution
function (CDF) F (x) where F (x) = P [X ≤ x] and f (x) = dF (x)
dx .
Based on the renewal theory [10], given that x ≥ k (according
to the deﬁnition of Pareto distribution), we obtain
(cid:40)(cid:82) ∞
(cid:82) ∞
x=y
x=k
ˆf (y) =
f (x)
m1
f (x)
m1
dx,
dx,
if y ≥ k,
if y < k.
where m1 is the mean time between renewals, i.e., mean time
of the Pareto distribution ¯t. Therefore, by integrating the right-
hand side of the equations, we obtain the pdf of the residual
lifetime distribution:
(cid:40) 1−F (y)
ˆf (y) =
m1
1−F (k)
m1
αk ( k
= α−1
= 1
m1
y )α,
= α−1
αk ,
if y ≥ k,
if y < k.
Finally, we can compute the complementary cumulative distri-
bution function (CCDF) P [Y ≥ t] as follows, given that 1 < α ≤
2:
P [Y ≥ t] =
ˆf (y)dy = 1
t )α−1,
ˆf (y)dy = 1 − t
m1
α ( k
0
= 1 − (α−1)t
αk
,
if t ≥ k,
if t < k.
(cid:40)(cid:82) ∞
1 −(cid:82) t
t