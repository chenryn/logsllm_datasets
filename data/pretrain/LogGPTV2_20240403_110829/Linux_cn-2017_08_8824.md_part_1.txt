---
author: Marty Jacobs
category: 软件开发
comments_data:
- date: '2017-09-01 11:20:00'
  message: 我只回复好贴
  postip: 202.108.251.28
  username: 星火燎原 [Safari 10.1|Mac 10.12]
- date: '2017-09-01 13:53:57'
  message: 感谢！
  postip: 61.186.31.49
  username: linux [Chrome 60.0|Mac 10.11]
count:
  commentnum: 2
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 5462
date: '2017-08-31 08:00:00'
editorchoice: false
excerpt: 探索哈希表（hash table）的世界并理解其底层的机制是非常有趣的，并且将会受益匪浅。所以，让我们了解它，并从头开始探索吧。
fromurl: http://www.zeroequalsfalse.press/2017/02/20/hashtables/
id: 8824
islctt: true
largepic: /data/attachment/album/201708/30/233911yju25o44rc53x49f.jpg
permalink: /article-8824-1.html
pic: /data/attachment/album/201708/30/233911yju25o44rc53x49f.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 探索哈希表（hash table）的世界并理解其底层的机制是非常有趣的，并且将会受益匪浅。所以，让我们了解它，并从头开始探索吧。
tags:
- 哈希
thumb: false
title: 听说过时间表，但是你是否知道“哈希表”
titlepic: true
translator: ucasFL
updated: '2017-08-31 08:00:00'
---
![](/data/attachment/album/201708/30/233911yju25o44rc53x49f.jpg)
探索 哈希表   hash table 的世界并理解其底层的机制是非常有趣的，并且将会受益匪浅。所以，让我们了解它，并从头开始探索吧。
哈希表是许多现代软件应用程序中一种常见的数据结构。它提供了类似字典的功能，使你能够在其中执行插入、删除和删除等操作。这么说吧，比如我想找出“苹果”的定义是什么，并且我知道该定义被存储在了我定义的哈希表中。我将查询我的哈希表来得到定义。它在哈希表内的记录看起来可能像：`"苹果" => "一种拥有水果之王之称的绿色水果"`。这里，“苹果”是我的关键字，而“一种拥有水果之王之称的水果”是与之关联的值。
还有一个例子可以让我们更清楚，哈希表的内容如下：
```
"面包" => "固体"
"水" => "液体"
"汤" => "液体"
"玉米片" => "固体"
```
我想知道*面包*是固体还是液体，所以我将查询哈希表来获取与之相关的值，该哈希表将返回“固体”给我。现在，我们大致了解了哈希表是如何工作的。使用哈希表需要注意的另一个重要概念是每一个关键字都是唯一的。如果到了明天，我拥有一个面包奶昔（它是液体），那么我们需要更新哈希表，把“固体”改为“液体”来反映哈希表的改变。所以，我们需要添加一条记录到字典中：关键字为“面包”，对应的值为“液体”。你能发现下面的表发生了什么变化吗？（LCTT 译注：不知道这个“面包奶昔”是一种什么食物，大约是一种面包做的奶昔，总之你就理解成作者把液体的“面包奶昔”当成一种面包吧。）
```
"面包" => "液体"
"水" => "液体"
"汤" => "液体"
"玉米片" => "固体"
```
没错，“面包”对应的值被更新为了“液体”。
**关键字是唯一的**，我的面包不能既是液体又是固体。但是，是什么使得该数据结构与其他数据结构相比如此特殊呢？为什么不使用一个[数组](https://en.wikipedia.org/wiki/Array_data_type)来代替呢？它取决于问题的本质。对于某一个特定的问题，使用数组来描述可能会更好，因此，我们需要注意的关键点就是，**我们应该选择最适合问题的数据结构**。例如，如果你需要做的只是存储一个简单的杂货列表，那么使用数组会很适合。考虑下面的两个问题，两个问题的本质完全不同。
1. 我需要一个水果的列表
2. 我需要一个水果的列表以及各种水果的价格（每千克）
正如你在下面所看到的，用数组来存储水果的列表可能是更好的选择。但是，用哈希表来存储每一种水果的价格看起来是更好的选择。
```
//示例数组
["苹果", "桔子", "梨子", "葡萄"]   
//示例哈希表  