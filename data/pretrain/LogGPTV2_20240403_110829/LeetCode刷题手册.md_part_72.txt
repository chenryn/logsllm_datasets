.(3
 set bits,
set bits, 3 is prime)
set bits, 2 is prime)
set bits,
set bits, 2 is prime)
2 is prime)
3 is prime)
（注意，计算置位
---
## Page 740
这道题考察的是滑动窗口的问题。
题目大意
Note:
 Example 1: 
the size of these parts.
 possible so that each letter appears in at most one part, and return a list of integers representing 
A string S of lowercase letters is given. We want to partition this string into as many parts as
题目
763. Partition Labels
● S will consist of lowercase letters ('a' to 'z') only.
· S will have length in range [1, 500].
splits s into less parts.
This is a partition so that each letter appears in at most one part.
The partition is "ababcbaca", "defegde", "hijhklij".
Explanation: 
output: [9,7,8] 
"aurtuapbayapeseqpqeqe., = s :andus
func isPrime(x int) bool { 
Il x == 19 
func countPrimesetBits(L int, R int) int {
import "math/bits"
 return x == 2 ll x == 3 ll x == 5 ll x == 7 ll x == 11 Il x == 13 ll x == 17
return counter
for i := L; i 1) {
return ans;
string ans; 
queue> myq;
for （int i = 0;i> pq;
for (char c: S)
vector mp(26);
int n = S.size();
if（myq.size（）〉1）{//注意这里要大于 1，如果是等于1 的话，频次大的元素
if （!pq.empty()）{
if (mp[i]) pq.push({mp[i], i+'a'});
if (mp[i] >(n+l)/2) return "";
++mp[c-'a'];
auto cur = pq.top();
if (cur.first != O) pq.push(cur);
 auto cur = myq.front();
myq.push(cur) ;
cur.first--; 
ans += cur.second;
pq.pop(); 
myq.pop();
---
## Page 748
func frequencysort767(s string) string 
func reorganizestring(s string) string 
import（
cMap := map[int][]byte[}
fs := frequencysort767(s) 
"sort"
res := make([]byte, 0) 
sort.sort(sort.Reverse(sort.Intslice(keys)))
var keys []int
for key, value := range sMap { 
for -, b := range sb {
sb := []byte(s)
sMap := map[byte]int{}
return ans 
for i := 0; i  (len(sb)+1)/2 {
sMap[b]++ 
if j<len(bs){
ans += string(bs[i]] 
++
 ans += string(bs[j])
for j := O; j <k; j++ { 
res = append(res, cMap[k][i]]
M
---
## Page 749
解题思路
”中的字母不重复，”和 S 中的所有字符都是字母。字母区分大小写，因此"a"和"A"是不同类型的石
的石头的类型，你想知道你拥有的石头中有多少是宝石。
给定字符串”代表石头中宝石的类型，和字符串S 代表你拥有的石头。S 中每个字符代表了一种你拥有
题目大意
Example 2: 
Example 1: 
case sensitive, so "a" is considered a different type of stone from "A".
The letters in  are guaranteed distinct, and all characters in  and S are letters. Letters are 
Note:
the stones you have are also jewels.
stones you have. Each character in S is a type of stone you have. You want to know how many of
You're given strings ’ representing the types of stones that are jewels, and S representing the 
题
771. Jewels and Stones
·给出2个字符串，要求在S字符串中找出在”字符串里面出现的字符个数。这是一道简单题。
● The characters in  are distinct.
● S and  willconsist of letters and have length at most 50.
Output:0
Input: J = "z"， S = "zz"
Output: 3
"qqqqvve.. = S ‘ve.. = C :anduI
目
return string(res)
---
## Page 750
Example 1: 
You start at the top left square (O, O). What is the least time until you can reach the bottom
within the boundaries of the grid during your swim.
individually are at most t. You can swim infinite distance in zero time. Of course, you must stay
square to another 4-directionally adjacent square if and only if the elevation of both squares
On an N x N grid, each square grid[i] [j] represents the elevation at that point (i,j).
题目
778. Swim in Rising Water
right square (N-1, N-1)?
Now rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a
代码
func numJewelsInStonesl(J string, S string) int {
//解法二
func numJewelsInStones(J string, S string) int {
//解法一
import "strings'
package leetcode
return result
for -, r := range J {
cache, result := make(map[rune]bool), 0 
return count
count := 0
if -, ok := cache[r]; ok { 
 cache[r] = true 
if strings.Contains(J, string(s[i])） {
result++ 
count++
---
## Page 751
解题思路