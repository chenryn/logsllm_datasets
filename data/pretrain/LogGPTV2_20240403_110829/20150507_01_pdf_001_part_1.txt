# 清华大学
## 位图索引编码的研究及其在大数据中的应用

**项目名称：Saturn**  
**网址：www.nslab-Saturn.net**  
**日期：2014年05月09日**

### 索引
随着人类进入大数据时代，数据查找变得越来越依赖于高效的索引技术。传统的索引方法主要基于哈希和树这两种基本的数据结构。

#### 传统索引
- **哈希索引**：通过哈希函数将键映射到存储位置。
- **树索引**：如B树、二叉搜索树等，用于快速查找、插入和删除操作。

### 位图索引 (Bitmap Index)
位图索引是一种高效的数据查找工具，特别适用于数据仓库和NoSQL数据库。

#### 位图索引的特点
- **灵活的数据查找**：支持多种查询条件。
- **高速的数据查找**：利用位运算实现快速查找。
- **较大的空间消耗**：需要较多的存储空间。

#### 位图索引编码
- **压缩索引大小**：通过编码技术减少存储空间。
- **加速索引查找**：优化编码以提高查找速度。

### 位图索引编码算法之间的关联
以下是一些常用的位图索引编码算法及其特点：

1. **Raw Bitmap Index**
   - 基本形式，无压缩。

2. **Word-Aligned Hybrid (WAH)**
   - 每31位为一个块，全0或全1的块分别标记为0-fill或1-fill，否则为literal。
   - 相邻的0-fill或1-fill块合并成一个word。
   - 核心思想：Run Length Encoding (RLE) 和直接保留不能RLE的部分。

3. **Position List Word-Aligned Hybrid (PLWAH)**
   - 在WAH的基础上引入Nearly Identical (NI) 概念。
   - 细分Literal word为nearly identical 0-fill word 和普通literal word。
   - 通过piggyback技术将NI的Literal合并入Fill word中。

4. **COMPressed Adaptive indeX (COMPAX)**
   - 引入“dirty byte”概念，进一步细分Literal word类型。
   - 加入了LFL (literal-fill-literal) 和 FLF (fill-literal-fill) 的组合压缩。

5. **Scope Extended COMPressed Adaptive indeX (SECOMPAX)**
   - 扩充“dirty byte”定义，增加1-NI-L类型。
   - 扩展LFL和FLF组合类型，提高压缩率。

6. **Improved COMPAX (ICX)**
   - 进一步细分literal word，引入LF (literal + F) 和 NI2-LF (带2个dirty byte的literal + F) 组合。
   - 设计新的码本，提高压缩效率。

### 算法全称
- **WAH**: Word-Aligned Hybrid
- **PLWAH**: Position List Word-Aligned Hybrid
- **COMPAX**: COMPressed Adaptive indeX format
- **SECOMPAX**: Scope Extended COMPressed Adaptive indeX
- **ICX**: Improved CompaX
- **MASC**: MAximized Stride with Carrier

### 常用术语
- **Chunk**: 31比特为单位的块。
- **Word**: 32比特字。
- **Fill**: 一个word/chunk全部为0或1。
- **Literal**: 一个word/chunk不全为0或1，表示该信息未做处理，原封不动保留。

### Oracle数据库的位图索引编码
Oracle数据库使用了一种称为Byte-aligned Bitmap Code (BBC) 的位图索引编码方法：
- **分类**：bitmap bytes 分为只包含0或1的gap和混合的map。
- **编码**：连续的gap通过其长度和填充位进行编码；map部分直接编码并附上长度。
- **特殊处理**：单个map byte 中只有一个bit不同，则直接编码到控制字节中。

### 总结
位图索引编码技术在大数据管理中发挥着重要作用。通过不断改进和创新，这些算法能够更好地满足高效数据查找和存储的需求。未来的研究将继续探索更高效的编码方法，以应对日益增长的数据量和复杂性。