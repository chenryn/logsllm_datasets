title:Design and evaluation of persea, a sybil-resistant DHT
author:Mahdi Nasrullah Al-Ameen and
Matthew K. Wright
Design and Evaluation of Persea, a Sybil-Resistant DHT
Mahdi Nasrullah Al-Ameen
The University of Texas at Arlington
Arlington, TX, USA
PI:EMAIL
Matthew Wright
The University of Texas at Arlington
Arlington, TX, USA
PI:EMAIL
ABSTRACT
P2P systems are inherently vulnerable to Sybil attacks, in which
an attacker creates a large number of identities and uses them to
control a substantial fraction of the system. We propose Persea, a
novel P2P system that derives its Sybil resistance by assigning IDs
through a bootstrap tree, the graph of how nodes have joined the
system through invitations. Unlike prior Sybil-resistant P2P sys-
tems based on social networks, Persea does not rely on two key
assumptions: (1) that the social network is fast mixing and (2) that
there is a small ratio of attack edges to honest nodes. Both assump-
tions have been shown to be unreliable in real social networks. A
node joins Persea when it gets an invitation from an existing node
in the system. The inviting node assigns a node ID to the joining
node and gives it a chunk of node IDs for further distribution. For
each chunk of ID space, the attacker needs to socially engineer a
connection to another node already in the system. The hierarchical
distribution of node IDs conﬁnes a large attacker botnet to a consid-
erably smaller region of the ID space than in a normal P2P system.
We then build upon this hierarchical ID space to make a distributed
hash table (DHT) based on the Kad network. The Persea DHT uses
a replication mechanism in which each (key, value) pair is stored
in nodes that are evenly spaced over the network. Thus, even if a
given region is occupied by attackers, the desired (key, value) pair
can be retrieved from other regions. We evaluate Persea in analy-
sis and in simulations with social network datasets and show that
it provides better lookup success rates than prior work with modest
overheads.
Categories and Subject Descriptors
C.2.4 [Communication Networks]: Distributed Systems-Distributed
applications
Keywords
Sybil attack; security; social DHT
INTRODUCTION
1.
Peer-to-peer (P2P) systems are highly susceptible to Sybil at-
tacks, in which an attacker creates a large number of pseudonymous
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS’14, June 4–6, 2014, Kyoto, Japan.
Copyright 2014 ACM 978-1-4503-2800-5/14/06 ...$15.00.
http://dx.doi.org/10.1145/2590296.2590326.
entities and uses them to gain a disproportionately large inﬂuence
over the system [6, 7, 9, 13]. A malicious node may present multi-
ple identities to a P2P system that appear and function as distinct
nodes. By becoming part of the P2P system, the Sybil attackers
can then collude to launch further attacks to subvert the system’s
operation, such as taking over resources and disrupting connectiv-
ity. Researchers have documented this vulnerability in real-world
systems, including the Maze P2P ﬁle-sharing system [14, 34] and
the Vanish data storage system [33].
Many P2P systems employ a distributed hash table (DHT), which
provides a lookup service similar to a hash table: (key, value) pairs
are stored in a DHT, and any participating node can efﬁciently re-
trieve the value associated with a given key. Well-known DHT-
based systems, or simply DHTs, include Chord [27], CAN [22],
Pastry [23], and Kademlia [17]. Kademlia was the basis for both
the Kad network and Vuze, DHTs used in the popular BitTorrent
ﬁle-sharing P2P system with millions of users each.
Recent research has focused on leveraging information from so-
cial networks to make the system robust against Sybil attackers, re-
sulting in a number of decentralized community-based schemes [11,
12, 19, 28, 31, 36, 37]. The key to these approaches is the idea that
honest and malicious nodes can be effectively partitioned into two
subgraphs in the social network. The link between an honest node
and a malicious peer is called an attack edge, which represents an
act of social engineering to convince the honest node to add the
link.
• Online social networks are fast mixing, meaning that a random
walk in the honest part of the network approaches the uniform
distribution in a small number of steps.
• The number of attack edges are rather limited in an online social
network, as benign users are unlikely to accept friend requests
from strangers.
These mechanisms are based on two key assumptions:
Recent studies [3, 20, 30, 35], however, show that the above as-
sumptions do not hold in real-world social networks. Thus, the
effectiveness of these schemes are left as an open question.
In
particular, Mohaisen et. al. [20] show that in social graphs where
edges correspond to strong real-world trust (e.g., Epinions, Physics
co-authorship, DBLP, etc.), the mixing-time is not as fast as the
community-based schemes assume. Thus, the schemes do not per-
form well on “trusted” social graphs. Further, Viswanath et al. have
shown that a number of Sybil defenses are ineffective for slower-
mixing, highly modular social networks [30].
At the same time, recent work shows that the probability with
which fake identities are accepted as friends is much higher than
anticipated [25], with studies reporting that users accept 40 − 80%
of friendship requests from strangers [3, 5]. This implies that that
number of attack edges may not be small, even as a fraction of
75the number of honest nodes. As the assumption of few attack
edges breaks down, prior schemes do not work well. The Wh¯anau
scheme, for example, requires 10-100 times the overhead to get
successful lookups when there is one attack edge per honest node.
Contributions. These ﬁndings about online social networks mean
that it remains an open research problem to design an effective
Sybil defense that does not rely on the assumptions of a fast-mixing
social network and a small number of attack edges.
In this pa-
per, we propose a Persea, a new Sybil-resistant DHT that addresses
these problems.
In Persea, existing nodes invite new peers to join the system.
When a node joins the DHT it also creates a link with the invit-
ing node. This creates a bootstrap tree, linking nodes together
through invitation relationships. We then leverage the social re-
lationships among honest nodes for building a robust DHT. We de-
velop a mechanism to distribute hierarchical node IDs based on the
bootstrap tree. In this mechanism, when a node joins the system
after getting an invitation, the inviting node assigns a node ID to
the joining node and gives it a chunk of node IDs for further dis-
tribution.1 ID and chunk assignment are certiﬁed in a chain from
the root of the bootstrap tree. The use of a bootstrap tree relies
heavily on the root nodes in the early stages of system deployment,
but by careful design of how IDs are certiﬁed, the reliance on these
nodes can be minimized. Based on this ID distribution method,
we then design a DHT routing table and lookup protocol based on
the Kademlia design [17], with modest modiﬁcations to enhance
robustness.
The Persea approach offers a number of important advantages
over existing schemes:
• Persea does not depend on assuming that there are few attack
edges compared to the benign nodes. Let g denote the number
of attack edges and n be the honest nodes. Our simulation results
show that even for g/n = 1.0—i.e. one attack edge for every
honest node—95.6% of lookups still succeed.
• Although Persea may work better for fast-mixing social net-
works, our system is also dependable for slow-mixing social net-
works. For the slowest-mixing social network we evaluated on
and g/n = 0.5, Persea lookups succeed 96.2% of the time.
• The hierarchical distribution of node IDs limits the attackers to
isolated regions in the ID space. Even for g/n = 1.0, only 0.7%
of the total ID space is occupied by attackers.
• Building a bootstrap tree is more realistic than assuming that
the clients have access to authenticated lists of social network
connections or activity levels from a system like Facebook; such
lists may also bear little resemblence to social connections inside
the P2P system.
Additionally, Persea has several other important features:
• Although we test Persea with a DHT routing table design similar
to Kademlia [17], which is widely used, it can be adapted to
other DHTs.
• IDs are certiﬁed, making attacks based on ID forging impossible
• Varying the number of attackers per attack edge does not signif-
• Sybil-resilient system design is inherently probabilistic [28], and
thus our system provides resilience against further attacks, in-
icantly affect the lookup success rate in Persea.
outside of attacker-controlled ID ranges.
1The name Persea comes from a tree in ancient Egyp-
tian mythology (also called the ished tree) upon whose
leaves
the pharaohs
(see
http://www.touregypt.net/featurestories/
treegoddess.htm).
the Gods wrote the names of
cluding denial of service, node ID hijacking, and node insertion,
that may be launched by the existing Sybil nodes in the system.
2. RELATED WORK
Due to the power and generality of the Sybil attack, a large num-
In this section, we
ber of defenses have been proposed [1, 13].
examine the use of social networks for Sybil defense.
Random walks over social networks. A number of works have
proposed Sybil detection techniques or Sybil resistance based on
random walks over a social network [8, 11, 12, 19, 28, 31, 36, 37].
The basic idea is that we can divide the social network into a Sybil
region and an honest region connected via a small number of at-
tack edges (a small cut). Random walks starting from the honest
region have a low probability of ending in the Sybil region. This
can be leveraged in a variety of ways, leading to detection mech-
anisms [8, 30, 31, 36, 37], admission control mechanisms [28], and
Sybil-resistant P2P designs [11, 12, 19].
These mechanisms require the absence of small cuts within the
honest region in the underlying social network. Equivalently, the
honest region should be fast-mixing. Mohaisen et al., however,
show that the mixing time of many real social networks is slower
than the mixing times assumed by these works [20]. Additionally,
many real-world social networks fail to satisfy the other require-
ments of the systems, either because a signiﬁcant fraction of nodes
are sparsely connected or the users are organized in small tightly-
knit communities, which are sparsely interconnected [29]. Finally,
even perfect community-based defenses would fail against existing
Sybil attacks due to the lack of a Sybil community structure [1,35].
DHTs Built on Social Networks. Three key related works are the
Sybil-resistant DHT, Wh¯anau, and X-Vine, and we compare these
with Persea in Table 1.
Danezis et al. propose a Sybil-resistant DHT routing protocol [7]
that makes use of latent social information that is present in the
bootstrap graph of the network. While they pioneered the bootstrap
graph model that inspires our work, we note two major shortcom-
ings of their approach. First, the DHT layer is built on top of the
bootstrap graph, creating a second overlay layer. This means that
one hop in the DHT layer corresponds to a number of hops in the
bootstrap graph, each of which is itself an Internet connection. This
adds substantial delay and overhead beyond the DHT. Second, the
scheme provides diversity in the bootstrap graph at the expense of
following the DHT lookup graph. This further extends the lookup
delay and overhead. When there is one attack edge per honest node,
a lookup in a network of just 100 honest nodes requires over 50 re-
quests to succeed.
√
Lesniewski-Laas proposed Wh¯anau [11, 12], in which a node
constructs its routing table through independent random walks and
recording the ﬁnal node in each walk as the ﬁnger in its routing
table. Wh¯anau requires signiﬁcant routing table state on the order
m log m), where m is the number of objects stored in the
of O(
DHT. Mittal et al. point out that the network overhead for main-
taining this state can be substantial (e.g. 800 KBps per node) [19].
Further, Wh¯anau overheads increase further if large numbers of at-
tack edges grows, such that for g/n = 1.0, either routing table
sizes grow by 10-100 times or lookup redundancy must grow to 50
or more compared to the regular protocol [12].
X-Vine [19] is a DHT built by communicating only over social
network edges. Honest peers rate-limit the number of paths that
are allowed to be built over their adjacent edges, which helps to
limit the number of Sybil nodes that can join the system. X-Vine,
however, relies on the fast-mixing assumption and was only evalu-
ated with a small number of attack edges (one for every ten honest
nodes). Rate-limiting only works when there are few attack edges,
76Table 1: Comparison of Sybil-resistant DHTs. Grey squares indicate limitations of the system. [((cid:63)): varies from less than 20 to over
50 depending on the network and routing table sizes, (†): based on limited results [7]]
Wh¯anau
X-Vine
Sybil-resistant
Persea
Reliance on fast mixing
Requires that users provide a full social network
Lookups succeed at g/n = 1.0
Total messages for a lookup at g/n = 1.0
Total messages for a lookup at g/n = 0.1
Routing table size
as an attacker with one attack edge per honest node should have the
same rate of paths as the honest nodes in the system. Thus, very
high levels of redundancy may be required for successful lookups
when the number of attack edges is high.
We note that both Wh¯anau and X-Vine use public keys to provide
important security properties.
3. GOALS AND ASSUMPTIONS
In this section, we describe our system design goals and our sys-
tem and attacker models.
3.1 Design Goals
In designing Persea, we have the following Design Goals:
1. Sybil-resistent lookups. The system should maintain high suc-
cess rates for lookups in the presence of Sybil attackers seeking to
undermine the system’s operations, even if the number of attack
edges grows to high levels (e.g. g/n = 1.0). Prior work does not
handle large numbers of attack edges.
2. Works on a range of social networks. The system should work
well for any reasonable structure in the underlying social network,
even if the social network is not fast mixing. Most existing systems
rely on the fast-mixing property.
3. Builds its own social network. The system should build its
own social network to defeat Sybil attacks and not rely on users or