::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并使用目标 IdM
    服务器列表定义 `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的主机组信息，创建 Ansible playbook 文件。在
    `- ipahostgroup`{.literal} 变量中使用 `name`{.literal}
    变量指定外部主机组的名称。使用 `hostgroup`{.literal}
    变量指定嵌套主机组的名称。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/hostgroup/ensure-hosts-and-hostgroups-are-absent-in-hostgroup.yml`{.literal}
    文件中的示例：
    ``` literallayout
    ---
    - name: Playbook to handle hostgroups
      hosts: ipaserver
      become: true
      tasks:
      # Ensure hosts and hostgroups are absent in existing databases hostgroup
      - ipahostgroup:
          ipaadmin_password: MySecret123
          name: databases
          hostgroup:
          - mysql-server
          - oracle-server
          action: member
          state: absent
    ```
    此 playbook 确保 databases 主机组中没有 [
    **[**mysql-server**]{.strong} 和 oracle-server**]{.strong}
    [**主机组**]{.strong}。`action: member`{.literal} 行表示在 playbook
    运行时，不会尝试确保从 IdM 中删除 [**databases**]{.strong} 组本身。
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-hosts-or-hostgroups-are-absent-in-hostgroup.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 admin 用户身份登录 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  为 admin 请求 Kerberos ticket：
    ``` literallayout
    $ kinit admin
    Password for PI:EMAIL:
    ```
3.  显示应当缺少嵌套主机组的主机组的信息：
    ``` literallayout
    $ ipa hostgroup-show databases
      Host-group: databases
    ```
:::
输出确认外部 databases 主机组中没有 [ **[**mysql-server**]{.strong} 和
oracle-server**]{.strong} [**嵌套式主机组**]{.strong}。
:::
::: section
::: titlepage
# []{#managing-host-groups-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-absence-of-IdM-host-groups-using-Ansible-playbooks_managing-host-groups-using-Ansible-playbooks}使用 Ansible playbook 确保没有 IdM 主机组 {.title}
:::
本节介绍如何使用 Ansible playbook 在 Identity
Management(IdM)中存在主机组。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果没有 Ansible，则使用 `ipa hostgroup-del`{.literal} 命令从 IdM
中删除主机组条目。从 IdM 中删除主机组的结果是 IdM
中缺少主机组的状态。由于 Ansible 依赖于 idempotence，若要使用 Ansible 从
IdM 中删除主机组，您必须创建一个 playbook，它将主机组的状态定义为
absent: [**state: absent**]{.strong}。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并使用目标 IdM
    服务器列表定义 `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的主机组信息，创建 Ansible playbook
    文件。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/user/ensure-hostgroup-is-absent.yml`{.literal}
    文件中的示例。
    ``` literallayout
    ---
    - name: Playbook to handle hostgroups
      hosts: ipaserver
      become: true
      tasks:
      - Ensure host-group databases is absent
        ipahostgroup:
          ipaadmin_password: MySecret123
          name: databases
          state: absent
    ```
    此 playbook 确保 IdM 中缺少 [**databases**]{.strong}
    主机组。`state: absent`{.literal} 表示从 IdM
    中删除主机组的请求，除非它已被删除。
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-hostgroup-is-absent.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 admin 用户身份登录 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  为 admin 请求 Kerberos ticket：
    ``` literallayout
    $ kinit admin
    Password for PI:EMAIL:
    ```
3.  显示您没有保证的主机组的信息：
    ``` literallayout
    $ ipa hostgroup-show databases
    ipa: ERROR: databases: host group not found
    ```
:::
IdM 中不存在 [**databases**]{.strong} 主机组。
:::
::: section
::: titlepage
# []{#managing-host-groups-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-absence-of-member-managers-from-idm-host-groups-using-ansible-playbooks_managing-host-groups-using-Ansible-playbooks}使用 Ansible playbook 确保 IdM 主机组中没有成员管理器 {.title}
:::
以下流程描述了确保使用 Ansible playbook 在 IdM
主机和主机组中存在成员管理器。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您必须具有要作为成员管理器删除的用户或用户组的名称，以及它们所管理的主机组的名称。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的主机和主机组成员管理信息创建一个 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Playbook to handle host group membership management
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure member manager host and host group members are absent for group_name
        ipahostgroup:
          ipaadmin_password: MySecret123
          name: group_name
          membermanager_user: example_member
          membermanager_group: project_admins
          action: member
          state: absent
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-member-managers-host-groups-are-absent.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用
`ipa group-show 命令验证 group _name 组是否不包含 example _member 或 project_admins`{.literal}
作为成员管理器：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  显示有关 [*testhostgroup*]{.emphasis} 的信息：
    ``` literallayout
    ipaserver]$ ipa hostgroup-show group_name
      Host-group: group_name
      Member hosts: server.idm.example.com
      Member host-groups: testhostgroup2
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa hostgroup-add-member-manager --help`{.literal}。
-   请参阅 `ipa`{.literal} man page。
:::
:::
:::
[]{#ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks_managing-users-groups-hosts}第 32 章 确保使用 Ansible playbook 在 IdM 中存在基于主机的访问控制规则 {.title}
:::
本章论述了基于主机的身份管理(IdM)访问策略，以及如何使用
[Ansible](https://docs.ansible.com){.link} 定义它们。
Ansible 是一个自动化工具，用于配置系统、部署软件和执行滚动更新。它包括对
Identity Management(IdM)的支持。
::: section
::: titlepage
# []{#ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks_managing-users-groups-hosts.html#host-based-access-control-rules-in-idm_ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks}IdM 中的基于主机的访问控制规则 {.title}
:::
基于主机的访问控制(HBAC)规则定义哪些用户或用户组可以通过服务组中的服务或服务来访问哪些主机或主机组。作为系统管理员，您可以使用
HBAC 规则来实现以下目标：
::: itemizedlist
-   将您域中指定系统的访问权限限制为特定用户组的成员。
-   仅允许使用特定服务访问域中的系统。
:::
默认情况下，IdM 配置有一个名为 [**allow_all**]{.strong} 的默认 HBAC
规则，这意味着通过整个 IdM
域中每个相关服务对每个用户的每个主机进行通用访问。
您可以通过将默认 [**allow_all**]{.strong} 规则替换为您自己的一组 HBAC
规则来微调对不同主机的访问。对于集中式和简化的访问控制管理，您可以将
HBAC 规则应用到用户组、主机组或服务组，而不是单个用户、主机或服务。
:::
::: section
::: titlepage
# []{#ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks_managing-users-groups-hosts.html#ensuring-the-presence-of-an-hbac-rule-in-idm-using-an-ansible-playbook_ensuring-the-presence-of-host-based-access-control-rules-in-idm-using-Ansible-playbooks}使用 Ansible playbook 在 IdM 中存在 HBAC 规则 {.title}
:::
本节论述了如何使用 Ansible playbook 在 Identity
Management(IdM)中确保存在基于主机的访问控制(HBAC)规则。
::: itemizedlist
**先决条件**
-   [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包安装在 Ansible 控制器上。
-   您知道 IdM 管理员密码。
-   IdM 中已存在您要用于 HBAC 规则的用户和用户组。[详情请参阅使用
    Ansible playbook 管理用户帐户，并使用 Ansible playbook 确保存在 IdM
    组和组成员](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html "第 3 章 使用 Ansible playbook 管理用户帐户"){.link}。
-   IdM 中已存在要应用 HBAC 规则的主机和主机组。[详情请参阅使用 Ansible
    playbook](#managing-hosts-using-Ansible-playbooks_managing-users-groups-hosts.html "第 28 章 使用 Ansible playbook 管理主机"){.link}
    [管理主机和使用 Ansible playbook
    管理主机组](#managing-host-groups-using-Ansible-playbooks_managing-users-groups-hosts.html "第 31 章 使用 Ansible playbook 管理主机组"){.link}。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建 Ansible playbook 文件，以定义您要确保的 HBAC
    策略。要简化此步骤，您可以复制并修改 `/usr/share/doc/ansible-freeipa/playbooks/hbacrule/ensure-hbacrule-allhosts-present.yml`{.literal}
    文件中的示例：