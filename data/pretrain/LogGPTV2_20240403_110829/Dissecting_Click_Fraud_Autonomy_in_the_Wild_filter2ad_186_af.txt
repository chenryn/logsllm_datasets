[26] L. Li, T. F. Bissyandé, J. Klein, and Y. Le Traon. 2016. An Investigation into the Use
of Common Libraries in Android Apps. In 2016 IEEE 23rd International Conference
on Software Analysis, Evolution, and Reengineering (SANER). 403–414.
[27] Menghao Li, Wei Wang, Pei Wang, Shuai Wang, Dinghao Wu, Jian Liu, Rui
Xue, and Wei Huo. 2017. LibD: Scalable and Precise Third-Party Library Detec-
tion in Android Markets. In Proceedings of the 39th International Conference on
Software Engineering (ICSE ’17). IEEE Press, 335–346. https://doi.org/10.1109/
ICSE.2017.38
[28] Bin Liu, Suman Nath, Ramesh Govindan, and Jie Liu. 2014. DECAF: Detecting
and Characterizing Ad Fraud in Mobile Apps. In 11th USENIX Symposium on
Networked Systems Design and Implementation (NSDI 14). USENIX Association,
Seattle, WA, 57–70.
[29] McAfee LLC. 2021. McAfee Total Protection. http://mcafee.com/.
[30] Ziang Ma, Haoyu Wang, Yao Guo, and Xiangqun Chen. 2016. LibRadar: Fast and
Accurate Detection of Third-Party Libraries in Android Apps. In Proceedings of
the 38th International Conference on Software Engineering Companion (ICSE ’16).
Association for Computing Machinery, New York, NY, USA, 653–656. https:
//doi.org/10.1145/2889160.2889178
[31] Bob Mungamuru and Stephen Weis. 2008. Competition and Fraud in Online
Advertising Markets. In Financial Cryptography and Data Security, Gene Tsudik
(Ed.). Springer Berlin Heidelberg, Berlin, Heidelberg, 187–191.
[32] Shishir Nagaraja and Ryan Shah. 2019. Clicktok: Click Fraud Detection Using
Traffic Analysis. In Proceedings of the 12th Conference on Security and Privacy in
Wireless and Mobile Networks (WiSec ’19). Association for Computing Machinery,
New York, NY, USA, 105–116.
[33] Xiaorui Pan, Xueqiang Wang, Yue Duan, XiaoFeng Wang, and Heng Yin. 2017.
Dark Hazard: Learning-based, Large-Scale Discovery of Hidden Sensitive Opera-
tions in Android Apps. In 24th Annual Network and Distributed System Security
Symposium (NDSS’ 17). The Internet Society, San Diego, California, USA, 1–15.
[34] Paul Pearce, Vacha Dave, Chris Grier, Kirill Levchenko, Saikat Guha, Damon Mc-
Coy, Vern Paxson, Stefan Savage, and Geoffrey M. Voelker. 2014. Characterizing
Large-Scale Click Fraud in ZeroAccess. In Proceedings of the 2014 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’14). Association for
Computing Machinery, New York, NY, USA, 141–152.
[35] Peng Peng, Limin Yang, Linhai Song, and Gang Wang. 2019. Opening the Blackbox
of VirusTotal: Analyzing Online Phishing Scan Engines. In Proceedings of the
Internet Measurement Conference (IMC ’19). Association for Computing Machinery,
New York, NY, USA, 478–485.
[36] DAN PRICE. 2020. The 20 Most Popular Android Apps in the Google Play Store.
https://www.makeuseof.com/tag/most-popular-android-apps/.
[37] Z. Qu, S. Alam, Y. Chen, X. Zhou, W. Hong, and R. Riley. 2017. DyDroid: Measuring
Dynamic Code Loading and Its Security Implications in Android Applications. In
2017 47th Annual IEEE/IFIP International Conference on Dependable Systems and
Networks (DSN). 415–426.
[38] Juniper Research. 2019. Future Digital Advertising: Artificial Intelligence &
Advertising Fraud 2019-2023. https://www.juniperresearch.com/researchstore/
content-digital-media/future-digital-advertising-strategy-report/subscription/
artificial-intelligence-advertising-fraud.
[39] Juniper Research. 2020. Advertising Fraud Losses to Reach $42 Billion in 2019,
Driven by Evolving Tactics by Fraudsters. https://www.juniperresearch.com/
press/press-releases/advertising-fraud-losses-to-reach-42-bn-2019.
[40] Juniper Research. 2021. juniperresearch. https://www.juniperresearch.com/
[41] Shashi Shekhar, Michael Dietz, and Dan S. Wallach. 2012. AdSplit: Sepa-
rating Smartphone Advertising from Applications. In 21st USENIX Security
Symposium (USENIX Security 12). USENIX Association, Bellevue, WA, 553–
567. https://www.usenix.org/conference/usenixsecurity12/technical-sessions/
presentation/shekhar
[42] Congcong Shi, Rui Song, Xinyu Qi, Yubo Song, Bin Xiao, and Sanglu Lu. 2020.
ClickGuard: Exposing Hidden Click Fraud via Mobile Sensor Side-channel Analy-
sis. In IEEE International Conference on Communications (ICC ’20). Dublin, Ireland,
1–6.
[43] Sam Smith. 2019. ADVERTISING FRAUD LOSSES TO REACH $42 BIL-
LION IN 2019, DRIVEN BY EVOLVING TACTICS BY FRAUDSTERS.
https://www.juniperresearch.com/press/press-releases/advertising-fraud-
losses-to-reach-42-bn-2019.
[44] Blase Ur, Pedro Giovanni Leon, Lorrie Faith Cranor, Richard Shay, and Yang Wang.
2012. Smart, Useful, Scary, Creepy: Perceptions of Online Behavioral Advertising.
In Proceedings of the Eighth Symposium on Usable Privacy and Security (SOUPS ’12).
home.
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea284Association for Computing Machinery, New York, NY, USA, Article 4, 15 pages.
[45] Raja Vallée-Rai, Phong Co, Etienne Gagnon, Laurie Hendren, Patrick Lam, and
Vijay Sundaresan. 1999. Soot - a Java Bytecode Optimization Framework. In Pro-
ceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative
Research (CASCON ’99). IBM Press, Mississauga, Ontario, Canada, 13.
[46] VirusTotal. 2020. Virustotal. https://www.virustotal.com/gui/.
[47] Gang Wang, Tristan Konolige, Christo Wilson, Xiao Wang, Haitao Zheng, and
Ben Y. Zhao. 2013. You Are How You Click: Clickstream Analysis for Sybil
Detection. In 22nd USENIX Security Symposium (USENIX Security 13). USENIX
Association, Washington, D.C., 241–256. https://www.usenix.org/conference/
usenixsecurity13/technical-sessions/presentation/wang
[48] Kenneth C Wilbur and Yi Zhu. 2009. Click fraud. Marketing Science 28, 2 (2009),
293–308.
[49] Haitao Xu, Daiping Liu, Aaron Koehl, Haining Wang, and Angelos Stavrou. 2014.
Click Fraud Detection on the Advertiser Side. In Computer Security - ESORICS
2014, Mirosław Kutyłowski and Jaideep Vaidya (Eds.). Springer International
Publishing, Cham, 419–438.
[50] Linfeng Zhang and Yong Guan. 2008. Detecting Click Fraud in Pay-Per-Click
Streams of Online Advertising Networks. In 2008 The 28th International Conference
on Distributed Computing Systems (ICDCS ’08). 77–84. https://doi.org/10.1109/
ICDCS.2008.98
[51] Haizhong Zheng, Minhui Xue, Hao Lu, Shuang Hao, Haojin Zhu, Xiaohui Liang,
and Keith Ross. 2018. Smoke screener or straight shooter: Detecting elite Sybil
attacks in user-review social networks. In 25th Network & Distributed System
Security Symposium (NDSS ’18). 1–15.
[52] Shuofei Zhu, Jianjun Shi, Limin Yang, Boqin Qin, Ziyi Zhang, Linhai Song,
and Gang Wang. 2020. Measuring and Modeling the Label Dynamics of On-
line Anti-Malware Engines. In 29th USENIX Security Symposium (USENIX Secu-
rity 20). USENIX Association, 2361–2378. https://www.usenix.org/conference/
usenixsecurity20/presentation/zhu
Figure 12: The number of fraudulent apps group by different
categories on Google Play and Huawei AppGallery.
APPENDIX
A RESULTS OF FRAUDULENT APPS AND
SDKS
Table 5 lists some of the apps of a large download number which
implement humanoid attacks. The full list will be submitted to
Huawei and Google. The download number is only from Google
Play or Huawei AppGallery. The highest number of downloads
(from Huaweu AppGallery) reached 3.7 billion. ClickScanner suc-
cessfully locates where these click fraud occurs in codes, which
will facilitate the digital forensics of these fraudulent behaviors.
Meanwhile, we mark out whether these humanoid attacks were
caused by the advertising SDKs in the sixth column.
B THE DISTRIBUTION OF APPS AFFECTED
BY HUMANOID ATTACKS
To quantify the damage of humanoid attacks in the real world, it is
important to know the category distributions of identified malicious
apps. Thus, for each fraudulent app, we extract its category (e.g.,
books, education, weather) labeled by app markets and illustrate
the statistical results in Fig. 12. It is observed there is a significant
difference between the categories of fraudulent apps from Google
Play and Huawei AppGallery. For instance, among 25 categories,
fraudulent apps from both app markets exist in only 8 categories.
Since the target users in Google Play and Huawei AppGallery
are different (i.e., the former mainly targeting U.S. and Europe, and
the latter mainly targeting China), the difference of marketing is
perhaps caused by the interest/cultural differences of users, and the
users’ interests in mobile ads [21]. For instance, the fraudulent apps
detected in Huawei AppGallery are concentrated in “Education”,
“Books” and “Shopping” because China has a prosperous online
shopping industry and a cultural emphasis on education, while in
Figure 13: SDKs across app categories. The color encodes the
number of apps involving fraudulent SDKs.
Google Play, the detected apps are concentrated in “News”, “Mag-
azines” due to the diversity of media in society. It is also worth
noting that there are apps from the “Tools” category marked by
ClickScanner in both markets. This may be because it is easier to
obtain system permissions to hide fraudulent activities for these
types of apps. In summary, these discoveries indicate that applica-
tion markets in different regions need to focus on vetting different
types of applications.
C THE DISTRIBUTION OF FRAUDULENT
SDKS
We also analyze the distribution of fraudulent SDKs of all 157 apps
according to their categories. As shown in Fig. 13, the fraudulent
apps existing in nearly half of the categories (19/45) are affected
by 11 SDKs in total. This shows that the use of SDK to commit
humanoid attack is not an isolated case against a certain category
of apps, but a common method deserving attention. Furthermore,
it is observed that the com.mo*** SDK and com.iB*** SDK have
infected a large proportion of applications. Therefore, to effectively
thwart humanoid attacks, it is vital to put efforts on vetting SDKs
as well as the apps.
ToolsLifestyleMusicNewsSocialBusinessVideoGAMESportsPhotographyEducationProductivityCommunicationEntertainmentShoppingBooksBeautyWeatherTravelCategorycom.moxxcom.iBxxcom.kuxxcom.coxxcom.moxxcom.baxxcom.ifxxc.d.xxcom.lixxcom.anxxcom.gaxxSDK0510152025Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea285Table 5: Details of humanoid attacks in apps from Google Play and Huawei AppGallery
Package Name
com.m*.****.****
com.ba***.********
com.if*****.*************
com.ut******.******
com.ac*********.*******
com.co****.***********
com.me***.*******
t*.yi***.****
com.co****.***********
com.ai**
com.ti****.********
com.qu*******.******
com.cl*******.********
com.pu***.*****.****
com.fu******.*****.******
com.hu*****.*****************
com.if*****.********
com.st******.********
com.lw**.*******.**
com.du******
com.ma****.*******
com.xm****.*******.***
com.dz.*****
com.iy*.******.**********
com.xi******.********
com.hi.****.*****.******.**
com.xi******.*******
com.ot*.*********
com.pe*******.*****.**
com.is****
com.ca*****.*******.****
com.sc**********
com.ta*******.*******
com.li**.********.***
com.im***.******
com.cl*******.***********
me*******.pr*.*********
com.ba*******.****.*****.*****.***
com.cl*******.***********
com.sw*******.*****.****
fm.ca*****.*********.*****.*******
com.po*****.********
m*.go*********.****
lo*****.fl*****.******.*******
in******.he********.*********
com.aw*.*******
ca****.**.*****.******.*****
com.xm****.***
com.di*************
com.lb*.********
com.if*****.*************.*********
com.me*******.*********.*******
com.am***.********.***.*******.*****.****
m*.ne******.***********.**********
mo**.in******.*********.******.*******.********.***
com.wo**.******.***.*********.******
com.fl***.****************
com.xi*****.*****
com.me**********.****************
com.yz*.*******.******
com.zh************.***********
com.yz*.*******.******
com.ha*****.******
com.ha*****.******
com.bu****.******
com.we******.******
com.se*****.****
Catgory
Photography
Others
Music
Video Players & Editors
Weather
Social
Photography
Video
Social
Education
Tools
Tools
Tools
GAME
Video
Others
Business
Lifestyle
Books
Education
Books
Shopping
Books
Books
Books
Sports
Video
Music
Lifestyle
Books
Finance
Entertainment
Communication
Communication
Version
8.7.1.5
7.33.0
7.3.75
6.5.5
6.1.10
6.8.0.4
3.9.6.0
5.10.2
6.6.4.2
3.9.2.3076
4.3.8
1.7.0.0
1.4.7.2
1.0.8
3.5.8.7
6.7.0.3
4.4.1264
4.25
1.29.32
4.44.2
2.4.0
2.31.5
3.9.2.3074