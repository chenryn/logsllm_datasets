• DeepCoFFEA signiﬁcantly lowers the number of FPs
(Figure 8a and 8b) due to the use of ampliﬁcation. This
leads it to have substantial performance improvements
over DeepCorr and m-DeepCorr, e.g., by 80% in TPR
(i.e., 93% vs 13%) at 2 · 10−4 FPR.
• DeepCoFFEA is transferable across circuits, sites, and
time scales of up to 14 months (Figure 7c), suggesting
that annual retraining would sufﬁce to maintain perfor-
mance. In contrast, DeepCorr was considerably worse
with a 14-month gap between training and testing (Fig-
ure 9a).
• DeepCoFFEA correctly detected many of the protected
ﬂows by the obfs4 PT and WF defenses with 95%
(obfs4), 90% (WTF-PAD), and 84% (FRONT) for 10−3
FPR (Figure 7d). This is in contrast to DeepCorr de-
grading signiﬁcantly against all defenses (Figure 9b).
Furthermore, DeepCoFFEA can conduct ﬂow correlation
analysis for both undefended and defended traces without
training separate models (Figure 7e).
E. Countermeasures
In this section, we discuss potential countermeasures to
thwart DeepCoFFEA-style attacks. DeepCoFFEA learns the
difference between correlated and uncorrelated ﬂows rather
than directly learning correlated features based on predeﬁned
labels. This enables DeepCoFFEA to better understand the
distinction between obfuscated, correlated and uncorrelated
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:58:24 UTC from IEEE Xplore.  Restrictions apply. 
1927
ﬂows, even if the Tor ﬂows are further perturbed. Figure 7d
demonstrates that FRONT was able to hinder DeepCoFFEA
to some degree, with a 15% TPR drop at 10−3 FPR, The
amount of the drop remains insufﬁcient, however, such that
further ideas for defenses are needed.
Given the performance gap between DeepCoFFEA and
DeepCorr against all the defenses tested, we speculate that the
key property that makes DeepCoFFEA difﬁcult for defenses is
its use of ampliﬁcation, which can ﬁlter out incorrect correla-
tions from a subset of windows. Random noise generally does
not create enough false correlations across enough windows
among mismatched ﬂow pairs to confuse the attacker. Thus, we
explored further settings in FRONT to undermine DeepCoF-
FEA more effectively. First, we increased the padding window
with Wmax = 25 to increase the chances to pad the entire 25-
second ﬂow. Second, we decreased the padding window with
Wmax = 10 to increase the chances to inject dummy packets
in earlier windows. We also raised the padding data budget for
both of these tests (Ns, Nc = 2, 500) compared to Figure 7d.
As shown in Figure 10, the number of true positives decreased
when the obfuscation was forced into the ﬁrst several windows.
This indicates that window-level obfuscation could be more
effective to weaken the ampliﬁcation ability.
Thus, we further explored a new defense strategy called
Decaf to more effectively disrupt the window pattern. For
each Tor ﬂow, ti, we randomly selected a peer ﬂow from
the DCF set. After dividing the peer ﬂow into ω-second non-
overlapping windows, we randomly picked v windows among
k is a tunable parameter. Then,
the total k windows. Note that v
we extracted the timestamps, Tpad, in the chosen v windows
and for each ti, we injected dummy packets at Tpad. In this
way, we could force the defender to ruin the window pattern,
while making each Tor ﬂow less distinct by adding timing
information from peer ﬂows. Figure 10 shows the result of
applying this approach (Decaf-DCF) with ω = 5 seconds,
k = 0.5. The result had a bandwidth overhead of 49.6%
v
and performed much more effectively than any setting of
FRONT. This suggests that a defense speciﬁcally focused on
perturbing a signiﬁcant fraction of windows could overcome
the ampliﬁcation feature of DeepCoFFEA.
method of regularizing windows and the consequences of
mismatched window durations for future work.
VII. CONCLUSION & FUTURE WORK
End-to-end correlation can break the unlinkability property
of an anonymity system, enabling an attacker to match users
with the servers they connect with. In this work, we illustrated
the practicality of such an attack by introducing DeepCoFFEA,
which is much more scalable and practically effective than
state-of-the-art attacks. DeepCoFFEA adapts the triplet net-
work architecture as a feature extractor to enable full pairwise
comparisons at a cost that is linear rather than quadratic with
the number of ﬂows. Further, by splitting ﬂows into a small
number of windows and extracting features for each window,
DeepCoFFEA creates multiple semi-independent correlation
tests that can be combined to amplify differences between
matched pairs of ﬂows and unmatched pairs and thereby lower
the false positive rate.
By evaluating DeepCoFFEA in various experimental set-
tings, we demonstrated that this new architecture and attack
paradigm greatly improves state-of-the-art ﬂow correlation
attacks while reducing time complexity by two orders of
magnitude.
Our work suggests several important directions for future
research. For example, it is possible that more realistic Tor
trafﬁc is somehow different from our datasets, and realistic
ﬂows lead to less correlated features. Another possible ques-
tion is whether more sophisticated DNN architectures (e.g.,
Var-CNN [8]) can be used to decrease the size of the training
set while yielding comparable performance to DeepCoFFEA.
Further investigation of the DeepCoFFEA architecture for
stepping-stone detection and correlation of VPN or HTTPS
proxy services might yield interesting results as well. However,
the most important next step is to devise a defense that can
be effectively deployed against DNN-based trafﬁc analysis
attacks, since our empirical study demonstrates the weakness
of existing defenses.
ACKNOWLEDGMENTS.
We thank our anonymous reviewers for helpful suggestions
and comments regarding the presentation and evaluation of
DeepCoFFEA. We also thank Milad Nasr for sharing the
code of Compressive Trafﬁc Analysis and the DeepCorr set,
and discussion about
the data collection. We extend our
appreciation to Erik Lindeman for the help with building the
data collection method. This work was funded by the National
Science Foundation under Grants nos. 1816851, 1433736, and
1815757, and the Ewha Womans University Research Grant
of 2022.
REFERENCES
[1] A. Mani, T. Wilson-Brown, R. Jansen, A. Johnson, and M. Sherr,
“Understanding tor usage with privacy-preserving measurement,” in
ACM Internet Measurement Conference (IMC), 2018, pp. 175–187.
[2] T. Wang and I. Goldberg, “Improved website ﬁngerprinting on tor,”
in ACM workshop on Workshop on privacy in the electronic society
(WPES), 2013, pp. 201–212.
We made two assumptions in this evaluation. First, we
assume that the defender has access to the DCF set, which
makes Decaf less reliable. Thus, we conducted an additional
evaluation in which the defender picked peer ﬂows from the
k = 0.5). In this way, we can ensure
DeepCorr set (ω = 5 and v
no exposure on the original ﬂows. As shown in Figure 10, this
new setting (Decaf-DC) achieved comparable performance to
FRONT14 with 4% lower bandwidth cost.
Second, we assume that the defender knows the approximate
window duration used by the attacker. While the attacker is not
likely to disclose the parameters of the attack, our exploration
of window length found that a relatively small range of du-
rations were useful. Very short windows did not have enough
information to learn good embeddings, and longer windows
resulted in fewer windows overall, reducing the opportunity
for ampliﬁcation. We leave further investigation of the best
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:58:24 UTC from IEEE Xplore.  Restrictions apply. 
1928
[3] A. Panchenko, F. Lanze, J. Pennekamp, T. Engel, A. Zinnen, M. Henze,
and K. Wehrle, “Website ﬁngerprinting at internet scale.” in Network &
Distributed System Security Symposium (NDSS), 2016.
[4] J. Hayes and G. Danezis, “k-ﬁngerprinting: A robust scalable website
ﬁngerprinting technique,” in USENIX Security Symposium, 2016, pp.
1187–1203.
[5] P. Sirinam, M. Imani, M. Juarez, and M. Wright, “Deep Fingerprinting:
Undermining website ﬁngerprinting defenses with deep learning,” in
ACM Conference on Computer and Communications Security (CCS),
2018, pp. 1928–1943.
[6] S. E. Oh, S. Sunkam, and N. Hopper, “p1-FP: Extraction, classiﬁcation,
and prediction of website ﬁngerprints with deep learning,” Proceedings
on Privacy Enhancing Technologies (PETS), vol. 2019, no. 3, pp. 191–
209, 2019.
[7] M. S. Rahman, P. Sirinam, N. Mathews, K. G. Gangadhara, and
M. Wright, “Tik-Tok: The utility of packet timing in website ﬁngerprint-
ing attacks,” Proceedings on Privacy Enhancing Technologies (PETS),
vol. 2020, no. 3, pp. 5–24, 2020.
[8] S. Bhat, D. Lu, A. Kwon, and S. Devadas, “Var-CNN: A data-efﬁcient
website ﬁngerprinting attack based on deep learning,” Proceedings on
Privacy Enhancing Technologies (PETS), vol. 2019, no. 4, pp. 292–310,
2019.
[9] S. E. Oh, N. Mathews, M. S. Rahman, M. Wright, and N. Hopper,
“GANDaLF: GAN for data-limited ﬁngerprinting.” Proceedings on
Privacy Enhancing Technologies (PETS), vol. 2021, no. 2, pp. 305–322,
2021.
[10] P. Syverson, G. Tsudik, M. Reed, and C. Landwehr, “Towards an Anal-
ysis of Onion Routing Security,” in Proceedings of Designing Privacy
Enhancing Technologies: Workshop on Design Issues in Anonymity and
Unobservability, H. Federrath, Ed. Springer-Verlag, LNCS 2009, July
2000, pp. 96–114.
[11] P. Boucher, A. Shostack, and I. Goldberg, “Freedom Systems 2.0
Architecture,” Zero Knowledge Systems, Inc., White Paper, December
2000.
[12] P. Syverson, R. Dingledine, and N. Mathewson, “Tor: The second
generation onion router,” in USENIX Security Symposium, 2004.
[13] A. Johnson, C. Wacek, R. Jansen, M. Sherr, and P. Syverson, “Users
get routed: Trafﬁc correlation on tor by realistic adversaries,” in ACM
Conference on Computer and Communications Security (CCS), 2013,
pp. 337–348.
[14] R. Nithyanand, O. Starov, A. Zair, P. Gill, and M. Schapira, “Mea-
suring and mitigating as-level adversaries against tor,” arXiv preprint
arXiv:1505.05173, 2015.
[15] M. Edman and P. Syverson, “As-awareness in tor path selection,” in
ACM Conference on Computer and Communications Security (CCS),
2009, pp. 380–389.
[16] A. Houmansadr, N. Kiyavash, and N. Borisov, “Non-blind watermarking
of network ﬂows,” IEEE/ACM Transactions on Networking, vol. 22,
no. 4, pp. 1232–1244, 2013.
[17] Y. Sun, A. Edmundson, L. Vanbever, O. Li, J. Rexford, M. Chiang, and
P. Mittal, “RAPTOR: Routing attacks on privacy in tor,” in USENIX
Security Symposium, 2015, pp. 271–286.
[18] M. Akhoondi, C. Yu, and H. V. Madhyastha, “Lastor: A low-latency as-
aware tor client,” in IEEE Symposium on Security and Privacy (S&P),
2012, pp. 476–490.
[19] N. Feamster and R. Dingledine, “Location diversity in anonymity net-
works,” in ACM workshop on Privacy in the electronic society (WPES),
2004, pp. 66–76.
[20] J. Juen, A. Johnson, A. Das, N. Borisov, and M. Caesar, “Defending tor
from network adversaries: A case study of network path prediction,”
Proceedings on Privacy Enhancing Technologies (PETS), vol. 2015,
no. 2, pp. 171–187, 2015.
[21] H. Tan, M. Sherr, and W. Zhou, “Data-plane defenses against routing
attacks on tor,” Proceedings on Privacy Enhancing Technologies (PETS),
vol. 2016, no. 4, pp. 276–293, 2016.
[22] G. Wan, A. Johnson, R. Wails, S. Wagh, and P. Mittal, “Guard placement
attacks on path selection algorithms for tor,” Proceedings on Privacy
Enhancing Technologies (PETS), vol. 2019, no. 4, pp. 272–291, 2019.
[23] A. Arnbak and S. Goldberg, “Loopholes for circumventing the constitu-
tion: Warrantless bulk surveillance on americans by collecting network
trafﬁc abroad,” 2014.
[24] A. Barton and M. Wright, “Denasa: Destination-naive as-awareness
in anonymous communications,” Proceedings on Privacy Enhancing
Technologies (PETS), vol. 2016, no. 4, pp. 356–372, 2016.
[25] M. Nasr, A. Bahramali, and A. Houmansadr, “Deepcorr: strong ﬂow
correlation attacks on tor using deep learning,” in ACM Conference on
Computer and Communications Security (CCS), 2018, pp. 1962–1976.
[26] F. Schroff, D. Kalenichenko, and J. Philbin, “Facenet: A uniﬁed em-
bedding for face recognition and clustering,” in IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), 2015, pp. 815–823.
[27] J. Kleinberg and E. Tardos, Algorithm design. Pearson Education India,
2006.
[28] P. Sirinam, N. Mathews, M. S. Rahman, and M. Wright, “Triplet
Fingerprinting: More practical and portable website ﬁngerprinting with
n-shot learning,” in ACM Conference on Computer and Communications
Security (CCS), 2019, pp. 1131–1148.
[29] M. Nasr, A. Houmansadr, and A. Mazumdar, “Compressive trafﬁc analy-
sis: A new paradigm for scalable trafﬁc analysis,” in ACM Conference on
Computer and Communications Security (CCS), 2017, pp. 2053–2069.
[30] K. Krishna and M. N. Murty, “Genetic k-means algorithm,” IEEE
Transactions on Systems, Man, and Cybernetics, Part B (Cybernetics),
vol. 29, no. 3, pp. 433–439, 1999.
[31] A. Y. Ng, M. I. Jordan, and Y. Weiss, “On spectral clustering: Analysis
and an algorithm,” in Advances in Neural Information Processing
Systems (NeurIPS), 2002, pp. 849–856.
[32] M. Juarez, M. Imani, M. Perry, C. Diaz, and M. Wright, “Toward an
efﬁcient website ﬁngerprinting defense,” in European Symposium on
Research in Computer Security (ESORICS).
Springer, 2016, pp. 27–
46.
[33] J. Gong and T. Wang, “Zero-delay lightweight defenses against website
ﬁngerprinting,” in USENIX Security Symposium, 2020, pp. 717–734.
[34] FRONT Implementation.
[Online]. Available:
https://github.com/
websiteﬁngerprinting/WebsiteFingerprinting/
[35] WTF-PAD Implementation.
[Online]. Available: https://github.com/
wtfpad/wtfpad/
https://keras.io/
[36] Keras: The Python Deep Learning library.
[Online]. Available:
[37] Tensorﬂow. [Online]. Available: https://www.tensorﬂow.org/
[38] M. Juarez, S. Afroz, G. Acar, C. Diaz, and R. Greenstadt, “A critical
evaluation of website ﬁngerprinting attacks,” in ACM Conference on
Computer and Communications Security (CCS), 2014, pp. 263–274.
[39] “Tor project,” https://www.torproject.org/.
[40] T. Wang and I. Goldberg, “Walkie-Talkie: An efﬁcient defense against
passive website ﬁngerprinting attacks,” in USENIX Security Symposium,
2017, pp. 1375–1390.
[41] J.-F. Raymond, “Trafﬁc Analysis: Protocols, Attacks, Design Issues, and
Open Problems,” in Proceedings of Designing Privacy Enhancing Tech-
nologies: Workshop on Design Issues in Anonymity and Unobservability,
H. Federrath, Ed. Springer-Verlag, LNCS 2009, July 2000, pp. 10–29.
[42] X. Wang, D. S. Reeves, and S. F. Wu, “Inter-packet delay based
correlation for tracing encrypted connections through stepping stones,”
in Proceedings of ESORICS 2002, October 2002, pp. 244–263.
[43] B. N. Levine, M. K. Reiter, C. Wang, and M. K. Wright, “Timing
attacks in low-latency mix-based systems,” in Proceedings of Financial
Cryptography (FC ’04), A. Juels, Ed.
Springer-Verlag, LNCS 3110,
February 2004, pp. 251–265.
[44] Y. Zhu, X. Fu, B. Graham, R. Bettati, and W. Zhao, “On ﬂow correla-
tion attacks and countermeasures in mix networks,” in Proceedings of
Privacy Enhancing Technologies workshop, ser. LNCS, vol. 3424, May
2004, pp. 207–225.
[45] V. Shmatikov and M.-H. Wang, “Timing analysis in low-latency mix
networks: Attacks and defenses,” in European Symposium on Research
in Computer Security (ESORICS). Springer, 2006, pp. 18–33.
[46] X. Wang, S. Chen, and S. Jajodia, “Network ﬂow watermarking attack on
low-latency anonymous communication systems,” in IEEE Symposium
on Security and Privacy (S&P), 2007, pp. 116–130.
[47] A. Houmansadr, N. Kiyavash, and N. Borisov, “Rainbow: A robust
and invisible non-blind watermark for network ﬂows.” in Network &
Distributed System Security Symposium (NDSS), 2009.
[48] S. J. Murdoch and P. Zieli´nski, “Sampled trafﬁc analysis by internet-
exchange-level adversaries,” in International workshop on privacy en-
hancing technologies. Springer, 2007, pp. 167–183.
[49] R. Wails, Y. Sun, A. Johnson, M. Chiang, and P. Mittal, “Tempest:
Temporal dynamics in anonymity systems,” Proceedings on Privacy
Enhancing Technologies (PETS), vol. 2018, no. 3, June 2018.
[50] Y. Sun, A. Edmundson, N. Feamster, M. Chiang, and P. Mittal, “Counter-
raptor: Safeguarding tor against active routing attacks,” in IEEE Sympo-
sium on Security and Privacy (S&P), 2017, pp. 977–992.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:58:24 UTC from IEEE Xplore.  Restrictions apply. 
1929
[51] S. Lawrence, C. L. Giles, A. C. Tsoi, and A. D. Back, “Face recogni-
tion: A convolutional neural-network approach,” IEEE Transactions on
Neural Networks, vol. 8, no. 1, pp. 98–113, 1997.