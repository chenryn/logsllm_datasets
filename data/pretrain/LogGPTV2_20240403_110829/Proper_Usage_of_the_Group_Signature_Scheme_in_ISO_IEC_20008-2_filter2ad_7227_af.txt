(cid:3)
x; (cid:27)
(cid:3)
q ; (cid:27)
(cid:3)
y; (cid:27)
(cid:3)
x; (cid:27)
(cid:3)
q
(cid:3)
q ; (cid:27)
(cid:3)
r
; (cid:6)
(cid:3)
i
; (cid:27)
(cid:3)
x
(cid:3)
(cid:14)
(cid:3)
y
(cid:3)
(cid:3)
(cid:3)
(cid:3)
holds. Thus, we have 31 (= fthe (cid:12)rst part is changed or notg (cid:2) fthe second partis changed or notg (cid:2)
(cid:1)(cid:1)(cid:1) (cid:2) fthe last part is changed or notg (cid:0) fany parts are notchangedg = 25 (cid:0) 1) cases of a related query.
(cid:3)
3, it
r ,
(cid:3)
(cid:3)
2.
Although there are many cases, we can narrow down to seven cases. From the equation eR3 = R
holds that eR3 = R
e(cid:27)r = U (cid:27)
x from the equation eR2 = R
ue(cid:27)r = u(cid:27)
(cid:0)ec = U (cid:27)
e(cid:27)r (cid:1) T3
r . In a similar way, we gete(cid:27)x = (cid:27)
p, we gete(cid:27)r = (cid:27)
e(cid:27)y ̸= (cid:27)
, U
r . Since u 2 Z(cid:3)
(cid:3)
That is, it ultimately holds that
r (cid:1) (T
(cid:3)
= U (cid:27)
(cid:3)
r (cid:1) (T
(cid:3)
(cid:3)
(cid:3) , U
(cid:3) , U
(cid:3)
3 )
(cid:3)
3 )
(cid:0)c
(cid:0)c
(cid:3)
3
Thus, we can narrow down to seven (=23 (cid:0) 1) cases of a related query described in Table 1. Here,
(cid:3)
y
_ e(cid:27)(cid:14) ̸= (cid:27)
y (e(cid:27)(cid:14) ande(cid:27)q are arbitrary), (b)e(cid:27)y = (cid:27)
q , (⋆)e(cid:27)y = (cid:27)
^ e(cid:27)(cid:14) = (cid:27)
^ e(cid:27)q ̸= (cid:27)
(cid:3)
(cid:3)
y
(cid:3)
(cid:14)
(cid:3)
y
(cid:3)
(cid:3)
(cid:14)
(a)e(cid:27)y ̸= (cid:27)
(c)e(cid:27)y = (cid:27)
(cid:3)
(cid:0)c
(cid:3)
3 )
e(cid:27)r (cid:1) (T
_ e(cid:27)q ̸= (cid:27)
^ e(cid:27)(cid:14) ̸= (cid:27)
^ e(cid:27)(cid:14) ̸= (cid:27)
(cid:3)
q :
(cid:3)
y
(cid:3)
(cid:14)
^ e(cid:27)q = (cid:27)
^ e(cid:27)q ̸= (cid:27)
(cid:3)
q .
(cid:3)
(cid:14)
(cid:3)
q ,
we classify these cases into the following types:
Then, we analyze each type. Speci(cid:12)cally, the query described in Section 3 as an attack for Mechanism 6
is in Type (⋆).
e(cid:27)y
?= (cid:27)
(cid:3)
y
e(cid:27)(cid:14)
e(cid:27)q
?= (cid:27)
(cid:3)
(cid:14)
Yes
Yes
No
No
No
Yes
No
?= (cid:27)
(cid:3)
q Type
Yes
No
Yes
No
Yes
No
No
(a)
(a)
(a)
(a)
(b)
(c)
(⋆)
No
No
No
No
Yes
Yes
Yes
Table 1: Possible Cases of Related Queries
14
Now, we examine the related queries in Type (a), (b), and (c). In fact, the adversary can generate
these types of queries with only negligible probability. In the following, we explain the intuition of this
fact.
Let A be the adversary who attacks the anonymity of Mechanism 6. We note that for any related
e(cid:27)(cid:14) (cid:1) e(K; Y )
(cid:0)e(cid:27)q (cid:1) e(T
e(cid:27)y = e(K; G2)(cid:27)
(cid:3)
1 ; G2)
(cid:3)
(cid:14) (cid:1) e(K; Y )
(cid:0)(cid:27)
(cid:3)
q (cid:1) e(T
(cid:3)
1 ; G2)(cid:27)
(cid:3)
y
(2)
(cid:3)
1 holds. From this equation, we can get the following observations on the
query, it holds that
e(K; G2)
since the equation eR1 = R
e(cid:27)(cid:14);e(cid:27)q; (cid:27)
(cid:3)
(cid:3)
(cid:3)
i
Let T
t, K = G1
(cid:3)
1 = G1
; (cid:6) = (fT
k, and H = G1
e(cid:27)(cid:14) (cid:1) e(K; Y )
related queries in Type (a), (b), and (c).
Type (a): We consider the situation that A generates a related query (m
(cid:3)
y holds (here, we say nothing whether e(cid:27)(cid:14) ̸= (cid:27)
r )) in Type (a). That is, e(cid:27)y ̸= (cid:27)
e(cid:27)y = e(K; G2)(cid:27)
(cid:0)e(cid:27)q (cid:1) e(T
(cid:0)e(cid:27)q (cid:1) e(G1
e(cid:27)(cid:14) (cid:1) e(G1
e(K; G2)
, e(G1
, e(G1; G2)ke(cid:27)(cid:14)(cid:0)kwe(cid:27)q+te(cid:27)y = e(G1; G2)k(cid:27)
, ke(cid:27)(cid:14) (cid:0) kwe(cid:27)q + te(cid:27)y = k(cid:27)
)
(
(cid:0) kw(cid:27)
∵e(cid:27)y ̸= (cid:27)
w∆(cid:27)q (cid:0) ∆(cid:27)(cid:14)
, t = k
q , and ∆(cid:27)y = e(cid:27)y (cid:0) (cid:27)
(cid:14) , ∆(cid:27)q = e(cid:27)q (cid:0) (cid:27)
)
)
(
h. From Equation (2), it holds that
q (cid:1) e(T
(cid:3)
1 ; G2)(cid:27)
(cid:14) (cid:1) e(G1
k; G2
where ∆(cid:27)(cid:14) = e(cid:27)(cid:14) (cid:0) (cid:27)
(
t; G2)
(cid:0)kw(cid:27)
(cid:3)
(cid:14)
(cid:3)
(cid:3)
q + t(cid:27)
y
(cid:14) (cid:1) e(K; Y )
e(cid:27)y = e(G1
(cid:3)
y. Moreover, since T
(cid:3)
1 ; G2)
w)
k; G2)(cid:27)
k; G2)
(cid:3)
(cid:3)
q +t(cid:27)
y
k; G2
∆(cid:27)y
(cid:3)
(cid:3)
(cid:0)(cid:27)
(cid:0)(cid:27)
w)
(cid:3)
(cid:14)
(cid:3)
y
(cid:3)
y
(cid:3)
(cid:3)
(cid:3)
(cid:3)
G1
xib (cid:1)K
H
zib
1
w+yib (cid:1) K q
=
G1
hxib (cid:1)G1
G1
kzib
holds, it holds that
(cid:3)
w+yib (cid:1) G1
1
kq
(
t = logG1 T
(cid:3)
1 =
1
w + yib
From these two equations, we get
)
)
(cid:0) kzib
(cid:3)
:
+ kq
1 (cid:0) hxib
(
x;e(cid:27)y;
(cid:14) and e(cid:27)q ̸= (cid:27)
gi2[1;4]; c
(cid:3)
(cid:3)
q ).
; (cid:27)
(cid:3)
(cid:3)
(cid:3)
q (cid:1) e(G1
(cid:3)
y
t; G2)(cid:27)
(cid:3)
1 = Aib
(cid:3)
(cid:1) K q
=
w∆(cid:27)q (cid:0) ∆(cid:27)(cid:14)
1
1 (cid:0) hxib
(cid:0) kzib
(cid:3)
:
(cid:3)
k
=
∆(cid:27)y
+ kq
(cid:3)
(cid:14) , (cid:27)
w + yib
(cid:3)
q , and (cid:27)
(3)
From a viewpoint of the challenger who executes the anonymity game with A, the challenger knows
the values w and (yib ; xib ; zib ) since he generates the issuing key and all signing keys of honest users by
(cid:3)
(cid:14) ,
himself. Also, q
(cid:3)
is chosen by the challenger. Moreover, the challenger can compute ∆(cid:27)(cid:14) = e(cid:27)(cid:14) (cid:0) (cid:27)
y from the values e(cid:27)(cid:14), e(cid:27)q, and e(cid:27)y which are the part of the related
q , and ∆(cid:27)y = e(cid:27)y (cid:0) (cid:27)
∆(cid:27)q = e(cid:27)q (cid:0) (cid:27)
(cid:3)
(cid:3)
y which are the part of the challenge signature. The challenger does
query, and the values (cid:27)
not know the discrete logarithm of K in usual since the value K is randomly chosen from G1 in the GKg
algorithm. However, if the challenger chooses k 2 Zp uniform randomly and sets K = G1
k, he can know
the discrete logarithm k. Now, the challenger knows all values in Equation (3) except for h. This means
that the challenger can compute the discrete logarithm h of H 2 G1 from the values he knows. Thus,
when A generates a related query in Type (a), the challenger can solve the DL problem in G1. That
is, if the DL assumption holds in G1, the probability that A generates a related query in Type (a) is
(cid:3)
However, since this contradicts e(cid:27)(cid:14) ̸= (cid:27)
Type (b): Let K = G1
q are put in Equation (2), we
(cid:3)
get e(K; G2)
(cid:14) holds.
(cid:3)
(cid:14) that is the condition of Type (b), a related query in Type (b)
does not exist if k ̸= 0. On the other hand, the probability that k = 0 holds is 1=p since K 2 G1 is
chosen uniform randomly. Therefore, the probability that A generates a related query in Type (b) is at
most 1=p which is negligible.
k. When the conditions e(cid:27)y = (cid:27)
(cid:14) , e(G1; G2)ke(cid:27)(cid:14) = e(G1; G2)k(cid:27)
y and e(cid:27)q = (cid:27)
(cid:14) , ke(cid:27)(cid:14) = k(cid:27)
(cid:14) . If k ̸= 0, e(cid:27)(cid:14) = (cid:27)
e(cid:27)(cid:14) = e(K; G2)(cid:27)
negligible.