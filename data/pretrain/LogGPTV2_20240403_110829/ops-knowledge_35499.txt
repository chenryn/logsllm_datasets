User:  Task 10: Automate system deployment with Ansible
Assistant: Ansible is an operation and maintenance automation tool that can easily realize the automatic deployment and management of the system. This article will introduce the steps of using Ansible to automate the deployment of the system. 1. Install Ansible Before performing automation tasks, you first need to install Ansible on the control machine. On the Ubuntu system, you can execute the following command to install: ``` sudo apt-get update && sudo apt-get install ansible ``` 2. Configure Ansible Ansible uses the SSH protocol to connect and operate remote servers, so SSH is required to configure. Generate an SSH key on the control machine and copy the public key to all target hosts: ``` ssh-keygen -t rsa -b 2048 #Generate SSH key ssh-copy-id target_host #Copy the public key to the target host ``` Create the Ansible configuration file ansible.cfg on the control machine, and specify the default user and SSH key path of the remote host: ``` [defaults] remote_user=username #The default user of the remote host private_key_file=~/.ssh/id_rsa #SSH key path``` 3. Write Ansible playbook Ansible uses playbook to describe the configuration and operation of the system, which can be written in YAML format. The following is a simple playbook example for installing the Nginx server and starting the service: ``` - hosts: webserver #Target host group tasks: - name: Install Nginx #Task name apt: name=nginx update_cache=yes #Use the apt module Install Nginx - name: Start Nginx service: name=nginx state=started #Use the service module to start Nginx ``` 4. Execute Ansible playbook To execute the playbook, you can use the ansible-playbook command and specify the path of the playbook file: ``` ansible -playbook <playbook_path> ``` For example, to execute the above Nginx playbook, you can use the following command: ``` ansible-playbook nginx.yaml ``` Summary Through the above steps, you can use Ansible for automatic deployment and configuration of the system. It also involves other functions of Ansible, such as variables, conditional statements, loops, roles, etc., which can be learned and applied according to actual needs.