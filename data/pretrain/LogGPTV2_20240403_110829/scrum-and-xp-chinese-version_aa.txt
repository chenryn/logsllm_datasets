免费在线版本
（非印刷免费在线版）
InfoQ 中文站出品
本书由 InfoQ 中文站免费发放，如果您从其他渠道获取本 书，请注册 InfoQ 中文站以支持作者和出版商， 
并免费下载更多 InfoQ 企业软件开发丛书。 
本书主页为 
硝烟中的 Scrum 和 XP ——我们如何实施 Scrum 
作者：Henrik Kniberg 译者：李剑 
审校：郑柯
© 2008 C4Media Inc. 
版权所有
C4Media 是 InfoQ.com 这一企业软件开发社区的出版商
本书属于 InfoQ 企业软件开发丛书
如果您打算订购InfoQ的图书，请联系
未经出版者预先的书面许可，不得以任何方式复制或者抄袭本书的任 何部分，本书任何部分不得用于再印刷，存储于可重复使用的系统，或者以任何方式进行电子、机械、复印和录制等形式传播。
本书提到的公司产品或者使用到的商标为产品公司所有。本书提到的公司产品或者使用到的商标为产品公司所有。
如果读者要了解具体的商标和注册信息，应该联系相应的公司。
英文版责任编辑：Diana Plesa 
英文版封面设计：Dixie Press 
英文版美术编辑：Dixie Press 
中文版翻译：李剑 
中文版审校：郑柯 
中文版责任编辑：霍泰稳 
中文版美术编辑：吴志民
欢迎共同参与中文站的内容建设工作，包括原创投稿和翻译等，请联系。
10 9 8 7 6 5 3 2 1 
目  录 
译者序
致谢
序——JEFF SUTHERLAND
序——MIKE COHN
前言——嘿，SCRUM成了!
简介......................................................................................... 1免责声明............................................................................. 2 撰写本书的原因................................................................. 2 SCRUM到底是什么? .......................................................... 3
我们怎样编写产品BACKLOG ............................................. 4
额外的故事字段................................................................. 6 我们如何让产品BACKLOG停留在业务层次上 ................. 7我们怎样准备SPRINT计划.................................................. 8
我们怎样制定SPRINT计划................................................ 10为什么产品负责人必须参加........................................... 10 为什么不能在质量上让步............................................... 12 无休止的SPRINT计划会议…… ....................................... 13 SPRINT 计划会议日程..................................................... 14 确定SPRINT长度............................................................... 15 确定SPRINT目标............................................................... 16 决定SPRINT要包含的故事............................................... 17 产品负责人如何对SPRINT放哪些故事产生影响？....... 18 团队怎样决定把哪些故事放到SPRINT里面？............... 20我们为何使用索引卡....................................................... 26 定义“完成”................................................................... 30 使用计划纸牌做时间估算............................................... 30 明确故事内容................................................................... 32 把故事拆分成更小的故事............................................... 33 把故事拆分成任务........................................................... 34 定下每日例会的时间地点............................................... 36 最后界限在哪里............................................................... 36 技术故事........................................................................... 37 BUG跟踪系统 VS.产品 BACKLOG.................................. 40 SPRINT 计划会议终于结束了！..................................... 41我们怎样让别人了解我们的SPRINT................................ 42
我们怎样编写SPRINT BACKLOG.................................... 45
SPRINT BACKLOG的形式 .................................................. 45 任务板怎样发挥作用....................................................... 47 例 1——首次每日SCRUM之后 ...................................... 47 例 2——几天以后.......................................................... 49 任务板警示标记............................................................... 52 嘿，该怎样进行跟踪呢？............................................... 55 天数估算VS.小时估算.................................................... 55我们怎样布置团队房间....................................................... 56
设计角............................................................................... 56
我们怎样进行每日例会....................................................... 61
我们怎样更新任务板....................................................... 61 处理迟到的家伙............................................................... 62 处理“我不知道今天干什么”的情况........................... 63我们怎样进行SPRINT演示................................................ 65
为什么我们坚持所有的SPRINT都结束于演示............... 65 SPRINT演示检查列表....................................................... 66 处理“无法演示”的工作............................................... 67
我们怎样做SPRINT回顾.................................................... 68为什么我们坚持所有的团队都要做回顾....................... 68 我们如何组织回顾........................................................... 69 在团队间传播经验........................................................... 71 变，还是不变................................................................... 71
SPRINTS之间的休整时刻 ................................................. 74
我们怎样制定发布计划，处理固定价格的合同............... 77定义你的验收标准........................................................... 77 对最重要的条目进行时间估算....................................... 78 估算生产率....................................................................... 80 统计一切因素，生成发布计划....................................... 81 调整发布计划................................................................... 82 结对编程........................................................................... 83 测试驱动开发（TDD） .................................................. 84 增量设计........................................................................... 87 代码集体所有权............................................................... 88 充满信息的工作空间....................................................... 88 代码标准........................................................................... 88 可持续的开发速度/精力充沛的工作.............................. 89我们怎样做测试................................................................... 90
你大概没法取消验收测试阶段....................................... 90 把验收测试阶段缩到最短............................................... 91 把测试人员放到SCRUM团队来提高质量....................... 92 在每个SPRINT中少做工作来提高质量........................... 94 验收测试应该作为SPRINT的一部分么？....................... 94SPRINT 周期 VS.验收测试周期 .................................... 95 别把最慢的一环逼得太紧............................................... 99 回到现实......................................................................... 100
我们怎样管理多个SCRUM团队...................................... 101创建多少个团队............................................................. 101 为什么我们引入“团队领导”的角色......................... 106 我们怎样在团队中分配人手......................................... 107 是否使用特定的团队？................................................. 108 是否在SPRINT之间重新组织团队?................................ 112 兼职团队成员................................................................. 113 我们怎样进行SCRUM-OF-SCRUMS.................................. 113 交错的每日例会............................................................. 116 救火团队......................................................................... 117 是否拆分产品BACKLOG？ ............................................. 118 代码分支......................................................................... 123 多团队回顾..................................................................... 124我们怎样管理地理位置上分布的团队............................. 125
离岸................................................................................. 126 在家工作的团队成员..................................................... 128
SCRUM MASTER检查列表 ............................................ 129
SPRINT开始阶段.............................................................. 129 每一天............................................................................. 129 在SPRINT结束时.............................................................. 130额外的话............................................................................. 131
推荐阅读............................................................................. 132
有关作者............................................................................. 133
译者序
孙子兵法有云：兵无常势，水无常形，能因敌变化而取胜者谓之神。很多人都向往用兵如神的境界，想必也知道读万卷书不如行万里 路，纸上谈兵的故事更是耳熟能详；但偏偏不能举一反三。且看风清扬的一段话：“……你将这华山派的三四十招融合贯通，设想如何一气呵成，然后全部将它忘了，忘得干干净净，一招也不 可留在心中。待会便以甚么招数也没有的华山剑法，去跟田伯光对 打”。如果有人说，既然“无招胜有招”是武学的最高境界，那干 脆什么招数都不要学，拿把剑乱挥乱舞，处处破绽，也就处处无破 绽，便是天下第一了。听到这话的人肯定会笑他太缺心眼。
我在这里不想解释为什么上面那种说法缺心眼，因为只要不是缺心 眼的读者就肯定能够理解说他缺心眼的理由。但有句话叫做“不识 庐山真面目，只缘身在此山中”。对待离自身尚远的事物时，人们 可以把它分析的淋漓尽致；但到了自己身上，就往往成了当局者迷，旁观者清。譬如青春、譬如爱情、譬如敏捷软件开发。我想，这本书的读者大概都知道，现如今敏捷开发是何等炙手可热 的程度，但潮流一起，跟风者势必有之。虽然没法在这篇短短的序 中逐一批驳，大家也可以仔细思索一下，在周边是否存在缺心眼的 做法。比如，把 bad smells 背下来以后就大谈重构的好处；版本控 制、缺陷跟踪、配置管理等一无所有，便一味追求持续集成；单元 测试还不会写，就疯狂宣传测试驱动开发……这些都还好，只要没 有把敏捷等同于迭代，等同于又敏又捷，又快又爽；这也无所谓，只要没有在实际上对敏捷一无所知、对想要达到的目标不甚了了、对项目中存在的问题视若无睹的情况下宣传敏捷、推行敏捷就可以 了。但如果前面那些条件都吻合，最后这一点还能不满足么？
其实，敏捷不是说出来的，是干出来的。是为序。
	李剑 
于小女出生 43 天之际
致谢 
本书初稿完成仅用了一个周末，但很显然：那是一个超高强度工作
的周末！投入程度高达 150%:o)的周末！投入程度高达 150%:o) 
感谢我的妻子 Sophia 和两个孩子 Dave 与 Jenny，我那个周末扔下 她们独自工作，她们对此表示了宽容；还应该感谢 Sophia 的父母——Eva 和 Jörgen，在我忙碌的时候，他们过来一起照看了整个家
庭。
同 时 ， 还 应 该 感 谢 在 斯 德 哥 尔 摩 Crisp 工 作 的 同 事 ， 还 有 scrumdevelopment yahoo 讨论组的成员，他们一起校稿，提出了很
多改进意见。
最后，我要深深感谢所有的读者，从你们长期的反馈中我收获颇丰。
尤其要指出，能够通过本书点燃许多人尝试敏捷软件开发的热情，
这让我感到特别开心！
序——Jeff Sutherland这让我感到特别开心！
序——Jeff Sutherland 
开发团队需要了解一些 Scrum 的基础知识。该怎样创建产品 Backlog，对它进行估算？怎样把它转化成 Sprint Backlog？怎样管 理燃尽图（Burndown chart），计算团队的生产率（velocity）？Henrik 的书可以用作一些基础实践的入门指南，帮助团队从试用 Scrum 中 成长，最终成功地实施 Scrum。
当前，良好的 Scrum 执行过程对需要风险投资的团队正变得日益重
要。我现在是一个风险投资团队的敏捷教练；为了帮助他们达成目
标，我给出的建议是：只给敏捷实践实施情况良好的敏捷公司投资。
团队中的资深合伙人（Senior Partner）在向所有的待投资企业问同
一个问题：你们是否清楚团队的生产率？目前他们都很难做出明确
的答复。要想在将来得到投资，开发团队就必须清楚自己的软件生
产率。的答复。要想在将来得到投资，开发团队就必须清楚自己的软件生
产率。
为什么这一点如此重要呢？如果团队不清楚自己的生产率，那么产
品负责人（产品负责人）就无法用可靠的发布日期来创建产品路线
图。如果没有可靠的发布日期，公司的产品就可能会失败，投资人
的钱就有可能化为乌有！
无论公司规模大小，创办时间长短，或者是否有资金注入，这个问
题都是它们所要面对的。在最近在伦敦举办的一个大会上，我们曾
讨论过 Google 内部的 Scrum 实施状况，当时的听众有 135 个人，我问他们中有多少人在使用 Scrum，只有 30 个举手。我又接着问 他们是否在根据 Nokia 标准来做迭代开发。迭代开发是敏捷宣言的 基本原则——在早期频繁的交付可工作的软件。Nokia 用了几年时 间，对上百个 Scrum 团队的工作进行了回顾，总结出了迭代开发的
基本需求：
•	迭代要有固定时长（被称为“时间盒——timebox”），不基本需求：
•	迭代要有固定时长（被称为“时间盒——timebox”），不
能超过六个星期。
•	在每一次迭代的结尾，代码都必须经过 QA 的测试，能够
正常工作。
使用 Scrum 的 30 个人里面，只有一半人说他们遵守了 Nokia 标准，符合敏捷宣言的首要原则。我又问他们是否遵守了 Nokia 的 Scrum
标准：
•	Scrum 团队必须要有产品负责人，而且团队都清楚这个人