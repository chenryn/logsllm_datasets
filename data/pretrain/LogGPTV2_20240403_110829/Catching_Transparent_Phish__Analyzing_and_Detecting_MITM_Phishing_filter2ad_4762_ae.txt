3
2
165
5
7
5
1
7
1
4
30
39
72
135
15
165
1
47
474
130
178
460
16
254
3
51
1092
of a wide range of device platforms, including mobile and desktop
operating systems, and browsers. For each platform and browser
type we also record a diverse distribution of versions. Overall, our
dataset encompasses a large percentage of device platforms and
browsers used today. We find that the JA3 fingerprints of the MITM
phishing toolkits studied are unique in our dataset.
To reinforce our findings, we searched for the JA3 fingerprints of
MITM phishing toolkits in the ja3er.com [11] fingerprint database.
This database contains over 75 thousand unique fingerprints from
a wide variety of platforms. We found 745 HTTP User-Agents that
shared a TLS fingerprint with one of the three MITM phishing
toolkits. However, we are only interested in finding collisions be-
tween the JA3 TLS fingerprints of MITM phishing toolkits and web
browsers utilized by real users. We therefore filter this list of 745
HTTP User-Agents to remove any web bots.
Close inspection of all colliding User-Agents revealed a majority
to be benign web bots utilizing the same Golang TLS libraries as
MITM phishing toolkits. These web bots announce their identities
in their User-Agent strings, often times with a link to a website
explaining the purpose of the bot. The remaining User-Agents
claimed to be popular browsers, but we determined these to be
spoofed through manual verification of each User-Agent. We deter-
mined a User-Agent to be spoofed by either observing errors in the
User-Agent string (e.g. misspelling of browser name), observing
discrepancies in the reported browser and TLS fingerprint (i.e. the
reported browser does not support a TLS feature claimed by the
fingerprint), observing that the TLS fingerprint is an outlier com-
pared to all other TLS fingerprints associated with the User-Agent,
or manually recreating the JA3 fingerprint of the reported browser.
We conclude that the TLS fingerprints of MITM phishing toolkits
are unique when compared to the fingerprints of popular browsers
used by real web clients. It is therefore possible for a web server
to distinguish the requests from MITM phishing toolkits from the
benign requests of popular browsers with high accuracy, using
only TLS fingerprints. Since the TLS fingerprints of these toolkits
match only those of web bots utilizing the same Golang TLS li-
braries, it is safe for web servers to assume authentication requests
from clients sharing one of these TLS fingerprints are suspicious,
and should prompt closer inspection of all subsequent requests or
further action from the user.
6 DISCUSSION
Due to the ubiquitous presence of online services in our lives, phish-
ing campaigns remain a constant threat. Users who fall victim to
Session 1A: Cybercrime CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea46these attacks face serious financial and personal repercussions due
to the sensitive nature of stolen information. Furthermore, brands
targeted by these attacks see a deterioration in their reputation
among their user base, who may view a phishing campaign as a
sign of insecure systems. MITM phishing toolkits magnify these is-
sues by allowing attackers to launch highly sophisticated campaigns
in which users are presented with web pages indistinguishable to
those of the targeted brand. It is therefore of the utmost importance
to develop tools and methodologies to defend against these attacks,
in order to stop them before damage can be done.
6.1 Key Takeaways
• MITM phishing toolkit fingerprinting: The real-time traffic-
proxying of MITM phishing toolkits that allows them to launch
powerful phishing attacks, also exposes them to fingerprinting
that is not available for traditional phishing techniques. In this
paper, we demonstrated the effectiveness of using network-layer
features to detect MITM phishing toolkits (Section 3), with the
resulting classifier able to detect a large range of MITM phish-
ing toolkits, including those utilizing cloaking techniques. Ad-
ditionally, the responsibility of detecting these campaigns can be
distributed to both sides of the tainted communication channel,
thereby greatly increasing the probability of identifying mali-
cious content early in its life cycle.
• Classification in the wild: Over the course of our longitudinal
study, we discovered 1,220 MITM phishing toolkits targeting pop-
ular trademarks such as Google, Facebook, and Yahoo. Moreover,
by collaborating with Palo Alto Networks, we identified that
enterprise users are being targeted by MITM phishing toolkits.
• Blindspot in phishing blocklists: The cloaking mechanisms
utilized by MITM phishing toolkits severely decrease the effec-
tiveness of crowd-sourced blocklists (56.3% of the discovered
URLs were missing from all evaluated blocklists). Phishing block-
list services must take a more proactive approach in discovering
phishing content. We show that monitoring Certificate Trans-
parency logs for impersonating domain names is a successful
approach to uncovering otherwise hidden phishing websites.
• Mitigations: As we have discussed, the phishing content that
victims receive from MITM phishing toolkits is directly from the
targeted website. Thus, online services could include integrity
checks within the web page source. This code could ensure the
domain in the URL bar matches that of the real service, and reject
authentication if it is not. However, as attackers have full control
over application content, payload integrity cannot be ensured.
If an attackers knows a particular service uses such application-
layer integrity checks, they could simply remove this code prior
to sending it to the victim. We do note however, that while it is
possible for attackers to bypass these integrity checks, it is not
trivial as online services can consistently change the signature
of this code to thwart static analysis by attackers.
As a more robust counter-measure, online services should simply
use separate communication channels to complete 2FA. For in-
stance, users could be sent a rendezvous URL through a second,
secure communication channel, such as email. Users would then
submit their 2FA code to the form located on this web page rather
than the one presented by a MITM phishing toolkit. Similarly,
Universal Two Factor (U2F) can be used to mitigate these attacks.
As the generated key is bound to the domain of the intended on-
line service, keys generated during authentication with a MITM
phishing toolkit will be invalid.
6.2 Limitations
Our analysis should be considered alongside certain limitations.
Since this is the first investigation of MITM phishing toolkits, when
developing our classifier, we lacked real world ground-truth data
from these types of toolkits. We remedied this by creating our own
dataset, as described in Section 3.4. It is difficult, however, to create
a completely representative dataset modeling discrepancies intro-
duced by individual attackers, or the creation of new toolkits, from
a laboratory setting. For instance, an attacker that places a MITM
phishing toolkit behind an extra layer of redirection, such as a load
balancer, will introduce additional packet RTT delays. Edge cases
such as this require further training data to effectively identify.
However, we show in Section 3.4 that training data can be quickly
and easily generated to update our classifier to match such modifica-
tions. Moreover, as our classifier includes network timing features
that are consistently present in reverse proxy-server deployments,
it is agnostic to many modifications made by attackers.
Additionally, due to the overwhelming volume of TLS certifi-
cates registered and logged to Certificate Transparency, as well as
resource limitations, we are unable to monitor all brands potentially
targeted by MITM phishing toolkits. Rather, we monitored a subset
of these brands based on their popularity and use of two-factor
authentication. Implementations of our methodology by large in-
stitutions can expand monitoring to a larger subset of brands to
discover more phishing websites.
Lastly, while we show that our fingerprinting technique is highly
effective against MITM phishing toolkits, it is unable to discover
traditional phishing websites. This is a strength of visual phish-
ing detection compared to our approach. However, we note that
PHOCA can be easily implemented into existing anti-phishing ser-
vices, and should be used as an additional tool beside visual phishing
detection, rather than a replacement to it.
6.3 Ethical Considerations and
Responsible Disclosure
We took special care to ensure that PHOCA’s probes are not intru-
sive and disruptive to the websites being analyzed. Each visit by our
crawler results in a limited number of network requests ranging
from initiating TCP and TLS handshakes to HTTP GET requests.
Our crawler does not probe for vulnerabilities or use excessive
server resources. Our only interaction with users was for deter-
mining the distribution of TLS stacks in the wild. As described in
Section 5.1, our experiment collected the TLS Client-Hello message
and the User-Agent header of each user, something that users vol-
unteer to each and every website they visit on a daily basis. No PII
or other user-provided information was requested and we did not
make use of either stateful (e.g. cookies) or stateless (i.e. browser
fingerprinting) tracking techniques.
In order to strengthen existing anti-phishing efforts, we have
contacted a number of parties to disclose our findings. We have
reached out to phishing blocklist services to share the URLs we
Session 1A: Cybercrime CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea47discovered and ensure they make it onto widely-used blocklists.
We also shared the information on the blind spots that currently
exist in phishing blocklists as well as steps they can take to uncover
MITM phishing websites. Finally, through our collaboration with
Palo Alto Networks and their decision to adopt our technology, we
are confident that employees of thousands of companies will be
more protected against phishing attacks.
7 RELATED WORK
To the best of our knowledge, this work is the first to present a
comprehensive study on MITM phishing toolkits, their fingerprint-
ability, and potential defenses against them. In this section, we
briefly discuss prior work on phishing ecosystem measurement and
analysis, as well as network fingerprinting.
Phishing Ecosystem Analysis
Previous work has measured the overall lifespan of phishing web-
sites to determine their effectiveness as well as the effectiveness of
phishing blocklists. In 2020, Oest et al. proposed a framework to
detect phishing against the infrastructure of a particular brand us-
ing HTTP referrer headers, allowing them to measure the complete
lifespan of phishing web pages [52]. Han et al. studied the lifespan
of phishing attacks deployed on honeypots, discovering that the
average lifetime of phishing websites is eight days [36]. Sheng et
al. studied the effectiveness of phishing blocklists, finding that the
majority of phishing campaigns last less than two hours before
detection [55]. Oest et al. examined the cloaking functionalities of
phishing kits and how they affect the response time of phishing
blocklist services [49, 51].
In this paper, we study a specific class of phishing toolkits that
provide attackers with powerful evasion abilities due to the prox-
ying of content live from the target website.
Phishing Attack Detection and Mitigation
Previous works have proposed detecting phishing websites based
on the visual perception of web pages. This has been done through
matching the perceptual features of phishing web pages to those of
legitimate websites [27, 28, 46]. Visual differences in web pages of
the same website have also been used to detect phishing content on
compromised domains [34]. Prior work has also explored analyzing
domain names and URLs for features indicative of phishing websites.
To decrease the reaction time of phishing blocklists, efforts have
been taken to detect the registration of phishing domain names
in real time [37, 42, 43]. Similarly, prior work has proposed using
features from URLs to classify phishing websites [32, 41, 53], as well
as a combination of URL features and web page content [39, 44, 61].
Ulqinaku et al. demonstrated a system to mitigate 2FA phishing
attacks by utilizing the user’s smartphone to verify the URL in the
user’s browser [58]. When authenticating with an online service,
an encrypted JavaScript payload must be decrypted using a key
sent from the mobile device over Bluetooth and executed by the
user’s browser. The output of this script, a string representing the
current URL, is sent back to the mobile device and verified before
authentication can be completed.
In contrast to prior work, we propose techniques to detect MITM
phishing websites using features independent of attacker controlled
content from the perspectives of the client and targeted web server.
Proxy Server Fingerprinting
Attackers can use proxy servers to silently steal or modify data
in transit. Thus, prior work has proposed methods to fingerprint
proxy servers using the discrepancies they introduce. For instance,
techniques have been presented to detect transparent forward and
reverse proxies by analyzing transport and application layer re-
sponses to a set of probing requests [47, 60]. Further, analysis of
network timing discrepancies has been used to determine the pres-
ence of HTTP reverse proxies in network communications [29, 59].
In this work, we propose a classifier that determines the presence
of MITM phishing toolkits using a combination of network timing
analysis with TLS fingerprinting. Timing analysis of packet RTTs
is a robust method to fingerprint these toolkits, however including
TLS fingerprinting strengthens our classifier, further increasing its
robustness to attacker modifications.
8 CONCLUSION
MITM phishing toolkits magnify the damage caused due to phish-
ing by enabling attackers to launch highly sophisticated campaigns,
that appear visually indistinguishable to their victims. However,
the aspect of these toolkits that make them as effective as they are,
traffic proxying, is also their greatest weakness. Due to the network
architecture of these malicious reverse proxy servers, discrepancies
in network-level features can be used to infer their presence.
In this paper, we showed that it is possible to identify these tools
at a network level, and proposed a classifier capable of detecting the
presence of a MITM phishing toolkit with 99.9% accuracy. We also
create a fingerprinting tool, called PHOCA, to automatically col-
lect data on, and detect MITM phishing toolkits on the web. Using
PHOCA, we monitored popular phishing blocklists and Certificate
Transparency logs for 365 days, discovering 1,220 websites powered
by MITM phishing toolkits targeting major brands. We found that
these websites are hosted on dedicated malicious servers and are
largely absent from popular URL blocklists. Through our collabora-
tion with Palo Alto Networks, we demonstrate the real-world pres-
ence of MITM phishing toolkits, observing 6,403 customer requests
towards 260 of these toolkit deployments over a six-month period.
Finally, next to client-side fingerprinting, we also presented a
methodology that targeted brands can use to detect malicious re-
quests originating from MITM phishing toolkits using TLS finger-
printing. From a survey of 4,311 distinct device User-Agents, the
TLS fingerprints of MITM phishing toolkits are unique, and thus
fingerprintable from network requests alone.
Availability: To help security researchers and maintainers of phish-
ing blocklists, we are open-sourcing PHOCA and our curated datasets.
Moreover, we are making available our code for creating testing
environments across globally-distributed public clouds (described