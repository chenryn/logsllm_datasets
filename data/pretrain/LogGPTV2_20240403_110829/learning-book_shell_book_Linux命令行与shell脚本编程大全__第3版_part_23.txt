TMPDIR
目录名，保存bash shell创建的临时文件
UID
当前用户的真实用户ID（数字形式）
你可能已经注意到，不是所有的默认环境变量都会在运行set命令时列出。尽管这些都是默
认环境变量，但并不是每一个都必须有一个值。
6.5
设置PATH环境变量
当你在shell命令行界面中输人一个外部命令时（参见第5章），shell必须搜索系统来找到对应
的程序。PATH环境变量定义了用于进行命令和程序查找的目录。在本书所用的Ubuntu系统中，
PATH环境变量的内容是这样的：
S echo $PATH
/sbin1/bin1/uer/games1/usr/1ocal/games
/usr/ local /sbin1/usr /loca1/bin1/usr/sbin1/usr/bi.n1
输出中显示了有8个可供shell用来查找命令和程序。PATH中的目录使用冒号分隔。
如果命令或者程序的位置没有包括在PATH变量中，那么如果不使用绝对路径的话，shell是没
法找到的。如果shell找不到指定的命令或程序，它会产生一个错误信息：
S nyprog
-bash1 myprog1 conmand not found
问题是，应用程序放置可执行文件的目录常常不在PATH环境变量所包含的目录中。解决的
办法是保证PATH环境变量包含了所有存放应用程序的目录
可以把新的搜索目录添加到现有的PATH环境变量中，无需从头定义。PATH中各个目录之间
---
## Page 129
114第
第6章使用Linux环境变量
是用冒号分隔的。你只需引用原来的PATH值，然后再给这个字符串添加新目录就行了。可以参
考下面的例子。
$ echo $PATH
/uer/local/ebin: /usr/ Loea1/bin: /usr/εbin:/usr/bin.s
/sbin: /bin: /usr/games :/usr/local/games
$ PATB=$PATB:/hone/christine/Scripts
$ echo $PATB
/usr/local/sbin:/usr/Local/bin:/usr/sbin:/usr/bin1/sbin:/bin1/usr/
games1/usr/local/games1 /home/christine/Scripts
The factorial of 5 is 120.
 myprog
将目录加到PATH环境变量之后，你现在就可以在虚拟目录结构中的任何位置执行程序。
$ cd /ete
$ myprog
The factorial of 5 is 120
窍门如果希望子shell也能找到你的程序的位置，一定要记得把修改后的PATH环境变量导出：
程序员通常的办法是将单点符也加人PATH环境变量。该单点符代表当前目录（参见第3章）。
$ PATH=$PATB1.
$ cd /home/christine/0ld_Scripts
myprog²
The factorial of 6 is 720
对PATH变量的修改只能持续到退出或重启系统。这种效果并不能一直持续。在下一节中，
你会学到如何永久保持环境变量的修改效果。
6.6定位系统环境变量
环境变量在Linux系统中的用途很多。你现在已经知道如何修改系统环境变量，也知道了如
何创建自己的环境变量。接下来的问题是怎样让环境变量的作用持久化。
在你登人Linux系统启动一个bash shell时，默认情况下bash会在几个文件中查找命令。这些
文件叫作启动文件或环境文件。bash检查的启动文件取决于你启动bash shell的方式。启动bash
shell有3种方式：
口登录时作为默认登录shell
---
## Page 130
6.6定位系统环境变量
115
口作为非登录shell的交互式shell
口作为运行脚本的非交互shell
下面几节介绍了bash shell在不同的方式下启动文件。
6.6.1登录shell
当你登录Linux系统时，bash shell会作为登录shell启动。登录shell会从5个不同的启动文件里
读取命令：
 /etc/profile
 SHOME/.bash_profile
 SHOME/.bashrc
 SHOME/.bash_login
 SHOME/.profile
letc/profile文件是系统上默认的bash shell的主启动文件。系统上的每个用户登录时都会执行
这个启动文件。
说明要留意的是有些Linux发行版使用了可折卸式认证模块（PluggableAuthentication
Modules，PAM）。在这种情况下，PAM文件会在bash shell启动之前处理，这些文件中可
能会包含环境变量。PAM文件包括/etc/environment文件和SHOME/pam_environment文件。
PAM更多的相关信息可以在http://linux-pam.org中找到。
另外4个启动文件是针对用户的，可根据个人需求定制。我们来仔细看一下各个文件。
1. /etc/profile文件
/etc/profile文件是bash shell默认的的主启动文件。只要你登录了Linux系统，bash就会执行
/etc/profile启动文件中的命令。不同的Linux发行版在这个文件里放了不同的命令。在本书所用的
UbuntuLinux系统上，它看起来是这样的：
 /etc/profile: syaten=wide profile file for the Bouzme shell (ah (1))
S cat /etc/profile
# and Bourne compatible shella (bash (1), kah(1), ash(1) 。 -..) .
if [ *$ps1* 1: then
1f [ *SBASH*] &s [ *SBASH* I=*/bin/ah* 1; then
 The file bash,bashrc already seta the default PS1 .
 PS1=*\h:\w\$ 
if [ -f /etc/bash.bashrc 1; then
/etc/bash.bashrc
f1
e1.se
f [ **id -u** -eq 0 1; then
e1se
PS1='# '
---
## Page 131
116
第6章使用Linux环境变量
PS1=*$
f1
f1
f 1
 The Gefault unaak Le nov handled by pan_umask,
See pam_unask(8) and /etc/login,Gefa.
1f [ -d /etc/profile,d 1; then
for 1 in /etc/profile.d/*,ah; do
f [ -r $i 1; then
f1
Gone
unset1
 L
$
这个文件中的大部分命令和语法都会在第12章以及后续章节中具体讲到。每个发行版的
/etc/profile文件都有不同的设置和命令。例如，在上面所显示的Ubuntu发行版的/etc/profile文件中，
涉及了一个叫作/etc/bash.bashrc的文件。这个文件包含了系统环境变量。
但是，在下面显示的CentOS发行版的/etc/profile文件中，并没有出现这个文件。另外要注意
的是，该发行版的/etc/profile文件还在内部导出了一些系统环境变量。
S cat /etc/profi1e
/etc/prof11e
 Syatem wlde environnent and etartup prograns, fox login setup
 Functions and aliasea go ln /etc/bashrc
 Itα N0T a good idea to change thlsfi1e unless you know what you
 are Going- It'g much better to create a custom.sh shell scrlpt ln
 prevent the need for merging In future updates.
oq *2u9mto.ttaue xmo oq sefaeo to8mo 8xet o1 /p*8tTgo.ad/oe/ 
pathmunge (1{
case *÷$(PATH):* 1n
* :*$1*:*1
* )
1
1f [*$2* = *after* ]; then
PATH=$PATH:$1
else
PATH=$1 :$PATH
f1
e8ac
1f[-× /uax/bin/1d 1 ; then
if[ -z *$EUID* 1; then
 ksh workaround
---
## Page 132
6.6定位系统环境变量
117
EUID=′id -u*
UID=*id -ru²
f 1
USER=*^id -un**
KAIL=*/vax/apoo1 /na11 /$USER*
LOGNANE=$USER
f1
if [ *sEUID* = *o* ]; then
 Path nanipulation
pathmunge/abin
pathaunge /usx/local/abl.n
pathmunge
/uar/abin
else
pathaunge /uax/1ocal/abln after
pathmunge
pathmunge /abin after
xaage utq8/xsn/
fL
HOSTNANE=~ /bLn/hostnane 2>/Gev/nu11~
1f[*$HISTCoNTROL* = *ignoreapace* ] : then
HISTSIZE=1000
expoxt HISTCONTROL=1gnoreboth
else
expoxt HISTCONTROL=1gnoxedupa
eXpOrt PATH USER LOGNAME NAIL HOSTNANE HISTSIZE HISTCONTROL
 By default, we want umask to get set. Thia seta it for login shel1
You could check uidgld reservation valiaity in
#Current threshold for syatem reserved uid/gida ia 200
uesa [ . un- pT、、 = - ,u6- PT、- ]  [ 66t 6- αIns 1 3T
/usr/share/Goc/setup*/uidgid f11e
umask 002
else
umask 022
for 1 in /etc/profile.d/*,ah : do
f [ -r *si" I: then
1f [*$(-#*1)* = *$-* ]; then
*$I*
else
*$* >/dev/nu11 2>&1
done
unset 1
inset
sbumetd -
这两个发行版的/etc/profile文件都用到了同一个特性：for语句。它用来送代/etc/profile.d目
---
## Page 133
118
第6章使用Linux环境变量
录下的所有文件。（该语句会在第13章中详述。）这为Limux系统提供了一个放置特定应用程序启
动文件的地方，当用户登录时，shell会执行这些文件。在本书所用的UbuntuLinux系统中，
/etc/profile.d目录下包含以下文件：
≤ 1s -1 /etc/profile.d
-rw-r--r-- 1 root root 
total 12
 40 Apr 15 06:26 appmenu-gt.5.sh
-rw-r--π-- 1 root root
663 Apr  7 10:10 bash_completion.sh
-rw-r--r-- 1 root root 1947 Nov 22  2013 vte.sh
在CentOS系统中，/etc/profile.d目录下的文件更多：
 18 -1 /etc/profile.d
tota1 80
-rw-r--r--. 1 root root 1127 Mar 5 07:17 colorls.csh
-rw-r--r--. 1 root root 1143 Mar 5 07:17 colorls.sh
-rw-r--r--.
. 1 root root
. 1 root root
92 Nov 22  2013 cvs.csh
78Nov 22
192 Feb 24 09:24 glib2,csh
2013 cvs.sh
-rw-r----.
 1 root root
-w-----
1
root root
192 Feb 24 09:24 glib2.sh
-IW-r---
1 root root
58 ov 22 2013 gmome-ssh-askpass.csh
W----
1
root
root
70 Nov 22
2013§
qa*saedxge-qps-auoue 
-IWXr-Xr-x.
 1 root root
373 Sep 23
2009 kde,csh
-IWXrxrx
. 1 root root 1741 Feb 20 05:44 1ang-csh
11
root root
288 Sep 23
2009 kde.sh
-rw-r--[--.
-w-----
1 root root 2706 Feb 20 05144 lang-sh
-W----= -
1 root 1
root
122 Feb7
2007 leas,csh
1 root root
108 Feb  7
976 Sep 23
2007 less.sh
-rw-r---- .
1 root root 912 Sep 23 2011 qt.sh
1
root root
2011 qt,csh
-rw-r-----
-rw-r--[--.
1
root root 2142 Mar 13 15:37 udiske-bash-completion.sh
-w-r---- .
1 root root
97 Apr 5 2012 vin.csh
-rw-r--r--. 1 root root 169 May 20 2009 which2.sh
-w-----
1
root root
269 Apr  5
2012 vin.sh
不难发现，有些文件与系统中的特定应用有关。大部分应用都会创建两个启动文件：一个供
bash shell使用（使用.sh扩展名），一个供c shell使用（使用.csh扩展名）。
lang.csh和lang.sh文件会尝试去判定系统上所采用的默认语言字符集，然后设置对应的LANG
环境变量。
2.$HOME目录下的启动文件
剩下的启动文件都起着同一个作用：提供一个用户专属的启动文件来定义该用户所用到的环
境变量。大多数Linux发行版只用这四个启动文件中的一到两个：
 SHOME/.bash_profile
 SHOME/bashrc
 SHOME/.bash_login
 SHOME/.profile
---
## Page 134