础知识。
第22章内核漏洞利用技术
本章将带领读者从一个简单的内核漏洞程序exploitme.sys的编写开始，展示内核漏洞利用
的思路、方法，以及利用程序和RingOShellcode的编写和设计。
第23章FUZZ驱动程序
掌握了内核漏洞的原理和利用方法，本章将进入内核漏洞挖掘阶段，学习较为高级的内核
漏洞挖掘技术，最后实践该漏洞挖掘技术，分析、挖掘出内核漏洞。
第24章内核漏洞案例分析
本章对几种典型的内核漏洞，用几个真实的内核漏洞案例来详细分析，分析漏洞造成的具
体原因和细节，并构造漏洞成功利用的方法。
第5篇漏洞分析案例
第25章漏洞分析技术概述
本章纵览了漏洞分析与调试的思路，并介绍了一些辅助漏洞调试分析的高级逆向工具。
第26章RPC入侵：MS06-040与MS08-067
由于可以做到主动式远程入侵，RPC级别的漏洞被誉为漏洞中的王者，此类漏洞也极其稀
有，每一个都有一段曲折的故事。值得一提的是最近的两个RPC系统漏洞竟然出自同一个函
数。本章将对这个缝来补去没有修好的函数进行详细分析，让您从攻防两方面深刻理解漏洞的
起因和修复策略的重要性。
第27章MS06-055分析：实战HeapSpray
通过网页“挂马”是近年来攻击者惯用的手法。本章通过分析微软正浏览器中真实的缓
冲区溢出漏洞，告诉您为什么不能随便点击来历不明的URL链接，并在实战中为大家演示Heap
Spray技术。
第28章MS09-032分析：一个“&”引I发的血案
一个视频网页的背后可能是一只凶狠的木马，这就是著名的MicrosoftDirectShowMPEG-2
·IIX·
---
## Page 14
视频ActiveX控件远程代码执行漏洞。本章将为您分析该漏洞产生的原因及分析技巧。
第29章Yahoo!Messenger栈溢出漏洞
在波涛汹涌的溢出大潮中Yahoo也没能幸免，作为国外非常流行的Yahoo!Messenger也存
在过非常严重的漏洞。本章将重现当时的场景，并分析漏洞产生的原因。
第30章CVE-2009-0927：PDF中的JS
您可能不会随便运行一个可执行文件，但是您会想到别人发过来的PDF文档中也有可能
隐藏着一些东西吗？本章将以PDF文档为例，带您领略文件类型溢出漏洞的风采。
第31章坝之蚁穴：超长URL溢出漏洞
安全软件不一定安全，即便是这款保护未成年人健康上网的计算机终端过滤软件，也有可
能成为黑客攻击的窗口。本章将介绍绿坝软件中一个已经被修复了的安全漏洞。
第32章暴风影音M3U文件解析漏洞
晚上回家后用暴风影音打开别人发过来的M3U列表文件，在你陶醉于其内容之时，一只
精干的小马已悄然在后台运行。想要了解这只小马是如何进入你的电脑的？请阅读本章。
第33章LNK快捷方式文件漏洞
是否我不去运行任何可疑文件，不去打开陌生的网址就安全了呢？答案是否定。LNK快捷
方式漏洞无需打开文件，只要浏览恶意文件，所在文件夹就会中毒，俗称“看一眼就挂”。本
章将带您分析这一神奇的漏洞。
·XⅢI·
---
## Page 15
目
录
第1篇漏洞利用原理（初级）
第1章基础知识
1.1漏洞概述·
1.1.1bug与漏.
"2
1.1.2几个令人困感的安全问题
1.1.3漏洞挖掘、漏洞分析、漏洞利用
...3
1.1.4漏洞的公布与0day响应·
1.2二进制文件概述
5
1.2.1PE文件格式
.5
1.2.2虚拟内存.
6
1.2.3PE文件与虚拟内存之间的映射
***7
1.3必备工具
11
1.3.1OllyDbg简介
 11
1.3.2SoftICE简介
* 11
1.3.3WinDbg简介
16
1.3.4
IDAPro简介
18
1.3.5
二进制编辑器
.20
1.3.6VMware简介
..21
1.3.7Python编程环境·
28
1.4Crack小实验
.29
第2章栈溢出原理与实践
38
2.1系统栈的工作原理
.38
2.1.1内存的不同用途
.38
2.1.2栈与系统栈
.39
2.1.3函数调用时发生了什么
*.40
2.1.4寄存器与函数栈帧
.43
2.1.5函数调用约定与相关指令
---
## Page 16
2.2修改邻接变量
47
2.2.1修改邻接变量的原理·
*.47
2.2.2突破密码验证程序.
*..49
2.3修改函数返回地址
53
2.3.1返回地址与程序流程
.53
2.3.2控制程序的执行流程
2.4代码植入.
.62
2.4.1代码植入的原理.
.62
2.4.2向进程中植入代码
..62
第3章开发shellcode的艺术
 71
3.1shellcode概述
..71
3.1.1shellcode 与exploit.
..71
3.1.2shellcode需要解决的问题….
.72
3.2定位shellcode...
.73.
3.2.1栈帧移位与jmpesp"
.73
3.2.2获取“跳板”的地址
.76
3.2.3使用“跳板”定位的exploit
..78
3.3缓冲区的组织·
.81
3.3.1缓冲区的组成
.81
3.3.2拾高栈顶保护shellcode
.83
3.3.3
使用其他跳转指令
3.3.4不使用跳转指令
.84
3.3.5函数返回地址移位
3.4
开发通用的shellcode.
..87
3.4.1定位API的原理
3.4.2shellcode的加载与调试
.8
3.4.3动态定位API地址的shellcode
.89
3.5shellcode编码技术.….
.98
3.5.1为什么要对shellcode编码
.98
3.5.2会“变形”的shellcode
.99
3.6
为shellcode“减肥”
.103
3.6.1shellcode瘦身大法..
.103
3.6.2选择恰当的hash算法
.105
3.6.3191个字节的bindshell
.107
第4章用MetaSploit开发Exploit
119
4.1漏洞测试平台MSF简介
61I..
·XV.
---
## Page 17
4.2入侵Windows系统·
4.2.1漏洞简介
.121
4.2.2图形界面的漏洞测试
..121
4.2.3console界面的漏洞测试
4.3利用MSF制作shellcode
. 126
4.4用MSF扫描“跳板”
... 128
4.5
Ruby语言简介
4.6
“傻瓜式”Exploit开发
. 134
4.7
用MSF发布POC.
. 140
第5章
堆溢出利用
 144
5.1
堆的工作原理·
. 14
5.1.1Windows堆的历史..
.. 14
5.1.2堆与栈的区别
. 145
5.1.3堆的数据结构与管理策略
. 146
5.2在堆中漫游
. 151
5.2.1堆分配函数之间的调用关系
 151
5.2.2堆的调试方法.
.152
5.2.3识别堆表
.15
5.2.4堆块的分配·
. 158
5.2.5堆块的释放
 159
5.2.6堆块的合并
. 159
5.2.7快表的使用，
.161
5.3堆溢出利用（上）一
DWORDSHOOT...
 163
5.3.1链表“拆卸”中的问题
.163
5.3.2在调试中体会“DWORDSHOOT”
.165
5.4堆溢出利用（下）一
代码植入
169
5.4.1DWORDSHOOT的利用方法
.169
5.4.2狙击P.E.B中RtlEnterCritical-SectionO的函数指针
.1.70
5.4.3堆溢出利用的注意事项
.1.75
第6章形形色色的内存攻击技术
178
6.1狙击Windows异常处理机制
 178
6.1.1S.E.H概述
. 1.78
6.1.2在栈溢出中利用S.E.H
.180
6.1.3在堆溢出中利用S.E.H·
 184
6.1.4深入挖掘Windows异常处理
187
6.1.5其他异常处理机制的利用思路
. 192
·XVI·
---
## Page 18
6.2“offbyone”的利用·
.196
6.3攻击C++的虚函数
.1.98
6.4HeapSpray：堆与栈的协同攻击
.201
第7章手机里的缓冲区溢出
204
7.1WindowsMobile简介..
.204
7.1.1WindowsMobile前世今生
.204
7.1.2WindowsMobile架构概述
.205
7.1.3
WindowsMobile的内存管理.
.209
7.2
2ARM简介
.212
7.2.1ARM是什么.
.212
7.2.2
ARM寄存器结构·
.212
7.2.3
ARM汇编指令结构
.215
7.2.4ARM指令寻址方式
.220
7.2.5ARM的函数调用与返回
.222
7.3WindowsMobile上.的HeloWorld..
.23
7.4远程调试工具简介
.227
7.4.1远程信息查看管理套件
227
7.4.2手机上的调试—MicrosoftVisualStudio.
.231
7.4.3手机上的调试—IDA.
.233
7.5手机上的exploitme.
.237
第8章其他类型的软件漏洞
.243
8.1格式化串漏洞.
.243
8.1.1printf中的缺陷.
.243
8.1.2用printf读取内存数据
..244
8.1.3用printf向内存写数据..
.245
8.1.4格式化串漏洞的检测与防范.
.246
8.2SQL注入攻击
.2447
8.2.1SQL注入原理.
.2.47
8.2.2攻击PHP+MySQL网站.
.248
8.2.3攻击ASP+SQLServer网站
.250
8.2.4注入攻击的检测与防范.
.252
8.3
其他注入方式
..253
8.3.1Cookie注入，绕过马其诺防线
..253
8.3.2XPath注入，XML的阿喀琉斯之.
*.254
8.4XSS攻击
..255
8.4.1脚本能够“跨站”的原因
.255
·XVII·
---
## Page 19
8.4.2XSSReflection攻击场景
256
8.4.3StoredXSS攻击场景
.258
8.4.4攻击案例回顾：XSS虫