if none was received from customers,
We also assume that BGP selects one announcement, if
available, for every preﬁx, regardless of the existence of an-
nouncements for sub-preﬁxes and super-preﬁxes. In particular,
we assume no preﬁx aggregation.
Note that as a result of these assumptions and the strong
connectivity of the Internet AS topology, if a preﬁx is an-
nounced by an AS, then an announcement for it would reach
almost every other AS. In particular, if a preﬁx p is announced
only by one origin AS, say AS a,
then almost all ASes
would receive the announcement for p with origin a. This is
the case for the announcements sent in the attacks we focus
on: subpreﬁx hijack, non-routed preﬁx hijack, and superpreﬁx
hijack.
Hidden hijacks occur when IP packets sent by an AS to
Figure 1.
Illustration of hidden hijacks with (a) BGP and (b) ROV.
some preﬁx are hijacked, even though all the BGP announce-
ments received by the AS contain the correct origin. Hidden
hijacks are possible with ROV, ROV++ and even BGP. Fig. 1(a)
shows an example, where due to valley-free routing, AS 44
will fall victim to a subpreﬁx hijacking without receiving the
subpreﬁx-hijack announcement. This is because AS 88 does
not send the subpreﬁx-hijack announcement to AS 44, since
AS 88 received this announcement from a peer, while AS 44
is a provider of AS 88; on the other hand, trafﬁc from AS
44 to the subpreﬁx 1.2.3/24 will be hijacked anyway once
reaching AS 77. ROV may also create hidden hijacks, e.g.,
as in Fig. 1(b). In this example, the ROV adopting AS 78
is hijacked and, because AS 78 drops the subpreﬁx hijack
announcement, the subpreﬁx hijack will be hidden from AS
44, whose trafﬁc to 1.2.3/24 will be routed to the attacker and it
will not know the change in data ﬂow. If AS 78 did not adopt
ROV, the hijack would have been visible at AS 44. Hidden
hijacks are a signiﬁcant obstacle in securing BGP without
perfect knowledge of the data plane. We formally deﬁne hidden
hijacks and describe hidden hijacks in ROV++ in §IV.
Three versions of ROV++. In the following, we present
the three basic mechanisms of ROV++, which are incorporated,
progressively, into three versions (ROV++ versions v1, v2 and
v3). ROV++ v1 has the ﬁrst mechanism, ROV++ v2 has the
ﬁrst two mechanisms, and ROV++ v3 has all three mecha-
nisms. In the ﬁgures below, blue ovals and yellow rectangles
represent the ASes that run BGP and ROV, respectively. An
AS that adopts ROV++ is represented as a green rectangle,
topped by a triangle containing the version number.
A. Preventing Visible Hijacks (ROV++ v1)
The simplest type of data-plane hijack that is not prevented
by ROV occurs when a ROV-deploying AS receives, from
the same neighbor, both a valid announcement for a preﬁx
(say, 1.2/16) and an invalid announcement for a subpreﬁx (say,
1.2.3/24); this is the scenario for both ASes 77 and 78 in
Fig. 2(a). Suppose that this is either the only announcement
received for the preﬁx (as is the case for AS 77) or the best
announcement for the preﬁx (as is the case for AS 78). In both
cases, ROV will discard the invalid subpreﬁx announcement
and use the preﬁx announcement—e.g., in Fig. 2(a), both ASes
77 and 78 will use the announcement received from AS 44.
As a result, they will forward data packets with destination IP
addresses in 1.2/16 to AS 44. Since AS 44 is using plain BGP,
however, it will route these packets directly to the attacker, AS
666. This is a data-plane hijack; it applies to all trafﬁc sent
3
66688441.2.3/24BGPROVHijacked data flowAnnouncements99ProviderCustomerAttacker1.2/161.2/16, 991.2/16, 88-99(a)66688441.2.3/24991.2/161.2.3/24, 666781.2/16, 88-991.2.3/24, 88-666(b)PeerPeer1.2.3/24, 77-6661.2/16, 78-88-991.2/16, 99771.2.3/24, 666ROV++ v1 prevents visible data-plane subpreﬁx hijacks. (a) ASes 77 and 78 adopt ROV, and yet their trafﬁc to 1.2.3/24 is hijacked, (b) the hijack
Figure 2.
is prevented using ROV++ v1, by blackholing at AS 77 and by preferring a secure alternative path at AS 78. ASes 77 and 78’s adoption of ROV++ also protect
their customers.
(a)
(b)
from ASes 77 and 78, as well as from their customers (ASes
11 and 12), to the subpreﬁx 1.2.3/24.
Notice that AS 77 and AS 78 could have deduced that any
trafﬁc to 1.2.3/24 routed to AS 44 would be hijacked, since
they also received from AS 44 the subpreﬁx hijack announce-
ment, and hence they “knew” that trafﬁc to the subpreﬁx would
be hijacked. In other words, the data-plane subpreﬁx hijack
was visible to the ROV-deploying AS. However, ROV fails to
take this into account, and trafﬁc to 1.2.3/24 is hijacked.
Alternative behaviors for AS 77 and AS 78 are depicted in
Fig. 2(b), which show improved resilience to visible hijacks.
AS 78 prefers a different path to the 1.2/16 preﬁx, which
goes via AS 88, thereby avoiding the hijack. AS 77 can only
route via AS 44—that is, it has no “safe route” that it could
prefer and reach the origin, AS 99; instead, it blackholes
the “doomed” trafﬁc to 1.2.3/24. While this is not the most
desirable outcome, as it results in the loss of this trafﬁc,
it is still much better than having the trafﬁc hijacked. The
blackholing and preference mechanisms by ASes 77 and 78
also beneﬁt their customers (ASes 11 and 12, respectively).
We use the term ROV++ v1 to refer to the extension
of ROV that provides a preference to a secure path and
blackholing when no secure path exists. The actual design also
addresses more complex scenarios, explored in the next sec-
tion. Note that ROV++ v1 differs from another route validation
policy, Drop Invalid if Still Routable (DISR) [53]. In Fig. 2(b),
if AS 78 deploys DISR,
then it will drop the subpreﬁx
announcement 1.2.3/24 since it can route trafﬁc (going to
1.2.3/24) using the less speciﬁc preﬁx, 1.2/16. However, in
that case, the trafﬁc from ASes 78 and 12 to 1.2.3/24 will be
routed using a shorter path, i.e., via AS 44, and hence hijacked.
B. Blackhole Announcements (ROV++ v2)
As discussed above, subpreﬁx hijack announcements—
like every announcements of a preﬁx p sent only with a
single origin AS a—typically reach almost every AS in the
Internet. This holds even when a few of these announcements
get dropped, as would happen with partial deployment of
ROV or ROV++ v1. For example, in Fig. 3(a), AS 77 drops
the subpreﬁx-hijack announcement; however, its customers,
e.g., AS 11, still receive the subpreﬁx hijack announcement,
since they are also connected via AS 55. And while AS 77
blackholes trafﬁc sent to the hijacked subpreﬁx 1.2.3/24, this
will only apply to packets sent from AS 77 itself; packets from
ASes 11, 32 and 33 will not reach AS 77 at all because AS
11 will forward them to AS 55, since routers always relays
packets to the most speciﬁc (longest) preﬁx. As a result, their
trafﬁc will be hijacked.
ROV++ v2 introduces an additional mechanism, whose
goal is to prevent hijack of trafﬁc from customer ASes by “at-
tracting” it and then blackholing it. This is done by having the
AS send BGP blackhole announcements, i.e., announcing the
blackholed preﬁx; these would “compete” with any subpreﬁx
hijack announcements received from non-adopting ASes.
For example, with ROV++ v2, AS 77 would send a subpre-
ﬁx announcement for the hijacked subpreﬁx, thereby attracting
such trafﬁc away from the attacker and then blackholing it.
Blackhole announcements are illustrated In Fig. 3(b), where
AS 77 adopts ROV++v2, and sends blackhole announcement
for subpreﬁx 1.2.3/24 to AS 11. As a result, trafﬁc to IP
addresses in the subpreﬁx 1.2.3/24 from ASes 11, 32 and 33,
and of course from AS 77 itself, would be blackholed rather
than hijacked (as it was in Fig. 3(a)).
Blackhole announcements against preﬁx hijack attacks?
Should a ROV++ v2 AS send blackhole announcements upon
receiving preﬁx-hijack announcements for a given preﬁx?
For instance, in Fig. 3(b), suppose AS 77 received a hijack
announcement for preﬁx 1.2/16, should it send blackhole
announcements for 1.2/16? Such announcements would com-
pete with preﬁx-hijack announcements, which may result in
blackholing trafﬁc that would otherwise be hijacked. How-
ever, such announcements may also compete with legitimate
announcements for the preﬁx, which may result in blackholing
trafﬁc that would otherwise be routed successfully to the
destination. It seems preferable, therefore, not to send the
blackhole announcement for preﬁx hijacking and only send
them for subpreﬁx hijacking. In fact, even for subpreﬁx hijack-
ing, blackhole announcements can, rarely, cause blackholing
of trafﬁc that would otherwise be routed successfully to the
legitimate destination, as we show in §V.
Note, however, that blackhole announcements should be
used for non-routed preﬁx hijacks,
i.e., announcements of
preﬁxes which are known to never be legitimately announced.
The RPKI speciﬁcations allow ROAs to identify non-routed
preﬁxes by using the special AS number of zero [27]. In this
case, there is no risk of blackholing trafﬁc that will otherwise
4
66688441.2.3/241.2/16991.2.3/24, 44-6661.2/16, 44-991.2/16,77-44-99BGPROVHijacked data flowROV++Announcements11ProviderCustomerAttackerBlackhole12861.2/16, 88-86-991.2/16, 78-44-991.2.3/24, 44-6661.2/16, 44-99Dropped data flowCorrect data flow7877666441.2.3/2488991.2.3/24, 44-6661.2/16, 44-991112861.2/16, 88-86-991.2/16, 78-88-86-991.2.3/24, 44-6661.2/16, 44-991.2/16,77-44-991.2/1677v178v1Figure 3. ROV++ v2: Blackhole announcements protect downstream ASes. (a) AS 77 runs ROV++ v1 and blackholes the trafﬁc to 1.2.3/24. However, the data
from ASes 11, 32 and 33 to 1.2.3/24 is routed via AS 55, and hijacked. (b) AS 77 runs ROV++ v2; it sends a blackhole announcement to AS 11, which protects
downstream ASes: trafﬁc from ASes 11 and 32 to 1.2.3/24 is attracted to AS 77 and dropped there; AS 33 directly blackholes the trafﬁc going to 1.2.3/24.
(a)
(b)
reach the correct destination, and therefore blackholing should
be applied. Hijacking non-routed preﬁxes is a common attack,
allowing the use of such IP address blocks for unauthorized
purposes such as sending spam, phishing, and Denial-of-
Service trafﬁc; see [60]. As we shall see in §V, ROV++ v2
is signiﬁcantly more effective than ROV in mitigating non-
routed preﬁx hijacks.
Contents of blackhole announcements. The goal of
blackhole announcements is to “compete” with the subpreﬁx
hijack announcements by attracting and blackholing trafﬁc that
would otherwise be hijacked. To conform to BGP and avoid
any unexpected side-effects, this is done by forwarding the
subpreﬁx hijack announcement, just as it would have been
forwarded if the AS has simply used BGP without ROV or
ROV++.
Blackhole announcements: when and to whom to send?
In ROV++ v2, blackhole announcements are only sent to the
customers, as per the valley-free rule [18], and only when
receiving a subpreﬁx hijack announcement from peers or
providers, not from customers. The rationale is that customers
are usually connected only to a few providers, and therefore,
when a provider blocks a hijack announcement from a cus-
tomer, there is a fair chance of blocking the hijacks for other
customers, even without sending a blackhole announcement to
them. Our evaluation (§V) conﬁrms the advantage of the above
restrictive rule.
ROV++ v2a: aggressive non-routed blackhole an-
nouncements. ROV++ v2a is a “more aggressive” version of
ROV++ v2 that, upon receiving non-routed preﬁx hijacks, from
any neighbor, sends a corresponding blackhole announcement
according to export policy. The reasoning for the “aggressive”
v2a is that non-routed preﬁxes should not be announced at all,
and hence there is no danger of competing with the legitimate
announcement. Our evaluation in §V conﬁrms that ROV++ v2a
is signiﬁcantly more effective than ROV++ v2, and surely than
ROV, in defeating non-routed preﬁx hijacks.
C. Preventive Announcements (ROV++ v3)
Consider an ROV++ v2 AS that receives only a legitimate
preﬁx announcement from one provider and a subpreﬁx hijack
announcement from another provider; see, for example, AS
33 in Fig. 4(a). Since AS 33 has a valid path, via AS 87,
it will obviously not send a
for the entire 1.2/16 preﬁx,
subpreﬁx blackhole announcement. The lack of a blackhole
announcement from AS 33, however, may cause AS 33’s
customers to fall victim to the attack. Speciﬁcally, consider AS
22, a customer of AS 33 as well as of AS 54. AS 22 receives
from both ASes 54 and 33 a legitimate preﬁx announcement
for 1.2/16. However, AS 22 also receives from AS 54 the
hijacked subpreﬁx announcement for 1.2.3/24, since all ASes
along this path (44-53-54) use BGP. Following the longest
preﬁx matching, AS 22 will
therefore route trafﬁc to the
subpreﬁx 1.2.3/24 via AS 54, causing this trafﬁc to be hijacked.
In ROV++ v3, we introduce an additional mechanism,
called preventive announcements, whose goal is to “compete”
with the hijack announcement, much like the blackhole an-
nouncements of v2, but do it also when there seem to be a
route to the legitimate origin (i.e., no need to blackhole). In a
preventive announcement, an ROV++ v3 AS, e.g. AS 33, sends
a BGP announcement for the hijacked subpreﬁx; the AS-path
in this announcement, however, will be a path to the legitimate
origin of the preﬁx that contains the hijacked subpreﬁx. Since
both the preventive and hijacked announcements are for the
same subpreﬁx, the preventive announcements may prevent
some trafﬁc interception.
This is illustrated in Fig. 4(b), where AS 33 deploys
ROV++ v3. As before, AS 33 routes correctly the entire 1.2/16
preﬁx, via AS 87; however, now AS 33 also sends a preventive
announcement to AS 22, with the subpreﬁx 1.2.3/24 and the
path 33-87-99 routing back to the authorized origin of the
preﬁx. AS 22 also receives the subpreﬁx hijack announcement
from AS 54, but prefers the route 33-87-99, since it is shorter.
As a result, its trafﬁc reaches the correct origin (AS 99), and
is neither hijacked nor blackholed.
For similar reasons as explained for blackhole announce-
ments, preventive announcements are only generated when
receiving a subpreﬁx hijack announcement from peers or
providers, and are only sent to customers. Additional mech-
anisms are included to constrain the sending of preventive
announcements to avoid routing loops; see more details in §III.
Since a preventive announcement is created by a ROV++ v3
AS, without actually receiving such an announcement from
the origin, it will not work when certain path authentication
mechanisms (e.g., BGPsec [37]) are in place; we discuss the
pros and cons of ROV++ v3 in more detail in §VII-A.
5
66611441.2.3/241.2/16991.2.3/24, 44-6661.2/16, 44-56-991.2/16,77-44-56-99BGPROVHijacked data flowROV++AnnouncementsProviderCustomerAttackerBlackhole54551.2.3/24, 55-54-44-6661.2/16, 55-54-44-56-9956Dropped data flow323377v1666441.2.3/241.2.3/24, 44-6661.2/16, 44-56-991.2/16,77-44-56-991.2.3/24, 77-44-6661.2/16,11-77-44-56-991.2.3/24, 11-77-44-6661.2/16991154551.2.3/24, 55-54-44-6661.2/16, 55-54-44-56-991.2/16,11-77-44-56-991.2.3/24, 11-77-44-6665677v233v232Figure 4. ROV++ v3: Preventive announcements help to route data to the legitimate origin. (a) Although AS 33 runs ROV++ v2, the trafﬁc from AS 22
to 1.2.3/24 is still routed via AS 54, following the longest-preﬁx routing rule, and hence is hijacked. (b) When AS 33 runs ROV++ v3 and sends preventive
announcements to AS 22, the trafﬁc of AS 22 to 1.2.3/24 is routed via AS 33 (shorter path) and reaches the legitimate origin.
(a)
(b)
III. ROV++: GOALS, MODEL AND DESIGN
In this section, we ﬁrst describe the design goals of ROV++
and the attack model, then describe the detailed design of the
ROV++ mechanisms.
A. Design Goals
The ﬁrst goal is simple: the adoption of ROV++ by an AS
should not cause hijack of trafﬁc from that AS, beyond what
would have happened if the AS used BGP or ROV.
Goal 1 (Do no harm 1: no hijack due to ROV++). If trafﬁc
from AS X to preﬁx p is hijacked when AS X deploys ROV++,
then this trafﬁc would also have been hijacked if X used plain
BGP or ROV.
The second goal considers the impact of one AS’s adoption
of ROV++ on hijacks of trafﬁc from other ASes. It would have
been great if we could extend the ﬁrst goal, and require that
adoption of ROV++ by any AS X would not cause hijack of
trafﬁc from any other AS. However, due the complexity of
BGP relationships and Internet topology, this extended goal
seems hard to achieve for any reasonable policy; indeed, it
does not hold for ROV. Therefore, we set a more modest goal,
which only requires improvement in the hijack probability for