Makefile 的代码如下：
## Makefile for project: businesscard
##Generated by AVR Project IDE: http://code.google.com/p/avr-project-
ide/
192
---
## Page 205
第5章置盘使所和USB安全
 General Flags
PROJECT = 360_sec
MCU = atmega8
BURNMCU = atmega8
 -
ndno = IO
TARGET = $ (OUTDIR) /$ (PROJECT) -e1f
CC = /usr/loca1/CrossPack-AVR/bin/avr-gcc
CCXx = /usr/1oca1/CrossPack-AVR/bin/avr-g++
COPY - /usr/loca1/CrossPack-AVR/bin/avr-objcopy
CCDP - /usr/1oca1/CrossPack-AVR/bin/avr-objdump
CCS2 - /usr/1ocal/CrossPack-AVR/bin/avr=size
PROG =  /usr/1ocal/CrossPack-AVR/bin/avrdude
## Flags common to C, ASM, and Linker
(nOH) =NOW=NOHHOO
## Flags common to C only
CFLAGS = $ (COMMON)
sections
CFLAGS += MD -MP -MT S (*F) .0
## Flags common to ASM only
ASMFLAGS = $ (COMMON)
ASMFLAGS += $ (CFLAGS)
ASMFLAGS
S +- -x assembler-vith-cpp -Wa,-gdvarf2
ASMFLAGS +=
##Flags common to CPP/CXX on1y
CXXFLAGS
=$(COMMON)
CXXFLAGS += $ (CFLAGS)
CXXFLAGS += -std=c99
##Flags common to Linker only
LDFLAGS = $ (COMMON)
LDFLAGS += -W1, -Map=$ (OUTDIR) /$ (PROJECT) map
LDFLAGS += -W1, --gc=sections
## Flags for Intel HEX file production
193
---
## Page 206
件安全政防大揭
HEX_EEPROM_FLAGS = -J .eeprom
HEX_EEPROM_FLAGS +- -=set-section-f1ags= eeprom=*a1loc, 1oad*
HEX_EEPROM_FLAGS += --change-section-1ma .eeprom=0 -=no=change=warnings
## Include Directories
INCLUDES - =I" , "
## Libraries
LIBS = -1m -1c
## Link these object files to be made
OBJECTS = main.o usbdrv,o usbdrvasm.o
LINKONLYOBJECTS =
 Comp1le
all: $ (TARGET)
main.o: ./main, C
S(CC)S(INCLUDES) S(CFLAGS) $(CONLYFLAGS) =C $<
usbdrv,o: ./usbdrv/usbdrv, c
usbdrvasm,o: ./usbdrv/usbdrvasm,S
$ (OUTDIR) :
8$ xTPx=
##Link
$ (TARGET) : S (OBJECTS) S (OUTDIR)
$(TARGET)
-rm -rf $ (OBJECTs) main,d usbdrv,d usbdrvasm,d
-rn
-rf
$ (OUTDIR) /S (PROJECT) -hex
$ (OUTDIR)/S (PROJECT) .eep
$ (OUTDIR)/$ (PROJECT) . 1ss
194
---
## Page 207
重电能所和LSB安
S (COPY) -O ihex $ (HEX_FLASH_FLAGS) $ (TARGET)$ (OUTDIR) /$ (PROJECT) -hex
exit 0
B$ (CCS2)-C --mcu=S(MCU) $(TARGET)
## Program
burn:
S(PROG)
-P
$ (BURNMCU)
-C
$ (BURNPROGRAMMER)
-U
flash:v:$ (OUTDIR) /S (PROJECT) . hex:a
:sesnguang
$ (PROG)
PS（BURNMCU)
: =C $ (BURNPROGRAMMER)
-U
1fuse:w: 0xE1 :m
-U
#Clean target
.PHONY: clean
clean:
-rm -rf $ (OBJECTS) main, d usbdrv,d usbdrvasm.d $ (OUTDIR) /$ (PROJECT) .e1f
$ (OUTDIR) /S (PROJECT) . eep $ (OUTDIR)
这就是SyScan360 2013 Badge 的USB HID部分的代码，实现串口烧写EEPROM和读取
EEPROM内容模拟键盘输出的功能。
将胸卡下面的Micro USB 连接到计算机上，然后敲击六次Caps Lock键，就可以激活模
拟键盘的功能，会调用“Win+R”打开“运行”窗口，然后输入“notepad”，如图5-64所示。
按回车键后自动打开记事本，然后输入信息（记得别开中文输入法），如图5-65所示。
退行
Windows将模据地所输入的名称，为思打开报应的程序
文件爽，文恒成Intermet 资源
pedaouaO
快定
深范()
图5-64自动打开运行窗口输入notepad打开记事本
195
---
## Page 208
硬件安全欧防大揭税
无标题·记事本
文件(F）编辑（E）格式（O）查看（V)帮助（H）
Hello world!·…*
-----by Uni cornTeam
http://unicorn. 360. cn/
http: //weibo. com/unicornteam
ht tp://tianxun. 360. cn/
ht tp : //ti anxun. 360. cn/bbs/forum php
图5-65自动在记事本输入字符
4.扩展
本节以 SyScan360 2013 Badge 为例介绍了AVR单片机模拟USB HID的功能实现，那么，
这种模拟USB-HID协议的实现方式是不是还有别的玩法？没错，除了模拟键盘，还可以模拟
鼠标、游戏杆或者结合之前讲的制作一个USB键盘记录器。除此之外，还能打造属于自已的
USB名片，也能结合安全工具DIY大黄鸭（USBRUBBERDUCKY）进行HID 攻击。
而且，这里的代码作者是在Mac 下开发的，单片机的开发环境对系统是有要求的，很多
开发工具在Mac或者Linux 下都没有，例如Keil、IAR 都只有 Windows 版本，但总会有人开
发出能用的开发工具，例如sdcc。
只要有理想，有目标，有动力，不管是研究硬件还是软件，都能一鸣惊人。如果只想白
已玩，那就独善其身：如果有强烈的开源精神，那就是兼济天下，惠及众生。
5.2.2BadUSB
1.简介
在BadUSB 出现之前，使用 USB 接口进行攻击的主流攻击方式都是USB HID 攻击，也
就是前面讲的模拟USB键盘进行攻击，主要设备是大黄鸭（如图5-66所示）和前面提过的
Teensy-
196
---
## Page 209
第5章能盘侦听和USB安
图5-66大黄鸭
这两者的做法都是通过交互很好的开发工具编写脚本模拟键盘按键进行操作，区别在于
主控MCU性能的强卖，以及接口API封装的优良，这种方法需要特殊硬件的支持。
在BlackHat2014上，来自柏林 SRLabs 的安全研究人员JakobLell和独立安全研究人员
KarstenNohl展示了他们称为BadUSB（按照BadBIOS命名）的攻击方法，这种方法使用的
是普通的U盘，使得HID攻击的成本更低，伪装能力更强。
2.原理
其实U盘的结构很简单，一个USB控制器外加一块Flash，如图5-67所示。USB控制器
通常都是一个带USB接口的单片机，所以从原理上讲，用Arduino+nand Flash也能DIY
一个
U盘，在网上能看到各种USB主控板，可以自己DIYU盘，如图5-68和图5-69所示。
US8 controller
Flash
051 CPU
The only part
图5-67BadUSB原理与实物图
197
---
## Page 210
SK6221主控32GBSLC3.0高速U盘
高速US83.0主控板
银雄I5903双贴双通道
金USB头
带硬件写保护+防烧动能
三三x
WINTOGO专用
图5-68银灿IS903方案USB3.0主控板图5-69SK6221方案U盘
那么问题来了，这些作为U盘主控的单片机刷了其他固件会怎么样？这就是BadUSB的
原理。在官网有一个设备支持列表，因为研究人员只是针对使用C8051F单片机作为主控的U
盘型号开发了固件，理论上，只要有单片机开发的经验，而且对USB协议理解得深刻，肯花
时间琢磨，就可以开发出针对任何U盘的BadUSB。BadUSB的官方网址：
https:/github.com/brandonlw/Psychson.
在USB 协议中，除了可以识别成USB 键盘、鼠标、游戏杆之外，还能识别成U盘、
USB网卡、USB光驱、USB产卡等，如图5-70所示。
USB dervi
Examples
  Mass Storage
US8 thumb drive
14  Videe
0  Contrel
0  Control
6  Audio transfers
AA62709
20/00
0258A350
图5-70USB攻击示意
198
---
## Page 211
第5章他听和USB安全
在HID 过程中，借助键盘、鼠标外加存储或者网卡的组合，比单一的USB键盘攻击的威
力要大很多。例如，调用命令，然后从存储中复制出程序，之后再执行，或者直接将数据在
后台复制到存储中。再比如，模拟成USB网卡，修改Windows 的DNS 设置，然后通过DNS
劫持进行二次攻击，如图5-71所示。
仍R USB 网
所有的 DNS 查询
运配器，通过
都会由攻击者的
DHCP 服务分配
DNS服务器响应
攻击步理
1. USB设备仍装成
USB M
1.道过还常的 W-F 述接使用
2. 通 DHCP 目
2.然面DNS查询是通过USB
原来的路由河关
新的 DNS 服务器地
址。但不设置款认
器，从而实现DNS重定向攻击
模拟的网卡提供的 DNS 服务
M-R
图5-71USBHID模拟USB网卡DNS工具
再比如模拟成USB光驱或者USB硬盘，配合健盘模拟，完全可以做到系统启动时从U
盘启动一个Linux 或者 PE
一类的系统，然后进行各种文件操作、数据重写、烧写BIOS，其
至直接伪装显示器显示的内容，这种攻击危险性非常高，如图5-72所示。
更多攻击思路
效果
攻击展示
RKBUS
·外置存储可以隐藏成者则除文件
中的数据
成老区
数据
长重写
第一病毒扫插能够看到原始文
作，之后扫指政会看到病毒
装网
模拟健盘按键在系统启动时会进入
BIOS
BOS。然后将BIOS升级为存放在
ISEL
USB设备中的新 BIOS文件
模报USB显示器显示一个安全校验
信息，比如验证码或者随机PIN码输
入健盘
图5-72USB HID攻击的思路
199