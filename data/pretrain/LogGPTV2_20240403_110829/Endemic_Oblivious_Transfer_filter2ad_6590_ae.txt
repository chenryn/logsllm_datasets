qi + C(w) (cid:12) b =(C(wi) (cid:12) b + ti) + C(w) (cid:12) b
=(C(wi) + C(w)) (cid:12) b + ti.
Let δ = C(wi) + C(w). In the event that wi = w, then δ = 0 and S computes the same vi,wi value
as R. Otherwise the hamming distance HD(δ) ≥ dC ≥ κ by construction of C. For R to generate
any other OT message vi,w s.t. w (cid:54)= wi, R must guess the value δ (cid:12) b ∈ FnC
2 given δ, which can be
done with probability 2−HD(δ) = O(2−κ).
functionality F S
Traditionally, two additional steps are speciﬁed to realize the ideal sender chosen message
OT [IKNP03, KOS15, OOS17, ALSZ17]:
1. A proof that all rows in C can be decoded. Ishai et al. [IKNP03] proposed a cut-and-choose
approach while the more recent schemes [KOS15, OOS17] improve on the eﬃciency of these
proofs by making R send random linear combinations of ti, wi and having S check they are
consistent with same combination of U .
[OOS17] follows a slightly diﬀerent strategy. We
defer the details behind these proofs to [KOS15, OOS17, OOS17].
2. The parties apply the sender chosen OT transformation ΠS
1,N from Figure 4 which reduces
sender chosen to endemic OT. That is, S must send their chosen messages (xi,1, ..., xi,N )i∈[m]
encrypted under the corresponding key (vi,1, ..., vi,N )i∈[m], e.g. S sends ei,j := xi,j + vi,j to R
who outputs xi,wi = ei,wi + vi,wi. Note, this step is not included in Figure 9. Next we will
show without this step the protocol only achieves endemic security.
5.1 OT Extension Attacks
The authors of [KOS15, ALSZ17] and [OOS17] provide protocol descriptions that are intended to
(respectively) satisfy the sender and uniform chosen message security notion, Deﬁnition 2.6, but
we show this to not be the case. These protocols can be summarized as the previous protocol
description where the ΠS
1,N transformation is not applied, i.e. output vi,xi. For the rest of this
work we will refer to the protocol of [OOS17] as deﬁned in Deﬁnition 5.1 but note that the attacks
by a malicious R apply to [KOS15, Figure 6, 7] and [ALSZ17, Protocol 10].
In particular, we
detail three attacks where the ﬁrst (Lemma F.1) allows a malicious R to bias the OT messages
that they output while the second and third attacks (Lemma F.2, F.3) succeed even when base
OTs with stronger security are used. In all cases, the ability to bias the messages violates the ideal
functionality which samples them uniformly at random.
Deﬁnition 5.1. Let ΠOOS be the protocol of Figure 9 where FOT := F S
Remark 5.2. [OOS17] is inconsistent which type of base OTs should be used, switching between
standard Sender Chosen Message OT (F S
2-OT) in the protocol description, theorem state-
ments and Uniform Message OT (F U
2-ROT) in their proof. Lemma F.1 only applies to
F S
OT = F κ,nC
2-ROT base OTs. All three attacks
apply to [KOS15] which uses F S
2-OT while Lemma F.2 and F.3 apply even with F U
OT = F κ,nC
OT = F κ,nC
OT.
OT = F κ,nC
2-OT.
OT = F κ,nC
Lemma F.1 details an attack which allows R to bias the output vi,xi to be H(i, x) for any
x ∈ FnC
2 . The core idea behind this attack is that R has complete control over the matrix T0 since
they input it to the base OTs. As such, R can choose their output messages to be vi,xi = H(i, ti)
17
Parameters: κ is the computational security parameter. m denotes the number of OTs. N denotes
the number of messages each OT has. C is an [nC, kC, dC] binary linear code such that kC = log2 N and
dC ≥ κ. A bijective map map : [N ] → FkC .
Requirements: H : [m] × FnC
2 is a random oracle. Let m(cid:48) = m + s where s is deﬁned in Step 4.
FOT is an 1-out-of-2 OT oracle with output messages in Fm(cid:48)
2 .
Extend: On input (Extend) from S and (Extend, (x1, ..., xm) ∈ [N ]m) from R.
2 → Fκ
1. Both parties invoke nC instances of FOT where S takes the role of the receiver.
If FOT has
inputs, the corresponding party locally samples them uniformly from the input domains. S
1)}j∈[nC]. Let
receives (b
Ti ∈ Fm(cid:48)×nC
i − 1) ∈ {0, 1}. R receives {(tj
(cid:48)
denote the matrix formed by concatenating the column vectors t1
}j∈[nC]) where bi = (b
(cid:48) ∈ {1, 2}nC ,{tj
0, tj
i||...||tnC
bj
.
2
i
2. R deﬁnes wi := map(xi) for i ∈ [m] and samples random wm+(cid:96) ← FkC
2 , for (cid:96) ∈ [s]. Then
such that each row ci is the codeword C(wi). Then, R sends to
constructs a matrix C ∈ Fm(cid:48)×nC
S the values
2
uj := tj
0 + tj
1 + cj,
∀j ∈ [nC],
where cj is the j-th column of C.
3. S receives uj ∈ Fm(cid:48)
2 and computes
qj := bj · uj + tj
bj
= bj · cj + tj
0,
∀j ∈ [nC]
that form the columns of an (m(cid:48) × nC) matrix Q. Denoting the rows of T0, T1, Q by ti, t1,i, qi, R
now holds ci, ti and S holds b, qi so that
qi = ci (cid:12) b + ti,
∀i ∈ [m(cid:48)].
4. Consistency check: R proves in zero knowledge that
∀i ∈ [m],∃w ∈ FkC
2
| 0 = b (cid:12) (ui + ti + t1,i + C(w))
Note: b ∈ FnC
For example, the proof of [KOS15] for N = 2 or [OOS17] otherwise. s ≥ 0 is speciﬁed by the
proof protocol.
is distributed uniformly in the view of R.
2
5. R outputs vi,xj := H(i, ti) for all i ∈ [m].
Output: On input (Output, (i, x)) from S.
C(map(x)) (cid:12) b).
If i ∈ [m], j ∈ [N ], then S outputs vi,x := H(i, qi +
Figure 9: 1-out-of-N OT Extension.
for any ti. For example, let t1 = ti for all i ∈ [m]. Then the distinguisher can compare the output
of S and outputs 1 if v1,x1 = vi,xi.
Lemma 5.3. There exists a ppt adversary A and distinguisher D s.t. ∀A(cid:48)
| Pr[D((S,A)ΠOOS) = 1] − Pr[D((F U
OT,A(cid:48))) = 1]| = 1 − 2−κ
where ΠOOS is the protocol in Deﬁnition 5.1. All algorithms also receive input 1κ.
Proof. For simplicity let N = 2 and m = 1. We deﬁne A as follows. A plays the role of R and
replaces the input to base OTs, the sender input, with strings tj
and then completes
the protocol as normal.
1 ∈ {0}m(cid:48)
0, tj
18
We deﬁne D as follows. D executes S and A with input x1 = 1. S outputs (v1,1, v1,2) and
D outputs 1 if v1,1 = H(1,{0}nC ) and 0 otherwise.
In the real interaction it clearly holds that
Pr[D((S,A)ΠOOS) = 1] = 1. In the ideal interaction the honest S will output a uniformly distributed
v1,1 ∈ {0, 1}κ which was sampled by F U
OT and therefore Pr[D((F U
OT,A(cid:48))) = 1] = 2−κ.
We now focus our attention to a second class of adversary that can distinguish even when the
OT. [OOS17] is inconsistent which type of
OT in the proof. Regardless
base OTs output uniformly distributed messages, i.e. F U
base OTs should be used, switching between F S
the next two attacks apply.
Deﬁnition 5.4. Let ΠOOS+ be the protocol of Figure 9 where FOT := F U
OT.
OT in the protocol and F U
The core idea behind the Lemma F.2 attack against ΠOOS+ is that R can choose their selection
after seeing their output message, i.e. H(i, ti). This allows R to correlate their selection xi with
their message H(i, ti) and there by distinguish. For example, let v = H(i, ti) mod N and then R
makes their selection be xi = v + 1. This can not happen when interacting with F U
OT.
Lemma 5.5. There exists a ppt adversary A and distinguisher D s.t. ∀A(cid:48)
| Pr[D((S,A)ΠOOS+) = 1] − Pr[D((F U
OT,A(cid:48))) = 1]| = 1 − 2−κ
1 ∈ {0}m(cid:48)
0, tj
where ΠOOS+ is the protocol in Deﬁnition 5.4 and all algorithms additionally receive input 1κ.
Proof. For simplicity let N = 2 and m = κ. We deﬁne A as follows. A plays the role of R and
from FOT. A redeﬁnes the selection values x1, ..., xm ∈ [2] of R
receives the strings tj
such that xi := lsb(H(i, ti)) + 1. That is, xi equals the least signiﬁcant bit of vi,xi = H(i, ti) plus
1. A executes the rest of the protocol as R would and outputs (xi)i∈[m].
We deﬁne D as follows. D executes S and A. S outputs (vi,1, vi,2)i∈[m] and D outputs 1
if ∀i ∈ [m], lsb(vi,xi) + 1 = xi and 0 otherwise.
In the real interaction it clearly holds that
Pr[D((S,A)ΠOOS+) = 1] = 1. In the ideal interaction the honest S will output a uniformly distributed
vi,1, vi,2 ∈ {0, 1}κ which are independent of xi and therefore Pr[D((F U
(cid:98)b := (1, ..., 1) ∈ {1, 2}nC . As such S learns the matrix T0 in full. Therefore S can always output
Lemma F.3 details another attack where a malicious S sets the base OT selection values to be
OT,A(cid:48))) = 1] = 2−κ.
the same message H(i, ti) = vi,wi as R. For sender chosen message or endemic security a viable
simulation strategy is to extract H(i, ti) and deﬁne vi,j := H(i, ti) for all j. However, there is no
valid strategy for the receiver chosen or uniform message security where the oracle samples some
of the messages uniformly. This attack breaks the security of the set inclusion protocol described
by [OOS17, Figure 5].
Lemma 5.6. There exists a ppt adversary A and distinguisher D s.t. ∀A(cid:48)
| Pr[D((A, R)ΠOOS+) = 1] − Pr[D((A(cid:48),F E
OT)) = 1]| = 1 − negl
where ΠOOS+ is the protocol in Deﬁnition 5.4 and all algorithms additionally receive input 1κ.
Proof. For simplicity let N = 2 and m = κ. We deﬁne A as follows. A plays the role of S and
OT, the receiver input, with the string b := {0}nC . A outputs the matrix Q.
replaces the input to F S
We deﬁne D as follows. D samples the selection bits x1, ..., xm ← [2] and sends them to R. D
executes A who outputs Q and R outputs v1,x1, ..., vm,xm. If vi,xi = H(i, qi) for all i ∈ [m], output
1, otherwise 0. In the real interaction it clearly holds that Pr[D((A, R)ΠOOS+) = 1] = 1 since qi = ti.
OT (apart from
their input (v0,i, v1,i)i∈[m]). Therefore, it must hold that Pr[D((A(cid:48),F R
By deﬁnition the input of A(cid:48) is independent of xi and receives no output from F E
OT)) = 1] = 2κ.
19
5.2 OT Extension with a Random Oracle
We now give a new security proof (Lemma 5.8) of the [KOS15, OOS17] protocols with respect to
the F E
OT ideal functionality. We then give new enhancements (Deﬁnition 5.14, 5.17, F.6) to this
protocol that provider stronger notions of security at a modest overhead, e.g. F U
OT. Note that in
this section we used the generalize deﬁnition of the OT functionality, Deﬁnition A.13,where a circuit
specifying the inputs are send instead of strings. We also give a data ﬂow diagram in Figure 16
showing the various instantiations and their round complexity.
Deﬁnition 5.7. Let Πext-E be the protocol of Figure 9 where FOT := F E
OT.
Lemma 5.8. The Πext-E protocol (Deﬁnition 5.7) is a 1-out-of-N OT (F E
and receiver selection Security.
OT) satisfying endemic
Proof. Correctness of the protocol was demonstrated by [OOS17].
Claim 5.9 (Malicious Sender Security). Πext-E satisﬁes security against a malicious sender (Deﬁ-
nition 2.6) with respect to the F E
Proof. Consider the following hybrids which will deﬁne the simulator A(cid:48).
Hybrid 1. A(cid:48) internally runs A while plays the role of R and base OT oracle FOT = F E
OT functionality.
j ∈ [nC], A(cid:48) receives (b(cid:48)
samples tj
whatever A outputs.
j, tj
bj
as FOT = F E
1−bj
) ∈ [2] × Fm(cid:48)
OT would. A(cid:48) sends (b(cid:48)
from A in Step 1 where bj := b(cid:48)
OT. For
j − 1. A(cid:48) uniformly
}) to A on behalf of FOT. A(cid:48) outputs
2
j,{tj
bj
Hybrid 2. For Step 2 A(cid:48) does not sample tj
. A(cid:48)
sends U to A and then computes Q as S would. The view of A is identically distributed. This
is uniformly distributed in the view of A and masks the j-th
follows from the fact that tj
column of U in the previous hybrid.
and instead uniformly samples U ← Fm(cid:48)×nC
1−bj
1−bj
2
Hybrid 3. For each row qi, A(cid:48) deﬁnes the circuit Mi : [N ] → {0, 1}κ such that on input j ∈ [N ] it
outputs H(i, qi + b(cid:12)C(map(j))). A(cid:48) sends Mi to the ideal functionality F E
OT as the input to the
i-th OT instance. This change allows the ideal functionality to output the same distribution as
the real protocol. The view of A is unmodiﬁed. Note, A can inﬂuence Mi(j) = H(i, qi + b (cid:12)
C(map(j))) = H(i, (ci + C(map(j)) (cid:12) b + ti) by choosing b and the bits {ti[j] | bj = 0}.
Hybrid 4. For Step 4 A(cid:48) simulates the consistency proof.
Hybrid 5. A(cid:48) does not take the input of R since it was not used. R only interacts with F E
OT. This