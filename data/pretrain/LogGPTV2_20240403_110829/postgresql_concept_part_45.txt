D.77 ROLLBACK
Name
ROLLBACK—Abortsthecurrenttransaction
ROLLBACK[WORK|TRANSACTION]
Inputs
None.
Outputs
ABORT Messagereturnedifsuccessful.
NOTICE:ROLLBACK:notransactioninprogress If there is not any transaction currently
inprogress.
D.78. SELECT 427
Description
ROLLBACKrollsbackthecurrenttransactionandcausesalltheupdatesmadebythetransaction
tobediscarded.
Notes
UseCOMMITtosuccessfullyterminateatransaction. ABORT isasynonymforROLLBACK.
Usage
Toabortallchanges:
ROLLBACK WORK;
Compatibility
SQL92
SQL92 only specifiesthe two forms ROLLBACK and ROLLBACK WORK. Otherwisefull com-
patibility.
D.78 SELECT
Name
SELECT—Retrieverowsfromatableorview.
SELECT[ALL|DISTINCT[ON(expression[,...] ) ] ]
expression[ASname][,...]
[INTO[TEMPORARY|TEMP][TABLE]new_table]
[FROMtable[alias][,...] ]
[WHEREcondition]
[GROUPBYcolumn[,...] ]
[HAVINGcondition[,...] ]
[{UNION[ALL]|INTERSECT|EXCEPT}select]
[ORDERBYcolumn[ASC|DESC|USINGoperator][,...] ]
[FORUPDATE[OFclass_name[,...] ] ]
[LIMIT{count|ALL}[{OFFSET|,}start]]
428 APPENDIXD. REFERENCEMANUAL
Inputs
expression Thenameofatable’scolumnoranexpression.
name Specifiesanother name for a column or anexpression usingthe AS clause. Thisname is
primarily used to label the column for display. It can also be used to refer to the column’s
valueinORDERBYandGROUPBYclauses. ButthenamecannotbeusedintheWHERE
orHAVINGclauses;writeouttheexpressioninstead.
TEMPORARY,TEMP IfTEMPORARYorTEMPisspecified,thetableiscreateduniquetothis
session,andisautomaticallydroppedonsessionexit.
new_table IftheINTOTABLEclauseisspecified,theresultofthequerywillbestoredinanew
tablewiththeindicatedname. Thetargettable(new_table)willbecreatedautomaticallyand
mustnotexistbeforethiscommand. RefertoSELECTINTOformoreinformation. Note:
TheCREATETABLEASstatementwillalsocreateanewtablefromaselectquery.
table ThenameofanexistingtablereferencedbytheFROMclause.
alias An alternatename for the precedingtable. It isusedfor brevityor to eliminateambiguity
forjoinswithinasingletable.
condition Abooleanexpressiongivingaresultoftrueorfalse. SeetheWHEREclause.
column Thenameofatable’scolumn.
select AselectstatementwithallfeaturesexcepttheORDERBYandLIMITclauses.
Outputs
Rows Thecompletesetofrowsresultingfromthequeryspecification.
count Thecountofrowsreturnedbythequery.
Description
SELECTwillreturnrowsfromoneormoretables. Candidatesforselectionarerowswhichsatisfy
theWHEREcondition;ifWHEREisomitted,allrowsarecandidates. (SeeWHEREClause.)
DISTINCT will eliminate duplicate rows from the result. ALL (the default) will return all
candidaterows,includingduplicates.
DISTINCT ONeliminatesrowsthatmatchonallthespecifiedexpressions,keepingonlythe
firstrowofeachsetofduplicates. TheDISTINCTONexpressionsareinterpretedusingthesame
rules as for ORDER BY items; see below. Note that "the first row" of each set is unpredictable
unlessORDERBYisusedtoensurethatthedesiredrowappearsfirst. Forexample,
D.78. SELECT 429
SELECT DISTINCT ON (location) location, time, report
FROM weatherReports
ORDER BY location, time DESC;
retrievesthemostrecentweatherreportforeachlocation. ButifwehadnotusedORDERBYto
forcedescendingorderoftimevaluesforeachlocation,we’dhavegottenareportofunpredictable
ageforeachlocation.
TheGROUPBYclauseallowsausertodivideatableintogroupsofrowsthatmatchononeor
morevalues. (SeeGROUPBYClause.)
The HAVING clause allows selection of only those groups of rows meeting the specified
condition. (SeeHAVINGClause.)
TheORDERBYclausecausesthereturnedrowstobesortedinaspecifiedorder. IfORDER
BY is not given, the rows are returnedin whateverorder the systemfinds cheapestto produce.
(SeeORDERBYClause.)
The UNION operator allows the result to be the collection of rows returned by the queries
involved. (SeeUNIONClause.)
TheINTERSECToperatorgivesyoutherowsthatarecommontobothqueries. (SeeINTER-
SECTClause.)
TheEXCEPToperatorgivesyoutherowsreturnedbythefirstquerybutnotthesecondquery.
(SeeEXCEPTClause.)
The FOR UPDATE clause allows the SELECT statement to perform exclusive locking of
selectedrows.
The LIMIT clause allows a subset of the rows produced by the query to be returned to the
user. (SeeLIMITClause.)
You must have SELECT privilegeto a table to read its values (See the GRANT /REVOKE
statements).
WHEREClause
TheoptionalWHEREconditionhasthegeneralform:
WHERE boolean_expr
boolean_exprcanconsistofanyexpressionwhichevaluatestoabooleanvalue. Inmanycases,this
expressionwillbe:
expr cond_op expr
or
log_op expr
wherecond_op can be one of: =, , >= or <>, a conditional operator likeALL, ANY,
IN, LIKE, or a locally definedoperator, and log_op can be one of: AND, OR, NOT. SELECT will
ignoreallrowsforwhichtheWHEREconditiondoesnotreturnTRUE.
430 APPENDIXD. REFERENCEMANUAL
GROUPBYClause
GROUPBYspecifiesagroupedtablederivedbytheapplicationofthisclause:
GROUP BY column [, ...]
GROUP BY will condense into a single row allselectedrows that share the samevaluesfor the
groupedcolumns. Aggregatefunctions,ifany,arecomputedacrossallrowsmakingupeachgroup,
producing a separate value for each group (whereaswithout GROUP BY, an aggregateproduces
a single value computed across all the selected rows). When GROUP BY is present, it is not
validfortheSELECToutputexpression(s)torefertoungroupedcolumnsexceptwithinaggregate
functions,sincetherewouldbemorethanonepossiblevaluetoreturnforanungroupedcolumn.
AniteminGROUPBYcanalsobethenameorordinalnumberofanoutputcolumn(SELECT
expression), or it can be an arbitrary expression formed from input-column values. In case of
ambiguity,aGROUPBYnamewillbeinterpretedasaninput-columnnameratherthananoutput
columnname.
HAVINGClause
TheoptionalHAVINGconditionhasthegeneralform:
HAVING cond_expr
wherecond_expristhesameasspecifiedfortheWHEREclause.
HAVING specifies a grouped table derived by the elimination of group rows that do not sat-
isfy the cond_expr. HAVING is different from WHERE: WHERE filters individual rows before
applicationofGROUPBY,whileHAVINGfiltersgrouprowscreatedbyGROUPBY.
Eachcolumnreferencedincond_exprshallunambiguouslyreferenceagroupingcolumn,unless
thereferenceappearswithinanaggregatefunction.
ORDERBYClause
ORDERBYcolumn[ASC|DESC][,...]
columncanbeeitheraresultcolumnnameoranordinalnumber.
The ordinal numbers refers to the ordinal (left-to-right) position of the result column. This
featuremakesitpossibletodefineanorderingonthebasisofacolumnthatdoesnothaveaproper
name. Thisisneverabsolutelynecessarybecauseitisalwayspossibletoassignanametoaresult
columnusingtheASclause,e.g.:
SELECT title, date_prod + 1 AS newlen
FROM films
ORDER BY newlen;
D.78. SELECT 431
It isalso possible to ORDER BY arbitraryexpressions(an extensionto SQL92), includingfields
thatdonotappearintheSELECTresultlist. Thusthefollowingstatementislegal:
SELECT name
FROM distributors
ORDER BY code;
NotethatifanORDERBYitemisasimplenamethatmatchesbotharesultcolumnnameandan
inputcolumnname,ORDERBYwillinterpretitastheresultcolumn name. Thisistheopposite
ofthechoicethatGROUPBYwillmakeinthesamesituation. Thisinconsistencyismandatedby
theSQL92standard.
OptionallyonemayaddthekeywordDESC(descending)orASC(ascending)aftereachcolumn
name in the ORDER BY clause. If not specified, ASC is assumed by default. Alternatively, a
specificorderingoperatornamemaybespecified. ASCisequivalenttoUSING’’.
UNIONClause
table_queryUNION[ALL]table_query
[ORDERBYcolumn[ASC|DESC][,...] ] wheretable_queryspecifiesanyselectexpression
withoutanORDERBYorLIMITclause.
The UNION operator allows the result to be the collection of rows returned by the queries
involved. ThetwoSELECTsthatrepresentthedirectoperandsoftheUNIONmustproducethe
samenumberofcolumns,andcorrespondingcolumnsmustbeofcompatibledatatypes.
Bydefault,theresultofUNIONdoesnotcontainanyduplicaterowsunlesstheALLclauseis
specified.
Multiple UNION operators in the same SELECT statement are evaluatedleft to right. Note
thattheALLkeywordisnotglobalinnature,beingappliedonlyforthecurrentpairoftableresults.
INTERSECTClause
table_queryINTERSECTtable_query
[ORDERBYcolumn[ASC|DESC][,...] ] wheretable_queryspecifiesanyselectexpression
withoutanORDERBYorLIMITclause.
The INTERSECT operator gives you the rows that are common to both queries. The two
SELECTsthatrepresentthedirectoperandsoftheINTERSECTmustproducethesamenumber
ofcolumns,andcorrespondingcolumnsmustbeofcompatibledatatypes.
Multiple INTERSECT operators in the same SELECT statement are evaluatedleft to right,
unlessparenthesesdictateotherwise.
432 APPENDIXD. REFERENCEMANUAL
EXCEPTClause
table_queryEXCEPTtable_query
[ORDERBYcolumn[ASC|DESC][,...] ] wheretable_queryspecifiesanyselectexpression
withoutanORDERBYorLIMITclause.
TheEXCEPToperatorgivesyoutherowsreturnedbythefirstquerybutnotthesecondquery.
The two SELECTs that represent the direct operands of the EXCEPT must produce the same
numberofcolumns,andcorrespondingcolumnsmustbeofcompatibledatatypes.
MultipleEXCEPToperatorsinthesameSELECTstatementareevaluatedlefttoright,unless
parenthesesdictateotherwise.
LIMIT Clause
LIMIT{count|ALL}[{OFFSET|,}start]OFFSETstart
wherecountspecifiesthemaximumnumberofrowstoreturn,andstartspecifiesthenumber
ofrowstoskipbeforestartingtoreturnrows.
LIMIT allows you to retrievejust a portion of the rows that are generatedby the rest of the
query. Ifalimitcountisgiven,nomorethanthatmanyrowswillbereturned. Ifanoffsetisgiven,
thatmanyrowswillbeskippedbeforestartingtoreturnrows.
WhenusingLIMIT,itisagoodideatouseanORDERBYclausethatconstrainstheresultrows
intoauniqueorder. Otherwiseyouwillgetanunpredictablesubsetofthequery’srows—youmay
beaskingforthetenththroughtwentiethrows,buttenththroughtwentiethinwhatordering? You
don’tknowwhatordering,unlessyouspecifiedORDERBY.
As of Postgres 7.0, the query optimizer takes LIMIT into account when generating a query
plan, so you are very likely to get different plans (yielding different row orders) depending on
what you give for LIMIT and OFFSET. Thus, using different LIMIT/OFFSET values to select
different subsets of a query result will give inconsistent results unless you enforce a predictable
resultorderingwithORDERBY. Thisisnot abug; itisaninherentconsequenceof thefactthat
SQLdoesnotpromisetodelivertheresultsofaqueryinanyparticularorderunlessORDERBY
isusedtoconstraintheorder.
Usage
Tojointhetablefilmswiththetabledistributors:
SELECT f.title, f.did, d.name, f.date_prod, f.kind
FROM distributors d, films f
WHERE f.did = d.did
title | did | name | date_prod | kind
---------------------------+-----+------------------+------------+----------
The Third Man | 101 | British Lion | 1949-12-23 | Drama
The African Queen | 101 | British Lion | 1951-08-11 | Romantic
D.78. SELECT 433
Une Femme est une Femme | 102 | Jean Luc Godard | 1961-03-12 | Romantic
Vertigo | 103 | Paramount | 1958-11-14 | Action
Becket | 103 | Paramount | 1964-02-03 | Drama
48 Hrs | 103 | Paramount | 1982-10-22 | Action
War and Peace | 104 | Mosfilm | 1967-02-12 | Drama
West Side Story | 105 | United Artists | 1961-01-03 | Musical
Bananas | 105 | United Artists | 1971-07-13 | Comedy
Yojimbo | 106 | Toho | 1961-06-16 | Drama
There’s a Girl in my Soup | 107 | Columbia | 1970-06-11 | Comedy
Taxi Driver | 107 | Columbia | 1975-05-15 | Action
Absence of Malice | 107 | Columbia | 1981-11-15 | Action
Storia di una donna | 108 | Westward | 1970-08-15 | Romantic
The King and I | 109 | 20th Century Fox | 1956-08-11 | Musical
Das Boot | 110 | Bavaria Atelier | 1981-11-11 | Drama
Bed Knobs and Broomsticks | 111 | Walt Disney | | Musical
(17 rows)
Tosumthecolumnlenofallfilmsandgrouptheresultsbykind:
SELECT kind, SUM(len) AS total
FROM films
GROUP BY kind;
kind | total
----------+-------
Action | 07:34
Comedy | 02:58
Drama | 14:28
Musical | 06:42
Romantic | 04:38
(5 rows)
Tosumthecolumnlenofallfilms,grouptheresultsbykindandshowthosegrouptotalsthatare
lessthan5hours:
SELECT kind, SUM(len) AS total
FROM films
GROUP BY kind
HAVING SUM(len) < INTERVAL ’5 hour’;
kind | total
----------+-------
Comedy | 02:58
Romantic | 04:38
434 APPENDIXD. REFERENCEMANUAL
(2 rows)
The following two examples are identicalways of sorting the individualresults according to the
contentsofthesecondcolumn(name):
SELECT *
FROM distributors
ORDER BY name;
SELECT *
FROM distributors
ORDER BY 2;
did | name
-----+------------------
109 | 20th Century Fox
110 | Bavaria Atelier
101 | British Lion
107 | Columbia
102 | Jean Luc Godard
113 | Luso films
104 | Mosfilm
103 | Paramount
106 | Toho
105 | United Artists
111 | Walt Disney
112 | Warner Bros.
108 | Westward
(13 rows)
Thisexampleshowshowtoobtaintheunionofthetablesdistributorsandactors,restrictingthe
resultstothosethatbeginwithletterWineachtable. Onlydistinctrowsarewanted,sotheALL
keywordisomitted:
distributors: actors:
did | name id | name
-----+-------------- ----+----------------
108 | Westward 1 | Woody Allen
111 | Walt Disney 2 | Warren Beatty
112 | Warner Bros. 3 | Walter Matthau
... ...
D.78. SELECT 435
SELECT distributors.name
FROM distributors
WHERE distributors.name LIKE ’W%’
UNION
SELECT actors.name
FROM actors
WHERE actors.name LIKE ’W%’
name
----------------
Walt Disney
Walter Matthau
Warner Bros.
Warren Beatty
Westward
Woody Allen
Compatibility
Extensions