title:A Search Engine Backed by Internet-Wide Scanning
author:Zakir Durumeric and
David Adrian and
Ariana Mirian and
Michael Bailey and
J. Alex Halderman
A Search Engine Backed by Internet-Wide Scanning
Zakir Durumeric† David Adrian† Ariana Mirian† Michael Bailey‡ J. Alex Halderman†
† University of Michigan ‡ University of Illinois, Urbana Champaign
{zakir, davadria, amirian, jhalderm}@umich.edu PI:EMAIL
ABSTRACT
Fast Internet-wide scanning has opened new avenues for
security research, ranging from uncovering widespread vul-
nerabilities in random number generators to tracking the
evolving impact of Heartbleed. However, this technique still
requires signiﬁcant eﬀort: even simple questions, such as,
“What models of embedded devices prefer CBC ciphers?”, re-
quire developing an application scanner, manually identifying
and tagging devices, negotiating with network administra-
tors, and responding to abuse complaints. In this paper, we
introduce Censys, a public search engine and data processing
facility backed by data collected from ongoing Internet-wide
scans. Designed to help researchers answer security-related
questions, Censys supports full-text searches on protocol
banners and querying a wide range of derived ﬁelds (e.g.,
443.https.cipher). It can identify speciﬁc vulnerable de-
vices and networks and generate statistical reports on broad
usage patterns and trends. Censys returns these results in
sub-second time, dramatically reducing the eﬀort of under-
standing the hosts that comprise the Internet. We present
the search engine architecture and experimentally evaluate
its performance. We also explore Censys’s applications and
show how questions asked in recent studies become simple
to answer.
1.
INTRODUCTION
Fast Internet-wide scanning has opened new avenues for
empirically-driven security research, as evidenced by the re-
cent surge in publications based on the technique (e.g., [1,7–
11,13,14,18,19,24–29,38]). Yet while tools such as ZMap [20]
have reduced the time required to conduct large-scale port
scans, collecting meaningful data through Internet-wide scan-
ning has remained a specialized and labor-intensive pro-
cess. Answering simple questions, such as “What fraction
of HTTPS servers prefer forward-secret key exchange meth-
ods?”, can take weeks of implementation and debugging,
reducing the time security researchers have to focus on more
important questions. In this speciﬁc case, the researcher
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for third-party components of this work must be
honored. For all other uses, contact the Owner/Author(s). Copyright is held by the
owner/author(s).
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
ACM 978-1-4503-3832-5/15/10.
DOI: http://dx.doi.org/10.1145/2810103.2813703.
would need to develop a high-performance application scan-
ner to make HTTPS connections to hosts listening on port
443, test and ﬁx problems with hosts that do not fully follow
the TLS speciﬁcation, run the actual scan, and then process
many gigabytes of resulting data.
Before beginning this process, security researchers must
negotiate with their institution’s legal and networking teams
for permission to conduct the scan, coordinate with their
upstream network providers, and later respond to result-
ing abuse complaints. Many institutions (and independent
researchers) lack the network facilities or administrative
backing to perform scans. For these reasons, Internet-wide
scanning has remained the province of a small number of
research groups, which severely limits the applications to
which this powerful methodology is applied.
In order to democratize Internet-wide scanning and enable
researchers to eﬃciently ask questions about how security
protocols have been deployed in practice, we have developed
Censys, a cloud-based service that not only maintains an
up-to-date snapshot of the hosts and services running across
the public IPv4 address space, but also exposes this data
through a search engine and API. In contrast to existing
scanning tools, which have primarily focused on performing
host discovery, Censys immediately produces results based
on full protocol handshakes, facilitates a community-driven
approach to characterizing the exploding number of embed-
ded devices and vulnerabilities on the Internet, and requires
little or no user preparation.
To approximate a real-time “bird’s eye view” of the In-
ternet, Censys continually scans the public address space
across a range of important ports and protocols. It validates
this data and performs application-layer handshakes using a
pluggable scanner framework, which dissects handshakes to
produce structured data about each host and protocol. The
resulting data is post-processed with an extensible annota-
tion framework that enables researchers to programmatically
deﬁne additional attributes that identify device models and
tag security-relevant properties of each host. We operate
Censys transparently and expose data back to the research
community. In turn, we encourage external researchers to
contribute both application scanners (to scan additional pro-
tocols) and annotations (to identify devices or properties) to
Censys. In this way, Censys automates and centralizes the
mechanical aspects of scanning.
Censys exposes data to researchers through a public search
engine, REST API, publicly accessible tables on Google Big-
Query, and downloadable datasets. The search interface
enables researchers to perform full-text searches and query
any of the structured ﬁelds and tags produced during scan-
ning and post processing (e.g., 443.https.cipher_suite).
It supports full-text searches, regular expressions, and nu-
meric ranges, and queries can be combined with Boolean
logic. These queries can be run against a current snapshot of
publicly accessible IPv4 hosts, Alexa Top 1 Million websites,
and known X.509 certiﬁcates. After running a query, users
can interactively explore the hosts, sites, and certiﬁcates
that match their query, as well as generate statistical reports
suitable for direct use in research.
443.https.heartbleed.vulnerable: true AND
As a simple example, Censys can identify the set of hosts in
the U.S. that are currently vulnerable to Heartbleed with the
query,
location.country_code: US. From there, Censys can out-
put a complete list of matching IP addresses and graph the
distribution of the most common vulnerable device models.
These queries complete in under one second.
To facilitate more complex analysis, we publish raw appli-
cation handshakes and daily point-in-time snapshots of the
structured data. These can be queried using SQL through
publicly accessible Google BigQuery tables or downloaded
in JSON form. Censys additionally exposes data through
a public REST API that allows researchers to export raw
query results, fetch statistical data, and view the historical
state of speciﬁc hosts and networks.
We present Censys’s data collection architecture in Sec-
tion 3, explain how Censys presents data to researchers in
Section 4, and describe our deployment in Section 5. We then
illustrate Censys’s potential in Section 6 by showing how it
can be applied to easily answer a range of questions from
recent security studies, including measuring the impact of
POODLE and tracking vulnerable industrial control systems.
Internet-wide scanning has already shown great potential
for uncovering security problems and understanding the secu-
rity of complex distributed systems. By moving scanning to
the cloud, Censys dramatically reduces the eﬀort needed to
investigate these questions, enabling researchers to focus on
asking more important questions rather than on the mechan-
ics of answering them. Further, Censys allows the security
community to increase global protocol coverage and provides
a tractable solution for understanding the increasing number
of embedded devices on the Internet. Simultaneously, it
minimizes redundant scanning by research groups and min-
imizes the incoming network traﬃc monitored by network
operators.
Censys is available free to the public at https://censys.io.
2. GOOD INTERNET CITIZENSHIP
As with any research conducted through active network
probing, our work raises important ethical considerations.
We carefully considered the impact of our experimental mea-
surements and disclosure of our results. When reasoning
about our impact, we considered a variety of stakeholders,
from our local institution to Internet service providers and
the owners of the remote systems. Although the community
has yet to derive robust ethical standards for active measure-
ment, our reasoning was guided by broad ethical principles,
such as those embodied in the Menlo Report [5], as well as
by the guidelines for ethical scanning set forth in the original
ZMap work [20].
We coordinated with network administrators and IT lead-
ership at our department, college, and institution, as well
as with our upstream ISP, to ensure that our scans do not
2
adversely impact network operations and that all support
centers can route external inquiries to our team. Second,
we signaled the benign intent of our activities. All of the
scanning hosts have WHOIS records and reverse DNS entries
that describe the intent of the scanning. Further, each scan-
ning host runs a simple website on port 80 that describes the
goals of the research, including what data we collect, and
how to contact us. Third, we invite user exclusion requests
and respond to requests within 24 hours. Fourth, all scans
perform standards-compliant handshakes; we do not send
malformed packets or handshakes.
Disclosure of scan data also raises ethical questions, since
it exposes information about potentially vulnerable systems.
To minimize harms, we deliberately choose to collect and
distribute data that is, at least in principle, already publicly
visible. Our scanners do not perform login attempts, deploy
any exploits, or try to access non-public resource paths.
Furthermore, we treat opt-out requests for scanning as a
request to be removed from the search index, which allows
remote administrators to decide whether or not to be included
in Censys’s public interface. Many network operators, after
understanding the goals of our measurement work, have
responded supportively and invited us to continue scanning
them. Finally, it is our hope that by publishing scan data,
carefully acquired and properly curated, we can reduce the
need for Internet scanning performed by other researchers,
and thus reduce the overall burden on destination networks.
In contrast, it is well established that attackers already
use Internet-wide scanning to ﬁnd vulnerable machines from
botnets and bullet-proof hosting providers [17]. Thus, sys-
tems that are conﬁgured to expose data publicly are already
at risk. Censys helps level the playing ﬁeld by enabling
legitimate researchers to study and enhance the security of
these hosts by providing a source of reliable and ethically
collected data.
3. COLLECTING DATA
The data that powers Censys is collected through hori-
zontal application scans of the public IPv4 address space,
which are scheduled across a pool of scan workers. In the
ﬁrst step, we perform host discovery scans using ZMap [20],
complete application handshakes with responsive hosts us-
ing pluggable application scanners, and derive structured
ﬁelds (e.g., certiﬁcate subject or TLS cipher suite) from the
handshake. We save and publish the raw handshakes, but
continue further processing, validating the collected scan
data, extracting valuable ﬁelds and annotating handshakes
with additional metadata, such as device model and software
version using user-deﬁned annotations.
The structured, annotated data is then streamed to a cen-
tral database, ZDb, which aggregates the horizontal scan re-
sults, pivoting the data and updating comprehensive records
describing individual IPv4 hosts, Alexa Top 1 Million web-
sites, as well as maintaining auxiliary collections of all found
X.509 certiﬁcates and public keys. ZDb streams changes
to downstream services and produces publishable point-in-
time snapshots of hosts and websites, as well as diﬀerential
updates to its collection of certiﬁcates and public keys.
There are several observations that led to this architecture.
First, while horizontal scans measure a single aspect of a
service (e.g., whether an HTTPS server supports SSLv3),
research questions frequently depend on multiple scans. For
example, calculating the percentage of HTTPS servers that
Figure 1: Censys System Architecture — Censys is driven by application scans of the IPv4 address space, which are
scheduled onto a pool of scan workers. These workers complete scans, extract valuable ﬁelds, and annotate records with
additional metadata in order to generate structured data about each host. These records are centrally managed in a custom
database engine, ZDb, which maintains the current state of every host. ZDb feeds updated records to a web front-end where
researchers can query the data.
3.1
Internet-Wide Scanning
In the ﬁrst step of data collection, we use ZMap [20] to
perform single-packet host discovery scans against the IPv4
address space. The hosts found by ZMap seed pluggable
application scanners, which perform a follow-up application-
layer handshake and produce structured JSON data describ-
ing a certain aspect of how a host is conﬁgured. Typically,
application scanners only perform a single handshake and
measure one aspect of how a service is conﬁgured. For exam-
ple, we perform separate horizontal scans and use diﬀerent
pluggable scanners to measure how HTTPS hosts respond
to a typical TLS handshake, whether hosts support SSLv3,
and whether a host is vulnerable to the Heartbleed attack.
Pluggable Scanners. While we can use ZMap to per-
form host discovery for many protocols, every application
scanner requires protocol speciﬁc code and Censys’s long-
term success is dependent on easily adding new protocols.
In order to reduce the eﬀort required to scan new protocols,
Censys handles the details of a scan and expects a minimally
featured application scanner. Speciﬁcally, Censys expects a
self-contained Linux executable that performs application-
layer handshakes with IP addresses input on stdin and
produces structured JSON output that describes how the
protocol is conﬁgured on stdout. Censys controls network
bandwidth by rate limiting the IP addresses provided to
scanners, splits scans across multiple scan workers using
ZMap’s built-in sharding [2], and guarantees that application
scanners do not scan networks that have requested exclusion
using ZMap’s blacklist.
In order to protect our infrastructure, we require that ap-
plication scanners operate without root privileges or kernel
modiﬁcations. Lastly, we encourage researchers to output
metadata about the scan in JSON form and to log errors in
a standard format, which enables Censys to conﬁrm whether
a scan completed successfully. We hope that by requiring
minimal feature-set and allowing ﬂexibility in language, we
not only reduce the eﬀort required for our team to add addi-
tional protocols, but also encourage an external community
that develops new scanners.
Scheduling Scans. While it would be technically sim-
plest to measure every aspect of a protocol at once, this
frequently involves making multiple handshakes, which could
Figure 2: Protocol Scanning and Annotation — Each
scan worker uses ZMap to perform host discovery for a shard
of the IPv4 address, and completes protocol handshakes
using pluggable application scanners. Censys extracts ﬁelds
of interest and annotates records with additional metadata.
The information from a protocol handshake is converted to
an atom—a deterministic data structure describing a speciﬁc
protocol on a host.
support SSLv3 requires a generic TLS scan and an SSLv3
scan. Similarly, a device model may only be identiﬁable
based on its HTTP page, but this information is useful when
studying any protocol. Therefore, despite being collected
by protocol, data should be grouped by host. Second, our
framework needs to be extensible, and facilitate community
involvement. Much of ZMap’s success is due to user con-
tributed probe modules, and we believe the same will be true
for Censys. This is particularly true for annotating hosts and
services given the exploding number of embedded devices on
the Internet. In turn, Censys needs to operate transparently
and provide data back to the community. Third, the num-
ber of scans and annotations will both grow over time; our
architecture should scale linearly to handle this increased
load.
3
Scan AssignmentsDaily SnapshotsRaw Data DownloadFull-TextSearchStructured DataRaw DataZdbSchedulerScan WorkerScan WorkerScan WorkerGoogle Cloud StorageGoogle DatastoreElastic Search (Lucene)Google BigQueryWeb Frontend and APIHistoricalQueriesAnalyticalQueriesSchedulerZMapZMapZGrabShard 1Shard 2Responsive IPsAnnotationExtractionFull Handshake Clean DataDatabaseAtomspotentially inundate a host (e.g., an embedded device that