FalsePositives in IntrusionDetection
10.6
论了如何在实时流场景下进行实时数据的关联。
聚合技巧，以及如何降低维度；在数据关联技术方面，则重点以微博广告的具体业务为例，讨
10.5
准确率上进行权衡)。
和互动的实时数据关联准确率在98%以上（通过设置缓存时间窗口，可以在系统可用性和关联
足需求的情况下降低了成本。引入缓存先进先出的队列，降低了HBase 的读写压力。最终曝光
10.4.2
以提高数据关联的准确性。
的数据进行多次关联。所以，可以将没有关联到的数据放入队列中通过单独的线程进行关联，
的数据过大。
内存中的数据可能会因任务失败而丢失，因此应用程序应该设置一定的规则，防止存入HashMap
存数据是为了更好地进行本地数据查询，因此可以选择 HashMap 作为数据结构。需要注意的是，
据都进行 HBase 的查询关联。
[3]邓志龙．浅谈对概念聚类 AOI算法分析的改进.陕西青年职业学院学报,2010(3):29-33
[2] Tadeusz Pietraszeka, Axel Tanner. Data Mining and Machine Learning - Towards Reducing
本章重点介绍了数据聚合和数据关联技术，在数据聚合方面，讨论了聚合方法、多维数据
从整体架构设计来看，我们使用 HBase 代替 Redis，使用磁盘存储替换纯内存存储，在满
实时数据要关联的数据到达时刻不一致，为了提高数据关联的准确性，就需要对没有关联
[1]https://pythonhosted.org/cubes/introduction.html
3.如何提高数据关联的准确性
如上所述，我们需要在实时计算引擎节点缓存一部分数据，降低对 HBase 的查询次数。缓
2．如何缓存数据
参考文献
本章小结
效果
第10章数据聚合与关联技术
195
---
## Page 222
与t前后的值不同。
（即E(x)）不同。
卡欺诈、传感器事件、医疗诊断、执法等领域。
现这些异常值非常有价值，异常值检测技术有非常广泛的应用，比如被应用在入侵检测、信用
能的程序产生的。当底层应用程序以不正常的方式运行时，它会产生异常值。快速、高效地发
11.1
监控几乎是不可能的，因此非常有必要使用机器学习和数据挖掘技术进行自动化异常检测。
便检测潜在的故障或异常现象。由于实际中的系统异常或者软件 bug 可能会非常多，通过人工
持续监控至关重要。从数据分析的角度来看，这意味着不间断地监视大量的时间序列数据，以
然存在大量的软件错误和硬件故障。系统要求7×24 小时不间断运行，因此，对这些系统进行
数据异常点检测技术
第11
给定一组时间序列X={x},异常时间序列xEX是在X上与大多数时间序列值不一致的部分。
3.异常时间序列（AnomalousTime-series）
2.波动点（ChangePoint）
异常值本质上是一个数据点。通常，大多数应用程序中的数据是由一个或多个反映系统功
虽然计算硬件和软件的快速发展已经极大提高了应用程序的可靠性，但是在大型集群中仍
给定输入时间序列x，波动点是指在某个时间t，其状态（行为）在这个时间序列上表现出
给定输入时间序列x，异常值是时间戳值对（t,x)，其中观测值x,与该时间序列的期望值
1．异常值（Outlier）
通常所说的异常大致分为异常值、波动点和异常时间序列三类。
概述
章
---
## Page 223
帮助开发者开发新的异常检测模型。表11-3列举了常见的开源的异常检查模型（系统)。
框架与异常检测基准数据一起开源（请访问GitHub 获取源码：https://github.com/yahoo/egads），
MPE
MASE
ME
SAE
MSE
MAPE
MAD
Bias
指标
数据的常见特征，表11-2 列举了用于建模实验的常见指标。
TwitterOutlier
EGADS KSigmaModel异常值
EGADS CP
EGADS ExtremeLow—密度模型异常值
模型
李亚普诺夫指数
林中小丘
峰度
偏态
非线性
自相关
季节性
趋势
周期（频率）
特征
EGADs"是Yahoo公司开发的一个灵活的、准确的、可扩展的异常检测综合系统。EGADS
在监控系统中，主要处理的是时序数据，而时序数据具有一定的特征，表 11-1列举了时序
表 11-3常见的开源的异常检测模型（系统）
平均百分比误差
平均绝对比例误差
平均误差
绝对错误的总和
误差的均方
平均绝对百分比误差
平均绝对偏差，也称为MAE
误差的算术平均值
描述
衡量附近轨迹的发散速度
衡量时间序列的长期记忆
如果数据相对于正常分布达到峰值或平坦，则采取措施
测量对称性，或更加明确地说，缺乏对称性
时间序列中包含了非线性模型表示的复杂数据集
代表数据之间的相关依赖
在一年或者更短的时期内在一
数据呈现上涨、下跌的走势
数据出现周而复始的现象
描述
表11-2
表11-1
基于广义的ESD方法的开源的Twitter-R异常检测库
EGADS重新实现了经典的k-西格玛模型
基于 EGADS 内核的波动点检测
EGADS基于密度的异常检测
描述
用于建模实验的常见指标
时序数据的常见特征
个趋势线上重复性和可预测的变动
第11章数据异常点检测技术
197
---
## Page 224
象是那些远离大部分其他对象的对象。
模型不能完美拟合的对象。
11.2
象的范围有关。接下来，我们就详细介绍异常检测方法。
2m在全人类中是少见的、异常的，但是在职业篮球运动员中却是正常的，即是否异常跟比较对
的结果大相径庭，产生异常数据。
动员群体中属于异常点。
群点。在数据分布图中，它们远离其他数据点。从异常的成因来看，
ExtremeI&ⅡIR异常值
198
ChangePt2&3 R CP
ChangePt1 R CP
BreakOut Twitter CP
模型
（3）数据测量或收集误差。例如，
异常检测的目的是发现与大部分其他对象不同的对象2。通常，异常点又被形象地称为离
对象的密度估计可以相对直接计算，特别是当对象之间存在邻近性度量时。当一个点的局
3．基于密度的技术
通常可以在对象之间定义邻近性度量，并且许多异常检测方法都是基于邻近度的。异常对
2．基于邻近度的技术
基于统计模型的异常点检测技术将所有数据构建成一个数据模型，其认为异常点是那些与
1．基于统计模型的技术
异常检测方法可以分归纳为三大类，每一类又包含了非常多的方法。
另外，需要注意的一点是，异常基于一定的范围，分为全局异常和局部异常。例如，身高
（2）自然变异。例如，一个正常身高的成年人在普通的群体中不是异常的，
（1）数据来源于不同的类。例如，
智能运维：从O搭建大规模分布式AIOps系统
异常检测方法
检测平均值和变量的变化
多个变化点
来自 Twitter的一个库，基于ESD统计测试来检测变化点
开源的异常值检测、阈值绝对值和残差检测异常
一个R库，实现各种主流的和专门的变化点方法，用于在数据中查找单个和
描述
，由于实验机器故障，
一群羊中混入了一匹马。
，生成的实验结果跟机器正常运作时
，可以分为三类。
但是在篮球运
续表
---
## Page 225
据均值（质心）的Mahalanobis距离（马氏距离）为：
点到分布中心的距离来进行判定[3]。
计的数据具有低概率，那么就把它们分类为异常点。此外，我们希望能够用简单的检测方法如
我们所选定的标准（几个α）有关，不是固定的。
区域的概率仅有0.01%，几乎不可能发生，故将其判定为异常点。可以看出，异常点的判定与
分别表示均值和标准差。数据落在土3个之外的区域的概率仅有0.27%，落在土4个o之外的
型的概率密度函数。通常，异常点的概率是很低的2。
11.2.1基于统计模型的异常点检测
部密度显著低于它的大部分近邻时，可能会被看作是异常的。
对于一个多维数据集 D，假设x是均值向量，那么对于数据集 D 中的其他对象x，从x到数
其中，x为数据集D中的元素，x为数据均值，S为协方差矩阵。容易证明：点到基础分布
对于多元高斯分布检测，我们希望使用类似于一元高斯分布的方法。例如，如果点关于估
2.多元正态分布的异常点检测
假设数据集由一个正态分布产生，该分布用 N(μ，o)表示（如图11-1所示)，其中，μ和α
基于统计模型的异常点检测方法的基本思想是基于数据，构建一个概率分布模型，得出模
1．基于正态分布的一元异常点检测
0
0.15
0.40
(x -x)-S(x-x) =(xx)s!qoueleye 
图11-1 N(μ,o)正态分布的概率密度图
第11章数据异常点检测技术
(11-1)
199
---
## Page 226
用 Mahalanobis 距离法可以准确地检测出数据集S中的异常点A和 B。
所示，正常点的距离均小于3，A 点和B 点的距离却大于6，明显大于正常点的距离。因此，使
数据集S，数据点分布如图11-2所示。
分布数据集，称为D。现在，我们在数据集D 中加入两个异常点：A(7,8)和 B(0,10)，形成新的
距离来进行异常点检测。假设变量y和y均为一元正态分布随机变量，(y,y2)组成了二元正态
以对Mahalanobis 距离进行排序，距离大的，就可以认为是异常点。
的 Mahalanobis 距离与点的概率直接相关，等于点的概率密度的对数加上一个常数。因此，可
200
根据公式（11-1），计算数据集S中每个点到质心的 Mahalanobis 距离。计算结果如图 11-3
接下来，
智能运维：从O搭建大规模分布式AIOps系统
我们通过一个具体案例（Python实现代码见下文）来解释如何运用Mahalanobis
8
图11-3
8
9
图11-2二元正态分布数据集S的数据点分布
。。
心
-2
数据集S中的点到质心的Mahalanobis距离
B
---
## Page 227
plt.show()
plt.colorbar(sc)
sc = plt.scatter(R[0], R[1], c=R[2] , cmap=cm) 
cm = plt.cm.get_cmap('RdY1Bu')
#用马氏距离渲染
R=np.array([yl,y2,dis])
for i in range(0,n):
dis=[]
n=XT.shape[0]
#根据马氏距离公式，计算每个样本点到中心的距离，得到结果集dis
SI=np.linalg.inv(S)
S=np.cov(x)
#求协方差矩阵及其逆矩阵
XM= np.mean(XT，axis = 0）#数据均值
XT=X.T#转置
X=np.array([yl,y2])
#计算马氏距离
plt.show()
plt.scatter(yl, y2, color='blue', s =3) 
#Plot图形
y2.append (10)
y2.append (8)
yl.append (0)
yl.append (7)
#添加异常点A（7,8）和B（0,10）
np.random.seed(0)
sigma =1
mu=0
##二元正态分布变量y1,y2
importmath
import matplotlib.pyplot as plt
importnumpyas np
##马氏距离异常点检测实现代码
将 dis[]与点的坐标关联起来
= list(np.random.normal(mu, sigma, 100))
dis.append(d)
d=np.sqrt(np.dot (np.dot(delta,SI),delta.T))
delta=XT[i]-XM