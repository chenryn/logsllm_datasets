Tensorflow 1.11.0  
Keras 2.2.4  
Keras-Preprocessing 1.0.5  
Ubuntu 16.04  
Python 2.7.12
Example code:
    from keras import models, layers
    from keras_preprocessing.image import ImageDataGenerator
    from keras_applications.imagenet_utils import preprocess_input
    train_dir = '/tmp/workspace/Pet_Dataset/train/'
    height, width, channels = (128, 128, 3)
    batch_size=32
    train_datagen = ImageDataGenerator(rescale=1.0/255)
    train_generator = train_datagen.flow_from_directory(
                  train_dir, target_size=(height, width),
                  batch_size=batch_size, class_mode='categorical')
    network = models.Sequential()
    network.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(height, width, channels)))
    network.add(layers.MaxPooling2D((2, 2)))
    network.add(layers.Conv2D(64, (3, 3), activation='relu'))
    network.add(layers.MaxPooling2D((2, 2)))
    network.add(layers.Conv2D(128, (3, 3), activation='relu'))
    network.add(layers.MaxPooling2D((2, 2)))
    network.add(layers.Conv2D(256, (3, 3), activation='relu'))
    network.add(layers.GlobalAveragePooling2D())
    network.add(layers.Dense(train_generator.num_classes, activation='softmax'))
    network.compile(optimizer='RMSProp',
                       loss='categorical_crossentropy',
                       metrics=['accuracy'])
    network.summary()
    history = network.fit_generator(train_generator, epochs=10) 
breaks with Tensorflow 1.11.0 with `ValueError: steps_per_epoch=None is only
valid for a generator based on the keras.utils.Sequence class. Please specify
steps_per_epoch or use the keras.utils.Sequence class.`.
Tensorflow 1.10.0 and below works.
Furthermore, providing steps_per_epoch and applying multiprocessing with
workers > 1:
    history = network.fit_generator(train_generator, epochs=10, 
        steps_per_epoch=train_generator.n/batch_size,
        use_multiprocessing=True, workers=2)
causes a UserWarning about multiple workers duplicate data.
I think this is caused by wrong inheritance of ImageDataGenerator.
When printing the exact class that is used in `keras_preprocessing/image.py`,
I get ``.
But `fit_generator()` checks if the generator is a subclass of ``, so it seems to assume that the
ImageDataGenerator instance is not of type Sequence, causing above problems.