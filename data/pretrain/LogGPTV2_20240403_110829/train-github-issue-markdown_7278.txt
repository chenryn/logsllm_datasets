I understand that you are encountering multiple errors when trying to bundle your script using a dependency from npm. The errors seem to be related to TypeScript type checking and the `sweepline-intersections` package. Here is a more structured and professional version of your issue, along with some potential solutions:

---

### Issue Description

When attempting to bundle my script, I am encountering multiple TypeScript errors related to the `sweepline-intersections` package (version 1.1.2). The errors include undefined names, duplicate identifiers, and properties that do not exist on the `TinyQueue` type.

### Error Details

1. **Undefined Name: 'global'**
   - **Error Message:** `TS2552 [ERROR]: Cannot find name 'global'. Did you mean '_global'?`
   - **Code Snippet:**
     ```typescript
     var _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;
     ```

2. **Duplicate Identifier: 'exports'**
   - **Error Message:** `TS2441 [ERROR]: Duplicate identifier 'exports'. Compiler reserves name 'exports' in top level scope of a module.`
   - **Code Snippet:**
     ```typescript
     var exports = {};
     ```

3. **Property Does Not Exist on Type 'TinyQueue'**
   - **Error Messages:**
     - `TS2339 [ERROR]: Property 'data' does not exist on type 'TinyQueue'.`
     - `TS2339 [ERROR]: Property 'length' does not exist on type 'TinyQueue'.`
     - `TS2339 [ERROR]: Property 'compare' does not exist on type 'TinyQueue'.`
   - **Code Snippets:**
     ```typescript
     (this || _global).data = data;
     (this || _global).length = (this || _global).data.length;
     (this || _global).compare = compare;
     ```

4. **Implicit Any Types**
   - **Error Messages:**
     - `TS7006 [ERROR]: Parameter 'item' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'pos' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'a' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'b' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'e1' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'e2' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'seg1' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'seg2' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'p' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'eventToCheck' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'geojson' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'eventQueue' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'featureOrGeometry' implicitly has an 'any' type.`
     - `TS7006 [ERROR]: Parameter 'event' implicitly has an 'any' type.`
   - **Code Snippets:**
     ```typescript
     push(item) {
     _up(pos) {
     function defaultCompare(a, b) {
     function checkWhichEventIsLeft(e1, e2) {
     function checkWhichSegmentHasRightEndpointFirst(seg1, seg2) {
     constructor(p) {
     isSamePoint(eventToCheck) {
     function fillEventQueue(geojson, eventQueue) {
     function processFeature(featureOrGeometry, eventQueue) {
     constructor(event) {
     ```

### Potential Solutions

1. **Update or Patch the Package:**
   - Check if there is a newer version of `sweepline-intersections` that addresses these issues.
   - If not, consider forking the repository and making the necessary changes to fix the type definitions.

2. **Use Declaration Merging:**
   - Extend the `TinyQueue` interface to include the missing properties.
   ```typescript
   declare module 'tinyqueue' {
     interface TinyQueue<T> {
       data: T[];
       length: number;
       compare: (a: T, b: T) => number;
     }
   }
   ```

3. **Add Type Definitions:**
   - Create a `.d.ts` file to provide type definitions for the missing properties and functions.
   ```typescript
   declare global {
     var global: any;
   }

   declare var _global: any;

   declare namespace sweeplineIntersections {
     interface Event {
       p: { x: number; y: number };
       otherEvent: Event | null;
       isLeftEndpoint: boolean;
       isSamePoint(eventToCheck: Event): boolean;
     }

     interface Segment {
       leftSweepEvent: Event;
       rightSweepEvent: Event;
     }

     function testSegmentIntersect(seg1: Segment, seg2: Segment): boolean;
     function runCheck(eventQueue: any): void;
     function sweeplineIntersections(geojson: any): void;
   }
   ```

4. **Disable Strict Type Checking:**
   - As a last resort, you can disable strict type checking for the specific file or module.
   ```typescript
   // tsconfig.json
   {
     "compilerOptions": {
       "strict": false,
       "noImplicitAny": false
     }
   }
   ```

### Conclusion

The errors you are encountering are likely due to missing type definitions and implicit any types in the `sweepline-intersections` package. By extending the `TinyQueue` interface, adding type definitions, or updating the package, you should be able to resolve these issues and successfully bundle your script.

---