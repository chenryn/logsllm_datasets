The proposed ACAC framework is designed to enable the least
privilege network access control for dynamic workflows while
considering users’ QoE. This is possible by allowing notification
to flow from application to access control policy generator. The
three main components of the ACAC framework, as depicted in
Figure 3, are: workflow design, workflow service discover (WSD),
and Dynamic Access control policy (DACP).
2.1 Workflow Design
IoT application level workflow design is where users define their
activity/task as abstract workflows. It provides only service semantic
information on how the workflow is composed without any execu-
tion details. Workflow design main goal is to decouple the activity
from the underlying devices that it is going to run it. Hence, devices
can be selected/changed dynamically to build execution workflow to
satisfy user’s requirements (e.g. QoE and preferences). For example,
a user defines abstract workflow for audio streaming activity as TV
tv audio streams to a speaker s, and left the selection of the suitable
TV and speaker devices to the workflow service discovery.
2.2 Workflow Service Discovery (WSD)
The workflow service discovery (WSD) manage and maintain work-
flow execution to meet users’ QoE and preferences. WSD discovers
and automatically select a suitable collection of IoT devices to pro-
vide required services for a new workflow [10]. The devices that
execute the workflow are selected among available devices in the
network to maximise user QoE and preferences. Moreover, WSD
dynamically changes/switches workflows’ services from one device
Poster PresentationAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand686Algorithm 1: Policy Generation Algorithm
Input
:Workflow changesWc, Service requirements N etr eq,
Network devices N etdev, ACL policy acl
2
3
4
5
6
Output:New/updated ACL policy acl
1 foreach change ci ∈ Wc do
srcIP ← N etdev(ci .FROM, IP) ;
dstIP ← N etdev(ci .TO, IP) ;
dstP ← N etr eq(ci .TO, ci .SERV ICE, PORT) ;
proto ← N etr eq(ci .TO, ci .SERV ICE, PROTO) ;
rule ← ({src_ip = srcIP, dst_ip = dstIP, dst_port =
dstP, tp_proto = proto}, allow) ;
if ci .ACT ION == REMOV E then
acl− = rule ;
acl+ = rule ;
7
8
9
10
11
12 end
else
end
to another to meet users’ QoE and preferences [3, 4]. Workflow
service changes can be triggered by environmental changes such as
user mobility [4], devices availability or other factors. For example,
WSD defines execution workflow at time t by selecting tv1 →1 then
at t + ∆ changes s1 to s2 to maintain user QoE, as shown in Figure
3.
2.3 Dynamic Access Control Policy (DACP)
The DACP generates ACL policy rules to support workflow com-
munications. We consider WSD as a blackbox that can notify DACP
about network changes on the workflows. Therefore, DACP can gen-
erate and updates ACL rules dynamically as a react for workflows
changes or prior to expected changes by WSD. Reactive approach
DACP generates and installs ACL policy as a reaction for changing
in a workflows. The reactive approach is well known in access
control research and usually used with IDS [12]. The notifications
contain information regarding the changes in the workflow such as
(FROM, TO, SERVICE, REMOVE/ADD). For the aforementioned ex-
ample, upon changing W1, WSD sends (tv_1, s_1, stream, REMOVE),
(tv_1, s_2, stream, ADD). Then access control policy generator will
generate the corresponding rules of W1 to block tv1 from accessing
s1 and allow it to access s1.
On the other hand, proactive approach generates required access
rules for the expected changing in workflows. It requires early noti-
fication from the WSD about any expected changing in a workflow
connections. WSD sends notifications as it does in the reactive
approach. However, this time is before the change take place (i.e.
before handover). Once the notifications received, corresponding
rules will be added for new connections, however, old connections
will not be removed until handover is done. The proactive approach
will handle the aforementioned example as following; first, it re-
ceives WSD early notification about workflow changes and install
rules for ADD connections only (e.g.tv1 → s2 ). Once the handover
complete WSD sends another notification about that, and accord-
ingly, the workflow connections REMOV E (e.g.tv1 → s1 ) will be
removed.
ACL rules are consist of a) match: represented by four-tuple (
ip_src, ip_dest, port_dest, tp_proto) and b) allow action, and the
default is deny. ACL rule’s match and action are filled by DACP
with values corresponding to the flow changes. For example, if
WSD sends (tv_1, s_1, stream, REMOVE), (tv_1, s_2, stream, ADD),
then DACP compiles these changes into rules using network device
information N etdev and network service requirements N etr eq as
shown in Algorithm 1. The generated rules can be enforced us-
ing Software Defined Network (SDN) as it supports dynamic rule
enforcement into switches [12].
3 CONCLUSIONS AND FUTURE WORK
In this paper, we proposed ACAC, a framework supporting dynamic
IoT application network access control. ACAC address the problem
of enforcing least privilege on IoT applications while supporting
dynamic access control policies. We investigate reactive and proac-
tive approaches to dynamically generate access rules for workflows
and the effect on the user QoE. We observe the following future
research directions: a) how do we reduce handover time while pro-
viding an acceptable user experience but not violating the principle
of least privilege; b) how to infer workflow changes based upon
changes in user behaviour or in the environment.
REFERENCES
[1] Mohammed Al-Shaboti, Chen Aaron, and Welch Ian. 2019. Automatic Device
Selection and Access Policy Generation based on User Preference for IoT Activity
Workflow. In eprint arXiv:1904.06495.
[2] Mohammed Al-Shaboti, Ian Welch, Aaron Chen, and Muhammed Adeel Mah-
mood. 2018. Towards secure smart home iot: Manufacturer and user network
access control framework. In 2018 IEEE 32nd International Conference on Advanced
Information Networking and Applications (AINA). IEEE, 892–899.
[3] Kyeong-Deok Baek and In-Young Ko. 2017. Spatially cohesive service discovery
and dynamic service handover for distributed IoT environments. In International
Conference on Web Engineering. Springer, 60–78.
[4] Wei Bao, Dong Yuan, Zhengjie Yang, Shen Wang, Wei Li, Bing Bing Zhou, and
Albert Y Zomaya. 2017. Follow me fog: toward seamless handover timing schemes
in a fog computing environment. IEEE Communications Magazine 55, 11 (2017),
72–78.
[5] Paolo Bellavista and A Montanari. 2017. Context awareness for adaptive access
control management in IoT environments. Secur. Priv. Cyber-Phys. Syst.: Found.
Princ. Appl 2, 5 (2017), 157–178.
[6] Suman Sankar Bhunia and Mohan Gurusamy. 2017. Dynamic attack detection
and mitigation in IoT using SDN. In 2017 27th International Telecommunication
Networks and Applications Conference (ITNAC). IEEE, 1–6.
[7] Jae-Hyun Cho, Han-Gyu Ko, and In-Young Ko. 2016. Adaptive service selection
according to the service density in multiple QoS aspects. IEEE Transactions on
Services Computing 9, 6 (2016), 883–894.
[8] Microsoft flow team. [n. d.]. Microsoft Flow. https://flow.microsoft.com/en-us/
(visited on 18/10/2018).
[9] Gartner. 2014. Gartner Says a Typical Family Home Could Contain More Than
500 Smart Devices by 2022.
https://www.gartner.com/en/newsroom/press-
releases/2014-09-08-gartner-says-a-typical-family-home-could-contain-more-
than-500-smart-devices-by-2022 (visited on 8/4/2019).
[10] In-Young Ko, Han-Gyu Ko, Angel Jimenez Molina, and Jung-Hyun Kwon. 2016.
SoIoT: Toward a user-centric IoT-based service framework. ACM Transactions on
Internet Technology (TOIT) 16, 2 (2016), 8.
[11] Dimosthenis Kyriazis, Konstantinos Tserpes, Andreas Menychtas, Antonis Litke,
and Theodora Varvarigou. 2008. An innovative workflow mapping mechanism
for Grids in the frame of Quality of Service. Future Generation Computer Systems
24, 6 (2008), 498–511.
[12] Hongda Li, Feng Wei, and Hongxin Hu. 2019. Enabling Dynamic Network
Access Control with Anomaly-based IDS and SDN. In Proceedings of the ACM
International Workshop on Security in Software Defined Networks & Network
Function Virtualization. ACM, 13–16.
[13] Rida Zojaj Naeem, Saman Bashir, Muhammad Faisal Amjad, Haider Abbas, and
Hammad Afzal. 2019. Fog computing in internet of things: Practical applications
and future directions. Peer-to-Peer Networking and Applications (2019), 1–27.
Poster PresentationAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand687