如果目录不存在，自动挂载程序会创建目录。如果在自动挂载程序启动之前目录存在，自动挂载程序在退出时不会将其删除。如果指定了超时，则如果在超时时间内没有访问该目录，则目录会自动卸载。
映射的一般格式与主映射类似。但是，options
字段会出现在挂载点和位置之间，而不是在 master 映射的条目末尾：
``` screen
mount-point  options  location
```
使用这种格式的变量有：
::: variablelist
[[*[mount-point]{.replaceable}*]{.emphasis}]{.term}
:   这指的是 `autofs`{.literal}
    挂载点。这可以是间接挂载的单一目录名称，也可以是用于直接挂载的挂载点的完整路径。每个直接和间接映射条目键（[*[挂载点）后面都有一个以]{.replaceable}*]{.emphasis}空格分隔的偏移目录列表（以
    `/`{.literal}开头的子目录名称），从而使它们成为称为多挂载条目的空格分隔的目录列表。
[[*[选项]{.replaceable}*]{.emphasis}]{.term}
:   提供时，这些是未指定其自身选项的映射条目的挂载选项。此字段是可选的。
[[*[位置]{.replaceable}*]{.emphasis}]{.term}
:   这指的是文件系统位置，如本地文件系统路径（前面带有 Sun
    映射格式转义字符 ` ：`{.literal} 表示映射名称以
    `/`{.literal}开头）、NFS 文件系统或其他有效文件系统位置。
:::
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139716126331936}
**例 18.2. 映射文件**
::: example-contents
以下是映射文件中的示例，例如 `/etc/auto.misc`{.literal} ：
``` screen
payroll  -fstype=nfs4  personnel:/dev/disk/by-uuid/52b94495-e106-4f29-b868-fe6f6c2789b1
sales    -fstype=xfs   :/dev/disk/by-uuid/5564ed00-6aac-4406-bfb4-c59bf5de48b5
```
映射文件中的第一列指出 `autofs`{.literal} 挂载点： `销售`{.literal}
以及名为 people 的服务器 `的工资`{.literal} `。`{.literal}第二列指出
`autofs`{.literal} 挂载的选项。第三列显示挂载源。
在给定配置后，`autofs`{.literal} 挂载点将是 `/home/payroll`{.literal} 和
`/home/sales`{.literal}。`fstype=`{.literal}
选项通常会被忽略，通常不需要。
使用给定配置时，如果进程需要访问 `autofs 卸载`{.literal} 的目录，如
`/home/payroll/2006/July.sxc`{.literal}，`autofs`{.literal}
服务会自动挂载该目录。
:::
:::
::: title
**amd 映射格式**
:::
`autofs`{.literal} 服务也识别 `amd 格式的`{.literal}
映射配置。如果要重复使用为 `am-utils`{.literal}
服务编写的现有自动挂载器配置（已从 Red Hat Enterprise Linux
中删除），这将非常有用。
但是，红帽建议使用前面章节中描述的更简单的 `autofs`{.literal} 格式。
::: itemizedlist
**其它资源**
-   `autofs(5)`{.literal} 手册页
-   `autofs.conf(5)`{.literal} man page
-   `auto.master(5)`{.literal} man page
-   `/usr/share/doc/autofs/README.amd-maps`{.literal} file
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#configuring-autofs-mount-points_assembly_mounting-file-systems-on-demand}配置 autofs 挂载点 {.title}
:::
这个步骤描述了如何使用 `autofs`{.literal} 服务配置按需挂载点。
::: itemizedlist
**先决条件**
-   安装 `autofs`{.literal} 软件包：
    ``` screen
    # yum install autofs
    ```
-   启动并启用 `autofs`{.literal} 服务：
    ``` screen
    # systemctl enable --now autofs
    ```
:::
::: orderedlist
**流程**
1.  为位于 `/etc/auto.标识符`{.literal} 的 on-demand
    挂载点创建一个映射文件。使用标识挂载点的名称替换
    [*[标识符]{.replaceable}*]{.emphasis}。
2.  在映射文件中，填写挂载点、选项和位置字段，如 [autofs
    配置文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand){.link}
    部分所述。
3.  将 map 文件注册到主映射文件中，如 [autofs
    配置文件](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#the-autofs-configuration-files_assembly_mounting-file-systems-on-demand){.link}
    部分所述。
4.  尝试访问 on-demand 目录中的内容：
    ``` screen
    $ ls automounted-directory
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#automounting-user-home-directories-with-autofs-service_assembly_mounting-file-systems-on-demand}使用 autofs 服务自动挂载 NFS 服务器用户主目录 {.title}
:::
这个步骤描述了如何配置 [**autofs**]{.strong} 服务来自动挂载用户主目录。
::: itemizedlist
**先决条件**
-   已安装 [**[autofs]{.package}**]{.strong} 软件包。
-   [**[autofs]{.service}**]{.strong} 服务已启用并正在运行。
:::
::: orderedlist
**流程**
1.  通过在需要挂载用户主目录的服务器上编辑 `/etc/auto.master`{.literal}
    文件，指定映射文件的挂载点和位置。要做到这一点，请在
    `/etc/auto.master`{.literal} 文件中添加以下行：
    ``` screen
    /home /etc/auto.home
    ```
2.  在需要挂载用户主目录的服务器中创建名为 `/etc/auto.home`{.literal}
    的映射文件，并使用以下参数编辑该文件：
    ``` screen
    * -fstype=nfs,rw,sync host.example.com:/home/&i
    ```
    您可以跳过 `fstype`{.literal} 参数，因为它默认为
    `nfs`{.literal}。有关详细信息，请参阅 `autofs(5)`{.literal} 手册页。
3.  重新载入 `autofs`{.literal} 服务：
    ``` screen
    # systemctl reload autofs
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#overriding-or-augmenting-autofs-site-configuration-files_assembly_mounting-file-systems-on-demand}覆盖或添加 autofs 站点配置文件 {.title}
:::
有时覆盖客户端系统上特定挂载点的站点默认值会很有用。
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139716111480048}
**例 18.3. 初始条件**
::: example-contents
例如，请考虑以下条件：
::: itemizedlist
-   自动挂载器映射存储在 NIS 中，`/etc/nsswitch.conf`{.literal}
    文件具有以下指令：
    ``` screen
    automount:    files nis
    ```
-   `auto.master`{.literal} 文件包含：
    ``` screen
    +auto.master
    ```
-   NIS `auto.master`{.literal} 映射文件包含：
    ``` screen
    /home auto.home
    ```
-   NIS `auto.home`{.literal} 映射包含：
    ``` screen
    beth    fileserver.example.com:/export/home/beth
    joe     fileserver.example.com:/export/home/joe
    *       fileserver.example.com:/export/home/&
    ```
-   文件映射 `/etc/auto.home`{.literal} 不存在。
:::
:::
:::
::: title
**流程**
:::
这部分论述了从不同服务器挂载主目录的示例，并使用所选条目增强
`auto.home`{.literal}。
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139715998857968}
**例 18.4. 从不同服务器挂载主目录**
::: example-contents
根据上述条件，假设客户端系统需要覆盖 NIS 映射 `auto.home 并`{.literal}
从其他服务器挂载主目录。
::: itemizedlist
-   在这种情况下，客户端需要使用以下 `/etc/auto.master`{.literal} 映射：
    ``` screen
    /home ­/etc/auto.home
    +auto.master
    ```
-   `/etc/auto.home`{.literal} 映射包含条目：
    ``` screen
    *    host.example.com:/export/home/&
    ```
:::
由于自动挂载器仅处理第一次出现挂载点，`/home 目录包含 /`{.literal}
`etc/auto.home 的内容`{.literal}，而不是 NIS `auto.home`{.literal}
映射。
:::
:::
::: example
[]{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139716104374464}
**例 18.5. 仅使用所选条目增强 auto.home**
::: example-contents
或者，使用几个条目来增加站点范围的 `auto.home`{.literal} 映射：
::: orderedlist
1.  创建一个 `/etc/auto.home`{.literal}
    文件映射，并在其中放置新条目。在结尾，包含 NIS `auto.home`{.literal}
    映射。然后 `/etc/auto.home`{.literal} 文件映射类似：
    ``` screen
    mydir someserver:/export/mydir
    +auto.home
    ```
2.  在这些 NIS `auto.home`{.literal} 映射条件下，列出
    `/home 目录输出`{.literal} 的内容：
    ``` screen
    $ ls /home
    beth joe mydir
    ```
:::
最后一个示例可以正常工作，因为 `autofs`{.literal}
不包含与正在读取的文件映射的内容。因此，`autofs`{.literal} 将继续在 the
`nsswitch`{.literal} 配置中进入下一个 map 源。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#using-ldap-to-store-automounter-maps_assembly_mounting-file-systems-on-demand}使用 LDAP 存储自动挂载器映射 {.title}
:::
此流程将 `autofs`{.literal} 配置为将自动挂载器映射存储在 LDAP
配置中，而不是存储在 `autofs`{.literal} 映射文件中。
::: itemizedlist
**先决条件**
-   必须在所有配置的系统中安装 LDAP 客户端程序库，以便从 LDAP
    检索自动挂载器映射。在 Red Hat Enterprise Linux 上，open
    `ldap`{.literal} 软件包应当作为 `autofs`{.literal}
    软件包的依赖项自动安装。
:::
::: orderedlist
**流程**
1.  要配置 LDAP 访问，请修改 `/etc/openldap/ldap.conf`{.literal}
    文件。确保为您的站点正确设置了 `BASE`{.literal}、S`URI`{.literal} 和
    `schema`{.literal} 选项。
2.  `rfc2307bis`{.literal} 草案介绍了最近在 LDAP
    中存储自动挂载映射的架构。要使用此架构，请在
    `/etc/autofs.conf`{.literal}
    配置文件中删除架构定义中的注释字符，将其设置在 /etc/autofs.conf
    配置文件中。例如：
    ::: example
    []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139715988894352}
    **例 18.6. 设置 autofs 配置**
    ::: example-contents
    ``` screen
    DEFAULT_MAP_OBJECT_CLASS="automountMap"
    DEFAULT_ENTRY_OBJECT_CLASS="automount"
    DEFAULT_MAP_ATTRIBUTE="automountMapName"
    DEFAULT_ENTRY_ATTRIBUTE="automountKey"
    DEFAULT_VALUE_ATTRIBUTE="automountInformation"
    ```
    :::
    :::
3.  确保配置中已注释所有其他模式条目。`automountKey`{.literal} 属性取代
    `rfc2307bis`{.literal} 模式中的 `cn`{.literal} 属性。以下是 LDAP
    数据交换格式(LDIF)配置示例：
    ::: example
    []{#assembly_mounting-file-systems-on-demand_managing-file-systems.html#idm139716098059744}
    **例 18.7. LDF 配置**
    ::: example-contents
    ``` screen
    # extended LDIF
    #
    # LDAPv3
    # base <> with scope subtree
    # filter: (&(objectclass=automountMap)(automountMapName=auto.master))
    # requesting: ALL
    #
    # auto.master, example.com
    dn: automountMapName=auto.master,dc=example,dc=com
    objectClass: top
    objectClass: automountMap
    automountMapName: auto.master
    # extended LDIF
    #
    # LDAPv3
    # base  with scope subtree
    # filter: (objectclass=automount)
    # requesting: ALL
    #
    # /home, auto.master, example.com
    dn: automountMapName=auto.master,dc=example,dc=com
    objectClass: automount
    cn: /home
    automountKey: /home
    automountInformation: auto.home
    # extended LDIF
    #
    # LDAPv3
    # base <> with scope subtree
    # filter: (&(objectclass=automountMap)(automountMapName=auto.home))
    # requesting: ALL
    #
    # auto.home, example.com
    dn: automountMapName=auto.home,dc=example,dc=com
    objectClass: automountMap
    automountMapName: auto.home
    # extended LDIF
    #
    # LDAPv3
    # base  with scope subtree
    # filter: (objectclass=automount)