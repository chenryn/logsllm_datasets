Subject: Inquiry and Contribution Regarding Starlette DatabaseMiddleware in FastAPI

Greetings,

I hope this message finds you well. I wanted to extend my congratulations on the exceptionally well-documented library. It was a pleasure discovering it through Twitter, and I am excited to contribute to its development.

Upon diving into your project, I became particularly interested in the Starlette `DatabaseMiddleware`. To better understand and adapt this feature for FastAPI, I cloned and modified the related tests from the Starlette repository. The updated test can be found [here](https://github.com/euri10/fastapi/blob/dbmiddleware/tests/test_dbmiddleware.py).

### Overview of the Test
- **Starlette Instance (`starlette=Starlette()`)**: This instance replicates the original tests from the `test_database` module.
- **FastAPI Instance (`fastapi=FastAPI()`)**: This instance includes routes adapted to FastAPI's framework, such as using `app.get` and `app.post` instead of `app.route`, and incorporating Pydantic models.

Each instance is tested separately within two classes:
- `TestStarletteStyle()`
- `TestFastAPIStyle()`

### Test Results
- **`TestStarletteStyle`**: All tests pass, as expected, matching the results from the original Starlette tests.
- **`TestFastAPIStyle`**: When the `starlette=Starlette()` instance is replaced with `starlette=FastAPI()`, all tests in `TestStarletteStyle` still pass. This is consistent with the understanding that `fastapi.post` is equivalent to `fastapi.route(methods=["POST"])`.

However, `TestFastAPIStyle` fails at multiple points:
- **Failure 1**: A `RuntimeError` is raised, but the entry is still added to the database. In `TestStarletteStyle`, the `RuntimeError` prevents the entry from being added. This issue seems to be related to the `rollback_on_shutdown=True` setting, which may not be functioning as intended.
- **Failure 2**: The test expects 2 entries in the database but finds 5, indicating a rollback issue.
- **Failure 3**: The test expects 1 entry in the database but finds 6, again suggesting a problem with the rollback mechanism.

### Conclusion
It appears there is an issue with the rollback settings in the FastAPI implementation. I am eager to further investigate this and would be happy to submit a pull request (PR) with my failing branch if that is acceptable. Your insights and suggestions would be greatly appreciated.

Thank you for your time and consideration.

Best regards,
[Your Name]