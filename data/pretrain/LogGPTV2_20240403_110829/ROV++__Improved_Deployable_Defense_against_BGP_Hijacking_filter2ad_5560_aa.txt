title:ROV++: Improved Deployable Defense against BGP Hijacking
author:Reynaldo Morillo and
Justin Furuness and
Cameron Morris and
James Breslin and
Amir Herzberg and
Bing Wang
ROV++: Improved Deployable Defense against BGP Hijacking
Reynaldo Morillo
Justin Furuness
Cameron Morris
James Breslin
University of Connecticut
PI:EMAIL
University of Connecticut
PI:EMAIL
University of Connecticut
PI:EMAIL
University of Connecticut
PI:EMAIL
Amir Herzberg
Bing Wang
University of Connecticut
PI:EMAIL
University of Connecticut
PI:EMAIL
Abstract—We study and extend Route Origin Validation
(ROV), the basis for the IETF defenses of interdomain routing.
We focus on two important hijack attacks: subpreﬁx hijacks
and non-routed preﬁx hijacks. For both attacks, we show that,
with partial deployment, ROV provides disappointing security
beneﬁts. We also present a new attack, superpreﬁx hijacks,
which completely circumvent ROV’s defense for non-routed preﬁx
hijacks.
We then present ROV++, a novel extension of ROV, with
signiﬁcantly improved security beneﬁts even with partial adop-
tion. For example, with uniform 5% adoption for edge ASes
(ASes with no customers or peers), ROV prevents less than 5%
of subpreﬁx hijacks, while ROV++ prevents more than 90% of
subpreﬁx hijacks. ROV++ also defends well against non-routed
preﬁx attacks and the novel superpreﬁx attacks.
We evaluated several ROV++ variants, all sharing the im-
provements in defense; this includes “Lite”, software-only vari-
ants, deployable with existing routers. Our evaluation is based
on extensive simulations over the Internet topology.
We also expose an obscure yet important aspect of BGP,
much ampliﬁed by ROV: inconsistencies between the observable
BGP path (control-plane) and the actual trafﬁc ﬂows (data-plane).
These inconsistencies are highly relevant for security, and often
lead to a challenge we refer to as hidden hijacks.
I.
INTRODUCTION
BGP, the Internet’s inter-domain routing protocol, does not
have authentication mechanisms, and suffers from frequent
misconﬁgurations and attacks, often with wide-ranging im-
pacts, e.g., [47], [58], [2], [60], [5]. By far, the most common
and effective attacks are preﬁx and subpreﬁx hijacking, where
a rogue or misconﬁgured autonomous system (AS) announces
an IP address block (preﬁx or subpreﬁx) not assigned to it.
The standardized defense against preﬁx and subpreﬁx hi-
jacks is Route Origin Validation (ROV), which is expected to be
the ﬁrst and most important application of the Resource Public
Key Infrastructure (RPKI) [32], [7], [17], [61], [54]. ROV is
also the prerequisite for BGPsec [37], the other standardized
defense for BGP, and for other inter-domain routing security
mechanisms, such as soBGP [63] and path-end validation [15].
Network and Distributed Systems Security (NDSS) Symposium 2021
21-25  February  2021, Virtual 
ISBN  1-891562-66-5
https://dx.doi.org/10.14722/ndss.2021.24438
www.ndss-symposium.org
Reports from NIST RPKI monitor [6] and a recent longi-
tudinal study [14] show that, despite a slow start, adoption of
RPKI—esp. issuing of routing certiﬁcates and Route Origin
Authorizations (ROAs)—has ﬁnally taken off, mainly since
2018. Importantly, misconﬁgurations that were abundant in
the past have become quite rare; there are also proposals for
further supporting (correct) deployments, e.g., [24]. As a result,
it appears that RPKI is coming of age, and can ﬁnally be
deployed by ROV to ﬁlter and drop invalid announcements.
Another recent study [57] shows that ROV has gone from
being non-existent two years ago to being used by more ISPs
(e.g., AT&T [1]) to ﬁlter BGP announcements, which has led
to beneﬁts for the ASes that use RPKI.
Deployment of ROV is, however, still slow, as shown in
multiple works [29], [30], [62], [48], [19], [12], [25], [24].
Furthermore, Gilad et al. [19] have shown that, until it is
widely deployed, ROV only leads to limited beneﬁts.
The security beneﬁts of partially-deployed ROV are es-
pecially meager against subpreﬁx hijacks; even for adopting
ASes, the beneﬁts are meager, unless almost all top ASes
adopt ROV [19]. Note that an adopting AS will never use
its trafﬁc may still be
an invalid announcement; however,
hijacked due to routing via a non-adopting transit AS, through
which the packets will be routed to the attacker because of
the preference of more-speciﬁc routes. We refer to this as
data-plane hijack, since, although the routing table (control
plane) indicates a path to the correct origin, the trafﬁc itself
(data plane) is hijacked (see §II). Analyzing BGP routing data
provided by RouteViews [49], we see approximately 343K
preﬁxes are shorter than /24 as of July 2020, which are
susceptible to subpreﬁx hijacks, endangering roughly 2B IP
addresses, approximately half of the Internet. For ROV to be
effective against data-plane subpreﬁx hijacks, it requires an
extremely widespread deployment, which is not expected in
the foreseeable future.
We also study the security of ROV against another impor-
tant threat: non-routed preﬁx hijacking. Non-routed preﬁxes
are widely abused, esp. for spam, phishing and DDoS attacks;
see [60]. In addition, we introduce a novel variant of non-
routed preﬁx hijacks, involving superpreﬁx announcement. We
show that ROV is less effective against non-routed preﬁx
hijacks, and completely fails against the superpreﬁx variant
of this attack.
Better defenses? Introducing ROV++! We present
ROV++, an extension of ROV, with much improved security
against subpreﬁx and non-routed hijacks, including the new
superpreﬁx hijacks. ROV++ defense is effective even with
limited deployment, with improvements to both adopting and
non-adopting ASes. We present several variants of ROV++,
and evaluate them using large-scale simulations. The results
show clear improved security of ROV++ (compared to ROV),
and tradeoffs between the different ROV++ variants.
We refer to several variants as Lite; these can be deployed
very easily—using existing routers. These Lite versions have
nearly the same security guarantees as their non-Lite versions,
all of which are certainly much more secure than ROV.
A. Main Contributions
• Design of ROV++, an improved security extension to
ROV (§III). We identify common scenarios, in which ROV
fails to prevent (data-plane) hijacking, and present correspond-
ing extensions, ROV++, versions v1, v2 and v3, which prevent
the hijacks. ROV++ v1 prevents interception for each preﬁx
in one of two ways. The ﬁrst is to select an announcement
received from a neighbor who did not send a hijacked an-
nouncement for a subpreﬁx. If no such announcement exists,
the trafﬁc sent to the hijacked subpreﬁx is dropped. ROV++ v2
announces a path to the hijacked subpreﬁx when the AS cannot
correctly route to it, in addition to blackholing this trafﬁc
(as in v1). This blackhole announcement competes with the
subpreﬁx hijack, and therefore may protect other ASes from
being hijacked. Note, however, that blackhole announcements
may also increase the number of ASes whose packets cannot
reach the subpreﬁx. ROV++ v3 returns to the case handled
by v1, where an AS receives from one neighbor a subpreﬁx
hijack, and from another neighbor, an announcement with the
correct origin for the preﬁx, which it then announces. In such
cases, to help other ASes reach the correct origin, the v3 AS
will send preventive subpreﬁx announcement, using the same
path. Like the blackhole announcements of v2, the preventive
announcement competes with the subpreﬁx hijack. If these
preventive announcements are successful, trafﬁc would reach
the correct origin, hopefully improving reachability.
• ROV++ security analysis (§IV). We show that an AS that
adopts ROV++ does not introduce hijacks beyond what would
have happened if the AS used BGP or ROV.
• Detailed evaluation of ROV and ROV++ (§V): To eval-
uate and ﬁne-tune ROV++, we implemented a detailed BGP
simulator, incorporating BGP announcement and withdrawal
mechanisms. Using large-scale simulations over empirically-
derived datasets, we performed extensive measurements of
partial deployments of ROV and different variants of ROV++.
Our experiments cover adopting ASes and non-adopting ASes
(“collateral beneﬁt”), results for subpreﬁx hijacking and non-
routed preﬁxes, data-plane and control-plane results, impact on
different categories of ASes (edge, top-tier, others), and more.
The results show dramatic beneﬁts of ROV++, esp. for early
adoption scenarios. In particular, for adoption at just 5%, about
95% of the adopting edge ASes fall victim to subpreﬁx hijacks
due to “collateral damage” with ROV, compared to only 5%
with all variants of ROV++.
• Non-routed preﬁxes: evaluation of ROV and ROV++, and
the superpreﬁx-attack (§V). We present the ﬁrst evaluation
of the effectiveness of ROV and ROV++ against hijacking of
non-routed preﬁxes, widely abused for malicious applications
such as spam and DDoS [60]. We also present the superpreﬁx
hijack attack, a novel way to hijack a non-routed preﬁx,
where the attacker announces a superpreﬁx of the non-routed
preﬁx, together with (or even instead of) sending a hijack
announcement for the non-routed preﬁx. ROV is quite helpless
against this attack; in contrast, all versions of ROV++ defend
well against it, even with minimal deployment.
• Lite ROV++: software-only, readily-deployable design
(§VI). To facilitate implementation and fast adoption, we
designed the ROV++ Lite versions, which can be readily im-
plemented and deployed using existing routers. Our extensive
simulation results demonstrate that ROV++ Lite variants are
almost as effective as the corresponding non-Lite ROV++
versions.
• Recommendations (§VII). Our results seem to indicate a
clear recommendation for deployment: ROV++ v1 for routed
preﬁxes, and ROV++ v2 (or a variant) for non-routed preﬁx
hijacks. We recommend the Lite version for both cases since it
is easier to deploy and has similar performance as the non-Lite
version.
B. Related Work
Security of inter-domain routing. Security vulnerabili-
ties of inter-domain routing have long been recognized (see
summary in [45], [28], [8], [23], [42], [52], and common
misconﬁgurations in [39]). A large number of security solu-
tions have been proposed [34], [63], [21], [3], [26], [55], [64],
[31], [9], [59], [15], [53]; the effectiveness of BGP security
protocols are compared in [13], [20]. In addition, techniques
have been proposed to detect security problems, e.g., invalid
multiple origin AS [65] and BGP serial hijackers [56]. IETF
has standardized approaches for secure inter-domain routing,
namely, RPKI [32], [17], [61] and BGPsec [37], for origin
and path authentication, respectively. RPKI is the prerequisite
for more comprehensive security solutions, including BGPsec.
The studies in [5], [20], [35] show that RPKI can already
provide signiﬁcant beneﬁts in improving inter-domain routing
security; path-security solutions (such as BGPsec) only pro-
vides moderate beneﬁts over RPKI, especially under partial
deployment [35], [15].
RPKI deployment and security. A number of studies [29],
[30], [62], [48], [19], [12], [25], [24], [6] investigate the
deployment status of RPKI, including the issuing of ROAs and
the adoption of ROV, and investigate how to improve adoption.
A recent study [14] uses 8 years’ data to show that after a
gradual start, RPKI has seen rapid adoption in the past two
years and misconﬁgurations have become rare. As a result,
the authors advocate using ROV to identify and drop invalid
announcements to increase routing security. The study in [57]
shows that ISPs (e.g., AT&T [1]) have started adopting ROV
to ﬁlter BGP announcements recently.
Several works study security concerns with RPKI, e.g., the
threat of misbehaving RPKI authorities [16], [22], [33]. These
concerns are orthogonal to our study.
2
II. MOTIVATING ROV++ BY USE CASES
Brief background on RPKI and ROV. RPKI facilitates
the issuing, distribution, and authentication of (signed) Route
Origin Authorizations (ROAs). A ROA R is a signed tuple
R = (R.p, R.o, R.l), indicating that the AS R.o is authorized
to be the origin of BGP announcements for preﬁx p ⊆ R.p,
unless p is longer than R.l (in which case, we say that p is too
speciﬁc). A BGP announcement A for preﬁx A.p with origin
A.o is considered valid if there is a properly-signed ROA R,
which indicates that A.o is authorized to announce A, i.e.,
A.o = R.o, A.p ⊆ R.p and len(A.p) ≤ R.l. In contrast,
an announcement A is invalid if a properly signed ROA R
binds the announcement’s preﬁx to some origin (i.e., A.p ⊆
R.p), but A.o (cid:54)= R.o or len(A.p) > R.l. The status of an
announcement is unknown if it is neither valid nor invalid. We
focus on preﬁxes covered by correct ROAs [32], [36], [19],
except for superpreﬁx in §III-D for the reasons explained there.
ROV: Sub-optimal security beneﬁts? While ROV pro-
vides origin authentication, it does not make the best use of
the ROAs to improve security. In particular, ROV often fails
to prevent data capture via subpreﬁx hijacks; furthermore, it
often hides the subpreﬁx hijacks, resulting in hidden hijacks
(see more details below), which are not visible from the routing
tables, and may mislead network operators and hijack defenses
to believe that the data is not hijacked. In this section, we
discuss several use cases that illustrate the suboptimal beneﬁts
of ROV, and how ROV++ provides better security beneﬁts
given the same ROAs. The detailed design of ROV++ and
deployment/implementation issues are deferred to §III and §VI.
Valley-free and other routing assumptions. We make
the standard simplifying assumptions about the policy used by
ASes. Most signiﬁcantly, we assume valley-free (Gao-Rexford)
routing is used by all ASes [18]. That is, for any given preﬁx,
an AS forwards the best announcement that it receives from its
customers to all the neighboring ASes (customers, providers
and peers);
then it
forwards the best announcement that it receives from a peer—
or, if none, from a provider—but only to its customers. If, for
some preﬁx, there is more than one announcement with the
“best” relationship, then the AS selects the one with a shorter
AS-path; if the length is also the same, the AS uses some
tie-breaking rule. While existing studies have shown that real-
world routing is not always valley-free [44], [38], [41], [4], we
adopt this simple policy as in most existing studies on routing
security (e.g. [13], [20], [19]) due to lack of better models.