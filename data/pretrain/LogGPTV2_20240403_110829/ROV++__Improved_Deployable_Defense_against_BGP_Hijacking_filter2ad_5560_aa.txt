# ROV++: Improved Deployable Defense against BGP Hijacking

**Authors:**
- Reynaldo Morillo, University of Connecticut, PI:EMAIL
- Justin Furuness, University of Connecticut, PI:EMAIL
- Cameron Morris, University of Connecticut, PI:EMAIL
- James Breslin, University of Connecticut, PI:EMAIL
- Amir Herzberg, University of Connecticut, PI:EMAIL
- Bing Wang, University of Connecticut, PI:EMAIL

## Abstract

We study and extend Route Origin Validation (ROV), the foundation for IETF's interdomain routing defenses. Our focus is on two critical hijack attacks: subprefix hijacks and non-routed prefix hijacks. We demonstrate that, with partial deployment, ROV provides limited security benefits. Additionally, we introduce a new attack, superprefix hijacks, which completely bypasses ROV's defense for non-routed prefix hijacks.

We present ROV++, an innovative extension of ROV, offering significantly improved security even with partial adoption. For example, with 5% uniform adoption among edge ASes (ASes with no customers or peers), ROV prevents less than 5% of subprefix hijacks, while ROV++ prevents more than 90%. ROV++ also effectively defends against non-routed prefix attacks and the novel superprefix attacks.

Our evaluation includes several ROV++ variants, all sharing the same defensive improvements, including "Lite" software-only versions deployable with existing routers. This evaluation is based on extensive simulations over the Internet topology.

We also highlight an important but often overlooked aspect of BGP: inconsistencies between the observable BGP path (control-plane) and actual traffic flows (data-plane). These inconsistencies are highly relevant for security and can lead to hidden hijacks.

## 1. Introduction

BGP, the Internet’s inter-domain routing protocol, lacks authentication mechanisms and is vulnerable to frequent misconfigurations and attacks, often with wide-ranging impacts [47], [58], [2], [60], [5]. The most common and effective attacks are prefix and subprefix hijacking, where a rogue or misconfigured autonomous system (AS) announces an IP address block (prefix or subprefix) not assigned to it.

The standardized defense against prefix and subprefix hijacks is Route Origin Validation (ROV), which is expected to be the first and most important application of the Resource Public Key Infrastructure (RPKI) [32], [7], [17], [61], [54]. ROV is also a prerequisite for BGPsec [37], the other standardized BGP defense, and for other inter-domain routing security mechanisms such as soBGP [63] and path-end validation [15].

Reports from the NIST RPKI monitor [6] and a recent longitudinal study [14] show that, despite a slow start, RPKI adoption—especially the issuance of routing certificates and Route Origin Authorizations (ROAs)—has increased since 2018. Misconfigurations have become rare, and there are proposals to further support correct deployments [24]. As a result, RPKI appears to be maturing, and ROV can now be deployed to filter and drop invalid announcements.

A recent study [57] shows that ROV has gone from non-existence to being used by more ISPs (e.g., AT&T [1]) to filter BGP announcements, leading to benefits for ASes using RPKI. However, ROV deployment remains slow, as shown in multiple works [29], [30], [62], [48], [19], [12], [25], [24]. Gilad et al. [19] have demonstrated that until ROV is widely deployed, its security benefits are limited.

Partially-deployed ROV offers minimal security benefits, especially against subprefix hijacks. Even adopting ASes see limited benefits unless almost all top ASes adopt ROV [19]. An adopting AS will never use an invalid announcement, but its traffic may still be hijacked via a non-adopting transit AS due to the preference for more-specific routes. This is referred to as data-plane hijack, where the control plane indicates a path to the correct origin, but the data plane is hijacked. Analyzing BGP routing data from RouteViews [49], we find approximately 343K prefixes shorter than /24 as of July 2020, susceptible to subprefix hijacks, endangering roughly 2B IP addresses, about half of the Internet. For ROV to be effective against data-plane subprefix hijacks, it requires widespread deployment, which is not expected soon.

We also study ROV's security against non-routed prefix hijacking, a threat commonly exploited for spam, phishing, and DDoS attacks [60]. We introduce a novel variant of non-routed prefix hijacks involving superprefix announcements. We show that ROV is less effective against non-routed prefix hijacks and completely fails against the superprefix variant.

### 1.1 Main Contributions

- **Design of ROV++**: An improved security extension to ROV (Section 3). We identify common scenarios where ROV fails to prevent data-plane hijacking and present corresponding extensions, ROV++ versions v1, v2, and v3, which prevent these hijacks.
- **Security Analysis of ROV++**: We show that an AS adopting ROV++ does not introduce additional hijacks beyond what would occur with BGP or ROV (Section 4).
- **Detailed Evaluation of ROV and ROV++**: Using a detailed BGP simulator, we perform extensive measurements of partial deployments of ROV and different ROV++ variants. Our experiments cover various scenarios, including subprefix hijacking, non-routed prefixes, and their impact on different categories of ASes (edge, top-tier, others). The results show significant benefits of ROV++, especially for early adoption scenarios (Section 5).
- **Non-routed Prefixes and Superprefix Attack**: We evaluate the effectiveness of ROV and ROV++ against non-routed prefix hijacking, including the novel superprefix hijack attack. ROV is ineffective against this attack, while all versions of ROV++ defend well, even with minimal deployment (Section 5).
- **ROV++ Lite**: A software-only, readily-deployable design (Section 6). To facilitate implementation and fast adoption, we designed ROV++ Lite versions, which can be implemented and deployed using existing routers. Our simulation results show that ROV++ Lite variants are nearly as effective as the non-Lite versions.
- **Recommendations**: Based on our results, we recommend deploying ROV++ v1 for routed prefixes and ROV++ v2 (or a variant) for non-routed prefix hijacks. The Lite version is recommended for both cases due to its ease of deployment and similar performance to the non-Lite version (Section 7).

### 1.2 Related Work

**Inter-domain Routing Security**: Security vulnerabilities in inter-domain routing have long been recognized [45], [28], [8], [23], [42], [52], and common misconfigurations have been documented [39]. Numerous security solutions have been proposed [34], [63], [21], [3], [26], [55], [64], [31], [9], [59], [15], [53], and their effectiveness compared [13], [20]. Techniques for detecting security problems, such as invalid multiple origin AS [65] and BGP serial hijackers [56], have also been proposed. The IETF has standardized approaches for secure inter-domain routing, including RPKI [32], [17], [61] and BGPsec [37] for origin and path authentication, respectively. Studies show that RPKI can provide significant benefits in improving inter-domain routing security, while path-security solutions like BGPsec offer moderate benefits, especially under partial deployment [35], [15].

**RPKI Deployment and Security**: Several studies [29], [30], [62], [48], [19], [12], [25], [24], [6] investigate the deployment status of RPKI, including the issuing of ROAs and the adoption of ROV, and how to improve adoption. A recent study [14] shows that after a gradual start, RPKI has seen rapid adoption in the past two years, with misconfigurations becoming rare. This study advocates using ROV to identify and drop invalid announcements to increase routing security. Another study [57] shows that ISPs (e.g., AT&T [1]) have started adopting ROV to filter BGP announcements. Security concerns with RPKI, such as misbehaving RPKI authorities [16], [22], [33], are orthogonal to our study.

## 2. Motivating ROV++ by Use Cases

### 2.1 Brief Background on RPKI and ROV

RPKI facilitates the issuing, distribution, and authentication of signed Route Origin Authorizations (ROAs). A ROA \( R \) is a signed tuple \( R = (R.p, R.o, R.l) \), indicating that the AS \( R.o \) is authorized to be the origin of BGP announcements for prefix \( p \subseteq R.p \), unless \( p \) is longer than \( R.l \). A BGP announcement \( A \) for prefix \( A.p \) with origin \( A.o \) is valid if there is a properly-signed ROA \( R \) indicating that \( A.o \) is authorized to announce \( A \), i.e., \( A.o = R.o \), \( A.p \subseteq R.p \), and \( \text{len}(A.p) \leq R.l \). An announcement \( A \) is invalid if a properly signed ROA \( R \) binds the announcement’s prefix to some origin, but \( A.o \neq R.o \) or \( \text{len}(A.p) > R.l \). The status of an announcement is unknown if it is neither valid nor invalid. We focus on prefixes covered by correct ROAs [32], [36], [19], except for superprefixes in Section 3-D for the reasons explained there.

### 2.2 Sub-optimal Security Benefits of ROV

While ROV provides origin authentication, it does not fully leverage ROAs to improve security. It often fails to prevent data capture via subprefix hijacks and can hide these hijacks, resulting in hidden hijacks that are not visible from routing tables. This section discusses several use cases illustrating the suboptimal benefits of ROV and how ROV++ provides better security given the same ROAs. Detailed design and deployment/implementation issues are deferred to Sections 3 and 6.

### 2.3 Valley-Free and Other Routing Assumptions

We make standard simplifying assumptions about the policy used by ASes. Most significantly, we assume valley-free (Gao-Rexford) routing [18]. That is, for any given prefix, an AS forwards the best announcement it receives from its customers to all neighboring ASes (customers, providers, and peers). If there is more than one "best" announcement, the AS selects the one with a shorter AS-path; if the length is the same, the AS uses a tie-breaking rule. While real-world routing is not always valley-free [44], [38], [41], [4], we adopt this simple policy as in most existing studies on routing security (e.g., [13], [20], [19]) due to the lack of better models.