EMPTY
SHOES
BACK
ATTHE
REDDOR
CImIZEN
CALLING
ALL
RAGICIANS
使用类似这样的图表，Tony可以确保团队中的每个人在任何时间都
能了解唱片现在处于什么阶段。这和MikeCohn的任务板有什么相似
之处？又有什么区别？
Tony：开始的时候，进度图上所有的想法都来自计划会议。它不是
白纸一张。每个人都参与了计划的制定。但是随着时间的推移，我
鼓励团队中每个人都要添加新的想法，把初始想法修改得更好。
427
---
## Page 429
Andrew：摇滚乐唱片是通过图表、进度图和目标来实现的，写下目
标并创建进度表，很多人在听到这些后可能都会感到吃惊。我想如
果很多人在发现自已不是唯一使用这些东西的人时会感到很轻松，
使用你制作那些优秀艺术品的工具，有时候会有助于创作过程，而
不是对创作造成损害。
Tony：任何一个涉及大量资金的事情都需要有组织，摇滚乐也是这
样。有一段时间大家可以全权自由处理，齐柏林飞船乐队（Led
Zeppelin）用可卡因做了一个天鹅的雕塑（费用算到了录音的预算
中）。但是这种纵容还不至于毁掉音乐行业。现在音乐行业的预算
必须最大限度地压缩并得到批准，因为我们要和视频游戏以及各种
其他媒体竞争。流行音乐在过去20年间并没有取得很高额的利润。
现在的孩子们有了更多吸引他们的东西。我想现在的唱片必须非常
有效地制作，特别是摇滚乐。
但这样是好的。如果人们问我：“如果我们有足够的钱，让你和一
帮人在工作室里待上7天，你能给我们做出些什么？”我会老实地告
一张唱片。”我可以和他们协商，争取更多的时间，但是如果他们
坚持要一张唱片，比如说有12首歌曲的唱片，那我会告诉他们我们
可以录制两首高质量的歌曲，其他的只能是凑数了，没有什么质量
可言。歌手珠儿（Jewel）的第一张唱片《PiecesofYou》就是这样
做出来的。他们把有限的预算全都用到一首歌曲《WhoWillSave
YourSoul》上，唱片中的其他歌曲主要来自她在俱乐部的现场表
演。在做项目的时候，必须诚实地考虑预算所带来的约束。如果在
中途的时候用完了钱，那可真是有好戏看了，你会名誉扫地。
Andrew：你是如何学到这些东西的？显然你做过很多系统，这种东
西如果不犯错误是学不到的。这肯定是一些需要从经验中学习的东
西。我敢肯定这不是从书上学来的。
Tony：二十几罗的人总想表现得很酷、很好，我想这是很典型的，
这种想法让我不愿意承担所有责任。最终我看到自已浪费了很多时
间，做出了糟糕的产品，因为我害怕说实话。
因为到了后来我对这种，怎么说呢，可能是儒弱这个词吧，我对这
种儒弱以及没有勇气说出事实而感到厌倦。但是在我那样做了之
后，我的感情完全爆发了。我的意思是我之后很难控制自己。后来
我不得不学着更得体地处理人际关系。
428
---
## Page 430
Andrew：但是那些图表——那是你提出来的吧？
Tony：我在20世纪80年代的时候创建了这种图表。我现在看到很多
人都在使用这种“公开"的图表了。团队中的人依赖于我个人的记录
来决定下一步做些什么，还有一些人自己也做记录。我想，为什么
不把所有的计划和想法都放到墙上让每个人都看到呢？第一次做的
时候取得了非常好的效果。现在，当我和同一位歌手再度合作的时
候，他们都希望看到图表！
我对图表有点狂热。我使用了刚才跟你说到过的倒排的日历。我在
做一种被称为“合成声音”的事情时也使用了图表。假设一个歌手把
一首歌曲唱了7遍，我有一个水平和垂直的坐标图，把那个人唱的
每个单词都放到上面，然后可以在8种声音中交叉参考。在我挑选
出唱得最好的句子、单词甚至是音节时，就能够构造出“完美"的声
音了。任何一个想参与声音构造的人都有一张这样的图，然后对选
择的结果进行比较。我在20世纪70年代早期就开始做“合成图”了，
现在很多歌手和音乐制作人都在以各种形式使用这个图表。
我发现那种交互的事情能够让团队真正地融合到一起。如果你在做
决策的时候能够让他们参与，他们会非常非常热心。不过因为我要
对最终项目的完工负全部责任，所以我有否决权。我使用的图表是
一个令人称奇的团队工具。
Andrew：这听起来非常有效。似乎你们找到了一个让项目可视化并
让整个团队都参与的方法。而且在实现的过程中似乎需要平衡每个
人的自尊。实际上，它让我想到了你需要对付在编程团队中看到的
很多个性问题。当你和程序员一起工作的时候，特别是明星程序
员，有时候会发现团队中最优秀的人同时也是团队中最不擅长社交
的人。除非你明确地让他们感到你值得尊重，否则他们是不会尊重
你的。这和你遇到的情形有一些类似的地方吗？
Tony：人类的思考方式很奇怪，有高度创造力的人社交技能一般都
不好，因为他们大部分的脑力都用到了高度创造力的事情上。他们
不注意观察他们的冲动爆发给别人造成什么影响，以及他们是如何
与其他人疏远的。他们看不到那些。这是个社会问题，但是这和一
个非常非常自私的小孩子并没有什么不同。我不想取笑那些有创造
力的人，但是常常地，他们在感情方面不比他们的社交技能强多
少。
429
---
## Page 431
他们常常变得很自我，像个小孩子，他们需要得到确认，你是爱他
们的。情况确实是这样。这就像是哭着问：“你爱我吗？”这是他们
想听到你说的。当然，现在他们长大成人了，你不能总是跟他们
说：“Jim，我爱你。"你必须以另外一种方式表达这个意思，而且应
当尽量公并表达对他们的欣赏。这可能意味着是在会议上要先和
Jim说说。你可以把他们都找到一个房间里，说：“我们来讨论一下
下个阶段。我想知道你觉得怎么样一—Jim？”Jim这时候不一定有什
么要说的，但是他会注意到他是第一个被征询意见的人。
听起来我有点傲慢，但是作为一个父亲，我掌握了如何对付孩子们
和不听指挥的人。和我一起工作过的乐队都是一些头脑清醒、明白
事理的人，但也有一两个妄自尊大的人。这是一种权势等级，是在
各种形式的社会交流中自然形成的。在成功的团队我们都认识到如
果没有“明星”将无法成为一个团队。幸运的是，真正聪明的“明星”
知道如果没有一个优秀的团队，他们将很难成功，甚至无法生存下
来。
我是一个有点名气的唱片制作人，但是“明星”的称号是不敢当的。
我必须成为团队中最清醒的人，带着我们行为不合常规的小组取得
辉煌的胜利。
Andrew：我自己也认识一些这样的人。在我职业生涯的早期，当我
担任一个小团队的首席程序员的时候，我的表现就是妄自尊大。这
都是我的原因。我在想，如果我能够对自已说说下面的话，我是否
能和周围的人相处得更好呢：“你知道吗？你对别人要求有点过高
了。我对别人不耐烦，不停地提要求，但是我那样做了，因为我那
样做，他们都忍耐了。"对于像我这种处于职业生涯早期的人，你
有什么建议呢，这样他们可以更容易地与周围的人打交道。
Tony：我想他们必须要了解这种任性与自私的做法对团队其他人带
来的影响。即使是团队中最能理解别人的人，对于孩子般的行为也
只能忍受到这种程度。
程序员必须意识到，他可能是一位优秀的程序员，但是在世界上的
芸芸众生中，还有其他优秀的程序员愿意在他离并后顶替他的位
置。在这个充满天才的世界上，任何一个团队都可能被替换掉。每
个人都有责任学习如何与其他人一起相处，就算是“明星”也不例
外。
430
---
## Page 432
你们是在与其他顶尖的团队竞争，竞争总是存在的。你不能让内部
有争吵。你不能让团队的明争暗斗破坏士气和团队生产率。一个态
度好的人会替换掉你。谁都可以被替代。
Andrew：在结束这次访谈之前，您能为那些优秀的音乐人、优秀的
程序员或者擅长任何一项工作的人提出一些建议吗？有些人在职业
上的下一步是朝着您现在的方向走，带领一个团队，或管理一个团
队，或确保工作很好地完成。您对他们有什么建议呢？
Tony：嗯，现在有太多让人分心的东西，让我们很难把精力集中在
所从事的事情上。我送给在计算机上制作音乐的音乐人的言是：
与真正的音乐技能相比，计算机技能并不很难获得。一个聪明点的
8岁的孩子就能够使用GarageBand软件，把一个圈拖到一个地方，
把另一个圈拖到另一个地方，这算不上什么本事。我的言是：
“放下鼠标，拿起吉他。”我们的危险是失去了集中注意力去掌握一
样东西的能力。各种诱惑太大，我们很容易迷失在溜冰场、视频游
戏和饮酒上一—很多人开始大量饮酒，从年龄还很小的时候就并始
了。但是历史上最伟大的音乐家都花了很长时间学习、练习并提高
自己。
我想即使你达到一定程度一—有很多年轻的音乐人都能够演奏12和
弦，可能认为这样就可以了。我的建议是你知道得越多、学习得越
多，你人生中成功的机会就越大。事实就是这样的。把你的闲暇时
间拿出来，多学点东西。为了制作更好的音乐，我自己也还在不断
地学习新东西。
1]新时代（NewAge）运动起源于加利福尼亚州。人们常常怀疑现
代西方物质社会公认的哲学，并从古老的传统中寻求更多精神上的
感知。20世纪80年代以来，这场运动以及背后的观念并称为“新时
代”。
撰稿人
ScotW.Ambler是IBM软件部的敏捷开发实践领导者，他与IBM全世
界的客户共同协作，以提升软件过程质量。他还是敏捷建模（Agile
Modeling,AM）、敏捷数据（AgileData,AD）、敏捷统一过程
（AgileUnifiedProcess,AUP）以及企业统一过程（Enterprise
UnifiedProcess,EUP）等方法论的创始人。Scott共完成过19本著作
（这里面既有他自己撰写的，也有与他人的合著），其中包括
431
---
## Page 433
《RefactoringDatabases》（数据库重构，Addison-Wesley
Professional出版社）、《AgileModeling》（敏捷建模：极限编程和
统一过程的有效实践，Wiley出版社）、《AgileDatabase
Techniques》（敏捷数据，Wiley出版社）、《TheObjectPrimer，
ThirdEdition》（TheObjectPrimer中文版（原书第3版），
Cambridge University Press）和 《The Enterprise Unified Process》
（PrenticeHall）。Scott现在也是《InformationWeek》的资深特约编
辑。他的个人主页是
http://www.ibm.com/software/rational/leadership/leaders/#scott，他的
“敏捷扩展"博客地址是
www.ibm.com/developerworks/blogs/page/ambler。
Scott Berkun是O'Reilly畅销书《MakingThings Happen》和《The
Myths of Innovation》的作者。（《MakingThings Happen》中文版名
为《项目管理之美》，是《项目管理艺术》[TheArtofProject
Management]的续作。）1994年至2003年，他在微软担任经理一职。
在这段时间里，他参与了InternetExplorer前五个版本的开发。2003
年至今，他转而成为独立作家和演说家。他的作品曾出现在《纽约
时报》、《华盛顿邮报》、《连线》杂志上，并曾在国家公共广播
电台（NationalPublicRadio）播出。他还曾在华盛顿大学教授一门
有关创新式思维的课程，目前为财富500强企业主办研讨会，传授
有关创新的内容；同时目前定期为《HarvardBusinessDigital》杂志
提供文章。现在，他在MSNBC和CNBC电视频道上频频露面，谈论
有关管理和创新式思维。他运作着一个广为流传的博客，其中包括
视频、博客和文章，地址是www.scotberkum.com/blog。
432