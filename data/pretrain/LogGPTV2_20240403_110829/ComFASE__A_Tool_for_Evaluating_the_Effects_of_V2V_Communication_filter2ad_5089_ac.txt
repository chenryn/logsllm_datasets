and observed no signiﬁcant differences in the results obtained
compared to those reported for when 3.0s was chosen.
We set the propagation delay to 60s for the DoS attacks,
which implies that all the messages are blocked until the end
of the simulation.
B. Result Classiﬁcation
We use deceleration proﬁles and collision events of the
vehicles to classify the results in ﬁve categories detailed in
this section. The deceleration proﬁles are chosen based on
previous studies of rear-end accidents [31].
• Non-effective: The injected attack has no effects on the
behaviour of the vehicles (i.e., identical speed proﬁles
as in the golden run) and the simulation ends with no
indication of failures.
• Negligible: The injected attack has modiﬁed the be-
haviour of at
least one of the vehicles. The change
of behaviour is negligible as the recorded maximum
deceleration is less than or equal to 1.53m/s2, which
is the maximum deceleration recorded in the golden run.
• Benign: The injected attack has modiﬁed the behaviour
of at least one of the vehicles, leading to a deceleration
value greater than 1.53m/s2 and less than or equal to
5m/s2. The safety implications of the change is con-
sidered to be benign as it does not lead to a deceleration
value greater than the maximum comfortable braking rate,
which is 5m/s2.
• Severe: We classify an experiment as severe if (i) a col-
lision occurs between the vehicles or (ii) when a vehicle
performs an emergency braking. The latter case refers to
when the injected attack has modiﬁed the behaviour of at
least one of the vehicles, leading to a deceleration value
greater than 5m/s2 and less than or equal to 8m/s2.
C. Experimental Results
1) Analyses of the Delay Attack Results: We performed
11250 experiments, modelling the delay attacks (25 attack-
StartTimes*15 attackValues*30 attackEndTimes=11250). This
resulted in 5923, 4941, and 386 experiments classiﬁed as
severe, benign, and negligible, respectively. The total time it
took to simulate the 11250 experiments and parse the logged
data was about 7 hours on a computer setup with AMD Ryzen
7 5800X 8-Core processor and 96GiB system memory.
Fig. 5 shows the classiﬁcation of results based on the
duration to which the system under test was exposed to attacks.
The ﬁgure shows that attacks with duration times greater than
5s are always classiﬁed as either benign or severe. Moreover,
the ﬁgure shows that exposing the target system to attacks
for a period longer than 4.0s affects the total number of
severe cases insigniﬁcantly. Note that, none of the experiments
are classiﬁed as non-effective. Moreover, all the severe cases
caused are as a result of vehicle collisions.
Fig. 5: Classiﬁcation of results w.r.t. the duration in which the
propagation delay attack is active.
Fig. 6: Classiﬁcation of results w.r.t. the propagation delay
values i.e., the length to which data is delayed.
We also analysed the injection results with respect to the dif-
ferent propagation delay (PD) values used in the experiments
(see Fig. 6).
For each PD value, a total of 750 experiments were con-
ducted (25 attackStartTimes*30 attackEndTimes=750). The
ﬁgure shows that, experiments with higher PD values result
in a higher number of severe cases. However, no signiﬁcant
differences are observed between the number of severe cases
caused for PD values larger than 2.2s. In fact, we also
conducted a set of experiments with PD values up to 5.0s and
observed the same behaviour. The results of the experiments
are also analysed with respect to the attackStartTimes. For each
attackStartTimes, a total of 450 experiments were conducted
(15 attackValues*30 attackEndTimes=450). The results are
presented in Fig. 7. The ﬁgure shows that the majority of
experiments are classiﬁed as severe when the initiation time
is lower than 17.2s or higher than 20.6s. The ﬁgure also shows
that, the number of severe cases changes drastically in between
attack start times of 19.4s and 20.2s.
In order to understand the results presented in Fig. 7, we
investigate the behaviour of vehicles driving in a sinusoidal
pattern illustrated in Fig. 4. By comparing these ﬁgures, we
observe that initiating attacks in periods where the lead vehicle
has a high acceleration rate could result in higher number of
severe cases. This is due to the fact that when the lead vehicle
decelerates, the deceleration data is delivered with a delay to
the other vehicles in the platoon causing vehicle collisions. The
other vehicles in the platoon still believe that the lead vehicle
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:18:05 UTC from IEEE Xplore.  Restrictions apply. 
190
of the delay experiments show that the likelihood of an attack
to cause a collision is higher when the acceleration rate of the
vehicles in the platoon is high. Note that, we only initiated
the attacks on one driving cycle of a platoon (17.0s-22.0s)
since the driving patterns (e.g., acceleration and speed) of the
vehicles in all successor cycles were the same (see Fig. 4). This
way, the results obtained could be used to estimate the severity
of attacks within the succeeding cycles. This also shows the
importance of scenario-based testing as the evaluation results
are tied to the scenario under investigation.
When it comes to the impact of an attack on the entire
trafﬁc, the results revealed that injections of attacks into the
Vehicle 2 could cause collisions of the Vehicle 3 and 4, thus,
an attacker could signiﬁcantly inﬂuence the behavior of the
surrounding trafﬁc by targeting only one vehicle.
The high sensitivity of the target platooning system to the
two attack types modeled using ComFASE is due to the
fact that our target communication model is not equipped
with any safety/security mechanisms. However, ComFASE is
capable of evaluating these systems regardless of whether
or not they are equipped with any mechanisms. The high
sensitivity of the target system also shows the importance
of having redundant component in these systems. This could
e.g., be provided through introduction of sensor models in
our simulation environment that monitors the distance between
vehicles, which in fact is one of our future research directions.
V. CONCLUSION AND FUTURE WORK
In this paper, we presented ComFASE, a tool that facilitates
injection of faults and attacks in the wireless channel of
vehicular communication systems. ComFASE is built upon
OMNeT++, SUMO and Veins simulators, which allows us
to study the safety implications of the injected faults and
attacks on the target vehicles as well as the surrounding trafﬁc.
In ComFASE, fault and attack models are implemented in
separate scripts, facilitating addition of new models. Moreover,
the tool runs batches of experiments automatically.
To evaluate ComFASE, we have injected delay and denial-
of-service attacks in a platooning scenario and showed the
usefulness of the tool. To this end, we conducted 11275 ex-
periments where 5948 of them resulted in collision incidents.
The results obtained also revealed the importance of attack’s
initiation time and duration as well as the vehicles’ driving
pattern in causing collision incidents.
As part of our future work, we plan to extend ComFASE
by modelling faults and attacks in the physical and application
layers as well as conducting jamming attacks in the wireless
channel of vehicular communication systems. Moreover, we
plan to integrate ComFASE with the INET simulator [33] [34]
which offers other communication protocols such as 4G and
5G to be able to evaluate scenarios other than platooning such
as, a teleoperation scenario. Artery and Vanetza are also other
potential simulators to be integrated into ComFASE. Artery
enables V2X simulations based on ETSI ITS-G5 protocols
and Vanetza has implemented the ETSI C-ITS protocol suite.
Fig. 7: Classiﬁcation of results w.r.t. the attack start time i.e.,
the point in time where the ﬁrst attack is injected.
has a high acceleration rate, while the lead vehicle has already
started to decelerate. The same line of justiﬁcation could be
used to explain the low number of severe cases caused for
experiments whose start times are between 19.4s and 20.2s.
The acceleration rate of the vehicles in this period is as low
as 0m/s2 causing a high number of benign cases.
Finally, we analysed the impact of the attacks on the
surrounding trafﬁc. To this end, we focused on the severe
cases, where the injected attacks cause collisions, and studied
the vehicle that is responsible for the collision, also known as
collider [32]. The result analysis shows that out of 5923 severe
cases, the target vehicle (Vehicle 2) is responsible for 65.4% of
the incidents, while Vehicle 3 and Vehicle 4 are responsible for
another 18.1% and 16.5% of the incidents, respectively. This
conﬁrms the previous studies that it is important to analyse
impact of the attack injections on surrounding vehicle when
only one vehicle is targeted.
2) Analyses of the DoS Attack Results: We perform 25 DoS
attack experiments, starting the attacks from 17.0s to 21.8s
where the start time of each experiment is 0.2s apart. The
results of the experiments show that all the experiments are
classiﬁed as severe leading to vehicle collisions. The results
are also analysed with respect to the vehicle that caused the
collision (collider vehicle). The vehicle under attack (Vehicle
2) caused 48% of the collision incidents, however, Vehicle
3 and 4 caused 40% and 12% of the incidents, respectively.
After investigating the attack start
times for the collision
experiments, we learned that if the attack gets activated in
times between 17.6s - 19.4s or 19.6s - 20s, it is Vehicle 3 and
Vehicle 4 that are responsible for the collision, respectively.
Moreover, for the remaining attackStartTimes, it is Vehicle 2
that is responsible for the collision.
3) Discussion: From a tester’s point of view, the results
presented in this section could be used when designing future
experiments. For example, the results obtained for experiments
with either shorter duration or propagation delay (PD) values
could be used to estimate the number of severe cases for
experiments with larger duration and PD values, respectively.
As with higher PD values all experiment results saturates to
only collision incidents.
When it comes to the start time of an injection, the results
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:18:05 UTC from IEEE Xplore.  Restrictions apply. 
191
ACKNOWLEDGMENT
This work was supported by VALU3S project, which has
received funding from the ECSEL Joint Undertaking (JU) un-
der grant agreement No 876852. The JU receives support from
the European Union’s Horizon 2020 research and innovation
programme and Austria, Czech Republic, Germany, Ireland,
Italy, Portugal, Spain, Sweden, Turkey.
REFERENCES
[1] R. Rajkumar, I. Lee, L. Sha, and J. Stankovic, “Cyber-physical systems:
The next computing revolution,” in Design Automation Conference,
2010, pp. 731–736.
[2] Volvo models warn each other of slippery roads and hazards. https:
//www.media.volvocars.com/global/en-gb/media/pressreleases/251381/.
(accessed: 05.09.2021).
[3] R. Svenningsson, J. Vinter, H. Eriksson, and M. T¨orngren, “MODIFI:
A MODel-Implemented Fault Injection Tool,” in Computer Safety,
Reliability, and Security, E. Schoitsch, Ed. Berlin, Heidelberg: Springer
Berlin Heidelberg, 2010, pp. 210–222.
[4] B. Sangchoolie, P. Folkesson, and J. Vinter, “A study of the interplay
between safety and security using model-implemented fault injection,”
in 2018 14th European Dependable Computing Conference (EDCC).
IEEE, 2018, pp. 41–48.
[5] S. R¨osch, S. Ulewicz, J. Provost, and B. Vogel-Heuser, “Review of
model-based testing approaches in production automation and adjacent
domains-current challenges and research gaps,” Journal of Software
Engineering and Applications, 2015.
[6] R. Rana, M. Staron, C. Berger, J. Hansson, M. Nilsson, and F. T¨orner,
“Increasing efﬁciency of iso 26262 veriﬁcation and validation by com-
bining fault injection and mutation testing with model based devel-
opment,” in International Conference on Software Engineering and
Applications, vol. 2. SCITEPRESS, 2013, pp. 251–257.
[7] United Nations Economic Commission for Europe. https://unece.org/.
(accessed: 08.12.2021).
[8] United Nations Economic Commission for Europe. https://wiki.unece.
org/pages/viewpage.action?pageId=63310525. (accessed: 08.12.2021).
[9] P. A. Lopez, M. Behrisch, L. Bieker-Walz, J. Erdmann, Y.-P. Fl¨otter¨od,
R. Hilbrich, L. L¨ucken, J. Rummel, P. Wagner, and E. Wießner,
“Microscopic Trafﬁc Simulation using SUMO,” in The 21st IEEE
International Conference on Intelligent Transportation Systems.
IEEE,
2018. [Online]. Available: https://elib.dlr.de/124092/
[10] OMNeT++ Simulation Models
and Tools.
https://omnetpp.org/
download/models-and-tools. (accessed: 14.07.2021).
[11] D. Eckhoff and C. Sommer, “A Multi-channel IEEE 1609.4 and
802.11p EDCA model for the Veins framework,” in Proceedings of 5th
ACM/ICST international conference on simulation tools and techniques
for communications, networks and systems: 5th ACM/ICST international
workshop on OMNet++.(Desenzano, Italy, 19-23 March, 2012). OM-
NeT, 2012.
[12] M. Maleki and B. Sangchoolie, “SUFI: A Simulation-based Fault
Injection Tool for Safety Evaluation of Advanced Driver Assistance
Systems Modelled in SUMO,” in 2021 17th European Dependable
Computing Conference (EDCC), 2021, pp. 45–52.
[13] ——, “Simulation-based Fault Injection in Advanced Driver Assistance
Systems Modelled in SUMO,” in 2021 51st Annual IEEE/IFIP Interna-
tional Conference on Dependable Systems and Networks - Supplemental
Volume (DSN-S), 2021, pp. 70–71.
[14] M. Segata, S. Joerer, B. Bloessl, C. Sommer, F. Dressler, and R. L.
Cigno, “Plexe: A platooning extension for Veins,” in 2014 IEEE Vehic-
ular Networking Conference (VNC).
IEEE, 2014, pp. 53–60.
[15] M. Tiloca, G. Dini, F. Racciatti, and A. Stagkopoulou, SEA++: A Frame-
work for Evaluating the Impact of Security Attacks in OMNeT++/INET.
Cham: Springer International Publishing, 2019, pp. 253–278. [Online].
Available: https://doi.org/10.1007/978-3-030-12842-5 7
[16] L. S´anchez-Casado, R. A. Rodr´ıguez-G´omez, R. Mag´an-Carri´on, and
G. Maci´a-Fern´andez, “NETA: Evaluating the Effects of NETwork At-
tacks. MANETs as a Case Study,” in Advances in Security of Information
and Communication Networks, A. I. Awad, A. E. Hassanien, and
K. Baba, Eds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2013,
pp. 1–10.
[17] B. Mitchell.
802.11 Standards Explained.
https://www.lifewire.
com/wireless-standards-802-11a-802-11b-g-n-and-802-11ac-816553.
(accessed: 23.07.2021).
[18] “IEEE Standard for Information technology– Local and metropoli-
tan area networks– Speciﬁc requirements– Part 11: Wireless LAN
Medium Access Control (MAC) and Physical Layer (PHY) Speciﬁca-
tions Amendment 6: Wireless Access in Vehicular Environments,” IEEE
Std 802.11p-2010 (Amendment to IEEE Std 802.11-2007 as amended
by IEEE Std 802.11k-2008, IEEE Std 802.11r-2008, IEEE Std 802.11y-
2008, IEEE Std 802.11n-2009, and IEEE Std 802.11w-2009), pp. 1–51,
2010.
[19] M. N. Tahir and M. Katz, “Performance evaluation of IEEE 802.11p,
LTE and 5G in connected vehicles for cooperative awareness,”
Engineering Reports, vol. n/a, no. n/a, p. e12467. [Online]. Available:
https://onlinelibrary.wiley.com/doi/abs/10.1002/eng2.12467
[20] J. Govil and J. Govil, “4G Mobile Communication Systems: Turns,
Trends and Transition,” in 2007 International Conference on Conver-
gence Information Technology (ICCIT 2007), 2007, pp. 13–18.
[21] S. Kumari and B. Singh, “5G standard : The next generation wireless
Interdisciplinary Mathematics,
[Online]. Available: https:
communication system,” Journal of
vol. 23, no. 1, pp. 275–283, 2020.
//doi.org/10.1080/09720502.2020.1721922
[22] D. Eckhoff, C. Sommer, and F. Dressler, “On the necessity of accurate
ieee 802.11p models for ivc protocol simulation,” in 2012 IEEE 75th
Vehicular Technology Conference (VTC Spring), 2012, pp. 1–5.
[23] “IEEE Trial-Use Standard for Wireless Access in Vehicular Environ-
ments (WAVE) - Multi-Channel Operation,” IEEE Std 1609.4-2006, pp.
1–82, 2006.
[24] R. van der Heijden, T. Lukaseder, and F. Kargl, “Analyzing attacks on
cooperative adaptive cruise control (CACC),” in 2017 IEEE Vehicular
Networking Conference (VNC), 2017, pp. 45–52.
[25] F. Boeira, M. P. Barcellos, E. P. de Freitas, A. Vinel, and M. Asplund,
“Effects of colluding Sybil nodes in message falsiﬁcation attacks for
vehicular platooning,” in 2017 IEEE Vehicular Networking Conference
(VNC), 2017, pp. 53–60.
[26] M. Iorio, F. Risso, R. Sisto, A. Buttiglieri, and M. Reineri, “Detecting
Injection Attacks on Cooperative Adaptive Cruise Control,” in 2019
IEEE Vehicular Networking Conference (VNC), 2019, pp. 1–8.
[27] J. Lastinec and M. Keszeli, “Analysis of Realistic Attack Scenarios in
Vehicle Ad-hoc Networks,” in 2019 7th International Symposium on
Digital Forensics and Security (ISDFS), 2019, pp. 1–6.
[28] D. S. Berger, F. Gringoli, N. Facchi, I. Martinovic, and J. Schmitt,
“Gaining insight on friendly jamming in a real-world ieee 802.11
network,” in Proceedings of the 2014 ACM Conference on Security and
Privacy in Wireless & Mobile Networks, ser. WiSec ’14. New York,
NY, USA: Association for Computing Machinery, 2014, p. 105–116.
[Online]. Available: https://doi.org/10.1145/2627393.2627403
[29] M. Lichtman, J. D. Poston, S. Amuru, C. Shahriar, T. C. Clancy, R. M.
Buehrer, and J. H. Reed, “A communications jamming taxonomy,” IEEE
Security Privacy, vol. 14, no. 1, pp. 47–54, 2016.
[30] V. Milan´es and S. E. Shladover, “Modeling cooperative and autonomous
adaptive cruise control dynamic responses using experimental data,”
Transportation Research Part C: Emerging Technologies, vol. 48, pp.
285–300, 2014.
[31] S. E. Lee, E. Llaneras, S. Klauer, and J. Sudweeks, “Analyses of rear-
end crashes and near-crashes in the 100-car naturalistic driving study
to support rear-signaling countermeasure development,” DOT HS, vol.
810, p. 846, 2007.
[32] SUMO Collisions Outputs. https://sumo.dlr.de/docs/Simulation/Output/
Collisions.html. (accessed: 09.12.2021).
[33] L. M´esz´aros, A. Varga, and M. Kirsche, INET Framework. Cham:
Springer International Publishing, 2019, pp. 55–106. [Online]. Available:
https://doi.org/10.1007/978-3-030-12842-5 2
[34] Veins INET Subproject. https://veins.car2x.org/documentation/modules/
#veins inet. (accessed: 14.07.2021).
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:18:05 UTC from IEEE Xplore.  Restrictions apply. 
192