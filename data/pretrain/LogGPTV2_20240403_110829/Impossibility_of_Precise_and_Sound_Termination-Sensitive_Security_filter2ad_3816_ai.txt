2, τ
1, τ
(cid:6)(cid:15) l
(cid:2)(cid:2)
τ
i
where (cid:10)P, μi(cid:11)(Ii)(cid:2) (cid:10)I
see
By
To
e:
x
(cid:2) (cid:10)skip, μi[x (cid:13)→ μi(e)](cid:11).
Proof. By structural induction on P . We prove this lemma by
structural induction on P .
:=
semantics
Case
(cid:10)x := e, μi(cid:11) (cid:2)
that
item (1) holds we have to prove that (cid:3) = (cid:3) and
Γ (cid:27) μ1[x (cid:13)→ μ1(e)] =l μ2[x (cid:13)→ μ2(e)]. The ﬁrst statement
is trivially true. For the second statement notice that μi(e)
depends only on low variables of memory μi because of the
(cid:2) (cid:15) l and
typing constraint τe (cid:15) τ
the fact that τe is an upper bound of all levels of variables
occurring in e. Hence, because the language is deterministic
and hypothesis Γ (cid:27) μ1 =l μ2 we know that μ1(e) = μ2(e).
Thus Γ (cid:27) μ1[x (cid:13)→ μ1(e)] =l μ2[x (cid:13)→ μ2(e)]. Item (2.a) is
satisﬁed because Pi = skip.
(cid:10)input x from ch, μi(cid:11) ch(vi))
hypothesis τ
Hence, since by hypothesis I1 =l
input
semantics
(cid:2) (cid:10)skip, μi[x (cid:13)→ vi](cid:11). By typing
(cid:2) = Γ(ch) and by hypothesis Γ(ch) (cid:15) l.
I2, we know that
(cid:2) and the hypothesis that τ
from
Case
ch:
By
x
511
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:28:58 UTC from IEEE Xplore.  Restrictions apply. 
e
Case
output
ch: By
to
semantics we
(cid:2) (cid:10)skip, μi(cid:11). To see that
v1 = v2. Hence, since Γ (cid:27) μ1 =l μ2, we have
Γ (cid:27) μ1[x (cid:13)→ v1] =l μ2[x (cid:13)→ v2] and item (1) holds.
Item (2.a) is satisﬁed because P1 = P2 = skip .
have
(cid:10)output e to ch, μi(cid:11) ch(μi(e))
item
(1) holds we have to prove that ch(μ1(e)) =l ch(μ2(e))
and Γ (cid:27) μ1 =l μ2. The second statement holds by lemma
hypothesis. For the ﬁrst statement we consider two cases. If
Γ(ch) (cid:15) l then we need to show that μ1(e) = μ2(e). This
follows from the typing constraint τe (cid:15) τ
(cid:2) and the hypothesis
(cid:2) (cid:15) l and the fact that τe is an upper bound of all levels
that τ
of variables occurring in e. We will show that the subcase
Γ(ch) (cid:6)=(cid:15) l is impossible: by typing rule OUT τ
(cid:2) = Γ(ch).
(cid:2) (cid:15) l. Item (2.a) is
But this contradicts the hypothesis that τ
satisﬁed because P1 = P2 = skip .
Case if e then P1 else P2: By semantics, we have
(cid:10)if e then P1 else P2, μi(cid:11) (cid:2)
(cid:2) (cid:10)Pji , μi(cid:11) with j1, j2 ∈ {1, 2}.
Item (1) holds because (cid:3) = (cid:3) holds trivially and Γ (cid:27) μ1 =l
μ2 holds by hypothesis. Typability of Pji follows by the typing
hypotheses of rule IF: Γ, τ (cid:27) Pi
(cid:2)(cid:2)
i , (Γ(cid:2)(cid:2)
(cid:2)(cid:2)(cid:2)
i ) .
i , τ
: τ
= P1 and Pj2
If μ1(e) = μ2(e) then because the language is deterministic
= Pj2 (option (2.a) of the
and by semantics we have Pj1
lemma hypotheses) and we conclude. We will show that since
the if is typable as low μ1(e) (cid:6)= μ2(e) is not an option. Without
= P2.
loss of generality assume that Pj1
Suppose μ1(e) (cid:6)= μ2(e). Since the language is deterministic
and μ1, μ2 are equal in the low variables Γ (cid:27) μ1 =l μ2, it
is necessary the case that e depends on some high variable
in order to have μ1(e) (cid:6)= μ2(e). Hence, by typability of e
(hypothesis of the typing rule IF), we have that τe (cid:6)(cid:15) l. Hence,
by typing rule constraint τe (cid:15) τ
(cid:2)(cid:2)
2 (where
(cid:2) is the type of P = if e then P1 else P2) , we conclude that
τ
(cid:2) (cid:6)(cid:15) l. But this is a contradiction since by lemma
(cid:6)(cid:15) l and τ
(cid:2)(cid:2)
τ
(cid:2) (cid:15) l.
i
hypothesis τ
(cid:2)(cid:2)
2 and τ
(cid:2) = τ
1 (cid:17)τ
(cid:2)(cid:2)
1 (cid:17)τ
(cid:2)(cid:2)
, (Γ(cid:2)
, τP ) and
hypothesis
Case while e do P1: By semantics we have four cases
to analyze. For all the cases item (1) holds trivially since
memories do not change and they are equivalent by hypothesis,
and (cid:3) = (cid:3). We focus on item (2) for each subcase.
(cid:27)
, τe (cid:16) τP ) then y typing hypotheses
lemma
, (Γ(cid:2)
(cid:2)
while e do P1 : τ
of while we have that:
(a) ΓP (cid:27) e : τe and
, τP (cid:27) P1 : τ
(b) Γ(cid:2)
(c) Γ (cid:15) Γ(cid:2) and
(d) τ (cid:15) τP and
(e) τe (cid:15) τ
Subcase (cid:10)while e do P1, μ1(cid:11) (cid:2)
(cid:2) (cid:10)P1; while e do P1, μ1(cid:11)
and (cid:10)while e do P1, μ2(cid:11) (cid:2)
(cid:2) (cid:10)skip, μ2(cid:11). We will prove that
this case is impossible. By semantics μ1(e) (cid:6)= μ2(e). Since
the language is deterministic and μ1, μ2 are equal in the low
variables Γ (cid:27) μ1 =l μ2, it is necessary the case that e depends
on some high variable ((cid:6)(cid:15) l) in order to have μ1(e) (cid:6)= μ2(e).
Hence, by typability of e, hypothesis (a) of typing, we have
that τe (cid:6)(cid:15) l since τe is an upper bound of all variables read in
e. Hence, by typing rule constraint τe (cid:15) τ
1 (cid:17) τ
(cid:2)(cid:2)
(cid:2)(cid:2)
2
(cid:2) and τ
(cid:2) = τ
Γ, τ
By
(cid:2).
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)(cid:2)
i
, (Γ(cid:2)
, τP (cid:27) P1 : τ
, τe(cid:16) τP (cid:27) P1τ
, τe (cid:16) τP (cid:27) P1; while e do P1 : τ
(cid:2) is the type of P = if e then P1 else P2) , we
(where τ
(cid:2) (cid:6)(cid:15) l. But this is a contradiction
(cid:6)(cid:15) l and τ
conclude that τ
(cid:2) (cid:15) l.
since by lemma hypothesis τ
Subcase (cid:10)while e do P1, μ2(cid:11) (cid:2)
(cid:2) (cid:10)P1; while e do P1, μ2(cid:11) and
(cid:10)while e do P1, μ1(cid:11) (cid:2)
(cid:2) (cid:10)skip, μ1(cid:11). Symmetric to the previous
case.
Subcase (cid:10)while e do P1, μ1(cid:11) (cid:2)
(cid:2) (cid:10)P1; while e do P1, μ1(cid:11)
and (cid:10)while e do P1, μ2(cid:11) (cid:2)
(cid:2) (cid:10)P1; while e do P1, μ2(cid:11). We are
in option (2a) of the conclusion of the lemma. We will prove
, τe (cid:16) τP ). In
that Γ(cid:2)
order to type P1; while e do P1 using rule SEQ, it is enough
, τe(cid:16) τP (cid:27)
, τe(cid:16) τP ) and Γ(cid:2)
, (Γ(cid:2)
to prove that Γ(cid:2)
, τe (cid:16) τP ).
while e do P1 (cid:27) τ
, (Γ(cid:2)
(cid:2)
, τe(cid:16)τP (cid:27) P1τ
, τe(cid:16)τP ): by hypothesis
(cid:2)
We ﬁrst prove Γ(cid:2)
, (Γ(cid:2)
(a) we have Γ(cid:2)
, (Γ(cid:2)
, τP ). Suppose that P1 is not
typable with termination effect τP (cid:16) τe. Hence, τe (cid:6)≤ τP . Then
there must be a rule where the constraint on the termination
level fails. Without loss of generality, say it is the output rule
so that the termination level is not less or equal than the
channel level τP (cid:16) τe (cid:6)(cid:15) Γ(ch). But then the type τ
(cid:2) of P1 has
to be at most Γ(ch) (or smaller). Without loss of generality,
say it is Γ(ch). But by constraint (e) τe (cid:15) τ
(cid:2), thus τe (cid:15) Γ(ch).
Two cases follows:
1. τP ≤ τe : then τP (cid:16) τe = τe and we reach a contradiction
since we have τP (cid:16) τe (cid:6)(cid:15) Γ(ch) and τe (cid:15) Γ(ch).
2. τP (cid:6)≤ τe and τe (cid:6)≤ τP : by hypothesis (e) τe (cid:15) τ
(cid:2) and by
Lemma XI.2 we have that τP ≤ τ
(cid:2) since τP is the termination
(cid:2). Hence τP (cid:16) τe ≤
level of hypothesis (b). Then τP (cid:16) τe ≤ τ
Γ(ch). This is a contradiction since P1 is not typable because
, τe (cid:16) τP )
τP (cid:16) τe (cid:6)(cid:15) Γ(ch). Hence Γ(cid:2)
, τe (cid:16) τP (cid:27) P1τ
(cid:2)
, (Γ(cid:2)
, τe (cid:16)
, (Γ(cid:2)
, τP (cid:16)
τP ). it is enough to show that the typing judgment Γ(cid:2)
τe (cid:27) while e do P1 : τ
, τ (cid:16) τe (cid:16) τP ) holds. We show
that each hypothesis of the while typing rule is satisﬁed: By
(a) we have that ΓP (cid:27) e : τe. By the previous case, we have
, τP (cid:16) τe (cid:27) P1 : τ
Γ(cid:2)
, τP ). The third hypothesis of the
typing rule is trivially satisﬁed since we are using the same
environment in the hypothesis and the conclusion. By (c) the
last hypothesis is satisﬁed, so we conclude.
e do P1, μ1(cid:11) (cid:2)
Subcase
(cid:10)while e do P1, μ2(cid:11) (cid:2)
(cid:2) (cid:10)skip, μ2(cid:11)
Program skip is always typable and we are in option 1 of
Case P1; P2. By the SEQ rule ∃Γ(cid:2)(cid:2)
, η, Γ(cid:2)(cid:2)(cid:2)
(cid:2) such
, τ3 (cid:27) P2 : τ2, η
(cid:2)
Subcase τ1 (cid:15) l We can apply inductive hypothesis on P1
Subcase τ1 (cid:6)(cid:15) l We prove this case by structural induc-
tion on P1. Base cases follow directly from Lemma HIGH.
(cid:2)
Subsubcase P1 = while e do P
1 Since P1 is typable as
high we can have μ1(e) (cid:6)= μ2(e). Assume that μ1(e) =
(cid:6)= 1. Then by semantics (cid:10)P 1; P 2, μ1(cid:11) (cid:2)
1 and μ2(e)
(cid:10)P
(cid:2) (cid:10)skip; P2, μ1(cid:11)
(cid:2)(cid:2)(cid:2) (cid:27) P1 : τ1, (Γ(cid:2)(cid:2)(cid:2)
, τ
(cid:2) = τ1 (cid:17) τ2. There are two cases to analyze.
item 2, so we conclude.
that Γ(cid:2)(cid:2)
where τ
, τe (cid:16) τP (cid:27) while e do P1 (cid:27) τ
1; P2, μ1(cid:11) (cid:10)P 1; P 2, μ2(cid:11) (cid:2)
(cid:2)
(cid:2)(cid:2)
, τ
, τ3) and Γ(cid:2)(cid:2)(cid:2)
We now prove: Γ(cid:2)
(cid:2)
1; while e do P
(cid:2) (cid:10)skip, μ1(cid:11)
to conclude.
(cid:10)while
, (Γ(cid:2)
, (Γ(cid:2)
, τ1, η
and
(cid:2)
(cid:2)
(cid:2)
(cid:2)
512
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:28:58 UTC from IEEE Xplore.  Restrictions apply. 
(cid:2)
1; while e do P
Hence we are in case (2.b) of the lemma and we have to see
(cid:2)
that skip and P
1 are typable as high. Program
(cid:2)
skip is always typable as high and P
1 is typable
as high because P1 is, using a reasoning similar to case while
of this proof.
(cid:2)
1; while e do P
Subsubcase P1 = if e then P
Similar to previous
(cid:2)
1 else
case.
Lemma XI.4 (HIGH EFFECT). Let Γ, τ (cid:27) P ; P
(cid:2) such that
(cid:6)(cid:15) l. Then ∃Γ(cid:2)
Γ, τ (cid:27) P : τ
(cid:2)
(cid:2) st
, τ
, τ
Γ(cid:2)
: τ
, τ
(cid:2)(cid:2)) and τ
(cid:2)(cid:2) (cid:15) l
, τ
(cid:2) and τ
(cid:2)
, (Γ(cid:2)
(cid:2)(cid:2)
, η
(cid:2) (cid:27) P
, η
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)
(cid:2)
(cid:2)
, μ
(cid:2)
1, I
Proof. By induction on length of the typing derivation.
Proposition XI.1 (Hl). Let Γ1 (cid:27) P1 and Γ2 (cid:27) P2
be typable as high, and let Hl be the relation con-
sisting of pairs ((cid:10)I1, P1, μ1, Γ1(cid:11),(cid:10)I2, P2, μ2, Γ2(cid:11)) such that
Γ1 (cid:27) μ1 =l μ2 ∧ Γ2 (cid:27) μ1 =l μ2 ∧ l|I1 = l|I2 ∧
2, O1, O2.Pi, μi(Ii)(cid:2) (cid:10)I
i, Oi(cid:11). Then Hl is a Bl relation.