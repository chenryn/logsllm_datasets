Cardoso, J., “Benchmarking a Semantic Web Service Architecture for Fault-tolerant B2B Integration”, International Workshop on Dynamic
Distributed Systems (IWDDS), In conjunction with the ICDCS 2006, The 26th International Conference on Distributed Computing Systems July 4-7,
2006 - Lisboa, Portugal. IEEE Computer Society. ISBN: 0-7695-2541-5, ISSN: 1545-0678.
Benchmarking a Semantic Web Service Architecture for Fault-tolerant B2B
Integration
Jorge Cardoso
Department of Mathematics and Engineering
University of Madeira, 9050-390 Funchal, Portugal
PI:EMAIL
Abstract overcome complex issues such as fault-tolerance,
availability, and scalability.
With the development and maturity of Service- Many organizations currently use, or will be soon
Oriented Architectures (SOA) to support business-to- using, Web services to manage a broad range of
business transactions, organizations are implementing distinct distributed applications, such as insurance
Web services to expose their public functionalities claim processing, bank loan management, and
associated with internal systems and business healthcare processes. Applications can be more
processes. In many business processes, Web services oriented to support or enhance existing business
need to provide is a high level of availability, since the processes, to increase competitive advantage, to reduce
globalization of the Internet enables business partners costs, and also to manage critical infrastructures. In
to easily switch to other competitors when services are many cases, Web services are of vital significance to
not available. Along with the development of SOA, the organizations that govern them and the downtime of
considerable technological advances are being made services can easily incapacitate the completion of
to use the semantic Web to achieve the automated running business processes. For example, it is not
processing and integration of data and applications. advisable for an insurance company to delay a
This paper describes the implementation and customer’s insurance claim processing due to a Web
benchmarking of an architecture that semantically service failure. It is also not acceptable to delay a
integrates Web services with a peer-to-peer patient’s treatment due to a Web service malfunction.
infrastructure to increase service availability through High availability, fault tolerance, and scalability are
fault-tolerance. aspects of intra- and inter-organizational Web service-
based distributed applications that represent important
1. Introduction research areas for SOA.
Current Web service specifications [1] do not
provide support to handle service failures and prevent
Organizations are using the architectural benefits of
service downtime. The mechanisms provided by SOAP
Service-Oriented Architectures (SOA) to coherently
and WSDL help handling errors raised by applications,
map business processes with enterprise applications.
but no mechanism exists for handling system failures
Using Web services it is possible to support the
[2]. At the SOAP messaging layer, the  tag
externalization of atomic business capabilities by
is provided to inform a client about errors encountered
making business interfaces more transparent. As
while processing an invocation message. At the WSDL
organizations move to business-to-business (B2B)
description layer, the  tag provides a way
models, supported by SOA and Web services, they
to output the result of a remote operation invocation
must develop solutions to cope with failures that can
error.
cause systems downtime in the supply-chain. The
The purpose of our work is to describe the design,
consequences of failures can ripple across multiple
implementation, and benchmarking analysis of a fault-
organizations and can have significant financial costs.
tolerant architecture called Whisper, which provides a
Therefore, providing highly reliable B2B systems is an
transparent approach to enable a significant increase in
important goal. Web service computing is still in an
the availability of Web services whilst at the same time
evolving state and much research needs to be done to
have a minimal impact on B2B distributed
applications’ complexity. Whisper system uses 2.1. Heterogeneity and Integration Challenges
emerging technologies, such as the semantic Web, Web
services, and peer-to-peer (P2P) networks, for building The problems that might arise when integrating Web
the next-generation service oriented systems. services and JXTA infrastructures due to several types
The system that we have developed to increase the of heterogeneity are very similar to the problems
fault tolerance of Web services differs from previous known within the distributed database systems
work [2, 3] since we explore the features and community (e. g. [5, 6]). Heterogeneity occurs when
characteristics of peer-to-peer networks to develop a there is a disagreement about the meaning,
transparent and scalable mechanism to increase the interpretation, or intended use of the same or related
availability of Web services. Another major difference data. As with distributed database systems, four types
is related to the approach that we have adopted to of information heterogeneity [7, 8] may arise in
enable the integration and interoperation of Web Whisper: system heterogeneity, syntactic heterogeneity,
services and P2P networks, which uses semantics and structural or schematic heterogeneity, and semantic
ontologies. heterogeneity.
While Whisper deals with all these types of
2. Web service and P2P semantic heterogeneity, it tackles in particular semantic
Integration heterogeneity. Approaches to the problems of semantic
heterogeneity should equip heterogeneous,
autonomous, and distributed software systems with the
Our approach to Web service fault-tolerance
ability to share and exchange information in a
consists of an infrastructure based on a service-oriented
semantically consistent way. The semantic integration
architecture, named Whisper, which increases the
of Web services and the P2P infrastructure is achieved
availability of Web services by using a fault-tolerant
using an ontology representation language (OWL)
mechanism built on peer-to-peer networks and the
which provides a key element to deal with semantic
semantic Web. Whisper architecture integrates
heterogeneity. Integrating two distinct architectural
semantic Web services and a semantic P2P
models requires, among other types of integration,
infrastructure (Figure 1).
dealing with semantic data integration and semantic
Web Services are based on a centralized model and
functional integration.
primarily focused on standardizing messaging formats
and communication protocols. P2P computing, on the
other hand, is based on a decentralized model. 2.2. Semantic Data Integration
The decentralized model gives a natural approach to
develop self-healing and resilience architectures Web services and JXTA networks use different
through redundancy. This is precisely how Whisper standardized technology. As a result, incompatibility
achieves fault tolerance. We have selected the JXTA arises from semantic differences of data schema. In a
[4] infrastructure to implement fault-tolerant B2B application, Web services and JXTA peers take a
mechanisms to insure a high degree of availability of set of data inputs and produce a set of data outputs.
peers that actively communicate with Web services. Web services and JXTA specifications use only
syntactic and structural details of the input/output data.
Each data schema is set up with its own structure and
Semantic Semantic Data Integration
Integration Semantic Functional Integration vocabulary. To allow the integration of Web services
and JXTA peers to exchange data at the semantic level,
the semantics of the input/output data have to be taken
Student Information Register Student into account. Hence, we annotated the data of Web and
Semantic Web B-peer B
service JXTA peer services using ontological concepts [9, 10].
The added semantics can be later used in matching the
Student Information Register Student
SWS-Proxy B-peer A semantics of the input/output of Web services and
JXTA peer services when exchanging data, which was
Semantic Semantic P2P not possible when considering only syntactic
Web services Infrastructure
information.
Figure 1. Semantic Integration
2.3. Semantic Functional Integration information alone originates a high recall and low
precision during the search [12].
Web service and JXTA peer specifications only
defines syntactic characteristics. The signature of an Web server
operation provides only the syntactic details of the
input data, output data, and operation’s name. Web service Student Information
Semantic Web
Technological solutions to integrate Web services and Client service
JXTA peer networks using operations signatures are
Student Information
not sufficient since services’ functionality cannot be SWS-Proxy
precisely expressed. As a step towards representing the
functionality of services, in Whisper, Web services and Service XYZ
Semantic Web
JXTA peers are annotated with functional semantics. service
Service XYZ
2.4. Other Integration Issues SWS-Proxy
While our the Whisper system only deals with Figure 2. Semantic Web services and SWS-
semantic data integration and functional integration, an proxies
other integration issue that can be considered and
explored is semantic QoS integration [11]. Whisper supports the notion of semantic Web
QoS Semantics. After discovering a JXTA peer services. Semantic Web services are the result of the
whose data and functional semantics match the evolution of the syntactic definition of Web services
semantics of the required Web service, the next step is and the semantic Web. With the help of ontologies, the
to select the most suitable peer. Each peer can have semantics or the meaning of service data and
different quality aspect and hence selection involves functionality can be explicated. As a result, integration
locating the peer that provides the best quality criteria can be accomplished in an automated way and with a
match. This demands management of QoS metrics for superior degree of success.
peers. For organizations, being able to characterize In Whisper, Web service are semantically annotated
Web services and peers based on QoS has several following the WSDL-S specification [9, 13]. JXTA
advantages. It allows organizations to translate their peer groups are also semantically annotated. The
vision into their business processes more efficiently, semantic annotation of Web services and JXTA peer
since services can be designed according to QoS groups allows their semantic integration at the data and
metrics. functional levels. WSDL-S establishes mapping
between WSDL descriptions and ontological concepts.
3. Semantic Web services and SWS-Proxies The idea of establishing mappings between service,
task, or activity descriptions and ontological concepts
was first presented in [10]. The following example
3.1. Semantic Web services
illustrates how a WSDL specification, from our initial
scenario, is mapped to ontological concepts.
To facilitate the understanding of Whisper
architecture we describe a running scenario which is
partially illustrated in Figure 2. The application shown 
the information to the client. The actual
implementation of this service is not associated with 
Traditional Web services are described using the 
WSDL, which provide only syntactical information. 
However, WSDL poses a problem during the automatic
discovery of peer groups to carry out the actual The WSDL-S specification indicates that the Web
execution of a Web service, since the use of syntactic service supplies the one operation
‘StudentInformation’. This operation uses ontological 4. B-Peer Groups, B-Peers, and Semantic
concepts to annotate the input, output, and action. The Advertisements
ontological concepts are expressed in the ontology
http://dme.uma.pt/jcardoso/StudentMng.owl#, which is
Redundancy has long been used as a means of
specified using OWL.
increasing the availability of distributed systems, with
key components being replicated to protect against
3.2. SWS-Proxies