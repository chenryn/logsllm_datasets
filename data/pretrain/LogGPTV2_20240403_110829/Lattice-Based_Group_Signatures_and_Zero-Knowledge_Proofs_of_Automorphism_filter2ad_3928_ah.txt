the result follows.
Lemma 6.5. Let A be a PPT algorithm with advantage ε in the traceability game with GSetup∗.
√
Let h be a bound on the number of hash queries made by A. Let BS ≥ 4κB1 + 12κ
√
dB1 + 2κB2 +
6ds. There exists B a challenger for the M-SISq2,1,4,BS such that:
dξB1 + κ2(1 + 3
6
(cid:16) ε
Proof. Formally B is given a matrix xT :=(cid:2)x1, x2, x3, x4
mod q2 and (cid:107)y(cid:107) ≤ BS, w.l.o.g we consider x =(cid:2)x1, x2, x3, 1(cid:3) instead since with high probability
− 2−λ(cid:17)
(cid:3) ∈ R4
q2 and must output y s.t xT y = 0
(λ) ≥ ε
q2
√
d)2
AdvM SIS
ds + κ2
√
B
h
one of the xi will have an inverse.
2 := (0, 1, x3) during setup, since x1, x2, x3 are uniform in Rq2 this
B will set a := (x1, x2) and aT
does not change the distribution of GSetup∗. When asked signing queries, B runs the signing
algorithm honestly, when asked corrupt queries B outputs the corresponding secret key. Suppose
29
the adversary A outputs a forgery z := (t, t(cid:48), Π, (u, v)) by programming the random oracle with
two diﬀerent challenges B will be able to extract ¯z ∈ R3, ¯id ∈ Zq2, ¯z(cid:48) ∈ R3, ¯zs ∈ R7, ¯zB ∈ R8,
¯c ∈ ¯C such that:
¯ct = Com(¯c ¯id; ¯z)
¯ct(cid:48) = Com(¯c ¯idδ; ¯z(cid:48))
 = B¯zB
 u
v
t1
¯c
¯cu = vT ¯zs
forking lemma of [BN06], B will be able to do this with probability at least ε(cid:0) ε
such that (cid:107)(¯z, ¯z(cid:48), ¯zB)(cid:107) ≤ 2B ∧ (cid:107)¯z1, ¯z2(cid:107) ≤ 2B1 ∧ (cid:107)¯z3(cid:107) ≤ 2B2, with (¯z1, ¯z2, ¯z3) := ¯z. Using the
h − 2−λ(cid:1). Let
2 ¯z + ¯ci∗
2 ¯z(cid:48) + ¯ci∗δ
(˜r, ˜c) :=Dec(u, v), the parameters set in section 8 are such that, by soundness of the veriﬁable
encryption scheme, with overwhelming probability ˜r¯c = ¯z˜c over the integers, which implies that
Open(z) ∈ Zq2 i.e. the forgery opens to an identity in Zq2 and not ⊥.
Since i∗ is taken uniformly at random in GSetup∗, z will open to this identity with probability
1/q2. Suppose that z opens to i∗. Then
¯ct2 = aT
¯ct(cid:48)
2 = aT
(cid:3) ¯zs = ¯cu
2] − i∗gT | aT
(cid:3) ¯zs = ¯c2u
If we multiply the third equation by ¯c and replace ¯c[t2 | t(cid:48)
2 ¯z(cid:48)] | ¯c¯aT
(cid:21)
(cid:2)aT | bT + [t2 | t(cid:48)
(cid:2)¯caT | ¯cbT + [aT
(cid:20) ¯c¯z1 + R¯c¯z2
¯c¯z3 −(cid:2)¯z ¯z(cid:48)(cid:3) ¯z2
(cid:2)aT | ¯aT
(cid:3) ˜z = ¯c2u
(cid:3) si∗ = u.
thus consider that si∗ was sampled after receiving the forgery, conditioned on(cid:2)aT | b | aT
Let s∗ := (cid:2)si∗
(cid:3), the probability that ¯cs∗ = ˜z is negligible. Finally we have a solution
(cid:3). Using the bounds on the extracted values and
˜z − ¯cs∗ to the M-SIS problem deﬁned by(cid:2)aT | aT
Since A has to output a valid forgery this means that he has never obtained the key ski∗, we can
2 ¯z | aT
2] we get:
the distribution of s∗ we have the following bound on the norm of the solution:
+ Rsi∗
| si∗
3
Then
2
2
1
2
˜z =
2
2
Let
2
(cid:107)˜z − ¯cs∗(cid:107) ≤ (cid:107)˜z(cid:107) + 2κ(cid:107)s∗(cid:107)
√
≤ 2κ(cid:107)z1(cid:107) + 6κ
√
+ κ2(1 + 3
d)(2
√
≤ 4κB1 + 12κ
dB1 + 2κB2 + 6
√
√
+ κ2(1 + 3
d)2
d(cid:107)¯z2(cid:107) + κ(cid:107)¯z3(cid:107) + 3
√
6ds
√
ds) + κ2
√
√
dξB1
√
dξ (cid:107)¯z2(cid:107)
6ds
ds + κ2
√
dξB1 which we will consider when setting
The largest terms in this solution are by far 2κB2 and 6
the parameters in section 8.
30
We ﬁrst note that since aT
in vT s(cid:48) = u and thus consider vT ∈ R1×6
and s(cid:48) ∈ R6 such that vT s(cid:48) = u. The gain in proof size
obtained by discarding one element of this equation may seems negligible at ﬁrst but it is in fact
rather important because the last three coeﬃcients of s(cid:48) will be much larger than the other four.
We also recall the matrices needed for the proof of veriﬁable encryption:
q2
2
t :=
2
q2
si1
si2
i
iδ
2
s(cid:48) =
t2
1
t(cid:48)
2
= Ar +
t(cid:48) :=
= Ar(cid:48) +
∈ Rq1 × Rq2
(cid:3) ∈ R1×7
(cid:21)
(cid:21)
(cid:20)0
(cid:20)t1
(cid:20) 0
(cid:20)t(cid:48)
(cid:21)
(cid:21)
∈ Rq1 × Rq2
(cid:3) | aT
vT =(cid:2)aT | bT +(cid:2)t2 t(cid:48)
 ∈ R7
si3 −(cid:2)r r(cid:48)(cid:3) si2
2 =(cid:2)0 1 a(cid:48)
(cid:3), we can ignore the 5th coeﬃcient of vT (corresponding to 0)
 pa p 0 0 0 0 0 0
B2 =(cid:2)01×5 aT
(cid:3) ∈ R1×8
(cid:21)
(cid:20)B1
 , for rB =
 ∈ R4×8
pb1 0 p 0 0 1 0 0
pb2 0 0 p 0 0 1 0
pb3 0 0 0 p 0 0 1
 r
BrB =
B =
B2
B1 =
Q
1
q1
u mod Q
v1 mod Q
v2 mod Q
v3 mod Q
t1 mod q1
e1
e2
r
7 The Full Non-Interactive Proof
We give the full non-interactive zero-knowledge proof that the signer will output. We only consider
the parameter choice made in section 8. The user i ∈ Zq2 will use the following elements for his
proof:
Which are such that :
An important point for proof size will be rejection sampling. After doing rejection sampling
Rej(z, a, ξ) on a vector z we know by lemma 2.2 that all of its coeﬃcients will be statistically
close to Dξ with ξ ≥ 11(cid:107)a(cid:107), meaning that for very imbalanced vectors it would be worthwhile
to do rejection sampling multiple times. For example if a = (a1, a2) with (cid:107)a2(cid:107) >> (cid:107)a1(cid:107) then
by doing two rejection samplings Rej(z1, a1, ξ1) and Rej(z2, a2, ξ2) one obtains a smaller vector
z = (z1, z2) at the cost of having acceptation probability 1/9, since the proof is non-interactive
aborts have a minimal impact and this approach can help reduce the proof size signiﬁcantly. We
will use two rejection samplings for s(cid:48) ∈ R6 in which the last two coeﬃcients will be much larger
than the other four (because they correspond to a product of si and r, r(cid:48)). We will thus write s(cid:48) as
s(cid:48) = (s(cid:48)
2) ∈ R4 × R2. We can now write the full zero-knowledge proof of the veriﬁer.
1, s(cid:48)
31
Algorithm 2 ΠSign
Require: Message M ∈ {0, 1}∗.
Public information: t, t(cid:48), vT , B, δ =(cid:4)√
Private information: r, r(cid:48), i, s(cid:48), rB
q(cid:7) , σ−1, σ5.
ξ
ξ
ξ1
ξ2
1 y
1 y(cid:48)
1 )y−1
2 y(cid:48)
1: y, y(cid:48), y−1, y5 ← D3
2: yB ← D8
3: ys1 ← D4
4: ys2 ← D2
5: ys = (ys1 , ys2 )
6: w1 := aT
7: w(cid:48)
1 := aT
8: w1,−1 := σ−1(aT
9: w1,5 := σ5(aT
1 )y5
2 y − aT
10: w2 := δaT
2 y − σ−1(a2)y−1
11: w2,−1 := aT
2 y − σ5(a2)y5
12: w2,5 := aT
13: ws := vT ys
14: wB := ByB
15: c := H(t, t(cid:48), v, B, δ, σ−1, σ5, w1, w(cid:48)
16: z := rc + y
17: z(cid:48) := r(cid:48)c + y(cid:48)
18: z−1 := σ−1(r)c + y−1
19: z5 := σ5(r)c + y5
20: zs1 := s(cid:48)
1c + ys1
21: zs2 := s(cid:48)
2c + ys2
22: zB := rBc + yB
23: if Rej((z, z(cid:48), z−1, z5, zB), (rc, r(cid:48)c, σ−1(r)c, σ5(r)c, rBc), ξ)∧ Rej(zs1 , s(cid:48)
24:
25: else
26:
27: end if
Output z = (z, z(cid:48), z−1, z5, zs1 , zs2 , zB, c)
Restart
1, w1,−1, w1,5, w2, w2,−1, w2,5, ws, wB, M )
1c, ξ1)∧Rej(zs2 , s(cid:48)
2c, ξ2) then
Algorithm 3 Verify
Require: Message M ∈ {0, 1}∗.
Public information: t, t(cid:48), vT , B, δ =(cid:4)√
Signature Π = (z, z(cid:48), z−1, z5, zs1 , zs2 , zB).
q(cid:7) , σ−1, σ5.
1 z − t1c
1: w1 := aT
1 z(cid:48) − t(cid:48)
2: w(cid:48)
1 := aT
1c
1 )z−1 − σ−1(t1)c
3: w1,−1 := σ−1(aT
1 )z5 − σ5(t1)c
4: w1,5 := σ5(aT
2 z − aT
2 z(cid:48) − (δt2 − t(cid:48)
5: w2 := δaT
2 z − σ−1(aT
6: w2,−1 := aT
2 z − σ5(aT