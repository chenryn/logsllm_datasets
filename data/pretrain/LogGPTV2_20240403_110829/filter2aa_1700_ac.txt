  more	
  vulnerabiliIes	
  than	
  there	
  are	
  CVEs.	
  Here’s	
  one	
example:	
  ARP	
  cache	
  poisoning.	
  (It	
  achieved	
  CVE	
  candidate	
  status	
  in	
  1999,	
  and	
  never	
got	
  beyond	
  that.)	
  CVSS	
  is	
  focused	
  on	
  vulns	
  that	
  have	
  sploits,	
  and	
  so	
  is	
  missing	
  what	
  I	
think	
  is	
  the	
  most	
  important	
  part	
  of	
  the	
  picture.	
CVSS	
  needs	
  a	
  way	
  to	
  disInguish	
  whether	
  the	
  vuln	
  is	
  exploitable	
  over	
  the	
  Internet	
  vs.	
over	
  an	
  internal	
  network,	
  and	
  then	
  focus	
  energy	
  on	
  cataloging	
  internal	
  vulns.	
CVSS	
  needs	
  combinatorics	
  –	
  some	
  way	
  to	
  show	
  how	
  a	
  chain	
  of	
  “low-­‐risk”	
vulnerabiliIes	
  can	
  lead	
  to	
  a	
  major	
  problem.	
  Something,	
  perhaps,	
  like	
  an	
  upside-­‐
down	
  a`ack	
  tree.	
(I	
  don’t	
  believe	
  CAPAC	
  is	
  the	
  answer	
  here.	
  The	
  “a`ack	
  pa`erns”	
  covered	
  by	
  CAPAC	
are	
  not	
  the	
  “chain	
  of	
  separate	
  a`acks”	
  I’m	
  speaking	
  of	
  here,	
  but	
  are	
  instead	
something	
  like	
  “the	
  pa`ern	
  all	
  SQL	
  injecIon	
  a`acks	
  follow”.)	
21	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
Our	
  new	
  goals	
  are	
  using	
  principles	
  of	
  stealth	
  to	
  mimic	
  real	
  a`acks.	
  Real	
  a`acks	
  are	
blended,	
  and	
  exﬁltrate	
  data.	
Safety	
  is	
  implied	
  –	
  we	
  sort	
  of	
  get	
  it	
  for	
  free,	
  since	
  you	
  can’t	
  be	
  stealthy	
  is	
  safety	
  isn’t	
  a	
concern.	
  But	
  we	
  get	
  other	
  beneﬁts	
  from	
  safety.	
  We	
  get	
  to	
  expand	
  our	
  pentest	
  scope	
to	
  a	
  realisIc	
  class	
  of	
  targets,	
  since	
  we’ll	
  be	
  able	
  to	
  convince	
  our	
  clients	
  that	
  safety	
  is	
the	
  ﬁrst	
  priority.	
Think	
  of	
  the	
  airsoP	
  guns	
  and	
  biodegradable	
  ammo	
  used	
  by	
  today’s	
  OPFORs.	
  We	
don’t	
  want	
  to	
  take	
  down	
  the	
  people	
  we’re	
  trying	
  to	
  train.	
  But	
  on	
  the	
  other	
  hand	
  you	
do	
  work	
  together	
  to	
  set	
  realisIc	
  boundaries.	
  You	
  don’t	
  run	
  an	
  OPFOR	
  exercise	
  in	
  an	
urban	
  area.	
22	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
Yes,	
  shells	
  are	
  cool.	
  But	
  we	
  shouldn’t	
  be	
  geyng	
  paid	
  pentest	
  consulIng	
  dollars	
  to	
produce	
  shells.	
23	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
Blackhats	
  don’t	
  heart	
  shells.	
  They	
  heart	
  credit	
  cards.	
  They	
  heart	
  RSA	
  secrets.	
  They	
heart	
  product	
  designs.	
  They	
  heart	
  data	
  that	
  can	
  be	
  moneIzed.	
Those	
  of	
  you	
  who	
  heart	
  shells	
  may	
  be	
  thinking	
  “why	
  try	
  to	
  make	
  pentests	
  more	
  like	
actual	
  a`acks?”	
•  Because	
  doing	
  so	
  places	
  the	
  focus	
  back	
  on	
  the	
  data	
•  Because	
  doing	
  so	
  allows	
  your	
  incident	
  responders	
  to	
  see	
  more	
  realisIc	
  data	
•  Because	
  we	
  want	
  the	
  pentesters	
  scope	
  equivalent	
  to	
  the	
  blackhats	
  scope	
  (which	
we	
  get	
  by	
  sIcking	
  to	
  the	
  rule	
  of	
  “safety	
  ﬁrst”)	
24	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
Of	
  course	
  I’m	
  not	
  alone	
  in	
  calling	
  for	
  more	
  realisIc	
  penetraIon	
  tesIng.	
  Much	
  of	
  my	
thinking	
  on	
  this	
  topic	
  has	
  been	
  inﬂuenced	
  by	
  HD	
  Moore’s	
  and	
  Valsmith’s	
  classes	
  on	
“TacIcal	
  ExploitaIon”.	
  I’m	
  not	
  sure	
  when	
  they	
  started	
  these	
  classes	
  up,	
  but	
  they	
presented	
  on	
  it	
  at	
  DEF	
  CON	
  15.	
  HD	
  carried	
  on	
  this	
  theme	
  is	
  his	
  talk	
  at	
  SECTOR	
  2010.	
NoIce	
  what	
  these	
  guys	
  say	
  about	
  “exploits”	
  –	
  or	
  what	
  I’m	
  calling	
  “sploits”.	
25	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
Valsmith	
  brings	
  this	
  up	
  again	
  in	
  2011,	
  and	
  irks	
  Dave	
  Aitel	
  enough	
  to	
  make	
  him	
respond.	
Valsmith	
  points	
  out	
  how	
  the	
  exploits	
  he	
  favors	
  –	
  logic	
  ﬂaws,	
  bad	
  protocol	
  design	
  and	
such	
  –	
  have	
  a	
  much	
  longer	
  shelf-­‐life	
  than	
  sploits	
  have.	
  This	
  is	
  because	
  sploits	
  get	
patched.	
  Because	
  memory	
  corrupIon	
  bugs	
  are	
  relaIvely	
  easy	
  to	
  patch	
  versus	
protocol	
  design	
  issues.	
  This	
  lines	
  up	
  nicely	
  with	
  one	
  of	
  the	
  recurring	
  themes	
  from	
  the	
SpiderLabs	
  Global	
  Security	
  Report:	
  by	
  focusing	
  on	
  exploits,	
  instead	
  of	
  sploits,	
  we	
  are	
frequently	
  taking	
  advantage	
  of	
  ancient	
  ﬂaws,	
  like	
  ARP	
  and	
  NetBIOS.	
  Oh,	
  and	
passwords.	
Haron	
  Meer’s	
  talk	
  from	
  44Con	
  is	
  a	
  good	
  example	
  of	
  someone	
  arguing	
  explicitly	
  for	
real-­‐world	
  penetraIon	
  tesIng	
  *and*	
  the	
  use	
  of	
  sploits.	
  But	
  I	
  don’t	
  want	
  the	
  debate	
to	
  revolve	
  around	
  the	
  “sploits	
  are	
  good”	
  vs	
  “sploits	
  are	
  bad”	
  argument.	
  What	
  I’m	
arguing	
  for	
  is	
  “safety	
  ﬁrst”,	
  so	
  if	
  you	
  can	
  convince	
  me	
  your	
  sploit	
  won’t	
  knock	
  over	
  my	
target,	
  I’ll	
  happily	
  use	
  it.	
  Meer’s	
  soluIon	
  is	
  for	
  sploits	
  is	
  to	
  be	
  able	
  to	
  play	
  them	
  like	
  a	
trump	
  card	
  in	
  a	
  hybrid	
  table-­‐top	
  exercise.	
  His	
  reasoning	
  stems	
  from	
  his	
  analysis	
  of	
the	
  economics	
  of	
  0days,	
  but	
  it	
  works	
  just	
  a	
  well	
  if	
  your	
  concern	
  is	
  stealth	
  and	
  safety.	
26	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
28	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
29	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
30	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
31	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
32	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
33	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
34	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
35	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
36	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20	
37	
7/29/12	
Trustwave	
  SpiderLabs	
DEF	
  CON	
  20