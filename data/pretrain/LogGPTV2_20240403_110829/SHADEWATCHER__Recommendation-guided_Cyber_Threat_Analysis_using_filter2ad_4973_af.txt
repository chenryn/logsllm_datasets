[93], record-and-replay systems [9], [94], and application
log fusing [39], [95], [96]. Although the scope of SHADE-
WATCHER is different from these solutions, both noisy record
reduction and accurate causality tracking help improve the
quality of system entity interactions for cyber threat analysis.
Forensic investigation and intrusion detection are the ul-
timate objectives of system auditing. Recent studies have
attempted to facilitate attack forensics by prioritizing causal-
ity tracking [10], [24], improving threat queries [97]–[99],
and abstracting high-level behaviors [31]. Moreover, current
attack detection approaches can be roughly categorized into
three directions: statistical analysis
[11], [21], speciﬁcation
matching [16], [17], [19] and learning-driven prediction [22],
[73], which we elaborate on in § II-B.
Knowledge Graph-based Recommendation. Recommenda-
tions play an important role in a wide range of user-oriented
applications to capture user preference on items. As a prevalent
solution, collaborative ﬁltering extracts behavioral patterns
of users from historical user-item interactions to infer user
preference [28], [100]. Going beyond the interaction data, re-
searchers introduce a knowledge graph (KG), which offers rich
content relatedness among items and supplements behavioral
similarity among users to enhance the recommendation per-
formance. Current work on KG-based recommendation falls
into three research lines: 1) embedding-based methods [55],
[101], which focus on ﬁrst-order connectivity in a KG and
derive knowledge-aware embeddings [33], [52] as the contents
of items to enrich item representations; 2) path-based methods,
which consider higher-order connectivity in the KG and extract
multi-hop paths connecting the target user and items by brute-
force searching [102], meta-path matching [103], or rein-
forcement learning [104]; 3) GNN-based methods [29], [30],
which employ graph neural network (GNN)’s information
propagation and aggregation mechanisms to encode higher-
order connectivity into the representations of users and items.
By identifying different-order connectivities in audit records,
SHADEWATCHER provides the ﬁrst recommendation system
that detects cyber threats via predicting the preferences of
system entities on interactions.
XI. CONCLUSION
In this paper, we present a recommendation-guided cyber
threat detection system, SHADEWATCHER. It takes the ﬁrst
step to bring the beneﬁts of recommendations to audit record
analysis. By exploiting ﬁrst-order and high-order information
in audit records, SHADEWATCHER models preferences of
a system entity on its interactive entities and recommends
adversarial interactions. We evaluate SHADEWATCHER against
two datasets of real-life APT campaigns and simulated cyber-
attacks. Results show that SHADEWATCHER detects threats
with high accuracy and 0.332% and 0.137% false alarm rates.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:13:26 UTC from IEEE Xplore.  Restrictions apply. 
501
ACKNOWLEDGEMENT
We thank the anonymous reviewers for their insightful
comments. We also thank Kaihang Ji, Zijun Yin, Zhaoying
Li, and Sihao Diao for feedback on early drafts of this
paper. Some of the experiments were conducted using the
infrastructure of National Cybersecurity R&D Laboratory,
Singapore. This research is supported by the National Research
Foundation, Singapore under its Industry Alignment Fund –
Pre-positioning (IAF-PP) Funding Initiative. Any opinions,
ﬁndings and conclusions or recommendations expressed in this
material are those of the authors and do not reﬂect the views
of National Research Foundation, Singapore.
REFERENCES
[1] “Equifax Information Leakage,” https://en.wikipedia.org/wiki/Equifax.
[2] “SolarWinds: How Russian spies hacked the Justice, State, Treasury,
Energy and Commerce Departments,” https://www.cbsnews.com/news/
solarwinds-hack-russia-cyberattack-60-minutes-2021-02-14/,
2021,
online; Accessed 17 August 2021.
[3] “Datadog: Modern monitoring & security,” https://www.datadoghq.
com/, 2021, online; Accessed 5 May 2021.
[4] “Logrhythm,” https://logrhythm.com, [n.d.], online; Accessed 9 March
2021.
[5] “Splunk,”
https://docs.splunk.com/Documentation/CIM/4.19.0/User/
SplunkAuditLogs, 2020, online; Accessed 5 May 2021.
[6] Z. Xu, Z. Wu, Z. Li, K. Jee, J. Rhee, X. Xiao, F. Xu, H. Wang, and
G. Jiang, “High ﬁdelity data reduction for big data security dependency
analyses,” in ACM CCS, 2016.
[7] A. Gehani and D. Tariq, “Spade: support for provenance auditing in
distributed environments,” in Proceedings of the 13th International
Middleware Conference, 2012.
[8] A. Bates, D. J. Tian, K. R. Butler, and T. Moyer, “Trustworthy whole-
system provenance for the linux kernel,” in USENIX Security, 2015.
[9] Y. Ji, S. Lee, E. Downing, W. Wang, M. Fazzini, T. Kim, A. Orso, and
W. Lee, “Rain: Reﬁnable attack investigation with on-demand inter-
process information ﬂow tracking,” in ACM CCS, 2017.
[10] Y. Liu, M. Zhang, D. Li, K. Jee, Z. Li, Z. Wu, J. Rhee, and P. Mittal,
“Towards a timely causality analysis for enterprise security.” in NDSS,
2018.
[11] W. U. Hassan, S. Guo, D. Li, Z. Chen, K. Jee, Z. Li, and A. Bates,
“Nodoze: Combatting threat alert fatigue with automated provenance
triage.” in NDSS, 2019.
[12] W. U. Hassan, D. Li, K. Jee, X. Yu, K. Zou, D. Wang, Z. Chen,
Z. Li, J. Rhee, J. Gui et al., “This is why we can’t cache nice
things: Lightning-fast threat hunting using suspicion-based hierarchical
storage,” in ACSAC, 2020.
[13] S. M. Milajerdi, R. Gjomemo, B. Eshete, R. Sekar, and V. Venkatakrish-
nan, “Holmes: real-time apt detection through correlation of suspicious
information ﬂows,” in IEEE Security and Privacy, 2019.
[14] W. U. Hassan, A. Bates, and D. Marino, “Tactical provenance analysis
for endpoint detection and response systems,” in IEEE Security and
Privacy, 2020.
[15] X. Jiang, A. Walters, D. Xu, E. H. Spafford, F. Buchholz, and Y.-
M. Wang, “Provenance-aware tracing ofworm break-in and contamina-
tions: A process coloring approach,” in IEEE ICDCS, 2006.
[16] M. N. Hossain, S. M. Milajerdi, J. Wang, B. Eshete, R. Gjomemo,
R. Sekar, S. Stoller, and V. Venkatakrishnan, “Sleuth: Real-time attack
scenario reconstruction from cots audit data,” in USENIX Security,
2017.
[17] M. N. Hossain, S. Sheikhi, and R. Sekar, “Combating dependence
explosion in forensic analysis using alternative tag propagation seman-
tics,” in IEEE Security and Privacy, 2020.
[18] B. Zong, X. Xiao, Z. Li, Z. Wu, Z. Qian, X. Yan, A. K. Singh,
and G. Jiang, “Behavior query discovery in system-generated temporal
graphs,” in VLDB, 2015.
[19] S. M. Milajerdi, B. Eshete, R. Gjomemo, and V. Venkatakrishnan,
“POIROT: Aligning attack behavior with kernel audit records for cyber
threat hunting,” in ACM CCS, 2019.
[20] S. Wang, Z. Chen, X. Yu, D. Li, J. Ni, L.-A. Tang, J. Gui, Z. Li,
H. Chen, and S. Y. Philip, “Heterogeneous graph matching networks
for unknown malware detection.” in IJCAI, 2019.
[21] X. Han, T. Pasquier, A. Bates, J. Mickens, and M. Seltzer, “Unicorn:
Runtime provenance-based detector for advanced persistent threats,” in
NDSS, 2020.
[22] X. Han, X. Yu, T. Pasquier, D. Li, J. Rhee, J. Mickens, M. Seltzer, and
H. Chen, “Sigl: Securing software installations through deep graph
learning,” in USENIX Security, 2021.
[23] Q. Wang, W. U. Hassan, D. Li, K. Jee, X. Yu, K. Zou, J. Rhee, Z. Chen,
W. Cheng, C. Gunter et al., “You are what you do: Hunting stealthy
malware via data provenance analysis,” in NDSS, 2020.
[24] A. Alsaheel, Y. Nan, S. Ma, L. Yu, G. Walkup, Z. B. Celik, X. Zhang,
and D. Xu, “Atlas: A sequence-based learning approach for attack
investigation,” in USENIX Security, 2021.
[25] S. Rule, “SIEM rules ignore bulk of MITRE ATT&CK framework,”
https://www.scmagazine.com/news/network-security/siem-rules-
ignore-bulk-of-mitre-attck-framework-placing-risk-burden-on-users,
2021, online; Accessed 10 March 2021.
[26] T. van Ede, H. Aghakhani, N. Spahn, R. Bortolameotti, M. Cova,
A. Continella, M. van Steen, A. Peter, C. Kruegel, and G. Vi-
gna, “DeepCASE: Semi-Supervised Contextual Analysis of Security
Events,” in IEEE Security and Privacy, 2022.
[27] X. He and T.-S. Chua, “Neural factorization machines for sparse
predictive analytics,” in ACM SIGIR, 2017.
[28] X. Wang, X. He, M. Wang, F. Feng, and T.-S. Chua, “Neural graph
collaborative ﬁltering,” in ACM SIGIR, 2019.
[29] X. Wang, X. He, Y. Cao, M. Liu, and T.-S. Chua, “Kgat: Knowledge
graph attention network for recommendation,” in ACM KDD, 2019.
[30] X. Wang, T. Huang, D. Wang, Y. Yuan, Z. Liu, X. He, and T.-S.
Chua, “Learning intents behind interactions with knowledge graph for
recommendation,” in ACM WWW, 2021.
[31] J. Zeng, Z. L. Chua, Y. Chen, K. Ji, Z. Liang, and J. Mao, “Watson:
Abstracting behaviors from audit logs via aggregation of contextual
semantics,” in NDSS, 2021.
[32] “MITRE TA0010: Exﬁltration,” https://attack.mitre.org/tactics/TA0010,
2020, online; Accessed 15 March 2020.
[33] Y. Lin, Z. Liu, M. Sun, Y. Liu, and X. Zhu, “Learning entity and
relation embeddings for knowledge graph completion,” in AAAI, 2015.
[34] T. N. Kipf and M. Welling, “Semi-supervised classiﬁcation with graph
convolutional networks,” in ICLR, 2017.
[35] “Transparent Computing Engagement 3 Data Release,” https://github.
com/darpa-i2o/Transparent-Computing/blob/master/README-E3.md,
[n.d.], online; Accessed 10 March 2020.
[36] A. Goel, K. Po, K. Farhadi, Z. Li, and E. De Lara, “The taser intrusion
recovery system,” in SOSP, 2005.
[37] “MITRE T1204: User Execution,” https://attack.mitre.org/techniques/
T1204, 2020, online; Accessed 15 March 2020.
[38] J. Wu, X. Wang, F. Feng, X. He, L. Chen, J. Lian, and X. Xie, “Self-
supervised graph learning for recommendation,” in ACM SIGIR, 2021.
[39] W. U. Hassan, M. A. Noureddine, P. Datta, and A. Bates, “Omega-
log: High-ﬁdelity attack investigation via transparent multi-layer log
analysis,” in NDSS, 2020.
[40] H. Ragib, R. Sion, and M. Winslett, “The case of the fake picasso:
Preventing history forgery with secure provenance,” in FAST, no. 2009.
[41] R. Paccagnella, K. Liao, D. Tian, and A. Bates, “Logging to the
danger zone: Race condition attacks and defenses on system audit
frameworks,” in ACM CCS, 2020.
[42] R. Paccagnella, P. Datta, W. U. Hassan, A. Bates, C. Fletcher, A. Miller,
and D. Tian, “Custos: Practical tamper-evident auditing of operating
systems using trusted execution,” in NDSS, 2020.
[43] “Linux Kernel Audit Subsystem,” https://github.com/linux-audit/
audit-kernel, [n.d.], online; Accessed 10 March 2021.
[44] D. J. Pohly, S. McLaughlin, P. McDaniel, and K. Butler, “Hi-ﬁ:
collecting high-ﬁdelity whole-system provenance,” in ACSAC, 2012.
[45] S. Ma, J. Zhai, F. Wang, K. H. Lee, X. Zhang, and D. Xu, “MPI:
Multiple perspective attack investigation with semantic aware execution
partitioning,” in USENIX Security, 2017.
[46] K. H. Lee, X. Zhang, and D. Xu, “Loggc: garbage collecting audit
log,” in ACM CCS, 2013.
[47] Y. Tang, D. Li, Z. Li, M. Zhang, K. Jee, X. Xiao, Z. Wu, J. Rhee,
F. Xu, and Q. Li, “Nodemerge: template based efﬁcient data reduction
for big-data causality analysis,” in ACM CCS, 2018.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:13:26 UTC from IEEE Xplore.  Restrictions apply. 
502
[48] H. Irshad, G. Ciocarlie, A. Gehani, V. Yegneswaran, K. H. Lee, J. Patel,
S. Jha, Y. Kwon, D. Xu, and X. Zhang, “Trace: Enterprise-wide
provenance tracking for real-time apt detection,” IEEE Transactions
on Information Forensics and Security, 2021.
[49] “Postgresql Relational Database,” https://www.postgresql.org, 2021,
online; Accessed 25 March 2020.
[50] “Elasticsearch NoSQL Database,” https://www.elastic.co/elasticsearch,
2021, online; Accessed 18 November 2021.
[51] “Your window into the Elastic Stack,” https://www.elastic.co/kibana,
2021, online; Accessed 18 November 2021.
[52] A. Bordes, N. Usunier, A. Garcia-Duran, J. Weston, and O. Yakhnenko,
for modeling multi-relational data,” in
“Translating embeddings
NeurIPS, 2013.
[53] Z. Wang, J. Zhang, J. Feng, and Z. Chen, “Knowledge graph embedding
by translating on hyperplanes,” in AAAI, 2014.
[54] H. Wang, F. Zhang, X. Xie, and M. Guo, “Dkn: Deep knowledge-aware
network for news recommendation,” in ACM WWW, 2018.
[55] Y. Cao, X. Wang, X. He, Z. Hu, and T.-S. Chua, “Unifying knowledge
graph learning and recommendation: Towards a better understanding
of user preferences,” in ACM WWW, 2019.
[56] J. Qiu, J. Tang, H. Ma, Y. Dong, K. Wang, and J. Tang, “Deepinf:
Social inﬂuence prediction with deep learning,” in ACM KDD, 2018.
[57] W. L. Hamilton, R. Ying, and J. Leskovec, “Inductive representation
learning on large graphs,” in NeurIPS, 2017.
[58] K. Xu, C. Li, Y. Tian, T. Sonobe, K.-i. Kawarabayashi, and S. Jegelka,
“Representation learning on graphs with jumping knowledge net-
works,” in ICML, 2018.
[59] S. Rendle, C. Freudenthaler, Z. Gantner, and L. Schmidt-Thieme, “Bpr:
Bayesian personalized ranking from implicit feedback,” UAI, 2009.
[60] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King, “Recommender
systems with social regularization,” in ACM WSDM, 2011.
[61] “Apache Kafka,” https://kafka.apache.org/, 2019, online; Accessed 21
July 2021.
[62] J. Khoury, T. Upthegrove, A. Caro, B. Benyo, and D. Kong, “An event-
based data model for granular information ﬂow tracking,” in USENIX
TaPP, 2020.
[63] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean, M. Devin,
S. Ghemawat, G. Irving, M. Isard et al., “Tensorﬂow: A system for
large-scale machine learning,” in OSDI, 2016.
[64] D. P. Kingma and J. Ba, “Adam: A method for stochastic optimization,”
in ICLR, 2015.
[65] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhut-
dinov, “Dropout: a simple way to prevent neural networks from
overﬁtting,” in The journal of machine learning research, 2014.
[66] X. Glorot and Y. Bengio, “Understanding the difﬁculty of training
deep feedforward neural networks,” in Proceedings of the thirteenth
international conference on artiﬁcial intelligence and statistics, 2010.
[67] K. H. Lee, X. Zhang, and D. Xu, “High accuracy attack provenance
via binary-based execution partition.” in NDSS, 2013.
[68] D. Arp, E. Quiring, F. Pendlebury, A. Warnecke, F. Pierazzi, C. Wress-
negger, L. Cavallaro, and K. Rieck, “Dos and don’ts of machine
learning in computer security,” in USENIX Security, 2022.
[69] “DARPA Transparent Computing,” https://www.darpa.mil/program/
transparent-computing, 2014, online; Accessed 12 March 2020.
[70] “CVE-2020-15778,” https://cve.mitre.org/cgi-bin/cvename.cgi?name=
CVE-2020-15778, 2020, online; Accessed 9 March 2020.
[71] P. Rodr´ıguez, M. A. Bautista, J. Gonzalez, and S. Escalera, “Beyond
one-hot encoding: Lower dimensional target embedding,” in Image and
Vision Computing, 2018.
[72] X. Yi, Z. Luo, C. Meng, M. Wang, G. Long, C. Wu, J. Yang, and
W. Lin, “Fast training of deep learning models over multiple gpus,” in
Proceedings of the 21st International Middleware Conference, 2020.
[73] T. Chen, L.-A. Tang, Y. Sun, Z. Chen, and K. Zhang, “Entity
embedding-based anomaly detection for heterogeneous categorical
events,” in IJCAI, 2016.
[74] M. Du, F. Li, G. Zheng, and V. Srikumar, “Deeplog: Anomaly detection
and diagnosis from system logs through deep learning,” in ACM CCS,
2017.
[75] M. Du, Z. Chen, C. Liu, R. Oak, and D. Song, “Lifelong anomaly
detection through unlearning,” in ACM CCS, 2019.
[76] D. Z¨ugner, A. Akbarnejad, and S. G¨unnemann, “Adversarial attacks on
neural networks for graph data,” in KDD, 2018.
[77] B. Wang and N. Z. Gong, “Attacking graph-based classiﬁcation via
manipulating the graph structure,” in CCS, 2019.
[78] ““How Many Alerts is Too Many to Handle?” https://www.ﬁreeye.com/
offers/rpt-idc-the-numbers-game.html, 2014, online; Accessed 4 April
2021.
[79] C. Zhong, J. Yen, P. Liu, and R. F. Erbacher, “Automate cybersecu-
rity data triage by leveraging human analysts’ cognitive process,” in
BigDataSecurity.
IEEE, 2016.
[80] S. T. King and P. M. Chen, “Backtracking intrusions,” in SOSP, 2003.
[81] S. T. King, Z. M. Mao, D. G. Lucchetti, and P. M. Chen, “Enriching
intrusion alerts through multi-host causality.” in NDSS, 2005.
[82] F. Wang, Y. Kwon, S. Ma, X. Zhang, and D. Xu, “Lprov: Practical
library-aware provenance tracing,” in ACSAC, 2018.
[83] K.-K. Muniswamy-Reddy, D. A. Holland, U. Braun, and M. I. Seltzer,
“Provenance-aware storage systems.” in USENIX ATC, 2006.
[84] T. F.-M. Pasquier, J. Singh, D. Eyers, and J. Bacon, “Camﬂow:
Managed data-sharing for cloud services,” in IEEE Transactions on
Cloud Computing, 2015.
[85] T. Pasquier, X. Han, T. Moyer, A. Bates, O. Hermant, D. Eyers, J. Ba-
con, and M. Seltzer, “Runtime analysis of whole-system provenance,”
in ACM CCS, 2018.
[86] W. U. Hassan, L. Aguse, N. Aguse, A. Bates, and T. Moyer, “Towards
scalable cluster auditing through grammatical inference over prove-
nance graphs,” in NDSS, 2018.
[87] M. N. Hossain, J. Wang, O. Weisse, R. Sekar, D. Genkin, B. He,
S. D. Stoller, G. Fang, F. Piessens, E. Downing et al., “Dependence-
preserving data compaction for scalable forensic analysis,” in USENIX
Security, 2018.
[88] S. Ma, K. H. Lee, C. H. Kim, J. Rhee, X. Zhang, and D. Xu, “Accurate,
low cost and instrumentation-free security audit logging for windows,”
in ACSAC, 2015.
[89] S. Ma, X. Zhang, and D. Xu, “Protracer: Towards practical provenance
tracing by alternating between logging and tainting.” in NDSS, 2016.
[90] J. Newsome and D. X. Song, “Dynamic taint analysis for automatic
detection, analysis, and signaturegeneration of exploits on commodity
software.” in NDSS, 2005.
[91] H. Yin, D. Song, M. Egele, C. Kruegel, and E. Kirda, “Panorama:
capturing system-wide information ﬂow for malware detection and
analysis,” in ACM CCS, 2007.
[92] Y. Kwon, D. Kim, W. N. Sumner, K. Kim, B. Saltaformaggio,
X. Zhang, and D. Xu, “Ldx: Causality inference by lightweight dual
execution,” in ASPLOS, 2016.
[93] Y. Kwon, F. Wang, W. Wang, K. H. Lee, W.-C. Lee, S. Ma, X. Zhang,
D. Xu, S. Jha, G. F. Ciocarlie et al., “MCI: Modeling-based causality
inference in audit logging for attack investigation.” in NDSS, 2018.
[94] Y. Ji, S. Lee, M. Fazzini, J. Allen, E. Downing, T. Kim, A. Orso,
and W. Lee, “Enabling reﬁnable cross-host attack investigation with
efﬁcient data ﬂow tagging and tracking,” in USENIX Security, 2018.
[95] R. Yang, S. Ma, H. Xu, X. Zhang, and Y. Chen, “Uiscope: Accurate,
instrumentation-free, and visible attack investigation for gui applica-
tions,” in NDSS, 2020.
[96] L. Yu, S. Ma, Z. Zhang, G. Tao, X. Zhang, D. Xu, V. E. Urias, H. W.
Lin, G. Ciocarlie, V. Yegneswaran et al., “Alchemist: Fusing application
and audit logs for precise attack provenance without instrumentation,”
in NDSS, 2021.
[97] P. Gao, X. Xiao, Z. Li, F. Xu, S. R. Kulkarni, and P. Mittal, “AIQL: