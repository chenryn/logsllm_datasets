to accurately infer the usage of the indirect data plane events, three types of
packet streams are required, i.e., timing probing packets, test packets and data
plane stream. The timing probing packets are inspired by the time pings in [29],
which must involve the switch software agent and get the responses accordingly.
However, we believe that they have a wider range of choices. The test packets are
a sequence of packets which should put extra loads to the software agent of the
switch, and must be issued at an appropriate rate for the accuracy of probing.
The data plane stream is a series of stream templates, and should directly go
through the data plane (i.e., do not trigger table-miss entry in the ﬂow table of
the switch), which is intended to obtain more advanced information such as the
speciﬁc conditions which trigger indirect event-driven applications.
Timing probing packets are used to measure the workload of software agent of
a switch, which should satisfy three properties: ﬁrst, they should go to the control
plane by hitting the table-miss ﬂow rule in the switch, and trigger the operations
of the corresponding applications (e.g., Flow-Mod or Packet-Out). Second, each
of them must evoke a response from the SDN-based network, so the attacker
could compute the RTT for each timing probing. Third, they should be sent
in an extremely low rate (10 pps is enough), and put as low loads as possible
to the switch software agent. We consider there are many options for timing
probing packets, e.g., ARP request/reply, ICMP request/reply, TCP SYN or
UDP. For layer 2, we consider ARP request is an ideal choice since the SDN
control plane must be involved in the processing of ARP request/reply. We note
that sometimes the broadcast ARP request will be processed in the switches.
However, the corresponding ARP reply is a unicast packet so that the control
plane involvement is inevitable if the destination MAC (i.e., the source MAC
address of the ARP Request) has not been dealt by the controller before. As
a result, the attacker could use spoofed source MAC address to deliberately
pollute the device management service of the controller as well as incur the
involvement of the controller. In some layer 2 network, it is not possible to
send packets with random source MAC addresses due to pre-authorized network
access control policies. To address this, the attacker could resort to the ﬂow
rule time-out mechanism of OpenFlow. The attacker would select N benign
2 The latest OpenFlow speciﬁcation only support 42 header ﬁelds, which constrains
the ﬁeld the controller could use to compose diﬀerent forwarding policies.
Control Plane Reﬂection Attacks
167
hosts and send ARP request to them to get the responses. N should satisfy
that N > R ∗ T , where R denotes the probing rate and T denotes the ﬂow-
rule time-out value3. For Layer 3, ICMP is a straightforward choice, since its
RTT calculation has been abstracted as ping command already. The attacker
should choose a number of benign hosts to send ICMP packets and get the
corresponding responses. As for layer 4, TCP and UDP are both feasible when
a layer 4 forwarding policy is conﬁgured in the control plane. According to RFC
792 [26], when a source host transmits a probing packet to a port which is likely
closed at the destination host, the destination is supposed to reply an ICMP port
unreachable message to the source. Similarly, RFC 793 [25] requires that each
TCP SYN packet should be responded with a TCP SYN/ACK packet (opened
port) or TCP RST packet (closed port) accordingly. With the probing packet
returned with the corresponding response, the RTT could be calculated and the
time-based patterns could be obtained.
Test packets are used to strengthen the eﬀects of timing probing packets
by adding extra loads to the software agent of the switch. For the purpose,
we consider test packets with a random destination IP address and broadcast
destination MAC address are ideal choices. By hitting the table-miss entry, each
of them would be directed to the controller. Then the SDN controller will issue
Packet-Out message to directly forward the test packet. As a result, the aim of
burdening switch software agent is achieved.
Fig. 1. Templates for data plane stream.
The insight of probing phase of Counter Manipulation Attack lies in that
diﬀerent kinds of downlink messages have diverse expenses for the downlink
channel. Among the interaction approaches between the applications and the
data plane, there are mainly three types of downlink messages, i.e., Flow-Mod,
Statistics Query and Packet-Out. Flow-Mod is the most expensive one among
3 As R is less than 10 usually, and T is set as a small value in most controllers (e.g. 5
in Floodlight), thus N cannot be a large number.
Data plane stream is a series of
templates, which should go directly
through the data plane to obtain
more advanced information such as
the speciﬁc conditions for indirect
event-driven applications. We pro-
vide two templates here, as shown in
Fig. 1. The ﬁrst template has a steady
rate v, packet size p, which is mainly
used to probe volume-based statistic
calculation and control method. The
second has a rate distribution like a
jump function, where three variables
(v, t, p) determine the shape of this
template as well as the size of each
packet, which is often used to probe
the rate-based strategy.
Coordinate Axis
Variables
Template
Name
Data plane 
stream with 
steady rate
Rate
(pps)
v
(v, p)
(v, t, p)
0
t
2t 3t 4t 5t
T(s)
Data plane 
stream with 
0-1 rate
Rate
(pps)
v
0
t
2t 3t 4t 5t
T(s)
168
M. Zhang et al.
them, since it not only consumes the CPU of switch agent to parse the mes-
sage, but also involves the ASIC API to insert the new ﬂow rules4. Statistics
Query comes at the second, for it needs the involvement of both switch agent
CPU for packet parsing and ASIC API for statistic querying. These two types of
messages are extremely expensive when the occupation of ﬂow table is high on
the switch. Packet-Out is rather lightweight, since it only involves the CPU of
switch protocol agent to perform the corresponding action encapsulated in the
packet. As these three types of downlink messages incur diﬀerent loads for the
switch, the latencies of timing probing packets will vary when the switch encoun-
ters diﬀerent message types. Thus, the attacker could learn whether the control
plane issue a Flow-Mod, or a Statistics Query, or a Packet-Out. As for the indi-
rect data plane events, the statistic queries are usually conducted periodically
by the applications. As a result, each of these queries would incur a small rise
for the RTTs of timing probing packets, which would reveal the period of appli-
cation’s statistic query. If a subsequent Flow-Mod is issued by the controller,
there would be a higher rise of RTT just following the RTT for Statistics Query,
which is named as double-peak phenomenon. Based on the special phenomenon,
the attacker could even infer what statistic calculation methods the application
takes, such as volume-based or rate-based. With several trails of two data plane
stream templates above (t is set as the period of statistic messages, which has
been obtained above) and the variations of v and p in a binary search approach,
the attacker could quickly obtain the concrete conditions (volume/rate values,
number-based or byte-based) that trigger the expensive downlink messages. The
conﬁdential information such as statistic query period, the exact conditions (vol-
ume/rate values, packet number-based or byte-based) that trigger the downlink
messages, helps the attacker permute the packet interval and packet size of each
ﬂow, to deliberately manipulate the counter value to the critical value, thus each
ﬂow would trigger a Flow-Mod in every period. By initiating a large number of
ﬂows, Flow-Mod of equal number would be triggered every period, making the
hardware switch suﬀer extremely.
4 Attack Evaluation
In this section, we demonstrate our experimental results of Control Plane Reﬂec-
tion Attacks with a physical testbed. The evaluations are divided into two
parts. First, we conduct our experiments for Table-miss Striking Attack and
Counter Manipulation Attack separately, to show the eﬀectiveness of Control
Plane Reﬂection Attacks. Second, we perform some benchmarks to provide low-
level details of our proposed attacks.
4.1 Experiment Setup
To demonstrate the feasibility of Control Plane Reﬂection Attacks, we set up
an experimental scenario as shown in Fig. 2. We choose several representative
4 Moving old ﬂow entry to make room for the new ﬂow rule is an important reason to
make this operation expensive and time-consuming.
Control Plane Reﬂection Attacks
169
Fig. 2. A typical attack scenario.
Fig. 3. Attack experiment setups.
applications, and run them separately on the SDN controller. Flow tables in
the switch are divided into two pipelines, Counting Table for the indirect data
plane event, Forwarding Table for the direct data plane events. Each pipeline
contains multiple ﬂow entries for the two data plane events, and ﬂow tables
of each pipeline are independent and separated, which is the state-of-the-art
approach for multiple application implementations today [20,29].
Reactive Routing is the most common application integrated into most of
the popular controller platforms. It monitors Packet-In messages with a default
table-miss in Forwarding Table, and computes and installs a path for the hosts
of the given source and destination addresses with an appropriate grain. When
one table-miss occurs, 2N downlink Flow-Mod messages would be issued to the
data plane, where N is the length of the routing path.
Flow Monitoring is another common application in SDN-based networks. It
is generally implemented with a Counting Table which counts the number and
the bytes of a ﬂow or multiple ﬂows. The controller polls the statistics of the
Counting Table periodically, conducts analysis on the collected data, and makes
decisions with the analysis results. Further, we extend our Flow Monitoring
sketch into four indirect data plane events driven applications, Heavy hitter
[22], Microburst [10], PIAS [1] and DDoS Detection [34]. The implementa-
tion details are illustrated in our technical report [36].
Our evaluations are conducted on a physical OpenFlow Switch, i.e., Pica8 P-
3290, since it is widely used in academia/industry and supports many advanced
OpenFlow data plane features, such as multiple pipelines and almost full Open-
Flow speciﬁcations (from version 1.0 to 1.4). The experimental topology, as
shown in Fig. 3, includes four machines (i.e., h1, h2, s1, and s2) connected to the
hardware switch and a server running Floodlight Controller. The HTTP service
is run on s1 and s2 separately. We consider h2 is a benign client of the HTTP
service and h1 is controlled by the attacker to launch the reﬂection attack. All
the tested applications discussed above are hosted in the Floodlight controller. In
our experiments, Reactive Routing adopts a ﬁve-tuples grained forwarding policy,
and four Flow Monitoring-based applications query the data plane switch every
170
M. Zhang et al.
2 s, and conduct the corresponding control (e.g., issue one Flow-Mod message)
according to their logic separately.
4.2 Attack Feasibility and Eﬀects
In this subsection, we conduct the experiments for Table-miss Striking Attack
and Counter Manipulation Attack separately, and show a detailed procedure for
probing phase and triggering phase.
Table-miss Striking Attack. For the Reactive Routing application, when we
launch a new ﬂow, the ﬁrst packet is inclined to get a high RTT, and the following
several packets would get low RTTs. Since there are only three hosts on our
testbed and ping could launch only one new ﬂow between each host pair, we
resort to UDP probing packets to cope with this problem. We compute the time
diﬀerence between the request and reply to obtain the RTT. As depicted in
Fig. 4(a), we let h1 transmit 10 UDP probing packets to a destination port and
then change the destination port. The RTT for the ﬁrst packet of each ﬂow is
quite distinct from that of the other packets. When we change any ﬁeld pertained
to ﬁve-tuples, the similar results would be obtained. The modiﬁcation to other
packet ﬁelds would always lead to a quick response. All the phenomena indicate
that ﬁve-tuples grained forwarding policy is adopted by the Reactive Routing.
With the inference of forwarding grain, the attacker is able to carefully craft
a stream of packets whose header spaces vary according to the grain. In this
way, each attack packet could strike the default table-miss in the switch, thus
triggering Packet-In and Flow-Mod in the control channel. Data-to-control Plane
Saturation Attack resorts to a random packet generation approach, making the
attack not so cost-eﬃcient for the attacker. As we can see in Fig. 4(b), Table-miss
Striking Attack is much more eﬃcient than Data-to-control Plane Saturation
Attack. Further, we also compare the RTTs and bandwidth for normal users
under the saturation attack and the striking attack. As shown in Fig. 5, the
striking attack could easily obtain a higher RTT and a lower bandwidth usage
for normal users with the same attack expense, which demonstrates that our
Table-miss Striking Attack is much more cost-eﬃcient and powerful.
Counter Manipulation Attack. For the Flow Monitoring-based applications,
we ﬁrst supply a steady rate of test packets at 300 packets per second (pps)5,
which would put appropriate loads on the control plane as required in [29]. The
rate of timing probing packets is set as 10 pps. The results for four applications
are similar, as shown in Fig. 6(a). As we could conclude, Flow Monitoring-based
applications poll the switch for statistics every 2 s. In particular, the double
peaks in red rectangle (double-peak phenomenon) denote two expensive downlink
messages are issued successively. The ﬁrst peak is attributed to the periodical
Statistics Query message, while the second is caused by the Flow-Mod message
for the control purpose. We make this inference because both Flow-Mod and
5 300 pps is a pretty secure rate, since a legitimate host could issue packets at thousand
of pps under normal circumstance.
Control Plane Reﬂection Attacks
171
(a) RTTs for Reactive Routing.
(b) Reactive Routing attack eﬃciency.
Fig. 4. Attack feasibility and eﬃciency for Table-miss Striking Attack.
(a) RTTs for normal users under the sat-
uration attack and the striking attack.
(b) Bandwidth for normal users under the
saturation attack and the striking attack.
Fig. 5. RTTs and bandwidth for normal users under the saturation attack and the