xxiii
Preface
This book is about POSTGRESQL, the most advanced open source database. From its origins in
academia,POSTGRESQLhasmovedtotheInternetwithexplosivegrowth. Itishardtobelievethe
advancesduringthepastfouryearsundertheguidanceofateamofworldwideInternetdevelopers.
Thisbookisatestamenttotheirvision,andtothesuccessthatPOSTGRESQLhasbecome.
The book is designedto leadthe reader from their first databasequerythrough the complex
queries needed to solve real-world problems. No knowledge of database theory or practice is
required. However, basic knowledge of operating system capabilities is expected, such as the
abilitytotypeatanoperatingsystemprompt.
Beginning with a short history of POSTGRESQL, the book moves from simple queries to the
mostimportantdatabasecommands. Commonproblemsarecoveredearly,whichshouldprevent
usersfromgettingstuckwithqueriesthatfail. Theauthorhasseenmanybugreportsinthepast
fewyearsandconsequentlyhasattemptedtowarnreadersaboutthecommonpitfalls.
With a firm foundation established, additional commands are introduced. The later chapters
outlinecomplextopicsliketransactionsandperformance.
Ateachstep,the purposeof eachcommandisclearlyillustrated. Thegoal istohavereaders
understandmore than query syntax. They should know why eachcommand is valuable, so they
canusethepropercommandsintheirreal-worlddatabaseapplications.
A databasenoviceshould readthe entirebook, whileskimmingover thelaterchapters. The
complex nature of database systems should not prevent readers from getting started. Test
databases offer a safe way to try queries. As readers gain experience, later chapters will be-
gin to make more sense. Experienced database users can skip the early chapters on basic SQL
functionality. Thecross-referencingofsectionsallowsyoutoquicklymovefromgeneraltomore
specificinformation.
Muchinformationhasbeenmovedoutofthemainbodyofthebookintoappendices. AppendixA
listssourcesofadditionalinformationaboutPOSTGRESQL.AppendixBprovidesinformationabout
installingPOSTGRESQL.AppendixCliststhefeaturesofPOSTGRESQLnotfoundinotherdatabase
systems. AppendixDcontainsacopyofthePOSTGRESQLmanualpageswhichshouldbeconsulted
anytimeyouhavetrouble withquerysyntax. Also, donot overlooktheexcellentdocumentation
that is part of POSTGRESQL. This documentation covers many complex topics, including much
POSTGRESQL-specificfunctionalitythatcannotbecoveredinabookofthislength. Sectionsofthe
xxv
xxvi PREFACE
documentationarereferencedinthisbookwhereappropriate.
Thisbook usesitalicsfor identifiers,SMALLCAPSfor SQL keywords,andamonospaced font for
SQLqueries. TheWebsiteforthisbookislocatedathttp://www.postgresql.org/docs/awbook.html.
Acknowledgments
POSTGRESQLandthisbookwouldnotbepossiblewithoutthetalentedandhard-workingmembers
of thePOSTGRESQL GlobalDevelopmentTeam. Theytook sourcecodethat couldhavebecome
justanotherabandonedprojectandtransformeditintotheopensourcealternativetocommercial
databasesystems. POSTGRESQLisashiningexampleofInternetsoftwaredevelopment.
Steering
• Fournier,MarcG.,inWolfville,NovaScotia, Canada,coordinatestheentireeffort,provides
the server, and administers the primary Web site, mailing lists, ftp site, and source code
repository.
• Lane, Tom, in Pittsburgh, Pennsylvania, United States, is often seen working on the plan-
ner/optimizer, but has left his fingerprintsin many places. He specializesin bug fixes and
performanceimprovements.
• Lockhart,ThomasG.,inPasadena,California,UnitedStates,worksondocumentation,data
types(particularlydate/timeandgeometricobjects),andSQLstandardscompatibility.
• Mikheev, Vadim B., in San Francisco, California, United States, does large projects, like
vacuum,subselects,triggers,andmulti-versionconcurrencycontrol(MVCC).
• Momjian,Bruce,inPhiladelphia,Pennsylvania,UnitedStates,maintainsFAQandTODOlists,
codecleanup,patchapplication,trainingmaterials,andsomecoding.
• Wieck,Jan, nearHamburg,Germany,overhauledthequeryrewriterulesystem,wroteour
procedurallanguagesPL/PGSQLandPL/TCL,andaddedtheNUMERICtype.
Major Developers
• Cain, D’Arcy, J. M., in Toronto, Ontario, Canada, worked on the TCL interface, PyGreSQL,
andtheINETtype.
• DalZotto,Massimo,nearTrento,Italy,createdlockingcodeandotherimprovements.
xxvii
xxviii ACKNOWLEDGMENTS
• Eisentraut, Peter, in Uppsala, Sweden, has added many features, including an overhaul of
psql.
• Elphick, Oliver, in Newport, Isle of Wight, United Kingdom, maintains the POSTGRESQL
packageforDebianLinux.
• Horak,Daniel,nearPilzen,CzechRepublic,didtheWinNTportof POSTGRESQL(usingthe
Cygwinenvironment).
• Inoue,Hiroshi,inFukui,Japan,improvedbtreeindexaccess.
• Ishii, Tatsuo, in Zushi, Kanagawa, Japan, handles multibyte foreign language support and
portingissues.
• Martin,Dr. AndrewC.R.,inLondon,UnitedKingdom,createdtheECPGinterfaceandhelped
intheLinuxandIrixFAQsincludingsomepatchestothePOSTGRESQLcode.
• Mergl,Edmund,inStuttgart,Germany,createdandmaintainspgsql_perl5. Healsocreated
DBD-Pg,whichisavailableviaCPAN.
• Meskes, Michael,inDusseldorf,Germany,handlesmultibyteforeign languagesupportand
maintainsECPG.
• Mount,Peter,inMaidstone,Kent,UnitedKingdom,createdtheJavaJDBCinterface.
• Nikolaidis, Byron, in Baltimore, Maryland, United States, rewrote and maintains the ODBC
interfaceforWindows.
• Owen,Lamar,inPisgahForest,NorthCarolina,UnitedStates,maintainstheRPMpackage.
• Teodorescu,Constantin,inBraila,Romania,createdthePGACCESSinterface.
• Thyni,Göran,inKiruna,Sweden,hasworkedontheUnixsocketcode.
Non-code Contributors
• Bartunov,Oleg,inMoscow,Russia,introducedthelocalesupport.
• Vielhaber,Vince,nearDetroit,Michigan,UnitedStates,maintainsourWebsite.
Alldevelopersarelistedinalphabeticalorder.
Chapter 1
History of P SQL
OSTGRE
1.1 Introduction
POSTGRESQL is the most advanced open source database server. In this chapter, you will learn
aboutdatabases,opensourcesoftware,andthehistoryof POSTGRESQL.
Threebasicofficeproductivityapplicationsexist:wordprocessors,spreadsheets,anddatabases.
Wordprocessorsproducetextdocumentscriticaltoanybusiness. Spreadsheetsareusedforfinancial
calculationsandanalysis. Databasesareusedprimarilyfordatastorageandretrieval. Youcanusea
wordprocessororspreadsheettostoresmallamountsofdata. However,withlargevolumesofdata
or datathat must be retrievedand updatedfrequently, databasesare the best choice. Databases
alloworderlydatastorage,rapiddataretrieval,andcomplexdataanalysis.
1.2 University of California at Berkeley
POSTGRESQL’SancestorwasIngres,developedattheUniversityofCaliforniaatBerkeley(1977–
1985). TheIngrescodewaslaterenhancedbyRelationalTechnologies/IngresCorporation,1which
producedone of the first commerciallysuccessful relationaldatabaseservers. Also at Berkeley,
Michael Stonebraker led a team to develop an object-relational database server called Postgres
(1986–1994). Illustra2 took the Postgres code and developedit into a commercial product. Two
Berkeley graduate students, Jolly Chen and Andrew Yu, subsequently added SQL capabilities to
Postgres. The resultingprojectwascalledPostgres95(1994–1995). ThetwolaterleftBerkeley,
butChencontinuedmaintainingPostgres95,whichhadanactivemailinglist.
1IngresCorporationwaslaterpurchasedbyComputerAssociates.
2IllustrawaslaterpurchasedbyInformixandintegratedintoInformix’sUniversalServer.
1
2 CHAPTER1. HISTORYOF POSTGRESQL
1.3 Development Leaves Berkeley
Inthesummerof1996,itbecamecleartherewasgreatdemandforanopensourceSQLdatabase
server,andateamformedtocontinuedevelopment. MarcG.FournierofToronto,Canada,offered
to host the mailing list and provide a server to host the source tree. One thousand mailing list
subscribers were moved to the new list. A server was configured, giving a few people login
accountstoapplypatchestothesourcecodeusingcvs.3
JollyChenhasstated,"Thisprojectneedsafewpeoplewithlotsoftime,notmanypeoplewith
a little time." Given the 250,000 lines of C4 code, we understood what he meant. In the early
days,fourpeoplewereheavilyinvolved: MarcFournierinCanada;ThomasLockhartinPasadena,
California; VadimMikheevinKrasnoyarsk,Russia;andmein Philadelphia,Pennsylvania. Weall
hadfull-timejobs,soweparticipatedintheeffortinoursparetime. Itcertainlywasachallenge.
Ourfirstgoalwastoscourthe old mailinglist,evaluatingpatchesthathadbeenpostedtofix
variousproblems. Thesystemwasquitefragilethen,andnoteasilyunderstood. Duringthefirst
six months of development, we feared that a singlepatchmight break the systemandwe would
beunabletocorrecttheproblem. Manybugreportsleftusscratchingourheads,tryingtofigure
outnotonlywhatwaswrong,buthowthesystemevenperformedmanyfunctions.
Wehadinheritedahugeinstalledbase. Atypicalbugreportcameinthefollowingform: "When
I do this, it crashes the database." We had a long list of such reports. It soon became clear that
some organization was needed. Most bug reports required significant research to fix, and many
reportswereduplicates,soourTODOlistincludedeverybuggySQLquery. Thisapproachhelped
usidentifyourbugs,andmadeusersawareofthemaswell,therebycuttingdownonduplicatebug
reports.
Althoughwehadmanyeagerdevelopers,thelearningcurveinunderstandinghowthedatabase
worked was significant. Many developersbecame involvedin the edgesof the source code, like
languageinterfacesordatabasetools,wherethingswereeasiertounderstand. Otherdevelopers
focused on specific problem queries, trying to locate the source of the bug. It was amazing to
seethatmany bugs werefixedwithjustonelineof Ccode. BecausePostgreshadevolvedinan
academicenvironment,ithadnotbeenexposedtothefullspectrumofreal-worldqueries. During
thatperiod,therewastalkofaddingfeatures,buttheinstabilityofthesystemmadebugfixingour
majorfocus.
1.4 POSTGRESQL Global Development Team
Inlate1996,wechangedthenameofthedatabaseserverfromPostgres95toPOSTGRESQL. Itisa
mouthful,buthonorsboththeBerkeleynameanditsSQLcapabilities. Westarteddistributingthe
sourcecodeusingremotecvs,whichallowedpeopletokeepup-to-datecopiesofthedevelopment
treewithoutdownloadinganentiresetoffileseveryday.
3cvssychronizesaccessbydeveloperstosharedprogramfiles.
4Cisapopularcomputerlanguagefirstdevelopedinthe1970s.
1.4. POSTGRESQLGLOBALDEVELOPMENTTEAM 3
Releasesoccurredeverythreetofivemonths. Eachperiodconsistedof twotothreemonths
ofdevelopment,onemonthofbetatesting,amajorrelease,andafewweekstoissuesub-releases
tocorrectseriousbugs. Wewerenevertemptedtofollowamoreaggressiveschedulewithmore
releases. Adatabaseserverisnotlikeawordprocessororgame,whereyoucaneasilyrestartitif
aproblemarises. Insteaddatabasesaremultiuser,andlockuserdatainsidethedatabase,sothey
mustbeasreliableaspossible.
Developmentofsourcecodeofthisscaleandcomplexityisnotforthenovice. Weinitiallyhad
troubleinterestingdevelopersinaprojectwithsuchasteeplearningcurve. However,overtime,
ourcivilizedatmosphereandimprovedreliabilityandperformancehelpedattracttheexperienced
talentweneeded.
GettingourdeveloperstheknowledgetheyneededtoassistwithPOSTGRESQLwasclearlya
priority. WehadaTODOlistthatoutlinedwhatneededtobedone,butwith250,000linesofcode,
takingonanyitemwasamajorproject. Werealizeddevelopereducationwouldpaymajorbenefits
in helpingpeople get started. We wrote a detailedflowchart of the databasemodules.5 We also
wrote a developers’ FAQ,6 answering the most common questions of POSTGRESQL developers.
Withthisinformation,developersbecamemoreproductiveatfixingbugsandaddingfeatures.
AlthoughthesourcecodeweinheritedfromBerkeleywasverymodular,mostBerkeleycoders
usedPOSTGRESQL as a test bed for researchprojects. As a result, improving existingcode was
notapriority. Theircodingstyleswerealsoquitevaried.
Wewroteatooltoreformattheentiresourcetreeinaconsistentmanner. Wewroteascriptto
findfunctionsthatcouldbemarkedasstatic7orunusedfunctionsthatcouldberemovedcompletely.
Thesescriptsarerunjustbeforeeachrelease. Areleasechecklistremindsusoftheitemstobe
changedforeachrelease.
As we gained knowledge of the code, we were able to perform more complicated fixes and
feature additions. We redesigned poorly structured code. We moved into a mode where each
releasehadmajor new features, insteadof just bug fixes. We improvedSQL conformance, added
sub-selects, improved locking, and added missing SQL functionality. A company was formed to
offertelephonesupport.
The Usenet discussion group archives started touting us. At one time, we had searched for
POSTGRESQL and found that many people were recommending other databases, even though
we were addressing user concerns as rapidly as possible. One year later, many people were
recommendingusto userswho neededtransactionsupport, complexqueries, commercial-grade
SQL support, complex data types, and reliability—clearly our strengths. Other databases were
recommendedwhen speedwas the overridingconcern. Red Hat’s shipment of POSTGRESQL as
partofitsLinux8 distributionquicklyexpandedouruserbase.
Today, every release of POSTGRESQL is a major improvement over the last. Our global
5All the files mentioned in this chapter are available as part of the POSTGRESQL distribution, or at
http://www.postgresql.org/docs.
6FrequentlyAskedQuestions
7Astaticfunctionisusedbyonlyoneprogramfile.
8LinuxisapopularUNIX-like,opensourceoperatingsystem.
4 CHAPTER1. HISTORYOF POSTGRESQL
developmentteamhasmasteryofthesourcecodeweinheritedfromBerkeley. Inaddition,every
moduleisunderstoodbyatleastonedevelopmentteammember. Wearenoweasilyaddingmajor
features,thankstotheincreasingsizeandexperienceofourworldwidedevelopmentteam.
1.5 Open Source Software
POSTGRESQL is open source software. The term “open source software” often confuses people.
With commercial software, a company hires programmers, develops a product, and sells it to
users. WithInternetcommunication,however,newpossibilitiesexist. Opensourcesoftwarehas
no company. Instead, capable programmers with interest and some free time get together via
the Internetandexchangeideas. Someone writesaprogram andputsitin aplaceeveryonecan
access. Otherprogrammersjoinandmakechanges. Whentheprogramissufficientlyfunctional,
the developersadvertisethe program’savailabilityto other Internetusers. Usersfindbugs and
missingfeaturesandreportthembacktothedevelopers,who,inturn,enhancetheprogram.
Itsoundslikeanunworkablecycle,butinfactithasseveraladvantages:
• Acompanystructureisnotrequired,sothereisnooverheadandnoeconomicrestrictions.
• Program development is not limited to a hired programming staff, but taps the capabilities
andexperienceofalargepoolofInternetprogrammers.
• Userfeedbackisfacilitated,allowingprogramtestingbyalargenumberof usersinashort
periodoftime.
• Programenhancementscanberapidlydistributedtousers.
1.6 Summary
This chapter has explored the long history of POSTGRESQL, starting with its roots in university
research. POSTGRESQL would not have achieved its success without the Internet. The ability
to communicate with peoplearound the world has alloweda community of unpaid developersto
enhance and support software that rivals commercial database offerings. By allowing everyone
to see the source code and contribute to its ongoing development, POSTGRESQL continues to
improveeveryday. Theremainderofthisbookshowshowtousethisamazingpieceofsoftware.
Chapter 2
Issuing Database Commands
Inthischapter,youwilllearnhowtoconnecttothedatabaseserverandissuesimplecommands
tothePOSTGRESQLserver.
Atthispoint,thebookmakesthefollowingassumptions:
• YouhaveinstalledPOSTGRESQL.
• YouhavearunningPOSTGRESQLserver.
• YouareconfiguredasaPOSTGRESQLuser.
• Youhaveadatabasecalledtest.
Ifnot,seeAppendixB.
2.1 Starting a Database Session
POSTGRESQLusesaclient/servermodelof communication. APOSTGRESQLserveriscontinually
running,waitingfor clientrequests. Theserverprocessesthe requestandreturnstheresultto
theclient.
Choosing an Interface
BecausethePOSTGRESQLserverrunsasanindependentprocessonthecomputer,ausercannot
interact with it directly. Instead, client applications have been designed specifically for user
interaction. This chapter describes how to interact with POSTGRESQL using the psql client
application. AdditionalinterfacesarecoveredinChapters16and17.
5
6 CHAPTER2. ISSUINGDATABASECOMMANDS
$ psql test
Welcome to psql, the PostgreSQL interactive terminal.
Type: \copyright for distribution terms
\h for help with SQL commands
\? for help on internal slash commands
\g or terminate with semicolon to execute query
\q to quit
test=>
Figure2.1: psqlsessionstart-up
Choosing a Database
EachPOSTGRESQLservercontrolsaccesstoanumberofdatabases. Databasesarestorageareas
usedbytheservertopartitioninformation.Forexample,atypicalinstallationmayhaveaproduction
database,usedtokeepallinformationaboutacompany. Itmayalsohaveatrainingdatabase,used
for trainingandtestingpurposes. Theymay haveprivatedatabases,usedbyindividualstostore
personalinformation. Forthisexercise,wewillassumethatyouhavecreatedanemptydatabase
calledtest. Ifnot,seeAppendixB.
Starting a Session
To startapsql session andconnect to the test database,typepsql test at the command prompt.
YouroutputshouldlooksimilartoFigure2.1. Remember,theoperatingsystemcommandprompt
iscase-sensitive,soyoumusttypethisinalllowercase.1
2.2 Controlling a Session
Congratulations. YouhavesuccessfullyconnectedtothePOSTGRESQLserver. Youcannowissue
commands and receive replies from the server. Let’s try one. Type SELECT CURRENT_USER; and
pressEnter(seeFigure2.2). Ifyoumakeamistake,justpressBackspaceandretypethecommand.
Itshouldshowyourloginnameunderneaththedashedline. Thisexampleshowstheloginnameof
postgres. Thewordgetpgusername isacolumnlabel. Theserveralsoreportsthatithasreturned
onerowofdata. Thelinetest=>tellsyouthattheserverhasfinisheditscurrenttaskandiswaiting
forthenextdatabasequery.
1Afewoperatingsystemsarecase-insensitive.
2.2. CONTROLLINGASESSION 7
test=> SELECT CURRENT_USER;
getpgusername
---------------
postgres
(1 row)
test=>
Figure2.2: MyfirstSQLquery
test=> SELECT
test-> 1 + 3
test-> ;
?column?
----------
4
(1 row)
test=>
Figure2.3: Multilinequery
Let’stryanotherone. Atthetest=> prompt,typeSELECT CURRENT_TIMESTAMP; andpressEnter.
Youshouldseethecurrentdateandtime. Eachtimeyouexecutethequery,theserverwillreport
thecurrenttimetoyou.
Typing in the Query Buffer
Typinginthequerybufferissimilartotypingatanoperatingsystemcommandprompt. However,
atanoperatingsystemcommandprompt,Entercompleteseachcommand. Inpsql,commandsare
completedonlywhenyouenterasemicolon(;)orbackslash-g(\g).
As anexample,let’sdo SELECT 1 + 3; but inadifferentway. SeeFigure 2.3.2 Noticethatthe
queryisspreadoverthreelines. Thepromptchangedfrom=>onthefirstlineto->onthesecond
lineto indicate that the query was continued. The semicolon told psql to send the query to the
server. We could have easily replacedthe semicolon with backslash-g. I do not recommend that
youtypequeriesasuglyasthisone,butlongerquerieswillbenefitbybeingspreadovermultiple