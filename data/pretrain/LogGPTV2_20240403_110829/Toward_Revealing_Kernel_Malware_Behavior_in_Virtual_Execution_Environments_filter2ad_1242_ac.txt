32
33
34
35
36
37
38
0xf6b7e7e6
FUNCT 0049 0953 DriverInit
0x825c3978
DRIVER OBJECT
0x827cba00
0x825991c8
0x825ce020
0xf7b0ec58
EPROCESS
EPROCESS
EPROCESS
PVOID
0xf6b8b92
PDEVICE OBJECT
0xf6b7e722 FUNCT 0049 095B MajorFunction
0xf6b7d43a FUNCT 00BC 0957 DriverUnload
0x8264600
MODULE ENTRY
0x82609f18
DEVICE OBJECT
0x8266fc28
0x8266fc03
0x826bc118
0x826bc103
IRP
IRP
IRP
IRP
0x826d8288
MODULE ENTRY
0x8055ab20
MODULE ENTRY
n/a
n/a
n/a
2
3
n/a
n/a
1
1
1
n/a
n/a
n/a
n/a
n/a
9
9
function
struct
struct
struct
struct
pointer
pointer
function
function
struct
struct
struct
struct
struct
struct
struct
struct
IRP
n/a
struct
n/a
168
608
608
608
4
4
n/a
n/a
52
184
112
112
112
112
52
52
112
608
608
608
608
608
608
608
608
608
608
608
608
608
608
608
608
68
600
68
68
68
4
4
4
4
4
4
4
4
4
4
1920
1920
1920
1952
1952
1952
1952
1952
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
1880
System
System
System
System
System
System
System
System
System
System
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
fu.exe
4
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
4
32
32
36
36
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
struct
0x826bc210
0x825d1020
0x8273a7c8
0x826eb408
0x825d5a80
x825e4da0
0x825a9668
0x82695180
0x825a0da0
0x82722980
0x825c27e0
0x82624bb8
0x825de980
0x8248bda0
0x8264a928
0x8263a5a8
0x825d9020
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
EPROCESS
0xe13ed7b0
HANDLE TABLE
0x82607d48
ETHREAD
0xe15ca640
HANDLE TABLE
0xe10a8a08
HANDLE TABLE
0xe1747cd0
HANDLE TABLE
hide itself, the driver msdirectx ﬁrst reads the address of its module descriptor
(with tag_id 9) from its driver object (with tag_id 1). Then it removes this
module descriptor from the kernel MODULE_ENTRY list by modifying the Flink and
Blink pointers in two neighbor module descriptors (tag_id 15 and 16). Similarly,
318
C. Xuan, J. Copeland, and R. Beyah
to conceal process cmd.exe, msdirectx ﬁrst obtains the process descriptor (with
tag_id 2) of the current process by calling kernel function IoGetCurrentProcess.
Starting from this process descriptor, msdirectx traverses the kernel EPROCESS
list to ﬁnd the process descriptor (with tag_id 4) of process csrss.exe. These two
steps take place in the System process context. After receiving the command for
hiding the cmd.exe process sent by one of the fu.exe processes, msdiretx searches
the kernel EPROCESS list, beginning with the process descriptor of csrss.exe.
When the process descriptor (with tag_id 32) of cmd.exe is found, msdirectx
removes it from the kernel EPROCESS list by altering Flink and Blink point-
ers in two neighbor process descriptors (with tag_id 31 and 33). Furthermore,
Flink and Blink pointers in the process descriptor of cmd.exe are also modiﬁed
to prevent the random Blue Screen of Death (BSOD) when exiting the hidden
process. To evade the detection of rootkit detectors, FUTo deletes the hidden
process from the other three kernel structures: kernel handle table list, handle
table of the process csrss.exe and PspCidTable. The ﬁrst one is a linked list, and
the DKOM behavior of FUTo over this kernel structure was captured and dis-
played in the tag trace graph too (see tag_id 36, 37 and 38). The last two kernel
structures are implemented as three-dimensional arrays, which is not supported
by the current version of Rkproﬁler. So, the tag trace graph does not include the
modiﬁcation of these two kernel structures.
Combining Rkproﬁler’s output with other reports, we discovered other inter-
esting behavior of FUTo. First, FUTo employed an IOCTL mechanism to pass
control commands from user space to kernel space. During the driver initializa-
tion, a device \\Device\\msdirectx was created by calling the kernel function