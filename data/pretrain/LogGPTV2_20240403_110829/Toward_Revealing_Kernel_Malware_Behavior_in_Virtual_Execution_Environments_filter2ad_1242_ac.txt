为了提高文本的清晰度、连贯性和专业性，以下是优化后的版本：

---

### 内核对象和模块描述符

FUTo 驱动程序 `msdirectx` 通过修改内核数据结构来隐藏自身及其相关进程。具体步骤如下：

1. **隐藏驱动程序：**
   - 首先，`msdirectx` 从其驱动对象（标记为 `tag_id 1`）中读取模块描述符的地址（标记为 `tag_id 9`）。
   - 然后，它通过修改相邻模块描述符（标记为 `tag_id 15` 和 `tag_id 16`）中的 Flink 和 Blink 指针，将该模块描述符从内核 `MODULE_ENTRY` 列表中移除。

2. **隐藏进程 `cmd.exe`：**
   - `msdirectx` 调用内核函数 `IoGetCurrentProcess` 获取当前进程的进程描述符（标记为 `tag_id 2`）。
   - 从这个进程描述符开始，`msdirectx` 遍历内核 `EPROCESS` 列表，找到 `csrss.exe` 进程的进程描述符（标记为 `tag_id 4`）。
   - 当接收到由某个 `fu.exe` 进程发送的隐藏 `cmd.exe` 的命令时，`msdirectx` 从 `csrss.exe` 的进程描述符开始遍历 `EPROCESS` 列表。
   - 找到 `cmd.exe` 的进程描述符（标记为 `tag_id 32`）后，通过修改相邻进程描述符（标记为 `tag_id 31` 和 `tag_id 33`）中的 Flink 和 Blink 指针，将其从 `EPROCESS` 列表中移除。
   - 同时，修改 `cmd.exe` 进程描述符中的 Flink 和 Blink 指针，以防止在退出隐藏进程时出现随机蓝屏死机（BSOD）。

### 其他内核结构的修改

为了进一步逃避检测，FUTo 从以下三个内核结构中删除了隐藏的进程：
- **内核句柄表列表**：这是一个链表，Rkproﬁler 已捕获并显示了 FUTo 在此结构上的直接内核对象操作（DKOM）行为（见 `tag_id 36, 37, 38`）。
- **`csrss.exe` 进程的句柄表**：这是一个三维数组，当前版本的 Rkproﬁler 不支持对此类结构的修改进行跟踪。
- **`PspCidTable`**：这也是一个三维数组，同样不被当前版本的 Rkproﬁler 支持。

### 控制命令传递

FUTo 使用 IOCTL 机制将控制命令从用户空间传递到内核空间。在驱动初始化过程中，通过调用内核函数创建设备 `\\Device\\msdirectx`。

### 结论

结合 Rkproﬁler 的输出和其他报告，我们发现了 FUTo 的其他有趣行为。这些行为包括通过修改内核数据结构来隐藏自身和相关进程，以及使用 IOCTL 机制传递控制命令。

---

希望这个优化后的版本能够更好地传达信息，并且更加清晰和专业。