title:Secure Anonymous Group Infrastructure for Common and Future Internet
Applications
author:Nathalie Weiler
Secure Anonymous Group Infrastructure for Common and Future Internet
Applications
Computer Engineering and Networks Laboratory,
Swiss Federal Institute of Technology, Z¨urich (ETHZ), Switzerland
Nathalie Weiler
PI:EMAIL
Abstract
Secure group communication protocols, in particular
multi-party key agreement and update algorithms, help pro-
mote traditional and new Internet multi-party applications
such as video conferencing or distance education. We pro-
pose a framework for marrying such approaches with ac-
cess management mechanisms and applications in real en-
vironments. Furthermore, we extend this framework with
anonymisation techniques for the sake of the individual’s
privacy. Our solution combines traditional unicast based
approaches for privacy with authenticated and encrypted
group communication. Thereby, we are able to build closed
groups in which the members are not disclosed to outsiders.
The introduced secure and anonymous multicast (SAM)
framework can be employed as a scalable, conﬁgurable ar-
chitecture for pseudonym based group communication be-
tween qualiﬁed entities.
Keywords: scalable anonymity, conﬁgurable end-
to-end anonymous communication, pseudonymous
multicast, anonymous group communication.
1 Introduction
The success of the MBone – the multicast capable
overlay network of the Internet – and similar mass
communication networks will be determined by their
ability both to preserve the privacy of their users and
to secure the network infrastructure of their operators.
IP multicast does not support closed user groups. In
other words everyone can listen to all trafﬁc of a spec-
iﬁed multicast group as any host may join or leave
a multicast group by sending IGMP [1] messages
to their local router. Furthermore, multicast accentu-
ates certain security threats, esp. active attacks such
as denial-of-service ones, malicious replays or mas-
querading, because of missing access control mecha-
nisms [2]. A typical solution for secure multicast re-
quires a many-to-many agreement on the encryption
key. Different mechanisms to solve the problems of
key establishment and update in such groups have
been proposed in the recent past. The communication
and computational costs of well-known approaches
are shown in [3].
This paper goes one step further and introduces an
infrastructure for secure and yet anonymous group
communication – allowing for a way of communicat-
ing in closed groups without disclosing its privacy. A
secure anonymous group has an access control mech-
anism, distributes data trafﬁc encrypted for its mem-
bers only, and hides all or part of its member’s identi-
ties to outsiders. In other words, we we understand by
secure anonymous multicast (1) that only users who
fulﬁl certain conditions are allowed to join the closed
group, (2) that a non-member of the group cannot un-
derstand the data distributed, and (3) that the identity
of a member may not be disclosed to outsiders of the
group. Additionally, the member may hide its iden-
tity to other group members, if the policy allows for.
A member of a secure and anonymous group presents
upon his join in the group the necessary proof that he
is entitled to do so. After the join, the member stays
anonymous in the group so that no outsider can ei-
ther identify the sender or the receiver or decrypt the
data sent.
Internet based teaching is one of many future ap-
plications proﬁting from such a secure anonymous
group infrastructure. Lectures could be followed
anonymously, yet the students could be charged by
administration of the teaching academy. The exami-
nations could be semi-blinded so that the student’s
identity is hidden from the examiner allowing for a
totally fair qualiﬁcation, but still the examinee cannot
impersonate someone else. Note also that this situa-
tion is almost impossible to achieve in traditional non-
Internet based examinations. Other application ﬁelds
include anonymous review processes or virtual con-
ferences comprising external experts whose identity
should remain undisclosed.
The contributions of this paper are two-folded:
(1) We introduce an application independent model
for managing closed groups. (2) We complement the
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:31 UTC from IEEE Xplore.  Restrictions apply. 
functional building blocks of this model with privacy
and anonymity services. The building blocks of the re-
sulting secure and anonymous multicast framework
can be combined according to the application’s needs.
Furthermore, the interchangeability of the key man-
agement techniques allows for small to large, for al-
most static to very dynamic groups.
We organise our paper in four parts: We start with
an overview over previous approaches for anonymity
used in unicast scenarios and describe common at-
tacks on these systems. Section 3 introduces the build-
ing blocks of a secure multicast framework and then
details our design of a secure anonymous group in-
frastructure. We evaluate the advantages and short-
comings of our approach in Section 4 and conclude
with an outlook on further work in Section 5.
2 Related Work
Related work consists of three parts. First, we
present essential methods that we identiﬁed for
anonymous unicast connections. Then, we look at
the vulnerabilities in practical realizations. Finally, we
cover work done in the area of anonymous multicast1.
2.1 Essential Methods Used in Anonymity
Schemes
We identiﬁed several essential techniques used for
the anonymisation of unicast connections.
Shufﬂed routing minimises the risks of success-
ful attacks from adversaries which control parts of
the network. The sender chooses a set of anonymis-
ing nodes out of a cloud for relaying its message to
the receiver. Under the assumption that an adver-
sary controls only parts of the cloud, the sender has
a fair chance to choose randomly one of the non-
compromised nodes.
Explicit and implicit addresses are a means to ob-
tain receiver anonymity, i.e. to conceal the real recipi-
ent of a message [5]: An address is implicit if the ad-
dress contains no information either on the actual lo-
cation of the addressee or on the physical reachabil-
ity of the addressee. Only members of a certain group
are able to use this implicit address for addressing the
addressee. On the other hand, an explicit address con-
tains information that can be used in a straightforward
manner to route a message to the addressee.
One of the simplest techniques for anonymous
communication uses such a trusted third party (TTP)
as intermediary communication partner: A sender re-
lays her message for the receiver to the TTP. This one
1We do not cover approaches for secure multicast as there exist
several recent, good overview papers [3, 4].
replaces the sender’s address with its own, and for-
wards it together with the original message to the
receiver. Forwarding through a TTP provides sender
anonymity with respect to a passive external adver-
sary which is not situated near the sender. The former
technique has the disadvantage that the TTP is a pop-
ular point of attack. The sender needs to trust it. A
combination of the above technique with public key
cryptography results in a mechanism called layered
encryption forwarding: The sender adds for every in-
termediate hop one layer of addressing information
and encrypts it for the respective hop. Each hop re-
places the sender information with his own address-
ing information, strips off the relaying information
and sends it to the next hop in the chain. Note that the
layered encryption forwarding does not change the to-
tal amount of trust required in the communication re-
lationship: All relaying hosts together are trusted with
the same information on the forwarding than in the
previous scheme. However, the important difference
is that each on his own is not able to reveal the com-
plete source and destination information. By adding
intermediate nodes in the forwarding path, the la-
tency is increased. However, an attacker requires sub-
stantial more control in the network, such making an
attack much more expensive.
To recipient
M = M0 XOR M1 XOR M2 XOR M3
E0 = M0 XOR  P0,1 XOR P0,2 XOR P0,3
E1 = M1 XOR  P1,0 XOR  P1,2 XOR  P1,3
0
M0 = 0
E2 = M2 XOR  P2,0 XOR  P2,1 XOR  P2,3
1
M1 = 0
E3 = M3 XOR  P3,0 XOR  P3,1 XOR  P3,2
2
M2 = M
3
M3 = 0
Figure 1. Superposed Sending: Example.
Superposed sending, or the Dining Cryptogra-
pher (DC) method provides sender anonymity by
using a combination of several cryptographic trans-
formations [6]. Three cryptographers dine at their
favourite restaurant. Their waiter informs them that
the bill has all ready been paid anonymously. How-
ever, the cryptographers want to know if one of them
paid or if a third party paid for the diner. The solution
is quite simple: Each cryptographer ﬂips a fair coin
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:31 UTC from IEEE Xplore.  Restrictions apply. 
with the person to his left, and another to his right.
Then each cryptographer announces the XOR of the
two coins he sees. If he paid the bill, he announces the
opposite of the XOR. If no one paid, then the XOR of
all the announced values will be 0. If someone paid,
then the XOR will be 1. In a network, this solution
translates as shown in Figure 1. The major drawback
of the DC method is that an agreement protocol is
needed for determining who is allowed to send next.
This problem is called the collusion resolution prob-
lem. Furthermore, any three nodes can conspire and
determine the sender of the message (the fourth re-
maining node in our case). In general, a DC network
consisting of n nodes is resistant to attacks of any sub-
set of n   2 nodes: Supposing that a subset of n   2
nodes can successfully attack such a network is equiv-
alent in saying that the adversary is able to determine
the inputs to the one-time pad shared between the two
parties that do not participate in the attack. However
a single one-time pad is enough to make a transmis-
sion illegible to any outsider. The superposed send-
ing method is a sender anonymity providing tech-
nique which has been proven to yield information the-
oretic secrecy in the sense of Shannon. However, the
usability is restricted by the collusion resolution prob-
lem and the low performance in a widely distributed
anonymising network.
Mixing [7] describes a technique that combines sev-
eral methods: (a) A mix consists of a cascade of un-
trusted third parties using layered encryption with
random bit strings. (b) It supports source routing in
both directions, i.e. a sender may include a return path
in the same way it includes a forwarding path. (c) It
fragments or pads the message sent in order to sent
out only packets of same length. So, the adversary can
not use the packet length as one information source
in a trafﬁc analysis attack. (d) It assembles and re-
orders messages in batches in order to conceal more
useful information from an observing adversary. The
mix technique was introduced for the email system.
Several existing system relay on it. A major improve-
ment of the mixing technique is the introduction of
dummy messages in the mix system.
2.2 Vulnerabilities in Practical Realizations
An anonymous communication system is best de-
scribed by its handling of possible attacks. Therefore,
we begin by deﬁning reasonable attacks on such a sys-
tem:
ATTACK 1: By analysing the lengths of messages
transmitted, an adversary can correlate different
connections to client-server pairs. This method is
called trafﬁc analysis of message volume.
ATTACK 2: If an adversary can establish a correlation
between the beginning and end of a connection
based on his passive observation of a link, we
speak of a timing attack.
ATTACK 3: A third form of trafﬁc analysis attack is
the proﬁling attack. I.e. an attacker can trace
users in long observation periods.
ATTACK 4: Messages in which the coding is not al-
tered during transmission are subject to the mes-
sage coding attack. Such messages are linkeable
through pattern matching, hence traceable.
ATTACK 5: A system is vulnerable to a collusion at-
tack, if a coalition of corrupt insiders is able to
gather more information together than each one
on its own is entitled to. The exploitation of this
information can break the system’s security.
ATTACK 6: In a ﬂooding attack order to separate the
message he is interested in. The systems subject
to this attack typically rely on a kind of group
anonymity, meaning that each message can only
be anonymous in a group of sent messages.
We analyse existing approaches according to their
abilities to cope with the attacks. The practical real-
izations are classiﬁed according to the targeted service
into e-mail based ones, web centric ones, and network
based ones.
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
Attacks
(cid:1)
Approaches
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
Remailer
Type
Type
Type
0





1




()3
2

()1
()2

4
Message
Volume
Timing
Proﬁling
Message
Coding
Collusion
(Insider
Attack)
Flooding

Table 1. How do existing e-mail based approaches
cope with different attacks?


1Not all mixmaster include dummy trafﬁc to prevent timing at-
2Depends on amount of dummy trafﬁc.
3If the chosen remailer is compromised, the system’s security is
tacks.
broken.
4n   1 of n mixmasters may collude.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:04:31 UTC from IEEE Xplore.  Restrictions apply. 
(cid:1)
Approaches
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
(cid:1)
Attacks
Message
Volume
Timing
Proﬁling
Message Coding
Collusion
Flooding
Anonymizer1
LPWA [8]
Crowds [9]
Rewebbers [10]
JANUS [11]



3

n.a.4





n.a.


()2

Insider: 
Outsider: 







n.a.





n.a.
Table 2. How do existing WWW based approaches cope with different attacks?
1http://www.anonymizer.com
2HTTP requests frequently appear in bursts. I.e., typically, the web browser is the ﬁrst to send a request. An insider, incorporating a crowds
member, knowing the other member’s processing speeds can reveal the true path position of the original request from analysis of the intervals
and delays between requests.
3With link encryption between client and proxy: weak protection, otherwise no protection.
4Centralised system.
Mail based approaches are generally classiﬁed into
three different types: (1) A Type 0 remailer, the sim-
plest system, strips off headers and forwards the
remaining message. Examples are anon.penet.fi
(not operational anymore) or www.mailanon.com.
(2) The class of the Type 1 remailers encompasses
all remailers that use any variant of layered encryp-
tion such as cypherpunk systems2. (3) Mixmasters3 or
Type 2 remailers are more resistant against spamming