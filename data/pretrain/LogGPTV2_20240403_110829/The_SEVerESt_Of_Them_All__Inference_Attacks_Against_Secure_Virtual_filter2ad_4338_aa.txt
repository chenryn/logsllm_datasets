title:The SEVerESt Of Them All: Inference Attacks Against Secure Virtual
Enclaves
author:Jan Werner and
Joshua Mason and
Manos Antonakakis and
Michalis Polychronakis and
Fabian Monrose
The SEVerESt Of Them All: Inference Attacks
Against Secure Virtual Enclaves
Jan Werner
UNC Chapel Hill
PI:EMAIL
Joshua Mason
PI:EMAIL
U. Illinois
Manos Antonakakis
Georgia Tech
PI:EMAIL
Michalis Polychronakis
PI:EMAIL
Stony Brook University
Fabian Monrose
UNC Chapel Hill
PI:EMAIL
ABSTRACT
The success of cloud computing has shown that the cost and con-
venience benefits of outsourcing infrastructure, platform, and soft-
ware resources outweigh concerns about confidentiality. Still, many
businesses resist moving private data to cloud providers due to in-
tellectual property and privacy reasons. A recent wave of hardware
virtualization technologies aims to alleviate these concerns by of-
fering encrypted virtualization features that support data confiden-
tiality of guest virtual machines (e.g., by transparently encrypting
memory) even when running on top untrusted hypervisors.
We introduce two new attacks that can breach the confidentiality
of protected enclaves. First, we show how a cloud adversary can
judiciously inspect the general purpose registers to unmask the
computation that passes through them. Specifically, we demonstrate
a set of attacks that can precisely infer the executed instructions
and eventually capture sensitive data given only indirect access to
the CPU state as observed via the general purpose registers. Second,
we show that even under a more restrictive environment — where
access to the general purpose registers is no longer available —
we can apply a different inference attack to recover the structure
of an unknown, running, application as a stepping stone towards
application fingerprinting. We demonstrate the practicality of these
inference attacks by showing how an adversary can identify differ-
ent applications and even distinguish between versions of the same
application and the compiler used, recover data transferred over
TLS connections within the encrypted guest, retrieve the contents
of sensitive data as it is being read from disk by the guest, and inject
arbitrary data within the guest. Taken as a whole, these attacks
serve as a cautionary tale of what can go wrong when the state of
registers (e.g., in AMD’s SEV) and application performance data
(e.g., in AMD’s SEV-ES) are left unprotected. The latter is the first
known attack that was designed to specifically target SEV-ES.
ACM Reference Format:
Jan Werner, Joshua Mason, Manos Antonakakis, Michalis Polychronakis,
and Fabian Monrose. 2019. The SEVerESt Of Them All: Inference Attacks
Against Secure Virtual Enclaves. In ACM Asia Conference on Computer
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
© 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-6752-3/19/07...$15.00
https://doi.org/10.1145/3321705.3329820
and Communications Security (AsiaCCS ’19), July 9–12, 2019, Auckland,
New Zealand. ACM, New York, NY, USA, 13 pages. https://doi.org/10.1145/
3321705.3329820
1 INTRODUCTION
Of late, the need for a Trusted Execution Environment has risen
to the forefront as an important consideration for many parties in
the cloud computing ecosystem. Cloud computing refers to the use
of on-demand networked infrastructure software and capacity to
provide resources to customers [52]. In today’s marketplace, con-
tent providers desire the ability to deliver copyrighted or sensitive
material to clients without the risk of data leaks. At the same time,
computer manufacturers must be able to verify that only trusted
software executes on their hardware, and OS vendors need guaran-
tees that no malicious code executes upon boot. Likewise, clients
that use cloud services for their touted costs and security benefits
expect confidentiality of the information stored on cloud servers.
Fortunately, some of these requirements can be met with existing
offerings. For example, the ARM Trust Zone™ technology allows
customers to build robust Digital Rights Management systems,
Secure Boot technologies (e.g., Intel Trusted Execution Technol-
ogy [17] and the Trusted Platform Module [49]) guarantee that
only trusted software is loaded, and so-called Trusted Path mecha-
nisms [38] provide a secure interface for inputting sensitive data.
However, until recently, no practical solutions were available for
ensuring the confidentiality of cloud computation from the cloud
provider itself. Indeed, inquisitive cloud providers can readily in-
spect and modify customer’s information using virtual machine
introspection [22], and so to alleviate that threat, customers typi-
cally resort to business agreements to protect their assets.
Within the cloud computing arena, virtualization is the de facto
technology used to provide isolation of tenants. More specifically,
hypervisors are used to provide both temporal and spatial separa-
tion of virtual machines (VMs) for different customers running on
a single cloud instance. While the advent of hypervisor technology
has been a boon for cloud computing, its proliferation comes with
several risks. For one, bugs in the hypervisor can undermine the
isolation and integrity properties offered by these technologies and
thus clients utilizing the cloud infrastructure must place full trust
in the cloud provider.
To confront the problem of having fully trusted hypervisors, in
late 2016, Advanced Micro Devices (AMD) announced new secu-
rity extensions [27]. In particular, their Secure Memory Encryption
subsystem allows for full system memory encryption and aims to
ensure data confidentiality against physical attacks such as cold
Session 2A: SGX-based SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand73boot and DMA attacks [21]. A second extension, dubbed Secure
Encrypted Virtualization (SEV), couples memory encryption with
virtualization extensions that allows for per virtual machine mem-
ory encryption. SEV takes a bold step forward by aiming to protect
virtual machines not only from physical attacks, but from other vir-
tual machines and untrusted hypervisors. A third extension, coined
Secure Encrypted Virtualization with Encrypted State (SEV-ES) [26],
builds upon SEV and purportedly allows for encryption of all proces-
sor registers when the VM is paused. These new extensions provide
a private, per-virtual machine memory encryption solution that
is performed entirely in hardware, independently from the virtual
machine manager. Accepting the importance of cloud confidential-
ity, some cloud providers have recently announced the availability
of such security protections on their platforms1. Somewhat at odds
with this acceptance, however, is the fact that while cloud providers
stipulate that the customer is responsible for complying with an
acceptable use policy (AUP), they reserve the right to review the
applications and data for compliance with the AUP.
These new cloud platforms are built around a threat model where
“an attacker is assumed to have access to not only execute user level
privileged code on the target machine, but can potentially execute
malware at the higher privileged hypervisor level as well” [27].
The conjecture is that even under these circumstances, secure en-
crypted virtualization provides assurances to help protect the guest
virtual machine code and data from an attacker. In this paper, we
investigate the extent to which existing encrypted virtualization
technologies do in fact provide the desired security guarantees in
term of a guest VM’s data confidentiality. We argue that such an
investigation is particularly timely, as the complexities of hardware
implementations coupled with software deployment challenges and
push-to-market pressures, have led to commercially available tech-
nologies (like SEV) leaving general purpose registers unprotected.
Although such a design decision immediately raised concerns about
the potential for data leakage [32] when SEV was first announced,
these concerns were largely dismissed due to the seemingly chal-
lenging nature of mounting such an attack — namely that a mali-
cious hypervisor would still be completely “blind” in terms of the
guest VM’s memory state, thereby making such attacks difficult to
pull off in practice.
Unfortunately, we show that this is not the case. As we demon-
strate later, this design decision opens the door to a new class of
attacks that allow a cloud adversary to fully breach the confiden-
tiality of a protected guest VM by judiciously inspecting the state
of the underlying general purpose registers. To that end, we intro-
duce a new class of CPU register inference attacks that can precisely
infer a victim VM’s stream of executed instructions, and eventu-
ally leak sensitive data given only indirect access to the CPU state
as observed via the general purpose registers. Using SEV as our
main use case, we demonstrate the practicality of this new class
of inference attacks by showing how an adversary can efficiently
recover data being communicated over TLS connections within
the encrypted guest, retrieve the contents of sensitive data as it is
being read from disk by the guest, and inject arbitrary data within
the guest via Iago-style attacks [8], without any prior knowledge
about the memory state of the guest VM. We believe such attacks
1https://arstechnica.com/gadgets/2017/09/azure-confidential-computing-will-keep-
data-secret-even-from-microsoft/
directly apply to any security designs that leave register contents
unprotected.
Additionally, we present a novel application fingerprinting tech-
nique that allows a cloud adversary, or malicious tenant, to precisely
identify the applications running in the SEV-ES protected machine,
including details such as the version and the compiler used to build
the target application. To do so, we introduce a new binary-level
signature that captures the uniqueness of the layout of functions
in an application, demonstrate how to efficiently collect the data
from a performance measurement subsystem, and use the collected
data to perform matching on a data store of target applications (e.g.,
AUP forbidden services like Bitcoin mining).
In summary, our work makes the following contributions:
(1) We introduce a new class of register inference attacks for un-
veiling information in secure enclaves wherein the adversary
only has intermittent access to the CPU registers.
(2) We present concrete implementations and empirical analy-
ses of attacks (e.g., on SEV) that demonstrate how a cloud
adversary (or a tenant that exploits bugs in the hypervisor)
can unveil sensitive data of protected VMs.
(3) We introduce a new fingerprinting technique for precisely
identifying applications running in secure enclaves that do
not leak register state. For that, we leverage application per-
formance data to uncover structural properties of applica-
tions running in the guest VMs.
(4) We suggest mitigations for the uncovered weaknesses, as
well as directions for future work.
Our attacks not only validate the security community’s spec-
ulation that leaving general purpose registers unencrypted may
eventually lead to data leakage, but highlight the powerful nature
of the attacks that become possible in the context of secure virtual-
ization technologies when only limited information is available to
an adversary. Additionally, we show that designing secure virtual-
ization platforms is far more difficult than it seems — especially in
terms of cloud confidentiality. Our ultimate goal is to raise aware-
ness of this new class of inference attacks, with the hope that by
doing so, our work will better inform future design decisions.
2 BACKGROUND
For pedagogical reasons, we briefly recap the architecture avail-
able by AMD as it is representative of the state of the art in this
domain. Specifically, “Secure Encrypted Virtualization (SEV) in-
tegrates main memory encryption capabilities with the existing
AMD-V virtualization architecture to support encrypted virtual ma-
chines. Encrypting virtual machines can help protect them not only
from physical threats but also from other virtual machines or even
the hypervisor itself” [27]. The Secure Encrypted Virtualization En-
crypted State (SEV-ES) in addition to encrypting the main memory,
protects the guest register state from the hypervisor. When SEV-ES
is enabled, guest virtual machines are granted control over the exits
to the hypervisor and the data that is provided during the exit.
The Key management is handled by the Platform Security Pro-
cessor (PSP), thus software running on the main processor (i.e.,
hypervisor) can not access the memory encryption key. The PSP is
responsible for providing guest measurements during VM provi-
sioning, secure migration of the VM and guest VM debugging.
Session 2A: SGX-based SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand74Table 1: Comparison of secure enclave technologies and attacks.
Technology
Protected zone