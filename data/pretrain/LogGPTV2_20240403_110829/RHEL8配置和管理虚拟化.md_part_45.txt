:::
:::
::: section
::: titlepage
# []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#optimizing-virtual-machine-cpu-performance_optimizing-virtual-machine-performance-in-rhel}优化虚拟机 CPU 性能 {.title}
:::
与主机计算机中的物理 CPU 非常相似，vCPU
对虚拟机(VM)性能至关重要。因此，优化 vCPU
会对虚拟机的资源效率产生重大影响。优化 vCPU：
::: orderedlist
1.  调整分配给虚拟机的主机 CPU 数。您可以使用
    [CLI](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance "使用命令行界面添加和删除虚拟 CPU"){.link}
    或 [Web
    控制台](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance "使用 Web 控制台管理虚拟 CPU"){.link}进行此操作。
2.  确保 vCPU 模型与主机的 CPU 型号一致。例如，将
    [*testguest1*]{.emphasis} 虚拟机设置为使用主机的 CPU 型号：
    ``` literallayout
    # virt-xml testguest1 --edit --cpu host-model
    ```
3.  [取消激活内核同页合并(KSM)。](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#deactivating-ksm_optimizing-virtual-machine-cpu-performance "取消激活内核相同页面合并"){.link}
4.  如果您的主机使用非统一内存访问(NUMA)，您也可以为其虚拟机 [**配置
    NUMA**]{.strong}。这会尽可能将主机的 CPU 和内存进程映射到虚拟机的
    CPU 和内存进程上。实际上，NUMA 调优为 vCPU
    提供了对分配给虚拟机的系统内存的更精简访问，这可以提高 vCPU
    处理效率。
    详情请查看 ["在虚拟机中配置
    NUMA"一节](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#configuring-numa-in-a-virtual-machine_optimizing-virtual-machine-cpu-performance "在虚拟机中配置 NUMA"){.xref}
    和 ["vCPU
    性能调整场景示例"一节](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#sample-vcpu-performance-tuning-scenario_optimizing-virtual-machine-cpu-performance "vCPU 性能调整场景示例"){.xref}。
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance}使用命令行界面添加和删除虚拟 CPU {.title}
:::
要提高或优化虚拟机(VM)的 CPU 性能，您可以添加或删除分配给虚拟机的虚拟
CPU(vCPU)。
当在运行的虚拟机上执行时，这也被称为 vCPU 热插和热拔。但请注意，RHEL 8
不支持 vCPU 热拔，红帽不建议使用它。
::: itemizedlist
**先决条件**
-   [**可选：**]{.strong}查看目标虚拟机中的 vCPU 的当前状态。例如，显示
    [*testguest*]{.emphasis} 虚拟机上的 vCPU 数量：
    ``` literallayout
    # virsh vcpucount testguest
    maximum      config         4
    maximum      live           2
    current      config         2
    current      live           1
    ```
    此输出显示 [*testguest*]{.emphasis} 目前使用 1 个 vCPU，另外 1 个
    vCPu 可以热插入以提高虚拟机性能。但是，重新引导后，vCPU
    [*testguest*]{.emphasis} 使用的数量会改为 2，而且能够热插 2 个
    vCPU。
:::
::: orderedlist
**流程**
1.  调整可以附加到虚拟机的最大 vCPU 数量，这在虚拟机下次引导时生效。
    例如，要将 [*testguest*]{.emphasis} 虚拟机的最大 vCPU 数量增加到 8:
    ``` literallayout
    # virsh setvcpus testguest 8 --maximum --config
    ```
    请注意，最大值可能受 CPU
    拓扑、主机硬件、系统管理程序和其他因素的限制。
2.  将当前附加到虚拟机的 vCPU 数量调整到上一步中配置的最大值。例如：
    ::: itemizedlist
    -   将附加到正在运行的 [*testguest*]{.emphasis} 虚拟机的 vCPU
        数量增加到 4:
        ``` literallayout
        # virsh setvcpus testguest 4 --live
        ```
        这会增加虚拟机的性能和主机的 [*testguest*]{.emphasis}
        负载占用，直到虚拟机下次引导为止。
    -   将附加到 [*testguest*]{.emphasis} 虚拟机的 vCPU 数量永久减少至
        1：
        ``` literallayout
        # virsh setvcpus testguest 1 --config
        ```
        这会降低虚拟机的性能和 [*testguest*]{.emphasis}
        的主机负载占用。但是，如果需要可热插入虚拟机以暂时提高性能。
    :::
:::
::: itemizedlist
**验证**
-   确认虚拟机的 vCPU 的当前状态反映了您的更改。
    ``` literallayout
    # virsh vcpucount testguest
    maximum      config         8
    maximum      live           4
    current      config         1
    current      live           4
    ```
:::
::: itemizedlist
**其它资源**
-   有关使用 web 控制台添加和删除 vCPU 的详情，请参考 ["使用 Web
    控制台管理虚拟
    CPU"一节](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance "使用 Web 控制台管理虚拟 CPU"){.xref}。
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#managing-virtual-cpus-using-the-web-console_optimizing-virtual-machine-cpu-performance}使用 Web 控制台管理虚拟 CPU {.title}
:::
使用 RHEL 8 web 控制台，您可以查看并配置 web
控制台连接的虚拟机使用的虚拟 CPU。
::: itemizedlist
**先决条件**
-   Web 控制台 VM 插件
    [已安装在您的系统上](#managing-virtual-machines-in-the-web-console_configuring-and-managing-virtualization.html#setting-up-the-rhel-web-console-to-manage-vms_managing-virtual-machines-in-the-web-console "设置 web 控制台以管理虚拟机"){.link}。
:::
::: orderedlist
**流程**
1.  在 [Virtual Machines]{.guimenu} 界面中，点击您要查看的信息的虚拟机。
    此时将打开一个新页面，其中包含\"概述\"部分，其中包含关于所选虚拟机的基本信息，以及用于访问虚拟机的图形界面的控制台部分。
2.  单击 Overview 窗格中 vCPU 数旁边的 [edit]{.guibutton}。
    此时会出现 vCPU 详情对话框。
    ::: informalfigure
    ::: mediaobject
    ![显示 VM CPU
    详情对话框的映像.](images/virt-cockpit-configure-vCPUs.png){width="540"}
    :::
    :::
:::
::: orderedlist
1.  为所选虚拟机配置虚拟 CPU。
    ::: itemizedlist
    -   [**vCPU 数量**]{.strong} - 当前正在使用的 vCPU 数量。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        vCPU 数量不能超过 vCPU 的最大值。
        :::
    -   [**vCPU 最大**]{.strong} - 可为虚拟机配置的最大虚拟 CPU
        数。如果这个值大于 [**vCPU
        Count**]{.strong}，可以为虚拟机附加额外的 vCPU。
    -   [**插槽**]{.strong} - 向虚拟机公开的插槽数量。
    -   [**每个插槽的内核数**]{.strong} -
        向虚拟机公开的每个插槽的内核数。
    -   [**每个内核的线程数**]{.strong} -
        向虚拟机公开的每个内核的线程数。
        请注意，
        [**插槽**]{.strong}、[**每个插槽的内核数**]{.strong}和[**每个内核的线程数**]{.strong}选项调整了虚拟机的
        CPU 拓扑。这可能对 vCPU
        性能有用，可能会影响客户机操作系统中某些软件的功能。如果您的部署不需要不同的设置，红帽建议保留默认值。
    :::
2.  点[应用]{.guibutton}。
    配置了虚拟机的虚拟 CPU。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    对虚拟 CPU 设置的更改仅在重启虚拟机后生效。
    :::
:::
::: itemizedlist
**其他资源：**
-   有关使用命令行界面管理 vCPU 的详情，请参考
    ["使用命令行界面添加和删除虚拟
    CPU"一节](#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#adding-and-removing-virtual-cpus-using-the-command-line-interface_optimizing-virtual-machine-cpu-performance "使用命令行界面添加和删除虚拟 CPU"){.xref}。
:::
:::
::: section
::: titlepage
## []{#optimizing-virtual-machine-performance-in-rhel_configuring-and-managing-virtualization.html#configuring-numa-in-a-virtual-machine_optimizing-virtual-machine-cpu-performance}在虚拟机中配置 NUMA {.title}
:::
以下方法可用于在 RHEL 8
主机上配置虚拟机(VM)的非一致性内存访问(NUMA)设置。
::: itemizedlist
**先决条件**
-   主机是一个与 NUMA 兼容的机器。要检测是否如此，请使用
    `virsh nodeinfo`{.literal} 命令并查看 `NUMA 单元：`{.literal}
    ``` literallayout
    # virsh nodeinfo
    CPU model:           x86_64
    CPU(s):              48
    CPU frequency:       1200 MHz
    CPU socket(s):       1
    Core(s) per socket:  12
    Thread(s) per core:  2
    NUMA cell(s):        2
    Memory size:         67012964 KiB
    ```
    如果行的值为 2 或更高，则主机与 NUMA 兼容。
:::
::: title
**流程**
:::
为便于使用，您可以使用自动化实用程序和服务设置虚拟机的 NUMA
配置。但是，手动 NUMA 设置可能会显著提高性能。
[**自动方法**]{.strong}
::: itemizedlist
-   将虚拟机的 NUMA 策略设置为 `Preferred`{.literal}。例如，对于
    [*testguest5*]{.emphasis} 虚拟机要这样做：
    ``` literallayout
    # virt-xml testguest5 --edit --vcpus placement=auto
    # virt-xml testguest5 --edit --numatune mode=preferred
    ```
-   在主机上启用自动 NUMA 均衡：
    ``` literallayout
    # echo 1 > /proc/sys/kernel/numa_balancing
    ```
-   使用 `numad`{.literal} 命令，自动将 VM CPU 与内存资源匹配。
    ``` literallayout
    # numad
    ```
:::
[**手动方法**]{.strong}
::: orderedlist
1.  将特定 vCPU 线程固定到特定主机 CPU 或者 CPU 范围。在非 NUMA
    主机和虚拟机上也可以这样做，我们推荐您使用一种安全的方法来提高 vCPU
    性能。
    例如，以下命令将 [*testguest6*]{.emphasis} 虚拟机的 vCPU 线程 0 到 5
    分别固定到主机 CPU 1、3、5、7、9 和 11：
    ``` literallayout
    # virsh vcpupin testguest6 0 1
    # virsh vcpupin testguest6 1 3
    # virsh vcpupin testguest6 2 5
    # virsh vcpupin testguest6 3 7
    # virsh vcpupin testguest6 4 9
    # virsh vcpupin testguest6 5 11
    ```
    之后，您可以验证操作是否成功：
    ``` literallayout
    # virsh vcpupin testguest6
    VCPU   CPU Affinity
    ----------------------
    0      1
    1      3
    2      5
    3      7