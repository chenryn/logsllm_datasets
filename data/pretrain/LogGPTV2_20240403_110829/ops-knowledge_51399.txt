User: I'm new to python. I'm trying to write an application with command line interface. The main application is communicating with server using tcp protocol. I want it to work in the background so I won't have to connect with the server every time I use interface. What is a proper approach to such a problem? 
I don't want the interface to be an infinite loop. I would like to use it like this:
my_app.py command arguments. 
Please note that I have no problems with writing interface (I'm using argparse library right now) but don't know what architecture would suit me best and how to implement it in python.
Assistant: If you put something in the background, then it's no longer connected to the current shell (or the terminal). So you would need the background process to open a socket so the command line part could send it the command.
In the end, there is no way around creating a new connection to the server every time you start the command line process and close the connection when the command line process exits.
The only alternative is to use the readline module to simulate the command line inside of your script. That way, you can open the connection, use readline to ask for any number of commands to send to the server. Plus you need an "exit" command which terminates the command line process (which also closes the server connection).