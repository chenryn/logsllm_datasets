demonstrated using an old platform. We also remark that smart meters in deployment
do not need the generic interfaces and peripheral devices offered as a development
board, meaning the cost of practical deployment per smart meter would be much less
than the consumer market price for the board before economies of scale kick in.
9http://crypto.stanford.edu/pbc
Ethernet connectionSM (Smart Meter)RU (Residential Users)/UC (Utility Company)226Sipster: Settling IOU Privately and Quickly with Smart Meters
ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
Table 1: Computation Time per Operation
Operation
Shorthand
SM Comp.
Time (ms)
RU/UC Comp.
Time (ms)
add
Pairing
pairing
17.567
Addition
0.997 × 10−4
±2.601 × 10−4 ±1.181 × 10−6
0.162 × 10−6
±1.365 × 10−4 ±1.081 × 10−6
1.675
mul
div
exp
12.898
Exponentiation Multiplication
3.366 × 10−2
±3.164 × 10−6 ±1.532 × 10−6 ±1.992 × 10−4
3.265 × 10−3
±0.982 × 10−6 ±1.135 × 10−6 ±1.805 × 10−4
Division
3.047 × 10−2
3.932 × 10−3
±5.06 × 10−4
±4.05 × 10−6
ECDSA Sign
sign
1.866
1.196
0.277
ECDSA Verify
verify
2.148
±6.48 × 10−4
±3.92 × 10−4
0.366
Figure 2: Computation Time at (a) SM, (b) RU, and (c) UC
ID,t , which is 1 × sign.
initialization10, so we focus on measuring the performances of the
three online phases for different entities, namely, SM, RU, and UC.
As discussed in Section 2.3.2, the parameter K, denoting the bill
amount that the RU has to pay, which manifests in different phases
and affects the performance most. In the bill issuing phase, the com-
putation at the SM includes generating ˜Ri, updating internal state τ,
and computing the signature σ ˜Ri
. Thus, its computation complexity
contains K × exp, 2K × mul, K × add, and K × sign. Moreover, the
SM also takes charge of generating billing information for RU in
the bill verification phase. Its computation complexity is dominated
by the generation of signature σ B
Fig. 2(a) depicts its computation time under different K’s. Appar-
ently, the computation time increases linearly as K grows. When
K = 100, the SM’s computation time reaches around 3s in total,
which is the total amount of time required to generate all K tokens.
Nevertheless, these tokens are processed only once in a while. The
estimated total amount of time should be spread over for the unit
of granularity for fine-grained bill settlement. So, it should not be
interpreted as a 3s delay at the SM. See Section 5.2 for details.
For the RU, in the bill settlement phase, its computation includes
2K × pairing. Its computation in the bill verification phase includes
aggregating over rcpti to obtain the combined receipt σ R
ID,t , which
consists of(K−1)×mul, 1×div, and 1×exp. Fig. 2(b) shows how RU’s
computation time varies with bill amount K in each phase. An RU
needs to compute the pairing results of its own records {( ˜Ri , дα)}
and the UC’s receipts {(rcpti , д)} whose sizes are dependent on K.
For example, when K = 10, the RU’s computation takes 2.477ms,
and it increases to 3.031ms as K grows to 60. Even though the
computation time of the bill verification phase is linear in K, its
slope is rather flat compared with the bill settlement phase.
10The setup phase is quite minimal. There is no user setup. The UC setups a bilinear
group context and a key pair. The SM should also have equipped with a key pair.
Figure 3: (a) Computation Time at the UC in Bill Settlement,
(b) Computation time at the UC in Bill Verification
For the UC, its computation in the bill settlement phase includes
verifying K received tokens tki = ( ˜Ri , σ ˜Ri) and computing K re-
ceipts: rcpti = ˜Rα
i , which correspond to K × verify and K × exp
operations. In the bill verification phase, its computation complex-
ity is 1×verify and 2×pairing. Fig. 2(c) depicts the relation between
bill amount K and the UC’s computation time in different phases.
We observe that in the bill settlement phase, the computation time
increases linearly as K grows, while the bill verification indicates
its computation time, i.e., 3.726ms, is independent of K. This con-
firms the expectation that the number of operations of the UC’s bill
verification phase is fixed and independent from the bill amount K.
We then consider another parameter N , denoting the number
of RUs handled by the UC. Fig. 3(a) depicts the UC’s computation
time in the bill settlement phase with different N ’s, assuming that
all RUs share the same K. We notice that the computation time
is a linear function of both K and N . Specifically, when K = 100
and N = 100, the total computation time at the UC for generating
receipts is around 13.5s, which is still a relatively short duration
compared with the billing granularity, say one hour. We believe that
the computation performance at the UC can be further improved
Sipster:SettlingIOUPrivatelyandQuicklywithSmartMetersACSAC’21,December6ś10,2021,Austin,Texas,USATable1:ComputationTimeperOperationOperationPairingAdditionExponentiationMultiplicationDivisionECDSASignECDSAVerifyShorthandpairingaddexpmuldivsignverifySMComp.17.5670.997×10−412.8983.366×10−23.047×10−21.8662.148Time(ms)±2.601×10−4±1.181×10−6±5.06×10−4±3.164×10−6±1.532×10−6±1.992×10−4±6.48×10−4RU/UCComp.1.6750.162×10−61.1963.265×10−33.932×10−30.2770.366Time(ms)±1.365×10−4±1.081×10−6±4.05×10−6±0.982×10−6±1.135×10−6±1.805×10−4±3.92×10−420406080100050010001500200025003000Computation time (ms)Bill issuing phaseBill verification phase(a)204060801000100200300400Computation time (ms)Bill settlement phaseBill verification phase(b)20406080100050100150Computation time (ms)Bill settlement phaseBill verification phase(c)Figure2:ComputationTimeat(a)SM,(b)RU,and(c)UCinitialization10,sowefocusonmeasuringtheperformancesofthethreeonlinephasesfordifferententities,namely,SM,RU,andUC.AsdiscussedinSection2.3.2,theparameter𝐾,denotingthebillamountthattheRUhastopay,whichmanifestsindifferentphasesandaffectstheperformancemost.Inthebillissuingphase,thecom-putationattheSMincludesgenerating˜𝑅𝑖,updatinginternalstate𝜏,andcomputingthesignature𝜎˜𝑅𝑖.Thus,itscomputationcomplexitycontains𝐾×exp,2𝐾×mul,𝐾×add,and𝐾×sign.Moreover,theSMalsotakeschargeofgeneratingbillinginformationforRUinthebillverificationphase.Itscomputationcomplexityisdominatedbythegenerationofsignature𝜎BID,𝑡,whichis1×sign.Fig.2(a)depictsitscomputationtimeunderdifferent𝐾’s.Appar-ently,thecomputationtimeincreaseslinearlyas𝐾grows.When𝐾=100,theSM’scomputationtimereachesaround3sintotal,whichisthetotalamountoftimerequiredtogenerateall𝐾tokens.Nevertheless,thesetokensareprocessedonlyonceinawhile.Theestimatedtotalamountoftimeshouldbespreadoverfortheunitofgranularityforfine-grainedbillsettlement.So,itshouldnotbeinterpretedasa3sdelayattheSM.SeeSection5.2fordetails.FortheRU,inthebillsettlementphase,itscomputationincludes2𝐾×pairing.Itscomputationinthebillverificationphaseincludesaggregatingoverrcpt𝑖toobtainthecombinedreceipt𝜎RID,𝑡,whichconsistsof(𝐾−1)×mul,1×div,and1×exp.Fig.2(b)showshowRU’scomputationtimevarieswithbillamount𝐾ineachphase.AnRUneedstocomputethepairingresultsofitsownrecords{(˜𝑅𝑖,𝑔𝛼)}andtheUC’sreceipts{(rcpt𝑖,𝑔)}whosesizesaredependenton𝐾.Forexample,when𝐾=10,theRU’scomputationtakes2.477ms,anditincreasesto3.031msas𝐾growsto60.Eventhoughthecomputationtimeofthebillverificationphaseislinearin𝐾,itsslopeisratherflatcomparedwiththebillsettlementphase.10Thesetupphaseisquiteminimal.Thereisnousersetup.TheUCsetupsabilineargroupcontextandakeypair.TheSMshouldalsohaveequippedwithakeypair.20406080100050100150200250300Computation time (ms)Figure3:(a)ComputationTimeattheUCinBillSettlement,(b)ComputationtimeattheUCinBillVerificationFortheUC,itscomputationinthebillsettlementphaseincludesverifying𝐾receivedtokenstk𝑖=(˜𝑅𝑖,𝜎˜𝑅𝑖)andcomputing𝐾re-ceipts:rcpt𝑖=˜𝑅𝛼𝑖,whichcorrespondto𝐾×verifyand𝐾×expoperations.Inthebillverificationphase,itscomputationcomplex-ityis1×verifyand2×pairing.Fig.2(c)depictstherelationbetweenbillamount𝐾andtheUC’scomputationtimeindifferentphases.Weobservethatinthebillsettlementphase,thecomputationtimeincreaseslinearlyas𝐾grows,whilethebillverificationindicatesitscomputationtime,i.e.,3.726ms,isindependentof𝐾.Thiscon-firmstheexpectationthatthenumberofoperationsoftheUC’sbillverificationphaseisfixedandindependentfromthebillamount𝐾.Wethenconsideranotherparameter𝑁,denotingthenumberofRUshandledbytheUC.Fig.3(a)depictstheUC’scomputationtimeinthebillsettlementphasewithdifferent𝑁’s,assumingthatallRUssharethesame𝐾.Wenoticethatthecomputationtimeisalinearfunctionofboth𝐾and𝑁.Specifically,when𝐾=100and𝑁=100,thetotalcomputationtimeattheUCforgeneratingreceiptsisaround13.5s,whichisstillarelativelyshortdurationcomparedwiththebillinggranularity,sayonehour.WebelievethatSipster:SettlingIOUPrivatelyandQuicklywithSmartMetersACSAC’21,December6ś10,2021,Austin,Texas,USATable1:ComputationTimeperOperationOperationPairingAdditionExponentiationMultiplicationDivisionECDSASignECDSAVerifyShorthandpairingaddexpmuldivsignverifySMComp.17.5670.997×10−412.8983.366×10−23.047×10−21.8662.148Time(ms)±2.601×10−4±1.181×10−6±5.06×10−4±3.164×10−6±1.532×10−6±1.992×10−4±6.48×10−4RU/UCComp.1.6750.162×10−61.1963.265×10−33.932×10−30.2770.366Time(ms)±1.365×10−4±1.081×10−6±4.05×10−6±0.982×10−6±1.135×10−6±1.805×10−4±3.92×10−420406080100050010001500200025003000Computation time (ms)Bill issuing phaseBill verification phase(a)204060801000100200300400Computation time (ms)Bill settlement phaseBill verification phase(b)20406080100050100150Computation time (ms)Bill settlement phaseBill verification phase(c)Figure2:ComputationTimeat(a)SM,(b)RU,and(c)UCinitialization10,sowefocusonmeasuringtheperformancesofthethreeonlinephasesfordifferententities,namely,SM,RU,andUC.AsdiscussedinSection2.3.2,theparameter𝐾,denotingthebillamountthattheRUhastopay,whichmanifestsindifferentphasesandaffectstheperformancemost.Inthebillissuingphase,thecom-putationattheSMincludesgenerating˜𝑅𝑖,updatinginternalstate𝜏,andcomputingthesignature𝜎˜𝑅𝑖.Thus,itscomputationcomplexitycontains𝐾×exp,2𝐾×mul,𝐾×add,and𝐾×sign.Moreover,theSMalsotakeschargeofgeneratingbillinginformationforRUinthebillverificationphase.Itscomputationcomplexityisdominatedbythegenerationofsignature𝜎BID,𝑡,whichis1×sign.Fig.2(a)depictsitscomputationtimeunderdifferent𝐾’s.Appar-ently,thecomputationtimeincreaseslinearlyas𝐾grows.When𝐾=100,theSM’scomputationtimereachesaround3sintotal,whichisthetotalamountoftimerequiredtogenerateall𝐾tokens.Nevertheless,thesetokensareprocessedonlyonceinawhile.Theestimatedtotalamountoftimeshouldbespreadoverfortheunitofgranularityforfine-grainedbillsettlement.So,itshouldnotbeinterpretedasa3sdelayattheSM.SeeSection5.2fordetails.FortheRU,inthebillsettlementphase,itscomputationincludes2𝐾×pairing.Itscomputationinthebillverificationphaseincludesaggregatingoverrcpt𝑖toobtainthecombinedreceipt𝜎RID,𝑡,whichconsistsof(𝐾−1)×mul,1×div,and1×exp.Fig.2(b)showshowRU’scomputationtimevarieswithbillamount𝐾ineachphase.AnRUneedstocomputethepairingresultsofitsownrecords{(˜𝑅𝑖,𝑔𝛼)}andtheUC’sreceipts{(rcpt𝑖,𝑔)}whosesizesaredependenton𝐾.Forexample,when𝐾=10,theRU’scomputationtakes2.477ms,anditincreasesto3.031msas𝐾growsto60.Eventhoughthecomputationtimeofthebillverificationphaseislinearin𝐾,itsslopeisratherflatcomparedwiththebillsettlementphase.10Thesetupphaseisquiteminimal.Thereisnousersetup.TheUCsetupsabilineargroupcontextandakeypair.TheSMshouldalsohaveequippedwithakeypair.20406080100050100150200250300Computation time (ms)Figure3:(a)ComputationTimeattheUCinBillSettlement,(b)ComputationtimeattheUCinBillVerificationFortheUC,itscomputationinthebillsettlementphaseincludesverifying𝐾receivedtokenstk𝑖=(˜𝑅𝑖,𝜎˜𝑅𝑖)andcomputing𝐾re-ceipts:rcpt𝑖=˜𝑅𝛼𝑖,whichcorrespondto𝐾×verifyand𝐾×expoperations.Inthebillverificationphase,itscomputationcomplex-ityis1×verifyand2×pairing.Fig.2(c)depictstherelationbetweenbillamount𝐾andtheUC’scomputationtimeindifferentphases.Weobservethatinthebillsettlementphase,thecomputationtimeincreaseslinearlyas𝐾grows,whilethebillverificationindicatesitscomputationtime,i.e.,3.726ms,isindependentof𝐾.Thiscon-firmstheexpectationthatthenumberofoperationsoftheUC’sbillverificationphaseisfixedandindependentfromthebillamount𝐾.Wethenconsideranotherparameter𝑁,denotingthenumberofRUshandledbytheUC.Fig.3(a)depictstheUC’scomputationtimeinthebillsettlementphasewithdifferent𝑁’s,assumingthatallRUssharethesame𝐾.Wenoticethatthecomputationtimeisalinearfunctionofboth𝐾and𝑁.Specifically,when𝐾=100and𝑁=100,thetotalcomputationtimeattheUCforgeneratingreceiptsisaround13.5s,whichisstillarelativelyshortdurationcomparedwiththebillinggranularity,sayonehour.Webelievethat227ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
Sherman S. M. Chow, Ming Li, Yongjun Zhao, and Wenqiang Jin
Table 2: Computation Performance
Computation Complexity
SM K × exp, 2K × mul, K × add, K × sign, 1 × sign
RU
2K × pairing, (K − 1) × mul, 1 × div, 1 × exp
K × verify, K × exp, 1 × verify, 2 × pairing
UC
Table 3: Service Latency of Sipster
Latency (ms)
Issuing
34.272 ± 2.807
Settlement
5.665 ± 0.819
Verification
9.212 ± 0.826
Figure 5: (a) Computation Time, (b) Communication Cost
latency is proportional to K for the fine-grained billing. Note that
these bills are not necessarily generated all at once. They can be
from multiple cycles. In this case, the service latency for bill amount
K reflects the cumulative latency over multiple cycles.
The service latency for bill settlement also increases since the RU
performs more pairing operations to verify the receipts generated
by Algorithm 2. For bill verification, its latency slightly increases
with K. For example, the latency is 8.701 ± 0.352ms when K = 20,
and it is 9.212±0.826ms when K = 100. This slight increase is due to
more receipts being combined (generation of σ R
ID,t in Algorithm 4).
We remark that the receipt combination takes place in the RU side
and does not require computation from the UC.
Fig. 4(b) shows the impact of N , the number of RUs. In the code,
we create a separate thread for handling operations from each RU
at the UC side. Thus, the UC processes RUs’ requests in parallel.
The bill issuing still takes a longer time for the signing process
in a resource-constrained smart meter. Specifically, it is 34.272 ±
2.807ms when N = 100, while the latencies for bill settlement and
verification are 9.541 ± 0.359ms and 12.08 ± 1.187ms, respectively.
The latencies are acceptable even under a short billing period, say
one hour. Besides, for bill verification, its latency can be further
reduced by adopting a more powerful cluster at the UC.
5.3 Communication Performance
We then evaluate the transmitted payload data size between differ-
ent entities. In our system, communication only occurs between
the RU and the SM, and between an RU and the UC.
In the bill issuing phase, the SM transmits K tuples of ( ˜Ri , σ ˜Ri),
totaling K|n| + K|G1| bits, to the RU, where |G1| denotes the size
of an element in G1. For |G1| = 512 bits and |n| = 256 bits, the cost
is 96K bytes. In the bill settlement phase, the RU forwards K tuples
of ( ˜Ri , σ ˜Ri) to the UC, resulting in 96K bytes transmission. The
UC replies with K receipts ˜Rα
i , which costs K|G1| and translates
to 64 · K bytes. In the bill verification phase, the SM sends the RU
ID,t) with the communication cost of |p| +|G1| +|n| = 104 bytes
(τ , σ B
as |p| = 160 bits. Then, the RU forwards (RID,t , σ B
ID,t) to the
UC, resulting in |G1| + 2|n| = 128 bytes of transmission. In total,
the SM transmits 96K + 104 bytes to the UC. The data transmitted
from the RU to the UC is 96K + 128 bytes, and the UC replies 64K
bytes back.
ID,t , σ R
Figure 4: (a) Service Latency under Different K (b) or N
by adopting powerful server clusters or cloud computing services.
Recall that UC is implemented on a PC with moderate computation
capability in our experiments. Fig. 3(b) demonstrates the relation
between computation time and N in the bill verification phase. It
increases linearly as N grows.
To sum up, for a fixed bill amount K, the SM has the longest
computation time while the RU has the shortest. This is because
the SM typically is a low-cost micro-computation unit with much
lower computation capacity. However, as observed in Fig. 5(a),
most bills are handled within a very short time; the longest service
latency is less than 3s, which is negligible to RUs. Naturally, the
UC experiences the longest computation time when the number
of RUs is relatively large. In real-world implementations, it can
be greatly shortened by employing computation unit clustering.
Table 2 summarizes the computation complexity.
5.2 Service Latency
We also evaluate the service latency of Sipster in terms of the overall
delay in each of the three phases: bill issuing, bill settlement, and
bill verification. We focus on computation but not communication
since our protocols are 2-message protocols.
Table 3 shows the service latency by considering one RU. Particu-
larly, for the bill issuing and the bill settlement phases, we examine
the total computation time for handling one unit of expense, i.e.,
K = 1. For the bill verification phase, K is set to 100, indicating that
the RU consumes total utility at expense K for one billing period.
We set K = 1 for the first two phases because the SM generates
a token and forwards it to the RU once each unit of expense is
incurred, regardless of how much expense the RU causes in total
in one billing period. The service latency of bill issuing (34.272ms)
is the largest among the three phases. Its most time-consuming
operation is for the RU generating the tokens (tk, τ).
Fig. 4(a) depicts the average service latency with respect to K
when N = 1. The bill issuing is executed by the SM. Its service
20406080100050010001500200025003000Service latency (ms)Bill issuing phaseBill settlement phaseBill verification phase204060801005101520253035Service latency (ms)Bill issuing phaseBill settlement phaseBill verfication phaseACSAC’21,December6ś10,2021,Austin,Texas,USAShermanS.M.Chow,MingLi,YongjunZhao,andWenqiangJinTable2:ComputationPerformanceComputationComplexitySM𝐾×exp,2𝐾×mul,𝐾×add,𝐾×sign,1×signRU2𝐾×pairing,(𝐾−1)×mul,1×div,1×expUC𝐾×verify,𝐾×exp,1×verify,2×pairingTable3:ServiceLatencyofSipsterIssuingSettlementVerificationLatency(ms)34.272±2.8075.665±0.8199.212±0.82620406080100050010001500200025003000Service latency (ms)Bill issuing phaseBill settlement phaseBill verification phase204060801005101520253035Service latency (ms)Bill issuing phaseBill settlement phaseBill verfication phaseFigure4:(a)ServiceLatencyunderDifferent𝐾(b)or𝑁thecomputationperformanceattheUCcanbefurtherimprovedbyadoptingpowerfulserverclustersorcloudcomputingservices.RecallthatUCisimplementedonaPCwithmoderatecomputationcapabilityinourexperiments.Fig.3(b)demonstratestherelationbetweencomputationtimeand𝑁inthebillverificationphase.Itincreaseslinearlyas𝑁grows.Tosumup,forafixedbillamount𝐾,theSMhasthelongestcomputationtimewhiletheRUhastheshortest.ThisisbecausetheSMtypicallyisalow-costmicro-computationunitwithmuchlowercomputationcapacity.However,asobservedinFig.5(a),mostbillsarehandledwithinaveryshorttime;thelongestservicelatencyislessthan3s,whichisnegligibletoRUs.Naturally,theUCexperiencesthelongestcomputationtimewhenthenumberofRUsisrelativelylarge.Inreal-worldimplementations,itcanbegreatlyshortenedbyemployingcomputationunitclustering.Table2summarizesthecomputationcomplexity.5.2ServiceLatencyWealsoevaluatetheservicelatencyofSipsterintermsoftheoveralldelayineachofthethreephases:billissuing,billsettlement,andbillverification.Wefocusoncomputationbutnotcommunicationsinceourprotocolsare2-messageprotocols.Table3showstheservicelatencybyconsideringoneRU.Particu-larly,forthebillissuingandthebillsettlementphases,weexaminethetotalcomputationtimeforhandlingoneunitofexpense,i.e.,𝐾=1.Forthebillverificationphase,𝐾issetto100,indicatingthattheRUconsumestotalutilityatexpense𝐾foronebillingperiod.Weset𝐾=1forthefirsttwophasesbecausetheSMgeneratesatokenandforwardsittotheRUonceeachunitofexpenseisincurred,regardlessofhowmuchexpensetheRUcausesintotalinonebillingperiod.Theservicelatencyofbillissuing(34.272ms)isthelargestamongthethreephases.Itsmosttime-consumingoperationisfortheRUgeneratingthetokens(tk,𝜏).20406080100050010001500200025003000Computation time (ms)204060801000200040006000800010000Communication cost (bytes) Figure5:(a)ComputationTime,(b)CommunicationCostFig.4(a)depictstheaverageservicelatencywithrespectto𝐾when𝑁=1.ThebillissuingisexecutedbytheSM.Itsservicelatencyisproportionalto𝐾forthefine-grainedbilling.Notethatthesebillsarenotnecessarilygeneratedallatonce.Theycanbefrommultiplecycles.Inthiscase,theservicelatencyforbillamount𝐾reflectsthecumulativelatencyovermultiplecycles.TheservicelatencyforbillsettlementalsoincreasessincetheRUperformsmorepairingoperationstoverifythereceiptsgeneratedbyAlgorithm2.Forbillverification,itslatencyslightlyincreaseswith𝐾.Forexample,thelatencyis8.701±0.352mswhen𝐾=20,anditis9.212±0.826mswhen𝐾=100.Thisslightincreaseisduetomorereceiptsbeingcombined(generationof𝜎RID,𝑡inAlgorithm4).WeremarkthatthereceiptcombinationtakesplaceintheRUsideanddoesnotrequirecomputationfromtheUC.Fig.4(b)showstheimpactof𝑁,thenumberofRUs.Inthecode,wecreateaseparatethreadforhandlingoperationsfromeachRUattheUCside.Thus,theUCprocessesRUs’requestsinparallel.Thebillissuingstilltakesalongertimeforthesigningprocessinaresource-constrainedsmartmeter.Specifically,itis34.272±2.807mswhen𝑁=100,whilethelatenciesforbillsettlementandverificationare9.541±0.359msand12.08±1.187ms,respectively.Thelatenciesareacceptableevenunderashortbillingperiod,sayonehour.Besides,forbillverification,itslatencycanbefurtherreducedbyadoptingamorepowerfulclusterattheUC.5.3CommunicationPerformanceWethenevaluatethetransmittedpayloaddatasizebetweendiffer-ententities.Inoursystem,communicationonlyoccursbetweentheRUandtheSM,andbetweenanRUandtheUC.Inthebillissuingphase,theSMtransmits𝐾tuplesof(˜𝑅𝑖,𝜎˜𝑅𝑖),totaling𝐾|𝑛|+𝐾|G1|bits,totheRU,where|G1|denotesthesizeofanelementinG1.For|G1|=512bitsand|𝑛|=256bits,thecostis96𝐾bytes.Inthebillsettlementphase,theRUforwards𝐾tuplesof(˜𝑅𝑖,𝜎˜𝑅𝑖)totheUC,resultingin96𝐾bytestransmission.TheUCreplieswith𝐾receipts˜𝑅𝛼𝑖,whichcosts𝐾|G1|andtranslatesto64·𝐾bytes.Inthebillverificationphase,theSMsendstheRU(𝜏,𝜎BID,𝑡)withthecommunicationcostof|𝑝|+|G1|+|𝑛|=104bytesas|𝑝|=160bits.Then,theRUforwards(𝑅ID,𝑡,𝜎BID,𝑡,𝜎RID,𝑡)totheUC,resultingin|G1|+2|𝑛|=128bytesoftransmission.Intotal,theSMtransmits96𝐾+104bytestotheUC.ThedatatransmittedfromtheRUtotheUCis96𝐾+128bytes,andtheUCreplies64𝐾bytesback.228Sipster: Settling IOU Privately and Quickly with Smart Meters
ACSAC ’21, December 6–10, 2021, Austin, Texas, USA
Table 4: Communication Cost Performance
Communication Cost (bytes)
SM → RU
RU → UC
UC → RU
96 · K + 104
96 · K + 128
64 · K
Table 4 and Fig. 5 summarize the communication cost between
different entities when K varies. Overall communication costs be-
tween each pair of entities are all in the order of 103 bytes, even
when K = 100.
6 RELATED WORK
6.1 Cryptocurrency-based Solutions
Our approach of paying unit coins may have some resemblance
to the Zerocoin [38] approach, where a user also first pays for
units of coins (by publishing commitments of the coins on a public
bulletin board) and proves later that the bill has been settled by
proving the knowledge of the openings (blinding factors) to K of
them. Technically, it does not solve our problem immediately. First,
it requires continual updates on both the accumulator [16] of the
coins and hence the witness for proving the knowledge of a coin
stored in the commitment. A more serious problem is that the RU
needs to prove the knowledge of K distinct openings. Its complexity
is O(K), and it is unclear how to hide the value K for this proof.11