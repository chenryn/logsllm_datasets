attack. Unfortunately, at the time of this writing we
do not have enough experimental evidence to conﬁrm
this. For the sake of safety, in the analysis below we
assume that, by compromising all interfaces of an AR,
the adversary also compromises the AR itself. There-
fore, a non-compromised AR must have at least one non-
compromised interface. To sum up, we assume that:
Assumption 5.1. Adv cannot correlate input and out-
put of a non-compromised AR.
Our analysis is based on indistinguishable conﬁgura-
tions. A conﬁguration deﬁnes consumers’ activity with
respect to a particular network. Adv only controls a sub-
set of network entities and observes only some pack-
ets. Therefore, it cannot distinguish between two con-
ﬁgurations that vary only in the activity that it cannot
directly observe or in the content of encrypted pack-
ets that it cannot decrypt.
In order to provide mean-
ingful anonymity guarantees, we identify a set of con-
ﬁgurations that have one or more equivalent counter-
parts. However, unlike [19], our analysis takes into ac-
count the infrastructure underlying ANDaNA, i.e., the
network topology and packets exchanged over the ac-
tual network. We believe that this makes our model and
analysis both realistic and ﬁne-grained, since it accounts
for all adversarial advantages related to the underlying
network structure. Packets sent by a non-compromised
consumer u to a non-compromised AR r transit through
several — possibly compromised — NDN routers that
are not part of ANDaNA. The model of [19] considers r
compromised even if only one link between u and r is
controlled by the adversary. Whereas, in our model, r is
considered to be non-compromised.
Notation and Deﬁnitions
Table 1 summarizes our notation. The intersection of
P and C might not be empty, which reﬂects the fact that
consumers can act as producers and vice versa. Sim-
ilarly, our model does not prevent routers from being
producers and/or consumers. Therefore, R∩P and R∩C
might be non-empty.
The adversary is deﬁned as a 4-tuple: Adv =
(PAdv, CAdv, RAdv, IFAdv) ⊂ (P, C, R, IF) where indi-
vidual components specify (respectively) sets of: com-
promised producers, consumers, routers and interfaces.
If r ∈ RAdv, then Adv controls all interfaces and has ac-
cess to all decryption key and state information of r. If
all interfaces of r are in IFAdv, then r ∈ RAdv. In other
words, for the sake of this analysis, controlling all in-
terfaces of a router is equivalent to learning that router’s
decryption/secret key. We emphasize that for r ∈ R to
be non-compromised, at least one of its interfaces must
be non-compromised. If p ∈ PAdv, Adv controls p’s
interfaces, monitors interests received by p and controls
both content and timing of p’s responses to incoming in-
terests. If c ∈ CAdv, then Adv controls all ﬁelds and
timing of interests. Finally, if if ∈ IFAdv, then Adv can
listen to all trafﬁc ﬂowing through if, as well as send-
ing new trafﬁc from it. IFAdv includes all the interfaces
of compromised consumers, producers and routers plus
additional interfaces eavesdropped on by Adv.
For ease of notation, we do not explicitly indicate the
name of the next router in interest packets nor symmetric
keys chosen by consumers. We denote encrypted inter-
ests as:
intpk1,pk2 = Epk1 (Epk2 (int))
with pk1, pk2 ∈ PK ∪{⊥} where ⊥ indicates a special
symbol for “no encryption”. If pk1 = ⊥ then pk2 = ⊥.
The size of public keys is a function of the global se-
curity parameter κ. For simplicity, we denote intpk1,⊥
as intpk1. When an AR receives intpk1,pk2 and if it is in
possession of the decryption key corresponding to pk1, it
removes the outer layer of encryption. While E is CCA-
secure (and therefore also CPA-secure), we do not re-
quire E to be key private [6]. Key privacy prevents an
observer from learning the public key used to generate
a ciphertext. In ANDaNA, knowledge of the public key
used to encrypt the outer layer of an interest does not re-
veal any more information than the (cleartext) name on
the interest.
We deﬁne the anonymity set with respect to interface
ifr
i as:
= {d | Pr [d →int r | int ; ifr
i ] > 0}
Aif r
i
In other words, for each interface ifr
i of router r, Aif r
contains all entities that could have sent int with non-
zero probability. We deﬁne pathint = {ifr
i}.
i | int ; ifr
This is the sequence of interfaces traversed by int. We
use it to deﬁne the anonymity set of an interest with re-
spect Adv:
i
(cid:44) (cid:92)
Aint
Adv
Aif r
i
pathint∩IFAdv
Adv such that u ∈ Aint
Intuitively, if u is far away from a compromised entity
d, then all sets Aint
Adv are a large
subset of C. Adv can rule out possible senders of an in-
terest (i.e., determine if u /∈ Aint
Adv) only if it controls
at least one entity (routers, interfaces) along each path
that u does not share with other consumers. The level of
anonymity of u ∈ Aint
Adv with respect to Adv is propor-
tional to the size of Aint
Adv. In particular, if u is the only
member of Aint
Adv, it has no anonymity, since int must
have been issued by u.
A conﬁguration is a description of the network activ-
ity. Each conﬁguration maps consumers to their actions,
deﬁned as the interest they issue and the corresponding
content producers. More formally, a conﬁguration is a
relation:
C : C → {(r1, r2, p, intpk1,pk2)}
with (r1, r2, p, intpk1,pk2) ∈ R2×P×{0, 1}∗, that maps
a consumer to: a pair of routers deﬁning an ephemeral
circuit, an interest (encrypted for this circuit) and a pro-
ducer. C(u) is a 4-tuple that represents one action of u
in C. Ci is the selection on the i-th component of C,
i.e., if C(u) = (r1, r2, p, intpk1,pk2), then C1(u) = r1,
C2(u) = r2, C3(u) = p and C4(u) = intpk1,pk2.
We say that two conﬁgurations C and C(cid:48) are “indis-
tinguishable with respect to Adv” if Adv can only de-
termine with probability at most 1/2 + ε which conﬁg-
uration corresponds to the observed network, for some
ε negligible in the security parameter κ. We denote two
such conﬁgurations as C ≡Adv C(cid:48).
We now show that assumption 5.1 holds if a pas-
sive adversary observes only input and output values of
set of all consumers, u ∈ C
set of all content producers, p ∈ P
set of all routers, r ∈ R
set of all interfaces on all network devices
i-th interface on router r
C
P
R
IF
i ∈ IF
ifr
PK set of all public keys
(pki, ski)
public/priv. encryption keypair of an AR ri
Adv
d
d →int r
int ; ifr
i
Epk(·)
intpk1,pk2
adversary
an entity, i.e., a router or a host
entity d sends interest int to some interface of router r
router r receives interest int on interface ifr
i
CCA-secure hybrid encryption scheme
interest encrypted under public keys pk1, pk2
⊥ no encryption
Table 1. Notation.
an AR (i.e., it cannot use timing information or other
side-channels), and the underlying encryption scheme
is semantically secure. Claim 5.1 below states that, for
any encrypted interest, Adv cannot determine if it corre-
sponds to an interest decrypted by a non-compromised
router, by observing the two and with no additional in-
formation.
Claim 5.1. Given any CPA-secure public key encryp-
tion scheme E and two same-length interests int0, int1
chosen by Adv, Adv has only negligible advantage over
1/2 in determining the value of a randomly selected bit
, with pk1 ∈ PK
b, given intb
, int0
and pk2 ∈ PK ∪ {⊥}.
Due to the lack of space, Claim 5.1 is formally justiﬁed
in Appendix A.
Anonymity Deﬁnitions and Conditions
and int1
pk1,pk2
pk2
pk2
In this section we present formal deﬁnitions of
anonymity for our model. We introduce the notions of
consumer anonymity, producer anonymity and producer
and consumer unlinkability. We show that ephemeral
circuits composed of two anonymizing routers — at
least one of which is not compromised — provide con-
sumer and producer anonymity. This, in turn, implies
consumer and producer unlinkability. Due to the lack
of space, we defer formal proofs of the theorems in this
section to Appendix A.
A consumer u enjoys consumer anonymity if Adv
cannot determine whether u or a different user u(cid:48) is
retrieving some speciﬁc content. This notion is for-
malized using indistinguishable conﬁgurations: given a
conﬁguration C in which u retrieves content t, u has
consumer anonymity if there exist another conﬁguration
C(cid:48) in which u(cid:48) retrieves t and Adv cannot determine
whether he is observing C or C(cid:48). More formally:
Deﬁnition 5.1 (Consumer anonymity). u ∈ (C \ CAdv)
has consumer anonymity in conﬁguration C with respect
to Adv if there exists C(cid:48) ≡Adv C such that C(cid:48)(u(cid:48)) =
C(u) and u(cid:48) (cid:54)= u.
Theorem 5.1. u ∈ (C\ CAdv) has consumer anonymity
in C with respect to Adv if there exists u(cid:48) (cid:54)= u such that
any of the following conditions hold:
1. u, u(cid:48) ∈ AC4(u)
Adv
2. C1(u) = C1(u(cid:48)), C1(u) /∈ R and C1(u) ∈ A
3. C2(u) = C2(u(cid:48)), C2(u) /∈ R and C2(u) ∈ Aint
where C4(u) = intpk1,pk2
intpk2
Adv
Adv
where C4(u) = intpk1,pk2
Informally, the theorem above states that ANDaNA pro-
vides consumer anonymity with respect to Adv if: 1.
Adv cannot observe encrypted interests coming from u
and u(cid:48), or it cannot distinguish between the two con-
sumers due to anonymity provided by the network layer;
or 2. u, u(cid:48) share an non-compromised ﬁrst router in at
least one ephemeral circuit; or 3. u, u(cid:48) share an non-
compromised second router in at least one ephemeral
circuit.
to
Similarly
consumer
anonymity,
producer
anonymity is deﬁned in terms of indistinguishable
conﬁgurations.
In particular, a producer p enjoys
anonymity with respect
to Adv which observes
intpk1,pk2 if Adv cannot distinguish between a conﬁgu-
ration C where p produces the content corresponding to
int and a conﬁguration C(cid:48) where p(cid:48) and not p produces
that content.
Deﬁnition 5.2 (Producer anonymity). Given intpk1,pk2
for p ∈ P, u ∈ C has producer anonymity in conﬁgu-
ration C with respect to p, Adv if there exists an indis-
tinguishable conﬁguration C(cid:48) such that intpk1,pk2 is sent
by a non-compromised consumer to a producer different
from p.
Theorem 5.2. u has producer anonymity in C with re-
spect to p, Adv if any of the following conditions hold:
1. There exists C(u) such that C1(u) (the ﬁrst
is not compromised and
anonymizing router)
C4(u) = intpk1,pk2, C1(u) = C1(u(cid:48)) and C3(u) =
p (cid:54)= C3(u(cid:48)) for some non-compromised u(cid:48) ∈ C, or
2. There exists C(u) such that C2(u) (the sec-
ond anonymizing router) is not compromised and
C4(u) = intpk1,pk2, C2(u) = C2(u(cid:48)) and C3(u) =
p (cid:54)= C3(u(cid:48)) for some non-compromised u(cid:48) ∈ C
Finally, we deﬁne producer and consumer unlinkability
as:
Deﬁnition 5.3 (Producer and consumer unlinkability).
We say that u ∈ (C \ CAdv) and p ∈ P are unlinkable in
C with respect to Adv if there exists C(cid:48) ≡Adv C where
u’s interests are sent to a producer p(cid:48) (cid:54)= p.
Corollary 5.1. Consumer u ∈ (C\ CAdv) and producer
p ∈ P are unlinkable in conﬁguration C with respect
to Adv if p has producer anonymity with respect to u’s
interests or u has consumer anonymity and there exists
a conﬁguration C(cid:48) ≡Adv C where C(cid:48)(u(cid:48)) = C(u) with
(cid:54)= u and u(cid:48)’s interests have a destination different
u(cid:48)
from p.
Corollary 5.2. Consumer u ∈ (C\ CAdv) and producer
p ∈ P are unlinkable in conﬁguration C with respect to
Adv if both producer and consumer anonymity hold.
We emphasize that
this
result also holds
for
ephemeral circuits with length greater than two ARs.