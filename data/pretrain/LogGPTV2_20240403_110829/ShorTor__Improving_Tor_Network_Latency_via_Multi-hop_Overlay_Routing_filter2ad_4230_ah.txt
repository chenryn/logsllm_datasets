and Andriy Panchenko.
Security and performance
implications of BGP rerouting-resistant guard selection
algorithms for Tor. In Marko H¨olbl, Kai Rannenberg,
and Tatjana Welzer, editors, ICT Systems Security and
Privacy Protection, pages 219–233, Cham, 2020. Springer
International Publishing. ISBN 978-3-030-58201-2.
[62] Milad Nasr, Alireza Bahramali, and Amir Houmansadr.
DeepCorr: Strong ﬂow correlation attacks on Tor using
deep learning. In Proceedings of the 2018 ACM SIGSAC
Conference on Computer and Communications Security,
pages 1962–1976. ACM, 2018.
[63] Ravi Netravali, Vikram Nathan, James Mickens, and Hari
Balakrishnan. Vesper: Measuring time-to-interactivity for
web pages. In Sujata Banerjee and Srinivasan Seshan,
editors, 15th USENIX Symposium on Networked Systems
Design and Implementation, NSDI 2018, Renton, WA,
USA, April 9-11, 2018, pages 217–231. USENIX Asso-
ciation, 2018. URL https://www.usenix.org/conference/
nsdi18/presentation/netravali-vesper.
[64] Rishab Nithyanand, Oleksii Starov, Phillipa Gill,
Adva Zair, and Michael Schapira. Measuring and
mitigating as-level adversaries against
In 23rd
Annual Network and Distributed System Security
Symposium, NDSS 2016, San Diego, California,
USA, February 21-24, 2016. The Internet Society,
2016.
URL http://wp.internetsociety.org/ndss/wp-
content/uploads/sites/25/2017/09/measuring-mitigating-
as-level-adversaries-against-tor.pdf.
tor.
[65] Ania M Piotrowska, Jamie Hayes, Tariq Elahi, Sebastian
Meiser, and George Danezis. The Loopix anonymity
system. In 26th USENIX Security Symposium (USENIX
Security 17), pages 1199–1216, 2017.
[66] Ingmar Poese, Steve Uhlig, Mohamed Ali Kaafar, Benoit
Donnet, and Bamba Gueye.
Ip geolocation databases:
Unreliable? ACM SIGCOMM Computer Communication
Review, 41(2):53–56, 2011.
[67] The Tor Project. Tor metrics: relays and bridges. https:
//metrics.torproject.org/networksize.html, 2021. Accessed
December 2021.
[68] The Tor project. Relay requirements. https://community.
torproject.org/relay/relays-requirements/, 2021. Accessed
December 2021.
[69] The Tor project. Research safety board. https://research.
torproject.org/safetyboard/, 2021. Accessed December
2021.
[70] Mohammad Rajiullah. Towards a low latency internet:
understanding and solutions.
PhD thesis, Karlstad
University Press, 2015. URL https://www.diva-portal.
org/smash/get/diva2:846109/FULLTEXT01.pdf.
[71] Mohammad Rajiullah, Andra Lutu, Ali Safari Khatouni,
Mah-Rukh Fida, Marco Mellia, Anna Brunstr¨om, ¨Ozg¨u
Alay, Stefan Alfredsson, and Vincenzo Mancuso. Web
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
171949
experience in mobile networks: Lessons from two mil-
lion page visits.
In Ling Liu, Ryen W. White, Amin
Mantrach, Fabrizio Silvestri, Julian J. McAuley, Ricardo
Baeza-Yates, and Leila Zia, editors, The World Wide
Web Conference, WWW 2019, San Francisco, CA, USA,
May 13-17, 2019, pages 1532–1543. ACM, 2019. doi:
10.1145/3308558.3313606. URL https://doi.org/10.1145/
3308558.3313606.
[72] Vera Rimmer, Davy Preuveneers, Marc Juarez, Tom Van
Goethem, and Wouter Joosen. Automated website
ﬁngerprinting through deep learning. Proceedings 2018
Network and Distributed System Security Symposium,
2018. doi: 10.14722/ndss.2018.23105. URL http://dx.
doi.org/10.14722/ndss.2018.23105.
[73] Florentin Rochet and Olivier Pereira. Waterﬁling: Bal-
ancing the Tor network with maximum diversity. CoRR,
abs/1609.04203, 2016. URL http://arxiv.org/abs/1609.
04203.
[74] Florentin Rochet, Ryan Wails, Aaron Johnson, Prateek
Mittal, and Olivier Pereira. CLAPS: Client-location-aware
path selection in Tor. In Proceedings of the 2020 ACM
SIGSAC Conference on Computer and Communications
Security, CCS ’20, page 17–34, New York, NY, USA,
2020. Association for Computing Machinery.
ISBN
9781450370899. doi: 10.1145/3372297.3417279. URL
https://doi.org/10.1145/3372297.3417279.
[75] Brandon Schlinker, Todd Arnold, ´Italo Cunha, and Ethan
Katz-Bassett. PEERING: Virtualizing BGP at the edge
for research. In Proceedings of the 15th International
Conference on Emerging Networking Experiments And
Technologies, pages 51–67, 2019.
[76] Theodor Schnitzler, C. P¨opper, Markus D¨urmuth, and
K. Kohls. We built this circuit: Exploring threat vectors
in circuit establishment in Tor. In 2021 IEEE European
Symposium on Security and Privacy (EuroS P), 2021.
Inferring network conditions based on CDN redirections.
IEEE/ACM Transactions on Networking, 17(6):1752–
1765, 2009. doi: 10.1109/TNET.2009.2022157.
[82] Yixin Sun, Anne Edmundson, Nick Feamster, Mung
Chiang, and Prateek Mittal. Counter-RAPTOR: Safe-
guarding Tor against active routing attacks. In 2017 IEEE
Symposium on Security and Privacy (SP), pages 977–992.
IEEE, 2017.
[83] Nirvan Tyagi, Yossi Gilad, Derek Leung, Matei Zaharia,
and Nickolai Zeldovich. Stadium: A distributed metadata-
private messaging system. In Proceedings of the 26th
Symposium on Operating Systems Principles, pages 423–
440, 2017.
[84] Jelle Van Den Hooff, David Lazar, Matei Zaharia, and
Nickolai Zeldovich. Vuvuzela: Scalable private messaging
resistant to trafﬁc analysis. In Proceedings of the 25th
Symposium on Operating Systems Principles, pages 137–
152, 2015.
[85] Chris Wacek, Henry Tan, Kevin S Bauer, and Micah
Sherr. An empirical evaluation of relay selection in Tor.
In NDSS, 2013.
[86] Gerry Wan, Aaron Johnson, Ryan Wails, Sameer Wagh,
and Prateek Mittal. Guard placement attacks on path
selection algorithms for Tor. Proceedings on Privacy
Enhancing Technologies, 2019(4):272–291, 2019. doi:
doi:10.2478/popets-2019-0069. URL https://doi.org/10.
2478/popets-2019-0069.
[87] Tao Wang, Kevin Bauer, Clara Forero, and Ian Goldberg.
Congestion-aware path selection for Tor. In International
Conference on Financial Cryptography and Data Security,
pages 98–113. Springer, 2012.
[88] Tao Wang, Xiang Cai, Rishab Nithyanand, Rob
Effective attacks and
Johnson, and Ian Goldberg.
provable defenses for website ﬁngerprinting.
In
23rd USENIX Security Symposium (USENIX Secu-
rity 14), pages 143–157, San Diego, CA, 2014.
USENIX Association.
ISBN 978-1-931971-15-7.
URL https://www.usenix.org/conference/usenixsecurity14/
technical-sessions/presentation/wang tao.
[89] Lei Yang and Fengjun Li. Enhancing trafﬁc analysis
resistance for Tor hidden services with multipath routing.
In Bhavani Thuraisingham, XiaoFeng Wang, and Vinod
Yegneswaran, editors, Security and Privacy in Communi-
cation Networks, pages 367–384, Cham, 2015. Springer
International Publishing. ISBN 978-3-319-28865-9.
[90] Lei Yang and Fengjun Li. mTor: A multipath Tor routing
beyond bandwidth throttling. In 2015 IEEE Conference
on Communications and Network Security (CNS), pages
479–487, 2015. doi: 10.1109/CNS.2015.7346860.
[77] Srinivasan Seetharaman and Mostafa Ammar.
Inter-
domain policy violations in multi-hop overlay routes:
Analysis and mitigation. Computer Networks, 53(1):60–
80, 2009. ISSN 1389-1286. doi: https://doi.org/10.1016/
j.comnet.2008.09.014. URL https://www.sciencedirect.
com/science/article/pii/S1389128608003009.
[78] Omar Sefraoui, Mohammed Aissaoui, and Mohsine
Eleuldj. OpenStack: toward an open-source solution for
cloud computing.
International Journal of Computer
Applications, 55(3):38–42, 2012.
[79] Micah Sherr, Matt Blaze, and Boon Thau Loo. Scalable
link-based relay selection for anonymous routing. In Inter-
national Symposium on Privacy Enhancing Technologies
Symposium, pages 73–93. Springer, 2009.
[80] Payap Sirinam, Mohsen Imani, Marc Juarez, and Matthew
Wright. Deep ﬁngerprinting: Undermining website ﬁn-
gerprinting defenses with deep learning. In Proceedings
of the 2018 ACM SIGSAC Conference on Computer and
Communications Security, pages 1928–1943. ACM, 2018.
[81] Ao-Jan Su, David R. Choffnes, Aleksandar Kuzmanovic,
and Fabi´an E. Bustamante. Drafting behind Akamai:
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
181950
APPENDIX A
EXTENDED MATOR PLOTS
APPENDIX B
EXTENDED INTEGRATION WITH TOR
In this section we provide additional data from our MATOR
analysis described in Section V-C. We refer to Section V for
details of the analysis and results.
Section III-C covers the high-level design decisions we made
for ShorTor to support integration with Tor. Here, we provide
speciﬁc details on the necessary modiﬁcations and extensions
which are required to integrate ShorTor with Tor. ShorTor has
three primary components not present in baseline Tor: (1) on-
demand data races, (2) periodic sharing of latency information,
and (3) a separate data path for via trafﬁc. We design these
components to be minimal extensions to Tor’s existing protocol.
A. Data Races
In ShorTor, data races represent the majority of required
modiﬁcations. To successfully conduct a data race for trafﬁc on
a circuit, relays must: (1) recognize data race trafﬁc as separate
from steady state trafﬁc, (2) decide when a race should be
conducted while observing appropriate backoff parameters, (3)
interpret the new latency tables to discover potential vias, and
(4) update routing information to include vias.
We now describe how these four requirements can be
implemented into Tor relay logic.
(1) can be achieved using the existing CMD ﬁeld in Tor’s cell
header (see Figure 4). By introducing a new CMD value
to indicate that trafﬁc is part of a data race, both vias and
circuit relays can immediately recognize (and potentially
drop) race trafﬁc with minimal processing. Importantly,
using the CMD ﬁeld allows ShorTor to conduct data races
without altering the content of the cell. Because of this,
data race cells are simply normal cells from a client’s
trafﬁc stream and clients will see no interruption or delay
while the race is run.
(2) is described in Section III-B and Section III-C. The only
additional detail is that this process will need to tie into the
queuing architecture shown in Figure 5 such that, when a
data race is to be conducted for a circuit, the next cell out
of its queue will be duplicated, have its header modiﬁed
according to Figure 4, and have the copy rerouted to each
of the vias in the race prior to reaching the output buffer.
This is due to the fact that, as the cells are now going
to different destinations, they will also be on different
TCP/TLS connections and must be sent to the appropriate
output buffer.
(3) is a simple matter of reading the latest latency table and
selecting the vias with the lowest recorded latencies to
participate in the race.
(4) is handled by a new ﬁeld for the ViaID in Tor’s
routing table and the new header information in Tor cells
containing the IDs of the two adjacent circuit relays (see
Figure 4). This information allows the via relay and both
adjacent circuit relays to recognize which circuit a trafﬁc
stream is from (and, consequently, where it should be
routed) even when the trafﬁc stream arrives on a different
TCP/TLS connection than is usual for the circuit (i.e.,
arrives through a via, not from the previous circuit relay).
Fig. 11: Extended experiments for the anonymity impact of ShorTor.
Anonymity impact of ShorTor, compared with baseline Tor (client-
independent) and LASTor (dependent on client location) path selection.
Each plot shows sender (SA), recipient (RA), and relationship (REL)
anonymity (Deﬁnition V.1) for a different adversarial relay corruption
strategy. Shaded region represents the difference in the MATOR-
computed anonymity bounds with and without ShorTor. “FVEY”
refers to “Five Eyes” intelligence alliance member countries. Under
ANoA, ShorTor affects all anonymity notions for LASTor, though not
baseline Tor.
191951
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
B. Latency Tables
Maintaining and disseminating up to date latency information
is a simple process detailed in Protocol 2 presented in Section
III-B. Unlike data races, it can be run entirely independently
from the main Tor protocol and does not involve any circuit
trafﬁc. As such, it requires no actual integration with the Tor
protocol, but is simply an entirely separate functionality run by
Tor relays. The table of latency information produced as part
of this process is accessed to inform the selection of candidate
vias for a data race, but is not otherwise involved and, in
particular, is not used during the steady-state of routing trafﬁc
through vias.
C. Data Path for Via Trafﬁc
The data path for via trafﬁc is almost identical to that of
regular, non-via, Tor trafﬁc and follows the queuing architecture
of baseline Tor as shown in Figure 5. The two differences
are that trafﬁc is not onion encrypted/decrypted while being
forwarded by a via and that via trafﬁc is considered lower
priority than circuit trafﬁc. Via trafﬁc, like data races, can
utilize the CMD ﬁeld in the cell header to identify itself as soon
as the TLS layer has been decrpyted. This lets the via relay
know that it is not expected to operate on the onion encryption
layer (and does not have the keys necessary to do so) and that
it should send the cell directly to the appropriate queue instead.
Finally, while Tor already prioritizes browsing trafﬁc over bulk
download trafﬁc, ShorTor requires a new priority level for via
trafﬁc that is below that of circuit trafﬁc. This priority level is
applied when cells are dequeued to be scheduled to the output
buffers. Deprioritizing via trafﬁc is necessary to ensure that it
never outcompetes circuit trafﬁc sharing the same relay (see
paragraph in Section III-C on load balancing and fairness).
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:36:07 UTC from IEEE Xplore.  Restrictions apply. 
201952