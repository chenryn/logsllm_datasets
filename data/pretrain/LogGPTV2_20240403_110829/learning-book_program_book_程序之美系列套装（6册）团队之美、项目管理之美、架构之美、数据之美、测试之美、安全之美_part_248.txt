Network."In SIGMOD, 2008.
[12]Pattishall,D. V"Federation at Flickr:Doing Billions of Queries Per
Day."http://www.scribd.com/doc/2592098/DVPmysqlucFederation-at-
Flickr-Doing-Billions-of-Queries-Per-Day.
[13]Ramakrishnan,R. and J.Gehrke.Database Management
Systems.McGraw-Hill,NewYork,NY，2002
[14]Silberstein,A.，B.F.Cooper,U.Srivastava,E.Vee,R.Yerneni,and
R.Ramakrishnan."Efficient bulk insertion into a distributed ordered
table."In SIGMOD,2008.
[15]Sobel,J."Scaling out."Facebook Engineering Blog,August 2008
第5章信息平台和数据科学家的兴起
Jeff Hammerbacher
图书馆和大脑
在我17岁时，我丢掉了在印第安纳州FortWayne的Scott杂货铺的出
纳员工作。在我上大学前仅仅两个月里，我看到了没有工作带来的
1403
---
## Page 1405
机遇。我没有告诉父母自己被解雇了。每天下午，我依然穿着出纳
员的工作服离开家：黑色裤子、黑色皮鞋、白色衬衫，还有罩衫。
在父母看来，我这身穿着是为严谨的账单审查工作准备，实际上，
我是要在公共图书馆看10个小时的书。
所有好奇心强的人都想知道大脑是如何工作的，17岁的我更是超乎
寻常的好奇。我在图书馆里学习大脑如何工作、休息和重建。除了
使我们保持平衡、调整体温、不时地眨眨眼，大脑还摄取、处理和
生成大量的信息。我们对周围的环境产生无意识的条件反射，养成
短期口头禅和肢体特征，做出择偶和教育的长期计划。大脑令人感
兴趣的不仅仅是它对感官数据做出反应的能力，而是作为信息库，
生成计划和创建新的信息。我很想知道它是如何工作的。
然而，大脑的特点是其存储的信息只在一个人身上。为了从很多大
脑收集信息，我们建造了图书馆。为了今后的利用，图书馆科学领
域已经为图书馆的信息存储发展了众多的技术。关于该课题的一个
有趣的读本是AlexWright的《Glut》（JsephHenry出版）。除了为今
后检索存储信息，图书馆在创建新信息方面也起了重大作用。正如
图书馆”(a scholar is just a library's way of making another library)
图书馆和大脑是信息平台的两个例子。它们是组织进行摄取、处理
和生成信息的场所，它们加速了从经验数据中学习的过程。当我在
2006年加入Facebook时，很自然地开始构建了一个信息平台。因为
Facebook用户数量剧增，我们团队构建的系统最终需要管理几十亿
兆字节(ptabyte,PB)Ill-的数据。在本章中，我将详细阐述在构建
Facebook信息平台遇到的挑战，以及在开源软件上构建解决方案过
程中波取的教训。我还会概述在利用信息构建数据密集型产品和服
务，并且帮助整个企业制定、实现目标过程中，数据科学家所起到
的重大作用。在整个过程中，我还会描述一些其他企业在过去几十
年里如何构建信息平台来处理这些问题。
在开始介绍前，首先需要指出的是我去图书馆而不是去杂货店的计
划还是很快泡汤了。自在地读了几天后，某天晚上我从图书馆出来
时，却找不到车子了。对我来说，在那时丢车很平常，但是停车场
是空的，所以我知道出事了；最后是母亲发现了我的使俩，把我的
车拖走了。在走回家的漫长路上，我在心里学会了一课：应该带着
怀疑的态度来考虑自已的策略，另外，不要和母亲斗智。
1404
---
## Page 1406
1]1PB(petabyte)=1024TB,1TB(terabyte)=1024GB
Facebook具有了“自知之明”
在2005年9月，Facebook首次向非大学生公开，允许高中生注册账
号。忠实的用户愤怒了，但Facebook团队认为这是为网站做出的正
常方向。那么它该如何证明它的方案是正确的呢？
此外，在几乎所有可登录Facebook网站的学校中，Facebook已经渗
人学生当中，但还是在有部分学校中，该网站一直不受青睐。和那
些更成功的网络相比，这些落后的网络对于Facebook有什么区别
呢？Facebook团队应该如何做才能激励他们的成功？
当我在2006年2月参加Facebook面试时，他们正积极地期望找到这些
问题的答案。我曾在大学学习数学，在华尔街工作近一年，工作内
容是构建模型来预测利率、价格复杂的衍生产品和对冲抵押贷款
池；有一定编程经验，GPA成绩“暗淡”。虽然我的背景可能不太理
想，但是Facebook却给了我研究科学家的职位。
儿乎同时，Facebook聘用了一个报告分析主管。该主管在解决问题
方面的经验远远超过我。我们和另外一个工程师一起，开始着手构
建一个数据收集和存储平台，以便找到我们产品以上问题的答案。
我们第一个尝试是构建一个离线信息库，其涉及两个方面：一是用
Python脚本把查询分发到Facebook的MySQL服务器层，二是采用
C++实现守护进程，实时地处理事件日志。当脚本可以如期运行，
我们每天收集大约10GB的数据。我后来明白系统的这部分通常称为
“ETL"过程，即抽取、转换和加载。
Python脚本和C++守护进程从Facebook的数据源系统中抽取数据，然
后这些数据又被加载到MySQL数据库用于离线查询。我们在包含这
些数据的MySQL上又运行了一些脚本和查询，对数据进行聚集，以
便得到更有用的表现方式。这种用于决策支持的离线数据库即“数
据仓库"(DtaWarehouse)。
最后，通过简单的PHP脚本把数据从离线的MySQL数据库抽取出
来，向内部用户展示收集到的信息摘要(smmary)。这是我们第一次
可以回答网站特性对用户行为的影响。早期通过以下几种渠道分析
最大化增长：登出用户的默认页面的布局、邀请来源、Email联系方
式导入器的设计。除了以上分析，我们并始通过历史数据并发简单
1405
---
## Page 1407
的产品，包括对赞助商成员特性进行聚集的内部项目。实践证明，
该项目很受品牌广告商欢迎。
我那时没有意识到，实际上，通过ETL框架、数据仓库和内部控制
台(dshboard)，我们已经构建了一个简单的“商业智能"（Bsiness
Intelligence)系统。
商业智能系统
在1958年IBM系统期刊的一篇论文中，HansPeterLuhn描述了一个系
统，该系统基于每个用户“动作点"(ationpoints)的“兴趣信息"(iterest
profiles)，将文件通过“选择性传播”(slectivedissemination)到动作点
上。作者描绘了令人震撼的预测科学理论。该文章的标题是“一个
商业智能系统”，它是“商业智能"这一术语在现代环境中的第一次应
用。
除了实时信息传播，该系统还可以进行“信息检索”，即搜索，可以
在全文资料库中执行。Luhn强调动作点，突出了信息处理角色在完
成任务中的重要性。换句话说，仅仅收集并聚集数据是不够的；由
于利用数据进行推断的洞察力很重要，企业必须提高能力来完成艰
巨的任务。他还提出“报告人”需要周期性地筛选数据，有选择地将
信息移到需要的动作点上。
从Luhn的论文发表之后，商业智能领域在过去五年得到不断发展，
“商业智能”这个术语和结构化数据的管理更加紧密相关。今天，经
典的商业智能系统是由ETL框架和商业智能工具组成：ETL有规律
地把一组数据源中的数据抽取出来并加载到数据仓库中；商业分析
师利用商业智能工具在该数据仓库上生成报告供内部使用。那么，
我们是如何从Luhn的愿景走到今大？
在1970年，E.F.Codd首先提出了关系模型；在20世纪70年代中期，
IBM拥有了关系数据库管理系统(RBMS)的工作原型。RDBMS极大
地促进了构建面向用户的应用，到了20世纪80年代早期，这些应用
已经非常普遍。
在1983年，Teradata出售了第一个关系数据库，该数据库是专门为
WellsFargo公司的决策支持而设计。几年后，在1986年，Ralph
Kimball成立了RedBrickSystems公司，面向相同的市场构建数据
1406
---
## Page 1408
库。以后，应用开发商就使用Teradata和RedBrick系统来开发解决
方案，但是直到1991年，在数据仓库方面的首篇经典论文才发表。
Bill Inmon的《Building theDataWarehouse》（Wley出版社）一书，对
数据仓库设计做了连贯清晰地阐述，它包含构建数据仓库的详细方
法和最佳实践。Inmon提倡先仔细研究已有的数据源和商业目标，
再构建企业数据模型。
在1995年，随着Inmon的书越来越受欢迎，数据仓库在企业数据中
心内大量紧衍，数据仓库机构TDWI(TheDataWarehouseInstitute)诞
生了。TDWI组织了有关会议和报告，在阐述和传播数据仓库方面
的知识上，其依然是个核心力量。在斯坦福大学启动它的WHIPS研
究机构那年，数据仓库在学术领域开始传播。
1996年，RalphKimball发布了《TheDataWarehouseToolkit》（Wley
出版社）一书，对Inmon理论进行了挑战。Kimball提出了实现数据
仓库涅（nrvana）的不同方式，首先摒弃了企业数据模型。Kimball认
为不同的企业单位应该构建他们自已的数据“集市"(mrts)，这些集市
可以通过“总线"(bs)相连。此外，Kimball提倡使用多维建模，而不
是使用范化的数据模型，前者的关系数据模型可以通过少量人工干
预来适应很多数据仓库实现中的特定的工作负荷。
随着数据仓库的增长，通常情况下，商业分析家想要快速地操作少
量的数据子集，通常这些数据是通过儿个“维度”参数来描述。基于
这些观察，微软的一组研究人员，包括JimGray，在1997年推出了
CUBE操作符。该新的操作符允许在小的、多维的数据集上进行快
速查询。
维度模型和CUBE操作符都意味着虽然关系模型在构建面向用户的
应用方面获得了成功，但它可能并不是构建信息平台的最佳方案。
此外，文档(dcument)和动作点(ationpoint)是Luhn关于商业智能系统
提议的核心，而不是表。另一方面，整个工程师团队在构建关系数
据处理系统中具备出色的专业知识。
在分析了一些背景知识后，我们再一起回到关于Facebook的探讨。
数据仓库的消亡和重起
在Facebook，我们不断地向MySQL数据仓库加载更多的数据，执行
更多的查询。我们只执行过为动态网站提供服务的数据库查询，对
1407
---
## Page 1409
于在数据仓库上执行一条查询所需运行的时间之长，令我们都很惊
讶。在和一些经验丰富的数据仓库专家讨论后，我明白了由于查询
复杂性、数据量大或者两者兼备，查询执行几个小时甚至几天都是
很正常的。
有一天，我们的数据库数据接近100万兆（1TB)，mysqld守护进程
突然中断了。在诊断了一段时间后，我们试着重启数据库，熬了一
宿，直到重启操作开始执行，我们才回家。
当我次日早上回去工作时，数据库还处在恢复阶段。由于数据被很
多客户端修改，为了获得一致性视图，数据库服务器维护了一张持
久性列表，该列表包含了所有的修改操作，称为"重做日志"rdo
log)或者"预写日志"(wite-aheadlog)。如果数据库服务器被粗暴地终
正和重启，它将会从重做日志中读取最近的写操作日志，加快恢复
速度。由于我们的数据仓库系统规模很大，MySQL数据库恢复需要
一定的时间。在那次崩溃之后，我们花了三天时间才重新拥有可以
正常工作的数据仓库。
我们那时决定把数据仓库迁移到Oracle上，Oracle数据库软件对于
管理大数据集有更好的支持。我们还购买了一些昂贵的高密度存储
服务器和一个强大的Sun服务器来运行新的数据仓库。
在我们把程序从MySQL迁移到Oracle的过程中，我充分体验到所谓
的标准关系数据库在实现上还是存在许多差别。每个数据库的大批
量导入和导出工具使用完全不同的机制。此外，每个数据库支持的
SQL语句很不一样，这迫使我们不得不重写很多查询。更糟的是，
Oracle上的Python客户端库还不正式且有些bug，因此遇到问题时，
我们需要直接和开发人员联系。
经过几周的辛苦努力，我们重写的脚本在新的Oracle平台上可以运
行了。夜间执行的程序运行正常，我们很兴奋地去尝试Oracle“生态
系统"的其他工具。尤其是，Oracle有个名为Oracle仓库构建器
（OacleWarehouseBuilder,OWB)的ETL工具，我们期望用它替代自己
手工写的Python脚本。但是，该软件不支持我们需要的数据源规
模：在那时，通过每天晚上收集数据，Facebook已经有几万个