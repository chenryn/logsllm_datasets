## 样本数据下载    
OSM openstreetmap    
介绍postgis使用的文档      
http://live.osgeo.org/zh/quickstart/postgis_quickstart.html    
osgeo LIVE 平台的中文介绍    
http://live.osgeo.org/zh/index.html    
osgeo 的PPT介绍，建议熟悉一下，对GIS入门很有帮助    
http://live.osgeo.org/en/presentation/index.html    
osgeo 中国社区首页    
http://www.osgeo.cn/    
openstreetmap是一个开放的GIS信息数据共享库，一直都在更新，现在全球的数据有几十GB，中国的数据有几百MB。      
https://www.openstreetmap.org    
https://planet.openstreetmap.org/    
http://wiki.openstreetmap.org/wiki/Planet.osm    
可以从镜像站点下载共享的pbf数据    
http://download.gisgraphy.com/openstreetmap/pbf/    
下载中国的PBF数据    
```    
$ wget http://download.gisgraphy.com/openstreetmap/pbf/CN.tar.bz2    
-rw-r--r-- 1 root     root     265M Sep  3 16:40 CN.tar.bz2    
```    
下载亚洲的PBF数据    
```    
$ wget http://download.geofabrik.de/asia-latest.osm.pbf    
-rw-r--r-- 1 root     root     4.4G Sep  6 08:04 asia-latest.osm.pbf    
$ tar -jxvf CN.tar.bz2     
-rw-r--r-- 1 root     root     263M Sep  2 09:17 CN    
```    
## 导入样本数据    
确保postgis插件已安装    
```    
$ su - postgres    
$ psql postgres    
postgres=# \dx    
                                                                    List of installed extensions    
          Name          | Version |   Schema   |                                                     Description                                                         
------------------------+---------+------------+---------------------------------------------------------------------------------------------------------------------    
 address_standardizer   | 2.2.2   | public     | Used to parse an address into constituent elements. Generally used to support geocoding address normalization step.    
 fuzzystrmatch          | 1.1     | public     | determine similarities and distance between strings    
 plpgsql                | 1.0     | pg_catalog | PL/pgSQL procedural language    
 postgis                | 2.2.2   | public     | PostGIS geometry, geography, and raster spatial types and functions    
 postgis_tiger_geocoder | 2.2.2   | tiger      | PostGIS tiger geocoder and reverse geocoder    
 postgis_topology       | 2.2.2   | topology   | PostGIS topology spatial types and functions    
(6 rows)    
```    
使用osm2pgsql将下载的中国PBF数据导入PostgreSQL数据库    
```    
$ export PGPASS=postgres    
$ osm2pgsql -H 127.0.0.1 -P 1921 -U postgres -d postgres -c -l -C 2000 --number-processes 8 -p digoal -r pbf /data01/CN    
```    
数据库连接相关     
```    
export PGPASS=postgres    
       -d|--database    The name of the PostgreSQL database to connect    
                        to (default: gis).    
       -U|--username    PostgreSQL user name (specify passsword in PGPASS    
                        environment variable or use -W).    
       -H|--host        Database server host name or socket location.    
       -P|--port        Database server port.    
       -c|--create    
              Remove existing data from the database. This is the default if --append is not specified.      
       -l|--latlong    
              Store data in degrees of latitude & longitude.    
       Latlong             (-l) SRS:  4326 (none)    
内存足够时不建议使用 -s --drop. 速度较慢.      
       -s|--slim    
              Store  temporary  data in the database. Without this mode, all temporary data is stored in RAM and if you do not have enough the import will not work successfully. With slim mode, you should be able to import the data    
              even on a system with limited RAM, although if you do not have enough RAM to cache at least all of the nodes, the time to import the data will likely be greatly increased.    
         --drop    
              Drop the slim mode tables from the database once the import is complete. This can greatly reduce the size of the database, as the slim mode tables typically are the same size, if not  slightly  bigger  than  the  main    
              tables.  It  does  not, however, reduce the maximum spike of disk usage during import. It can furthermore increase the import speed, as no indices need to be created for the slim mode tables, which (depending on hard‐    
              ware) can nearly halve import time. Slim mode tables however have to be persistent if you want to be able to update your database, as these tables are needed for diff processing.    
         --number-processes num    
              Specifies  the  number of parallel processes used for certain operations. If disks are fast enough e.g. if you have an SSD, then this can greatly increase speed of the "going over pending ways" and "going over pending    
              relations" stages on a multi-core server.    
       -p|--prefix prefix_string    
              Prefix for table names (default: planet_osm).    
       -r|--input-reader format    
              Select format of the input file. Available choices are auto (default) for autodetecting the format, xml for OSM XML format files, o5m for o5m formatted files and pbf for OSM PBF binary format.    
```    
输出    
```    
osm2pgsql SVN version 0.90.0 (64 bit id space)    
Using built-in tag processing pipeline    
Using projection SRS 4326 (Latlong)    
Setting up table: digoal_point    
Setting up table: digoal_line    
Setting up table: digoal_polygon    
Setting up table: digoal_roads    
Allocating memory for dense node cache    
Allocating dense node cache in one big chunk    
Allocating memory for sparse node cache    
Sharing dense sparse    
Node-cache: cache=2000MB, maxblocks=32000*65536, allocation method=3    
Mid: Ram, scale=10000000    
Reading in file: /data01/cn.pbf    
Using PBF parser.    
Processing: Node(32887k 657.8k/s) Way(2409k 20.25k/s) Relation(29450 669.32/s)  parse time: 213s    
Node stats: total(32887809), max(4373037112) in 50s    
Way stats: total(2409943), max(439626731) in 119s    
Relation stats: total(29459), max(6537660) in 44s    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Using built-in tag processing pipeline    
Going over pending ways...    
        824623 ways are pending    
Using 8 helper-processes    
Finished processing 824623 ways in 44 s    
824623 Pending ways took 44s at a rate of 18741.43/s    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Committing transaction for digoal_point    
Committing transaction for digoal_line    
Committing transaction for digoal_polygon    
Committing transaction for digoal_roads    
Going over pending relations...    
        0 relations are pending    
Using 8 helper-processes    
Finished processing 0 relations in 0 s    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_point    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_line    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_polygon    
WARNING:  there is no transaction in progress    
Committing transaction for digoal_roads    
WARNING:  there is no transaction in progress    
Sorting data and creating indexes for digoal_point    
Sorting data and creating indexes for digoal_line    
Sorting data and creating indexes for digoal_polygon    
Sorting data and creating indexes for digoal_roads    
Copying digoal_point to cluster by geometry finished    
Creating geometry index on digoal_point    
Copying digoal_polygon to cluster by geometry finished    
Creating geometry index on digoal_polygon    
Copying digoal_roads to cluster by geometry finished    
Creating geometry index on digoal_roads    
Copying digoal_line to cluster by geometry finished    
Creating geometry index on digoal_line    
Creating indexes on digoal_point finished    
All indexes on digoal_point created in 56s    
Completed digoal_point    
Creating indexes on digoal_roads finished    
All indexes on digoal_roads created in 65s    
Completed digoal_roads    
Creating indexes on digoal_polygon finished    
All indexes on digoal_polygon created in 71s    
Completed digoal_polygon    
Creating indexes on digoal_line finished    
All indexes on digoal_line created in 90s    
Completed digoal_line    
node cache: stored: 32887809(100.00%), storage efficiency: 50.14% (dense blocks: 116, sparse nodes: 32323305), hit rate: 100.18%    
Osm2pgsql took 349s overall    
```    
导入后数据如下，数据分为点，线段，道路，区域。      
```    
postgres=# \dt+    
                            List of relations    
  Schema  |      Name       | Type  |  Owner   |    Size    | Description     
----------+-----------------+-------+----------+------------+-------------    
 public   | digoal_line     | table | postgres | 702 MB     |     
 public   | digoal_point    | table | postgres | 70 MB      |     
 public   | digoal_polygon  | table | postgres | 310 MB     |     
 public   | digoal_roads    | table | postgres | 303 MB     |     
postgres=# \di+    
                                                     List of relations    
  Schema  |                      Name                       | Type  |  Owner   |      Table      |    Size    | Description     
----------+-------------------------------------------------+-------+----------+-----------------+------------+-------------    
 public   | digoal_line_index                               | index | postgres | digoal_line     | 184 MB     |     
 public   | digoal_point_index                              | index | postgres | digoal_point    | 40 MB      |     
 public   | digoal_polygon_index                            | index | postgres | digoal_polygon  | 81 MB      |     
 public   | digoal_roads_index                              | index | postgres | digoal_roads    | 67 MB      |     
```    
表结构举例    
```    
postgres=# \d digoal_line    
                 Table "public.digoal_line"    
       Column       |           Type            | Modifiers     
--------------------+---------------------------+-----------    
 osm_id             | bigint                    |     
 access             | text                      |     
 addr:housename     | text                      |     
 addr:housenumber   | text                      |     
 addr:interpolation | text                      |     
 admin_level        | text                      |     
 aerialway          | text                      |     
 aeroway            | text                      |     
 amenity            | text                      |     
 area               | text                      |     
 barrier            | text                      |     
 bicycle            | text                      |     
 brand              | text                      |     
 bridge             | text                      |     
 boundary           | text                      |     
 building           | text                      |     
 construction       | text                      |     
 covered            | text                      |     
 culvert            | text                      |     
 cutting            | text                      |     
 denomination       | text                      |     
 disused            | text                      |     
 embankment         | text                      |     
 foot               | text                      |     
 generator:source   | text                      |     
 harbour            | text                      |     
 highway            | text                      |     
 historic           | text                      |     
 horse              | text                      |     
 intermittent       | text                      |     
 junction           | text                      |     
 landuse            | text                      |     