| |____  Tools |tools |
Fields for Inventory event objects
The following table lists the extracted and calculated fields for the event objects in the model. The table does not include any inherited fields. For more 
information, see "How to use these reference tables."| Object name | Field name | Data 
type | Description | Expected values |
|---|---|---|---|---|
| All_Inventory |description |string |The description of the inventory system. | |
| All_Inventory |dest |string |The system where the data originated, the source of the event. You can alias this from more specific fields, such as dest_host, dest_ip, or dest_name. | || All_Inventory |dest_bunit |string |The business unit of the system where the data originated. This field is automatically provided by Asset and Identity correlation features of  applications like the Splunk App for  Enterprise Security. | |
| All_Inventory |dest_category |string |The category of the system where the data originated, such as email_server or  SOX-compliant. | |
5757
|  |  |  | This field is automatically provided by Asset and Identity correlation features of 
applications like the Splunk App for 
Enterprise Security. |
|---|---|---|---|
| All_Inventory |dest_priority |string |The priority of the system where the data originated. |
| All_Inventory |enabled |boolean |Indicates whether the resource is enabled or disabled. || All_Inventory |family |string |The product family of the resource, such as 686_64 or RISC. |
| All_Inventory |hypervisor_id |string |The hypervisor identifier, if applicable. |
| All_Inventory |serial |string |The serial number of the resource. |
| All_Inventory |status |string |The current reported state of the resource. || All_Inventory |tag |string |Splunk uses this automatically generated field to access tags from within data models. You do not need to populate it. |
| All_Inventory |vendor_product  |string |The vendor and product name of the resource, such as Cisco Catalyst 3850. |
| All_Inventory |version |string |The version of a computer resource, such as 2008r2 or 3.0.0. || CPU |cpu_cores |number |The number of CPU cores reported by the resource (total, not per CPU). |
| CPU |cpu_count |number |The number of CPUs reported by the resource. |
| CPU |cpu_mhz |number |The maximum speed of the CPU reported by the resource (in megahertz). |
| Memory |mem |number |The total amount of memory installed in or allocated to the resource, in megabytes. || Network |dest_ip |string |The IP address for the system that the data is going to. |
| Network |dns |string |The domain name server for the resource. |
| Network |inline_nat |string |Identifies whether the resource is a network address translation pool. |
| Network |interface |string |The network interfaces of the computing resource, such as eth0, eth1 or Wired Ethernet Connection, Teredo Tunneling |58
|  |  |  | Pseudo-Interface. |
|---|---|---|---|
| Network |ip |string |The network addresses of the computing resource, such as 192.168.1.1 or  E80:0000:0000:0000:0202:B3FF:FE1E:8329. |
| Network |lb_method |string |The load balancing method used by the computing resource such as method, round robin, or least weight. || Network |mac |string |A MAC (media access control) address associated with the resource, such as  06:10:9f:eb:8f:14. Note: Always force lower case on this field. Note: Always use colons instead of dashes, spaces, or no separator. |
| Network |name |string |A name field provided in some data sources. |
| Network |node |string |Represents a node hit. || Network |node_port |number |The number of the destination port on the server that you requested from. |
| Network |src_ip |string |The IP address for the system from which the data originates. |
| Network |vip_port |number |The port number for the virtual IP address (VIP). A VIP allows multiple MACs to use one IP address. VIPs are often used by load balancers. || OS |os |string |The operating system of the resource, such as Microsoft Windows Server 2008r2. This field is constructed from vendor_product and version fields. |
| Storage |array |string |The array that the storage resource is a member of, if applicable |
| Storage |blocksize |number |The block size used by the storage resource, in kilobytes. |
| Storage |cluster |string |The index cluster that the resource is a member of, if applicable. || Storage |fd_max |number |The maximum number of file descriptors available. |
| Storage |latency |number |The latency reported by the resource, in milliseconds. |
59
| Storage | mount | string | The path at which a storage resource is mounted. |
|---|---|---|---|
| Storage |parent |string |A higher level object that this resource is owned by, if applicable. || Storage |read_blocks |number |The maximum possible number of blocks read per second during a polling period . |
| Storage |read_latency |number |For a polling period, the average amount of time elapsed until a read request is filled by the host disks (in ms). |
| Storage |read_ops |number |The total number of read operations in the polling period. || Storage |storage |number |The amount of storage capacity allocated to the resource, in megabytes. |
| Storage |write_blocks |number |The maximum possible number of blocks written per second during a polling period. |
| Storage |write_latency |number |For a polling period, the average amount of time elapsed until a write request is filled by the host disks (in ms). || Storage |write_ops |number |The total number of write operations in the polling period. |
| User |interactive |boolean |Indicates whether a locally defined account on a resource can be interactively logged in. |
| User |password |string |Displays the stored password(s) for a locally defined account, if it has any. For instance, an add-on may report the password column from /etc/passwd in this field. || User |shell |string |Indicates the shell program used by a locally defined account. |
| User |user |string |The full name of a locally defined account. |
| User |user_bunit |string |The business unit of the locally-defined user account. This field is automatically provided by Asset and Identity correlation features of  applications like the Splunk App for  Enterprise Security. || User |user_category |string | |
60
|  |  |  | The category of the system where the data originated, such as email_server or 
SOX-compliant.
This field is automatically provided by Asset and Identity correlation features of 
applications like the Splunk App for 
Enterprise Security. |
|---|---|---|---|
| User |user_id |number |The user identification for a locally defined account. || User |user_priority |string |The priority of a locally-defined account. |
| Virtual_OS |hypervisor |string |The hypervisor parent of a virtual guest OS. |
| Snapshot |size |number |The snapshot file size, in megabytes. |
| Snapshot |snapshot |string |The name of a snapshot file. |
| Snapshot |time |time |The time at which the snapshot was taken. |
Java Virtual Machines (JVM)Java Virtual Machines (JVM) 
The fields in the JVM data model describe generic Java server platforms.
Tags used with JVM event objects 
The following tags act as constraints to identify your events as being relevant to this data model. For more information, see "How to use these reference tables."
| Object name | Tag name |
|---|---|
| JVM |jvm |
| |____  Threading |threading |
| |____  Runtime |runtime || |____  Runtime |runtime |
| |____ OS |os |
|  |compilation |
61
| |____ 
Compilation |  |
|---|---|
| |____  Classloading |classloading |
| |____  Memory |memory |
Fields for JVM event objects
The following table lists the extracted and calculated fields for the event objects in the model. Note that it does not include any inherited fields. For more information, see "How to use these reference tables."| Object name | Field name | Data type | Description | Possible values |
|---|---|---|---|---|
| JVM |jvm_description |string |A description  field provided in some data  sources. | |
| JVM |tag |string |This  automatically  generated field  is used to  access tags from within  datamodels. Add-on builders do not need to populate it. | |
| Threading |cm_enabled |boolean |Indicates  whether thread contention  monitoring is  enabled. |true,  false, 1, 0 || Threading |cm_supported |boolean |Indicates  whether the JVM supports thread contention |true,  false, 1, 0 |
62
|  |  |  | monitoring. |  |
|---|---|---|---|---|
| Threading |cpu_time_enabled |boolean |Indicates  whether thread CPU time  measurement is enabled. |true,  false, 1, 0 |
| Threading |cpu_time_supported |boolean |Indicates  whether the  Java virtual  machine  supports CPU  time  measurement for the current  thread. |true,  false, 1, 0 || Threading |current_cpu_time |number |CPU-space time taken by the  JVM, in  seconds. | |
| Threading |current_user_time |number |User-space time taken by the  JVM, in  seconds. | |
| Threading |daemon_thread_count |number |The JVM's  current daemon count. | |
| Threading |omu_supported |boolean |Indicates  whether the JVM supports  monitoring of  object monitor  usage. |true,  false, 1, 0 || Threading |peak_thread_count |number |The JVM's peak thread count | |
| Threading |synch_supported |boolean |Indicates  whether the JVM supports  monitoring of  ownable |true,  false, 1, 0 |
63
|  |  |  | synchronizer usage. |  |
|---|---|---|---|---|
| Threading |thread_count |number |The JVM's  current thread count. | |
| Threading |threads_started |number |The total number of threads  started in the  JVM. | || Runtime |process_name |string |Process name of the JVM  process. | |
| Runtime |start_time |timestamp |Start time of the JVM process. | |
| Runtime |uptime |int |Uptime of the JVM process. | |
| Runtime |vendor_product |string |The JVM  product or  service. This  field can be  automatically  populated by the the vendor and  product fields in your raw data. | |
| Runtime |version |string |Version of the JVM. | || OS |committed_memory |number |Amount of  memory  committed to the JVM. | |
| OS |cpu_time |number |Amount of CPU time taken by  the JVM. | |
| OS |free_physical_memory |number |Amount of free  physical memory remaining to the JVM. | |
64
| OS | free_swap | number | Amount of free swap memory 
remaining to the JVM. |
|---|---|---|---|
| OS |max_file_descriptors |number |Maximum file  descriptors  available to the JVM. || OS |open_file_descriptors  |number |Number of file descriptors  opened by the JVM. |
| OS |os |string |OS that the JVM is running on. |
| OS |os_architecture |string |OS architecture that the JVM is running on. |
| OS |os_version |string |OS version that the JVM is  running on. |
| OS |physical_memory |number |Physical memory available to the  OS that the JVM is running on. || OS |swap_space |number |Swap memory space available to the OS that  the JVM is  running on. |
| OS |system_load |number |System load of the OS that the JVM is running on. |
| OS |total_processors |number |Total processor cores available to the OS that  the JVM is  running on. |
65
| Compilation | compilation_time | number | Time taken by 
JIT compilation. |
|---|---|---|---|JIT compilation. |
|---|---|---|---|
| Classloading |current_loaded |number |The current  count of classes loaded in the  JVM. |
| Classloading |total_loaded |number |The total count of classes  loaded in the  JVM. |
| Classloading |total_unloaded |number |The total count of classes  unloaded from the JVM. |
| Memory |heap_committed |number |Committed  amount of heap memory used by the JVM. || Memory |heap_initial |number |Initial amount of heap memory  used by the  JVM. |
| Memory |heap_max |number |Maximum  amount of heap memory used by the JVM. |
| Memory |heap_used |number |Heap memory used by the  JVM. |
| Memory |non_heap_committed |number |Committed  amount of  non-heap  memory used by the JVM. |
| Memory |non_heap_initial |number |Initial amount of non-heap  memory used by the JVM. |66
| Memory | non_heap_max | number | Maximum 
amount of 
non-heap 
memory used by the JVM. |
|---|---|---|---|
| Memory |non_heap_used |number |Non-heap  memory used by the JVM. |
| Memory |objects_pending |number |Number of  objects pending in the JVM. |
Malware 
The fields in the Malware data model describe malware detection and endpoint protection management.
Tags used with Malware event and search objectsThe following tags act as constraints to identify your events as being relevant to this data model. For more information, see "How to use these reference tables."
| Object name | Tag name |
|---|---|
| Malware_Attacks |malware |
| Malware_Attacks |attack |
| Malware_Operations |malware |
| Malware_Operations |operations |
Fields for the Malware_Attacks event objects and 
Malware_Operations search objectMalware_Operations search object 
The following table lists the extracted and calculated fields for the event objects and search object in the model. The table does not include any inherited fields.
For more information, see "How to use these reference tables."
| Object name | Field name | Data 
type | Description | Possible values |
|---|---|---|---|---|
| Malware_Attacks |action |string |The action  taken by the |allowed, blocked, |67
|  |  |  | reporting device. | deferred, unknown |
|---|---|---|---|---|
| Malware_Attacks |category |string |The category of the malware  event, such as keylogger or ad-supported program. Note: This is a string value. Use a category_id  field for  category ID  fields that are integer data  types  (category_id  fields are  optional, so  they are not  included in this table). | || Malware_Attacks |date |string |The date of the malware event. | |
| Malware_Attacks |dest |string |The system  that was  affected by the malware event. You can alias this from more specific fields, such as  dest_host,  dest_ip, or  dest_name. | |
| Malware_Attacks |dest_bunit |string |These are derived fields provided by Asset and Identity correlation  features of certain |These are derived fields provided by Asset and Identity correlation  features of certain || Malware_Attacks |dest_category |string |These are derived fields provided by Asset and Identity correlation  features of certain |These are derived fields provided by Asset and Identity correlation  features of certain |
68
|  |  |  | advanced applications 
like the Splunk App for 
Enterprise Security. They should be left blank when writing add-ons. | advanced applications 
like the Splunk App forlike the Splunk App for 
Enterprise Security. They should be left blank when writing add-ons. |
|---|---|---|---|---|
| Malware_Attacks |dest_nt_domain |string |The NT domain of the  destination, if  applicable. | || Malware_Attacks |dest_priority |string |This is a derived field  provided by Asset and  Identity correlation  features of certain  advanced applications  like the Splunk App for  Enterprise Security. It  should be left blank when writing add-ons. |This is a derived field  provided by Asset and  Identity correlation  features of certain  advanced applications  like the Splunk App for  Enterprise Security. It  should be left blank when writing add-ons. || Malware_Attacks |dest_requires_av |boolean |This is a derived field  provided by Asset and  Identity correlation  features of certain  advanced applications  like the Splunk App for  Enterprise Security. It  should be left blank when writing add-ons. |This is a derived field  provided by Asset and  Identity correlation  features of certain  advanced applications  like the Splunk App for  Enterprise Security. It  should be left blank when writing add-ons. || Malware_Attacks |file_hash |string |The hash of the file with  suspected  malware. | |
| Malware_Attacks |file_name |string |The name of the file with  suspected  malware. | |
| Malware_Attacks |file_path |string |The full file  path of the file with suspected malware. | |
| Malware_Attacks |signature |string |The name of  the malware  infection  detected on the client (the  dest), such as  Trojan.Vundo,  Spyware.Gaobot, and  W32.Nimbda. | ||  | | |The name of  the malware  infection  detected on the client (the  dest), such as  Trojan.Vundo,  Spyware.Gaobot, and  W32.Nimbda. | |
69
|  |  |  | Note: This is a string value.
Use a