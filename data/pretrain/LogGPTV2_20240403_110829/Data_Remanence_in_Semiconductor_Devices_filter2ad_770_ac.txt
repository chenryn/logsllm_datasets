help with stored data recovery, although it can be used 
to modify the operation of circuits for active attacks — 
as  the  radiation  level  increases  it  leads  to  losses  in 
switching speed, a so-called “logic failure” in which a 
change in logic state becomes impossible.  One way to 
utilise this in an attack would be to irradiate a cell until 
any erase-on-tamper functionality is rendered unusable, 
which 
tamper-responsive  crypto 
devices  include  sensors  to  detect  the  presence  of 
ionising radiation [30]. 
is  why  high-end 
charging  of 
A final problem area which is familiar to anyone who 
has  examined  the  problems  of  erasing  data  stored  on 
magnetic  media  is  the  fact  that  some  of  the  more 
sophisticated memory designs include facilities to map 
out  failing  or  failed  cells  in  the  same  way  that  hard 
drives  will  map  out  bad  sectors.    This  is  performed 
using spare row/column line substitution (SLS), which 
substitutes  problem  cells  with  spare,  redundant  ones 
[31].    This  technology  is  fairly  rare  and  is  usually 
applied  only  to  correct  initial  hard  failures  so  it  isn’t 
really  a  major  concern,  however  it  does  become  a 
problem in EEPROM/flash storage which is  examined 
in Section 6. 
4.5. Methods for Determining Changes in 
Device Operation 
The techniques covered in the literature for determining 
changes in device operation are many and varied, which 
is both a blessing because there are so many to choose 
from and a curse because no two authors can agree on 
which criteria to use to determine a change in a device’s 
operation,  although  there  is  general  agreement  that  a 
device’s  characteristics  have  been  altered  once  it  has 
experienced  a  100  mV  shift  in  the  device  threshold 
voltage or a 10% change in transconductance, voltage, 
or  current  (depending  on  the  author’s  preferences).  
Similarly, published results on phenomena such as hot-
carrier  effects  are  often  obtained  with  specially-
constructed test structures (ring oscillators are popular) 
which may not apply to other circuits such as memory 
cells.    Because  of  the  wide  variation  in  experimental 
methods  and  sources reported  in  the  literature  and  the 
equally large variety of devices in use it’s not possible 
to  provide  definitive  information  on  how  the  data 
recovery  process  might  proceed,  this  section  will 
attempt  to  cover  some  of  the  more  common  methods 
used for determining changes in device operation but is 
by no means exhaustive. 
In the most extreme cases it may be possible to recover 
data  directly  from  the  device  without  resorting  to  any 
special techniques.   “Burn-in” of data  which had been 
stored in SRAM over long periods of time was common 
in  1980’s  devices,  in  one  reported  case  DES  master 
keys  stored  in  a  hardware  security  module  used  for 
PIN-processing were recovered almost intact on power-
up,  with  recoverability  of  the  remaining  bits  being 
aided by the presence of the DES key parity bits [32]. 
More  recent  SRAM  devices  are  less  likely  to  exhibit 
this problem to such a degree, requiring the use of more 
sophisticated  readout  methods. 
  One  widely-used 
technique  from  the  field  of  device  testing  involves 
examining  the  amount  of  power  supply  current  being 
supplied  to  the  device,  known  as  IDDQ  testing.    The 
testing  methodology  involves  executing  a  set  of  test 
vectors  until  a  given  location  is  reached  (know  as  a 
parametric measurement stopping place or PM stop), at 
which  point  the  device  is  halted  and  the  current 
measured.    In  the  quiescent  state,  n-  and  p-channel 
MOSFETS  are  either on  or  off, so there should be  no 
current flowing, and PM stops are selected to coincide 
with  this.    Devices  which  aren’t  functioning  normally 
will exhibit abnormal IDDQ characteristics which can be 
measured  once  the  PM  stop  is  reached.    By  varying 
parameters  such  as  the  applied  voltage  and  operating 
temperature,  it’s  possible  to  identify  devices  which 
have been subject to effects such as hot-carrier stressing 
which  have  altered 
their  operational  parameters.  
Floating-gate  designs  may  also  have  time-dependant 
IDDQ  characteristics  in  which  the  floating  gate  causes 
both n- and p-channel MOSFETS to be partially on and 
therefore  conducting,  a  current  flow  which  slowly 
ceases as the floating gate charges to a logic state and 
the current subsides.  Again, the initial charge (or lack 
thereof)  on  the  gate  and  the  change  in  charge  can  be 
observed by observing the IDDQ [33][34]. 
Many  alternative  techniques,  arising  from  the  field  of 
semiconductor reliability analysis, also exist [35].  For 
example  measuring  the  substrate  current,  the  gate 
current,  and  the  current  in  the  gated  drain-substrate 
diode  of  a  MOSFET  can  all be  used  to  determine  the 
amount  of  stressing  which  has  taken  place  [36][37].  
These measurements can be used to determine the level 
and duration of stress applied [38]. 
Access to internal portions of a device can be obtained 
in  many  ways  [39].    Most  current  ICs  employ  design 
for test (DFT) methodologies which break the device up 
into  more  manageable  blocks  of  circuitry  and  provide 
test  access  to  each  block.    Other  techniques  such  as 
bond pad probing can also be used to obtain access to 
portions of a device. 
When  it  becomes  necessary  to  go  beyond  the  access 
points  provided  by  the  manufacturer,  things  get  a  bit 
more  tricky.    Traditionally,  access  to  internal  portions 
of  IC  circuitry  has  been  performed  with  mechanical 
probing techniques using tungsten wire etched down to 
a  tip  radius  of  0.1–0.2  μm.    These  probes  provide 
gigahertz  bandwidths  with  an  effective 
loading 
capacitance as low as 100 fF and a load resistance of 1 
MΩ or more. 
The  recent  use  of  deep  submicron  designs  has 
complicated  mechanical  probing,  since  the  optical 
diffraction limit and small depth of focus of the optical 
microscopes  used  to  position  the  probes  has  made  it 
difficult to see and probe the deep submicron lines.  In 
addition  standard  mechanical  probing  isn’t  able  to 
access  buried 
in  devices  with  multiple 
metallisation  layers.    Both  of  these  limits  can  be 
overcome  through  the  use  of  focused  ion  beam  (FIB) 
lines 
the  Canadian 
reverse-engineering 
workstations, which can be used both to expose buried 
conductors and to deposit new, easily-accessible probe 
points  on  an  existing  device  [40]  (this  technique  was 
used  by 
lab 
Chipworks  to  rebuild  an  ATMEL  EEPROM  from  a 
crashed  aircraft  in  order  to  recover  data  from  it [41]).  
The  top  metal layers  are  typically  broad  power  buses, 
so  no  serious  harm  is  caused  by  FIB  milling  of  small 
holes  to  access  lower-layer  conductors.    The  only 
potential  problem  is  that  the  FIB  process  can  cause 
local  charging  of  the  device  surface,  which  is  usually 
avoided  by  grounding  all  pins  in  the  device  and 
shielding  surrounding  areas  with  conducting  tape, 
however  the  FIB-induced  charging  can  still  affect 
floating  gates  so  it’s  a  good  idea  to  avoid  performing 
FIB  surgery in their general vicinity  [42].   In addition 
some technologies such as trench and STC DRAM cells 
are naturally resistant to being accessed in this manner, 
although it’s still possible to get to transistors indirectly 
connected  with  the  cell,  for  example  the  ones  in  the 
sense amplifiers. 
(which  can  be  used 
5. Minimising RAM Data Recoverability 
The previous sections have shown a variety of ways in 
which  stored  data  can  leave  traces  of  its  existence 
behind.  These include the effects of electrical stress on 
ionic  contaminants  and  hot-carrier  effects  (which  can 
be  used  to  recover  overwritten  data  or  data  from 
memory  to  which  power  has  been  removed),  and 
electromigration  effects 
to 
determine, after indefinite time  periods,  which  type  of 
signal was most commonly carried by a particular part 
of  a  circuit).    The  latter  would  prove  useful  in 
recovering information such as the bit patterns of keys 
stored  in  special-purpose  cryptographic  devices  — 
since  the  physical  device  is  modified  the  bits  can  be 
recovered an arbitrary amount of time later even if the 
memory  cells 
in  have  been 
successfully  erased  and  trapped  charges  have  bled 
away. 
The  solution  to  the  first  problem  is  to  ensure  that 
sensitive data is  stored for as short a time  as possible; 
the solution to the second problem is more difficult but 
in general involves ensuring that a multitude of signals 
are  sent  through  circuits  without  any  one  signal 
predominating.    These  approaches  are  explained  in 
more detail in the following two sections. 
they  were  stored 
5.1. Avoiding Short-term Retention Effects 
The best way to avoid short-term retention effects is to 
ensure that no memory cell holds a data value for more 
than  a  certain  amount  of  time.    Based  on  the  figures 
given earlier, a few minutes of storage of a given value 
should  be  treated  as  an  upper  bound;  storage  for  any 
changes 
in  device 
larger  amount  of  time  will  cause  detectable  effects  in 
the  memory  cell,  although  it  may  take  quite  a  while 
longer before these effects really become a problem.  In 
a  series  of  tests  carried  out  on  a  sample  of  SRAM 
devices, 
threshold  voltage, 
transconductance,  and  drain-source  current  were 
observed after 100–500 seconds of stress, leading to a 
corresponding  change  in  SRAM  access  time  and 
operating voltage [43].  As the SRAM cell in Figure 4 
indicates,  reads  and  writes  of  0  and  1  bits  stress 
different  access  transistors  in  the  cell  so  that  it’s 
possible to determine whether a 0 or 1 was stored there 
by determining which transistor  was stressed the  most 
(the  grey  dots  in  the  figure  indicate  the  main  stress 
locations).    The  change  in  cell  behaviour  can  be 
determined  by  recording  the  cell  access  time,  through 
voltage  microprobing of the cell’s transistors, or using 
some of the other techniques mentioned earlier.  Similar 
tests have been performed on DRAMs, although in this 
case  the  emphasis  was  on  stress  effects  on  shared 
circuitry  such  as  address  buffers  and sense  amplifiers.  
While there were quite noticeable effects in all of these 
areas the study didn’t examine the effect on individual 
storage cells [44]. 
If nothing is done, the device will eventually recover by 
itself, although this can take quite some time at normal 
room temperatures.  One way to accelerate the recovery 
process 
to  elevated 
temperatures,  the  read  access  times  for  the  SRAM 
devices  mentioned  previously  were  found  to  recover 
after around 1 ½ hours at 75°C, 3 days at 50°C, nearly 
two months at 20°C, and approximately 3 years at 0°C.  
No  recovery  was  observed  for  write  access  times,  but 
given that determining this would involve writing to the 
cells of interest it’s unlikely that this presents much of a 
threat. 
The  best  practical  way  to  avoid  long-term  storage 
effects is to periodically flip the stored bits as suggested 
in the  1996  paper [45]  so  that  each cell never  holds a 
value long enough for it to be “remembered”.  Although 
impractical  for  large  amounts  of  data,  this  may  be 
feasible  for  small  amounts  of  sensitive  data  such  as 
cryptovariables.    For  example  consider  an  encryption 
key whose bits are flipped once a minute.  The key flip 
state is held in keyState, initially set to 0, and access 
is protected though a mutex keyMutex.  The code to 
flip and use the bits is shown in Figure 9. 
the  device 
to  expose 
is 
while( TRUE ) 
{ 
acquire keyMutex; 
key ^= 1111…1111; 
keyState ^= 1; 
release keyMutex; 
sleep( 60 ); 
} 
acquire keyMutex; 
if( keyState == 1 ) 
key ^= 1111…1111; 
encrypt/decrypt; 
if( keyState == 1 ) 
key ^= 1111…1111; 
release keyMutex; 
Figure 9: Flipping (left) and using (right) in-memory 
cryptovariables 
This  can  be  implemented  as  a  simple  wrapper  around 
an  existing  encryption  function,  and  ensures  that  the 
same key bits are never stored in a RAM cell for more 
than a certain amount of time, in this case one minute.  
A  rather  simpler  solution  which  doesn’t  require 
complex  bit-flipping  and  tracking  of  cryptovariable 
state  information  involves  moving  the  data  around  in 
memory  occasionally  and  overwriting  the  original 
storage  locations,  again  ensuring  that  data  is  never 
stored in a RAM cell for too long. 
If  the  luxury  of  custom  circuitry  is  available  (for 
example in a specialised crypto processor or module), it 
may  be  possible  to  integrate  this  bit-flipping  into  the 
memory  circuitry.    At  each  DRAM  refresh  cycle,  the 
complement of the read value is written.  When data is 
read  from  the  cell,  it  is  XORed  with  the  keyState 
variable  which  tracks  the  state  of  the  data  currently 
stored  in  the  cells  (for  older  3T  cells  in  which  the 
output data were inverted compared to the input data, it 
would  have  been  possible  to  achieve  this  bit-flipping 
effect  automatically  by  omitting  the  data  inversion 
which is normally required during a refresh cycle). 
Since SRAMs don’t have a DRAM-style refresh cycle, 
this type of circuit modification isn’t really possible for 
them,  so  that  performing  bit-flipping  in  an  SRAM 
would  require  the  addition  of  DRAM-style  refresh 
circuitry, negating most of the advantages of SRAM. 
Mention should also be made of hybrid memory types 
which combine DRAM with a small amount of SRAM 
(usually acting as some form of cache or I/O buffer) to 