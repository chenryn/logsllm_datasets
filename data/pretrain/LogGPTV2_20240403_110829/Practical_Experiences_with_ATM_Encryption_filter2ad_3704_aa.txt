title:Practical Experiences with ATM Encryption
author:Gregory T. Byrd and
Nathan Hillery and
Jim Symon
Practical Experiences with ATM Encryption
Gregory T. Byrd
NC State University
Raleigh, NC
Nathan Hillery
Cylink
Jim Symon
Cylink
Morrisville, NC
Morrisville, NC
Abstract
CellCase is a commercial high-speed encryptor for
Asynchronous Transfer Mode (ATM) networks, available
since 1997. It provides data conﬁdentiality and entity au-
thentication at the ATM layer, encrypting ATM cell pay-
loads at rates from T1 (1.5 Mb/s) to OC-12c (622 Mb/s).
Though deployed prior to the adoption of the ATM Forum
Security Speciﬁcation (1999), CellCase implements many
of the mechanisms deﬁned by that standard. In this pa-
per, we describe how CellCase is deployed in actual net-
works, as well as customer experience with services such
as counter-mode encryption, key exchange, and key up-
date. Based on this experience, we also discuss possible
changes to the ATM Forum speciﬁcation.
1 Introduction
Asynchronous Transfer Mode (ATM) [4] is the most
widely deployed network technology for broadband com-
munications applications. Its presence has been less no-
ticed since it generally has been placed only within the
inner workings of the public carrier networks. Since
no well-established alternatives exist for high-speed wide
area communications, the continued growth of ATM in
the future is very likely. Some analysts are predicting
that ATM will be the common multi-service platform for
consolidating the numerous application-speciﬁc networks
that exist today.
ATM has powerful multiplexing capabilities that can
be used to provide quality of service (QoS) guarantees to
end-user applications. QoS guarantees allow ATM to de-
liver time-sensitive information such as voice, video, and
telepresence applications over the same network infras-
tructure as time-insensitive applications such as bulk data
movement. QoS has been difﬁcult to achieve in packet
networks, since packets monopolize the link while they
are being transmitted, blocking other packets that are to
be routed over the same link. The delayed packets may
cause the end-user application to experience degraded per-
formance.
The features of ATM present some unique challenges
for encryption. At any one point in the network many
connections (, or more than 250 million) can exist at
a time; therefore, an encryption device must be capable
of managing a large number of security contexts. Fur-
thermore, the security context can—and generally does—
change with each cell. At the OC-12c rate (622 Mb/s),
the cryptographic state information for the new security
context must be retrieved, used, and updated in less than
705 nanoseconds (the transmission time of a single 53-
byte cell).
While the time and memory demands of ATM en-
cryption are daunting, the data movement operations are
highly regular. This allows the bulk of the encryptor de-
sign to be straightforward, leading to a minimization of
failure modes. The implementation of the encryptor de-
sign is partitioned so that the regular, very high-speed
operations are carried out exclusively in hardware, while
unpredictable, complex operations are carried out in soft-
ware. Once a secure connection has been established, the
software portion of the encryptor is no longer involved in
the handling of the data transported over that connection.
The experiences we have obtained from helping cus-
tomers use the encryptor in their networks indicate that
the encryptor design and implementation are indeed ro-
bust, usable, and efﬁcient. However, as in all cases when
a device is moved from a laboratory environment to de-
ployment in the real world, we have encountered a number
of new situations at customer sites that have been educa-
tional. This paper shares our experience in implement-
ing and deploying one of the few commercially-available
ATM encryptors. We discuss the impact on the encryption
system of in-band network management, aggregation of
multiple channels into paths, and trafﬁc policing. In addi-
tion, we discuss the ATM Forum speciﬁcations that relate
to security, pointing out some consequences of their cur-
rent provisions and offering several suggestions for how
the speciﬁcations could be enhanced.
2 System Overview
The CellCase system provides key-agile ATM-layer en-
cryption, for network rates from T1 (1.5 Mb/s) to OC-12c
Host
Private
LAN
CU
Public
WAN
CU
CU
Private
LAN
Host
Private
LAN
Host
Figure 1. ATM Encryption. Each cryptographic unit (CU) encrypts data as it moves from the secure private LAN
to the unsecure public WAN. The CU on the other side of the connection decrypts the data as it moves from the
public WAN to the secure private LAN. Hosts may be any type of ATM end-user equipment. In key-agile systems,
a separate key is used for each virtual connection through the public network.
(622 Mb/s). The cryptographic unit (CU) serves as a gate-
way between a secure private network (or host) and the
unsecure public network. The 48-byte payload of each
ATM cell is encrypted, while the ﬁve-byte header is left
unchanged, so that the cell may be switched and routed
through the public network normally. Each virtual con-
nection, denoted by a virtual path identiﬁer (VPI) and vir-
tual channel identiﬁer (VCI) in the cell header, has its own
key and its own cryptographic state.
2.1 Hardware
The CU hardware is responsible for cell encryption and
interfacing to the public and private networks. Higher-
level functions, such as ATM signaling, key exchange,
and key update, are performed by capturing selected cells,
delivering them to software for processing, and inserting
cells generated by software.
Figure 2 shows the hardware that controls the ﬂow of
cells between the private network and the public network.
This is known as the “private ﬂow.” An identical set of
hardware controls the public ﬂow, from the public net-
work to the private, except that cells are decrypted, rather
than encrypted. Each ﬂow is independent; there is no
cryptographic state shared between the two pipelines.
First, the ATM Receive Interface converts the physical
signal from the private network into ATM cells. The con-
nection identiﬁer (VPCI) is extracted from the cell header
and used as an index for the VC Lookup Table (VLT).
(The VPCI is a concatenation of the virtual path identiﬁer
(VPI) and the virtual channel identiﬁer (VCI).) Other parts
of the cell header are used to detect special cell types, such
as Operation and Maintenance (OAM) cells. Such cells
may require special processing, such as being extracted
for software processing.
The VLT contains an entry for each enabled Virtual
Connection (VC). (VC’s are enabled by software, as de-
scribed in the next section.) The VLT entries are sorted by
VPCI, and a binary search is used to ﬁnd the correct entry
for the incoming cell. If no corresponding entry is found
in the VLT, the cell is discarded. The VLT entry contains
ﬂags that determine the disposition of this cell: it may be
extracted (either before or after encryption), encrypted, or
passed through in the clear. If encryption is required, the
ﬂags also indicate the mode of encryption to be used. The
ﬂags travel with the cell through the rest of the pipeline.
The VLT entry also contains an index into the VC State
Memory. This unsorted table contains an entry for each
active connection. The entry contains the encryption keys
and any other state information that must be kept for a
connection. For each connection, two separate key banks
are maintained in the state memory, with a bit that indi-
cates which bank is currently being used. The unused
bank is available for installing a new key as part of the
key update procedure; after the new key is installed, the
bank bit is changed and the new key is used for encryp-
tion/decryption. Some state must be updated after the cell
is encrypted, such as the state vector for counter-mode en-
cryption.
After the VLT, a pair of FIFO queues are available for
cell extraction and insertion. Complete cells are inserted
and removed from each FIFO, not individual words or
bytes.
If a cell is marked for capture and there is not
enough room in the extraction FIFO, then the entire cell
is discarded. A cell is removed from the insertion FIFO
only when there is an idle cell (in the data stream) that can
be replaced; a cell from the FIFO will never overwrite a
data cell in the cell stream. (Therefore, it can be difﬁcult
to insert cells when a high percentage of the ATM link
bandwidth is ﬁlled with data cells.)
User Interface
Security Services
(Key Exchange, Key Update, Counter-Mode Synchronization)
software
hardware
Random
Number
Generator
Pre-encrypt
Extract FIFO
Pre-encrypt
Insert FIFO
Post-encrypt
Extract FIFO
Post-encrypt
Insert FIFO
k
r
o
w
t
e
N
e
t
a
v
i
r
P
ATM Receive
Interface
VC Lookup
Table
index
Encryption
Engine
ATM Transmit
Interface
VC State
Memory
new state
keys and state
Figure 2. ATM encryptor—private-to-public ﬂow.
k
r
o
w
t
e
N
c
i
l
b
u
P
Next, the received or inserted cell is passed to the en-
cryption engine, along with the ﬂags from the VLT and
the keys and state information from the state memory.
The payload of the cell is encrypted accordingly, while
the header is unchanged. A cell that is not encrypted still
ﬂows through the engine, with the same latency as an en-
crypted cell.
After encryption is another pair of FIFO queues for cell
extraction and insertion. As before, extraction is con-
trolled by a ﬂag in the VLT entry for this connection, and
insertion occurs when an idle cell may be overwritten. Fi-
nally, the cell is transmitted to the public network by the
ATM Transmit Interface.
In addition to the two cell pipelines described above,
the hardware provides a single true random number gen-
erator. Random bits are accumulated into a 32-bit random
register that may be read by software.
2.2 Software
The cryptographic unit software is responsible for man-
aging the state of active connections, associating keys
with secure connections, monitoring hardware status, and
providing a management interface.
Connections are established through normal ATM sig-
naling protocols, in the case of Switched Virtual Channels
(SVC’s), or by user action, in the case of Permanent Vir-
tual Channels or Paths (PVC’s and PVP’s). In the case
of SVC’s, the calling and called end system addresses
are matched against an access control list to determine
whether a connection should be encrypted, passed in the
clear, or disallowed. The cryptographic parameters of a
PVP/PVC connection are set by the user when the con-
nection is established.
Cryptographic parameters, such as key length, encryp-
tion mode, and key update interval, are independent for
each connection. In this system, Triple-DES is the only
algorithm provided, but the user may choose 56-bit, 112-
bit, or 168-bit keys (equivalent to one-key, two-key, and
three-key DES encryption, respectively). Two encryp-
tion modes are supported: electronic codebook (ECB) and
ATM Forum counter mode (CM) [2], described in Sec-
tion 2.3.1.
Output feedback modes, such as cipher-block chaining
(CBC), reduce the throughput of Triple-DES by a factor
of three. These modes are not supported, because no com-
mercial encryption chips were available to match OC-3c
or OC-12c cell rates when the system was designed. The
initial research prototype [12] used experimental encryp-
tion chips [3] to achieve Single-DES with CBC at OC-12c
rates.
Counter mode encryption and key update are imple-
mented according to the ATM Forum Security Speciﬁca-
tion, described below. Both require the insertion of Op-
eration and Maintenance (OAM) cells for cryptographic
synchronization and for key distribution. The software
is responsible for inserting these cells. As described
above, hardware is responsible for capturing incoming
OAM cells for processing by software.
Keys may be assigned explicitly by the user (for PVC’s
and PVP’s only), or they may be generated automatically
and distributed between cryptographic units through a key
exchange protocol. The key exchange protocol is similar
to the three-exchange protocol in the ATM Forum Security
Speciﬁcation. It provides conﬁdentiality, mutual authenti-
cation, and protection from replay and man-in-the-middle
attacks.
2.3 ATM Forum Security Speciﬁcation
The ATM Forum is a consortium of ATM vendors
and users that establishes standards for ATM equip-
Encryption
Decryption
State Vector
Update
Function
State Vector
Update
Function
Key
Encrypt
Key
Encrypt
Keystream
Plaintext
Ciphertext
Keystream
Plaintext
Figure 3. ATM Forum Counter Mode Encryption
ment. In February 1999, a speciﬁcation for ATM secu-
rity was approved by the Forum [2]. It establishes stan-
dard algorithms and protocols for data security in the
user plane—providing transfer of user data across vir-
tual connections—and the control plane—providing con-
nection establishment, release and other connection func-
tions.
The following security services are deﬁned for the user
plane: entity authentication, data conﬁdentiality, data ori-
gin authentication and integrity, and access control. In the
control plane, services for entity authentication and data
origin authentication and integrity are deﬁned. We will
concentrate on data conﬁdentiality and entity authentica-
tion in the user plane, since those are the services provided
by the CellCase system.
Data conﬁdentiality protects user data from unautho-
rized disclosure. The payload of each ATM cell is
encrypted using a symmetric-key algorithm, such as