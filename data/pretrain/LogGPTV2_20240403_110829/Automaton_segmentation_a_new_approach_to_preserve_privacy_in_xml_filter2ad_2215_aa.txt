title:Automaton segmentation: a new approach to preserve privacy in xml
information brokering
author:Fengjun Li and
Bo Luo and
Peng Liu and
Dongwon Lee and
Chao-Hsien Chu
Automaton Segmentation: A New Approach to Preserve
Privacy in XML Information Brokering
Fengjun Li, Bo Luo, Peng Liu, Dongwon Lee, and Chao-Hsien Chu
The Pennsylvania State University
University Park, PA 16802, USA
{fengjun, bluo, pxl20, dongwon, chc4}@psu.edu
ABSTRACT
A Distributed Information Brokering System (DIBS) is a
peer-to-peer overlay network that comprises diverse data
servers and brokering components helping client queries lo-
cate the data server(s). Many existing information broker-
ing systems adopt server side access control deployment and
honest assumptions on brokers. However, little attention
has been drawn on privacy of data and metadata stored and
exchanged within DIBS. In this paper, we address privacy-
preserving information sharing via on-demand information
access. We propose a ﬂexible and scalable system using a
broker-coordinator overlay network. Through an innovative
automaton segmentation scheme, distributed access control
enforcement, and query segment encryption, our system in-
tegrates security enforcement and query forwarding while
preserving system-wide privacy. We present the automaton
segmentation approach, analyze privacy preservation in de-
tails, and ﬁnally examine the end-to-end performance and
scalability through experiments and analysis.
Categories and Subject Descriptors
K.4.1 [COMPUTERS AND SOCIETY]: Public Pol-
icy Issues—privacy; K.6.5 [MANAGEMENT OF COM-
PUTING AND INFORMATION SYSTEMS]: Secu-
rity and Protection
General Terms
Security
Keywords
Privacy, XML, Access Control
1.
INTRODUCTION
In a federated information system with diverse partici-
pants (from diﬀerent organizations) such as data producers,
data consumers, or both, the need of cross-organizational in-
formation sharing naturally arises. However, diﬀerent types
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’07, October 29–November 2, 2007, Alexandria, Virginia, USA.
Copyright 2007 ACM 978-1-59593-703-2/07/0010 ...$5.00.
e r
U s
2
User
User
Data 
Server
User
3
User
User
Data 
Server
U s e
r
e r
U s
1
4
1
5
3
6
Broker-Coordinator
Network
9
User User
7
User
Data 
Server
7
2
10
4
User
User
User
6
5
8
User
User
User
Broker
Coordinator
Super Node
User
User
User
Data 
Server
Data 
Server
Figure 1: System architecture of a distributed infor-
mation brokering system
of applications often need diﬀerent forms of information shar-
ing. In particular, while some applications (e.g., stock price
updating) would need a publish-subscribe framework [3, 6],
the on-demand information access is more suitable for other
applications. Examples include cases like querying for prod-
ucts (parts) from manufactures and contractors network or
providing emergency health care services to visitors (or tourists)
whose medical records are not in local hospitals. Consider
the following motivating example.
Example 1. Let us consider a medicare network scenario.
Each organization (e.g., hospital) participates as a data source
that holds its own patient database. Since the records are
highly sensitive and private, intensive privacy and security
enforcement is desired. Diverse users (e.g., doctors, as-
sistants, pharmacists, and administrators) are to access local
or remote patient data according to certain access control
policies. Furthermore, users who ask queries from their own
terminals do not have to have prior knowledge of data distri-
bution. For instance, when a doctor wants to retrieve all the
historical records of a patient, her query may be forwarded
to all data sources that hold related information. However,
the user does (and should) not need to known where the
2
data comes from.
When N parties need to share data, as shown in Exam-
ple 1, “pouring” all data into a centralized repository man-
aged by a third party may lead to legal/political hurdles
and trust/privacy concerns.
In such scenarios, a peer-to-
peer information sharing framework can be desirable. In its
simplest form, we may establish two symmetric client-server
508N
relationships between every pair of parties, but having 2
relationships is not scalable. To achieve better scalability,
peer-to-peer overlay networks have been proposed to include
not only the data servers of N parties but also a set of infor-
mation brokering components helping client queries locate
the right data server(s) [11, 12, 13]. In this paper, such a dis-
tributed on-demand information access system is referred to
as Distributed Information Brokering System (DIBS). Fig-
ure 1 shows an example DIBS (to be elaborated in Sec-
tion 3.4). When data are owned, scattered, and managed
by multiple parties in DIBS, various privacy concerns arise.
Consider the following example.
Example 2. Continuing from Example 1, suppose that Anne
is in ER and all patient data are stored and managed in XML
format (as opposed to in relational records). If a doctor’s
XML query, “/provider/.../patient[name()=‘Anne’]
/symptom[cancer()=‘blood’]//*”, is disclosed, then peo-
ple may guess that Anne has a cancer. Similarly, Anne may
not wish to reveal that she is now in Los Angeles under
emergency health care but her health records are stored in
Mt. Sinai Hospital of New York, since people may guess
that she has cancer related problem if they know that her
records are from the hospital renowned for its blood cancer
treatment. That is, a medicare DIBS needs to protect not
only conﬁdentiality of patient data, but also privacy of such
sensitive information as “who asks what queries” or “where
2
data comes from”.
Despite its importance, to our best knowledge, none of
existing DIBS work is designed with user and data privacy
in mind. To satisfy such privacy protection requirements,
therefore, we propose a novel DIBS, named as Privacy Pre-
serving Information Brokering system (PPIB). As shown in
Figure 1, PPIB contains a broker-coordinator overlay net-
work, in which the brokers are responsible for forwarding
user queries to coordinators concatenated in tree structure
while preserving privacy. The coordinators, each holding a
segment of access control automaton and routing guidelines,
are mainly responsible for access control and query routing.
PPIB takes an innovative automaton segmentation ap-
proach to privacy protection.
In particular, two critical
forms of privacy, namely query content privacy and data
object distribution privacy (or data location privacy), are
enabled by a novel automaton segmentation scheme, with
a “little” help from an assisting query segment encryption
scheme. This scheme preserves privacy without sacriﬁcing
functionality. While providing “full” capability to do in-
network access control and to route queries to the right data
sources, this scheme ensures the information that a (curious,
corrupted or broken) coordinator can gather is far from be-
ing enough to infer either “which data is being queried” or
“where the data is located”. Second, the automaton segmen-
tation scheme can also provide high-quality privacy protec-
tion to metadata (e.g., access control policy). Third, user
location privacy is protected by multilateral security, a de-
sign principle of PPIB.
To the best of our knowledge, (1) PPIB is the ﬁrst system
that uses automaton segmentation to do privacy-preserving
in-network access control. (2) PPIB is the ﬁrst system that
integrates automaton segmentation, in-broker access con-
trol, and query routing. (3) PPIB provides the most com-
prehensive privacy protection for information brokering sys-
tems, and its performance degradation is insigniﬁcant com-
pared with traditional DIBS systems (in a practical set-
ting, the performance degradation of PPIB is at millisec-
onds level). (4) The evaluation results show that PPIB is a
scalable privacy solution.
2. PROBLEM STATEMENT
2.1 Distributed Information Brokering Systems
Conceptually, a distributed information brokering system
(DIBS) is a peer-to-peer overlay network consisting of data
servers, brokering components, and end users. Applications
atop DIBS always involve some sort of consortium among
a set of data owners (or organizations). While expressing
a strong need of cross-organizational information sharing,
data owners in such a consortium still expect to remain as
much autonomous as possible. As a result, data owners
collect data independently, and manage it in their local data
servers. Data is not poured into some center data warehouse
or replicated in distributed databases. Instead, data servers
send metadata about their data objects distribution as well
as access control rules to the consortium, which will further
assign them to brokers to help information brokering.
Traditional information sharing approaches always assume
the use of trustable servers, such as the central data ware-
housing server or database servers. However, the honest or
semi-honest assumptions (e.g., honest-but-curious assump-
tion as adopted in [2]) may not hold for brokers. In prac-
tice, they may either be abused by insiders or compromised
by outsiders.
It is obvious that the brokers become the
most vulnerable privacy breach of a DIBS, which leads to
inevitable security and privacy risks. On one hand, the
survival of information brokering depends on the trust of
brokers to enforce authentication, access control as well as
query forwarding, while on the other hand, failing to provide
proper protection of information released in this process may
create circumstances that harm the privacy of user, data and
the system.
2.2 Privacy Vulnerabilities
In existing research of DIBS, relatively little attention has
been drawn to privacy protection. To impose order into
the multitude of privacy vulnerabilities in current DIBS ap-
proaches, we propose a taxonomy of privacy in three types:
User Privacy, Data Privacy, and Metadata Privacy.
A. User Privacy
Generally speaking, we can summarize the user privacy
as “who, where, and what”. “Who” refers to the identity
of a user, “where” denotes his/her location at the moment
of sending a query, and “what” represents the interest and
purpose that can be inferred from his/her query.
User location could be easily retrieved by analyzing the
IP packet of the query. User identity is a key concern of
user privacy, which can be obtained either from authentica-
tion process or by associating user location information with
other public data. Although the “what” privacy may not be
reveled directly, one still can make reasonable inference from
the content of the query. Sometimes, the inference is sen-
sitive information of others as shown in Example 2. Some-
times, the inference is about user’s own interest or purpose.
For example, if Bob sends a query “//departure[code=JFK,
date=08/15]/arrival[code=SFO]//*” to a distributed air-
line reservation system, the intermediate broker can easily
infers that Bob needs a ticket from New York to San Fran-
cisco on Aug 15. In either circumstance, the “what” privacy
is hurt.
Although user identity, user location, and query content
are privacy-sensitive matters, one cannot apply popular privacy-
preserving techniques directly in the DIBS. This is because a
broker needs to learn these privacy-sensitive information to
fulﬁll query brokering. For example, since data in an DIBS
is only accessible by legitimate users, user identity cannot
be represented by anonymity as other privacy-preserving ap-
plications do. In other words, the broker is responsible for
authenticating user identity. As a result, to what extent
user’s privacy is preserved highly depends on how we min-
imize the disclosure of these privacy-sensitive information.
This requires a new mechanism where the broker cannot
infer the privacy of individuals while still fulﬁlling its desig-
nated functions.
B. Data Privacy
In a DIBS, data owners collect data independently and
manage it with autonomous data servers. While providing
data access to legitimate users, data servers have to release
certain privacy-sensitive information that needs to be pro-
tected. In general, we can express privacy concerns of data
with two questions, “where is the data?” and “who stores
what?”. The former concerns data location privacy, and
the latter, denoted data object distribution privacy, inquires
which type of data is contained in a particular data server.
Unlike other large public databases or data warehouse, data
owners in the proposed DIBS are highly conservative about
their data privacy. They only share data and data distribu-
tion within the consortium.
C. Metadata Privacy
Two types of metadata are involved in the information
brokering process in an DIBS, query indexing guidelines and
access control rules. The former describes where the data
objects are distributed among all the data servers, and the
latter assigns accessibility to legitimate users according to
access control policy provided by data owners. It is obvi-
ous that the metadata is highly relevant to both the pri-
vacy of data location and the privacy of data object distri-
bution. However, to facilitate information brokering, these
metadata have to be stored at the intermediate brokering
components, which may be abused by the insider or com-
promised by the outsider according to our assumptions. As
a result, the metadata becomes an obvious and easier target
of attacks. Risk rises when unsecured or dishonest broker-
ing components try to abuse or leak these privacy-sensitive
information. In existing DIBS approaches, a compromised
broker can obtain data location information from indexing
guidelines or access control policy since these information
are stored in brokers to facilitate routing and access control.
Even if we can adopt some encryption schemes to hide these
sensitive information from brokers, a compromised broker
can probe the whole system by sending snooping queries. In
this way, a compromised broker is more dangerous to the
system than ordinary malicious users.
Remark. Note that diﬀerent types of privacy may be inter-
twined with each other. For instance, query indexing guide-
lines may reveal data server locations; query content, access
control rules and query indexing guidelines may reveal data
objects distribution.
3. BACKGROUND
3.1 XML Preliminaries
This paper will focus on semantically rich applications
such as health care. For those applications, keyword-based
indexing and querying techniques (e.g., [26, 18, 8]) would
not meet the expressiveness needs. To illustrate, health care
providers need to declaratively express ﬂexible constraints
on the information to be retrieved. When tourist Anne
is in ER, the doctor may query for medical records that
match “last name Anne, 5 or 6 years old, has an ‘open femur
fracture with contamination’, female”, and simple ﬁlename-
based, keyword-based, or range queries are not suﬃcient for
this context.
To support rich semantics, we assume data are queried
and exchanged in XML format. Data is assembled into XML
documents, conforming to XML syntax and semantic rules.
An XML document consists of elements, attributes, and text
nodes. An element has a set of attributes, and may contain
other XML elements and text nodes. Thus, these elements
collectively form a tree-base data structure. The widely-
adopted XML standard allows people to abstract naive data
representations (e.g., patient records) into semi-structured
XML data which can be retrieved by expressive yet simple
XPath queries. XPath is a restricted variation of regular
path expressions, which can refer to all or part of the nodes
in an XML document using axes [17]. Axes represent the
structural relationships between nodes.
In particular, an
axis deﬁnes a set of nodes relative to the current node. For
example, “/” denotes the child node, “//” denotes the cur-
rent node itself and all the descendant nodes, and “@” denotes
the attribute. Although several query languages using dif-
ferent query algebras have emerged recently, most of them
use XPath for locating nodes in XML documents. Thus,
although our system is applicable to any regular path ex-
pression and any query language based on it, we focus on
XPath in this paper.
3.2 Access Control Model
Access control is required in most if not all DIBS. We