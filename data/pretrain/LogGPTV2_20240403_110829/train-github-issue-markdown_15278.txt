This code:
    fn main() {
        let vec = vec![1,4,35,13,42,1];
        for x in vec[3..] {
            print!("{} ", x);
        }
    }
produces the following errors
    main.rs:3:5: 5:6 error: the trait `core::marker::Sized` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` does not have a constant size known at compile-time
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 error: the trait `core::iter::Iterator` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` is not an iterator; maybe try calling `.iter()` or a similar method
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 error: the trait `core::marker::Sized` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` does not have a constant size known at compile-time
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 error: the trait `core::marker::Sized` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` does not have a constant size known at compile-time
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 error: the trait `core::iter::Iterator` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` is not an iterator; maybe try calling `.iter()` or a similar method
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 error: the trait `core::iter::Iterator` is not implemented for the type `[_]` [E0277]
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    main.rs:3:5: 5:6 note: `[_]` is not an iterator; maybe try calling `.iter()` or a similar method
    main.rs:3     for x in vec[3..] {
    main.rs:4         print!("{} ", x);
    main.rs:5     }
    note: in expansion of for loop expansion
    main.rs:3:5: 5:6 note: expansion site
    error: aborting due to 6 previous errors
Both the Sized and Iterator errors repeat multiple times, and I suspect they
would repeat indefinitely if rustc didn't have an error threshold.