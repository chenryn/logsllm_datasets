It’s assembler, 
Jim, but not as 
we know it!
Morgan Gangwere
DEF CON 26
Hello, I’m Morgan Gangwere and this is It’s assembler, Jim, but not as we know it!
We’re going to be looking at some fun shenanigans you can have with embedded 
devices running Linux (and other things)
1
Dedication
Never forget the 
shoulders you stand on.
Thanks, Dad
First a shout-out to my father. He’s an awesome man who taught me the importance 
of understanding tools and then making your own. This is him using a chisel with just 
one hand – and a tool. 
2
whoami
Hoopy Frood
Been fiddling with Linux SOCs since I 
fiddled with an old TS-7200 
EmbeddedARM board
I’ve used ARM for a lot of services: 
IRC, web hosting, etc.
I’ve built CyanogenMod/LineageOS, 
custom ARM images, etc. 
So who am I?
I’m the hoopiest frood that ever did cross the galaxy, been doing Linux-y stuff since I 
was a wee lad making off with one of my father’s dev kits, and I’ve built my own tools 
for some time. 
3
A word of note
There are few concrete examples in this talk. I’m sorry.
This sort of work is
One part science
One part estimation
Dash of bitter feelings towards others
Hint of “What the fuck was that EE thinking?”
A lot comes from experience. I can point the way, but I 
cannot tell the future. 
There’s a lot of seemingly random things. Trust me, It’ll
make sense.
4
ARMed to the 
teeth
From the BBC to your home.
So let’s talk about ARM. 
5
Short history of 
ARM
Originally the Acorn RISC machine
Built for the BBC Micro!
Acorn changed hands and became 
ARM Holdings
Acorn/ARM has never cut silicon!
Fun fact: Intel has produced ARM-
based chips (StrongARM and 
XSCale) and still sometimes does!
The ISA hasn’t changed all that 
much.
ARM, the Acorn RISC Machine, was built for the BBC Micro in 1985 by Acorn 
Computer, predominantly designed by the hands of Sophie Wilson. Later, ARM was 
changed to Advanced RISC machine, and later into simply ARM. The ARM ISA has 
stayed the same since ARM2.. Mostly. There’s been changes to keep up with the time, 
but you could read ARM assembler from the 80s and understand it today. 
6
Network appliances, phones and routers have been running on top of ARM for quite a 
while: It’s cheap, low power and versatile enough to do what most people want it to 
do. These small linux-based ARM devices have become fixtures in our houses and in 
enterprise. We’re now seeing ARM-based laptops, with ASUS’ NovaGo coming to 
market and several other devices based on Qualcomm’s Snapdragon processor line 
running full desktop OS’s on them and getting days of battery life. 
7
The whole line of IKEA’s TRADFRI Smart LED lighting solutions run on ARM Cortex M0 
chips, including the dimmers and bulbs. They go for months on a CR2032 battery. 
8
Embedded 
Linux 101
So let’s talk about Embedded Linux devices in general.
9
Anatomy of an Embedded 
Linux device. 
Fundamentally 3 parts
Storage
SoC/Processor
RAM
Everything else? Bonus.
PHYs on everything from I2C, USB to SDIO
Cameras and Screens are via MIPI-defined protocols, 
CSI and DSI respectively
At one point, they all look mostly the same.
Embedded Linux devices consist of three general parts: An SoC, Storage, and RAM. 
Most everything else is just a peripheral of some kind, like displays, USB devices, SDIO 
and more. 
10
What is an SoC?
Several major vendors:
Allwinner, Rockchip (China)
Atheros, TI, Apple (US)
Samsung (Korea)
80-100% of the peripherals and possibly storage is right 
there on die
Becomes a “just add peripherals” design
Some vendors include SoCs as a part of other 
devices, such as TI's line of DSPs with an ARM SoC 
used for video production hardware and the like.
In some devices, there may be multiple SoCs: A whole 
line of Cisco-owned Linux-based teleconferencing 
hardware has big banks of SoCs from TI doing video 
processing on the fly alongside a DSP.
For those not familiar, an SoC, or System on Chip, is a “Just Add Peripherals” building-
block in the design of devices. There’s an SoC in your smartphone, for instance, that 
handles most of your phone’s peripherals, including radios and display adapters. 
There’s a handful of major players in the field, including several in the US, China, and 
Korea. SoCs are often bundled with application-specific silicon, such as a whole line of 
TI DSP chips which have an ARM SoC on-die to control it, complete with Ethernet PHY 
and a little bit of RAM.
11
What is an SoC?
Internal bus
Peripheral Controller
LTE modem
Ethernet PHY
I2C/SPI
External 
Peripherals
RAM 
(sometimes)
Storage 
Controller
SD 
Card/NAND/etc
GPU
CPU 
Core(s)
All the different SoC designs look astoundingly similar, so here’s a really generic look 
at it. Everything rides on an internal bus of some kind, with peripherals sitting on 
some kind of controller. There’s sometimes a secondary storage controller to make 
external storage such as SATA, NAND, or other storage technologies available early on 
or through some kind of abstraction layer. 
12
Once you’ve seen one
13
You’ve seen them all
14
They only really differ in the specific features: Here we see that this Snapdragon has 
4G of LPDDR4 stacked on top, but also has 2 PCIe lanes!
15
Even Intel makes SoCs! This is a Bay Trail SoC – I suspect similar to what’s in the 
MinnowBoard or something similar. As you can see, it even includes Legacy
component support, such as SMBUS!
16
Storage
Two/Three common flavors
MTD (Memory Technology 
Device): Abstraction of flash 
pages to partitions
Storage is another story entirely. The first type of storage is MTD, or Memory 
Technology Device. This is NAND Flash at its core, and it gets abstracted out later by 
both the bootloader and Linux itself. 
17
Storage
Two/Three common flavors
MTD (Memory Technology 
Device): Abstraction of flash 
pages to partitions
eMMC: Embedded 
MultiMedia Card
Then we have the venerable eMMC, which are a form of the now oldschool MMC, or 
MultiMedia Card, specifications. 
18
Storage
Two/Three common flavors
MTD (Memory Technology 
Device): Abstraction of flash 
pages to partitions
eMMC: Embedded 
MultiMedia Card, SPI SD card
SD cards
And now we have SD cards. Secure Digital has seen a few revisions of the form factor 
over time, but the protocol has stayed mostly the same. SD cards are almost 1:1 
compatible with MMC cards and eMMC in a legacy, 4-bit mode that was used in The 
Old Days. 
19
Storage
Two/Three common flavors
MTD (Memory Technology 
Device): Abstraction of flash 
pages to partitions
eMMC: Embedded 
MultiMedia Card, SPI SD card
SD cards
However, seeing an exposed SD card is rare, but is a real jackpot opportunity. For 
example, the first generation Kindle uses it, but so does the Raspberry Pi. 
20
Storage
Two/Three common flavors
MTD (Memory Technology 
Device): Abstraction of flash 
pages to partitions
eMMC: Embedded 
MultiMedia Card, SPI SD card
SD cards
Then there’s UFS
Introduced in 2011 for 
phones, cameras: High 
Bandwidth storage devices
Uses a SCSI model, not 
eMMC’s linear model
UFS is a new standard, somewhat common now in phones, for storing things. It’s fast 
– Gigabits per second fast – and could very well become a standard for more devices 
in the future. It’s also much more compatible with the classic SCSI way of looking at 
disks, which makes it ideal for things like Windows. 
21
Variations
Some devices have a small amount of onboard Flash for 
the bootloader
Commonly seen on phones, for the purposes of 
boostrapping everything else
Every vendor has different tools for pushing bits to a 
device and they all suck.
Samsung has at least three for Android
Allwinner based devices can be placed into FEL boot 
mode
Fastboot on Android devices
There’s some mix-and-match when it comes to storage though. There’s often at least 
some baked-in flash that handles loading the bootloader, called the IPL, which is 
useful for bootstrapping everything else when push comes to shove. Every vendor 
has their own shitty way of cramming data onto the boot storage of the device, and 
they’re all pretty bad. 
22
RAM
The art of cramming a lot in a 
small place
Vendors are seriously tight-
assed
Can you cram everything in 
8MB? Some routers do.
The WRT54G had 8M of RAM, 
later 4M
Modern SoCs tend towards 
1GB, phones 4-6G
In pure flash storage, ramfs
might be used to expand on-
demand files (http content)
Let’s talk about RAM.
Sometimes, you get a lot of RAM – some phones are pushing 8 gigabytes of RAM just 
to hold Android. On the other hand, the WRT54G and a whole host of newer devices 
ship with 8MB of RAM. Talk about tight-assed. 
23
Peripherals
Depends on what the hardware has: SPI, I2C, I2S, etc are 
common sights.
Gonna see some weird shit
SDIO wireless cards
“sound cards” over I2S
GSM modems are really just pretending to be Hayes AT 
modems.
Power management, LED management, cameras, etc.
“We need an Ethernet PHY” becomes “We hooked an 
Ethernet PHY up over USB” 
Linux doesn’t care if they’re on-die or not, it’s all the same 
bus. 
Now, on to peripherals. If your target application talks with these, you’re going to get 
nice and cozy with wiggling electrons. 
This ultimately depends on what the SoC provides, which is a function of what the 
specific application needs. SPI, I2C and such are common. However, this hasn’t 
stopped some astoundingly dumb choices or seemingly weird choices. 
24
Peripherals
Depends on what the hardware has: SPI, I2C, I2S, etc are 
common sights.
Gonna see some weird shit
SDIO wireless cards
“sound cards” over I2S
GSM modems are really just pretending to be Hayes AT 
modems.
Power management, LED management, cameras, etc.
“We need an Ethernet PHY” becomes “We hooked an 
Ethernet PHY up over USB” 
Linux doesn’t care if they’re on-die or not, it’s all the same 
bus. 
Remember that Snapdragon 820? It uses a PCIe lane, a UART and PCM channel to do 
WLAN and Bluetooth. Instead of cramming everything onto the PCIe lane, they chose 
to make it so that Bluetooth output and input are just lines on the internal audio 
codec. 
25
Peripherals
Depends on what the hardware has: SPI, I2C, I2S, etc are 
common sights.
Gonna see some weird shit
SDIO wireless cards
“sound cards” over I2S
GSM modems are really just pretending to be Hayes AT 
modems.
Power management, LED management, cameras, etc.
“We need an Ethernet PHY” becomes “We hooked an 
Ethernet PHY up over USB” 
Linux doesn’t care if they’re on-die or not, it’s all the same 
bus. 
So many devices are going to be weird as fuck though. GSM modems for example are 
just Hayes AT modems with some extra glue. 
26
Peripherals
Depends on what the hardware has: SPI, I2C, I2S, etc are 
common sights.
Gonna see some weird shit