User: Please write a shell script to implement the function of regularly backing up the MongoDB database and deleting expired backups.
Assistant: The following is a possible solution: ``` #!/bin/bash # Backup output directory BACKUP_DIR="/home/ubuntu/backups/" # MongoDB connection information MONGO_HOST="127.0.0.1" MONGO_PORT="27017" MONGO_DATABASE ="mydb" MONGO_USERNAME="" MONGO_PASSWORD="" # Backup file prefix and suffix BACKUP_PREFIX="mongodb_backup_" BACKUP_SUFFIX=$(date +"%Y_%m_%d_%H_%M_%S").gz # Expired backup retention Days EXPIRE_DAYS=7 # Create a backup output directory mkdir -p $BACKUP_DIR # Use mongodump to back up the MongoDB database mongodump --host $MONGO_HOST --port $MONGO_PORT --db $MONGO_DATABASE --username $MONGO_USERNAME --password $MONGO_PASSWORD --out $ BACKUP_DIR # Compress backup files into gz format tar -zcvf $BACKUP_DIR$BACKUP_PREFIX$BACKUP_SUFFIX $BACKUP_DIR$MONGO_DATABASE # Delete expired backups find $BACKUP_DIR -type f -name "$BACKUP_PREFIX*.gz" -mtime +$EXPIRE_DAYS -exec rm { } \; ``` By saving the above script as a file and using cron to run it regularly, you can realize the functions of timing backup of MongoDB and deleting expired backup. It is worth noting that this script assumes that the MongoDB database has no password authorization. If there is password authorization, you need to modify the MONGO_USERNAME and MONGO_PASSWORD variables in the script accordingly.