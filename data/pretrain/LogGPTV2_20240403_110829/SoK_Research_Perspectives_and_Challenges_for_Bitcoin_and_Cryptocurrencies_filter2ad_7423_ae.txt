capacity of the Visa network [53]. Once this limit is reached,
transactions will effectively need to use their fees to bid for
a scarce resource. This may raise the cost of using Bitcoin,
potentially slowing adoption, yet increasing the revenue for
miners. It may also lead users to rely on intermediaries
who aggregate and settle transactions off-chain. The limit is
artiﬁcial and the network’s bandwidth could likely sustain
114114
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:08:10 UTC from IEEE Xplore.  Restrictions apply. 
an increase; on the other hand, increased transaction volume
may exclude some participants who are bandwidth-limited.
Several altcoins have raised this limit in their speciﬁcation,
though to our knowledge none has come close to actually
utilizing this capacity so it remains unknown how it would
affect operation of the system.
Monetary Policy. Bitcoin’s consensus protocol effectively
mandates a monetary policy through the rate at which
new currency is minted and the schedule by which this
rate changes. By mandating a capped amount of currency,
Bitcoin effectively has a deﬂationary monetary policy which
has caused multiple economists to predict the system will
eventually be destabilized by a deﬂationary spiral in which
nobody is willing to spend bitcoins as hoarding them is
considered more proﬁtable [52], [65]. Issuance of coins is
one of the most widely varied parameters: for example,
in Dogecoin inﬂation will continue indeﬁnitely but at a
harmonically-diminishing rate while in Freicoin [116], the
inﬂation rate stays constant forever.
B. Alternative computational puzzles
Miller et al.
[85] present a formalism for Bitcoin-
compatible proof-of-work schemes called scratch-off puz-
zles, which essentially must be decomposable into individual
attempts. This property is often referred to as the puzzle
being “progress-free.” This guarantees that the creator of
each block is chosen by a weighted random sample of
computational power, even small participants are able to
receive (proportional) rewards for their contribution, and the
time between consecutive puzzle solutions is sufﬁciently
large that puzzle solutions propagate. Progress-freeness is
necessary but not sufﬁcient for the resulting consensus
protocol to achieve fairness. Bitcoin’s SHA-256 puzzle is
progress-free, but many other constructions are possible.
ASIC-resistant puzzles. While Bitcoin mining was origi-
nally performed using general-purpose processors, the com-
petitive nature of mining has led to a steady movement
towards more powerful and energy-efﬁcient customized
hardware. Today, ASICs account for most of Bitcoin’s
computational power. Taylor provides an excellent survey of
the technical challenges in computing SHA-256 efﬁciently
at scale and estimates that today’s ASICs are already within
an order of magnitude of theoretical efﬁciency limits [115].
This is often perceived negatively as it moves Bitcoin
mining away from its core democratic value (i.e., “one-
CPU-one-vote” [90]) since most participants in the system
do not own ASICs and hence perform no mining at all.
Many proposals have been made for ASIC-resistant mining
puzzles. Ideally, an ASIC-resistant puzzle could be effec-
tively solved using commodity hardware, with only minor
performance gains for customized hardware. The primary
approach taken so far has been to design “memory-hard”
puzzles which are designed to require efﬁcient access to a
large memory. The most popular memory-hard puzzle so far
(used in Litecoin and Dogecoin, among others) has been the
scrypt hash function [96] originally designed for cracking-
resistant password hashing. Until 2014 it was unknown if
it is possible to design a puzzle which is memory-hard to
compute but memory-easy to verify. Tromp’s cuckoo-cycle
puzzle [117] appears to answer this question afﬁrmatively.
It remains an important open problem if ASIC-resistance
is possible.17 ASICs that mine scrypt, for example, have
already been released in the market and offer performance
improvements comparable to SHA-256 ASICs. It is also not
clear that ASIC-resistance is desirable. ASICs mean that bot-
nets which steal cycles from commodity equipment are no
longer competitive against modern mining rigs [57]. Large
miners who are dependent on future Bitcoin-denominated
mining rewards to recoup their investment in special-purpose
ASICs with no other value [23] may also have stronger
disincentives to attack, as discussed in Section III-B2.
Useful puzzles. Achieving consensus through compu-
tational puzzles appears to be wasteful both in terms of
the energy consumed in computation and the energy and
resources used to manufacture mining equipment. If it is
possible to obtain the same level of security while utilizing
the work for some additional purpose, then some of this
waste can be recovered. Becker et al. [14] also posit that
Bitcoin might eventually be dominated by real-world entities
with control of the world’s energy supplies.
A common suggestion is to use a search function with
applications to scientiﬁc research, such as the popular Fold-
ing@Home [67] project. A challenge for useful puzzles is
that they must be automatically generated and veriﬁed with
no trusted parties, otherwise this party could choose puzzles
on which they already had a head start. Kroll et al. [64]
further argue that any useful puzzle must produce a pure
public good, or else it might increase the amount mining by
the amount it recovers, canceling out any recycling effect.
Primecoin [62] introduced the ﬁrst useful puzzle in a
successful altcoin. Its puzzle requires ﬁnding sequences of
large prime numbers of mathematical interest and which
may be used as parameters for cryptographic protocols.
Miller et al. [83] proposed a puzzle incorporating proof-
of-retrievability, so that mining requires storing a portion of
a large public data set. In particular, if the public data set is
of use to the Bitcoin network itself (e.g., the blockchain
history),
incentives to
contribute resources to the network.
this approach provides additional
Nonoutsourceable puzzles. The growth of large mining
pools [78] and their potential to facilitate collusion and
cartel formation has motivated the design of puzzles which
cannot be easily outsourced. Members of a pool do not
inherently trust each other; instead, these coalitions succeed
because members can easily prove that they are performing
17This problem has applications in other applications including password
hashing and password-based encryption, towards which the current Pass-
word Hashing Competition is attempting to identify a new standard.
115115
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:08:10 UTC from IEEE Xplore.  Restrictions apply. 
mining work that, if successful, would pay the reward to
the pool manager. Miller et al. [85] as well as Sirer and
Eyal [111] have proposed “nonoutsourceable” puzzles that
ensure whoever performs the mining work can claim the
reward for themselves when a block is found, thus thwarting
pools’ enforcement mechanisms and making the formation
of large pools between anonymous participants unlikely.
schemes are inherently infeasible. The central argument
– deemed the nothing-at-stake problem – is that virtual
mining is susceptible to costless simulation attacks; it costs
nothing to construct an alternate view of history in which
the allocation of currency evolves differently. Providing a
rigorous argument for or against stability of virtual mining
remains an open problem.
C. Virtual Mining and Proof-of-Stake
D. Designated Authorities.
At a high level, proof-of-work puzzles exist to require
expenditure of resources to perform mining. Instead of
having participants “mine” by exchanging their wealth for
computational resources (which are then exchanged for
mining rewards), it may be possible to simply have them
exchange wealth directly for the ability to choose blocks.
Rather than advancing the global history by a random
sample of participants weighted by computational power,
the random sample is weighted by the current allocation of
wealth. We can call this approach virtual mining. It is also
sometimes called “proof-of-stake” [98].
Virtual mining offers two main beneﬁts: ﬁrst,
it may
be more difﬁcult for an attacker to acquire a sufﬁciently
large amount of digital currency than to acquire sufﬁciently
powerful computing equipment. Second, by avoiding the
consumption of real resources (i.e., compute cycles), no
real-world resources are wasted. There have been several
variations of virtual mining proposed to date, which vary
mainly on the criteria by which possession of a quantity of
currency makes one eligible to choose the next block:
• Proof-of-coin-age. Peercoin [63] proposed mining by
demonstrating possession of a quantity of currency by
posting a transaction (potentially to oneself, in which
case the coins are not lost). Each quantity of currency
is weighted by its “coin-age”, the time since the coins
were last moved.
• Proof-of-deposit. In Tendermint [66], participation in
mining requires depositing coins in a time-locked bond
account, during which they cannot be moved.
• Proof-of-burn. Stewart [113] proposed mining by de-
stroying coins (sending them to an unspendable address).
• Proof-of-activity. Bentov et al [20] proposed having every
coin owner implicitly entered into a mining lottery by
default; periodically, random values from a beacon (e.g.,
generated from transactions occurring on the network) are
used to select randomly among all the coins in the system;
the current owner of the winning coin must respond with
a signed message within some time interval.
There has yet
to be any formalization of the model
assumptions that may allow virtual mining systems to
achieve security, or to compare virtual mining systems to
computational puzzles in a common setting. Poelstra [97]
presents a survey of the folklore arguments suggesting
that consuming external resources (i.e., burning energy) is
necessary for blockchain security and hence virtual mining
Although Bitcoin’s decentralized nature has proved an
effective selling point and is a ﬁercely-defended principle
among many in the community, consensus would be dras-
tically simpler if we could rely on a (small) number of
designated authorities to receive, sequentially order, and sign
transactions. This would make stability assumptions much
easier to reason about and remove concerns about wasteful
computation all at once. Laurie [69] ﬁrst proposed using
a designated list of authorities and a standard Byzantine
agreement protocol.
Similar to the argument that large Bitcoin miners are
not incentivized to attack due to their stake in the future
exchange rate, if the authorities earn a small income by
behaving honestly they would have no incentive to mis-
behave. Similar options are available for allocating new
funds as exist for proof-of-stake solutions (Laurie’s original
proposal [69] suggested a lottery among the authorities).
Trust in these authorities might further be limited by using
a mutually untrusted set of authorities [69], using social
networks to choose which authorities to trust [108] or
empowering coin owners to choose their trusted authorities
every time they spend coins [24]. Ripple [108] is one of the
few altcoins deployed with this model; however, its stability
argument remains essentially unproven.
VII. ANONYMITY & PRIVACY
Bitcoin provides a limited form of unlinkability: users
may trivially create new pseudonyms (addresses) at any
time. This was argued in the original speciﬁcation to provide
strong privacy [90], however it quickly became clear that
due to the public nature of the blockchain it is sometimes
possible to trace the ﬂow of money between pseudonyms
and conclude that they are likely controlled by the same
individual. [56] In this section we discuss threats to privacy
for Bitcoin users and proposed privacy-enhancing designs.
A. Deanonymization
The actual
level of unlinkability depends heavily on
implementation details that we term idioms of use, following
[80]. For example, merchants that generate a fresh payment
address for each sale ensure that received payments are not
automatically linkable on the blockchain. By contrast, the
customer may need to assemble the payment amount from
multiple addresses she owns,18 linking these addresses (and
18An alternative payment approach is to use multiple distinct merchant
addresses to avoid merges [54], but this is not yet standardized or adopted.
116116
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:08:10 UTC from IEEE Xplore.  Restrictions apply. 
their accompanying transactional history) together on the
blockchain, given that different users rarely contribute inputs
to a single, joint transaction.19 Other idioms such as “every
non-change output is controlled by a single entity” [4] and
“an address is used at most once as change” [80] can also be
utilized by an adversary to link together different addresses
controlled by the same entity.
Linking can be applied transitively to yield clusters of
addresses; this is an instance of transaction graph analysis.
A major challenge for the adversary is that these idioms are
fragile: they may yield false positives and lose accuracy over
time as implementations evolve. New linking techniques
may also arrive. For example, multi-signature addresses have
an unintended negative effect on privacy since the multi-sig
structure in a change address can be matched to the sending
address even if the keys involved change [50].
is easy to learn at
To de-anonymize, the adversary must take the further
step of linking address clusters to real-world identities.
Meiklejohn et al. [80] were successful at identifying clusters
belonging to online wallets, merchants, and other service
providers since it
least one address
associated with such entities by interacting with them. As
for identifying regular users, the authors suggest that this
may be easy for authorities with subpoena power since
most ﬂows pass through these centralized service providers
(who typically require customer identity and keep records).
Without such access, however,
the adversary is limited
precisely due to the centrality of ﬂows—online wallets and
other such services mix users’ coins together.
Network de-anonymization. The other major target of
de-anonymization efforts is the peer-to-peer network. Nodes
leak their IP address when broadcasting transactions. Us-
ing an anonymity network is therefore crucial for privacy.
However, Biryukov et al. [21] point out a DoS attack to
disconnect Tor exit nodes from the Bitcoin network. It
remains to be seen if Bitcoin’s P2P layer will evolve to
better utilize Tor or if a dedicated anonymity network will
be developed. Finally, current SPV implementations provide
little anonymity due to the difﬁculty of privately retrieving
the list of transactions that the client is interested in [49].
B. Proposals for improving anonymity
There are three main classes of anonymity proposals.
A comparison is provided in Table VII-A with respect to
ﬁve security and deployment properties (with (cid:2) meaning a
scheme has a property and (cid:3)(cid:4) indicating it partially does).
Peer-to-peer. In P2P mixing protocols, a set of Bit-
coin holders jointly create a series of transactions which
(privately) permute ownership of their coins, making each
participant anonymous within this set. This process may be
repeated between different users to grow the anonymity set.
19 One exception is CoinJoin in Section VII-B, which explicitly uses
multi-input transactions to increase anonymity.
U nlinkability
Bitcoin-co m patible
R esistance
R esistance
Transactions
D oS
T heft
#
Internal
Proposal
CoinJoin [79]
Shufﬂe Net [35]
Fair Exchange [13]
CoinShufﬂe [104]
Mixcoin [26]
Blindcoin [118]
CryptoNote [119]
Zerocoin [81]
Zerocash [16]
Class