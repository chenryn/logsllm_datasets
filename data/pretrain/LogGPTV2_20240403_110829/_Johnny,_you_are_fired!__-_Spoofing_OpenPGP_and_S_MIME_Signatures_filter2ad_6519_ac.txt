### 4. PGP and S/MIME Signature Verification Vulnerabilities

#### 4.1 Introduction
Phil Zimmermann, the creator of PGP, wrote a note to PGP users regarding the importance of secure email practices. This document highlights several vulnerabilities in PGP and S/MIME signature verification, which can be exploited to forge signatures and deceive recipients.

#### 4.2 Signature Verification Issues

**4.2.1 From Header Manipulation**
- **Display Name and Email Address (Figure 7a)**
  - An attacker can set the display name to match the expected sender (e.g., "Alice") while using their own email address.
  - Example: `From: Alice <eve@example.com>`
- **Display Name as Email Address (Figure 7b)**
  - The display name can be set to an email address, making it appear as if the email is from a trusted source.
  - Example: `From: PI:EMAIL <eve@example.com>`
- **Multiple FROM Headers (Figure 7c)**
  - Multiple `FROM` headers can confuse email clients, leading to potential signature verification bypasses.
  - Example:
    ```
    From: PI:EMAIL <alice@example.com>
    From: PI:EMAIL <eve@example.com>
    ```
- **SENDER and FROM Headers (Figure 7d)**
  - The presence of both `SENDER` and `FROM` headers can lead to discrepancies in how the email client and plugin handle the sender's identity.
  - Example:
    ```
    Sender: PI:EMAIL <eve@example.com>
    From: PI:EMAIL <alice@example.com>
    ```

**4.2.2 Display Name Shown as Signer (I2)**
- **UI Display Options:**
  - **Option 1:** Explicitly display the signer's identity in the UI for user verification.
  - **Option 2:** Automatically check if the signer's email matches the sender's address and show a warning if they do not match.
- **Vulnerability:**
  - RFC 2632 mandates that the `From` or `Sender` header must match the signer's certificate. However, RFC 5322 allows additional display names, which can be exploited.
  - Example: Setting the display name to "Alice" for Eve's email address.

**4.2.3 From/Sender Header Confusion (I3)**
- **Multiple FROM Fields:**
  - Email clients may handle multiple `FROM` fields differently, especially if PGP or S/MIME support is provided through plugins.
  - Example: A plugin might check all `FROM` headers, while the client only displays the first one.
- **Reply-to Header:**
  - Adding a `Reply-to` header can further obscure the true sender, as the recipient will reply to the specified address.
  - Example:
    ```
    From: PI:EMAIL <alice@example.com>
    Reply-to: PI:EMAIL <eve@example.com>
    ```

#### 4.3 UI Redressing Attacks (U1)
- **HTML and CSS Exploits:**
  - Attackers can use HTML and CSS to create visually indistinguishable security indicators, such as a "valid signature" icon.
  - Example: A spoofed email in Roundcube with a valid signature indicator (Figure 9a).
- **Code Example:**
  - The HTML code for the spoofed email (Figure 9b):
    ```html
    <p>Verified signature from Manager.</p>
    <p>Johnny, You are fired!</p>
    ```

#### 4.4 Evaluation of Email Clients
- **PGP Support:**
  - 15 out of 20 tested clients use GnuPG for signature verification.
  - 5 clients use OpenPGP.js, OpenKeychain, or proprietary solutions.
- **S/MIME Support:**
  - 22 clients were tested, with only 5 requiring third-party plugins.
- **Signature Spoofing Results:**
  - 10 PGP-capable clients and 7 S/MIME clients were vulnerable to perfect forgeries.
  - 4 additional PGP clients and 8 S/MIME clients were vulnerable to partial forgeries.

#### 4.5 CMS Attack Class (C1-C4)
- **eContent Confusion (C1):**
  - Thunderbird, Postbox, MailMate, and iOS Mail are vulnerable to eContent confusion, allowing perfect forgeries.
- **Multiple Signers (C2):**
  - Evolution shows a single "valid signature" UI element for multiple signers, leading to partial forgeries.
- **No Signers (C3):**
  - Outlook, Mutt, and MailDroid show conflicting UI elements, resulting in weak forgeries.
- **Trust Issues (C4):**
  - Trojit√° and Claws display conflicting UI elements on untrusted certificates, leading to partial forgeries.

#### 4.6 GPG API Attack Class (G1-G2)
- **Status Line Injection (G1):**
  - GnuPG's logging message for the embedded filename does not escape special characters, allowing injection of arbitrary status lines.
  - Example: Injecting a `GOODSIG` line into the log.
- **State Confusion and Regular Expressions (G2):**
  - Enigmail has flaws in handling multiple signatures, leading to metadata confusion and complete control over signature details.
  - Example: Crafting a malicious user ID to inject a spoofed `VALIDSIG` line.

#### 4.7 MIME Attack Class (M1-M4)
- **Hiding Signed Parts (M1-M3):**
  - Techniques include wrapping the signed part in HTML/CSS, referencing it as an "image," or hiding it as an "attachment."
- **Obfuscating Signed Parts (M4):**
  - Appending the signed part and using newlines to cover its existence, leading to weak forgeries.

#### 4.8 Conclusion
- **Evaluation Summary:**
  - The overall performance of PGP and S/MIME ecosystems in terms of signature trustworthiness is poor.
  - High success rates in signature spoofing attacks raise concerns about the practical security of email applications.
- **Mitigation:**
  - Implement robust checks for sender and signer identities.
  - Ensure consistent handling of multiple `FROM` and `SENDER` headers.
  - Enhance UI to clearly display and verify signature details.

This document provides a comprehensive overview of the vulnerabilities in PGP and S/MIME signature verification and offers recommendations for improving the security of email communications.