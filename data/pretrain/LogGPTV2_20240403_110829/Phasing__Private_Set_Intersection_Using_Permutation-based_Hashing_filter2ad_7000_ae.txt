2,175
1,290
63,857
39,785
38,727
14,149
—
—
2,878
3,004
—
168,397
11,870
2,681
20,184
17,133
21,030
8,681
301,512
178,865
—
—
218,378
81,534
—
846,510
Table 5: Run-time in ms for generic secure PSI protocols in the LAN and WAN setting on σ = 32-bit elements.
n = 28
n = 212
n = 216
229,120
297,852
5,238,784
3,946,776
Protocol
Number of AND gates
SCS [12]
Circuit-Phasing §5
Communication in MB for Yao’s garbled circuits [25] and GMW [11]
SCS [12]
Circuit-Phasing §5
Number of communication rounds for GMW [11]
SCS [12]
Circuit-Phasing §5
107,479,009
49,964,540
3,485
1,550
169
122
121
5
7
9
85
5
157
5
∗2,000,000,000
600,833,968
∗64,850
18,736
193
5
n = 220
Asymptotic
σ (3nlog2(n) +4n)
(σ − log2(n)− 2)(6(1 + ε)n lnn
2κσ (3nlog2(n) +4n)
2κ(σ − log2(n)− 2)(6(1 + ε)n lnn
(log2(σ ) +4) log2(2n) +4
log2(σ )
lnlnn + sn)
lnlnn + sn)
Table 6: Number of AND gates, concrete communication in MB, round complexity, and failure probability for generic
secure PSI protocols on σ = 32-bit elements. Numbers with ∗ are estimated.
n2 (§8.2.1) and differently sized sets n2 (cid:28) n1 (§8.2.2),
for set sizes ranging from 28 to 224 in the LAN setting
and from 28 to 220 in the WAN setting.
We compare OT-Phasing (§6) to the original OT-based
PSI protocol of [22], the naive hashing solution (§3.1),
the semi-honest server-aided protocol of [15] (§3.2), and
the Difﬁe-Hellmann (DH)-based protocol of [18] (§3.3)
using elliptic curves. Note that the naive hashing proto-
col and the server-aided protocol of [15] have different
security assumptions and cannot directly be compared to
the remaining protocols. We nevertheless included them
in our comparison to serve as a base-line on the efﬁciency
of PSI. For the protocol of [15], we run the server rou-
tine that computes the intersection between the sets on
the machine located at the US east coast (North Virginia)
and the server and client routine on the machine in Eu-
rope (Frankfurt). For the original OT-based PSI and OT-
Phasing, we give the run-time and communication for
three bit-lengths: short σ = 32 (e.g., for IPv4 addresses),
medium σ = 64 (e.g., for credit card numbers), and long
σ = 128 (for set intersection between arbitrary inputs).
Note that the OT-based PSI protocol of [22] and our
OT-Phasing protocol both evaluate public-key cryptogra-
phy during the base-OTs, which dominates the run-time
for small sets. However, these base-OTs only need to
be computed once and can be re-used over multiple ses-
sions. In the LAN setting, the average run-time for com-
puting the 256 base-OTs was 125 ms while in the WAN
setting the run-time was 245 ms. Nevertheless, our re-
sults all contain the time for the base-OTs to provide an
estimation of the total run-time.
8.2.1 Experiments with Equal Input Sizes
In the experiments for input sets of equal size n = n1 = n2
we set n ∈ {28,212,216,220,224} in the LAN setting and
n ∈ {28,212,216,220} in the WAN setting. Note that for
larger bit-lengths σ ≥ 64 and for n = 224 elements, the
memory needed for the OT-based PSI protocol of [22]
exceeded the available memory.
Run-Time (Tab. 7) As expected, the lowest run-time
for the equal set-size experiments is achieved by the (in-
secure) naive hashing protocol followed by the server-
aided protocol of [15], which has around twice the run-
time. In the LAN setting, however, for short bit-length
σ = 32, our OT-Phasing protocol nearly achieves the
same run-time as both of these solutions (which are in
a different security model). In particular, when comput-
ing the intersection for n = 224 elements, our OT-Phasing
protocol requires only 3.5 more time than the naive hash-
ing protocol and 2.5 more time than the server-aided pro-
tocol. In comparison, for the same parameters, the origi-
nal OT-based PSI protocol of [22] has a 68 times higher
run-time than the naive hashing protocol, and the DH-
based ECC protocol of [18] has a four orders of magni-
tude higher run-time compared to naive hashing.
While the run-time of our OT-Phasing protocol in-
creases with the bit-length of elements, for σ = 128-bit
its run-time is only 15 times higher than the naive hash-
ing protocol, and is still nearly two orders of magnitude
better than the DH-based ECC protocol.
Overall, in the LAN setting and for larger sets (e.g.,
n = 224), the run time of OT-Phasing is 20x better than
that of the original OT-based PSI protocol of [22], and
USENIX Association  
24th USENIX Security Symposium  527
13
Setting
Protocol
Naive Hashing(∗) §3.1
Server-Aided(∗) [15]
DH-based ECC [18]
Bit-length σ = 32-bit
OT PSI [22]
OT-Phasing §6
Bit-length σ = 64-bit
OT PSI [22]
OT-Phasing §6
Bit-length σ = 128-bit
OT PSI [22]
OT-Phasing §6
n = 28
1
1
231
n = 212
4
5
3,238
184
179
201
180
201
181
216
202
485
240
485
240
LAN
n = 216
48
78
51,380
3,681
437
7,302
865
8,478
915
n = 220
712
1,250
818,318
62,048
4,260
125,697
10,128
155,051
13,485
n = 224
13,665
20,053
13,065,904
929,685
46,631
—
137,036
—
204,593
n = 28
97
198
628
957
912
977
1,010
980
1,010
WAN
n = 216
558
2,024
161,850
n = 212
111
548
10,158
1,820
1,590
1,873
1,780
1,879
1,780
9,556
3,065
18,998
5,009
21,273
5,536
n = 220
3,538
7,737
2,584,212
157,332
14,567
315,115
29,387
392,265
37,422
Table 7: Run-time in ms for protocols with n = n1 = n2 elements. (Protocols with (∗) are in a different security model.)
Protocol
Naive Hashing(∗) §3.1
Server-Aided(∗) [15]
DH-based ECC [18]
Bit-length σ = 32-bit
OT PSI [22]
OT-Phasing §6
Bit-length σ = 64-bit
OT PSI [22]
OT-Phasing §6
Bit-length σ = 128-bit
OT PSI [22]
OT-Phasing §6
n = 28
0.01
0.01
0.02
n = 212
0.03
0.16
0.28
n = 216
0.56
2.5
4.56
n = 220
10.0
40.0
74.0
n = 224
176.0
640.0
1,200.0
Asymptotic [bit]
n1(cid:31)
(n1 + n2 +|X ∩Y|)κ
(n1 + n2)ϕ + n1(cid:31)
0.09
0.06
0.14
0.09
0.14
0.09
1.39
0.73
2.59
1.34
2.59
1.34
22.58
8.74
41.78
18.34
46.58
20.74
367.20
136.8
5,971.20
1,494.4
674.4
290.4
828.0
367.2
10,886.4
3,952.0
14,572.8
5,795.2
0.6n2σκ + 6n1(cid:31)
σ−(cid:26)log2(1.2n2)(cid:25)
(cid:24)) + (3 + s)n1(cid:31)
2.4n2κ((cid:28)
8
8
0.6n2κ ∗ min((cid:31),σ ) +6n 1(cid:31)
min((cid:31),σ )−log2(n2)
(cid:24)) + (3 + s)n1(cid:31)
2.4n2κ((cid:28)
0.6n2(cid:31)κ + 6n1(cid:31)
2.4n2κ((cid:28) (cid:31)−log2(n2)
8
(cid:24)) + (3 + s)n1(cid:31)
Table 8: Communication in MB for PSI protocols with n = n1 = n2 elements. (cid:31) = λ + log2(n1) +log 2(n2). Assuming
intersection of size 1/2· n for TTP-based protocol. (Protocols with (∗) are in a different security model.)
60-278x better than that of the DH-ECC protocol of [18].
When switching to the WAN setting, the run-times of
the protocols are all increased by a factor of 2-6. Note
that the faster protocols suffer from a greater perfor-
mance loss (factors of 5 and 6 for 220 elements, for the
naive hashing protocol and server-aided protocol) than
the slower protocols (factor 3 for the DH-based and our
OT-Phasing protocol and 2.5 for the OT-based PSI pro-
tocol of [22]). This difference can be explained by the
greater impact of the high latency of 97 ms on the run-
time of the protocols. The relative performance among
the protocols remains similar to the LAN setting.
permutation-based hashing. This is quite surprising, as
protocols that use public-key cryptography, in particular
elliptic curves, were believed to have much lower com-
munication complexity than protocols based on other
cryptographic techniques.
In comparison to the original OT-based PSI protocol
of [22], OT-Phasing reduces the communication for all
combinations of elements and bit-lengths by factor 2.5 -
4. We also observe that OT-Phasing reduces the impact
when performing PSI on elements of longer bit-length.
In fact, it even has a lower communication for σ = 128