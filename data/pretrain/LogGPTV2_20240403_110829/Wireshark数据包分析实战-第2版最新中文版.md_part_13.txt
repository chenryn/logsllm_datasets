## Page 129
01711286142gi9nS=14
Ether
optfons:（12 bytes）
windon
ieader.
112
nce number:
器的。
size1
UAE
oxcfeb[validation disabTed]
除了IP地址之外，源端口和目的端口也同样有所改变。
IANA）的通用端口列表编写的。
8192
端口
用建立起的端口进行通信。
(reTative sequence number)
图6-18在TCP头中可以找到源端口和目标端口
41.0
212
0
(212.58.226.142)
01u10535
---
## Page 130
6.3.3
options:
国checks
gs：
注
[sEQ/AcK analysis]
window s1ze:5840
Header 1ength: 32 bytes
AcknowTed
TCP的三次握手
包。在这个过程完成之后，双方设备应该已经具有了开始正常通信所需的信息。
底层协议头之外不包含任何数据：
备（主机A）向目标（主机B）发送了一个TCP数据包。这个初始数据包除了
望能达到以下不同的目的。
端口列表，可以访问http://www.iana.org/assignments/port-numbers/
且最终可以通过端口来识别使用它们的服务和设备。如果希望查阅详细的通用
(12bytes)
C
保证源主机确定目的主机在线，并且可以进行通信
所有基于TCP的通信都需要以两台主机的握手开始。这个握手过程主要希
允许源主机向接收者发送它的起始序列号，使得两台主机可以将数据包流
让源主机检查它是否正在监听试图去连接的端口。
随着这本书的深入，你将会知道更多与通用协议和端口相关联的端口
保持有序。
[validation dfsabled]
ACKO
s1c-systemlog （2826)
rC
图6-19在反向通信中，源端口和目的端口进行了互换
3258.275.5142
这个数据包的TCP头设置了SYN标志，井
EnE
Win
540
第6章通用底层网络协议113
M503
(00:21:63b7d:4）
WS=7
---
## Page 131
注
114
SYN标志的TCP数据包，我们将会简称其为SYN包
将简便，引入了一个特性，可以将TCP数据包的序列号替换为相对值。但在这
用的数据包会被称为SYN包、SYN/ACK包和ACK包
Preferences，展开 Protocols 并选择TCP，然后取消勾选 Relative Sequence
里，我们将这个功能关闭，以便于能看到实际的序列号值。选择Edit
可以看到这里传输的序列号是36911279240。
TCP数据包在称呼上通常会被其所设置的标志所代表。比如，对于设置了
打开tep_handshake.pcap，可以更实际地看到这个过程。Wireshark为了分析
ndo scala2 (itiply ty4)
3856125212
主机A
[va1dar.1on ciaa]
Not.3et
图6-20TCP三次握手
SYN/ACK
图6-21初始SYN数据包
SYN
ACK
主机B
所以TCP握手过程中使
---
## Page 132
为这个域是用来表示主机所期望得到的下一个序列号的值。
个确认号（2691127925）。这个确认号比之前的那个数据包序列号大1，是因
所示）。这个数据包也包含着这台主机的初始序列号（233779340）0，以及一
36911279250
这个数据包正如所期望的那样，包含着之前数据包确认号域所定义的序列号
1
握手中第二个数据包是从212.58.226.142发出的SYN/ACK响应（如图6-22
最后的数据包是从172.16.16.128（如图6-23所示）发出的ACK数据包。
syate（ag
atitfon
SAT
Rctd（O）et
图6-23最后的ACK包
图6-22SYN/ACK响应
第6章通用底层网络协议115
---
## Page 133
3.4TCP终止
列的开始时，SYN、SYN/ACK、ACK的序列是一个很好的标志。
数据包，告诉主机B通信的完成。主机B以一个ACK数据包响应，并传输自
并且用一个FIN标志来表明连接的终结。
个过程如图6-24所示。
己的FIN/ACK数据包。主机A响应一个ACK数据包，然后结束通信过程。这
在一个终止序列中，主机A通过发送一个设置了FIN和ACK标志的TCP
有着FIN和ACK标志的数据包O来开始终止过程。
主机A
图6-25FIN/ACK包作为终止过程的开始
St
图6-24TCP终止过程
FIN/ACK
FIN/ACK
ACK
ACK
主机B
---
## Page 134
6.3.5TCP重置
TI
Ether
window
连接经常会突然断掉。举例来说，这可能由于一个潜在的攻击者正在进行端口
结束，如果想要再次开始通信就必须完成新的TCP握手。
67.228.110.120发送了最终的ACK之后结束。这时，这两个设备的通信便已经
的TCP数据包。RST标志用来指出连接被异常中止或拒绝连接请求。
扫描，或者仅仅是主机配置错误。在这些情况下，就需要使用设置了RST标志
应来确认第一个数据包的接收，然后发送了一个FIN/ACK数据包。整个过程在
和ACK标志外，没有任何其他的东西，之后也并没有额外的通信。
个数据包的TCP头中这个连接尝试突然终止的情况。RST数据包除了包含RST
听80端口的连接。为了响应这个连接请求，192.168.100.1向192.168.100.138
因为那是一个思科路由器，并且没有配置Web接口，也就是说，并没有服务监
的80端口进行通信。这个主机并不知道192.168.100.1并没有在监听80端口，
发送了一个数据包，告诉它其对80端口的通信无效。图6-26中展示了在第二
子。这个文件中的第一个数据包发自192.168.100.138，其尝试与192.168.100.1
SES
文件tcp_refuseconnection.pcap给出了一个包含有RST数据包网络流量的例
在理想情况中，每一个连接都会以TCP终止来正常地结束。但在现实中，
在这个数据包被发出去之后，172.16.16.128使用了一个ACK数据包进行响
nber:951057940
图6-26RST和ACK标志代表着通信的结束
ent:set
第6章通用底层网络协议117
---
## Page 135
6.4
6.4.1UDP头
用户数据报协议
终止通信。
传输，那么UDP主要是为了提供高速的传输。出于这个原因，UDP是一种尽力
的另外一种第4层协议。如果说TCP是为了满足带有内在错误检测的可靠数据
机之间的连接，也不会像TCP那样存在握手和终止过程。
服务，通常会被称为无连接协议。
ICMP的一些功能来保证连接更可靠一些。举例来说，应用层协议DNS和DHCP
正是如此，但依赖于UDP 的协议通常都会有其内置的可靠性服务，或者使用
但是它们自己进行错误检查以及重传计时。
需要高度依赖数据包在网络上传输的速度，其
的域
无连接协议意味着不可靠服务，这将使得UDP流量一点都不稳定。事实上
所示）
目标端口：数据包将要被传输到的端口。
源端口：
校验和：用来确保UDP头和数据到达时的完整性。
数据包长度：数据包的字节长度。
偏移位
32
用来传输数据包的端口。
数据包长度
源端口
0~15
图6-27UDP头
用户数据板协议
一个无连接协议并不会正式地建立和结束主
其使用UDP作为它们的传输层协议，
目的端口
校验和
16~31
---
## Page 136
6.5.1
6.5
BUsur
Domain Name system (query)
checksum:
Length:39
互联网控制消息协议
ICMP头
而改变。如图6-29所示，ICMP头包含了以下几个域。
在RFC792中定义。
用性的信息。大多数网络检修技巧和工具都是基于常用的ICMP消息类型。ICMP
必要的时候都需要采取特殊的步骤，以保证可靠的传输。
协议族中的一
ox6d5a[validation disabled]
ICMP是IP的一部分并依赖IP来传递消息。ICMP头相对较小并根据用途
互联网控制消息协议
需要记住的是，UDP并不关心传输的可靠性，所以任何使用UDP的应用在
代码（Code）
偏移位
D
（1060
个效用协议
类型
图6-28UDP数据包的内容非常简单
ICMP消息基于RFC规范的子类型。
72
0~15
（Internet Control MessageProtocol,ICMP）是TCP/IP
图6-29ICMP头
，负责提供在TCP/IP网络上设备、服务以及路由器可
代码
909
控制消息协议
可变域
...-bo-
d.
350
校验和
16-~31
第6章通用底层网络协议119
192.168.100.1(192.168.100.1)
---
## Page 137
6.5.2
6.5.3
ICMP类型和消息
注
120
Echo请求与响应
例来说，Type域的值为3时意味着“目标不可达”。
义的用途。
你就可以知道这应该是你试图进行通信的端口的问题。
Wireshark数据包分析实战（第2版）
assignments/iemp-parameters.
可变域（Variable）：依赖于类型和代码域的部分。
大多数信息技术专家都会对ping很熟悉。
正如刚才所说，ICMP数据包的结构取决于它由Type和Code域中的值所定
你可以将ICMP的类型域作为数据包的分类，
日
如果通信失败，你会看到一条告诉你原因的信息。
如果想要浏览所有可用的ICMP类型和代码，
ping172.16.16.1
wiinateroundpixi
LLLE
122-16-16
图6-30使用ping命令测试可连接性
可以访问http://www.iana.org
而Code域作为它的子类。举
但只有这个信息可能不足以
---
## Page 138
10.0000019.1100.1381921681001Mopingq
注
Datas
rence
(32bytes)
意味着这是一个echo请求（Wireshark会告诉你所显示的类型/代码究竟是什么意
码域判断ICMP数据包的类型。在这个例子中，数据包的类型是89，代码是00.
发送数据包O。当你展开这个数据包的ICMP区段时，你可以通过查看类型和代
中的数据包会告诉你在运行ping时都发生了什么。
可以和一台设备通信时，使用ping检测连接却收不到任何响应会让你很抓狂。
达，从而放弃进一步的行动。但这样查找问题时也变得困难起来一
样对于安全性是有帮助的，因为潜在的攻击者可能会使用ping来判断主机是否可
就可能具有欺骗性了，现在很多的防火墙都限制了设备去响应ICMP数据包，这
确定设备是否可连接，如图6-31所示。
Ox4sc[correct]
第一个数据包（如图6-32所示）显示了主机192.168.100.138在给192.168.100.1
mber:13317（0x3400)
0x0500
尽管ping对于IT业必不可少，但当部署了基于主机的防火墙时，它的结果
基本上来说，ping命令每次向一个设备发送一个数据包，并等待回复，以
图6-32ICMPecho请求数据包
图6-31ping命今只包含两步
Echo/Ping 请求
Echo/Ping响应
第6章通用底层网络协议121
7（00:12:80:4b:c0
一当你知道你
---
## Page 139
2000776192168100119216100138Echpng）p
6.5.4
122Wireshark数据包分析实战（第2版）
Ethernet II,
ntecnet
Checksum:Dxac5c [correct]
串随机文本字符。
工具用于发送ICMPecho请求数据包
二个数据包被192.168.100.138成功接收到之后，ping就会报告成功（如图6-34所示）
配。这个响应数据包中有着和初始请求中传输的32位字符串一样的内容0。在这第
序列号与第一个的相匹配，我们就知道这个echo响应与之前数据包的echo请求匹
ICMP区段类型是0O，代码是0，表示这是一个echo响应。由于第二个数据包的
路由跟踪
时，强制将数据包分片。这在你检测分片较小的网络时会用到。
Control
这个序列的第二个数据包是对我们请求的响应（如图6-33所示）。这个数据包的
个域中放置一些数据位作为反向连接的手段
可能会用这段填充的内容来推测设备所使用的操作系统。
6162636465666768696A686C606E6F707172737475767761...
ber:13312（0x3400)
trs.74bytes
192.166.100.1(192.165.100.1),D5t:192:168,100.138(192.165.100.138)
图6-33ICMPecho回复数据包
攻击者
---
## Page 140
Frame 1 (106 bytes on wire,106 bytes captured)
10.0000019168100.138421MPchong）q
BinEE
Data（64bytes）
Flags:0x0o
Sequerce number:14336 (0x3800)
checksum:oxbaff [correct]
Code:0
Protocol:
Identification:oxffs1 (65361)
Header
888