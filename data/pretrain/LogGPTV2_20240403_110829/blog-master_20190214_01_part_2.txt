13、连接认证加密  
14、加密KEY管理形式  
## 四、数据库版本推荐  
除非业务有特殊要求。选新不选旧(新版本建议发行2个小版本后使用)。  
例如当前PG最新版本为11，已发布两个小版本，推荐使用11最新小版本。  
## 五、数据库选型推荐  
### 1 老业务迁移  
#### 原来使用什么DB？ (PG, EDB PPAS, oracle, sybase, db2, ms sql)     
1、pg -> pg  
2、edb ppas -> ppas  
3、oracle -> pg (用户积极配合改动，并有倾向使用开源版)  
平安案例  
邮储案例  
中国人寿案例  
4、oracle -> ppas (用户期望少改动)  
中航信案例  
大量ZF，传统行业案例  
使用ADAM，大量成功去O案例。  
https://promotion.aliyun.com/ntms/act/ppasadam.html  
5、sybase, db2 -> pg  
sybase (铁老大案例)  
db2 (苏宁案例)  
6、ms sql -> pg  
(康恩贝案例)  
### 2 新业务  
#### 1、如果Oracle可以免费使用，用户选择Oracle的概率是多少？如果超过50%的概率选择Oracle，推荐到PG、POLARDB PG。  
#### 2、当前用户技术栈  
2\.1、Oracle -> PPAS、POLARDB PG  
使用ADAM，大量成功去O案例。  
https://promotion.aliyun.com/ntms/act/ppasadam.html  
2\.2、sybase, db2 -> pg  
2\.3、ms sql -> pg  
2\.4、pg -> pg  
2\.5、edb ppas -> ppas  
#### 3、业务复杂度  
3\.1、复杂业务（有较复杂SQL，较复杂业务逻辑） -> PG    
例如: 企业crm, erp, oa, 财务, 销售, 经营分析系统，GIS地理信息业务，等。  (此类场景典型PG客户：用友,sap,odoo)  
3\.2、简单业务 -> PG (同样完全可以胜任)    
#### 4、业务分类  
4\.1、纯AP  
100TB 以内数据，纯AP(T+1)：POLARDB PG。     
32TB 以内数据，纯AP(T+1)：PG 11。     
4\.2、实时分析：WHERE条件过滤后数据量亿级。  POLARDB PG。   PG 11。     
4\.3、TP  
PG, PPAS, POLARDB PG  
4\.4、混合场景（有TP，有AP）    
100TB以内数据量：  
POLARDB PG  
32TB 以内数据量：  
PG 11  
6TB 以内数据量：  
PG 10, PPAS 10  
产品AP能力主要包括：并行计算、GPU加速、JIT、向量计算、流计算、物化视图、丰富的分析函数、丰富的窗口查询函数、HASH JOIN、MERGE JOIN、丰富的内置函数、丰富的PLSQL语法。  
产品TP能力：单节点 百万级QPS  
4\.5、海量数据，大量为冷数据，不能删除，极少查询。  
pg, ppas, polardb pg，均支持OSS_FDW外部表，冷存储。查询对业务透明。  
#### 5、业务有SHARDING需求，但是不想改SQL适配sharding(sharding 带来的SQL使用限制，包括跨库事务，跨库查询，复杂SQL，维度表过大等问题)  
100TB以内数据量：  
POLARDB PG  
32TB 以内数据量：  
PG 11  
6TB 以内数据量：  
PG 10, PPAS 10  
#### 6、业务有多模需求，并且要求数据一致性，实时性  
如果不要求实时性，一致性，可以再考虑将数据同步到其他产品  
6\.1、全文检索、模糊查询（tsvector, tsquery, pg_trgm技术）  
6\.2、任意字段多维度组合实时查询（smlar, rum, gin, bitmap scan, varbitx, roaring bitmap等技术）  
例如：实时画像系统、营销系统。  
6\.3、文本相似查询（pg_trgm技术）  
6\.4、向量相似查询（cube技术）  
例如：相似推荐系统  
6\.5、图像相似查询（imgsmlr技术）  
6\.6、GIS地理信息业务（postgis, brin, gist技术）  
例如：天文、气象、地震、国土、测绘、车联网、物联网  
6\.7、时空轨迹、混合场景业务（ganos, postgis, brin, gist技术）  
例如：饿了么，点我达，打车，车联网，  
6\.8、时序类（timescaledb 技术）  
6\.9、流计算（pipelinedb 技术）  
6\.10、图式搜索（CTE 技术）  
例如：风控、族谱、社交、内容推荐、用户推荐等 业务。  
多模类业务，性能功能指标参考HTAP测试  
[《HTAP 用例测试，性能指标》](../201711/readme.md)  
![pic](20190214_01_pic_001.jpg)  
![pic](20190214_01_pic_002.jpg)  
![pic](20190214_01_pic_003.jpg)  
![pic](20190214_01_pic_004.jpg)  
![pic](20190214_01_pic_005.jpg)  
![pic](20190214_01_pic_006.jpg)  
![pic](20190214_01_pic_007.jpg)  
![pic](20190214_01_pic_008.jpg)  
![pic](20190214_01_pic_009.jpg)  
![pic](20190214_01_pic_010.jpg)  
![pic](20190214_01_pic_011.jpg)  
![pic](20190214_01_pic_012.jpg)  
![pic](20190214_01_pic_013.jpg)  
![pic](20190214_01_pic_014.jpg)  
![pic](20190214_01_pic_015.jpg)  
## 参考  
[《PostgreSQL 规格评估 - 微观、宏观、精准 多视角估算数据库性能(选型、做预算不求人)》](../201709/20170921_01.md)    
[《数据库选型之 - 大象十八摸 - 致 架构师、开发者》](../201702/20170209_01.md)    
[《数据库选型思考(PostgreSQL,MySQL,Oracle)》](../201702/20170208_03.md)    
[《HTAP 用例测试，性能指标》](../201711/readme.md)  
RDS PG PPAS 性能白皮书  
https://help.aliyun.com/document_detail/101470.html  
https://help.aliyun.com/document_detail/101100.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")