或 
adb install –r apk 包 
第二种方式会覆盖原来安装的软件，但是会保留数据。例如，为 Android 虚拟设备安装
一款游戏，其游戏名为“神庙逃亡”。该游戏程序包可以从安卓应用商店下载，其文件名为
smtwywb_1417500707868.apk。为了用户方便记忆该程序包，可以重命名。这里重命名为
temple-run.apk，并放在 Home 目录中。安装此游戏，执行命令如下所示： 
root@Kali:~ # adb install temple-run.apk  
1197 KB/s (26841898 bytes in 21.888s) 
pkg: /data/local/tmp/temple-run.apk 
Success 
从以上输出的信息中，可以看到安装包的大小是 26841898 bytes，耗时 21.888s，将该安
装包拷贝到 Android 设备/data/local/tmp 目录中，最后提示安装成功。安装成功后，效果如
图 1.60 所示。 
图 1.60  成功安装到 Android 设备上的应用 
注意：在使用 adb install 命令安装应用程序时，安装成功后可能会出现 rm failed for -f, No 
such file or directory 信息。这是因为在 Android 设备设置安装完程序后，自动删除其安装包。
在 Android 设备的命令行中，将会调用 rm 命令删除其软件包。但是在该 Android 设备中 rm
命令的-f 选项不可用，所以提示该信息，即无法删除安装包。 
在某些情况下，用户的主机可能连接了多个 Android 设备。但是，用户只想对其中一个
设备进行操作，这时候可以使用-s 选项来指定操作的设备，其语法格式如下： 
adb -s 设备名 命令 
例如，仅向 Android 模拟器“emulator-5554”安装“神庙逃亡”游戏程序，执行命令如
下所示： 
root@Kali:~ # adb -s emulator-5554 install temple-run.apk 
执行以上命令后，输入的结果和前面安装程序的数据信息类似。如果当前主机只连接一
Android 渗透测试入门教程（内部资料）——daxueba.net 版权所有 
·39· 
台 Android 设备的话，就不需要指定了，直接输入运行的命令即可。后面将以一台设备情况
为例，介绍 ADB 工具的使用。 
注意：有时候，可能因为程序的版本地、或者磁盘空间不足等问题，导致程序安装失败。
下面列出通常情况安装失败的一些错误提示，如图 1.61 所示。 
图 1.61  安装应用失败的各种错误提示 
以上就是安装应用程序失败常见的类型及出现这些问题的解释。 
1.6.4  卸载应用 
使用 ADB 命令，同样可以卸载 Android 设备上的应用程序。其语法格式如下所示： 
adb uninstall 软件包名 
或 
adb uninstall –k 软件包名 
注意：以上语法中所说的是“软件包名”，而非“应用名”，或者“软件名”。“软件
包名”可以看作是软件唯一的标识符。默认情况下，“软件包名”类似于一个反转的网址。
在 Android 设备中，程序包名以文件夹的形式保存在/data/data 目录中。如下所示: 
root@android:/ # cd /data/data/ 
root@android:/data/data # ls 
cn.etouch.ecalendar 
com.UCMobile.intl 
com.adobe.flashplayer 
com.adobe.reader 
com.android.apkinstaller 
com.android.backupconfirm 
com.android.browser 
com.android.calculator2 
com.android.certinstaller 
com.android.chrome 
com.android.contacts 
com.android.defcontainer 
com.android.deskclock 
com.android.email 
Android 渗透测试入门教程（内部资料）——daxueba.net 版权所有 
·40· 
com.android.exchange 
以上就是当前系统中的一些程序包名。注意，这里必须是 root 用户才可以查看（Android
设备必须获取到 root 权限），普通用户没有权限。 
例如，卸载 1.6.3 小节中安装的“神庙逃亡”程序。其中，该程序的包名为
com.imangi.templerun。所以，执行命令如下所示： 
root@Kali:~ # adb uninstall com.imangi.templerun 
Success 
从输出的信息中，可以看到提示信息为 Success，表示“神庙逃亡”程序卸载成功。此
时，到 Android 设备上查看，可以发现找不到该程序，如图 1.62 所示。 
图 1.62  应用程序已被卸载 
提示：用户也可以将程序包，即.apk 文件进行反编译。然后，在反编译后的源文件中查
看程序包名。关于反编译程序包的方法，将在下一章介绍。 
1.6.5  进入设备或者模拟器的 Shell 
进入 Android 设备的 Shell 命令如下所示： 
root@Kali:~# adb shell 
执行以上命令后，命令行提示符将被修改。如下所示： 
root@android:/ # 
可以看到提示符已经变化，这表示已进入到 Android 设备。根据命令行显示的提示符“#”，
可知当前登录的用户是 root。如果是普通用户登录的话，命令行提示符为“$”。此时，用
户可以在该终端，执行各种 Linux 命令。例如，查看当前目录中的内容，显示结果如下所示： 
root@android:/ # ls 
acct 
bcm4329_cybertan.hcd 
bcm4329_samsung.hcd 
bcm4329_usi.hcd 
cache 
charger 
config 
d 
data 
Android 渗透测试入门教程（内部资料）——daxueba.net 版权所有 
·41· 
default.prop 
dev 
etc 
init 
init.goldfish.rc 
init.rc 
init.rk30board.rc 
init.rk30board.usb.rc 
init.trace.rc 
以上输出的信息，显示了当前目录中所有的文件和文件夹。在 Linux 中，一些命令必须
是 root 权限才可执行。如果用户登录的 Android 设备是普通用户的话，可以使用 su 命令切
换到 root 用户。 
提示：用户也可以在 Kali Linux 命令行终端直接执行以上命令，其语法格式如下所示： 
adb shell 命令 
例如，直接执行 ls 命令，运行效果如下所示： 
root@Kali:~ # adb shell ls 
acct 
bcm4329_cybertan.hcd 
bcm4329_samsung.hcd 
bcm4329_usi.hcd 
cache 
charger 
config 
d 
data 
default.prop 
dev 
etc 
init 
init.goldfish.rc 
init.rc 
init.rk30board.rc 
init.rk30board.usb.rc 
init.trace.rc 
1.6.6  上传文件到设备 
将当前主机上的文件上传到 Android 设备，可以使用 adb push 命令来实现。其语法格式
如下所示： 
adb push 本地路径 设备路径 
例如，将 temple-run.apk 文件上传到 Android 设备。执行命令如下所示： 
root@Kali:~# adb push temple-run.apk /data/local/tmp 
787 KB/s (26841898 bytes in 33.297s) 
以上输出信息显示了包的大小，上传速度及时间。此时，用户可以使用 ls 命令查看
temple-run.apk 包是否上传成功。如下所示： 
root@Kali:~# adb shell ls /data/local/tmp 
AdobeReader_appchn.apk 
Vulnerable.apk 
WebQQ.apk 
Android 渗透测试入门教程（内部资料）——daxueba.net 版权所有 
·42· 
sqlite.apk 
tcpdump 
temple-run.apk 
vulnsqlite.apk 
从输出的信息中可以看到在/data/local/tmp 文件中，已经有 temple-run.apk 文件（加粗的
文件），这表明该文件上传成功。 
1.6.7  从设备上下载文件 
从 Android 设备上下载文件到计算机，可以使用 adb pull 命令来实现。其语法格式如下
所示： 
adb pull 设备路径 本地路径 
例如，从 Android 设备上下载 temple-run.apk 文件到当前主机的/data 目录中。执行命令
如下所示： 
root@Kali:~# adb pull /data/local/tmp/temple-run.apk /data 
791 KB/s (26841898 bytes in 33.112s) 
以上输出信息显示了下载文件的速度，及时间等。此时，用户可以切换到当前主机的
/data/目录中，查看下载的文件，如下所示： 
root@Kali:/data# ls 
temple-run.apk 
从输出信息中，可以看到 temple-run.apk 文件已成功下载。