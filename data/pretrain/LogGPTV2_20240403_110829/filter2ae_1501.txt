# 技术分享：如何分析恶意软件在系统中的执行情况

## 译文声明
本文为翻译文章，原文来源于[fireeye.com](https://www.fireeye.com/)。译文仅供参考，具体内容和含义请以原文为准。
- 译者：nstlBlueSky
- 预估稿费：200 RMB
- 投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

当你发现一个恶意可执行文件时，一个关键问题是：该文件是否已经执行？本文将探讨几种用于判断恶意软件是否已执行的方法。我们将重点讨论Windows系统上的静态或“死锁”取证，并介绍以下四个主要依据：
1. **Windows预读取**
2. **注册表**
3. **日志文件**
4. **文件信息**

### Windows预读取
Windows预读取是一个很好的起点，可以帮助你找到文件执行的证据。微软设计了Windows预读取功能，使得常用程序可以更快地打开。默认情况下，它会存储最近128个执行文件的信息，在`C:\Windows\Prefetch`目录下的预读取文件中。预读取文件的命名格式为“可执行文件名+文件路径哈希值+.pf”。预读取文件中包含进程首次和最后一次运行日期、文件路径、执行次数以及需要加载的文件等信息。例如，如果发现名为“DABEARS.EXE-12F3B52A.pf”的预读取文件，则表明该文件已被执行。需要注意的是，在Windows服务器上，默认情况下预读取功能是禁用的。

### 注册表
Windows注册表中包含大量有关系统中程序运行的信息。以下是几个主要的注册表项，可用于确定文件是否已执行：

#### 1. ShimCache
Microsoft创建了ShimCache（也称为AppCompatCache）来识别应用程序兼容性问题。缓存数据记录了文件路径、大小、最后修改时间和最后“执行”时间（具体取决于操作系统）。如果文件通过Windows的`CreateProcess`函数执行，系统会将其记录在ShimCache中。虽然ShimCache的存在不能完全证明文件已执行，但它确实显示了Windows与文件进行了交互。相关注册表键如下：
- `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatibility\AppCompatCache` (XP)
- `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache\AppCompatCache` (非XP)

更多关于ShimCache的信息，请参阅Andrew Davis的博客条目或Mandiant在SANS DFIR会议上的介绍。

#### 2. MUICache
当通过Windows资源管理器执行文件时，shell会在MUICache中创建一个条目。Windows使用MUICache来存储从PE版本信息检索到的应用程序名称。相关信息存储在以下注册表键中：
- `HKEY_CURRENT_USER\Software\Microsoft\Windows\ShellNoRoam\MUICache` (XP, 2000, 2003)
- `HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\Shell\MuiCache` (Vista, 7, 2008)

#### 3. UserAssist
UserAssist跟踪在Explorer.exe中打开的可执行文件和链接。UserAssist键记录文件的最后执行时间和执行次数：
- `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist`

UserAssist键下的内容对应于可执行文件名称和用ROT13加密的文件路径值。因此，在解码之前进行关键字搜索可能会错过这些键值内的证据。有许多工具可以解密注册表键值，包括RegRipper的userassist.pl插件。

### 日志文件
你可以分析多个日志文件来确定文件是否已执行。首先，检查Windows系统事件日志，因为它记录了服务启动情况。图1中的事件显示了一个管理员（SID = “-500”）启动了PSEXECSVC远程执行服务。

![图1：事件ID 7035 - 服务启动](图1.png)

服务启动时，通常会执行ImagePath中指定的文件或加载所需的服务DLL。例如，“Netman”服务在执行时使用合法文件“netman.dll”。但如果注册表中的ServiceDll包含后门路径（如“tabcteng.dll”），则“Netman”服务将执行“tabcteng.dll”。

因此，在服务启动时验证ImagePath文件和服务DLL是必要的。如果启用了审核流程跟踪，Windows安全事件日志中将包含大量有关执行进程的信息，可用于证明文件是否已执行。图2和图3显示了恶意文件及其关联进程ID、父进程ID和用户名，有助于进一步调查。

![图2：XP事件ID 592 – 进程创建](图2.png)

![图3：Vista EventID 4688 – 流程创建](图3.png)

在较新的Windows版本中，审核功能更加精细，并与组策略集成在一起。高级审核策略设置可以在图3中找到。

此外，基于主机的IPS或AV产品日志可能在文件运行或尝试对其他文件进行操作时记录相关信息。图4展示了来自McAfee Access Protection日志的示例事件。

![图4：McAfee Access Protection日志事件](图4.png)

Windows计划任务日志可以确认攻击者是否使用计划任务来执行恶意软件。计划任务记录在名为“SchedLgU.txt”的日志文件中，如图5所示。

![图5：计划任务日志中的事件](图5.png)

在Windows Vista及更高版本中，计划任务执行也记录在事件ID为200和201的“Microsoft-Windows-TaskScheduler/Operational”事件日志中。

![图6：事件ID 200和201 – 计划任务执行](图6.png)

最后，如果应用程序崩溃，Watson日志可能会记录运行的恶意任务，如图7所示。

![图7：在Dr. Watson Log中捕获的运行任务](图7.png)

### 文件信息
另一种确定文件是否已执行的方法是查找与该文件相关的任何其他输出文件。分析恶意文件时，观察其是否配置为创建数据。例如，如果你发现的恶意文件是键盘记录器，并且系统中存在相关的密钥记录文件，则攻击者可能已执行该文件。如果恶意软件配置为连接特定域名，浏览器历史记录可能已记录关联的域。表1展示了从相同后门在浏览器历史记录中捕获的两种通信机制的示例。

| 通信机制 | 域名 |
|----------|------|
| HTTP     | example.com |
| HTTPS    | secure.example.com |

要确定系统是否执行了恶意文件，请分析文件的功能，并查找磁盘上是否有生成的其他文件。恶意软件功能还可以帮助你评估攻击者的动机、最终目标，并可能揭示其他恶意文件。

尽管本文涵盖了我们用来检测文件执行的主要依据，但还有更多的注册表项和其他Windows文件可以提供恶意软件执行的证据，尤其是在Windows Vista及更高版本中。同样，在系统内存中发现的信息对于证明文件执行可能更有价值，并能提供具体的攻击者执行命令和访问的资源。因此，如果你在正在运行的系统上发现恶意可执行文件，请确保在执行其他操作之前保存内存快照。你可以使用Mandiant Redline™来读取和分析内存。