To prevent overﬁtting the model, we also examined the performance of
the LSTM model by reversing the training dataset with the testing dataset.
As shown in table 10, The model performs about the same before reversing
Figure 7: Eﬀect of Delay Attack on Model with Improved Metrics
the train-test dataset. Both the accuracy rate and the overall F1 score drops
around 1%, and the recall rate drops around 2.5%. It indicates that reversing
the train-test dataset made the model allowed more false negatives. Besides
the slight downgrade of the evaluation metrics, the overall performance of the
model stays excellent as the accuracy rate of 98.61% and overall F1 score of
98.66%. It indeed showed that the LSTM model is perfectly ﬁt for detecting
hidden Wi-Fi cameras, moreover, it is a uniformed classiﬁer that can predict
hidden cameras in diﬀerent environment settings.
To address the possibility of delay-viewing attack on the hidden Wi-Fi
camera, we further evaluate the performance of the LSTM model on delayed
dataset. We have evaluated the performance of the model on two diﬀerent
scenarios: delay viewing with 5 seconds and delay viewing with 30 seconds.
As shown in table 10, The LSTM model still performs well for both of the
delaying scenarios. Both of the accuracy rate and the overall F1 score stayed
between 97% and 98% while the error rate increased slightly by 2%. It has
shown that the LSTM model had the ability to counter delay-viewing attack
even with 30 seconds of delay.
Table 10: Performance of the LSTM models.
F1 score Accuracy Error Precision Recall
100.00
97.44
97.85
100.00
99.53
99.90
100.00
97.80
99.76
98.66
98.91
98.89
99.72
98.61
98.07
97.80
0.28
1.39
1.93
2.20
Classiﬁers
LSTM model
LSTM: Reversed train-test
LSTM: Delay 5 sec.
LSTM: Delay 30 sec.
6. Discussion
The results we obtained in this study demonstrate that there are 4 main
points of concern for determining how accurately one can detect hidden cam-
eras using the passive approaches described in this paper. These include the
changes in the physical world that can be observed by the devices, the ﬁ-
delity of the camera, the network transmission, and the background traﬃc
from other devices. In other words, to theoretically predict your results, you
need to answer the following questions: i) What is happening in the physical
world? ii) How is it being recorded? iii) How is it being transmitted? iv)
How is it diﬀerent from other transmissions?
6.1. Scene Change
Scene change describes the scene that the cameras are recording. To
demonstrate this point, consider two cameras that are facing each other with
a television in between them. The camera facing the front of the television
would record signiﬁcant change whereas the one facing the back would record
no change. The primary variables that can aﬀect detection are the relative
placement of the cameras which aﬀects the portion of overlap of the recorded
scene, and the magnitude of the movement in the overlap of the recorded
scene. The placement of the cameras aﬀect the detection since their location
aﬀects the number of pixels that are simultaneously altered due to a change
in the scene between shared between two recordings. The magnitude of the
movement in the scene aﬀects the detection since no movement or constant
movement will be easy to confuse with periodic network traﬃc that has a
similar transmission frequency to the I-Frame transmission frequency for the
codec or for near constant bitrate traﬃc, respectively.
6.2. Camera Fidelity
Camera ﬁdelity describes the quality of the recording made by the camera.
To demonstrate this point, consider an extreme case where the camera only
records a single pixel that is either black or white vs a camera with 1920x1080
resolution. The higher resolution camera would be able to pick up subtle
changes whereas the 1 pixel camera would not be able to do so. The primary
variables that can aﬀect detection are the resolution of the camera, the video
codec, and the optics of the camera. The resolution aﬀects the number of
pixels that a change in the scene aﬀects; normalization can mask this in
some cases, but not when a particular movement fails to register a change in
lower resolution cameras. The video codec and its associated parameters can
aﬀect how many pixels are reported as changed especially depending on the
compression technique. The optics of the camera can aﬀect how sensitive a
camera is to change and whether or not minor changes are detected.
6.3. Network Transmission
Network transmission describes how the data is disseminated by the cam-
era. To demonstrate this point, consider a camera that is streaming over
TCP and a camera that is streaming over UDP. Congestion in the network
could cause the TCP camera to back oﬀ and modify its transmission speed
whereas the UDP camera would transmit as fast as data was available, so the
exact same scene could appear on the network with diﬀerent bandwidth con-
sumption. The primary variables that can aﬀect detection are transmission
delays, diﬀering protocols, and the diﬀering parameters used even when the
protocols are the same. The delay can be due to processing delay because
of low-power computing hardware, a phenomenon we experienced in our ex-
periments, or due to customization by the attacker to try to evade detection.
As mentioned before, diﬀerent protocols for transmitting data can aﬀect the
timing and quantity of data transmitted. Furthermore, some protocols that
adapt to bandwidth availability can cause issues if they adapt during the
middle of bandwidth sampling since it would throw oﬀ our normalization
process. Similarly, each network transmission protocol can be conﬁgured
with diﬀerent parameters that could result in diﬀerent timings or bandwidth
usage patterns.
6.4. Background Traﬃc
Background traﬃc describes the network traﬃc that is being transmitted
by devices other than the spy camera. Since the usefulness of detecting spy
cameras depends on being able to diﬀerentiate between the spy camera and
other network devices, devices that have transmission patterns similar to the
timing of movement in the recorded scene will result in false positives as
mentioned in section 6.1.
6.5. Limitations
If an attacker switches from an interframe compression algorithm such as
H.264 to an intraframe or constant bit rate compression algorithm then our
technique will be ineﬀective at detecting that camera; however, this switch
comes with a cost of increased bandwidth usage. While many cameras still
support MJPEG our experience has been that the cameras we have evaluated
default to H.264 and some of them no longer include MJPEG support. We
could extend our approach to also record using MJPEG and look for corre-
lations since JPEG will compress each frame diﬀerently based on the colors
in the scene.
An attacker could also modify the software running on the webcam to
inject additional signals into the data transmission rates that are not as
expensive as a CBR codec would be. The topic of how an attacker can
optimize this injection is a topic for future work. We would need to augment
our system with approaches such as network anomaly or protocol detection
to be able to detect such an attack.
Additionally, we are limited to streaming cameras with this approach.
As future work we are examining improved techniques for detecting cameras
that are not streaming data. Currently, this approach would need to be used
as one technique in an anti-spying toolkit.
7. Related Work
Related research has focused on identifying services, applications, web-
sites, and connected devices with various detecting mechanisms. Since net-
work traﬃc contained critical information regarding communicating entities
and ongoing communications, most of the research concentrated on detecting
targets by utilizing the data embedded within network traﬃc. Some studies
introduced in perform timing analysis is also related to our work.
7.1. Network traﬃc analysis
Geer et al. [16] demonstrate that network traﬃc analysis is a powerful tool
to identify targets regarding of the network traﬃc volume that is generated
daily. Their research included several features of the network traﬃc, such
as frequency, volume, and timing, that are favorable for the attackers to
identify particular patterns. Moreover, encryption over network traﬃc does
not prevent adversaries from studying those features. The ﬁndings allowed
adversaries to identify certain behavior and services from the network traﬃc.
Coull et al. [17] researched network traﬃc analysis for Apple iMessage. The
study looked into the volume of the encrypted network traﬃc that is being
transferred and found that adversaries can successfully learn the victim’s
actions, language used, and the length of the messages with 96% of accuracy.
Siby et al. [18] focused on an IoT-rich environment and privacy concerns.
They discovered existing wireless infrastructure by analyzing the numbers of
Frames, mFrames, cFrames, and dFrames; network traﬃc volume; and send-
to-received ratio passively identify IoT devices. Gong el at. [19] studied the
feasibility of Dynamic Time Warping (DTW) on network traﬃc patterns.
The study showed that website ﬁngerprinting is applicable, even with noisy
network traﬃc, by applying DTW with traﬃc analysis.
7.2. Timing analysis
Feghhi et al.
[20] researched the eﬀectiveness of timing-based attacks
against encrypted network traﬃc and were able to infer web pages more
than 87% of the time. Other studies have demonstrated that performing
timing analysis reveals victim nodes within anonymizing systems [21, 22].
Apthorpe et al. [23] performed experiments on IoT smart home devices.
They discovered that the network traﬃc of those devices often revealed po-
tential information about user interactions. Based on the sending/receiving
rates of the streams, they were able to map live traﬃc to user behaviors.
This research indicates that the network streams of IoT devices have certain
attributes that are controllable by the users. We expect to adapt their ﬁnd-
ings to build a novel IoT sensor detection method based on certain movement
interactions. A timing analysis on a low-latency network has also been dis-
cussed [21, 22]. Both studies have pointed out that the timing characteristics
of network traﬃc tend to be remained. We intend to extend their ﬁndings to
perform statistical analysis on the timing characteristics of Wi-Fi cameras.
8. Conclusion
This paper has proposed and evaluated a novel method, Similarity of
Simultaneous Observation, for detecting streaming Wi-Fi cameras. This
method, as with the most eﬀective prior research [10], works with common
computing equipment and still works even if the attacker is using encryption
or is on a diﬀerent Wi-Fi network. Unlike prior work, this method works
both indoors and outdoors without requiring any manipulation of the envi-
ronment.
To validate the feasibility of this approach, we ﬁrst analyzed the signiﬁ-
cance of the diﬀerence of several computationally eﬃcient similarity measure-
ments. Then, we examined the eﬀectiveness of using those similarity mea-
surements as a threshold-based classiﬁer. Next, we applied machine learning
to further improve our classiﬁcation results. As a result, we demonstrated a
threshold-based similarity measure that achieved an F1 score of 0.886 and a
neural network model that achieved an F1 score of 0.966 with 100% recall
across all of our scenarios.
Next we introduced a signal delay attacker model. The attacker can delay
the streaming of the video. This attack drastically reduces the eﬀectiveness of
the original Similarity of Simultaneous Observation algorithm with very little
delay necessary. To combat this, we introduce additional similarity metrics
and use them to train an LSTM model. The new model not only defeats the
delayed streaming attacker, but it also improves the overall performance of
the system over our previous work.
From these results, we conclude that Similarity of Simultaneous Obser-
vation is an eﬀective approach to detecting hidden streaming cameras in a
variety of environments where previous work has failed. We have identiﬁed
that there are some environments in which the technique performs better
than others, but even in the most diﬃcult environments our work is valu-
able.
9. Human Subjects and Ethical Considerations
The experiments described in this paper were reviewed by our IRB and
were determined to be exempt from a full IRB review since any humans that
were incidentally captured by our cameras were in public locations and the
techniques rely only on the bytes per time step of the recorded video, not
the content of the video.
References
[1] B. Herzberg, D. Bekerman, I. Zeifman, Breaking down mirai: An IoT
DDoS botnet analysis.
URL https://www.incapsula.com/blog/malware-analysis-mirai-
ddos-botnet.html
[2] S. Bobby, F5 labs hunt for IoT vol 3, accessed 2018-01-02.
https://www.cbronline.com/whitepapers/f5-labs-hunt-
URL
iot-vol-3/
[3] Y. M. Pa Pa, S. Suzuki, K. Yoshioka, T. Matsumoto, T. Kasama,
C. Rossow, IoTPOT: Analysing the Rise of IoT Compromises, Usenix
Workshop on Oﬀensive Technology (WOOT), 2015.
[4] B. Krebs, Hacked Cameras, DVRs Powered Today’s Massive Internet
Outage, accessed 2017-11-04.
URL
dvrs-powered-todays-massive-internet-outage/
https://krebsonsecurity.com/2016/10/hacked-cameras-
[5] S. Fogie, Abusing and Misusing Wireless Cameras, 2007, accessed
http://www.informit.com/articles/article.aspx?p=
2017-11-04.
URL
1016099
[6] H. Coﬀey, How to spot a hidden camera in your airbnb, 2017, accessed
2017-12-05.
URL
advice/airbnb-hidden-cameras-how-to-spot-online-holiday-
rentals-apartments-secret-surveillance-a8092661.html
https://www.independent.co.uk/travel/news-and-
[7] Yvonne Edith Maria Schumacher vs Airbnb, Inc., a foreign corporation,
and Fariah Hassim and Jamil Jiva, accessed 2017-12-05.
URL
5398067/1-main.0.pdf
https://cdn2.vox-cdn.com/uploads/chorus_asset/file/
[8] J. Steinberg, These Devices May Be Spying On You (Even In Your
Own Home), accessed 2017-11-04.
URL https://www.forbes.com/sites/josephsteinberg/2014/01/
27/these-devices-may-be-spying-on-you-even-in-your-own-
home/
[9] P. Polstra, Am I Being Spied On? Low-tech Ways Of Detecting High-
tech Surveillance (2014).
[10] B. Lagesse, K. Wu, J. Shorb, Z. Zhu, Detecting Spies in IoT Systems
using Cyber-Physical Correlation, IEEE Workshop on Mobile and Per-
vasive Internet of Things (2018).
[11] M. Roessler, How to ﬁnd hidden cameras (2002).
URL https://archive.org/stream/How_to_Find_Hidden_Cameras/
How_to_Find_Hidden_Cameras_djvu.txt
[12] K. Wu, B. Lagesse, Do You See What I See? Detecting Hidden Stream-
ing Cameras Through Similarity of Simultaneous Observation, IEEE
Pervasive Computing and Communications (2019).
[13] T. Liu, Z. Liu, J. Huang, R. Tan, Z. Tan, Detecting Wireless Spy Cam-
eras Via Stimulating and Probing, in: Proceedings of the 16th Annual
International Conference on Mobile Systems, Applications, and Services,
2018.
[14] Y. Cheng, X. Ji, T. Lu, W. Xu, DeWiCam: Detecting Hidden Wireless
Cameras via Smartphones, in: Proceedings of the 2018 on Asia Confer-
ence on Computer and Communications Security, ACM, 2018.
[15] H.264:advanced video coding for generic audiovisual services, accessed
2018-05-19.
URL https://www.itu.int/rec/T-REC-H.264-200305-S
[16] K. Geers, Core illumination: Traﬃc analysis in cyberspace, in: 9th
International Conference on Cyber Conﬂict (CyCon), 2017. doi:10.
23919/CYCON.2017.8240328.
[17] S. E. Coull, K. P. Dyer, Traﬃc analysis of encrypted messaging services:
Apple iMessage and beyond, in: ACM SIGCOMM Computer Commu-
nication Review, Vol. 44, 2014.
[18] S. Siby, R. R. Maiti, N. O. Tippenhauer, Iotscanner: Detecting privacy
threats in iot neighborhoods, in: Proceedings of the 3rd ACM Inter-
national Workshop on IoT Privacy, Trust, and Security, IoTPTS ’17,
ACM, New York, NY, USA, 2017.
[19] X. Gong, N. Borisov, N. Kiyavash, N. Schear, Website detection using
remote traﬃc analysis, in: S. Fischer-Hübner, M. Wright (Eds.), Privacy
Enhancing Technologies, Springer Berlin Heidelberg, Berlin, Heidelberg,
2012.
[20] S. Feghhi, D. J. Leith, Time and place: robustness of a traﬃc analysis
attack against web traﬃc, in: 14th IEEE Annual Consumer Commu-
nications Networking Conference (CCNC), 2017. doi:10.1109/CCNC.
2017.8067722.
[21] S. J. Murdoch, G. Danezis, Low-cost traﬃc analysis of tor, in: 2005
IEEE Symposium on Security and Privacy, 2005. doi:10.1109/SP.
2005.12.
[22] V. Shmatikov, M.-H. Wang, Timing analysis in low-latency mix net-
works: attacks and defenses, Springer-Verlag, 2006.
[23] N. Apthorpe, D. Reisman, N. Feamster, A smart home is no castle:
Privacy vulnerabilities of encrypted iot traﬃc, Workshop on Data and
Algorithmic Transparency (2016).