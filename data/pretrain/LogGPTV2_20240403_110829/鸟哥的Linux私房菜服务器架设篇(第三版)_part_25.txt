节的 AP 设定是相符合的！(4)使用的无线频道是 6 号，接下来呢？就得要去修
改配置文件，这部份很麻烦，请参考如下的网页来设定：
o https://wiki.archlinux.org/index.php/Rt2870
[root@www ~]# ifconfig ra0 down && rmmod rt3070sta
[root@www ~]# vim /etc/Wireless/RT2870STA/RT2870STA.dat
Default
CountryRegion=5
CountryRegionABand=7
CountryCode=TW <==台湾的国码代号！
ChannelGeography=1
SSID=vbird_tsai <==你的 AP 的 ESSID 喔！
NetworkType=Infra
WirelessMode=9 <==与无线 AP 支持的协议有关！参考上述网址说明
Channel=6 <==与 CountryRegion 及侦测到的频道有关的设
定！
....(中间省略)....
PI:EMAIL
AuthMode=WPAPSK <==我们的 AP 提供的认证模式
EncrypType=AES <==传送认证码的加密机制啊！
WPAPSK="123456780aaa" <==密钥密码！最好用双引号括起来较佳！
....(底下省略)....
# 鸟哥实际有修改的，就是上面有特别说明的地方，其余的地方都保留默认值
即可。
# 更奇怪的是，每次 ifconfig ra0 down 后，这个档案会莫名其妙的修改掉
@_@
[root@www ~]# modprobe rt3070sta && ifconfig ra0 up
[root@www ~]# iwconfig ra0
ra0 Ralink STA ESSID:"vbird_tsai" Nickname:"RT2870STA"
Mode:Auto Frequency=2.437 GHz Access Point:
74:EA:3A:C9:EE:1A
Bit Rate=1 Mb/s
RTS thr:off Fragment thr:off
Encryption key:off
Link Quality=100/100 Signal level:-37 dBm Noise level:-37
dBm
Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
Tx excessive retries:0 Invalid misc:0 Missed beacon:0
如果顺利出现上面的数据，那就表示你的无线网卡已经与 AP 接上线了～再来则
是设定网络卡的配置文件啰！^_^
4. 设定网络卡配置文件 (ifcfg-ethn)
因为我们的网络卡使用的代号是 ra0，所以也是需要在
/etc/sysconfig/network-scripts 设定好相对应的档案才行啊！而由于我们的
这块卡其实是无线网卡， 所以很多设定值都与原本的以太网络卡不同，详细的
各项变量设定你可以自行参考一下底下的档案：
o /etc/sysconfig/network-scripts/ifup-wireless
至于我的网络卡设定是这样的：
[root@www ~]# cd /etc/sysconfig/network-scripts
[root@www network-scripts]# vim ifcfg-ra0
DEVICE=ra0
BOOTPROTO=dhcp
ONBOOT=no <== 若需要每次都自动启动，改成 yes 即可！
ESSID=vbird_tsai
PI:EMAIL
RATE=54M <== 可以严格指定传输的速率，要与上面 iwconfig 相同，单位
b/s
要注意的是那个 ONBOOT=no 的设定，如果你想要每次开机时无线，网卡都会自
动启动， 那就将他设定为 yes 吧！否则就设定为 no 啰！要启动再以 ifup ra0
来启动即可！ 呼呼！到此为止，你的无线网卡已经可以顺利的给他启动了喔！
很快乐吧！ ^_^
Tips:
其实上面那个配置文件的内容都是在规划出 iwconfig 的参数而
已，所以你除了可以查阅 ifup-wireless 的内容外，可以 man
iwconfig ，会知道的更详细喔！而最重要的参数当然就是 ESSID 及
KEY 啰！ ^_^
5. 启动与观察无线网卡
要启动就用 ifup wlan0 来启动，很简单啦！要观察就用 iwconfig 及 ifconfig
分别观察，底下你自己瞧瞧就好啊！ ^_^
[root@www ~]# ifup ra0
Determining IP information for ra0... done.
整个流程就是这么简单喔！一般来说，目前比较常见的笔记本电脑内建的 Intel 无线
网络模块 (Centrino) 适用于 Linux 的 ipw2200/ipw21000 模块，所以设定上也是很
快！因为 CentOS 6.x 预设就有支持，你不必重新安装无线网卡驱动程序！ 那直接透
过上述的方式来处理你的无线网络即可！很快速又方便吧！本章结尾的参考资料处， 鸟
哥还是列出许多与无线网卡有关的连结，你可以自行前往查阅与你的无线网卡有关的信
息喔(注6)！ ^_^
4.4 常见问题说明
其实这个小节也很重要的！因为可以让你在念完理论后，了解一下如何利用那些概
念来查询你的网络设定问题喔！ 底下我们就针对几个常见的问题来说说看吧！
4.4.1 内部网域使用某些联机服务(如 FTP, POP3)所遇到的联机延迟问题
PI:EMAIL
你或许曾经听过这样的问题：‘我在我的内部区域网域内有几部计算机， 这几部
计算机明明都是在同一个网域之内，而且系统通通没有问题，为什么我使用 pop3 或者
是 ftp 连上我的 Linux 主机会停顿好久才连上？但是连上之后，速度就又恢复正常！’
由于网络在联机时，两部主机之间会互相询问对方的主机名配合的 IP ，以确认对
方的身份。 在目前的因特网上面，我们大多使用 Domain Name System (DNS) 系统做
为主机名与 IP 对应的查询，那就是我们在上面提到的 /etc/resolv.conf 档案内设定
的 IP 由来， 如果没有指定正确的 DNS IP 的话，那么我们就无法查询到主机名与 IP
的对应了。
公开的因特网可以这样设定，但是如果是我们内部网域的私有 IP 主机呢？ 因为
是私有 IP 的主机，所以当然无法使用 /etc/resolv.conf 的设定来查询到这部主机的
名称啊！ 那怎么办？要知道，如果两部主机之间无法查询到正确的主机名与 IP 的对
应， 那么将‘可能’发生持续查询主机名对应的动作，这个动作一般需要持续 30-60 秒，
因此，你的该次联机将会持续检查主机名 30 秒钟，也就会造成奇怪的 delay 的情况。
这个问题最常发生在内部的 LAN ，例如使用 192.168.1.1 的主机联机到
192.168.1.2 的主机。 这个问题虽然可以透过修改软件的设定来略过主机名的检查，
但是绝大多数的软件都是默认启用这个机制的， 因此，内部主机‘老是联机时期很慢，
联机成功后速度就会恢复正常’ 时，通常就是这个问题啦！尤其是在 FTP 及 POP3 等
网络联机软件上最常见。
那么如何避过这个情况？最简单的方法就是‘给予内部的主机每部主机一个名称与
IP 的对应’即可。举例来说，我们知道每部主机都有一个主机名为 localhost ，对应
到 127.0.0.1 ，为什么呢？因为这个 127.0.0.1 与 localhost 的对应就被写到
/etc/hosts 内嘛！ 当我们需要主机名与 IP 的对应时，系统就会先到 /etc/hosts 找
寻对应的设定值， 如果找不到，才会使用 /etc/resolv.conf 的设定去因特网找。这
样说，你明白了吧？ 也就是说，只要修改了 /etc/hosts，加入每部主机与 IP 的对应，
就能够加快主机名的检查啰！
了解了吗？所以说，你就要将你的 私有 IP 的计算机与计算机名称写入你的
/etc/hosts 当中了！这也是为啥我们在主机名设定的地方， 特别强调第五个检查步骤
的缘故。我们来看一看 /etc/hosts 原本的设定内容吧！
[root@www ~]# cat /etc/hosts
# Do not remove the following line, or various programs
# that require network functionality will fail.
127.0.0.1 localhost.localdomain localhost
# 主机的 IP 主机的名称 主机的别名
在上面的情况中很容易就发现了设定的方法了吧！很简单吧！没错！那就是 IP 对应主
机名啦！ 那么现在知道为什么我们给他 ping localhost 的时候，地址会写出
127.0.0.1 了吧！ 那就是写在这个档案中的啦！而且 localhost 那一行不能拿掉呦！
否则系统的某些服务可能就会无法被启动！好了！那么将我局域网络内的所有的计算机
PI:EMAIL
IP 都给他写进去！并且，每一部给他取一个你喜欢的名字， 即使与 client 的计算机
名称设定不同也没关系啦！ 以鸟哥为例，如果我还额外加设了 DHCP 的时候，那么我
就干脆将所有的 C Class 的所有网段全部给他写入 /etc/hosts 当中，有点像底下这
样：
[root@www ~]# vim /etc/hosts
# Do not remove the following line, or various programs
# that require network functionality will fail.
127.0.0.1 localhost.localdomain localhost
192.168.1.1 linux001
192.168.1.2 linux002
192.168.1.3 linux003
.........
.........
192.168.1.254 linux254
如此一来，不论我哪一部计算机连上来，不论是在同一个网段的哪一个 IP ， 我都可
以很快速的追查到！嘿嘿！那么区内网络互连的时候，就不会多等个好几时秒钟啰！
4.4.2 网址列无法解析问题
很多朋友常问的一个问题‘咦！我可以拨接上网了，也可以 ping 到奇摩雅虎的 IP ，
但为何就是无法直接以网址连上 Internet 呢！’嘿！被气死！ 前面不是一直强调那
个 DNS 解析的问题吗？对啦！就是名称解析不对啦！赶快改一下 /etc/resolv.conf 这
个档案吧！改成上层 ISP 给你的 DNS 主机的 IP 就可以啦！例如 Hinet 的
168.95.1.1 及 Seednet 的 139.175.10.20 啰！例如底下的范例(这个范例就可以照抄
了！ ^_^)：
[root@www ~]# vi /etc/resolv.conf
nameserver 168.95.1.1
nameserver 139.175.10.20
朋友们常常会在这个地方写错，因为很多书上都说这里要设定成为 NAT 主机的 IP ，
那根本就是不对的！你应该要将所有管理的计算机内，关于 DNS 的设定都直接使用上
面的设定值即可！ 除非你的上层环境有使用防火墙，那才另外考虑！
4.4.3 预设路由的问题
PI:EMAIL
记得我们在前两章提到的网络基础当中，不是讲了很多预设路由 (default
gateway) 相关的说明吗？ 预设路由通常仅有一个，用来做为同一网域的其他主机传递
非本网域的封包网关。 但我们也知道在每个网络配置文件案
(/etc/sysconfig/network-scripts/ifcfg-ethx) 内部都可以指定‘ GATEWAY ’这个
参数，若这个参数重复设定的话，那可就麻烦啦！
举例来说，你的 ifcfg-eth0 用来做为内部网域的沟通，所以你在该档案内设定
GATEWAY 为你自己的 IP ， 但是该主机为使用 ADSL 拨接，所以当拨接成功后会产生
一个 ppp0 的接口，这个 ppp0 接口也有自己的 default gateway ，好了，那么当你
要将封包传送到 Yahoo 这个非为本网域的主机时， 这个封包是要传到 eth0 还是
ppp0 呢？因为两个都有 default gateway 啊！
没错！很多朋友就是这里搞不懂啦！常常会错乱～所以，请注意， 你的 default
gateway 应该只能有一个， 如果是拨接，请不要在 ifcfg-eth0 当中指定 GATEWAY或
GATEWAYDEV 等变量，重要重要！
更多的网络除错请参考后续第六章 Linux 网络侦错的说明。
4.5 重点回顾
 Linux 以太网络卡的默认代号为 eth0, eth1 等等, 无线网卡则为 wlan0,
ra0 等等；
 若需要自行编译网卡驱动程序时，则你必须要先安装 gcc, make,
kernel-header 等软件。
 内部网域的私有 IP 之主机的‘ IP 与主机名的对应’，最好还是写入
/etc/hosts ， 可以克服很多软件的 IP 反查所花费的等待时间。
 IP 参数设定在 /etc/sysconfig/network-scripts/ifcfg-eth0 当中，主机
名设定在 /etc/sysconfig/network 当中，DNS 设定在 /etc/resolv.conf 当中，
主机名与 IP 的对应设定在 /etc/hosts；
 在 GATEWAY 这个参数的设定上面，务必检查妥当，仅设定一个 GATEWAY 即
可。