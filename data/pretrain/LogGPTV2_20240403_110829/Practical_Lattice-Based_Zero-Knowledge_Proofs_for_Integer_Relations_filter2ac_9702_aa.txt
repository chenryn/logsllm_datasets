title:Practical Lattice-Based Zero-Knowledge Proofs for Integer Relations
author:Vadim Lyubashevsky and
Ngoc Khanh Nguyen and
Gregor Seiler
Lattice-Based Zero-Knowledge Arguments for
Integer Relations
Benoˆıt Libert1,2, San Ling3, Khoa Nguyen3, and Huaxiong Wang3
2 ENS de Lyon, Laboratoire LIP (U. Lyon, CNRS, ENSL, INRIA, UCBL), France
3 School of Physical and Mathematical Sciences, Nanyang Technological University,
1 CNRS, Laboratoire LIP, France
Singapore
Abstract. We provide lattice-based protocols allowing to prove relations
among committed integers. While the most general zero-knowledge proof
techniques can handle arithmetic circuits in the lattice setting, adapting
them to prove statements over the integers is non-trivial, at least if we want
to handle exponentially large integers while working with a polynomial-
size modulus q. For a polynomial L, we provide zero-knowledge arguments
allowing a prover to convince a veriﬁer that committed L-bit bitstrings x,
y and z are the binary representations of integers X, Y and Z satisfying
Z = X + Y over Z. The complexity of our arguments is only linear in
L. Using them, we construct arguments allowing to prove inequalities
X < Z among committed integers, as well as arguments showing that a
committed X belongs to a public interval [α, β], where α and β can be
arbitrarily large. Our range arguments have logarithmic cost (i.e., linear
in L) in the maximal range magnitude. Using these tools, we obtain
zero-knowledge arguments showing that a committed element X does not
belong to a public set S using (cid:101)O(n· log |S|) bits of communication, where
n is the security parameter. We ﬁnally give a protocol allowing to argue
that committed L-bit integers X, Y and Z satisfy multiplicative relations
Z = XY over the integers, with communication cost subquadratic in L.
To this end, we use our protocol for integer addition to prove the correct
recursive execution of Karatsuba’s multiplication algorithm. The security
of our protocols relies on standard lattice assumptions with polynomial
modulus and polynomial approximation factor.
1
Introduction
Lattice-based cryptography has been an extremely active area since the celebrated
results of Ajtai [3] and Regev [59]. In comparison with discrete-logarithm and
factoring-based techniques, it indeed oﬀers numerous advantages like simpler
arithmetic operations, a better asymptotic eﬃciency, advanced functionalities
or a conjectured resistance to quantum computing. Its development was further
boosted by breakthrough results of [27,54] showing how to safely use lattice
trapdoors, which have been the cornerstone of many advanced primitives.
While lattices enable powerful functionalities that have no counterpart using
traditional number theoretic tools, they do not easily lend themselves to the
realization of certain fundamental tasks, like eﬃcient zero-knowledge proofs.
Zero-knowledge protocols [31] make it possible to prove properties about certain
secret witnesses in order to have users demonstrate their correct behavior while
protecting their privacy. For simple statements such as proving knowledge of a
secret key, eﬃcient solutions have been reported in [56,51,40,48]. In order to prove
relations among committed values, the best known methods rely on the extra
algebraic structure [61,8,5] oﬀered by the ring-LWE or ring-SIS problems [52] and
no truly eﬃcient solution is known for standard (i.e., non-ideal) lattices.
In this paper, we investigate the problem of proving, under standard lattice
assumptions, that large committed integers satisfy certain algebraic relations.
Namely, if cx, cy and cz are commitments to integers X, Y, Z of arbitrary poly-
nomial bit-size L = poly(n), where n is the security parameter, we consider the
problem of proving statements of the form Z = X +Y and Z = X·Y over Z. Note
that this problem is diﬀerent from the case of arithmetic circuits addressed in [8]:
here, we are interested in proving relations over the integers. Furthermore, we
would like to design zero-knowledge arguments for various other relations among
large committed integers. As speciﬁc applications, we consider the problems of:
(i) Proving that a committed integer X belongs to a publicly known range [α, β];
(ii) Proving order relations Y < X < Z between committed integers Y, X, Z; (iii)
Proving that a committed element X does not belong to a public set (which
allows users to prove their non-blacklisting).
While these problems received much attention in the literature, the most
eﬃcient solutions [49,35,21] handling large integers appeal to integer commit-
ments [26,22] based on hidden-order groups (e.g., RSA groups), which are vul-
nerable to quantum computing. In particular, designing a solution based on mild
assumptions in standard lattices is a completely open problem to our knowl-
edge. Even in ideal lattices, handling integers of polynomial length L requires to
work with exponentially large moduli, which aﬀects both the eﬃciency and the
approximation factor of the lattice assumption. Here, our goal is to realize the
aforementioned protocols using polynomial moduli and approximation factors.
If we were to use known zero-knowledge proof systems [61,8,5] in ideal lattices
to handle additive relations over Z, we would need (super-)exponentially large
moduli. In particular, in order to prove that committed integers X, Y, Z of bit-size
L = poly(n) satisfy Z = X + Y , these protocols would require to prove that
Z = X + Y mod q for a large modulus q = 2poly(n). With current techniques,
this would imply to work with a commitment scheme over rings Rq, for the same
modulus q. In terms of eﬃciency, a single ring element would cost thousand times
L bits to represent since the modulus should contain more than L bits. When it
comes to proving smallness of committed values (in order to prove Z = X + Y
over Z via Z = X + Y mod q, the prover should guarantee that X and Y are
small w.r.t. q) together with relations among them, the prover may need to send
hundreds of ring elements. As a consequence, the communication cost could be
as large as k · L, where k is up to hundreds of thousands. In terms of security, we
note that such approaches may require at least sub-exponential approximation
2
factors for the underlying ideal-lattice problems. Moreover, ensuring soundness
may be non-trivial as the protocols of [8,5] only guarantee relaxed soundness.
Our Contributions. We provide statistical zero-knowledge arguments allow-
ing to prove additive and multiplicative relations among committed integers of
bit-size L = poly(n) under mild assumptions in standard (i.e., non-ideal) lattices.
Our protocols can work with two ﬂavors of the commitment scheme by Kawachi,
Tanaka and Xagawa (KTX) [40]. If we commit to integers in a bit-by-bit fashion,
the modulus q can be as small as (cid:101)O(n) and the security of our protocols can rely
on the worst-case hardness of SIVPγ with γ = (cid:101)O(n), which turns out to be one
On the other hand, if we rely on a stronger assumption with γ = (cid:101)O(
modulus q = (cid:101)O(
where ζ = (cid:101)O(n) + 6L log q is the cost of proving knowledge of valid openings
the weakest assumptions in the entire literature on lattice-based cryptography.
L · n) for a
L · n), then we can commit to L bits at once and reduce the
communication cost. For this all-at-once commitment variant, the complexities
of our protocols are summarized as follows.
The protocol for integer additions has communication cost (ζ + 20L) · κ bits,
√
√
for the commitments to X, Y, Z and κ = ω(log n) is the number of protocol
repetitions to make the soundness error negligibly small. Thus, the actual cost for
proving the additive relation is 20L · κ bits. In terms of computation complexity,
both the prover and the veriﬁer only perform O(L) simple operations.
We oﬀer two options for proving integer multiplications. For practically
interesting values of L, e.g., L ≤ 8000, we can emulate the schoolbook multi-
plication algorithm by proving L additive relations, and obtain communication
cost (cid:101)O(n + L2) · κ as well as computation costs O(L2) for both parties. To our
knowledge, all known methods for proving integer multiplications (sometimes
implicitly) involve O(L2) computation and/or communication complexities. Can
we break this quadratic barrier?
As a theoretical contribution, we put forward the ﬁrst protocol for multiplica-
tive relations that does not incur any quadratic costs. Speciﬁcally, by proving in
zero-knowledge the correct execution of a Karatsuba multiplication algorithm [39],
we obtain both computation and communication complexities of order O(Llog2 3).
Applications. While our protocol for additive relations only handles non-
negative integers, it suﬃces for many applications, such as arguments of inequali-
ties among committed integers, range membership for public/hidden ranges, and
set non-membership. Moreover, it can also be used in higher-level protocols like
zero-knowledge lists [28].4 or privacy-preserving certiﬁcate transparency [25].
In particular, for a set of N elements with bit-size (cid:101)O(n), our zero-knowledge
protocol for proving non-membership of a committed value only cost (cid:101)O(n· log N )
bits. In the lattice setting, this is the ﬁrst non-membership proof that achieves
communication cost logarithmic in the cardinality of the set. Meanwhile, in our
protocol for proving that a committed L-bit integer belongs to a given range
[α, β], where β − α ≈ 2L, besides the cost of proving knowledge of a valid opening
4 These involve a prover wishing to convince a veriﬁer that a committed list contains
elements {ai}i in a speciﬁc order without revealing anything else.
3
for the commitment, the prover only has to send 23L · κ bits to the veriﬁer. In
Table 1, we provide the concrete cost of the protocol variant achieving soundness
error 2−80, for commonly used lattice parameters.
We remark that, if we only had to prove the correct evaluation of binary
addition circuits, MPC-based techniques [37,29,20] could perform slightly better
than our protocols. However, they become much less eﬃcient for the algebraic
parts of the statements we have to prove (in particular, we also need to prove
knowledge of openings of SIS-based commitments). Indeed, the MPC-in-the head
paradigm [37] and its follow-ups [29,20] have linear complexities in the size of the
circuit, which is much larger than the witness size as the commitment relation
entails Θ(n(L + m)) additions and multiplications over Zq. In our protocols,
proving knowledge of an opening takes Θ((L + m) log q) bits of communication.
Range size
Proving knowledge of committed X
Proving range membership of X
21000
3.16
0.38
22000
3.65
0.75
24000
4.63
1.5
28000
6.59
3
Total communication cost
3.54 MB 4.4 MB 6.13 MB 9.59 MB
Table 1. Concrete communication cost of our lattice-based zero-knowledge argument
(Section 5.1) for proving knowledge of committed integer X belonging to a given range,
w.r.t. various range sizes. We work with lattice parameters n = 256, q ≈ 215, m = 4608.
To achieve soundness error 2−80, we set κ = 137.
we generate a KTX commitment cx =(cid:80)L−1
Our Techniques. We proceed by emulating integer commitments by means
of bit commitments. To commit to an L-bit integer X in an all-in-one fashion,
q to its binary
representation (xL−1, . . . , x0)2 using public matrices A = [a0 | . . .|aL−1] ∈ Zn×L
and B ∈ Zn×m
i=0 ai · xi + B · r ∈ Zn
and random coins r ←(cid:45) U ({0, 1}m).
q
q
Integer Additions. To prove additive relations among committed integers, we
come up with an idea that may sound natural for computer processors, but, to the
best of our knowledge, has not been considered in the context of zero-knowledge
proofs. The idea is to view integer additions as binary additions with carries.
Suppose that we add two bits x and y with carry-in cin to obtain a bit z and
carry-out cout. Then, the relations among these bits are captured by equations
z = x + y + cin mod 2,
cout = x · y + z · cin + cin mod 2,
which is equivalent to a homogeneous system of two equations over Z2. Using
the above adder, we consider the addition of L-bit integers X = (xL−1, ..., x0)2
and Y = (yL−1, ..., y0)2 assuming that the committed sum is of length L + 1 and
written as Z = (zL, zL−1, ..., z0)2. For each i ∈ {0, ..., L − 1}, we denote by ci+1
4
the carry-out of the i-th addition and deﬁne cL = zL. The equations become
z0 + x0 + y0 = 0 mod 2
c1 + x0 · y0 = 0 mod 2
z1 + x1 + y1 + c1 = 0 mod 2
c2 + x1 · y1 + z1 · c1 + c1 = 0 mod 2
...
zL−1 + xL−1 + yL−1 + cL−1 = 0 mod 2
zL + xL−1 · yL−1 + zL−1 · cL−1 + cL−1 = 0 mod 2.
We observe that all the terms in the above equations are either bits or products
of two bits. By adapting the Stern-like [60] techniques for hiding secret bits [45]
and handling quadratic relations [43], we manage to prove that the bits of X, Y, Z
satisfy the above equations modulo 2, which is equivalent to X + Y = Z over Z.
Meanwhile, to prove that those bits coincide with the values committed under
the KTX commitment requires to additionally prove a linear equation modulo q.
Interestingly, we show that, not only the problem of proving additive relations
among committed integers can be reduced to proving secret bits satisfying linear
and quadratic equations modulo 2 and one linear equation modulo q, such type
of reduction is doable for all subsequently considered relations (multiplications,
range membership, set non-membership). To handle the reduced statements in a