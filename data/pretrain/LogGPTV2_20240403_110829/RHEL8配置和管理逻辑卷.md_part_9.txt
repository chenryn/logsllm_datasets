  VG   #PV #LV #SN Attr   VSize   VFree
  vg     3   1   0 wz--n- 406.97G 135.66G
```
此时您不能将条状逻辑卷扩展到卷组的大小，因为需要两个基本设备才可以对数据进行条带处理。
``` literallayout
# lvextend vg/stripe1 -L 406G
  Using stripesize of last segment 64.00 KB
  Extending logical volume stripe1 to 406.00 GB
  Insufficient suitable allocatable extents for logical volume stripe1: 34480
more required
```
要扩展条状逻辑卷，添加另一个物理卷，然后扩展逻辑卷。在这个示例中，在卷组中添加两个物理卷，我们可将逻辑卷扩展成卷组的大小。
``` literallayout
# vgextend vg /dev/sdd1
  Volume group "vg" successfully extended
# vgs
  VG   #PV #LV #SN Attr   VSize   VFree
  vg     4   1   0 wz--n- 542.62G 271.31G
# lvextend vg/stripe1 -L 542G
  Using stripesize of last segment 64.00 KB
  Extending logical volume stripe1 to 542.00 GB
  Logical volume stripe1 successfully resized
```
如果您没有足够的底层物理设备来扩展条状逻辑卷，那么即使扩展没有条带化也可能会扩展卷，这可能会导致性能下降。当在逻辑卷中添加空间时，默认操作是使用与现有逻辑卷最新片段相同的条状参数，但您可以覆盖这些参数。下面的例子在初始
`lvextend`{.literal} 命令失败后，扩展了现有条状逻辑卷使用剩余空间。
``` literallayout
# lvextend vg/stripe1 -L 406G
  Using stripesize of last segment 64.00 KB
  Extending logical volume stripe1 to 406.00 GB
  Insufficient suitable allocatable extents for logical volume stripe1: 34480
more required
# lvextend -i1 -l+100%FREE vg/stripe1
```
:::
:::
[]{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#managing-lvm-volume-groups_configuring-and-managing-logical-volumes}第 6 章 管理 LVM 卷组 {.title}
:::
本节介绍执行卷组管理的各个方面的命令。
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#con_lvm-volume-groups_managing-lvm-volume-groups}卷组 {.title}
:::
物理卷合并为卷组（VG）。这样就创建了一个磁盘空间池，可使用它分配逻辑卷。
在卷组中，可用于分配的磁盘空间被分成固定大小的单元，我们称之为扩展。一个扩展就是可被分配的最小空间单位。在物理卷中，扩展被称为物理扩展。
逻辑卷被分配成与物理卷扩展大小相同的逻辑扩展。因此卷组中的所有逻辑卷的扩展大小都是一样的。卷组将逻辑扩展与物理扩展匹配。
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#proc_displaying-volume-groups-managing-lvm-volume-groups}显示卷组 {.title}
:::
您可以使用两个命令来显示 LVM 卷组的属性： `vgs`{.literal} 和
`vgdisplay`{.literal}。`vgscan`{.literal} 命令为卷组扫描系统中所有支持的
LVM 块设备，也可以用来显示现有卷组。
`vgs`{.literal}
命令提供了可以对其进行格式配置的卷组信息，每行显示一个卷组。`vgs`{.literal}
命令提供大量格式控制，对脚本很有用。
`vgdisplay`{.literal}
命令以固定格式显示卷组属性（比如大小、扩展、物理卷数目等等）。下面的例子显示了
`vgdisplay`{.literal} 命令输出卷组 `new_vg`{.literal}
的信息。如果您没有指定卷组，则会显示所有现有的卷组。
``` literallayout
# vgdisplay new_vg
  --- Volume group ---
  VG Name               new_vg
  System ID
  Format                lvm2
  Metadata Areas        3
  Metadata Sequence No  11
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                3
  Act PV                3
  VG Size               51.42 GB
  PE Size               4.00 MB
  Total PE              13164
  Alloc PE / Size       13 / 52.00 MB
  Free  PE / Size       13151 / 51.37 GB
  VG UUID               jxQJ0a-ZKk0-OpMO-0118-nlwO-wwqd-fD5D32
```
以下示例显示了 `vgscan`{.literal} 命令的输出结果。
``` literallayout
# vgscan
Reading all physical volumes.  This may take a while...
Found volume group "new_vg" using metadata type lvm2
Found volume group "officevg" using metadata type lvm2
```
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#proc_combining-volume-groups-managing-lvm-volume-groups}合并卷组 {.title}
:::
要将两个卷组合并成一个卷组，使用 `vgmerge`{.literal}
命令。如果这两个卷的物理扩展大小相等，且两个卷组的物理卷和逻辑卷的描述符合目的卷组的限制，您可以将一个不活跃的\"源\"卷与一个活跃或者不活跃的\"目标\"卷合并。
以下命令将不活跃卷组 `my_vg`{.literal} 合并到活跃或者不活跃卷组
`databases`{.literal} 中，并输出详细的运行时信息。
``` literallayout
# vgmerge -v databases my_vg
```
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#proc_splitting-a-volume-group-managing-lvm-volume-groups}分割卷组 {.title}
:::
在这个示例中，有一个由三个物理卷组成的卷组。如果在物理卷中有足够的空闲空间，就可在不添加新磁盘的情况下创建新的卷组。
在初始设置中，逻辑卷 `mylv`{.literal} 是从卷组 `myvg`{.literal}
中分离出来的，它由三个物理卷
`/dev/sda1`{.literal}、`/dev/sdb1`{.literal} 和
`/dev/sdc1`{.literal}组成。
完成此步骤后，卷组 `myvg`{.literal} 将包含 `/dev/sda1`{.literal} 和
`/dev/sdb1`{.literal}。第二个卷组 `yourvg`{.literal} 将包含
`/dev/sdc1`{.literal}。
::: orderedlist
1.  使用 `pvscan`{.literal} 命令确定卷组中目前有多少可用空间。
    ``` literallayout
    # pvscan
      PV /dev/sda1  VG myvg   lvm2 [17.15 GB / 0    free]
      PV /dev/sdb1  VG myvg   lvm2 [17.15 GB / 12.15 GB free]
      PV /dev/sdc1  VG myvg   lvm2 [17.15 GB / 15.80 GB free]
      Total: 3 [51.45 GB] / in use: 3 [51.45 GB] / in no VG: 0 [0   ]
    ```
2.  使用 `pvmove`{.literal} 命令将 `/dev/sdc1`{.literal}
    中所有使用的物理扩展移动到 `/dev/sdb1`{.literal}。执行
    `pvmove`{.literal} 命令可能需要很长时间。
    在一个集群中，`pvmove`{.literal}
    命令只能移动只在单一节点中活跃的逻辑卷。
    ``` literallayout
    # pvmove /dev/sdc1 /dev/sdb1
      /dev/sdc1: Moved: 14.7%
      /dev/sdc1: Moved: 30.3%
      /dev/sdc1: Moved: 45.7%
      /dev/sdc1: Moved: 61.0%
      /dev/sdc1: Moved: 76.6%
      /dev/sdc1: Moved: 92.2%
      /dev/sdc1: Moved: 100.0%
    ```
    转移数据后，您可以看到 `/dev/sdc1`{.literal} 中的所有空间都可用。
    ``` literallayout
    # pvscan
      PV /dev/sda1   VG myvg   lvm2 [17.15 GB / 0    free]
      PV /dev/sdb1   VG myvg   lvm2 [17.15 GB / 10.80 GB free]
      PV /dev/sdc1   VG myvg   lvm2 [17.15 GB / 17.15 GB free]
      Total: 3 [51.45 GB] / in use: 3 [51.45 GB] / in no VG: 0 [0   ]
    ```
3.  要创建新卷组 `yourvg`{.literal}，使用 `vgsplit`{.literal}
    命令分割卷组 `myvg`{.literal}。
    下面的命令将卷组 `yourvg`{.literal} 从卷组 `myvg`{.literal}
    中分割，将物理卷 `/dev/sdc1`{.literal} 移动到新的卷组
    `yourvg`{.literal} 中。
    ``` literallayout
    # lvchange -a n /dev/myvg/mylv
    # vgsplit myvg yourvg /dev/sdc1
      Volume group "yourvg" successfully split from "myvg"
    ```
    您可以使用 `vgs`{.literal} 查看这两个卷组的属性。
    ``` literallayout
    # vgs
      VG     #PV #LV #SN Attr   VSize  VFree
      myvg     2   1   0 wz--n- 34.30G 10.80G
      yourvg   1   0   0 wz--n- 17.15G 17.15G
    ```
4.  创建新的卷组后，创建新逻辑卷 `yourlv`{.literal}。
    ``` literallayout
    # lvcreate -L 5G -n yourlv yourvg
      Logical volume "yourlv" created
    ```
5.  在新逻辑卷中创建文件系统并挂载它。
    ``` literallayout
    # mkfs.ext4 /dev/yourvg/yourlv
    mke2fs 1.44.3 (10-July-2018)
    Creating filesystem with 524288 4k blocks and 131072 inodes
    Filesystem UUID: 616da032-8a48-4cd7-8705-bd94b7a1c8c4
    Superblock backups stored on blocks:
            32768, 98304, 163840, 229376, 294912
    Allocating group tables: done
    Writing inode tables: done
    Creating journal (16384 blocks): done
    Writing superblocks and filesystem accounting information: done
    # mount /dev/yourvg/yourlv /mnt
    ```
:::
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#renaming-lvm-volume-groups_managing-lvm-volume-groups}重命名 LVM 卷组 {.title}
:::
这个过程使用命令行 LVM 接口重新命名现有卷组。
::: orderedlist
**流程**
1.  如果在集群环境中存在卷组，在其活跃的所有节点上取消激活该卷组。对每个这样的节点运行以下命令：
    ``` screen
    [root@node-n]# vgchange --activate n vg-name
    ```
2.  使用 `vgrename`{.literal} 程序重新命名现有卷组：
    ``` screen
    # vgrename original-vg-name new-vg-name
    ```
    另外，您还可以指定到该设备的完整路径：
    ``` screen
    # vgrename /dev/original-vg-name  /dev/new-vg-name
    ```
:::
::: itemizedlist
**其它资源**
-   `vgrename(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#managing-lvm-volume-groups_configuring-and-managing-logical-volumes.html#proc_moving-volume-group-to-another-system-managing-lvm-volume-groups}将卷组移动到另一个系统中 {.title}
:::
您可以将整个 LVM 卷组移动到另一个系统中。建议您使用 `vgexport`{.literal}
和 `vgimport`{.literal} 命令进行此操作。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您可以使用 `vgimport`{.literal} 命令的 `--force`{.literal}
参数。这可让您导入缺少物理卷的卷组，然后运行
`vgreduce --removemissing`{.literal} 命令。
:::
`vgexport`{.literal}
命令使系统无法访问不活跃的卷组，这样就可以分离其物理卷。在通过
`vgexport`{.literal} 命令使一个卷组不活跃后，可以使用
`vgimport`{.literal} 命令使其可以重新被其他机器访问。
要从一个系统移动卷组到另一个系统,，执行以下步骤：