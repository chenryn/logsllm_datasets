```plaintext
.\" t
.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     $Id: socket.2,v 1.4 1999/05/13 11:33:42 freitag Exp $
.\"
.\" Modified 1993-07-24 by Rik Faith 
.\" Modified 1996-10-22 by Eric S. Raymond 
.\" Modified 1998, 1999 by Andi Kleen 
.\" Modified 2002-07-17 by Michael Kerrisk 
.\" Modified 2004-06-17 by Michael Kerrisk 
.\" Translated 2011-07-26 by Zhiye Yue
.TH SOCKET 2 2009-01-19 "Linux" "Linux Programmer's Manual"

.SH NAME
socket - 创建一个用于通信的端点

.SH SYNOPSIS
.BR "#include <sys/types.h>" "          /* See NOTES */"
.br
.B #include <sys/socket.h>
.sp
.BI "int socket(int " domain ", int " type ", int " protocol );

.SH DESCRIPTION
.BR socket ()
函数创建一个用于通信的端点，并返回一个文件描述符。

.PP
参数
.I domain
指定通信域；选择的协议将用于通信。协议名称在
.IR sys/socket.h
中定义。目前已知的格式包括：
.TS
tab(:);
l l l.
名称:目的：手册页
T{
.BR AF_UNIX ", " 本地通信:
T}:T{
unix(7)
T}
T{
.B AF_INET
T}:IPv4 网络协议:T{
.BR ip (7)
T}
T{
.B AF_INET6
T}:IPv6 网络协议:T{
.BR ipv6 (7)
T}
T{
.B AF_IPX
T}:IPX \- Novell 协议
T{
.B AF_NETLINK
T}:内核用户界面设备:T{
.BR netlink (7)
T}
T{
.B AF_X25
T}:ITU-T X.25 / ISO-8208 协议:T{
.BR x25 (7)
T}
T{
.B AF_AX25
T}:业余无线电 AX.25 协议
T{
.B AF_ATMPVC
T}:访问原始 ATM PVCs
T{
.B AF_APPLETALK
T}:AppleTalk:T{
.BR ddp (7)
T}
T{
.B AF_PACKET
T}:底层包连接:T{
.BR packet (7)
T}
.TE

.PP
套接字通过
.IR type
参数确定通信语义。目前定义的类型有：
.TP 16
.B SOCK_STREAM
提供有序、可靠的双向字节流通信。可能支持带外传输。
.TP
.B SOCK_DGRAM
提供数据报（不面向连接的、不可靠的固定最大长度的消息）。
.TP
.B SOCK_SEQPACKET
提供有序、可靠的双向固定最大长度的数据报传输路径；需要用户读取整个包。
.TP
.B SOCK_RAW
提供未加工的网络协议通道。
.TP
.B SOCK_RDM
提供可靠的数据报层，但不保证顺序。
.TP
.B SOCK_PACKET
已废弃，不应在新程序中使用，参考
.BR packet (7)。

.PP
一些套接字类型并未被所有协议实现；例如，
.B SOCK_SEQPACKET
并不被
.BR AF_INET
实现。

.PP
从 Linux 2.6.27 开始，
.I type
参数可以提供其他功能。注意某些套接字类型可能包括以下值的或位，以修改
.BR socket ():
的行为。
.TP 16
.B SOCK_NONBLOCK
设置
.BR O_NONBLOCK
标志于新打开的文件描述符。这可以通过
.BR fcntl(2)
调用来达到相同的效果。
.TP
.B SOCK_CLOEXEC
设置 close-on-exec 
.RB ( FD_CLOEXEC )
标志于新打开的文件描述符。参见
.BR open (2)
中关于
.B O_CLOEXEC
的描述，因为这个标志在某些情况下非常有用。

.PP
.I protocol
指定用于套接字的协议。通常，在给定的协议中只允许在一个套接字上使用一个协议。注意
.I protocol
可以指定为数字0。但是，可能存在多个协议，但在本手册中必须使用其中一个。协议用于指定通信发生的“通信域”，参考
.BR protocols (5)。
参考
.BR getprotoent (3)
中关于如何将协议名称字符串映射到协议编号。

.PP
.B SOCK_STREAM
类型的套接字是双向直接数据流，类似于管道。它们不对记录溢出提供保护。一个套接字流在接受或发送任何数据时必须处于
.I connected
状态。通过
.BR connect (2)
调用与其他套接字建立连接。一旦连接，数据可以通过
.BR read (2)
和
.BR write (2)
系统调用传输，或者使用不同的
.BR send (2)
和
.BR recv (2)
系统调用。会话结束时，可能会执行
.BR close (2)。
带外数据也可以通过
.BR send (2)
和
.BR recv (2)
进行发送和接收。

.PP
.B SOCK_STREAM
类型的通信协议应确保信息不丢失和重复。如果一块有协议缓冲的数据不能在合理时间内传输，连接会被认为超时。当在套接字上启用
.B SO_KEEPALIVE
时，协议会以其特定方式检查另一端是否活着。当一个进程接受或发送了一个错误的数据流时，会产生并接受一个
.B SIGPIPE
信号；对于采用默认处理此信号的进程，它将会退出。
.B SOCK_SEQPACKET
套接字采用与
.B SOCK_STREAM
套接字相同的系统调用。唯一的不同是，
.BR read (2)
系统调用只会返回请求的数据量，并将剩余到达的任何数据包丢弃。此外，所有消息边界的传入数据报将被保留。

.PP
.B SOCK_DGRAM
和
.B SOCK_RAW
类型的套接字支持使用
.BR sendto (2)
系统调用来发送数据报，数据报通常是通过
.BR recvfrom (2)
来接收的，该调用会在下一个数据报中单独返回发送者的地址。

.PP
.B SOCK_PACKET
是一个遗留的套接字类型，用于从设备驱动中接收原始数据，已被
.BR packet (7)
调用取代。

.PP
.BR fcntl (2)
的
.B F_SETOWN
操作可以在带外数据到达时让进程或进程组收到一个
.B SIGURG
信号，或者在
.B SOCK_STREAM
类型的连接被意外中断时收到
.B SIGPIPE
信号。这个操作也可用于让进程或进程组通过
.BR SIGIO
接收 I/O 和异步 I/O 通知。使用
.B F_SETOWN
等同于使用了
.B FIOSETOWN
或
.B SIOCSPGRP
参数的
.BR ioctl (2)
系统调用。

.PP
当网络向协议模型发出一个错误情况的信号（例如，对 IP 使用 ICMP 消息），套接字将会设置 pending 错误标志。对套接字接下来的操作将会返回 pending 错误的错误代码。对于某些协议，可能会为每个套接字启用一个详细的错误队列；
参见
.BR ip (7)
中的
.B IP_RECVERR
。

.PP
套接字的操作由套接字级别的选项控制。这些选项定义在
.IR sys/socket.h
中。
.BR setsockopt (2)
和
.BR getsockopt (2)
分别用于设置和读取选项。

.SH RETURN VALUE
成功时，返回新套接字的文件描述符。失败时，返回 -1，并且
.I errno
会被适当设置。

.SH ERRORS
.TP
.B EACCES
不允许创建指定类型和/或指定协议的套接字。
.TP
.B EAFNOSUPPORT
工具不支持指定的地址族。
.TP
.B EINVAL
未知协议，或协议组不可用。
.TP
.B EINVAL
错误的
.IR type
标志。
.TP
.B EMFILE
进程文件表溢出。
.TP
.B ENFILE
已经达到系统上限的文件打开数。
.TP
.B ENOBUFS " 或 " ENOMEM
没有足够的内存，直到有可用资源套接字不能被创建。
.TP
.B EPROTONOSUPPORT
协议类型或指定的协议不被当前域所支持。
.PP
其他错误可能是由协议模型产生的。

.SH CONFORMING TO
4.4BSD, POSIX.1-2001.
.B SOCK_NONBLOCK
和
.B SOCK_CLOEXEC
标志是 Linux 特有的。
.BR socket ()
出现在 4.2BSD 中。通常，非 BSD 系统的 BSD 套接字层克隆是可移植的（包括 System V 的变种）。

.SH NOTES
并不要求包含
.IR sys/types.h
，这个头文件在 Linux 下不是必需的。然而，一些历史上的（BSD）工具要求这个头文件，可移植程序很可能希望包含它。
4.x BSD 下明显固定的协议族有
.BR PF_UNIX,
.BR PF_INET,
等等，但 AF_UNIX 等用于地址族。然而，BSD 的 man 页面保证“协议族一般等于地址族”，随后的标准在每个地方都使用了 AF_*。
.I sys/socket.h
文件头仅在 libc4 之前是必需的。一些包，如 util-linux，声称为了在所有 Linux 版本和库上可移植，确实需要这个头文件。

.SH EXAMPLE
在
.BR getaddrinfo (3)
中有一个使用
.BR socket ()
的例子。

.SH SEE ALSO
.BR accept (2),
.BR bind (2),
.BR connect (2),
.BR fcntl (2),
.BR getpeername (2),
.BR getsockname (2),
.BR getsockopt (2),
.BR ioctl (2),
.BR listen (2),
.BR read (2),
.BR recv (2),
.BR select (2),
.BR send (2),
.BR shutdown (2),
.BR socketpair (2),
.BR write (2),
.BR getprotoent (3),
.BR ip (7),
.BR socket (7),
.BR tcp (7),
.BR udp (7),
.BR unix (7)

.PP
\(lqAn Introductory 4.3BSD Interprocess Communication Tutorial” 在
.I UNIX Programmer's Supplementary Documents Volume 1
中重印。

.PP
\(lqBSD Interprocess Communication Tutorial\(rq
在
.I UNIX Programmer's Supplementary Documents Volume 1
中重印。

.SH COLOPHON
本页面是 Linux
.I man-pages
项目 3.27 版的一部分。
有关项目的描述和报告错误的信息，请访问
http://www.kernel.org/doc/man-pages/。
译者于 2011-07-26 翻译，于 2013-02-08 修订。
译文与原文的版权协议一致。
```