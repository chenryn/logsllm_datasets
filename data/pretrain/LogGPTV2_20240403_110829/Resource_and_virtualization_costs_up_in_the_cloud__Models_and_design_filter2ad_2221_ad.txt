Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:41:31 UTC from IEEE Xplore.  Restrictions apply. 
399Figure  8  and  9  show  the  detailed  analysis  of  costs 
distribution  for  direct  usage,  burstiness  and  unallocated 
capacity for CPU and memory, respectively. We note that in 
this  consolidation  scenario  CPU  was  the  bottleneck,  so  costs 
for unallocated CPU resources are almost negligible as shown 
in  Figure  8,  and  the  most  of  unallocated  costs  are  due  to 
memory costs as it is apparent from the detailed memory cost 
analysis shown in Figure 9. The two figures also indicate that 
costs for burstiness are much higher for CPU than for memory 
indicating  that  a  typical  memory  usage  pattern  is  less  bursty 
compared to the CPU usage pattern. 
Figure 8: CPU Costs per Workload 
Figure 9: Memory Costs per Workload 
Figure 10: Sum of CPU and Mem. Costs per Workload 
Finally, Figure 10 shows the sum of the costs for CPU and 
memory per workload in our study. Note, that the workloads 
are  ordered  in  the  order  of  decreasing  total  workload  costs. 
The figure clearly shows that for most of the small workloads 
CPU  costs  dominate  whereas  the  few  really  large  workloads 
are significantly dominated by memory costs. These large cost 
workloads  constitute  less  than  10%  of  all  the  workloads. 
Remember  that  the  outcome  of  the  workload  consolidation 
engine  was  18─20  servers  to  host  all  the  workloads  in  the 
considered  set.  It  means  that  the  cost  of  these  20  largest 
workloads  can  dominate  capacity  usage  on  their  assigned 
servers.  The  next  section  presents  another  case  study  that  is 
based  on  the  proposed  cost  model.  It  compares  different 
alternatives for employing virtualization. 
VI.  TO VIRTUALIZE OR NOT 
Commercial  virtualization  technologies  offer  excellent 
support  for  managing  shared  resource  pools.  Naturally,  they 
have licensing fees. The fees per server can be comparable to 
the  cost  of  stand-alone  servers.  As  we  saw  in  the  previous 
sections, not all the workloads use resources in the same way 
in  a  consolidated  environment.  It  may  be  that  some  large 
workloads cost more to run within a consolidated environment 
than  to  run  on  a  dedicated  server.  Our  goal  is  to  design  an 
automated  approach  that  apportions  workload  cost  in  the 
shared  virtualized  environment  to  identify  such  workloads. 
Other  hosting  alternatives  can  be  considered  for  these 
workloads  to  ensure  that  they  are  “right-virtualized.”  The 
workloads  can  be  hosted  directly  on  dedicated  physical 
machines  or  using  virtualization  solutions  with  lower  or  no 
licensing  fees.  For  example,  a  workload  could  be  less 
expensively  deployed  to  a  server  virtualized  with  Hyper-V 
[15]  or  on  a  server  running  an  open-source  virtualization 
technology such as KVM [13] or Xen [14]. 
Our approach takes into account the configuration of hosts 
and  the  time  varying  demands  of  workloads,  i.e.  resource 
usage  traces  of  the  application  over  time.  The  costs-per-host 
include the host list price, license and maintenance fees for a 
virtualization  solution,  and  host  power  usage.  Prices  are 
obtained  from 
the  hp.com  web  site  and  power  usage 
information  from HP Power Advisor [9]. We assume a three 
year  lifetime  for  the  hosts.  The  time  varying  demands  of 
workloads are customer specific. 
In the first phase, a desirable host configuration is chosen 
for the resource pool. The host has a certain capacity in terms 
of  processing  CPU  cores  and  memory.  An  automated 
consolidation exercise packs the workloads to a small number 
of these hosts. A tool such as HP Capacity Advisor [10] (that 
is based on the CapMan [6] described earlier in Section II) can 
be used for this purpose. The approach takes into account the 
aggregate  time  varying  (multiple)  resource  usage  of  the 
workloads  and  a  given  capacity  of  the  hosts.  Multiple  host 
alternatives can be considered iteratively. 
In  the  second  phase,  we  apportion  the  cost  of  the  shared 
hosts in the pool among the hosted workloads using the pool-
burst  model  introduced  in  Section  III.  If  the  cost  associated 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:41:31 UTC from IEEE Xplore.  Restrictions apply. 
400with a workload is greater than the cost of a smaller server that 
could also host the workload, then the workload is a candidate 
for right-virtualizing. The method can be repeated for different 
combinations  of  resource  pool  host  and  smaller  server  host 
configurations.  
In the third phase, we evaluate the average resource usage 
in  the  pool  to  make  sure  that  the  selected  host  configuration 
for  the  resource  pool  is  balanced  and  well  utilized.  For 
example,  if  host  memory  is  often  less  than  50%  utilized  we 
may  reduce  the  memory  size  for  the  hosts  and  repeat  the 
exercise. 
To  evaluate  the  effectiveness  of  our  approach,  we  again 
use  the  three  month  traces  of  monitoring  data  (CPU  and 
memory)  for  312  workloads  from  an  HP  customer  that  was 
described  and  analyzed  in  Section  IV.  For  the  consolidated 
exercise, we consider a shared resource pool configured of HP 
ProLiant DL385 G7 servers each with 24 x 2.2-GHz processor 
cores and 96 GB of memory (similar to the configuration that 
was  considered  and  analyzed  in  Section  V).  We  chose  the 
hardware  configuration  such  that  after  our  consolidation 
exercise  the  peak  utilization  of  CPU  and  memory  were 
balanced for the servers. The acquisition cost for each servers 
is  estimated  as  $23,000,  including  virtualization  platform 
licensing  and  support  costs  of  $9,800  for  a  popular 
commercial  virtualization  solution  [4].  We  define  CPU 
capacity and CPU demand in units of CPU shares (100 shares 
correspond to one 1GHz CPU). Memory usage is measured in 
GB. 
IT Power Costs (3 Years)
Licensing Costs
Hardware Acquisition Costs
$
n
i
s
t
s
o
C
$900,000.00
$800,000.00
$700,000.00
$600,000.00
$500,000.00
$400,000.00
$300,000.00
$200,000.00
$100,000.00
$0.00
Virtualize All 
Workloads
Only Virtualize Cost-
effective Workloads
Pool
Figure 11: Costs for different scenarios 
Optimized Resource 
The consolidation engine minimizes the number of servers 
needed to host the set of workloads while satisfying their time 
varying  resource  demands  [6].  Figure  11  summarizes  the 
results.  Consolidating  all  workloads  into  VMs  with  the 
popular virtualization platform requires a resource pool of 31 
servers  with  a  total  cost  of  $741,441  for  a  3  year  lifetime 
including estimated IT power costs of $27,580 ($0.1 $/KWh).  
Apportioning  the  costs  across  hosted  workloads  reveals 
that 22 workloads are the candidates for right-virtualizing. For 
these 22 workloads we consider DL385 G7 servers that each 
have two 8 core CPUs with 2.4 GHz and 72 GB of memory. 
We  assume  no  additional  costs  for  virtualization.  By  “right-
virtualizing”, the cost for the customer decreases by $77,641 
(by 12%). The structure of the cost changes in the following 
way:  hardware  acquisition  costs  increase  to  $453,468  (by 
10%)  while  virtualization  costs  decrease  to  $176,472  (by 
42%). 
We note that because many workloads with high memory 
demand are now hosted outside the pool, we are able to reduce 
the memory size of the resource pool nodes to 48 GB (called 
as the optimized resource pool) without affecting the number 
of  workloads that can be hosted. This leads to the additional 
hardware  savings  of  $49,750  for  the  customer  and  results  in 
18.4%  of 
lower 
virtualization licensing costs.  
total  costs  savings,  mostly  due 
to 
Finally,  the  cost  of  increased  power  demand  for  the 
optimized solution is included in our model. Power represents 
a small fraction of total cost for the considered servers.  Large, 
high-end servers are often used for consolidation and are very 
power-efficient  in  this  context.  We  note  that  for  less  power 
efficient  and  less  expensive  servers,  power  will  represent  a 
larger  fraction  of  total  cost.  However,  the  increase  in  power 
costs for operating a few more servers is expected to be much 
smaller than the savings. We do not consider cooling cost and 
do not expect it to have much impact on total cost. Additional 
networking costs are also not considered.  
To  summarize,  by  considering  workload  costs  that  are 
based  on  the  introduced  robust  cost  model,  a  customer  is 
offered  a  visibility  into  virtualization  costs  and  the  cost  of 
alternative less expensive solutions. It is an important exercise 
that helps a customer to make an informed design choice. 
VII.  RELATED WORK AND COMPETITIVE APPROACHES 
Historically,  cost  models  in  support  of  chargeback  in 
shared IT systems have followed one of several strategies: no 
cost, fixed cost, variable cost based on resource demand, and 
variable cost based on volume. The choice of model depends 
on  the  desired  impact  of  the  strategy  on  user  behavior.  The 
pool-burst method we propose is variable cost method that can 
be applied to resource demands or traffic volumes. It is novel 
in  that  it  addresses  challenges  inherent  from  the  nature  of 
modern shared resource pools as opposed to earlier mainframe 
and  consolidated  environments.  Modern  resource  pools  are 
typically  made  up  of  large  numbers  of  servers  with  capacity 
that may be similar to a workload’s demands, and where there 
is  a  great  deal  of  flexibility  regarding  dynamic  changes  to 
workload  placement.  We  have  demonstrated  that  new  cost 
models,  such  as  our  proposed  pool-burst  model,  are  required 
for these environments. These models must take into account 
the impact of demand burstiness that may limit the number of 
workloads  that  can  be  assigned  to  a  server  and  resulting 
impact on cost for other workloads assigned to the server. The 
approach  we  introduced  was  shown  to  provide  for  stable 
chargeback  results.  The  cost  model  naturally  led  to  a  “right-
virtualization”  case  study  to  support  decisions  regarding 
choices for virtualization based on costs; which is a reasonable 
desired  behavior.  Pool-burst  model  is  more  similar  to  cost 
models for the electrical system that take into account the peak 
of  power  demand,  or  some  large  percentile,  and  total  power 
use  for  cost  recovery  [12].  The  greater  the  peak  the  more 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:41:31 UTC from IEEE Xplore.  Restrictions apply. 
401electrical  grid  infrastructure  must  be  deployed  regardless  of 
mean  usage.  Similarly,  shared  resource  pool  infrastructure 
must also be sized to handle burstiness. 
Amazon  EC2  [1]  charges  per  hour  for  fixed  sized  virtual 
machines.  We  consider  workloads  that  do  not  all  fit  on  their 
offered  machine  sizes.  We  consolidate  to  much  larger 
machines  and  consider  a  much  finer  sharing  of  resources.  In 
[11], the authors present Joulemeter, a virtual machine power 
metering  approach.  They  use  models  to  apportion  power 
consumption  of  the  physical  machine  to  the  hosted  virtual 
machines. However, their models are based on actual resource 
utilization  only.  In  contrast  to  their  work,  we  consider  the 
burstiness  of  workloads  to  apportion  fixed  costs  to  the 
workloads in a less workload placement sensitive manner.  
Some  CDNs  charge  for  video  delivery  on  a  per  Mbps 
sustained  model.  This  means  that  the  customer  pays  for  the 
volume of traffic at any given time, and not based on the total 
bits  transferred.  Typically,  in  this  pricing  model  the  user  is 
charged for excess traffic above the volume of Mbps that he is 
committed  to.  Often  a  95th  percentile  metric  is  employed 
where  the  customer  is  allowed  to  burst  over  the  committed 
Mbps allotment for less than 5% of the month with no penalty. 
This  model  aims  to  charge  for  burstiness  when  it  exceeds  a 
predefined usage budget [17].  
from 
Customers  are  benefiting 
the  advantages  of 
virtualization and no longer hesitate to consolidate even their 
production workloads. Many service providers [1][2][3] use a 
single  virtualization  platform 
to  host  and  manage  all 
workloads. Such an approach provides certain advantages but 
may come at a price. In our case study, the alternative design 
scenarios, that consider different virtualization platforms as a 
possible  design  choice,  could  reduce  infrastructure  and 
licensing costs by up to 20%. 
VIII.  CONCLUSIONS AND FUTURE WORK 
in 
for 
costs 
shared 
apportioning 
In this paper we introduce and compare three different cost 
models 
resource 
environments.  We  described  workload  performance  features 
that  impact  resource  pool  costs  and  show  that  these  must  be 
taken into account if the true impact of workloads on resource 
pool costs is to be considered. We have shown that different 
apportioning approaches have an impact on the robustness of 
cost  assignments  and  present  an  approach  that  offers  robust, 
i.e., predictable, cost assignments. Cost assignments based on 
average usage and even burstiness were not as predictable in 
shared  resource  pool  environments.  The  proposed  pool-burst 
cost  model  supports  a 
reliable  and  predictable  cost 
apportioning in the shared compute environment, and can also 
be  useful  in  support  of  more  elaborate  pricing  models.  In 
particular,  we  demonstrated  an  interesting  use  case  of  the 
proposed model where the customer is presented with a set of 
alternative  “right-virtualizing”  solutions  (and  their  respective 
costs)  for  the  selected  workloads  to  be  hosted  with  different 
means. The customer can compare the design choices and then 
make  an  intelligent  decision  about  them.  In  our  case  study, 
these  different  design  alternatives  lead  to  potential  cost 
savings of nearly 20% by “right-virtualizing” the workloads. 
Our  future  work  includes:  improving  our  cost  models  to 
better reflect the costs for non-bottleneck resources, i.e., costs 
for  unallocated  non-bottleneck  resources  may  be  better 
apportioned based on the resource utilization of the bottleneck 
resource;  applying  and  extending  the  proposed  method  to 
other  aspects  of  cost  including  infrastructure,  power,  and 
human  operation  costs;  planning  for  resources  that  are  not 
used  all  the  time  and  the  relationship  with  pricing  models; 
considering  additional  dynamism  where  workloads  are 
migrated  at  runtime;  and  applying  the  methods  to  more 
example  workloads.  Finally,  we  will  also  explore  the  impact 
of using other high percentiles for resource usage rather than 
the  peak  resource  usage,  i.e.,  the  100  percentile,  in  our 
apportioning formulas. 
REFERENCES 
[1]  Amazon web services. http://aws.amazon.com/ 
[2]  IBM  Tivoli  Usage  and  Accounting  Manager  Virtualization 
Edition.  http://www-01.ibm.com/software/tivoli/products/usage-
accounting/index.html 
[3]  HP  Insight  Dynamics:  HP  Virtual  Server  Environment. 
http://h18004.www1.hp.com/products/solutions/insightdynamics
/vse-overview.html 
[4]  VMware: Virtualize Your Business Infrastructure. 
http://www.vmware.com/virtualization/ 
[5]  J. H. Holland, Adaptation in Natural and Artificial Systems. Ann 
Arbor: University of Michigan Press, 1975. 
[6]  J.  Rolia,  L.  Cherkasova,  M.  Arlitt,  and  A.  Andrzejak:  “A 
Capacity Management Service for Resource Pools”. In Proc. of 
the 5th Intl. Workshop on Software and Performance (WOSP). 
Palma, Illes Balears, Spain, pages 229─237, 2005. 
[7]  L. Cherkasova and J. Rolia, “R-Opus: A Composite Framework 
for  Application  Performability  and  QoS  in  Shared  Resource 
Pools,”  in  Proc.  of  the  Int.  Conf.  on  DependableSystems  and 
Networks (DSN), Philadelphia, USA, 2006. 
[8]  D. Gmach, J. Rolia, L. Cherkasova, and A. Kemper: Workload 
Analysis  and  Demand  Prediction  of  Enterprise  Data  Center 
Applications. Proc. of the 2007 IEEE International Symposium 
on  Workload  Characterization  (IISWC),  Boston,  MA,  USA, 
September 27─29, 2007. 
[9]  HP  Power  Advisor.  http://h18000.www1.hp.com/products/ 
solutions/power/index.html 
[10] HP  Capacity  Advisor.  https://h20392.www2.hp.com/portal/ 
swdepot/displayProductInfo.do?productNumber=capad 
[11] A.  Kansal,  F.  Zhao,  J.  Liu,  N.  Kothari,  and  A.  Bhattacharya: 
“Virtual  Machine Power  Metering  and Provisioning”.  In  ACM 
Symposium  on  Cloud  Computing  (SOCC),  Indianapolis,  IN, 
USA, June 2010. 
[12] City of Ft. Collins Electric Rates.   
http://www.fcgov.com/utilities/residential/rates/electric 
[13] http://www.linux-kvm.org/page/Main_Page 
[14] http://www.xen.org/ 
[15] http://en.wikipedia.org/wiki/Hyper-V 
[16] D. Gmach, J. Rolia, L, Cherkasova, A. Kemper. “Resource pool 
management:  Reactive  versus  proactive  or  let's  be  friends”, 
Computer Networks, pages 2905─2922, 2009. 
[17] Content  Delivery  Pricing:  Understanding  CDN  Overages, 
http://blog.streamingmedia.com/the_business_of_online_vi/200
7/10/content-deliver.html 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:41:31 UTC from IEEE Xplore.  Restrictions apply. 
402