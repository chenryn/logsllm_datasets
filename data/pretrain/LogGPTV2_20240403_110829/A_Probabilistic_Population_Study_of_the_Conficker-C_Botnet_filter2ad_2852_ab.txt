,
C
where δ is the proportion of monitored IP space.
From a well-known distributional result (see e.g. [18], ch 5, thm 1.2), the
marginal distribution of y over all values of M, holding other unknown quantities
ﬁxed, is Poisson:
π(y | t, φ, w, pnδ) = e−φtwpnδ (φtwpnδ)y
y!
.
(3)
Though we have described the model in hierarchical stages, in practice we
are interested only in the unconditional distribution of y, which is diﬃcult to
express analytically. But, the hierarchical structure of the model makes it easy
to obtain a large sample (y)1,··· (y)B from this distribution, using simulation.
For b = 1 to B, we do the following:
1. Draw a state ηb from {S, R, D} using the prior probabilities πks, and draw
a network connection wb from π(w).
2. Draw φb, nb, and tb using the prior distributions for ηb.
3. Draw yb from the Poisson distribution with rate equal to φbtbnbwb.
We then use the observed proportions in y1, ..., yB as Monte Carlo estimates of
the marginal probability of y, accounting for prior uncertainty in the underlying
parameters. This simulation can be performed easily using statistical packages
for languages such as R, C, or Python.
3 L´evy’s Central Limit Estimator ˆH
Suppose y1, ..., yH are independent with distribution π(y | πks, μφs, σφs, αw,
αn, δ, k) as deﬁned in Section 2. We will suppress the dependence on hyper-
parameters in notation for this section. The population size H is unknown, and
only Y =
yi is observed. We deﬁne the population estimator:
(cid:6)H
i=1
ˆH =
Y
μy
.
(4)
We call ˆH the Central Limit Estimator of H. This estimator has the following
properties:
(cid:6)H
A Probabilistic Population Study of the Conﬁcker-C Botnet
187
E(
1. E( ˆH) = 1
μy
2. Var( ˆH) = 1
μ2
y
3. (L´evy result): The distribution of ˆH is approximately Normal when H is
Hμy = H;
yi) = 1
μy
i=1
(cid:6)H
yi) = H
Var(
i=1
(cid:7)
(cid:8)2
;
σy
μy
suﬃciently large.
The L´evy form of the Central Limit Theorem (see e.g. [2], Ch. 5, p 243) out-
lines conditions under which the sum of independent and identically distributed
variables converges to a Normal distribution. Using this result, an approximate
95% conﬁdence interval for H is:
(cid:9)
ˆH
ˆH ± 1.96
σy
μy
(5)
When yk1, ..., ykHk are identically distributed when grouped within relative hour
(cid:6)
of the day, k ∈ [0, ..., 23], then an approximate 95% conﬁdence interval of ˆH =
23
k=0
ˆHk is:
(cid:10)(cid:11)(cid:11)(cid:12) 23(cid:13)
k=0
ˆH ± 1.96
(cid:2)
ˆHk
σyk
μyk
(cid:5)2
.
(6)
We estimate μy and σy from simulations y1,··· yB for B = 1, 000, 000, with
the formulas:
μy ≈ 1
B
B(cid:13)
b=1
yb,
y ≈ 1
σ2
B−1
(cid:6)B
b=1(yb − μy)2 .
(7)
In practice, B can be set large enough that the Monte Carlo sampling error in
these estimates has little eﬀect on the variance of ˆH. Alternatively, an approxi-
mation method such as the Delta method ([2], ch 7) can be used to account for
this variability.
4 Analysis and Results
Data Collection. The monitored space in our experiment consists of a large
private network comprising approximately 21000 /24 net blocks. To account for
uncertainty in this size estimate as well as network availability, we also set an
additional prior for δ, π(δ) = Beta(15, 13000), and add an extra simulation step
in the calculation of π(y | πks, μφs, σφs, αw, αn, δ, k). This corresponds to a mean
μδ of 0.0012.
Using the SiLK Conﬁcker.C Plug-In [5], we obtained historical records of
UDP connection requests with the Conﬁcker-C signature sent into the monitored
network space from external hosts over the period from March 5th through April
24th, 2009. We recorded the total number of incoming UDP connection attempts
for each external IP address per hour, and aggregated these counts to the /24
level to attempt to account for ephemeral DHCP leases within subnets. A total
188
R. Weaver
Fig. 3. ˆH per hour over the 2-month span
of 1091013 external /24 net blocks were observed performing Conﬁcker-C UDP
scans.. Each net block was assigned roughly to a time zone based on the country
code associated with that block, with 1% of blocks remaining unassigned due to
satellite locations or unavailable country codes.
Population Estimates. Figure 3 shows the estimates of Hh for the two-month
span starting on March 5th, and ending April 2 4th. 95% conﬁdence bands for the
hourly counts, calculated using equation 6, are on the order of under ±10000
and are too tight to be seen on the ﬁgure. The large jump occurs on March
17th and corresponds to a binary update released into the Conﬁcker-C botnet.
The largest host count associated with the botnet is 1.06 million active hosts.
Numbers decline steadily through the month of April, but appear to stabilize
toward the end of the month. The overall decline occurs because Conﬁcker-C
infections spread only among previously infected machines, with had no means
of infecting new hosts.
The heavy lines correspond to a smoothed plot of both host count estimates
(solid line), and observed unique IP address counts (dotted line). These lines
show a trend that as the botnet ages, it “spreads out” among IP space. The
ratio of hosts per IP–observable as the space between the two lines– is large
prior to the update in mid-March, but declines steadily afterward. This decline
makes sense; large infected networks (often behind proxies) would propagate
local infections quickly, while isolated hosts would take longer to reach with P2P
bootstrapping. The eﬀect would also appear as larger corporate networks work
to clean up enclaves of local infections, suggesting that the persistent infections
of Conﬁcker-C are among more isolated machines in IPv4 space.
A Probabilistic Population Study of the Conﬁcker-C Botnet
189
Hyperparameters and Prior Sensitivity. The prior values πsk can be estimated
empirically using a random sample of infected hosts from the Conﬁcker-C pop-
ulation. To approximate such a sample, we sampled a set of 1000 /24 blocks
from the observed set of 1.09 million, each with probability proportional to the
observed average scan rate. In 71% of the sample, the activity behind the sam-
pled net block was sparse enough to roughly equate one block with one active
host, and to estimate active from non-active hours. An active hour following
two inactive hours, or an active hour preceded and followed by two inactive
hours, was classiﬁed as “Start-Up”. An active hour preceded by at least one
active hour in the past two, and followed by two inactive hours was classiﬁed as
“Shut-Down”. All other active hours were classiﬁed as “Running”. The counts
of observed blocks in each state, normalized over hour by time zone, were used
as the values for πsk. This method used simple heuristics as opposed to formal
models for estimating an active state, but the resulting prior probabilities display
a reasonable and intuitive pattern in Figure 2.
The scaling factor σy
μy was close to 1 for all hours, with the highest value
√
√
H term
of 1.08 occurring at 8am, relative time. This result indicates that the
dominates the conﬁdence interval for ˆH. The value 1.96
H is a very tight bound
relative to the size of the population estimate, but its precision is predicated on
an unbiased model for π(y | πks, μφs, σφs, αw, αn, δ, k). Small shifts in the hyper-
parameters may have a large inﬂuence on ˆH. This suggests that measurement of
the uncertainties and behavioral quantities making up a single-host model should
be well-informed and precise to take advantage of this simple estimator. We used
a reasonable and informed set of 67 hyperparameters (πks, μφs, σφs, αw, αn, δ, k)
in this model, and we opted not to model any further levels of uncertainty with
probability distributions. In the future, the model can be easily adapted to in-
clude another hierarchical level of priors for these hyperparameters, allowing us
examine the sensitivity of population estimates to the choice of hyperparameters.
5 Summary and Discussion
A marginal probability model of single-host behavior provides a way of measur-
ing populations based on the number of active infected machines, as opposed
to counting net blocks or IP addresses. The model is based on a set of hyper-
parameters that can be independently measured or assessed based on protocol
and network activity proﬁles. By characterizing this distribution precisely, and
applying the Central Limit Theorem, we obtain both a point estimate of the
population, and a conﬁdence interval that accounts for variability arising from
both the stochastic elements of the protocol and from uncertainty across multi-
ple measurements. In the future we hope to expand the estimation methodology
to a fully Bayesian scheme that incorporates priors for the chosen hyperparam-
eters and that allows for the calculation of posterior distributions of the current
model hyperparameters given observed data y, making the model more robust
to parameter misspeciﬁcation. We also hope to develop a full mark-recapture
model for comparison with the expanded marginal model.
190
R. Weaver
References
1. Abu Rajab, M., Zarfoss, J., Monrose, F., Terzis, A.: My botnet is bigger than yours
(maybe, better than yours): Why size estimates remain challenging. In: Proceedings
of the First Annual Workshop on Hot Topics in Botnets (March 2007)
2. Casella, G., Berger, R.: Statistical Inference. Duxbury Press, Boston (1990)
3. Chan, M., Hamdi, M.: An active queue management scheme based on a capture-
recapture model. IEEE Journal on Selected Areas in Communications 21(4), 572–
583 (2003)
4. Dupuis, J., Schwarz, C.: A Bayesian approach to the multistate Jolly-Seber capture-
recapture model. Biometrics 63, 1015–1022 (2007)
5. Faber, S.: Silk Conﬁcker. C Plug-in (2009), CERT Code release, http://tools.
netsa.cert.org/wiki/display/tt/SiLK+Conficker.C+Plugin
6. Fienberg, S., Johnson, M., Junker, B.: Classical multilevel and bayesian approaches
to population size estimation using multiple lists. Journal of the Royal Statistical
Society: Series A 162(3), 383–405 (1999)
7. Fitzgibbon, N., Wood, M.: Conﬁcker.C: A technical analysis (March 2009), Sophos
white paper, http://www.sophos.com/sophos/docs/eng/marketing_material/
conficker-analysis.pdf
8. Horowitz, K., Malkhi, D.: Estimating network size from local information. Infor-
mation Processing Letters 88, 237–243 (2003)
9. Li, Z., Goyal, A., Chen, Y., Paxson, V.: Automating analysis of large-scale botnet
probing events. In: ASAICCS 2009 (March 2009)
10. Mane, S., Mopuru, S., Mehra, K., Srivastava, J.: Network size estimation in a peer-
to-peer network. Tech. Rep. TR 05-030, University of Minnesota Department of
Computer Science and Engineering (2005)
11. McAfee: Conﬁcker.C over the wire. McAfee Network Security blog publication
(March 2009), http://www.avertlabs.com/research/blog/index.php/2009/04/
01/confickerc-on-the-wire-2
12. Paxson, V., Floyd, S.: Wide-area traﬃc: The failure of poisson modeling.
IEEE/ACM Transactions on Networking 3(3), 226–244 (1995)
13. Porras, P., Saidi, H., Yegneswaran, V.: Conﬁcker C Actived P2P scanner. SRI in-
ternational Code release/document (2009), http://www.mtc.sri.com/Conficker/
contrib/scanner.html
14. Porras, P., Saidi, H., Yegneswaran, V.: Conﬁcker C analysis. Tech. rep., SRI Inter-
national (2009)
15. Porras, P., Saidi, H., Yegneswaran, V.: Conﬁcker C P2P protocol and implemen-
tation. Tech. rep., SRI International (2009)
16. Psaltoulis, D., Kostoulas, D., Gupta, I., Briman, K., Demers, A.: Decentralized
schemes for size estimation in large and dynamic groups. Tech. Rep. UIUCDCS-
R-2005-2524, University of Illinois Department of Computer Science (2005)
17. Schwarz, C., Arnason, A.: A general methodology for the analysis of capture-
recapture experiments in open populations. Biometrics 52(3), 860–873 (1996)
18. Taylor, H., Karlin, S.: An Introduction to Stochastic Modeling. Academic Press,
London (1998)