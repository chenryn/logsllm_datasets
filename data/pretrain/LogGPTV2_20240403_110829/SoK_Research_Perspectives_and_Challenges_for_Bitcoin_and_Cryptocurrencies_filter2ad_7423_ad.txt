costly feather-forking retaliation if tested.
C. Stability of mining pools
Mining pools rely on participants to submit valid blocks
when they are found and are vulnerable to participants
submitting partial shares in exchange for compensation but
withholding valid blocks to lower the pool’s proﬁtability.
Though this attack has long been known, it appears self-
destructive as the participant withholding a block is lowering
their own earnings in addition to other pool members.
However, it has been shown [33] that a large miner (or
a pool) can actually proﬁt from using some of its mining
power to inﬁltrate another pool by submitting partial shares
but withholding valid blocks. The beneﬁt is that the capac-
ity used to inﬁltrate will not contribute to increasing the
difﬁculty of the mining puzzle (as blocks are not published)
but can still earn proﬁts. This strategy is advantageous to a
large miner or pool across a range of mining capacities for
the attacker and the inﬁltrated pool.
Eyal [44] provides an extended treatment of this attack
and shows that, between any two pools, the resulting game
is an iterated prisoner’s dilemma, with a Nash equilibrium
of both pools attacking but a Pareto equilibrium of neither
attacking. This attack can be detected statistically if done
on a large scale, which has happened at least once in the
wild against the Eligius pool in June 2014 [124]. However,
a clever attacker can easily obfuscate the attack using many
participant addresses. Further countermeasures have been
proposed but not seriously studied or deployed. As an
iterated prisoner’s dilemma, it is possible pools will avoid
attacking each other through out-of-channel communication
and the threat of retaliation.
Johnson et al. [59], [68] study whether and when par-
ticipants in the peer-to-peer protocol are incentivized to
engage in network-level denial-of-service attacks against
others. They conclude that mining pools have an incentive
to engage in attacks, that larger pools are better to attack
than smaller pools and that larger pools have a greater in-
centive than smaller pools to attack at all. Denial-of-service
attacks against pools are regularly observed in the wild,
so this theoretical analysis can be backed up by observed
phenomenology [120]. Others have performed measurement
and simulation studies to determine the dynamics and time
scale of information propagation [38], [40].
IV. CLIENT-SIDE SECURITY
Bitcoin’s popularity has made usable and secure key
management important to a large new group of users. Unlike
many other applications of cryptography, users will suffer
immediate and irrevocable monetary losses if keys are lost
or compromised. Hence it is an exciting and important area
of research in usable security.
A. Simpliﬁed Payment Veriﬁcation (SPV) Security
Although the reference Bitcoin client maintains a vali-
dated copy of the entire blockchain, this would impose a
prohibitive burden on mobile devices. A simple observation
leads to a lightweight alternative: assuming that a majority of
nodes only mine on valid chains (the correctness property of
Section III-B), then clients need validate only the proofs of
work and can trust that the longest chain only contains valid
transactions. Such SPV proofs [90] enable untrusted nodes
to efﬁciently prove to lightweight clients that a transaction
has been included in the agreed-upon history.
SPV is implemented in the BitcoinJ library which under-
lies most mobile Bitcoin clients. SPV veriﬁcation requires
processing an ever-growing chain of proof-of-work solu-
tions, although optimizations are possible such as starting
from hard-coded checkpoints. SPV also carries privacy con-
cerns as it requires disclosing the set of addresses the client
is interested in to third parties (see Section VII and [49]).
D. Stability of the peer-to-peer layer
B. Key Management
Almost all analysis of Bitcoin assumes that the peer-
to-peer layer functions as speciﬁed and that, in general, a
majority of participants will learn nearly all of the available
protocol state information within reasonable time scales.
However, Babaioff et al. [8] demonstrated that information
propagation at the peer-to-peer layer is not always incen-
tive compatible. It remains unknown whether participants
internalize sufﬁcient value from the peer-to-peer network as
a public good to justify the opportunity costs of propagat-
ing information Babaioff et al. identiﬁed, or whether the
information propagation equilibrium observed in the wild
(in which people willingly participate in the peer-to-peer
protocol) is unstable and might break down eventually.
Bitcoin relies on public key cryptography for user authen-
tication while nearly all other forms of online commerce
today rely on passwords or conﬁdential credit card infor-
mation. Developers of Bitcoin software have attempted a
variety of approaches solve, or at least mask, longstanding
usability issues with key storage and management. Eskandari
et al. [43] propose a set of evaluation criteria for the usability
of Bitcoin key management interfaces and conclude that
current tools employ complex metaphors which do not fully
capture the implications of key management actions.
Keys stored on device. Storing a pool of keys on disk
directly is the simplest model, but keys may be stolen by
speciﬁcally-crafted malware [75]. Some clients send change
112112
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:08:10 UTC from IEEE Xplore.  Restrictions apply. 
to newly created Bitcoin addresses, requiring a new backup
each time the current key pool is depleted (generally without
any user-interface indication when it happens), while others
send change to the originating address or derive all keys
from a single random seed.
Split control. To avoid a single point of failure and
enhance security, bitcoins can be stored using a k-of-n multi-
signature script which speciﬁes n public keys. For the script
to be redeemed, valid signatures must be provided from
k of these n keys. A simple example is a wallet which
requires both a user’s laptop and mobile phone to sign
before sending funds. Alternatively, funds can be stored
under a single public key, but shares of this key can be
split among n parties using threshold cryptography [50].
Threshold signatures achieve the same k-of-n security, but
look like normal pay-to-pub-key-hash transactions on the
blockchain and keep the parameters k and n private.
Password-protected wallets. A Bitcoin client may allow
a stored key pool ﬁle (called a wallet) to be encrypted
with a key derived from a user-chosen password. Password-
protected wallets deter certain types of theft, additionally
requiring password guessing or keystroke capture if the ﬁle
is physically or digitally stolen. Password-protected wallets
may mislead the user to believe that the password itself
provides access to their funds on a new device.
Password-derived wallet. Key pools can be determinis-
tically derived from a single user-chosen secret, enabling
cross-device use if the secret
is committed to memory
(this approach is often called a brain wallet). Unthrottled
exhaustive search of common/weak passwords is possible—
rainbow tables have uncovered inadequately protected Bit-
coin addresses on the blockchain. Additionally, a forgotten
password will render all associated funds irrecoverable.
Ofﬂine storage. Wallets stored ofﬂine in passive portable
media, such as paper or a USB thumb drive, enhance
theft-protection from malware-based threats and provide a
familiar mental model of physical security. However they
must be updated as the key pool is depleted. For paper
wallets, private keys printed in scannable form (e.g., QR
codes) can be stolen by passive observation of the wallet
(e.g., on live television [101]). Finally, ofﬂine wallets must
eventually loaded keys into a device to be used, becoming
susceptible to malware at that point.
Air-gapped and hardware storage. Air-gapped storage
is a special case of ofﬂine storage, where the device hold-
ing the keys can perform computations, such as signing
transactions for the keys it holds. Air-gapped devices can
thwart certain types of thefts by never exposing keys directly
to an internet-connected device. That said, unauthorized
access to a transaction-signing oracle is not much different
from accessing keys themselves—both allow theft. Hardware
security modules (HSMs) emulate the properties of an air
gap by isolating the key material from the host device and
only exposing the ability to sign transactions.
Hosted wallet. Third party web services offer key storage,
management, and transaction functions through standard
web authentication mechanisms, such as a password or two-
factor authentication. This provides the closest experience
to traditional online banking, however it requires trusting
the host. Many incidents of theft [41] or bankruptcy [86]
by hosted wallets have been documented including over 40
events involving losses greater than B1000.
V. MODIFYING BITCOIN
We now turn our attention to proposed changes and
extensions to Bitcoin. In the remainder of the paper we will
evaluate and compare proposed changes, in this section we
discuss available mechanisms for implementing changes.
A. Upgrading Bitcoin itself
We can distinguish changes on the following levels:
• Hard forks. A protocol change requires a hard fork if
it enables transactions or blocks which would be consid-
ered invalid under the previous rules, such as increasing
the block reward, changing the ﬁxed block size limit,
or adding a new opcode. If miners update to the new
protocol, they may produce blocks that are rejected by
other nodes leading to a permanent (and thus “hard”)
fork. Changes involving a hard fork therefore require near-
unanimity to be attempted in practice.
• Soft forks. In contrast to a hard fork, a soft-fork change
is one that’s backward compatible with existing clients;
generally this involves a restriction of which blocks or
transactions are considered valid. Such a change requires
only the support of a majority of miners to upgrade, since
older clients will continue to consider their blocks valid. A
miner that doesn’t upgrade may waste computational work
by generating blocks that the rest of the network considers
invalid and ignores, but will always rejoin the longest
chain found by the majority of the miners. This makes
soft-forking changes much safer to introduce than hard
forks. In some cases, a soft fork can be used to introduce
new opcodes to the scripting language. This is possible
because there are currently several unused opcodes that
are interpreted as no-ops; including these in a transaction
output may make it spendable by anyone, and hence
they are typically avoided. However, any one of these
op-codes can be given new semantics if miners decide
to reject transactions that fail some condition indicated
by this opcode. This is a strict narrowing of the set of
acceptable transactions, and hence requires only a soft
fork.In retrospect, it would have been wise to deﬁne all
unused opcodes initially as no-ops, providing maximum
ﬂexibility to introduce new changes by soft-forks.
• Relay policy updates. Recall from Section II-B3 that
nodes enforce a stricter policy in what they will relay than
what they will actually accept as valid. Changing this pol-
icy or most other aspects of the communication network
113113
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:08:10 UTC from IEEE Xplore.  Restrictions apply. 
require the least coordination as they can typically be done
in a backwards-compatible fashion with nodes advertising
their protocol version number. The default relay policy
has already changed several times to add new standard
transaction types such as multi-signature transactions.
B. Altcoins
Due to the limits on what can be changed about Bitcoin
without a hard fork, hundreds of derivative systems, referred
to as altcoins, have arisen with alternate design approaches.
Many of these systems have forked Bitcoin’s code base and
maintained most of its features, although some systems (such
as Ripple) are completely independent designs. Altcoins
must bootstrap the initial allocation of currency to entice
users to participate, which can be achieved in several ways:
• New genesis block. Altcoins may simply start a new
blockchain from scratch, allocating funds to initial miners
as Bitcoin did in its early days. This approach is now
viewed warily by the cryptocurrency community due to a
wave of altcoins launched by founders hoping to cash in
through early mining.16
• Forking Bitcoin. To avoid privileging its founders, an
altcoin might
intentionally choose to fork Bitcoin at
a certain point, accepting the prior transaction history
and ownership of funds. Bitcoin owners would continue
to have bitcoins in the original system, plus an equal
amount of the new currency at the time of its founding.
Technically this would function exactly like a hard fork,
only without the claim that the fork is the legitimate
Bitcoin blockchain. Interestingly, this approach seems not
to have been attempted seriously.
• Proof-of-burn. A more popular approach to inheriting
Bitcoin’s allocation is proof-of-burn [113], in which users
must provably destroy a quantity of bitcoins, typically by
transferring funds in Bitcoin to a special address whose
private key cannot be found such as the key with a hash of
all zeroes. This approach has the downside of permanently
lowering the quantity of bitcoins in circulation.
• Pegged sidechains. Most recently, a number of inﬂuential
Bitcoin developers [9] proposed sidechains, to which bit-
coins can be transferred and eventually redeemed. Adding
validation rules to redeem currency from a sidechain
would require at least a soft fork of Bitcoin.
Altcoins also must compete with Bitcoin for miners (and
avoid Goldﬁnger attacks by Bitcoin miners), which can be
difﬁcult prior to the currency achieving a non-zero exchange
rate. A popular approach is merged mining, whereby an alt-
coin accepts blocks if their root is included in a valid Bitcoin
block, thus enabling Bitcoin miners to mine blocks in the
altcoin without performing any additional work. This can
quickly provide an altcoin the full mining power of Bitcoin,
16For Bitcoin itself, Satoshi Nakamoto was the only miner at ﬁrst and
amassed over B1 million by 2011, most of which remains unspent.
as many Bitcoin miners now merge mine a large number
of altcoins to earn extra rewards. However, it precludes the
altcoin from deviating from Bitcoin’s computational puzzle.
VI. ALTERNATIVE CONSENSUS PROTOCOLS
Bitcoin’s consensus protocol has been its most heavily
debated component, due to the open questions about stability
(see Section III-B), concerns about the performance and
scalability of the protocol [112], and concerns that
its
computational puzzle wastes resources. In this section we
evaluate alternative proposals for consensus, noting that in
each case the stability implications of the proposed changes
are unknown and alternative proposals rarely deﬁne any
speciﬁc stability properties they claim to provide.
Typically, alternate consensus schemes aim to ﬁx some
speciﬁc perceived problem with Bitcoin and hope that sta-
bility arguments for Bitcoin will carry over, although given
the lack of a solid model guaranteeing stability for Bitcoin
itself this may be a shaky assumption.
A. Parameter changes
Bitcoin’s consensus protocol incorporates many “magic
constants” which were hard-coded based on initial guess-
work. Nearly every altcoin has varied at least some of these
parameters, yet the modiﬁcations are often controversial and
we still have only a few clear guidelines on how these should
be chosen and how they may affect stability.
Inter-block time and difﬁculty adjustment window.
Bitcoin automatically adjusts the difﬁculty of its compu-
tational puzzle so that solutions are found (on average)
ten minutes apart. This setting is constrained primarily by
network latency; if the rate of solutions is too high then
miners will frequently ﬁnd redundant blocks before they
can be propagated. On the other hand, a slower block rate
directly increases the amount of time users need to wait for
transaction conﬁrmations. Bitcoin’s setting is by all accounts
conservative; all altcoins we know of have the same rate or
faster (Litecoin, the second most popular system, is four
times faster). There are many proposals to modify aspects
of the communication network to reduce latency, allowing
this parameter to be safely reduced [38], [73], [112].
Limits on block and transaction size. One of the most
controversial proposed changes is to increase the 1 MB limit
on the size of a block [3]. As transaction volume continues
to steadily increase, this limit may soon be regularly reached.
The upper bound on transaction volume is currently only 7
per second, approximately 1,000 times smaller than the peak