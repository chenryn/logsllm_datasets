# 07｜类型转换：V8是怎么实现1+"2"的？你好，我是李兵。前面我们花了很多篇幅聊了 JavaScript中最基础却很容易被忽略的"对象"，以及 V8是怎么处理"对象"的，今天我们继续来聊另一个非常基础，同时也是很容易被大家忽略的问题，那就是JavaScript 中的"类型系统"。在理解这个概念之前，你可以先思考一个简单的表达式，那就是在 JavaScript中，"1+'2'等于多少？"其实这相当于是在问，在 JavaScript中，让数字和字符串相加是会报错，还是可以正确执行。如果能正确执行，那么结果是等于数字3，还是字符串"3"，还是字符串"12"呢？如果你尝试在 Python 中使用数字和字符串进行相加操作，那么 Python虚拟机会直接返回一个执行错误，错误提示是这样的：    >>> 1+'2'    Traceback (most recent call last):      File "", line 1, in     TypeError: unsupported operand type(s) for +: 'int' and 'str'这段错误代码提示了这是个类型错误，表明 Python并不支持数字类型和字符串类型相加的操作。不过在 JavaScript中执行这段表达式，是可以返回一个结果的，最终返回的结果是字符串"12"。最终结果如下所示：    >>> 1+'2'    >>> "12"为什么同样一条的表达式，在 Python 和 JavaScript中执行会有不同的结果？为什么在 JavaScript中执行，输出的是字符串"12"，不是数字 3或者字符串"3"呢？什么是类型系统 (Type System)？在这个简单的表达式中，涉及到了两种不同类型的数据的相加。要想理清以上两个问题，我们就需要知道类型的概念，以及JavaScript 操作类型的策略。对机器语言来说，所有的数据都是一堆二进制代码，CPU处理这些数据的时候，并没有类型的概念，CPU所做的仅仅是移动数据，比如对其进行移位，相加或相乘。而在高级语言中，我们都会为操作的数据赋予指定的类型，类型可以确认一个值或者一组值具有特定的意义和目的。所以，类型是高级语言中的概念。![](Images/b92ef3e138bc4f667f9cbad0145478a3.png)savepage-src="https://static001.geekbang.org/resource/image/e0/3f/e0dfa246212ec1070ac8aac6bc0f1a3f.jpg"}比如在 C/C++中，你需要为要处理的每条数据指定类型，这样定义变量：    int counter = 100 
# 赋值整型变量    float miles = 1000.0 