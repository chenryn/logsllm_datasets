[23] Hannes Groß, David Schaffenrath, and Stefan Mangard.
Higher-order side-channel protected implementations of
KECCAK. In Euromicro Conference on Digital System
Design, DSD 2017, Vienna, Austria, August 30 - Sept. 1,
2017, pages 205–212. IEEE Computer Society, 2017.
[24] Johann Großschädl, Ben Marshall, Dan
Page,
Thinh Hung Pham, and Francesco Regazzoni. An
instruction set extension to support software-based
masking. IACR Cryptol. ePrint Arch., 2020:773, 2020.
[25] Hendra Guntur, Jun Ishii, and Akashi Satoh. Side-
channel attack user reference architecture board
SAKURA-G. In IEEE 3rd Global Conference on Con-
sumer Electronics, GCCE 2014, Tokyo, Japan, 7-10 Oc-
tober 2014, pages 271–274. IEEE, 2014.
[26] Yuval Ishai, Amit Sahai, and David A. Wagner. Private
circuits: Securing hardware against probing attacks. In
Advances in Cryptology - CRYPTO 2003, 23rd Annual
International Cryptology Conference, Santa Barbara,
California, USA, August 17-21, 2003, Proceedings, vol-
ume 2729 of Lecture Notes in Computer Science, pages
463–481. Springer, 2003.
[27] Pantea Kiaei and Patrick Schaumont. Domain-oriented
masked instruction set architecture for RISC-V. IACR
Cryptol. ePrint Arch., 2020:465, 2020.
[28] David Knichel, Pascal Sasdrich, and Amir Moradi. SIL-
VER - statistical independence and leakage veriﬁcation.
IACR Cryptol. ePrint Arch., 2020:634, 2020.
[29] Paul C. Kocher, Joshua Jaffe, and Benjamin Jun. Dif-
In CRYPTO, volume 1666
ferential power analysis.
of Lecture Notes in Computer Science, pages 388–397.
Springer, 1999.
[30] lowRISC contributors.
https://
opentitan.org/. Retrieved on September 15th, 2020.
Open titan.
[31] David McCann, Elisabeth Oswald, and Carolyn Whit-
nall. Towards practical tools for side channel aware
software engineering: ’grey box’ modelling for instruc-
tion leakages. In 26th USENIX Security Symposium,
USENIX Security 2017, Vancouver, BC, Canada, Au-
gust 16-18, 2017, pages 199–216. USENIX Association,
2017.
[32] Lauren De Meyer, Elke De Mulder, and Michael Tun-
stall. On the effect of the (micro)architecture on the
development of side-channel resistant software. IACR
Cryptol. ePrint Arch., 2020:1297, 2020.
[33] Thorben Moos, Amir Moradi, Tobias Schneider, and
François-Xavier Standaert. Glitch-resistant masking
revisited or why proofs in the robust probing model are
needed. IACR Trans. Cryptogr. Hardw. Embed. Syst.,
2019(2):256–292, 2019.
[34] Elke De Mulder, Samatha Gummalla, and Michael Hut-
ter. Protecting RISC-V against side-channel attacks.
In Proceedings of the 56th Annual Design Automation
Conference 2019, DAC 2019, Las Vegas, NV, USA, June
02-06, 2019, page 45. ACM, 2019.
[35] Svetla Nikova, Christian Rechberger, and Vincent Rij-
men. Threshold implementations against side-channel
In Information and Communi-
attacks and glitches.
cations Security, 8th International Conference, ICICS
2006, Raleigh, NC, USA, December 4-7, 2006, Proceed-
ings, volume 4307 of Lecture Notes in Computer Sci-
ence, pages 529–545. Springer, 2006.
[36] Svetla Nikova, Vincent Rijmen, and Martin Schläffer.
Secure hardware implementation of nonlinear functions
in the presence of glitches. J. Cryptol., 24(2):292–321,
2011.
[37] Ryan O’Donnell. Analysis of Boolean Functions. Cam-
bridge University Press, 2014.
[38] OpenHW Group.
https://github.
com/openhwgroup/cv32e40p, Retrieved on Septem-
ber 15th, 2020.
Cv32e40p.
[39] OpenHW Group. Cva6.
https://github.com/
openhwgroup/cva6. Retrieved on September 15th,
2020.
[40] Kostas Papagiannopoulos and Nikita Veshchikov. Mind
the gap: Towards secure 1st-order masking in software.
In Constructive Side-Channel Analysis and Secure De-
sign - 8th International Workshop, COSADE 2017, Paris,
France, April 13-14, 2017, Revised Selected Papers, vol-
ume 10348 of Lecture Notes in Computer Science, pages
282–297. Springer, 2017.
[41] Andrei Pavlov and Manoj Sachdev. CMOS SRAM
Circuit Design and Parametric Test in Nano-Scaled
Technologies: Process-Aware SRAM Design and Test.
1484    30th USENIX Security Symposium
USENIX Association
Springer Publishing Company, Incorporated, 1st edition,
2008.
[50] Claire Wolf. Yosys open synthesis suite. http://www.
clifford.at/yosys/. Retrieved on July 10th, 2020.
[42] Jean-Jacques Quisquater and David Samyde. Elec-
tromagnetic analysis (EMA): measures and counter-
In E-smart, volume 2140
measures for smart cards.
of Lecture Notes in Computer Science, pages 200–210.
Springer, 2001.
[43] Francesco Regazzoni, Alessandro Cevrero, François-
Xavier Standaert, Stéphane Badel, Theo Kluter, Philip
Brisk, Yusuf Leblebici, and Paolo Ienne. A design ﬂow
and evaluation framework for dpa-resistant instruction
set extensions. In Christophe Clavier and Kris Gaj, edi-
tors, Cryptographic Hardware and Embedded Systems
- CHES 2009, 11th International Workshop, Lausanne,
Switzerland, September 6-9, 2009, Proceedings, volume
5747 of Lecture Notes in Computer Science, pages 205–
219. Springer, 2009.
[44] Mathieu Renauld, François-Xavier Standaert, Nicolas
Veyrat-Charvillon, Dina Kamel, and Denis Flandre.
A formal study of power variability issues and side-
In Advances
channel attacks for nanoscale devices.
in Cryptology - EUROCRYPT 2011 - 30th Annual Inter-
national Conference on the Theory and Applications of
Cryptographic Techniques, Tallinn, Estonia, May 15-19,
2011. Proceedings, volume 6632 of Lecture Notes in
Computer Science, pages 109–128. Springer, 2011.
[45] Oscar Reparaz, Begül Bilgin, Svetla Nikova, Benedikt
Gierlichs, and Ingrid Verbauwhede. Consolidating mask-
ing schemes. In Advances in Cryptology - CRYPTO
2015 - 35th Annual Cryptology Conference, Santa Bar-
bara, CA, USA, August 16-20, 2015, Proceedings, Part
I, volume 9215 of Lecture Notes in Computer Science,
pages 764–783. Springer, 2015.
[46] Madura A. Shelton, Niels Samwel, Lejla Batina,
Francesco Regazzoni, Markus Wagner, and Yuval
Yarom. Rosita: Towards automatic elimination of power-
analysis leakage in ciphers. CoRR, abs/1912.05183,
2019.
[47] Wilson Snyder. Verilator. https://www.veripool.
org/wiki/verilator. Retrieved on July 10th, 2020.
[48] Sarah Thompson and Alan Mycroft. Abstract inter-
pretation of combinational asynchronous circuits. In
Static Analysis, 11th International Symposium, SAS
2004, Verona, Italy, August 26-28, 2004, Proceedings,
volume 3148 of Lecture Notes in Computer Science,
pages 181–196. Springer, 2004.
[49] Elena Trichina. Combinational logic design for AES
subbyte transformation on masked data. IACR Cryptol.
ePrint Arch., 2003:236, 2003.
A Fourier Expansions of Boolean Functions
1
2
a +
a +
1
2
b− 1
2
1
b +
2
ab
1
2
ab
1
2
+
1
AND W (a∧ b) =
+
2
OR W (a∨ b) = −1
2
XOR W (a⊕ b) = ab
XNOR W (a⊕ b) = −ab
NOT W (¬a) = −a
MUX W (c ? a : b) =
1
2
a +
1
2
b− 1
2
ac +
1
2
bc
A.1 AND Gate
W (c?a : b) = p0 + p1 · a + p2 · b + p3 · ab
1
1
1
1
1 −1
1 −1
1 −1 −1
1
1 −1 −1
1
·
⇒
 =
 =
p0
p0
p1
p2
p3
p1
p2
p3
 1
 0.5
1
1
−1
0.5
0.5
−0.5
A.2 Multiplexers
W (c?a : b) =p0 + p1 · a + p2 · b
+ p3 · c + p4 · ab
+ p5 · ac + p6 · bc
+ p7 · abc
We can build a an equation system using all possible input
combinations for the variables a, b, and c and then solve for
the unknown coefﬁcients p0 to p7 as shown below.
1
1
1
1
1
1
1
1
−1 −1
−1
1 −1
1
1
1
−1 −1
−1
−1
1
1
1
1
−1 −1
1 −1 −1
1
1
1
−1 −1 −1
−1
1
1
1
1
1 −1
−1
−1 −1
1
1
1
−1 −1 −1 −1
1
1
1
1
1 −1 −1 −1
−1
1
1
1
·
⇒
 =
 =
p0
p1
p2
p3
p4
p5
p6
p7
p0
p1
p2
p3
p4
p5
p6
p7
1
1
−1
−1
1
−1
1
−1
0
0.5
0.5
0
0
−0.5
0.5
0
USENIX Association
30th USENIX Security Symposium    1485
B Veriﬁcation Flow of COCO
Figure 6: Veriﬁcation ﬂow of COCO. The workﬂow consists of four steps, the creation of the testbench (1), parsing (2), trace (3)
and veriﬁcation(4). In the end, COCO either conﬁrms that the execution is secure or points out the ﬂaw(s) in a speciﬁc gate, in a
speciﬁc cycle.
1486    30th USENIX Security Symposium
USENIX Association
MaskedCipherCreateTestbenchVerilatorTestbenchParse.sv.svSecured IBEXCircuit GraphNetlistTraceExecutionTraceVerifyYes, secure.No, notsecure. Leakin cycle ... atgate ...123.S.py.ys.vcd.py.json.vVerilatorRISC-VASMVerificationConfigurationYosys4Cadical.c