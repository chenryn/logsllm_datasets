# (C) Copyright 1992-1999 Rickard E. Faith and David A. Wheeler
# (Email: PI:EMAIL and PI:EMAIL)

## 许可声明

本手册的完整副本可以自由分发，前提是保留版权声明和许可声明。修改后的版本在满足原版分发条件的前提下，也允许分发，但整个衍生作品必须遵循与本许可相同的条款。

## 免责声明

鉴于 Linux 内核和库不断更新，本手册页的信息可能不准确或已过时。作者对由此产生的错误、遗漏或损害不承担责任。此外，由于本手册免费提供，作者可能未投入与专业工作相同程度的努力来制作它。

## 版权和致谢

格式化或处理过的版本如果未附带源代码，则必须标明本作品的版权及作者信息。

### 修改记录
- 1993年7月25日：由Rik Faith (PI:EMAIL) 修改
- 1996年6月8日：由aeb 修改
- 1999年6月16日：由David A. Wheeler (PI:EMAIL) 修改
- 1999年7月15日：由aeb 修改
- [待办事项] 将此文档拆分为描述宏的 `man.7` 和描述Linux手册页约定的 `manpage.7`

# MAN (7) - Linux Programmer's Manual
**名称**: man - 格式化手册页的宏  
**概览**:
```
groff -Tascii -man file ...
groff -Tps -man file ...
man [section] title
```

## 描述
本手册页解释了 `.groff tmac.man` 宏包（通常称为 `man` 宏包）及其相关惯例，用于创建Linux的手册页。开发者可以使用这个宏包来编写或移植手册文档。该宏包与其他版本基本兼容，因此移植不是问题（但请注意，NET-2 BSD 发布中使用了一个完全不同的宏包 `mdoc`，参见 `mdoc(7)`）。

注意：NET-2 BSD mdoc 手册页也可以用 `groff` 处理，只需指定 `-mdoc` 选项而不是 `-man` 选项。推荐使用 `-mandoc` 选项，因为它会自动选择合适的宏包。

## 导言
手册页的第一个命令（注释行之后）应为：
```
.TH "title section date source manual"
```
其中：
- **title**: 手册页标题（例如，`MAN`）
- **section**: 手册页章节号（例如，`7`）
- **date**: 最后修改日期
- **source**: 命令来源（例如，`GNU`, `NET-2`, `SLS Distribution`, `MCC Distribution`；系统调用则为内核版本如 `Linux 0.99.11`；库调用则为函数来源如 `GNU`, `BSD 4.3`, `Linux DLL 4.4.1`）
- **manual**: 手册标题（例如，`Linux Programmer's Manual`）

注意：BSD mdoc 格式的手册页以 `.Dd` 命令开始，而非 `.TH`。

### 手册章节定义
- **1**: 用户可从 shell 运行的命令
- **2**: 系统调用
- **3**: 库调用
- **4**: 特殊文件（如 `/dev` 目录中的文件）
- **5**: 文件格式和约定
- **6**: 游戏
- **7**: 宏包和约定
- **8**: 系统管理命令
- **9**: 内核例程（已废弃）

## 段落
段落以 `.SH` 开始，后跟标题名。如果标题包含空格且与 `.SH` 在同一行，则需加双引号。建议的标题包括：NAME, SYNOPSIS, DESCRIPTION, RETURN VALUE, EXIT STATUS, ERROR HANDLING, ERRORS, OPTIONS, USAGE, EXAMPLES, FILES, ENVIRONMENT, DIAGNOSTICS, SECURITY, CONFORMING TO, NOTES, BUGS, AUTHOR, SEE ALSO。

唯一必需的标题是 NAME，它应作为手册页的第一段，并紧跟对该命令的简短描述。例如：
```
.SH NAME
chess \\- the game of chess
```
请务必按照这种格式编写，以便 `makewhatis(8)` 能正确生成 `whatis(1)` 和 `apropos(1)` 的简短描述。

其他标准段落的内容如下：
- **SYNOPSIS**: 简要描述命令或函数接口。
- **DESCRIPTION**: 解释命令、函数或格式的用途。
- **RETURN VALUE**: 列出程序或函数返回的值及其原因。
- **EXIT STATUS**: 列出可能的退出状态及其原因。
- **OPTIONS**: 列出程序可用的选项及其作用。
- **USAGE**: 描述高级使用方法。
- **EXAMPLES**: 提供示例说明如何使用该功能、文件或命令。
- **FILES**: 列出程序或函数使用的文件。
- **ENVIRONMENT**: 列出影响程序的所有环境变量。
- **DIAGNOSTICS**: 描述常见的错误概述及解决办法。
- **SECURITY**: 讨论安全问题和注意事项。
- **CONFORMING TO**: 描述实现的标准或约定。
- **NOTES**: 提供杂项注意事项。
- **BUGS**: 列出局限、已知缺点或其他问题。
- **AUTHOR**: 列出程序或文件的作者及联系方式。
- **SEE ALSO**: 以字母顺序列出相关的手册页。

## 字体
在 Linux 系统下，手册页字体有以下约定：
- 函数参数通常用下划线（或斜体），例如：`int myfunction(int argc, char **argv);`
- 文件名用下划线（或斜体），例如：`/usr/include/stdio.h`，但在 SYNOPSIS 中包含的文件用黑体，例如 `#include <stdio.h>`
- 专用宏（通常大写）用黑体，例如 `MAXINT`
- 错误代码用黑体
- 对其他手册页的引用用黑体，例如 `man(7)`

设置字体的宏命令如下：
- **.B**: 黑体
- **.BI**: 黑体和下划线交替
- **.BR**: 黑体和普通体交替
- **.I**: 下划线（或斜体）
- **.IB**: 下划线（或斜体）和黑体交替
- **.IR**: 普通体和下划线（或斜体）交替
- **.RB**: 普通体和下划线（或斜体）交替
- **.RI**: 小号字和黑体交替
- **.SB**: 小号字和黑体交替
- **.SM**: 小号字（用于缩写）

每个命令最多可以有六个小节的参数，小节之间以空格隔开。如果某小节含有空格，则需要给其加上双引号。各小节在显示时无间隔，因此 `.BR` 命令可以指定一个黑体词后跟一个普通体标点。如果命令后无参数，则命令作用于下一行。