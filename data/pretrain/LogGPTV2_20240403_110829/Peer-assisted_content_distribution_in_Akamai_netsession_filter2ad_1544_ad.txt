on the content provider from who the user ﬁrst downloaded
the binary. Most users simply stick with whatever the de-
fault is. This tendency is well known in UI design [21, 31],
but it also suggests that users either don’t care enough about
the uploads to change the setting or are not aware of the
choice, despite its mention in the NetSession user agreement.
Uploading in peer-to-peer CDNs carries the risk of legal
exposure and/or degraded network performance [29]. As a
peer-assisted CDN, NetSession can avoid the ﬁrst problem
Customer
p2p (%)
A B C D E
50% P2P 0 20 40 60 80 100 0.1 1 10 100% of downloads in AS YAvg download speed (Mbps)Edge only>50% P2P 0 20 40 60 80 100 1 10 100 1000 10000 100000Peer efficiency (%)File copies registered by peers in October 2012 0 20 40 60 80 100 0 5 10 15 20 25 30 35 40Peer efficiency (%)Number of peers initially returned by the control plane 0 5 10 15 20 25 301GBPause rate (%)File sizeInfrastructure-onlyPeer-assistedAll385.3 Do peers improve global coverage?
In theory, a hybrid CDN has another advantage over its
infrastructure-based counterparts: it may be easier to obtain
a globally distributed population of peers than to establish
a truly global infrastructure. Thus, it should be possible for
a hybrid system to provide better service for customers in
under-served regions, where the closest infrastructure nodes
are far away, but peers may be nearby.
To test whether this is the case for NetSession, we ag-
gregated the completed downloads on a per-country basis,
and we counted the number of bytes served by the infras-
tructure and by the peers. We then classiﬁed each country
into one of three groups, which are shown as colored dots
in Figure 8: countries where the infrastructure serves bytes
more than the peers (circle), between 50% and 100% of the
peers (plus), or less than 50% of the peers (square). Since
not all content providers use peer-assisted downloads, and
the popularity of the providers varies between regions, we
show results for one typical, p2p-enabled provider here.
We ﬁnd that, for NetSession, the picture is mixed: al-
though the peers tend to contribute more in some regions,
such as Africa and South America, the contributions do not
vary much overall. We suspect that this is because NetSes-
sion relies on edge servers from Akamai’s main CDN, which
already has very good coverage around the globe.
Another potential beneﬁt of a large peer population is
that downloading peers might ﬁnd a copy of the requested
content within their local network, e.g., in a corporate LAN.
In October 2012 this case appears to have been rare, but this
could change, e.g., when NetSession is used to distribute
large software updates.
5.4 Summary
NetSession demonstrates that peer-assisted CDNs can in-
deed deliver the key beneﬁts of both peer-to-peer and
infrastructure-based CDNs: they can oﬄoad a considerable
fraction of the traﬃc to the peers, without a signiﬁcant loss
of speed or reliability. NetSession’s 80% peer eﬃciency de-
pends on many factors that may be diﬀerent in other sys-
tems, but it provides a lower bound on what peer-assisted
CDNs can achieve in a large-scale commercial deployment.
6. RISKS
We now turn to the question of how well NetSession, as an
instance of a peer-assisted CDN, can avoid the risks inherent
in this architecture. We again focus on two aspects we can
examine quantitatively using our trace: 1) whether NetSes-
sion aﬀects the traﬃc balance of ISPs, and 2) whether the
presence of user-managed machines is causing problems.
6.1 Do ISPs suffer from NetSession?
The impact of peer-assisted CDNs on ISPs, and the potential
conﬂict of interest between the two, has been a cause of
some concern [17, 24, 35]. To determine how this conﬂict
aﬀects NetSession, we used detailed traﬃc statistics in our
trace, which included, for each peer-assisted download, the
GUID of each peer that has sent any content bytes to the
downloading client. We ﬁrst used the login data to map each
GUID to the IP address it was using at the time, and then
we used the EdgeScape data to map the IP address to the
number of the Autonomous System (AS) to which it belongs.
The result is a set of (N, AS1, AS2) tuples, which describe
a ﬂow of N bytes from AS1 to AS2. We aggregated the
Figure 8: Peer contributions in diﬀerent regions (for
one exemplary content provider).
ﬂows per AS, and we report our results at the granularity
of ASes. We include only the content bytes, but not the
packet headers or the protocol overhead; including the latter
would add a small constant factor. We also neglect bytes
sent by the infrastructure, since these would be sent by an
infrastructure-based CDN as well, and since most of them
would normally be sent from an edge server within the same
AS anyway.
Which ASes are sending the most? Overall, our trace
shows that 895 TB of content bytes were sent peer-to-peer,
and that the peers involved in these transmissions were lo-
cated in roughly 22,000 diﬀerent ASes. (The number is dif-
ferent from that in Table 1 because not all GUIDs partic-
ipated in a p2p transaction.) 18% of this traﬃc was sent
between peers in the same AS; we do not further consider
such intra-AS traﬃc here because it does not aﬀect the inter-
AS bandwidth cost.
To determine how the inter-AS traﬃc was distributed
across the ASes, we sorted the ASes by the number of bytes
they sent to peers in other ASes. Figure 9(a) shows the re-
sult as a CDF. Roughly half of the ASes did not send any
inter-AS bytes at all, and 98% sent less than 163 GB over
the entire month. However, there is a “heavy tail” of ASes
that sent substantially more; the top contributor sent ap-
proximately 34.2 TB.
Figure 9(b) shows a diﬀerent perspective on this result: a
point (x, y) on this plot indicates that the cumulative con-
tribution of ASes contributing less than x bytes amounted
to y% of the total inter-AS p2p traﬃc. This plot shows
that 98% of the ASes contributed just 10% of the bytes; the
remaining 2% (394 ASes) were responsible for 90% of the
p2p traﬃc. We refer to the former as “light” and “heavy”
uploaders, respectively. Figure 9(c) shows that this uneven
distribution has a natural explanation; the heavy uploaders
simply contain a lot more peers.
How balanced is the traﬃc? Sending a large number of
bytes to its neighbors is not necessarily expensive for an AS,
as long as it receives an equally large number of bytes from
them; balanced connections with peering ASes may be con-
sidered “settlement free”. To examine whether NetSession’s
p2p traﬃc aﬀects this balance, we separately counted the
inter-AS bytes each AS sent and received. Figure 10 shows
the result as a scatterplot. Note that the scales are logarith-
mic; since zero does not appear on a logarithmic scale, the
points for ASes that have not uploaded and/or downloaded
anything appear near the axes.
Figure 10 shows that ASes often have a substantial rel-
ative imbalance; many receive several Gigabytes but send
39(a) Inter-AS traﬃc
(b) Contributions of diﬀerent ASes
(c) Distinct IP addresses per AS
Figure 9: Traﬃc balance results.
Figure 10: p2p bytes uploaded vs. downloaded for
an AS. Only the bytes which cross AS boundaries
are considered here.
hardly anything, or vice versa. However, this imbalance
mostly aﬀects ASes that are not carrying very much NetSes-
sion p2p traﬃc anyway. The traﬃc of the “heavy” uploaders
(which appear in red towards the upper right end of the plot)
tends to be well-balanced, i.e., they usually receive as much
as they send. At a high level, this is not unexpected: if up-
loaders and downloaders are distributed roughly uniformly,
the resulting traﬃc is naturally balanced. However, there
are many eﬀects that could bias this pattern—for instance,
clients in certain ASes might have a higher upstream band-
width and might therefore be chosen to upload more often.
NetSession avoids such biases in part by limiting the number
of times a peer will upload a ﬁle it has locally cached.
Note that we have only considered the origin and the des-
tination of the traﬃc here. We cannot reliably estimate the
eﬀect of transit traﬃc because our data set does not con-
tain traceroutes. Based on CAIDA’s AS topology data [6],
we estimate that out of the total inter-AS p2p bytes ex-
changed between the “heavy” uploaders, approximately 35%
were exchanged between those that had a direct connection
with each other.
So far, we have seen that the overall incoming traﬃc of an
AS is largely balanced by its overall outgoing traﬃc. How-
ever, a pairwise imbalance could still exist between pairs
of ASes. Figure 11 shows that this is not the case: anal-
ogous to above, the ﬁgure contains the distribution of p2p
bytes exchanged between pairs of “heavy” uploaders that