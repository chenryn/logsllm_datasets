 **Neil Hart** opened **SPR-2649** and commented
There is a Sun bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4665132
that causes us to fail when loading our XML config files. When using this
within JWS and with a very limit security policy we get the following stack
trace:
java.security.AccessControlException: access denied
(java.lang.RuntimePermission getClassLoader)  
at java.security.AccessControlContext.checkPermission(Unknown Source)  
at java.security.AccessController.checkPermission(Unknown Source)  
at java.lang.SecurityManager.checkPermission(Unknown Source)  
at java.lang.Thread.getContextClassLoader(Unknown Source)  
at
org.springframework.util.ClassUtils.getDefaultClassLoader(ClassUtils.java:101)  
at
org.springframework.core.io.DefaultResourceLoader.(DefaultResourceLoader.java:53)  
at
org.springframework.context.support.AbstractApplicationContext.(AbstractApplicationContext.java:178)  
at
org.springframework.context.support.AbstractRefreshableApplicationContext.(AbstractRefreshableApplicationContext.java:78)  
at
org.springframework.context.support.AbstractXmlApplicationContext.(AbstractXmlApplicationContext.java:58)  
at
org.springframework.context.support.ClassPathXmlApplicationContext.(ClassPathXmlApplicationContext.java:90)  
at
com.creditex.spring.SpringRegistry$StaticSpringRegistry.add(SpringRegistry.java:127)
Can we/you change the ClassUtils.getDefaultClassLoader() to get the Thread's
classLoader in a try/catch block? Like this:
    public static ClassLoader getDefaultClassLoader() {
                ClassLoader cl = null;
                try {
    	        cl = Thread.currentThread().getContextClassLoader();
                }
    	catch (Throwable ex) {
    		if (logger.isDebugEnabled()) {
    			logger.debug("Getting the thread class loader cause a failure: " + ex);
    		}
    	}
    	if (cl == null) {
    		// No thread context class loader -> use class loader of this class.
    		cl = ClassUtils.class.getClassLoader();
    	}
    	return cl;
    }
The current workaround I have now is to duplicate the class hierarchy:
AbstractApplicationContext  
AbstractRefreshableApplicationContext  
AbstractXmlApplicationContext  
ClassPathXmlApplicationContext
so that my AbstractApplicationContext passes in the ClassLoader to
DefaultResourceLoader
Thanks
* * *
**Affects:** 1.2.8, 2.0 RC3, 2.0 RC4
**Backported to:** 1.2.9