User: 如何在一台 Linux 服务器上安装 Docker，并使用 Docker 部署一个示例应用程序？
Assistant: 安装 Docker：

1. 更新 apt 包管理器：`sudo apt-get update`

2. 安装需要的依赖包：`sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release`

3. 添加 Docker GPG 密钥：`curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg`

4. 添加 Docker 软件源：`echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null`

5. 更新 apt 包管理器：`sudo apt-get update`

6. 安装 Docker：`sudo apt-get install docker-ce docker-ce-cli containerd.io`

7. 启动 Docker 服务：`sudo systemctl start docker`

8. 验证 Docker 是否安装成功：`sudo docker run hello-world`

部署示例应用程序：

1. 创建 Docker 镜像文件夹：`mkdir docker-example`

2. 进入该文件夹：`cd docker-example`

3. 创建一个名为 Dockerfile 的文件，并将以下内容粘贴到文件中：

``` 
FROM node:12-alpine

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 3000

CMD [ "npm", "start" ]
```

4. 创建 Node.js 应用程序：

- 创建一个名为 app.js 的文件，并将以下内容粘贴到文件中：

``` 
const express = require('express')
const app = express()

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(3000, () => {
  console.log('Example app listening on port 3000!')
})
```

- 创建一个名为 package.json 的文件，并将以下内容粘贴到文件中：

``` 
{
  "name": "docker-example",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "scripts": {
    "start": "node app.js"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.17.1"
  }
}
```

5. 构建 Docker 镜像：`sudo docker build -t docker-example .`

6. 运行 Docker 容器：`sudo docker run -p 8080:3000 docker-example`

7. 访问 http://localhost:8080/，应该可以看到网页显示 "Hello World!"。