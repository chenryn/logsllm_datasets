close(3)                                = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8fc6715000
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8fc6713000
arch_prctl(ARCH_SET_FS, 0x7f8fc6713740) = 0
mprotect(0x7f8fc6504000, 16384, PROT_READ) = 0
mprotect(0x60a000, 4096, PROT_READ)     = 0
mprotect(0x7f8fc6730000, 4096, PROT_READ) = 0
munmap(0x7f8fc6716000, 98854)           = 0
brk(NULL)                               = 0x90d000
brk(0x92e000)                           = 0x92e000
brk(NULL)                               = 0x92e000
open("/usr/lib/locale/locale-archive", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=106075056, ...}) = 0
mmap(NULL, 106075056, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f8fbfc17000
close(3)                                = 0
open("/usr/share/locale/locale.alias", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=2502, ...}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8fc672e000
read(3, "# Locale name alias data base.\n#"..., 4096) = 2502
read(3, "", 4096)                       = 0
close(3)                                = 0
munmap(0x7f8fc672e000, 4096)            = 0
open("/usr/lib/locale/UTF-8/LC_CTYPE", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 1), ...}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f8fc672e000
write(1, "Hello world", 11Hello world)             = 11
close(1)                                = 0
munmap(0x7f8fc672e000, 4096)            = 0
close(2)                                = 0
exit_group(0)                           = ?
+++ exited with 0 +++ 
```
> execve("/usr/bin/printf "，["printf "，" %s "，" Hello world"]，[/ *47 vars* /]) = 0
第一个系统调用是 *execve()* ，它做了三件事:
*   操作系统(OS)停止(父进程的)复制进程。
*   OS 加载新程序(本例中: *printf()* )，并启动新程序。
*   *execve()* 用从 *printf* 可执行文件加载的新内容替换当前进程内存堆栈的定义部分。
这一行的第一个单词 execve 是正在执行的系统调用的名称。第一个参数必须是二进制可执行文件或脚本的路径。第二个是传递给新程序的参数字符串数组。按照惯例，这些字符串的第一个应该包含与正在执行的文件相关联的文件名。第三个参数必须是环境变量。等号后面的数字(在本例中是 0)是 execve 系统调用返回的值，表示调用成功。
> open("/usr/lib/locale/UTF-8/LC _ CTYPE "，O_RDONLY|O_CLOEXEC) = -1 ENOENT(没有这样的文件或目录)
在这一行，程序试图*打开()*文件*/usr/lib/locale/UTF-8/LC _ CTYPE*。然而，系统调用失败(状态为-1 ),并显示描述性错误消息*没有这样的文件或目录*,因为文件未找到(e not)。
> brk(NULL) = 0x90d000
> 
> brk(0x92e000) = 0x92e000
> 
> brk(NULL) = 0x92e000
系统调用 *brk()* 用于增加或减少进程的数据段。它返回该进程的数据段将要结束的新地址。
> open("/lib64/libc.so.6 "，O_RDONLY|O_CLOEXEC) = 3
> 
> 阅读(3，" \ 177 elf \ 2 \ 1 \ 1 \ 3 \ 0 \ 0 \ 0 \ 0 \ 0 \ 0 \ 3 \ 0 > \ 0 \ 1 \ 0 \ 0 \ 0 \ 20 & \ 2 \ 0 \ 0 \ 0 \ 0 "..., 832) = 832
在上面几行控制台输出中，我们看到一个成功的 *open()* 调用，随后是 *read()* 系统调用。
在 *open()* 中，第一个参数是您想要使用的文件的路径，第二个参数定义了权限。在本例中，O_RDONLY 表示文件是只读的，而 [O_CLOEXEC](https://man7.org/linux/man-pages/man2/open.2.html) 为打开的文件启用 close-on-exec 标志。这有助于避免多线程程序中的竞争情况，即一个线程与另一个线程同时打开文件描述符。3 表示用于打开文件的文件描述符。因为 fd 0，1，2 已经被 stdin，stdout 和 stderr 占用了。因此，第一个未使用的文件描述符在文件描述符表中是 3。
如果*打开()*
在 *read()* 中，第一个参数是文件描述符，它是 3(文件是由 *open()* 使用这个文件描述符打开的)。第二个参数是从中读取数据的缓冲区，第三个参数是缓冲区的长度。返回值是 832，这是读取的字节数。
> close(3) = 0
内核使用关闭系统调用来关闭文件描述符。对于大多数文件系统，程序使用关闭系统调用来终止对文件系统中文件的访问。=符号后的 0 表示系统调用成功。
> 写(1，“你好世界”，11 你好世界)= 11
在上一节中，我们描述了 *write()* 系统调用及其参数。每当我们在视频屏幕上看到任何输出，它都来自名为/dev/tty 的文件，并通过 fd 1 写入屏幕上的 stdout。第一个参数是文件描述符，第二个参数是包含要写入的信息的缓冲区，最后一个参数包含字符数。如果成功，将返回写入的字节数(零表示未写入任何内容)，在本例中为 11。
> +++用 0 ++退出
这表明程序成功退出，退出代码为 0。在 Linux 程序中，退出代码 0 通常表示成功执行和终止。
你不需要记住所有的系统调用或者它们做了什么，因为你可以在需要的时候参考文档。在运行 man 命令之前，请确保安装了以下软件包:
```sh
$ rpm -qa | grep -i man-pages
man-pages-3.53-5.el7.noarch 
```
使用系统调用名运行下面的`man`命令，查看该系统调用的文档(例如，execve):
`man 2 execve`
除了系统调用，strace 还可以用来检测程序正在访问的文件。在上面的跟踪中，我们有一个系统调用 *open("/lib64/libc.so.6 "，O_RDONLY|O_CLOEXEC) = 3* ，它打开 libc 共享对象/lib64/libc.so.6，这是各种标准函数的 C 实现。在这个文件中，我们看到了打印 *Hello World* 所需的 *printf()* 定义。
Strace 也可以用来检查一个程序是否被挂起或卡住。当我们有了跟踪，我们也可以观察程序在哪个操作上被卡住了。此外，当我们进行跟踪时，我们还可以找到错误(如果有的话)来指出程序挂起/停滞的原因。Strace 可以非常有助于找到程序运行缓慢背后的原因。
尽管 strace 有上述的用途，但是如果你在生产环境中运行跟踪，strace 不是一个好的选择。它引入了大量的开销。根据 Red Hat 的高级软件工程师阿纳尔多·卡瓦略·德·梅洛进行的性能测试，使用 strace 跟踪的过程运行速度慢了 173 倍，这对生产环境来说是灾难性的。