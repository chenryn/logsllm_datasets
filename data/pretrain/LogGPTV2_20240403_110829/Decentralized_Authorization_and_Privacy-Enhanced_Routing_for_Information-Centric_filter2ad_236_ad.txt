objects were published. The results are shown in Table 1.
We can see that the time overhead added by signatures
is minimal. Encryption has a more noticeable temporal
overhead. However, when the capabilities have already been
cached (as is the common case in practice), the overhead
is much lower since the expensive MA-ABE operations do
not have to be performed. A small amount of bandwidth
overhead is introduced by the use of signatures since the node
descriptions contain certiﬁcates. The encryption bandwidth
overhead is from the capabilities that must be sent with each
data object, and the requests for MA-ABE encryption and
decryption attributes.
Macro-Benchmark. To obtain repeatable tests, we use
emulation to model real-world mobile performance on a Linux
server. The same source code was cross-compiled to ARM
code that ran on Android, and x86 binaries that ran in
Linux containers for the emulation. We used the CPULimit
tool with a threshold of 30% to slow the performance of
Haggle processes to match the performance of our Android
devices, as reported in Table 1. We used CORE and EMANE
for resource isolation, node mobility modeling, and network
emulation. Haggle instances were started in virtual nodes
that moved in the pattern described in the scenario below.
Scenario. The scenario setting is illustrated in Figure 4.
The events run for 900 seconds with two authority nodes,
A1 and A2, and seven publishers, P1 ··· P7. At 1, 5, 11, and
16 seconds, one node in each group publishes a data object
with an access policy involving both authorities. All nodes
subscribe to these data objects, so we expect 112 intra-group
deliveries and 136 inter-group deliveries. Starting at time 21,
there are seven intra-group data objects published (with an
access policy involving only one authority), with a total of
100 expected deliveries.
Results. Our emulation results are presented in Figure 5.
We plot the number of data objects received at each point
in time. We measured this for ﬁve diﬀerent conﬁgurations:
no-security, signatures, signatures-static, encryption, and
encryption-static. The static cases refer to settings where
nodes were pre-conﬁgured with the appropriate certiﬁcates
and MA-ABE attributes, so they did not need to make
SecurityDataRequests. These settings are useful in scenarios
where the network topology is known beforehand.
In all cases except encryption, publishing can start from
time 1, as there is no need to wait for MA-ABE attributes.
Thus the 212 intra-group deliveries can complete quickly.
38
System Performance
 350
 300
 250
t
e
m
i
i
t
y
b
d
e
v
e
c
e
r
s
t
c
e
b
o
a
t
a
D
j
 200
 150
 100
 50
 0
 0
encryption
encryption-static
no-security
signatures
signatures-static
 100
 200
 300
 400
 500
 600
 700
 800
 900
Time (s)
Figure 5: Data objects delivered over time.
The remaining 136 inter-group deliveries require the use of
mules, so they take slightly longer to complete.
For encryption, there can be no publishing before time
21, due to the need for MA-ABE attributes. The initial 100
intra-group deliveries then complete gradually as publishers
get the keys they need from the local authority and then
so do the subscribers. There are no further deliveries until
the 250 second point, by when mules have arrived with keys
from authorities located in the other group. Publishing then
begins, and intra-group deliveries commence. The mules
make some more trips and by the 500 second mark the rate
of delivery jumps as inter-group deliveries complete.
We can see that signatures and encryption aﬀect delivery
latency. This is mostly due to the SecurityDataRequests
and SecurityDataResponses that have to travel through the
mules. With static provisioning, this overhead is eliminated,
and the only extra latency is due to the time and space
overhead seen in the micro benchmarks in Table 1.
8. RELATED WORK
In the 1980s and 1990s, the Internet was primarily used
for point-to-point communication. After the advent of the
Web, it was increasingly used for content distribution. In
2000, TRIAD described the use of a content layer to handle
routing, caching, and transformation [12]. Directory service
responses were to be authenticated with digital signatures,
while communication between endpoints was to be protected
at the network layer, with an analog of IPSec. OceanStore
proposed distributed access control using content encryption
[20]. The assurance provided by our framework subsumes
this. In particular, the integrity of metadata (used for content
search) is protected with signatures, and access to content
is limited via encryption. By 2009, CCN [11] and its deriva-
tives [19] had introduced ﬂow balance, with interests being
consumed by data ﬂowing back to subscribers. This provides
resistance to denial of service attacks. In future work, we
plan to leverage strong node identities to explore reputa-
tion tracking and anomaly detection for combating similar
threats.
Our work diﬀers from previous research on securing ICNs
in several respects. We do not assume the existence of an
external infrastructure for providing cryptographic keys [19].
Instead each node deﬁnes its own identity (via self-generated
signing and veriﬁcation keys) that is then attested by nodes
that it deems to be authorities. Similarly, we do not rely
on authorization services for access policies to be resolved
[15]. We use a cryptographic primitive that supports ﬂexible
speciﬁcation of access control policies during encryption. Res-
olution can thus occur as soon as content is available, rather
than when a policy server becomes reachable. Moreover,
we provide the ﬁrst ICN implementation of cryptographic
access control that supports the use of multiple, independent
authorities. We enhance the privacy of individual interests,
rather than just preventing surveillance at scale [4]. We do
not rely on self-certifying names for integrity assurance [17].
By decoupling naming from content identiﬁcation, we allow
ﬂexible resolution of interests to content. At the same time
we provide strong assurance that a piece of content came
from the claimed publisher. In particular, we do not require
applications to verify the authenticity of content [14]. Finally,
we provide the ﬁrst design and implementation of certiﬁed
content lineage, allowing subscribers to identify and verify
both the origin as well as the path through which content
arrived from a publisher.
39
9. CONCLUSION
We described the design, implementation, and evaluation
of a security architecture for ensuring the integrity and conﬁ-
dentiality of content, as well as the metadata that describes
it. The metadata is utilized by brokers that mediate between
publishers and subscribers, based on the match between con-
tent tags and node interests. The protection of this metadata
is necessary to mitigate attacks on the privacy of publish-
ers and subscribers. It is worth noting that this problem
is particularly challenging when every node can serve as a
publisher, broker, and subscriber.
We utilize a recent cryptographic primitive, multi-authority
attribute-based encryption, to reduce the access control prob-
lem to credential management. Nodes are issued credentials
with their attributes (such as their name, organization, or
location) from one or more authorities. Access policies can be
declared as any Boolean combination of node attributes. This
allows access to content and its descriptive tags to be scoped
by publishers. Similarly, subscribers can cryptographically
limit the nodes that can access their interests.
Our work is an extension of the Haggle opportunistic
networking system. We report on the overhead added for
ensuring the integrity and conﬁdentiality of content on both
Linux desktops and Android smartphones. We found that
integrity protection does not add noticeable overhead. Typ-
ical conﬁdentiality protection (where access policies have
been previously deﬁned) adds modest overhead. Publication
with new access policies adds latency to the transfer of con-
tent. However, this does not reduce the quantity of data
objects that get through in a real scenario with mobile nodes.
Acknowledgements. We thank Mark-Oliver Stehr for his
insights on extending Haggle. This material is based upon
work partially supported by the National Science Founda-
tion under Grant IIS-1116414. Any opinions, ﬁndings, and
conclusions or recommendations expressed in this material
are those of the authors and do not necessarily reﬂect the
views of the National Science Foundation.
10. REFERENCES
[1] Bengt Ahlgren, Christian Dannewitz, Claudio Imbrenda,
Dirk Kutscher, and Borje Ohlman, A survey of
information-centric networking, IEEE Communications
Magazine, Vol. 50(7), 2012.
[2] Jeﬀ Ahrenholz, Comparison of CORE Network Emulation
Platforms, 29th IEEE Military Communications Conference,
2010.
[3] Apple AirDrop,
https://www.apple.com/ios/features/#airdrop
[4] Somaya Arianfar, Teemu Koponen, Barath Raghavan, and
Scott Shenker, On preserving privacy in content-oriented
networks, ACM SIGCOMM Workshop on
Information-Centric Networking, 2011.
[5] Android Beam, http:
//developer.android.com/guide/topics/connectivity/nfc/
[6] Mihir Bellare, Ran Canetti, and Hugo Krawczyk, Keying
hash functions for message authentication, 16th Annual
International Cryptology Conference on Advances in
Cryptology, 1996.
[7] John Bethencourt, Amit Sahai, and Brent Waters,
Ciphertext-policy attribute-based encryption, 28th IEEE
Symposium on Security and Privacy, 2006.
[8] Dan Boneh, Giovanni Di Crescenzo, Rafail Ostrovsky, and
Giuseppe Persiano, Public key encryption with keyword
search, 23rd International Conference on the Theory and
Applications of Cryptographic Techniques, Springer, 2004.
[9] Dan Boneh, Amit Sahai, and Brent Waters, Functional
encryption: Deﬁnitions and challenges, 8th Theory of
Cryptography Conference, Springer, 2011.
[10] DARPA CBMEN, http:
//www.darpa.mil/NewsEvents/Releases/2013/08/21.aspx
[11] PARC CCN, https://www.parc.com/services/focus-area/
content-centric-networking/
[12] David Cheriton and Mark Gritter, TRIAD: A new
next-generation Internet architecture, 2000.
[13] Reza Curtmola, Juan Garay, Seny Kamara, and Rafail
Ostrovsky, Searchable symmetric encryption: Improved
deﬁnitions and eﬃcient constructions, 13th ACM Conference
on Computer and Communications Security, 2006.
[14] Seyed Kaveh Fayazbakhsh, Yin Lin, Amin Tootoonchian, Ali
Ghodsi, Teemu Koponen, Bruce Maggs, K.C. Ng, Vyas
Sekar, and Scott Shenker, Less pain, most of the gain:
incrementally deployable ICN, ACM SIGCOMM Conference,
2013.
[15] Nikos Fotiou, Giannis Marias, and George Polyzos, Access
control enforcement delegation for information-centric
networking architectures, 2nd ACM Workshop on
Information-Centric Networking, 2012.
[16] Sanjam Garg, Craig Gentry, Shai Halevi, Mariana Raykova,
Amit Sahai, and Brent Waters, Candidate
indistinguishability obfuscation and functional encryption
for all circuits, 54th IEEE Symposium on Foundations of
Computer Science, 2013.
[17] Ali Ghodsi, Teemu Koponen, Jarno Rajahalme, Pasi
Sarolahti, and Scott Shenker, Naming in content-oriented
architectures, 1st ACM Workshop on Information-Centric
Networking, 2011.
[18] Allison Lewko and Brent Waters, Decentralizing
attribute-based encryption, 30th International Conference
on the Theory and Applications of Cryptographic
Techniques, Springer, 2011.
[19] Van Jacobson, Diana Smetters, James Thornton, Michael
Plass, Nicholas Briggs, and Rebecca Braynard, Networking
named content, 5th International Conference on Emerging
Networking Experiments and Technologies, 2009.
[20] John Kubiatowicz, David Bindel, Yan Chen, Steven
Czerwinski, Patrick Eaton, Dennis Geels, Ramakrishna
Gummadi, Sean Rhea, Hakim Weatherspoon, Westley
Weimer, Chris Wells, and Ben Zhao, OceanStore: An
architecture for global-scale persistent storage, 9th
International Conference on Architectural Support for
Programming Languages and Operating Systems, 2000.
[21] Erik Nordstrom, Christian Rohner, and Per Gunningberg,
Haggle: Opportunistic mobile content sharing using search,
Computer Communications, Vol. 48, Elsevier, 2014.
[22] Ronald Rivest, Adi Shamir, Leonard Adleman, A method for
obtaining digital signatures and public-key cryptosystems,
Communications of the ACM, Vol. 21(2), 1978.
[23] Amit Sahai and Brent Waters, Fuzzy identity-based
encryption, 24th International Conference on the Theory
and Applications of Cryptographic Techniques, 2005.
[24] Transport Layer Security, http://tools.ietf.org/html/rfc5246
[25] Samuel Wood, James Mathewson, Joshua Joy, Mark-Oliver
Stehr, Minyoung Kim, Ashish Gehani, Mario Gerla, Hamid
Sadjadpour, and J.J. Garcia-Luna-Aceves, ICEMAN: A
system for eﬃcient, robust and secure situational awareness
at the network edge, 32nd IEEE Military Communications
Conference, 2013.
[26] Samuel Wood, James Mathewson, Joshua Joy, Mark-Oliver
Stehr, Minyoung Kim, Ashish Gehani, Mario Gerla, Hamid
Sadjadpour, and J.J. Garcia-Luna-Aceves, ICEMAN: A
practical architecture for situational awareness at the
network edge, Logic, Rewriting, and Concurrency, Lecture
Notes in Computer Science, Vol. 9200, Springer, 2015.
[27] George Xylomenos, Christopher Ververidis, Vasilios Siris,
Nikos Fotiou, Christos Tsilopoulos, Xenofon Vasilakos,
Konstantinos Katsaros, and George Polyzos, A survey of
information-centric networking research, IEEE
Communications Surveys and Tutorials, Vol. 16(2), 2014.
40