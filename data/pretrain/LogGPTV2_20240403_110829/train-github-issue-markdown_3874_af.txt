    [ 84%] Linking CXX executable ../bin/stream_test
    [ 84%] Linking CXX executable ../bin/GraphTest
    [ 84%] Linking CXX executable ../bin/common_subexpression_elimination_test
    [ 84%] Linking CXX executable ../bin/BinaryMatchImplTest
    [ 84%] Linking CXX executable ../bin/AlgorithmsTest
    [ 84%] Linking CXX executable ../bin/observer_test
    [ 84%] Linking CXX executable ../bin/device_test
    [ 84%] Built target BinaryMatchImplTest
    [ 84%] Built target common_subexpression_elimination_test
    [ 84%] Built target AlgorithmsTest
    [ 84%] Built target GraphTest
    [ 84%] Built target device_test
    [ 84%] Built target observer_test
    [ 84%] Built target MatchTest
    [ 84%] Built target stream_test
    [ 84%] Linking CXX executable ../bin/cast_test
    [ 85%] Linking CXX executable ../bin/predictor_test
    [ 85%] Linking CXX executable ../bin/proto_utils_test
    [ 85%] Linking CXX executable ../bin/reshape_op_gpu_test
    [ 85%] Linking CXX executable ../bin/event_gpu_test
    [ 85%] Linking CXX executable ../bin/math_test
    [ 85%] Linking CXX executable ../bin/transform_test
    [ 85%] Linking CXX executable ../bin/verify_api_visibility
    [ 85%] Built target verify_api_visibility
    [ 85%] Built target proto_utils_test
    [ 85%] Built target math_test
    [ 85%] Built target transform_test
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/cast_test.dir/utils/cast_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > > >(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(generated_message_reflection.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/cast_test.dir/utils/cast_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy, std::__1::allocator > >::TypeHandler>(google::protobuf::RepeatedPtrField, std::__1::allocator > >::TypeHandler::Type*, google::protobuf::Arena*, google::protobuf::Arena*)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/cast_test.dir/utils/cast_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/cast_test.dir/utils/cast_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 85%] Built target event_gpu_test
    [ 85%] Built target reshape_op_gpu_test
    [ 85%] Linking CXX executable ../bin/operator_test
    [ 85%] Built target predictor_test
    [ 85%] Linking CXX executable ../bin/fixed_divisor_test
    [ 85%] Linking CXX executable ../bin/pattern_net_transform_test
    [ 85%] Linking CXX executable ../bin/net_simple_refcount_test
    [ 85%] Built target cast_test
    [ 85%] Linking CXX executable ../bin/scalar_tensor_test
    [ 86%] Linking CXX executable ../bin/atest
    [ 86%] Linking CXX executable ../bin/module_test
    [ 86%] Linking CXX executable ../bin/init_test
    [ 86%] Built target net_simple_refcount_test
    [ 86%] Built target fixed_divisor_test
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/operator_test.dir/core/operator_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/operator_test.dir/core/operator_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 86%] Built target pattern_net_transform_test
    [ 86%] Built target scalar_tensor_test
    [ 86%] Built target atest
    [ 86%] Built target init_test
    [ 86%] Built target module_test
    [ 86%] Built target operator_test
    Scanning dependencies of target cuda_half_test
    [ 86%] Linking CXX executable ../bin/apply_utils_test
    [ 86%] Linking CXX executable ../bin/generate_proposals_op_util_boxes_test
    [ 86%] Linking CXX executable ../bin/event_test
    [ 86%] Linking CXX executable ../bin/graph_test
    [ 86%] Linking CXX executable ../bin/context_test
    [ 86%] Linking CXX executable ../bin/basic
    [ 87%] Linking CXX executable ../bin/cuda_half_test
    [ 87%] Linking CXX executable ../bin/smart_tensor_printer_test
    [ 87%] Built target event_test
    [ 87%] Built target context_test
    [ 87%] Built target basic
    [ 87%] Built target apply_utils_test
    [ 87%] Built target graph_test
    [ 87%] Built target generate_proposals_op_util_boxes_test
    [ 87%] Built target smart_tensor_printer_test
    [ 87%] Built target cuda_half_test
    [ 87%] Linking CXX executable ../bin/tbb_init_test
    [ 87%] Linking CXX executable ../bin/undefined_tensor_test
    [ 87%] Linking CXX executable ../bin/half_test
    [ 87%] Linking CXX executable ../bin/native_test
    [ 87%] Linking CXX executable ../bin/weakref_test
    [ 87%] Linking CXX executable ../bin/math_gpu_test
    [ 87%] Linking CXX executable ../bin/string_ops_test
    [ 87%] Linking CXX executable ../bin/dlconvertor_test
    [ 87%] Built target weakref_test
    [ 87%] Built target undefined_tensor_test
    [ 87%] Built target half_test
    [ 87%] Built target native_test
    [ 87%] Built target dlconvertor_test
    [ 88%] Linking CXX executable ../bin/net_test
    [ 88%] Built target tbb_init_test
    [ 88%] Built target string_ops_test
    [ 88%] Built target math_gpu_test
    [ 88%] Linking CXX executable ../bin/stats_test
    [ 88%] Linking CXX executable ../bin/elementwise_op_test
    [ 88%] Linking CXX executable ../bin/text_file_reader_utils_test
    Scanning dependencies of target cuda_packedtensoraccessor_test
    [ 88%] Linking CXX executable ../bin/mobile_test
    [ 88%] Linking CXX executable ../bin/net_dag_utils_test
    [ 88%] Linking CXX executable ../bin/cuda_packedtensoraccessor_test
    [ 88%] Linking CXX executable ../bin/generate_proposals_op_test
    [ 88%] Built target stats_test
    [ 88%] Built target text_file_reader_utils_test
    [ 88%] Built target elementwise_op_test
    [ 88%] Built target mobile_test
    [ 88%] Built target net_dag_utils_test
    [ 88%] Built target generate_proposals_op_test
    [ 88%] Linking CXX executable ../bin/net_async_tracing_test
    [ 88%] Linking CXX executable ../bin/parallel_net_test
    [ 88%] Linking CXX executable ../bin/broadcast_test
    [ 88%] Built target net_test
    [ 88%] Built target cuda_packedtensoraccessor_test
    [ 88%] Built target net_async_tracing_test
    [ 88%] Built target broadcast_test
    [ 88%] Built target parallel_net_test
    [ 88%] Linking CXX shared library ../../lib/libcaffe2_detectron_ops_gpu.dylib
    [ 88%] Linking CXX shared library ../../lib/libtorch.dylib
    [ 89%] Built target caffe2_detectron_ops_gpu
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/torch.dir/csrc/jit/export.cpp.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > > >(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../../lib/libprotobuf.a(generated_message_reflection.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/torch.dir/csrc/jit/export.cpp.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy, std::__1::allocator > >::TypeHandler>(google::protobuf::RepeatedPtrField, std::__1::allocator > >::TypeHandler::Type*, google::protobuf::Arena*, google::protobuf::Arena*)' from file '../../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/torch.dir/csrc/jit/export.cpp.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../../lib/libprotobuf.a(type.pb.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/torch.dir/csrc/jit/export.cpp.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 94%] Built target torch
    [ 94%] Linking CXX executable ../bin/test_jit
    [ 95%] Linking CXX executable ../bin/test_api
    [ 95%] Built target test_jit
    [ 96%] Built target test_api
    [ 96%] Linking CXX shared library ../../lib/libtorch_python.dylib
    [100%] Built target torch_python
    Install the project...
    -- Install configuration: "Release"
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf-lite.a(arenastring.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf-lite.a(atomicops_internals_x86_msvc.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf-lite.a(io_win32.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf.a(arenastring.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf.a(atomicops_internals_x86_msvc.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf.a(io_win32.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf.a(gzip_stream.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libprotobuf.a(error_listener.cc.o) has no symbols
    /Library/Developer/CommandLineTools/usr/bin/ranlib: file: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libonnx.a(defs.cc.o) has no symbols
    error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libmkldnn.0.14.0.dylib (for architecture x86_64) option "-add_rpath @loader_path" would duplicate path, file already has LC_RPATH for: @loader_path
    error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/lib/libc10.dylib (for architecture x86_64) option "-add_rpath @loader_path" would duplicate path, file already has LC_RPATH for: @loader_path
    error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/test/c10_DeviceGuard_test (for architecture x86_64) option "-add_rpath @loader_path" would duplicate path, file already has LC_RPATH for: @loader_path
    error: /Library/Developer/CommandLineTools/usr/bin/install_name_tool: for: /Users/carlos/Downloads/pytorch/torch/lib/tmp_install/test/c10_StreamGuard_test (for architecture x86_64) option "-add_rpath @loader_path" would duplicate path, file already has LC_RPATH for: @loader_path