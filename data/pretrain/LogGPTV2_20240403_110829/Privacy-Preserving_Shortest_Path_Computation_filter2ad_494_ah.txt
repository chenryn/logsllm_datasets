src,vn ),
Enc(¯ke, ¯k(r+1)
src,ve ),
Enc(¯ks, ¯k(r+1)
src,vs ),
Enc(¯kw, ¯k(r+1)
src,vw),
where vn, ve, vw, vw is the neighbor of u in G to the north, east, south, or west, respectively. If
u does not have a neighbor in a given direction j ∈ {n, e, s, w}, then deﬁne ¯k(r+1)
src,vj to be the
all-zeroes string in {0, 1}(cid:96).
For all nodes u (cid:54)= vr−1, the simulator sets the uth record in Dsrc to be an encryption of the all-zeroes
string under ¯k(r+1)
src,u .
6. The simulator prepares the destination database Ddst as follows. The tth record in Ddst is an encryp-
tion under ¯kdst,t of the following:
• Arithmetic encodings ¯Laﬃne
• Garbled circuit encodings ¯Lunblind
t
= ( ¯Laﬃne
ne,y , ¯Laﬃne
nw,y ).
(t).
t
For all nodes u (cid:54)= t, the simulator sets the uth record in Ddst to be an encryption of the all-zeroes
string under ¯kdst,u.
7. When A makes a PIR request for a record in the source database, the simulator plays the role of the
sender in the PIR protocol using Dsrc as its input database.
8. When A makes a PIR request for a record in the destination database, the simulator plays the role
of the sender in the PIR protocol using Ddst as its input database.
9. When A engages in OT for the garbled circuit encodings of ˆzne and ˆznw, the simulator replies with
the encodings ¯Lunblind
(ˆzne) and ¯Lunblind
znw
zne
(ˆznw).
32
10. Let dir ∈ {n, e, s, w} be the direction of the edge from vr−1 to vr in G. The simulator sets γne = 0 =
γnw and δne, δnw as follows:
• If ˆzne = ¯zne and ˆznw = ¯znw and vr (cid:54)= ⊥, then the simulator sets
(cid:40)−1 if dir = n or dir = e
1
if dir = s or dir = w
¯δne =
(cid:40)−1
1
and
¯δnw =
if dir = n or dir = w
if dir = s or dir = e.
• If ˆzne = ¯zne and ˆznw = ¯znw and vr = ⊥, then the simulator sets ¯δne = ξ = ¯δnw. Recall that
ξ ∈ Fp satisﬁes ξ /∈ [−2τ , 2τ ].
• If exactly one of ˆzne (cid:54)= ¯zne or ˆznw (cid:54)= ¯znw holds, then with probability ε = 2τ +1/p, the simulator
aborts the simulation and outputs ⊥. Otherwise, with probability 1 − ε, the simulator sets
¯δne = ξ = ¯δnw.
• If both ˆzne (cid:54)= ¯zne and ˆznw (cid:54)= ¯znw, then with probability ε2, the simulator aborts and outputs ⊥.
Otherwise, with probability 1 − ε2, the simulator sets ¯δne = ξ = ¯δnw.
The simulator sends to A the garbled circuit ¯Cunblind, the encodings of the unblinding coeﬃcients
¯Lunblind
γne
(¯γne), ¯Lunblind
γnw
(¯γnw), ¯Lunblind
δne
(¯δne), ¯Lunblind
δnw
(¯δnw),
as well as encodings of the PRF keys
¯Lunblind
k0
ne
(¯k0
ne), ¯Lunblind
k1
ne
(¯k1
ne), ¯Lunblind
k0
nw
(¯k0
nw), ¯Lunblind
k1
nw
(¯k1
nw).
At the end of the protocol execution, the adversary A outputs some function of its view of the execution.
If the simulator has not aborted, the simulator gives the output of A to the environment. This completes
the speciﬁcation of the simulator S. We now show that S correctly simulates the view of A in Hyb1.
Correctness of the simulation. First, we deﬁne some random variables for the view of the client in
the real protocol and in the simulation. Let view(0)
real be the adversary’s view during the setup phase when
interacting according to the real protocol in Hyb1, and let view(0)S be the view that S simulates for A during
the setup phase in the ideal world. In this case, view(0)
src , ˆkdst) where s and t correspond to the source
and destination A provided as input to the OT protocol. In the simulated view, view(0)S = (¯k(1)
src,s, ¯kdst,t)
with s, t deﬁned similarly.
real = (ˆk(1)
Next, let view(r)
real be the random variable corresponding to the adversary’s view during round r of the real
protocol, and let view(r)S be the view that S simulates for A during round r in the ideal world. More explic-
itly, we write view(r)
real = (PIRsrc, PIRdst, ˜Cunblind, ˜Lunblind), where PIRsrc and PIRdst denote the client’s view in
the PIR protocol on databases Dsrc and Ddst, respectively, ˜Cunblind denotes the garbled circuit, and ˜Lunblind
denotes the set of garbled circuit encodings the client receives via the OT protocol (corresponding to inputs
ˆzne and ˆznw) as well as the encodings of the server’s inputs: the unblinding coeﬃcients γne, γnw, δne, δnw,
nw. Similarly, we deﬁne view(r)S = (PIRsrc, PIRdst, ¯Cunblind, ¯Lunblind), where
and the PRF keys k0
PIRsrc and PIRdst denote the client’s view in the PIR protocol over databases Dsrc and Ddst, respectively,
and ¯Lunblind denotes the set of garbled circuit encodings the client receives from the OT protocol as well
as the encodings of the server’s inputs ¯γne, ¯γnw, ¯δne, ¯δnw, ¯k0
nw. Next, deﬁne
nw, ¯k1
ne, ¯k1
ne, ¯k0
ne, k0
ne, k0
nw, k1
view(0:r)
real =
view(i)
real
(cid:111)r
i=0
(cid:110)
33
to be the joint distribution of the view of adversary A in the setup and ﬁrst r rounds of the protocol. We
deﬁne view(0:r)S
analogously. We now show that
view(0:R)
real
c≈ view(0:R)
S
.
We ﬁrst characterize the keys in the simulation. Conceptually, we show that if a client knows at most
one source key in round r, then this property also holds in r + 1. This eﬀectively binds the client to a
single consistent path in the course of the protocol execution.
Lemma A.9. Let s, t ∈ [n] be the source and destination nodes the client submits to the OT oracle in
the setup phase of the simulation. Let (s = v0, . . . , vR) be the path the simulator receives from the trusted
party. Fix a round 0 < r < R, and suppose the following conditions hold:
• For all nodes v (cid:54)= vr−1, the conditional distribution of ¯k(r)
indistinguishable from the uniform distribution on {0, 1}(cid:96).
src,v given view(0:r−1)
S
is computationally
• For all nodes v (cid:54)= t, the conditional distribution of ¯kdst,v given view(0:r−1)
tinguishable from the uniform distribution on {0, 1}(cid:96).
S
is computationally indis-
Then the corresponding conditions hold for round r + 1.
Proof. We ﬁrst describe the client’s view of the protocol execution on the rth round of the protocol. For
notational convenience, we set u = vr−1. We now consider each component in view(r)S separately:
• The client’s view of the PIR protocol on the source database. We can express the view PIRsrc as
a (possibly randomized) function f1(view(0:r−1)
,Dsrc) in the client’s view of the protocol execution
thus far and the server’s database Dsrc. Each record v (cid:54)= u in Dsrc is an encryption of the all-zeroes
string. As long as u (cid:54)= ⊥, the uth record in Dsrc contains the following:
S
– Arithmetic circuit encodings ¯Laﬃne
– Garbled circuit encodings ¯Lunblind
– Encryptions ¯κn, ¯κe, ¯κe, ¯κw of the source keys for the neighbors of u = vr−1 in the next round of
nw,x ) of the source node u.
ne,x , ¯Laﬃne
of the node u.
= ( ¯Laﬃne
s
s
the protocol under the direction keys ¯kn, ¯ke, ¯ks, ¯kw:
¯κn = Enc(¯kn, ¯k(r+1)
src,vn ),
¯κe = Enc(¯ke, ¯k(r+1)
src,ve ),
¯κs = Enc(¯ks, ¯k(r+1)
src,vs ),
¯κw = Enc(¯kw, ¯k(r+1)
src,vw),
where vn, ve, vs, vw is the neighbor of u in G to the north, east, south, or west, respectively. If
u does not have a neighbor in a given direction dir ∈ {n, e, s, w}, then ¯k(r+1)
src,vdir = {0, 1}(cid:96).
• The client’s view of the PIR protocol on the destination database. Similar to the previous case,
we can express the view PIRdst as a (possibly randomized) function f2(view(0:r−1)
, PIRsrc,Ddst). In
hybrid H2, every record v (cid:54)= t is an encryption of the all-zeroes string. The tth record consists of the
following:
S
– Arithmetic circuit encodings ¯Laﬃne
– Garbled circuit encodings ¯Lunblind
t
t
= ( ¯Laﬃne
ne,y , ¯Laﬃne
nw,y ) of the destination node t.
of the destination node t.
• The garbled circuit ¯Cunblind.
34
(cid:16)
(cid:110) ¯f
(cid:16)
• The set of garbled circuit encodings from the OT protocol. In the OT hybrid model, each OT is
replaced by an oracle call to the ideal OT functionality. Thus, ¯Lunblind consists of a set of garbled
circuit encodings ¯Lunblind
, ¯Lunblind
δne
of the server’s unblinding coeﬃcients and encodings ¯Lunblind
of the server’s
PRF keys.
from the OT protocol, encodings ¯Lunblind
γnw
, ¯Lunblind
γne
, ¯Lunblind
, ¯Lunblind
, ¯Lunblind
, ¯Lunblind
, ¯Lunblind
k1
nw
k0
nw
k1
ne
zne
znw
k0
ne
δnw
We can express the adversary’s view as
view(r)S =
view(0:r−1)
S
, ¯κn, ¯κe, ¯κs, ¯κw, aﬃne, ¯Lunblind
s
, ¯Lunblind
t
(cid:17)
, ¯Cunblind, ¯Lunblind(cid:111)
,
(7)
where ¯f is a (possibly randomized) function, and aﬃne = ( ¯Laﬃne
source and destination vectors.
By construction, the set of encodings(cid:8) ¯Lunblind
, ¯Lunblind(cid:9) constitute a complete set of encodings
) are the aﬃne encodings of the
, ¯Lunblind
, ¯Laﬃne
s
t
s
t
for a single unique input ¯x to the neighbor-computation function, and so invoking Lemma A.5, we conclude
that there exists a PPT algorithm ¯S1 such that
view(r)S
c≈ ¯S1
1λ, view(0:r−1)
S
, ¯κn, ¯κe, ¯κs, ¯κw, aﬃne, Cunblind, Cunblind(¯x).
.
To conclude the proof, we condition on the possible outputs of Cunblind(¯x). There are two cases:
• Suppose Cunblind(¯x) = (ˆbne, ˆbnw, ˆkne, ˆknw). By deﬁnition, this means that ˆkne = ¯k
ˆbnw
nw .
Let dir ∈ {n, e, s, w} be the direction of the edge from vr−1 to vr in G. The simulator chooses the
garbled circuit encodings such that dir = IndexToDirection(ˆbne, ˆbnw). Thus, by construction of the
direction keys ¯kn, ¯ke, ¯ks, ¯kw, and PRF security, we conclude that the conditional distribution of ¯kdir(cid:48)
given view(r)S is computationally indistinguishable from uniform for all directions dir(cid:48) (cid:54)= dir. Invoking
semantic security of (Enc, Dec), we conclude that there exists a PPT algorithm ¯S2 such that
ˆbne