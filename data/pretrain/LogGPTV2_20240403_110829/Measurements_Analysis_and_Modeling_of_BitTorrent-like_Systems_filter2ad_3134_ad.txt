ish downloading quickly and then quit the system soon,
which defeats the design purpose of the seed service pol-
icy.
Figure 9(b) shows the number of torrents that each
peer involves and its corresponding contribution ratio
(plotted in the similar way as that of Figure 9(a)). The
ﬁgure shows no distinguishable correlation between the
two, indicating that the main reason for seeds to leave old
torrents is not to start new downloading tasks.
In summary, we observe that the BitTorrent’s biased
seed service policy in favor of high speed downloaders
really affects the fairness to peers in downloading, and
an incentive mechanism is needed to encourage seeds to
contribute.
4 Modeling Multiple Torrents in BitTor-
rent Systems
In the previous section, we have shown that client perfor-
mance ﬂuctuates signiﬁcantly in single-torrent systems,
but is very stable when aggregated over multiple torrents.
Based on this observation, in this section, we study the
correlation among multiple torrents through modeling
and trace analysis, aiming to look for solutions to enable
inter-torrent collaboration.
Although different torrents are independent from each
other in the current BitTorrent systems, they are inher-
ently related by peers that request multiple torrent ﬁles.
A peer may download a torrent ﬁle, serve as a seed for
that torrent for a while, and then go ofﬂine to sleep for
some period of time. The peer may return sometime
later and repeat the activities above. Thus, a peer’s life-
cyle consists of a sequence of downloading, seeding, and
sleeping activities. If a peer stops using BitTorrent for a
long time that is much longer than its typical sleeping
time, we consider the peer as dead.
In the current BitTorrent systems, a peer is encour-
aged to exchange ﬁle chunks with other peers that are
downloading the same ﬁle instead of serving old torrent
ﬁles it has downloaded. Thus, in our model, we assume
each peer joins (downloading and seeding) each torrent
at most once, and joins one torrent at a time. Having
these assumptions, we start to characterize peers in mul-
tiple torrents.
4.1 Characterizing the Peer Request Pat-
tern
In the multi-torrent environment, both torrents and peers
are born and die continuously. Figure 10(a) shows the
CDF of torrent birth in the trace (indicated by raw data)
and our linear ﬁt. The average torrent birth rate (de-
noted as λt in the following context) is about 0.9454 tor-
rent per hour. Figure 10(b) shows the CDF of torrent re-
quest arrivals (for all peers over all torrents) and our lin-
ear ﬁt. We deﬁne the torrent request rate as the number
of downloading requests for all torrents per unit time in
the multi-torrent system, denoted as λq in the following
context. Although the peer arrival rate of a single-torrent
system decreases exponentially as shown in Figure 1, the
torrent request rate in the multi-torrent system is almost
a constant, about 133.39 per hour.
Since both the torrent birth rate and torrent request rate
are almost constant, it is natural to assume that the peer
birth rate (denoted as λp in the following context) is also
a constant. A peer is born when it appears in the system
for the ﬁrst time. However, as shown in Figure 10(c),
USENIX Association
Internet Measurement Conference 2005  
43
102
102
# torrents
avg inter−arrival time
s
t
n
e
r
r
o
t
f
o
101
r
e
b
m
u
n
s
t
n
e
r
r
o
t
f
o
r
e
b
m
u
n
101
20
)
y
a
d
(
e
m
10
i
t
l
a
v
i
r
r
a
−
r
e
n
t
i
106
105
104
103
)
c
e
s
/
s
e
t
y
b
(
d
e
e
p
s
i
g
n
d
a
o
n
w
o
d
l
downloading speed
103
102
s
t
n
e
r
r
o
t
f
o
r
e
b
m
u
n
101
# of torrents
0.8
0.8
100
1
1
108
)
y
a
d
(
r
τ
t
r
e
e
m
a
r
a
p
n
o
i
t
a
u
n
e
t
t
a
e
a
r
t
t
s
e
u
q
e
r
106
104
102
100
τ
1000
1000
2000
2000
3000
3000
peers
# torrents
4000
4000
100
5000
5000
100
100
100
101
101
102
102
peers
103
103
1040
104
102
0
0
0.2
0.2
0.4
0.4
0.6
0.6
peers (in fraction)
(a) The attenuation of peers’ requesting rates and
number of torrents peers request (y-axis is in log
scale)
(b) The inter-arrival time of peers’ requests and
number of torrents they join (in log-log scale)
(c) The downloading speed and number of tor-
rents peers join (y-axis is in log scale)
Figure 11: The request pattern of peers
the peer birth rate is high at the beginning of the trace
collection duration, and then converges to a constant rate
asymptotically. The reason is that peers appear in the
trace for the ﬁrst time may actually be born before the
trace collection, and the number of such peers decreases
quickly after the trace collection starts. Thus, we take the
asymptotic birth rate as the real birth rate of peers, which
is about 19.37 per hour.
The constant peer birth rate and torrent request rate
indicate that each peer only joins a limited number of
torrents. However, the request rate of a peer might still
change over time. We deﬁne the peer request rate as the
number of requests a peer submits for different torrents
per unit time. Assume the peer request rate can be ex-
pressed as
r(t) = r0e− t
τr ,
(4.10)
where t is the time duration after the peer is born, r0 is
the initial request rate, and τr is the attenuation param-
eter of the request rate. When τr → ∞, the peer has
a constant request rate; when τr  1 KB per
second. This implies that for peers whose downloading
speed is large enough, the numbers of torrent ﬁles differ-
ent peers request do not depend on their request rates and
their downloading speed.
Thus, we assume that a peer joins a new torrent with
probability p. For N peers in the system, during their
whole lifecycles, there are N pm−1 peers that request at
least m torrents. Ranking peers in non-ascending order
of the number of torrents they join, the number of tor-
rents that a peer ranked i joins is
m = 1 +
log i − log N
log p
.
(4.12)
In addition, a peer has the probability 1 − p to down-
load exactly 1 ﬁle, probability p(1 − p) to download ex-
actly 2 ﬁles, and probability pk−1(1 − p) to download
exactly k ﬁles. So the mean number of torrents that a
44
Internet Measurement Conference 2005
USENIX Association
200
150
100
50
s
t
n
e
r
r
o
t
f
o
r
e
b
m
u
n
50
40
30
20
10
s
t
n
e
r
r
o
t
f
o
r
e
b
m
u
n
raw data
linear fit
100
10−1
t
>
d
s
T
f
o
y
t
i
l
i
b
a
b
o
r
P
10−2
10−3
0
100
101
102
peers
103
104
105
0
100
101
102
peers
103
104
10−4
0
50
100
10−1
t
>
l
s
T
f
o
y
t
i
l
i
b
a
b
o
r
P
10−2
10−3
200
250
10−4
0
200
400
800
sleeping time (hour)
600
1000
1200
100
150
seeding time (hour)
(a) For all peers in the trace
(b) For peers born in the middle of
trace collection time
(a) The probability distribution of
seeding time
(b) The probability distribution of
sleeping time
Figure 12: Torrent involvement of peers (x-axis is in log
scale)
Figure 13: The seeding time and sleeping time of peers
(y-axis is in log scale)
peer joins is:
¯m =
∞X
k=1
kpk−1(1 − p) =
1
1 − p
.
(4.13)
Figure 12(a) shows the distribution of number of tor-
rent ﬁles that each peer downloads in the trace. The curve
in the ﬁgure is a little convex, deviating from what Equa-
tion 4.12 predicts (a straight line when x-axis is in log
scale). The reason is that the number of torrents joined by
peers born before the trace collection is under-estimated,
since some of these requests cannot be recorded in the
trace. A similar situation exists for peers that are not
dead before the end of trace collection.
Figure 12(b) shows the distribution of number of tor-
rents joined by each peer that was born in the middle of
the trace collection duration (indicated by raw data) and
our linear ﬁt. The curve ﬁts Equation 4.12 very well, and
we estimate from the analysis that p ≈ 0.8551, while
the average number of torrents each peer joins is about
7.514.
To verify the probability model we use in the above
analysis, we estimate p in another way as follows. As-
suming the peer birth rate is λp and the torrent request
1
rate is λq, since each peer joins
1−p torrents during its
lifetime in average, we have
time in the system. Note that the y-axis is in log scale.
Both the peer seeding time and sleeping time roughly
follow the exponential distribution with probability den-
sity function fsd(t) = 1
τsl ,
τsd
respectively. Based on the trace analysis, we estimate
τsd = 1
γ = 8.42 hours, and τsl = 58.32 hours.
τsd , and fsl(t) = 1
τsl
− t
− t
e
e
4.2 Characterizing the Inter-Torrent Rela-
tion
In this part we study how different torrents are connected
through peers that download multiple ﬁles, based on our
previously veriﬁed assumptions.
For simpliﬁcation, we consider a homogeneous multi-
torrent environment where all torrents and peers have the
same λ0, τ, µ, c, η, γ, and average sleeping time. We
denote each torrent in the system as torrent i with birth
time ti (1 ≤ i  tj.
Assume the probability that a peer selects torrent i at
time t0 as its k-th torrent is P k
i (t0) = 0 when
ti > t0. We also denote P 1
i (t0) as Pi(t0) for simplic-
ity. Without loss of generality, we assume that the most
recently born torrent by time t0 is torrent 1, and Pi(t0)