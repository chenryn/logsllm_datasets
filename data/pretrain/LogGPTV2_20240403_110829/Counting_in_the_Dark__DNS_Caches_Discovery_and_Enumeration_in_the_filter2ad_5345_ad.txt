the impact of caching in the resolvers on DNS perfor-
mance and on the latency perceived by the clients, e.g.,
[10], [11]. To optimise content distribution networks
(CDNs) [12] ran a study of associating DNS resolvers
with their clients, and also designed approaches to
ﬁngerprint the operating system or DNS software but
did not evaluate them in the Internet-scale. This work
was extended by [13], which ﬁngerprinted a limited
set of DNS software (Bind, Unbound and Windows)
in the wild. Both works [12], [13] use patterns in
DNS queries to ﬁngerprint DNS software; example
Fig. 8.
IP addresses vs. caches count in ad-network population.
What
is the expected number of DNS requests,
needed to enumerate the caches assuming unpredictable
cache selection strategy?
Caches enumeration is an extension of the combina-
torial coupon collector problem [9], which one needs
to collect all coupons to win in a contest. Speciﬁcally,
given an urn of n different coupons from which coupons
are being collected equally likely and with replacement,
what is the probability that more than t sample trials are
needed to collect all n coupons? In our setting the urns
are caches, and the question is how many DNS queries
does it take to make sure we cover all the caches?
Assume that each cache, out of n caches, is equally
likely to be selected as a candidate for a given query.
In each iteration exactly one cache is probed, and the
experiment has to be repeated until each of n caches
has been probed at least once. The cache selection is an
independent random variable, and a cache i is selected
with probability pi = 1
n. We then consider the following
problem: What is the expected number of queries q that
needs to be issued in order to probe each of n caches?
Theorem 5.1: Let X be the random number of queries
that need to be issued in order to probe all n caches,
such that X = X1 + ... + Xn and each Xi (∀0 < i ≤ n)
denotes the number of queries required to probe cache
i, after probing cache i− 1. Then, the expected number
of queries q = E(X) to probe all n caches is:
= n×(cid:16)1
(cid:17)
E(X) = E(X1)+...+E(Xn) =
+...+
1
n
1
= n×Σn
i=1
=
1
pn
+...+
n
n +...+
1
p1
1
i = n×Hn = n(logn+Θ(1))
n
1
= nlogn + O(n) = Θ(nlogn)
Proof 5.2: The ﬁrst cache is probed with ﬁrst query,
i.e., X1 = 1. The probability to probe cache i + 1,
376
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:38 UTC from IEEE Xplore.  Restrictions apply. 
patterns include the maximal queried length of CNAME
chains, presence of requests for AAAA (following
requests for A records). These techniques identify the
software supported by the egress IP addresses of DNS
resolvers, since they observe the query pattern which is
independent of the caching behaviour.
The caches play a much more signiﬁcant role in
resolution chains than the ingress or egress resolvers.
In particular, the ingress resolvers relay queries from
clients to the caches, without applying caching logic on
the received records. Ingress resolvers are also often
conﬁgured to use upstream caches, such as Google
Public DNS, in which cases the client will only see the
forwarder whose sole functionality is to relay queries,
while the complex caching logic is performed by the
upstream cache. Furthermore, as we witnessed during
our Internet evaluations, typically multiple IP addresses
are involved in a resolution chain of a domain name,
and hence different IP addresses perform the resolution.
For instance, when resolving www.foo.example, the
request to the parent domain example arrives from
one egress IP address, and a subsequent request
to
foo.example arrives from a different egress IP ad-
dress (more IP addresses are involved in longer resolu-
tion chains, e.g., such as CNAME chains). Consequently
a DNS software running on an egress IP address is
not representative of a DNS resolution platform and in
particular, does not reﬂect the inner workings of the
caching.
A study by [14] suggested to remove the DNS
resolution platforms, and to leave the resolution to
end hosts, arguing that the overhead on the existing
end hosts would not be signiﬁcant. [15] evaluated
impact of domain name features on the effectiveness
of caching. Recently, Schomp et al [16], measured the
client side of the DNS infrastructure of open recursive
resolvers, in order to identify all the actors in DNS
resolution platforms. The goal of Schomp et al was
to understand the actors involved in DNS resolution,
however, their study did not cover the discovery and
study of caches and the mappings between IP addresses
and the caches hidden behind them. We extend the
client-side DNS infrastructure studies with designing
and evaluating methodologies for inferring the caches
topologies and structures, and provide methodologies
for inferring caches to IP addresses mapping, and for
calculating the number of caches behind a given IP
address of a DNS resolver.
A number of other studies were conducted on open
resolvers, e.g., [17], [18], where the IPv4 address block
is scanned for hosts responding to requests on port 53.
However, recently it was shown by [19], [20] that most
such open resolvers are either (misconﬁgured) home
routers and mismanaged (security oblivious) networks
or malicious networks operated by attackers (where the
open DNS resolver is set up for malware communication
to the command and control servers). In contrast to
studies on open resolvers, our research is done on well
managed networks, including enterprises, public DNS
operators, Internet Service Providers (ISPs) and popular
networks. We categorise the networks in our dataset and
describe our data collect in Section III.
Security of DNS typically refers to correctness of
DNS responses (against DNS cache poisoning attacks),
and privacy of clients and systems (against censorship
and monitoring).
There is a long history of DNS cache poisoning, [21],
[22], [7]. DNS cache poisoning attacks are known to
be practiced by governments, e.g., for censorship [23]
or for surveillance [24], as well as by cyber criminals
for credentials theft, malware distribution, and more.
In the course of a DNS cache poisoning attack, the
attacker provides spoofed records in DNS responses.
These spoofed records are cached, and then returned
to clients and systems,
thereby redirecting them to
incorrect hosts. The recent wave of cache poisoning vul-
nerabilities as well as the evidence for DNS injections in
the Internet stimulated awareness within the operational
and research communities, and a number of studies
measuring DNS injections in the wild were conducted,
[25], [17], [26]. In our recent work [8] we analysed
vulnerabilities of caches to different records’ injection
methods. Another study [27] measured misconﬁgured
domains with dangling records, and showed attacks
exploiting them.
The results and conclusions derived from our study
contribute to the design of unilateral, non-cryptographic
defences against DNS cache poisoning. Although cryp-
tographic defence with DNSSEC was standardised al-
ready two decades ago, [RFC4033-RFC4034], it is not
widely deployed and even signed domains may often
be vulnerable to attacks, [28]. Utilising multiple caches
with unpredictable caches’ selection strategy increases
the difﬁculty for successful cache poisoning attacks. In
particular, to be effective the cache poisoning attack has
to be conducted against a speciﬁc cache. When multiple
caches are used in a DNS resolution platform, for cache
poisoning to succeed even a strong Man-in-the-Middle
(MitM) attacker would need to generate large trafﬁc
volumes to be able to hit the same cache – which would
lead to detection of the attack.
VII. Conclusions
DNS has evolved into a complex infrastructure with
hosts receiving queries from the clients, caches that
store the requested records and hosts communicating
with the nameservers. We study the caches in popular
377
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:38 UTC from IEEE Xplore.  Restrictions apply. 
networks in the Internet, and developed tools for caches
enumeration and mapping to the ingress and egress IP
addresses.
Understanding and characterising the caches in net-
works in the Internet is primarily important for security,
we provide few examples in our work. Multiple caches,
along with unpredictable cache selection strategy, can
signiﬁcantly raise the bar for DNS cache poisoning.
Our study shows that the IP addresses provide one
aspect of DNS resolution platforms, that is visible to the
communicating parties, such as clients and nameservers.
the IP addresses expose little information
However,
about
the internal conﬁgurations in DNS resolution
platforms. In particular, although in some cases we
witnessed a one-to-one correspondence between IP ad-
dresses and caches, in most cases the IP addresses had
little meaning. For instance, we often saw that multiple
different egress IP addresses participated in a resolution
of a given name, e.g., a CNAME chain often begins
with one IP address, which is replaced by others in
subsequent links in a CNAME chain.
VIII. Acknowledgements
The research reported in this paper has been supported
in part by the German Federal Ministry of Education
and Research (BMBF) and by the Hessian Ministry of
Science and the Arts within CRISP (www.crisp-da.de/).
This work has been co-funded by the DFG as part
of project S3 within the CRC 1119 CROSSING. We
are grateful to Microsoft Azure Research Award, which
enabled us to host our infrastructure on Azure platform.
References
[1] A. Klein, “BIND 9 DNS cache poisoning,” Trusteer, Ltd., 3
Hayetzira Street, Ramat Gan 52521, Israel, Report, 2007.
[2] A. Herzberg and H. Shulman, “Security of patched DNS,” in
Computer Security - ESORICS 2012 - 17th European Sympo-
sium on Research in Computer Security, Pisa, Italy, September
10-12, 2012. Proceedings, 2012, pp. 271–288.
[3] H. Shulman and M. Waidner, “Towards security of internet
naming infrastructure,” in European Symposium on Research in
Computer Security. Springer, 2015, pp. 3–22.
[4] ——, “Fragmentation Considered Leaking: Port Inference for
DNS Poisoning,” in Applied Cryptography and Network Security
(ACNS), Lausanne, Switzerland. Springer, 2014.
[5] A. Herzberg and H. Shulman, “Vulnerable delegation of
DNS resolution,” in Computer Security - ESORICS 2013
- 18th European Symposium on Research in Computer
Security, Egham, UK, September 9-13, 2013. Proceedings,
2013, pp. 219–236. [Online]. Available: http://dx.doi.org/10.
1007/978-3-642-40203-6 13
[6] ——, “Socket Overloading for Fun and Cache Poisoning,”
in ACM Annual Computer Security Applications Conference
(ACM ACSAC), New Orleans, Louisiana, U.S., C. N. P. Jr., Ed.,
December 2013.
[7] ——, “Fragmentation Considered Poisonous: or one-domain-
to-rule-them-all.org,” in IEEE CNS 2013. The Conference on
Communications and Network Security, Washington, D.C., U.S.
IEEE, 2013.
[8] A. Klein, H. Shulman, and M. Waidner, “Internet-Wide Study
of DNS Cache Injections,” in INFOCOM, 2017.
[10] J.
[9] A. Boneh and M. Hofri, “The coupon-collector problem re-
visiteda survey of engineering problems and computational
methods,” Stochastic Models, vol. 13, no. 1, pp. 39–66, 1997.
Jung, E. Sit, H. Balakrishnan, and R. Morris, “Dns
performance and the effectiveness of caching,” Networking,
IEEE/ACM Transactions on, vol. 10, no. 5, pp. 589–603, 2002.
[11] D. Wessels, M. Fomenkov, N. Brownlee, and K. Claffy, “Mea-
surements and laboratory simulations of the upper dns hierar-
chy,” Passive and Active Network Measurement, pp. 147–157,
2004.
[12] C. A. Shue and A. J. Kalafut, “Resolvers revealed: Charac-
terizing dns resolvers and their clients,” ACM Transactions on
Internet Technology (TOIT), vol. 12, no. 4, p. 14, 2013.
[13] R. Chitpranee and K. Fukuda, “Towards passive dns software
ﬁngerprinting,” in Proceedings of the 9th Asian Internet Engi-
neering Conference. ACM, 2013, pp. 9–16.
[14] K. Schomp, M. Allman, and M. Rabinovich, “Dns resolvers
considered harmful,” in Proceedings of the 13th ACM Workshop
on Hot Topics in Networks. ACM, 2014, p. 16.
[15] S. Hao and H. Wang, “Exploring domain name based features on
the effectiveness of dns caching,” ACM SIGCOMM Computer
Communication Review, vol. 47, no. 1, pp. 36–42, 2017.
[16] K. Schomp, T. Callahan, M. Rabinovich, and M. Allman, “On
measuring the client-side dns infrastructure,” in Proceedings
of the 2013 conference on Internet measurement conference.
ACM, 2013, pp. 77–90.
[17] ——, “Assessing dns vulnerability to record injection,” in Pas-
sive and Active Measurement. Springer, 2014, pp. 214–223.
[18] M. K¨uhrer, T. Hupperich, J. Bushart, C. Rossow, and T. Holz,
“Going wild: Large-scale classiﬁcation of open dns resolvers,”
in Proceedings of the 2015 ACM Conference on Internet Mea-
surement Conference. ACM, 2015, pp. 355–368.
[19] D. Dagon, N. Provos, C. P. Lee, and W. Lee, “Corrupted dns
resolution paths: The rise of a malicious resolution authority.”
in NDSS, 2008.
[20] J. Zhang, Z. Durumeric, M. Bailey, M. Liu, and M. Karir,
“On the mismanagement and maliciousness of networks,” in to
appear) Proceedings of the 21st Annual Network & Distributed
System Security Symposium (NDSS14), San Diego, California,
USA, 2014.
[21] J. Stewart, “Dns cache poisoning–the next generation,” 2003.
[22] D. Kaminsky, “It’s the End of the Cache As We Know
It,” in Black Hat conference, August 2008, http://www.
blackhat.com/presentations/bh-jp-08/bh-jp-08-Kaminsky/
BlackHat-Japan-08-Kaminsky-DNS08-BlackOps.pdf.
[23] D. Anderson, “Splinternet behind the great ﬁrewall of china,”
Queue, vol. 10, no. 11, p. 40, 2012.
[24] M. Hu, “Taxonomy of the Snowden Disclosures,” Wash & Lee
L. Rev., vol. 72, pp. 1679–1989, 2015.
[25] P. Levis, “The collateral damage of internet censorship by dns
injection,” ACM SIGCOMM Computer Communication Review,
vol. 42, no. 3, 2012.
[26] M. Wander, C. Boelmann, L. Schwittmann, and T. Weis, “Mea-
surement of globally visible dns injection,” Access, IEEE, vol. 2,
pp. 526–536, 2014.
[27] D. Liu, S. Hao, and H. Wang, “All your DNS records point to us:
Understanding the security threats of dangling DNS records,” in
Proceedings of the 2016 ACM SIGSAC Conference on Computer
and Communications Security, Vienna, Austria, October 24-28,
2016, 2016, pp. 1414–1425.
[28] H. Shulman and M. Waidner, “One Key to Sign Them All Con-
sidered Vulnerable: Evaluation of DNSSEC in Signed Domains,”
in The 14th USENIX Symposium on Networked Systems Design
and Implementation (NSDI). USENIX, 2017.
378
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:38 UTC from IEEE Xplore.  Restrictions apply.