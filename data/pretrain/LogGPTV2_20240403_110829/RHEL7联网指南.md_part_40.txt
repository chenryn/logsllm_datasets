::: example
[⁠]{#ch-DNS_Servers.html#example-dns-introduction-zones-rr}
**例 11.1. 简单资源记录**
::: example-contents
::: para
简单*资源记录*（``{=html}RR``{=html}）示例：
:::
``` screen
example.com.      86400    IN         A           192.0.2.1
```
::: para
域名 `example.com`{.systemitem} 是 RR 的*所有者*。值 `86400`{.literal}
是*生存时间*（``{=html}TTL``{=html}）。字母
`IN`{.literal} 的含义是["[互联网系统]{.quote}"]{.quote}，代表 RR
的*分类*。字母 `A`{.literal} 代表 RR
的*类型*（在这个示例中是主机地址）。主机地址 `192.0.2.1`{.systemitem}
是包含在这个 RR 最后一部分的数字。这个一行的示例是一个
RR。一组使用同一类型、拥有者和分类的 RR
构成*资源记录集*（``{=html}RRSet``{=html}）。
:::
:::
:::
[]{#ch-DNS_Servers.html#idm140675877449872
.indexterm}[]{#ch-DNS_Servers.html#idm140675877452176
.indexterm}[]{#ch-DNS_Servers.html#idm140675877804608 .indexterm}
::: para
区域是通过*区域文件*在授权名称服务器中定义，该文件包含每个区域中的资源记录定义。Zone
文件保存在*主名称服务器*（也称
*主名称服务器*，在此可更改这些文件）及*辅名称服务器*（也称
*从属名称服务器*，在此接受主名称服务器中的区域定义）。主、辅名称服务器都是这个区域的授权，并查看相同的客户端。根据具体配置，所有名称服务器都可作为主或辅服务器同时用于多个区域。
:::
::: para
注：`DNS`{.systemitem} 和 `DHCP`{.systemitem}
服务器的管理员及所有部署应用程序都应接受这个在机构中使用的名称服务器格式。有关名称服务器格式详情，请查看
[第 3.1.1 节
"建议到命名方法"](#ch-Configure_Host_Names.html#sec-Recommended_Naming_Practices){.xref}。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-DNS_Servers.html#sec-dns-introduction-nameservers}11.1.2. 名称服务器类型 {.title}
:::
::: para
有两种名称服务器配置类型：
:::
::: variablelist
[[]{#ch-DNS_Servers.html#idm140675897317632 .indexterm} []{#ch-DNS_Servers.html#idm140675897322384 .indexterm} []{#ch-DNS_Servers.html#idm140675897319280 .indexterm} []{#ch-DNS_Servers.html#idm140675897321728 .indexterm} []{#ch-DNS_Servers.html#idm140675878665072 .indexterm} []{#ch-DNS_Servers.html#idm140675878664272 .indexterm} 授权]{.term}
:   ::: para
    授权名称服务器应答属于该区域的资源记录。这个类别包括主（master）和从属（slave）名称服务器。
    :::
[[]{#ch-DNS_Servers.html#idm140675878667840 .indexterm} []{#ch-DNS_Servers.html#idm140675878670080 .indexterm} 递归]{.term}
:   ::: para
    递归名称服务器提供解析服务，但不为任何区域授权。在固定时间段内应答所有者内存中缓存的解析，该时间段由查询的资源记录指定。
    :::
:::
::: para
虽然名称服务器可同时既是授权，又是递归，但建议不要合并使用两种配置类型。要使其工作，所有客户端应随时都可以使用授权服务器。另一方面，因为递归服务器查询比授权响应所需时间要长得多，因此递归服务器仅应适用于有限的客户端，否则会容易受到分布式拒绝服务（DDoS）攻击。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-DNS_Servers.html#sec-dns-introduction-bind}11.1.3. BIND 作为名称服务器 {.title}
:::
[]{#ch-DNS_Servers.html#idm140675878548352
.indexterm}[]{#ch-DNS_Servers.html#idm140675899457472
.indexterm}[]{#ch-DNS_Servers.html#idm140675878553088
.indexterm}[]{#ch-DNS_Servers.html#idm140675878555888
.indexterm}[]{#ch-DNS_Servers.html#idm140675899452320
.indexterm}[]{#ch-DNS_Servers.html#idm140675899454032 .indexterm}
::: para
BIND 包含一组与 DNS 相关的程序，其中包括名为 `named`{.systemitem}
的名称服务器、管理程序 `rndc`{.command} 及 debug 工具
`dig`{.command}。有关如何在 Red Hat Enterprise Linux
中运行服务的详情，请查看[*《Red Hat Enterprise Linux 7
系统管理员指南》*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/)。
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-DNS_Servers.html#sec-BIND}11.2. BIND {.title}
:::
[]{#ch-DNS_Servers.html#idm140675907997872 .indexterm}
::: para
本小节论述了 `BIND`{.systemitem}（Berkeley Internet Name Domain），Red
Hat Enterprise Linux 包含的 `DNS`{.systemitem}
服务器。着重介绍其结构和配置文件，并论述了如何对其进行本地和远程管理。
:::
::: section
::: titlepage
## [⁠]{#ch-DNS_Servers.html#sec-bind-empty-zones}11.2.1. 空白区域 {.title}
:::
::: para
`BIND`{.systemitem}
配置大量["[空白区域]{.quote}"]{.quote}，以防止递归服务器向无法使用它们的互联网服务器发送不必要请求（因而造成进行查询的客户端的
SERVFAIL 响应延迟）。这些空白区域可保证返回即时且授权的 NXDOMAIN
响应。配置选项 `empty-zones-enable`{.command}
控制是否生成空白区域，还可同时使用 `disable-empty-zone`{.command}
选项在其使用的默认前缀列表中禁用一个或多个空白区域。
:::
::: para
已增加为 [*RFC 1918*](http://www.rfc-editor.org/info/rfc1918)
前缀生成的空白区域数，同时 `BIND 9.9`{.systemitem}
或以上的用户会在未指定 `empty-zones-enable`{.command}（默认为
`yes`{.literal}），以及特别将其设定为 `yes`{.literal} 时都会看到 [*RFC
1918*](http://www.rfc-editor.org/info/rfc1918) 空白区域。
:::
:::
::: section
::: titlepage
## [⁠]{#ch-DNS_Servers.html#sec-bind-namedconf}11.2.2. 配置 DHCP 服务器 {.title}
:::
[]{#ch-DNS_Servers.html#idm140675886282592 .indexterm}
::: para
启动 `named`{.systemitem} 服务后，它会如 [表 11.1 "named
服务配置文件"](#ch-DNS_Servers.html#table-bind-namedconf-files){.xref}
所述从文件中读取配置。
:::
[]{#ch-DNS_Servers.html#idm140675887976368
.indexterm}[]{#ch-DNS_Servers.html#idm140675887978128
.indexterm}[]{#ch-DNS_Servers.html#idm140675887982224 .indexterm}
::: table
[⁠]{#ch-DNS_Servers.html#table-bind-namedconf-files}
**表 11.1. named 服务配置文件**
::: table-contents
  -----------------------------------------------------------------------
  路径                       描述
  -------------------------- --------------------------------------------
  `/`{.filename}             配置文件
  `/etc/named/`{.filename}   主配置文件中包含的配置文件辅助目录。
  -----------------------------------------------------------------------
:::
:::
::: para
配置文件由带嵌套选项的语句集合组成，这些选项使用大括号 (`{`{.literal} 和
`}`{.literal})括起来。注：编辑此文件时必须非常小心，以避免语法错误，否则将无法启动
`named`{.systemitem} 服务。典型的 `/etc/named.conf`{.filename}
文件类似如下：
:::
``` screen
statement-1 ["statement-1-name"] [statement-1-class] {
  option-1;
  option-2;
  option-N;
};
statement-2 ["statement-2-name"] [statement-2-class] {
  option-1;
  option-2;
  option-N;
};
statement-N ["statement-N-name"] [statement-N-class] {
  option-1;
  option-2;
  option-N;
};
```
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
如果已安装 [bind-chroot]{.package} 软件包，BIND 就会在
`chroot`{.command} 环境中运行。在那种情况下，初始化脚本将使用
`mount --bind`{.command}
命令挂载上述配置文件，以便可以在这个环境以外管理该配置。不需要向
`/var/named/chroot/`{.filename}
目录复制任何内容，因为会自动挂载该目录。这样可简化维护服务，因为在
`chroot`{.command} 环境中运行时，不需要对 `BIND`{.systemitem}
配置文件进行任何特别处理。可使用 `BIND`{.systemitem}
管理所需的一切，而无需在 `chroot`{.command} 环境中运行。
:::
::: para
如果 `/var/named/chroot/`{.filename}
中的对应挂载点为空，则以下目录会自动挂载至
`/var/named/chroot/`{.filename} 目录：
::: itemizedlist
-   ::: para
    `/etc/named`{.filename}
    :::
-   ::: para
    `/etc/pki/dnssec-keys`{.filename}
    :::
-   ::: para
    `/run/named`{.filename}
    :::
-   ::: para
    `/var/named`{.filename}
    :::
-   ::: para
    `/usr/lib64/bind`{.filename} 或
    `/usr/lib/bind`{.filename}（视具体架构而定）。
    :::
:::
:::
::: para
如果在 `/var/named/chroot/`{.filename}
中不存在以下文件，则也会将其挂载到目标文件中：
::: itemizedlist
-   ::: para
    `/`{.filename}
    :::
-   ::: para
    `/etc/rndc.conf`{.filename}
    :::
-   ::: para
    `/etc/rndc.key`{.filename}
    :::
-   ::: para
    `/etc/named.rfc1912.zones`{.filename}
    :::
-   ::: para
    `/etc/named.dnssec.keys`{.filename}
    :::
-   ::: para
    `/etc/named.iscdlv.key`{.filename}
    :::
-   ::: para
    `/etc/named.root.key`{.filename}
    :::
:::
:::
:::
:::
::: {.important xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**重要**
:::
::: admonition
::: para
需要为每个挂载到 `chroot`{.command}
环境中的文件生成一个备用副本后，方可编辑原始文件。也可以使用禁用
["[edit-a-copy]{.quote}"]{.quote} 模式的编辑器。例如：要使用 Vim 编辑在
`chroot`{.command} 环境中运行的 BIND 的配置文件
`/etc/named.conf`{.filename}，请作为 `root`{.systemitem} 运行以下命令：
``` screen
~]# vim -c "set backupcopy=yes" /etc/named.conf
```
:::
:::
:::
::: section
::: titlepage
### [⁠]{#ch-DNS_Servers.html#sec-Installing_Bind_In_A_Chroot_Environment}11.2.2.1. 在 chroot 环境中安装 BIND {.title}
:::
::: para
要安装在 `chroot`{.command} 环境中运行的
[**BIND**]{.application}，请作为 `root`{.systemitem} 运行以下命令：
``` screen
~]# yum install bind-chroot
```
:::
::: para
要启用 `named-chroot`{.systemitem} 服务，首先请检查是否运行
`named`{.systemitem} 服务，方法是运行以下命令：
``` screen
~]$ systemctl status named
```
如果该服务正在运行，则必须将其禁用。
:::
::: para
作为 `root`{.systemitem} 运行以下命令，禁用 `named`{.systemitem}：
``` screen
~]# systemctl stop named
```
``` screen
~]# systemctl disable named
```
然后，作为 `root`{.systemitem} 运行以下命令启用
`named-chroot`{.systemitem} 服务：
``` screen
~]# systemctl enable named-chroot
```
``` screen
~]# systemctl start named-chroot
```
:::
::: para
作为 `root`{.systemitem} 运行以下命令，检查 `named-chroot`{.systemitem}
服务状态：
``` screen
~]# systemctl status named-chroot
```
:::
:::
::: section
::: titlepage