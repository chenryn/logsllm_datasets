User: Please write a simple Python script to monitor the disk space of a remote server and send an alarm message by email when the disk space falls below a certain threshold.
Assistant: ``` # -*- coding: utf-8 -*- import os import smtplib from email.mime.text import MIMEText from email.mime.multipart import MIMEMultipart from email.mime.application import MIMEApplication server = "smtp.xxx. com" # mail server port = 25 # mail service port user = "user@xxx.com" # sender email passwd = "your_password" # sender email password to_list = ["receiver1@xxx.com", "receiver2 @xxx.com"] # Recipient's email address threshold = 80 # The critical value of disk space usage, if it is greater than this value, a warning will be issued def check_disk(): cmd = 'df -hl' # The command to obtain disk space information res = os. popen(cmd).readlines() # Execute the command and get the output information for line in res[1:]: line = line.split() disk_used = int(line[4].strip('%')) if disk_used > threshold: return line[0], line[4] return None def send_mail(file_path): msg = MIMEMultipart() att = MIMEApplication(open(file_path, 'rb').read()) att.add_header('Content-Disposition ', 'attachment', filename=file_path.split('/')[-1]) msg.attach(att) msg['From'] = user msg['Subject'] = "Insufficient disk space alarm" msg[ 'To'] = ";".join(to_list) content = "Insufficient disk space, please deal with it in time!" part_text = MIMEText(content) msg.attach(part_text) try: smtp = smtplib.SMTP(server, port) smtp .login(user, passwd) smtp.sendmail(user, to_list, msg.as_string()) smtp.quit() except Exception as e: print(e) if __name__ == '__main__': disk_info = check_disk() if disk_info : file_path = '/tmp/%s.txt' % disk_info[0].split('/')[-1] with open(file_path, 'w') as f: f.write('Disk: %s\ nSpace usage: %s' % disk_info) send_mail(file_path) ```