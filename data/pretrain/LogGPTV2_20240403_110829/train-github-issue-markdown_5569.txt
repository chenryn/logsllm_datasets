Hello,

I have a question regarding the usage of `babel-plugin-transform-runtime` in our React component.

We initially decided not to use `babel-plugin-transform-runtime`, which led to the creation of duplicated code, such as:

```javascript
function _classCallCheck() {}
_classCallCheck();
```

To address this, we planned to use `babel-plugin-transform-runtime` to transform these helper functions and leverage `@babel/runtime` from `node_modules` via our Webpack configuration. Hereâ€™s the relevant part of our Webpack config:

```javascript
{
    test: /\.(js|jsx)?$/,
    exclude: /node_modules\/(?!(@music)\/).*/,
    use: [{
        loader: 'babel-loader',
        options: {}
    }]
}
```

However, after inspecting the packaged code, I noticed that the duplicated code is still present. Could you please explain how `babel-plugin-transform-runtime` works with `@babel/runtime`? Or, is there an issue with our approach?

Thank you very much for your help!

Best regards,
[Your Name]