    FEATURE(`virtusertable&#39;, `hash -o /etc/mail/virtusertable.db&#39;)dnl
将以下行添加到 `/etc/mail/virtusertable`:
    @phishdomain.com  external-relay-address
_注意：这两个字段应该是tab分隔的_
### Postfix
Postfix是一个更容易并具有更广泛兼容性的sendmail的替代品。Postfix还提供完整的有Dovecot的IMAP支持。这样，测试人员就可以实时跟踪回应了原始邮件的网络钓鱼目标，而不是依靠catch-all地址，并且必须使用您的网络钓鱼工具创建新邮件。
Julian Catrambone([@n0pe_sled](https://twitter.com/n0pe_sled))发表的[Mail Servers
Made Easy](https://blog.inspired-sec.com/archive/2017/02/14/Mail-Server-Setup.html)提供了一个完整的针对网络钓鱼设置Postfix邮件服务器的指南。
## DNS
### socat
socat可用于将端口53上的传入DNS数据包重定向到我们的团队服务器。虽然此方法有效，但有些用户已经报告了使用此方法时Cobalt
Strike存在延迟问题。4/21/2017编辑：以下socat命令似乎可以解决问题，由测试员@xorrior提供：
    socat udp4-recvfrom:53,reuseaddr,fork udp4-sendto:; echo -ne
[重定向Cobalt Strike DNS信号 - Steve
Borosh](http://www.rvrsh3ll.net/blog/offensive/redirecting-cobalt-strike-dns-beacons/)
### iptables
iptables DNS转发规则与Cobalt Strike一起运行良好。似乎没有任何socat处理这种类型的流量的问题。
以下是DNS重定向器规则集的示例。
    iptables -I INPUT -p udp -m udp --dport 53 -j ACCEPT
    iptables -t nat -A PREROUTING -p udp --dport 53 -j DNAT --to-destination ip:53
    iptables -t nat -A POSTROUTING -j MASQUERADE
    sysctl net.ipv4.ip_forward=1
另外，将“FORWARD”链策略改为“ACCEPT”
### DNS重定向也可以在NAT之后完成
有时可能需要在内部网络上托管c2服务器。使用IPTABLES，SOCAT和反向ssh隧道的组合，可以通过以下方式来实现。
在这种情况下，我们的volitile重定向器使用本节前面描述的规则，用IPTables转发所有DNS流量。接下来，我们从我们的内部c2服务器到我们的主要重定向器创建一个SSH反向端口转发隧道。这将把主要重定向器6667端口上接收的任何流量转发到内部c2服务器的6667端口上。现在，在我们的team
server上启动socat，将6667端口上的任何传入TCP流量分配到UDP端口53，DNS
c2需要监听。最后，我们类似地在主重定向器上设置一个socat实例，以将任何传入53端口的UDP流量重定向到端口6667的SSH隧道。
## HTTP(S)
### socat与mod_rewrite对比
socat提供了重定向功能。任何在socat指定的源接口/端口上接收到的请求都将重定向到目标IP /端口。无过滤或条件重定向。另一方面，Apache
mod_rewrite提供了多种方法来加强网络钓鱼，并提高测试基础架构的弹性。mod_rewrite可以根据请求属性（如URI，用户代理，查询字符串，操作系统和IP）执行条件重定向。Apache
mod_rewrite使用htaccess文件配置规则集，控制Apache应如何处理每个传入的请求。使用这些规则，例如，您可以使用默认的wget
UA将到您的服务器的请求重定向到目标网站的合法页面。
简而言之，如果重定向器需要执行条件重定向或高级过滤，请使用Apache
mod_rewrite。否则，使用可选iptables过滤的socat重定向就足够了。
### Payloads和Web重定向
在提供payload和网络资源时，无论是建立C2还是收集情报，我们都希望尽量弱化事件响应者查看文件的能力，并增加成功执行有效载荷的机会。
Apache ModRewrite的用法和示例：Jeff Dimmock：
  * [使用Apache mod_rewrite加强您的网络钓鱼](https://bluescreenofjeff.com/2016-03-22-strengthen-your-phishing-with-apache-mod_rewrite-and-mobile-user-redirection/)
  * [使用Apache mod_rewrite的无效的URI重定向](https://bluescreenofjeff.com/2016-03-29-invalid-uri-redirection-with-apache-mod_rewrite/)
  * [基于操作系统的重定向与Apache mod_rewrite](https://bluescreenofjeff.com/2016-04-05-operating-system-based-redirection-with-apache-mod_rewrite/)
  * [使用Apache mod_rewrite的事件响应](https://bluescreenofjeff.com/2016-04-12-combatting-incident-responders-with-apache-mod_rewrite/)
  * [使用Apache RewriteMap的过期钓鱼链接](https://bluescreenofjeff.com/2016-04-19-expire-phishing-links-with-apache-rewritemap/)
  * [Apache mod_rewrite Grab Bag](https://bluescreenofjeff.com/2016-12-23-apache_mod_rewrite_grab_bag/)
要在重定向服务器上自动设置Apache Mod_Rewrite，请查看Julain
Catrambone([@n0pe_sled](https://twitter.com/n0pe_sled))博客文章 [Mod_Rewrite
Automatic Setup](https://blog.inspired-sec.com/archive/2017/04/17/Mod-Rewrite-Automatic-Setup.html)及其[附带的工具 ](https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup)
### C2 重定向器
重定向C2流量有双重意图：模糊后端team服务器，以及如果事件响应者浏览网页，可看到似乎是合法的网站。通过使用Apache
mod_rewrite和定制的C2配置文件或其他代理（例如使用Flask），我们可以可靠地过滤来自调查流量中的真实C2流量。
  * [Cobalt Strike HTTP C2 Redirectors with Apache mod_rewrite - Jeff Dimmock](https://bluescreenofjeff.com/2016-06-28-cobalt-strike-http-c2-redirectors-with-apache-mod_rewrite/)
  * [Expand Your Horizon Red Team – Modern SAAS C2 - Alex Rymdeko-Harvey (@killswitch-gui)](https://cybersyndicates.com/2017/04/expand-your-horizon-red-team/)
### 其他 Apache mod_rewrite 资源
  * [mod-rewrite-cheatsheet.com](http://mod-rewrite-cheatsheet.com/)
  * [Official Apache 2.4 mod_rewrite Documentation](http://httpd.apache.org/docs/current/rewrite/)
  * [Apache mod_rewrite Introduction](https://httpd.apache.org/docs/2.4/en/rewrite/intro.html)
  * [An In-Depth Guide to mod_rewrite for Apache](http://code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache--net-6708)
  * [Mod_Rewrite/.htaccess Syntax Checker](http://www.htaccesscheck.com/)
# 修改C2流量
## Cobalt Strike
Cobalt Strike通过Malleable
C2配置文件修改其通信流量。配置文件提供了高度可定制的选项，用于修改服务器的C2流量如何在链路上显示。Malleable
C2配置文件可用于加强躲避事件响应==incident response evasion==，模拟已知对手或伪装成目标使用的合法内部应用程序。
  * [Malleable C2 Profiles - GitHub](https://github.com/rsmudge/Malleable-C2-Profiles)
  * [Malleable Command and Control Documentation - cobaltstrike.com](https://www.cobaltstrike.com/help-malleable-c2)
  * [Cobalt Strike 2.0 - Malleable Command and Control - Raphael Mudge](http://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/)
  * [Cobalt Strike 3.6 - A Path for Privilege Escalation - Raphael Mudge](http://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/)
  * [A Brave New World: Malleable C2 - Will Schroeder (@harmj0y)](http://www.harmj0y.net/blog/redteaming/a-brave-new-world-malleable-c2/)
  * [How to Write Malleable C2 Profiles for Cobalt Strike - Jeff Dimmock](https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/)
## Empire
Empire使用通信配置文件，它为GET请求URI，UA和请求头提供定制选项。配置文件由各元素组成，由管道字符分隔，在`listeners`菜单中的`set
DefaultProfile` 选项进行设置。
以下是默认配置文件示例：
    &quot;/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en&quot;
或者，DefaultProfile值可以在Empire初始设置之前通过修改`/setup/setup_database.py`文件来设置。这将更改Empire使用的默认通信配置文件。
  * [Default Empire Communication Profiles (in Empire GitHub repo)](https://github.com/EmpireProject/Empire/tree/master/data/profiles)
  * [How to Make Communication Profiles for Empire - Jeff Dimmock](https://bluescreenofjeff.com/2017-03-01-how-to-make-communication-profiles-for-empire/)
# Domain Fronting
Domain Fronting通过合法和高度信任的域来路由流量，用于逃避技术检测。支持Domain Fronting 的流行服务包括[Google App
Engine](https://cloud.google.com/appengine/), [Amazon
CloudFront](https://aws.amazon.com/cloudfront/), 和[Microsoft
Azure](https://azure.microsoft.com/)。简而言之，流量使用可信服务提供商的DNS和SNI名称，下面的示例中使用了Google。当边缘服务器接收到流量（例如：位于gmail.com）时，数据包将转发到数据包的主机头中指定的Origin
Server（例如：phish.appspot.com）。根据服务提供商，Origin
Server将直接将流量转发到指定的域（我们将指向我们的teamserver），或者需要代理应用程序来执行最后一跳。
有关Domain Fronting如何工作的更多详细信息，请参阅[白皮书通过domain
fronting阻止通信](https://www.bamsoftware.com/papers/fronting/)和[TOR项目的文档](https://trac.torproject.org/projects/tor/wiki/doc/meek)
寻找潜在的Frontable Domains的有用工具
  * [FindFrontableDomains](https://github.com/rvrsh3ll/FindFrontableDomains)
## 其他资源
  * [High-reputation Redirectors and Domain Fronting - Raphael Mudge](https://blog.cobaltstrike.com/2017/02/06/high-reputation-redirectors-and-domain-fronting/)
  * [Empire Domain Fronting Chris Ross (@xorrior)](https://www.xorrior.com/Empire-Domain-Fronting/)
  * [Domain Fronting via Cloudfront Alternate Domains - Vincenty Yiu (@vysecurity)](https://www.mdsec.co.uk/2017/02/domain-fronting-via-cloudfront-alternate-domains/)
  * [Escape and Evasion Egressing Restricted Networks - Tom Steele (@_tomsteele) and Chris Patten](https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks)
# 基础安全配置
攻击基础设施与任何其他互联网连接的主机相同，都可能受到攻击，同时，由于正在使用的数据和到目标环境的连接，攻击基础设施应被认定为高度敏感的。
在2016年，最常见的攻击工具被披露存在远程代码执行漏洞：
  * [2016 Metasploit RCE Static Key Deserialization](https://github.com/justinsteven/advisories/blob/master/2016_metasploit_rce_static_key_deserialization.md)
  * [2017 Metasploit Meterpreter Dir Traversal Bugs](https://github.com/justinsteven/advisories/blob/master/2017_metasploit_meterpreter_dir_traversal_bugs.md)
  * [Empire Fails - Will Schroeder](http://www.harmj0y.net/blog/empire/empire-fails/)
  * [Cobalt Strike 3.5.1 Important Security Update - Raphael Mudge](http://blog.cobaltstrike.com/2016/10/03/cobalt-strike-3-5-1-important-security-update/)
应该使用 **iptables** 来过滤不需要的流量并限制所需基础设施元素之间的流量。例如，如果Cobalt
Strike服务器仅向Apache重定向器提供资产，则iptables规则应仅允许来自重定向器的源IP的端口80。这对于任何管理界面（例如SSH或Cobalt
Strike的默认端口50050）尤其重要。此外还可以考虑阻止非目标国家/地区的IP。
**chattr**
可以用于teamserver，以防止修改cron目录。使用chattr，您可以限制任何用户（包括root）修改文件，直到删除chattr属性。
**SSH** 应该仅限于公钥身份认证，并配置为使用受限权限用户进行初始登录。为了增加安全性，请考虑向SSH添加多因素认证。
**更新** ！没有提醒定期更新系统，并根据需要执行热修复来修复漏洞的安全列表都不完整。
当然，这个列表并不是teamserver的全部安全措施。基础设施的常见安全措施：
  * [Red Hat Enterprise Linux 6 Security Guide](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/pdf/Security_Guide/Red_Hat_Enterprise_Linux-6-Security_Guide-en-US.pdf)
  * [Debian Documentation on Hardening](https://wiki.debian.org/Hardening)
  * [Securing Debian Manual](https://www.debian.org/doc/manuals/securing-debian-howto/)
  * [20 Linux Server Hardening Security Tips - nixCraft](https://www.cyberciti.biz/tips/linux-security.html)
  * [SANS Linux Security Checklists](https://www.sans.org/score/checklists/linux)
# 提示
  * **记录一切** \- 运行一套复杂的红队基础设施意味着许多更改的部分。确保记录每个资产的功能和流量发送的目的地。
  * **在不同服务提供商和区域之间划分资产** \- 基础设施资产应分散在多个服务提供商和地理区域。蓝队成员可能针对被识别为主动攻击的服务商来源提高监视阈值，甚至可能彻底阻止该服务提供商。注意：如果跨越国家边界发送加密或敏感数据，请牢记国际隐私法。
  * **监控日志** \- 应在整个交互过程中进行所有日志监控：SMTP日志，Apache日志，socat重定向器上的tcatdump，iptables日志（特指流量转发或有针对性的过滤），weblogs，Cobalt Strike / Empire / MSF日志。将日志转发到集中地，例如使用rsyslog，以便于监控。@Killswitch_GUI创建了一个名为lTerm的易用的程序，它将所有bash终端命令记录到集中地。[用lTerm记录所有终端输出](https://github.com/killswitch-GUI/lterm)
  * **指纹事件响应** \- 如果可能，在评估开始之前尝试被动或主动指纹IR操作。例如，将普通的网络钓鱼电子邮件发送到目标（使用不相关的基础架构）并监视基础设施接收的流量。IR团队调查可以披露大量有关团队运作情况的信息以及他们使用的基础设施。如果这可以在评估之前确定，则可以将其彻底过滤或重定向。