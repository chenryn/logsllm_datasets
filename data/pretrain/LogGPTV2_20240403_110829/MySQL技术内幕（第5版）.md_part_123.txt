生成一个 Zip 格式的文件。在 Unix 系统里，可以使用 gzip 或bzip2 来压缩。你甚至可以使用
法是对其进行压缩。在Windows 系统里，可以选用WinZip或与其类似的程序来压缩转储文件，
口通常情况下，在用mysqldump命令行来命名数据库时，可以选择在后面加上具体的表
mysqldump 有许多选项。下面列出其中比较常用的部分。更多选项，请参考附录F。
mysqldump sampdb student score grade_event absence > gradebook.sql
%mysqldump sampdb member president > hist-league.sql
如果觉得过大的转储文件难以管理，那么可以在mysqldump命令行里，采用数据库名后面
转储文件通常都很大，因此你可能会想要它们变得更小一点。一种减小转储文件大小的方
此文件的其余部分包含了更多的 SQL语句，如CREATE TABLE和 INSERT。
UNLOCK TABLES;
(10,'2012-09-06)
INSERT INTO
/*!40000ALTER TABLE
LOCK TABLESabsence
/*!40101 SET character_set_client = @saved_cs_client */;
CREATE TABLE
/*!40101 SET character_set_client=utf8 */;
DROP TABLE IF EXISTSabsence′;
mysqldump的输出内容类似下面这个样子：
%mysqldump sampdb>/archive/mysql/sampdb.2013-01-02
mysqldump sampdb|
..多条SET语句
Dumping data for tableabsence
ENGINE=InnoDB DEFAULT CHARSET=latin1;
REFERENCES`student
CONSTRAINT
PRIMARYKEY
date
Table structure for tableabsence
student_id
Server version
Host:localhost
MySQL dump 10.13 Distrib 5.5.30, for Linux (i686)
date
absence'
NOT NULL,
absence
int(10)
student_id,date`)，
,（10,'2012-09-09')
bzip2>/archive/mysql/sampdb.2013-01-02.bz2
absenceDISABLE KEYS*/;
VALUES(3,*2012-09-03),(5,2012-09-03),
WRITE;
unsigned NOT NULL,
Database:sampdb
(`student_id`)
5.5.30-1og
FOREIGN KEY (`student_id)
ENABLE KEYS */;
,（17，
@@character_set_client
*/;
14.4
数据库备份
519
---
## Page 540
口如果要转储 InnoDB表，可以使用--single-transaction 选项，把表都转储到一个事
口
口
口
时，它就是一个缺点。如果想产生单行形式的 INSERT 语句，可以使用--skip-
l-opt选项可以对转储过程进行优化。它会同时启用其他几个选项，对转储过程进行优
务里，这样就能获得一致的备份。
表的更新内容的选项，因此你只能靠自己提取它们。）
个表，那么让日志的检查点与备份文件保持同步会更难。（没有用于从日志里提取各个
整个数据库。在进行恢复时，通常是提取每个数据库的日志内容。如果你转储的是单
如果想要使用--flush-logs把日志的检查点设置为备份的时间，那么最好能每次转储
户端带来不便。）
种做法的弊端是：在备份期间锁定所有的表，会对那些在此期间需要执行更新操作的客
中只会包含那些自检查点之后发生的数据修改。这样便同步了日志与备份的时间。
如果启用了二进制日志功能，那么刷新日志，将会创建一个新的二进制日志文件，
--lock-all-tables可获得全局读锁，而--flush-logs可关闭和重新打开日志文件
在为数据库设置检查点时，最好是同时使用--flush-logs和--lock-all-tables.
extended-insert 选项。
式的INSERT 语句。虽然这种做法可以节省空间，但在你想要一个更可读的转储文件
--opt选项的另一个效果是启用--extendea-insert选项，使mysqldump写入多行形
库数据副本，定期重新加载它。
试服务器不是复制（replication）从服务器，就可以利用这种技术和生产服务器上的数据
据库）的，那么--opt选项会很有用。这是因为--opt选项会自动启用--add-drop
如果生成的备份文件是用于定期更新另一个数据库的内容（如另一个服务器上的某个数
--opt选项默认是启用的，因此不需要显式指定它。如果你真的不需要优化转储，可以
这个转储文件时，整个过程也会更快。例如，--opt的其中一个效果便是让mysqldump
化，从而产生更小的转储输出。这些选项也会优化还原过程，因为当你以后重新加载
info或--no-data选项。
容(使用INSERT语句）。如果只想转储这两类信息中的一类，则可以使用--no-create-
默认情况下，mysqldump程序将同时转储表的结构（使用cREATE TABLE语句）和表的内
如果想把转储输出加载到另一个服务器，则需要慎重选用--all-databases 选项。转储
给出任何数据库名或表名参数。--databases和--all-databases选项都可以使得4
想转储某个服务器里的所有数据库，则可以使用--all-databases选项。此时，不月
会把命令行里的所有名字解释成数据库名，并依次转储这些数据库里的所有表。如果
11
-table选项，从而使mysqldump在备份文件的每一条CREATETABLE语句的前面，为
所
数
使
使
空
第14章数据库维护、备份和复制
二个数据库时，不会在这个表已经存在的情况下发生错误。如果你想运行第二个的测
一个相同的表加上一条DROPTABLEIFEXISTS语句。当你把这个备份文件加载到第
有的表。
据库的访问操作。--opt 选项会阻止任何人更新你正在转储的表，因为它会同时锁定
，使用--opt 选项是有代价的。--opt 选项优化的是备份过程，而不是其他客户端对
用--opt选项来进行备份是最常见的做法，
用--skip-opt 选项来禁用它。
间更少，重新加载的速度更快。
入多行形式的INSERT 语句。
，与单行形式的INSERT语句相比，这种多行语句占用的
：因为它可以加快备份速度。但需要注意的
其
每
用
---
## Page 541
份所有的内容。例如：
文件，存放在/archive/mysql目录里，那么可以把当前位置切换到服务器数据目录，然后备
止服务器并复制整个数据目录的办法来制作备份。例如，想要创建一个备份，并将其压缩成tar
库目录都在数据目录下，并且日志和信息文件都默认在那里创建。在这种情况下，可以通过停
各存储引擎才能关闭它们的日志文件，服务器才能关闭任何它正在写入的其他日志。
slave_load_tmpdir设置为这个目录的路径名。
找到这些文件，可以创建一个专门让从服务器使用的目录，并且在启动从服务器时，将
目录里找到。如果未给出这个变量，那么它默认为系统变量tmpair的值。为了在备份时容易
们都是LOAD DATA 语句所需要的。这些文件都可以在系统变量 slave_load_tmpdir所指定的
会在其临时目录里创建以 SQL_LOAD-xXx形式命名的文件。你应该把这些文件也备份起来，
应该复制中继日志文件、master.info文件和relay-log.info文件。另外，从服务器还可能
日志文件。为保险起见，你还应该复制二进制日志文件。如果服务器是一个复制从服务器，就
14.4.3.1制作完整的二进制备份
为你使用的文件复制技术可能只会复制那些符号链接，而不会复制它们所指向的数据。
指向MyISAM数据或索引文件的符号链接）可能带来的问题。之所以这会成为一个问题，是因
键点。
Enterprise Backup，这是一个商业程序）。在使用直接复制的备份方法时，需要注意如下两个关
用常规的文件系统工具（如cp、tar 或rsync），或者使用专门为此开发的程序（如 MySQL
14.4.3制作二进制数据库备份
所有这些听起来让人感觉备份时要做很多事情，但实际上没那么复杂。例如，所有的数据
如果想要正确复制上面提到的所有文件，则必须停止服务器，并且必须是彻底关闭，这样
%cd/usr/local/mysgl/data
不使用mysqldump 程序对数据库或表进行备份的方法是直接复制表文件。通常的做法是使
一个完整的二进制备份至少应该包括存储表内容的所有文件和特定存储引擎所使用的各种
在制作二进制备份时，一定要注意符号链接（如数据目录里指向各数据库目录的符号链接、
口一定要确保表未被使用。当你正在复制某个表时，如果服务器正在更改它，那么复节
口
口
口如果数据库包含存储例程、角
制.frm文件以外，还必须复制所有的表空间文件和InnoDB日志文件。
和.MYI文件即可。对于InnoDB这样的存储引擎，事情会变得比较复杂：除了必须复
标识的文件来表示给定的表。如果想备份某个MyISAM表，只需复制它的.frm、·MYD
制法最适用于像MyISAM这样的存储引擎，在数据目录里它们都会使用一组具有唯一
为了能够恢复你正在备份的那些表，你必须复制恢复操作所需要的全部文件。直接复
在你正在复制表文件时去修改它们。更多相关信息请参考14.2节。
服务器（并且备份方法也没有那样要求），那么可以使用只读锁定机制，防止服务器
操作就将毫无意义。为了保证备份的完整性，最好是先停止服务器，再复制文件，最)
息，在使用该文件的内容对从服务器进行初始化之后，从服务器会由该处开始复制。
项就能派上用场。使用这个选项，转储文件会包含与主服务器二进制日志坐标有关的信
当你期望通过建立复制从服务器来在主服务器上生成转储文件时，--master-data 选
触发器（因为它们与表关联在一起），而不会包含存储例程和事件。
--skip-triggers），可用于禁止转储相应的对象。
--events选项，把它们显式地放到转储输出里。
启服务器。事实上，有好几种二进制备份方法都要求你停止服务器。如果不想停I
触发器和事件，那么可以使用--routines、
。默认情况下，转储输出里只会包含
，这几个选项都有--skip形式（如
14.4数据库备份
--triggers和
521
它
器
斤
后
制
---
## Page 542
备份为一个文件或一组文件。你可以把这些文件复制到第二台服务器主机上，并把它们加载到
面的讨论描述的是如何复制整个数据库，但是你也可以把这些技术用于复制单个表。
主机 boa.example.com的服务器上。不过，这两个服务器也可以运行在同一台主机上。虽然T
种迁移数据库的办法。为便于讨论，我假设要把一个数据库从本地主机的服务器上迁移到远和
14.5
信息，请访间http：//www.mysql.com。
Backup是Oracle公司的一个商业程序，它能让你在服务器处于运行状态时进行备份。更多详细
中转储表。对于InnoDB，这样可以确保表在转储期间不会被修改，从而保证了备份的一致性。
表
14.4.4备份InnoDB表
用这种办法。如果前几个示例里使用的mydb数据库是这样的数据库，则可以在执行备份命令
那么可以不用停止服务器就能进行部分备份。例如，如果数据库只包含MyISAM表，就可以采
止服务器，然后执行下面的命令：
data里的mydb 数据库，并且想把备份存储到归档目录/archive/mysql下。那么就可以先停
只需要复制整个文件集里的一个子集即可。假设，想要备份位于数据目录/usr/local/mysql/
14.4.3.2制作部分的二进制备份
522
接下来讨论如何使用把数据库复制到另一个服务器的两种方法。第一种方法是，把数据库
一样。在这种情况下，--single-transaction 选项很有用，它将使 mysqldump 在一个事务
前，先给那些表加只读锁，并刷新表，接着，在备份完成之后，释放这些表锁。
可以通过数据库备份来把某个数据库从一个 MySQL 服务器复制到另一个。本节将介绍几
对于InnoDB这样的事务型存储引擎，它的表也可以用mysqldump来转储，和其他类型的
通过复制文件的办法来制作部分的二进制备份，与制作完整的备份很相似，不同之处在于
你也可以使用MySQLEnterprise Backup来制作InnoDB表的二进制备份。MySQLEnterprise
如果想要制作二进制InnoDB备份，则必须注意以下几个特殊要求。
在某些情况下，如果你使用只读锁定协议（read-locking protocol）锁定了你想要复制的表
在备份完成之后，需要重启服务器。
在执行完这些命令之后，/archive/mysql/mydb 目录下就会有一个 mydb 数据库的副本。
%cd/usr/local/mysql/data
% tar czf /archive/mysql/backup-al1-2013-04-11.tar.gz.
口女
口InnoDB有其自己的事务管理日志文件，这些日志文件在服务器运行时是激活的。
olo
将数据库复制到另一个服务器
■InnoDB日志文件。
■每个表的.ibd文件（如果你配置InnoDB时让它使用了单个表空间文件）。
■系统表空间文件。
如果想要制作InnoDB表的二进制备份，则必须复制以下文件。
异常关闭，这样InnoDB才能完成尚未完成的事务，并正确关闭它的日志。
此，如果想要制作二进制备份，则必须先停止服务器，而且必须是彻底关闭，不能是
第14章数据库维护、备份和复制
堪。）
于再次初始化系统表空间。如果不这样做，那么一旦当前选项文件丢失，你将痛苦不
系统表空间配置所特有的选项文件。（请为这种选项文件创建一个副本，因为它可用
每个表的.frm文件。
因
---
## Page 543
善性能，因为它能够减少网络传输的数据量：
以使用ssh来远程调用mysql程序：
容加载到该服务器。
例如，下面这条命令将把sampdb数据库从本地主机复制到boa.example.com主机的服务器上：
另外，你也可以通过网络把 mysqldump 的输出直接写到另一个服务器，从而不需要中间文件。
14.5.2
制到该主机上：
boa.example.com上的数据目录为/var/mysql/data,那么下列命令将把mydb数据库的目录复
库目录下的那些文件里。如果本地数据目录为/usr/local/mysql/data，并且远程主机
另一台主机。假设mydb数据库的表全部为 MyISAM表，那么表信息就会全部包含在mydb 数据
boa.example.com主机的/tmp目录里：
演示了如何使用这一流程来复制 sampdb 数据库。
将其复制到第二台服务器主机上，最后将其加载到该主机的 MySQL 服务器里。下面这个示例
14.5.1使用备份文件来复制数据库
另一个服务器。使用这种方法无需使用任何中间文件。
第二台主机的MySQL服务器里。第二种方法是，通过网络把数据库从一个服务器直接转储到
_如果不能从本地主机访问远程MySQL 服务器，但是可以通过远程登录进行访问，那么可
如果网络速度慢，那么在把数据库复制到另一台机器时，可以使用--compress 选项来改
%mysqldump --databases sampdb I ssh boa.example.com mysql
这里，mysql 程序会读取转储输出，连接 boa.example.com主机上的服务器，并把转储内
上一节展示的mysqldump 技术会创建一个转储文件，并把它复制到目标服务器的主机上。
使用文本备份文件来复制数据库的操作流程是：先用 mysqldump 程序创建备份文件，然后
mysqldump--databases sampdbImysql-h boa.example.com
口你必须阻止两台主机上的两个服务器尝试更改你正在复制的表。最安全的做法是，在
口两台机器必须拥有相同的硬件架构，或者你所复制的那些表都使用了二进制可移植的
如果想要用这种方式把数据库文件复制到另一台主机上，就必须满足以下要求。
%scp -r mydb boa.example.com:/var/mysql/data