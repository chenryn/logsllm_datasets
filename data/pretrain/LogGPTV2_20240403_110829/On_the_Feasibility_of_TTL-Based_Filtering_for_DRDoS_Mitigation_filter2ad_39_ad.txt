N-hop connection (c) A more complex scenario is when two or more interme-
diate AS are missing. In such a scenario, we build a tree of possible subpaths
by examining additional two levels5 of neighbors. Upon building up the tree
of all possible paths, we test every branch over the database of available
BGP routes and the pre-computed table of probabilities. In case the branch
is present in the BGP routing database, we deem that particular route to be
the accurate one.
Once the bridging subpath is identiﬁed, we add up the average hop count
of the connecting ASes to the sum of the hop count value estimated for the
subpaths.
6 Experimental Setup and Results
In the following, we describe the data set used to evaluate our approach. Subse-
quently, we present and discuss the experimental results of the evaluation.
6.1 Data Set
To evaluate the proposed methodology, we mainly use services provided by the
RIPE Atlas network [3], which is the largest Internet measurement network built
by RIPE NCC. Moreover, they provide an API for creating diﬀerent types of
measurements and for collecting the data in a structured format. In the following,
we list the services and data sources used for our experimental evaluation.
1. RIPE Atlas probes: To attain a global coverage and also to have a possibility
to obtain the ground truth, we use the RIPE Atlas network of probes [3] as
a basis for our experiments. We observe that this network has around 9,000
active probes, spread across 181 countries and 3,386 ASes [4]. Such a global
coverage fulﬁls the requirements for our experimental evaluation. Moreover,
the platform give us the ﬂexibility for requesting custom measurements, in
4 Peering ASes are ASes which directly interconnect with each other. We obtain this
information from the available BGP data.
5 Statistics [3] show that average length of AS-level paths is 4, therefore we bound the
subpath examination to 2 levels, i.e., we can examine paths of at least 6 hops.
On the Feasibility of TTL-Based Filtering for DRDoS Mitigation
319
our case traceroutes, by selecting any of the deployed active probes. This
ﬂexibility is of particular importance for our experiments since we can select
a subset of nodes with diﬀerent geographical and logical locations to collect
the traceroute data. Additionally, when a probe acts as a victim in our leave-
one-out analysis (which we outline in the following), we can easily obtain
the ground truth by running traceroute measurement from the probes to the
ampliﬁers.
2. BGP data: When the collected traceroute data is not enough for making the
ﬁnal assessment of the connectivity between the ASes, we utilize available
BGP data. In order to infer the AS-level connectivity, we use RIPE Atlas
as an accurate source for BGP data. Also the BGP data helps to obtain a
ground truth of individual ASes.
3. Ampliﬁers: To investigate the real-world implications of our attack, we
scanned for chargen ampliﬁers on the Internet. In total, we randomly selected
16 such servers.
6.2 Leave-one-out Evaluation
To evaluate the performance of our methodology, we use a leave-one-out (L-1-
O) evaluation approach, in which every probe acts like a victim at a selected
time. Informally, for a data set with P probes, we perform P experiments with
P − 1 training cases and one test case. In other words, for every experiment we
temporarily remove one probe from the data set and select that particular probe
as our victim. Upon ﬁxing the probe Pi as a victim V , the model is rebuilt upon
this newly deﬁned set.
Suppose that P = p1, . . . , pn is a set of probes, M = m1, . . . , ml set of
ampliﬁers, and R = r11, . . . , rnm set of traceroutes where rij is a traceroute
from pi to mj. For ease of exposition, we use the notation pi ⇒R M to describe
a set of all traceroutes from pi to every member of the set M. Applying the L-1-0
approach to the methodology works as follows:
(cid:2) {pi ⇒R P\{pi}|i = 1, . . . , n}).
1. Collect the traceroute data (R
2. Process the data and extract the ground truth.
3. Remove probe pi from P (P\{pi}) and set V = pi, where V is the victim.
4. Extract the ground truth for pi to M i.e., the distance from pi ⇒R M.
5. Run the EDA using the remaining data.
6. Repeat step 3–5 for i = 1, . . . , n
L-1-O in Practice. We apply the L-1-O method on a set of 40 random RIPE
Atlas probes, located in diﬀerent ASes, and 16 randomly distributed chargen
ampliﬁers. We ﬁrst collect the required data, namely, we obtain the path from
every probe to all of the 16 ampliﬁers, and also between the probes within the
set. We use the RIPE Atlas REST API to create IPv4 traceroutes using ICMP
packets and hops limit of 32. In order to get more precise paths and avoid
measurements inconsistencies caused by load balancing routers, we employ the
Paris traceroute measurement tool [6].
320
M. Backes et al.
Once the traceroute data is collected and the data set is processed, i.e.,
cleaned up using the method described in Sect. 5.2, we pass the data through step
3–6 from the L-1-0 approach. In such experimental setup, L-1-O theoretically
can evaluate 640 TTL predictions, i.e., paths from 16 ampliﬁers to 40 victims.
Unfortunately, because of the incompleteness of the traceroute data as well as
instability of some of the probes, the method was able to predict and evaluate
around 593 (92.6 %) individual paths.
Overall Performance. Table 2 shows the overall performance of our method-
ology. The experimental results show that using our methodology, an attacker
can predict correctly without any deviation roughly 13 % of the paths between
the ampliﬁers and the victims, i.e., 13 % of the measured hop counts match the
ground truth. However, we showed in Sect. 4 that, with a tolerance of ±2, a
TTL-based defense could block over 75 % of spoofed traﬃc, while allowing 85 %
of benign traﬃc to pass. Therefore, when we take this threshold into considera-
tion, our methodology is eﬀective for 56.3 % of the paths.
Table 2. Overall performance of the methodology
Amount Fraction Cumulated fraction
78
170
±0
±1
±2
±3
More 164
13.2 % 13.2 %
28.7 % 28.5 %
22.3 % 56.3 %
8.3 % 69.1 %
27.7 % 100 %
132
49
Moreover, we observe that applying our methodology to a set of randomly
chosen ampliﬁers, the attacker can isolate ampliﬁers for which he can predict
the hop count value between the ampliﬁer and any arbitrary victim with higher
accuracy. Thus, he can bypass the TTL-based defense running on the ampliﬁer
and exploit it for a DRDoS attack. Figure 6 illustrates the average hop count
deviation per ampliﬁer and shows that the attacker can, indeed, sample a set
of good ampliﬁers. We see several explanations for such a deviation among the
ampliﬁers. The geographical and logical location of the ampliﬁers and the victims
plays an important role. As we discussed before, the limitation of the BGP data
makes our methodology not equally precise for all the AS. Also another cause is
the inconsistency of the collected data between BGP data and traceroute path
caused by Internet Exchange Points and sibling ASes managed by the same
institution. However, these results show that even with a low threshold value
at the ampliﬁer, by wisely choosing ampliﬁers to use, an attacker is able to
circumvent any TTL-based defense against DRDoS attacks.
On the Feasibility of TTL-Based Filtering for DRDoS Mitigation
321
Fig. 6. Average hop deviation per ampliﬁer
7 Conclusion
In this paper, we evaluated the feasibility of using Hop Count Filtering to mit-
igate DRDoS attacks. To that end, we detailed how a server can use active
probing to learn TTLs of alleged packet senders. Based on data sets of benign
and spoofed NTP requests, we ﬁnd that with a tolerance of ±2, a TTL-based
defense could block over 75 % of spoofed traﬃc, while allowing 85 % of benign
traﬃc to pass. Subsequently, however, we show that an attacker can use a com-
bination of tracerouting and BGP data to build statistical models, which allows
him to estimate the TTL for his target within that tolerance level. Hence, by
wisely choosing ampliﬁers to use, he is able to circumvent any TTL-based defense
against DRDoS attacks. We therefore argue that any (current or future) defen-
sive system based on TTL values can be bypassed in a similar fashion, and ﬁnd
that future research must be steered towards more fundamental solutions to
thwart any kind of IP spooﬁng attacks.
Acknowledgments. This work was supported by the German Federal Ministry of
Education and Research (BMBF) through funding for the Center for IT-Security, Pri-
vacy and Accountability (CISPA) as well as through the BMBF grant 01IS14009B
(“BDSec”).
The authors would like to thank Sven Bugiel for his comments on an earlier version
of the paper. Additionally, we are grateful for the feedback from our shepherd Roberto
Perdisci as well as those of our anonymous reviewers.
References
1. Default TTL values
in TCP/IP. http://www.map.meteoswiss.ch/map-doc/
ftp-probleme.htm
2. Functional requirements for broadband residential gateway devices. https://www.
broadband-forum.org/technical/download/TR-124.pdf
3. RIPE Atlas: Internet data collection system. https://atlas.ripe.net/
4. RIPE Atlas: Statistics and network coverage. https://atlas.ripe.net/results/maps/
network-coverage/
5. Technical details behind a 400Gbps NTP ampliﬁcation DDoS attack. https://goo.
gl/j7zWEp
322
M. Backes et al.
6. Augustin, B., Cuvellier, X., Orgogozo, B., Viger, F., Friedman, T., Latapy, M.,
Magnien, C., Teixeira, R.: Avoiding traceroute anomalies with Paris traceroute.
In: Internet Measurement Conference (2006)
7. Beitollahi, H., Deconinck, G.: Analyzing well-known countermeasures against dis-
tributed denial of service attacks. Comput. Commun. 35, 1312–1332 (2012)
8. Durumeric, Z., Bailey, M., Halderman, J.A.: An internet-wide view of internet-wide
scanning. In: USENIX Security Symposium (2014)
9. Gregori, E., Improta, A., Lenzini, L., Rossi, L., Sani, L.: On the incompleteness of
the AS-level graph: a novel methodology for BGP route collector placement. In:
Internet Measurement Conference (2012)
10. Jin, C., Wang, H., Shin, K.G.: Hop-count ﬁltering: an eﬀective defense against
spoofed DDoS traﬃc. In: Proceedings of the 10th ACM Conference on Computer
and Communications Security. ACM (2003)
11. Katz-Bassett, E., Madhyastha, H.V., Adhikari, V.K., Scott, C., Sherry, J., van
Wesep, P., Anderson, T.E., Krishnamurthy, A.: Reverse traceroute. In: USENIX
NSDI (2010)
12. K¨uhrer, M., Hupperich, T., Rossow, C., Holz, T.: Exit from hell? Reducing the
impact of ampliﬁcation DDoS attacks. In: USENIX Security Symposium (2014)
13. Mao, Z.M., Rexford, J., Wang, J., Katz, R.H.: Towards an accurate AS-level tracer-
oute tool. In: Conference on Applications, Technologies, Architectures, and Proto-
cols for Computer Communication (2003)
14. Mirkovic, J., Reiher, P.L.: A taxonomy of DDoS attack and DDoS defense mecha-
nisms. Comput. Commun. Rev. 34, 39–53 (2004)
15. Mukaddam, A., Elhajj, I., Kayssi, A.I., Chehab, A.: IP spooﬁng detection using
modiﬁed hop count. In: International Conference on Advanced Information Net-
working and Applications (2014)
16. Oliveira, R.V., Pei, D., Willinger, W., Zhang, B., Zhang, L.: The (in)completeness
of the observed internet AS-level structure. IEEE/ACM Trans. Netw. 18(1), 109–
122 (2010)
17. Paxson, V.: An analysis of using reﬂectors for distributed denial-of-service attacks.
Comput. Commun. Rev. 31(3), 38–47 (2001)
18. Pepelnjak, I., Durand, J., Doering, G.: BGP operations and security. RFC 7454,
RFC Editor (2015). https://tools.ietf.org/html/rfc7454
19. Postel, J.: Internet protocol speciﬁcation. RFC 791, RFC Editor (1981). https://
tools.ietf.org/html/rfc791
20. Postel, J.: Character generator protocol. RFC 864, RFC Editor (1983). https://
tools.ietf.org/html/rfc864
21. Rosen, E.C., Viswanathan, A., Callon, R.: Multiprotocol label switching architec-
ture. RFC 3031, RFC Editor, January 2001. http://tools.ietf.org/html/rfc3031
22. Rossow, C.: Ampliﬁcation hell: revisiting network protocols for DDoS abuse. In:
NDSS (2014)
23. Ryba, F.J., Orlinski, M., W¨ahlisch, M., Rossow, C., Schmidt, T.C.: Ampliﬁca-
tion and DRDoS attack defense-a survey and new perspectives. arXiv preprint
arXiv:1505.07892 (2015)
24. Specht, S.M., Lee, R.B.: Distributed denial of service: taxonomies of attacks, tools,
and countermeasures. In: International Conference on Parallel and Distributed
Computing Systems (2004)