API是依赖什么语言实现的？Java、.NET、PHP、Python、Go还
是其他语言？
■ API运行所依赖的组件是什么版本，是否存在已知漏洞？
■ 互联网上是否存在其泄露的API Key或证书？
■ API是否存在多个版本？多个接入端？
5.2.2 漏洞发现
漏洞发现是利用收集到的信息，发现应用程序的缺陷或漏洞的过
程。在常规的渗透测试中，这种漏洞发现的范围非常广，包含了信息系
统的方方面面，比如网络层协议配置错误、主机补丁没有及时升级、应
用层权限配置错误等。通常情况下，漏洞发现的手段主要有自动化检测
和手工挖掘两种方式。
■ 
自动化检测：是指使用设备、工具、软件与被渗透对象进行交
互，根据应答响应情况判别是否存在漏洞。这种方式的检测一般耗时
短、速度快，但往往存在一定比例的漏报或误报。
■ 手工挖掘：是指以人工方式，辅助工具来验证被渗透对象是否存
在漏洞。这种方式的检测通常耗时长、速度慢，但准确性高，很少存在
误报。
在实际工作中，往往两种方式混合使用，比如先使用自动化检测工
具全量扫描一次，再针对高风险业务场景，进行人工渗透或复核。
在API渗透测试中，因为API的特殊性，如果前期信息收集不全
（比如API列表不全遗漏了影子API），自动化扫描过程中会无法检测
到相应API的漏洞，这时通常需要手工挖掘。在API渗透测试中，手工
挖掘往往占有较大的比重。当采用手工挖掘时，以下事项是需要重点关
注的。
■ 认证和授权：对于API的认证鉴权机制，设计人员和研发人员往
往认识不足，有的API调用甚至缺少认证与授权机制。比如令牌、HTTP
方法（GET，POST，PUT和DELETE等）在进入服务器之前是否都经过
了验证，OAuth协议使用的正确性，无认证和授权的API是否可以任意
调用。
■ 输入验证：和其他类型的应用程序一样，对于输入的不可信是应
用程序安全的基础，但研发人员常常因疏忽导致对输入缺少有效的验
证。比如XML实体注入类型的攻击、不同的响应类型application/json与
application/xml。
■ 
数据编码：包含JSON格式的数据，容易导致反序列化漏洞或远
程代码执行。
■ API版本和影子API：同一个API的不同版本或未在API规范文件
中描述的API，更容易发现安全漏洞。
针对手工挖掘更多的注意事项，第4章中介绍的API安全小贴士可以
做参考，为手工挖掘提供更多的挖掘思路。
5.2.3 漏洞利用
漏洞利用是基于上一步漏洞分析的基础上，进行有计划的精准打
击，其目的是攻击高价值的目标对象。在前两个步骤中，攻击本质上是
嘈杂的、尝试性的，到了本环节，目标对象的价值、漏洞利用的难度以
及杀伤力已经比较清晰了，渗透人员制定的攻击路径、漏洞适用性也更
深入、更精细。
在传统的渗透中，漏洞利用大多数是定制型的攻击，如果读者熟悉
漏洞利用工具的使用就更容易理解这里提到的定制型攻击的含义。比如
在上一步中，渗透测试人员发现某个API存在SQL注入的漏洞，则到漏
洞利用环节，需要针对此漏洞进行精准的利用。那么需要知道的信息可
能会包含SQL注入的注入类型是什么，是union注入、布尔盲注还是宽字
节注入？后端对应的数据是MySQL、MSSQL还是Oracle？数据库软件
的版本是什么？这个版本的数据库软件有哪些特性？这些细节都是漏洞
利用成功的关键。基于这些背景下的漏洞利用若成功了，攻击过程所形
成的用例也是具有独特性的、定制型的，因为在其他的数据库或同一数
据库的其他版本上同样的用例漏洞利用可能是无法成功的。
在API的漏洞利用阶段，专业技术人员主要依赖漏洞发现阶段获取
的成果，做具体的、针对性强的渗透工作，利用当前发现的漏洞，加载
攻击向量，来达到获取被攻击对象的服务器权限。在这个过程中，通常
是手工操作和自动化工具并行使用的。在第4章中为读者介绍了诸多的
API工具，这些工具通常都会具备漏洞发现和漏洞利用的双重功能。不
同的是，在漏洞发现阶段，仅仅是验证漏洞是否存在，而在漏洞利用阶
段，是通过攻击向量将漏洞对信息系统的危害进一步具体化。通过漏洞
利用为下一步的横向渗透打下基础，为服务器端、内网间的渗透提供可
操作空间。
漏洞利用是针对具体漏洞的攻击性行为，在自动化工具中通常会集
成不同的攻击向量。如Burp Suite中，使用Intruder套件可以选择不同的
攻击向量类型：简单列表、运行时文件、暴力字典等；Metasploit中，
使用不同的漏洞攻击程序模块，加载攻击向量。使用自动化工具对专业
技术人员的要求相对较低，但在API的漏洞利用过程中，如果自动化工
具无法满足要求，往往需要专业技术人员自己根据当前的API协议、
API运行环境、API服务的上下文等去构造攻击向量，这时就需要专业
技术人员对API技术具有深刻的理解，并且熟知漏洞的利用原理才能达
到目的，这是API漏洞利用中最难的地方。
5.2.4 报告撰写
报告撰写是API渗透测试过程中非常重要的一个步骤。可以说前期
所有的工作都是为渗透测试报告的撰写做铺垫的，清点资产、梳理API
清单、汇总漏洞等都是为渗透测试报告的撰写提供素材和数据支撑。报
告是对整个渗透测试工作的总结，并向被渗透测试方呈现渗透测试的结
果，一般来说，一份完成的渗透测试报告通常包含以下内容。
■ 总体描述：是面向高级管理者或负责API安全管理人员提供的总
结性概述，包含渗透测试的基本背景、基本渗透测试方法、高风险项以
及最终风险评价。
■ 渗透范围：主要指网络环境、主机类、服务类资产清单，API列
表等。
■ 漏洞详情：是指渗透测试过程中发现的漏洞利用点、利用方式、
危害等级、影响范围以及整改建议等。
■ 项目或团队情况：一般包含渗透测试开展的工期、参与人员、团
队人员简介、联系信息等。
渗透测试报告的撰写通常是由多个人来完成，比如渗透测试负责人
负责统筹，渗透测试组长负责技术部分，渗透执行人员负责漏洞部分
等。大多数渗透测试团队对于报告的格式都有固定的文档模板，最终由
渗透测试负责人汇总整理成标准的文档，先在团队内部进行评审，评审
通过后，组织相关干系人开正式会议，完成总结汇报，并就待整改项、
整改计划达成一致意见，以便接下来跟踪闭环。
5.3 API渗透测试的特点
在API渗透的漏洞利用中，漏洞是否利用成功与API自身的技术实
现有着强相关性。作为API渗透测试人员，必须了解API技术的基本知
识、API的技术实现、API漏洞的工作原理，才能做到更有效的API渗透
测试。下面，将结合不同的API技术，为读者阐述不同API技术实现在
API渗透测试中的特点。
5.3.1 RESTful API类
在第一章中为读者简要介绍了REST是一种软件体系架构，而
RESTful API则是其使用REST风格进行HTTP接口数据交互的一种接口
表现形式，常用的接口数据格式有JSON、XML、text等。
1.主要特性
相对于传统Web网页的URL携带参数的传递方式，RESTful 
API这
种接口形式的改变导致其渗透测试过程有着不同的特性，其主要特性如
下。
■ RESTful API的接口数据交互格式大多数为JSON格式，由多个参
数或键值对组成的JSON结构作为参数与服务器端进行交互，这种请求
参数的格式，对于渗透测试人员来说，Fuzz测试时很容易混淆。
■ 大多数API都有认证机制，比如OAuth 2.0、APPID/APPKEY，尤
其是客户自定义认证方式时，渗透测试工作的开展更加困难，需要先理
清其业务逻辑才能更好地开展。
■ RESTful API与传统的Web网页不同，API通常是纯后端的应用，
这种不可见或无持续连接状态的特性，导致渗透测试人员容易忽略某些
接口或无法发现接口。
■ RESTful API协议的HTTP状态码与普通HTTP协议存在差异，对
安全辅助工具的自动化判断产生影响。
■ RESTful API接口描述、参数格式与传统Web网页差异性较大，没
有很好的自动化工具支撑，定制化工作多，对渗透测试人员的能力要求
较高。
■ 在目前前端技术栈比较丰富的情况下，很多接口交互的发起使用
Ajax请求，比如Vue、Angular、React，这对安全扫描工具自动化地捕获
API流量是很大的挑战。
2.渗透测试要点
正是因为RESTful API渗透测试的这些特性，在渗透工作开展时，
抓住要点，快速地发现问题显得更加重要。以下是渗透测试时的关键要
点。
■ 
尽可能的先获取API规范描述文件，如在线接口文档、api-
docs.json文件、Swagger文件，RAML文件，API-Blueprint文件等，通过
文件来获取API端点和详细调用方式及参数定义。
■ 
在无界面的情况下，除了API规范描述文件，通过Proxy代理方
式，对流量进行分析也是获取API详情的一种手段。
■ 
关注可攻击的点，比如请求参数、请求方法
GET/POST/PUT/DELETE、是否存在授权绕过（令牌是否正确验证，是
否令牌有时效性）、是否存在注入点（MySQL、NoSQL）、是否存在
批量分配的问题等。
■ 关注通用的安全问题，比如是否存在Key泄露、是否存在暴力破
解的可能、同一API多个版本不一致问题、XSS、CSRF等。
■ 面向不同层次会话的攻击，比如传输层是否使用SSL或使用可信
的数字证书、应用层会话是否设置超时或采取限流熔断机制等。
5.3.2 GraphQL API类
GraphQL是API领域的一个新技术，虽然未被广泛使用，但在Top互
联网企业很常见，比如Facebook、微软。Facebook创建GraphQL是为了
解决API交互过程中过多的数据请求和拓展性问题，故GraphQL 
API在
其数据交互上有着不同于其他API技术的鲜明特点。
1.主要特性
GraphQL API渗透测试特性与其技术优点有着很强的关联性，主要
表现如下。
■ 所见即所得，只获取需要的数据。比如在线网站的商品详细查询
API，在其他的API技术实现中，通常的做法是通过字段productId获取该
商品的所有信息，如图5-1所示为某电商网站商品详细API调用样例。
●图5-1 某电商网站商品详细API调用请求参数与响应参数样例
如果是GraphQL方式，需要获取同样的响应示例，则请求示例需要
包含所有的响应示例的结构，如图5-2所示。
●图5-2 商品详细信息使用GraphQL API请求参数样例
GraphQL API的这个特点，对渗透测试人员来说，一开始就要通过
接口规范、通信协议数据包分析来详细了解所传输的数据结构，比如图
5-2中产品的JSON对象所包含的属性及属性对象结构。
■ GraphQL API的另一个特点是减少网络请求，在其他的API技术实