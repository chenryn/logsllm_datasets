# **第一篇：架构层绕过WAF**
## **0x00 前言**
在渗透测试过程中，遇到WAF（Web应用防火墙）往往会使许多安全研究人员感到束手无策。本文是应众多同行的要求而作，旨在提供一些实用的技巧来绕过常见的WAF防护措施。本系列文章将分为五个部分，分别探讨不同层次和技术手段下如何规避WAF的检测。

### 系列内容概览：
1. 架构层绕过WAF
   - CDN WAF绕过
   - 白名单策略的应用
2. 利用资源大小限制进行攻击
   - 服务器端配置（如Data MAX Length）
3. 协议解析漏洞利用
   - HTTP请求方法混淆
   - GET与POST的区别及其在攻击中的作用
   - 文件上传技巧
   - HTTP参数污染（HPP）
4. 发现并利用WAF缺陷
   - 绕过特定WAF实现文件上传
   - SQL注入等攻击手法
   - 自动化工具开发思路
5. 规则集不严谨导致的安全隐患
   - 字符替换技术
   - 大小写变换
   - 不常见条件下的攻击向量
   - 特殊符号及编码技术
   - 注释符的巧妙使用

## **0x01 CDN WAF绕过**
CDN（Content Delivery Network），即内容分发网络，通过在全球范围内部署边缘节点来加速内容传输并提高用户体验。然而，随着其功能日益强大，也成为了加强网站安全性的关键组件之一。当用户的请求被路由至最近的CDN节点时，该节点不仅负责缓存和加速，还可能执行额外的安全检查。因此，在尝试对受保护的目标发起攻击之前，首先需要确定目标的真实IP地址。

- **方法一**：查询域名历史DNS解析记录。
- **方法二**：分析子域名解析情况以推测主域名对应的服务器位置。
- **方法三**：社会工程学手段获取内部信息。
- **方法四**：利用某些CDN服务商仅针对特定地理区域优化的特点，从非覆盖区发起请求。

一旦获得了目标站点的实际IP地址，便可以通过修改本地`hosts`文件等方式直接与其建立连接，从而避开CDN提供的安全屏障。

## **0x02 白名单应用（子域名）**
对于新上线且未完全集成到CDN网络中的项目或服务来说，可能存在暂时性的安全缺口。例如，如果某个调试阶段的子域名尚未被列入WAF白名单，则可以成为潜在突破口。此外，某些管理界面（如phpMyAdmin）也可能因为配置不当而暴露在外，为攻击者提供了绕过常规防御机制的机会。

---

# 第二篇：应用层规避WAF
## **0x01 HTTP请求方法混淆**
了解各种HTTP方法的工作原理有助于设计更有效的攻击策略。例如，虽然大多数WAF会重点监控GET和POST请求，但其他较少使用的HTTP方法（如PUT、DELETE等）有时会被忽视。这为攻击者提供了机会，特别是当后端应用程序错误地处理这些请求时。

## **0x02 GET与POST的区别**
尽管GET主要用于获取信息而POST用于提交数据，但在实际应用中两者之间存在细微差别，这些差异可被用来绕过基于规则的过滤器。例如，更改请求头中的`Content-Type`字段值或者调整URL编码方式都可能影响WAF的行为模式。

## **0x03 文件上传绕过**
在处理文件上传场景时，修改`Content-Type`或`Content-Disposition`头部信息是一种常见的绕过技术。此外，还可以通过构造复杂的多部分表单数据来迷惑自动化检测系统。

## **0x04 HTTP参数污染（HPP）**
HPP是指在同一请求中多次指定相同的参数名称，以此来欺骗服务器端逻辑。这种技术特别适用于那些依赖于简单正则表达式匹配来进行输入验证的WAF系统。

---

以上只是介绍了几种基本的方法，实际情况可能会更加复杂多变。希望读者能够结合自身经验进一步探索，并欢迎分享更多创新性想法。