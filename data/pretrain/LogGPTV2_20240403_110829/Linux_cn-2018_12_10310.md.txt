---
author: Sandra Henry-stocker
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 7753
date: '2018-12-04 15:02:38'
editorchoice: false
excerpt: sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。
fromurl: https://www.networkworld.com/article/3322504/linux/selectively-deploying-your-superpowers-on-linux.html
id: 10310
islctt: true
largepic: /data/attachment/album/201812/04/150241zxirustxuvt8osz8.jpg
permalink: /article-10310-1.html
pic: /data/attachment/album/201812/04/150241zxirustxuvt8osz8.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。
tags:
- sudo
- root
thumb: false
title: 有所为，有所不为：在 Linux 中使用超级用户权限
titlepic: true
translator: dianbanjiu
updated: '2018-12-04 15:02:38'
---
> 
> sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。
> 
> 
> 
![](/data/attachment/album/201812/04/150241zxirustxuvt8osz8.jpg)
在你想要使用超级权限临时运行一条命令时，`sudo` 命令非常方便，但是当它不能如你期望的工作时，你也会遇到一些麻烦。比如说你想在某些日志文件结尾添加一些重要的信息，你可能会尝试这样做：
```
$ echo "Important note" >> /var/log/somelog
-bash: /var/log/somelog: Permission denied
```
好吧，看起来你似乎需要一些额外的特权。一般来说，你不能使用你的用户账号向系统日志中写入东西。我们使用 `sudo` 再尝试一次吧。
```
$ sudo !!
sudo echo "Important note" >> /var/log/somelog
-bash: /var/log/somelog: Permission denied
```
嗯，它还是没有啥反应。我们来试点不同的吧。
```
$ sudo 'echo "Important note" >> /var/log/somelog'
sudo: echo "Important note" >> /var/log/somelog: command not found
```
也可以查看：[在 Linux 下排查故障的宝贵提示和技巧](https://www.networkworld.com/article/3242170/linux/invaluable-tips-and-tricks-for-troubleshooting-linux.html)。
### 接下来该干什么？
上面在执行完第一条命令后的回应显示，我们缺少向日志文件写入时必须的特权。第二次，我们使用 root 权限运行了第一次的命令，但是返回了一个“没有权限”的错误。第三次，我们把整个命令放在一个引号里面再运行了一遍，返回了一个“没有发现命令”的错误。所以，到底错在哪里了呢？
* 第一条命令：没有 root 特权，你无法向这个日志中写入东西。
* 第二条命令：你的超级权限没有延伸到重定向。
* 第三条命令：`sudo` 不理解你用引号括起来的整个 “命令”。
而且如果你的用户还未添加到 sudo 用户组的时候，如果尝试使用 `sudo`，你可能已经看到过像下面的这么一条错误了：
```
nemo is not in the sudoers file. This incident will be reported.
```
### 你可以做什么？
一个相当简单的选择就是使用 `sudo` 命令暂时成为 root。鉴于你已经有了 sudo 特权，你可以使用下面的命令执行此操作：
```
$ sudo su
[sudo] password for nemo:
#
```
注意这个改变的提示符表明了你的新身份。然后你就可以以 root 运行之前的命令了：
```
# echo "Important note" >> /var/log/somelog
```
接着你可以输入 `^d` 返回你之前的身份。当然了，一些 sudo 的配置可能会阻止你使用 `sudo` 命令成为 root。
另一个切换用户为 root 的方法是仅用 `su` 命令，但是这需要你知道 root 密码。许多人被赋予了访问 sudo 的权限，而并不知道 root 密码，所以这并不是总是可行。
（采用 su 直接）切换到 root 之后，你就可以以 root 的身份运行任何你想执行的命令了。这种方式的问题是：1) 每个想要使用 root 特权的人都需要事先知道 root 的密码（这样不很安全）；2) 如果在运行需要 root 权限的特定命令后未能退出特权状态，你的系统可能会受到一些重大错误的波及。`sudo` 命令旨在允许您仅在真正需要时使用 root 权限，并控制每个 sudo 用户应具有的 root 权限。它也可以使你在使用完 root 特权之后轻松地回到普通用户的状态。
另外请注意，整个讨论的前提是你可以正常地访问 sudo，并且你的访问权限没有受限。详细的内容后面会介绍到。
还有一个选择就是使用一个不同的命令。如果通过编辑文件从而在其后添加内容是一种选择的话，你也许可以使用 `sudo vi /var/log/somelog`，虽然编辑一个活跃的日志文件通常不是一个好主意，因为系统可能会频繁的向这个文件中进行写入操作。
最后一个但是有点复杂的选择是，使用下列命令之一可以解决我们之前看到的问题，但是它们涉及到了很多复杂的语法。第一个命令允许你在得到 “没有权限” 的拒绝之后可以使用 `!!` 重复你的命令：
```
$ sudo echo "Important note" >> /var/log/somelog
-bash: /var/log/somelog: Permission denied
$ !!:gs/>/|sudo tee -a /    
作者：[Sandra Henry-Stocker](https://www.networkworld.com/author/Sandra-Henry_Stocker/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[dianbanjiu](https://github.com/dianbanjiu) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出