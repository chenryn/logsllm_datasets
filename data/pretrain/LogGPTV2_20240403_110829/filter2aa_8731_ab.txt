\& Priority: @) {
\&     s/\es*\en\es*/ /g;
\&     write;
\& }
.Ve
.Sh "Footers 页脚"
.IX Subsection "Footers"
虽然我们有$FORMAT_TOP_NAME来记录每页开头部份的格式，却没有一个相对应的方法来自动指定每页的底部格式。问题是、我们并不知到某个格式资料可能会多大，除非你真的去执行它。这是我们将来要处理的重点之一。
.PP
这是一个暂时的应用方案 如果你有一个固定大小的页脚、你可在每次调用write函数前检查变量$FORMAT_LINES_LEFT，然后自行印出该资料。
.PP
还有一个方法，就是开启一个管道。调用open(MYSELF,”|-”) (参考 perlfunc/open() 函数)。并调用write函数把资料输往MYSELF、而不是标准输出STDOUT。然后利用子串列的标准输入、来重新处理每页开头或结尾所要附加的资料部份。这虽不方便，但还是可办到的。
.Sh "Accessing Formatting Internals 格式处理的核心"
.IX Subsection "Accessing Formatting Internals"
至于低阶格式的机制，你可调用formlin()函数直接处理$^A变量($ACCUMUNATOR)。
.PP
例如：
.PP
.Vb 3
\&    $str = formline >>
\&    END
.Ve
.PP
.Vb 1
\&    print "Wow, I just stored `$^A' in the accumulator!\en";
.Ve
.PP
或是设计一个子程式swrite()。它对于 write 的脚色相当于sprint 对于 print。
.PP
.Vb 8
\&    use Carp;
\&    sub swrite {
\&        croak "usage: swrite PICTURE ARGS" unless @_;
\&        my $format = shift;
\&        $^A = "";
\&        formline($format,@_);
\&        return $^A;
\&    }
.Ve
.PP
.Vb 5
\&    $string = swrite(>>
\& END
\&    print $string;
.Ve
.SH "WARNINGS 警告"
.IX Header "WARNINGS"
不当处理显示结束格示内容的点操作符号、有时也会同时影响你的网络的电邮功能(跟据过往经验、错误是必然而不能避免)。如果使用电邮输出格式内容、你应先处理好结束格式点操作符位置。切勿放置于左边界、以免被SMTP截去。
.PP
局部变量(引用”my”定义变量)、在调用格式化输出时不会被察觉。除非在使用局部变量的串程内另行定义(5.001版本前并没有局部变量一词)。
.PP
格式输出是 perl 语言里维一受制于编程使用地区的部分。如果当前的使用地区使用LC_NUMERIC，那小数点符号的格式化输出必以当地方式显示。perl 不会理会当地的所须格式，除非你调用了 use locale。但格式列印又不受控于use locale。因为locale 它只在使用的块内有效。同时跟据历史原因、格式的作用域不仅包括在块内。进一步详情参阅 perllocale 本地化文档。
.PP
格式输出时、程式串内的空白符号\n,\t,\t相当于一个空白单元。所以你可以想像格式列印相当于先处理变量：
.PP
.Vb 1
\& $value =~ tr/\en\et\ef/ /;
.Ve
.PP
除非图案行已定义、余下的空白符号\r 将强制性另印新行。
.SH "中文版维护人"
.B 小高 
.SH "中文版最新更新"
.B 2001年12月9日星期日
.SH 中文手册页翻译计划
.B http://cmpp.linuxforum.net