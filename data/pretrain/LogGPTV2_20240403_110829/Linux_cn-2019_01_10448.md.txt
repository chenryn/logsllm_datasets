---
**作者**: Ben Cotton  
**分类**: 观点  
**评论数据**: 无  
**统计信息**:
- 评论数: 0
- 收藏次数: 0
- 点赞数: 0
- 分享次数: 1
- 浏览量: 5304  
**日期**: 2019-01-16 09:39:17  
**编辑推荐**: 否  
**摘要**: 良好的沟通是活跃开源社区不可或缺的元素。  
**来源链接**: <https://opensource.com/article/18/12/resolutions-open-source-project-maintainers>  
**ID**: 10448  
**是否为LCTT翻译**: 是  
**大图链接**: /data/attachment/album/201901/16/093920o0m0zi1ki1kxukg0.png  
**永久链接**: /article-10448-1.html  
**图片链接**: /data/attachment/album/201901/16/093920o0m0zi1ki1kxukg0.png.thumb.jpg  
**相关文章**: 无  
**审校者**: wxy  
**选择者**: lujun9972  
**标签**:
- 开源
- 贡献者  
**是否有缩略图**: 否  
**标题**: 一位开源项目维护者的五个决心  
**是否有标题图片**: 是  
**译者**: bestony  
**更新时间**: 2019-01-16 09:39:17

---

良好的沟通是活跃开源社区不可或缺的元素。

![](/data/attachment/album/201901/16/093920o0m0zi1ki1kxukg0.png)

我通常不会设定宏大的新年决心。当然，这并不意味着我不追求个人成长。然而，在这篇文章中，我希望聚焦于日历中的另一部分内容。即便如此，还是有一些事项可以从今年的日程表中划去，并替换为能够激发自我反思的新内容。

在2017年，我决定不再在社交媒体上分享未曾阅读的文章。我一直坚持这一原则，认为它使我成为了更好的网络公民。对于2019年，我正在思考如何成为一个更优秀的开源软件维护者。

以下是我作为某些项目的维护者或共同维护者时所秉持的决心：

### 1. 包含行为准则
Jono Bacon 在他的文章“[七个你可能犯的错误](https://opensource.com/article/17/8/mistakes-open-source-avoid)”中提到了“不强制执行行为准则”的问题。要执行行为准则，首先需要有一套明确的行为规范。我打算默认使用[贡献者契约](https://www.contributor-covenant.org/)，但你也可以选择其他你喜欢的版本。关于许可协议，最好的方法是采用已有的标准文本，而不是自行编写。关键是找到一种能够定义你希望社区遵循的标准。一旦这些规则被记录并严格执行，人们就能自行决定是否加入他们心目中的社区。

### 2. 明确许可证条款
你知道什么最令人头疼吗？那就是模糊不清的许可证声明。如果只说软件基于GPL授权，而不提供更多信息，我将无从得知更多细节。具体是哪个版本的[GPL](https://opensource.org/licenses/gpl-license)？我能用它做什么？对于非代码部分，“根据知识共享许可证（CC）授权”则更加糟糕。虽然我喜欢[知识共享许可证](https://creativecommons.org/share-your-work/licensing-types-examples/)，但它有多种不同的变体，每种都有其独特的权利和义务。因此，我将非常明确地指出适用于我的项目的特定许可证及其版本。我将在仓库中包含完整的许可证文本，并在其他文件中添加简洁的注释。

与此相关的一个问题是使用 [OSI](https://opensource.org/) 批准的许可证。虽然你可以创造出一个准确描述你意图的新许可证，但如果需要执行它，可能会遇到不少麻烦。你会坚持使用它吗？你的用户能理解它吗？

### 3. 快速分类错误报告和问题
在技术领域，很少有比开源维护者更为稀缺的资源了。即使在小型项目中，也很难找到时间来回答每个问题并修复每个错误。但这并不意味着我不能至少给予一些回应，哪怕只是简单地给GitHub上的问题打个标签，表明我已经看到它。也许我会立即处理，也许一年后才会处理。但让社区知道有人在关注是很重要的。

### 4. 如果没有伴随文档，请勿推送新功能或错误修复
尽管多年来我的开源贡献主要围绕着文档工作，但我的项目并没有反映出我对文档的重视程度。每次提交都应该附带某种形式的文档。新功能显然应该在提交之前或同时撰写文档。即使是错误修复，也应该在发行说明中有所提及。如果没有什么特别的原因，每次提交都是改善文档的好机会。

### 5. 放弃一个项目时，要清楚告知
我很不擅长拒绝别人的要求，比如答应为[Opensource.com](http://Opensource.com)写一两篇文章，结果却写了近60篇。但在某个时刻，曾经感兴趣的事情也可能变得不再吸引人。也许该项目的功能已被整合到更大的项目中；也许我只是对它失去了兴趣。这对社区是不公平的（如最近的[event-stream恶意软件注入](https://arstechnica.com/information-technology/2018/11/hacker-backdoors-widely-used-open-source-software-to-steal-bitcoin/)事件所示），会使项目陷入困境。维护者有权随时离开，但他们应该在离开时明确告知。

无论你是开源维护者还是贡献者，如果你知道项目维护者还应作出哪些决心，请在评论中分享！

---

**原文链接**: 无  
**作者**: [Ben Cotton](https://opensource.com/users/bcotton)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**译者**: [bestony](https://github.com/bestony)  
**校对**: [wxy](https://github.com/wxy)  
**本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出**

---