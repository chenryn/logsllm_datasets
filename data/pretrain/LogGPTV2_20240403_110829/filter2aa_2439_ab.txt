PI:EMAIL 
Backup slides 
Background – Electronic safe locks 
• Opening a lock 
– User enters code on keypad 
– Microcontroller (MCU) checks code 
– MCU drives motor to free bolt if correct 
Background – Electronic safe locks 
• All logic resides inside safe 
• Only keypad and battery are outside safe 
• Connection is via wires through a small hole in 
the door metal 
• Hardened steel plate in lock 
• No direct access to the lock PCB possible 
Background – Side channel attack 
• Side channel attack 
– Gaining knowledge about the state of a device 
through unintentional information leakage  
• Attacks used in this talk 
– Power analysis 
– Timing attack 
• And, a related concept 
– Forcing a system into a particular state using 
unexpected inputs (in this case, removing power) 
S&G 6120 
• Sargent & Greenleaf 6120-332 safe lock 
– UL listed Type 1 high-security electronic lock 
– Still being produced (as of at least late 2015)  
– Designed and certified ca. 1994 
– ST62T25C microcontroller (ST) 
– 93LC46B serial EEPROM (Microchip) 
– 9v alkaline battery located in external keypad 
– S&G is a large, well-respected lock manufacturer 
6120 – MCU 
6120 – EEPROM 
6120 – Keycode storage 
Suppose that the actual code is 908437 
EEPROM address 
Keycode digits 
Stored word value 
0x00 
0x01 
0x02 
0x03 
Start of next keycode 
Keycode 1 
0x 0 0 9 0 
0x 0 0 8 4 
0x 0 0 3 7 
9, 0 
8, 4 
3, 7 
Keycode 2 
.  .  . 
S&G 6120 (and Titan) Keypad Interior 
6120 – Wires from keypad 
Line 
Description 
Battery 
Ground 
Keypress 
9v nominal 
Complete circuits are good, right? 
5v when idle, less depending on key being pressed 
There are four wires from the keypad to the lock inside the safe: 
Buzzer 
Hi-Z when idle, pulled to ground for buzzer/LED 
6120 – Actual vs Power Zoomed  
• Yellow: Actual data line between MCU and EEPROM 
• Blue: Current into lock (2 A per mV) 
6120 – Annotated trace 
• In this case, the keycode is “123456” 
6120 – Demo circuit 
U1A 
Oscilloscope 
Lock 
10   
9v 
Battery 
+ 
- 
2.2 k  
2.2 k  
220   
+ 
- 
Vcc 
Vcc 
U1B 
220   
220   
2.2 k  
Current 
sense 
21 dB 
amp 
20 dB 
amp 
6120 – Demo 
• Only basic equipment required to read code 
– Cheap oscilloscope (e.g., the $60 DDS120) 
– Seven resistors (precision not critical) 
– Basic op-amp (e.g., the 10 MHz GBW LM6132) 
– Breadboard/wires/etc. 
6120 – Notes 
• Final bit in each word (i.e., LSB for every even 
keycode digit) is shifted lower in amplitude by 
about 20 A regardless of value 
• Reading first three words is enough for master 
keycode 
• Remaining words are for additional keycodes 
• Failure count written after all codes read out 
6120 – Lessons 
• Don’t store data in the clear 
– I mean, good lord… 
6120 – Lessons 
• Store critical data on-chip if possible 
– Harder to probe when analyzing lock 
– Less EM radiation 
– Faster access 
– Possibly smaller current swing 
6120 – Lessons 
• Use a fast serial bus 
– Simple power analysis is harder at higher speeds 
due to capacitive and inductive effects 
– Higher speeds could make attack inaccessible to 
the simple tools shown in the demo 
Titan – Hardware 
• Motor-driven acme screw to unblock bolt 
• STM8S105K6 MCU runs at 2 MHz 
• Keypad identical to one with S&G 6120 
– Resistor ladder 
– 9v alkaline battery  
• Designed c.a. 2010, currently in production 
• UL listed Type 1 high-security electronic lock 
Titan – MCU 
Titan – Keypad emulation 
• Keypad is resistor ladder hooked to voltage 
divider with a 20.0 k source leg 
– e.g., “3” is 7.68 k 
• Simulate by sending the voltage that the 
divider would produce for a given key 
– e.g., 7.68 k is 1.40 V 
• Lock tolerates voltage error of ±0.10 V 
• Debounce time ~30 ms 
• Key interval ~120 ms 
Titan – Timing attack 
Current 
Time 
Current 
Time 
Digit wrong 
Digit correct 
t=0 
Titan – Timing attack 
• Power analysis for timing markers 
– Watch current drawn 
• Current consumption jumps about 29.6 ms before keycode 
comparison completes 
– Use this rise as a reference point for timing 
– Reasonably stable time reference (jitter about ±10 s)  
• Keycode comparison takes about 200-300 s 
– Depends on how many digits before mismatch 
• At end of keycode comparison, current rises another 275 
A 
– Determine success/failure based on delay of this rise relative to 
reference point ≈29.6 ms earlier 
– 28 s more delay per additional correct digit 
Titan – Timing attack 
• It’s like in the movies where they get one digit 
of the electronic lock’s code at a time 
– …and the others are all changing rapidly 
Image: The Thomas Crown Affair (1999) 
Titan – Timing attack 
•
Noise 
– Jitter in ADC sampling times 
– Jitter in lock clock 
– Noise from the ADC itself 
– Noise of unknown origin in current consumption 
– Timing is very tight and amplitude difference between noise and signal is very 
small 
•
Oversample 
– Sample each time delay for each digit multiple times 
– 10x oversampling seems fine 
– Adds significantly to recovery time 
– Will work with lower oversampling multiplier but less reliable 
•
Detect errors 
– If average times aren’t the expected amount longer (28 s) during testing for 
the next digit, the previous digit’s value is probably wrong, so go back 
– If the time for a digit is way too early or too late, retry it 
Titan – Timing attack 
• Entire six-digit keypad sequence is captured 
before starting comparison 
• Entered code is compared one digit at a time 
to the keycode stored in EEPROM 
• If digit in entered keycode sequence doesn’t 
match, exit loop immediately 
Titan – Lockout defeat 
• Goal is to get Vdd below STM8 brownout voltage 
(2.7v) before the EEPROM write has completed 
• If STM8 is running (not halted), and the battery 
voltage (Vbatt) is 9.0v, roughly 2.7 ms elapse 
between floating Vbatt and Vdd going below the 
STM8 brownout voltage 
• Can be reduced to 1.0 ms if Vbatt starts at 4.3v and 
a key on keypad is held down (to increase current 
drain) 
• To defeat the FW battery check, voltage must be 
reduced only after the STM8 has been woken up 
Titan – Lockout defeat 
• Failure count stored in EEPROM 
• EEPROM writes on STM8 are asynchronous  
– 500 s to complete if EEPROM block already blank 
– 3 ms to complete if block has existing data 
– EEPROM writes become blocking if second write 
attempted before first finishes 
• If we can cut power to the STM8 after it has 
revealed if a digit in the keycode is valid but 
before the failure has been recorded… 
–  …we get as many attempts as we want! 
Titan – Lockout defeat 
• Either: 
– Kill power before the erase-write cycle starts, or 
– Kill power after the erase part of the cycle starts 
but before the new value is written 
• Usually, erased values in EEPROM are 0xFF 
– Not in the STM8 
– In the STM8, EEPROM erased value is 0x00 
– Thus, erased value is a valid count: “zero failures” 
Titan – Automated code recovery 
• First five digits via timing attack 
• Sixth digit through brute force (10 attempts) 
– Try keycode ending with each possible value 
– Check if buzzer line indicates error beep sequence 
• Two long beeps = Wrong code 
• One short beep = Correct code 
– Every fourth attempt, try a known-wrong keycode and 
kill the power during the invalid-attempt count 
EEPROM update to reset the count to 0x00 
– Go through all ten possibilities this way 
Titan – Lessons 
• Use constant-time comparisons 
– Would defend against timing attack 
Titan – Lessons 
• Assume failure first 
– Increment “failed attempt” counter before key 
comparison begins, not after 
– Then, clear “failed attempt” count only if the 
correct code was actually entered 
• However… 
– Don’t make the erased value of the EEPROM/flash 
a valid value for the counter 
Titan – Lessons 
• Run MCU clock faster 
– Less margin for timing attacks 
– Not a total solution, but could increase the 
difficulty of the attack 
– Be careful that a faster MCU doesn’t lead to other 
stronger signals 
Are there better locks? Yup! 
• FF-L-2740B federal specification 
– GSA-approved locks 
– For securing material classified up to Top Secret 
• Mandates significantly better design 
– Power source internal (no power analysis) 
– Resistance to various attacks for at least 20 man-
hours 
– Approval revoked if design found vulnerable 
References 
[1] Gun safe analysis http://gunsafereviewsguy.com/ 
[2] “Safes and Containers: Insecurity Design Excellence” 
Tobias, Fiddler, and Bluzmanis. DEF CON 20 
[3] “Safe to Armed in Seconds: A Study of Epic Fails of 
Popular Gun Safes” Deviant Ollam Cluebat 
Quartermaster. DEF CON 19 
[4] “Hacking smart safes” Salazar and Petro. DEF CON 23 
[5] DoD Lock Program 
http://www.navfac.navy.mil/navfac_worldwide/special
ty_centers/exwc/products_and_services/capital_impro
vements/dod_lock.html