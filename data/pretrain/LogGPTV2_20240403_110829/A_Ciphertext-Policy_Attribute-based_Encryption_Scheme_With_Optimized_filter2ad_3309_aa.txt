title:A Ciphertext-Policy Attribute-based Encryption Scheme With Optimized
Ciphertext Size And Fast Decryption
author:Qutaibah M. Malluhi and
Abdullatif Shikfa and
Viet Cuong Trinh
A Ciphertext-Policy Attribute-based Encryption Scheme
With Optimized Ciphertext Size And Fast Decryption
Qutaibah M. Malluhi
Qatar University
Doha, Qatar
PI:EMAIL
Abdullatif Shikfa
Qatar University
Doha, Qatar
PI:EMAIL
Viet Cuong Trinh
Qatar University and Hong
Duc University
Thanh Hoa, Viet Nam
PI:EMAIL
ABSTRACT
We address the problem of ciphertext-policy attribute-based
encryption with ﬁne access control, a cryptographic primi-
tive which has many concrete application scenarios such as
Pay-TV, e-Health, Cloud Storage and so on. In this context
we improve on previous LSSS based techniques by building
on previous work of Hohenberger and Waters at PKC’13 and
proposing a construction that achi- eves ciphertext size lin-
ear in the minimum between the size of the boolean access
formula and the number of its clauses. Our construction
also supports fast decryption. We also propose two inter-
esting extensions: the ﬁrst one aims at reducing storage and
computation at the user side and is useful in the context of
lightweight devices or devices using a cloud operator. The
second proposes the use of multiple authorities to mitigate
key escrow by the authority.
Keywords
Ciphertext-policy attribute-based encryption, DNF access
policy, LSSS access policy, Fast decryption, multi-authority.
1.
INTRODUCTION
In the ”era of modern cryptography”, cryptographic schemes
become more and more complex to satisfy the needs of mod-
ern applications. Regarding data encryption, many new sce-
narios require advanced capabilities and ﬂexible ways to do
it beyond simple semantically secure encryption with a key.
For instance a desirable property is the ability to encrypt
a message according to a speciﬁc policy. In such scenario,
only receivers who possess enough attributes satisfying this
speciﬁc policy can decrypt the encrypted message.
We consider the following practical scenario, in a faculty
of computer science, there are faculty members and ad-
minsitrative staﬀ and there are three international research
groups: Crypto, Wireless Communications, and Image pro-
cessing. In the Crypto group we have two projects: Garbled
computer and Security for IoT-based Applications. In the
Wireless Communications group we also have two projects:
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ASIA CCS ’17, April 02-06, 2017, Abu Dhabi, United Arab Emirates
c(cid:13) 2017 ACM. ISBN 978-1-4503-4944-4/17/04. . . $15.00
DOI: http://dx.doi.org/10.1145/3052973.3052987
Fog Computing and Internet of Things.
In such system,
the attributes are: Faculty members, Administrative staﬀ,
Crypto, Wireless Communications, Image processing, Gar-
bled computer, Security for IoT-based Applications, Fog
computing, and Internet of Things. When the dean of the
faculty wants to put a document in the cloud server for the
faculty members in the Crypto group who are working in
the Garbled computer project, as well as faculty members
in the Wireless Communications group who are working in
the Fog Computing project, the access policy should be:
(Faculty member and Crypto and Garbled computer) or
(Faculty member and Wireless Communications and Fog Com-
puting).
In this access policy, the size of the boolean formula is six
(counting the reused attribute Faculty member) while the
number of clauses in DNF form is only two. Recently, this
type of encryption is applied to more and more contexts
such as pay-TV system, e-Health, or internet of things.
Addressing this problem, Sahai and Waters [25] intro-
duced the concept of attribute-based encryption (ABE) where
both the encryption and decryption steps are performed by
using the user’s attributes. Recent researches have investi-
gated two variants of ABE: the ﬁrst one is named ciphertext-
policy attribute-based encryption (CP-ABE) and the second
one is named key-policy attribute-based encryption (KP-
ABE).
In a CP-ABE scheme, the secret key is associated
with a set of attributes and the ciphertext is associated with
an access policy (structure) over a universe of attributes: a
user can then decrypt a given ciphertext if the set of at-
tributes related to his/her secret key satisﬁes the access
policy underlying the ciphertext. In contrast, in a KP-ABE
scheme, the access policy is for the secret key and the set
of attributes is for the ciphertext.
In the context of ABE, the set of privileged users is deter-
mined by the access policy. To date, several types of access
policy have been investigated. Two limited ones are AND-
gates and threshold. In [11, 9], the access structure is con-
structed by AND-gates on multi-valued attributes. In [17,
13, 8], the access policy is threshold, meaning that there is
no distinction among attributes in the access policy: any-
one who possesses enough attributes (equal or bigger than
a threshold chosen by the sender) will be able to decrypt.
In some modern applications, ﬁner-grained access control is
needed such as boolean formula, and the common technique
so far to construct such access control is based on LSSS ma-
trix [26] (LSSS-based scheme - so called).
In LSSS-based
schemes, the ciphertext size is usually linear in the size of
the access boolean formula. We note that, in several speciﬁc
types of boolean formula especially the DNF form (i.e., with
disjunctions (OR) of conjunctions (AND) of attributes), the
230size of the boolean formula could be much bigger than the
number of clauses (as we showed in the above example).
In contrast, in CNF form (i.e., with conjunctions (AND)
of disjunctions (OR) of attributes) the size of the boolean
formula could be much smaller than the number of clauses
in the corresponding DNF form. This leads us to research a
construction where the ciphertext size could be linear in ei-
ther the size of the boolean formula or the number of clauses
depending on which is smaller between them.
In some practical contexts such as mobile pay-TV sys-
tem or internet of things, the power of user’s devices are
restricted which means that the decrypting complexity and
the user’s storage are essential. In addition, in those con-
texts a CP-ABE scheme is more suitable than a KP-ABE
scheme as shown in [19], therefore designing a CP-ABE scheme
with fast decryption, limited user’s storage, and supporting
ﬁne-grained access control such as boolean formula is desir-
able. Another problem that we were keen on adressing is
that CP-ABE, as some other cryptographic primitives, suf-
fers from the key escrow problem since the authority knows
all private keys of users. We thus researched the possibil-
ity to implement a multi-authority ABE scheme to mitigate
this risk.
1.1 Related Work
Attribute-base encryption has been deeply researched in
recent years with a lot of proposed papers [25, 16, 22, 11,
19, 17, 26, 3, 21, 18, 23, 8, 28, 27, 10, 12, 14, 6], to name
a few. Regarding the ABE scheme supporting the ﬁne-
grained access control, the ﬁrst construction [16] is based
on the tree structure where the authors extended the Sahai
and Waters’s work [25] to propose the schemes supporting
ﬁne-grained access control, speciﬁed by a boolean formula.
Subsequent works in this direction such as [26, 18, 23, 8, 28,
27, 10], are constructed based on the linear secret sharing
scheme (LSSS). The shortcoming of this technique is that
the ciphertext size is usually linear in the size of the access
boolean formula which is not as small as expected especially
when the access boolean formula is in DNF form. Very re-
cently, in [1] and [2] the authors based on LSSS technique
proposed two CP-ABE schemes with constant-size cipher-
text and supporting the ﬁne-grained access control. How-
ever, the public key size and secret key size of those schemes
are very impractical. Multi-authority ABE scheme support-
ing ﬁne-grained access control have been investigated in [20,
24] where each authority takes responsibility for a disjoint
set of attributes. Regarding the fast decryption, only one
of them [18] proposes an eﬃcient CP-ABE scheme with fast
decryption and supports LSSS access policy. Some other
schemes can achieve the fast decryption property but ei-
ther they are in key-policy attribute-based style [18, 3, 16]
or they supports limited access policy such as threshold or
AND-gates [11, 17].
1.2 Our Contribution and Organization of the
Paper
In this paper, we propose a CP-ABE scheme supporting
ﬁne-grained access control and achieving highly desirable
properties:
• small ciphertext size: the ciphertext-size of our scheme
is linear in either the size of the access boolean formula
or the the number of clauses depending on which is
smaller between them;
• fast decryption:
in all cases, our scheme just needs
two Pairings for decryption;
• mitigation of key escrow: our scheme can be extended
to support non colluding multiple authorities that can-
not decrypt messages;
• minimization of user storage: our scheme can make a
large part of the encryption and decryption material
public, thus saving storage space and enabling dele-
gation of part of the computation to an outsourced
server.
More precisely, we extend the scheme [18] (section 3.5)
to allow the encryptor to choose the most eﬃcient of two
encryption algorithms at the time of encryption. Starting
with an access boolean formula, the encryptor ﬁrst describes
this formula in the DNF form (i.e., with disjunctions (OR)
of conjunctions (AND) of attributes). She then compares
between the number of clauses in the DNF form and the size
of the original boolean formula (the number of attributes in
the access boolean formula - counting also the reused at-
tributes). Finally, she will produce the ciphertext depend-
ing on which is smaller between them.
We emphasize that our scheme still takes advantage of
LSSS technique (the ciphertext size is linear in the size of
the original boolean formula), while it overcomes the weak-
ness of LSSS technique when the size of the access boolean
formula is bigger than the number of clauses. It is there-
fore fair to say that our scheme is an improvement of the
scheme [18] (section 3.5).
Note that, it seems not diﬃcult to transform some AND-
gates schemes such as [11, 9] to achieve a new scheme sup-
porting DNF access policy where the ciphertext-size is linear
in the number of clauses. However, since such schemes do
not take advantage of LSSS technique, it is not eﬃcient in
case the size of the access boolean formula is smaller than
the number of clauses, for example when the access boolean
formula is in CNF form. The reason why our scheme can
take advantage of LSSS technique while others cannot is
that our scheme shares a similar key structure with the
scheme [18] (section 3.5).
Regarding decryption eﬃciency, the new decryption algo-
rithm of our scheme just needs to compute two Pairings and
|I| multiplications, where |I| is the number of attributes for
a decryption key to satisfy a ciphertext access policy.
Furthermore, in our scheme the user just needs to keep
one element secret, the other elements in the user’s secret
key can be made public, it is thus very suitable to the con-
text of lightweight cryptography as it is suﬃcient for a user
to store only one secret element in the smart card. It can
also be useful in the context of outsourced data storage and
computation, such as in cloud computing, since the user
can store part of the key in the cloud and even have the
cloud perform some steps of the encryption and decryption
algorithms.
Our scheme can also be extended to support multiple non-
colluding authorities by using the splitting technique, where
each user constructs her secret key with the help of θ au-
thorities in the system. The collusion of up to θ − 1 curi-
ous authorities is not enough to compute the secret key of
user. While this solution is not diﬃcult to implement, to
our knowledge we haven’t seen any previous CP-ABE work
mentioning it.
The paper is now organized as follows. The next section
introduces preliminary security deﬁnitions and mathemati-
231cal building blocks. In Section 3.1, we introduce our scheme
and prove that it achieves selective security in the follow-
ing section. In section 4 we analyze the performance of our
scheme compared to the literature. Finally, in Section 5,
we discuss how to minimize the user’s storage as well as
support of multiple authorities in our scheme.
2. PRELIMINARIES
We recall in this section several deﬁnitions and notions
that are needed for our construction. We ﬁrst deﬁne the
security model of CP-ABE scheme, followed by access struc-
tures, bilinear maps and related security assumptions and
ﬁnally LSSS matrices.
2.1 Ciphertext-Policy Attribute-Based Encryp-
tion
Formally, a CP-ABE scheme consists of four probabilistic
algorithms.
Setup(1λ,B): The setup algorithm takes the security pa-
rameter λ and the description of the attributes’ uni-
verse B as inputs. It generates the master key MSK,
as well as the public parameters param of the system.
Extract(u,B(u), MSK, param): Takes as input a user u and
his set of attributes B(u), as well as the public param-
eters param and the master key MSK. It outputs the
user’s private key du.
Encrypt(M, A, param): Takes as input a message M, an
access policy A over the universe of attributes and the
public parameters param. It outputs the ciphertext ct
along with a description of the access policy A.
Decrypt(ct, du, param): Takes as input the ciphertext ct,
the private key du of user u, together with the param-
eters param. It outputs the message M if and only if
B(u) satisﬁes A. Otherwise, it outputs ⊥.
Security Model:.
We now recall the security model for a CP-ABE scheme [26].
The security model consists of the following probabilistic
game between an attacker A and a challenger C.
Setup(1λ,B). The challenger runs the Setup(1λ,B) algo-
rithm to generate the public parameters param of the
system, as well as a master key MSK. The corruption
list ΛC is set to the empty list (the corruption list
corresponds to the queries of the adversary as will be
described in the next steps).
Query phase 1. The adversary A chooses a set of attributes
B(u) and asks corruption query corresponding to this