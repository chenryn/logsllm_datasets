.
2𝜏
Putting inequalities (16), (17), (18), and (24) together, our claim
follows.
□
Δ−1
5.4 Parameter Selection
We assume the desired security level of 𝜆 against an attacker that
makes up to 𝑞 Sig-queries and aims for Δ fresh sequences. Next,
we discuss how to choose Whips parameters to meet these require-
ments. To this end, the upper bound:
(cid:19) Δ
(cid:18) 1
2𝜏
𝜀 + 𝑞2 + 2𝑞
2𝜎
+
provided by Theorem 5.1 can guide parameter selection. Note that
the theorem already assumes that the counter is chosen to be suf-
ficiently large as to avoid any repetitions, i.e., 𝛾 ≥ log2(𝑞). The
values involved in this bound are:
• 𝜀/2 – PRF security levels (which also depends on key lengths:
𝜅upd and 𝜅sig)
• 𝜎– substate size
• Δ– tag length
To simplify the following discussion, we investigate how to ensure
that each of the three terms of the sum is below 2−𝜆. This results into
a slightly higher upper bound of 3·2−𝜆, instead of 2−𝜆. Alternatively,
we could upper-bound each term by 2−𝜆−2.
Ensuring that 𝜀 ≤ 2−𝜆 depends on the choice of PRFs. A neces-
With respect to the second term, if we consider 𝑞2 to be domi-
nating, the following condition holds for the length of the substate:
(26)
sary condition is to set the key lengths 𝜅upd, 𝜅sig ≥ 𝜆.
𝜎 ≥ 2 log2(𝑞) + 𝜆.
Since state size is 𝛾 + (𝑢 + 1) · 𝜎, its lower bound is:
log2(𝑞) + (𝑢 + 1) · (2 log2(𝑞) + 𝜆).
(27)
Although this can be relatively large, it is acceptable in practice
since storing data is far cheaper than sending it.
Finally, the third term implies the following inequality:
𝜏 ≥ 𝜆/Δ.
With respect to the PRFs, 𝐹
(28)
sig
𝑘′′ must yield output of
sizes 𝜎 and 𝜏, respectively. To this end, the bounds given in (26) and
(28) can be used. We illustrate this with some concrete numbers.
Assuming the goal of 𝜆 = 128 bit security, we allow 𝑞 = 264 queries,
and support 𝑢 = 4. Then, state size has to be at least:
and 𝐹
upd
𝑘′
log2(𝑞) + (𝑢 + 1) · (2 log2(𝑞) + 𝜆) = 64 + 5 · (128 + 128) = 1344
(29)
bits or 168 bytes. 𝐹 upd must produce outputs of 2 log2(𝑞) + 𝜆 =
128 + 128 = 256 bits, and 𝐹 sig– 𝜆/Δ = 128/Δ ≥ 128 bits. Thus, any
modern hash function could be used for realizing these two PRFs.
6 PERFORMANCE EVALUATION
In this section, we evaluate performance of the proposed Whips
schemes in real-world scenarios. In doing so, we aim to understand
the impacts of: computational overhead, energy savings, reduced
latency and validation errors. We also evaluate throughput gains
for various application and network settings.
Since this intends to be the main application, we first measure
the performance of Whips as drop-in replacement for integrity
schemes in robot control and WiFi communication, in experiments
on realistic hardware. Considering the dependency on reliable de-
livery and focus on resynchronization capabilities as well as the
fact that our realistic scenarios are characterized by comparatively
low packet loss, we subsequently extend the study and analyze
how performance and security evolve with increasing packet loss.
Finally, we analyse the computation overhead, latency gains and
energy savings of the proposed constructions. The results underline
that the combination of truncation and state chaining leads to both
transmission speedups and increased security levels in all scenarios
with somewhat realistic communication settings.
(25)
(a) Experiments with TMote Sky using 802.15.4
(b) Experiments with WiFi 802.11a 5GHz
Figure 5: Relative speedup over traditional integrity schemes (HMAC-SHA256)
6.1 Evaluation Scenarios and Setups
We consider two typical settings, where streams of short messages
are prevalent: (1) robot and drone control, and (2) general WiFi
communication.
Robot control assumes a constant stream of very small messages
(5 to 50 Bytes), transmitted over low power wireless net-
works, such as 802.15.4, at a transfer rate of 250 kbps [3].
The transmission latency is required to be around or under
1𝑚𝑠, to prevent oscillations and reaction coupling [52]. We
employ Tmote Sky motes for this experiment, which are
popular and have been used in several prior studies [45].
WiFi communication Our results for WiFi communication are
obtained from measurements with two laptops, using Intel
Dual Band Wireless AC (2 x 2) 8265 and 8260 Chips.
The following Experimental Setup was used: All experiments
were conducted using two devices of the respective scenario, in a
typical office environment. We measured throughput, as well as
error characteristics for both our proposed and the traditional in-
tegrity schemes under test, using especially crafted software on the
Tmotes, and iperf3 on the laptops. We assume reliable communica-
tion at full integrity verification throughout all measurements: lost
or malformed packets are recovered using selective repeat request.
The setup of the robot control was chosen as described above, while
for the WiFi setup we connected two laptops via WiFi AdHoc, on
channel 129 of the 5GHz band. We started our experiments with
1-byte payload messages, and increased payload size by 1 Byte for
each subsequent measurement. We compare the results of Whips
to measurements using traditional HMAC-SHA256 as the baseline.
In this section we demonstrate the major benefit of the proposed
schemes: combining the speedup of transmitting truncated tags
with a high effective security level.
6.2 Empirical Performance Measurements
To assess performance gains we measured Whips in realistic sce-
narios.
We ran several experiments using the robot control and WiFi
communication setup. As the length of the payload has the most
pronounced impact on speedup, we focused on varying payload
length.
Given the requirements for reliable communication with high
security, we expect Whips to achieve appreciable speedup over
traditional MACs. The essential advantage is that shorter tags are
transmitted than with traditional MAC schemes achieving simi-
lar security. The relative speedup depends on actual reduction of
transmitted bits per message, where message and headers remain
identical. The main differences in the measurements will hence be
caused by differing headers for the networking technologies, and
the effect of message loss.
Figure 5 presents our results for selected packet sizes, which
generally confirm our expectations. We observe a relative speedup
of over 200% for Whips with tag length < 80 for small messages.
The speedup drops to around 30-50% for message of 30 Bytes on
motes (robot control), and around 35-60% on laptops. It slowly drops
further with increasing message sizes. As WiFi is very stable, we
did not measure any significant packet loss.
In summary, measurements in the described use case scenarios
showed, that the proposed Whips scheme yield significant perfor-
mance increases, especially for the message sizes we expect to see
in robot and drone control.
6.3 Achieved Security Level
Whips is expected to provide considerably stronger security guar-
antees than truncated MACs, as shown in Eq. (15) and Fig. 4. This
advantage strongly depends on the reliability of transmission: each
lost or modified packet diminishes the effective security level that
Whips can reach for directly preceding and succeeding received
packets. We hence want to investigate the effect of errors on the
actual security level provided by our scheme.
The empirical performance assessment (Sec. 6.2) provided only
uncontrolled and rare occurrences of errors and are therefore un-
suitable for a thorough analysis. Hence, we used synthetic models
to analyze the impact of errors on our proposed constructions.
250
200
150
100
50
0
t
i
b
n
i
l
e
v
e
l
y
t
i
r
u
c
e
s
n
a
e
M
𝜏 =128, u=2
Trunc 128
𝜏 =64, u=4
𝜏 =64, u=2
Trunc 64
𝜏 =32, u=8
𝜏 =32, u=2
Trunc 32
𝜏 =16, u=16
𝜏 =16, u=2
Trunc 16
0 10−2
10−1
Error probability
100
Figure 6: Performance of Whips with respect to packet er-
ror probability, where an error might be loss of verification
failure.
Figure 7: The respective highest error probability, for which
the proposed schemes achieve higher security levels than
simple truncation. The repetitions yielded maximal stan-
dard deviations of 0.00034
A uniformly distributed error represents the worst case scenario,
as it reduces the guaranteed security level the most (see Fig. 4).
For the subsequent analyses we therefore assume such an error
distribution. Thereby, we can deduce the respective bounds for the
worst case, whereas practical realizations of the construction are
bound to perform better.
In this experiment, higher error probability mean more received
packets with verification failure (i.e. security level of 0), leading
to decreasing mean security levels (even for simple truncation). In
the figure different tag lengths 𝜏 are represented in identical colors,
with the respective baseline being plotted as a dashed line. Values
for the same Area of Dependency 𝑢 are denoted using identical
markers. Error probabilities from 0.00 − 0.01 are plotted linearly,
the remaining range up to probability 1 is plotted in log-scale. The
figure shows, that for expected and even a range of higher error
probabilities our construction can guarantee significantly higher
security levels than simple truncation, achieving even up to the
full security of 256 bits. For error probabilities of 0.10, the ProMAC
construction achieved almost twice the security level as compared
to simple truncation (e.g. 128 𝑏𝑖𝑡 vs 211 𝑏𝑖𝑡). Even when the error
probability reaches 0.38, Whips still outperforms simple truncation
in terms of achieved security.
To understand the actual benefit over truncation better, we in-
vestigated the boundary error probability, after which truncation
achieves better security than ProMACs. Fig. 7 depicts these results
for different combinations of 𝜏 and 𝑢. Here, the Y-Axis denotes
until which upper bound of error probability ProMACs guarantee
higher security levels than truncation to 𝜏 bits (at identical cost).
We observe that with increased Area of Dependency 𝑢 the bound-
ary drops: the reason of course is that resynchronization requires
the verification of 𝑢 messages, so increasing packet loss has more
severe effects on schemes with a large Area of Dependency. The
results drop with increasing 𝜏, because there is no advantage in
continuing to enlarge the Area of Dependency as the maximum
achievable security level is bounded by the length of the state/key.
Packet loss studies of current wireless transmission standards,
e.g. 802.15.4 and 802.11, show that packet loss in realistic scenarios
can almost be neglected, being at or around 0% in general cases, and
rise to under < 10% even in real-time scenarios [55, 56]. ProMACs
can be concluded to reach superior effective security at identical
cost in all realistic scenarios.
For this analysis we simulated 1.000.000 messages transmissions
and generated uniformly distributed errors with probability 𝑝. Each
experiment was repeated 1.000 times to generate statistically sound
results. Our schemes are parameterized regarding the tag length 𝜏
and the Area of Dependency 𝑢, the internal state as well as the key
have a size of 256 bits. We compare our schemes against HMAC-
SHA256, truncated to the same tag length 𝜏— thereby, our experi-
ments and the compared baseline would achieve to same through-
put/speed. As the message length does not influence the achieved
security level, we omitted it from this analysis.
The proposed Whips construction reacts differently to errors
than related schemes, like duplex constructions, as described in
Sec. 4: Duplex constructions employ a tightly coupled state chain-
ing. Thus, a single error breaks the transported trust and the chain
needs to be explicitly restarted. Although such schemes can always
guarantee the full possible security level, the explicit restarting
inflicts additional communication overhead, which tends to be un-
favourable in the described use cases.
Whips allows for resynchronization after verification errors,
shown in Fig. 4. As the effective security level depends on the error
occurrences, we analyzed the achieved security level in relation to
the error probability after verification of the last message (in Fig. 4
this corresponds to the last time slot, i.e the right-most column).
The results for Whips are shown in Fig. 6, plotted in log-scale
(we manually inserted the result for a 0% error rate for conve-
nience). Here, an error might be a packet loss or verification failure
— thereby, the notion of mean security level becomes reasonable: as
we are specifically investigating to overall security of the whole