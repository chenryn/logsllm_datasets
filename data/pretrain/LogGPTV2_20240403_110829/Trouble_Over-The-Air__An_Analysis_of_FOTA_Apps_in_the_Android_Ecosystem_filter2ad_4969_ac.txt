and getting access to FOTA ﬁles.
B. Prevalence
We study the prevalence of FOTA apps across devices and
vendors using the device metadata provided by Firmware
Scanner. We observe that the set of 133 packages are distributed
over 395 different brands. While we ﬁnd most packages (67%)
in devices from the same brand, some devices ship apps from
multiple brands. As expected, com.google.android.gsf is
pervasively present in over 95% of the devices in our dataset.
Similarly, com.google.android.gms is present in devices
from Google-certiﬁed OEMs (18%). Additionally, we ﬁnd high-
prevalent cases such as two FOTAs from Adups and Mediatek,
which appear in 578 and 336 devices from 111 and 34 different
brands, respectively.
It is difﬁcult to discern whether a given FOTA is developed
by the OEM manufacturing the device by just looking at the
information available on the certiﬁcate. However, by analyzing
the relationships between the package names, the OEMs,
and the organization signing the FOTA apps, we can gather
more insights about the distribution of some particular FOTA
packages in Android devices. We refer the reader to Figure 3
in Appendix C for a graphical illustration of this distribution.
We observe two different patterns:
1) First-party FOTAs in which there is a consistent relationship
between packages, brands, and certiﬁcate information (e.g.,
the com.samsung.android.app.omcagent app found on
a “Samsung” device, signed by“samsung corporation”).
Note that in some cases the brand reﬂects MNOs due to
the re-branding of devices, e.g., “verizon” devices that are
actually updated by a FOTA app from “samsung”.
2) Third-party FOTA providers like Adups, Redstone and SoC
manufacturers like Qualcomm, which are present in devices
from multiple vendors, and often signed with different
certiﬁcates as discussed before.
Figure 1: Distribution of FOTA types in devices with 1 to 5
FOTAs. To ease visualization, we show non-Google packages
with a higher prevalence in our dataset.
We discover that 42% of FOTA apps (from 47 packages)
are ﬁrst-party FOTAs, all of them from the OEM category,
while 43% of apps (from 84 packages) are third-party FOTAs.
Speciﬁcally, 10% of apps from 30 packages are from OEMs,1
1.6% of apps from 4 packages are from MNOs, 9% of apps
from 13 packages are from SoCs, and 9% of app from 13
packages belong to the SFD category. The rest of the FOTAs
are either not categorized or belong to Google.
Despite the limitations of this analysis, the results show that
a majority of FOTA software from our dataset is not deployed
by the OEMs. Instead, they often rely on third parties, either for
updating the whole system or for updating the software required
by the different hardware components. The externalization
of FOTA services translates into vendors losing control over
critical system components with the ability to silently install
software in the devices. This may introduce privacy concerns,
as it is not generally possible to know who is providing a device
with updates or if external manufacturers can access sensitive
data. This lack of control also has security implications as
users have no control over what is installed using a FOTA.
For example, malicious apps can be installed without user
knowledge [19]. We go further into the analysis of installations
through FOTA software in §VII, using data from real devices.
We observe that 80% of the devices have Google FOTA
components. If we exclude those components, we ﬁnd 71%,
20%, 8%, 0.8%, and 0.2% of devices with one, two, three,
four and ﬁve FOTAs, respectively. A plausible reason for
having more than one FOTA is to update packages for different
purposes—e.g., the system itself, hardware drivers, or other
apps. Figure 1 shows the distribution of FOTAs per device
in our dataset, grouped by their type. We report statistics for
devices having 1 to 5 FOTAs. For clarity reasons and to reduce
combinations, we aggregate repeated types (e.g., we reduce
[SOC, OEM, OEM] and [SOC, SOC, OEM] to [SOC, OEM]). In
general, we observe that in most of the devices with one or
two FOTAs, these are from OEMs (66% and 66% respectively).
In absence of an OEM FOTA, it is common to observe either
a FOTA from a SFD or SoC. Indeed, often combinations of
FOTAs from different categories include one from a SoC. This
suggests that these devices include FOTAs used to update
speciﬁc hardware components, and FOTAs used to update the
system itself. A less common type of FOTA found is MNOs.
1Note that some OEMs, like Foxconn, JRD or Tinno, also provide FOTA
services to other brands (possibly due to re-branding).
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:11:06 UTC from IEEE Xplore.  Restrictions apply. 
1611
[OEM][UNC][SFD][SOC][MNO][OEM][SFD,SOC][SOC][OEM,UNC][OEM,SOC][OEM,SFD][MNO,OEM][SOC,UNC][SFD][UNC][MNO,UNC][SFD,UNC][OEM,SOC][OEM][MNO,OEM][SOC,UNC][OEM,SFD][OEM,SFD,SOC][SFD,SOC][OEM,SFD,UNC][OEM,SOC,UNC][SFD,SOC,UNC][OEM,SOC][OEM,SFD,SOC,UNC][SFD,SOC,UNC][OEM,SFD][OEM][OEM,SFD,UNC][OEM,SFD,SOC,UNC][OEM,SOC]0100101102103Number of devices withinthe distribution (log scale)461611808763281512931551539966533836231312113692447462261913332341714882116OneFOTATwoFOTAsThreeFOTAsFourFOTAsFiveFOTAsOEMSOCMNOSFDUNCThose cases where a FOTA of this type is present might be
due to MNOs willing to take the control over the devices by
installing speciﬁc updates and system apps (not allowing the
user to remove them), like app centers or commercial apps.
Limitations. Our analysis is based on 2,013 FOTA apps
extracted from 20,924 devices. Due to limitations on FOTA
Finder (§IV-B), we were not able to process 37% of the
Firmware Scanner dataset. A larger coverage might change
the distribution of FOTA types. Also, we analyzed the FOTA
categories using static lists that were ﬁlled by doing manual
web searches, in order to classify the different companies
based on the package names. These limitations may impact
our results. For example, we found devices where only SoC
FOTAs are present (devices like Xiaomi or Smartfren with
FOTAs from Qualcomm or SPRD). One would expect that
each device contains at least the corresponding OEM FOTA
(or a specialized developer). In cases where neither of these
are found, this might be due to: (i) FOTA Finder not being
able to ﬁnd the FOTA corresponding to the OEM or SFD in
these devices, or (ii) due to limitations in the classiﬁcation,
e.g., an OEM wrongly labeled as a SoC developer.
VI. BEHAVIOR ANALYSIS
We statically analyze the FOTA apps in our dataset to
characterize their capabilities, privacy risks, and identify means
to execute potentially harmful or unwanted behaviors. We
also perform an analysis of the different aspects relevant
to the installation process and other artefacts present both
in devices (speciﬁc certiﬁcate repositories) and FOTA apps
(e.g., shared UIDs) that provide additional information about
the stakeholders forming the update ecosystem and their
relationships. We note that our ﬁndings only show potential
behaviors as we do not have runtime observations. We might
also be missing some behaviors as a consequence of code
obfuscation techniques or reﬂection [35], [42], [54]. This is
the result of well-known static analysis limitations.
A. Overview
We begin our study with a general analysis of the DEX
code of the 1,716 non-Google FOTA apps found on non-rooted
devices to identify the presence of potentially harmful behaviors,
including the access to sensitive resources and personal data.
We rely on a custom analysis pipeline that integrates multiple
open-source static analysis tools to elicit behavior in Android
app, such as FlowDroid [31] and Amandroid [67] to conduct
taint analysis, and a modiﬁed version of Androwarn [10] to
perform API usage analysis. We are unable to automatically
study dynamically FOTA apps in a standard analysis sandbox
due to technical and instrumentation impediments, including
the need for platform signatures on the code, dependencies on
hardware, and different entry points than those often expected
by the sandbox (see §VIII). Consequently, our results might
miss hidden behaviors that are elicited through techniques such
as reﬂection and dynamic code loading.
Table III provides a summary of our results. We classify
the access to 36 different types of sensitive data, resources, or
capabilities into 9 categories. The majority of FOTA apps show
Accessed data type / behaviors
IMEI
IMSI
Phone number
MCC & MNC
Operator name
SIM Serial number
SIM State
Current country
SIM country
Software version
Phone state
Installed apps
Phone type
Logs
GPS
Cell location
CID
LAC
Wi-Fi conﬁguration
Current network
Data plan
Connection state
Network type
SMS sending
Phone calls
Audio recording
Video capture
Native code
Linux commands
Remote connection
Telephony
identiﬁers
Device settings
Location
Network
interfaces
Phone service
abuse
Audio/video
interception
Arbitrary code
execution
Socket conn.
% Apps (#) % Third-party (#)
33.7 (577)
31.4 (538)
8.8 (151)
19.1 (327)
5.7 (98)
6.5 (111)
13.1 (224)
6.7 (115)
7.6 (131)
1.0 (17)
25.1 (430)
49.2 (843)
14.4 (247)
65.3 (1,119)
0.7 (12)
4.3 (73)
4.8 (82)
3.7 (63)
2.0 (35)
50.0 (856)
34.9 (598)
4.3 (73)
17.3 (296)
0.1 (1)
8.5 (146)
2.6 (44)
2.3 (40)
27.1 (465)
30.9 (530)
6.7 (114)
15.2 (260)
8.2 (140)
4.4 (75)
6.3 (108)
3.3 (56)
2.7 (446)
4.5 (77)
1.3 (22)
3.2 (55)
1.0 (17)
5.5 (95)
17.9 (307)
8.3 (143)
24.8 (425)
0.6 (11)
2.7 (47)
2.6 (44)
2.0 (34)
1.9 (32)
15.1 (259)
8.9 (153)
1.7 (29)
6.2 (106)
0.0 (0)
3.3 (57)
2.4 (41)
2.3 (40)
11.4 (196)
10.8 (185)
1.9 (32)
Table III: Percentage of apps (out of the 1,716 FOTA apps
analyzed) accessing personal data or showing potentially
harmful behaviors. The rightmost column shows how many of
them are third-party FOTAs.
capabilities that are expected to implement their function. For
example, most apps access the current network and phone state.
This is expected since Google’s documentation [3] recommends
that FOTA updates should be scheduled when the device is
in idle maintenance mode (e.g., at overnight, when phone is
charging) in order to avoid disruptions, and also when it is
connected to a Wi-Fi network to avoid monetary costs due to
downloading updates through a data plan. However, our ﬁndings
suggest a prevalent access to user and device identiﬁers. A
small number (<5%) of the analyzed FOTA apps access the
device location. Table IV shows, for a subset of FOTA apps, the
types of device and user data that is accessed and uploaded to
the update servers. The purpose of uploading such identiﬁers is
unknown, though one plausible hypothesis is that they facilitate
targeted installations programs. The fact that these apps run
silently in the background indicates that personal data is likely
uploaded without user consent, showing a lack of transparency
in these apps. Other potentially dangerous behaviors include
the ability to make phone calls (146 apps) and recording audio
(44 apps) or video (40 apps). However, as we will further
investigate in §VI-C, their usage is legitimate in most cases.
In the remaining of this section we take a deeper look at
some of these potentially dangerous behaviors, with emphasis
on the presence of third-party components in FOTA apps and
the type of permissions that are requested by FOTA apps. When
relevant, we will contextualize our ﬁndings with the type of
FOTA apps according to the classiﬁcation in §V-A.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:11:06 UTC from IEEE Xplore.  Restrictions apply. 
1612
l
e
d
o
M
e
c
i
v
e
D
s
s
e
r
d
d
A
C
A
M
•
•
•
•
•
•
D
I
r
e
s
U
•
•
y
r
t
n
u
o
C
•
•
•
e
g
a
u
g
n
a
L
m
e
t
s
y
S
•
•
•
n
o
i
s
r
e
v
d
i
o
r
d
n
A
•
•
•
•
t
n
i
r
p
r
e
g
n
i
F
•
•
•
n
o
i
t
a
m
r