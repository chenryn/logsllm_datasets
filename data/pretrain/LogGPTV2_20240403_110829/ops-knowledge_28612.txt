User: I want to have multiple installs of Python: 2.1, 2.4, 2.7, 3.x
My IDE is Eclipse (Helios)/Pydev on MacOSX, which works great. I have a couple of Python codebases that are/will be running on different versions of Python. Also, I like Eclipse PyDev's crosslinking from source-code to documentation.
The standard recommendation seems to be: use virtualenv, and keep the installs totally separate from the builtin MacPython (2.6.1). Eclipse should never be pointing to the MacPython install. (Should PYTHONPATH even be set in such an environment?)
Before I get on with virtualenv, is there anything else I should know about this?
virtualenv doesn't impose any overhead, and I shouldn't be worried with occasional comments about breakage to nose, coverage etc?
I'm interested in hearing from Eclipse or Pydev users on MacOS.
Also if anyone has other tips on migrating a Python codebase from 2.1 -> 2.7.
Assistant: From the README text file of python

Installing multiple versions
On Unix and Mac systems if you intend
  to install multiple versions of Python
  using the same installation prefix
  (--prefix argument to the configure
  script) you must take care that your
  primary python executable is not
  overwritten by the installation of a
  different version.  All files and
  directories installed using "make
  altinstall" contain the major and
  minor version and can thus live
  side-by-side.  "make install" also
  creates ${prefix}/bin/python which
  refers to ${prefix}/bin/pythonX.Y.  If
  you intend to install multiple
  versions using the same prefix you
  must decide which version (if any) is
  your "primary" version.  Install that
  version using "make install".  Install
  all other versions using "make
  altinstall".
For example, if you want to install
  Python 2.5, 2.6 and 3.0 with 2.6 being
  the primary version, you would execute
  "make install" in your 2.6 build
  directory and "make altinstall" in the
  others.

Virtualenv is an option but you could use the above mentioned option instead of venv which seems much simpler.