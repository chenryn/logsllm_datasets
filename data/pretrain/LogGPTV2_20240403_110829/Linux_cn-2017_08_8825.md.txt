---
**作者：Amber Ankerholz**
**类别：观点**
**评论数据：无**
**统计：**
- 评论数：0
- 收藏次数：0
- 点赞数：0
- 分享次数：0
- 浏览量：3,385
**日期：2017年8月31日 10:29:39**
**编辑推荐：否**
**摘要：** 在开发开源软件时，安全漏洞可能成为一大挑战。常见漏洞及曝光（CVE）ID、零日漏洞及其他类型的安全问题似乎每天都在出现。面对如此庞大的信息流，如何才能确保自己的产品不会落伍？
**来源链接：** https://www.linux.com/news/event/elcna/2017/2/how-manage-security-vulnerabilities-your-open-source-product
**文章ID：8825**
**是否精选：是**
**大图：** /data/attachment/album/201708/31/102941ewki56wetwwsadww.jpg
**永久链接：** /article-8825-1.html
**图片缩略图：** /data/attachment/album/201708/31/102941ewki56wetwwsadww.jpg.thumb.jpg
**相关文章：无**
**审稿人：无**
**选择器：无**
**总结：** 开发开源软件时，安全漏洞可能让人应接不暇。常见的如CVE ID、零日漏洞等几乎每天都有新的报道。在这样的信息洪流中，怎样才能保持产品的安全性呢？
**标签：**
- CVE
- 安全漏洞
**是否有缩略图：否**
**标题：** 如何管理开源产品的安全漏洞
**标题配图：是**
**翻译者：geekpi**
**更新时间：2017年8月31日 10:29:39**

![软件漏洞](/data/attachment/album/201708/31/102941ewki56wetwwsadww.jpg "软件漏洞")

在ELC + OpenIoT峰会上，英特尔安全架构师Ryan Ware将分享应对漏洞泛滥并有效管理产品安全性的策略。

### 文章正文

在开发开源软件的过程中，开发者面临的各种安全威胁可能会令人感到无所适从。包括但不限于常见漏洞及暴露（CVE）ID和零日漏洞在内的新问题几乎每日都会被公开。那么，在这股信息洪流面前，我们该如何跟上步伐？

据英特尔安全架构师Ryan Ware透露，“假设你发布了一款基于Linux内核4.4.1的产品，到目前为止，该版本的内核已报告了9个相关的CVE。尽管这些漏洞是在你部署后才被发现的，但它们确实影响到了你的产品。”

在[嵌入式Linux会议](http://events.linuxfoundation.org/events/embedded-linux-conference)与[开放物联网峰会](http://events.linuxfoundation.org/events/openiot-summit)上，Ware将就如何实施有效的策略来成功管理产品的安全性进行深入探讨。他的演讲涵盖了最常见的开发者错误以及追踪最新漏洞的方法等内容。

**问：能否简单介绍一下CVE、零日漏洞以及其他类型的漏洞？它们是什么，为什么重要？**

答：这是一个非常好的问题。CVE是由美国政府要求MITRE公司维护的一个数据库，目前由美国国土安全部资助。自1999年以来，它一直致力于收集所有公开的安全漏洞的信息。每个漏洞都拥有一个唯一的标识符——CVE-ID。最初，“CVE”指代整个数据库；然而随着时间推移，这个术语逐渐演变为特指单个的安全漏洞。
许多出现在CVE数据库中的漏洞起初都是零日漏洞。这意味着它们并没有遵循“负责任披露”的程序而直接对外公布。关键在于，如果软件供应商未能通过某种形式的修复（通常是补丁）及时响应，则这些漏洞便成了公开且可被利用的。这类未修补的软件漏洞至关重要，因为一旦公开，攻击者就可以利用它们对系统造成损害。某种程度上来说，发布一个新的CVE或零日漏洞就像是给赛跑选手们开了枪——在这场竞赛结束之前，您的客户始终处于风险之中。

**问：存在多少漏洞？又如何确定哪些漏洞与我的产品有关？**

答：对于任何发布软件的人来说，记住这一点非常重要：即便您尽最大努力保证发布的软件没有任何已知漏洞，但实际上，总会存在一些未知的漏洞。例如，如果您发布了一个基于Linux内核4.4.1版本的产品，那么截至今日，已有9个CVE与此版本相关联。尽管在您使用这些代码时并未意识到这些问题的存在，但它们确实会影响到您的产品。
截至目前，CVE数据库共收录了80,957条记录（截止至2017年1月30日），其中包括自1999年以来的所有历史记录。其中，1999年的记录为894条。而一年内记录最多的年份则是2014年，当年共有7,946条新增记录。不过我认为过去两年数量下降并不意味着安全漏洞减少了。这正是我将在演讲中讨论的内容之一。

**问：有哪些策略可以帮助开发者紧跟最新的漏洞信息？**

答：有几种方法可以让开发者跟上不断涌现的漏洞信息。我个人最喜欢使用的工具之一是[CVE Details](http://www.cvedetails.com/)网站，因为它以非常直观的方式展示了来自MITRE的数据，并允许用户创建自定义RSS源来跟踪特定组件的漏洞情况。对于那些需要更复杂追踪需求的人来说，可以考虑下载免费提供的MITRE CVE数据库并定期更新。此外还有像cvechecker这样的优秀工具，能够帮助检查软件中是否存在已知漏洞。
对于软件栈中的关键部分，我还强烈建议加入上游社区。这些人是最了解你所用软件的人，没有人比他们更适合成为专家。与之合作将使你受益匪浅。

**问：如何判断自己的产品是否已经解决了所有漏洞？有没有推荐的工具？**

答：不幸的是，正如前面所说，完全消除产品中的所有漏洞几乎是不可能实现的目标。上述提到的一些工具在此过程中发挥着重要作用。但是，还有一点同样至关重要，那就是必须具备一种能够在现场快速更新产品软件的能力。如果你无法做到这一点，那么当客户受到威胁时，你就无法有效地解决问题。因此，确保软件具有易于执行的更新机制是非常必要的。

**问：为了成功地管理安全漏洞，开发者还需要掌握哪些知识？**

答：这里有一个我经常看到的错误：开发者总是应该牢记最小化攻击面的原则。这意味着只包含产品实际所需的功能！不仅限于避免添加不必要的软件包，还包括关闭不需要的功能选项。
这样做有何好处呢？想象一下这是2014年，你刚刚上班就看到了关于Heartbleed漏洞的技术新闻。你知道自己在产品中集成了OpenSSL，因为你需要用到一些基础加密功能，但并不使用与该漏洞相关的TLS心跳功能。此时你会选择：
a. 花费大量时间和精力与客户及合作伙伴协作，通过紧急软件更新来修复这一严重的安全问题；
b. 或者只需要告诉他们你在编译产品时使用了“-DOPENSSL_NO_HEARTBEATS”标志，因此他们不会受到影响，你可以继续专注于新功能和其他生产活动。
最简单的解决方案就是根本不去引入那个漏洞。

(封面图片：[Creative Commons Zero](https://www.linux.com/licenses/category/creative-commons-zero) Pixabay)

---

原文作者：[AMBER ANKERHOLZ](https://www.linux.com/users/aankerholz)
译者：[geekpi](https://github.com/geekpi)
校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出