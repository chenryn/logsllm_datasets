RegexOptions.IgnorePatternWhitespace来打开宽松排列模式的时候（实例3.4），"n"和
"\in"是有区别的。宽松排列模式在实例2.18中讲解过。"n"是包含一个字面换行符的字
符串，会被当作空白忽略。"n"则是包含正则表达式记号的一个字符串，它会匹配一个
换行。
逐字字符串（verbatimstring）以@和双引号作为开始，并以一个双引l号作为结束。如
果要在一个逐字字符事中包含一个双引号，那么就需要用两个双引号来表示。反斜杠
不需要进行转义，因此会得到一个显然更加易读的正则表达式。@"n"总是代表正则表
达式记号心n，它会匹配一个换行，即使在宽松排列模式中也是如此。虽然逐字字符串
并不在字符串的层次上支持n，但是它可以跨多行。这样就使得逐字字符串用于宽
松排列模式下的正则表达式最为理想。
很显然，你应当使用逐字字符事把正则表达式插人到C#源代码中。
VB.NET
在VB.NET中，可以把字面正则表达式传递给RegexO构造函数，以及在Regex类中的
其他成员函数。接受正则表达式的参数总是被声明为一个字符事。
96第3章
www.TopSage.com
---
## Page 113
VisualBasic使用的是双引号字符串。在字符串之内，双引号必须使用两个双引号来表
示。所有其他字符都不需要转义。
Java
在Java中，可以把字面正则表达式传递给Patterm.compileO类厂（classfactory），以及
在String类中的各种其他函数。接受正则表达式的参数总是被声明为一个字符事。
Java使用双引号字符串。在双引号字符串之内，双引号和反斜杠必须使用一个反斜杠
来进行转义。在字符事中同时也支持对于不可打印字符（例如n>）的转义，以及Unicode
转义序列（例如uFFFF>）。
在使用Pattern.COMMENTS来打开宽松排列模式的时候（实例3.4），"n"和"\in"是有区
别的。宽松排列模式已经在实例2.18中进行了讲解。"n"是包含一个字面换行符的字
符事，会被当作空白忽略。而"n"则是包含正则表达式记号的一个字符事，它会匹配一
个换行。
JavaScript
在JavaScript中，创建正则表达式的最好方式是使用声明字面正则表达式的特殊语法。
你可以简单地把正则表达式放到两个正斜杠之间。如果在正则表达式之内包含任何正
斜杠，那么就需要使用反斜杠来对它进行转义。
虽然使用字符事也可以创建一个RegExp对象，但是在你的代码中使用字面正则表达
式的字符串记法并没有任何意义。因为必须要对引号和反斜杠进行转义，这样通常会
导致一大堆的反斜杠出现。
PHP
在PHP的preg函数类中使用的字面正则表达式则需要小心翼翼地处理。与JavaScript
和Perl不同，PHP自已并不拥有一种内置的正则表达式类型。正则表达式必须总是像
学符串一样用引号引l起来。对于ereg和mb_ereg函数类也是如此。但是，在尽量模仿
Perl的过程中，PHP的包装函数开发者添加了-个额外的要求。
在字符事中，正则表达式必须按照Perl风格的字面正则表达式引起来。这意味着如果
在Perl中你写的是/regex/，那么在PHP的preg函数类中就变成了'/regex/。同在Perl
中一样，可以使用任意的标点符号对作为分隔符。如果正则表达式分隔符出现在正则
表达式中的话，那么它就必须使用反斜杠来转义。为了避免这种情形，可以选择一个
不会在正则表达式中出现的分隔符。对于本实例来说，我们使用了百分号，因为在正
则表达式中会出现正斜杠，但是不会出现百分号。如果正斜杠不在该正则表达式中出
现，那么最好使用正斜杠，因为它是在Perl中最为常用的分隔符，同时也是在JavaScript
和Ruby中必须使用的分隔符。
使用正则表达式编程97
www.TopSage.com
---
## Page 114
PHP同时支持单引号和双引号字符事。二者都要求把在正则式之内的引号（单引号和
双引号）与反斜杠都用反斜杠进行转义。在双引号字符事中，美元符号也需要转义。
对于正则表达式来说，你应当使用单引号字符串，除非真的需要在正则表达式中插入
变量的值。
Perl
在Perl中，字面正则表达式可以使用在模式匹配操作符和替换操作符中。模式匹配操
作符包含两个正斜杠，正则表达式就出现在它们之间。在正则表达式之内的正斜杠必
须使用反斜杠进行转义。并不需要再对其他任何字符进行转义（$和@可能会例外，这
会在本小节最后进行解释）。
对于模式匹配操作符来说，另外一种可选的方式是把正则表达式放到任意一对标点符
号之间，前面需要一个前导的字母m。如果使用任意的起始和结束标点（圆括号、花
括号或方括号）的话，那么它们需要成对出现：例如m{regex}。如果使用的是其他标
点，那么可以使用同一个学符两次。在这个实例的解答中使用的是感叹号。这样就可
以不必对正则表达式中的字面正斜杠进行转义。如果起始和结策分隔符不一样的话，
那么只有结束分隔符作为字面字符出现在正则表达式中的时候，才需要对它使用反斜
杠进行转义。
替换操作符与模式匹配操作符类似。它使用s开头，而不是m，另外其中还需要用到替
代文本。当使用括号或者类似标点作为分隔符的时候，你需要2对标点：s[regex]
[replace]。对于其他所有的标点，则需要出现3次：s/regex/replace/。
Perl会把模式匹配和替换操作符当作双引号字符串来进行分析。如果你写的是m/1am
Sname/，而Sname中保存的是"Jan"，那么最终会得到的正则表达式是I·am·Jan>。在
Perl中，$"也是一个变量，所以在本实例的正则表达式中，必须对字符类中的字面美元
符号进行转义。
如果想要把美元符号当作定位符（参见实例2.5）使用，那么永远也不要对它进行转义。
一个转义的美元符号总是代表-一个字面量。Per1采用了比较聪明的处理方式，可以区分
用作定位符的美元符号和用作变量插值的美元符号，这是由于定位符一般来说只会用于
一个分组，或者整个正则式的末尾，或者一个换行符之前。在中，如果想要
检查是否“regex”会匹配整个目标字符串，那么就不应当对其中的美元符号进行转义。
在正则表达式中，@符号并不拥有特殊含义，但是它在Perl中会被用于变量插值。在
Perl代码中，你需要对字面正则表达式之中的@符号进行转义，就像在双引号字符串中
一样。
Python
Python的re模块中的函数期望字面正则表达式被当作字符事来进行传递。你可以使用
98第3章
www.TopSage.com
---
## Page 115
Python提供的各种不同方式来把字符串引起来。根据在正则表达式中出现的字符的不
同，采用不同的引号方式，可能会减少需要使用反斜杠来进行转义的字符数量。
通常来说，raw字符串是最好的选择。Python中的raw字符串并不要求对任何字符进行
转义。如果使用的是raw字符串，那么就不要对你的正则表达式中出现的反斜杠都使
用加倍表示。r"\d+"读起来肯定比"\d+"更为容易，特别是当正则式变得很长的时候尤
为如此。
Raw字符串唯一不是很理想的情形是当你的正则表达式中同时包括单引号和双引号字
符时。这时，无法使用以一对单引号或者双引号来分隔的raw字符串，因为你无法对
正则表达式之内的引号进行转义。在这种情形下，可以对raw字符串使用三引号，就
像我们在前面给出的Python解答中一样。为了比较起见，我们在解答中同时给出了正
常字符事的形式。
如果想要在正则表达式中使用在实例2.7中讲解的Unicode特性，那么就需要使用
Unicode字符串。你可以在一个字符串之前添加一个u来把它变成Unicode字符串。
Raw字符事并不支持对像n这样的不可打印字符进行转义。Raw字符串会把转义序列
当作字面文本。这对于re模块来说并不是问题。它支持把这些转义作为正则表达式语
法的一部分，以及替代文本语法的一部分。在一个raw字符串中的字面的in在你的正
则表达式和替代文本中还是会被解释成一个换行符。
在使用re.VERBOSE打开宽松排列模式的时候（实例3.4），字符串"n"，与字符串"\in"
和raw字符串r"n"是有区别的。宽松排列模式已经在实例2.18中进行了讲解。"n"是
包含一个字面换行符的字符串，会被当作空白忽略。而"\in"和r"n"则是包含正则表达
式记号的一个字符串，它会匹配一个换行。
当使用宽松排列模式的时候，三引号raw字符串，例如r"""n"""是最好的解决方案，因
为它们可以跨多行。同样，《n>不会在字符串的层次被解释，因此它可以在正则表达式
的层次被解释来匹配一个换行符。
Ruby
在Ruby中，创建正则表达式的最好方式是使用声明字面正则表达式的特殊语法。你可
以简单地把正则表达式放到两个正斜杠之间。如果在正则表达式之内包含任何正斜
杠，那么就需要使用反斜杠来对它进行转义。
如果不想在正则表达式中对正斜杠进行转义，那么可以在正则表达式前面加上前缀%r，
然后就可以使用你所选择的任意标点符号作为分隔符。
虽然使用字符事也可以创建一个Regexp对象，但是在代码中使用字面正则表达式的字
符串记法并没有任何意义。因为你必须要对引号和反斜杠进行转义，这样通常会导致
一大堆反斜杠的出现。
使用正则表达式编程99
www.TopSage.com
---
## Page 116
在这一点上，Ruby和JavaScript非常相似，唯一的区别是在Ruby中使用
的类名是作为一个单词的Regexp，而在JavaScript中使用的类名则是两
个词首字母大写的形式RegExp。
参见
实例2.3讲解了字符类是如何工作的，以及为什么在正则表达式中需要两个反斜杠来
包含字符类中的一个反斜杠。
实例3.4讲解了如何设置正则表达式选项，在有些语言中这是通过字面正则表达式的一
部分来实现的。
3.2导入正则表达式函数库
问题描述
要想在应用程序中能够使用正则表达式，就需要把正则表达式函数库或命名空间导人
到源代码中。
在本节之后的代码片段中，都会假设如果有需要的话，你已经导入了相
应的函数库。
解决方案
#
using System.Text.RegularExpressions;
VB.NET
Imports System.Text.RegularExpressions
Java
import java.util.regex.*;
Python
import re
讨论
有些编程语言包含了内置的正则表达式。对于这些语言来说，你不再需要做任何事情
100
第3章
www.TopSage.com
---
## Page 117
来使之支持正则表达式。其他语言会通过一个函数库来提供正则表达式的功能，这个
库就需要在源代码中使用一个import语句来导入。有些语言根本不提供正则表达式支
持。对于这些语言，你不得不自已设法把正则表达式支持编译和链接进来。
#
如果把using语句添加到C#源文件的开始处，那么你就可以直接引用提供正则表达式
功能的类，而不必再去使用完全限定的名称。例如，你可以使用RegexO，而不必非要
使用System.Text.RegularExpressions.RegexO。
VB.NET
如果把Imports语句添加到VB.NET源文件的开始处，那么你就可以直接引用提供正
则表达式功能的类，而不必再去使用完全限定的名称。例如，可以使用Regex()，而不
必非要使用System.Text.RegularExpressions.RegexO。
Java
要想能够使用Java内置的正则表达式函数库，就必须把java.util.regex包导人到你的应
用程序中。
JavaScript
JavaScript的正则表达式是内置的，因此总是可用的。
PHP
在PHP4.2.0版本之后，preg函数是内置的，因此总是可用的。
Perl
Perl的正则表达式是内置的，因此总是可用的。
Python
要想使用Python的正则表达式功能，就必须把re模块导人你的脚本中。
Ruby
Ruby的正则表达式是内置的，因此总是可用的。
3.3创建正则表达式对象
问题描述
你想要实例化一个正则表达式对象，或者是编译一个正则表达式，从而可以在应用程
使用正则表达式编程
101
www.TopSage.com
---
## Page 118
序中更为有效地使用它。
解决方案
#
如果你知道该正则表达式是正确的：
Regex regexObj = new Regex("regex pattern");
如果该正则表达式是由最终用户提供的（UserInput是一个学符串变量）：
try(
Regex regexObj = new Regex(UserInput);
}catch (ArgumentException ex){
//Syntax error in the regular expression
）
VB.NET
如果你知道该正则表达式一定是正确的：
Dim RegexObj As New Regex("regex pattern")
如果该正则表达式是由最终用户提供的（UserInput是一个字符串变量）：
Dim RegexObj As New Regex(UserInput)
Catch ex As ArgumentException
'Syntax error in the regular expression
End Try
Java
如果你知道该正则表达式一定是正确的：
Pattern regex =Pattern.compile("regex pattern");
如果该正则表达式是由最终用户提供的（UserInput是-个字符串变量）：