Register new 
instance with 
ELB again; 
3.05 s 
2.81 s 
2.96 s 
3.09 s 
3.01 s 
2.99 s 
Add hedged 
instance into 
ASG; 
(Direct 
Alternative) 
Register new 
instance with 
ELB again; 
(Direct Redo) 
(Direct Redo) 
103 
3)  Satisfying Recovery Requirement R7 
We can see that the maximum recovery time of “recovery for recovery” is 3.19 seconds. Hence, 
the time for the original recovery and the “recovery for recovery” in total is much less than the 
specified  time  gap  between  two  adjacent  recovery  points.  Thus,  the  requirement  of  “recovery 
for recovery” is achieved by POD-Recovery. 
8.2  Case Study 2-Recovery for Installation Operation on Cloud 
In  this  section,  we  present  the  evaluation  results  of  POD-Recovery  by  using  the  installation 
operation on cloud as the case study. The purposes of this experiment are three-fold: 1) showing 
the  result  of  recovery  points  determination  for  installation;  2)  presenting  the  workload  of 
resource  state  management  for  installation;  3)  demonstrating  POD-Recovery’s  capability  of 
satisfying recovery requirements using installation. The experimental environment is described 
in Fig. 26 above. 
8.2.1  Recovery Points Determination 
The  installation  operation has  4 steps:  1)  launch  a  web  instance;  2)  assign  an  elastic  IP  to  the 
web instance; 3) launch a database instance; 4) assign an elastic IP to the database instance. Fig. 
30 shows the sections resulting from recovery points at different levels of granularity. First, Fig. 
30(a) is obtained by applying Recovery Actions Identifiable to the steps of installation operation. 
Fig.  30(b)  combines  some  sections  with  low  failure  rates.  Based  on  the  recovery  points 
determination procedure, the recovery points were determined to be after step 2 and step 4. 
Fig. 30.  Determining Recovery Points for Installation Operation. 
8.2.2  Workload of Resource Space Determination 
The  determined  resource space  contains two  resource  types:  Instance (i.e. VM) and  Elastic  IP 
address.  Each  resource  type  has  attributes  (e.g.  instances  have  an  instance  id,  instance  type, 
104 
machine image, etc.). The dependency relationships among those resources are: 1) an Elastic IP 
can  attach  to  an  instance;  2)  an  Elastic  IP  can  attach  to  no  instance.  The  workload  of 
determining  resource  space  for  installation  operation  is  shown  in  Fig.  31,  which  shows  the 
execution  time  of  the  resource  space  determination  algorithm  based  on  30  times  of  runs.  The 
average  execution  time  is  calculated  to  be  37.37ms,  and  the  relative  standard  deviation  is 
calculated  to  be  15.73%.  The  value  of  the  75th  percentile  point  (75%  percentile)  is  also 
calculated, which is 39.75ms. 
Fig. 31.  Workload of Resource Space Determination for Installation Operation. 
8.2.3  Workload of Expected Resource State Templates Generation 
The workload of generating the expected resource state templates for the  installation operation 
is  shown  in  Fig.  32,  which  shows  the  execution  time  of  expected  resource  state  templates 
generation algorithm based on 30 times of runs. The average execution time is calculated to be 
41.37ms,  and  the  relative  standard  deviation  is  calculated  to  be  7.98%.  The  value  of  the  75th 
percentile point (75% percentile) is also calculated, which is 43ms. 
Fig. 32.  Workload of Expected Resource State Templates Generation for Installation Operation. 
8.2.4  Recovery Satisfying Requirements 
POD-Recovery  is  designed  to  achieve  the  goal  of  satisfying  all  of  the  eight  recovery 
requirements  described  in  section  3.5.  Therefore,  experimental  evaluations  are  required  to 
105 
justify  POD-Recovery’s  capability  of  satisfying  all  the  recovery  requirement  The  experiments 
conducted below are constructed in such a way that it can demonstrate how POD-Recovery is 
able to fulfil each of the recovery requirements using the installation operation.  
A.  Runtime Recovery (Satisfying Recovery Requirement R1) 
As  should  be  clear  from  the  descriptions  in  chapters  4-7,  our  method  is  inherently  a  runtime 
recovery solution.  
B.  Recovery Satisfying RTO 
1)  Experimental Procedure 
This  recovery  requirement  concerns  the  time  the  recovery  takes  for  the  system  to  go  to  a 
consistent state. We therefore measure recovery time by performing the installation operation on 
a cloud application. There is no software running in the cloud instances during the installation 
operation. We used our own proprietary fault injection tool to inject faults for each of the two 
determined  recovery  points  in  the  installation  operation,  automatically  determined  the 
applicable  recovery  patterns  based  on  the  applicable  recovery  patterns  filtering  method 
described in section 7.3, and performed recovery using the selected acceptable recovery action 
based on each of the two recovery action selection methods. The selected recovery action by the 
first selection  method is the  optimal  one; the selected  recovery  action  by  the  second  selection 
method  is  not  necessarily  the  optimal  one,  but  it  is  an  acceptable  one.  Therefore,  the  selected 
recovery actions by both of these two optimization methods are both acceptable ones. The faults 
injected  are  described  in  Table  18.  The  selection  of  injected  faults  is  based  on  our  interviews 
with industry and failure reports, and hence representative. The recovery time is calculated by 
summing up the execution time of each function in the recovery action. We ran the experiment 
30 times, measuring the recovery time.  
Table 18.  Faults injected for Installation 
Recovery Point 
Fault injected 
Recovery Point 1 (After Step 2)  Web instance not launched  
Recovery Point 2 (After Step 4) 
Database instance not launched 
2)  Experimental Results 
Table 19 shows the recovery time of the recovery for the installation operation. Recovery time 
here  refers  to  exclusively  the  time  for  executing  the  recovery  plan.  The  recovery  time  in  the 
table represents the average value of the recovery time for 30 runs. The highest relative standard 
deviation is 2.6%. For each recovery point, the execution time of the recovery action selected by 
the Pareto set search based optimization method is no greater than the other applicable recovery 
106 
actions;  the  execution  time  of  the  selected  recovery  action  by  the  user  constraints  based 
optimization  method  is  not  necessarily  less  than  all  the  other  ones,  but  it  is  within  the  time 
constraint set by business stakeholders. 
Table 19.  Recovery Time for Installation 
Legends 
Recovery Pattern ID 
Recovery Pattern 
Recovery Pattern ID 
Recovery Pattern 
RP1 
RP2 
RP3 
RP4 
Compensated Undo & Redo 
RP5 
Compensated Undo & Alternative  RP6 
Rewind & Replay 
RP7 
RP8 
Rewind & Alternative 
Reparation 
Direct Redo 
Direct Alternative 
Farther Undo & Redo 
Recovery 
Point 
Process 
Step 
Errors 
Applicable 
Recovery 
Patterns 
Selected 
Recovery 
Action(Pareto 
Set) 
Recovery 
Time 
(Pareto 
Set) 
Selected 
Recovery 
Action(User 
Constraints) 
Recovery 
Time (User 
Constraint
s) 
Step 1. 
Launch a 
web 
instance 
Step 2. 
Assign an 
elastic IP to 
the web 
instance 
Step 3. 
launch a 
database 
instance  
Step 4. 
assign an 
elastic IP to 
the database 
instance 
Recovery 
Point 1 
Recovery 
Point 2 
Web 
instance not 
launched  
RP1, RP3, 
RP5 
Restart the web 
instance; 
Assign elastic 
IP to the web 
instance; 
55.21 s 
Restart the 
web instance; 
Assign elastic 
IP to the web 
instance; 
57.06 s 
(Reparation) 
(Reparation) 
Database 
instance not 
launched  
RP1, RP3, 
RP5, RP8 
Restart the 
database 
instance; 
Assign elastic 
IP to the 
database 
instance; 
56.43 s 
Restart the 
database 
instance; 
Assign elastic 
IP to the 
database 
instance; 
58.14 s 
(Reparation) 
(Reparation) 
3)  Satisfying Recovery Requirement R2 
From  the  results  we  can  see  that  the  recovery  for  all  the  recovery  points  in  the  installation 
operation takes no more than 60 seconds for execution. In addition, for these experiments state 
capturing time was typically around 14s but at most 15s, applicable recovery patterns filtering 
time  was  at  most  38  milliseconds  (ms),  recovery  plan  generation  time  for  each  applicable 
recovery pattern was at most 68 milliseconds (ms), applicable recovery actions evaluation time 
is at most 170 milliseconds (ms), and acceptable recovery action selection time is at most  290 
milliseconds  (ms).  While  not  part  of  our  scope  here  directly,  error  detection  time  has  to  be 
considered when discussing RTO as well. Detection times reported in the literature ranged from 
10ms to 11 seconds (X. Xu, et al., 2014). The sum of the worst cases of all the above times, i.e. 
the total error detection and recovery time, is around 86s. So, for each recovery point, the total 
recovery time is below 86 seconds, no matter which recovery action selection method is used. 
Normally,  if  the  errors  occur  again,  POD-Diagnosis  service  will  capture  the  errors  again  and 
trigger POD-Recovery again. Hence, POD-Recovery achieves a reasonable RTO. 
107 
C.  Recovery Reducing Negative Impact 
1)  Experimental Procedure 
This recovery requirement concerns the negative impact the recovery incurs on the cloud system. 
We  therefore  measure  recovery  impact  by  performing  the  installation  operation  on  a  cloud 
application. There is no software running in the cloud instances during the installation operation. 
We used our own proprietary fault injection tool to inject faults for each of the two determined 
recovery  points  in the  installation  operation, automatically  determined the applicable  recovery 
patterns based on the applicable recovery patterns filtering method described in section 7.3, and 
performed  recovery  using  the  selected  acceptable  recovery  action  based  on  each  of  the  two 
recovery action selection methods. The faults injected are described in Table 20. The selection 
of  injected  faults  is  based  on  our  interviews  with  industry  and  failure  reports,  and  hence 
representative. The recovery impact is calculated by computing the cross-product of two vectors: 
1) the average response time to user requests in each of the steps of the recovery action; 2) the 
execution time of each step of the recovery action. We ran the experiment 30 times, measuring 
the average recovery impact. 
Table 20.  Faults injected for Installation 
Recovery Point 
Fault injected 
Recovery Point 1 (After Step 2) 
Web instance not launched  
Recovery Point 2 (After Step 4) 
Database instance not launched 
2)  Experimental Results 
Table 21 shows the recovery impact of the recovery for the installation operation. The recovery 
impact in the table represents the average value of the recovery impact for 30 runs. Since there 
is no cloud application running in the cloud instances during the installation operation and the 
recovery, there is no recovery impact on the target cloud system and hence recovery impact is 
evaluated  to  be  0.  The  highest  relative  standard  deviation  is  0%.  For  each  recovery  point,  the 
impact of the recovery action selected by the Pareto set search based optimization method is no 
greater than the other applicable recovery actions; the impact of the selected recovery action by 
the user constraints based optimization method is not necessarily less than all the other ones, but 
it is within the impact constraint set by business stakeholders. 
108 
Table 21.  Recovery Impact for Installation 
Legends 
Recovery Pattern ID 
RP1 
RP2 
RP3 
RP4 
Recovery Pattern 
Compensated Undo & Redo 
Compensated Undo & Alternative 
Rewind & Replay 
Rewind & Alternative 
Recovery Pattern ID 
RP5 
RP6 
RP7 
RP8 
Recovery Pattern 
Reparation 
Direct Redo 