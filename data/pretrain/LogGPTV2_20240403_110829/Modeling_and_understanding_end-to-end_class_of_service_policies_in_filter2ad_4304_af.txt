sites such as CER1, CER2, and CER3 that correspond to voice cen-
ters or gateway sites, where the costs of having redundancy setups
may be worthwhile.
One interesting observation is that in some enterprise VPNs, we
have seen examples of asymmetric classes between CER pairs. For
example, a pair of CERs may be able to communicate in C1 in
one direction, but not in the reverse direction. While we are un-
able to con(cid:2)rm the exact reasons behind this, we hypothesize that
there may be two possible scenarios. First, this could correspond
to streaming video traf(cid:2)c, or certain traf(cid:2)c types which are usu-
ally purely unidirectional. Second, it is possible that the two sites
are not intended to exchange C1 traf(cid:2)c in practice. To know this
for sure, we would need to combine actual traf(cid:2)c data exchanged
between sites with our CoS model.
6.6 Non-standard (cid:3)ow treatments
One application of our model and tool is in detecting whether
various application (cid:3)ows are treated in a correct and expected fash-
ion, and to identify any non-standard (cid:3)ow treatment that is a depar-
ture from best practice. To investigate this further, we used our tool
to collect a list of standard (cid:3)ow-treatment patterns that are expected
to hold and con(cid:2)rmed them with network designers. These patterns
capture the expected consistency in treatment of (cid:3)ows throughout
the marking, policing and queuing stages of the CERs. While we
have observed several patterns, in this paper we only list three most
signi(cid:2)cant and interesting ones, denoted by P1(cid:24)P3.
(cid:15) P1: Flows marked as belonging to a data class by the marking
stage are usually re-marked by the policing stage as belonging to
the same class, but either conformant or non-conformant. A depar-
ture would be a case where a (cid:3)ow marked as belonging to a data
class (say C1) is re-marked by the policing stage as corresponding
to a different data class (say C2).
(cid:15) P2: Flows leaving the policing stage marked as a particular data
class should go to the corresponding queue. A potential departure
is a scenario where a (cid:3)ow does not go into any queue de(cid:2)ned in the
228 100
 80
 60
 40
 20
)
s
e
s
i
r
p
r
e
t
n
e
(
F
D
C
 0
 0
 5
 10
departure from P1
departure from P2
departure from P3
 20
 15
Number of CERs with non-standard flow treatments
Figure 17: CDF of the number of CERs with non-standard (cid:3)ow treat-
ment.
con(cid:2)guration. In such cases, the (cid:3)ow enters a default queue and
could see non-deterministic and likely degraded performance, be-
cause the behavior of default queues is vendor and model-speci(cid:2)c.
(cid:15) P3: Flows that exit the CER should be explicitly marked by the
CER. A departure is a concern since the treatment of the (cid:3)ow is not
deterministic, and depends on how that (cid:3)ow was marked prior to
entering the CER.
In detecting the presence of non-standard (cid:3)ow treatments for
CERs, we have considered cases where non-standard (cid:3)ow treat-
ments could occur for (i) (cid:3)ows that correspond to the address space
of the CER; and (ii) the universal (cid:3)owset (see ยง5 and Table 1). For
space reasons, we present results only when the address space of
the CER is considered.
Fig. 17 shows the departure from standard (cid:3)ow treatments across
all enterprises, considering the address space of each CER. Each
curve corresponds to one of the particular standard (cid:3)ow treatment
conditions that were violated. The X-Axis shows the number of
routers in an enterprise for which such departure from standard
treatment exists, and a point (X; Y ) shows that Y % of the enter-
prises have at most X CERs with non-standard treatment. For all
three patterns, there is no departure from standard treatment for
nearly 80% of the enterprises, and at most 5 routers for 95% of the
enterprises. This result indicates although non-standard (cid:3)ow treat-
ments are not prevalent, they do exist in a small set of routers in a
few enterprises.
We further analyzed the cases involving departures from stan-
dard treatments, and discussed these cases with designers and op-
erators. We summarize some of the insights from those discussions:
(cid:15) Change in con(cid:2)guration practices, and handling of legacy routers:
The departures from pattern P1 corresponded to cases where (cid:3)ows
that traverse a CER could be marked on the input interface as corre-
sponding to a particular data class, and could then be re-marked on
the output interface as corresponding to another different data class.
This was not expected, as the standard expected (cid:3)ow treatments in-
volved each CER marking the (cid:3)ow only once, or re-marking as
conformant or non-conformant traf(cid:2)c for the same data class. Dis-
cussions with operators revealed that this departure was potentially
due to changes in con(cid:2)guration practices, as well the handling of
legacy routers. While the earlier practice was to con(cid:2)gure marking
policies in the input interfaces of routers due to vendor capabilities
existing at the time, the newer practice was to con(cid:2)gure marking
policies in the output interfaces of routers as underlying vendor ca-
pabilities evolved. Legacy routers con(cid:2)gured using the earlier ap-
proach were not typically modi(cid:2)ed unless an actual policy change
was involved, in which case the policy changes were made on the
output interfaces, which is consistent with the newer practices. The
legacy con(cid:2)guration in the input interface was left behind, though
the best practice would have been to remove that.
(cid:15) Underestimating performance of network through miscon(cid:2)gura-
tion of probe traf(cid:2)c: The departures from pattern P2 corresponded
to cases where traf(cid:2)c corresponding to SLA probes from some
CERs were incorrectly queued. Recall from ยง6.3 that SLA probes
are used to monitor the performance of each traf(cid:2)c class and ensure
that it is in compliance with the requirements. Incorrect con(cid:2)gura-
tion of the SLA traf(cid:2)c does not impact the performance of the ap-
plication itself; however, it could impact the monitoring results. In
this scenario, the SLA probes were incorrectly assigned to the de-
fault queue which receives a lower priority than any other queues.
This would result in the probes underestimating the performance
compared to what the traf(cid:2)c classes are actually experiencing.
(cid:15) Pre-marked customer traf(cid:2)c: We found examples where (cid:3)ows
that traverse a CER could potentially not be marked at all (neither
at the policing nor marking stage) by the CER, thereby departing
from pattern P3. The operators indicated that these scenarios likely
corresponded to cases where an explicit agreement with the cus-
tomer stipulates that the customer would properly mark all traf(cid:2)c
before it reached the CER. While best practice would have been for
the CERs to explicitly re-mark the traf(cid:2)c, the net treatment received
by correctly pre-marked (cid:3)ows would not be affected.
7. RELATED WORK
In recent years, the modeling and understanding of network de-
signs, and detection of errors through con(cid:2)guration analysis has
evolved into an important area of research. Researchers have looked
at routing designs [17, 5], route redistribution policies [16], reach-
ability analysis in enterprises [18], modeling of BGP policies [10,
6, 4], and intra-domain traf(cid:2)c engineering [11]. Industry-driven ef-
forts have attempted to simplify con(cid:2)guration through the use of
templates [1, 3, 9], or vendor-neutral con(cid:2)guration languages [7, 8,
2]. In contrast to these works, our focus is on CoS policies in enter-
prise networks, an important area that has received little attention.
The CoS domain offers several distinguishing challenges such as
highly intertwined and nested con(cid:2)guration, policies instantiated
over multiple routers, and the use of large ACLs. Further, manag-
ing CoS con(cid:2)guration involves tuning class memberships and CoS
policies at the granularity of individual (cid:3)ows, and miscon(cid:2)gura-
tions can result in SLA violations and adverse consequences.
The analysis of CoS con(cid:2)guration has some similarity to the
analysis of (cid:2)rewall rules in that both domains deal with large ACLs
and operate at the granularity of (cid:3)ows. Further, our use of BDDs
has been inspired by [20, 12, 13]. However, while much work on
(cid:2)rewall analysis deals with issues related to miscon(cid:2)guration of in-
dividual ACLs, our focus is on modeling CoS policies in a network-
wide fashion across multiple routers. Recent works on distributed
(cid:2)rewalls [20, 12, 13] and enterprise reachability [18, 5] do consider
combining ACLs across devices. However, the actions are simple,
involving just a permit/deny of (cid:3)ows. With CoS, each router could
be associated with multiple policies (marking, policing, queueing),
each of which could have multiple ACLs corresponding to dif-
ferent classes, and actions could be much more complex, poten-
tially involving packet transformations. Our approach could thus
be viewed as a generalization of modeling simple ACLs.
8. DISCUSSION AND OPEN ISSUES
In this section, we discuss some key aspects of our work, and
open issues:
Scalability of ruleset composition: While our modeling frame-
work allows for the composition of an arbitrary number of rule-
sets, our current tool implementation focuses on con(cid:2)guration of
the CERs and PERs. Thus, relatively few rulesets need to be com-
229posed despite each router may have multiple root rulesets, corre-
sponding to each of the marking, policing and queueing policies.
We believe that this is reasonable in our MPLS VPN settings given
that the CoS policies in the CER and PERs exhibit signi(cid:2)cant het-
erogeneity across customer networks and change frequently over
time, while the CoS policies in the P routers re(cid:3)ect provider poli-
cies, and tend to be homogeneous and stable. That said, one im-
portant question pertains to the scalability of our approach with the
number of rulesets that need to be composed. We believe that the
use of BDDs helps ensure better scaling properties than naive cross-
product techniques, and in the general, the computational complex-
ity would depend on the number of distinct (cid:3)ow treatments, and the
types of (cid:3)ow transformations that may occur. In practice, we ex-
pect the number of distinct (cid:3)ow treatments to be bounded, and the
(cid:3)ow transformations to be relatively simple (such as changing the
ToS byte), which would help contain the complexity. We defer a
more detailed investigation of these issues to the future.
Combining with routing information: In this paper, we focus on
composing rulesets given a set of routers, as well as use forward-
ing table information to determine the appropriate CERs and PERs
for a given (cid:3)ow. An interesting direction for future work involves
automatically determining the entire set of routers on the path, per-
haps through the use of routing table information. Availability of
such information will also enable use of the tool in settings such
as (cid:147)hub-and-spoke(cid:148) VPNs where traf(cid:2)c between two sites may tra-
verse through intermediate PERs and CERs.
Extension to other vendors: Our tool is currently based on Cisco
IOS. An interesting future direction is to extend our approach to
support other vendors such as Juniper and Alcatel. Based on a pre-
liminary inspection of con(cid:2)gurations of these vendors, we believe
a modeling approach such as ours is still important and relevant.
The primary effort in adapting to other vendors involves the devel-
opment of a language-speci(cid:2)c parser that can derive the formal rep-
resentation that we have proposed. One open question is whether
our model is expressive enough to capture all con(cid:2)guration options
of these vendors. In general, we believe that if a con(cid:2)guration lan-
guage uses ACLs to describe matching (cid:3)ows that belong to a traf(cid:2)c
class (as is the case with Cisco IOS), it (cid:2)ts naturally into our model.
Visualizing CoS matrix: While our CoS matrix abstraction can
help identify the set of classes that can be exchanged between ev-
ery pair of VPN sites, a ripe avenue for future work involves devel-
oping better visualization techniques that can compactly show the
CoS design for large-scale VPNs. One simple heuristic that we be-
lieve can signi(cid:2)cantly help involves identifying sites that exchange
exactly the same set of classes with other sites and collapsing them
into a single instance.
9. CONCLUSION
In this paper, we have shown how to model CoS policies from
low-level device con(cid:2)gurations. Our approach centers around rule-
sets, a formal representation of con(cid:2)guration policies. Our repre-
sentation captures CoS policies in a manner independent of con(cid:2)g-
uration syntax, allows the composition of policies across multiple
policy blocks within and across devices, and enables us to deal with
issues such as the transformation of (cid:3)ows across stages.
Based on our model, we have built a tool that can trace the end-
to-end CoS treatments of an arbitrary set of (cid:3)ows. The tool has
computation times in the order of seconds on real datasets and is
conducive for use by operators in an interactive fashion.
Using our tool, we have conducted the (cid:2)rst study on CoS designs
of operational networks and analyzed a cross-section of 150 differ-
ent enterprise VPNs. Our analysis shows that the usage of CoS
is widely prevalent, points to signi(cid:2)cant diversity in CoS designs
across enterprises, and indicates that a large degree of heterogene-
ity exists in terms of how different routers within an enterprise are
con(cid:2)gured.
The results also con(cid:2)rm the importance and effectiveness of our
model in assisting operators to reason about network-wide CoS
operations.
In particular, we have demonstrated the potential of
the tool in extracting all possible (cid:3)ow treatments across a given
set of devices, identifying non-standard and potentially anomalous
(cid:3)ow treatments and shadowed con(cid:2)guration policies, and deriving
network-wide views of CoS designs.
Moving forward, we are interested in leveraging the concept of
rulesets to model other areas of network con(cid:2)guration, extending
our tool to consider other vendor con(cid:2)gurations, and enhancing the
capability of our tool by incorporating models of routing design,
control and data plane reachability, as well as traf(cid:2)c data.
10. ACKNOWLEDGMENTS
We thank everyone who helped make this research possible, in-
cluding Jennifer Rexford for her helpful comments on an earlier
version of the paper. We also thank the anonymous reviewers and
Gianluca Iannaccone, whose suggestions bene(cid:2)ted the (cid:2)nal ver-
sion of the paper. This work was supported by NSF grant CNS-
0721488.
11. REFERENCES
[1] Cisco IP solution center. http://www.cisco.com/en/US/products/
sw/netmgtsw/ps4748/index.html.
[2] DSL forum TR-069. http://www.broadband-forum.org/
technical/download/TR-069.pdf.
[3] Intelliden. http://www.intelliden.com/.
[4] C. Alaettinoglu, C. Villamizar, E. Gerich, D. Kessensand, D. Meyer, T. Bates,
D. Karrenberg, and M. Terpstra. Routing policy speci(cid:2)cation language (RPSL).
RFC 2622, June 1999.
[5] T. Benson, A. Akella, and D. Maltz. Unraveling the complexity of network
management. In Proc. NSDI, 2009.
[6] H. Boehm, A. Feldmann, O. Maennel, C. Reiser, and R. Volk. Network-wide
inter-domain routing policies: Design and realization. In Proc. NANOG 34,
2005.
[7] J. Case, M. Fedor, M. Schoffstall, and J. Davin. A simple network management
protocol (SNMP). RFC 1157, May 1990.
[8] Distributed Management Task Force, Inc. http://www.dmtf.org.
[9] W. Enck, P. McDaniel, S. Sen, P. Sebos, S. Spoerel, A. Greenberg, S. Rao, and
W. Aiello. Con(cid:2)guration management at massive scale: System design and
experience. In Proc. USENIX, 2007.
[10] N. Feamster and H. Balakrishnan. Detecting BGP con(cid:2)guration faults with
static analysis. In Proc. NSDI, 2005.
[11] A. Feldmann and J. Rexford. IP network con(cid:2)guration for intradomain traf(cid:2)c
engineering. In IEEE Network Magazine, Sept. 2001.
[12] H. Hamed and E. Al-Shaer. Anomaly discovery in distributed (cid:2)rewalls. In Proc.
IEEE INFOCOM, 2004.
[13] H. Hamed, E. Al-Shaer, and W. Marrero. Modeling and veri(cid:2)cation of ipsec and
vpn security policies. In Proc. IEEE ICNP, 2005.
[14] S. Hazelhurst, A. Attar, and R. Sinnappan. Algorithms for improving the
dependability of (cid:2)rewall and (cid:2)lter rule lists. In Proc. DSN, 2000.
[15] P. G. Hinman. Fundamentals of Mathematical Logic. A K Peters Ltd, 2005.
[16] F. Le, G. Xie, D. Pei, J. Wang, and H. Zhang. Shedding light on the glue logic
of internet routing architecture. In Proc. ACM SIGCOMM, 2008.
[17] D. Maltz, G. Xie, J. Zhan, H. Zhang, G. Hjalmtysson, and A. Greenberg.
Routing design in operational networks: A look from the inside. In Proc. ACM
SIGCOMM, 2004.
[18] G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, G. Hjalmtysson, and
J. Rexford. On static reachability analysis of IP networks. In Proc. IEEE
INFOCOM, 2005.
[19] L. Yuan, C.-N. Chuah, and P. Mohapatra. Progme: Towards programmable
network measurement. In Proc. ACM SIGCOMM, 2007.
[20] L. Yuan, J. Mai, Z. Su, H. Chen, C.-N. Chuah, and P. Mohapatra. Fireman: A
toolkit for (cid:2)rewall modeling and analysis. In Proc. IEEE Symposium on
Security and Privacy, 2006.
230