mentation achieved a lower performance. The time duration
to derive the second-level key from the ﬁrst-level key is the
same at source and destination TP, and it amounts to 104 ns.
Since the ﬁrst-level key also requires a time validity check, the
second-level key derivation is slightly faster. We observe that
for pratical network sizes, the key derivations can be achieved
in less than 300 ns with unoptimized code.
Authentication. The additional processing time for packet
encryption and decryption is shown in Table III. In summary,
it requires approximately 1.5 to 2.5 µs to authenticate various
sizes of packets. We note that the processing overhead occurs
for all the tunneling technologies that provide conﬁdentiality
for data transmission. The processing time can be minimized
with implementations using the Data Plane Development Kit
(DPDK) [13] or by leveraging hardware dedicated to crypto-
graphic operations.
B. Network Benchmarks
So far, we evaluated the performance of MONDRIAN oper-
ations. Since a different set of operations needs to be applied
depending on the zone transition usecase, it is also important
to investigate the overall network performance for handling
different types of zone transition packets. We now benchmark
the actual network performance for both intra-/inter-domain
zone transition cases.
Latency Inﬂation. Figure 6 illustrates the network benchmark
results for the intra-domain zone transition where the source
and destination zones are within the same local network,
such that the TP only performs zone transition authorization.
Fig. 5: MONDRIAN packet format for secure tunneling.
new source and destination. The original packet is encrypted
and then authenticated along with the new packet header ﬁelds.
Figure 5 shows the detailed packet structure and coverage of
the conﬁdentiality and integrity mechanisms.
The authentication token starts with one byte of reserved
space for a Type ﬁeld. While currently unused this will be
useful in the future for distinguishing variations of the authen-
tication token. ZoneID depicts the 3 byte long zone identiﬁer
of the destination zone. It is used by the receiving TP to derive
the correct key for MAC veriﬁcation and decryption. The next
4 bytes are occupied by a TimeStamp which is added by the
sending TP. It is the Unix time (unsigned 32-bit time_t)
at the point of sending the packet. The receiving TP uses
this timestamp to reject replayed packets. A Nonce (12 bytes)
follows the timestamp.
The nonce as well as the previous three token ﬁelds and
the data to be encrypted (EIP) serve as input to a Galois
Counter Mode (GCM) algorithm with an underlying AES-
128 block cipher as cryptographic primitive. This mode of
operation is widely adopted for its performance and to achieve
authenticated encryption with associated data (AEAD). Here
it provides authenticity over the header ﬁelds (Type, ZoneID,
TimeStamp) and the data in EIP while EIP additionally also
gets encrypted. The 16 byte MAC generated by GCM is the
last ﬁeld in the authentication token. Both the nonce and the
MAC sizes follow the guidelines recommended by NIST SP
800-38D [14].
VI. EVALUATION
A. System Benchmarks
We ﬁrst conduct microbenchmark tests to evaluate the
performance of TP including the key derivation, packet au-
thentication, and authorization. For reproducible evaluation,
we leverage the standard benchmark library testing ofﬁ-
cially supported by golang. The benchmarks are conducted on
commodity machines equipped with an Intel i7 2.9 GHz CPU,
16 GB memory, and a 1 GbE NIC.
Authorization. From a technical perspective, the zone transi-
tion authorization is a database lookup consisting of three tree
searches; upon receiving the packet metadata from the core
module, the transition module ﬁrst looks up the corresponding
zone identiﬁers for the source and destination addresses, and
9
0832Type (Reserved)ZoneIDTimeStampNonceMACL2 header        L3 header (SCION)              AT                                          EIPEncryption scopeAuthentication scopeTABLE I: Benchmark results for the zone
transition policy lookup (ns).
TABLE II: Key derivation times for dif-
ferent network sizes (ns).
TABLE III: Processing times for the en-
cryption/decryption (ns).
# of Policies
100
1 K
10 K
100 K
Valid
307
405
423
497
Invalid
# of Keys
1st key (src)
1st key (dst)
2nd key
Packet Size (byte)
Encryption
Decryption
236
264
293
375
100
1 K
10 K
100 K
154
155
161
157
188
188
197
188
104
104
103
104
64
512
1024
1500
801
1006
1279
1557
623
701
796
950
Fig. 6: Processing time for intra-domain
zone transition.
Fig. 7: Processing time on T PS for inter-
domain zone transition.
Fig. 8: Processing time on T PR for inter-
domain zone transition.
Since no cryptographic operations are involved, the additional
latency is negligible (as a legitimate zone transition takes
300 ns to 450 ns). There might be an authorization abort due
to a lookup failure that could be caused by the following
three reasons: no source zone ID, destination zone ID, or zone
transition policy. In our prototype, the lookups are performed
sequentially and thus there are different processing overheads
(100 ns to 600 ns) depending on when a lookup failure occurs.
Nevertheless, if there exists no valid zone transition policy,
the packet will be simply dropped and therefore no additional
latency is caused.
For inter-domain zone transition cases, we benchmark
the overall network latency increase during TP operations
including packet parsing, key derivation, authorization, and au-
thentication. Figures 7 and 8 depict the processing delay from
sender-side TP and receiver-side TP, respectively. From the
results, we make the following observations: ﬁrst, the overall
latency inﬂation that MONDRIAN introduces is insigniﬁcant
(∼ 3 µs). Second, MONDRIAN scales well with the size of
the network, i.e., the number of branches. We do not see
any notable performance degradation (≤ 200 ns) for realistic
values. Third, the size of a packet is the primary factor for
the latency increase as expected for all data-plane devices.
The packet size has a small latency increase factor of 1.28
(i.e, 2.4 µs to 3.8 µs). Lastly, we observe no signiﬁcant bias in
network performance between sender- and receiver-side TPs.
Forwarding Performance. We further investigate the actual
forwarding performance for various packet sizes including a
representative mixture of Internet trafﬁc (iMIX) [43], [60].
Figure 9 shows the results. The baseline is the forwarding
performance without TP operations. The other bars represent
the forwarding performance for intra-domain zone transition
(with authorization only) and inter-domain zone transition
(with authorization and authentication) respectively.
For 64-byte packets which demonstrates the highest packet
rate, and thus requiring the most extreme packet processing,
the intra-domain zone transition exhibits a throughput degra-
dation of only 9 %. It also achieves 96 to 100 % of throughput
for other packet sizes. These results are expected because
the TP performs only authorization for the intra-domain zone
transition packets, which would increase the processing delay
by less than 500 ns; considering that a typical intra-domain
packet transmission incurs a few milliseconds of latency, the
additional delay is negligible.
On the other hand, the inter-domain zone transition de-
grades the throughput by 30 % for the smallest packets. Al-
though the degradation diminishes as the packet size increases,
the performance still degrades by 28 % for iMIX trafﬁc. To in-
vestigate the main degradation factor, we compare the amount
of transmitted data (goodput) and the total bits transmitted
including all the network headers (throughputs) as shown in
Figures 10 and 11. From the comparison, we observe the
following: i) the inter-domain zone transition achieves a similar
throughput to the baseline if the extra headers are considered,
ii) the performance degradation is caused by not only the
additional processing delay but also transmission delay of the
extra headers, and therefore iii) MONDRIAN performs similar
to today’s tunneling applications while providing the security
policy enforcement for network zoning.
C. Comparison to the Current Practice
We ﬁnally compare MONDRIAN with IPsec (ESP-tunnel
mode) to demonstrate its space and time overhead. Table IV
shows the comparison results.
Time Overhead. We estimate the processing time of crypto-
graphic operations for 64 to 1024-byte packets. For fairness,
we consider the same cipher suite for both approaches, along
with the same size of the cryptographic key (i.e., 128-bit
AES-GCM). Note that the performance of the cryptographic
operations are empowered by AES New Instructions (AES-
NI [57]), a hardware acceleration technology integrated into
many processors nowadays. We make the following observa-
tions: ﬁrst, MONDRIAN is 68 to 287 ns slower than IPsec
in encryption and decryption. Second, with respect
to the
packet size increase, IPsec shows a signiﬁcant increase in
10
 0 100 200 300 400 500 6001001K10K100KProcessing Time (ns)Number of PoliciesValidInvalid (Src. Zone)Invalid (Dst. Zone)Invalid (Policy) 0 500 1000 1500 2000 2500 3000 3500 40001001K10K100KProcessing Time (ns)Number of Branches64 B128 B256 B512 B1024 B1500 B 0 500 1000 1500 2000 2500 3000 3500 40001001K10K100KProcessing Time (ns)Number of Branches64 B128 B256 B512 B1024 B1500 BFig. 9: Forwarding performance of TP for
various size of packets.
Fig. 10: CDF of goodput for 1400-bytes
of maximum segment size (MSS).
Fig. 11: CDF of throughput
extra header ﬁelds.
including
TABLE IV: Time and space complexity in comparison. n
denotes the number of TPs and m represents the number of
zones, where m ≥ n.
Cipher Operation (64 ∼ 1024 Byte)
Decryption (ns)
Encryption (ns)
142 ∼ 513
114 ∼ 395
46 ∼ 213
46 ∼ 226
Extra Header
(Byte)
56
58
Memory
(Byte)
16 × n2
16 × m2
MONDRIAN
IPSec
the processing time,
i.e., up to 400 %, while MONDRIAN
shows an increase of 200 %. This is a reasonable performance
considering that our current implementation relies on an open-
source cryptography library.
Space Overhead. IPsec ESP-tunnel mode requires a minimum
of 58 bytes of extra headers, including 20 bytes of an outer
IP header and 38 bytes of ESP header, while MONDRIAN
introduces 56 bytes of extra headers (i.e., 20 bytes of an outer
IP header and 36 bytes of AT header) for tunneling. Since both
mechanisms could have additional padding depending on the
size of the original payload, the bandwidth overhead is hardly
distinguishable. In contrast, we notice a signiﬁcant disparity in
memory requirments. To establish secure channels between m
zones, IPsec requires a total of m2 keys, whereas MONDRIAN
only needs n2 keys where n represents the number of TPs. As
typically m (cid:29) n, MONDRIAN outperforms IPsec in real-world
networks.
VII. SECURITY ANALYSIS
We analyze the security properties that MONDRIAN pro-
vides, considering the threat model introduced in §III-C. The
attack classes described here are twofold: i) attacks to inﬁltrate
restricted zones without a proper permission, and ii) disruption
attacks that prevent availability.
A. Inﬁltration without a Permission
Man-In-The-Middle Attack. To interpose “in the middle”,
an attacker could initiate independent communication channels
with two TPs and relay messages between them. By using
the attacker’s public key for the channel establishment, the
attacker may attempt to generate valid packets to bypass the
TP’s authentication check.
MONDRIAN’s PKI design prevents such MITM attacks. A
MITM attack can succeed only if the attacker convinces each
TP that they are talking to each other. In the process of secure
channel establishment, however, TPs authenticate each other
using the certiﬁcates issued by the mutually trusted CA (e.g.,
enterprise). Since the attacker’s public key cannot be certiﬁed
by a valid certiﬁcate issued by the CA, a MITM will fail.
Packet Replay. Attackers can observe valid MONDRIAN pack-
ets and then attempt to reuse them to transmit attack trafﬁc.
Nevertheless, the validity of the reused packet header will be
lost once the payload is changed—recall that the authentication
scope covers the entire packet including AT and EIP as shown
in Figure 5—and therefore attackers cannot successfully pass
the authentication check at the recipient TP.
Brute-force Attack. Finally, the attacker could attempt to
brute-force the key used for authentication or the MAC. As we
are using 128-bit cryptographic keys and MACs, such attacks
are currently infeasible. To achieve resilience to quantum
computers, the key size would need to be doubled, however.
B. Denial-of-Service Attacks
Exhaustion Attack. In principle, ﬂooding the TP’s authen-
tication process could be an effective attack vector. Attackers
may attempt to forward a large number of packets to the target
TP in order to exhaust the TP’s resources. Even if the attack
packets contain invalid authentication tokens, the TP still needs
to verify these tokens, therefore wasting resources, preventing
legitimate packets from getting through.
To be resilient
to such attacks, we suggest operating
multiple TPs at
the entry points of cooperative networks.
Multiple TPs enable network operators to load balance and
switch over to another TP in case of a link (or a TP)
failure (see §VIII-D). In fact, many data centers and large
enterprise networks already employ equal-cost multipathing
(ECMP) [65], [25] along with multiple gateways and ToRs
(Top-of-Rack switches) to provide reliable intra-networking
services. In addition, to mitigate possible DoS attacks from
the public Internet, Microsoft implemented a global ECMP
infrastructure [42]. Path-aware networking along with multi-
path communication also enables active switching to different
entry points, if some fail or are under DDoS attack. [11], [66].
VIII. PRACTICAL CONSIDERATIONS
In this section, we discuss some practical considerations
including functional and management aspects, along with
various deployment scenarios describing how MONDRIAN can
be realized on today’s enterprise infrastructure.
11