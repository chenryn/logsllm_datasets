×
×
File change
monitoring
Process
monitoring
(cid:2)
×
(cid:2)
×
×
×
(cid:2)
(cid:2)
(cid:2)
×
(cid:2)
×
Recovery of
decryption
key
Recovery
of ﬁles
(cid:2)(partial) (cid:2)(partial)
×
×
(cid:2)
×
(cid:2)(partial) (cid:2)(partial)
×
×
×
(cid:2)
6 Discussion and Limitations
Novelty. To the best of our knowledge, RWGuard with the decoy technique is
the ﬁrst system with very fast real-time (few milliseconds) detection capabilities.
Even without the decoy deployment, the other monitoring modules are able to
minimize the damage by identifying the ransomware processes at the time of
their I/O requests. An average of 538 I/O write requests within the average
detection time of 3.45 s shows how rapidly a ransomware attempts to encrypt
the user’s ﬁles while RWGuard exploits this property to terminate the ransomware
at an early stage. Also, whereas the existing approaches are unable to distinguish
benign ﬁle changes from malicious ones, the FCls module along with the CFHk
module is able to overcome such false positives.
Inevitability. Our robust decoy design makes it impossible for the ransomware
to recognize a decoy ﬁle by any of its properties. The ransomware would need
to install some spyware and monitor the ﬁle activities in the system in order
to determine which ones are modiﬁed by the end-users and applications and
which are executed by our decoy tool. Moreover, obfuscation techniques can be
used to make diﬃcult for the ransomware to analyze the applications in order to
determine which application is the decoy generator. Our integrated monitoring
modules, PMon and FCMon, employ scrutiny on metrics that are inclusive of
any malicious activity by the ransomware. For example, a smart ransomware
that encrypts ﬁles slowly would still be detected by the FCMon module. While
the monitoring modules DMon, PMon, and FCMon do not let a ransomware
activity remain undetected (i.e., they prevent false negatives), the FCls and
CFHk modules distinguish benign ﬁle operations from malicious ones (i.e., they
prevent false positives). Hence, we argue that independently of the intelligence of
modern ransomware, RWGuard raises the evasion bar for ransomware signiﬁcantly.
File Recovery. Note that, the CFHk module monitors all (benign and ran-
somware) ﬁle encryption that leverage ‘CryptoAPI’ functions. Therefore, if a
ransomware leveraging CryptoAPI library (3 of the 14 ransomware families that
we have analyzed use this library) becomes successful in encrypting a set of
A Real-time Detection System Against Cryptographic Ransomware
133
ﬁles before our early detection, using the hooking mechanism, we can retrieve
the parameters (including the decryption keys) of those speciﬁc cryptographic
function calls and consequently restore the encrypted ﬁles. Our experiments
(Sect. 5.4) show that the CFHk module is able to recover the ﬁles encrypted
by the 3 ransomware families with a 100% success rate. The rest of the ran-
somware samples experimented in our evaluation did not use CryptoAPI but
their custom-written cryptographic library. Moreover, code obfuscation is a com-
mon technique used by the modern ransomware families. Obfuscation strategies,
such as incremental packing and unpacking, make it more diﬃcult to identify
cryptographic primitives in the ransomware binary. While there are techniques
(e.g., [31]) that look for cryptographic operations in the process memory, we have
not incorporated those in our system due to their huge performance overhead.
Limitations. While the DMon module is quick in identifying a malicious pro-
cess, the PMon and FCMon modules are anomaly based and hence probabilis-
tically bound to miss some of the malicious activity. Also, these modules are
based on the logging of IRP calls and ﬁle activity. The time lag between logging
these activities and parsing them for anomalies provide a small window for the
ransomware to perform its malicious activities as discussed in Sect. 5.3.
7 Related Work
Detection Techniques. Kharraz et al. [13–15] propose systems that monitor
the I/O request patterns of applications for signs of ransomware-like behaviors.
Scaife et al. [26] have designed CryptoDrop, a system that alerts users during sus-
picious ﬁle activity, e.g., tampering with a large amount of the user’s data. Sgan-
durra et al. [27] propose EldeRan, a machine learning approach that monitors
actions performed by applications in their ﬁrst phases of installation and checks
for characteristics signs of ransomware. Lee et al. [18] propose a ransomware
prevention mechanism based on abnormal behavior analysis in a cloud system.
Cabaj et al. [4] present a software-deﬁned networking (SDN) based detection
approach that utilizes the characteristics of ransomware communication. Andro-
nio et al. [1] propose a technique to detect Android ransomware that applies
to only mobile platforms- where applications are analyzed in-depth before they
are released in any app market. Huang et al. [9] propose a measurement frame-
work for end-to-end of ransomware payments. In contrast, RWGuard is the fastest
solution that identiﬁes ransomware infection in real-time with decoy techniques,
prevents malicious processes from making changes to the ﬁles, and also deter-
mines the original intent of ﬁle changes.
Post-encryption Techniques. Kolodenker et al. [16] propose a system, called
PayBreak, that intercepts system provided crypto functions, collects and stores
the keys, and thus, can decrypt ﬁles only for the ransomware families that use
system provided crypto functions. Continella et al. [6] propose the ShieldFS tool
that monitors low-level ﬁle system activity to model the system over time. When-
ever a process violates these models, the aﬀected ﬁles are transparently rolled
134
S. Mehnaz et al.
back. However, it requires shadowing a ﬁle whenever it is modiﬁed and thus
incurs high overhead. FlashGuard, a system developed by Huang et al. [10] lever-
ages the fact that SSD performs out-of-place writes and thus holds the invalid
pages for up to 20 days to perform data recovery after ransomware encryption.
However, this type of recovery methods conﬂict with the idea of secure deletion
and may result in privacy issues and data leakage. Given the limitations of the
existing post-encryption recovery techniques, it is of uttermost importance that
faster detection techniques be developed against ransomware.
Decoy Techniques. Decoy techniques have been previously proposed to defend
against insider threats [2]. Though some research work [15,19] recommends using
decoy ﬁles for detecting ransomware, such previous work does not include any
analysis on the eﬀectiveness of the decoy ﬁles. Randomly generated decoy ﬁles
in commercial solutions (e.g., [7]) are susceptible of detection by sophisticated
ransomware. Moreover, unlike RWGuard, their decoy ﬁles are deployed during the
installation process which simply leaves the ﬁles unmodiﬁed for a long time and
thus makes these ﬁles less interesting for the ransomware. Also, it is not clear how
these solutions would handle special ransomware families, e.g., Mamba, Petya,
and Matsnu, that aﬀect only a predeﬁned list of system ﬁles.
Cryptographic Primitives Identiﬁcation Techniques. Discovering crypto-
graphic primitives in a given binary is another research direction where crypto-
ransomware including cryptographic operations could be identiﬁed before-
hand [5,31]. Calvet et al. [5] developed such a technique and evaluated the
performance of their system on a set of known malware samples. Lestringant
et al. [20]’s approach to obtaining the similar goal leverages graph isomorphism
techniques. Although these approaches could identify cryptographic primitives
in obfuscated programs, their poor performance makes them impractical for real-
time defense even with the most recent work [31] resulting in a 5-6X slowdown
in average.
8 Conclusions and Future Work
In this paper, we introduce RWGuard that detects crypto-ransomware on a user’s
machine in real-time while removing the false positives due to the user’s benign
ﬁle operations. We evaluate RWGuard against 14 most prevalent ransomware fam-
ilies. Our experiments show that RWGuard is eﬀective in early detection of ran-
somware with only negligible false positives (∼0.1%) and zero false negatives
while incurring an overhead of only ∼1.9%. Furthermore, RWGuard recovers all
ﬁles that are encrypted using CryptoAPI by the corresponding ransomware. As
part of the future work, we plan to proﬁle other existing encryption libraries
and in real-time scan the process’s memory for similar operations so that we can
recover the keys used for encryption and restore the ﬁles. Moreover, we plan to
take snapshots of the ransomware processes’ memories before terminating the
processes and analyze those for traces of encryption/decryption keys.
A Real-time Detection System Against Cryptographic Ransomware
135
Acknowledgement. We thank our shepherd, Alina Oprea, and the anonymous
reviewers for their valuable suggestions. The work reported in this paper has been
supported by the Schlumberger Foundation under the Faculty For The Future (FFTF)
Fellowship.
References
1. Andronio, N., Zanero, S., Maggi, F.: HelDroid: dissecting and detecting mobile
ransomware. In: Bos, H., Monrose, F., Blanc, G. (eds.) RAID 2015. LNCS, vol.
9404, pp. 382–404. Springer, Cham (2015). https://doi.org/10.1007/978-3-319-
26362-5 18
2. Bowen, B.M., Hershkop, S., Keromytis, A.D., Stolfo, S.J.: Baiting inside attackers
using decoy documents. In: Chen, Y., Dimitriou, T.D., Zhou, J. (eds.) SecureComm
2009. LNICST, vol. 19, pp. 51–70. Springer, Heidelberg (2009). https://doi.org/
10.1007/978-3-642-05284-2 4
3. Breiman, L.: Random forests. Mach. Learn. 45(1), 5–32 (2001). https://doi.org/
10.1023/A:1010933404324
4. Cabaj, K., Gregorczyk, M., Mazurczyk, W.: Software-deﬁned networking-
based crypto ransomware detection using HTTP traﬃc characteristics. CoRR
abs/1611.08294 (2016)
5. Calvet, J., Fernandez, J.M., Marion, J.Y.: Aligot: cryptographic function identiﬁ-
cation in obfuscated binary programs. In: Proceedings of the 2012 ACM Conference
on Computer and Communications Security, pp. 169–182. ACM, New York (2012).
https://doi.org/10.1145/2382196.2382217
6. Continella, A., et al.: ShieldFS: a self-healing, ransomware-aware ﬁlesystem. In:
Proceedings of the 32nd Annual Conference on Computer Security Applications,
ACSAC 2016, pp. 336–347. ACM, New York (2016). https://doi.org/10.1145/
2991079.2991110
7. CryptoStopper: www.watchpointdata.com/cryptostopper/
8. Fox-Brewster, T.: Petya or notpetya: why the latest ransomware is deadlier than
wannacry. FORBES, June 2017. https://www.forbes.com/sites/thomasbrewster/
2017/06/27/petya-notpetya-ransomware-is-more-powerful-than-wannacry
9. Huang, D.Y., et al.: Tracking ransomware end-to-end. In: Proceedings of the 2018
IEEE Conference on Security and Privacy, SP 2018 (2018)
10. Huang, J., Xu, J., Xing, X., Liu, P., Qureshi, M.K.: Flashguard: leveraging intrinsic
ﬂash properties to defend against encryption ransomware. In: Proceedings of the
2017 ACM SIGSAC Conference on Computer and Communications Security, CCS
2017, pp. 2231–2244. ACM, New York (2017)
11. Microsoft Inc.: File system miniﬁlter drivers, May 2014. https://msdn.microsoft.
com/en-us/library/windows/hardware/ﬀ540402(v=vs.85).aspx
12. Jayanthi, A.: First known ransomware attack in 1989 also targeted healthcare.
Beckers Hospital Review, May 2016. http://www.beckershospitalreview.com/
healthcare-information-technology/ﬁrst-known-ransomware-attack-in-1989-also-
targeted-healthcare.html
13. Kharaz, A., Arshad, S., Mulliner, C., Robertson, W., Kirda, E.: Unveil: a large-
scale, automated approach to detecting ransomware. In: 25th USENIX Security
Symposium (USENIX Security 2016), pp. 757–772. USENIX Association, Austin
(2016)
136
S. Mehnaz et al.
14. Kharraz, A., Kirda, E.: Redemption: real-time protection against ransomware at
end-hosts. In: Dacier, M., Bailey, M., Polychronakis, M., Antonakakis, M. (eds.)
Research in Attacks, Intrusions, and Defenses. LNCS, pp. 98–119. Springer, Cham
(2017). https://doi.org/10.1007/978-3-319-66332-6 5
15. Kharraz, A., Robertson, W., Balzarotti, D., Bilge, L., Kirda, E.: Cutting the gor-
dian knot: a look under the hood of ransomware attacks. In: Almgren, M., Gulisano,
V., Maggi, F. (eds.) DIMVA 2015. LNCS, vol. 9148, pp. 3–24. Springer, Cham
(2015). https://doi.org/10.1007/978-3-319-20550-2 1
16. Kolodenker, E., Koch, W., Stringhini, G., Egele, M.: Paybreak: defense against
cryptographic ransomware. In: Proceedings of the 2017 ACM on Asia Conference
on Computer and Communications Security, ASIA CCS, pp. 599–611. ACM, New
York (2017). https://doi.org/10.1145/3052973.3053035
17. Kryptel: https://www.kryptel.com/products/kryptel.php
18. Lee, J.K., Moon, S.Y., Park, J.H.: CloudRPS: a cloud analysis based enhanced
ransomware prevention system. J. Supercomput. 73(7), 3065–3084 (2017). https://
doi.org/10.1145/3052973.3053035
19. Lee, J., Lee, J., Hong, J.: How to make eﬃcient decoy ﬁles for ransomware detec-
tion? In: Proceedings of the International Conference on Research in Adaptive and
Convergent Systems, pp. 208–212. ACM, New York (2017)
20. Lestringant, P., Guih´ery, F., Fouque, P.A.: Automated identiﬁcation of crypto-
graphic primitives in binary code with data ﬂow graph isomorphism. In: Proceed-
ings of the 10th ACM Symposium on Information, Computer and Communications
Security, ASIA CCS, pp. 203–214. ACM, New York (2015). https://doi.org/10.
1145/2714576.2714639
21. Lin, J.: Divergence measures based on the shannon entropy. IEEE Trans. Inf.
Theor. 37(1), 145–151 (2006). https://doi.org/10.1109/18.61115
22. Malc0de: http://malc0de.com/rss
23. Malware, O.: http://openmalware.org
24. Quinlan, J.R.: C4.5: Programs for Machine Learning. Morgan Kaufmann Publish-
ers Inc. (1993)
25. Roussev, V.: Data ﬁngerprinting with similarity digests. In: Chow, K.-P., Shenoi,
S. (eds.) DigitalForensics 2010. IAICT, vol. 337, pp. 207–226. Springer, Heidelberg
(2010). https://doi.org/10.1007/978-3-642-15506-2 15
26. Scaife, N., Carter, H., Traynor, P., Butler, K.R.B.: Cryptolock (and drop it): stop-
ping ransomware attacks on user data. In: 2016 IEEE 36th International Con-
ference on Distributed Computing Systems (ICDCS), pp. 303–312, June 2016.
https://doi.org/10.1109/ICDCS.2016.46
27. Sgandurra, D., Mu˜noz-Gonz´alez, L., Mohsen, R., Lupu, E.C.: Automated dynamic
analysis of ransomware: beneﬁts. Limitations and use for detection, ArXiv e-prints,
September 2016
28. VirusTotal: https://www.virustotal.com
29. VXVault: http://vxvault.siri-urz.net/URL List.php
30. Wong, J.C., Solon, O.: Massive ransomware cyber-attack hits nearly 100 countries
around the world. Theguardian, May. https://www.theguardian.com/technology/
2017/may/12/global-cyber-attack-ransomware-nsa-uk-nhs
31. Xu, D., Ming, J., Wu, D.: Cryptographic function detection in obfuscated binaries
via bit-precise symbolic loop mapping. In: Proceedings 2017 IEEE Symposium on
Security and Privacy, pp. 129–140, May 2017
32. Zelster: https://zeltser.com/malware-sample-sources/