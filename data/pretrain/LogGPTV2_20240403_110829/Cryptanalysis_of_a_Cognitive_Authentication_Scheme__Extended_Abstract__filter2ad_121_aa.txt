title:Cryptanalysis of a Cognitive Authentication Scheme (Extended Abstract)
author:Philippe Golle and
David A. Wagner
Cryptanalysis of a Cognitive Authentication Scheme
(Extended Abstract)
Philippe Golle
David Wagner
Palo Alto Research Center
University of California, Berkeley
PI:EMAIL
PI:EMAIL
Abstract
We present attacks against two cognitive authentication
schemes [9] proposed at the 2006 IEEE Symposium on Se-
curity and Privacy. These authentication schemes are de-
signed to be secure against eavesdropping attacks while re-
lying only on human cognitive skills. They achieve authen-
tication via challenge response protocols based on a shared
secret set of pictures. Our attacks use a SAT solver to re-
cover a user’s secret key in a few seconds, after observ-
ing only a small number of successful logins. These attacks
demonstrate that the authentication schemes of [9] are not
secure against an eavesdropping adversary.
1
Introduction
Consider a user who wants to establish a secure authen-
ticated connection to a server from an untrusted client. For
example, the user may be logging into her bank account
from an Internet caf´e. The password schemes traditionally
used for authentication are insecure in this case, because the
untrusted client can record the user’s password, and use it
to later impersonate the user. This threat must be taken se-
riously, given the spread of key-loggers and other spyware
on users’ machines.
To defend against this threat, [9] proposes new authen-
tication schemes that are designed to be secure against
eavesdropping attacks (these authentication schemes are de-
scribed in more detail in a technical report [10]). The eaves-
dropping adversary is assumed capable of observing all user
input and all communication between the client and the
server. A further distinctive advantage of the schemes of [9]
is that they rely only on human cognitive abilities. Users can
engage unaided in the authentication protocol. Authentica-
tion is achieved via challenge response protocols based on
a shared secret set of pictures.
In this paper, we show that the new cognitive authen-
tication schemes of [9] are insecure against eavesdropping
attacks. Assuming a passive eavesdropping adversary, we
propose attacks that recover a user’s key in a few seconds,
after observing only a small number of successful logins.
The crux of our attacks is the observation that every user’s
response to an authentication challenge allows the adver-
sary to learn a boolean relationship between the bits of the
user’s secret key. These boolean relationships can easily be
expressed in disjunctive normal form. With enough rela-
tionships, a SAT solver quickly recovers the user’s key.
We demonstrate our attacks against the schemes exactly
as deﬁned in [9]. We also show that our attacks work against
variants of the schemes with larger parameters. This sug-
gests that these schemes and their variants are fundamen-
tally vulnerable to attacks based on SAT solvers. We are
not hopeful that a secure variant of these schemes can be
designed.
Organization. We start in section 2 with an overview of
the cognitive authentication protocol of [9]. We then pro-
pose attacks against two versions of this protocol: the high
complexity version (section 3) and the low complexity ver-
sion (section 4). We discuss related work in section 5.
2 Cognitive Authentication Protocol
The cognitive authentication scheme of [9] uses a set B
of public pictures. We let N = |B| denote the size of this
set. The secret authentication key of a user is a secret sub-
set F ⊂ B of size M < N. The authentication protocol
consists of a number of challenge response rounds. The
number of rounds in the protocol is adjustable depending
on the level of security desired (more rounds lower the suc-
cess probability of a guessing adversary). In each round,
the user must answer a query about the subset F. The exact
nature of the query depends on the version of the protocol
considered. In [9], two versions are proposed: a high com-
plexity version, and a low complexity version (we present
attacks against both versions of the protocol in sections 3
and 4.) Authentication succeeds if the user supplies correct
replies to all challenge queries.
3 High Complexity Protocol
In this version of the protocol, the user is presented in
each round with n < N pictures selected randomly from
B. These n pictures are displayed in random order in a rect-
angular panel of R rows and C columns. Furthermore, an
integer in the range [0; P − 1] is associated with each col-
umn and each row of the panel. We denote vr the integer
associated with row r and wc the integer associated with
column c. An example of such a panel is given in Figure 1.
P44
P46
P13
P36
0
P31
P24
P16
P58
1
P1
P21
P79
P76
0
P26
P77
P38
P15
3
P66
P43
P59
P53
1
2
3
0
2
Figure 1. An example of a high complexity
panel query. This 4-by-5 panel consists of
n = 20 pictures drawn at random from a set
of N = 80 pictures. The numbers shown
along the bottom and right edges of the panel
are the values wc and vr associated with the
columns and rows of the panel.
In this ex-
ample, the numbers are chosen in the range
[0; 3], i.e. P = 4.
Given such a panel as a challenge, the user is asked to
follow a mental path through the panel as follows. Starting
from the top left corner, the user moves down whenever the
current cell contains a picture that belongs to her secret set
F, and moves right whenever the current cell contains a
picture in B −F. This path eventually exits the panel either
through the bottom or the right edge of the panel. If the path
exits the panel through the bottom edge, the user reports the
value wc associated with the exit column. If the path exits
the panel through the right edge, the user reports the value
vr associated with the exit row.
Numerical parameters. The implementation described
in [9] proposes the following parameters. The set B of pub-
lic images is of size N = 80. A user’s key consists of a
secret subset of M = 30 images. In each challenge query,
all pictures are displayed (n = N = 80) in a panel of R = 8
rows and C = 10 columns. The values vr and wc are cho-
sen in the range [0; 3], in such a way that users’ replies to
queries are approximately uniformly distributed in the range
[0; 3]. Each run of the authentication protocol consists of 11
rounds of challenge-response.
We demonstrate our attack ﬁrst with this exact set of pa-
In particular, we use the values vr and wc de-
rameters.
ﬁned in Figure 1 on page 3 of [9]. Our attacks are however
not sensitive to this particular choice of parameters, and we
show that they work against variants of the scheme with
much larger parameters.
3.1 Attack
We propose an attack that recovers the secret key of a
user after observing the user’s replies to a few authentica-
tion challenges. Let F denote the secret set of pictures cho-
sen by the user under attack. We deﬁne N boolean variables
A1, . . . , AN associated with the N pictures in the public set
B. Let Ai = 1 if the i-th picture belongs to the set F and
otherwise Ai = 0. We denote Ai the negation of variable
Ai. Note that recovering the user’s key is equivalent to de-
termining the values of A1, . . . , AN .
Boolean variables. Each challenge-response round of the
authentication protocol reveals information about the user’s
key, and thus about the variables A1, . . . , AN . To capture
this information fully, we need to deﬁne the following addi-
tional boolean variables in every round:
(r,c) = 0 otherwise.
• For 1 ≤ r ≤ R and 1 ≤ c ≤ C, we introduce a
boolean variable Bk
(r,c) associated with the cell in row
r and column c of the panel submitted to the user in
round k. We deﬁne Bk
(r,c) = 1 if the path computed
by the user in round k passes through cell (r, c), and
Bk
• For 1 ≤ r ≤ R, we introduce a boolean variable
Bk
(r,C+1) = 1 if the path com-
puted by the user exits the panel on the right in row r,
and Bk
• For 1 ≤ c ≤ C, we introduce a boolean variable
Bk
(R+1,c) = 1 if the path com-
puted by the user exits the panel at the bottom in col-
umn c, and Bk
(r,C+1), and deﬁne Bk
(R+1,c), and deﬁne Bk
(r,C+1) = 0 otherwise.
(R+1,c) = 0 otherwise.
Boolean formulas. Given the user’s replies to the panel
queries, we learn the following boolean formulas between
the variables A1, . . . , AN and Bk
(r,c). First, we know that in
every round the path computed by the user starts in the top
left corner of the panel:
(1,1) = 1 ∀ k
Bk
Let f(k, r, c) denote the index of the picture in the cell at
row r, column c, of the panel submitted to the user in round
k. The following formulas express the rules that the user
follows to compute a path through the panel. The ﬁrst rule is
that the user moves down whenever the current cell contains
a picture that belongs to the secret set F:
(cid:2) ⇒ Bk
Af (k,r,c) ∧ Bk
(cid:1)
(r+1,c)
∀ k, ∀ r ∈ {1, . . . , R} and ∀ c ∈ {1, . . . , C}
(r,c)
Authentication protocol parameters
Panel size
8 by 10
8 by 10
8 by 10
8 by 10
N
80
80
120
120
M
30
30
45
45
P
4
4
4
2
Attack complexity
# Rounds
60
100
500
1000
Time (seconds)
102
7
45
≈ 960
Table 1. Cost of our attack against high complexity authentication, for various protocol parameters.
The second rule is that the user moves right whenever the
current cell contains a picture in B − F:
(cid:2) ⇒ Bk
Af (k,r,c) ∧ Bk
(cid:1)
(r,c+1)
∀ k, ∀ r ∈ {1, . . . , R} and ∀ c ∈ {1, . . . , C}
(r,c)
Finally, let pk ∈ {0, . . . , P − 1} denote the reply submitted
by the user in round k. The following rules express the
constraints on the path imposed by the user’s reply. First,
the path cannot end in row r if vr (cid:8)= pk, nor in column c if
wc (cid:8)= pk:
(r,C+1) ∀ r such that vr (cid:8)= pk
(R+1,c) ∀ c such that wc (cid:8)= pk
Bk
Bk
Secondly, the path must end in a row r for which vr = pk
or a column c for which wc = pk:
(cid:5)
Bk
(R+1,c)
(cid:3) (cid:4)
r | vr=pk
Bk
(r,C+1)
(cid:3) (cid:4)
(cid:5)