exist on a given IP or what other domains are owned by the same person.
3.2.1
Discovery Services
Thankfully, a number of great new web services are available that can dig even
deeper. The CentrolOps.net and DigitalPoint.com web sites provide a number
of useful services for network discovery. CentralOps.net provides a ”Domain
Dossier” service which combines the various DNS and Whois requests into sin-
gle report, with the option to perform a quick port scan as well. The Digital-
Point.com tools section provides a zone transfer tool, allowing you to gather
information without allowing the target to see your real source address.
The DomainTools.com web site provides a number of great features, but the
”Reverse IP” utility is by far the most valuable.
This utility accepts an IP
address or host name as an input and provides a list of all domains that reverse
back to that IP. Unfortunately, the full result set is only available to members,
but a trial account is available for free. The ”Reverse IP” feature is a great way
to determine what other web sites and businesses share the same server. For
example, a ”Reverse IP” query of Defcon.netprovides the following two result
sets:
8 Results for 216.231.40.180 (Defcon.net)
Website
DMOZ
Wikipedia
Yahoo
1.
Darktangent.net 0 listings 0 listings 0 listings
2.
Defcon.net 0 listings 0 listings 0 listings
3.
Defcon.org 1 listings 18 listings 1 listings
6
4.
Hackerjeopardy.com 0 listings 0 listings 0 listings
5.
Hackerpoetry.com 0 listings 0 listings 0 listings
6.
Thedarktangent.com 0 listings 0 listings 0 listings
7.
Thedarktangent.net 0 listings 0 listings 0 listings
8.
Thedarktangent.org 0 listings 0 listings 0 listings
13 Results for 216.231.40.179 (Defcon.net)
Website
DMOZ
Wikipedia
Yahoo
1.
0day.com 0 listings 0 listings 0 listings
2.
0day.net 0 listings 0 listings 0 listings
3.
Darktangent.org 0 listings 0 listings 0 listings
4.
Datamerica.com 0 listings 0 listings 0 listings
5.
Datamerica.org 0 listings 0 listings 0 listings
6.
Dcgroups.org 0 listings 0 listings 0 listings
7.
Digitalselfedefense.com 0 listings 0 listings 0 listings
8.
Infocon.org 0 listings 0 listings 0 listings
9.
Jefflook.com 0 listings 0 listings 0 listings
10.
Pinglook.com 0 listings 0 listings 0 listings
11.
Republicofping.com 0 listings 0 listings 0 listings
12.
Securityzen.com 0 listings 0 listings 0 listings
13.
Zeroday.com 0 listings 0 listings 0 listings
The indirect discovery methods mentioned above are great to get started, but
a more active approach is needed to obtain detailed network information.
3.2.2
Bounce Messages
One of the best techniques available for internal network discovery is the e-mail
”bounce” feature of many mail servers. The attack works by sending an email
destined to a non-existent user at the target organization. The email server will
send a bounce message back indicating that the user does not exist. This bounce
message often contains the internal IP address and host name of the mail server
itself. This technique is particularly eﬀective against Exchange servers that are
placed behind a mail relay of some sort. For example, the following headers
expose the internal host name and IP address of RSA.com’s mail server:
Received: (qmail 10315 invoked from network); 28 Jun 2007 15:11:29 -0500
Received: from unknown (HELO gateway1.rsasecurity.com) (216.162.240.250)
by [censored] with SMTP; 28 Jun 2007 15:11:29 -0500
Received: from hyperion.rsasecurity.com by gateway1.rsasecurity.com
via smtpd (for [censored]. [xxx.xxx.xxx.xxx]) with SMTP; Thu, 28 Jun 2007 16:11:29
Received: from localhost (localhost)
by hyperion.na.rsa.net (MOS 3.8.3-GA)
with internal id DEP35818;
7
Thu, 28 Jun 2007 16:18:14 +0500 (GMT-5)
Date: Thu, 28 Jun 2007 16:18:14 +0500 (GMT-5)
From: Mail Delivery Subsystem 
Message-Id: 
To: user@[censored]
MIME-Version: 1.0
Content-Type: multipart/report;
report-type=delivery-status;
boundary="DEP35818.1183029494/hyperion.na.rsa.net"
Subject: Returned mail: User unknown (from [10.100.8.152])
3.2.3
Virtual Hosting
It is common practice to host multiple web sites on a single web server using
virtual hosting. A common conﬁguration error is to host an internal or employee-
only web site on the same physical server as an external web site. When the
server is accessed over the internet using the external host name, the external
web site is displayed, However, an attacker can connect to the web server, specify
an internal host name in the HTTP Host header, and gain access to internal-
only resources. For example, the following host names are often used to host
internal resources and can be exposed on Internet-facing web servers:
• localhost
• www
• intranet
• admin
The Apache HTTP web server supports a feature called ”Dynamic Virtual
Hosting”[2].
This feature allows new virtual hosts to be added by creating
a subdirectory on the web server and adding the appropriate DNS entry. When
Apache sees a web request, it will look for a subdirectory containing the name
sent in the HTTP Host header. This feature contains an interesting ﬂaw. If a
Host header is speciﬁed that contains %00/, the server will return a listing of
all available virtual hosts as an Apache directory listing. This technique only
works if directory indexes are enabled for the ”global” conﬁguration.
Virtual host name tricks work for more than just virtual host conﬁgurations.
Many web applications will allow special access if the ”localhost” , ”127.0.0.1”,
or ”admin” host names are placed into the HTTP Host header.
8
3.2.4
Outbound DNS
An interesting approach to network discovery is to analyze DNS queries sent
by internal DNS servers to external hosts. To perform this test, an auditor
would conﬁgure an external DNS server to handle all requests for a designated
subdomain. To force the DNS lookup to occur, an email can be sent to a non-
existent internal user from an addressed within the conﬁgured subdomain. This
trick can also work when specifying a random host name within the subdomain
as the HTTP Host header of a web request.
Regardless of how the DNS lookup is initiated, the important part is what the
request itself looks like when it reaches the auditors DNS server. The source port
of the request can indicate the type of server which sent the request and whether
or not the request was proxied through a NAT device.By forcing the target to
perform multiple DNS requests, strong ﬁngerprinting can be performed. For
example, some DNS servers will use the same source port for all outbound
requests. Other DNS servers will use a predictable transaction ID sequence.
Certain brands of DNS caches and load balances will cache all records of the DNS
reply,even if it contains a name other than one included in the original request.
Through this type of analysis, it is possible to ﬁngerprint and potentially spoof
responses to internal DNS queries.
3.2.5
Direct Contact
When all else fails, the most straightforward way to determine network location
and topology is by attacking the users directly. In this scenario, the auditor
would build a list of email addresses and instant messaging IDs for the target
organization. The auditor would then sent a HTTP link to a web site that per-
formed a series of tests against the users browser. In this fashion, its possible to
determine the internal and external addresses of the user’s workstation and the
diﬀerent versions of software they have installed. For example, the Metasploit
Decloak tool reports the following information for one of the authors’ worksta-
tion:
External Address: xxx.xxx.197.131
Internal Host: shank
Internal Address: 10.10.xxx.xxx
DNS Server (Java): 151.164.20.201
DNS Server (HTTP): 151.164.20.201
External NAT (Java): xxx.xxx.197.131
9
3.3
Firewalls and IPS
Firewalls have evolved from simple packet ﬁlters to stateful, content-aware net-
work gateways, These products can intefere with a penetration test and waste
the time of the auditors and network administrators alike. The ﬁrst step to
mitigating the problems caused by these devices is to identify and ﬁngerprint
them. Once the type of device is known, working around content-ﬁlters and
avoiding blacklisting is much easier.
3.3.1
Firewall Identiﬁcation
One of the easiest ways to determine the type of ﬁrewall in use is to exame
the source port allocation scheme of outgoing connections. This can be accom-
plished in a number of ways, but looking for outbound web connections to an
advertised (or spammed) web site is often the quickest approach. Another direct
method of ﬁngerprinting a ﬁrewall is by sending a series of TCP connections
attempts with various parameters to a service protected by the ﬁrewall. For
example, the SYN packets sent by the hping2[3] tool are silently dropped by
Netscreen ﬁrewalls (due to missing TCP options).
3.3.2
IPS Identiﬁcation
Intrusion Prevention Systems (IPS) are designed to detect and block attacks
before they reach the target host. These devices can be ﬁngerprinted by sending
a series of attacks with slightly diﬀerent data and seeing which ones are blocked.
A tree model can be constructed that makes it easy to identify a speciﬁc IPS and
signature revision. For example, the TippingPoint IPS can detect PHF requests
when 0x0D is used to separate the method and URI of the HTTP requests, but
fails to detect the request when 0x0C is used instead. Other IPS devices will
allow 0x0D as well. To avoid detection by an administrator, a set of attacks can
be chosen that are marked as ”drop with no alert” in the default conﬁguration
of the IPS.
3.4
Application Discovery
Applications are the real target of most attacks. Applications host the data
and manage access to it. Every application is a potential entry point into the
network, but ﬁnding these applications can be challenging. The most common
way to enumerate applications is to use a service scanner, such as Nmap[4],
Amap[5], Nikto[6], or even Nessus [7].
10
3.4.1
Slow and Steady wins the Deface
The existing tools do a good job at ﬁnding known applications, but they also
trigger intrusion prevent systems and active ﬁrewalls, They key to avoiding
alerts and IP blacklisting is through the use of slow, targetted service scans. For
example, the following Nmap command line will detect Microsoft SQL Servers
without triggering the portscan detector of a popular IPS:
# nmap -sS -P0 -T 0 -p 1433 A.B.C.D/24
3.4.2
Finding Web Apps with W3AF
Andrews Riancho released a tool called the Web Application Attack and Audit
Framework[8] that is a do-everything console for the HTTP protocol. This tool
includes a discovery feature that allows an auditor to locate applications on a
web service through brute force and intelligent guessing.
3.4.3
Metasploit 3 Discovery Modules
The latest version of the Metasploit Framework includes a number of appli-
cation discovery modules, located in the auxiliary/scanner/ subdirectory. The
modules can be used to detect services that are diﬃcult to ﬁnd otherwise. For
example, the sweep udp module can detect DNS, SNMP, NetBIOS, Portmap,
and a number of other UDP services all in one quick pass:
[*] Sending 6 probes to xxx.xxx.xxx.0->xxx.xxx.xxx.255 (256 hosts)
[*] Discovered DNS on xxx.xxx.xxx.19 (TinyDNS)
[*] Discovered DNS on xxx.xxx.xxx.249 (BIND 8.4.6-REL-NOESW)
[*] Discovered DNS on xxx.xxx.xxx.250 (Microsoft)
[*] Discovered SNMP on xxx.xxx.xxx.170 (Ethernet Routing Switch)
[*] Discovered SNMP on xxx.xxx.xxx.171 (ProCurve J8692A)
3.5
Client Application Discovery
Client applications, such as web browsers and email clients, make a great entry
point to an otherwise-secure network. While it is possible for an administrator
to lock down a single web server and ﬁrewall, preventing each and every internal
user from direct attacks is extraordinarily diﬃcult. In order to determine the
types of attacks to launch at internal users, the auditor needs to know what
types of software is in use and whether e-mail delivery of exploit content is
possible.
11
3.5.1
Browser Fingerprinting
The web browser is the new vector of choice for exploitation. Identiﬁying the
target’s browser can be helpful in understanding what types of attacks to per-
form. Once the browser has been identiﬁed, an auditor is able to choose speciﬁc
attacks that are highly likely to succeed. There are several methods for ﬁnger-
printing browsers, but the most common method is to entice the target to access
a web page on a server under the auditor’s control. When the target connects
to the server, a web page is provided that performs a series of server-side and
client-side tests to determine the targets browser, operating system, and some-
times even patch level. The User-Agent header sent by the browser contains a
wealth of knowledge all by itself:
Internet Explorer on Windows 2000
User-Agent: Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)
Firefox running on Windows XP
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.4) Gecko/20070515 Firefox
Opera
on Windows 2000
Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows 2000) Opera 7.0
Mozilla on Windows 2000
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.6) Gecko/20040113
3.5.2