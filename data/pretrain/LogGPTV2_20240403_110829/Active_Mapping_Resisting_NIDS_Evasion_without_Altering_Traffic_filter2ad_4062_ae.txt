bin/redirect?url=ftp://contrib.redhat.com/
pub/contrib/libc6/SRPMS/queso-980922b-
1.src.rpm.
[So02] Dug
Song,
fragroute.
Available
at
http://www.monkey.org/˜dugsong/fragroute/.
[WS95] Gary R. Wright and W. Richard Stevens,
Implementation,
The
TCP/IP Illustrated:
Addison-Wesley, 1995.
[Yl02] T. Ylonen et al, “SSH Transport Layer Proto-
col,” Internet Draft, work in progress, 2002.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
15
Appendix: Full List of Active Mappings
In [HKP01], the authors adopted a “header-walking” technique—inspection of each TCP and IP header ﬁeld—in
an attempt to enumerate all ambiguities (which would then be resolved using a normalizer). In our analysis of Active
Mapping as an approach to the same problem, we borrow that work’s list of normalizations, noting for each how it
ﬁts into the Active Mapping framework. The idea is to try to get a complete picture of how Active Mapping can (or
can’t) eliminate possible TCP/IP ambiguities by looking at each, then stating what sort of mapping technique would
work. The reader is referred to [HKP01] for more thorough explanations of some of the normalizations. We note that
we have not implemented all of the mappings suggested below; nonetheless, most are straightforward given the ones
that we have implemented and tested.
The Disposition column in the tables below will usually contain one of three main approaches, sometimes coupled
with a short explanation:
Drop. The stateless ﬁrewall should be conﬁgured to drop this packet.
Map. We can send chosen probe packets to the host to determine its policy. The most common case, “Map for drop,”
indicates that the packet should be sent to a host—usually as part of an open connection—to see whether it is
dropped or acknowledged.
Ignore. We do not need to perform any mapping for this test.
There is a tradeoff between accepting malformed packets that might be useful and allowing in malicious trafﬁc. For
some normalizations, a choice should be made about whether the anomaly in question might (or empirically does)
arise in normal trafﬁc. If it is decided that the anomalous packet would not arise normally, it may be dropped by a
ﬁrewall or a partial normalizer running in front of the NIDS.
IP Normalizations
#
IP Field
1 Version
2 Header Len
3 Header Len
4 Diffserv
5
6
7
8
9
–
ECT
Total Len
Total Len
IP Identiﬁer
Protocol
Protocol
10
11
Frag offset
Frag offset
12 DF
13 DF
Clear DF.
Drop if DF set and offset > 0.
14
15
16
17
Zero ﬂag
Clear.
Src addr
Src addr
Src addr
Drop if class D or E.
Drop if MSByte=127 or 0.
Drop if 255.255.255.255.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
16
Normalization Performed
Non-IPv4 packets dropped.
Drop if hdr len too small.
Drop if hdr len too large.
Clear ﬁeld.
Clear ﬁeld.
Drop if tot len > link layer len.
Trim if tot len  64KB.
Disposition
Drop if NIDS is not IPv6-aware, else Ignore.
Drop.
Drop.
Ignore if internal routers don’t support; add Diffserv pol-
icy to NIDS otherwise
Map for drop.
Drop.
Ignore.
Ignore.
Ignore unless the NIDS is aware of any other protocol.
N/A (done by NIDS)
Map to see if data > 64k is accepted or trimmed off, but
don’t trigger known bugs.
Map PMTU (see x 3.2).
Map for drop. One plausible interpretation is: do not fur-
ther fragment this packet. Some Solaris machines gener-
ate these packets; it is not disallowed by RFC791 [Po81a].
Firewall should clear if possible; otherwise Map to see if
packets with zero ﬂag set are dropped.
Drop.
Drop.
Drop.
IP Field
#
18 Dst addr
19 Dst addr
20 Dst addr
21
22 Checksum
23
IP options
TTL
Normalization Performed
Drop if class E.
Drop if MSByte=127 or 0.
Drop if 255.255.255.255.
Raise TTL to conﬁgured value. Map (see x 3.2).
Verify, drop if incorrect.
Remove IP options.
Disposition
Drop.
Drop.
Drop.
24
IP options
Zero padding bytes.
UDP Normalizations
Drop or optionally Map for drop.
Map for drop (esp. source route/record route); add support
for IP options to packet processing on NIDS. Optionally
have router or partial normalizer clear unsupported options
(packets already taking slow path on router).
Ignore. Optionally have router clear padding bytes.
# UDP Field
1
Length
2 Checksum
Normalization Performed
Drop if doesn’t match length as
indicated by IP total length.
Verify, drop if incorrect.
Disposition
Map: assume minimum of UDP or IP length taken. Also
map for drop. Optionally drop if router supports it.
Map for drop. Optionally just Drop if router supports it.
TCP Normalizations
#
1
2
TCP Field
Seq Num
Seq Num
Normalization Performed
Enforce data consistency in re-
transmitted segments.
Trim data to window.
3
Seq Num
Cold-start: trim to keep-alive.
Disposition
Map (see x 3.2).
Map: send out-of-window segment, then segments in re-
verse to start of window to prevent stream reassembly un-
til all segments have been received; check ACK sequence
point.
If NIDS can send packets, send keep-alive (incorrect ACK
designed to elicit the current sequence point in an ACK
from the internal host). Otherwise Ignore: this is a cold-
start problem.
4 Ack Num
5
6
SYN
SYN
Drop ACK above sequence hole. Map to see if the ACK is accepted.
Remove data if SYN=1.
If SYN=1 & RST=1, drop.
SYN
If SYN=1 & FIN=1, clear FIN.
7
8
SYN
9 RST
If SYN=0 & ACK=0 & RST=0,
drop.
Remove data if RST=1.
10 RST
Make RST reliable.
11 RST
FIN
12
13
PUSH
14 Header Len
15 Header Len
16 Reserved
Drop if not in window.
If FIN=1 & ACK=0, drop.
If PUSH=1 & ACK=0, drop.
Drop if less than 5.
Drop if beyond end of packet.
Clear.
Map for drop; if not, see if data is ACKed.
Map to see if RST accepted during open connection; Map
to see if SYN accepted if no connection established.
See if FIN is ACKed; the sender could plausibly say, “I
want to initiate a connection, but have nothing to send,”
making the connection half-open right away.
Map for drop or optionally Drop.
Ignore: there are no known exploits. Optionally use nor-
malizer to remove data.
If possible, have NIDS send-keep alive to ensure that RST
was accepted (reliable RST).
Map (see Section 3.2)
Map for drop.
Map for drop.
Map for drop.
Map for drop.
Ignore or optionally Map for drop.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
17
TCP Field
ECE, CWR
ECE, CWR
#
17
18
19 Window
20 Checksum
21 URG,urgent
Normalization Performed
Optionally clear.
Clear if not negotiated.
Remove window withdrawals.
Verify, drop if incorrect.
Zero urgent if URG not set.
22 URG,urgent
Zero if urgent > end of packet.
23 URG
24 MSS option
If URG=1 & ACK=0, drop.
If SYN=0, remove option.
25 MSS option
26 WS option
Cache option, trim data to MSS.
If SYN=0, remove option.
Disposition
Ignore.
Ignore.
Map for drop.
Map for drop.
Ignore. Optionally use app-level host information (e.g.,
particular HTTP server) to interpret urgent data.
As above. Note that it is legal for the urgent pointer to
point beyond of the packet containing it.
Map for drop.
Map to see if the option actually changes the MSS in this
case.
The NIDS should do the caching.
Ignore: Window scaling presents a cold-start problem; if
desired, partial normalization can remove the option or
else the NIDS can try to infer its success from subsequent
ACKs.
Ignore: SACKs are advisory, so should not affect the se-
mantics the NIDS uses.
Map for drop.
27
32
33
34
35
36
SACK
T/TCP opts
T/TCP opts
TS option
TS option
TS option
37 MD5 option
Normalizations 27-31 regarding
SACK
Remove if NIDS doesn’t sup-
port.
Remove if under attack.
Remove from non-SYN if not
negotiated in SYN.
If packet fails PAWS test, drop. Map for drop.
If echoed timestamp wasn’t pre-
Map for drop.
viously sent, drop.
If MD5 used in SYN, drop non-
SYN packets without it.
N/A
Map for drop.
38
other opts
Remove options
ICMP Normalizations
Map for drop when option not set in SYN. If not dropped,
do same thing in NIDS as in normalizer, but this causes a
cold-start problem.
Ignore: optionally remove with a partial normalizer. (See
Section 3.3).
#
1
2
3
4
5
6
7
ICMP Type
Echo request Drop if destination is a multicast
Normalization Performed
Disposition
Optionally Drop.
or broadcast address.
Echo request Optionally drop if ping check-
Optionally Drop.
sum incorrect.
Echo request Zero “code” ﬁeld.
Echo reply
Map for drop.
Optionally drop.
Optionally drop if ping check-
sum incorrect.
Drop if no matching request.
Zero “code” ﬁeld.
Optionally drop to prevent DoS. Optionally Drop.
Ignore.
Map for drop.
Echo reply
Echo reply
Source
quench
8 Destination
Unreachable
other
9
Unscramble embedded scram-
bled IP identiﬁer.
Drop.
Ignore: IP identiﬁers not scrambled without normalizer.
Optionally Drop depending on NIDS policy.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
18