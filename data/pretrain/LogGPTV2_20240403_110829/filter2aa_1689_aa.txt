**Copyright Notice:**
IOActive, Inc. Copyright © 2015. All Rights Reserved.

**Title: Abusing XSLT for Practical Attacks**

**Author:**
Fernando Arnaboldi  
Senior Security Consultant, IOActive, Inc.

---

**Why XSLT?**

- XML vulnerabilities can be exploited to gain unauthorized access, such as obtaining passwords.
- This presentation covers:
  - XML
  - Schemas
  - XSLT (the focus of this talk)

---

**Objectives of This Talk:**

- Analyze common weaknesses in XSLT.
- Exploit implementation flaws.

---

**Target Audience:**

- Code reviewers
- Developers using XML and XSLT
- Individuals interested in security and exploitation

---

**Why Should You Care?**

- XSLT processors (parsers) are still vulnerable to these flaws.
- These vulnerabilities can compromise the integrity and confidentiality of your systems and those of your customers.
- XSLT-based attacks do not rely on traditional payloads, making them undetectable by antivirus software.

---

**Agenda:**

- Introduction to the target
- Numbers and their implications
- Random numbers
- Bypassing the same-origin policy
- Information disclosure and file reading through errors

---

**Introduction:**

- Overview of XSLT functionality and the software it affects.
- Attack vectors and identifying the target.

---

**What Does XSLT Do?**

- XSLT is a language used to manipulate or transform documents.
- It takes an XML document as input and outputs an XML, HTML, or text document.

---

**XSLT Versions:**

- There are three versions of XSLT: v1, v2, and v3.
- XSLT v1 is the most widely implemented version because:
  - Higher versions support previous versions.
  - It is the only version supported by web browsers.

---

**Software Tested:**

- **Server-side processors:**
  - Command-line standalone processors and libraries:
    - Libxslt (Gnome): 
      - Standalone (xsltproc)
      - Libraries: Libxslt 1.1.28, Python v2.7.10, PHP v5.5.20, Perl v5.16, Ruby v2.0.0p481
    - Xalan (Apache):
      - Standalone (Xalan-C v1.10.0, Xalan-J v2.7.2)
      - C++ (Xalan-C) and Java (Xalan-J)
    - Saxon (Saxonica):
      - Standalone (saxon v9.6.0.6J)
      - Java, JavaScript, and .NET

- **Client-side processors:**
  - Web browsers:
    - Google Chrome v43.0.2357.124
    - Safari v8.0.6
    - Firefox v38.0.5
    - Internet Explorer v11
    - Opera v30.0

---

**Attack Vectors:**

1. **XML/XHTML Document Using an XSLT Document:**
   - The XML/XHTML document references an external XSLT document.
   
2. **XML/XHTML Document Referencing an XSLT Document:**
   - The XML/XHTML document includes a reference to an XSLT document.
   
3. **Embedded XSLT in XML/XHTML:**
   - The XML/XHTML document contains an embedded XSLT document.

---

**Target Identification:**

- XSLT processors have specific properties.
- Web browsers also have JavaScript properties that can be leveraged.

---

**Version Disclosure Summary:**

- (Details to be provided in the presentation)

---

**Numbers:**

- **Overview:**
  - Present in both client and server-side processors.
  - Real numbers and integers can introduce errors.

- **Floating Point Calculations:**
  - Define a stylesheet and solve a simple calculation.
  - Example: `0.2 + 0.1 - 0.3`
    - Some processors (Opera and Chrome) return `0`.
    - Others (Firefox, Safari, IE, and all server-side processors) return `0.00000000000000005551115123125783`.

- **Vendor Outputs:**
  - Detailed results from various processors showing floating point accuracy.

- **Loss of Precision:**
  - Common in many programming languages.
  - Floats may not detect missing decimals.
  - Demonstration of how this can be exploited.

- **Integer Accuracy:**
  - Define an XML with 10 numbers (5 in exponential notation and 5 not).
  - Print the original XML value and the XSLT representation.
  - Results from different processors show varying levels of accuracy.
  - Detailed vendor-specific outputs and explanations.

- **Summary:**
  - Both real numbers and integers can introduce errors in XSLT processing.
  - Different implementations handle these errors differently.

---

**Conclusion:**

- We will explore more than just decimal inaccuracies in the following sections.

---

**Copyright Notice:**
IOActive, Inc. Copyright © 2015. All Rights Reserved.