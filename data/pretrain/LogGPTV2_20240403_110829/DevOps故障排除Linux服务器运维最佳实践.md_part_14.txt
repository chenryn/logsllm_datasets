80
·第5章服务器宕机了？追踪网络问题的根源
注意
所以不会降低速度）的一些输出信息：
是可以在任何Linux 系统中都能够找到的程序。限于 tcpdump 的工
5.3.1
比赛，通信将保持继续或者被重置。如果不是通过分析来往的每一
有时目标服务器赢得了比赛并获得了响应，但有时路由器率先回复
多少数据包。
的数据包信息。下面是执行命令 tcpdump-n（不将IP 解析为主机名，
网络接口，选择第一个可用接口，然后将捕获、解析并输出它看到
作机制，你必须在root权限下使用它。默认情况下，它会通过扫描
成熟的命令行抓包工具。虽然有更多的现代化工具，但是tcpdump
个数据包，我们可能永远无法发现数据包重复的问题。
了我们并且获得了响应，导致主机将重新启动握手。根据谁赢得了
序
，当 tcpdump 退出时，它会告诉你抓到多少数据包，内核丢弃了
我们将要讨论的主要抓包工具是tcpdump。这是一个很老也很
Tcpdump 的输出一开始解析起来可能有一些棘手，
每次抓取数据包完毕，只需按Ctrl-C组合键来退出 tcpdump 程
19:01:51.224021 IP 72.240.13.35.45665 > 64.142.56.172.53: 59454%[1au] AAAA? ns2.example.
$sudotcpdump-n
19:01:51.256743 IP 201.52.186.78.63705 >64.142.56.172.80:Flags [.],ack 1833085614,win
19:01:51.224510 IP 64.142.56.172.53>72.240.13.35.45665: 59454- 0/1/1 (90)
19:01:51.157772 IP 208.115.111.75.60004>64.142.56.172.80:Flags [.],ack 2,win 272,
19:01:51.13317 IP 64.142.56.172.80 >208.115.111.75.60004: Flags [F.], seq 1, ack 1,win
tcpdump:verbose output suppressed,use-v or-vv for full protocol decode
net.（45)
options [nop,nop,TS val 99314437 ecr 1766147276],length 0
54,options [nop,nop,TS val 1766147276 ecr 99314435],1ength 0
→1834304357,win272,options [nop,nop,TS val 99314435 ecr 1766147273],length 0
65340，1ength0
使用tcpdump
我不会介绍
---
## Page 88
端口53答复了主机72.240.13.35上的端口45665，很可能就是之前
ns2.example.net的AAAA记录（IPv6的IP地址）发送了一个请求。
所有的列，让我们从输出中截取两行并分解开来：
间的故障，可以告诉tcpdump，只显示到达该主机或从该主机发送
那些数据包。例如，如果想排除主机与主机名为web1的服务器之
扰。你想要做的是通过 tcpdump 的一些过滤规则，只显示感兴趣的
数据包，它通常包含了很多的没价值的信息，对故障排除造成了干
记、序列号以及这个数据包的其他TCP/IP协议信息，这些我们不
>符号可以看做一个箭头，让你知道通信方向是从第一个IP到第二
机重新发送了请求。下一列显示了源主机的IP和端口。这行中的
求超过30s超时）的协议特别有用，因为你可以看到超时时，源主
要多长时间变得十分简单。这对于那些设置了超时时间（如DNS请
第二行告诉你，还是在19:01:51这个时刻，主机64.142.56.172上的
如果你想更进一步地了解这一行，你可以看到，源主机为了获取
以用：
的报文：
个。最后，下一列告诉你目标IP和端口号，接下来是一些额外的标
请求的响应。
口45665发送了一个包到主机64.142.56.172上的端口53（DNS）。
作详细说明。
由于第一列是每个数据包的时间戳，这使得看主机间的通信需
过滤tcpdump 输出由于默认情况下 tcpdump 输出它捕获的所有
如果想要做相反的事情，即显示 webl之外的所有流量，你可
$ sudo tcpdump-n not host web1
$sudo tcpdump-n host web1
第一行说明，在19:01:51这个时刻，主机72.240.13.35上的端
19:01:51.224021 IP 72.240.13.35.45665 > 64.142.56.172.53: 59454% [1au] AAA? ns2.example.
19:01:51.224510 IP 64.142.56.172.53 >72.240.13.35.45665: 59454- 0/1/1 (90)
→net. (45)
5.3抓取数据包81
---
## Page 89
38
数据包，并将其存储在磁盘上。因此，如果有人从你的服务器传输
始数据包。随着原始数据包转储，你将获取到包含完整通信内容的
tcpdump 命令：
有有关信息，一些工具（如Wireshark等，我们马上将简要讨论它）
输人：
（端口53），可以输人：
第5章
包。也可以使用到目前为止所有我们讨论过的相同过滤选项捕获原
可以将这些原始数据包作为输入，并把它们以更加容易理解的方式
原始数据包。
令显示输出并把它保存到一个文件里：
tcpdump命令后面添加-1选项以缓冲输出，然后就可以使用tee 命
保存到文件中：
步过滤tcpdump 的输出。可以使用命令行重定向把tcpdump 的输出
tcpdump 输出到文件往往会更轻松，然后使用 grep 或其他工具进一
展现出来。
以解析的输出，
保存原始数据包转储最简单的方法是运行带有-w选项的
原始数据包转储虽然你可能会认为 tcpdump已经提供了大量难
$sudo tcpdump-n-1host web1|tee outputfile
如果想在命令行上查看包内容的同时也保存到文件中，可在
$sudo tcpdump-n host web1>outputfile
与其他 tcpdump 命令一样，按Ctrl-C 组合键将会停止捕获数据
$ sudo tcpdump -w output.pcap
实际上，可以用tcpdump实现相当复杂的过滤，但抓取一些
$sudo tcpdump-n port 80 orport 443
如果想捕捉到所有流经端口 80或端口443的 Web 流量，可以
$ sudo tcpdump -n port 53
还可以过滤特定端口的流量。比如，如果只想看到 DNS 的流量
服务器宕机了？追踪网络问题的根源
原始数据包特别有用，因为它们包含主机间通信的所
，不过有时那些输出还是不够——还需要保存完整的
---
## Page 90
要解析和分析原始数据包时，有时使用-r选项无法满足需求。幸运
推，直到结束tcpdump 程序或磁盘空间用完。如果你想确保不会用
后会创建第二个文件。举例来说，如果你想在文件达到10MB 后将
5.3.2
解 tcpdump 的能力，这个手册值得一看。
页（输人 man tcpdump）不仅介绍了所有的选项和过滤器，还提供了
据包实时重播。只需要指定原始数据包输出文件作为参数。可以指定
间，你可以将它限制为最多创建5个分卷文件：
开始覆盖第一个文件。举例来说，如果你想在 tcpdump 输出达到
光所有磁盘空间，也可以添加-W选项，它可以限制 tcpdump 最终
tcpdump 会将其关闭，并开始写人输出文件 output.pcap.2，依次类
文件分卷，你可以输人：
个选项-C可以让你指定输出文件的最大尺寸（数百万字节)，超过
开一个命令行会话就可以一直监视输出文件的大小。
1GB 文件，你可能会在数据包转储中抓取到整个文件。你只要再打
过滤器和-n等其他选项，就像使用 tcpdump 对实时流量进行监控：
10MB后创建一个新的文件，并确保仅使用50MB以内的磁盘空
创建的文件数量。
一个非常好的TCP数据包构造初级手册，所以如果你想更深人地了
tcpdump 提供了几个可以用来管理输出文件大小的选项。第一
尽管 tcpdump是一个得心应手的数据包抓取工具，
tcpdump 程序拥有远远超出这里所提到的选项和过滤器。手册
$ sudo tcpdump -C 10-W 5-w output.pcap
一旦捕获了这些数据包，你可以使用 tcpdump 的-r 选项进行数
第一个输出文件将被命名为output.pcap.1，
$ sudo tcpdump -C 10 -w output.pcap
$sudo tcpdump -n-r output.pcap
使用Wireshark
一旦tcpdump写满了最后一个文件，它会从头
一旦达到10MB
5.3抓取数据包·83
，当你真正需
---
## Page 91
84
·第5章服务器宕机了？追踪网络问题的根源
tcpdump 的输出信息一样。Wireshark很有价值的一点是它的列可读
可以通过桌面环境启动它，或只需在命令行键人wireshark。如果在
本下均可使用，它甚至有Windows 和 Mac 系统的客户端。安装后，
包分析工具的桌面应用，这些内容已经超出本书的介绍范围。但是
包分析工具就是Wireshark。Wireshark是一个提供了大量高级数据
别可能存在的问题变得十分简单。
色突出显示差错报文。在主面板里，
性非常好，再加上不同协议的数据包标有不同的颜色，甚至会用红
面板在工具栏的下方，上面显示了基本的包信息，
加载那个原始数据包文件。
键人wireshark之后附加原始包文件，Wireshark程序启动以后就会
包转储信息并定位明显问题的方法。
从一个基础层面上来说，
的是有一些工具使得这个过程变得简单。其中一个最好的原始数据
Onle
Hle Est View Qe Corur Araye Suc Recon hos Reh
Int
正如图5-2所示，Wireshark 的图形用户界面分为几个部分。
Wireshark工具包应该已经被打包并且在主流的Linux 发行版
图5-2
，Wireshark提供了一种更容易查看原始数据
139112
Wireshark默认窗口
保民器
，颜色编码使得数据包过滤和识
与默认情况下
dre
主
---
## Page 92
到这一点，但也可以直接选择一个你感兴趣的包，然后依次选择
滤器）的按钮。和tcpdump一样，过滤器可以让你只看到与你要求
是一本有关故障排除而不是介绍TCP/IP协议细节的书，所以本节
复杂和足够强大的工具，可以单独出一本以它为主题的书。由于这
及两者之间的一切信息。一旦你点击并展开一个数据包的特定部
显示出数据包不同协议层的详细信息。
口（见图5-3），并且如果它能够拼凑出该数据流中的内容，还可
流，也可以选择相应的选项。选择了该莱单后，会弹出一个新窗
Analyze→FollowTCP Stream选项。如果它是一个UDP或SSL
信数据包中挑出一个完整的通信数据流。虽说你手动也可以做
的文档方便你构建自己的过滤规则。
个工具。在那里你还可以单击Help（帮助）按钮，它会提供更完整
个包含一些好例子的窗口，这些例子能够帮助你更好地开始使用这
关的数据包，输人过滤条件，然后按Enter键：
同的语法过滤器。举例来说，如果你只想看到与主机192.168.0.1相
相匹配的数据包。与tcpdump 不同的是，Wireshark使用一种完全不
只是提到了wireshark的一些基本功能用来帮助你排除故障。
ASCII格式的表示。
分，在窗口最底部会有一个单独的面板，显示该数据的十六进制和
在下面的面板中，可以显示IP报头、数据包中的数据部分，以
Wireshark另一个实用的功能是它可以从两台主机海量的通
顺着顶部的工具栏，你会看到一个输人框和一个名为Filter（过
Wireshark除了抓取数据包的能力外还拥有大量特性，它是一个
一旦你在主面板中选中了一个特定的数据包，下方的面板就会
Wireshark 的过滤语法相当丰富，若点击Filter 按钮，会弹出一
只显示与DNS（端口53）相关的数据包，输人：
ip.addr == 192.168.0.1
tcp.port == 53 II udp.port == 53
5.3抓取数据包·85
---
## Page 93
86
·第5章服务器宕机了？追踪网络问题的根源
有数据包。
口，Wireshark 的主窗口会自动过滤掉除这个特定流以外的其他所
以显示这些内容。无论哪种情况，当你关闭FollowTCP Stream 窗
ans di
图5-3
rel='alternate"
Wireshark跟踪博客中的垃圾邮件的HTTP数据流
Packets169isye34Ma0
HTIP/1.12800K
grab
tiv
rel=notco>g salt</p
IOSV
),s2AT5qo
FitebrHs Se
EBCDIC
Hex Cump
CAraysRa
ProRle Defaui
---
## Page 94
记录。现在你发现更改的一些记录没有更新，在填写一张凭据寄给
网络连接不同，你的电脑和服务器仍然连接着网络。
地址转化为主机名。当DNS失效的时候，其后果就类似于断开了
后台将这个名字转化成一个IP地址。同样，也可以使用 DNS将IP
己喜爱的网站的IP地址。相反，我们输人一个主机名，DNS 会在
Intermet上的每个主机都有一个IP地址，但是大多数人都记不住自
DNS 提供商之前，你想要完整地检查一遍故障。最后，你可能是一
站的DNS，通过注册管理员或者第三方，你仅需在网页界面中更改
是你首先想用可靠数据着手处理。除此之外，也许你会管理一个网
开发的某个服务器，抑或你可能注意到当自动测试尝试解析服务器
控制DNS系统，不过，你会注意到无法访问你负责的或者在其上
这只是众多问题中的一种。处于最基本的等级时，你可能不会直接
网络连接一
名时，会出现超时。最终团队中的其他人也许会解决这个问题，但
在 DevOps 组织中，你可能会负责 DNS 故障排除相关的问题
域名系统，缩写为 DNS，是Internet上最重要的系统之一
为什么主机名无法解析？.
一无法访问想要访问的网页或者服务器，但与真的断开
服务器的问题
解决DNS
第6章