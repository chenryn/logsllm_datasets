```  
postgres=# select pg_relation_filepath ('test_heap'::regclass);  
 pg_relation_filepath   
----------------------  
 base/13245/16436  
(1 row)  
Time: 0.593 ms  
postgres=# select pg_relation_filepath ('test_col'::regclass);  
 pg_relation_filepath   
----------------------  
 base/13245/16408  
(1 row)  
Time: 0.456 ms  
postgres=# \q  
susql@digoal-> cd $PGDATA/base/  
susql@digoal-> ll 13245/16436*  
-rw------- 1 susql susql 319M Feb 29 09:04 13245/16436  
-rw------- 1 susql susql 104K Feb 29 09:04 13245/16436_fsm  
susql@digoal-> ll 13245/16408*  
-rw------- 1 susql susql 319M Feb 29 09:04 13245/16408  
-rw------- 1 susql susql 104K Feb 29 09:04 13245/16408_fsm  
-rw------- 1 susql susql 8.0K Feb 29 08:58 13245/16408_of  
```  
使用insert插入的数据，没有写入列存储，需要调用vacuum重铸。  
```  
postgres=# vacuum test_col ;  
VACUUM  
-rw------- 1 susql susql    0 Feb 29 12:57 16408  
-rw------- 1 susql susql  16K Feb 29 12:57 16408_fsm  
-rw------- 1 susql susql 319M Feb 29 12:57 16408_of  
```  
重铸后，sort by起作用了。  
```  
postgres=# select id from test_heap offset 1000000 limit 10;  
   id      
---------  
 4668069  
 3385308  
 3298340  
 2234740  
 3610229  
 2569580  
 1705913  
  828489  
  856546  
 1197041  
(10 rows)  
Time: 123.598 ms  
postgres=# select id from test_col offset 1000000 limit 10;  
   id     
--------  
 990214  
 990215  
 990216  
 990217  
 990218  
 990219  
 990220  
 990221  
 990222  
 990223  
(10 rows)  
Time: 100.979 ms  
```  
查看编译项  
```  
susql@digoal-> pg_config  
BINDIR = /usr/susql-5.0/bin  
DOCDIR = /usr/susql-5.0/doc  
HTMLDIR = /usr/susql-5.0/doc  
INCLUDEDIR = /usr/susql-5.0/include  
PKGINCLUDEDIR = /usr/susql-5.0/include  
INCLUDEDIR-SERVER = /usr/susql-5.0/include/server  
LIBDIR = /usr/susql-5.0/lib  
PKGLIBDIR = /usr/susql-5.0/lib  
LOCALEDIR = /usr/susql-5.0/share/locale  
MANDIR = /usr/susql-5.0/share/man  
SHAREDIR = /usr/susql-5.0/share  
SYSCONFDIR = /etc/sysconfig/susql  
PGXS = /usr/susql-5.0/lib/pgxs/src/makefiles/pgxs.mk  
CONFIGURE = '--enable-rpath' '--prefix=/usr/susql-5.0' '--includedir=/usr/susql-5.0/include' '--mandir=/usr/susql-5.0/share/man' '--datadir=/usr/susql-5.0/share' '--enable-nls' '--with-libxml' '--with-libxslt' '--with-system-tzdata=/usr/share/zoneinfo' '--sysconfdir=/etc/sysconfig/susql' '--docdir=/usr/susql-5.0/doc' 'CFLAGS=-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -DLINUX_OOM_ADJ=0' 'LDFLAGS=-Wl,--as-needed'  
CC = gcc  
CPPFLAGS = -D_GNU_SOURCE -I/usr/include/libxml2  
CFLAGS = -DPGPG -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -DLINUX_OOM_ADJ=0  
CFLAGS_SL = -fpic  
LDFLAGS = -L../../../src/common -Wl,--as-needed -Wl,--as-needed -Wl,-rpath,'/usr/susql-5.0/lib',--enable-new-dtags  
LDFLAGS_EX =   
LDFLAGS_SL =   
LIBS = -lpgcommon -lpgport -lxslt -lxml2 -lz -lreadline -lrt -lcrypt -ldl -lm   
VERSION = PostgreSQL 9.5.0 (SuSQL 5.0.1)  
```  
验证copy跳过异常的功能  
```  
postgres=# copy test_heap to '/data01/susql/test.csv' ;  
COPY 2000000  
-rw-r--r-- 1 susql susql 4.1G Feb 29 09:22 test.csv  
[root@digoal susql]# echo "err" >> test.csv   
[root@digoal susql]# echo "err" >> test.csv   
[root@digoal susql]# echo "err" >> test.csv   
[root@digoal susql]# echo "err" >> test.csv   
[root@digoal susql]# echo "err" >> test.csv   
[root@digoal susql]# head -n 10 test.csv >> test.csv  
postgres=# copy test_col from '/data01/susql/test.csv' with( UNSTRICT true, UNSTRICT_NUM 10);  
INFO:  00000: invalid input syntax for integer: "err" (822)  
CONTEXT:  COPY test_col, file /data01/susql/test.csv, line 2000001, column id: "err"  
LOCATION:  PerformErrorLoggingForCopy, copy.c:5117  
INFO:  00000: invalid input syntax for integer: "err" (822)  
CONTEXT:  COPY test_col, file /data01/susql/test.csv, line 2000002, column id: "err"  
LOCATION:  PerformErrorLoggingForCopy, copy.c:5117  
INFO:  00000: invalid input syntax for integer: "err" (822)  
CONTEXT:  COPY test_col, file /data01/susql/test.csv, line 2000003, column id: "err"  
LOCATION:  PerformErrorLoggingForCopy, copy.c:5117  
INFO:  00000: invalid input syntax for integer: "err" (822)  
CONTEXT:  COPY test_col, file /data01/susql/test.csv, line 2000004, column id: "err"  
LOCATION:  PerformErrorLoggingForCopy, copy.c:5117  
INFO:  00000: invalid input syntax for integer: "err" (822)  
CONTEXT:  COPY test_col, file /data01/susql/test.csv, line 2000005, column id: "err"  
LOCATION:  PerformErrorLoggingForCopy, copy.c:5117  
COPY 2000010  
```  
压缩比比较：  
```  
postgres=# create compress configuration zlib0 (template=zlib, level=1);  
CREATE COMPRESS CONFIGURATION  
Time: 0.814 ms  
postgres=# create compress configuration zlib2 (template=zlib, level=9);  
CREATE COMPRESS CONFIGURATION  
Time: 0.814 ms  
postgres=# create table test_heap_zlib0(                         
id int,   
info text compress zlib0,   
crt_time timestamp,   
c1 int,   
c2 int,   
c3 int,   
c4 int,   
c5 int,   
c6 int,   
c7 int,   
c8 int,   
c9 int,   
c10 int,   
c11 int,   
c12 int)   
stored as heap;  
CREATE TABLE  
postgres=# create table test_heap_zlib2(                         
id int,   
info text compress zlib2,   
crt_time timestamp,   
c1 int,   
c2 int,   
c3 int,   
c4 int,   
c5 int,   
c6 int,   
c7 int,   
c8 int,   
c9 int,   
c10 int,   
c11 int,   
c12 int)   
stored as heap;  
CREATE TABLE  
postgres=# insert into test_heap_zlib0 select * from test_heap;  
INSERT 0 4000000  
postgres=# insert into test_heap_zlib2 select * from test_heap;  
INSERT 0 4000000  
postgres=# select pg_size_pretty(pg_total_relation_size('test_heap'));  
 pg_size_pretty   
----------------  
 638 MB  
(1 row)  
Time: 1.190 ms  
postgres=# select pg_size_pretty(pg_total_relation_size('test_heap_zlib0'));  
 pg_size_pretty   
----------------  
 638 MB  
(1 row)  
Time: 0.344 ms  
postgres=# select pg_size_pretty(pg_total_relation_size('test_heap_zlib2'));  
 pg_size_pretty   
----------------  
 638 MB  
(1 row)  
```  
## 小结  
1\. 本测试用例下，pglz和zlib的压缩比一致。  
2\. 本测试用例下，列存的查询效率并没有比行存的效率高。列存使用了9.5新增的custom scan provider接口，和pgstrom使用GPU的方法类似。  
3\. 列存储在物理文件上和行存储一致，没有按列分割文件。insert插入的数据需要vacuum后才能转成列存，COPY进来的数据不需要执行vacuum。  
4\. COPY可以跳过错误的行，并输出行号。  
本文测试用到的数据量还比较小，感兴趣的同学可以测试更大数据量，看看列存储的性能表现。  
有问题可以找志铭.  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")