### Results in the White-Box Setting

**Scaling Detection Method:**
Figure 12 illustrates that we can determine a reasonable threshold (indicated by red dashed lines) for both Mean Squared Error (MSE) and Structural Similarity Index (SSIM) to distinguish original images from attack images. We employed the gradient descent method to automate the selection of these thresholds. The selected threshold values are 1714.96 for MSE and 0.61 for SSIM.

**Figure 12: Distributions of MSE and SSIM values for the scaling detection method in the white-box setting with 1000 original images and 1000 attack images.**

Using these threshold values, we evaluated the performance of the scaling detection method on the evaluation dataset, focusing on accuracy, precision, recall, False Acceptance Rate (FAR), and False Rejection Rate (FRR). Table II presents the results, showing that the scaling detection method achieves an accuracy of 99.9% with FAR of 0.0% and FRR of 0.1% for MSE.

**Table II: Results of the scaling detection method in the white-box setting.**

| Metric | Accuracy | Precision | Recall | FAR | FRR |
|--------|----------|-----------|--------|-----|-----|
| MSE    | 99.9%    | 100.0%    | 99.9%  | 0.0%| 0.1%|
| SSIM   | 99.0%    | 99.7%     | 99.9%  | 0.3%| 0.1%|

### Results in the Black-Box Setting

To validate the performance in the black-box setting, we used the percentile of the obtained MSE and SSIM distributions based on 1000 benign images. Figure 13 shows that both MSE and SSIM values follow a normal distribution, indicating that a percentile-based threshold is effective. As the percentile increases, the FRR also increases.

**Figure 13: Distributions of MSE and SSIM values for the scaling detection method in the black-box setting with 1000 original images. A percentile is represented as a green segment.**

To determine the optimal threshold, we computed the metric values for original images and used their statistical distribution (mean and standard deviation). We then adopted a percentile of this distribution as the detection boundary. With the training dataset, we selected the optimal percentile that achieved the best accuracy results for the detection method.

**Table III: Results of the scaling detection method in the black-box setting.**

| Percentile | Accuracy | Precision | Recall | FAR | FRR |
|------------|----------|-----------|--------|-----|-----|
| 1%         | 98.4%    | 96.8%     | 99.0%  | 3.2%| 1.0%|
| 2%         | 97.3%    | 94.9%     | 99.0%  | 5.3%| 1.0%|
| 3%         | 96.2%    | 93.0%     | 99.0%  | 7.5%| 1.0%|

### Results of the Filtering Detection Method

**White-Box Setting:**
Figure 14 shows that we can find a reasonable threshold (red dashed lines) in both MSE and SSIM to distinguish original images from attack images, despite some overlap in MSE. The selected threshold values are 5682.79 for MSE and 0.38 for SSIM.

**Figure 14: Distributions of MSE and SSIM values for the filtering detection method in the white-box setting with 1000 original images and 1000 attack images.**

Using these thresholds, we evaluated the performance of the filtering detection method on the evaluation dataset. Table IV presents the results, showing that the filtering detection method achieves an accuracy of 98.3% with FAR of 1.0% and FRR of 2.5% for SSIM.

**Table IV: Results of the filtering detection method in the white-box setting.**

| Metric | Accuracy | Precision | Recall | FAR | FRR |
|--------|----------|-----------|--------|-----|-----|
| MSE    | 97.3%    | 97.4%     | 97.2%  | 2.6%| 2.8%|
| SSIM   | 98.3%    | 98.9%     | 97.5%  | 1.0%| 2.5%|

**Black-Box Setting:**
We evaluated the filtering detection method's performance using three different percentiles (1%, 2%, and 3%). Table V shows the detection accuracy results with these percentiles. Based on the accuracy results, our recommendation is to use SSIM with a 1% percentile, which achieves an accuracy of 98.2% with FAR of 2.3% and FRR of 1.3%.

**Table V: Results of the filtering detection method in the black-box setting.**

| Percentile | Accuracy | Precision | Recall | FAR | FRR |
|------------|----------|-----------|--------|-----|-----|
| 1%         | 98.2%    | 98.7%     | 93.8%  | 2.3%| 1.3%|
| 2%         | 97.1%    | 97.7%     | 96.3%  | 2.2%| 1.0%|
| 3%         | 97.0%    | 96.3%     | 97.8%  | 4.0%| 0.9%|

### Results of the Steganalysis Detection Method

**White-Box Setting:**
Figure 16 shows that 99.3% of original images have 1 Centered Spectrum Point (CSP), while 98.2% of attack images have more than 1 CSP. This indicates that a CSP threshold of 2 can effectively distinguish between original and attack images.

**Figure 16: Distributions of CSP values for the steganalysis detection method in the white-box setting with 1000 original images and 1000 attack images.**

Using a CSP threshold of 2, we evaluated the steganalysis detection method's performance. Table VI shows that the steganalysis detection method achieves an accuracy of 98.5% with FAR of 0.3% and FRR of 2.7%.

**Table VI: Results of the steganalysis detection method in the white-box setting.**

| Metric | Accuracy | Precision | Recall | FAR | FRR |
|--------|----------|-----------|--------|-----|-----|
| CSP    | 98.5%    | 99.6%     | 97.3%  | 0.3%| 2.7%|

**Black-Box Setting:**
In the black-box setting, we used a fixed CSP threshold of 2, as attack images inherently have multiple CSPs. This approach achieved the same accuracy, FAR, and FRR as in the white-box setting.

### Running Time

The threshold determination is performed offline, so we focused on the running time overhead, which is crucial for real-time detection. We implemented Decamouflage in Python 3 and used a PC with an Intel Core i5-7500 CPU (3.41GHz) and 8GB RAM. Table VII details the running time overheads, indicating that each detection method requires between 3 and 137 milliseconds per image on average.

**Table VII: Running time overheads of detection methods.**

| Method      | Metric | Average (ms) | Standard Deviation (ms) |
|-------------|--------|--------------|-------------------------|
| Scaling     | MSE    | 11           | 2                       |
|             | SSIM   | 137          | 1                       |
| Filtering   | MSE    | 5            | 1                       |
|             | SSIM   | 65           | 1                       |
| Steganalysis| CSP    | 3            | 1                       |

### Effects of Attack Image Sizes

We analyzed the effects of attack image sizes (56x56, 112x112, and 224x224) on the performance of Decamouflage in terms of Attack Detection Rate (ADR) and Image Recognition Rate (IRR). Table VIII summarizes the results.

**Table VIII: Effects of image sizes on the performance of Decamouflage.**

| Image Size | Method      | Metric | ADR (W/B, %) | IRR (W/B, %) |
|------------|-------------|--------|--------------|--------------|
| 56x56      | Scaling     | MSE    | 100/100      | -/-          |
|            |             | SSIM   | 100/100      | -/-          |
|            | Filtering   | MSE    | 60/49        | 15/19.6      |
|            |             | SSIM   | 29/88        | 15.4/8.3     |
|            | Steganalysis| CSP    | 77/77        | 13.1/17.3    |
| 112x112    | Scaling     | MSE    | 100/100      | -/-          |
|            |             | SSIM   | 100/100      | -/-          |
|            | Filtering   | MSE    | 96/94        | 15/19.6      |
|            |             | SSIM   | 70/92        | 15.4/8.3     |
|            | Steganalysis| CSP    | 100/100      | 13.1/17.3    |
| 224x224    | Scaling     | MSE    | 100/100      | -/-          |
|            |             | SSIM   | 100/100      | -/-          |
|            | Filtering   | MSE    | 96/94        | 15/19.6      |
|            |             | SSIM   | 70/92        | 15.4/8.3     |
|            | Steganalysis| CSP    | 100/100      | 13.1/17.3    |

These results demonstrate that Decamouflage can be deployed for real-time detection, with the steganalysis detection method being particularly efficient without the need for a threshold setup process.