# Privacy-Preserving Social Plugins

## Authors
Georgios Portokalidis, Michalis Polychronakis, Angelos D. Keromytis, Evangelos P. Markatos

### Affiliations
- **Columbia University**: Georgios Kontaxis, Michalis Polychronakis, Angelos D. Keromytis
- **FORTH-ICS**: Evangelos P. Markatos

### Contact Information
- **Emails**: {kontaxis, mikepo, angelos}@cs.columbia.edu
- **PI Email**: [Insert PI's Email]

---

## Abstract
The widespread adoption of social plugins, such as Facebook’s Like and Google’s +1 buttons, has raised significant privacy concerns. These plugins enable social networking services to track a growing portion of their members' browsing activity. While existing browser extensions can prevent this tracking, they also disable content personalization, degrading the user experience. In this paper, we propose a novel design for privacy-preserving social plugins that decouples the retrieval of user-specific content from the loading of the plugin. This design maintains the functionality of existing social plugins by delivering the same personalized content while protecting user privacy by avoiding the transmission of user-identifying information at load time. We have implemented our design in SafeButton, a Firefox add-on that supports seven out of nine Facebook social plugins, including the Like button. Additionally, we present a pure JavaScript implementation that can be offered as a service without requiring any browser add-ons.

---

## 1. Introduction

Social plugins, such as Facebook’s Like button and Google’s +1 button, allow third-party websites to offer personalized content by leveraging the social graph. They enable users to seamlessly share, comment, and interact with their social circles. The benefits of these plugins are evident in their rapid adoption; as of June 2012, more than two million websites incorporated Facebook’s social plugins, and over 35% of the top 10,000 websites included Like buttons, a threefold increase from the previous year.

However, this growth raises significant privacy concerns. To personalize content, social plugins transmit a unique user identifier (usually via an HTTP cookie) along with the URL of the visited page. This allows the social networking service (SNS) to track detailed browsing history. The cookies used in social plugins are linked to user profiles containing personal information, making them more invasive than typical third-party tracking cookies used by advertising networks.

Privacy-conscious users can use browser extensions to block user-identifying information, but these solutions often disable content personalization, leading to a poor user experience. For example, a Like button will only show the total number of likes, rather than the names and pictures of friends who liked the page.

To address these issues, we propose a novel design for privacy-preserving social plugins. Our design decouples the retrieval of private information from the loading of the plugin by prefetching all necessary data from the user’s social circle. Any missing non-private data is retrieved on demand without revealing the user's identity. Local and server-side data are then combined to render a pixel-by-pixel identical version of the personalized content.

We have implemented this design in SafeButton, a Firefox add-on that provides privacy-preserving versions of Facebook’s social plugins. Our evaluation shows that SafeButton consumes minimal local disk space and renders social plugins 64% faster than their original versions. Additionally, we describe a pure JavaScript implementation that SNSs can offer as a transparent service without requiring additional software.

### Main Contributions
- A novel design for privacy-preserving social plugins that prevents SNSs from tracking browsing activities while providing the same functionality as existing plugins.
- Implementation of SafeButton, a Firefox extension that supports Facebook’s social plugins.
- Evaluation demonstrating the feasibility of our design in terms of functionality, effectiveness, and performance.
- Description of a pure JavaScript implementation that can be offered by SNSs as a transparent service.

---

## 2. User Tracking through Social Plugins

### 2.1 Social Plugins
Social plugins are provided by major SNSs as embeddable widgets, typically in the form of IFRAME elements. When a web page is loaded, the browser fetches and loads the content of the plugin. If the user is logged in, the SNS associates the request with the user's profile and returns personalized content. If the user is not logged in, the plugin displays generic, publicly accessible information.

### 2.2 Privacy Issues
The increasing use of social plugins raises significant privacy concerns. As more sites adopt these plugins, the potential for broader user tracking increases. For example, over 35% of the top 10,000 websites include Like buttons, allowing Facebook to track a large portion of its users' browsing history. Unlike third-party tracking cookies, which track anonymous users, social plugins track named individuals, linking browsing activity to personally identifiable information.

### 2.3 Preventing Privacy Leaks
Users might think logging out of SNSs protects them from privacy leaks, but this is often impractical due to single sign-on features and persistent cookies. Blocking third-party cookies is a mitigation, but it is not enabled by default in most browsers. Even if enabled, there are known bypass techniques. The Do Not Track HTTP header is a promising initiative, but it is not yet supported by SNSs. Privacy-conscious users often turn to browser extensions, but these solutions disable content personalization.

---

## 3. Design

### 3.1 Requirements
Our design for privacy-preserving social plugins is driven by two key requirements:
1. **Functionality**: Provide identical functionality to existing social plugins in terms of content personalization and user interaction.
2. **Privacy**: Avoid the transmission of user-identifying information to the SNS before any user interaction takes place.

User-identifying information includes cookies containing unique user identifiers. IP addresses and browser fingerprints can also be considered personally identifying, but they are less accurate for direct association. Users can mitigate the effect of these signals by using anonymizing tools.

### 3.2 Design Overview
Our design decouples the retrieval of private information from the loading of the plugin. It prefetches all necessary data from the user’s social circle and retrieves any missing non-private data on demand without revealing the user's identity. Local and server-side data are then combined to render a pixel-by-pixel identical version of the personalized content.

### 3.3 Implementation
We have implemented our design in SafeButton, a Firefox add-on that supports seven out of nine Facebook social plugins. Our evaluation shows that SafeButton consumes minimal local disk space (a few megabytes for typical users, up to 145MB for a user with 5,000 friends) and renders social plugins 64% faster than their original versions.

### 3.4 Pure JavaScript Implementation
We also describe a pure JavaScript implementation that SNSs can offer as a transparent service without requiring additional software. This implementation follows the same design principles and ensures that users receive the full experience of social plugins while maintaining their privacy.

---

This revised text aims to provide a clear, coherent, and professional presentation of the research, emphasizing the importance of the problem, the proposed solution, and the contributions.