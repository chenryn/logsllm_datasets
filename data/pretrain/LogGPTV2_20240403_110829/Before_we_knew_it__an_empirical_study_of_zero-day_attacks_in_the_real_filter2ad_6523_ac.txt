disclosure of new vulnerabilities, in order to start exploiting
them, which causes a signiﬁcant risk for end-users.
5.2 Other Zero-day Vulnerabilities
Every year, Symantec analysts prepare an “Internet Secu-
rity Threats Report” (ISTR) in which new threats, vulner-
abilities and malware trends are reported. This report in-
cludes information about the zero-day vulnerabilities iden-
tiﬁed during the previous year. These reports identify 31
between 2008–2011: 9 in 2008, 12 in 2009, 14 in 2010 and
8 in 2011 [33–37]. For each year, our automated method
discovers on average 3 zero-day vulnerabilities that were not
known before and on average 2 zero-day vulnerabilities from
the list reported by Symantec. However, we were not able
Vulnerabilities
60
50
40
30
20
10
0
t0
6
12
18
24
30
Time to exploit [months]
Figure 7: Time before vulnerabilities disclosed be-
tween 2008–2011 started being exploited in the ﬁeld.
The histograms group the exploitation lag in 3-
month increments, after disclosure, and the red rug
indicates the lag for each exploited vulnerability.
The zero-day attacks are excluded from this ﬁgure.
to identify on average 8 known zero-day vulnerabilities per
year.
To understand the reasons why our method missed 24
zero-day vulnerabilities reported in ISTR, we performed a
manual analysis on their characteristics, such as being em-
ployed in highly targeted attacks, applying polymorphism
etc. This study highlights the limitations of our method:
• Web Attacks: anti-virus telemetry only records de-
tections of host-based attacks. To detect web-based at-
tacks, e.g. cross-site scripting attacks, we would need
to analyze network based intrusion-detection data.
While telemetry from Symantec’s intrusion detection
841products is included in WINE, we did not consider
this data set in our study because it is not straightfor-
ward to correlate it with the binary reputation data.
Our method did not detect CVE-2011-2107, CVE-2011-
3765, etc. because these vulnerabilities are exploited
in web attacks.
• Polymorphic malware: another limitation of our
method is that, if the exploit ﬁles created for the zero-
day vulnerabilities are polymorphic, the ﬁle hashes
may be diﬀerent in the anti-virus telemetry in binary
reputation data. Most of the zero-day exploits that
we could not identify were polymorphic, for example,
CVE-2010-0806, CVE-2010-3654, CVE-2009-1537.
• Non-executable exploits: In recent years, exploits
tend to be embedded in non-executable ﬁles such as
pdf, doc, xlsx. Symantec’s anti-virus products pro-
vide detections for such malware, and the anti-virus
telemetry data contains records for detections of non-
executable ﬁles. However, the binary reputation data
only tracks binary ﬁles. Because we use the binary
reputation data to approximate the start dates of at-
tacks, we cannot detect zero-day vulnerabilities that
are exploited by non-executable ﬁles. One workaround
we considered was to link exploits in non-executable
ﬁles with the executable dropped once the exploit is
successful, by establishing correlations through dy-
namic analysis results. Unfortunately, results for non-
executable ﬁles were available only starting in late
2011 (i.e., almost the end of the period covered in our
study). Therefore, the dynamic analysis data set pro-
vided limited beneﬁts. A representative example for
vulnerabilities that we could not detect due to non-
executable ﬁles problem is CVE-2011-0609, which was
exploited in RSA attack [27].
• Targeted attacks: zero-day vulnerabilities are usu-
ally exploited in targeted attacks [37]. Because these
attacks target a limited number of organizations,
which hold sensitive information than can be stolen,
most consumers are not exposed to these attacks. Even
though we analyze binary reputation data collected on
11 million hosts, this may not be is not suﬃcient for
identifying zero-day attacks that are highly targeted.
6. DISCUSSION
Zero-day attacks are diﬃcult to prevent because they ex-
ploit unknown vulnerabilities, for which there are no patches
and no anti-virus or intrusion-detection signatures. It seems
that, as long as software will have bugs and the development
of exploits for new vulnerabilities will be a proﬁtable activ-
ity, we will be exposed to zero-day attacks.
In fact, 60%
of the zero-day vulnerabilities we identify in our study were
not known before, which suggests that there are many more
zero-day attacks than previously thought—perhaps more
than twice as many. However, reputation-based technolo-
gies, which assign a score to each ﬁle based on its prevalence
in the wild and on a number of other inputs [9], single out
rare events such as zero-day attacks and can reduce the ef-
fectiveness of the exploits.
The large fraction of new zero-day vulnerabilities we iden-
tify also emphasizes that zero-day attacks are diﬃcult to
detect through manual analysis, given the current volume
of cyber attacks. Automated methods for ﬁnding zero-day
attacks in ﬁeld data, such as the method we propose in this
paper, facilitate the systematic study of these threats. For
example, our method allows us to measure the duration of
zero-day attacks (Figure 4). While the average duration is
approximately 10 months, the fact that all but one of the
vulnerabilities disclosed after 2010 remained unknown for
more than 16 months suggests that we may be underesti-
mating the duration of zero-day attacks, as the data we an-
alyze goes back only to February 2008. In the future, such
automated techniques will allow analysts to detect zero-day
attacks faster, e.g., when a new exploit is reused in mul-
tiple targeted attacks. However, this will require establish-
ing mechanisms for organizations to share information about
suspected targeted attacks with the security community.
Our ﬁndings also provide new data for the debate on the
beneﬁts of the full disclosure policy. This policy is based
on the premise that disclosing vulnerabilities to the public,
rather than to the vendor, is the best way to ﬁx them be-
cause this provides an incentive for vendors to patch faster,
rather than to rely on security-through-obscurity [29]. This
debate is ongoing [2, 6, 30, 31], but most participants agree
that disclosing vulnerabilities causes an increase in the vol-
ume of attacks. Indeed, this is what the supporters of full
disclosure are counting on, to provide a meaningful incentive
for patching. However, the participants to the debate dis-
agree about whether trading oﬀ a high volume of attacks for
faster patching provides an overall beneﬁt to the society. For
example, Schneier initiated the debate by suggesting that, to
mitigate the risk of disclosure, we should either patch all the
vulnerable hosts as soon as the ﬁx becomes available, or we
should limit the information available about the vulnerabil-
ity [29]. Ozmet et al. concluded that disclosing information
about vulnerabilities improves system security [22], while
Rescorla et al. could not ﬁnd the same strong evidence on a
more limited data set [26]. Arora et al. [4] and Cavusoglu et
al. [8] analyzed the impact of full disclosure using techniques
inspired from game theory, and they reached opposite con-
clusions about whether patches would immediately follow
the disclosure of vulnerabilities.
The root cause of these disagreements lies in the diﬃculty
of quantifying the real-world impact of vulnerability disclo-
sures and of patch releases without analyzing comprehensive
ﬁeld data. We take a ﬁrst step toward this goal by show-
ing that the disclosure of zero-day vulnerabilities causes a
signiﬁcant risk for end-users, as the volume of attacks in-
creases by up to 5 orders of magnitude. However, vendors
prioritize which vulnerabilities they patch, giving more ur-
gency to vulnerabilities that are disclosed or about to be
disclosed. For example, 80% of the 2007 vulnerabilities were
discovered more than 30 days before the disclosure date [12].
Moreover, even after patches become available users often
delay their deployment, e.g., because a typical Windows user
must manage 14 update mechanisms to keep the host fully
patched [13]. At the same time, anecdotal evidence suggests
that attackers also adapt their strategies to the expected
disclosure of zero-day vulnerabilities. For example, the 2004
Witty worm was released less than 48 hours after the vulner-
ability it exploited was disclosed, which raised the suspicion
that the attacker did not utilize a working exploit until the
deployment of the patch was imminent [40]; the exploit ﬁle
used in the 2011 attack against RSA was sent to 15 diﬀerent
organizations in the two weeks leading to the vulnerability’s
842disclosure, in an attempt to exploit is as much as possible
before it was discovered and patched [17]. This is because
early disclosure reduces the value of zero-day vulnerabilities;
for example, some fees for new exploits are paid in install-
ments, with each subsequent payment depending on the lack
of a patch [15]. Additional research is needed for quanti-
fying these aspects of the full disclosure trade-oﬀ, e.g., by
measuring how quickly vulnerable hosts are patched in the
ﬁeld, following vulnerability disclosures. Like our study of
zero-day attacks, answering these additional research ques-
tions will require empirical studies conducted at scale, using
comprehensive ﬁeld data.
7. CONCLUSION
Zero-day attacks have been discussed for decades, but no
study has yet measured the duration and prevalence of these
attacks in the real world, before the disclosure of the corre-
sponding vulnerabilities. We take a ﬁrst step in this direc-
tion by analyzing ﬁeld data collected on 11 million Windows
hosts over a period of 4 years. The key idea in our study
is to identify executable ﬁles that are linked to exploits of
known vulnerabilities. By searching for these ﬁles in a data
set with historical records of ﬁles downloaded on end-hosts
around the world, we systematically identify zero-day at-
tacks and we analyze their evolution in time.
We identify 18 vulnerabilities exploited in the wild before
their disclosure, of which 11 were not previously known to
have been employed in zero-day attacks. Zero-day attacks
last on average 312 days, and up to 30 months, and they
typically aﬀect few hosts. However, there are some excep-
tions for high proﬁle attacks such as Conﬁcker and Stuxnet,
which we respectively detected on hundreds of thousands
and millions of the hosts in our study, before the vulnera-
bility disclosure. After the disclosure of zero-day vulnera-
bilities, the volume of attacks exploiting them increases by
up to 5 orders of magnitude. These ﬁndings have important
implications for future security technologies and for public
policy.
Acknowledgments
We thank Jonathan McCune and Michael Hicks for stimu-
lating discussions on the topic of zero-day attacks. We also
thank Marc Dacier for his early feedback on our results, and
the anonymous CCS reviewers for their constructive feed-
back. Finally, this research would not have been possible
without the WINE platform, built and made available to
the research community by Symantec. Our results can be
reproduced by utilizing the reference data set WINE 2012-
003, archived in the WINE infrastructure.
8. REFERENCES
[1] Adobe Systems Incorporated. Security bulletins and
advisories.
http://www.adobe.com/support/security/, 2012.
[2] R. Anderson and T. Moore. The economics of
information security. In Science, vol. 314, no. 5799,
2006.
[3] W. A. Arbaugh, W. L. Fithen, and J. McHugh.
Windows of vulnerability: A case study analysis.
IEEE Computer, 33(12), December 2000.
[4] A. Arora, R. Krishnan, A. Nandkumar, R. Telang,
and Y. Yang. Impact of vulnerability disclosure and
patch availability - an empirical analysis. In Workshop
on the Economics of Information Security (WEIS
2004), 2004.
[5] S. Beattie, S. Arnold, C. Cowan, P. Wagle, and
C. Wright. Timing the application of security patches
for optimal uptime. In Large Installation System
Administration Conference, pages 233–242,
Philadelphia, PA, Nov 2002.
[6] J. Bollinger. Economies of disclosure. In SIGCAS
Comput. Soc., 2004.
[7] D. Brumley, P. Poosankam, D. X. Song, and J. Zheng.
Automatic patch-based exploit generation is possible:
Techniques and implications. In IEEE Symposium on
Security and Privacy, pages 143–157, Oakland, CA,
May 2008.
[8] H. C. H. Cavusoglu and S. Raghunathan. Emerging
issues in responsible vulnerability disclosure. In
Workshop on Information Technology and Systems,
2004.
[9] D. H. P. Chau, C. Nachenberg, J. Wilhelm, A. Wright,
and C. Faloutsos. Polonium : Tera-scale graph mining
for malware detection. In SIAM International
Conference on Data Mining (SDM), Mesa, AZ, April
2011.
[10] CVE. A dictionary of publicly known information
security vulnerabilities and exposures.
http://cve.mitre.org/, 2012.
[11] N. Falliere, L. O’Murchu, and E. Chien. W32.stuxnet
dossier. http://www.symantec.com/content/en/us/
enterprise/media/security_response/
whitepapers/w32_stuxnet_dossier.pdf, February
2011.
[12] S. Frei. Security Econometrics: The Dynamics of
(In)Security. PhD thesis, ETH Z¨urich, 2009.
[13] S. Frei. End-Point Security Failures, Insight gained
from Secunia PSI scans. Predict Workshop, February
2011.
[14] Google Inc. Pwnium: rewards for exploits, February
2012. http://blog.chromium.org/2012/02/
pwnium-rewards-for-exploits.html.
[15] A. Greenberg. Shopping for zero-days: A price list for
hackers’ secret software exploits. Forbes, 23 March
2012.
http://www.forbes.com/sites/andygreenberg/
2012/03/23/shopping-for-zero-days-an-\
price-list-for-hackers-secret-software-exploits/.
[16] A. Lelli. The Trojan.Hydraq incident: Analysis of the
Aurora 0-day exploit.
http://www.symantec.com/connect/blogs/
trojanhydraq-incident-analysis-aurora-0-day-exploit,
25 January 2010.
[17] R. McMillan. RSA spearphish attack may have hit US
defense organizations. PC World, 8 September 2011.
http://www.pcworld.com/businesscenter/article/
239728/rsa_spearphish_attack_may_have_hit_us_
defense_organizations.html.
[18] M. A. McQueen, T. A. McQueen, W. F. Boyer, and
M. R. Chaﬃn. Empirical estimates and observations
of 0day vulnerabilities. In Hawaii International
Conference on System Sciences, 2009.
[19] Microsoft. Microsoft security bulletins. http://
843technet.microsoft.com/en-us/security/bulletin,
2012.
[20] C. Miller. The legitimate vulnerability market: Inside
the secretive world of 0-day exploit sales. In Workshop
on the Economics of Information Security, Pittsburgh,
PA, June 2007.
[21] OSVDB. The open source vulnerability database.
http://www.osvdb.org/, 2012.
[22] A. Ozment and S. E. Schechter. Milk or wine: does
software security improve with age? In 15th
conference on USENIX Security Symposium, 2006.
[23] P. Porras, H. Saidi, and V. Yegneswaran. An anlysis of
conﬁcker’s logic and rendezvous points.
http://mtc.sri.com/Conficker/, 2009.
[24] Qualys, Inc. The laws of vulnerabilities 2.0.
http://www.qualys.com/docs/Laws_2.0.pdf, July
2009.
[25] T. Dumitraș and D. Shou. Toward a standard
benchmark for computer security research: The
Worldwide Intelligence Network Environment
(WINE). In EuroSys BADGERS Workshop, Salzburg,
Austria, Apr 2011.
[26] E. Rescorla. Is ﬁnding security holes a good idea? In
IEEE Security and Privacy, 2005.
[27] U. Rivner. Anatomy of an attack, 1 April 2011. http:
//blogs.rsa.com/rivner/anatomy-of-an-attack/
Retrieved on 19 April 2012.
[28] SANS Institute. Top cyber security risks - zero-day
vulnerability trends. http://www.sans.org/
top-cyber-security-risks/zero-day.php, 2009.
[29] B. Schneier. Cryptogram september 2000 - full
disclosure and the window of exposure.
http://www.schneier.com/crypto-gram-0009.html,
2000.
[30] B. Schneier. Locks and full disclosure. In IEEE
Security and Privacy, 2003.
[31] B. Schneier. The nonsecurity of secrecy. In Commun.
ACM, 2004.
[32] M. Shahzad, M. Z. Shaﬁq, and A. X. Liu. A large
scale exploratory analysis of software vulnerability life
cycles. In Proceedings of the 2012 International
Conference on Software Engineering, 2012.
[33] Symantec Corporation. Symantec global Internet
security threat report, volume 13.
http://eval.symantec.com/mktginfo/enterprise/
white_papers/b-whitepaper_internet_security_
threat_report_xiii_04-2008.en-us.pdf, April 2008.
[34] Symantec Corporation. Symantec global Internet
security threat report, volume 14.
http://eval.symantec.com/mktginfo/enterprise/
white_papers/b-whitepaper_internet_security_
threat_report_xv_04-2010.en-us.pdf, April 2009.
[35] Symantec Corporation. Symantec global Internet
security threat report, volume 15. http://msisac.
cisecurity.org/resources/reports/documents/
SymantecInternetSecurityThreatReport2010.pdf,
April 2010.
[36] Symantec Corporation. Symantec Internet security
threat report, volume 16, April 2011.
[37] Symantec Corporation. Symantec Internet security
threat report, volume 17.
http://www.symantec.com/threatreport/, April
2012.
[38] Symantec Corporation. Symantec threat explorer.
http://www.symantec.com/security_response/
threatexplorer/azlisting.jsp, 2012.
[39] Symantec.cloud. February 2011 intelligence report.
http://www.messagelabs.com/mlireport/MLI_2011_
02_February_FINAL-en.PDF, 2011.
[40] N. Weaver and D. Ellis. Reﬂections on Witty:
Analyzing the attacker. ;login: The USENIX
Magazine, 29(3):34–37, June 2004.
844