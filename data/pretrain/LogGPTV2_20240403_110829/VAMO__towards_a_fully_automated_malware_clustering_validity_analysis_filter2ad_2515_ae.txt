0.02
0
−0.02
0
100
200
300
Noise Index
(c) Only Missing
Figure 5: VAMO vs. Maj. Voting: Rand Statistic.
C
J
∆
0.8
0.6
0.4
0.2
0
−0.2
0
50
100
150
200
250
Noise Index
(a) F & M (> 1 AV)
C
J
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(b) Only Flips
C
J
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(c) Only Missing
Figure 6: VAMO vs. Maj. Voting: Jaccard Coefﬁcient.
Section 4 and Section 5. Then, given the dendrogram Y obtained
from the third-party malware clustering system [2], we cut Y at
different heights l1, l2, .., ln, thus obtaining a sequence of different
clusterings C(l1), C(l2), .., C(ln). For each of these clustering
results, we used VAMO to compute a set of validity indexes (see
Section 5). Table 2 summarizes our results. The ﬁrst column in
Table 2 reports the value of the hight l at which Y is cut, while the
second column reports the related number of clusters that was ob-
tained from M. For example, by cutting Y at height l = 0.5, M
is partitioned into 187 clusters. The remaining columns represent
the values of ﬁve different external cluster validity indexes (Sec-
tion 3.2) measured by comparing the obtained malware clusters to
VAMO’s reference clustering, as explained in Section 5. We varied
l ∈ [0, 1] at steps equal to 0.01 (in practice, we excluded the ex-
treme values l = 0 and l > 0.8, because they result either into one
malware per cluster or into artiﬁcially large clusters, respectively).
In the interest of space, because the maximum value of the valid-
ity indexes is located between l = 0.3 and l = 0.4, we report the
results at steps of 0.01 only within that range.
As we can see from Table 2, the best value of the cut l is equal
to 0.31, because that is the cut hight at which three out of four
external validity indexes express the fact that there is maximum
agreement between the behavior-based clusters and the AV labels
generated by four different AV scanners. Put another way, VAMO’s
results indicate that the AV labels provide the best explanation of
the underlying malware dataset M when M is partitioned into 301
clusters by cutting Y at l = 0.31.
It is worth noting that the F1 index is the only external validity
index that is not maximum at l = 0.31. However, the value of
0.8436 obtained at l = 0.31 is quite close to the maximum value
of 0.8502 reached at l = 0.33. This result suggests that to ﬁnd the
best conﬁguration parameters for the third-party malware cluster-
ing system, it may be better to consider multiple validity indexes,
rather than focusing only on analyzing precision and recall (and the
related F1 index), as proposed in previous work [2, 11].
7. DISCUSSION
Using AV labels to build a reference clustering has some poten-
tial limitations, even though the label inconsistencies can be mit-
igated using VAMO. First, we need to take into account that the
features used by the AVs to characterize malware samples and as-
sign them to a given malware family may be different from the
features used by a third-party malware clustering system to mea-
sure the similarity among samples. For example, AV vendors of-
ten base their malware categorization process on features extracted
from reverse engineering the malware binaries. On the other hand,
behavior-based malware clustering systems leverage features re-
lated to the malware’s system [2] or network activities [15], for ex-
ample. Naturally, different features may highlight different types of
similarities in the samples. Therefore, while the AV labels clearly
represent a valuable point of reference, especially in absence of a
more perfect ground truth, the comparison between behavior-based
malware clustering results and AV family labels should be taken
with a grain of salt. A similar argument is made in [4], in which
the authors outline the potential pitfalls of using labeled datasets
meant for training and testing of supervised learning algorithms
for evaluating the effectiveness of (unsupervised) clustering algo-
rithms. Nonetheless, AV label-based cluster validity analysis, espe-
cially when fully automated such as in VAMO, is certainly a valu-
able tool that can assist malware analysts in the analysis of their
malaware clustering results.
Another factor to consider is the fact that AV labels evolve in
time. That is, a malware sample m assigned by an AV to family
fi at time t0, may be “renamed” by the same AV as belonging to
a different family fj at a future time t1 > t0. This is due to the
fact that AV signatures are sometimes reﬁned by the AV vendors to
reduce possible false positives and more speciﬁcally characterize
the malware samples (e.g., by assigning a sample previously la-
beled as “generic” to a more speciﬁc malware family). To take this
into account, the historic archive of malware labels used by VAMO
should be kept updated. This may be done by either periodically re-
scanning the malware dataset, or by querying online services such
as virustotal.com.
8. CONCLUSION
In this paper, we presented a novel system, called VAMO, that
provides a fully automated assessment of the quality of malware
clustering results. Previous studies propose to evaluate malware
clustering results by leveraging the labels assigned to the malware
samples by multiple AVs. However, they require a manual mapping
M
F
∆
1
F
∆
0.8
0.6
0.4
0.2
0
−0.2
0
0.8
0.6
0.4
0.2
0
−0.2
0
M
F
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(b) Only Flips
M
F
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(c) Only Missing
50
100
150
200
250
Noise Index
(a) F & M (> 1 AV)
Figure 7: VAMO vs. Maj. Voting: Folkes-Mallows.
1
F
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(b) Only Flips
1
F
∆
0.8
0.6
0.4
0.2
0
−0.2
0
100
200
300
Noise Index
(c) Only Missing
50
100
150
200
250
Noise Index
(a) F & M (> 1 AV)
Figure 8: VAMO vs. Maj. Voting: F1 Index.
between labels assigned by different AV vendors, and are limited
to selecting a reference sub-set of samples for which an agreement
regarding their labels can be reached across a majority of AVs.
Unlike previous work, VAMO does not require a manual map-
ping between malware family labels output by different AV scan-
ners. Furthermore, VAMO does not discard malware samples for
which a majority voting-based consensus cannot be reached. In-
stead, VAMO explicitly deals with the inconsistencies typical of
multiple AV labels to build a more representative reference set. Our
evaluation, which includes extensive experiments in a controlled
setting and a real-world application, show that VAMO performs
better then majority voting-based approaches, and provides a way
for malware analysts to automatically assess the quality of their
malware clustering results.
Acknowledgments
This material is based in part upon work supported by the National
Science Foundation under Grant No. CNS-1149051. Any opin-
ions, ﬁndings, and conclusions or recommendations expressed in
this material are those of the authors and do not necessarily reﬂect
the views of the National Science Foundation.
References
[1] M. Bailey, J. Oberheide, J. Andersen, Z. M. Mao, F. Jahanian,
and J. Nazario. Automated classiﬁcation and analysis of in-
ternet malware. In Recent Advances in Intrusion Detection,
2007.
[2] U. Bayer, P. Milani Comparetti, C. Hlauschek, C. Kruegel,
and E. Kirda. Scalable, behavior-based malware clustering. In
Network and Distributed System Security Symposium, 2009.
[3] M. Christodorescu, S. Jha, and C. Kruegel. Mining speciﬁ-
cations of malicious behavior. In ACM SIGSOFT symposium
on the foundations of software engineering, ESEC-FSE ’07,
2007.
[4] I. Färber, S. Günnemann, H. Kriegel, P. Kröger, E. Müller,
E. Schubert, T. Seidl, and A. Zimek. On using class-labels
in evaluation of clusterings. In MultiClust: 1st International
Workshop on Discovering, Summarizing and Using Multiple
Clusterings Held in Conjunction with KDD, 2010.
[5] E. B. Fowlkes and C. L. Mallows. A method for comparing
two hierarchical clusterings. Journal of the American Statis-
tical Association, 78(383):553–569, 1983.
2010, April 2011.
[6] F. Guo, P. Ferrie, and T. Chiueh. A study of the packer prob-
lem and its solutions. In Recent Advances in Intrusion Detec-
tion, 2008.
[7] M. Halkidi, Y. Batistakis, and M. Vazirgiannis. On clustering
validation techniques. J. Intell. Inf. Syst., 17(2-3):107–145,
2001.
[8] X. Hu, T.-c. Chiueh, and K. G. Shin. Large-scale malware in-
dexing using function-call graphs. In Proceedings of the 16th
ACM conference on Computer and communications security,
CCS ’09, 2009.
[9] A. K. Jain and R. C. Dubes. Algorithms for clustering data.
Prentice-Hall, Inc., 1988.
[10] A. K. Jain, M. N. Murty, and P. J. Flynn. Data clustering: a
review. ACM Comput. Surv., 31(3):264–323, 1999.
[11] J. Jang, D. Brumley, and S. Venkataraman. Bitshred: feature
hashing malware for scalable triage and semantic analysis. In
Proceedings of the 18th ACM conference on Computer and
communications security, CCS ’11, 2011.
[12] P. Li, L. Liu, D. Gao, and M. K. Reiter. On challenges in
evaluating malware clustering.
In Proceedings of the 13th
international conference on Recent advances in intrusion de-
tection, RAID’10, 2010.
[13] F. Maggi, A. Bellini, G. Salvaneschi, and S. Zanero. Finding
non-trivial malware naming inconsistencies. In International
Conference on Information Systems Security, ICISS’11, 2011.
[14] M. Meil˘a. Comparing clusterings—an information based dis-
tance. J. Multivar. Anal., 98(5):873–895, May 2007.
[15] R. Perdisci, W. Lee, and N. Feamster. Behavioral clustering of
http-based malware and signature generation using malicious
network traces. In Proceedings of the 7th USENIX Symposium
on Networked Systems Design and Implementation, NSDI’10,
2010.
[16] D. Pﬁtzner, R. Leibbrandt, and D. Powers. Characterization
and evaluation of similarity measures for pairs of clusterings.
Knowl. Inf. Syst., 19(3):361–394, May 2009.
[17] E. Rend ˚Un, I. Abundez, A. Arizmendi, and E. M. Quiroz.
Internal versus external cluster validation indexes. university-
pressorguk, 5(1), 2011.
[18] K. Rieck, P. Trinius, C. Willems, and T. Holz. Automatic anal-
ysis of malware behavior using machine learning. J. Comput.
Secur., 19(4):639–668, Dec. 2011.
[19] Symantec. Symantec internet security threat report, trends for