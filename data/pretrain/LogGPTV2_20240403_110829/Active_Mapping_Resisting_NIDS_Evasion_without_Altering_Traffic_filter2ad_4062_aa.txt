# Title: Active Mapping: Resisting NIDS Evasion Without Altering Traffic

# Authors:
- Umesh Shankar
- Vern Paxson

## Abstract
A critical challenge for Network Intrusion Detection Systems (NIDS) is the ambiguity in determining which traffic reaches a given host and how that host interprets the traffic. Attackers can exploit this ambiguity to evade detection or trigger false alarms. We present a lightweight solution, Active Mapping, which resolves TCP/IP-based ambiguities with minimal runtime cost. Active Mapping efficiently builds profiles of the network topology and TCP/IP policies of hosts, enabling the NIDS to disambiguate network traffic on a per-host basis. Unlike traffic normalization, which modifies traffic streams, Active Mapping avoids semantic and performance issues. We have implemented a prototype of Active Mapping and integrated it into a NIDS, demonstrating significant variation in TCP/IP stack policies across operating systems in real-world tests (approximately 6,700 hosts), highlighting the need for such disambiguation.

## 1. Introduction
A Network Intrusion Detection System (NIDS) passively monitors network traffic, searching for suspicious activity as defined by its protocol analyzers. To accurately analyze traffic, the NIDS must determine which packets reach the target host and interpret them exactly as the host does. This task is equivalent to the NIDS performing a complete and precise simulation of the network and host machines, focusing on the network and transport layers. The primary obstacle is ambiguity: the diversity of network topologies and TCP/IP stack policies makes it impossible for the NIDS to know the correct interpretation without additional context.

This ambiguity can lead to a divergence between the host's interpretation and the NIDS's belief, allowing attackers to trick the NIDS into missing an attack or causing confusion. Ptacek and Newsham [PN98] describe specific methods for exploiting TCP/IP layer ambiguities, and toolkits like [So02, Mc98] automate these techniques. Therefore, resolving TCP/IP-based ambiguities is of practical importance.

In this paper, we introduce Active Mapping, a novel approach to eliminate TCP/IP ambiguity. Active Mapping acquires sufficient knowledge about the intranet being monitored, enabling the NIDS to determine which packets will reach their intended recipient and how they will be interpreted. This is achieved by building a profile database of key properties of the monitored hosts and the network topology. Profiles are constructed by sending specially crafted packets to each host and interpreting the responses to determine path properties and TCP/IP policies.

Previous work proposes using a traffic normalizer [HKP01] to eliminate ambiguity. The normalizer rewrites incoming traffic into well-formed streams, reducing ambiguity but introducing performance and robustness issues. Active Mapping, on the other hand, resolves ambiguities without modifying the traffic, offering operational and semantic advantages.

## 2. Design

### 2.1 Assumptions
To perform mapping efficiently, we make the following assumptions about the network:
- **Stable Topology**: The network topology is relatively stable.
- **External Attacker**: The attacker is outside the network, and malicious insiders cannot change or drop specific packets.
- **Firewall Presence**: A firewall is available for simple packet-level filtering.
- **Consistent Host Behavior**: Hosts' TCP/IP stacks behave consistently within ordinary parameters.

### 2.2 Design Goals
- **Comparable Runtime Performance**: Active Mapping should not significantly slow down the NIDS or increase its memory requirements.
- **Lightweight Mapping**: The bandwidth consumed by mapping packets should be minimal, and the process should be completed quickly.
- **Avoid Harming Hosts**: Mapping should not trigger vulnerabilities in hosts' TCP/IP implementations.

### 2.3 Architecture
Our strategy involves an independent Active Mapping machine that scans each host on the internal network, building a profile of the network path and TCP/IP stack properties. These profiles are stored in a database. At runtime, the NIDS uses the database to resolve potential ambiguities. For example, the NIDS can use host profiles to decide whether to accept or discard SYN data in TCP packets based on the host's policy.

The mapping tool runs on a machine topologically equivalent to the link the NIDS is watching, typically between the firewall and any internal routers. The NIDS is configured to ignore traffic to and from the mapping machine. The mapper begins by performing service discovery, hop count, and Path MTU (PMTU) determination. It then conducts a variety of IP and TCP tests to generate host profiles.

## 3. Active Mapping: Details and Limitations

### 3.1 Firewall Filters
Certain simple cases should be handled by stateless packet filtering at the firewall:
- Verifying IP header checksums
- Ingress and egress filtering
- Blocking packets to broadcast addresses or reserved private address spaces

### 3.2 Key Mappings
- **Hop Count Determination**: Determines the number of hops between the NIDS and the target host.
- **Path MTU Determination**: Determines the Maximum Transmission Unit over the path to the host.
- **TCP RST Acceptance**: Ensures that a TCP RST packet is accepted only if it is within the receiver's window.

### 3.3 Additional Concerns
Active Mapping has some additional concerns, particularly regarding timing. Normalized traffic is generally not subject to IP fragment timeouts, which can be a challenge. Other cases, such as handling NATs and DHCP, are also discussed.

## 4. Implementation
We have implemented a prototype of Active Mapping and tested it on a network of approximately 6,700 hosts. Our tests show that the increased precision in analysis does not come with significant performance or memory costs. Detailed results are presented in Section 5.

## 5. Results
- **Network Mapping**: We present the results of mapping real-world networks and integrating Active Mapping with a NIDS.
- **Performance and Findings**: We discuss the performance and findings of our tests, including the minimal impact on NIDS runtime and memory usage.

## 6. Related Work
We provide an overview of related work, including the potential symbiotic relationship between Active Mapping and normalization.

## 7. Conclusion
We summarize our findings and conclude that Active Mapping is an effective and lightweight solution for resolving TCP/IP-based ambiguities in NIDS, without the need to alter traffic.

## Appendix
We cover the complete spectrum of TCP/IP mappings, providing a detailed list of the Active Mapping approach to every normalization in [HKP01].