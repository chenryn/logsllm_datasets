skewness, which affects the performance of our algorithm
directly. Finally, we describe the detailed operations of of
FSTR.
A. Overview
Our FSTR algorithm mainly consists of three parts: route
discovery, route selection and transaction execution.
Route Discovery. Route discovery refers to the process of
probing the candidate paths for a given transaction with the
amount a. It is realized roughly by a breadth ﬁrst search. To
save route discovery cost, include routing table in FSTR. If
an existing route entrance is found, the intermediate node will
stop searching.
Route Selection. When the receiver receives enough routing
request packets, candidate paths are discovered. The receiver
will evaluate these paths via the funds skewness based metric
ΔΦi, whose deﬁnition and calculation will be described in the
following subsection. The path with the maximum ΔΦi will
be selected. Then, the receiver sends the information of the
selected path to the sender directly. On the other hand, if no
feasible paths are discovered, the routing fails. Routing fails
can be addressed by establishing new channels or changing
channel funds, which is out of the scope of our paper.
Transaction Execution. After the path is selected, the trans-
action will be executed. The sender generates the transaction
execution packet and propagates it along the selected path.
During the execution, each intermediate node needs to execute
funds transfer required by the transaction and update its
routing table.
B. Funds Skewness based Metric
We ﬁrstly deﬁne the skewness of a channel, and then deﬁne
the skewness of a path. For a payment channel connecting
two nodes u and v, we denote the skewed value from node
u to node v by ϕuv, while the skewed value from node v
to node u by ϕvu. In addition, fa(u, v) and fs(u, v) denote
the average funds and the sum of funds of the channel
respectively. Obviously, they are the same with fa(v, u) and
fs(v, u) correspondingly. ϕuv is calculated as:
ϕuv = f (u, v) − fa(u, v)
fs(u, v)
.
(5)
At the same time, we can calculate the value of ϕvu as follows:
ϕvu = f (v, u) − fa(v, u)
fs(v, u)
= fs(u, v) − f (u, v) − fa(u, v)
fs(u, v)
= fa(u, v) − f (u, v)
.
fs(u, v)
(6)
467
Fig. 2. Three Calculation Methods of Funds Skewness
Thus, we can ﬁnd the relationship between ϕuv and ϕvu is
that:
ϕuv = −ϕvu.
(7)
It’s not hard to see that the positive and negative signs of the
skewed value indicate the skewness direction. For example, if
ϕuv > 0, funds are inclined to u, which means that u has
more funds than v in the channel. In this case, we’re more
likely to support routing transactions from u to v rather than
from v to u.
Now, let consider the skewness value of a multi-hop path.
The simplest way to calculate path skewness is to use the
simple average skewness values of the channels in the path.
Obviously, such an average cannot reﬂects the tradable funds
correctly. Our solution is to weight the skewed value of each
payment channel ﬁrst, so that the effect of the skewness of
a single payment channel on the path is not linear with its
value. Then we calculate the average skewed value of the path
from the weighted value. We propose three weighted-based
calculation methods to calculate path skewness, where ϕuv
represents the original skewed value of the payment channel
and θuv represents the weighted value of ϕuv. Please note that,
the ﬁrst method is not substantially weighted, resulting from
the fact that we use it as a base method to compare with the
latter two methods.
(cid:2)
Method (i):
Method (ii):
Method (iii):
θuv =
(cid:2)
θuv =
θuv = ϕuv
−ϕ2
ϕ2
uv,
uv, ϕuv  0, it indicates that if t is executed on p,
the funds of p will be closer to the balanced state, and we can
conclude that t plays a correction role in the funds skewness
of p. On the contrary, if ΔΦ  maxΔΦ) or
(ΔΦ == maxΔΦ and REQi.hop < bestREQ.hop)
then
bestREQ = REQi
maxΔΦ = ΔΦ
7:
8:
end if
9:
10: end for
11: REP = initializeREP (bestREQ)
12: SendT oSender(REP )
table is shown in Table I. Each row in the routing table is a
routing record with multiple columns, e.g., destination, next
hop, funds, skew value, average skewed value, length. Please
note that we allow multiple records with the same destination
but different path trajectories to exist in the same routing table.
In Algorithm 3, we present the pseudo-code of the transac-
tion execution process. The sender s generates the transaction