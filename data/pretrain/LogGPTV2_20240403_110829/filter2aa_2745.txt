19.07.2013
DEX EDUCATION 201
ANTI-EMULATION
TIM STRAZZERE - HITCON 2013
Friday, July 19, 13
WHOAMI
• Lead Research & Response Engineer @ 
Lookout Mobile Security (yes.. an av)
• Reversed the Android Market/Google Play 
Protocol
• Always enjoyed reversing “exotic” 
platforms, writing tools to automate the 
mundane
• Junkie for reversing mobile malware, 
creating write ups and teaching other to 
help raise the bar
Friday, July 19, 13
AGENDA
• Recap of Dex Education 101
• Who is evading emulators / How is it done
• Who is hiding emulators / How is it done
• Easy detection - Hard time hiding
• Basic emulator detection / QEMU-FOO
• “Advanced” detection of emulator systems
• TLDR; Conceptualizing detection
Friday, July 19, 13
RECAP OF DEX EDUCATION 101
• Decompilers and disassemblers are easy to 
break but no one was doing it!
• Predicting these breakages can help up 
prevent and detect attacks
• Advances since then;
• DexGuard
(“Most sophisticated Android Malware”)
• HoseDex2Jar
• Slides available:
www.strazzere.com/papers/DexEducation-PracticingSafeDex.pdf
Friday, July 19, 13
RECAP OF DEX EDUCATION 101
• HoseDex2Jar used the “big ego” tactic of 
injecting ﬁles into the header
• Author even said hiTim in one of his 
method names (HOW NICE)
• github.com/strazzere/dehoser
• Latest example uses some simple crypto 
inside of native code - go play!
Friday, July 19, 13
Friday, July 19, 13
WHO IS EVADING EMULATORS?
• Security Researchers
• Game cheaters / “hackers”
• Devs against competition
• Malware authors (?)
Friday, July 19, 13
MOTIVE FOR EVASION?
• Games detect emulators to prevent 
cheating/abuse
• Must uniquely identify devices to 
prevent referral abuse/easy cheating
• Attempt to stop farming/cheats 
• App devs want to “protect” secrets
• Security researchers want to break stuff, 
get famous and pwn people
• duh!
• Malware authors want to avoid detection of 
their “products”
Friday, July 19, 13
DETECTION IMPORTANT?
• Games / App / Research / Malware
• All have different use cases and trying 
to detect different segments
• Games want to raise bar for cheating 
without FP
• Security researchers... Prevent getting 
pwned and hacing a talk at BH
• AV’s want broad detection without FP
Friday, July 19, 13
EVASION DETECTION IS DIFFERENT
• Games / Apps want to detect and phone 
home
• Either alert devs of abuse, or just fail to 
work properly
• Security researchers might just want to 
probe your infrastructure...
• Has anyone ever probed Bouncer? (oh 
wait... hi Charlie/JonO!)
• AV’s want malware to perform their 
payloads while they watch
• If detected, malware won’t perform 
detected/wanted behaviors
Friday, July 19, 13
HOW DO PEOPLE EVADE EMUS?
• is phone number == 15555215554
• is imei == 012345678912345
• is device id == 000000000000000
• is build.MODEL == sdk || generic
• Traditional “red pills”
• Bluebox/Dexterlabs produced some 
timing issue based red pills
• Super interesting to develop/detect
• Maybe not “practical”
Friday, July 19, 13
• Hex edit img(unsuprisingly)
• Change the phone 
number
• Change the IMEI
• Change device id
• Change the ﬁngerprints
• http://vrt-blog.snort.org/
2013/04/changing-imei-
provider-model-and-
phone.html
HOW ARE PEOPLE HIDING EMUS?
Friday, July 19, 13
EASY EMULATION DETECTION
• QEmu wasn’t made for hiding
• REAL HARDWARE  Host  Android 
Client
• The “hardware” is inside the Host, so radio/
gps/camera are communicated through 
QEmu pipes
• Pipes are _not_ hidden
• QEmu relies on lots of values initialized in 
system properties and a decently heavy 
infrastructure
Friday, July 19, 13
GETPROPS == GET EMU
Friday, July 19, 13
GETPROPS == GET EMU
Friday, July 19, 13
GETPROPS == GET EMU
• There are many things that appear “odd” in 
emulators
• Just masking “odd” ones might not be 
enough
• Smart attackers know their targets / could 
selectively attack
• Could use geographical context to help 
emulator applications predictable contexts
• a (well done) APT evasion scenario might be 
impossible to predict
Friday, July 19, 13
GETPROPS == GET EMU
• How are they getting these properties?
Friday, July 19, 13
GETPROPS == GET EMU
• How are they getting these properties?
• Reﬂection! Trap it for a hopeful win
• Hook the getprop command ?
(https://github.com/poliva/ldpreloadhook)
Friday, July 19, 13
I’M A POWER USER, I USE TAINT
• Taintdroid is powerful!
• It is however, _not_ stealth
• Taintdroid != emulation
• Can run on “real” devices
• Talks on exﬁltration of data on taintdroid
• Why bother unless targeting that 
system?
• Why not just detect and remain silent!
Friday, July 19, 13
TAINTED?
• Detection of taint is relatively easy
Friday, July 19, 13
TAINTED?
• Detection of taint is relatively easy
• Is package name “org.appanalysis” available
Friday, July 19, 13
TAINTED?
• Detection of taint is relatively easy
• Is package name “org.appanalysis” available
Friday, July 19, 13
TAINTED?
• Detection of taint is relatively easy
• Is package name “org.appanalysis” available
Friday, July 19, 13
CHECK THE PLUMBING
• Like previously said
QEmu wasn’t made for hiding
• “Pipes” talk to the host environment
• Publicly exposed and available if you have 
an internet permission
Friday, July 19, 13
CHECK THE PLUMBING
• Easily found pipes;
• /dev/qemu_pipe
• /dev/socket/qemud
• Simple ﬁle check can suffice
• Connect for extra fun :D
Friday, July 19, 13
CHECK THE PLUMBING
• Hiding these pipes is non-trivial
• Hardcoded / used plenty across codebase
• Used in many ﬁles, most of which stand out 
themselves;
• /system/lib/
libc_malloc_debug_qemu.so
• /sys/qemu_trace
• /system/bin/qemu-props
Friday, July 19, 13
CHECK THE PLUMBING
• Drivers are pretty easily spotted as well
• Just follow the goldﬁsh
Friday, July 19, 13
• How many devices are 
being targeted?
• Know the targets
• Do people who download 
infected Angry Birds have 
NO data?
CHECKING THE CONTENT
Friday, July 19, 13
• How many toll fraud 
targets are there?
• Do they normally send 
NO sms?
• Malware already has 
access to these...
CHECKING THE CONTENT
Friday, July 19, 13
• People may not use 
smartphones as phones 
much
• But is it expected that 
they’ve never made a 
call? Ever?
CHECKING THE CONTENT
Friday, July 19, 13
• Is the device always 
“charging”?
• But is always at 50%?
• Never roaming?
• Always at emulator 
defaults?
CHECKING THE CONTENT
Friday, July 19, 13
CONTENT IS KEY
• Malware authors know who they target
• They also know who they can affect
• Large dynamic emulator systems need 
context and content
• Emulation must be emulating the victim, 
not just the victims system
Friday, July 19, 13
CONCEPTUALIZING DETECTION
• Talk with fG+; economics are importnat
• People (malware authors) want a ROI
• Low bar for detection means less work
• Less work on the code leads to more work 
on infections
• Talk at defcon about investigating Russian 
Toll Fraud
• They essentially run agile shops!
Friday, July 19, 13
THANKS!
@timstrazz
PI:EMAIL
strazzere.com/blog
github.com/strazzere
Should follow for good info;
@osxreverser @snare @pof @jduck @thomas_cannon 
@TeamAndIRC @Gunther_AR
Greets;
fG!, Lohan+, jcase, jon larimer, zuk, jduck, JF, pof, thomas cannon, snare, crypto girl, 
collinrm, gunther and others
Friday, July 19, 13