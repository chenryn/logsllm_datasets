title:The Design of a Trustworthy Voting System
author:Nathanael Paul and
Andrew S. Tanenbaum
2009 Annual Computer Security Applications Conference
The Design of a Trustworthy Voting System 
PI:EMAIL, PI:EMAIL 
Nathanael Paul and Andrew S. Tanenbaum 
Vrije Universiteit, Amsterdam, The Netherlands 
Abstract – After the voting debacle in the Florida Presidential 
election  of  2000  with  its  now-fabled  hanging  chads  and 
pregnant chads, many voting jurisdictions turned to electronic 
voting  machines.  This  transition  has  had  at  least  as  many 
problems as punch-card systems and added the additional one 
of  making  recounts  impossible.  As  a  result,  many  jurisdic-
tions have gone back to paper ballots in despair. We believe 
that  electronic  voting  can  have  many  benefits  including  ac-
cessibility  and  usability  but  requires  regarding  voting  as  a 
system of which the voting machine is only a (small) part. In 
this  paper  we  describe  all  the  components  of  an  electronic 
voting  system  that  is  practical  and  difficult  to  tamper  with. 
We emphasize the importance of systems aspects, defense in 
depth, and being paranoiac. 
1.  Introduction 
     Seven  years  ago,  the  Help  America  Vote  Act  (HAVA) 
was passed to prevent a repetition of the 2000 Florida Presi-
dential election. With HAVA’s funding, states replaced their 
punch  card  voting  systems  and  lever  voting  machines  with 
new  electronic  voting  machines.  These  new  machines  were 
adopted  to  enhance  election  integrity  by  producing  an 
accurate  tally  while  supposedly  protecting  the  votes  from 
being  maliciously  changed,  but  the  machines  are  unfortun-
ately still plagued with a multitude of problems [12]. In many 
cases  voting  machine  errors  are  not  auditable,  especially 
when there is no voter-verifiable paper audit trail (VVPAT). 
In  addition  to  the  typical  irregularities  and  unexplainable 
errors [11, 43], many of these machines have been shown to 
be rife with security problems [2, 5, 13, 16, 24, 25, 36]. This 
stream of problems is eroding voters’ faith in voting systems, 
and election integrity is in jeopardy. 
     In the past, voting systems were used for a single purpose: 
determining who got the most votes. As new voting systems 
have  been  introduced,  designers  have  added  new  and  pre-
viously nonexistent features such as allowing voters to verify 
their own votes and also the final tally. However, straightfor-
ward ways that allow a voter to verify how he voted also al-
lows  him  to  sell  his  vote  and  prove  it  to  a  buyer,  so  recent 
electronic  voting  research  allows  verification  but  prevents 
vote selling (and its cousin, voter coercion, which is the same 
thing except the voter is an unwilling participant and does not 
get paid) [3, 6]. While verification and resistance to vote sell-
ing are desirable, their inclusion in proposals has led to com-
plex  designs  that  few  legislators  or  voters  can  understand. 
While many of the solutions implementing these features are 
elegant, the features themselves have little to do with election 
integrity (e.g., a recently deceased registered voter’s vote can 
still  be  cast).  In  our  view,  maintaining  the  integrity  of  the 
election is paramount and features achieving other properties 
are secondary. 
     Our goal is to design an electronic voting system that re-
stores  voter  confidence  through  its  simplicity  and  security. 
The  overall  design  is  different  than  most  voting  systems  as 
we  focus  on  designing  an  entire  electronic  voting  system 
from beginning to end. Although other paper-based systems 
have  recently  been  introduced  [7,  8,  14,  35],  these  schemes 
are  outside  the  scope  of  this  paper  because  of  their  paper-
based  design.  Our  motivation  is  that  a  well-designed  elec-
tronic voting system has several benefits including improved 
accessibility  such  as  audio  for  the  blind,  cheaper  and  faster 
reporting  of  the  tentative  vote  tally,  and  more  flexibility  in 
displaying custom ballots (e.g., ballots in multiple languages, 
a  larger  font  for  the  elderly,  prevention  of  overvotes,  and 
feedback on undervotes). 
     In  addition  to  these  benefits,  complexity  remains  as  a 
challenge to a voting system’s acceptance. Voters and legis-
lators  who  do  not  understand  a  complex  voting  system  will 
not accept it. Not only is a simpler system more likely to be 
understood and accepted, but it should be  more robust. Un-
like  the  people  running  other  complex  systems  (like  air-
planes),  the  people  running  a  voting  system  may  want  it  to 
fail (i.e., be able to secretly  modify the results)  for partisan 
reasons.  Because  of  the  challenge  of  building  a  dependable 
electronic  voting  machine  that  is  resistant  to  failure  (from 
attack or error), the voting machines must not be able to un-
detectably  alter  election  integrity.  This  can  be  achieved  by 
having the  machines print  voter-verifiable paper ballots and 
paper  receipts  to  ensure  election  integrity  is  independent  of 
the voting machine’s operation [37]. 
Contributions.  We  present  a  transparent  voting  system  from 
the  very  beginning  of  an  election  to  the  final  tally,  specifying 
exactly  how  a  Trusted  Platform  Module  (TPM)  is  used, 
presenting  a  scheme  that  enhances  registration  integrity,  and 
introducing a design that prioritizes election integrity (An earlier 
introductory  version  of  this  work  is  also  available  [32]).  We 
have developed a nine-step voting system that takes place from 
an election’s inception to its final conclusion (Section 3). Where 
possible, we have used standard cryptographic primitives and a 
TPM throughout the design. While others mention using trusted 
hardware [10, 21, 39], we specify the TPM’s use in detail and 
take  advantage  of  its  existing  PKI  infrastructure  (Section  3). 
Because of new concern over registration integrity [31, 33, 42], 
we have also added a new component that better ties registration 
into  the  act  of  voting  (Section  3,  Step  2).  Our  verification 
process is different from most current voting systems as a voter 
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.54
507
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:11:35 UTC from IEEE Xplore.  Restrictions apply. 
can easily check if, and how, his or her own vote was counted 
(See Section 3, Step 9). 
2.  Assumptions 
     We make four assumptions: (1) each voting machine has a 
TPM  and  a  mechanism  to  perform  run-time  attestation 
(current  voting  machines  do  not  support  this);  (2)  advance 
voter registration is required (making it unsuitable for some 
states);  (3)  voters  can  use  and  write  down  a  password 
established  at  registration  time  to  be  used  on  election  day; 
and (4) human-readable receipts that plainly show the voters’ 
choices can be printed by the voting machines. 
     TPMs are attractive for use in voting machines mainly for 
their hardware protection of cryptographic keys. This work is 
among the first to explicitly detail how a TPM should be used 
in  an  election  –  specifically  in  how  to  handle  keys  and  for 
software  attestation.  We  do  not  solve  the  key  management 
problem, but we offer an approach to manage voting system 
keys  using  the  TPM’s  established  PKI.  In  addition  to  key 
management,  we  use  the  TPM  to  attest  different  software 
used  throughout  our  voting  system.  By  using  open  source 
software,  and  allowing  voters  to  verify  that  the  published 
open source software is running at the time they vote, people 
will  have  more  faith  that  the  election  is  being  run  honestly 
[17]. People are more likely  to trust a  voting  system that  is 
more transparent and allows source code inspection. 
     If  a  voter,  poll  worker,  or  other  third  party  chooses  to 
attest the voting machine software, successful attestation tells 
him that it is likely that the machine is running that software 
and  the  machine  is  not  recording  private  information  (We 
assume that compromising the machine’s hardware on which 
attestation  depends  is  a  nontrivial  problem).  Due  to  the 
possibility  of  hardware  compromise,  we  use  paper  ballots 
with  paper  receipts,  and  this  prevents  a  machine  from 
undetectably  altering  a  vote  as  long  as  the  voter  checks  the 
receipt. If there is a discrepancy between the electronic and 
paper record, the paper is the final and trusted result. 
     We additionally assume that voter registration is required. 
This rules out using this type of design in a state where ad-
vance registration is not required, but states can change legis-
lation  to  use  this  system.  Recently,  the  media  have  given 
much attention to registration integrity, and many states have 
had problems in maintaining their registration databases [42]. 
In  1997,  Florida  uncovered  a  corrupt  Miami  Mayoral  elec-
tion,  and  they  experienced  registration  problems  when  they 
purged their voter database to stop double voting or voting by 
the  dead  [29].  Recent  problems  with  the  voter  database  in 
New Mexico has also cast light on this problem [9]. Our sys-
tem uses an append-only voter registration database that pro-
vides a clear record of all database changes. While using an 
append-only database is not novel, this is one of the first vot-
ing systems to integrate a registration integrity solution into 
its design. 
508
     To  enforce  registration  integrity,  part  of  the  registration 
process  requires  the  voter  to  create  (and  optionally  write 
down) a password. Requiring a password is similar to other 
voting systems that require passcodes for the voters [18]. In 
our system, a password is required in order to vote (a fail-safe 
is provided), but this is the only additional burden that most 
voters  will  experience.  The  voter  can  ignore  other  slightly 
more complicated parts of our voting system (e.g., interaction 
with  a  TPM  via  attestation),  and  this  simple  password 
protects votes from being stolen at the precinct. 
     Recent  cryptographic  voting  research  has  attempted  to 
solve  the  problem  of  vote  selling  while  also  providing 
auditability through receipt verification. Many of the current 
electronic  voting  systems  do  not  allow  verification  (e.g., 
currently  deployed  ES&S,  Diebold,  etc.),  and  using  these 
systems  for  an  election  has  proven  disastrous  [12,  26,  40]. 
Without  the  ability  of  producing  a  reliable  audit,  many 
question  the  election  outcome.  Due  to  these  problems  in 
auditability,  our  system  does  not  equally  value  vote  selling 
resistance  and  auditability.  The  main  priorities  are  election 
integrity and having voters understand the system. 
     The lack of auditability has decreased voter confidence in 
current election systems [4], and many voters are turning to 
absentee ballots. In just four years, early voting has increased 
to approximately 30% of all votes, an increase of 10% over 
the 2004 presidential election [28]. Of these early votes, the 
available 2008 election data clearly shows that mail-in votes 
are  a  significant  percentage  of  all  votes  cast.  With  few 
reported  problems  of  vote  selling  and  so  many  problems  of 
auditability,  we  emphasize  auditability  over  vote  selling  by 
using human-readable ballots and receipts. 
     In  addition  to  auditability,  human-readable  ballots  and 
receipts  are  essential  for  building  voter  trust.  If  voters  and 
politicians  do  not  understand  the  system,  then  they  will  not 
have confidence in the system, and recounts will become less 
meaningful. Our idea of using human-readable receipts is not 
new [34]. In fact, most believe that introducing the possibility 
of vote selling makes the voting problem trivial, but it is not. 
Making  a  trustworthy  electronic  voting  system  (trusted  by 
both politicians and voters) that is both reliable and auditable 
is  challenging.  This  paper  is  about  the  design  of  such  a 
system. 
3.  Outline of the Proposed Voting System 
    Our  voting  system  consists  of  nine  steps,  listed  below, 
which take place in sequence during a period that may take 
up to a year after the election is called or the process started. 
In  this  paper,  we  will  use  the  U.S.  names  for  the  officials 
involved, but analogous ones exist in other democracies.  
1. Precinct master key generation and distribution. 
2. Voter registration. 
3. Proof of registration mailed to the voters. 
4. Voting machines are prepared. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:11:35 UTC from IEEE Xplore.  Restrictions apply. 
5. Key assembly at each precinct. 
6. Voters show up and check in. 
7. Voters cast their votes. 
8. Tabulating the votes. 
9. Publishing the result. 
Each of these steps has some subtle points and potential for 
malfeasance or fraud. Some of these steps rely on a Trusted 
Platform  Module  (TPM),  and  we  now  outline  the  TPM 
functionality needed. 
Using Trusted Platform Modules for Attestation and Key 
Management. Our goal is to use an open design in our system 
to engender trust. We use open-source voting software (currently 
under  implementation),  publish  it  on  a  website  and  allow 
verification  of  that  software.  Getting  states  to  use  open-source 
software is a political and legal issue. The technical challenge is 
to  allow  voters  and  others  to  verify  key  properties  about  a 
machine’s configuration immediately prior to using it for voting, 
a process called attestation. 
     Our attestation assumptions are: 
     1.  The  voting  machine  hardware  operates  correctly 
and has not been compromised. 
     2.  The private key of the TPM has not been leaked. 
     3.  All of the software that can potentially execute during 
the  TPM 
included 
in 
the  voting  process 
measurement (described below). 
is 
     If  the  assumptions  hold  true,  then  attestation  shows  the 
machine is running the published open-source software and a 
successful  machine  or  key  compromise  is  made  more  dif-
ficult (assuming that compromising the TPM is a nontrivial 
problem).  The  possibility  of  successful  verification  under 
violated assumptions still exists, and we must also ensure that 
the machine cannot undetectably affect the election outcome 