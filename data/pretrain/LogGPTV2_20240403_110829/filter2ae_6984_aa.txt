##### 前言：
在CTF题目中，可以利用php原生类来进行[XSS](https://so.csdn.net/so/search?q=XSS&spm=1001.2101.3001.7020),反序列化，SSRF，XXE和读文件的思路
遍历一下
    Exception::__wakeup
    Exception::__toString
    ErrorException::__wakeup
    ErrorException::__toString
    Error::__wakeup
    Error::__toString
    CompileError::__wakeup
    CompileError::__toString
    ParseError::__wakeup
    ParseError::__toString
    TypeError::__wakeup
    TypeError::__toString
    ArgumentCountError::__wakeup
    ArgumentCountError::__toString
    ArithmeticError::__wakeup
    ArithmeticError::__toString
    DivisionByZeroError::__wakeup
    DivisionByZeroError::__toString
    Generator::__wakeup
    ClosedGeneratorException::__wakeup
    ClosedGeneratorException::__toString
    DateTime::__wakeup
    DateTime::__set_state
    DateTimeImmutable::__wakeup
    DateTimeImmutable::__set_state
    DateTimeZone::__wakeup
    DateTimeZone::__set_state
    DateInterval::__wakeup
    DateInterval::__set_state
    DatePeriod::__wakeup
    DatePeriod::__set_state
    JsonException::__wakeup
    JsonException::__toString
    LogicException::__wakeup
    LogicException::__toString
    BadFunctionCallException::__wakeup
    BadFunctionCallException::__toString
    BadMethodCallException::__wakeup
    BadMethodCallException::__toString
    DomainException::__wakeup
    DomainException::__toString
    InvalidArgumentException::__wakeup
    InvalidArgumentException::__toString
    LengthException::__wakeup
    LengthException::__toString
    OutOfRangeException::__wakeup
    OutOfRangeException::__toString
    RuntimeException::__wakeup
    RuntimeException::__toString
    OutOfBoundsException::__wakeup
    OutOfBoundsException::__toString
    OverflowException::__wakeup
    OverflowException::__toString
    RangeException::__wakeup
    RangeException::__toString
    UnderflowException::__wakeup
    UnderflowException::__toString
    UnexpectedValueException::__wakeup
    UnexpectedValueException::__toString
    CachingIterator::__toString
    RecursiveCachingIterator::__toString
    SplFileInfo::__toString
    DirectoryIterator::__toString
    FilesystemIterator::__toString
    RecursiveDirectoryIterator::__toString
    GlobIterator::__toString
    SplFileObject::__toString
    SplTempFileObject::__toString
    SplFixedArray::__wakeup
    ReflectionException::__wakeup
    ReflectionException::__toString
    ReflectionFunctionAbstract::__toString
    ReflectionFunction::__toString
    ReflectionParameter::__toString
    ReflectionType::__toString
    ReflectionNamedType::__toString
    ReflectionMethod::__toString
    ReflectionClass::__toString
    ReflectionObject::__toString
    ReflectionProperty::__toString
    ReflectionClassConstant::__toString
    ReflectionExtension::__toString
    ReflectionZendExtension::__toString
    AssertionError::__wakeup
    AssertionError::__toString
    DOMException::__wakeup
    DOMException::__toString
    PDOException::__wakeup
    PDOException::__toString
    PDO::__wakeup
    PDOStatement::__wakeup
    SimpleXMLElement::__toString
    SimpleXMLIterator::__toString
    SoapClient::__call
    SoapFault::__toString
    SoapFault::__wakeup
    CURLFile::__wakeup
    mysqli_sql_exception::__wakeup
    mysqli_sql_exception::__toString
    PharException::__wakeup
    PharException::__toString
    Phar::__destruct
    Phar::__toString
    PharData::__destruct
    PharData::__toString
    PharFileInfo::__destruct
    PharFileInfo::__toString
主要注重以下几个：
    Error
    Exception
    SoapClient
    DirectoryIterator
    FilesystemIterator
    SplFileObject
    SimpleXMLElement
###### SPL库：
也就是php标准库，里面的迭代器就是类，附上链接
#####
* * *
##### 嗨害嗨，来喽：
##### 利用Error/Exception 内置类进行 XSS：
###### Error内置类：
使用条件：
  * 适用于php7版本
  * 在开启报错的情况下
**Error** 是所有PHP内部错误类的基类。在php7环境下可能有xss漏洞，它内置有一个 __toString() 的方法，常用于PHP
反序列化中。
**构造XSS：**
**POC：**
###### Exception 内置类:
  * 适用于php5、7版本
  * 开启报错的情况下
**测试代码：**
**POC:**
##### 使用 SoapClient 类进行 SSRF
详解：
  * 适用于PHP 5, PHP 7, PHP 8
  * 专门用来访问web服务的类
该内置类有一个 **_call 方法，当** _call 方法被触发后，它可以发送 HTTP 和 HTTPS 请求。
**构造函数如下：**
    public SoapClient :: SoapClient(mixed $wsdl [，array $options ])
    第一个参数是用来指明是否是wsdl模式，将该值设为null则表示非wsdl模式。
    第二个参数为一个数组，如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri 是SOAP服务的目标命名空间。
web259:
源代码：
  * php在安装php-soap拓展后，可以反序列化原生类SoapClient，来发送http post请求。
  * 必须调用SoapClient不存在的方法，触发SoapClient的__call魔术方法。
  * 通过CRLF来添加请求体：SoapClient可以指定请求的user-agent头，通过添加换行符的形式来加入其他请求内容
还有CRLF漏洞
flag.php源码
     'http://127.0.0.1/' , 'location' => 'http://127.0.0.1/flag.php' , 'user_agent' => $ua));
    print_r(urlencode(serialize($client)));
其中content-type的需要与post的内容一致。
直接get传vip=xxx就可以了，最后访问/flag.txt应该就能拿到flag了。
##### 使用 SimpleXMLElement 类进行 XXE
  * 适用于PHP 5, PHP 7, PHP 8
  * 用于解析 XML 文档中的元素。
可以看到通过设置第三个参数 data_is_url 为 true，我们可以实现远程xml文件的载入。第二个参数的常量值我们设置为2即可。第一个参数 data
就是我们自己设置的payload的url地址，即用于引入的外部实体的url。
这样的话，当我们可以控制目标调用的类的时候，便可以通过 SimpleXMLElement 这个内置类来构造 XXE。
**[SUCTF 2018]Homework**
calc 计算器类的代码为：
点击CALC按钮，观察返回的结果和URL，再根据`calc`类里面的内容，不难判断得知，这里通过`module`传参去调用`calc`类，然后剩下3个变量是`calc($args1,$method,$args2)`函数中参数。
其中值得注意的是`$data`和`$dataIsURL`这个两个参数：
`$data`：格式正确的XML字符串，或者XML文档的路径或URL（如果`$dataIsURL`为`true`）。
`$dataIsURL`：默认情况下`$dataIsURL`为false。使用true指定`$data`的路径或URL到一个XML文件，而不是字符串数据。
可以看到通过设置第三个参数 `$dataIsURL` 为 `true`，我们可以实现远程xml文件的载入。第二个参数的常量值我们设置为`2`即可。第一个参数
`$data` 就是我们自己设置的payload的url地址，即用于引入的外部实体的url。这样的话，当我们可以控制目标调用的类的时候，便可以通过
SimpleXMLElement 这个内置类来构造 XXE。
##### 使用 ZipArchive 类来删除文件
  * 适用于PHP 5 >= 5.2.0, PHP 7, PHP 8, PECL zip >= 1.1.0
  * 一个用 Zip 压缩的文件存档。
**常见类方法：**
    ZipArchive::addEmptyDir：添加一个新的文件目录
    ZipArchive::addFile：将文件添加到指定zip压缩包中
    ZipArchive::addFromString：添加新的文件同时将内容添加进去
    ZipArchive::close：关闭ziparchive
    ZipArchive::extractTo：将压缩包解压
    ZipArchive::open：打开一个zip压缩包
    ZipArchive::deleteIndex：删除压缩包中的某一个文件，如：deleteIndex(0)代表删除第一个文件
    ZipArchive::deleteName：删除压缩包中的某一个文件名称，同时也将文件删除
有个ZipArchive::open：
    该方法用来打开一个新的或现有的zip存档以进行读取，写入或修改。
    filename：要打开的ZIP存档的文件名。