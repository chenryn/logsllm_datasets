# 发送消息给特定用户

## 1. 消息接收方看到的信息
当发送消息时，接收方会看到如下信息：
```
Message from christinelserver01 on tty2 at 14:11 ...
Hello Tin!
EOF
```
这条信息显示了发送者的用户名、发送终端以及时间戳。`EOF` 表示消息结束。

### 注意事项
- 接收方可以看到消息是由哪个用户在哪个终端上发送的。
- 可以给消息加上一个时间戳。
- `EOF` 表示文件结束，让接收方知道消息已经全部显示出来。
- 接收方经常需要按回车键来重新获得命令行提示符。

## 2. 创建脚本
使用脚本发送消息可以解决一些潜在的问题，如查找用户和确定其是否启用消息功能。以下是创建此类脚本的步骤：

### 2.1 检查用户是否登录
首先，脚本需要确定要发送消息的用户是否已登录系统。可以通过 `who` 和 `grep` 命令实现：
```bash
#!/bin/bash
# 确定用户是否登录
logged_on=$(who | grep -i -m 1 $1 | awk '{print $1}')
if [ -z "$logged_on" ]; then
    echo "$1 is not logged on."
    echo "Exiting script..."
    exit
fi
```

### 2.2 检查用户是否接受消息
接下来，检查登录用户是否启用了消息接收功能。使用 `who -T` 命令来查看：
```bash
# 确定用户是否允许消息
allowed=$(who -T | grep -i -m 1 $1 | awk '{print $NF}')
if [ "$allowed" != "+" ]; then
    echo "$1 does not allow messaging."
    echo "Exiting script..."
    exit
fi
```

### 2.3 检查是否包含要发送的消息
确保脚本接收到要发送的消息参数：
```bash
# 检查是否包含消息
if [ -z "$2" ]; then
    echo "No message parameter included."
    echo "Exiting script..."
    exit
fi
```

### 2.4 发送简单的消息
识别并保存用户的当前终端，然后发送消息：
```bash
# 获取用户终端
uterminal=$(who | grep -i -m 1 $1 | awk '{print $2}')
echo "$2" | write $logged_on $uterminal
```

### 2.5 发送长消息
处理包含空格的长消息：
```bash
# 保存用户名
muser=$1
shift
whole_message=""
while [ -n "$1" ]; do
    whole_message="$whole_message $1"
    shift
done
uterminal=$(who | grep -i -m 1 $muser | awk '{print $2}')
echo "$whole_message" | write $muser $uterminal
```

## 3. 最终脚本
将上述所有部分整合成一个完整的脚本：
```bash
#!/bin/bash
# mu.sh - 向特定用户发送消息

# 保存用户名
muser=$1
shift

# 确定用户是否登录
logged_on=$(who | grep -i -m 1 $muser | awk '{print $1}')
if [ -z "$logged_on" ]; then
    echo "$muser is not logged on."
    echo "Exiting script..."
    exit
fi

# 确定用户是否允许消息
allowed=$(who -T | grep -i -m 1 $muser | awk '{print $NF}')
if [ "$allowed" != "+" ]; then
    echo "$muser does not allow messaging."
    echo "Exiting script..."
    exit
fi

# 检查是否包含消息
if [ -z "$*" ]; then
    echo "No message parameter included."
    echo "Exiting script..."
    exit
fi

# 处理长消息
whole_message=""
while [ -n "$1" ]; do
    whole_message="$whole_message $1"
    shift
done

# 获取用户终端
uterminal=$(who | grep -i -m 1 $muser | awk '{print $2}')
echo "$whole_message" | write $muser $uterminal
```

## 4. 改进建议
- 使用选项而不是直接传递用户名和消息作为参数。
- 如果用户登录多个终端，允许将消息发送到这些终端。
- 如果消息接收方仅登录图形界面环境，提示脚本用户并退出脚本。
- 允许从文件中读取长消息并发送到终端。

通过这些步骤，你可以创建一个功能齐全的消息发送脚本。