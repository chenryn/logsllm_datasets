> user\'s screen. This can be achieved either by executing the
> osx_screenshot command directly into the agent or by using the
> usemodule collection/osx/native_screenshot command. Note that this
> module uses Python Quartz libraries to take the screenshot, and it
> also saves the screenshot to the target server which is not
> opsec-safe. Once taken, the screenshot will be downloaded from the
> target server to Empire C2.
>
> ![](media/image475.jpeg)
>
> Upon successful execution, the screenshot will be downloaded locally
> and we can then view the file:
>
> ![](media/image476.jpeg)
>
> There are not many privilege escalation modules for OSX, but we can
> phish the user\'s credentials either through a prompt module or via a
> keylogger. Let\'s phish a user\'s credentials using a keylogger,
> executing the following command to set it up:
>
> **usemodule collection/osx/keylogger info**
>
> ![](media/image477.jpeg)
Once executed, the keylogger will start logging the keystrokes. When the
user enters their password, the entered keystrokes will be saved in the
/tmp/.debug.db file. This module will save the keystrokes on the target
server, making it opsec-
> unsafe:
>
> ![](media/image478.jpeg)
>
> Now we just need to download the /tmp/.debug.db file, using the
> download command as follows:
>
> ![](media/image479.jpeg)
>
> Let\'s view the /tmp/.debug.db file to see everything that the
> keylogger has logged:
>
> ![](media/image480.jpeg)
>
> We found the password! Let\'s use this password to get a higher
> security context. For this, we can use the sudo_spawn module, which
> will pop up a root shell. To use this module, let\'s execute the
> following commands:
>
> ![](media/image481.jpeg)**usemodule privesc/multi/sudo_spawn info**
>
> **set Password \ set Listener
> \**
>
> Now that the setup is complete, let\'s execute the module. The module
> will elevate the security context using sudo and execute our launcher
> in that security context. Keep in mind that this will not work if the
> user is a limited user:
>
> ![](media/image482.jpeg)
>
> We can list the agents to check the newly connected agent with high
> integrity:
>
> ![](media/image483.jpeg)
>
> With root privileges, we can now use the hashdump module for OSX. This
> will dump the encrypted passwords. Execute the following commands to
> setup the hashdump module:
>
> ![](media/image484.jpeg)**usemodule collection/osx/hashdump\* info**
>
> Upon successful execution, we\'ll get the password hashes.
>
> ![](media/image485.jpeg)
>
> Not many people are familiar with this tool, but most are comfortable
> with the Metasploit framework. If this is the case, we can use
> Empire\'s obfuscated launcher to bypass security restrictions, and
> once we get a agent connection, we can spawn a **Meterpreter** session
> using Empire.
# Popping up a Meterpreter session using Empire
> The concept of popping up a meterpreter session using Empire is very
> easy to understand. Empire can inject code directly into the memory
> and execute it. We just need to get an obfuscated shellcode or the
> DLL/EXE generated by msfvenom and inject the DLL/EXE/shellcode into
> the memory using Empire. Let\'s first generate a reverse shell DLL
> using msfvenom:
>
> ![](media/image486.jpeg)
Upload the malicious DLL using the upload command:
> ![](media/image487.jpeg)
>
> We can now use the invoke_dllinjection module for DLL injection.
> Let\'s execute the following commands in order to use this module:
>
> **usemodule code_execution/invoke_dllinjection info**
>
> ![](media/image488.jpeg)
Set ProcessID where you want to inject your DLL, and then set the DLL
path where you have uploaded the malicious DLL. The location can be an
absolute path or a relative path:
> ![](media/image489.jpeg)
Before executing the module, let\'s start the handler on Metasploit.
This handler will listen for incoming connections on port 8080:
> ![](media/image490.jpeg)
Executing the Empire module shown earlier will inject our malicious DLL
into the process with the process ID of 1596:
> ![](media/image491.jpeg)
>
> The Meterpreter session has now been opened! Let\'s confirm the
> session information using the sessions command in Metasploit, as
> follows:
>
> ![](media/image492.jpeg)
We can now use Metasploit modules for further exploitation.
> []{#_bookmark170 .anchor}\Edit \ SlackToken
> \\
>
> ![](media/image493.jpeg)
>
> For this to work perfectly, we have to restart the listener. There\'s
> no restart command in Empire, so we have to execute the disable and
> enable commands in order to restart:
>
> ![](media/image494.jpeg)
>
> Let\'s check the listener information and see if the SlackToken field
> is updated or not:
>
> ![](media/image495.jpeg)
>
> Now, whenever an agent connection is made on this listener, we\'ll get
> a notification on our slack channel:
>
> ![](media/image496.jpeg)
>
> As we can see in the the following screenshot, a notification alert
> with the agent information is displayed on our Slack channel:
>
> ![](media/image497.jpeg)
We will get an alert whenever an agent connects back to the Empire C2.
We can plan the further attacks depending upon the information we get
from Empire.
The following is the list of stagers available in Empire:
+-------+-----------+------------------------+-----------------------+
| > **T | >         | > **Empire stager      | > **Description**     |
| arget |  **Stager | > option**             |                       |
| >     | > name**  |                        |                       |
|  OS** |           |                        |                       |
+=======+===========+========================+=======================+
| > Wi  | >         | > wi                   | > Generates a macro   |
| ndows |  Backdoor | ndows/backdoorLnkMacro | > that backdoors .lnk |
|       | > LNK     |                        | > files on the        |
|       | > Macro   |                        | > user\'s desktop.    |
|       | >         |                        | > The backdoored lnk  |
|       |  launcher |                        | > files therefore     |
|       |           |                        | > attempt to download |
|       |           |                        | > and execute an      |
|       |           |                        | > empire launcher     |
|       |           |                        | > when the user       |
|       |           |                        | > clicks on them.     |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > Bunny   | > windows/bunny        | > Generates a Bash    |
| ndows | >         |                        | > bunny script that   |
|       |  launcher |                        | > runs a one-liner    |
|       |           |                        | > Stage 0 launcher    |
|       |           |                        | > for Empire.         |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > C#      | > windows/csharp_exe   | > Generates a         |
| ndows | >         |                        | > PowerShell C#       |
|       | > P       |                        | > solution with       |
|       | owerShell |                        | > embedded stager     |
|       | >         |                        | > code that compiles  |
|       |  launcher |                        | >                     |
|       |           |                        | > to an EXE.          |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > DLL     | > windows/dll          | > Generates a         |
| ndows | >         |                        | > PowerPick           |
|       | >         |                        | > Reflective DLL to   |
|       |  launcher |                        | > inject with stager  |
|       |           |                        | > code.               |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > Ducky   | > windows/ducky        | > Generates a ducky   |
| ndows | >         |                        | > script that runs a  |
|       |  launcher |                        | > one-liner Stage 0   |
|       |           |                        | > launcher for        |
|       |           |                        | > Empire.             |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > HTA     | > windows/hta          | > Generates an        |
| ndows | >         |                        | > **HyperText         |
|       | >         |                        | > Application**       |
|       |  launcher |                        | > (**HTA**) for       |
|       |           |                        | > Internet Explorer.  |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > BAT     | > windows/launcher_bat | > Generates a         |
| ndows | >         |                        | > self-deleting       |
|       | >         |                        | >                     |
|       |  launcher |                        | > .bat launcher for   |
|       |           |                        | > Empire              |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > LNK     | > windows/launcher_lnk | > Creates a .lnk file |
| ndows | >         |                        | > that launches the   |
|       | >         |                        | > Empire stager.      |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Wi  | >         | > windows/launcher_sct | > Generates an SCT    |
| ndows |  Regsrv32 |                        | > file (COM           |
|       | >         |                        | > Scriptlet). This    |
|       |  launcher |                        | > can                 |
+-------+-----------+------------------------+-----------------------+
+-------+-----------+------------------------+-----------------------+
|       |           |                        | > be hosted anywhere  |
+=======+===========+========================+=======================+
| > Wi  | > VBS     | > windows/launcher_vbs | > Generates a .vbs    |
| ndows | >         |                        | > launcher for        |
|       | >         |                        | > Empire.             |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > Ms      | > windows/launcher_xml | > Generates an XML    |
| ndows | build_xml |                        | > file to be run with |
|       | >         |                        | > MSBuild.exe.        |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > Macro   | > windows/macro        | > Generates an office |
| ndows | >         |                        | > macro for Empire.   |
|       |  launcher |                        | > This is compatible  |
|       |           |                        | > with office 97-     |
|       |           |                        | > 2003 and 2007 file  |
|       |           |                        | > types.              |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > M       | > wi                   | > Creates a macroless |
| ndows | acro-less | ndows/macroless_msword | > document utilizing  |
|       | > code    |                        | > a formula field for |
|       | >         |                        | > code execution.     |
|       | execution |                        |                       |
|       | > in      |                        |                       |
|       | > MSWord  |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Wi  | >         | > windows/shellcode    | > Generates a windows |
| ndows | Shellcode |                        | > shellcode stager.   |
|       | >         |                        |                       |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Wi  | > Teensy  | > windows/teensy       | > Generates a Teensy  |
| ndows | >         |                        | > script that runes a |
|       |  launcher |                        | > one-liner stage0    |
|       |           |                        | > launcher for        |
|       |           |                        | > Empire.             |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Apple   | > osx/applescript      | > Generates           |
| > OSX | > Script  |                        | > AppleScript to      |
|       |           |                        | > execute the Empire  |
|       |           |                        | > stage0 launcher.    |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Ap      | > osx/application      | > Generates an Empire |
| > OSX | plication |                        | > Application.        |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Ducky   | > osx/ducky            | > Generates a ducky   |
| > OSX | >         |                        | > script that runs a  |
|       |  launcher |                        | > one-liner stage0    |
|       |           |                        | > launcher for        |
|       |           |                        | > Empire.             |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Dylib   | > osx/dylib            | > Generates a dynamic |
| > OSX | >         |                        | > library for OSX.    |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Mac | > JAR     | > osx/jar              | > Generates a JAR     |
| > OSX | >         |                        | > file.               |
|       | >         |                        |                       |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Default | > osx/launcher         | > Generates a         |
| > OSX | >         |                        | > one-liner stage0    |
|       |  launcher |                        | > launcher for        |
|       |           |                        | > Empire.             |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Macho   | > osx/macho            | > Generates a macho   |
| > OSX |           |                        | > executable.         |
+-------+-----------+------------------------+-----------------------+
+-------+-----------+------------------------+-----------------------+
| > Mac | > OSX     | > osx/macro            | > An OSX office macro |
| > OSX | > Apple   |                        | > that supports newer |
|       | > Script  |                        | > versions of Office. |
|       | > macro   |                        |                       |
+=======+===========+========================+=======================+
| > Mac | > OSX     | > osx/pkg              | > Generates a pkg     |
| > OSX | >         |                        | > installer. This     |
|       | > package |                        | > installer will copy |
|       |           |                        | > a custom (empty)    |
|       |           |                        | > application to the  |
|       |           |                        | > /Applications       |
|       |           |                        | > folder. The         |
|       |           |                        | > postinstall script  |
|       |           |                        | > will execute an     |
|       |           |                        | > Empire launcher.    |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Safari  | > osx/safari_launcher  | > Generates an HTML   |
| > OSX | >         |                        | > payload launcher    |
|       |  launcher |                        | > for Empire.         |
+-------+-----------+------------------------+-----------------------+
| > Mac | > Teensy  | > osx/teensy           | > Generates a Teensy  |
| > OSX | >         |                        | > script that runs a  |
|       |  launcher |                        | > one-liner stage0    |
|       |           |                        | > launcher for        |
|       |           |                        | > Empire.             |
+-------+-----------+------------------------+-----------------------+
| > M   | > Bash    | > multi/bash           | > Generates           |
| ulti- | > Script  |                        | > self-deleting Bash  |
| > Pla | >         |                        | > script to execute   |
| tform |  launcher |                        | > the Empire Stage 0  |
|       |           |                        | > launcher.           |
+-------+-----------+------------------------+-----------------------+
| > M   | > Default | > multi/launcher       | > Generates a         |
| ulti- | > P       |                        | > one-liner Stage 0   |
| > Pla | owerShell |                        | > launcher for        |
| tform | >         |                        | > Empire.             |
|       |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
| > M   | > Cross   | > multi/macro          | > Generates a Win/Mac |
| ulti- | >         |                        | > cross platform MS   |
| > Pla |  platform |                        | > Office macro for    |
| tform | > macro   |                        | > Empire, compatible  |
|       | >         |                        | > with Office 97-2016 |
|       |  launcher |                        | > including Mac 2011  |
|       |           |                        | > and 2016            |
|       |           |                        | > (sandboxed).        |
+-------+-----------+------------------------+-----------------------+
| > M   | > py      | > multi/pyinstaller    | > Generates an ELF    |
| ulti- | Installer |                        | > binary payload      |
| > Pla | >         |                        | > launcher for Empire |
| tform |  Launcher |                        | > using pyInstaller.  |
+-------+-----------+------------------------+-----------------------+
| > M   | > WAR     | > multi/war            | > Generates a         |
| ulti- | >         |                        | > deployable WAR      |
| > Pla | >         |                        | > file.               |
| tform |  launcher |                        |                       |
+-------+-----------+------------------------+-----------------------+
# Summary
> In this chapter, we introduced Empire and its fundamentals. We have
> also covered Empire\'s basic usage and the post exploitation basics
> for Windows, Linux and OSX. We were also able to get a Meterpreter
> session opened using Empire and, finally, used Slack as the alerting
> mechanism whenever an agent connects back to the Empire C2. However,
> in an organization, accessing a server is not enough. The final goal
> for intruding into the network should be to get full access to the
> **Domain Controller** (**DC**). In the next chapter, we will cover how
> we can use Empire to gain access to DC and how we can achieve this
> using automated tools.
# Questions
1.  Is Empire free?
2.  Does Empire use SSL for agent communication?
3.  Does Empire have any GUI version for its usage?
# Further reading
> Read the following links for more information:
>
> 
> 
>
> [https://www.swordshield.com/2017/10/slack-and-microsoft-teams-notifications-for-empi
> re-and-meterpreter-agents/](https://www.swordshield.com/2017/10/slack-and-microsoft-teams-notifications-for-empire-and-meterpreter-agents/)
>
> 
# Age of Empire - Owning Domain Controllers
> In the previous chapter, we covered the basics of Empire and how to
> use Empire efficiently to perform post-exploitation. Now we are in the
> network, what\'s the next step? What can we do apart from exploring
> the target filesystem and internal network service discovery? In every
> organization, a centralized server will be present to control and
> manage the whole network. If an attacker can compromise this central
> server, they would have full control over the entire organization\'s
> network. This central server is called the **Domain Controller**
> (**DC**), while the domain services that are provided by a Domain
> Controller are known as Active Directory Domain Services.
In this chapter, we will cover the following topics:
> Getting into a Domain Controller using Empire
>
> Automating Active Directory exploitation using the DeathStar Empire
> GUI
# Getting into a Domain Controller using Empire
> Most of the time, we get access to a web server with system
> privileges. When we try to get access to the Domain Controller,
> however, this just doesn\'t work. One of the reasons for this is the
> lack of knowledge related to Domain Controllers.
>
> For those who are learning about privilege escalation and pivoting,
> you are about to enter the world of lateral movement and Domain
> exploitation. Make sure that you are familiar with some basic concepts
> related to Domains and Domain Controllers. Start from:
>  and move on to other
> topics related to the Domain Controller before continuing with this