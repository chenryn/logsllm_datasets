### 1.1.3 root 账户
root账户也被称为超级用户或特权用户。使用此账户，您可以执行以下系统管理任务：
- 读取、写入和删除系统上的任何文件，无论其权限如何。
- 设置系统上任何文件的所有者和权限。
- 设置系统上任何非特权用户的密码。
- 无需输入密码即可登录任何账户。

由于root账户具有无限的权限，因此必须谨慎且负责任地使用它。

**警告：**
切勿与他人共享root密码。

**注意：**
某些文件（包括硬件设备，如CD-ROM等，在Debian系统中被视为普通文件）的权限可能限制非root用户的访问。虽然在这种情况下，使用root账户是一个快速的解决方法，但更恰当的做法是调整文件权限和用户组成员设置（参见第1.2.3节）。

### 1.1.4 root shell 提示符
以下是几种获取root shell提示符的基本方法：
- 在字符界面的登录提示符下，以root用户名登录。
- 在任意用户的shell提示符下输入`su -l`。
  - 这不会保留当前用户的环境设置。
- 在任意用户的shell提示符下输入`su`。
  - 这会保留当前用户的一些环境设置。

### 1.1.5 GUI 系统管理工具
如果桌面菜单没有提供自动启动GUI系统管理工具的选项，您可以在终端模拟器（如gnome-terminal(1)、rxvt(1)或xterm(1)）中通过root shell提示符启动它们。请参阅第1.1.4节和第7.8节。

**警告：**
- 永远不要在显示管理器（例如gdm3(1)）的提示符下输入root来启动GUI显示/会话管理器。
- 永远不要在X Window环境下运行不受信任的远程GUI程序，因为它可能会监听您的屏幕。

### 1.1.6 虚拟控制台
在默认的Debian系统中，有6个可切换的类VT100字符控制台，可以直接在Linux主机上启动shell。除非您处于GUI环境下，否则可以通过同时按下左Alt键和F1至F6之一的键在虚拟控制台之间切换。每个字符控制台都允许独立登录账户并提供多用户环境。这是Unix的一大特色，非常实用。

如果您处于GUI环境中，可以按Ctrl-Alt-F3键切换到字符控制台3。按Alt-F2键则可以返回GUI环境，通常运行在虚拟控制台2上。

您也可以使用命令行切换到另一个虚拟控制台，例如切换到控制台3：
```bash
# chvt 3
```

### 1.1.7 怎样退出命令行提示符
在命令行中输入Ctrl-D（即同时按下左侧Ctrl键和d键），即可关闭shell会话。如果您正处于字符控制台，将会返回到登录提示符。尽管这些控制字符“controlD”使用了大写字母，但实际操作时不需要按住Shift键。Ctrl-D也可以简写为^D。或者，您也可以键入`exit`来退出命令行。

如果您位于x终端模拟器(1)中，可以关闭x终端模拟器窗口来退出。

### 1.1.8 怎样关闭系统
像其他现代操作系统一样，Debian会通过内存中的缓存数据进行文件操作以提高性能。因此，在安全关闭电源前，需要适当的关机过程，将内存中的数据强制写入硬盘以保持文件完整性。如果软件的电源控制可用，关机过程中会自动关闭系统电源。（否则，您可能需要在关机过程之后按住电源键几秒钟。）

在多用户模式下，可以使用以下命令关闭系统：
```bash
# shutdown -h now
```
在单用户模式下，可以使用以下命令关闭系统：
```bash
# poweroff -i -f
```
请参阅第6.3.8节了解更多详情。

### 1.1.9 恢复一个正常的控制台
如果由于某些原因（例如执行`cat`二进制文件）导致屏幕混乱，您可以在命令行输入`reset`。此时，您可能无法在屏幕上看到您输入的命令。您也可以输入`clear`来清屏。

### 1.1.10 建议新手安装的额外软件包
尽管Debian系统的最小安装已经提供了基本的Unix功能，但对于新手来说，使用`apt-get(8)`安装一些基于字符终端的命令行和curses软件包（如mc和vim）仍然是一个不错的选择。

首先更新软件包列表：
```bash
# apt-get update
```
然后安装所需的软件包：
```bash
# apt-get install mc vim sudo aptitude
```
如果这些软件包已经安装，则不会有新的软件包被安装。

| 软件包 | 流行度 | 大小 | 说明 |
| --- | --- | --- | --- |
| mc | V:50, I:213 | 1542 KB | 文本模式的全屏文件管理器 |
| sudo | V:681, I:837 | 6540 KB | 给普通用户授予部分root权限的程序 |
| vim | V:95, I:373 | 3742 KB | Vi文本编辑器的改进版，适合程序员使用（标准版） |
| vim-tiny | V:57, I:974 | 1730 KB | Vi文本编辑器的改进版，适合程序员使用（精简版） |
| emacs-nox | V:3, I:16 | 35109 KB | GNU项目的Emacs，基于Lisp的扩展文本编辑器 |
| w3m | V:15, I:187 | 2828 KB | 文本模式的万维网浏览器 |
| gpm | V:10, I:12 | 521 KB | Unix风格的文本控制台复制粘贴工具（守护进程） |

您还可以考虑阅读一些其他的信息文档：

| 软件包 | 流行度 | 大小 | 说明 |
| --- | --- | --- | --- |
| doc-debian | I:865 | 187 KB | Debian项目文档，包含常见问题解答和其他文档 |
| debian-policy | I:15 | 4379 KB | Debian策略手册及相关文档 |
| developers-reference | V:0, I:5 | 2604 KB | Debian开发者指南和信息 |
| debmake-doc | I:0 | 11701 KB | Debian维护者手册 |
| debian-history | I:0 | 4692 KB | Debian项目历史 |
| debian-faq | I:862 | 790 KB | Debian常见问题解答 |

要安装这些包，请使用以下命令：
```bash
# apt-get install package_name
```

### 1.1.11 额外用户账号
如果您不想使用自己的主用户账户进行练习操作，可以创建一个新的用户账户。例如，创建一个名为`fish`的账号：
```bash
# adduser fish
```
回答所有提示的问题。

这将创建一个名为`fish`的新账号。完成练习后，可以使用以下命令删除该用户账号及其主目录：
```bash
# deluser --remove-home fish
```

### 1.1.12 sudo 配置
对于典型的单用户工作站（例如运行在笔记本电脑上的桌面Debian系统），通常简单地配置sudo(8)使非特权用户（例如用户`penguin`）只需输入用户密码而非root密码就能获得管理员权限：
```bash
# echo "penguin ALL=(ALL) ALL" >> /etc/sudoers
```
另外，可以使用以下命令使非特权用户（例如用户`penguin`）无需密码就获得管理员权限：
```bash
# echo "penguin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
```

这些技巧仅适用于您管理的单用户工作站中的唯一用户。

**警告：**
在多用户工作站中不要建立这样的普通用户账户，因为这会导致严重的系统安全问题。

**小心：**
在上述例子中，用户`penguin`的密码及账号应受到与root账号密码同等的保护。

在这种情况下，管理员权限被赋予那些有权对工作站进行系统管理任务的人。永远不要让未经授权或无能力的人员（例如公司行政部门或老板）进行管理。

**注意：**
为了对受限的设备和文件提供访问权限，您应该考虑使用组来提供受限访问，而不是通过sudo(8)使用root权限。

通过更细致的配置，sudo(8)可以授予共享系统上的其他用户有限的管理权限而不共享root密码。这有助于在有多名管理员的主机上明确责任，您可以知道是谁做了什么。另一方面，您可能不希望任何人有这样的权限。

### 1.1.13 动手时间
现在您已经准备好在Debian系统上开始工作了，只要使用非特权用户账号就不会有风险。

这是因为Debian系统（即使是默认安装）会设置适当的文件权限来防止非特权用户对系统造成破坏。当然，可能仍然存在一些漏洞可以利用，但关心这些问题的人应该阅读Debian安全手册，而不是这一节。

我们使用以下方式，把Debian系统当作一个类Unix系统来学习：
- 第1.2节（基本概念）
- 第1.3节（生存方式）
- 第1.4节（基本方式）
- 第1.5节（shell机制）
- 第1.6节（文本处理方式）

### 1.2 类 Unix 文件系统
在GNU/Linux和其他类Unix操作系统中，文件被组织成目录。所有的文件和目录排放在以“/”为根的巨大的树形结构中。叫它树是因为如果你画出文件系统，它看起来就像一棵树，但是它是颠倒过来的。

这些文件和目录可以分散在多个设备中。`mount(8)`用于将某个设备上的文件系统附加到巨大的文件树上。相反，`umount(8)`将其分离。在最新的Linux内核中，`mount(8)`带某些参数时可以把文件树的一部分绑定到其他地方，或者可以把文件系统挂载为共享的、私有的、从属的或不可绑定的。每个文件系统支持的挂载选项可以在`/usr/share/doc/linux-doc-*/Documentation/filesystems/`找到。

在Unix系统上称为目录，而在某些其他系统上称为文件夹。请注意，在任何Unix系统上，没有驱动器的概念，例如“A:”。只有一个文件系统，并且所有内容都包含在内。这对于Windows来说是一个巨大的优势。

### 1.2.1 Unix 文件基础
以下是一些Unix文件的基础知识：
- 文件名区分大小写。也就是说，“MYFILE”和“MyFile”是不同的文件。
- 根目录表示文件系统的根，简称为“/”，不要将其与root用户的家目录“/root”混淆。
- 每个目录都有一个名称，它可以包含任意字母或除“/”以外的符号。根目录是一个特例，其名称为“/”（称为“斜线”或“根目录”），并且不能重命名。
- 每个文件或目录都有一个全限定文件名（绝对路径），按顺序列出到达相应文件或目录所需经过的目录。这三个术语是同义词。
- 所有全限定文件名以“/”开头，并在每个目录或文件名之间有一个“/”。第一个“/”是最顶层目录，其他的“/”用于分隔后续的子目录，直到到达最后一个条目，即实际文件的名称。例如：“/usr/share/keytables/us.map.gz”。不过，人们通常只用基名“us.map.gz”来指代文件名。
- 根目录有许多分支，例如“/etc/”和“/usr/”。这些子目录依次分出更多的子目录，例如“/etc/init.d/”和“/usr/local/”。整个结构称为“目录树”。你可以将一个绝对路径想象成从“/”这棵树的根到某个分支（一个文件）的一条路径。你也会听到人们谈论目录树，好像它是一个包含所有直系后代的“家庭”树，这个树的根是“/”：因此子目录有父目录，并且一条路径显示了一个文件完整的祖先。也有相对路径从其他地方开始，而不是从根目录。你应该记得目录“../”指向父目录。这个术语也适用于其他类似目录的结构，如分层数据结构。

**注意：**
虽然你可以在文件名中使用任意字母或符号，但在实际操作中这样做并不明智。最好避免使用在命令行中有特殊意义的字符，如空格、制表符、换行符和其他特殊字符：{ } ( ) [ ] ' " \ / >< | ; ! # & ^ * % @ $。如果你想有一个易于区分的命名，较好的选择是使用点号、连字符和下划线。你也可以使用每个单词首字母大写的驼峰命名法，例如“LikeThis”。经验丰富的Linux用户倾向于不在文件名中使用空格。

**注意：**
“root”一词可能既表示“超级用户root”又表示“根目录”（/）。具体含义需根据上下文确定。

**注意：**
“path”不仅表示包含全限定文件名，也可能表示命令搜索路径。通常需要通过上下文来明确其真实含义。

关于文件层次的最佳详细实践，请参阅文件系统层次标准（“/usr/share/doc/debian-policy/fhs/fhs-2.3.txt.gz”和hier(7)）。以下是一些初学者应记住的标准：