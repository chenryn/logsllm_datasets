要在GUI（图形用户界面）环境下获得shell提示符，你必须启动一个 x 终端模拟器程序，例如 gnome-terminal(1)、
rxvt(1)或 xterm(1)。在GNOME桌面环境下，你可以按超级键（Windows键），在搜索提示里输入”terminal”来打
开终端。
在其它一些桌面系统（如fluxbox）下面，可能没有明显的开始菜单入口。如果是这种情况，试下右击桌面屏幕并希
望能有弹出菜单。
1.1.3 root 账户
root账户也被称作超级用户或特权用户。用这个账户，你能够履行下面的系统管理任务。
• 读、写和删除系统上的任何文件，不顾它们的文件权限
• 设置系统上任何文件的所有者和权限
• 设置系统上任何非特权用户的密码
• 免用户密码登录任何帐户
无限权力的root账户，要求你慎重和负责任的使用。
警告
千万不要和其他人共享root密码.
注意
一个文件（包括硬件设备，如 CD-ROM 等，这些对 Debian 系统来说都只是一个文件）的权限可能会导致非 root
用户无法使用或访问它。虽然在这种情况下，使用root帐户是一个快速的方法，但正确的解决方法应该是对文件权
限和用户组的成员进行合适的设置（参见第 1.2.3 节）。
1.1.4 root shell 提示符
这里有一些基本的方法可以让你在输入root密码后获得root的shell提示符。
• 在字符界面的登录提示符，键入root作为用户名登录。
• 在任意用户的shell提示符下输入“su -l”。
Debian参考手册 3/233
– 这不会保存当前用户的环境设定。
• 在任意用户的shell提示符下输入“su”。
– 这会保存当前用户的一些环境设定。
1.1.5 GUI 系统管理工具
如果你的桌面菜单没有使用适当权限启动 GUI（图形用户界面）的自动化管理工具，你可以在终端模拟器（例如
gnome-terminal(1)、rxvt(1)或 xterm(1)）中root的shell提示符下启动它。参见第 1.1.4 节和第 7.8 节。
警告
永远不要在显示管理器（例如 gdm3(1)）的提示符下输入 root 来使用 root 账户启动 GUI 显示/会话管理
器。
永远不要在显示关键信息的XWindow下运行不受信任的远程GUI程序，因为它可能会监听你的X屏幕。
1.1.6 虚拟控制台
在默认的Debian系统中，有6个可切换的类VT100字符控制台，可以直接在Linux主机上启动shell。除非你处于GUI
环境下，否则你可以同时按下左 Alt 键和 F1—F6之一的键在虚拟控制台间切换。每一个字符控制台都允许独立登
录账户并提供多用户环境。这个多用户环境是伟大的Unix的特性，很容易上瘾。
如果你处于GUI环境中，你可以通过Ctrl-Alt-F3键前往字符控制台3，也就是同时按下左 Ctrl 键、左 Alt 键
和 F3 键。你可以按下Alt-F2回到GUI环境，它一般运行在虚拟控制台2。
你也可以使用命令行切换到另一个虚拟控制台，例如切换到控制台3。
# chvt 3
1.1.7 怎样退出命令行提示符
在命令行输入 Ctrl-D，即同时按下左侧-Ctrl-键和 d-键，即可关闭shell活动。如果你正处于字符控制台，你将
会返回到登录提示行。尽管这些控制字符“controlD”使用了大写字母，你并不需要按住Shift-键。Ctrl-D也可以简
写为^D。或者，你也可以键入”exit”退出命令行。
如果你位于 x 终端模拟器(1)中，你可以使用这个关闭 x 终端模拟器窗口。
1.1.8 怎样关闭系统
就像任何其他的现代操作系统一样，Debian会通过内存中的缓存数据进行文件操作以提高性能，因此在电源被安全地
关闭前需要适当的关机过程，通过将内存中的数据强制写入硬盘来维持文件的完整性。如果软件的电源控制可用，那
么关机过程中会自动关闭系统电源。（否则，你可能需要在关机过程之后按电源键几秒钟。）
在普通多用户模式模式下，可以使用命令行关闭系统。
# shutdown -h now
在单用户模式下，可以使用命令行关闭系统。
# poweroff -i -f
参见第 6.3.8 节。
Debian参考手册 4/233
1.1.9 恢复一个正常的控制台
当做了一些滑稽的事（例如“cat 二进制文件”）后，屏幕会发狂，你可以在命令行输入“reset”。你可能无法在屏
幕上看到你输入的命令。你也可以输入“clear”来清屏。
1.1.10 建议新手安装的额外软件包
尽管连无需任何桌面环境的Debian系统最小安装都提供了基本的Unix功能，但对新手而言，使用apt-get(8)安装
一些基于字符终端的命令行和curses软件包（例如mc和vim）依旧是一个不错的主意。
# apt-get update
...
# apt-get install mc vim sudo aptitude
...
如果你已经安装了这些软件包，那么不会有新的软件包被安装。
软件包 流行度 大小 说明
mc V:50,I:213 1542 文本模式的全屏文件管理器
sudo V:681,I:837 6540 给普通用户授予部分root权限的程序
Unix文本编辑器Vi的改进版，一个程序员的文本编辑器（标准
vim V:95,I:373 3742
版）
Unix文本编辑器Vi的改进版，一个程序员的文本编辑器（精简
vim-tiny V:57,I:974 1730
版）
emacs-nox V:3,I:16 35109 GNU项目的Emacs，基于Lisp的扩展文本编辑器
w3m V:15,I:187 2828 文本模式的万维网浏览器
gpm V:10,I:12 521 Unix风格的文本控制台复制粘贴工具（守护进程）
Table1.1: 有趣的文本模式程序包列表
您也可以考虑阅读一些其他的信息文档。
软件包 流行度 大小 说明
doc-debian I:865 187 Debian项目文档，（Debian常见问题）和其它文档
debian-policy I:15 4379 Debian策略手册和相关文档
developers-reference
V:0,I:5 2604 Debian开发者指导方针和信息
debmake-doc I:0 11701 Debian维护者手册
debian-history I:0 4692 Debian项目历史
debian-faq I:862 790 Debian常见问题
Table1.2: 软件包信息文档列表
你可以用下面的命令安装这些包。
# apt-get install package_name
1.1.11 额外用户账号
如果你不想用你自己的主用户账户来进行下面的练习操作，你可以使用下面的方式创建一个练习用户账户，比如说，
创建一个用户名为fish的账号。
# adduser fish
Debian参考手册 5/233
回答所有问题。
这将创建一个名为fish的新账号。在你练习完成后，你可以使用下面的命令删除这个用户账号和它的用户主目录。
# deluser --remove-home fish
1.1.12 sudo 配置
对于典型的单用户工作站，例如运行在笔记本电脑上的桌面Debian系统，通常简单地配置sudo(8)来使为非特权用户
（例如用户penguin）只需输入用户密码而非root密码就能获得管理员权限。
# echo ”penguin ALL=(ALL) ALL” >> /etc/sudoers
另外，可以使用下列命令使非特权用户（例如用户penguin）无需密码就获得管理员权限。
# echo ”penguin ALL=(ALL) NOPASSWD:ALL” >> /etc/sudoers
这些技巧只对你管理的单用户工作站中那个唯一的用户有用。
警告
在多用户工作站中不要建立这样的普通用户账户，因为它会导致非常严重的系统安全问题。
小心
在上述例子中，用户penguin的密码及账号要有和root账号密码同样多的保护。
在这种情况下，管理员权限被赋予那些有权对工作站进行系统管理任务的人。永远不要让你的公司行政管理
部门或你的老板进行管理（例如给予他们权限），除非他们获得了授权并有这样的能力。
注意
为了对受限的设备和文件提供访问权限，你应该考虑使用组来提供受限访问，而不是通过 sudo(8) 来使用 root
权限。
随着越来越细致周密的配置，sudo(8)可以授予一个共享系统上的其它用户有限的管理权限而不共享root密码。这
可以帮助对有多个管理员的主机进行责任追究，你可以了解到是谁做什么。另一方面，你可能不想任何人有这样的
权限。
1.1.13 动手时间
现在你已经准备好在Debian系统上开工了，只要你使用非特权用户账号就不会有风险。
这是因为Debian系统（即使是默认安装）会设置适当的文件权限来防止非特权用户对系统造成破坏。当然，可能仍然
有一些漏洞可以利用，但关心这些问题的人不应该阅读这一节，而应该去阅读Debian安全手册。
我们使用下面的方式，把Debian系统当作一个类Unix系统来学习。
• 第 1.2 节(基本概念)
• 第 1.3 节(生存方式)
• 第 1.4 节(基本方式)
• 第 1.5 节(shell机制)
• 第 1.6 节(文本处理方式)
Debian参考手册 6/233
1.2 类 Unix 文件系统
在GNU/Linux和其他类Unix操作系统中，文件被组织到目录中。所有的文件和目录排放在以“/”为根的巨大的树里。
叫它树是因为如果你画出文件系统，它看起来就像一棵树，但是它是颠倒过来的。
这些文件和目录可以分散在多个设备中。mount(8)用于把某个设备上找到的文件系统附着到巨大的文件树上。相反
的，umount(8)把它再次分离。在最近的Linux内核里，mount(8)带某些参数时可以把文件树的一部分绑定到另外的
地方，或者可以把文件系统挂载为共享的、私有的、从设备、或不可绑定的。对每个文件系统支持的挂载选项可以
在/usr/share/doc/linux-doc-*/Documentation/filesystems/找到。
Unix系统上叫做目录，某些其他系统上叫做文件夹。请同样留意，在任何Unix系统上，没有的驱动器的概念，例如
“A:”。这只有一个文件系统，并且所有东西都包含在内。这相对于Windows来说是一个巨大的优点。
1.2.1 Unix 文件基础
下面是一些Unix文件基础。
• 文件名是区分大小写的。也就是说，”MYFILE”和”MyFile”是不同的文件。
• 根目录意味着文件系统的根，简单的称为“/”，不要把它跟root用户的家目录“/root”混淆了。
• 每个目录都有一个名字，它可以包含任意字母或除了/”以外的符号。根目录是个特例。它的名字是“/”（称作“斜
线”或“根目录”），并且它不能被重命名。
• 每个文件或目录都被指定一个全限定文件名，绝对文件名，或路径，按顺序给出必须经过的目录从而到达相应目录。
这三个术语是同义的。
• 所有的全限定文件名以“/”目录开始，并且在每个目录或文件名之间有一个“/”。第一个“/”是最顶层目录，其
他的“/”用于分隔跟着的子目录。直到到达最后的入口，即实际文件的名称。这些话可能会令人困惑。用下面这个
全限定文件名作为例子：“/usr/share/keytables/us.map.gz”。不过，人们也把它的基名“us.map.gz”单
独作为文件名。
• 根目录有很多分支，例如“/etc/”和“/usr/”。这些子目录依次分出更多的子目录，例如“/etc/init.d/”和
“/usr/local/”。这整体叫做“目录树”。你可以把一个绝对文件名想象成从“/”这棵树的基到某个分支（一个文
件）的结尾的一条路径。你也听到人们谈论目录树，就好像它是一个包含所有直系后代的“家庭”树的一个图，这
个图叫做根目录（“/”）：因此子目录有父目录，并且一条路径显示了一个文件完整的祖先。也有相对路径从其他地
方开始，而不是从根目录。你应该还记得目录“../”指向父目录。这个术语也适用于其他类似目录的结构，如分层
数据结构。
• 对于一个物理设备, 是没有一个特定的目录路径名来对应的组成部分. 这不同于RT-11, CP/M,OpenVMS,MS-
DOS,AmigaOS, 以及微软的 Windows，这些系统存在一个路径包含了一个设备名字，比如”C:\”。(尽管如此, 路
径条目确实存在引用了物理设备作为正常的文件系统的一部分. 参考第 1.2.2 节。)
注意
虽然你可以在文件名中使用任意的字幕或者符号, 但是在实际情况下这样做是一个坏主意. 最好避免使用一些在命
令行里面含有特殊意义的字符, 比如空格, 制表符, 换行符, 和其它的特殊字符: { } ( ) [ ] ’ ̀ ” \ / >< |
; ! #&^ * % @ $. 如果你想有一个区分度良好的命名, 比较好的选择是利用时期, 连字符和下划线. 你也可以每
个单词的首字母大写, 这叫大驼峰命名法, 比如这样”LikeThis”. 经验丰富的 Linux 用户会趋向于在文件名中不使
用空格.
注意
这个”root”可能既表示”超级用户root”又表示”根目录”(/root). 应该根据上下文确定它的用法.
Debian参考手册 7/233
注意
单词path不仅表示包含全限定文件名,也可能表示命令搜索的路径. 通常路径真实的意思是需要通过上下文来明确.
关于文件层次的最佳详细实践在文件系统层次标准(”/usr/share/doc/debian-policy/fhs/fhs-2.3.txt.gz”
和 hier (7)). 你应该记住以下的一些标准作为开始学习的步骤.