𝐴𝐷 = 𝐴𝐷1∥ · · · ∥𝐴𝐷ℓ𝑚−1, where |𝐴𝐷𝑖| = 𝑡 and 𝐴𝐷𝑖 = 2𝑡−1. It
receives a tag 𝑇 as answer. We denote by 𝑟𝑁 and 𝑠𝑁 the hash key
(after clamping) and the blinding value, associated to the nonce
𝑁 , i.e., 𝑟𝑁 ∥𝑠𝑁 = CC_block(𝐾𝑖, 𝑁 , 0)[1:2𝑡]. Let R denote the set
of all possible hash keys for Poly1305_Mac (after clamping). Let
R1, . . . , R𝑞𝑣 ⊂ R be 𝑞𝑣 disjoint sets, each of 3(cid:106) ℓ𝑚−1
(cid:107) hash keys. For
each R 𝑗, we will construct a forgery polynomial and the associated
pair 𝐴𝐷′,𝑇 , that will be a valid forgery with nonce 𝑁 , if 𝑟𝑁 is in
R 𝑗. Let
4
𝑅(𝑥, R 𝑗) = 𝑥2 · 𝑔(𝑥) · 
zero polynomial of degree at most(cid:106) ℓ𝑚−1
when we rewrite 𝑅(𝑥, R 𝑗) asℓ𝑚
lently asℓ𝑚
𝑟 ∈R 𝑗
4
𝑖=2 𝑎′
𝑖=2 𝑎ℓ𝑚−𝑖+1 · 𝑥𝑖 mod 𝑝 (or equiva-
𝑖−2 · 𝑥𝑖 mod 𝑝 later in the proof), the coefficients
𝑎𝑖 satisfies (2𝑡−1 + 𝑎𝑖 mod 𝑝)  4𝑑 − 2. We are left to show that
(2𝑡−1 + 𝑎′
𝑖 mod 𝑝) < 2𝑡 for all 𝑖 ≤ 4𝑑 − 2. We can compute a basis
(and determinant) of the lattice L, by looking at the row echelon
we don’t need to know). More importantly, 𝑅(𝑥, R 𝑗) =ℓ𝑚
form of the previous matrix:(cid:20)𝐼𝑑
(cid:12)(cid:12) ≤ 𝑝
(cid:12)(cid:12)𝑎′
the smallest vector of L and construct 𝑅(𝑥, R 𝑗) =ℓ𝑚
where 𝐴 is a 𝑑×3𝑑 matrix. From this matrix, we can observe that the
rank of L is 4𝑑, and its determinant is 𝑝3𝑑. Minkowski’s theorem
with the infinity norm yields that, for the shortest vector in L,
4 < 2𝑡−1 for all 𝑖 ≤ 4𝑑 −2.
𝑖 mod 𝑝) < 2𝑡 for all
Therefore, as the adversary A is unbounded, it can compute
𝑖−2 · 𝑥𝑖
𝑖 mod 𝑝) < 2𝑡 for all 𝑖 < ℓ𝑚 − 1. It then
4𝑑 for all 𝑖 ≤ 4𝑑 −2. Thus(cid:12)(cid:12)𝑎′
Hence −2𝑡−1 < 𝑎′
𝑖 ≤ 4𝑑 − 2.
𝑖 < 2𝑡−1 and (2𝑡−1 + 𝑎′
mod 𝑝 such that (2𝑡−1 + 𝑎′
(cid:12)(cid:12) ≤ 𝑝
𝐴
𝑝 · 𝐼3𝑑
𝑖=2 𝑎′
𝑖=2 𝑎′
(cid:21)
0
3𝑑
3
𝑖
𝑖
proceeds to the above-described attack. Note that [2] provides an
algorithm for solving SVP with the infinity norm used in the proof.
C.2 Proof of Proposition 7.6
The following proof is an adaptation of the lower bound of [13] to
a distinguishing attack for ChaCha20-Poly1305. Fix a nonce 𝑁 . Let
A be an adversary that query the encryption of a total number of
𝜎𝑒 blocks across different users. For each of the 𝜎𝑒 block queried,
we denote by 𝑊𝑗 the 𝑛−𝑘 bit string [𝐶𝑖 ⊕ 𝑀𝑖]𝐾- (32)− (𝑍∥𝑖∥𝑁), where
𝐶𝑖 is the encryption of 𝑀𝑖 (the 𝑖-th block of a message) with nonce
𝑁 . The adversary outputs 1, if 𝑊𝑗 ≠ 𝑊𝑗′ for all 𝑗 ≠ 𝑗′.
In the ideal world, the strings 𝑊𝑗 are independent and uniformly
distributed. Thus, the adversary outputs 1 only if a string doesn’t
repeat, i.e.,
Pr
A𝐺Ideal-muAE
ChaCha20-Poly1305[𝜋] ⇒ 1
=
1 − 𝑖
2𝑛−𝑘
.
(cid:21)
(cid:18)
𝜎𝑒−1
𝑖=0
(cid:19)
Using Weierstrass product inequality,
1 − 𝑖
2𝑛−𝑘
≥ 1 −