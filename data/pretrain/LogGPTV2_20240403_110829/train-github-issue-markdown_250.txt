I was looking at the ThreeJS materials. There are four materials that are
nearly the same thing. Basic, Lambert, Phong and NormalMap.
NormalMap seems to have all the features of Lambert and Phong and even has the
ability to turn off things like Specular (to create a Lambert material.)
I think that Basic is a material where color is set into emissive and it isn't
affected by lights.
Thus maybe four different materials could be combined into one.
I am wondering if it is worth keeping all of these materials around on the
shader side of things.
I think that with proper use of DEFINES (as it is already done) we can have
for the most part a single vertex / fragment shader pair for all standard
materials. The variations can be completely controlled via the DEFINES rather
than constructing new shaders via including snippets. I think that with proper
use of DEFINES in the more complex shader you can still get the speed you
would get from a simple Lambert shaders.
One full shader is a lot easier to maintain than three (or four) very similar
shaders. (I also struggle trying to follow the code because of the way the
snippets are combined -- I wonder if there is an alternative design possible
here that is easier to grok.)
Even if we combined things, we could still keep the existing material classes
around for creating specialized materials for those that do not want to deal
with all the options explicitly. Or one can create a factory class for
creating common sub-types of StandardMaterials. But underneath these would all
refer to the same shader, they would just provide simplified parameters to
users.
BTW I am open to other design suggestions regarding the shaders. I do not have
that much experience with dynamic shader generation designs.
(I push this in part because the more we use a single shader for everything
the more can group together objects into batches... Now there are some
additional complications, specifically one needs to be able to control the
variations without defines to do full batches, but that can come later as an
option I think.)