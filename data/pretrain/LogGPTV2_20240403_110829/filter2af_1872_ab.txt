图 9 Linux样本获取信息格式
获取信息格式说明：
## 4 SPARC架构Solaris场景能力
方程式组织可能制造了第一个SPARC架构[9]下的具有Rootkit属性的恶意代码，并为DoubleFantasy的Solaris[10]版本来提供掩护。
### 4.1 Solaris系统及SPARC架构
Solaris是Sun
Microsystems研发的计算机操作系统，采用SPARC架构或X86架构，主要用于工作站、服务器上的操作系统。Solaris平台下的恶意代码比较罕见，从安天统计来看，即使加上之前的SUN
OS时期，二进制编译形态的恶意代码变种数也不超过60种，而且几乎都是基于X86平台的。 SPARC全称为“可扩充处理器架构”（Scalable
Processor ARChitecture），是RISC微处理器架构之一，其指令集和X86有显著区别，并且有自己独有的窗口、延迟槽、过程调用特点。
SPARC架构的计算机一般用于工业、航天相关领域，其在类似IDC和一般IT场景的使用极为罕见。
### 4.2 Rootkit隐藏模块
该模块是SPACR架构的Solaris平台下的一个Rootkit程序，同其他Rootkit程序一样，它主要负责隐藏主功能样本文件、以及相关衍生的文件和其自身，包括进程、文件、和服务信息。它首先在目标机器上运行，侦查目标机器的系统环境、配置信息、网络状态，并隐藏指定的文件和进程。
#### 4.2.1文件标签
#### 4.2.2 样本主函数
样本共有249个函数，如图所示为样本主函数流程，部分函数也相对复杂，且样本内部同样存在多种加密数据。
图 10 样本主函数
#### 4.2.3衍生文件名及路径
样本运行后根据内部配置的两组字符串组合生成文件名，作为自身的新文件名，并将自身复制到/sbin/目录下。
#### 4.2.4 启动脚本
样本使用服务的方式实现开机启动，在etc/rc.d/目录下创建脚本（S85s%），此脚本会作为开机要执行的服务以start参数运行。
图 11 服务脚本
S85s%文件的内容是加密的，样本运行时调用自身函数解密，并修改其中文件名的变量，再将其写入到/etc/rc.d/目录（下图%E处会修改为样本自身路径）。
图 12 解密后脚本内容
#### 4.2.5 隐藏目录、文件
样本会根据目标机器的HOSTID生成MD5，然后再将MD5进行一个类base64的算法计算，最后取前6位，将.tmp与这6位字符拼接成文件夹名称，然后创建该文件夹。
图 13 样本创建的文件夹名 样本还会根据运行参数，将其他文件复制到此文件夹下执行，并负责隐藏此文件夹下的所有文件。
#### 4.2.6 版本判断
样本通过uname函数确定系统不是sun4m、sun4d版本，通过读取/dev/ksyms文件判断系统架构：i386、ia64、sparc、sparcv9，确定是SPARC架构，确定release版本必须是5.1。
图 14 版本判定
#### 4.2.7 加密配置数据
样本内部存在多处加密算法，其中一个调用多次，我们分析并解密出其数据。
图 15 加密算法 解密的加密数据：
#### 4.2.8 解密执行其他代码/样本
样本在文件尾部添加加密数据，执行后通过末尾数据确定加密数据大小，通过定义的格式进行解析和读取，解密数据后猜测会加载执行。
### 4.3 DoubleFantasy的Sparc架构模块
该样本与Windows、Linux平台样本的功能基本相同，主要区别在于CPU架构、汇编指令、配置信息存储位置、获取系统信息等。
#### 4.3.1 文件标签
#### 4.3.2 基本功能
初始化字符串、动态数组，解密内部配置信息。 连接Google或Yahoo网址判断网络连通状态。
连接远程URL地址。样本会收集主机的信息回传至远程地址，并等待远程主机发送指令。 具有读取系统账户密码文件的功能，可以窃取用户及密码信息。
样本内部实现了以守护进程模式运行，可以达到自我保护防止被结束的功能。 该样本采用多种加密算法加密字符串信息。
获取系统大量信息并回传到服务器（如计算机名称、IP地址、进程信息、账户信息等，详细内容可见本章节后面详细分析）。
网络指令部分，具有7条网络指令，功能上与Windows版本相同，可对计算机进行相对应的指令操作，对应指令详细功能见本章后面详细分析。
#### 4.3.3 配置信息加密
由于Solaris系统没有Windows的注册表，因此该样本的配置数据会直接解密后使用，其中一个解密算法如下，该解密函数共调用63次。
图 16 字符串解密 解密出字符串信息见下表：
样本使用的另一个加密字符串的算法，用于加密样本运行时需要使用的配置信息，解密算法如下：
图 17 另一解密算法 解密内容见下表：
#### 4.3.4 网络通信加密
Solaris样本的自定义算法与Windows下的样本相同，而使用的加密密钥只有一个（因为Solaris系统没有注册表，所以就没有注册表加密的功能），该密钥与Windows平台下注册表加密数据的Key相同，两个平台的自定义加密算法是相同的（具体算法可以参考3.1.6加密算法分析部分）。
通过安天CERT分析，得到原始16位密钥为： 66 39 71 3c 0f 85 99 81 20 19 35 43 fe 9a 84 11
长度为16字节，与Windows的原始16位密钥长度相同。 由于Solaris和Windows样本生成网络通信子密钥的算法相同，那么可生成子密钥：
    E9 BE CD E0 A8 9F 4D DB C3 42 AC 2B 24 77 AB CB 5A C1 52 F8 5B 3E F0 78 CB 01 0A 69 29 8F 85 8C 03 9C 7C EF 5E 36 0E 8B C0 40 76 28 9C F2 24 81 9D 02 72 4F 6A BB B5 5B 42 73 14 88 F2 73 75 8B F9 37 98 3B 9F 64 2B A3 C4 FF C7 8A 40 67 C1 25 9F 65 54 45 36 48 FF E2 86 05 1A F4 94 AC 2B 08 D5 E5 83 BE 2C AD EE D0 A6 98 CB 8D 35 ED EE C4 F0 8C F2 CD BA 87 03 54 27 3D 13 A7 9B 6A 05 C7 02 30 21 05 67 58 3B E6 A1 44 0A 37 16 3C 86 E9 BC 8B 20 1A 98 7E 28 E6 7F F7 CA F7 9E 38 31 7F F0 2F 93 11 2B 28 F0 FF 11 B7 FC 1C 63 86 CB
此子密钥才是用于加解密发送、接收数据的。
#### 4.3.5 网络控制指令
在对Solaris样本的分析中我们发现它的功能要比Windows样本的指令少一些，Solaris平台下只有7个指令，功能上与Windows大致相同。下面为两个平台下IDA中的对比图，多图中可以看出Solaris平台下的样本指令比Windows平台上少很多结构图也很简单。
图 18 Windows平台与Solaris平台下网络指令结构对比
Solaris样本的指令功能并未在上图中实现，起初我们以为Solaris样本的指令功能还未完成，不过在进行进一步的分析后我们发现，Solaris样本采用一种特殊的动态计算方式来跳转到不同的指令分支代码，下图中红色部分即为动态计算后跳转的指令分支。
图 19 Solaris指令分支函数