-   算法描述
1.  KDE
> Kernel density
> estimation(KDE)：适用于业务具有不同阶段的周期指标，但是不同阶段内特征无规律或具有突变（比如固定时间的活动办理，固定时间的业务办理情况）
![](media/image69.png){width="4.949305555555555in"
height="1.6229166666666666in"}
2.  MA
> Moving
> Average：擅长处理与时间不相关的异常，正常数据在一定范围内波动，异常数据有较大波动的数据：（如进程健康度场景的错误数，内存使用率，线程占用率，集群负载场景的负载占比等指标）
![](media/image71.png){width="4.231944444444444in"
height="1.7534722222222223in"}
-   算法优势
目前大部分算法对于不同场景下的不同数据特征数据都有比较强的拟合度，如MA算法，在对于内存使用率，错误数，负载占比等抖动小，且长期稳定在某个值的数据，训练的模型能够有较好的检测效果，KDE算法，能够适应如单进程业务量数据，具有周期性，但是在月初月尾特征变化不明显，算法会充分考虑历史数据，训练出比较切合该数据规律的模型。Data
cluster算法，也是针对业务特征，对KDE算法的升级版本，能够对业务场景下，月初月尾的变化特征，对月初月尾进行聚类处理，从而在检测中考虑月初月尾的数据波动，减少误报。
-   模型训练
```{=html}
```
-   迭代周期
模型可周期性自动进行迭代训练。在迭代训练时，上一次训练所用到的数据也会参与当次训练，但由于它们离当前时刻较远，会在训练中被赋予较低的权重。同时，由于模型的训练模式和测试灵敏度等配置会影响迭代训练的模型之间性能的比较，迭代训练时会使用前一模型同样的配置进行训练，并计算几个模型评价指标进行比较。由于异常点的识别受到灵敏度的影响，故前一模型识别出的异常点仍会参与下一轮迭代训练。训练方式如下：
1.  指标尚无模型且满足最低要求10080点，会自动进行训练，训练的算法以及参数会识别训练数据进行选择。
2.  指标周期性自动训练，会根据设置时间，把上一周期数据以及新周期的数据进行训练，算法以及参数会继承。
```{=html}
```
1)  遇到的问题
```{=html}
```
1.  需要提供标准数据或通过平台格式化
2.  不同特征的数据与算法的拟合需要一定周期的迭代甚至敏感度调整
##### **实现功能**
1.  通过清洗模型，把采集的snmp原始数据清洗成基础数据，其中基础数据涵盖众多特征，例如所属设备厂商、类型、ip、端口、指标名等等，实现数据采集功能。
2.  利用SPL语法将基础数据进行二次加工，逻辑是以品牌、类型、ip、端口、指标名为维度进行业务的统计，时间粒度为5分钟，形成原始总包数指标数据，实现数据处理功能。
3.  基础指标数据通过数据工厂，进行格式化处理，形成基础总包数指标数据，实现数据格式化功能。
4.  基础指标累计数量达10080个会进行自动训练，当然训练的周期可根据累计实际数量重新训练，10080个指标是最低标准，实现指标手动&自动训练功能。
5.  训练生成的模型会自动应用，针对后续形成的总包数指标进行实时检测，实现指标检测功能。
6.  关于总包数指标，通过历史数据特征构建的模型，且适配指标特征，针对总包数指标持续上升的阶段状态进行检测，上升到超过传统阈值状态带来的影响，实现针对指标特性检测功能。
总包数量指标具有周期性，使用固定阈值无法适合进程所有时间段的监控，通过KDE算法或者Data
Cluster算法，学习历史规律，结合实时数据，实现动态预警功能。
![](media/image75.png){width="5.7555555555555555in"
height="1.604861111111111in"}
图 43 总包数指标
4.  **落地效果**
指标异常检测可无人工干预进行全流程全过程无人工干预的机器学习算法对进程指标进行训练，使用训练生成的模型对进程指标进行故障异常检测。将数据采集后自动清洗、自动训练、智能算法选择，并周期性自动训练算法以及自动评估算法准确性，实现全自动化机器学习算法故障检测，并周期性自动迭代，不断提升算法检测能力。
指标异常检测算法效果演示：
![](media/image76.png){width="5.757638888888889in"
height="1.5895833333333333in"}
图 44 指标异常检测结果：吞吐量
![](media/image77.png){width="5.752083333333333in"
height="1.5645833333333334in"}
图 45 指标异常检测结果：总包数
![](media/image78.png){width="5.758333333333334in"
height="1.6555555555555554in"}
图 46 指标异常检测结果：CPU使用率
采集网络设备的关键指标，利用机器学习算法故障检测下沉到性能指标和业务指标级别，可以提升运维的精细化程度，针对每台设备的故障进行快速定位和处理，缩短运维排障时间。AI检测结果二次分析效果：
![](media/image79.png){width="5.750694444444444in"
height="2.482638888888889in"}
![](media/image80.png){width="5.752777777777778in"
height="2.2118055555555554in"}
AI告警结合箱线图模型进行二次分析后告警效果：
![](media/image81.png){width="5.748611111111111in"
height="1.4951388888888888in"}
三天原始数据环比（7天前、昨天、今天）：
![](media/image82.png){width="5.752777777777778in"
height="1.8895833333333334in"}
##  业务趋势预警
### 应用背景
针对进程（实例）的监控，传统方式主要对单一的进程存活状态、进程数进行监控，手段非常单一。而进程出现问题更多时候是由于线程使用率高、内存使用率高、进程的数据源使用率高等，因此，必须对这些核心指标进行实时检测，同时，可结合应用日志输出量（如极端僵死情况，日质量急剧减少）、进程运行的服务调用成功率、耗时真实反映进程的健康度情况，往往导致生产系统进程问题定位时间很长。
### 实现方案
整个实现流程概览如下。
首先，对各进程的数据进行采集，如本场景中的内存占用率数据、耗时数据等，并进行清洗和补全相关缺失数据，便于利用。
然后，针对不同的数据类型，不同的数据特征，选择相应的算法对数据进行训练，并生成模型。
训练后，采用生成的模型对实时采集的数据进行检测，并输出相应的结果到仪表盘中进行展示，综合多个指标反映各个进程的健康状况。
![图形用户界面, 图示
描述已自动生成](media/image18.png){width="5.763888888888889in"
height="2.736111111111111in"}
图 47 实现流程图
### 主要功能
1.  通过机器学习算法实现指标异常检测。区别于传统固定规则或人工配置式指标类异常检测方式，本场景引入全过程无人工干预的机器学习算法对进程指标进行训练，使用训练生成的模型对进程指标进行故障异常检测。将数据采集后自动清洗、自动训练、智能算法选择，并周期性自动训练算法以及自动评估算法准确性，实现全自动化机器学习算法故障检测、算法检测能力迭代。
2.  故障检测下沉到进程级别。传统进程监控方式只对进程存活状态、进程数进行监控，缺乏检测进程线程业务量、耗时、错误数等指标的有效机制。本场景采集调用链进程的关键指标，利用机器学习算法故障检测下沉到进程级别，可以提升运维的精细化程度，针对每个进程的故障进行快速定位和处理，缩短运维排障时间。
3.  通过线箱图模型进行告警过滤。部分AI算法检测需要长周期学习和训练，不断迭代算法检测能力，训练过程中的告警可能敏感度较高，因此将AI告警结合箱线图模型进行二次分析后过滤。箱线图具体介绍如下：
![图示 描述已自动生成](media/image83.png){width="3.5in" height="3.0in"}
图 48 线箱图模型
设定Result为实际值，AIUpper为AI模型训练结果上界值，AILower为AI模型训练结果下界值，Tolerable_interval为可容忍区（T1,T2为容忍系数），Exception_Area_Up(Low)为异常区间，当：
(1)、Result处于AIUpper和AILower内，属于AI正常范围。
(2)、如超出此范围，且向上超出，按以下**溢出模型**定级告警：
N = (Result -- AIUpper) / AIUpper
其中，N为实际值超出上界值系数（百分比）,N处于0到正无穷大范围。
> 1）N处于0到T1范围为可容忍区间，结果正常，T1为向上容忍系数。
>
> 2）N处于T1+i\*0.5到T1+(i+1)\*0.5范围则结果异常，异常等级为i+1级。其中0.5为阶梯系数，可按需调整，每超出AI上界值AIUpper
> 0.5倍，异常等级上升一级。本系统告警最高等级为4级。
(3)、如超出此范围，且向下超出，按以下**缩减模型**定级告警：
N = (AILower -- Result) / AILower
其中， N为实际值超出下界值系数（百分比），N处于0到1范围。