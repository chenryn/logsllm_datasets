其中 PORT_TYPE 是以下之一：http_cache_port_t, http_port_t,
jboss_management_port_t, jboss_messaging_port_t, ntop_port_t,
puppet_port_t。
\*\*\*\*\* Plugin catchall_boolean (7.83 confidence) suggests
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
If 要 allow nis to enabled
Then 必须启用 \'nis_enabled\' 布尔值告知 SELinux 此情况。
可以阅读 \'None\' 手册页面来了解详情。
Do
setsebool -P nis_enabled 1 #?
\...
\[root@client-50 \~\]# **semanage port -a -t http_port_t -p tcp 8060**
\[root@client-50 \~\]# systemctl start httpd #重启成功
\[root@client-50 \~\]#
# 案例
案例1：Linux基本防护措施
案例2：使用sudo分配管理权限
案例3：提高SSH服务安全
案例4：SELinux安全防护
1 案例1：Linux基本防护措施
1.1 问题
本案例要求练习Linux系统的基本防护措施，完成以下任务：
修改用户zhangsan的账号属性，设置为2019-12-31日失效（禁止登录）
临时锁定用户lisi的账户，使其无法登录，验证效果后解除锁定
修改tty终端提示，使得登录前看到的第一行文本为"Windows Server 2012
Enterprise R2"，第二行文本为"NT 6.2 Hybrid"
锁定文件/etc/resolv.conf、/etc/hosts，以防止其内容被无意中修改
1.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：修改用户zhangsan的账户属性，设置为2019-12-31日失效（禁止登录）
1）正常情况下，未过期的账号可以正常登录，使用chage可以修改账户有效期。
chage命令的语法格式：
chage --l 账户名称 //查看账户信息
chage --E 时间 账户名称 //修改账户有效期
2）失效的用户将无法登录
使用chage命令将用户zhangsan的账户设为当前已失效（比如已经过去的某个时间）：
\[root@proxy \~\]# useradd zhangsan
\[root@proxy \~\]# chage -E 2015-05-15 zhangsan
尝试以用户zhangsan重新登录，输入正确的用户名、密码后直接闪退，返回登录页，说明此帐号已失效。
3）重设用户zhangsan的属性，将失效时间设为2019-12-31
\[root@proxy \~\]# chage -E 2019-12-31 zhangsan //修改失效日期
\[root@proxy \~\]# chage -l zhangsan //查看账户年龄信息
Last password change : May 15, 2017
Password expires : never
Password inactive : never
Account expires : Dec 31, 2019
Minimum number of days between password change : 0
Maximum number of days between password change : 99999
Number of days of warning before password expires : 7
4）定义默认有效期（扩展知识）
/etc/login.defs这个配置文件，决定了账户密码的默认有效期。
\[root@proxy \~\]# cat /etc/login.defs
PASS_MAX_DAYS 99999 //密码最长有效期
PASS_MIN_DAYS 0 //密码最短有效期
PASS_MIN_LEN 5 //密码最短长度
PASS_WARN_AGE 7 //密码过期前几天提示警告信息
UID_MIN 1000 //UID最小值
UID_MAX 60000 //UID最大值
步骤二：临时锁定用户zhangsan的账户，使其无法登录，验证效果后解除锁定
1）锁定用户账号
使用passwd或usermod命令将用户zhangsan的账户锁定。
\[root@proxy \~\]# passwd -l zhangsan //锁定用户账号lock
锁定用户 zhangsan 的密码。
passwd: 操作成功
\[root@proxy \~\]# passwd -S zhangsan //查看状态status
zhangsan LK 2018-02-22 0 99999 7 -1 (密码已被锁定。)
2）验证用户zhangsan已无法登录，说明锁定生效
输入正确的用户名、密码，始终提示"Login incorrect"，无法登录。
3）解除对用户zhangsan的锁定
\[root@proxy \~\]# passwd -u zhangsan //解锁用户账号
解锁用户 zhangsan 的密码 。
passwd: 操作成功
\[root@proxy \~\]# passwd -S zhangsan //查看状态
zhangsan PS 2018-08-14 0 99999 7 -1 (密码已设置，使用 SHA512 加密。)
步骤三：修改tty登录的提示信息，隐藏系统版本
1）账户在登录Linux系统时，默认会显示登陆信息（包括操作系统内核信息）
/etc/issue这个配置文件里保存的就是这些登陆信息，修改该文件防止内核信息泄露。
\[root@proxy \~\]# cat /etc/issue //确认原始文件
Red Hat Enterprise Linux Server release 6.5 (Santiago)
Kernel \\r on an \\m
\[root@proxy \~\]# cp /etc/issue /etc/issue.origin //备份文件
\[root@proxy \~\]# vim /etc/issue //修改文件内容
Windows Server 2012 Enterprise R2
NT 6.2 Hybrid
2）测试版本伪装效果
退出已登录的tty终端，或者重启Linux系统，刷新后的终端提示信息会变成自定义的文本内容，如图-1所示。
图-1
附加：对于操作系统来说，文件系统也可以通过添加额外属性来提高性能与安全性。
\[root@proxy \~\]# cat /etc/fstab
/dev/vda1 /boot xfs defaults,noexec 0 0
/dev/vda3 /home xfs defaults,noatime 0 0
备注：
noexec属性可以让分区下的所有程序都不可执行，包括病毒与木马
noatime让分区下的所有文件都不再更新atime时间，atime时间为文件的访问时间
步骤四：锁定文件/etc/resolv.conf、/etc/hosts
1）语法格式：
\# chattr +i 文件名 //锁定文件（无法修改、删除等）
\# chattr -i 文件名 //解锁文件
\# chattr +a 文件名 //锁定后文件仅可追加
\# chattr -a 文件名 //解锁文件
\# lsattr 文件名 //查看文件特殊属性
2\) 使用+i锁定文件，使用lsattr查看属性
\[root@proxy \~\]# chattr +i /etc/resolv.conf
\[root@proxy \~\]# lsattr /etc/resolv.conf
\-\-\--i\-\-\-\-\-\-\-\-\-- /etc/resolv.conf
3）使用+a锁定文件(仅可追加)，使用lsattr查看属性
\[root@proxy \~\]# chattr +a /etc/hosts
\[root@proxy \~\]# lsattr /etc/hosts
\-\-\-\--a\-\-\-\-\-\-\-\-\-- /etc/hosts
4）测试文件锁定效果
\[root@proxy \~\]# rm -rf /etc/resolv.conf
rm: 无法删除\"/etc/resolv.conf\": 不允许的操作
\[root@proxy \~\]# echo xyz \> /etc/resolv.conf
-bash: resolv.conf: 权限不够
\[root@proxy \~\]# rm -rf /etc/hosts //失败
\[root@proxy \~\]# echo \"192.168.4.1 xyz\" \> /etc/hosts //失败
\[root@proxy \~\]# echo \"192.168.4.1 xyz\" \>\> /etc/hosts //成功
5）恢复这两个文件原有的属性（避免对后续实验造成影响）
\[root@proxy \~\]# chattr -i /etc/resolv.conf
\[root@proxy \~\]# chattr -i /etc/hosts
\[root@proxy \~\]# lsattr /etc/resolv.conf /etc/hosts
\-\-\-\-\-\-\-\-\-\-\-\-\-\-- /etc/resolv.conf
\-\-\-\-\-\-\-\-\-\-\-\-\-\-- /etc/hosts
2 案例2：使用sudo分配管理权限
2.1 问题
本案例要求利用sudo机制分配管理操作权限，主要完成以下任务：
使用su命令临时切换账户身份，并执行命令
允许softadm管理系统服务的权限
允许用户useradm通过sudo方式添加/删除/修改除root以外的用户账号
允许wheel组成员以特权执行所有命令
为sudo机制启用日志记录，以便跟踪sudo执行操作
2.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：使用su命令临时切换账户身份，并以root执行命令
su(Substitute
User)命令可以快速切换账户身份，普通用户切换账户身份时需要输入密码，root使用su命令切换任何身份都不需要密码，如法格式如下：
\# su - \[账户名称\]
\# su - \[账户名称\] -c \'命令\'
1)从普通用户切换为root账户身份(如果没有普通账户则需要先创建)
\[zhangsan@proxy \~\]# whoami
zhangsan
\[zhangsan@proxy \~\]# su - //切换账户，默认切换为root账户
密码: //输入root的密码
\[root@proxy \~\]# whoami //确认结果
root
2)以普通身份创建文件(如果没有普通账户则需要先创建)，以root身份重启服务
\[root@proxy \~\]# su - zhangsan -c \"touch /tmp/test.txt\"
//管理员切换普通用户
\[root@proxy \~\]# ll /tmp/test.txt
\[zhangsan@proxy \~\]# su - -c \"systemctl restart sshd\"
//以管理员重启服务
密码：
● sshd.service - OpenSSH server daemon
Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor
preset: enabled)
active: active (running) since 五 2018-01-19 08:59:40 CST; 1 months 4
days ago
步骤二：允许softadm管理系统服务的权限
1）修改/etc/sudoers配置
修改/etc/sudoers可以直接使用vim编辑该文件，或使用visudo命令修改该文件。
为softadm授予相关脚本的执行权限，允许通过systemctl工具来管理系统服务。
如果没有softadm账户可以先创建该账户。
\[root@proxy \~\]# useradd softadm
\[root@proxy \~\]# vim /etc/sudoers //修改文件后，需要使用wq强制保存
.. ..
softadm ALL=(ALL) /usr/bin/systemctl
//授权softadm以root身份执行systemctl命令（ALL包括root）
2）切换为softadm用户，并验证sudo执行权限
\[root@proxy \~\]# su - softadm
\[softadm@proxy \~\]\$ sudo -l
... ...
\[sudo\] password for softadm: //输入softadm的口令
.. ..
用户 softadm 可以在该主机上运行以下命令：
(ALL) /usr/bin/systemctl
\[softadm@proxy \~\]\$ systemctl start httpd //不用sudo时启动服务失败
Authentication is required
.. ..
\[softadm@proxy \~\]\$ sudo systemctl restart httpd
//通过sudo启动服务成功
步骤三：允许用户useradm通过sudo方式添加/删除/修改除root以外的用户账号
1）修改/etc/sudoers配置
为useradm授予用户管理相关命令的执行权限，例外程序以!符号取反，放在后面。在执行相关程序时，可以利用通配符\*。
\[root@proxy \~\]# useradd useradm
\[root@proxy \~\]# vim /etc/sudoers
.. ..
useradm ALL=(ALL) /usr/bin/passwd,!/usr/bin/passwd
root,/usr/sbin/user\*,
!/usr/sbin/user\* \* root
2）切换为useradm用户，验证sudo权限
可以通过sudo方式来添加/删除/修改普通用户：
\[useradm@proxy \~\]\$ sudo -l
.. ..
用户useradm可以在该主机上运行以下命令：
(root) /usr/bin/passwd, !/usr/bin/passwd root, /usr/sbin/user\*,
!/usr/sbin/user\* \* root
\[useradm@proxy \~\]\$ sudo useradd newuser01 //可以添加用户
\[useradm@proxy \~\]\$ sudo passwd newuser01 //可以修改普通用户的口令
更改用户 newuser01 的密码 。
新的 密码：
重新输入新的 密码：
passwd： 所有的身份验证令牌已经成功更新。
但是不能修改root用户的密码：
\[useradm@proxy \~\]\$ sudo passwd root
对不起，用户 useradm 无权以 root 的身份在 localhost 上
执行 /usr/bin/passwd root。
步骤四：允许wheel组成员以特权执行所有命令
此案例用来展示sudo的便利性及设置不当带来的危险性，生产环境下慎用。
实现时参考下列操作(如果没有普通用户则先创建该账户)：
\[root@proxy \~\]# vim /etc/sudoers
.. ..
%wheel ALL=(ALL) ALL
\[root@proxy \~\]# usermod -a -G wheel zengye
\[zengye@proxy \~\]\$ sudo -l
.. ..
用户 zengye 可以在该主机上运行以下命令：
(root) /bin/\*
步骤五：为sudo机制启用日志记录，以便跟踪sudo执行操作
1）修改/etc/sudoers配置，添加日志设置
\[root@proxy \~\]# visudo
Defaults logfile=\"/var/log/sudo\"
.. ..
2）以root（默认有所有权限）执行sudo操作
\[root@proxy \~\]# sudo -l //查看授权的sudo操作
\[softadm@proxy \~\]# sudo systemctl status httpd //查看授权的sudo操作
3）确认日志记录已生效
\[root@proxy \~\]# tail /var/log/sudo
.. ..