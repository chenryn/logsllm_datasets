318964
∼0.3k
∼5.6k/month
7
-
D
78560
18
1594
charge price data and associated features to train a machine learn-
ing model. (cid:140)is component is designed to incorporate data such
as o(cid:132)ine weblogs (see Section 4), or online anonymous contribu-
tions (anonymized features and charge prices) from participating
users, similarly to other systems that depend on crowd-sourcing
(e.g., Floodwatch [76]). Using such data, the PME can re-train the
computed model at any time. To assess the di(cid:130)erence between clear-
text and encrypted price distributions in the wild and (cid:128)ne-tune
the training model, the PME runs small “probing ad-campaigns” to
collect ground truth of real charge prices from both encrypted and
cleartext formats.
Feeding the PME with all possible metadata available, i.e. auc-
tions’ metadata and users’ personal data, is clearly not practical.
(cid:140)ere exist hundreds of data points per individual price. Passing
all of them to the modeling engine would make the computational
cost excessive. Additionally, if all data points were to be used in
the probing ad-campaigns, they would render such campaigns too
expensive for their purpose. In order to run e(cid:130)ective and e(cid:129)cient
ad-campaigns, and allow the training of a price model without high
computation overhead, the PME performs careful dimensionality
reduction on the extracted metadata (F) to derive a subset S ⊆ F of
core features capable to capture the value of an impression. (cid:140)is
dimensionality reduction makes the probing ad-campaigns feasible
by reducing by many orders of magnitude the needed features of
each testing setup, and e(cid:130)ectively the number of setups to be tested
(see Section 5).
Using the collected ground truth of encrypted prices from ad-
campaigns, the PME trains a machine learning model M to infer
encrypted prices based on their associated subset of features S.
(cid:140)en, each user can apply the model M (in the form of a decision
tree) locally on their device to estimate each of her encrypted charge
prices based on the matching metadata S.
In case the availability of cleartext prices is limited, the reduc-
tion step to identify important features could be hindered, but
not obstructed. To mitigate this, the PME can run more probing
ad-campaigns to cover extra features found in users’ anonymous
contributions, or that are available in professional ad-campaign
planners (as in FDVT [14]). (cid:140)en, the most important features can
be selected based on their contribution to model the encrypted
prices extracted from these campaigns.
YourAdValue
3.3
YourAdValue is a user-side tool responsible for monitoring the
user’s nURLs and calculating locally the cumulative cost paid for
her in real-time. To achieve this, it (cid:128)lters nURLs from her network
tra(cid:129)c and extracts (i) the RTB auction’s charge prices (both en-
crypted and cleartext), and (ii) metadata from each speci(cid:128)c auction
(e.g. time of day, day of week, size of ad, involved DSP and ADX,
Type
Geo-temporal
User
Ad
Feature
Time of day, Day of week
Location of user based on IP, # of unique locations of
the user, location history
Interest categories of the user, Type of mobile device, #
of total web beacons detected for the user, # of cookie
syncs detected of the user up to now, # of publishers
visited by the user, # of total bytes consumed by the
user,
Avg. number of reqs per user for the advertiser, # of
HTTP reqs of the user, Avg. number of bytes per req of
user, Total duration of reqs of the user, Avg. duration
per req of the user
Size of ad, ADX of nURL, DSP of nURL, IAB category
of the publisher, popularity of particular ad-campaign,
# of total HTTP reqs of the advertiser, # of bytes of
HTTP req, Avg. duration of the reqs for the advertiser,
# of URL parameters, Number of total bytes delivered
for the advertiser
Table 4: Features extracted by summarizing data from parameters
embedded in each price noti(cid:128)cation detected in the dataset for users
and advertisers.
etc.) along with the personal data the user leaks while using on-
line services (e.g. location, type of device and browser, type of OS,
browsing history, etc.).
As we mentioned earlier, cleartext prices can be aggregated di-
rectly, but encrypted prices must be estimated. (cid:140)erefore, YourAd-
Value retrieves from the PME a model M(Si) that (i) includes the
features Si that need to be extracted from the collected metadata,
and (ii) provides a decision tree for the estimation of an encrypted
price based on these features.
Using this model, YourAdValue can estimate locally on the client
side, the value ESe(Si) of the encrypted charge prices based on the
features Si of the given nURL. A(cid:137)er estimating each encrypted
price, YourAdValue presents to the user the calculated sums Cu(T)
and Eu(T) along with relevant statistics and the total amount Vu(T)
paid by advertisers (see Section 6).
YourAdValue can be implemented in the same manner, either as
a browser extension for desktops or as a module for mobile devices.
In the la(cid:138)er case, YourAdValue can monitor tra(cid:129)c of both browsers
and apps similar to existing approaches [64]. For simplicity, in this
work we design YourAdValue as a browser extension; its mobile
counterpart is part of our future work.
Our tool, built as an extension for Chrome browser, monitors
both HTTP and HTTPS tra(cid:129)c of the user and detects the RTB
nURLs. Additionally, it stores in the browser’s local storage the
(cid:128)ltered charge prices, the personal and auctions metadata and the
estimation of the encrypted prices. (cid:140)e extension, through toolbar
noti(cid:128)cations, informs the user about newly detected RTB charge
prices. Upon request, it reports the cumulative cost along with the
previous individual charge prices. Finally, the extension periodically
issues requests to PME to check for new versions of the model.
4 BOOTSTRAPPING PME
We assess the feasibility and e(cid:130)ectiveness of our methodology by
bootstrapping the PME to train our model on real data by collecting
IMC ’17, November 1–3, 2017, London, United Kingdom
Panagiotis Papadopoulos et al.
Figure 5: Distribution of charge prices per
city (sorted by city size).
Figure 6: Distribution of charge prices for dif-
ferent times of day.
Figure 7: Distribution of charge prices for dif-
ferent days of week.
Figure 9: Portion of RTB tra(cid:129)c
normalized by OS.
Figure 8: Portion of RTB tra(cid:129)c
for top mobile OSes.
a year long dataset containing weblogs from 1594 volunteering mo-
bile users from the same country. Our users agreed to use a server
of our control as a proxy, allowing us to monitor their outgoing
HTTP tra(cid:129)c.2 As a result, we were able to collect a large dataset
D of 373M HTTP requests spanning the entire year of 2015. Note
that though our dataset consists of HTTP-only tra(cid:129)c, in principle
our approach works with HTTPS as well, using as input the users’
contributed data as can be seen in Figure 4. Table 3 presents a
summary of our dataset D. Next, we present the data collection
and analysis to extract features used in the price modeling and
ad-campaign planning.
4.1 Dataset analysis
Weblog Ads Analyzer. To process our dataset, we implemented a
weblog advertisements analyzer, capable of detecting and extracting
RTB-related ad tra(cid:129)c. First, the analyzer uses a tra(cid:129)c classi(cid:128)cation
module to categorize HTTP requests based on an integrated black-
list of the popular browser adblocker Disconnect [15].3 Using this
blacklist, the analyzer categorizes domains in 5 groups based on the
content they deliver: (i) Advertising, (ii) Analytics, (iii) Social, (iv)
3rd party content, (v) Rest. It consequently applies a second-level
(cid:128)ltering on the advertising tra(cid:129)c by parsing each URL for any
RTB-related parameters (like nURL). (cid:140)e analyzer detects nURLs
by applying pa(cid:138)ern matching against a list of macros we collected
a(cid:137)er (i) manual inspection and past papers [53, 62], and (ii) studying
the existing RTB APIs [25, 35, 56, 63, 69] used by the current domi-
nant advertising companies. From these detected nURLs, it extracts
the charge prices which we assume in this study that are in US
2Data were treated anonymously although users signed a consent form allowing us to
collect and analyze their data.
3Our analyzer can also integrate more than one blacklists (e.g., Adblock Plus’ Easylist,
Ghostery’s blacklist, etc.)
Figure 11: CDF of the generated
cost per IAB category.
Figure 10: Distribution of charge
prices per mobile OS.
dollars4 paid by the winning bidders, a(cid:137)er (cid:128)ltering out any bidding
prices that may co-exist in each nURL. It also extracts additional
ad-related parameters such as ad impression ID, bidder’s name, ad
campaign ID, auction’s ad-slot size, carrier, etc.
Other operations carried out by our analyzer include: (i) user
localization based on reverse IP geo-coding, (ii) separation of mo-
bile web browser and application originated tra(cid:129)c based on the
user-agent (cid:128)eld of each HTTP request, (iii) extraction of device-
related a(cid:138)ributes from the user-agent (cid:128)eld (type of device, screen
size, OS etc.), (iv) identi(cid:128)cation of cooperating ADXs - DSPs pairs,
leveraging the nURL used by the ADX to inform the bidder (i.e.
DSP) about its auction win, (v) user interest pro(cid:128)le based on web
browsing history.
Feature extraction. DSPs use di(cid:130)erent machine learning algo-
rithms for their decision engines, taking various features as input,
each a(cid:130)ecting di(cid:130)erently the bidding price and, consequently, the
charge price of an ad-slot. To identify such important parame-
ters, we extracted several features from the nURLs of our dataset
such as user mobility pa(cid:138)erns, temporal features, user interests,
device characteristics, ad-slot sizes, cookie synchronizations [1],
publisher ranking, etc. Next, we present the analysis of the most
interesting features (Table 4 presents a summary). We group them
into 3 categories: geo-temporal state of the auction (§ 4.2), user’s
characteristics (§ 4.3), and ad-related (§ 4.4).
4.2 Geo-temporal features
An important parameter that a(cid:130)ects the price of an RTB ad is the
user’s current location [31], information which is broadly avail-
able to publishers and trackers. (cid:140)us, in our dataset we extract
user IP address and using the publicly accessible MaxMind geoIP
4Given that the majority of ADXs are located in US and following previous works [62],
we assume every charge price to be in US Dollars (so 1CP M =1/1000 impressions).
 0.01 0.1 1 10 100MadridBarcelonaSevilleValenciaMalagaZaragozaVillaviciosa de OdonPriego de CordobaDos HermanasTorelloCharge price (CPM)Locations 0 0.5 1 1.5 2 2.5 3 3.5 4 4.500:00-03:0004:00-07:0008:00-11:0012:00-15:0016:00-19:0020:00-23:00Charge price (CPM)Time of day 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5SundayMondayTuesdayWednesdayThursdayFridaySaturdayCharge price (CPM)Day of week0%20%40%60%80%100%123456789101112RTB shareMonth of the yearAndroidiOSWindows MobOther0%0.2%0.4%0.6%0.8%1%1.2%1.4%1.6%1.8%123456789101112RTB share per OSMonth of the yearAndroidiOS 0.01 0.1 1 10 100AndroidiOSCharge price (CPM)Mobile Device OS0%10%20%30%40%50%60%70%80%90%100% 0.01 0.1 1 10 100CDFCharge price (CPM)IAB1IAB2IAB3IAB5IAB9IAB12IAB15IAB17IAB19IAB22How much do advertisers pay to reach you?
IMC ’17, November 1–3, 2017, London, United Kingdom
the larger portions of the market through the entire year, with
Android-based devices appearing in 2x times more RTB auctions.
However, when normalizing this RTB share per mobile OS (Fig-
ure 9), we (cid:128)nd that Android and iOS devices are delivered mostly
equal RTB impressions, with some months Android surpassing iOS
and vice-versa. (cid:140)en, we extract the tra(cid:129)c originated from the most
popular ad-entity, MoPub [57], and analyze the charge prices of the
impressions rendered in the di(cid:130)erent OSes. Surprisingly, although
Android-based devices are more popular, we see in Figure 10 that
iOS-based devices tend to receive higher RTB prices, in median
values.
Inference of the user’s interest. (cid:140)e browsing history of a user
is used by the advertising ecosystem as a proxy of her interests. By
monitoring the websites a user visits through time, a tracker can
infer her interests, political or sexual preferences, hobbies, etc., quite
accurately [7]. To enrich our set of features with the users’ interests,
we collect all the websites each user visits across her whole network
activity. Such information is available to the RTB ecosystem as
well, by using cookie synchronization [1] or web beacons [34]. To
extract the interests from the visited websites, similar to existing
approaches [3], we retrieve the associated categories of content
for each website according to Google AdWords [27]. (cid:140)en, we
aggregate across groups of categories for each user and get the
(cid:128)nal weighted group of interests for each user in the form of IAB
categories [37]. Figure 11 presents for the top mobile ADX (MoPub)
a distribution of the generated ad revenue for the di(cid:130)erent IAB
content categories in a 2 month subset of our dataset. As expected,
not all IAB categories cost the same. Indeed, there are categories
that are associated with products which a(cid:138)ract higher bid prices
in auctions, like IAB-3 (Business & Marketing), with an average
charge price of up to 5 CPM for the 50% of the cases. Alternatively,
there are categories like IAB-15 (Science), which are unable to draw
prices higher than 0.2 CPM for the 50% of the cases.
4.4 Ad-related features
Web Vs. Apps Advertisers bid for ad-space in both webpages and
mobile apps. A(cid:137)er studying the cost per ad in both counterparts in
our dataset, we see that apps draw on average 2.6× higher prices
(0.712 CPM vs. 0.273 CPM). (cid:140)is is expected; studies have shown
that more advertising budget is spent on mobile application ads
instead of mobile web, driving higher prices per ad [58]: (i) Users