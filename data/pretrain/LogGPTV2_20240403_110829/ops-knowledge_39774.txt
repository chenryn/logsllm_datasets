User: How to install Docker on a Linux server and deploy a sample application using Docker?
Assistant: Install Docker: 1. Update the apt package manager: `sudo apt-get update` 2. Install the required dependencies: `sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release` 3. Add Docker GPG key: `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg` 4. Add Docker Software source: `echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable " | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null` 5. Update the apt package manager: `sudo apt-get update` 6. Install Docker: `sudo apt-get install docker-ce docker-ce-cli containerd.io` 7. Start the Docker service: `sudo systemctl start docker` 8. Verify that Docker is installed successfully: `sudo docker run hello-world` To deploy the sample application: 1. Create a Docker image Folder: `mkdir docker-example` 2. Go into the folder: `cd docker-example` 3. Create a file named Dockerfile and paste the following into the file: ``` FROM node:12-alpine WORKDIR /app COPY package*.json ./ RUN npm install COPY . . EXPOSE 3000 CMD [ "npm", "start" ] ``` 4. Create a Node.js application: - Create a file called app.js , and paste the following into the file: ``` const express = require('express') const app = express() app.get('/', (req, res) => { res.send('Hello World!') }) app.listen(3000, () => { console.log('Example app listening on port 3000!') }) ``` - Create a file called package.json and add the following Paste the content into the file: ``` { "name": "docker-example", "version": "1.0.0", "description": "", "main": "app.js", "scripts" : { "start": "node app.js" }, "author": "", "license": "ISC", "dependencies": { "express": "^4.17.1" } } ``` 5 . Build the Docker image: `sudo docker build -t docker-example .` 6. Run the Docker container: `sudo docker run -p 8080:3000 docker-example` 7. Visit http://localhost:8080/, you should be able to see To the webpage that displays "Hello World!".