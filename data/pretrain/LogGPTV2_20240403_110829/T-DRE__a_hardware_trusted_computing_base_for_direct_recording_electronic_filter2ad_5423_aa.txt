title:T-DRE: a hardware trusted computing base for direct recording electronic
vote machines
author:Roberto Gallo and
Henrique Kawakami and
Ricardo Dahab and
Rafael Azevedo and
Saulo Lima and
Guido Araujo
T-DRE: A Hardware Trusted Computing Base for Direct
Recording Electronic Vote Machines
∗
Roberto Gallo
University of Campinas
Campinas, SP, Brazil
PI:EMAIL
PI:EMAIL
Rafael Azevedo
Tribunal Superior Eleitoral
Brasilia, DF, Brazil
PI:EMAIL
Henrique Kawakami
KRYPTUS Cryptographic
Engineering Ltd.
Campinas, SP, Brazil
PI:EMAIL
†
Ricardo Dahab
University of Campinas
Campinas, SP, Brazil
PI:EMAIL
Saulo Lima
Tribunal Superior Eleitoral
Brasilia, DF, Brazil
PI:EMAIL
‡
Guido Araujo
University of Campinas
Campinas, SP, Brazil
PI:EMAIL
ABSTRACT
We present a hardware trusted computing base (TCB) aimed
at Direct Recording Voting Machines (T-DRE), with novel
design features concerning vote privacy, device veriﬁability,
signed-code execution and device resilience. Our proposal
is largely compliant with the VVSG (Voluntary Voting Sys-
tem Guidelines), while also strengthening some of its rec-
comendations. To the best of our knowledge, T-DRE is the
ﬁrst architecture to employ multi-level, certiﬁcation-based,
hardware-enforced privileges to the running software. T-
DRE also makes a solid case for the feasibility of strong se-
curity systems: it is the basis of 165,000 voting machines, set
to be used in a large upcoming national election. In short,
our contribution is a viable computational trusted base for
both modern and classical voting protocols.
1.
INTRODUCTION
Electronic voting systems (EVSs) are a very interesting
subject, as they are comprised of system components which
interact within an complex environment with boundary con-
ditions of diﬀerent nature, legal, cultural, logistical and ﬁ-
nancial. Several countries have adopted EVSs, tailoring
them to meet their speciﬁcities.
The Brazilian voting system currently has over 135 mil-
search grants
∗Partially funded by KRYPTUS and SERASA Experian re-
†Partially funded by FAPESP (2007/56052-8), CNPq
‡Partially funded by FAPESP (2010/14492-4) and CNPq
(309491/2008-8), and SERASA Experian research grants
(305371/2009-6) research grant
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’10 Dec. 6-10, 2010, Austin, Texas USA
Copyright 2010 ACM 978-1-4503-0133-6/10/12 ...$10.00.
lion registered voters [2], with variable literacy degree. Thus,
electronic voting is a very simple procedure, which con-
sists of typing candidates’ numbers on a reduced keyboard,
guided by simple instructions on a small screen.
Brazil
adopted Direct Recording Electronic voting machines (DREs
from now on) in 1996. In 2009 a decision was made to re-
place part of the aging hardware base with a newly designed
version, while maintaining backward compatibility.
Voting Systems Fundamental Goals
In spite of local constraints, EVSs share six common, fun-
damental, goals (Sastry [24]):
Goal 1. One voter/one vote. The cast ballots should ex-
actly represent the votes cast by legitimate voters. Ma-
licious parties should not be able to add, duplicate, or
delete ballots.
Goal 2. Cast-as-intended. Voters should be able to re-
liably and easily cast the ballots that they intend to
cast.
Goal 3. Counted-as-cast. The ﬁnal tally should be an
accurate count of the ballots that have been cast.
Goal 4. Veriﬁability. It should be possible for participants
in the voting process to prove that the voting system
obeys certain properties.
Goal 5. Privacy. Ballots and certain events during the vot-
ing process should remain secret.
Goal 6. Coercion resistance. A voter should not be able
to prove how she voted, to a third party not present
in the voting booth.
These goals are related (e.g. a voting system that does
not satisfy goal 5 will hardly satisfy goal 6) and potentially
conﬂicting (e.g.
it is not trivial to build a voting system
that is totally veriﬁable while preserving voters’ privacy).
Third-party end-to-end veriﬁability has been a recurrent
subject [20]. Usually, veriﬁability is linked to the concept
of (statistical) conﬁdence level. Diﬀerent cultures, and thus
electoral laws, have diﬀerent thresholds for the level of con-
ﬁdence they consider adequate for the electoral process.
191Software independence is not enough. Diﬀerent vot-
ing protocols [3, 17, 5] have been proposed to meet the
above goals, with variable degrees of success and eﬀective-
ness. Unfortunately, most of them can be defeated by com-
promised software or hardware running in the underlying
computing base. In order to mitigate such threats, software-
independent systems were proposed by Rivest and Wack [21]:
A voting system is software-independent (SI) if an unde-
tected change or error in its software cannot cause an un-
detectable change or error in an election outcome. However
strong, this concept ensures most of the above requirements
but not all.
For instance, coercion resistance and vote privacy are es-
pecially susceptible to attacks based on tampered hardware
and software, as vote input devices themselves can leak in-
formation [12, 22, 24]. Hardware protection and veriﬁcation
is thus an essential aspect, regardless of whether SI systems
are employed or not. While some eﬀort has been done to-
wards the speciﬁcation of hardware functionalities in order
to provide suﬃcient device accreditation and tamper resis-
tance [19, 8, 24], there is much room for improvement on
the path to feasible implementations. Here we follow that
path, presenting a hardware trusted computing base (TCB)
for direct recording electronic voting architecture, T-DRE
in short, suitable for a variety of existing voting protocols
and systems.
Summary of our Contributions
Our contributions are present both in the novelty of the T-
DRE components and in their composition. Namely, we
propose a trusted hardware architecture that extensively
employs signed code execution with hardware-enforced ac-
cess control to peripherals in order to prevent a number of
attacks. Further advancements include human-computable
device integrity veriﬁcation mechanisms, strong accountabil-
ity, and improved signed-code execution assurance, all sup-
ported by a certiﬁcation hierarchy which takes advantage of
the proposed hardware.
The T-DRE architecture described herein was adopted by
the Brazilian National Election Authority (Tribunal Supe-
rior Eleitoral - TSE). In order to fully validate the speci-
ﬁcation, we ﬁrst implemented a prototype evaluation plat-
form.
Subsequently, the speciﬁcation was realized by a
vendor under TSE’s control, using another hardware plat-
form, and taking into account additional costs and strin-
gent ﬁeld, legal, and resilience restrictions, while maintain-
ing backward compatibility with the deployed base. This
endeavor, which resulted in 165,000 produced units, further
supports our claims on the feasibility of the architecture.
Our proposal is not an airtight solution to electronic vot-
ing; we discuss its limitations in Section 5. However, we do
claim that it provides a layer of security to SI and non-SI
systems alike, whose strength is degrees above that of vot-
ing systems currently deployed around the world, by making
it extremely diﬃcult and costly for a fraud attempt to go
undetected. Also, although we target centralized elections,
in Section 4.2 we discuss how T-DRE can be naturally ex-
tended to decentralized environments such as in the USA.
This paper is organized as follows: Section 2 gives practi-
cal goals and boundary conditions of voting systems; Sec-
tion 3 discusses related work; Section 4 details our pro-
posal; Section 5 reports implementation eﬀorts; Section 6
concludes, with ideas for future work.
2. VOTING SYSTEMS PRACTICAL GOALS
AND BOUNDARY CONDITIONS
Attaining the fundamental goals is subject to practical
boundary conditions, especially in large elections. Three
important constraints are:
Availability. Voting systems must be available during the
critical periods (election day, tallying, etc.) and resist
denial of service attempts. DRE machines must resist
tampering;
Credibility. An aspect of utmost importance, it is at the
basis of fair representativity. Accordingly, implemen-
tations of voting systems should minimize the chance
of operational errors and resist tampering. Here, again,
DRE hardware security and veriﬁability plays an im-
portant role;
Resource Rationalization. The practical realization of vot-
ing systems should take into account various cost-related
variables, such as auditing and hardware cost and main-
tenance. When security is considered, a clear budget
trade-oﬀ exists between built-in security mechanisms
and the security procedures employed by the Electoral
Authority (EA). While the ﬁrst is typically a one-time
expenditure which is multiplied by the number of DRE
machines, the second is recurrent, ﬂexible, and propor-
tional to the number of polls. The security targets for
DRE machines must take this into account.
Security Targets
The speciﬁcation of security targets should make provisions
for many diﬀerent variables (Common Criteria [27]). In face
of the current Brazilian Electoral Laws, the following vari-
ables demand special attention:
Window of opportunity. Our implementation should take
into account that attacks on DRE machines can occur
at any time, but more easily in the interstices between
elections. Pre-election time is the most vulnerable due
to transportation of DRE machines across huge dis-
tances.
Surface and scope of attacks. Voting machines are sub-
ject to diﬀerent levels of adversarial exposure between
procedural checkpoints established by the EA: during
election interstice, an adversary can have physical ac-
cess to the DREs; in the pre-election (setup) phase, ad-
versaries may have media (logical) access to the DREs;
at election day, adversaries typically have only opera-
tional access to DREs, as all non-HID I/O are sealed
and the machines operate oﬄine. Our security tar-
get take these conditions into account.
It provides
tampering resistance and tampering evidence on the
Critical Security Parameters (CSP) such as keys and
key counters, with a physical security target of FIPS
140-2 level 3 [18] (passive resistance). Moreover, a suc-
cessful attack must have limited scope - breaking one
DRE should not increase the chances of an adversary
of breaking another.
Level of adversarial expertise. Attacks on a DRE, es-
pecially those which adulterate or recover key material
or CSPs, must demand multiple experts, considerable
192time (impossible to execute during election day) and
removal to a laboratory with special equipment.
Audit control points, mechanisms and equipments.
Audit points shall be precise, clear and accessible. There
should be an audit point aggregator that simply ex-
presses the DRE’s state (fully operational, in error, in
service). The interpretation of this audit point should
not require additional equipment nor complex proce-
dures, being accessible to all parties involved in the
electoral process: voter, electoral authority, poll worker,
and party advocates.
3. RELATED WORK
In this section we discuss related work regarding T-DRE’s
features.
3.1 Signed Code Execution
Signed code execution [4, 1] is an important tool in vot-
ing systems [23, 28]. Many security issues faced by EVSs
can be directly mitigated by the proper use of signed code
execution. Beneﬁts include:
• ensuring that only oﬃcial voting software is executed
in DREs, enhancing resilience against deliberate adul-
teration and operational errors which may violate EVS
fundamental goals such as vote secrecy and coercion
resistance;
• tracing and accountability of incidents, enabling secu-
rity through legal means;
• simple veriﬁcation of binaries’ integrity in pre, intra
and post-election phases, which facilitates auditing by
parties, voters, and the Electoral Authority.
Hardware-based signed code execution can be achieved
by various means, the de facto standard being the Trusted
Computing Group (TCG, now ISO/IEC 11889) Personal
Computer Trusted Platform Module (TPM) [11], a com-
panion chip to the main system CPU, usually connected via
LPC bus. The TPM has functional characteristics similar
to a smart card.
In cryptographic terms, the TPM per-
forms several operations: key generation, storage and use
of cryptographic keys, protected by a key that represents
the system’s root of trust. Moreover, unlike typical smart
cards, the TPM has mechanisms for software attestation,
which allows certain running application parameters to be
anonymously veriﬁed and certiﬁed as not tampered. The
module is recommended by the VVSG ([28], Section 5.5.1)
for protection of the DRE software stack.
One of the drawbacks of PC TPM modules is that they
work passively, in hardware terms, with respect to the main
system CPU. TPMs, by design, can be completely bypassed
by the system’s boot sequence if the BIOS (especiﬁcally, the
“Core Root of Trust for Measurement”, CRTM) is tampered
with, and thus “deceived” when used in application veriﬁca-
tion tests. Extensions to the TPM as the TEM from Costan
et al [6], being also passive with respect to the CPU, repre-
sent no improvement in this regard.
To overcome this master-slave problem, one can consider
the sole use of secure processors as the main component
of a TCB aimed at DREs. However, even state-of-the-art
processors with security features, such as AEGIS [26], USIP-
PRO [13] and Cell [25], suﬀer from impeditive shortcomings.
While the AEGIS speciﬁcation is completely open, to the
best of our knowledge there are no commercially available
realizations of it. The USIP-PRO, in turn, has limited pro-
cessing power, its architecture is proprietary and the vendor
makes no assertions regarding memory protection against
data modiﬁcation. Finally, the Cell processor is proprietary,
not allowing full access to hardware features from indepen-