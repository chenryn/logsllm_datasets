{
  int iVar1;
  undefined4 *puVar2;
  uint local_14;
  uint *local_10;
  uint local_c;
  __crt_seh_guarded_call_int_ local_5;
  if (param_1 == 0xfffffffe) {
    puVar2 = (undefined4 *)FUN_00407f2d();
    *puVar2 = 0;
    puVar2 = (undefined4 *)FUN_00407f40();
    *puVar2 = 9;
  }
  else {
    if (((-1 > 6] + 0x28 + (param_1 & 0x3f) * 0x38) & 1) != 0))
    {
      local_10 = &param_1;
      local_c = param_1;
      local_14 = param_1;
      iVar1 = 
              operator___class__lambda_123407a5e2ac06da108355a851863b7a__class__lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec___class__lambda_ae55bdf541ad94d75914d381c370e64d___
                        (&local_5,(_lambda_123407a5e2ac06da108355a851863b7a_ *)&local_14,
                         (_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_ *)&local_10,
                         (_lambda_ae55bdf541ad94d75914d381c370e64d_ *)&local_c);
      return iVar1;
    }
    puVar2 = (undefined4 *)FUN_00407f2d();
    *puVar2 = 0;
    puVar2 = (undefined4 *)FUN_00407f40();
    *puVar2 = 9;
    FUN_00407e83();
  }
  return -1;
}
// Library Function - Single Match
// Name: __close_nolock
// Library: Visual Studio 2015 Release
int __cdecl __close_nolock(int _FileHandle)
{
  intptr_t iVar1;
  intptr_t iVar2;
  HANDLE hObject;
  BOOL BVar3;
  int iVar4;
  DWORD DVar5;
  iVar1 = __get_osfhandle(_FileHandle);
  if (iVar1 != -1) {
    if (((_FileHandle == 1) && ((*(byte *)(DAT_0041f080 + 0x98) & 1) != 0)) ||
       ((_FileHandle == 2 && ((*(byte *)(DAT_0041f080 + 0x60) & 1) != 0)))) {
      iVar1 = __get_osfhandle(2);
      iVar2 = __get_osfhandle(1);
      if (iVar2 == iVar1) goto LAB_00413a6b;
    }
    hObject = (HANDLE)__get_osfhandle(_FileHandle);
    BVar3 = CloseHandle(hObject);
    if (BVar3 == 0) {
      DVar5 = GetLastError();
      goto LAB_00413abd;
    }
  }
LAB_00413a6b:
  DVar5 = 0;
LAB_00413abd:
  __free_osfhnd(_FileHandle);
  *(undefined *)((&DAT_0041f080)[_FileHandle >> 6] + 0x28 + (_FileHandle & 0x3fU) * 0x38) = 0;
  if (DVar5 == 0) {
    iVar4 = 0;
  }
  else {
    ___acrt_errno_map_os_error(DVar5);
    iVar4 = -1;
  }
  return iVar4;
}
// Library Function - Single Match
// Name: ?__acrt_stdio_free_stream@@YAXV__crt_stdio_stream@@@Z
// Library: Visual Studio 2015 Release
// void __cdecl __acrt_stdio_free_stream(class __crt_stdio_stream)
void __cdecl __acrt_stdio_free_stream(__crt_stdio_stream param_1)
{
  undefined3 in_stack_00000005;
  *_param_1 = 0;
  _param_1[1] = 0;
  _param_1[2] = 0;
  _param_1[4] = 0xffffffff;
  _param_1[5] = 0;
  _param_1[6] = 0;
  _param_1[7] = 0;
  _param_1[3] = 0;
  return;
}
// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
__int64 __cdecl FUN_00413b2c(uint param_1,undefined4 param_2,undefined4 param_3,int param_4)
{
  undefined4 *puVar1;
  int iVar2;
  __int64 _Var3;
  if (param_1 == 0xfffffffe) {
    puVar1 = (undefined4 *)FUN_00407f2d();
    *puVar1 = 0;
    puVar1 = (undefined4 *)FUN_00407f40();
    *puVar1 = 9;
  }
  else {
    if ((-1 > 6] + 0x28 + iVar2) & 1) != 0) {
        ___acrt_lowio_lock_fh(param_1);
        _Var3 = -1;
        if ((*(byte *)((&DAT_0041f080)[(int)param_1 >> 6] + 0x28 + iVar2) & 1) == 0) {
          puVar1 = (undefined4 *)FUN_00407f40();
          *puVar1 = 9;
          puVar1 = (undefined4 *)FUN_00407f2d();
          *puVar1 = 0;
        }
        else {
          _Var3 = common_lseek_nolock___int64_(param_1,CONCAT44(param_3,param_2),param_4);
        }
        FUN_00413c01();
        return _Var3;
      }
    }
    puVar1 = (undefined4 *)FUN_00407f2d();
    *puVar1 = 0;
    puVar1 = (undefined4 *)FUN_00407f40();
    *puVar1 = 9;
    FUN_00407e83();
  }
  return -1;
}
void FUN_00413c01(void)
{
  uint unaff_EDI;
  ___acrt_lowio_unlock_fh(unaff_EDI);
  return;
}
// Library Function - Single Match
// Name: ??$common_lseek_nolock@_J@@YA_JH_JH@Z
// Library: Visual Studio 2015 Release
// __int64 __cdecl common_lseek_nolock(int,__int64,int)
__int64 __cdecl common_lseek_nolock___int64_(int param_1,__int64 param_2,int param_3)
{
  byte *pbVar1;
  HANDLE hFile;
  undefined4 *puVar2;
  BOOL BVar3;
  DWORD DVar4;
  uint local_c;
  uint local_8;
  hFile = (HANDLE)__get_osfhandle(param_1);
  if (hFile == (HANDLE)0xffffffff) {
    puVar2 = (undefined4 *)FUN_00407f40();
    *puVar2 = 9;
  }
  else {
    BVar3 = SetFilePointerEx(hFile,param_2,(PLARGE_INTEGER)&local_c,param_3);
    if (BVar3 == 0) {
      DVar4 = GetLastError();
      ___acrt_errno_map_os_error(DVar4);
    }
    else {
      if ((local_c & local_8) != 0xffffffff) {
        pbVar1 = (byte *)((&DAT_0041f080)[param_1 >> 6] + 0x28 + (param_1 & 0x3fU) * 0x38);
        *pbVar1 = *pbVar1 & 0xfd;
        goto LAB_00413ca6;
      }
    }
  }
  local_c = 0xffffffff;
  local_8 = 0xffffffff;
LAB_00413ca6:
  return CONCAT44(local_8,local_c);
}
__int64 __cdecl FUN_00413cac(uint param_1,undefined4 param_2,undefined4 param_3,int param_4)
{
  __int64 _Var1;
  _Var1 = FUN_00413b2c(param_1,param_2,param_3,param_4);
  return _Var1;
}
// Library Function - Single Match
// Name: __lseeki64_nolock
// Library: Visual Studio 2015 Release
longlong __cdecl __lseeki64_nolock(int _FileHandle,longlong _Offset,int _Origin)
{
  __int64 _Var1;
  _Var1 = common_lseek_nolock___int64_(_FileHandle,_Offset,_Origin);
  return (longlong)_Var1;
}
uint __cdecl FUN_00413ce2(ushort param_1)
{
  uint uVar1;
  DWORD local_8;
  uVar1 = FUN_004142e8();
  if ((uVar1 != 0) && (uVar1 = FUN_0041431e(&param_1,1,&local_8), uVar1 != 0)) {
    return uVar1 & 0xffff0000 | (uint)param_1;
  }
  return 0xffff;
}
// Library Function - Single Match
// Name: ___strncnt
// Library: Visual Studio 2015 Release
void __cdecl ___strncnt(char *param_1,int param_2)
{
  char cVar1;
  int iVar2;
  iVar2 = 0;
  cVar1 = *param_1;
  while ((cVar1 != 0 && (iVar2 != param_2))) {
    iVar2 = iVar2 + 1;
    cVar1 = param_1[iVar2];
  }
  return;
}
// WARNING: Could not reconcile some variable overlaps
void __cdecl FUN_00413d32(uint param_1,byte *param_2,byte *param_3,byte **param_4)
{
  byte bVar1;
  ushort uVar2;
  byte bVar3;
  byte *pbVar4;
  byte *pbVar5;
  byte *pbVar6;
  byte **ppbVar7;
  byte local_28;
  byte *local_20;
  byte *local_1c;
  byte local_16;
  byte local_15;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  uint local_8;
  local_8 = DAT_0041e004 ^ (uint)&stack0xfffffffc;
  if (param_4 == (byte **)0x0) {
    param_4 = (byte **)&DAT_0041f430;
  }
  pbVar6 = param_2;
  if (param_2 == (byte *)0x0) {
    param_3 = (byte *)0x1;
    pbVar6 = &DAT_0041b288;
  }
  ppbVar7 = (byte **)(-(uint)(param_2 != (byte *)0x0) & param_1);
  if (param_3 == (byte *)0x0) goto LAB_00413ed5;
  local_28 = (byte)*(short *)((int)param_4 + 6);
  if (*(short *)((int)param_4 + 6) == 0) {
    local_16 = *pbVar6;
    pbVar6 = pbVar6 + 1;
    if (-1 < (char)local_16) {
      if (ppbVar7 != (byte **)0x0) {
        *ppbVar7 = (byte *)(uint)local_16;
      }
      goto LAB_00413ed5;
    }
    if ((local_16 & 0xe0) == 0xc0) {
      bVar3 = 2;
    }
    else {
      if ((local_16 & 0xf0) == 0xe0) {
        bVar3 = 3;
      }
      else {
        if ((local_16 & 0xf8) != 0xf0) goto LAB_00413ece;
        bVar3 = 4;
      }
    }
    uVar2 = (ushort)bVar3;
    pbVar5 = (byte *)((1 << (7 - bVar3 & 0x1f)) - 1U & (uint)local_16);
    local_15 = bVar3;
    local_28 = bVar3;
LAB_00413e1b:
    pbVar4 = (byte *)((uint)uVar2 & 0xff);
    local_20 = param_3;
    if (pbVar4 < param_3) {
      local_20 = pbVar4;
    }
    local_1c = pbVar6 + -(int)param_2;
    while (local_1c < local_20) {
      bVar1 = *pbVar6;
      pbVar6 = pbVar6 + 1;
      local_1c = local_1c + 1;
      if ((bVar1 & 0xc0) != 0x80) goto LAB_00413ece;
      pbVar5 = (byte *)((int)pbVar5 << 6 | (uint)bVar1 & 0x3f);
    }
    if (local_20 < pbVar4) {
      *(ushort *)(param_4 + 1) = (ushort)bVar3;
      *param_4 = pbVar5;
      *(ushort *)((int)param_4 + 6) = (ushort)(byte)(local_28 - (char)local_20);
      goto LAB_00413ed5;
    }
    if (((pbVar5 < (byte *)0xd800) || ((byte *)0xdfff < pbVar5)) && (pbVar5 < (byte *)0x110000)) {
      local_14 = 0x80;
      local_10 = 0x800;
      local_c = 0x10000;
      if ((&local_1c)[(uint)bVar3] <= pbVar5) {
        if (ppbVar7 != (byte **)0x0) {
          *ppbVar7 = pbVar5;
        }
        *param_4 = (byte *)0x0;
        param_4[1] = (byte *)0x0;
        goto LAB_00413ed5;
      }
    }
  }
  else {
    bVar3 = *(byte *)(param_4 + 1);
    pbVar5 = *param_4;
    if ((byte)(bVar3 - 2) < 3) {
      uVar2 = *(ushort *)((int)param_4 + 6);
      if (((byte)uVar2 != 0) && ((byte)uVar2 < bVar3)) goto LAB_00413e1b;
    }
  }
LAB_00413ece:
  FUN_00410bfe(param_4);
LAB_00413ed5:
  FUN_00401f78();
  return;
}
undefined4 __cdecl FUN_00413ee6(undefined4 *param_1)
{
  undefined4 uVar1;
  uVar1 = FUN_00414684();
  *param_1 = uVar1;
  uVar1 = FUN_00414706();
  param_1[1] = uVar1;
  return 0;
}
undefined4 __cdecl FUN_00413f03(int *param_1)
{
  int iVar1;
  undefined4 uVar2;
  int local_c;
  int local_8;
  FUN_004147c0(*param_1);
  FUN_0041482a(param_1[1]);
  local_c = 0;
  local_8 = 0;
  iVar1 = FUN_00413ee6(&local_c);
  if (((iVar1 == 0) && (*param_1 == local_c)) && (param_1[1] == local_8)) {
    uVar2 = 0;
  }
  else {
    uVar2 = 1;
  }
  return uVar2;
}
undefined4 __cdecl FUN_00413f50(uint *param_1)
{
  int iVar1;
  uint local_c;
  uint local_8;
  local_c = 0;
  local_8 = 0;
  iVar1 = FUN_00413ee6(&local_c);