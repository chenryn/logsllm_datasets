  老雷评点 
2010年年底，英特尔在与台湾某OEM联合开发新款平板电
脑时遇到多个技术难题。老雷临危受命，携带ITP到台北“救
火”。某日正在使用ITP时，一台湾同行看见了这个神秘小盒子后
大为激动：“哇，你在用ICE啊！”并唤同伴来看。那位同行对
ICE的敬重，让我对他刮目相看。
7.4.6 直接连接接口
大约从2016年开始，英特尔逐步对外公布了一种名为直接连接接口
（Direct Connect Interface，DCI）的新技术。简单来说，DCI技术可以
复用USB3接口来访问处理器内部的各种调试功能（DFx），包括JTAG
逻辑。DCI技术的最大优点就是使用日益普及的USB3接口，不再像
ITP/XDP那样需要专门的硬件接口（大多数电子产品只有在开发阶段才
有这个接口）。使用USB3接口的另一个好处是不必打开机箱就可以访
问到，因此英特尔公司自己的DCI调试仪就称为Intel® Silicon View
Technology Closed Chassis Adapter（为英特尔硅观察技术设计的不需开
机箱适配器）（见图7-9）。DCI调试仪的价格也比ITP便宜很多（390美
元）。
图7-9 英特尔公司的DCI调试仪
DCI的方便性增加了它可能产生的安全风险——黑客可能通过DCI
协议控制和访问计算机系统，因此DCI功能一般是禁止的，使用时应该
先在BIOS设置中启用。
7.4.7 典型应用
正如本章开头所说的，硬件调试工具通常用来解决软件调试器难以
解决的问题。以下是使用JTAG方式调试的一些典型场景。
（1）调试系统固件代码，包括BIOS代码、EFI代码以及支持AMT
技术的ME（Management Engine）代码。
（2）调试操作系统的启动加载程序（Boot Loader），以及系统临
界状态的问题，比如进入睡眠和从睡眠状态恢复过程中发生的问题。
（3）软件调试器无法调试的其他情况，比如开发软件调试器时调
试实现调试功能的代码（例如Windows的内核调试引擎），以及调试操
作系统内核的中断处理函数、任务调度函数等。
（4）观察CPU的微观状态，比如CPU的ACPI状态（C State）。
7.5 ARM处理器的JTAG支持
于1992年开始发布的ARM6系列处理器是最早实现了JTAG支持的
ARM架构处理器。这一系列处理器中最著名的是苹果公司牛顿
PDA（Newton PDA）产品使用的ARM610芯片。如我们在第2章所述，
ARM6系列处理器属于ARMv3架构。不过，当时的JTAG支持还没有被
纳入ARM架构中，只是一种可选择的实现。后来的ARM7系列和ARM9
系列也是如此。比如，著名的ARM7TDMI中的D便代表实现了JTAG调
试支持，I是ICE的缩写。这种情况持续了几年，直到2002年ARMv6架
构推出时，才把名为ARM调试接口（ADI）的调试支持纳入到架构定义
中，并推荐实现ARMv6的处理器要支持ADIv4。概而言之，ARMv3架
构的某些ARM处理器最早实现了JTAG支持，但不是架构性特征，
ARMv6时把ADI支持定义为架构的一部分。
7.5.1 ARM调试接口
ADI的全称是ARM调试接口架构规约（ARM Debug Interface
Architecture Specification）。ADI的1～3版本实现在某些ARM核心中。
ADI的版本4（简称ADIv4）被纳入ARMv6，正式成为ARM架构的一部
分。目前较新的版本是ADIv6。
简单来说，ADI为使用ARM架构的设备定义了调试子系统，详细规
划了这个子系统的组成和每个部件的角色，确定了它们的职责，定义了
它们之间的连接方式。
当使用硬件调试器调试ARM目标系统时，需要一台主机，典型的
连接方式如图7-10所示。图中左侧是主机，一般是Windows系统或者
Linux系统，中间是硬件调试器，主机和硬件调试器之间的连接方式一
般是USB或者网线，比较旧的连接方式还有串行端口。硬件调试器通过
特殊的电缆连接到目标系统的调试连接插口（Debug Connector）。硬件
调试器和调试连接口都有很多种，我们将在后面介绍。表面上看，使用
一个调试器就把主机和目标系统连接在一起了。接下来的问题是，调试
器是如何访问和控制调试目标的呢？这就涉及SoC芯片的内部设计了，
而这正是ADI要解决的问题。
图7-10 ADI调试系统互联关系示意图
进一步来说，ADI定义了SoC芯片内部应该如何设计，以便可以与
调试器通信，实现各种调试功能。为了实现这个目标，ADI定义了3个
角色：DP、AP和被调试器件。也就是图7-10中代表SoC的方框内所画
的。图中画出了1个DP、3个AP和3个被调试组件。
7.5.2 调试端口
调试端口（Debug Port，DP）的职责是与调试器通信，接受调试器
的命令和参数，把命令结果提供给调试器。ADI定义了以下3种DP。
（1）JTAG-DP：是与本章前面介绍过的IEEE 1149.1标准兼容的通
信方式，通过扫描链来读写寄存器信息和传递数据。
（2）SW-DP：是ARM公司定义的标准，通过两根线进行串行通
信，ARM将其称为串行线（Serial Wire）技术，简称SW。
（3）SWJ-DP：可以动态选择使用串行线或者JTAG方式通信。
通常，一个支持ADI的SoC芯片至少要实现一个调试端口。这个调
试端口可以选择上面3种实现方式之一。
7.5.3 访问端口
访问端口（Access Port，AP）的职责是访问被调试的目标器件，从
那里读取信息，或者把数据写给目标器件。ADI定义了以下两种AP。
（1）MEM-AP：全称为内存访问端口（Memory Access Port），是
通过内存映射的方式访问目标器件和它的资源。
（2）JTAG-AP：使用JTAG方式访问被调试的目标器件。
一个支持ADI的SoC中至少有一个AP。考虑到SoC系统中包含很多
个需要调试的组件，所以通常要实现多个AP。AP的类型应该根据被调
试目标的特征来选择。
7.5.4 被调试器件
在ADI中，支持两种调试器件，一种是CoreSight器件，另一种是
JTAG器件。CoreSight是ARM公司设计的一套调试技术，我们在第5章
曾经介绍过（见5.7.4节）。
当一个SoC内部有多个AP和被调试组件时，每个被调试组件应该配
有一块只读内存（ROM），里面以表格形式记录器件的ID信息，以便
调试器可以通过这些信息区分不同的器件。
在ADIv6的规约文档中，分A、B、C、D四个部分详细介绍了ADI
总体结构、DP、AP和器件识别机制[9]，希望了解更多详细信息的读者
可以查阅。
7.5.5 调试接插口
ADI定义的是SoC芯片内部的规范。实际调试时，必须落实的一个
问题是如何把硬件调试器与目标系统连接起来。通常，在设计设备的主
板时会考虑提供何种接插口（connector）供调试器连接。
说明一下，我们现在谈论的调试接插口与上面谈的调试端口虽有联
系，但并不相同。上面的调试端口定义的是内部设计，这里的调试接插
口涉及物理连接。换句话来说，本书把英文中的interface、port、
connector这3个单词分别翻译为接口、端口、接插口，以便区分。
因为使用ARM芯片的系统一般都是小型设备，主板较小，“寸土寸
金”，所以必须根据实际情况来决定提供何种接插口。好在有多种不同
尺寸的调试接插口可供选择。
我们首先来介绍ARM-20接口，它的形状和针脚编号如图7-11所
示。
图7-11 ARM JTAG 20（ARM-20）接口
ARM-20接口是ARM公司定义的，共有20个针脚，其中既有标准的
JTAG信号（TDI、TDO、TMS、TCK等），也有前面介绍过的串行通
信标准信号（SWDIO、SWCLK），所以，ARM-20支持我们上面介绍
的3种DP。表7-5描述了ARM-20接口的各个针脚信号名称和功能。
表7-5 ARM-20接口信号定义
针
脚
信号名称
I/O
描  述
1
VTREF
输入
目标电压参考(Voltage Target Reference)
2
NC
—
不连接或者用作电源
3
nTRST
输出
对目标系统发起复位请求(Test Reset)
4
GND
—
地
5
TDI
输出
JTAG的测试数据输入（Test Data In）信号
6
GND
—
地
7
TMS
输出
测试模式选择（Test Mode Select）
8
SWDIO
输入/输
出
在SWD模式时用作接收和发送串行数据
9
GND
—
地
10
TCK
输出
测试时钟
11
SWCLK
输出
在SWD模式时用作时钟信号
12
GND
—
地
13
RTCK
输入
测试时钟信号回显（echo back）（Return Test Clock）
14
GND
—
地
15
TDO
输入
测试数据输出
16
SWO
输入
在SWD模式时供调试器接收数据
17
GND
—
地
18
nSRST
输入/输
出
系统复位，彻底重启目标系统
19
GND
—
地
20
DBGRQ