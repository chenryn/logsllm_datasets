α
1
β
1
α
2
TCP Windows
(17.5 KB)
α
1
 0
 60
 180
 240
 120
Time [s]
(a)
 1
 0.5
 0
 1
 0.5
 0
 1
 0.5
 0
]
]
]
s
s
s
p
p
p
b
b
b
M
M
M
[
[
[
t
t
t
u
u
u
p
p
p
h
h
h
g
g
g
u
u
u
o
o
o
r
r
r
h
h
h
T
T
T
TCP
TCP
TCP
α
α
α
2
2
2
β
β
β
1
1
1
]
]
]
s
s
s
p
p
p
b
b
b
M
M
M
[
[
[
e
e
e
l
l
l
i
i
i
f
f
f
o
o
o
r
r
r
P
P
P
y
y
y
t
t
t
i
i
i
c
c
c
a
a
a
p
p
p
a
a
a
C
C
C
 0
 120  240  360  480  600
Time [s]
Time [s]
Time [s]
(b)
Fig. 2. Throughput for different ﬂavors (a) without and (b) with bottleneck capacity limitations
Among the several experiments conducted, we report the most relevant for our perfor-
mance evaluation. In more detail, we consider (i) bottleneck capacity limitations, (ii)
one-way delay impairment on either the forward or the backward path and (iii) differ-
ent access technologies. We ﬁnally consider a scenario in which (iv) a single TCP ﬂow
interferes with LEDBAT on either the forward or the backward path, and (iv) multiple
ﬂows share the same bottleneck link, varying the ratio of LEDBAT and TCP ﬂows so
to better assess the protocols mutual inﬂuence.
3.1 Single Flow: Bottleneck Capacity, Delay and Access Impact
Let us start by testing how BitTorrent copes with changing bottleneck capacity. We
use a setup similar to the former experiment, but in this case the capacity of the link
between the middlebox and the leecher is limited by means of the Hierarchical Token
Bucket (HTB), available in netem. In more detail, we start at t=60 s to let LEDBAT
throughput settle to a steady state, and then we turn on the HTB shaper. We initially
tune it to 250 Kbps, increasing then the available capacity in steps of 250 Kbps every 2
minutes, as shown by the solid line capacity proﬁle in Fig. 2-(b). A decreasing capacity
proﬁle yields to similar results and is thus not shown in the ﬁgure.
Time evolution of the throughput is reported for the new α2, β1 ﬂavors as well as
for the old TCP client. Flavor α2 proves to be unable to quickly adapt to the chang-
ing link rate: it periodically enters a probing (or slow-start) phase, where it likely tries
to infer network conditions by varying the segment size and sending rate. However,
this phase is apparently unsuccessful and α2 throughput starves (we did not observe
such a starvation phenomenon for bottleneck larger than 1000 Kbps). This bug has been
ﬁxed by later releases: β1 matches the available bandwidth, and moreover LEDBAT
shows a much smoother curve than TCP. In this case, we may say that one of the LED-
BAT design goals, namely, to efﬁciently exploit the available capacity, seems to be
perfectly achieved.
Then, consider that the LEDBAT congestion control is based on a linear adaptation
(i.e., growth/shrink) of the sender window to variations in the queuing delay on the for-
ward data path (i.e., as inferred by the decrease/increase of the one-way delay, with re-
spect to the minimum measured one as reference): it is thus critical to assess its reaction
36
D. Rossi, C. Testa, and S. Valenti
 10
 5
]
s
p
b
M
α
2
α
2
β
1
β
1
 0
 10
[
t
u
p
h
g
u
o
r
h
T
 5
 0
 0
 120
 240
 360
 480
 600
Time [s]
(a)
 120
 80
 40
 0
 120
 80
 40
 0
]
s
m
[
y
a
l
e
D
 10
]
s
p
b
M
[
t
u
p
h
g
u
o
r
h
T
 9
 8
 7
 6
 10
 9
 8
 7
 6
β
1
α
2
α
2
β
1
 0
 120
 240
 360
Time [s]
(b)
 120
 80
 40
 0
 120
 80
 40
 0
]
s
m
[
y
a
l
e
D
Fig. 3. Throughput evolution for different delay settings on the forward (top) and backward (bot-
tom) path: (a) average delay increases over time, delay is equal for all packets (b) average delay
is constant over time, delay variance increases over time
to the measured one-way (OWD) delay. However, the sender response to queuing delay
variations is nevertheless based on a closed-loop reaction with the receiver: therefore,
we argue that the time instants at which the sender window growth/shrink decisions will
be taken are also affected by the two-way delay, or Round Trip Time (RTT).
Thus, we setup and experiment in which we add an incremental OWD on either the
forward (data) or backward (acknowledgement) paths. As before, after LEDBAT settles
we increase the additional delay in steps of 20 ms every 2 minutes, for an RTT spanning
on the 20–100 ms range as shown by the stepwise proﬁle in Fig. 3-(a). The amount of