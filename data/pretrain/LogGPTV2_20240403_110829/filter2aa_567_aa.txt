### Owning the LAN in 2018: Defeating MACsec and 802.1x-2010
**Presentation at DEF CON 26**
**Speaker: Gabriel “solstice” Ryan**

---

### Disclaimers & Updates
- These slides are an early version designed for pre-release prior to DEF CON 26.
- All content will be updated by the time of the presentation in August.
- Final versions of all content will be available at: [https://www.digitalsilence.com/blog/](https://www.digitalsilence.com/blog/)

---

### About: Digital Silence
- **Location:** Denver, Colorado
- **Services:**
  - Penetration Testing
  - Red Teaming
  - Reverse-Engineering
  - Advanced Application Security
  - Research
- **Social Media:**
  - Twitter: [@digitalsilence_](https://twitter.com/digitalsilence_)

---

### About: Gabriel Ryan (a.k.a. solstice)
- **Position:** Co-Founder / Senior Security Assessment Manager @ Digital Silence
- **Background:**
  - Formerly with Gotham Digital Science and OGSystems
  - Specializes in Red Teaming, Research, and is a New Dad
- **Contact:**
  - Twitter: [@s0lst1c3](https://twitter.com/s0lst1c3)
  - LinkedIn: [ms08067](https://www.linkedin.com/in/ms08067)
  - Email: [PI:EMAIL]

---

### Introduction to 802.1x
- **Definition:** 802.1x is an authentication protocol used to protect local area networks (LANs) and wireless local area networks (WLANs) with basic authentication.

#### What is 802.1x?
- **Authentication Protocol:** Used to secure network access.
- **Components:**
  - **Supplicant:** The client device that wants to connect to the LAN.
  - **Authenticator:** A network device (e.g., switch) that provides access to the LAN.
  - **Authentication Server:** A host running software like RADIUS, which implements Authorization, Authentication, and Accounting (AAA) protocols.

#### 802.1x Process
- **Initialization:**
  1. Supplicant connects to a disabled switch port.
  2. Authenticator detects the connection and enables the port in an unauthorized state.
- **Initiation:**
  1. (Optional) Supplicant sends an EAPOL-Start frame.
  2. Authenticator responds with an EAP-Request-Identity frame.
  3. Supplicant sends an EAP-Response-Identity frame containing an identifier (e.g., username).
  4. Authenticator forwards the EAP-Response-Identity to the Authentication Server via a RADIUS Access-Request frame.
- **EAP Negotiation:**
  - Supplicant and Authentication Server negotiate until they agree on an EAP method.
- **Authentication:**
  - Specific details depend on the chosen EAP method.
  - Results in either an EAP-Success or EAP-Failure message.
  - Port is set to authorized if EAP-Success, otherwise remains unauthorized.

#### Ports States
- **Authorized:** Traffic is unrestricted.
- **Unauthorized:** Traffic is restricted to 802.1x.

---

### Extensible Authentication Protocol (EAP)
- **Framework:** Defines message formats but not the entire protocol.
- **EAP Methods:** Individual implementations of EAP.
- **Notable EAP Methods:**
  - **EAP-MD5:** Insecure due to plaintext transmission.
    - **Security Issues:**
      - Vulnerable to passive sniffing and dictionary attacks.
      - Length-recovery attack can efficiently recover credentials.
  - **EAP-PEAP:** 
    - **Security Issues:**
      - Susceptible to rogue access point attacks.
      - MS-CHAPv2, the strongest inner authentication, is vulnerable to cryptographic weaknesses.
  - **EAP-TLS:**
    - **Strengths:**
      - Uses mutual certificate-based authentication.
      - Prevents MITM attacks.
    - **Adoption:**
      - Low adoption rate despite its security benefits.

---

### Brief History of Wired Port Security
- **2001:** 802.1x-2001 standard introduced for rudimentary LAN authentication.
- **2004:** 802.1x-2004 extended for WLANs.
- **2005:** Steve Riley demonstrates bypass using a hub between supplicant and authenticator.
- **2011:**
  - **Marvin (Gremwell Security):** Bypasses 802.1x with a rogue device as a bridge.
  - **Alva Duckwall’s Tool:** Uses a transparent bridge and source NAT (SNAT) for network interaction.
- **2017:** Valérian Legrand creates Fenrir, a modular tool implementing NAT in Python.

---

### MAC Filtering and MAC Authentication Bypass (MAB)
- **Challenge:** Not all devices support 802.1x.
- **Solution:** Disable 802.1x on specific ports (port security exceptions) and use MAC filtering.
- **Vulnerability:** Port security exceptions are low-hanging fruit for attackers.

---

### Current State of Wired Port Security
- **802.1x-2010:**
  - **Features:**
    - Hop-by-hop Layer 2 encryption.
    - Packet-by-packet integrity checks.
  - **Mitigations:**
    - Protects against bridge-based attacks.
  - **Vendor Support:**
    - Major manufacturers now support 802.1x-2010 and MACsec, though limited to high-end equipment.
  - **Adoption:**
    - Adoption rates are increasing, but still low overall.

---

### Improvements in Peripheral Device Security
- **Trend:** More peripheral devices (e.g., printers) now support 802.1x.
- **Impact:** Reduced prevalence of port security exceptions.

---

### Goal of This Project
- **Objective:** Explore ways to bypass 802.1x-2010 and MACsec.
- **Focus:**
  - Identify alternative methods for attacking peripheral devices.
  - Address the reduced prevalence of port security exceptions.

---

### Improvements to Bridge-Based Bypass Techniques
- **Classical Bypass (Alva Duckwall, 2014):**
  - Uses a transparent bridge and source NAT (SNAT) for network interaction.
- **Leveraging Native EAPOL Forwarding:**
  - Modern Linux kernels (since 2012) support EAPOL bridging without kernel patches.
  - Benefits: No need for high-level libraries like Scapy, which can slow down the bridge under heavy loads.

---

### Bypassing Sticky MAC
- **Sticky MAC:**
  - Associates the MAC address of the supplicant to the switch port after successful authentication.
  - Blocks the port if another MAC address is detected.
- **Updated Implementation:**
  - Sets the bridge and PHY to bypass Sticky MAC.

---

This optimized version aims to provide a clear, professional, and coherent presentation of the topic, making it easier for the audience to follow and understand.