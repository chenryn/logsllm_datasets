# Automatic Security Assessment of Critical Cyber-Infrastructures

**Authors:**
Zahid Anwar, Ravinder Shankesi, Roy H. Campbell  
University of Illinois at Urbana-Champaign  
{anwar, rshanke2, rhc}@uiuc.edu

## Abstract
This research investigates the automation of security assessments for both static and dynamic properties of cyberinfrastructures, with a focus on the electrical power grid. We present a network model that represents the static elements of a cyberinfrastructure, including devices, services, network connectivity, vulnerabilities, and access controls. The dynamic elements include workflow models of operating procedures, processes, and the state of a working power grid. We introduce a toolkit that, with minimal manual assistance, can automatically generate these models from specifications, continuously update attributes from online event aggregators, and perform security assessments. These assessments reveal whether observed anomalies could indicate potential security issues and enable the dynamic ranking of alternative recovery procedures to minimize total risk. We demonstrate the utility of the toolchain through an example scenario where the recommended recovery procedure depends on the current system state and network topology.

## 1. Introduction
Supervisory Control and Data Acquisition (SCADA) systems are essential in modern infrastructure, controlling water supply, telecommunications, and electricity generation and distribution. This paper focuses on SCADA systems for the electrical power grid. These systems often use off-the-shelf computing and networking components, making them vulnerable to well-known cyber attacks. Knowledgeable attackers can exploit the properties of the power grid and its operating procedures to cause cascading failures, power blackouts, or damage to critical resources such as high-power transformers.

A recent incident highlighted the vulnerability of SCADA systems when researchers at the Department of Energyâ€™s Idaho lab launched a cyber attack on an electrical power plant, causing a generator to self-destruct. The Industrial Security Incident Database (ISID) reports a significant increase in security attacks on cyber infrastructures, with externally generated incidents accounting for 70% of all events between 2001 and 2003. Notable examples include the Slammer Worm infiltration of an Ohio nuclear plant and the Australian sewage spill incident, where an attacker used a wireless network to control sensors and release raw sewage into parks and lakes.

In this paper, we model SCADA and enterprise networks using predicate logic, which includes devices, services, operating systems, network connections, known vulnerabilities, and their attributes. This network model is used to generate attack graphs to determine the vulnerability of SCADA devices to external attackers. We also compute the security risk for each device based on the severity of vulnerabilities and the network topology. Our second model, the workflow model, describes operating procedures as workflows encoded in rewriting logic. These procedures, typically recovery or maintenance activities, are evaluated for security risks by aggregating the risks of the devices involved. Finally, the security model presents possible recovery procedures and their associated risks to operators.

We have developed a toolchain that semi-automates the generation and updating of these models using online SCADA event aggregators. We demonstrate its feasibility by finding complex attacks on a SCADA testbed that mimics a real substation. Our approach is scalable, and further automation is possible.

The remainder of this paper is organized as follows: Section 2 reviews related work on existing SCADA security models. Section 3 provides background on SCADA for power systems and rewriting logic. Section 4 outlines the design of our security model. Section 5 details our implementation using Prolog, Yet Another Workflow Language (YAWL), and Maude. Section 6 evaluates a realistic workflow advisory scenario. We conclude the paper in Section 7.

## 2. Related Work
Our research builds on existing work on attack trees and the quantification of security for large-scale safety-critical systems. One study [4] applies attack trees to the common MODBUS SCADA protocol to identify inherent security vulnerabilities. Another [22] uses attack trees to evaluate security improvements based on countermeasure types and password policy enforcement. Jajodia and Noel [12] use automated attack graph generation and processing techniques to aid sensor placement for monitoring attack paths to critical cyber assets. Other methodologies, such as compromise graphs [9] and Markov Chains [14], provide quantitative measurements of risk reduction.

The CORAS project [3] supports risk analysis of security-critical systems by modeling threats using UML diagrams and XML schemas. We improve on this by using Common Information Models (CIM) [8] to automate the generation of our security models. CIM, developed by the Electric Power Research Institute (EPRI), is better suited for modeling electrical utility enterprises.

While security assessment of large distributed systems and the use of attack graphs to find network vulnerabilities are well-established, there is limited work on the automated generation of these models, especially for cyberinfrastructures. Additionally, there is little research on using calculated security vulnerabilities to assess risks in operating procedures and provide advisories.

## 3. Background
This section provides an overview of key power terms and the threat model for the power system. It also introduces Horn-clause logic and rewriting logic, assuming the reader has a basic understanding of the former.

### 3.1. A Power System
In a conventional electric power system, energy from fossil fuels or falling water is harnessed to generate steam, which drives turbines to produce electricity. This electricity is then transmitted and distributed to end users. SCADA controls, including those for turbines, burners, and switching, are used throughout the process. Focusing on switching controls, a typical power system has numerous switches that route and distribute power. These switches can be controlled remotely via SCADA or manually. Figure 1 illustrates a power distribution system as a network of electric lines connected via switching devices and circuit-breakers. Circuit-breakers control power supply, while switching devices manage power propagation.

Power lines are susceptible to faults, often due to bad weather or lightning. When a fault occurs, the circuit-breaker feeding the faulty line opens to protect the rest of the feeder. To restore power, SCADA devices (actuators) must locate and isolate the faulty line. Denial of service attacks on actuators or their controlling SCADA devices can prevent timely reporting of faults, requiring manual intervention. More seriously, a buffer overflow in a networked device can allow an attacker to cause a blackout or overload a transformer, which is costly and difficult to replace.

### 3.2. Rewriting Logic
Rewriting logic [10] is used to specify concurrent systems. A rewrite theory \( R = (\Sigma, E, R) \) consists of:
- A signature \(\Sigma\) specifying sorts, sub-sort relations, constants, and function symbols.
- An equational theory \((\Sigma, E)\) defining the states of the system.
- Rewrite rules \(R\) describing concurrent transitions.

Given a rewrite theory, we can define a transition relation over the states and label the transition system using predicates. This allows us to verify if a system satisfies a given LTL property using LTL model checking. In this work, we use Maude [6] to implement our workflow model, which supports on-the-fly LTL model checking.

## 4. Security Model
Our formal model consists of two parts: a network model and a workflow model. The network model captures the static elements of a SCADA system, including the network topology, devices, services, connectivity, and vulnerabilities. The workflow model captures the dynamic elements, such as maintenance and recovery activities, and their ordering and relationships.

### 4.1. Network Model, N
The network model \(N\) represents the SCADA network as two types of graphs: a dependency graph \(G\) and logical attack graphs \(G'\). The dependency graph \(G = (D, E)\) includes all devices \(D\) and edges \(E \subseteq D \times D\) representing physical connections. Functions map devices to their attributes, such as services, privilege levels, and vulnerabilities.

The security risk of a device depends on an attacker's ability to exploit a vulnerability on that device or a reachable device. Attack graphs represent a chain of exploits as a path, where each exploit in the chain lays the groundwork for the next.