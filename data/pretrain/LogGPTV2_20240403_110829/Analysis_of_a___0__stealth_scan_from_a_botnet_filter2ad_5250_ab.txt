accepted by SIP servers. Thus, if the targeted host is a SIP server,
the registration will likely fail but will result in a “404 Not Found”
response code, which is enough to reveal to the bot that the target
is indeed a SIP server. We presume that the goal is to identify SIP
servers for later use, e.g., to perform brute-force attempts to register
user accounts.
The sipscan SIP header is similar to the header built by the SIPVi-
cious security auditing tool suite to generate probe packets [26]. In
November 2010, the author of this tool reported a large distributed
attack against SIP servers with headers similar to those his tool
used; this attack was observed by several parties and was likely
carried out by a botnet [25, 53]. In the case of both the Novem-
ber 2010 scan and the February 2011 scan we observed, the botnet
developers probably used the Python code of SIPVicious as a ref-
erence to write their attack code. The most notable difference be-
tween such attacks and SIPVicious headers is in the “User-Agent”
header, where the attack code replaced the string “friendly-scanner”
with the less suspicious “Asterisk PBX”1.
The observed sipscan header has two distinctive characteristics
compared to the attack of November 2010 (and in general com-
pared to the miscellaneous SIP malware packets observed at the
UCSD telescope): the user name, which is always composed of ten
digits, and the “To:”/“From:” ﬁelds, which contains a SIP URI in-
stead of simply the number [49]. Based on the properties of its SIP
header, we deﬁned a payload signature to identify all the sipscan
packets seen by the UCSD Network Telescope. Each source host
sends the TCP packet together with the UDP packets, allowing us
to easily infer which TCP SYN packets on port 80, among all those
received by the telescope, were associated with the sipscan).
Figure 2 shows the packet rate of the sipscan UDP packets (left
axis) and the number of unique IPs per hour (right axis) sending
1Asterisk is a widely deployed open-source PBX software support-
ing both PSTN and VoIP.
Figure 2: Overview of the scan. The continuous line shows the packets per
second, in 5 minute bins, of UDP probing packets from the sipscan ob-
served by the UCSD Network Telescope. The dashed line represents the
corresponding number of distinct source IP addresses per bin.
such packets to addresses in the UCSD Network Telescope. The
scan goes through different phases over approximately 12 days:
it starts with a packet received on Monday 31 January 2011 at
21:07 UTC, and ends with a sharp drop of packets on Saturday 12
February around 15:00 UTC. Approximately 100 residual packets
were observed in the following two days. During the scan, peaks
of 21,000 hosts with distinct IPs probed the telescope’s /8 address
space in a single 5-minute interval.
# of probes (1 probe = 1 UDP + multiple TCP pkts)
#of source IP addresses
# of destination IP addresses
% of telescope IP space covered
# of unique couples (source IP - destination IP)
max probes per second
max # of distinct source IPs in 1 hour
max # of distinct source IPs in 5 minutes
average # of probes received by a /24
max # of probes received by a /24
average # of sources targeting a destination
max # of sources targeting a destination
average # of destinations a source targets
max # of destination a source targets
20,255,721
2,954,108
14,534,793
86,6%
20,241,109
78.3
160,264
21,829
309
442
1.39
14
6.85
17613
Table 1: Summary of the scanning event characteristics. The scan origi-
nated from almost 3 million distinct IP addresses and hit about 14.5 million
addresses of the address space observed by the UCSD Network Telescope.
Table 1 lists the main characteristics of the scan. The portion
of the scan observed by the UCSD Network Telescope involved
around 3 million distinct source addresses, generating 20 million
probes – we deﬁne a probe as a UDP scanning packet with the pay-
load signature from Figure 1, plus TCP SYN packets to the same
destination. These probes covered more than 14.5 million target IP
addresses, that is, 86.6% of the darknet address space.
3.2 Veriﬁcation of unspoofed source addresses
Because darknet addresses do not respond to received packets,
we cannot generally assume that packets are not using spoofed
(fake) source IP addresses. Effective scanning requires the use of
real source addresses to receive responses, so there is reason to as-
sume that these IP addresses are not spoofed. Conversely, evidence
that the addresses are not spoofed would increase our conﬁdence
in the hypothesis that this behavior is in fact a large-scale scan. We
found the following evidence that the observed packets were not
actually spoofed.
 0 10 20 30 40 50 60 70 8001/3102/0202/0402/0602/0802/1002/1202/1402/16 0 5000 10000 15000 20000 25000Packets Per SecondUnique Source IPs (5 min bins)Date (UTC)Sipscan Probing RateSipscan Source IPs31 2011−02−02 1 2 : 1 5 : 1 8 . 9 1 3 1 8 4 IP ( t o s 0x0 ,
t t l 36 ,
412) XX. 1 0 . 1 0 0 . 9 0 . 1 8 7 8 > XX. 1 6 4 . 3 0 . 5 6 . 5 0 6 0 :
i d 20335 , o f f s e t 0 ,
[ udp sum ok ] SIP ,
f l a g s
l e n g t h : 384
[ none ] , p r o t o UDP ( 1 7 ) ,
l e n g t h
2
3
4
5
6
7
8
9
10
11
12
REGISTER s i p :3982516068@XX. 1 6 4 . 3 0 . 5 6 SIP / 2 . 0
Via : SIP / 2 . 0 / UDP XX. 1 6 4 . 3 0 . 5 6 : 5 0 6 0 ; b r a n c h =1F8b5C6T44G2CJt ; r p o r t
Content−Length : 0
From :  ;
Accept :
a p p l i c a t i o n / sdp
User−Agent : A s t e r i s k PBX
To : 
C o n t a c t :
CSeq : 1 REGISTER
C a l l−ID : 4731021211
Max−Forwards : 70
s i p :3982516068@XX. 1 6 4 . 3 0 . 5 6
t a g =1471813818402863423218342668
Figure 1: Example of the payload of a UDP packet generated by the sipscan (line 1 is tcpdump output [5] with timestamp and information from IP and UDP
headers). The payload contains a SIP request to register a user on the contacted host. A variant of the signature (which we also matched) has the string ":5060"
appended to the "Contact: " header ﬁeld (line 9). In the ﬁgure we replaced the value of the most signiﬁcant byte of the destination address with "XX".
• In [19] we studied the country-wide outage that occurred in
Egypt between the 27th of January and the 2nd of February
2011. During the last two days of the outage - which overlap
with the period of activity of the sipscan - most of the coun-
try was completely isolated from the rest of the Internet. We
veriﬁed that no sipscan packets with source IP addresses that
geolocated to Egypt were observed by the telescope during
the outage. Figure 3 shows the re-announcement of all the
BGP preﬁxes geolocated to Egypt that were withdrawn dur-
ing the outage (continuous line, left y axis), and the packet
rate of UDP packets from the sipscan geolocated to the same
country (dashed line, second y axis). The graph shows Egyp-
tian hosts contributing to the scanning activity only after the
country is reconnected to the Internet. We used the same
methodology described in [19] to analyze BGP data from the
RIPE RIS [3] and Routeviews [60] repositories, and geolo-
cation data from MaxMind [41] and Afrinic [1].
• Random IP spooﬁng would use also source IPs from our /8
darknet set of addresses, which we never see in this set of
packets. We also mapped the source addresses of the scan to
originating ASes (autonomous systems, or independent net-
works in the global routing system) using BGP data, and ver-
iﬁed that they matched only assigned ranges of IP addresses.
• In Section 3.4 we analyze source port numbers in transport-
layer headers from selected scanning bots. The consistency
of these parameters over time suggests that the source ad-
dresses are not spoofed: IP spooﬁng requires the use of raw
sockets and usually involves random selection of spoofed ad-
dresses, whereas the progression of source ports followed by
these bots is typical of packets sent through standard sockets
that use ephemeral ports assigned by the operating system
based on a single, global counter.
3.3 Botnet activity
This convincing evidence that the source IP addresses are au-
thentic supports our hypothesis that a botnet is generating the pack-
ets, rather than one or a few hosts, or a worm spreading. Over
the course of twelve days, we observed about 3 million source ad-
dresses, which mapped to countries and networks all over the world
(Section 4.4). Figure 2 displays a clearly delimited beginning and
end of the behavior, with strong diurnal periodicity and variations
of intensity. Spreading worms tend to exhibit closer to exponential
growth in IP addresses infected and trying to spread further [65].
Figure 3: The case of the Internet black-out in Egypt helps to verify that
source addresses from the sipscan are not spoofed. The continuous line
shows the reannouncement of routes to Egyptian IPv4 preﬁxes when the
country reappears on the Internet on 2 February 2011. The sipscan starts
approximately on the 1 February, but we start seeing probes from source
IPs geolocated to Egypt only when the Egyptian networks get reannounced
through BGP updates.
We discovered an even more compelling piece of evidence that
this trafﬁc was generated by a botnet when we examined trafﬁc
data during last year’s nation-wide censorship episode in Egypt. In
[19] we showed that, during the Egyptian outage, some Conﬁcker-
infected hosts were still able to randomly send infecting packets
to the Internet, even if they were in networks not visible via BGP.
Outbound connectivity (from Egyptian hosts “upstream” to the rest
of the Internet) was still possible from some networks in Egypt
through the use of default routes. But while we saw Conﬁcker traf-
ﬁc originating from IPs geolocated in Egypt, we saw no sipscan
trafﬁc from Egypt, consistent with the sipscan hosts not acting in-
dependently, but rather receiving instructions from a command &
control ‘botmaster’ host (i.e., requiring bidirectional connectivity)
outside of Egypt.
To simultaneously represent both the temporal and spatial dy-
namics of the event, we created a “World Map” animation avail-
able at [13]. Figure 4 is a single frame of the animation (capturing a
window of 5 minutes and 20 seconds of data) from Wed 2 Feburary
09:34:00 2011. The circles are centered at the geographical coordi-
nates of source IP addresses. For each time bin, the size of the circle
is proportional to the number of hosts geolocated to those coordi-
 0 500 1000 1500 2000 2500 300002/02 08:0002/02 09:0002/02 10:0002/02 11:0002/02 12:0002/02 13:00 0 100 200 300 400 500 600Re-announced Egyptian IPv4 PrefixesSipscan Probing Rate from Egyptian BotsDate (UTC)IPv4 BGP PrefixesSipscan Probing Rate4Figure 4: Snapshot of our “World Map” animation of the sipscan available
at [13] (Wed Feb 2 09:34:00 2011). The animation shows, in 5:20-minutes
of data represented per frame, circles at the geographical coordinates of
source hosts (bots) with size proportional to the number of hosts geolocated
to those coordinates, and color to the number of packets sent. The animation
depicts the spatial and temporal dynamics of the scan.
nates, whereas the color reﬂects the number of packets sent (these
two values are not proportional because, as we show in Section 4,
there are both hosts sending a single probe and hosts sending mul-
tiple probes at different rates). The animation illustrates the trafﬁc
volume and geographic scope of the scan over time. Geolocation
of IP addresses was done using the MaxMind GeoLite database re-
leased on March 1st, 2011, temporally proximate to the event [41].
The software used to create the animation is an improved version
of the code originally developed at CAIDA by Huffaker et al. and
available at [2]. The animation visually represents, for the ﬁrst time,
an Internet-wide scan conducted by a large botnet.
3.4 A “/0” scan
Observation from the UCSD Network Telescope is limited to
packets destined to the corresponding /8 network. However, we also
discovered evidence that the scan targeted the entire IPv4 address
space (a /0 scan): similar trafﬁc patterns observable on other net-
work segments, and a continuity in source port usage in the packets
we observed.
3.4.1 Targeting the UCSD Network Telescope
Even if approximately 15% of addresses of our darknet were not
hit by the scan, the sipscan uniformly targeted the entire address
range of the /8 network. In Section 4.3 we show that the missing
(15%) targets may be due to a speciﬁc conﬁguration parameter that
would trade completeness of IPv4 address space coverage for re-
dundancy in the utilization of the bots.
3.4.2 DShield repository
We have found circumstantial evidence of sipscan trafﬁc in the
DShield repository [34]. DShield is a constantly updated reposi-
tory of scanning and attack reports. In particular it reports aggre-
gated data of trafﬁc observed on several “sensors” (i.e., small hon-
eynets and darknets) operated by different participating organiza-
tions. Figure 5 shows the number of distinct source IP addresses
per day observed by the DShield sensors on port 5060 from the 1
January to 28 February 2011. The large spikes in the trafﬁc proﬁle
of the source IP addresses match the sipscan proﬁle shown in Fig-
ure 2, indicating that the same phenomenon was probably targeting
other networks besides the /8 monitored by the UCSD Network
Telescope.
3.4.3 MAWI WIDE Samplepoint-F
We also examined trafﬁc traces from a 150Mbps link on a trans-
Figure 5: Daily count of unique source IP addresses in packets to port 5060
extracted from DShield sensor data [34]. The unique source IP count, for
the months of January and February 2011, shows an increase of almost
one order of magnitude between the 1st and the 12th of February. Its pro-
ﬁle matches the sipscan shown in Figure 2, suggesting that sensors (dark-
nets and honeynets) in other /8 networks received the same kind of trafﬁc.
The start and end times of the sipscan are denoted in this graph by the two
dashed vertical lines.
Figure 6: Sipscan UDP packets observed by (i) the UCSD Network Tele-
scope (y axis, packets per second) and (ii) MAWI WIDE Samplepoint-F
(y2 axis, packets per daily sample of xx minutes). The samples found on
the small link monitored by the MAWI working group perfectly follow the