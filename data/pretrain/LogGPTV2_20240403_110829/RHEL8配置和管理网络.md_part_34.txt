::: section
::: titlepage
# []{#getting-started-with-ipvlan_configuring-and-managing-networking.html#ipvlan-modes_getting-started-with-ipvlan}IPVLAN 模式 {.title}
:::
IPVLAN 有以下模式可用：
::: itemizedlist
-   [**L2 模式**]{.strong}
    在 IPVLAN [**L2
    模式中**]{.strong}，虚拟设备接收并响应地址解析协议(ARP)请求。`netfilter`{.literal}
    框架仅在拥有虚拟设备的容器中运行。容器化流量的默认命名空间中没有执行
    `netfilter`{.literal} 链。使用[**L2
    模式**]{.strong}会提供良好的性能，但对网络流量的控制要小。
-   [**L3 模式**]{.strong}
    在 [**L3 模式**]{.strong} 中，虚拟设备只处理 [**L3**]{.strong}
    以上的流量。虚拟设备不响应 ARP 请求，用户必须手动为相关点上的 IPVLAN
    IP 地址配置邻居条目。相关容器的出口流量会位于 default 命名空间中的
    `netfilter`{.literal} POSTROUTING 和 OUTPUT
    链上，而入口流量的线程方式与 [**L2 模式相同**]{.strong}。使用[**L3
    模式**]{.strong}会提供很好的控制，但可能会降低网络流量性能。
-   [**L3S 模式**]{.strong}
    在 [**L3S 模式中**]{.strong}，虚拟设备处理方式与 [**L3
    模式中相同**]{.strong}，不同之处在于相关容器的出口和入口流量都位于默认命名空间中
    `netfilter`{.literal} 链上。[**L3S 模式**]{.strong} 的行为方式和
    [**L3 模式**]{.strong} 相似，但提供了对网络的更大控制。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
对于 [**L3**]{.strong} 和 [**L3S**]{.strong} 模式，IPVLAN
虚拟设备不接收广播和多播流量。
:::
:::
::: section
::: titlepage
# []{#getting-started-with-ipvlan_configuring-and-managing-networking.html#overview-of-macvlan_getting-started-with-ipvlan}MACVLAN 概述 {.title}
:::
MACVLAN 驱动程序允许在一个 NIC
上创建多个虚拟网络设备，每个网卡都由其自身唯一的 MAC 地址标识。物理 NIC
上的数据包通过目的地的 MAC 地址与相关的 MACVLAN
设备进行多路复用。MACVLAN 设备不添加任何级别的封装。
:::
::: section
::: titlepage
# []{#getting-started-with-ipvlan_configuring-and-managing-networking.html#ipvlan-and-macvlan_getting-started-with-ipvlan}IPVLAN 和 MACVLAN 的比较 {.title}
:::
下表显示了 MACVLAN 和 IPVLAN 的主要区别。
::: informaltable
  MACVLAN                                                                              IPVLAN
  ------------------------------------------------------------------------------------ ---------------------------------------------------------------------------------------------------------------
  为每个 MACVLAN 设备使用 MAC 地址。交换中 MAC 表的 MAC 地址限制可能会导致连接丢失。   使用不限制 IPVLAN 设备数的单个 MAC 地址。
  全局命名空间的 netfilter 规则不会影响子命名空间中到达或从 MACVLAN 设备的网络流量。   有可能在 [**L3 模式**]{.strong}和 [**L3S 模式**]{.strong}中控制到 IPVLAN 设备或者来自 IPVLAN 设备的网络流量。
:::
请注意，IPVLAN 和 MACVLAN 不需要任何级别的封装。
:::
::: section
::: titlepage
# []{#getting-started-with-ipvlan_configuring-and-managing-networking.html#creating-and-configuring-the-ipvlan-device-using-iproute2_getting-started-with-ipvlan}使用 iproute2 创建和配置 IPVLAN 设备 {.title}
:::
这个步骤演示了如何使用 `iproute2`{.literal} 设置 IPVLAN 设备。
::: orderedlist
**流程**
1.  要创建 IPVLAN 设备，请输入以下命令：
    ``` literallayout
    ~]# ip link add link real_NIC_device name IPVLAN_device type ipvlan mode l2
    ```
    请注意：网络接口控制器（NIC）是将计算机连接到网络的一个硬件组件。
    ::: example
    []{#getting-started-with-ipvlan_configuring-and-managing-networking.html#idm140431057738352}
    **例 37.1. 创建 IPVLAN 设备**
    ::: example-contents
    ``` screen
    ~]# ip link add link enp0s31f6 name my_ipvlan type ipvlan mode l2
    ~]# ip link
    47: my_ipvlan@enp0s31f6:  mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/ether e8:6a:6e:8a:a2:44 brd ff:ff:ff:ff:ff:ff
    ```
    :::
    :::
2.  要为接口分配 `IPv4`{.literal} 或 `IPv6`{.literal}
    地址，请输入以下命令：
    ``` literallayout
    ~]# ip addr add dev IPVLAN_device IP_address/subnet_mask_prefix
    ```
3.  如果在 [**L3 模式**]{.strong}或 [**L3S 模式**]{.strong}中配置 IPVLAN
    设备，请进行以下设置：
    ::: orderedlist
    1.  在远程主机上为远程 peer 配置邻居设置：
        ``` literallayout
        ~]# ip neigh add dev peer_device IPVLAN_device_IP_address lladdr MAC_address
        ```
        其中 [*MAC_address*]{.emphasis} 是 IPVLAN 设备所基于的实际网卡的
        MAC 地址。
    2.  使用以下命令为 [**L3 模式**]{.strong} 配置 IPVLAN 设备：
        ``` literallayout
        ~]# ip neigh add dev real_NIC_device peer_IP_address lladdr peer_MAC_address
        ```
        对于 [**L3S 模式**]{.strong}：
        ``` literallayout
        ~]# ip route dev add real_NIC_device peer_IP_address/32
        ```
        其中 IP-address 代表远程 peer 的地址。
    :::
4.  要设置活跃的 IPVLAN 设备，请输入以下命令：
    ``` literallayout
    ~]# ip link set dev IPVLAN_device up
    ```
5.  要检查 IPVLAN 设备是否活跃，请在远程主机中执行以下命令：
    ``` literallayout
    ~]# ping IP_address
    ```
    其中 [*IP_address*]{.emphasis} 使用 IPVLAN 设备的 IP 地址。
:::
:::
:::
[]{#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking.html#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking}第 38 章 在不同接口上重复使用相同的 IP 地址 {.title}
:::
使用虚拟路由和转发(VRF)时，管理员可以在同一主机上同时使用多个路由表。为此，VRF
将网络在第 3 层进行分区。这可让管理员使用每个 VRF
域的独立路由表隔离流量。这个技术与虚拟 LAN（虚拟
LAN）类似，后者在第二层为网络分区，其中操作系统使用不同的 VLAN
标签来隔离共享相同物理介质的流量。
VRF
优于在第二层上分区的好处是，路由会根据涉及的对等者数量进行更好地考虑。
Red Hat Enterprise Linux 为每个 VRF 域使用虚拟 `vrt`{.literal}
设备，并通过将现有网络设备添加到 VRF 设备来添加到 VRF
域的路由。之前附加到原始设备的地址和路由将在 VRF 域中移动。
请注意，每个 VRF 域间都是相互隔离的。
::: section
::: titlepage
# []{#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking.html#permanently-reusing-the-same-ip-address-on-different-interfaces_reusing-the-same-ip-address-on-different-interfaces}在不同接口上永久重复使用相同的 IP 地址 {.title}
:::
这个步骤描述了如何使用 VRF 功能在同一服务器的不同接口中永久使用相同的 IP
地址。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要在重新使用相同的 IP 地址时让远程对等两个 VRF
接口都联系，网络接口必须属于不同的广播域。网络中的广播域是一组节点，它们接收由其中任何一个发送的广播流量。在大多数配置中，所有连接到同一交换机的节点都属于相同的域。
:::
::: itemizedlist
**先决条件**
-   您以 `root`{.literal} 用户身份登录。
-   没有配置网络接口。
:::
::: orderedlist
**流程**
1.  创建并配置第一个 VRF 设备：
    ::: orderedlist
    1.  为 VRF 设备创建连接并将其分配到路由表中。例如，要创建一个名为
        `vrf0`{.literal} 的 VRF 设备，它将分配给 `1001`{.literal}
        路由表：
        ``` literallayout
        # nmcli connection add type vrf ifname vrf0 con-name vrf0 table 1001 ipv4.method disabled ipv6.method disabled
        ```
    2.  启用 `vrf0`{.literal} 设备：
        ``` literallayout
        # nmcli connection up vrf0
        ```
    3.  为刚刚创建的 VRF 分配网络设备。例如：要将 `enp1s0`{.literal}
        以太网设备添加到 `vrf0`{.literal} VRF 设备，并为
        `enp1s0`{.literal} 分配一个 IP 地址和子网掩码：
        ``` literallayout
        # nmcli connection add type ethernet con-name vrf.enp1s0 ifname enp1s0 master vrf0 ipv4.method manual ipv4.address 192.0.2.1/24
        ```
    4.  激活 `vrf.enp1s0`{.literal} 连接：
        ``` literallayout
        # nmcli connection up vrf.enp1s0
        ```
    :::
2.  创建并配置下一个 VRF 设备：
    ::: orderedlist
    1.  创建 VRF 设备并将其分配到路由表中。例如，要创建一个名为
        `vrf1`{.literal} 的 VRF 设备，它将分配给 `1002`{.literal}
        路由表，输入：
        ``` literallayout
        # nmcli connection add type vrf ifname vrf1 con-name vrf1 table 1002 ipv4.method disabled ipv6.method disabled
        ```
    2.  激活 `vrf1`{.literal} 设备：
        ``` literallayout
        # nmcli connection up vrf1
        ```
    3.  为刚刚创建的 VRF 分配网络设备。例如：要将 `enp7s0`{.literal}
        以太网设备添加到 `vrf1`{.literal} VRF 设备，并为
        `enp7s0`{.literal} 分配一个 IP 地址和子网掩码：
        ``` literallayout
        # nmcli connection add type ethernet con-name vrf.enp7s0 ifname enp7s0 master vrf1 ipv4.method manual ipv4.address 192.0.2.1/24
        ```
    4.  激活 `vrf.enp7s0`{.literal} 设备：
        ``` literallayout
        # nmcli connection up vrf.enp7s0
        ```
    :::
:::
:::
::: section
::: titlepage
# []{#reusing-the-same-ip-address-on-different-interfaces_configuring-and-managing-networking.html#temporarily-reusing-the-same-ip-address-on-different-interfaces_reusing-the-same-ip-address-on-different-interfaces}在不同接口中临时重复使用相同的 IP 地址 {.title}
:::
本节中的步骤论述了如何使用虚拟路由和转发（VRF）功能在某个服务器的不同接口中临时使用相同的
IP 地址。这个过程仅用于测试目的，因为配置是临时的并在重启系统后会丢失。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要在重新使用相同的 IP 地址时让远程对等两个 VRF
接口都联系，网络接口必须属于不同的广播域。广播域是一组节点，它们接收被其中任何一个发送的广播流量。在大多数配置中，所有连接到同一交换机的节点都属于相同的域。
:::
::: itemizedlist
**先决条件**
-   您以 `root`{.literal} 用户身份登录。
-   没有配置网络接口。
:::
::: orderedlist
**流程**
1.  创建并配置第一个 VRF 设备：
    ::: orderedlist
    1.  创建 VRF 设备并将其分配到路由表中。例如，要创建一个名为
        `blue`{.literal} 的 VRF 设备，它将分配给 `1001`{.literal}
        路由表：
        ``` literallayout
        # ip link add dev blue type vrf table 1001
        ```
    2.  启用 `blue`{.literal} 设备：
        ``` literallayout
        # ip link set dev blue up
        ```
    3.  为 VRF 设备分配网络设备。例如：要将 `enp1s0`{.literal}
        以太网设备添加到 `blue`{.literal} VRF 设备中：
        ``` literallayout
        # ip link set dev enp1s0 master blue
        ```
    4.  启用 `enp1s0`{.literal} 设备：
        ``` literallayout
        # ip link set dev enp1s0 up
        ```
    5.  为 `enp1s0`{.literal} 设备分配 IP
        地址和子网掩码。例如，将其设置为 `192.0.2.1/24`{.literal}:
        ``` literallayout
        # ip addr add dev enp1s0 192.0.2.1/24
        ```
    :::
2.  创建并配置下一个 VRF 设备：
    ::: orderedlist
    1.  创建 VRF 设备并将其分配到路由表中。例如，要创建一个名为
        `red`{.literal} 的 VRF 设备，它将分配给 `1002`{.literal}
        路由表：
        ``` literallayout
        # ip link add dev red type vrf table 1002
        ```
    2.  启用 `red`{.literal} 设备：
        ``` literallayout
        # ip link set dev red up
        ```
    3.  为 VRF 设备分配网络设备。例如：要将 `enp7s0`{.literal}