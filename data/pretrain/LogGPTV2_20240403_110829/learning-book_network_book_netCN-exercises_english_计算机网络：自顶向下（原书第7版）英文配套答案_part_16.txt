## Page 132
Problem8
p=5, q = 11
a)n = p*q = 55, z = (p-1)(q-1) = 40
b)e = 3 is less than n and has no common factors with z.
c)d=27
d)m = 8, me = 512, Ciphertext c= me mod n = 17
Problem 9
Alice
Bob
secrect key:
SA
SB
public key:
TA =(g^SA) mod p
T = (g^Ss) mod p
shared key:
S = (Tg^SA) mod p
S' = (T^Ss) mod p
a)S = (TB^SA ) mod p = ((g^SB mod p)^SA ) mod p = (g^(SBSA ) mod p
= ((g^SA mod p)^SB ) mod p = (TA^SB ) mod p = S
(b and c) p = 11, g = 2
Alice
Bob
secrect key:
SA=5
SB = 12
public key:
TA = (g^SA) mod p = 10
TB = (g^Ss) mod p = 4
shared key:
S = (Tg^SA) mod p = 1
S' = (TA^SB ) mod p = 1
d)
Alice
Trudy
Bob
T
Tr
TB
The Diffie-Hellman public key encryption algorithm is possible to be attacked by man-in-
the-middle.
1.In this attack, Trudy receives Alice's public value (TA) and sends her own public
value (Tr) to Bob.
2.
When Bob transmits his public value (Te), Trudy sends her public key to Alice (TT).
3.Trudy and Alice thus agree on one shared key (SAr) and Trudy and Bob agree on
another shared key (SBr).
---
## Page 133
4.After this exchange, Trudy simply decrypts any messages sent out by Alice or Bob by
the public keys SAT and SBr.
Problem 10
KDC
Bob
Alice
KKc{A,B}
KA-KDc {K, KgKIxc(A, K)
Ksxxc(A, K)
Bob and Alice now communicate using the
symmetric session key K
Problem 11
The message
6
0
9
O
B
has the same checksum
Problem 12
H)
(c (mh)
Kc (m,h)
口
(m.h)
encription
Internet
Decription(mh)
Compare
algorithm
algorithm
H(.)
S2
S1
---
## Page 134
Problem 13
The file is broken into blocks of equal size. For each block, calculate the hash (for
example with MD5 or SHA-1). The hashes for all of the blocks are saved in the .torrent
file. Whenever a peer downloads a block, it calculates the hash of this block and
compares it to the hash in the .torrent file. If the two hashes are equal, the block is valid.
Otherwise, the block is bogus, and should be discarded.
Problem14
Digital signatures require an underlying Public Key Infrastructure (PKI) with certification
authorities. For OSPF, all routers are in a same domain, so the administrator can easily
deploy the symmetric key on each router, without the need of a PKI.
Problem15
Bob does not know if he is talking to Trudy or Alice initially. Bob and Alice share a
secret key KA-e that is unknown to Trudy. Trudy wants Bob to authenticate her (Trudy)
as Alice. Trudy is going to have Bob authenticate himself, and waits for Bob to start:
1.Bob-to-Trudy: "I am Bob" Commentary: Bob starts to authenticate himself. Bob's
authentication of himself to the other side then stops for a few steps.
2.
Trudy-to-Bob: "I am Alice” Commentary: Trudy starts to authenticate herself as
Alice
3.1
Bob-to-Trudy: "R" Commentary: Bob responds to step 2 by sending a nonce in
reply. Trudy does not yet know KA-B(R) so she can not yet reply.
4.
authentication, picking as the nonce for Bob to encrypt, the exact same value thar
Bob sent her to encrypt in Step 3.
5.Bob-to-Trudy: “KA-B(R)" Bob completes his own authentication of himself to the
other side by encrypting the nonce he was sent in step 4. Trudy now has KA-B(R).
(Note: she does not have, nor need, KA-B
6.
Trudy-to-Bob: “KA-B(R)" Trudy completes her authentication, responding to the R
that Bob sent in step 3 above with KA-B(R). Since Trudy has returned the properly
encrypted nonce that Bob send in step 3, Bob thinks Trudy is Alice!
Problem16
This wouldn't really solve the problem. Just as Bob thinks (incorrectly) that he is
authenticating Alice in the first half of Figure 7.14, so too can Trudy fool Alice into
thinking (incorrectly) that she is authenticating Bob. The root of the problem that neither
Bob nor Alice can tell is the public key they are getting is indeed the public key of Alice
of Bob.
---
## Page 135
Problem 17
Ks(m,KA(H(m))
Ks()
Kn*( Ks), Ks(m,K(H(m))
Internet
Ks’( )
Ks′( Ks)
H()
compare
Figure:Operations
performed by Bob for confidentiality,integrity,and
authentication
Problem 18
a)No, without a public-private key pair or a pre-shared secret, Bob cannot verify that
Alice created the message.
b)Yes, Alice simply encrypts the message with Bob's public key and sends the
encrypted message to Bob.
Problem 19
a)Client
b)IP: 216.75.194.220, port: 443
c)283
d) 3 SSL records
e)Yes, it contains an encrypted master secret
f)First byte: bc; Last byte: 29
g)6
Problem20
Again we suppose that SSL does not provide sequence numbers. Suppose that Trudy, a
woman-in-the-middle, deletes a TCP segment. So that Bob doesn’t anything, Trudy needs
to also adjust the sequence numbers in the subsequent packets sent from Alice to Bob,
and the acknowledgment numbers sent from Bob to Alice. The result will be that Bob
will, unknowingly, be missing a packet's worth of bytes in the byte stream.
Problem 21
No, the bogus packet will fail the integrity check (which uses a shared MAC key).
---
## Page 136
Problem22
a) F
b) T
c) T
d) F
Problem23
If Trudy does not bother to change the sequence number, R2 will detect the duplicate
when checking the sequence number in the ESP header. If Trudy increments the sequence
number, the packet will fail the integrity check at R2.
Problem24
a)Since IV = 11, the key stream is 111110100000 ......
Given, m = 10100000
Hence, ICV = 1010 XOR 0000 = 1010
The three fields will be:
IV: 11
Encrypted message: 10100000 XOR 11111010 = 01011010
Encrypted ICV: 1010 XOR 0000 = 1010
b) The receiver extracts the IV (11) and generates the key stream 111110100000
- - - - - - - -
XORs the encrypted message with the key stream to recover the original message:
01011010 XOR 11111010 = 10100000
XORs the encrypted ICV with the keystream to recover the original ICV:
1010 XOR 0000 = 1010
The receiver then XORs the first 4 bits of recovered message with its last 4 bits:
1010 XOR 0000 = 1010 (which equals the recovered ICV)
c)Since the ICV is calculated as the XOR of first 4 bits of message with last 4 bits of
message, either the 1st bit or the 5th bit of the message has to be flipped for the
received packet to pass the ICV check.
d)For part (a), the encrypted message was 01011010
Flipping the 1st bit gives, 11011010
Trudy XORs this message with the keystream:
11011010 XOR 11111010 = 00100000
---
## Page 137
If Trudy flipped the first bit of the encrypted ICV, the ICV value received by the
receiver is 0010
The receiver XORs this value with the keystream to get the ICV:
0010 XOR 0000 =0010
The receiver now calculates the ICV from the recovered message:
0010 XOR 0000 = 0010 (which equals the recovered ICV and so the received packet
passes the ICV check)
Problem25
Filter Table:
Action
Source
Dest
Source
Dest
Flag
Check
Address
Protocol
port
port
bit
connection
allow
222.22/16
outside of
TCP
1023
23
any
222.22/16
allow
outside of
222.22/16
222.22/16
TCP
23
1023
ACK
X
Allow
outside of
222.22.0.12
TCP
>1023
80
Any
222.22/16
Allow
222.22.0.12
outside of
222.22/16
TCP
80
>1023
Any
deny
A11
all
all
all
all
All
Connection Table:
Source
Dest
Source
Dest
address
address
port
port
222.22.1.7
37.96.87.123
12699
23
222.22.93.2
199.1.205.23
37654
23
222.22.65.143
203.77.240.43
48712
23
---
## Page 138
Problem26
a)
Alice
Proxy1
K°(St)
b)
Alice
Proxy1
Proxy2
S( K*(S)
K;(S)
（
Alice
Proxy1
Proxy2
Activist.com
Si(S=(req))
S:(req)
req
Si(S:(page))
S=(page)
page
---
## Page 139
Chapter9ReviewQuestions
Bit rate
Bytes transferred in 67
mins
FacebookFrank
40 kbps
20 Mbytes
Martha Music
200 kbps
100 Mbytes
VictorVideo
4Mbps
2 Gbytes
2.Spatial Redundancy: It is the redundancy within a given image. Intuitively, an image
consists of mostly white space has a high degree of redundancy and can be efficiently
Temporal Redundancy reflects repetition from image to subsequent image. If, for
example, an image and the subsequent image are exactly the same, there is no reason
to re-encode the subsequent image; it is instead more efficient simply to indicate
during encoding that the subsequent image is exactly the same. If the two images are
very similar, it may be not efficient to indicate how the second image differs from the
first, rather than re-encode the second image.
3.
Quantizing a sample into 1024 levels means 10 bits per sample. The resulting rate of
the PCM digital audio signal is 160 Kbps.
4.Streaming stored audio/video: In this class of applications, the underlying medium is
prerecorded video, such as a movie, a television show, or a prerecorded sporting
event. These prerecorded videos are played on servers, and users send requests to the
servers to view the videos on demand. Many intermet companies today provide
streaming video, including YouTube, Netflix, and Hulu.
Conversational Voice- and Video-over-IP: Real-time conversational voice over the
Internet is often referred to as Internet telephony, since, from the user's perspective, it
is similar to the traditional circuit-switched telephone service. It is also commonly
called Voice-over-IP (VOIP).Conversational video is similar except that it includes
the video of the participants as well as their voices. Conversational voice and video
are widely used in the Internet today, with the Internet companies like Skype and
Google Talk boasting hundreds of millions of daily users.
Streaming Live Audio and Video: These applications allow users to receive a live
radio or television transmission over the Internet. Today, thousands of radio and
television stations around the world are broadcasting content over the internet.
5.UDP Streaming: With UDP streaming, the server transmits video at a rate that
matches the client’s video consumption rate by clocking out the video chunks over
UDP at a steady rate.
---
## Page 140
HTTP Streaming: In HTTP streaming, the video simply stored in an HTTP server as
ordinary file with a specific URL. When a user wants to see the video, the client
establishes a TCP connection with the server and issues an HTTP GET request for
that URL. The server then sends the video file, within an HTTP response message, as
quickly as possible, that is, as quickly as TCP congestion control and flow control
will allow.
Adaptive HTTP Streaming (DASH): In Dynamic Adaptive Streaming over HTTP, the
video is encoded several different versions, with each version having a different bit
rate and, correspondingly, a different quality level. The client dynamically requests
the chunks of video segments of a few seconds in length from the different versions.
When the amount of available bandwidth is high, the client naturally selects chunks
from a high-rate version; and when the available bandwidth is low, it naturally selects
from a low-rate version.
6.The three significant drawbacks of UDP Streaming are:
1. Due to unpredictable and varying amount of available bandwidth between server
and client, constant-rate UDP streaming can fail to provide continuous play out.
2. It requires a media control server, such as an RTSP server, to process client-to-
server interactivity requests and to track client state for each ongoing client
session.
3. Many firewalls are configured to block UDP traffic, preventing users behind
these firewalls from receiving UDP video
7. No. On the client side, the client application reads bytes from the TCP receive buffer
and places the bytes in the client application buffer.
8.The initial buffering delay is tp = Q/x = 4 seconds
9.End-to-end delay is the time it takes a packet to travel across the network from source
to destination. Delay jitter is the fluctuation of end-to-end delay from packet to the
next packet.
10.A packet that arrives after its scheduled play out time cannot be played out.
Therefore, from the perspective of the application, the packet has been lost.
11. First scheme: send a redundant encoded chunk after every n chunks; the redundant