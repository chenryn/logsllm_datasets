68
第3章 运维必备的网络管理技能
【示例3-18】
#清除所有规则
[root@CentOS ~]# iptables –F
#设置默认规则
[root@CentOS ~]# iptables -t filter -P INPUT ACCEPT
#允许来自192.168.3.0/24 连接sshd服务
[root@CentOS ~]# iptables -A INPUT -p tcp -s 192.168.3.0/24 --dport 22 -j
ACCEPT
由于设置了默认规则，该示例的功能同示例3-3。
上面所列举的示例仅仅是为了说明语法和原理，在实际使用中，还需要注意规则添加的顺
序，使数据包通过的规则最少。
基于网络接口的过滤如【示例3-19】所示。
【示例3-19】
[root@CentOS ~]#iptables -t filter -F
[root@CentOS ~]#iptables -t filter -P FORWARD DROP
[root@CentOS ~]#iptables -t filter -A FORWARD -p tcp -i eth2 -o eth1 --dport
80 -j ACCEPT
使用-i参数来指定数据包的来源网络接口，使用-o来指定数据包将从哪个网络接口出去。
在INPUT 链中不能使用-o选项，OUTPUT链中不能使用-i选项。
2. NAT设置
通常网络中的数据包从包的源地址发出直到包要发送的目的地址，整个路径经过很多不同
的连接，一般情况下这些连接不会更改数据包的内容，只是原样转发。如果发出数据包的主机
使用的源地址是私用网络地址，该数据包将不能在互联网上传输。要能够使用私有网络访问互
联网，就必须做NAT（Network Address Translation，网络地址转换）。
NAT 分为两种不同的类型：源 NAT（SNAT）和目标 NAT（DNAT）。SNAT 通常用于使
用了私网地址的局域网络，能够访问互联网。DNAT是指修改包的目标地址，端口转发、负载
均衡和透明代理都属于DNAT。
在SNAT中改变源地址，如【示例3-20】所示。
【示例3-20】
# SNAT改变源地址为1.2.3.4
[root@CentOS ~]# iptables -t nat -A POSTROUTING -o eth0 -j SNAT --to 1.2.3.4
#DNAT
[root@CentOS ~]# iptables -t nat -A PREROUTING -p tcp -i eth2 -d 1.2.3.4 --dport
80 –j DNAT --to 192.168.3.88:80
69
CentOS 7.5系统管理与运维实战
如果做SNAT只能在POSTROUTING上进行，而做DNAT只能在PREROUTING内进行。
3.6
Linux 高级网络配置工具
目前很多Linux在使用之前的arp、ifconfig和route命令。虽然这些工具能够工作，但它
们在Linux 2.2和更高版本的内核上显得有一些落伍。无论对于Linux开发者还是Linux系统
管理员，网络程序调试时数据包的采集和分析是不可少的。tcpdump是Linux中强大的数据包
采集分析工具之一。本节主要介绍iproute2和tcpdump的相关知识。
3.6.1 高级网络管理工具 iproute2
相对于系统提供的 arp、ifconfig 和 route 等旧版本的命令，iproute2 工具包提供了更丰富
的功能，除了提供网络参数设置、路由设置、带宽控制等功能，最新的GRE隧道也可以通过
此工具进行配置。
现在大多数Linux发行版本都安装了iproute2软件包，如没有安装可以使用yum工具进行
安装。应该注意的是，yum 工具需要联网才能使用。iproute2 工具包中的主要管理工具为 ip
命令。下面将介绍iproute2工具包的安装与使用。安装过程如【示例3-21】所示。
【示例3-21】
[root@CentOS Packages]# yum install -y iproute
#安装过程省略
[root@CentOS Packages]# rpm -qa|grep iproute
iproute-3.10.0-13.el7.x86_64
#检查安装情况
[root@CentOS Packages]# ip -V
ip utility, iproute2-ss130716
ip命令的语法如【示例3-22】所示。
【示例3-22】
[root@CentOS ~]# ip help
Usage: ip [ OPTIONS ] OBJECT { COMMAND | help }
ip [ -force ] -batch filename
where OBJECT := { link | addr | addrlabel | route | rule | neigh | ntable |
tunnel | tuntap | maddr | mroute | mrule | monitor | xfrm |
netns | l2tp | tcp_metrics | token }
OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] | -r[esolve] |
-f[amily] { inet | inet6 | ipx | dnet | bridge | link } |
-4 | -6 | -I | -D | -B | -0 |
70
第3章 运维必备的网络管理技能
-l[oops] { maximum-addr-flush-attempts } |
-o[neline] | -t[imestamp] | -b[atch] [filename] |
-rc[vbuf] [size]}
1. 使用ip 命令来查看网络配置
ip命令是iproute2软件的命令工具，可以替代ifconfig、route等命令，查看网络配置的用
法如【示例3-23】所示。
【示例3-23】
#显示当前网卡参数，同ifconfig
[root@CentOS ~]# ip addr list
1: lo:  mtu 65536 qdisc noqueue state UNKNOWN
link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
inet 127.0.0.1/8 scope host lo
valid_lft forever preferred_lft forever
inet6 ::1/128 scope host
valid_lft forever preferred_lft forever
2: eno16777736:  mtu 1500 qdisc pfifo_fast
state UP qlen 1000
link/ether 00:0c:29:0b:07:76 brd ff:ff:ff:ff:ff:ff
inet 192.168.128.133/24 brd 192.168.128.255 scope global dynamic eno16777736
valid_lft 1149sec preferred_lft 1149sec
inet6 fe80::20c:29ff:fe0b:776/64 scope link
valid_lft forever preferred_lft forever
3: eno33554984:  mtu 1500 qdisc pfifo_fast
state UP qlen 1000
link/ether 00:0c:29:0b:07:80 brd ff:ff:ff:ff:ff:ff
inet 192.168.146.150/24 brd 192.168.146.255 scope global eno33554984
valid_lft forever preferred_lft forever
inet6 fe80::20c:29ff:fe0b:780/64 scope link
valid_lft forever preferred_lft forever
#添加新的网络地址
[root@CentOS ~]# ip addr add 192.168.128.140/24 dev eno16777736
[root@CentOS ~]# ip addr list
#部分结果省略
4: eno16777736:  mtu 1500 qdisc pfifo_fast
state UP qlen 1000
link/ether 00:0c:29:0b:07:76 brd ff:ff:ff:ff:ff:ff
inet 192.168.128.133/24 brd 192.168.128.255 scope global dynamic eno16777736
valid_lft 1776sec preferred_lft 1776sec
inet 192.168.128.140/24 scope global secondary eno16777736
valid_lft forever preferred_lft forever
inet6 fe80::20c:29ff:fe0b:776/64 scope link
valid_lft forever preferred_lft forever
#删除网络地址
[root@CentOS ~]# ip addr del 192.168.3.123/24 dev eth0
上面的命令显示了机器上所有的地址，以及这些地址属于哪些网络接口。“inet”表示
71
CentOS 7.5系统管理与运维实战
Internet (IPv4)。eth0的IP地址与192.168.3.88/24相关联，“/24”指IP地址表示网络地址的位
数，“lo”则为本地回路信息。
2. 显示路由信息
如需查看路由信息，可以使用“ip route list”命令，如【示例3-24】所示。
【示例3-24】
#查看路由情况
[root@CentOS ~]# ip route list
default via 192.168.146.2 dev eno33554984 proto static metric 1024
192.168.128.0/24 dev eno16777736 proto kernel scope link src 192.168.128.133
192.168.146.0/24 dev eno33554984 proto kernel scope link src 192.168.146.150
[root@CentOS ~]# route -n
Kernel IP routing table
Destination Gateway Genmask Flags Metric Ref Use Iface
0.0.0.0 192.168.146.2 0.0.0.0 UG 1024 0 0 eno33554984
192.168.128.0 0.0.0.0 255.255.255.0 U 0 0 0 eno16777736
192.168.146.0 0.0.0.0 255.255.255.0 U 0 0 0 eno33554984
#添加路由
[root@CentOS ~]# ip route add 192.168.3.1 dev eno33554984
上述示例首先查看系统中当前的路由情况，其功能和route命令类似。
以上只是初步介绍了iproute2的用法，更多信息请查看系统帮助。
3.6.2 网络数据采集与分析工具 tcpdump
tcpdump即dump traffic on a network，是根据使用者的定义对网络上的数据包进行截获的
包分析工具。无论对于网络开发者还是系统管理员，数据包的获取与分析都是最重要的技术之
一。对于系统管理员来说，在网络性能急剧下降的时候，可以通过tcpdump工具分析原因，找
出造成网络阻塞的来源。对于程序开发者来说，可以通过tcpdump工具来调试程序。tcpdump
支持针对网络层、协议、主机、网络或端口的过滤，并提供 and、or、not 等逻辑语句过滤不
必要的信息。
Linux系统下tcpdump普通用户是不能正常执行的，一般通过root用户执行。
tcpdump采用命令行方式，命令格式如下，参数说明如表3.12所示。
tcpdump [ -adeflnNOpqStvx ] [ -c 数量 ] [ -F 文件名 ]
[ -i 网络接口 ] [ -r 文件名] [ -s snaplen ]
[ -T 类型 ] [ -w 文件名 ] [表达式 ]
表3.12 tcpdump命令参数含义说明
参数 含义
-A 以ASCII码方式显示每一个数据包，在程序调试时可方便查看数据
-a 将网络地址和广播地址转变成名字
72
第3章 运维必备的网络管理技能
（续表）
参数 含义
-c tcpdump将在接收到指定数目的数据包后退出
-d 将匹配信息包的代码以人们能够理解的汇编格式给出
-dd 将匹配信息包的代码以C语言程序段的格式给出
-ddd 将匹配信息包的代码以十进制的形式给出
-e 在输出行打印出数据链路层的头部信息
-f 将外部的Internet地址以数字的形式打印出来
-F 使用文件作为过滤条件表达式的输入，此时命令行上的输入将被忽略
-i 指定监听的网络接口
-l 使标准输出变为缓冲行形式
-n 不把网络地址转换成名字
-N 不打印出host 的域名部分
-q 打印很少的协议相关信息，输出行都比较简短
-r 从文件file 中读取包数据
-s 设置tcpdump的数据包抓取长度，如果不设置默认为68字节
-t 在输出的每一行不打印时间戳
-tt 不对每行输出的时间进行格式处理
-ttt tcpdump 输出时, 每两行打印之间会延迟一个时间段，以ms为单位
-tttt 在每行打印的时间戳之前添加日期的打印
-v 输出一个稍微详细的信息，例如在ip包中可以包括ttl和服务类型的信息
-vv 输出详细的报文信息
-vvv 产生比-vv更详细的输出
-x 当分析和打印时， tcpdump会打印每个包的头部数据，同时会以十六进制打印出每个包的数据，
但不包括连接层的头部
-xx tcpdump会打印每个包的头部数据，同时会以十六进制打印出每个包的数据, 其中包括数据链路
层的头部
-X tcpdump会打印每个包的头部数据，同时会以十六进制和ASCII码形式打印出每个包的数据，但