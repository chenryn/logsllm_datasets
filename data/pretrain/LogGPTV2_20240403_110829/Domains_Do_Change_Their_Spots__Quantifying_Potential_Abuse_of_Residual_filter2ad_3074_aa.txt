title:Domains Do Change Their Spots: Quantifying Potential Abuse of Residual
Trust
author:Johnny So and
Najmeh Miramirkhani and
Michael Ferdman and
Nick Nikiforakis
9
0
6
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
2022 IEEE Symposium on Security and Privacy (SP)
Domains Do Change Their Spots:
Quantifying Potential Abuse of Residual Trust
Johnny So, Najmeh Miramirkhani, Michael Ferdman, Nick Nikiforakis
Stony Brook University
Abstract—When domains expire and are released to the public,
adversaries can re-register them with the hope of exploiting residual
trust from clients that are unaware of the change in ownership.
Because domain name resolution is integral to the web, possible
clients run the gamut from humans browsing the web to automated
and periodic processes such as system updates. For an adversary, this
trivially yields access to an attack vector that can affect a multitude
of diverse systems and devices. We reason that some domains which
experience residual trust and are valuable from a security perspective
are not valuable from a dropcatching perspective and, as such, can
be re-registered by an adversary without participating in fiercely
competitive auctions for expired domains.
In this paper, we present an investigation into this attack vector
using a top-down, opportunistic approach, as opposed to bottom-up
approaches used by prior work that target specific systems and
infrastructure. Throughout a one-month re-registration period, we
identify potentially valuable dropped domains using a threshold of
passive DNS resolutions, re-register, and deploy them with basic
honeypot services. We then analyze the traffic to these domains to find
instances of residual trust that can be exploited. Our honeypot services
recorded, over a four-month period, 650,737,621 requests from
5,540,379 unique IP addresses situated in 22,744 different autonomous
systems to the 201 re-registered domains. Although a majority of
these domains may not pose significant security risks, we are most
concerned with and thus focus our discussion on unusual domains
which receive orders of magnitude more traffic and types of traffic
that are significantly different from the other domains. These include
domains which previously functioned as a torrent tracker, an API
for a computer lab usage statistics service used by many universities,
an API that was a point of contact for a common Android haptics
library, security company DNS sinkhole servers, an Internet radio
and music station, command-and-control servers for malware and
potentially unwanted programs, and an email tracker. Our findings
demonstrate that expired domains pose a real threat to the security
of the Internet ecosystem and that adversaries with modest budgets
can compromise a wide range of systems and services by merely
registering previously-popular domains that were left to expire.
I. INTRODUCTION
The Domain Name System (DNS) is the distributed phone book
of the Internet, tying human-readable domain names to their actual
IP address(es). Because DNS is integral to the web experience,
DNS queries are ever-present, yet abstracted away from the normal
user experience. Queries are performed in the background and
are answered by optimized, local, and dedicated DNS resolvers
that find the IP address for a given domain name in milliseconds.
Unsurprisingly, details such as the domain registration process and
the registration life cycles are not important to users.
Perhaps the most pressing yet unimportant detail is that domains
can expire and change ownership without the users’ knowledge. If
a domain expires and changes ownership, its residual trust — the
historical reputation — is implicitly transferred to its new owners [1].
There are no standards or built-in mechanisms that warn clients
when a previously contacted domain is now operated by a different
entity. This enables an attack surface that exploits prior trust and
is a subset of the overall problem of integrity verification on the
web. If a malicious actor were to re-register an expired domain with
residual trust, they would be able to exploit all residual trust traffic.
All clients that depend on domain name resolution are susceptible
to contributing to residual trust traffic, and potential clients run the
gamut from end users, to JavaScript libraries, to system updates.
There has been a rising interest in expired domains; industry
interest took shape in the rise of the dropcatch ecosystem in which
companies build complex infrastructure to re-register valuable
expired domain names as soon as they are released to the public. The
dynamics behind this phenomenon and its resultant industry were
studied by previous works [2], [3], [4]. The value of such domains
is typically derived from characteristics such as their string length,
previous amount of traffic, popularity ranking in lists such as Alexa’s
Top 1 Million, and past indexing in search engines.
On the other hand, academic interest took shape in investigating
how expired domains can enable an attack on what may be an
otherwise secure system. For example, Lever et al. have found
instances of residual-trust issues in domain names used by browser
extensions [1], as well as malware and potentially unwanted
programs [5]. Alowaisheq et al. discovered that even dangerous
domains that were sinkholed by security researchers and governments
are eventually allowed to expire and can therefore be re-registered and
used to revive dormant botnets [6]. Other researchers have pointed
out the interaction between web security mechanisms and expired
domains, showing that the latter can be abused to inject malicious
JavaScript in popular domains [7] as well as evade previously secure
CSP policies [8]. In all these cases, the abuse of residual trust in
these domains would compromise the security of entire systems and
potentially harm the privacy of a significant portion of their user base.
By taking a step back, we observe that prior work from the
academic community favored a bottom-up approach, in which they
began with analyzing a target system (such as extensions, malware,
and CSP policies) and then discovered and quantified how expired
domains can compromise them. In this paper, we present the first
top-down approach to investigate this problem — we re-register
domains in a target-agnostic fashion and then not only detect but also
quantify the potential abuse of residual trust in our pool of domains.
Our approach resembles that of an opportunistic attacker who
re-registers a number of expired domains and discovers that some of
them still receive traffic because of residual trust, whereas a bottom-up
approach first identifies systems of interest and then attempts to
re-register particular domains in hopes of exploiting residual trust.
Using our top-down approach, we find that not only are the specific
worries described by these bottom-up works likely to occur in reality,
but they are also not financially difficult to successfully execute.
Our study seeks to understand and quantify the feasibility for
valuable domains to slip by the dropcatch industry and be obtained
by lower-budget registrants. With the ever-increasing number of
domain registrations [9] and consequently ever-increasing number
of domain expirations, we argue that a better understanding of the
© 2022, Johnny So. Under license to IEEE.
DOI 10.1109/SP46214.2022.00008
2130
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:01:51 UTC from IEEE Xplore.  Restrictions apply. 
feasibility and severity of this attack vector is necessary to ensure
the security of not only end users but also dependent systems. In
particular, there are domains that would not be considered valuable
from a typical monetary or dropcatching perspective, but may hold
significant value from a security perspective. Domains that do not
serve end-user-facing content have no need for a memorable name
nor do they appear in common domain ranking lists. Some common
examples include domains for DNS name servers, API servers, or
CDN servers. To this end, we design an experiment to simulate the
process of a potential malicious actor aiming to re-register expired
domains whose residual trust can be exploited to cause harm to the
security and privacy of dependent systems and end users.
We summarize our contributions as follows:
• Large-scale analysis and profiling of residual
trust
traffic to 201 domains over four months. We empirically
demonstrate that it is likely for a new owner to identify the type
of service previously offered on a particular domain using not
only residual traffic logs, but also third-party references on the
Internet and historical archives. Using this method, we were
able to confidently categorize 128 domains from our pool of re-
registered domains. Additionally, we find evidence that residual
trust traffic is not guaranteed to decay over time; that is, it is
possible to continue to receive traffic because of residual trust
for months after a domain experiences a change in ownership.
an
infrastructure to aid in identifying domains with
exploitable residual trust traffic. Our top-down approach
comprises automated pipelines for the selection, re-registration,
and deployment of expired domain candidates as well as for
the detection of residual trust traffic in our domains.
implementation,
of
• Design,
and
evaluation
• Evidence that residual trust abuse can affect millions of
different IP addresses over tens of thousands of different
autonomous systems, even with a simple domain selection
strategy, and it does not require heavy financial invest-
ment. We spend a total of $1,464.64 to re-register 201 domains
and, after profiling the re-registered domains, find that some
would enable an adversary to not only gather information but
also manipulate and compromise unaware clients and systems.
These include notable, high-volume domains which previously
functioned as a torrent tracker, an API for a computer-lab-usage
statistics service used by many universities, an API that was a
point of contact for a common Android haptics library, security
company DNS sinkhole servers, an Internet radio and music sta-
tion, command-and-control centers for malware and potentially
unwanted programs (PUPs), and an email tracker [10].
II. RESIDUAL TRUST IN DNS
Information about domains is managed by registrars and registries
who follow standardized processes created by the Internet Corporation
for Assigned Names and Numbers (ICANN). Depending on the
top-level domain (TLD) and the corresponding managing entity,
such processes may vary. For example, country-code TLDs are
managed by their respective countries, whereas generic TLDs are
managed by ICANN. Domains are generally registered for several
years, after which they expire and must be renewed. Generic TLDs
follow ICANN’s Expired Registration Recovery Policy (ERRP) [11],
a process which grants expiring domain owners buffer time to
renew their domain before it is released to the public. The ERRP
mandates that domain registrars attempt to notify domain owners
twice (up to one month) before expiration and once (within five days)
after expiration. After the registrar deletes a domain, it enters the
Redemption Grace Period, during which the expired domain owner
can still renew the domain, although typically at a higher price. The
expired domain becomes publicly available for re-registration five
days after the grace period ends.
As there is no inherent mechanism to warn of changes in domain
ownership, it is likely that unaware clients continue to attempt to con-
tact domains after expiration and after their deletion by their registrar.
If a deleted domain is purchased and receives such residual traffic,
the new owner will have access to all incoming communications from
these clients. In this scenario, traditional techniques such as HTTPS
will not maintain confidentiality. In fact, any encryption technique
that derives a key through communication with the server will not
maintain the confidentiality of the data, since the receiver is operated
by the re-registrant. Perhaps the only communications that might
remain opaque to a re-registrant are obscure or non-standard methods
which may be nontrivial to reverse engineer.
It is important to acknowledge that there have been remote identity
verification mechanisms that were proposed such as HTTP Public
Key Pinning (HPKP) [12]. HPKP would be able to notice that
the identity of the server has changed because of a change in the
server’s public key, but HPKP is now deprecated [13] because of its
difficulty to use and risks such as rendering a site unusable and hostile
pinning [14]. Even if HPKP were enabled for the domain, it would
be difficult to determine whether a pinning violation was caused by a
misconfiguration or an attack. It would also be difficult to determine if
the new domain owner is malicious and attempting to exploit residual
trust or benign and merely offering new content on the domain.
As the new owner is privy to all communication to their domain,
they would be able to identify the type of service previously offered
by the domain and build specific infrastructure in an attempt to
gather more information from higher levels of interaction with
clients. Depending on the nature of the services previously offered
by the domain, the new owner can gain varying levels of personally
identifiable information, including IP addresses, geolocation, device
fingerprints, and user credentials.
To the best of our knowledge, this study is the first to use a top-down
approach to investigate the feasibility of residual trust abuse. We design
and implement pipelines to automatically identify potentially valuable