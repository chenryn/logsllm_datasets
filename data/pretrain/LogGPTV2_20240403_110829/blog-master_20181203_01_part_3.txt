                                        # and their durations, > 0 logs only      
                                        # statements running at least this number      
                                        # of milliseconds      
# - What to Log -      
#debug_print_parse = off      
#debug_print_rewritten = off      
#debug_print_plan = off      
#debug_pretty_print = on      
# 记录检查点的详细统计信息    
log_checkpoints = on       
# 如果业务是短连接，建议设置为OFF，否则建议设置为ON      
log_connections = off      
# 如果业务是短连接，建议设置为OFF，否则建议设置为ON      
log_disconnections = off      
#log_duration = off      
# 记录错误代码的代码位置，是什么代码输出的日志，更好的跟踪问题    
log_error_verbosity = verbose    # terse, default, or verbose messages      
#log_hostname = off      
#log_line_prefix = '%m [%p] '            # special values:      
                                        #   %a = application name      
                                        #   %u = user name      
                                        #   %d = database name      
                                        #   %r = remote host and port      
                                        #   %h = remote host      
                                        #   %p = process ID      
                                        #   %t = timestamp without milliseconds      
                                        #   %m = timestamp with milliseconds      
                                        #   %n = timestamp with milliseconds (as a Unix epoch)      
                                        #   %i = command tag      
                                        #   %e = SQL state      
                                        #   %c = session ID      
                                        #   %l = session line number      
                                        #   %s = session start timestamp      
                                        #   %v = virtual transaction ID      
                                        #   %x = transaction ID (0 if none)      
                                        #   %q = stop here in non-session      
                                        #        processes      
                                        #   %% = '%'      
                                        # e.g. ' '      
# 是否打印锁等待事件    
log_lock_waits = on                   # log lock waits >= deadlock_timeout      
# 如果需要审计SQL，则可以设置为all      
log_statement = 'ddl'                 # none, ddl, mod, all      
#log_replication_commands = off      
# 当使用的临时文件超过多大时，打印到日志中，跟踪大SQL。    
log_temp_files = 256MB                    # log temporary files equal or larger      
                                        # than the specified size in kilobytes;      
                                        # -1 disables, 0 logs all temp files      
log_timezone = 'PRC'        
#------------------------------------------------------------------------------      
# PROCESS TITLE      
#------------------------------------------------------------------------------      
#cluster_name = ''                      # added to process titles if nonempty      
                                        # (change requires restart)      
#update_process_title = on      
#------------------------------------------------------------------------------      
# STATISTICS      
#------------------------------------------------------------------------------      
# - Query and Index Statistics Collector -      
#track_activities = on      
#track_counts = on      
# 跟踪IO耗时会带来一定的性能影响，默认是关闭的      
# 如果需要统计IO的时间开销，设置为ON      
# 建议用pg_test_timing测试一下获取时间的开销，如果开销很大，建议关闭这个时间跟踪。      
track_io_timing = on     
# 是否需要跟踪函数被调用的次数，耗时    
track_functions = pl                  # none, pl, all      
# 单条被跟踪的QUERY最多能存储多少字节，如果有超长SQL，则日志中被截断。 根据需要设置    
#track_activity_query_size = 1024       # (change requires restart)      
# 相对路径（$PGDATA）或绝对路径。用于存储统计信息的临时目录。可以设置为ram based directory，提高性能    
# Pointing this at a RAM-based file system will decrease physical I/O requirements and can lead to improved performance.    
#stats_temp_directory = 'pg_stat_tmp'      
# - Monitoring -      
#log_parser_stats = off      
#log_planner_stats = off      
#log_executor_stats = off      
#log_statement_stats = off      
#------------------------------------------------------------------------------      
# AUTOVACUUM      
#------------------------------------------------------------------------------      
# 打开自动垃圾回收    
autovacuum = on                         # Enable autovacuum subprocess?  'on'      
                                        # requires track_counts to also be on.      
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and      
                                        # their durations, > 0 logs only      
                                        # actions running at least this number      
                                        # of milliseconds.      
# CPU核多，并且IO好的情况下，可多点，但是注意最多可能消耗这么多内存：       
# autovacuum_max_workers * autovacuum mem(autovacuum_work_mem)，      
# 会消耗较多内存，所以内存也要有基础。           
# 当DELETE\UPDATE非常频繁时，建议设置多一点，防止膨胀严重        
# autovacuum_max_workers 公式： max(min( 8 , CPU核数/2 ) , 5)     
autovacuum_max_workers = 8              # max number of autovacuum subprocesses      
                                        # (change requires restart)      
# 建议不要太高频率，否则会因为vacuum产生较多的XLOG。或者在某些垃圾回收不掉的情况下(例如长事务、feed back on，等)，导致一直触发vacuum，CPU和IO都会升高      
[《PostgreSQL垃圾回收代码分析 - why postgresql cann't reclaim tuple is HEAPTUPLE_RECENTLY_DEAD》](201505/20150503_01.md)        
[《PostgreSQL物理"备库"的哪些操作或配置，可能影响"主库"的性能、垃圾回收、IO波动》](201704/20170410_03.md)        
#autovacuum_naptime = 1min              # time between autovacuum runs      
#autovacuum_vacuum_threshold = 50       # min number of row updates before      
                                        # vacuum      
#autovacuum_analyze_threshold = 50      # min number of row updates before      
                                        # analyze      
autovacuum_vacuum_scale_factor = 0.02   # fraction of table size before vacuum      
autovacuum_analyze_scale_factor = 0.01  # fraction of table size before analyze      
# 除了设置较大的FREEZE值。      
# 还是需要注意FREEZE风暴  [《PostgreSQL Freeze 风暴预测续 - 珍藏级SQL》](201804/20180411_01.md)        
# 表级定制freeze      
[《PostgreSQL 10 CLogControlLock 等待事件分析与优化 - hint bit, freeze, autovacuum, 风暴》](201903/20190319_02.md)      
autovacuum_freeze_max_age = 1200000000  # maximum XID age before forced vacuum      
                                        # (change requires restart)      
autovacuum_multixact_freeze_max_age = 1250000000        # maximum multixact age      
                                        # before forced vacuum      
                                        # (change requires restart)      
# 如果数据库UPDATE非常频繁，建议设置为0。并且建议使用SSD      
autovacuum_vacuum_cost_delay = 0ms      # default vacuum cost delay for      
                                        # autovacuum, in milliseconds;      
                                        # -1 means use vacuum_cost_delay      
#autovacuum_vacuum_cost_limit = -1      # default vacuum cost limit for      
                                        # autovacuum, -1 means use      
                                        # vacuum_cost_limit      
#------------------------------------------------------------------------------      
# CLIENT CONNECTION DEFAULTS      
#------------------------------------------------------------------------------      
# - Statement Behavior -      
#search_path = '"$user", public'        # schema names      
#row_security = on      
#default_tablespace = ''                # a tablespace name, '' uses the default      
# 临时表的表空间，可以设置多个，轮询使用。    
# 临时表的表空间，建议为SSD目录。速度快。    
#temp_tablespaces = ''                  # a list of tablespace names, '' uses      
                                        # only default tablespace      
#check_function_bodies = on      
#default_transaction_isolation = 'read committed'      
#default_transaction_read_only = off      
#default_transaction_deferrable = off      
#session_replication_role = 'origin'      
# 可以用来防止雪崩，但是不建议全局设置      
#statement_timeout = 0                  # in milliseconds, 0 is disabled      
# 执行DDL时，建议加上超时      
# 可以用来防止雪崩    
#lock_timeout = 0                       # in milliseconds, 0 is disabled      
# 空闲中事务自动清理，根据业务实际情况设置      
idle_in_transaction_session_timeout = '6h'        # in milliseconds, 0 is disabled      
#[《PostgreSQL 10 CLogControlLock 等待事件分析与优化 - hint bit, freeze, autovacuum, 风暴》](201903/20190319_02.md)      
#vacuum_freeze_min_age = 50000000      
vacuum_freeze_table_age = 200000000      
#vacuum_multixact_freeze_min_age = 5000000      
vacuum_multixact_freeze_table_age = 200000000      
# [《PostgreSQL 11 内核优化 - 降低vacuum cleanup阶段index scan概率 ( vacuum_cleanup_index_scale_factor , skip index vacuum cleanup stage)》](201902/20190201_03.md)      
#vacuum_cleanup_index_scale_factor = 0.1        # fraction of total number of tuples      
                                                # before index cleanup, 0 always performs      
                                                # index cleanup      
#bytea_output = 'hex'                   # hex, escape      
#xmlbinary = 'base64'      
#xmloption = 'content'      
# 限制GIN扫描的返回结果集大小，在想限制超多匹配的返回时可以设置      
#gin_fuzzy_search_limit = 0      
# GIN索引pending list的大小      
#gin_pending_list_limit = 4MB      
# - Locale and Formatting -      
datestyle = 'iso, mdy'      
#intervalstyle = 'postgres'      
timezone = 'PRC'      
#timezone_abbreviations = 'Default'     # Select the set of available time zone      
                                        # abbreviations.  Currently, there are      
                                        #   Default      
                                        #   Australia (historical usage)      
                                        #   India      
                                        # You can create your own file in      
                                        # share/timezonesets/.      
# 浮点精度扩展值    
[《PostgreSQL 浮点精度调整（extra_float_digits）》](201510/20151020_01.md)      
#extra_float_digits = 0                 # min -15, max 3      
#client_encoding = sql_ascii            # actually, defaults to database      
                                        # encoding      
# These settings are initialized by initdb, but they can be changed.      
lc_messages = 'C'                       # locale for system error message      
                                        # strings      
lc_monetary = 'C'                       # locale for monetary formatting      
lc_numeric = 'C'                        # locale for number formatting      
lc_time = 'C'                           # locale for time formatting      
# default configuration for text search      
default_text_search_config = 'pg_catalog.english'      
# - Shared Library Preloading -      
# 需要加载什么LIB，预先加载，对于经常访问的库也建议预加载，例如postgis      
#shared_preload_libraries = 'pg_jieba,pipelinedb'        # (change requires restart)      
shared_preload_libraries = 'pg_stat_statements'    
#local_preload_libraries = ''      
#session_preload_libraries = ''      
# - Other Defaults -      
#dynamic_library_path = '$libdir'      
# 是否已编译JIT特性，如果已编译，设置为ON    
#jit = off                               # allow JIT compilation      
#jit_provider = 'llvmjit'               # JIT implementation to use      
#------------------------------------------------------------------------------      
# LOCK MANAGEMENT      
#------------------------------------------------------------------------------      
deadlock_timeout = 1s      
#max_locks_per_transaction = 64         # min 10      
                                        # (change requires restart)      
#max_pred_locks_per_transaction = 64    # min 10      
                                        # (change requires restart)      
#max_pred_locks_per_relation = -2       # negative values mean      
                                        # (max_pred_locks_per_transaction      
                                        #  / -max_pred_locks_per_relation) - 1      
#max_pred_locks_per_page = 2            # min 0      
#------------------------------------------------------------------------------      
# VERSION AND PLATFORM COMPATIBILITY      
#------------------------------------------------------------------------------      
# - Previous PostgreSQL Versions -      
#array_nulls = on      
#backslash_quote = safe_encoding        # on, off, or safe_encoding      
#default_with_oids = off      
# [《PostgreSQL 转义、UNICODE、与SQL注入》](201704/20170402_01.md)        
#escape_string_warning = on      
#lo_compat_privileges = off      
#operator_precedence_warning = off      
#quote_all_identifiers = off      
#standard_conforming_strings = on      
#synchronize_seqscans = on      
# - Other Platforms and Clients -      
# 是否启用 exp = null 自动转换为 exp is null    
# https://www.postgresql.org/docs/11/runtime-config-compatible.html#RUNTIME-CONFIG-COMPATIBLE-CLIENTS    
#transform_null_equals = off      
#------------------------------------------------------------------------------      
# ERROR HANDLING      
#------------------------------------------------------------------------------      
#exit_on_error = off                    # terminate session on any error?      
#restart_after_crash = on               # reinitialize after backend crash?      
#------------------------------------------------------------------------------      
# CONFIG FILE INCLUDES      
#------------------------------------------------------------------------------      
# These options allow settings to be loaded from files other than the      
# default postgresql.conf.      
#include_dir = 'conf.d'                 # include files ending in '.conf' from      
                                        # directory 'conf.d'      
#include_if_exists = 'exists.conf'      # include file only if it exists      
#include = 'special.conf'               # include file      
#------------------------------------------------------------------------------      
# CUSTOMIZED OPTIONS      