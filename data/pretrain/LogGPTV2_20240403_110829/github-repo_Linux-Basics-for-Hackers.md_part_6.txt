kali \>cat /etc/snort/snort.conf \| grep mysql
include \$RULE_PATH/mysql.rules \#include \$RULE_PATH/server¬mysql.rules
你可以看到 **grep** 命令查找到mysql 出现过两次。
假设你想要**sed** 将每一个出现的mysql
替换成MySQL（记住，Linux大小写敏感）然后保存到文件snort2.conf。你可以输入清单2-6中的命令
：
kali \>sed s/mysql/MySQL/g /etc/snort/snort.conf \> snort2.conf
*清单 2¬6: 使用sed 查找替换关键词或字段*
**s**参数提供搜索，你先提供想要搜索的关键词 (mysql) 然后提供想要替换成的关键词
(MySQL), 用斜杠
(/)分开。**g**参数告诉Linux你希望全局替换，然后将结果保存到一个新文件snort2.conf。
现在，当你使用**grep**查找snort2.conf
中的mysql，你将看到没有找到mysql，但是当你搜索MySQL时，你将看到它出现了两次。
kali \>cat snort2.conf \| grep MySQL
\#include \$RULE_PATH/server¬MySQL.rules
如果你只想替换第一个出现的 mysql，你需要去掉末尾的g参数。
kali \>sed s/mysql/MySQL/ snort.conf \> snort2.conf
你也可以使用sed
命令查找替换第一个出现字段以外的任意位置出现的字段。例如，如果你想只替换第二个出现的mysql，只需要在命令末尾加上出现的次数（这里是2）。
kali \>sed s/mysql/MySQL/2 snort.conf \> snort2.conf
这个命令值影响第二个出现的mysql。
### 使用MORE和LESS查看文件
尽管**cat**是个打开文件和创建小文件的好工具，在打开大文件时它依然有它的限制。当你用cat打开snort.conf,时，文件将一直被打印直到文件结束。如果你想要收集任何信息，这就变得很不实用。
为了打开大文件，我们有另外两个查看工具：**more** 和**less**。
#### *使用more控制显示文件*
**more** 命令一次只显示一页文件，并且让你可以使用**ENTER**
键翻页。这是**man**命令使用的工具,现在我们来使用它。使用**more**命令打开snort.conf
（参见清单2-7） 。
kali \>more /etc/snort/snort.conf
­­snip­­
\# Snort build options:
\# Options: ­­enable­gre ­­enable­mpls ­­enable­targetbased
­­enable­ppm ­­enable­perfprofiling enable­zlib ­­enable­active
­response ­­enable­normalizer ­­enable­reload ­­enable­react
­­enable­flexresp3 \#
­­More­­(2%)
*清单 2-7: 使用more命令在终端里一次显示一页*
注意**more**
命令只显示一页然后就停止了，并且它会在左下角显示已经显示了多少内容（这里是2%）。按**ENTER**键查看额外的行或页。按**q**键（quit）退出more。
#### *使用less显示和过滤文件*
**less**命令和**more**命令非常相似，但是less有额外的功能，有句话叫 “Less is
more。”
使用less，你不但可以滚动查看一个文件，还可以过滤这个文件，清单2-8，使用less打开snort.conf
：
kali \>less /etc/snort/snort.conf
­­snip­­
\# Snort build options:
\# Options: ­­enable­gre ­­enable­mpls ­­enable­targetbased
­­enable­ppm ­­enable­perfprofiling enable­zlib ­­enable­active
­response ­­enable­normalizer ­­enable­reload ­­enable­react
/etc/snort/snort.conf
*清单 2-8: 使用less命令在终端里一次显示一页和过滤内容*
注意**less**在屏幕左下角高亮了文件的路径。如果你按下斜杠键（/），less会让你搜索文件里的字段。例如，当你开始设置Snort时，你需要先确定你想在何时向何处发送攻击警告输出。要想从配置文件中找到这一段，你只需要搜索output，像这样：
\# Snort build options:
\# Options: ­­enable­gre ­­enable­mpls ­­enable­targetbased
­­enable­ppm ­­enable­perfprofiling enable­zlib ­­enable­active
­response ­­enable­normalizer ­­enable­reload ­­enable­react
/output
这会立即将你带到第一个出现output的地方，并且高亮了output。然后你可以按**n**键（next）到下一个出现output的地方。
\# Step \#6: Con图 output plugins
\# For more information, see Snort Manual, Configuring Snort - Output Modules
\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#
unified2
\# Recommended for most installs
\# output unified2: filename merged.log, limit 128, nostamp, mpls_event_types,
Vlan_event_types
output unified2: filename snort.log, limit 128, nostamp, mpls_event_types,
vlan_event_types
\# Additional configuration for specific types of installs
\# output alert_unified2: filename snort.alert, limit 128, nostamp
\# output log_unified2: filename snort.log, limit 128, nostamp
\# syslog
\# output alert_syslog: LOG_AUTH LOG_ALERT
:
如你所见，less去掉了接下来出现的output并且高亮了所有搜到的字段。在这里,
它直接跳到Snort的输出段，真是方便啊！
### 总结
Linux系统有许多操纵文本的方法，每种方法都有其优缺点。在本章中，我们已经接触了一些最有用的方法，但是我建议您尝试每一种方法，并建立您自己的感觉和偏好。例如，我认为**grep**是不可缺少的，并且我广泛的使用**less**，但是您可能会有不同的观点。
3
-
分析和管理网络
--------------
ANALYZING AND MANAGING NETWORKS
![](media/451fdbee142e8cd4684d71b24707d050.jpg)
了解网络对任何一个有追求的黑客都是至关重要的。在许多情况下，你将通过网络攻击某些东西，而优秀的黑客需要知道怎样去和目标网络连接和交互。例如，您可能需要连接到视图中隐藏了Internet协议（IP）地址的计算机，或者你可能需要将目标的域名系统(DNS)查询重定向到您的系统，这些任务都相对比较简单，但是都需要一点Linux网络知识。本章节将向你展示一些在你的网络黑客冒险过程中进行分析和管理网络的基本的Linux工具。
### 使用IFCONFIG分析网络
**ifconfig**命令是检测活动网络接口并与之交互最基本的工具之一。你可以简单地在终端（terminal）输入ifconfig命令来查询你所在的网络活动连接状态。请自己尝试一下，你应该看到和清单3­1相似的输出。
kali \>ifconfig
➊eth0Linkencap:EthernetHWaddr 00:0c:29:ba:82:0f
➋inet addr:192.168.181.131 ➌Bcast:192.168.181.255 ➍Mask:255.255.255.0
­­snip­­
➎lo Linkencap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0
­­snip­­
➏wlan0 Link encap:EthernetHWaddr 00:c0:ca:3f:ee:02
*清单 3­1: 使用ifconfig获取网络信息*
正如你所看到的，ifconfig命令显示了有关系统上活动网络接口的一些有用信息。在输出的顶部是第一个侦测到的接口的名称
eth0
➊，它是Ethernet0的缩写（Linux从0开始计数而不是1）.这是第一个有线以太网连接接口。如果这里有更多的以太网接口，它们将使用同样的格式
(eth1, eth2 等等)。
接下来列出正在使用的网络类型 (Ethernet - 以太网)，然后是 HWaddr
和一个地址，这是在每个网络硬件上标记的全局唯一地址。在这种情况下，网络接口卡
network interface card (NIC), 通常指的是媒体访问控制 media access control (MAC)
地址。
第二行包含有关当前分配给它的IP地址信息的网络接口 (本例中为 192.168.181.131 ➋);
其次是 Bcast
➌，或者说广播地址，用于向子网上的所有IP发送信息的地址;最后是子网掩码 (Mask
➍)，用于确定IP地址的哪个部分连接到本地网络。你还可以在输出的这一部分中找到更多技术信息，但它超出了Linux网络基础章节的范围。
输出的下一部分显示另一个被称为 lo ➎的网络连接，它是环回地址（loopback
address）的缩写，并且有时称为localhost。这是个特殊的软件地址，可帮助你连接到自己的系统。未在系统上运行的软件和服务将无法被使用。你可以使用
lo
在你的系统测试某些内容，例如你自己的web服务器。本地主机通常用IP地址127.0.0.1表示。
第三个连接是接口 wlan0
➏。只有当你拥有无线接口或适配器时，才会出现这种情况。请注意，它还会显示该设备
(HWaddr)的MAC地址。
来自ifconfig的此信息使您可以连接并操作局域网 (LAN)
设置，这是黑客攻击的基本技能。
### 使用IWCONFIG检查无线网络设备 
如果你拥有一个无线网络适配器，你可以使用 **iwconfig**
命令来收集无线攻击的关键信息，例如适配器（网卡）的IP地址，MAC地址，它所处的模式等等。当你使用像
aircrack­ng 这样的无线攻击工具时，你可以从使用该命令来收集特别重要的信息开始。
使用终端(terminal)，让我们使用 **iwconfig**查看一些无线设备（详见清单 3­2）
kali \>iwconfig
wlan0 IEEE 802.11bg ESSID:off/any
Mode:Managed Access Point: Not Associated Tx­Power=20 dBm
­­snip­­
lo no wireless extensions
eth0 no wireless extensions
*清单 3­2: 使用 iwconfig来获取无线适配器（网卡）信息*
这里的输出告诉我们，唯一具有无线扩展的网络接口是wlan0，这正是我们所期望的。lo 和
eth0 都没有任何无线扩展。
对于 wlan0，我们了解了我们的设备能够支持的802.11 IEEE无线标准：b 和 g ，
两种早期的无线通信标准。现在大多数无线设备也包括 n ( n 是最新的标准)。
我们还从 iwconfig
中学习了无线扩展的模式(本例中为Mode:Manage，不同于monitor或promiscuous
mode)。在破解无线密码时，我们需要使用到混杂模式(promiscuous mode)。
接下来，我们将看到无线网卡（适配器）未连接（未关联）到接入点 (AP) ，并且其功率为
20 dBm，这表示信号强度。 我们将在第14章节 中花更多时间介绍这些信息。
### 更改你的网络信息
具备更改你的IP地址和其他网络信息是一项十分有用的技能，因为它将帮助你来回穿梭于作为可信设备出现时才允许访问的其他网络。例如，在拒绝服务攻击