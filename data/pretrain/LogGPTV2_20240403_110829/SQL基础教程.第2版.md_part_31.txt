介绍，感兴趣的读者请参考专栏“关系除法”（7-2节）。
● 234 第7章 集合运算
第7章 集合运算
7-2
联结（以列为单位对表进行联结）
● 联结（JOIN）就是将其他表中的列添加过来，进行“添加列”的集合运算。
学习重点
UNION是以行（纵向）为单位进行操作，而联结则是以列（横向）为单位
进行的。
● 联结大体上分为内联结和外联结两种。首先请大家牢牢掌握这两种联结的
使用方法。
● 请大家一定要使用标准SQL的语法格式来写联结运算，对于那些过时的
或者特定SQL中的写法，了解一下即可，不建议使用。
什么是联结
前一节我们学习了UNION和INTERSECT等集合运算，这些集合
运算的特征就是以行方向为单位进行操作。通俗地说，就是进行这些集合
运算时，会导致记录行数的增减。使用UNION会增加记录行数，而使用
注A INTERSECT或者EXCEPT会减少记录行数A。
根据表中数据的不同，也存在行
但是这些运算不会导致列数的改变。作为集合运算对象的表的前提就
数不发生变化的情况。
是列数要一致。因此，运算结果不会导致列的增减。
KEYWORD 本节将要学习的联结（JOIN）运算，简单来说，就是将其他表中的
●联结（JOIN）
列添加过来，进行“添加列”的运算（图7-5）。该操作通常用于无法从
一张表中获取期望数据（列）的情况。截至目前，本书中出现的示例基
本上都是从一张表中选取数据，但实际上，期望得到的数据往往会分散
在不同的表之中。使用联结就可以从多张表（3张以上的表也没关系）
中选取数据了。
图7-5 联结的图示
表A 表B 表AB
＋ ＝
7-2 联结（以列为单位对表进行联结） 235 ●
SQL的联结根据其用途可以分为很多种类，这里希望大家掌握的有
两种，内联结和外联结。接下来，我们就以这两种联结为中心进行学习。
内联结——
INNER JOIN
KEYWORD 首先我们来学习内联结（INNER JOIN），它是应用最广泛的联结运
●内联结（INNER JOIN）
算。大家现在可以暂时忽略“内”这个字，之后会给大家详细说明。
本例中我们会继续使用Product表和第6章创建的ShopProduct
表。下面我们再来回顾一下这两张表的内容。
表7-1 Product（商品）表
product_id product_name product_type sale_price purchase_price regist_date
（商品编号） （商品名称） （商品种类） （销售单价） （进货单价） （登记日期）
0001 T恤衫 衣服 1000 500 2009-09-20
0002 打孔器 办公用品 500 320 2009-09-11
0003 运动T恤 衣服 4000 2800
0004 菜刀 厨房用具 3000 2800 2009-09-20
0005 高压锅 厨房用具 6800 5000 2009-01-15
0006 叉子 厨房用具 500 2009-09-20
0007 擦菜板 厨房用具 880 790 2008-04-28
0008 圆珠笔 办公用品 100 2009-11-11
表7-2 ShopProduct（商店商品）表
shop_id shop_name product_id quantity
（商店编号）（商店名称） （商品编号） （数量）
000A 东京 0001 30
000A 东京 0002 50
000A 东京 0003 15
000B 名古屋 0002 30
000B 名古屋 0003 120
000B 名古屋 0004 20
000B 名古屋 0006 10
000B 名古屋 0007 40
000C 大阪 0003 20
000C 大阪 0004 50
● 236 第7章 集合运算
（续）
shop_id shop_name product_id quantity
（商店编号）（商店名称） （商品编号） （数量）
000C 大阪 0006 90
000C 大阪 0007 70
000D 福冈 0001 100
对这两张表包含的列进行整理后的结果如表7-3所示。
表7-3 两张表及其包含的列
Product ShopProduct
商品编号 ○ ○
商品名称 ○
商品种类 ○
销售单价 ○
进货单价 ○
登记日期 ○
商店编号 ○
商店名称 ○
数量 ○
如上表所示，两张表中的列可以分为如下两类。
两张表中都包含的列 → 商品编号
只存在于一张表内的列 → 商品编号之外的列
所谓联结运算，一言以蔽之，就是“以A中的列作为桥梁，将B中满
足同样条件的列汇集到同一结果之中”，具体过程如下所述。
从ShopProduct表中的数据我们能够知道，东京店（000A）销
售商品编号为0001、0002和0003的商品，但这些商品的商品名称
（product_name）和销售单价（sale_price）在ShopProduct
表中并不存在，这些信息都保存在Product表中。大阪店和名古屋店的
情况也是如此。
下面我们就试着从Product表中取出商品名称（product_name）
和销售单价（sale_price），并与ShopProduct表中的内容进行结合，
7-2 联结（以列为单位对表进行联结） 237 ●
所得到的结果如下所示。
执行结果
shop_id | shop_name | product_id | product_name | sale_price
----------+-----------+--------------+---------------+-------------
000A | 东京 | 0002 | 打孔器 | 500
000A | 东京 | 0003 | 运动T恤 | 4000
000A | 东京 | 0001 | T恤衫 | 1000
000B | 名古屋 | 0007 | 擦菜板 | 880
000B | 名古屋 | 0002 | 打孔器 | 500
000B | 名古屋 | 0003 | 运动T恤 | 4000
000B | 名古屋 | 0004 | 菜刀 | 3000
000B | 名古屋 | 0006 | 叉子 | 500
000C | 大阪 | 0007 | 擦菜板 | 880
000C | 大阪 | 0006 | 叉子 | 500
000C | 大阪 | 0003 | 运动T恤 | 4000
000C | 大阪 | 0004 | 菜刀 | 3000
000D | 福冈 | 0001 | T恤衫 | 1000
能够得到上述结果的SELECT语句如代码清单7-9所示。
代码清单7-9 将两张表进行内联结
SQL Server DB2 PostgreSQL MySQL
SELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, 
P.sale_price
FROM ShopProduct AS SP INNER JOIN Product AS P ①
ON SP.product_id = P.product_id;
表示下一行接续本行，只是由于版面所限而换行。
特定的SQL
在Oracle的FROM子句中不能使用AS（会发生错误）。因此，在Oracle中执行代码清
单7-9时，请将①的部分变为“FROM ShopProduct SP INNER JOIN Product P”。
关于内联结，请大家注意以下三点。
●内联结要点① ——FROM子句
第一点要注意的是，之前的FROM子句中只有一张表，而这次我们同
时使用了ShopProduct和Product两张表。
FROM ShopProduct AS SP INNER JOIN Product AS P
使用关键字INNER JOIN就可以将两张表联结在一起了。SP和P
分别是这两张表的别名，但别名并不是必需的。在SELECT子句中直
● 238 第7章 集合运算
接使用ShopProduct和product_id这样的表的原名也没有关
系，但由于表名太长会影响SQL 语句的可读性，因此还是希望大家能
注A 够习惯使用别名A。
在FROM子句中使用表的别名时，
像Product AS P这样使用AS是
法则7-3
标准SQL正式的语法。但是在
Oracle中使用AS会发生错误。因
进行联结时需要在FROM子句中使用多张表。
此，在Oracle中使用时，需要注意
不要在FROM子句中使用AS。
●内联结要点② —— ON子句
KEYWORD
第二点要注意的是ON后面的联结条件。
●ON子句
ON SP.product_id = P.product_id
KEYWORD 我们可以在ON之后指定两张表联结所使用的列（联结键），本例中
●联结键
使用的是商品编号（product_id）。也就是说，ON是专门用来指定联
结条件的，它能起到与WHERE相同的作用。需要指定多个键时，同样可
以使用AND、OR。在进行内联结时ON子句是必不可少的（如果没有ON
会发生错误），并且ON必须书写在FROM和WHERE之间。
法则7-4
进行内联结时必须使用ON子句，并且要书写在FROM和WHERE之间。
举个比较直观的例子，ON 就像是连接河流两岸城镇的桥梁一样
（图7-6）。
图7-6 使用ON进行两表加法运算（和集）的图示
ON SP.product_id = P.product_id
ShopProduct product
联结条件也可以使用“=”来记述。在语法上，还可以使用.”的形式来指定列。和使用一张表时不同，由
于多表联结时，某个列到底属于哪张表比较容易混乱，因此采用了这样的
防范措施。从语法上来说，只有那些同时存在于两张表中的列（这里是
product_id）必须使用这样的书写方式，其他的列像shop_id这样
直接书写列名也不会发生错误。但是就像前面说的那样，为了避免混乱，
还是希望大家能够在使用联结时按照“.”的格式来
书写SELECT子句中全部的列。
法则7-5
使用联结时SELECT子句中的列需要按照“.”的格式进行书写。
■内联结和WHERE子句结合使用
如果并不想了解所有商店的情况，例如只想知道东京店（000A）的
信息时，可以像之前学习的那样在WHERE子句中添加条件，这样我们就
可以从代码清单7-9中得到的全部商店的信息中选取出东京店的记录了。
代码清单7-10 内联结和WHERE子句结合使用
SQL Server DB2 PostgreSQL MySQL
SELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, 
P.sale_price
FROM ShopProduct AS SP INNER JOIN Product AS P ①
ON SP.product_id = P.product_id
WHERE SP.shop_id = '000A';
表示下一行接续本行，只是由于版面所限而换行。
特定的SQL
在Oracle中执行代码清单7-10时，请将①的部分变为“FROM ShopProduct
SP INNER JOIN Product P”（删掉FROM子句中的AS）。
● 240 第7章 集合运算
执行结果
shop_id | shop_name | product_id | product_name | sale_price
---------+-----------+------------+---------------+-----------
000A | 东京 | 0001 | T恤衫 | 1000
000A | 东京 | 0002 | 打孔器 | 500
000A | 东京 | 0003 | 运动T恤 | 4000
像这样使用联结运算将满足相同规则的表联结起来时，WHERE、
GROUP BY、HAVING、ORDER BY等工具都可以正常使用。我们可以
将联结之后的结果想象为新创建出来的一张表（表7-4），对这张表使用
WHERE子句等工具，这样理解起来就容易多了吧。
当然，这张“表”只在SELECT语句执行期间存在，SELECT语
句执行之后就会消失。如果希望继续使用这张“表”，还是将它创建成
视图吧。
表7-4 通过联结创建出的表（ProductJoinShopProduct）的图示
shop_id shop_name product_id product_name sale_price
（编号） 商品名称） （商品编号） （商品名称） （销售单价）
000A 东京 0001 T恤衫 1000
000A 东京 0002 打孔器 500
000A 东京 0003 运动T恤 4000
000B 名古屋 0002 打孔器 500
000B 名古屋 0003 运动T恤 4000
000B 名古屋 0004 菜刀 3000
000B 名古屋 0006 叉子 500
000B 名古屋 0007 擦菜板 880
000C 大阪 0003 运动T恤 4000
000C 大阪 0004 菜刀 3000
000C 大阪 0006 叉子 500
000C 大阪 0007 擦菜板 880
000D 福冈 0001 T恤衫 1000
外联结——
OUTER JOIN
KEYWORD 内联结之外比较重要的就是外联结（OUTER JOIN）了。我们再来
●外联结（OUTER JOIN）
回顾一下前面的例子。在前例中，我们将Product表和ShopProduct
7-2 联结（以列为单位对表进行联结） 241 ●
表进行内联结，从两张表中取出各个商店销售的商品信息。其中，实现“从
两张表中取出”的就是联结功能。
外联结也是通过ON子句的联结键将两张表进行联结，并从两张表中
同时选取相应的列的。基本的使用方法并没有什么不同，只是结果却有所
不同。事实胜于雄辩，还是让我们先把之前内联结的SELECT语句（代
码清单7-9）转换为外联结试试看吧。转换的结果请参考代码清单7-11。
代码清单7-11 将两张表进行外联结
SQL Server DB2 PostgreSQL MySQL
SELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, 
P.sale_price
FROM ShopProduct AS SP RIGHT OUTER JOIN Product AS P ①
ON SP.product_id = P.product_id;
表示下一行接续本行，只是由于版面所限而换行。
特定的SQL
在Oracle中执行代码清单7-11时，请将①的部分变为“FROM ShopProduct
SP RIGHT OUTER JOIN Product P”（删除掉FROM子句中的AS）。
执行结果
shop_id | shop_name | product_id | product_name | sale_price
---------+-----------+------------+---------------+-----------
000A | 东京 | 0002 | 打孔器 | 500
000A | 东京 | 0003 | 运动T恤 | 4000
000A | 东京 | 0001 | T恤衫 | 1000
000B | 名古屋 | 0006 | 叉子 | 500