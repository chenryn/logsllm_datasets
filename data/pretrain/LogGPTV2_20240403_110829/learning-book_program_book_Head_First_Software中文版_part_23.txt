SRP分析不会给你错误的结果吗？
答
的空自处也含方法的奉数，所以你可以写The
CarWash
：
有可能，银设果个参数让方法合理
washes[an]automobile itself、这个方法合理（带有Auto-
CarWash类中wash(）方法的Automobile，该参数就被传进
mobile参数），图此，它会留在CarWash类，
美的构造持，SRP分析可能误导你。但这就是为什么你除开
要学习SRP分析外，你总是需要应用大量你对系统的需识
和如识的原因。
目前位置
159
---
## Page 196
不要自我重复
你的设计应该遵循SRP但也不能违背DRY....
SRP的全部含义是关于责任（Responsibility），以及在你的系统中哪一对
象承担该做什么事。你希望你设计的每个对象都只聚焦到其单一责任上，
当该责任有些变化时，你将能准确地知道在你的代码的什么地方去进行修
改。最为重要的是你将避免所调的涟满效应（rippleefect），就是软件系
统的微小变更能引起整个代码的一连串的变更。
但有一个原则与SRP是如影随形，那就是DRY（Don’tRepeat Yourself）：
不自我重复原则
避免通过把共同事物抽取或分离DRY出
来，以及把它们置于同一地方来复制代码
不同的Date类不符合DRY
不同Date类（FirstDate,SecondDate,ThirdDate）中的每个类，在
ValidateEvent（方法中几乎都有相同的行为（Behavior）、这不仅打破了
这源快就全定成维
例如，像要改成让SecondDate允许SleepingOverEvent一样。这很快地转变为
维护恶梦。
SeconiDate
ThitdDate
FitstDete
这登方法的代码凡
9是相同的。
但是，这应信是单一的行为
需不是三个分离的功能件段。
DRY把系统中的每个片段的
信息和行为放在单一且合理
的地方。
160
第5章
---
## Page 197
足够好的设计
没有愚囊的问题
问：
在我看来，SRP很多地方像DRY，这两个原
因为类只做一件事情，使用SRP有助于保持
则都是关于单一个类做一件它应该做的事吗？
类较小，是吗？
答：
实际上，SRP经需会使你的类变大。由于你
功能救在单一的地方，比如说，类：SRP是确定一个类
不把功能性分散在很多类里
只做一件事，并且能做好一件事情，在设计优良的应
报多不热悉SRP的在序
员会把分散功能性到过多的类里，反之，你常需将很多
用系统中、一个类只做一件事情，而且做得好，而其
事情社在一个类中。
他的类不分担这些行为。
但使用SRP通常导致较少的类，并且一般地能使你的全
问：
部应用易于管理和维护。
让每个类只做一件事情是不是缩手缩脚？
答：
问：
不是，当你发现一个类做的事情可以是一件
我以前听过内聚性（Cohesion）一词，很多
相当大的事情时，你就可以理解这一点。：例如，在
特性与SRP一样，内聚性和SRP是一回事吗？
iSwoon中，Event类和它的子类只存储和管理一
实际上，内聚性是SRP的另外一个名字。如
事：特殊事件的细节，目前，那些细节只是事件的名
系你正在编写高度内聚的软件系统（HighlyCohesive
如时
间、目期、通如和警示、甚亚地址。然高，所有这些
Software)
，这时，你就在正确地应用SRP。在目前
额外的信息只仅美于一件事，就是描远事件，不同的
的设计中，Date做两件事情：
是创建事件。
Event子类都会部件事，而且它们只做那件事，所以它
二是储存在特定的约会发业的事件。当一个要具有内
聚性时，它只有一个主任务，所以，在Date类的例子
们是SRP的机好例子。
中，对一个类重点在储存事件，被弃创建事件的责任。
想知还更多的设计原则吗！
请参阅 Head Fitst Object
Head First
Anulytis &Oeniga)
Object-Oriented
AnalysisDesign
STOR
你已经接受了有关如何做好iSw0OW
的设计的提示，现在，
在你额到下
一页之前，看看你能否完成154页
补充一线，试着应用DRY和
SRP得到美正伟大的设计
目前位置
161
---
## Page 198
重构iSwoon的设计
值习答案
要求你看看目前的设计，标记出你在iSwoon的设计中，应用单一责任原则后
微的变更，使更新你的软件犹如微风拂面。
现每，用一个Date对象被
用于所有的约金，如1st.
2nd.3员20ch，它们全部
是Dase类物实例
由于Date类只知道官必师色含
多事件和事件的端号，Duie灵线
在通得SRP原则。
Date
dateNumber
：
int
Date只常如续号是多
addEvent()
:boolean
伴（这含使用Ene类的
+soOnDate()
:6oolean
连辑）和告的金
当常加一个事件时
Dele误用事件的
DaeSaO方法著有Date号，以
便委是需事件谁元许。因此，让理事件
的工行给Ewmt类处理一
—好的
SRP,
既然Date和迷它自己的练号
所有家拙的继承统不再常要了
不为书FiDate，SecdDet
样的类了.
validateEvent(event: Event)
,b0oleAn
162
第5章
---
## Page 199
足够好的设计
每个事件记录它被
明个0te元许
的一个属性，而不是是定义的
现在，事件的是送是它的具中
一部分。
Oe然务
事件关
Event
events
allowedDates:int]
0
*
description:Stri
Event（allowedDates;int],description:Strins)
+
dateSupported(dateNo:int):boolean
送是一个称进荷，当创建事件时
诚调用，任何事件实例都需要知送
这使Dates发明该事件是否被元
两件事情：付么样Date元许和它
许，合著有Dte端号，并且处理
跟约金一样，成在，
不同事件
的基述意什名,
自身的事件证线（更药合SRP
实例的体何编号可以在执行其
被定义并且谊增加
对时间的每个类型不需要很多的
See
子类：
一个是可以做一个任务。
晚在，对怎个事件类型
件类型只是Ent类的一个实例。
第个事
me
"GoTeRest
setName()
Sttins
目前位置
163
---
## Page 200
碰头会议
重构之后的碰头会议…
现在是第三调的中间，情况
如何？
Bob：全都完成了，现在，我们还真有了一段灵活的代
码，它能支持任何数量的不同类型的日期和事件。
Laura：太好了！看起来多一份付出，就多一份收获，
我们有很多很多新的事件需要添加
Bob：哦，是的。添加新的事件变得很容易。现在我
们只需要写一行或二行代码，新的事件就在新的系统之
中。我们原本对每个事件预备了两到五天，现在，最多
只需要一天时间。
Mark：你们别开玩笑。我已经添加了所有新的事件，
并且我相信我还能进一步完善它们。
Laura：等等，只一会儿。因为现在软件实际上比“够
好”还要好。但不要因为我们容易做变更，就开始做太
多的变更。
Mark：下一步是什么？
没有愚囊的问题
Bob：好的，现在我们已经完成了重构（refactoring）
看起来我们有时间，集中精力完成Starbuzz的CEO想要
问：
当Laura说，代码已经够好
的Demo.......
了，那是什么意思？
答：
问得好！我们在第七章和第
八章中将计论限多测试方面的内容，以
及如何对款件有信心的问题，并且证明
你开发的较件能做到它应该做的事情。
164
---
## Page 201
足够好的设计
任务15
这里是大白板上记
录的任务
增加预订车辆事
件。
任务10
创建“预订酒店
2
事件类。
任务7
创建色含地址和
订单的送鲜花事
件。
谢谢你们新的设付，这里添加一个
2
事伴只是增加一行或两行新的代础
完成所有的任务只要一天的时间
而不是过去的七天，
工作量完成情况超势图
1
45
43
用新的设计，工作量
1
宠成情况图到可控制
1制余的
的状况
32
工作量
20
1
1
1
0
5
10
5
剩余的工作天数
良好的设计有助于你更有
生产力，并且使你的软件
系统更灵活。
目前位置
165
---
## Page 202
计划外的工作
计划外的任务仍然是任务
Starbuzz的CEO需要的Demo是一项计划外的任务，但你要像处理大白板上
的其他任务一样来对待它。你估计完成该项任务需要的时间，把它放在白
板上“正在进行之中”的区域，然后开始去工作。
上
虽然这是一项计则外的任务
但一切邮联系到使用情节。
任务20
增加“预订
标题：
过奶件送行单到
的事件科通
指述
用户增加一个到
Stasbarr,
Starbuzz喝咖啡的事件到
5
任务统需有基述
和体计位
分给某个人
的多件社
任何对计到外的佳务的处理
都要保其他任务一样
HStabaxx.
5
使大白板上计划外的任务成为有计划的
不管任务是如何产
计划外的任务以不同的方式产生，但一且该项任务出现在你
的白板上，对该项任务的处理就要像计划内的任务一样。实
生的。一旦该任务
际上，一且你分配了任务，并给出了完成任务的时间估计，
出现在大白板上，
该项任务就再也不是计划外的了，该项任务就成为需要完成
的另外一项任务了，与你项目中的其他任务一样。
你就要分配该项任
那么，如何从头到尾地处理计划外的任务：就像其他任务一
务，估计完成该项
样。你估计完成它所需要的时间，将其移到白板中的“正在
任务的时间，逐步
进行中”的区域，开始实施直至完成。完成该项任务后，将
实施直到完成。
其移至“已完成”区域，再继续其他工作。
166
第5章
---
## Page 203
足够好的设计
你的任务一部分是Demo本身
除开要花时间准备demo外，你还必须思考向客户演示demo所需
要的时间。如果你和你的主要web程序员一起花了一天的时间到
Starbuzz，演示iSwoon，这些时间就要包含在你的时间估计之中。
你的估计应该是完整的
当你估计完成任务所需要的时间时，你应该得到完成该项任务需要
的总的时间一—有时不仅仅是完成代码的时间。如果你要写demo的
代码或会见对项目有影响的人，你的时间估计也应该包含这些活动。
任务20
增加“预订咖啡
事件，并通过电
子邮件传送订单
需要四天异道，第外一天做演示和
处理后续的问题：
给Stanbuxx.
很好…你能够4期ai给我最小的系统爱求吗？
它也能同时工作在Safari和Firefox上吗？我意立
刻告诉这一消惠给我的客户。
Sta:6xCEO.魏在是
Son的依伴
目前位置
167