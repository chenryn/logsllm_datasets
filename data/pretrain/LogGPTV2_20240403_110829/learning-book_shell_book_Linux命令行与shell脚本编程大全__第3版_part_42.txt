但是，在基于数字的函数中就不行了，例如我们的数值测试条件。最后一行就说明我们不能在
test命令中使用浮点值。
12.4.2字符串比较
条件测试还允许比较字符申值。比较字符串比较烦琐，你马上就会看到。表12-2列出了可用
的字符串比较功能。
表12-2字符串比较测试
比较
描
8tr1 = 8tr2
检查atr1是否和atr2相[同
str1 1= str2
检查str1是否和stcr2不同
str1  atr2
检查str1是否比str2大
-n str1
检查atr1的长度是否非0
-2 atr1
检查atr1的长度是否为0
下面几节将会详细介绍不同的字符串比较功能。
1.字符串相等性
字符串的相等和不等条件不言自明，很容易看出两个字符申值是否相同。
S cat test7.sh
#1/bin/bash
teating string equality
testuser=rlch
[x98nq891s = g3S0$ 1 11
then
echo *Helcone Stestusex*
心
S./test7.sh
Welcone rich
字符串不等条件也可以判断两个字符串是否有相同的值。
S cat test8.sh
#1/bin/bash
 testing string equality
teatuser=baduser
1f [ $USER 1= Stestuser ]
Chen
echo *Thlα is not $testuser *
e1se
echo *Helcone Stestusex*
---
## Page 258
12.4test 命令
243
f1
Thiα ia not baduser
S./test8.sh
记住，在比较字符串的相等性时，比较测试会将所有的标点和大小写情况都考虑在内。
2.字符串顺序
要测试一个字符串是否比另一个字符串大就是麻烦的开始。当要开始使用测试条件的大于或
小于功能时，就会出现两个经常困扰shel程序员的问题：
口大于号和小于号必须转义，否则shell会把它们当作重定向符号，把字符串值当作文件
名：
口大于和小于顺序和sort命令所采用的不同。
在编写脚本时，第一条可能会导致一个不易察觉的严重问题。下面的例子展示了shell脚本编
程初学者时常碰到的问题。
S cat badtest.sh
 nia-using string conparisona
#1/bin/bash
va12=hockey
vall=basebal1
f [ $val1 > $va12 ]
then
echo *$val1 ia greater than $va12*
else
echo *$vall ia less than $val2*
basebal1 1a gzeater than hockey
S./badtest.sh
$ 1s -1 hockey
=,===M=
1r1ch
rich
Aexo 80=6t 0E deg 0
这个脚本中只用了大于号，没有出现错误，但结果是错的。脚本把大于号解释成了输出重定
向（参见第15章）。因此，它创建了一个名为hockey的文件。由于重定向的顺利完成，test命令
返回了退出状态码0，i语句便以为所有命令都成功结束了。
要解决这个问题，就需要正确转义大于号。
12
#1/bin/bash
S cat test9.sh
# mia-using string conparisona
va12=hockey
vall=basebal1
1f [ $va11 \> $val2 ]
---
## Page 259
244
第12章使用结构化命令
then
echo *$val1 is greater than Sva12′
e1se
echo *$vall 1α less than Sva12*
 1
$
S./test9.sh
现在的答案已经符合预期的了。
第二个问题更细微，除非你经常处理大小写字母，否则几乎遇不到。sort命令处理大写字
母的方法刚好跟test命令相反。让我们在脚本中测试一下这个特性。
S cat test9b.sh
1/bin/baah
 testing string sort order
va11=Teating
va12=teating
1f [ $va11 \> $va12 1
+
Chen
echo *$vall 1α greater than $Sva12 *
e1se
f 1
S./teet9b.ah
Teating ia less than testing
S sort testfile
teating
Testing
在比较测试中，大写字母被认为是小于小写字母的。但sort命令恰好相反。当你将同样的
字符串放进文件中并用sort命令排序时，小写字母会先出现。这是由各个命令使用的排序技术
不同造成的。
比较测试中使用的是标准的ASCII顺序。根据每个字符的ASCII数值来决定排序结果。sort
命令使用的是系统的本地化语言设置中定义的排序顺序。对于英语，本地化设置指定了在排序顺
序中小写字母出现在大写字母前。
说明七est命令和测试表达式使用标准的数学比较符号来表示字符事比较，而用文本代码杂表
示数值比较。这个细微的特性被很多程序员理解反了。如果你对数值使用了数学运算符
号，shell会将它们当成宇符事值，可能无法得到正确的结果。
---
## Page 260
12.4test命令
245
3.字符串大小
-n和-z可以检查一个变量是否含有数据。
S cat test10.sh
testing string length
#1 /bin/ba.sh.
va11=testing
va1.2= * *
if [ -n $val1 ]
then
echo *The string‘$val1*is not empty*
else
echo *The string '$val1* is enpty*
fi
if [ -z $val2 ]
then
echo *The string *$val2* is enpty*
else
fi
#
if [ -z $val3 ]
then
echo *The string ‘$val3* is enpty*
else
echo *The string '$val3* is not enpty*
fi
$
S./test10.sh
The string *testing' is not emgty
The string
 ·* is enpty
The string *" is enpty
这个例子创建了两个字符串变量。va11变量包含了一个字符串，va12变量包含的是一个空
字符串。后续的比较如下：
if [ -n $val1 ]
判断val1变量是否长度非0，而它的长度正好非0，所以then部分被执行了。
if [ -z $var2 ]
判断val2变量是否长度为0，而它正好长度为0，所以then部分被执行了。
12
if [ -z $val3 ]
判断va13变量是否长度为0。这个变量并未在shell脚本中定义过，所以它的字符串长度仍然
为0，尽管它未被定义过。
---
## Page 261
246
第12章使用结构化命令
窍门空的和未初始化的变量会对shell脚本测试造成灾难性的影响。如果不是很确定一个变量的
内容，最好在将其用于数值或字符串比较之前先通过-n或-2杂测试一下变量是否含有值。
12.4.3文件比较
最后一类比较测试很有可能是shel编程中最为强大、也是用得最多的比较形式。它允许你测
试Linux文件系统上文件和目录的状态。表12-3列出了这些比较。
表12-3test命令的文件比较功能
比较
描述
-d file
检查Ci1e是否存在并是个目录
=e [i1e
检查rile是否存在
-f file
检查file是否存在并是一个文件
- fi1e
检查i1e是否存在并可读
-8 fi1e
检查rile是否存在并非空
 file
检查Ci1e是否存在并可写
-x f11e
检查rile是否存在并可执行
-0 file
检查file是否存在并属当前用户所有
-G fi1e
检查ri1e是否存在并且默认组与当前用户相同
[ilel -nt file2
检查ile1是否比file2新
filel -ot file2
检查Ci1e1是否比r11e2旧
这些测试条件使你能够在shell脚本中检查文件系统中的文件。它们经常出现在需要进行文件
访问的脚本中。鉴于其使用广泛，我们来逐个看看。
1.检查目录
-d测试会检查指定的目录是否存在于系统中。如果你打算将文件写人目录或是准备切换到某
个目录中，先进行测试总是件好事情。
S cat testll.sh
 Look before you leap
#1/bin/bash
Jump_dlrectozy=/home/axthux
#
1f [ -d $jump_Glrectory ]
Chen
s1sTxe .xotextp Axotaextpdum[s o。 ouoe
cd $junp_directory
e1ae
18
-a8Txe ou soop Axo1oex1p Axo1oex1pdams q。 oqoe
---
## Page 262
12.4test命令
247
S./test11.sh
示例代码中使用了-a测试条件来检查jump_directory变量中的目录是否存在：若存在，就
使用ca命令切换到该目录并列出目录中的内容；若不存在，脚本就输出一条警告信息，然后退出。
2.检查对象是否存在
-e比较允许你的脚本代码在使用文件或目录前先检查它们是否存在。
S cat testl2.sh
# Check if elther a directory or file exiata
#1/bin/ba.sh
locat Ion=$HOME
file_nane=*sent inel*
if[-e $1ocation 1
then #Directory Goes exiat
echo *OK on the Slocation directory.*
echo *Nou checking on the file, $rile_name.*
1f I -e $1ocatlon/$fi1e_name 1
then #File does exist
echo *OK on the filename*
echo *Updating Current Date... *
date >> $location/$tlle_name
else #File does not exiat
echo *File does not exiat*
echo *Nothing to update*
f1
else
#Directory does not exiat
echo *The $location directory Goes not exiat. *
echo *Nothing to update*
f1
OK on the /home/Chziatine dlrectozy -
S./test12.sh
Nov checking on the file, sentinel.
File does not exist
Nothing to update
2
S touch sentinel
S./test12.sh
OK on the /home/ChxiatLne dLrectozy -
Nov checking on the file, sentinel.
OK on the filenane
Updating Current Date.-.
---
## Page 263
248
第12章使用结构化命令
第一次检查用-e比较来判断用户是否有SHOME目录。如果有，接下来的-e比较会检查
sentinel文件是否存在于SHOME目录中。如果不存在，shell脚本就会提示该文件不存在，不需要
进行更新。
为确保更新操作能够正常进行，我们创建了sentinel文件，然后重新运行这个shell脚本。这一
次在进行条件测试时，SHOME和sentinel文件都存在，因此当前日期和时间就被追加到了文件中。
3.检查文件
-e比较可用于文件和目录。要确定指定对象为文件，必须用-比较。
S cat test13.sh
 Check if either a directory or file exists
1/bin/bash
item_name=$HOME
echo *The item being checkedl1 $iten_name*
echo
echo
if [ -e $item_nane ]