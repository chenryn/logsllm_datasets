有目标的酝酿，通常会发展演化成为成熟的信息化项目。该项目成
为Stamen设计公司的顾问BenCerveny所谓的"信息化"的典型例子：
世界上的数据正一点点地移动到互联网，并与某个开源工具链和方
法论相互接触和碰撞。
akland
crimespotting
图11-1：StamenDesign设计公司的一个研究型项目—奥克兰市
的Crimespoting项目标志
这个故事包含三个部分。首先，我们获得了奥克兰警察局的核心数
据，将其抽取出来转化为更适合于"切片混合"操作的某种格式。其
次，我们创建了一个动态网站，对数据进行公开，以便本地的居民
可以找到并使用这些数据。最后，我们通过观察这个网站如何发挥
作用，回顾最并始的设想，并答复公众的反馈意见。
背景
1510
---
## Page 1512
将现代的发布在线数据的方式应用于犯罪举报并不是什么新主意。
当前对犯罪的关注可以追溯到记者/开发人员AdrianHolovaty在2005
年研究的ChicagoCrime项目（htp：//chicagocrime.org)。ChicagoCrime
项目是GMap混搭的一个早期例子，它利用来自其他站点的代码和
数据打造了一个卓越的网站。在这个案例中，尚未文档化的GMap
API(http：//code.google.com/apis/maps/）被看做发布芝加哥警察局的
犯罪报告信息的基础组件。该警察局本身的网站是由文本驱动的，
Holovaty在夜间收集报告数据，把它们发布到动态的、可缩放或"滑
动”地图上。该服务作为早期G公司2005年在线映射的最佳实践，别
出机，是个非常绝妙的方法技巧。GMap从原来的局限于只是画
图和展示静态图片，转换成为可以展示不断滚动、可以无限回应的
地理数据平台。
ChicagoCrime项目不是唯一的。几乎是在同一期间，开发者Paul
Rademacher开发了HousingMaps(http：//housingmaps.com)项目，它类
似于ChicagoCrime项目，是公寓出租数据和可视化浏览的组合体。
在其之前一年，MichaelFrumin和JonahPerreti在NewYork艺术基金
会Eyebeam创建了FundRace项目(htp：//fundrace.org)，实现了2004年
总统竞选政治捐款数据的可视化。RichGibson、SchuylerErle和Jo
Walsh合著出版的《MappingHacks》（O'Reilly出版社）一书，是一
本关于新的基于Web制图的技术指南。针对这些事件，开展了很多
在线活动，因为在地理信息上下文中，新的信息化数据集正在大刀
阔答地修改并重新发布。这一切所产生的更广泛的影响改变了人们
对地图的期望：人们现在期望有新的、深层次的多规模交互方式；
作家StevenJohnson称之为“长距离变焦”（TeLongZoom)，一种包含游
戏、电影和其他媒体的新视野。
GMap对于Web地图领域的影响是不可估量的，其中有两个原因。首
先，GMap做出了采用了图片拼接的方法来发布地图的决策。这使
得它可以不用重新渲染全部图片，减少了对服务器的压力，因而能
够采用视觉上更复杂的制图技术。其他地图需要效果非常显著，才
有资格与其竞争。其次，这个决策也意味着最后的可视化效果将变
成由用户端的浏览器通过动态组合的方式完成。最近，JesseJames
Garrett提出了一种关于浏览器的新兴技术——Ajax（异步JavaScript
和XML），这一术语后来变得尤为重要。Aiax技术说明了现代的浏览
器已经有足够高的质量，且当它与标准足够兼容之后，人们并始重
新开始对动态HTML和JavaScript感兴趣。采用这种方式后，原始数
据的传输从制图展示中独立了出来，在一个单独的赖道中完成。而
1511
---
## Page 1513
在此之前，其采用的方式是在服务器端完成地图的生成、地址查找
和确定方位等处理之后，将所有的数据打包成一张图片并将整张图
片作为返回结果展示给Web访问者。
把地图分块、接口和数据组装放在客户端完成，这一点使得小开放
团队创建非常复杂的基于地理的浏览应用变成可能，这也正是在我
们和Web四年交互过程中所看到的。
所有这一切构成了从奥克兰现有的、获得商业授权的犯罪地图产品
CrimeWatch中抽取可管理的、可重用的数据的努力的主要背景。它
最初是由简单的技术好奇心所驱动，以及圣诞节的很多空闲时间无
意中所带来的“背后一击”。
解决棘手问题
奥克兰的CrimeWatch是一个提供犯罪报告信息的应用，以图片的形
式提供犯罪报告相关的原始制图和卡通式的图标。CrimeWatch为便
于数据展示进行了专门优化，而且侧重于预测用户需求而不是提供
原始材料。应用的用户体验是通过"向导小工具"Wzard)来通知的，
它是一个用户界面，提供给用户一系列的对话框，它们生成了一系
列的步骤，通过特定的序列执行任务。CrimeWatch应用的必要步骤
如下：
1.事件：选择事件的类型（一种或者多种）；
2.地点：在地址附近搜索，在可管理的范围内：或者是某个特征附
近，如学校或者公园；
3.时间：在多长的时间范围内进行搜索。
CrimeWatch通过静态图片来响应，该图片以图表的形式显示各个报
告。
点击这些图标可以获取更多的信息。第一次激发了对CrimeWatch的
兴趣是在我开始思考某种方式用来颠倒服务端完成归并过程；从静
态的图片并始，通过附加的地理信息来抽取犯罪报告信息：使用和
那些其他地理软件系统兼容的经纬度值，通常被称为地理定位
(golocation)。这种简单的识别问题很容易理解，而且在视觉特征抽
取方面已经存在着很好的技术。
1512
---
## Page 1514
首先，我们需要获取一张图片进行处理。这过程实际上比看起来要
复杂得多，我们必须跳过一系列的"钩子”（hok)，“说服"服务器生成
一张犯罪报告图片。CrimeWatch在服务器端保存了会话状态，因此
有必要通过一个假的虚拟用户来模拟一套完整的向导互动模式：通
过表单接受服务条款，然后通过交互向导继续完成各个步骤，在这
些过程中保存HTTPCookies和令牌（Tken)，然后对非标准的HTTP重
定向进行正确地响应。重构这些步骤过程，从而生成有用的犯罪报
告图像是该项目面临的第一个难题。幸运的是，客户端的HTTP代
理软件Charles(http：//charlesproxy.com/）和Mozilla插件
LiveHTTPHeaders(http：/livehttpheaders.mozdev.org/）简化了这种重
构过程。解释中间HTML页面本身是通过使用网页刮屏(pge
scraping)库的方法，如LeonardRichardson的BeautifulSoup库
(htp://www.crummy.com/software/BeautifulSoup/)。BeautifulSoup/库
是为了使通常看到的HTML"标签”变得有意义，纠正了某些通用的
问题如不正确的嵌入式标签或者部分标记，而且它允许我们读取
HTML表格和JavaScript脚本命令，这些构成了一个完整的客户/服务
器会。
可以使用简单的Unix命令行工具如Shell脚本和网页访问工具
cURL(http：//curl.netmirror.org/）来模拟第1版的刮屏过程。其关键
是仔细检查浏览器和服务器之间的HTTP连接，寻找暴露出来的信
息可以帮助重新构建交互。查看URL中包含的CGI变量和Post方式请
求体是重构的第一步，它可以准确地表示接受了使用条件后的初始
的会话连接。基于会话的应用如CrimeWatch大量地使用了Cookie来
保存客户端的状态，因此，利用HTTP库把Cookie打成Jar包是必需
的。CrimeWatch还大量依赖于客户端的JavaScript框架，而不仅仅是
简单的表单提交；此外，它还使用了额外的状态变量，这样中间响
应页面必须通过HTMIL解析器和正则表达式才能够搜索隐藏在页面
脚本中的详细信息。最后，由于很多这种老一代的Web应用是在跨
浏览器的动态HTML被开发者普遍应用之前出现的，因此“欺骗”
User-Agent头数据，假装是IE浏览器或者Mozilla火狐浏览器绕过
User-Agent头数据通常是必要的：其他浏览器会显示不兼容报警信
息，不返回任何数据。
在这个过程结束时，只剩下中等大小的图片位图，期望能够包含可
识别的犯罪报告图标。通过第一轮抽取每个图标的像素位置很简
单，但是过程很慢；对于图像中的每个可能的位置，把它的像素颜
色和已知的图标做比较，一旦差异小于某个给定的阈值，就显示正
的匹配度值。因为我们是在噪音相对较少的后台来处理预先指定的
1513
---
## Page 1515
图标，这实际上是一种完全的"防弹"方法。CrimeWatch中使用的犯
罪图标是独一无二的，而且即使部分被其他图标或者图片特征所屏
蔽，但是还是可以很容易识别出来。我采用的检测这些图片的工具
是NumPy(http：//numpy.scipy.org/），它是一个久经考验、功能强大
的Python数组操作库。图11-2和图11-3显示了CrimeWatch的部分样本
图片，突出显示了程序可识别的图标。
MINIPARK
94609
PH
TEPARK
980
94612
田
图
11-2：CrimeWatch的样本数据显示了盗窃、毒品、抢劫、盗窃
车辆等犯罪活动（见彩图29）
1514
---
## Page 1516
MINIPARK
94609
ARKE
Hd
EGRA
TEPARK
086
图
11-3：CrimeWatch相同的样本数据，突出显示了程序可识别的
图标（见彩图30）
遗憾的是，蛮力方法在普通的CPU上很慢，但是通过对所需处理的
各种地图的一些简单分析，也许可以对其速度进行一些优化。例
如，很多犯罪报告图标有很显著的特征颜色：通常货币形状的绿色
袋子表示盗窃，蓝色拳击手套表示普通伤害。一种简单的预处理步
骤是通过代价较低的图片扫描来找到与其中一个期望的颜色接近的
像素的位置，这种方式可以极大地降低代价高的全图标匹配的位置
数目。图11-4用白色正好显示了图11-2的红色部分，它表示严重伤
害可能发生的场所，可以看到有红色的拳击手套。
1515
---
## Page 1517
图11-4：CrimeWatch的相同的样本图片，红色的部分用白色显示
是为了更清晰地突出红色的拳击手套图标（表示严重伤害）
一个较为复杂的预处理步骤是通过一系列的扫描来搜索临近的几种
特征图标颜色。例如，盗窃是通过黑白相间的破碎的玻璃小图标来
显示的。一张经典的地图上包含很多的黑色和白色，但只有图标和
文本会黑白相间。我们会找到所有和这两种颜色很相近的像素，并
把高代价的搜索区域降低限制为只包含有限的候选像素。
每次犯罪报告的地理定位过程都需要根据在渲染地图中检测到的像
素位置来确定位置。为了实现这一点，对于给定的一组输入，
CrimeWatch总是返回可预测大小和位置的地图是有帮助的。例如，3
号警务服务区域（PliceServiceArea）的地图需要总是覆盖相同的区
域，而不用考虑当时实际的犯罪报告是集中于区域的某个角落还是
扩散到所有地方。CrimeWatch提供的地图包含的底层地理特征如街
道或海岸线，总是在相同的地方。对于每一种可能的地理布局方
式，需要人工定位三个大间距的已知参照点。道路交叉口对于这点
1516