# Bug report
**What is the current behavior?**  
After upgrade to Webpack@5, in development mode with HMR, module resolution
fails for indirect dependencies via webpack-bundled libraries.
**If the current behavior is a bug, please provide the steps to reproduce.**  
Here is the repo with minimal reproduction of the issue:
https://github.com/birdofpreyru/webpack5-bug1
  1. Clone it, and build the mock library
        $ git clone https://github.com/birdofpreyru/webpack5-bug1.git
    $ cd webpack5-bug1/lib
    $ npm install
    $ npm run build
    $ npm pack
The mock library just imports `lodash` library and prints its version (can be
any other import and use of NPM module - that's does not matter).
  2. Go to the host code, and run it (the bundle is served using `HtmlWebpackPlugin` and `webpack-dev-server`), using the mock library from (1):
        $ cd ../host
    $ npm install
    $ npm install ../lib/lib-1.0.0.tgz
    $ npm start
  3. In browser go to `localhost:8080`, and look into the console:
        Uncaught TypeError: Cannot read property 'call' of undefined
    at __webpack_require__ (main.js:2)
    at eval (index.js:1)
    at Object../index.js (main.js:2)
    at __nested_webpack_require_562843__ (main.js:2)
    at main.js:2
    at factory (main.js:2)
    at Object.823 (main.js:2)
    at __webpack_require__ (main.js:2)
    at main.js:2
    at main.js:2
it fails inside the webpack require function during request for `lodash` at
the line
        __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
It looks like that `__webpack_modules__` is the map of modules which are
direct dependencies of `host` code, while `lodash` module lives inside
`__webpack_modules__` map bundled into the mock library. The same error
happens if `lodash` is declared as external dependency of the mock library.
At the same time it all works fine if everything is bundled for production and
served without dev server.
**What is the expected behavior?**  
Module resolution must not fail. In this specific example `lodash` should be
resolved, and you should see in the console debug messages printed by the
library and by the host code:
    LODASH: 4.17.20
    Hello World!
**Other relevant information:**  
webpack version: 5.1.3  
Node.js version: 12.19.0  
Operating System: Ubuntu 20.04.1  
Additional tools: none