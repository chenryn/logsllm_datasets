User: How to use Docker Compose to implement the deployment and management of multi-container applications? Please give actual example and configuration file.
Assistant: Docker Compose is a tool for defining and running multi-container Docker applications. It simplifies the deployment and management of multi-container applications by allowing users to configure the containers in the application through a YAML file. The following is a simple Docker Compose example with two containers: an Nginx container that deploys the web application and a PHP container that runs the application. Docker Compose configuration file (docker-compose.yml): ``` version: '3' services: web: image: nginx:latest ports: - "8080:80" volumes: - ./nginx.conf:/etc/nginx /nginx.conf depends_on: - php php: image: php:7-fpm volumes: - ./app:/app ``` In this example, we define two containers: an Nginx container named "web" and a PHP container called "php". Each service has specific configuration options. Here is a description of each part: - version defines the version of the Docker Compose configuration file used. - services defines configuration options for each container. In this example, we define two services. - web service: - image defines the Nginx image version used. - ports define the port mapping between the container and the host. - volumes defines the mapping of the file volume, so that the container can access the Nginx configuration file on the host. - depends_on allows defining dependencies between containers, ensuring that the PHP container starts before the web container. - php service: - image defines the PHP image version used. - volumes defines the file volume mapping of the application code, so that the PHP container can access the application code. Now, start the application with the following command: ``` docker-compose up ``` This starts the Nginx and PHP containers and connects them together. You can use the following command to start a container in the background: ``` docker-compose up -d ``` The container started in this way will run in the background. Containers can be stopped using the following command: ``` docker-compose down ``` This stops and removes all containers and associated networks. Using Docker Compose can make the deployment and management of multi-container applications very convenient, and different configuration files can be formulated according to different application scenarios.