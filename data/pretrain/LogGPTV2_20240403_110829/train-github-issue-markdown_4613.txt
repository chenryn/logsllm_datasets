**Do you want to request a _feature_ or report a _bug_?**
Feature / use case
**What is the current behavior?**
It seems currently there is no way to get the order of children from the
children themselves with context.
**What is the expected behavior?**
I've run into this now in three use cases when building a style system:
Breadcrumbs, Segmented views, and Text rhythm/spacing.
Example 1, breadcrumbs. You want to show an arrow on all but the last
breadcrumb, but they may be deeply nested:
    let BreadcrumbOrder = createContext({ index: -1, total: -1 })
    let Button = props => {
      let order = useContext(BreadcrumbOrder)
      return  total ? '1px solid red' : 'none' }} {...props} />
    }
    let MyView = () => {
      return (
      )
    }
Where MyView should provide the ordering so that the sub-views can access
`total` and `index` and properly style.
The other use cases are basically identical, but for different patterns. One
is for joining together buttons that are in a row in the interface
(Segmented), and the other is for collapsing margins when you have text
elements in a vertical column.
Really this ticket encompasses more of a question or request for documentation
clarity here. I'm not sure how it is not pre-concurrent, but I'm assuming
mount-order will be non-deterministic if not now then shortly. Is there any
reference to a pattern that works for this use case?
Namely: how children can access their mount order / total children. I can do
it now useReducer/context, but I've seen it mount in a weird order at least
once and think it was due to a suspense type thing, and would be curious a
better practice for this.