5
7
9
Number of NS-NR pairs
Figure 13. One greedy receiver competes
with a varying number of NS-NR pairs.
experience the same loss rates. As shown in Fig. 13, the
impact of greedy receiver increases with the loss rate,
because a higher loss rate means more opportunities for
the greedy receiver to fake ACKs. Moreover, the ab-
solute diﬀerence in the goodput of greedy and normal
receivers decreases as the number of normal receivers
increases due to a decreasing per-ﬂow goodput. Inter-
estingly, their relative diﬀerence in goodput remains
high for all the numbers of receivers considered.
6 Evaluation in Testbed
Next we evaluate the performance impact of greedy
receivers in a testbed consisting of 4 DELL Dimensions
1100 PCs (2.66 GHz Intel Celeron D Processor 330 with
512 MB of memory). They form two senders and two
receivers. The locations of the nodes are ﬁxed, on the
same ﬂoor of an oﬃce building. Each node runs Fedora
Core 4 Linux, and is equipped with 802.11 a/b/g Net-
Gear WAG511 using MadWiFi. In our experiment, we
enable RTS/CTS, and use a ﬁxed 6 Mbps as MAC-layer
data rate. 802.11a is used in our testbed experiments to
avoid interference with campus 802.11b wireless LAN
in the building.
Our testbed evaluation focuses on misbehavior 1,
since MadWiFi currently does not allow us to imple-
ment the other two misbehaviors. Given the trend of
moving more functionalities to software, this is not an
inherent constraint. We implement misbehavior 1 as
follows. Because the current MadWiFi does not al-
low us to directly modify NAV in CTS frames, we
get around this problem by implementing RTS inﬂa-
tion on one of the senders. We increase RTS NAV
to 32700µs. This automatically triggers inﬂated NAV
in CTS frames. (The inﬂated CTS NAV is 32655µs.)
Since we want to study the impact of a greedy receiver,
we have the sender transmit at lowest power so that its
RTS with inﬂated NAV is not overheard by the other
sender and receiver. Only the CTS frames from the
greedy receiver is heard by all the other nodes to eﬀec-
tively create greedy receiver misbehavior.
Table 3 compares the goodput under 0, 1, or 2
greedy receivers. The reported goodput is median
over 5 runs, where each run lasts 2 minutes. As
it shows, without greedy receiver, both receivers get
similar goodput. When only one receiver is greedy,
the greedy receiver gets virtually all the bandwidth
and starves the normal receiver. When both receivers
are greedy, the one transmitting earlier dominates the
medium and starves the other receiver. These results
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:48:46 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007Transport
no GR (Mbps)
N R1
N R2
2.43
3.06
2.31
2.36
2 GRs (Mbps)
GR1
GR2
UDP
4.64
TCP
4.37
Table 3. Testbed evaluation of NAV inﬂation.
1 GR (Mbps)
N R
0.04
0.01
GR
4.65
4.43
0
0
t
s
e
a
r
e
v
i
t
a
g
e
n
d
n
a
e
v
i
t
i
s
o
p
e
s
a
F
l
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
False Negative    
False Positive      
 1
 2
 3
 4
 5
RSSI Threshold (dB)
Figure 14. Detecting greedy receivers.
are consistent with simulation results, and conﬁrm the
serious damage of greedy misbehavior in real networks.
7 Detecting Greedy Receivers
In this section, we present techniques to detect and
mitigate greedy receiver misbehaviors. We assume
that senders are well-behaving and do not collude with
greedy receivers. Fig. 14 shows a ﬂow-chart of our
countermeasure scheme. The scheme can be imple-
mented at any node in the network, including APs and
clients. The more nodes implementing the detection
scheme, the higher likelihood of detection. Next we
describe how to detect inﬂated NAV, spoofed ACKs,
and fake ACKs.
7.1 Detecting Inﬂated NAV
Inﬂated NAV aﬀects two sets of nodes: (i) those
within communication range of the sender and receiver,
and (ii) those outside the communication range of the
sender but within communication range of the receiver.
The ﬁrst set of nodes know the correct NAV, since they
overhear the sender’s frame and can directly compute
the correct NAV from the receiver by subtracting the
duration of sender’s frame. Therefore these nodes can
directly detect and correct inﬂated NAV. The second
set of nodes can infer an upperbound on a receiver’s
NAV using the maximum data frame size (e.g., 1500
bytes, Ethernet MTU). If the NAV in CTS or ACK
exceeds the expected NAV value, greedy receiver is
detected.
(In fact, without fragmentation, NAV in
ACK should always be 0.) We can further locate the
greedy receiver using received signal strength measure-
ment from it. To recover from this misbehavior, nodes
will ignore the inﬂated NAV and replace it with the
expected NAV to use for virtual carrier sense.
7.2 Detecting Spoofed ACKs
To detect greedy receivers that spoof ACKs on be-
half of normal receivers, we use their received signal
strength. More speciﬁcally, let RSSN denote the re-
ceived signal strength from the original receiver, RSSC
denote the received signal strength in the current ACK
frame, and T hreshcap denote the capture threshold.
RSSN can be obtained using a TCP ACK from that
receiver, assuming TCP ACK is not spoofed If RSSC
Figure 15. False positive and false negative
vs. RSSI threshold.
is signiﬁcantly diﬀerent from RSSN , the sender re-
≥
ports greedy misbehavior. Furthermore, when RSSN
RSSC
T hreshcap, the sender can directly recover from this
misbehavior by ignoring the received ACK. This is be-
cause in this case the original receiver must have not
received data and sent ACK, otherwise the ACK com-
ing from the original receiver would have captured the
spoofed ACK; ignoring such MAC-layer ACKs allow
the sender to retransmit the data at the MAC-layer as
it should.
To examine the feasibility of using RSS measure-
ments for detecting spoofed ACKs, we collect RSSI
measurements from our testbed, consisting of 16 nodes
spread over one ﬂoor of an oﬃce building. Our mea-
surements show that around 95% RSSI measurements
diﬀer from median RSSI of that link by no more than 1
dB. This suggests that RSSI does not change much dur-
ing a short time interval, and we can use large change
in RSSI to identify spoofed ACKs.
Based on the above observation, a sender deter-
mines a spoofed ACK if |RSSImedian − RSSIcurr| >
RSSIT hresh, where RSSImedian is the median RSSI
from the true receiver, RSSIcurr is the RSSI of the
current frame, and RSSIT hresh is the threshold.
The accuracy of detection depends on the value of
RSSIT hresh. Fig. 15 plots the false positive and false
negative rates as RSSIT hresh varies from 0 to 5dB,
where false positive is how often the sender determines
it is a spoofed ACK but in fact it is not, and false
negative is how often the sender determines it is not a
spoofed ACK but in fact it is. As it shows, using 1 dB
as the threshold achieves both low false positive and
low false negative rates.
The previous detection is eﬀective when RSSI from
N R is relatively stable and RSSI from GR is diﬀerent
from N R. To handle highly mobile clients, which ex-
perience large variation in RSSI, the sender can use a
cross-layer approach to detect the greedy behavior. For
each TCP ﬂow, it maintains a list of recently received
MAC-layer ACK and TCP ACK. Greedy receiver is
detected when TCP often retransmits the packet for
which MAC-layer ACK has been received. This detec-
tion assumes wireline loss rate is much smaller than
wireless loss rate, which is generally the case.
7.3 Detecting Faked ACKs
To detect greedy receivers that send MAC-layer
ACKs even for corrupted frame, the sender compares
the MAC-layer loss with the application layer loss rate.
The latter can be estimated using active probing (e.g.,
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:48:46 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007ping). Since packets are corrupted, GR cannot send
ping response and we can measure the true applica-
tion loss rate.
If loss rate is mainly from wireless
link, applicationLoss ≈ M ACLossmaxRetries, when
packet losses are independent.
If applicationLoss >
M ACLossmaxRetries + threshold, the sender detects
faked ACKs, where threshold is used to tolerate loss
rate on wireline links when the connection spans both
wireless and wireline. The appropriate value of thresh-
old depends on the loss rate on the wireline links.
8 Evaluation of Detection
We implement in NS-2 the greedy receiver counter-
measure (GRC) against inﬂated NAV and ACK spoof-
ing described in Section 7.
(a) Evaluation topology
)
s
p
b
M
(
s
r
e
v
e
c
e
R
i
f
o
t
u
p
d
o
o
G
 6
 5
 4
 3
 2
 1
 0
  R1
  R2
no GR
R2 is GR
no GRC
R2 is GR
with GRC
30 
  55
30 
  99  
Distance from R1 and the R2 (m)
  99  
30 
 55
 55
)
s
p
b
M
(
s
r
e
v
e
c
e
R
i
f
o
t
u
p
d
o
o
G
 6
 5
 4
 3
 2
 1
 0
  99
  R1
  R2
no GR
R2 is GR
no GRC
R2 is GR
with GRC
30 
  55
30 
  99  
Distance from R1 and the R2 (m)
  99  
30 
 55
 55
  99
(b) UDP goodput
(c) TCP goodput
Figure 16. GRC effectively detects and miti-
gates inﬂated CTS NAV.
First we evaluate the countermeasure against in-
ﬂated CTS NAV using the the topology in Fig. 16(a),
where communication and interference ranges are 55m
and 99m, respectively. Fig. 16(b) compares the UDP
performance under the following three cases (from left
to right) : (i) no greedy receiver, (ii) one greedy re-
ceiver with no GRC, and (iii) one greedy receiver and
with GRC. As we can see, without a greedy receiver,
the two ﬂows get similar goodput. The goodput jumps
around 99m, because the two senders do not interfere
beyond this distance. When R2 is greedy, R2 domi-
nates the medium and completely shuts oﬀ R1 when
all four nodes are within communication range. Be-
yond 55m, R2’s inﬂated CTS NAV cannot be heard
by R1 and S1, so the goodput of the two ﬂows are
similar beyond 55m. So inﬂated CTS NAV is eﬀective
only when distance is below 55m, and we focus on this
region. We observe that GRC eﬀectively detects and
mitigates the inﬂated NAV. In particular, the goodput
of the two ﬂows are similar when distance is below 45
m, since S1 and R1 both hear S2’s RTS and know
the true packet size. As the distance further increases,
N S does not hear RTS from GS and has to assume
the maximum packet size 1500 bytes, which is 46.48%
larger than the actual data packet size. In this case, R2
receives higher goodput. Nevertheless, compared with
no GRC, the normal receiver no longer starves. Simi-
lar trends are observed under TCP traﬃc, as shown in
Fig. 16(c).
Next we consider a greedy receiver that spoofs
)
s
p
b
M
(
s
r
e
v
e
c
e
R
i
f
o
t
u
p
d
o
o
G
 4
 3.5
 3
 2.5
 2
 1.5
 1
 0.5
 0
  R1
  R2
no GR
R2 is GR
no GRC
R2 is GR
with GRC
8420
14
8420
14
8420
14
BER (1e-4)
Figure 17. GRC effectively detects and recov-
ers from ACK spooﬁng under varying BER.
ACKs. We compare the goodput of two competing
ﬂows under a varying loss rate, where the loss rates
on the two ﬂows are the same and losses are both
randomly generated. As shown in Fig. 17, without a
greedy receiver, the goodput of the two ﬂows are sim-
ilar, both gradually decrease as BER increases from
0 to 14e−4. When R2 is greedy, its ﬂow dominates
the medium and degrades R1’s performance when no
GRC is used. With GRC, both ﬂows fairly share
the medium: their goodput closely follow the goodput
curves under no greedy receiver. This demonstrates
the eﬀectiveness of the GRC.
9 Conclusion
As the popularity of hotspot networks continues to
grow, it is increasingly important to understand po-
tential misuses and guard against them.
In this pa-
per, we identify a range of greedy receiver misbehav-
iors, and evaluate their eﬀects using both simulation
and testbed experiments. Our results show that greedy
receiver misbehavior can cause serious degradation in
other traﬃc, including starvation. We further develop
techniques to detect and mitigate the misbehaviors and
demonstrate their eﬀectiveness.
References
[1] J. Bellardo and S. Savage.
802.11 denial-of-service attacks:
Real vulnerabilities and practical solutions. In Proc. of 12th
USENIX Security Symposium, Aug. 2003.
[2] M. Cagalj, S. Ganeriwal, I. Aad, and J.-P. Hubaux. On selﬁsh
behavior in CSMA/CA networks. In Proc. of IEEE Infocom,
Mar. 2005.
[3] IEEE Computer Society LAN MAN Standards Committee.
IEEE 802.11: Wireless LAN Medium Access Control and
Physical Layer Speciﬁcations, Aug., 1999.
[4] Y. Hu and A. Perrig. A survey of secure wireless ad hoc routing.
IEEE Security & Privacy, special issue on Making Wireless
Work, pages 28–39, 2004.
http://www.in-stat.com/catalog/Wcatalogue.asp?id=
[5] In-stat.
167.
[6] Revenue from wireless hotspots.
ITFacts/index.php?blogthis=1&p=9319.
http://blogs.zdnet.com/
[7] D. Kotz and K. Essien. Analysis of a campus-wide wireless
network. In Proc. of ACM MOBICOM, Sept. 2002.
[8] A. Kuzmanovic and E. Knightly. Low-rate TCP-targeted denial
of service attacks (the shrew vs. the mice and elephants). In
Proc. of ACM SIGCOMM, Aug. 2003.
[9] P. Kyasanur and N. Vaidya. Detection and handling of MAC
layer misbehavior in wireless networks. In IEEE Transactions
on Mobile Computing, Apr. 2004.
[10] The network simulator – ns-2. http://www.isi.edu/nsnam/ns/.
[11] M. Raya, J. P. Hubaux, and I. Aad. DOMINO: A system to
detect greedy behavior in IEEE 802.11 hotspots. In Proc. of
MobiSys, Sept. 2004.
[12] S. Savage, N. Cardwell, D. Wetherall, and T. Anderson. TCP
congestion control with a misbehaving receiver. ACM Com-
puter Communications Review, Oct. 1999.
[13] D. Tang. Analysis of a local-area wireless network. In Proc. of
MOBICOM, Sept. 2000.
[14] W. Xu, W. Trappe, Y. Zhang, and T. Wood. The feasibility of
launching and detecting jamming attacks in wireless networks.
In Proc. of ACM MobiHoc, May 2005.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:48:46 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007