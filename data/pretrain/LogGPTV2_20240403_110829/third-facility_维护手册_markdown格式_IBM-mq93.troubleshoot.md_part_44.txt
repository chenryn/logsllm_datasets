### IBM MQ for z/OS Dump Formatting and Analysis

#### Resource Manager Dump Formatting Keywords (J - P)

| Keyword | Description |
|---------|-------------|
| **CFS** | <ul><li>CFS=1: CFS report level 1</li><li>CFS=2: CFS report level 2</li></ul> |
| **CHLAUTH** | <ul><li>CHLAUTH=1/2: CHLAUTH report level</li></ul> |
| **CLUS** | <ul><li>CLUS=1: Cluster report including the cluster repository known on the queue manager</li><li>CLUS=2: Cluster report showing cluster registrations</li></ul> |
| **CLXQ** | <ul><li>CLXQ=1: Cluster XMITQ report level 1</li><li>CLXQ=2: Cluster XMITQ report level 2</li></ul> |
| **CMD** | <ul><li>CMD=0/1/2: Command trace table display level</li></ul> |
| **D** | <ul><li>D=1/2/3: Detail level for some reports</li></ul> |
| **Db2** | <ul><li>Db2=1: Db2 report level 1</li></ul> |
| **DMC** | <ul><li>DMC=1: DMC report level 1</li><li>DMC=2: DMC report level 2</li><li>DMC=3: DMC report level 3</li></ul> |
| **GR** | <ul><li>GR=1: Group indoubt report level 1</li></ul> |
| **IMS** | <ul><li>IMS=1: IMS report level 1</li></ul> |
| **JOBNAME** | <ul><li>JOBNAME=xxxxxxxx: Job name</li></ul> |
| **LKM** | <ul><li>LKM=1: LKM report level 1</li><li>LKM=2/3: LKM report level 2/3</li><li>LKM=4: LKM report level 4</li></ul> |
| **LMC** | <ul><li>LMC=1: LMC report level 1</li></ul> |
| **MAXTR** | <ul><li>MAXTR=nnnnnnnnn: Max trace entries to format</li></ul> |
| **MHASID** | <ul><li>MHASID=xxxx: Message handle ASID for properties</li></ul> |
| **MMC** | <ul><li>MMC=1: MMC report level 1</li><li>MMC=2: MMC report level 2</li></ul> |
| **MSG** | <ul><li>MSG=nnnnnnnnnnnnnnnn: Format the message at pointer</li><li>MASID=xxxx: MASID allows storage in other address spaces</li><li>LEN=xxxxxxxx: LEN limits amount of storage to format</li><li>MSGD=S/D: MSGD controls level of detail (S is summary, D is detailed)</li><li>MSGH=nnnnnnnnnnnnnnnnn: Message handle</li></ul> |
| **MT** | <ul><li>Message properties trace</li></ul> |
| **MQVCX** | <ul><li>MQCHARVs in hexadecimal format</li></ul> |
| **PROPS** | <ul><li>PROPS=nnnnnnnnnnnnnnnn: Message properties pointer</li></ul> |
| **PSID** | <ul><li>PSID=nnnnnnnn: Page set to format page</li></ul> |
| **PSTRX** | <ul><li>Properties strings in hex format</li></ul> |

#### ONAM Subparameter
The optional `ONAM` subparameter allows you to specify the object name, up to a maximum of 48 characters, to limit data printed to objects starting with the specified characters. This applies to various report levels, such as DMC, MMC, and others.

#### Resource Manager Dump Formatting Keywords (R - Z)

| Keyword | Description |
|---------|-------------|
| **RPR** | <ul><li>RPR=nnnnnnnn: Page or record to format</li></ul> |
| **SHOWDEL** | <ul><li>Show deleted records for DMC=3</li></ul> |
| **SMC** | <ul><li>SMC=1/2/3: Storage manager</li></ul> |
| **TC** | <ul><li>TT data char format, concatenated</li><li>*: print all in suitable character set</li><li>A: always print ASCII</li><li>E: always print EBCDIC</li><li>0: never print either</li></ul> |
| **TFMT** | <ul><li>TFMT=H/M: Time format - human or STCK</li></ul> |
| **THR** | <ul><li>THR=nnnnnnnn: Thread address</li><li>THR=*/2/3: Set thread report level</li></ul> |
| **TOP** | <ul><li>TOP=1: TOP report level 1</li><li>TOP=2: TOP report level 2</li><li>TOP=nnnnnnnnnnnnnnnn: Tnode 64-bit address or /TSTR=48 chars: Topic string (wildcard with % at start or end)</li><li>/TSTRX=hex 1208 str: Hexadecimal of topic string in 1208 always wildcard character at start</li><li>TOP=3: TOP report level 3</li><li>TOP=4: TOP report level 4</li></ul> |
| **TSEG** | <ul><li>TSEG=M(RU)/Q(P64): Search process for 64-bit trace</li><li>I(NTERPOLATE): Guess missing TSEG address or addresses</li><li>F(WD): Force forward sort</li><li>D(EBUG): Debug search process</li><li>TSEG=(M,Q,I,F,D): Specify multiple TSEG options</li></ul> |
| **W** | <ul><li>W=0/1/2/3: TT width format</li></ul> |
| **XA** | <ul><li>XA=1: XA report level 1</li></ul> |
| **ZMH** | <ul><li>ZMH=nnnnnnnnnnnnnnnn: ZST message handle</li></ul> |

#### Summary Dump Keywords for IBM MQ for z/OS

| Keyword | Description |
|---------|-------------|
| **SUBSYS** | <ul><li>SUBSYS=aaaa: Use this keyword if the summary dump portion is not available, or not to be used, to give the name of the subsystem to format information for. aaaa is a 1 through 4-character subsystem name.</li></ul> |
| **SUMDUMP** | <ul><li>SUMDUMP=NO: Use this keyword if the dump has a summary portion, but you do not want to use it. (You would usually only do this if so directed by your IBM support center.)</li></ul> |

#### Examples of Using Keywords
- For default formatting of all address spaces, using information from the summary portion of the dump:
  ```plaintext
  VERBX CSQWDMP
  ```
- To display the trace table from a dump of subsystem named MQMT, which was initiated by an operator (and so does not have a summary portion):
  ```plaintext
  VERBX CSQWDMP 'TT,SUBSYS=MQMT'
  ```
- To display all the control blocks and the trace table from a dump produced by a subsystem abend, for an address space with ASID (address space identifier) 1F:
  ```plaintext
  VERBX CSQWDMP 'TT,LG,SA=1F'
  ```
- To display the portion of the trace table from a dump associated with a particular EB thread:
  ```plaintext
  VERBX CSQWDMP 'TT,EB=nnnnnnnn'
  ```
- To display message manager 1 report for local non-shared queue objects with a name that begins with 'ABC':
  ```plaintext
  VERBX CSQWDMP 'MMC=1,ONAM=ABC,Obj=MQLO'
  ```

#### IPCS Subcommands Used for Dump Analysis

| Subcommand | Description |
|------------|-------------|
| **STATUS** | <ul><li>To display data usually examined during the initial part of the problem determination process.</li></ul> |
| **STRDATA LISTNUM(ALL)** | <ul><li>To format coupling facility structure data.</li><li>ENTRYPOS(ALL) DETAIL</li></ul> |
| **VERBEXIT LOGDATA** | <ul><li>To format the in-storage LOGREC buffer records present before the dump was taken. LOGDATA locates the LOGREC entries that are contained in the LOGREC recording buffer and invokes the EREP program to format and print the LOGREC entries. These entries are formatted in the style of the normal detail edit report.</li></ul> |
| **VERBEXIT TRACE** | <ul><li>To format the system trace entries for all address spaces.</li></ul> |
| **VERBEXIT SYMPTOM** | <ul><li>To format the symptom strings contained in the header record of a system dump such as stand-alone dump, SVC dump, or an abend dump requested with a SYSUDUMP DD statement.</li></ul> |
| **VERBEXIT GRSTRACE** | <ul><li>To format diagnostic data from the major control blocks for global resource serialization.</li></ul> |
| **VERBEXIT SUMDUMP** | <ul><li>To locate and display the summary dump data that an SVC dump provides.</li></ul> |
| **VERBEXIT DAEDATA** | <ul><li>To format the dump analysis and elimination (DAE) data for the dumped system.</li></ul> |

#### Formatting a Dump from the Channel Initiator on z/OS

Use the IPCS VERBEXIT `CSQXDPRD` to format a channel initiator dump. You can select the data that is formatted by specifying keywords.

| Keyword | Description |
|---------|-------------|
| **SUBSYS** | <ul><li>SUBSYS=aaaa: The control blocks of the channel initiator associated with the named subsystem. It is required for all new formatted dumps.</li></ul> |
| **CHST** | <ul><li>CHST=1, CNAM=channel name, DUMP=S|F|C: All channel information. The optional CNAM subparameter allows you to specify the name of a channel, up to a maximum of 20 characters, for which to format details. The optional DUMP subparameter allows you to control the extent of formatting, as follows: DUMP=S (for "short"), DUMP=F (for "full"), DUMP=C (for "compressed" - default).</li><li>CHST=2, CNAM=channel name: A summary of all channels, or of the channel specified by the CNAM keyword.</li><li>CHST=3, CNAM=channel name: Data provided by CHST=2 and a program trace, line trace, and formatted semaphore table print of all channels in the dump.</li></ul> |
| **CLUS** | <ul><li>CLUS=1: Cluster report including the cluster repository known on the queue manager.</li><li>CLUS=2: Cluster report showing cluster registrations.</li></ul> |
| **CTRACE** | <ul><li>CTRACE=S|F, DPRO=nnnnnnnn, TCB=nnnnnn: Select either a short (CTRACE=S) or full (CTRACE=F) CTRACE. The optional DPRO subparameter allows you to specify a CTRACE for the DPRO specified. The optional TCB subparameter allows you to specify a CTRACE for the job specified.</li></ul> |
| **DISP** | <ul><li>DISP=1, DUMP=S|F|C: Dispatcher report. See CHST=1 for details of the DUMP subparameter.</li></ul> |
| **BUF** | <ul><li>BUF=1: Buffer report</li></ul> |
| **XSMF** | <ul><li>XSMF=1: Format channel initiator SMF data that is available in a dump.</li></ul> |

#### Processing an IBM MQ for z/OS Dump Using IPCS in Batch

To use IPCS in batch, insert the required IPCS statements into your batch job stream. Change the data set name (DSN=) on the DUMP00 statement to reflect the dump you want to process, and insert the IPCS subcommands that you want to use.

```jcl
//*************************************************
//* RUNNING IPCS IN A BATCH JOB *
//*************************************************
//MQMDMP EXEC PGM=IKJEFT01,REGION=5120K
//STEPLIB DD DSN=mqm.library-name,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//IPCSPRNT DD SYSOUT=*
//IPCSDDIR DD DSN=dump.directory-name,DISP=OLD
//DUMP00 DD DSN=dump.name,DISP=SHR
//SYSTSIN DD *
IPCS NOPARM TASKLIB(SCSQLOAD)
SETDEF PRINT TERMINAL DDNAME(DUMP00) NOCONFIRM
**************************************************
* INSERT YOUR IPCS COMMANDS HERE, FOR EXAMPLE: *
VERBEXIT LOGDATA
VERBEXIT SYMPTOM
VERBEXIT CSQWDMP 'TT,SUBSYS=QMGR'
**************************************************
CLOSE ALL
END
/*
```

#### Analyzing the Dump and Interpreting Dump Titles on z/OS

- **Analyzing the Dump**: The dump title includes the abend completion and reason codes, the failing load module and CSECT names, and the release identifier.
- **Dump Title Variation with PSW and ASID**: The formats of SVC dump titles vary slightly, depending on the type of error.

**Example of an SVC Dump Title:**
```plaintext
ssnm,ABN=5C6-00D303F2,U=AUSER,C=R3600.710.LOCK-CSQL1GET,M=CSQGFRCV,LOC=CSQLLPLM.CSQL1GET+0246
```
- **ssnm,ABN=compltn-reason**: 
  - `ssnm` is the name of the subsystem that issued the dump.
  - `compltn` is the 3-character hexadecimal abend completion code (in this example, X'5C6'), prefixed by U for user abend codes.
  - `reason` is the 4-byte hexadecimal reason code (in this example, X'00D303F2').
- **U=userid**: `userid` is the user identifier of the user (in this example, AUSER). This field is not present for channel initiators.
- **C=compid.release.comp-function**: 
  - `compid` is the last 5 characters of the component identifier. The value R3600 uniquely identifies IBM MQ for z/OS.
  - `release` is a 3-digit code indicating the version, release, and modification level of IBM MQ for z/OS (in this example, 710).
  - `comp` is an acronym for the component in control at the time of the abend (in this example, LOCK).
  - `function` is the name of a function, macro, or routine in control at the time of abend (in this example, CSQL1GET). This field is not always present.
- **M=module**: `module` is the name of the FRR or ESTAE recovery routine (in this example, CSQGFRCV). This field is not always present.
- **Note**: This is not the name of the module where the abend occurred; that is given by LOC.