(cid:32)
such that they deﬂect the Internet trafﬁc of censored users to
the blocked Internet destinations requested by the users. By
design, decoy routing defeats IP address blocking, however,
it is prone to particular routing-based blocking attacks known
as RAD [62], [34], [49]. Requiring deployment by a number
of in-the-wild ISPs is a major obstacle to the real-world
deployment of decoy routing systems.
A. Weaknesses of Existing Systems
Here, we summarize the main weaknesses of existing
circumvention systems, as summarized in Table I:
1) Easy to block:
Proxy-based circumvention systems,
which encompass the majority of in-the-wild systems like Tor,
Psiphon, and VPN services [52], [56] can easily get blocked by
the censors who enumerate their limited, small set of proxy IP
addresses [81], [61], [79], [16]. The censors can also use more
advanced techniques like trafﬁc analysis and active probing to
block various kinds of circumvention systems [81], [16], [61],
[31], [24], [62].
2) Costly to operate: As introduced earlier, domain fronting
aims at resisting IP address ﬁltering by setting up proxies
on shared-IP platforms such as CDNs, App Engines, and
Cloud services. However, due to the prohibitively high costs
of domain fronting [46], domain fronting is not used for
circumvention proxying at scale, and recent proposals suggest
to use domain fronting only for circumvention signaling, but
not for proxying [63]. Several protocol tunneling systems [7]
similarly need to some pay service providers for using their
service, and decoy routing services require large investment in
order to be deployed by Internet ISPs [49].
3) Poor QoS: Proxy-based circumvention systems like Tor
suffer from low quality of services (e.g., high latencies) due
to high congestion on the proxies. Various factors contribute to
such congestion, most importantly the small number of proxies
compared to clients, as well as the use of circumvention system
by many clients for accessing bandwidth-extensive content
such as copyright
infringed multimedia content. Tunneling
circumvention systems like FreeWave [33], Sweet [35], and
CoverCast [44] offer low bandwidth and high latencies to the
clients as they are constrained by the quality of service of their
host services. CDNBrowsing systems [30], [85] offer good
latencies but can only be used to browse speciﬁc types of
censored websites.
4) Lack of user-adjustable privacy: Existing circumvention
systems do not give users much control on their privacy
protection while using such systems. On one hand, some cir-
cumvention systems like Tor bundle strong privacy protections
like anonymity with circumvention, causing huge degradations
to QoS and therefore scaring away typical Internet users.
3
Internet communications of the censored Clients, and are able
to block or interfere with any connection from such Clients to
Internet destinations. Censors are also able to act as Clients
or Buddies in order to gain information about the system and
to disrupt the system to the best of their ability. However, we
assume that censors are not capable of tampering with users’
devices (e.g., installing monitoring softwares on their devices),
as this will disable any privacy-enhancing tool.
We assume the players in our system to be rational. A ra-
tional censor tries to minimize the costs and collateral damages
incurred by its actions, such as interfering with benign, popular
Internet services. Buddies are rational in that they are willing
to help censored users as long as this does not pose any risks
to themselves. For example, a Buddy will not let Clients use
her device to deploy network attacks (e.g., port scan, sending
spam email) or to access controversial destinations that will
get the Buddy in trouble.
We also assume that the censors do not penalize normal
users for the sole act of using a circumvention software
or accessing an unblocked destination, unless the websites
accessed are directly related to major criminal offenses. Al-
though using circumvention tools is considered illegal in many
censoring countries, penalizing Internet users merely for using
a circumvention software has been extremely rare in most
countries [10]. For example, as of 2017, Facebook has over
17 million users from Iran accounting for over 20% of the
population [5], despite it having been blocked for more than
8 years. Our threat model assumes that the censored clients
are aware of, and accept the (negligible) risks of using a
circumvention software.
Fig. 1. The main setting of MassBrowser.
On the other hand, VPNs and one-hop proxy-based systems
provide weak privacy protections to their users regardless of
speciﬁc privacy needs of different users.
5) Hard to deploy: Some of the circumvention systems pro-
posed in the literature are impractical to be used at large scale,
despite offering reasonable blocking resistance and QoS. For
instance, decoy routing systems [32], [84], [38], [50] require
wide adoption by Internet ISPs, and tunneling systems [33],
[35], [44] can be trivially disabled by the third-party service
providers they use for tunneling.
III. SKETCH OF OUR APPROACH
B. Separation of Properties
Figure 1 shows the high-level setting of MassBrowser.
MassBrowser is a volunteer-run proxy-based system: it lever-
ages normal Internet users with access to the free Internet to
proxy censored web trafﬁc for censored users. It also uses
censored users to proxy trafﬁc for other censored users who
face different censorship restrictions (e.g., those who reside in
different censoring countries). We will refer to the censored
clients of MassBrowser as Clients, and we will use Buddies
to refer to MassBrowser’s proxies. Note that a Buddy can be
either a volunteer (non-censored) party or a censored client of
MassBrowser.
The central component of MassBrowser is a hard-to-block
Operator service that oversees and enforces MassBrowser’s
key functionalities, particularly, by strategically matching
Clients to Buddies based on the preferences of Clients and
Buddies as well as their geographic locations, their avail-
able bandwidth, and other conditions. As will be evaluated,
Operator can handle very large numbers of users with tiny
operational costs by making minimal communications.
We will provide further details about these components and
their interactions throughout the paper. Next, we present the
key ideas behind the design of MassBrowser.
A. MassBrowser’s Threat Model
We assume that MassBrowser Clients are located inside
censoring regions. The censorship authorities monitor the
We rely on the separation of properties (SoP) principle
in order to overcome the practical shortcomings of existing
circumvention solutions. The SoP principle states that the key
feature targeted by a circumvention system must be blocking
resistance, and additional properties such as anonymity and
browsing privacy should be provided as optional
features
to the users. The SoP principle is based on the real-world
observation [10], [11], [71], [72], [21] that the majority of
censored users are solely interested in blocking resistance,
e.g., to be able to access blocked news articles or to be able
to communicate through blocked social networks; however,
the majority of the censored users are not seeking properties
like anonymity [83]. Our claim is supported by the ostensible
popularity of “public” VPNs, “public” HTTP proxies [71],
[72], [83], [82] and centralized circumvention systems like
Lantern [40] and Psiphon [58], in contrast to privacy-focused
solutions such as Tor. For instance, an estimated 31% of
Chinese users use VPN services [83] compared to Tor’s only
2 millions daily users globally.
The SoP principle allows us to run single-proxy circumven-
tion connections, which improves the QoS-cost tradeoff. Also,
the principle allows us to restrict the use of our circumvention
proxies to accessing censored content only. This not only
reduces congestion on the proxies (therefore improving the
QoS-cost tradeoff), but also increases the potential number of
volunteer proxies by signiﬁcantly reducing the legal conse-
quences of running circumvention proxies, which has been a
4
OperatorCensored Region 1ClientsClientsCensored Region 2BuddiesFig. 2. The cumulative distribution of the number of countries that a website
is blocked in, for different content types.
major issue for general purpose circumvention systems like
Tor [6], [4].
Our system provides user-adjustable privacy, unlike ex-
isting circumvention systems. Speciﬁcally, VPNs and single-
hop circumvention systems like Psiphon and Lantern provide
no privacy protection, and Tor provides strong privacy for
all users, across all connections. In MassBrowser, however,
a client can choose to protect his sensitive connections by
tunneling them through an integrated interface with Tor (and
therefore only pay a QoS cost for those sensitive connections).
C. Client-to-Client Proxying
The key to the resilience and QoS of any volunteer-based
circumvention system like ours is to have a balanced ratio of
proxying capacity to circumvention bandwidth demand. A key
technique we use in MassBrowser is having censored clients
help other censored clients by proxying their trafﬁc. What
enables us to do so is the difference in censorship blacklists
across different censorship regions, as demonstrated in various
measurement studies [51], [54], [55].
To demonstrate the extent of usability of client-to-
client proxying, we use the measurement data provided by
ICLab [51] and GreatFire [81]. For each website, we compute
the number of countries that the website is blocked in. As
shown in Figure 2, the majority of censored websites are
only blocked in one or two countries. This is specially more
apparent for political and news content, as censorship rules
on such content are heavily dependent on geographic regions.
Therefore, an Iranian MassBrowser client can help a Chinese
MassBrowser client to access webpages blocked in China,
and vice versa. Figure 3 illustrates the intersection of blocked
domains in three major censoring countries of China, Iran,
and Turkey. We believe that using clients-to-client proxying
is a major step towards balancing the ratio of circumven-
tion proxies to circumvention trafﬁc, and therefore improving
circumvention QoS. Also, as we will discuss later, using
clients/volunteers for proxying also offers strong censorship
resilience properties by increasing the collateral damage of
censorship.
Fig. 3. Comparing website blacklists in three major censorship regions.
D. Leveraging Volunteer Proxies
MassBrowser complements client-to-client proxying by
employing volunteer Buddies who live in non-censored areas
(e.g.,
to proxy content commonly blocked across various
censoring countries). We use various techniques (discussed in
Section IV-B) to encourage a wide adoption by volunteers.
Note that, we are not the ﬁrst to suggest to use volunteers
in deploying circumvention proxies. In the following, we
compare MassBrowser to alternative circumvention systems
that also use volunteer proxies.
uProxy [67]: uProxy (currently, deprecated [67]) is another
proposal to use volunteer Internet users as proxies for censored
users. uProxy’s original design [69] used the WebRTC protocol
to connect a censored user to a volunteer proxy with an
installed Chrome plugin. The uProxy project lately shifted to-
wards using Shadowsocks [68] for connecting users to servers.
uProxy did not use any central operator as in MassBrowser;
instead, a uProxy censored user was supposed to know a friend
outside the censorship region to act as her proxy. That is,
uProxy would enable clients to set up “private” proxies, very
much similar to private VPNs. We believe that this is not a
scalable solution, as many censored users do not have close
friends with access to the free Internet to help them.
[19]:
FlashProxy [22],
FlashProxy (currently, depre-
cated [22]) suggested to use volunteer websites to recruit
ephemeral proxies. The volunteer website would load a par-
ticular JavaScript on each of its visitors, turning them into
ephemeral proxies for censored clients. Even though a Flash-
Proxy volunteer website would present a banner to its visitors
informing them of the process, the visitors had no way to opt
out except by refraining from visiting that website. We believe
that high-visitor websites are unlikely to become volunteers as
this may decrease their visitors. Additionally, the censors may
retaliate by simply censoring (or even attacking) the volunteer
websites.
Snowﬂake [63]: Snowﬂake is the successor of the FlashProxy
project and uses some of the core communication protocols
5
51015Countries0.00.20.40.60.81.0CumulativeFractionAnyNewsPoliticalPersonalWebsitesPornographyExtremist278521564911562920518ChinaIranTurkeyof uProxy [69], e.g., its WebRTC communication schemes.
Similar to FlashProxy, Snowﬂake converts the visitors of some
volunteer websites into circumvention proxies by loading a
JavaScript. Therefore, we argue that a major challenge to
Snowﬂake is adoption by volunteer websites: a volunteer
website may get the target of censorship or cyberattacks by
the censors, and therefore we do not expect adoption by major
websites. Note that deployment by low-visitor websites does
not help since the number of the proxies is proportional to the
number of the visitors to the volunteer websites. Also, similar
to Flashproxy, users in Snowﬂake have no way to opt out
except by refraining from visiting the volunteer websites. By
contrast, in MassBrowser we use Internet users to knowingly
and voluntarily proxy trafﬁc for censored users. Also, we use
a hard-to-block central entity (the Operator) to strategically
matchmake clients and volunteer proxies. MassBrowser im-
plements various trafﬁc optimization techniques and selective
proxying to encourage volunteer proxying by respecting their
preferences.
VPNGate [52]: VPNGate is a network of volunteers running
VPN software open to the public. The VPNGate system
maintains the list of all volunteer VPNs, and publishes the list
on its webpage [75] for the interested clients. Unfortunately,
VPNGate does not employ effective mechanisms to resist
blocking, and therefore it is trivially blockable by the censors.
The VPNGate website contains fake VPN IP addresses to
prevent the censors from blacklisting the VPN IPs in bulk,
however, the censors can easily identify and ignore such fake
IPs by trying to connect to them through VPN protocols. In
fact, the majority of VPNGate proxies appear to be currently
blocked in China [73], [74]. By contrast, in MassBrowser a
blocking resistant Operator component establishes the con-
nections between clients and proxies, preventing the censors
from enumerating the proxies. Even if the censors enumerate
MassBrowser’s Buddy IPs, they can not block them without
collateral damage as such IPs are NATed IPs with ephemeral
port numbers, i.e., they change their port numbers for every
connection. Additionally, MassBrowser deploys trafﬁc ob-
fuscation to defeat trafﬁc analysis, while VPNGate’s VPN
trafﬁc is trivially detectable at the network layer. As another
distinction, MassBrowser employs various selective proxying
techniques to optimize trafﬁc load on volunteer proxies.
E. How MassBrowser Addresses Circumvention Issues
Here we summarize how MassBrowser addresses the major
circumvention issues discussed in Section II-A. This will be
further expanded later on.
1) Blocking resistance: As discussed earlier, proxy enumer-
ation is the most common technique used by the censors to
block circumvention systems. Proxy enumeration is feasible in
practice due to two reasons; ﬁrst, the small number of proxy IP
addresses used by typical circumvention systems enables the
censors to enumerate all the IPs within a short interval [81].
Second, typical circumvention proxies use dedicated IP ad-
dresses that once identiﬁed can be blocked with no collateral
damage. Domain fronting defeats IP blocking by using shared
IP addresses, however is prohibitively expensive as a scalable
solution.
MassBrowser deploys a large number of proxies run by
normal Internet users—either censored clients or non-censored
volunteers. Therefore, the number of relay IPs of MassBrowser
scales with the number of its users. Also, as the relays are
run by normal Internet users, they are expected to frequently
change IP addresses and use shared NATed IPs. Therefore,
blocking such moving targets can impose signiﬁcant collateral
damage to the censors.
2) Cost of operation: Similar to (the prohibitively expen-
sive) domain fronting [20] and CloudTransport [7] systems,
MassBrowser makes use of shared IP addresses to defeat
IP enumeration. By contrast, MassBrowser is signiﬁcantly
cheaper to operate as the voluminous circumvention trafﬁc is
proxied through censored clients and volunteer proxies. Also,
while MassBrowser’s Operator is implemented as a domain-
fronted service to resist blocking, it only costs MassBrowser
an estimated $0.001 per active client per month due to the
small volume of its signaling trafﬁc.
3) QoS: MassBrowser combines several complimentary tech-
niques to offer a high QoS. First, it leverages CacheBrows-
ing [30] to minimize the trafﬁc load on the proxies. Second,
being based on the SoP principle, MassBrowser uses single-
hop proxies for its connections (for the majority of the users
who do not demand anonymity), and restricts the use of proxies
to censored content. Third, as discussed above, the number of
proxies in MassBrowser scales with the number of its users.
4) User-adjustable privacy: Existing circumvention solutions
either provide weak privacy on all connections (e.g., as in