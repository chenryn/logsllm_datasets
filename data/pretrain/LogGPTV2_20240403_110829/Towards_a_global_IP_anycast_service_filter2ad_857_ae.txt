service discovery and other applications, both for IPv4[32]
and for IPv6[33].
Katabi and Wroclawski[34] proposed an architecture that
allows IP anycast to scale by the number of groups. Their ap-
proach is based on the observation that services have a skewed
popularity distribution. Hence, making sure that the unpop-
ular groups do not impose any load on the routing infras-
tructure addresses the scalability issue. However, the need
to change routers puts a severe dent on the practical appeal
of the approach. Besides, being a router-based approach, it
suﬀers from most other limitations of IPv4 anycast.
Because of the limitations of these approaches, anycast to-
day is typically implemented at the application layer. This
oﬀers what is essentially anycast service discovery—DNS-
based approaches use DNS redirection while URL-rewriting
approaches dynamically rewrite the URL links as part of redi-
recting a client to the appropriate server. Related proposals
in the academic community include [35][36]. The idea behind
these is to identify the group using an application level name
that, at the beginning of the communication, is mapped to the
unicast address of a group member. The reliance on unicast
support from the underlying IP layer implies that these ap-
proaches circumvent all limitations of IP anycast. The chal-
lenge here is to collect the relevant selection metrics about
the group members in an eﬃcient and robust fashion.
Another element in this design space is anycast built on
i3 uses
top of the indirection architecture oﬀered by i3[37].
identiﬁers as a layer of indirection that generically gives the
receiver tremendous control over how it may (or may not)
be reached by senders. One of the services i3 can provide is
anycast. There are two main advantages of PIAS over i3 for
the anycast service. First, PIAS requires no changes in the
protocol stack, whereas i3 requires a new layer inserted below
transport. A PIAS client, on the other hand, can use PIAS
with no changes whatsoever. Second, because PIAS uses na-
tive IP anycast, it is easier to derive proximity from PIAS
than from i3. PIAS only has to measure distances between
proxies—i3 has to measure distances to clients and targets.
The main advantage of i3 over PIAS is that it is easier to
deploy an i3 infrastructure than a PIAS infrastructure, pre-
cisely because i3 doesn’t require IP anycast. Indeed, this has
10Note that the way i3 has described their anycast, it wouldn’t
scale to very large or very dynamic groups, because a single
node holds all the targets and receives pings from the targets.
It may be possible that i3 could achieve this with a model
closer to how they do multicast, but we’re not sure.
11for reasons described in ﬁrst paragraph of section 3.6
12they can be engineered to be fast by relying on IGP for
convergence
been a source of frustration for us—we can’t just stick a PIAS
proxy on Planetlab and start a service.
As far as the broader notion of indirection is concerned,
there is no question that i3 is more general. Its ability for both
the sender or receiver to chain services is very powerful. The
addressing space is essentially inﬁnite, and hosts can create
addresses locally. Finally the security model (that supports
the chaining) is elegant and powerful. Having said that, PIAS
does provide indirection from which beneﬁts other than just
anycast derive. For unicast communications, it could be used
to provide mobility, anonymity, DoS protection, and global
connectivity through NATs. In the best of all worlds, we’d
want something like i3 running over PIAS. But IPv6 and
NAT have taught us that you don’t always get the best of
all worlds, and considering PIAS’s backwards compatibility,
it may after all be the more compelling story.
6. ANYCAST APPLICATIONS
Given that PIAS oﬀers an easy-to-use global IP anycast
service that combines the positive aspects of both native IP
anycast and application-layer anycast, it is interesting to con-
sider new ways in which such a service could be used.
6.1 Peer Discovery
Though IP anycast has long been regarded as a means of
service discovery, this has always been in the context of clients
ﬁnding servers. PIAS opens up discovery for P2P networks,
where not only is there no client/server distinction, but peers
must often ﬁnd (and be found by) multiple peers, and those
peers can come and go rapidly. Examples of such cases in-
clude BitTorrent and network games.
One reason that traditional IP anycast has not worked for
peer discovery (other than diﬃculty of deployment), is that an
IP anycast group member cannot send to the group—packets
are just routed back to themselves. With the right selec-
tion characteristics, PIAS can support a wide-range of P2P
applications. Random selection would allow peers to ﬁnd ar-
bitrary other peers, and is useful to insure that unstructured
P2P networks are not partitioned. Proximity is obviously also
important, but to insure that a peer can ﬁnd multiple nearby
peers (rather than the same peer over and over), a selection
service whereby a node can provide a short list of targets to
exclude (i.e. already-discovered targets) could be used.
6.2 Reaching an Overlay network
A very compelling application of PIAS would allow a RON[14]
network to scale to many thousands of members, and would
allow those members to use RON not only for exchanging
packets with each other, but with any host on the Internet!
What follows is a high-level description of the approach. As-
sume a set of 50-100 RON “infrastructure” nodes that serve
many thousands of RON clients. The RON nodes all join
a large set of anycast groups—large enough that there is an
anycast transport address (TA) for every possible client con-
nection. The RON nodes also partition the anycast TAs so
that each TA maps to a single RON node. Clients discover
nearby RON nodes (or a couple of them) using one of the
anycast groups, and establish a unicast tunnel (for instance,
a VPN tunnel) with the RON node. We call this the RON
tunnel, and the RON node is referred to as the local RON.
When a client wishes to establish a connection with some
remote host on the Internet, it does so through its RON tun-
nel. The local RON assigns one of its TAs to the connec-
tion using NAT, and forwards the packet to the remote host.
When the remote host returns a packet, it reaches a nearby
RON node, called the remote RON. Because the transport
address of the return packet maps to the local RON node,
the remote RON node can identify the local RON node. The
remote RON tags the packet with its own identity, and trans-
mits the packet through the RON network to the local RON
node, which caches the identity of the remote RON, and de-
livers the packet to the client. Now subsequent packets from
the client to the remote host can also traverse the RON net-
work.
This trick isn’t limited to RONs.
It could also work for
route optimization in Mobile IP13 (for v4 or v6, see [38] for a
description of the problem), or simply as a way to anonymize
traﬃc without sacriﬁcing performance.
7. DISCUSSION
In this paper, we have presented the basic aspects of PIAS.
A ”practical” IP anycast service, however, requires a number
of features that we don’t have space to describe in detail. For
example, the need for scoping whereby packets from clients
in a domain (enterprise) are always served by targets within
the domain. This can be achieved by deploying a PIAS proxy
in the domain, or simply by deploying intra-domain native IP
anycast.
Another important issue is security. The IP routing infras-
tructure is secured router-by-router through human super-
vision of router conﬁguration. This makes routing security
error-prone and unreliable. Since PIAS involves advertising
a preﬁx into inter-domain routing, it is aﬄicted by the same
issues. However, it is important to note that PIAS does not
worsen the situation. Also, the fact that from the routing
point of view, an anycasted autonomous system is akin to a
multi-homed autonomous system implies that any future so-
lution for routing security would apply directly to the PIAS
deployment.
PIAS, however, does need to explicitly secure its join and
leave primitives. The fact that these primitives are to be used
by group members who have an explicit contract with the
anycast service provider implies that we could use standard
admission control schemes; for example PIAS could adapt
any of a number of network or wireless authentication proto-
cols like EAP [39]. Previous work on using overlays to pro-
tect speciﬁc targets from DOS attacks [40] described some
approaches to allow controlled access to the overlay.
An assumption implicit in PIAS’s claim of incurring mini-
mal stretch (section 4.3) is the proximity of the client to the
IAP and of the server to the JAP. This assumption is justiﬁed
by the fact that these relations are discovered using native IP
13Details withheld for lack of space.
BERKELEY
I1-B
POP with
a server
AS PATH [J]
NEW YORK
Native IP
Anycast
Packets
I1-NY
C
  Routing 
Advertisement
AS PATH [I2,J]
I2-B
ISP 2 (I2)
I2-NY
POP without
 a server
Figure 9: Native IP anycast ineﬃciency - packets
from client C in New York destined to the native IP
anycast address are routed to the anycast server in
Berkeley, even though there is a server in New York
anycast and hence, the distances are small in terms of metrics
used by inter-domain routing. However, this does not neces-
sarily imply that the distances are small in terms of latency.
As a matter of fact, preliminary measurements done by us
show that the assumption does not hold for the j-root server
anycast deployment. We found that native IP anycast does
not do a great job of selecting close-by locations, at least not
for the j-root server deployment. For example, 40% of the
measured clients experienced a stretch of more than 4 when
accessing the anycasted j-root. The measurement methodol-
ogy and the results are detailed in [41].
We believe the ineﬃcacy of anycast when selecting close-
by root-servers might be due to the way the j-root servers
have been deployed - all 13 anycasted servers for j-root are
placed in POPs of diﬀerent ISPs. A possible problem with
this approach is illustrated in ﬁgure 9. The ﬁgure shows 2 ISP
networks- I1 and I2, each having a POP in New York and
in Berkeley.
It also shows a native IP anycast deployment
(AS number J) with two servers - one hosted at the New
York POP of I2 (I2-NY) and the other at the Berkeley POP
of I1 (I1-B). The ﬁgure has these POPs highlighted. The
anycast servers have an EBGP relation with the routers of
the hosting POP; hence, the anycast preﬁx is advertised with
J as the origin AS. Now, if a client (C) in the New York area
sends packets to the anycast address and these reach POP I1-
NY, they will be routed to the server hosted at I1-B. This is
because the routers in I1-NY would prefer the 1 AS-hop path
([J]) through I1-B to the anycasted server over the 2 AS-hop
path ([I2,J]) through I2-NY. Note that the anycasted server
hosted at I1-B represents a customer of I1 and so, it would be
very uncommon for I1 to steer these packets towards I2-NY
due to local policies (local preference values); rather the AS
path length would dictate the path.
Although negative, the importance of the result cannot be
overemphasized. It brings out the fact that a naive proxy de-
ployment might not achieve low-latency client-IAP and JAP-
target paths. Also, an unveriﬁed implication of the above
analysis is that for good performance, an ISP that is part
of the deployment14 should be suﬃciently covered, i.e., there
should be clusters at a decent number of POPs of the ISP.
For example, deployment of the two servers in the ﬁgure at
both of the POPs of I1 (I1-NY and I1-B) or I2 (I2-NY and
I2-B) would avoid the problem of long paths. We believe that
such an approach would ensure that the client-IAP and the
target-JAP segments are latency-wise small - something that
can only be substantiated when we get the PIAS deployment
going
14the ISP has at least one POP hosting a proxy cluster
8. CONCLUSIONS
In this paper, we propose a proxy based IP anycast service
that addresses most of the limitations of native IP anycast.
Speciﬁcally, the primary contribution of this paper is the de-
sign of PIAS, a practically deployable IP anycast architec-
ture. The unique features of PIAS such as the scalability by
the size and dynamics of groups mean that it opens up new
avenues of anycast usage. The purported scalability has been
substantiated through simulations representing extreme, but
real, workloads. Simulations on the real tier-1 topology of
the Internet point to the eﬃciency of our approach.
The fact that PIAS uses native IP anycast means that it
can be used as a simple and general means of discovery and
bootstrapping. Internet measurements against the anycasted
DNS root servers show that the reliance on native IP anycast
does not undermine PIAS’s ability to support connection ori-
ented services. A PIAS prototype has been built and the de-
ployment eﬀorts are underway. We feel conﬁdent that PIAS
has the potential of fulﬁlling the need for a generic Internet-
wide anycast service that can serve as a building block of
many applications, both old and new.
Acknowledgements
We are grateful to Xinyang Zhang for help with the simu-
lations and to David Anderson for design discussions. We
would also like to thank the anonymous reviewers for their
feedback. This material is based upon work supported by
AFOSR MURI and IAI AFOSR/AFRL under award numbers
F49620-02-1-0233 and F49620-02-1-0170 respectively. Any
opinions, ﬁndings, and conclusions or recommendations ex-
pressed in this publication are those of the authors and do
not necessarily reﬂect the views of the agencies above.
9. REFERENCES
[1] C. Partridge, T. Mendez, and W. Milliken, “RFC 1546 - Host
Anycasting Service,” November 1993.
[2] T. Hardy, “RFC 3258 - Distributing Authoritative Name Servers
via Shared Unicast Addresses,” April 2002.
[3] J. Abley, “Hierarchical Anycast for Global Service Distribution,”
ISC Technical Note ISC-TN-2003-1
www.isc.org/tn/isc-tn-2003-1.html.
[4] D. Kim, D. Meyer, H. Kilmer, and D. Farinacci, “RFC 3446 -
Anycast Rendevous Point (RP) mechanism using Protocol
Independent Multicast (PIM) and Multicast Source Discovery
Protocol (MSDP),” January 2003.
[5] D. Katabi, “The Use of IP-Anycast for Building Eﬃcient
Multicast Trees,” in Proc. of Global Telecommunications
Conference, 1999.
[6] C. Huitema, “RFC 3068 - An Anycast Preﬁx for 6to4 Relay
Routers,” June 2001.
[7] “AS112 Project Home Page,” www.as112.net.
[8] R. Hinden and S. Deering, “RFC 3513 - Internet Protocol
Version 6 (IPv6) Addressing Architecture,” April 2003.
[9] Akamai Technologies Inc., “Internet Bottlenecks: the Case for
Edge Delivery Services,” 2000, www.akamai.com/en/resources/
pdf/whitepapers/Akamai Internet Bottlenecks Whitepaper.pdf.
[10] B. Greene and D. McPherson, “ISP Security: Deploying and
Using Sinkholes,” www.nanog.org/mtg-0306/sink.html, June
2003, NANOG TALK.
[11] D. R. Karger, E. Lehman, F. T. Leighton, R. Panigrahy, M. S.
Levine, and D. Lewin, “Consistent Hashing and Random Trees:
Distributed Caching Protocols for Relieving Hot Spots on the
World Wide Web.” in Proc. of STOC, 1997.
[12] R. Rodrigues, B. Liskov, and L. Shrira, “The design of a robust
peer-to-peer system,” in Proc. of the Tenth ACM SIGOPS
European Workshop, September 2002.
[13] A. Gupta, B. Liskov, and R. Rodrigues, “One Hop Lookups for
[15] L. Subramanian, S. Agarwal, J. Rexford, and R. H. Katz,
“Characterizing the Internet Hierarchy from Multiple Vantage
Points.” in Proc. of INFOCOM, 2002.
[16] N. Spring, R. Mahajan, and T. Anderson, “Quantifying the
Causes of Path Inﬂation,” in Proc. of ACM SIGCOMM, August
2003.
[17] Z. M. Mao, R. Govindan, G. Varghese, and R. H. Katz, “Route
ﬂap damping exacerbates Internet routing convergence,” in Proc.
of ACM SIGCOMM, 2002.
[18] J. Abley, “A Software Approach to Distributing Requests for
DNS Service Using GNU Zebra, ISC BIND 9, and FreeBSD,” in
Proc. of USENIX Annual Technical Conference, FREENIX
Track, 2004.
[19] T. S. E. Ng and H. Zhang, “Predicting Internet Network
Distance with Coordinates-Based Approaches.” in Proc. of
INFOCOM, 2002.
[20] F. Dabek, R. Cox, F. Kaashoek, and R. Morris, “Vivaldi: a
decentralized network coordinate system,” in Proc. of ACM
SIGCOMM, 2004.
[21] C. Alaettinoglu and S. Casner, “Detailed Analysis of ISIS
Routing Protocol on the Qwest Backbone,” February 2002,
NANOG TALK.
[22] A. J. Ganesh, A.-M. Kermarrec, and L. Massoulie, “SCAMP:
Peer-to-Peer Lightweight Membership Service for Large-Scale
Group Communication,” in Proc. of the Third International
COST264 Workshop on Networked Group Communication,
2001.
[23] D. Kostic, A. Rodriguez, J. Albrecht, and A. Vahdat, “Bullet:
high bandwidth data dissemination using an overlay mesh,” in
Proc. of the Nineteenth ACM Symposium on Operating
Systems Principles, 2003.
[24] B. Chun, D. Culler, T. Roscoe, A. Bavier, L. Peterson,
M. Wawrzoniak, and M. Bowman, “PlanetLab: An Overlay
Testbed for Broad-Coverage Services,” ACM SIGCOMM
Computer Communication Review, vol. 33, no. 3, pp. 3–12, July
2003.
[25] “ISC F-Root Sites,” www.isc.org/index.pl?/ops/f-root/.
[26] P. Barber, M. Larson, M. Kosters, and P. Toscano, “Life and
Times of J-Root,” www.nanog.org/mtg-0410/kosters.html,
October 2004, NANOG TALK.
[27] R. Bush, Mailing list posting www.ripe.net/ripe/maillists/
archives/routing-wg/2004/msg00183.html.
[28] K. Sripanidkulchai, A. Ganjam, B. Maggs, and H. Zhang, “The
feasibility of supporting large-scale live streaming applications
with dynamic application end-points,” in Proc. of ACM
SIGCOMM, 2004.
[29] X. Zhang, J. Wang, and P. Francis, “Scaling the Internet
through Tunnels,” pias.gforge.cis.cornell.edu/tbgp.pdf.
[30] “SSFNet,” www.ssfnet.org/homePage.html.
[31] “Netﬁlter,” www.netﬁlter.org.
[32] E. Basturk, R. Haas, R. Engel, D. Kandlur, V. Peris, and
D. Saha, “Using IP Anycast For Load Distribution And Server
Location,” in Proc. of IEEE Globecom Global Internet Mini
Conference, November 1998.
[33] S. Matsunaga, S. Ata, H. Kitamura, and M. Murata,
“Applications of IPv6 Anycasting,”
draft-ata-ipv6-anycast-app-00, February 2005.
[34] D. Katabi and J. Wroclawski, “A framework for scalable global
IP-anycast (GIA),” in Proc. of ACM SIGCOMM, 2000.
[35] E. W. Zegura, M. H. Ammar, Z. Fei, and S. Bhattacharjee,
“Application-layer anycasting: a server selection architecture
and use in a replicated Web service,” IEEE/ACM Trans. Netw.,
vol. 8, no. 4, pp. 455–466, 2000.
[36] Z. Fei, S. Bhattacharjee, E. W. Zegura, and M. H. Ammar, “A
Novel Server Selection Technique for Improving the Response
Time of a Replicated Service.” in Proc. of INFOCOM, 1998.
[37] I. Stoica, D. Adkins, S. Zhuang, S. Shenker, and S. Surana,
“Internet Indirection Infrastructure,” in Proc. of ACM
SIGCOMM, 2002.
[38] “Mobility for IPv6 (mip6), IETF Working Group Charter,”
www.ripe.net/ripe/maillists/archives/routing-wg/2004/
msg00183.html.
[39] B. Aboba, L. Blunk, J. Vollbrecht, J. Carlson, and
H. Levkowetz, “RFC 3748 - Extensible Authentication Protocol
(EAP),” June 2004.
Peer-to-Peer Overlays,” in Proc. of 9th Workshop on Hot
Topics in Operating Systems, May 2003.
[40] A. D. Keromytis, V. Misra, and D. Rubenstein, “SOS: secure
overlay services.” in Proc. of ACM SIGCOMM, 2002.
[14] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris,
[41] H. Ballani and P. Francis, “Root-Server Anycast Deployment: A
“Resilient overlay networks,” in Proc. of the eighteenth ACM
Symposium on Operating Systems Principles, 2001.
Meaurement Study,” pias.gforge.cis.cornell.edu/am.pdf.