connectingtheoutputsofthetasksGetConferenceInformationandGetUserInformation
with inputs of the task Travel Reservation, and then connecting the outputs of the task
TravelReservationwiththeinputsofthetaskHotelReservation.Tofacilitatethiswork,a
workflow designer should be assisted by mechanisms that suggest the establishment of a
connectionbetweenoutputsandinputsthatmaximizesthedegreeofintegration.
3. WorkflowtasksandWebservicetasks
WerelyontheuseofontologiestosemanticallydescribetaskandWebserviceinterfaces.
Semanticshavebeenastrongcandidateforincreasingthesuccessofinformationdiscovery
andintegrationontheInternet;itsusehasbeenpresentedasthenextstepintheevolution
oftheWorldWideWeb(FenselandMusen,2001).
Theimportanceofontologiesisbeingrecognizedinresearchfieldsasdiverseasknowl-
edgeengineering,knowledgerepresentation,qualitativemodeling,languageengineering,
database design, information modeling, information integration, object-oriented analysis,
informationretrievalandextraction,knowledgemanagementandorganization,andagent-
based systems design (Guarino, 1998). Ontologies are introduced as an “explicit specifi-
cationofaconceptualization”(Gruber,1993).Theuseofontologiesfortheexplicationof
knowledge is a possible approach to overcome the problem of integrating heterogeneous
workflowtasksandWebservices.
3.1. Ontologies
Anontology(cid:4) ={c ,...,c }containsasetofclasses.Eachclassc hasanassociatedset
i 1 n j
ofproperties{p ,...,p }.Eachpropertyhasarangeindicatingarestrictiononthevalues
1 m
the property can take. An ontology relates more specific concepts to more general ones
(fromwhichgenericinformationcanbeinherited).Suchlinkshavebeenvariouslynamed
“isa,”“subsetof,”“memberof,”“subconceptof,”“superconcept,”etc.Suchlinksareused
SEMANTICE-WORKFLOWCOMPOSITION 197
to organize concepts into a hierarchy or some other partial ordering, called “taxonomy.”
The taxonomy is used for storing information at appropriate levels of generality and au-
tomatically making it available to more specific concepts by means of a mechanism of
inheritance.Moregeneralconceptsinsuchapartialorderaresaidtosubsumemorespecific
concepts, and a more specific concept is said to inherit information from its subsumers.
Thenotionofontologicalconceptsisverysimilartothenotionofclassesinobject-oriented
programming.
Inourimplementation,tasksandWebservicesinterfacesaresemanticallydescribedby
concepts(classes)thataredefinedinontologiesconstructedwithDAML+OIL(Horrocks
etal.,2001).OurapproachisnotdependentonDAML+OIL;otherontologyrepresentation
languagescouldbeemployed.
3.2. Extendingworkflowtasksspecifications
In most workflow systems, each task is described by several elements which typically
include a name, a type, a list of input parameters and output parameters, a short textual
description,andataskrealization(implementation).Ataskinvocationspecifiesthenumber
ofinputparametersthatmustbesuppliedforapropertaskrealizationandthenumberof
outputsparameterstoholdandtransfertheresultsofthetaskrealizationtoothertasks.In
their simplest form, the input and output parameters can be represented by attributes, or
data components. Attributes are specified with an attribute name, a type, and an optional
initialvalue.Examplesofbuilt-inprimitivetypesincludeboolean,string,byte,integer,and
real.Datacomponentsarerepresentedbyclassescomposedofacollectionofattributes.
ToenhancetheintegrationoftasksandWebservices,workflowcomponentsneedtohave
their inputs and outputs associated with ontological concepts to facilitate the resolution
of structural and semantic heterogeneity. Figure 3 illustrates the establishment of such a
mapping.
Each input and output data class parameter of a task is associated with an ontological
concept class. We assume that each attribute of a data class must have a corresponding
propertythatbelongstotheassociatedconceptclass.Thisassumptioncanbefurtherrelaxed
by considering work in schematic heterogeneity (Kashyap and Sheth, 1996) and schema
mapping(Madhavanetal.,2001).
Primitive data types of attributes (such as byte and double) are represented in the on-
tologybypropertieswhichreferencedatatypesdefinedintheXMLSchemaspecification
(XMLSchema,2001).Itwouldhavebeenpossibletoassociateprimitivebuilt-indatatypes
withontologicalconceptsorproperties.Nevertheless,wehavechosenXMLSchemabe-
causeitprovidesacomprehensivedatatypehierarchy,whichincludesunsignedbyte,short,
decimal,non-negativeinteger,string,andbase64binary.
3.3. Webservicespecification
The emergence and challenges of e-services have directed the development and creation
ofmechanismstosupportWebservices.Onefundamentalissueistheirspecification.Two
mainapproacheshavebeenproposed.Oneoftheapproachesusesdeclarativeandstructured
198 CARDOSOANDSHETH
.stpecnochtiwstuptuodnastupniksatfonoitaicossA
.3erugiF
SEMANTICE-WORKFLOWCOMPOSITION 199
databasedpurelyonsyntax,suchasWSDL(Christensenetal.,2001)andXLANG(Thatte,
2001).AsecondapproachprovidesasemanticorientationtothedescriptionofWebservices.
ThisisthecaseintheDAML-Sspecification(Ankolekaretal.,2001).
Webservicesare“self-contained,self-describingmodularapplicationsthatcanbepub-
lished,located,andinvokedacrosstheWeb”(Tidwell,2000)andthereforeareamodern
alternativetothespecificationofworkflowtasks.Sincetheyareself-described,theinterop-
erationamongindependentlydevelopedWebservicesisfacilitated.Traditionalworkflow
tasks,suchasnon-transactional,transactional,andhumantasks(Kochutetal.,1999)can
easilyberepresentedorencapsulatedwithWebservices.
As with WSMF (Fensel and Bussler, 2002), our approach to e-workflow composition
is not dependent on the method chosen to specify Web services. Therefore, any of the
specificationlanguagesmentionedabovecanbeemployed.Fortheprototypethatwehave
developedwehaveselectedtheDAML-Sspecification;moreprecisely,weusetheService
Profileontology.
TheserviceprofileontologydescribesthefunctionalityofaWebservice.Ittells“whatthe
servicedoes”(Ankolekaretal.,2001)andisemployedtoadvertiseWebservicesavailability
andcapability.WehavedecidedtouseDAML-Sbecauseweneedtoestablishassociations
among the inputs and outputs parameters of a Web service with ontological concepts. In
figure4wegiveapartialexampleofthespecificationofaWebserviceusingDAML-S.
OneoftheserviceinputsisthePreferredClass,andoneoftheoutputsistheTripItinerary.
Bothofthemrefertoconceptsdefinedintheontologyitinerary-ont.daml.
3.4. Operationalmetrics
TheoperationalmetricsoftasksandWebservicesaredescribedusingaQoSmodel.Forus,
QoSrepresentsthequantitativeandqualitativecharacteristicsofane-workflowapplication
which are necessary to achieve a set of initial requirements. E-workflow QoS addresses
theoperationalissuesofworkflows,ratherthanworkflowprocessfunctions.Quantitative
- 
- 
PreferredClass
- 
- 
TripItinerary
Figure4. WebservicespecificationusingDAML-S.
200 CARDOSOANDSHETH
characteristicscanbeevaluatedintermsofconcretemeasuressuchasworkflowexecution
time,cost,reliability,etc.Qualitativecharacteristicsspecifytheexpectedservicesoffered
by the system such as security and fault-tolerance mechanisms. QoS should be seen as
anintegralaspectofworkflows,andthereforeitshouldbeintegratedwithtasksandWeb
servicesspecifications.
While the DAML-S specification that we use includes constructs to specify quality of
service parameters, such as quality guarantees, quality rating, and degree of quality, the
specificationdoesnotprovideadetailedsetofclassesandpropertiestorepresentqualityof
servicemetrics.Themodelneedstobeextendedtoallowforaprecisecharacterizationof
eachdimensioninordertopermittheimplementationofalgorithmsfortheautomaticcom-
putationofQoSmetricsofprocessesbasedontheirsub-processes’QoSmetrics.Therefore,
wehavedevelopedourownmodel.
We have investigated relevant work to determine which dimensions would be relevant
tocomposeamoresuitableQoSmodelfortheautomaticcomputationofQoSmetrics.We
haveconstructedamodelcomposedofthefollowingdimensions:time,cost,reliability,and
fidelity(Cardosoetal.,2002b).Sincefidelityissubjecttojudgmentsandperceptions,we
havedecidedtoomititsspecificationandanalysisinthispaper.Nevertheless,athorough
studycanbefoundinCardosoetal.(2002a).
WhileinthispaperwedonotdiscussthecomputationofQoSmetrics,comprehensive
solutionstothedifficultproblemsencounteredinsynthesizingQoSforcompositeservices
arediscussedindetailinCardosoetal.(2002b).Thispaperpresentsastochasticworkflow
reductionalgorithmforcomputingaggregateQoSpropertiesstep-by-step.
3.4.1.QoSdimensions. Basedonourmodel,wehavedevelopedontologyforthespeci-
ficationofQoSmetrics(fortasksandWebservices).
Timeisacommonanduniversalmeasureofperformance.Taskresponsetime(T)corre-
spondstothetimeaworkflowinstancetakestobeprocessedbyatask.Thetaskresponse
timecanbebrokendownintotwomajorcomponents:delaytime(DT)—thenon-value-add
timeneededinorderforaninstancetobeprocessedbyataskandprocesstime(PT)—the
timeaworkflowinstancespendsatataskwhilebeingprocessed.
Cost (C) represents the cost associated with the execution of workflow tasks. During
workflowdesign,priortoworkflowinstantiationandduringworkflowexecutionitisneces-
sarytoestimatethecostofitsexecutiontoguaranteethatfinancialplansarefollowed.Itcan
bebrokendownintotwomajorcomponents:enactmentcostandtaskrealizationcost.The
enactment cost (EC) is the cost associated with the management of the workflow system
and workflow instances monitoring. The task realization cost (RC) is the cost associated
withtheruntimeexecutionofthetask.
TaskReliability(R)correspondstothelikelihoodthatthecomponentswillperformwhen
theuserdemandsthem.Itisafunctionofthefailurerate.Eachtaskstructurehasaninitial
state,anexecutionstate,andtwodistinctterminatingstates.Oneofthestatesindicatesthata
taskhasfailedorwasaborted,whiletheotherstateindicatesthatataskisdoneorcommitted
(Krishnakumar and Sheth, 1995). This QoS dimension provides information concerning
therelationshipbetweenthenumberoftimesthestatedone/committedisreached,andthe
numberoftimesthefailed/abortedstateisreached.Todescribetaskreliabilitywefollow
SEMANTICE-WORKFLOWCOMPOSITION 201
Table1. TaskQoSforamanualtask.
Basicclass Distributionalclass
Minvalue Avgvalue Maxvalue Dist.function
Time 192 196 199 Normal(196,1)
Cost 576 576 576 576.0
Reliability 100% 100% 100% 1.0
a discrete-time modeling approach. Discrete-time models are adequate for systems that
respond to occasional demands, such as database systems. We use the stable reliability
modelproposedbyNelson(1973),forwhichthereliabilityofataskt is R(t)=1—failure
rate.
3.4.2. Dimensions characterization. For each dimension, the description of the opera-
tional runtime behavior of a task is composed of two classes of information: basic and
distributional.
Thebasicclassassociateswitheachtask’sQoSdimensiontheminimumvalue,average
value,andmaximumvaluethedimensioncantake.Forexample,thecostdimensioncor-
respondstotheminimum,average,andmaximumcostassociatedwiththeexecutionofa
task.
Thesecondclass,thedistributionalclass,correspondstothespecificationofaconstantor
ofadistributionfunction(suchasExponential,Normal,Weibull,orUniform)whichstatisti-
callydescribestaskbehavioratruntime.Thevaluesspecifiedinthebasicclassaretypically
employedbymathematicalmethodsinordertocomputeworkflowQoSmetrics,whilethe
distributionalclassinformationisusedbysimulationsystemstocomputeworkflowQoS.
Table1showsanexampleofthespecificationofQoSmetricsforataskfromagenomic
workflow(Cardosoetal.,2002a).
4. Thee-workflowcompositionprocess
Thecompositionofe-workflowsdiffersslightlyfromthedesignoftraditionalworkflows.
A typical scenario of the composition process is as follows. The designer composes an
e-workflow for which several traditional workflow tasks (e.g. human, non-transactional,
andtransactionaltasks)andWebservicetaskshavealreadybeenplacedandinterconnected
onthecanvas.Taskswitharealizationarecalledgroundedtasks(GT).Whenthedesigner
wishestoaddaWebservicetotheworkflow,hestartsbycreatingaservicetemplate(ST)—
seeSection4.1fortheformalspecificationofaST.TheSTwillbeemployedlatertofindan
appropriateWebservice.OnceaSTiscreated,itissenttotheWebservicediscoverymodule,
which returns a set of service object (SO) references that are ranked according to their
degreeofsimilarity—syntactic,operational,orsemanticwithST.Thedesignerthenselects
themostappropriateWebservicetoaccomplishhisobjectives(Section6showsanexample
oftheSOsretrievedfromthediscoveryprocess).Theselectionautomaticallyassociatesa
202 CARDOSOANDSHETH
Figure5. GT,ST,andSOstructures.
realizationwiththeST,causingittochangeitsstatetoagroundedtask.Additionally,aset
ofdatamappingispresentedtothedesignersuggestingapossibleinterconnectionamong
thenewlycreatedtaskinterfacesandthegroundedtaskinterfaces.
TheconstructionofaSTisillustratedinfigure5.TheoutputsoftheGTsGetConference
Information and Get User Information (Date, Duration, City, User Name, and Address)
are employed to construct the outputs of the ST. The input of the GT Hotel Reservation
(Itinerary)isemployedtoconstructtheinputsoftheST.Theusermanuallysetsthename,