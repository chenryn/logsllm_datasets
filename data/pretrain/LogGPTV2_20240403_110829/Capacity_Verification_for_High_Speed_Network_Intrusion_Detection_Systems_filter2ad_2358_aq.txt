script to launch all these attacks. Thus, it is possible that the attacker(s) simply launch all
the attacks, hoping one of them would succeed. Though these alerts are indeed related,
these prepare-for relations reveal that our method is aggressive in correlating alerts. In-
deed, alert correlation is to recover the relationships between the attacks behind alerts;
any alert correlation method may make mistakes when there is not enough information.
There are several other interesting strategies; however, due to space reasons, we do
not list them here.
One interesting observation is that with clustering constraint Cc2, there is not many
hyper-alert correlation graphs with more than 3 stages. Considering the fact that there are
many alerts about BackOriﬁce and NetBus (which are tools to remotely manage hosts),
we suspect that many attackers used multiple machines during their attacks. Thus, their
strategies cannot be reﬂected by the restricted hyper-alert correlation graphs.
When relax the restriction to allow hyper-alert correlation graphs involving different
source IP but still with the same destination IP addresses (i.e., with clustering constraint
Cc1), we have graphs with more stages. Figure 6 is one such fully reduced hyper-alert
correlation graph. However, due to the amount of alerts and source IP addresses involved
Analyzing Intensive Intrusion Alerts via Correlation
93
in this graph, it is difﬁcult to conclude which hyper-alerts belong to the same sequences
of attacks.
In summary, during the analysis of the DEF CON 8 CTF dataset, the utilities have
greatly simpliﬁed the analysis process. We have discovered several attack strategies that
were possibly used during the attacks. However, there are a number of situations where
we could not separate multiple sequences of attacks. This implies that additional work
is necessary to address this problem.
6 Conclusion and Future Work
In this paper, we presented three utilities, adjustable graph reduction, focused analysis,
and graph decomposition, which were developed to facilitate the analysis of large sets
of correlated alerts. We studied the effectiveness of these utilities through a case study
with the DEF CON 8 CTF dataset [10]. Our results show that these utilities can simplify
the analysis of large amounts of alerts. In addition, our analysis reveals several attack
strategies that are repeatedly used in the DEF CON 8 CTF event.
Due to the nature of the DEF CON 8 CTF dataset, we were unable to evaluate the
successful rate of the alert correlation method. Although we have found several attack
strategies, we also encountered several situations where it is difﬁcult to conclude about
attack strategies. Indeed, a hyper-alert correlation graph is an approximation to a real
attack strategy. Thus, the hyper-alert correlation method and the three utilities should be
used with caution.
Our future work includes several problems, including seeking more techniques to
improve alert correlation, automating the analysis process, further reﬁnement of our
toolkit, and systematic development of hyper-alert types. We also plan to analyze alert
streams from operational networks such as the NC State University campus network.
Acknowledgement. This work is partially supported by the U.S. Army Research Of-
ﬁce under grant DAAD19-02-1-0219, by the National Science Foundation under grant
0207297, and by NCSU Center for Advanced Computing & Communication. The au-
thors would like to thank the anonymous reviewers for their valuable comments.
References
1. Javits, H., Valdes, A.: The NIDES statistical component: Description and justiﬁcation. Tech-
nical report, SRI International, Computer Science Laboratory (1993)
2. Vigna, G., Kemmerer, R.A.: NetSTAT: A network-based intrusion detection system. Journal
of Computer Security 7 (1999) 37–71
3. Valdes, A., Skinner, K.: Probabilistic alert correlation. In: Proceedings of the 4th International
Symposium on Recent Advances in Intrusion Detection (RAID 2001). (2001) 54–68
4. Debar, H., Wespi, A.: Aggregation and correlation of intrusion-detection alerts. In: Recent
Advances in Intrusion Detection. LNCS 2212 (2001) 85 – 103
5. Dain, O., Cunningham, R.: Fusing a heterogeneous alert stream into scenarios. In: Proceedings
of the 2001 ACM Workshop on Data Mining for Security Applications. (2001) 1–13
94
P. Ning, Y. Cui, and D.S. Reeves
6. Ning, P., Reeves, D.S., Cui, Y.: Correlating alerts using prerequisites of intrusions. Techni-
cal Report TR-2001-13, North Carolina State University, Department of Computer Science
(2001)
7. Ning, P., Cui, Y.: An intrusion alert correlator based on prerequisites of intrusions. Techni-
cal Report TR-2002-01, North Carolina State University, Department of Computer Science
(2002)
8. MIT Lincoln Lab: 2000 DARPA intrusion detection scenario speciﬁc datasets.
http://www.ll.mit.edu/IST/ideval/data/2000/2000 data index.html (2000)
9. Manganaris, S., Christensen, M., Zerkle, D., Hermiz, K.: A data mining analysis of RTID
alarms. Computer Networks 34 (2000) 571–577
10. DEFCON: Def con capture the ﬂag (CTF) contest. http://www.defcon.org/html/defcon-8-
post.html (2000) Archive accessible at http://wi2600.org/mediawhore/mirrors/shmoo/.
11. Bace, R.: Intrusion Detection. Macmillan Technology Publishing (2000)
12. Staniford, S., Hoagland, J., McAlerney, J.: Practical automated detection of stealthy portscans.
To appear in Journal of Computer Security (2002)
13. Templeton, S., Levit, K.: A requires/provides model for computer attacks. In: Proceedings
of New Security Paradigms Workshop, ACM Press (2000) 31 – 38
14. Cuppens, F., Miege, A.: Alert correlation in a cooperative intrusion detection framework. In:
Proceedings of the 2002 IEEE Symposium on Security and Privacy. (2002)
15. Staniford-Chen, S., Cheung, S., Crawford, R., Dilger, M., Frank, J., Hoagland, J., Levitt, K.,
Wee, C., Yip, R., Zerkle, D.: GrIDS - a graph based intrusion detection system for large
networks. In: Proceedings of the 19th National Information Systems Security Conference.
Volume 1. (1996) 361–370
16. Ilgun, K., Kemmerer, R.A., Porras, P.A.: State transition analysis: A rule-based intrusion
detection approach. IEEE Transaction on Software Engineering 21 (1995) 181–199
17. Cuppens, F., Ortalo, R.: LAMBDA: A language to model a database for detection of attacks.
In: Proc. of Recent Advances in Intrusion Detection (RAID 2000). (2000) 197–216
18. Lin, J., Wang, X.S., Jajodia, S.: Abstraction-based misuse detection: High-level speciﬁca-
tions and adaptable strategies. In: Proceedings of the 11th Computer Security Foundations
Workshop, Rockport, MA (1998) 190–201
19. Ning, P., Jajodia, S., Wang, X.S.: Abstraction-based intrusion detection in distributed envi-
ronments. ACM Transactions on Information and System Security 4 (2001) 407–452
20. Gruschke, B.: Integrated event management: Event correlation using dependency graphs. In:
Proceedings of the 9th IFIP/IEEE International Workshop on Distributed Systems: Operations
& Management. (1998)
21. Ricciulli, L., Shacham, N.: Modeling correlated alarms in network management systems. In:
In Western Simulation Multiconference. (1997)
22. Gardner, R., Harle, D.: Pattern discovery and speciﬁcation translation for alarm correlation.
In: Proceedings of Network Operations and Management Symposium (NOMS’98). (1998)
713–722
23. ISS, Inc.: RealSecure intrusion detection system. (http://www.iss.net)
24. AT & T Research Labs: Graphviz - open source graph layout and drawing software.
(http://www.research.att.com/sw/tools/graphviz/)
A Mission-Impact-Based Approach to
INFOSEC Alarm Correlation1
Phillip A. Porras, Martin W. Fong, and Alfonso Valdes
SRI International
333 Ravenswood Avenue
Menlo Park, CA 94025-3493
{porras,mwfong,valdes}@sdl.sri.com
Abstract. We describe a mission-impact-based approach to the analysis of se-
curity alerts produced by spatially distributed heterogeneous information secu-
rity (INFOSEC) devices, such as firewalls, intrusion detection systems, authen-
tication services, and antivirus software.  The intent of this work is to deliver an
automated  capability  to  reduce  the  time  and  cost  of  managing  multiple
INFOSEC devices through a strategy of topology analysis, alert prioritization,
and common attribute-based alert aggregation.  Our efforts to date have led to
the development of a prototype system called the EMERALD Mission Impact
Intrusion  Report  Correlation  System,  or  M-Correlator.    M-Correlator  is  in-
tended  to  provide  analysts  (at  all  experience  levels)  a  powerful  capability  to
automatically fuse together and isolate those INFOSEC alerts that represent the
greatest threat to the health and security of their networks.
Keywords:  Network  security,  intrusion  report  correlation,  alert  management,
alert prioritization.
1   Introduction
Among the most visible areas of active research in the intrusion detection community
is  the  development  of  technologies  to  manage  and  interpret  security-relevant  alert
streams produced from an ever-increasing number of INFOSEC devices.   While the
bulk  of  the  work  in  security  alert  management  and  intrusion  report  correlation  has
spawned  from  the  intrusion  detection  community,  this  paper  takes  a  much  broader
definition  of  alert  stream  contributors.    Over  recent  years,  the  growing  number  of
security enforcement services, access logs, intrusion detection systems, authentication
servers,  vulnerability  scanners,  and  various  operating  system  and  applications  logs
have given administrators a potential wealth of information to gain insight into secu-
rity-relevant activities occurring within their systems.  We broadly define these vari-
ous security-relevant log producers as INFOSEC devices, and recognize them as hav-
ing  potential  contributions  to  the  problems  of  security  incident  detection  and  confi-
dence reinforcement in discerning the credibility of INFOSEC alarms.
1 Supported by DARPA through Air Force Research Laboratory, contract F30602-99-C-0187.
A. Wespi, G. Vigna, and L. Deri (Eds.): RAID 2002, LNCS 2516, pp. 95-114, 2002.
© Springer-Verlag Berlin Heidelberg 2002
96
P.A. Porras, M.W. Fong, and A. Valdes
Unfortunately, this broader view of alert stream contributors adds to the complexity
facing intrusion report correlation systems. INFOSEC devices range greatly in func-
tion,  even  within  a  single  technology.  For  example,  within  the  intrusion  detection
space, the variety of analysis methods that may be employed, the spatial distribution of
sensors, and their target event streams (network traffic, host audit logs, other applica-
tion logs), increases the difficulty in understanding the semantics of what each sensor
is reporting, as well as the complexity of determining equivalence among the intrusion
reports from different sensors.
The motivation for our work is straightforward: as we continue to incorporate and
distribute advanced security services into our networks, we need the ability to under-
stand the various forms of hostile and fault-related activity that our security services
observe as they help to preserve the operational requirements of our systems.   Today,
in  the  absence  of  significant  fieldable  technology  for  security-incident  correlation,
there are several challenges in providing effective security management for mission-
critical network environments:
•  Domain expertise is not widely available that can interpret and isolate high threat
operations  within  active  and  visible  Internet-connected  networks.    Also  not
widely available are skills needed to understand the conditions under which one
may merge INFOSEC alerts from different sources (e.g., merging firewall and OS
syslogs with intrusion detection reports).  In an environment where thousands (or
tens of thousands) of INFOSEC alarms may be produced daily, it is important to
understand redundancies in alert production that can simplify alert interpretation.
Equally important are algorithms for prioritizing which security incidents pose the
greatest administrative threats.
•  The sheer volume of INFOSEC device alerts makes security management a time-
consuming and therefore expensive effort [13].  There are numerous examples of
organizations  that  have  found  even  small  deployment  of  IDS  sensors  to  be  an
overwhelming  management  cost.      As  a  result,  these  IDS  components  are  often
tuned down to an extremely narrow and ad hoc selection of a few detection heu-
ristics, effectively minimizing the coverage of the IDS tool.
In managing INFOSEC devices, it is difficult to leverage potentially complemen-
tary information produce from heterogeneous INFOSEC devices.  For example, is
captured in a firewall log, is typically manually analyzed in isolation from poten-
tially relevant  alert  information  captured  by  an  IDS,  syslog,  or  other  INFOSEC
alert source.
• 
The remainder of this paper describes the design, implementation, and provides il-
two-year  research  study  of  IDS
lustrative  experiments  developed  during  a 
interoperability and intrusion report management that  address the above issues.
2   EMERALD M-Correlator Algorithm Overview
M-Correlator is designed to consolidate and rank a stream of security incidents rela-
tive to the needs of the analyst, given the topology and operational objectives of the
A Mission-Impact-Based Approach to INFOSEC Alarm Correlationˆ
97
protected  network.    The  first  phase  of  INFOSEC  alert  processing  involves  dynami-
cally controllable filters, which provide remote subscribers with an ability to eliminate
low-interest  alerts,  while  not  preventing  INFOSEC  devices  from  producing  these
alerts that may be of interest to other analysts.  Next, the alerts are vetted against the
known topology of the target network.  A  relevance score (Section 2.2) is produced
through a comparison of the alert target’s known topology against the known vulner-
ability  requirements  of  the  incident  type  (i.e.,  incident  vulnerability  dependencies).
Vulnerability  dependency  information  is  provided  to  M-Correlator  through  an  Inci-
dent  Handling  Fact  Base (Section 2.1). Next, a  priority  calculation  (Section  2.3)  is
performed per alert to indicate (a) the degree to which an alert is targeting a critical
asset or resource, and (b) the amount of interest the user has registered for this class of
security alert.  Last, an overall  incident  rank  (Section 2.4) is assigned  to  each  alert,
which provides a combined assessment of the degree to which the incident appears to
impact  the  overall  mission  of  the  network,  and  the  probability  that  the  activity  re-
ported in this alert was successful.
M-Correlator next attempts to combine related alerts with an attribute-based  alert
clustering algorithm (Section 3).  The resulting correlated incident stream represents a
filtered, lower-volume, content rich security-incident stream, with an incident-ranking
scheme that allows analysts to identify those incidents that pose the greatest risk to the
currently specified mission objectives of the monitored network.
2.1   An Incident Handling Fact Base
M-Correlator  includes  an  Incident  Handling  Fact  Base  that  provides  the  necessary
information to optimally interpret alert content against the  mission  specification  and
relevance  analysis.    The  incident  handling  fact  base  provides  critical  information
needed to
  Augment terse INFOSEC device alerts with meaningful descriptive information,
and associate alerts with M-Correlator-specific incident codes and classifications
  Understand  the  dependencies  of  incident  types  to  their  required  OS  versions,
hardware platform, network services, and applications
  Understand which incident types can be merged by the M-Correlator  alert  clus-
tering algorithm
Table  1  enumerates  the  field  definitions  of  entries  in  the  M-Correlator  incident
handling  fact  base.    Entries  in  this  fact  base  are  referenced  in  subsequent  sections,
which describe topology vetting, prioritization, incident ranking, and alert clustering.
The current M-Correlator fact base provides incident definitions for more than 1,000
intrusion report types from ISS’s Realsecure, Snort [20], the EMERALD [19] suite of
host  and  network-based  intrusion  detection  sensors,  and  Checkpoint’s  Firewall-1
product line.  Incident types that are not represented in this fact base can still be man-
aged and aggregated by the M-Correlator; however, the advanced alert clustering and
relevance calculations are not performed on alerts that are absent from this fact base.
98
P.A. Porras, M.W. Fong, and A. Valdes
Table 1.   Incident-Handling Fact-Base Field Definitions
Field Type
Incident Code
COTS Codes
Incident Class
Description
Vulnerable
OS and Hardware
Bound  Ports  and
Applications
Cluster List
References
Description
A  unique  code  to  indicate  incident  type.    These  codes  have  been
derived  from  the  original  Boeing/NAI  IDIP  incident  codes  that
were  used  by  the  Common  Intrusion  Detection  Framework  CISL
specification  [10].    A  mapping  between  this  incident  code  and
other  well-known  attack  code  specifications  such  as  Bugtraq  ID,
CERT  ID,  and  MITRE  CVE  codes  is  available  using  the  Refer-
ences field.
An equivalent code listing of well-known commercial off-the-shelf
(COTS)  incident  name  or  numeric  code  value  that  expresses  this
incident.
An M-Correlator general categorization scheme used for abstractly
registering interest in an incident that represents a common impact
to the system.  Incident types are associated with only one incident
class (see Section 2.3 for details).
Human-readable incident description.
OS type(s) and version(s), and hardware architectures required for
the successful invocation of the incident.
The list of required network services and applications that must be
enabled on the target of an alert for this incident type to succeed.
One  or  more  index  values  that  may  be  associated  with  incident
types.  Two alerts that share a common cluster name may be candi-
dates for merger should other attributes be aligned.
Bugtraq ID [3], CERT ID [4], Common Vulnerabilities and Expo-
sures (CVE) ID [2,6], available descriptive URL.
2.2   Relevance Formulation
M-Correlator maintains an internal topology map of the protected network, which is
dynamically  managed  by  the  analyst.    Automated  topology  map  generation  is  sup-
ported using Nmap [16], through which M-Correlator can identify the available assets
on the network, IP address to hostname mappings, OS type and version information,
active TCP and UDP network services per host, and hardware type.  Nmap can be run
on intervals to maintain an updated topology database, and this database can be dy-
namically inserted into the M-Correlator runtime process.  Given the topology  data-
base and the vulnerable OS, hardware, and bound ports fields of the incident-handling
knowledge  (Section  2.1),  M-Correlator  develops  a  relevance  score  that  assesses  per
alert, the likelihood of successful intrusion.
As each alert is processed by M-Correlator, the associated known dependencies for
that alert, as indicated within the incident handling fact base, are compared against the
configuration of the target machine.  Positive and negative matches against these re-
quired dependencies result in increased or decreased weighting of the relevance score,
A Mission-Impact-Based Approach to INFOSEC Alarm Correlationˆ
99
respectively.  Our model for calculating asset relevance may identify as many as five
attributes that match the known topology of the target host:
n  OS type and version
n  Hardware type
Service suite
n 
n  Enabled network service
n  Application