To display the type of a variable in Google App Engine (GAE) for debugging purposes, you might be used to using `print(type(x))` in a traditional environment. However, when attempting to use `self.response.out.write(str(type(x)))` in GAE, it may not work as expected, even though you have converted `<type 'type'>` to `<type 'str'>`. As a workaround, you are currently using `self.response.out.write(str(type(x) == type("123")))` to indirectly output the type information.

The confusion likely arises from how HTML is interpreted by the browser. When the browser encounters `<type 'str'>`, it treats it as an HTML tag, rendering it as `<type 'str'></type>`, which becomes part of the page's markup rather than displaying the actual text. This behavior can be observed using developer tools like Firebug or similar utilities.

To correctly display the type of a variable in the browser, you should escape the string to prevent the browser from interpreting it as an HTML tag. In Python, you can use the `html` module to escape special characters. Hereâ€™s how you can do it:

```python
import html

# Your variable
x = "example"

# Get the type of x and convert it to a string
type_str = str(type(x))

# Escape the string to ensure it is displayed as plain text
escaped_type_str = html.escape(type_str)

# Write the escaped string to the response
self.response.out.write(escaped_type_str)
```

By using `html.escape()`, you ensure that any special characters in the string are converted to their corresponding HTML entities, preventing the browser from misinterpreting the content as HTML tags. This should allow you to see the type of the variable directly in the browser.