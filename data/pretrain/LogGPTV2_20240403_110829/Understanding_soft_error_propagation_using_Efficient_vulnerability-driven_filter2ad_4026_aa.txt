title:Understanding soft error propagation using Efficient vulnerability-driven
fault injection
author:Xin Xu and
Man-Lap Li
Understanding 
Efficient 
Vulnerability-Driven 
Fault Injection 
Soft Error Propagation 
Using 
Department 
Xin  Xu and Man-Lap Li 
of Electrical  and  Computer 
Engineering 
School of Engineering 
and Applied Science 
George Washington 
University 
Washington, 
xuxin@gwmail
.gwu.edu 
DC  20052 
Abstract-Extreme 
CMOS scaling 
is expected 
to significantly 
campaign to focus on likely non-derated 
the evaluation 
becomes less 
T his paper makes the observation 
avoided to allow 
of the underlying 
number of errors 
of future microprocessors, 
hardware-software 
(SFI) 
fault injection 
statistical 
prompting 
cross-layer 
solutions. 
the error coverage 
because a significant 
effort on low-cost 
To evaluate, 
by SFI are often derated, 
and less efficient. 
impact the reliability 
recent research 
reliability 
is often used to estimate 
method. Unfortunately, 
injected 
rigorous 
that many derated errors can be gracefully 
the fault injection 
faults that stress the method-under-test. 
injection 
bility 
CriticalFault, 
by 29 % and 59 % of  the biased injections 
aborts or silent data corruptions, 
SFI. Moreover, 
of these non-derated 
designing 
calFault 
current  systems, 
also conduct more in-depth 
future reliability 
to map out relevant 
our results 
called CriticalFault 
show that the injection 
future cross-layer 
we characterize 
but reliability 
is highly effective 
in identifying 
researchers 
solutions. 
framework 
solutions 
relevant 
analysis 
Overall, 
and meaningful 
using CriticalFault. 
analysis 
We propose a biased 
that employs vulnera­
faults for stress testing. 
With 
space is reduced 
cause either software 
both are improvements 
from 
behaviors 
faults and discuss the implications 
propagation 
different 
of 
not only Criti­
test cases for 
and engineers 
can 
in deveoping 
Index Terms-Fault 
Injection, 
Fault Analysis, 
Vulnerability, 
Microarchitecture, 
Soft Error 
I .  INTRODUCTION 
that aim to handle hardware errors  after they  prop­
invisible  to 
solution 
and software 
under test  since 
and is particularly 
they  are 
occurs at all levels 
of the reliability 
of 
the mechanism. Worse yet, error derating 
hardware 
severe for 
errors (more than 95% of injections can be masked [3D. 
amount of 
These  benign 
errors 
but they  also drastically 
computational 
reduce the 
number of test cases for the 
reliability 
As a result, 
underlying 
becomes less rigorous. 
not only consume a significant 
the evaluation 
resources 
mechanism. 
transient 
The benign errors are even more important 
to cross-layer 
On 
software 
solutions. 
take advantage 
injected hardware 
hardware-level 
errors [4], [5], [6] ,  [7] ,  [8], 
these methods effectively 
are often evaluated 
reduce many more relevant 
to reduce the implementation 
test cases than 
For  hardware­
overhead. 
with SFI where error 
solutions 
agate and cause visible 
[9]. On one  hand, 
of error derating 
the other hand,  they 
derating  would 
it does to traditional 
level solutions, 
different 
levels 
chitecture.  For 
can also be masked in software  (instruction-level 
dead instructions 
dynamically 
to the  severe 
error derating 
methods, it is very difficult 
to generate 
methods. This paper aims to introduce 
that  can 
error  derating 
gate, and microar­
hardware-software cross-layer solutions, 
faults 
effects in cross-layer reliability 
and computationally 
SF! test cases to properly 
and data [ 1 0D as  well. Due 
faults may be derated 
evaluate  these 
a new injection method 
such as the circuit, 
the  relevant 
test cases despite 
the different 
expensive 
derating, 
increase 
relevant 
hardware 
effects. 
at 
Microprocessor 
reliability 
has become the focus of many 
is expected 
such as 
studies 
mechanisms 
as N-modular 
researchers 
caused by various 
as extreme CMOS scaling 
and so on [ 1 ] .  
and can render 
wear-out, 
reliability 
fault tolerance 
expensive 
infant mortality, 
threat i s  pervasive 
solutions  such 
recent research 
to lead to failures 
transient 
errors, 
This impending 
traditional 
for mainstream 
dancy  too 
looking 
sponse, 
hardware-software fault-tolerant 
techniques  that 
yet effective. 
studies 
are randomly 
test  how 
the resulting 
fault tolerance 
injected faults 
redun­
systems. In  re­
into novel cross-layer 
are low cost 
method used by these 
fault injection (SFI), where artificial 
SF!, the effectiveness of new 
the 
mechanisms 
that result 
One popular evaluation 
errors [2].  Through 
can be estimated 
is statistical 
would  react 
mechanisms 
the proposed 
are actively 
by tallying 
computer 
in detections. 
faults 
and mitigate 
injected into the processor microarchitecture 
to 
While SF! has proven to be a useful  methodology, 
many 
chosen faults are often derated 
of the randomly 
other words, these injected faults do not 
and are benign to  the system.  Although the 
derated 
part of a fair assessment of how the  overall 
system would behave, 
to  the 
they do not contribute 
cause any error effect 
fault tolerance 
evaluation 
or masked. In 
faults are 
architectural 
Error derating 
has been the subject of research 
in prior 
Sridharan 
correct  ex­
a hardware 
factor (AVF) and used architecturally 
to quantify 
errors [ 1 1 ] .  
the hardware 
(ACE) analysis 
is to transient 
program vulnerability 
Mukherjee et al. introduced 
how vulnerable 
Recently, 
work. Most notably, 
vulnerability 
ecution 
component 
and Kaeli proposed 
characterize 
factor of AVF [ 1 2] .  
Many o f  these works make use o f  vulnerability 
improve hardware 
strategically 
Overall,  existing 
software 
has been little 
effects of non-derated 
work that uses vulnerability 
work uses vulnerability 
either by hardening 
reliability, 
from executing 
independent 
incorrectly 
[ 1 3 ] .  
or inventing 
techniques 
factor to 
factor (PVF) to 
errors. 
analysis 
to prevent 
Comparatively, 
there 
factors 
study the 
to 
the circuitry 
As  cross-layer reliability 
methods often rely 
on error derat­
to reduce vulnerability. 
ing to reduce cost, their evaluations 
by  this 
of reasoning 
the hardware 
effect. Instead 
and software 
system, we  believe 
about  the 
resiliency 
vulnerability 
of 
are  also severely 
impeded 
978-1-4673-1625-5/12/$31.00 
©2012 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:50:05 UTC from IEEE Xplore.  Restrictions apply. 
of interest 
identify 
the regions 
resources  can 
faults. Consequently, 
be redirected 
analysis 
can help us swiftly 
for injecting non-derated 
putational 
test cases to evaluate 
introduces 
on the above observation, 
called CriticalFault 
fault injection framework 
knowledge 
to direct 
the fault injection 
of vulnerability 
to focus on likely non-derated 
to generate 
cross-layer reliability 
valuable 
meaningful 
Based 
this  paper 
that uses the 
errors. 
solutions. 
process 
com­
a biased 
We introduce 
injection framework, 
mechanism. 
biased  fault 
meaningful non-derated 
the help of Critical 
fault-tolerant 
researchers 
fault tolerant 
and designers 
solutions 
in the future. 
that can effectively 
faults to fulfill the stated goal. With 
identify 
Fault, the weaknesses of the underlying 
systems can effectively 
to  derive 
be exposed, allowing 
better and more effective 
CriticalFault, 
a vulnerability-driven 
With this vulnerability-driven 
approach,  the error effect 
of 
In particular, 
a reliability 
in Section  V.  Section 
VI discusses implications 
This paper is organized 
prior work. Section 
relevant 
framework.  Section 
IV details 
iments.  We present 
the results 
framework 
drawn from CriticalFault 
concludes 
this work. 
as follows. Section 
II discusses 
the CriticalFault 
ill describes 
the methodology 
obtained 
of our exper­
from the CriticalFault 
results. 
Section 
VII summarizes 
and 
II. RELATED WORK 
With increasingly 
tight operating 
soft errors caused by cosmic ray and 
margins in frequency 
[ 1 5 ] ,  
systems 
transient 
rate (SER) of targeted 
[20].  To approximate 
strike are becoming a major design concern 
ensure system robustness, prior 
fault injection (SFI) to model the 
[16], [17], [2], 
and voltage, 
alpha particle 
for reliability  engineers.  To 
work has used statistical 
soft  error 
[ 1 8] ,   [ 1 9] ,  
the nature of these single 
event upsets (SEUs), a large number of faults are randomly 
methods [16], [ 1 9 ] ,  
chosen and injected using  software-level 
level (RTL) [17], 
into the gate level [ 1 5] o r  register 
[2], [20] designs. The injection campaigns 
in these works not 
only quantified 
that transient 
whole, error derating 
reduces 
system. Subsequently, 
to meet a particular 
focuses 
reliability 
error coverage 
is desirable 
possible. 
Viewing the system as a 
and 
not harmful to the 
the SER as the derated  errors  are 
this work 
on using SFI to assess the error coverage of the 
the reliability 
target SER. In comparison, 
it 
the number of non-derated 
the SER of the targeted systems 
errors, 
errors if 
of the whole system SER. Since 
errors are often derated. 
does not consider 
calculation 
contributes 
to the overall 
to maximize 
but also found 
mechanism 
transfer 
instead 
derated 
reliability 
budget can be decreased 
analysis. 
method is vulnerability 
architectural 
factor 
vulnerability 
that a fault in  a processor 
will affect the final output of the program and used 
Execution  (ACE) 
analysis to obtain 
By identifying 
the un-ACE bits in the 
AVF gives an upper bound of the 
recently,  Sridharan 
factor (PVF) that extracts 
of AVF to provide a way for developers 
and Kaeli proposed 
program 
to 
the software-dependent 
[ 1 1 ] .  
the probability 
Another SER estimation 
Mukherjee et al. introduced 
(AVF) to represent 
structure 
Architecturally 
Correct 
this information 
processor, the resulting 
SER.  More 
vulnerability 
components 
estimate 
modeling, 
analysis 
resulting 
mechanism-under-test. 
to  calculate 
to soft error when  running 
takes a step further 
are in the given hardware and software 
impact had errors occurred 
the  SER of their software 
how vulnerable 
our proposed 
methodology 
to identify 
a set of 
faults 
a given processor 
a specific 
and determines 
at these points. 
in more error samples that stress the reliability 
While the AVF  and PVF schemes aim 
is 
configuration 
[ 1 2] .  Instead 
relies 
of  SER 
on vulnerability 
that is unlikely 
to be derated, 
workload, 
what the vulnerable 
our scheme 
points 
and the subsequent 
or unrecoverable) 
in  a higher 
(SDCs). 
resulting 
recoverable 
(either 
data corruptions 
is always improved 
the injected faults will be  amplified, 
number of detections 
and silent 
mechanism 
detected 
tions. To this end, vulnerability-driven 
increase 
understand 
fault tolerance 
errors  (DUEs) 
the  strengths 
unrecoverable 
and weaknesses 
mechanism. 
by reducing 
the number of 
and silent 
injection can effectively 
data corrup­
error samples of these types, helping researchers 
of the underlying 
Although 
our vulnerability-driven 
fault injection methodol­
and maximize 
the number 
errors 
derated 
ogy aims to eliminate 
of non-derated 
using our framework. 
ysis is a guide, not an enforcer, 
Therefore, 
can be obtained. 
the overall fair 
ones, we note that SFI can still be conducted 
This is because the vulnerability 
of the injection campaign. 
reliability 
assessment of the  system 
anal­
Overall, 
our contributions 
are as follows. 
•  We introduce 
a novel biased fault injection 
framework 
called CriticalFault 
that accounts 
rors and aims to aggressively 
solutions. 
cross-layer reliability 
for benign  derated 
er­
evaluate 
current  and 
future 
•  We conduct 
biased fault injections on a set of 
SPEC2000 
instruction 
the entire in
inject faults at the microprocessor 
and SPLASH-2 workloads. Compared to methods that 
randomly 
level and consider 
vulnerability-driven 
of this space and up  to 50% of the space as avoidable 
in our experiments, 
resources. We expect these savings 
workloads 
•  Our results 
that have lower vulnerability 
show that CriticalFault 
jection space relevant, 
our 
29% 
identifies, on average, 
to further 
factors. 
is able to 
effectively 
suppress 
increase 
approach 
for 
the 
in a non-derating rate of 
resulting 
effect heavily, 
derating 
59% where  faults  either 
These results 
layer fault tolerance 
further 
improvements 
stress the cross­
show that CriticalFault can 
lead to 