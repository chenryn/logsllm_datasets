与试图对已有的项目做各种各样的测试相反，我们看看从项目的开始就采
用新的技术，测试驱动开发（Test-drivendevelopment），在编写代码一
开始就伴随着测试。
Starbuz咖啡店销售礼参有好几个月了，但现在他们需要以一种方式去接
受礼券作为购买饮料的一种付款方式。Starbuzz已经知道网页的外观是什
么样子，所以，你的任务重点在礼券预定系统的设计和实施上。
Starbuzz Coffee Beverages
House Blend,$1.49
Mocha Cffe Latte,2.3s
Cappuccino,$1.89
Amtnses
Chal Tea,$1.85
标题：
用礼券预订咖啡
客户可以用礼卷在Stax
网页上物买伙科。
描述：从远项中展练保喜次的咖峰，输入偿
的航静号名实和嘉要的士多店.单告提交
获得确认号，礼券余额，以及预计准鲁时润。
任务！
64名4
搏提预订信息
务2
任务3
让我们从述项任务开
礼券信鸟和服货
施业务连辑用
把行单处理器进
信乌.
以处理流程和保
接到meb站点上。
订单.
2
276
第8章
---
## Page 313
测试驱动开发
所以，我们打算先做测试·….·
任务！
Starbuzz礼券的使用情节被分解为一些任务，如果我们打算描
捕提预订信息
提预订信息、首先做测试，先必须从第一个任务开始，该任务
礼券信息以及取
能捕提有关礼券信息、订单、礼券和收据的信息，记住，如果
货信息。
我们立即撰写程序以及取货信息。代码，便会回到前几章的微
5
提示：在该案例中物“客户”是将
分析任务
到Statxxx的买总要的人，事实上
是你客户的客户。那是使用情节的
首先我们分解一下任务。对于第一个任务，你需要
典型用诺。
口
表达订单信息。你要捕提客户的名字、饮料的描述、客户想要取货
遥常，任务合起来是
的分店号和礼券上的号码。
一件事，但任务中的
一三个项都比较小，它
口
表达礼券信息。你要捕提启用日期、截止日期和礼券上的余额，
们易于为工价的笔
一掌元证理。
口
表达收据信息。你要捕提确认号和挑选时间以及礼券上的余额。
在编写应用程序代码前，先编写测试程序
我们先要开始测试，还记得吗？这表示你必须先编写实际的测试程序。从这项
任务的订单信息部分开始。现在，使用你的测试方案，为此功能编写测试程序。
个
正如第T章一样，你可以使用任何别试
欢迎光临测试驱动开发
方象—尽管自动化的测试方意是量
容易进承到派本控制和C3流程之中的
当你在编写应用程序的代码之前，先撰写测试程序时，让测试程序驱
动你编写应用程序的代码，你就正在运用测试驱动开发（Test-driven
development）或TDD。TDD是一个规范的术语用以描述软件开发一
开始就进行测试的过程—你编写每一行应用程序的代码都是对测试
的响应，翻开下一页可以获得更多关于TDD的内容。
目前位置
277
---
## Page 314
单元测试
你的第一个测试…·
编写测试程序的第一步是弄清楚你要测试的是什么。由于
这是在相当细致的层次上做测试—
一单元测试，你应该从小
处着手。对于你必须为第一个任务中的一部分一—存储订
单信息，什么是你能够编写的最小测试程序？嗯，就是创建
Orderlnformation对象本身，对吗？这里是如何测试一个新
的Orderlnformation对象的创建：
运是nir测
package headfirst,sd. chapter8;
对系的第一
测试
import org-junit, *;
方法。
public class TestOrderInformation {
> BTest
public void testCreateOrderInformation()(
OrderInformation orderInfo = new OrderInformation():
使它尽可能的菌
单、只恶创建新
h Osies7adomation
时系。
等等，你在于什飞？这个别试不可能运行：等至无法
编措。你只是瑞造根本不存在的类的名称，你从哪里
到Orderinformation卖?
完全正确
！
我们先编写测试程序，记
得吗？我们没有代码。这个测试第一次是无法（或不应
该）通过的，事实上，这段测试程序更本无法编译，不
过没有关系，我们马上修正它。这里的重点是先撰写测
278
第8章
---
## Page 315
测试驱动开发
...痛苦的失败。
与日常生活中的经验不同，在TDD中，当你初次编写测试程序时，你想要
让它失败。测试的要点在于建立“可衡量的成功”（Measurable success），
在此案例中，衡量的标准在于编译出可实例化Orderlnformation对象。另外，
有了失败的测试以后，现在，要做什么能保证测试通过就变得很清晰了。
有效到试箱动开厦
的第一个规则
规则#1：在实施任何应用程序代
码之前，你的测试应该总是失败。
apter8.TestorderInformation.java
现在编写应用程序
代码让测试通过。
mbol
：class OrderInformation
location:class headfirat.ad.chapter8.TestorderInformation
你已经历了一次失败的测试
OrderInformation orderInfo-new OrderInformation():
但真的没有关系。在进一步工作
之前，编写更多的测试程序或是
TestOrderInfornation.java:8:cannot find symbol
symbol:class OrderInformation
进行此任务，尽可能编写最简单的
代码使该测试通过。现在，这个测
OrderInformation orderInfo=new OrderInformation():
试程序甚至无法通过编译。
送行我们的第一个到试程序还不
太可行，编谦时就巴经失败了。
准省练习
我们拥有了一个本该通过，但失败了的测试。让此测试通过
的最简单的事情是什么？
目前位置
279
---
## Page 316
绿灯表示通过
让你的测试亮绿灯
此时此刻，你唯一应该有的目标是使你的测试通过，因此，
绿灯指的是：
当所有测试逐过时
只需要编写让测试通过的代码：这就是所调的让你的测试
UxirGu含显示绿色标惠。如基别试类
败，它舍显示红色标惠。
亮绿灯。
public class OrderInformation (
这是新的炎的UML，没有属性
也没有方法
只有窄的员。
OtdetJndoumatiox
是的，就是这样，一个空的类，现在，再次运行你的测试程序：
-d bin -cp junit.jar*.jav
测试程序现在统逐过编译。
Onietomti费也是
JUnit version4.4
Unito
SU
fsd>
该测试程序通过后，你要准备编写下一个测试程序，仍然集中
在你的第一个任务。就是这样—你刚刚完成了测试驱动开发
的第一轮。切记，目标就是编写让测试通过的代码。
规则#2：
编写让测试强过
的最简单的代码
280
第8章
---
## Page 317
测试驱动开发
类是这样响？弄了一个空类社测试通过，这也称
之为成功吗？
测试驱动开发就是做最简单的事使你的测试通
过。
要克制你的冲动，先别增加将来可能用到的任何
这称为YANG,原…
功能，如果以后需要某项功能，你只要编写一段
YANG,5代象“YoAi”
测试程序和应用程序代码，并让该应用程序代码
nsGonn Need 3t*
通过测试。与此同时，先别管它。明显地，你不
意集“你不金用到”
能停在这里—
一你必须进行下—个测试—但是，
集中于小段程序代码是测试驱动开发的核心和灵
魂。
红灯停、
绿灯行和重构
测试驱动开发以很简单的循环方式在运作：
红灯：副试失败
首先，你编写一段测试程序用于检测你准备为应用程序提供的功能。
明显地，它会失败，因为你还更本不能实施该项功能。这是红灯阶
段，因为测试程序的GUI可能会将该项测试显示为红色（失败）。
2
隐灯：别试通过
接下来，实施该功能，让测试通过。就这样，没有更多的东西。没
有什么特别之处。编写最简单的代码，使你的测试通过。这是绿灯
阶段。
3
重构：清理任何重复、难忌、旧的代码等。
最后，在你的测试通过后，可以回头清理实施代码时可能注意到的
一些东西。这就是重构阶段。在Starbuzz的例子中，你没有任何需要
重构的代码，因此，你可以立即进入下一个测试，
完成重构后，开始下一个测试弄
进入下一得好。
7
目前位置
281
---
## Page 318
测试使用情节的功能性
下面是我们正在进行的任务及该任务所属的使用情节。你的任务是对TestOrder-
Information增加下一个测试，继续进行该项任务。
标题：
用礼券预订咖啡
你应该别是在粒高的，功维级器
次上，警心使用情节，再清是应
精述：
从线项空热结保喜欢的咖唯，输入你<
值测试什么，
的礼券号、需字和喜要的士多店，单击程文
获得确认号，礼券余额，以及预计准备时间。
优先级：
20
任务！
播提订单信息
礼券信息.
及收
据信息。
对谋项测试，你应法集中在
Oenfomtin灵，以后，我们将
5
延理礼类和收描的间题，
import org.junit.*;
*如果你不是一个2aa程序买，试着
public class TestorderInformation
在你的框泉中缝写测试程序或把它
@Test
入的你的E中
public void testCreateOrderInformationInstance()1
OrderInformation orderInfo = new OrderInformation():
public void testOrderInformation()(
eTest
282
第8章
---
## Page 319
测试驱动开发
现在实施代码，使测试通过。请记住，你只须撰写让测试能通过的最
简单的代码。
这重是创建的、
通过第一次测试的
Onenomtion类，你常要增补一些内容使
其逐过你别才编写的测试程序。
ublic class OrderInformation (
Otdes2nfotmation
还幕更新OuietJnfomatiow是密,
目前位置
283
---
## Page 320
以代码实施测试
下面是我们正在进行的任务及该任务所属的使用情节。你的任务是对TestOrder-
Information增加下一个测试，继续进行该项任务。
答案
标题：用礼券预订咖啡
描述：从培项中挑选你春欢的咖唯，输入像的
礼费号，名字和喜爱的女多店，单曲履文款
为了把Otde3xormation类的制
得确认景。航券余额。以及预计准量时润。
下的年分效在一起，你要增加
童的如明、礼类号、客户的
名等以及集取货的分店别Otie1
20
任务！
Jnomation之中
优先级：
捕提订单信息
礼券信息，及收
据信鸟。
5
mport org.junit,*;
public class TestOrderInformation f
public void testCreateOrderInformationInstance() ( // existing test )
eTest
我们的到试只是前举他的建了
Onnmtin，至我们需要记录的
public void testOrderInformation () (
多个佳，继着检叠并确认我们得到相
OtdetJadonmation oudetJxdo = nen Oudet3nfomatiox():
用的堡
ondet3ndo. setCxstomerName(“Osn"),
ondet3nfo, setDtinkDesciption “Mocha cappe=latte
ondet2nfo seGiftCandNamdes( (23456),
K
ondes3xlo setPsefetedStoseNsmber(85T5309),
assettEcat(otdetJedo. getCxstometName().
你可能您要在代研中使用常数
“Dex”)
图站，你不金在设盖值和检
sssentEqad(ondet7do getDtinkDesetiption) .
全国停任之阅有任何输入经误
“Mocha ceppalette-with—halwhipskimftacino”), <
（捕别是那些搞到长的咖啡秋料
ssertEeuat(ondet7xdo getGiftCatdNambesO).,(23456),
的名字）.
ssettEgat(odet2xdo. getPsefetedStoueNzmber() ,8675309),
284
第8章
---
## Page 321
测试驱动开发
现在实施代码，使测试通过。请记住，你可能只想要最简单的代
码通过测试。
public class OrderInformation (
送个类卖是只有凡个成员定
ptioate Stting custemerName,
量.以及要获取及设里运业