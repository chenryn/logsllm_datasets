User: Generated an executable on Linux 32-bit Ubuntu 11 and tested it on a 32-bit Ubuntu 10 and it failed with a "GLIBC_2.15" not found.
Assistant: Cyrhon FAQ section says:

Under Linux, I get runtime dynamic linker errors, related to libc. What should I do?  The executable that PyInstaller builds is not
  fully static, in that it still depends on the system libc. Under
  Linux, the ABI of GLIBC is backward compatible, but not forward
  compatible. So if you link against a newer GLIBC, you can't run the
  resulting executable on an older system. The supplied binary
  bootloader should work with older GLIBC. However, the libpython.so and
  other dynamic libraries still depends on the newer GLIBC. The solution
  is to compile the Python interpreter with its modules (and also
  probably bootloader) on the oldest system you have around, so that it
  gets linked with the oldest version of GLIBC.

and 

How to get recent Python environment working on old Linux distribution?  The issue is that Python and its modules has to be
  compiled against older GLIBC. Another issue is that you probably want
  to use latest Python features and on old Linux distributions there is
  only available really old Python version (e.g. on Centos 5 is
  available Python 2.4).