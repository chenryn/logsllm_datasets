# Verifiable and Private Top-k Monitoring

## Authors
- Xuhua Ding, Singapore Management University
- HweeHwa Pang, Singapore Management University
- Junzuo Lai, Department of Computer Science, Jinan University, China

## Affiliation
Singapore Management University

## Publication Details
- **Institutional Knowledge at Singapore Management University**
- **Research Collection School of Information Systems**
- **Year**: 2013
- **DOI**: [https://doi.org/10.1145/2484313.2484388](https://doi.org/10.1145/2484313.2484388)
- **Conference**: ASIA CCS'13: Proceedings of the 8th ACM SIGSAC Symposium on Information, Computer and Communications Security, May 8-10, 2013, Hangzhou, China
- **Pages**: 553-558
- **Available at**: [https://ink.library.smu.edu.sg/sis_research/1972](https://ink.library.smu.edu.sg/sis_research/1972)

## Abstract
In a data streaming model, records or documents are pushed from a data owner to a large number of users with matching interests via untrusted third-party servers. The match in interest is calculated from the correlation between each pair of document and user query. For scalability and availability, this calculation is delegated to the servers, which necessitates protecting the privacy of the documents and user queries. Additionally, users need to guard against the possibility of a server distorting the correlation scores to manipulate which documents are highlighted.

This paper addresses these privacy and verifiability challenges by introducing the first cryptographic scheme that concurrently safeguards the privacy of documents and user queries while enabling users to verify the correlation scores. We provide techniques to bound the computational demand in decrypting the correlation scores and demonstrate the practicality of the scheme through experiments with real data.

## Categories and Subject Descriptors
- **H.2.4 [Systems]**: Query processing
- **H.2.7 [Database Administration]**: Security, integrity, and protection

## Keywords
- Vector product
- Correlation computation
- Verifiability
- Privacy

## 1. Introduction
Data streaming applications, such as web access analysis, profile-driven marketing, environmental sensing, stock trading, and online bidding, have become commonplace due to the widespread adoption of mobile devices and RFID technology. These applications generate high volumes of data, often streamed to an intermediary for query processing and analysis to produce aggregate results for end-user consumption. Since the intermediary may not be trusted by the data owner or end-users, the data and queries need to be protected.

To illustrate our data streaming setting, consider a surveillance application (Figure 1). There are three parties: a Data Owner, one or more Servers, and many Users. The Owner operates security checkpoints, where a picture of each visitor's face is taken and a feature vector is extracted. The original picture and feature vector form a document \( d \) that is streamed to a shared Server. A User, such as an intelligence agency, monitors a list of subjects by registering their feature vectors as standing queries \( q \). The Server computes the correlation score between \( d \) and \( q \), and returns the score along with the document identifier to the User. The \( k \) documents that best match the query are displayed on the Userâ€™s alert screen.

Since the Server is administered by another agency or an outsourced service provider, the following system and security requirements are necessary:
- **Query Privacy**: The feature values in \( q \) must be known only to the issuing User.
- **Document Privacy**: The feature values in \( d \) must not be revealed to the Server.
- **Verifiability**: The User needs to verify the correlation score between \( d \) and \( q \).
- **Result Ranking**: The User needs to retrieve the actual correlation score for each \( d \).

## 2. Related Work
Data stream security has been extensively studied in various research communities. Table 1 summarizes the characteristics of the most relevant schemes with respect to the system and security requirements identified in the Introduction.

- **Random Noise Injection** [1]: Injects randomized noise to protect data streams.
- **Data Condensation** [2]: Achieves anonymization and supports incremental updates.
- **Keyword Search on File Stream** [3], [11]: Protects query privacy but not the data stream.
- **Verifiability** [12], [7], [10]: Allows users to verify data arrival, removal, update, and aggregation functions.

None of the above schemes support the correlation computation needed in our setting, and they provide either privacy or verifiability, but not both.

Among existing cryptographic protocols, those that support inner product computation are most relevant. However, they do not meet our requirements:
- **Predicate Encryption** [6]: Does not protect the privacy of both vectors.
- **Symmetric-Key Predicate Encryption** [13]: Requires a one-to-one mapping, whereas our model requires a one-to-many mapping.
- **Privacy-Preserving Scalar Product Schemes** [5], [15]: Do not allow computation by an untrusted intermediary and lack provisions for verifying the scalar product.

## 3. Cryptographic Verifiable and Private Monitoring (CVPM) Scheme

### 3.1 Overview
Our data streaming model (Figure 1) includes Users who issue standing queries \( q \), an Owner who generates a stream of documents \( d \), and one or more Servers that match \( q \) with \( d \). The Server may also enforce access policies.

### 3.2 Notation
- \( d \): Document vector
- \( k_d \): Bit length of each coordinate in \( d \)
- \( q \): Query vector
- \( k_q \): Bit length of each coordinate in \( q \)
- \( m \): Dimensionality of \( d \) and \( q \)
- \( m_q \): Number of coordinates specified in \( q \)
- \( v = q \cdot d \): Score of \( d \) given \( q \)
- \( n = p_1 p_2 \): Where \( p_1 \) and \( p_2 \) are distinct, large prime numbers
- \( G, G_T \): Multiplicative groups of order \( n \)
- \( \hat{e} \): Bilinear map \( \hat{e}: G \times G \to G_T \)
- \( G_1 \): Subgroup of \( G \) of order \( p_1 \)
- \( G_2 \): Subgroup of \( G \) of order \( p_2 \)
- \( H(.) \): One-way hash function

### 3.3 CVPM Scheme
In CVPM, each User encrypts their standing query vectors to safeguard their privacy; the encrypted query vectors are lodged with the Server. Whenever the Owner has a document to release, he generates an encrypted document vector and distributes it to the Server. Upon receiving a new encrypted document vector \( d \), the Server computes the protected correlation coefficient \( v = q \cdot d \) for each query \( q \), and outputs \( v \) to the issuing User. The User then deciphers the output to obtain and verify the correlation score.

Our scheme is the first for the data streaming model that concurrently achieves verifiability and privacy protection. It ensures that the document vectors cannot be exploited by the Server or other Users, and neither the Owner nor the Server can compromise the privacy of the user queries. Finally, the Server cannot tamper with the document correlation scores without being detected by the User. Through extensive experiments involving real datasets, we demonstrate the practicality of CVPM for a broad spectrum of applications.

## 4. Conclusion
This paper introduces the first cryptographic scheme, CVPM, that addresses the privacy and verifiability challenges in a data streaming model. By ensuring the privacy of both documents and user queries and enabling users to verify the correlation scores, CVPM provides a robust solution for secure and verifiable top-k monitoring. Our experimental results demonstrate the practicality of the scheme in real-world applications.