title:Verifiable and private top-k monitoring
author:Xuhua Ding and
HweeHwa Pang and
Junzuo Lai
Singapore Management University
Institutional Knowledge at Singapore Management University
Research Collection School Of Information Systems
School of Information Systems
2013
Verifiable and private top-k monitoring
Xuhua DING
Singapore Management University, PI:EMAIL
Hwee Hwa PANG
Singapore Management University, PI:EMAIL
DOI: https://doi.org/10.1145/2484313.2484388
Follow this and additional works at: https://ink.library.smu.edu.sg/sis_research
Part of the Information Security Commons
Citation
DING, Xuhua and PANG, Hwee Hwa. Verifiable and private top-k monitoring. (2013). ASIA CCS'13: Proceedings of the 8th ACM
SIGSAC Symposium on Information, Computer and Communications Security, May 8-10, 2013, Hangzhou, China. 553-558. Research
Collection School Of Information Systems.
Available at: https://ink.library.smu.edu.sg/sis_research/1972
This Conference Proceeding Article is brought to you for free and open access by the School of Information Systems at Institutional Knowledge at
Singapore Management University. It has been accepted for inclusion in Research Collection School Of Information Systems by an authorized
administrator of Institutional Knowledge at Singapore Management University. For more information, please email libIR@smu.edu.sg.
Veriﬁable and Private Top-k Monitoring
Xuhua Ding
School of Information Systems
Singapore Management
HweeHwa Pang
School of Information Systems
Singapore Management
PI:EMAIL
PI:EMAIL
University
University
∗
Junzuo Lai
Department of Computer
Science,
Jinan University, China
PI:EMAIL
ABSTRACT
In a data streaming model, records or documents are pushed from 
a data owner, via untrusted third-party servers, to a large number of 
users with matching interests.  The match in interest is calculated 
from the correlation between each pair of document and user query. 
For scalability and availability reasons, this calculation is delegated 
to the servers, which gives rise to the need to protect the privacy of 
the documents and user queries. In addition, the users need to guard 
against the eventuality of a server distorting the correlation score of 
the documents to manipulate which documents are highlighted to 
certain users.
In this paper,  we address the aforementioned privacy and veri-
ﬁability challenges.  We introduce the ﬁrst cryptographic scheme 
which  concurrently  safeguards  the  privacy  of  the  documents  and 
user queries in such a data streaming model, while enabling users 
to  verify  the  correlation  scores  obtained.  We provide  techniques 
to  bound  the  computation  demand  in  decrypting  the  correlation 
scores, and we demonstrate the overall practicality of the scheme 
through experiments with real data.
Categories and Subject Descriptors
H.2.4  [Systems]:  Query  processing;  H.2.7  [Database  Adminis-
tration]: Security, integrity, and protection
Keywords
Vector product, correlation computation, veriﬁability, privacy
1.  INTRODUCTION
Data  streaming  applications  like  Web access  analysis,  proﬁle-
driven  marketing,  environment  sensing,  stock  trading  and  online 
bidding are now commonplace, driven by the widespread adoption 
of  mobile  devices  and  RFID  technology.  Such  applications  can 
generate high volume of data, which are often streamed to an in-
termediary for query processing and analysis to produce aggregate
∗The  author  carried  out  this  work  at  the  Singapore  Management 
University.
results for end-user consumption. As the intermediary may not be
trusted by the data owner/generator or the end-users, the data and
queries need to be protected.
To motivate our data streaming setting, suppose that Figure 1
depicts the system model of a surveillance application. There are
three parties in the model – a data Owner, one or more Servers,
and many Users. The Owner operates various security check-
points of a country or sensitive installation. Here, a picture of the
face is taken of each visitor passing through a checkpoint. From the
picture, a feature vector of the relative position, size and shape of
the eyes, nose, jaw, etc. are automatically extracted. The original
picture and feature vector form a document d that is streamed to a
shared Server. One of the Users is an intelligence agency which
is monitoring a list of subjects. The intelligence agency is likely
to have pictures of each subject; the feature vector extracted from
each picture is registered with the Server as a standing query q.
The Server computes the correlation score between d and q, and
returns the score along with the document identiﬁer to the agency.
The k documents that best match the query are displayed on the
agency’s alert screen. Since the Server is administered by another
agency or an outsourced service provider whose operators may not
have appropriate security clearances, the following system and se-
curity requirements become necessary:
• Query privacy. The feature values in q must be known only
to the particular User who issued it. The reason is while the
original picture cannot be reconstructed directly from q, an
adversary could extract feature vectors from his own pictures
and attempt to match them against q to discover what the
intelligence agency is interested in. Furthermore, the actual
correlation score between d and q should be available only
to the issuing User. Neither the Owner who possesses d,
the Server that computes the score nor other users can be
allowed to deduce q.
• Document privacy. The feature values in d must not be re-
vealed to the Server, so as to prevent an adversary from
matching d against his own pictures. To safeguard the rights
of the visitors who have their pictures taken, the Owner may
selectively restrict the features in d that various Users are
allowed to query over.
• Veriﬁability. Without direct access to d, the User who is-
sued q would want to verify the correlation score between d
and q. This is to guard against an adversary at the Server
manipulating the score of d to elude detection by the User.
In order to identify the k most promising
document matches, the User needs to be able to retrieve the
actual correlation score for each d.
• Result ranking.
The system and security requirements of our data streaming model
exceed the capability of existing schemes in the literature. In the
1 Figure 1: Data Streaming Model
data stream security literature, veriﬁability and privacy have been
addressed separately. The former includes [12] which allows users
to verify the arrival, removal and update of data falling within a
selection range on an attribute, and [7] for authenticating selection-
aggregation queries over an attribute of interest. Privacy in data
streaming has been achieved through randomization [1] and anonymiza-
tion [2]. In cryptography, the most relevant line of work is predi-
cate encryption that supports the inner product of two vectors, e.g.,
[6]. However, predicate encryption schemes are not designed for
our data streaming model in which the document vector d and the
query vector q are generated by different parties and must be kept
secret from each other.
CONTRIBUTIONS In this paper, we propose a Cryptographic
Veriﬁable and Private Monitoring (CVPM) scheme to enable our
data streaming model in Figure 1 which satisﬁes the aforemen-
tioned security requirements. In CVPM, each User encrypts her
standing query vectors to safeguard their privacy; the encrypted
query vectors are lodged with the Server. Whenever the Owner
has a document to release, he generates for it an encrypted docu-
ment vector which is distributed to the Server. Upon receiving a
new encrypted document vector d, the Server computes the pro-
tected correlation coefﬁcient v = q·d for each query q, and outputs
v to the issuing User. The User then deciphers the output to obtain
and verify the correlation score.
To the best of our knowledge, our scheme is the ﬁrst for the
data streaming model that concurrently achieves veriﬁability and
privacy protection. Speciﬁcally, it ensures that the document vec-
tors cannot be exploited by the Server or the User, other than for
computing correlation scores. In addition, neither the Owner nor
the Server gains an advantage in compromising the privacy of the
user queries. Finally, the Server cannot tamper with the document
correlation scores without being detected by the User. Through
extensive experiments involving real datasets, we also demonstrate
the practicality of CVPM for a broad spectrum of applications.
2. RELATED WORK
Data stream security has been studied extensively in various re-
search communities. Table 1 summarizes the characteristics of the
most relevant ones with respect to the system and security require-
ments identiﬁed in the Introduction.
In [8], Lindner and Meier discuss general security concerns in
architecting a data stream management system. To safeguard the
privacy of data streams, [1] proposes to inject randomized noise.
The condensation scheme in [2] to achieve anonymization supports
incremental update, and is applicable to data streams. [3] and [11]
introduce protocols for a server to search a stream for ﬁles that
contain given query keywords; the protocols protect the privacy of
the query, but not the data stream.
Veriﬁability has been addressed by a different group of stud-
ies. These include [12] which allows users to verify the arrival,
removal and update of data falling within a selection range on an
attribute, [7] for authenticating selection-aggregation queries over
an attribute of interest, and [10] for verifying the output of aggre-
gation functions like MAX and SUM. None of the above schemes
Symbol
Meaning
d
kd
q
kq
m
mq
v
n
Document vector
Bit length of each coordinate in d
Query vector
Bit length of each coordinate in q
Dimensionality of d and q
Number of coordinates that the User speciﬁed in q
v = q · d is the score of d given q
n = p1p2 where p1, p2 are distinct, large prime
numbers
G, GT Multiplicative groups of order n
Bilinear map ˆe : G × G → GT
ˆe
G1
Subgroup of G, of order p1
Subgroup of G, of order p2
G2
A one-way hash function
H(.)
Table 2: Notation
support the correlation computation that we need. Moreover, they
provide either privacy or veriﬁability, but not both.
Among existing cryptographic protocols, the ones that support
inner product, which is what the common correlation coefﬁcients
entail, are most relevant to our problem setting. The rest of this
section focuses on those schemes and explains why they do not
meet our requirements.
In the predicate encryption scheme proposed in [6], an entity
possessing a secret key token associated with a vector x can decrypt
a public key encryption ciphertext associated with another vector y
on the condition that x · y = 0. The scheme is not suitable for our
data streaming model because it does not protect the privacy of x
against the token holder (the Server in our context), who can infer
x by choosing any y and producing a ciphertext with the public
key. Note that in our model, we require the privacy of both vectors
against the Server.
The above privacy issue is addressed by the symmetric-key pred-
icate encryption scheme in [13]. Here, the generation of both the
secret token for x and the ciphertext associated with y require se-
cret inputs; this prevents the token holder from generating cipher-
text for his chosen y. However, this scheme requires a one-to-one
mapping between the secrets used for encrypting x and y, whereas
our data streaming model requires a one-to-many mapping as the
Owner’s data stream serves multiple Users simultaneously.
Our problem setting is also related to privacy-preserving scalar
product schemes such as [5, 15]. These schemes are built on an
interactive protocol in which two parties, each holding a secret in-
put, co-compute the scalar product without revealing their inputs to
each other. They do not permit the computation to be carried out by
an untrusted intermediary (the Server) though, a key requirement
of our data streaming model. There is also no provision to check
whether the scalar product is computed correctly.
3. CRYPTOGRAPHIC VERIFIABLE AND
PRIVATE MONITORING SCHEME
In this section, we introduce our CVPM scheme for the data
streaming model. Table 2 summarizes the frequently used nota-
tions, which will be explained as they are used.
3.1 Overview
As shown in Figure 1, our data streaming model comprises a
set of Users who issue standing queries q, an Owner who gen-
erates a stream of documents d, and one or more Servers that
match q with d. The Server may also enforce access policies on
OwnerServerUser1. Registerquery q2. Publish document d3. Computev= q•d4. Return v2 Scheme
Random noise injection [1]
Data condensation [2]
Classiﬁer training on data stream [14]
Keyword search on ﬁle stream [3], [11]
Authenticate streamed data [12]
Authenticate selection-aggregation queries [7]
Authenticate aggregation functions [10]
Query
Privacy
No
No