办一家可怜兮兮的小公司，专门出售奇奇怪怪的编程工具，或者想为开源运
动把变量名改掉)。但是，重构工具正在不断进步中，如果你也想加入，开
的变换，比如为一个变量改名字（难点在于所有引用这个变量的地方也要自
目标还有很长的路要走。在大多数的开发环境中，你甚至无法完成一个简单
是那些能够自动清理代码的程序。我们需要优秀的工具，但是距离实现这个
域，那就是代码重构所使用的工具—“重构工具”，这个新奇的词语指的
清理代码的主要原则多年前在程序员中就广为人知。目前有一-个有趣的新领
① Mozilla基金会的主要工作是开发Firefox浏览器。这个项目的原始构想是在Netscape
关于代码重构的许多文献都与MartinFowler?有关，当然不可否认的是，
口向现在的代码中加入新功能实施起来容易多了。一旦我们开始部署
口工作进度是完全可以预测的。最初的一个星期过去以后，你就能够准
口在任何时间，如果有必要，我都可以停下来，把程序交出去。
口我没有引入任何新的错误。当然，不能保证一点小错误都没有。但
口它的耗时大大少于一次彻底的重写。假设一次彻底的重写需要耗时
下面是我采用的代码整理方法的所有优点。
源码过于复杂，因此就抛弃了它，从头开始重写Firefox的源码。
社图灵公司出版，该书中文版也即将推出，敬请期待。一一编者注
个相当可靠的估计。Mozilla基金会的人们，建议你们试试这种方法?。
确算出每小时中你整理的代码行数，然后对剩下的工作量就可以做一
下一个重大的新功能，节约下来的时间很可能就能将修改代码所用
是从头到尾，我都没有做过那些会引发错误的事情。
的3个星期赚回来。
码本来就能运行。我所做的就是把它们整理一下。
一行。我不必考虑文件上传功能的多个部分如何协同工作。这些代
需要在这里新增一行。”我只是随手将改成，然后再看下
动它们，就省去了这些思考。我从不曾被迫停下来想一想，“哦，我
我没有改动的代码，它们包含了很多程序设计上的思考，我没有改
这就意味着我节省了49个工作周。这些被省下来的时间来自于那些
一年（依据是我们到目前为止开发FogBugz所需要的时间），那么，
---
## Page 251
内完成。我曾经试过，结果是除非老天帮忙，否则根本不可能做到。
项上打勾，许多人就会发送反馈意见，因为他们想要“言行一致”。
比如填写一张申请表，在“我同意尽快发回反馈意见和软件故障报告”的选
好的方法是，让他们自己申请参加beta测试。一旦他们采取了某些主动行为，
“言行一致”的心理。你需要让他们自己承诺会向你发送反馈意见，或者更
根本不向你反馈他们的使用情况，导致你无法得到足够的数据。
的意见，你从中根本不可能得到有用的数据。另一种结果是，现有的测试者
种结果是你有太多的测试者（就像Netscape那样），这些人向你反馈了大量
公司内部的IT项目。
都可以参考这些秘诀。但是，我关注的只是有大量用户的软件产品，而不是
发软件的目的是获得报酬，还是获得眼球效应,或是提高在同行中的知名度，
组织beta测试的十二个最高秘诀
①“包装盒软件”指的是在商场中上架销售、有独立包装、外面用热收缩塑料膜密封的
(3)不要妄想一次完整的beta测试的所有步骤能够在少于8~10周的时间
 (2)要想找到那些能够向你反馈意见的测试者，最好的方法是诉诸他们
(1)开放式的beta测试是没用的。要是你那样做，只可能有两种结果。一
下面是一些关于如何组织一次软件的beta测试的秘诀。需要注意的是，
2004年3月2日，星期二
软件商品。
237
组织测试的十二个最高秘诀
---
## Page 252
一第七部分
经营软件公司
238
他们也不会有兴趣重新测试它。除非他们每天都在用这个程序，但是对于大
试用一下，然后就丧失了兴趣。此后每次你推出一个新的版本并发送给他们，
经理，那么设法分别为每个处理反馈意见的人找到100个严肃测试者。
处理的反馈意见的最大数量。如果你有一支测试管理团队或专门的beta测试
测试者什么也不会得到。
给我们，就能获得赠品。但是，在测试结束的时候，那些不提交反馈意见的
获赠一份正版软件。不管你的反馈意见是正面的，还是负面的，只要你提交
者会向你提交反馈意见。
测试时间加长、进一步收集数据的。
想不到的副作用（如果我们可以这样说)，测试的时间不够了，我本应该将
接近尾声的时候，我向软件中加入了一些保留空格的代码，这产生了一些意
布3个或4个新版本。我犯过的最大错误之一就是，在CityDesk2.0的beta测试
常微小，整个8个星期的测试也要回到起点，从头来过，而且你还需要再发
于4个版本，因为太明显了，那样不可能达到测试目的。
我曾经试过，结果是除非老天帮忙，否则根本不可能有效。
多于这个数目的话，你就会被许许多多重复的反馈意见淹没。
批准的数量少于这个数目的话，你就不会得到充分的反馈意见：批准的数量
批准1500份参加beta测试的申请表，因为这样才能产生300个严肃测试者。
你有一个质量控制部门，里面一共有3个测试管理人员，这就意味着你必须
五分之一的测试者会真地使用你的产品并将反馈意见发送给你。那么，假定
人）的最小数量大约是100人左右。如果你独立开发软件，那么这是你能够
(11)大多数beta测试的参与者只是在第一次拿到这个程序的时候才会去
 (10)根据第(7)条，即使你有一个参加beta测试的申请步骤，最后也只有
(9)你需要的严肃测试者（即那些会把反馈意见写成3页纸发送给你的
(8)我们制定了一条政策，所有向我们提交反馈意见的测试者都将免费
(7)即使你有-一个申请参加beta测试的步骤,最后也只有五分之一-的测试
(6)如果在测试过程中你为软件添加了一个功能，那么哪怕这个功能非
(5)-一次beta测试中计划发布的软件版本不要少于4个。我从来没试过少
(4)不要妄想在测试中发布新的软件版本的频率能够快于每两周一次。
---
## Page 253
他们自己的书里。）
滔不绝地告诉你一大堆意见。如果你置之不理，这些意见就会被复制粘贴进
并不是得到反馈意见。（虽然无论你怎么做，那些写书的家伙很可能都会滔
的家伙（该教程必须在软件上市的同一天问世)。对于市场beta，你的目的
件正式发布前的预览版本，对象主要是新闻媒体、大客户和那些写入门教程
它的目标是发现软件中的错误和得到及时的用户反馈意见。市场beta则是软
的组加入测试，这样就能保证每个版本都有第一次使用这个程序的测试者。
的所有beta测试参与者分成四组，每次发布一个新版本的时候，就把一个新
多数人来说，这是不可能的。因此，你需要错开不同版本的测试对象，将你
(12)不要混淆技术beta和市场beta。我上面谈的这些都是针对技术beta,
---
## Page 254
第七部分
240
经营软件公司
还有另一种方法，能够防止类似的问题再次发生。
这个词，是取它的字面意思，因为我们的目标就是要让客户对我们的服务交
的客户服务已经十分出色了。
进程序的时间。但是，我们从客服经历中学到了许多东西，现在Fog Creek
修改错误信息的提示文字，或者最好写一篇文章放进知识库（knowledge
的FogBugz安装程序就包含了许多针对特殊情况的处理代码。有时，你需要
的解决方法，只求把问题解决了了事。但是只要你深入一点思考，就会发现
口称赞。
客服人员，Michael和我只好兼任客服。我们用来帮助客户的时间占用了改
① 作者在这里使用了双关语。原文中，“优质"使用的词是remarkable,这个词的词根remark
有时，这意味着要为软件或安装程序加入更多的智能判断。目前，我们
如何提供优质的客户服务？下面就是我们学到的7点经验。我用“优质”
建立优质客户服务的七个步骤
几乎所有技术支持方面的问题都有两种解决方法。一种是表面的、快速
Fog Creek是一家自力更生的小公司，在创业的头几年，请不起专门的
2007年2月19日，星期一
谈论的客户服务。
是“谈论、说话”的意思。所以，作者说“优质”的客户服务就是可以被人们称赞、
每件事都有两种做法
---
## Page 255
了，所以以后要么不遇到问题，要么一遇到就必须对程序进行重大的调试和
的费用节省下来。不利的一面是，由于常规性技术支持能解决的问题都解决
题越罕见，就代表着你遇到它们的机会越小，所以你就能把常规性技术支持
了，留下来的都是一些非常罕见的和奇特的问题。这是很好的结果，因为问
么长此以往，会发生什么结果？那就是所有常见的和容易的问题都被解决
次次用同样的答案回答同样的问题更让他们感到欢欣鼓舞了。
来电量，问题一次次重复发生，他们就能不断获得收入。没有什么比能够-
个问题。那些廉价的电话呼叫中心根本没有办法使问题得到永久性解决。而
次又一次地解决同样的问题，而不是一劳永逸地通过修改源代码彻底解决这
把技术支持服务外包给报价最便宜的提供商，一次又一次地支付10美元，一
题支付了50美元，然后就把这一类的问题都永久消除了。
很可能这就是我们最后一次遇到这种问题。所以，我们一次性为解决这个问
出10美元。
10美元，但是同一种类型的问题会不断出现，使得你不得不一次又一次地付
一种很“经济”的选择。没错，解决单个问题的成本也许可以从50美元降到
术支持服务搬到印度的班加罗尔和菲律宾，或者整个外包给另一家公司，是
公，必须有途径让问题得到彻底解决。许多软件公司直到今天还相信，将技
这意味着你不能把技术支持人员外包，他们必须与开发人员在同一个地址办
也是因为非常特殊的情况而导致，并且同样原因的事故不会再发生第二次。
真是行之有效，我们看到美国的飞机坠毁事件是极其罕见的，即使发生，
搞清楚发生了什么事，拟定新的政策，防止类似的问题再发生。这一套机制
输安全委员会）对待飞机坠毁一样。每当有飞机坠毁，NTSB就派出调查员，
base）中。
且说实话，他们也没有动机让问题得到永久性解决，因为他们的收入依赖于
第二个含义。如果每次发生问题，你就寻找方法，永久性地解决它，那
 如果我们把-一个技术支持问题交给一个纽约的合格程序员来处理，那么
我们对待每一个需要技术支持的求助电话，就好像NTSB（美国国家运
某种程度上，电话公司、有线电视公司和ISP并不理解这种关系。它们
第一个含义。技术支持团队必须能够与开发团队直接沟通，这很关键。
这样做有两个含义。
?
241
建立优质客户服务的七个步骤
---
## Page 256
242
第七部分
经营软件公司
Lands'End公司。