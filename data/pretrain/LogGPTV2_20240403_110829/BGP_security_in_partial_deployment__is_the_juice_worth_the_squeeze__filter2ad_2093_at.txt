### References
[43] A. Pilosov and T. Kapela. "Stealing the Internet: An Internet-scale Man-in-the-Middle Attack." DEFCON 16, 2008.

[44] Reuters. "Internet Providers Pledge Anti-Botnet Effort," March 22, 2012.

[45] M. Roughan, W. Willinger, O. Maennel, D. Perouli, and R. Bush. "10 Lessons from 10 Years of Measuring and Modeling the Internet’s Autonomous Systems." *Journal of Selected Areas in Communications (JSAC)*, 29(9):1810–1821, 2011.

[46] R. Sami, M. Schapira, and A. Zohar. "Searching for Stability in Interdomain Routing." In *INFOCOM 2009*, 2009.

[47] Sandvine. "Fall 2012 Global Internet Phenomena Report," 2012.

[48] K. Sriram. "BGPSEC Design Choices and Summary of Supporting Discussions." *Internet-Draft: draft-sriram-bgpsec-design-choices-03*, January 2013.

[49] R. White. "Deployment Considerations for Secure Origin BGP (soBGP)." *Internet-Draft: draft-white-sobgp-bgp-deployment-01.txt*, June 2003 (expired).

[50] D. Wing and A. Yourtchenko. "Happy Eyeballs: Trending Towards Success with Dual-Stack Hosts." *Internet Draft: draft-wing-v6ops-happy-eyeballs-ipv6-01*, October 2010.

### Appendix

#### A. More Collateral Damage

Figure 14 illustrates that collateral damage can occur when secure ASes opt for long or expensive secure paths. When security is prioritized, such collateral damage can also be caused by secure ASes choosing costly secure paths.

**Figure 17.** We demonstrate how AS 4805, Orange Business in Oceania, experiences collateral damage when security is the top priority. On the left, we show the network before S*BGP deployment. AS 4805 learns two routes: a legitimate route through its peer, Optus Communications AS 7474, and a bogus route through its provider AS 2647. Since AS 4805 prefers peer routes over provider routes according to our LP rule, it selects the legitimate route and avoids the attack. On the right, we show the situation after S*BGP deployment. Now, Optus Communications AS 7474 uses a secure route through its provider AS 7473. However, AS 7474 no longer announces a route to its peer AS 4805, as this would violate the export policy Ex. As a result, AS 4805 is left with the bogus provider route through AS 2647 and suffers collateral damage.

#### B. Computing Routing Outcomes

Below are algorithms for computing S*BGP routing outcomes in the presence of an attacker, as described in Section 3.1, for each of our three S*BGP routing models. These algorithms take as input an attacker-destination pair (m, d) and the set of secure ASes S, and output the S*BGP routing outcome. Note that these algorithms can also be used to compute routes under normal conditions (no attacker, m = ∅) and when no AS is secure (S = ∅).

These algorithms extend the approach used in [19, 20, 22] to handle partial S*BGP deployment in the presence of the adversary described in Section 3.1. They construct a partial two-rooted routing tree by performing multi-stage breadth-first-search (BFS) computations with d and m as the two roots. The correctness of these algorithms is proven in Appendix B.5. Subsequent sections detail how to use these algorithms to partition ASes into doomed, immune, and protectable nodes, and to determine which ASes are happy or experience protocol downgrade attacks for a given (m, d)-pair and deployment S.

##### B.1 Notation and Preliminaries

Since BGP (and S*BGP) sets up routes to each destination independently, we focus on routing to a unique destination d. A route is considered legitimate if it does not include the attacker m (either because there is no attacker, m = ∅, or because the attacker is not on the route). Otherwise, the route is considered attacked. In the presence of an attacker m launching the attack described in Section 3, all attacked routes have m as the first hop following d. We use the following definition of "perceivable routes" from [36].

**Definition B.1 (Perceivable Routes).** A simple (loop-free) route \( R = \{v_{i-1}, \ldots, v_1, d\} \) is perceivable at AS \( v_i \) if one of the following conditions holds:
1. \( R \) is legitimate (so \( v_1 \neq m \)), and for every \( 0 < j < i \), \( v_j \) announcing the route \( (v_j, \ldots, d) \) to \( v_{j+1} \) does not violate the export policy Ex.

This structured and refined version should provide a clearer and more professional presentation of the information.