39
20
6
2
0
1
0
0
81
77
74
66
65
60
48
31
17
9
2
2
82
80
76
68
65
58
46
32
21
9
9
1
Very
High
80
78
74
68
67
65
56
45
36
16
14
2
widths (each cell is 2 feet square) at ﬁve different power
settings. We have averaged a single percentage vs distance,
but from the same data we could also derive, and plug
into the simulator, a two dimensional model (percentage
of packets received at a given x,y offset from the sender)
to capture the isometry of footprints [17], or the model
could include standard deviations as well as averages [10]
to capture the noisiness of radio transmission. We conjecture
that
the slightly lower percentage of packets received at
small distances when using very high power over high power
transmission is because high power radio signals tend to
distort near to the transmitter. Consider a cell at location
(x, y), which is distance d from a sending node’s cell. We
choose a random number r. If (r ≤ prob[d]) then the
footprint cell at (x, y) has value GOOD SIGNAL. If r >
prob[d] and (x, y) is close to the sender then the footprint
cell at (x, y) has value NOISE. If (r > prob[d]) and (x, y) is
far from the sender, or outside the footprint range, then the
footprint cell at (x, y) has value NO SIGNAL. In this paper,
close and far are deﬁned in terms of a disk centred on the
sender: within the disk, each cell that fails to receive a packet
contains noise. Outside the disk, each cell that fails to receive
a packet contains no signal, and thus is free to receive signals
from other transmitting nodes. The disks have radii three to
eight for very low to very high power respectively. Further
work is needed to validate this model experimentally.
D. Transmission Model
WSN nodes are autonomous and may send at any time.
The order in which nodes transmit is important as it affects
which nodes can proceed, and which nodes must back off.
The set of nodes waiting to send are processed in random
order to model the non-determinism of autonomous nodes in
physical implementations.
For each node in the landscape that wishes to send, a radio
footprint is generated and combined with the current signal
state of the landscape according to the rules in Table II.
Initial Landscape
NO SIGNAL
NO SIGNAL
NO SIGNAL
NOISE
GOOD SIGNAL
GOOD SIGNAL
Footprint Cell
NO SIGNAL
GOOD SIGNAL
NOISE
any cell state
GOOD SIGNAL|NOISE
NO SIGNAL
Final Landscape
NO SIGNAL
GOOD SIGNAL
NOISE
NOISE
NOISE
GOOD SIGNAL
The effect of these rules is that intersecting footprints will
collide where two good signals, or noise, are broadcast to the
same cell. In Figure 1 dark cells show transmission noise and
collisions, grey cells the good signal, and white cells contain
no signal. The position of network nodes is indicated by
a cross in a landscape cell. After each simulation cycle all
landscape cells are reset to NO SIGNAL, representing the
fading of radio signal from the landscape.
E. Media Access Control
All networks with a shared medium, be it an Ethernet (the
wire) or a radio network (the airwaves), have a problem with
multiple hosts wanting to transmit simultaneously. The major
problem arising from this contention is that the network will
become inefﬁcient and congested as the medium becomes full
of useless trafﬁc, the result of many transmissions colliding,
and subsequently corrupting each other. In networks with a
shared medium, hosts need a Media Access Control (MAC)
protocol
to address this issue of contention. The MAC
protocol makes the decision of when a node should transmit
a packet, to maximise the probability of the transmission
arriving intact at its destination.
A common MAC protocol that is used in wireless networks
is the Carrier Sense/Multiple Access (CSMA) MAC protocol.
In the non-persistent CSMA protocol [18] used by the WSN
simulator, a node that wants to transmit a packet ﬁrst listens
to see if a transmission signal (carrier) is present. If no
other transmission is present then the node proceeds with
transmission otherwise the node backs-off
for a random
time period, before repeating the procedure. Back-off is the
amount of time that the node will wait before attempting
to send again. The back-off time in the WSN simulator
is bounded by a maximum back-off value that is deﬁned
at runtime. The effect of back-off on network behaviour is
explored in Section IV-C.
F. Packet Model
The simulator framework provides two abstract classes
(Packet and PacketHeader)
the packet model.
The WSN simulator extends these classes to create the
MediumPacket and DataPacket classes that are used
for network communication. The simulator does not use a
byte level representation of a transmitted packet, rather these
classes are instantiated and shared if necessary.
for
1) The Medium Packet: The medium packet is the ‘enve-
lope’ that each transmission is sent in. Each medium packet
has a header and contains a data packet. The header consists
of the transmitting node’s address, the destination (next hop)
address and a unique packet identiﬁer. A new medium packet
is instantiated for every transmission.
2) The Data Packet: The data packet consists of a header
and a payload, and makes up the body of each data trans-
mission. The header used by the data packet includes the
destination and source nodes, and a packet identiﬁer as in
TinyOS packets [19]. A packet’s payload is the information
that
typically 30 bytes for TinyOS
motes [10]. The classes used for the data packet and header
are DataPacket and DataHeader respectively. For each
new data packet that is introduced to the network an instance
of DataPacket is created
is being transported,
G. Routing Protocol
The aim of the WSN simulator is to model and simulate the
behaviour of a wireless sensor network. The major parts of
the simulation that deﬁne the behaviour of a wireless network
is the radio model and the protocols followed by each node.
Each node’s protocol is an algorithm which deﬁnes what
action to take whenever a packet is received or where to
direct a packet that needs to be sent. Routing protocols are
an important class of protocols which perform, in general,
one or more of the following actions after receiving a packet:
1) pass the packet to the node for further processing,
2) forward the packet to the next hop in the path to its
destination or
3) drop the packet if it is wayward or too old.
When forwarding a packet, the routing protocol is in charge
of deciding the best way to reach a destination.
In an abstract sense, as used by the WSN simulator,
the routing protocol is only called when a packet is to be
received or when a packet needs to be sent. The Boris
framework provides an abstract RoutingProtocol class
consisting of two abstract methods, send( DataPacket
) and receive( MediumPacket ) [11]. The send
method is called when a data packet needs to be sent and is
responsible for wrapping the given data packet in a medium
packet and adding it to the node’s send queue. The receive
method is called whenever a packet is received from the
landscape and is responsible for deciding on what action,
if any, to take.
The WSN simulator allocates a separate instance of a rout-
ing protocol to each node present in the network. This allows
for the possibility of different nodes in a network using dif-
ferent routing protocols. The generic RoutingProtocol
class also allows for developers to implement any other
protocols above the data link layer, and link them together
as they wish.
The class to use for the routing protocol in a simulation
is deﬁned in the conﬁguration ﬁle as the value for the
boris.landscape.nodes.routingProtocol prop-
erty. In the experiments reported in this paper a simple
is used in which each node, with the
ﬂooding protocol
exception of the ﬂood’s source node, performs the following
tasks. The source node starts at step 2, broadcasting a default
ﬂood message.
1) Wait to receive a packet
2) Broadcast that packet as soon as the carrier is free
3) No further action
This ﬂooding protocol uses no acknowledgements or colli-
sion detection, but relies only on the redundancy inherent in
the protocol to ensure that as many nodes as possible receive
the ﬂood.
Flooding is chosen for our study because, in a wireless
sensor network, ﬂooding protocols are a primitive building
block for many other protocols. In addition, the performance
of this ﬂooding protocol has been studied in an implemented
WSN of 156 nodes [8], and so we are able to compare
predicted performance with the observed performance of that
network.
IV. PERFORMANCE ANALYSIS OF FLOODING
We have modelled wireless sensor networks in order to
evaluate the impact of the limited resources of this type of
network on the performance of the network. In this section
we present results of a series of simulation experiments to
measure the time efﬁciency, resource efﬁciency and robust-
ness of a simple ﬂooding protocol in a dense sensor network.
For the simple ﬂooding protocol considered in this paper,
every node receives and sends a packet exactly one time,
and so in our context energy efﬁciency is equal to robustness
times transmission power. For the purpose of this experiment
we deﬁne these parameters as follows:
• Time Efﬁciency (cycles) is the amount of time that it
takes for all nodes of a network to receive the ﬂood
message (i.e. complete step 1 of the protocol). Where
fewer than 100% of nodes are reached by the ﬂood,
efﬁciency is calculated for reached nodes only.
• Resource Efﬁciency (percentage) measures how ef-
ﬁciently the available network resources are used to
deliver the ﬂood message. It is deﬁned as the ratio of
the time taken for all nodes in the network to receive
the ﬂood message, to the time taken for the protocol to
complete and all nodes to settle (i.e. complete step 2
of the protocol). Where fewer than 100% of nodes are
reached by the ﬂood, efﬁciency is calculated for reached
nodes only.
• Robustness (percentage) is the percentage of nodes in
a landscape which receive the ﬂood message.
A. Varying Transmission Power
The transmission power used by each node for forwarding
the ﬂood packet has a signiﬁcant effect on the overall lifetime
CONFIGURATION FOR POWER SETTING EXPERIMENTS
TABLE III
Parameter
CONSTANTS
Landscape size
Node topology
Source Node
Simulation Runs
Maximum Backoff
Footprint Model
VARIABLES
Power Settings
Value
50 x 50 cells each 2 ft square
50 x 50 (1 node per cell)
(0,0) top left corner
100 runs per power setting
5
Sparse with noise
Very high, high, medium
low, very low
of the network, because each node in a WSN has a very lim-
ited energy budget. Using high transmission power, and thus
using valuable energy, is only justiﬁed if it provides balancing
performance improvements in the speed or robustness of
ﬂooding. The aim of this experiment is to measure the effects
of using different transmission power settings on the overall
performance of a WSN. With the larger reach of a high
powered transmission it can be reasoned that reception of a
ﬂood packet will be faster, but how long will the network be
busy reacting to the large amount of activity caused by many
nodes transmitting at high power? How does the performance
of a ﬂood using low powered transmissions compare with
transmissions of a higher power?
The experiment will focus on ﬁve transmission power
settings: very high, high, medium, low and very low, which
correspond to RF transmission powers ranging from 3.25uW
(very high) to 0.25 uW (very low)on a Rene mote [20] as
used in physical experiments [8].
The parameters used to conﬁgure the simulator for the
power setting experiments are deﬁned in Table III. These
parameters are used to simulate 100 ﬂood runs for each
power setting. We report the average number of cycles taken
for 25%, 50%, 75%, 95% and 99% of the network nodes to
receive the ﬂood and the number of cycles taken for 99% of
the nodes to settle. Error bounds (2 standard deviations) are
given in brackets for each reported cycle average. Robustness