# Domain-Based Administration of Identity-Based Cryptosystems for Secure Email and IPSEC

**Authors:**
- Diana K. Smetters
- Glenn Durfee

**Affiliation:**
Palo Alto Research Center (PARC)
3333 Coyote Hill Road
Palo Alto, CA 94304
{smetters, gdurfee}@parc.com

**Conference:**
12th USENIX Security Symposium
Washington, D.C., USA
August 4–8, 2003

**Copyright:**
© 2003 by The USENIX Association
All Rights Reserved

**Contact Information:**
- Phone: +1 510 528 8649
- FAX: +1 510 548 5738
- Email: PI:EMAIL
- Website: [http://www.usenix.org](http://www.usenix.org)

**Abstract:**
The widespread deployment of cryptographic technologies such as secure email and IPsec has been hindered by the challenges associated with establishing a large-scale public key infrastructure (PKI). Identity-based cryptography (IBC) can mitigate some of these issues, but current IBC approaches for email and IPsec require a globally trusted key distribution center. This paper introduces DNSIBC, a system that leverages the benefits of IBC without necessitating a global trust infrastructure. DNSIBC can be configured to require minimal user intervention for securing both email and IP-based network traffic. A preliminary implementation of this system has been developed for Linux.

## 1. Introduction

Standards for end-to-end encryption and authentication of email messages and IP-based communication have been available for several years [8, 18]. However, these standards are not widely used, primarily due to the difficulties in managing and distributing keys. Traditional public key infrastructures (PKIs) are complex and challenging to set up and manage. Even with a PKI, users must still obtain and authenticate their communication partner's public key, which often requires additional steps.

### 1.1 Identity-Based Cryptography

Identity-Based Cryptography (IBC), first introduced by Shamir [26], was proposed to address these key management issues. In an IBC scheme, a user's public key is an arbitrary string, such as "PI:EMAIL" or "myhost.parc.com." This string, known to the communication partner, can be used to encrypt messages. The corresponding private key is derived from the public identity using global system parameters and a master secret held by a trusted third party, the Private Key Generator (PKG). While IBC provides automatic key escrow, it also introduces significant scaling and trust management problems, particularly in requiring a globally trusted PKG.

### 1.2 Our Approach

Our goal is to leverage the usability of IBC without requiring a global trust model. We aim to design a system that balances security and usability, leading to wider deployment of secure email and IPsec. Unlike the approach by Appenzeller and Lynn [1], we integrate our system into existing standards and software to facilitate deployment. We design our trust model to reflect the divisions in today's deployed networks, emphasizing auto-configuration and automatic updates to minimize practical barriers.

To achieve this, each trust domain runs its own Private Key Generator (PKG). To communicate securely with a party, you need to know their identity and obtain the system parameters of their trust domain. This approach is simpler than a traditional PKI because the system parameters are shared within the trust domain. It also simplifies the distribution of private keys, as the namespace of identifiers is local to the trust domain, and fewer key recipients need to be authenticated.

### 1.2.1 Bootstrapping IBC with Domain-Based Trust

Currently, user identities for email (email addresses) and host identities (names or IP addresses) are managed at the level of network domains, as described by the Domain Name System (DNS). DNS delegates management of parts of the Internet name space to individual domains of control. We propose to divide the responsibility for authenticating these identities along the same lines, with each DNS domain responsible for creating IBC system parameters and distributing private keys to its users.

Recent security extensions to DNS, known as DNSSEC, allow DNS servers to digitally sign responses, ensuring they cannot be modified or spoofed [9]. DNSSEC-capable name servers provide and authenticate cryptographic data, making them a practical distribution method for cryptographic keys and certificates used in IPsec, TLS, secure email, and other protocols [9, 10, 24].

Using DNSSEC to store and distribute authenticated IBC parameters for a domain offers several advantages over a traditional PKI:

1. **Minimized DNS Information:** IBC parameter information is global to the domain and generated once, with updates only in case of master secret compromise. This reduces the load on DNS servers.
2. **Caching:** Clients can cache the domain's system parameters, reducing the need for repeated DNS queries.
3. **Incremental Deployment:** Domains can deploy the system incrementally, and trust can be constructed subtree by subtree until the roots are in place.
4. **Simplified Client Configuration:** Clients can automatically request their private key when needed, simplifying setup and motivating users to secure their communications.
5. **Automatic Public Key Generation:** The system can generate the public key of any party whose domain participates, and the lack of domain parameters in the DNS indicates non-participation.

In summary, DNSIBC provides a practical and scalable solution for deploying IBC, leveraging the existing DNS infrastructure and simplifying key management for secure email and IPsec.