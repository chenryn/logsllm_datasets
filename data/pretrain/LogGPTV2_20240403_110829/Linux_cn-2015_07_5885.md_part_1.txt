---
author: Philo
category: 技术
comments_data:
- date: '2015-08-26 06:54:41'
  message: 讲得什么狗食，不就是iso引导，利用docker吗？挂羊头卖狗肉》？
  postip: 122.70.41.86
  username: 来自北京的 Chrome 31.0|Windows 7 用户
count:
  commentnum: 1
  favtimes: 7
  likes: 0
  sharetimes: 0
  viewnum: 13395
date: '2015-07-27 13:39:00'
editorchoice: false
excerpt: ubuntu打开的正确方式（笑） 在这个快节奏的时代。能够使用最快速度最低代价完成任务具有非常重要的意义，对于现代开发者来说，Linux是生活中必不可少且不可替代的工具，如果我们在开发少或学习中少一些遇到环境的坑，会节省很多时间，潜伏在各种Linux群中数年，发现大家都有手贱（操作失误，笑），因此在本文中给出终极解决方案：
  直接使用Ubuntu Live CD 来完成系统的启动。 那么最快的Linux安装办法又是什么呢？其实经过严谨的思考之后我个人觉得是不安装。我们可以准备从grub启动ubuntu操作系统把系统放到内存中，再预制出各种情况的
fromurl: http://www.philo.top/2015/07/21/UbuntuDevEnv/
id: 5885
islctt: false
largepic: /data/attachment/album/201507/25/225647vww3jwwrq6l32f63.jpg
permalink: /article-5885-1.html
pic: /data/attachment/album/201507/25/225647vww3jwwrq6l32f63.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: ubuntu打开的正确方式（笑） 在这个快节奏的时代。能够使用最快速度最低代价完成任务具有非常重要的意义，对于现代开发者来说，Linux是生活中必不可少且不可替代的工具，如果我们在开发少或学习中少一些遇到环境的坑，会节省很多时间，潜伏在各种Linux群中数年，发现大家都有手贱（操作失误，笑），因此在本文中给出终极解决方案：
  直接使用Ubuntu Live CD 来完成系统的启动。 那么最快的Linux安装办法又是什么呢？其实经过严谨的思考之后我个人觉得是不安装。我们可以准备从grub启动ubuntu操作系统把系统放到内存中，再预制出各种情况的
tags:
- 容器
- 开发环境
thumb: false
title: 秒杀SSD，ubuntu极速开发环境搭建
titlepic: false
translator: ''
updated: '2015-07-27 13:39:00'
---
### ubuntu打开的正确方式（笑）
在这个快节奏的时代。能够使用最快速度最低代价完成任务具有非常重要的意义，对于现代开发者来说，Linux是生活中必不可少且不可替代的**工具**，如果我们在开发少或学习中少一些遇到环境的坑，会节省很多时间，潜伏在各种Linux群中数年，发现大家都有**手贱**（操作失误，笑），因此在本文中给出终极解决方案： **直接使用Ubuntu Live CD 来完成系统的启动。**
那么最快的Linux安装办法又是什么呢？其实经过严谨的思考之后我个人觉得是**不安装**。我们可以准备从grub启动ubuntu操作系统把系统放到内存中，再预制出各种情况的环境包，也就是环境模块化，因为系统是在整个内存中所以速度非常非常快，需要模块化的内容并不多，比如说ssh vim tmux 为一组工具，开机后一个命令就可以激活工具包，不到几秒钟的时间即可完成，其他的如Chrome浏览器一类的都可以快速完成在内存上的安装。通过这种方式让环境更加灵活更加快速准备好开发环境。
这是一个思路上的变化，从我需要什么就安装什么一起都准备好给你用`->`变成了只启动基础的系统然后我需要什么我就后加载什么。
最后的准备在于容器，Docker 以及RKT与RunC的准备，在团队内可以秒级推送运行的环境。
![](/data/attachment/album/201507/25/225647vww3jwwrq6l32f63.jpg)
本文依然有它的缺点： 主要体现在两个方面
1. 如果默认驱动不好使会造成很多麻烦。
2. 对于内存小的开发机器还是做快照比较好。最少4G内存，我们推荐内存在8G以上最好是16G或者32G内存的机器上采用此方案。
因为本方案整个操作系统都是加载到内存中的，硬盘速度即为内存的速度，我这里实测可以达到4.5Gb/s，所以你准备好屌丝逆袭（买不起SSD）秒杀高富帅了吗？
### ubuntu
对于它的简单介绍可以参考[这里](http://baike.baidu.com/view/4236.htm)。当然对于我本人而言选择Ubuntu主要原因仅仅是对他比较熟悉。并不限制使用什么发行版本。如果您要是选本方案搭建环境，并且选择其他发行版本请选择LiveCD尽量小一点的，如果能自己裁剪LiveCD就更好了，另外尽量选择64位架构。当然自己越熟悉越好。
虽然Ubuntu有一点不自由，但是我个人觉得包的质量管理还是非常好的，的确适合开发者使用。
### Docker
官方：
它对于我来说，几乎就像是水，如果没有他就没有今天的丰富多彩的运行方式，它可以让程序连同环境一起打包运行，使得部署备份等等非常方便，对于本次环境构建而言我们可以在个人的registry上备份自己的环境，只需要一小段时间就可以克隆回来。再加上现在各种永久免费的国内加速服务这种环境部署就是程序员天堂。更多细节请关注[这里](http://help.daocloud.io/tutorials/index.html)。
在本文中我们使用单文件版本的Docker文件，方便可控。无任何累赘。本人不喜脚本安装。
### RunC && RKT
这两种产品是libcontainer的代表。相对于Docker来说，它是一个容器只需要一个进程，对于Docker来说，他需要一个守护进程。在本文中（本博主）不评价任何产品的好坏，只说什么时候适合用什么。当然在我们这里利用了它启动方便，挂载方便的特性让我们的工作更方便更方便更方便！
由于现在RunC还没有发布1.0版本文档几乎没有，因此我这里会给出我的详细研究结果。至于RKT还是大家自己摸索，文档已经很全了。
### CoreOS
作为专门运行容器的操作系统，稳定性可不属性都是前所未有，当然我们的容器可以跑在这个上面本文中会提及两个系统的兼容性方案。
1. Ubuntu适合程序开发的情况。启动速度可能在1分钟左右（有点慢）。但是有图形界面，**有定制基础环境的方案。**
2. CoreOS适合跑程序，启动速度在10秒以下适合释放更多内存来跑临时业务，做测试的时候实用此方案。
### 从Grub开始
#### 什么是Grub
它可以装在硬盘上帮助你启动操作系统，几乎所有操作系统都可以，当然也包含本次的方案内容。安装方式有很多种。而且必须得根据自己的情况来安装。因为每个人电脑上的操作系统情况都不一样，有的已经有系统了。有的不想给自己装引导。可能先放到u盘上引导都有可能。因此这里不做安装方法上的更多描述可以自己根据情况到搜索引擎上搜索。
#### Grub 的安装
我之前是安装了windows，所以我直接安装了EasyBCD然后安装NeoGRUB来实现的。具体操作步骤如下：
1. 下载安装EasyBCD
2. 如图所示![](/data/attachment/album/201507/25/225648zh0hcp7tdtyasf7a.png)
3. 安装重启电脑之后选择Grub启动项可以进入一个类似输入命令的界面即可确定完成安装。