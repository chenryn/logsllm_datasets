## üêõ Bug Report

After upgrading to the latest version of SciPy (1.4.0, released on Tuesday), I encountered a segmentation fault when importing `torch` after `scipy`. My current workaround is to pin SciPy to a version lower than 1.4.0, which prevents the crash. Notably, the only combination that causes the crash is specifically importing `scipy` first and then `torch`.

### Steps to Reproduce
1. Create a virtual environment:
   ```bash
   python3 -m venv build/venv
   ```
2. Activate the virtual environment:
   ```bash
   . build/venv/bin/activate
   ```
3. Install the required packages:
   ```bash
   pip install scipy torch
   ```
4. Run the following Python command:
   ```bash
   python -c 'import scipy, torch'
   ```

This results in a segmentation fault:
```bash
zsh: segmentation fault (core dumped)  python -c 'import scipy, torch'
```

Using `cppyy` and `glog`'s signal handler, I was able to capture the following stack trace:

```plaintext
*** Aborted at 1576699991 (unix time) try "date -d @1576699991" if you are using GNU date ***
PC: @     0x7f96f9542db6 pybind11::detail::make_new_python_type()
*** SIGSEGV (@0x330) received by PID 11372 (TID 0x7f97125fe740) from PID 816; stack trace: ***
    @     0x7f971205af20 (unknown)
    @     0x7f96f9542db6 pybind11::detail::make_new_python_type()
    @     0x7f96f954ce86 pybind11::detail::generic_type::initialize()
    @     0x7f96f96cab5e torch::onnx::initONNXBindings()
    @     0x7f96f94c2eb0 initModule()
    @           0x5fba6f _PyImport_LoadDynamicModuleWithSpec
    @           0x5fbced (unknown)
    @           0x5678ee PyCFunction_Call
    @           0x51171e _PyEval_EvalFrameDefault
    @           0x508245 (unknown)
    @           0x50a080 (unknown)
    @           0x50aa7d (unknown)
    @           0x50c5b9 _PyEval_EvalFrameDefault
    @           0x509d48 (unknown)
    @           0x50aa7d (unknown)
    @           0x50c5b9 _PyEval_EvalFrameDefault
    @           0x509d48 (unknown)
    @           0x50aa7d (unknown)
    @           0x50c5b9 _PyEval_EvalFrameDefault
    @           0x509d48 (unknown)
    @           0x50aa7d (unknown)
    @           0x50c5b9 _PyEval_EvalFrameDefault
    @           0x509455 _PyFunction_FastCallDict
    @           0x5a55a1 _PyObject_FastCallDict
    @           0x5a65de _PyObject_CallMethodIdObjArgs
    @           0x4f729d PyImport_ImportModuleLevelObject
    @           0x50e4f1 _PyEval_EvalFrameDefault
    @           0x508245 (unknown)
    @           0x5167b9 (unknown)
./run.sh: line 10: 11372 Segmentation fault      (core dumped) python reproduce.py
```

I am unsure why upgrading SciPy to 1.4.0 causes this segmentation fault within PyTorch.

For completeness, here is the `reproduce.py` script:
```python
import cppyy
cppyy.load_library('glog')
cppyy.include('glog/logging.h')
cppyy.gbl.google.InstallFailureSignalHandler()
import scipy
import torch
```

### Expected Behavior
No segmentation fault should occur.

### Environment
```bash
% python collect_env.py 
Collecting environment information...
PyTorch version: 1.3.1
Is debug build: No
CUDA used to build PyTorch: 10.1.243
OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CMake version: version 3.10.2
Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.2.89
GPU models and configuration: GPU 0: GeForce GTX 1080
Nvidia driver version: 440.33.01
cuDNN version: Could not collect
Versions of relevant libraries:
[pip3] numpy==1.17.4
[pip3] torch==1.3.1
[conda] Could not collect
```