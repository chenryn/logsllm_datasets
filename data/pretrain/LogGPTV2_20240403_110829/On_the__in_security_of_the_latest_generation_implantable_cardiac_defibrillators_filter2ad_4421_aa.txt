title:On the (in)security of the latest generation implantable cardiac defibrillators
and how to secure them
author:Eduard Marin and
Dave Singel&apos;ee and
Flavio D. Garcia and
Tom Chothia and
Rik Willems and
Bart Preneel
On the (in)security of the Latest Generation Implantable
Cardiac Deﬁbrillators and How to Secure Them
Eduard Marin
ESAT-COSIC and iMinds
KU Leuven, Belgium
Dave Singelée
ESAT-COSIC and iMinds
KU Leuven, Belgium
Flavio D. Garcia
School of Computer Science
University of Birmingham, UK
PI:EMAIL
PI:EMAIL
PI:EMAIL
Tom Chothia
School of Computer Science
University of Birmingham, UK
PI:EMAIL
Rik Willems
Cardiology, University Hospital
Gasthuisberg
Leuven, Belgium
PI:EMAIL
Bart Preneel
ESAT-COSIC and iMinds
KU Leuven, Belgium
PI:EMAIL
ABSTRACT
Implantable Medical Devices (IMDs) typically use propri-
etary protocols with no or limited security to wirelessly com-
municate with a device programmer. These protocols enable
doctors to carry out critical functions, such as changing the
IMD’s therapy or collecting telemetry data, without hav-
ing to perform surgery on the patient.
In this paper, we
fully reverse-engineer the proprietary communication pro-
tocol between a device programmer and the latest genera-
tion of a widely used Implantable Cardioverter Deﬁbrilla-
tor (ICD) which communicate over a long-range RF channel
(from two to ﬁve meters). For this we follow a black-box
reverse-engineering approach and use inexpensive Commer-
cial Oﬀ-The-Shelf (COTS) equipment. We demonstrate that
reverse-engineering is feasible by a weak adversary who has
limited resources and capabilities without physical access to
the devices. Our analysis of the proprietary protocol results
in the identiﬁcation of several protocol and implementation
weaknesses. Unlike previous studies, which found no secu-
rity measures, this article discovers the ﬁrst known attempt
to obfuscate the data that is transmitted over the air. Fur-
thermore, we conduct privacy and Denial-of-Service (DoS)
attacks and give evidence of other attacks that can compro-
mise the patient’s safety. All these attacks can be performed
without needing to be in close proximity to the patient. We
validate that our ﬁndings apply to (at least) 10 types of
ICDs that are currently on the market. Finally, we propose
several practical short- and long-term countermeasures to
mitigate or prevent existing vulnerabilities.
1.
INTRODUCTION
Implantable Medical Devices (IMDs) such as pacemakers
and Implantable Cardioverter Deﬁbrillators (ICDs) are used
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
ACSAC ’16, December 05-09, 2016, Los Angeles, CA, USA
c⃝ 2016 ACM. ISBN 978-1-4503-4771-6/16/12. . . $15.00
DOI: http://dx.doi.org/10.1145/2991079.2991094
to monitor and help control abnormal heart rhythms. ICDs
are battery-powered devices that deliver electric shocks to
the patient’s heart if the heartbeat is too fast. Some ICDs
can also act as a pacemaker and give tiny electrical shocks
if the heartbeat is too slow. ICDs have evolved over three
generations. The ﬁrst generation (or the oldest) do not have
any wireless interface and hence do not allow reprogramming
once the ICD is implanted. The second and third generation
enable wireless communication with external devices includ-
ing device programmers and base stations. Device program-
mers are used by medical personnel to wirelessly modify the
ICD’s settings or collect telemetry data, whereas base sta-
tions, installed in the patients’ home, allow remote monitor-
ing by gathering telemetry data from the ICD and sending
this data to the hospital. Both device programmers and base
stations have a programming head that activates the ICD’s
wireless interface when it is placed above the implantation
site (the patient’s chest) for a few seconds.
The second generation of ICDs supports wireless commu-
nication between the programming head and the ICD only
over a short-range communication channel (less than 10 cm).
In the third generation (the latest), the programming head
is ﬁrst used over the short-range communication channel to
activate the long-range communication link of the ICD. This
process is illustrated in Fig 1. Both devices can then com-
municate with each other over a long-range communication
channel (from two to ﬁve meters), not requiring the use of
the programming head anymore, unless the session expires.
While these advances bring substantial clinical beneﬁts
to patients, new security and privacy threats also emerge,
specially due to the wireless communication between these
devices. Adversaries may eavesdrop the wireless channel to
learn sensitive patient information, or even worse, send ma-
licious messages to the ICD. The consequences of these at-
tacks can be fatal for patients as these messages can contain
commands to deliver a shock or to disable a therapy.
Our contribution: This paper presents the ﬁrst reverse
engineering and security analysis of the proprietary long-
range communication protocol between the device program-
mer and the latest generation of ICDs. For the reverse
engineering we use a black-box approach and inexpensive
Commercial Oﬀ-The-Shelf (COTS) equipment. This task is
not trivial since it was ﬁrst necessary to ﬁnd the symbol
rate from the waveform of the signals sent by the devices in
226
order to demodulate the captured messages correctly. We
show that for proprietary protocols on which we had no prior
knowledge or documentation, reverse-engineering is possible
by a weak adversary without even needing to have physi-
cal access to the devices. Our second contribution consists
of demonstrating several attacks that can compromise the
ICD’s availability and the patient’s privacy. We give evi-
dence that replay and spooﬁng attacks are possible as well.
To evaluate the feasibility of these attacks, we describe sev-
eral ways to circumvent the short-range communication step,
which requires being close to the patient, and perform ses-
sion hijacking. We validated that our ﬁndings apply to (at
least) 10 diﬀerent ICD models. Our third contribution is the
proposal of several short- and long-term measures to miti-
gate or solve the existing vulnerabilities in the latest genera-
tion of ICDs including a novel key agreement protocol which
we formally veriﬁed using ProVerif.
Disclosure of results: In accordance with the principle
of responsible disclosure, we have contacted and discussed
our ﬁndings with the manufacturer before disclosure. Given
the sensitive nature of our work, we omitted some of the
obtained results to avoid easy replication of the attacks.
Paper outline: The remainder of this paper is organ-
ised as follows. Section 1 gives an overview of related work
and shows our laboratory setup. Section 2 explains the pro-
cess of reverse-engineering the proprietary protocol between
the device programmer and the ICD. Section 3 describes
several strategies to circumvent the short-range communi-
cation, which requires close proximity to the patient. Sec-
tion 4 shows the protocol weaknesses and implementation
ﬂaws whereas practical and eﬀective short- and long-term
countermeasures to mitigate or solve these vulnerabilities
are presented in Section 5. Finally, Section 6 gives conclud-
ing remarks.
ICD
programming head
device 
programmer
Figure 1: ICD activation procedure.
1.1 Related work
1.1.1 Software radio-based attacks on IMDs
Several papers have demonstrated that IMDs often lack
strong security mechanisms, which makes them vulnerable
to diﬀerent types of remote attacks. Hei et al. showed a sim-
ple yet eﬀective attack where adversaries force the IMD to
respond to their messages, which reduces the battery life of
the IMD [13]. Halperin et al. analysed the proprietary proto-
col between the device programmer and a second generation
ICD to communicate over the short-range communication
channel [12]. As no security mechanisms were found, they
227
were able to carry out several software radio-based attacks
just by replaying past transmissions sent by the legitimate
device programmer. Similar attacks can also be performed
on an insulin pump, as shown by Li et al. [7]. Marin et al.
fully reverse-engineered the proprietary protocol between all
devices in a wireless insulin pump system, and extended the
attacks of Li et al. [16]. Unlike the work by Halperin et
al. [12], which focused on the short-range communication
(less than 10 cm), we analyse the proprietary protocol be-
tween the device programmer and a latest generation of ICD
over long-range communication (from two to ﬁve meters).
1.1.2 Countermeasures
Various countermeasures have been proposed to solve the
vulnerabilities found in IMDs. Gollakota et al. presented
the “shield”, an external device that acts as a proxy between
the device programmer and the ICD. The shield jams the
messages to/from the IMD to prevent others from decoding
them, while still being able to successfully decode them it-
self [10]. Although this solution mitigates some of the exist-
ing problems, it does not protect against adversaries who can
transmit malicious messages with much more power than the
shield. Tippenhauer et al. demonstrated that the shield does
not provide conﬁdentiality as a MIMO eavesdropper could
cancel out the interference produced by the shield and then
recover the messages sent by the devices [21]. Xu et al. intro-
duced a wearable device, also known as “IMDGuard”, which
does not only work as a proxy but also performs an authen-
tication process on the ICD’s behalf [22]. But Rostami et
al. found that the “IMDGuard” is vulnerable to a Man-In-
The-Middle (MITM) attack which reduces its eﬀective key
length from 129 bits to 86 bits [19]. Rostami et al. pre-
sented Heart-to-Heart (H2H), a commitment-scheme-based
pairing protocol through which the device programmer au-
thenticates to the IMD without needing to share any prior
secrets [20]. H2H implements a novel access-control policy
called “touch-to-access” that ensures access to the IMD by
any device programmer that can make physical contact with
the patient and measure his heart rate. However, Marin et
al. found that the H2H is vulnerable to a reﬂection and a
MITM attack [15].
Another line of research relies on exchanging a crypto-
graphic key between the device programmer and the IMD
via an auxiliary or Out-Of-Band (OOB) channel. Halperin
et al. proposed a zero-power authentication that uses an
RFID tag in combination with a piezo-element for audio-
based key distribution. However, Halevi et al. demonstrated
the feasibility of eavesdropping the audio transmissions of
the piezo element [11]. Rasmussen et al. proposed an ac-
cess control scheme based on ultrasonic distance bounding
which enables the IMD to grant access to its resources to
only a device programmer that is in its close proximity [18].
However, this typically requires dedicated analog hardware,
which makes the solution expensive to integrate in resource-
constrained devices like IMDs. Another proposal is to use
a Body-Coupled Communication (BCC) channel. Yet, Li
et al. showed that remote eavesdropping on a BCC channel
is possible with a very sensitive antenna [7]. In this paper,
we present practical and eﬀective countermeasures that can
be divided into two groups: short-term and long-term mea-
sures. The former do not require any modiﬁcation on the
ICDs and hence may be immediately adopted whereas the
latter can be implemented in future generations of ICDs.
1.2 Laboratory setup
Our laboratory setup comprises available Commercial Oﬀ-
The-Shelf (COTS) hardware including an Universal Serial
Radio Peripheral (USRP) [4], a data acquisition system
(DAQ) [1] and a few antennas, as shown in Fig2 . In addi-
tion, we have the following medical devices: a device pro-
grammer, a base station and several ICD models of the latest
generation. For our experiments, we created a receiver and a
transmitter programs using LabVIEW [3]. The ﬁrst step of
our black-box reverse-engineering approach is to eavesdrop
the wireless channel and capture the messages exchanged be-
tween the device programmer and the ICD. We then analyse
the messages to discover its format, and study how the mes-
sages are exchanged between the devices, i.e. the protocol
state-machine. Subsequently, we are able to create and send
our own messages to the ICD by means of the USRP, the
antenna and our transmitter program. To better evaluate
the feasibility of these attacks, we also study the ICD acti-
vation procedure. For this we use a DAQ and an antenna
to intercept the messages exchanged over the short-range
communication channel.
Figure 2: Laboratory setup. At the top, from left
to right, are our USRP and the DAQ. Our antennas
are shown at the bottom.
2.
INTERCEPTING THE WIRELESS
TRANSMISSIONS
Several articles [12, 7, 16] have already pointed out that
IMD manufacturers often rely on hiding the protocol spec-
iﬁcations to provide security. This is commonly known as
security-by-obscurity. Proprietary protocols typically oﬀer
very limited or no security guarantees and have been bro-
ken via diﬀerent reverse-engineering techniques. This paper
analyses the proprietary protocol between device program-
mers and the latest generation of ICDs to communicate over
a long-range channel. Instead of opening the devices to get
their ﬁrmware for the purpose of reverse-engineering the pro-
tocol, we follow a black-box approach. A similar approach
has been used in other articles [8, 9]. Our black-box ap-
proach consists of giving some inputs to the devices and
then inferring information by looking at their outputs, i.e.
228
the produced messages. In our work we study the feasibility
of reverse-engineering the proprietary protocol by a weak ad-
versary who has limited resources and capabilities. Through
meticulous analysis of these messages, we can infer the mes-
sage format and the protocol state-machine. Our black-box
approach, which is a labour-intensive process, is more chal-
lenging yet more realistic than other existing techniques, as
it assumes a weak attacker who can intercept the messages
sent wirelessly using a USRP and an antenna, but cannot
have physical access to the devices. We will now summarise
our approach and main ﬁndings.
2.1 Wireless communication parameters
Transmission frequency: The ICD and the device pro-
grammer’s programming head ﬁrst communicate over the
short-range communication channel (between 30-300 kHz)1.
After the ICD is activated, both devices communicate over
the long-range communication channel using the MICS2 band
(402-405 MHz). The transmission frequency of the devices
can be obtained through their Federal Communications Com-
mission (FCC) ID [2].
Modulation: By examining the signals sent by the de-
vices both in the time and frequency domain, we found that
the device programmer and the ICD use distinct modula-
tions to transmit their data.
In particular, the transmis-
sions from the device programmer to the ICD use a Fre-
quency Shift Keying (FSK) modulation, whereas a Diﬀeren-
tial Phase Shift Keying (DPSK) modulation is used in the
transmissions from the ICD to the device programmer [17].
Symbol rate: Due to the modulations being used, dis-
covering how many symbols (i.e. modulated bits) are sent
in each message simply by looking at signal’s waveform is a
challenging problem.
To estimate the symbol rate, we created a Matlab program
that uses the Hilbert transform to obtain the instantaneous
frequency of the signal. A key observation is that by de-
modulating the signals using an FM receiver and looking
at the demodulated waveforms, we found that the message
sent by the device programmer to request telemetry data is
always identical. This message is sent continuously to the
ICD when no operation is performed. The ﬁrst step is to in-
tercept several of these messages and store their waveforms
in a ﬁle. Our program takes these waveforms as inputs and
produces a graph that shows where the frequency shifts oc-