---
## Page 104
www.TopSage.com
---
## Page 105
的显示稍稍有些不同，但大体内容是一样的。
含了错误概况、加载的模块、寄存器信息、栈跟踪信息等。不同架构和内核版本
信息的一种：x86_64架构上发生无法处理的页面错误。这个0ops信息中大致包
Oops信息是内核中发生致命错误时输出的内核信息。下面的例子是最典型的Oops
Oops信息
#15
汇编语言等各种内核调试基础知识。
命令的使用方法、使用IPMI和MMIwatchdog获取crash dump的方法、内核的特殊
的使用方法、通过网络获取内核信息、SysRq 键、各种 dump 的获取方法、crash
本章介绍Linux内核调试的基本方法。包括Oops 信息的解读方法、串行控制台
dm_mirror dmmod ata_piix libata mptspi mptscsih mptbase scsi_transport_spi sd_mod
serio_raw parport_pc parport pcspkr e10o0 shpchp ide_cd cdrom dm_snapshot dm_zero
backlight i2c_ec i2c_core button battery asus_acpi acpi_memhotplug aclp floppy sg
Modules linked in:demo nfslockd fscache nfs_acl sunrpcipv6 dm_multipathvideo sbs
last sysfsfile:/block/dm-1/range
0ops:0002[1]SMP
PGD18b4c067PUD18b52067PMD0
[]:demo:init_opsdemo+0x2/0xe
Unable to handle kernel NULL pointer dereference at 00oooooooooo RIP:
CPU1
讲述内核中发生致命错误时输出的Oops信息的解读方法。
Oops信息的解读方法
www.TopSage.com
内核调试的准备
大家网
hack#15~#25
第3章
89
---
## Page 106
90
的地址（本例中为O）的页表（page table）信息。
demo 模块内的 init_oopsdemo()函数的第 2 个字节。最后的/0xe是 init_oopsdemo()
Oops 信息的第 1行是错误内容：Unable to handle kernel NULL pointer dereference
88丨第3章内核调试的准备
注1：
显示的次数。之后显示内核的重要特性 SMP和 PREEMPT 的配置情况。这条信息所在
0ops:之后的数值是错误代码，在后面的’内的数值是与页面有关的Oops 信息被
示模块名和函数名等。接下来的一行PGD18b4c067PUD18b52067 PMD0是试图访问
函数的大小。此外，如果没有KALLSYMS 内核选项，就只显示逻辑地址，而不会显
是 RIP 寄存器的值。:demo:init_oopsdemo+ox2/0xe 的意思是，错误发生的地址是
at 000000000000，随后的 RIP:[]是错误发生地址，也就
RSP 
RIP [] :demo:init_oopsdemo+0x2/0xe
Code: c7 0425 00 00 00 00 17 08 76 19 c3 ff ff 05 00 00 00 ff ff
Call Trace:
Stack: ffffffff800a397c 000000000000001a 0000000000000000 000000001701be78
Process insmod (pid: 2473, threadinfo ffff8101701a000, task ffff81001f643820)
CR2: 00000000000000 CR3: 00000016ade000 CR4: 00000000000006e0
CS:0
R13:f
R10:
RSP: 0000:ffff81001701be60 EFLAGS: 00010246
RIP: 0010:[] []
Pid: 2473, comm: insmod Not tainted 2.6.18-53.5 #1
scsi_mod ext3 jbd ehci_hcd ohci_hcd uhci_hcd
[] system_call+0x7e/0x83
[]  _atomic_dec_and_lock+0x39/0x57
[] sys_init_module+0x16aa/0x185f
0000000000 0000000000000 fffc200001605a8 ffff81001c852ea0
0000000000000000000000000000000000000000000000000000000000000000
RBP:f
: 0000000000000000 RBX: ffffffff883e1400 RCX: 000000000000000
0010 DS: 0000 ES: 0000 C
00002aaaaaad8210(0000) G
ffffffff883e1400 R14: ffff81001cb98bb8 R15: ffffc20000155f70
ffff81001cb98800 R08: ffff81001f669820 R09: 0000000000000020
0000000000000001 R11:
意为：无法处理指向地址O的NULL 指针。
ffffffff883e1400 R
CRO: 000000008005003b
GS: ffff81001fc40840(0000) knlGS :0000000000000000
0000000000000000 R12: ffff81001cb98c00
www.TopSage.com
RDI:f
ffffffff802ea344
] :demo:init_oopsdemo+0x2/0xe
---
## Page 107
这段代码在模块的初始化函数 init_oopsdemo()的开头试图对逻辑地址0进行写
载后就会发生 Oops。
上例中给出的Oops 信息是由下述代码发生的。将该代码编译成demo.ko模块，加
Oops显示测试
容是重复显示的，其值当然是相同的。
最后的 RIP 和 RSP 是错误发生时 RIP 和 RSP 的值。像 RIP 和 RSP 这样，有些内
为 12。Code:是错误发生时 RIP 指向的地址处的开头 20 个字节的代码。
分的值，此处显示的大小为kstack 内核选项指定的大小，不指定的情况下默认值
从 RIP:到CR2:的9 行只有当错误发生在内核模式下时才显示。Stack:是栈开头部
就像上例那样显示Nottainted。
如果涉及了某项原因，就会显示成Tainted：PF R B这样；如果不存在上述问题
强制卸载（R）、机器检查（machine check）异常发生（M）、检测到错误页（B）等
内核的污染原因包括私有（proprietary）驱动加载（P）、模块强制加载（F）、模块
进程ID(2473）、进程名（insmod）、内核污染原因（Not tainted）、版本（2.6.18-53.5)。
之后是加载了的模块列表。下一行显示了错误发生时该 CPU正在运行的进程的
last sysfs file:是最后打开的 sysfs文件名。
的内核启用了 SMP支持，是非可抢占内核（kemel preemption），所以只显示 SMP。
MODULE_LICENSE("GPL");
module_ exit(cleanup_oopsdemo);
static __exit void cleanup_oopsdemo(void)
module_init(init_oopsdemo);
 static __init int init_oopsdemo(void)
return 0;
*((int*)0x00) = 0x19760817;
www.TopSage.com
HACK#15 Oops 信息的解读方法 |  89
],[tgt-port]@/[tgt-macaddr]
netconsole是个字符串参数“netconsole"，其格式如下。
IP地址：10.1.1.200
（日志接收用远程机器）
IP地址:10.1.1.100
（发送端机器）
间发生的 panic 相关的内核信息，请通过串口控制台或其他方法获得。串口控制
网络相关的 kernel panic，以及与操作系统启动到网络和 netconsole模块启动之
src-port.….发送端端口号
tgt-macad.r..接收端MAC地址
tgt-iyp.接收端 IP地址
tgt-por..接收端端口号
dey...网络设备
src-ip.发送端IP地址
www.TopSage.com
HACK#17通过网络获取内核消息】95
---
## Page 114
99
2.重新启动 syslogd
接收端设置
发送端的/var/log/messages中有下面的信息。
2. 确认
96 1 第3章 内核调试的准备
在RedHat 系列发行版中使用以下命令。
1.修改 syslog 设置
 # service syslog restart
保存修改之后重新启动 syslogd。
为了让接收端的 syslog 能接收远程主机的日志,需要在/etc/sysconfig/syslog
Feb 13 17:39:36 hostname kernel: netconsole: local port 6665
# lsmod | grep netconsole
确认netconsole模块已经加载。
# modprobe netconsole netconsole=PI:EMAIL/etho,PI:EMAIL/00:0C:29:45:EB:FA
d- 0 W-=SN01Id0 09075AS
[修改后]
SYSLOGD_OPTIONS=" -m 0"
[修改前]
文件的 SYSLOGD_OPTIONS中添加-r选项。
g
3
13
3
13
13
3
17:39:36 hostname kernel: netconsole: network logging started
17:39:36 hostname kernel: netconsole: local IP 10.1.1.100
ifcfg-ethX文件或/etc/rc.local文件中添加1中的命令。
想在操作系统启动时加载 netconsole，需要在/etc/sysconfig/network-scripts/