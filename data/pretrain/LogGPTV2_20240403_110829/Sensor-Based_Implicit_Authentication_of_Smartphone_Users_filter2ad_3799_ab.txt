abnormal activities (e.g., a phone being stolen) by analyzing a
user’s location history, and they can achieve 86.6% accuracy.
However, the GPS information is sensitive, thus its use requires
explicit user permission.
Different from these past methods, our SmarterYou system
has broader contexts and the highest authentication accuracy
(98.1%), with low computational complexity.
Continuous and Context-based Authentication.
Riva et al. [10] built a prototype to use face recognition,
proximity, phone placement, and voice recognition to pro-
gressively authenticate a user. However, their objective is to
decide when to authenticate the user and is thus orthogonal to
our setting. Their prototype has a 42% reduction in requested
explicit authentication, but this was conducted with 9 users
only. Their scheme also requires access to sensors that need
users’ permissions,
limiting their applicability for implicit,
continuous authentication proposed in our system.
Existing continuous authentication approaches [17], [16],
[15] focused on a speciﬁc usage context and would fail if
the attacker who steals the smartphone does not perform
under the speciﬁc usage context. In contrast, our system
can automatically detect a context in a user-agnostic manner
and can continuously authenticate a user based on various
authentication models. That is, our system can authenticate
the users without requiring any speciﬁc usage context, making
it more applicable in real world scenarios.
Authentication with Wearable Devices.
Recently, wearable devices have emerged in our daily lives.
However, limited research has been done on authenticating
users by these wearable devices. Mare et al. [29] proposed
ZEBRA which is a bilateral recurring authentication method.
The signals sent from a bracelet worn on the user’s wrist
are correlated with the terminal’s operations to conﬁrm the
continued presence of the user if the two movements correlate
according to a few coarse-grained actions. To the best of
our knowledge, there is no smartphone authentication research
proposed in the literature that combines a wearable smartwatch
with a smartphone to authenticate a user, as we do.
III. THREAT MODEL AND ASSUMPTIONS
We consider an attacker who has physical access to a
smartphone. The smartphone may even have passed an initial
explicit login authentication, giving the attacker opportunity to
access secure or private information on the phone and in the
cloud using the phone. Conﬁdentiality, integrity, authentication
and privacy breaches are considered.
Wearable devices are gaining popularity, e.g., smartwatches
and ﬁtbits. They also contain many sensors e.g., accelero-
meter, gyroscope, ambient light and heartbeat sensors, and
can communicate with smartphones via Bluetooth. We assume
each smartwatch (and smartphone) is associated with one
owner/user and that users do not share their smartwatches
(and smartphones). We assume the communication between
the smartwatch and smartphone is secure. We do not assume
that users always have their smartwatch with them, so authen-
tication based on smartphone alone is in scope.
While network access is required for authentication model
training, or retraining after behavioral drift, network access
is not required for user authentication (testing) when the
smartphone is being used.
IV. SYSTEM DESIGN
A. Architecture Overview
Figure 1 shows the proposed SmarterYou architecture. It
includes three hardware devices: the user-owned wearable de-
vice (e.g., smartwatch), the smartphone, and the authentication
server in the cloud.
1) Wearable IoT device: In SmarterYou, we consider a two-
device authentication conﬁguration, which includes a smartp-
hone and a user-owned wearable device. We use a smartwatch
as an example, but other types of wearable devices, e.g., health
sensors, can also be applied to SmarterYou. SmarterYou is
designed for implicit authentication on the smartphone, where
the smartwatch serves as important auxiliary information for
improving authentication accuracy. The smartwatch keeps mo-
nitoring a user’s raw sensors’ data and sends the information
to the smartphone via Bluetooth. Our system works if only
the smartphone is present, but we will show that it works even
better if the smartwatch is also present.
311
2) Smartphone: Similar to the smartwatch, the smartphone
also monitors the user’s sensor data. It runs the authentication
testing module as a background service in the smartphone. In
the testing module, the feature extraction component receives
the sensor data from the smartphone and smartwatch. Then
it extracts ﬁne-grained time-frequency features from the raw
data, and forms two feature vectors: the context feature vector
and the authentication feature vector, and feeds them into the
context detection component and the authentication compo-
nent, respectively. The context detection component decides
which context the user is in and sends the detected context to
the authentication component.
The authentication component consists of a classiﬁer and
multiple authentication models. The classiﬁcation algorithm
we selected is the kernel ridge regression (KRR) algorithm
[30], but other machine learning algorithms can also be used.
An authentication model is a ﬁle containing parameters for the
classiﬁcation algorithm and determines the classiﬁer’s functi-
onality. Using different authentication models for different
contexts, the classiﬁer can authenticate the user based on the
authentication feature vector under different contexts. When a
detected context and an authentication feature vector is fed in,
the classiﬁer chooses the corresponding authentication model
and makes a classiﬁcation.
When the classiﬁer in the authentication component ge-
nerates the authentication results, it sends these results to the
Response Module. If the authentication results indicate the user
is legitimate, the Response Module will allow the user to use
the cloud apps to access the critical data or cloud services
in the app server. Otherwise, the Response Module can either
lock the smartphone or refuse accesses to security-critical data,
or perform further checking. Our system can be used with
existing explicit authentication methods, e.g., passwords or
ﬁngerprints. If the attacker is locked out, the system requires
explicit authentication.
3) Authentication Server: SmarterYou includes a training
module, which is deployed in the Authentication Server in the
cloud, because it requires signiﬁcant computation and must
consider the privacy of the training data set, which includes
data from other users. When a legitimate user ﬁrst enrolls
in the system, she downloads the context detection model
from the Authentication Server and then the system keeps
collecting the legitimate user’s authentication feature vectors
and detected contexts for training the authentication models.
Our system deploys a trusted Authentication cloud server to
collect sensors’ data from all the participating legitimate users.
To protect a legitimate user’s privacy,
the users’ data are
anonymized. In this way, a user’s training module can use
other users’ feature data but has no way to know the other
users’ identities. The training module uses the legitimate user’s
authentication feature vectors and other people’s authentication
feature vectors in the training algorithm to obtain the authen-
tication models based on different contexts. After training,
the authentication models are downloaded to the smartphone.
The training module does not participate in the authentication
testing process and is only needed for retraining when the
device recognizes a user’s behavioral drift, which is done
online and automatically. Therefore, our system does not pose
a high requirement on the communication delay between the
smartphone and the Authentication Server.
B. System Operation
SmarterYou is based on the observation that users’ beha-
vioral patterns are different from person to person, and vary
under different usage contexts, when they use smartphones and
smartwatches. Instead of authenticating the user with one uni-
ﬁed model as in [15], [16], [17], [12], [18], [31], it is better to
explore different ﬁner-grained models to authenticate the user
based on different usage contexts. For example, using a user’s
walking behavioral model to authenticate the same user who is
sitting while using the smartphone is obviously not accurate. In
Table VII, we show that considering contexts provides better
accuracy. To be applicable in real world scenarios, we assume
that the context information is user-agnostic: we can detect
the context of the current user prior to authenticating her (as
validated in Section V-E). Under each context, each user has
distinct behavioral characteristics. SmarterYou utilizes such
characteristics to implicitly authenticate the users. Our system
can be used with other context detection methods [32], [33].
Context detection is an interesting research area e.g., Chen et
al. [32] show that they can achieve up to 99% accuracy in con-
text detection. In this paper, we show that by considering even
simple contexts, we can improve the authentication accuracy
signiﬁcantly. More contexts, appropriately chosen, may further
improve the authentication accuracy.
There are two phases for learning and classifying the
user’s behavioral pattern: enrollment phase and continuous
authentication phase.
Enrollment Phase: Initially, the system must be trained in
an enrollment phase. When users want to use the apps in
the smartphone to access sensitive data or cloud services, the
system starts to monitor the sensors and extract particular
features from the sensors’ data and label them with a context
based on the context detection approach in Section V-E. This
process continues and the data should be stored in a protected
buffer in the smartphone until the distribution of the collected
features converges to an equilibrium, which means the size of
data can provide enough information to build a user’s proﬁle.
This is about 800 measurements for our method, as shown in
Section V-F3. At this time, one can assume that 1) the user
got used to her device and her device-speciﬁc ‘sensor-behavior’
no longer changes, and 2) the system has observed sufﬁcient
information to have a stable estimate of the true underlying
behavioral pattern of that user. The system can now train the
authentication classiﬁers under various contexts and switch to
the continuous authentication phase.
Continuous Authentication Phase: Once the authentication
classiﬁers are trained and sent to the smartphone, the smartp-
hone can start the authentication phase. This is done only in
the smartphone, so network availability is not required. Based
on the sensor data, SmarterYou ﬁrst decides which context
the user is in and then uses the authentication classiﬁer for
the detected context. The authentication classiﬁer then decides
whether these sensors’ data are coming from the legitimate
user. The authentication classiﬁer can also be automatically
updated when the legitimate user’s behavioral pattern changes
with time.
Post-Authentication: If the authentication feature vector is
authenticated as coming from the legitimate user, this testing
passes and the user can keep accessing the sensitive data in
312
TABLE II.
FISHER SCORES OF DIFFERENT SENSORS.
Acc(x)
Acc(y)
Acc(z)
Mag(x)
Mag(y)
Mag(z)
Gyr(x)
Gyr(y)
Gyr(z)
Ori(x)
Ori(y)
Ori(z)
Light
Smartphone
3.13
0.8
0.38
0.005
0.001
0.0025
0.57
1.12
4.074
0.0049
0.002
0.0033
0.0091
Smartwatch
3.62
0.59
0.89
0.003
0.0049
0.0002
0.24
1.09
0.59
0.0027
0.0043
0.0001
0.0428
(cid:4)(cid:336)(cid:286)
(cid:1008)
(cid:1005)(cid:1006)
(cid:1013)
(cid:1009)
(cid:1009)
(cid:1006)(cid:1004)(cid:882)(cid:1006)(cid:1009)
(cid:1006)(cid:1009)(cid:882)(cid:1007)(cid:1004)
(cid:1007)(cid:1004)(cid:882)(cid:1007)(cid:1009)
(cid:1007)(cid:1009)(cid:882)(cid:1008)(cid:1004)
(cid:1008)(cid:1004)(cid:1085)
(cid:39)(cid:286)(cid:374)(cid:282)(cid:286)(cid:396)
(cid:1005)(cid:1010)
(cid:38)(cid:286)(cid:373)(cid:258)(cid:367)(cid:286)
(cid:68)(cid:258)(cid:367)(cid:286)
(cid:1005)(cid:1013)
(cid:367)
(cid:286)
(cid:437)
(cid:258)
(cid:448)
(cid:393)
(cid:3)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:1085)(cid:1004)(cid:1004)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1006)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1008)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1010)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1012)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1005)(cid:1004)
(a) Smartphone
(cid:367)
(cid:286)
(cid:437)
(cid:258)
(cid:448)
(cid:393)
(cid:3)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:1085)(cid:1004)(cid:1004)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1006)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1008)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1010)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1004)(cid:1012)
(cid:1005)(cid:856)(cid:1004)(cid:28)(cid:882)(cid:1005)(cid:1004)
Fig. 2. Demographics of the participants
the smartphone or in the cloud via the smartphone. When an
attacker tries to access a smartphone of a legitimate user, the
system automatically de-authenticates him. Once SmarterYou
decides that the smartphone is now being used by someone ot-
her than the legitimate user, the system can perform defensive
responses as described earlier. Similarly, if the legitimate user
is misclassiﬁed, several mechanisms for re-instating her are
possible, such as two-channel or multi-factor authentication,
or requiring an explicit login again, possibly with a biometric,
to unlock the system.
Retraining Models: The behavioral patterns of SmarterYou
users could be changed some time after the initial model trai-
ning. So it is necessary to retrain users’ models to prevent false
alarms due to legitimate behavioral drift. SmarterYou provides
a model retraining mechanism, which can automatically and
continuously retrain the models based on the authentication
performance. We deﬁne a metric called Conﬁdence Score
(CS) to measure if it is necessary to retrain the model. If
so, SmarterYou will again upload the legitimate user’s latest
authentication feature vectors to the cloud server, and update
the new models from the training module. It is important to
note that adversaries can also exploit this mechanism to retrain
the authentication models and achieve accesses to sensitive
data with the smartphone. We use multi-factor authentication to
prevent these potential vulnerabilities (details in Section V-I).
C. Security Protections
Protecting data in transit. Since sensitive data are being
transmitted between smartwatches, smartphones and cloud
servers, secure communications protocols must be used to
provide conﬁdentiality and integrity protection against network
adversaries. For instance, an initialization key is exchanged
when the smartwatch is paired with the smartphone using
Bluetooth. New keys derived from this key can also be
used to encrypt and hash the raw data transmitting between
smartwatch and smartphone via Bluetooth. The communication
channels between smartphones and cloud servers are protected
by SSL/TLS protocols.
(b) Smartwatch
Fig. 3. KS test on sensor features.
Protecting data at rest (i.e., in storage). For data stored
in the smartphones or cloud servers, cryptographic encryption
and hashing operations are used to prevent the attackers from
stealing or modifying data.
Protecting data and code at runtime. The smartphone
and Authentication Server must also provide a secure envi-
ronment for running the SmarterYou authentication System.
Since most smartphones use ARM processors, smartphones
can exploit the ARM TrustZone [34] feature to place the
authentication Testing Module in the Secure World and isolate
it from other apps in the Normal World. Since cloud servers
tend to use Intel processors, the trusted Authentication Server
can set up secure enclaves by using Intel Sofware Guard
eXtensions (SGX) [35] for the training and retraining modules
for SmarterYou, and for securely accessing and using sensitive
behavioral measurements from many smartphone users.
V. DESIGN ALTERNATIVES
Although we have outlined the basic architecture for our