Alpine 操作系统是一个面向安全的轻型 Linux 发行版。它不同于通常 Linux 发行版，Alpine 采用了 musl libc 和 busybox 以减小系统的体积和运行时资源消耗，但功能上比 busybox 又完善的多，因此得到开源社区越来越多的青睐。在保持瘦身的同时，Alpine 还提供了自己的包管理工具 apk，可以通过 https://pkgs.alpinelinux.org/packages 网站上查询包信息，也可以直接通过 apk 命令直接查询和安装各种软件。
Alpine 由非商业组织维护的，支持广泛场景的 Linux发行版，它特别为资深/重度Linux用户而优化，关注安全，性能和资源效能。Alpine 镜像可以适用于更多常用场景，并且是一个优秀的可以适用于生产的基础系统/环境。
Alpine Docker 镜像也继承了 Alpine Linux 发行版的这些优势。相比于其他 Docker 镜像，它的容量非常小，仅仅只有 5 MB 左右（对比 Ubuntu 系列镜像接近 200 MB），且拥有非常友好的包管理机制。官方镜像来自 docker-alpine 项目。
目前 Docker 官方已开始推荐使用 Alpine 替代之前的 Ubuntu 做为基础镜像环境。这样会带来多个好处。包括镜像下载速度加快，镜像安全性提高，主机之间的切换更方便，占用更少磁盘空间等。
一般是 5～6M 的大小
```bash
docker pull alpine:latest
docker image ls
```
由于镜像很小，下载时间往往很短，读者可以直接使用 docker run 指令直接运行一个 Alpine 容器，并指定运行的 Linux 指令，例如：
```bash
docker run alpine echo '123'
```
如果使用 Alpine 镜像替换 Ubuntu 基础镜像，安装软件包时需要用 apk 包管理器替换 apt 工具，如
```bash
apk add --no-cache 
```
Alpine 中软件安装包的名字可能会与其他发行版有所不同，可以在 https://pkgs.alpinelinux.org/packages 网站搜索并确定安装包名称。如果需要的安装包不在主索引内，但是在测试或社区索引中。那么可以按照以下方法使用这些安装包。
```bash
echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
apk --update add --no-cache 
```
由于在国内访问 apk 仓库较缓慢，建议在使用 apk 之前先替换仓库地址为国内镜像。
```bash
sed -i "s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g" /etc/apk/repositories
apk add --no-cache 
```
**Debian**
Debian 是由 GPL 和其他自由软件许可协议授权的自由软件组成的操作系统，由 Debian 计划（Debian Project） 组织维护。Debian 计划 是一个独立的、分散的组织，由 3000 人志愿者组成，接受世界多个非盈利组织的资金支持，Software in the Public Interest 提供支持并持有商标作为保护机构。Debian 以其坚守 Unix 和自由软件的精神，以及其给予用户的众多选择而闻名。现时 Debian 包括了超过 25,000 个软件包并支持 12 个计算机系统结构。
Debian 作为一个大的系统组织框架，其下有多种不同操作系统核心的分支计划，主要为采用 Linux 核心的 Debian GNU/Linux 系统，其他还有采用 GNU Hurd 核心的 Debian GNU/Hurd 系统、采用 FreeBSD 核心的 Debian GNU/kFreeBSD 系统，以及采用 NetBSD 核心的 Debian GNU/NetBSD 系统。甚至还有利用 Debian 的系统架构和工具，采用 OpenSolaris 核心构建而成的 Nexenta OS 系统。在这些 Debian 系统中，以采用 Linux 核心的 Debian GNU/Linux 最为著名。
```bash
docker pull debian:latest
docker image ls
docker run -it debian bash
```
**Ubuntu**
Ubuntu 是一个以桌面应用为主的 GNU/Linux 操作系统。Ubuntu 基于 Debian 发行版和 GNOME/Unity 桌面环境，与 Debian 的不同在于它每 6 个月会发布一个新版本，每 2 年推出一个长期支持 （Long Term Support，LTS） 版本，一般支持 3 年时间。
```bash
docker pull ubuntu:18.04
docker image ls
docker run -ti ubuntu:18.04 /bin/bash
```
**CentOS**
CentOS（Community Enterprise Operating System，中文意思是：社区企业操作系统），它是基于 Red Hat Enterprise Linux 源代码编译而成。由于 CentOS 与 Redhat Linux 源于相同的代码基础，所以很多成本敏感且需要高稳定性的公司就使用 CentOS 来替代商业版 Red Hat Enterprise Linux。CentOS 自身不包含闭源软件。
```bash
docker pull centos:7
docker image ls
docker run -it centos:7 bash
```
**fedora**
Fedora 由 Fedora Project 社区开发，红帽公司赞助的 Linux 发行版。它的目标是创建一套新颖、多功能并且自由和开源的操作系统。Fedora 的功能对于用户而言，它是一套功能完备的，可以更新的免费操作系统，而对赞助商 Red Hat 而言，它是许多新技术的测试平台。被认为可用的技术最终会加入到 Red Hat Enterprise Linux 中。
```bash
docker pull fedora:latest
docker image ls
docker run -it fedora bash
```
### PHP
- PHP 5.2
    |PHP版本|系统版本|	Apache 版本|Web路径|COMMAND|
    |-|-|-|-|-|
    |5.2.17|Ubuntu 16.04.5|2.2.22|	/var/www/html|/init.sh|
    ```bash
    # 拉取镜像
    docker pull seti/php52:latest
    # 运行容器
    docker run -d -p 8080:80 --name PHP5.2 seti/php52:latestW
    ```
- PHP 5.6
    |PHP版本|系统版本|	Apache 版本|Web路径|COMMAND|
    |-|-|-|-|-|
    |5.6.40|Ubuntu 16.04.5|2.4.37|/var/www/app|/sbin/entrypoint.sh|
    ```bash
    # 拉取镜像
    docker pull romeoz/docker-apache-php:5.6
    # 运行容器
    docker run -d -p 8080:80 --name PHP5.6 romeoz/docker-apache-php:5.6
    ```
- PHP 7.3
    |PHP版本|系统版本|	Apache 版本|Web路径|COMMAND|
    |-|-|-|-|-|
    |7.3.10|Ubuntu 18.04.3|2.4.4|/var/www/app|/sbin/entrypoint.sh|
    ```bash
    # 拉取镜像
    docker pull romeoz/docker-apache-php:7.3
    # 运行容器
    docker run -d -p 8080:80 --name PHP7.3 romeoz/docker-apache-php:7.3
    ```
**LAMP**
- PHP 5.6.28 + MariaDB 10.1.19
    |PHP版本|MariaDB版本|系统版本|Apache 版本	|Web路径|	COMMAND|
    |-|-|-|-|-|-|
    |5.6.28	|10.1.19	|Alpine Linux 3.4	|2.4.23|	/var/www/html|	/start.sh|
    MySQL 的用户名和密码信息：
    |用户名|密码|
    |-|-|
    |root|空|
    ```bash
    # 拉取镜像
    docker pull janes/alpine-lamp:latest
    # 运行容器
    docker run -d -p 8080:80 --name LAMP janes/alpine-lamp:latest
    ```
- PHP 5.5.9 + MySQL 5.5.61
    |PHP版本|MySQL版本|系统版本|Apache 版本	|Web路径|	COMMAND|
    |-|-|-|-|-|-|
    |5.5.9	|5.5.61	|Ubuntu 14.04.5		|2.4.7|	/var/www/html|	/start.sh|
    MySQL 的用户名和密码信息：
    |用户名|密码|
    |-|-|
    |root|root|
    ```bash
    # 拉取镜像
    docker pull medicean/vulapps:base_lamp
    # 运行容器
    docker run -d -p 8080:80 --name LAMP medicean/vulapps:base_lamp
    ```
- PHP 7.3.22 + MariaDB 10.4.15
    |PHP版本|MariaDB版本|系统版本|Apache 版本	|Web路径|	COMMAND|
    |-|-|-|-|-|-|
    |7.3.22	|10.4.15	|Alpine Linux 3.11|2.4.46|/var/www/localhost/htdocs|/entry.sh|
    MySQL 的用户名和密码信息：
    |用户名|密码|
    |-|-|
    |root|root|
    ```bash
    # 拉取镜像
    docker pull sqlsec/alpine-lamp
    # 运行容器 记住要指定密码
    docker run -d -p 8080:80 --name LAMP -e MYSQL_ROOT_PASSWORD=root sqlsec/alpine-lamp
    ```
---
## Source & Reference
- https://mp.weixin.qq.com/s/8c9AZXrGH4dkDK1JOe9FPg
- https://www.sqlsec.com/2020/11/docker4.html
- https://blog.csdn.net/sannerlittle/article/details/77063800
- https://yeasy.gitbook.io/docker_practice/image/list
- https://yeasy.gitbook.io/docker_practice/network/port_mapping
- https://yeasy.gitbook.io/docker_practice/image/build
- https://yeasy.gitbook.io/docker_practice/image/commit