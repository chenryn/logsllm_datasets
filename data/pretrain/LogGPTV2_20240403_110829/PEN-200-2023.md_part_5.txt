will learn how to gather information and set ourselves up to more thoroughly compromise a
network.
Then, Attacking Active Directory Authentication provides us with several techniques to increase
our presence within the network by attacking or bypassing authyentication protocols. Finally,
Lateral Movement in Active Directory helps us understand how to apply many of the pivoting
concepts we’ve previously learned in complex AD environments.
k
2.3.7 Challenge Lab Preparation
s
The final two PWK Modules represent a bridge between the text, video, and exercise based
learning modalities and the Challenge Labs theomselves. By this point the learner will have
completed over 300 exercises, including the compromise of approximately 25 machines. Now it’s
time to put it all together. In Assembling the Pieces, we walk the learner through a simulated
n
penetration test of five machines. Techniques from Information Gathering all the way through
Lateral Movement in Active Directory are required to successfully compromise the domain.
Learners will be able to follow aloing and see exactly how we think about targeting a new
environment from start to finish. z
Finally, Trying Harder: The Challenge Labs provides a set of instructions and some further detail
on the Challenge Labs. WeD highly recommend completing all the Modules including Assembling
the Pieces before beginning with the Challenge Labs!
2.4 Wrapping Up
This introduction Module helped orient us to begin with PEN200. We’ve set up our attacking
environment and connected to the PWK labs. We learned a little bit about the pedagogical design
of the course, and reviewed a summary of each Module. Now it’s time to roll up our sleeves and
get started!
16 (Rapid7, 2022), https://www.metasploit.com/
17 (Microsoft, 2022), https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/get-started/virtual-dc/active-directory-domain-
services-overview
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 29
Made in Morocco
Penetration Testing with Kali Linux
3 Introduction To Cybersecurity
We will cover the following Learning Units in this Learning Module:
• The Practice of Cybersecurity
• Threats and Threat Actors
• The CIA Triad
• Security Principles, Controls and Strategies
• Cybersecurity Laws, Regulations, Standards, and Frameworks
• Career Opportunities in Cybersecurity
y
This Module is designed to provide learners, regardless of current proficiency or experience, a
solid understanding of the fundamental principles of cybersecurity. It is intended for a wide range
k
of individuals, from employees working adjacent to information technology or managing technical
teams, to learners just getting started in the highly-dynamic information security field.
s
Completing this Module will help learners build a useful base of knowledge for progressing onto
more technical, hands-on Modules.
o
An in-depth analysis of each concept is outside the scope of this Module. To learn more about the
concepts introduced here, learners are encouraged to progress through the 100-level content in
n
the OffSec Learning Library.
Throughout this Module, we’ll examiine some recent examples of cyber attacks and analyze their
impact as well as potential prevention or mitigation steps. We’ll also supply various articles,
z
references, and resources for future exploration in the footnotes sections. Please review these
footnotes for additional context and clarity.
D
3.1 The Practice of Cybersecurity
This Learning Unit covers the following Learning Objectives:
• Recognize the challenges unique to information security
• Understand how “offensive” and “defensive” security reflect each other
• Begin to build a mental model of useful mindsets applicable to information security
3.1.1 Challenges in Cybersecurity
Cybersecurity has emerged as a unique discipline and is not a sub-field or niche area of software
engineering or system administration. There are a few distinct characteristics of cybersecurity
that distinguish it from other technical fields. First, security involves malicious and intelligent
actors (i.e. opponents).
The problem of dealing with an intelligent opponent requires a different approach, discipline, and
mindset compared to facing a naturally-occurring or accidental problem. Whether we are
simulating an attack or defending against one, we will need to consider the perspective and
potential actions of our opponent, and try to anticipate what they might do. Because our
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 30
Made in Morocco
Penetration Testing with Kali Linux
opponents are human beings with agency, they can reason, predict, judge, analyze, conjecture,
and deliberate. They can also feel emotions like happiness, sorrow, greed, fear, triumph, and guilt.
Both attackers and defenders can leverage the emotions of their human opponents. For example,
an attacker might rely on embarrassment when they hold a computer system hostage and
threaten to publish its data. Defenders, meanwhile, might leverage fear to dissuade attackers
from entering their networks. This reality means human beings are a critical component of
cybersecurity.
Another important aspect of security is that it usually involves reasoning under uncertainty.
Although we have plenty of deductive skills, we are by no means mentally omniscient. We cannot
determine everything that follows from a given truth, and we cannot know or remember an infinite
number of facts.
Consider how a game like chess is different from a game like poker. In chess, you know
everything that your opponent does about the game state (and vicye versa). You may not know
what they are thinking, but you can make predictions about their next move based on the exact
same information that they are using to determine it. Playing poker, however, you do not have all
k
of the information that your opponent possesses, so you must make predictions based on
incomplete data.
s
When considering the mental perspectives of attackers and defenders, information security is a
lot closer to poker than chess. For example, whoen we simulate an attack, we will never know
everything there is to know about the machine/system/network/organization we are targeting.
We therefore must make assumptions and estimate probabilities - sometimes implicitly and
n
sometimes explicitly. Conversely, as the defender, we will not be aware of every potential attack
vector or vulnerability we might be exposed to. We therefore need to hedge our bets and make
sure that our attack surfaces that are most likely to be vulnerable are adequately protected.
i
z
The problem of the intelligent adversary and the problem of uncertainty both suggest that
understanding cybersecurity necessitates learning more about how we think as human agents,
and how to solve problemsD. This means we’ll need to adopt and nurture specific mindsets that
will help us as we learn and apply our skills.
3.1.2 A Word on Mindsets
Security is not only about understanding technology and code, but also about understanding your
own mind and that of your adversary. We tend to think of a mindset as a set of beliefs that inform
our personal perspective on something.
Two contrasting examples of well-known mindsets are the fixed mindset and the growth mindset.
An individual with a fixed mindset believes that their skill/talent/capacity to learn is what it is, and
that there is no gain to be made by trying to improve. On the other hand, a growth mindset
encourages the belief that mental ability is flexible and adaptable, and that one can grow their
capacity to learn over time.
Research suggests that, for example, a mindset in which we believe ourselves capable of
recovering from a mistake18 makes us measurably better at doing so. This is just one aspect of
the growth mindset, but it’s an important one, since security requires us to make mistakes and
learn from them - to be constantly learning and re-evaluating.
18 (APS, 2011), https://www.psychologicalscience.org/news/releases/how-the-brain-reacts-to-mistakes.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 31
Made in Morocco
Penetration Testing with Kali Linux
Another extremely valuable mindset is the aptly-coined security mindset. Proposed by security
researcher Bruce Schneier,19 this mindset encourages a constant questioning of how one can
attack (or defend) a system. If we can begin to ask this question automatically when
encountering a novel idea, machine, system, network, or object, we can start noticing a wide array
of recurring patterns.
At OffSec, we encourage learners to adopt the Try Harder20 mindset. To better understand this
mindset, let’s quickly consider two potential perspectives in a moment of “failure.”
1. If my attack or defense fails, it represents a truth about my current
skills/processes/configurations/approach as much as it is a truth about the system.
2. If my attack or defense fails, this allows me to learn something new, change my approach,
and do something differently.
y
These two perspectives help provide someone with the mental fortitude to make mistakes and
learn from them, which is absolutely essential in any cybersecurity sub-field. More information
k
about how to learn and the Try Harder mindset can be found in the “Effective Learning Strategies”
Module that is part of this introductory Learning Path.
s
3.1.3 On Emulating the Minds of our Opponents
o
It’s worth pausing to consider the particular attention that we will give to the offensive21 side of
security, even in many of our defensive courses and Modules. One might wonder why a
cybersecurity professional whose primary ninterest and goal is defending a network, organization,
or government should also learn offense.
Let’s take the analogy of a medievail monarch building a castle. If the monarch learns that their
enemy has catapults capable ofz hurling large boulders, they might design their castle to have
thicker walls. Similarly, if their enemy is equipped with ladders, the monarch might give their
troops tools to push the ladders off the walls.
D
The more this monarch knows about their would-be attacker and the more they can think like an
attacker, the better defense they can build. The monarch might engage in “offensive” types of
activities or audits to understand the gaps in their own defenses. For example, they could conduct
“war-games” where they direct their own soldiers to mock-battle each other, helping them fully
understand the capabilities and destructive potential of a real attacker.
In cybersecurity, enterprises might hire an individual or a firm to perform a penetration test - also
known as a pentest A penetration tester takes on the role of an attacker to better understand the
system’s vulnerabilities and exposed weaknesses. Leveraging the skill-sets and mindsets of an
attacker allows us to better answer questions like “How might an attacker gain access?”, “What
can they do with that access?”, and “What are the worst possible outcomes from an attack?”.
While learning hacking skills is (of course) essential for aspiring penetration testers, we also
believe that defenders, system administrators, and developers will greatly benefit from at least a
cursory education in offensive techniques and technologies as well.
19 (Schneier, 2008), https://www.schneier.com/blog/archives/2008/03/the_security_mi_1.html
20 (OffSec, 2021), https://www.offsec.com/offsec/what-it-means-to-try-harder/
21 (Kranch, 2019), https://mjkranch.com/2019/02/why_we_should_teach_offense_first/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 32
Made in Morocco
Penetration Testing with Kali Linux
Conversely, it’s been our experience that many of the best penetration testers and web
application hackers are those who have had extensive exposure to defending networks, building
web applications, or administrating systems.
3.2 Threats and Threat Actors
This Learning Unit covers the following Learning Objectives:
• Understand how attackers and defenders learn from each other
• Understand the differences between risks, threats, vulnerabilities, and exploits
• List and describe different classes of threat actors
• Recognize some recent cybersecurity attacks
organizy
• Learn how malicious attacks and threats can impact an ation and individuals
The term cybersecurity came to mainstream use from a military origin. For clarity, we’ll use
k
cybersecurity to describe the protection of access and information specifically on the Internet or
other digital networks. While included within the broader context of cybersecurity, information
s
security also examines the protection of physical information-storing assets, such as physical
servers or vaults.
o
As we explore various threats and threat actors throughout this Module, we’ll mainly consider
their online capabilities. Therefore, we’ll generally use the term cybersecurity here, but won’t be
too concerned about using information secnurity as a synonym.
3.2.1 The Evolution of Attack and Defense
i
z
Cybersecurity can be especially fascinating because it involves multiple agents trying to achieve
mutually exclusive outcomes. In the most basic example, a defender wants to control access to
an asset they own, and an Dattacker wants to gain control over the same asset. This is interesting
because both roles, defender and attacker, subsist on the continued persistence of the other. In
particular, each will become more skilled and sophisticated because of the efforts (or imagined
efforts) of their counterpart.
The attacker-defender relationship dynamic helps to fundamentally explain why cybersecurity
becomes exponentially more complicated over time. To understand this dynamic better, let’s
introduce the fictional characters Alice and Bob. We’ll make use of them often throughout the
OffSec Learning Library and the cryptography22 literature in various contexts to demonstrate
examples and thought experiments.
For this particular story, let’s imagine that Bob has an asset that he wants to defend: a great
banana tree! Bob wants to make sure that only he can pick its bananas. Meanwhile, attacker Alice
would love to nothing more than to steal Bob’s bananas.
First, Bob doesn’t pay any special attention to the security of his tree. It’s relatively easy for Alice
to just walk up to it and steal a banana. As Alice gets better and better at stealing, however, Bob
will also get better at protecting his tree.
22 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Cryptography
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 33
Made in Morocco
Penetration Testing with Kali Linux
When Bob first realizes Alice’s treachery, he learns that standing guard prevents Alice from
attempting to steal bananas. But Alice hypothesizes that Bob must sleep at some point. She pays
attention to when Bob goes to sleep, then quietly sneaks up to the tree to steal.
Bob then figures out how to build a tall stone wall around the tree. Alice struggles to break
through it or climb over it. Eventually, she learns how to dig under the wall. Bob trains a guard
dog to protect the tree. Alice learns that she can pacify the dog with treats.
Bob takes a hardware security course and installs cameras and alarms to warn him anytime Alice
is nearby. Alice learns how to disable the cameras and alarms.
This cycle can continue almost indefinitely. In a strange way, both attacker and defender depend
on each other in order to increase their skillsets and better understand their respective crafts.
y
We can take this analogy further to include compliance and risk management
aspects of security. At some point, Bob accepts the risk that may steal bananas
k
and decides to get insurance. But his banana insurance won’t pay for stolen
bananas unless he complies with their requirements for risk mitigation, which
s
entail having a sturdy wall and guard dog.
o
3.2.2 Risks, Threats, Vulnerabilities, and Exploits
n
Like many technical fields, cybersecurity relies on a significant amount of jargon, acronyms, and
abbreviations. Throughout the OffSec Learning Library, we’ll try to introduce terms and vocabulary
as they come up organically. Beforei we learn about various cybersecurity theories and principles,
however, it’s important to define za few terms so we can follow what we’re learning. Let’s begin
with a cursory review of some of the basic concepts that cybersecurity is about: risks, threats,
vulnerabilities, and exploits.D
The most fundamental of these four terms is risk,23 since it applies to many domains outside of
cybersecurity and information technology. A simple way to define risk is to consider two axes: the
probability that a negative event will occur, and the impact on something we value if such an
event happens. This definition allows us to conceptualize risks via four quadrants:
1. Low probability, low impact events
2. Low probability, high impact events
3. High probability, low impact events
4. High probability, high impact events
As cybersecurity professionals, we should always consider risk by examining the questions “How
likely is it that a particular attack might happen?” and “What would be the worst possible outcome
if the attack occurs?”
23 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Risk
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 34
Made in Morocco
Penetration Testing with Kali Linux
When we can attribute a specific risk to a particular cause, we’re describing a threat. In
cybersecurity, a threat24 is something that poses risk to an asset we care about protecting. Not all
threats are human; if our network depends on the local electricity grid, a severe lightning storm
could be a threat to ongoing system operations.
Nevertheless, in many cases we are focused on human threats, including malicious programs
built by people. A person or group of people embodying a threat is known as a threat actor,25 a
term signifying agency, motivation, and intelligence. We’ll learn more about different kinds of
threat actors in the next section.
For a threat to become an actual risk, the target being threatened must be vulnerable in some
manner. A vulnerability26 is a flaw that allows a threat to cause harm. Not all flaws are
vulnerabilities. To take a non-security example, let’s imagine a bridge. A bridge can have some
aesthetic flaws; maybe some pavers are scratched or it isn’t perfectly straight. However, these
flaws aren’t vulnerabilities because they don’t pose any risk of damagye to the bridge. Alternatively,
if the bridge does have structural flaws in its construction, it may be vulnerable to specific threats
such as overloading or too much wind.
k
Let’s dive into an example. In December 202127, a vulnerability was discovered in the Apache
Log4J28 library, a popular Java-based logging library. Thiss vulnerability could lead to arbitrary code
execution by taking advantage of a JNDI Java toolkit feature which, by default, allowed for
download requests to enrich logging. If a valid Jaova file was downloaded, this program would be
executed by the server. This means that if user-supplied input (such as a username or HTTP
header) was improperly sanitized before being logged, it was possible to make the server
n
download a malicious Java file that would allow a remote, unauthorized user to execute
commands on the server.
i
Due to the popularity of the Log4j library, this vulnerability was given the highest possible rating
z
under the Common Vulnerability Scoring System (CVSS)29 used to score vulnerabilities: 10.0
Critical. This rating led to a frenzied aftermath including vendors, companies, and individuals
scrambling to identify anDd patch vulnerable systems as well as search for indications of
compromise. Additional Log4J vulnerabilities were discovered soon after, exacerbating matters.
This vulnerability could have been prevented by ensuring that user-supplied data is properly
sanitized.30 The issue could have been mitigated by ensuring that potentially dangerous features
(such as allowing web-requests and code execution) were disabled by default.
In computer programs, vulnerabilities occur when someone who interacts with the program can
achieve specific objectives that are unintended by the programmer. When these objectives