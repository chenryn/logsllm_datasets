I think the following snippet should be possible (but it fails currently).
Since `&'static MyTrait` can't be 0, if the first half of the layout is 0,
then the enum must be the `Boxed` variant.
    use std::mem;
    pub trait MyTrait {
        fn zomg(&self);
    }
    enum Foo {
        Inline(&'static MyTrait, [usize; 2]),
        Boxed(Box),
    }
    pub fn main() {
        assert_eq!(2 * mem::size_of::(), mem::size_of::());
    }