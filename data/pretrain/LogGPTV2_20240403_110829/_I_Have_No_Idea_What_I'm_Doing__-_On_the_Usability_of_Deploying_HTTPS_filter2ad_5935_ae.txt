cipher suites and even basic concepts like the role of cer-
tiﬁcates. This result shows that there is a high demand for
better default conﬁgurations and/or tool support to pre-
vent administrators from dealing with mechanisms they
cannot fully understand.
As stated in Section 4.1, we based our evaluation cri-
teria on Qualy’s SSL Test to evaluate the conﬁgurations
from our lab study. Although these metrics are consid-
ered a good benchmark to assess TLS conﬁguration, not
all of them are feasible for every real-world scenario.
For example, HPKP in theory is a mechanism to miti-
gate MITM attacks with fraudulent certiﬁcates but poses
additional risks and challenges in practice as key man-
agement for HPKP is hard to manage for long tail web-
sites. Possible solutions are to pin the CA certiﬁcate and
to use a backup key or to use CAA (Certiﬁcation Author-
ity Authorization) DNS records to allow domain owners
to specify which CAs are allowed to issue certiﬁcates for
the respective domain. During our lab experiments, two
participants started deploying HPKP. However, from the
data we collected during the experiments, it is unlcear to
what extent the participants who wanted to deploy HPKP
were aware of the implied key management challenges.
In December 2015, the initiative Let’s Encrypt re-
leased its non-proﬁt CA that provides free domain-
validated X.509 certiﬁcates and software to enable instal-
lation and maintenance of these certiﬁcates was launched
to make it easier for administrators to deploy TLS. Since
then, Let’s Encrypt changed the TLS market signifcantly.
It issued over 27 million active certiﬁcates for over 12
million registered domains (Feb. 2017). It is often called
the largest CA, but is still not clear how much this in-
ﬂuenced the TLS ecosystem, since many certiﬁcates are
used for less popular web sites [4, 5]. However, Let’s
Encrypt is not directly improving TLS conﬁgurations. It
seems that the prime goal, the process of certiﬁcate is-
suance was improved, but the full TLS conﬁguration is
still a manual process. Some plugins (e.g., for Apache in-
tegration) automatically set some TLS conﬁguration pa-
rameters (e.g., protocol version, cipher suites) to a bal-
anced conﬁguration in terms of security and backward
compatibility. However, it does not include other param-
eters like HSTS or the DH prime conﬁguration. There-
fore, conﬁgurations with certiﬁcates issued by Let’s En-
crypt are not generically comparable with other con-
ﬁgurations, but it is clearly an opportunity to also im-
prove and automate the conﬁguration process in the fu-
ture. Hence, Let’s Encrypt does not entirely automate
the workﬂow as presented in Figure 1. In fact it aimes to
ease the creation of a CSR and the interaction with the
CA. Regardless of these substantial improvements, Let’s
Encrypt needs to be conﬁgured at least once. While there
are dedicated tools available (e.g. ACME) it remains to
show to what extent the initial effort in conﬁguring an
Apache web server actually decreases.
As mentioned by our security experts, there are al-
ready servers with a focus on better security:
they let
their users make conﬁgurations less secure if desired in-
stead of providing no security by default and thus forcing
users to deploy security themselves. Also, they high-
light the demand for easier user interfaces for conﬁg-
uration purposes which corresponds to the ﬁndings of
Fahl et al. [19]. Our results also suggest that expert users
are often unable to decide on the appropriate level of se-
curity, which highlights the need for cross-organizational
guidelines and policies.
As creating a basic TLS conﬁguration also involves
complex decisions (such as choosing the appropriate key
length) it is difﬁcult for administrators to maintain or cor-
rect errors and wrong decisions.
Both the results from the lab study and the expert in-
terviews highlight that the complex deployment process
should be simpliﬁed, and that the difference between a
basic correct conﬁguration and a secure one should not
1350    26th USENIX Security Symposium
USENIX Association
be too broad. Hence we suggest that newly designed
servers and/or supportive tools should merge the setup
and the hardening phase resulting in a best-case working
conﬁguration if all steps are completed – which can then
be downgraded if necessary.
6.1 Limitations
A severe limitation of our lab study is that we only
looked at the initial deployment process and excluded
long-term maintenance effects, such as certiﬁcate re-
newal and the administrators’ reactions to newly discov-
ered vulnerabilities. The main reason is that it is difﬁcult
to reliably study long-term effects in the lab. In the fu-
ture, we plan to conduct an additional case study in a
corporate environment to observe long-term effects over
a number of years. Also, as our study was performed in
the lab, the participants did not have a deep background
of the notional company they were administrating for the
study. Our primary goal was to recruit participants who
were fully employed as system administrators, but un-
fortunately did not manage to get enough responses re-
spectively commitments for participation. Therefore, we
chose to recruit participants among our computer science
students. To overcome this bias, we selected top students
that successfully completed security courses with good
grades and completed an initial assessment test. As our
results suggest, many of them were already experienced
with managing servers and some had even worked as sys-
tem administrators in companies and other organizations.
We therefore believe that our data is suited to explore us-
ability challenges. Our expert interviews with security
auditors underline the ecological validity of the results
from our lab study and suggest that conﬁgurations found
in the wild are even less secure than those generated by
our participants during the lab study. Another limitation
of our study is that we instructed the participants to de-
ploy the securest possible conﬁguration. This goal could
be unrealistic in a corporate environment where compat-
ibility is a major concern. Therefore our results represent
an upper bound for security.
7 Ethical Considerations
Our university located in central Europe unfortunately
does not have an ethics board but has a set of guidelines
that we followed in our research. Also, we aligned the
methodology for our user study in related studies with
similar ethical challenges [35, 40, 44].
A fundamental requirement of our university’s ethics
guidelines is to preserve the participants’ privacy and to
limit the collection of person-related data as far as possi-
ble. Therefore, every study participant was assigned an
ID which was used throughout the experiment and for
the online questionnaire. All participants signed consent
forms prior to participating in our study. The consent
form explained the goal of our research, what we ex-
pected from them and how the collected data was used.
The signed consent forms were stored separately and did
not contain the subsequently assigned IDs to make them
unlinkable to their real names.
We refrained from video-recording the participants
during the study as the participants from our pre-study
reported that the awareness of being ﬁlmed made them
feel uncomfortable and had a negative impact on their
performance even if the camera was positioned in a non-
obtrusive way.
8 Conclusion
We conducted a lab study with 28 participants to ex-
plore usability challenges in the TLS deployment pro-
cess that lead to insecure conﬁgurations. In comparison
to related work, we contributed a study that focuses on
expert users, i.e., administrators who are in charge of se-
curing servers. Additionally, we conducted seven expert
interviews with penetration testers and security auditors
who frequently encounter poorly secured servers during
security audits.
We found that the TLS deployment process consists
of multiple critical steps which, if not done correctly,
lead to insecure communications and put Internet users at
risk for MITM attacks. Furthermore, our results suggest
that even computer scientists who are educated in terms
of privacy-enhancing protocols and information security
need additional support to make informed security deci-
sions and lack an in-depth understanding of the underly-
ing cryptographic fundamentals. Expert users also strug-
gle with the conﬁguration ﬁle structure of Apache web
servers and have to put a lot of additional effort into se-
curing default conﬁgurations. Our expert interviews un-
derline the ecological validity of the results from our lab
study and shed light on the weaknesses of TLS conﬁgu-
rations found in the wild. According to our security audi-
tors, the main concern regarding TLS is interoperability.
They also highlighted that server infrastructures are of-
ten conﬁgured with poor defaults and badly maintained
and are therefore not up-to-date.
Acknowledgements
We would like to thank the reviewers for their construc-
tive feedback. We would also like to thank our shepherd
Serge Egelman for his suggestions that were very help-
ful in improving our paper. This research was partially
funded by COMET K1 and by grant 846028 (TLSiP)
from the Austrian Research Promotion Agency (FFG).
USENIX Association
26th USENIX Security Symposium    1351
References
[1] 2016 Web
Server
Survey.
Online
https://news.netcraft.com/archives/
2016/02/22/february-2016-web-server-
survey.html.
T. Schreck, W. Alexander, A. Zauner, and P. Za-
wodsky. Applied Crypto Hardening. Online at
https://bettercrypto.org, 2015.
at
[2] SSL Labs Server Rating Guide.
Online at
https://www.ssllabs.com/downloads/SSL_
Server_Rating_Guide.pdf.
[3] The Heartbleed Bug.
heartbleed.com, 2014.
Online at https://
[4] Is Let’s Encrypt the Largest Certiﬁcate Authority
Online at https://www.eff.
on the Web?
org/deeplinks/2016/10/lets-encrypt-
largest-certificate-authority-web, 2016.
[5] Let’s Encrypt Stats.
Online at https://
letsencrypt.org/stats/, 2016.
[6] Survey of the SSL Implementation of the Most
Popular Web Sites. Online at https://www.
trustworthyinternet.org/ssl-pulse/,
2016.
[7] Usage statistics and market share of Apache for
websites.
Online at https://w3techs.com/
technologies/details/ws-apache/all/all,
2016.
[8] Y. Acar, M. Backes, S. Fahl, D. Kim, M. L.
Mazurek, and C. Stransky. You Get Where You’re
Looking for: The Impact of Information Sources on
Code Security. In 2016 IEEE Symposium on Secu-
rity and Privacy (SP), pages 289–305, May 2016.
[9] D. Akhawe and A. P. Felt. Alice in Warningland: A
Large-Scale Field Study of Browser Security Warn-
ing Effectiveness. In USENIX Security Symposium,
pages 257–272. USENIX Association, 2013.
[10] N. J. AlFardan, D. J. Bernstein, K. G. Paterson,
B. Poettering, and J. C. Schuldt. On the Security
of RC4 in TLS. In USENIX Security Symposium.
USENIX Association, 2013.
[11] N. Aviram,
S. Schinzel,
J. Somorovsky,
N. Heninger, M. Dankel, J. Steube, L. Valenta,
D. Adrian, J. A. Halderman, V. Dukhovni, et al.
DROWN: Breaking TLS using SSLv2. In USENIX
Security Symposium. USENIX Association, 2016.
[12] W. Breyha, D. Durvaux, T. Dussa, L. A. Kaplan,
F. Mendel, C. Mock, M. Koschuch, A. Kriegisch,
U. P¨oschl, R. Sabet, B. San, R. Schlatterbeck,
[13] J. Clark and P. C. van Oorschot. SoK: SSL and
HTTPS: Revisiting past challenges and evaluating
certiﬁcate trust model enhancements. In 2013 IEEE
Symposium on Security and Privacy (SP), pages
511–525. IEEE, 2013.
[14] T. Dierks and E. Rescorla. The Transport Layer
Security (TLS) Protocol Version 1.2. RFC 5246
(Proposed Standard), Aug. 2008. Updated by RFCs
5746, 5878, 6176.
[15] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey,
and J. A. Halderman. A search engine backed by
In Conference on Com-
Internet-wide scanning.
puter and Communications Security, pages 542–
553. ACM, 2015.
[16] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Hal-
derman. Analysis of the HTTPS Certiﬁcate Ecosys-
In Internet Measurement Conference, pages
tem.
291–304. ACM, Oct. 2013.
[17] P. Eckersley and J. Burns. An Observatory for
the SSLiverse. DEF CON 18 https://www.eff.
org/files/defconssliverse.pdf, July 2010.
[18] C. Evans, C. Palmer, and R. Sleevi. Public key
pinning extension for HTTP (HPKP). RFC 7469,
2015.
[19] S. Fahl, Y. Acar, H. Perl, and M. Smith. Why
Eve and Mallory (Also) Love Webmasters: A Study
on the Root Causes of SSL Misconﬁgurations. In
Proceedings of the 9th ACM symposium on Infor-
mation, Computer and Communications Security,
ASIA CCS ’14, pages 507–512, New York, NY,
USA, 2014. ACM.
[20] A. P. Felt, A. Ainslie, R. W. Reeder, S. Consolvo,
S. Thyagaraja, A. Bettes, H. Harris, and J. Grimes.
Improving SSL warnings: comprehension and ad-
herence. In Conference on Human Factors in Com-
puting Systems, pages 2893–2902. ACM, 2015.
[21] A. P. Felt, R. W. Reeder, H. Almuhimedi, and
S. Consolvo. Experimenting at Scale with Google
Chrome’s SSL Warning. In Conference on Human
Factors in Computing Systems, pages 2667–2670.
ACM, 2014.
[22] M. Harbach, S. Fahl, P. Yakovleva, and M. Smith.
Sorry, I don’t get it: An analysis of warning mes-
In Financial Cryptography and Data
sage texts.
Security, pages 94–111. Springer, 2013.
1352    26th USENIX Security Symposium
USENIX Association
[23] J. Hodges, C. Jackson, and A. Barth. RFC 6797:
HTTP Strict Transport Security (HSTS), 2012.
[24] R. Holz, J. Amann, O. Mehani, M. Wachs, and
M. A. Kaafar. TLS in the wild: an Internet-
wide analysis of TLS-based protocols for elec-
tronic communication. In Network and Distributed
System Security Symposium. Internet Society, Feb.
2016.
[25] R. Holz, L. Braun, N. Kammenhuber, and G. Carle.
The SSL landscape: a thorough analysis of the x.
509 PKI using active and passive measurements. In
Internet Measurement Conference, pages 427–444.
ACM, 2011.
[26] L.-S. Huang, S. Adhikarla, D. Boneh, and C. Jack-
son. An Experimental Study of TLS Forward Se-
Internet Computing, IEEE,
crecy Deployments.
18(6):43–51, 2014.
[27] R. Kang, L. Dabbish, N. Fruchter, and S. Kiesler.
“My Data Just Goes Everywhere:” User Mental
Models of the Internet and Implications for Privacy
and Security. In Symposium On Usable Privacy and
Security (SOUPS), pages 39–52. USENIX Associ-
ation, July 2015.
[28] M. Kranch and J. Bonneau. Upgrading HTTPS in
Mid-Air: An Empirical Study of Strict Transport
In Network and Dis-
Security and Key Pinning.
tributed System Security Symposium. Internet Soci-
ety, Feb. 2015.
[29] H. K. Lee, T. Malkin, and E. Nahum. Crypto-
graphic Strength of SSL/TLS Servers: Current and
Recent Practices. In Internet Measurement Confer-
ence, pages 83–92. ACM, Oct. 2007.
[30] G. F. Lyon. Nmap network scanning: The ofﬁcial
Nmap project guide to network discovery and secu-
rity scanning. Insecure, 2009.
[31] W. Mayer, A. Zauner, M. Schmiedecker, and
M. Huber. No Need for Black Chambers: Testing
TLS in the E-mail Ecosystem at Large. In 11th In-