'\" t
.TH "SYSTEMCTL" "1" "" "systemd 231" "systemctl"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemctl \- 控制 systemd 系统与服务管理器
.SH "SYNOPSIS"
.HP \w'\fBsystemctl\fR\ 'u
\fBsystemctl\fR [OPTIONS...] COMMAND [NAME...]
.SH "描述"
.PP
\fBsystemctl\fR
可用于检查和控制
\fBsystemd\fR(1)
系统与服务管理器的状态。
.SH "选项"
.PP
能够识别的命令行选项如下：
.PP
\fB\-t\fR, \fB\-\-type=\fR
.RS 4
参数必须是一个 逗号分隔的单元类型列表(例如"service,socket")。
.sp
在列出单元时，如果使用了此选项， 那么表示只列出指定类型的单元， 否则将列出所有类型的单元。
.sp
此外，作为特例，使用
\fB\-\-type=help\fR
表示在列出所有可用的单元类型之后退出。
.RE
.PP
\fB\-\-state=\fR
.RS 4
参数必须是一个逗号分隔的单元状态列表(只有 LOAD, ACTIVE, SUB 三大类)。 在列出单元时，如果使用了此选项，那么表示只列出处于指定状态的单元， 否则将列出所有状态的单元。 例如，使用
\fB\-\-state=failed\fR
表示只列出处于失败(failed)状态的单元。
.sp
此外，作为特例，使用
\fB\-\-state=help\fR
表示在列出所有可用的单元状态之后退出。
.RE
.PP
\fB\-p\fR, \fB\-\-property=\fR
.RS 4
参数必须是一个逗号分隔的属性名称列表(例如"MainPID,LogLevel")， 表示在使用
\fBshow\fR
命令显示属性时， 仅显示参数中列出的属性。 如果未指定此选项，那么将显示全部属性。 如果多次指定此选项， 那么相当于将这些选项的参数用逗号连接起来。
.sp
不带参数的
\fBsystemctl\ \&show\fR
命令 将会显示管理器(systemd)自身的属性(参见
\fBsystemd-system.conf\fR(5)
手册)。
.sp
不同类型的单元拥有不同的属性集， 指定任意一个单元(即使并不存在)，都可以查看此类单元的所有属性。 类似的，即使指定了一个不存在的任务(job)，也能查看任务的所有属性。 每种单元能够拥有的属性集分散在
\fBsystemd.unit\fR(5)
手册 以及此类单元专属的手册中，例如
\fBsystemd.service\fR(5),
\fBsystemd.socket\fR(5)
等等。
.RE
.PP
\fB\-a\fR, \fB\-\-all\fR
.RS 4
在列出单元时，表示列出所有已加载的单元。 在使用
\fBshow\fR
命令显示属性时， 表示显示所有属性，而不管这些属性是否已被设置。
.sp
如果想要列出所有已安装的单元，请使用
\fBlist\-unit\-files\fR
命令。
.RE
.PP
\fB\-r\fR, \fB\-\-recursive\fR
.RS 4
在列出单元时， 同时也以
"容器名:单元名"
格式列出本地容器中的单元。
.RE
.PP
\fB\-\-reverse\fR
.RS 4
在使用
\fBlist\-dependencies\fR
命令时， 仅显示单元之间的反向依赖关系。 也就是仅显示
\fIWantedBy=\fR,
\fIRequiredBy=\fR,
\fIPartOf=\fR,
\fIBoundBy=\fR
系列(而不是
\fIWants=\fR
系列)的依赖关系。
.RE
.PP
\fB\-\-after\fR
.RS 4
在使用
\fBlist\-dependencies\fR
命令时， 仅显示在先后顺序上早于指定单元的那些单元， 也就是递归的列出
\fIAfter=\fR
中的单元。
.sp
注意，每个
\fIAfter=\fR
依赖都会自动生成一个对应的
\fIBefore=\fR
依赖。 单元之间的先后顺序既可以被显式的明确设定， 也可以由其他指令隐式的自动生成(例如
\fIWantedBy=\fR
或
\fIRequiresMountsFor=\fR)。 无论是隐式自动生成的先后顺序， 还是显式明确设定的先后顺序， 都会被
\fBlist\-dependencies\fR
命令显示出来。
.RE
.PP
\fB\-\-before\fR
.RS 4
在使用
\fBlist\-dependencies\fR
命令时， 仅显示在先后顺序上晚于指定单元的那些单元， 也就是递归的列出
\fIBefore=\fR
中的单元。
.RE
.PP
\fB\-l\fR, \fB\-\-full\fR
.RS 4
在
\fBstatus\fR,
\fBlist\-units\fR,
\fBlist\-jobs\fR,
\fBlist\-timers\fR
命令的输出中， 显示完整的单元名称、进程树项目、日志输出、单元描述， 也就是不省略或截断它们。
.RE
.PP
\fB\-\-value\fR
.RS 4
在使用
\fBshow\fR
命令显示属性时， 仅显示属性值，而不显示属性名及等号。
.RE
.PP
\fB\-\-show\-types\fR
.RS 4
在使用
\fBlist\-sockets\fR
命令列出套接字(socket)时，同时显示套接字的类型。
.RE
.PP
\fB\-\-job\-mode=\fR
.RS 4
在向任务队列中添加新任务(job)时，如何处理队列中已有的任务。 可设为
"fail",
"replace",
"replace\-irreversibly",
"isolate",
"ignore\-dependencies",
"ignore\-requirements",
"flush"
之一。 仅在使用
\fBisolate\fR
命令时，默认值为
"isolate"
且不能更改， 对于其他命令，默认值皆为
"replace"
。
.sp
"fail"
表示当新任务与队列中已有的任务冲突时，该命令将失败。 所谓"冲突"的含义是：导致队列中已有的某个启动操作转变为停止操作，或者相反。
.sp
"replace"
表示将队列中冲突的任务替换为新任务。
.sp
"replace\-irreversibly"
与
"replace"
类似， 不同之处在于将新任务同时标记为"不可撤销"， 也就是即使未来与其他新添加的任务发生冲突也不会被撤消。 注意，这个"不可撤销"的任务， 仍然可以使用
\fBcancel\fR
命令显式的撤消。
.sp
"isolate"
仅用于启动操作，表示在该单元启动之后，所有其他单元都会被停止。 当使用
\fBisolate\fR
命令的时候， 这是默认值，且不能更改。
.sp
"flush"
表示撤消队列中已有的全部任务，然后加入新任务。
.sp
"ignore\-dependencies"
表示忽略新任务的所有依赖关系(包括先后顺序依赖)， 立即执行请求的操作。 如果成功， 那么所有被依赖的单元及先后顺序都将被忽略。 仅用于调试目的，切勿用于常规目的。
.sp
"ignore\-requirements"
类似于
"ignore\-dependencies"
， 表示仅忽略必需的依赖(但依然遵守单元之间的先后顺序)。
.RE
.PP
\fB\-\-fail\fR
.RS 4
这是
\fB\-\-job\-mode=fail\fR
的快捷方式。
.sp
当与
\fBkill\fR
命令一起使用时， 表示如果没有任何单元被杀死，那么将会导致报错。
.RE
.PP
\fB\-i\fR, \fB\-\-ignore\-inhibitors\fR
.RS 4
当关闭或休眠系统时，忽略 inhibitor 锁。 应用程序可以利用 inhibitor 锁防止某些重要操作(例如刻录光盘)被关机或休眠打断。 任何用户都可以获取 inhibitor 锁， 但是只有特权用户可以撤消或者忽略它。 正常情况下， 关机与休眠动作会因为 inhibitor 锁的存在而失败(无论该动作是否由特权用户发起)， 同时所有已激活的 inhibitor 锁也都会被显示出来。 但如果使用了此选项， 那么 inhibitor 锁将被忽略，关机或休眠将会照常执行， 同时也不再显示这些已激活的锁。
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
安静模式，也就是禁止输出任何信息到标准输出。 注意：(1)这并不适用于输出信息是唯一结果的命令(例如
\fBshow\fR)； (2)显示在标准错误上的出错信息永远不会被屏蔽。
.RE
.PP
\fB\-\-no\-block\fR
.RS 4
默认为阻塞模式，也就是任务经过校验、排入任务队列之后，
\fBsystemctl\fR
必须一直等到单元启动/停止完成才算执行结束。 使用此选项之后，将变为无阻塞模式，也就是任务排入队列之后， 即算
\fBsystemctl\fR
执行结束(不必等待单元启动/停止完成)。
.RE
.PP
\fB\-\-user\fR
.RS 4
与当前调用用户的用户服务管理器(systemd 用户实例)通信， 而不是默认的系统服务管理器(systemd 系统实例)。
.RE
.PP
\fB\-\-system\fR
.RS 4
与系统服务管理器(systemd 系统实例)通信， 这是默认值。
.RE
.PP
\fB\-\-no\-wall\fR
.RS 4
在执行 halt, poweroff, reboot 动作前，不发送警告消息。
.RE
.PP
\fB\-\-global\fR
.RS 4
表示在全局用户单元目录(通常是
/etc/systemd/user/)上操作， 从而全局的操作一个用户单元，这会影响到所有未来登入的用户。
.RE
.PP
\fB\-\-no\-reload\fR
.RS 4
与
\fBenable\fR,
\fBdisable\fR,
\fBedit\fR
命令连用， 表示在完成操作之后不重新加载 systemd 守护进程的配置(默认会自动重新加载)， 相当于不自动执行
\fBdaemon\-reload\fR
命令。
.RE
.PP
\fB\-\-no\-ask\-password\fR
.RS 4
与
\fBstart\fR
及其相关命令(reload, restart, try\-restart, reload\-or\-restart, reload\-or\-try\-restart, isolate)连用， 表示不询问密码。 单元在启动时可能要求输入密码(例如用于解密证书或挂载加密文件系统)。 当未使用此选项时，
\fBsystemctl\fR
将会在终端上向用户询问所需的密码。 如果使用了此选项， 那么必须通过其他方法提供密码(例如通过密码代理程序)， 否则单元可能会启动失败。 使用此选项还会导致在验证用户身份时， 不能使用从终端输入密码的方式。
.RE
.PP
\fB\-\-kill\-who=\fR
.RS 4
与
\fBkill\fR
命令连用， 表示向哪个进程发送信号(\fB\-\-signal=\fR)。 可设为
\fBmain\fR(仅杀死主进程) 或
\fBcontrol\fR(仅杀死控制进程) 或
\fBall\fR(杀死全部进程，这是默认值)。 所谓"主进程"是指定义了单元生存期的进程。 所谓"控制进程"是指用于改变单元状态的进程。 例如，所有
\fIExecStartPre=\fR,
\fIExecStop=\fR,
\fIExecReload=\fR
启动的进程都是控制进程。 注意，对于一个单元来说，同一时刻只能存在一个控制进程， 因为同一时刻只能存在一个状态变化的动作。 对于
\fIType=forking\fR
类型的服务来说，
\fIExecStart=\fR
启动的初始进程就是一个控制进程， 而此进程随后派生出来作为守护进程运行的那个进程， 则是该单元的主进程(如果它可以被检测到的话)。 但对于其他类型的服务来说，
\fIExecStart=\fR
启动的初始进程反而始终是该服务的主进程。 一个服务单元可以包含以下进程： 零个或一个主进程，零个或一个控制进程， 任意数量(可以是零个)的其他进程。 注意，不是所有类型的单元都含有上述三种进程。 例如，对于 mount 类型的单元来说， 就仅有控制进程(/usr/bin/mount
与
/usr/bin/umount)， 而没有主进程。 默认值是
\fBall\fR
.RE
.PP
\fB\-s\fR, \fB\-\-signal=\fR
.RS 4
与
\fBkill\fR
命令连用， 表示向目标进程发送哪个信号。 必须是
\fBSIGTERM\fR,
\fBSIGINT\fR,
\fBSIGSTOP\fR
之类众所周知的信号。 默认值为
\fBSIGTERM\fR
 。
        .RE
.PP
\fB\-f\fR, \fB\-\-force\fR
.RS 4
当与