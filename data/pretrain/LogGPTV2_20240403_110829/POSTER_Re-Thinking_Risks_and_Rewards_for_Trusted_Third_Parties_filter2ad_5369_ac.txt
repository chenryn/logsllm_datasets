so doing may run into millions. APACS, the Association for Payment and Clear(cid:173)
ing Services, for example, handles something like £26,000 billion worth of elec(cid:173)
tronic  transactions  a  year.  Where  these  sums  of money  are  concerned it  is  not 
surprising that 56-bit cryptosystems are not considered adequate and are,  conse(cid:173)
quently, not in use. 
In the next section we take a brief look at a cascade cipher based on DES. It is 
a way of enlarging the key size of DES. This cipher is known as triple-DES and 
is also used extensively. 
5.2.5 
Triple DES 
When DES was designed back in the early 1970s 56 bits of key seemed perfectly 
secure.  After all,  performing 256  operations  in  a reasonable  time  is  not  a trivial 
exercise even today.  However, while it is not a trivial exercise, it is certainly not 
unfeasible and dedicated processors can be manufactured to improve the speed of 
an exhaustive key search operation.  Consequently for applications where a high 
degree  of security  is  required,  such  as  the  electronic  transfer  of large  sums  of 
money, DES with a 56-bit key is no longer considered safe. 
One obvious way to increase the key space is simply to chain two DES  sys(cid:173)
tems  with  different  keys  together.  Intuitively  we  would  expect  this  to  be  no 
weaker  than  single-key  DES  but  now  with  a  112-bit  key.  Unfortunately  as  so 
often happens in cryptography our intuition fails  and this turns out not to be the 
case.  The  problem  here  is  not  so  much  with  DES  itself but  with  the  notion  of 
multiple encryption. 
BASIC CRYPTOGRAPHY  73 
Multiple  encryption  is  susceptible  to  an  attack  known  as  the  'meet-in-the(cid:173)
middle' attack first invented by Merkle and Hellman [7]. To see how this kind of 
attack  works,  we  suppose  that  we  shall  encrypt  the  plaintext X  to  produce  the 
ciphertext W = E,(X, K,). This is  then further encrypted under a different cipher 
to produce the ciphertext Y = E2(W,  K 2)  where K,  and K2 are  independent sub(cid:173)
keys of bit length N, and N2, respectively. We shall also suppose that the attacker 
has  one  valid  plaintext-ciphertext  pair  (Xo,Yo)  and  that  she  also  knows  a  few 
other valid ciphertexts. The attack is as follows. 
The  first  step is  to  decrypt  Yo  for each  of the  possible  values  of the  key K2• 
This will  require  2N2  decryptions, giving  2N2  pairs of the  form  (W.  Kz).  The 
next step goes in the other direction and for each of the  2N1  possible  values of 
K]  encrypts X to find its corresponding W.  This is then checked to see if there are 
entries in the list from the first step. If a match is found this is further checked by 
decrypting  the  valid  ciphertexts  with  the  key  (K"  K2)  to  see  if they  yield  valid 
ciphertexts. If they do then the attack has  uncovered the key. 
The  first  step  uses  at most  2N2  decryptions  and  step  two  requires  at  most 
encryptions.  Thus the effective  key  size of the  cascade cipher is  approxi(cid:173)
2NI 
mately  the  larger of the  two  keys  (K1,  K2).  Simply  repeating  a cipher with  key 
size K bits n times increases the effective key  size to  about nKI2  rather than nK. 
Thus to  increase the effective key  size n should chosen to  be  3.  However,  if the 
cipher is  a  group  even  this  increase  is  non-existent  since  because  of the  group 
properties  any  sequence  of group  operations  would  be  equivalent  to  a  single 
operation. When designing ciphers considerable effort goes into ensuring that the 
cipher is not a group. It was shown in  1992 that DES is not a group r 81. 
In  practice  the  following  scheme  shown  in  Fig.  5.6  is  used  to  increase  the 
effective  key  space  of DES  [9].  This  cryptosystem  is  known  as  triple-DES  and 
has two independent sub-keys  so that its  effective key  size  is  thought  LO  be  112 
bits.  The  data is first  encrypted  under key  K1,  then  decrypted  under  key  K2  and 
finally  encrypted  under  key  K1•  The  final  output  is  therefore  given  by  Y  = 
E(D(E(X,K,)J(z),K,)  where  E  and  D  represent  encryption  and  decryption, 
respectively. It is not, however, a cascade cipher in the sense that not all  sub-keys 
are independent. It should also be noted that triple DES should be  thought of as a 
cipher system in its own right and not just as  DES repeated  3 times.  There have 
been  rumours  that  when  analysed  in  this  fashion  the  actual  key  space  of triple 
DES  is  lower than  112 bits, but these rumours  may,  of course.  be just malicious 
gossip. 
1 
-I  DES  ~ 
f 
~ DES  H DES·1 
f 
K2 
+ 
K1 
Fig. 5.6 
The scheme for encryption using triple DES. This cipher is thought to increase the size of 
the key used to  112 bits while offering the same strength of cipher as  DES 
74  CRYPTOGRAPHY 
5.2.6  A note on stream ciphers 
DES, as we have described it, takes an input data block of 64 bits and uses a key 
of 56 bits to encrypt that data to produce 64 bits of ciphertext. This is an example 
of a block cipher.  Suppose there were repeated plaintext patterns that were to be 
encrypted under a block cipher with the same key.  Such patterns can occur with 
standard  letter fonnats,  for  example.  These  patterns  would  be  repeated  in  the 
ciphertext under a block cipher and can be exploited. This mode of operation of a 
block  cipher  is  known  as  electronic  code  book  (ECB)  mode.  It  is  not 
recommended that any block cipher be operated in this mode [1,4-6]. 
To overcome the problem of patterns in the ciphertext we need to ensure that, 
in effect, each new block is encrypted under a different key so that patterns in the 
plaintext will not be reflected in the  ciphertext. A cipher which is encrypted bit 
by bit, or symbol by symbol, is called a stream cipher. By operating DES in a dif(cid:173)
ferent mode it can be made to behave as  if it were a stream cipher thus eliminat(cid:173)
ing the problem of patterns in the ciphertext. The one time pad is a stream cipher 
and  takes  a  running  key  and  perfonns  a  bit-wise  exclusive-or of this  with  the 
message.  The one  time pad is  theoretically unbreakable.  Stream ciphers aim  to 
emulate this by using a shorter secret key to generate a longer stream of pseudo(cid:173)
random  data  which  fonns  the  running  keystream.  In  Fig.  5.7  we  illustrate  the 
operation of a 64-bit block cipher in  output feedback  (OFB)  mode.  This  tech(cid:173)
nique converts the block cipher into a stream cipher. 
Fig. 5.7 
The operation ofa block cipher in output feedback  (OFB) mode. The register is shifted 
1 bit left after each encryption so that the output bit forms the rightmost bit of the register. The output 
bits are now used as a running keystream. 
BASIC CRYPTOGRAPHY  75 
Running a block cipher in  OFB  mode converts  it to  a stream  cipher with  no 
error propagation and with more encryptions per bit.  The  initialization  vector of 
the  shift register does not need to  be  kept secret, but it is  preferable that it is  not 
revealed.  By  selecting  the  first  n bits  from  each  encryption  in  OFB  mode  this 
technique can generate a running keystream consisting of n-bit symbols. Encryp(cid:173)
tion and decryption in this mode are, of course, the same. 
There are other techniques for converting block ciphers into stream ciphers as 
there  are  many  other  ways  of designing  stream  ciphers.  The  subject  of  stream 
cipher design  is  a  specialist field  in  its  own  right  rIO]  and  it  is  not  appropriate 
here  for  us  to  go  into  a  discussion  of the  relative  merits  of block  and  stream 
ciphers.  However,  it important to  understand that even very  strong ciphers, such 
as DES, may not be as secure as  we  might think when operated in  EeB mode. 
5.2.7  A final  word 
Despite  its  advancing  years  there  is  still  life  in  DES  and  it  has  successfully 
fended off a multitude of attacks. DES, of course, is  only a very small part of the 
story  of  secret-key  algorithm  design.  It  does,  however,  highlight  several 
important  features.  In  particular  we  have  seen  how,  using  sophisticated 
permutations  and  substitutions,  DES  achieves  the  goal  of  confusion  and 
diffusion.  We  have  also  seen  how  DES  is  built  up  from  smaller  reversible 
components each of which is a cipher. Many of these kinds of features  are found 
in  other  secret-key  algorithms.  The  secrecy  is  obtained  by  a  complex  series  of 
mathematical shufflings which are very hard to undo without the key. 
The issue of key size is a particularly important one.  A very strong algorithm, 
such as DES, can be made very much weaker by restricting its key  space in  some 
way.  Similarly the overall security of DES  can be  improved by  multiple encryp(cid:173)
tion which has the effect of increasing the key size. Key size is an  important com(cid:173)
mercial issue because most governments will only allow the export of secret-key 
systems which have an equivalent strength of a 40-bit system.  Where  the  major(cid:173)
ity of the world's software is exported from  the US,  this  has  implications for the 
use  of US products for security.  We  shall  return to  the thorny problem of export 
controls in the final  section. 
The issue of key size and security becomes further complicated when we con(cid:173)
sider  public-key  systems  in  the  next  section.  Public-key  systems  derive  their 
security from  quite different fundamental  precepts to secret-key systems.  One of 
the  consequences  of this  is  that  key  sizes  for  equivalent  security  to  secret-key 
systems  are  vastly  different.  This  is  further complicated  by  the  fact  that  public(cid:173)
key and secret-key systems are often used together as  in  the encryption tool  POP 
(pretty good privacy). 
Secrecy and authenticity are independent aspects of a cryptosystem.  For con(cid:173)
venience  we  have  focused  on  secrecy.  Secret-key  systems  can  also  be  used  to 
76  CRYPTOGRAPHY 
provide authentication services but a discussion of these techniques falls outside 
the scope of this review.  We shall return to the issue of authentication when we 
have taken a brief tour of public-key cryptography. It is in the area of authentica(cid:173)
tion  that  public-key  cryptography  is  truly  revolutionary  and  gives  us  the  most 
important techniques for ensuring the integrity of electronic transactions. 
5.3 
PUBLIC-KEY CRYPTOGRAPHY 
5.3.1 
Secret keys versus public keys 
Secret-key  and  public-key  cryptosystems  are  very  different  beasts.  Secret-key 
systems rely upon  a complex series of permutations and  substitutions to  achieve 
security.  The  security  of  public-key  systems  is  entirely  dependent  on  the 
unproven  difficulty  of reversing  certain  simple  mathematical  operations.  The 
trust  in  secret-key  systems  is  one  of trust  in  the  key  distribution  mechanisms; 
each  user  must  possess  a  copy  of the  secret  key.  In  public-key  cryptography 
everyone  can  possess  an  individual's  public  key  and  must  do  so  to  encrypt  a 
message.  The trust in  public-key systems  is  trust in the  authenticity  of the  key; 
each public key should be uniquely identified with a particular user. 
Public-key cryptography arose in the  1970s [11,  12]  in response to the prob(cid:173)
lem of key distribution in secret -key systems. Instead of having just one key each 
user generates a key pair. The keys are mathematically related in a very particular 
way.  Let us  suppose  that  the  public  key  Kpub  can be generated simply from  the 
private key Kpri by some mathematical function/so that: 
...  (5.14) 
The basic  idea behind public-key cryptography  is  that the  inverse problem, 
calculating Kpub from K pri'  should be prohibitively difficult. An example of a sim(cid:173)
ple  mathematical  operation  with  this  property  is  multiplication  and  its  inverse. 
Multiplication of two large prime numbers p and q to give m can be performed 
very quickly. However, if we are simply given m and asked to find p and q we are 
faced with a problem of an entirely different magnitude. Even the very best fac(cid:173)
toring algorithms can take many years for large m whereas the  mUltiplication to 
produce m may have taken a few  seconds. The public key can therefore be pub(cid:173)
lished widely without fear that the private key can easily be recovered from it. 
If Alice wishes to communicate in secret with Bob using a public-key crypto(cid:173)
system she obtains Bob's public key and encrypts the message with it. The cryp(cid:173)
tosystem should be such that only someone with the private key, that is, Bob, can 
decrypt  the  message.  The  main  flaw  with  public-key  cryptography  is  that  the 
public key must be trusted.  Alice must be certain that she is using Bob's public-
PUBLIC-KEY CRYPTOGRAPHY  77 
key  and not the key  of someone masquerading as  Bob. The problems associated 
with secret-key distribution have just been shifted elsewhere. 
The real  significance of public-key cryptography for electronic  commerce is 
not  in  its  ability  to  provide  secrecy  but  in  its  ability  to  provide  authenticity.  If 
Bob wishes to prove to Alice that a particular document is from  him  and has not 
been altered he simply takes a copy of the document and encrypts it  with his pri(cid:173)
vate  key.  He then  sends both the  encrypted and  the  original  document  to  Alice. 
Alice  uses  Bob's public key  to  decrypt the  document and  checks  to  see  if both 
copies match. If they do, she accepts it as a genuine unaltered message from  Bob. 
The  encrypted  document  is  known  as  a  digital  signature  and  is  the  electronic 
equivalent of its handwritten counterpart.  Unlike  the  handwritten  version,  how(cid:173)
ever,  a  digital  signature  has  a  number  of  important  properties  which  make  it 
much stronger. We shall examine digital  signatures in  a little  while.  For now  we 
shall  see  how  two  popular  public-key  systems  work.  A  full  understanding  of 
these  systems  requires  some  number  theory  which  is  beyond  the  scope  of this 
chapter.  However,  some  details  are essential  if we  are  to  understand  the  funda(cid:173)
mental difference between public-key systems and secret-key systems. 
5.3.2  Diffie-Hellman key exchange 
The  first  public  key  system  to  be  invented  was  the  Diffie-Hellman  key 
distribution  system  [11].  This  exploits  the  properties  of a  conjectured  one  way 
function  (OWF) which is modular exponentiation over a finite  field  [13).  A  one 
way function, f,  is  a function f : A  ~ B  such  that for  all  x  E  A, f (x),  is  easy  to 
compute,  but  for  almost  all  Y  E  f (A)  it  is  prohibitively  difficult  to  find  the 
corresponding  x  such  that  y  =  f(x).  Diffie  and  Hellman  conjectured  that  the 
following function is one way -
a conjecture,  incidentally,  which  has  not  been 
proven in a strict sense. 
The input x to the function is  taken from  the finite field Z,,_l,  that is  from  the 
integers  {O,  I, 2,  ... ,p - 2 }.  The input is mapped by the function to the group of 
units of Zp  which is  labelled  Zp * . The number p  is  a large  prime  such  that p-I 
has a large prime factor so that Zp * is simply the set of non-zero elements of the 
Galois field GF(p). The OWF is given by: 
f(x) = W 
in GF(p) 
...  (5.15) 
where  ~ is  a primitive element of GF(p).  A primitive  element  is  an  element of 
multiplicative  order p -1.  The  order of an  element  of a  group  is  the  smallest 
number of times it must be multiplied to itself to equal the identity element. If no 
such  number exists the order of that element is  taken  to  be  infinite.  Basically a 
primitive  element  is  a  generator  of  the  group  and  the  function  (5. J 5)  cycles 
78  CRYPTOGRAPHY 
though  each  of the  possible  values.  As  an  example,  consider  the  element  3  of 
GF(7). We have the following in GF(7): 
...  (5.16) 
By restricting  the  operations  to  those  on  primitive elements  we  ensure  that 
the output samples the entire space and does not form a sub-group of lower order. 
The number of primitive elements of the finite field  GF(p) is given by    (p -1) 
where   is the Euler totient function. For prime p Euler's function is simply given 
by   (P) = p -1 which gives us some idea of how many primitive elements there 
are for a given Galois Field. Alice and Bob can use this function on this algebraic 
system to exchange a secret without ever having met. This is how it is done. 
Alice and Bob agree, not necessarily in secret, on a common modulus p and a 