## mDNS简介
mDNS(Multicast
DNS)指的是多播DNS，就像之前说的，这个包也是在内网中为了知道各主机的ip地址而存在的，大概是广播我是谁，我在什么什么地址，而收到的主机也会响应一个mDNS包告诉对方自己是谁，自己在什么什么地方。它和dns包差不多，域名为`主机名.local`。
mDNS用于在局域网中发现设备，跟zeroconf协议的用处相近(zeroconf主要用于在没有DNS的网络中发现设备，主要用于linux和mac中)。感觉更常用于手机，网上能搜到的有关mDNS的，多为小程序的开发，诸如一些拿来发现局域网设备的微信小程序。
类似这篇文章  小程序开发必备的高级能力之四：mDNS
我们可以看到，它轻易的获取到了设备名，ip地址和服务类型
这对于内网渗透中信息收集无疑是有作用的，这就细嗦它的工作原理了。
## mDNS工作原理
mDNS也是基于DNS协议的协议，与DNS有高度的相似性，也是用于在无传统DNS服务器的网络中发现设备。
先说说发现设备相关的问题
就比如一台刚进入局域网的计算机，它没有局域网中其他设备，那怎么去获取呢？
这里靠的就是广播，比如ARP协议，就是靠广播去发现加入了组播的主机，ARP负责mac地址和ip地址的解析。
而零配置网络的目的就是在局域网中发现服务，这里先提一下，后面会详细说。
再说说在有传统DNS服务器的网络中解析的方法，按照以下顺序寻找一个域名
  1. 本地hosts文件解析
  2. 使用DNS解析
  3. 使用LLMNR解析
  4. 使用NBNS解析
实际上，自从mDNS加入了windows后，windows也会默认用mDNS进行查询，顺序在步骤2和步骤3之间。
在没有DNS服务器的网络中，很显然我们无法靠DNS解析域名。作为DNS的替代，mDNS就发挥了作用。
我们可以看看ping一个不存在的域名会发生什么
在不存在DNS服务器的局域网中
它会先后用mDNS，LLMNR,NBNS去尝试解析域名（前面的arp协议是为了去找局域网内的网关）
这里还存在一个说法，因为mDNS并不是windows本来的东西，所以windows的规则也和MAC不同，即windows是通过主机名加.local构成查询请求，mac是直接用主机名构成查询请求，虽然最终都会回归到`xxxxx.local`
而在存在DNS服务器的局域网里它会先尝试去寻找xxxxxxx.lan的解析地址，再用这三种去寻找。
### mDNS工作过程
然后是工作过程，mdns有两个作用，一个是作为解析计算机名（就像上面ping的时候会发送查询包一样），一个是作为解析服务名。在windows中以解析计算机名为主要作用。
#### 解析计算机名
在计算机需要解析一个计算机名时，它会向mDNS的广播地址发送查询请求包，将`欲查询计算机名.local`作为域名去解析地址，该计算机名的主机在收到查询包后会将返回包广播出来，让局域网内主机都能接收到。
#### 解析服务名
这又要说回mac中的bonjour，bonjour提供了零配置网络的设备发现方式，其中的dns-sd注册服务，发现服务，即是用的mdns来完成。
首先mDNS工作于5353端口，向224.0.0.251广播地址发送数据包，广播给组播地址中的主机。
内容为查询请求，其他主机收到后，如果有，则也会向广播地址进行广播。
还有就是，在具有mDNS协议的设备进入局域网时候，它也会广播一个请求包
内容为自己的服务名，ip地址和服务类型。
我们可以用`dns-sd -R     来注册一个服务`，我们注册一个服务同时会向局域网中广播我们所具有的服务
下为主机中使用dns-sd注册了一个fucktrump的服务
上为虚拟机中使用dns-sd查找本地服务
两台计算机就在局域网中实现了服务的注册与发现。
下为整个交互过程的数据包
0到9是本机在注册服务，过程基本如下
注册服务时，生成三个相关的dns记录：
  1. 服务记录srv
  2. 指针记录ptr
  3. 文本记录txt
srv包含主机名和端口号，使用者记录该名字以便于长期访问，目的在于将一个服务名指向一个主机名和其端口号。
`fucktrump._http._tcp.local: type SRV, class IN, cache flush, priority 0,
weight 0, port 280, target DESKTOP-XXXXXXX.local`则把`fucktrump._http._tcp.local`解析到了`DESKTOP-XXXXXXX.local`的280端口上。这里虽然有权重和优先级的概念存在，但实际上是没有使用的，所以下面会提到，修改权重并不会影响服务解析。
ptr在dns中是域名反向解析，负责把ip反向解析为域名，这里是将某服务类型解析到一个服务上。比如
`_http._tcp.local. 280 PTR
fucktrump._http._tcp.local.`意思就是创建了一个基于tcp协议和http协议的服务，反向解析到了后面那个域名上
txt包含一些特殊描述（可以为空白），用于标识一些其他信息
mdns使用TTL来控制服务的存活时间，之前介绍过mdns的结构，我也蛮好奇的为什么dns-sd注册了服务还不能退出终端，一退服务就会消失，mdns中的TTL也有时间限制，一般注册服务会带有一个2分钟的TTL，每隔一到两分钟就会重新发包表示服务还存活，如果中途退出了终端，则会发一个TTL为0的mdns数据包，表示服务停止了。
发现服务时，发现方用注册时指定的dns记录来发起一个ptr记录问询，收到后，具有该服务的主机返回一个ptr记录
mDNS协议对于零配置局域网来说是非常方便的，譬如在与打印机互通，连接局域网中电脑或手机，只要连入同一网络，就可以很快的发现对方的服务并与之通信。arp协议负责的是ip与mac地址的解析，而mDNS负责的是ip与域名的解析。
## mDNS存在的安全问题
### 信息泄露
这个可能不算是安全问题，但是可以作为一种信息收集的手段,mDNS用广播发现设备就注定会暴露一些东西。
以下是包括的能收集到的信息：
  1. ip地址（包括ipv4和ipv6）
  2. 服务名（有些服务直接以主机名命名
  3. 传输协议以及端口服务
个人认为主要取决于主机运行的服务，比如：