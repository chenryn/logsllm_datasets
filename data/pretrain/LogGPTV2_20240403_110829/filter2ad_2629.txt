title:A framework for low-power IPv6 routing simulation, experimentation,
and evaluation
author:Nicolas Tsiftes and
Joakim Eriksson and
Niclas Finne and
Fredrik &quot;Osterlind and
Joel H&quot;oglund and
Adam Dunkels
A Framework for Low-Power IPv6 Routing Simulation,
Experimentation, and Evaluation
Nicolas Tsiftes, Joakim Eriksson, Niclas Finne, Fredrik Österlind, Joel Höglund, Adam Dunkels
Swedish Institute of Computer Science
{nvt,joakime,nﬁ,fros,joel,adam}@sics.se
ABSTRACT
Low-power networked devices, such as sensors and actua-
tors, are becoming a vital part of our everyday infrastruc-
ture. Being networked, the continued development of these
systems needs involvement from the networking community.
We present a framework for simulation, experimentation,
and evaluation of routing mechanisms for low-power IPv6
networking. The framework provides a detailed simulation
environment for low-power routing mechanisms, and allows
the system to be directly uploaded to a physical testbed for
experimental measurements.
Categories and Subject Descriptors
C.2.2 [Network Protocols]: Routing protocols
General Terms
Experimentation, Measurement, Performance
1.
INTRODUCTION
The use of low-power networked devices, such as battery-
powered sensors and actuators, are emerging in many areas
from industrial automation and home automation to auto-
mated electric meter reading and the smart grid. Companies
in the network industry such as Cisco and Ericsson predict
that these networks will grow to billions of devices over the
next ten years. With low-power networked devices becoming
a vital part of our everyday infrastructure, it is important
that the networking community gets involved in developing
and evaluating network mechanisms for these devices.
To leverage existing systems and protocols for the emerg-
ing low-power networked devices, the community has adopted
IP as the network platform. To allow for a large number of
devices, IPv6 has been selected over IPv4. Recent work in
the wireless sensor network community has shown that IPv6
can be used even for challenging and severely power and
memory constrained wireless networks [1, 2]. To achieve low-
power operation, nodes must keep their radio transceivers oﬀ
as much as possible, while turning them on often enough for
the nodes to be able to forward traﬃc. Low-power operation
is achieved by a duty-cycling mechanism running below the
IP layer.
Industrial adoption requires standardization, and to stan-
dardize routing for low-power and lossy IPv6 networks, the
Copyright is held by the author/owner(s).
SIGCOMM’10, August 30–September 3, 2010, New Delhi, India.
ACM 978-1-4503-0201-2/10/08.
Routing objective functions
Applications
ContikiRPL, Contiki
Firmware
Simulator
Testbed
Simulation results
Experimental results
Figure 1: Workﬂow: a user-supplied routing objec-
tive function is compiled with the Contiki operating
system, ContikiRPL, and various applications. The
resulting system ﬁrmware can be simulated as well
as run on real hardware.
IETF ROLL working group has developed a routing protocol
called RPL [3, 4]. Since the emerging low-power networks
have vastly varying requirements and characteristics, RPL
does not deﬁne any speciﬁc routing metrics, path costs, or
forwarding policies. Instead, RPL leaves this open so that
diﬀerent networks can apply diﬀerent mechanisms to meet
diﬀerent objectives such as minimizing latency or minimiz-
ing energy consumption. How to select forwarding policies,
path costs, and routing metrics to meet speciﬁc requirements
is still an open problem, however.
2. FRAMEWORK
We present a framework for simulation, experimentation,
and evaluation of routing mechanisms in networks of low-
power devices. Our framework consist of three parts: our
Contiki operating system, running on the individual sen-
sor nodes; our Cooja/MSPsim Contiki network simulation,
which allows cycle-accurate emulation of node software and
bit-level accurate simulation of low-power radio networking;
and our ContikiRPL implementation of the RPL protocol,
which allows replaceable routing objective functions. Parts
of our framework are already widely used in the industry,
such as the Contiki operating system and its µIPv6 IP stack.
The workﬂow of the system is that routing objective func-
tions can ﬁrst be implemented and studied in the simulator,
then be transferred to a testbed with actual sensor network
motes. This procedure is illustrated in Figure 1.
Our framework allows routing mechanisms both to be
studied in simulation and to be immediately transferred to
a physical testbed for experimental measurement and anal-
ysis. The simulation includes node-level details such as the
479eﬀects of transceiver duty cycling, thus allowing the user to
gain insight into low-level phenomena that aﬀect the real-
world performance. The experimental system provides a
software-based power proﬁling mechanism for power mea-
surements. Such a workﬂow is not possible with traditional
network simulators such as ns-2 or Omnet++, which re-
quire routing mechanisms to be developed explicitly for the
simulation environment. Similarly, traditional wireless sen-
sor network simulators such as the TinyOS TOSSIM do not
provide the level of simulation detail to capture the eﬀects
of radio duty cycling.
2.1 Node Operating System
Our framework uses the Contiki operating system, a widely
used operating system for low-power wireless devices. Con-
tiki contains the µIPv6, a full IPv6 stack that has been cer-
tiﬁed under the IPv6 Ready program [1]. µIPv6 includes a
comprehensive API for programming protocols using UDP,
TCP, or ICMPv6. To achieve low-power operation, Con-
tiki provides a set of radio duty cycling mechanisms includ-
ing variants of Low-Power Listening (LPL) and Low-Power
Probing (LPP).
2.2 Routing with ContikiRPL
ContikiRPL is the main IPv6 routing protocol in Con-
tiki. RPL is a distance-vector protocol for IPv6 networks
comprising low-power devices connected by lossy links. The
protocol maintains Directed Acyclic Graph (DAG) topolo-
gies toward root nodes. The topologies are built proactively
according to an objective function. Since RPL must be able
to operate in multiple types of deployments and link-layers,
it is ﬂexible regarding the rules to form topologies and to se-
lect next-hops for individual packets. Routing decisions are
taken by the objective function, which essentially speciﬁes
the constraints and metrics used in a network.
The chief goal of the ContikiRPL design is to provide a
versatile yet simple programming interface that can be used
by researchers to study objective functions. While the logic
of how to exchange routing control messages has largely been
speciﬁed in Internet drafts published by the IETF, objective
functions are a relatively unexplored area that requires input
from the research community.
2.3 Network Simulator
The Cooja/MSPsim network simulation provides cycle-
accurate simulation of the individual devices, as well as bit-
level accurate simulation of the devices’ radio transceivers.
This is important since it makes it possible to run the exact
same binaries in the simulator as on actual hardware. The
simulator provides a set of radio models for simulating at
diﬀerent levels of detail.
The simulator provides a set of visualizer modules. Fig-
ure 2 shows a network visualizer and a timeline visualizer.
The network visualizer shows the paths selected by the rout-
ing protocol, as well as routing statistics for each node.
The timeline shows when the devices’ radio transceivers are
turned on or oﬀ, allowing the user to visually inspect the low-
power operation of the system, and the implications thereof
such as collisions.
3. DEMONSTRATION
We demonstrate four parts of our system: the simulation
environment and its visualizers, the low-power IPv6 oper-
Figure 2: Screenshot of the Cooja/MSPsim low-
power network simulator showing the network and
timeline visualizers.
ation in the Contiki operating system, the way by which
new routing objective functions are added to ContikiRPL,
and how the resulting system can be directly uploaded to a
remote testbed consisting of Tmote Sky motes.
The demo shows the impact of choosing the routing ob-
jective function. One objective function uses a simple hop
count and one uses expected transmissions (ETX) to do the
forwarding decision. By running the two objective functions
in the simulator and in a remote testbed, the simulation re-
sults and experimental measurements show that the simple
hop-count objective function results in a shorter path length
at the expense of higher power consumption.
4. ACKNOWLEDGMENTS
This work was partly ﬁnanced by SSF, the Swedish Foun-
dation for Strategic Research, through the Promos project.
5. REFERENCES
[1] M. Durvy, J. Abeill´e, P. Wetterwald, C. O’Flynn,
B. Leverett, E. Gnoske, M. Vidales, G. Mulligan,
N. Tsiftes, N. Finne, and A. Dunkels. Making Sensor
Networks IPv6 Ready. In Proceedings of ACM SenSys,
Raleigh, North Carolina, USA, November 2008.
[2] J. Hui and D. Culler. IP is Dead, Long Live IP for
Wireless Sensor Networks. In Proceedings of ACM
SenSys, Raleigh, North Carolina, USA, November 2008.
[3] J.P. Vasseur and A. Dunkels. Interconnecting Smart
Objects with IP: The Next Internet. Morgan Kaufmann,
2010.
[4] T. Winter (Ed.), P. Thubert (Ed.), and RPL Author
Team. RPL: IPv6 Routing Protocol for Low power and
Lossy Networks. Internet Draft draft-ietf-roll-rpl-09,
work in progress.
480