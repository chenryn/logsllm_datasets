### 编程语言在网络中的应用

许多编程语言专注于网络控制平面的开发 [39, 62]。然而，Domino 则侧重于数据平面，这需要不同的编程结构和编译技术。

#### 针对数据平面的领域特定语言 (DSLs)

- **Click [46]**：使用 C++ 进行软件路由器上的数据包处理。
- **packetC [36]**、**Intel 的自动分区 C 编译器 [33]** 和 **Microengine C [12]**：针对网络处理器。
- **Domino**：其 C 语言风格的语法和顺序语义受到了上述 DSLs 的启发。但由于 Domino 面向的是线速交换机，因此更加受限。例如，由于编译后的程序必须在线速下运行，Domino 禁止循环；由于 Banzai 没有共享状态，Domino 不包含同步构造。

**Jose 等人 [43]** 专注于将 P4 程序编译为可编程数据平面（如 RMT 和 FlexPipe 架构）。他们的工作仅限于编译无状态的数据平面任务（如转发和路由），而 Domino 则能够处理有状态的数据平面算法。

### 有状态数据包处理的抽象

- **SNAP [24]**：通过网络事务（一个将整个网络视为单个交换机的原子代码块）来编程有状态的数据平面算法。然后使用编译器将这些网络事务转换为每个交换机上的规则。SNAP 可以利用 Domino 来编译这些本地交换机规则到交换机的流水线中。
- **FAST [50]**：提供交换机支持和状态机的软件抽象。Banzai 的 atoms 支持更通用的有状态处理，从而实现更广泛的数据平面算法。

### 讨论

Packet 事务为在新兴的可编程线速交换芯片上运行原本只适用于软件路由器的算法提供了途径。然而，在 Packet 事务能够投入生产使用之前，仍有许多工作需要完成。

### 结论

本文介绍了 Domino，一种 C 语言风格的命令式语言，允许程序员使用 Packet 事务编写数据包处理代码。这些事务是顺序且与其他代码块隔离的原子代码块。Domino 编译器将这些 Packet 事务编译为 Banzai 机器模型的硬件配置，后者基于可编程线速交换架构 [13, 19, 3]。我们的结果表明，只要算法能够在线速下运行，就可以同时拥有熟悉的编程模型带来的便利性和线速交换机的性能。数据包处理语言仍处于起步阶段，我们希望这些结果能促进高性能数据包处理硬件的编程抽象的发展。

### 致谢

感谢我们的指导者 Bruce Maggs、匿名 SIGCOMM 审稿人、Amy Ousterhout 和 Pratiksha Thaker 对本文提出的宝贵建议。本研究部分由 NSF 授予 CNS-1563826 和 CNS-1563788 资助。我们还要感谢 MIT 无线网络与移动计算中心（Wireless@MIT）的工业合作伙伴的支持。

### 参考文献

[略]

通过这种方式，文本变得更加清晰、连贯和专业。希望这对你有所帮助！