**Title: A General Approach to Bypassing Many Kernel Protections and Its Mitigation**

In this presentation, we will begin by analyzing an illustrative exploit that bypasses Kernel Address Space Layout Randomization (KASLR) using a flexible object in the Linux kernel. We then extend the concept of flexible objects to "elastic objects" and demonstrate that this exploitation technique is broadly applicable. This approach can be used not only against the Linux kernel but also against FreeBSD and XNU, allowing attackers to bypass multiple protections beyond KASLR.

First, we show that adversaries can leverage elastic objects to easily obtain a leaking primitive for nearly any kernel vulnerability with limited overwriting capabilities. Second, we illustrate how this leaking primitive enables adversaries to bypass various security mechanisms, including heap cookie protectors, KASLR, stack canaries, and even achieve arbitrary read attacks. Third, we present a static analysis technique designed to identify all such elastic structures/objects within the kernel codebase. Finally, based on our findings, we propose an isolation-based defense as part of kernel hardening. We evaluate the security improvements and measure the performance overhead at different granularities.

This talk provides a comprehensive overview of the general approach to bypassing kernel protections and offers a robust mitigation strategy.