You can specify only a range of lines to be affected in the substitution.
Specifying 1, 10 as the range limits substitution to only lines 1 – 10.
:1,10s/I/We/g
Example 4. Substitution of a text with another text by visual
selection of lines
You can control the substitution range by visually selecting specific lines.
Press CTRL + V in command mode, use navigation keys to select the part of
the file you want to be used as range. Press ‘:’ which will automatically
change to :’
Once it automatically changes to :’ , you can start typing the rest of the
command as shown below.
:'s/helo/hello/g
Example 5. Substitution of a text with another text in only the next
N number of lines
Specifying a count argument at the end of a substitution specifies that the
substitution should be applied over the next {count} lines. For example, to do
a substitution over the next 4 lines from the current line, you would enter:
:s/helo/hello/g 4
131
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Example 6. Substitute only whole words and not partial matches
Let us assume that you want to change only the whole word ‘his’ to ‘her’ in
the original text mentioned below. If you do the standard substitution, apart
from changing his to her, it will also change This to Ther as shown below.
Standard Substitution:
Original Text: This is his idea
:s/his/her/g
Translated Text: Ther is her idea
Whole Word Substitution:
Original Text: This is his idea
:s/\/her/
Translated Text: This is her idea
Note: You should enclose the word with  , which will force the
substitution to search only for the full word and not any partial match.
Note 2: novices sometimes use spaces instead of , not realizing this
won't match words at the beginnings and ends of lines or words with
proximate punctuation.
Example 7. Substitute either word1 or word2 with a new word using
a regular expression
In the following example, Vim will replace any occurrences of either good or
nice with awesome.
132
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Original Text: Linux is good. Life is nice.
:%s/\(good\|nice\)/awesome/g
Translated Text: Linux is awesome. Life is awesome.
You can also do full-word substitution by specifying regular expression. The
following example does the substitution of hey or hi with hai. Please note
that this does not do any substitution within larger words such as ‘they’,
‘this’.
:%s/\/hai/g
• \< – word boundary.
• \| – “logical or” (in this case hey or hi)
Example 8. Interactive Find and Replace in Vim Editor
You can perform an interactive search and replace using the ‘c’ flag of the
substitute command, which specifies to ask for confirmation to do
substitution or not, as explained below. In this example, Vim editor will do a
global search for the word ‘awesome’ and replace it with ‘wonderful’.
However, it will do the replacement only based on your input as explained
below.
:%s/awesome/wonderful/gc
replace with wonderful (y/n/a/q/l/^E/^Y)?
• y – Will replace the current highlighted word. After replacing it will
highlight the next word that matched the search pattern
133
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
• n – Will not replace the current highlighted word. But it will
automatically highlight the next word that matched the search
pattern
• a – Will substitute all of the remaining matches without further
prompting.
• l – This will replace only the current highlighted word and terminate
the find and replace effort.
Example 9. Prepending every line with its line number
When the replacement string starts with ‘\=’, it should be evaluated as an
expression. Using the ‘line’ function we can get the current line number.
:%s/^/\=line(".") . ". "/g
Note: This is different from “:set number” which does not write the line
numbers into the file. When you use this substitution you are making these
line numbers part of the actual content of the file.
Example 10. Substituting a special character with an equivalent
value.
Substituting the ~ character with the value of the $HOME variable.
Original Text: Current file path is ~/test/
:%s!\~!\= expand($HOME)!g
Translated Text: Current file path is
/home/ramesh/test/
Notes:
• You can use the expand function to expand any available predefined
or user defined variables.
134
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
• We use ! instead of / above because the value of $HOME will contain
at least one / which will confuse the substitution. There are many
characters that can be used instead of /
Example 11. Alter the sequence number in a numbered list when
inserting a new item
Assume that you have a numbered list like the following inside a text file. In
this example, let us assume that you want to add a new line after Article 2.
For this, you should change the number of all other articles accordingly.
vi / vim tips & tricks series
Article 1: Vi and Vim Editor: 3 Steps To Enable Thesaurus Option
Article 2: Vim Autocommand: 3 Steps to Add Custom Header To Your File
Article 3: 5 Awesome Examples For Automatic Word Completion Using CTRL-X
Article 4: Vi and Vim Macro Tutorial: How To Record and Play
Article 5: Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin
Article 6: How To Add Bookmarks Inside Vim Editor
Article 7: Make Vim as Your Bash-IDE Using bash-support Plugin
Article 8: 3 Powerful Musketeers Of Vim Editor ? Macro, Mark and Map
Article 9: 8 Essential Vim Editor Navigation Fundamentals
Article 10: Vim Editor: How to Correct Spelling Mistakes Automatically
Article 11: Transfer the Power of Vim Editor to Thunderbird for Email
Article 12: Convert Vim Editor to Beautiful Source Code Browser
3rd Article “Make Vim as Your Perl IDE Using perl-support.vim Plugin” got
missed. So when you want to add it, then you want to change “Article 3″ to
“Article 4″, “Article 4″ to “Article 5″, up to “Article 12″ to “Article 13″.
This can be achieved by the following Vim substitution command.
:4,$s/\d\+/\=submatch(0) + 1/
• Range: 4,$ – From the 4th line through the last line. (the 4 is
manually determined)
• Pattern to Search – \d\+ – A string of digits
135
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
• Pattern to Replace – \=submatch(0) + 1 – gets the matched pattern
and adds 1 to it.
• Flag – as there is no flag, by default it substitutes only the first
occurrence in each line.
After executing the substitute statement the file will look like this; then you
can add the 3rd Article.
vi / vim tips & tricks series
Article 1: Vi and Vim Editor: 3 Steps To Enable Thesaurus Option
Article 2: Vim Autocommand: 3 Steps to Add Custom Header To Your File
Article 4: 5 Awesome Examples For Automatic Word Completion Using CTRL-X
Article 5: Vi and Vim Macro Tutorial: How To Record and Play
Article 6: Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin
Article 7: How To Add Bookmarks Inside Vim Editor
Article 8: Make Vim as Your Bash-IDE Using bash-support Plugin
Article 9: 3 Powerful Musketeers Of Vim Editor ? Macro, Mark and Map
Article 10: 8 Essential Vim Editor Navigation Fundamentals
Article 11: Vim Editor: How to Correct Spelling Mistakes Automatically
Article 12: Transfer the Power of Vim Editor to Thunderbird for Email
Article 13: Convert Vim Editor to Beautiful Source Code Browser
Example 12. Capitalizing the first character of every sentence.
When formatting a document, properly capitalizing sentences is quite useful.
This can be done easily with the following substitution.
:%s/\.\s*\w/\=toupper(submatch(0))/g
• \.\s*\w – Search Pattern – a literal . ( period ) followed by zero or
more spaces, then a word character.
• toupper – converts the given text to upper case.
• submatch(0) – returns the matched pattern.
Text before substitution:
Lot of vi/vim tips and tricks are available at thegeekstuff.com. reading
136
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
these articles will make you very productive. following activities can be
done very easily using vim editor.
a. source code walk through,
b. record and play command executions,
c. making the vim editor as ide for several languages,
d. and several other @ vi/vim tips & tricks.
Text after substitution: (changes in bold)
Lot of vi/vim tips and tricks are available at thegeekstuff.com. Reading
these articles will make you very productive. Following activities can be
done very easily using vim editor.
a. Source code walk through,
b. Record and play command executions,
c. Making the vim editor as ide for several languages,
d. And several other @ vi/vim tips & tricks.
Hack 91. Search across Multiple Files using vimgrep
You can search for a search term across multiple files using vimgrep
command. You can execute vimgrep from inside the Vim editor as shown
below.
The following example will search for the search term Jason inside all files
ending in .txt in the current directory.
:vimgrep jason *.txt
By default vimgrep will jump to the first file that contains a match. Use :cn
to jump to the next match.
137
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Key Description
:vimgrep search- Search for search-term in multiple files
term *
:cn Jump to the next match of the vimgrep search
:cN Jump to the previous match of the vimgrep search
:clist View all the files that matched the vimgrep search
keyword without jumping to the individual files.
:cc number Jump to the specific search number. Pick the
search number based on the :clist output
You can also do recursive searching using vimgrep. Use ** for recursive
searching as shown below.
For example, the following will search for the search term table in all *.html
files under the current directory and all subdirectories.
:vimgrep table **/*.html
Hack 92. Highlight Search Results with Color
When you search for a keyword, you may want to automatically highlight all
the matches. Use :hlsearch option for this.
138
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
To enable search result highlight
:set hlsearch
After this when you search for a keyword using /keyword, all the matches of
the keyword will automatically be highlighted in the current file.
Key Description
:set hlsearch Enable search result highlighting
Note: Add this to ~/.vimrc to make it permanent
:set nohlsearch Disable search result highlighting
:nohlsearch Clear the active search highlights
Hack 93. Vim Incremental Search
Once you get used to incremental search, you cannot live without it in Vim
editor.
To enable Incremental search,
:set incsearch
Incremental search will start searching for the keyword as soon as you start
typing.
139
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
To disable incremental search,
:set noincsearch
Hack 94. The Power of :match
Use :match to display all instances of a particular keyword in a certain color
scheme. For example, if you want to highlight the keyword Error in red, use
the following
:match ErrorMsg /Error/
In the above example:
• :match – the match command
• ErrorMsg – Predefined color scheme (red) available in the Vim.
• /Error/ - search pattern defined by user
The following are few predefined color schemes available in Vim:
• ErrorMsg
• WarningMsg
• ModeMsg
• MoreMsg
140
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
You can create your own Color scheme as shown below.
:highlight custom-color-scheme ctermbg=COLOR
ctermfg=COLOR
Once the custom color scheme is created, you can use it as shown below.
:match custom-color-scheme /\cPATTERN/
141
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Chapter 14: Automatic Completion
Hack 95. Automatic Word Completion
You can perform automatic word completion in Vim using CTRL-X in insert or
append mode. By typing the first few characters of a word you can get the
whole word either from a dictionary, or a thesaurus, or even from the words
that are already present within the file that you are editing.
You can use the following Vim shortcut keys to choose between the existing
expansions for a given word.
Key Description
CTRL-X CTRL-N Word completion – forward
CTRL-X CTRL-P Word completion – backward
142
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Fig: Keyword completion in Vi / Vim using CTRL-X CTRL-N
Hack 96. Automatic Line Completion
If you want to insert a copy of an existing line, type the first few
words/characters of the line, and then press the Vim shortcut keys “CTRL-X
CTRL-L”, which will display all the lines matching that pattern.
CTRL-X CTRL-L
143
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Fig: Vim Whole line completion using CTRL-X CTRL-L
Hack 97. Automatic Filename Completion
Insert the name of any file that the current users can see anywhere on the
Linux system using the short cut key “CTRL-X CTRL-F”.
CTRL-X CTRL-F
144
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Fig: Vim File name completion using CTRL-X CTRL-F
Hack 98. Dictionary Completion
Enable the dictionary in Vim by adding the following line to ~/.vimrc.
$ cat ~/.vimrc
set dictionary+=/usr/share/dict/words
This is a great feature when you stumble for the correct spelling for a word
that you are typing. After typing the first few characters, Press the Vim short
cut key CTRL-X CTRL-K to display the matching dictionary words.
145
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
CTRL-X CTRL-K
Fig: Vim Dictionary word completion using CTRL-X CTRL-K
Hack 99. Thesaurus Word Completion
This hack explains how to use Vim effectively by enabling a thesaurus in three
steps.
Step 1: Define a Thesaurus file
Any number of synonyms can be listed together on a single line using either
spaces to separate the words or comma delimiting if some of the synonyms
are multi-word phrases. For example, you can create your own thesaurus file
as shown below for the word “important”.
146
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
$ vim /home/jsmith/mythesaurus.txt
important,valuable,substantial,significant
Step 2: Specify Thesaurus File Location in ~/.vimrc
Add the following line to .vimrc specifying the location of thesaurus file.
$ vim ~/.vimrc
set thesaurus+=/home/jsmith/mythesaurus.txt
Step 3: Use Thesaurus While Editing Document Using CTRL-X CTRL-T
From vim, if you want to use an alternative word, press CTRL x + CTRL t in
the insert mode.
For example, when you’ve typed the word “important”, press CTRL-X and
CTRL-T, which will show a popup with the alternate words “valuable”,
“substantial” and “significant” as shown below from your
/home/jsmith/mythesaurus.txt file.
CTRL-X CTRL-T
Fig: Launch Thesaurus from Vim using CTRL-X and CTRL-T
147
Buyer: xiujuan lu (PI:EMAIL)
Transaction ID: 85W16630AD8515549
Vim 101 Hacks www.thegeekstuff.com
Download and Use a Pre-defined Thesaurus
Instead of defining your own custom thesaurus, download and use the pre-
defined famous moby thesaurus as shown below.
$ wget
http://www.gutenberg.org/dirs/etext02/mthes10.zip
$ unzip mthes10.zip
Archive: mthes10.zip
inflating: aaREADME.txt
inflating: roget13a.txt