Julia's ease of use and speed advantages over other languages makes it a very
good candidate for general purpose programming in addition to scientific
analysis. There have been a few interesting issues that have come up that
indicate that a deeper exploration of Julia in a potentially untrusted/multi-
user environment is warranted ( _cf._ #9147 and the recent discussion on
julia-users about `include_string()` here:
https://groups.google.com/d/msg/julia-users/fcB3z2shu1M/5gojVAbeUk8J).
I think several questions need to be answered prior to engaging in an
exploration of Julian security:
  1. Is Julia explicitly designed to be used in a multi-user / untrusted environment? Alternately, is there any design goal for Julia that would preclude its use in such environments?
  2. Are there known issues with Julia that would expose data or systems to inadvertent code execution, disclosure, or alteration of data?
  3. Has data integrity and confidentiality in Julia been the subject of prior analysis?
  4. As a followon to 2), what mechanisms exist in Julia that could be considered security-centric?
There are likely other questions that need addressing as well. Is there
interest in examining this topic?