`
**Current behavior**  
ng build
ng build --aot
ng build --prod
ng build --prod --aot
can not build successfully;
**Expected behavior**  
i can ng serve to running in local;
but can't build .
And i have updated everything use 'ncu -u ' & 'npm install'
**What is the motivation / use case for changing the behavior?**  
lazy load route;
**Please tell us about your environment:**  
I use angular-cli build my project .
When i 'ng serve', it often comes out error:  
'ERROR in Error encountered resolving symbol values statically. Reference to a
local (non-exported) symbol 'Routes'. Consider exporting the symbol (position
10:7 in the original .ts file), resolving symbol RoutingModule in
projectname/src/app/app-routing.module.ts  
';
My code is about the same in the tutorial :
http://codingthesmartway.com/angular-2-routing-with-modules/
as below:
import { NgModule } from '@angular/core';  
import { Routes, RouterModule } from '@angular/router';  
import { FirstComponent } from './first.component';  
import { SecondComponent } from './second.component';  
import { ThirdComponent } from './third.component';
const routes: Routes = [  
{path: '', pathMatch: 'full', redirectTo: 'first'}  
{path: 'first', component: FirstComponent},  
{path: 'second', component: SecondComponent},  
{path: 'third', component: ThirdComponent},  
];
@NgModule({  
imports: [RouterModule.forRoot(routes)],  
exports: [RouterModule]  
})  
export class AppRoutingModule {}
export const routingComponents = [FirstComponent, SecondComponent,
ThirdComponent];
My code:
**start**  
import { NgModule } from '@angular/core';  
import { Routes, RouterModule } from '@angular/router';  
import { HomeComponent } from './home/home.component';  
import { LoginComponent } from './login/login.component';  
import { AuditComponent } from './audit/audit.component';  
import { UserComponent } from './user/user.component';  
import { HouseSourceComponent } from './house-source/house-source.component';
declare var require: any;
export const routes : Routes = [  
{  
path: '',  
redirectTo: 'home',  
pathMatch : 'full'  
},  
{  
path: 'home',  
component : HomeComponent  
},
{  
path: 'login',  
component : LoginComponent  
},
{  
path: 'about',  
loadChildren : () => new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./about/about.module').AboutModule);  
})  
})  
},
{  
path: 'houseSource',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./house-source/house-source.module').HouseSourceModule);  
})  
})  
},  
{  
path: 'user',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./user/user.module').UserModule);  
})  
})  
},  
{  
path: 'audit',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./audit/audit.module').AuditModule);  
})  
})  
},  
{  
path: 'houseSourceAudit',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./house-source-audit/house-source-
audit.module').HouseSourceAuditModule);  
})  
})  
},{  
path: 'userAudit',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./user-audit/user-audit.module').UserAuditModule);  
})  
})  
},{  
path: 'userAuditDetail/:id',  
loadChildren : () =>  
new Promise(resolve => {  
(require as any).ensure([],(require : any) => {  
resolve(require('./user-audit-detail/user-audit-
detail.module').UserAuditDetailModule);  
})  
})  
}  
]  
@NgModule({  
imports: [RouterModule.forRoot(routes)],  
exports: [RouterModule],  
providers: []  
})  
export class RoutingModule {}
_**end**_ **
  * **Angular version:** @angular/cli@1.0.0-rc.0
  * **Language:** [all | TypeScript :@2.2.1
  * **Node (for AoT issues):** `node --version` =
├─┬ @angular/cli@1.0.0-rc.0  
│ ├─┬ @angular/tsc-wrapped@0.5.2  
│ │ └── tsickle@0.2.6  
│ ├── @ngtools/json-schema@1.0.5  
│ ├─┬ @ngtools/PI:EMAIL  
│ │ ├── enhanced-resolve@3.1.0  
│ │ └─┬ magic-string@0.19.0  
│ │ └── vlq@0.2.1  
│ ├─┬ autoprefixer@6.7.5  
│ │ ├─┬ browserslist@1.7.5  
│ │ │ └── electron-to-chromium@1.2.4  
│ │ ├── caniuse-db@1.0.30000628  
│ │ ├── normalize-range@0.1.2  
│ │ ├── num2fraction@1.2.2  
│ │ ├── PI:EMAIL  
│ │ └── postcss-value-parser@3.3.0  
│ ├─┬ chalk@1.1.3  
│ │ ├── ansi-styles@2.2.1  
│ │ ├── escape-string-regexp@1.0.5  
│ │ ├─┬ has-ansi@2.0.0  
│ │ │ └── ansi-regex@2.1.1  
│ │ ├── strip-ansi@3.0.1  
│ │ └── supports-color@2.0.0  
│ ├─┬ common-tags@1.4.0  
│ │ └─┬ babel-runtime@6.23.0  
│ │ └── regenerator-runtime@0.10.1  
│ ├─┬ css-loader@0.26.2  
│ │ ├── loader-utils@1.0.2  
│ │ ├── lodash.camelcase@4.3.0  
│ │ ├── postcss-modules-extract-imports@1.0.1  
│ │ ├─┬ postcss-modules-local-by-default@1.1.1  
│ │ │ └── css-selector-tokenizer@0.6.0  
│ │ ├─┬ postcss-modules-scope@1.0.2  
│ │ │ └── css-selector-tokenizer@0.6.0  
│ │ ├─┬ postcss-modules-values@1.2.2  
│ │ │ └── icss-replace-symbols@1.0.2  
│ │ └── source-list-map@0.1.8  
│ ├─┬ cssnano@3.10.0  
│ │ ├── decamelize@1.2.0  
│ │ ├── defined@1.0.0  
│ │ ├─┬ has@1.0.1  
│ │ │ └── function-bind@1.1.0  
│ │ ├─┬ postcss-calc@5.3.1  
│ │ │ ├── postcss-message-helpers@2.0.0  
│ │ │ └─┬ reduce-css-calc@1.3.0  
│ │ │ ├── PI:EMAIL  
│ │ │ └── reduce-function-call@1.0.2  
│ │ ├─┬ postcss-colormin@2.2.2  
│ │ │ └─┬ colormin@1.1.2  
│ │ │ ├─┬ color@0.11.4  
│ │ │ │ ├── clone@1.0.2  
│ │ │ │ ├─┬ color-convert@1.9.0  
│ │ │ │ │ └── color-name@1.1.1  
│ │ │ │ └── color-string@0.3.0  
│ │ │ └── css-color-names@0.0.4  
│ │ ├── postcss-convert-values@2.6.1  
│ │ ├── postcss-discard-comments@2.0.4  
│ │ ├── postcss-discard-duplicates@2.1.0  
│ │ ├── postcss-discard-empty@2.1.0  
│ │ ├── postcss-discard-overridden@0.1.1  
│ │ ├─┬ postcss-discard-unused@2.2.3  
│ │ │ └── uniqs@2.0.0  
│ │ ├─┬ postcss-filter-plugins@2.0.2  
│ │ │ └─┬ uniqid@4.1.1  
│ │ │ └── macaddress@0.2.8  
│ │ ├── postcss-merge-idents@2.1.7  
│ │ ├── postcss-merge-longhand@2.0.2  
│ │ ├─┬ postcss-merge-rules@2.1.2  
│ │ │ ├─┬ caniuse-api@1.5.3  
│ │ │ │ ├── lodash.memoize@4.1.2  
│ │ │ │ └── lodash.uniq@4.5.0  
│ │ │ ├─┬ postcss-selector-parser@2.2.3  