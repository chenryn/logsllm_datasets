# Software Architecture
## [Domain-Driven Design](domain_driven_design.md)

### Caution: Migrating Legacy Code

When you become enamored with Domain-Driven Design (DDD), it may be tempting to migrate all of your existing code to this new architecture. While this is an excellent way to gain hands-on experience with DDD, it can also be a time-consuming process.

For example, in my most recent refactoring effort, documented in [this pull request](https://github.com/lyz-code/clinv/pull/40), I had to modify 60% of the codebase. However, the benefits were significant: the total lines of code were reduced by 25%.

**Key Takeaways:**
- **Learning Opportunity:** Migrating old code to DDD provides valuable practical experience.
- **Time Investment:** Be prepared for a substantial time commitment, as a significant portion of the code may need to be refactored.
- **Code Efficiency:** The migration can lead to more efficient and maintainable code, as evidenced by the reduction in the number of lines of code.