PostgreSQL 10的社区版本推出了quorum based的同步流式复制，例如有1主2从，用户配置为(" ANY 1 (*) ")，表示用户提交事务时，主库会等待事务结束的WAL RECORD复制到1个备节点的ACK，然后才告诉客户端事务提交成功。      
这就保证了用户收到ACK的事务，一定有两份WAL。当主库挂掉时，数据是0丢失的。       
详见代码 src/backend/replication/syncrep.c     
PG 10 的流复制最佳实践请参考    
[《PostgreSQL 10 流式物理、逻辑主从 最佳实践》](20170711_01.md)    
PostgreSQL 10通过3节点，已经实现了数据0丢失的高可靠。对于高可用，只要加一个HA服务即可，HA服务的主要目的是正确的选出新主，让其他节点Follower新主，老主或其他节点Follower新主前的一些rewind调度等。  
HA这部分就可以使用Raft协议对接。      
## 总结        
算法以正确性、高效性、简洁性作为主要设计目标。        
虽然这些都是很有价值的目标，但这些目标都不会达成直到开发者写出一个可用的实现。        
所以我们相信可理解性同样重要。        
Raft 算法是 2013 年发表的，大家在参考[5]上面可以看到有多少个不同语言开源的实现库了，这就是算法可理解性的重要性。        
阿里云RDS金融数据库(三节点版)以Raft协议为基础，将重做日志的复制、选主与Raft进行结合，打造了一个可以同时满足可用性、可靠性，并保持高性能的金融级的数据库。       
## 参考        
[1]. LESLIE LAMPORT, ROBERT SHOSTAK, MARSHALL PEASE. [The Byzantine General Problem](http://research.microsoft.com/en-us/um/people/lamport/pubs/byz.pdf). 1982        
[2]. Leslie Lamport. [The Part-Time Parliament](http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf). 1998        
[3]. Leslie Lamport. [Paxos Made Simple](http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-simple.pdf). 2001        
[4]. Diego Ongaro and John Ousterhout. [Raft Paper](https://ramcloud.stanford.edu/raft.pdf). 2013        
[5]. Raft Website. [The Raft Consensus Algorithm](https://raft.github.io/#implementations)        
[6]. Raft Demo. [Raft Animate Demo](http://thesecretlivesofdata.com/raft/)        
[7]. [Raft 为什么是更易理解的分布式一致性算法](http://www.cnblogs.com/mindwind/p/5231986.html)      
## 系列文章        
[《阿里云RDS金融数据库(三节点版) - 背景篇》](../201707/20170709_02.md)        
[《阿里云RDS金融数据库(三节点版) - 理论篇》](../201707/20170710_01.md)        
[《阿里云RDS金融数据库(三节点版) - 性能篇》](../201707/20170713_01.md)        
[《阿里云RDS金融数据库(三节点版) - 案例篇》](../201707/20170723_01.md)        
## 阿里云RDS金融数据库(三节点版)      
[阿里云RDS金融数据库 - MySQL三节点版](https://help.aliyun.com/document_detail/51701.htm)          
阿里云RDS金融数据库 - PostgreSQL三节点版(敬请期待)          
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")