##### Description of the problem
Every face in a `Geometry` has a `materialIndex`. When Three converts from a
Geometry to a BufferGeometry...
    var bufferGeometry = THREE.BufferGeometry.new().fromGeometry(geometry);
...there's an intermediary step where a DirectGeometry is used...
    fromGeometry: function ( geometry ) {
        geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );
Note that a `DirectGeometry` defines an `indices` array, then does nothing
with it.
So it's not surprising when BufferGeometry checks the intermediary
`directGeometry.indices.length`, it won't ever be populated.
When the BufferGeometry comes out the other end, it has no indices.
`bufferGeometry.getIndex()` is null.
It looks like DirectGeometry's ability to handle indices was removed two years
ago.
Here's a CodePen demonstrating the problem. Check the logs. The merged
geometry should have indices returned, but it doesn't.
https://codepen.io/andrewray/pen/gRyrzR?editors=0010
##### Three.js version
  * Dev
  * r85
##### Browser
  * All of them
##### OS
  * All of them