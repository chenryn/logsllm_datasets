# Tenda AX12 路由器设备分析（三）之OpenWrt 浅析
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x01 前言
任何系统的启动原理和流程都是相关安全人员需要了解的，因为只有了解了系统的启动流程和启动机制，才会更高的来研究整体的安全性，本文章打算来介绍一下Tenda
AX 12 路由器的在启动流程，设备的系统是开源的 OpenWrt 二次开发出来的，系统中提供http服务的组件并不是OpenWrt
的uhttpd，而是goahead 开源框架二次开发而来的httpd，因此我还打算从httpd 的角度来介绍设备openwrt
是符合启动和调用httpd组件的。
本文是个人在对Tenda AX12设备分析和研究，班门弄斧，可能讲的不够全面，如有不对，望及时指正，多多包涵。
## 0x02 启动流程
iot 设备的固件的典型结构由 引导加载程序bootloader、参数、内核Kernel、文件系统squashfs，应用程序组成。
设备在上电之后，处理器首先会加载固化在flash/ROM中的代码到RAM中执行，而这段代码就是Bootloader（U-boot），在Tenda AX12
上电的时候，设备UART串口输出的log信息中，我们可以看到U-boot 的版本和发布日期，接着U-boot 设置和初始化RAM，
进行基本的硬件初始化；初始化串口端口，这样启动的log信息可以通过串口输出；对CPU处理器进行检测；设置和初始化内核Kernel 启动参数
做完这些之后，U-boot 会加载内核Kernel 从flash 到RAM中，U-boot 将退出舞台，后面就交给Kernel 。
U-Boot从启动设备上面读取、分析环境变量获得kernel和rootfs存储位置，以及所需的kernel command line；  
自动检测系统RAM和eMMC/Nand Flash容量和参数；  
设置以太网口MAC地址，并配置好硬件准备加载Linux kernel；  
加载Linux kernel到RAM，至此系统控制权则转移到kernel来处理；  
设备的UART log信息刚启动的部分信息如下所示：
    U-Boot 2016.07-INTEL-v-3.1.177 (Nov 25 2020 - 09:48:15 +0000)
    interAptiv
    cps cpu/ddr run in 800/666 Mhz
    DRAM:  224 MiB
    manuf ef, jedec 4018, ext_jedec 0000
    SF: Detected W25Q128BV with page size 256 Bytes, erase size 64 KiB, total 16 MiB
    *** Warning - Tenda Environment, using default environment
    env size:8187, crc:d89b57c5 need d89b57c5
    In:    serial
    Out:   serial
    Err:   serial
    Net:   multi type
    Internal phy firmware version: 0x8548
    GRX500-Switch
    Type run flash_nfs to mount root filesystem over NFS
    Hit ESC to stop autoboot:  0 
    Wait for upgrade... use GRX500-Switch
    tenda upgrade timeout.
    manuf ef, jedec 4018, ext_jedec 0000
    SF: Detected W25Q128BV with page size 256 Bytes, erase size 64 KiB, total 16 MiB
    device 0 offset 0x100000, size 0x200000
    SF: 2097152 bytes @ 0x100000 Read: OK
    ## Booting kernel from Legacy Image at 80800000 ...
       Image Name:   MIPS UGW Linux-4.9.206
       Created:      2020-11-18   5:39:29 UTC
       Image Type:   MIPS Linux Kernel Image (lzma compressed)
       Data Size:    2079952 Bytes = 2 MiB
       Load Address: a0020000
       Entry Point:  a0020000
       Verifying Checksum ... OK
       Uncompressing Kernel Image ... OK
    [    0.000000] Linux version 4.9.206 (root@ubt1-virtual-machine) (gcc version 8.3.0 (OpenWrt GCC 8.3.0 v19.07.1_intel) ) #0 SMP Fri Nov 13 09:14:24 UTC 2020
    [    0.000000] SoC: GRX500 rev 1.2
    [    0.000000] CPU0 revision is: 0001a120 (MIPS interAptiv (multi))
    [    0.000000] Enhanced Virtual Addressing (EVA 1GB) activated
    [    0.000000] MIPS: machine is EASY350 ANYWAN (GRX350) Main model
    [    0.000000] Coherence Manager IOCU detected
    [    0.000000] Hardware DMA cache coherency disabled
    [    0.000000] earlycon: lantiq0 at MMIO 0x16600000 (options '')
    [    0.000000] bootconsole [lantiq0] enabled
    [    0.000000] User-defined physical RAM map:
    [    0.000000]  memory: 08000000 @ 20000000 (usable)
    [    0.000000] Determined physical RAM map:
    [    0.000000]  memory: 08000000 @ 20000000 (usable)
    [    0.000000]  memory: 00007fa4 @ 206d5450 (reserved)
    [    0.000000] Initrd not found or empty - disabling initrd
    [    0.000000] cma: Reserved 32 MiB at 0x25c00000
    [    0.000000] SMPCMP: CPU0: cmp_smp_setup
    [    0.000000] VPE topology {2,2} total 4
    [    0.000000] Detected 3 available secondary CPU(s)
    [    0.000000] Primary instruction cache 32kB, VIPT, 4-way, linesize 32 bytes.
    [    0.000000] Primary data cache 32kB, 4-way, PIPT, no aliases, linesize 32 bytes
    [    0.000000] MIPS secondary cache 256kB, 8-way, linesize 32 bytes.
    [    0.000000] Zone ranges:
    [    0.000000]   DMA      [mem 0x0000000020000000-0x0000000027ffffff]
    [    0.000000]   Normal   empty
    [    0.000000] Movable zone start for each node
    [    0.000000] Early memory node ranges
    [    0.000000]   node   0: [mem 0x0000000020000000-0x0000000027ffffff]
    [    0.000000] Initmem setup node 0 [mem 0x0000000020000000-0x0000000027ffffff]
    [    0.000000] percpu: Embedded 12 pages/cpu s17488 r8192 d23472 u49152
    [    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 32480
    [    0.000000] Kernel command line: earlycon=lantiq,0x16600000 nr_cpus=4 nocoherentio clk_ignore_unused root=/dev/mtdblock6 rw rootfstype=squashfs do_overlay console=ttyLTQ0,115200 ethaddr=CC:2D:21:EE:D9:F0 panic=1 mtdparts=spi32766.1:512k(uboot),128k(ubootconfigA),128k(ubootconfigB),256k(calibration),2m(kernel),12m(rootfs),-(res) init=/etc/preinit active_bank= update_chk= maxcpus=4 pci=pcie_bus_perf ethwan= ubootver= mem=128M@512M 
    [    0.000000] PID hash table entries: 512 (order: -1, 2048 bytes)
    [    0.000000] Dentry cache hash table entries: 16384 (order: 4, 65536 bytes)
    [    0.000000] Inode-cache hash table entries: 8192 (order: 3, 32768 bytes)
    [    0.000000] Writing ErrCtl register=00000000
    [    0.000000] Readback ErrCtl register=00000000
    [    0.000000] Memory: 87656K/131072K available (5087K kernel code, 294K rwdata, 1264K rodata, 1276K init, 961K bss, 10648K reserved, 32768K cma-reserved)
    [    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=4, Nodes=1
    [    0.000000] Hierarchical RCU implementation.
    [    0.000000] NR_IRQS:527
    [    0.000000] EIC is off
    [    0.000000] VINT is on
    [    0.000000] CPU Clock: 800000000Hz  mips_hpt_frequency 400000000Hz
    [    0.000000] clocksource: gptc: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 9556302233 ns
    [    0.000010] sched_clock: 32 bits at 200MHz, resolution 5ns, wraps every 10737418237ns
    [    0.008266] Calibrating delay loop... 531.66 BogoMIPS (lpj=2658304)
    [    0.069297] pid_max: default: 32768 minimum: 301
    [    0.074090] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
    [    0.080515] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
    [    0.089026] CCA is coherent, multi-core is fine
    [    0.098050] [vmb_cpu_alloc]:[645] CPU vpet.cpu_status = 11
    ...
我们可能比较关心的是加载内核镜像和文件系统映像以及设置 Kernel command line 内核启动参数。
    Kernel command line: earlycon=lantiq,0x16600000 nr_cpus=4 nocoherentio clk_ignore_unused root=/dev/mtdblock6 rw rootfstype=squashfs do_overlay console=ttyLTQ0,115200 ethaddr=CC:2D:21:EE:D9:F0 panic=1 mtdparts=spi32766.1:512k(uboot),128k(ubootconfigA),128k(ubootconfigB),256k(calibration),2m(kernel),12m(rootfs),-(res) init=/etc/preinit active_bank= update_chk= maxcpus=4 pci=pcie_bus_perf ethwan= ubootver= mem=128M@512M
启动mtdparts 的作用是配置MTD层的分区，然后u-boot 将分区信息传递给命令行中的mtdparts 参数。
    [    2.641030] Creating 7 MTD partitions on "spi32766.1":
    [    2.646216] 0x000000000000-0x000000080000 : "uboot"
    [    2.652273] 0x000000080000-0x0000000a0000 : "ubootconfigA"
    [    2.657866] 0x0000000a0000-0x0000000c0000 : "ubootconfigB"
    [    2.663350] 0x0000000c0000-0x000000100000 : "calibration"
    [    2.668827] 0x000000100000-0x000000300000 : "kernel"
    [    2.673587] 0x000000300000-0x000000f00000 : "rootfs"
    [    2.678642] mtd: device 6 (rootfs) set to be root filesystem
    [    2.683251] 1 squashfs-split partitions found on MTD device rootfs
    [    2.689144] 0x000000d00000-0x000001000000 : "rootfs_data"
    [    2.695934] 0x000000f00000-0x000001000000 : "res"
console 的参数是配置串口信息，这里ttyLTQ0 为虚拟出来的串口设备，115200是这个串口的Baudrat波特率
root 的参数配置是设置跟文件系统，/dev/mtdblock6 为rootfs, rw 的意思是在启动是以读写的方式挂载/dev/mtdblock6。
init 的参数是设置系统的默认启动项，这里设置成为/etc/preint
这一部分在openwrt 的源码kernel 函数中有体现，当内核启动参数init
已经设置了，那么就使用设置的参数作为init程序，如果没有，就按照以下顺序依次尝试启动，看到这段代码，设备所有设置的init
程序都无法正常启动，那么最终会启动/bin/sh，从下面的代码我们可以理解，设备使用/etc/preint 作为初始化init程序的时候，UART
串口接入shell，需要登录凭证，如果我们进入u-boot 更改kernel 内核启动参数init 为 /bin/sh ，是否就可以绕过登录了。
    --- a/init/main.c
    +++ b/int/main.c
    @@ -844,7 +844,8 @@ static int _ref kernel_init(void *unuse 
                                    pr_err("Failed to execute %s. Attempting default...\n"),
                                    execute_command);
                    }
    -                 if(!run_init_process("/sbin/init")||