taken by mobile OS (e.g., Android) is to halt each malicious SMS
activity until the user permits it through a pop-up dialog.
SMS Spooﬁng. An attacker is able to set who an SMS message
appears to come from by replacing the originator’s phone number
so that she can send out SMS messages to a recipient on behalf of
another mobile user. This threat happens in both the CS-based and
Internet-based SMS services. For the CS-based SMS, the threat
comes from the vulnerability of 2G networks, no mutual authenti-
cation [11]. It does not require mobile phones to authenticate their
serving networks, so they may be trapped into fake 2G networks.
Through the fake networks, spoofed SMS messages can be easily
sent to the phones. Though they can be detected by the law en-
forcement agencies [10], there are still no ultimate solutions that
can eliminate all the fake networks or prevent devices from asso-
ciating with the fake ones. Moreover, the 2G technology will not
completely disappear in the near future. Some carriers [7] will re-
tire 2G shortly, but other carriers and most devices will still main-
tain 2G backward compatibility for years.
The Internet-based SMS spooﬁng is based on the vulnerabil-
ity that the Internet SMS providers do not restrict the originator
number of each SMS message only to be the originator’s. Their
customers are thus allowed to maliciously send out the spoofed
SMS messages on behalf of other mobile users, who are consid-
ered as victims. For example, by sending a spoofed SMS mes-
sage on behalf of a victim to a charity organization, which pro-
vides an SMS-powered service to accept the donation, an attacker
can force the victim to donate money. There were even some web
sites [44, 46, 47] offering SMS spooﬁng services. This spooﬁng
threat can be prevented by authenticating the originator numbers
of SMS messages. However, this mechanism is not stipulated in
the standard, but relies on various Internet-based SMS providers
outside mobile networks. It is still uncertain whether all providers
adopt the mechanism or do it right, so the threat may not be elimi-
nated completely.
Note that these two threats may also happen for the IMS-based
SMS, but the current defenses are not applicable to it. Differ-
ent from the current SMS spooﬁng attacks, which are from either
the fake 2G networks or the Internet, our identiﬁed SMS spooﬁng
threat comes from malicious mobile users inside mobile networks.
3. NEW SECURITY ISSUES FROM
IMS-BASED SMS
We investigate the security issues of the IMS-based SMS by sys-
tematically considering all the aspects where it differs from the
legacy, CS-based SMS. There are three major dissimilarities: SMS
client design (i.e., software-based versus hardware-based), SMS
protocol design (i.e., different ﬂexibility), and the communication
channel between the SMS client and the core network (i.e., data-
plane versus control-plane). We also review the security mecha-
nisms stipulated for the IMS system in the standards. In the follow-
ing, we analyze the security issues which may happen from these
four aspects, and present our threat model and methodology.
Software-based Client Design.
The IMS-based SMS takes a
software-based client design so that the SMS client is deployed as
a mobile application (e.g., an Android application). Different from
the hardware-based client of the legacy SMS, it is so ﬂexible that
carriers can customize SMS to satisfy various user demands. How-
ever, it is more vulnerable to attacks, since abusing the software-
based client is much easier than compromising the hardware-based
client located at the phone modem. Once the mobile OS does not
have any proper security protection for the SMS client, SMS is ex-
posed to security threats. For example, a malicious user can hijack
the SMS client to attack the IMS system, or the malware can send
out forged SMS messages by pretending to be the SMS client.
Flexible Protocol Design.
The SIP protocol on which the IMS-
based SMS relies is more ﬂexible than the legacy SMS. Speciﬁ-
cally, the control information in the SMS message header can be
speciﬁed on the device end, but the legacy SMS does not offer such
ﬂexibility. Without the strict security check of the SMS message
header in the IMS server, this ﬂexibility may allow malicious users
or the malware to easily forge harmful SMS messages. For exam-
ple, a malicious user can spoof the originator’s number of a SMS
message to launch the attack of SMS spooﬁng.
Data-plane Communication Channel.
The IMS system shifts
the communication channel of SMS, which is between the client
and the core network, from the control plane of the legacy SMS to
the data plane. All well-tested security mechanisms of the control-
plane signaling (e.g., identity authentication, message encryption,
integrity protection, etc.) at the CS gateway (as shown in Fig-
ure 1) are not applicable to the PS-based IMS system. As a re-
sult, when the IMS system’s security mechanisms are still at the
initial stage, its offered SMS can be vulnerable to security threats,
like VoLTE [24]. For example, the forged SMS messages can take
effect without being detected.
Stipulated Security Mechanisms.
The 3GPP and 3GPP2 [2]
standards, which are two different telecommunication speciﬁca-
tions, stipulate different IMS system designs and security mech-
anisms. They are funded by two different industry consortiums,
and each of them has supporters. In the US, they are supported
by AT&T/T-Mobile and Verizon/Sprint, respectively. In the 3GPP
standard, IPSec-3GPP, where IPSec (Internet Protocol Security)
is a protocol suite for secure IP communications, is the only and
mandatory security mechanism for IMS. However, the 3GPP2 stan-
dard offers more freedom on the IMS security. Besides the IPSec-
3GPP mechanism, it provides other four options: TLS (Transport
Layer Security), DIGEST (Digest authentication), IPSec-IKE (IPSec
Internet Key Exchange), and IPSec-Main. Such freedom may ex-
pose the IMS system to security threats. For example, one carrier
may employ only the DIGEST mechanism without the end-to-end
security, IPSec, so that it may suffer from eavesdropping or man-
in-the-middle attacks.
3.1 Threat Model and Methodology
The victims can be mobile users, carriers (the IMS system is
under attack), or SMS-powered service providers, whereas the pre-
sumed attacker is a mobile user. The attacker has a rooted com-
modity smartphone so that she can gain full control of the mobile
OS for two purposes. First, she can crack the IPSec protection of
SMS to launch attacks against the IMS system with IPSec (i.e.,
SMS spamming). Second, she can collect the information that can-
not be obtained without root access.
It includes the SIP session
information of SMS, which is required for the development of the
malware used in the attacks. In the attack of SMS spooﬁng, the
malware is not required to be deployed on the victim phone, but
can be put on another phone that is used as a springboard to attack
the victim. However, the other attacks requiring the malware need
it to be on the victim phone. Note that the malware does not re-
quire root access or SMS permission (i.e., allowed to use SMS API
to send/receive SMS messages) in the mobile OS, but only network
permission. In all cases, the attacker has no full control of the vic-
tim phones, the IMS system and the SMS-powered service servers.
We validate vulnerabilities and attacks in two top-tier US carri-
ers, which are denoted as OP-I and OP-II for the privacy concern.
They together take almost 50% of market share [29]. We conduct
experiments by using three Android phone models that support the
IMS-based SMS: Samsung Galaxy S5 with Android 4.4.4, Sam-
sung Galaxy S6 with Android 5.0.2/6.0.1, LG G3 with Android
4.4.2. We here focus on the Android OS, but we believe that the
identiﬁed issues are applicable to any other OS.
We bear in mind that some feasibility tests and attack evaluations
might be harmful to mobile users, carriers, and SMS-based ser-
vice providers. We thus conduct this study in a responsible manner
through two measures. First, we use only our own phones as the
victims. Second, we purchase unlimited SMS plans for all tested
phones. We seek to disclose new security vulnerabilities of the
IMS-based SMS and SMS-powered services, as well as effective
attacks, but not to aggravate the damage.
4. NEW THREATS FROM IMS-BASED SMS
In this section, we introduce new threats from the IMS-based
SMS. According to the security issues presented in Section 3, we
discover four vulnerabilities ranging from the phone to the IMS
server. Two vulnerabilities are in the SIP session of SMS, whereas
the other two are on the phone and the server, respectively. They
enable a malicious application without root access to fabricate legal
SMS messages and deliver them successfully without the aware-
ness of security applications, mobile OS or users.
It results in
the attack of silent SMS abuse. More threateningly, the origina-
tor phone numbers of the forged SMS messages can be spoofed,
thereby leading to the SMS spooﬁng attack. The forged SMS mes-
sages can be further manipulated to launch the DoS and spamming
attacks against the SMS client and the IMS system, respectively.
4.1 SIP Session Vulnerabilities
The IMS-based SMS relies on a SIP session between the SMS
client on the phone and the IMS server. On the phone, a new in-
terface is created for the IMS-based services (e.g., VoLTE, SMS,
etc.). It is different from the network interface of mobile data ser-
vices. We here call this new interface as IMS-speciﬁc interface.
The SIP session is established over this IMS-speciﬁc interface by
the SMS client. It remains active as long as the IMS-based SMS is
on. We next present two vulnerabilities of this SIP session: (V1)
leakage of SIP session information and (V2) injection of forged SIP
messages.
(V1) Leakage of SIP Session Information
4.1.1
Once the SIP session information (e.g., message format, session
parameters, etc.) is disclosed, the attacker may be able to fabri-
cate legal SIP messages to carry forged SMS messages based on
it. Though the SIP session is protected by the security mechanisms
stipulated in the standards, we discover that the session information
can be leaked to the attacker for both OP-I and OP-II. For OP-I, the
session is secured only by the DIGEST security mechanism, which
provides only access authentication during the SIP registration pro-
cedure. Without data conﬁdentiality, the SIP messages are thus in
plain text. For OP-II, the session is protected by the IPSec-3GPP
with data conﬁdentially, but the encrypted SIP messages can still
be decoded by the method presented in the work [51]. Note that
the packets containing SIP messages can be captured by monitor-
ing the IMS-speciﬁc interface. Though this packet capture requires
root access, it can be done at the attacker phone beforehand. After
getting the understanding of the session information, the attacker
can develop the malware without root access for the attacks that
are introduced later.
Validation. We use a mobile application called Shark to capture
the SIP messages of SMS by monitoring the IMS-speciﬁc interface.
For OP-I, the SIP messages are plain-text, so the session informa-
tion can be easily obtained. For OP-II, we load the IPSec keys that
are being used by the Android OS to the WireShark application to
decrypt the SIP packets. Note that the IPSec keys can be fetched
using the command ip xfrm state.
We here show how to get the SIP session information by con-
sidering a packet trace of OP-I as an example. Figure 2 shows
an example packet trace of the SIP registration procedure. After
registering to the IMS server, the SMS client receives a message
with the status, SIP 401 Unauthorized. In this message, the
authentication method is speciﬁed to be DIGEST, and several pa-
rameters are included for authentication (e.g., challenge, algorithm,
etc.). The SMS client then ﬁnishes the registration by sending an-
other new message of SIP REGISTER, which includes the an-
swer to the authentication challenge. Afterwards, no encryption of
the received message with the status, SIP 200 OK, shows that the
follow-up SIP messages will be plain-text. Figures 3 and 4 respec-
tively show the SIP message header and body for an SMS message.
As a result, the SIP message format can be easily learned.
Causes and lessons.
The 3GPP2 standard, which is supported
by OP-I, leaves the freedom of security mechanisms to carriers, but
such freedom may expose the IMS system to security threats. Due
to some operational concerns, carriers may prefer simple security
methods, which are not secure enough. For example, one server
with the IPSec support is much more expensive than another with-
out it, given that they support the same bandwidth. Therefore, in
order to secure the IMS system, the 3GPP2 standard should learn
from 3GPP that the most secure mechanism, IPSec-3GPP, is set to
be mandatory.
Though OP-II relies on the IPSec-3GPP mechanism by follow-
ing the 3GPP standard, the SIP session information can still be
leaked. It is because the IPSec security module (e.g., XFRM in An-
droid) leveraged by the SMS client can be abused by malicious
users with root access. To be more secure, the SMS client may
require another level of security protection on top of the IPSec.
(V2) Injection of Forged SIP Messages
4.1.2
We discover that for both OP-I and OP-II, the forged SIP mes-
sages can be injected into the SIP session between the SMS client
and the IMS server. The IMS server accepts all the packets with
the correct session identiﬁer (i.e., the destination address pair of the
Status: 401 unauthorized
No encryption is enabled!!
Authentication by DIGEST
Figure 2: An example packet trace of the SIP registration procedure at OP-I.
ZĞĐŝƉŝĞŶƚƉŚŽŶĞŶƵŵďĞƌ
/D^ƐĞƌǀĞƌĂĚĚƌĞƐƐ
^ĞŶĚĞƌ/WĂĚĚƌĞƐƐ
>Ϭϭ͗
D^^'ƚĞů͗yyyyyyϭϲϭϯ͖ƉŚŽŶĞͲĐŽŶƚĞǆƚсǆǆǆǆ͘ĐŽŵ^/WͬϮ͘Ϭ
>ϬϮ͗
DĂǆͲ&ŽƌǁĂƌĚƐ͗ϳϬ
>Ϭϯ͗
ZŽƵƚĞ͗фƐŝƉ͗΀ϮϬϬϭ͗ǆǆǆǆ͗ǆǆǆǆ͗ǆǆǆǆ͗ĨĂ͗ϭϬϰ͗͗ϭĂ΁͗ϱϬϲϬ͖ůƌх
>Ϭϰ͗
sŝĂ͗^/WͬϮ͘ϬͬhW
΀ϮϲϬϬ͗ǆǆǆǆ͗͗ǆǆǆǆ͗ϭϰϴĐ͗ĚϳĂď͗ϱĂϯϭ͗ĚϮďϯ΁͗ϱϬϲϬ͖ďƌĂŶĐŚсǌϵŚ͙͘ĚͲϲĞϯϬď
>Ϭϱ͗
^ĞƋ͗ϭD^^'
^ĞŶĚĞƌƉŚŽŶĞŶƵŵďĞƌ
>Ϭϲ͗
>Ϭϳ͗
>Ϭϴ͗
>Ϭϵ͗
>ϭϬ͗
&ƌŽŵ͗фƐŝƉ͗нϭyyyyyyϮϱϬϭΛǆǆǆǆ͘ĐŽŵх͖ƚĂŐсϬϬϬ͘͘ϳͲϬϮϮϬϴĨϴϴ
dŽ͗фƚĞů͗yyyyyyϭϲϭϯ͖ƉŚŽŶĞͲĐŽŶƚĞǆƚсǆǆǆǆ͘ĐŽŵх
Ɖ
ůůŽǁ͗/Es/d͕z͕E>͕ϭ͗WͲWƌĞĨĞƌƌĞĚͲ/ĚĞŶƚŝƚǇ͗фƐŝƉ͗нϭyyyyyyϮϱϬϭΛǆǆǆǆ͘ĐŽŵх
WͲĐĐĞƐƐͲEĞƚǁŽƌŬͲ/ŶĨŽ͗ϯ'WWͲͲhdZEͲ&͖ƵƚƌĂŶͲĐĞůůͲŝĚͲ
ϯŐƉƉсϯϭϭϰϴϬϮϵϬϲϱϯϳϵĚϬĐ
>ϭϭ͗
ZĞƋƵĞƐƚͲŝƐƉŽƐŝƚŝŽŶ͗ŶŽͲĨŽƌŬ
>ϭϮ͗
>ϭϯ͗
hƐĞƌͲŐĞŶƚ͗>'Ͳ/D^ͲĐůŝĞŶƚͬϯ͘ϯ͘Ϭs^yyyϰ'
ŽŶƚĞŶƚͲdǇƉĞ͗ĂƉƉůŝĐĂƚŝŽŶͬǀŶĚ͘ϯŐƉƉϮ͘ƐŵƐ
^ĞŶĚĞƌ/WĂĚĚƌĞƐƐ
>ϭϰ͗
ĂůůͲ/͗ϬϬϬϲϳϳϰϱͲ
ϰϰĂϬϲĂĂĚΛϮϲϬϬ͗ǆǆǆǆ͗ǆǆǆǆ͗Ĩϱϭϳ͗ϭϰϴĐ͗ĚϳĂď͗ϱĂϯϭ͗ĚϮďϯ
>ϭϱ͗
ŽŶƚĞŶƚͲ>ĞŶŐƚŚ͗Ϯϵ
^ŝǌĞŽĨ^D^ďĞŝŶŐƐĞŶƚ
Figure 3: The SIP message header of an SMS message.
UDP-based SIP sessions, or the 5-tuple address of the TCP-based
session) no matter where they come. For OP-I, the SIP session is
built over UDP. Once a forged UDP packet with the SIP session’s
destination IP and port is sent via the IMS-speciﬁc interface, the
IMS server can receive it and consider it to belong to the SIP ses-
sion. For OP-II, though the SIP session is protected by the IPSec
over TCP, a forged TCP packet can still be sneaked into the SIP ses-
sion by using the security module, XFRM. Note that exploiting this
vulnerability does not require root access at OP-I, but it is needed
at OP-II.
Validation. We ﬁrst validate this vulnerability for OP-I. We
show that an application without root access can sneak a forged
SIP message into the SIP session, and the recipient speciﬁed in
the message can receive it. Based on the understanding of the
SIP packet format from V1, the application can fabricate a SIP
message with the header shown in Figure 3. It then uses a UDP
socket to send it to the destination address of the ongoing SIP ses-
sion via the IMS-speciﬁc interface. The successful delivery of the
message is validated based on a response message with the status,
Recipient's phone number
Content of SMS
Figure 4: The SIP message body of an SMS message.