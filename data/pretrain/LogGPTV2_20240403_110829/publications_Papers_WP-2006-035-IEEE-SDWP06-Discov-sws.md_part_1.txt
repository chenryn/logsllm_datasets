Cardoso, J., “Discovering Semantic Web services with and without a Common Ontology Commitment” The 3rd International Workshop
on Semantic and Dynamic Web Processes (SDWP 2006), In conjunction with the 2005 IEEE International Conference on Web Services
(ICWS 2006), September 18-22, 2006, Chicago, USA. pp. 183-190, IEEE Computer Society. ISBN: 0-7695-2681-0
Discovering Semantic Web services with and without a Common Ontology
Commitment
Jorge Cardoso
Department of Mathematics and Engineering
University of Madeira, Portugal
PI:EMAIL
Abstract the main differences is in terms of the number of Web
services available to the composition process. In the Web,
This paper presents an algorithm to match a semantic potentially thousands of Web services are available which
Web service request against semantic Web service make the discovery a difficult procedure. One cannot
advertisements. The algorithm is to be used by systems to expect a designer to manually browse through all the Web
discover semantic Web services, such as the UDDI. services available and select the most suitable one.
Matching is based on the assessment of the similarity Therefore, one of the problems that needs to be overcome
among semantic Web service properties, such as inputs is how to efficiently discover Web services [2].
and outputs. Semantic Web services have their inputs and Currently, the industry standards available for
outputs annotated or described by ontological concepts. registering and discovering Web services are based on the
The algorithm is able to match a semantic Web service Universal Description Discovery and Integration (UDDI)
request against advertisements that are annotated with specification [4]. Unfortunately, discovering Web services
concepts with and without a common ontology using UDDI is relatively inefficient since the discovery
commitment. The similarity of inputs and outputs is mechanism only takes into account the syntactic aspect of
evaluated based on concepts (classes), their semantic Web services by providing an interface for keyword and
relations, and their common and distinguishing features taxonomy based searching.
(properties). The key to enhance the discovery of Web services is to
describe Web services semantically [5] and use semantic
matching algorithms (e.g. [2, 6-8]) to find appropriate
1. Introduction services. Semantic discovery allows the construction of
queries using concepts defined in a specific ontological
domain. By having both the advertisement description and
With the proliferation of Web services and the
request query explicitly declare their semantics, the results
evolution towards the Semantic Web comes the
of discovery are more accurate and relevant than keyword
opportunity to automate various Internet related tasks.
or attribute-based matching.
Applications should be able to automatically or semi-
The algorithms that enable the discovery of semantic
automatically discover, invoke, compose, and monitor
Web services generally use a semantic similarity distance
Web services offering particular services and having
function. Similarity is a judgment process that requires
particular properties [1].
two semantic Web services to be decomposed into aspects
Given the dynamic environment in e-businesses, the
in which they are the same and aspects in which they are
power of being able to discover Web services on the fly,
different. Examples of aspects that can be used to
to dynamically create business processes is highly
determine if two Web services are similar include their
desirable. The discovery of Web services has specific
inputs, outputs, and functionality, with and without a
requirements and challenges compared to previous work
common ontology commitment.
on information retrieval systems and information
This paper describes a semantic matching algorithm
integration systems. Several issues need to be considered.
based on a feature-based model that determines the
The discovery has to be based, not only on syntactical
matching distance among two semantic Web services
information, but also on data, as well as functional and
using a similarity function in terms of common and
QoS semantics [2].
different features of the ontological concepts that specify
Discovery is the procedure of finding a set of
the Web services input and output.
appropriate Web services that meets user requirements
The remainder of this paper is structured as follows:
[3]. The discovery of Web services to model Web
Section 2 gives a brief overview on how Web services can
processes differs from the search of tasks/activities to
be semantically annotated or described so that they can be
model traditional processes, such as workflows. One of
considered semantic Web services. In section 3, we
present our semantic Web service matching function to annotate WSDL message parts.
discover services. Section 4 describes a ranking algorithm • Preconditions and effects. Each WSDL operation
that uses the matching function previously presented and may have a number of preconditions and effects. The
that can be used by discovery mechanisms. Section 5 preconditions are usually logical conditions, which
discusses the related work in this area and section 6 must be evaluated to true in order to execute a
presents our conclusions.
specific operation. Effects are changes in the world
that occur after the execution of an operation.
2. Enhancing Web services using semantics
OWL-S. OWL-S (formerly DAML-S) is emerging as a
It has been recognized [1] that due to the description language that semantically describes Web
heterogeneity, autonomy and distribution of Web services services using OWL ontologies. OWL-S consists of three
and the Web itself, new approaches should be developed parts expressed with OWL ontologies: the service profile,
to describe and advertise Web services. The most notable the service model, and the service grounding. The profile
approaches rely on the use of semantics to describe Web is used to describe “what a service does”, with
services. This new breed of Web services, termed advertisement and discovery as its objective. The service
semantic Web services, will enable the automatic model describes “how a service works”, to enable
annotation, advertisement, discovery, selection, invocation, enactment, composition, monitoring and
composition, and execution of inter-organization business recovery. Finally, the grounding maps the constructs of
logic, making the Internet become a common global the process model onto detailed specifications of message
platform where organizations and individuals formats and protocols
communicate with each other to carry out various
commercial activities and to provide value-added services. WSMO. The third approach, Web Services Modeling
Academia has mainly approached this area from the Ontology (WSMO), provides ontological specifications
semantic Web side, while industry is beginning to for the description of semantic Web services. WSMO has
consider its importance from the point of view of Web been developed by the Digital Enterprise Research
services [9]. Three main approaches have been developed Institute (DERI), a European research organization that
to bring semantics to Web services: WSDL-S, OWL-S, targets the integration of the semantic Web with Web
and WSMO. services. The WSMO approach is based on the Web
Services Modeling Framework (WSMF) [11], a
WSDL-S. One approach to creating semantic Web framework that provides the appropriate conceptual model
services is by mapping concepts in a Web service for developing and describing Web services and their
description (WSDL specification) to ontological concepts. composition based on the maximal de-coupling and
This approach is termed WSDL-S [10]. The idea of scalable mediation service principles. The main objective
establishing mappings between service, task, or activity of WSMO is to solve the application integration problem
descriptions and ontological concepts was first proposed for Web services, Enterprise Application Integration
in [2]. By this approach, users can explicitly define the (EAI), and Service-Oriented Architectures (SOA), by
semantics of a Web service for a given domain. With the providing a conceptual framework and a formal language
help of ontologies, the semantics or the meaning of for semantically describing all relevant aspects of Web
service data and functionality can be explained. As a services. These technologies will facilitate the automation
result, integration can be accomplished in an automated of discovering, interoperating, composing, and invoking
way and with a higher degree of success. The WSDL Web services over the Web.
elements that can be marked up with metadata are
operations, messages, preconditions and effects, since all The algorithm presented in this paper can be easily
the elements are explicitly declared in a WSDL used to discover semantic Web services defined with
description. WSDL-S, OWL-S, and WSMO. For reasons of simplicity
• Operations. Each WSDL description may have a we will restrict our focus on semantic Web service input
number of operations with different functionalities. In and output parameters. Please note that the algorithm can
order to add semantics, the operations must be be easily adapted to match functional and operational
mapped to ontological concepts to describe their semantics [2], and the preconditions and effects [10]of
semantic Web services.
functionality.
• Message. Message parts, which are input and output
parameters of operations, are defined in WSDL using
the XML Schema. Ontologies – which are more
expressive than the XML Schema – can be used to
3. Matching Algorithm for Semantic Web exist in the class StaffRecord. Therefore, match(c ,
2
services c 1)=false. As we can see from this two scenarios, the
function match is asymmetric, since match(c , c ) ≠ match
1 2
(c , c ).
This section presents an algorithm for matching 2 1
semantic Web services. The algorithm presented
3.1. Formal definition of a semantic Web service
computes the degree of match between two output and
two input concepts, of a service request and
Since we only deal with the input and output
advertisement, represented by an ontology.
parameters of semantic Web services, we define a Web
We exploit the fact that the input and output concepts
service as a finite sequence of ontological concepts,
which are match may have (in addition to their name)
properties (e.g., in the form of attributes) associated with
sws(c, c ).
them, and we also take into account the level of generality i o
(or specificity) of each concept within the ontology as
The number of elements can be different than 2 if we
well as their relationships with other concepts. Notice that
consider more or fewer concepts to be used in a match. As
in contrast to semantic-based matching, syntactic-based
we have mentioned before, the functionality and QoS of
matching cannot use this information.
Web services [2] can also be considered when matching
Matching input and output concepts differs slightly
requests with advertisements.
from calculating their semantic similarity. One difference
is that the functions to compute the semantic similarity of
ontological concepts are usually symmetric, while 4.2. Comparing semantic Web services with a
matching functions are asymmetric. For example, let us common ontology commitment
assume that the ontology from Figure 1 is used to
semantically annotate or describe a set of Web services. In this scenario, Web service input and output concepts
(c and c ) are related to one global and unique ontology
i o
providing a common vocabulary for the specification of
semantics. Comparing a concept with the ontology is
translated into searching for the same or similar concepts
within the ontology.
There are several functions that can be adapted and
used to compute the degree of match of two input or
output concepts belonging to the same ontology. The
following four main techniques have been identified [12]:
1. Ontology based approaches. These approaches [13-
15] use an ontology and evaluate the semantic
relations amount concepts. The most basic metric
Figure 1. Example of an ontology used to
simply computes the distance between two concepts
semantically annotate a set of Web services.
in an ontology.
2. Corpus based approaches. These approaches [16-
Let us assume that we have a semantic Web service
18] use a corpus to establish the statistical co-
request R with the input concept StaffRecord (c ) and an
1 occurrence of words. The rationale is that if two
advertisement A with the input concept EmployeeRecord
words constantly appear together we may conclude
(c ). In this scenario, request R matches advertisement A
2 that some relation exists between them.
(i.e., match(c , c )=true), since StaffRecord is a subclass
1 2 3. Information theoretic approaches. These
of EmployeeRecord. Our rationale is that if A is able to
approaches [19-22] consider both a corpora and an
deal with the input EmployeeRecord is must also be able
ontology, and use the notion of information content
to deal with the input StaffRecord. We can think that when
from the field of information theory. By statistically
the Web service is invoked there will be some kind of cast
analyzing corpora, probabilities are associated to
(as in C programming) from StaffRecord to
concepts based on word occurrences. The information
EmployeeRecord.
content for each concept is computed in such a way
Now, let us assume that we have a semantic Web
that infrequent words are more informative than
service request R with the input concept EmployeeRecord
frequent ones. Knowing the information content of
(c ) and an advertisement A with the input concept
2 concepts it is possible to calculate the semantic
StaffRecord (c ). In this scenario, it is possible that the
1 similarity between two given concepts.
semantic Web service A cannot be invoked with the input
EmployeeRecord since A may need properties that only
4. Dictionary based approaches. These approaches  1, c =c
R A
[23, 24] use a machine readable dictionary to 
1, c >c
discover relations between concepts. For example,  R A
 | p(c )|
one approach determines the sense of a word in a S=(c ,c )= R , c <c