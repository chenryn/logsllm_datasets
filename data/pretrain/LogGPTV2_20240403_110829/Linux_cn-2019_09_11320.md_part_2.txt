```
$ mv ~/*.org ~/cal
$ ls
Game.org Meal.org Seth.org Work.org
```
暂存并提交你的文件：
```
$ git add *.org
$ git commit -m 'cal init'
```
### 创建一个 Git 远程源
要在任何地方提供日历，你必须在互联网上拥有 Git 存储库。你的日历是纯文本，因此任何 Git 存储库都可以。你可以将日历放在 [GitLab](http://gitlab.com) 或任何其他公共 Git 托管服务（甚至是专有服务）上，只要你的主机允许，你甚至可以将该存储库标记为私有库。如果你不想将日历发布到你无法控制的服务器，则可以自行托管 Git 存储库，或者为单个用户使用裸存储库，或者使用 [Gitolite](http://gitolite.com/gitolite/index.html) 或 [Gitea](https://gitea.io/en-us/) 等前端服务。
为了简单起见，我将假设一个自托管的 Git 裸存储库。你可以使用 Git 命令在任何具有 SSH 访问权限的服务器上创建一个远程裸存储库：
```
$ ssh -p 22122 [PI:EMAIL][14]
[remote]$ mkdir cal.git
[remote]$ cd cal.git
[remote]$ git init --bare
[remote]$ exit
```
这个裸存储库可以作为你日历在互联网上的家。
将其设置为本地 Git 存储库（在你的计算机上，而不是你的服务器上）的远程源：
```
$ git remote add origin PI:EMAIL:/home/seth/cal.git
```
然后推送你的日历到该服务器：
```
$ git push -u origin HEAD
```
将你的日历放在 Git 存储库中，就可以在任何运行 Git 的设备上使用它。这意味着你可以对计划进行更新和更改，并将更改推送到上游，以便在任何地方进行更新。
我使用这种方法使我的日历在我的工作笔记本电脑和家庭工作站之间保持同步。由于我每天大部分时间都在使用 Emacs，因此能够在 Emacs 中查看和编辑我的日历是一个很大的便利。对于大多数使用移动设备的人来说也是如此，因此下一步是在移动设备上设置 Org 模式的日历系统。
### 移动设备上的 Git
由于你的日历数据是纯文本的，严格来说，你可以在任何可以读取文本文件的设备上“使用”它。这是这个系统之美的一部分；你永远不会缺少原始数据。但是，要按照你希望的现代日历的工作方式将日历集成到移动设备上，你需要两个组件：移动设备上的 Git 客户端和 Org 模式查看器。
#### 移动设备上的 Git 客户端
[MGit](https://f-droid.org/en/packages/com.manichord.mgit) 是 Android 上的优秀 Git 客户端。同样，iOS 也有 Git 客户端。
一旦安装了 MGit（或类似的 Git 客户端），你必须克隆日历存储库，以便在你的手机上有副本。要从移动设备访问服务器，必须设置 SSH 密钥进行身份验证。MGit 可以为你生成和存储密钥，你必须将其添加到服务器的 `~/.ssh/authorized_keys` 文件或托管的 Git 的帐户设置中的 SSH 密钥中。
你必须手动执行此操作。MGit 没有登录你的服务器或托管的 Git 帐户的界面。如果你不这样做，你的移动设备将无法访问你的服务器以访问你的日历数据。
我是通过将我在 MGit 中生成的密钥文件通过 [KDE Connect](https://community.kde.org/KDEConnect) 复制到我的笔记本电脑来实现的（但你可以通过蓝牙、SD 卡读卡器或 USB 电缆进行相同操作，具体取决于你访问手机上的数据的首选方法）。 我用这个命令将密钥（一个名为 `calkey` 的文件）复制到我的服务器：
```
$ cat calkey | ssh PI:EMAIL "cat >> /home/seth/.ssh/authorized_keys"
```
你可能有不同的方法，但如果你曾经将服务器设置为无密码登录，这是完全相同的过程。如果你使用的是 GitLab 等托管的 Git 服务，则必须将密钥文件的内容复制并粘贴到用户帐户的 SSH 密钥面板中。
![Adding key file data to GitLab](/data/attachment/album/201909/09/061918p8yixpqr59pokpup.jpg "Adding key file data to GitLab")
完成后，你的移动设备可以向你的服务器授权，但仍需要知道在哪里查找你的日历数据。不同的应用程序可能使用不同的表示法，但 MGit 使用普通的旧式 Git-over-SSH。这意味着如果你使用的是非标准 SSH 端口，则必须指定要使用的 SSH 端口：
```
$ git clone ssh://PI:EMAIL:22122//home/seth/git/cal.git
```
![Specifying SSH port in MGit](/data/attachment/album/201909/09/061919y79aaosoe8snyza6.jpg "Specifying SSH port in MGit")
如果你使用其他应用程序，它可能会使用不同的语法，允许你在特殊字段中提供端口，或删除 `ssh://` 前缀。如果遇到问题，请参阅应用程序文档。
将存储库克隆到手机。
![Cloned repositories](/data/attachment/album/201909/09/061919dnqb0hcdd08qpyqy.jpg "Cloned repositories")
很少有 Git 应用程序设置为自动更新存储库。有一些应用程序可以用来自动拉取，或者你可以设置 Git 钩子来推送服务器的更新 —— 但我不会在这里讨论这些。目前，在对日历进行更新后，请务必在 MGit 中手动提取新更改（或者如果在手机上更改了事件，请将更改推送到服务器）。
![MGit push/pull settings](/data/attachment/album/201909/09/061920kjisgu7uugzxw4gc.jpg "MGit push/pull settings")
#### 移动设备上的日历
有一些应用程序可以为移动设备上的 Org 模式提供前端。[Orgzly](https://f-droid.org/en/packages/com.orgzly/) 是一个很棒的开源 Android 应用程序，它为 Org 模式的从 Agenda 模式到 TODO 列表的大多数功能提供了一个界面。安装并启动它。
从主菜单中，选择“设置同步存储库”，然后选择包含日历文件的目录（即，从服务器克隆的 Git 存储库）。
给 Orgzly 一点时间来导入数据，然后使用 Orgzly 的[汉堡包](https://en.wikipedia.org/wiki/Hamburger_button)菜单选择日程视图。
![Orgzly's agenda view](/data/attachment/album/201909/09/061920gzq27kmzkmpamq2p.jpg "Orgzly's agenda view")
在 Orgzly 的“设置提醒”菜单中，你可以选择在手机上触发通知的事件类型。你可以获得 `SCHEDULED` 任务，`DEADLINE` 任务或任何分配了事件时间的任何通知。如果你将手机用作任务管理器，那么你将永远不会错过 Org 模式和 Orgzly 的活动。
![Orgzly notification](/data/attachment/album/201909/09/061920r961p8d99q2xdpd9.jpg "Orgzly notification")
Orgzly 不仅仅是一个解析器。你可以编辑和更新事件，甚至标记事件为 `DONE`。
![Orgzly to-do list](/data/attachment/album/201909/09/061921fryrq8979z8i28ff.jpg "Orgzly to-do list")
### 专为你而设计
关于使用 Org 模式和 Git 的重要一点是，这两个应用程序都非常灵活，并且你可以自定义它们的工作方式和内容，以便它们能够适应你的需求。如果本文中的内容是对你如何组织生活或管理每周时间表的冒犯，但你喜欢此提案提供的其他部分，那么请丢弃你不喜欢的部分。如果需要，你可以在 Emacs 中使用 Org 模式，或者你可以将其用作日历标记。你可以将手机设置为在一天结束时从计算机上拉取 Git 数据，而不是从互联网上的服务器上，或者你可以将计算机配置为在手机插入时同步日历，或者你可以每天管理它，就像你把你工作日所需的所有东西都装到你的手机上一样。这取决于你，而这是关于 Git、Org 模式和开源的最重要的事情。
---
via: 
作者：[Seth Kenlon](https://opensource.com/users/seth) 选题：[lujun9972](https://github.com/lujun9972) 译者：[wxy](https://github.com/wxy) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出