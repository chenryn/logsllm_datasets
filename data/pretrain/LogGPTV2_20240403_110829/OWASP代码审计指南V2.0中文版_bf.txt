Stride 
下表提供了按这些类别组织的一般威胁的威胁列表，以及示例和受影响的安全控
制:[此处作者可能遗漏了一些] 
5.4.1.3 威胁建模示例:步骤 2b 威胁排名 
威胁倾向于从风险因素的角度进行排序。通过确定各种已识别威胁造成的风险因素，可
以创建一个按优先顺序排列的威胁列表来支持风险缓解策略，例如决定首先要缓解哪些威胁。
297 
不同的风险因素可用于确定哪些威胁，威胁可分为高风险、中风险或低风险。一般来说，威
胁风险模型使用不同的因素来建模风险。 
微软 DREAD 威胁-风险排名模型 
通过参考学院图书馆网站，可以记录与用例相关的威胁示例，例如: 
威胁:恶意用户查看学生、教师和图书馆员的机密信息。 
1．潜在损害 
对声誉的威胁以及财务和法律责任:8 
2.再现性 
完全可再现性:10 
3.可开发性 
要求在同一个子网中或已经危及路由器:7 
4．受影响的用户影响所有用户:10 
5．发现性 
很容易找到:10 
整体恐惧分数:(8+10+7+10+10) / 5 = 9 
在这种情况下，10 分制中有 9 分肯定是一个高风险威胁。 
298 
5.5 代码爬行 
本附录给出了如何在以下编程语言中执行代码爬行的实例: 
⚫ 
.NET 
⚫ 
Java 
⚫ 
ASP 
⚫ 
C++/Apache 
5.5.1 在.NET 中搜索代码 
首先，一个人需要熟悉可以用来执行文本搜索的工具，接下来，他需要知道要寻找什么。 
审计人员可以扫描代码，寻找常见的模式或关键字，如“User”, “Password”, “Pswd”, 
“Key”, “Http”等... 这可以使用 VS 中的“在文件中查找”工具或使用如下命令来执行: 
findstr /s /m /i /d:c:\projects\codebase\sec “http” *.* 
5.5.1.1 请求字符串 
我们需要确保接收到的所有 HTTP 请求都经过了数据验证，包括组合、最大和最小长度，
以及数据是否属于参数白名单的范围。底线是这是一个需要关注的关键领域，并确保启用安
全性。 
要搜索的字符串 
299 
request.accesstypes request.httpmethod request.cookies request.url 
request.browser request.querystring request.certificate request.urlreferrer 
request.files request.item request.rawurl request.useragent 
request.headers request.form request.servervariables request.userlanguages 
request.TotalBytes request.BinaryRead 
5.5.1.2 HTML 产量 
我们在这里寻找客户的回应。未验证的响应或在没有数据验证的情况下回应外部输入的
响应是需要审计的关键领域。许多客户端攻击是由于响应验证不佳造成的。 
要搜索的字符串 
response.write HttpUtility HtmlEncode UrlEncode 
innerText innerHTML   
5.5.1.6 输入控件 
下面的输入控件是用于生成和显示 web 应用程序表单字段的服务器类。寻找这样的参
考有助于找到应用程序的入口点。 
要搜索的字符串 
htmlcontrols.htmlinputhidden webcontrols.hiddenfield webcontrols.hyperlink 
webcontrols.textbox 
webcontrols.label 
webcontrols.linkbutton 
webcontrols.listbox webcontrols.checkboxlist webcontrols.dropdownlist 
5.5.1.7 WEB.config 
那个. NET Framework 依赖于.config 文件来定义配置设置。那个.config 文件是基于
文本的 XML 文件。很多.config 文件可以并且通常确实存在于单个系统上。Web 应用程序
参考位于应用程序根目录中的 web.config 文件。对于 ASP.NET 应用程序，web.config 包
含关于应用程序操作的大多数方面的信息。 
要搜索的字符串 
302 
requestEncoding responseEncoding Trace authorization 
compilation 
webcontrols.linkbutton 
webcontrols.listbox 
webcontrols.checkboxlist 
webcontrols.dropdownlist CustomErrors httpCookies httpHandlers 
httpRuntime sessionState maxRequestLength Debug 
forms protection appSettings ConfigurationSettings appSettings 
connectionStrings authentication mode Allow Deny 
Credentials identity impersonate timeout remote 
5.5.1.8 global.asax 
每个应用程序都有自己的 global.asax 文件(如果需要的话)。Global.asax 使用脚本为
应用程序设置事件代码和值。必须确保应用程序变量不包含敏感信息，因为它们对整个应用
程序和其中的所有用户都是可访问的。 
要搜索的字符串 
 Application_OnAuthenticateRequest 
Application_OnAuthorizeRequest 
Session_OnStart Session_OnEnd 
5.5.1.9 Logging 
日志记录可能是信息泄露的一个来源。重要的是审计对日志子系统的所有调用，并确定
303 
是否记录了任何敏感信息。常见的错误是在身份验证功能中记录用户标识和密码，或者记录
可能包含敏感数据的数据库请求。 
要搜索的字符串 
log4net Console.WriteLine System.Diagnostics.Debug System.Diagnostics.Trace 
5.5.1.10 machine.config 
对于特定的应用程序，machine.config 中的许多变量都可以在 web.config 文件中被
覆盖，这一点很重要。 
要搜索的字符串 
validateRequest enableViewState enableViewStateMac 
5.5.1.11 线程和并发 
将包含多线程函数的代码定位为并发性问题可能会导致竞争条件，这可能会导致安全漏
洞。线程关键字是创建新线程对象的地方。使用保存敏感安全信息的静态全局变量的代码可
能会导致会话问题。使用静态构造函数的代码也可能导致线程之间的问题。如果多个线程同
时调用 Dispose，不同步 Dispose 方法可能会导致问题，这可能会导致资源释放问题。 
要搜索的字符串 
Thread Dispose 
304 
5.5.1.12 Class 设计 
“公共”和“密封”与 Class 级别的设计相关。不打算从派生的类应该被密封。确保所
有类字段设置为 public 都是原因的。不要暴露任何不必要的东西。 
要搜索的字符串 
Public Sealed 
5.5.1.13 Reflection，序列化 
代码可以在运行时动态生成。根据外部输入动态生成的代码可能会产生问题。如果代码
包含敏感数据，是否需要序列化？ 
 要搜索的字符串 
 Serializable 
AllowPartiallyTrustedCallersAttribute 
GetObjectData 
System.Reflection 
STRING TO SEARCH catch finally trace enabled customErrors mode 
StrongNameIdentity StrongNameIdentityPermission 
5.5.1.14 例外和错误 
确保在出现异常的情况下，catch 块不会向用户泄露信息。在处理资源时，确保使用最
后一个块。从信息泄露的角度来看，启用跟踪并不重要。确保定制错误得到正确实施 
要搜索的字符串 
 catch finally trace enabled customErrors mode 
305 
5.5.1.15 密码学 
如果使用密码加密，那么是否使用了足够强的密码，即。AES 还是 3DES？用什么尺寸
的钥匙？密钥要越长越好。哈希在哪里执行？正在持久化的密码是否经过哈希处理？应该是。
随机数是如何产生的？PRNG 够“随机”吗？ 
要搜索的字符串 
RNGCryptoServiceProvider 
SHA 
MD5 
base64 
DES 
RC2 
System.Security.Cryptography 
System.Random Random xor 
5.5.1.16 存储 
如果在内存中存储敏感数据，建议使用以下方法。 
要搜索的字符串 
SecureString ProtectedMemory 
5.5.1.17 授权、声明和恢复 
绕过.Net 代码访问安全权限？不是个好主意。下面是一个潜在危险权限的列表，例如
在 CLR 之外调用非托管代码。 
要搜索的字符串 
RequestMinimum RequestOptional Assert Debug.Assert 
306 
CodeAccessPermission MemberAccess ControlAppDomain UnmanagedCode 
SkipVerification ControlEvidence SerializationFormatter ControlPrincipal 
ControlDomainPolicy ControlPolicy 
5.5.1.18 遗留方法 
在任何情况下都应该审计的一些标准函数包括。 
要搜索的字符串 
printf strcpy 
5.5.2 在 Java 中搜索代码 
5.5.2.1 输入和输出流 
这些用于将数据读入应用程序。它们可能是应用程序的潜在入口点。进入点可能来自外
部来源，必须进行调查。这些也可以用于路径遍历攻击或 DoS 攻击。 
要搜索的字符串： 
java.io.FileOutputStream File ObjectInputStream PipedInputStream 
STRING TO SEARCH FileInputStream ObjectInputStream FilterInputStream 
PipedInputStream 
SequenceInputStream 
StringBufferInputStream 
BufferedReader ByteArrayInputStream StreamTokenizer getResourceAsStream 
java.io.FileReader java.io.FileWriter 
307 
java.io.RandomAccessFile java.io.File renameTo Mkdir 
5.5.2.2 Servlets 
这些应用编程接口调用可能是参数/报头/网址/cookie 篡改、超文本传输协议响应分割
和信息泄漏的途径。应该仔细审计它们，因为许多这样的应用编程接口直接从 HTTP 请求中
获取参数。 
要搜索的字符串 
getParameterMap getScheme getProtocol getContentType 
getServerName getRemoteAddr getRemoteHost getRealPath 