version 8 datagram
August 2015
Remote Access, the APT // Ian Latter
24
TGXf Hello World – 1/1:4
TGXf Hello World – 1/1:4
• Control Frame
Control Frame
– Control Byte
Control Byte
• Bit 0:     Control (1)
Bit 0:     Control (1)
• Bits1-3: START (1)
Bits1-3: START (1)
• Bits4-7: 
Bits4-7: 
    QRCODE_FPS (4)
QRCODE_FPS (4)
– Payload
Payload
• 5 fps
5 fps
– Encode as QR code 
Encode as QR code 
version 8 datagram
version 8 datagram
August 2015
Remote Access, the APT // Ian Latter
25
TGXf Hello World – 0/data
TGXf Hello World – 0/data
• Data Frame
Data Frame
– Control Byte
Control Byte
• Bit 0:     Data (0)
Bit 0:     Data (0)
• Bits1-4: Counter (0)
Bits1-4: Counter (0)
– Payload
Payload
• ““Hello World!”
Hello World!”
– Encode as QR code 
Encode as QR code 
version 8 datagram
version 8 datagram
August 2015
Remote Access, the APT // Ian Latter
26
TGXf Hello World – 1/2:2
TGXf Hello World – 1/2:2
• Control Frame
Control Frame
– Control Byte
Control Byte
• Bit 0:     Control (1)
Bit 0:     Control (1)
• Bits1-3: STOP (2)
Bits1-3: STOP (2)
• Bits4-7: 
Bits4-7: 
    COMPLETE (2)
COMPLETE (2)
– Payload
Payload
• CRC32
CRC32
– Encode as QR code 
Encode as QR code 
version 8 datagram
version 8 datagram
August 2015
Remote Access, the APT // Ian Latter
27
TGXf Result – visual modem
TGXf Result – visual modem
If you see this in Smart Auditor, you've lost
If you see this in Smart Auditor, you've lost
August 2015
Remote Access, the APT // Ian Latter
28
TGXf Data Rates
TGXf Data Rates
•
Recall the supported QR Code versions
Recall the supported QR Code versions
–
Updating our Layer 3 configurations table with FPS values, we 
Updating our Layer 3 configurations table with FPS values, we 
get the following.
get the following.
–
I.e. 80 bps to 32 kbps
I.e. 80 bps to 32 kbps
–
Arbitrarily limited only by the receiver
Arbitrarily limited only by the receiver
Version
Reliable Capacity
FPS (1 -> 10) x 8 bits
1
10 bytes per frame
80bps -> 800 bps
2
22 bytes per frame
176 bps -> 1,760 bps
8
148 bytes per frame
1,184 bps -> 11,840 bps
15
408 bytes per frame
3,264 bps -> 32,640 bps
August 2015
Remote Access, the APT // Ian Latter
29
TGXf a PDF from Youtube
TGXf a PDF from Youtube
YouTube is the new DropBox
YouTube is the new DropBox
August 2015
Remote Access, the APT // Ian Latter
30
Another version
Another version
•
Recall the supported QR Code versions
Recall the supported QR Code versions
–
Updating our Layer 3 configurations table with resolutions, we 
Updating our Layer 3 configurations table with resolutions, we 
get the following.
get the following.
•
Previous examples scaled the code
Previous examples scaled the code
–
Lets look at a native version 1 example ..
Lets look at a native version 1 example ..
Version
Reliable Capacity
Resolution
1
10 bytes per frame
21 x 21 pixels
2
22 bytes per frame
25 x 25 pixels
8
148 bytes per frame
49 x 49 pixels
15
408 bytes per frame
77 x 77 pixels
August 2015
Remote Access, the APT // Ian Latter
31
TGXf a PDF from BASH
TGXf a PDF from BASH
ANSI generated QR codes pass through SSH jump hosts
ANSI generated QR codes pass through SSH jump hosts
August 2015
Remote Access, the APT // Ian Latter
32
Technology check-point (1/3)
Technology check-point (1/3)
• So!
So!
– If the TGXf transmit software was on a laptop 
If the TGXf transmit software was on a laptop 
we could now exfiltrate data, file by file, 
we could now exfiltrate data, file by file, 
through its screen (binaries already public)
through its screen (binaries already public)
• How do we get TGXf onto the laptop in the 
How do we get TGXf onto the laptop in the 
first place?
first place?
– Recall that: 
Recall that: any user controlled bit is a 
any user controlled bit is a 
communications channel
communications channel .. 
 .. 
– And .. we have a keyboard!
And .. we have a keyboard!
August 2015
Remote Access, the APT // Ian Latter
33
Digital Programmable Keyboard
Digital Programmable Keyboard
• Arduino Leonardo
Arduino Leonardo
– USB HID Keyboard
USB HID Keyboard
• No drivers needed!
No drivers needed!
• Keyboard.println(“x”)
Keyboard.println(“x”)
– Open source platform
Open source platform
• Heaps of support!
Heaps of support!
• Digispark (top)
Digispark (top)
– 6KB of flash
6KB of flash
• Leostick
Leostick
– 32KB of flash
32KB of flash
August 2015
Remote Access, the APT // Ian Latter
34
What to type?
What to type?
• Source code (text) would be easy to send but 
Source code (text) would be easy to send but 
then needs to be compiled .. meh
then needs to be compiled .. meh
• Send statically compiled binary
Send statically compiled binary
– Gzip TGXf transmit binary (~80->25KB)
Gzip TGXf transmit binary (~80->25KB)
– Hexdump the .gz (byte = 2 chars; 0-9, a-f)
Hexdump the .gz (byte = 2 chars; 0-9, a-f)
• Receive via text editor
Receive via text editor
– ““Type” it in, structured
Type” it in, structured
• Bash (printf) or Perl (print)
Bash (printf) or Perl (print)
– Save, chmod and run script, gunzip result!
Save, chmod and run script, gunzip result!
August 2015
Remote Access, the APT // Ian Latter
35
Uploading to Lin64 via Win32 over SSH via keyboard
Uploading to Lin64 via Win32 over SSH via keyboard
Typing a BASH2BIN script
Typing a BASH2BIN script
August 2015
Remote Access, the APT // Ian Latter
36
Technology check-point (2/3)
Technology check-point (2/3)
• Wait, what!?
Wait, what!?
– First, there’s now no barrier to getting TGXf 
First, there’s now no barrier to getting TGXf 
into a computer (this is bad in enterprise).
into a computer (this is bad in enterprise).
– But second, we just sent data into the 
But second, we just sent data into the 
computer .. so:
computer .. so:
• No longer unidirectional
No longer unidirectional
– ZOMG Full Duplex!  w00t
ZOMG Full Duplex!  w00t
• Could now replace TGXf file transfers with 
Could now replace TGXf file transfers with 
full-blown through screen and keyboard 
full-blown through screen and keyboard 
networking!
networking!
August 2015
Remote Access, the APT // Ian Latter
37
Keyboard Interface
Keyboard Interface
• USB HID Keyboard interface
USB HID Keyboard interface
– Polled interface, each 1ms
Polled interface, each 1ms
• Typical implementations send one “key” packet 
Typical implementations send one “key” packet 
followed by one “null” packet (key clear)
followed by one “null” packet (key clear)
• Not necessary, but still implemented
Not necessary, but still implemented
– Contains up to 6 keyboard keys (by code)
Contains up to 6 keyboard keys (by code)
• Note – no native binary mode
Note – no native binary mode
– Automatically de-duped (no one key twice)
Automatically de-duped (no one key twice)
• Note – data removed irretrievably
Note – data removed irretrievably
August 2015
Remote Access, the APT // Ian Latter
38
TKXf – Keyboard Transport
TKXf – Keyboard Transport
• Same as TGXf – USB HID packet is L3
Same as TGXf – USB HID packet is L3
– Still unidirectional
Still unidirectional
• Though status LEDs could be used
Though status LEDs could be used
– Create binary payload by encoding data in 
Create binary payload by encoding data in 
hexadecimal
hexadecimal
• Halves throughput: 3 octets/pkt/ms
Halves throughput: 3 octets/pkt/ms
• Retained “key clear” packet: 3 octets/pkt/2ms
Retained “key clear” packet: 3 octets/pkt/2ms
– Correct for de-duplication by creating a de-dupe 
Correct for de-duplication by creating a de-dupe 
layer that re-dupes at the receiving end
layer that re-dupes at the receiving end
• Simple positional reference based encoding
Simple positional reference based encoding
August 2015
Remote Access, the APT // Ian Latter
39
TKXf – Transport Protocol
TKXf – Transport Protocol
• 6 char packets are too small for a control 
6 char packets are too small for a control 
header
header
– Bookended “sequence” instead of “packet”
Bookended “sequence” instead of “packet”
• Data 
Data 
= “space” 
= “space” 
= 0x2C/0x20
= 0x2C/0x20
• Control/Start
Control/Start
= “comma” 
= “comma” 
= 0x36/0x2C 
= 0x36/0x2C 
• Control/Stop 
Control/Stop 
= “period” 
= “period” 
= 0x37/0x2E
= 0x37/0x2E
– Process as a “stream”
Process as a “stream”
• And let’s ignore “file” based transfers ..
And let’s ignore “file” based transfers ..
August 2015
Remote Access, the APT // Ian Latter
40
TKXf – “Keyboard Stuffer”
TKXf – “Keyboard Stuffer”
• Target Arduino (top)
Target Arduino (top)
– USB HID Keyboard
USB HID Keyboard
• Encodes received 
Encodes received 
raw/binary data as keys
raw/binary data as keys
– Alter “Keyboard” 
Alter “Keyboard” 
library to expose HID 
library to expose HID 
packet (12x faster ++)
packet (12x faster ++)
• Attacker Arduino
Attacker Arduino
– USB Serial Interface
USB Serial Interface
• Sends raw/binary 
Sends raw/binary 
octets to Target Arduino
octets to Target Arduino
August 2015
Remote Access, the APT // Ian Latter
41
TGXf note
TGXf note
• One note on TGXf before we integrate 
One note on TGXf before we integrate 
TGXf and TKXf
TGXf and TKXf
– If we remove the control frames (layer) from 
If we remove the control frames (layer) from 
TGXf it is capable of “streams” rather than 
TGXf it is capable of “streams” rather than 
“files”
“files”
• Now we can assemble the 
Now we can assemble the 
Through Console Transfer
Through Console Transfer application!
 application!
August 2015
Remote Access, the APT // Ian Latter
42
TCXf Application Architecture
TCXf Application Architecture
August 2015
Remote Access, the APT // Ian Latter
43
Technology check-point (3/3)
Technology check-point (3/3)
• TCXf 
TCXf 
– TKXf reference impl. has 12kbps max, up
TKXf reference impl. has 12kbps max, up
• Could probably get this up to 32kbps
Could probably get this up to 32kbps
– Use 
Use Key clear
Key clear packet with second character set (x2)
 packet with second character set (x2)
– Use base64 for 4 bytes per 3 hex values (+1/3)
Use base64 for 4 bytes per 3 hex values (+1/3)
– TGXf reference impl. has 32kbps max, down
TGXf reference impl. has 32kbps max, down
– Features
Features
• Bi-directional, binary clear, serial connection
Bi-directional, binary clear, serial connection
• Native network socket interface
Native network socket interface
• Insane portability / Massive vulnerability
Insane portability / Massive vulnerability
August 2015
Remote Access, the APT // Ian Latter
44
TCXf IP Network Evolution
TCXf IP Network Evolution
• PPP over the Screen and Keyboard 
PPP over the Screen and Keyboard 
– On the target device;
On the target device;
• sudo pppd 10.1.1.1:10.1.1.2 debug noccp 
sudo pppd 10.1.1.1:10.1.1.2 debug noccp 
nodetatch pty “netcat localhost 8442”
nodetatch pty “netcat localhost 8442”
– Note the privilege required to create a NIC
Note the privilege required to create a NIC
(We already had a full-duplex socket without it)
(We already had a full-duplex socket without it)
– On the attackers device;
On the attackers device;
• sleep 2; sudo pppd noipdefault debug noccp 
sleep 2; sudo pppd noipdefault debug noccp 
nodetatch pty “netcat localhost 8442”
nodetatch pty “netcat localhost 8442”
August 2015
Remote Access, the APT // Ian Latter
45
ARCHITECTURE
ARCHITECTURE
POC Impact on the Enterprise Architecture
POC Impact on the Enterprise Architecture
August 2015
Remote Access, the APT // Ian Latter
46
ESA Context?
ESA Context?
• Time to be Enterprise Security Architects
Time to be Enterprise Security Architects
– Firstly, what are TGXf, TKXf and TCXf?
Firstly, what are TGXf, TKXf and TCXf?
• In the vulnerability taxonomy we are dealing with 
In the vulnerability taxonomy we are dealing with 
as “storage based” 
as “storage based” covert channel
covert channel attacks
 attacks
– Secondly, where’s the enterprise?
Secondly, where’s the enterprise?
• So far we’ve been working from a local computer 
So far we’ve been working from a local computer 
context
context
• But in enterprise we abstract the screen and 
But in enterprise we abstract the screen and 
keyboard (on the organisation’s side) ..
keyboard (on the organisation’s side) ..
August 2015
Remote Access, the APT // Ian Latter
47
This is enterprise @ L7
This is enterprise @ L7
• Remote access
Remote access
– VMware
VMware
– Citrix
Citrix
– RDP
RDP
– VNC
VNC
– SSH
SSH
– etc ad nausea
etc ad nausea
• Console abstraction
Console abstraction
August 2015
Remote Access, the APT // Ian Latter
48
TCXf Enterprise Impact
TCXf Enterprise Impact
August 2015
Remote Access, the APT // Ian Latter
49
TCXf PPP via XPe Thin Client
TCXf PPP via XPe Thin Client
Attacker Laptop → Corp XPe Thin Client → Corp Linux App Server 
Attacker Laptop → Corp XPe Thin Client → Corp Linux App Server 
August 2015
Remote Access, the APT // Ian Latter
50
TECHNOLOGY SOLUTION 2
TECHNOLOGY SOLUTION 2
Engineering a better Proof of Concept
Engineering a better Proof of Concept