差完全可以忽略掉。
另一个策略是把小数转换成整数来计算。计算机在进行小数计算
时可能会出错，但进行整数计算（只要不超过可处理的数值范围）时一
定不会出现问题。因此，进行小数的计算时可以暂时使用整数，然后
再把计算结果用小数表示出来即可。例如，本章一开头讲过的将0.1相
加100次这一计算，就可以转换为将0.1扩大10倍后再将1相加100
次的计算，最后把结果除以10就可以了（代码清单3-3）。
代码清单33将小数替换成整数来计算的C语言程序
#include
void main(){
//int是整数的数据类型
1nt sun;
int 1;
//将保存总和的变量清0
0-une
更多资料请关注我的新浪博客http：//blog
---
## Page 70
第3章计算机进行小数运算时出错的原因
//等1相加100次
for(1 =1;1<=100;1++)[
sum += 1;
//总和结果除以10
um/-10;
//星示结果
printf (*fd\n*, 8um))
除此之外，BCD（BinaryCodedDecimal）也是一种使用二进制表
示十进制的方法。简单来讲，BCD就是用4位来表示0~9的1位数字
的处理方法，这里不再做详细说明。在涉及财务计算等不允许出现误
差的情况下，一定要将小数转换成整数或者采用BCD方法，以确保最
终得到准确的数值。
二进制数和十六进制数
最后再补充说明一下二进制数和十六进制数的关系。在以位为单
位表示数据时，使用二进制数很方便，但如果位数太多，看起来就比
较麻烦。因此，在实际程序中，也经常会用十六进制数来代替二进制
数。在C语言程序中，只需在数值的开头加上0x（0和x）就可以表示
十六进制数
二进制数的4位，正好相当于十六进制数的1位。例如，32位二
进制数00111101110011001100110011001101用十六进制数来表示的话，
①计算机中用到的数据表现形式中，有一种叫作BCD（BinaryCoded
Decimal，二进制化十进制数）的方法。这种方法常被用于老式的大型计算
机中。编程语言中，COBOL也会使用BCD。BCD分为Zone十进制数形
式和Pack十进制数形式两种。
---
## Page 71
3.8二进制数和十六进制数
就是3DCCCCCD这个8位数。由此可见，通过使用十六进制数，二进
制数的位数能够缩短至原来的1/4。位数变少之后，看起来也就更清晰
了(图 3-9 )。
二进制数（32位）
十六进制数（8位）
0000001011001100110010010011011000
图3-9通过使用十六进制数使位数变短
用十六进制数来表示二进制小数时，小数点后的二进制数的4位
也同样相当于十六进制数的1位。不够4位时用0填补二进制数的低
位即可。例如，1011.011的低位补0后为1011.0110，这时就可以表示
为十六进制数B.6（图3-10）。十六进制数的小数点后第1位的位权是
16即1/16-0.0625，这个大家应该能理解吧。
二进制数（小数点后面有3位）
二进制数（最低位补0）
十六进制数
1011.011
→1011.0110
B.6
围3-10小数点后的二进制数的4位也相当于十六进制数的1位
通过学习第2章和本章的内容，想必大家已经掌握了计算机通过
二进制数来处理数据（数值）的机制。接下来的一章，我们将继续向大
家介绍用于数据存储的内存。如果大家在编程时能够时刻考虑到内存
问题，那么就一定能彻底理解被公认为复杂难懂的C语言的数组和指
针了。
更多资料请关注我的新浪薄客tt
---
## Page 73
第
熟练使用有棱有角的内存
热身问答
阅读正文前，让我们先回答下面的问题来热热身吧。
1.有十个地址信号引脚的内存IC（集成电路）可以指定的地址
范围是多少？
2.高级编程语言中的数据类型表示的是什么？
3.在32位内存地址的环境中，指针变量的长度是多少位？
4.与物理内存有着相同构造的数组的数据类型长度是多少？
5.用LIFO方式进行数据读写的数据结构称为什么？
6.根据数据的大小链表分叉成两个方向的数据结构称为什么？
更多资料请关注我的新浪薄客t
---
## Page 74
第4章熟练使用有有角的内存
是笔者的答案和解析，供大家参考。
1.用二进制数来表示的话是0000000000~1111111111（用
十进制数来表示的话是0-1023）
2.占据内存区域的大小和存储在该内存区域的数据类型
3.32位
4.1字节
5.栈
6.二叉查找树（binary search tree）
解析··
1.地址信号引脚是十个时表示2"=1024个地址。
2.例如，C语言数据类型中的shon类型，它表示的就是占据2字
节的内存区域，并且存储整数。
3.指针指的是用于存储内存地址的变量。
4.物理内存是以字节为单位进行数据存储的。
5.栈是一种后人先出（LIFO=LastInFirstOut）式的数据结构。
6.二叉查找树指的是从节点分成两个叉的树状数据结构。
---
## Page 75
4.1内存的物理机前很简单
本章
重点
计算机是进行数据处理的设备，而程序表示的就
是处理顺序和数据结构。由于处理对象数据是存储在
内存和磁盘上的，因此程序必须能自由地使用内存和磁盘。因此，大
家有必要对内存和磁盘的构造有一个物理上的（硬件的）和逻辑上的
（软件的）认识。
本章的主题是内存（磁盘部分会在第5章中讲解）其实，从物理
上来看，内存的构造非常筒单。只要在程序上花一些心思，就可以将
内存变换成各种各样的数据结构来使用。警如，物理上有棱有角的内存，
在程序上是可以按照逻辑很流畅地使用的。而且这并不特别，它是很
多程序中都会用到的一般方法。
4.1
内存的物理机制很简单
为了能够对内存有一个整体把握，首先让我们来看一下内存的物
理机制。内存实际上是一种名为内存IC的电子元件。虽然内存IC包
括DRAM、SRAM、ROM等多种形式，但从外部来看，其基本机制都
是一样的。内存IC中有电源、地址信号、数据信号、控制信号等用于
输入输出的大量引脚（IC的引脚），通过为其指定地址（address），来
进行数据的读写。
图4-1是内存IC（在这里假设它为RAM）的引脚配置示例。虽然
这是一个虚拟的内存IC，但它的引脚和实际的内存IC是一样的。VCC
①ROM（ReadOnlyMemory）是一种只能用来读取的内存。
②RAM（RandomAcess Memory）是可被读取和写入的内存，分为需要经常
刷新（refresh）以保存数据的DRAM（Dynamic RAM），以及不需要刷新电
路即能保存数据的SRAM（Static RAM）。
---
## Page 76
第4章熟练使用有棱有角的内存
和GND是电源，A0~A9是地址信号的引脚，D0~D7是数据信号的
引脚，RD和WR是控制信号的引脚。将电源连接到VCC和GND后，
就可以给其他引脚传递比如0或者1这样的信号。大多数情况下，+5V
的直流电压表示1.0V表示0。
VCC A0A1
A2
A3
A4
A5
A6
A7
八
内存IC
RDWRDO
VCC、GND:电源
DO~D7
A0 ~ A9
地址信号
数据信号
RD、WR
控制信号
图4-1内存IC的引脚配置示例
那么，这个内存IC中能存储多少数据呢？数据信号引脚有D0~D7
共八个，表示一次可以输人输出8位（=1字节）的数据。此外，地址信
号引脚有A0~A9共十个，表示可以指定000000000~1111111111共
1024个地址。而地址用来表示数据的存储场所，因此我们可以得出这
个内存IC中可以存储1024个1字节的数据。因为1024=IK.所以该
内存IC的容量就是1KB。
现在大家使用的计算机至少有512M的内存。这就相当于512000
①在计算机领成，大写字母K表示的并不是1000，而是2的10次军的结果
1024。1000通常用小写k来表示
---
## Page 77
4.1内存的物理机制很简单
个（512MB÷1KB=512K）1KB的内存IC。当然，一台计算机中不太
可能故入如此多的内存IC。通常情况下，计算机使用的内存IC中会有
更多的地址信号引脚，这样就能在一个内存IC中存储数十兆字节的数
据。因此，只用数个内存IC，就可以达到512MB的容量。
下面让我们继续来看刚才所说的IKB的内存IC。首先，我们假设
要往该内存IC中写入1字节的数据。为了实现该目的，可以给VCC
接人+5V，给GND接人0V的电源，并使用A0~A9的地址信号来
指定数据的存储场所，然后再把数据的值输入给D0~D7的数据信号，
并把WR（write=写人的简写）信号设定成1。执行完这些操作，就可
以在内存IC内部写入数据（图4-2（a））了。
读出数据时，只需通过A0~A9的地址信号指定数据的存储场所。
然后再将RD（read=读出的简写）信号设成1即可。执行完这些操
作，指定地址中存储的数据就会被输出到D0~D7的数据信号引脚
（图4-2（b））中。另外，像WR和RD这样可以让IC运行的信号称
为控制信号。其中，当WR和RD同时为0时，写入和读出的操作都
无法进行。
由此可见，内存IC的物理机制实质上是很简单的。总体来讲，内
存IC内部有大量可以存储8位数据的地方，通过地址指定这些场所，
之后即可进行数据的读写。
更多资料请关注我的新浪薄客t
---
## Page 78
第4章熟练使用有棱有角的内存
（a）往0101010101地址写入11110000数据时
VCCA0A1A2A3A4A5A6A7ABA9
+5v010101010
1（1]指定地址
八
八
内存C
00000V
RDRD0D1D2D3D4D5D6D7GND
0
[2）输入数据
（3）将WR（写入）信号设为1
（b）读出0101010101地址的数据时
+5V0
1。1
[1]指定地址
八
八
八
内存IC
01
RDVRD0D1D2D3D4D5D6D7GND
（3）数据被
读出
（2）将RD（读出）信号设为1
图42向内存IC中写入和读出数据的方法
---
## Page 79
4.2内存的证辑模型是楼房
4.2
内存的逻辑模型是楼房
在介绍程序时，大部分参考书都会用类似于楼房的图形来表示内
存。在这个楼房中，1层可以存储1个字节的数据，楼层号表示的就是
地址。对于程序员来说，这种形象的解说有助于了解内存。
虽然内存的实体是内存IC，不过从程序员的角度来看，也可以把
它假想成每层都存储着数据的楼房，并不需要过多地关注内存IC的电
源和控制信号等。因此，之后的讲解中我们也同样会使用楼房图（或者
与楼房相似的图）。内存为1KB时，表示的是如图4-3所示的有1024
层的楼房（这里地址的值是从上往下逐渐变大，不过也有与此相反的
情况）
地址
内存的内容
000000000
1字节的数据
0000000001
1字节的数据
0000000010
1字节的数据
1024层楼房中
每层都存健着
1个字节的数据