461,320
353,695
187,878
137,713
89,971
332,799,590
0.0 Reveal
0.0 Origination
0.0 Activate
0.0
0.0
0.0 Endorsement
0.0 Delegation
0.0 Reveal nonce
0.0 Ballot
0.0 Proposals
0.0 Double baking evidence
3.8
113,915
3,159
2,659
6,957,612
56,336
9,409
514
90
4
0.0 TrustSet
1.3 AccountSet
0.0 SignerListSet
SetRegularKey
DepositPreauth
76.6 OfferCreate
0.6 OfferCancel
0.1 EscrowCreate
0.0 EscrowCancel
0.0 PaymentChannelClaim
0.0 PaymentChannelCreate
EnableAmendment
Total
8,815,351,697 100.0
9,084,928 100.0
271,546,797 100.0
Figure 1: Distribution of action types per blockchain.
Each smart contract on EOSIO has a set of actions. Actions
included in non-system contracts are entirely user-defined,
and users have a high degree of flexibility in terms of struc-
turing and naming the actions. This makes the analysis of
actions challenging, as it requires understanding their true
functionality on a case-by-case basis. While many actions
have a candid name that gives away their functionality (e.g.
payout from contract betdicegroup), some are less expres-
sive (e.g. m from user pptqipaelyog).
In Figure 1, we show different types of existing actions.
Since actions from non-system contracts have arbitrary de-
signs, we only examine actions that belong to system accounts
for the moment, as these are already known and easier to
classify. We make one exception to this and include the
actions of token contracts, as they have a standardized in-
terface [32]. Overall, we can see that token transfers account
alone for more than 96% of the transactions. The rest of the
transactions are mostly user-defined and appear under “Oth-
ers” in the table, while actions defined in system contracts
only account for a very small percentage of the entire traffic
volume.
2.3.2 Tezos. Tezos has two types of accounts: implicit and
originated. Implicit accounts are similar to the type of ac-
counts found in Ethereum, generated from a public-private
key pair [59]. These accounts can produce—or “bake”—blocks
and receive stakes, but cannot be used as smart contracts.
Bakers’ accounts must be implicit, to be able to produce
blocks. Originated accounts are created and managed by
implicit accounts, but do not have their own private key [39].
They can function as smart contracts, and can delegate voting
rights to bakers’ implicit accounts [36].
“Transactions” on Tezos are termed “operations.” Oper-
ations can be roughly classified into three types: consen-
sus related, governance related and manager operations [3].
Consensus-related operations, as the name indicates, ensure
that all participating nodes agree on one specific version of
data to be recorded on the blockchain. Governance-related
operations are used to propose and select a new set of rules
for the blockchain. However, these events are very rare and
only involve bakers, which is why these operations only rep-
resent a low percentage of the total number of transactions.
Operations mainly consist of delegations and peer-to-peer
payment transactions. As shown in Figure 1, endorsement op-
erations account for a vast majority, 76%, of total operations.
Endorsements are performed by bakers, and a block needs a
minimum of 32 endorsements for it to be accepted [37].
2.3.3 XRPL. XRPL also uses an account-based system to
keep track of asset holdings. Accounts are identified by ad-
dresses derived from a public and private key pair. There are
a handful of “special addresses” that are not derived from a
key pair. Those addresses either serve special purposes (e.g.
acting as the XRP issuer) or exist purely for legacy reasons.
Since a secret key is required to sign transactions, funds sent
to any of these special addresses cannot be transferred out
and are hence permanently lost [61].
XRPL has a large number of predefined transaction types.
We show part of them in Figure 1. The most common trans-
action types are OfferCreate, which is used to create a new
order in a decentralized exchange (DEX) on the ledger, and
Payment, which is used to transfer assets. There are also
other types of transactions such as OfferCancel used to can-
cel a created order or TrustSet which is used to establish a
“trustline” [62] with another account.
2.4 Expected Use Cases
In this section, we describe the primary intended use cases
of the three blockchains and provide a rationale for the way
they are being used, to better understand the dynamics of
actual transactions evaluated in Section 4.
EOSIO. EOSIO was designed with the goal of high throughput
and has a particularity compared to many other blockchains:
there are no direct transaction fees. Resources such as CPU,
RAM and bandwidth are rented beforehand, and there is no
fixed or variable fee per transaction [8]. This makes it a very
attractive platform for building decentralized applications
with a potentially high number of micro-payments. Many
IMC ’20, October 27–29, 2020, Virtual Event, USA
Daniel Perez, Jiahua Xu, and Benjamin Livshits
games, especially those with a gambling nature, have been
developed using EOSIO as a payment platform. EOSIO is also
used for decentralized exchanges, where the absence of fees
and the high throughput allow placing orders on-chain, unlike
many decentralized exchanges on other platforms where only
the settlement is performed on-chain [56].
Tezos. Tezos was one of the first blockchains to adopt on-
chain governance. This means that participants can vote
to dynamically amend the rules of the consensus. A major
advantage of this approach is that the blockchain can keep
running without the need of hard forks, as often observed for
other blockchains [1, 2]. Another characteristic of Tezos is
the use of a strongly typed programming language with well-
defined semantics [38] for its smart contracts, which makes it
easier to provide these for correctness. These properties make
Tezos a very attractive blockchain for financial applications,
such as the tokenization of assets [9].
XRPL. Similar to EOSIO, XRPL supports the issuance, cir-
culation, and exchange of customized tokens. However, in
contrast to EOSIO, XRPL uses the IOU (“I owe you”) mech-
anism for payments. Specifically, any account on XRPL can
issue an IOU with an arbitrary ticker — be it USD or BTC.
Thus, if Alice pays Bob 10 BTC on XRPL, she is effectively
sending an IOU of 10 BTC, which literally means “I (Alice)
owe you (Bob) 10 BTC”. Whether the BTC represents the mar-
ket value of Bitcoin depends on Alice’s ability to redeem her
“debt” [65]. This feature contributes to the high throughput
on XRPL, as the speed to transfer a specific currency is
no more constrained by its original blockchain-related lim-
itations: For example, the transfer of BTC on XRPL is not
limited by the block production interval of the actual Bitcoin
blockchain (typically 10 minutes to an hour to fully commit a
block), and the transfer of USD is not limited to the speed of
the automated clearing house (ACH) (around two days [33]).
3 METHODOLOGY
In this section, we describe the methodology used to measure
the transactional throughput of the selected blockchains.
3.1 Definitions
We first introduce important definitions used in the rest the
paper.
Throughput-related definitions. When quantified, a through-
put value is expressed in TPS (transactions per second).
capacity that
Alleged Capacity The
theoretical
a
blockchain claims to be able to achieve
Average Throughput Average throughput recorded on the
network throughout the observation period
Maximum Throughput Maximum throughput recorded
on the network during the observation period
Blockchain-related definitions. We unify the terms that we use
across the systems analyzed in this work. We sometimes di-
verge from the definition provided by a particular blockchain
for terminological consistency.
Block Entity recorded on a blockchain and included as
part of the blockchain to advance its state. Blocks are
named as such on EOSIO and Tezos, the equivalent of
which on XRPL is termed a “ledger”.
Transaction Entity included at the top-level of a block
and typically representing an atomic state transition.
These are named as such on EOSIO and XRPL but
are called “operations” in Tezos.
Action Entity included as part of the transaction and
describing what the transaction should do. EOSIO and
Tezos can have multiple actions per transaction. A
single transaction containing multiple actions is only
counted towards throughput once. Actions are called as
such in EOSIO and are the “contents” of an “operation”
on Tezos. XRPL does not feature this concept and each
XRPL transaction can be thought of as a single action.
3.2 Measurement Framework
We implement a framework to measure throughput on the
different blockchains. Our framework allows one to fetch
historical data for all of the blockchains analyzed in this
work, and to compute several statistics regarding blocks,
transactions, actions and users. Transactions and actions
can be, where relevant, aggregated by time, type, sender
or receivers. Our framework is publicly available1 and can
easily be extended to add not only new statistics but also
new blockchains. We provide an extended overview of the
framework in Appendix.
3.3 Data Collection
We collect historical data on the three blockchains from
October 1, 2019 to April 30, 2020. We provide an overview of
the characteristics of the data in Figure 2. We note that the
numbers of transactions is not the same as in Figure 1 as here
we count only a transaction once, while in the previous table
we counted all the actions included in a single transaction.
For all three of the blockchains, we first pinpoint the blocks
which correspond to the start and end of our measurement
period and use our framework to collect all the blocks included
in this range. Each time, we use publicly available nodes or
data providers to retrieve the necessary data.
EOSIO. EOSIO nodes provide an RPC API [22] which al-
lows clients to retrieve the content of a single block, through
the get_block endpoint [18]. EOSIO also has a list of block
producers who usually provide a publicly accessible RPC
endpoint. Out of 32 officially advertised endpoints, we short-
list 6 that have a generous rate limit with stable latency and
throughput.
We collect data from block 82,152,667 to block 118,286,375,
or a total of 36,133,709 blocks containing 631,445,236 trans-
actions, representing more than 260GB of data.
Tezos. Similar to EOSIO, Tezos full nodes provide an RPC
API and some bakers make it publicly available. We measure
the latency and throughput of several nodes and select the one
1https://github.com/danhper/blockchain-analyzer
Revisiting Transactional Statistics of
High-scalability Blockchains
IMC ’20, October 27–29, 2020, Virtual Event, USA
from
Block index
to
Count
of blocks
EOSIO 82,152,667 118,286,375 36,133,709
Tezos
301,822
630,709
XRPL 50,399,027
4,753,965
932,530
55,152,991
Count
of transactions
631,445,236
7,890,133
271,546,797
Storage
(.gzip, GB)
264
4,000 [30]
1.4
40 [4]
130 65,000 [44]
Throughput (TPS)
Alleged Max Average
34
0.43
15
136
0.57
56
Figure 2: Characterizing the datasets for each blockchain. All measurements are performed from October 1, 2019 to April 30, 2020. Max
throughput is the average TPS within a 6-hour interval that has the highest count of transactions. Storage size is computed with data saved as
JSON Lines with one block per line and compressed using gzip level 6 of compression.
for which we obtained the best results [54]. We obtain 301,822
blocks containing 7,890,133 transactions, for a total size of
approximately 1.4 GB of data.
XRPL. XRPL has both an RPC API and a websocket API
with similar features. Although there are no official public
endpoints for XRPL, a high-availability websocket endpoint
is provided by the XRP community [58]. We use the ledger
method of the Websocket API to retrieve the data in the
same way we did with EOSIO and Tezos.
In addition, we use the API provided by the ledger explorer
XRP Scan [48] to retrieve account information including user-
name and parent account.2 Since large XRP users such as
exchanges often have multiple accounts, this account infor-
mation can be used to identify and cluster accounts.
In total, we analyze 4,753,965 blocks covering seven months
of data, and containing a total of more than 150 million trans-
actions. The total size of the compressed data is about 130
GB.
4 DATA ANALYSIS
In this section, we present summary statistics and high-level
illustrations of the transactions contained in the datasets of
the three different blockchains.
4.1 Transaction Overview
In Figure 3, we decompose the number of actions into dif-
ferent categories. XRPL and Tezos have well-defined action
types, and we use the most commonly found ones to classify
the throughput. EOSIO does not have pre-defined action
types: contract creators can decide on arbitrary action types.
To be able to classify the actions and understand where
throughput on EOSIO is coming from, we manually label the
top 100 contracts, representing more than 99% of the total
throughput, by grouping them into different categories and
assign one of the categories to each action.
EOSIO. Interestingly, there is a huge spike in the number of
token actions from the November 1, 2019 onward. We find
that this is due to a new coin called EIDOS [17] giving away
tokens. We will describe this more extensively as a case study
in Section 5.1. Before this peak, the number of actions on
EOSIO was vastly dominated by games, in particular betting
games.
2A parent account sends initial funds to activate a new account.
Tezos. Tezos has a high number of “endorsements”—76%,