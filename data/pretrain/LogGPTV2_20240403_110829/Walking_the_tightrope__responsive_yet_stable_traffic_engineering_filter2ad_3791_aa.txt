title:Walking the tightrope: responsive yet stable traffic engineering
author:Srikanth Kandula and
Dina Katabi and
Bruce S. Davie and
Anna Charny
Walking the Tightrope: Responsive Yet Stable
Traf(cid:2)c Engineering
Srikanth Kandula
MIT CSAIL
PI:EMAIL
Dina Katabi
MIT CSAIL
PI:EMAIL
Bruce Davie
Cisco Systems
Anna Charny
Cisco Systems
PI:EMAIL
PI:EMAIL
ABSTRACT
Current intra-domain Traf(cid:2)c Engineering (TE) relies on of(cid:3)ine
methods, which use long term average traf(cid:2)c demands.
It can-
not react to realtime traf(cid:2)c changes caused by BGP reroutes, di-
urnal traf(cid:2)c variations, attacks, or (cid:3)ash crowds. Further, current
TE deals with network failures by pre-computing alternative rout-
ings for a limited set of failures. It may fail to prevent congestion
when unanticipated or combination failures occur, even though the
network has enough capacity to handle the failure.
This paper presents TeXCP, an online distributed TE protocol
that balances load in realtime, responding to actual traf(cid:2)c demands
and failures. TeXCP uses multiple paths to deliver demands from
an ingress to an egress router, adaptively moving traf(cid:2)c from over-
utilized to under-utilized paths. These adaptations are carefully de-
signed such that, though done independently by each edge router
based on local information, they balance load in the whole net-
work without oscillations. We model TeXCP, prove the stability of
the model, and show that it is easy to implement. Our extensive
simulations show that, for the same traf(cid:2)c demands, a network us-
ing TeXCP supports the same utilization and failure resilience as a
network that uses traditional of(cid:3)ine TE, but with half or third the
capacity.
Categories and Subject Descriptors
C.2.2 [Computer Communication Networks]: Network Proto-
cols; C.2.3 [Computer Communication Networks]: Network
Operations(cid:151)Network Management
General Terms
Algorithms, Design, Management, Reliability, Performance.
Keywords
TeXCP, Traf(cid:2)c Engineering, Responsive, Online, Distributed, Sta-
ble.
1.
INTRODUCTION
Intra-domain Traf(cid:2)c Engineering (TE) is an essential part of
modern ISP operations. The TE problem is typically formalized as
minimizing the maximum utilization in the network [5, 6, 15, 26].
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for pro(cid:2)t or commercial advantage and that copies
bear this notice and the full citation on the (cid:2)rst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speci(cid:2)c
permission and/or a fee.
SIGCOMM’05, August 22–26, 2005, Philadelphia, Pennsylvania, USA.
Copyright 2005 ACM 1›59593›009›04/05/0008 ...$5.00.
Seattle
San
Diego
A
B
Boston
New
York
Figure 1: For each Ingress-Egress (IE) pair, there is a TeXCP agent at
the ingress router, which balances the IE traf(cid:2)c across available paths
in an online, distributed fashion.
This allows the ISP to balance the load and avoid hot spots and fail-
ures, which increases reliability and improves performance. Fur-
thermore, ISPs upgrade their infrastructure when the maximum
link utilization exceeds a particular threshold (about 40% utiliza-
tion [20]). By maintaining lower network utilization for the same
traf(cid:2)c demands, traf(cid:2)c engineering allows the ISP to make do with
existing infrastructure for a longer time, which reduces cost.
Recent years have witnessed signi(cid:2)cant advancements in traf-
(cid:2)c engineering methods, from both the research and operational
communities [6, 12, 15, 40]. TE methods like the OSPF weight op-
timizer (OSPF-TE) [15, 16] and the MPLS multi-commodity (cid:3)ow
optimizer [26] have shown signi(cid:2)cant reduction in maximum uti-
lization over pure shortest path routing. Nonetheless, because of its
of(cid:3)ine nature, current TE has the following intrinsic limitations:
(cid:15) It might create a suboptimal or even inadequate load distribution
for the realtime traf(cid:2)c. This is because of(cid:3)ine TE attempts to
balance load given the long term traf(cid:2)c demands averaged over
multiple days (potentially months). But the actual traf(cid:2)c may
differ from the long term demands due to BGP re-routes, external
or internal failures, diurnal variations, (cid:3)ash crowds, or attacks.
(cid:15) Its reaction to failures is suboptimal. Of(cid:3)ine TE deals with net-
work failures by pre-computing alternative routings for a lim-
ited set of failures [16]. Since the operator cannot predict which
failure will occur, of(cid:3)ine TE must (cid:2)nd a routing that works rea-
sonably well under a large number of potential failures. Such a
routing is unlikely to be optimal for any particular failure. As
a result, current TE may fail to prevent congestion when unan-
ticipated or combination failures occur, even though the network
may have enough capacity to handle the failure.
The natural next step is to use online traf(cid:2)c engineering, which
reacts to realtime traf(cid:2)c demands and failures. Currently, online
TE research is still in its infancy. Indeed it is challenging to build a
distributed scheme that responds quickly to changes in traf(cid:2)c, yet
does not lead to oscillations, as demonstrated by the instability of
the early ARPAnet routing [23]. Prior online TE methods are either
centralized [9, 10] or assume an oracle that provides global knowl-
edge of the network [12], and most lack a stability analysis [34,39].
253Term
Network Utilization
or Max-Utilization
Path Utilization
IE (cid:3)ow
Active path
De(cid:2)nition
The maximum utilization over all links in the
network
Maximum link utilization along a path
The traf(cid:2)c (cid:3)ow from an ingress to an egress
router along a particular path
A path on which the TeXCP agent is sending
traf(cid:2)c (i.e., xsp > 0)
Table 1: De(cid:2)nitions of terms used in the paper.
There is a need for an online TE protocol that combines practical
implementation, clear performance advantage, and stable behavior.
Furthermore, the community needs to quantify the performance gap
between online and of(cid:3)ine TE.
This paper presents TeXCP, a distributed responsive and stable
online traf(cid:2)c engineering protocol. Our approach simpli(cid:2)es the de-
sign and analysis of online TE by splitting the problem into two
components. First, a load-balancer takes as input the state of the
network and shifts traf(cid:2)c from one path to another to minimize
the utilization. Second, each path in the network has a closed-loop
feedback controller that collects network feedback and ensures traf-
(cid:2)c stability on the path. Making the feedback controller work at a
faster time scale than the load balancer achieves multiple goals: 1)
The feedback controller is easy to stabilize by building on recent
ideas in applying closed-loop feedback control to congestion con-
trol [21]. 2) The feedback controller stabilizes the network before
the load balancer makes new decisions, giving the allusion of in-
stantaneous feedback. 3) As a result, the load balancer is easier
to design and analyze because it can ignore the complexity of the
underlying network.
TeXCP works as follows.
In an ISP network, like the one in
Fig. 1, each ingress router may have traf(cid:2)c demands for a particu-
lar egress router or set of routers, e.g., traf(cid:2)c demands from Seattle
to Boston, Boston to New York, etc. We assign to each ingress-
egress (IE) pair a TeXCP agent that resides at the ingress router
and uses multiple paths or tunnels to deliver traf(cid:2)c from the ingress
to the egress. The TeXCP agent uses light-weight explicit feed-
back from the core routers to discover path utilization. It adaptively
moves traf(cid:2)c from over-utilized to under-utilized paths. Traf(cid:2)c is
split among paths at the granularity of a (cid:3)ow, to avoid reorder-
ing TCP packets. TeXCP’s load movements are carefully designed
such that, though done independently by each edge router based
on local information, the system balances load throughout the net-
work. We model TeXCP under standard assumptions and show it is
stable. Further, our analysis provides a systematic approach to set
the system parameters to constant values that work independent of
the traf(cid:2)c demands and the failure scenarios.
Using simulations of multiple tier-1 topologies from Rocket-
fuel [30], many different traf(cid:2)c matrices, and changing network
conditions, we evaluate TeXCP and study the performance gap be-
tween online and of(cid:3)ine TE methods. Our results can be summa-
rized as follows:
Var De(cid:2)nition
Rs
Ps
rsp
xsp
usp
ul
Cl
Pl
us
Total Traf(cid:2)c Demand of IE pair s
Set of paths available to IE pair s
Traf(cid:2)c of IE pair s sent on path p. i.e., Rs = P rsp
Fraction of IE, s, traf(cid:2)c sent on path p, called path weight.
The utilization of path p observed by IE pair s
The utilization of link l
The capacity of link l
Set of paths that traverse link l
Weighted average utilization of paths used by IE pair s
Table 2: The variables most-used in the paper. All of these variables
are functions of time.
20% away from optimal, in the base case, but it is highly sensi-
tive to failures and deviations from the traf(cid:2)c matrix, sometimes
creating a utilization that is twice or thrice the optimal.
(cid:15) Compared to MATE [12], a prior online TE proposal, TeXCP
converges faster, achieves a better load balance, and does not
assume an oracle that provides global knowledge of the network.
(cid:15) TeXCP automatically prunes additional paths whose usage does
not reduce the maximum utilization in the network, and prefers
shorter paths over longer paths.
(cid:15) Finally, as explained in x6, TeXCP is easy to implement without
any modi(cid:2)cations to current router technology.
Our terminology and variables are in Tables 1 and 2.
2. PROBLEM FORMALIZATION
In an ISP network, like the one in Fig. 1, each IE pair, s, has input
traf(cid:2)c rate Rs and multiple paths Ps that can be used to deliver the
traf(cid:2)c from ingress to egress. A fraction of the IE traf(cid:2)c xsp is
routed along path p. The problem is: How to split the traf(cid:2)c of
each IE pair across its available paths to minimize the maximum
link utilization in the network, i.e.:
min
xsp
max
l2L
ul;
subject to the constraints:
Eq. 1 states the optimization problem showing that we want to (cid:2)nd
the traf(cid:2)c split ratios, fxspg, that minimize the maximum utiliza-
tion across all links, l 2 L. Eqs. 2(cid:150) 4 are the constraints to the
optimization problem; Eq. 2 denotes that link utilization, ul, is the
total traf(cid:2)c on the link divided by its capacity, Cl; Eq. 3 ensures
that the traf(cid:2)c sent by an IE pair sums up to its demands; Eq. 4
states that the traf(cid:2)c share on any path cannot be negative.
ul = X
s
xsp = 1;
xsp (cid:21) 0;
X
p2Ps
xsp (cid:1) Rs
Cl
X
p2Ps;p3l
8s;
8p 2 Ps; 8s:
;
(1)
(2)
(3)
(4)
(cid:15) For the same traf(cid:2)c demands, a network that uses TeXCP can
support the same utilization and failure resilience as a network
that uses traditional of(cid:3)ine TE, but with a half or a third the ca-
pacity. This signi(cid:2)cantly reduces cost for the ISP.
(cid:15) The network utilization under TeXCP is always within a few
percent of the optimal value, independent of failures or devi-
In comparison, InvCap weight
ations from the traf(cid:2)c matrix.
setting [11], a widely used TE method, results in an average net-
work utilization 80% higher than optimal in the base case, and
twice as high under failures. OSPF-TE, a state-of-the-art of(cid:3)ine
TE technique [15,16], achieves a network utilization that is about
3. TEXCP
In a TeXCP network, edge and core routers collaborate to bal-
ance the load and route around failures. The vast majority of the
new functionalities are at edge routers, and can be built in soft-
ware. The ingress router in each IE pair runs a TeXCP agent. The
ISP con(cid:2)gures each agent with a set of paths it can use to deliver its
IE traf(cid:2)c, and pins the paths using a standard protocol like RSVP-
TE [7]. The TeXCP agent probes each path to discover its utiliza-
tion and failure state, and splits the IE traf(cid:2)c across these paths to
minimize the max-utilization. It adapts the split ratios in realtime
to changing network conditions. The different TeXCP agents work
independently, without exchanging information. Their combined
effort optimizes the maximum utilization and balances the load.
Before delving into the details, we note that TeXCP does not care
which IP pre(cid:2)xes are mapped to which ingress-egress pair. BGP
can freely reroute an IP pre(cid:2)x and change its egress points. Further-
more, although our description focuses on point-to-point traf(cid:2)c, the
architecture can easily handle point-to-multipoint traf(cid:2)c.1
3.1 Path Selection
The ISP con(cid:2)gures each TeXCP agent with a set of paths that
it can use to deliver traf(cid:2)c between the corresponding IE pair. By
default, TeXCP picks the K-shortest paths that connect the ingress
to the egress router, where a path length is set to its propagation
delay. Though preferable, these paths need not be link-disjoint.
A few points are worth noting. First, the choice of the per-IE
paths is based solely on the topology and is independent of the state
of each path (e.g., congestion, failure). Thus, paths are computed
of(cid:3)ine and rarely re-computed. Second, a TeXCP agent uses the re-
altime congestion and failure state of a path to determine whether
to use a path and how much traf(cid:2)c to send on the path. Thus, the ac-
tual number of paths used by a TeXCP agent may be much smaller
than K and depends on whether increasing the number of active
paths decreases the max-utilization. The default is K = 10 paths.
3.2 Probing Network State
To balance its IE pair traf(cid:2)c, a TeXCP agent needs to keep track
of the utilization of each path available to it (i.e., maximum link
utilization along the path). The TeXCP agent maintains a probe
timer which (cid:2)res every Tp seconds. Tp should be larger than
the maximum round trip time in the network. The default value is
100ms. Smaller values of Tp make TeXCP converge faster whereas
larger values decrease the overhead (x6). When the timer (cid:2)res, the
TeXCP agent sends a small probe on each of its paths. A router that
sees a probe packet checks whether the utilization reported in the
packet is smaller than the utilization of its output link, in which case
it overwrites the utilization in the probe with its own. The egress
node at the end of the path unicasts the contents of the probe packet
to the ingress node, which delivers it to the appropriate TeXCP
agent. This packet (i.e., the probe’s ack) goes directly to the ingress
node and is not processed by intermediate routers.
Note that probe packets, like ICMP packets, do not follow the
fast data path, and hence need no modi(cid:2)cations to router hardware.
Slow path processing may add an extra 1(cid:150)2ms of delay to the probe
at each router [18]. We show that this is negligible for our pur-
pose (x5). Finally, we use probes only for ease of explanation; an
equivalent approach with much lower overhead is described in x6.
Probe Loss is an indication of failure (or congestion) along the
path. In TeXCP, probes have sequence numbers. If a previous probe
is not acknowledged by the next time the probe timer (cid:2)res, the agent
exponentially increases its estimate of corresponding path utiliza-
tion to max(1; (cid:26)usp), where usp is the path utilization from the
previous Tp, and (cid:26) is a parameter > 1, that defaults to 1:2. As
a result, failed and highly congested paths are quickly recognized,
causing TeXCP to divert traf(cid:2)c from them to less congested paths.
3.3 The Load Balancer
Each TeXCP agent runs a load balancer that splits the traf(cid:2)c of
an IE pair, s, among its available paths, Ps, with the objective of
maintaining the max-utilization in the network as low as possible.2
1Multi-exit traf(cid:2)c can be dealt with by imagining that the potential exit routers are
connected to a virtual egress node.
2For the interested reader, we note that the standard approach to solve such optimiza-
The load balancer maintains a decision timer, which (cid:2)res
every Td seconds. For stability reasons (see x4), the decision inter-