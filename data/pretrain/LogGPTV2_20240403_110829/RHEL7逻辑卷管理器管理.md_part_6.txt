```
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#physvol_init}4.2.1.2. 初始化物理卷 {.title}
:::
[]{#LVM_CLI.html#idm140426114208416
.indexterm}[]{#LVM_CLI.html#idm140426144033696 .indexterm}
::: para
使用 `pvcreate`{.command}
命令初始化要作为物理卷使用的块设备。初始化是模拟格式化文件系统。
:::
::: para
以下命令将 `/dev/sdd`{.filename}、`/dev/sde`{.filename} 和
`/dev/sdf`{.filename} 作为 LVM 物理卷初始化，以供之后成为 LVM
逻辑卷的一部分使用。
:::
``` screen
# pvcreate /dev/sdd /dev/sde /dev/sdf
```
::: para
若只是初始化分区而不是整张磁盘，则应在该分区中运行 `pvcreate`{.command}
命令。以下示例将分区 `/dev/hdb1`{.filename} 作为 LVM
物理卷初始化，以供之后成为 LVM 逻辑卷的一部分使用。
:::
``` screen
# pvcreate /dev/hdb1
```
[]{#LVM_CLI.html#idm140426154955552 .indexterm}
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#blockd_scan}4.2.1.3. 扫描块设备 {.title}
:::
[]{#LVM_CLI.html#idm140426154952704
.indexterm}[]{#LVM_CLI.html#idm140426154951264
.indexterm}[]{#LVM_CLI.html#idm140426170754160 .indexterm}
::: para
可使用 `lvmdiskscan`{.command}
命令扫描要作为物理卷使用的块设备，如下所示。
:::
``` screen
# lvmdiskscan
  /dev/ram0                    [       16.00 MB]
  /dev/sda                     [       17.15 GB]
  /dev/root                    [       13.69 GB]
  /dev/ram                     [       16.00 MB]
  /dev/sda1                    [       17.14 GB] LVM physical volume
  /dev/VolGroup00/LogVol01     [      512.00 MB]
  /dev/ram2                    [       16.00 MB]
  /dev/new_vg/lvol0            [       52.00 MB]
  /dev/ram3                    [       16.00 MB]
  /dev/pkl_new_vg/sparkie_lv   [        7.14 GB]
  /dev/ram4                    [       16.00 MB]
  /dev/ram5                    [       16.00 MB]
  /dev/ram6                    [       16.00 MB]
  /dev/ram7                    [       16.00 MB]
  /dev/ram8                    [       16.00 MB]
  /dev/ram9                    [       16.00 MB]
  /dev/ram10                   [       16.00 MB]
  /dev/ram11                   [       16.00 MB]
  /dev/ram12                   [       16.00 MB]
  /dev/ram13                   [       16.00 MB]
  /dev/ram14                   [       16.00 MB]
  /dev/ram15                   [       16.00 MB]
  /dev/sdb                     [       17.15 GB]
  /dev/sdb1                    [       17.14 GB] LVM physical volume
  /dev/sdc                     [       17.15 GB]
  /dev/sdc1                    [       17.14 GB] LVM physical volume
  /dev/sdd                     [       17.15 GB]
  /dev/sdd1                    [       17.14 GB] LVM physical volume
  7 disks
  17 partitions
  0 LVM physical volume whole disks
  4 LVM physical volumes
```
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#physvol_display}4.2.2. 显示物理卷 {.title}
:::
[]{#LVM_CLI.html#idm140426151981504
.indexterm}[]{#LVM_CLI.html#idm140426151980064 .indexterm}
::: para
可使用以下三个命令显示 LVM
物理卷属性：`pvs`{.command}、`pvdisplay`{.command} 和
`pvscan`{.command}。
:::
::: para
`pvs`{.command}
命令以可配置的格式提供物理卷信息，每行显示一个物理卷。`pvs`{.command}
命令提供大量格式控制，供脚本使用。有关使用 `pvs`{.command}
命令自定义输出结果的详情，请查看 [第 4.8 节 "LVM
的自定义报告"](#LVM_CLI.html#custom_report){.xref}。
:::
[]{#LVM_CLI.html#idm140426175427456 .indexterm}
::: para
`pvdisplay`{.command}
命令为每个物理卷提供详细的多行输出结果。它以固定格式显示物理属性（大小、扩展、卷组等）。
:::
::: para
以下是在单一物理卷中使用 `pvdisplay`{.command} 命令显示的输出结果示例。
:::
``` screen
# pvdisplay
  --- Physical volume ---
  PV Name               /dev/sdc1
  VG Name               new_vg
  PV Size               17.14 GB / not usable 3.40 MB
  Allocatable           yes
  PE Size (KByte)       4096
  Total PE              4388
  Free PE               4375
  Allocated PE          13
  PV UUID               Joqlch-yWSj-kuEn-IdwM-01S9-XO8M-mcpsVe
```
[]{#LVM_CLI.html#idm140426175422896 .indexterm}
::: para
`pvscan`{.command} 命令在系统中为物理卷扫描所有支持的 LVM 块设备。
:::
::: para
下面的命令显示所有找到的物理设备：
:::
``` screen
# pvscan
 PV /dev/sdb2   VG vg0   lvm2 [964.00 MB / 0   free]
 PV /dev/sdc1   VG vg0   lvm2 [964.00 MB / 428.00 MB free]
 PV /dev/sdc2            lvm2 [964.84 MB]
 Total: 3 [2.83 GB] / in use: 2 [1.88 GB] / in no VG: 1 [964.84 MB]
```
::: para
可在 `lvm.conf`{.filename}
文件中定义过滤器，以便这个命令可以避免扫描特定物理卷。有关使用过滤器控制要扫描设备的详情，请查看
[第 4.5 节 "使用过滤器控制 LVM
设备扫描"](#LVM_CLI.html#lvm_filters){.xref}。
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#PV_change}4.2.3. 防止在物理卷中分配 {.title}
:::
[]{#LVM_CLI.html#idm140426157262320
.indexterm}[]{#LVM_CLI.html#idm140426157260880 .indexterm}
::: para
可使用 `pvchange`{.command}
命令防止在一个或多个物理卷的剩余空间中分配物理扩展。如果有磁盘错误或要删除该物理卷时需要这个操作。
:::
::: para
以下命令不允许在 `/dev/sdk1`{.filename} 中分配物理扩展。
:::
``` screen
# pvchange -x n /dev/sdk1
```
::: para
还可使用 `pvchange`{.command} 命令的 `-xy`{.option}
参数允许分配之间已禁止分配的扩展。
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#PV_resize}4.2.4. 重新定义物理卷大小 {.title}
:::
[]{#LVM_CLI.html#idm140426105744032
.indexterm}[]{#LVM_CLI.html#idm140426105742592
.indexterm}[]{#LVM_CLI.html#idm140426105741152 .indexterm}
::: para
若出于任何原因需要更改底层块设备的大小，请使用 `pvresize`{.command}
命令使用新大小更新 LVM。可在 LVM 使用物理卷的同时执行这个命令。
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#PV_remove}4.2.5. 删除物理卷 {.title}
:::
[]{#LVM_CLI.html#idm140426167703504
.indexterm}[]{#LVM_CLI.html#idm140426167702064
.indexterm}[]{#LVM_CLI.html#idm140426167700624 .indexterm}
::: para
如果 LVM 不再需要使用某个设备，则可使用 `pvremove`{.command} 命令删除
LVM 标签。执行 `pvremove`{.command} 命令将空白物理卷中的 LVM
元数据归零。
:::
::: para
如果要删除的物理卷目前是某个卷组的一部分，则必须使用
`vgreduce`{.command} 命令将其从卷组中删除，如 [第 4.3.7 节
"从卷组中删除物理卷"](#LVM_CLI.html#VG_remove_PV){.xref} 所述。
:::
``` screen
# pvremove /dev/ram15
  Labels on physical volume "/dev/ram15" successfully wiped
```
:::
:::
::: section
::: titlepage
# [⁠]{#LVM_CLI.html#VG_admin}4.3. 卷组管理 {.title}
:::
[]{#LVM_CLI.html#idm140426103985552 .indexterm}
::: para
本小节论述了执行各种卷组管理的命令。
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#VG_create}4.3.1. 创建卷组 {.title}
:::
::: para
[]{#LVM_CLI.html#idm140426178687040 .indexterm}
[]{#LVM_CLI.html#idm140426178685920 .indexterm}
[]{#LVM_CLI.html#idm140426178684800 .indexterm} 请使用
`vgcreate`{.command}
命令为一个或多个物理卷创建卷组。`vgcreate`{.command}
命令根据名称新建卷组，并至少在其中添加一个物理卷。
:::
::: para
以下命令创建名为 `vg1`{.filename}，包含物理卷 `/dev/sdd1`{.filename} 和
`/dev/sde1`{.filename} 的卷组。
:::
``` screen
# vgcreate vg1 /dev/sdd1 /dev/sde1
```
[]{#LVM_CLI.html#idm140426105515568 .indexterm}
::: para
使用物理卷创建卷组时，默认将其磁盘空间分成大小为 4MB
的扩展。这个扩展是逻辑卷增大或减小的最小的量。大的扩展数目不会影响逻辑卷的
I/O 性能。
:::
::: para
如果默认扩展大小不适合您，可使用 `vgcreate`{.command} 命令的
`-s`{.option} 选项指定扩展大小。可以使用 `vgcreate`{.command} 命令的
`-p`{.option} 或 `-l`{.option} 参数设定物理卷或逻辑卷数量限制。
:::
[]{#LVM_CLI.html#idm140426104497296
.indexterm}[]{#LVM_CLI.html#idm140426104495856 .indexterm}
::: para
默认情况下，卷组会根据常识规则分配物理扩展，比如不要在同一物理卷中放置平行条带。这是
`normal`{.command} 分配策略。可以使用 `vgcreate`{.command} 命令的
`--alloc`{.command} 参数指定
`contiguous`{.command}、`anywhere`{.command} 或者 `cling`{.command}
策略。通常只在特殊情况下才会需要 `normal`{.command}
以外的分配策略，比如或指定非常规或非标准扩展。有关 LVM
如何分配物理扩展的详情，请查看 [第 4.3.2 节 "LVM
分配"](#LVM_CLI.html#LVM_allocation){.xref}。
:::
[]{#LVM_CLI.html#idm140426159634368
.indexterm}[]{#LVM_CLI.html#idm140426159632928 .indexterm}
::: para
LVM 卷组及底层逻辑卷均包含在 `/dev`{.filename}
目录的设备特殊文件目录树中，其布局为：
:::
``` screen
/dev/vg/lv/
```
::: para
例如：如果创建了两个卷组，即 `myvg1`{.filename} 和
`myvg2`{.filename}，每个均包含名为 `lv01`{.filename}、`lv02`{.filename}
和 `lv03`{.filename} 的三个逻辑卷，则会生成六个设备特殊文件，即：
:::
``` screen
/dev/myvg1/lv01
/dev/myvg1/lv02
/dev/myvg1/lv03
/dev/myvg2/lv01
/dev/myvg2/lv02
/dev/myvg2/lv03
```
::: para
如果对应逻辑卷目前未激活，则不会显示该设备的特殊文件。
:::
[]{#LVM_CLI.html#idm140426142220160 .indexterm}
::: para
64 位 CPU 中的最大 LVM 的设备大小为 8 EB。
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#LVM_allocation}4.3.2. LVM 分配 {.title}