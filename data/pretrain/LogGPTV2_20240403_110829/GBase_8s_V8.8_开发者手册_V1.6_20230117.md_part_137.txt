16389
(1row)
gbase=#SELECT*FROMDBE_PLDEBUGGER.turn_on(16389);
nodename|port
----------+------
datanode| 0
(1row)
 开始调试
server端执行存储过程，会在存储过程内第一条SQL语句前hang住，等待debug端发
送的调试消息。仅支持直接执行存储过程的调试，不支持通过trigger调用执行的存储过程
调试。
gbase=#calltest_debug(1);
再 起 一 个 客 户 端 ， 作 为 debug 端 ， 通 过 turn_on 返 回 的 数 据 ， 调 用
DBE_PLDEBUGGER.attach关联到该存储过程上进行调试。
gbase=#SELECT*FROMDBE_PLDEBUGGER.attach('datanode',0);
funcoid| funcname |lineno| query
---------+------------+--------+----------------------------------
16389|test_debug| 3| INSERTINTOt1(a)VALUES(x);
(1row)
在执行attach的客户端调试，执行下一条statement。
gbase=#SELECT*FROMDBE_PLDEBUGGER.next();
funcoid| funcname |lineno| query
---------+------------+--------+----------------------
16389|test_debug| 0|[EXECUTIONFINISHED]
南大通用数据技术股份有限公司
1125
GBase 8s V8.8开发者手册
(1row)
在执行attach的客户端调试，可以执行以下变量操作
gbase=#SELECT*FROMDBE_PLDEBUGGER.info_locals();--打印全部变量
varname|vartype|value|package_name|isconst
---------+---------+-------+--------------+---------
x |int4 |1 | |f
(1row)
gbase=#SELECT*FROMDBE_PLDEBUGGER.set_var('x',2);--变量赋值
set_var
---------
t
(1row)
gbase=#SELECT*FROMDBE_PLDEBUGGER.print_var('x');--打印单个变量
varname|vartype|value|package_name|isconst
---------+---------+-------+--------------+---------
x |int4 |2 | |f
(1row)
直接执行完成当前正在调试的存储过程。
gbase=#SELECT*FROMDBE_PLDEBUGGER.continue();
funcoid| funcname |lineno| query
---------+------------+--------+----------------------
16389|test_debug| 0|[EXECUTIONFINISHED]
(1row)
直接退出当前正在调试的存储过程，不执行尚未执行的语句。
gbase=#SELECT*FROMDBE_PLDEBUGGER.abort();
abort
-------
南大通用数据技术股份有限公司
1126
GBase 8s V8.8开发者手册
t
(1row)
client端查看代码信息并识别可以设置断点行号。
gbase=#SELECT*FROMDBE_PLDEBUGGER.info_code(16389);
lineno| query |canbreak
--------+-----------------------------------------------------------+----------
|CREATEORREPLACEPROCEDUREpublic.test_debug(IN xINT)|f
1|AS DECLARE |f
2|BEGIN |f
3| INSERTINTOt1(a)VALUES(x); |t
4| DELETEFROMt1WHEREa=x; |t
5|END; |f
6|/ |f
(7rows)
设置断点。
gbase=#SELECT*FROMDBE_PLDEBUGGER.add_breakpoint(16389,4);
lineno| query |canbreak
--------+-----------------------------------------------------------+----------
|CREATEORREPLACEPROCEDUREpublic.test_debug(IN xINT)|f
1|AS DECLARE |f
2|BEGIN |f
3| INSERTINTOt1(a)VALUES(x); |t
4| DELETEFROMt1WHEREa=x; |t
5|END; |f
6|/ |f
(7rows)
查看断点信息。
南大通用数据技术股份有限公司
1127
GBase 8s V8.8开发者手册
gbase=#SELECT*FROMDBE_PLDEBUGGER.info_breakpoints();
breakpointno|funcoid|lineno| query |enable
--------------+---------+--------+---------------------------------+--------
0| 16389| 4| DELETEFROMt1WHEREa=x;|t
(1row)
执行至断点。
gbase=#SELECT*FROMDBE_PLDEBUGGER.continue();
funcoid| funcname |lineno| query
---------+------------+--------+---------------------------------
16389|test_debug| 4| DELETEFROMt1WHEREa=x;
(1row)
存储过程执行结束后，调试会自动退出，再进行调试需要重新attach关联。如果server
端不需要继续调试，可执行turn_off关闭，或退出session。具体调试接口请见下面列表。
表 DBE_PLDEBUGGER
接口名称 描述
DBE_PLDEBUGGER.turn_on server端调用，标记存储过程可以调试，调用后执行该存储
过程时会hang住等待调试信息。
DBE_PLDEBUGGER.turn_of server端调用，标记存储过程关闭调试。
f
DBE_PLDEBUGGER.local_d server端调用，打印本session内所有已turn_on的存储过程。
ebug_server_info
DBE_PLDEBUGGER.attach debug端调用，关联到正在调试存储过程。
DBE_PLDEBUGGER.info_lo debug端调用，打印正在调试的存储过程中的变量当前值。
cals
DBE_PLDEBUGGER.next debug端调用，单步执行。
DBE_PLDEBUGGER.continu debug端调用，继续执行，直到断点或存储过程结束。
e
DBE_PLDEBUGGER.abort debug端调用，停止调试，server端报错长跳转。
南大通用数据技术股份有限公司
1128
GBase 8s V8.8开发者手册
接口名称 描述
DBE_PLDEBUGGER.print_v debug端调用，打印正在调试的存储过程中指定的变量当前
ar 值。
DBE_PLDEBUGGER.info_co debug和server端都可以调用，打印指定存储过程的源语句
de 和各行对应的行号。
DBE_PLDEBUGGER.step debug端调用，单步进入执行。
DBE_PLDEBUGGER.add_br debug端调用，新增断点。
eakpoint
DBE_PLDEBUGGER.delete_ debug端调用，删除断点。
breakpoint
DBE_PLDEBUGGER.info_br debug端调用，查看当前的所有断点。
eakpoints
DBE_PLDEBUGGER.backtra debug端调用，查看当前的调用栈。
ce
DBE_PLDEBUGGER.enable_ debug端调用，激活被禁用的断点。
breakpoint
DBE_PLDEBUGGER.disable debug端调用，禁用已激活的断点。
_breakpoint
DBE_PLDEBUGGER.finish debug端调用，继续调试，直到断点或返回上一层调用栈。
DBE_PLDEBUGGER.set_var debug端调用，为变量进行赋值操作。
20.4.1 DBE_PLDEBUGGER.info_breakpoints
debug端调试过程中，调用info_breakpoints，查看当前的函数断点。
名称 类型 描述
breakpointno OUT integer 断点编号。
funcoid OUT oid 函数ID。
南大通用数据技术股份有限公司
1129
GBase 8s V8.8开发者手册
名称 类型 描述
lineno OUT integer 行号。
query OUT text 断点内容。
enable OUT boolean 是否有效
20.4.2 DBE_PLDEBUGGER.backtrace
debug端调试过程中，调用backtrace，查看当前的调用堆栈。
名称 类型 描述
frameno OUT integer 调用栈编号。
funcname OUT oid 函数名。
lineno OUT integer 行号。
query OUT text 断点内容。
funcoid OUT oid 函数oid。
20.4.3 DBE_PLDEBUGGER.turn_on
该函数用于标记某一存储过程为可调试，执行turn_on后server端可以执行该存储过程
来进行调试。需要用户根据系统表PG_PROC手动获取存储过程oid，传入函数中。turn_on
后本session内执行该存储过程会停在第一条sql前等待debug端的调试操作。该设置会在
session断连后默认被清理掉。目前不支持对启用自治事务的存储过程/函数进行调试。
函数原型为：
DBE_PLDEBUGGER.turn_on(Oid)
RETURNRecord;
表 turn_on 入参和返回值列表
名称 类型 描述
func_oid IN oid 函数oid。
南大通用数据技术股份有限公司
1130
GBase 8s V8.8开发者手册
名称 类型 描述
nodename OUT text 节点名称。
port OUT integer 连接端口号。
20.4.4 DBE_PLDEBUGGER.turn_off
用 于 去 掉 turn_on 添 加 的 调 试 标 记 ， 返 回 值 表 示 成 功 或 失 败 。 可 通 过
DBE_PLDEBUGGER.local_debug_server_info查找已经turn_on的存储过程oid。
函数原型为：
DBE_PLDEBUGGER.turn_off(Oid)
RETURNboolean;
名称 类型 描述
func_oid IN oid 函数oid。
turn_off OUT boolean turn off是否成功。
20.4.5 DBE_PLDEBUGGER.local_debug_server_info
用于查找当前连接中已经turn_on的存储过程oid。便于用户确认在调试哪些存储过程，
需要通过funcoid和pg_proc配合使用。
名称 类型 描述
nodename OUT text 节点名称。
port OUT bigint 端口号。
funcoid OUT oid 存储过程oid。
20.4.6 DBE_PLDEBUGGER.attach
server端执行存储过程，停在第一条语句前，等待debug端关联。debug端调用attach，
传入nodename和port，关联到该存储过程上。
如果调试过程中报错，attach会自动失效；如果调试过程中attach到其他存储过程上，
南大通用数据技术股份有限公司
1131
GBase 8s V8.8开发者手册
当前attach的调试也会失效。
表 attach 入参和返回值列表
名称 类型 描述
nodename IN text 节点名称。
port IN integer 连接端口号。
funcoid OUT oid 函数id。
funcname OUT text 函数名。
lineno OUT integer 当前调试运行的下一行行
号。
query OUT text 当前调试的下一行函数源
码。
20.4.7 DBE_PLDEBUGGER.next
执行存储过程中当前的sql，返回执行的下一条的行数和对应query。
表 next返回值列表
名称 类型 描述
funcoid OUT oid 函数id。
funcname OUT text 函数名。
lineno OUT integer 当前调试运行的下一行行
号。
query OUT text 当前调试的下一行函数源
码。
20.4.8 DBE_PLDEBUGGER.continue
执行当前存储过程，直到下一个断点或结束。返回值表示执行的下一条的行数和对应
query。
函数原型为：
南大通用数据技术股份有限公司
1132
GBase 8s V8.8开发者手册
DBE_PLDEBUGGER.continue()
RETURNRecord;
表 continue 返回值列表
名称 类型 描述
funcoid OUT oid 函数id。
funcname OUT text 函数名。
lineno OUT integer 当前调试运行的下一行行
号。
query OUT text 当前调试的下一行函数源
码。
20.4.9 DBE_PLDEBUGGER.abort
令server端执行的存储过程报错跳出。返回值表示是否成功发送abort。
函数原型为：
DBE_PLDEBUGGER.abort()
RETURNboolean;
表 abort 返回值列表
名称 类型 描述
abort OUT boolean 表示成功或失败。
20.4.10DBE_PLDEBUGGER.print_var
debug端调试过程中，调用print_var，打印当前存储过程内变量中指定的变量名及其取
值。该函数入参frameno表示查询遍历的栈层数，支持不加入该参数调用，缺省为查看最上
层栈变量。
表 print_var入参和返回值列表
名称 类型 描述
var_name IN text 变量。
南大通用数据技术股份有限公司
1133
GBase 8s V8.8开发者手册
名称 类型 描述
frameno IN integer（可选） 指定的栈层数，缺省为最顶
层。
varname OUT text 变量名。
vartype OUT text 变量类型。
value OUT text 变量值。
package_name OUT text 变量对应的package名，预
留使用，当前均为空。
isconst OUT boolean 是否为常量。
20.4.11DBE_PLDEBUGGER.info_code
debug端调试过程中，调用info_code，查看指定存储过程的源语句和各行对应的行号，
行号从函数体开始，函数头部分行号为空。