    [root@node-01]# pcs resource delete d-01
    Attempting to stop: d-01... Stopped
    ```
:::
:::
:::
:::
[]{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters}第 17 章 创建在多个节点上活跃的集群资源（克隆的资源） {.title}
:::
您可以克隆集群资源，以便在多个节点上激活该资源。例如，您可以使用克隆的资源配置
IP
资源的多个实例来分布到群集中以进行节点均衡。您可以克隆资源代理支持的任何资源。克隆由一个资源或一个资源组组成。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
只有同时可在多个节点上活跃的资源才适用于克隆。例如：从挂载非集群文件系统（如共享内存设备的
`ext4`{.literal} ）的 `Filesystem`{.literal} 资源不应被克隆。由于
`ext4`{.literal}
分区不支持集群，因此此文件系统不适用于同时发生在多个节点上的读写操作。
:::
::: section
::: titlepage
# []{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#proc_creating-cloned-resource-creating-multinode-resources}创建和删除克隆的资源 {.title}
:::
您可以同时创建资源和该资源的克隆。
若要通过以下单一命令创建资源和克隆资源：
RHEL 8.4 及更新的版本：
``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource options] [meta resource meta options] clone [clone_id] [clone options]
```
RHEL 8.3 及更早版本：
``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource options] [meta resource meta options] clone [clone options]
```
默认情况下，克隆的名称为 `resource_id-clone`{.literal}。从 RHEL 8.4
开始，您可以通过为 [*clone_id*]{.emphasis}
选项指定一个值来为克隆设置自定义名称。
您不能在单个命令中创建资源组以及该资源组的克隆。
另外，您可以使用以下命令创建之前创建的资源或资源组的克隆。
RHEL 8.4 及更新的版本：
``` literallayout
pcs resource clone resource_id | group_id [clone_id] [clone options]...
```
RHEL 8.3 及更早版本：
``` literallayout
pcs resource clone resource_id | group_id [clone options]...
```
默认情况下，克隆的名称为 `resource_id-clone 或`{.literal}
`group_name-clone`{.literal}。从 RHEL 8.4 开始，您可以通过为
[*clone_id*]{.emphasis} 选项指定一个值来为克隆设置自定义名称。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您只需要在一个节点中配置资源配置更改。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在配置限制时，始终使用组或克隆的名称。
:::
当您创建资源克隆时，默认情况下，克隆会在资源名称上带有附加至名称的
`-clone`{.literal}。以下命令创建名为 `webfarm`{.literal} 的类型为
`apache`{.literal} 的资源，以及名为 `webfarm-clone 的克隆`{.literal}。
``` literallayout
# pcs resource create webfarm apache clone
```
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
当您创建一个资源或资源组克隆，其将在另一个克隆后排序时，您几乎应该始终设置
`interleave=true`{.literal}
选项。这样可保证当依赖克隆的克隆停止或启动时，依赖克隆的副本可以停止或启动。如果没有设置这个选项，克隆的资源
B 依赖于克隆的资源
A，且节点离开集群，当节点返回到集群并在该节点上启动资源
A，那么所有节点上的资源 B
的副本都将会重启。这是因为，当依赖的克隆资源没有设置
`interleave`{.literal}
选项时，该资源的所有实例都依赖于它所依赖的资源的任何正在运行的实例。
:::
使用以下命令删除资源或资源组的克隆。这不会删除资源或资源组本身。
``` literallayout
pcs resource unclone resource_id | clone_id | group_name
```
下表描述了您可以为克隆的资源指定的选项。
::: table
[]{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#tb-resourcecloneoptions-HAAR}
**表 17.1. 资源克隆选项**
::: table-contents
+----------------------------------+----------------------------------+
| 项                               | 描述                             |
+:=================================+:=================================+
| `priority, ta                    | 选项                             |
| rget-role, is-managed`{.literal} | 继承自正在克隆的资源，如配置资源 |
|                                  | meta 选项中的\"                  |
|                                  | [资                              |
|                                  | 源元数据\"表中所述。](https://a  |
|                                  | ccess.redhat.com/documentation/e |
|                                  | n-us/red_hat_enterprise_linux/8/ |
|                                  | html/configuring_and_managing_hi |
|                                  | gh_availability_clusters/assembl |
|                                  | y_configuring-cluster-resources- |
|                                  | configuring-and-managing-high-av |
|                                  | ailability-clusters#proc_configu |
|                                  | ring-resource-meta-options-confi |
|                                  | guring-cluster-resources){.link} |
+----------------------------------+----------------------------------+
| `clone-max`{.literal}            | 要启动的资源副                   |
|                                  | 本数量。默认为集群中的节点数量。 |
+----------------------------------+----------------------------------+
| `clone-node-max`{.literal}       | 在一个节点上可以启动资源的副本数 |
|                                  | ; 默认值为 `1`{.literal}。       |
+----------------------------------+----------------------------------+
| `notify`{.literal}               | 当停止或                         |
|                                  | 启动克隆的副本时，预先并在操作成 |
|                                  | 功时告知所有其他副本。允许的值： |
|                                  | `false`{.lit                     |
|                                  | eral}，`true`{.literal}.默认值为 |
|                                  | `false`{.literal}。              |
+----------------------------------+----------------------------------+
| `globally-unique`{.literal}      | 克隆的每个副本                   |
|                                  | 是否会执行不同的功能？允许的值： |
|                                  | `f                               |
|                                  | alse`{.literal},`true`{.literal} |
|                                  |                                  |
|                                  | 如果此选项的值为                 |
|                                  | `false`{.literal}，则这些        |
|                                  | 资源在任何位置的行为都相同，因此 |
|                                  | 每台机器只能有一个克隆活跃副本。 |
|                                  |                                  |
|                                  | 如果此选项的值为                 |
|                                  | `true`{.literal}，则运行在一     |
|                                  | 台机器上的克隆的副本并不等于另一 |
|                                  | 个实例，无论该实例是运行在另一个 |
|                                  | 节点上还是运行在同一节点上。如果 |
|                                  | `clone-node-max`{.literal}       |
|                                  | 的值大于 1，则默认值为           |
|                                  | `true`{.literal} ；否则默认值为  |
|                                  | `false`{.literal}。              |
+----------------------------------+----------------------------------+
| `排序的`{.literal}               | 是否应该以系列的方式启动         |
|                                  | 副本（而不是并行的）。允许的值： |
|                                  | `false`{.lit                     |
|                                  | eral}，`true`{.literal}.默认值为 |
|                                  | `false`{.literal}。              |
+----------------------------------+----------------------------------+
| `interleave`{.literal}           | 更改排序限制的                   |
|                                  | 行为（克隆之间）的行为，以便在相 |
|                                  | 同节点中的同一节点中的副本立即启 |
|                                  | 动或停止（而不是等到第二个克隆的 |
|                                  | 每个实例启动或停止）。允许的值： |
|                                  | `false`{.lit                     |
|                                  | eral}，`true`{.literal}.默认值为 |
|                                  | `false`{.literal}。              |
+----------------------------------+----------------------------------+
| `clone-min`{.literal}            | 如果指定了值，则在此克隆后排序   |
|                                  | 的任何克隆都将无法启动，直到原始 |
|                                  | 克隆指定数量的实例都在运行，即使 |
|                                  | `interleave`{.literal} 选项设为  |
|                                  | `true`{.literal}。               |
+----------------------------------+----------------------------------+
:::
:::
要实现稳定的分配模式，默认情况下克隆具有稍微的粘贴性，这意味着它们更喜欢保留在运行的节点中。如果未提供
`resource-stickiness`{.literal} 值，克隆将使用值
1。作为一个小的值，它会对其他资源分数计算最小，但足以防止 Pacemaker
在集群间不必要地移动副本。有关设置 `资源粘性资源 meta-`{.literal} option
的详情，请参考 [配置资源 meta
选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters#proc_configuring-resource-meta-options-configuring-cluster-resources){.link}。
:::
::: section
::: titlepage
# []{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#proc_configuring-clone-constraints-creating-multinode-resources}配置克隆资源限制 {.title}
:::
在大多数情况下，克隆将在每个活跃集群节点上都有一个副本。但是，您可以将资源克隆的
`clone-max`{.literal}
设置为一个小于集群中节点总数的值。如果情况如此，您可以指定集群使用资源位置约束来优先分配哪些节点。这些限制与用于常规资源的条件相同，除了必须使用克隆的
id 以外。
以下命令为集群创建了一个位置约束，以优先将资源克隆
`webfarm-clone`{.literal} 分配给 `node1`{.literal}。
``` literallayout
# pcs constraint location webfarm-clone prefers node1
```
排序限制对克隆的行为稍有不同。在下例中，由于 `interleave`{.literal}
克隆选项保留为 `false`{.literal}，因此在启动需要启动的所有
`webfarm-clone`{.literal} 的实例之前，不会启动任何
`webfarm-stats`{.literal} 的实例。只有任何 `webfarm-clone`{.literal}
的副本都无法启动时，才会阻止 `webfarm-stats`{.literal}
处于活动状态。此外，`webfarm-clone`{.literal} 在停止其自身之前，将等待
`webfarm-stats`{.literal} 停止。
``` literallayout
# pcs constraint order start webfarm-clone then webfarm-stats
```
将常规（或组）资源与克隆在一起，意味着该资源可在任何有克隆活跃副本的机器中运行。集群将根据克隆运行情况以及资源自己的位置首选项选择一个副本。
克隆之间的并发位置也是有可能的。在这种情况下，克隆允许的位置集合仅限于克隆要激活的节点。然后分配可以正常执行。
以下命令创建了一个共处约束，以确保资源 `webfarm-stats`{.literal} 与
`webfarm-clone`{.literal} 的活动副本运行在同一节点上。
``` literallayout
# pcs constraint colocation add webfarm-stats with webfarm-clone
```
:::
::: section
::: titlepage
# []{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#proc_creating-promotable-clone-resources-creating-multinode-resources}可升级克隆资源 {.title}
:::
可升级克隆资源是克隆资源，`promotable`{.literal} meta 属性设为
`true`{.literal}。它们允许实例处于两种工作模式之一；它们称为
`主模式和`{.literal}
`从设备`{.literal}。模式的名称没有特定的含义，除了一个限制，即实例启动时，它必须处于
`Slave`{.literal} 状态。
::: section
::: titlepage
## []{#assembly_creating-multinode-resources-configuring-and-managing-high-availability-clusters.html#_creating_a_promotable_clone_resource}创建可升级的克隆资源 {.title}
:::
您可以用下列单一命令将资源创建为可升级的克隆。
RHEL 8.4 及更新的版本：
``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource options] promotable [clone_id] [clone options]
```
RHEL 8.3 及更早版本：
``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource options] promotable [clone options]
```
默认情况下，可升级克隆的名称为 `resource_id-clone`{.literal}。
从 RHEL 8.4 开始，您可以通过为 [*clone_id*]{.emphasis}
选项指定值来为克隆设置自定义名称。
另外，您可以使用以下命令从之前创建的资源或资源组中创建可升级的资源。
RHEL 8.4 及更新的版本：
``` literallayout
pcs resource promotable resource_id [clone_id] [clone options]
```
RHEL 8.3 及更早版本：
``` literallayout
pcs resource promotable resource_id [clone options]
```
默认情况下，可升级克隆的名称为 `resource_id-clone 或`{.literal}
`group_name-clone`{.literal}。