a2
2
1
S
P
G
Q
F
S
M
Server1
Server2
Server3
a3
3
a4
4
a5
5
a6
6
a7
7
2
4
5
6
7
...
...
3
5
6
7
8
9
10
time =
0
1
2
3
4
Figure 3: Example of backlog accumulation in multi-
server packetized disciplines.
Theorem 1: For any τ ,
W (0, τ ) − ¯W (0, τ ) ≤ (N − 1)Lmax.
Proof: The slope of W alternates between N r (when a busy
period resumes) and 0 (between two consecutive busy peri-
ods). Since the slope of ¯W is at most N r at any given time,
the diﬀerence W (0, τ ) − ¯W (0, τ ) reaches its maximal value
when a busy period ends under GPS. Let t be such time.
Case 1: At most N − 1 MSFQ servers are busy at t: Since
MSFQ is work-conserving, if a server is idle, we know that
there is no packet waiting for transmission. Let k be the
number of servers that are busy at time τ , 0 ≤ k ≤ N −
In the worst case, all the k servers have just started
1.
transmitting a packet of maximum length. Thus,
W (0, t) − ¯W (0, t) ≤ kLmax.
Case 2: All MSFQ servers are busy at t: Let [to, t] be the
largest interval in which all MSFQ servers are busy. Since
in the interval [to, t] the slope of ¯W is N r,
W (0, t) − ¯W (0, t) ≤ W (0, to) − ¯W (0, to).
If to = 0, then
W (0, t) = ¯W (0, t).
Otherwise, if to > 0, we know from Case 1,
W (0, to) − ¯W (0, to) ≤ (N − 1)Lmax.
Thus, the theorem follows.
✷
This theorem is also important in order to calculate buﬀer
requirements for multi-server systems. For example, buﬀer
requirements of a GPS system servicing leaky-bucket shaped
ﬂows are studied in [15]. To provide similar guarantees to
such ﬂows under a multi-server packet system, this theorem
implies the need for a buﬀer space of (N − 1)Lmax.
Another diﬀerence between multi-server and single-server
schedulers is the discrepancy of packet departure times with
respect to GPS. Let dp be the time at which packet p de-
parts from (GP S, 1, N r) system. MSFQ packets may not
depart in increasing order of dp. The order in which pack-
ets depart under MSFQ may be diﬀerent than the order in
which MSFQ schedules (i.e., begins transmitting/servicing)
packets. This is because packets of a ﬂow may be concur-
rently in service at diﬀerent servers of MSFQ . This type of
reordering does not occur in the single-server case. A second
reason for reordering is due to “late” arrival of packets. Sup-
pose that a server becomes idle at time τ . The next packet
to depart under GPS may not have arrived at time τ . Since
the server has no knowledge of when this packet will arrive,
MSFQ cannot be both work conserving and also schedule
packets always in increasing order of dp. This type of re-
ordering also exists in the single-server packetized systems
but the problem is intensiﬁed in the multi-server case.
We will use the following lemma in a number of theorems.
Lemma 1: Let ak and bk, be respectively the arrival time
and scheduling time of packet k under any work conserving
service discipline over N servers each with a rate of r. Let
P be the set of packets scheduled before packet k since time
ak, including the packets in service at ak. Packet k will be
scheduled no later than:
bk ≤ ak +
(cid:1)
i∈P Li
N r
.
Proof: Given a load that must be scheduled before packet
k, a work conserving service discipline schedules packet k
latest, if the load is equally divided among the N servers
such that all of them ﬁnish the work at the same time. ✷
Having established these new multi-server features, we are
now ready to prove the two main properties of the new al-
gorithm: maximum packet delay and per ﬂow service dis-
crepancy.
4. PACKET DELAY
Let ¯dp be the time at which packet p departs from the
the (M SF Q , N, r) system. Let Lmax denote the maximum
packet length. The following scenario is possible.
Example 1: All the N servers are idle before time t. N
packets of ﬂow 1, each with a length Lmax, arrive at time t.
Packet p of ﬂow 2 arrives immediately after t. Let φ2 >> φ1.
Thus, dp is slightly after ap + Lp
N r , where Lp is the length
r + Lp
of packet p. However, ¯dp is slightly before ap + Lmax
r .
This is because when packet p arrives, each server under
MSFQ is transmitting a packet, which arrived before packet
p whose GPS ﬁnishing time is after dp. Thus, ¯dp−dp is close
to
(N−1)Lp
✷
The next theorem shows that the case in the above ex-
ample is indeed the worst case delay a packet experiences
under MSFQ compared to GPS.
Theorem 2: For all packets p,
N r + Lmax
.
r
¯dp − dp ≤ (N − 1)Lp
N r
+
Lmax
r
.
Proof: Let pk be the kth packet that is scheduled under
MSFQ , and ak, ¯bk and ¯dk respectively be the arrival time,
scheduling time and the departure time of pk under MSFQ
. We now show that
¯dk ≤ dk +
Lmax
r
+
(N − 1)Lk
N r
for k = 1, 2,··· .
Case 1: There is an interval [t, ¯bk], t  dk. Thus, for
m  dk ≥ di
Then, packet pm is scheduled before packets pm+1,··· , pk
under MSFQ but pm departs after all these packets under
GPS.
Case 2.1: No such integer m exists: pg, pg+1,··· , pk−1 are
all scheduled before pk under MSFQ and all leave the GPS
server before pk. Since MSFQ is work conserving, pg must
have arrived at ¯bg. Since MSFQ schedules packets pg+1, pg+2,
··· , pk after pg and is work conserving, pg+1, pg+2,··· , pk
arrive at or after ¯bg. Thus, ag ≤ ai for g  ¯dm − Lm
r
.
Since pm+1,··· , pk−1 arrive after ¯dm− Lm
pk does under GPS,
dk ≥
k
i=m+1 Li
(cid:1)
+ ¯dm − Lm
r
N r
r and depart before
(5)
Since MSFQ decides to service pm at ¯bm, it must have
served each packet that arrives before ¯bm and departed un-
der GPS before dm. Out of these packets, at most N −
1 of them with a length Lmax may be still in service at
time ¯bm. Thus, after ¯bm and before scheduling pk, MSFQ
must service at most N − 1 packets of length Lmax and
pm, pm+1,··· , pk−1. From Lemma 1, the earliest time MSFQ
will schedule pk is ¯bk ≤ ¯bm +
.
Thus,
(N−1)Lmax+Lm+
k−1
i=m+1 Li
N r
(cid:1)
¯dk ≤
(N−1)Lmax+Lm
N r
(cid:1)
k−1
i=m+1 Li
N r
+
+ Lk
r + ¯dm − Lm
r
(6)
Equations 5 and 6 imply
¯dk ≤ dk +
Lmax
r
+
(N − 1)Lk
N r
✷
5. SERVICE PER-FLOW
Let Wi(t, τ ) and ¯Wi(t, τ ) be the amount of service (in
bits) that ﬂow i received in the interval [t, τ ] under GPS
and MSFQ respectively.
Example 2: Consider the scenario depicted in Example 2
with the following arrival pattern for ﬂow 2. N packets of
ﬂow 2 each with length Lmax arrives slightly after t. Since
N servers of MSFQ are idle at t, we know that Wi(0, t) =
¯Wi(0, t). Under GPS at time t+ Lmax
, ﬂow 2 receives almost
another N Lmax bits of service, whereas under MSFQ ﬂow
2 does not get any service in [t, t + Lmax
]. Thus, Wi(0, t +
Lmax
✷
r
We now prove that this is indeed the maximum amount
at which the service a ﬂow receives under GPS exceeds the
one under MSFQ .
Theorem 3: For any τ ,
) ≈ ¯Wi(0, Lmax
) +N Lmax.
r
r
r
Wi(0, τ ) − ¯Wi(0, τ ) ≤ N Lmax.
Proof: The diﬀerence Wi(0, τ ) − ¯Wi(0, τ ) reaches its maxi-
mal value at a point when the slope of Wi decreases or the
slope of ¯Wi increases. Thus, for a ﬂow i, the maximum dif-
ference can occur at one of the following events: When ﬂow
i becomes idle in the GPS system, when a packet of ﬂow i
begins transmission in the MSFQ system, or when an idle
ﬂow j, j (cid:10)= i becomes backlogged in the GPS system while
ﬂow i is backlogged in GPS. The ﬁrst case occurs when the
slope of Wi becomes zero after GPS completes the transmis-
sion of the last packet of a ﬂow i’s backlog. Since this case
occurs at one of the points when a packet of ﬂow i departs
the GPS system, we consider this more general scenario for
the ﬁrst case. Let bk and ¯bk denote the time when packet k
is scheduled under GPS and MSFQ respectively.
if : ¯bk ≤ dk