to the routing information during the protocol execution by simply setting a conservative upper bound
on the parameters d, τ, R. Note that we can always pad a routing matrix with fewer than d columns to
one with exactly d columns by adding columns where all entries are 0. Since computing the shortest path
information for a city-wide network and compressing the resulting routing matrices completes in just a few
minutes, it is possible to ensure accurate and up-to-date routing information in practice.
Updating sources and destinations. Typically, in navigation, the user might take a detour or a wrong
turn. While the protocol is designed to constrain the client to learn a single contiguous route through the
network, it is possible to provide a functionality-privacy trade-oﬀ to accommodate deviations from the
actual shortest path. One method is to introduce an additional parameter K, such that after every K
iterations of the protocol, the server chooses fresh source keys for the next round of the protocol. After
every K rounds, the client would also OT for a new source key. Eﬀectively, we are resetting the protocol
every K rounds and allowing the client to choose a new source from which to navigate. Correspondingly,
we would need to increase the total number of rounds R in order to support the potential for detours
and wrong turns. Though we cannot directly bound the number of rounds R, we can use a conservative
estimate. Of course, a dishonest client can now learn multiple sub-paths to its chosen destination, namely,
one sub-path each time it is allowed to choose a diﬀerent source. In a similar manner, we can support
updates to the destination.
7 Related Work
Numerous approaches have been proposed for private shortest path computation [DK05, LLLZ09, MY12,
Mou13, XSS14, CMTB13, CLT14, BSA13, WNL+14, KS14, LWN+15]. Early works such as [DK05,
LLLZ09] propose hiding the client’s location by either providing approximate locations to the server [DK05]
or by having the client submit dummy sources and destinations with each shortest path query [LLLZ09].
However, these approaches only provide limited privacy for the client’s location. Later works [Mou13,
MY12, XSS14] describe PIR-based solutions for hiding the client’s location. In [Mou13, MY12], the client
ﬁrst privately retrieves subregions of the graph that are relevant to its query [Mou13, MY12] and then
locally computes the shortest path over the subgraph. In [XSS14], the client privately requests for columns
of the next-hop routing matrix to learn the next hop in the shortest path. While these methods provide
privacy for the client’s location, they do not hide the server’s routing information.
22
There is also work on developing secure protocols for other graph-theoretic problems and under diﬀerent
models [BS05, FG06]. For example, Brickell and Shmatikov [BS05] consider a model where two parties
hold a graph over a common set of vertices, and the goal is to compute a function over their joint graphs.
Their protocols do not extend to navigation protocols where one party holds the full graph, and only the
client should learn the result of the computation. In [FG06], the authors describe protocols for parties
who each hold a subset of a graph to privately reconstruct the joint graph. Their methods are designed
for social network analysis and do not directly apply to private navigation.
Another line of work has focused on developing data-oblivious algorithms for shortest path computa-
tion [BSA13] or combining shortest path algorithms such as Dijkstra’s with oblivious data structures or
ORAM [WNL+14, KS14]. In these methods, the routing data is stored in an ORAM or an oblivious data
structure on the server. The client then executes the shortest-path algorithm on the server to learn the
path between its source and destination. Since the pattern of memory accesses is hidden from the server,
these approaches provide client privacy. While these protocols can be eﬃcient in practice, they do not
provide security against a malicious client trying to learn additional details about the routing informa-
tion on the server. Thus, for scenarios where the map data is proprietary (for instance, in the case of
real-time traﬃc routing), or when the routing information itself is sensitive (for instance, when provid-
ing navigational assistance for a presidential motorcade or coordinating troop movements in a military
scenario [CMTB13, CLT14]), the ORAM-based solutions do not provide suﬃcient security.
Also relevant are the works in secure multiparty computation (MPC) [Yao86, GMW87]. While these
methods can be successfully used to build private navigation protocols [LWN+15, CMTB13, CLT14], they
do not currently yield a practical private navigation protocol. A more comprehensive comparison of our
protocol to these generic methods is provided at the end of Section 5.3.
There is also a vast literature on graph compression algorithms. For planar graphs, there are multiple
methods based on computing graph separators [LT79, BBK03, BBK04]. Other methods based on coding
schemes [HKL00] have also been proposed and shown to achieve information-theoretically optimal encoding.
While these algorithms are often viable in practice, it is not straightforward to represent them compactly as
a Boolean or an arithmetic circuit. Thus, it is unclear how to combine them with standard cryptographic
primitives to construct a private shortest path protocol.
Finally, there has also been work on developing compact representations of graphs for answering ap-
proximate distance queries in graphs [TZ01]. These techniques have been successfully applied for privacy-
preserving approximate distance computation on graphs [MKNK15]. However, these distance-oracle-based
methods only provide an estimate on the length of the shortest path, and do not give a private navigation
protocol.
8 Conclusion
In this work, we constructed an eﬃcient protocol for privately computing shortest paths for navigation.
First, we developed a method for compressing the next-hop matrices for road networks by formulating the
compression problem as that of ﬁnding a sign-preserving, low-rank matrix decomposition. Not only did
this method yield a signiﬁcant compression, it also enabled an eﬃcient cryptographic protocol for fully
private shortest-path computation in road networks. By combining aﬃne encodings with Yao’s circuits,
we obtained a fully-private navigation protocol eﬃcient enough to run at a city-scale.
Acknowledgments
The authors would like to thank Dan Boneh, Roy Frostig, Hristo Paskov, and Madeleine Udell for many
helpful comments and discussions. While conducting this work, authors David Wu and Joe Zimmerman
23
were supported by NSF Graduate Research Fellowships. This work was further supported by the DARPA
PROCEED research program. Opinions, ﬁndings and conclusions or recommendations expressed in this
material are those of the authors and do not necessarily reﬂect the views of DARPA or NSF.
References
[ADH+01] David Ascher, Paul F. Dubois, Konrad Hinsen, Jim Hugunin, and Travis Oliphant. Numerical
python. Technical report, Lawrence Livermore National Laboratory, 2001.
[AIK14]
Benny Applebaum, Yuval Ishai, and Eyal Kushilevitz. How to garble arithmetic circuits. SIAM
J. Comput., 43(2):905–929, 2014.
[AVD11]
Julia Angwin and Jennifer Valentino-Devries. Apple, Google collect user data. The Wall Street
Journal, 2011.
[BBK03]
Daniel K. Blandford, Guy E. Blelloch, and Ian A. Kash. Compact representations of separable
graphs. In SODA, pages 679–688, 2003.
[BBK04]
Daniel K. Blandford, Guy E. Blelloch, and Ian A. Kash. An experimental analysis of a compact
graph representation. In Workshop on Analytic Algorithmics and Combinatorics, pages 49–61,
2004.
[BCLN14] Joppe Bos, Craig Costello, Patrick Longa, and Michael Naehrig. Speciﬁcation of curve selec-
tion and supported curve parameters in MSR ECCLib. Technical Report MSR-TR-2014-92,
Microsoft Research, June 2014.
[BHKR13] Mihir Bellare, Viet Tung Hoang, Sriram Keelveedhi, and Phillip Rogaway. Eﬃcient garbling
from a ﬁxed-key blockcipher. In IEEE Symposium on Security and Privacy, pages 478–492,
2013.
[BHR12] Mihir Bellare, Viet Tung Hoang, and Phillip Rogaway. Foundations of garbled circuits. Cryp-
tology ePrint Archive, Report 2012/265, 2012. http://eprint.iacr.org/.
[BLNZ95] Richard H. Byrd, Peihuang Lu, Jorge Nocedal, and Ciyou Zhu. A limited memory algorithm
for bound constrained optimization. SIAM J. Comput., 16(5):1190–1208, 1995.
[BS05]
Justin Brickell and Vitaly Shmatikov. Privacy-preserving graph algorithms in the semi-honest
model. In ASIACRYPT, pages 236–252, 2005.
[BSA13] Marina Blanton, Aaron Steele, and Mehrdad Aliasgari. Data-oblivious graph algorithms for
secure computation and outsourcing. In ASIA CCS, pages 207–218, 2013.
[Can00]
[Can06]
Ran Canetti. Security and composition of multiparty cryptographic protocols. J. Cryptology,
13(1):143–202, 2000.
Ran Canetti. Security and composition of cryptographic protocols: a tutorial (part I). SIGACT
News, 37(3):67–92, 2006.
[CGKS95] Benny Chor, Oded Goldreich, Eyal Kushilevitz, and Madhu Sudan. Private information re-
trieval. In FOCS, pages 41–50, 1995.
[Cha04]
Yan-Cheng Chang. Single database private information retrieval with logarithmic communi-
cation. In ACISP, pages 50–61, 2004.
24
[Che11]
Jacqui Cheng. How Apple tracks your location without consent, and why it matters. Ars
Technica, 2011.
[CLT14]
Henry Carter, Charles Lever, and Patrick Traynor. Whitewash: outsourcing garbled circuit
generation for mobile devices. In ACSAC, pages 266–275, 2014.
[CMS99]
Christian Cachin, Silvio Micali, and Markus Stadler. Computationally private information
retrieval with polylogarithmic communication. In EUROCRYPT, pages 402–414, 1999.
[CMTB13] Henry Carter, Benjamin Mood, Patrick Traynor, and Kevin R. B. Butler. Secure outsourced
garbled circuit evaluation for mobile devices. In USENIX, pages 289–304, 2013.
[Dij59]
[DK05]
[FG06]
[FS86]
E. W. Dijkstra. A note on two problems in connexion with graphs. Numerische Mathematik,
1(1):269–271, 1959.
Matt Duckham and Lars Kulik. A formal model of obfuscation and negotiation for location
privacy. In PERVASIVE, pages 152–170, 2005.
Keith B. Frikken and Philippe Golle. Private social network analysis: how to assemble pieces
of a graph privately. In WPES, pages 89–98, 2006.
Amos Fiat and Adi Shamir. How to prove yourself: Practical solutions to identiﬁcation and
signature problems. In CRYPTO, pages 186–194, 1986.
[GGM86] Oded Goldreich, Shaﬁ Goldwasser, and Silvio Micali. How to construct random functions. J.
ACM, 33(4):792–807, 1986.
[GIKM00] Yael Gertner, Yuval Ishai, Eyal Kushilevitz, and Tal Malkin. Protecting data privacy in private
information retrieval schemes. J. Comput. Syst. Sci., 60(3):592–629, 2000.
[GKP+13] Shaﬁ Goldwasser, Yael Tauman Kalai, Raluca A. Popa, Vinod Vaikuntanathan, and Nickolai
Zeldovich. Reusable garbled circuits and succinct functional encryption.
In Symposium on
Theory of Computing Conference, STOC’13, Palo Alto, CA, USA, June 1-4, 2013, pages
555–564, 2013.
[GMW87] Oded Goldreich, Silvio Micali, and Avi Wigderson. How to play any mental game or A
completeness theorem for protocols with honest majority. In STOC, pages 218–229, 1987.
[GO96]
[GR05]
[Gt12]
Oded Goldreich and Rafail Ostrovsky. Software protection and simulation on oblivious RAMs.
J. ACM, 43(3):431–473, 1996.
Craig Gentry and Zulﬁkar Ramzan. Single-database private information retrieval with constant
communication rate. In ICALP, pages 803–815, 2005.
Torbjrn Granlund and the GMP development team. GNU MP: The GNU Multiple Precision
Arithmetic Library, 5.0.5 edition, 2012. http://gmplib.org/.
[HKL00]
Xin He, Ming-Yang Kao, and Hsueh-I Lu. A fast general methodology for information-
theoretically optimal encodings of graphs. SIAM J. Comput., 30(3):838–846, 2000.
[HL10]
Carmit Hazay and Yehuda Lindell. Eﬃcient Secure Two-Party Protocols - Techniques and
Constructions. Information Security and Cryptography. Springer, 2010.
25
[IKK+11] Yuval Ishai, Jonathan Katz, Eyal Kushilevitz, Yehuda Lindell, and Erez Petrank. On achieving
the “best of both worlds” in secure multiparty computation. SIAM J. Comput., 40(1):122–141,
2011.
[Kil88]
Joe Kilian. Founding cryptography on oblivious transfer. In STOC, pages 20–31, 1988.
[KO97]
[KS08]
[KS14]
[KSS09]
[KY55]
[Lip05]
Eyal Kushilevitz and Rafail Ostrovsky. Replication is NOT needed: SINGLE database,
computationally-private information retrieval. In FOCS, pages 364–373, 1997.
Vladimir Kolesnikov and Thomas Schneider. Improved garbled circuit: Free XOR gates and
applications. In ICALP, pages 486–498, 2008.
Marcel Keller and Peter Scholl. Eﬃcient, oblivious data structures for MPC. In ASIACRYPT,
pages 506–525, 2014.
Vladimir Kolesnikov, Ahmad-Reza Sadeghi, and Thomas Schneider.
Improved garbled cir-
cuit building blocks and applications to auctions and computing minima. Cryptology ePrint
Archive, Report 2009/411, 2009. http://eprint.iacr.org/.
H. W. Kuhn and Bryn Yaw. The Hungarian method for the assignment problem. Naval Res.
Logist. Quart, pages 83–97, 1955.
Helger Lipmaa. An oblivious transfer protocol with log-squared communication. In ISC, pages
314–328, 2005.
[LLLZ09] Ken C. K. Lee, Wang-Chien Lee, Hong Va Leong, and Baihua Zheng. Navigational path
privacy protection: navigational path privacy protection. In CIKM, pages 691–700, 2009.
[LP09]
[LT79]
Yehuda Lindell and Benny Pinkas. A proof of security of Yao’s protocol for two-party compu-
tation. J. Cryptology, 22(2):161–188, 2009.
Richard J. Lipton and Robert Endre Tarjan. A separator theorem for planar graphs. SIAM
J. Appl. Math, (2):177–189, 1979.
[LWN+15] Chang Liu, Xiao Shaun Wang, Kartik Nayak, Yan Huang, and Elaine Shi. ObliVM: A pro-
gramming framework for secure computation. In IEEE Symposium on Security and Privacy,
2015.
[MBFK14] Carlos Aguilar Melchor, Joris Barrier, Laurent Fousse, and Marc-Olivier Killijian. Xpire:
Private information retrieval for everyone. IACR Cryptology ePrint Archive, 2014:1025, 2014.
[MKNK15] Xianrui Meng, Seny Kamara, Kobbi Nissim, and George Kollios. GRECS: graph encryption
for approximate shortest distance queries. IACR Cryptology ePrint Archive, 2015:266, 2015.
[Mou13]
Kyriakos Mouratidis. Strong location privacy: A case study on shortest path queries. In ICDE,
pages 136–143, 2013.
[MY12]
[NP99]
Kyriakos Mouratidis and Man Lung Yiu. Shortest path computation with no information
leakage. PVLDB, 5(8):692–703, 2012.
Moni Naor and Benny Pinkas. Oblivious transfer and polynomial evaluation. In STOC, pages
245–254, 1999.
26
[NP01]
[NP05]
[OI07]
Moni Naor and Benny Pinkas. Eﬃcient oblivious transfer protocols. In SODA, pages 448–457,
2001.
Moni Naor and Benny Pinkas. Computationally secure oblivious transfer. J. Cryptology,
18(1):1–35, 2005.
Rafail Ostrovsky and William E. Skeith III. A survey of single-database private information
retrieval: Techniques and applications. In Public Key Cryptography, pages 393–411, 2007.
[Ope]
OpenStreetMap Contributors. OpenStreetMap. http://www.openstreetmap.org/.
[Pai99]
Pascal Paillier. Public-key cryptosystems based on composite degree residuosity classes. In
EUROCRYPT, pages 223–238. 1999.
[PSSW09] Benny Pinkas, Thomas Schneider, Nigel P. Smart, and Stephen C. Williams. Secure two-party
computation is practical. In ASIACRYPT, pages 250–267, 2009.
[Rab05]
Michael O. Rabin. How to exchange secrets with oblivious transfer. IACR Cryptology ePrint
Archive, 2005:187, 2005.
[RVC+04] Lorenzo Rosasco, Ernesto De Vito, Andrea Caponnetto, Michele Piana, and Alessandro Verri.
Are loss functions all the same? Neural Computation, 16(5):1063–107, 2004.
[Sch89]
Claus-Peter Schnorr. Eﬃcient identiﬁcation and signatures for smart cards.
pages 239–252, 1989.
In CRYPTO,
[Sho]
Victor Shoup. NTL: A library for doing number theory. http://www.shoup.net/ntl/.
[Sta04]
Cyrill Stachniss. C implementation of the Hungarian method. http://www2.informatik.
uni-freiburg.de/~stachnis/misc.html, 2004.
[SvDS+13] Emil Stefanov, Marten van Dijk, Elaine Shi, Christopher W. Fletcher, Ling Ren, Xiangyao Yu,
and Srinivas Devadas. Path ORAM: an extremely simple oblivious RAM protocol. In CCS,
pages 299–310, 2013.
[The03]
The OpenSSL Project. OpenSSL: The open source toolkit for SSL/TLS. www.openssl.org,
April 2003.
[TZ01]
Mikkel Thorup and Uri Zwick. Approximate distance oracles. In STOC, pages 183–192, 2001.
[WNL+14] Xiao Shaun Wang, Kartik Nayak, Chang Liu, T.-H. Hubert Chan, Elaine Shi, Emil Stefanov,
and Yan Huang. Oblivious data structures. In CCS, pages 215–226, 2014.
[XSS14]
Yong Xi, Loren Schwiebert, and Weisong Shi. Privacy preserving shortest path routing with
an application to navigation. Pervasive and Mobile Computing, 13:142–149, 2014.
[Yao86]
[Zha04]
Andrew Chi-Chih Yao. How to generate and exchange secrets (extended abstract). In FOCS,
pages 162–167, 1986.
Tong Zhang. Solving large scale linear prediction problems using stochastic gradient descent