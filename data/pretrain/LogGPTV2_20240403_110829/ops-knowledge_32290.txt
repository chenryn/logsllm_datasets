User:  Please describe a common software development life cycle, and explain the main tasks and outputs of each phase.
Assistant: common software development life cycle includes the following stages: 1. Requirements analysis stage: In this stage, the development team analyzes the needs of customers to determine the functions, performance and other requirements of the software. The main tasks include determining requirements, evaluating feasibility, defining system specifications, and writing software requirements specifications, etc. Outputs include requirements documents. 2. Design phase: In this phase, the development team designs the structure and modules of the software according to the requirements document. Main tasks include formulating software architecture, designing system/component detailed design and writing test plan, etc. Outputs include software architecture and design documents, test plan documents. 3. Coding phase: In this phase, the development team starts writing code based on the design document. The main tasks include writing source code, completing unit testing, and continuously performing integration testing on the code. Outputs include source code, unit test reports, and integration test reports. 4. Testing phase: In this phase, the development team conducts system testing, performance testing, reliability testing, and user acceptance testing. The main tasks include developing test plans, executing tests and recording test results, etc. Outputs include test reports and issue lists. 5. Launch and maintenance phase: In this phase, the development team deploys the software to the actual production environment, and continuously monitors and maintains it. The main tasks include deploying, monitoring, maintaining and updating software, etc. Outputs include software releases and version updates. In general, the entire software development life cycle includes five stages: requirement analysis, design, coding, testing, launch and maintenance. Each stage has its own unique tasks and outputs, which are connected with each other to form a high-quality software product.