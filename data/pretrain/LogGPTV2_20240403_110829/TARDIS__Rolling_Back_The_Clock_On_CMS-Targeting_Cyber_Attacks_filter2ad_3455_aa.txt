title:TARDIS: Rolling Back The Clock On CMS-Targeting Cyber Attacks
author:Ranjita Pai Kasturi and
Yiting Sun and
Ruian Duan and
Omar Alrawi and
Ehsan Asdar and
Victor Zhu and
Yonghwi Kwon and
Brendan Saltaformaggio
2020 IEEE Symposium on Security and Privacy
TARDIS: Rolling Back The Clock On
CMS-Targeting Cyber Attacks
Ranjita Pai Kasturi1, Yiting Sun1, Ruian Duan1, Omar Alrawi1, Ehsan Asdar1, Victor Zhu1,
Yonghwi Kwon2, Brendan Saltaformaggio1
1Georgia Institute of Technology
2University of Virginia
Abstract‚ÄîOver 55% of the world‚Äôs websites run on
Content Management Systems (CMS). Unfortunately,
this huge user population has made CMS-based
websites a high-proÔ¨Åle target for hackers. Worse still,
the vast majority of the website hosting industry has
shifted to a ‚Äúbackup and restore‚Äù model of security,
which relies on error-prone AV scanners to prompt
users to roll back to a pre-infection nightly snapshot.
This research had the opportunity to study these
nightly backups for over 300,000 unique production
websites.
In doing so, we measured the attack
landscape of CMS-based websites and assessed the
eÔ¨Äectiveness of the backup and restore protection
scheme. To our surprise, we found that the evolution
of
thousands of attacks exhibited clear
long-lived multi-stage attack patterns. We now
propose TARDIS, an automated provenance inference
technique, which enables
investigation and
remediation of CMS-targeting attacks based on only
the nightly backups already being collected by website
hosting companies. With the help of our industry
collaborator, we applied TARDIS to the nightly
backups of those 300K websites and found 20,591
attacks which lasted from 6 to 1,694 days, some of
which were still yet to be detected.
I. Introduction
tens of
the
(CMS)
the CMS market
Over 55% of the world‚Äôs websites run on Content
[1], with WordPress
Management Systems
controlling nearly 60% of
[2].
Unfortunately, this widespread adoption has led to a
swift increase in CMS-targeting cyber attacks. These
attacks are made even easier, because CMS deployments
are an amalgam of layered software and interpreters, all
with varying degrees of network and system permission,
which execute on the internet-facing web server. Worse
still, this research has uncovered an unnerving trend:
in-the-wild
deployments
overwhelmingly
slow‚Äù
and
characteristics indicative of multi-stage attacks.
compromises
exhibit
CMS
‚Äúlow
Despite the signiÔ¨Åcant deployment of these complex
software systems, to date, little research has been done
to investigate and remediate CMS-targeting cyber
research community has
attacks. Traditionally,
turned to Ô¨Åne-grained logging
to understand the
provenance of an attack [3]‚Äì[17]. Unfortunately, in the
CMS domain, these techniques are hardly deployed in
advances,
practice.
Ô¨Åne-grained
notable
despite
solutions
SpeciÔ¨Åcally,
logging
recent
of
the
incur
still
the
[22],
performance/space overhead [3],
[14]‚Äì[16] and often
require instrumenting and training with the target
systems [4], [7], [12], [17]. Moreover, website owners often
have no control over the underlying web server, because
the entire platform is owned and maintained by a
hosting provider
even a
university IT department).
(e.g., HostGator
[18] or
platforms
Dropmysite
as
[21], Sucuri
For these reasons, industry standard has long shifted
to a ‚Äúbackup and restore‚Äù model of security, oÔ¨Äered by
[19],
popular
such
Codeguard [20], GoDaddy
and
iPage [23]. Anti-virus (AV) scanners are deployed to
detect compromises in websites, and nightly backups of
the website‚Äôs Ô¨Åles are maintained oÔ¨Äsite. Unfortunately,
these approaches also have well-known limitations: AV
signatures only catch well-known malware, they fail to
detect stealthy multi-stage attacks, and high false alarm
rates cause real alerts to be ignored [24], [25]. Moreover,
website owners often (erroneously) revert to the most
recent snapshot which did not trigger an AV alert. In
fact, this research has found that website owners only
take action (i.e., rollback to a snapshot) for 31% of true
alerts and only one-third of
rollback to a
pre-initial-infection state.
This research had the unique opportunity to study
these attack trends in nightly backups from over 300,000
production websites. In collaboration with CodeGuard1,
we had initially set out to develop a website protection
methodology that could replace the ineÔ¨Äective backup
and restore standard. We began by assessing the entire
history of nightly backups for 70 websites which our
collaborator identiÔ¨Åed as having recently been targeted
by cyber attacks. Our preliminary investigation of this
dataset (detailed in ¬ßII) revealed something we had not
expected:
the evolution of each attack exhibited clear
multi-stage attack patterns ‚Äî slowly establishing an
initial foothold, quietly maintaining persistence, lateral
movement, cleaning up traces of earlier phases, etc.
Based on this discovery, we turned our attention to
from these
how forensic investigators could recover
attacks. In order to make a practical
impact in this
space, we propose that forensic techniques must focus on
those
1One of the largest corporate website security and backup solutions
on the market. Company name redacted for anonymous submission.
¬© 2020, Ranjita Pai Kasturi. Under license to IEEE.
DOI 10.1109/SP40000.2020.00116
1156
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
end,
across
306, 830 CMS-based
the only artifact widely available to CMS owners: the
nightly backups. To this
this paper presents
TARDIS, a novel provenance inference technique which
enables the investigation of multi-stage CMS-targeting
attacks. Based on only the nightly backups, TARDIS
reconstructs a timeline of the attack phases and recovers
the compromise window, or the period of time during
which the snapshots should not be trusted.
Through our collaboration with CodeGuard, we used
TARDIS to perform a systematic study of the attack
landscape
production
websites ‚Äî unique domains ranging from 38 websites
within the Alexa Top 10K and 4,038 in Alexa Top 1M to
mom-and-pop e-commerce sites, with nightly backups
covering approximately 1900 days (March 2014 to May
2019). Based on this
study, we uncovered 20, 591
websites (6.7%) which were compromised with advanced
multi-phase attacks. Our empirical measurement revealed
several concerning facts: We found that attacks persisted
in CMS websites for a minimum of 6 days and a
maximum of 1694 days, with a median of 40 to 100 days.
More than 20% of WordPress websites,
in particular,
housed attacks for over a year (likely due to WordPress‚Äôs
signiÔ¨Åcant market
involved
stealthily dropping a huge volume of malicious code
aÔ¨Äecting the web server. We found that during an attack
the number of Ô¨Åles increased by at least 50%, ranging
from visitor-attacking browser exploits to full-Ô¨Çedged
HTML-based remote control GUIs.
share). These
attacks
II. Preliminary Investigation
Our investigation began with 70 websites that were
known to have been recently compromised. We started
by asking the key cyber forensics question: How would
an investigator recover the website from these attacks?
Unfortunately, CMS website owners generally lack the
expertise and control over the hosting server required to
enable robust forensic logging. Given only these nightly
backups, we quickly realized that an investigator‚Äôs
visibility is signiÔ¨Åcantly limited.
Inferring Provenance Patterns.
In trying to solve
this problem, we made our Ô¨Årst key observation: A Ô¨Ånite
number of identical provenance patterns exist within the
evolution of all the websites. We Ô¨Årst found that a Ô¨Åle in
a given snapshot can exist in 1 of 3 states: added,
modiÔ¨Åed, or deleted. Figure 1 illustrates
the three
infection scenarios we observed in the website backups. A
Ô¨Åle added A can be Ô¨Çagged as suspicious (denoted by
! ) by an AV at some point throughout its life cycle.
These Ô¨Åles could also be Ô¨Çagged as suspicious (by an AV)
after they are modiÔ¨Åed M . In some cases, a snapshot
rollback is performed to treat the suspicious Ô¨Åles by
deleting D them. If the rollback deletes all of the
attacker‚Äôs Ô¨Åles then the attack is cured, as shown in
Figure 1(a). In other cases, no action is taken despite
detecting a suspicious Ô¨Åle (Uncured in Figure 1(c)).































		
Fig. 1: Three models of temporal infection evolution.
	










a
Unfortunately, this led to the discovery that the industry
standard of ‚Äúbackup and restore‚Äù is entirely insuÔ¨Écient.
We found that an alarming 80% of these websites were in
fact still
infected ‚Äî many website owners had rolled
back to a snapshot and patched the vulnerability, but
given their lack of forensic expertise, they were unable to
identify
initial
backdoors in place and allowing the attack to recur).
pre-infection
snapshot
(leaving
In order to quickly rollback to a clean snapshot,
investigators must recover the compromise window, or
the period of time during which the snapshots should not
be trusted. This is further complicated by the fact that
each snapshot contains tens of thousands of Ô¨Åles (11,292
on average), making this investigation a search for
needles in a haystack. Not discouraged, we drilled down
into the individual snapshots from a single Drupal
website, W6828862, which will serve as a running example
throughout this paper.
Single Snapshot Metrics. When looking into the
individual snapshots from W682886, we made our second
key observation: The complexity of each snapshot can be
reduced to a set of measurements, called spatial metrics,
that highlight the existence of cyber attack evidence. In
addition to the state of each Ô¨Åle in the snapshot from
before (our Ô¨Årst spatial metric), we designed another
spatial metric which measures extension mismatches
among the Ô¨Åles, i.e. if a Ô¨Åle‚Äôs internal format matches the
Ô¨Ålename‚Äôs extension. Similarly, we implemented another
spatial metric to identify UTF-8 based code obfuscation
patterns in server-side script Ô¨Åles. For example, in the
case of W682886, we found 3 PHP Ô¨Åles with obfuscated
payloads disguised as icon Ô¨Åles in the 5 June 2018
snapshot which initiated the attack. In the end, we
settled on the 9 spatial metrics detailed in ¬ßIII. These
spatial metrics were eÔ¨Äective at highlighting the presence
of cyber attack artifacts within a single snapshot.
However, while this was a good Ô¨Årst step, it was neither
suÔ¨Écient to explain the evolution of the attack nor to
understand the length of compromise.
Temporal Evolution Of Attack Phases. We
collected spatial metrics to represent each snapshot of
W682886, paying speciÔ¨Åc attention to sudden changes
between pairs of consecutive snapshots. This revealed our
third key observation: Modelling the implicit events
which trigger these sudden changes can expose the attack
2Website domain is omitted pending responsible disclosure.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1157
TABLE I: Temporal File DiÔ¨Äerential Analysis.
III. Design
ASCII
XML
PNG
ZIP
PHP
HTML
Outlier
Date
20 Apr
0
21 Apr
0
0
22 Apr
0
23 Apr
0
24 Apr
25 Apr
0
05 Jun
+1
07 Jun
0
08 Jun
-1
0
09 Jun
10 Jun
0
11 Jun
0
0
12 Jun
13 Jun
+1
14 Jun
-1
15 Jun
0
16 Jun
0
phases. This led us to plot the temporal progression of
the spatial metrics across all of W682886‚Äôs snapshots.
0
+1
0
+2
0
-1
+5
0
-6
0
0
0
-7
+13
-13
0
0
0
+21
0
0
0
0
0
0
-20
0
0
0
0
+20
-20
0
0
+1
+3
+1
+2
+1
+6
+50
+1
-22
0
+3
+1
-4
+28
-26
+1
+1
0
+7
-2
0
0
+3
-13