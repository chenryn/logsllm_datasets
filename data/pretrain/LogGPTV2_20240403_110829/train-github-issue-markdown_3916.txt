When using TypeScript Compiler (TSC) version 1.7.5 and targeting ES6 with features like `let` and `const`, while also using CommonJS modules, you may encounter an issue in browsers (e.g., Chrome) where the use of `let` and `const` outside of "strict mode" triggers errors. To resolve this, adding `"use strict";` at the beginning of your CommonJS module should fix the problem.

### Notes:
- **ES6 Specification**: According to the ES6 specification, section 10.2.1 on "Strict Mode Code," module code is always considered to be in strict mode. This assumption holds true for ES6 modules, but not necessarily for CommonJS modules, which use `require()` and `module.exports`.
- **Node.js Compatibility**: This issue does not typically arise in Node.js, as it appears to relax the strict mode requirement for CommonJS modules.
- **Babel Solution**: Babel's `transform-es2015-modules-commonjs` plugin automatically inserts `"use strict";` at the start of the file, ensuring that the browser adheres to the standard's rules. However, this solution requires an additional Babel step in the build process.

By adding `"use strict";` at the beginning of your CommonJS module, you can ensure compatibility with modern browsers and adhere to the ES6 standards.