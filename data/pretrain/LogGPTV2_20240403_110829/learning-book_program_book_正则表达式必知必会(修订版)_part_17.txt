用一个正则表达式来匹配电子邮件地址是一项很常见的任务，一般
来说，如果需要匹配的电子邮件地址比较简单，相应的正则表达式就不
会很复杂。
文本
ty nane is Ben Forta, and ny
enail address is beneforta.con.
---
## Page 130
120附录B常见问题的正则表达式解决方案
正则表达式
[1w+1 -)*\w+e(w+1 . ) +[A-Za-z]+
结果
My nane is Ben Forta, and my
enail address is beneforta.con,
分析
（\w+\.）*\w+负责匹配电子邮件地址里的用户名部分（@之前的所有
文本）：（\w+\.）*匹配一些由.结束的文本的零次或多次重复出现，\w+
匹配必不可少的文本（这个组合将匹配ben和ben.forta等）。接下来，@
匹配e字符本身，（\w+\.）匹配至少一个以，结束的字符串，[A-Za-z]+匹
配顶级域名（com、edu、us或uk，等等）。
合法的电子邮件地址必须在排版格式方面同时满足许多项规定。这
个模式不能用来匹配每一种可能的电子邮件地址。比如说，这个模式会
认为ben..fortaeforta.com是一个合法匹配（但这显然不是一个合法的
电子邮件地址），它不能用来匹配以IP地址做为主机名的电子邮件地址（但
这种电子邮件地址是合法的）。不过，因为绝大多数电子邮件地址都能与
这个模式相匹配，所以你不妨先用它试试，如果效果不佳再考虑对之进
行改进。
面这个正则表达式进行医配时一般用不着区分字母的大小写。
B.10HTML注释
HTML页面里的注释必须被放在标签之间（这两个标签必
须至少包含两个连字符，多于两个没有关系）。在测览（或调试）Web页
面的时候，我们往往需要把所有的注释都找出来。
文本
---
## Page 131
附录B常见问题的正则表达式解决方案
121
My Title 
 ->
正则表达式
结果
My Title 
分析
匹配HTML注释的结束标签。
我CFML注释（这种注释的开始/结束标签里包含着3个连字
符）。不过，这个模式没有对HTML注释的开始标签和结来标
签所包含的连字符的个数是否配对进行检查（那可以用来检查
HTML注释的格式是否有误）
B.11JavaScript注释
JavaScript（其他脚本语言如ActionScript和ECMA Script的其他变体
等）代码里的注释都以//开头。正如刚才那个HTML注释的例子所示，
把某给定页面里的所有注释全部查找出来是很有用的。
文本
// Turn off fields used only by replace
function hideReplaceFields()(
---
## Page 132
122附录B常见问题的正则表达式解决方案
document-getElementById('replaceheader′ ) .disabled=true;
// Turn on fields used only by replace
function showReplaceFields() (
document-getElementById(*replaceheader′) disabled=false;
正则表达式
I/,*
结果
//Turn off fields used only by replace
function hideReplaceFields() {
docunent-getElenentById('replaceheader' ) .disabled=true;
7/Turn on fields used only by replace
function showReplaceFields() (
document -getElementById(*replaceheader′) disabled=fa1se ;
分析
这是一个很简单的模式：//.*匹配//和紧随其后的注释内容。
是匹配换行符，因此，如果你正在使用的是ColdFusion，你将
需要把这个模式修改成使用照情型元字符的样子，把*替换
为.*？
B.12信用卡号码
信用卡号码本身是否合法不能用正则表达式来检查，最终的结论要
由信用卡的发行机构做出。我们这里说的检查是指使用正则表达式来检
查信用卡号码的格式是否符合有关规定，其主要目的是为了在对信用卡
号码做进一步处理之前，把有打字错误的信用卡号码（比如多输入一位
数字或少输入一位数字等情况）排除在外。
---
## Page 133
附录B常见问题的正则表达式解决方案
注意这里使用的模式都有这样一个前提假设：信用卡号码里
的空格和连字符已提前被去摔。一般来说，在使用正则表达式
对信用卡号码进行匹配处理之前，免把其中的非数字字符去摔
会给匹配操作带来很多便利：但这只是经检之设，你应该根据
具体情况来掌握
所有的信用卡都遵守着同一种基本的编码模式：以特定的数字序
列开头，号码的总位数是一个固定的值。我们先来看看MasterCard卡
的情况。
文本
asterCard: 52123456789e1234
Visa 2: 4123456789012345
Visa 1: 4123456789012
Anex: 371234567890123
Discover: 6011123456789012
Diners Club: 38812345678981
正则表达式
5[1-5]\d(14)
结果
MasterCard: 5212345678901234
Visa 1: 4123456789812
Visa 2: 4123456789012345
Anex: 371234567890123
Disc0ver: 6011123456789e12
Diners Club: 388123456789e1
分析
MasterCard卡的号码总长度是16位数字：第1位数字永远是5，第2位
数字是1到5之一。5[1-5]匹配前两位数字，（14}匹配随后的14位数字。
Visa卡的情况稍微复杂一些。
文本
MasterCard: 5212345678901234
Vis8 1: 4123456789012
Visa 2: 4123456789012345
---
## Page 134
124附录B常见问题的正则表达式解决方案
Anex: 371234567890123
Diners Club: 38812345678901
Disc0ver: 6e11123456789e12
正则表达式
4d{12} (\d{3})?
结果
MasterCard: 5212345678901234
Visa 2:4123456789012345
Visa 1: 4123456789012
Anex: 37123456789e123
Discover: 6011123456789012
Diners Club: 38812345678901
分析
Visa卡的第1位号码永远是4，总长度是13或16位数字（不包括14或15，
所以这里不能使用一个数字区间）。4匹配字符4本身，\d（12}匹配接下来
的12位数字，（\d{3}）？匹配可选的最后3位数字。
用来匹配美国运通卡号的模式相对要简单得多。
文本
MasterCard: 5212345678901234
Visa 1: 4123456789012
Visa 2: 4123456789012345
Anex: 371234567890123
Discover: 6011123456789012
Diners Club:
：38812345678901
正则表达式
3[47]\d{13}
结果
MasterCard: 5212345678901234
Visa 2: 4123456789012345
Visa 1: 4123456789@12
Discover: 6011123456789012
Antex: 371234567890123
Diners C1ub: 388123456789e1
分析
美国运通卡的号码总长度是15位，前两位号码必须是34或37。3[47]
匹配前两位数字，\d（13}匹配剩余的13位数字。
---
## Page 135
附录B常见问题的正则表达式解决方案
125
用来匹配Discover卡号的模式也很简单。
文本
MasterCard: 52123456789@1234
Visa 2: 4123456789012345
Visa 1: 4123456789012
Anex: 371234567890123
Discover: 6811123456789012
Diners Club: 388123456789e1
正则表达式
60111.d(12)
结果
MasterCard: 52123456789e1234
ViS8 1: 4123456789012
Visa 2: 4123456789012345
Anex: 371234567890123
Discover:6011123456789012
Diners Club: 38812345678981
分析
Discover卡的号码总长度是16位，前4位号码必须是6011.6011\d{12}
解决了问题。
Diners Club卡的情况稍微复杂一些。
文本
MasterCard: 5212345678901234
Visa 1: 4123456789012
Visa 2: 4123456789012345
Amex: 371234567890123
Disc0ver: 6e11123456789e12
Diners Club: 38812345678981
正则表达式
(3e[e-5];36d38d)d{11)
结果
MasterCard: 52123456789e1234
Vis8 1: 4123456789012
Aex: 371234567890123
Visa 2: 4123456789012345
Discover: 6e11123456789012
Diners Club: 38812345678901
---
## Page 136
126
附录B需见问题的正则表达式解决方案
分析
Diners Club卡的号码总长度是14位，必须以300到305、36或38开头。
如果前三位号码是300到305，后面必须再有11位数字：如果前两位号码
是36或38，则后面必须再有12位数字。我们这里采用了一个比较简单的
办法：先匹配前3位数字，（30[0-5]136\d|38\d）包含3个子表达式，只要
其中之一得到匹配即可：其中30[0-5]匹配300~305，36\d匹配以36开头
的任意3位数，38\d匹配以38开头的任意3位数。最后，\d{11}匹配剩余
的11位数字。
现在，只要把上述5种信用卡号码的匹配模式组合成一个更大的模式
就可以全面解决这个间题了：
文本
BasterCard: 52123456789e1234
Visa 2: 4123456789012345
Visa 1: 4123456789012
Aex: 371234567890123
Discover: 6e11123456789@12
Diners C1ub: 388123456789e1
正则表达式
(5[1-5]d{14}) 1(41d{12) (1{3})7)1(3[47]{13}) 1
 (6e111d(12)) |((3[ -5][361d[38d)1d{11))
结果
WasterCard:5212345678901234
Visa 1:4123456789012
Visa 2:4123456789012345
Discover:6811123456789812
Anex: 371234567890123
Diners Club: 38812345678981
分析
这个模式用操作符（正则表达式语言中的逻辑或操作符）把前面得
到的5个模式结合到了一起。有了它，我们就可以一次完成对5种常见信
用卡的号码格式进行检查了。
---
## Page 137