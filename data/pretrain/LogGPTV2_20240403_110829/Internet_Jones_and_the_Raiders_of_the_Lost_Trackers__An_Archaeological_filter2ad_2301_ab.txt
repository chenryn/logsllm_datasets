visit to CNN. Cookie-based trackers re-identify users by
setting unique identiﬁers in browser cookies, which are
then automatically included with requests to the tracker’s
domain. Figure 1 shows a basic example; we discuss
998  25th USENIX Security Symposium 
USENIX Association
2
USENIX Association  
25th USENIX Security Symposium  999
Figure1:Overviewofbasiccookie-basedwebtracking.Thethird-partydomaintracker.comusesabrowsercookietore-identifyusersonsitesthatembedcontentfromtracker.com.Thisexampleshowsvanillatrackingaccordingtothetaxon-omyfrom[60];otherbehaviorsaredescribedinSection3.morecomplexcookie-basedtrackingbehaviorsinSec-tion3.Thoughcookie-basedtrackingisextremelycom-mon[60],othertypesoftrackingbehaviorshavealsoemerged,includingtheuseofotherclient-sidestoragemechanisms,suchasHTML5LocalStorage,ortheuseofbrowserand/ormachineﬁngerprintingtore-identifyuserswithouttheneedtostorelocalstate[15,57].Becausetheseembeddedtrackersareofteninvisibletousersandnotvisitedintentionally,therehasbeengrowingconcernabouttheprivacyimplicationsofthird-partytracking.Inrecentyears,ithasbeenthesubjectofrepeatedpolicydiscussions(MayerandMitchellpro-videanoverviewasof2012[50]);simultaneously,thecomputerscienceresearchcommunityhasstudiedtrack-ingmechanisms(e.g.,[50,57,60,71]),measuredtheirprevalence(e.g.,[3,20,42,60]),anddevelopednewde-fensesorprivacy-preservingalternatives(e.g.,[6,22,25,61,64]).WediscussrelatedworksfurtherinSection6.However,theresearchcommunity’sinterestinwebtrackingisrelativelyrecent,withtheearliestmeasure-ments(toourknowledge)beginningin2005[42],andeachstudyusingadifferentmethodologyandmeasur-ingadifferentsubsetofknowntrackingtechniques(seeEnglehardtetal.[18]foracomprehensivelistofsuchstudies).Thepracticesofembeddingthird-partycontentandtargetedadvertisingonwebsitespredatetheseﬁrststudies[48],andlongitudinalstudieshavebeenlimited.However,longitudinalstudiesarecriticaltoensurethesustainedeffectsoftransparency[63]andtocontextual-izefuturemeasurements.Thus,tohelpgroundtechnicalandpolicydiscussionssurroundingwebtrackinginhis-toricaltrends,weask:howhasthethird-partytrackingecosystemevolvedoverthelifetimeoftheweb?Weinvestigatequestionssuchas:•Howhavethenumbers,identities,andbehaviorsofdominanttrackerschangedovertime?•Howhasthescopeofthemostpopulartrackers(i.e.,thenumberofwebsitesonwhichtheyareembed-ded)changedovertime?•Howhastheprevalenceoftrackingchangedovertime?Forexample,dowebsitesincludemanymorethird-partytrackersnowthantheydidinthepast?•Howhavethebehaviorsofwebtrackers(e.g.,JavaScriptAPIsused)changedovertime?Byansweringthesequestions,wearetoableprovideasystematicandlongitudinalviewofthird-partywebtrackingoverthelast20years,retroactivelyﬁllingthisgapintheresearchliterature,sheddingalightontheevo-lutionofthird-partytrackingpracticesontheweb,andinformingfuturetechnicalandpolicydiscussions.TheWaybackMachine.Toconductourarcheologicalstudy,werelyondatafromtheInternetArchive’sWay-backMachine(https://archive.org).Since1996,theWaybackMachinehasarchivedfullwebpages,in-cludingJavaScript,stylesheets,andanyresources(in-cludingthird-partyJavaScript)thatitcanidentifystati-callyfromthesitecontents.Itmirrorspastsnapshotsofthesewebpagesonitsownservers;visitorstothearchiveseethepagesastheyappearedinthepast,makerequestsforallresourcesfromtheWaybackMachine’sarchivedcopy,andexecuteallJavaScriptthatwasarchived.Weevaluatethecompletenessofthearchive,particularlywithrespecttothird-partyrequests,inSection4.3MeasurementInfrastructure:TrackingExcavatorToconductalongitudinalstudyofwebtrackingusinghistoricaldatafromtheWaybackMachine,webuiltatool,TrackingExcavator,withthecapabilityto(1)detectandanalyzethird-partytracking-relatedbehaviorsonagivenwebpage,and(2)runthatanalysisoverhistoricalwebpagesarchivedandaccessedbytheWaybackMa-chine.Inthissection,weintroduceTrackingExcavator.Figure2providesandoverviewofTrackingExcavator,whichisorganizedintofourpipelinestages:(1)InputGeneration(Section3.1):TrackingExcavatortakesasinputalistoftop-levelsitesonwhichtomeasuretrackingbehaviors(suchastheAlexatop500sites),and,in“Waybackmode,”atimestampforthedesiredarchivaltimetocreatearchive.orgURLs.(2)DataCollection(Section3.2):TrackingExcavatorincludesaChromebrowserextensionthatautomaticallyvisitsthepagesfromtheinputsetandcollectstracking-relevantdata,suchasthird-partyrequests,cookies,andtheuseofcertainJavaScriptAPIs.(3)DataAnalysis(Section3.3):TrackingExcavatorprocessescollectedmeasurementeventstodetectandcategorizethird-partywebtrackingbehaviors.(4)DataVisualization:Finally,weprocessourresultsintovisualrepresentations(includedinSection5).3.1InputGenerationIntheinputgenerationphase,weprovideTrackingExca-vatorwithalistoftop-levelsitestouseformeasurement.31000  25th USENIX Security Symposium 
USENIX Association
Figure2:Overviewofourinfrastructure,TrackingExcavator,organizedintofourpipelinestages.Red/italicelementsapplyonlyto“Waybackmode”forhistoricalmeasurements,whileblack/non-italicselementsapplyalsotopresent-daymeasurements.Forhistoricalmeasurements,TrackingExcavatormusttakealistoftop-levelURLsalongwithhistoricaltimestampsandtransformthemintoappropriateURLsonarchive.org.Forexample,theURLfortheWaybackMachine’sFebruary10,2016snap-shotofhttps://www.usenix.org/conference/usenixsecurity16ishttps://web.archive.org/web/20160210050636/https://www.usenix.org/conference/usenixsecurity16.WeusetheMementoAPItoﬁndthenearestarchivedsnapshotofawebsiteoccurringbeforethespeciﬁedmea-surementdate[36].Thoughthisprocessensuresarea-sonabletimestampforthetop-levelpage,embeddedre-sourcesmayhavebeenarchivedatdifferenttimes[5].Duringanalysis,wethusﬁlteroutarchivedresourceswhosetimestampsaremorethansixmonthsfromourmeasurementtimestamp,toensureminimaloverlapandsufﬁcientspacingbetweenmeasurementsofdifferentyears.3.2DataCollectionTocollectdata,TrackingExcavatorusesaChromeex-tensiontoautomaticallyvisitthesetofinputsites.Notethatwecannotlogintosites,sincetheWaybackMa-chinecannotactastheoriginalserver.Ourbrowserisconﬁguredtoallowthird-partycookiesaswellaspop-ups,andwevisitthesetofsitestwice:oncetoprimethecacheandthecookiestore(toavoidartifactsofﬁrst-timebrowseruse),andoncefordatacollection.Duringthesevisits,wecollectthefollowinginformationrelevanttothird-partywebtrackingandstoreitinalocaldatabase:•Allrequestandresponseheaders(includingset-cookie).•AllcookiesprogrammaticallysetbyJavaScript(us-ingdocument.cookie).•Allaccessestoﬁngerprint-relatedJavaScriptAPIs,asdescribedbelow.•Foreachrequest:therequestedURL,(ifavailable)thereferrer,and(ifavailable)informationabouttheoriginatingtab,frame,andwindow.WelaterprocessthisdataintheanalysisphaseofTrackingExcavator’spipeline(Section3.3below).Fingerprint-RelatedAPIs.Sincecookie-basedwebtrackingisextremelycommon(i.e.,itis“classic”webtracking),wefocuslargelyonit—andthird-partyre-questsingeneral—tocapturethebroadestviewofthewebtrackingecosystemovertime.However,wealsocollectinformationabouttheusesofother,morerecentlyemergedtracking-relatedbehaviors,suchasJavaScriptAPIsthatmaybeusedtocreatebrowserormachineﬁn-gerprints[15,57].Tocaptureanyaccessesawebpagemakestoaﬁngerprint-relatedJavaScriptAPI(suchasnavigator.userAgent),TrackingExcavator’sChromeextensionContentScriptoverwritestheseAPIsoneachwebpageto(1)logtheuseofthatAPIand(2)calltheoriginal,overwrittenfunction.ThesetofAPIsthatwehookwascollectedfrompriorworkonﬁngerprint-basedtracking[3,4,15,56,57]andisprovidedinAppendixA.PreventingWayback“Escapes”.Inarchivingapage,theWaybackMachinetransformsallembeddedURLstoarchivedversionsofthoseURLs(similartoourownprocessabove).However,sometimestheWaybackMa-chinefailstoproperlyidentifyandrewriteembeddedURLs.Asaresult,whenthatarchivedpageisloadedonarchive.org,somerequestsmay“escape”thearchiveandreferenceresourcesontheliveweb[9,38].Inourdatacollectionphase,weblocksuchrequeststothelivewebtoavoidanachronisticsideeffects.However,werecordthedomaintowhichsucharequestwasat-tempted,sincethearchivedsitedidoriginallymakethatrequest,andthusweincludeitinouranalysis.3.3DataAnalysisIndesigningTrackingExcavator,wechosetoseparatedatacollectionfromdataanalysis,ratherthandetectingandmeasuringtrackingbehaviorsontheﬂy.Thismod-ulararchitecturesimpliﬁesdatacollectionandisolatesitfrompossiblebugsorchangesintheanalysispipeline—allowingustorerundifferentanalysesonpreviouslycol-lecteddata(e.g.,toretroactivelyomitcertaindomains).“Replaying”Events.Ouranalysismetaphorically“re-plays”collectedeventstosimulateloadingeachpageinthemeasurement.Forhistoricalmeasurements,wemod-ifyrequestheaderstoreplace“liveweb”Set-CookieheaderswithX-Archive-Orig-Set-Cookieheaders4added by archive.org, stripping the Wayback Machine
preﬁxes from request and referrer URLs, and ﬁlling our
simulated cookie jar (described further below). During
the replay, TrackingExcavator analyzes each event for
tracking behaviors.
Classifying Tracking Behaviors.
For cookie-based
trackers, we base our analysis on a previously published
taxonomy [60].2 We summarize — and augment — that
taxonomy here. Note that a tracker may fall into multiple
categories, and that a single tracker may exhibit different
behaviors across different sites or page loads:
1. Analytics Tracking: The tracker provides a script
implements website analytics functionality.
that
Analytics trackers are characterized by a script,
sourced from a third party but run in the ﬁrst-party
context, that sets ﬁrst-party cookies and later leaks
those cookies to the third-party domain.
2. Vanilla Tracking: The tracker is included as a third
party (e.g., an iframe) in the top-level page and uses
third-party cookies to track users across sites.
3. Forced Tracking: The tracker forces users to visit its
domain directly — for example, by opening a popup
or redirecting the user to a full-page ad — allowing
it to set cookies from a ﬁrst-party position.
4. Referred Tracking: The tracker relies on another
tracker to leak unique identiﬁers to it, rather than
on its own cookies.
In a hypothetical example,
adnetwork.com might set its own cookie, and then
explicitly leak that cookie in requests to referred
tracker ads.com. In this case, ads.com need not
set its own cookies to perform tracking.
5. Personal Tracking: The tracker behaves like a
Vanilla tracker but is visited by the user directly in
other contexts. Personal trackers commonly appear
as social widgets (e.g., “Like” or “tweet” buttons).
In addition to these categories previously intro-
duced [60], we discovered an additional type of tracker
related to but subtly different from Analytics tracking:
6. Referred Analytics Tracking: Similar to an Analyt-
ics tracker, but the domain which sets a ﬁrst-party
cookie is different from the domain to which the
ﬁrst-party cookie is later leaked.
Beyond cookie-based tracking behaviors, we also con-
sider the use of ﬁngerprint-related JavaScript APIs, as
described above. Though the use of these APIs does
not necessarily imply that the caller is ﬁngerprinting the
user — we know of no published heuristic for determin-
ing ﬁngerprinting automatically — but the use of many
such APIs may suggest ﬁngerprint-based tracking.
Finally, in our measurements we also consider third-
party requests that are not otherwise classiﬁed as track-
2We are not aware of other taxonomies of this granularity for
cookie-based tracking.
ers. If contacted by multiple domains, these third-parties
have the ability to track users across sites, but may or
may not actually do so. In other words, the set of all do-
mains to which we observe a third-party request provides
an upper bound on the set of third-party trackers.
We tested TrackingExcavator’s detection and classi-
ﬁcation algorithms using a set of test websites that we
constructed and archived using the Wayback Machine,
triggering each of these tracking behaviors.
Reconstructing Archived Cookies. For many track-
ing types,
the presence or absence of cookies is a
key factor in determining whether the request rep-
resents a tracking behavior.
In our live measure-
ments, we have the actual Cookie headers attached by
Chrome during the crawl. On archived pages, the Way-
back Machine includes past Set-Cookie headers as
X-Archive-Orig-Set-Cookie headers on archived re-
sponses. To capture the cookies that would have actu-
ally been set during a live visit to that archived page,
TrackingExcavator must simulate a browser cookie store
based on these archival cookie headers and JavaScript
cookie set events recorded during data collection.
Unfortunately, cookie engines are complicated and
standards non-compliant in major browsers, including
Chrome [11]. Python’s cookie storage implementation
is compliant with RFC 2965, obsoleted by RFC 6265,
but these standards proposals do not accurately represent
modern browser practices [7, 13, 21]. For efﬁciency, we
nevertheless use Python’s cookie jar rather than attempt-
ing to re-implement Chrome’s cookie engine ourselves.
We found that Python’s cookie jar computed cook-
ies exactly matching Chrome’s for only 71% of requests
seen in a live run of the top 100. However, for most types
of tracking, we only need to know whether any cookies
would have been set for the request, which we correctly
determine 96% of the time. Thus our tool captures most
tracking despite using Python’s cookie jar.
Classifying Personal Trackers in Measurements. For
most tracker types, classiﬁcation is independent of user
behaviors. Personal trackers, however, are distinguished
from Vanilla trackers based on whether the user vis-
its that domain as a top-level page (e.g., Facebook or
Google). To identify likely Personal trackers in auto-
mated measurement, we thus develop a heuristic for user
browsing behaviors: we use popular sites from each year,
as these are (by deﬁnition) sites that many users visited.
Alexa’s top sites include several that users would not
typically visit directly, e.g., googleadservices.com.
Thus, we manually examined lists of popular sites for
each year to distinguish between domains that users typ-
ically visit intentionally (e.g., Facebook, Amazon) from
those which ordinary users never or rarely visit inten-
tionally (e.g., ad networks or CDNs). Two researchers
USENIX Association  
25th USENIX Security Symposium  1001
5
independently classiﬁed the domains on the Alexa top
100 sites for each year where we have Alexa data, gath-
ering information about sites for which they were unsure.
The researchers examined 435 total domains: for the top
100 domains in 2015, they agreed on 100% and identiﬁed
94 sites as potential Personal trackers; for the 335 addi-
tional domains in the previous years’ lists, they agreed
on 95.4% and identiﬁed 296 Personal tracker domains.
4 Evaluating the Wayback Machine as an
Archaeological Data Source for Tracking
The Wayback Machine provides a unique and compre-
hensive source of historical web data. However, it was
not created for the purpose of studying third-party web
tracking and is thus imperfect for that use. Nevertheless,
the only way to study web tracking prior to explicit mea-
surements targeting it is to leverage materials previously
archived for other purposes. Therefore, before using the
Wayback Machine’s archived data, it is essential to sys-
tematically characterize and analyze its capabilities and
ﬂaws in the context of third-party tracking.
In this section we thus study the extent to which data
from the Wayback Machine allows us to study histor-
ical web tracking behaviors. Beyond providing conﬁ-
dence in the trends of web tracking over time that we
present in Section 5, we view this evaluation of the Way-
back Machine as a contribution of this paper. While
others have studied the quality of the Wayback Ma-
chine’s archive, particularly with respect to the quality
of the archived content displayed on the top-level page
(e.g., [10, 38, 53]), we are the ﬁrst to systematically study
the quality of the Wayback Machine’s data about third-
party requests, the key component of web tracking.
To conduct our evaluation, we leverage four ground
truth data sets collected from the live web in 2011, 2013,
2015, and 2016. The 2011 data was originally used
in [60] and provided to us by those authors. All datasets
contain classiﬁcations of third-party cookie-based track-
ers (according to the above taxonomy) appearing on the
Alexa top 500 sites (from the time of each measurement).
The 2015 and 2016 data was collected by TrackingExca-
vator and further contains all HTTP requests, including
those not classiﬁed as tracking.3 We plan to release our
ground truth datasets from 2013, 2015, and 2016.
We organize this section around a set of lessons that
we draw from this evaluation. We apply these lessons in
our measurements in Section 5. We believe our ﬁndings
can assist future researchers seeking to use the Wayback
Machine as a resource for studying tracking (or other
web properties relying on third-party requests) over time.
3For comparison,
the published results based on the 2011
dataset [60] measured tracking on the homepages of the top 500 web-
sites as well as four additional pages on that domain; for the purposes
of our work, we re-analyzed the 2011 data using only homepages.
All Third-Parties
Analytics
Vanilla
Forced
Referred
Personal
Referred Analytics
August 1
324
7
127
0
3
23
21
August 25
304
13
115
0
3
21
17