you are already familiar with the main web technologies, you can skim through
this chapter.
Chapter 4, “Mapping the Application,” describes the fi rst exercise you need
to perform when targeting a new application — gathering as much information
as possible to map its attack surface and formulate your plan of attack. This
process includes exploring and probing the application to catalog all its content
and functionality, identifying all the entry points for user input, and discover-
ing the technologies in use.
Chapter 5, “Bypassing Client-Side Controls,” covers the fi rst area of actual
vulnerability, which arises when an application relies on controls implemented
on the client side for its security. This approach normally is fl awed, because
any client-side controls can, of course, be circumvented. The two main ways
in which applications make themselves vulnerable are by transmitting data
via the client on the assumption that it will not be modifi ed, and by relying on
client-side checks on user input. This chapter describes a range of interesting
technologies, including lightweight controls implemented within HTML, HTTP,
and JavaScript, and more heavyweight controls using Java applets, ActiveX
controls, Silverlight, and Flash objects.
ffllaasstt..iinndddd xxxxvv 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxvi
xxvi Introduction
Chapters 6, 7, and 8 cover some of the most important defense mechanisms
implemented within web applications: those responsible for controlling user
access. Chapter 6, “Attacking Authentication,” examines the various functions by
which applications gain assurance of their users’ identity. This includes the main
login function and also the more peripheral authentication-related functions such
as user registration, password changing, and account recovery. Authentication
mechanisms contain a wealth of different vulnerabilities, in both design and
implementation, which an attacker can leverage to gain unauthorized access.
These range from obvious defects, such as bad passwords and susceptibility to
brute-force attacks, to more obscure problems within the authentication logic.
We also examine in detail the types of multistage login mechanisms used in
many security-critical applications and describe the new kinds of vulnerabilities
these frequently contain.
Chapter 7, “Attacking Session Management,” examines the mechanism by which
most applications supplement the stateless HTTP protocol with the concept of
a stateful session, enabling them to uniquely identify each user across several
different requests. This mechanism is a key target when you are attacking a
web application, because if you can break it, you can effectively bypass the login
and masquerade as other users without knowing their credentials. We look at
various common defects in the generation and transmission of session tokens
and describe the steps you can take to discover and exploit these.
Chapter 8, “Attacking Access Controls,” looks at the ways in which applica-
tions actually enforce access controls, relying on authentication and session
management mechanisms to do so. We describe various ways in which access
controls can be broken and how you can detect and exploit these weaknesses.
Chapters 9 and 10 cover a large category of related vulnerabilities, which
arise when applications embed user input into interpreted code in an unsafe
way. Chapter 9, “Attacking Data Stores,” begins with a detailed examination of
SQL injection vulnerabilities. It covers the full range of attacks, from the most
obvious and trivial to advanced exploitation techniques involving out-of-band
channels, inference, and time delays. For each kind of vulnerability and attack
technique, we describe the relevant differences between three common types
of databases: MS-SQL, Oracle, and MySQL. We then look at a range of similar
attacks that arise against other data stores, including NoSQL, XPath, and LDAP.
Chapter 10, “Attacking Back-End Components,” describes several other cate-
gories of injection vulnerabilities, including the injection of operating system
commands, injection into web scripting languages, fi le path traversal attacks,
fi le inclusion vulnerabilities, injection into XML, SOAP, back-end HTTP requests,
and e-mail services.
Chapter 11, “Attacking Application Logic,” examines a signifi cant, and fre-
quently overlooked, area of every application’s attack surface: the internal logic
it employs to implement its functionality. Defects in an application’s logic are
extremely varied and are harder to characterize than common vulnerabilities
ffllaasstt..iinndddd xxxxvvii 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxvii
Introduction xxvii
such as SQL injection and cross-site scripting. For this reason, we present a
series of real-world examples in which defective logic has left an application
vulnerable. These illustrate the variety of faulty assumptions that application
designers and developers make. From these different individual fl aws, we derive
a series of specifi c tests that you can perform to locate many types of logic fl aws
that often go undetected.
Chapters 12 and 13 cover a large and very topical area of related vulnerabili-
ties that arise when defects within a web application can enable a malicious
user of the application to attack other users and compromise them in vari-
ous ways. Chapter 12, “Attacking Users: Cross-Site Scripting,”, examines the
most prominent vulnerability of this kind — a hugely prevalent fl aw affecting
the vast majority of web applications on the Internet. We examine in detail all the
different fl avors of XSS vulnerabilities and describe an effective methodology
for detecting and exploiting even the most obscure manifestations of these.
Chapter 13, “Attacking Users: Other Techniques,” looks at several other types
of attacks against other users, including inducing user actions through request
forgery and UI redress, capturing data cross-domain using various client-side
technologies, various attacks against the same-origin policy, HTTP header
injection, cookie injection and session fi xation, open redirection, client-side SQL
injection, local privacy attacks, and exploiting bugs in ActiveX controls. The
chapter concludes with a discussion of a range of attacks against users that do
not depend on vulnerabilities in any particular web application, but that can be
delivered via any malicious web site or suitably positioned attacker.
Chapter 14, “Automating Customized Attacks,” does not introduce any new
categories of vulnerabilities. Instead, it describes a crucial technique you need
to master to attack web applications effectively. Because every web application
is different, most attacks are customized in some way, tailored to the applica-
tion’s specifi c behavior and the ways you have discovered to manipulate it to
your advantage. They also frequently require issuing a large number of similar
requests and monitoring the application’s responses. Performing these requests
manually is extremely laborious and prone to mistakes. To become a truly
accomplished web application hacker, you need to automate as much of this
work as possible to make your customized attacks easier, faster, and more effec-
tive. This chapter describes in detail a proven methodology for achieving this.
We also examine various common barriers to the use of automation, including
defensive session-handling mechanisms and CAPTCHA controls. Furthermore,
we describe tools and techniques you can use to overcome these barriers.
Chapter 15, “Exploiting Information Disclosure,” examines various ways in
which applications leak information when under active attack. When you are
performing all the other types of attacks described in this book, you should
always monitor the application to identify further sources of information dis-
closure that you can exploit. We describe how you can investigate anomalous
behavior and error messages to gain a deeper understanding of the application’s
ffllaasstt..iinndddd xxxxvviiii 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxviii
xxviii Introduction
internal workings and fi ne-tune your attack. We also cover ways to manipulate
defective error handling to systematically retrieve sensitive information from
the application.
Chapter 16, “Attacking Native Compiled Applications,” looks at a set of impor-
tant vulnerabilities that arise in applications written in native code languages
such as C and C++. These vulnerabilities include buffer overfl ows, integer vul-
nerabilities, and format string fl aws. Because this is a potentially huge topic,
we focus on ways to detect these vulnerabilities in web applications and look
at some real-world examples of how these have arisen and been exploited.
Chapter 17, “Attacking Application Architecture,” examines an important area
of web application security that is frequently overlooked. Many applications
employ a tiered architecture. Failing to segregate different tiers properly often
leaves an application vulnerable, enabling an attacker who has found a defect
in one component to quickly compromise the entire application. A different
range of threats arises in shared hosting environments, where defects or mali-
cious code in one application can sometimes be exploited to compromise the
environment itself and other applications running within it. This chapter also
looks at the range of threats that arise in the kinds of shared hosting environ-
ments that have become known as “cloud computing.”
Chapter 18, “Attacking the Application Server,” describes various ways in
which you can target a web application by targeting the web server on which
it is running. Vulnerabilities in web servers are broadly composed of defects in
their confi guration and security fl aws within the web server software. This topic
is on the boundary of the subjects covered in this book, because the web server
is strictly a different component in the technology stack. However, most web
applications are intimately bound up with the web server on which they run.
Therefore, attacks against the web server are included in the book because they
can often be used to compromise an application directly, rather than indirectly
by fi rst compromising the underlying host.
Chapter 19, “Finding Vulnerabilities in Source Code,” describes a completely
different approach to fi nding security fl aws than those described elsewhere
within this book. In many situations it may be possible to review an applica-
tion’s source code, not all of which requires cooperation from the application’s
owner. Reviewing an application’s source code can often be highly effective in
discovering vulnerabilities that would be diffi cult or time-consuming to detect
by probing the running application. We describe a methodology, and provide
a language-by-language cheat sheet, to enable you to perform an effective code
review even if you have limited programming experience.
Chapter 20, “A Web Application Hacker’s Toolkit,” pulls together the various
tools described in this book. These are the same tools the authors use when attack-
ing real-world web applications. We examine the key features of these tools and
describe in detail the type of work fl ow you generally need to employ to get the
best out of them. We also examine the extent to which any fully automated tool
ffllaasstt..iinndddd xxxxvviiiiii 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxix
Introduction xxix
can be effective in fi nding web application vulnerabilities. Finally, we provide
some tips and advice for getting the most out of your toolkit.
Chapter 21, “A Web Application Hacker’s Methodology,” is a comprehensive
and structured collation of all the procedures and techniques described in this
book. These are organized and ordered according to the logical dependencies
between tasks when you are carrying out an actual attack. If you have read
about and understood all the vulnerabilities and techniques described in this
book, you can use this methodology as a complete checklist and work plan
when carrying out an attack against a web application.
What’s New in This Edition
In the four years since the fi rst edition of this book was published, much has
changed, and much has stayed the same. The march of new technology has, of
course, continued apace, and this has given rise to specifi c new vulnerabilities
and attacks. The ingenuity of hackers has also led to the development of new
attack techniques and new ways of exploiting old bugs. But neither of these
factors, technological or human, has created a revolution. The technologies
used in today’s applications have their roots in those that are many years old.
And the fundamental concepts involved in today’s cutting-edge exploitation
techniques are older than many of the researchers who are applying them so
effectively. Web application security is a dynamic and exciting area to work in,
but the bulk of what constitutes our accumulated wisdom has evolved slowly
over many years. It would have been distinctively recognizable to practitioners
working a decade or more ago.
This second edition is not a complete rewrite of the fi rst. Most of the material
in the fi rst edition remains valid and current today. Approximately 30% of the
content in this edition is either new or extensively revised. The remaining 70%
has had minor modifi cations or none at all. If you have upgraded from the fi rst
edition and feel disappointed by these numbers, you should take heart. If you
have mastered all the techniques described in the fi rst edition, you already have
the majority of the skills and knowledge you need. You can focus on what is
new in this edition and quickly learn about the areas of web application security
that have changed in recent years.
One signifi cant new feature of the second edition is the inclusion through-
out the book of real examples of nearly all the vulnerabilities that are covered.
Wherever you see a “Try It!” link, you can go online and work interactively
with the example being discussed to confi rm that you can fi nd and exploit the
vulnerability it contains. There are several hundred of these labs, which you
can work through at your own pace as you read the book. The online labs are
available on a subscription basis for a modest fee to cover the costs of hosting
and maintaining the infrastructure involved.
ffllaasstt..iinndddd xxxxiixx 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxx
xxx Introduction
If you want to focus on what’s new in the second edition, here is a summary
of the key areas where material has been added or rewritten:
Chapter 1, “Web Application (In)security,” has been partly updated to refl ect
new uses of web applications, some broad trends in technologies, and the ways
in which a typical organization’s security perimeter has continued to change.
Chapter 2, “Core Defense Mechanisms,” has had minor changes. A few
examples have been added of generic techniques for bypassing input valida-
tion defenses.
Chapter 3, “Web Application Technologies,” has been expanded with some
new sections describing technologies that are either new or that were described
more briefl y elsewhere within the fi rst edition. The topics added include REST,
Ruby on Rails, SQL, XML, web services, CSS, VBScript, the document object
model, Ajax, JSON, the same-origin policy, and HTML5.
Chapter 4, “Mapping the Application,” has received various minor updates
to refl ect developments in techniques for mapping content and functionality.
Chapter 5, “Bypassing Client-Side Controls,” has been updated more exten-
sively. In particular, the section on browser extension technologies has been
largely rewritten to include more detailed guidance on generic approaches to
bytecode decompilation and debugging, how to handle serialized data in com-
mon formats, and how to deal with common obstacles to your work, including
non-proxy-aware clients and problems with SSL. The chapter also now covers
Silverlight technology.
Chapter 6, “Attacking Authentication,” remains current and has only minor
updates.
Chapter 7, “Attacking Session Management,” has been updated to cover new
tools for automatically testing the quality of randomness in tokens. It also contains
new material on attacking encrypted tokens, including practical techniques for
token tampering without knowing either the cryptographic algorithm or the
encryption key being used.
Chapter 8, “Attacking Access Controls,” now covers access control vulner-
abilities arising from direct access to server-side methods, and from platform
misconfi guration where rules based on HTTP methods are used to control
access. It also describes some new tools and techniques you can use to partially
automate the frequently onerous task of testing access controls.
The material in Chapters 9 and 10 has been reorganized to create more man-
ageable chapters and a more logical arrangement of topics. Chapter 9, “Attacking
Data Stores,” focuses on SQL injection and similar attacks against other data
store technologies. As SQL injection vulnerabilities have become more widely
understood and addressed, this material now focuses more on practical situa-
tions where SQL injection is still found. There are also minor updates through-
out to refl ect current technologies and attack methods. A new section on using
automated tools for exploiting SQL injection vulnerabilities is included. The
material on LDAP injection has been largely rewritten to include more detailed
ffllaasstt..iinndddd xxxxxx 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxxi
Introduction xxxi
coverage of specifi c technologies (Microsoft Active Directory and OpenLDAP),
as well as new techniques for exploiting common vulnerabilities. This chapter
also now covers attacks against NoSQL.
Chapter 10, “Attacking Back-End Components,” covers the other types of
server-side injection vulnerabilities that were previously included in Chapter 9.
New sections cover XML external entity injection and injection into back-end
HTTP requests, including HTTP parameter injection/pollution and injection
into URL rewriting schemes.
Chapter 11, “Attacking Application Logic,” includes more real-world examples of
common logic fl aws in input validation functions. With the increased usage
of encryption to protect application data at rest, we also include an example of
how to identify and exploit encryption oracles to decrypt encrypted data.
The topic of attacks against other application users, previously covered in
Chapter 12, has been split into two chapters, because this material was becom-
ing unmanageably large. Chapter 12, “Attacking Users: Cross-Site Scripting,”
focuses solely on XSS. This material has been extensively updated in various
areas. The sections on bypassing defensive fi lters to introduce script code have
been completely rewritten to cover new techniques and technologies, includ-
ing various little-known methods for executing script code on current brows-
ers. There is also much more detailed coverage of methods for obfuscating
script code to bypass common input fi lters. The chapter includes several new
examples of real-world XSS attacks. A new section on delivering working XSS
exploits in challenging conditions covers escalating an attack across application
pages, exploiting XSS via cookies and the Referer header, and exploiting XSS
in nonstandard request and response content such as XML. There is a detailed
examination of browsers’ built-in XSS fi lters and how these can be circumvented
to deliver exploits. New sections discuss specifi c techniques for exploiting XSS
in webmail applications and in uploaded fi les. Finally, there are various updates
to the defensive measures that can be used to prevent XSS attacks.
The new Chapter 13, “Attacking Users: Other Techniques,” unites the remain-
der of this huge area. The topic of cross-site request forgery has been updated to
include CSRF attacks against the login function, common defects in anti-CSRF
defenses, UI redress attacks, and common defects in framebusting defenses. A
new section on cross-domain data capture includes techniques for stealing data
by injecting text containing nonscripting HTML and CSS, and various tech-
niques for cross-domain data capture using JavaScript and E4X. A new section
examines the same-origin policy in more detail, including its implementation
in different browser extension technologies, the changes brought by HTML5,
and ways of crossing domains via proxy service applications. There are new
sections on client-side cookie injection, SQL injection, and HTTP parameter pol-
lution. The section on client-side privacy attacks has been expanded to include
storage mechanisms provided by browser extension technologies and HTML5.
Finally, a new section has been added drawing together general attacks against
ffllaasstt..iinndddd xxxxxxii 88//1199//22001111 1122::2233::0088 PPMM
Stuttard fl ast.indd V2 - 08/10/2011 Page xxxii
xxxii Introduction
web users that do not depend on vulnerabilities in any particular application.
These attacks can be delivered by any malicious or compromised web site or
by an attacker who is suitably positioned on the network.
Chapter 14, “Automating Customized Attacks,” has been expanded to cover