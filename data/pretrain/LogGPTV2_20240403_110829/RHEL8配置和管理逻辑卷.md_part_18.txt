``` literallayout
lvconvert --merge raid_image
```
下面的例子创建了 RAID1
逻辑卷，然后在追踪剩余的阵列时从那个卷中分离镜像。
``` literallayout
# lvcreate --type raid1 -m 2 -L 1G -n my_lv my_vg
  Logical volume "my_lv" created
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sdb1(1)
  [my_lv_rimage_1]        /dev/sdc1(1)
  [my_lv_rimage_2]        /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sdb1(0)
  [my_lv_rmeta_1]         /dev/sdc1(0)
  [my_lv_rmeta_2]         /dev/sdd1(0)
# lvconvert --splitmirrors 1 --trackchanges my_vg/my_lv
  my_lv_rimage_2 split from my_lv for read-only purposes.
  Use 'lvconvert --merge my_vg/my_lv_rimage_2' to merge back into my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sdb1(1)
  [my_lv_rimage_1]        /dev/sdc1(1)
  my_lv_rimage_2          /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sdb1(0)
  [my_lv_rmeta_1]         /dev/sdc1(0)
  [my_lv_rmeta_2]         /dev/sdd1(0)
```
以下示例在跟踪剩余的阵列更改时从 RAID1
卷中分离镜像，然后将该卷合并回阵列中。
``` literallayout
# lvconvert --splitmirrors 1 --trackchanges my_vg/my_lv
  lv_rimage_1 split from my_lv for read-only purposes.
  Use 'lvconvert --merge my_vg/my_lv_rimage_1' to merge back into my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sdc1(1)
  my_lv_rimage_1          /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sdc1(0)
  [my_lv_rmeta_1]         /dev/sdd1(0)
# lvconvert --merge my_vg/my_lv_rimage_1
  my_vg/my_lv_rimage_1 successfully merged back into my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sdc1(1)
  [my_lv_rimage_1]        /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sdc1(0)
  [my_lv_rmeta_1]         /dev/sdd1(0)
```
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-setting-raid-fault-policy-configure-manage-raid}设置 RAID 失败策略 {.title}
:::
LVM RAID 根据 `lvm.conf`{.literal} 文件中的
`raid_fault_policy`{.literal} 字段定义的首选项自动处理设备失败。
::: itemizedlist
-   如果将 `raid_fault_policy`{.literal} 字段设定为
    `allocate`{.literal}，则该系统会尝试使用卷组中备用设备替换失败的设备。如果没有可用的备用设备，则会向系统日志报告。
-   如果 `raid_fault_policy`{.literal} 字段设置为
    `warn`{.literal}，系统将产生警告，日志会指示设备失败。这使得用户能够决定采取什么行动。
:::
只要有足够的设备支持可用性，RAID 逻辑卷将继续操作。
::: section
::: titlepage
## []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#raid-allocate-faultpolicy}分配 RAID 失败策略 {.title}
:::
在以下示例中，`raid_fault_policy`{.literal} 字段在 `lvm.conf`{.literal}
文件中已设置为 `allocate`{.literal}。按如下方式定义 RAID 逻辑卷。
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rimage_2]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
如果 `/dev/sde`{.literal} 设备失败，系统日志会显示错误信息。
``` literallayout
# grep lvm /var/log/messages
Jan 17 15:57:18 bp-01 lvm[8599]: Device #0 of raid1 array, my_vg-my_lv, has failed.
Jan 17 15:57:18 bp-01 lvm[8599]: /dev/sde1: read failed after 0 of 2048 at
250994294784: Input/output error
Jan 17 15:57:18 bp-01 lvm[8599]: /dev/sde1: read failed after 0 of 2048 at
250994376704: Input/output error
Jan 17 15:57:18 bp-01 lvm[8599]: /dev/sde1: read failed after 0 of 2048 at 0:
Input/output error
Jan 17 15:57:18 bp-01 lvm[8599]: /dev/sde1: read failed after 0 of 2048 at
4096: Input/output error
Jan 17 15:57:19 bp-01 lvm[8599]: Couldn't find device with uuid
3lugiV-3eSP-AFAR-sdrP-H20O-wM2M-qdMANy.
Jan 17 15:57:27 bp-01 lvm[8599]: raid1 array, my_vg-my_lv, is not in-sync.
Jan 17 15:57:36 bp-01 lvm[8599]: raid1 array, my_vg-my_lv, is now in-sync.
```
因为 `raid_fault_policy`{.literal} 字段已设置为
`allocate`{.literal}，失败的设备将替换为卷组中的新设备。
``` literallayout
# lvs -a -o name,copy_percent,devices vg
  Couldn't find device with uuid 3lugiV-3eSP-AFAR-sdrP-H20O-wM2M-qdMANy.
  LV            Copy%  Devices
  lv            100.00 lv_rimage_0(0),lv_rimage_1(0),lv_rimage_2(0)
  [lv_rimage_0]        /dev/sdh1(1)
  [lv_rimage_1]        /dev/sdf1(1)
  [lv_rimage_2]        /dev/sdg1(1)
  [lv_rmeta_0]         /dev/sdh1(0)
  [lv_rmeta_1]         /dev/sdf1(0)
  [lv_rmeta_2]         /dev/sdg1(0)
```
请注意，虽然替换了失败的设备，但显示仍指示 LVM
无法找到失败的设备。这是因为虽然从 RAID
逻辑卷中删除了失败的设备，但故障的设备还没有从卷组中删除。要从卷组中删除失败的设备，您可以执行
`vgreduce --removemissing VG`{.literal}。
如果 `raid_fault_policy`{.literal} 被设置为 `allocate`{.literal}
，但没有备用设备，则分配将失败，让逻辑卷保留原样。如果分配失败，您可以选择修复驱动器，然后使用
`lvchange`{.literal} 命令的 `--refresh`{.literal}
选项启动故障设备的恢复。另外，您还可以替换失败的设备。
:::
::: section
::: titlepage
## []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#raid-warn-faultpolicy}警告 RAID 失败策略 {.title}
:::
在以下示例中，`raid_fault_policy`{.literal} 字段在 `lvm.conf`{.literal}
文件中已设置为 `warn`{.literal}。按如下方式定义 RAID 逻辑卷。
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sdh1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rimage_2]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sdh1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
如果 `/dev/sdh`{.literal}
设备失败，系统日志会显示错误信息。在这种情况下，LVM
将不会自动尝试通过替换其中一个镜像修复 RAID
设备。如果设备失败，您可以使用 `lvconvert`{.literal} 命令的
`--repair`{.literal} 参数替换该设备。
:::
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#assembly_replacing-a-raid-device-configure-manage-raid}在逻辑卷中替换 RAID 设备 {.title}
:::
您可以替换逻辑卷中的 RAID 设备。
::: itemizedlist
-   如果 RAID 设备中没有失败，请遵循 ["替换没有失败的 RAID
    设备"一节](#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-replacing-raid-device-with-no-failure-replacing-a-raid-device "替换没有失败的 RAID 设备"){.xref}。
-   如果 RAID 设备失败，请遵循 ["在逻辑卷中替换失败的 RAID
    设备"一节](#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-replacing-failed-raid-device-replacing-a-raid-device "在逻辑卷中替换失败的 RAID 设备"){.xref}。
:::
::: section
::: titlepage
## []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-replacing-raid-device-with-no-failure-replacing-a-raid-device}替换没有失败的 RAID 设备 {.title}
:::
要替换逻辑卷中的 RAID 设备，请使用 `lvconvert`{.literal} 命令的
`--replace`{.literal} 参数。
::: itemizedlist
**先决条件**
-   RAID 设备没有失败。如果 RAID 设备失败，以下命令将无法正常工作。
:::
::: itemizedlist
**流程**
-   替换 RAID 设备：
    ``` literallayout
    # lvconvert --replace dev_to_remove vg/lv possible_replacements
    ```
    ::: itemizedlist
    -   replace [*[dev_to_remove]{.replaceable}*]{.emphasis}
        使用您要替换的物理卷的路径。
    -   replace [*[vg/lv]{.replaceable}*]{.emphasis} 使用 RAID
        阵列的卷组和逻辑卷名称。
    -   replace [*[possible_replacements]{.replaceable}*]{.emphasis}
        使用您要用作替换的物理卷的路径。
    :::
:::
::: example
[]{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#idm140471760875152}
**例 10.1. 替换 RAID1 设备**
::: example-contents
下面的例子创建了 RAID1 逻辑卷，然后替换那个卷中的一个设备。
::: orderedlist
1.  创建 RAID1 阵列：
    ``` literallayout
    # lvcreate --type raid1 -m 2 -L 1G -n my_lv my_vg
      Logical volume "my_lv" created
    ```
2.  检查 RAID1 阵列：
    ``` literallayout
    # lvs -a -o name,copy_percent,devices my_vg
      LV               Copy%  Devices
      my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
      [my_lv_rimage_0]        /dev/sdb1(1)
      [my_lv_rimage_1]        /dev/sdb2(1)
      [my_lv_rimage_2]        /dev/sdc1(1)
      [my_lv_rmeta_0]         /dev/sdb1(0)
      [my_lv_rmeta_1]         /dev/sdb2(0)
      [my_lv_rmeta_2]         /dev/sdc1(0)
    ```
3.  替换 `/dev/sdb2`{.literal} 物理卷：
    ``` literallayout
    # lvconvert --replace /dev/sdb2 my_vg/my_lv
    ```
4.  使用替换检查 RAID1 阵列：
    ``` literallayout
    # lvs -a -o name,copy_percent,devices my_vg
      LV               Copy%  Devices
      my_lv             37.50 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
      [my_lv_rimage_0]        /dev/sdb1(1)
      [my_lv_rimage_1]        /dev/sdc2(1)
      [my_lv_rimage_2]        /dev/sdc1(1)
      [my_lv_rmeta_0]         /dev/sdb1(0)
      [my_lv_rmeta_1]         /dev/sdc2(0)
      [my_lv_rmeta_2]         /dev/sdc1(0)
    ```
:::
:::
:::
::: example
[]{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#idm140471627495792}
**例 10.2. 指定替换的物理卷**
::: example-contents
下面的例子创建了 RAID1
逻辑卷，然后替换那个卷中的一个设备，指定要用来替换哪些物理卷。
::: orderedlist
1.  创建 RAID1 阵列：
    ``` literallayout
    # lvcreate --type raid1 -m 1 -L 100 -n my_lv my_vg
      Logical volume "my_lv" created
    ```
2.  检查 RAID1 阵列：
    ``` literallayout
    # lvs -a -o name,copy_percent,devices my_vg
      LV               Copy%  Devices
      my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
      [my_lv_rimage_0]        /dev/sda1(1)
      [my_lv_rimage_1]        /dev/sdb1(1)
      [my_lv_rmeta_0]         /dev/sda1(0)
      [my_lv_rmeta_1]         /dev/sdb1(0)
    ```
3.  检查物理卷：
    ``` literallayout
    # pvs