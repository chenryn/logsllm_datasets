duplication hint:  
error hint:  
                 QUERY PLAN                   
--------------------------------------------  
 Nested Loop  
   Join Filter: (t2.val = t3.val)  
   ->  Hash Join  
         Hash Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Hash  
               ->  Seq Scan on t2  
   ->  Seq Scan on t3  
(9 rows)  
/*+Leading((t1 t2 t3))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id   Seq Scan on t3  
   ->  Hash  
         ->  Hash Join  
               Hash Cond: (t2.id = t1.id)  
               ->  Seq Scan on t2  
               ->  Hash  
                     ->  Index Scan using t1_pkey on t1  
                           Index Cond: (id   Seq Scan on t2  
   ->  Hash  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Index Scan using t1_pkey on t1  
         Index Cond: (id   Hash  
         ->  Seq Scan on t2  
(6 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id   Seq Scan on t3  
   ->  Hash  
         ->  Hash Join  
               Hash Cond: (t2.id = t1.id)  
               ->  Seq Scan on t2  
               ->  Hash  
                     ->  Index Scan using t1_pkey on t1  
                           Index Cond: (id   Hash Join  
         Hash Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Hash  
               ->  Seq Scan on t2  
   ->  Seq Scan on t3  
(9 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id   Merge Join  
         Merge Cond: (t3.id = t4.id)  
         ->  Nested Loop  
               Join Filter: (t1.val = t3.val)  
               ->  Index Scan using t3_pkey on t3  
               ->  Materialize  
                     ->  Index Scan using t1_pkey on t1  
                           Index Cond: (id   Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t2_pkey on t2  
         Index Cond: (id = t1.id)  
(14 rows)  
/*+Leading((((t1 t2) t3) t4))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id   Nested Loop  
         Join Filter: (t1.val = t3.val)  
         ->  Hash Join  
               Hash Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
                     Index Cond: (id   Hash  
                     ->  Seq Scan on t2  
         ->  Seq Scan on t3  
   ->  Index Scan using t4_pkey on t4  
         Index Cond: (id = t3.id)  
(12 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id   Seq Scan on t3  
   ->  Hash  
         ->  Hash Join  
               Hash Cond: (t2.id = t1.id)  
               ->  Seq Scan on t2  
               ->  Hash  
                     ->  Index Scan using t1_pkey on t1  
                           Index Cond: (id   Hash Join  
         Hash Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Hash  
               ->  Seq Scan on t2  
   ->  Seq Scan on t3  
(9 rows)  
/*+Leading((t1 (t2 t3)))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id   Index Scan using t1_pkey on t1  
         Index Cond: (id   Hash  
         ->  Hash Join  
               Hash Cond: (t2.val = t3.val)  
               ->  Seq Scan on t2  
               ->  Hash  
                     ->  Seq Scan on t3  
(10 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id   Merge Join  
         Merge Cond: (t3.id = t4.id)  
         ->  Nested Loop  
               Join Filter: (t1.val = t3.val)  
               ->  Index Scan using t3_pkey on t3  
               ->  Materialize  
                     ->  Index Scan using t1_pkey on t1  
                           Index Cond: (id   Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t2_pkey on t2  
         Index Cond: (id = t1.id)  
(14 rows)  
/*+Leading(((t1 t2) (t3 t4)))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id   Hash Join  
         Hash Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Hash  
               ->  Seq Scan on t2  
   ->  Merge Join  
         Merge Cond: (t3.id = t4.id)  
         ->  Index Scan using t3_pkey on t3  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
(14 rows)  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id  100 ORDER BY t1_2.id LIMIT 1);  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Hash Join  
   Hash Cond: (t2.val = t3.val)  
   InitPlan 1 (returns $1)  
     ->  Limit  
           ->  Sort  
                 Sort Key: t1_2.id  
                 ->  Nested Loop  
                       ->  Index Scan using t2_val on t2 t2_2  
                             Index Cond: (val > 100)  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                             Index Cond: (id = t2_2.id)  
   ->  Merge Join  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Index Scan using t2_pkey on t2  
   ->  Hash  
         ->  Seq Scan on t3  
(18 rows)  
/*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id  100 ORDER BY t1_2.id LIMIT 1);  
INFO:  pg_hint_plan: hint syntax error at or near "Leading(((t1 t2) t3)) Leading(((t3 t1) t2))"  
DETAIL:  Conflict leading hint.  
LOG:  pg_hint_plan:  
used hint:  
Leading(((t3 t1) t2))  
not used hint:  
duplication hint:  
Leading(((t1 t2) t3))  
error hint:  
                             QUERY PLAN                               
--------------------------------------------------------------------  
 Hash Join  
   Hash Cond: (t1.id = t2.id)  
   InitPlan 1 (returns $1)  
     ->  Limit  
           ->  Sort  
                 Sort Key: t1_2.id  
                 ->  Nested Loop  
                       ->  Index Scan using t2_val on t2 t2_2  
                             Index Cond: (val > 100)  
                       ->  Index Only Scan using t1_pkey on t1 t1_2  
                             Index Cond: (id = t2_2.id)  
   ->  Hash Join  
         Hash Cond: (t3.val = t1.val)  
         ->  Seq Scan on t3  
         ->  Hash  
               ->  Index Scan using t1_pkey on t1  
                     Index Cond: (id   Hash  
         ->  Seq Scan on t2  
(19 rows)  
/*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id  100 ORDER BY t1_2.id LIMIT 1);  
LOG:  pg_hint_plan:  
used hint:  
Leading(((t1 t2) t3))  
Leading((t1_2 t2_2))  
not used hint:  
duplication hint:  
error hint:  
                          QUERY PLAN                            
--------------------------------------------------------------  
 Hash Join  
   Hash Cond: (t2.val = t3.val)  
   InitPlan 1 (returns $0)  
     ->  Limit  
           ->  Merge Join  
                 Merge Cond: (t1_2.id = t2_2.id)  
                 ->  Index Only Scan using t1_pkey on t1 t1_2  
                 ->  Sort  
                       Sort Key: t2_2.id  
                       ->  Index Scan using t2_val on t2 t2_2  
                             Index Cond: (val > 100)  
   ->  Merge Join  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
               Index Cond: (id   Index Scan using t2_pkey on t2  
   ->  Hash  
         ->  Seq Scan on t3  
(18 rows)  
/*+Leading(((((t1 t2) t3) t1_2) t2_2))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id  100 ORDER BY t1_2.id LIMIT 1);  
LOG:  pg_hint_plan:  
used hint:  
not used hint:  
Leading(((((t1 t2) t3) t1_2) t2_2))  