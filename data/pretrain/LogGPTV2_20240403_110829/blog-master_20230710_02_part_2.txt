apt install -y openjdk-17-jdk  
git clone --depth 1 https://github.com/EnterpriseDB/hdfs_fdw  
cd ~/hdfs_fdw/libhive  
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64  
export JDK_INCLUDE=$JAVA_HOME/include  
export INSTALL_DIR=/usr/lib/postgresql/15/lib  
export PATH=/usr/lib/postgresql/15/bin:$PATH  
make  
make install  
cd ~/hdfs_fdw/libhive/jdbc  
javac MsgBuf.java  
javac HiveJdbcClient.java  
jar cf HiveJdbcClient-1.0.jar *.class  
cp HiveJdbcClient-1.0.jar /usr/lib/postgresql/15/lib  
cd ~/hdfs_fdw  
USE_PGXS=1 make  
USE_PGXS=1 make install  
```  
madlib机器学习  
```  
cd ~  
apt-get install -y m4   
apt-get install -y python3-distutils  
git clone --depth 1 https://github.com/apache/madlib  
cd madlib  
mkdir build   
cd build   
cmake ..   
make -j 8  
apt install -y python  
未来使用如下命令安装madlib插件  
# src/bin/madpack -s madlib -p postgres -c [user[/password]@][host][:port][/database] install  
```  
有几个插件编译有点问题, 暂时先不放进来:  
- age(图), imgsmlr(图片相似), fixeddecimal(128 bit decimal), parquet_s3_fdw, pggraphblas(图), rdkit(化学分子)   
配置OS资源限制     
```    
# vi /etc/security/limits.conf  
# nofile超过1048576的话，一定要先将sysctl的fs.nr_open设置为更大的值，并生效后才能继续设置nofile.    
* soft    nofile  1024000    
* hard    nofile  1024000    
* soft    nproc   unlimited    
* hard    nproc   unlimited    
* soft    core    unlimited    
* hard    core    unlimited    
* soft    memlock unlimited    
* hard    memlock unlimited    
```    
初始化数据库实例  
```  
su - postgres  
initdb -D $PGDATA -U postgres -E UTF8 --lc-collate=C --lc-ctype=en_US.UTF8   
```  
配置数据库参数文件  
```  
cd $PGDATA  
pg_hba.conf  
增加  
host all all 0.0.0.0/0 scram-sha-256  
postgresql.auto.conf  
配置  
listen_addresses = '0.0.0.0'		  
port = 1921				  
max_connections = 2000			  
unix_socket_directories = '., /var/run/postgresql'	  
shared_buffers = 128MB			  
dynamic_shared_memory_type = posix	  
vacuum_cost_delay = 0			  
bgwriter_delay = 20ms			  
bgwriter_lru_maxpages = 500		  
bgwriter_lru_multiplier = 5.0		  
max_parallel_workers_per_gather = 0	  
synchronous_commit = off		  
wal_compression = on			  
wal_writer_delay = 10ms		  
max_wal_size = 1GB  
min_wal_size = 80MB  
random_page_cost = 1.1			  
log_destination = 'csvlog'		  
logging_collector = on		  
log_truncate_on_rotation = on		  
log_timezone = 'Etc/UTC'  
autovacuum = on			  
autovacuum_vacuum_cost_delay = 0ms	  
vacuum_freeze_table_age = 750000000  
vacuum_multixact_freeze_table_age = 750000000  
datestyle = 'iso, mdy'  
timezone = 'Etc/UTC'  
lc_messages = 'en_US.UTF-8'			  
lc_monetary = 'en_US.UTF-8'			  
lc_numeric = 'en_US.UTF-8'			  
lc_time = 'en_US.UTF-8'				  
default_text_search_config = 'pg_catalog.english'  
```  
创建阿里云个人镜像服务, 第一次需要设置密码.    
https://cr.console.aliyun.com/cn-hangzhou/instances  
设置名字空间 digoal , 创建仓库 opensource_database .   
https://cr.console.aliyun.com/repository/cn-hangzhou/digoal/opensource_database/details     
查询容器ID  
```  
IT-C02YW2EFLVDL:~ digoal$ docker ps -a  
CONTAINER ID   IMAGE              COMMAND       CREATED       STATUS       PORTS     NAMES  
6cd83a7149c4   debian:oldstable   "/bin/bash"   4 hours ago   Up 4 hours             debian  
```  
准备使用上述容器将打包镜像  
```  
docker help commit  
Usage:  docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]  
Create a new image from a container's changes  
Options:  
  -a, --author string    Author (e.g., "John Hannibal Smith ")  
  -c, --change list      Apply Dockerfile instruction to the created image  
  -m, --message string   Commit message  
  -p, --pause            Pause container during commit (default true)  
```  
打包镜像  
```  
docker commit -a "digoal zhou " -m "PostgreSQL with many valuable extensions." 6cd83a7149c4 digoal:pg15.3_with_exts_base  
IT-C02YW2EFLVDL:~ digoal$ docker commit -a "digoal zhou " -m "PostgreSQL with many valuable extensions." 6cd83a7149c4 digoal:pg15.3_with_exts_base  
sha256:669d6ae270438d2de7f8b13cbe2a01d218af275b9c7f9532db0a4f3710eec115  
IT-C02YW2EFLVDL:~ digoal$ docker images  
REPOSITORY   TAG                     IMAGE ID       CREATED          SIZE  
digoal       pg15.3_with_exts_base   669d6ae27043   42 seconds ago   5.23GB  
```  
登陆阿里云docker registry  
```  
docker login --username=xxxxxxx registry.cn-hangzhou.aliyuncs.com  
```  
打标  
```  
docker tag 669d6ae27043 registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base  
```  
推送到阿里云镜像服务  
```  
docker push registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base   
```
从Registry中拉取镜像  
```
$ docker pull registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base
IT-C02YW2EFLVDL:~ digoal$ docker pull registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base
pg15.3_with_exts_base: Pulling from digoal/opensource_database
Digest: sha256:a42064fcc2e0b3c8bece12173b8b4139db3fa55e0fa82b19a7f0642c47e9c87a
Status: Image is up to date for registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base
registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database:pg15.3_with_exts_base
IT-C02YW2EFLVDL:~ digoal$ docker images -a
REPOSITORY                                                     TAG                     IMAGE ID       CREATED          SIZE
registry.cn-hangzhou.aliyuncs.com/digoal/opensource_database   pg15.3_with_exts_base   669d6ae27043   17 minutes ago   5.23GB
digoal                                                         pg15.3_with_exts_base   669d6ae27043   17 minutes ago   5.23GB
postgres                                                       15.3-bullseye           68ca5f232776   6 days ago       379MB
debian                                                         oldstable               b3b1ed8e0d05   6 days ago       124MB
```
用同样的方法可以创建自己的开源PolarDB容器, 安装好一些常用的插件. 甚至可以把很多数据库都塞到一个容器里, 便于对比学习.    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")