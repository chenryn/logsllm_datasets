Hello everyone,
First of all I'ld like to thank for the great job you are doing here.
I was working on autoencoder examples at http://blog.keras.io/building-
autoencoders-in-keras.html. When I came to CNN autoencoder, I'm stucked. Did
anybody run CNN autoencoder(s) w/ Theano?
The example uses TensorFlow whereas I want to use Theano. This is what I have
got so far:
= Versions
  * Python 2.7 (from WinPython) running on Windows 7
  * Theano - latest code from github
  * Keras - latest code from github
= CNN Autoencoder /w functional API  
Sample Code: https://gist.github.com/zakkum42/71c1ac9577a6eb2b6260dcdf7efd27d7  
Output/Error:
    Using Theano backend.
    (60000L, 1L, 28L, 28L)
    (10000L, 1L, 28L, 28L)
    ERROR (theano.gof.opt): Optimization failure due to: local_abstractconv_check
    ERROR (theano.gof.opt): node: AbstractConv2d{border_mode='half', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(16, 1, 3, 3)}(input_1, convolution2d_1_W)
    ERROR (theano.gof.opt): TRACEBACK:
    ERROR (theano.gof.opt): Traceback (most recent call last):
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\theano-0.8.2-py2.7.egg\theano\gof\opt.py", line 1772, in process_node
        replacements = lopt.transform(node)
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\theano-0.8.2-py2.7.egg\theano\tensor\nnet\opt.py", line 402, in local_abstractconv_check
        node.op.__class__.__name__)
    AssertionError: AbstractConv2d Theano optimization failed: there is no implementation available supporting the requested options. Did you exclude both "conv_dnn" and "conv_gemm" from the optimizer? If on GPU, is cuDNN available and does the GPU support it? If on CPU, do you have a BLAS library installed Theano can link against?
Question: Is the case that the original example is for TensorFlow only?
= CNN Autoencoder /w Sequential Model  
Sample Code:
https://gist.github.com/zakkum42/b251165232298425617944ab01e4cde6/7b350b4a56fb62768cf306484f0adf7f3455fb88  
Output/Error:
    Using Theano backend.
    Traceback (most recent call last):
      File "D:\PYTHON2-DEV\Li_ws\CSE555\src\som\keras_cnn_ae_sequential.py", line 59, in 
    ('x_train shape:', (60000L, 1L, 28L, 28L))
    (60000L, 'trai    validation_data=(x_test, x_test))
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\keras-1.0.3-py2.7.egg\keras\models.py", line 408, in fit
        sample_weight=sample_weight)
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\keras-1.0.3-py2.7.egg\keras\engine\training.py", line 994, in fit
        batch_size=batch_size)
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\keras-1.0.3-py2.7.egg\keras\engine\training.py", line 925, in _standardize_user_data
        exception_prefix='model target')
      File "D:\PYTHON2-DEV\WinPython\python-2.7.10.amd64\lib\site-packages\keras-1.0.3-py2.7.egg\keras\engine\training.py", line 104, in standardize_input_data
        str(array.shape))
    Exception: Error when checking model target: expected convolution2d_7 to have shape (None, 1, 24, 24) but got array with shape (60000L, 1L, 28L, 28L)
    n samples')
    (10000L, 'test samples')
Based on the generated graph, convolution2d_7 accepts shape (None, 1, 24, 24),
but the input is not converted to this shape.
Any suggestions on any of the two implementations?
Thank you in advance
K.