> Issue originally made by Ryan Duffy (ryan.duffy)
### Bug information
  * **Babel version:** 6.11.4
### Options
    es2015 preset
### Input code
    export default () => ({
      x: ({x}) => {}
    });
### Description
With the above code, babel transpiles to a closure without `module.exports`.
Seems to be unique to the combination of exporting an arrow function that
returns an object containing a key whose value is an arrow function where the
first arg is deconstructed with a key of the same name.
  * If the keys are different (`x: ({y}) => {}`) or the deconstructed key is renamed (e.g. `x: ({x: y}) => {}`), it doesn't reproduce.
  * If you use `function` in place of either arrow function, it doesn't reproduce.
  * If you store the closure into a local variable and then export that, it doesn't reproduce.
Reproducible via the babel repl as well