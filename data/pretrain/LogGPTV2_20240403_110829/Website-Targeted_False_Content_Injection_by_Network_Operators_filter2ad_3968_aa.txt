# Website-Targeted False Content Injection by Network Operators

**Authors:**
- Gabi Nakibly, Rafael—Advanced Defense Systems and Technion—Israel Institute of Technology
- Jaime Schcolnik, Interdisciplinary Center Herzliya
- Yossi Rubin, Rafael—Advanced Defense Systems

**Publication:**
- Proceedings of the 25th USENIX Security Symposium, August 10–12, 2016, Austin, TX
- ISBN 978-1-931971-32-4
- Open access sponsored by USENIX

## Abstract

It is well-documented that some network operators inject false content into users' network traffic. However, previous studies have primarily focused on edge ISPs (Internet Service Providers), which only affect their own customers. This paper extends the scope to include non-edge network operators, who can potentially alter the traffic of all Internet users visiting specific websites. Our study, based on extensive traffic analysis, reveals that these operators inject false content out-of-band, creating a race between forged and legitimate packets. The primary motivation for such injections is to increase revenue through ad insertion, but we also observed instances of malicious content injection. We provide representative samples of these injections to facilitate further analysis by the security community.

## 1. Introduction

Over the past few years, there have been numerous reports of ISPs altering or proxying their customers' traffic. Examples include CMA Communications in 2013, Comcast in 2012, Mediacom in 2011, WOW! in 2008, and Rogers in 2007. These alterations are typically aimed at facilitating caching, injecting advertisements, and compressing or transcoding content. All previous studies have found that these practices were carried out exclusively by edge ISPs, which directly provide Internet access to end users.

However, our research shows that the server-centric approach used in these studies misses a significant portion of on-path entities that modify traffic. By analyzing petabits of Internet traffic over several weeks, we identified several network operators that modify traffic based on its content, particularly the website being visited. These operators can alter the traffic of any Internet user, not just their own customers. While their primary goal is to inject advertisements, we also observed instances of malicious content injection.

Our analysis is based on the observation that these network operators use out-of-band injection, where a forged packet is sent alongside the legitimate one. If the forged packet arrives first, it is accepted by the client, while the legitimate packet is discarded. This method has advantages for network operators as it does not introduce new points of failure or performance bottlenecks.

## 2. Background

### 2.1 Out-of-band TCP Injection

A TCP connection ensures reliable and ordered delivery of byte streams by assigning sequence numbers to each byte. To inject a forged TCP segment, a third party must correctly set the connection's 4-tuple (source and destination port numbers and IP addresses) and ensure the sequence numbers fall within the receiver's TCP window. Forging such a segment is straightforward for an on-path entity, as they can eavesdrop on valid segments to discover the necessary details.

An injected segment may trigger an "Ack storm" if it causes the receiver to acknowledge data bytes not yet sent by the peer. To avoid this, the injector ensures the segment is no larger than the valid segment or sends a TCP reset to close the connection. In all our observations, either of these methods was used, and no "Ack storms" were observed.

### 2.2 HTTP Injection

HTTP is a stateless client-server protocol that uses TCP for transport. An HTTP exchange begins with a client sending a request, and the server responding with a status code. Common status codes include:

- **200 (Successful):** The request was received, understood, and accepted.
- **302 (Redirection):** The requested resource is temporarily under a different URI.

When a false HTTP response is injected, the TCP layer accepts the first segment it receives. If the forged response is shorter and arrives before the valid response, the client receives a mixed response. To avoid this, the injected response often includes `Content-Length` or `Transfer-Encoding` headers to explicitly determine the end of the response.

## 3. Methodology

### 3.1 Monitoring System

Our monitoring system was deployed at the entry points of large networks to analyze bidirectional traffic. The system consists of three stages:

1. **Capture Traffic:** We used the `netsniff-ng` tool with a Berkeley packet filter to capture HTTP traffic. Files containing 200,000 packets each were fed into a queue for processing. The queue length was bounded to prevent overflow.

2. **Dispatcher Process:** Each capture file was processed by a dispatcher that removed the Ethernet header and computed a hash on the IP addresses and TCP ports. Packets from the same session were assigned to the same worker process.

3. **Worker Processes:** Worker processes grouped packets into TCP sessions and stored them in a least-recently-used cache. For each packet, the worker checked for conditions indicating a packet race. If such conditions were met, the last 30 packets of the session were written to a file for later analysis.

The caches were large enough to minimize the eviction of active sessions, ensuring that packet races could still be detected even if a session was evicted.

## 4. Analysis and Results

Our analysis revealed several network operators that inject false content out-of-band. The primary motivation for these injections is to insert advertisements into web pages, but we also observed instances of malicious content. We provide detailed examples of these injections and discuss the characteristics and identities of the network operators involved.

## 5. Conclusion

This paper highlights the practice of website-targeted false content injection by non-edge network operators. Our findings show that these operators can alter the traffic of any Internet user, not just their own customers. The primary goal is to increase revenue through ad insertion, but there are also instances of malicious content injection. We provide representative samples to facilitate further analysis by the security community.

---

This optimized version of the text aims to improve clarity, coherence, and professionalism, making it more accessible and engaging for the reader.