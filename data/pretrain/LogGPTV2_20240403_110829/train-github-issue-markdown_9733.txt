##### Description of the problem
`BufferAttribute` can be shared among geometries (or even it can be referenced
twice or more in one geometry). But `.toJSON()` creates the same data many
times for such a shared buffer attribute. That leads to non-efficient
serialized data and shared buffer attribute will become many duplicated buffer
attributes through serialization.
What do you think of adding `attribute` field to serialized json data like
this?
    {
        metadata: { ... },
        attribute: [
            {
                array: [ ... ],
                ....
            },
            {
                array: [ ... ],
                ....
            },
            {
                array: [ ... ],
                ....
            }
        ],
        geometry: [
            {
                data: {
                    attributes: {
                        position: 0, // BufferAttribute doesn't have uuid so using index instead?
                        normal: 1,
                        uv: 2
                    }
                },
                ....
            },
            {
                data: {
                    attributes: {
                        position: 0,
                        normal: 1,
                        uv: 3
                    }
                },
                ....
            }
        ]
        ....
    }
Pros:
  * Efficient data in case attribute is shared
  * Reproduce the shared attribute even through serialization
Cons:
  * Break compatibility if there is any users who exported serialized json data to external file/storage.
##### Three.js version
  * Dev
  * r101
  * ...
##### Browser
  * All of them
  * Chrome
  * Firefox
  * Internet Explorer
##### OS
  * All of them
  * Windows
  * macOS
  * Linux
  * Android
  * iOS
##### Hardware Requirements (graphics card, VR Device, ...)