# Overview of TPM Vulnerabilities and Exploitation Scenarios

## CVE-2017-16837: Exploit Scenario

### Compromised Software Stack
1. **Leave normal hashes in event logs**.
2. **Extract and calculate the normal hashes**.
3. **Store the normal hashes in RAM**.
4. **Hook function pointers in the DCE and DLME**.
5. **Reset the TPM and replay the normal hashes with the hooked functions**.

### Detailed Steps
- **BIOS/UEFI**: Leave normal hashes in event logs.
- **DCE and DLME (tboot)**: Extract and calculate the normal hashes, store them in RAM, and hook function pointers.
- **Sleep**: The system enters sleep mode.
- **Wake up**: Upon waking up, the compromised state is restored.
- **Faked State (Normal State)**: The normal hashes are replayed, creating a faked normal state.

### Remote Attestation
- **TPM**: Abnormal PCRs are generated.
- **Remote Attestation Server**: Receives the abnormal PCRs and nonce, and verifies the signature (Sig(PCRs, Nonce)) using the AIK.

### Countermeasures
1. **Apply the patch to tBoot**: [Patch Link](https://sourceforge.net/p/tboot/code/ci/521c58e51eb5be105a29983742850e72c44ed80e/)
2. **Update tBoot to the latest version**.

## CVE-2018-6622: "Grey Area" Vulnerability

### Waking Up Process of SRTM
1. **Request to save a state**.
2. **Request to enter sleep**.
3. **Sleep (S3)**.
4. **Wake up**.
5. **Request to restore a state**.
6. **Resume OS**.

### Exploit Scenario
1. **Leave normal hashes in event logs**.
2. **Extract and calculate the normal hashes**.
3. **Store the normal hashes in RAM**.
4. **Sleep without saving the TPM state**.
5. **Wake up**.
6. **Reset the TPM and replay the normal hashes**.

### Corrective Action
- **TPM 2.0**: Reset the TPM.
- **TPM 1.2**: No specific action defined.

### Countermeasures
1. **Disable the ACPI S3 sleep feature in BIOS menu**: A simple and effective but brutal solution.
2. **Revise TPM 2.0 specification**: Define "corrective action" in detail and patch BIOS/UEFI firmware. This is a long-term, fundamental solution.

## Napper: A Tool for Checking TPM Vulnerabilities

### Features
- **Checks the ACPI S3 sleep mode vulnerability in the TPM**.
- **Based on Ubuntu 18.04 and includes a kernel module and user-level applications**.
- **Exploits the grey area vulnerability (CVE-2018-6622) by patching kernel code**.
- **User-level applications check the TPM status and generate a report**.

### Kernel Module
- **Patches the `tpm_pm_suspend()` function in the TPM driver**.
- **Changes the function to return 0 during the S3 sleep sequence**.

### User-Level Applications
- **Includes TPM-related software and a launcher**.
- **Adds a command-line tool, `tpm2_extendpcrs`, to `tpm2_tools`**.
- **Loads the kernel module, takes a nap, and checks if PCRs of the TPM are all ZEROS**.
- **Gathers and reports TPM and system information using `tpm2_getinfo`, `dmidecode`, and `journalctl` tools**.

### Live-CD and USB Bootable Device
- **Ubuntu 18.04 with Kernel 4.18.0-15**.
- **Includes TPM-related software and Napper Live-CD.iso**.
- **User-level applications and Pinguybuilder_5.1-7**.

### Project Page
- [Napper for TPM](https://github.com/kkamagui/napper-for-tpm)

## Conclusion
- **Trustworthiness vs. Reputation**: Trust nothing only with reputation; always verify.
- **Use Napper to check TPM vulnerabilities**.
- **Update your BIOS/UEFI firmware to the latest version**.
- **If no patched firmware is available, disable the ACPI S3 sleep feature in the BIOS menu**.

## References
- Seunghun, H., Wook, S., Jun-Hyeok, P., and HyoungChun K. (2019). Finally, I Can Sleep Tonight: Catching Sleep Mode Vulnerabilities of the TPM with the Napper. Black Hat Asia.
- Seunghun, H., Wook, S., Jun-Hyeok, P., and HyoungChun K. (2018). A Bad Dream: Subverting Trusted Platform Module While You Are Sleeping. USENIX Security.
- Seunghun, H., Jun-Hyeok, P., Wook, S., Junghwan, K., and HyoungChun K. (2018). I Donâ€™t Want to sleep Tonight: Subverting Intel TXT with S3 Sleep. Black Hat Asia.
- Trusted Computing Group. (2013). TCG D-RTM Architecture.
- Trusted Computing Group. (2012). TCG PC Client Specific Implementation Specification for Conventional BIOS.
- Intel. (2017). Intel Trusted Execution Technology (Intel TXT).
- Butterworth, J., Kallenberg, C., Kovah, X., and Herzog, A. (2013). Problems with the static root of trust for measurement. Black Hat USA.
- Wojtczuk, R., and Rutkowska, J. (2009). Attacking intel trusted execution technology. Black Hat DC.
- Wojtczuk, R., Rutkowska, J., and Tereshkin. A. (2009). Another way to circumvent Intel trusted execution technology. Invisible Things Lab.
- Wojtczuk, R., and Rutkowska, J. (2011). Attacking Intel TXT via SINIT code execution hijacking. Invisible Things Lab.
- Sharkey, J. (2016). Breaking hardware-enforced security with hypervisors. Black Hat USA.

For more information, contact:
- **Twitter**: @kkamagui1
- **Email**: [PI:EMAIL]
- **Project Site**: [Napper for TPM](https://github.com/kkamagui/napper-for-tpm)