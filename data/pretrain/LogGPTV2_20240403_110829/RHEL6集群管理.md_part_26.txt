``` screen
```
::: para
在这个示例中，已将 fence 设备（`fencedevice`{.command}）添加到
`fencedevices`{.command} 元素中，指定 fence 代理（`agent`{.command}）为
`fence_apc`{.command}，IP 地址（`ipaddr`{.command}）为
`apc_ip_example`{.command}，登录（`login`{.command}）为
`login_example`{.command}，fence 设备名称（`name`{.command}）为
`apc`{.command}，以及密码（`passwd`{.command}）为
`password_example`{.command}。
:::
:::
:::
::: example
[⁠]{#ch-config-cli-CA.html#ex-clusterconf-fencing-fencemethods-cli-CA}
**例 7.4. 添加到 `cluster.conf`{.filename} 的 fence 方法**
::: example-contents
``` screen
```
::: para
在这个示例中为每个节点添加了 fence
方法（`method`{.command}）。每个节点的 fence
方法名称（`name`{.command}）为 `APC`{.command}。将用于每个节点中 fence
方法的设备（`device`{.command}）名称（`name`{.command}）指定为
`apc`{.command}，并为每个节点指定唯一 APC
切换电源端口号（`port`{.command}）。例如：node-01.example.com 的端口号为
`1`{.command}（`port="1"`{.command}）。每个节点的设备名称（`device name="apc"`{.command}）根据
`fencedevices`{.command} 元素 `apc`{.command}
行中的名称（`name`{.command}）指向 fence
设备：`fencedevice agent="fence_apc"`{.command}
`ipaddr="apc_ip_example" login="login_example"`{.command}
`name="apc" passwd="password_example"`{.command}。
:::
:::
:::
::: example
[⁠]{#ch-config-cli-CA.html#ex-clusterconf-fencing-multi-per-node-cli-CA}
**例 7.5. `cluster.conf`{.filename}：每个节点中有多种 Fence 方法**
::: example-contents
``` screen
```
:::
:::
::: example
[⁠]{#ch-config-cli-CA.html#ex-clusterconf-fencing-multipath-cli-CA}
**例 7.6. `cluster.conf`{.filename}：Fencing，多路径多端口**
::: example-contents
``` screen
```
:::
:::
::: example
[⁠]{#ch-config-cli-CA.html#ex-clusterconf-fencing-dual-ps-cli-CA}
**例 7.7. `cluster.conf`{.filename}：使用双电源 Fencing 节点**
::: example-contents
``` screen
```
::: para
当使用电源切换 fence
使用双电源的节点时，必须告知代理在恢复两个电源端口前关闭两个电源端口。默认代理开关行为将导致永远无法在该节点完全禁用该电源。
:::
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-config-cli-CA.html#s1-config-failover-domain-cli-CA}7.4. 配置故障切换域 {.title}
:::
::: para
故障切换域是一个命名的集群节点子集，它可在节点失败事件中运行集群服务。故障切换域有以下特征：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    无限制 ---
    允许您为在子集指定首选成员，但分配给这个域名的集群服务可在任意可用成员中运行。
    :::
-   ::: para
    限制 ---
    允许您限制可运行具体集群服务的成员。如果在限制故障切换域中没有可用成员，则无法启动集群服务（手动或者使用集群软件均不可行）。
    :::
-   ::: para
    无序 ---
    当将集群服务分配给一个无序故障切换域时，则可从可用故障切换域成员中随机选择运行集群服务的成员，没有优先顺序。
    :::
-   ::: para
    有序 ---
    允许您在故障切换域成员中指定首选顺序。有序故障切换域从优先数字最小的节点开始选择。即故障切换域中优先数字为
    \"1\"
    的节点具有最高的优先权，因此它是故障切换域中的首选节点。那个节点之后，第二首选节点应为含有下一个最高优先权数字的节点，依此类推。
    :::
-   ::: para
    故障恢复 ---
    允许您指定在故障切换域中的服务是否应该恢复到节点失败前最初运行的节点。配置这个特性在作为有序故障切换域一部分节点重复失败的环境中很有帮助。在那种情况下，如果某个节点是故障切换域中的首选节点，在可能在首选节点和其它节点间重复切换和恢复某个服务，从而不会对性能产生严重影响。
    :::
    ::: note
    ::: admonition_header
    **备注**
    :::
    ::: admonition
    ::: para
    故障恢复特性只适用于配置了有序故障切换的集群。
    :::
    :::
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
更改故障切换域配置对目前运行中的服务无效。
:::
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
操作[*不需要*]{.emphasis}的故障切换域。
:::
:::
:::
::: para
默认情况下故障切换域为无限制和无序的。
:::
::: para
在由几个成员组成的集群中，使用限制故障切换域可最大程度降低设置集群以便运行集群服务的工作（比如
`httpd`{.filename}），它要求您在运行该集群服务的所有成员中进行完全一致的配置。您不需要将整个集群设置为运行该集群服务，只要设置与该集群服务关联的限制故障切换域中的成员即可。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
要配置首选成员，您可以创建一个只由一个集群成员组成的无限故障切换域。这样可让该集群服务在那个主要集群成员（首选成员）中运行，但允许将集群服务切换到任意其它成员中。
:::
:::
:::
::: para
使用以下步骤配置故障切换域：
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    在集群的任意节点中打开 `/etc/cluster/cluster.conf`{.filename}。
    :::