User: 现有一支Java应用，需要通过定时任务定期执行一些重要的业务逻辑，每次执行大约需要占用1GB的内存。请提供该应用的一个合理的定时任务调度方案。
Assistant: 可以使用Java内置的ScheduledExecutorService来实现定时任务调度。每当执行业务逻辑时，使用JVM参数设置最大内存限制，以防止内存不足。

以下是一个示例代码：

```java
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class TaskScheduler {
    private static final long INITIAL_DELAY = 0;
    private static final long PERIOD = 1;
    private static final TimeUnit TIME_UNIT = TimeUnit.HOURS;
    private static final long MAX_MEMORY = 1024 * 1024 * 1024;

    public static void main(String[] args) {
        ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
        executor.scheduleAtFixedRate(() -> {
            // 设置最大内存
            Runtime.getRuntime().maxMemory(MAX_MEMORY);
            // 执行业务逻辑
            // ...
        }, INITIAL_DELAY, PERIOD, TIME_UNIT);
    }
}
```

该代码会每隔1小时执行一次业务逻辑，并在每次执行前设置JVM最大内存为1GB。