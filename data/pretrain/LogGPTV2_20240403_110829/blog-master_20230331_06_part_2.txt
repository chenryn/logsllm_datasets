...     pl.lit("fruits").alias("literal_string_fruits"),  
...     pl.col("B").filter(pl.col("cars") == "beetle").sum(),  
...     pl.col("A").filter(pl.col("B") > 2).sum().over("cars").alias("sum_A_by_cars"),  
...     pl.col("A").sum().over("fruits").alias("sum_A_by_fruits"),  
...     pl.col("A").reverse().over("fruits").alias("rev_A_by_fruits"),  
...     pl.col("A").sort_by("B").over("fruits").alias("sort_A_by_B_by_fruits"),  
... )  
shape: (5, 8)  
┌────────┬────────┬───────────────────────┬─────┬───────────────┬─────────────────┬─────────────────┬───────────────────────┐  
│ fruits ┆ cars   ┆ literal_string_fruits ┆ B   ┆ sum_A_by_cars ┆ sum_A_by_fruits ┆ rev_A_by_fruits ┆ sort_A_by_B_by_fruits │  
│ ---    ┆ ---    ┆ ---                   ┆ --- ┆ ---           ┆ ---             ┆ ---             ┆ ---                   │  
│ str    ┆ str    ┆ str                   ┆ i64 ┆ i64           ┆ i64             ┆ i64             ┆ i64                   │  
╞════════╪════════╪═══════════════════════╪═════╪═══════════════╪═════════════════╪═════════════════╪═══════════════════════╡  
│ apple  ┆ beetle ┆ fruits                ┆ 11  ┆ 4             ┆ 7               ┆ 4               ┆ 4                     │  
│ apple  ┆ beetle ┆ fruits                ┆ 11  ┆ 4             ┆ 7               ┆ 3               ┆ 3                     │  
│ banana ┆ beetle ┆ fruits                ┆ 11  ┆ 4             ┆ 8               ┆ 5               ┆ 5                     │  
│ banana ┆ audi   ┆ fruits                ┆ 11  ┆ 2             ┆ 8               ┆ 2               ┆ 2                     │  
│ banana ┆ beetle ┆ fruits                ┆ 11  ┆ 4             ┆ 8               ┆ 1               ┆ 1                     │  
└────────┴────────┴───────────────────────┴─────┴───────────────┴─────────────────┴─────────────────┴───────────────────────┘  
>>> df = pl.read_parquet('/root/t.parquet')  
>>> id_stats = df['id'].describe()  
>>> print(id_stats)  
shape: (6, 2)  
┌────────────┬──────────┐  
│ statistic  ┆ value    │  
│ ---        ┆ ---      │  
│ str        ┆ f64      │  
╞════════════╪══════════╡  
│ min        ┆ 0.0      │  
│ max        ┆ 9.0      │  
│ null_count ┆ 0.0      │  
│ mean       ┆ 4.5      │  
│ std        ┆ 2.872283 │  
│ count      ┆ 1e6      │  
└────────────┴──────────┘  
>>>   
>>> info_stats = df['info'].describe()  
>>> print(info_stats)  
shape: (3, 2)  
┌────────────┬─────────┐  
│ statistic  ┆ value   │  
│ ---        ┆ ---     │  
│ str        ┆ i64     │  
╞════════════╪═════════╡  
│ unique     ┆ 999869  │  
│ null_count ┆ 0       │  
│ count      ┆ 1000000 │  
└────────────┴─────────┘  
>>> ts_stats = df['ts'].describe()  
>>> print(ts_stats)  
shape: (4, 2)  
┌────────────┬──────────────────────────────────┐  
│ statistic  ┆ value                            │  
│ ---        ┆ ---                              │  
│ str        ┆ str                              │  
╞════════════╪══════════════════════════════════╡  
│ min        ┆ 2023-03-31 05:59:01.738000+00:00 │  
│ max        ┆ 2023-03-31 05:59:01.738000+00:00 │  
│ null_count ┆ 0                                │  
│ count      ┆ 1000000                          │  
└────────────┴──────────────────────────────────┘  
>>> df = pl.read_parquet('/root/t.parquet').lazy()  
>>> sql = pl.SQLContext()  
>>> sql.register("pokemon", df)  
>>> result = sql.query("SELECT id, max(ts) as max_ts, min(ts) as min_ts FROM pokemon GROUP BY id ORDER BY id")  
>>> print(result)  
shape: (10, 3)  
┌─────┬────────────────────────────────┬────────────────────────────────┐  
│ id  ┆ max_ts                         ┆ min_ts                         │  
│ --- ┆ ---                            ┆ ---                            │  
│ i64 ┆ datetime[μs, +00:00]           ┆ datetime[μs, +00:00]           │  
╞═════╪════════════════════════════════╪════════════════════════════════╡  
│ 0   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 1   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 2   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 3   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ …   ┆ …                              ┆ …                              │  
│ 6   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 7   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 8   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
│ 9   ┆ 2023-03-31 05:59:01.738 +00:00 ┆ 2023-03-31 05:59:01.738 +00:00 │  
└─────┴────────────────────────────────┴────────────────────────────────┘  
>>>   
>>> sql.query("SELECT id, max(info) as max_info, min(info) as min_info FROM pokemon GROUP BY id ORDER BY id")  
shape: (10, 3)  
┌─────┬──────────────────────────────────┬──────────────────────────────────┐  
│ id  ┆ max_info                         ┆ min_info                         │  
│ --- ┆ ---                              ┆ ---                              │  
│ i64 ┆ str                              ┆ str                              │  
╞═════╪══════════════════════════════════╪══════════════════════════════════╡  
│ 0   ┆ ffffcb72873d68718a29e87eb3a2ba5c ┆ 0000649795442872512e8708994def2d │  
│ 1   ┆ ffff4e64024d94f9c077eb868381df47 ┆ 000159f062ff767e811c83be60109a2c │  
│ 2   ┆ ffffa553f31403a4a9bae1e6d078aa29 ┆ 0000cc99e5d4766b6d6fb4408c894b40 │  
│ 3   ┆ ffff398d57962389198a2623e0561e16 ┆ 0000a691322e874ee48b79031a1e7506 │  
│ …   ┆ …                                ┆ …                                │  
│ 6   ┆ ffffd06bc6085b9872d82edcb8003e88 ┆ 00004c1b9bb2329637a1fc7d7783e4eb │  
│ 7   ┆ ffff4644fc013418d343ec57fa2bb500 ┆ 0000e57d456ddf96f06a5388a10e5374 │  
│ 8   ┆ ffffc5deb7085f67bbb6b9d948596e72 ┆ 00002f87ce7bea032213e80d56c7244c │  
│ 9   ┆ ffffc3c125ca4b96168c25bce59eef13 ┆ 00000b59f5229f9b27923a2ced14e5d3 │  
└─────┴──────────────────────────────────┴──────────────────────────────────┘  
>>> sql.query("SELECT count(distinct id), count(distinct info) FROM pokemon")  
shape: (1, 2)  
┌─────┬────────┐  
│ id  ┆ info   │  
│ --- ┆ ---    │  
│ u32 ┆ u32    │  
╞═════╪════════╡  
│ 10  ┆ 999869 │  
└─────┴────────┘  
```  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")