Parameter
Description
subnetID
A unique number that identifies the subnet. Can be any number 
not already assigned to another subnet defined on the server. Can 
include embedded hyphens (-).
dns-server-n
To specify additional DNS servers, add additional 
dhcp_name_server settings, incrementing 
_array_index:n for each additional value.
Other parameters
The standard subnet settings described under “DHCP Subnet 
Settings Array” on page 131.
Command
(dhcp:command=)
Description
getLogPaths
Determine the location of the DHCP service logs.
Value
Description
The location of the DNS service log.
Default = /var/logs/system.log
LL2354.book  Page 134  Monday, October 20, 2003  9:47 AM
Chapter 13    Working With Network Services
135
DNS Service
Starting and Stopping the DNS Service
To start DNS service:
$ sudo serveradmin start dns
To stop DNS service:
$ sudo serveradmin stop dns
Checking the Status of DNS Service
To see summary status of DNS service:
$ sudo serveradmin status dns
To see detailed status of DNS service:
$ sudo serveradmin fullstatus dns
Viewing DNS Service Settings
To list DNS service configuration settings:
$ sudo serveradmin settings dns
To list a particular setting:
$ sudo serveradmin settings dns:setting
To list a group of settings:
Type only as much of the name as you want, stopping at a colon (:), then type an 
asterisk (*) as a wildcard for the remaining parts of the name. For example,
$ sudo serveradmin settings dns:zone:_array_id:localhost:*
Changing DNS Service Settings
You can use serveradmin to modify your server’s DNS configuration. However, you’ll 
probably find it more straightforward to work directly with DNS and BIND using the 
standard tools and techniques described in the many books on the subject. (See, for 
example, “DNS and BIND” by Paul Albitz and Cricket Liu.)
DNS Service Settings
To list the settings, see “Viewing DNS Service Settings” on this page.
List of DNS serveradmin Commands
Viewing the DNS Service Log
You can use tail or any other file listing tool to view the contents of the DNS service 
log.
Command (dns:command=)
Description
getLogPaths
Find the location of the DNS service log. See “Viewing the DNS 
Service Log” on this page.
getStatistics
Retrieve DNS service statistics. See “Listing DNS Service Statistics” 
on page 136.
LL2354.book  Page 135  Monday, October 20, 2003  9:47 AM
136
Chapter 13    Working With Network Services
To view the latest entries in a log:
$ tail log-file
You can use the serveradmin getLogPaths command to see where the current DNS 
log is located. The default is /Library/Logs/named.log.
To display the log path:
$ sudo serveradmin command dns:command = getLogPaths
Listing DNS Service Statistics
You can use the serveradmin getStatistics command to display a summary of 
current DNS service workload.
To list statistics:
$ sudo serveradmin command dns:command = getStatistics
Sample Output
dns:queriesArray:_array_index:0:name = "NS_QUERIES"
dns:queriesArray:_array_index:0:value = -1
dns:queriesArray:_array_index:1:name = "A_QUERIES"
dns:queriesArray:_array_index:1:value = -1
dns:queriesArray:_array_index:2:name = "CNAME_QUERIES"
dns:queriesArray:_array_index:2:value = -1
dns:queriesArray:_array_index:3:name = "PTR_QUERIES"
dns:queriesArray:_array_index:3:value = -1
dns:queriesArray:_array_index:4:name = "MX_QUERIES"
dns:queriesArray:_array_index:4:value = -1
dns:queriesArray:_array_index:5:name = "SOA_QUERIES"
dns:queriesArray:_array_index:5:value = -1
dns:queriesArray:_array_index:6:name = "TXT_QUERIES"
dns:queriesArray:_array_index:6:value = -1
dns:nxdomain = 0
dns:nxrrset = 0
dns:reloadedTime = ""
dns:success = 0
dns:failure = 0
dns:recursion = 0
dns:startedTime = "2003-09-10 11:24:03 -0700"
dns:referral = 0
Firewall Service
Starting and Stopping Firewall Service
To start Firewall service:
$ sudo serveradmin start ipfilter
To stop Firewall service:
$ sudo serveradmin stop ipfilter
LL2354.book  Page 136  Monday, October 20, 2003  9:47 AM
Chapter 13    Working With Network Services
137
Checking the Status of Firewall Service
To see summary status of Firewall service:
$ sudo serveradmin status ipfilter
To see detailed status of Firewall service, including rules:
$ sudo serveradmin fullstatus ipfilter
Viewing Firewall Service Settings
To list Firewall service configuration settings:
$ sudo serveradmin settings ipfilter
To list a particular setting:
$ sudo serveradmin settings ipfilter:setting
To list a group of settings:
Type only as much of the name as you want, stopping at a colon (:), then type an 
asterisk (*) as a wildcard for the remaining parts of the name. For example,
$ sudo serveradmin settings ipfilter:ipAddressGroups:*
Changing Firewall Service Settings
To change a setting:
$ sudo serveradmin settings ipfilter:setting = value
To change several settings:
$ sudo serveradmin settings
ipfilter:setting = value
ipfilter:setting = value
ipfilter:setting = value
[...]
Control-D
Firewall Service Settings
Use the following parameters with the serveradmin command to change settings for 
the IPFilter service.
Parameter
Description
setting
A IPFilter service setting. See “Firewall Service Settings” on 
this page.
value
An appropriate value for the setting.
Parameter (ipfilter:)
Description
ipAddressGroupsWithRules:
_array_id:...
An array of settings describing the services allowed for 
specific IP address groups. See “IPFilter Groups With Rules 
Array” on page 138.
rules:_array_id::...
Arrays of rule settings, one array per defined rule. See 
“IPFilter Rules Array” on page 141.
LL2354.book  Page 137  Monday, October 20, 2003  9:47 AM
138
Chapter 13    Working With Network Services
IPFilter Groups With Rules Array
An array of the following settings is included in the IPFilter settings for each defined IP 
address group. These arrays aren’t part of a standard ipfw configuration, but are created 
by the Server Admin GUI application to implement the IP Address groups on the 
General pane of the Firewall service settings. In an actual list of settings,  is 
replaced with an IP address group.
Defining Firewall Rules
You can use serveradmin to set up firewall rules for your server. However, a simpler 
method is to add your rules to a configuration file used by the service. By modifying 
the file, you’ll be able to define your rules using standard rule syntax instead of creating 
a specialized array to store the rule’s components.
Adding Rules by Modifying ipfw.conf
The file in which you can define your rules is /etc/ipfilter/ipfw.conf. The Firewall service 
reads this file, but doesn’t modify it. Its contents are annotated and include 
commented-out rules you can use as models. Its default contents are listed below.
For more information, read the ipfw man page.
logAllDenied
Specifies whether to log all denials.
Default = no
ipAddressGroups:_array_id:
n:address
The address of a defined IP address group, the first 
element of an array that defines an IP address group.
ipAddressGroups:_array_id:
n:name
The name of a defined IP address group, the second 
element of an array that defines an IP address group.
logAllAllowed
Whether to log access allowed by rules.
Default = no
Parameter (ipfilter:)
Description
Parameter (ipfilter:)
Description
ipAddressGroupsWithRules:
_array_id::rules
An array of rules for the group.
ipAddressGroupsWithRules:
_array_id::addresses
The group’s address.
ipAddressGroupsWithRules:
_array_id::name
The group’s name.
ipAddressGroupsWithRules:
_array_id::readOnly
Whether the group is set for read-only.
LL2354.book  Page 138  Monday, October 20, 2003  9:47 AM
Chapter 13    Working With Network Services
139
The unmodified ipfw.conf file:
# ipfw.conf.default - Installed by Apple, never modified by Server Admin app
#
# ipfw.conf - The servermgrd process (the back end of Server Admin app)
# creates this from ipfw.conf.default if it's absent, but does not modify
# it.
#
# Administrators can place custom ipfw rules in ipfw.conf.
#
# Whenever a change is made to the ipfw rules by the Server Admin
# application and saved:
#
1. All ipfw rules are flushed
#
2. The rules defined by the Server Admin app (stored as plists) 
#
are exported to /etc/ipfilter/ipfw.conf.apple and loaded into the
#
firewall via ipfw.
# 
3. The rules in /etc/ipfilter/ipfw.conf are loaded into the firewall 
# 
via ipfw.
# Note that the rules loaded into the firewall are not applied unless the
# firewall is enabled.
# 
# The rules resulting from the Server Admin app's IPFirewall and NAT panels
# are numbered:
# 
10 - from the NAT Service - this is the NAT divert rule, present only
#
when he NAT service is started via the Server Admin app.
# 
1000 - from the "Advanced" panel - the modifiable rules, ordered by
#
their relative position in the drag-sortable rule list
# 
12300 - from the "General" panel - "allow"" rules that punch specific
#
holes in the firewall for specific services
# 
63200 - from the "Advanced" panel - the non-modifiable rules at the
#
bottom of the panel's rule list
# 
# Refer to the man page for ipfw(8) for more information.
#
# The following default rules are already added by default:
#
#add 01000 allow all from any to any via lo0
#add 01010 deny all from any to 127.0.0.0/8
#add 01020 deny ip from 224.0.0.0/4 to any in
#add 01030 deny tcp from any to 224.0.0.0/4 in
#add 12300 ("allow" rules from the "General" panel)
#...
#add 63200 deny icmp from any to any in icmptypes 0 in
#add 63300 deny igmp from any to any in
#add 65000 deny tcp from any to any in setup
For more information, read the ipfw man page.
LL2354.book  Page 139  Monday, October 20, 2003  9:47 AM
140
Chapter 13    Working With Network Services
Adding Rules Using serveradmin
If you prefer not to work with the ipfw.conf file, you can use the serveradmin 
settings command to add firewall rules to your configuration.
Note:  Be sure to include the special first setting (ending with = create). This is how 
you tell serveradmin to create the necessary rule array with the specified rule number. 
To add a subnet:
$ sudo serveradmin settings
ipfilter:rules:_array_id:rule = create
ipfilter:rules:_array_id:rule:source = source
ipfilter:rules:_array_id:rule:protocol = protocol
ipfilter:rules:_array_id:rule:destination = destination
ipfilter:rules:_array_id:rule:action = action
ipfilter:rules:_array_id:rule:enableLocked = (yes|no)
ipfilter:rules:_array_id:rule:enabled = (yes|no)
ipfilter:rules:_array_id:rule:log = (yes|no)
ipfilter:rules:_array_id:rule:readOnly = (yes|no)
ipfilter:rules:_array_id:rule:source-port = port
Control-D
Example:
$ sudo serveradmin settings
ipfilter:rules:_array_id:1111 = create
ipfilter:rules:_array_id:1111:source = "10.10.41.60"
ipfilter:rules:_array_id:1111:protocol = "udp"
ipfilter:rules:_array_id:1111:destination = "any via en0"
ipfilter:rules:_array_id:1111:action = "allow"
ipfilter:rules:_array_id:1111:enableLocked = yes
ipfilter:rules:_array_id:1111:enabled = yes
ipfilter:rules:_array_id:1111:log = no
ipfilter:rules:_array_id:1111:readOnly = yes
ipfilter:rules:_array_id:1111:source-port = ""
Control-D
Parameter
Description
rule
A unique rule number.
Other parameters
The standard rule settings described under “IPFilter Rules Array” on 
page 141.
LL2354.book  Page 140  Monday, October 20, 2003  9:47 AM
Chapter 13    Working With Network Services
141
IPFilter Rules Array
An array of the following settings is included in the IPFilter settings for each defined 
firewall rule. In an actual list of settings,  is replaced with a rule number. You can 
add a rule by using serveradmin to create such an array in the firewall settings (see 
“Adding Rules Using serveradmin” on page 140).
Firewall serveradmin Commands
You can use the following commands with the serveradmin application to manage 
Firewall (ipfilter) service.
Parameter (ipfilter:)
Description
rules:_array_id::
source
The source of traffic governed by the rule.
rules:_array_id::
protocol
The protocol for traffic governed by the rule.
rules:_array_id::
destination
The destination of traffic governed by the rule.
rules:_array_id::
action
The action to be taken.
rules:_array_id::
enabled
Whether the rule is enabled.
rules:_array_id::
log
Whether activation of the rule is logged.
rules:_array_id::
readOnly
Whether read-only is set.
rules:_array_id::
source-port
The source port of traffic governed by the rule.
Command
(ipfilter:command=)
Description
getLogPaths
Find the current location of the log used by the service.
Default = /var/log/system.log
getStandardServices
Retrieve a list of the standard services as they appear on the 
General pane of the Firewall service settings in the Server Admin 
GUI application.
writeSettings
Equivalent to the standard serveradmin settings command, 
but also returns a setting indicating whether the service needs to 
be restarted. See “Determining Whether a Service Needs to be 
Restarted” on page 19.
LL2354.book  Page 141  Monday, October 20, 2003  9:47 AM
142
Chapter 13    Working With Network Services
Viewing Firewall Service Log
You can use tail or any other file listing tool to view the contents of the ipfilter service 
log.
To view the latest entries in the log:
$ tail log-file
You can use the serveradmin getLogPaths command to see where the current 
ipfilter service log is located.
To display the log path:
$ sudo serveradmin command ipfilter:command = getLogPaths
Output
ipfilter:systemLog = 
Using Firewall Service to Simulate Network Activity
You can use the Firewall service in Mac OS X service in conjunction with Dummynet, a 
general-purpose network load simulator. For more information on Dummynet, visit 
ai3.asti.dost.gov.ph/sat/dummynet.html or use Google or Sherlock to search the web.
NAT Service
Starting and Stopping NAT Service
To start NAT service:
$ sudo serveradmin start nat
To stop NAT service:
$ sudo serveradmin stop nat
Checking the Status of NAT Service
To see summary status of NAT service:
$ sudo serveradmin status nat
To see detailed status of NAT service:
$ sudo serveradmin fullstatus nat
Viewing NAT Service Settings
To list NAT service configuration settings:
$ sudo serveradmin settings nat
To list a particular setting:
$ sudo serveradmin settings nat:setting
Value
Description
The location of the ipfilter service log.
Default = /var/log/system.log
LL2354.book  Page 142  Monday, October 20, 2003  9:47 AM
Chapter 13    Working With Network Services
143
Changing NAT Service Settings
To change a setting:
$ sudo serveradmin settings nat:setting = value
To change several settings:
$ sudo serveradmin settings
nat:setting = value
nat:setting = value
nat:setting = value
[...]
Control-D
NAT Service Settings
Use the following parameters with the serveradmin command to change settings for 
NAT service.
Parameter
Description
setting
A NAT service setting. To see a list of available settings, type
$ sudo serveradmin settings nat
or see “NAT Service Settings” on this page.
value
An appropriate value for the setting.
Parameter (nat:)
Description
deny_incoming
yes|no
Default = no.
log_denied
yes|no
Default = no.
clamp_mss
yes|no
Default = yes
reverse
yes|no
Default = no
log
yes|no
Default = yes
proxy_only
yes|no
Default = no
dynamic
yes|no
Default = yes
use_sockets
yes|no
Default = yes
interface
The network port.
Default = "en0"
LL2354.book  Page 143  Monday, October 20, 2003  9:47 AM
144
Chapter 13    Working With Network Services
NAT serveradmin Commands
You can use the following commands with the serveradmin application to manage 
NAT service.
Viewing the NAT Service Log
You can use tail or any other file listing tool to view the contents of the NAT service 
log.
To view the latest entries in the log:
$ tail log-file
You can use the serveradmin getLogPaths command to see where the current NAT 
service log is located.
To display the log path:
$ sudo serveradmin command nat:command = getLogPaths
Output
nat:natLog = 
unregistered_only
yes|no
Default = no
same_ports
yes|no
Default = yes
Parameter (nat:)
Description
Command
(nat:command=)
Description
getLogPaths
Find the current location of the log used by the NAT service. See 
“Viewing the NAT Service Log” on this page.
updateNATRuleInIpfw
Update the firewall rules defined in the ipfilter service to reflect 
changes in the NAT settings.
writeSettings
Equivalent to the standard serveradmin settings command, 
but also returns a setting indicating whether the service needs to 
be restarted. See “Determining Whether a Service Needs to be 
Restarted” on page 19.
Value
Description