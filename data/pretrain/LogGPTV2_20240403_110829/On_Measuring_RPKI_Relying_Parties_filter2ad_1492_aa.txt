title:On Measuring RPKI Relying Parties
author:John Kristoff and
Randy Bush and
Chris Kanich and
George Michaelson and
Amreesh Phokeer and
Thomas C. Schmidt and
Matthias W&quot;ahlisch
On Measuring RPKI Relying Parties
John Kristoff
PI:EMAIL
University of Illinois at
Chicago
USA
Randy Bush
PI:EMAIL
IIJ and Arrcus
Japan and USA
Chris Kanich
PI:EMAIL
University of Illinois at
Chicago
USA
George Michaelson
PI:EMAIL
APNIC
Australia
Amreesh Phokeer
PI:EMAIL
AFRINIC
Mauritius
Thomas C. Schmidt
t.schmidt@haw-
hamburg.de
HAW Hamburg
Germany
Matthias Wählisch
PI:EMAIL
Freie Universität Berlin
Germany
ABSTRACT
In this paper, we introduce a framework to observe RPKI relying
parties (i.e., those that fetch RPKI data from the distributed repos-
itory) and present insights into this ecosystem for the first time.
Our longitudinal study of data gathered from three RPKI certifi-
cation authorities (AFRINIC, APNIC, and our own CA) identifies
different deployment models of relying parties and (surprisingly)
prevalent inconsistent fetching behavior that affects Internet rout-
ing robustness. Our results reveal nearly 90% of relying parties are
unable to connect to delegated publication points under certain
conditions, which leads to erroneous invalidation of IP prefixes and
likely widespread loss of network reachability.
CCS CONCEPTS
• Networks → Public Internet; Routing protocols; Security pro-
tocols; Network measurement; • Security and privacy → Se-
curity protocols.
KEYWORDS
Internet, Routing, Security
ACM Reference Format:
John Kristoff, Randy Bush, Chris Kanich, George Michaelson, Amreesh
Phokeer, Thomas C. Schmidt, and Matthias Wählisch. 2020. On Measuring
RPKI Relying Parties. In ACM Internet Measurement Conference (IMC ’20),
October 27–29, 2020, Virtual Event, USA. ACM, New York, NY, USA, 8 pages.
https://doi.org/10.1145/3419394.3423622
1 INTRODUCTION
The Resource Public Key Infrastructure (RPKI) [20] is an architec-
ture to support improved security for the BGP [30] routing system
on the Internet. For the first time, cryptographically secured objects
such as a chain of X.509 certificates in the RPKI, can be used to
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’20, October 27–29, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-8138-3/20/10...$15.00
https://doi.org/10.1145/3419394.3423622
Figure 1: The RPKI ecosystem
authenticate BGP route announcements to defend against problems
such as prefix re-origination route leaks [32].
Despite initial skepticism [15] the deployment of RPKI is un-
derway. Several large transit providers (e.g., AT&T [23], NTT [35],
and Telia [4, 22]), Internet Exchange Points (e.g., AMS-IX [1]), mid
and small size ISPs (e.g., Fiber Telecom [12]) as well as content
providers (e.g., Cloudflare [21]) evaluate and reject invalid routes
in production based on RPKI information. RPKI as currently de-
ployed protects against BGP misconfiguration and basic attacks
of illegitimate origination of IP address space. Future RPKI-based
mechanisms such as ASPA [2, 3] and BGPsec [13] will provide
stronger protection against accidents and malicious attacks. For a
validation system, to consider protected Internet resources (i.e., IP
prefixes and AS numbers) completely, it will be critical to fetch all
RPKI objects.
RPKI in a nutshell. Much like the web-based PKI and certificate
system, RPKI objects are created and signed by a Certification Au-
thority (CA). All RPKI objects (e.g., route origin authorization (ROA))
are disseminated as files in a distributed repository of publication
point (PP) servers. Analogous to a DNS authoritative server and DNS
   rpki-rtr protocol   RRDP / rsyncCertROATrustAnchorCertAFRINIC PPRPKI RepositoryRPKI objectscertiﬁcates,ROAscert:authorizesownership of IPpreﬁxes + ASNsROA:authorizes ASNsto originateIP preﬁxesHosted RPKI:RIRs run CACertROATrustAnchorCertRIPE PPCertROACertNIR/LIR/ISP PPCertCertCertDelegated RPKI:run your own CAPublicationCachingEnforcementRelying Party (RP)Fetching &Crypto ValidationBGP RouterBGP RouterPP:publication pointserves objectsIMC ’20, October 27–29, 2020, Virtual Event, USA
Kristoff, et al.
resolvers, a PP makes RPKI data available to relying parties (RPs). In
contrast to DNS resolvers, which fetch data on demand and have a
partial view of the DNS, these RPs must periodically fetch all au-
thoritative data and maintain a complete view. RPs use rsync [34]
or RRDP [5] for data retrieval, then cryptographically validate re-
ceived RPKI objects, cache the results, and relay data such as valid
prefix-to-origin AS bindings to BGP routers for use in the route
decision-making process (see Figure 1).
In the RPKI, the trust anchors (TAs) are each of the five indepen-
dent Regional Internet Registries (RIRs): ARIN, APNIC, AFRINIC,
LACNIC, and RIPE. The most common deployment model is the
hosted RPKI, in which these RIRs maintain the RPKI infrastructure
and offer RPKI as a service to their members. To allow for a fully
distributed system, each owner of Internet resources may opt to
run its own CA by deploying the delegated RPKI model. Ultimately,
each RP validates all signed objects in the RPKI hierarchy, starting
from each TA and following certificate paths to obtain a complete,
crypto-verified view of the RPKI hierarchy.
As RPKI is increasingly used to validate and enforce Internet
route announcements, the connection between PPs and the RPs
is considered to be critical Internet infrastructure. Understanding
how these entities interact with each other, and whether all objects
propagate to a sufficiently large portion of the Internet, will be
instrumental to determining whether the RPKI works as intended
and can be relied upon.
In this paper, we present an investigation of the current opera-
tion, completeness, and consistency of RPs and RP software, in the
RPKI as it is currently designed and deployed.
What might go wrong? There are several reasons that lead to an
incomplete or outdated view of RPKI data. (i) A RP does not reach
a publication point server; (ii) a RP fetches data infrequently; (iii) a
RP does not follow the technical specifications.
State of the art. Current research that analyzed the deployment
of RPKI focuses on two aspects. (i) The creation of ROA objects
and the validation outcome of BGP announcements [17, 36, 37].
(ii) The use of RPKI-based route filtering [14, 31, 33]. It is an open
research topic how relying parties behave and whether they have
a complete view of the RPKI. Having a better understanding of
the relying parties in the wild also provides insight into which
networks potentially consider RPKI for origin validation.
In this work, we present a first look at RP ac-
Contributions.
cess behavior and RPKI synchronization robustness. We make the
following contributions:
(1) We introduce a reproducible measurement framework for
evaluating RPKI RP synchronization behavior, timeliness,
and completeness.
(2) We characterize weaknesses in RPKI data propagation to RPs.
(3) We survey RPKI relying party software, access protocols,
and synchronization patterns with publication points.
(4) We identify a fundamental mismatch in RP software behavior
and and protocol design expectations through a series of
controlled publication point server experiments.
2 MEASUREMENT FRAMEWORK
In this section, we introduce our measurement framework to better
understand the deployment and operation of RPKI relying parties.
Table 1: Default refresh intervals for common RP software.
RP software
FORT Validator [28]
rpki.net rcynic [18]
OpenBSD rpki-client [29]
OctoRPKI [10]
Routinator [19]
RIPE NCC Validator 3 [26]
RIPE NCC Validator 2 [25]
RRDP
1 hour
1 hour
not implemented
20 minutes
10 minutes
2 minutes
1 minute
rsync
1 hour
1 hour
1 hour
20 minutes
10 minutes
10 minutes
10 minutes
Our framework is designed to allow for full reproducibility. It im-
plements active as well as passive measurement methods based on
the following three core building blocks: (i) controlled CAs and
publication points, (ii) controlled relying parties, and (iii) controlled
RPKI objects (i.e., ROA Beacons).
2.1 Building Blocks
Controlled CA and PP server. Global RP behavior in the wild is
best observed by PP server operators. To be independent of third
party data, we leverage the hierarchical, distributed, and delegated
design of the RPKI CA publication system. We operate a child, two
grandchildren CAs and three PPs under one of the RIR CAs. This
provides us with the necessary vertical view from RP, through the
trust anchor, and towards multiple levels of delegated CAs. To im-
plement a horizontal view, we plan to deploy delegated repositories
under additional CAs in the future.
Our PPs provide the ability to evaluate RRDP and rsync access
methods as well as IPv4 and IPv6 independently in order to study a
variety of RP deployment scenarios and behavioral anomalies. We
record time stamps, IP addresses, originating ASNs, and reverse
DNS records of the accessing RPs. When RRDP is used, we capture
the HTTP User-Agent to help the underlying software.
Controlled RP Cache Server. We operate multiple topologically
distributed RPs, each running different software implementations
fetching data recursively from all public trust anchors. These van-
tage points provide insights into the availability and performance
between any RP and PP pair. We will publicly document IP addresses
and configuration of fetching parameters to serve as ground truth
not only for us but also for CA operators. Even if CA operators that
run monitoring do not log access from our RPs, they will be able to
investigate reachability issues.
ROA Beacons. We introduce ROA Beacons. Similar to BGP Bea-
cons [24] they change their configuration based on well-defined,
publicly available schedules to monitor propagation delays. We
operate two types of ROA Beacons, those that are published and
revoked periodically, and those that periodically alternate between
a different assignment of a prefix to origin ASs.
ROA Beacons serve multiple purposes in detail. External parties
can verify whether their RPs and routers maintain recent data. A
PP operator can check when RPs fetch the changes. In this paper,
we used ROA Beacons to verify ground truth (i.e., whether RPs
fetch updated data). Leveraging RPKI Beacons for complementary
measurement studies will be part of our future work.
On Measuring RPKI Relying Parties
IMC ’20, October 27–29, 2020, Virtual Event, USA
(a) rsync
(b) RRDP
Figure 2: Synchronization activities from distinct RPs to fetch RPKI objects from monitored PPs via different protocols.
2.2 Establishing Ground Truth
We have run our CA/PP and ROA Beacon setup since 2018, while
we have had controlled RPs running since December 2019. Our RPs