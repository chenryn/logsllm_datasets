# Title: On Measuring RPKI Relying Parties

## Authors:
- John Kristoff, University of Illinois at Chicago, USA
- Randy Bush, IIJ and Arrcus, Japan and USA
- Chris Kanich, University of Illinois at Chicago, USA
- George Michaelson, APNIC, Australia
- Amreesh Phokeer, AFRINIC, Mauritius
- Thomas C. Schmidt, HAW Hamburg, Germany
- Matthias Wählisch, Freie Universität Berlin, Germany

## Abstract
In this paper, we present a framework for observing Resource Public Key Infrastructure (RPKI) relying parties—entities that fetch RPKI data from the distributed repository—and provide insights into this ecosystem. Our longitudinal study, which gathers data from three RPKI certification authorities (AFRINIC, APNIC, and our own CA), identifies different deployment models of relying parties and reveals prevalent inconsistent fetching behavior that can affect Internet routing robustness. We find that nearly 90% of relying parties are unable to connect to delegated publication points under certain conditions, leading to erroneous invalidation of IP prefixes and likely widespread loss of network reachability.

## CCS Concepts
- Networks: Public Internet, Routing protocols, Security protocols, Network measurement
- Security and privacy: Security protocols

## Keywords
Internet, Routing, Security

## ACM Reference Format
John Kristoff, Randy Bush, Chris Kanich, George Michaelson, Amreesh Phokeer, Thomas C. Schmidt, and Matthias Wählisch. 2020. On Measuring RPKI Relying Parties. In ACM Internet Measurement Conference (IMC ’20), October 27–29, 2020, Virtual Event, USA. ACM, New York, NY, USA, 8 pages. https://doi.org/10.1145/3419394.3423622

## 1 Introduction
The Resource Public Key Infrastructure (RPKI) [20] is an architecture designed to enhance the security of the Border Gateway Protocol (BGP) [30] on the Internet. For the first time, cryptographically secured objects such as X.509 certificates in the RPKI can be used to authenticate BGP route announcements, thereby defending against issues like prefix re-origination and route leaks [32].

Despite initial skepticism [15], the deployment of RPKI is underway. Several large transit providers (e.g., AT&T [23], NTT [35], and Telia [4, 22]), Internet Exchange Points (e.g., AMS-IX [1]), mid and small size ISPs (e.g., Fiber Telecom [12]), and content providers (e.g., Cloudflare [21]) are evaluating and rejecting invalid routes based on RPKI information. Current RPKI deployments protect against BGP misconfiguration and basic attacks on illegitimate origination of IP address space. Future RPKI-based mechanisms such as ASPA [2, 3] and BGPsec [13] will provide stronger protection against both accidental and malicious attacks. For a validation system to consider protected Internet resources (i.e., IP prefixes and AS numbers) comprehensively, it is critical to fetch all RPKI objects.

### RPKI in a Nutshell
Similar to the web-based PKI and certificate system, RPKI objects are created and signed by a Certification Authority (CA). These objects, such as Route Origin Authorizations (ROAs), are disseminated as files in a distributed repository of publication point (PP) servers. Analogous to DNS authoritative servers and resolvers, PPs make RPKI data available to relying parties (RPs). Unlike DNS resolvers, which fetch data on demand and have a partial view of the DNS, RPs must periodically fetch all authoritative data and maintain a complete view. RPs use rsync [34] or RRDP [5] for data retrieval, then cryptographically validate received RPKI objects, cache the results, and relay valid prefix-to-origin AS bindings to BGP routers for use in the route decision-making process (see Figure 1).

In the RPKI, the trust anchors (TAs) are the five independent Regional Internet Registries (RIRs): ARIN, APNIC, AFRINIC, LACNIC, and RIPE. The most common deployment model is the hosted RPKI, where these RIRs maintain the RPKI infrastructure and offer RPKI as a service to their members. To allow for a fully distributed system, each owner of Internet resources may opt to run its own CA by deploying the delegated RPKI model. Ultimately, each RP validates all signed objects in the RPKI hierarchy, starting from each TA and following certificate paths to obtain a complete, crypto-verified view of the RPKI hierarchy.

As RPKI is increasingly used to validate and enforce Internet route announcements, the connection between PPs and RPs is considered critical Internet infrastructure. Understanding how these entities interact and whether all objects propagate to a sufficiently large portion of the Internet is crucial for determining whether the RPKI works as intended and can be relied upon.

### What Might Go Wrong?
Several factors can lead to an incomplete or outdated view of RPKI data:
1. A RP does not reach a publication point server.
2. A RP fetches data infrequently.
3. A RP does not follow the technical specifications.

### State of the Art
Current research on RPKI deployment focuses on two aspects:
1. The creation of ROA objects and the validation outcome of BGP announcements [17, 36, 37].
2. The use of RPKI-based route filtering [14, 31, 33].

It remains an open research topic to understand how relying parties behave and whether they have a complete view of the RPKI. Gaining a better understanding of RPKI relying parties also provides insight into which networks potentially consider RPKI for origin validation.

### Contributions
In this work, we provide a first look at RP access behavior and RPKI synchronization robustness. Our contributions include:
1. Introducing a reproducible measurement framework for evaluating RPKI RP synchronization behavior, timeliness, and completeness.
2. Characterizing weaknesses in RPKI data propagation to RPs.
3. Surveying RPKI relying party software, access protocols, and synchronization patterns with publication points.
4. Identifying a fundamental mismatch in RP software behavior and protocol design expectations through a series of controlled publication point server experiments.

## 2 Measurement Framework
In this section, we introduce our measurement framework to better understand the deployment and operation of RPKI relying parties.

### Table 1: Default Refresh Intervals for Common RP Software
| RP Software                | RRDP     | rsync    |
|----------------------------|----------|----------|
| FORT Validator [28]        | 1 hour   | 1 hour   |
| rpki.net rcynic [18]       | 1 hour   | 1 hour   |
| OpenBSD rpki-client [29]   | Not implemented | 1 hour   |
| OctoRPKI [10]              | 20 minutes | 20 minutes |
| Routinator [19]            | 10 minutes | 10 minutes |
| RIPE NCC Validator 3 [26]  | 2 minutes | 10 minutes |
| RIPE NCC Validator 2 [25]  | 1 minute | 10 minutes |

Our framework is designed for full reproducibility and includes active and passive measurement methods based on the following core building blocks:
1. Controlled CAs and publication points.
2. Controlled relying parties.
3. Controlled RPKI objects (i.e., ROA Beacons).

### 2.1 Building Blocks
#### Controlled CA and PP Server
To observe global RP behavior, we leverage the hierarchical, distributed, and delegated design of the RPKI CA publication system. We operate a child, two grandchildren CAs, and three PPs under one of the RIR CAs. This setup provides a vertical view from RP, through the trust anchor, and towards multiple levels of delegated CAs. For a horizontal view, we plan to deploy additional delegated repositories under other CAs in the future.

Our PPs support RRDP and rsync access methods, as well as IPv4 and IPv6, to study various RP deployment scenarios and behavioral anomalies. We record timestamps, IP addresses, originating ASNs, and reverse DNS records of accessing RPs. When RRDP is used, we capture the HTTP User-Agent to identify the underlying software.

#### Controlled RP Cache Server
We operate multiple topologically distributed RPs, each running different software implementations and fetching data recursively from all public trust anchors. These vantage points provide insights into the availability and performance between any RP and PP pair. We will publicly document IP addresses and configuration parameters to serve as ground truth for both us and CA operators. Even if CA operators do not log access from our RPs, they can investigate reachability issues.

#### ROA Beacons
We introduce ROA Beacons, similar to BGP Beacons [24], which change their configuration based on well-defined, publicly available schedules to monitor propagation delays. We operate two types of ROA Beacons: those that are published and revoked periodically, and those that alternate between different assignments of a prefix to origin ASs.

ROA Beacons serve multiple purposes:
- External parties can verify whether their RPs and routers maintain recent data.
- PP operators can check when RPs fetch changes.
- In this paper, we use ROA Beacons to verify ground truth (i.e., whether RPs fetch updated data).
- Leveraging RPKI Beacons for complementary measurement studies will be part of our future work.

### 2.2 Establishing Ground Truth
We have been running our CA/PP and ROA Beacon setup since 2018, with controlled RPs operational since December 2019. Our RPs...