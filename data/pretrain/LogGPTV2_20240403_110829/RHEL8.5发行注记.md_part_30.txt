软件仓库，或者在安装过程中使用 `authselect`{.literal} Kickstart 命令。
(BZ#1640697)
[]{#known-issues.html#BZ-1697896}
::: title
**`reboot --kexec`{.literal} 和 `inst.kexec`{.literal}
命令不提供可预测的系统状态**
:::
使用 `reboot --kexec Kickstart`{.literal} 命令或 `inst.kexec`{.literal}
内核引导参数执行 RHEL
安装不会提供与完全重启相同的可预期系统状态。因此，在不重启的情况下切换安装的系统可能会导致无法预计的结果。
请注意，`kexec`{.literal} 功能已弃用，并将在以后的 Red Hat Enterprise
Linux 版本中删除。
(BZ#1697896)
[]{#known-issues.html#BZ-1757877}
::: title
**在安装程序中不默认启用网络访问**
:::
几个安装功能需要网络访问，例如：使用 Content Delivery Network(CDN)、NTP
服务器支持和网络安装源注册系统。但默认情况下不启用网络访问，因此在启用网络访问前无法使用这些功能。
要临时解决这个问题，请添加 `ip=dhcp`{.literal}
在启动安装时启用网络访问。另外，使用引导选项传递 Kickstart
文件或位于网络中的库也会解决这个问题。因此可以使用基于网络的安装功能。
(BZ#1757877)
[]{#known-issues.html#BZ-1929105}
::: title
**硬盘分区安装带有 iso9660 文件系统失败**
:::
您不能在使用 `iso9660`{.literal} 文件系统对硬盘进行分区的系统上安装
RHEL。这是因为更新的安装代码设置为忽略包含 `iso9660`{.literal}
文件系统分区的任何硬盘。即使在没有使用 DVD 安装 RHEL
时也会发生这种情况。
要解决这个问题，请在 kickstart
文件中添加以下脚本以在安装开始前格式化磁盘。
注：在执行临时解决方案前，请备份磁盘上的数据。`wipefs`{.literal}
命令格式化磁盘中的所有现有数据。
``` literallayout
%pre
wipefs -a /dev/sda
%end
```
因此，安装可以正常工作，不会有任何错误。
([BZ#1929105](https://bugzilla.redhat.com/show_bug.cgi?id=1929105){.link})
[]{#known-issues.html#BZ-2028361}
::: title
**带有 `HASH MMU`{.literal} 模式的 IBM Power
系统无法引导，并显示内存分配失败**
:::
带有 `HASH 内存分配单元(MMU)模式的`{.literal} IBM Power Systems 支持
`kdump`{.literal} 最多 192 个内核。因此，如果在 192 内核中启用了
`kdump`{.literal}，则该系统会失败，并显示内存分配失败。这个限制是因为在
`HASH MMU`{.literal} 模式早期引导时 RMA
内存分配造成的。要临时解决这个问题，使用启用 `fadump`{.literal} 的
`Radix MMU`{.literal} 模式，而不是使用 `kdump`{.literal}。
(BZ#2028361)
[]{#known-issues.html#BZ-1951964}
::: title
**在蓝图和 Kickstart 文件中添加相同的用户名会导致 Edge 镜像安装失败**
:::
要安装 RHEL for Edge 镜像，用户必须创建一个蓝图来构建
`rhel-edge-container 镜像`{.literal}，并创建一个 Kickstart 文件来安装
RHEL for Edge 镜像。当在蓝图和 Kickstart 文件中添加相同的用户名、密码和
SSH 密钥时，RHEL for Edge 镜像安装会失败。目前，还没有临时解决方案。
（[BZ#1951964](https://bugzilla.redhat.com/show_bug.cgi?id=1951964){.link}）
[]{#known-issues.html#BZ-1897383}
::: title
**new `osbuild-composer`{.literal} 后端不会在升级时从
`lorax-composer 复制`{.literal} 蓝图状态**
:::
从 `lorax-composer 后端升级到 new osbuild-composer`{.literal}
``{=html}
后端的镜像构建器用户，蓝图可能会消失。因此，升级完成后，蓝图不会自动显示。要临时解决这个问题，请执行以下步骤。
::: itemizedlist
**先决条件**
-   已安装 `composer-cli`{.literal} CLI 工具。
:::
::: orderedlist
**流程**
1.  运行该命令，将之前基于 `lorax-composer`{.literal} 的蓝图加载到 new
    `osbuild-composer`{.literal} 后端：
    ``` screen
    $ for blueprint in $(find /var/lib/lorax/composer/blueprints/git/workspace/master -name '*.toml'); do composer-cli blueprints push "${blueprint}"; done
    ```
:::
因此，相同的蓝图现在包括在 in `osbuild-composer`{.literal} 后端。
::: itemizedlist
**其它资源**
-   有关此已知问题的详情，请参阅[镜像构建器蓝图在 Red Hat Enterprise
    Linux 8.3
    的更新后不再存在](https://access.redhat.com/solutions/5587781){.link}。
:::
([BZ#1897383)](https://bugzilla.redhat.com/show_bug.cgi?id=1897383){.link}
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_subscription-management}订阅管理 {.title}
:::
[]{#known-issues.html#BZ-1687900}
::: title
**`syspurpose addons`{.literal} 对
`subscription-manager attach --auto`{.literal} 输出没有影响。**
:::
在 Red Hat Enterprise Linux 8 中，添加了 `syspurpose`{.literal}
命令行工具的四个属性：`role`{.literal}、`usage`{.literal}、`service_level_agreement`{.literal}
和 `addons`{.literal}目前，只有 `role`{.literal}、`usage`{.literal} 和
`service_level_agreement`{.literal} 会影响到运行
`subscription-manager attach --auto`{.literal} 命令的输出。试图为
`addons`{.literal}
参数设置值的用户不会观察到对自动附加的订阅有任何影响。
([BZ#1687900](https://bugzilla.redhat.com/show_bug.cgi?id=1687900){.link})
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_software-management}软件管理 {.title}
:::
[]{#known-issues.html#BZ-1960616}
::: title
**如果系统中没有 CodeReady Linux Builder 软件仓库，lib
`dnf-devel`{.literal} 升级会失败**
:::
`libdnf-devel`{.literal} 软件包已从 BaseOS 移到 CodeReady Linux Builder
存储库中。因此，如果系统中没有 CodeReady Linux Builder 存储库，升级
`libdnf-devel`{.literal} 会失败。
要临时解决这个问题，在升级前启用 CodeReady Linux Builder 存储库，或删除
`libdnf-devel`{.literal} 软件包。
([BZ#1960616](https://bugzilla.redhat.com/show_bug.cgi?id=1960616){.link})
[]{#known-issues.html#BZ-1973588}
::: title
**`cr_compress_file_with_stat（）`{.literal} 可能会导致内存泄漏**
:::
`createrepo_c`{.literal} 库具有 API
`cr_compress_file_with_stat（）`{.literal} 函数。此函数使用
`char **dst`{.literal} 作为第二个参数声明。根据其他参数，cr
`_compress_file_with_stat（）`{.literal} 将 `dst`{.literal}
用作输入参数，或使用它返回分配的字符串。这种不可预测的行为可能会导致内存泄漏，因为它不会告知用户何时释放
`dst`{.literal} 内容。
要临时解决这个问题，添加了一个新的 API
`cr_compress_file_with_stat_v2`{.literal} 功能，该函数仅将
`dst`{.literal} 参数用作输入。它被声明为
`char *dst`{.literal}。这样可防止内存泄漏。
请注意，cr `_compress_file_with_stat_v2`{.literal}
功能是临时的，仅会出现在 RHEL 8 中。之后，将修复
`cr_compress_file_with_stat(`{.literal} )。
(BZ#1973588)
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_infrastructure-services}基础架构服务 {.title}
:::
[]{#known-issues.html#BZ-1711885}
::: title
**FIPS 模式中的 postfix TLS 指纹算法需要改为 SHA-256**
:::
默认情况下，在 RHEL 8中，`postfix`{.literal}使用带有TLS 的MD5
指纹来进行向后兼容。但是在 FIPS 模式中，MD5 哈希功能不可用，这可能会导致
TLS 在默认 postfix 配置中不正确正常工作。要解决这个问题，在 postfix
配置文件中需要将哈希功能改为 SHA-256。
如需了解更多详细信息，请参阅 [Fix postfix TLS in the FIPS mode by
switching to SHA-256 instead of
MD5](https://access.redhat.com/articles/5824391){.link}。
([BZ#1711885](https://bugzilla.redhat.com/show_bug.cgi?id=1711885){.link})
[]{#known-issues.html#BZ-2008197}
::: title
**`brltty`{.literal} 软件包不是 multilib 兼容**
:::
无法同时安装 32 位和 64 位版本的 `brltty`{.literal} 软件包。您可以安装
32 位(`brltty.i686`{.literal})或 64
位(`brltty.x86_64`{.literal})版本。建议使用 64 位版本。
([BZ#2008197](https://bugzilla.redhat.com/show_bug.cgi?id=2008197){.link})
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_security}安全性 {.title}
:::
[]{#known-issues.html#BZ-1858866}
::: title
**`/etc/passwd- 的文件`{.literal} 权限与 CIS RHEL 8 Benchmark 1.0.0
不一致**
:::
由于 CIS Benchmark 存在问题，修正 SCAP 规则可以确保
`/etc/passwd-`{.literal} backup 文件中的权限被配置为
`0644`{.literal}。但是
`CIS Red Hat Enterprise Linux 8 Benchmark 1.0.0`{.literal}
需要该文件的文件权限 `0600`{.literal}。因此，在修复后,
`/etc/passwd-`{.literal} 的文件权限与基准数据不一致。
([BZ#1858866)](https://bugzilla.redhat.com/show_bug.cgi?id=1858866){.link}
[]{#known-issues.html#BZ-1666328}
::: title
**`libselinux-python`{.literal} 只能通过其模块提供**
:::
`libselinux-python`{.literal} 软件包只包含用于开发 SELinux 应用程序的
Python 2 绑定，它用于向后兼容。因此，通过
`dnf install libselinux-python`{.literal} 命令，默认的 RHEL 8
软件仓库不再提供 `libselinux-python`{.literal}。
要临时解决这个问题，请启用 `libselinux-python`{.literal} 和
`python27`{.literal} 模块，并使用以下命令安装
`libselinux-python`{.literal} 软件包及其相依性软件包：
``` screen
# dnf module enable libselinux-python
# dnf install libselinux-python
```
或者，使用它的安装配置集在一个命令中安装 `libselinux-python`{.literal}:
``` screen
# dnf module install libselinux-python:2.8/common
```
因此，您可以使用相关的模块安装 `libselinux-python`{.literal}。
(BZ#1666328)
[]{#known-issues.html#BZ-1763210}
::: title
**`UDICA`{.literal} 仅在使用 `--env container=podman`{.literal}
启动时才会处理 UBI 8 容器**
:::
Red Hat Universal Base Image 8(UBI 8)容器将 `container`{.literal}
环境变量设置为 `oci`{.literal} 值，而不是 `podman`{.literal}