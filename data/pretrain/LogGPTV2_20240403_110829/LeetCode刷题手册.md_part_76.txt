的 0 全部被 1 替换，1 全部被 0 替换。例如，反转[0,1,1] 的结果是[1,0, 0]。
的每一行都进行翻转，即逆序。例如，水平翻转[1,1,0] 的结果是[0,1,1]。反转图片的意思是图片中
给定一个二进制矩阵A，我们想先水平翻转图像，然后反转图像并返回结果。水平翻转图片就是将图片
题目大意
Notes:
·简单题，按照题意先水平翻转，再反转即可。
·给定一个二进制矩阵，要求先水平翻转，然后再反转(1→0，0→1)。
●0 {
>
else if dominoes[i] == 'L' && dominoes[j] == 'R'
res += string(dominoes[i]]
 continue
for k := O; k 2{ 
++u
uf.Union(i，j)
return false
---
## Page 794
代码
解题思路
提示：
否则返回 false。
房间外的其余所有房间都被锁住。你可以自由地在房间之间来回走动。如果能进入每个房间返回 true,
个整数表示，其中N= rooms.length。钥匙 rooms[ijj] =v可以打开编号为v的房间。最初，除0号
在形式上，对于每个房间i都有一个钥匙列表 rooms[i]，每个钥匙 rooms[i]j] 由[0,1，
有一些钥匙能使你进入下一个房间。
有N个房间，开始时你位于0号房间。每个房间有不同的号码：0，1，2，…，N-1，并且房间里可能
题目大意
Note:
Example 2: 
func canvisitAllrooms(rooms [][]int) bool {
3
2i
1. 1 <= rooms.length <= 1000
+
Explanation: we can't enter the room with number 2.
Output: false 
Input: [[1,3],[3,0,1],[2],[0]]
We then go to room 3. since we were able to go to every room, we return true.
we then go to room 2, and pick up key 3.
we then go to room 1, and pick up key 2.
we start in room O, and pick up key 1.
Explanation:
Output:true
Input: [[1],[2],[3],[]]
）用 DFS 依次深搜所有房间的钥匙，如果都能访问到，最终输出 true。这题算是 DFS 里面的简单
visited := make(map[int]bool) 
 所有房间中的钥匙数量总计不超过 3000。
0 <= rooms[i].length <= 1000 
1 <= rooms.length <= 1000
. The number of keys in all rooms combined is at most 3000.
. 0 <= rooms [i].length <= 1000
dfsvisitAllRooms(rooms, visited, 0)
visited[o] = true 
题。
要求，问最终能否进入所有房间。
N-1]中的-
---
## Page 795
Example 4: 
Example 3: 
 Example 2: 
Example 1: 
Return any Fibonacci-like sequence split from S, or return [1 if it cannot be done.
zeroes, except if the piece is the number O itself. 
Formally, a Fibonacci-like sequence is a list F of non-negative integers such that: 
[123, 456, 579].
Given a string S of digits, such as S = "123456579", we can split it into a Fibonaci-like sequence
题目
842. Split Array into Fibonacci Sequence
Output: [1,1,2,3,5,8,13]