title:TraceNET: an internet topology data collector
author:M. Engin Tozal and
Kamil Saraç
TraceNET: An Internet Topology Data Collector
M. Engin Tozal
Department of Computer Science
The University of Texas at Dallas
Richardson, TX 75080 U.S.A.
PI:EMAIL
Kamil Sarac
Department of Computer Science
The University of Texas at Dallas
Richardson, TX 75080 U.S.A.
PI:EMAIL
ABSTRACT
This paper presents a network layer Internet topology collec-
tion tool called tracenet. Compared to traceroute, trace-
net can collect a more complete topology information on an
end-to-end path. That is, while traceroute returns a list of
IP addresses each representing a router on a path, tracenet
attempts to return all the IP addresses assigned to the inter-
faces on each visited subnetwork on the path. Consequently,
the collected information (1) includes more IP addresses be-
longing to the traced path; (2) represents “being on the same
LAN” relationship among the collected IP addresses; and (3)
annotates the discovered subnets with their observed subnet
masks. Our experiments on Internet2, GEANT, and four
major ISP networks demonstrate promising results on the
utility of tracenet for future topology measurement stud-
ies.
Categories and Subject Descriptors
C.2 [COMPUTER-COMMUNICATION NETWORKS]:
Network Architecture and Design
General Terms
Measurement
Keywords
Internet, Network, Subnet, Topology, Traceroute
1.
INTRODUCTION
Many successful research projects and eﬀorts have been
introduced attempting to derive an accurate and large scale
topology map of the Internet [17, 18, 22, 16]. These eﬀorts
focus on diﬀerent but correlated topology maps: IP level
maps show IP addresses that are in use on the Internet;
router level maps group the interfaces hosted by the same
router into a single unit (via alias resolution); subnet level
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
Destination
a
Destination
b
Vantage
Traceroute
Vantage
TraceNET
Figure 1: Traceroute vs tracenet on a path trace.
Traceroute collects a single IP address vs tracenet
collects a subnet at each hop.
maps enrich the router level maps with subnet level connec-
tivity info; and AS level maps demonstrate the adjacency
relationship between ASes.
Adverse to the beneﬁts of having a network topology map,
the main tools used to collect router or IP address level
topology data are a few and operationally limited. Trace-
route [12] and ping are the main data collection tools. Tra-
ceroute collects a list of IP addresses one for each router on
the path between two hosts and ping is mainly used to check
whether an IP address is in use or not. Almost all topology
mapping projects use data collected by traceroute from
multiple vantage points [19].
In this study, we propose a new end-to-end topology col-
lection tool called tracenet. An accurate and complete In-
ternet topology map at the router level requires identifying
all routers and subnets among them. Traceroute attempts
to collect an IP address at each router on a path between two
hosts whereas tracenet attempts to collect a subnet at each
router on the same path. In the worst case, tracenet returns
the exact path that would be returned by traceroute, and,
in the best case, it collects the complete topology of each
subnet visited on the path. Consequently, a single session
of tracenet (1) discovers new IP addresses that are missed
by traceroute, (2) marks multi-access and point-to-point
links, (3) reveals subnet relationship among IP addresses on
the path, and (4) annotates the subnets with their observed
subnet masks. Traceroute’s ability to collect a similar data
is often limited in practice due to the diﬃculties of obtain-
ing a reverse path trace and due to the dynamics of the
underlying routing behavior between the two systems. As
an example, consider the use of traceroute and tracenet
to collect router level topology info between a vantage point
356R
1
R
2
R
1
R
2
R
1
R
2
A
B
R
3
R
4
R
5
R
6
R
7
R
8
R
9
Network Topology
(a)
C
D
A
B
R
3
R
6
P1
P2
P3
R
4
R
5
A
R
3
R
4
R
5
R
8
R
9
R
6
R
7
R
8
R
9
Traceroute
(b)
C
D
B
P1
P2
P3
TraceNET
(c)
C
D
Figure 2: A network topology section among hosts A, B, C, and D with unweighed links.
P1 =
{A, R1, R2, R5, R9, D} and P2 = {A, R3, R4, R5, R9, D} are two paths from A to D. P3 = {B, R6, R3, R4, R8, C} is
a path from B to C. Figures show the original network topology, traceroute view of the paths and tracenet
view of the paths respectively.
and a destination as shown in Figure 1. Figures 1.a and
1.b show the data acquired by traceroute and tracenet
respectively over a network segment.
In the ﬁgure, small
circles attached to the routers show the interfaces on the
routers. An interface whose IP address is revealed during
a trace is shown in black and otherwise is shown in white.
The lines represent point-to-point or multi-access LANs and
the arrows on the links show the routing direction of the
trace between the vantage point and the destination. Note
that in order for traceroute to return a similar topology
information as tracenet, one needs to run traceroute in
the reverse direction (from the destination to the vantage
point) as well. However, a key limitation for traceroute is
that one may not have access to the destination node to run
a traceroute query in the reverse direction. Even if one has
the required access, the paths between the two nodes may
not be symmetric and therefore the reverse trace returned
by traceroute might not capture the missing information
from the ﬁrst path trace. In fact, such a trace may return
another incomplete network topology data for the reverse
path. Tracenet, on the other hand, attempts to collect the
complete topology information on the path in a single trace
from the vantage point to the destination.
This valuable information comes with extra probing over-
head. However, taking into account that acquiring similar
information with traceroute requires extensive tracing con-
ducted from many vantage points and a careful post process-
ing [10, 8, 7], tracenet can be regarded as a cost eﬀective
solution in terms of bandwidth and computation.
Two important objectives in router level Internet topology
mapping studies are completeness and accuracy. Complete-
ness objective requires discovering each and every alive IP
address on a given network and accuracy objective requires
grouping together IP addresses that are on the same router
and establishing both multi-access and point-to-point links
between the routers.
A common goal in most topology discovery studies is to
increase the coverage of the underlying network as much
as possible. This is typically implemented by increasing
the number of vantage points and destination addresses in
topology discovery. However, the utility of this commonly
followed approach was shown to be limited [6]. One of our
primary goals in this work is to maximize the utility of our
data collection process by focusing on discovering the com-
plete topology of the visited subnets on the path. Naturally
our approach allows us to collect more information at each
path trace issued at a vantage point.
One critical observation about the existing topology dis-
covery studies is that accuracy is always considered as a
posterior process after data collection. Accuracy objective
is achieved by addressing several functional steps in convert-
ing raw topology data to the corresponding topology maps
and it involves IP alias resolution, anonymous router reso-
lution, and subnet inference steps. Most of these tasks are
shown to be computationally expensive due to the large vol-
ume of data [10, 8, 7]. Tracenet combines some of these
functional steps,
into topology
collection phase signiﬁcantly reducing the computational
complexity in converting the raw data into corresponding
topology maps.
subnet inference,
e.g.,
Note that both completeness and accuracy conditions af-
fect practical utility of the resulting topology maps. As an
example, consider the use of a collected network topology
map in designing resilient overlay network systems where
the goal is to use the topology map to identify node and
link disjoint overlay paths between two neighboring overlay
nodes as shown in Figure 2. Figure 2.a shows the physical
topology of a network that includes several point-to-point
and multi-access links. Assume that our goal is to identify
node and link disjoint paths between A and D as well as
between B and C in this network. Figure 2.b shows the net-
work topology collected by traceroute where P1 and P2 are
two paths between A and D and P3 is a single path between
B and C. Based on this topology map one would infer that
the use of P1 for A to D path along with the use of P3 for
B and C path would satisfy the node and link disjointness
requirement. However, this would be an inaccurate conclu-
sion as routers R2, R4, R5 and R8 are sharing a multi-access
link and P1 and P3 are not really link disjoint. On the other
hand, a tracenet collected topology info as shown in Fig-
ure 2.c would include the subnet information hence, would
help to avoid the incorrect conclusion above.
Our experimental evaluations of tracenet on Internet2
and GEANT topology, with data collected from a single
vantage point at UT Dallas, resulted in a topology map
with 86% similarity to the original Internet2 topology and
90% similarity to the original GEANT topology. (see Sec-
tion 4.1).
In addition, we ran tracenet over four major
commercial ISPs from three vantage points and cross vali-
dated the obtained results (see Section 4.2). Figures show
357that around 60% of subnets observed by all three vantage
points and roughly 80% of subnets observed by a particular
vantage point is also observed from at least one other van-
tage point. Experimental results promote the use of trace-
net in case studies involving network topology mapping and
network analysis/debugging.
The remainder of the paper is organized as follows. Next
section introduces the related work. Section 3 details the
internals of tracenet. Section 4 presents our experimental
evaluation results. Finally, Section 5 concludes the paper.
2. RELATED WORK
Traceroute [12] has been the main tool to collect router
level topology data in the Internet.
It sends TTL scoped
packets in order to make the routers located at each hop
between a vantage point and a destination to return ICMP
TTL-Exceeded messages. Each router reports one of its IP
addresses by setting it as the source address of the returned
ICMP packet. All in all, traceroute returns a list of IP ad-
dresses each belonging to a router at each hop on the path.
Certain load balancing practices may aﬀect the accuracy of
traceroute returned paths. A version of traceroute, called
Paris traceroute [4], attempts to minimize the negative im-
pact of such load balancing activities.
Traceroute can use ICMP, UDP, or TCP based probes. It
has been reported that TCP traceroute is good at penetrat-
ing through ﬁrewalls whereas ICMP traceroute is more im-
mune to path ﬂuctuations [15, 9]. Discarte project [20] sets
record-route option of probe packets to force the compliant
routers to stamp the packets with outgoing IP address. As
a result, it obtains two IP addresses per hop.
Various techniques have been used to discover more IP
addresses in topology mapping studies. Skitter/ARK [17]
traces the same set of destinations from multiple vantage
points. Rocketfuel [21] aims to reveal the map of a sin-
gle AS by carefully selecting the sources and the destina-
tions to include the target AS network on the path traces.
AROMA [13] advocates the selection of trace destinations
from within the targeted network for better exploration of
the network.
The well-known ping tool uses direct probing to check if
a given IP address is in use or not. Census study [11] uses
ping to determine alive IP addresses on the Internet.
Finally, our previous work [7] attempts to identify subnet
relation among the IP addresses collected in a traceroute
based topology collection study as a post processing step on
the data set.
Tracenet, presented in this paper, is based on several ob-
servations related to IP address assignment practices and
routing dynamics. Similar to traceroute, it obtains a sin-
gle IP address at each hop, however, before moving to the
next hop, it attempts to collect the IP addresses sharing
the same LAN with the obtained IP address. At the end
of a tracenet run, we get a sequence of subnets between the
source and destination hosts. Unlike the approach presented
in [7], tracenet discovers subnet topologies as part of the
online data collection process.
3. TRACENET
In this section we develop necessary deﬁnitions, present
several observations regarding operational and topological
characteristics of the Internet, and describe internals of
tracenet.
A router level Internet graph consists of routers and sub-
nets. Each router and subnet hosts at least two interfaces.
A router R is identiﬁed by the set of interfaces that it hosts:
R = {l1, l2, . . . , lm}. Similarly, a subnet, S, is identiﬁed by
a set of interfaces that are directly connected to it: S =
{l1, l2, . . . , ln}. An interface l has an associated IP address
deﬁned as lip and a hop distance with respect to a certain
vantage point v, shown as lh
v . Whenever the vantage point
v is obvious in a context, we drop v and use lh. Finally, in
our discussions we use R.e, R.n, R.w, and R.s to refer to
the interface located on (e)ast, (n)orth, (w)est, and (s)outh
of a router R.
3.1 Deﬁnitions
In this section we introduce several deﬁnitions that we use
in the rest of the paper.
(i) Direct Probing is the process of sending a probe packet
with large enough TTL value destined to some IP address.
It is used to test if the IP address is alive or not. In gen-
eral a probe packet is an ICMP ECHO REQUEST; a UDP
packet destined to a likely unused port number; or the sec-
ond packet of TCP handshake protocol. These probes force a
responsive router to send back an ICMP ECHO REPLY; an
ICMP PORT UNREACHABLE; or a TCP RESET packet,
respectively.
(ii) Indirect Probing is the process of sending a probe
packet with a small TTL value destined to some IP address
in order to reveal an IP address of another router presumably
located at TTL hops away on the path. The probe packet
could be of type ICMP, UDP, or TCP. Whenever the TTL
reaches zero, a responsive router would notify the origina-
tor of the probe message with an ICMP TTL EXCEEDED
packet. The source address of this packet would be one of
the IP addresses of the router based on its response conﬁg-
uration as explained next.
(iii) Router Response Conﬁguration implies that a
router is conﬁgured to remain reticent or reveal a certain
interface’s IP address in its response to a direct or indi-
rect probe (query) packet. To the best of our knowledge,
routers on the Internet are conﬁgured with ﬁve types of re-
sponse policies: nil interface routers are conﬁgured not to
respond to any probe packet; probed interface routers re-
spond with the address of the probed interface; incoming
interface routers respond with the address of the interface
through which the probe packet has entered into the router;
shortest-path interface routers respond with the address of
the interface that has the shortest path from the router back
to the probe originator; and default interface routers re-
spond with a pre-designated default IP address regardless of
the interface being probed. Usually, responsive routers are
conﬁgured to behave as probed interface routers for direct
probes and any other conﬁguration for indirect probes. Ob-
serve that a router cannot be conﬁgured as probed interface
router for indirect queries. Additionally, routers may be con-
ﬁgured with multiple response conﬁgurations with respect to
the protocol type of a probe packet i.e. ICMP, UDP, or TCP.
3583.2 Observations
This section presents a set of operational and topological
observations on the Internet.
(i) Hierarchical Addressing details the common IP ad-
dress assignment practices and refers to the Classless Inter-
Domain Routing (CIDR) on the Internet (RFC 4632). Given
any subnetwork S on the Internet, the IP addresses assigned
to the interfaces on S should share a common p bits preﬁx.
Such a subnet S is said to have a /p preﬁx (subnet mask)
and is shown in this paper as Sp.
Any two IP addresses that have 31 or 30 bits common
preﬁx are called mate-31 or mate-30 of each other.