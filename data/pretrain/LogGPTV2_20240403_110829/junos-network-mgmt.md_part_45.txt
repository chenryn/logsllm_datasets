group group-name;
group-name is a collection of SNMP users that belong to a common SNMP list that defines an access
policy. Users belonging to a particular SNMP group inherit all access privileges granted to that group.
Configure the Security Model
To configure the security model, include the security-model statement at the [edit snmp v3 vacm access group
group-name (default-context-prefix | context-prefix context-prefix)] hierarchy level:
[edit snmp v3 vacm access group group-name (default-context-prefix | context-prefix context-
prefix)]
security-model (any | usm | v1 | v2c);
• any—Any security model
• usm—SNMPv3 security model
• v1—SNMPV1 security model
• v2c—SNMPv2c security model
527
Configure the Security Level
To configure the access privileges granted to packets with a particular security level, include the security-
level statement at the [edit snmp v3 vacm access group group-name (default-context-prefix | context-prefix
context-prefix) security-model (any | usm | v1 | v2c)] hierarchy level:
[edit snmp v3 vacm access group group-name default-context-prefix security-model (any | usm | v1 |
v2c)]
security-level (authentication | none | privacy);
• none—Provides no authentication and no encryption.
• authentication—Provides authentication but no encryption.
• privacy—Provides authentication and encryption.
You can grant access privileges to all packets with a security level equal to or greater than that
configured. If you are configuring the SNMPv1 or SNMPv2c security model, use none as your security
level. If you are configuring the SNMPv3 security model (USM), use the authentication, none, or privacy
security level.
Associate MIB Views with an SNMP User Group
IN THIS SECTION
Configure the Notify View | 528
Configure the Read View | 528
Configure the Write View | 528
MIB views define access privileges for members of a group. You can apply separate views for each
SNMP operation (read, write, and notify) within each security model (usm, v1, and v2c) and each
security level (authentication, none, and privacy) supported by SNMP.
To associate MIB views with an SNMP user group, include the following statements at the [edit snmp v3
vacm access group group-name (default-context-prefix | context-prefix context-prefix) security-model (any | usm |
v1 | v2c) security-level (authentication | none | privacy)] hierarchy level. For more information about this
statement, see access (SNMP).
528
You must associate at least one view (notify, read, or write) at the [edit snmp v3 vacm access group group-name
(default-context-prefix | context-prefix context-prefix) security-model (any | usm | v1 | v2c) security-level
(authentication | none | privacy)] hierarchy level.
You must configure the MIB view at the [edit snmp view view-name] hierarchy level. For information about
how to configure MIB views, see "Configure MIB Views" on page 573.
This section describes the following topics related to this configuration:
Configure the Notify View
To associate notify access with an SNMP user group, include the notify-view statement at the [edit snmp
v3 vacm access group group-name (default-context-prefix | context-prefix context-prefix) security-model (any | usm
| v1 | v2c) security-level (authentication | none | privacy)] hierarchy level. For more information about this
statement, see notify-view.
view-name specifies the notify access, which is a list of notifications that can be sent to each user in an
SNMP group. A view name cannot exceed 32 characters.
Configure the Read View
To associate a read view with an SNMP group, include the read-view statement at the [edit snmp v3 vacm
access group group-name (default-context-prefix | context-prefix context-prefix) security-model (any | usm | v1 |
v2c) security-level (authentication | none | privacy)] hierarchy level. For more information about this
statement, see read-view.
view-name specifies read access for an SNMP user group. A view name cannot exceed 32 characters.
Configure the Write View
To associate a write view with an SNMP user group, include the write-view statement at the [edit snmp v3
vacm access group group-name (default-context-prefix | context-prefix context-prefix) security-model (any | usm |
v1 | v2c) security-level (authentication | none | privacy)] hierarchy level. For more information about this
statement, see write-view.
view-name specifies write access for an SNMP user group. A view name cannot exceed 32 characters.
529
Example: Configure the Access Privileges Granted to a Group
Define access privileges:
[edit snmp v3 vacm]
access {
group group1 {
default-context-prefix {
security-model usm { #Define an SNMPv3 security model
security-level privacy {
notify-view nv1;
read-view rv1;
write-view wv1;
}
}
}
context-prefix lr1/ri1{ # routing instance ri1 in logical system lr1
security-model usm {
security-level privacy {
notify-view nv1;
read-view rv1;
write-view wv1;
}
}
}
}
group group2 {
default-context-prefix {
security-model usm { #Define an SNMPv3 security model
security-level authentication {
read-view rv2;
write-view wv2;
}
}
}
}
group group3 {
default-context-prefix {
security-model v1 { #Define an SNMPv3 security model
security-level none {
read-view rv3;
530
write-view wv3;
}
}
}
}
}
Assign Security Model and Security Name to a Group
IN THIS SECTION
Configure the Security Model | 530
Assign Security Names to Groups | 531
Configure the Group | 531
To assign security names to groups, include the following statements at the [edit snmp v3 vacm security-to-
group] hierarchy level. For more information about this statement, see security-model (Group).
This topic includes the following sections:
Configure the Security Model
To configure the security model, include the security-model statement at the [edit snmp v3 vacm security-to-
group] hierarchy level:
[edit snmp v3 vacm security-to-group]
security-model (usm | v1 | v2c);
• usm—SNMPv3 security model
• v1—SNMPv1 security model
• v2c—SNMPv2 security model
531
Assign Security Names to Groups
To associate a security name with an SNMPv3 user, or a v1 or v2 community string, include the security-
name statement at the [edit snmp v3 vacm security-to-group security-model (usm | v1 | v2c)] hierarchy level:
[edit snmp v3 vacm security-to-group security-model (usm | v1 | v2c)]
security-name security-name;
For SNMPv3, the security-name is the username configured at the [edit snmp v3 usm local-engine user
username] hierarchy level. For SNMPv1 and SNMPv2c, the security name is the community string
configured at the [edit snmp v3 snmp-community community-index] hierarchy level. For information about
configuring usernames, see " Create SNMPv3 Users" on page 535. For information about configuring a
community string, see " Configure SNMPv3 Community" on page 566.
NOTE: The USM security name is separate from the SNMPv1 and SNMPv2c security name. If
you support SNMPv1 and SNMPv2c in addition to SNMPv3, you must configure separate
security names within the security-to-group configuration at the [edit snmp v3 vacm access]
hierarchy level.
Configure the Group
After you have created SNMPv3 users, or v1 or v2 security names, you associate them with a group. A
group is a set of security names belonging to a particular security model. A group defines the access
rights for all users belonging to it. Access rights defines what SNMP objects can read, writte to, or
create. A group also defines the notifications a user can receive.
If you already have a group that is configured with all the view and access permissions that you want to
give a user, you can add the user to that group. If you want to give a user view and access permissions
that no other groups have, or if you do not have any groups configured, create a group, and add the user
to it.
To configure the access privileges granted to a group, include the group statement at the [edit snmp v3 vacm
security-to-group security-model (usm | v1 | v2c) security-name security-name] hierarchy level. For more
information about this statement, see group (Defining Access Privileges for an SNMPv3 Group).
532
Example: Security Group Configuration
Assign security names to groups:
vacm {
security-to-group {
security-model usm {
security-name user1 {
group group1;
}
security-name user2 {
group group2;
}
security-name user3 {
group group3;
}
}
}
}
Configure Local Engine ID on SNMPv3
By default, the local engine ID uses the default IP address of the router. The local engine ID is the
administratively unique identifier for the SNMPv3 engine. This statement is optional. To configure the
local engine ID, include the engine-id statement at the [edit snmp] hierarchy level. For more information
about this statement, see engine-id.
NOTE: If you are using SNMPv3 and if the engine ID is based on the MAC address and you
upgrade from an earlier release to one of the releases (14.1X53-D50, 16.1R5, 17.1R2, 17.2R1,
15.1X53-D231, 14.1X53-D43, 15.1X53-D232), you must reconfigure SNMPv3 because the
engine ID is changed by the upgrade. If you do not reconfigure SNMPv3, you will see
authentication error for SNMPv3 polling because the engine ID is changed after the upgrade.
You only need to reconfigure SNMPv3 on the first such upgrade. If you then upgrade from one of
the mentioned releases to another of these releases, you do not have to upgrade SNMPv3 again.
To reconfigure SNMPv3, use the following procedure. Do not use the rollback 1 command.
533
1. Check what the SNMPv3 configuration is.
user@host# show snmp v3
2. Delete the SNMPv3 configuration.
user@host# delete snmp v3
3. Reconfigure SNMPv3 configuration (see ouput from Step 1).
The local engine ID is defined as the administratively unique identifier of an SNMPv3 engine, and is used
for identification, not for addressing. There are two parts of an engine ID: prefix and suffix. The prefix is
formatted according to the specifications defined in RFC 3411, An Architecture for Describing Simple
Network Management Protocol (SNMP) Management Frameworks. You can configure the suffix here.
NOTE: SNMPv3 authentication and encryption keys are generated based on the associated
passwords and the engine ID. If you configure or change the engine ID, you must commit the
new engine ID before you configure SNMPv3 users. Otherwise, the keys generated from the
configured passwords are based on the previous engine ID.
For the engine ID, we recommend using the primary IP address of the device if the device has
multiple routing engines and has the primary IP address configured. Alternatively, you can use
the MAC address of the management port if the device has only one Routing Engine.
Configure SNMPv3
IN THIS SECTION
Create SNMPv3 Users | 535
Minimum SNMPv3 Configuration on a Device Running Junos OS | 535
Example: SNMPv3 Configuration | 536
534
The QFX3500 switch supports SNMP version 3 (SNMPv3). SNMPv3 enhances the functionality of
SNMPv1 and SNMPv2c by supporting user authentication and data encryption. SNMPv3 uses the user-
based security model (USM) to provide security for SNMP messages, and the view-based access control
model (VACM) for user access control.
SNMPv3 features include:
• With USM, the SNMP messages between the SNMP manager and the agent can have the message
source authenticated and the data integrity checked. USM reduces messaging delays and message
replays by enforcing timeout limits and by checking for duplicate message request IDs.
• VACM complements USM by providing user access control for SNMP queries to the agent. You
define access privileges that you wish to extend to a group of one or more users. Access privileges
are determined by the security model parameters (usm, v1, or v2) and security level parameters
(authentication, privacy, or none). For each security level, you must associate one MIB view for the
group. Associating a MIB view with a group grants the read, write, or notify permission to a set of
MIB objects for the group.
• You configure security parameters for each user, including the username, authentication type and
authentication password, and privacy type and privacy password. The username given to each user is
in a format that is dependent on the security model configured for that user.
• To ensure messaging security, another type of username, called the security name, is included in the
messaging data that is sent between the local SNMP server and the destination SNMP server. Each
user name is mapped to a security name, but the security name is in a format that is independent of
the security model.
• Trap entries in SNMPv3 are created by configuring the notify, notify filter, target address, and target
parameters. The notify statement specifies the type of notification (trap) and contains a single tag
that defines a set of target addresses to receive a trap. The notify filter defines access to a collection
of trap object identifiers (OIDs). The target address defines the address of an SNMP management
application and other attributes used in sending notifications. Target parameters define the message
processing and security parameters used in sending notifications to a particular target.
To configure SNMPv3, perform the following tasks:
• "Configure MIB Views" on page 573
• "Access Privileges for an SNMP Group" on page 524
• "Configure SNMPv3 Traps on a Device Running Junos OS" on page 543
• "Configure SNMP Informs" on page 550
535
Create SNMPv3 Users
For each SNMPv3 user, you can specify the username, authentication type, authentication password,
privacy type, and privacy password. After a user enters a password, a key based on the engine ID and
password is generated and written to the configuration file. After the generation of the key, you can
delete the password from this configuration file.
You can configure only one encryption type for each SNMPv3 user.
To create users, include the user statement at the [edit snmp v3 usm local-engine] hierarchy level.
To configure user authentication and encryption, include the following statements at the [edit snmp v3 usm
local-engine user username] hierarchy level.
Minimum SNMPv3 Configuration on a Device Running Junos OS
To configure the minimum requirements for SNMPv3, include the following statements at the [edit snmp
v3] and [edit snmp] hierarchy levels.
You must configure at least one view (notify, read, or write) at the [edit snmp view-name] hierarchy level.
1. Create users and configure authentication.
user@host# set snmp v3 usm local-engine user superuser authentication-md5 authentication-
password 12345678
user@host#set snmp v3 usm local-engine user superuser privacy-aes128 privacy-password 12345678
2. Configure access privileges to a group.
user@host# set snmp v3 vacm access group supergroup default-context-prefix security-model usm
security-level authentication context-match exact
user@host# set snmp v3 vacm access group supergroup default-context-prefix security-model usm
security-level authentication read-view readview
user@host# set snmp v3 vacm access group supergroup default-context-prefix security-model usm
security-level authentication write-view writeview
user@host# set snmp v3 vacm access group supergroup default-context-prefix security-model usm
security-level authentication notify-view notifyview
user@host# set snmp v3 vacm security-to-group security-model usm security-name superuser group
supergroup
3. (Optional) Configure the target address properties to which the trap notification is sent.
user@host# set snmp v3 target-address TA address  tag-list trap_recv target-
parameters tp1
536
user@host# set snmp v3 target-parameters tp1 parameters message-processing-model v3 security-
model usm security-level authentication security-name superuser
user@host# set snmp v3 target-parameters tp1 notify-filter nfilter1
user@host# set snmp v3 notify-filter nfilter1 oid .1 include
user@host# set snmp v3 notify notify1 type trap tag trap_recv
4. Configure snmp view to read, write and notify access to the MIB.
user@host# set snmp view readview oid .1 include
user@host# set snmp view writeview oid .1 include
user@host# set snmp view notifyview oid .1 include
SEE ALSO
v3
Example: SNMPv3 Configuration
Define an SNMPv3 configuration:
[edit snmp]
engine-id {
use-mac-address;
}
view jnxAlarms {
oid 1.3.6.1.4.1.2636.3.4 include;
}
view interfaces {
oid 1.3.6.1.2.1.2 include;
}
view ping-mib {
oid 1.3.6.1.2.1.80 include;
}
[edit snmp v3]
notify n1 {
tag router1; # Identifies a set of target addresses
type trap;# Defines type of notification
}
notify n2 {
537
tag host1;
type trap;
}
notify-filter nf1 {
oid .1 include; # Defines which traps to send
} # In this case, includes all traps
notify-filter nf2 {
oid 1.3.6.1.4.1 include; # Sends enterprise-specific traps only
}
notify-filter nf3 {
oid 1.3.6.1.2.1.1.5 include; # Sends BGP traps only
}
snmp-community index1 {
community-name "$9$JOZi.QF/AtOz3"; # SECRET-DATA
security-name john; # Matches the security name at the target parameters
tag host1; # Finds the addresses that are allowed to be used with
}
target-address ta1 {# Associates the target address with the group
# san-francisco.
address 10.1.1.1;
address-mask 255.255.255.0; # Defines the range of addresses
port 162;
tag-list router1;
target-parameters tp1; # Applies configured target parameters
}
target-address ta2 {
address 10.1.1.2;
address-mask 255.255.255.0;
port 162;
tag-list host1;
target-parameters tp2;
}
target-address ta3 {
address 10.1.1.3;
address-mask 255.255.255.0;
port 162;
tag-list “router1 host1”;
target-parameters tp3;
}
target-parameters tp1 { # Defines the target parameters
notify-filter nf1; # Specifies which notify filter to apply
parameters {
message-processing-model v1;
538
security-model v1;
security-level none;
security-name john; # Matches the security name configured at the
} # [edit snmp v3 snmp-community community-index hierarchy level.
}
target-parameters tp2 {
notify-filter nf2;
parameters {
message-processing-model v1;
security-model v1;
security-level none;
security-name john;
}
}
target-parameters tp3 {
notify-filter nf3;
parameters {