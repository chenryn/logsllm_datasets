Let’s Sink The Phishermen’s Boat! 
Teo Sze Siong 
F-Secure Corporation 
PI:EMAIL 
BE SURE! 
Let’s 
et’s 
et’s 
et’s Sink 
ink 
ink 
ink The 
he 
he 
he Phisherm
hisherm
hisherm
hishermeeeen’s 
n’s 
n’s 
n’s Boat
oat
oat
oat!!!!    
Teo Sze Siong 
PI:EMAIL  
Abstract: In recent years, the boom of e-commerce has changed the way people do business and 
manage their money via online banking. This technology wave has driven banks to invest huge amount 
of dollars in security infrastructure to protect their daily business operations and to increase their 
customers' confidence towards them. However, the paradigm has now shifted to the client side attacks 
as most users are unguarded and vulnerable against cyber attacks which are launched either through 
technical perspective or social engineering means. Many users still do not understand the risk that they 
face even when they are using their own trusted computers to perform online banking protected with 2-
factor authentication security. 
In this paper, an advanced form of phishing attack will be discussed to show the risk how 
criminals might steal the entire fund from an online banking account protected with daily transaction 
limit and bypassing the 2-factor authentication system. This type of attack is able to work in stealthy 
mode without showing any theft symptoms in the bank account balance to keep the victims in the dark. 
Challenges and limitations encountered by the existing phishing detection techniques will be also 
identified and reviewed to understand the applicability of each technique in different scenarios. 
As a step taken to combat phishing attacks, the concept of 'website appearance signature' will be 
presented and explained how this concept can be applied to detect unknown phishing websites. This has 
been a great challenge in the past since most phishing website detection tools verify the reputation of a 
website using a database of blacklisted URLs. In addition, a Proof-Of-Concept application employing the 
'website appearance signature' combining with conventional phishing detection techniques will be 
demonstrated to see its' accuracy and effectiveness as a phishing website detection tool. 
Let’s Sink The Phishermen’s Boat! 
Teo Sze Siong 
F-Secure Corporation 
PI:EMAIL 
BE SURE! 
1. Introduction 
According to Gartner report, United States adult lost about USD3.2bil in year 2007 due to 
phishing frauds. Banking industry spent millions of dollars to deploy security systems such as the 2-
factor authentication system as a step to increase their customers’ confidence. However, there is a 
lack of public awareness regarding the risk when performing online banking without observing the 
proper security measures. 
In this paper, I present techniques that might be used by criminals to trick their victims into 
revealing their banking information without raising suspicious symptoms to maintain continuous 
access. Besides, some techniques that might be employed by malware to steal sensitive information 
are also described in this paper to show the risk when performing financial related activities on a 
malware infected machine. 
2. Related techniques 
In recent years, we have seen different techniques being used by malware to help criminals 
stealing information and remain stealthy either through social engineering or technical 
implementation. Some of those techniques can be observed from the following: 
2.1 Hosts file modification (Pharming attack) 
In this technique, malware will modify the ‘hosts’ file of the operating system by adding an entry 
to make the legitimate banking website’s hostname to resolve to the attackers web server IP 
address. When the victim enters the URL of a legitimate website, the web browser will load the fake 
banking website hosted by the attacker. This type of attack is known as ‘pharming’. This technique 
will probably fail when the malware is not running with sufficient privilege to modify the hosts file. 
Besides, this technique may also trigger an alert on systems installed with IDS/IPS that monitors or 
prevents hosts file changes. The hosts file for Windows platform by default is located at 
C:\Windows\System32\drivers\etc\hosts while the hosts file for UNIX based platform is usually 
located at /etc/hosts. On Windows system, the DNS cache can be cleared to reload the hosts file by 
issuing a command like ‘ipconfig /flushdns’ while on UNIX based system is usually done by restarting 
the DNS cache daemon that is selected to be used. 
Let’s Sink The Phishermen’s Boat! 
Teo Sze Siong 
F-Secure Corporation 
PI:EMAIL 
BE SURE! 
2.2 Keystroke monitoring 
Very often, malware such as Trojan horses are designed to listen on keystrokes to steal 
information such as credit card numbers, usernames and passwords on infected machines. 
Nevertheless, this method is getting less effective as the use of one time password or security token 
authentication in 2-factor authentication of online banking system makes the stolen information 
become worthless. This challenges the attackers to shift their strategy to much more sophisticated 
form of attacks. 
2.3 Fake windows form 
This is basically a form of social engineering attack that shows a professional looking window 
form that looks like an interface of legitimate software. These fake graphical user interfaces usually 
ask for credit card number or financial account information such as PayPal to complete purchase or 
registration of a particular product. Although this method is less seen nowadays, but still there are 
victims who fall into this kind of trap. 
2.4 Web browser modification 
Web browser functionalities are usually modified by malware through DLL injection or 
installation of malicious plugins to steal sensitive information entered by the user or stored on the 
local machine. These attacks usually target Microsoft Internet Explorer web browser due to its 
insecure design that allows dangerous code execution in ActiveX components. 
2.5 API hooking (user mode or kernel mode) 
API hooking technique has become increasingly popular in recently years employed by malware 
to prevent antivirus software detection. In the past, API hooking at user mode such as IAT/EAT 
patching and inline function hook were commonly used for reverse engineering purposes or modify 
the behavior of a legacy application without source code. The paradigm has now shifted to kernel 
land using techniques such as Direct Kernel Object Manipulation (DKOM) or patching the System 
Service Descriptor Table (SSDT). The most dangerous part of this technique when misused is that it 
can be used not just to steal information, but also capable of hiding the malware process, network 
sockets, registry keys and files to avoid detection. These features that make it stealthy are 
commonly known as rootkit behaviour. Fortunately, tools such as F-Secure BlackLight, Rootkit 
Revealer or SDT Restore are able to detect the presence of rootkit. 
Let’s Sink The Phishermen’s Boat! 
Teo Sze Siong 
F-Secure Corporation 
PI:EMAIL 
BE SURE! 
Advanced phishing attack 
This section describes an advanced form of phishing attack that might be employed by criminals 
to steal the entire fund from an online banking account protected with daily transaction limit and 
bypassing the 2-factor authentication system. The risk of such attack is that criminals can transfer 
out all the money from their victims’ bank account in several transactions while keeping them in the 
dark. Although there are several attack techniques can overcome the 2-factor authentication 
security exists presently, but those techniques work in a ‘hit-and-run’ way thus not capable of 
drawing out the entire fund from an online banking account that is protected with daily transaction 
limit. 
The approach for this attack is to remain stealth by showing the victims fake information such as 
last login date/time, transaction history, balance amount, etc. that should reflect in their real 
banking account to prevent the victims from knowing that their banking account is under attack. 
Therefore, the attacker can have ample time to transfer all the money in several transaction days. 
Below shows the flow of such attack in different steps: 
2.6 Victim logins to the fake banking website using their username, password and one-time-use 
security token generated from security device or smartcard provided by bank. The attacker uses 
the login information entered by victim at the fake banking website to login to the real banking 
website. 
2.7 The attacker retrieves information such as account number, last login, transaction history, etc. 
from the real banking website and stores them to the simulated fake banking website database.  
2.8 In online banking systems protected with 2-factor authentication, a security token is required 
from the user for each transaction to be performed. Whenever the victim enters a security 
token to perform transaction, the attacker uses the security token entered at the fake website 
to perform fund transfer from the victim’s banking account to their money mule’s account. 
Victim’s 
machine 
Real banking 
website 
Simulated 
fake banking 
website 
Login 
Login 
Real banking 
website 
Simulated 
fake banking 
website 
Retrieves information from real banking website 
and stores them to the simulated banking website 
Victim’s 
machine 
Real banking 
website 
Simulated 
fake banking 
website 
Enter security 
token to perform 
transaction 
Attacker uses the 
security token to 
transfer fund out 
Show simulated 
fake transaction 
result to fool victim 
Let’s Sink The Phishermen’s Boat! 
Teo Sze Siong 
F-Secure Corporation 
PI:EMAIL 
BE SURE! 
2.9 Since the security token will expire within a short time frame, automating the attack in real-time 
is important to ensure successful fund transfers. The attacker can easily automate a web 
browser to perform login and transactions by sending mouse clicks and keystrokes using 
functions exported by user32.dll such as SendInput(), PostMessage(), SendMessage(), 
mouse_event() or keybd_event(). This method will be a lot simpler and less effort to implement 
than simulating a web browser with SSL support to automate the attack. 
2.10 
Communication with banking websites must usually go through encrypted channel 
(HTTPS) thus intercepting the data received from web server at socket level is not a good choice. 
To retrieve decrypted information in web browser received from the server, the attacker can 
just create a browser plugin such as Browser Helper Object to inspect the information via 
Document Object Model (DOM) of the loaded page. In addition, automation of information 
retrieval can also be done from web browser user interface by sending mouse clicks and virtual 
keys such as CTRL+A and CTRL+C to copy the selected information to clipboard. Then, the 
information in the clipboard can be reformatted and stored into the simulated fake banking 
website to fool the victim. 