the freshness counter is necessary as well. Another factor is
key management, which includes not only key generation and
distribution but also its secure storing. This requires HSMs,
which can provide additional acceleration for the calculation
of cryptographic algorithms [65]. However, even for ECUs
which include such a hardware extension, the calculation or
veriﬁcation of the tags is not trivial, as further overhead is
added by the communication with the HSM. For example,
for ECUs that process many frames, such as gateways, it is
difﬁcult to process all tags accordingly. But although a MAC
can be implemented without problems, they do not offer non-
repudiation. As a result, ECUs capable of verifying frames are
also able to forge them. Non-repudiation is provided by digital
signatures, but their requirements are considerably greater and
therefore not suitable for CAN communication.
Murvay and Groza [46] have shown for the ﬁrst
time
that
the differences of the CAN signal characteristics can
be used for sender identiﬁcation and remain unchanged over
several months on a prototype setup. Based on these results,
Choi et al. [11] optimized the approach by using machine
learning methods for classiﬁcation. Using a neural network
and a sample rate of 2.5 GS/s a classiﬁcation rate of 96.48 %
was achieved. The approach also requires to embed a ﬁxed
18-bit value for all ECUs in the extended identiﬁer ﬁeld to
extract the characteristics from the corresponding signal. This
allows a classiﬁcation independent of the transmitted data, but
at the same time reduces the available bandwidth. In addition,
the extended identiﬁer can no longer be used for its original
purpose. The best results are achieved by using a ﬁxed value
which, apart from additional stuff bits, consists exclusively of
dominant bits. Therefore, characteristics contained in the rising
or falling edge only slightly inﬂuence the classiﬁcation. Thus,
the voltage level is the most important and main characteristic.
With VoltageIDS [12] Choi et al. have presented a further
development of their approach operating without the extended
identiﬁer ﬁeld. The approach was evaluated in two vehicles,
with identiﬁcation rates ranging from 90.01 % to 99.61 % being
achieved while driving. In addition, a lower sample rate of
250 MS/s was analyzed, resulting in a detection rate of up to
93.54 % on real vehicles.
The IDS extension Voltage-based attacker identiﬁcation
(Viden) [10] works only on the basis of the voltage level,
whose goal is to identify the attacking ECU after an intrusion
has been detected by a high-level IDS. The system generates
a model based on the average voltage level of dominant
bits of the ECUs, collected from multiple frames. Although
the basic concept has low resource requirements, a 200-tree
Random Forest is used to verify the decisions, which negates
the performance advantage. The veriﬁcation phase is necessary
for the detection of voltage-aware attackers and to distinguish
near-equivalent voltage proﬁles, for which we see an increased
probability due to the use of a single signal characteristic.
In addition, there are no details about the life cycle of the
classiﬁer, whose training respectively actualization we consider
to be very complex, as with Decision Trees. Beyond that, Viden
uses the two signals, high and low, separately instead of the
difference signal, making it more sensitive to interferences.
Scission [34] uses comprehensive signal characteristics for
the identiﬁcation. By analyzing the individual symbols of a
received frame separately, an identiﬁcation rate of 99.85 %
could be achieved, while all false positives were prevented
during the evaluation in two production vehicles. Even if
Scission has a lower computing requirement compared to the
work of Choi et al. [11], there is still a high hardware demand.
This is mainly caused by the resulting data rate due to the
methodology as well as the sampling rate of 20 MS/s. Scission
can therefore only be partially implemented on an automotive
platform, which must also provide an external ADC.
Simple [17] creates an average symbol
like Volt-
ageIDS [12] and therefore also utilizes comprehensive signal
characteristics for sender identiﬁcation. The difference to pre-
vious methods lies in the fact that the average symbol is used as
a direct input for the identiﬁcation via a distance metric. While
this provides runtime beneﬁts, we have observed that using
machine learning is an advantage regarding the robustness as
well as the identiﬁcation and detection rates. This is also shown
by the results, as despite a sampling rate of 50 MS/s and the
use of a less complex bus architecture, the equal error rate of
0.89 is higher than the rates we achieved with EASI.
With TACAN [67] an approach to use covert channel-based
transmitter authentication by exploiting physical characteristics
of communication was introduced. Among others, the inter-
arrival times are speciﬁcally adapted to transmit information
for the authentication of ECUs. While this option does not
have a negative impact on bandwidth compared to the use of
MACs, key management and the additional resource demand
for resources for the calculations remain. Especially with the
adoption of CAN with ﬂexible data rate (CAN-FD), the issue
of limited bandwidth for the transmission of MAC tags loses
importance, as the maximum payload rises to 64 bytes.
Besides using sender identiﬁcation methods it
is also
possible to use package-inspection in order to detect malicious
behavior, like done by EVAD [21] or CASAD [48]. Rare
cases and combinations, which have to be considered for
training, make these systems prone to wrong decisions in
12
operation [63]. Depending on the actual requirements there
is either an additional cloud connection or a high-performance
ECU necessary to establish and adapt the models according to
the driver or environmental conditions. Apart from the voltage,
signal characteristics are less dependent on the situation or
driver and thus much easier to keep up-to-date. On the other
hand, these systems are also able to detect attacks based on
the payload of the frames, even if the identiﬁer used is sent by
a legitimate ECU. Therefore, we consider package-inspection
as a complementary security measure to sender identiﬁcation.
VII. RESOURCE REQUIREMENTS
The approach presented in this paper reduces the require-
ments, enabling the usage of comprehensive signal character-
istics on resource-constrained platforms in real time. Previous
approaches have considerably higher requirements, are not
real-time capable even with high-end PC hardware [11] or
leave this issue unclear [34], [12]. In order to compare the
requirements, we consider the necessary memory to store the
measurements in order to generate one ﬁngerprint and the
computational effort required for the calculation of the mean,
a feature used by the compared approaches. In the following
we assume a bus with a baud rate of 500 kb/s and a frame
with a payload of 8 bytes.
In the approach of Choi et al. [11] the extended identiﬁer is
used and its signals are recorded with 2.5 GS/s and 12 bit accu-
racy. Due to the recommended extended identiﬁer, three stuff
bits are transmitted in addition, resulting in a total of 21 bits.
Thus, only for the storage of the measurements 153.81 kB are
needed, which is already 20 % more than the available memory
of the platform used in this paper. The VoltageIDS [12] uses
the signals which are transmitted after the arbitration phase.
This results in 86 bits, recorded with at least 250 MS/s and
8 bit accuracy. Possible stuff bits are not considered here.
Altogether, this results in a memory requirement of 41.99 kB.
Scission [34] is comparable to the VoltageIDS, but operates
with a lower sample rate of 20 MS/s, resulting in a memory
requirement of 3.36 kB. Simple [17] samples initially the
whole frame with 50 MS/s, including the bit ﬁelds before the
payload in order to extract the identiﬁer. Since this can easily
be avoided by using the CAN controller, we also assume
86 bits here, which corresponds to a memory requirement
of 8.4 kB. EASI samples ten edges two times, resulting in
20 measurements respectively a memory requirement of 20
bytes, which is a reduction by a factor of 168 compared to
Scission [34].
An exact statement about the required computational re-
sources is difﬁcult to determine as the approaches are imple-
mented in different programming languages, have been tested
on different platforms or are not available. However, since
the greatest effort lies in the calculation of the features, we
consider the number of cycles required to calculate the mean
value. This gives an estimation of how strong the calculation
depends on the number of measurements. The results are
shown in Table V, where it can be seen that our approach re-
duces the computational effort by a factor of 142 compared to
Scission [34]. As mentioned in Section V a frame with 8 bytes
of payload occupies the bus for a minimum of 222 µs at a
bandwidth of 500kB/s. The calculation of the mean value with
Scission alone requires 332 µs with the embedded platform
TABLE V: Comparison of the considered approaches.
Approach
Identiﬁcation (%)
False positives (%)
Sampling rate (MS/s)
Improvement factor
FP footprint (kB)
Improvement factor
Computation (cycles)
Improvement factor
al.[11]
Choi
et
96.48
3.52
2500
1250
153.81
7691
2.7 M
6443
[12]
VoltageIDS
93.54
6.46
250
125
41.99
2150
0.75 M
1782
[34]
Scission
99.85
0
20
10
3.36
168
60 K
142
[17]
Simple
99.1
0.9
50
25
8.4
420
+
+
ASI
E
99.98
0
2
-
0.02
-
420
-
used here, almost one and a half the time the bus is occupied
by the frame. For comparison, our approach is completed with
the entire feature calculation and classiﬁcation after 96.62 µs.
Since Simple [17] does not calculate comparable features, we
cannot give a comparison for this metric. To ensure that this
performance advantage is not ignored, we highlight Simple
positively in the table.
Another part of the cost of implementing an approach for
the use of comprehensive signal characteristics is deﬁned by
the required ADC. Higher sampling rates usually require an
external ADCs, which leads to additional costs for the circuit
and also for the actual ADC. While gigasample ADCs cost
several 100 dollars, ADCs with few megasample are in the
10 dollar range. EASI can work without additional ADCs,
since the required sample rate is often supported by current
MCUs [30], [49], [59].
VIII. DISCUSSION
A. Size of Frames
A disadvantage of the proposed procedure is that a mini-
mum number of rising edges is required to acquire a sufﬁcient
number of samples. In order to obtain a representative signal
curve comparable to a curve sampled with 20 MS/s, at least
10 rising edges are required at a sampling rate of 2 MS/s. The
number of edges depends primarily on the transmitted data.
However, the minimum available and usable edges can be
determined so that a minimum sampling rate can be speciﬁed
with regard to the data lengths. If the entire data space is known
for a communication system, the required sampling rate can
be determined.
The minimum number of usable rising edges depending on
the length of the payload and the resulting minimum sampling
rate is given in Table VI. Only the rising edges which are
present after arbitration were counted, since previous ones may
have been inﬂuenced by other bus participants. In addition
to the data length and the actual data, the CRC ﬁeld is also
available, which in the worst case contains two rising edges.
If these parameters are not fulﬁlled, the senders of messages
containing too few rising edges may only be determined with
limited accuracy. Thus, with 2 MS/s in the worst case, only
frames containing at least 5 bytes of payload can be clearly
assigned.
13
TABLE VI: Required sampling rate in MS/s dependent on the
length of the payload in bytes.
Payload
Edges
Rate
0
2
10
1
4
5
2
6
3.4
3
8
2.5
4
9
2.3
5
11
1.9
6
11
1.9
7
13
1.6
8
15
1.4
B. Using an External ADC
Although we have presented a procedure which avoids
the need for an additional ADC depending on the platform,
it can still offer advantages to use an external ADC with a
high sample rate in order to record a full edge directly. This
is particularly the case if several buses are to be analyzed
simultaneously by the same system, for example, if EASI is
integrated in a gateway that connects several bus segments.
Thus, one ADC can then be utilized for the buses, since the
time of its usage per frame would be much smaller and the
triggering would also require a less precise behavior. Except
for the signal gathering phase, no changes would be necessary.
C. Falling Edge
In addition to the rising edge, the falling edge also provides
characteristics which can be used for classiﬁcation. Although
the characteristics are not sufﬁcient to achieve comparable
results, they can be used to increase the detection rate and
robustness. Depending on the selected features, however, the
required computing power and memory utilization increases.
D. Limitations
The system detects intrusions when a malicious ECU sends
messages with identiﬁers for which it is not authorized. When
an attack can be carried out without this injury, the system
presented is not able to detect it. This also applies if an
attack is fed into the monitored bus via a gateway and the
messages with the identiﬁers used can generally be sent via
the gateway. This is based on the fact that the signals of the
original sender are replaced by the signals of the gateway.
Further, simple additional connected devices are recognized
by detecting changes in the bus, as this signiﬁcantly changes
the characteristics of the known ECUs. If it is possible for an
attacker to prevent this change, no alarm is triggered. Although
this requires access to a speciﬁc vehicle, but
the attacker
has access to a similar vehicle of the same model with the
same equipment, he can obtain some information about the
characteristics of the target vehicle in advance. Following, it
is possible with correspondingly complex hardware and effort
to imitate special signals and thus respective characteristics.
For this reason, in addition to the monitoring of the signal
characteristics, the use of classical IDS, which work on the
basis of frequency and packet analyses, is recommended.
E. Field of Application
By drastically reducing the resource requirements and the
associated costs, it is possible to integrate the presented system
at several points of a bus. Due to the varying measuring
positions in the bus, different characteristics occur for the same
frame, as shown in Figure 7. If several systems are operated
in parallel, their results can be compared which leads to a
reduction of wrong decisions In addition to being used as
extensions for classic IDSs, the approach can also be integrated
into gateways. This allows messages to be checked before
being forwarded and discarded in the event of an attack. Thus
it is possible to prevent the propagation of attacks over several
segments without the need for further communication over
potentially compromised bus segments to notify other ECUs.
Besides the automotive sector, CAN is also used in other
areas, such as automation, medicine and rail. There are also
several higher protocols based on CAN, such as CANopen [6]
or SafetyBUS [51]. In principle, the same problems exist here,