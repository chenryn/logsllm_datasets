# Title: TLS in the Wild: An Internet-wide Analysis of TLS-based Protocols for Electronic Communication

## Authors:
- Ralph Holz, University of Sydney, Australia
- Johanna Amann, ICSI, Berkeley, USA
- Olivier Mehani, Data61/CSIRO, Sydney, Australia
- Mohamed Ali KÃ¢afar, Data61/CSIRO, Sydney, Australia
- Matthias Wachs, Technical University of Munich, Germany

## Abstract
Email and chat remain the primary forms of electronic communication on the Internet. The standardization and widespread adoption of protocols such as SMTP, IMAP, POP3, XMPP, and IRC have enabled the deployment of email and chat servers in a decentralized and interoperable manner. These protocols can be secured using TLS, either directly or via the STARTTLS extension, with X.509 Public Key Infrastructures (PKIs) and ad hoc methods used for peer authentication. However, secure configuration is not straightforward, and many combinations of encryption and authentication mechanisms can lead to insecure deployments, potentially compromising data in transit. In this paper, we present the largest study to date investigating the security of email and chat infrastructures. We conducted active Internet-wide scans to determine the extent of secure service deployments and employed passive monitoring to analyze the actual use of secure mechanisms by user agents. Our study covers both client-to-server and server-to-server interactions, and we also examined the methods for client authentication at the application layer. Our findings provide insights into an underexplored area of the Internet. While large providers generally offer good security, most of our communication remains poorly secured, with weaknesses in cryptographic setups and authentication mechanisms. We propose actionable changes to improve the situation.

## 1. Introduction
Despite the rise of mobile messaging and more centralized communication platforms, email and chat remain dominant forms of electronic, nearly instant messaging on the public Internet. Email, in particular, is the most pervasive form of communication, with over 4.1 billion accounts in 2014, predicted to reach over 5.2 billion by 2018 [11]. For chat, the most widely used standard-based networks are IRC group chats and the XMPP instant messaging and multi-user conferencing network.

In their early days, email protocols like SMTP, POP3, and IMAP were designed without a strong focus on security. Authentication in SMTP was introduced later, primarily to combat spam. User agents gradually moved towards encrypted and authenticated connections using SSL 3 and later TLS to protect the transport layer. SSL/TLS provides authentication, integrity, and confidentiality. Without SSL/TLS, user credentials may be transmitted in plaintext, and message bodies can be tampered with, unless end-to-end mechanisms like OpenPGP or S/MIME are used, which is relatively rare.

Although SSL/TLS supports mutual authentication, unilateral authentication is more common in email and chat, where only the responder is authenticated on the transport layer. This is due to the reliance on X.509 PKIs, which require client certification, an operation that is costly, administratively burdensome, and often requires user education. Initiators are typically authenticated at the application layer using password schemes, which vary in security. Different password schemes, such as CRAM or SCRAM, offer varying levels of security. The choice of password scheme significantly affects security, especially when there is no transport-layer authentication.

Proper in-band authentication of the responder is crucial in SSL/TLS, using X.509 certificates issued by Certificate Authorities (CAs). These CAs are trusted parties whose root certificates are included in common software. However, poor deployment practices in X.509 PKIs are well-documented. Holz et al. [24] and Durumeric et al. [7] have shown this in large-scale studies, but no such work exists for the electronic communication protocols we rely on daily.

In this paper, we present the largest measurement study to date investigating the security of SSL/TLS deployments for email and chat. We employ both active Internet-wide scans and passive monitoring. Active scans characterize global server configurations, while passive monitoring reveals the actual security parameters used in client-initiated connections.

From June 30, 2015, to August 4, 2015, we actively scanned the IPv4 address space (3.2 billion routable addresses) for each protocol we analyzed. We connected to standard ports for SMTP/STARTTLS, SMTPS, SUBMISSION, IMAP/STARTTLS, IMAPS, POP3/STARTTLS, and POP3S for email; for chat, we investigated IRC/STARTTLS, IRCS, XMPP/STARTTLS, and XMPPS. We performed complete SSL/TLS handshakes, establishing a list of current deployments (over 50 million active ports) and collecting certificates, cipher suite offers, and cryptographic parameters. Where applicable, we also requested the list of supported authentication methods on the application layer.

Additionally, nine days of passive monitoring (July 29, 2015, to August 6, 2015) of a link serving over 50,000 users revealed more than 16 million connections to about 14,000 different services. We captured the same set of SSL/TLS and authentication-related parameters from this monitoring data as we did for active scans. This allows us to compare actual client usage with the deployed services. As a reference, we also considered HTTPS and traffic on port 443, as the deployment of this protocol is well understood.

Our analysis evaluates the security of connections and deployments, considering certificate validity, CA practices, cryptographic parameters, software, SSL/TLS versions, and authentication methods. Our findings are mixed. For example, only 40% of IMAPS servers that completed the TLS handshake had correct certificate chains. SMTPS, the best-provisioned service, had just over 40% of servers with valid certificate chains. SMTP/STARTTLS, used for forwarding emails between mail exchange servers, showed a rate of 30%. For chat, XMPPS in server-to-server forwarding had the best results, with 27% of servers offering valid certificates.

When considering passive monitoring data, the situation appears better, with the majority of connections being encrypted and using valid certificates. This is largely due to large providers like Gmail and Hotmail, which are properly configured. However, smaller servers often do not support STARTTLS, leading to unencrypted connections, particularly in email. This suggests that communication between mail exchange servers is often not sufficiently secured unless both sender and receiver are customers of large providers.

The rest of the paper is organized as follows. Section 2 provides background on SSL/TLS, PKI, and the studied protocols, along with an overview of related work. Section 3 describes our data collection methods and datasets, and Section 4 details our data analysis. Section 5 identifies risks and threats based on our findings, and Section 6 suggests pathways for improvement before concluding the paper.

## 2. Background and Related Work

### A. Standard Messaging Protocols
The messaging protocols in common use today have been specified by the IETF over the years, with SSL/TLS or the STARTTLS extension added later. For example, the original RFC 821 for SMTP was published in 1982, but the STARTTLS extension for SMTP was specified in 1999. Other protocols followed a similar development path, resulting in various ways SSL/TLS is used in email and chat.

#### 1. Electronic Mail
Email relies on two sets of protocols: one for email transfer and one for retrieval. The Simple Mail Transfer Protocol (SMTP) [27] is the cornerstone of email distribution systems, primarily used for message transfer. Message Transfer Agents (MTAs) forward messages by establishing SMTP sessions until they reach their final destination. SMTP is also used as a submission protocol, where user agents (e.g., email clients like Thunderbird) submit mails from a local computer to a mail server operated by the user's service provider. Webmail solutions like Gmail blur the lines between mail submission and transfer, handling these processes transparently on the server side.

SMTP was initially operated on port 25. Later, port 587 was specified for message submission by potentially authenticated submitters, to differentiate between legitimate activity and spam. Port 25 still remains in use for both purposes. Once at the destination server, email can be retrieved using either POP3 (port 110) or IMAP (port 143).

#### 2. Chat and Instant Messaging
Instant chat predates the Web, with Internet Relay Chat (IRC) [34] allowing multiple IRC clients to connect to an IRC server and join channels or have private conversations. Messages, especially on channels, are relayed between IRC servers. Server-to-server communication in IRC is implementation-dependent, leading to distinct IRC networks. IRC is commonly deployed on port 6667, though other ports are sometimes used.

The eXtensible Messaging and Presence Protocol (XMPP) [39, 40] is a more general XML-based protocol for instant messaging and presence. Similar to the SMTP infrastructure, XMPP servers exchange messages on behalf of their users. The protocol uses port 5222 for client-to-server communication and port 5269 for server-to-server forwarding. XMPP, with or without proprietary extensions, is also used in non-federated enterprise or proprietary services.

### B. SSL/TLS
TLS 1.0 is the IETF-standardized version of SSL 3. All versions before TLS 1.0, i.e., SSL 2 and SSL 3, are deprecated. TLS is currently at version 1.2, with version 1.3 in the standardization process. Since SSL 3 and TLS 1.0 are very similar and some SSL 3 use remains, we refer to SSL/TLS when our findings apply to both. All email and chat protocols can be used with SSL/TLS. In IMAP and POP3, only client-to-server communication occurs, while SMTP and XMPP define both client-to-server and server-to-server communication patterns. For IRC, only the client-to-server pattern is well-defined.

There are two ways to negotiate an SSL/TLS session: direct use of SSL/TLS on a dedicated port (e.g., HTTPS, IMAPS) or upgrading a connection using the STARTTLS command. Direct SSL/TLS requires a well-known port, while STARTTLS allows dynamic decision-making but is vulnerable to active MitM attacks. The SSL/TLS handshake is the same for both methods, involving the exchange of symmetric cipher suites, protocol versions, and X.509 PKI certificates for authentication.

### C. X.509 PKI
For entities to trust the authentication step, several conditions must be met, primarily requiring CAs to issue certificates after due diligence. The CA/Browser forum has established guidelines for the Web use case, defining due diligence to include at least an automated check if the requesting party can receive email under the requested domain name. However, previous work has revealed cases where even basic diligence was neglected, and CAs have been compromised. Any CA compromise can compromise the entire PKI. The use of X.509 in email and chat protocols remains largely unexplored.

Figures 1 and 2 illustrate the format of an X.509 certificate and a simplified PKI, showing root certificates, intermediate certificates, end-host certificates, a root store, and a certificate signed by an untrusted CA.

[Continue with the rest of the sections as needed, following the same structure and style.]