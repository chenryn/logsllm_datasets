# Title: Application of Software Watchdog as a Dependability Software Service for Automotive Safety-Relevant Systems

## Authors:
- Xi Chen, DaimlerChrysler AG – Stuttgart, Germany (xi.chen@daimlerchrysler.com)
- Juejing Feng, RWTH Aachen University – Aachen, Germany (juejing.feng@rwth-aachen.de)
- Martin Hiller, Volvo Technology Corporation – Gothenburg, Sweden (martin.hiller@volvo.com)
- Vera Lauer, DaimlerChrysler AG – Stuttgart, Germany (vera.lauer@daimlerchrysler.com)

### Abstract
The increasing complexity and density of application software components in automotive electronics, coupled with higher dependability requirements for future safety systems, necessitate the implementation of a runtime monitoring service to enhance overall system dependability. This paper proposes the use of a Software Watchdog service, which provides heartbeat monitoring and program flow checking. The Software Watchdog is integrated into a software platform designed for automotive safety electronics. We also present a model-based design using Matlab/Simulink and an evaluation of the Software Watchdog service in a hardware-in-the-loop validator.

**Keywords:** Software Watchdog, heartbeat monitoring, program flow checking, dependable software platform, software services

### 1. Introduction and Background
The on-board electrics and electronics (E/E) in vehicles have faced increasingly demanding requirements due to the growing demand for safety and comfort. The complexity and quantity of applications implemented by electronics and software are rising dramatically. Simultaneously, E/E systems and networks must maintain at least the same level of dependability as state-of-the-art mechanical systems, while keeping costs comparable.

With the introduction of powerful microcontrollers, the number of Electronic Control Units (ECUs) is being consolidated and reduced as more functions are integrated into a single ECU. To address this challenge, defining a common software platform and standardizing software services are essential. One key initiative is the AUTOSAR Consortium, which aims to provide a standardized software platform for each in-vehicle ECU. According to the AUTOSAR vision, future embedded software will be developed independently from ECU hardware details.

### 2. Related Work
For automotive safety systems, meeting real-time requirements in a deterministic manner is critical. Various monitoring mechanisms have been developed, such as ECU hardware watchdogs, deadline monitoring, and execution time monitoring. In the IT industry, control flow checking techniques with signatures have been developed to ensure the correct execution sequence of programs. However, these methods often suffer from high performance overhead and low flexibility.

### 3. Functional Design

#### 3.1. EASIS Dependable Software Platform
The EASIS software platform focuses on ECUs for Integrated Safety Systems (ISS) applications that cross domain borders. It separates safety-relevant application software from the underlying ECU hardware by providing a software platform with standard interfaces. The ISS dependability software services aim to enhance the safety, reliability, availability, and security of new safety functions. An OSEK-conforming operating system with safety-relevant services, such as the Software Watchdog, is integrated across layers L2 and L3.

#### 3.2. Design of the Software Watchdog
The Software Watchdog is designed to ensure the real-time characteristics of the system by tracing the cause of violations of real-time requirements and detecting timing faults early. Timing constraint violations can be categorized into two types:
1. **Blocking Resource**: An object hangs due to a requested resource being blocked, either by the object itself or another object, leading to a violation of the timing constraint.
2. **Excessive Dispatching**: An object is excessively dispatched for execution.

The Software Watchdog identifies these situations by monitoring the aliveness and arrival rate of runnables and checking the program flow.

##### 3.2.1. Heartbeat Monitoring
Heartbeat monitoring periodically checks the aliveness and arrival rate of independent runnables. Fault types handled include:
- **Aliveness Monitoring**: The runnable is blocked or preempted, and its aliveness indication routine is not executed frequently enough.
- **Arrival Rate Monitoring**: There are more aliveness indications of the monitored runnable than expected within one period.

In EASIS, a passive approach is used to record and monitor runnable updates by saving the heartbeats of runnables in the Aliveness Counter (AC) and Arrival Rate Counter (ARC).

##### 3.2.2. Program Flow Checking
Correct program flow is fundamental for the correct execution of computer programs. Faults that can cause program flow errors include:
- **Software Design and Implementation Faults**
- **Transient System Faults (e.g., memory errors)**
- **Program Counter Corruption**

To reduce overhead and system complexity, only the sequence of safety-critical runnables is monitored. Aliveness indication routines, integrated into the runnables as automatically generated glue code, help derive the current execution sequence. A simple look-up table is used to store and compare all possible predecessor/successor relationships of the monitored runnables.

##### 3.2.3. Task State Indication
To achieve global monitoring, the error messages of runnables are recorded by the Task State Indication Unit in an error indication vector. If an element in the error indication vector reaches a threshold, the task is considered faulty. Based on the mapping information of applications and tasks, corresponding fault treatments with a global view of the ECU are taken.

### 4. Conclusion
The Software Watchdog service, designed within the scope of the EU project EASIS, provides a robust mechanism for monitoring the timing behavior and program flow of automotive safety-relevant systems. By integrating this service into a well-defined layered software platform, the overall dependability of the system is significantly enhanced. Future work will focus on further refining the design and evaluating its performance in various automotive applications.

---

This optimized version aims to improve the clarity, coherence, and professionalism of the original text.