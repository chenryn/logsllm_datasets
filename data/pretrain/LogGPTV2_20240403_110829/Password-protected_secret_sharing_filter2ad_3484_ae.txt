where (cid:48) = 6ZK + (5qU + 3nqS + 4)(ddh + SS) This would
follow if we showed that |¯p0(s1) − ¯p0(s0)| ≤ Pr[F8] + (cid:48) and
t−t(cid:48)+1(cid:99) ∗ 1|D| , and below we show this by showing
Pr[F8] ≤ (cid:98)
indistinguishability of adversarial views each consecutive games,
with the last game, G8, releasing no information about either p or
s, implying the above probability bound on F8.
i (s) denotes the joint probability Pr[1 ← (A (cid:10) Gi(s)) ∧
¬Fi,s]; let te be a time of a single (multi)-exponentiation in G;
let the DDH problem be (Tddh, ddh)-hard in group G; and let
proof systems Π[Lst0
S1] be (TS, qP , ZK , SS)
simulation-sound zero-knowledge. Denote Tred = (10+n+(8t+
12)qU + 10nqS) · te: This is the maximum computational cost, in
addition to simulating the ZK proofs, encountered by any of our
reductions below. Assume that the bounds on qU , qS, T are satis-
ﬁed as in the theorem claim, namely max(qU , n · qS) ≤ qP and
T + (Tred + 3TS) ≤ Tddh. We will show the following four
facts, for any s, s(cid:48), for 0,3 = 3ZK + (2qU + nqS)(ddh + SS),
4,5 = ddh, and 4,8 = (qU + nqS + 2)(ddh + SS).
S1] and Π[Lst0
U ], Π[Lst0
CLAIM 1. |¯p0(s) − p3(s)| ≤ 0,3
CLAIM 2. |p3(s) − p3(s(cid:48))| ≤ |p¬F
4 (s) − p¬F
4 (s(cid:48))|
+ max(Pr[F4,s], Pr[F4,s(cid:48) ])
qS
qS
t−t(cid:48)+1(cid:99) ∗ 1|D| + 4,8
4 (s(cid:48))| ≤ 24,5
CLAIM 3. Pr[F4,s] ≤ (cid:98)
CLAIM 4. |p¬F
4 (s) − p¬F
Summing these up we obtain that |¯p0(s) − ¯p0(s(cid:48))| ≤ 2(0,3 +
t−t(cid:48)+1(cid:99) ∗ 1|D| , which implies inequality 3, because
4,5) + 4,8 + (cid:98)
2(0,3 + 4,5) + 4,8 ≤ (cid:48). Now, claim 1 follows from claims
5-7 below, because 0,3 is the sum of the upper bounds on the dis-
tances |pi−1(s) − pi(s)| for i = 1, 2, 3 in claims 5-7 below, and
|¯p0(s) − p0(s)|, which is bounded by 3ZK. Claim 2 follows from
3(s)) −
claim 8 below: Note that |p3(s) − p3(s(cid:48))| = |(p¬F
3 (s(cid:48))| +
(p¬F
3 (s(cid:48)) + pF
max(Pr[F3,s], Pr[F3,s(cid:48) ]); and moreover by claim 8, it follows that
p¬F
3 (s) = p¬F
4 (s) and Pr[F3,s] = Pr[F4,s] for all s. Claim 3 fol-
lows from claims 9-12 below, because (1) 4,8 is the sum of the
upper bounds on the distances | Pr[Fi−1,s] − Pr[Fi,s]| shown for
t−t(cid:48)+1(cid:99) ∗ 1|D|
i = 5, 6, 7, 8 in claims 9-12, and (2) Pr[F8,s] ≤ (cid:98)
because G8 releases no information about p. Claim 4 follows from
claim 9 below because game G5 is independent of secret s, and
therefore for every s, s(cid:48) we have that p¬F
3(s(cid:48)))| is upper bounded by |p¬F
3 (s) + pF
3 (s) − p¬F
5 (s) = p¬F
5 (s(cid:48)).
qS
CLAIM 5. Games G0 and G1 are indistinguishable under DDH.
Concretely, |p0(s) − p1(s)| ≤ qU (ddh + SS).
0, between G0 and G1, where Gi
PROOF. To show that G0 and G1 are indistinguishable, we make
a hybrid argument over qU user sessions. We deﬁne a series of
intermediary games Gi
0 follows G1
in the User(cid:5) oracle calls on the ﬁrst i user sessions, i.e. it picks
r← G, and then follows G0 on the remaining sessions. Clearly,
ˆd ˜p
0 ≡ G0 and GqU
0)]. For
G0
each i > 0 we construct reduction Ri
0,1 which on input a DDH
challenge (A, B, C) = (ga, gb, gc) follows G0 during Init(cid:5) except
0 = Pr[1 ← (A (cid:10) Gi
0 ≡ G1. Let pi
440Init(cid:5)(on input s)
i=1
x r← Zq, y ← gx,{xi}n
(h, ˆg, ˆh, ¯g) r← (G)3
ˆy r← G
r← Zq, (cp, dp) ← (grp , yrp hp)
r← Zq, (cs, ds) ← (grs , yrs s)
rs
p ← D, rp
idSet ← {}, CpSet ← {}, F ← false
{ tj
{ ri
st0 ← (g, h, y,{yi}n
User(cid:5)({IDj, aj, bj, ¯aj, π1j}t+1
j=1)
If (∃j∈{1,..,t+1} st V[Lst0
r ˜p
d ˜p ← yr ˜p hp
ˆd ˜p ← ˆyr ˜p (ˆh)p
{π2j ← S[Lst0
r← Zq, (aj, bj, ¯aj) ← (gtj , (cp)tj , ¯gtj ), π1j ← S[Lst0
r← Zq, sti ← (xi, ri), yi ← gxi hri }n
i=1
S1](aj, bj, ¯aj) }n·qS
j=1
i=1, ˆg, ˆh, ˆy, ¯g, (cp, dp), (cs, ds)), Ret(st0,{sti}i∈B,{aj, bj, ¯aj, π1j}n·qS
j=1 )
S1]((aj, bj, ¯aj), π1j) = 0) then ABORT this session.
r← Zq, (c ˜p, ˆc ˜p) ← (gr ˜p , (ˆg)r ˜p ), CpSet ← CpSet ∪ {c ˜p}, {ej ← (aj)r ˜p}t+1
j=1
r← G
r← G
d ˜p
ˆd ˜p
G4
G3
G5
G8
G7
G1
G6
G2
(n,t)←− SS(x)
y r← G,{xi}n
i=1
(n,t)←− SS(0)
ˆx r← Zq, ˆy ← (ˆg)ˆx
(cs, ds) r← (G)2
(cp, dp) r← (G)2
U ](aj, ej, c ˜p, d ˜p, ˆc ˜p, ˆd ˜p)}t+1
j=1, Ret({ej}t+1
j=1, (c ˜p, d ˜p), (ˆc ˜p, ˆd ˜p),{π2j}t+1
j=1)
U ]((aj, ej, c ˜p, d ˜p, ˆc ˜p, ˆd ˜p), π2j) = 0) then ABORT this session.
j (λj, cβ, ej, c ˜p, d ˜p, ˆc ˜p, ˆd ˜p, π2j)
Server(cid:5)
If (V[Lst0
If ( ˆd ˜p/(ˆc ˜p)ˆx = (ˆh)p) then idSet ← idSet ∪ {IDj};
dβ,j ← (dp/d ˜p)tj
zj ← dβ,j · (wj)−1
If ( ˆd ˜p/(ˆc ˜p)ˆx = (ˆh)p) then dβ,j ← (dp/d ˜p)tj else dβ,j
If |idSet| > t − t(cid:48) then set F ← true; wj ← (cs · cβ)λj·xIDj
r← G
r← G
dβ,j
If (c ˜p ∈ CpSet) then zj
G3
r← G else zj ← dβ,j · (wj)−1
r← Zq, (czj , dzj ) ← (grzj , (c ˜p)rzj · zj), π3j ← S[Lst0,IDj
S2
](czj , dzj , c ˜p, aj, dp/d ˜p, (cs · cβ)λj ), Ret((czj , dzj ), π3j)
rzj
Figure 4: Games G0,G1,...,G8 used in the security proof of the PPSS protocol
In Figure 4, all games follow the code in boxes that span the width of the ﬁgure. However, if a line has two boxes, an unmarked one on the
left and one marked “Gi” for some i on the right, then game Gj follows the box on the left for j < i and the box on the right for j ≥ i. In
other words, the boxes on the right mark the differences from G0 introduced in some game, which are then adhered to in each subsequent
j , which contain three boxes: Games G0 − G2 follow the
game. A special case is the second row of boxes in the code of oracle Server(cid:5)
unmarked left-most box, games G3 − G5 follow the middle box marked “G3”, and games G6 − G8 follow the right-most marked “G6”.
Game G0 portrayed in Figure 4 differs from A’s view of the real protocol in three ways: (1) Figure 4 does not include the interaction
corresponding to step U2 of the User(cid:5) oracle. Recall that in the strong security notion the adversary receives a bit indicating whether the
User protocol instance accepts or rejects its protocol session. However, in PPSS2 this bit is determined by whether this User instance receives
t + 1 messages corresponding to server’s steps S1 and S2 accompanied by proofs {π1j, π3j}t+1
j=1 which pass the corresponding veriﬁcation,
hence this bit is publicly computable from the adversary’s actions; (2) The User(cid:5) oracle simulating step U1 of the User algorithm does not
return values λj and cβ, but these values are publicly computable from the inputs {IDj, bj}t+1
j=1 sent by A to this User session and from
its outputs {ej}t+1
j=1; (3) In G0 all oracles output simulated proofs, while in the real interactions these proofs are output by respective prover
algorithms on corresponding witnesses.
441that it computes ˆg ← gr0 and ¯g ← Ar1 for r0, r1
r← Zq and
embeds ˆy ← B. Then Ri
0,1 follows G0 in all Server(cid:5) calls, but for
User sessions it follows G1 on all sessions prior to the i-th session,
and G0 on all sessions from i + 1 on, but on the i-th session it sets
{ej ← (¯aj)1/(r0r1)}t
j=1, c ˜p ← A1/r0, d ˜p ← Ax/r0 hp, ˆc ˜p ← A,
and ˆd ˜p ← C 1/r0 (ˆh)p. If (A, B, C) is a DDH tuple (ga, gb, gab)
then Ri
because for the i-th session the user’s
output is computed as in G0, with r ˜p = a/r0 and ˆx = DL(ˆg, ˆy) =
b/r0. However if (A, B, C) is a random tuple then ¯d ˜p is a random
group element, as in G1, and so Ri
0. It follows
that |pi
| ≤ ddh + SS, since we have to add the probability
SS that all proofs π1,j verify while some (aj, ¯aj) sent to the i-th
user session is not of the form (gtj , (¯g)tj ) for some tj.
0,1(A, B, C) ≡ Gi−1
0,1(A, B, C) ≡ Gi
0− pi+1
0
0
CLAIM 6. Games G1 and G2 are indistinguishable under DDH.
Concretely, |p1(s) − p2(s)| ≤ qU (ddh + SS).
1
and Gi
1 ≡ G2. Let pi
1 = Pr[1 ← (A (cid:10) Gi
PROOF. We use a hybrid argument over qU user sessions. For
each i ∈ [0, qU ], we deﬁne an intermediate game Gi
1 which follows
G2 except that in Server(cid:5) oracle responses Gi
1 decides whether zj
should be real or random based on whether c ˜p ∈ CpSet[1, i], the
set of c ˜p’s output by the ﬁrst i User(cid:5) oracle sessions. Note that
1 ≡ G1 and GqU
1)]. For
G0
each i ∈ [1, qU ] we show reduction Ri
1,2 which reduces break-
ing DDH to distinguishing between Gi−1
1. Let the DDH
challenge be (A, B, C) = (ga, gb, gc). The reduction follows the
Init(cid:5) procedure as in game G1 except that it picks r0, r1, ˆx r← Zq
and sets ˆg ← gr0, ¯g ← Ar1, and ˆy ← (ˆg)ˆx. For the user ses-
sions, the reduction follows the code of G1 except for i-th ses-
sion, where it embeds c ˜p ← A and computes ˆc ˜p ← (c ˜p)r0 ,
d ˜p ← (c ˜p)x · hp, ˆd ˜p ← (ˆc ˜p)ˆx · (ˆh)p, and ej ← (¯aj)1/r1 for
all j. For the server sessions, the reduction Ri
1,2 follows the code
for Gi−1
except for the sessions where c ˜p is passed as input; where
it computes (czj , dzj ) ← (Brzj , C rzj · zj) where zj = dβ,j/wj.
Thus reduction Ri
1 on
a random tuple. The reduction relies on the correctness of server’s
messages sent to user’s i-th session; but since the event that these
are incorrect while servers’ proofs verify is bounded by SS, this
yields |pi
| ≤ ddh + SS, and the claim follows.
on a DDH tuple and it hits Gi
1,2 hits Gi−1
1 − pi+1
1
1
1
CLAIM 7. Games G2 and G3 are indistinguishable under DDH.
Concretely, |p2(s) − p3(s)| ≤ (n · qS)(ddh + SS).
2 ≡ G2 and GnqS
2 ≡ G3. Let pi
PROOF. We use a hybrid argument over nqS server sessions to
argue that G2 and G3 are indistinguishable. For each i ∈ [0, nqS],
we deﬁne an intermediate game Gi
2 which follows G3 on calls to