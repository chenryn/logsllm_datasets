title:Performance Evaluation of Dependable Real-Time Communication with
Elastic QoS
author:Jong Kim and
Kang G. Shin
Performance Evaluation of Dependable Real-Time Communication 
with Elastic QoS’ 
Jong Kim 
High Performance Comp. Lab. 
Dept. of CSE 
Pohang Univ. of Sci. & Tech. 
Pohang, 790-784, KOREA 
Email: j kim @ postech.ac. kr 
Kang G. Shin 
Real-Time Comp. Lab. 
Dept. of EECS 
The University of Michigan 
Ann Arbor, MI 48 109-2 122 
Email: PI:EMAIL 
Abstract 
When a  client  requests a  real-time connection that  re- 
quires  an  excessive  amount  of  resources  and/or  a  very 
high  level  of QoS  (Quality-of-Service), the  network  ser- 
vice provider  may  have to reject  the request, and  in such 
a  case,  only a small number of  connections could be ac- 
cepted.  On the  other  hand,  if 
the  client,  out  of  fear  of 
the service provider’s rejection, requests only the minimum 
level of QoS, s/he may receive only bare-bone service even 
when there are plenty of  resources available.  One way of 
utilizing  resources eficiently  is to specify flexible  (elastic) 
QoS requirements that can be adapted to the availability of 
network resources. 
Recently, Hun and Shin [ I ]  proposed to allocate one pri- 
mary channel and one or more backup channels to each de- 
pendable real-time (DR-) connection. One drawback of  this 
scheme is the severe reduction in number of  DR-connections 
that can be accommodated, due mainly to the need for re- 
serving resources for backups.  This is equivalent to wast- 
ing precious  resources in  the absence  of faults  as far as 
the  system’s  ability  of  accepting  DR-connections  is  con- 
cerned.  Using elastic  QoS for this  dependable  real-time 
communication service, one can accept substantially more 
DR-connections and improve the utilization of resources ef 
ficiently and sign@cantly. 
In this papec  we analyze the dependable real-time com- 
munication  service  with  elastic  QoS.  Fault-tolerance  is 
achieved  by  allocating  one  backup channel  to  each  DR- 
f  The research reported  in  this paper was  supported  in  part by  the Office 
of Naval Research under Grant N00014-99-1-0465  and the Institute of  In- 
formation Technology Assessment  of  Korea.  Any opinions,  findings, and 
conclusions or recommendations  expressed in this publication are those of 
the  authors  and  do not  necessarily  reflect the views  of  the  ONR  nor  the 
UTA. 
connection. A Markov model is developed and used to ana- 
lyze the average QoS level allotted to the primav channel of 
each DR-connection.  Our evaluation results show that the 
proposed Markov model accurately represents the behavior 
of  DR-connections with elastic QoS. 
Keywords - Elastic Quality-of-Service (QoS), 
fault-tolerant real-time communication, Markov model. 
1  Introduction 
Advances in  network technology have significantly  im- 
proved  the  connectivity  and  the  link  bandwidth  of  point- 
to-point  networks  like  the  Internet.  The  application  do- 
main  of  the  Internet  has  also  been  expanded  to  include 
time-critical/sensitive  applications,  such  as  remote  medi- 
cal services, multimedia, computer-supported collaborative 
work, and electronic commerce. Real-time communication 
has  now  become  an  essential  service  for these  and many 
other applications.  The real-time communication service 
provides a guaranteed “Quality-of-Service”(QoS), such  as 
bounded message delay, delay jitter, and error rate. Consid- 
erable efforts have  been  made to provide timeliness  guar- 
antees necessary for the above-mentioned applications.  See 
the survey paper by Aras et al. [2] for a detailed account of 
many of the existing real-time communication schemes. 
Most of the real-time communication schemes known to 
date  share three  common properties [ 11:  QoS-contracted, 
connection-oriented, and  reservation-based.  Before  actu- 
ally  transferring any  message,  a  contract  must  be  estab- 
lished between a client and the network. In the contract, the 
client specifies his input traffic-generation behavior and re- 
quired QoS. The network then computes the resource needs 
from this  information, finds a path  between  the  client  and 
his  serverheceiver,  and  reserves  the  necessary  resources 
along the path.  Messages  will  be  transported only  along 
0-7695-1101-5/01 $10.00 0 2001 IEEE 
295 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:01:28 UTC from IEEE Xplore.  Restrictions apply. 
the selected path with the necessary resources reserved, and 
this unidirectional  virtual circuit is called a real-time chan- 
nel [3]. 
Besides  the  performance QoS mentioned  above,  there 
are growing needs for communication services with a guar- 
anteed  level  of  fault-tolerance for applications like remote 
medical  services and command & control systems, which 
are not only time-critical but also reliability-critical.  Failure 
of communication service jeopardizes the timeliness guar- 
antees of  these  critical  applications,  and  persistent  faults 
like power outage and cable disconnection -most  common 
failures reported by the Internet service providers - usually 
last for a long period of time. Restoration  of real-time com- 
munication  service after occurrence of a persistent network 
component failure is time-consuming, and to make things 
worse, there is no guarantee that such a restoration  attempt 
will  always  succeed, especially when  the  network  is con- 
gested, or tries to recover from multiple near-simultaneous 
component failures. Only recently,  researchers have begun 
investigation of the fault-tolerance issues of real-time com- 
munication [ 1,4]. 
Fault-tolerance of real-time communication service can 
be achieved  by  allocating one primary channel and one or 
more redundant/backup channels to each real-time connec- 
tion  [ 1,4]. A redundant channel may  be passive  [ 11 or ac- 
tive  [4].  In  the  passive  approach,  a  backup channel  that 
satisfies the dependability QoS requirement, which may be 
totally link-disjoint or maximally link-disjoint from its cor- 
responding primary channel,’ is allocated to each real-time 
connection after allocating a primary channel. No messages 
are transferred along a backup channel until  it is activated 
upon  occurrence  of  a  fault  to  the  corresponding primary 
channel. Multiple backup channels that traverse a link and 
collectively  require more bandwidth than the link capacity, 
can share the  same resources as long as they  are not  acti- 
vated at the same time (i.e., overbooking link bandwidth for 
backups).  In the active approach, multiple primary channels 
are created for each real-time connection and messages with 
redundant information (for the  purpose of  fault-tolerance) 
are transported  along the multiple primary  channels of the 
connection.  The active approach requires more resources 
than  the  passive  approach, since in  the  passive  approach, 
the redundant resources allocated for fault-tolerance are not 
used  until the backups are activated. In this paper, we will 
focus on the passive approach. 
Our proposed approach (1) reserves only the amount of 
resources  to  provide  the  minimum  required  performance 
QoS  for  each  real-time  connection  at  the  time  of  its  es- 
tablishment, and (2) allocates, at run-time, more resources, 
if  available,  to  the  connection. 
In  the  latter  case,  the 
connection  will  receive  better  performance  QoS  than  its 
bare  minimum  required,  yielding  more  “utility”  for  the 
clienthpplication and hence  contributing more revenue to 
the  network  service  provider.  Note  that  the  performance 
QoS requirement of  a connection is  usually  specified  as a 
‘if there does not exist any link-disjoint backup path between the source 
and destination 
single  number, and this  value  is often the minimum  QoS 
requirement in  order to accept as many  real-time connec- 
tions as possible, while (minimally) satisfying the clients’ 
QoS requirements.  This single-value QoS model has com- 
monly been used in the QoS negotiation between clients and 
the network service provider.  If the specification  of perfor- 
mance QoS is  given  as a  range  instead,  then  it would  be 
possible to improve the performance QoS at run-time using 
un-allocated resources or inactive backup resources.  This 
type of flexible QoS is called elastic QoS [5,6]. 
The  performance  evaluation  of  dependable  real-time 
communication is essential for the analysis of network ser- 
vice behavior  and  the  future planning  of  the  network.  It 
also enables prediction of the behavior of an application on 
a given  network.  To the best of  our knowledge, there does 
not exist any model that can analyze dependable real-time 
(DR-) connections with  elastic QoS. Moreover, most per- 
formance QoS evaluation studies are based on simulations. 
By contrast, we develop an analytic performance evaluation 
model of DR-connections with elastic QoS. 
The remainder of this paper is organized as follows. Sec- 
tion  2  presents  the  details  of  dependable real-time  com- 
munication  and  the  various elastic QoS  models.  Section 
3 describes the performance evaluation model  of depend- 
able real-time communication with  elastic QoS. Section 4 
presents the  performance evaluation results  and discusses 
the  modeling  accuracy against the  detailed simulation re- 
sults. Finally, the paper concludes with Section 5. 
2  Preliminaries 
2.1  Fault-Tolerant Real-Time Communication 
2.1.1  Real-time channel 
The realization of  real-time channel generally  consists 
of  two  phases  [3, 71:  off-line channel  establishment  and 
run-time message scheduling. In the channel-establishment 
phase,  the  network manager computes  the  resource  need 
from the  client’s traffic  specification  and  finds  a path  that 
has the  resources necessary  to meet his  QoS requirement. 
In  the  run-time  message  scheduling  phase,  each  link  re- 
source manager schedules messages belonging to different 
real-time channels to satisfy  their respective timeliness re- 
quirements.  The channel-establishment phase  is  of  prime 
importance  to  the  realization  of  a  real-time  channel, and 
thus, the focus of this paper. 
A  real-time channel  is  established  as follows.  First,  a 
client specifies his traffic-generation  behavior and required 
QoS from which  the network manager then  computes the 
resource need from this information. The network manager 
selects a  route between  the  source  and destination of  the 
channel  along  which  sufficient  resources  can  be  reserved 
to meet the client-specified  delay and buffer requirements. 
The number of possible routes between two communicating 
296 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:01:28 UTC from IEEE Xplore.  Restrictions apply. 
peers could be very large, so that selecting a route for each 
real-time channel could be a time-consuming task. 
There are two approaches to route selection: centralized 
and distributed  [7,8].  Most existing schemes are based  on 
the centralized approach [8].  In  the centralized approach, 
there is a global  network manager which  maintains the in- 
formation about all  the established real-time  channels, the 
topology, the resource availability  and commitment of  the 
network. Hence, the  network  manager can select an “opti- 
mal” route for each requested real-time channel. All clients 
that want to establish  real-time channels send their requests 
to the central network manager, and the manager accept the 
requests  if  there are enough resources.  The network  man- 
ager  also  informs  all  intermediate nodes  on  the  selected 
route  of  the  establishment of  each  new  channel, and pro- 
vides the information necessary for the run-time scheduling 
of this channel’s messages. 
In the distributed  approach, each node maintains the in- 
formation of the entire network by exchanging link-state in- 
formation  with  all other nodes, so that  the source or desti- 
nation  can determine a route  for a  newly-requested  chan- 
nel solely based on the information  kept in each node. The 
link-state  information exchanged to get the  information  of 
the  entire network  is  minimal  for best-effort  communica- 
tion.  However,  to  set  up  a real-time channel, the  detailed 
information of each link this channel traverses must be ex- 
changed between  nodes, inducing substantially  more over- 
head  than  the  minimal  information  that  needs  to  be  ex- 
changed in the original best-effort protocol.  The distributed 
route-selection  approach is more attractive than the central- 
ized  approach that  suffers the  performance and reliability 
bottleneck problem. 