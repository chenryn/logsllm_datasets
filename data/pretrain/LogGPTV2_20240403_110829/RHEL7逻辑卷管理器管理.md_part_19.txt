### [⁠]{#LVM_CLI.html#vgs_command}vgs 命令 {.title}
:::
[]{#LVM_CLI.html#idm140426168971600
.indexterm}[]{#LVM_CLI.html#idm140426168969840
.indexterm}[]{#LVM_CLI.html#idm140426154243216
.indexterm}[]{#LVM_CLI.html#idm140426154241776 .indexterm}
::: para
[表 4.3 "vgs Display 字段"](#LVM_CLI.html#tb-table-vgs-fields){.xref}
列出 `vgs`{.command}
命令的显示参数以及在标头显示中出现的字段名称及该字段的描述。
:::
::: table
[⁠]{#LVM_CLI.html#tb-table-vgs-fields}
**表 4.3. vgs Display 字段**
::: table-contents
  ---------------------------------------------------------------------------------------------------------------------------------------
  参数                         标头      描述
  ---------------------------- --------- ------------------------------------------------------------------------------------------------
  `lv_count`{.option}          #LV       卷组所包含逻辑卷数
  `max_lv`{.option}            MaxLV     卷组允许的最大逻辑卷数（0 表示无限大）
  `max_pv`{.option}            MaxPV     卷组允许的最大物理卷数（0 表示无限）
  `pv_count`{.option}          #PV       定义该卷组的物理卷数
  `snap_count`{.option}        #SN       卷组包含的快照数
  `vg_attr`{.option}           Attr      卷组状态：（w）可写入；（r）只读；（z）可重新定义大小；（x）可导出；（p）部分；以及（c）集群。
  `vg_extent_count`{.option}   #Ext      卷组中的物理扩展数
  `vg_extent_size`{.option}    Ext       卷组中的物理扩展大小
  `vg_fmt`{.option}            Fmt       卷组的元数据格式（`lvm2`{.filename} 或者 `lvm1`{.filename}）
  `vg_free`{.option}           VFree     卷组中剩余的可用空间大小
  `vg_free_count`{.option}     可用      卷组中的可用物理扩展数
  `vg_name`{.option}           VG        卷组名称
  `vg_seqno`{.option}          Seq       代表卷组修改的次数
  `vg_size`{.option}           VSize     卷组大小
  `vg_sysid`{.option}          SYS ID    LVM1 System ID
  `vg_tags`{.option}           VG 标签   附加到卷组的 LVM 标签
  `vg_uuid`{.option}           VG UUID   卷组的 UUID
  ---------------------------------------------------------------------------------------------------------------------------------------
:::
:::
::: para
`vgs`{.command} 命令默认显示以下字段：`vg_name`{.option},
`pv_count`{.option}, `lv_count`{.option}, `snap_count`{.option},
`vg_attr`{.option}, `vg_size`{.option}, `vg_free`{.option}. The display
is sorted by `vg_name`{.option}。
:::
``` screen
# vgs
  VG     #PV #LV #SN Attr   VSize  VFree
  new_vg   3   1   1 wz--n- 51.42G 51.36G
```
::: para
使用 `vgs`{.command} 命令的 `-v`{.option}
参数值默认显示着添加以下字段：`vg_extent_size`{.option}，`vg_uuid`{.option}。
:::
``` screen
# vgs -v
    Finding all volume groups
    Finding volume group "new_vg"
  VG     Attr   Ext   #PV #LV #SN VSize  VFree  VG UUID
  new_vg wz--n- 4.00M   3   1   1 51.42G 51.36G jxQJ0a-ZKk0-OpMO-0118-nlwO-wwqd-fD5D32
```
:::
::: simplesect
::: titlepage
### [⁠]{#LVM_CLI.html#lvs_command}lvs 命令 {.title}
:::
[]{#LVM_CLI.html#idm140426167656128
.indexterm}[]{#LVM_CLI.html#idm140426150232784
.indexterm}[]{#LVM_CLI.html#idm140426150231344 .indexterm}
::: para
[表 4.4 "lvs 显示字段"](#LVM_CLI.html#tb-table-lvs-fields){.xref} 列出了
`lvs`{.command}
命令的显示参数以及在标头显示中的字段名称以及该字段的描述。
:::
[]{#LVM_CLI.html#idm140426150228240
.indexterm}[]{#LVM_CLI.html#idm140426150226480 .indexterm}
::: table
[⁠]{#LVM_CLI.html#tb-table-lvs-fields}
**表 4.4. lvs 显示字段**
::: table-contents
+-------------------+---------+----------------------------------------+
| 参数              | 标头    | 描述                                   |
+===================+=========+========================================+
|   ------          | 区块    | 快照卷的单位大小                       |
| ----------------- |         |                                        |
|   `ch             |         |                                        |
| unksize`{.option} |         |                                        |
|   `chu            |         |                                        |
| nk_size`{.option} |         |                                        |
|   ------          |         |                                        |
| ----------------- |         |                                        |
+-------------------+---------+----------------------------------------+
| `copy_            | Copy%   | 镜像逻辑卷的同步百分比；也可在使用     |
| percent`{.option} |         | `pv_move`{.command}                    |
|                   |         | 命令移动物理扩展时使用。               |
+-------------------+---------+----------------------------------------+
| `                 | 设备    | 组成逻辑卷的底层设备：即               |
| devices`{.option} |         | 物理卷、逻辑卷及起始物理扩展和逻辑扩展 |
+-------------------+---------+----------------------------------------+
| `                 | Attr    | 逻辑卷状态。逻辑卷的属性字节如下：     |
| lv_attr`{.option} |         |                                        |
|                   |         |   --------------------------           |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         |   字节 1：卷类型：                     |
|                   |         |  (m)镜像卷，(M) 没有初始同步的镜像卷， |
|                   |         | (o)原始卷，(O)附带合并快照的原始卷，(  |
|                   |         | r)阵列，(R)没有初始同步的阵列，(s)快照 |
|                   |         | ，(S)合并快照，(p)pvmove，(v)虚拟，(i  |
|                   |         | )镜像或阵列映象，(I)未同步的镜像或阵列 |
|                   |         | 映象，(l)映象日志设备，(c)底层转换卷， |
|                   |         | (V)精简卷，(t)精简池，(T)精简池数据，  |
|                   |         | (e)阵列或精简池元数据或池元数据备件，  |
|                   |         |   字节 2：授权：(                      |
|                   |         | w)写入，(r)只读，(R)非只读卷的只读激活 |
|                   |         |   字节 3：                             |
|                   |         | 分配策略：(a)任意位置，(c)相邻，(i)继  |
|                   |         | 承，(l)紧邻，(n)常规。如果该卷目前锁定 |
|                   |         | 无法进行分配更改，则该字母会呈大写状态 |
|                   |         | 。例如执行 `pvmove`{.command} 命令时。 |
|                   |         |   字节 4：(m)固定镜像                  |
|                   |         |   字节 5：状态：(a)激活                |
|                   |         | ， (s)挂起, (I) 无效快照， (S) 无效挂  |
|                   |         | 起快照， (m) 快照合并失败，(M) 挂起快  |
|                   |         | 照合并失败，(d) 显示的映射设备不包含表 |
|                   |         | 格，(i) 显示的映射设备中包含停用表格。 |
|                   |         |   字节 6：设备 (o) 开启                |
|                   |         |   字节 7：目标类型                     |
|                   |         | ： (m)镜像，(r) RAID，(s) 快照，(t) 精 |
|                   |         | 简，(u)未知，(v) 虚拟。这样可将有类似  |
|                   |         | 内核目标的逻辑卷分在一组。比如镜像映象 |
|                   |         | 、镜像日志以及镜像本身分为组（m），它  |
|                   |         | 们使用原始设备映射器内核驱动程序，使用 |
|                   |         |  md raid 内核驱动程序的类似的 raid 设  |
|                   |         | 备则分组为（r）。使用原始设备映射器驱  |
|                   |         | 动程序的快照则分组为（s），使用精简配  |
|                   |         | 置驱动程序的精简卷快照则分组为（t）。  |
|                   |         |   字节 8：使用前，                     |
|                   |         | 以设置为 0 的块覆盖新分配了数据的块。  |
|                   |         |   字节 9：卷正常情况：(p) 部           |
|                   |         | 分正常，(r) 需要刷新，(m) 存在映射错误 |
|                   |         | ，(w) 大部分写入。(p) 部分正常表示该系 |
|                   |         | 统中缺少这个逻辑卷使用的一个或多个物理 |
|                   |         | 卷。(p) 部分正常表示这个 RAID 逻辑卷使 |
|                   |         | 用的一个或多个物理卷有写入错误。该写入 |
|                   |         | 错误可能是由于该物理卷故障造成，也可能 |
|                   |         | 表示该物理卷正在出现问题。应刷新或替换 |
|                   |         | 该设备。(m) 存在映射错误表示 RAID 逻辑 |
|                   |         | 卷中有阵列不一致的部分。在 RAID 逻辑卷 |
|                   |         | 中启动 `check`{.literal} 操作就会发现  |
|                   |         | 这些不一致之处。（取消该操作，可使用 ` |
|                   |         | lvchange`{.command} 命令在 RAID 逻辑卷 |
|                   |         | 中执行 `check`{.literal} 和 `repair`{  |
|                   |         | .literal} ）。(w) 大部分写入表示已将 R |
|                   |         | AID 1 逻辑卷中的设备标记为大部分写入。 |
|                   |         |   字节 10：(k) 跳                      |
|                   |         | 过激活：将该卷标记为在激活过程中跳过。 |
|                   |         |   --------------------------           |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
|                   |         | -------------------------------------- |
+-------------------+---------+----------------------------------------+
| `lv_kerne         | KMaj    | 逻辑卷的实际主要设备数（若未激活则为   |
| l_major`{.option} |         | -1）                                   |
+-------------------+---------+----------------------------------------+
| `lv_kerne         | KMIN    | 逻辑卷的实际次要设备数（若未激活则为   |
| l_minor`{.option} |         | -1）                                   |
+-------------------+---------+----------------------------------------+
| `l                | Maj     | 逻辑卷的持久主要设备数（若未指定则为   |
| v_major`{.option} |         | -1）                                   |
+-------------------+---------+----------------------------------------+
| `l                | Min     | 逻辑卷的持久次要设备数（若未指定则为   |
| v_minor`{.option} |         | -1）                                   |
+-------------------+---------+----------------------------------------+
| `                 | LV      | 逻辑卷名称                             |
| lv_name`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `                 | LSize   | 逻辑卷大小                             |
| lv_size`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `                 | LV 标签 | 附加到逻辑卷的 LVM 标签                |
| lv_tags`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `                 | LV UUID | 逻辑卷的 UUID                          |
| lv_uuid`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `mir              | Log     | 镜像日志所在设备                       |
| ror_log`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `                 | 模块    | 需要                                   |
| modules`{.option} |         | 使用这个逻辑卷的对应内核设备映射器目标 |
+-------------------+---------+----------------------------------------+
| `                 | 移动    | 使用 `pvmove`{.command}                |
| move_pv`{.option} |         | 命令创建的临时逻辑卷之源物理卷         |
+-------------------+---------+----------------------------------------+
| `origin`{.option} | Origin  | 快照卷的原始设备                       |
+-------------------+---------+----------------------------------------+
|   -------         | 区域    | 镜像逻辑卷的单元大小                   |
| ----------------- |         |                                        |
|   `reg            |         |                                        |
| ionsize`{.option} |         |                                        |
|   `regi           |         |                                        |
| on_size`{.option} |         |                                        |
|   -------         |         |                                        |
| ----------------- |         |                                        |
+-------------------+---------+----------------------------------------+
| `se               | #Seg    | 逻辑卷中的片段数                       |
| g_count`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `s                | SSize   | 逻辑卷的片段大小                       |
| eg_size`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `se               | 起始    | 逻辑卷中的片段偏移                     |
| g_start`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `s                | Seg     | 附加到逻辑卷片段的 LVM 标签            |
| eg_tags`{.option} | 标签    |                                        |
+-------------------+---------+----------------------------------------+
| `                 | 类型    | 逻辑                                   |
| segtype`{.option} |         | 卷的片段类型（例如：镜像、条带、线性） |
+-------------------+---------+----------------------------------------+
| `snap_            | Snap%   | 目前使用的快照卷百分比                 |
| percent`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
| `                 | #Str    | 逻辑卷中的条状卷或镜像卷数             |
| stripes`{.option} |         |                                        |
+-------------------+---------+----------------------------------------+
|   -------         | 条带    | 条带逻辑卷的单元大小                   |
| ----------------- |         |                                        |
|   `str            |         |                                        |
| ipesize`{.option} |         |                                        |
|   `stri           |         |                                        |
| pe_size`{.option} |         |                                        |
|   -------         |         |                                        |
| ----------------- |         |                                        |
+-------------------+---------+----------------------------------------+
:::
:::
::: para
`lvs`{.command}
命令默认显示下面的字段：`lv_name`{.option}、`vg_name`{.option}、`lv_attr`{.option}、`lv_size`{.option}、`origin`{.option}、`snap_percent`{.option}、`move_pv`{.option}、`mirror_log`{.option}、`copy_percent`{.option}、`convert_lv`{.option}。默认根据卷组中的
`vg_name`{.option} 和 `lv_name`{.option} 排序。
:::
``` screen
# lvs
  LV         VG     Attr   LSize  Origin Snap%  Move Log Copy%  Convert
  lvol0      new_vg owi-a- 52.00M
  newvgsnap1 new_vg swi-a-  8.00M lvol0    0.20
```
::: para
使用 `lvs`{.command} 命令的 `-v`{.option}
参数将下面的字段添加到默认显示中：`seg_count`{.option}、`lv_major`{.option}、`lv_minor`{.option}、`lv_kernel_major`{.option}、`lv_kernel_minor`{.option}、`lv_uuid`{.option}。
:::
``` screen
# lvs -v
    Finding all logical volumes
  LV         VG     #Seg Attr   LSize  Maj Min KMaj KMin Origin Snap%  Move Copy%  Log Convert LV UUID
  lvol0      new_vg    1 owi-a- 52.00M  -1  -1 253  3                                          LBy1Tz-sr23-OjsI-LT03-nHLC-y8XW-EhCl78
  newvgsnap1 new_vg    1 swi-a-  8.00M  -1  -1 253  5    lvol0    0.20                         1ye1OU-1cIu-o79k-20h2-ZGF0-qCJm-CfbsIx
```
::: para
可使用 `lvs`{.command} 命令的 `--segments`{.option}
参数显示默认栏信息，并强调片段信息。使用 `segments`{.option}
参数后，`seg`{.literal} 前缀为自选项。`lvs --segments`{.command}
命令默认显示下面的字段：`lv_name`{.option}、`vg_name`{.option}、`lv_attr`{.option}、`stripes`{.option}、`segtype`{.option}、`seg_size`{.option}。默认显示是根据卷组的
`vg_name`{.option} 和 `lv_name`{.option}，以及该逻辑卷的
`seg_start`{.option}
排序。如果逻辑卷碎片化，这个命令的输出结果会体现此状态。
:::
``` screen
# lvs --segments
  LV       VG         Attr   #Str Type   SSize
  LogVol00 VolGroup00 -wi-ao    1 linear  36.62G
  LogVol01 VolGroup00 -wi-ao    1 linear 512.00M
  lv       vg         -wi-a-    1 linear 104.00M
  lv       vg         -wi-a-    1 linear 104.00M
  lv       vg         -wi-a-    1 linear 104.00M
  lv       vg         -wi-a-    1 linear  88.00M
```
::: para
使用 `lvs --segments`{.command} 命令的 `-v`{.option}
参数在默认显示着添加以下字段：`seg_start`{.option}、`stripesize`{.option}、`chunksize`{.option}。
:::
``` screen
# lvs -v --segments
    Finding all logical volumes
  LV         VG     Attr   Start SSize  #Str Type   Stripe Chunk
  lvol0      new_vg owi-a-    0  52.00M    1 linear     0     0
  newvgsnap1 new_vg swi-a-    0   8.00M    1 linear     0  8.00K
```
::: para
下面的示例演示了在已配置逻辑卷的系统中运行 `lvs`{.command}
命令的输出结果，以及运行附加 `segments`{.option} 参数的 `lvs`{.command}
命令的输出结果。
:::
``` screen
# lvs
  LV    VG     Attr   LSize  Origin Snap%  Move Log Copy%
  lvol0 new_vg -wi-a- 52.00M
# lvs --segments
  LV    VG     Attr   #Str Type   SSize
  lvol0 new_vg -wi-a-    1 linear 52.00M
```
:::
:::
::: section
::: titlepage
## [⁠]{#LVM_CLI.html#report_sorting}4.8.3. 将 LVM 报告排序 {.title}
:::
[]{#LVM_CLI.html#idm140426113055360 .indexterm}
::: para
通常必须生成 `lvs`{.command}、`vgs`{.command} 或者 `pvs`{.command}