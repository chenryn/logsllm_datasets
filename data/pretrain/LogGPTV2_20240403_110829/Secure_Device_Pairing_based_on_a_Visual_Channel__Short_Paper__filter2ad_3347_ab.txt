‚Äô0111‚Äô, ‚Äô1110‚Äô, ‚Äô1101‚Äô. Second, rather than doing error cor-
rection, we tolerate a certain number of errors in the n-bit
transmission. With k accepted errors, the number of possi-
ble matches, based on a binomial distribution of errors, is
(cid:2)
(cid:3)
(cid:4)
2n
(cid:2)k
i=0 (n
i)
2n to an upper bound of p = n
i=0...k
Using these mechanisms the probability p that the re-
ceiver will accept a random string as valid will increase
. If k = 3
from 1
bits are allowed to be wrong in an n = 24 bit sequence, p is
0.0064, whereas if only 1 bit error is allowed, p is 0.00004.
There are several ways to trade off security and execu-
tion time. The attack success probability p can be decreased
by: (a) increasing the length of the checksum n, (b) reduc-
ing the number of acceptable errors k, (c) reducing the num-
ber of possible rotations that are acceptable as matches (say
only every fourth), and (d) adding an external end marker
(e.g., the light-source staying ‚Äúon‚Äù for 0.5 seconds) to in-
dicate the end of the checksum string, bringing p down to
(cid:2)k
i=0 (n
i)
2n
.
Implementation and Timings. We have developed a proof-
of-concept implementation where a single blinking LED
(connected to the parallel port of a PC) sends a signal that
is received by a camera phone. Figures 5(a) and 5(b) illus-
trate our two demonstrator implementations. In 5(a), a Blue-
tooth pairing is established between a Symbian 8.0 camera
phone and a Linux laptop with an LED (illustrating, e.g.,
a WLAN access point). In 5(b), two phones are paired us-
ing the display of one phone as the bi-state light.
Our algorithm makes bit reception quite tolerant. The data
light source such as a light-emitting diode (LED).
Transmission. We use frequency modulation to encode the
data being transmitted (see Figure 4). The sender turns the
light-source on and off repeatedly. The data is encoded in
the time interval between each successive ‚Äúon‚Äù or ‚Äúoff‚Äù
event: a long gap represents a ‚Äô1‚Äô and a short gap repre-
sents a ‚Äô0‚Äô. Since the channel is unidirectional, the transmit-
ter cannot know when the receiver starts reception. There-
fore, the transmitter keeps repeating the sequence until ei-
ther the user approves the key agreement, or a timeout oc-
curs. The camera phones of today are limited to a frame rate
of about 10 video frames/second. Nyquist-Shannon sam-
pling theorem (sampling rate = 2 √ó bandwidth for no loss
of information) limits the transfer speed with this algorithm
to 5 bits/second.
Reception. The receiver processing is analogous: simpli-
Ô¨Åed, each received video frame is compressed into one
value per frame (the sum of all the pixel values) , and the
Ô¨Årst-order difference between consecutive values (i.e., the
derivative) is compared against a relative threshold based
on maximum observed variation in the pixel sum. If the
derivative is steep enough and in the right direction (alter-
nating between positive and negative) a transition in lighting
is registered. The time between two consecutive changes in-
dicates the transfer of either a ‚Äô1‚Äô or a ‚Äô0‚Äô bit as depicted in
Figure 4.


	
	
	







Figure 4. Data transmission via a single light-
source visual channel
Trading EfÔ¨Åciency with Security. We designed two mecha-
nisms that allow the possibility of a parameterizable trade-
off between execution time and the level of security. First,
we can reduce the execution time by exploiting the fact
that the the transmitted data (i.e., the integrity checksum) is
known to the receiver in advance. The receiver may start re-
ception at any bit position, and records until the n-bit tail
of the received bit-string matches against any of the ro-
tated versions of the expected n-bit string. Therefore, the re-
(a) Pairing phone & laptop
(b) Pairing two phones
Figure 5. Pairing Scenarios
can be received at a distance of several tens of centimeters,
the implementation is agnostic to camera focus problems
and tolerates a fair bit of camera shaking, turning, etc.
With our setup, a 24-bit checksum signaled (1 error ac-
cepted) with the laptop is received and matched by the cam-
era phone. The execution times for a positive indication
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P‚Äô06) 
1081-6011/06 $20.00 ¬© 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:36 UTC from IEEE Xplore.  Restrictions apply. 
(match) is typically in the range of 5 to 8 seconds. The in-
creased execution time is the price we pay for achieving vi-
sual channel authentication with devices that can not afford
a full display.
4.3. Extending the Bandwidth on Better
Displays
As we saw in Section 4.2, using VICsh with a single light
source, and limiting the attack success probability to 2‚àí20,
the execution time cannot be smaller than about 5 seconds.
A natural question is whether any speedup in the execu-
tion time is possible if there were multiple light sources or
in other words, a better display. In the full paper [5], we de-
scribe the design and analysis of a new video codec that can
be used to set up a visual channel between a device with
a small display and a device with a video camera. The es-
sential idea is that the data is encoded for error correction
and then represented by multiple black-or-white rectangular
slots in each screen frame. The frames are then displayed in
sequence at a certain rate to be read by a video camera on
the other device.
Our motivation was to investigate two different ques-
tions: whether the video codec can signiÔ¨Åcantly improve the
transfer time of a short checksum (15-20 bits), so that it can
be used to reduce the execution time of secure pairing, and
whether the video codec can enable applications other than
secure pairing. We show that even with naive image recog-
nition techniques, such a video codec performs reasonably
efÔ¨Åciently. We refer the interested reader to [5].
We implemented the preliminary video codec us-
ing Python Imaging Library4 on Linux. In the current im-
plementation, our decoding algorithm is given as input
the video frames captured from a camera phone. Over-
all, it takes approximately 5 ‚àí 7 seconds for the whole pro-
cess. We anticipate the performance to improve when the
python implementation is ported to a native C++ imple-
mentation on the Symbian platform.
compare two short strings [2] can be used. In all the other
cases, VIC could be the best choice since it provides mu-
tual authentication and potentially better usability.
Y has ‚Üí C & D
X has ‚Üì
C & D
C only
D only
SiB/VIC
VIC
VIC
C only
D only
VIC
SiBa
VIC
VIC
VIC
MANA
Notation:
C: Camera, D: Display
aBoth devices need static barcode labels afÔ¨Åxed to them.
Table 3. Achieving mutual authentication
Table 4 summarizes when to use the two different
Ô¨Çavours of VIC: If either one of the devices has a full dis-
play, then plain VIC as described in Section 3 can be used.
Otherwise VIC combined with MA-3 (which we called
VICsh) can be used. Table 4 also summarizes the execu-
tion time measurements for the two cases. The execution
times for the constrained display case or for the limited dis-
play is substantially longer than in full display case. De-
spite this, we stress that this case is extremely relevant,
since not all devices have full displays to support the dis-
play of barcodes.
Display type
Full
Limited
Constrained
Recorder type
Still camera
Video camera
Video camera
Protocol
VIC
VICsh
VICsh
Execution time
1 seconda
5-7 secondsb
5-8 secondsc
aSymbian OS implementation on Nokia 6600 [4]
bPython implementation on PC
cSymbian OS implementation on Nokia 6630
Table 4. Applicability of proposed protocols
5. Discussion
5.1. Comparison of DiÔ¨Äerent Protocols
5.2. Device Discovery Strategies
Table 3 summarizes our recommendations on how mu-
tual authentication can be achieved with different device
type combinations. If both devices have camera and dis-
play, mutual authentication can be achieved either using SiB
or VIC. SiB can be used with camera-only devices which
can have static barcodes afÔ¨Åxed to them. The case of two
display-only devices is out of scope for this paper, and the
basic MANA techniques which require the user to visually
4http://www.pythonware.com/products/pil/
It is often argued [6, 1] that one of the main beneÔ¨Åts
of using an OOB channel for security initialization is the
ease of device discovery. For example in [1] the devices ex-
change complete addresses over infrared, and thus no in-
band device discovery is needed.
We argue that in many scenarios an in-band device dis-
covery is actually needed before the OOB message ex-
change. The increasing number of different OOB channels
(such as infrared, camera and full display, camera and sin-
gle LED etc.) results in situations where the user might not
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P‚Äô06) 
1081-6011/06 $20.00 ¬© 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:36 UTC from IEEE Xplore.  Restrictions apply. 
always know which OOB to use with the two particular de-
vices at hand. It should not be the user‚Äôs burden to Ô¨Ågure
out which OOB to use (and how), but instead an in-band de-
vice discovery should take place and the best mutually sup-
ported OOB channel should be negotiated in-band and the
user should be guided to use this OOB.
In order to conveniently discover the desired device in-
band, the user must put one of the devices into a temporary
special discoverable mode so that the user does not have to
select the correct device from a long list of device names.
We call this action user conditioning. From the user‚Äôs point
of view this action can be performed, e.g., by pressing a but-
ton on the device or by selecting a menu option.
5.3. Usability Considerations
The security of VIC and VICsh relies on the user an-
swering afÔ¨Årmatively in the last step (e.g., in Figure 2). If
device B rejects the key agreement and indicates failure to
the user, but the user inadvertently answers afÔ¨Årmatively in
the last step, device A would conclude that the key agree-
ment was authenticated even though B does not. One way
to reduce the likelihood of accidental (or out of habit) con-
Ô¨Årmation is to use a speciÔ¨Åc conÔ¨Årmation button only for
the purpose of secure device pairing. The downside is the
cost of adding such a button.
Whether this accidental conÔ¨Årmation is a real concern
can only be determined by extensive usability testing. To
date, none of the research papers dealing with the problem
of secure device pairing have reported substantial compar-
ative usability testing. Given the level of recent interest in
this area which has resulted in several pairing approaches, a
comprehensive comparative usability testing will be a very
valuable research contribution. We are addressing this in our
current work.
5.4. Denial-of-Service
Another concern is the possibility of a denial-of-service
attack. An attacker can disrupt a pairing attempt between
two devices by simultaneously initiating pairing with one
or both of the same devices. Accidental simultaneous pair-
ing is likely to be very rare because of the user condition-
ing described in Section 5.2. Thus, if a device detects mul-
tiple pairing attempts, the best strategy may be to ask the
user to try again later, rather than ask the user to choose
the correct device. In addition, part of the device identiÔ¨Åer
sent via the visual channel can serve as a hint to picking
the correct device in case of multiple parallel device pair-
ing attempts. Note that in wireless networks, elaborate at-
tempts to protect the pairing protocol against malicious at-
tempts of denial-of-service are not cost effective because an
attacker can always mount denial-of-service by simply dis-
rupting the radio channel.
6. Conclusions
We proposed several extensions to the SiB approach of
secure device pairing using a visual channel. We showed
how strong mutual authentication can be achieved using just
a unidirectional visual channel, and how visual channel au-
thentication can be used even on devices that have very lim-
ited displaying capabilities, such as a single LED. Com-
moditized devices like wireless access points, and devices
with form factor limitations like headsets, cannot afford to
have full displays. Our contribution makes it possible to use
visual channel authentication on such devices.
It would be feasible to trim down the camera to a sim-
ple light sensor, resulting in a channel somewhat similar to
a unidirectional infrared channel. However, the former has
usability and cost advantages: LEDs are typically already
available on commodity devices, and an LED light source
is easier for the user to visually identify.
Finally, we proposed a video-based codec which may
help improve the speed of secure pairing in devices with
less constrained, but not full, displays, as well as may lead
to applications other than secure device pairing.
Acknowledgements: We thank Niklas Ahlgren, Aur¬¥elien
Francillon, Stanis≈Çaw Jarecki, Markku Kyl¬®anp¬®a¬®a, Jonathan
McCune, Valtteri Niemi, Kaisa Nyberg, Adrian Per-
rig, Marie Selenius, and the anonymous reviewers for their
valuable comments.
References
[1] D. Balfanz et al. Talking to strangers: Authentication in ad-
In Network and Distributed System
hoc wireless networks.
Security Symposium, (NDSS), February 2002.
[2] C. Gehrmann et al. Manual authentication for wireless de-
vices. RSA CryptoBytes, 7(1):29 ‚Äì 37, Spring 2004.
[3] S. Laur et al. EfÔ¨Åcient mutual data authentication based
on short authenticated strings.
IACR Cryptology ePrint
Archive: Report 2005/424 available at http://eprint.
iacr.org/2005/424, November 2005.
[4] J. M. McCune et al. Seeing-is-believing: Using camera phones
for human-veriÔ¨Åable authentication. In IEEE Symposium on
Security and Privacy, May 2005.
[5] N. Saxena et al. Secure device pairing based on a visual chan-
nel. IACR Cryptology ePrint Archive: Report 2006/050 avail-
able at http://eprint.iacr.org/2006/050, Febru-
ary 2006.
[6] F. Stajano and R. J. Anderson. The resurrecting duckling: Se-
curity issues for ad-hoc wireless networks. In Security Proto-
cols Workshop, 1999.
[7] S. Vaudenay. Secure communications over insecure channels
based on short authenticated strings. In Advances in Cryptol-
ogy - CRYPTO, 2005.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P‚Äô06) 
1081-6011/06 $20.00 ¬© 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:36 UTC from IEEE Xplore.  Restrictions apply.