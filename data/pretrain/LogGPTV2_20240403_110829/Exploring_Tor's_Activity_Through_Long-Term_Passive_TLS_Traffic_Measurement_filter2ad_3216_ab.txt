### 5.1 Relay Types and Network Growth

Figure 1 illustrates the consensus information derived from CollecTor data, showing all relays and specific subclasses of relays with the exit, guard, stable, and fast status flags set. A single relay can hold multiple flags, for example, it can be both a guard and an exit node.

The graph in Figure 1 indicates a gradual increase in the size of the Tor network over recent years. However, this growth is not uniform across all node types. The average number of relays per day increased from 3,984 in 2011 to 7,524 in 2014, representing an 89% increase. Similarly, the number of guard nodes rose from 793 to 1,911 (a 141% increase). In contrast, the number of exit relays decreased by 37%, from 1,965 to 1,243 per day. This decline may be attributed to an increasing awareness that Tor exit node maintainers may face legal challenges [13]. Consequently, each exit node in 2014 routed a larger fraction of the traffic compared to 2011, making them more attractive targets for malicious actors aiming to examine outgoing traffic.

The stable flag indicates that a node has been reliable over time, a requirement for becoming a guard node. A relay is considered stable if its mean time between failures (MTBF) is at least the median of all known active relays or if its weighted MTBF is more than 7 days [22]. The number of stable Tor relays increased by 183% from 2011 to 2014, from 1,466 to 4,171. This growth may correlate with the increased availability of permanent Internet connections for end-users.

### 5.2 Connection Classification

In a large end-user network, most Tor nodes are expected to act as clients, with the majority of outgoing connections terminating at guard relays. To verify this, we matched all outgoing connections to the Tor network consensus information from CollecTor.

**Figure 2: Connections to Different Node Types at N1**

Figure 2 shows the total number of external relay IP addresses seen each day at site N1, distinguishing between guard and exit relays. Over the measurement period, 50% of all connections (5,318,445 out of 10,612,263) terminated at guard nodes. Given that the average number of guard nodes in the Tor network is only 20% (all-time; 25% in 2014), this suggests a significant number of clients at this institution.

The graph also reveals several distinct peaks where the ratio of guard nodes per day is much lower. During these periods, most connections terminated at "normal" relay nodes that are neither exit nor guard relays. The peak between August and November 2013 is likely due to the Mevade Botnet, which caused a massive global rise in the number of active Tor users, from approximately 1 million to nearly 6 million daily users [10]. We do not have specific reasons for the other spikes, such as the one spanning October to December 2014. However, given that we do not see similar artifacts at other sites and considering that most connections do not target guard servers, we speculate that a local user was running a Tor relay during these times, offering the universityâ€™s excellent bandwidth to the Tor network.

To test this hypothesis, we analyzed the TLS fingerprints of the connections from this site to the Tor network, focusing on the cipher suites and TLS extensions supported by the client. This analysis revealed that the spikes in December 2014, the Mevade spike between August and November 2013, the spike in February 2014, and the spike in March 2013 all map to specific TLS fingerprints, indicating a single software responsible for each.

**Other Sites:**
- **Site N3 and Site X1:** These sites exhibit a generally low level of Tor connections (1,286 and 418 connections per day on average, respectively) compared to site N1 (9,366/day). Most connections there terminate at guard nodes (80% and 75% of connections, respectively), suggesting client activity.
- **Site N2:** This site has the highest number of connections into the Tor network among all our sites (21,675/day on average), with connections steadily increasing from 2,818/day in February 2013 to 88,666 in February 2015. The distribution of connections changed starting in mid-2014, going from 72% terminating at guard nodes in January 2014 to just 38% in January 2015. We assume this to be a case of well-established Tor servers inside the network of this university.

### 5.3 Connection Durations

A passive observer of the Tor network can also gather information about the duration of connections to Tor relays. Table 3 provides an overview of the connection durations to guard nodes at our four sites. At each site, we observed a few very long connections, with at least one connection lasting more than 6.8 days. However, the distribution of durations is highly skewed towards very short connections. The median connection duration ranges from 3.0 to 6.3 minutes, while the mean is slightly higher, ranging from 7.3 to 19.5 minutes. Figure 3 compares the daily mean and median durations at site N1, illustrating that the mean remains relatively stable over time, while the median fluctuates more, potentially due to local user activity.

**Table 3: Summary of Guard Relay Connection Durations for Each Site in Minutes**

| Site | 1st Qu. | Median | Mean | 3rd Qu. | Max |
|------|---------|--------|------|---------|-----|
| N1   | 3.0     | 3.0    | 9.6  | 10.1    | 9,839 |
| N2   | 3.0     | 6.3    | 19.5 | 16.8    | 22,280 |
| N3   | 1.5     | 3.0    | 7.3  | 3.2     | 16,370 |
| X1   | 3.0     | 3.0    | 8.3  | 3.3     | 10,120 |

We partially explain this behavior by examining how Tor relays establish connections. When two Tor relays set up a circuit, they keep the TLS session alive for up to three minutes to potentially reuse for follow-up requests. If no further circuits use this connection within that time, it is torn down [2]. However, the frequent occurrence of even shorter durations (17%, 6.9%, 34%, and 13% of all connections for N1, N2, N3, and X1, respectively) suggests a systematic reason. Possible explanations include Tor clients using short-lived connections for internal housekeeping, independent of user activity (e.g., to update their relay lists), and implementation artifacts.

**Figure 3: Median and Mean Guard Relay Connection Durations at Site N1 in Minutes (y-axis log-scale)**

### 6 Server Characteristics

In this section, we examine the server side of the Tor network, starting with an analysis of server version changes in Section 6.1 and followed by a look at the server-chosen cipher suites in Section 6.2.

#### 6.1 Tor Server Versions

The Tor network consensus provides the software versions for all running Tor relays. Figure 4 shows the distribution of these versions over time. While the uptake of new server versions is generally fast, there is a long tail of servers that remain on older releases for a significant period. From a deployment perspective, this makes sense; unlike the Tor client software, which comes with an autoupdate functionality when used in the Tor Browser bundle, administrators install Tor relay servers either manually or via the package management system of their operating system.

**Figure 4: Distribution of Tor Server Versions Over Time**

[Insert Figure 4 here]

This figure highlights the rapid adoption of new versions but also the persistence of older versions, reflecting the manual nature of server updates.