B and C validate M by M’s VM and Ki.
C
Fig. 1: Validate Forwarded Message M with M’s VM 
3.3  Tracing Forwarded Routing Evidence  
DRETA uses key-Hashed Message Authentication Code (HMAC) 
to protect the integrity of flooding routing messages. For example, 
shown in Fig. 2, a message M is flooded and the forwarding route 
is [N0-> ... -> Ni-1 -> Ni -> Ni+1 -> ... -> Nk]. Every node in the 
route  signs  the  hash  value  of  message  M  as  its  HMAC  and 
forwards  its  HMAC.  After  forwarding  its  HMAC,  the  node 
forwards message M; each node has the HMAC of the sender to 
validate the integrity of M. 
However, the sender Ni may maliciously modify the content of M. 
Therefore, DRETA requires that the sender Ni also forwards the 
previous  sender's  (Ni-1's)  HMAC  together  with  sender's  (Ni's) 
HMAC.  The  previous  sender,  Ni-1,  is  called  the  “Previous 
Forwarder”,  which  is  the  forwarder  who  forwarded  M  to  the 
sender Ni. Then, the receiver, Ni+1, can have HMACs from both 
Ni and Ni-1, and node Ni+1 can validate M from Ni-1's HMAC. 
Thus, DRETA can trace the forwarded routing evidence using the 
HMAC of the Previous Forwarder (PF) and ensure the integrity of 
the forwarded messages. 
… 
Ni-1
Ni-1’s & Ni-2’s 
HMAC
Ni 
Ni’s & Ni-1’s 
HMAC
Ni+1
… 
Fig. 2: Sending HMACs of Sender and Previous Forwarder (PF). 
3.4  Validation Message  
DRETA proposes  the use of Validation Message to authenticate 
routing  messages  and  trace  integrity  of  forwarded  routing 
messages. A Validation Message consists of three sub-messages: 
Authentication Message, Evidence Tracing Message, and Key 
Forwarding Message. Because authentication service is essential, 
a Validation Message must contain an Authentication Message. A 
Validation  message  contains  an  Evidence  Tracing  message  only 
when the corresponding routing message is a forwarded message, 
and Key Forwarding Message accompanies an Evidence Tracing 
message. 
An Authentication Message consists of the last expired sender's 
key and the signed expecting sending time of the buffered routing 
message.  An  Evidence  Tracing  Message  (ETM)  carries  the 
Message Authentication Code (MAC) of the upcoming forwarded 
routing message and the corresponding HMACs of the sender and 
Previous Forwarder (PF). Each forwarding node uses a MAC  to 
generate  its  HMAC,  and  stores  the  sender's  and  PF's  HMAC  to 
validate  the  upcoming  forwarded  message.  Then  the  node 
forwards  a  new  ETM  for  the  upcoming  routing  message  if  the 
node  will  need  to  forward  the  message.  In  the  new  ETM,  the 
sender's HMAC is signed by the node, and PF's HMAC is copied 
from the sender's HMAC using the previously received ETM. In 
order to show that PF's HMAC is sent by the sender and prevent 
the receiver from reusing the PF's MAC, the sender rehashes PF's 
HMAC  with  the  sender's  address  and  replaces  PF's  HMAC.  At 
last,  the  receiver  will  have  PF's  key  from  the  Key  Forwarding 
Message (KFM) in order to re-create the PF's HMAC. 
Mutable fields, such as Time To Live (TTL) and Hop Count (HC), 
are  critical  and  cannot  be  protected  by  HMAC  because  they 
update as the routing message is forwarded one hop further. So, 
ETM  also  carries  TTL  and  HC,  and  the  encrypted  TTL  of  the 
sender and PF. Then the receiver can validate sender's TTL using 
the  PF's  TTL  (PF's  TTL  =  sender's  TTL  +  1).  Because  MAC 
contains  TTL  originator's  TTL  and  MAC  is  verified  by  PF's 
HMAC,  sender's  HC  can  be  verified  by  originator's  and  PF's 
TTLs (PF's HC = originator's TTL - PF's TTL; sender's HC = PF's 
HC  +  1).  Thus,  DRETA  can  use  Evidence  Tracing  Message  to 
trace  and  protect  the  integrity  of  the  routing  evidence  in 
forwarded routing messages. 
A  Key  Forwarding  Message  (KFM)  carries  the  last  Previous 
Forwarder's  expired  key  and  is  sent  with  the  corresponding 
routing  message  so  that  the  receiver  can  instantly  validate  the 
routing message with ETM and the keys in KFM. The  common 
combination  of  messages  in  a  Validation  Message  includes  the 
following: an AM and an ETM for upcoming forwarded routing 
message and a KFM for currently forwarded message.  
396
Fig. 3: Message Overhead vs. Scalability 
4.  EVALUATION 
4.1  Simulation Environment  
We  implement  DRETA  in  GloMoSim[8],  a  simulation  designed 
for MANETs, which supports 802.11, AODV, OLSR, and Ground 
Reflection  Two-Ray  radio  model  (radio  range  250m).  Mobile 
nodes follow the Random Waypoint Mobility Model with random 
speeds  of  up  to  20  meter/second  and  pause  times  up  to  300 
seconds. Network topologies consist of 15 to 150 nodes in 1 km 
to 2.5 km square fields, and total simulation time is 600 seconds. 
DRETA  chooses  SHA-1  hash  function  to  generate  MACs  and 
HMACs  with  10  byte  hash  values  and  8  byte  keys(expire  in  1 
second).   
4.2   Simulation Results 
We  discuss  DRETA  performance  with  three  metrics  under 
different degree of mobility and scalability. 
1.  Message  Overhead.  Because a routing  message requires one 
VM  on  average,  message  overhead  is  counted  as  average 
Validation Message size. Forwarded messages require additional 
ETMs and KFMs, but non-forwarded messages only  need AMs. 
Therefore, the forwarded message ratio is critical for calculating 
validation  message  size.  Average  Validation  Message  size  is  16 
bytes  (AM)  +56  bytes  (ETM+KFM)  *  forwarded  message  ratio 
and its maximum is 72 bytes. 
Mobility has little effect on message  overhead  because  mobility 
does not affect the forwarded message ratio. In Fig. 3, scalability 
has more effect in OLSR because the ratio of forwarded message 
increases as number of nodes grows. Scalability has little effect in 
AODV.  
2. Detection Accuracy. If a broadcast VM is lost due to lost links 
or message collision, the routing message will be dropped due to 
lack of corresponding VM and causes a false positive. The false 
positive  rate  is  generally  from  0.5  to  2.5%,  and  is  lower  as 
mobility  decreases  due  to  less  message  lost,  shown  in  Fig.  4. 
Scalability has less effect for the false positive rate than mobility. 
3.  Message Delay. The delay mainly results from the delay key 
disclosure  time,  which  is  one  second  so  the  delay  is  a  little  bit 
more  than  a  second.  Mobility  and  scalability  have  very  little 
influence  for  the  message  delay,  and  thus  so  the  delay  time  is 
usually very stable. 
Fig. 4: False positive rate vs. Mobility  
5.  CONCLUSION 
DRETA is a distributed intrusion detection model for protecting 
and  authenticating  forwarded  routing  messages  in  MANETs. 
DRETA  has  public  key  property  with  symmetric  keys  by 
adopting  one-way  key  chain  and  delay  key  disclosure.  DRETA 
proposes Validation Message and Previous Forwarder techniques 
to  trace  and  ensure  the  integrity  of  forwarded  messages. 
Experimental  results  in  GloMoSim  show  that  DRETA  instantly 
protects  AODV  and  OLSR  messages  under  high  degree  of 
mobility  and  scalability  with  low  computation  and  message 
overhead, low false positives, and low packet delay. 
6.  REFERENCES 
[1]  Perrig, R. Canetti, D. Tygar and D. Song, “The TESLA 
broadcast authentication protocol,” In Cryptobytes (RSA 
Laboratories, Summer/Fall 2002), 5(2):2-13, 2002. 
[2]  N. Haller, “The S/Key one-time password system”, Internet 
Society 1994. 
[3]  H. Krawczyk, M. Bellare, and R. Canetti, “HMAC: Keyed-
Hashing for Message Authentication”, IETF RFC 2104 
[4]  C. Perkins, E. Belding-Royer, and S. Das. “Ad Hoc On 
Demand Distance Vector Routing”, IETF RFC 3561 
[5]  T. Clausen and P. Jacquet, “Optimized Link State Routing 
Protocol”,  IETF RFC  3626 
[6]  Chinyang Henry Tseng, Shiau-Huey Wang, Calvin Ko, and 
Karl Levitt, “DEMEM: Distributed Evidence-driven 
Message Exchange intrusion detection Model for MANET”, 
Proceeding of the 9th International Symposium, Recent 
Advances in Intrusion Detection, Hamburg, Germany, 
September 20-22, 2006 
[7]  F. Anjum and R. Talpade, “LiPad: Lightweight Packet Drop 
Detection for Ad Hoc Networks,” In Proceedings of the 
2004 IEEE 60th Vehicular Technology Conference, Los 
Angeles, September 2004. 
[8]  Jorge Nuevo, “A Comprehensible GloMoSim Tutorial”, 
March 2004 
[9]  Y. Zhang and W. Lee, “Intrusion Detection in Wireless Ad 
Hoc Networks”, Proceedings of the 6th International 
Conference on Mobile Computing and Networking, Boston, 
MA, August 2000. 
397