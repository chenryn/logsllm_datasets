Protect your endpoints with Defender for Cloud's integrated endpoint detection and response solution, Microsoft Defender for Endpoint. Microsoft Defender for Endpoint protects your Windows and Linux machines whether they're hosted in Azure, on-premises, or a multicloud environment. Microsoft Defender for Endpoint is a holistic, cloud-delivered, endpoint security solution. The main features include:
- Risk-based vulnerability management and assessment
- Attack surface reduction
- Behavioral based and cloud-powered protection
- Endpoint detection and response (EDR)
- Automatic investigation and remediation
- Managed hunting services
For more information, see [Enable the Microsoft Defender for Endpoint integration](/azure/defender-for-cloud/integration-defender-for-endpoint#enable-the-microsoft-defender-for-endpoint-integration).
### D. Monitor Amazon EC2 data in Microsoft Sentinel
Once you install Azure Connected Machine agent and AMA, Amazon EC2 operating systems start sending logs into Azure Log Analytics tables that are automatically available to Microsoft Sentinel.
The following image demonstrates how Amazon EC2 operating system logs are ingested by Microsoft Sentinel. The Azure Connected Machine agent makes your Amazon EC2 VMs part of Azure. The Windows Security Events via AMA data connector collects data from your Amazon EC2 VMs.
:::image type="content" source="media/logs-ingested-by-sentinel.png" alt-text="Diagram of operating system logs ingested by Microsoft Sentinel." lightbox="media/logs-ingested-by-sentinel.png":::
>[!Note]
>You don't need Microsoft Sentinel to ingest logs from Amazon EC2 but you do need a Log Analytics workspace previously set-up.
>
For step-by-step guidance, see [Amazon EC2 Sentinel Ingestion using Arc and AMA](https://github.com/rudneir2/AWS_EC2_Sentinel-Ingestion_using_ARC_AMA), which is a document in GitHub. The GitHub document addresses installing AMA, which you can skip because you installed AMA earlier in this solution guide.
### E. Monitor in Microsoft Sentinel logs from Amazon Virtual Private Cloud (Amazon VPC), AWS CloudTrail, and Amazon GuardDuty
Earlier you connected Microsoft Sentinel to AWS using the Amazon Simple Storage Service (Amazon S3) connector. The Amazon S3 bucket sends logs to your Log Analytics workspace, the underlying tool used to query them. The following tables are created in the workspace:
- **AWSCloudTrail** - AWS CloudTrail logs hold all your data and management events of your AWS account.
- **AWSGuardDuty** - Amazon GuardDuty Findings represent a potential security issue detected within your network. Amazon GuardDuty generates a finding whenever it detects unexpected and potentially malicious activity in your AWS environment.
- **AWSVPCFlow** - Amazon Virtual Private Cloud (Amazon VPC) Flow Logs enable you to capture IP traffic going to and from your Amazon VPC network interfaces.
You can query Amazon VPC Flow Logs, AWS CloudTrail and Amazon GuardDuty in Microsoft Sentinel. The following are query examples for each service and corresponding table in Log Analytics:
**For Amazon GuardDuty logs:**
AWSGuardDuty
| where Severity > 7
| summarize count() by ActivityType
**For Amazon VPC Flow logs:**
AWSVPCFlow
| where Action == "REJECT"
| where Type == "Ipv4"
| take 10
**For AWS CloudTrail logs:**
AWSCloudTrail
| where EventName == "CreateUser"
| summarize count() by AWSRegion
In Microsoft Sentinel, you utilize the Amazon S3 workbook to analyze more details.
For AWS CloudTrail you can analyze:
- Data flow over time
- Account IDs
- Event Source list  
For Amazon GuardDuty, you can analyze:
- Amazon GuardDuty by map
- Amazon GuardDuty by region
- Amazon GuardDuty by IP
### F. Use Microsoft Sentinel built in detection rules to create and investigate threat detection rules in your environment
Now that you've connected your data sources to Microsoft Sentinel, use Microsoft Sentinels built-in detection rule templates to help you create and investigate threat detection rules in your environment. Microsoft Sentinel provides out-of-the-box, built-in templates to help you create threat detection rules.
Microsoft's team of security experts and analysts design rule templates based on known threats, common attack vectors, and suspicious activity escalation chains. Rules created from these templates automatically search across your environment for any activity that looks suspicious. Many of the templates can be customized to search for activities, or filter them out, according to your needs. The alerts generated by these rules create incidents that you can assign and investigate in your environment.
For more information, see [detecting threats with built-in analytics rules in Microsoft Sentinel](/azure/sentinel/detect-threats-built-in).
## Step 3: Improve your overall security posture
In this section, you learn how Microsoft Entra Permissions Management helps you monitor unused and excessive permissions. You step through how to configure, onboard, and view key data. The Zero Trust **use least-privilege access** principle is achieved by managing, controlling, and monitoring access to your resources.
| Steps | Task |
| --- | --- |
| A | Configure Permissions Management and Privileged Identity Management. |
| B | Onboard an AWS account. |
| C | View key statistics and data. |
### Configure Permissions Management
Permissions Management is a cloud infrastructure entitlement management (CIEM) solution that detects, automatically right-sizes, and continuously monitors unused and excessive permissions across your multicloud infrastructure.
Permissions Management deepens Zero Trust security strategies by augmenting the **use least-privilege access** principle, allowing customers to:
- Get comprehensive visibility: Discover which identity is doing what, where, and when.
- Automate least-privilege access: Use access analytics to ensure identities have the right permissions, at the right time.
- Unify access policies across IaaS platforms: Implement consistent security policies across your cloud infrastructure.
Permissions Management provides a summary of key statistics and data for AWS and Azure. The data includes metrics related to avoidable risk. These metrics allow the Permissions Management administrator to identify areas where risks related to the Zero Trust **use least-privilege access** principle can be reduced.
Data can be fed into Microsoft Sentinel for further analysis and automation.
To implement tasks, see:
- A. [Enable Permissions Management in your organization](/azure/active-directory/cloud-infrastructure-entitlement-management/onboard-enable-tenant)
- B. [Onboard an AWS account on Permissions Management](/azure/active-directory/cloud-infrastructure-entitlement-management/onboard-aws)
- C. [View key statistics and data](/azure/active-directory/cloud-infrastructure-entitlement-management/ui-dashboard)
## Step 4: Secure infrastructure as code
This section covers a key pillar of DevSecOps, scanning and securing your infrastructure as code.
For infrastructure as code, security and DevOps teams should monitor for misconfigurations that can lead to vulnerabilities in your infrastructure deployments.
By implementing continuous checks on Azure Resource Manager (ARM), Bicep, or Terraform templates, you prevent breaches and exploits early in development, when they're less costly to fix. You also want to maintain tight control of administrators and service account groups across Microsoft Entra ID and your DevOps tool.  
You implement the Zero Trust **use least-privilege access** principle by:
- Conducting robust reviews of your infrastructure configurations with least-privilege identity access and networking set up.
- Assigning users role-based access control (RBAC) to resources at the repository level, team level, or organization level.
**Prerequisites:**
- Code repositories are in Azure DevOps or GitHub
- Pipelines are hosted in Azure DevOps or GitHub
| Steps | Task |
| --- | --- |
| A | Enable DevSecOps for infrastructure as code (IaC). |
| B | Implement RBAC for DevOps tools. |
| C | Enable GitHub Advanced Security. |
| D | View code and secret scanning results. |
### A. Enable DevSecOps for IaC
Defender for DevOps provides visibility into the security posture of your multi-pipeline environment, regardless of whether your code and pipelines are in Azure DevOps or GitHub.  It has the extra benefit of implementing a single pane of glass where security and DevOps teams can see scan results of all their repositories in one dashboard, and set up a pull request process to remediate any issues.
For more information, see:
- [DevSecOps for IaC](/azure/architecture/solution-ideas/articles/devsecops-infrastructure-as-code)
- [DevSecOps with GitHub security](/azure/architecture/solution-ideas/articles/devsecops-in-github)
### B. Implement RBAC for DevOps tools
You need to manage and implement sound [governance](/azure/cloud-adoption-framework/secure/best-practices/end-to-end-governance) practices for your team, such as role-based access control permissions. If this model isn't mirrored for DevOps automation, your organization might leave a security back-door open. Consider an example where a developer doesn't have access via ARM templates. The developer may still have sufficient permissions to change application code or infrastructure as code and trigger an automation workflow. The developer, indirectly via DevOps, can access and make destructive changes to your ARM templates.
When you deploy cloud-based solutions for your infrastructure deployments, security should always be your most important concern. Microsoft keeps the underlying cloud infrastructure secure. You configure security in Azure DevOps or GitHub.
To configure security:
- In [Azure DevOps](/azure/cloud-adoption-framework/ready/considerations/security-considerations-tools#azure-devops-role-based-access-considerations), you can use security groups, policies, and settings at the organization/collection, project, or object level.
- In [GitHub](/azure/cloud-adoption-framework/ready/considerations/security-considerations-tools#github-role-based-access-considerations), you can assign users access to resources by granting them roles at the repository level, team level, or organization level.
### C. Enable GitHub Advanced Security
To proactively secure environments, it's important to continuously monitor and strengthen DevOps security. GitHub Advanced Security automates checks in your pipeline to look for exposed secrets, dependency vulnerabilities, and more. GitHub makes extra security features available to customers under an Advanced Security license.
By default, GitHub Advanced Security is enabled for public repositories. For your private repositories, you need to use the GitHub Advanced Security licensing. Once enabled, you can start using the many features that come with the GitHub Advanced Security suite:
- Code scanning
- Dependency scanning
- Secret scanning
- Access control
- Vulnerability alerts
- Audit log
- Branch protection rules
- Pull request reviews
With these features, you can ensure that your code is secure and compliant with industry standards. You can also create automated workflows to help you quickly detect and address any security issues in your code. Additionally, you can use branch protection rules to prevent unauthorized changes to your codebase.
For more information, see [Enable GitHub Advanced Security](https://docs.github.com/en/enterprise-cloud@latest/get-started/learning-about-github/about-github-advanced-security#enabling-advanced-security-features).
### D. View code and secret scanning results
[Defender for DevOps](/azure/defender-for-cloud/defender-for-devops-introduction), a service available in Defender for Cloud, enables security teams to manage DevOps security across multi-pipeline environments. Defender for DevOps uses a central console to empower security teams with the ability to protect applications and resources from code to cloud across multi-pipeline environments, such as GitHub and Azure DevOps.
Defender for DevOps exposes security findings as annotations in Pull Requests (PR). Security operators can enable PR annotations in Microsoft Defender for Cloud. Exposed issues can be remedied by developers. This process can prevent and fix potential security vulnerabilities and misconfigurations before they enter the production stage. You can configure PR annotations in Azure DevOps. You can get PR annotations in GitHub if you're a GitHub Advanced Security customer.
For more information, see:
- [Configure the Microsoft Security DevOps GitHub action](/azure/defender-for-cloud/github-action)
- [Configure the Microsoft Security DevOps Azure DevOps extension](/azure/defender-for-cloud/azure-devops-extension)
- [Enable pull request annotations in GitHub and Azure DevOps](/azure/defender-for-cloud/enable-pull-request-annotations)
## Next steps
Learn more about the Azure services discussed in this article:
- [Microsoft Defender for Cloud](/azure/defender-for-cloud/defender-for-cloud-introduction)
- [Microsoft Sentinel](/azure/sentinel/overview)
- [Azure Monitor](/azure/azure-monitor/overview)
- [Azure ARC-enabled servers](/azure/azure-arc/servers/overview)
- [Log Analytics](/azure/azure-monitor/logs/log-analytics-tutorial)
Learn more about AWS and Amazon services and resources discussed in this article:
- [Amazon Elastic Compute Cloud](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html) (Amazon EC2)
- [AWS CloudTrail](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-user-guide.html)
- [Amazon Virtual Private Cloud](https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html) (Amazon VPC)
- [Amazon GuardDuty](https://aws.amazon.com/guardduty/features/)
- [Amazon Simple Storage Service](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html) (Amazon S3)
- [Amazon Simple Queue Service](https://aws.amazon.com/sqs/) (SQS)
- [AWS Identity and Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html) (IAM)