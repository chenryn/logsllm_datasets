title:Measuring the Role of Greylisting and Nolisting in Fighting Spam
author:Fabio Pagani and
Matteo De Astis and
Mariano Graziano and
Andrea Lanzi and
Davide Balzarotti
2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Measuring the Role of Greylisting and
Nolisting in Fighting Spam
Fabio Pagani
Eurecom
PI:EMAIL
Matteo De Astis
Universit`a degli Studi di Milano
PI:EMAIL
Mariano Graziano
Eurecom and Cisco Systems, Inc.
PI:EMAIL
Andrea Lanzi
Universit`a degli Studi di Milano
PI:EMAIL
Davide Balzarotti
Eurecom
PI:EMAIL
Abstract—Spam has been largely studied in the past years
from different perspectives but, unfortunately, it is still an open
problem and a lucrative and active business for criminals and
bot herders. While several countermeasures have been proposed
and deployed in the past decade, their impact and effectiveness
is not always clear. In particular, on top of the most common
content- and sender-based anti-spam techniques, two minor
approaches are popular among system administrators to cope
with this annoying problem: greylisting and nolisting. These
techniques exploit known features of the Simple Mail Transfer
Protocol (SMTP) protocol that are not often respected by spam
bots. This assumption makes these two countermeasures really
simple to adopt and, at least in theory, quite effective.
In this paper we present the ﬁrst comprehensive study
of nolisting and greylisting, in which we analyze these spam
countermeasures from different perspectives. First, we measure
their world-wide deployment and provide insights from their
distribution. Second, we measure their effectiveness against a
real dataset of malware samples responsible to generate over
70% of the global spam trafﬁc. Finally, we measure the impact
of these two defensive mechanisms on the delivery of normal
emails.
Our study provides a unique and valuable perspective on
two of the most innovative and atypical anti-spam systems. Our
ﬁndings may guide system administrators and security experts
to better assess their anti-spam infrastructure and shed some
light on myths about greylisting and nolisting.
Keywords—Spam, Greylisting, Nolisting, Botnet
I.
INTRODUCTION
According to the annual Symantec Threat Report [12] the
overall number of spam messages decreased by 3% in 2014,
but spam still accounted for 60% of the global email trafﬁc
on the Internet. This recent decrease in the spam volume is
due to many reasons, including the increasing effectiveness
of the numerous solutions that exist to either prevent or detect
spam messages. These solutions can be broadly grouped in
two major families: sender-based ﬁltering and content-based
ﬁltering. The two approaches are applied at different stages
( the pre-acceptance and post-acceptance tests, respectively)
by the receiving SMTP server. Pre-acceptance tests typically
require to keep some senders status and/or retrieving special
Domain Name System (DNS) records in order to verify
an existing trust relationships or a certain reputation before
accepting an email. Post-acceptance tests involve instead a
number of local tests, such as the use of a classiﬁer on the
email body.
While the most popular techniques have been widely
studied in previous research [3]–[5], [11], [18], [22], [23],
[28], [29], [35], [36], [38], the effectiveness of other minor
approaches have never been properly measured. In particular,
in this paper we focus on two of them, nolisting and
greylisting, to try to shed light on their practical advantages
and disadvantages. Nolisting and greylisting are both based
on the assumption that nowadays most of the spam is sent
by machines infected by malware. As a consequence, the
malicious executable responsible to send spam do not use
full-ﬂedged Mail Transfer Agents (MTA), but small routines
that often implement part of the message delivery protocol in
custom ways – not compliant with the RFCs. The existence
of these SMTP “dialects” has been experimentally conﬁrmed
in 2012 by Stringhini et al. [34], who noticed that details
about the protocol can also be used to ﬁngerprint botnets
and tell them apart from benign MTA agents.
The main idea of nolisting and greylisting is that the
lack of compliance to standards can be used to prevent
malware from delivering the spam messages in the ﬁrst place.
Nolisting does that by mimicking a malfunctioning primary
mail server, while greylisting achieve a similar result by
temporarily rejecting emails coming from unknown senders.
In the ﬁrst case, the defender hopes that the malware is not
designed to retrieve and contact the secondary email server,
while in the second case the defender hopes that the malware
would simply move to the next target without retrying to
deliver the message a second time. Because of this behavior
that privileges volume over the accurate delivery of single
messages, malware samples that fall in these categories are
often called ﬁre-and-forget spammers.
Despite the fact that today nolisting and greylisting are
already in use to protect thousands of email servers, their core
assumptions have never been conﬁrmed by real experiments.
978-1-4673-8891-7/16 $31.00 © 2016 IEEE
DOI 10.1109/DSN.2016.57
562
In fact, to the best of our knowledge there is no previous
study on the effectiveness of nolisting, and greylisting has
been the focus of some previous works [31]–[33] which
only measured the impact of the parameters and thresholds
on the number of messages blocked by greylisting services
deployed in real email servers. While this is useful, the
fraction of spam messages that is blocked by greylisting is
still not clear. To better answer this question, in this paper
we experiment with a number of real malware samples that
in 2014 were responsible for the delivery of over 93% of the
spam generated from botnets, which in turn accounts for over
70% of the worldwide spam trafﬁc. This gives us a privileged
view to understand whether these malware families are able
to cope with nolisting and greylisting services.
Our study clearly shows that malware is indeed adapting
to these techniques, but not as quickly and not as effectively
as many people say. Therefore, in 2015 both nolisting and
greylisting can still play an important role in the ﬁght against
spam.
tions:
To summarize, this paper makes the following contribu-
• We present the ﬁrst study of nolisting, measuring
both its effectiveness to protect against spam and its
world-wide deployment.
• We test
•
the efﬁcacy of nolisting and greylisting
techniques by using binaries belonging to the four
malware families which are known to produce over
93% of the botnet-generated spam trafﬁc.
• We study how the greylisting threshold affects the
delivery of normal emails and also how botnets react
to the different greylisting thresholds in terms of
number of attempts and time to delivery.
Our experimental results enable network adminis-
trators to make a more systematic and informed
decision about which technique to adopt for their
email infrastructure to reduce the impact of spam.
The rest of the paper is structured as follows: In Section II
we introduce in more details the nolisting and greylisting
technologies, presenting the open questions and the current
debate on their effectiveness. In Section III we detail the
experimental setup and the tests performed in our study.
Section IV and Section V report the results for the nolisting
and greylisting experiments. Section VI presents some over-
all summary and discussion. Finally, Section VII discusses
related studies, and Section VIII concludes the paper.
II. NOLISTING & GREYLISTING
In this section we introduce in more details the two
techniques we study in this paper. For each of them we
present
the way in which the defense is
typically deployed on a mail server, and the main criticisms
about its advantages and disadvantages.
the approach,
Nolisting
Nolisting is a very simple anti-spam mechanism that
consists of registering to the DNS a non-existent primary
563
mail server (i.e., MX record) and a full-functioning sec-
ondary server. The primary record still needs to point to
an address with a proper A record, so the common sug-
gestion is to use a real machine that has port 25 closed.
Theoretically, this conﬁguration should be indistinguishable
from the case in which the primary server is malfunctioning
or it is temporarily ofﬂine for maintenance. According to
the RFC 5321 [21] each email client MUST try to contact
all Mail eXchanger (MX) addresses in order of priority (see
Figure 1 for an example of the protocol). As a result, the
main advantage of nolisting is that it should not affect the
delivery of benign emails, and it should not introduce any
delay in the delivery of the messages. However, the authors
of nolisting noticed that a large percentage of ﬁre-and-forget
spam sources (which follow by deﬁnition a very simple logic)
is not able to deal with this case and would therefore fail to
deliver their messages.
Criticisms: Nolisting is a controversial technique. The
advocates say that
is a very simple and yet effective
solution to reduce spam, as most of the botnets responsible
for it are not RFC compliant and they limit their attempts to
the main MX server.
it
Other people have instead a more skeptical position,
objecting that malware authors already switched their tools to
contact directly the secondary MX server (skipping the ﬁrst
altogether) and therefore the beneﬁcial effects of nolisting
are nowadays very limited. On top of that, it is possible
(even though extremely rare) that this technique can prevent
some legitimate email client (especially small programs used
to send automated notiﬁcations) from delivering legitimate
messages. These people conclude that nolisting is practically
useless, and therefore should not be used to protect email
servers. As it often happens when there is no real data
to support either claims, the ﬁnal decision is left to folks
wisdom or the “feelings” of network administrators.
Open Questions: There are a number of open questions
we want to answer with our study. First of all, we want
to measure How widespread the use of nolisting is on the
Internet. We will then move to the fundamental question: Is it
true that modern malware is not affected by this technique? If
this is the case, is it because malware samples only focus on
the secondary email server or is it because they can properly
contact all of them based on their priority?
Greylisting
Greylisting is more sophisticated and more popular than
nolisting, and is fully implemented in the SMTP server with-
out requiring any modiﬁcation to the DNS records. A server
protected by greylisting accepts incoming messages delivered
from known senders – based on the triplet . Whenever a triplet is unknown, the
server answers with an error, asking the client to try again
later. While RFC-compliant clients would attempt again at
regular time intervals, ﬁre-and-forget software do not always
support this feature. The server keeps sending back the same
error for a conﬁgurable time interval, after which a new
delivery attempt results in accepting the email and adding
the sender to a white-list for future connections.
MTA
DNS
Primary MailServer
Secondary MailServer
MXQUERYfor foo.net
M X 0 s m t p . f o o . n e t
M X 1 5 s m t p 1 . f o o . n e t
AQUERYfor smtp.foo.net
1 . 2 . 3 . 4
HELO local.domain.name
HELO local.domain.name
l o l o c a l . d o m a i n . n a m e ,
2 5 0 H e l
I a m g l a d t o m e e t y o u
Fig. 1: DNS Communication in presence of Nolisting
Criticisms: Greylisting has two obvious problems. First,
it introduces a noticeable delay in the delivery of certain
legitimate emails. Second, it only works if the client retries to
delivery the message always with the same IP address. This
is a reasonable assumption for normal email servers, but it
is not the case for large and redundant infrastructures (such
as the one used by popular web-mail providers). To solve
this problem, greylisting implementations typically need to
resort to white-list popular email providers.
In exchange for this limitation, critics say that greylisting
offers limited protection, due to two main reasons. First,
recent malware families are sophisticated enough to retry
the delivery of messages. Second, even when they do not
support this feature, it is likely that the same address will be
used for sending several spam messages, with the side-effect
that the spammer would be eventually whitelisted by mistake
(remember that the message itself is irrelevant, and only the
sender and the recipient needs to be the same).
At this point, the supporters of greylisting rebut that, even
when ineffective, greylisting would still be useful because the
delay introduced in the delivery of spam messages can be
enough for the sender (especially if it is a mass-spammer)
to be detected and added into popular spammer blacklists
- therefore still helping to prevent the ﬁnal delivery of the
spam message.
Open Questions: Unlike nolisting, measuring the adop-
tion on a large scale of greylisting is very difﬁcult. In
fact, email servers are typically conﬁgured to refuse mes-
sages for non-existing recipients before applying greylisting.
Therefore, the only way to test a particular server is to
know in advance a valid address of one of its users (and,
unfortunately, common addresses such as postmaster are
not covered by the greylisting protection). Even if we cannot
measure its worldwide use, there are still many important
questions that we can answer. In particular, Is greylisting