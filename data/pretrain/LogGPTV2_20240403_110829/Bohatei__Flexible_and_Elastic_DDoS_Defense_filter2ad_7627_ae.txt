Figure 9: DNS ampliﬁcation defense strategy graph.
(cid:15)(cid:18)(cid:10)(cid:12)(cid:6)(cid:1)
like capabilities, and custom code [27]. The output of the
detection module is sent to the Bohatei global controller
as a 3-tuple (cid:31)Type,FlowSpec,Volume(cid:30), where Type indi-
cates the type of DDoS attack (e.g., SYN ﬂood, DNS am-
pliﬁcation), FlowSpec provides a generic description of
the ﬂow space of suspicious trafﬁc (involving wildcards),
and Volume indicates the suspicious trafﬁc volume based
on the ﬂow records. Note that this FlowSpec does not
pinpoint speciﬁc attack ﬂows; rather,
it is a coarse-
grained hint on characteristics of suspicious trafﬁc that
need further processing through the defense graphs.
7.2 SDN/NFV platform
Control plane: We use the OpenDayLight network
control platform, as it has gained signiﬁcant traction
from key industry players [17]. We implemented the
Bohatei global and local control plane modules (i.e.,
strategy, resource management, and network orchestra-
tion) as separate OpenDayLight plugins. Bohatei uses
OpenFlow [40] for conﬁguring switches; this is purely
for ease of prototyping, and it is easy to integrate other
network control APIs (e.g., YANG/NetCONF).
Data plane: Each physical node is realized using a
VM running on KVM. We use open source tools (e.g.,
Snort, Bro) to implement the different Analysis (A) and
826  24th USENIX Security Symposium 
USENIX Association
Analysis
Response
Topology
#Nodes
Run time (secs)
Optimality
Attack
type
UDP
ﬂood
DNS
amp.
SYN
ﬂood
A UDP using Snort (inline
mode)
both LIGHTCHECK and
MATCHRQST using net-
ﬁlter library, iptables, cus-
tom code
A SYNFLOOD using Bro
R LOG using iptables and
R RATELIMIT using tc li-
brary
R LOG and R DROP us-
ing iptables
R SYNPROXY
using
PF ﬁrewall, R LOG and
R DROP using iptables
R DROP using iptables
Heanet
OTEGlobe
Cogent
6
92
196
Baseline Bohatei Gap
205
2234
> 1 hr
0.002
0.007
0.01
0.0003
0.0004
0.0005
Table 2: Run time and optimality gap of Bohatei vs.
ILP formulation across different topologies.
)
s
m
(
y
c
n
e
a
t
w
o
l
f
-
r
e
p
h
c
t
i
w
S
l
p
u
-
t
e
s
Bohatei
Reactive control
600
500
400
300
200
100
0
 0
 50
 100
 150
 200
Number of attack flows per second (∗1000)
Figure 10: Bohatei control plane scalability.
pairs [50]. The total volume is scaled linearly with
the size of the network such that the average link load
on the topology backbone is 24Gbps with a maxi-
mum bottleneck link load of 55Gbps. We use iperf
and custom code to generate benign trafﬁc.
• Attack trafﬁc: We implemented custom modules to
generate attack trafﬁc: (1) SYN ﬂood attack by send-
ing only SYN packets with spoofed IP addresses at
a high rate; (2) DNS ampliﬁcation using OpenDNS
server with BIND (version 9.8) and emulating an at-
tacker sending DNS requests with spoofed source
IPs; (3) We use iperf to create some ﬁxed band-
width trafﬁc to generate elephant ﬂows, and (4) UDP
ﬂood attacks. We randomly pick one edge PoP as
the target and vary the target across runs. We ramp
up the attack volume until it induces maximum re-
duction in throughput of benign ﬂows to the target.
On our testbed, we can ramp up the volume up to
10 Gbps. For larger attacks, we use simulations.
8.1 Bohatei scalability
Resource management: Table 2 compares the run time
and optimality of the ILP-based algorithm and Bohatei
(i.e., DSP and SSP) for 3 ISP topologies of various sizes.
(We have results for several other topologies but do not
show it for brevity.) The ILP approach takes from sev-
eral tens of minutes to hours, whereas Bohatei takes only
a few milliseconds enabling rapid response to changing
trafﬁc patterns. The optimality gap is ≤ 0.04%.
Control plane responsiveness: Figure 10 shows the
per-ﬂow setup latency comparing Bohatei to the SDN
per-ﬂow and reactive paradigm as the number of attack
ﬂows in a DNS ampliﬁcation attack increases. (The re-
sults are consistent for other types of attacks and are not
shown for brevity.) In both cases, we have a dedicated
machine for the controller with 8 2.8GHz cores and 64
Elephant
ﬂow
A ELEPHANT using net-
ﬁlter library, iptables, cus-
tom code
Table 1: Implementation of Bohatei modules.
Response (R) modules. Table 1 summarizes the speciﬁc
platforms we have used. These tools are instrumented us-
ing FlowTags [31] to add tags to outgoing packets to pro-
vide contextual information. We used OpenvSwitch [16]
to emulate switches in both datacenters and ISP back-
bone. The choice of OpenvSwitch is for ease of proto-
typing on our testbed.
Resource management algorithms: We implement the
DSP and SSP algorithms using custom Go code.
8 Evaluation
In this section, we show that:
1. Bohatei is scalable and handles attacks of hundreds
of Gbps in large ISPs and that our design decisions
are crucial for its scale and responsiveness (§8.1)
several canonical DDoS attack scenarios (§8.2)
attack strategies (§8.3)
2. Bohatei enables a rapid (≤ 1 minute) response for
3. Bohatei can successfully cope with several dynamic
Setup and methodology: We use a combination of real
testbed and trace-driven evaluations to demonstrate the
above beneﬁts. Here we brieﬂy describe our testbed,
topologies, and attack conﬁgurations:
• SDN Testbed: Our testbed has 13 Dell R720 ma-
chines (20-core 2.8 GHz Xeon CPUs, 128GB RAM).
Each machine runs KVM on CentOS 6.5 (Linux ker-
nel v2.6.32). On each machine, we assigned equal
amount of resources to each VM: 1 vCPU (virtual
CPU) and 512MB of memory.
• Network topologies: We emulate several router-
level ISP topologies (6–196 nodes) from the Internet
Topology Zoo [22]. We set the bandwidth of each
core link to be 100Gbps and link latency to be 10ms.
The number of datacenters, which are located ran-
domly, is 5% of the number of backbone switches
with a capacity of 4,000 VMs per datacenter.
• Benign trafﬁc demands: We assume a gravity model
of trafﬁc demands between ingress-egress switch
USENIX Association  
24th USENIX Security Symposium  827
Bohatei
per-flow rules
10e+06
100,000
1,000
10
Attack type
DNS Ampliﬁcation
SYN Flood
Elephant ﬂows
UDP ﬂood
# VMs needed
Monolithic
5,422
3,167
1,948
3,642
Fine-grained scaling
1,005
856
910
1,253
r
e
b
m
u
n
d
e
r
i
u
q
e
r
x
a
M
h
c
t
i
w
s
a
n
o
l
s
e
u
r
f
o
Table 3: Total hardware provisioning cost needed to
handle a 100 Gbps attack for different attacks.
some small differences across attacks, the overall reac-
tion time is short.
c
i
f
f
a
r
t
i
n
g
n
e
B
)
s
p
b
G
(
t
u
p
h
g
u
o
r
h
t
10
6
2
SYN flood
DNS amp.
attack starts
Elephant flow
UDP flood
 0