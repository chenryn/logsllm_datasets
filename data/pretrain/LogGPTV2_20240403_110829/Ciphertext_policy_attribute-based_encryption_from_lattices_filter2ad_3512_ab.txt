Algorithm SampleLeft(A, M1, TA, u, σ):
• Inputs: A rank n matrix A in Zn×m
, a ”short” basis TA ∈ Zm×m
q and a gaussian parameter σ > (cid:107)(cid:102)TA(cid:107) ·
, a matrix M1
q (A), a
of Λ⊥
q
q
q
(cid:112)
in Zn×m1
vector u ∈ Zn
ω(
log(m + m1)).
• Outputs: Let F1 = (A|M1). The algorithm outputs
a vector e ∈ Λu
q (F1) (i.e., F1 · e = u).
Algorithm SampleRight(A, B, R, TB, u, σ):
• Inputs: A matrix A in Zn×m
Zn×m
basis TB ∈ Zm×m
, a rank n matrix B in
, a uniform random matrix R ∈ {−1, 1}m×m, a
q and a
gaussian parameter σ > (cid:107)(cid:102)TB(cid:107) · √
q (B), a vector u ∈ Zn
m · ω(log m).
of Λ⊥
q
q
q
• Outputs: Let F2 = (A|AR + B). The algorithm out-
puts a vector e ∈ Λu
q (F2) (i.e., F2 · e = u).
q
(cid:80)
The ideas behind the construction are as follows. For
each value vi,j, where i ∈ [N], j ∈ [Ni], we will choose
a uniformly random vector ui,j ∈ Zn
q . Then, use the
encoding function with full-rank diﬀerences (FRD) H,
described as in [1], to map ui,j to a matrix H(ui,j) ∈
Zn×n
. Thanks to the construction of H, we can com-
vi,j∈L H(ui,j) for some attribute list L. In addi-
pute
vi,j∈L(cid:48) H(ui,j) with
tion, notice that
overwhelming probability for L (cid:54)= L(cid:48) due to all ui,j are
uniformly random. Thus, we get a lattice ciphertext pol-
icy attribute based encryption that the ciphertext policy
is AND-gates on multi-valued attributes.
(cid:80)
vi,j∈L H(ui,j) (cid:54)=
(cid:80)
In addition, notice that we have FL · eL = u.
Encrypt(P P, b, W ): Take the public parameter P P , a
message bit b ∈ {0, 1} and a policy W as inputs, do the
following:
(cid:80)
vi,j∈W H(ui,j)) · B.
• Set FW = A|A1 + (
• Choose a uniformly random s ∈ Zn
random matrix R ∈ {−1, 1}m×m.
q and a uniformly
• Choose noise vectors x ∈ Zq and y ∈ Zm
to the distribution ¯Ψα, and set z ← R(cid:62)y ∈ Zm
q .
∈ Z2m
• Set c0 ← u(cid:62)s + x + b(cid:98) q
2(cid:99), c1 ← F (cid:62)
and the ciphertext C = (W, c0, c1).
W s +
q according
(cid:183)
(cid:184)
y
z
q
Decrypt(P P, C, eL): Let C be encrypted under policy
W . If L (cid:178) W , do the following:
• Compute w ← c0 − e(cid:62)
• If |w − (cid:98) q
2(cid:99)|  (cid:107)(cid:102)TA(cid:107) · ω(
of Λ⊥
q
q
q (A), a vector u ∈ Zn
(q ≥ 2, m > n), a
q and a
√
log m).
International Journal of Network Security, Vol.16, No.6, PP.444-451, Nov. 2014
449
• Outputs: A vector x ∈ Λu
q (A) with parameter σ.
q (A), which is sampled from
q (A),σ. The dis-
q (A),σ is a discrete Gaussian distribution
a distribution statistically close to DΛu
tribution DΛu
over Λu
Let Dm×m denote the distribution on matrices in
Zm×m deﬁned as (DZm,σ)m conditioned on the re-
sulting matrix being Zq-invertible [2]. DZm,σ is the
discrete Gaussian distribution over Zm with parameter
σ =
n log q · ω(
log m).
√
√
Algorithm SampleR(1m):
• The algorithm returns a Zq-invertible matrix R ∈
Zm×m sampled from Dm×m.
Algorithm BasisDel(A, R, TA, σ):
• Inputs: A rank n matrix A in Zn×m
of Λ⊥
matrix R, a basis TA ∈ Zm×m
sian parameter σ ∈ R>0.
q
q
, a Zq-invertible
q (A) and a gaus-
Encrypt(P P, b, W ): Take the public parameter P P , a
message bit b ∈ {0, 1} and a policy W = (W1, . . . , WN )
as inputs, do the following:
(cid:81)
vi,j∈W Ri,j)−1.
• Set FW = A(
• Choose a uniformly random s ∈ Zn
q .
• Choose noise vectors x ∈ Zq and y ∈ Zm
to the distribution ¯Ψα.
• Set c0 ← u(cid:62)s + x + b(cid:98) q
the ciphertext C = (W, c0, c1).
q according
2(cid:99), c1 ← F (cid:62)