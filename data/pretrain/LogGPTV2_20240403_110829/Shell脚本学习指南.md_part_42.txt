但是在任何开头的-V选项指定已经完成之后，它大部分是用来处理程序所需要的任何
特殊初始化工作。
END操作也是只执行一次，用于所有输人数据已被处理完之后。它多半用于产生摘要报
告，或是执行清除操作。
BEGIN与END模式可以是任意顾序，可以存在于awk程序内的任何位置，不过，为了
方便，我们通常将BEGIN模式放在程序的第一个位置，而将END模式放在最后。
当指定多个BEGIN或END模式，则它们将按照在awk程序里的顺序，一次执行。这允
许使用额外的-f选项纳人库代码，以提供起始与清除的操作。
9.3程序元素
就像绝大多数的脚本语言一样，awk处理数字与字符串数据。awk提供了标量（scalar）
与数组（array）两种变量以保存数据、数字与字符串表达式，还提供了一些语句类型以
处理数据：赋值、注释、条件、函数、输入、循环及输出。awk表达式与语句的许多功
能，都与C程序语言里的相似。
9.3.1注释与空白
awk里的注释是从开始到该行结束，就像在Shell里那样。空行等同于空的注释。
语言里的任何地方都能有空白，也允许使用任何长度的空白字符，所以适时地使用空行
与缩进，可以增进程序的可读性。不过，单条语句通常不能被分割跨越多行，除非在行
切断的地方立即前置一个反斜杠。
9.3.2字符串与字符串表达式
awk里的字符串常数是以引l号定界，例如：*Thisi8a stringconstant°。字符
字符串可包含任何8-bit的字符，除了控制字符NUL（字符值为O）以外。因为NUL在
层实现语言（C）里，扮演的是一个字符串中断字符的角色。GNU的gawk则无此限
制，所以gawk可以安全地处理任意二进制文件。
awk字符串包含零至多个字符，且在字符串的长度上没有限制，视可用内存而定。字符
串表达式赋值给变量后，会自动建立一个字符串，且变量的前一个字符丰值所占用的内
存也会目动回收。
反斜杠转义序列允许非打印字符的表示，如2.5.3节介绍的echo命令一样。“A\tz包
www.TopSage.com
---
## Page 253
awk的惊人表现
含的是：字符A、制表字符（tab），以及字符Z；而"001"与"x03则每个只是包含Om
了Ctrl-A字符。
echo不支持十六进制的转义序列，但1989年的1SOC标准里，已将此功能纳入awk实
现中，不同于至多只用三个数字表示的八进制转义序列的是：十六进制转义会耗用所有
接下来的十六进制数字。gawk与nawk遵循C标准，但mawk不是：它收集至多两个十
六进制数字，将*\x404142*减少为*@4142"，而非成为8-bit值0x42=66，其表
示ASCII字符集里“B的位置。POSIXawk完全不支持十六进制转义序列。
awk提供了许多方便好用的内建函数，可在字符串上执行：我们将在9.9节中讨论。现
在，我们只简略介绍字符串长度函数：length（string）返回string内的字符数。
字符串的比较，用的是传统的关系运算符：==（相等）、！=（不等）、（大于），以及>=（大于等于）。比较后返回1为真，0为假。比较不同长度
的字符串，且其中一个字符串为另一个的初始子字符串时，较短的会定义为小于较长的
那个，因此，"A"
在最初的awk规范下，余数运算里如果有任一运算数为负，则余数运算符的结果是由实
现期定义。POSIXawk要求其行为要像ISOStandardC函数fmod（）那样。也就是当
x$y可表示时，则会要求这个表达式x带有正负号，且必须小于y。我们测试过的
所有awk实现，都遵循这一POSIX的要求。
逻辑运算符&&与11与在Shel1里的一样，为AND与OR的简写：它们只在需要的时候
才计算它们右边的运算数。
www.TopSage.com
---
## Page 257
awk的惊人表现
245
表9-2中倒数第二行为简写的三元条件运算符。如果第一个运算数非零（为真），则结果
为第二个运算数：否则，则为第三个运算数。第二与第三个运算数只有一个被计算。因
此，在awk里，你可以写一个简洁的赋值：a=（u>w）？x^3：y^7，这种写法，
在其他程序语言中，可能如下所示：
if (u > w) then
el8e
a = x^3
endif
a = y^7
赋值运算符可能会不正常，原因有二。第一：复合式，像/=这样，以左边运算数作为
右边的第一个运算数：n/=3便是n=n/3的简写.第二：赋值的结果用来作为另
一个表达式的部分表达式：a=b=C=123先赋值123给c（因为赋值运算符为右结
合性），然后再将c的值给b，最后把b的值给a，结果如预期：a、b与c都接收到值
123。相同地，×=(y=123）+（z=321)分别将x、y与z指定为444、123与321。
**与**=运算符非POSIxawk的一部分，mawk也不认可。你应该避免在新的程序里
再使用它，请以~与~=取代之。
注意：请确定你了解赋值用的=与相等测试用的=-是不同的。因为赋值是有效的表达式，所以
（r·s）？t：u表达式在句子结构上是正确的，但可能会出现不是你想要的结果。它
指赋值S给r，然后如果其值非零，则返回t，否则，则返回u，这里的警告，也适用在C、
C++、Java及其他同时支持=与==运算符的语言。
内建函数int（）返回其参数的整数值部分，例：int（-3.14159）计算值为-3。
awk提供了一些通用的基本数学函数，可能和你用过的计算程序或其他程序语言里使用
的类似，例如 sqrt（）、sin（）、cos{)、1og{）、exp（)等等。详见9.10节。
9.3.4标量变量
保存单一值的变量叫做标量变量。awk就像绝大多数的脚本语言一样：变量无须先行声
明。相反地，它们会在程序里第一次使用它的时候，自动被建立，这通常是通过指定其
值达成，这个值可以是数字或是字符串，当使用变量时，在内容中期待的是数字还是字
符串就很清楚了，且其值也会在需要时自动地由其中一种（数字或字符串）转换为另一
种。
所有的awk变量在建立时其初始值为一个空字符串值，但是当需要数值时，它会被视为
www.TopSage.com
---
## Page 258
246
李6岁
awk的变量名称必须以ACSII字母或下划线开始，然后选择性地接上字母、下划线及数
字.因此，变量名称要匹配正则表达式[A-Za-z_][A-Za-z_0-9]*。除此之外，变量名
称在实际上井没有长度的限制。
另外，awk的变量名称是与大小写有关的：foo、Foo与FOO是完全不同的三个名称。一
般使用上以及建议用法是：养成习惯，将局部变量全设为小写、全局变量第一个字母为
大写，而内建变量则全是大写。
awk提供许多内建变量，都是大写名称。我们在简易程序里时需需要用到的几个，列于
表9-3中。
表9-3：awk里一般常用到的内建标量变量
委量说明
x fF 
t%
A /" ~ Pe T 1 3
FIL&NAME
当前输人文件的名称
FNR
当前输入文件的记录数
FS
字段分隔字符（正则表达式）（默认为：”·）
NF
当前记录的字段数
NR
在工作（job）中的记录数
输出字段分隔字符（默认为：）
ORS
输出记录分隔字符（默认为：\n"）
R.S
输入记录分隔字符（仅用于gawk与mawk里的正则表达式）（默认为："\n*）
9.3.5
数组变量
awk里的数组变量遵循与标量变量里相同的命名惯例，只不过它包含零到多个数据项，
通过紧接着名称的数组索引选定。
大部分程序语言都需要以整数表达式作为索引的数组，但awk允许在数组名称之后，以