## Steps to Reproduce
  1. Check out https://github.com/filiph/hn_app/tree/2ab7e86806c6fbf4bec2f3a11129d706a9a3b3c7 (a simple app sample with a single widget test)
  2. Run test with `flutter run test/widget_test.dart`. Verify that it is passing. (You may need to hit `R` to hot restart.)
  3. Now run the same test with `flutter test`.
Context: The test is trying to verify that after dragging to refresh, the
open/close state of the `ExpansionTile`s is reset. If you want to see the
regression that this test is trying to test against, comment out main.dart:56
(`key: Key(...)`).
The correct behavior:  
![refresh_test_bug_correct mp4](https://user-
images.githubusercontent.com/919717/40947541-18fa7d8c-6818-11e8-8534-4cee2829d837.gif)
The incorrect behavior (which we are not testing - I just want to show what
we're preventing with the test):  
![refresh_test_bug_incorrect mp4](https://user-
images.githubusercontent.com/919717/40947550-2019b5ce-6818-11e8-8f00-1bd8fe7a2081.gif)
When you run the app (`flutter run` or `flutter run test/widget_test.dart`),
you can clearly see that the open/close state is correctly reset. But the test
fails in the headless (`flutter test`) mode. In that mode, the `ExpansionTile`
is still open.
I've talked to @goderbauer about this and it doesn't (immediately) seem that
there's a problem with the test itself.
## Test code
Also included in the repo. Adding here for convenience:
      testWidgets('refresh clears open state', (WidgetTester tester) async {
        // Build our app and trigger a frame.
        await tester.pumpWidget(new MyApp());
        expect(find.byIcon(Icons.launch), findsNothing);
        await tester.tap(find.byType(ExpansionTile).at(2));
        await tester.pump();
        expect(find.byIcon(Icons.launch), findsOneWidget);
        await tester.drag(
            find.byType(ExpansionTile).first, const Offset(0.0, 150.0));
        await tester.pumpAndSettle();
        // debugDumpApp();
        expect(find.byType(RefreshProgressIndicator), findsNothing);
        expect(find.byIcon(Icons.launch), findsNothing);
      });
## Test output
### When run on device with `flutter run path/to/test.dart`:
    flutter: 00:00 \^[[32m+0\^[[0m: - refresh clears open state
    Restarted app in 1,603ms.
    flutter: 00:02 \^[[32m+1\^[[0m: All tests passed!
### When run in test framework with `flutter test`
    $ flutter test
    00:05 +0: - refresh clears open state
    ══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
    The following TestFailure object was thrown running a test:
      Expected: no matching nodes in the widget tree
      Actual: ?:
       Which: means one was found but none were expected
    When the exception was thrown, this was the stack:
    #4      main. (file:///Users/filiph/dev/hn_app/test/widget_test.dart:30:5)
    #5      testWidgets... (package:flutter_test/src/widget_tester.dart:63:25)
    #6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:509:19)
    #9      TestWidgetsFlutterBinding._runTest (package:flutter_test/src/binding.dart:494:14)
    #10     AutomatedTestWidgetsFlutterBinding.runTest. (package:flutter_test/src/binding.dart:751:24)
    #16     AutomatedTestWidgetsFlutterBinding.runTest (package:flutter_test/src/binding.dart:749:16)
    #17     testWidgets.. (package:flutter_test/src/widget_tester.dart:62:24)
    #18     Declarer.test... (package:test/src/backend/declarer.dart:161:27)
    #19     Invoker.waitForOutstandingCallbacks. (package:test/src/backend/invoker.dart:249:15)
    #23     Invoker.waitForOutstandingCallbacks (package:test/src/backend/invoker.dart:246:5)
    #24     Declarer.test.. (package:test/src/backend/declarer.dart:159:33)
    #28     Declarer.test. (package:test/src/backend/declarer.dart:158:13)
    #29     Invoker._onRun.... (package:test/src/backend/invoker.dart:403:25)
    #43     _Timer._runTimers (dart:isolate/runtime/libtimer_impl.dart:382:19)
    #44     _Timer._handleMessage (dart:isolate/runtime/libtimer_impl.dart:416:5)
    #45     _RawReceivePortImpl._handleMessage (dart:isolate/runtime/libisolate_patch.dart:165:12)
    (elided 26 frames from class _FakeAsync, package dart:async, and package stack_trace)
    This was caught by the test expectation on the following line:
      file:///Users/filiph/dev/hn_app/test/widget_test.dart line 30
    The test description was:
    refresh clears open state
    ════════════════════════════════════════════════════════════════════════════════════════════════════
    00:05 +0 -1: - refresh clears open state [E]
      Test failed. See exception logs above.
      The test description was: refresh clears open state
    00:05 +0 -1: Some tests failed.
## Logs
    $ flutter run --verbose
    [  +25 ms] [/Users/filiph/dev/flutter/] git rev-parse --abbrev-ref --symbolic @{u}
    [  +28 ms] Exit code 0 from: git rev-parse --abbrev-ref --symbolic @{u}
    [        ] origin/beta
    [        ] [/Users/filiph/dev/flutter/] git rev-parse --abbrev-ref HEAD
    [   +6 ms] Exit code 0 from: git rev-parse --abbrev-ref HEAD
    [        ] beta
    [        ] [/Users/filiph/dev/flutter/] git ls-remote --get-url origin
    [   +4 ms] Exit code 0 from: git ls-remote --get-url origin
    [        ] https://github.com/flutter/flutter.git
    [        ] [/Users/filiph/dev/flutter/] git log -n 1 --pretty=format:%H
    [   +6 ms] Exit code 0 from: git log -n 1 --pretty=format:%H
    [        ] f9bb4289e9fd861d70ae78bcc3a042ef1b35cc9d
    [        ] [/Users/filiph/dev/flutter/] git log -n 1 --pretty=format:%ar
    [   +5 ms] Exit code 0 from: git log -n 1 --pretty=format:%ar
    [        ] 3 weeks ago
    [        ] [/Users/filiph/dev/flutter/] git describe --match v*.*.* --first-parent --long --tags
    [   +9 ms] Exit code 0 from: git describe --match v*.*.* --first-parent --long --tags
    [        ] v0.4.4-0-gf9bb4289e
    [+1367 ms] /usr/bin/defaults read /Applications/Android Studio.app/Contents/Info CFBundleShortVersionString
    [  +61 ms] Exit code 0 from: /usr/bin/defaults read /Applications/Android Studio.app/Contents/Info CFBundleShortVersionString
    [        ] 3.1
    [ +108 ms] /Users/filiph/Library/Android/sdk/platform-tools/adb devices -l
    [  +13 ms] Exit code 0 from: /Users/filiph/Library/Android/sdk/platform-tools/adb devices -l
    [        ] List of devices attached
    [   +4 ms] idevice_id -h
    [ +261 ms] /usr/bin/xcrun simctl list --json devices
    [ +217 ms] Found plugin url_launcher at /Users/filiph/dev/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher-3.0.2/
    [ +570 ms] Launching lib/main.dart on iPhone X in debug mode...
    [   +1 ms] /usr/bin/defaults read /Users/filiph/dev/hn_app/ios/Runner/Info CFBundleIdentifier
    [  +57 ms] Exit code 0 from: /usr/bin/defaults read /Users/filiph/dev/hn_app/ios/Runner/Info CFBundleIdentifier
    [        ] $(PRODUCT_BUNDLE_IDENTIFIER)
    [        ] [ios/Runner.xcodeproj/] /usr/bin/xcodebuild -project /Users/filiph/dev/hn_app/ios/Runner.xcodeproj -target Runner -showBuildSettings
    [ +848 ms] Exit code 0 from: /usr/bin/xcodebuild -project /Users/filiph/dev/hn_app/ios/Runner.xcodeproj -target Runner -showBuildSettings
    [        ] Build settings for action build and target Runner:
                   ACTION = build
                   AD_HOC_CODE_SIGNING_ALLOWED = NO
                   ALTERNATE_GROUP = eng
                   ALTERNATE_MODE = u+w,go-w,a+rX
                   ALTERNATE_OWNER = filiph
                   ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO
                   ALWAYS_SEARCH_USER_PATHS = NO
                   ALWAYS_USE_SEPARATE_HEADERMAPS = NO
                   APPLE_INTERNAL_DEVELOPER_DIR = /AppleInternal/Developer
                   APPLE_INTERNAL_DIR = /AppleInternal
                   APPLE_INTERNAL_DOCUMENTATION_DIR = /AppleInternal/Documentation