          return bret;
        }
        //这次我们要检测高电平到低电平经过了多少个计数的count
        //以此来决定这一bit是0还是1
        count=loopCheckUntilStateChange(HIGH);
        //如果小于0，出错了
        if(countTHRESHOLD)
        {
          //如果超过了阈值。说明这一位是1。否则什么都不做。默认就是0了
          data[ibit/8]|=1;
        }
      }
      //检查校验码。查看整个数据是否传输准确了
      if(data[4]!=(data[3]+data[2]+data[1]+data[0])&0xff)
      {
        return bret;
      }
      /*
      由于dht11设备默认小数位为0，没有小数位.所以这里小数位就不要了。只有整数位的温度和湿度。
      否则就是(%d.%d data[0].data[1])湿度 (%d.%d data[2].data[3])温度
      */
      *ptemp=data[2]*1.0;
      *phumi=data[0]*1.0;
      return true;
    }
THRESHOLD和 MAX_COUNT的确定要根据实际的代码来修改。
比如THRESHOLD，如果loopCheckUntilStateChange 没有delayMicroseconds(1)。
count=loopCheckUntilStateChange(HIGH);打印40次
得到的count结果如下。
可以看到count基本分为两类。一类是120-130左右，一类是370-380左右。
因此代表0的26-28us的高电平时间对应的count就是120-130
，代表1的70us的高电平count就是370-380。所以阈值可以设置为200。超过200就是1。小于200就是0。
如果加上了delayMicroseconds(1)。那么40次count的结果如下，前面指令都是跑CPU，因此count比较大，这里延时了1us，count就变小了。
明显看到一类是 10 左右，代表传输0。一类是30左右,代表传输1。
因此阈值设置为20。大于20是1，小于20是0。
这一部分代码的数据读取准确度不是很高，可能还需要稍作调整使得读取准确率更高，我是按照最好理解的方式写的。
**2\. 接入中移动的物联网开放平台**
/
是中移动推出的物联网平台，开放一些免费的接口可以开发应用，具体可以去官网查看更多资料，篇幅有限就不多介绍了，里面有详细文档文档。下面简单介绍一下使用步骤。
主要步骤参考
1\. 注册账号并登陆。
2\. 页面中进入开发者中心，并创建一个产品。
创建产品。
填写简单资料。
其他的默认，并且使用http传输协议数据。
**3\. 添加一个设备**
**4\. 为设备添加数据流**
点开设备。
操作栏中点击添加数据流。
注意数据流的id用英文比较好。后续我们post数据需要用这个英文的id，中文容易出各种编码问题。
我们添加两个。一个是humi 湿度。一个是temp温度。
**5\. 添加一个应用**
添加两个仪表盘。设备选择raspberry，数据流一个选择humi,一个选择temp。
保存应用。
web端的设置基本上就完毕了。
参看的协议文档。
为了上传温度和湿度，我们需要几个关键的数据。
1\. 设备id。这个从设备详情页可以拿到。
2\. appkey 。这个可以从appkey页面使用默认的
3\. 数据的id。也就是之前添加数据流的时候使用的humi和temp。
我们需要post的数据类似于
    POST /devices/YOURDEVICEID/datapoints?type=3 HTTP/1.1
    Host:api.heclouds.com
    api-key:YOURAPIKEY
    content-type:application/json
    {
      “temp”:25,“humi”:60
    }
使用libcurl关键部分代码如下(记得替换YOURDEVICEID 以及YOURAPPKEY )。
代码:
    #define POST_URL "http://api.heclouds.com/devices/YOURDEVICEID/datapoints?type=3"
    void postData(float temp,float humi)
    {
      CURL *curl;
      char jsonData[512];
      struct curl_slist* header=NULL;
      printf("humi=%.2f temp=%.2fn",humi,temp);
      curl = curl_easy_init();  
      curl_easy_setopt(curl, CURLOPT_URL, POST_URL);  
      header=curl_slist_append(NULL,"api-key:YOURAPPKEY");
      curl_slist_append(header,"content-type:application/json");
      sprintf(jsonData,"{"temp":"%.2f","humi":"%.2f"}",temp,humi);
      curl_easy_setopt(curl, CURLOPT_POSTFIELDS, jsonData); 
      curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, showResponse); 
      curl_easy_setopt(curl, CURLOPT_HTTPHEADER, header);  
      curl_easy_setopt(curl, CURLOPT_COOKIEFILE, "/tmp/iotpost.cookie");  
      curl_easy_perform(curl); 
      curl_slist_free_all(header);
      curl_easy_cleanup(curl);
    };
    //如果将上传的结果打印出来
    size_t showResponse(void *buffer, size_t size, size_t nmemb, void *userp)
    {
      char* response=NULL;
      if(!buffer||!size||!nmemb)
      {
        printf("no responsen");
        return;
      }
      response=(char*)malloc(size*nmemb+1);
      memcpy(response,buffer,size*nmemb);
      response[size*nmemb]=0;
      printf("response: %snn",response);
      free((void*)response);
    };
如果成功会输出：
    {
    "errno": 0,
    "error":“succ”,
    }
使用libcurl发送post请求。
首先需要安装libcurl
    sudo apt-get install libcurl4-gnutls-dev
编译的时候也要加上-lcurl
    gcc -o dht11 dht11.c -lwiringPi -lcurl
具体的代码参看dht11.c
如果成功提交post数据。可以在应用的页面看到你家庭的温度和湿度。将发布链接转给别人，人家就能看到你家庭的温度湿度了。
**附件**
infrared.c：（提取码：906c）
dht11.c：（提取码：63ce）
**传送门**
* * *
[](http://bobao.360.cn/learning/detail/3051.html)
[**【技术分享】初玩树莓派B（一） 基本介绍
&安装操作系统**](http://bobao.360.cn/learning/detail/3085.html)
[**【技术分享】初玩树莓派B（二） 实用配置(vnc和串口)
&GPIO操作点亮LED灯**](http://bobao.360.cn/learning/detail/3087.html)
[**【技术分享】初玩树莓派B（三） 控制蜂鸣器演奏乐曲**](http://bobao.360.cn/learning/detail/3093.html)