DecryptHTTPStraffic选项决定Fiddler是否解析使用CONNECT通道发送的HTTPS请求
和响应。点击复选框附近的“Learmmore..”链接，会弹出一个帮助页面，解释数据流解密时
是如何工作的。当你第一次选中解密选项，Fiddler会生成一个新的自签名的证书，询问你是
否想对Windows进行配置以信任这个根证书。
当选中解密按钮，会显示一个下拉框，可以选择默认解析哪些数据流。包含的选项如下：
·All processes：对所有数据流都做解析。
·Browsers only：只有当进程名是Web浏览器时，才做解析。
·Non-Browsers：只有当进程名不是Web浏览器时，才做解析。
99
---
## Page 67
4.1Fiddler选项
·Remoteclients：只有当进程名未知时（该请求来自远程计算机或设备），才做解析。
DecryptionProcessFilter对于避免解析不想要的数据流是非常有用的—比如你可能不
关心类似Dropbox这样的文件同步程序所发出的后台请求，那么可以使用该选项轻松跳过对
这种数据流的解析。
Ignore servercertificate errors复选框控制服务器提供了无效的安全证书时，Fiddler是否应
该弹出警告。如果选中该选项，Fiddler在连接HTTPS服务器时，会忽略遇到的所有证书错误。
如果没有选中该选项，Fiddler在连接HTTPS网站时，如果遇到证书错误，会弹出告警。这种
错误对于客户端应用是“透明”的，因为Fiddler总是能生成有效的安全证书。一般而言，不
应该选中该选项，除非你确定自己是在可信的网络环境中，该网络中确实存在无效的服务器
证书（比如在自签名的开发服务器上）。
在Skipdecryptionforthefollowinghosts选项框中可以指定对选中的服务器的数据流不做
解析。该功能可以避开不想解析的数据流。例如，你可能不关心连接ExchangeRPC-over-HTTPS
终端的HTTPs请求，该过滤器可以屏蔽这种数据流。如果是个列表，使用分号进行分隔，
作为通配符。举个例子，要屏蔽网站example.com及其子目录下的所有数据流以及fiddler2.com
的数据流，可以把过滤器指定为fiddler2.com;*example.com。
Export Root Certificate toDesktop按钮会把Fiddler在Windows证书库中的根证书拷贝到
桌面的FiddlerRoot.cer文件中，该根证书文件也可以拷贝到另一个设备或放置到Firefox或
Opera的受信任证书库中。
RemoveInterceptionCertificates按钮只有在DecryptHTTPS traffic复选框没有被选中时才
有效。点击该按钮，会从Windows证书库中删除Fiddler根证书以及与其关联的服务器证书。
证书被删除之后，如果你再次执行HTTPS解析，Fiddler会生成新的根证书并弹出对话框询问
是否要信任新的根证书。
4.1.3扩展选项
扩展选项卡中提供了控制FiddlerScript的选项，同时也列出了可加载的所有扩展的列表。
新加i载FiddlerScriptCustomRules.js文件。
Editor选项框可控制使用哪个文本编辑器来编辑FiddlerScript。点击“..."按钮会弹出可
选择的编辑器列表。
67
---
## Page 68
第4章配置Fiddler和客户端
References选项框可指定FiddlerScript所依赖的.NET程序库。在介绍FiddlerScript的一节
中可以了解到更多这方面的内容。
Extensions选项框显示了除Inspectors和Transcoders以外的所有扩展。你可以复制该文本
框中的信息用于生成bug报表或支持查询。
Findmoreextensions链接会打开Fiddler组件的目录页面。
4.1.4连接选项
连接选项卡中包含了用于控制Fiddler代理的配置选项。
Fiddlerlistensonport选项框设置Fiddler监听Web数据流的端口号。推荐使用默认端口
号（8888），除非该端口已经被占用。
CopyBrowserProxyConfigurationURL的功能是拷贝代理的配置脚本（Configuration
Script）的URL，配置客户端的代理时，可以直接把这个URL粘贴上。该功能很少使用。
CaptureFTPrequests复选框控制Fiddler是否注册成可处理FTP请求的系统代理。默认情
况下，该功能没有打开。
Allowremotecomputerstoconnect控制Fiddler是否处理来自其他计算机或设备的HTTP
请求。选中该选项，Windows8Metro风格的应用才能连接到Fiddler。修改该选项后，需要重
启Fiddler才能生效。在重启过程中，防火墙软件可能会弹出对话框，让你确任是否允许Fiddler
接收进入的入请求。
A
在不可信的网络环境中，不要启用该选项，如果有黑客知道你运行
着Fiddler，就可以通过你的Fiddler发送他的数据流，而该数据流在其他
机器看来像是来自你的计算机。
Reuseclientconnections选项可以控制Fiddler是否重用跟客户端之间连接（客户端保持
活动状态）。同样，Reuseconnectionstoservers选项框可以控制Fiddler是否会重用与服务器
之间的连接（服务端保持活动状态）。出于性能考虑，应该使用连接重用选项：在解决故障
Chaintoupstreamgatewayproxy选项控制当启动Fiddler作为上游网关代理时，是否会在
IE内使用代理配置。如果不选中该选项框，就相当于告诉Fiddler“忽略系统默认的代理设置，
68
---
## Page 69
4.1Fiddler选项
把请求都直接发送给Web服务器。”
点击ShowGatewayInfo可显示所有已知上游网关代理的信息。
Act as systemproxyon startup选项控制Fiddler在启动时是否会把自己注册成系统代理。
IE和很多其他应用默认会使用系统代理，当该系统代理变化时，会弹出提示信息。
Monitorallconnections复选框控制Fiddler是否注册为处理所有WinINET连接的代理。如
果你是通过VPN、RAS或拨号连接，应该选中该选项，因为WinINET会对所有激活的这类
连接使用代理。
UsePACScript复选框控制Fiddler注册为什么模式的系统代理。一般而言，当选中时，Fiddler
会告诉浏览器使用代理配置脚本（可以通过点击CopyBrowserProxyConfigurationURL链接得
到该脚本），而不是使用默认配置127.0.0.1：8888。该功能很少使用，只有当尝试捕获IE8以及
更低版本的回调数据流（比如http://localhost或htp://127.0.0.1）时才用的到：当配置了默认的
固定代理时，这种数据流不会发送到Fiddler，但是当使用PAC脚本时，会发送这些数据流。
WinINETConnections列表显示该机器的网络配置。如果你通过拨号网络或VPN连接到
互联网，希望Fiddler自动连接到某个非局域网的连接时，可以使用该功能。
对于IEshouldbypassFiddler列表，当Fiddler注册为系统代理时，这个列表可控制最终
哪个请求通过Fiddler发送。注意，该列表通常只有IE这样的WinINET客户端才能够识别。
默认的标记告诉IE9及更高版本应该发送回调请求给Fiddler：如果没有该标记（对
于IE8以及更低版本的浏览器），对于回调数据流，WinINET会自动过滤。在选项框中可以输
入域名列表，通过分号分隔，支持*这个通配符。举个例子，如果你希望example.com网站的
所有的数据流（包括回调数据流，除了安全的数据流外）以及fiddler2.com的所有数据流都通
过Fiddler，可以输入如下字符串：
;https://example.com; *.fiddler2.com
4.1.5外观选项
外观选项卡包含控制Fiddler显示的选项。
FontSize选项框用于设置Fiddler中的文本大小。要应用变化后的字体大小，需要重新启
动Fiddler.
SetReadonlyColor按钮支持为只读的文本框选择背景颜色。设计该选项的原因是
Windows默认的颜色是灰色，但是灰色和黑色间的区分度较小，不容易读取。要应用这些选
69
---
## Page 70
第4章配置Fiddler和客户端
项变化，也需要重新启动Fiddler。
HideFiddlerwhenminimized复选框支持最小化Fiddler时，在系统托盘中显示Fiddler图
标，而不是在任务栏中显示。
当选中Alwaysshowtrayicon复选框时，Fiddler托盘中的图标会一直显示在系统托盘中。
Use SmartScroll in SessionList选项用于当WebSession列表中增加新的 Session时，可以
控制Fiddler的行为。如果没有选中该选项，Fiddler会自动滚动到新增Session处（如果选中
View>AutoScroll SessionList)。
如果没有选中UseSmartScroll inSessionList，Fiddler只会在WebSession列表已经滚动
到最下方时，才会显示最新的WebSession。选中该选项可以避免在查看和捕获数据流时，因
滚动条滚到其他地方而找不到最新的Session列表。
如果选中ResetSessionIDcounteronCTRL+X选项，当按下快捷键CTRL+X或点击菜单
命令Remove>All Sessions清空WebSession列表时，SessionID号会重新从1开始。如果没
有选中该选项，SessionID初始值为1，然后会不断递增，直到重新启动Fiddler。
4.2HEADER编码设置
通过网络传输文本时，客户端和服务器必须来用相同的数据转换协议，按照预定的规则
对文本字符串和网络上传输的数据进行转换。HTTP编码规范使用headerContent-Type中的
charset属性来标识请求和响应所使用的字符集。
遗憾的是，HTTP本身在HTTP请求头中没有提供统一的机制来表示非ASCII码。相反，
HTTP规范中指出只能使用ASCII码。有些客户端和服务器遵循该协议（对非ASCI码进行
编码），但也有些客户端和服务器会发送和接收非ASCI码。在某些情况下，会存在客户端应
用、中间件（如Fiddler这样的代理）和服务器（如Apache或IIS）之间会存在字节和字符之
间的转换不一致的问题。
为了支持绝大多数的客户端和服务器，Fiddler统一把HTTP头看作UTF-8编码。某些语
言风格的locale（尤其是在亚洲），使用的是不同的编码（如EUC-CN）。可以手工配置Fiddler，
在HKCUSoftwareMicrosoffFiddler2中创建新的HeaderEncoding注册字符串，可以为请求头
设置不同的默认编码。字符串名称必须是Encoding，这样才可以被.NET框架识别：在
http://fiddler2.com/r/？EncodingNames中可以找到有效的字符申值。
70
---
## Page 71
4.3PREFERENCES（偏好）
对HeaderEncoding的任何修改都需要重新启动Fiddler才能够生效。
4.3PREFERENCES（偏好）
在Preferences中，Fiddler支持很多名称/值对设置，可以作用于Fiddler中的很多扩展以
及其他组件。很多Preferences可以通过Fiddler用户界面中的菜单或复选框进行调整，但有些
Preferences不支持这种修改方式，只能通过Preferences系统来查看或修改。
在WebSessions列表下方的QuickExec选项框中，可以使用PREFS命令和Preferences进行
交互。输入prefs log会把所有Preferences 都记录到Fiddler的Log选项卡中。你可以输入prefs set
[prefname][prefvalue]来创建或更新Preference值。如果取值中包含空格，可以用双引号把它括起
来。输入prefsremove[prefname]会删除Preference。下次Fiddler查询该Preference的值时，会提
示该Preference已经不存在，并使用该Preference的默认值。输入prefsshow[partialname]会显示
名称中包含了所提供的字符串的Preferences列表（Preference的名称是大小写不敏感的）。
在QuickExec选项框中输入about:config，可以查看所有配置的Preferences：该操作会创
建或激活FiddlerUI界面中的about:config选项卡，并在其中按照字母顺序列出所有
Preferences，如图4-1所示。
eynees eotrf
Fe
lde
图4-1
选中某个Preference所在的行并按下Delete键，就可以删除该Preference。在单元格中按
下CTRL+C可以复制该单元格中的值，或选中某一行并按下CTRL+C，会同时复制名称及其
值，可以点击Value列来修改某个Preference的值并输入新值。也可以点击最后一行（在左边
有*号标识），为Preference增加新的行，并输入新的名称和值。
4
---
## Page 72
第4章配置Fiddler和客户端
附录D中给出了Fiddler支持的所有Preferences以及Fiddler扩展。
4.4配置客户端
作为代理服务器，Fiddler只能看到发送给它的数据流。默认情况下，大多数应用程序的
网络流会自动发送给Fiddler，因为应用在运行时，Fiddler会注册成默认的Windows系统代理。
在某些情况下，如果Fiddler没有注册成默认的系统代理，可以对客户端应用或Fiddler进行
配置来捕获这些数据流。作为代理服务器，Fiddler还可以接收远程计算机和支持代理服务器
的网络设备的数据流（如支持WiFi的平板电脑或手机）。
本节将介绍配置Fiddler来捕获数据流的各种方式。
4.4.1捕获浏览器的数据流
在Windows上运行的IE、Chrome和Safari浏览器会自动把数据流发送给默认的系统代
理，这意味着Fiddler可以自动捕获这些浏览器的数据流。
对Firefox和Opera浏览器进行简单配置，就可以让它们把数据流发送给Fiddler。
Firefox
当前版本的Fiddler可以安装Firefox的一个插件一FiddlerHook，使得Fiddler也可以捕
获Firefox的数据流。需要使用FirefoxsTools>Add-ons>Extensions来安装这个插件。当安装
完成后，FiddlerHook会在Firefox浏览器的Tools菜单中增加一个MonitorwithFiddler命令。
该菜单项命令支持把Fiddler设置成Firefox默认的代理，可以直接启动Fiddler。
如果选中Fiddler菜单栏Monitor下的ShowStatusBaritem命令，如图4-2所示。而且选
中了Firefox浏览器的View>Toolbar>Add-onBar选项，Firefox状态栏的最右下角会显示
FiddlerHook的当前状态。
点击这个状态栏面板，会弹出一个菜单，从中可以修改FiddlerHook的设置。此外，还提
供了一键清除Firefox的缓存和Cookie的菜单项，如图4-3所示。
Ba Fadler adonutialy
eFode
Dogr we lade
Degitue Fdle
Cracfirefeox Cache
Cler Frefes Conget
图 4-2
72
---
## Page 73
4.4配置客户端
当启用FiddlerHook时，你还可以在Firefox的工具栏面板中增加一个按钮，可以用其启
动Fiddler。右击Firefox工具栏，选中Customize，如图4-4所示。把Fiddler按钮拖到你希望
的位置即可。
如果没有启用或无法使用FiddlerHook插件，可以重新配置Firefox浏览器以使用Fiddler。
在Firefox4以及更新的版本中，点击Tools>Options会打开选项窗口。点击最上方的
Advanced图标，然后再点击Network选项卡。在Network选项卡中，点击Connections框中
的Settings按钮。选中列表中的Usesystemproxy settings选项，如图4-5所示。完成这些操作
后，Firefox会使用和Fiddler无关的、系统默认的代理。
wogenfyuoAaodenueuasne
Port
HTTP
127.0.0.1
8888
Uethsryforlpr
HTTPS
127.0.0.1
88
FTP
PLchFder
SOCKS
Ue proyfrlocal serves
图 44
图 4-5
Opera
点击左上方的Opera按钮，点击Settings，然后点击Preferences。点击选项卡Advanced，
然后点击左侧列表中的Network命令。点击ProxyServers按钮，把HTTP和HTTPS代理服务
器字段设置成127.0.0.1，把Port均设置成8888。
其他浏览器
对于运行在Windows上的其他小众浏览器，大多数会自动采用默认的代理设置。对于那
些没有自动采用默认代理设置的，一般而言，与Opera的设置步骤类似一使用浏览器提供
的UI界面，把HTTP和HTTPS代理设置成Fiddler的终端，即127.0.0.1:8888。
此外，你还可以配置很多浏览器，以使用代理配置脚本。在捕获数据流时，Fiddler会自
动生成这种配置脚本并进行更新。使用选项卡Tools>FiddlerOptions>Connections中的链接
CopyBrowserProxyConfigurationURL，把代理的配置脚本URL拷贝到剪贴板中，可以方便