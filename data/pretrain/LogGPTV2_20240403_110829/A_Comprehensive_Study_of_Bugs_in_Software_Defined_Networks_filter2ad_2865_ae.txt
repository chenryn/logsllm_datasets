Research, ser. SOSR ’15. New York, NY, USA: ACM, 2015, pp. 4:1–
4:12. [Online]. Available: http://doi.acm.org/10.1145/2774993.2774996
[14] A. Panda, W. Zheng, X. Hu, A. Krishnamurthy, and S. Shenker,
“SCL: Simplifying Distributed SDN Control Planes,” in Proceedings
of the 14th USENIX Conference on Networked Systems Design
and Implementation, ser. NSDI’17. Berkeley, CA, USA: USENIX
Association, 2017, pp. 329–345. [Online]. Available: http://dl.acm.org/
citation.cfm?id=3154630.3154657
[15] T. Xu and Y. Zhou, “Systems approaches to tackling conﬁguration
errors: A survey,” ACM Comput. Surv., vol. 47, no. 4, Jul. 2015.
[Online]. Available: https://doi.org/10.1145/2791577
[16] Z. Yin, X. Ma,
J. Zheng, Y. Zhou, L. N. Bairavasundaram,
and S. Pasupathy, “An empirical study on conﬁguration errors
in commercial and open source systems,” in Proceedings of the
Twenty-Third ACM Symposium on Operating Systems Principles,
ser. SOSP ’11. New York, NY, USA: Association for Computing
Machinery, 2011, p. 159–172. [Online]. Available: https://doi.org/10.
1145/2043556.2043572
[17] D. Kreutz, F. M. V. Ramos, P. E. Ver´ıssimo, C. E. Rothenberg,
S. Azodolmolky, and S. Uhlig, “Software-deﬁned networking: A com-
prehensive survey,” Proceedings of the IEEE, vol. 103, no. 1, pp. 14–76,
2015.
[18] H. S. Gunawi, M. Hao, T. Leesatapornwongsa, T. Patana-anake,
T. Do, J. Adityatama, K. J. Eliazar, A. Laksono, J. F. Lukman,
V. Martin, and A. D. Satria, “What bugs live in the cloud? a
study of 3000+ issues in cloud systems,” in Proceedings of the
ACM Symposium on Cloud Computing, ser. SOCC ’14. New
York, NY, USA: ACM, 2014, pp. 7:1–7:14. [Online]. Available:
http://doi.acm.org/10.1145/2670979.2670986
[19] H. S. Gunawi, M. Hao, R. O. Suminto, A. Laksono, A. D.
Satria, J. Adityatama, and K. J. Eliazar, “Why does the cloud
stop computing?: Lessons from hundreds of service outages,” in
Proceedings of the Seventh ACM Symposium on Cloud Computing,
ser. SoCC ’16. New York, NY, USA: ACM, 2016, pp. 1–16.
[Online]. Available: http://doi.acm.org/10.1145/2987550.2987583
[20] S. Li, K. Han, N. Ansari, Q. Bao, D. Hu, J. Liu, S. Yu, and Z. Zhu,
“Improving sdn scalability with protocol-oblivious source routing:
A system-level study,” IEEE Transactions on Network and Service
Management, vol. 15, no. 1, pp. 275–288, March 2018.
[21] Y. Zhou, M. Zhu, L. Xiao, L. Ruan, W. Duan, D. Li, R. Liu,
and M. Zhu, “A load balancing strategy of sdn controller based on
distributed decision,” in 2014 IEEE 13th International Conference on
Trust, Security and Privacy in Computing and Communications, Sep.
2014, pp. 851–856.
[22] N. Paladi
and C. Gehrmann,
“SDN access
masses,” CoRR, vol. abs/1811.08094, 2018.
http://arxiv.org/abs/1811.08094
control
the
[Online]. Available:
for
[23] N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson,
J. Rexford, S. Shenker, and J. Turner, “Openﬂow: Enabling
innovation in campus networks,” SIGCOMM Comput. Commun.
Rev., vol. 38, no. 2, pp. 69–74, Mar. 2008. [Online]. Available:
http://doi.acm.org/10.1145/1355734.1355746
an
leads
fabric,”
[24] P. Saint-Andre,
“Extensible Messaging and Presence Protocol
(XMPP): Core,” RFC 3920, Oct. 2004. [Online]. Available: https:
//rfc-editor.org/rfc/rfc3920.txt
trellis,
[25] “Comcast
switching
comcast-leads-trellis-an-open-source-data-center-switching-fabric/
2018/12/, 2018, accessed: 27-04-2020.
a
center
https://www.sdxcentral.com/articles/news/
[26] “Google
group,”
google-joins-cord-now-separate-open-source-group/2016/07/,
accessed: 27-04-2020.
to
now
source
https://www.sdxcentral.com/articles/news/
2016,
https://www.youtube.com/
[27] “Taking
production,”
separate
source
cord,
joins
open
open
seba
data
watch?v=IEGuXxwbbnQ&feature=youtu.be&ab channel=
OpenNetworkingFoundation, 2020, accessed: 5-12-2020.
[28] “M-cord,” https://opennetworking.org/m-cord/, 2020, accessed: 5-12-
2020.
[29] J. Bailey and S. Stuart, “Faucet: Deploying sdn in the enterprise,” ACM
Queue, vol. 14 Issue 5, pp. 54–68, 2016.
[30] “Details retrieved from,” https://github.com/faucetsdn/faucet, 2019, ac-
cessed: 6-5-2019.
[31] “Introduction to faucet,” https://docs.faucet.nz/en/latest/intro.html#
what-is-faucet, 2019, accessed: 10-6-2019.
[32] “Onos project details retrieved from,” https://onosproject.org/, 2019,
[35] Z. Yin, M. Caesar, and Y. Zhou, “Towards Understanding Bugs
in Open Source Router Software,” SIGCOMM Comput. Commun.
Rev., vol. 40, no. 3, pp. 34–40, Jun. 2010. [Online]. Available:
http://doi.acm.org/10.1145/1823844.1823849
[36] L. Peterson,
“Mysterious-Decision Release Notes,” https://wiki.
[37] T. Mikolov,
opencord.org/display/CORD/Mysterious-Decision+Release+Notes,
2017, accessed: 6-2019.
I. Sutskever, K. Chen, G. Corrado, and J. Dean,
“Distributed representations of words
and their
compositionality,” in Proceedings of the 26th International Conference
on Neural Information Processing Systems - Volume 2, ser. NIPS’13.
USA: Curran Associates
[Online].
Available: http://dl.acm.org/citation.cfm?id=2999792.2999959
Inc., 2013, pp. 3111–3119.
and phrases
[38] D. M. Blei, A. Y. Ng, and M. I. Jordan, “Latent dirichlet allocation,”
J. Mach. Learn. Res., vol. 3, pp. 993–1022, Mar. 2003. [Online].
Available: http://dl.acm.org/citation.cfm?id=944919.944937
[39] Y. W. Teh, M. I. Jordan, M. J. Beal, and D. M. Blei, “Hierarchical
dirichlet processes,” 2006.
[40] D. D. Lee and H. S. Seung, “Algorithms for non-negative matrix
factorization,” in Advances in Neural Information Processing Systems
13, T. K. Leen, T. G. Dietterich, and V. Tresp, Eds. MIT Press,
2001, pp. 556–562. [Online]. Available: http://papers.nips.cc/paper/
1861-algorithms-for-non-negative-matrix-factorization.pdf
[41] J. E. Ramos, “Using tf-idf to determine word relevance in document
queries,” 2003.
Serifovic,
[42] M.
Translation with Deep
Convolutional Neural Networks ,” https://towardsdatascience.com/
this-ai-is-hungry-b2a8655528be, 2018.
Image-to-Recipe
“
[33] “Opencord details retrieved from,” https://opencord.org/, 2019, ac-
[34] “Xos details retrieved from,” https://opennetworking.org/xos/, 2021,
accessed: 10-11-2018.
cessed: 10-11-2018.
accessed: 31-03-2021.
Authorized licensed use limited to: Tsinghua University. Downloaded on October 11,2021 at 09:22:53 UTC from IEEE Xplore.  Restrictions apply. 
112
Ju,
[58] H. Zeng, S. Zhang, F. Ye, V.
Jeyakumar, M.
J. Liu,
to
N. McKeown, and A. Vahdat, “Libra: Divide and conquer
in huge networks,” in 11th USENIX
verify forwarding tables
Symposium on Networked Systems Design and Implementation
(NSDI 14).
Seattle, WA: USENIX Association, Apr. 2014, pp.
87–99. [Online]. Available: https://www.usenix.org/conference/nsdi14/
technical-sessions/presentation/zeng
[59] P. Kazemian, M. Chang, H. Zeng, G. Varghese, N. McKeown,
and S. Whyte, “Real
time network policy checking using header
space analysis,” in Proceedings of the 10th USENIX Conference
on Networked Systems Design and Implementation, ser. nsdi’13.
Berkeley, CA, USA: USENIX Association, 2013, pp. 99–112. [Online].
Available: http://dl.acm.org/citation.cfm?id=2482626.2482638
[60] “Cord-2470 details retrieved from,” https://jira.opencord.org/browse/
CORD-2470, 2019, accessed: 6-5-2019.
[61] R. Jung, Germany, J.-H. Jourdan, R. Krebbers, and D. Dreyer, “Safe
systems programming in rust: The promise and the challenge,” 2020.
[62] H. Xu, Z. Chen, M. Sun, and Y. Zhou, “Memory-safety challenge
considered solved? an empirical study with all rust cves,” 2020.
[63] H. S. Gunawi, R. O. Suminto, R. Sears, C. Golliher, S. Sundararaman,
X. Lin, T. Emami, W. Sheng, N. Bidokhti, C. McCaffrey,
G. Grider, P. M. Fields, K. Harms, R. B. Ross, A. Jacobson,
R. Ricci, K. Webb, P. Alvaro, H. B. Runesha, M. Hao, and
H. Li, “Fail-slow at scale: Evidence of hardware performance
faults in large production systems,” in 16th USENIX Conference
on File and Storage Technologies (FAST 18). Oakland, CA:
USENIX Association, Feb. 2018, pp. 1–14.
[Online]. Available:
https://www.usenix.org/conference/fast18/presentation/gunawi
[64] P. Fonseca, C. Li, and R. Rodrigues, “Finding complex concurrency
bugs in large multi-threaded applications,” in Proceedings of the Sixth
Conference on Computer Systems, ser. EuroSys ’11. New York,
NY, USA: Association for Computing Machinery, 2011, p. 215–228.
[Online]. Available: https://doi.org/10.1145/1966445.1966465
[65] “Details retrieved from,” https://jira.opencord.org/browse/CORD-1734,
2019, accessed: 12-12-2020.
[66] X. Yu, P. Joshi, J. Xu, G. Jin, H. Zhang, and G. Jiang, “Cloudseer:
Workﬂow Monitoring of Cloud Infrastructures via Interleaved Logs,”
in ACM SIGPLAN Notices, vol. 51, no. 4. ACM, 2016, pp. 489–502.
[67] M. Du, F. Li, G. Zheng, and V. Srikumar, “Deeplog: Anomaly
Detection and Diagnosis from System Logs through Deep Learning,”
in Proceedings of the 2017 ACM SIGSAC Conference on Computer
and Communications Security. ACM, 2017, pp. 1285–1298.
[68] Z. Li, Z. Ge, A. Mahimkar, J. Wang, B. Y. Zhao, H. Zheng, J. Emmons,
and L. Ogden, “Predictive Analysis in Network Function Virtualiza-
tion,” in Proceedings of the Internet Measurement Conference 2018.
ACM, 2018, pp. 161–167.
[69] C. Streiffer, R. Raghavendra, T. Benson, and M. Srivatsa, “Learn-
ing to Simplify Distributed Systems Management,” in 2018 IEEE
International Conference on Big Data (Big Data).
IEEE, 2018, pp.
1837–1845.
[70] M. Y. Chen, E. Kiciman, E. Fratkin, A. Fox, and E. Brewer, “Pin-
point: Problem Determination in Large, Dynamic Internet Services,”
in Proceedings International Conference on Dependable Systems and
Networks.
IEEE, 2002, pp. 595–604.
[71] “Onos-4859 details retrieved from,” https://jira.onosproject.org/browse/
ONOS-4859, 2019, accessed: 6-5-2019.
[72] “Onos-2.3.0
details
retrieved
//github.com/opennetworkinglab/onos/tree/
ac329a787311c731aac4b7408e5749590bd816fe,
26-01-2020.
from,”
https:
2019,
accessed:
[43] T. U.
of British Columbia,
“ A Comparison
for
and NMF
Themes
https://wiki.ubc.ca/Course:CPSC522/A Comparison of LDA and
NMF for Topic Modeling on Literary Themes, 2018.
Topic Modeling
on Literary
of LDA
,”
[44] R. Chillarege, I. S. Bhandari, J. K. Chaar, M. J. Halliday, D. S.
Moebus, B. K. Ray, and M. . Wong, “Orthogonal defect classiﬁcation-a
concept for in-process measurements,” IEEE Transactions on Software
Engineering, vol. 18, no. 11, pp. 943–956, 1992.
[45] L. Lamport, “The part-time parliament,” ACM Trans. Comput.
Syst., vol. 16, no. 2, pp. 133–169, May 1998. [Online]. Available:
http://doi.acm.org/10.1145/279227.279229
[46] D. Ongaro and J. Ousterhout, “In search of an understandable
consensus algorithm,” in Proceedings of the 2014 USENIX Conference
on USENIX Annual Technical Conference, ser. USENIX ATC’14.
Berkeley, CA, USA: USENIX Association, 2014, pp. 305–320. [On-
line]. Available: http://dl.acm.org/citation.cfm?id=2643634.2643666
[47] S. M. Srinivasan, S. Kandula, C. R. Andrews, and Y. Zhou, “Flash-
back: A lightweight extension for rollback and deterministic replay
for software debugging,” in Proceedings of the Annual Conference
on USENIX Annual Technical Conference, ser. ATEC ’04. USA:
USENIX Association, 2004, p. 3.
[48] B. Chandrasekaran, B. Tschaen, and T. Benson, “Isolating and
tolerating sdn application failures with legosdn,” in Proceedings
of
ser. SOSR ’16. New
York, NY, USA: ACM, 2016, pp. 7:1–7:12. [Online]. Available:
http://doi.acm.org/10.1145/2890955.2890965
the Symposium on SDN Research,
[49] F. Qin, J. Tucek, J. Sundaresan, and Y. Zhou, “Rx: Treating bugs
as allergies—a safe method to survive software failures,” SIGOPS
Oper. Syst. Rev., vol. 39, no. 5, pp. 235–248, Oct. 2005. [Online].
Available: http://doi.acm.org/10.1145/1095809.1095833
[50] M. Rinard, C. Cadar, D. Dumitran, D. M. Roy, T. Leu, and
W. S. Beebee, Jr., “Enhancing server availability and security
through failure-oblivious computing,” in Proceedings of
the 6th
Conference on Symposium on Opearting Systems Design &
Implementation - Volume 6, ser. OSDI’04. Berkeley, CA, USA:
USENIX Association, 2004, pp. 21–21. [Online]. Available: http:
//dl.acm.org/citation.cfm?id=1251254.1251275
[51] Y. Wu, A. Chen, A. Haeberlen, W. Zhou, and B. T. Loo, “Automated
bug removal
for software-deﬁned networks,” in Proceedings of
the 14th USENIX Conference on Networked Systems Design and
Implementation,
Berkeley, CA, USA: USENIX
Association, 2017, pp. 719–733. [Online]. Available: http://dl.acm.org/
citation.cfm?id=3154630.3154688
ser. NSDI’17.
[52] D. Kim, J. Nam, J. Song, and S. Kim, “Automatic patch generation
learned from human-written patches,” in Proceedings of the 2013
International Conference on Software Engineering, ser. ICSE ’13.
Piscataway, NJ, USA: IEEE Press, 2013, pp. 802–811. [Online].
Available: http://dl.acm.org/citation.cfm?id=2486788.2486893
[53] H. D. T. Nguyen, D. Qi, A. Roychoudhury, and S. Chandra, “Semﬁx:
Program repair via semantic analysis,” in Proceedings of the 2013
International Conference on Software Engineering, ser. ICSE ’13.
Piscataway, NJ, USA: IEEE Press, 2013, pp. 772–781. [Online].
Available: http://dl.acm.org/citation.cfm?id=2486788.2486890
[54] J. H. Perkins, S. Kim, S. Larsen, S. Amarasinghe, J. Bachrach,
M. Carbin, C. Pacheco, F. Sherwood, S. Sidiroglou, G. Sullivan, W.-F.
Wong, Y. Zibin, M. D. Ernst, and M. Rinard, “Automatically patching
errors in deployed software,” in Proceedings of the ACM SIGOPS
22Nd Symposium on Operating Systems Principles, ser. SOSP ’09.
New York, NY, USA: ACM, 2009, pp. 87–102. [Online]. Available:
http://doi.acm.org/10.1145/1629575.1629585
[55] C. Le Goues, M. Dewey-Vogt, S. Forrest, and W. Weimer, “A
systematic study of automated program repair: Fixing 55 out of
105 bugs for $8 each,” in Proceedings of the 34th International
Conference on Software Engineering, ser. ICSE ’12.
Piscataway,
[Online]. Available:
NJ, USA:
http://dl.acm.org/citation.cfm?id=2337223.2337225
IEEE Press, 2012, pp. 3–13.
[56] “Faucet
issue #1623 details
retrieved from,” https://github.com/
faucetsdn/faucet/pull/1623, 2019, accessed: 6-5-2019.
[57] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey,
“Veriﬂow: Verifying network-wide invariants
time,” in
Proceedings of
the 10th USENIX Conference on Networked
Systems Design and Implementation, ser. nsdi’13. Berkeley, CA,
USA: USENIX Association, 2013, pp. 15–28. [Online]. Available:
http://dl.acm.org/citation.cfm?id=2482626.2482630
in real
[73] N. Feamster, J. Rexford, and E. Zegura, “The Road to SDN: An
Intellectual History of Programmable Networks,” ACM SIGCOMM
Computer Communication Review, vol. 44, no. 2, pp. 87–98, 2014.
[74] A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. Myers, J. Rexford,
G. Xie, H. Yan, J. Zhan, and H. Zhang, “A Clean Slate 4D Approach