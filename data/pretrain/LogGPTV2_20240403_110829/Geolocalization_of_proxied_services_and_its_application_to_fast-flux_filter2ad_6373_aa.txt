title:Geolocalization of proxied services and its application to fast-flux
hidden servers
author:Claude Castelluccia and
Mohamed Ali Kâafar and
Pere Manils and
Daniele Perito
Geolocalization of Proxied Services and its Application to
Fast-Flux Hidden Servers
Claude Castelluccia, Mohamed Ali Kaafar, Pere Manils, Daniele Perito
INRIA Rhone-Alpes
Grenoble – France
{ccastel, kaafar, manils, perito}@inrialpes.fr
ABSTRACT
Fast-ﬂux is a redirection technique used by cyber-criminals to hide
the actual location of malicious servers.
Its purpose is to evade
identiﬁcation and prevent or, at least delay, the shutdown of these
illegal servers by law enforcement.
This paper proposes a framework to geolocalize fast-ﬂux servers,
that is, to determine the physical location of the fast-ﬂux networks
roots (mothership servers) based on network measurements. We
performed an extensive set of measurements on PlanetLab in order
to validate and evaluate the performance of our method in a con-
trolled environment. These experimentations showed that, with our
framework, fast-ﬂux servers can be localized with similar mean dis-
tance errors than non-hidden servers, i.e. approximately 100 km.
In the light of these very promising results, we also applied our
scheme to several active fast-ﬂux servers and estimated their geo-
graphic locations, providing then statistics on the locations of “in
the wild” fast-ﬂux services.
Categories and Subject Descriptors
C.2.4 [Distributed Systems]: Client/Server
General Terms
Measurement, Experimentation, Security
Keywords
Geolocalization, Fast-Flux, Hidden Servers
1.
INTRODUCTION
Cyber-crime is consolidating as a major threat for end users
and infrastructures on the Internet. Criminals are employing ever
changing and more sophisticated techniques to improve the effec-
tiveness, reliability and stealthiness of their illegal activities. En-
tire underground infrastructures of compromised computers, called
botnets [11], have been created to perform a wide range of illegal
activities like sending unsolicited e-mail messages, identity theft,
disrupting the availability of online services, etc.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
An emerging new use of botnets by cyber-criminals is a tech-
nique called fast-ﬂux [8], which allows them to reliably host illegal
content within a botnet. The goal of this technique is to associate to
a fully qualiﬁed domain name (such as www.malicious.com) mul-
tiple IP addresses that change rapidly and constantly. These IP ad-
dresses are chosen in a round-robin fashion from a pool of thou-
sands addresses of the infected machines in the botnet [8]. DNS
responses are set with very short Time-to-Live (TTL) to constantly
change the resource records that are returned when resolving a fast-
ﬂux domain. These IP addresses belong to infected computers that
do not host the content but are used as proxies to redirect requests
to the actual hidden server.
The study of these malicious networks by security researchers is
made difﬁcult by the use of encrypted and obfuscated communi-
cations between the participating nodes inside botnets. This calls
for research in non-invasive network measurement techniques on
botnets in order to understand the way they are used, possibly un-
covering the motivations behind them.
Recent promising proposals [4, 9, 2] within the network commu-
nity, provide ways to reveal either geographic coordinates or net-
work virtual coordinates of Internet hosts. The general idea used
to geolocalize Internet hosts is to consider a set of landmarks mea-
suring network distances towards targets and then consider a model
that represents a relationship between the geographic distance and
the network measurements. Such model, once calibrated, is used by
each landmark to derive a geographic distance towards the target,
that is then located using multilateration.
In this paper, we extend the Constraint-Based Geolocation
(CBG) technique [4] to proxied communications, revealing in par-
ticular the geographic position of the roots of fast-ﬂux networks.
We perform an experimental evaluation of the accuracy of local-
ization in a controlled environment, using the PlanetLab infrastruc-
ture, where the exact location of targets is known. Our experimen-
tations show promising results, with geolocalization accuracy sim-
ilar or even better than non-proxied communication. In particular,
we are able to localize hidden servers with mean error distance be-
low 100 km. A vast majority of the obtained conﬁdence zones, a
zone where the target lies with a very high probability, allows for a
resolution at the regional or even city level, similarly to the original
non-proxied system.
In the light of these encouraging results, we tested our geolocal-
ization approach in the wild and located several fast-ﬂux servers.
We then validated these results by inﬁltrating the Waledac fast-ﬂux
network to retrieve the IP addresses of some malicious servers.
Finally, since we believe that our study is a ﬁrst step towards ac-
tive countermeasures against malicious hidden servers, we provide
both our controlled measurements and experimentations on Planet-
Lab along with traces that we collected from real life experiments
184Figure 1: Multilateration with geographic distance constraints.
The overestimation of the real distance leads to the creation of
the conﬁdence zone in which the target host T will be found.
Figure 2: Typical messages exchange in a proxied network. The
Observed RTT is approximately equal to twice the RTT be-
tween the client and the hidden server. This message exchange
has also been observed in our honeypot setting.
on the Waledac Botnet. This data is available for download from
planete.inrialpes.fr/projects/geoloc.
2. GEOLOCALIZATION TECHNIQUES
Several techniques have been recently proposed for locating
Internet hosts [4, 1, 2, 9]. Apart from network positioning tech-
niques, aiming at computing relative network distances between
nodes, recent research has also focused on revealing geographic
location of Internet hosts based on the network characteristics
they exhibit. In this section, we concentrate on one of the most
popular techniques, namely Constraint-Based Geolocation [4],
proposed to geolocate Internet hosts. CBG is a delay measurement
technique that exploits correlations that exist between network
distance and geographic distance. It is based on two main phases:
the calibration and multilateration phases.
Calibration phase. This stage consists in estimating the correla-
tion between network and geographic distances in the network. A
set of controlled landmarks, whose geographic location is known,
probe each other, so that the known geographic distance and the
observed network distances can be used to derive the correlation
parameters. The model used in CBG considers the correlation
between network distance, typically round trip times denoted by
(RT T ), and geographic distances D as linearly dependent. More
formally, for each landmark Li, its network distance towards node
j can be expressed as:
RT T (Li, j) = si × D(Li, j) + bi
(1)
where si denotes the slope of the linear model as observed by the
landmark, whereas bi is its interceptor and j is the target towards
which the landmark is measuring. The model calibration consists
in landmarks pinging each others to collect enough measurements
to retrieve an estimation of the values of both si and bi.
Network distances can be inﬂuenced by many factors, such as
triangle inequality violations and queuing delays, which in turn
affect the estimated geographic distances.
In order to deal with
such factors, each landmark computes a so called best line, as the
line that is closest to, but below, all data points (D, RT T ). Put
simply, each landmark’s best line could be considered as the linear
model that captures the correlation between D and a RT T that
has been the least impacted by the varying network conditions.
The distance that separates other data points from the best line,
corresponds then to a conﬁdence distance (i.e. an overestimation)
that is introduced by the CBG approach to take into account
different factors that can impact network distance measurement.
Multilateration Phase. In the second step, given the geographi-
cal location of the landmarks and their estimated geographical dis-
tances to a given target host (inferred from the model), an estima-
tion of the location of the target host is achieved using multilatera-
tion. Using the best line computed in the ﬁrst step, each landmark
converts a measured network distance RT T (Li, j) towards the tar-
get j, into a geographic distance D(Li, j) = RT T (Li,j)−bi
. In
order to localize the target, landmarks cooperate by providing each
of their estimated distances towards the target, so that the location
estimate is composed by the intersection of the areas provided by
the landmarks estimate of the target position (as illustrated by Fig.
1). The target lies somewhere within that area with a very high
probability. Interested reader should refer to [4] for further details.
si
3. GEOLOCALIZATION APPLIED TO
PROXIED NETWORKS
The previous section has shown how a target can be geolocal-
ized using a set of landmarks that measure the network distances
between themselves and the target. It has also been shown in [4]
that this technique is powerful and robust when considering a mod-
erate number of landmarks, ranging from 70 to 100 landmarks.
However, this approach is only effective to locate public servers,
i.e. whose IP addresses are known. More speciﬁcally, it is assumed
that (1) the server responds to ping messages and (2) the pings fol-
low the shortest paths from the landmark to the server. These two
assumptions do not hold in the case of proxied servers, such as fast-
ﬂux ones. In fact, fast-ﬂux servers cannot be probed with pings,
because their IP addresses are not known, and are only accessible
through proxies. This also means that, in general, messages from
the landmarks to the hidden servers do not follow the shortest paths.
The rest of this section describes two extensions to the CBG
scheme to allow geolocalization in proxied-networks. The ﬁrst
extension is used by the landmark to evaluate the RTT to the server
using HTTP messages. The second extension is used by each
landmark to obtain the shortest RTT to the hidden server in order
to reduce its distance estimation error.
Estimating the RTT using HTTP messages. From each landmark
point of view, the hidden server, denoted HS, can be seen as an
one-hop away node. Its network distance to the hidden server could
be measured as a function of its network distance to the proxy and
the network distance between the proxy and the hidden server.
Figure 2 shows a diagram of the protocol exchange between a
client and a proxied server. When a client, in our case a landmark
Li, wants to request a page from the hidden server HS, it ﬁrst
connects to the proxy, initiating a TCP connection and sending a
TLActual Geo distanceEstimatedGeo distance1L2L3ClientProxyHiddenServerObservedRTTSYNSYNSYN/ACKSYN/ACKACKACKHTTP REQUESTHTTP REQUESTHTTP REPLYHTTP REPLY185HTTP request. The proxy then establishes a TCP connection with
the hidden server and relays the HTTP request. The hidden server
generates the reply and sends it to the proxy that relays it back to
the client. This observation is key to correctly estimate the RTT of
data packets between the client and the hidden server. If we denote
by HTTP_Ping the amount of time elapsed from the ﬁrst TCP con-
nection to the time the HTTP reply is received by the client, then
the RTT can be derived up to a factor, that we call RTT_factor.
Such factor is likely to be close to 2, because of the symmetry
of exchanged messages as shown in Figure 2. However, since
queueing and processing delays can impact RT T _f actor, and
because the HT T P _ping is an application-layer time estimation,
we need to validate such factor throughout measurements. The
estimation of the RT T _f actor is reported in Section 4.
Estimating the shortest path. Once the landmark has computed
the RTT to a server it can estimate its distance using the model
calibrated during the calibration phase.
However, hidden servers are accessible through proxies which
introduce a level of indirection and therefore, increase the com-
puted RTTs (and resulting distances). In fast-ﬂux networks, to our
advantage, the used proxies change very frequently and are dis-
tributed over the Internet.
A landmark can then compute the HT T P _P ing to the hidden
server via several proxies and uses the smallest value as an estima-
tion of the HT T P _P ing via the shortest path. In fast-ﬂux net-
works, hundreds of proxies can be discovered through time, pro-
viding a very good estimation of the HT T P _P ing on the shortest
path.
Once the minimum HT T P _P ing is obtained, an approxima-
tion of the RTT, denoted by (cid:91)RT T (Li, HS) is computed as follows:
(cid:91)RT T (Li, HS) = minp∈P
(HT T P _P ing(Li, p, HS))
RT T _f actor
where P is the set of proxies that the landmark is aware of, and
HT T P _P ing(Li, p, HS) is the time spent from the TCP connec-
tion initiation to the reception of the ﬁrst HTTP packet from the
hidden server, through the proxy p.
Note that another approach consists in mimicking the behavior
of data trafﬁc as observed in communication within a fast-ﬂux net-
work, to calibrate the model taking into account the proxying op-
erations. From this perspective, when performing inter-landmarks
measurements to evaluate each best line, landmarks emulate a fast-
ﬂux network. The idea behind this strategy is that if the network-
geographic distance model, and especially its associated best line
within each landmark, is calibrated with a fast-ﬂux network-like
system, then translation from proxied measurement towards geo-
graphic distance can be achieved directly 1.
4. VALIDATION ON PLANETLAB
The goal of this section is to assess the performance of the
proposed approach to localize proxied servers. All results were
acquired using nodes deployed on the PlanetLab infrastructure, a
controlled environment, where the geographic coordinates of each
node are provided. The results of these experiments were then
used to perform geolocalization of real fast-ﬂux domains.
1We have evaluated the performance of this method experimen-
tally. However, since our approach provided better performance,
the results of this alternative technique are not reported in this pa-
per.
Figure 3: The relationship between Min HT T P _ping and di-
rect pings towards targets.
4.1 Experimental methodology
For comparison purposes with non proxied communication, we
ran our experiments on datasets that are similar to those used in [4].
We performed our experiments using two different data sets with
hosts that are geographically distributed through the continental
U.S (25 nodes) and Western Europe (30 nodes). Since the location
of each PlanetLab node is known, we can evaluate the performance
of our scheme by comparing the estimated position to the actual
one.
In our experiments, each host plays, one at a time, the role of
“hidden” target to be located. The remaining nodes, are then con-
sidered as either landmarks or proxies through which communica-
tion is achieved to the target. More speciﬁcally, the geolocalization
of the target node T is performed using the three following steps:
- Calibration step: each node (or landmark) computes its best
line by pinging each other node (except the target one T ).
- Distance evaluation step: each node sends HTTP requests
to the target node via the other nodes (excluding the target
node) and records the corresponding HTTP_Ping.
It then
selects the smallest HTTP_Ping value and estimates its dis-
tance to the target using its best line.
- Multilateration step: all the estimated distances of each land-
mark are used to compute the estimated location of T as pre-
sented in Section 3.
All our experiments were run concurrently so as to experience
the same network conditions. Our PlanetLab measurements cam-
paign were conducted between April 15th, 2009 and April 20th,
2009. Since we observed similar results for U.S and Western Eu-
rope datasets, in this section we only show U.S results. Moreover,
we compared our results to the geolocalization of non-proxied tar-
gets.
4.2 Calibration Considerations