# Cryptographic Strength of SSL/TLS Servers: Current and Recent Practices

## Authors
- Homin K. Lee
  - Department of Computer Science
  - Columbia University
  - New York, NY
- Tal Malkin
  - Department of Computer Science
  - Columbia University
  - New York, NY
- Erich M. Nahum
  - Network Server System Software Dept.
  - IBM T.J. Watson Research Center
  - Hawthorne, NY

## Contact Information
- Homin K. Lee: [EMAIL]
- Tal Malkin: [EMAIL]
- Erich M. Nahum: [EMAIL]

## Abstract
The Secure Sockets Layer (SSL) and its successor, Transport Layer Security (TLS), are critical for ensuring the security of server communications. In this paper, we assess the cryptographic strength of public servers using SSL/TLS. We introduce the Probing SSL Security Tool (PSST) and evaluate over 19,000 servers. Our findings reveal a wide range of cryptographic strengths supported on the Internet. While some results are concerning—such as the continued support of the insecure SSL 2.0, weak export-grade ciphers, and weak RSA key sizes—there are also positive trends, including sensible default choices by servers, rapid adoption of AES, and the use of strong RSA key sizes of 1024 bits or more. Comparing our results over the past two years indicates a positive but gradual improvement in cryptographic practices.

## Categories and Subject Descriptors
- C.2.0 [Computer-Communication Networks]: General—Security and protection
- C.2.2 [Computer-Communication Networks]: Network Protocols

## General Terms
- Measurement, Security

## Keywords
- SSL, Network Security, Servers

## Acknowledgments
This research was partially supported by the New York Software Industry Association under grant NYS-CU0232901.

## 1. Introduction
Cryptography is a cornerstone of modern electronic commerce. As more transactions are conducted online, ensuring the security of data transfer is paramount. Significant financial transactions occur through e-commerce sites, auction platforms, online banking, stock trading, and government services. These communications are secured by SSL and TLS, which provide authentication, privacy, and integrity. The cryptographic strength of these protocols is crucial for their effectiveness.

It is essential to ensure that SSL/TLS servers are configured correctly. Poor cryptographic practices can indicate broader security issues. The flexibility of SSL/TLS allows for interoperability and extensibility, but it can also lead to security vulnerabilities if not managed properly. For example, supporting weak encryption for compatibility reasons can compromise security. Therefore, the responsibility for ensuring security largely falls on the server administrators.

This paper evaluates the cryptographic strength of public SSL/TLS servers. We use PSST to assess the supported protocols and cryptographic options. Our results show a mix of encouraging and discouraging trends. For instance, while many servers still support SSL 2.0 and weak ciphers, there is a growing adoption of stronger algorithms like AES and larger RSA key sizes. Over the past two years, we have observed a steady, albeit slow, improvement in cryptographic practices.

## 2. SSL and TLS
### Background
SSL is designed to secure communication between two peers, providing mechanisms for key exchange, authentication, encryption, and integrity. It aims to protect against man-in-the-middle attacks, eavesdropping, replay attacks, and statistical attacks. Typically, only the server authenticates itself, but SSL/TLS also supports mutual authentication.

### Architecture
SSL/TLS consists of two layers: the record layer and the handshake layer. The record layer handles data fragmentation, compression, symmetric-key encryption, and MAC generation. The handshake layer manages session establishment and option negotiation, determining the per-session symmetric keys used by the record layer.

### History
- **SSL 2.0** (introduced in 1994): Had several security flaws, including vulnerability to man-in-the-middle attacks and weak message authentication.
- **SSL 3.0** (introduced in 1996): Addressed the security issues of SSL 2.0 and improved functionality.
- **TLS 1.0** (standardized in 1999): Similar to SSL 3.0 but with minor improvements, such as the use of HMAC for better security.

### Current Use
Many websites use SSL/TLS to secure sensitive information. All major web browsers support SSL 3.0 and TLS. While SSL 3.0 and TLS are considered secure when used properly, SSL 2.0 should not be used for sensitive data due to its fundamental design flaws.

## 3. Methodology
### PSST Tool
PSST is based on httperf, a tool for measuring web server performance, and uses the OpenSSL library for SSL support. We modified httperf to establish an SSL connection with the target server, advertising only one cipher suite at a time. By iterating through all available suites, we can determine which ones are supported. Each connection is aborted after the initial SSL handshake to minimize overhead.

### Data Collection
To gather a comprehensive list of SSL/TLS servers, we used rating sites like Alexa and Web100 to include the most popular and largest sites. We also included a broad list of servers from previous studies to ensure a diverse sample.

## 4. Results
Our evaluation of over 19,000 servers revealed a wide range of cryptographic strengths:
- **SSL 2.0**: 85% of SSL sites still support it, despite known security issues.
- **DES**: 93% of servers support DES, which is vulnerable to exhaustive search attacks.
- **Export-Grade Encryption**: Many servers still support these weak ciphers.
- **RSA Key Sizes**: 765 sites use 512-bit RSA keys, while over 1200 sites use 2048-bit or larger keys.
- **AES**: Over 57% of sites support AES, with 94% defaulting to AES when presented with multiple options.

Over the past two years, we have observed:
- A 9 percentage point reduction in SSL 2.0 support.
- A 16 percentage point increase in AES support.
- A 2 percentage point decrease in weak public key sizes.
- A 2 percentage point increase in very strong public key sizes.

## 5. Related Work
Previous studies, such as Murray's 2000 survey, found that 25% of servers used very weak RSA key sizes, compared to about 4% today. This highlights the progress made in improving cryptographic practices.

## 6. Conclusion and Future Work
Our results show that while many servers still support weak cryptography, they often make the correct choice by default. There is a positive trend toward stronger cryptographic practices, though the pace of improvement could be faster. Future work could focus on enhancing the performance and security of the most prevalent cryptographic algorithms. Additionally, PSST can be a valuable tool for regular security compliance testing, especially for large organizations managing multiple servers.