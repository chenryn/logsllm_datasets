MIFARE Classic:
Completely Broken
Chen-Mou Cheng
Dept. Electrical Engineering
National Taiwan University
Introduction
• MIFARE Classic
– 0wned by NXP Semiconductors, Inc.
– The most widely deployed RFID technology
• Over 1 billion cards sold
• Main uses
– Public transportation ticketing systems
– Access control systems
– Reverse-engineered in late 2008 by European hackers
• In this talk, I will report our first-hand experience 
attacking a real MIFARE Classis system
Acknowledgments
• K. Nohl, D. Evans, and H. Plötz.  “Reverse-
engineering a cryptographic RFID tag.”  In USENIX 
Security Symposium 2008
• F. D. Garcia, P. van Rossum, R. Verdult, and R. W. 
Schreur.  “Wirelessly pickpocketing a MIFARE 
Classic card.”  In IEEE Symposium on Security and 
Privacy 2009
• M.-Y. Chih, J.-R. Shih, B.-Y. Yang, J. Ding, and C.-M. 
Cheng.  “MIFARE Classic: Practical attacks and 
defenses.”  In CISC 2010
Outline
• Overview of MIFARE Classic
– Memory layout
– Communication protocol
– Authentication protocol
– CRYPTO-1 stream cipher
• Principal technique: known-plaintext attack
• Reader-based attacks
• Sniffer-based attacks
• Concluding remarks
Jargon of the Trade
• MIFARE Classic is based on the ISO/IEC 14443 
Type A 13.56 MHz contactless smart card 
standard
– A reader is referred to as a PCD (Proximity 
Coupling Device), whereas a card/tag, PICC 
(Proximity Integrated Circuit Card)
– We will use these terms interchangeably with 
readers, cards, and tags
Memory Layout
Block:
 Data – 16 bytes
 Value – 4 bytes
 Sector tail – access control
Sector 
number
Block number
Content（16 Bytes）
0
0
UID, BCC, Manufacturer (Read Only)
1.Data/Value
Data or Value
2.Data/Value
Data or Value
3.Tail
Key A
Access 
cond.
U
Key B
1
4.Data/Value
Data or Value
5.Data/Value
Data or Value
6.Data/Value
Data or Value
7.Tail
Key A
Access 
cond.
U
Key B
……
15
60.Data/Value
00
ff
00
ff
61.Data/Value
00
ff
00
ff
62.Data/Value
Data/Value
63.Tail
Key A
Access 
cond.
U
Key B
MIFARE Classic 1K Memory Layout
Value
Value
Value
Value
Value
Value
Memory size
1 KB
4 KB
# Blocks
64
256
# Sectors
16
40
# Blocks in a sector
4
4 or 12
Example
Communication and Authentication
1. Anti-collision (UID)
2. Authentication (key A/B)
3. Memory operations
 Read
 Write
 Increment, decrement, restore
 Halt
Cryptographic Primitive
The CRYPTO-1
Stream Cipher
48 bits LFSR
Non Linear Filter
0
47
Generating polynomial 
input
LFSR seeds
1. Sector key
2. Nt ⊕ UID
3. Nr
keystream
…0 1 1 0 0 1 …
20
Principal Attack Technique
• Known-plaintext attack on stream cipher
– ciphertext = plaintext XOR keystream
– Ciphertext can be easily obtained via 
programmable reader or sniffer
– If you know plaintext, then you know keystream
• Can recover internal state given enough 
keystream bits (plus enough computational 
power)
Main Vulnerabilities
• CRYPTO-1’s 48-bit key is way toooooooo short
– Depending on which bits you have, the time to 
break can range from a few seconds to a few days
• Source of information leakage
– Vulnerability in parity computation
– Not enough entropy in nonce
– Vulnerability in nonlinear filter function
– Vulnerabilities in authentication protocol
• Allows extremely efficient sniffer-basd attacks
Parity against plaintext: Buy eight get one free 
32-bit nonce function has only 16 bits of entropy
 1
x
x
x
x
11
13
14
16
15
31
Left shift
Lower bits
High bits
0
32
Generating polynomial 
Time
8 bits data
P
P
k0 k1 k2 k3 k4 k5 k6 k7
8 bits data
k8 k9 … k12 k13 k14 k15
k16 ……
Parity and Nonce
Equipment
Sniffer
Reader
PCD & PICC 
Emulator
With MIFARE Classic chip
Attacks
PCD-based
Sniffer-based
PCD
10M
Attacks
Cost Comparison
PCD offline Sniffer online
First
Rest
Any
Platform 
GPU
CPU
CPU
Devices
16
4
1
Time/per key
14 hour
1 hour
< 1 min
PCD-
based
Offline
64 keys in two days
Sniffer-
based
Online
Attacks
PCD-based
Sniffer-based
PCD
10M
How to Obtain the First Key
1. Keep requesting to authenticate
2. 4 to 6 traces
3. Brute-force search 248 key space
PCD
PICC
6000f57b
f9105fce
{00000000} {00000000}
{0}
{0}
{5}
An error code trace
request
response
Information leakages
8 bits
4 bits
Nt
{Nr} 
{Ar} 
{0x5} 
Garcia et al. 
“Wirelessly pickpocketing a MIFARE Classic card.” 
In IEEE Symposium on Security and Privacy, 2009
MP
SP
SP
SP
SP
SP
SP
SP
SP
On GPU search
Nt
Nr
Ar
{0x5} 
{P}
CRYPTO-1
Keystream bits
Brute-force Search using GPU
32 bits
{P}
Sector key
48 bits
LFSR0
LFSR99
Linear
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
MP
SP
SP
SP
SP
SP
SP
SP
SP
……….
On GPU search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Trace 1
Trace 2
Trace 4
Middle Statei
One thread’s work
CRYPTO-1
Keystream
Start Point of 
Internal State
Search range
0 to 248-1
2-12
2-12
2-12
2-12
First Key by GPU Search
32bits
32bits
Trace 3
On GPU search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Trace 1
Trace 2
Trace 3
Trace 4
Middle Statei
CRYPTO-1
Keystream
2-12
2-12
2-12
2-12
Without update 
cipher LFSR
First Key by GPU Search
9
11
13
15
17
19
21
23
25
27
29
31
33
35
37
39
41
43
45
47
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
Note : Filter function input polynomial
One thread’s work
On GPU search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Error-Code Trace 1
Trace 1
Trace 2
Trace 3
Trace 4
Middle Statei
One thread’s work
2-12
Range 0 to 248-1
CRYPTO-1
Keystream
Initialization of LFSR
Middle Statei
• Decrypt and check
• Rollback LFSR
• The secret key is LFSR state 
before initialized with Nt
First Key by GPU Search
On GPU search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Error-Code Trace 1
Trace 1
Trace 2
Trace 3
Trace 4
Middle Statei
One thread’s work
2-12
CRYPTO-1
Rollback
• The secret key of LFSR state 
before initialized with Nt
First Key by GPU Search
On GPU search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Secret key
Candidate
Ki
Trace 1
Trace 2
Trace 3
Trace 4
Middle Statei
One thread’s work
CRYPTO-1
Rollback
False
True
First Key by GPU Search
Ki
On GPU search
Trace 1
Trace 3
Trace 4
Trace 2
Middle Statei
One thread’s work
2-12
Ki
First Key by GPU Search
Nt
{Nr} 
{Ar} 
{0x5} 
{P}
{P}
Error-Code Trace 2
CRYPTO-1
Ki
Initialization of LFSR
Ki
On GPU search
Trace 1
Trace 3
Trace 4
Trace 2
Middle Statei
One thread’s work
2-12
Ki
First Key by GPU Search
On GPU search
Trace 1
Trace 3
Trace 4
Trace 2
Middle Statei
One thread’s work
Output secret key Ki
• Need at least four traces to 
decide unique secret key
• In practical, we run five or 
six traces
• The speed of using four, 
five, and six traces is 
approximately same
First Key by GPU Search
Reader Attack : Rest key
Getting Remaining Key
Nested authentication
Nt
{Nr} 
{Ar} 
Authenticate 
with known 
key
{Nr} 
{Nt2} 
unknown 
key
AUTH
AUTH
guess
216
ks0
{P}
213
{Nt3} 
{Nt4} 
216
{Nt5} 
Keys
CRYPTO1
Nt3
Nt4
Nt5
ksw
213
…
…
216
Decrypt
Keys
Keys
Inverting Filter Function
I1
I2
Ik
In              In-1              
keystream
Odd
Even
Non Linear Filter
24
24
…0 1 1 0 0 1 …
Garcia et al. 
“Wirelessly pickpocketing a MIFARE Classic card.” 
In IEEE Symposium on Security and Privacy, 2009
A Time-memory Trade-off
Odd
Even
Non Linear 
Filter
219
0 1 0 1 1 0 0 
0 1 0 1 1 0 0 
Non Linear 
Filter
20
21
0,1
0 1 0 1 1 0 0 
Non Linear 
Filter
22
….
0 1 0 1 1 0 0 
Non Linear 
Filter
24
ODD or EVEN
update
Index
                                                                            0
x         
x
x
x
x
x
x
x
x
x
x
 x
)
 1
x
x
x +x
x
    x
5
7
9
13
19
21
23
29
31
33
39
43
6
24
34
36
38
48
Attacks
PCD-based
Sniffer-based
PCD
10M
GNURadio-based Sniffer
• Elements of the sniffer
1. A good antenna
2. USRP handles A/D and sampling
3. Transfer raw samples across USB
4. DSP on PC
1.
Demodulation
2.
Decoding
3.
Protocol analysis
Antenna
USRP
USB
A/D Conv.
Sampling
PC
Command Set
• Length of sequent transmission
Type
Bytes sequent
Function
V ( INC, DEC, RES)
4-6-4
Change a value block
W (WRITE)
4-18
Write a block with 16 bytes data
A (AUTH)
4-8
Authenticate a sector by key A/B
R (READ)
4-next
Read a block
Inc/Res/Dec 
Write 
Authenticate 
Read 
{Inc/Dec/Res N}32
{Write N} 32
Auth N 32
{Read N} 32
{ACK/NCK} 4
{ACK/NCK} 4
Nt 32
{Data} 144
{Value + CRC} 48
{Data || CRC} 144
{Nr} 32 {Ar}32
{Next Command} 32
{Transfer} 32
{ACK/NCK} 4
{At} 32
{ACK/NCK} 4
{Next Command} 32 {Next Command} 32
{Next Command} 32
C
B
CRC
CRC
4 bytes
Auth 0x18
{NR} {AR}
{Write 0x18}
{write data}
{Auth 0x8}
{NR} { AR }
{DEC 0x8}
{Value}
{Transfer 0x8}
{Read}
{Auth 0x1a}
{NR} { AR }
{Write 0x1a}
{Write Data}
{Auth 0x10}
Example One-way Trace 
6118e4fe
3edee7b0 3f307d3e
98c9b913
b1c903a22d1cc21b39d1502b894441473f00
89be2cea
1433ad1452895e0c
8d02026d
a2ef4ab078a9 
84aaacec
5f815afa
fbf8c3d9
bcd863a91cf83b07
6fb38b89
72e4a262b284c235c7d054269d85e281d070
ff35fcc0
Anti-collision
Example: WRITE Command
a012cc82
38db7591
Anti-collision
Auth 0x18 
Nt
{Nr}32 {Ar}32
{Write 0x18}32
{ACK}4
{write data}144
{ACK}4
6118e4fe
3edee7b0 3f307d3e
98c9b913
b1c903a2 2d1cc21b ...
{Auth 0x8}32
89be2cea
=
98c9b913
States
CRYPTO-1
Statei
Decrypt trace to statei
1. Ar is a MIFARE nonce
2.
 0x610865ee
0x89be2cea 
?
Concluding Remarks:
How to Fix MIFARE Classic?
• Under these attacks
MIFARE Classic is a memory card
• Need to defend against:
1. Unauthorized content alteration
2. Replay attack
3. Clone attack
•
Not unlike detecting counterfeit banknotes
A Straightforward Defense Mechanism
Time synchronized
Key ID
Signature
Signature
unusable
pdata
pdata
pdata
unusable
Super
Sector
Data block
Data block
Value block
Data/Value
block
UID
count
Sector 0
PICC
Protecting data integrity using 
digital signature schemes
Example: TTS
Questions or comments?
Thank you!
If you are thinking to deploy MIFARE 
Classic as a means of access control:
“Don’t.”