### Table II: Assumptions about H in Protocols for OT Extension

| Protocol | Standard OT | Correlated OT | Random OT |
|----------|-------------|---------------|------------|
| **Malicious Security** | cr* | cr* | cr* |
| **Random Oracle** | random oracle | random oracle | random oracle |
| **References** | [29, 2] | [2] | [2] |
| **Standard OT** | Standard OT | Correlated OT | Random OT |
| **Correlation Robustness (cr)** | cr | cr | cr |
| **Tweakable Correlation Robustness (tcr)** | tcr | tcr | tcr |

*Note: cr* refers to correlation robustness with compression, for which no instantiation from a fixed-key cipher was known.

### Definitions and Relations

A construction \( H \) in the random-permutation model is said to be \((p, q, \rho, \epsilon)\)-correlation robust if, for all adversaries \( D \) making at most \( p \) queries to \( \pi/\pi^{-1} \) and \( q \) queries to \( O_{\text{cr}} \), and for all \( R \) with min-entropy at least \( \rho \), it holds that \( \text{Adv}_{\text{cr}}^{H,R}(D) \leq \epsilon \). For secure computation, \( q \) is typically fixed by the protocol, while \( p \) can be as large as the adversary's running time.

#### Relations Between Definitions
- Any \( H \) that is ccr (or tccr) is also cr (or tcr).
- Any \( H \) that is tcr (or tccr) can be used to construct a hash function \( H' \) that is cr (or ccr).

The construction provided in Section VII-B is cr but not ccr. We are not aware of a generic transformation from cr (or ccr) to tcr (or tccr). However, in Section V, we show that any \( H \) that is ccr can be used to construct a hash function \( H' \) that satisfies tccr for random inputs and non-repeating tweaks. This weaker notion suffices for analyzing the half-gates garbling scheme.

### Oblivious-Transfer Extension

Many existing implementations of OT extension based on a fixed-key cipher are insecure or cannot be proven secure. Some OT-extension protocols are proven secure in the random-oracle model, but efficient instantiations of a random oracle from a fixed-key cipher are not known. To address this, we present various flavors of OT-extension protocols based on hash functions satisfying the definitions from the previous section, improving on the assumptions used in prior works (see Table II).

For semi-honest security, it suffices for the hash function to be correlation robust. For malicious security, however, tweakable correlation robustness is required. The addition of a tweak is necessary in the malicious setting to prevent attacks shown in Section II. Without a tweak, the hash function behaves the same across different executions of the OT, which can be exploited by a malicious adversary. Incorporating an independent tweak for each execution prevents this attack (formally proven in the next section).

We consider standard-OT extension and correlated-OT extension here, deferring the case of random-OT extension to Appendix A. Since our focus is on instantiating the hash function \( H \) used in the second phase of OT extension, we present all our protocols in the \( F_{\Delta\text{-ROT}} \)-hybrid model (see Figure 1). Efficient protocols realizing this ideal functionality are known in both the semi-honest [1] and malicious [29] settings.

### Standard-OT Extension

Figure 2 describes the standard OT functionality \( F_{\text{S-OT}} \). In Figure 3, we show a protocol realizing standard OT in the \( F_{\Delta\text{-ROT}} \)-hybrid model, in both the semi-honest and malicious settings. The result for the case of semi-honest security already follows from the work of Ishai et al. [28].

**Theorem 1 (Informal):** If \( H \) is cr (or tcr), then protocol \( \Pi_{\text{S-OT}} \) securely realizes \( F_{\text{S-OT}} \) for semi-honest (or malicious) adversaries in the \( F_{\Delta\text{-ROT}} \)-hybrid model.

**Proof:**
- Security in the \( F_{\Delta\text{-ROT}} \)-hybrid model for a corrupted \( P_A \) holds perfectly and is trivial to show.
- For a semi-honest \( P_B \), the simulator extracts \( P_B \)'s inputs from its input to the \( F_{\Delta\text{-ROT}} \) functionality, sends these to the \( F_{\text{S-OT}} \) functionality, and sets \( c_{x_i}^i := H(b_i) \oplus m_{x_i}^i \) and chooses uniform \( c_{1-x_i}^i \). Correlation robustness of \( H \) implies that this results in a view indistinguishable from a real execution.
- In the malicious case, the simulator is similar, but the proof is more involved. For completeness, we describe the simulator \( S \) in full:
  1-2. \( S \) obtains the inputs \( (x_1, \ldots, x_m) \) and the values \( \{b_i\}_{i \in [m]} \) that \( A \) sends to \( F_{\Delta\text{-ROT}} \). It sends \( \{c_b^i := H(b_i, i) \oplus m_{x_i}^i\} \) to \( F_{\text{S-OT}} \), which returns \( \{m_{x_i}^i\} \). \( S \) chooses a uniform \( \Delta \) and answers \( A \)'s global key query (if any) using \( \Delta \).
  3. For all \( i \), \( S \) sets \( c_{x_i}^i := H(b_i, i) \oplus m_{x_i}^i \) and chooses uniform \( c_{1-x_i}^i \). If \( A \) makes no global key query, the advantage of \( A \) in distinguishing the simulated view from the real view is at most \( \epsilon + 2^{-k} \).

### Correlated OT

Correlated OT, proposed by Asharov et al. [1], is a weaker form of OT where the sender can only specify the XOR of its "messages" (otherwise chosen uniformly by the functionality). The relevant ideal functionality \( F_{\text{C-OT}} \) is given in Figure 4. Prior work showing correlated-OT extension protocols [1, 2] requires a programmable random oracle, even for semi-honest security, because the simulator needs to program the output of \( H \) to ensure consistency with the output from the ideal functionality. We weaken the ideal functionality to allow the adversary to choose its output, which still suffices for applications to secure computation. In Figure 5, we show a protocol that realizes this functionality in both the semi-honest and malicious settings.

**Theorem 2 (Informal):** If \( H \) is cr (or tcr), then protocol \( \Pi_{\text{C-OT}} \) securely realizes \( F_{\text{C-OT}} \) for semi-honest (or malicious) adversaries in the \( F_{\Delta\text{-ROT}} \)-hybrid model.

**Proof:**
- Security for an adversary \( A \) corrupting \( P_A \) is perfect and easy to show.
- For a corrupted \( P_B \), the simulator \( S \) obtains the inputs \( (x_1, \ldots, x_m) \) and the values \( \{b_i\}_{i \in [m]} \) that \( A \) sends to \( F_{\Delta\text{-ROT}} \). \( S \) chooses a uniform \( \Delta \) and answers \( A \)'s global key query (if any) using \( \Delta \). \( S \) chooses uniform \( \{c_i\} \) and sends them to \( P_B \). It sets \( m_{x_i}^i := H(b_i, i) \oplus x_i c_i \) and sends \( (x_1, \ldots, x_m) \) and \( \{m_{x_i}^i\} \) to \( F_{\text{C-OT}} \). Indistinguishability follows as in the proof of Theorem 1.

### Revisiting the Half-Gates Garbling Scheme

Zahur et al. [53] introduced the half-gates garbling scheme based on an abstract hash function \( H \). To analyze the scheme, they introduce a definition called "circular correlation robustness for naturally derived keys" and prove security for their garbling scheme when \( H \) satisfies that definition. They claim, without proof, that the hash function \( H(x, i) = \pi(2x \oplus i) \oplus 2x \oplus i \) satisfies their definition. This claim is not clear to us (but see footnote 5).

In this section, we revisit the assumption needed to prove the security of the half-gates garbling scheme.