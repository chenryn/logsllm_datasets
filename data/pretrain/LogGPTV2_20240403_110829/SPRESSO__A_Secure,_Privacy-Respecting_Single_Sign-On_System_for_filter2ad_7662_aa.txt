# SPRESSO: A Secure, Privacy-Respecting Single Sign-On System for the Web

## Authors
- Daniel Fett, University of Trier, Germany (Email: [PI:EMAIL])
- Ralf KÃ¼sters, University of Trier, Germany (Email: [PI:EMAIL])
- Guido Schmitz, University of Trier, Germany (Email: [PI:EMAIL])

## Abstract
Single sign-on (SSO) systems, such as OpenID and OAuth, allow web sites, known as relying parties (RPs), to delegate user authentication to identity providers (IdPs) like Facebook or Google. These systems are popular because they provide a convenient way for users to log in at RPs and shift much of the burden of user authentication from RPs to IdPs.

However, current SSO systems do not respect users' privacy, as IdPs can track which RPs a user logs into. Mozilla's BrowserID (also known as Persona) was an exception, designed with user privacy in mind, but recent attacks have shown that it does not provide adequate privacy either.

In this paper, we propose SPRESSO (Secure Privacy-REspecting Single Sign-On), the first privacy-respecting SSO system for the web. SPRESSO is easy to use, decentralized, and platform-independent, relying solely on standard HTML5 and web features without requiring browser extensions, plug-ins, or other executables. Given the complexity of designing secure SSO systems, we also conduct a formal analysis of SPRESSO based on an expressive model of the web to formally prove its strong authentication and privacy properties.

## Introduction
Web-based Single Sign-On (SSO) systems enable users to authenticate themselves to a relying party (RP) using an identity managed by an identity provider (IdP), such as Facebook or Google. If an RP uses an SSO system, users do not need to enter a password; instead, they are authenticated by the IdP, which exchanges data with the RP to confirm the user's identity. This makes SSO systems attractive for users and convenient for RPs, as much of the authentication burden, including password management, is shifted to the IdPs.

However, existing SSO systems, except for Mozilla's BrowserID, do not respect users' privacy. The IdP always knows which RPs the user logs into, and in systems like OpenID and OAuth, user data is directly exchanged between IdPs and RPs, making tracking easy. Unfortunately, recent attacks on BrowserID have shown that it does not provide adequate privacy either.

The goal of this work is to design the first SSO system that respects users' privacy, ensuring that even malicious IdPs cannot track which RPs users log into. Additionally, we conduct a formal security analysis of SPRESSO based on an expressive model of the web infrastructure to provide formal security guarantees.

### Contributions of this Paper
1. **SPRESSO Design**: We propose SPRESSO, the first SSO system that respects user privacy. Users can log in to RPs using their email addresses, and the IdP hosting the email address authenticates the user without learning which RP the user is logging into.
2. **Strong Authentication and Privacy**: SPRESSO is designed to be used across browsers, platforms, and devices, using only standard HTML5 and web features. It is an open and decentralized system, requiring no prior coordination or setup between RPs and IdPs.
3. **Formal Analysis**: We formally prove that SPRESSO enjoys strong authentication and privacy properties. Our analysis is based on an expressive Dolev-Yao style model of the web infrastructure, which closely mimics published standards and specifications for the web.

### Structure of this Paper
- **Section 2**: Description of SPRESSO, including key features, detailed system description, and implementation details.
- **Section 3**: Overview of the general web model and the modifications and extensions made for this analysis.
- **Section 4**: Presentation of the strong but general definition of indistinguishability/privacy for web applications.
- **Section 5**: Formal model of SPRESSO.
- **Sections 6 and 7**: Analysis of SPRESSO's privacy and authentication properties.
- **Section 8**: Discussion of related work.
- **Section 9**: Conclusion.

All details and proofs are available in our technical report [12]. An online demo and the source code of SPRESSO are available at [22].

## 2. Description of SPRESSO
### 2.1 Main Features
**SPRESSO** has the following key features:

#### Strong Authentication and Privacy
- **Authentication**: SPRESSO is designed to prevent adversaries from logging in to an RP as an honest user or injecting their identity into the browser of an honest user. This is crucial for preventing tracking and obtaining user secrets.
- **Privacy**: SPRESSO ensures that malicious IdPs cannot track which RPs specific users log into. Unlike other SSO systems, SPRESSO does not exchange user data directly between IdPs and RPs, thus preventing tracking.

#### Open and Decentralized System
- **Decentralization**: SPRESSO is a decentralized, open system where users are identified by their email addresses, and email providers certify the users' authenticity. There is no central authority, and no prior coordination or setup is required between RPs and IdPs.
- **Seamless Fallback**: For email addresses lacking SPRESSO support, a seamless fallback can be provided.

### 2.2 Detailed System Description
[Detailed description of the system, including the flow of the login process, will be provided here.]

### 2.3 Implementation Details
[Further implementation details, including technical specifics and how the system is built, will be provided here.]

### 2.4 Potential Attacks and Prevention
[Discussion of potential attacks against SPRESSO and why they are prevented, providing additional intuition and motivation for the design of SPRESSO.]

## 3. General Web Model
[Brief recall of the general web model from [10] and explanation of the modifications and extensions made for this analysis.]

## 4. Definition of Indistinguishability/Privacy
[Presentation of the strong but general definition of indistinguishability/privacy for web applications, not tailored to a specific web application.]

## 5. Formal Model of SPRESSO
[Formal model of SPRESSO, based on which the privacy and authentication properties will be analyzed.]

## 6. Privacy Analysis of SPRESSO
[Analysis of SPRESSO's privacy properties, proving that a malicious IdP cannot distinguish whether an honest user logs in at one RP or another.]

## 7. Authentication Analysis of SPRESSO
[Analysis of SPRESSO's authentication properties, proving that SPRESSO meets strong authentication requirements.]

## 8. Related Work
[Discussion of further related work in the field of SSO systems and web security.]

## 9. Conclusion
[Conclusion summarizing the contributions and future directions of SPRESSO.]

For all details and proofs, refer to our technical report [12]. An online demo and the source code of SPRESSO are available at [22].