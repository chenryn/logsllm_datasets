j ∈ [ti, ti+1), we deﬁne Rlegal
j = QueryFirst(ti, ti+1).
(2) We convert a pebbled node v ∈ Rj from red to blue at time j if node v is in QueryFirst(ti, ti+1) for
some later interval (ti, ti+1) with j  1 − 1
2mw/5 − q
2w > 1 − 2
2w/2 .
We now justify the correctness of Theorem 3.3.
Proof of Theorem 3.3: Recall that ecostq,(fG,H , m · w) is taken over algorithms that compute fG,H (x)
correctly with probability at least . Thus, ecostq,(fG,H , m · w) is at least  times the expected cost of an
15
(cid:1) > 1
execution trace that correctly computes fG,H (x). Lemma 3.9 implies that an execution trace that correctly
computes fG,H (x) must transfer at least m words between memory and cache for each interval (ti, ti+1) with
2 . Recall that by construction, the red-cost for each interval is at least
2 , the energy cost of an execution trace that
j∈(ti,ti+1] cr |Pj \ Pj−1| for each interval (ti, ti+1]. On the
probability at least (cid:0)1 − 2
(cid:80)
correctly computes fG,H (x) is at least mcb +(cid:80)
j∈(ti,ti+1] cr |Pj \ Pj−1|. Therefore with probability at least 1
(cid:88)
(B∗, R∗) ≤(cid:88)
8mcb +
cr |Pj \ Pj−1|
other hand, recall that
 .
(cid:107)
rbpeb
2w/2
i
j∈(ti,ti+1]
Hence,
ecostq,(fG,H , m · w) >
(cid:107)
rbpeb
(B∗, R∗) .

16
2
4 Relating Memory Hardness and Bandwidth Hardness
In this section, we show that any function with high cumulative memory complexity also has high energy
costs. Namely,
Reminder of Theorem 1.2.
(cid:107)
rbpeb
(G, m) ≥ 2cb
− 2m
+ crt ∈ Ω
(cid:18) Πcc(G)
t
(cid:19)
(cid:16)(cid:112)cb · cr · Πcc(G)
(cid:17)
,
where m is the cache size, t is the number of steps in the pebbling, cb is the cost of a blue move and cr is the
cost of a red move.
We also show that this connection can be exploited to design a maximally bandwidth hard iMHF. Thus,
the goals of designing an MHF with high cumulative memory complexity/bandwidth hardness are well
aligned.
(cid:107)
Lemma 4.1. rbpeb
(G, m) ≥ mint
2cb
(cid:16)
(cid:16) Π(cid:107)
(cid:17)
t − m
cc(G)
(cid:17)
, tcr
.
Proof. For any red-blue pebbling P of DAG G, let Ri be the set of red pebbles at time step i and let Bi be
the set of blue pebbles at time step i. Setting Di = Bi ∪ Ri we remark that (D1, . . . , Dt) is a valid black
(cid:107)
cc(G),
pebbling of G. Thus, by the optimality of Π
cc(G) ≤ t(cid:88)
|Ri ∪ Bi| ≤ t(cid:88)
Π(cid:107)
t(cid:88)
|Ri| +
|Bi| ≤ t max|Bi| + tm
Rearranging terms we have
i=1
i=1
i=1
|Bi| ≥ Π
max
i
(cid:107)
cc(G)
t
− m .
In the optimal red-blue pebbling, each blue pebble must eventually be converted back to a red pebble,
or else it should be discarded. Additionally, without loss of generality, we can assume that during each step
16
we make at least one red move. Otherwise, we could combine consecutive steps into one single step. Thus,