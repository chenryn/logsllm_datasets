# Messages
## Header and label
* 4 byte
* Before IP Header
* 20 bit label field
* Label, EXP, Bottom Of Stack and TTL
## Hellos
* Multicast on 224.0.0.2
* UDP 646
* Has LSRs LDP ID - 32 bit dotted decimal, 2 byte label space number (0 for frame based)
* Transport address transmitted if set
* TCP after neighbour discovery
* After TCP UP, adv all loc bindings and prefixes
* LDP ID like router ID
# Timers
# Trivia
* CEF creates FIB, entry for each dest IP prefix
* CEF adj lists data link header
* LSR uses CEF FIB and LFIB for forwarding
* Label info in both, outgoing int and next hop
* FIB and LFIB differ (incoming unlabelled and labelled)
* TTL - LSRs decrement, Ingress E-LSR drops IP ttl, and copies to MPLS, Egress E-LSR drops MPLS ttl, pops MPLS header, copies to IP header
* Disabling TTL propagation - Ingress E-LSR, MPLS TTL to 255, egress IP TTL unchanged
* `no mpls ip propagate ttl`
* Labels advertised back to router rx'd from
##  MPLS LIB Feeding FIB and LFIB
* Best label chosen and outgoing int
 * populates into FIB and LFIB, both have best labels
* LIB has all labels
* Routing protocol loop prevention
* CEF required
## VPNs
* Outer - forwarding, inner Bottom of stack 1, identifies egress VRF
* Three components of VRF tables, RIB, CEF FIB (based on VRFs RIB), instances/process of routing protocol to CE
* RD is 64 bits long
 * First 2 bytes defines format
 * IOS infers first 2 bytes based on 6 bytes of rd command
* RTs 8 bytes
## FEC
* Set of packets receiving same treatment by single LSR
 * MPLS QoS could be different from another for same prefix
 * MPLS TE - fec is tunnel
## 6PE and 6VPE
* Allows v6 over v4 network
* For single label per prfix, 4000 max per box
* Edge routers dual stack
* Only static routes and BGP for v6 in VRF context
* PEs use v4-mapped v6 address for v6 prefix
* Next hop advertised by PE for both is v4 for v4 L3vpn routes, but with ::FFFF: prepended
### 6PE
* Customers v6 prefixes inside global
* v6 labels/prefixes exhanged using labelled v6 over v4 BGP between PEs
### 6VPE
* customer v6 prefixes in vrf
* v6 labels and precies exchanged via VPNv6
## Label filtering
* Create ACL
* Apply with `mpls ldp neighbour [vrf NAME] address labels accept ACL`
* Will show in `show mpls ldp neighbor X.X.X.X detail` as ACL: 1
* Inbound filtering
## OSPF Sham Link
* Must be in VRF
* Must not be advertised by ospf or BGP
* Must be /32 both sides (eg loopback)
## MPLS VPN Performance Tuning
* Used to take time with IGP in MP_BGP and scanner, now is instant
* `neighbor x.x.x.x advertisement-interval VALUE` - default waits 5s, set to 0 to speed up
* PE-BGP from VPNv4 to local VRF table - default 15s, can be 5-60s
## EIGRP SOO
* For partitioned EIGRP sites
* SOO ext-comm on a backdoor router interface
* Back door link cannot be alt path to reach prefixes in other parition
* Unqie SoO per site, hence conf'd on all PEs and CEs that support same site
* IDs routes originated from a site, to prevent advertising back to source
* Can filter on SoO/per site basis
 * Conf'd at int level
* Conf'd on inbound BGP route map on PE, applied to int with `ip vrf site-map` config
* Can work on back door links
 * Define on interface of backdoor router
 * Checked on eigrp update (or reply)
* Process with EIGRP on PE/CE for each rx'd route that filters, based on following
 * Rx'd route from BGP or CE rtr contains SoO that matches SoO on int
 * prevents routing loops
 * Rx'D route from a CE that does not match SoO value
  * If route with SoO not matching, accepted
  * If route already installed but different SoO, SoO from tpology used when redist to bGP
 * No SoO
  * from int appended
# Processes
# Config
## 6PE
```
ip cef
ipv6 cef
ipv6 unicast routing
router bgp 1000
 no sync
 no bgp default ipv4-unicast
 neighbor 10.108.1.12 remote-as 65200
 neighbour 10.108.1.12 update-source Lo0
 address-family ipv6 
  neighbor 10.108.1.12 activate
  neighbor 10.108.1.12 send-label
```
## 6VPE
```
router bgp 1000
 neighbor 2001::1 remote as 65202
 address family ipv6 vrf VPE1
  neighbor 2001::1 activate
 address family vpnv6
  neighbor 1.1.1.1 activate
  neighbor 1.1.1.1 send-community extended
``` 
## OSPF Sham Link
```
router ospf 1 vrf NAME
 area 1 sham-link SADDR DADDR COST number
```
## VRF for v4 and v6
```
vrf definition NAME
 address-family ipv4
 address-family ipv6
int Fa0/0
 vrf forwarding NAME
vrf upgrade-cli - makes VRFs multi AF aware
```
## MPLS Host Routes
````
mpls ldp label
 allocate global host-routes
```
## MPLS Auto Config
**OSPF**
```
router ospf 1
 mpls ldp autoconfig [area ID]
```
* Disable per interface with `no mpls ldp igp autoconfig`
* show mpls ldp discovery [detail]
**ISIS**
```
router isis
 mpls ldp autoconfig [level-1 | level-2]
```
* As before to remove
* show isis mpls ldp
# Verification
```
show mpls ldp bindings ROUTE - Shows LIB entries, remote and local
show mpls forwarding table ROUTE - local entry, outgoing tag and int
show ip cef ROUTE internal - FIB entry
```