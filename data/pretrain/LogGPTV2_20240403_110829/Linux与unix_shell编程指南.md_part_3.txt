第一步，我们首先写下具有全部权限的模式，即7 7 7 (所有用户都具有读、写和执行权限)。
第二步，在下面一行按照u m a s k值写下相应的位，在本例中是0 0 2。
第三步，在接下来的一行中记下上面两行中没有匹配的位。这就是目录的缺省创建权限。
稍加练习就能够记住这种方法。
第四步，对于文件来说，在创建时不能具有文件权限，只要拿掉相应的执行权限比特即
可。
这就是上面的例子，其中u m a s k值为0 0 2：
1) 文件的最大权限 rwx rwx rwx (777)
2) umask值为0 0 2 - - - - - - -w-
3) 目录权限 rwx rwx r-x (775) 这就是目录创建缺省权限
4) 文件权限 rw- rw- r-- (664) 这就是文件创建缺省权限
下面是另外一个例子，假设这次u m a s k值为0 2 2：
1) 文件的最大权限 rwx rwx rwx (777)
2 )u m a s k值为0 2 2 - - - -w- -w-
3) 目录权限 rwx r-x r-x (755) 这就是目录创建缺省权限
4) 文件权限 rw- r-- r-- (644) 这就是文件创建缺省权限
1.8.2 常用的umask值
表1 - 9列出了一些u m a s k值及它们所对应的目录和文件权限。
表1-9 常用的u m a s k值及对应的文件和目录权限
u m a s k值 目 录 文 件
0 2 2 7 5 5 6 4 4
0 2 7 7 5 0 6 4 0
0 0 2 7 7 5 6 6 4
0 0 6 7 7 1 6 6 0
0 0 7 7 7 0 6 6 0
如果想知道当前的umask 值，可以使用u m a s k命令：
加入java编程群：524621833
12
第一部分 shell
下载
如果想要改变u m a s k值，只要使用u m a s k命令设置一个新的值即可：
$ umask 002
确认一下系统是否已经接受了新的u m a s k值：
在使用u m a s k命令之前一定要弄清楚到底希望具有什么样的文件 /目录创建缺省权限。否
则可能会得到一些非常奇怪的结果；例如，如果将 u m a s k值设置为6 0 0，那么所创建的文件/目
录的缺省权限就是0 6 6！
1.9 符号链接
存在两种不同类型的链接，软链接和硬链接，这里我们只讨论软链接。软链接实际上就
是一个指向文件的指针。你将会发现这种软链接使用起来非常方便。
1.9.1 使用软链接来保存文件的多个映像
下面我们就解释一下符号链接是怎么回事。比方说在 / u s r / l o c a l / a d m i n / s a l e s目录下有一个
含有销售信息的文件，销售部门的每一个人都想看这份文件。你可以在每一位用户的 $ H O M E
目录下建立一个指向该文件的链接，而不是在每个目录下拷贝一份。这样当需要更改这一文
件时，只需改变一个源文件即可。每个销售 $ H O M E目录中的链接可以起任何名字，不必和源
文件一致。
如果有很多子目录，而进入这些目录很费时间，在这种情况下链接也非常有用。可以针
对$ H O M E目录下的一个很深的子目录创建一个链接。还有，比如在安装一个应用程序时，它
的日志被保存到/ u s r / o p t / a p p / l o g目录下，如果想把它保存在另外一个你认为更方便目录下，可
以建立一个指向该目录的链接。
该命令的一般形式为：
ln [-s] source_path target_path
其中的路径可以是目录也可以是文件。让我们来看几个例子。
1.9.2 符号链接举例
假如系统中有4 0个销售和管理用户，销售用户使用一个销售应用程序，而管理用户使用
一个管理应用程序。我作为系统管理员该怎么做呢？首先删除它们各自 $ H O M E目录下的所
有. p r o f i l e文件。然后在/ u s r / l o c a l / m e n u s /目录下创建两个p r o f i l e文件，一个是s a l e s . p r o f i l e，一
个是a d m i n . p r o f i l e，它们分别为销售和管理人员提供了所需的环境，并引导他们进入相应的应
用程序。现在我在所有销售人员的$ H O M E目录下分别创建一个指向s a l e s . p r o f i l e的链接，在所
有管理人员的$ H O M E目录下分别创建一个指向a d m i n . p r o f i l e文件的链接。注意，不必在上面
命令格式中的t a rg e t _ p a t h端创建相应文件，如果不存在这样一个文件， l n命令会自动创建该文
加入java编程群：524621833
13
第1章 文件安全与权限
下载
件。下面就是我对销售人员m a t t y所做的操作。
(你所看到的可能会与此稍有差别)。
这就是我所要做的全部工作；对于管理人员也是如此。而且如果需要作任何修改的话，
只要改变销售和管理人员的p r o f i l e文件即可，而不必对4 0个用户逐一进行修改。
下面是另外一个例子。我所管理的系统中有一个网络监视器，它将日志写在 / u s r / o p t /
m o n i t o r / r e g s t a r目录下，但其他所有的日志都保存在 / v a r / a d m / l o g s目录下，这样只需在该目录
下建立一个指向原有文件的链接就可以在一个地方看所有的日志了，而不必花费很多时间分
别进入各个相应的目录。下面就是所用的链接命令：
$ ln -s /usr/opt/monitor/regstar/reg.log /var/adm/logs/monitor.log
如果链接太多的话，可以删掉一些，不过切记不要删除源文件。
不管是否在同一个文件系统中，都可以创建链接。在创建链接的时候，不要忘记在原有
目录设置执行权限。链接一旦创建，链接目录将具有权限 7 7 7或rwx rwx rwx，但是实际的原
有文件的权限并未改变。
在新安装的系统上，通常要进行这样的操作，在/ v a r目录中创建一个指向/ t m p目录的链接，
因为有些应用程序认为存在/ v a r / t m p目录(然而它实际上并不存在)，有些应用程序在该目录中
保存一些临时文件。为了使所有的临时文件都放在一个地方，可以使用 l n命令在/ v a r目录下建
立一个指向/ t m p目录的链接。
现在如果我在/ v a r目录中列文件，就能够看到刚才建立的链接：
1.10 小结
本章介绍了一些有关文件安全的基本概念。如果这些命令能够使用得当而且使用得比较
谨慎，应该不会有什么问题。手指轻轻一敲就有可能输入 chmod -R这样的命令，它将改变整
个文件系统的权限，如果没有做备份的话，没有几年的时间恐怕是无法恢复了，所以在输入
这些命令时，千万不要在手指上贴膏药！
是否使用设置了s u i d的脚本完全取决于你自己。如果使用的话，一定要确保能够监控它的
使用，而且不要以根用户身份设置s u i d。
加入java编程群：524621833
下载
第2章 使用find和xargs
有时可能需要在系统中查找具有某一特征的文件 (例如文件权限、文件属主、文件长度、
文件类型等等)。这样做可能有很多原因。可能出于安全性的考虑，或是一般性的系统管理任
务，或许只是为了找出一个不知保存在什么地方的文件。 F i n d是一个非常有效的工具，它可
以遍历当前目录甚至于整个文件系统来查找某些文件或目录。
在本章中，我们介绍以下内容：
• find命令选项。
• 使用f i n d命令不同选项的例子。
• 配合f i n d使用x a rg s命令的例子。
由于f i n d具有如此强大的功能，所以它的选项也很多，其中大部分选项都值得我们花时间
来了解一下。即使系统中含有网络文件系统 ( N F S )，f i n d命令在该文件系统中同样有效，只要
你具有相应的权限。
在运行一个非常消耗资源的f i n d命令时，很多人都倾向于把它放在后台执行，因为遍历一
个大的文件系统可能会花费很长的时间(这里是指3 0 G字节以上的文件系统)。
F i n d命令的一般形式为：
find pathname -options [-print -exec -ok]
让我们来看看该命令的参数：
pathname find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。
-print find命令将匹配的文件输出到标准输出。
-exec find命令对匹配的文件执行该参数所给出的 s h e l l命令。相应命令的形式为' c o m m -
and' {} \;，注意{ }和\；之间的空格。
-ok 和- e x e c的作用相同，只不过以一种更为安全的模式来执行该参数所给出的 s h e l l命令，
在执行每一个命令之前，都会给出提示，让用户来确定是否执行。
2.1 find命令选项
f i n d命令有很多选项或表达式，每一个选项前面跟随一个横杠 -。让我们先来看一下该命
令的主要选项，然后再给出一些例子。
-name 按照文件名查找文件。
-perm 按照文件权限来查找文件。
-prune 使用这一选项可以使f i n d命令不在当前指定的目录中查找，如果同时使用了 - d e p t h
选项，那么- p r u n e选项将被f i n d命令忽略。
-user 按照文件属主来查找文件。
-group 按照文件所属的组来查找文件。
-mtime -n +n 按照文件的更改时间来查找文件，- n表示文件更改时间距现在n天以内，+ n
表示文件更改时间距现在n天以前。F i n d命令还有- a t i m e和- c t i m e选项，但它们都和- m t i m e选项
加入java编程群：524621833
15
第2章 使用f i n d和x a rg s
下载
相似，所以我们在这里只介绍- m t i m e选项。
-nogroup 查找无有效所属组的文件，即该文件所属的组在/ e t c / g r o u p s中不存在。
-nouser 查找无有效属主的文件，即该文件的属主在/ e t c / p a s s w d中不存在。
-newer file1 ! file2 查找更改时间比文件f i l e 1新但比文件f i l e 2旧的文件。
-type 查找某一类型的文件，诸如：
b - 块设备文件。
d - 目录。
c - 字符设备文件。
p - 管道文件。
l - 符号链接文件。
f - 普通文件。
-size n[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。
-depth 在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。
-fstype 查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件
/ e t c / f s t a b中找到，该配置文件中包含了本系统中有关文件系统的信息。
-mount 在查找文件时不跨越文件系统m o u n t点。
-follow 如果f i n d命令遇到符号链接文件，就跟踪至链接所指向的文件。
-cpio 对匹配的文件使用c p i o命令，将这些文件备份到磁带设备中。
2.1.1 使用name选项
文件名选项是f i n d命令最常用的选项，要么单独使用该选项，要么和其他选项一起使用。
可以使用某种文件名模式来匹配文件，记住要用引号将文件名模式引起来。
不管当前路径是什么，如果想要在自己的根目录 $ H O M E中查找文件名符合* . t x t的文件，
使用~作为' p a t h n a m e参数，波浪号~代表了你的$ H O M E目录。
$ find ~ -name "*.txt" -print
想要在当前目录及子目录中查找所有的‘* . t x t’文件，可以用：
$ find . -name "*.txt" -print
想要的当前目录及子目录中查找文件名以一个大写字母开头的文件，可以用：
$ find . -name "[A-Z]*" -print
想要在/ e t c目录中查找文件名以h o s t开头的文件，可以用：
$ find /etc -name "host*" -print
想要查找$ H O M E目录中的文件，可以用：
$ find ~ -name "*" -pri或ntf ind . -print
要想让系统高负荷运行，就从根目录开始查找所有的文件。如果希望在系统管理员那里
保留一个好印象的话，最好在这么做之前考虑清楚！
$ find / -name "*" -print
如果想在当前目录查找文件名以两个小写字母开头，跟着是两个数字，最后是 * . t x t的文
件，下面的命令就能够返回名为a x 3 7 . t x t的文件：
加入java编程群：524621833
16
第一部分 shell
下载
$ find . -name "[a-z][a-z][0--9][0--9].txt" -print
2.1.2 使用perm选项
如果希望按照文件权限模式来查找文件的话，可以采用 - p e r m选项。你可能需要找到所有
用户都具有执行权限的文件，或是希望查看某个用户目录下的文件权限类型。在使用这一选
项的时候，最好使用八进制的权限表示法。
为了在当前目录下查找文件权限位为 7 5 5的文件，即文件属主可以读、写、执行，其他用
户可以读、执行的文件，可以用：
$ find . -perm 755 -print
如果希望在当前目录下查找所有用户都可读、写、执行的文件（要小心这种情况），我们
可以使用f i n d命令的- p e r m选项。在八进制数字前面要加一个横杠 -。在下面的命令中- p e r m代
表按照文件权限查找，而‘0 0 7’和你在c h m o d命令的绝对模式中所采用的表示法完全相同。
$ find . -perm -007 -print
2.1.3 忽略某个目录
如果在查找文件时希望忽略某个目录，因为你知道那个目录中没有你所要查找的文件，
那么可以使用- p r u n e选项来指出需要忽略的目录。在使用- p r u n e选项时要当心，因为如果你同
时使用了- d e p t h选项，那么- p r u n e选项就会被f i n d命令忽略。
如果希望在/ a p p s目录下查找文件，但不希望在/ a p p s / b i n目录下查找，可以用：
$ find /apps -name "/apps/bin" -prune -o -print
2.1.4 使用user和nouser选项
如果希望按照文件属主查找文件，可以给出相应的用户名。例如，在 $ H O M E目录中查找
文件属主为d a v e的文件，可以用：
$ find ~ -user dave -print
在/ e t c目录下查找文件属主为u u c p的文件：