title:POSTER: Proactive Blacklist Update for Anti-Phishing
author:Lung-Hao Lee and
Kuei-Ching Lee and
Hsin-Hsi Chen and
Yuen-Hsien Tseng
POSTER: Proactive Blacklist Update for Anti-Phishing 
Lung-Hao Lee1,2, Kuei-Ching Lee1,2, Hsin-Hsi Chen1 and Yuen-Hsien Tseng2 
1Department of Computer Science and Information Engineering, National Taiwan University, Taipei, Taiwan 
2Information Technology Center, National Taiwan Normal University, Taipei, Taiwan 
{d01922005, p00922002, hhchen}@ntu.edu.tw, PI:EMAIL 
that 
the  blacklists. 
ABSTRACT  
This study explores the  existing  blacklists  to  discover  suspected 
URLs  that  refer  to  on-the-fly  phishing  threats  in  real  time.  We 
propose  a  PhishTrack  framework 
includes  redirection 
tracking  and  form  tracking  components  to  update  the  phishing 
blacklists.  It  actively  finds  phishing  URLs  as  early  as  possible. 
Experimental  results  show  that  our  proactive  phishing  update 
method  is  an  effective  and  efficient  approach  for  improving  the 
coverage  of 
is 
complementary  to  the  existing  anti-phishing  techniques  for 
providing secured web surfing.  
Categories and Subject Descriptors 
H.3.3 [Information Search and Retrieval]: Information filtering.  
General Terms 
Experimentation, Human Factors, Security. 
Keywords 
Phishing threat detection; cyber crime; web security 
In  practice,  our  solution 
1.  INTRODUCTION 
Phishing is a cyber crime employing both social engineering and 
fraudulent  techniques  to  steal  users’  personal  identity  data  and 
financial account credentials. Phishing attacks are pervasive and 
sophisticated. They can be spread through spoofed emails, instant 
messaging,  social  networking  sites,  and  massively  multiplayers 
games [6]. Criminals usually create phishing websites by exactly 
copying  the  legitimate  ones  or  slightly  modifying  their  page 
content.  Content-based  features  have  been  extracted  to  detect 
phishing  URLs  using  online 
learning  [3].  A  feature-rich 
framework  has  been  proposed  to  detect  phishing  websites  [12]. 
Lexical  and  host-based  features  have  been 
learned  from 
suspicious  URLs  to  distinguish  phishing  web  pages  [9].  An 
image-based scheme has been presented for anti-phishing [4]. The 
effectiveness of several machine-learning techniques on phishing 
detection has been compared [2]. Different from formulating the 
discriminative  patterns  between  legitimate  and  phishing  web 
pages, users’ behavioral response  to  phishing  risk  has  also  been 
surveyed [5]. The access contexts in which users fall into phishing 
situations  have  been  explored  from  behavioral  perspective  [7]. 
Users’  browsing  behaviors  that  confront  phishing  dangers  are 
studied for context-aware phishing detection [8].  
Permission  to  make  digital  or  hard  copies  of  part  or  all  of  this  work  for 
personal or classroom use is granted without fee provided that copies are not 
made or distributed for profit or commercial advantage and that copies bear 
this notice and the full citation on the first page. Copyrights for third-party 
components  of  this  work  must  be  honored.  For  all  other  uses,  contact  the 
Owner/Author. Copyright is held by the owner/author(s) 
.CCS'14, November 3-7, 2014, Scottsdale, AZ, USA 
ACM 978-1-4503-2957-6/14/11. 
http://dx.doi.org/10.1145/2660267.2662362  
Phishing URLs tend to look like the original legitimate ones. For 
example,  the  domain  name  “www.paypalsicher.eu”  was  verified 
as  a  phishing  website  of  www.paypal.com.  The  URL-blocking 
mechanism rejects any requests to URLs in a blacklist and accepts 
requests  to  URLs  that  are  not  blacklisted.  Blacklisting  has  the 
advantage  of  consuming  fewer  computational  resources  for 
filtering  dangerous  accesses.  Nevertheless, 
the  dynamic 
characteristics of the changing web require such blacklists to be 
constantly updated for sustainable blocking performance. A large 
scale  of  phishing  pages  has  been  verified  empirically  for 
investigating  their  life  spans.  Phishing  URLs  usually  survive 
within  a  very  short  time  period  [1].  How  to  find  suspected 
phishing  threats  as  early  as  possible  is  a  challenging  issue. 
Different from previous work that develops automatic methods to 
detect  phishing  pages,  we  focus  on  updating  a  given  blacklist 
actively  to  discover  on-the-fly  phishing  URLs  in  real  time  for 
providing secured web surfing. 
2.  PROACTIVE BLACKLIST UPDATE 
Phishing  blacklists  are  usually  generated  in  combination  of 
procedures  that  involve  automatic  detection  mechanism  and 
human intervention. Although blacklists provide the simplicity in 
design  and  implementation  by  browsers,  the  coverage  of  a 
blacklist plays an important role in keeping up with the changing 
trails  of  phishing  treats.  Phishing  criminals  employ  many 
sophisticated  techniques  to  evade  blacklisting.  It  is  inherently 
difficult  to  predict  the  suspected  URLs  to  be  included  in  the 
blacklists  exhaustively.  The  research  problem  in  this  study  is 
formulated  as  follows.  We  focus  on  actively  improving  the 
resilience  and  efficiency  of  an  existing  blacklist  by  discovering 
on-the-fly  phishing  URLs  as  early  as  possible  for  fighting  the 
phishing crimes. 
Criminals usually create many temporary URLs to host fraudulent 
page content for their phishing purposes. These URLs are invalid 
in  a  rapidly  changing  fashion.  We  adopt  a  process  to  eliminate 
unsuitable URLs in the current blacklists and retain the remaining 
ones as seed URLs to reflect the on-the-fly web environment. A 
DNS lookup is conducted firstly to filter out non-resolved URLs. 
Then,  a  connection  is  established  to  request  page  content  of 
resolved  URLs.  We  check  the  returned  HTTP  status  code  to 
verify whether their content can be successfully accessed. Those 
URLs referring to inaccessible content are also removed. Finally, 
we  further  examine  the  accessible  content.  In  our  observations, 
the  page  content  contains  text  descriptions  such  as  “account 
suspended,”  “temporary  unavailable,”  and  “access  restrictions” 
may be phishing URLs that have been reported and blocked. We 
also  discard  those  URLs  that  do  not  have  threats  at  the  access 
time. Only the remaining URLs that pass the above examinations 
will be regarded as seed URLs for blacklist update. We propose 
the  architecture  of  PhishTrack,  which  consists  of  the  following 
two major components to predict possible phishing URLs. 
1448(1)  Redirection Tracking: URL redirection techniques are often 
adopted  for  referring  to  phishing  web  content,  e.g.,  the 
location field in HTTP return header, the refresh attribute of 
HTML    tag,  and  the  values  of  windows.location  or 
location.href  designed  in  JavaScript  language.  PhishTrack 
collects  the  redirection  URLs  extracted  from  the  phishing 
seeds to improve the incompleteness of an existing blacklist. 
(2)  Form  Tracking:  Phishing  pages  always  provide  forms  for 
gathering users’ valuable data. In PhishTrack, we input fake 
data  to  pass  validation  examination  for  tracking  triggered 
URLs that are described in action attribute of HTML  
tag. We follow the phishing forms iteratively for discovering 
newborn phishing URLs. 
3.  PERFORMANCE EVALUATION 
The  phishing  data  came  from  the  PhishTank  [10],  a  free 
community website where everyone can submit, verify and track 
the phishing URLs. The phishing data released on 6th April 2014 
was  downloaded  as  our  original  blacklist  for  discovering 
suspected  phishing  URLs.  We  took  the  PayPal,  the  top-1 
identified  brand  that  was  fraudulently  represented  as  phishing 
pages  in  terms  of  popularity,  as  a  target  to  measure  the 
effectiveness  of  our  method.  In  total,  3,916  phishing  URLs  that 
masquerade as official PayPal were collected in our seed data.  
The  following  two  phishing  blacklist  update  approaches  were 
compared to demonstrate their performance.  
(1)  PhishNet  [11]:  This  approach  adopts  5  heuristics,  i.e., 
replacing TLDs (H1), IP address equivalence (H2), directory 
structure similarity (H3), query string substitution (H4), and 
brand name equivalence (H5), to enumerate combinations of 
known  phishing  sites  for  predicting  new  phishing  URLs. 
Typical  URLs 
the  structure: 
http://domain.TLDs/directory/filename?query_string.  These 
heuristics  involve  interchanging  the  field  values  lexically 
observed  from  the  collected  URLs.  We  had  collected 
phishing  URLs  from  PhishTank  within  a  time  period  of  a 
week  starting  from  30th  March  to  5th  April  2014  for 
observing possible substitution strings. After generating  the 
suspected  URLs,  a  DNS  lookup  was  conducted  to  remove 
those  that  cannot  be  resolved.  Finally,  a  publicly  available 
detection  tool  (http://www.webconfs.com)  was  used  to 
analyze  content  similarity  between  original  seeds  and  URL 
candidates. If the candidates’ content has sharp resemblance 
above 90%, the candidates’ URLs were added to enhance the 
coverage of the original blacklist.  
the  blacklist  have 
in 
(2)  PhishTrack: This is the approach proposed in this paper. It 
is composed of redirection tracking (T1) and form tracking 
(T2) for phishing blacklist update.  
We  submitted  newly  found  URLs  to  PhishTank  for  category 
verification. Volunteers participate in voting suspected URLs as a 
phish  or  benign  by  examining  the  page  content  manually.  Each 
submission  needs  enough  votes  to  be  confirmed  or  denied  as 
phish.  The  platform  moderators  labeled  those  URLs  that  do  not 
have  final  category  decision,  but  could  not  be  accessed 
permanently  for  any  reasons,  as  unavailable.    We  adopt  three 
metrics for performance evaluation. The numbers of phishing and 
non-phishing  URLs  are  denoted  as  #Phish  and  #NotPhish, 
respectively.  The number of unavailable cases, denoting as #N.A., 
shows how many URLs are offline before category assurance. 
treats 
Table  1  shows  the  results.  The  performance  difference  between 
the  two  approaches  was  statistically  significant  (p<0.01),  no 
matter  which  metric  was  adopted.  In  PhishNet  approach,  the 
heuristic  H5,  which 
the  masqueraded  brand  as  an 
equivalence class for lexical substitution, did not have any effects. 
The  possible  reason  is  that  phishing  criminals  did  not  have  the 
same URL structure for all popular targets to avoid being found 
easily. Besides, there are many unavailable cases generated by the 
other  four  heuristics  (H1~H4).  It  took  about  51  hours  to 