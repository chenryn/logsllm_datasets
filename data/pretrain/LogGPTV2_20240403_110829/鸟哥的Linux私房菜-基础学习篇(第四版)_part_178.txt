这些服务来储存系统的讯息。Linux 核心的 syslog 认识的服务类型主要有下面这些： （可使用 man 3 syslog 查询到相关的信息，或查询
syslog.h 这个文件来了解的！）
相对序号 服务类别 说明
0 kern（kernel） 就是核心 （kernel） 产生的讯息，大部分都是硬件侦测以及核心功能的启用
1 user 在使用者层级所产生的信息，例如后续会介绍到的用户使用 logger 指令来记录登录文件的功能
2 mail 只要与邮件收发有关的讯息记录都属于这个；
3 daemon 主要是系统的服务所产生的信息，例如 systemd 就是这个有关的讯息！
4 auth 主要与认证/授权有关的机制，例如 login, ssh, su 等需要帐号/密码的咚咚；
5 syslog 就是由 syslog 相关协定产生的信息，其实就是 rsyslogd 这支程序本身产生的信息啊！
6 lpr 亦即是打印相关的讯息啊！
7 news 与新闻群组服务器有关的东西；
8 uucp 全名为 Unix to Unix Copy Protocol，早期用于 unix 系统间的程序数据交换；
9 cron 就是例行性工作调度 cron/at 等产生讯息记录的地方；
10 authpriv 与 auth 类似，但记录较多帐号私人的信息，包括 pam 模块的运行等！
11 ftp 与 FTP 通讯协定有关的讯息输出！
16~23 local0 ~ local7 保留给本机用户使用的一些登录文件讯息，较常与终端机互动。
上面谈到的都是 Linux 核心的 syslog 函数自行制订的服务名称，软件开发商可以通过调用上述的服务名称来记录他们的软件。 举例来
说， sendmail 与 postfix 及 dovecot 都是与邮件有关的软件，这些软件在设计登录文件记录时，都会主动调用 syslog 内的 mail 服务名称
（LOG_MAIL）。所以上述三个软件 （sendmail, postfix, dovecot） 产生的讯息在 syslog 看起来，就会“是 mail ”类型的服务了。我们可以将这
个概念绘制如下面的图示来理解：
图18.2.1、syslog 所制订的服务名称与软件调用的方式
另外，每种服务所产生的数据量其实差异是很大的，举例来说， mail 的登录文件讯息多的要命， 每一封信件进入后， mail 至少需要记
录“寄信人的信息；与收信者的讯息”等等； 而如果是用来做为工作站主机的，那么登陆者 （利用 login 登录主机处理事情） 的数量一定不少，
那个 authpriv 所管辖的内容可就多的要命了。
为了让不同的信息放置到不同的文件当中，好让我们分门别类的进行登录文件的管理， 所以啰，将各种类别的服务之登录文件，记录在
不同的文件里面，就是我们 /etc/rsyslog.conf 所要作的规范了！
讯讯息息等等级级
同一个服务所产生的讯息也是有差别的，有启动时仅通知系统而已的一般讯息 （information）， 有出现还不至于影响到正常运行的警
告讯息 （warn） ，还有系统硬件发生严重错误时，所产生的重大问题讯息 （error 等等）； 讯息到底有多少种严重的等级呢？基本上，Linux
核心的 syslog 将讯息分为七个主要的等级，根据 syslog.h 的定义，讯息名称与数值的对应如下：
等级数值 等级名称 说明
7 debug 用来 debug （除错） 时产生的讯息数据；
6 info 仅是一些基本的讯息说明而已；
5 notice 虽然是正常信息，但比 info 还需要被注意到的一些信息内容；
warning 警示的讯息，可能有问题，但是还不至于影响到某个 daemon 运行的信息；基本上， info, notice, warn 这三
4
（warn） 个讯息都是在告知一些基本信息而已，应该还不至于造成一些系统运行困扰；
err 一些重大的错误讯息，例如配置文件的某些设置值造成该服务服法启动的信息说明， 通常借由 err 的错误告
3
（error） 知，应该可以了解到该服务无法启动的问题呢！
2 crit 比 error 还要严重的错误信息，这个 crit 是临界点 （critical） 的缩写，这个错误已经很严重了喔！
1 alert 警告警告，已经很有问题的等级，比 crit 还要严重！
emerg 疼痛等级，意指系统已经几乎要死机的状态！ 很严重的错误信息了。通常大概只有硬件出问题，导致整个
0
（panic） 核心无法顺利运行，就会出现这样的等级的讯息吧！
基本上，在 0（emerg） 到 6（info） 的等级之间，等级数值越高代表越没事，等级靠近 0 则代表事情大条了！除了 0 到 6 之外还有两
个比较特殊的等级， 那就是 debug（错误侦测等级） 与 none （不需登录等级） 两个，当我们想要作一些错误侦测，或者是忽略掉某些服务
的信息时， 就用这两个咚咚吧！
特别留意一下在讯息等级之前还有 [.=!] 的链接符号喔！他代表的意思是这样的：
. ：代表“比后面还要严重的等级 （含该等级） 都被记录下来”的意思，例如： mail.info 代表只要是 mail 的信息，而且该信息等级严重于
info （含 info 本身）时，就会被记录下来的意思。
.=：代表所需要的等级就是后面接的等级而已， 其他的不要！
.!：代表不等于， 亦即是除了该等级外的其他等级都记录。
一般来说，我们比较常使用的是“.”这个链接符号啦！^_^
讯讯息息记记录录的的文文件件名名或或设设备备或或主主机机
再来则是这个讯息要放置在哪里的设置了。通常我们使用的都是记录的文件啦！但是也可以输出到设备呦！ 例如打印机之类的！也可以
记录到不同的主机上头去呢！下面就是一些常见的放置处：
文件的绝对路径：通常就是放在 /var/log 里头的文件啦！
打印机或其他：例如 /dev/lp0 这个打印机设备
使用者名称：显示给使用者啰！
远端主机：例如 @study.vbird.tsai 当然啦，要对方主机也能支持才行！
*：代表“目前在线上的所有人”，类似 wall 这个指令的意义！
服服务务、、daemon 与与函函数数名名称称
看完上面的说明，相信你一定会越来越迷煳！啊！怎么会有 syslog, rsyslogd, rsyslog.service！见鬼～名称都不相同！那是啥东西？ 基
本上，这几个东西你应该要这样看：
这个是 Linux 核心所提供的登录文件设计指引，所有的要求大概都写入道一个名为 syslog.h 的头文件案中。如果你想
syslog 要开发与登录文件有关的软件， 那你就得要依循这个 syslog 函数的要求去设计才行！可以使用 man 3 syslog 去查询
一下相关的数据！
rsyslogd 为了要达成实际上进行讯息的分类所开发的一套软件，所以，这就是最基本的 daemon 程序！
rsyslog.service 为了加入 systemd 的控制，因此 rsyslogd 的开发者设计的启动服务脚本设置！
这样简单的分类，应该比较容易了解名称上面的意义了吧？早期 CentOS 5.x 以前，要达成 syslog 的功能是由一只名为 syslogd 的
daemon 来完成的， 从 CentOS 6 以来 （包含 CentOS 7） 则是通过 rsyslogd 这个 daemon 啰！
rsyslog.conf 语语法法练练习习
基本上，整个 rsyslog.conf 配置文件的内容参数大概就只是这样而已，下面我们来思考一些例题，好让你可以更清楚的知道如何设置
rsyslogd 啊！
例题：
如果我要将我的 mail 相关的数据给他写入 /var/log/maillog 当中，那么在 /etc/rsyslog.conf 的语法如何设计？
答：
基本的写法是这样的：
mail.info /var/log/maillog
注意到上面喔，当我们的等级使用 info 时，那么“任何严重于 info 等级（含 info 这个等级）之上的讯息， 都会被写入到
后面接的文件之中！”这样可以了解吗？也就是说，我们可以将所有 mail 的登录信息都记录在 /var/log/maillog 里面的意
思啦！
例题：
我要将新闻群组数据 （news） 及例行性工作调度 （cron） 的讯息都写入到一个称为 /var/log/cronnews 的文件中，但是
这两个程序的警告讯息则额外的记录在 /var/log/cronnews.warn 中， 那该如何设置我的 rsyslog.conf 呢？
答：
很简单啦！既然是两个程序，那么只好以分号来隔开了，此外，由于第二个指定文件中，我只要记录警告讯息， 因此设
置上需要指定“.=”这个符号，所以语法成为了：
news.*;cron.* /var/log/cronnews
news.=warn;cron.=warn /var/log/cronnews.warn
上面那个“.=”就是在指定等级的意思啦！由于指定了等级，因此，只有这个等级的讯息才会被记录在这个文件里面呢！
此外你也必须要注意，news 与 cron 的警告讯息也会写入 /var/log/cronnews 内喔！
例题：
我的 messages 这个文件需要记录所有的信息，但是就是不想要记录 cron, mail 及 news 的信息，那么应该怎么写才好？
答：
可以有两种写法，分别是：
*.*;news,cron,mail.none /var/log/messages
*.*;news.none;cron.none;mail.none /var/log/messages
使用“,”分隔时，那么等级只要接在最后一个即可，如果是以“;”来分的话， 那么就需要将服务与等级都写上去啰！这样会
设置了吧！
CentOS 7.x 默默认认的的 rsyslog.conf 内内容容
了解语法之后，我们来看一看 rsyslogd 有哪些系统服务已经在记录了呢？就是瞧一瞧 /etc/rsyslog.conf 这个文件的默认内容啰！ （注
意！如果需要将该行做为注解时，那么就加上 # 符号就可以啦）
# 来自 CentOS 7.x 的相关数据
[root@study ~]# vim /etc/rsyslog.conf
11 #kern.* /dev/console
22 *.info;mail.none;authpriv.none;cron.none /var/log/messages
33 authpriv.* /var/log/secure
44 mail.* -/var/log/maillog
55 cron.* /var/log/cron
66 *.emerg :omusrmsg:*
77 uucp,news.crit /var/log/spooler
88 local7.* /var/log/boot.log
上面总共仅有 8 行设置值，每一行的意义是这样的：
1. #kern.*：只要是核心产生的讯息，全部都送到 console（终端机） 去。console 通常是由外部设备连接到系统而来， 举例来说，很多封闭
型主机 （没有键盘、屏幕的系统） 可以通过连接 RS232 连接口将讯息传输到外部的系统中， 例如以笔记本电脑连接到封闭主机的
RS232 插口。这个项目通常应该是用在系统出现严重问题而无法使用默认的屏幕观察系统时， 可以通过这个项目来连接取得核心的讯
息。[1]
2. *.info;mail.none;authpriv.none;cron.none：由于 mail, authpriv, cron 等类别产生的讯息较多， 且已经写入下面的数个文件中，因此在
/var/log/messages 里面就不记录这些项目。除此之外的其他讯息都写入 /var/log/messages 中。这也是为啥我们说这个 messages 文件很
重要的缘故！
3. authpriv.*：认证方面的讯息均写入 /var/log/secure 文件；
4. mail.*：邮件方面的讯息则均写入 /var/log/maillog 文件；
5. cron.*：例行性工作调度均写入 /var/log/cron 文件；
6. *.emerg：当产生最严重的错误等级时，将该等级的讯息以 wall 的方式广播给所有在系统登陆的帐号得知， 要这么做的原因是希望在线的
使用者能够赶紧通知系统管理员来处理这么可怕的错误问题。
7. uucp,news.crit：uucp 是早期 Unix-like 系统进行数据传递的通讯协定，后来常用在新闻群组的用途中。 news 则是新闻群组。当新闻群组
方面的信息有严重错误时就写入 /var/log/spooler 文件中；
8. local7.*：将本机开机时应该显示到屏幕的讯息写入到 /var/log/boot.log 文件中；
在上面的第四行关于 mail 的记录中，在记录的文件 /var/log/maillog 前面还有个减号“ - ”是干嘛用的？由于邮件所产生的讯息比较多，因
此我们希望邮件产生的讯息先储存在速度较快的内存中 （buffer） ，等到数据量够大了才一次性的将所有数据都填入磁盘内，这样将有助于登