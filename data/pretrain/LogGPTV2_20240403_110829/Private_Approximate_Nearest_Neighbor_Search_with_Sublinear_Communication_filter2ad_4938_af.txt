delay) as a function of the number of tables and number of multi-
probes performed per table. Probes do not increase computation time
but do increase communication resulting in increased latency (see
our PBR scheme; Section V-A). Server parallelization factor is set to
equal the number of hash tables. Shaded region represents the 95%
conﬁdence interval (occasionally invisible).
10
100
50
1
5
3 kB 10 kB
18 kB 87 kB 172 kB
Multi-probes:
Communication:
TABLE IV: Communication between the client and both servers per
hash table in terms of the number of multi-probes performed. We set
n = 40 for the DPF domain.
overhead is determined by three factors: (1) the size of the
DPF keys, (2) the number of hash tables L, and (3) the number
of multi-probes performed per table (recall Section V-A). The
size of each DPF key is proportional to n, where 2n is the
universal hash range (see Section V-A and Remark 1). We set
n = 30 for MNIST, n = 35 for SIFT and GIST, and n = 40 for
DEEP1B. DPF key size is logarithmic in N, and each choice
of n is ﬁxed to minimize universal hash collisions and achieve
this bound. This communication is multiplied by the number
of tables L and the number of probes to calculate the total
communication required to perform an ANN query.
C. Comparison to related work
To the best of our knowledge, all existing works on privacy-
preserving similarity search (with the exception of [78, 87]
which use fully-homomorphic encryption) only consider honest-
but-curious clients and servers and require many rounds of
communication. While generic techniques for upgrading to
active security in two-party computation exist [59], they are
computationally expensive and often considered impractical.
Our protocol is the ﬁrst to assume fully malicious clients, which
solves the challenge left open by prior approaches [26]. To the
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:59 UTC from IEEE Xplore.  Restrictions apply. 
12922
151020304050Number of hash tables05101520Client latency (seconds)DEEP1B datasetProbes110100500151020304050Number of hash tables0246Client latency (seconds)GIST datasetProbes110100500151020304050Number of hash tables0246Client latency (seconds)SIFT datasetProbes110100500151020304050Number of hash tables01234Client latency (seconds)MNIST datasetProbes110100Parallelized1 CPUover SANNS are primarily in terms of communication costs.
However, we incur a modest latency overhead on very high
bandwidth networks (a setting that is highly favorable to
SANNS). Our latency is between 1.3–5.65× greater on the
“localhost” network. On the “fast network”, our protocol is
1.1–12.9× faster compared to SANNS. Our communication
cost is a factor of 1180–3250× less in comparison to SANNS.
As a result, over slower networks, e.g., average mobile network
supporting 12 Mbps [79], SANNS would incur latency ranging
between 19 minutes (for SIFT) to an hour (for DEEP1B), just
from the network delay. Over such networks, the latency of
Protocol 1 is expected to be several orders of magnitude faster
in comparison. Additionally, because bandwidth costs can be
upwards of $0.02 per GB [12], while CPU cost is around
$0.2 per hour, our protocol is monetarily cheaper (per query).
SANNS costs 4¢–11¢ per query just for bandwidth alone. In
contrast, our protocol costs up to 0.02¢ per query (a 200–550×
reduction in total cost).
IX. RELATED WORK
Existing works on privacy-preserving similarity search either
use heavy cryptographic tools (e.g., general secure function
evaluation instantiated using two-party computation and fully-
homomorphic encryption) or provide poor privacy guarantees
for either the client or the database.
Two-party computation based approaches.
Indyk and
Woodruff [50] investigate nearest neighbor search between
√
two parties under the Euclidean distance metric. They show a
˜O(
N ) communication protocol for ﬁnding an approximate
near (as opposed to nearest) neighbor to a query. Their tech-
niques rely on black-box two-party computation. This makes
them only asymptotically efﬁcient (they do not provide an
implementation or any concrete efﬁciency estimate). However,
their protocol shares some similarity to ours. Speciﬁcally, they
tolerate some precisely quantiﬁed leakage, which they argue
can be a suitable compromise in favor of efﬁciency gains.
More recently, Chen et al. [26] design and evaluate SANNS,
a system for approximate nearest neighbor search that uses
oblivious RAM, garbled circuits, and homomorphic encryp-
tion. Their solution combines heuristic k-means clustering
techniques to reduce overhead of two-party computation
of computing oblivious comparisons by a constant factor
(i.e., 1
k ). However, they still require asymptotically linear
communication, since k is typically small. They leave open
the possibility of using locality-sensitive hashing to provide
provable guarantees.
Qi and Atallah [70] present a protocol for privacy-preserving
nearest neighbor search in the honest-but-curious setting with
two parties. In contrast to us, they assume each party (i.e.,
server) has a database that is private from the other party.
Queries are computed over the union of both databases.
Their protocol uses secure two-party computation to compute
oblivious comparisons and requires linear communication in
the database size. Qi and Atallah [70] do not provide an
implementation or any concrete efﬁciency estimates for their
protocol.
Fully-homomorphic encryption based approaches. Shaul
et al. [78] present a protocol based on fully-homomorphic
encryption, requiring several hours of computation time to
answer queries over small (1000 item) databases. While this
results in both a single-round protocol and tolerates malicious
clients, it is not practical for large databases. Their implementa-
tion requires between three and eight hours (parallelized across
16 cores) to compute the nearest neighbors on small datasets
ranging between 1,000 and 4,000 feature vectors.
Zuber and Sirdey [87] implement a secure nearest neighbor
classiﬁer using (threshold) fully-homomorphic encryption with
applications to collaborative learning and nearest neighbor
search. Their approach requires over one hour of server
processing time to compute a query answer over a small
database of approximately 500 feature vectors. As such, their
protocol is not scalable beyond databases containing a few
thousand feature vectors.
Partially-private approaches. Not directly related to privacy,
Aumüller et al. [11] introduce distance-sensitive hashing which
they show can be beneﬁcial to reducing information leakage
between hashes. However, their security guarantees are not
formally deﬁned and their approach provides a trade-off
between privacy and accuracy, leaking information about the
client’s query and the database simultaneously. Riazi et al. [75]
likewise explore LSH as a means of trading-off privacy with
accuracy, with more accurate results revealing more information
on both the query and the database. They make use of two-party
computation to instantiate a garbled circuit for the purpose of
securely evaluating locality-sensitive hashes without revealing
the description of the hash function. While this reduces some
leakage, their approach still reveals information on the query
and the database.
In a similar vein, Boufounos and Rane [19] develop a binary
embedding (locality-sensitive hash) that preserves privacy when
ﬁnding similar feature vectors in a remote database. Their
technique is less general compared to [11, 75]. Boufounos
and Rane [19] do not provide a formal security analysis of
their nearest neighbor search protocol based on their secure
embedding. Analyzing their protocol, we found that (1) some
partial information on the query is inadvertently leaked to the
server, and (2) the client learns the distances from its query
to all near-neighbors, resulting in signiﬁcant database leakage.
No implementation or any concrete runtime estimates were
provided for their protocol.
X. CONCLUSION
We presented a lightweight privacy-preserving protocol for
approximate nearest neighbor search in the two-server model.
Our protocol requires only one round and a few megabytes
of communication between the client and servers. We do not
require servers to communicate when answering queries and
guarantees out-of-the-box security against malicious clients.
In our evaluation (Section VIII), we show that our protocol
remains practical with large databases (10M items), even on
high-latency, low-bandwidth networks and lightweight clients
(e.g., low-end smartphones).
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:59 UTC from IEEE Xplore.  Restrictions apply. 
13923
XI. ACKNOWLEDGEMENTS
We thank Kyle Hogan and Zachary Newman for helpful
feedback on early drafts of this paper. We would also like
to thank the anonymous reviewers and our shepherd for their
insightful suggestions that helped us to improve the paper.
REFERENCES
[1] Source code. https://github.com/sachaservan/private-ann.
[2] Surya Addanki, Kevin Garbe, Eli Jaffe, Rafail Ostrovsky,
and Antigoni Polychroniadou. Prio+: Privacy preserving
aggregate statistics via boolean shares. Cryptology ePrint
Archive, 2021.
[3] Thomas D Ahle, Martin Aumüller, and Rasmus Pagh.
Parameter-free locality sensitive hashing for spherical
In Proceedings of the Twenty-Eighth
range reporting.
Annual ACM-SIAM Symposium on Discrete Algorithms,
pages 239–256. SIAM, 2017.
[4] Alexandr Andoni and Piotr Indyk. Near-optimal hashing
algorithms for approximate nearest neighbor in high
dimensions. In 2006 47th Annual IEEE Symposium on
Foundations of Computer Science (FOCS’06), pages 459–
468, 2006. doi: 10.1109/FOCS.2006.49.
[5] Alexandr Andoni, Piotr Indyk, Thijs Laarhoven, Ilya
Practical and
arXiv preprint
Razenshteyn, and Ludwig Schmidt.
optimal LSH for angular distance.
arXiv:1509.02897, 2015.
[6] Alexandr Andoni, Piotr Indyk, and Ilya Razenshteyn.
Approximate nearest neighbor search in high dimensions.
In Proceedings of the International Congress of Mathe-
maticians: Rio de Janeiro 2018, pages 3287–3318. World
Scientiﬁc, 2018.
[7] Sebastian Angel and Srinath Setty. Unobservable com-
munication over fully untrusted infrastructure. In 12th
USENIX Symposium on Operating Systems Design and
Implementation (OSDI 16), pages 551–569, 2016.
[8] Sebastian Angel, Hao Chen, Kim Laine, and Srinath
Setty. PIR with compressed queries and amortized query
processing. In 2018 IEEE Symposium on Security and
Privacy (SP), pages 962–979. IEEE, 2018.
[9] Gilad Asharov, Shai Halevi, Yehuda Lindell, and Tal
Rabin. Privacy-preserving search of similar patients in
genomic data. Proc. Priv. Enhancing Technol., 2018(4):
104–124, 2018.
[10] Martin Aumüller, Erik Bernhardsson, and Alexander John
Faithfull. ANN-benchmarks: A benchmarking tool
for approximate nearest neighbor algorithms. CoRR,
abs/1807.05614, 2018. URL http://arxiv.org/abs/1807.
05614.
[11] Martin Aumüller, Tobias Christiani, Rasmus Pagh, and
Francesco Silvestri. Distance-sensitive hashing.
In
Proceedings of the 37th ACM SIGMOD-SIGACT-SIGAI
Symposium on Principles of Database Systems, pages
89–104, 2018.
[12] Azure. Microsoft Azure bandwidth pricing. https://
azure.microsoft.com/pricing/details/bandwidth/. Accessed
August 2021.
[13] Michael Backes, Aniket Kate, Matteo Maffei, and Kim
Pecina. Obliviad: Provably secure and practical online
In 2012 IEEE Symposium on
behavioral advertising.
Security and Privacy, pages 257–271. IEEE, 2012.
[14] Mauro Barni, Tiziano Bianchi, Dario Catalano, Mario
Di Raimondo, Ruggero Donida Labati, Pierluigi Failla,
Dario Fiore, Riccardo Lazzeretti, Vincenzo Piuri, Fabio
Scotti, et al. Privacy-preserving ﬁngercode authentication.
In Proceedings of the 12th ACM workshop on Multimedia
and security, pages 231–240, 2010.
[15] Amos Beimel, Yuval Ishai, and Tal Malkin. Reducing the
servers computation in private information retrieval: PIR
with preprocessing. In Annual International Cryptology
Conference, pages 55–73. Springer, 2000.
[16] Michael Ben-Or, Shaﬁ Goldwasser, and Avi Wigder-
son. Completeness theorems for non-cryptographic fault-
In Providing Sound
tolerant distributed computation.
Foundations for Cryptography: On the Work of Shaﬁ
Goldwasser and Silvio Micali, pages 351–371. 2019.
[17] Kevin Beyer, Jonathan Goldstein, Raghu Ramakrishnan,
and Uri Shaft. When is “nearest neighbor” meaningful?
In International conference on database theory, pages
217–235. Springer, 1999.
[18] Dan Boneh, Elette Boyle, Henry Corrigan-Gibbs, Niv
Gilboa, and Yuval Ishai. Lightweight techniques for
In 2021 IEEE Symposium on
private heavy hitters.
Security and Privacy (SP), pages 762–776. IEEE, 2021.
[19] Petros Boufounos and Shantanu Rane. Secure binary
embeddings for privacy preserving nearest neighbors.
In 2011 IEEE International Workshop on Information
Forensics and Security, pages 1–6. IEEE, 2011.
[20] Elette Boyle, Niv Gilboa, and Yuval Ishai. Function
In Annual international conference on
secret sharing.
the theory and applications of cryptographic techniques,
pages 337–367. Springer, 2015.
[21] Elette Boyle, Niv Gilboa, and Yuval Ishai. Function secret
sharing: Improvements and extensions. In Proceedings
of the 2016 ACM SIGSAC Conference on Computer and
Communications Security, pages 1292–1303, 2016.
[22] Paul Bunn, Jonathan Katz, Eyal Kushilevitz, and Rafail
Ostrovsky. Efﬁcient 3-party distributed ORAM.
In
International Conference on Security and Cryptography
for Networks, pages 215–232. Springer, 2020.
[23] Rui Cai, Chao Zhang, Lei Zhang, and Wei-Ying Ma. Scal-
able music recommendation by search. In Proceedings
of the 15th ACM international conference on Multimedia,
pages 1065–1074, 2007.
[24] Xia Cao, Shuai Cheng Li, Beng Chin Ooi, and An-
thony KH Tung. Piers: An efﬁcient model for similarity
search in DNA sequence databases. ACM Sigmod Record,
33(2):39–44, 2004.
[25] Nicholas Carlini, Samuel Deng, Sanjam Garg, Somesh Jha,
Saeed Mahloujifar, Mohammad Mahmoody, Abhradeep
Thakurta, and Florian Tramèr. Is private learning possible
with instance encoding? In 2021 IEEE Symposium on
Security and Privacy (SP), pages 410–427. IEEE, 2021.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:00:59 UTC from IEEE Xplore.  Restrictions apply. 
14924
Accessed August 2021.
[40] William Gasarch. A survey on private information
retrieval. Bulletin of the EATCS, 82(72-107):113, 2004.
[41] Yael Gertner, Yuval Ishai, Eyal Kushilevitz, and Tal
Malkin. Protecting data privacy in private information
Journal of Computer and System
retrieval schemes.