When a typeahead `process` call receives an array of objects instead of
strings it passes "[Object object]" to `updater`. One would expect that
updater would receive the object, as `matcher`, `sorter`, and `highlighter`
work as expected.
The problem seems to be that the data is being stored by way of calls to
jQuery.attr.
One potential fix is changing
https://github.com/twitter/bootstrap/blob/master/js/bootstrap-typeahead.js#L47
and https://github.com/twitter/bootstrap/blob/master/js/bootstrap-
typeahead.js#L141 respectively as follows:
    47       var val = this.$menu.find('.active').attr('data-value')
becomes
    47       var val = this.$menu.find('.active').data('typeahead-value')
and
    141        i = $(that.options.item).attr('data-value', item)
becomes
     141       i = $(that.options.item).data('typeahead-value', item)
The underlying issue is jQuery's 'attr' function calls `toString` instead of
serializing, whereas 'data' serializes properly - preserving all the useful
bits of the object.
Note that I changed 'data-value' to 'typeahead-value' just to avoid any name
collisions (although I am sure they are pretty unlikely).
A workaround is to serialize with eg `JSON.stringify` the results of `sorter`,
and then `JSON.parse` the item passed to `updater`.