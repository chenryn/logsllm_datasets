 **Do you want to request a _feature_ or report a _bug_?**
both.
**What is the current behavior?**
There is a existed issue #3926 but it is just one of the problems in some kind
of browsers.
I have uploaded the detail, demo files, test results and temporary solution in
react-compositionevent
The main problem is when users type these words from IME(Chinese, Japanese or
maybe Korean) and do something like search the database or filter out from
some data, sometimes these functions will be unworkable. For example, if users
type "ni" during the composition session, maybe it will be one of "你尼泥腻" in
Chinese or one of "にニ尼煮" in Japanese. But in this moment, the `change` event
also be fired. If the search or filter functions of the application are
designed to be invoked when `change` event occured, there maybe something
wrong logically. These functions should be invoked after users finished the
composition session.
In React, there are three synthetic events - `onCompositionEnd`,
`onCompositionStart` and `onCompositionUpdate`. If the input
components(`` and ``) are "uncontrolled", we can use
them to help `onChange` to capture the text correctly. The only different
point is Google Chrome change its events sequence after v53. Check Cinput.js
and Ctextarea.js files.
But if these input components are "controlled", it will be hard to solve the
problem.
Because these the `value` of a controlled component is came from `state`. We
can't modify `state` directly and the only way to update state is using
`this.setState()` to schedule update. But `this.setState()` may be
asynchronous.
After test, i found different OS/browsers could have different results. I have
written some code to solve it. But i thought it isn't a good solution. It uses
the browser detection and two properties of the `state` object. One is for
input, another is for internal functions(search, filter...etc). It can't just
use one property of the `state` object because i can't stop any `change`
events, state need it to update the value of the input element. If i stop some
change events during composition session, i would get nothing after typing
these words from IME.
**If the current behavior is a bug, please provide the steps to reproduce and
if possible a minimal demo of the problem viahttps://jsfiddle.net or similar
(template: https://jsfiddle.net/reactjs/69z2wepo/).**
You can use online test demo: https://eyesofkids.github.io/  
or use a normal input component(controlled/uncontrolled) to test.
**What is the expected behavior?**
The input(and textarea) controlled components in React should ensure these
fired "change" and "composition" events is consistent in different browsers. I
found there are 3 different results(events fired sequence) at least.
**Which versions of React, and which browser / OS are affected by this issue?
Did this work in previous versions of React?**
  * React 15.4.1
  * browsers: chrome, firefox, safari, opera, ie, edge
  * OS: macOS, win7, win10