nf_conntrack_tcp_max_retrans - INTEGER  
        default 3  
        Maximum number of packets that can be retransmitted without  
        received an (acceptable) ACK from the destination. If this number  
        is reached, a shorter timer will be started.  
nf_conntrack_tcp_timeout_close - INTEGER (seconds)  
        default 10  
nf_conntrack_tcp_timeout_close_wait - INTEGER (seconds)  
        default 60  
nf_conntrack_tcp_timeout_established - INTEGER (seconds)  
        default 432000 (5 days)  
nf_conntrack_tcp_timeout_fin_wait - INTEGER (seconds)  
        default 120  
nf_conntrack_tcp_timeout_last_ack - INTEGER (seconds)  
        default 30  
nf_conntrack_tcp_timeout_max_retrans - INTEGER (seconds)  
        default 300  
nf_conntrack_tcp_timeout_syn_recv - INTEGER (seconds)  
        default 60  
nf_conntrack_tcp_timeout_syn_sent - INTEGER (seconds)  
        default 120  
nf_conntrack_tcp_timeout_time_wait - INTEGER (seconds)  
        default 120  
nf_conntrack_tcp_timeout_unacknowledged - INTEGER (seconds)  
        default 300  
nf_conntrack_timestamp - BOOLEAN  
        0 - disabled (default)  
        not 0 - enabled  
        Enable connection tracking flow timestamping.  
nf_conntrack_udp_timeout - INTEGER (seconds)  
        default 30  
nf_conntrack_udp_timeout_stream2 - INTEGER (seconds)  
        default 180  
        This extended timeout will be used in case there is an UDP stream  
        detected.  
```  
还有多少秒这条会话信息会从跟踪表清除，取决于超时参数的配置，以及是否有包传输，有包传输时，这个时间会重置为超时时间。  
## 四、什么时候会话表会满    
当会话表中的记录大于内核设置nf_conntrack_max的值时，会导致会话表满。  
```  
nf_conntrack_max - INTEGER  
        Size of connection tracking table.  Default value is  
        nf_conntrack_buckets value * 4.  
```  
错误例子：  
```  
less /var/log/messages  
Nov  3 23:30:27 digoal_host kernel: : [63500383.870591] nf_conntrack: table full, dropping packet.  
Nov  3 23:30:27 digoal_host kernel: : [63500383.962423] nf_conntrack: table full, dropping packet.  
Nov  3 23:30:27 digoal_host kernel: : [63500384.060399] nf_conntrack: table full, dropping packet.  
```  
## 五、会话表满的解决办法    
nf_conntrack table full的问题，会导致丢包，影响网络质量，严重时甚至导致网络不可用。  
解决方法举例：  
1、排查是否DDoS攻击，如果是，从预防攻击层面解决问题。  
2、清空会话表。  
重启iptables，会自动清空nf_conntrack table。注意，重启前先保存当前iptables配置(iptables-save > /etc/sysconfig/iptables  ;  service iptables restart)。    
3、应用程序正常关闭会话    
设计应用时，正常关闭会话很重要。  
4、加大表的上限（需要考虑内存的消耗）    
```  
sysctl -w net.nf_conntrack_max = 10240000  
```  
永久生效  
```  
vi /etc/sysctl.conf  
net.nf_conntrack_max = 10240000  
```  
计算方法，参考：  
[《[转载]解决 nf_conntrack: table full, dropping packet 的几种思路》](../201612/20161229_03.md)      
5、设置更短的会话跟踪超时时间   
查看当前设置：  
```  
# sysctl -a|grep netfilter  
net.netfilter.nf_conntrack_acct = 0  
net.netfilter.nf_conntrack_buckets = 8192  
net.netfilter.nf_conntrack_checksum = 1  
net.netfilter.nf_conntrack_count = 5  
net.netfilter.nf_conntrack_events = 1  
net.netfilter.nf_conntrack_events_retry_timeout = 15  
net.netfilter.nf_conntrack_expect_max = 124  
net.netfilter.nf_conntrack_generic_timeout = 600  
net.netfilter.nf_conntrack_helper = 1  
net.netfilter.nf_conntrack_icmp_timeout = 30  
net.netfilter.nf_conntrack_log_invalid = 0  
net.netfilter.nf_conntrack_max = 31760  
net.netfilter.nf_conntrack_tcp_be_liberal = 0  
net.netfilter.nf_conntrack_tcp_loose = 1  
net.netfilter.nf_conntrack_tcp_max_retrans = 3  
net.netfilter.nf_conntrack_tcp_timeout_close = 10  
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60  
net.netfilter.nf_conntrack_tcp_timeout_established = 432000  
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120  
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 30  
net.netfilter.nf_conntrack_tcp_timeout_max_retrans = 300  
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 60  
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 120  
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120  
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 300  
net.netfilter.nf_conntrack_timestamp = 0  
net.netfilter.nf_conntrack_udp_timeout = 30  
net.netfilter.nf_conntrack_udp_timeout_stream = 180  
net.netfilter.nf_log.0 = NONE  
net.netfilter.nf_log.1 = NONE  
net.netfilter.nf_log.10 = NONE  
net.netfilter.nf_log.11 = NONE  
net.netfilter.nf_log.12 = NONE  
net.netfilter.nf_log.2 = NONE  
net.netfilter.nf_log.3 = NONE  
net.netfilter.nf_log.4 = NONE  
net.netfilter.nf_log.5 = NONE  
net.netfilter.nf_log.6 = NONE  
net.netfilter.nf_log.7 = NONE  
net.netfilter.nf_log.8 = NONE  
net.netfilter.nf_log.9 = NONE  
```  
修改设置：  
建议参考  
https://security.stackexchange.com/questions/43205/nf-conntrack-table-full-dropping-packet  
```  
The message means your connection tracking table is full.   
There are no security implications other than DoS.   
You can partially mitigate this by increasing the maximum number of connections being tracked,   
reducing the tracking timeouts or by disabling connection tracking altogether,   
which is doable on server, but not on a NAT router,   
because the latter will cease to function.  
单位秒  
sysctl -w net.ipv4.netfilter.ip_conntrack_tcp_timeout_established=54000  
sysctl -w net.netfilter.nf_conntrack_generic_timeout=120  
sysctl -w net.ipv4.netfilter.ip_conntrack_max=  
```  
## 六、备份和恢复iptables规则    
1、保存当前iptables规则到配置文件    
```    
iptables-save > /etc/sysconfig/iptables    
```    
2、从配置文件，恢复iptables规则    
```    
iptables-restore < /etc/sysconfig/iptables    
```    
3、启动iptables服务    
```    
service iptables start    
或    
iptables-restore < /etc/sysconfig/iptables    
```    
4、关闭iptables服务    
```    
彻底关闭    
service iptables stop    
rmmod iptable_filter    
或，使用如下方法清空对应表    
iptables -F -t nat    
iptables -F -t filter    
iptables -F -t raw    
iptables -F -t mangle    
```    
5、查看当前iptables规则    
```    
iptables-save    
```    
或    
```    
iptables -L -v -n -t filter    
iptables -L -v -n -t nat    
iptables -L -v -n -t raw    
iptables -L -v -n -t mangle    
```    
## 参考    
[《[转载]解决 nf_conntrack: table full, dropping packet 的几种思路》](../201612/20161229_03.md)      
[《转载 - nf_conntrack: table full, dropping packet. 终结篇》](../201612/20161229_02.md)      
http://netfilter.org/    
/usr/share/doc/kernel-doc-3.10.0/Documentation/networking/nf_conntrack-sysctl.txt      
https://stackoverflow.com/questions/20327518/need-to-drop-established-connections-with-iptables    
https://security.stackexchange.com/questions/43205/nf-conntrack-table-full-dropping-packet    
https://unix.stackexchange.com/questions/127081/conntrack-tcp-timeout-for-state-stablished-not-working    
https://en.wikipedia.org/wiki/Netfilter#Connection_tracking    
https://unix.stackexchange.com/questions/227259/why-is-proc-net-nf-conntrack-empty    
https://stackoverflow.com/questions/16034698/details-of-proc-net-ip-conntrack-nf-conntrack    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")