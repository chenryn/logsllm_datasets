[`user_t`{.literal}]{.term}
:   是 SELinux 类型。
[`s1`{.literal}]{.term}
:   是 MLS 敏感度级别。
:::
系统始终将 MLS 访问规则与传统的文件访问权限合并。例如，如果具有安全级别
\"Secret\" 的用户使用 Discretionary Access
Control(DAC)来阻止其他用户对文件的访问，即使\"Top
Secret\"用户无法访问该文件。较高的安全许可不会自动允许用户浏览整个文件系统。
拥有顶级别的用户不会自动获得多级系统的管理权限。虽然他们可能对系统的所有敏感信息的访问权限，但这与拥有管理权限不同。
此外，管理权限不提供对敏感信息的访问权限。例如，即使某人以
`root`{.literal} 身份登录，它们仍然无法读取 top-secret 信息。
您可以使用类别进一步调整 MLS
系统中的访问。使用多类别安全性(MCS)，您可以定义项目或部门等类别，用户只能访问为其分配的类别中的文件。如需更多信息，请参阅
[使用多类别
Security(MCS)获取数据保密性](#assembly_using-multi-category-security-mcs-for-data-confidentiality_using-selinux.html "第 7 章 使用多类别安全(MCS)进行数据保密性"){.link}。
:::
::: section
::: titlepage
# []{#using-multi-level-security-mls_using-selinux.html#ref_selinux-roles-in-mls_using-multi-level-security-mls}MLS 中的 SELinux 角色 {.title}
:::
SELinux 策略将每个 Linux 用户映射到 SELinux 用户。这允许 Linux 用户继承
SELinux 用户的限制。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
MLS 策略不包含 `unconfined`{.literal}
模块，包括无限制的用户、类型和角色。因此，用户将不受限制（包括
`root`{.literal}
）的用户无法访问每个对象，并执行他们在目标策略中可以进行的每个操作。
:::
您可以通过调整策略中的布尔值来自定义 SELinux
策略中受限用户的权限。您可以使用 `semanage boolean -l`{.literal}
命令确定这些布尔值的当前状态。
::: table
[]{#using-multi-level-security-mls_using-selinux.html#idm139972089227216}
**表 6.1. MLS 中 SELinux 用户的角色**
::: table-contents
  User                   默认角色               其他角色
  ---------------------- ---------------------- ------------------------
  `guest_u`{.literal}    `guest_r`{.literal}     
  `xguest_u`{.literal}   `xguest_r`{.literal}    
  `user_u`{.literal}     `user_r`{.literal}      
  `staff_u`{.literal}    `staff_r`{.literal}    `auditadm_r`{.literal}
                                                `secadm_r`{.literal}
                                                `sysadm_r`{.literal}
                                                `staff_r`{.literal}
  `sysadm_u`{.literal}   `sysadm_r`{.literal}    
  `root`{.literal}       `staff_r`{.literal}    `auditadm_r`{.literal}
                                                `secadm_r`{.literal}
                                                `sysadm_r`{.literal}
                                                `system_r`{.literal}
  `system_u`{.literal}   `system_r`{.literal}    
:::
:::
请注意，`system_u`{.literal}
是系统进程和对象的特殊用户身份，`system_r`{.literal}
是关联的角色。管理员不得将这个 `system_u`{.literal} 用户和
`system_r`{.literal} 角色关联到 Linux
用户。另外，`unconfined_u`{.literal} 和 `root`{.literal}
是没有限制的用户。因此，与这些 SELinux 用户关联的角色不会包含在下表中
type 和 SELinux 角色的访问中。
每个 SELinux 角色都与 SELinux 类型对应，并提供特定的访问权限。
::: table
[]{#using-multi-level-security-mls_using-selinux.html#idm139972210401264}
**表 6.2. MLS 中 SELinux 角色的类型和访问**
::: table-contents
  Role                     Type                     使用 X 窗口系统登录                                            `su`{.literal} 和 `sudo`{.literal}   在主目录和 `/tmp`{.literal} 中执行（默认）   Networking
  ------------------------ ------------------------ -------------------------------------------------------------- ------------------------------------ -------------------------------------------- ---------------------------------------
  `guest_r`{.literal}      `guest_t`{.literal}      否                                                             否                                   是                                           否
  `xguest_r`{.literal}     `xguest_t`{.literal}     是                                                             否                                   是                                           仅限 Web 浏览器（Firefox、GNOME Web）
  `user_r`{.literal}       `user_t`{.literal}       是                                                             否                                   是                                           是
  `staff_r`{.literal}      `staff_t`{.literal}      是                                                             仅 `sudo`{.literal}                  是                                           是
  `auditadm_r`{.literal}   `auditadm_t`{.literal}                                                                  是                                   是                                           是
  `secadm_r`{.literal}     `secadm_t`{.literal}                                                                    是                                   是                                           是
  `sysadm_r`{.literal}     `sysadm_t`{.literal}     仅在 `xdm_sysadm_login`{.literal} 布尔值为 `on`{.literal} 时   是                                   是                                           是
:::
:::
::: itemizedlist
-   默认情况下，syssys_r 角色具有 `secadm_r`{.literal}
    角色的权限，这意味着具有 ` sysadm_r`{.literal} ``{=html}
    角色的用户可以管理安全策略。如果这没有与您的用例对应，您可以通过在策略中禁用
    `sysadm_secadm`{.literal} 模块来分离这两个角色。如需更多信息，请参阅
    [MLS 中的安全管理 9
    月进行系统管理](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/using_selinux/index#proc_separating-system-administration-from-security-administration-in-mls_using-multi-level-security-mls){.link}
-   非登录角色 `dbadm_r`{.literal}、`logadm_r`{.literal} 和
    `webadm_r`{.literal}
    可用于管理任务的子集。默认情况下，这些角色不与任何 SELinux
    用户关联。
:::
:::
::: section
::: titlepage
# []{#using-multi-level-security-mls_using-selinux.html#switching-the-selinux-policy-to-mls_using-multi-level-security-mls}将 SELinux 策略切换到 MLS {.title}
:::
使用以下步骤将 SELinux 策略从 targeted 切换到多级别安全（MLS）。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
红帽不推荐在运行 X 窗口系统的系统中使用 MLS 策略。另外，当您使用 MLS
标签重新标记文件系统时，系统可能会阻止受限制的域访问，这会阻止您的系统正确启动。因此请确定您在重新标记文件前将
SELinux 切换到 permissive 模式。在大多数系统中，您会看到在切换到 MLS
后出现了很多 SELinux 拒绝信息，且其中很多都不容易修复。
:::
::: orderedlist
**步骤**
1.  安装 `selinux-policy-mls`{.literal} 软件包：
    ``` screen
    # dnf install selinux-policy-mls
    ```
2.  在您选择的文本编辑器中打开 `/etc/selinux/config`{.literal}
    文件，例如：
    ``` screen
    # vi /etc/selinux/config
    ```
3.  将 SELinux 模式从 enforcing 改为 permissive，并从 targeted
    策略切换到 MLS：
    ``` screen
    SELINUX=permissive
    SELINUXTYPE=mls
    ```
    保存更改，退出编辑器。
4.  在启用 MLS 策略前，您必须使用 MLS 标签重新标记文件系统中的每个文件：
    ``` screen
    # fixfiles -F onboot
    System will relabel on next boot
    ```
5.  重启系统：
    ``` screen
    # reboot
    ```
6.  检查 SELinux 拒绝信息：
    ``` screen
    # ausearch -m AVC,USER_AVC,SELINUX_ERR,USER_SELINUX_ERR -ts recent -i
    ```
    因为前面的命令没有涵盖所有情况，请参阅 [SELinux
    故障排除](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/using_selinux/troubleshooting-problems-related-to-selinux_using-selinux){.link}中有关识别、分析以及修复
    SELinux 拒绝的指导。
7.  在确定您的系统中没有与 SELinux 相关的问题后，通过更改
    `/etc/selinux/config`{.literal} 中的对应选项将 SELinux 切换回
    enforcing 模式：
    ``` screen
    SELINUX=enforcing
    ```
8.  重启系统：
    ``` screen
    # reboot
    ```
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果您的系统没有启动，或者您无法在切换到 MLS 后登录，请将
`enforcing=0`{.literal}
参数添加到内核命令行。如需更多信息，请参阅[在引导时更改 SELinux
模式](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/using_selinux/changing-selinux-states-and-modes_using-selinux#changing-selinux-modes-at-boot-time_changing-selinux-states-and-modes){.link}。
另请注意，在 MLS 中，以 `root`{.literal} 用户身份通过 SSH 登录映射到
`sysadm_r`{.literal} SELinux 角色，它与作为 `staff_r`{.literal} 中的
`root`{.literal} 登录不同。在 MLS 中首次启动系统前，请考虑通过将
`ssh_sysadm_login`{.literal} SELinux 布尔值设置为 `1`{.literal} 来允许以
`sysadm_r`{.literal} 身份登录 SSH 登录。要稍后才启用
`ssh_sysadm_login`{.literal}（已在 MLS 中），您需要在
`staff_r`{.literal} 中以 `root`{.literal} 身份登陆，使用
`newrole -r sysadm_r`{.literal} 命令切换到 `sysadm_r`{.literal} 中的
`root`{.literal}，然后将布尔值设置为 `1`{.literal}。
:::
::: orderedlist
**验证**
1.  验证 SELinux 是否在 enforcing 模式下运行：
    ``` screen
    # getenforce
    Enforcing
    ```
2.  检查 SELinux 的状态是否返回 `mls`{.literal} 值：
    ``` screen
    # sestatus | grep mls
    Loaded policy name:             mls
    ```
:::
::: itemizedlist
**其他资源**
-   The `fixfiles(8)`{.literal}, `setsebool(8)`{.literal}, 和
    `ssh_selinux(8)`{.literal} man pages.
:::
:::
::: section
::: titlepage
# []{#using-multi-level-security-mls_using-selinux.html#establishing-user-clearance-in-mls_using-multi-level-security-mls}在 MLS 中建立用户明确 {.title}
:::
将 SELinux 策略切换到 MLS 后，必须通过将 SELinux 策略映射到受限的
SELinux 用户来为用户分配安全清晰级别。具有给定安全性的用户：
::: itemizedlist
-   不能读取具有更高敏感度级别的对象。
-   无法写入到较低敏感度级别的对象。
-   可以在较低的敏感度级别修改对象，但这会将对象的分类级别增加到用户的明确级别。
:::
::: itemizedlist
**先决条件**
-   SELinux 策略被设置为 `mls`{.literal}。
-   SELinux 模式设置为 `enforcing`{.literal}。
-   已安装 `policycoreutils-python-utils`{.literal} 软件包。
-   分配给 SELinux 受限用户的用户：
    ::: itemizedlist
    -   对于非授权用户，分配给 `user_u`{.literal}
        （以下流程中的[*example_user*]{.emphasis} ）。
    -   对于特权用户，分配给 `staff_u`{.literal} （以下流程中的
        [*staff*]{.emphasis} ）。
    :::
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
确保 MLS 策略处于活动状态时已创建该用户。MLS 中无法使用在其他 SELinux
策略中创建的用户。
:::
::: orderedlist
**步骤**
1.  可选：要防止向 SELinux 策略添加错误，切换到 `permissive`{.literal}
    SELinux 模式，这有助于进行故障排除：
    ``` screen
    # setenforce 0
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    在 permissive 模式中，SELinux 不强制执行活跃策略，而是只记录 Access
    Vector Cache(AVC)消息，然后可用于故障排除和调试。
    :::
2.  为 `staff_u`{.literal} SELinux
    用户定义清晰的范围。例如，这个命令会将安全权限范围设置为
    `s1`{.literal} 到 `s15`{.literal}，`s1`{.literal}
    是默认的安全权限级别：
    ``` screen
    # semanage user -m -L s1 -r s1-s15 staff_u
    ```
3.  为用户主目录生成 SELinux 文件上下文配置条目：
    ``` screen
    # genhomedircon
    ```
4.  将文件安全上下文恢复到默认值：
    ``` screen
    # restorecon -R -F -v /home/
    Relabeled /home/staff from staff_u:object_r:user_home_dir_t:s0 to staff_u:object_r:user_home_dir_t:s1
    Relabeled /home/staff/.bash_logout from staff_u:object_r:user_home_t:s0 to staff_u:object_r:user_home_t:s1
    Relabeled /home/staff/.bash_profile from staff_u:object_r:user_home_t:s0 to staff_u:object_r:user_home_t:s1
    Relabeled /home/staff/.bashrc from staff_u:object_r:user_home_t:s0 to staff_u:object_r:user_home_t:s1
    ```
5.  为用户分配安全权限级别：
    ``` screen
    # semanage login -m -r s1 example_user
    ```
    其中 `s1`{.literal} 是分配给用户的安全权限级别。
6.  将用户的主目录重新标记到用户的明确级别：
    ``` screen
    # chcon -R -l s1 /home/example_user
    ```
7.  可选：如果您之前切换到 `permissive`{.literal} SELinux
    模式，并在验证所有内容可以正常工作后，切换回 `enforcing`{.literal}
    SELinux 模式：
    ``` screen
    # setenforce 1
    ```