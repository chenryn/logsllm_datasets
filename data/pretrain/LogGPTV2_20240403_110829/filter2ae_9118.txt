## 前言
最近渗透测试某站点的时候触发了一个报错，然后发现了站点使用的CMS，百度了一下是一个国产开源的企业级CMS。从官网拉下来审了一下，再此记录一下  
## 入口
下面是index.php入口文件  
    display();
    ?>
很常见的cms入口形式，但是可以注意到第八行将../替换为空，这里怀疑会不会存在目录穿越，可以采用..././这样的形式来穿越到上一层。但是第15行限制了后缀必须为php，且由于前缀也被限制于是不能使用zip伪协议拿shell，如果php版本为5.2可以采用00截断包含任意文件，这里暂时卡住，继续审计，第2行应该为配置文件略过，跟进第7行的common.inc.php  
common.inc.php开头先定义了许多常量，然后更改了一些php配置，接着又引入了两个文件，跟进发现配置了一些变量，先不管，继续向下审计common.inc.php
     $_v )
        {
            ${$_k} = _get_request($_v);
            if( '_COOKIE' != $_request )
            {
                $req_data[$_k] = _get_request($_v);
            }
        }
    }
    unset($_GET, $_POST);
    ?>
上面代码可以很明显的发现，cms把$_GET,$_POST,$_COOKIE注册为了全局变量。所以之后可能存在变量覆盖，之后的代码引入了全局函数和全局类。这时候CMS入口以审计结束，可以开始审计函数和类
## 重安装漏洞（Getshell）
由于安装文件一般是漏洞的重灾地，于是这里直接跳到了安装文件，果然找到了漏洞点。  
在install_action.php中，安装完成后会把前端文件重命名，但是后端逻辑文件依旧存在，所以如果知道安装文件位置即可重安装
    ";
        require_once("../include/class/class.file.php");
        $cls_file = new cls_file('../include/config.db.php');
        $cls_file-> set_text($db_config);
        return $cls_file-> write();
    }
由于文件内容可控，我们可以通过tablepre=exp来写入一个恶意php文件
`tablepre=dcr_qy_';?>`  
由于写入的是配置文件，所以访问站点任意文件都会包含此文件，所以还可以当后门来用。
审计过程还发现，如果采用sqlite安装，sqlite数据库文件名会以php结尾，并且我们可以控制数据库名数据库表，但是cms开始会新建一个名为 delete_dir( WEB_CACHE  . "/template/{$tpl_dir}" );
同理，通过控制url参数tpl_dir即可任意文件删除  
## 失败的审计
在db.class.php中的构造方法里，可以进行数据库连接
    db_type = $db_type;
            $this->host = $db_host;
            $this->name = $db_name;
            $this->pass = $db_pass;
            $this->table = $db_table;    
            $this->ut = $db_ut;
            if( !$this->conn )
            {
                $this->connect();
            }
        }
因为构造方法只有在实例化新类才会被执行，所以理论上，如果我们可以任意实例化任意类，我们可以控制数据库连接的ip和端口，再通过mysql任意文件读取漏洞，即可达到任意文件读取，全局搜索new
$  
遗憾的是，这三个变量审计后发现我们都不可控，于是这条路没有走通，但是我觉得思路还是很不错的  
## 失败的审计*2
class.email.php文件中会存在任意ip建立套接字，发送数据可控，于是我们可以通过crlf来SSRF，可以攻击内网的php-fpm,redis等应用，但是在刚开始建立套接字的时候，cms会判断对应ip是否返回2或者3，
    sock, 512));
            $this->smtp_debug( $response . "\n" );
            if (!ereg("^[23]", $response))
            {
                fputs($this->sock, "QUIT\r\n");
                fgets($this->sock, 512);
                cls_app::log("Error: Remote host returned \"" . $response . "\"\n");
                return false;
            }
            return true;
        }
    ?>
如果攻击内网，必须要对应内网服务在建立连接时，返回数据中带有2或者3，我们才能发送数据，否者程序会直接退出。
cms官网: