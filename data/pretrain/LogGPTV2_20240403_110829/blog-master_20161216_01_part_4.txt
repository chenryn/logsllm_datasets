postgres=# explain (analyze,verbose,timing,costs,buffers) select corr(c2,c1), covar_pop(c2,c1), covar_samp(c2,c1), regr_avgx(c2,c1), regr_avgy(c2,c1), regr_intercept(c2,c1), regr_r2(c2,c1), regr_slope(c2,c1), regr_sxx(c2,c1), regr_sxy(c2,c1), regr_syy(c2,c1) from cstore_llvm where c1+c2+c3+c4+c5+c6+c7+c8 >10000000 and c9+c10+c11+c12+c13+c14+c15+c16 >10000000 and c17+c18+c19+c20+c21+c22+c23+c24 >10000000 and c25+c26+c27+c28+c29+c30+c31 >10000000;    
                                                              QUERY PLAN         
------------------------------------------------------------------------------------------------------    
 Aggregate  (cost=10412963.45..10412963.46 rows=1 width=88) (actual time=119220.806..119220.806 rows=1 loops=1)    
   Output: corr((c2)::double precision, (c1)::double precision), covar_pop((c2)::double precision, (c1)::double precision), covar_samp((c2)::double precision, (c1)::double precision), regr_avgx((c2)::double precision, (c1)::double precis    
ion), regr_avgy((c2)::double precision, (c1)::double precision), regr_intercept((c2)::double precision, (c1)::double precision), regr_r2((c2)::double precision, (c1)::double precision), regr_slope((c2)::double precision, (c1)::double pre    
cision), regr_sxx((c2)::double precision, (c1)::double precision), regr_sxy((c2)::double precision, (c1)::double precision), regr_syy((c2)::double precision, (c1)::double precision)    
   Buffers: shared hit=130218    
   ->  Foreign Scan on public.cstore_llvm  (cost=0.00..10311111.56 rows=1234568 width=8) (actual time=1057.194..99364.443 rows=98571429 loops=1)    
         Output: id, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31    
         Filter: ((((((((cstore_llvm.c25 + cstore_llvm.c26) + cstore_llvm.c27) + cstore_llvm.c28) + cstore_llvm.c29) + cstore_llvm.c30) + cstore_llvm.c31) > 10000000) AND ((((((((cstore_llvm.c1 + cstore_llvm.c2) + cstore_llvm.c3) + cstor    
e_llvm.c4) + cstore_llvm.c5) + cstore_llvm.c6) + cstore_llvm.c7) + cstore_llvm.c8) > 10000000) AND ((((((((cstore_llvm.c9 + cstore_llvm.c10) + cstore_llvm.c11) + cstore_llvm.c12) + cstore_llvm.c13) + cstore_llvm.c14) + cstore_llvm.c15) +    
 cstore_llvm.c16) > 10000000) AND ((((((((cstore_llvm.c17 + cstore_llvm.c18) + cstore_llvm.c19) + cstore_llvm.c20) + cstore_llvm.c21) + cstore_llvm.c22) + cstore_llvm.c23) + cstore_llvm.c24) > 10000000))    
         Rows Removed by Filter: 1428571    
         CStore File: /disk1/digoal/pgdata/pg_root9.6llvm/cstore_fdw/13269/16408    
         CStore File Size: 13201155200    
         Buffers: shared hit=130218    
 Planning time: 0.372 ms    
 Execution time: 119676.841 ms    
(12 rows)    
```    
![pic](20161216_01_pic_007.png)        
4\. normal | llvm + 多核并行 ，体现多核计算的硬件能力     
```    
postgres=# set max_parallel_workers_per_gather =12;    
SET    
postgres=# set min_parallel_relation_size =0;    
SET    
postgres=# set parallel_tuple_cost =0;    
SET    
postgres=# set parallel_setup_cost =0;    
SET    
postgres=# set force_parallel_mode =on;    
SET    
```    
结果      
```    
postgres=# explain (analyze,verbose,timing,costs,buffers) select corr(c2,c1), covar_pop(c2,c1), covar_samp(c2,c1), regr_avgx(c2,c1), regr_avgy(c2,c1), regr_intercept(c2,c1), regr_r2(c2,c1), regr_slope(c2,c1), regr_sxx(c2,c1), regr_sxy(c2,c1), regr_syy(c2,c1) from llvm;    
                            QUERY PLAN      
------------------------------------------------------------------------    
 Finalize Aggregate  (cost=2693910.67..2693910.68 rows=1 width=88) (actual time=3773.343..3773.343 rows=1 loops=1)    
   Output: corr((c2)::double precision, (c1)::double precision), covar_pop((c2)::double precision, (c1)::double precision), covar_samp((c2)::double precision, (c1)::double precision), regr_avgx((c2)::double precision, (c1)::double precis    
ion), regr_avgy((c2)::double precision, (c1)::double precision), regr_intercept((c2)::double precision, (c1)::double precision), regr_r2((c2)::double precision, (c1)::double precision), regr_slope((c2)::double precision, (c1)::double pre    
cision), regr_sxx((c2)::double precision, (c1)::double precision), regr_sxy((c2)::double precision, (c1)::double precision), regr_syy((c2)::double precision, (c1)::double precision)    
   Buffers: shared hit=4228 read=1920517    
   ->  Gather  (cost=2693910.31..2693910.32 rows=12 width=352) (actual time=3772.735..3773.298 rows=13 loops=1)    
         Output: (PARTIAL corr((c2)::double precision, (c1)::double precision)), (PARTIAL covar_pop((c2)::double precision, (c1)::double precision)), (PARTIAL covar_samp((c2)::double precision, (c1)::double precision)), (PARTIAL regr_avg    
x((c2)::double precision, (c1)::double precision)), (PARTIAL regr_avgy((c2)::double precision, (c1)::double precision)), (PARTIAL regr_intercept((c2)::double precision, (c1)::double precision)), (PARTIAL regr_r2((c2)::double precision, (    
c1)::double precision)), (PARTIAL regr_slope((c2)::double precision, (c1)::double precision)), (PARTIAL regr_sxx((c2)::double precision, (c1)::double precision)), (PARTIAL regr_sxy((c2)::double precision, (c1)::double precision)), (PARTI    
AL regr_syy((c2)::double precision, (c1)::double precision))    
         Workers Planned: 12    
         Workers Launched: 12    
         Buffers: shared hit=4228 read=1920517    
         ->  Partial Aggregate  (cost=2693910.31..2693910.32 rows=1 width=352) (actual time=3638.222..3638.222 rows=1 loops=13)    
               Output: PARTIAL corr((c2)::double precision, (c1)::double precision), PARTIAL covar_pop((c2)::double precision, (c1)::double precision), PARTIAL covar_samp((c2)::double precision, (c1)::double precision), PARTIAL regr_avgx    
((c2)::double precision, (c1)::double precision), PARTIAL regr_avgy((c2)::double precision, (c1)::double precision), PARTIAL regr_intercept((c2)::double precision, (c1)::double precision), PARTIAL regr_r2((c2)::double precision, (c1)::do    
uble precision), PARTIAL regr_slope((c2)::double precision, (c1)::double precision), PARTIAL regr_sxx((c2)::double precision, (c1)::double precision), PARTIAL regr_sxy((c2)::double precision, (c1)::double precision), PARTIAL regr_syy((c2    
)::double precision, (c1)::double precision)    
               Buffers: shared hit=2560 read=1920517    
               Worker 0: actual time=3562.153..3562.153 rows=1 loops=1    
                 Buffers: shared hit=128 read=87086    
               Worker 1: actual time=3637.692..3637.692 rows=1 loops=1    
                 Buffers: shared hit=208 read=158629    
               Worker 2: actual time=3639.831..3639.831 rows=1 loops=1    
                 Buffers: shared hit=209 read=152506    
               Worker 3: actual time=3636.022..3636.022 rows=1 loops=1    
                 Buffers: shared hit=203 read=152808    
               Worker 4: actual time=3638.024..3638.024 rows=1 loops=1    
                 Buffers: shared hit=210 read=151951    
               Worker 5: actual time=3639.676..3639.677 rows=1 loops=1    
                 Buffers: shared hit=208 read=158875    
               Worker 6: actual time=3640.410..3640.410 rows=1 loops=1    
                 Buffers: shared hit=210 read=159051    
               Worker 7: actual time=3638.528..3638.528 rows=1 loops=1    
                 Buffers: shared hit=201 read=149186    
               Worker 8: actual time=3640.234..3640.234 rows=1 loops=1    
                 Buffers: shared hit=209 read=159345    
               Worker 9: actual time=3572.413..3572.413 rows=1 loops=1    
                 Buffers: shared hit=126 read=138879    
               Worker 10: actual time=3640.223..3640.224 rows=1 loops=1    
                 Buffers: shared hit=213 read=161155    
               Worker 11: actual time=3639.719..3639.719 rows=1 loops=1    
                 Buffers: shared hit=212 read=155227    
               ->  Parallel Seq Scan on public.llvm  (cost=0.00..2006410.33 rows=8333333 width=8) (actual time=0.066..2048.353 rows=7692308 loops=13)    
                     Output: c2, c1    
                     Buffers: shared hit=2560 read=1920517    
                     Worker 0: actual time=0.083..1954.297 rows=4535128 loops=1    
                       Buffers: shared hit=128 read=87086    
                     Worker 1: actual time=0.062..2062.690 rows=8259524 loops=1    
                       Buffers: shared hit=208 read=158629    
                     Worker 2: actual time=0.068..2055.347 rows=7941180 loops=1    
                       Buffers: shared hit=209 read=152506    
                     Worker 3: actual time=0.062..2058.819 rows=7956572 loops=1    
                       Buffers: shared hit=203 read=152808    
                     Worker 4: actual time=0.054..2064.731 rows=7912372 loops=1    
                       Buffers: shared hit=210 read=151951    
                     Worker 5: actual time=0.052..2060.738 rows=8272312 loops=1    
                       Buffers: shared hit=208 read=158875    
                     Worker 6: actual time=0.073..2067.216 rows=8281572 loops=1    
                       Buffers: shared hit=210 read=159051    
                     Worker 7: actual time=0.055..2064.354 rows=7768124 loops=1    
                       Buffers: shared hit=201 read=149186    
                     Worker 8: actual time=0.053..2063.789 rows=8296808 loops=1    
                       Buffers: shared hit=209 read=159345    
                     Worker 9: actual time=0.151..1998.940 rows=7228260 loops=1    
                       Buffers: shared hit=126 read=138879    
                     Worker 10: actual time=0.054..2048.661 rows=8391136 loops=1    
                       Buffers: shared hit=213 read=161155    
                     Worker 11: actual time=0.057..2056.825 rows=8082828 loops=1    
                       Buffers: shared hit=212 read=155227    
 Planning time: 0.158 ms    
 Execution time: 3937.492 ms    
(64 rows)    
postgres=# explain (analyze,verbose,timing,costs,buffers) select corr(c2,c1), covar_pop(c2,c1), covar_samp(c2,c1), regr_avgx(c2,c1), regr_avgy(c2,c1), regr_intercept(c2,c1), regr_r2(c2,c1), regr_slope(c2,c1), regr_sxx(c2,c1), regr_sxy(c2,c1), regr_syy(c2,c1) from llvm where c1+c2+c3+c4+c5+c6+c7+c8 >10000000 and c9+c10+c11+c12+c13+c14+c15+c16 >10000000 and c17+c18+c19+c20+c21+c22+c23+c24 >10000000 and c25+c26+c27+c28+c29+c30+c31 >10000000;       
                                                         QUERY PLAN        
------------------------------------------------------------------------------------------    
 Finalize Aggregate  (cost=2660731.72..2660731.73 rows=1 width=88) (actual time=8422.301..8422.301 rows=1 loops=1)    
   Output: corr((c2)::double precision, (c1)::double precision), covar_pop((c2)::double precision, (c1)::double precision), covar_samp((c2)::double precision, (c1)::double precision), regr_avgx((c2)::double precision, (c1)::double precis    
ion), regr_avgy((c2)::double precision, (c1)::double precision), regr_intercept((c2)::double precision, (c1)::double precision), regr_r2((c2)::double precision, (c1)::double precision), regr_slope((c2)::double precision, (c1)::double pre    
cision), regr_sxx((c2)::double precision, (c1)::double precision), regr_sxy((c2)::double precision, (c1)::double precision), regr_syy((c2)::double precision, (c1)::double precision)    
   Buffers: shared hit=3884 read=1920933    
   ->  Gather  (cost=2660731.35..2660731.36 rows=12 width=352) (actual time=8421.715..8422.253 rows=13 loops=1)    
         Output: (PARTIAL corr((c2)::double precision, (c1)::double precision)), (PARTIAL covar_pop((c2)::double precision, (c1)::double precision)), (PARTIAL covar_samp((c2)::double precision, (c1)::double precision)), (PARTIAL regr_avg    
x((c2)::double precision, (c1)::double precision)), (PARTIAL regr_avgy((c2)::double precision, (c1)::double precision)), (PARTIAL regr_intercept((c2)::double precision, (c1)::double precision)), (PARTIAL regr_r2((c2)::double precision, (    
c1)::double precision)), (PARTIAL regr_slope((c2)::double precision, (c1)::double precision)), (PARTIAL regr_sxx((c2)::double precision, (c1)::double precision)), (PARTIAL regr_sxy((c2)::double precision, (c1)::double precision)), (PARTI    
AL regr_syy((c2)::double precision, (c1)::double precision))    
         Workers Planned: 12    
         Workers Launched: 12    
         Buffers: shared hit=3884 read=1920933    
         ->  Partial Aggregate  (cost=2660731.35..2660731.36 rows=1 width=352) (actual time=8000.670..8000.670 rows=1 loops=13)    
               Output: PARTIAL corr((c2)::double precision, (c1)::double precision), PARTIAL covar_pop((c2)::double precision, (c1)::double precision), PARTIAL covar_samp((c2)::double precision, (c1)::double precision), PARTIAL regr_avgx    
((c2)::double precision, (c1)::double precision), PARTIAL regr_avgy((c2)::double precision, (c1)::double precision), PARTIAL regr_intercept((c2)::double precision, (c1)::double precision), PARTIAL regr_r2((c2)::double precision, (c1)::do    
uble precision), PARTIAL regr_slope((c2)::double precision, (c1)::double precision), PARTIAL regr_sxx((c2)::double precision, (c1)::double precision), PARTIAL regr_sxy((c2)::double precision, (c1)::double precision), PARTIAL regr_syy((c2    
)::double precision, (c1)::double precision)    
               Buffers: shared hit=2144 read=1920933    
               Worker 0: actual time=7984.472..7984.472 rows=1 loops=1    
                 Buffers: shared hit=171 read=149992    
               Worker 1: actual time=7793.034..7793.035 rows=1 loops=1    
                 Buffers: shared hit=179 read=145915    
               Worker 2: actual time=7996.571..7996.571 rows=1 loops=1    
                 Buffers: shared hit=181 read=105392    
               Worker 3: actual time=7994.475..7994.475 rows=1 loops=1    
                 Buffers: shared hit=178 read=160335    
               Worker 4: actual time=7996.607..7996.608 rows=1 loops=1    
                 Buffers: shared hit=180 read=154611    
               Worker 5: actual time=7998.692..7998.692 rows=1 loops=1    
                 Buffers: shared hit=179 read=159983    
               Worker 6: actual time=7996.541..7996.541 rows=1 loops=1    
                 Buffers: shared hit=177 read=150883    
               Worker 7: actual time=7998.963..7998.963 rows=1 loops=1    
                 Buffers: shared hit=179 read=156921    
               Worker 8: actual time=7996.566..7996.566 rows=1 loops=1    
                 Buffers: shared hit=93 read=131531    
               Worker 9: actual time=7981.888..7981.888 rows=1 loops=1    
                 Buffers: shared hit=178 read=160112    
               Worker 10: actual time=7998.554..7998.554 rows=1 loops=1    
                 Buffers: shared hit=179 read=160049    
               Worker 11: actual time=7851.481..7851.481 rows=1 loops=1    
                 Buffers: shared hit=94 read=123127    
               ->  Parallel Seq Scan on public.llvm  (cost=0.00..2652243.67 rows=102881 width=8) (actual time=48.010..6342.870 rows=7582418 loops=13)    
                     Output: c2, c1    
                     Filter: ((((((((llvm.c25 + llvm.c26) + llvm.c27) + llvm.c28) + llvm.c29) + llvm.c30) + llvm.c31) > 10000000) AND ((((((((llvm.c1 + llvm.c2) + llvm.c3) + llvm.c4) + llvm.c5) + llvm.c6) + llvm.c7) + llvm.c8) > 10000000    
) AND ((((((((llvm.c9 + llvm.c10) + llvm.c11) + llvm.c12) + llvm.c13) + llvm.c14) + llvm.c15) + llvm.c16) > 10000000) AND ((((((((llvm.c17 + llvm.c18) + llvm.c19) + llvm.c20) + llvm.c21) + llvm.c22) + llvm.c23) + llvm.c24) > 10000000))    
                     Rows Removed by Filter: 109890    
                     Buffers: shared hit=2144 read=1920933    
                     Worker 0: actual time=8.082..6297.404 rows=7790692 loops=1    
                       Buffers: shared hit=171 read=149992    
                     Worker 1: actual time=0.074..6161.311 rows=7596888 loops=1    
                       Buffers: shared hit=179 read=145915    
                     Worker 2: actual time=20.204..6362.435 rows=5444477 loops=1    
                       Buffers: shared hit=181 read=105392    
                     Worker 3: actual time=18.108..6325.942 rows=8305960 loops=1    
                       Buffers: shared hit=178 read=160335    
                     Worker 4: actual time=20.216..6323.577 rows=8003684 loops=1    
                       Buffers: shared hit=180 read=154611    
                     Worker 5: actual time=22.317..6325.480 rows=8278244 loops=1    
                       Buffers: shared hit=179 read=159983    
                     Worker 6: actual time=20.143..6332.338 rows=7810344 loops=1    
                       Buffers: shared hit=177 read=150883    
                     Worker 7: actual time=22.591..6330.507 rows=8118500 loops=1    
                       Buffers: shared hit=179 read=156921    
                     Worker 8: actual time=20.168..6350.160 rows=6799000 loops=1    
                       Buffers: shared hit=93 read=131531    
                     Worker 9: actual time=5.520..6309.275 rows=8323588 loops=1    
                       Buffers: shared hit=178 read=160112    