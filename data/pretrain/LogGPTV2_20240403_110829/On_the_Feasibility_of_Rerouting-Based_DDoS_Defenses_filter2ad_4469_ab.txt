link-ﬂooding attacks.
to test potential
B. Routing Around Congestion (RAC) Defense
The RAC defense was recently proposed as a new approach
that offers to protect services from server and transit-link
ﬂooding attacks [51]. At a high level,
the RAC defense
dynamically searches for a detour path that does not include
the congested links. For example, in Figure 1, RAC reroutes
the critical ﬂow into the detour path (C, X, Y, Z, D) to avoid
the congested link W –Z.
Notably, the RAC defense enables an individual AS (e.g.,
a destination AS) to control the routes for its inbound trafﬁc,
which has been considered difﬁcult without any coordina-
tion with its upstream ASes. The technical underpinning of
this rerouting capability is the BGP route poisoning mech-
anism [33] that makes the incoming trafﬁc to avoid any
particular AS in the upstream.
Figure 2 illustrates an example in which the destination
AS D uses BGP poisoning to poison AS W . In particular,
AS D broadcasts a BGP UPDATE message including the AS-
path {D, W, D}. Note that to ensure this poisoned message is
accepted by the RPKI-based origin veriﬁcation [37], the RAC
defender also adds its own AS number (e.g., D) to the end of
the AS-path included in the message. When AS W receives the
BGP poisoning UPDATE message, it ﬁnds its own AS number
in the message and then ignores the message because otherwise
a routing loop can be created [49]. Thus, AS C would send
the critical trafﬁc through the detour path (C, X, Y, Z, D).
The RAC defense [51] utilizes the BGP poisoning capa-
bility to proactively avoid one or more upstream ASes so that
the destination AS D can establish an arbitrary detour path
for critical ﬂows from C to D. To enforce the critical ﬂows
from C to D to follow the newly established detour path, not
the old default path, the RAC deployer (or D) uses a more
speciﬁc destination preﬁx (i.e., longer preﬁx) for the detour
ASN
AS name
54994
47065
14061
28349
15133
43996
11338
25933
204893
11123
Quantil Networks Inc.
USC / UFMG PEERING Research Testbed
DigitalOcean, LLC
TVC Tupa Ltda.
EdgeCast Net, Inc. Verizon Dig Med Serv
Booking.com BV
SKY SERVIOS DE BANDA LARGA LTDA
Vogel Solues em Telecom e Informtica S/A
Pawel Zamaro
Ultimate Internet Access, Inc
No. Unique
Poisoning
Patterns
Avg. No.
Avoided
ASes
66
42
31
25
23
19
13
12
11
11
2.20
1.10
2.32
7.64
2.09
2.26
2.15
3.50
3.36
2.91
path announcement, which is also known as a hole punching
technique [51].
Practicality of BGP poisoning. Before we analyze the fea-
sibility of the RAC proposal, we examine whether the BGP
poisoning is feasible and actually used in practice. To the
authors’ best knowledge, no such measurement studies have
been done yet.
Figure 3 shows a simple measurement study during a one-
month period (June 1, 2018 to June 30, 2018) from the RIPE
dataset [12]. BGP poisoning messages are constantly generated
and broadcast in the current Internet. We also notice that the
poisoning messages are continuously generated without a clear
diurnal pattern, which implies that the BGP route poisoning is
a globally practiced BGP operation trick.
Table I shows the top-10 ASes that had generated most
unique BGP poisoning patterns (or the unique sets of ASes
to be poisoned or avoided) in June 2018. First, we emphasize
that the BGP poisoning is not an unusual behavior created
by a small number of illegitimate network operators; it is
rather a widely adopted network operation practice. One data
center network, Quantil Networks Inc., had announced 66
unique poisoning message patterns in a month with on average
2.20 avoided ASes, showing that some commercial networks
frequently utilize BGP poisoning on daily basis. The second
AS from the list is a research testbed network, USC / UFMG
PEERING Research Testbed [10], and it had generated 42
unique poisoning patterns.
Figure 4 shows the histogram of the number of avoided
ASes in the poisoning messages observed in June 2018.
The majority of poisoning message patterns have a small
number (e.g., 1–3) of avoided ASes as suggested by the
LIFEGUARD [33] study. Yet, there also exist some rare cases
with a long list of poisoned ASes, up to 15, in our observation.
(cid:18)(cid:18)(cid:24)(cid:18)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:53:09 UTC from IEEE Xplore.  Restrictions apply. 
e
u
q
n
u
i
f
o
r
e
b
m
u
N
300
200
100
s
n
r
e
t
t
i
a
p
g
n
n
o
s
o
p
i
0
1
2
4
3
13
Number of avoided ASes in BGP poisoning messages
10
11
12
8
5
6
7
9
14
15
Figure 4: Number of avoided ASes in the BGP poisoning
messages observed in June 2018.
Inferring the purposes of the actual poisoning messages and
measuring their effectiveness are beyond the scope of our
paper; however, a large number of poisoning messages and
unique, diverse patterns show that the BGP poisoning is a
widely practiced routing tool in the current Internet.
III. TWO DESIRED PROPERTIES OF THE RAC DEFENSE
The crux of the RAC defense [51] is to establish a
detour path for a critical ﬂow when ﬂooding attacks congest
the current path. Since the RAC deployer (e.g., the victim
destination AS D in Figure 1 or Figure 2) is under ﬂooding
attacks at the moment, it wishes that a detour path to be
established in real-time (e.g., within a couple of minutes at
worst) before signiﬁcant damage occurs, and that a detour path
is used exclusively for the selected critical ﬂows but not for
other non-critical ﬂow. Here we summarize the two desired
properties:
Property 1: Path isolation. The RAC deployer wants to have
a detour path that is exclusively used by the selected critical
ﬂow, or isolated from other non-critical ﬂows.
Property 2: Guaranteed detour establishment. The RAC de-
ployer wants its BGP message for a speciﬁc detour path of its
choice is accepted by the upstream ASes and thus establishes
the detour path with a guarantee.
In the subsequent sections, we describe an undesirable
trade-off between the two properties of the RAC defense (§IV),
and we show the consequences of the lack of Property 1 (§V
and §VI) and the lack of Property 2 (§VII).
IV. TRADE-OFF BETWEEN PATH ISOLATION AND
GUARANTEED DETOUR ESTABLISHMENT
In this section, we show why it is hard to achieve the
two desired properties of the RAC defense — namely, the path
isolation (Property 1) and guaranteed detour establishment
(Property 2) — at the same time in the current Internet.
We ﬁrst analyze the requirements of achieving an isolated
detour path through our in-depth analysis of potential detour
paths and their BGP poisoning patterns in the current In-
ternet topology (§IV-A). We also investigate the conditions
for achieving a highly conﬁdent detour path establishment
via a longitudinal study of BGP UPDATE messages (§IV-B).
Then, we ﬁnally show why the two desired properties cannot
be achieved simultaneously due to their two contradictory
conditions (§IV-C).
A. Requirements for Detour Path Isolation
To achieve the path isolation, the RAC defense should
create a detour path exclusively for a critical ﬂow of choice.
It requires the BGP UPDATE messages to traverse only the
ASes on the detour path. If the message arrives at an AS that
is not on the detour path, that AS may accept the message and
then start sending non-critical ﬂows through the detour path.
The RAC paper [51] proposes that all the neighbors of the
ASes on the detour path must be poisoned to guarantee the
exclusive usage of the detour path.
How many ASes does RAC need to poison? As we reviewed
in Section II-B, the basic idea of BGP poisoning has been
studied in-depth [33], [51] and our analysis of actual BGP
update datasets also conﬁrms its non-negligible usage in prac-
tice. However, poisoning a large number (e.g., tens, hundreds,
or even thousands) of ASes in a single BGP UPDATE message
has never been studied. For example, LIFEGUARD [33] tests
with the poisoning messages containing only a single AS
and the RAC paper [51] does not discuss how many ASes
should be poisoned. Therefore, in this section, we analyze this
requirement of creating an isolated detour path, i.e., poisoning
all neighbors of the ASes on it.
We use the Chaos simulator [4], an open-source BGP
simulator that has been used to evaluate the RAC proposal [51],
to simulate the network topology and BGP propagation among
ASes in the network. Our simulation starts with the Chaos
simulator taking the inferred AS relationship from CAIDA [3]
as the input to build the network topology among about 60
thousand ASes. In the initialization phase, each AS broadcasts
a BGP UPDATE message containing its AS number to its
neighbors. The messages are propagated to other ASes in
the network, allowing them to calculate the default routes
to each other. The AS relationship from CAIDA [3] that we
use in our analysis describes the AS level connectivity based
on relationships between ASes: provider, customer, peer or
sibling.
To determine a packet forwarding path, we assume that
an AS applies the following widely adopted BGP policies
in order [25]: (1) The AS prefers customer links over peer
links and peer links over provider links. This rule comes
from the fact that the ASes are most interested in maximizing
their revenues in determining a forwarding path [24], [25]; (2)
The AS prefers the shortest AS-path length route; and (3) If
multiple best paths exist, the AS uses the AS numbers to break
the tie. Particularly, the ﬁrst policy guarantees that the created
AS-level routes are economically viable because it ensures that
all the ASes on the routes are guaranteed positive revenues.
Thereafter, we randomly choose 1,000 pairs of ASes to be
the Critical AS (i.e., the source of the critical trafﬁc) and the
Destination AS (i.e., the defender deploying RAC), or C–D in
short. With each C–D pair, we enumerate all possible detour
paths (i.e., available BGP routes from C to D) and count the
number of ASes to be poisoned for each detour path. Then we
select one detour path per C–D pair and show the distribution
of the number of ASes that need to be poisoned for the 1,000
selected detours in Figure 5. Note that when there is more
than one detour path per C–D pair exists, we choose among
them the one with the minimum number of neighboring ASes
to evaluate the lowest possible number of ASes to be poisoned
(cid:18)(cid:18)(cid:24)(cid:19)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:53:09 UTC from IEEE Xplore.  Restrictions apply. 
n
o
i
t
c
n
u
F
n
o
i
t
i
u
b
i
r
t
s
D
e
v
i
t
l
a
u
m
u
C
1
0.8
0.6
0.4
0.2
0
101
0.06
0.05
0.04
0.03
0.02
0.01
50
100
150
200
255
102
103
Number of ASes to be Poisoned
104
s
e
S
A
1
r
e
T
i
f
o
r
e
b
m
u
n
e
g
a
r
e
v
A
1
0.8
0.6
0.4
0.2
0
4 5 6 7 8 9 10 11 12 13 14 15
AS length of detour path
(a) Tier 1
s
e
S
A
2
r
e
T
i
f
o
r
e