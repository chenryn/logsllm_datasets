For example, consider the scenario of Fig. 13, where TX1,
TX2, and TX3 transmit x1, x2, and x3 respectively and RX
receives y as the superposition of y1, y2 and y3. As this
superposition randomly changes with each transmitted symbol,
to cancel any ON slot at RX, the adversary must ﬁnd a location
(cid:8)M such that it can simultaneously annihilate y1, y2, and y3
by relaying the received signal.
to cancel
Similarly to the case of one TX and multiple RXs, the
adversary must attempt
the symbols from each
individual transmission, such that the aggregated symbol is
canceled at RX. For each TX, M’s location must satisfy the
phase difference equation (4). The solution to each individual
equation is an ellipse with the respective TX and RX located
at the focal points of the ellipse. Therefore, (cid:8)M must lie in
the intersection of three ellipses, as shown in Fig. 13. These
ellipses have RX as a common focal point, with TX1, TX2, and
TX3 being the other three focal points. However, Proposition 1
states that no such common intersection point exists. Hence, an
adversary cannot ﬁnd a valid location to perform cancellation
from three TXs to one RX. Similarly to the case of one TX
and multiple RXs, there are some degenerate TX arrangements
that make cancellation from a single location possible. For the
case of signal cancellation from multiple TXs to one RX the
same complexity arguments as in the previous section. The
best approach for the adversary is to cancel
the signal of
each TX individually using highly directional antennas to avoid
unintended interference. The number of devices that need to be
deployed grows linearly to the number of legitimate devices.
C. Security Analysis of the VERSE Primitive
The security of the VERSE primitive is derived from the
difﬁculty in canceling a signal of one TX at multiple veriﬁers
when the number of veriﬁers is greater than two and canceling
the signal from more than two TXs at one veriﬁer. We discuss
a basic scenario with three veriﬁers for each transmission (four
(cid:2)
devices in total). In this example, M attempts to inject m
1
while D1 transmits m1 and pass the veriﬁcation at the other
three devices D2, D3, and D4. The adversary must be capable
(cid:2)
1 at D2, D3, and D4 simultaneously. This can be
of injecting m
826
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
'
'
'
P
'
0
(a)
V0
'
'
V0
V
'
V0
0
(b)
'
V0
'
'
'
'
>KV__KVU@
>KV0__KV0U@
&DQFHOODWLRQ
$ODUP
0
(c)
Fig. 14: (a) M replacing m1 with m(cid:2)
1 during overshadowing attack, (b) M attempting to perform signal cancellation on D1’s transmission to D2, D3 and D4
during the veriﬁcation phase of the VERSE primitive (c) D2 raises the alarm after detecting error during the veriﬁcation phase of the VERSE primitive, and
(d) legends for the ﬁgure.
(d)
/LVWHQ


(
>KV@



(



(
(



'HWHFW
(UURU
'
       
(
(
(
(
>KVU@


(



>KV0@






>KV0U@

0
'
'
'
Fig. 15: M performing signal manipulation attack on D2’s transmission to ﬂip
bits where [h(s) || h(s)r] (cid:2)= [h(sM ) || h(sM )r] to pass the veriﬁcation. D2
followed by D1, D3 and D4 transmits “Alarm” or error bits by sending all
ON slots after detection of energy during its OFF slot.
achieved by launching an overshadowing attack [39], as shown
in Fig. 14(a). Because m1 is not ON-OFF modulated and a
signal cancellation is not necessary, the adversary can inject
a signal with large enough energy that causes demodulation
to a desired constellation point. This is plausible for low
order constellations (e.g., BPSK, QPSK), where the received
constellation point needs to fall within a speciﬁc plane or
quadrant. Note mis are not protected with MC ON-OFF keying
to improve the time efﬁciency of the bootstrapping process.
According to the VERSE primitive, D2, D3, and D4 com-
1||m2||m3||m4, whereas D1 compiles s =
(cid:2)
pile sM = m
m1||m2||m3||m4. During the integrity veriﬁcation phase of
VERSE, D1 transmits [h(s) || h(s)r], while D2, D3, and D4
transmit [h(sM ) || h(sM )r]. To prevent an alarm at D2, D3, and
D4, the adversary has to perform signal cancellation on D1’s
transmission to replace [h(s) || h(s)r] with [h(sM ) || h(sM )r]
at all the three veriﬁers. This attack is shown in Fig. 14(b).
However, in Section V-A, we showed that it is infeasible to
perform such signal cancellation at more than three veriﬁers.
Since the adversary is unable to perform signal cancellation
on D1’s signal, at least one of D2, D3, and D4, will detect the
error when [h(s) || h(s)r] (cid:3)= [h(sM ) || h(sM )r] and raise an
alarm. In Fig. 14(c), we show D2 raising an alarm during the
veriﬁcation phase. This alarm will be now heard by the rest of
the devices because the adversary is not positioned to cancel the
signal from D2 to the remaining three devices. The sequential
raising of an alarm by each of the devices is shown in Fig. 15.
We note that even if the adversary is positioned such that it can
achieve cancellation to a subset of devices, it cannot cancel the
raised alarms as the number of TXs raising alarms increase
because it is infeasible to perform signal cancellation from
more than two TXs to one RX. There might be other attack
vectors where the adversary chooses to overshadow a different
combination of messages during the protocol execution phase.
For instance, for the scenario of four devises, it could choose
(cid:2)
1 only at D3 and D4. In this case, D1 and D2
to inject m
compile s, whereas D3, and D4 compile sM . Hence, to pass
the veriﬁcation the adversary has to perform signal cancellation
on the transmissions from D1 and D2 to D3 and D4 and replace
[h(s) || h(s)r] with [h(sM ) || h(sM )r].
To guarantee the secure operation of VERSE under any
possible attack vector we need to have at least three veriﬁers
for any direction. This can be achieved by requiring at least
four legitimate devices and the hub participate in the group (a
total of ﬁve devices). Then, irrespective of the set of devices
selected by M to perform the overshadowing attack, M will
have to perform signal cancellation attack from at least one TXs
to at least three RXs, or from at least three TXs to at least one
RX. We have shown that neither of these attacks is feasible,
due to the impossibility of ﬁnding a location to concurrently
perform successful cancellation at multiple veriﬁers.
Even though we have that cancellation attacks to multiple
RXs or from multiple TXs are theoretically infeasible, in prac-
tice, such attacks could have some limited success probability.
This is because the adversary does not have to completely anni-
hilate the incoming signal at a given veriﬁer, but has to reduce
it below the detection threshold for an ON slot. This threshold
is typically larger than the receiver sensitivity, to account for
ambient noise from other devices. Therefore, there could be
some location for which M has a cancellation probability pn
for each slot. To guarantee the security of VERSE, we use the
length of the hash value used for integrity veriﬁcation to drive
the overall success probability for M to negligible values. This
is formalized in the following proposition, where we show that
the probability of M successfully modifying any (or multiple)
message(s) without being detected by all the legitimate devices
is bounded by δ.
Proposition 2. For a group of size N, the VERSE is δ–secure
against message modiﬁcations with
δ ≤ (pH + (1 − pH )pn)(cid:4)
(7)
where δ is the probability that M can replace any mi sent by
(cid:2)
Di with m
i at any subset of remaining devices without being
detected at every Di(cid:2) ∈ D (where D is the set of all legitimate
devices), pH is the probability for a bit of h(s) to equal a bit
of h(sM ), and pn is the probability of successfully ﬂipping one
,
827
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
100
10-5
δ
10-10
10-15
pn = 0.50
pn = 0.75
pn = 0.90
20
60
80
160
120
100
40
Length of hash function h(·) || h(·)r
Fig. 16: The probability that M can replace mi with m(cid:2)
i without being detected
at Di(cid:2) ∀ i(cid:2) (cid:2)= i.
bit in [·] during transmissions from n TXs to one RX or from
one TX to n RXs where n = (cid:5)N/2(cid:6), and (cid:8) is the length of
the hash function h(·) || h(·)r. We show that δ is a negligible
function of (cid:8).
Proof. The proof is included in Appendix B.
Note that the above proposition is general and applies to any
group size N > 1. However, for different values of N, we have
different concrete guarantees since pn depends on the minimum
number of devices n (number of transmitters for many-to-one,
or receivers for one-to-many) that the adversary needs to launch
a cancellation attack against, among all possible cases of group
partitioning. For example, when N = 2, the minimum number
of cancellation targets is 1; in general, for N ≥ 5, n = (cid:5)N/2(cid:6).
In addition, according to our experiments in Section VI, we
show that for n = 1, 2, pn can be as large as 0.9. However, pn
dramatically drops to a very small value when n = 3. Thus,
the security guarantee of the VERSE primitive is stronger with
an increasing n and also the group size N.
Figure 16 shows δ as a function of the hash length (cid:8) for
various values of pn when pH = 0.5 (i.e., the bits of the h(s)
and h(sM ) are random). As expected, a higher pn yields higher
δ values for the adversary. For instance, when pn = 0.9 we have
δ = 0.00027 for (cid:8) = 160. But when the cancellation probability
is signiﬁcantly low, for instance when n = 3, pn = 8.7× 10−5,
we have δ = 6.9 × 10−49 for (cid:8) = 160. We note that this
is an online attack that has to be performed while the pairing
session is ongoing security. Similar standards are used for other
existing pairing protocols [18]. Moreover, a pn = 0.9 is difﬁcult
to achieve in the presence of multiple Di’s. δ is a negligible
function of (cid:8), the adversary’s success probability can always
be driven to any desired value by choosing a long enough (cid:8).
D. Security of the Bootstrapping Protocol using VERSE
We now analyze the security of the bootstrapping protocol
shown in Fig. 9 against MitM attacks, which can be reduced
to the security of VERSE (Corollary 1). Basically, we need
to show that the adversary can neither join the group as an
additional device and pair with any existing legitimate device
nor can the adversary carry out an MitM attack against any
legitimate device(s) to pair itself with the hub A or any Di.
Corollary 1. The bootstrapping protocol protected by the
VERSE primitive is δ–secure against active attacks with
δ ≤ (pH + (1 − pH )pn)(cid:4)
.
(8)
Here, δ is the probability that M can replace any DH public
(cid:2)
i at any subset
number mi (sent by any device or A) with m
of remaining devices, without being detected at every device
Di(cid:2) ∈ D (including the hub). Notations are deﬁned in the same
way as in Proposition 2.
Proof. The only differences between our bootstrapping pro-
tocol and the VERSE primitive are: (a) the addition of an
initialization phase, where the devices are synchronized and
the group count is pre-loaded to A, and (b) the messages
being exchanged are the DH public numbers. The message
content does not affect the security because of hash function’s
collision-resistance property. We analyze the security of the
bootstrapping protocol in two parts. First, we address the case
of a malicious device attempting to pair with the legitimate
hub. We then analyze the case where a rogue hub attempts to
pair with a legitimate device. Note that, an adversary targeting
the synchronization phases of the protocol will fail to pair
with either the legitimate hub or devices, as we will show
in Proposition 3 later. In the following we assume that the
adversary does not attempt a desynchronization attack.
Malicious device pairing with the legitimate hub: Any mali-
cious device that simply participates in the protocol will appear
as an additional device beyond the N − 1 legitimate devices
indicated by the user. The extra device count leads to the
abortion of the protocol according to Step 3. The legitimate
hub raises an alarm by broadcasting all ON slots during the
MC ON-OFF transmission of the protocol transcript digest. As
we showed in Proposition 1, this broadcast cannot be canceled
and eventually propagates to all legitimate devices.
An alternative approach for the adversary would be to hijack
the pairing session of a legitimate device so that the total
number of participating devices is not violated. The integrity
veriﬁcation phase prevents this hijacking because the transmis-
sion of the protocol transcript digest is protected by the VERSE
primitive. According to Proposition 2, as long as any subset of
devices computes different transcripts, all devices will detect
the attack with probability no less than 1 − δ.
Rogue hub pairing with a legitimate device: The adversary
can attempt to pair with a legitimate device by posing as the
hub and hijacking the pairing session with the legitimate hub.
To carry out this attack against a device Di, the adversary
has to perform a signal overshadowing attack and replace
the legitimate DH primitive mA with mM at Di. Moreover,
the adversary has to replace the protocol
transcript digest
[h(s) || h(s)r] transmitted by the remaining legitimate devices
(cid:2))r]. Proposition 2, states that
and A to Di, with [h(s
as long as any subset of devices computes different transcripts,
all devices will detect the attack with probability no less than
1 − δ. Hence, the adversary will fail to pose as a legitimate
hub.
(cid:2)) || h(s
Moreover,
in Proposition 3, we show that an adversary
targeting the initialization phase to either desynchronize the
legitimate devices or make them synchronize with a rogue
828
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:34:15 UTC from IEEE Xplore.  Restrictions apply. 
hub leads to a protocol failure. Therefore, we do not need to
introduce a secure synchronization mechanism.
Proposition 3. The bootstrapping protocol protected by VERSE
fails under a desynchronization attack during the initialization