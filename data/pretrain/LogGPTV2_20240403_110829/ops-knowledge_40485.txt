### Optimized Text

I am using Solaris 10 OS (x86). I have installed `beanstalkd`, and it starts successfully with the command:
```bash
beanstalkd -d -l hostip -p 11300
```

My system has Python 2.4.4, and I have installed the YAML and `beanstalkc` Python libraries to connect to `beanstalkd`. When I write the following code:

```python
import beanstalkc
beanstalk = beanstalkc.Connection(host='hostip', port=11300)
```

There are no errors. However, when I try to perform operations on `beanstalk`, such as listing queues, the program hangs and does not return any output.

```python
beanstalk.tubes()
```

If I interrupt the operation (e.g., by pressing `Ctrl+C` in the Python environment) or stop the server, I see the following traceback:

```python
Traceback (most recent call last):
  File "", line 1, in ?
  File "/usr/lib/python2.4/site-packages/beanstalkc-0.1.1-py2.4.egg/beanstalkc.py", line 134, in tubes
    return self._interact_yaml('list-tubes\r\n', ['OK'])
  File "/usr/lib/python2.4/site-packages/beanstalkc-0.1.1-py2.4.egg/beanstalkc.py", line 83, in _interact_yaml
    size, = self._interact(command, expected_ok, expected_err)
  File "/usr/lib/python2.4/site-packages/beanstalkc-0.1.1-py2.4.egg/beanstalkc.py", line 57, in _interact
    status, results = self._read_response()
  File "/usr/lib/python2.4/site-packages/beanstalkc-0.1.1-py2.4.egg/beanstalkc.py", line 66, in _read_response
    response = self.socket_file.readline().split()
  File "/usr/lib/python2.4/socket.py", line 332, in readline
    data = self._sock.recv(self._rbufsize)
```

I suspect the issue might be related to `beanstalkd` itself. Has anyone used `beanstalkd` on Solaris 10? If so, which version did you use? The v1.3 version does not compile on Solaris, while the latest version from the Git repository compiles but causes the above problem. There may be some specific configuration required for Solaris.

**Update:**
I installed and compiled the same components (`beanstalkd`, `PyYAML`, `beanstalkc`, and `libevent`) on an Ubuntu machine, and it works fine. The problem seems to be related to the compilation of `beanstalkd` on Solaris. I have not yet found a solution.

### Potential Solution

One possible solution is to avoid starting `beanstalkd` in daemon mode. I experienced a similar issue and discovered that running `beanstalkd` without the `-d` flag resolves the problem. You can start `beanstalkd` in the background using the following command:

```bash
./beanstalkd -p 9977 &
```

This approach worked for me, although I am not sure why the daemon mode causes the issue.