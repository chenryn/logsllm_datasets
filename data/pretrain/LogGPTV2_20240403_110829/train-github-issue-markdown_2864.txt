If one tries to use the string index syntax of the r_ object, and it crashes
due to an error, it seems like it retains it internal state, making it behave
inconsistently.  
It can be made consistent again by simply resetting the internal state.
my version of numpy is `1.11.1`.  
python is the version 3.4.3+  
running on Linux Kubuntu 15.10  
Kernel: 4.2.0-42-generic x86_64
the error can be replicated with this code
    # this works fine
    r_[1, 2]
    print(r_.axis) # 0
    # this works fine, and the state is maintained
    r_['1', [[1, 2]]]
    print(r_.axis) # 0
    # this crashes, and the state is modified
    try:
        r_['1', [1, 2]]
    except IndexError as e:
        print(e) # axis 1 out of bounds [0, 1)
    finally:
        print(r_.axis) # 1
    # now this previously correct code crashes as well
    try:
        r_[1, 2]
    except IndexError as e:
        print(e) # axis 1 out of bounds [0, 1)
    # by resetting the wrong value it works again
    r_.axis = 0
    r_[1, 2]