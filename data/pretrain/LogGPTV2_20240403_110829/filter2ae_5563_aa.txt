原文作者：Juan Carlos Jiménez
翻译者：光棍节
原文地址：http://jcjc-dev.com/2016/04/29/reversing-huawei-router-2-scouting-firmware/
前文回顾：[HG533路由器分析教程之找到硬件调试接口](http://paper.seebug.org/153/)
在[上一节](http://paper.seebug.org/153/)分析pcb板的硬件结构时，发现了一个UART接口，通过这个接口，实现了一个Linux
shell的管理接口，本节中利用上节提出方法访问设备，进而对设备进行调试和控制。
上一节提出的方法是易于访问的，不需要昂贵的工具，并且会有有趣的结果，如果你想做一些硬件方面的分析，但是又不愿意去拆设备的话，这将导致你无法深入的挖掘硬件漏洞，而只是停留在网络漏洞以及ISP配置协议等高层次接口的安全分析。
本节中通过利用上一节提出的方法访问并收集一些随机的数据块，这些数据块会帮助我们理解整个系统。
### 一、 回顾上一节
图一是UART引脚图，图二是串口通信数据。
 图一 UART引脚图
 图二 串口通信数据
串口交互运行shell，这个shell是由路由器中的busybox提供的，如下：
    -------------------------------    -----Welcome to ATP Cli------    -------------------------------    Login: admin
    Password:#Password is ‘admin'
    ATP>shell
    BusyBox vv1.9.1 (2013-08-29 11:15:00 CST) built-in shell (ash)
    Enter 'help' for a list of built-in commands.
    # ls
    var   usr   tmpsbin  proc  mntlib   init  etcdev   bin
上面有三个层面的固件：
1、U-boot，即设备的bootloader，实现对最低级的硬件管理，如watchdog等，也负责对后续主要功能固件的启动。
2、Linux，路由器通过运行Linux来实现对硬件的整体控制，协调并行处理，后续的busybox是运行在此Linux之上。
3、Busybox，一个集合了多个Linux命令的工具包。
低级别的接口往往是不直观的，不能访问所有的数据，而且可能会造成设备变砖，从busybox开始往下分析是不错的思路。
通常情况下，开发人员会在启动过程中添加一些调试信息，接下来，我们就从调试信息中找找是否存在有用的信息。
### 二、 开机调试信息
在启动的一系列信息中，我们可以得到flash段的压缩算法等，如图三所示，采用的是LZMA压缩，用的是Mips Linux内核。
 图三
内核压缩算法信息 当我们想着提取闪存数据时，在本路由器中，Intel的外部闪存结构就非常重要了，如图四、图五、图六所示。
 图四 内存映射图
 图五
Flash芯片名称与完整的内存映射表
 图六 文件系统压缩格式
### 三、 ATP 以及BusyBox
本路由器中的Ralink
IC通过运行一个Linux内核实现对内存的管理、并行处理以及对整个系统的控制，Ralink芯片的产品说明上显示使用的是Linux2.6.21内核，而ATP
CLI是运行在Linux之上或者是作为Linux内核的一部分，它仅提供了第一层的系统认证，其他功能很有限，如下所示：
    ATP>help
    Welcome to ATP command line tool.
    If any question, please input "?" at the end of command.
    ATP>?
    cls
    debug
    help
    save
    ?
    exit
    ATP>
上面的帮助并没有提到shell或者sh的命令，通常是直接运行shell或者sh就可以得到。仅提供了少于10个命令，而更多功能的实现是依靠busybox来完成的。
Busybox是一个集合了多个通用unix命令的工具包，非常方便，从ls到cd以及top等，有了busybox，让我们使用Ralink
IC像使用Linux一样。
如下所示是本路由器中的busybox支持的命令:
    ATP>shell
    BusyBox vv1.9.1 (2013-08-29 11:15:00 CST) built-in shell (ash)
    Enter 'help' for a list of built-in commands.
    # ls
    var   usr   tmp   sbin  proc  mnt   lib   init  etc   dev   bin
    #
    # ls /bin
    zebra        swapdev      printserver  ln           ebtables     cat
    wpsd         startbsp     pppc         klog         dns          busybox
    wlancmd      sntp         ping         kill         dms          brctl
    web          smbpasswd    ntfs-3g      iwpriv       dhcps        atserver
    usbserver    smbd         nmbd         iwconfig     dhcpc        atmcmd
    usbmount     sleep        netstat      iptables     ddnsc        atcmd
    upnp         siproxd      mount        ipp          date         at
    upg          sh           mldproxy     ipcheck      cwmp         ash
    umount       scanner      mknod        ip           cp           adslcmd
    tr111        rm           mkdir        igmpproxy    console      acl
    tr064        ripd         mii_mgr      hw_nat       cms          ac
    telnetd      reg          mic          ethcmd       cli
    tc           radvdump     ls           equipcmd     chown
    switch       ps           log          echo         chmod
    #
仅仅分析上面的是不够的，敏感的数据不会存放在busybox 中的。
### 四、 探索文件系统
现在我们已经登录在系统中，而且知道哪些命令是可以使用的，本节中仅仅是为了得到对整个系统的概述，没有详细的分析每一小片的数据。
其中top命令是可以帮助我们得出进程消耗资源的情况，由于当前路由器是出于空闲状态，top命令并没有返回太多的有用信息。如图七所示。
 图七
top命令返回结果 从上面的进程列表中看到有一个usbmount进程，由此可见，路由器支持usb接口，当插入一个flash u盘，显示出如下的信息：
    usb 1-1: new high speed USB device using rt3xxx-ehci and address 2
    [...]
    ++++++sambacms.c 2374 renice=renice -n +10 -p 1423
U盘被识别，并且被挂载到/mnt/usb1_1/，同时一个samba服务器就启动了，这些文件的目录在/etc/samba下：
    # ls -l /etc/samba/
    -rw-r--r--    1 0        0             103 smbpasswd
    -rw-r--r--    1 0        0               0 smbusers
    -rw-r--r--    1 0        0             480 smb.conf
    -rw-------    1 0        0            8192 secrets.tdb
    # cat /etc/samba/smbpasswd
    nobody:0:XXXXXXXXXXXXXXXXXXX:564E923F5AF30J373F7C8_______4D2A:[U ]:LCT-1ED36884:
当然，还有其他的命令:
    Netstat –a :设备的通信端口信息
    Iptables –list:设置网络，进而可以telnet访问，此处我们仍然保持裸机状态。
    Wlancmd help:丰富的wifi无线控制功能
    /etc/profile
    /etc/inetd
    /etc/services
    /var/:系统运行过程中使用的文件