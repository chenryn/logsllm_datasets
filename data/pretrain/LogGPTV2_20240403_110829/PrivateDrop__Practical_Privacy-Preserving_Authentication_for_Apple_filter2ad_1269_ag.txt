[37] Amos Fiat and Adi Shamir. “How to Prove Yourself: Practi-
cal Solutions to Identiﬁcation and Signature Problems”. In:
CRYPTO. Springer, 1986, pp. 186–194.
[38] Benjamin Fuller, Mayank Varia, Arkady Yerand Emily Shen,
Ariel Hamlin, Vijay Gadepally, Richard Shay, John Darby
Mitchell, and Robert K. Cunningham. “SoK: Cryptograph-
ically Protected Database Search”. In: S&P. IEEE, 2017,
pp. 172–191.
[39] Craig Gentry and Shai Halevi. “Compressible FHE with
Applications to PIR”. In: TCC. Springer, 2019, pp. 438–464.
[40] Oded Goldreich, Silvio Micali, and Avi Wigderson. “How
to Play any Mental Game or A Completeness Theorem for
Protocols with Honest Majority”. In: STOC. ACM, 1987,
pp. 218–229.
[41] Google Developers. Nearby - A platform for discovering
and communicating with nearby devices. URL: https://
developers.google.com/nearby (visited on 10/15/2020).
[42] Christoph Hagen, Christian Weinert, Christoph Sendner,
Alexandra Dmitrienko, and Thomas Schneider. “All the
Numbers are US: Large-scale Abuse of Contact Discovery in
Mobile Messengers”. In: NDSS. Internet Society, 2021.
[43] Carmit Hazay and Muthuramakrishnan Venkitasubramaniam.
“Scalable Multi-party Private Set-Intersection”. In: PKC.
Springer, 2017, pp. 175–203.
[44] Alexander Heinrich, Matthias Hollick, Thomas Schneider,
Milan Stute, and Christian Weinert. PrivateDrop Evaluation.
URL: https://github.com/seemoo-lab/privatedrop-
evaluation.
[45] Alexander Heinrich, Matthias Hollick, Thomas Schneider,
Milan Stute, and Christian Weinert. PrivateDrop Imple-
mentation. URL: https : / / github . com / seemoo - lab /
privatedrop.
[46] Alexander Heinrich and Milan Stute. OpenDrop: an Open
Source AirDrop Implementation. URL: https://github.
com/seemoo-lab/opendrop (visited on 10/15/2020).
[47] Russell Housley. “Cryptographic Message Syntax (CMS)”.
In: RFC 5652 (Sept. 2009). DOI: 10.17487/RFC5652.
[48] Troy Hunt. Have I Been Pwned. URL: https : / /
haveibeenpwned.com (visited on 10/15/2020).
[49] Kent Ickler. Hashcat Benchmarks for Nvidia GTX 1080TI.
June 20, 2017. URL: https://www.blackhillsinfosec.
com/hashcat- benchmarks- nvidia- gtx- 1080ti- gtx-
1070-hashcat-benchmarks/ (visited on 10/15/2020).
[50] Roi Inbar, Eran Omri, and Benny Pinkas. “Efﬁcient Scal-
able Multiparty Private Set-Intersection via Garbled Bloom
Filters”. In: SCN. Springer, 2018, pp. 235–252.
[51] Mihaela Ion, Ben Kreuter, Ahmet Erhan Nergiz, Sarvar Pa-
tel, Mariana Raykova, Shobhit Saxena, Karn Seth, David
Shanahan, and Moti Yung. “On Deploying Secure Comput-
ing: Private Intersection-Sum-with-Cardinality Protocols”.
In: EuroS&P. IEEE, 2020.
[52] Stanislaw Jarecki and Xiaomin Liu. “Efﬁcient Oblivious
Pseudorandom Function with Applications to Adaptive OT
and Secure Computation of Set Intersection”.
In: TCC.
Springer, 2009, pp. 577–594.
[53] Stanislaw Jarecki and Xiaomin Liu. “Fast Secure Computa-
tion of Set Intersection”. In: SCN. Springer, 2010, pp. 418–
435.
Stanislaw Jarecki and Xiaomin Liu. “Private Mutual Authen-
tication and Conditional Oblivious Transfer”. In: CRYPTO.
Springer, 2009, pp. 90–107.
[54]
[55] Daniel Kales, Christian Rechberger, Thomas Schneider,
Matthias Senker, and Christian Weinert. “Mobile Private
Contact Discovery at Scale”. In: USENIX Security. USENIX
Association, 2019, pp. 1447–1464.
[56] Seny Kamara, Payman Mohassel, Mariana Raykova, and
Seyed Saeed Sadeghian. “Scaling Private Set Intersection to
Billion-Element Sets”. In: FC. Springer, 2014, pp. 195–215.
[57] Florian Kerschbaum. “Outsourced Private Set Intersection
Using Homomorphic Encryption”. In: AsiaCCS. ACM, 2012,
pp. 85–86.
[58] Aggelos Kiayias, Nikos Leonardos, Helger Lipmaa, Kateryna
Pavlyk, and Qiang Tang. “Optimal Rate Private Informa-
tion Retrieval from Homomorphic Encryption”. In: PoPETs
2015.2 (2015), pp. 222–243.
[59] Ágnes Kiss, Jian Liu, Thomas Schneider, N. Asokan, and
Benny Pinkas. “Private Set Intersection for Unequal Set
Sizes with Mobile Applications”. In: PoPETs 2017.4 (2017),
pp. 177–197.
[60] Vladimir Kolesnikov, Ranjit Kumaresan, Mike Rosulek, and
Ni Trieu. “Efﬁcient Batched Oblivious PRF with Applica-
tions to Private Set Intersection”. In: CCS. ACM, 2016,
pp. 818–829.
[61] Vladimir Kolesnikov, Naor Matania, Benny Pinkas, Mike
Rosulek, and Ni Trieu. “Practical Multi-party Private Set
Intersection from Symmetric-Key Techniques”. In: CCS.
ACM, 2017, pp. 1257–1272.
3592    30th USENIX Security Symposium
USENIX Association
[62] Yehuda Lindell. “Fast Cut-and-Choose Based Protocols for
Malicious and Covert Adversaries”. In: CRYPTO. Springer,
2013, pp. 1–17.
[63] Helger Lipmaa and Kateryna Pavlyk. “A Simpler Rate-
Optimal CPIR Protocol”. In: FC. Springer, 2017, pp. 621–
638.
[65]
[64] Helger Lipmaa and Tomas Toft.
“Secure Equality and
Greater-Than Tests with Sublinear Online Complexity”. In:
ICALP. Springer, 2013, pp. 645–656.
Jeremy Martin, Douglas Alpuche, Kristina Bodeman, La-
mont Brown, Ellis Fenske, Lucas Foppe, Travis Mayberry,
Erik C. Rye, Brandon Sipes, and Sam Teplov. “Handoff All
Your Privacy - A Review of Apple’s Bluetooth Low Energy
Continuity Protocol”. In: PoPETs 2019.4 (2019), pp. 34–53.
[66] Matthias Marx, Ephraim Zimmer, Tobias Mueller, Maximil-
ian Blochberger, and Hannes Federrath. “Hashing of Person-
ally Identiﬁable Information is not Sufﬁcient”. In: Sicherheit.
Vol. P-281. LNI. GI e.V., 2018, pp. 55–68.
[67] Catherine A. Meadows. “A More Efﬁcient Cryptographic
Matchmaking Protocol for Use in the Absence of a Continu-
ously Available Third Party”. In: S&P. IEEE, 1986, pp. 134–
137.
[68] MIRACL UK Ltd. MIRACL – Multiprecision Integer and
Rational Arithmetic Cryptographic Library. URL: https:
//github.com/miracl/MIRACL (visited on 10/15/2020).
[69] National Institute of Standards and Technology. Secure Hash
Standard (SHS). Tech. rep. Aug. 2015.
[70] Muhammad Naveed, Seny Kamara,
and Charles V.
“Inference Attacks on Property-Preserving En-
Wright.
crypted Databases”. In: CCS. ACM, 2015, pp. 644–655.
[71] OpenSSL Software Foundation. OpenSSL: Cryptography
and SSL/TLS Toolkit. URL: https://www.openssl.org
(visited on 10/15/2020).
[72] Emmanuela Orsini, Nigel P. Smart, and Frederik Vercauteren.
“Overdrive2k: Efﬁcient Secure MPC over Z
2k from Some-
what Homomorphic Encryption”. In: CT-RSA. Springer,
2020, pp. 254–283.
[73] Daniel Pigatto, Natassya Silva, and Kalinka Castelo Branco.
“Performance Evaluation and Comparison of Algorithms for
Elliptic Curve Cryptography with El-Gamal based on MIR-
ACL and RELIC Libraries”. In: Journal of Applied Comput-
ing Research 112 (2011).
[74] Benny Pinkas, Mike Rosulek, Ni Trieu, and Avishay Yanai.
“PSI from PaXoS: Fast, Malicious Private Set Intersection”.
In: EUROCRYPT. Springer, 2020, pp. 739–767.
[77] Benny Pinkas, Thomas Schneider, Oleksandr Tkachenko,
and Avishay Yanai. “Efﬁcient Circuit-Based PSI with Lin-
ear Communication”. In: EUROCRYPT. Springer, 2019,
pp. 122–153.
[78] Benny Pinkas, Thomas Schneider, Christian Weinert, and Udi
Wieder. “Efﬁcient Circuit-Based PSI via Cuckoo Hashing”.
In: EUROCRYPT. Springer, 2018, pp. 125–157.
[79] Benny Pinkas, Thomas Schneider, and Michael Zohner.
“Faster Private Set Intersection Based on OT Extension”. In:
USENIX Security. USENIX Association, 2014, pp. 797–812.
[80] Benny Pinkas, Thomas Schneider, and Michael Zohner.
“Scalable Private Set Intersection Based on OT Extension”.
In: TOPS 21.2 (2018), 7:1–7:35.
[81] Lucian Popa, Bogdan Groza, and Pal-Stefan Murvay. “Perfor-
mance Evaluation of Elliptic Curve Libraries on Automotive-
Grade Microcontrollers”. In: ARES. ACM, 2019, 100:1–
100:7.
[82] Amanda C. Davi Resende and Diego F. Aranha. “Faster
In: FC. Springer,
Unbalanced Private Set Intersection”.
2018, pp. 203–221.
Peter Rindal and Mike Rosulek. “Improved Private Set Inter-
section Against Malicious Adversaries”. In: EUROCRYPT.
Springer, 2017, pp. 235–259.
[83]
[84] Peter Rindal and Mike Rosulek. “Malicious-Secure Private
Set Intersection via Dual Execution”. In: CCS. ACM, 2017,
pp. 1229–1242.
[85] Claus-Peter Schnorr. “Efﬁcient Identiﬁcation and Signatures
for Smart Cards”. In: CRYPTO. Springer, 1989, pp. 239–
252.
[86] Daniel Marcos Schwaycer. Instantly share ﬁles with people
around you with Nearby Share. Aug. 2020. URL: https:
/ / blog . google / products / android / nearby - share/
(visited on 10/15/2020).
[87] Adi Shamir. “On the Power of Commutativity in Cryptogra-
phy”. In: ICALP. Springer, 1980, pp. 582–595.
[88] Milan Stute, Alexander Heinrich, Jannik Lorenz, and
Matthias Hollick. “Disrupting Continuity of Apple’s Wireless
Ecosystem Security: New Tracking, DoS, and MitM Attacks
on iOS and macOS Through Bluetooth Low Energy, AWDL,
and Wi-Fi”. In: USENIX Security. To appear. USENIX
Association, 2021.
[89] Milan Stute, David Kreitschmann, and Matthias Hollick.
“Linux Goes Apple Picking: Cross-Platform Ad hoc Com-
munication with Apple Wireless Direct Link”. In: MobiCom.
ACM, 2018, pp. 820–822.
[75] Benny Pinkas, Mike Rosulek, Ni Trieu, and Avishay Yanai.
“SpOT-Light: Lightweight Private Set Intersection from
Sparse OT Extension”.
In: CRYPTO. Springer, 2019,
pp. 401–431.
[90] Milan Stute, David Kreitschmann, and Matthias Hollick.
“One Billion Apples’ Secret Sauce: Recipe for the Apple
Wireless Direct Link Ad hoc Protocol”. In: MobiCom. ACM,
2018, pp. 529–543.
[76] Benny Pinkas, Thomas Schneider, Gil Segev, and Michael
Zohner.
Private Set Intersection Using
Permutation-based Hashing”. In: USENIX Security. USENIX
Association, 2015, pp. 515–530.
“Phasing:
[91] Milan Stute, David Kreitschmann, and Matthias Hollick. The
Open Wireless Link Project. 2018. URL: https://owlink.
org.
USENIX Association
30th USENIX Security Symposium    3593
[92] Milan Stute, Sashank Narain, Alex Mariotto, Alexander Hein-
rich, David Kreitschmann, Guevara Noubir, and Matthias
Hollick.
“A Billion Open Interfaces for Eve and Mal-
lory: MitM, DoS, and Tracking Attacks on iOS and macOS
Through Apple Wireless Direct Link”. In: USENIX Security.
USENIX Association, 2019, pp. 37–54.
[93] Kurt Thomas, Jennifer Pullman, Kevin Yeo, Ananth Raghu-
nathan, Patrick Gage Kelley, Luca Invernizzi, Borbala
Benko, Tadek Pietraszek, Sarvar Patel, Dan Boneh, and Elie
Bursztein. “Protecting accounts from credential stufﬁng with
password breach alerting”. In: USENIX Security. USENIX
Association, 2019, pp. 1556–1571.
[94] Ni Trieu, Kareem Shehata, Prateek Saxena, Reza Shokri, and
Dawn Song. “Epione: Lightweight Contact Tracing with
Strong Privacy”. In: Data Eng. Bull. 43.2 (2020), pp. 95–
107.
[95] Xiao Wang, Samuel Ranellucci, and Jonathan Katz. “Authen-
ticated Garbling and Efﬁcient Maliciously Secure Two-Party
Computation”. In: CCS. ACM, 2017, pp. 21–37.
[96] David J. Wu, Ankur Taly, Asim Shankar, and Dan Boneh.
“Privacy, Discovery, and Authentication for the Internet of
Things”. In: ESORICS. Springer, 2016, pp. 301–319.
[97] Andrew Chi-Chih Yao. “How to Generate and Exchange
Secrets”. In: FOCS. IEEE, 1986, pp. 162–167.
[98] Ching-Hua Yu and Bo-Yin Yang. “Probabilistically Cor-
rect Secure Arithmetic Computation for Modular Conversion,
Zero Test, Comparison, MOD and Exponentiation”. In: SCN.
Springer, 2012, pp. 426–444.
[99] Qingji Zheng and Shouhuai Xu. “Veriﬁable Delegated Set
Intersection Operations on Outsourced Encrypted Data”. In:
IC2E. IEEE, 2015, pp. 175–184.
A Authentication Delay over AWDL
Fig. 9 shows the high variance of the authentication delay
of PrivateDrop over the AWDL interface. The lower and
upper error bars indicate the 0.05 and 0.95 quantiles, respec-
tively. Still, the median authentication delay for PrivateDrop
lies within 500 ms and 1 500 ms, depending on (m,n).
B PSI Precomputation
Fig. 10 shows the runtime of the PSI precomputation required
for calculating ui (cf. precomputation phase in Fig. 4) on
an iPhone 12. Even with a large address book (n = 15000),
the computation time does not exceed 5 s, which is very man-
ageable for a mobile device that charges overnight.
Figure 10: Runtime of PSI precomputation on an iPhone 12.
C Performance Comparison with Apple’s
AirDrop Implementation
We benchmark our base AirDrop implementation against Ap-
ple’s original one. To evaluate Apple’s implementation, we
leverage the system logging facility of macOS (cf. [88]) that
produces debug output for AirDrop and provides logs verbose
enough to distinguish the authentication phase. We calcu-
late the authentication delay as the timestamp difference of
the entries indicating the start and end of the authentication
phase. We provide the details in our evaluation repository [44].
We use the same hardware conﬁguration and environment as
described in § 6.2. We open the sharing pane on the Mac-
Book Pro and manually wake up the iPhone 12 by tapping on
the screen. We repeat this process 100 times and report on
the results in Fig. 11 as an empirical cumulative distribution
function. The results show that the best-case performance of
our implementation is similar to the original one. The high
variance of the delay can be attributed to the initialization
behavior of AWDL (cf. § 6.4).
Figure 9: Overall authentication delay for AirDrop (base-
line) and PrivateDrop with different set sizes (m,n) (MacBook
Pro 2019 → iPhone 12 via AWDL).
Figure 11: Authentication delay of our AirDrop implementation
and Apple’s (MacBook Pro 2019 → iPhone 12 via AWDL).
3594    30th USENIX Security Symposium
USENIX Association
100100050001000015000Numberofaddressbookentriesn050010001500Authenticationdelay[ms]Numberofidentiﬁersm11020AirDropbaseline(median)100100050001000015000Numberofaddressbookentriesn024Precomputationtime[s]0.00.20.40.60.81.0Cumulativeprobability50010001500Auth.delay[ms]OurAirDropimpl.Apple’sAirDropimpl.