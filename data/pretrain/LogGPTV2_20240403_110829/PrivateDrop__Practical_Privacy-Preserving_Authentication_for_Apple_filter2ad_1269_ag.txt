以下是优化后的参考文献和附录部分，使其更加清晰、连贯和专业：

### 参考文献

1. **Amos Fiat 和 Adi Shamir.** “如何证明自己：身份验证和签名问题的实用解决方案”。*CRYPTO.* Springer, 1986, 第 186-194 页。
2. **Benjamin Fuller, Mayank Varia, Arkady Yerand Emily Shen, Ariel Hamlin, Vijay Gadepally, Richard Shay, John Darby Mitchell, 和 Robert K. Cunningham.** “SoK: 加密保护的数据库搜索”。*S&P.* IEEE, 2017, 第 172-191 页。
3. **Craig Gentry 和 Shai Halevi.** “可压缩的全同态加密及其在 PIR 中的应用”。*TCC.* Springer, 2019, 第 438-464 页。
4. **Oded Goldreich, Silvio Micali, 和 Avi Wigderson.** “如何进行任何心理游戏或协议的完整性定理（诚实多数）”。*STOC.* ACM, 1987, 第 218-229 页。
5. **Google Developers.** 附近 - 发现和与附近设备通信的平台。URL: <https://developers.google.com/nearby> (访问日期：2020年10月15日)。
6. **Christoph Hagen, Christian Weinert, Christoph Sendner, Alexandra Dmitrienko, 和 Thomas Schneider.** “所有数字都是我们的：移动消息应用中大规模滥用联系人发现”。*NDSS.* Internet Society, 2021.
7. **Carmit Hazay 和 Muthuramakrishnan Venkitasubramaniam.** “可扩展多方私有集合交集”。*PKC.* Springer, 2017, 第 175-203 页。
8. **Alexander Heinrich, Matthias Hollick, Thomas Schneider, Milan Stute, 和 Christian Weinert.** PrivateDrop 评估。URL: <https://github.com/seemoo-lab/privatedrop-evaluation>.
9. **Alexander Heinrich, Matthias Hollick, Thomas Schneider, Milan Stute, 和 Christian Weinert.** PrivateDrop 实现。URL: <https://github.com/seemoo-lab/privatedrop>.
10. **Alexander Heinrich 和 Milan Stute.** OpenDrop：开源 AirDrop 实现。URL: <https://github.com/seemoo-lab/opendrop> (访问日期：2020年10月15日)。
11. **Russell Housley.** “加密消息语法 (CMS)”。*RFC 5652* (2009年9月)。DOI: 10.17487/RFC5652.
12. **Troy Hunt.** Have I Been Pwned。URL: <https://haveibeenpwned.com> (访问日期：2020年10月15日)。
13. **Kent Ickler.** Hashcat 基准测试 for Nvidia GTX 1080TI。2017年6月20日。URL: <https://www.blackhillsinfosec.com/hashcat-benchmarks-nvidia-gtx-1080ti-gtx-1070-hashcat-benchmarks/> (访问日期：2020年10月15日)。
14. **Roi Inbar, Eran Omri, 和 Benny Pinkas.** “通过加扰布隆过滤器实现高效的可扩展多方私有集合交集”。*SCN.* Springer, 2018, 第 235-252 页。
15. **Mihaela Ion, Ben Kreuter, Ahmet Erhan Nergiz, Sarvar Patel, Mariana Raykova, Shobhit Saxena, Karn Seth, David Shanahan, 和 Moti Yung.** “部署安全计算：私有交集-求和-带基数协议”。*EuroS&P.* IEEE, 2020.
16. **Stanislaw Jarecki 和 Xiaomin Liu.** “高效无感知伪随机函数及其在自适应 OT 和安全计算集合交集中的应用”。*TCC.* Springer, 2009, 第 577-594 页。
17. **Stanislaw Jarecki 和 Xiaomin Liu.** “快速安全计算集合交集”。*SCN.* Springer, 2010, 第 418-435 页。
18. **Stanislaw Jarecki 和 Xiaomin Liu.** “私有相互认证和条件无感知传输”。*CRYPTO.* Springer, 2009, 第 90-107 页。
19. **Daniel Kales, Christian Rechberger, Thomas Schneider, Matthias Senker, 和 Christian Weinert.** “大规模移动私有联系人发现”。*USENIX Security.* USENIX Association, 2019, 第 1447-1464 页。
20. **Seny Kamara, Payman Mohassel, Mariana Raykova, 和 Seyed Saeed Sadeghian.** “将私有集合交集扩展到十亿元素集”。*FC.* Springer, 2014, 第 195-215 页。
21. **Florian Kerschbaum.** “使用同态加密的外包私有集合交集”。*AsiaCCS.* ACM, 2012, 第 85-86 页。
22. **Aggelos Kiayias, Nikos Leonardos, Helger Lipmaa, Kateryna Pavlyk, 和 Qiang Tang.** “从同态加密中获得最优速率的私有信息检索”。*PoPETs* 2015.2 (2015), 第 222-243 页。
23. **Ágnes Kiss, Jian Liu, Thomas Schneider, N. Asokan, 和 Benny Pinkas.** “适用于不同大小集合的私有集合交集及其移动应用”。*PoPETs* 2017.4 (2017), 第 177-197 页。
24. **Vladimir Kolesnikov, Ranjit Kumaresan, Mike Rosulek, 和 Ni Trieu.** “高效的批量无感知 PRF 及其在私有集合交集中的应用”。*CCS.* ACM, 2016, 第 818-829 页。
25. **Vladimir Kolesnikov, Naor Matania, Benny Pinkas, Mike Rosulek, 和 Ni Trieu.** “基于对称密钥技术的实际多方私有集合交集”。*CCS.* ACM, 2017, 第 1257-1272 页。
26. **Yehuda Lindell.** “基于快速剪切选择协议的恶意和隐蔽对手”。*CRYPTO.* Springer, 2013, 第 1-17 页。
27. **Helger Lipmaa 和 Kateryna Pavlyk.** “一个更简单的最优 CPIR 协议”。*FC.* Springer, 2017, 第 621-638 页。
28. **Helger Lipmaa 和 Tomas Toft.** “具有次线性在线复杂度的安全相等性和大于测试”。*ICALP.* Springer, 2013, 第 645-656 页。
29. **Jeremy Martin, Douglas Alpuche, Kristina Bodeman, Lamont Brown, Ellis Fenske, Lucas Foppe, Travis Mayberry, Erik C. Rye, Brandon Sipes, 和 Sam Teplov.** “移交您的所有隐私 - 对苹果蓝牙低功耗连续协议的审查”。*PoPETs* 2019.4 (2019), 第 34-53 页。
30. **Matthias Marx, Ephraim Zimmer, Tobias Mueller, Maximilian Blochberger, 和 Hannes Federrath.** “个人身份信息的哈希处理是不够的”。*Sicherheit.* Vol. P-281. LNI. GI e.V., 2018, 第 55-68 页。
31. **Catherine A. Meadows.** “一种在缺少持续可用第三方情况下的更高效密码匹配协议”。*S&P.* IEEE, 1986, 第 134-137 页。
32. **MIRACL UK Ltd.** MIRACL - 多精度整数和有理数算术加密库。URL: <https://github.com/miracl/MIRACL> (访问日期：2020年10月15日)。
33. **National Institute of Standards and Technology.** 安全哈希标准 (SHS)。技术报告，2015年8月。
34. **Muhammad Naveed, Seny Kamara, 和 Charles V. Wright.** “对属性保留加密数据库的推理攻击”。*CCS.* ACM, 2015, 第 644-655 页。
35. **OpenSSL Software Foundation.** OpenSSL: 加密和 SSL/TLS 工具包。URL: <https://www.openssl.org> (访问日期：2020年10月15日)。
36. **Emmanuela Orsini, Nigel P. Smart, 和 Frederik Vercauteren.** “Overdrive2k: 从某种程度同态加密中高效安全的 MPC over Z_2^k”。*CT-RSA.* Springer, 2020, 第 254-283 页。
37. **Daniel Pigatto, Natassya Silva, 和 Kalinka Castelo Branco.** “基于 MIRACL 和 RELIC 库的椭圆曲线加密算法 El-Gamal 的性能评估与比较”。*Journal of Applied Computing Research* 112 (2011).
38. **Benny Pinkas, Mike Rosulek, Ni Trieu, 和 Avishay Yanai.** “PSI from PaXoS: 快速且恶意的私有集合交集”。*EUROCRYPT.* Springer, 2020, 第 739-767 页。
39. **Benny Pinkas, Thomas Schneider, Oleksandr Tkachenko, 和 Avishay Yanai.** “基于电路的高效 PSI 具有线性通信”。*EUROCRYPT.* Springer, 2019, 第 122-153 页。
40. **Benny Pinkas, Thomas Schneider, Christian Weinert, 和 Udi Wieder.** “基于 Cuckoo 哈希的高效电路 PSI”。*EUROCRYPT.* Springer, 2018, 第 125-157 页。
41. **Benny Pinkas, Thomas Schneider, 和 Michael Zohner.** “基于 OT 扩展的更快私有集合交集”。*USENIX Security.* USENIX Association, 2014, 第 797-812 页。
42. **Benny Pinkas, Thomas Schneider, 和 Michael Zohner.** “基于 OT 扩展的可扩展私有集合交集”。*TOPS* 21.2 (2018), 7:1–7:35.
43. **Lucian Popa, Bogdan Groza, 和 Pal-Stefan Murvay.** “车载级微控制器上的椭圆曲线库性能评估”。*ARES.* ACM, 2019, 100:1–100:7.
44. **Amanda C. Davi Resende 和 Diego F. Aranha.** “更快的不平衡私有集合交集”。*FC.* Springer, 2018, 第 203-221 页。
45. **Peter Rindal 和 Mike Rosulek.** “改进的私有集合交集对抗恶意对手”。*EUROCRYPT.* Springer, 2017, 第 235-259 页。
46. **Peter Rindal 和 Mike Rosulek.** “通过双重执行实现恶意安全的私有集合交集”。*CCS.* ACM, 2017, 第 1229-1242 页。
47. **Claus-Peter Schnorr.** “智能卡的有效身份验证和签名”。*CRYPTO.* Springer, 1989, 第 239-252 页。
48. **Daniel Marcos Schwaycer.** 使用 Nearby Share 立即与周围的人共享文件。2020年8月。URL: <https://blog.google/products/android/nearby-share/> (访问日期：2020年10月15日)。
49. **Adi Shamir.** “交换性在密码学中的力量”。*ICALP.* Springer, 1980, 第 582-595 页。
50. **Milan Stute, Alexander Heinrich, Jannik Lorenz, 和 Matthias Hollick.** “破坏苹果无线生态系统安全的连续性：iOS 和 macOS 通过蓝牙低功耗、AWDL 和 Wi-Fi 的新跟踪、DoS 和 MitM 攻击”。*USENIX Security.* 将发表。USENIX Association, 2021.
51. **Milan Stute, David Kreitschmann, 和 Matthias Hollick.** “Linux 去摘苹果：跨平台 ad hoc 通信与苹果无线直接链接”。*MobiCom.* ACM, 2018, 第 820-822 页。
52. **Benny Pinkas, Mike Rosulek, Ni Trieu, 和 Avishay Yanai.** “SpOT-Light: 从稀疏 OT 扩展中得到的轻量级私有集合交集”。*CRYPTO.* Springer, 2019, 第 401-431 页。
53. **Milan Stute, David Kreitschmann, 和 Matthias Hollick.** “十亿个苹果的秘密酱料：苹果无线直接链接 ad hoc 协议的配方”。*MobiCom.* ACM, 2018, 第 529-543 页。
54. **Benny Pinkas, Thomas Schneider, Gil Segev, 和 Michael Zohner.** “Phasing: 使用基于置换的哈希进行私有集合交集”。*USENIX Security.* USENIX Association, 2015, 第 515-530 页。
55. **Milan Stute, David Kreitschmann, 和 Matthias Hollick.** The Open Wireless Link Project. 2018. URL: <https://owlink.org>.
56. **Milan Stute, Sashank Narain, Alex Mariotto, Alexander Heinrich, David Kreitschmann, Guevara Noubir, 和 Matthias Hollick.** “为 Eve 和 Mallory 提供数十亿开放接口：通过苹果无线直接链接对 iOS 和 macOS 进行 MitM、DoS 和跟踪攻击”。*USENIX Security.* USENIX Association, 2019, 第 37-54 页。
57. **Kurt Thomas, Jennifer Pullman, Kevin Yeo, Ananth Raghunathan, Patrick Gage Kelley, Luca Invernizzi, Borbala Benko, Tadek Pietraszek, Sarvar Patel, Dan Boneh, 和 Elie Bursztein.** “通过密码泄露警报防止凭证填充攻击以保护账户”。*USENIX Security.* USENIX Association, 2019, 第 1556-1571 页。
58. **Ni Trieu, Kareem Shehata, Prateek Saxena, Reza Shokri, 和 Dawn Song.** “Epione: 强隐私保护的轻量级接触追踪”。*Data Eng. Bull.* 43.2 (2020), 第 95-107 页。
59. **Xiao Wang, Samuel Ranellucci, 和 Jonathan Katz.** “认证混淆和高效的两方恶意安全计算”。*CCS.* ACM, 2017, 第 21-37 页。
60. **David J. Wu, Ankur Taly, Asim Shankar, 和 Dan Boneh.** “物联网的隐私、发现和认证”。*ESORICS.* Springer, 2016, 第 301-319 页。
61. **Andrew Chi-Chih Yao.** “如何生成和交换秘密”。*FOCS.* IEEE, 1986, 第 162-167 页。
62. **Ching-Hua Yu 和 Bo-Yin Yang.** “概率正确的安全算术计算用于模转换、零测试、比较、MOD 和指数运算”。*SCN.* Springer, 2012, 第 426-444 页。
63. **Qingji Zheng 和 Shouhuai Xu.** “外包加密数据上的可验证委托集合交集操作”。*IC2E.* IEEE, 2015, 第 175-184 页。

### 附录

#### A. AWDL 上的认证延迟
图 9 显示了 PrivateDrop 在 AWDL 接口上的认证延迟的高方差。下限和上限误差条分别表示 0.05 和 0.95 分位数。然而，PrivateDrop 的认证延迟中值在 500 毫秒到 1500 毫秒之间，具体取决于 (m, n)。

#### B. PSI 预计算
图 10 显示了在 iPhone 12 上预计算 PSI 所需的运行时间（参见图 4 中的预计算阶段）。即使对于大型地址簿 (n = 15000)，计算时间也不超过 5 秒，这对于夜间充电的移动设备来说非常易于管理。

#### C. 与 Apple 的 AirDrop 实现的性能比较
我们基准测试了我们的基础 AirDrop 实现与 Apple 的原始实现。为了评估 Apple 的实现，我们利用了 macOS 的系统日志功能（参见 [88]），该功能为 AirDrop 生成调试输出，并提供了足以区分认证阶段的日志。我们将认证延迟计算为指示认证阶段开始和结束的日志条目的时间戳差异。我们在评估存储库 [44] 中提供了详细信息。我们使用与 § 6.2 中描述相同的硬件配置和环境。我们在 MacBook Pro 上打开共享面板，并手动唤醒 iPhone 12 通过点击屏幕。我们重复此过程 100 次，并在图 11 中以经验累积分布函数的形式报告结果。结果显示，我们实现的最佳性能与原始实现相似。延迟的高方差可以归因于 AWDL 的初始化行为（参见 § 6.4）。

![图 9](path/to/figure9.png)
*图 9: 不同集合大小 (m, n) 下 AirDrop（基线）和 PrivateDrop 的整体认证延迟 (MacBook Pro 2019 → iPhone 12 通过 AWDL)。*

![图 10](path/to/figure10.png)
*图 10: iPhone 12 上的 PSI 预计算运行时间。*

![图 11](path/to/figure11.png)
*图 11: 我们的 AirDrop 实现与 Apple 的实现的认证延迟 (MacBook Pro 2019 → iPhone 12 通过 AWDL)。*