IT Audit:
Security Beyond the Checklist
This paper is from the SANS IT Audit site. Reposting is not permited without express written permission.
Copyright SANS Institute
Author Retains Full Rights
Interested in learning more?
Check out the list of upcoming events offering
"IT Security Audit and Control Essentials (Audit 410)"
at http://it-audit.sans.orghttp://it-audit.sans.org/events/
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Audit of a Small LAMP (Linux, Apache, MySQL, and PHP)
Web Application
SANS GIAC Systems and Network Auditor (GSNA) practical
Version 3.1 — Option One
Herschel Gelman
May 2, 2004
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
2
ABSTRACT
This paper contains an audit of a web application available on the Internet that is
run on PHP, MySQL, Apache, and Linux—a combination commonly known as a
LAMP system.  As a web hosting company hosts the application, the scope of
the audit encompasses only those components available to the developer: the
PHP source code and any site configuration options available to the developer.
In the first section, the paper will cover initial research into the system, risks to
the system, and current practices regarding web application security.  Part two
contains the audit checklist, with testing procedures and compliance criteria.
Part three gives the results of the audit.  Part four contains the audit report, listing
the findings and recommendations.
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
3
TABLE OF CONTENTS
ABSTRACT.......................................................................................... 2
TABLE OF CONTENTS....................................................................... 3
1
Research in Audit, Measurement Practice, and Control ......... 6
1.1 SYSTEM IDENTIFICATION....................................................................... 6
1.2 MOST SIGNIFICANT RISKS TO THE SYSTEM............................................. 7
1.2.1
Threats to the System ...............................................................................7
1.2.2
Information Assets Affected by Audited Device.....................................8
1.2.3
Major Vulnerabilities of the Web Application ........................................9
1.3 CURRENT STATE OF PRACTICE............................................................ 11
1.3.1
Articles, Papers, and Mailing Lists .........................................................11
1.3.2
Tools.........................................................................................................13
2
Audit Checklist.......................................................................... 16
2.1 CHECK FOR HIDDEN COMMENTS IN HTML ......................................... 16
2.2 SESSION HIJACKING VIA COOKIE MANIPULATION................................. 17
2.3 SQL INJECTION................................................................................. 18
2.4 TEST FOR ADEQUATE SAFEGUARDS AGAINST BANDWIDTH THEFT ......... 19
2.5 SCAN FOR SAMPLE FILES OR SCRIPTS.................................................. 21
2.6 TEST BACKUP PROCEDURES............................................................... 23
2.7 UNSAFE HIDDEN FORM ELEMENTS...................................................... 24
2.8 ENSURE DIRECTORY BROWSING SETTINGS ARE CORRECT.................... 26
2.9 ATTEMPT TO BRUTE FORCE ADMINISTRATIVE ACCOUNT....................... 27
2.10 VERIFY SECURITY OF ANY CLIENT-SIDE JAVASCRIPT.......................... 29
3
Audit Testing, Evidence, and Findings ................................... 32
3.1 CHECK FOR HIDDEN COMMENTS IN HTML ......................................... 32
3.1.1
Evidence...................................................................................................32
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
4
3.1.2
Findings....................................................................................................33
3.2 SESSION HIJACKING VIA COOKIE MANIPULATION................................. 33
3.2.1
Evidence...................................................................................................33
3.2.2
Findings....................................................................................................34
3.3 SQL INJECTION................................................................................. 34
3.3.1
Evidence...................................................................................................34
3.3.2
Findings....................................................................................................36
3.4 TEST FOR ADEQUATE SAFEGUARDS AGAINST BANDWIDTH THEFT ......... 37
3.4.1
Evidence...................................................................................................37
3.4.2
Findings....................................................................................................38
3.5 SCAN FOR SAMPLE FILES OR SCRIPTS.................................................. 38
3.5.1
Evidence...................................................................................................38
3.5.2
Findings....................................................................................................39
3.6 TEST BACKUP PROCEDURES............................................................... 39
3.6.1
Evidence...................................................................................................39
3.6.2
Findings....................................................................................................40
3.7 UNSAFE HIDDEN FORM ELEMENTS...................................................... 41
3.7.1
Evidence...................................................................................................41
3.7.2
Findings....................................................................................................42
3.8 ENSURE DIRECTORY BROWSING SETTINGS ARE CORRECT.................... 42
3.8.1
Evidence...................................................................................................42
3.8.2
Findings....................................................................................................43
3.9 ATTEMPT TO BRUTE FORCE ADMINISTRATIVE ACCOUNT....................... 43
3.9.1
Evidence...................................................................................................44
3.9.2
Findings....................................................................................................44
3.10 VERIFY SECURITY OF ANY CLIENT-SIDE JAVASCRIPT.......................... 45
3.10.1 Evidence...................................................................................................45
3.10.2 Findings....................................................................................................46
4
Audit Report.............................................................................. 47
4.1 EXECUTIVE SUMMARY ........................................................................ 47
4.2 AUDIT FINDINGS ................................................................................ 47
4.2.1
Check For Hidden Comments in HTML ...............................................47
4.2.2
Session Hijacking Via Cookie Manipulation.........................................48
4.2.3
SQL Injection ...........................................................................................48
4.2.4
Test for Adequate Safeguards Against Bandwidth Theft.....................48
4.2.5
Scan for Sample Files or Scripts ............................................................48
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
5
4.2.6
Test Backup Procedures ........................................................................49
4.2.7
Unsafe Hidden Form Elements .............................................................49
4.2.8
Ensure Directory Browsing Settings Are Correct..................................49
4.2.9
Attempt to Brute Force Administrative Account..................................49
4.2.10 Verify Security of any Client-Side Javascript.........................................50
4.3 AUDIT RECOMMENDATIONS ................................................................ 51
4.3.1
Highly Recommended Actions..............................................................51
4.3.1.1 Protect Against Bandwidth Theft...............................................................................51
4.3.1.1.1
Description..........................................................................................................51
4.3.1.1.2
Costs....................................................................................................................51
4.3.1.1.3
Compensating Controls.....................................................................................52
4.3.2
Lower Priority Recommendations ........................................................52
4.3.2.1 SQL Injection ...............................................................................................................52
4.3.2.2 Hidden form elements................................................................................................52
4.3.2.3 Future password safety ..............................................................................................52
References....................................................................................... 54
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
6
1 Research in Audit, Measurement Practice, and Control
1.1 System Identification
The system to be audited is a database-driven web application that is available
on the Internet.  It allows the public to create free accounts, search the review
database, submit new votes and reviews on items in the database, and add new
items to the database.  It also has administrative functionality, so those users
who are granted the appropriate rights can perform administrative tasks through
the same web interface.
For the purposes of this document, we will refer to the application as AuditApp.
The application design and development was a one-man effort, and therefore
only this single developer has reviewed the system.  This is also this developer’s
first time using PHP and SQL, which increases the likelihood that potential secu-
rity holes have made their way into the code.  The web application was made
available to the public via the Internet with no comprehensive security review.
The goal of this audit is to provide an independent security evaluation of the web
application.
The application is powered by what is known as a “LAMP” system.  This acronym
refers to the open source combination of Linux as the operating system, Apache
as the web server, MySQL as the backend database server, and PHP, Perl, or
Python as the scripting language.  In this specific case, the system is running
Debian Linux 3.0r2, Apache 1.3.29, MySQL 4.0.17, and PHP 4.2.3.  A large web
hosting company runs the web and database servers.  
The scope of this audit encompasses the web application level of this system:
the PHP code itself.  It also covers the customer’s workflow and interactions with
the web hosting server, as potential vulnerabilities could be introduced in that
way as well.  In addition, it covers any configuration options for the web site that
are available to the developer, but not options that are set by the web hosting
company that the customer has no control over.  The MySQL database, Apache
server, and the operating system itself are outside the scope of this audit.  The
customer has no control over any of these components, as the web hosting com-
pany manages these portions of the system.  Ideally, these aspects should also
be examined in a separate audit.
However, any obvious security issues with the web host’s configurations that are
discovered during the course of the audit will be reported, as the choice of a web
hosting company is still within the developer’s control.  If it turns out that this web
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
7
host uses poor security practices, the developer has the option of switching to a
company with tighter security.
1.2 Most Significant Risks to the System
1.2.1 Threats to the System
Because of the single owner and developer of this web site, intentional internal
threats are not an issue; there are no disgruntled employees that may be at-
tempting to damage the site.  The system administrators at the web hosting
company are considered external in this case, because our audit scope is focus-
ing on the web application code itself.
The data stored on the web server is all drawn from a combination of publicly
available sources and input from visitors to the web site.  The only data stored on
the site that may be of possible interest to an outside party would be the collec-
tion of e-mail address in the database, as all users who sign up on the site are
required to include a valid e-mail address.  Those addresses could be sold to
spammers, and therefore might have some small value to an intruder.
The following table details some of the possible threats to this system:
Threat
Effect
Accidental 
program-
ming error by applica-
tion developer
Web site visitors receive error messages or see im-
proper site operation.  Could divulge sensitive informa-
tion (database table names, directory paths, user-
names).  Loss of confidence in site by the public, lead-
ing to possible loss in revenue.  Could also give admin-
istrative access to the web application to all visitors.
Exploit against pro-
gramming error in web
application code
Attacker could gain access to user-level account on web
host, full access to customer’s database on database
server.  That gives full access to all e-mail addresses
stored in the database, plus access to modify or delete
any information in the database.  The net effect is a loss
of privacy for users of the site, and possible loss in
revenue due to public’s loss in confidence of the site,
and/or due to loss of data.
Loss of data by web
hosting 
company—
this could be due to
an attack on their sys-
tems, 
environmental
threats, etc.
If the web hosting company lost all the data for the web
site—application code and database contents—then the
customer would need to fall back to his own backups.  If
there were no backups, or if the backups were not func-
tional, the developer would need to build the web site
from scratch, including all code and data, and all users
would need to register again.  This would be a cata
© SANS Institute 2004, Author retains full rights.
Key fingerprint = AF19 FA27 2F94 998D FDB5 DE3D F8B5 06E4 A169 4E46
© SANS Institute 2004,
As part of GIAC practical repository.
Author retains full rights.
Herschel Gelman SANS GSNA Practical Assignment
Version 3.1 — Option 1
8
Threat
Effect
strophic loss, and it is possible that the site simply would
not recover from this, due to the large amount of data
that would need to be re-entered.  It would also be im-