machine siblings, as inferred by applying TCP times-
tamp method on active DNS equivalence classes.
Figure 11: Relationship between equipment siblings and
size of the largest inferred machine sibling group within
the equipment equivalence classes.
3.6 DNS Machine Siblings
Finally, we note that the passively and actively collected
DNS siblings may be, and often are, equipment siblings
– i.e. a group of machines operating to service DNS re-
quests. Similarly, a single IPv4 or IPv6 address may
represent the outward facing address for a larger group
of machines behind that address. To better differentiate
such cases, we seek to identify DNS machine siblings,
i.e. IPv4 and IPv6 addresses that exist on the same phys-
ical machine, among the previously inferred equipment
sibling equivalence classes.
We therefore tie the passive and active DNS data col-
lection with our TCP timestamp-based sibling inference
mechanism by inducing remote resolvers to initiate TCP
connections via truncation as described in §2.3.
While actively probing DNS resolvers, we capture all
TCP packets. We wish to determine whether the equiv-
alence classes obtained from active probing can be re-
duced to machine siblings. To cull machine siblings, we
determine the timestamp skew for each IP address within
an active DNS equivalence class. We compare the skew
of an IP in question with all machine siblings of the ex-
isting equivalence class. An IP is added to the machine
sibling group with the smallest q = 1.0,
we create a new machine sibling group with a single IP.
This creation of machine sibling equivalence classes con-
tinues until all IPs of the equipment equivalence class
are clustered. We repeat for all equipment equivalence
classes.
For example, the largest equivalence class from active
probing includes 172 IP addresses, 78 of which are IPv6.
Of these 172 IPs, we identify six different machine sib-
ling groups. The largest machine sibling group consists
of 131 IPs, while the second largest contains 6 IPs. 26
IPs have non-monotonic timestamps, while 1 IP did not
negotiate timestamps.
We examine the relationship between the equipment
siblings as inferred by active DNS probing versus ma-
chine siblings. Figure 10 provides the cumulative frac-
tion of DNS equivalence classes versus the number of
machine equivalence classes in the equipment class. We
observe that nearly 60% of the DNS equivalence classes
are in fact machine siblings, i.e. all of the IPs within the
equivalence class belong to the same machine as inferred
by our timestamp method. Another 38% of the equiva-
lence classes have at most two groups of equipment sib-
lings. Fewer than 1% of the actively collected siblings
correspond to 3 or more machine sibling groups.
Next, we examine the size of the machine sibling
groups within the active DNS equipment equivalence
classes. Figure 11 shows the cumulative fraction of DNS
equivalence classes versus the ratio of the largest inferred
machine sibling group to the size of the original equip-
ment equivalence class. For example, in the aforemen-
tioned equivalence class, the ratio is 0.76 = 131/172.
We see that for approximately 50% of the equipment
equivalence classes, the ratio is 1.0, indicating that the
equivalence class is covered by a single machine sibling
group. Approximately 45% have a ratio of 0.5, meaning
that the largest machine sibling group accounts for half
of the total IPs within the equipment equivalence class.
4 Discussion
In this Section, we discuss additional details and impli-
cations of our methodology and results. In particular, we
examine temporal effects, AS partitioning of IPv4 and
IPv6 addresses, and root causes for the large equivalence
classes we observe.
10
4.1 Temporal Effects
As address associations are collected over time,
the
equivalence classes change too. For example, suppose
the system reports association (v4′, v6′). If neither ad-
dresses is present in the existing equivalence classes, we
create a new equivalence class containing just this pair. If
only one of these addresses was observed previously, an
existing equivalence class is increased. If both addresses
are previously known and are in the same equivalence
class, then possibly a new edge is added to the graph.
Lastly, if both addresses are previously known, but are in
different equivalence classes, then the two prior equiva-
lence classes are merged into one, with this new address
pair forming the joining edge.
If an address pair remains in a 1-1 class over a pe-
riod of time (six months for the passive dataset), then we
gain conﬁdence that these candidate siblings are at least
equipment-siblings. Equipment-siblings also likely per-
tain to the m-n equivalence classes that collapse to 1-1
when the addresses are aggregated (after) to preﬁxes –
note the increase in percentage from 14% to 39% in Ta-
ble 1.
Similarly, with the targeted ﬁngerprinting technique,
a common clock skew may imply machine-siblings, al-
though with two physical interfaces on a single machine
that are separately assigned IPv4 and IPv6 addresses. We
hope to reﬁne our notion of equipment and machine sib-
lings as we gain more insight into such relationships.
4.2 AS’s of DNS address pairs
In contrast to the ﬁngerprinted address pairs of Alexa
(§3.5), for which there is not an implied coupling, we
might expect a stronger AS match between address pairs
of the nameservers involving DNS resolution. However,
of the resolver address pairs in the dataset (§3.2), exclud-
ing those whose IPv6 address is 6to4 or Teredo, 31%
have addresses in distinct ASes, as opposed to 18% of
the Alexa sites.
If we also exclude those pairs whose
IPv6 address is in AS 6939, an IPv6 tunnel broker [14],
the percentage is still 25%. Manual checks on the more
popular pairs with different ASes reveal companies using
separate ASes for IPv4 and IPv6, or those likely having a
business relationship, where possibly the network equip-
ment is owned by one company, but one of addresses is
registered with the other. The caveats in §3.5 again apply.
4.3 Large Equivalence Classes
’
s
S
A
/
s
e
x
i
f
e
r
p
/
s
e
s
s
e
r
d
d
a
f
o
t
n
e
c
r
e
p
 70
 60
 50
 40
 30
 20
 10
 0
full data set
aggregate to prefixes before
aggregate to prefixes (after)
restrict to final week, aggregate to prefixes (after)
aggregate to AS’s (after)
3
5
10
30
100
300
1000
3000
10000
number of v4 + v6 address/prefixes/AS’s in equiv. class
Figure 12: Percent of v4 + v6 address/preﬁxes in equiv-
alence classes of at least a given size
2. Either IPv4 or IPv6 is behind a Network Address
Translation (NAT) device [34], in which case we ob-
serve multiple addresses of the non-translated protocol,
and one or two from the other.
3. Carrier grade NAT [19].
4. Middleboxes and load balancing, e.g. [2].
5. Auto-tunneling such as 6to4 and Teredo [8].
6. Hosts and devices that vary the lower order bits of
the IPv6 address [28].
7. Public DNS services, e.g. [13].
8. Open, recursive nameservers [5].
9. Address changes over time [36].
10. Mechanisms that subvert the multi-level hierarchy,
such as manual or automated probes from different lo-
cations directed to speciﬁc nameservers.
11. Shared caches.
If NS records returned from the
ﬁrst-level are saved in a shared cache (with TTL of 12
hours for the present data set) and subsequently used by
another nameserver that sends a query over v6, then the
second-level will discover multiple v6’s associated with
a single v4. A short TTL on the ﬁnal A or AAAA record
(20 seconds in the data set) increases reuse of the cached
NS record. Furthermore, after the NS TTL expires and
some other nameserver using the shared cache does the
lookup at the ﬁrst-level, then another v4 address could
be added to the equivalence class. Considering subsets
of the six-month data set, e.g. the ﬁnal week, the classes
are simpler, though still complex.
There are a variety of potential reasons why address pairs
may form equivalence classes larger than 1-1:
1. An interface with more than one IPv4 and/or more
than one IPv6 address.
Figure 12 is analogous to Figure 7 except that it ana-
lyzes the passive-DNS data set. Note the larger range on
the x-axis as compared with Figure 7. Figure 12 shows
that although the aggregation to preﬁxes (after the com-
putation of the equivalence classes), the dark-blue line,
11
substantially reduces the size, still 20% of the preﬁxes
are in equivalence classes of size 19 or more and 10%
in equivalence classes of size 64 or more. When we re-
strict the data to the ﬁnal week, and aggregate to pre-
ﬁxes, there is again a signiﬁcant reduction, though it is
unclear how much is due to simply less data, and how
much to removal of old associations that are no longer
active. When we aggregate the full data set to AS’s, the
equivalence classes become rather small, except, as was
the case the active-DNS measurement, for a single large
one, which here is of size 412-200. Again, as before, the
dominant AS’s are 15169 and 6939.
A strong trend in our investigation is that with addi-
tional data collection, greater complexity appears. This
is indicated in Figure 6 where repeated lookups by the
same set of open resolvers reveal new nameserver ad-
dresses, and the resulting equivalence classes become
larger as the number of lookups goes from 1 to 32. This
is also indicated in Table 1 and Figure 12 where the set of
preﬁxes seen in the ﬁnal week is substantially less than
over the sixth-months, and the equivalence classes are
substantially smaller (though for this longer time span
some of the address pairings may no longer be active).
The new nameservers that are seen are often, but not al-
ways, within the same /24 or /64 as those previously ob-
served, as one would expect from a bank load balanced
nameservers.
lookups in a single resolution operation and can also
force resolvers to utilize TCP; and iii) an active TCP
physical device ﬁngerprinting technique that more pre-
cisely identiﬁes IPv4 and IPv6 addresses present on the
same machine.
We ﬁnd signiﬁcant complexity, as measured by large
equivalence classes in both the active and passive data
sets, between IPv4 and IPv6 associations. Much of
this complexity is attributable to large DNS resolver
clusters used by large providers. Further complicating
“clean” association of addresses are instances where op-
erators employ shared caches, load balancing, NAT, car-
rier grade NAT, IPv6 address randomization, or mixtures
thereof.
While we examine servers in-depth, the relationship
between IPv4 and IPv6 router addresses is an important
infrastructure component we plan to address in future
work to better understand topological differences.
The primary implication of our work is an under-
appreciated fact: that the IPv4 and IPv6 addresses of In-
ternet servers frequently belong to different interfaces,
machines, and even autonomous systems. We hope that
our results illuminate not only some of the underly-
ing complexity between IPv4 and IPv6 as deployed in
the Internet today, but also properties to protect critical
infrastructure and methodologies for conducting sound
IPv4/IPv6 comparison measurements.
5 Conclusions
References
This paper examines the relationship between IPv4 and
IPv6 addresses of Internet server infrastructure. Our pri-
mary contribution is a methodology for characterizing
the inter-relation of IPv4 and IPv6 among Internet DNS
and web servers. We deploy both active and passive
measurement techniques to discover groups of equip-
ment equivalence classes, and then tie the techniques to-
gether with physical TCP ﬁngerprinting in order to dis-
cover more granular machine equivalence classes.
While prior work explores IPv6 client adoption and
penetration, to our knowledge this paper is the ﬁrst to
take a comprehensive look at the server-side where IPv6
deployment is active [10, 1]. Characterizing server IPv6
addresses and their relation to IPv4 is important in: i)
tracking the evolution of IPv6; ii) understanding the po-
tential for correlated failures and security risks when
IPv4 and IPv6 services are physically colocated; and iii)
preventing erroneous Internet measurements intending to
compare the performance of IPv4 and IPv6 paths.
We develop and deploy three novel measurement sys-
tems: i) a passive DNS collection using a two-level DNS
hierarchy that encodes IPv4 addresses within IPv6 name-
server records; ii) an active DNS probing system that
induces a combination of IPv4 and IPv6 DNS resolver
[1] IPv6 Implementors Conference, 2010.
https://sites.
google.com/site/ipv6implementors/2010/agenda.
[2] ABLEY, J. A software approach to distributing requests for
http://ftp.isc.org/isc/pubs/tn/
DNS service, 2004.
isc-tn-2004-1.html.
[3] AKAMAI. Edgscape geolocation, 2012. http://www.akamai.
com/html/technology/products/edgescape.html.
[4] ALEXA. Top 1,000,000 sites, 2012. http://www.alexa.com/
topsites.
[5] ARENDS, R., AUSTEIN, R., LARSON, M., MASSEY, D., AND
ROSE, S. DNS Security Introduction and Requirements. RFC
4033 (Proposed Standard), Mar. 2005. Updated by RFC 6014.
[6] BELLIS, R. DNS Transport over TCP - Implementation Require-
ments. RFC 5966 (Proposed Standard), Aug. 2010.
[7] CAI, X., HEIDEMANN, J., KRISHNAMURTHY, B., AND WILL-
INGER, W. Towards an AS-to-organization map. In Proceedings
of the 10th annual conference on Internet measurement (2010),
pp. 199–205.
[8] CARPENTER, B., AND MOORE, K. Connection of IPv6 Do-
mains via IPv4 Clouds. RFC 3056 (Proposed Standard), Feb.
2001.
[9] CLAFFY, K. Tracking IPv6 evolution: data we have and data we
need. SIGCOMM Comput. Commun. Rev. 41, 3 (July 2011), 43–
48.
[10] COMCAST.
IPv6 Information Center, 2012.
http://www.
comcast6.net/.
12
[34] SRISURESH, P., AND EGEVANG, K. Traditional IP Network Ad-
dress Translator (Traditional NAT). RFC 3022 (Informational),
Jan. 2001.
[35] VIXIE, P. Extension Mechanisms for DNS (EDNS0). RFC 2671
(Proposed Standard), Aug. 1999.
[36] XIE, Y., YU, F., ACHAN, K., GILLUM, E., GOLDSZMIDT, M.,
AND WOBBER, T. How dynamic are ip addresses? In Proceed-
ings of the 2007 conference on Applications, technologies, ar-
chitectures, and protocols for computer communications (2007),
pp. 301–312.
[37] ZANDER, S., ANDREW, L. L. H., ARMITAGE, G., HUSTON,
G., AND MICHAELSON, G. Mitigating sampling error with mea-
suring internet client ipv6 capabilities. In Proceedings of the 12th
ACM SIGCOMM conference on Internet measurement (2012).
[11] DEERING, S., AND HINDEN, R.
Internet Protocol, Version 6
(IPv6) Speciﬁcation. RFC 2460 (Draft Standard), Dec. 1998.
[12] ELZ, R., AND BUSH, R. Clariﬁcations to the DNS Speciﬁcation.
RFC 2181 (Proposed Standard), July 1997. Updated by RFCs
4035, 2535, 4343, 4033, 4034, 5452.
[13] GOOGLE. Public DNS, 2012. https://developers.google.
com/speed/public-dns/.
[14] HURRICANE ELECTRIC.
IPv6 tunnel broker service, 2012.
http://tunnelbroker.net/.
[15] HUSTON, G.
IPv6 BGP Statistics, 2012.
http://bgp.
potaroo.net/v6/as2.0/.
[16] ISOC.
World
IPv6 Day,
2011.
http:
//www.internetsociety.org/ipv6/
archive-2011-world-ipv6-day.
[17] ISOC.
World IPv6 Launch,
2012.
http://www.
worldipv6launch.org.
[18] JACOBSON, V., BRADEN, R., AND BORMAN, D. TCP Exten-
sions for High Performance. RFC 1323, May 1992.
[19] JIANG, S., GUO, D., AND CARPENTER, B. An Incremental
Carrier-Grade NAT (CGN) for IPv6 Transition. RFC 6264 (In-
formational), June 2011.
[20] KOHNO, T., BROIDO, A., AND CLAFFY, K. C. Remote phys-
ical device ﬁngerprinting. In Proceedings of IEEE Security and
Privacy (2005), pp. 211–225.
[21] KREIBICH, C., WEAVER, N., NECHAEV, B., AND PAXSON,
V. Netalyzr: illuminating the edge network. In Proceedings of
the 10th ACM SIGCOMM conference on Internet measurement
(2010), pp. 246–259.
[22] LUCKIE, M., AND HUFFAKER, B.
trends
and tidbits of 4,800 dual-stack ases. In CAIDA AIMS Workshop
(2012).
IPv6 deployment:
[23] LYON, G. F. Nmap Network Scanning: The Ofﬁcial Nmap
Project Guide to Network Discovery and Security Scanning.
2009.
[24] MEYER, D. University of Oregon RouteViews, 2012. http:
//www.routeviews.org.
[25] MOCKAPETRIS, P. Domain names - implementation and speci-
ﬁcation. RFC 1035 (Standard), Nov. 1987.
[26] MOHAN, R. Will U.S. Government Directives Spur IPv6 Adop-
tion?, Sept. 2010. http://www.circleid.com/.
[27] MOON, S., SKELLY, P., AND TOWSLEY, D. Estimation and
In
removal of clock skew from network delay measurements.
Proceedings of INFOCOM (mar 1999), vol. 1, pp. 227 –234.
[28] NARTEN, T., DRAVES, R., AND KRISHNAN, S. Privacy Exten-
sions for Stateless Address Autoconﬁguration in IPv6. RFC 4941
(Draft Standard), Sept. 2007.
[29] NOMINUM.
Intelligent DNS, 2012. http://www.nominum.
com/.
[30] NYGREN, E., SITARAMAN, R. K., AND SUN, J. The akamai
network: a platform for high-performance internet applications.
SIGOPS Oper. Syst. Rev. 44, 3 (Aug. 2010), 2–19.
[31] RIPE NCC. World IPv6 Day Measurements, 2011. http://
v6day.ripe.net.
[32] SARRAR, N., MAIER, G., AGER, B., SOMMER, R., AND UH-
Investigating IPv6 trafﬁc: what happened at the world
LIG, S.
IPv6 day? In Proceedings of PAM (2012).
[33] SILBERSACK, M. J.
domization without sacriﬁcing interoperability.
of BSDCan (2006).
Improving TCP/IP security through ran-
In Proceedings
13