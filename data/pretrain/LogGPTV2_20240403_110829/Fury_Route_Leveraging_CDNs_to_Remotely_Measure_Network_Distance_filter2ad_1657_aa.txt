title:Fury Route: Leveraging CDNs to Remotely Measure Network Distance
author:Marcel Flores and
Alexander Wenzel and
Kevin Chen and
Aleksandar Kuzmanovic
Fury Route: Leveraging CDNs
to Remotely Measure Network Distance
Marcel Flores(B), Alexander Wenzel, Kevin Chen, and Aleksandar Kuzmanovic
Northwestern University, Evanston, USA
PI:EMAIL
Abstract. Estimating network distance between arbitrary Internet end-
points is an essential primitive in applications ranging from performance
optimization to network debugging and auditing. Enabling such a prim-
itive without deploying new infrastructure was demonstrated via DNS.
However, the proliferation of DNS hosting has made DNS-based mea-
surement techniques far less dependable. In this paper, we show that
the heterogeneous infrastructure of diﬀerent CDNs, combined with the
proliferation of the EDNS0 client-subnet extension (ECS), enables novel
infrastructureless measurement. We design Fury Route, a system that
estimates network distance by utilizing ECS to construct a virtual path
between endpoints via intermediate CDN replicas.
Fury Route requires no additional infrastructure to be deployed. The
measured endpoints do not need to participate by sending or respond-
ing to probes. Fury Route further generates no load on endpoints. It
only queries DNS, whose infrastructure is designed for large loads. We
extensively evaluate Fury Route and demonstrate that (i) the key to
Fury Route’s ability to construct virtual paths lies in the heterogeneity
of the underlying CDNs, (ii) Fury Route is eﬀective in revealing rela-
tive network distance, needed in many real-world scenarios, (iii) caching
can dramatically reduce Fury Route’s DNS overhead, making it a useful
system in practice.
1 Introduction
The ability to estimate network distance between arbitrary endpoints on the
Internet is fundamentally necessary in numerous scenarios [16]. Such estimates
have been shown to heavily correlate with actual end-to-end performance (in
terms of throughput and delay) between the two endpoints [23,30].
With King [16], Gummadi et al. showed that DNS infrastructure could be
eﬀectively utilized to measure network distance without access to any of the
endpoints. By using open recursive DNS resolvers and by relying on the prox-
imity of clients and servers to their authoritative DNS servers, they manage to
approximate the distance between the endpoints. Nonetheless, 15 years later,
the Internet has become a much diﬀerent place. On one hand, the number of
open recursive DNS resolvers is rapidly decreasing [17]. On the other hand, DNS
hosting (i.e., outsourcing DNS services to the cloud [1–3,5–8]), is fundamentally
c(cid:2) Springer International Publishing AG, part of Springer Nature 2018
R. Beverly et al. (Eds.): PAM 2018, LNCS 10771, pp. 87–99, 2018.
https://doi.org/10.1007/978-3-319-76481-8_7
88
M. Flores et al.
blurring the assumption of co-location of endpoints (both clients and servers)
and authoritative DNS servers.
We present Fury Route, a system that aims to estimate the network distance
between arbitrary Internet endpoints. Fury Route relies on (i) the existence of
diﬀerent Content Distribution Networks (CDNs) and their heterogeneous deploy-
ment (ii) CDNs’ common desire to direct clients to nearby CDN replicas, and
(iii) the proliferation of EDNS0 client-subnet extension (ECS) [12], a mecha-
nism by which a host issuing DNS requests can indicate the origin of the request
Fury Route constructs a virtual path between source and destination, consisting
of CDN replicas from diﬀerent providers, by issuing ECS requests on behalf of
endpoints and intermediate CDN replicas. We show that the length of such a
constructed path correlates with the latency between the two endpoints.
Fury Route requires no additional infrastructure to be deployed. The mea-
sured endpoints do not need to cooperate by sending or responding to probes.
Fury Route generates no load on the parties involved: It only queries DNS, whose
infrastructure is designed to handle large loads. While Fury Route utilizes the
DNS infrastructure, it is in no way impacted by availability of recursive DNS
resolvers, nor is it aﬀected by DNS hosting. Fury Route utilizes the mapping
work done by CDNs, and it eﬀectively extracts this information via DNS.
We evaluate Fury Route using ground truth obtained from PlanetLab and
RIPE Atlas platforms, testing from around 9000 nodes well distributed across
countries and networks. We ﬁnd that in the median case, Fury Route is able to
construct chains between more than 80% of origin and destination pairs. This
signiﬁcantly outperforms other evaluated systems, i.e., King [16] and iPlane [19],
which have the convergence rate of 4% and 56% on the same data set, respec-
tively. We further demonstrate that despite its infrastructureless properties, Fury
Route shows accuracy comparable to iPlane, which conducts large-scale Inter-
net measurements for this purpose. In particular, Fury Route is able to correctly
order up to 83% of destinations in the median case. We further show our graph
caching technique is able to reduce queries by 80%.
2 Background and Measurement
The EDNS0 client-subnet extension (ECS) provides a mechanism by which a
host issuing DNS requests can label their requests with a subnet, indicating the
origin of the request. The purpose of this extension is to aid in DNS-based replica
selection and addresses challenges which arise from clients being far away from
their LDNS server [12,22]. Upon receiving an ECS request, the authoritative
DNS server uses the submitted subnet to perform its replica selection, according
to its individual policy. When responding to the query, the answer includes a
scope netmask ﬁeld. If this value is less than or equal to the client-speciﬁed
subnet length (i.e., a larger subnet), it indicates the set of subnets which would
receive the same result, for caching purposes. If the value is greater than the
supplied length (i.e., smaller subnet), it indicates the DNS server would like the
client to resubmit with a more speciﬁc subnet.
Fury Route: Leveraging CDNs to Remotely Measure Network Distance
89
Fury Route will take advantage of EDNS0 in two ways. First, it uses the
client-subnet ﬁeld to send requests from arbitrary locations, granting it a
wide view of provider replicas from anywhere in the entire Internet. Second, it
exploits the value of the scope netmask in the response in order to understand
the quality of the set of responses. While these actual values are likely a function
of each network’s particular layout, policy, and current load, they still provide
feedback on how well the provider was able to match a particular client subnet.
2.1 Provider Granularity
We examine the behavior of speciﬁc networks which are particularly useful in
the development of Fury Route. We consider a set of CDN providers known to
support EDNS [9,10,28] combined with a set of providers collected via manual
inspection from a scrape of the Alexa Top5001.
Table 1. Selected set of providers.
Hostname
www.google.com
gp1.wac.v2cdn.net
img.alicdn.com
st.deviantart.net
922977808.r.cdn77.net
Provider
Google
Edgecast
Alibaba
CloudFront
CDN77
CDNetworks cdnw.cdnplanet.com.cdngc.net
ADNXS
ib.adnxs.com
Fig. 1. CDF of observed scope net-
mask responses.
Table 1 shows our selection of providers and the corresponding hostname used
to query each provider. Providers are “used” by issuing an A record query for a
hostname belonging to that provider. We examine the response scope netmask,
which indicates how well the subnet in the query was able to match the response.
While this value is likely aﬀected by policy, i.e., both the internal mapping policy
of each provider, and a DNS caching policy which attempts to take advantage
of DNS caching [12], the scope netmask is undoubtedly a valid asset in Fury
Route’s design. Fury Route will therefore interpret the values as the quality,
i.e., nearness, of a given response.
We query each of the provider domain names using 25 distinct globally dis-
tributed preﬁxes from PlanetLab as the client subnet. Figure 1 shows a CDF
of the response scopes for each provider. The providers fall into two categories:
course and ﬁne grained. CloudFront, CDNetworks, Google, return/24 subnets for
nearly all requests, appearing as vertical lines at 24 in the ﬁgure. Alternatively,
Alibaba, ADNXS, and Edgecast return broader scopes. While CDN77 returns
many broad scopes, we also see that nearly 40% of its responses were /18s or
1 Akamai, a large provider, restricts third-party ECS queries, and is not used.
90
M. Flores et al.
smaller. We note that some providers may employ anycast, suggesting any DNS
client mapping they perform is intended for coarser grained locations.
3 Fury Route
Fury Route is built on the principle that the network distance between two hosts
can be estimated by constructing a path of CDN replicas between the two hosts.
These CDN replicas are returned as responses to ECS queries and the paths
are generated by an iterative series of ECS queries which “hop” between CDN
replicas by issuing new requests on behalf of a CDN replica with the client-subnet
extension. The intuition is that the replicas provide a reﬂection of the density
of CDN deployments: crossing low density areas suggests large distances.
This entire process can be performed from any host, requires no participation
on the part of the hosts being measured, and does not rely on any directly
deployed infrastructure. This is possible as ECS allow single probing node to
issue DNS queries as if it were any other host. While these responses may vary
due to outside factors, in particular when examining the precision of an ECS
response which used a CDN replica as a client subnet (a case for which they
are unlikely to be optimized), they still contain information which reﬂects the
structure of the underlying networks. Fury Route addresses this by using the
subnet mask returned by the ECS query: poor matches usually come with generic
answers and large subnets, which translate to large distances.
Fury Route consists of three main components: (i) A chain building mech-
anism which connects an origin host with a destination host via a sequence of
CDN replicas discovered via EDNS-enabled DNS responses, (ii) A voting sys-
tem which enables this chain-building system to make forward progress in the
space of CDN hosts, (iii) A comparison module, which compares the lengths
of the chains and estimates the relative distance between two points of interest,
maximizing the information made available from the CDN-based DNS responses.
Fig. 2. A representation of the chain building procedure. The dashed circle indicates
hosts in the target set. Dotted circles show hosts in a scan of all providers.
Chain Building. Fury Route is able to perform remote network distance esti-
mations by using an approach we call chain building. The fundamental basis for
this chain building approach is that DNS responses from CDNs which support
ECS are likely to be near the requesting host, as indeed this is the stated purpose
Fury Route: Leveraging CDNs to Remotely Measure Network Distance