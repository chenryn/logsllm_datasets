==== 根据事务进行多行合并
用户日志为多线程交叉打印，且以某关键字开头，某关键字结尾，希望能将各个线程的这种日志，按开头结尾合并。配置如下：
[source,]
###Other
[3_file_splitter]
type = "RegexSplitter"
delimiter = '\n(\d)'
delimiter_eol = false
keep_truncated = true
deliver_incomplete_final = true
deliver_interval = "5s"
[3_file_decoder]
type = "RizhiyiDecoder"
appname = "rizhiyi_app"
tag = "rizhiyi_tag"
charset = "gbk"
[3_file_input]
type = "LogstreamerInput"
log_directory = "/Volumes/Transcend/"
file_match = 'esbserver\.log'
decoder = "3_file_decoder"
splitter = "3_file_splitter"
oldest_duration = "720h"
[TransactionFilter]
message_matcher = 'Type != "transaction"'
# 通过此正则判断是否新事物开始，是，则将之前同id下的日志合并成一个event发出
start_contains = '压力测试标识，商户限流！'
# 通过此正则判断某个事务是否结束，如果结束，则将之前内容合并成一个Event发出
end_contains = '【end】'
# 通过此正则抽取每行日志中的id（括号中的被抽去成id)，id可以是任意字符串
# 该id可以理解为可以唯一表示线程的id，
# 注意：这里提取正则用的括号只能有一个
id_match = '\[WebContainer : (\d+)\]'
# 如果缓存中日志超过timeout_in_sec秒还是没找到行尾或新行头，则将作为一个Event发出
timeout_in_sec = 120
# 1.8.16.0后引入该配置，是否丢弃过大(超过max_message_size)的事务日志,不填将使用默认值false
drop_too_large_msg = false
###Output
[RzyFramingSplitter]
[RzyProtobufEncoder]
  token = "81b04117372b40809c8757dec908aac0"
  charset = ""
  auto_conv = false
[RzyHttpOutput]
  #注意此处message_matcher的修改，只接收TransactionFilter处理的日志，避免日志发送两份
  message_matcher = 'Type == "transaction"'
  address = "http://192.168.1.78:5180/proto/?compressed=false"
  use_buffering = true
  encoder = "RzyProtobufEncoder"
  rate_limit = 0
  [RzyHttpOutput.Buffering]
    max_file_size = 268435456
    max_buffer_size = 1073741824
    full_action = "block"
    cursor_update_count = 1000  