在 ADCS 中使用两种安全性定义注册权限 (主体可以请求证书) ， **一个在证书模板 AD 对象上，另一个在企业 CA 本身上** 。
在颁发 CA 机器上使用 `certtmpl.msc` 可查看所有证书模板，通过安全扩展可以对证书模板的用户访问权限查看。
可以在颁发 CA 机器上使用 `certsrv.msc` 查看 CA 对于用户的访问权限设置。
## 0x02 证书使用
### 1\. 证书认证
#### Kerberos认证
Kerberos 是域环境中主要的认证协议，其认证流程大致如下：
  1. AS_REQ：client 用 client_hash 、时间戳向 KDC 进行身份验证；
  2. AS_REP：KDC 检查 client_hash 与时间戳，如果正确则返回 client 由 krbtgt 哈希加密的 TGT 票据和 PAC 等相关信息；
  3. TGS_REQ：client 向 KDC 请求 TGS 票据，出示其 TGT 票据和请求的 SPN；
  4. TGS_REP：KDC 如果识别出 SPN ，则将该服务账户的 NTLM 哈希加密生成的 ST 票据返回给 client；
  5. AP_REQ：client 使用 ST 请求对应服务，将 PAC 传递给服务进行检查。服务通过 PAC 查看用户的 SID 和用户组等并与自身的 ACL 进行对比，如果不满足则作为适当的 RPC 状态代码返回；
  6. AP_REP：服务器验证 AP-REQ，如果验证成功则发送 AP-REP，客户端和服务端通过中途生成的 Session key 等信息通过加解密转换验证对方身份。
#### PKINIT认证
在 RFC 4556 中定义了 PKINIT 为 Kerberos 的扩展协议，可通过 X.509 证书用来获取 Kerberos 票据 (TGT)。
PKINIT 与 Kerberos 差别主要在 AS 阶段：
  1. PKINIT AS_REQ：发d送内容包含证书，私钥进行签名。KDC 使用公钥对数字签名进行校验，确认后返回使用证书公钥加密的 TGT 并且消息是使用 KDC 私钥签名；
  2. PKINIT AS_REP：客户端使用 KDC 公钥进行签名校验，随后使用证书私钥解密成功拿到 TGT。
详细的协议流程规范：
#### NTLM凭据
在2016年，通过证书获取 NTLM 的功能就被集成在 kekeo 和 mimikatz 中，核心在于当使用证书进行 PKCA 扩展协议认证的时候，返回的
PAC 中包含了 NTLM 票据。
即使用户密码改了，通过证书随时可以拿到 NTLM。获取能用来进行 Kerberos 身份认证的证书需要满足一下几个条件：
\1. 证书模板OID
前面我们提到了，目前已知应用程序策略 (oid) 只有包含了 Client Authentication、PKINIT Client
Authentication、Smart Card Logon、Any Purpose、SubCA 时，对应的证书才能充当 PKINIT 身份认证凭据。
\2. 证书请求权限
  * 用户拥有向 CA 申请证书的权限；
  * 用户拥有证书模板申请证书的权限。
### 2\. 证书获取
#### 导出机器证书
通过 `certlm.msc` 图形化或 `certutil.exe` 进行证书导出。
当私钥设置为不允许导出的时候，利用 Mimikatz 的 `crypto::capi` 命令可以 patch 当前进程中的 capi ，从而利用
Crypto APIs 导出含有私钥的证书。
#### 导出用户证书
通过 `certmgr.msc` 图形化或 `certutil.exe` 进行用户证书导出。
遇到私钥限制同样可尝试 `crypto::capi` 导出证书。
#### 本地检索证书
在实战中会遇到证书、私钥文件就在文件夹内并不需要导出，其后缀文件主要有以下几种
后缀 | 描述  
---|---  
.pfx\ .p12\ .pkcs12 | 含公私钥，通常有密码保护  
.pem | 含有base64证书及私钥，可利用openssl格式转化  
.key | 只包含私钥  
.crt\ .cer | 只包含证书  
.csr | 证书签名请求文件，不含有公私钥  
.jks\ .keystore\ .keys | 可能含有 java 应用程序使用的证书和私钥  
可结合自身需求通过开源工具或自研武器来满足检索文件后缀的需求。
## 0x03 证书滥用
本节围绕 ADCS 从证书模板的滥用到权限维持滥用进行讲解
### 1\. 证书模板
#### CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT 滥用
该错误配置在企业 ADCS 中是最为常见的，需满足的条件为：
  * 颁发 CA 授予低权限用户请求权限 (默认)
  * 模板中 CA 管理员审批未启用 (默认)
  * 模板中不需要授权的签名 (默认)
  * 模板允许低权限用户注册
  * 模板定义了启用认证的 EKU
  * **证书模板允许请求者在 CSR 中指定一个 subjectAltName**
如果满足上列条件，当攻击者在请求证书时可通过 `CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT`
字段来声明自己的身份，从而可获取到伪造身份的证书，Certify 为白皮书配套的 ADCS 利用工具。
    Certify.exe find /vulnerable
使用 `certutil.exe -TCAInfo` 判断 CA 状态及当前用户请求的权限情况
利用 Certify 的 set altname 来伪造 administrator 身份尝试得到证书
    Certify.exe request /ca:"CA01.corp.qihoo.cn\corp-CA01-CA" /template:”ESC1“ /altname:administrator
成功通过申请后可得到含有公私钥的 pem 证书文件，使用 openssl 进行格式转化
    /usr/bin/openssl pkcs12 -in ~/cert.pem -keyex -CSP "Microsoft Enhanced Cryptographic Provider v1.0" -export -out ~/cert.pfx
20.11后的 Rubeus 进行了 PKINIT 证书支持，使用 cert.pfx 作为 administrator 身份申请 TGT，成功获得
administrator 的票据
    Rubeus4.exe asktgt /user:Administrator /certificate:cert.pfx /password:123456 /outfile:cert.kribi /ptt
#### Any EKU OR no EKU
与第一种利用需满足的条件前四点相同的用户证书非机器证书，主要差别在 EKU 的描述：
  * 颁发 CA 授予低权限用户请求权限 (默认)
  * 模板中 CA 管理员审批未启用 (默认)
  * 模板中不需要授权的签名 (默认)
  * 模板允许低权限用户注册
  * **证书模板中定义了 no EKU 或 any EKU**
可使用 `certutil.exe` 检查模板的 `pKIExtendedKeyUsage` 字段是否为空
    certutil -v -dstemplate
通过 Certify 成功定位到恶意模板
该利用方式并不是能直接通过 Kerberos 认证来伪造用户。Any Purpose (OID 2.5.29.37.0)
可以用于任何目的，包括客户端身份验证，如果没有指定eku，即 **pkiextendedkeyusag** 为空那么该证书就相当于从属 CA
的证书，可以用于任何情况给其他用户来颁发证书。
前面说过 CA 证书不在 **NtAuthCertificates**
内的话，是无法为身份认证作用来颁发证书的，所以该利用手段无法直接伪造用户，但可以用来签发用于其他应用，例如 ADFS ，它是 Microsoft 作为
Windows Server 的标准角色提供的一项服务，它使用现有的 Active Directory 凭据提供 Web
登录，感兴趣的可以自己搭环境试一试。
#### 注册代理证书滥用
CA 提供一些基本的证书模板，但是标准的 CA
模板不能直接使用，必须首先复制和配置。部分企业出于便利性通过在服务器上设置可由管理员或注册代理来直接代表其他用户注册对应模板得到使用的证书。
实现该功能需要两个配置模板：
  1. 颁发“注册代理”的证书模板
  2. 满足代表其他用户进行注册的证书模板
**模板一为颁发“注册代理”证书**
  * 颁发 CA 授予低权限用户请求权限 (默认)
  * 模板中 CA 管理员审批未启用 (默认)
  * 模板中不需要授权的签名 (默认)
  * 模板允许低权限用户注册
  * **证书模板中定义了证书请求代理 EKU (1.3.6.1.4.1.311.20.2.1)**
**模板二为允许使用“注册代理”证书去代表其他用户申请身份认证证书**
  * 颁发 CA 授予低权限用户请求权限 (默认)
  * 模板中 CA 管理员审批未启用 (默认)
  * 模板中不需要授权的签名 (默认)
  * 模板允许低权限用户注册
  * 模板定义了启用认证的 EKU
  * **模板模式版本1或大于2并指定应用策略，签发要求证书请求代理 EKU**
  * **没有在 CA 上对登记代理进行限制 (默认)**
申请注册代理证书并连同私钥导出为 esc3_1.pfx
利用 Certify 通过 esc3_1.pfx 代表 administrator 申请 esc3_2.pfx 的身份认证证书，得到的证书同样可以进行