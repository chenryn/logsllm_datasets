### 推荐阅读
- **配置示例**：Wiki、邮件列表
- **Tomcat 7.0**：JDK 1.6
- **图11-1**：CATALINA_HOME/RUNNING.txt
- **查找更多信息**：Tomcat Wiki
- **Tomcat 7.0 配置**
- **Tomcat 7.0 文档**
- **文档**
- **命令**：Tomcat管理界面
- **重要配置**
- **状态**：0.0.0.0:49158->8080/tcp cranky_wright
- **示例**
- **创建**："/run.sh"
- **Apache Software Foundation**
- **状态**：toausadscuion
- **常见问题和邮件列表**
- **获取帮助**
- **4秒前**
- **Tomcat版本**
- **Servlet规范**
- **端口**
- **主机管理器**
- **管理应用**
- **查找帮助**
- **名称**
- **图11-3**：Apache管理界面
- **用户名**：admin
- **主机**：192.168.1.134:49158
- **请求用户名和密码信息**
- **考虑因素**：如何操作
- **示例**：Wiki、邮件列表
- **图11-2**：输入管理员密码
- **需要验证**
- **Tomcat 主机管理应用**
- **第11章 Web服务器与应用**：101
- **主机管理帮助**
- **取消**
- **确定**
- **恭喜**
- **Apache Software Foundation**
- **常见问题和邮件列表**
- **获取帮助**
- **主机管理器**
- **管理应用**
- **服务器状态**
- **查找帮助**

---

### 第11章 Web服务器与应用

#### 11.4 WebLogic

WebLogic 是一个基于 Java EE 架构的中间件（应用服务器），由 Oracle 公司维护。它用于开发、集成、部署和管理大型分布式 Web 应用、网络应用和数据库应用。WebLogic 是最早的商业化的 J2EE 应用服务器之一，也是市场上最主要的 Java（J2EE）应用服务器软件之一。

##### WebLogic 基本概念

- **WebLogic 域**：一组相关的 WebLogic 服务器资源，作为一个单元进行管理。
- **管理服务器 (Administration Server)**：域中包含的一个特殊 WebLogic 服务器实例，用于配置和管理域中的所有资源。
- **托管服务器 (Managed Servers)**：加入域的其他实例，通常运行 Web 应用、EJB 和 Web 服务。
- **集群**：多个 WebLogic 服务器实例的组合，可以是群集实例或非群集实例。

##### 优点
- 可以使用 WebLogic 在开发模式下免费使用。
- 部署一次应用程序即可在集群上运行。
- 可以通过编写启动脚本来管理 Administrator 服务器和 Node 服务器。

##### 缺点
- 需要购买 Oracle 的商业授权才能在生产环境中使用。
- Docker 配置较为复杂。
- 扩展集群计算容量时，需要手动添加节点并配置新的容器启动脚本。

##### 典型的 WebLogic 部署
- **管理服务器**：负责配置和管理域中的所有资源。
- **托管服务器**：运行实际的应用程序和服务。

##### 图11-4：典型的 WebLogic 部署
- **管理服务器**
- **托管服务器**
- **节点**

##### 创建 WebLogic 镜像
1. **准备工作**
   - 在本地主机上创建 `weblogic` 目录，并创建 `Dockerfile` 和 `run.sh` 脚本文件。
   - 将 JDK 和 WebLogic 安装文件上传到该目录。

2. **安装 WebLogic 到容器**
   - 使用 `docker run` 命令运行之前创建的镜像，并映射必要的文件和端口。
   - 通过 SSH 登录到容器，执行安装步骤。

3. **使用 Dockerfile 创建镜像**
   - 使用 `docker commit` 命令将容器提交为一个镜像，然后进一步使用 Dockerfile 完成最终的镜像创建。

以下是一个具体的示例：

```bash
$ mkdir weblogic_jdk1.6
$ touch Dockerfile run.sh
$ cd weblogic_jdk1.6/
$ sudo docker run -d -v /home/user/weblogic_jdk1.6/wls12i1_generic.jar:/wls1211_generic.jar -v /home/user/weblogic_jdk1.6/jdk:/jdk -P sshd:dockerfile
```

通过 SSH 登录到容器并执行安装步骤：

```bash
$ ssh 127.0.0.1
ECDSA key fingerprint is d1:59:f1:09:3b:09:79:6d:19:16:f4:fd:39:1b:be:27.
Are you sure you want to continue connecting (yes/no)? yes
```

在容器内启动 WebLogic 安装：

```bash
root@185546d00925:/# ./jdk/bin/java -jar wls1211_generic.jar -mode=console
```

选择不接收安全更新，并指定安装目录：

```bash
Enter option number to select OR [Exit][Previous][Next]> Next
Use above value or select another option: Next
Choose Middleware Home Directory:
Enter new Middleware Home OR[Exit][Previous] [Next]>/opt/Middleware
```

完成安装后，使用 `docker commit` 提交容器为镜像，并进一步使用 Dockerfile 完成最终的镜像创建。