technical users (roughly what could be expected of a college grad-
uate). While this role is far from representative of all users, we
believe it roughly represents the demographic targeted by most
managers.
For all managers but Safari, tasks were completed on a virtual
machine running Windows 10. The virtual machines used snapshots
to ensure a consistent starting state for evaluating each manager
and task. For Safari, we used a MacBook Air running macOS 10.15,
taking care to reset its state between each set of tests. Walkthroughs
were recorded (audio and video) and used as part of the analysis of
results.
4.2 Observations
Below we discuss observations and lessons learned from the cogni-
tive walkthroughs.
4.2.1 Using Credentials on Secondary Devices. In one task, evalua-
tors needed to enter a generated password stored in their desktop
manager into a website on a mobile device ((E6) Manually enter
credential). Due to the difficulty of reading and entering these pass-
words, they noted that this was the most difficult and annoying of
all the tasks they completed. Only 1Password X aided this process,
highlighting characters based on character class ((E6-P3) Distinguish
password characters), making it easier to read the password to be
entered on the mobile device. Even in this case, entering generated
passwords was still challenging due to the use of symbols, which
require additional effort to enter on mobile keyboards.
At first glance, it might seem possible to address these challenges
by having the user install their manager on the mobile device. While
this approach works in that situation, it is impossible to install a
password manager on the myriad of users of smart devices and
IoT devices where users need to enter credentials. Similarly, users
also need to enter passwords on shared computers where it is not
feasible to install the manager.
As such, there is a need for more research to address this use case.
Research could explore why more devices do not provide password-
alternative authentication mechanisms, such as providing users
with a login URL that they can visit on their phone (which does
support a manager) to log in to the device. Also, research could
investigate password generation that factors in the devices where
the password will be entered, making it easier to enter generated
passwords. This research could be modeled after and extend the
work of Greene et al. [12], which examined generating passwords
that were easier to enter on mobile keyboards.
536ACSAC ’21, December 6–10, 2021, Virtual Event, USA
James Simmons, Oumar Diallo, Sean Oesch, and Scott Ruoti
Fatiguing Setup. When setting up the managers, evaluators
4.2.2
found the extension-based managers to have the most complicated
setup process ((E1) Setup manager). In addition to downloading an
extension or desktop app ((E1-P1) Install an app or (E1-P2) Install
an extension), the evaluators also need to register an online account
((E1-P5) Requires a cloud account) and create their initial credential
store. This process can take an extended period, with the evaluators
noting fatigue during this process. Such fatigue could turn some
users away from completing the setup of extension-based managers.
This dropout would be problematic, as extension-based managers
are more secure than browser-based managers [19], with anything
that inhibits migration from browser-based managers to extension-
based managers being problematic. While it is unclear exactly how
to solve this problem, it deserves more attention in future usability
studies.
4.2.3 Credential Linking Challenges. When evaluators completed
a credential audit ((R1) Audit credentials), several passwords were
marked as reused. However, some of these passwords were not
reused, it was just the case that websites at different domains used
the same authentication backend (e.g., atlassian.com and bitbucket.
org) and thus had the same stored password. Such false positives
in an audit are disadvantageous, as not only were they frustrating
to the evaluators, but they could also cause users to not trust audit
results and overlook actual issues. This issue could be resolved in the
two managers that supported the (E2-P4) Link additional domains
or apps paradigm, though finding this functionality was difficult
and it was hard to use. This paradigm needs to be implemented
more widely and surfaced to users more effectively.
Interface Designs. While completing tasks, evaluators were
4.2.4
consistently disappointed with various aspects of the managers’
interfaces. Most commonly, problems arose due to confusion when
attempting to locate features or settings ((R2) Modify settings). This
difficulty was often caused by a combination of those features
and settings being deeply nested in menus or named using non-
obvious vernacular. For example, Chrome groups manager features
under the label “autofill”, which may not be a meaningful term to
many users (as it was not initially to our evaluators), as opposed
to “privacy and security”, where many users might expect it. Issues
such as these caused our evaluators to spend considerable time
locating these items, and for some users may prevent them from
realizing the feature or setting exists. This problem was somewhat
alleviated in managers that supported (R2-P2) Searchable settings,
but even in this case, non-obvious wording could make it difficult
for users to find relevant settings.
Another point of confusion in some managers was an over-
reliance on icons in place of text. While this saves screen real estate,
it was not always obvious what icons meant. Together, these results
demonstrate that more research is needed to explore how best to
communicate the manager’s features to the user.
On a positive note, the evaluators noted that several managers
used password strength meters within their password generators
((E7) Generate password). These meters included visual indicators
and colors to describe the strength of the password. The evaluators
noted that this gave them confidence that their selected genera-
tion settings were secure. Ideally, managers could find ways to
incorporate more of these simple, easy-to-understand indicators
through the manager to help users identify when they are using
the managers correctly.
4.2.5 Operating System-Based Manager. Of the tested managers,
only Safari uses a manager provided by the operating system: Key-
chain Access. Passwords can be managed directly in Keychain Ac-
cess or indirectly through Safari, with both programs exposing
slightly different functionality. This is an example of the paradigm
((E1-P4) Built into the operating system). Our cognitive walkthroughs
revealed that MacOS’ and Safari’s implementation of this paradigm
is flawed. The primary issue is that when using KeyChain Access
through Safari, dialog messages consistently refer to keychains, but
never describe what a keychain is, what role it plays in password
management, or how to access it. While this is unlikely to cause
an issue for technical users already aware of KeyChain Access, less
technical users could be confused by these messages and are more
likely to build incorrect mental models of how password storage
works, potentially leading to security issues in some edge cases.
For example, users may not realize that even if they log out Safari,
the usernames and domains associated with stored credentials can
still be viewed through KeyChain Access. While the passwords are
not visible in KeyChain Access without the account password, this
might reveal more information that the user intends (e.g., if they
share their computer with a friend).
4.2.6 Browser-Based Managers. Through the cognitive walkthroughs,
evaluators noticed that the browser-based managers had the most
limited functionality—i.e., implementing the smallest number of
design paradigms. Even when they did support a given design par-
adigm, they often did so in a less feature-rich fashion. While the
evaluators were happy with the browser-based managers overall,
they felt they were especially weak compared to the other managers
tested. These results regarding limited functionality mirror prior
results that show that modern browser-based managers are often
less secure than other managers [19]. Considering these results,
we believe that while browser-based managers serve as an easy
transition into password management, users should be steered to
more feature-rich and secure managers over time.
4.2.7 Browser-Based Manager Vulnerability. To lock the credential
vault for browser-based managers ((E9) Lock manager), it is neces-
sary to log out of the browser itself ((E9-P3) Logout of the browser to
lock). When doing so, the evaluators noticed an edge case in which a
user’s credentials would remain accessible in the browser even after
logging out of the browser. First, users would need to begin using
the browser’s manager without logging into the browser. Doing so
creates a local credential store for the user’s credentials. Next, the
user would need to log into the browser, causing the local store to
be synced with the cloud store. Surprisingly, the local store is not
removed, only hidden; moreover, the local store is kept in sync with
the cloud store. Lastly, if a user logs out of their browser, access to
the cloud store will be revoked, but the local store (which contains
credentials synced from the cloud store) will become unhidden and
accessible to anyone that opens the browser. While it is unclear
how often this edge case would be encountered in real-world usage,
it is still something that browser-based managers should address.
537Systematization of Password Manager Use Cases and Design Paradigms
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
4.3 Limitations
Our cognitive walkthroughs suffer the same challenge to ecological
validity faced by all forms of expert review: the evaluators are not
the users that they role-play. There will always exist differences
between how the evaluators think and use tools as compared to
actual users. Additionally, as evaluators complete more tasks with
additional tools, it becomes harder to think and act like new users.
As our cognitive walkthroughs intend to provide an initial, non-
definitive evaluation of design paradigm usability, we think this is
an acceptable limitation. Indeed, future research should replicate
and expand upon our evaluation, making liberal use of user testing.
We hope that this paper serves as a basis to encourage and promote
such research.
5 RELATED WORK
We are unaware of other efforts to systematize password man-
agement use cases or design paradigms. Instead, in this section,
we summarize efforts to measure human perceptions and motiva-
tions regarding password management as well ass discuss usability
studies of password managers. We also describe how this type of
research could benefit from our systematization.
5.1 User Perceptions and Motivations
There has been a line of research examining users’ perceptions and
behaviors related to password management [8, 21, 22]. First, Fagan
et al. [8] surveyed both users and non-users of managers, trying
to understand why they had or had not adopted it. They found
that adopters primarily focused on usability benefits, and those
that did not adopt managers had security concerns. Similarly, Pear-
man et al. [21] interviewed both users and non-users of password
managers. They found that adopters of browser-based managers fa-
vored convenience, whereas adopters of extension-based managers
were driven more by security. Ray et al. [22] replicated the work of
Pearman et al. but changed the study population to focus on adults
at least 60 years. These older adults indicate that fear of a single
point of failure, desire to retain control of personal information,
and concern about not having the manager available when needed
impeded their adoption of password managers. In contrast, recom-
mendations from family members were often crucial to adoption
by these older users.
Relationship to our work: While these works lightly touch
on many use cases, they primarily focus on three: (E2) Register cre-
dential, (E5) Autofill credential, and (E7) Generate password. We find
no evidence that these studies ask users about the recommended or
extended uses cases identified in our systematization. Future studies
on user perceptions and behaviors could use our list of use cases to
help increase the coverage of password management-related topics
discussed in the interviews, helping better understand how users
view and engage with the full range of functionality provided by
modern managers.
5.2 Usability Studies
There are three usability studies of password managers deployed
in the wild. Lyastani et al. [16] instrumented a manager to measure
usage in the wild, gathering data about registering, updating, aut-
ofilling credentials, as well as generating passwords. Their results
demonstrated positive security outcomes for adopting a password
manager, but that many users eschewed using the password gen-
erator. Huaman et al. [13] investigated usability issues reported
on GitHub. They found that password managers sometimes do a
poor job of identifying password fields and that many websites
implement non-standard interfaces making this process even more
challenging. Seiler-Hwang et al. [29] conducted a laboratory user
study exploring the usability of four smartphone password man-
agers. They found significant usability issues, particularly regarding
poor integration of the manager with apps and browsers, with users
rating the apps as barely acceptable.
There are also three usability studies of password manager re-
search prototypes. In 2006, Chiasson et al. [3] evaluated the usability
of two password manager prototypes, prototypes that had little to
no resemblance to modern managers. Their study found that while
users reported tasks as being “very easy” to complete, users also
failed to complete tasks correctly, suggesting an inaccurate mental
model of the design paradigms used in these prototypes. McCar-
ney et al. [17] proposed the design of a password manager that
secures the credential vault using a mobile device. They conducted
a usability study of this manager, finding that users preferred it
to the Firefox password manager. Stobert et al. [31] proposed the
design of a password manager that moved all account management
tasks into the browser—e.g., users could create, updated, and even
delete their online accounts from within the manager. An initial
user study of this manager found that users viewed this approach
favorably and believed it could help them more securely manage
their accounts. Design paradigms (E2-P3) Internal registration tool
and (E4-P3) Internal removal tool are derived from this research.
Relationship to our work: As shown previously in Table 3,
these studies only consider a minority of the use cases in our sys-
tematization. This indicates a substantial need for additional studies
of password manager usability covering these use cases. Addition-
ally, our systematization of design paradigms identifies fruitful
possibilities for conducting studies that compare and contrast the
strengths and weaknesses of these paradigms.
6 CONCLUSION
In this paper, we described a systematization of password manager
use cases and design paradigms. As a result of this effort, we dis-
covered that most use cases had not been previously examined in a
usability study. Moreover, we are unaware of any research compar-