.505
.493
.505
.516
.495
.480
.497
.475
Table 8: Anonymization vs DA. The seed-based algorithms are provided with 50 seeds and the anonymization param-
eters are chosen according to the same criteria as in Table 5.
s
Switch (k)
5
10
k-DA (k) Cluster (k)
5
50
50
5
DP (ε)
50
300
RW (t)
2
D
Switch (k)
5
10
Enron
Facebook
k-DA (k) Cluster (k)
5
50
50
5
DP (ε)
50
300
RW (t)
2
D
.85 .0072 .0052 .3702 .0088 .3722 .3707 .0091 .0055 .0015 .0015 .8973 .8247 .9454 .9402 .9456 .9442 .9317 .8914 .0008 .0006
.90 .0077 .0054 .3822 .0105 .3900 .3839 .0095 .0060 .0015 .0015 .9063 .8427 .9520 .9495 .9519 .9508 .9393 .8944 .0008 .0007
.95 .3577 .0064 .4033 .0418 .4049 .4064 .3946 .0064 .0015 .0016 .9162 .8583 .9570 .9559 .9569 .9558 .9453 .9130 .0000 .0007
.85 .1261 .0813 .1433 .0437 .2120 .1408 .1160 .0701 .1923 .2412 .1716 .0926 .2411 .0588 .3340 .3368 .2324 .0736 .1530 .1271
.90 .1546 .0956 .1765 .0517 .2564 .1637 .1394 .0733 .2129 .2169 .2124 .1147 .2999 .0758 .4113 .4090 .3623 .0802 .1604 .1322
.95 .2121 .1366 .2548 .0753 .3745 .2215 .1821 .0858 .2072 .2190 .3006 .1586 .4210 .1161 .5767 .5656 .4087 .1016 .1591 .1332
.85 .0667 .0422 .0692 .0214 .1116 .0683 .0489 .0365 .1578 .2131 .0706 .0395 .0703 .0154 .1191 .1155 .0891 .0206 .1349 .1190
.90 .0805 .0478 .0810 .0263 .1317 .0789 .0571 .0390 .1711 .2012 .0978 .0497 .0946 .0213 .1480 .1595 .1870 .0223 .1382 .1217
.95 .1193 .0695 .1123 .0353 .1978 .0952 .0755 .0479 .1714 .2074 .1378 .0725 .1317 .0332 .2034 .2330 .1756 .0295 .1397 .1216
.85 .1373 .0969 .1646 .0289 .1576 .1570 .1549 .0664 .0394 .0323 .5437 .5056 .5816 .5086 .5897 .5805 .5404 .4347 .0356 .0210
.90 .1716 .1037 .1612 .0253 .1868 .1710 .1577 .0736 .0404 .0342 .5681 .5182 .6089 .5129 .6036 .5980 .5702 .4818 .0372 .0222
.95 .1730 .1197 .2155 .3785 .1971 .2064 .1884 .0838 .0418 .0348 .5821 .5439 .6208 .5504 .6223 .6190 .5716 .4538 .0346 .0231
.85 .1262 .0820 .1468 .0445 .2130 .1418 .1160 .0701 .0771 .0731 .1724 .0926 .2425 .0603 .3358 .3379 .2337 .0749 .0985 .0725
.90 .1543 .0964 .1795 .0534 .2588 .1652 .1394 .0729 .0855 .0704 .2129 .1146 .3026 .0776 .4124 .4103 .3639 .0823 .1008 .0764
.95 .2139 .1381 .2605 .0768 .3777 .2230 .1823 .0855 .0872 .0733 .3019 .1589 .4245 .1186 .5780 .5667 .4105 .1038 .1041 .0784
.85 .0904 .0811 .0997 .0357 .0965 .0689 .0745 .0331 .0900 .0729 .0799 .0764 .0819 .0683 .0788 .0762 .0769 .0313 .1099 .0737
.90 .1077 .0970 .1202 .0549 .1134 .0918 .0874 .0319 .0939 .0744 .0979 .0939 .1013 .0848 .0960 .0863 .1249 .0317 .1099 .0715
.95 .1381 .1150 .1936 .0978 .2052 .1686 .1719 .0376 .0994 .0776 .1350 .1331 .1418 .1265 .1294 .1206 .1450 .0600 .1171 .0754
.85 .0692 .0440 .0798 .0234 .1248 .0854 .0886 .0656 .0709 .0720 .1453 .0786 .2025 .0595 .2618 .2673 .1958 .0768 .0901 .0681
.90 .0886 .0536 .1046 .0296 .1618 .1135 .1070 .0664 .0767 .0728 .1673 .0911 .2335 .0708 .3001 .3094 .3050 .0777 .0911 .0699
.95 .1846 .1189 .2381 .0746 .3317 .2319 .1449 .0814 .0838 .0740 .2180 .1174 .3111 .1096 .3983 .3924 .3142 .0950 .0940 .0734
NS
DV
PFG
YG
ADA
KL
JLSB
USENIX Association  
24th USENIX Security Symposium  315
13
we analyzed in Table 4, two fundamental reasons make
state-of-the-art graph anonymization algorithms vulner-
able. First, in existing graph anonymization schemes,
graph users are only indistinguishable with respect to
some structural properties/semantics. However, several
other structural properties or the combinations of them
can still enable effective graph user DA. Furthermore, the
design philosophy of existing anonymization schemes is
to preserve as much data utility as possible. However,
data utility can be used to conduct powerful SDA attacks.
Therefore, it is still an open problem to design effective
graph data anonymization algorithms which can defend
against modern SDA attacks.
Generally, when s is large and the anonymization level
(e.g., k for Switch and k-DA) is low, more users can be
correctly de-anonymized. The reason is straightforward.
A large s implies more structural information of the origi-
nal graph can be preserved in the auxiliary graph and thus
more accurate structural characteristics can be employed
for DA. Meanwhile, a low anonymization level implies
less perturbation applied to the original graph’s structure
followed by the anonymized graph is more structurally
similar to the original graph and thus is easier to be de-
anonymized.
Among all the DA attacks, NS, YG, and ADA per-
form better than other attacks in most scenarios. This
is because they mainly employ the combinations of sev-
eral local structural characteristics to conduct the DA.
According to our utility analysis in Table 2 and evalu-
ation results in Table 5, most existing anonymization al-
gorithms can preserve most graph utilities, especially the
local graph utilities, e.g., Deg., LCC. It turns out that the
graph utility preserved by anonymization algorithms can
be used by DA attacks to conduct effective DA. There-
fore, in the scenarios where an anonymization algorithm
preserves more data utility, the corresponding dataset is
more vulnerable to modern SDA attacks.
Among all the anonymization techniques, RW has bet-
ter performance than others in most of the cases. The rea-
son is that, a random walk path of length t is replaced by
an edge in RW. It follows that the original graph structure
is signiﬁcantly changed. Therefore, a RW-anonymized
graph is more resistant to DA attacks. However, RW
achieves such DA resistance at the cost of sacriﬁcing
more data utility compared with other anonymization
techniques, which is consistent with our utility analysis
and evaluation results in Tables 2 and 5. Furthermore, we
can also ﬁnd that in most scenarios, existing anonymiza-
tion techniques can degrade the performance of SDA at-
tacks. Again, as shown in Tables 2 and 5, some data
utilities are also degraded/lost.
6 Future Research and Challenges
In this section, we discuss the future research directions
and challenges of graph data anonymization and DA.
Graph Data Anonymization. According to our an-
alytical results in Table 4 and evaluation results in Ta-
ble 8, all the state-of-the-art anonymization techniques,
e.g., k-anonymity based schemes, DP based schemes,
are vulnerable to modern SDA attacks. Their vulnera-
bility depends on how much data utility is preserved in
the anonymized data. Therefore, it is very difﬁcult, if
not impossible, to develop effective and universal graph
data anonymization techniques to defend against mod-
ern SDA attacks. The main challenges are two-folds.
First, guaranteeing data utility is one of the primary ob-
jectives when publishing/sharing graph data. However,
as we explained before, the preserved graph and appli-
cation utilities enable adversaries to conduct large-scale
DA attacks. Therefore, it is a big challenge to effectively
anonymize graph data with desired data utility preserva-
tion and without enabling adversaries to utilize these data
utilities. Second, many local and global structural char-
acteristics (or, structural scemantics), e.g., Deg., LCC,
CC, BC, are embedded in graph data’s structure. Exist-
ing anonymization techniques can only make graph users
structurally indistinguishable with respect to one or sev-
eral semantics, e.g., degree and neighborhood. However,
as we explained before, in many scenarios, several other
structural semantics and their combinations are sufﬁcient
to enable a SDA attack to de-anonymize graph users.
Therefore, it is also a key challenge to make graph users
structurally indistinguishable with respect to most, if not
all, structural semantics.
it
is difﬁcult
Considering that
to seek a tradeoff
between generic utility and anonymity, a promising
research direction could be developing application-
oriented anonymization techniques. Instead of preserv-
ing as much data utility as possible, one only considers
some speciﬁc application-aware utility when designing
the anonymization techniques. For instance, although
RW loses more data utility than most existing graph
anonymization techniques, it achieves better anonymity
and meanwhile supports some application utility, e.g.,
sybil detection [20].
Graph Data DA. Based on our DA evaluation results,
future DA research may follow two directions.
First, it is interesting to study how to combine the ad-
vantages of different algorithms and develop new stable
and improved DA schemes. To achieve this, the chal-
lenge is to decide which structural characteristics should
be employed and how to use these characteristics during
the DA process. This is because some structural char-
acteristics are local (e.g., Deg.) while others are global
(e.g., CC and BC). It is better to seek a balance between
316  24th USENIX Security Symposium 
USENIX Association
14
the employed local and global structural semantics. Ad-
ditionally, some structural characteristics may carry sim-
ilar structural semantics, and thus simultaneously em-
ploying such characteristics will not lead to too much
improvement. Furthermore, according to our evaluation
experience, the sequence and weights of applying differ-
ent structural characteristics may induce very different
DA performance.
Second,
instead of trying to design a uniformly
optimal DA algorithm,
it is better to develop some
anonymization technique-oriented and application-aware
DA schemes. This is because, for some anonymiza-
tion algorithms, e.g., most k-anonymity based schemes,
they mainly achieve anonymity by local graph pertur-
bation.
In this scenario, the global graph characteris-
tics based DA algorithms will be more effective. On
the other hand, for some anonymization algorithms,
e.g., Add/Del and RW, they mainly achieve anonymity
through global graph perturbation. Therefore, the local
graph characteristics based DA schemes will be better
at de-anonymizing the data anonymized by these tech-
niques. Furthermore, according to our DA evaluation
experience, some DA attacks are more effective to de-
anonymize dense graphs, e.g., NS and JLSB, while some
other attacks are more effective to de-anonymize sparse
graphs, e.g., DV, PFG. Therefore, when developing new
DA algorithms, it is helpful to take into account both the
attacked anonymization technique and the attacked ap-
plication.
More Future Work. In this paper, we focus on im-
plementing and evaluating graph data anonymization and
DA techniques.
It is also interesting to integrate the
anonymization and DA techniques for other data types,
e.g., relational data. In the future, we propose to develop
a uniform and open-source evaluation system supporting
multi-type data anonymization and DA.
7 Conclusion
In this paper, we propose, implement, and evaluate Sec-
Graph (available at [1]), an open-source secure graph
data publishing/sharing system. Within SecGraph, we
systematically analyze,
implement, and evaluate 11
graph data anonymization algorithms, 19 data utility
metrics, and 15 modern SDA attacks. To the best of
our knowledge, SecGraph is the ﬁrst such system that
provides a uniform platform enabling data owners to
anonymize and evaluate the security of their data, and si-
multaneously enabling researchers to conduct fair studies
of existing or newly developed anonymization/DA tech-
niques. Leveraging SecGraph, we conduct extensive ex-
perimental evaluations. The results demonstrate that (i)
most anonymization schemes can partially or condition-
ally preserve most graph utility but lose some applica-
tion utility; (ii) no DA attack is optimum in all scenarios.
The actual DA performance depends on several factors;
and (iii) all the state-of-the-art anonymization schemes
are vulnerable to modern SDA attacks. Based on our
ﬁndings and analysis, we discuss the future research di-
rections and challenges of graph data anonymization and
DA.
8 Acknowledgments
The authors are very grateful to the anonymous review-
ers for their time and valuable comments. The authors
are also grateful to the following researchers in develop-
ing SecGraph: Ada Fu, Michael Hay, Davide Proserpio,
Qian Xiao, Shirin Nilizadeh, Jing S. He, Wei Chen, and
Stanford SNAP developers.
This work was partly supported by NSF-CAREER-
CNS-0545667. Prateek Mittal was supported in part by
the NSF under the grant CNS-1409415.
References
[1] S. Ji, W. Li, P. Mittal, X. Hu, and R. Beyah. Sec-
graph. http://www.ece.gatech.edu/cap/secgraph/.
[2] A. Narayanan and V. Shmatikov. De-anonymizing
social networks. S&P, 2009.
[3] S. Ji, W. Li, M. Srivatsa, and R. Beyah. Struc-
tural data de-anonymization: Quantiﬁcation, prac-
tice, and implications. CCS, 2014.
[4] S. Ji, W. Li, N. Gong, P. Mittal, and R. Beyah. On
your social network de-anonymizablity: Quantiﬁ-
cation and large scale evaluation with seed knowl-
edge. NDSS, 2015.
[5] M. Srivatsa and M. Hicks. Deanonymizing mobil-
ity traces: Using social networks as a side-channel.
CCS, 2012.
[6] X. Ying and X. Wu. Randomizing social networks:
a spectrum preserving approach. SDM, 2008.
[7] B. Zhou and J. Pei. Preserving privacy in social net-
works against neighborhood attacks. ICDE, 2008.
[8] K. Liu and E. Terzi. Towards identity anonymiza-
tion on graphs. SIGMOD, 2008.
[9] L. Zou, L. Chen, and M. T. ¨Ozsu. K-automorphism:
A general framework for privacy preserving net-
work publication. VLDB, 2009.
[10] J. Cheng, A. Fu, and J. Liu. K-isomorphism: Pri-
vacy preserving network publication against struc-
tural attacks. SIGMOD, 2010.
USENIX Association  
24th USENIX Security Symposium  317
15
[11] M. Yuan, L. Chen, and P. Yu. Personalized privacy
protection in social networks. VLDB, 2010.
[12] M. Hay, G. Miklau, D. Jensen, D. Towsley, and
P. Weis. Resisting structural re-identiﬁcation in
anonymized social networks. VLDB, 2008.
[13] S. Bhagat, G. Cormode, B. Krishnamurthy, and
D. Srivastava. Class-based graph anonymization
for social network data. VLDB, 2009.
[14] B. Thompson and D. Yao. The union-split al-
gorithm and cluster-based anonymization of social
networks. ASIACCS, 2009.
[15] A. Sala, X. Zhao, C. Wilson, H. Zheng, and
B. Zhao. Sharing graphs using differentially private
graph models. IMC, 2011.
[16] D. Proserpio, S. Goldberg, and F. McSherry. A
workﬂow for differentially-private graph synthesis.
WOSN, 2012.
[17] D. Proserpio, S. Goldberg, and F. McSherry. Cal-
ibrating data to sensitivity in private data analysis.
VLDB, 2014.
[18] Y. Wang and X. Wu. Preserving differential privacy
in degree-correlation based graph generation. TDP,
2013.
[19] Q. Xiao, R. Chen, and K. Tan. Differentially private
network data release via structural inference. KDD,
2014.
[20] P. Mittal, C. Papamanthou, and D. Song. Preserving
link privacy in social network based systems. NDSS
2013.
[21] A. Narayanan, E. Shi, and B. Rubinstein. Link
prediction by de-anonymization: How we won the
kaggle social network challenge. IJCNN, 2011.
[22] S. Nilizadeh, A. Kapadia,
and Y.-Y. Ahn.
Community-enhanced de-anonymization of online
social networks. CCS, 2014.
[23] P. Pedarsani, D. R. Figueiredo, and M. Gross-
glauser. A bayesian method for matching two sim-
ilar graphs without seeds. Allerton, 2013.
[24] N. Korula and S. Lattanzi. An efﬁcient reconcilia-
tion algorithm for social networks. VLDB, 2014.
[25] S. Ji, W. Li, M. Srivatsa, J. He, and R. Beyah.
Structure based data de-anonymization of social
networks and mobility traces. ISC, 2014.
[26] L. Backstrom, C. Dwork, and J. Kleinberg. Where-
fore art thou r3579x?
anonymized social net-
works, hidden patterns, and structural steganogra-
phy. WWW, 2007.
[27] L. Yartseva and M. Grossglauser. On the per-
formance of percolation graph matching. COSN,
2013.
[28] D. Goodin.
http://arstechnica.com/tech-
policy/2014/06/poorly-anonymized-logs-reveal-
nyc-cab-drivers-detailed-whereabouts/.
[29] P. Samarati. Protecting respondents’ identities in
microdata release. TKDE, 2001.
[30] J. Brickell and V. Shmatikov. The cost of privacy:
Destruction of data-mining utility in anonymized
data publishing. KDD, 2008.
[31] C. Dwork. Differential privacy. ICALP, 2006.
[32] R. Chen, G. Acs, and C. Castelluccia. Differentially
private sequential data publication via variable-
length n-grams. CCS, 2012.
[33] R. Albert, H. Jeong, and A.-L. Barabasi. Error
and attack tolerance of complex networks. Nature,
2000.
[34] D. J. Watts and S. H. Strogatz. Collective dynamics
of ‘small-world’ networks. Nature, 1998.
[35] K. Henderson et al. Roix: Structural role extraction
& mining in large graphs. KDD, 2012.
[36] S. Garriss, M. Kaminsky, M. J. Freedman, B. Karp,
D. Mazi`eres, and H. Yu. Re: Reliable email. NSDI,
2006.
[37] W. Chen, Y. Wang, and ang S. Yang. Efﬁcient inﬂu-
ence maximization in social networks. KDD, 2009.
[38] J. He, S. Ji, R. Beyah, and Z. Cai. Minimum-sized
inﬂuential node set selection for social networks
under the independent cascade model. Mobihoc,
2014.
[39] J Yang and J. Leskovec. Overlapping community
detection at scale: A nonnegative matrix factoriza-
tion. WSDM, 2013.
[40] S. Marti, P. Ganesan, and H. Garcia-Molina.
P2p routing with social networks.
Sprout:
P2P&DB, 2004.
[41] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao.
Sybillimit: A near-optimal social network defense
against sybil attacks. S&P, 2008.
318  24th USENIX Security Symposium 
USENIX Association
16