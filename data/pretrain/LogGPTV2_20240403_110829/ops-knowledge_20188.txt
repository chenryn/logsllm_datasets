User: 请回答以下安全问题有可能在该死的易受攻击的Web应用上进行SQL注入（高级）吗？我搜索了整个谷歌，看看如何绕过以下内容（来自DVWA的高级别安全）：
&lt；？php程序
if（isset（$_GET[提交]））{
//检索数据
$id=$_GET['id']；
$id=条纹斜杠（$id）；
$id=mysql_real_sescape_string（$id）；
if（is_numeric（$id））{
$getid=“从用户中选择first_name，last_name WHERE user_id='$id'”；
$result=mysql_query（$getid）或die（'&lt；pre&gt；'.mysql_error（）'&lt/前&gt；'）；
$num=mysql_numrows（$result）；
$i=0；
while（$i&lt；$num）{
$first=mysql_result（$result，$i，“first_name”）；
$last=mysql_result（$result，$i，“last_name”）；
回声'&lt；前&gt；'；
echo“ID:”$id。'&lt；br&gt；名字：'$首先。”&lt；br&gt；姓氏：'$最后的
回声'&lt/前&gt；'；
$i++；
}
}
}
&gt；
有可能破解它吗？
此外，我关注的另一个问题是中等水平。它确实让mysql_real_eescape_string（）起作用，但当您从低级使用相同的SQL注入并删除引号时，它会绕过保护。为什么？为什么绕过mysql_real_eescape字符串这么容易？
中级的代码（简明版本）如下：
$id=$_GET['id']；
$id=mysql_real_sescape_string（$id）；
$getid=“从用户中选择first_name，last_name WHERE user_id=$id”；

Assistant: “high”示例不可利用。这不是一个好的方法（在现代代码中，你会使用参数化而不是调用mysql_real_eescape_string，而stripslash是神奇语录时代的遗迹，谢天谢地，这个时代已经结束了），但它的设计不会立即变得脆弱。
（无论如何，对于SQL注入。由于那些可怕的回声，它很容易受到HTML注入的影响，从而导致XSS问题，但那是另一回事。）
为什么绕过mysql_real_eescape字符串这么容易？[在Medium示例中]
因为mysql_real_eescape_string被设计为在包含在SQL字符串文字上下文中时为了安全起见对字符进行转义。在查询的注入点中没有任何环绕的单引号，您就不是在字符串文本上下文中，而是在原始SQL上下文中。