• 23% of the views wait more than 5 seconds before video starts,
• 28% of the views have average bitrate less than 500Kbps, and
and 14% wait more than 10 seconds.1
74.1% have average bitrate less than 1Mbps.
We also observe that 2.84% views failed to start due to fatal er-
rors, and 14.43% without errors (not shown). Furthermore, we see
that more than 9% of the views have actually waited at least 20
seconds before they lose patience in waiting for the video to start.
Implications: To put these results in perspective, previous work
shows that a 1% increase in rebuffering ratio can reduce the to-
tal play time by more than 3 minutes, viewers who have low join
1These are the views that have in fact started playing the video.
Next we identify and analyze three potential issues that could
result in poor video quality.
Client-side variability: Figure 2 shows the distribution of the
standard deviation of the client-side intra- and inter-session esti-
mated bandwidth, which shows signiﬁcant variability in client-side
conditions. In this result, we rely on the client player’s bandwidth
estimation logic which effectively measures the observed band-
width for the data transferred from the selected CDN server, and
the data is collected every 10 seconds. For intra-session band-
width, we compute the standard deviation of all the bandwidth
samples across the entire lifetime of a view. Then we plot the
CDF for all views, excluding views that have only one sample. For
inter-session bandwidth, for each viewer, we compute the average
bandwidth of each session and then compute the standard devia-
tion across the different sessions initiated by that viewer. In both
cases, we bin the different views (for intra-session) or viewers (for
inter-session) based on their average bandwidth and show the distri-
bution for the ﬁve bins from 0-1Mbps to 4-5Mbps. For views with
bandwidth less than 1Mbps, more than 20% have a intra-session de-
viation of 400Kbps. The deviation is 2Mbps for views with band-
width between 4-5Mbps. Furthermore, there is a fair amount of
variability in the inter-session case as well. For example, more
than 20% of the viewers with bandwidth less than 1Mbps have a
deviation of 250Kbps. We also conﬁrmed that such variability is a
general phenomenon that occurs across all ISPs (not shown).
Implications: Given today’s bitrate levels (e.g., 400, 800, 1000,
3000 Kbps), this naturally implies the need for intelligent bitrate
selection and switching to ensure a smooth viewing experience.
Speciﬁcally, we see that it is necessary to choose a suitable bitrate
at the start of each session to account for inter-session variability
and also dynamically adapt the bitrate midstream to account for
intra-session variability.
CDN variability across space and time: The performance of
CDN infrastructure for delivering video can vary signiﬁcantly both
spatially (e.g., across ISPs or across geographical regions) and tem-
porally. Such variation can be caused by load, misconﬁguration
(e.g., content not reaching a CDN’s edge servers), or other network
conditions. Our goal is not to diagnose the root causes of these
problems (e.g., [32]), but to show that they occur in the wild.
Figure 3 shows the average rebuffering ratio, video startup time,
and video start failure rate experienced by clients with three ma-
jor CDNs across different geographical regions during the busiest
 0 0.2 0.4 0.6 0.8 1 0 5 10 15 20CDF of SessionsRebuffering Ratio (%)40.1% sessions experience rebuffering >= 1%19.5% sessions experience rebuffering >= 10% 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 5 10 15 20CDF of SessionsVideo Startup Time (Sec.)22.9% sessions waited >= 5s before video started14.1% sessions waited >= 10s before video started 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0 500 1000 1500 2000 2500 3000CDF of SessionsAverage Bitrate (Kbps)28.0% sessions have bitrate <= 500Kbps74.1% sessions have bitrate <= 1Mbps 0 0.2 0.4 0.6 0.8 1 0 1000 2000 3000 4000 5000CDFStandard Deviation (Kbps)0-1Mbps1-2Mbps2-3Mbps3-4Mbps4-5Mbps 0 0.2 0.4 0.6 0.8 1 0 1000 2000 3000 4000 5000CDFStandard Deviation (Kbps)0 - 1Mbps1 - 2Mbps2 - 3Mbps3 - 4Mbps4 - 5Mbps361(a) Rebuffering Ratio
(b) Video Startup Time
(c) Video Start Failure Rate
Figure 3: CDN performance can vary substantially across different geographical regions
(a) Rebuffering Ratio
(c) Video Start Failure Rate
Figure 4: CDN performance within a given geographical region can vary signiﬁcantly over time as well
(b) Video Startup Time
CDN Rebuffering Ratio
Startup Time
Failure Rate
1
2
3
34.25%
25.22%
40.53%
79.08%
12.55%
8.37%
53.85%
37.50%
8.65%
Table 2: Percentage of scenarios where one of the CDNs per-
forms the best in terms of each of the quality metrics.
hour on a weekday. Here, we choose the geographical regions cor-
responding to the top six cities by user population. Since there is
a potential tradeoff between a session’s bitrate and its performance
under these quality metrics (higher bitrates will typically result in
higher rebuffering ratios), we focus only on sessions having the
same bitrate by choosing the most commonly used bitrate within
that geographical region. We also remove sessions that cannot sus-
tain the lowest bitrate (300Kbps) to rule out client-side effects in
this analysis.
In summary, the results in Figure 3 show that:
• The performance of different CDNs can vary within a given
city. For example, in City1, the rebuffering ratio of CDN1 is
almost 2× that of users with CDN2.
• For each metric, no single CDN is optimal across all cities. For
example, in the case of rebuffering ratio, CDN1 is optimal for
City4 and City6, CDN2 for City1 and City5, and CDN3 for
City2 and City3.
• CDNs may differ in their performance across metrics. For ex-
ample, when we consider video startup time, CDN3 performs
the best in all cases except City4. In contrast, when it comes to
failure rate, CDN3 performs the worst.
Figure 4 shows the same metrics for one of these top cities over
three days. (Each point is the average over several thousand ses-
sions.) Here, we see that:
• For all three metrics, no CDN has the best performance all the
time. Every CDN experiences some performance issues during
the 3-day period. Table 2 shows how often each CDN is the
best choice in a city-hour pair over the course of one weekday.2
• The rebuffering ratio and failure rate of a CDN may experience
high ﬂuctuations over time. For example, for roughly half of the
time CDN3 has the lowest rebuffering ratio, and for the other
half it has the highest rebuffering ratio.
• Most of the performance degradation is not correlated across
CDNs, suggesting that these variations are not merely due to
time-of-day effects but other factors.
One possible reason for such variability in the quality observed
with CDNs is the load on the CDN. Figure 5(a) shows the rebuffer-
ing ratio vs. normalized CDN load for one CDN in one city over a
week. Here, we measure the load as the number of unique sessions
that we observe over each 5-minute interval. Since our clients rep-
resent only a fraction of the total load on the CDN, we normalize
the observed load for each CDN by the maximum observed over
the entire week for that CDN. Figure 5(a) shows that the rebuffer-
ing ratio generally increases with the normalized load.
Implications: This result highlights the need for providers to have
multiple CDNs to optimize delivery across different geographical
regions and over time. It also suggests that dynamically choosing a
CDN can potentially improve the overall video quality.
AS under stress: Finally, ISPs and ASes can also experience qual-
ity issues under heavy load. Figure 5(b) shows the rebuffering ratio
of one AS from all three CDNs during a 4-hour ﬂash crowd pe-
riod.3 Each point shows the average buffering ratio across clients
at a given time. We report the normalized load on the x-axis by
dividing the current number of users by the maximum number of
clients observed over time. During this ﬂash crowd, the rebuffering
ratio becomes quite high when the number of views increase.
Implications: These results suggest that heavy load can lead to ISP
congestion. Ideally, we want the video delivery infrastructure to be
2Here we consider only city-hours where all three CDNs serve a
reasonable number of views.
3This data comes from a known event which is not included in the
data set presented before.
 0 1 2 3 4 5 6 1 2 3 4 5 6Average Rebuffering Ratio (%)Top CitiesCDN1CDN2CDN3 0 1 2 3 4 5 6 1 2 3 4 5 6Video Startup Time (Sec.)Top CitiesCDN1CDN2CDN3 0 10 20 30 40 50 60 70 80 90 100 1 2 3 4 5 6Failure rate (%)Top CitiesCDN1CDN2CDN3 0 2 4 6 8 10 12 14 16 0 10 20 30 40 50 60 70Average Rebuffering Ratio (%)Hourperformance issueCDN1CDN2CDN3 0 5 10 15 20 25 30 35 40 45 0 10 20 30 40 50 60 70Video Startup Time (Sec.)HourCDN1CDN2CDN3 0 2 4 6 8 10 12 14 16 0 10 20 30 40 50 60 70Failure rate (%)HourCDN1CDN2CDN3362aware of these network hotspots to optimize video quality. In this
case, the load increases on all CDNs and thus switching to a dif-
ferent CDN would not help. As a content provider, one reasonable
policy is to reduce the bitrate for all views during these overload
scenarios or provide higher quality only to “premium” customers.
(a) One CDN under Load
(b) Whole AS under Load
Figure 5: Rebuffering ratio under stress
2.4 Summary of key observations
The goal of this section was to analyze the current state of video
delivery quality and analyze potential sources of performance prob-
lems. We see that:
• A signiﬁcant fraction of sessions suffer quality issues, with more
than 20% sessions having 10% rebuffering, and more than 14%
sessions with 10 seconds of startup delay.
• There is signiﬁcant variability in client-side bandwidth both
within and across sessions, suggesting the need for intelligent
bitrate adaptation.
• CDN quality varies considerably both across time and across
space, which indicates the need for providers to dynamically
choose different CDNs for different clients.
• When the streaming demand exceeds the capacity of CDNs
or/and ISPs, content providers may need to enforce a global
policy across clients to ensure a good viewing experience.
3. FRAMEWORK FOR OPTIMIZING
VIDEO DELIVERY
The previous section highlighted that many video sessions today
observe serious quality issues that arise as a consequence of client-
side variability, spatio-temporal variability in CDN performance,
and occasionally due to overload. The natural question then is how
can we design an optimized video delivery mechanism that is ro-
bust to such conditions. In this section, we begin with an overview
of the design space of optimizing video delivery and then sketch a
high-level vision for a video control plane.
3.1 Design Space
The design space for optimizing video delivery quality has three
natural dimensions:
1. What parameters can we control?
There are two main parameters here: choice of bitrate and choice
CDN, Bitrate
CDN, Bitrate
CDN
Bitrate
CDN
Bitrate
CDN
Bitrate
Client
Client
Client
Control Plane
Control Plane
Control Plane
Client
Client
Startup
Startup
Midstream
Startup
Startup
Midstream
Midstream
Midstream
Midstream
What parameter? Who chooses? When to choose?
CDN, Bitrate
Control Plane
Table 3: Some examples from the overall design space for op-
timizing video delivery quality. We do not consider the cases
where the client chooses the CDN and the control plane chooses
the bitrate.
of CDN/server to serve the content. Because the speciﬁc video
server is controlled by the CDN (e.g., based on load and la-
tency), we only consider server selection at a CDN granularity.
2. When can we choose these parameters?
There are two natural options here. We can select the parame-
ters (i.e., CDN, bitrate) at startup time when the video player is
launched or dynamically adapt these midstream in response to
changing network conditions.
3. Who decides the values for these parameters?
There are three high-level options we envision here: purely
client-side mechanisms (the de-facto approach today), server-
driven mechanisms (e.g., [28]), and an alternative control plane
that selects these parameters based on global state.4
Note that this assumes the viability of two mechanisms—bitrate
adaptation and CDN switching—which are already widely used.
(The speciﬁc algorithms to implement these mechanisms are or-
thogonal to the focus of this paper.) Bitrate adaptation is already
widely adopted in industry (e.g., [1, 4]). Similarly, CDN switch-
ing is already adopted in many industry players and with HTTP
chunking, chunks can be requested from different CDNs without
affecting user experience.
Table 3 looks at some example points in this design space by
combining different options of these three variables. At the sim-
plest end of the spectrum (row 1), we can think of a static selection
of both CDN and bitrate by the client when the player is launched.
This approach is not robust as both changes in CDN performance
and client access bandwidth can impact the user experience. The
de-facto approach today, shown in the second row in the table, is
client-side bitrate adaptation but with the CDN/server ﬁxed at start
time [1, 4, 7]. There are two advantages of client-side adaptation:
(1) clients are in the best position to observe local network effects
and (2) the response time to react to network dynamics will be low.
As we saw earlier, there is signiﬁcant temporal and spatial variabil-
ity in CDN performance that is difﬁcult to detect and alleviate with
purely client-side strategies.
To this end, we believe it will be helpful to have a control plane
deployed either by a content provider or a third party on the behalf
of the content providers that is aware of such temporal and spatial
variations. (We discuss what such a control plane may look like in
the next subsection.) Beyond these performance insights, a control
plane also offers content providers more ﬂexibility in instrument-
ing ﬁne-grained policies; e.g., providing higher quality service to
premium customers under load. In the ideal case (last row), we en-
vision this control plane can dynamically adapt both the CDN and
bitrate midstream based on global knowledge of network, distribu-
tion of active clients, and CDN performance.
4We do not consider server-driven mechanisms because these can
be equivalently realized by via client- or control-plane mechanisms.
 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 2.2 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1Rebuffering Ratio (%)Normalized Load 0 1 2 3 4 5 6 7 8 0 0.2 0.4 0.6 0.8 1Rebuffering Ratio (%)Normalized Number of Views363performance (e.g., rebuffering ratio, startup delay, failure rate) that
a given user may observe at the current time if it chose a different
combination of CDN and bitrate. By design, the oracle will have
to extrapolate the performance based on past and current measure-
ments. For example, it may cluster users based on a set of attributes
(e.g., ISP, location) and use the empirical mean within this cluster
as its prediction. The challenge here is that the extrapolation must
be robust to noise and missing data; e.g., are there enough points
within this cluster for this extrapolation to be statistically sound?
Global Optimization: At a high-level, we are solving a resource
allocation problem, where the resources are the CDNs. Each CDN