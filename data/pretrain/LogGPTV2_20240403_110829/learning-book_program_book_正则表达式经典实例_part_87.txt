正则流派：.NET、Java、PCRE、Perl、Python、Ruby
使用这个正则表达式和在实例3.11中的代码，你就可以遍历一个CSV文件，并且在得
到每个匹配之后检查第1个向后引用中的取值。每个匹配所需要的替代字符串则要取
决于这个向后引用的值。如果它是一个逗号，那么把它替换成一个制表字符。如果向
后引用中为空，或者包含一个换行符，那么就不要对这个值做任何改动（也就是说把
它作为替代字符串的一部分放回去）。因为CSV域会被捕获到第2个向后引用中，所
以还需要把它也作为每个替代字符事的一部分放回去。你实际上要替换的内容只是在
第1个向后引用中所捕获到的逗号。
JavaScript示例
下面的代码是一个完整的网页，其中包含了2个多行的文本输入域，在二者之间有-一
个标签为Replace的按钮。单击这个按钮，就可以把你输人到第一个文本框（标签为
Inpur）中的任意字符串，使用刚才所给的正则表达式，把其中的任意逗号分隔符都替
换为制表符，然后把新的字符串输出到第二个文本框（标签为Outpur）中。如果你使
用合法的CSV内容作为输人，那么在第二个文本框中出现的就会是把其中所有逗号分
隔符都替换为制表符之后的内容。要测试它，只需把这段代码保存到一个后缀为“html"
的文件中，然后在你的Web浏览器中打开这个文件：
标记语言和数据交换
447
www.TopSage.com
---
## Page 464
Input:
Output:
讨论
本实例中所给的方法允许你可以一次跳过一个完整的CSV域（包括其中内嵌的任何换
行符、转义的双引号和逗号）。这样，每个匹配都会正好从下-个域分隔符处开始。
在这个正则表达式中的第一个捕获分组，r？n）会匹配一个逗号、换行符或者在目
448
第8章
www.TopSage.com
---
## Page 465
标字符串最开始处的位置。因为正则引擎会从左向右尝试所有的选择分支，这些选项
所采用的顺序是它们在普通的CSV文件中最可能会出现的频率。这个捕获分组是这个
正则式唯一必须匹配的部分。因此，完整的正则式有可能会匹配到一个空字符串，因
为（个）定位符总是只会匹配一次。这第一个捕获分组匹配到的值必须要在位于正则式
之外把逗号替换为新的替代分隔符（例如制表符）的代码中进行检查。
我们还没有介绍完整的正则表达式，但是目前为止讲过的方式已经有点儿让人摸不着
头脑了。你可能会想要知道为什么不把这个正则式写成只用来匹配应当被替换为制表
符的逗号。如集能够这样做，那么就只需要对所有匹配到的文本使用一个简单的替代，
这样就不再需要正则式之外的代码来检查第1个捕获分组中匹配到的是个逗号还是
其他字符事。毕竞，使用顺序环视和逆序环视来确定一个逗号是位于被引起来的一个
CSV域之内还是之外应该是可行的，对吗？
不幸的是，要想采用这样的一种方式来准确决定哪些逗号位于双引号引起来的域之外，
你需要无限长度的逆序环视，而它只有在.NET正则流派中才会支持（关于各种不同
的逆序环视的限制，请参考实例2.16中的“不同级别的逆序环视”小节）。即使是.NET
开发人员也应当避免使用基于环视的方案，因为它会使之变得明显更加复杂，同样会
使这个正则式速度更慢。
我们再回头来看这个正则式是如何工作的，大多数的模式都位于下面一对圆括号之
内：也就是第2个捕获分组之内。这第二个分组会匹配单独的一个CSV域，其中包
括两边的双引号。与前一个捕获分组不同，这个分组是可选的，这样它就可以充许匹
配空的域。
注意在正则式中的第2个捕获分组中包含了由元字符分开的两个可选择的模式。第
一个选择分支[^"rn]+）是一个否定型字符类，其后跟着一个重复1次或多次的量词，
它们一起会匹配一整个没有引起来的域。要想产生匹配，这个域中不能包括任何双引
号、逗号或换行符。
在第2个分组中的第二个选择分支
Extract the third column from a CSV string
:nduI
(
:4ndno
讨论
因为这里的正则表达式是从实例8.10中拿来的，所以我们不会在这里重复解释它们的
工作原理。然而，本实例中包括了新的JavaScript示例代码，它使用了这个正则式从一
在前面所给的代码中，get_csv_column函数会每次遍历目标字符串中的一个匹配。在每
个匹配之后，它会检查第1个向后引用，判断其中包含的是否是一个逗号。如果是，
那么就匹配到了除了一行中第-一个域之外的内容，因此变量column_index会被加1，
来跟踪你正在处理的是第几列。如果第1个向后引用中包含的是除了逗号之外的任何
内容（例如是一个空字符串或者换行），那么就匹配到了一个新行中的第一个域，这样
column_index会被重新设置为0。
每次到达该索引的时候，第2个向后引用中的值（也就是除了前导的分隔符之外的所
有内容）会被推送到数组result中。在遍历了整个目标字符串之后，get_csv_column函
数会返回一个包含整个指定列（在这个例子中是第3列）中的值的数组。所得到的匹
配列表接着会被输出到页面上的第二个文本框中，每个值之间使用一个换行符作为分
隔（\n)。
一个简单的改进是可以让用户指定应当抽取的列的索引，这可以通过提示框或者添加
一个文本域来实现。我们前面所讨论的get_csv_column函数已经考虑到了这个功能，
它允许在第2个参数（index）中指定你想要抽取的列索引1（从0开始的整数）。
变体
虽然使用代码来每次遍历字符串中的一个CSV域会支持额外的灵活性，但是如果你使
用一个文本编辑器来执行这个任务，那么可能就只限于使用查找和替换功能。在这种
452第8章
www.TopSage.com
---