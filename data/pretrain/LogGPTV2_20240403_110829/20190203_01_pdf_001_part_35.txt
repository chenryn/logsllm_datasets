recommendation to perform a snapshot replication to any master node on which you
changed the filtering criteria.
Click the Ok button in the confirmation box to proceed with the update to the filter rule
selections. Click the Cancel button to return to the Filter Rules tab if you wish to modify
your filter rule selections.
Figure 6-67 - Change filter rule confirmation
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 373
EDB Postgres Replication Server User’s Guide
Step 6: If you clicked the Ok button in the preceding step, the Filter Rules updated
successfully confirmation message appears if the update was successful.
Figure 6-68 - Successful update of filter rules
If you clicked the Cancel button in the preceding step, the Filter Rules tab reopens. You
can modify your filter rule selections by repeating Step 4, or you can click the Cancel
button in the Filter Rules tab to abort the filter rule updates on the master node.
Step 7: It is strongly recommended that a snapshot replication be performed to the master
node that contains tables on which the filtering criteria has changed.
A snapshot ensures that the content of the master node tables is consistent with the
updated filtering criteria. See Section 6.5.1 for information on performing a snapshot
replication.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 374
EDB Postgres Replication Server User’s Guide
Note: The master definition node, which provides the source of the table content for a
snapshot, should contain a superset of all the data contained in the other master nodes of
the multi-master replication system. This ensures that the target of the snapshot receives
all of the data that satisfies the updated filtering criteria.
On the contrary, if the master definition node contains only a subset of all the data
contained in the other master nodes, then a snapshot to another master node may not
result in the complete set of data that is required for that target master node.
6.10 Switching the Master Definition Node
After the multi-master replication system is created, you can switch the role of the master
definition node with another master node.
Step 1: Make sure the publication server whose node is the parent of the master nodes of
the replication system is running and has been registered in the xDB Replication Console
you are using. See Section 5.2.1 for directions on starting and registering a publication
server.
Step 2: Select the Publication Database node corresponding to the master node that you
wish to set as the master definition node.
Figure 6-69 - Selecting the master node to set as the master definition node
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 375
EDB Postgres Replication Server User’s Guide
Step 3: Click the secondary mouse button on the Publication Database node and choose
Set as MDN.
Figure 6-70 - Setting the master definition node
Step 4: In the Set as MDN confirmation box, click the Yes button.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 376
EDB Postgres Replication Server User’s Guide
Figure 6-71 - Set as MDN confirmation
Step 5: The selected master node is now the master definition node.
Figure 6-72 - Database promoted to master definition node
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 377
EDB Postgres Replication Server User’s Guide
Step 6: The value Yes in the MDN field of the Property window indicates this database
is the master definition node.
Note: The new master definition node is moved to the top of the replication tree in the
xDB Replication Console.
Figure 6-73 - Master definition node (MDN) indicated by ‘Yes’ in the Property window
Note: You should now perform a synchronization replication to ensure that the new
master definition node is synchronized with the other master nodes. See Section 6.5.2 for
directions on performing a synchronization replication.
6.11 Ensuring High Availability
In a multi-master replication system, the master nodes participating in replication can
reside on separate physical hosts. If any master node goes offline, the master nodes on the
other hosts continue to synchronize transactions amongst themselves thereby ensuring
consistency of the publication tables on the remaining active master nodes. When an
offline master node is brought back online, pending transactions involving that master
node are synchronized with the other master nodes of the replication system. No
transaction data is lost between the master nodes.
Thus, an inherent characteristic of multi-master replication systems is that each master
node serves as a backup for the other nodes, and any such node can provide consistent
publication data to applications.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 378
EDB Postgres Replication Server User’s Guide
Similarly, the complete, multi-master replication system configuration information (that
is, the control schema and its control schema objects) is stored in each publication
database (that is, every master node) of the multi-master replication system.
Thus, should any master node go offline, the configuration information stored in the
control schema is always available to the publication server in order to continue operation
of the replication system.
Though every publication database contains a copy of the control schema, the publication
database designated as the controller database has special significance to the operation of
the replication system.
The significance of the controller database and its proper usage to ensure high availability
of the replication system are discussed in the following sections.
6.11.1 Significance of the Controller Database
At any given point in time during operation of the replication system, one of the
publication databases of the master nodes is designated as the controller database.
The controller database can be identified in either of the following ways:
 In the xDB Replication Console, when a master node is selected, the Controller
database field in the Property window is set to Yes if this master node is the
current controller database.
 In the xDB Replication Configuration file, the authentication and connection
parameters are set to the controller database. See Section 2.3.1.3 for information
on the xDB Replication Configuration file.
When a replication system is in use, the xDB Replication Server, and particularly, the
publication server component, accesses the currently designated controller database for
any configuration information.
Any changes that you make to the replication system configuration using the xDB
Replication Console or the xDB Replication Server CLI are first updated in the control
schema of the controller database, and then replicated by the xDB Replication Server to
the other publication databases to keep such information consistent.
Note: Replication history may take a longer period of time to replicate from the
controller database to the other publication databases, therefore it is possible that some
replication history may be lost if access to the controller database fails, and a switchover
is made to another publication database to act as the controller database. See Section 7.4
for information on replication history.
Therefore it is important that the controller database be accessible whenever the
replication system is use.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 379
EDB Postgres Replication Server User’s Guide
There may be circumstances where access to the controller database cannot be
maintained such as scheduled maintenance that must be performed on the database server
hosting the controller database or an unexpected network or system problem.
Such circumstances are addressed in the following sections.
6.11.2 Automatic Switchover of the Controller Database
If the publication server is currently running with its connection to the controller
database, and that database suddenly becomes inaccessible such as with a network or
system problem, the xDB Replication Server automatically performs a connection to
another online publication database to act as the controller database.
Thus, there is no apparent disruption in the operation of the xDB Replication Server.
The controller database authentication and connection information is modified
accordingly in the xDB Replication Configuration file (see Section 2.3.1.3). Thus, any
subsequent startups of the publication and subscription servers use this newly designated
controller database.
The controller database can be subsequently changed to use another publication database
as described in sections 6.11.3 and 6.11.4.
6.11.3 Switching an Active Controller Database
If at some point, the database server hosting the controller database must be taken offline
for maintenance or some other reasons you can switch the role of the controller database
to another publication database.
If the publication server is currently running, this switch can be made using the xDB
Replication Console (see Section 7.7) or the xDB Replication Server CLI (see Section
8.3.26).
After the switch has occurred, you can take the former controller database offline. Any
pending transactions involving the former controller database will be applied after it is
brought back online.
If the publication server is not running, you can still change the controller database so
that the publication server connects to a newly designated controller database when the
publication server is started. See Section 6.11.4 for information on this method.
6.11.4 Restarting with an Alternate Controller Database
If for some reason the currently designated controller database cannot be accessed by the
publication server, certain symptoms may occur such as the following:
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 380
EDB Postgres Replication Server User’s Guide
 The xDB Replication Console is unresponsive or the xDB Replication Server CLI
commands fail unpredictably.
 The publication server is not running and it cannot be successfully started.
If it is determined that the controller database is inaccessible, then you can switch the
controller database role to another publication database by editing the xDB Replication
Configuration file so it contains the connection information of another master node in the
replication system. See Section 2.3.1.3 for information on the xDB Replication
Configuration file.
After the xDB Replication Configuration file has been modified, restart the publication
server along with the subscription server if you are using that as well. See Section 5.2.1
for instructions on starting the publication server. See Section 5.3.1 for instructions on
starting the subscription server.
6.12 Optimizing Performance
Various publication server configuration options are available to optimize the
performance of multi-master replication systems.
Almost all publication server performance related configuration options for single-master
replication systems are equally applicable to multi-master replication systems (except
when they are database produce specific, such as for Oracle). See Section 5.8 for a
discussion of these options.
The publication server configuration options are set in the publication server
configuration file. See Section 10.4.1 for a detailed explanation of how to set the
configuration options in this file.
In addition, for configuration options specifically applicable to publication databases
configured with the log-based method of synchronization replication, see Section
10.4.1.15.
The following are some additional configuration options applicable to multi-master
replication systems only.
uniquenessConflictDetection
The uniquenessConflictDetection option determines if uniqueness conflict needs
to be detected at data load time or should be deferred to when data is applied against a
target master node. Possible values are EAGER and LAZY. Set it to EAGER if there is a high
probability of duplicate inserts across master nodes.
When the number of master nodes is equal to two, then the conflict detection is
performed in the default LAZY mode.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 381
EDB Postgres Replication Server User’s Guide
When the number of master nodes is greater than two, then the conflict detection is
always performed in EAGER mode. (A LAZY mode setting is ignored.) This is primarily
required to avoid removing the already replicated conflicted changes from a target node,
which otherwise is an expensive option.
uniquenessConflictDetection={EAGER | LAZY}
The default value is LAZY when the number of master nodes is two.
skipConflictDetection
The skipConflictDetection option controls whether or not to skip conflict detection
during synchronization replication. The default is false and should be changed only
when the probability of data conflict across master nodes is zero. For example if each
master node operates on an independent set of data then turning on this option improves
the replication time.
skipConflictDetection={true | false}
The default value is false.
deadlockRetryCount
In a multi-master replication system, if a deadlock is detected on a target master node, the
deadlockRetryCount option controls the number of times the publication server
attempts to retry application of the changes in the current replication cycle after waiting
for the number of milliseconds specified by deadlockWaitTime. Set
deadlockRetryCount to 0 to turn off this option in which case the failed changes are
attempted in the next replication cycle.
deadlockRetryCount=n
The default value for n is 1.
deadlockWaitTime
The deadlockWaitTime option is used with the deadlockRetryCount option to set
the wait time in milliseconds before the publication server attempts to retry application of
the changes on the target master node.
deadlockRetryCount=n
The default value for n is 1000.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 382
EDB Postgres Replication Server User’s Guide
7 Common Operations
This chapter describes configuration and maintenance operations of xDB Replication
Server that are common to both single-master and multi-master replication systems.
For configuration and management of your replication system, the xDB Replication
Console graphical user interface is used to illustrate the steps and examples in this
chapter. The same steps can be performed from the operating system command line using
the xDB Replication Server Command Line Interface (CLI). The commands of the xDB
Replication Server CLI utility are described in Chapter 8.
Note: Though most steps described in this chapter apply to both single-master and multi-
master replication systems, those steps that apply only to single-master replication
systems are noted with For SMR only. Those steps that apply only to multi-master
replication systems are noted with For MMR only.
7.1 Selecting Tables with the Wildcard Selector
When selecting tables for creating a publication for a single-master replication system
(see Section 5.2.3) or a multi-master replication system (see Section 6.2.3), there may be
cases where the number of available tables for selection is so large that simply choosing
them from a checklist becomes a difficult and time-consuming process.
This difficulty can also be encountered when adding tables to an existing publication (see
Section 7.6.3.1) or deleting tables from an existing publication (see Section 7.6.3.2).
In such cases, the wildcard selector provides the capability to choose a set of tables by
using pattern matching similar to the technique used by the SQL statement LIKE clause.
7.1.1 Wildcard Selector Patterns
Pattern matching as performed by the wildcard selector is the process in which the
eligible tables for an operation are returned in a filtered list if their schema and table
name combination match a character string called a pattern.
Matching a pattern means that the schema and table name combined in a string formatted
as schema_name.table_name matches the pattern, character by character, according
to the rules designated for the characters appearing in the pattern.
If the schema_name.table_name string matches the pattern, then the schema and table
are displayed in the filtered list for that pattern, which is the Available Tables field of the
Wildcard Selector dialog box. You can then selectively choose the tables from the filtered
list to be added to a local list, which contains the potential, candidate tables for the
operation for which you are using the wildcard selector.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 383
EDB Postgres Replication Server User’s Guide
Similarly, you can remove tables from the local list that had been previously selected if
you decide that you do not want these particular tables applied for the operation.
With the exception of characters called wildcards, characters appearing in a pattern
require that the character in the corresponding position in the
schema_name.table_name string must match the pattern character in a case
insensitive manner (that is, the letters A or a, match both A and a).
The pattern characters called wildcard characters or simply wildcards are interpreted in a
special manner when compared to the corresponding character position of the
schema_name.table_name character string.
Interpretation of pattern characters is described by the following:
 ? – Single-character wildcard specifies that any single character may exist in its
position of the pattern. (The SQL LIKE clause uses the underscore character (_)
for this purpose.)
 % - Multi-character wildcard specifies that any combination of multiple
characters, including the absence of any character, may exist in its position of the
pattern.
 [abc...] – List wildcard specifies that any one of the characters listed within
the brackets may exist in its position of the pattern.
 [a-d] – Range wildcard specifies that any one character that is greater than or
equal to the character preceding the hyphen (-) and less than or equal to the
character following the hyphen may exist in its position of the pattern.
 [abcd-f...] – List and range combination wildcard specifies that any character
that matches any of the list or range wildcard descriptions as described in the
previous two bullet points may exist in its position of the pattern.
 Any character specified in the pattern other than ?, %, [, ], and the characters
enclosed within the square brackets of a list or range wildcard must exist in its
position of the pattern. Pattern matching of such characters is case insensitive (for
example, a pattern of edb.dept matches a schema and table with the name
EDB.Dept).
 NOT pattern, !pattern, ! pattern – Exclusive pattern specifies that tables
that match the pattern string indicated by pattern are omitted from the filtered
list. Tables that do not match pattern are included in the filtered list. The
keyword NOT may be in uppercase, lowercase, or mixed case, but must be
followed by a single space character preceding pattern. !pattern specifies
that pattern immediately follows the exclamation point (!) with no intervening
space character. ! pattern specifies that a single space character exists between
pattern and the exclamation point (!).
 pattern* - Specify the asterisk (*) immediately following the pattern with no
intervening space character if you want to include tables in the filtered list that
match pattern and have been previously selected (that is, the local list tables)
along with tables that have not been selected. In the filtered list, each previously
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 384
EDB Postgres Replication Server User’s Guide
selected, local list table is displayed with a check mark in its check box. Each
filtered list table that was not previously selected has no check mark in its check
box. By default when the asterisk is omitted, only tables that have not been
previously selected are returned in the filtered list. Using the asterisk is useful for
removing currently selected tables from the local list.
The wildcard pattern definitions and examples can be seen from a help screen displayed
by clicking the secondary mouse button on the Filter Pattern text field of the Wildcard
Selector dialog box:
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 385
EDB Postgres Replication Server User’s Guide
Figure 7-1 - Filter Pattern Help screen
The following section describes the basic steps for using the wildcard selector.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 386
EDB Postgres Replication Server User’s Guide
7.1.2 Using the Wildcard Selector
This section describes the basic process of using the wildcard selector. The following
terms are used in the Wildcard Selector dialog box and the description of the wildcard
selector feature:
 Calling Dialog Box. This is the dialog box of the operation from which you
invoke the Wildcard Selector dialog box. The final set of tables from the wildcard
selector is applied to the operation managed by the calling dialog box. Possible
calling dialog boxes are the Create Publication dialog box (see Section 5.2.3 for a
single-master replication system or Section 6.2.3 for a multi-master replication
system), the Add Tables dialog box (see Section 7.6.3.1), and the Remove Tables
dialog box (see Section 7.6.3.2).