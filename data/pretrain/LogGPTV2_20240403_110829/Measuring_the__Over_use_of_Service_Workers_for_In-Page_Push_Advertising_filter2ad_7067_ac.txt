2017
2018
2019
2020
2021
Year
Fig. 5. Growth factor of the SWs deployment in our dataset. From 2015 till mid 2021,
there are 1.62× more publishers per year, on average, utilizing SWs in their Web apps.
5 Measurements
What are the Kind of Sites Deploying SWs? By crawling the top 150 K
websites of the Tranco list, we ﬁnd that 7,444 (4.96%) of these sites register
one or more SWs in the users’ browser (Table 1). To understand what kind of
sites deploy such a technique, we query Similarweb [17] for the content category
of each of our sites and we get a response for 86.7% of them. In Fig. 4, we
plot the top-10 categories. We see that the sites that mostly use SWs (in blue)
are related to ‘News and Media’ (22.05%), with the categories of ‘Computers
Electronics and Technology’ and ‘Arts and Entertainment’ following (6.27% and
3.5%, respectively).
What is the Prevalence of SW Deployment? By revisiting the sites of the
same Tranco list after 5 months (as described in Sect. 4) via the same crawler, we
ﬁnd a total of 9,383 websites registering a SW (6.25% of the total sites crawled),
which indicates a 26% increase. More speciﬁcally, we ﬁnd (i) 6,173 websites using
SWs in both crawls, (ii) 1,271 websites that stopped using them at some time
after our 1st crawl, and (ii) 3,210 new websites deploying them in their visitors’
browsers.
This rapid growth in the prevalence of SWs within just 5 months, motivated
us to go back in time and observe their evolution across the years. Speciﬁcally,
by using Wayback Machine web archive [18] and our initial set of SW -registering
websites, we crawled previous versions of their landing pages to spot when they
started using SWs. As a result, we crawled all the way back to 2015, when the
ﬁrst websites in our dataset started using SWs. As seen in Fig. 5, after 2015,
every year we observe an average growth factor of 1.62. In 2017 and 2018 we see
this growth increasing, with 2.09× and 2.14× more websites deploying SWs than
the previous year, respectively.
Measuring the (Over)use of Service Workers
433
Fig. 6. The number of distinct 3rd parties each SW communicates with. 32.1% of
the SWs do not communicate with a 3rd party. The majority (51.6%) communicates
with exactly one 3rd party. 16.3% communicate with 2 or more (even 26!) distinct 3rd
parties.
What is the Communications between SWs and Web? Next, by analyz-
ing the traﬃc that the registered SWs generate, we see that 27.59% communi-
cate only with the ﬁrst party. However, 67.89% of them communicate with at
least one 3rd party, and 4.51% of them do not communicate with the web at
all (Table 1). In Fig. 6, we plot the number of distinct 3rd parties each regis-
tered SW in our dataset communicates with. As we can see, 32.1% of the SWs
communicate with no 3rd party (as mentioned: 27.59% connects with the ﬁrst
party only, and 4.51% with no one), when the majority (51.6%) communicates
with exactly one 3rd party, proving that there are speciﬁc agreements between
publishers and 3rd party advertisers, analytics, content or library providers. It
is important to note that there is a signiﬁcant 16.3% communicating with 2 or
more (even 26!) distinct 3rd parties.
How much do SWs Support Push Advertising? By using the popular
ﬁlter-list of 1Hosts, we classify the type of domains the SWs connect with in our
dataset. Surprisingly, as we see in Fig. 7, in essence 3rd party communications
of SWs are used for advertising, since the majority (65.08%) of the SWs that
connect with 3rd parties, establish these connections to receive content from at
least one push advertiser (9.51% receive content from 2 advertisers or more).
On the contrary, only 34.92% of the SWs perform at least one request to 3rd
parties, but communicate with zero ad servers.
What is the Popularity of Sites Leveraging Push Advertising? In Fig. 8,
we plot the popularity rank of the websites that deploy SWs on the users’ side.
As we see, the sites that tend to deploy ad pushing SWs are of lower popularity
ranks in comparison to the ones that use SW only locally, without connecting to
any remote server. Speciﬁcally, the median site that registers SW that does not
434
G. Pantelakis et al.
Fig. 7. Number of distinct push ad 3rd
parties each SW communicates with.
65.08% of SWs communicate with 3rd
parties and receive content from at least
one push advertiser. 34.92% of SWs per-
form at least one request to 3rd parties
but communicate with zero ad servers.
Fig. 8. Cumulative distribution function
of the popularity rank of the websites
with SWs. As we see, the sites that tend
to deploy ad pushing SWs are less pop-
ular than the ones that use SW only
locally, and do not connect to any remote
3rd party server.
connect with any remote server has a popularity rank of around 40000 in Tranco
(grey). On the other hand, the median site with SW that connects (i) only with
ﬁrst party domains, or with 3rd parties that do not include ads is around 50000
rank (green or orange) (ii) with push ad domains around 60000 rank (red).
Also, as we see in Fig. 4 (in red) where we consider only sites with SWs
that communicate with ad servers, the content categories are topped by ‘News
and Media’ (27%), ‘Computers, Electronics and Technology’(6.42%) and ‘Adult’
(4.79%). This is somewhat expected, since ‘News and Media’ sites have higher
chances to convince a user to give their consent to receive timely news updates
via push notiﬁcations, that can also include ads.
In Fig. 9, we further analyze these content categories by selecting their sites
in our dataset that communicate with 3rd parties via their deployed SWs. Then,
we measure what portion of them does that for advertising purposes. We see that
Soccer sites lead this eﬀort, with a percentage close to 85%. This means that
from all Soccer sites using SWs to communicate with 3rd parties, 85% use them
to communicate speciﬁcally with at least one ad server. The ‘Animation and
Comics‘ follow closely with 84% and ‘File Sharing and Hosting’ are next, with
83.78%. The ‘News and Media’ are in ﬁfth place with a bit more than 77%.
These high portions suggest that 75–80% of these websites use SWs for ads.
One can not help but wonder why were SWs invented in the ﬁrst place. It
is true that several people may argue that SWs were invented to provide oﬄine
operation, synchronize data in the background, and retrieve updates. However,
we see a diﬀerent picture here: SWs that communicate with 3rd parties are pri-
marily used for advertisements, thus opening a new way to reach users’ desktop:
a way invented for a diﬀerent purpose. Even if these push notiﬁcations require
user to give consent, the website is free to abuse this consent at any time by
Measuring the (Over)use of Service Workers
435
Fig. 9. Breakdown the top-10 categories
for sites using SWs to serve ads. ‘Soccer’
sites are the most aggressive in using SWs
for advertising (84.62%), with ‘Animation
and Comics’ and ‘File Sharing and Host-
ing’ following. ’News and Media’ sites are
next (75%).
Fig. 10. Portion of unique sites collab-
orating with each of the top ad servers
in our dataset. onesignal.com dominates
the market (37.49%) with the majority
of the rest of the ad servers owning less
than 4% each (note: y-axis in log-scale).
delivering ad messages instead of the news updates the user was interested in
receiving. These ad messages appear via the SWs as native ads and cannot be
controlled (or ﬁltered out) by ad-blockers. One can only smile in melancholy at
the Google Developers guide advising: “Whatever you do, do not use notiﬁca-
tions for advertising of any kind.”1
Which are the Dominant Push Ad Networks? In Fig. 10, we plot the
top 10 most popular Push Ad Networks in our data, and the portion of the
registered SWs they communicate with. We see that onesignal.com dominates
push advertising by owning more than 37.49% of the market, with the majority
of the rest Push Ad Networks owning less than 4% each. In Fig. 11, we plot
the distribution of all push ad networks in our dataset along with the sites they
deliver push ads to. We can see that the distribution can be modeled by two
straight lines for large numbers in the x-axis, indicating that the distribution
has a piece-wise power-law tail. We can also see the head representing the major
player onesignal.com.
6 Related Work
The powerful technology of Service Workers provides rich functionality to devel-
opers and has triggered an important body of research around its security and
privacy aspects. Papadopoulos et al. in [3] are the ﬁrst to study SWs in an
attempt to raise awareness regarding a new class of attacks that exploit this
exact HTML 5 functionality. Speciﬁcally, the authors investigated the potential
1 https://developers.google.com/web/ilt/pwa/introduction-to-push-notiﬁcations.
436
G. Pantelakis et al.
103
s
e
t
i
S
f
o
r
e
b
m
u
N
102
101
100
100
-0.73
-
1.5
3
101
102
Rank of Push Ad Networks
103
Fig. 11. Distribution of the number of sites that each Push Advertiser in our dataset
delivers ad notiﬁcations to. The points in the plot tend to converge to two straight
lines for large numbers in the x axis, following a piece-wise power-law distribution.
security vulnerabilities of SWs and they demonstrated multiple attack scenar-
ios from cryptojacking to malicious computations (e.g., distributed password
cracking), as well as Distributed Denial of Service attacks.
Karami et al. in [4] studied attacks that aim to exploit SWs vulnerabilities to
ex-ﬁltrate important privacy information from the user. Speciﬁcally, they demon-
strated two history-sniﬃng attacks that exploit the lack of appropriate isolation
in these browsers including a non-destructive cache-based version. Finally, the
authors proposed a countermeasure and developed a tool that streamlines its
deployment, thus facilitating adoption at a large scale.
Chinprutthiwong et al. in [20] described a novel Service Worker-based Cross-
Site Scripting (SW-XSS) attack inside a SW , that allows an attacker to obtain
and leverage SW privileges. Additionally, they developed a SW Scanner to ana-
lyze top websites in the wild, and they found 40 websites vulnerable to this
attack including several popular and high ranking websites. Squarcina et al.
in [21] demonstrated how a traditional XSS attack can abuse the Cache API
of a SW to escalate into a person-in-the-middle attack against cached content,
thus, compromising its conﬁdentiality and integrity.
Subramani et al. in [12] proposed PushAdMiner: a new tool to detect Web
Push Notiﬁcations (WPNs) on the Web. Contrary to our work, the authors focus
only on ad related WPNs messages by collecting and analyzing 21,541 WPN
messages and 572 ad campaigns, for a total of 5,143 WPN-based ads reporting
51% of them as malicious. Finally, Lee et al. in [22] conducted a systematic study
of the security and privacy aspects of PWAs. They demonstrated a cryptojacking
and a browser history exﬁltration attack. They also suggested possible mitigation
measures against the vulnerabilities of PWAs and corresponding SWs.
Measuring the (Over)use of Service Workers
437
7 Summary and Conclusion
In this paper, we set out to explore the ecosystem of Service Workers and how
websites overuse them to deliver ads (even when user has deployed ad-blockers).
We analyzed the top 150 K websites of the Tranco list and our ﬁndings can be
summarized as follows:
1. A non-trivial percentage (4.96%) of sites deploy a SW on the user side.
2. Within a period of 5 months (12.20–05.21), there has been a 26% increase in
the adoption of SWs.
3. Overall, by using Wayback Machine, we found that from 2015 till today, there
were 1.62× more publishers per year, on average, utilizing SWs in their web
applications.
4. 32.1% of the SWs communicate with no 3rd party (27.59% connects with its
ﬁrst party only and 4.51% connects with nobody). The majority (51.6%) com-
municates with exactly one 3rd party with a signiﬁcant 16.3% communicating
with 2 or more (and up to 26) distinct 3rd parties.
5. Third-party communications are mostly for pushing ads: A stunning
65.08% of the registered SWs that communicates with 3rd party
servers, communicate with at least one advertiser.
6. Most of the ads-pushing SWs are deployed on ‘News and Media’ related
sites (27%), with the ‘Computers, Electronics and Technology’ (6.42%), and
‘Adult’ (4.79%) related sites following.
7. For some website categories such as ‘Soccer’ and ‘File Sharing’, the percentage
of ads-pushing SWs reaches as high as 85%.
Our study on Service Workers has revealed several surprising results with
respect to the use of SWs on Web applications and websites. Future research
could look into leakage of user personal information and tracking from SWs, as
well as how ad-blockers can be revamped to still provide eﬀective ad-ﬁltering to
their end-users.
Acknowledgements. This project received funding from the EU H2020 Research
and Innovation programme under grant agreements No 830927 (Concordia), No 830929
(CyberSec4Europe), No 871370 (Pimcity) and No 871793 (Accordion). These results
reﬂect only the authors’ view and the Commission is not responsible for any use that
may be made of the information it contains.
References
1. Google Developers: Progressive web apps (2017). https://web.dev/progressive-
web-apps/#introduction
2. Pete LePage Sam Richard: What are progressive web apps? (2020). https://web.
dev/what-are-pwas/
3. Panagiotis, P., Panagiotis, I., Michalis, P., Evangelos, P.M., Ioannidis, S., Vasil-
iadis, G.: Master of web puppets: abusing web browsers for persistent and stealthy
computation. In: Network and Distributed System Security Symposium (NDSS)
(2019)
438
G. Pantelakis et al.
4. Karami, S., Ilia, P., Polakis, J.: Awakening the web’s sleeper agents: misusing
service workers for privacy leakage. In: Network and Distributed System Security
Symposium (NDSS) (2021)
5. Ann, M.: Are push notiﬁcations high engagement marketing tool
in 2018?
(2021). https://themarketingfolks.com/are-push-notiﬁcations-high-engagement-
marketing-tool-in-2018/
6. New brave ads use cases show up to 15.8% click-through rate, unmatched engage-
ment (2020). https://brave.com/brave-ads-use-cases/
7. Papadopoulos, P., Kourtellis, N., Markatos, E.P.: The cost of digital advertisement:
comparing user and advertiser views. In: Proceedings of the World Wide Web
Conference (WWW) (2018)
8. Castelluccia, C., Olejnik, L., Minh-Dung, T.: Selling oﬀ privacy at auction. In:
Network and Distributed System Security Symposium (NDSS) (2014)
9. Pachilakis, M., Papadopoulos, P., Markatos, E.P., Kourtellis, N.: No more chasing
waterfalls: a measurement study of the header bidding ad-ecosystem. In: Proceed-
ings of the Internet Measurement Conference (IMC) (2019)
10. Aksana Shakal. Push ads in 2021: Complete advertiser’s guide (2020). https://
richads.com/blog/push-notiﬁcation-advertising/
11. Papadopoulos, P., Kourtellis, N., Rodriguez, P.R., Laoutaris, N.: If you are not
paying for it, you are the product: how much do advertisers pay to reach you? In:
Proceedings of the Internet Measurement Conference (IMC) (2017)
12. Subramani, K., Yuan, X., Setayeshfar, O., Vadrevu, P., Lee, K.H., Perdisci, R.:
When push comes to ads: measuring the rise of (malicious) push advertising. In:
Proceedings of the ACM Internet Measurement Conference (IMC) (2020)
13. Google. Puppeteer: Chormium browser automation tool
(2020). https://
developers.google.com/web/tools/puppeteer
14. Google Developers: Firebase cloud messaging (2021). https://ﬁrebase.google.com/
docs/cloud-messaging
15. Tranco: The tranco list we used for our crawls. https://tranco-list.eu/list/L564/
1000000. Accessed 24 Sep 2020
16. badmojr: 1hosts (pro) (2021). https://hosts.netlify.app/Pro/hosts.txt
17. Similarweb LTD.: Website traﬃc–check and analyze any website (2021). https://
www.similarweb.com/
18. Wayback Machine: Internet archive (2021). https://archive.org/web/
19. Mahanty, A.: Python package & cli tool that interfaces with the Wayback machine
API (2021). https://pypi.org/project/waybackpy/
20. Chinprutthiwong, P., Vardhan, R., Yang, G., Gu, G.: Security study of service
worker cross-site scripting. In: Annual Computer Security Applications Conference
(ACSAC) (2020)
21. Squarcina, M., Calzavara, S., Maﬀei, M.: The remote on the local: exacerbating web
attacks via service workers caches. In: 15th Workshop On Oﬀensive Technologies
(WOOT) (2021)
22. Lee, J., Kim, H., Park, J., Shin, I., Son, S.: Pride and prejudice in progressive
web apps: abusing native app-like features in web applications. In: Proceedings of
the ACM SIGSAC Conference on Computer and Communications Security (CCS)
(2018)