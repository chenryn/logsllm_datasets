to align to sub-portions of a longer video. We therefore modiﬁed the basic DTW
algorithm so that every element of the shorter video must be matched while
some elements of the longer video are allowed to remain unmatched (see Fig. 2).
Our variation of DTW operates on pairs of image sequences
A = a0, a1, ··· , ai, ··· , aI−1
B = b0, b1, ··· , bj, ··· , bJ−1
(1)
where I and J indicate the number of images in sequence A and B, correspond-
ingly, and we enforce I >= J by swapping videos if necessary.
Figure 3 shows the pseudocode of our adapted DTW algorithm. We use the
output of the function result to indicate the DTW score between A and B. The
smaller the DTW score, the more likely that videos A and B are duplicates.
A key component in the DTW algorithm is the image distance function
d(ax, by). Choosing a good image distance function is vital to the accuracy of
our duplicate detection method. We used a distance function between image
histograms, denoted by dh(ax, by).
Histogram Distance refers to a distance measurement between images based
on the relative frequency of diﬀerent colors [7,20]. For each image, x, we cal-
culate its color histogram Hx = (h1
x ). (The color histogram is a
global image descriptor.) We consider images in HSV (Hue, Saturation, and
Value) color space because the HSV is more perceptually relevant to human
eyes than the RGB representation. The color histogram contains 5 bins for Hue,
8 bins for Saturation, and 16 bins for Value. The total number of bins, M, is
therefore M = 29. The Value section of the histogram contains a greater num-
ber of histogram bins, reﬂecting the fact that human eyes are more sensitive to
light/dark contrast than to color information. As black borders/banners may be
introduced during video transcoding and aﬀect our histogram distance metric,
we ignore pixels whose V alue = 0 (black) when calculating histograms.
x,··· , hM
x, h2
A Quantitative Study of Video Duplicate Levels in YouTube
241
The Histogram Distance between two images x and y is calculated as the
squared Euclidean distance between Hx and Hy:
dh(x, y) =
M(cid:2)
x − hk
(hk
y)2
k=1
This distance metric can be used to determine if a pair of videos are visually
similar. We consider a pair of videos duplicates if their Histogram Distance
is less than 0.013. This threshold was chosen by calibrating against a precision-
recall graph to give a perfect recall (zero false-negative rate) on a set of 100 pairs
of videos.
4.4 Manual Validation of Duplicate Pairs
In the pairwise comparison step described above, we deliberately selected a high
DTW score threshold to achieve a high recall rate. This high threshold, however,
can produce a correspondingly high false discovery rate.
To alleviate this potential problem, we augmented our automated procedure
with a manual duplicate veriﬁcation step that has false positive rate near
zero. In the manual veriﬁcation step, for each duplicate pair, a human observer
manually viewed both the corresponding sampled video and searched video
to determine if the pair was a true duplicate. Speciﬁcally, the human observer
considered the searched video to be a duplicate of the sampled video under
any of the following cases:
1: A, B, I, J are deﬁned in Equation 1.
2:
(ax, by) denotes distance between image ax from sequence A and image
assert I >= J
dtw0,0 = d(a0, b0)
for (i = 1; i < I; i + +) do
dtwi,0 = d(ai, b0)
by from sequence B.
3: function DTW(A, B)
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
return result = dtwI−1,J−1/J
for (j = 1; j < J; j + +) do
dtwj,j = dtwj−1,j−1 + d(aj, bj)
for (i = 1; i < I; i + +) do
for (j = 1; j < min(i, J); j + +) do
dtwi,j = dtwi−1,j
dist = d(ai, bj)
if (dtwi−1,j−1 + dist < dtwi,j) then
dtwi,j = dtwi−1,j−1 + dist
Fig. 3. The DTW algorithm between two image sequences (i.e., videos) A and B.
242
Y. Liu et al.
1. the searched video has the same video content as the sampled video.
2. the searched video is part of the sampled video.
3. the sampled video is part of the searched video.
5 Quantifying Video Duplicate Levels in YouTube
To estimate the number of duplicates in YouTube, we ﬁrst randomly generated
1,000 preﬁxes. Using these 1,000 preﬁxes, we collected 6, 365 sampled videos
and 512, 314 associated searched videos. For each searched video returned
by the YouTube search engine, we ran the variation of the DTW algorithm
discussed in Sect. 4 to produce a similarity score. We set the threshold for dupli-
cate determination high (as discussed in Sect. 4.3) to produce a low rate of false
negatives (high recall), then conducted a manual curation step to validate that
each candidate pair returned by the DTW algorithm constituted a true pair of
duplicates.
Although the manual validation is time and resource intensive, this step was
feasible because only the relatively small number of pairs of videos marked as
duplicates by the DTW step were manually assessed.
5.1 Results
We present numeric results in Table 1. Out
of the 6, 365 sampled videos, our assess-
ment shows that 631 (10 %) have duplicates
within YouTube. Assuming that the 6, 365
sampled videos were drawn independently
and the counts of videos with duplicates
and videos with non-duplicates were drawn
from a binomial distribution, we can com-
pute a conﬁdence interval around the proba-
bility that a sampled video has a duplicate
using the Beta quantile function. The 95 %
conﬁdence interval around this probability is
(0.0912, 0.1065). On average, for each sampled video associated with one or
more duplicates, 4.69 duplicates were discovered. Figure 4 shows the distribution
of the number of duplicates for each sampled video with one or more duplicates.
Out of 631 videos that have duplicates, 304 have only one duplicate found and
63 have more than 10 duplicates found, indicating the high variance of dupli-
cate levels within YouTube. In total, our manually augmented evaluation found
2, 960 duplicates of the 6, 365 sampled videos. Assuming that the number of
duplicates associated with each video is drawn from a normal distribution with
a standard deviation of 3.38 (the empirical standard deviation), we compute a
95 % conﬁdence interval of (0.382, 0.548) around the average number of dupli-
cates for each video. These measurements indicate that roughly 1/3 of videos on
YouTube are duplicates. Of the 2, 960 duplicate videos found, only 327 (11 %)
Fig. 4. # of duplicates found for
each sampled video with one or
more duplicates.
A Quantitative Study of Video Duplicate Levels in YouTube
243
Table 1. Manually augmented assessment of YouTube duplicate levels.
Category
# of
Sampled
# of dups Avg. # of dups
Duplicate
sampled videos that
found per
found for sampled ratio (%)
videos
have dups
category
videos that have
# %
duplicates
Video Category
Pets & Animals
Autos & Vehicles
Comedy
Education
Entertainment
Film & Animation
Gaming
Howto & Style
155
232
462
183
851
244
588
119
7
4.5 %
15
27 11.6 % 147
33
7.1 % 169
25 13.7 %
53
59
6.9 % 240
29 11.9 %
76
33
11
5.6 % 196
9.2 %
29
Music
1068
146 13.7 % 642
News & Politics
Nonproﬁt &
Activism
220
84
2.14
5.44
5.12
2.12
4.07
2.62
5.94
2.64
4.40
4.83
42 19.1 % 203
13 15.5 % 143
11.00
People & Blogs
1477
156 10.6 % 767
Shows
Sports
Science & Tech
Travel & Events
Video Duration
7
392
113
170
0
32
9
9
0 %
0
8.2 % 179
8.0 %
5.3 %
92
9
Short [0,240)
4490
418
9.3 % 2310
1743
Medium [240,1200]
Long (1200, ∞)
Video Popularity
Unpopular (<1000) 5529
Popular (≥1000)
Total
132
836
190 10.9 % 596
23 17.4 %
54
513
9.3 % 2537
118 14.1 % 423
4.92
0.00
5.59
10.22
1.00
5.53
3.14