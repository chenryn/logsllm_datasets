---
author: Adnan Rahić
category: 软件开发
comments_data:
- date: '2017-09-06 23:44:10'
  message: 可以
  postip: 221.221.223.95
  username: 来自北京的 Chrome Mobile 51.0|Android 6.0 用户
count:
  commentnum: 1
  favtimes: 4
  likes: 0
  sharetimes: 0
  viewnum: 8606
date: '2017-06-12 08:15:00'
editorchoice: false
excerpt: 使用 7 条简单的 Git 命令开始你的软件开发之旅
fromurl: https://hackernoon.com/how-to-master-the-art-of-git-68e1050f3147
id: 8600
islctt: true
largepic: /data/attachment/album/201706/12/081112zzoqhsylo41ujshq.jpg
permalink: /article-8600-1.html
pic: /data/attachment/album/201706/12/081112zzoqhsylo41ujshq.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 使用 7 条简单的 Git 命令开始你的软件开发之旅
tags:
- GitHub
- Git
thumb: false
title: 掌握 Git 之美
titlepic: true
translator: zhousiyu325
updated: '2017-06-12 08:15:00'
---
![](/data/attachment/album/201706/12/081112zzoqhsylo41ujshq.jpg)
> 
> 使用 7 条简单的 Git 命令开始你的软件开发之旅
> 
> 
> 
你是否曾经想知道如何学好 Git？你长期以来都是跌跌撞撞地在使用 Git。最终，你总需要掌握它的窍门。这就是我写这篇文章的原因，我将带你去启蒙之旅。这儿是我关于如何加快 Git 学习过程的基本指南。我将介绍 Git 的实际情况以及我使用最多的 7 条 Git 命令。本文主要针对有兴趣的开发人员和大学新生，他们需要关于 Git 的介绍以及如何掌握基础知识。
---
> 
> 你可以往前继续阅读整篇文章，或者只读 TLDR; 部分，尽管这将使我很受伤。
> 
> 
> 
### TLDR;
在学习 Git 的过程中，请养成下面这些步骤的习惯：
1. 随时使用 `git status`！
2. 只更改那些你真正想更改的文件。
3. `git add -A` 会是你的朋友。
4. 随时使用命令 `git commit -m "meaningful messages"`。
5. 做任何推送（push）之前先使用命令 `git pull`，但是这需要在你提交过一些更改之后。
6. 最后，`git push`推送提交的更改。
---
### 良宵莫辜负
对任何开发人员来说，通常第一步都是选择一个广泛使用的地方托管他或她的代码库。那就是，[GitHub](https://github.com/)。它是一切有关代码的聚集地。要理解 GitHub 的概念，你先需要知道什么是 Git。
Git 是一款基于命令行的版本控制软件，在 Windows 和 Mac 系统上也有几款可用的桌面应用。 Git 由 Linux 之父 Linus Torvalds 开发，Linus Torvalds 还是是计算机科学中最有影响力的人物之一。因为这一优势，Git 已经成为绝大多数软件开发人员关于共享和维护代码的标准。这一大段话，让我们将其细细道来。正如它的名字所说，版本控制软件 Git 让你可以预览你写过的代码的所有版本。从字面上来说， 开发人员的每个代码库都将永远存储在其各自的仓库中，仓库可以叫做任何名字，从 *pineapple* 到 *express* 都行。在此仓库开发代码的过程中，你将进行出无数次的更改，直到第一次正式发布。这就是版本控制软件如此重要的核心原因所在。它让作为开发人员的你可以清楚地了解对代码库进行的所有更改、修订和改进。从另外一个方面说，它使协同合作更容易，下载代码进行编辑，然后将更改上传到仓库。然而，尽管有了这么多好处，然而还有一件事可以锦上添花。你可以下载并使用这些文件，即使你在整个开发过程中什么事也没有做。
让我们回到文章的 GitHub 部分。它只是所有仓库的枢纽（hub），这些仓库可以存储在其中并在线浏览。它是一个让有着共同兴趣的人相聚的地方。
### 千里之行始于足下
OK，记住，Git 是一款软件，像任何其他软件一样，你首先需要安装它：
[Git - 安装 Git，如果你希望从源代码安装 Git，你需要安装这些 Git 的依赖库： autotools —— 来自 git-scm.com](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)
*Tips：请点击上面的链接，然后按照说明开始。*
完成了安装过程，很好。现在你需要在你的浏览器地址栏输入 [github.com](https://github.com/) 访问该网站。如果你还没有帐号的话需要新创建一个帐号，这就是你的起舞之处。登录并创建一个新仓库，命名为 Steve ，没有什么理由，只是想要一个名为史蒂夫的仓库好玩而已。选中 “Initialize this repository with a README” 复选框并点击创建按钮。现在你有了一个叫做 Steve 的仓库。我相信你会为你自己感到自豪。
![](/data/attachment/album/201706/12/081217h3111g1k38kbe1wd.jpg)
### 现在开始在使用 Git
现在是比较有趣的部分。你将把 Steve 克隆到你本地的机器上。可以把这个过程看作从 Github 上复制仓库到你的电脑上。点击 “clone or download” 按钮，你将看到一个类似下面这样的 URL:
```
https://github.com/yourGithubAccountName/Steve.git
```
复制这个 URL 并打开命令提示符窗口。现在输入并运行条命令：
```
git clone https://github.com/yourGithubAccountName/Steve.git
```
Abrakadabra！Steve 仓库已经被自动克隆到了你的电脑上。查看你克隆这个仓库的目录，你会看到一个叫做 Steve 的文件夹。这个本地的文件夹现在已经链接到了它的 “origin” ，也就是 GitHub 上的远程仓库。
记住这个过程，在你的软件开发工程人员的职业生涯中你一定会重复这个过程很多次的。完成所有这些准备工作之后，你就可以开始使用最普通且常用的 Git 命令了。
![](/data/attachment/album/201706/12/081300ywes9cb6zhsii4b1.jpeg)
### 你现在已经开始在真实场景使用 Git 了
找到 Steve 目录并在该目录中打开命令提示符窗口，运行下面的命令：
```
git status
```
这会输出你的工作目录的状态，让你知道所有你编辑过的文件。这意味着它显示了远程库中和本地工作目录中之间的文件差异。`status` 命令被用来作为 `commit` 的模版，我将在这篇教程后面进一步谈论 `commit` 。简单的说，`[git status][1]` 告诉你你编辑过哪些文件，以给你一个你想要上传到远程库的概述。
但是，在你做任何上传之前，你首先需要做的是选择你需要发送回远程库的文件。使用下面命令完成：
```
git add
```
接着在 Steve 目录新建一个文本文件，可以取一个好玩的名字 `pineapple.txt`。在这个文件里面随便写些你想写的内容，返回命令提示符，然后再次输入 `git status`。现在，你将看到这个文件以红色出现在标记 “untracked files” 下面。
```
On branch master
Your branch is up-to-date with 'origin/master'.
Untracked files:
  (use "git add ..." to include in what will be commited)
pineapple.txt
```