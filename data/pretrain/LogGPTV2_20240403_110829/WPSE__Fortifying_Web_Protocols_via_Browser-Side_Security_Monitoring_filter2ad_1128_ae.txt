Workshop (CSFW 2001), pages 82–96, 2001.
[11] M. Bugliesi, S. Calzavara, R. Focardi,
and
W. Khan. CookiExt: Patching the Browser against
Session Hijacking Attacks. Journal of Computer
Security, 23(4):509–537, 2015.
[12] M. Bugliesi, S. Calzavara, R. Focardi, W. Khan,
and M. Tempesta. Provably Sound Browser-Based
1506    27th USENIX Security Symposium
USENIX Association
Enforcement of Web Session Integrity. In Proceed-
ings of the IEEE 27th Computer Security Foun-
dations Symposium (CSF 2014), pages 366–380,
2014.
[13] S. Calzavara, R. Focardi, N. Grimm, and M. Maf-
fei. Micro-policies for web session security.
In
Proceedings of the 29th IEEE Computer Security
Foundations Symposium (CSF 2016), pages 179–
193, 2016.
[14] S. Calzavara, R. Focardi, M. Maffei, C. Schnei-
dewind, M. Squarcina,
and M. Tempesta.
Login-CSRF on Google due to SAML2.0 ﬂaws.
https://secgroup.dais.unive.it/login-
csrf-google-saml2-flaws/.
[15] S. Calzavara, R. Focardi, M. Maffei, C. Schnei-
dewind, M. Squarcina, and M. Tempesta. WPSE:
Fortifying Web Protocols via Browser-Side Secu-
rity Monitoring - Technical report.
https://
sites.google.com/site/wpseproject/.
[16] A. Czeskis, A. Moshchuk, T. Kohno, and H. J.
Wang. Lightweight Server Support for Browser-
Based CSRF Protection. In Proceedings of the 22nd
International World Wide Web Conference (WWW
2013), pages 273–284, 2013.
[17] D. Fett, R. K¨usters, and G. Schmitz. An Expressive
Model for the Web Infrastructure: Deﬁnition and
Application to the Browser ID SSO System. In Pro-
ceedings of the 35th IEEE Symposium on Security
and Privacy (S&P 2014), pages 673–688, 2014.
[18] D. Fett, R. K¨usters, and G. Schmitz. SPRESSO:
A Secure, Privacy-Respecting Single Sign-On Sys-
tem for the Web. In Proceedings of the 22nd ACM
Conference on Computer and Communications Se-
curity (CCS 2015), pages 1358–1369, 2015.
[19] D. Fett, R. K¨usters, and G. Schmitz. A Compre-
hensive Formal Security Analysis of OAuth 2.0. In
Proceedings of the 23rd ACM Conference on Com-
puter and Communications Security (CCS 2016),
pages 1204–1215, 2016.
[20] Google.
GSuite Administrator Help, Set up
SSO via a third party Identity provider. https:
//support.google.com/a/answer/6262987,
2018.
[21] W. D. Groef, D. Devriese, N. Nikiforakis, and
F. Piessens. FlowFox: a Web Browser with Flexible
and Precise Information Flow Control. In Proceed-
ings of the 19th ACM Conference on Computer and
Communications Security (CCS 2012), pages 748–
759, 2012.
[22] T. Groß, B. Pﬁtzmann, and A. Sadeghi. Browser
Model for Security Analysis of Browser-Based
In Proceedings of the 10th European
Protocols.
Symposium on Research in Computer Security (ES-
ORICS 2005), pages 489–508, 2005.
[23] T. Groß, B. Pﬁtzmann, and A. Sadeghi. Proving
a WS-Federation Passive Requestor Proﬁle with a
In Proceedings of the 2nd ACM
Browser Model.
Workshop On Secure Web Services, SWS 2005,
Fairfax, VA, USA, November 11, 2005, pages 54–
64, 2005.
[24] A. Guha, S. Krishnamurthi, and T. Jim. Using
Static Analysis for Ajax Intrusion Detection.
In
Proceedings of the 18th International Conference
on World Wide Web (WWW 2009), pages 561–570,
2009.
[25] D. Hardt. The OAuth 2.0 Authorization Frame-
work. http://tools.ietf.org/html/rfc6749,
2012.
[26] D. Hedin, L. Bello, and A. Sabelfeld. Information-
ﬂow Security for JavaScript and its APIs. Journal
of Computer Security, 24(2):181–234, 2016.
[27] W. Li and C. J. Mitchell. Security Issues in OAuth
In Proceedings of the
2.0 SSO Implementations.
17th International Conference in Information Se-
curity (ISC 2014), pages 529–541, 2014.
[28] W. Li and C. J. Mitchell. Analysing the Security of
Google’s Implementation of OpenID Connect. In
Proceedings of the 13th International Conference
on Detection of Intrusions and Malware, and Vul-
nerability Assessment (DIMVA 2016), pages 357–
376, 2016.
[29] J. Ligatti, L. Bauer, and D. Walker. Edit Automata:
Enforcement Mechanisms for Run-Time Security
Policies. International Journal of Information Se-
curity, 4(1-2):2–16, 2005.
[30] K. Ludwig.
Duo Finds SAML Vulnerabil-
Implementations.
Affecting Multiple
ities
https://duo.com/blog/duo-finds-saml-
vulnerabilities-affecting-multiple-
implementations, 2018.
[31] C. Mainka, V. Mladenov, J. Schwenk, and T. Wich.
SoK: Single Sign-On Security–An Evaluation of
OpenID Connect. In Proceedings of the 2nd IEEE
European Symposium on Security and Privacy (Eu-
roS&P 2017), pages 251–266, 2017.
USENIX Association
27th USENIX Security Symposium    1507
[32] N. Nikiforakis, W. Meert, Y. Younan, M. Johns,
and W. Joosen. SessionShield: Lightweight Pro-
tection against Session Hijacking. In Proceedings
of the 3rd International Symposium on Engineering
Secure Software and Systems (ESSoS 2011), pages
87–100, 2011.
[33] OASIS.
Proﬁles for the OASIS Security As-
(SAML) V2.0.
sertion Markup
http://docs.oasis-open.org/security/
saml/v2.0/saml-profiles-2.0-os.pdf, 2005.
Language
[34] OASIS.
Security Assertion Markup Language
(SAML) v2.0. https://www.oasis-open.org/
standards#samlv2.0, 2005.
[35] OASIS.
Bindings for
the OASIS Security
(SAML) V2.0.
Assertion Markup Language
http://www.oasis-open.org/committees/
download.php/56779/sstc-saml-bindings-
errata-2.0-wd-06.pdf, 2015.
[36] V. Rajani, A. Bichhawat, D. Garg, and C. Hammer.
Information Flow Control for Event Handling and
the DOM in Web Browsers. In Proceedings of the
28th IEEE Computer Security Foundations Sympo-
sium (CSF 2015), pages 366–379, 2015.
[37] M. D. Ryan and B. Smyth. Applied Pi Calculus. In
Formal Models and Techniques for Analyzing Secu-
rity Protocols, chapter 6. IOS Press, 2011.
[38] P. D. Ryck, L. Desmet, W. Joosen, and F. Piessens.
Automatic and Precise Client-Side Protection
against CSRF Attacks. In Proceedings of the 16th
European Symposium on Research in Computer Se-
curity (ESORICS 2011), pages 100–116, 2011.
[39] P. D. Ryck, N. Nikiforakis, L. Desmet, F. Piessens,
and W. Joosen. Serene: Self-Reliant Client-Side
Protection against Session Fixation. In Proceedings
of the 2012 Distributed Applications and Interop-
erable Systems - 12th IFIP WG 6.1 International
Conference, DAIS 2012, pages 59–72, 2012.
[40] F. B. Schneider. Enforceable Security Policies.
ACM Transactions on Information and System Se-
curity, 3(1):30–50, 2000.
[41] J. Somorovsky, A. Mayer, J. Schwenk, M. Kamp-
mann, and M. Jensen. On Breaking SAML: Be
In Proceedings of the
Whoever You Want to Be.
21th USENIX Security Symposium, pages 397–412,
2012.
[42] B. Stock and M. Johns. Protecting users against
XSS-based password manager abuse. In Proceed-
ings of the 9th ACM Asia Conference on Informa-
tion, Computer and Communications Security (Asi-
aCCS 2014), pages 183–194, 2014.
[43] S. Sun and K. Beznosov. The Devil is in the (Im-
plementation) Details: An Empirical Analysis of
In Proceedings of the 19th
OAuth SSO Systems.
ACM Conference on Computer and Communica-
tions Security, (CCS’12), pages 378–390, 2012.
[44] S. Tang, N. Dautenhahn, and S. T. King. Fortifying
web-based applications automatically. In Proceed-
ings of the 18th ACM Conference on Computer and
Communications Security (CCS 2011), pages 615–
626, 2011.
[45] S. Van Acker, D. Hausknecht, and A. Sabelfeld.
In Proceed-
Measuring Login Webpage Security.
ings of 32nd ACM Symposium on Applied Comput-
ing (SAC 2017), pages 1753–1760, 2017.
[46] R. Wang, S. Chen, and X. Wang. Signing Me
onto Your Accounts through Facebook and Google:
A Trafﬁc-Guided Security Study of Commercially
In Pro-
Deployed Single-Sign-On Web Services.
ceedings of the 33rd IEEE Symposium on Security
and Privacy (S&P 2012), pages 365–379, 2012.
[47] R. Wang, Y. Zhou, S. Chen, S. Qadeer, D. Evans,
and Y. Gurevich. Explicating SDKs: Uncover-
ing Assumptions Underlying Secure Authentica-
In Proceedings of the
tion and Authorization.
22th USENIX Security Symposium, pages 399–314,
2013.
[48] R. Yang, G. Li, W. C. Lau, K. Zhang, and P. Hu.
Model-based Security Testing: An Empirical Study
on OAuth 2.0 Implementations. In Proceedings of
the 11th ACM Asia Conference on Computer and
Communications Security (AsiaCCS 2016), pages
651–662, 2016.
[49] D. Yu, A. Chander, N. Islam, and I. Serikov.
JavaScript Instrumentation for Browser Security. In
Proceedings of the 34th ACM Symposium on Prin-
ciples of Programming Languages (POPL 2007),
pages 237–249, 2007.
[50] Y. Zhou and D. Evans. SSOScan: Automated Test-
ing of Web Applications for Single Sign-On Vul-
In Proceedings of the 23rd USENIX
nerabilities.
Security Symposium, pages 495–510, 2014.
1508    27th USENIX Security Symposium
USENIX Association
A Sample XML Speciﬁcation
Figure 5 shows the XML speciﬁcation of the OAuth 2.0
automaton in Figure 2. The protocol is enclosed within
 tags and describes the ﬂow as a sequence
of requests and responses. For every message we detail
its pattern, possibly specifying the endpoint and a list of
parameters for requests or a list of headers for responses.
Identiﬁers can be introduced in the protocol ﬂow spec-
iﬁcation by adding the id attribute to the tag of the mes-
sage component of interest. Additional identiﬁers can
be deﬁned within  tags, where the value
that is associated to the new identiﬁer is the part of the
 matching the regular expression .
If the regular expression contains a capturing group, de-
noted by parenthesis, only the string matching the group
is selected. The syntax ${id} can be used to refer to the
value bound to the identiﬁer id.
Security policies are deﬁned within  and
 tags. The secrecy policy speciﬁes that the
value in  must be sent only to the enumerated
origins. The integrity policy speciﬁes that the value in
 must match the content of , which
can possibly be a regular expression.
USENIX Association
27th USENIX Security Symposium    1509
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
 https://accounts\.google\.com/o/oauth2/(?:.*?/)?auth 
 code 
 https://accounts\.google\.com/o/oauth2/(?:.*?/)?auth 
 [^\s]{40,} 
 ${req_init_redirect_uri} 
 ^(https?://.*?)(?:\?|$) 
 ${req_init_redirect_uri} 
 ^(https?://.*?/).* 
 ${resp_init_location} 
 [?&amp;]code=(.*?)(?:&amp;|$) 
 ${authcode} 
 ${origin} 
 https://accounts.google.com/ 
 ${uri2} 
 ${uri1} 
Figure 5: XML speciﬁcation for the automaton in Figure 2.
1510    27th USENIX Security Symposium
USENIX Association