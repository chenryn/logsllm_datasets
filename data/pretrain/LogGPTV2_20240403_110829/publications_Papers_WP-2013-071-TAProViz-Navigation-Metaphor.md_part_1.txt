**Cardoso, J.; Jablonski, S., and Volz, B. A Navigation Metaphor to Support Mobile Workflow Systems. In BPM 2013 Workshops, pages 537-548, Springer, 2013.**

**A Navigation Metaphor to Support Mobile Workflow Systems**

**Jorge Cardoso¹², Stefan Jablonski³, and Bernhard Volz³**

¹ Karlsruhe Service Research Institute, Karlsruhe Institute of Technology, Karlsruhe, Germany  
² CISUC/Dept. Informatics Engineering, University of Coimbra, Coimbra, Portugal  
³ Database and Information Systems Group, University of Bayreuth, Bayreuth, Germany

{stefan.jablonski,bernhard.volz}@uni-bayreuth.de

**Abstract:**
Mobile devices have enabled the development of a new generation of enterprise solutions. Companies such as Oracle, SAP, and IBM are offering mobile clients (e.g., ERP, BI, CRM) for iPhone and Android devices. However, in the field of workflow management systems (WfMS), progress has not adequately supported mobile workers. This paper explores how metaphors can be used to drive the development of mobile workflow systems. Our approach relies on the use of the TomTom metaphor to establish an isomorphism between car navigation systems and WfMS. Based on this isomorphism, we used the Technology Acceptance Model (TAM) to provide an initial validation of our approach. The positive results led us to implement an early prototype to serve as a proof of concept and to identify important requirements, such as context information.

**Keywords:** Metaphors, workflow management, navigation systems, mobile workers, process models.

**1. Introduction**
Over the past decade, substantial progress has been made in the development of workflow management systems (WfMS). However, mobility has often been overlooked, with systems primarily confined to organizational 'firewalls'. Major enterprise systems like IBM WebSphere MQ Workflow, Oracle BPM Suite, and SAP NetWeaver BPM function within hermetic organizational ecosystems [1].

To address this gap in mobility, our approach involves finding a metaphor to derive new paradigms for WfMS that support mobile workers. The importance of metaphors in system development has long been recognized as a catalyst for the success of information systems [9]. We argue that using a TomTom-like interface will encourage users to transfer their knowledge of this familiar system to the operation of mobile workflow management systems, thereby easing understanding of their structure and functionality [8]. Specifically, we explore the familiar features of car navigation systems as a catalyst to foster process navigation by establishing an analogy between road networks and the graph structure of a process. For example, we map the well-known situation of driving into a dead-end road to the existence of a logical deadlock in a process instance. The need for more TomTom-like functionalities for WfMS to make systems more user-friendly was first identified in [12]. Many mappings between TomTom and workflow management systems can be derived, such as creating interpretations of traffic symbols in the context of workflow management, some of which will be shown in Section 2.1. It became clear that it was beneficial to think about metaphors rather than simply following the traditional approach of creating formal requirements specifications [15].

To better convey our goal, Figure 1 shows a mockup of a car navigation system adapted to include several information elements related to process models and instances (labeled 1-5) instead of travel and trip information. We contend that symbolism holds the promise of developing a new wave of workflow systems [8]. In this particular example, the name of the highway, at the top of the figure and marked with (1), was replaced by the name of the currently executing process and its process identifier (i.e., 'Request Quote' and 'P3'); the number of remaining kilometers to reach the destination was replaced by a process Key Performance Indicator (KPI) (see label (2)); label (3) indicates the expected completion time of the instance; the speedometer was replaced by the current cost of the process (see label (4)); and label (5) marks a road selection in a highway, indicating a path selection (i.e., an XOR-split) in the process model. Naturally, the design of a high-fidelity prototype for the mockup in Figure 1 would not include all graphical elements. For example, the skyline may not find a correspondence in mobile workflow applications.

**Figure 1.** The use of the car navigation metaphor to inspire process model navigation.

This paper is structured as follows. Section 2 describes an isomorphism between the elements present in car navigation systems and workflow systems. Section 3 describes the use of the Technology Acceptance Model [4] to provide an initial validation of our approach. Section 4 describes the implementation of a running prototype that serves as a proof of concept for the metaphor. Section 5 provides related work in this field. Finally, Section 6 presents our conclusions.

**2. Process Model Navigation**
Most traditional process models are based on a graph-based representation to specify how a business process or workflow operates. Let us use Petri nets to model processes. The question is, "How can we establish an analogy between a Petri net and a geographic map in the context of a car navigation metaphor?" We established the following fundamental mappings:
- Process models correspond to geographic maps.
- Process instances correspond to moving vehicles.
- Process places correspond to route sections and intersections.
- Process transitions correspond to routes.

In other words, a process model (i.e., a graph) that links places with transitions, defining a more or less ordered pattern, can be described in terms of a network of streets, roads, and highways. Two streets are linked if the transitions they represent lead to the same place. Since processes are essentially planar structures, the corresponding route network has a two-dimensional structure. We use the term "route" as an abstraction concept to refer to a street, highway, road, etc.

By analyzing the features that can be implemented for process navigation using a car navigation metaphor, we created a taxonomy of three important concepts to be considered: topology, connectivity, and landmarks.

**2.1 Topology**
The topology, or structure, of a process contains specific elements (such as splits and joins) that can find a mapping counterpart in a car navigation metaphor. Using the workflow patterns identified in [13] as a starting point, we analyze how they can be matched to a split road, a road junction, a traffic light, a dead end, a roundabout, and the notion of distance.

- **Split Road:** An exclusive choice (XOR-split) and a multi-choice (OR-split) can be represented with a split road, i.e., a point where a flow of traffic splits. See Figure 2.a for a possible road sign to use to represent a process split. A parallel split (AND-split) can be represented with various parallel lanes running in the same direction (see Figure 1, label (5)).
- **Road Junction:** The process synchronization pattern (AND-join) and the simple merge (XOR-join) can both be represented with a road junction, i.e., a place where two or more roads meet.
- **Traffic Light:** The structured synchronizing merge (OR-join sync) can be effectively illustrated with a traffic light. When an instance stops at a traffic light, users can immediately understand that a synchronization point has been reached (see Figure 2.b).
- **Dead End:** A process with a deadlock, i.e., a situation where an instance cannot continue to be executed, can be made graphically visible in a navigation system using the road dead-end sign (see Figure 2.c).
- **Roundabout:** Many cyclic process models include small repetitive cycles for error checking or quality improvements. These small cycles composed of a few transitions can be made explicit and represented using a roundabout sign (see Figure 2.d).
- **Distance:** Route networks are spatially extended webs. It is possible to work with two types of distance measures: topological and geometrical. Topological route length is computed from the number of nodes (i.e., transitions or places) of a path, while the geometrical length is the sum of the lengths of all transitions of a path.

**Figure 2.** Using road signs to express process and instance structures and behaviors.

**2.2 Connectivity**
Connectivity explores process transitions (i.e., tasks) that connect places. In geographical maps, connectivity is expressed using streets, avenues, highways, walking paths, etc. Routes can be used to portray the static nature of process models and the dynamic behavior of process instances. For example:

- **Route Type:** The frequency with which a transition is executed in the context of a process instance or in the context of several instances can be represented using different types of routes. For example, a transition that is rarely executed can be represented using a dirt road; a transition with an average number of invocations can be represented with a lane; and a highway can be used to indicate frequently executed transitions.
- **Route Failure:** Often, a process transition can stop functioning due to an underlying problem in the information system that supports it (e.g., database failure, incorrect login/password, Web service invocation error, etc.). In such a case, the failure can be illustrated in real-time as a route being interrupted by landslides.
- **Multiple Lanes:** The workflow parallel split pattern (i.e., an AND-split) introduces the concurrent execution of two or more instances that were split at some point. This concurrent execution can be visualized using additional routes that are parallel to the one followed by an instance.
- **Route Names:** Since routes represent transitions, a route inherits its name from the transition it represents (see Figure 1, label (1)). This is static information associated with a process model, rather than with dynamic instances.
- **Route Duration/Cost:** For the duration of routes (i.e., transitions), the research done in the context of Workflow QoS (Quality of Service) [2] can be applied to enable each route to have a duration model. Quantitatively, the elapsed time or remaining duration of a route can be mapped to a concept similar to the physical distance in kilometers.

In these five examples, transitions and routes represent the static nature of design-time processes, while route characteristics represent the dynamic nature of process instances.

**2.3 Landmarks**
In a map, some aspects are more relevant than others. For example, Points of Interest (POI) indicate places worth visiting. The notion of a landmark brings the notion of frequency, clustering, and containment for process navigation.

- **Frequency:** To express the importance of a place that is often visited by process instances, a POI can be used. For example, an airport can illustrate a busy place where many instances flow.
- **Clustering:** Navigation maps identify areas that aggregate similar elements. For example, a city clusters similar roads (usually streets). Similarly, the elements of a process can also be clustered based on the similarity of transitions. The size of clusters can then be represented differently to express their relevance.
- **Containment:** Processes are often built by relying on subprocesses, which define containment relationships. The notion of a process containing subprocesses, which in turn contain yet another subprocess, can be expressed using a linear hierarchy of city → town → village or alternatively, country → state → county. As instances 'travel' from a process to a subprocess, the navigation system can change the visualization context.

Implementing frequency, clustering, and containment using a semantic layer of information can provide environments characterized by intuitive clues (e.g., POI, cities, and towns) to the static and dynamic structure of processes.

**2.4 Limitations**
On the one hand, the use of metaphors has the advantage of enabling users to reapply the knowledge they already have from a domain. On the other hand, a metaphor might involve the danger that it does not go far enough and that certain characteristics cannot be well supported. For example, while Section 2.1 suggests multiple lanes to be interpreted as a parallel split, the analogy may be hard to understand and implement. Since there are multiple lanes, one needs to be selected. It is not possible to drive on multiple lanes in parallel. One solution can be to duplicate the "car" in different lanes simultaneously. Naturally, this scenario does not typically happen in real life. In a parallel split, the need to represent activities executing asynchronously is also a requirement.

To reduce complexity, navigation can be combined with process view mechanisms to enable, e.g., zooming in/out by aggregating/removing parts of the process. Similarly, views can be used to provide personalized versions of a process, omitting activities not relevant to the current "driver" (see Section 2.3).

**3. Prevalidation of the Approach**
The validation of the proposed process model navigation metaphor, as with most information systems, can be subdivided into prevalidation, primary validation, and postvalidation. In this paper, we will focus on prevalidation. This first phase is carried out before implementing any prototype or running system [3].

We used the Technology Acceptance Model (TAM) [4] for empirically prevalidating the navigation metaphor. TAM has been successfully used in many studies for over two decades to test the potential adoption of new information systems by end users. Despite the fact that several other models have also been proposed to predict the future use of a system, TAM has captured the most attention from the information systems community.

TAM suggests that perceived usefulness (PU) and perceived ease of use (PEOU) are beliefs about a new technology that influence an individual’s attitude toward use (ATU) of that technology. In addition, the model postulates that the attitude toward using a new technology has a mediating effect on behavioral intention (BI) to use.

TAM uses a survey method to inquire end users about their perception levels (see Sections 3.1 and 3.2). Afterwards, survey data is collected (Section 3.3) and descriptive and inferential analysis techniques are performed, typically using software packages for statistical analysis such as SPSS or SAS (Section 3.4). The final step is to interpret statistical results to determine if a constructed model can predict that a new technology will be adopted, or not, by end users (Section 3.4).

**3.1 Instrument Development**
We constructed a survey (presented in Table 1) to measure perception levels. The table lists the four general constructs (PU, PEOU, ATU, and BI) and the 13 items/questions that were part of the survey. These items were recommended by...