        /var/ossec/etc/shared/system_audit_rcl.txt
        /var/ossec/etc/shared/cis_debian_linux_rcl.txt
        /var/ossec/etc/shared/cis_rhel_linux_rcl.txt
        /var/ossec/etc/shared/cis_rhel5_linux_rcl.txt
/var/ossec/etc/shared/rootkit_files.txt文件中包含了rootkit常用的文件。
/var/ossec/etc/shared/rootkit_trojans.txt文件中检测一些二进制文件的特征。
后面主要是检测系统配置。
测试：
server：192.168.192.193
agent：192.168.192.196
根据上述检测原理第一条，我们在192.168.192.196下创建文件/tmp/mcliZokhb
然后在Server端执行
    [root@localhost ossec]# ./bin/agent_control -r -u 1028
    OSSEC HIDS agent_control: Restarting Syscheck/Rootcheck on agent: 1028
当扫描完成后，Syscheck last started和Rootcheck last started的时间会更新。
    [root@localhost rootcheck]# /var/ossec/bin/agent_control -i 1028
    OSSEC HIDS agent_control. Agent information:
       Agent ID:   1028
       Agent Name: 192.168.192.196
       IP address: any/0
       Status:     Active
       Operating system:    Linux localhost 2.6.32-431.el6.x86_64 #1 SMP Fri Nov 22 03:15:09 UTC 2013 x86_64
       Client version:      OSSEC HIDS v2.9.0 / 2d13fc898c1b864609180ad7f4512b4c
       Last keep alive:     Thu Jul 13 14:11:25 2017
       Syscheck last started  at: Thu Jul 13 14:05:27 2017
       Rootcheck last started at: Thu Jul 13 13:55:00 2017
来看一下/var/ossec/queue/rootcheck下的内容
    [root@localhost rootcheck]# cat \(192.168.192.196\)\ any-\>rootcheck
    !1499925300!1499150323 Starting rootcheck scan.
    !1499925927!1499150951 Ending rootcheck scan.
    !1499925300!1499925300 Rootkit 'Bash' detected by the presence of file '/tmp/mcliZokhb'.
其中扫描开始时间为1499925300（2017/7/13 13:55:0），扫描结束时间为1499925927（2017/7/13 14:5:27）
然后在1499925300（2017/7/13 13:55:0），检测到了Rootkit。
然后查看ALert日志中的告警信息
    [root@localhost rootcheck]# cat /var/ossec/logs/alerts/alerts.log
    ** Alert 1499925300.0: mail  - ossec,rootcheck,
    2017 Jul 13 13:55:00 (192.168.192.196) any->rootcheck
    Rule: 510 (level 7) -> 'Host-based anomaly detection event (rootcheck).'
    Rootkit 'Bash' detected by the presence of file '/tmp/mcliZokhb'.
PS：
1）部署后，发现经常会收到进程隐藏的告警，经排查服务器也不存在异常。
    Process ‘25905’ hidden from /proc. Possible kernel level rootkit.
添加规则rules/ossec_rules.xml
         510
         hidden from /proc
         Ignored process hidden entries.
         rootcheck,
屏蔽掉该告警。
2）因为OSSEC会检测属主是Root但是Other用户有w权限的文件，有些正常业务的文件会导致误报。
添加规则rules/ossec_rules.xml
         510
         /usr/local/fms
         Ignored some files which owned by root and has write permissions.
         rootcheck,
屏蔽掉这些目录。
### **4）联动配置**
主动响应分为两部分，第一步需要配置需要执行的脚本，第二步需要绑定该脚本到具体的触发规则。/var/ossec/etc/ossec.conf中相应配置如下：
Command配置参数如下：
  * name
对应active-response所使用的名称
  * executable
/var/ossec/active-response/bin中的可执行文件，不需要写全路径。
  * expect
命令执行的参数，选项可以是srcip和user（其他的名不接受）. 如果expect标签内的值为空，那么传递-代替真实的值。如果一个响应脚本需要srcip，那么它必须在expect选项中。
如果不需要传递参数值，写``即可。
  * timeout_allowed
指定该命令是否支持超时。
active-response配置参数如下：
  * disabled
如果设置为yes，则禁用主动响应，默认为启用。
  * command
需要执行的脚本的名称，对应command标签中的name。
  * location
在哪里执行命令，具体参数如下：
  * local: 产生该事件的agent
  * server: 在server端
  * defined-agent: 指定一个agent，需要配置agent id
  * all: 所有agent
  * agent_id
需要执行脚本的agent的ID
  * level
大于等于该level的event将执行该响应
  * rules_group
响应将在已定义的组中的任何事件上执行。可以用逗号分隔多个组。
  * rules_id
响应将在任何带有已定义ID的事件上执行。可以用逗号分隔多个ID。
  * timeout
以封禁IP为例，指定IP封禁的时间（单位为秒）。
这里我们来测试一下：
    Server：192.168.192.193
    Client（ID:1029）192.168.192.195
    Client（ID:1028） 192.168.192.196
首先看一下SSH登录失败的日志为：
    Jul  6 15:15:57 localhost sshd[28590]: Failed password for root from 192.168.192.196 port 34108 ssh2
所对应的decode.xml中的解码规则为：
      sshd
      ^Failed \S+ 
      ^for (\S+) from (\S+) port \d+ \w+$
      user, srcip
这里通过正则表达式获取到了user和srcip
所对应的Rule在sshd_rules.xml中，可以看到告警等级为5：
        5700
        ^Failed|^error: PAM: Authentication
        SSHD authentication failed.
        authentication_failed,
查看ossec.conf，这里我们添加如下：
        test
        local
        5
        60
所对应的执行脚本名称为test，脚本为本地执行，当rule级别大于等于5时触发，封禁时间为60S。
所对应的command配置为
        test
        test.sh
        srcip,user
        yes
这里传递了两个参数srcip,user（前后顺序不影响）。所对应的是ssh-failed解码规则中取到的user和srcip。
/var/ossec/active-response/bin/test.sh文件内容为
    #!/bin/sh
    LOCAL=`dirname $0`;
    cd $LOCAL
    cd ../
    PWD=`pwd`
    echo "`date` $0 $1 $2 $3 $4 $5" >> ${PWD}/../logs/active-responses.log
脚本所传递的参数如下：
    $1 动作 (delete or add)
    $2 user (or – if not set)
    $3 srcip (or – if not set)
    $4 时间戳
    $5 规则号
修改权限和属组
    [root@localhost bin]# chown root:ossec test.sh
    [root@localhost bin]# chmod 550 test.sh
然后在192.168.192.196使用错误密码登录192.168.192.193，触发规则，查看日志
    [root@localhost ossec]# tail -f logs/active-responses.log
    Thu Jul  6 17:07:02 CST 2017 /var/ossec/active-response/bin/test.sh add root 192.168.192.196 1499332022.14278 5503
    Thu Jul  6 17:08:32 CST 2017 /var/ossec/active-response/bin/test.sh delete root 192.168.192.196 1499332022.14278 5503
然后我们再用OSSEC自带的host-deny脚本测试一下。
        host-deny
        host-deny.sh
        srcip
        yes
        host-deny
        local
        5
        30
这里`local`，即仅在触发该规则的Agent有效。
然后我使用另外一台机器192.168.192.120使用错误密码登录192.168.192.196
触发规则后查看hosts.deny发现已经添加了IP192.168.192.120
    [root@localhost ossec]# cat /etc/hosts.deny  | grep 120
    ALL:192.168.192.120
## 0x03 SaltStack批量部署Agent
在企业内部有各种运维工具有用批量管理服务器，例如SaltStack、ansible等。这里我以SaltStack为例。批量部署这里面临两个问题：
1）install.sh安装交互问题
OSSEC安装为交互式安装，需要手工输入Server端地址，是否开启一些模块等。解决办法是配置preloaded-vars.conf
    [root@localhost ossec-hids-2.9.0]# cp etc/preloaded-vars.conf.example etc/preloaded-vars.conf
修改preloaded-vars.conf中的配置即可。最终配置如下：
    [root@test135 etc]# cat preloaded-vars.conf | grep -v "^#" | grep -v "^$"
    USER_LANGUAGE="cn"     # For english
    USER_NO_STOP="y"
    USER_INSTALL_TYPE="agent"
    USER_DIR="/var/ossec"
    USER_ENABLE_ACTIVE_RESPONSE="y"
    USER_ENABLE_SYSCHECK="y"
    USER_ENABLE_ROOTCHECK="y"
    USER_AGENT_SERVER_IP="10.111.111.111"
2）Key认证问题
新版本的OSSEC中ossec-authd和agent-auth提供了自动化导入Key的功能。
ossec-authd：
os-authd守护进程运行在服务端，自动分发Key和添加Agent。
默认情况下，该过程中不存在任何身份验证或授权，因此建议只在添加新代理时运行该守护进程。
ossec-authd进程需要SSL keys才行运行。
如果没有SSL Keys会提示以下错误：
    [root@localhost syscheck]# /var/ossec/bin/ossec-authd -p 1515
    2017/07/04 14:02:26 ossec-authd: INFO: Started (pid: 12764).
    2017/07/04 14:02:26 ossec-authd: ERROR: Unable to read certificate file (not found): /var/ossec/etc/sslmanager.cert
    2017/07/04 14:02:26 ossec-authd: ERROR: SSL error. Exiting.
生成SSL Keys
    [root@localhost syscheck]# openssl genrsa -out /var/ossec/etc/sslmanager.key 2048
    Generating RSA private key, 2048 bit long modulus
    .....+++
    ........+++
    e is 65537 (0x10001)
    [root@localhost syscheck]# openssl req -new -x509 -key /var/ossec/etc/sslmanager.key -out /var/ossec/etc/sslmanager.cert -days 365
    You are about to be asked to enter information that will be incorporated
    into your certificate request.
    What you are about to enter is what is called a Distinguished Name or a DN.
    There are quite a few fields but you can leave some blank
    For some fields there will be a default value,
    If you enter '.', the field will be left blank.
    -----    
    Country Name (2 letter code) [XX]:
    State or Province Name (full name) []:
    Locality Name (eg, city) [Default City]:
    Organization Name (eg, company) [Default Company Ltd]:
    Organizational Unit Name (eg, section) []:
    Common Name (eg, your name or your server's hostname) []:
    Email Address []: