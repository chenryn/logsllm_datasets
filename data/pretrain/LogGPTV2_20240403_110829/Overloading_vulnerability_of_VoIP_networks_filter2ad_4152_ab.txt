### Overloading Defense Mechanism for SIP-Based VoIP Networks

#### Introduction
Controlling the source of traffic is the most intuitive and effective method for overload protection. Variants of this cooperative defense mechanism, such as traceback [9], [16], [18], pushback [5], and Pi [19], require modifications to the core of the Internet. However, Internet Service Providers (ISPs) are reluctant to implement these changes without compelling reasons or incentives. Consequently, these mechanisms have limited real-world applicability. There are several IETF working drafts [4], [14] proposing overloading indicators by introducing new headers, but these methods are more suitable for trusted core network elements.

This paper focuses on overloading conditions due to numerous SIP endpoints distributed over the Internet. While there are many academic efforts [10], [17] to detect and protect VoIP networks from DDoS attacks, flash crowds remain largely overlooked. The real-time and essential nature of telephony services make them different from other regular Internet-based services. Therefore, common overload protection mechanisms like request rate throttling, random dropping of requests, and blackholing are not appropriate for telephony services. Detecting and distinguishing between an INVITE surge that differs only in intent is a non-trivial task and sets an ambitious goal.

#### Overview of Our Approach
Figure 1 provides an overview of our overloading defense mechanism, which consists of three steps:
1. **Detection and Distinguishing Overloading Conditions**: We propose an Anomaly Detection Sensor (ADS) based on the observation that despite the unpredictable and bursty nature of packet-level Internet traffic, transaction-like VoIP signaling traffic generated by the SIP protocol maintains inherent attribute correlations. DDoS attacks and flash crowds, while similar in the number of INVITEs and message structure, exhibit different traffic patterns.
2. **Response Strategies**: Different response strategies are invoked based on the detected pattern. In a DDoS attack, INVITE messages are blocked, assuming most INVITEs belong to attack traffic. In a flash crowd, a probabilistic INVITE dropping technique is used to increase the likelihood that legitimate users will eventually be served.
3. **Feedback and Rectification**: After applying an overloading control, we observe changes in callers' behavior. Entropy measurement of call durations helps distinguish between human and bot-generated call behavior. This step is periodic and aims to identify mimicry attacks and possible mutations in the overloading attack.

#### Organization of the Paper
- **Section II**: Examples of SIP-related overloading threats.
- **Section III**: Description of VoIP signaling traffic behavior and simulated network topology.
- **Section IV**: Definition of Hellinger distance and its application to VoIP signaling traffic streams for detecting overloading conditions.
- **Section V**: Detailed description of overloading prevention mechanisms.
- **Section VI**: Use of entropy measurement of call duration to detect DDoS attacks masquerading as flash crowds.
- **Section VII**: Conclusion.

#### Threat Model
The Session Initiation Protocol (SIP) [15] is a transactional protocol where each transaction consists of a request and its corresponding responses. SIP entities maintain transaction states for some time. For example, a SIP proxy maintains an INVITE transaction state as long as there is a provisional response within every 3 minutes. Similarly, when a User Agent Server (UAS) accepts an INVITE request, it generates a 2XX response and waits for the ACK while maintaining the transaction state. If the UAS retransmits the 2XX response for 64 * T1 seconds (default value of timer T1 is 500 ms) without receiving an ACK, the session should be terminated by sending a BYE message. The finite capacity of maintaining transaction states can be exploited by flooding with spurious requests. Although IP telephony is not an open-access system like websites, it is still possible to launch DDoS attacks. Examples include misbehavior of authenticated users, exploiting digest weaknesses, replay of pre-recorded INVITE messages, and bot-generated bogus copies of INVITE messages.

#### VoIP Signaling Traffic Behavior
We conducted extensive statistical analysis to profile the normal behavior of SIP protocol attributes in VoIP signaling traffic obtained from a realistic VoIP testbed. Protocol attributes include message types such as INVITE, 200 OK, ACK, and BYE. We discuss the inherent correlation among these attributes at the application layer.

##### Experiment Setup
To study VoIP signaling traffic behavior, we built a testbed consisting of a SIP proxy server and IP-based soft-phones. The testbed includes eight PCs equipped with Linux operating systems acting as SIP User Agents (UAs), a SIP proxy server, a router with a wide area network emulator, and an attacker with an INVITE flood traffic generator. Figure 2(a) shows the layout of the testbed used to generate VoIP traffic and evaluate the performance of the proposed detection and protection mechanisms.

Our SIP proxy server is based on SER (SIP Express Router [6]), an open-source software project. We installed and deployed the SIP server onto a single PC (1.8 GHz Intel Pentium IV with 512 MB RAM). Enterprise networks A, B, C, and D are simulated by PCs (866 MHz Pentium II IPC with 256 MB RAM) equipped with SIP traffic generators. The talk time (i.e., call duration) between any two subscribers is exponentially distributed with a mean talk time of 120 seconds. The wide area network emulator ("NISTNet" [1]) connects the enterprise networks and SIP server using 100 Mbps Ethernet links. We set the Internet delay to 50 ms and the packet loss rate to 0.42% in our experiments.

##### Normal Behavior
Figure 2(c) plots the normal SIP traffic behavior as observed by the ADS near the SIP proxy server. The ADS monitors both to-and-fro signaling traffic between subscribers and the SIP proxy server. SIP signaling messages are carried by UDP, and UAs use the default T1 timer value of 500 ms. To emulate realistic normal call behavior, we assume Poisson-distributed phone call arrivals. In our experiments, we use three independent Poisson processes N1(t), N2(t), and N3(t) with mean arrival rates of 30, 30, and 15 calls per second (CPS), respectively. During an hour-long experiment, the initial and last 25 minutes represent day-time peak call rates, and the in-between 10 minutes represent off-peak hours.

##### Behavior Under Flash Crowd
Figure 3 plots the SIP session establishment behavior under flash crowds. During the initial 10 minutes, the SIP proxy server is loaded with a Poisson call rate (with a mean of 75 CPS). At the start of the 10th minute, additional call rates of 375, 400, and 425 CPS are introduced, bringing the overall call rate to 450, 475, and 500 CPS, respectively. The SIP proxy server shows remarkable resilience but degrades after maintaining a certain number of transaction contexts. This results in a sudden jump in INVITE and (200 OK) retransmissions by the SIP UAs, and existing INVITE transactions start timing out.

##### Behavior Under INVITE Flooding
Figure 4 plots the SIP session establishment behavior under a DDoS attack. At the start of the 10th minute, the initial Poisson call rate (with a mean of 75 CPS) is mixed with additional calls at rates of 50, 75, and 150 CPS with spoofed source IP addresses. The SIP proxy server initially tries to behave normally but quickly degrades due to resource exhaustion and processing delays. This results in an oscillatory behavior of recovery and degradation.

##### Difference Between Flash Crowd and DDoS Attack
The main difference between these two events lies in the nature (i.e., intent) of the INVITE requests, leading to different observable protocol behaviors. In a flash crowd, the proxy server tries to behave normally, and if the request arrivals remain unabated, the server's performance degrades after some time. In a DDoS attack, this happens much quicker, and the server resources are exhausted faster. Additionally, INVITE flooding attacks cause an oscillatory behavior of recovery and degradation, whereas in a flash crowd, the call throughput falls to zero and remains the same until the flash crowd subsides.

#### Step 1: Overloading Detection Mechanism
The ADS detects anomalies in collections of packet streams through a cyclic behavior consisting of two phases:
- **Training Phase**: The training dataset, consisting of the attribute set, is collected over n sampling periods of duration Î”t (10 sec) over normal traffic streams. This initial training dataset is assumed to be devoid of any attacks and acts as a base for comparison with the next (n+1)th period of the testing dataset.
- **Testing Phase**: Using the Hellinger distance, we measure the distance between the two datasets. If the measured distance exceeds a threshold, an alarm is raised; otherwise, the testing dataset is included in the immediately preceding (n-1) sampled traffic data to derive a new training dataset. The moving window mechanism helps the training dataset adapt to the dynamic nature of network traffic.

---

This revised version aims to provide a clear, coherent, and professional presentation of the content.