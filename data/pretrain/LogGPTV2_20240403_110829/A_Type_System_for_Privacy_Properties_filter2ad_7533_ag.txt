# Experimental Results

## Bounded Case
| Time (s) | Time (m) | Status |
|----------|----------|--------|
| 0.004    | 17       | TO     |
| 0.009    | 63       | TO     |
| 0.04     |          |        |
| 0.05     |          |        |
| 0.004    |          |        |
| 0.011    |          |        |
| 0.012    |          |        |
| 0.02     |          |        |
| 0.03     |          |        |
| 0.1      |          |        |
| 0.003    |          |        |
| 0.003    |          |        |
| 0.007    |          |        |
| 0.002    |          |        |
| x        |          |        |
| x        |          |        |
| x        |          |        |
| 0.05     | 28       | TO     |
| 0.4      |          | TO     |
| 3.6      |          | TO     |
| 0.03     |          |        |
| 0.4      |          |        |
| 1.4      |          |        |
| 46       | 71       | TO     |
| 0.1      | 20       | TO     |
| 2        |          | SO     |
| 0.16     | 33       | 11     |
| 2m12s    |          | SO     |
| TO       |          |        |
| BUG      | 0.1      | 2      |
| TO       |          |        |
| x        | 4        | BUG    |
| TO       |          |        |
| 0.009    | 0.4      | 1.9    |
| 5m31s    |          | TO     |
| 0.02     | 4        | 8      |
| 0.03     | 44       | 36     |
| 1.7      |          | SO     |
| 0.06     |          | BUG    |
| BUG      | 8        | 52     |
| MO       | 52       |        |
| MO       | 6        | 132    |
| MO       | 27       |        |
| MO       | 31       |        |
| x        |          |        |

**Figure 9: Experimental results for the bounded case**

## Unbounded Number of Sessions
| Protocol             | Helios  | Denning-Sacco | Needham-Schroeder-Lowe | ProVerif TypeEq |
|----------------------|---------|---------------|------------------------|-----------------|
| Time (s)             | 0.003   | 0.05          | 0.09                   | 0.05            |
| Time (s)             |         | 0.08          |                        |                 |

**Figure 10: Experimental results for unbounded numbers of sessions**

# Conclusion

We have presented a novel type system for verifying trace equivalence in security protocols. This system can be applied to various protocols, supporting else branches, standard cryptographic primitives, and both bounded and unbounded numbers of sessions. Our prototype implementation demonstrates the promise of this approach and opens the way to the development of an efficient technique for proving equivalence properties in even larger classes of protocols.

Several interesting problems remain to be studied. For example, ProVerif has limitations in handling global states. We plan to address this by enriching our types to express that an event is "consumed." Additionally, our current type system applies only to protocols \(P\) and \(Q\) with the same structure. One advantage of a type system is its modularity, allowing us to add rules without redoing the entire proof. We aim to extend the system to cover protocols with different structures (e.g., when branches are swapped). Another direction is the treatment of primitives with algebraic properties (e.g., Exclusive Or, or homomorphic encryption). Extending the type system and discharging the difficulty to the consistency of the constraints seems feasible and easier to handle. Finally, our type system is sound with respect to equivalence in a symbolic model. An interesting question is whether it also entails computational indistinguishability. We expect that the type system's modularity will allow us to discharge most of the difficulty to the constraints.

# Acknowledgments

This work has been partially supported by the European Research Council (ERC) under the European Union’s Horizon 2020 research (grant agreement No 645865-SPOOC).

# References

[1] Martín Abadi. 2000. Security Protocols and their Properties. In *Foundations of Secure Computation*, F Bauer and R Steinbriiggen (Eds.). NATO Science Series, Vol. for the 20th International Summer School on Foundations of Secure Computation held in Marktoberdorf Germany. IOS Press, 39–60.

[2] Martín Abadi and Cédric Fournet. 2001. Mobile Values, New Names, and Secure Communication. In *28th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL’01)*. ACM, 104–115.

[3] Martín Abadi and Cédric Fournet. 2004. Private Authentication. *Theoretical Computer Science* 322, 3 (2004), 427–476.

[4] Martín Abadi and Phillip Rogaway. 2000. Reconciling Two Views of Cryptography. In *International Conference on Theoretical Computer Science (IFIP TCS2000)*. Springer, 3–22.

[5] Ben Adida. 2008. Helios: Web-based Open-Audit Voting. In *17th USENIX Security Symposium (SS’08)*. USENIX Association, 335–348.

[6] Timos Antonopoulos, Paul Gazzillo, Michael Hicks, Eric Koskinen, Tachio Terauchi, and Shiyi Wei. 2017. Decomposition Instead of Self-Composition for Proving the Absence of Timing Channels. In *38th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2017*. ACM, 362–375.

[7] Myrto Arapinis, Tom Chothia, Eike Ritter, and Mark Ryan. 2009. Untraceability in the Applied Pi Calculus. In *1st International Workshop on RFID Security and Cryptography*. IEEE, 1–6.

[8] Myrto Arapinis, Tom Chothia, Eike Ritter, and Mark Ryan. 2010. Analysing Unlinkability and Anonymity Using the Applied Pi Calculus. In *2nd IEEE Computer Security Foundations Symposium (CSF’10)*. IEEE Computer Society Press, 107–121.

[9] Myrto Arapinis, Véronique Cortier, and Steve Kremer. 2016. When Are Three Voters Enough for Privacy Properties?. In *21st European Symposium on Research in Computer Security (ESORICS’16)* (Lecture Notes in Computer Science). Springer, Heraklion, Crete, 241–260.

[10] Alessandro Armando, David Basin, Yohan Boichut, Yannick Chevalier, Luca Compagna, Jorge Cuellar, Paul Hankes Drielsma, Pierre-Cyrille Héam, Olga Kouchnarenko, Jacopo Mantovani, Sebastian Mödersheim, David von Oheimb, Michaël Rusinowitch, Judson Santiago, Mathieu Turuani, Luca Viganò, and Laurent Vigneron. 2005. The AVISPA Tool for the automated validation of internet security protocols and applications. In *17th International Conference on Computer Aided Verification, CAV’2005* (Lecture Notes in Computer Science), Vol. 3576. Springer, Edinburgh, Scotland, 281–285.

[11] Michael Backes, Cătălin Hriţcu, and Matteo Maffei. 2008. Automated Verification of Remote Electronic Voting Protocols in the Applied Pi-Calculus. In *21st IEEE Computer Security Foundations Symposium (CSF ’08)*. IEEE Computer Society, Washington, DC, USA, 195–209.

[12] Michael Backes, Cătălin Hriţcu, and Matteo Maffei. 2014. Union, Intersection and Refinement Types and Reasoning About Type Disjointness for Secure Protocol Implementations. *Journal of Computer Security* 22, 2 (March 2014), 301–353.

[13] David Baelde, Stéphanie Delaune, and Lucca Hirschi. 2015. Partial Order Reduction for Security Protocols. In *26th International Conference on Concurrency Theory (CONCUR’15)* (LIPIcs), Vol. 42. Leibniz-Zentrum für Informatik, 497–510.

[14] Gilles Barthe, Cédric Fournet, Benjamin Grégoire, Pierre-Yves Strub, Nikhil Swamy, and Santiago Zanella Béguelin. 2014. Probabilistic Relational Verification for Cryptographic Implementations. In *41st Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’14)*. ACM, 193–206.

[15] Gilles Barthe, Benjamin Grégoire, and Santiago Zanella-Béguelin. 2009. Formal certification of code-based cryptographic proofs. In *36th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL 2009, Savannah, GA, USA, January 21-23, 2009*. ACM, 90–101.

[16] David Basin, Jannik Dreier, and Ralf Sasse. 2015. Automated Symbolic Proofs of Observational Equivalence. In *22nd ACM SIGSAC Conference on Computer and Communications Security (ACM CCS 2015)*. ACM, 1144–1155.

[17] Jesper Bengtson, Karthikeyan Bhargavan, Cédric Fournet, Andrew D. Gordon, and Sergio Maffeis. 2011. Refinement Types for Secure Implementations. *ACM Transactions on Programming Languages and Systems* 33, 2 (2011), 8:1–8:45.

[18] Nick Benton. 2004. Simple Relational Correctness Proofs for Static Analyses and Program Transformations. In *31st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL ’04)*. ACM, New York, NY, USA, 14–25.

[19] Bruno Blanchet. 2001. An Efficient Cryptographic Protocol Verifier Based on Prolog Rules. In *14th IEEE Computer Security Foundations Workshop (CSFW-14)*. IEEE Computer Society, Cape Breton, Nova Scotia, Canada, 82–96.

[20] Bruno Blanchet. 2016. Modeling and Verifying Security Protocols with the Applied Pi Calculus and ProVerif. *Foundations and Trends in Privacy and Security* 1, 1–2 (2016), 1–135.

[21] Bruno Blanchet, Martín Abadi, and Cédric Fournet. 2008. Automated Verification of Selected Equivalences for Security Protocols. *Journal of Logic and Algebraic Programming* 75, 1 (Feb.–March 2008), 3–51.

[22] Michele Boreale, Rocco de Nicola, and Rosario Pugliese. 2002. Proof Techniques for Cryptographic Processes. *SIAM J. Comput.* 31, 3 (2002), 947–986.

[23] Michele Bugliesi, Stefano Calzavara, Fabienne Eigner, and Matteo Maffei. 2011. Resource-Aware Authorization Policies for Statically Typed Cryptographic Protocols. In *24th IEEE Computer Security Foundations Symposium (CSF ’11)*. IEEE Computer Society, Washington, DC, USA, 83–98.

[24] Michele Bugliesi, Stefano Calzavara, Fabienne Eigner, and Matteo Maffei. 2013. Logical Foundations of Secure Resource Management in Protocol Implementations. In *2nd International Conference on Principles of Security and Trust (POST 2013)*. Springer Berlin Heidelberg, Berlin, Heidelberg, 105–125.

[25] Michele Bugliesi, Stefano Calzavara, Fabienne Eigner, and Matteo Maffei. 2015. Affine Refinement Types for Secure Distributed Programming. *ACM Transactions on Programming Languages and Systems* 37, 4, Article 11 (Aug. 2015), 66 pages.

[26] Michele Bugliesi, Riccardo Focardi, and Matteo Maffei. 2004. Authenticity by Tagging and Typing. In *2004 ACM Workshop on Formal Methods in Security Engineering (FMSE ’04)*. ACM, New York, NY, USA, 1–12.

[27] Michele Bugliesi, Riccardo Focardi, and Matteo Maffei. 2005. Analysis of Typed Analyses of Authentication Protocols. In *18th IEEE Workshop on Computer Security Foundations (CSFW ’05)*. IEEE Computer Society, Washington, DC, USA, 112–125.

[28] Michele Bugliesi, Riccardo Focardi, and Matteo Maffei. 2007. Dynamic Types for Authentication. *Journal of Computer Security* 15, 6 (Dec. 2007), 563–617.

[29] Ştefan Ciobâcă, Dorel Lucanu, Vlad Rusu, and Grigore Rosu. 2016. A language-independent proof system for full program equivalence. *Formal Asp. Comput.* 28, 3 (2016), 469–497.

[30] Rohit Chadha, Stefan Ciobâcă, and Steve Kremer. 2012. Automated Verification of Equivalence Properties of Cryptographic Protocols. In *Programming Languages and Systems —21th European Symposium on Programming (ESOP’12)* (Lecture Notes in Computer Science), Vol. 7211. Springer, Tallinn, Estonia, 108–127.

[31] Vincent Cheval. 2014. APTE: an Algorithm for Proving Trace Equivalence. In *20th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS’14)* (Lecture Notes in Computer Science), Vol. 8413. Springer, Grenoble, France, 587–592.

[32] Vincent Cheval, Véronique Cortier, and Antoine Plet. 2013. Lengths May Break Privacy – or How to Check for Equivalences With Length. In *25th International Conference on Computer Aided Verification (CAV’13)* (Lecture Notes in Computer Science), Vol. 8043. Springer, St Petersburg, Russia, 708–723.

[33] John Clark and Jeremy Jacob. 1997. A Survey of Authentication Protocol Literature: Version 1.0. (1997).

[34] Hubert Comon-Lundh and Véronique Cortier. 2008. Computational Soundness of Observational Equivalence. In *15th ACM Conference on Computer and Communications Security (CCS’08)*. ACM Press, Alexandria, Virginia, USA, 109–118.

[35] Véronique Cortier, Stéphanie Delaune, and Antoine Dallon. 2017. SAT-Equiv: an efficient tool for equivalence properties. In *30th IEEE Computer Security Foundations Symposium (CSF’17)*. IEEE Computer Society Press.

[36] Véronique Cortier, Fabienne Eigner, Steve Kremer, Matteo Maffei, and Cyrille Wiedling. 2015. Type-Based Verification of Electronic Voting Protocols. In *4th International Conference on Principles of Security and Trust - Volume 9036*. Springer-Verlag New York, Inc., New York, NY, USA, 303–323.

[37] Veronique Cortier, Alicia Filipiak, Said Gharout, and Jacques Traore. 2017. Designing and Proving an EMV-compliant Payment Protocol for Mobile Devices. In *2nd IEEE European Symposium on Security and Privacy (EuroS&P’17)*. IEEE Computer Society, 467–480.

[38] Véronique Cortier, Niklas Grimm, Joseph Lallemand, and Matteo Maffei. 2017. A Type System for Privacy Properties (Technical Report). arXiv:1708.08340. (Aug. 2017). https://arxiv.org/abs/1708.08340

[39] Véronique Cortier, Niklas Grimm, Joseph Lallemand, and Matteo Maffei. 2017. TypeEQ. Source Code. (Aug. 2017). https://secpriv.tuwien.ac.at/tools/typeeq

[40] Véronique Cortier, Michaël Rusinowitch, and Eugen Zălinescu. 2006. Relating Two Standard Notions of Secrecy. Springer Berlin Heidelberg, 303–318.

[41] Véronique Cortier and Ben Smyth. 2011. Attacking and Fixing Helios: An Analysis of Ballot Secrecy. In *24th IEEE Computer Security Foundations Symposium (CSF’11)*. IEEE Computer Society Press, 297–311.

[42] Cas J. F. Cremers. 2008. The Scyther Tool: Verification, Falsification, and Analysis of Security Protocols. In *Computer Aided Verification, 20th International Conference, CAV 2008, Princeton, USA* (Lecture Notes in Computer Science), Vol. 5123/2008. Springer, 414–418.

[43] Jeremy Dawson and Alwen Tiu. 2010. Automating Open Bisimulation Checking for the Spi Calculus. In *23rd IEEE Computer Security Foundations Symposium (CSF 2010)*. IEEE Computer Society, 307–321.

[44] Stéphanie Delaune, Steve Kremer, and Mark D. Ryan. 2009. Verifying Privacy-type Properties of Electronic Voting Protocols. *Journal of Computer Security* 17, 4 (2009), 435–487.

[45] Fabienne Eigner and Matteo Maffei. 2013. Differential Privacy by Typing in Security Protocols. In *26th IEEE Computer Security Foundations Symposium (CSF ’13)*. IEEE Computer Society, Washington, DC, USA, 272–286.

[46] Riccardo Focardi and Matteo Maffei. 2011. Types for Security Protocols. In *Formal Models and Techniques for Analyzing Security Protocols*. Cryptology and Information Security Series, Vol. 5. IOS Press, Chapter 7, 143–181.

[47] Andrew D. Gordon and Alan Jeffrey. 2003. Authenticity by Typing for Security Protocols. *Journal of Computer Security* 11, 4 (July 2003), 451–519.

[48] Niklas Grimm, Kenji Maillard, Cédric Fournet, Cătălin Hriţcu, Matteo Maffei, Jonathan Protzenko, Tahina Ramananandro, Aseem Rastogi, Nikhil Swamy, and Santiago Zanella-Béguelin. 2017. A Monadic Framework for Relational Verification: Applied to Information Security, Program Equivalence, and Optimizations. arXiv:1703.00055. (July 2017). https://arxiv.org/abs/1703.00055

[49] Gavin Lowe. 1996. Breaking and Fixing the Needham-Schroeder Public-Key Protocol Using FDR. In *Tools and Algorithms for the Construction and Analysis of Systems (TACAS’96)* (Lecture Notes in Computer Science), Vol. 1055. Springer-Verlag, 147–166.

[50] Dorel Lucanu and Vlad Rusu. 2015. Program equivalence by circular reasoning. *Formal Asp. Comput.* 27, 4 (2015), 701–726.

[51] Matteo Maffei, Kim Pecina, and Manuel Reinert. 2013. Security and Privacy by Declarative Design. In *26th IEEE Computer Security Foundations Symposium (CSF ’13)*. IEEE Computer Society, Washington, DC, USA, 81–96.

[52] Simon Meier, Benedikt Schmidt, Cas Cremers, and David Basin. 2013. The TAMARIN Prover for the Symbolic Analysis of Security Protocols. In *Computer Aided Verification, 25th International Conference, CAV 2013, Princeton, USA* (Lecture Notes in Computer Science), Vol. 8044. Springer, 696–701.

[53] Peter Roenne. 2016. Private communication. (2016).

[54] Sonia Santiago, Santiago Escobar, Catherine A. Meadows, and José Meseguer. 2014. A Formal Definition of Protocol Indistinguishability and Its Verification Using Maude-NPA. In *STM 2014* (Lecture Notes in Computer Science). IEEE Computer Society, 162–177.

[55] Benedikt Schmidt, Simon Meier, Cas J. F. Cremers, and David A. Basin. 2012. Automated Analysis of Diffie-Hellman Protocols and Advanced Security Properties. In *24th IEEE Computer Security Foundations Symposium (CSF’12)*. IEEE Computer Society, 78–94.

[56] Marcelo Sousa and Isil Dillig. 2016. Cartesian Hoare Logic for Verifying k-Safety Properties. In *37th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2016*. ACM, 57–69.

[57] Hongseok Yang. 2007. Relational Separation Logic. *Theorertical Compututer Science* 375, 1-3 (2007), 308–334.