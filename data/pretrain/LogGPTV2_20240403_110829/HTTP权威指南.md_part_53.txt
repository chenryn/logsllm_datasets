以强化使用者的身份证明。有些绝密的政府组织甚至会对你的指纹或视网膜毛细血
管模式进行匹配以便确认你的ID！
有些形式的ID，比如名片，相对来说更容易伪造，因此人们不太信任这些信息。虽
然足以应付职场交流，但申请住房贷款时，可能就不足以证明你的就业情况了。
14.6.1 证书的主要内容
数字证书中还包含一组信息，所有这些信息都是由一个官方的“证书颁发机构”以
数字方式签发的。基本的数字证书中通常包含一些纸质ID中常见的内容，比如：
• 对象的名称（人、服务器、组织等）；
319 • 过期时间；
• 证书发布者（由谁为证书担保）；
• 来自证书发布者的数字签名。
而且，数字证书通常还包括对象的公开密钥，以及对象和所用签名算法的描述性信
息。任何人都可以创建一个数字证书，但并不是所有人都能够获得受人尊敬的签发
权，从而为证书信息担保，并用其私有密钥签发证书。典型的证书结构如图14-11
所示。
336 ｜ 第14章
证书格式版本号
证书序列号
证书签名算法
证书颁发者
数字签
有效期 名函数
对象名称
对象的公开密钥
其他扩展信息
数字签名
图14-11 典型的数字签名格式
14.6.2 X.509 v3证书
不幸的是，数字证书没有单一的全球标准。就像不是所有印刷版ID卡都在同样的位
置包含了同样的信息一样，数字证书也有很多略有不同的形式。 不过好消息就是现
在使用的大多数证书都以一种标准格式——X.509 v3，来存储它们的信息。X.509 v3
证书提供了一种标准的方式，将证书信息规范至一些可解析字段中。不同类型的证
书有不同的字段值，但大部分都遵循X.509 v3结构。表14-2介绍了X.509证书中
的字段信息。
表14-2 X.509证书字段
字 段 描 述
版本 这个证书的X.509证书版本号。现在使用的通常都是版本3
序列号 证书颁发机构（CA）生成的唯一整数。CA生成的每个证书都要有一个
唯一的序列号
签名算法ID 签名所使用的加密算法。例如，“用RSA加密的MD2摘要”
证书颁发者 发布并签署这个证书的组织名称，以X.500格式表示
有效期 此证书何时有效，由一个起始日期和一个结束日期来表示 320
对象名称 证书中描述的实体，比如一个人或一个组织。对象名称是以X.500格式
表示的
对象的公开密钥信息 证书对象的公开密钥，公开密钥使用的算法，以及所有附加参数
发布者唯一的ID（可选） 可选的证书发布者唯一标识符，这样就可以重用相同的发布者名称
对象唯一的ID（可选） 可选的证书对象唯一标识符，这样就可以重用相同的对象名称了
安全HTTP ｜ 337
（续）
字 段 描 述
扩展 可选的扩展字段集（在版本3及更高的版本中使用）。每个扩展字段都被
标识为关键或非关键的。关键扩展非常重要，证书使用者一定要能够理
解。如果证书使用者无法识别出关键扩展字段，就必须拒绝这个证书。
目前在使用的常用扩展字段包括：
基本约束
对象与证书颁发机构的关系
证书策略
授予证书的策略
密钥的使用
对公开密钥使用的限制
证书的颁发机构签名 证书颁发机构用指定的签名算法对上述所有字段进行的数字签名
基于X.509证书的签名有好几种，（其中）包括Web服务器证书、客户端电子邮件
证书、软件代码签名证书和证书颁发机构证书。
14.6.3 用证书对服务器进行认证
通过HTTPS建立了一个安全Web事务之后，现代的浏览器都会自动获取所连接服
务器的数字证书。如果服务器没有证书，安全连接就会失败。服务器证书中包含很
多字段，其中包括：
• Web站点的名称和主机名；
• Web站点的公开密钥；
• 签名颁发机构的名称；
• 来自签名颁发机构的签名。
浏览器收到证书时会对签名颁发机构进行检查。10如果这个机构是个很有权威的公
321 共签名机构，浏览器可能已经知道其公开密钥了（浏览器会预先安装很多签名颁发
机构的证书）。这样，就可以像前面的14.5节中所讨论的那样验证签名了。图14-12
说明了如何通过其数字签名来验证证书的完整性。
如果对签名颁发机构一无所知，浏览器就无法确定是否应该信任这个签名颁发机构，
它通常会向用户显示一个对话框，看看他是否相信这个签名发布者。签名发布者可
能是本地的IT部门或软件厂商。
注10： 浏览器和其他因特网应用程序都会尽量隐藏大部分证书管理的细节，使得浏览更加方便。但通过安
全连接进行浏览时，所有主要的浏览器都允许你自己去检查所要对话站点的证书，以确保所有内容
都是诚实可信的。
338 ｜ 第14章
证书格式版本号
证书序列号
证书签名算法
证书颁发者（签名颁发机构）
有效期
对象名称
B
对象的公开密钥
其他扩展信息
报文摘要
报文摘要
数字签名 相同吗？
E
签名颁发机构
的公开密钥
图14-12 验证签名是真的
14.7 HTTPS——细节介绍
HTTPS是最常见的HTTP安全版本。它得到了很广泛的应用，所有主要的商业浏览
器和服务器上都提供HTTPS。HTTPS将HTTP协议与一组强大的对称、非对称和
基于证书的加密技术结合在一起，使得HTTPS不仅很安全，而且很灵活，很容易
在处于无序状态的、分散的全球互联网上进行管理。
HTTPS加速了因特网应用程序的成长，已经成为基于Web的电子商务快速成长的
主要推动力。在广域网中对分布式Web应用程序的安全管理方面，HTTPS也是非
常重要的。
14.7.1 HTTPS概述
HTTPS 就是在安全的传输层上发送的 HTTP。HTTPS 没有将未加密的 HTTP 报
文发送给TCP，并通过世界范围内的因特网进行传输（参见图14-13a），它在将
HTTP报文发送给TCP之前，先将其发送给了一个安全层，对其进行加密（参见
图14-13b）。 322
现在，HTTP安全层是通过SSL及其现代替代协议TLS来实现的。我们遵循常见的
用法，用术语SSL来表示SSL或者TLS。
安全HTTP ｜ 339
HTTP 应用层
HTTP 应用层 SSL or TLS 安全层
TCP 传输层 TCP 传输层
IP 网络层 IP 网络层
网络接口 数据链路层 网络接口 数据链路层
(a)HTTP (b)HTTPS
图14-13 HTTP传输层安全
14.7.2 HTTPS方案
现在，安全HTTP是可选的。因此，对Web服务器发起请求时，我们需要有一种方
式来告知Web服务器去执行HTTP的安全协议版本。这是在URL的方案中实现的。
通常情况下，非安全HTTP的URL方案前缀为http，如下所示：
http://www.joes-hardware.com/index.html
在安全HTTPS协议中，URL的方案前缀为https，如下所示：
https://cajun-shop.securesites.com/Merchant2/merchant.mv?Store_Code=AGCGS
请求一个客户端（比如Web浏览器）对某Web资源执行某事务时，它会去检查
URL的方案。
• 如果URL的方案为http，客户端就会打开一条到服务器端口80（默认情况下）
的连接，并向其发送老的HTTP命令（参见图14-14a）。
• 如果URL的方案为https，客户端就会打开一条到服务器端口443（默认情况下）
的连接，然后与服务器“握手”，以二进制格式与服务器交换一些SSL安全参数，
附上加密的HTTP命令（参见图14-14b）。
SSL是个二进制协议，与HTTP完全不同，其流量是承载在另一个端口上的（SSL
通常是由端口443承载的）。如果SSL和HTTP流量都从端口80到达，大部分Web
服务器会将二进制SSL流量理解为错误的HTTP并关闭连接。将安全服务进一步整
合到HTTP层中去就无需使用多个目的端口了，在实际中这样不会引发严重的问题。
323 我们来详细介绍下SSL是如何与安全服务器建立连接的。
340 ｜ 第14章
（a）HTTP请求
80
HTTP
客户端 服务器
(b)HTTPS请求
443
HTTPS
客户端 安全服务器
(c)HTTP隧道上的HTTPS
8080 443
HTTPS
HTTPS隧道 代理
客户端 安全服务器
图14-14 HTTP和HTTPS端口号
14.7.3 建立安全传输
在未加密HTTP中，客户端会打开一条到Web服务器端口80的TCP连接，发送一
条请求报文，接收一条响应报文，关闭连接。图14-15a对此序列进行了说明。
由于SSL安全层的存在，HTTPS中这个过程会略微复杂一些。在HTTPS中，客户
端首先打开一条到Web服务器端口443（安全HTTP的默认端口）的连接。一旦建
立了TCP连接，客户端和服务器就会初始化SSL层，对加密参数进行沟通，并交
换密钥。握手完成之后，SSL初始化就完成了，客户端就可以将请求报文发送给安
全层了。在将这些报文发送给TCP之前，要先对其进行加密。图14-15b对此过程
进行了说明。
14.7.4 SSL握手
在发送已加密的HTTP报文之前，客户端和服务器要进行一次SSL握手，在这个握
手过程中，它们要完成以下工作：
• 交换协议版本号；
• 选择一个两端都了解的密码；
• 对两端的身份进行认证；
• 生成临时的会话密钥，以便加密信道。 324
安全HTTP ｜ 341
（a）未加密的HTTP事务 （b）加密的HTTPS事务
因特网 因特网
80 443
1
客户端 服务器 客户端 服务器
建立到服务器端口80的TCP连接 建立到服务器端口443的TCP连接
因特网
2
客户端 服务器
SSL安全参数握手
因特网 因特网
3 E D
客户端 服务器 客户端 服务器
在TCP上发送HTTP请求 在SSL上发送HTTP请求/在TCP上发送已加密的请求
因特网 因特网
4 D E
客户端 服务器 客户端 服务器
在TCP上发送HTTP响应 在SSL上发送HTTP响应/在TCP上发送已加密的响应
因特网
5
客户端 服务器
SSL关闭通知
因特网 因特网
6
客户端 服务器 客户端 服务器
TCP连接关闭 TCP连接关闭
图14-15 HTTP和HTTPS事务
在通过网络传输任何已加密的HTTP数据之前，SSL已经发送了一组握手数据来建
立通信连接了。图14-16显示了SSL握手的基本思想。
342 ｜ 第14章
客户端 因特网 服务器
（1）客户端发送可供选择的密码并请求证书