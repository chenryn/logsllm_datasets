```
$ sudo yum install yum-utils 
```
现在我们来检查一个未安装的RPM包的依赖关系(本例使用 tcpdump)。首先，我们使用yumdownloader把tcpdump的RPM包下载下来
```
$ yumdownloader --destdir=. tcpdump 
```
然后再使用 "-qpR"参数显示该包的依赖关系。
```
# rpm -qpR tcpdump-4.4.0-2.fc19.i686.rpm
```
### 方法二
你可以使用repoquery工具来罗列包的依赖关系，它与包是否安装无关，这个工具包含在yum-utils中。
```
$ sudo yum install yum-utils
```
显示目标包所依赖的包：
```
$ repoquery --requires --resolve  
```
![](/data/attachment/album/201408/16/155915fyi33syj71yitk18.png)
为让repoquery正常的工作，需要保持网络的畅通，应为repoquery需要在Yum库中查找信息。
### 方法三
第三个方法是使用rpmreaper工具。这个工具本来是用作清理系统中无用以及它们所依赖的包，rpmreaper有很直观的ncurses界面来展示已安装的包和它们依赖关系的树形图。
安装rpmrepater，在CentOS中，你需要先[设置好EPEL库](http://xmodulo.com/2013/03/how-to-set-up-epel-repository-on-centos.html)
```
$ sudo yum install rpmreaper 
```
只需运行rpmreaper就可以看到RPM包的依赖关系：
```
$ rpmreaper 
```
![](/data/attachment/album/201408/16/160026rw3546mwfcfzw53u.jpg)
rpmrepater会向用户显示已安装包的列表，你可以使用上/下箭头来滚动屏幕。
你可以在指定包上使用"r"键来显示其依赖关系，循环在指定包上按下"r"键可以展示出余下的信息。
"L"标志的意思是说这个包是一片“孤叶”，意思说说没有任何包依赖它。
"o"标志是说这个包是整个依赖链的中间部分。
按下"b"键会显示其他依赖于该包的其他包。
### 方法四
还有一个办法是使用rpmdep工具，rpmdep是一个命令行工具，可以显示已安装包的完整包依赖关系图。该工具会分析RPM包的依赖性，从完整的排完序的拓扑图中摘取部分包的信息，形成列表展示给用户。该工具的输出结果可以直接使用到Dotty（可视化展示工具）中去。
在Fedora中安装rpmdep和dotty：
```
$ sudo yum install rpmorphan graphviz 
```
在CentOs中安装： $ wget  $ sudo rpm -ivh rpmorphan-1.14-1.noarch.rpm $ sudo yum install graphviz
生成包依赖的拓扑关系图（例如 gzip）：
```
$ rpmdep.pl -dot gzip.dot gzip
$ dot -Tpng -o output.png gzip.dot 
```
![](/data/attachment/album/201408/16/160611rf63cq51sw3w1swf.jpg)
教程到这个地方，我们用到了几种办法来检查包的依赖关系。如果您想知道如何在居于Debian的系统中检查.deb的包依赖关系，请阅读另外一篇[文档](http://xmodulo.com/2013/07/how-to-check-package-dependencies-on-ubuntu-or-debian.html)。
---
via: 
译者：[nd0104](https://github.com/nd0104) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出