proportion that is (in)secure. For example, the proportion of cookies
that have the Secure flag may depend on how many cookies a site
sets, as more cookies implies more effort to ensure that every single
cookie has the appropriate flag.
To determine whether this complexity has an indirect effect on
the measured security properties and therefore on the (difference
of) distribution per device and ultimately our conclusions, we per-
form a mediation analysis. This analysis tests whether there is a
mediator variable (here the complexity) that is influenced by the in-
put variable (the device on which the site is visited) and that causes
an indirect effect on the outcome variable (the proportion that is
(in)secure). We follow the approach of Montoya and Hayes [18],
which is applicable to our case of paired samples. The regression
model of Montoya and Hayes results in a confidence interval for the
indirect effect: if zero does not lie within this confidence interval,
the presence of this effect is statistically significant. The confidence
interval is determined through bootstrapping (repeating the regres-
sion with samples drawn from the data with replacement), which
does not require the assumption of normality.
Figure 1: Difference in the first appearance of the mobile site
in comparison to the desktop version.
the difference higher than reported), we find that mobile sites are
generally developed much later than desktop sites (median: 6.8
years). This provides a unique viewpoint on how security is applied
throughout the web: in case security countermeasures are mainly or
only considered during the design time, we would observe a signifi-
cant difference in the adoption of certain security features that were
not yet available at the time that the desktop site was developed,
but that were available and supported by all major browsers when
the mobile site was designed and developed. Conversely, a lack of
differences in the adoption of security measures would indicate
that these are applied retroactively and consistently across all web-
facing assets as an independent effort. Our large-scale statistical
analysis presented hereafter, strongly hints towards the latter.
3 EVALUATION OF SECURITY INDICATORS
In this paper, we analyze the security of mobile-first websites. Ide-
ally, we would measure the “absolute” security, i.e. determining
whether websites do not suffer from any vulnerabilities, however,
this would be infeasible for several reasons. For instance, actively
looking for vulnerabilities would be both unethical and illegal. Fur-
thermore, as websites can only be accessed in a black-box manner
and no universal vulnerability detection exists, it would be impossi-
ble to determine the presence or absence of vulnerabilities. Instead,
we analyze the security of mobile-first sites indirectly: by evaluating
the prevalence of certain security features, which are considered
best practice and can be used to hinder or completely mitigate
attacks, we aim to capture a latent factor of security effort. More
precisely, website administrators that adopted a certain security
feature have made the conscious decision to do so, and therefore
are interested in keeping visitors more secure. Furthermore, these
features can be passively observed by visiting the website with an
instrumented browser. A list of the various security features we
considered in our study can be found in Appendix A.
For every website in our dataset with a mobile-first version, we
visited up to 20 web pages, both with an emulated mobile and a
desktop browser (the same one used to compose our dataset, as
described in Section 2.1). For every visit, we captured all security-
relevant information, such as response headers, cookies that were
set or scripts and iframes that were included. In total, we collected
information from 191,237 web pages visited with a mobile browser
(on average, 18.67 pages per site), and 195,487 pages visited with
a desktop browser (19.08 pages per site on average). Considering
that it is advisable for most security features that they are applied
−10−505101520Years between first appearance of mobile and desktop site020406080100Percentagey=50 (median)x=6.80Session 3A: Web Attack MeasurementsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand208The mediation model also computes point estimates of the to-
tal, direct and indirect effect of our input variable on the outcome
through an ordinary least squares regression; here this linear re-
gression model does imply that the differences between desktop
and mobile sites are assumed to be normally distributed. The total
effect is the sum of the direct and indirect effect; all three effects can
then be interpreted as the number of units of change between desk-
top and mobile, i.e. the difference in the proportion of (in)securely
configured features.
3.2 Results
In this section, we interpret the results of our statistical analysis and
report on the most significant and interesting findings; Appendix B
lists the full numerical results of this analysis.
Overall, security features are seen more often on desktop than
on mobile websites. We see that the effect of the device is most
outspoken for the features related to man-in-the-middle attacks, of
which several show a relatively large and statistically significant
skew in adoption toward desktop sites. In general, pages are more
likely to be served over HTTPS on the desktop; in section 4.2, we
elaborate on the adoption and (in)secure configuration of HTTPS
across desktop and mobile websites.
The Referrer-Policy header has the highest (and a significant)
correlation at 0.429, being more prevalent on the desktop. For the
other features and corresponding vulnerabilities, the effect of the
device is at best very moderate and usually statistically insignificant,
indicating a more consistent application of security features across
desktop and mobile sites.
Our mediation analysis shows that the complexity of a website
has a significant indirect effect on the proportion of securely con-
figured cookies and frames as well as pages served over HTTPS.
Desktop sites tend to have more cookies, and it tends to be less com-
mon for sites with more cookies to have a higher proportion with
the HTTPOnly or Secure attribute. The reduction in effect caused by
this increased complexity therefore actually counteracts the larger
direct effect where desktop sites are even more likely to have more
securely configured cookies.
For frames, the same reasoning on complexity holds as desktop
sites have more frames which leads to a lower prevalence of the
sandbox attribute, but here this actually reinforces the finding that
mobile sites tend to have more frames with the sandbox attribute.
When we analyze the distribution of sites in terms of the number
of security properties for which the site has at least one instance, we
see a similar picture: Figure 2 shows that desktop sites tend to have
implemented more features that positively affect security. However,
our analysis paints a bleak picture of security for both desktop and
mobile sites: only 530 (5.18%) desktop and 415 (4.06%) mobile sites
have implemented at least half of the measured vulnerability miti-
gations on at least one page, with only 327 (3.20%) domains having
done so on both. 6,128 (59.95%) domains see the same number of
positive features between the desktop and mobile sites, again with
a skew toward both sites having less features rather than more.
Figure 3 shows that the share of desktop versions of sites that
exhibit a security property is consistently higher than that of the
mobile version. The most widely implemented feature is serving
the site over HTTPS, at 6,904 (67.54%) desktop and 6,649 (65.05%)
Figure 2: Distribution of sites over the number of properties
for which a site has at least one securely configured page.
Figure 3: Number of sites with at least one page that exhibits
a positive (top) or negative (bottom) feature.
mobile sites with at least one HTTPS page. However, except for the
HttpOnly cookie attribute, positive security features are present
on less than 2,500 domains, with the majority having the feature on
both desktop and mobile. Conversely, negative features are affected
less by the website type. This shows that when website operators
implement good practices, they tend to do this on both desktop
and mobile, but that they are less successful at refraining from bad
practices in a consistent manner.
4 IN-DEPTH ANALYSIS OF SECURITY
PROPERTIES
In Section 3, we primarily focused on the broad view of how se-
curity mechanisms are applied on mobile websites compared to
their desktop version. In this section, we take a more detailed look
at a few security aspects, which provides more insights on how
website operators aim to improve their security, and which kind of
challenges they are still facing.
4.1 Content Security Policy
In our dataset, we find 463 mobile-first sites with CSP, and 502
desktop sites that use the feature. Interestingly, having a CSP on
the desktop website is a strong indicator that it will also be present
on the mobile version: 418 (83.27%) of the CSP-enabled desktop sites
also define a version on their mobile site. This indicates that security
01234567891011Number of seen security features with positive impact050010001500200025003000Number of sitesDesktopMobileBoth desktop and mobile01000200030004000500060007000HTTPOnly on cookieContent-Security-Policy headerForm with CSRF tokenX-Frame-OptionsheaderX-Content-Type-Options headerPage served overHTTPSSecure on cookieStrict-Transport-Security headersandbox on frameSub-resourceintegrity for scriptReferrer-PolicyheaderBrowser built-in XSSprotection disabledHTTPS page with HTTPresourcesForm with SSLstrippingForm on HTTPS pagewith HTTP actionDesktopMobileBoth desktop and mobileSession 3A: Web Attack MeasurementsAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand209Table 1: Percentage of unique CSP policies that use a specific
directive, based on data from this study (mobile and desktop)
and the study by Weichselbaum et al. [28].
Directive
report-uri
default-src
block-all-mixed-content
script-src
frame-ancestors
referrer
img-src
style-src
font-src
connect-src
mobile % desktop % [28] %
41.42
85.71
1.20
86.78
8.12
1.61
77.58
78.22
66.55
54.37
42.60
33.94
27.08
25.99
22.74
25.27
25.99
22.02
16.62
20.22
41.27
34.62
33.73
29.76
28.17
27.78
26.59
23.41
19.84
19.44
efforts are typically made universally, across all web-facing assets
of an organization. This is confirmed by the fact that on average
the percentage of web pages within a site that are protected with
CSP is quite high (82.01% for mobile, 78.94% for desktop). Overall,
we find that websites that adopt CSP typically create one universal
policy that is applied throughout the website: 92.22% and 91.24% of
the websites only use a single policy on their mobile and desktop
version respectively.
To further evaluate the CSP policies, we use Google’s CSP Eval-
uator3, which is based on the results of a large-scale study [28].
Similar to the findings of this study from 2016, we find that the
vast majority of CSP policies can be bypassed: only 3 mobile-first
sites do not suffer from high-severity issues that make the policy
ineffective against XSS. On desktop, there are only 2 websites with
an effective policy. Similar to the two large-scale studies on CSP
that were performed in 2016 [8, 28], we find that most policies
are still rendered ineffective due to the use of 'unsafe-inline'
(92.38% on mobile, 94.17% on desktop).
Interestingly, when comparing the prevalence of CSP directives
of mobile and desktop sites from our dataset with the findings of
Weichselbaum et al. [28], as listed in Table 1, we find significant
differences. In general, we observe that there is a much higher
variety of CSP directives. For instance, we see that the block-all-
mixed-content, frame-ancestors, and referrer directives are
significantly more prevalent in our dataset than in the 2016 study.
Finally, we can see that there are relatively few differences in the
adoption of CSP directives between mobile and desktop sites.
4.2 HTTPS adoption
Figure 4 shows how the desktop and mobile versions of a site com-
pare in terms of secure HTTPS implementations. For 4,473 (43.76%)
domains, both are fully secure. In addition, 665 (6.51%) desktop and
386 (3.78%) mobile sites are fully secure while their counterpart
is not: for mobile, this is mostly due to the inclusion of HTTP re-
sources on the desktop site, while for the desktop, this is rather
due to the mobile site redirecting to HTTP. In fact, redirections to
HTTP pages represent the second largest class for mobile sites: for
1,637 (16.01%) sites, a user that visits the root domain over HTTPS
is redirected to the mobile version served over HTTP, undoing the
additional security of a HTTPS connection.
3https://csp-evaluator.withgoogle.com/
Figure 4: Sankey diagram of the distribution of sites that
(in)correctly implement HTTPS on desktop (left) and mo-
bile (right). Flows indicate whether the desktop and mobile
site for a domain are implemented as (in)securely; the color
represents the least secure configuration of the pair.
650 (6.36%) domains have both an insecure desktop and mobile
site, mostly due to the certificate having an invalid common name.
38 insecure desktop and 9 insecure mobile sites have a fully secure
site for the other device, indicating that the website operator has
only considered one device when setting up HTTPS for their do-
main. Finally, configurations with obsolete parameters (e.g. an older
TLS version) or failures to connect over HTTPS appear to occur
consistently between desktop and mobile sites. Overall, less than
half of our mobile-first sites are configured securely, on both desk-
top and mobile; we see that website operators are prone to forget
that both versions need to be set up properly, e.g. by redirecting
to a HTTP site or having an insecure configuration for one device,
leaving some users vulnerable to man-in-the-middle attacks.
5 RELATED WORK
Differences between the desktop and mobile versions of websites in
terms of security characteristics can lead to abuse going undetected
or the introduction of additional vulnerabilities. Amrutkar et al. [2]
demonstrated that static features used in detecting malicious web-
pages, such as the number of scripts or frames, are less prevalent
on mobile than on desktop websites. Therefore, they developed
a static analyzer that detects malicious mobile webpages using a
tailored set of features. They evaluated their tool on 53,638 mobile