由上面的范例我们可以看到，三个目录 （/root, /home, /etc） 的数据通通放置到了镜像文件的最顶层目录中！ 真是不方便～尤其由于
/root/etc 的存在，导致那个 /etc 的数据似乎没有被包含进来的样子！真不合理～ 此时我们可以使用 -graft-point 来处理啰！
[root@study ~]# mkisofs -r -V 'linux_file' -o /tmp/system.img \
> -m /root/etc -graft-point /root=/root /home=/home /etc=/etc
[root@study ~]# ll -h /tmp/system.img
-rw-r--r--. 1 root root 92M Jul 2 19:00 /tmp/system.img
# 上面的指令会创建一个大文件，其中 -graft-point 后面接的就是我们要备份的数据。
# 必须要注意的是那个等号的两边，等号左边是在镜像文件内的目录，右侧则是实际的数据。
[root@study ~]# mount -o loop /tmp/system.img /mnt
[root@study ~]# ll /mnt
dr-xr-xr-x. 131 root root 34816 Jun 26 22:14 etc
dr-xr-xr-x. 5 root root 2048 Jun 17 00:20 home
dr-xr-xr-x. 8 root root 4096 Jul 2 18:48 root
# 瞧！数据是分门别类的在各个目录中喔这样了解乎？最后将数据卸载一下：
[root@study ~]# umount /mnt
如果你想要将实际的数据直接倒进 ISO 档中，那就得要使用这个 -graft-point 来处理处理比较妥当！不然没有分第一层目录， 后面的数
据管理实在是很麻烦。如果你是有自己要制作的数据内容，其实最简单的方法，就是将所有的数据预先处理到某一个目录中， 再烧录该目录即
可！例如上述的 /etc, /root, /home 先全部复制到 /srv/cdrom 当中，然后跑到 /srv/cdrom 当中， 再使用类似“ mkisofs -r -v -o /tmp/system.img . ”的
方式来处理即可！这样也比较单纯～
制制作作/修修改改可可开开机机光光盘盘图图像像挡挡
在鸟哥的研究室中，学生常被要求要制作“一键安装”的安装光盘！也就是说，得要修改原版的光盘镜像文件，改成可以自动载入某些程
序的流程， 让这片光盘放入主机光驱后，只要开机利用光盘片来开机，那就直接安装系统，不再需要询问管理员一些有的没有的！等于是自动
化处理啦！ 那些流程比较麻烦，因为得要知道 kickstart 的相关技术等，那个我们先不谈，这里要谈的是，那如何让这片光盘的内容被修改之
后， 还可以烧录成为可开机的模样呢？
因为鸟哥这部测试机的容量比较小，又仅是测试而已啊，因此鸟哥选择 CentOS-7-x86_64-Minimal-1503-01.iso 这个最小安装光盘镜像
文件来测试给各位瞧瞧！ 假设你已经到昆山科大 http://ftp.ksu.edu.tw/FTP/CentOS/7/isos/x86_64/ 取得了最小安装的 Image 档，而且放在
/home 下面～之后我们要将里头的数据进行修改，假设新的镜像文件目录放置于 /srv/newcd 里面，那你应该要这样做：
# 1. 先观察一下这片光盘里面有啥东西？是否是我们需要的光盘系统！
[root@study ~]# isoinfo -d -i /home/CentOS-7-x86_64-Minimal-1503-01.iso
CD-ROM is in ISO 9660 format
System id: LINUX
Volume id: CentOS 7 x86_64
Volume set id:
Publisher id:
Data preparer id:
Application id: GENISOIMAGE ISO 9660/HFS FILESYSTEM CREATOR （C） 1993 E.YOUNGDALE （C） ...
Copyright File id:
.....（中间省略）.....
Eltorito defaultboot header:
Bootid 88 （（bootable））
Boot media 0 （（No Emulation Boot））
Load segment 0
Sys type 0
Nsect 4
# 2. 开始挂载这片光盘到 /mnt ，并且将所有数据完整复制到 /srv/newcd 目录去喔
[root@study ~]# mount /home/CentOS-7-x86_64-Minimal-1503-01.iso /mnt
[root@study ~]# mkdir /srv/newcd
[root@study ~]# rsync -a /mnt/ /srv/newcd
[root@study ~]# ll /srv/newcd/
-rw-r--r--. 1 root root 16 Apr 1 07:11 CentOS_BuildTag
drwxr-xr-x. 3 root root 33 Mar 28 06:34 EFI
-rw-r--r--. 1 root root 215 Mar 28 06:36 EULA
-rw-r--r--. 1 root root 18009 Mar 28 06:36 GPL
drwxr-xr-x. 3 root root 54 Mar 28 06:34 images
drwxr-xr-x. 2 root root 4096 Mar 28 06:34 isolinux
drwxr-xr-x. 2 root root 41 Mar 28 06:34 LiveOS
drwxr-xr-x. 2 root root 20480 Apr 1 07:11 Packages
drwxr-xr-x. 2 root root 4096 Apr 1 07:11 repodata
-rw-r--r--. 1 root root 1690 Mar 28 06:36 RPM-GPG-KEY-CentOS-7
-rw-r--r--. 1 root root 1690 Mar 28 06:36 RPM-GPG-KEY-CentOS-Testing-7
-r--r--r--. 1 root root 2883 Apr 1 07:15 TRANS.TBL
# rsync 可以完整的复制所有的权限属性等数据，也能够进行镜像处理！相当好用的指令喔！
# 这里先了解一下即可。现在 newcd/ 目录内已经是完整的镜像文件内容！
# 3. 假设已经处理完毕你在 /srv/newcd 里面所要进行的各项修改行为，准备创建 ISO 档！
[root@study ~]# ll /srv/newcd/isolinux/
-r--r--r--. 1 root root 2048 Apr 1 07:15 boot.cat # 开机的型号数据等等
-rw-r--r--. 1 root root 84 Mar 28 06:34 boot.msg
-rw-r--r--. 1 root root 281 Mar 28 06:34 grub.conf
-rw-r--r--. 1 root root 35745476 Mar 28 06:31 initrd.img
-rw-r--r--. 1 root root 24576 Mar 28 06:38 isolinux.bin # 相当于开机管理程序
-rw-r--r--. 1 root root 3032 Mar 28 06:34 isolinux.cfg
-rw-r--r--. 1 root root 176500 Sep 11 2014 memtest
-rw-r--r--. 1 root root 186 Jul 2 2014 splash.png
-r--r--r--. 1 root root 2438 Apr 1 07:15 TRANS.TBL
-rw-r--r--. 1 root root 33997348 Mar 28 06:33 upgrade.img
-rw-r--r--. 1 root root 153104 Mar 6 13:46 vesamenu.c32
-rwxr-xr-x. 1 root root 5029136 Mar 6 19:45 vmlinuz # Linux 核心文件
[root@study ~]# cd /srv/newcd
[root@study newcd]# mkisofs -o /custom.iso -b isolinux/isolinux.bin -c isolinux/boot.cat \
> -no-emul-boot -V 'CentOS 7 x86_64' -boot-load-size 4 -boot-info-table -R -J -v -T .
此时你就有一个 /custom.img 的文件存在，可以将该光盘烧录出来啰！就这么简单！
新版的 CentOS 7 使用的是 wodim 这个文字界面指令来进行烧录的行为。不过为了相容于旧版的 cdrecord 这个指令， 因此 wodim 也有
链接到 cdrecord 就是了！因此，你还是可以使用 cdrecord 这个指令。不过，鸟哥建议还是改用 wodim 比较干脆！ 这个指令常见的选项有下
面数个：
[root@study ~]# wodim --devices dev=/dev/sr0... <==查询烧录机的 BUS 位置
[root@study ~]# wodim -v dev=/dev/sr0 blank=[fast|all] <==抹除重复读写片
[root@study ~]# wodim -v dev=/dev/sr0 -format <==格式化DVD+RW
[root@study ~]# wodim -v dev=/dev/sr0 [可可用用选选项项功功能能] file.iso
选项与参数：
--devices ：用在扫瞄磁盘总线并找出可用的烧录机，后续的设备为 ATA 接口
-v ：在 cdrecord 运行的过程中，显示过程而已。
dev=/dev/sr0 ：可以找出此光驱的 bus 位址，非常重要！
blank=[fast|all]：blank 为抹除可重复写入的CD/DVD-RW，使用fast较快，all较完整
-format ：对光盘片进行格式化，但是仅针对 DVD+RW 这种格式的 DVD 而已；
[可用选项功能] 主要是写入 CD/DVD 时可使用的选项，常见的选项包括有：
-data ：指定后面的文件以数据格式写入，不是以 CD 音轨（-audio）方式写入！
speed=X ：指定烧录速度，例如CD可用 speed=40 为40倍数，DVD则可用 speed=4 之类
-eject ：指定烧录完毕后自动退出光盘
fs=Ym ：指定多少缓冲内存，可用在将镜像文件先暂存至缓冲内存。默认为 4m，
一般建议可增加到 8m ，不过，还是得视你的烧录机而定。
针对 DVD 的选项功能：
driveropts=burnfree ：打开 Buffer Underrun Free 模式的写入功能
-sao ：支持 DVD-RW 的格式
侦侦测测你你的的烧烧录录机机所所在在位位置置：：
文字模式的烧录确实是比较麻烦的，因为没有所见即所得的环境嘛！要烧录首先就得要找到烧录机才行！ 而由于早期的烧录机都是使用
SCSI 接口，因此查询烧录机的方法就得要配合着 SCSI 接口的认定来处理了。 查询烧录机的方式为：
[root@study ~]# ll /dev/sr0
brw-rw----+ 1 root cdrom 11, 0 Jun 26 22:14 /dev/sr0 # 一般 Linux 光驱文件名！
[root@study ~]# wodim --devices dev=/dev/sr0
-------------------------------------------------------------------------
0 dev='/dev/sr0' rwrw-- : 'QEMU' 'QEMU DVD-ROM'
-------------------------------------------------------------------------
[root@demo ~]# wodim --devices dev=/dev/sr0
wodim: Overview of accessible drives （1 found） :
-------------------------------------------------------------------------
0 dev='/dev/sr0' rwrw-- : 'ASUS' 'DRW-24D1ST'
-------------------------------------------------------------------------
# 你可以发现到其实鸟哥做了两个测试！上面的那部主机系统是虚拟机，当然光驱也是仿真的，没法用。
# 因此在这里与下面的 wodim 用法，鸟哥只能使用另一部 Demo 机器测试给大家看了！
因为上面那部机器是虚拟机内的虚拟光驱 （QEMU DVD-ROM），那个无法塞入真正的光盘片啦！真讨厌～所以鸟哥只好找另一部实体
CentOS 7 的主机系统来测试。 因此你可以看到下面那部使用的就是正统的 ASUS 光驱了！这样会查阅了吗？注意喔，一定要有 dev=/dev/xxx
那一段，不然系统会告诉你找不到光盘！ 这真的是很奇怪！不过，反正我们知道光驱的文件名为 /dev/sr0 之类的，直接带入即可。
进进行行 CD/DVD 的的烧烧录录动动作作：：
好了，那么现在要如何将 /tmp/system.img 烧录到 CD/DVD 里面去呢？因为要节省空间与避免浪费，鸟哥拿之前多买的可重复读写的
DVD 四倍数 DVD 片来操作！ 因为是可抹除的 DVD，因此可能得要在烧录前先抹除 DVD 片里面的数据才行喔！
# 0. 先抹除光盘的原始内容：（非可重复读写则可略过此步骤）
[root@demo ~]# wodim -v dev=/dev/sr0 blank=fast
# 中间会跑出一堆讯息告诉你抹除的进度，而且会有 10 秒钟的时间等待你的取消！
# 1. 开始烧录：
[root@demo ~]# wodim -v dev=/dev/sr0 speed=4 -dummy -eject /tmp/system.img
....（前面省略）....
Waiting for reader process to fill input buffer ... input buffer ready.
Starting new track at sector: 0