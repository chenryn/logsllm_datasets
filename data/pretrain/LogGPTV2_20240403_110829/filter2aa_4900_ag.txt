添加为
.SM
.BR GLOBIGNORE 
的模式之一。选项
.B dotglob
被禁用，如果
.SM
.B GLOBIGNORE
没有定义时。
.PP
\fBPattern Matching\fP
.PP
任何模式中出现的字符，除了下面描述的特殊模式字符外，都匹配它本身。
模式中不能出现 NUL 字符。如果要匹配字面上的特殊模式字符，它必须被引用。
.PP
特殊模式字符有下述意义：
.PP
.PD 0
.TP
.B *
匹配任何字符串包含空串。
.TP
.B ?
匹配任何单个字符。
.TP
.B [...]
匹配所包含的任何字符之一。用一个连字符 (`-') 分隔的一对字符意思是一个
\fIrange expression\fP (范围表达式)；
任何排在它们之间的字符，包含它们，都被匹配。
排序使用当前语言环境的字符顺序和字符集。如果
.B [
之后的第一个字符是一个
.B !
或是一个
.B ^
那么任何不包含在内的字符将被匹配。范围表达式中字符的顺序是由当前语言环境
和环境变量 \fBLC_COLLATE\fP 的值 (如果设置了的话) 决定的。一个
.B \-
只有作为集合中第一个或最后一个字符时才能被匹配。一个
.B ]
只有是集合中第一个字符时才能被匹配。
.br
.if t .sp 0.5
.if n .sp 1
在
.B [
和
.BR ]
中，\fIcharacter classes\fP (字符类) 可以用 \fB[:\fP\fIclass\fP\fB:]\fP
这样的语法来指定，这里 \fIclass\fP 是在 POSIX.2 标准中定义的下列类名之一:
.PP
.RS
.B
.if n alnum alpha ascii blank cntrl digit graph lower print punct space upper word xdigit
.if t alnum   alpha   ascii   blank   cntrl   digit   graph   lower   print   punct   space   upper   word   xdigit
.br
一个字符类匹配任何属于这一类的字符。\fBword\fP 字符类匹配字母，数字和字符 _。
.br
.if t .sp 0.5
.if n .sp 1
在
.B [
和
.BR ]
中，可以用 \fB[=\fP\fIc\fP\fB=]\fP 这样的语法来指定 \fIequivalence class\fP 
(等价类)。它匹配与字符 \fIc\fP 有相同归并权值 (collation weight，由当前
语言环境定义) 的字符。
.br
.if t .sp 0.5
.if n .sp 1
在
.B [
和
.BR ]
中，语法 \fB[.\fP\fIsymbol\fP\fB.]\fP 匹配归并符号 (collating symbol)
\fIsymbol\fP。
.RE
.PD
.PP
如果使用内建命令 \fBshopt\fP 启用了 shell 选项 \fBextglob\fP，
将识别另外几种模式匹配操作符。下面的描述中，\fIpattern-list\fP 是一个
或多个模式以 \fB|\fP 分隔的列表。复合的模式可以使用一个或多个下列的
子模式构造出来：
.sp 1
.PD 0
.RS
.TP
\fB?(\fP\^\fIpattern-list\^\fP\fB)\fP
匹配所给模式零次或一次出现
.TP
\fB*(\fP\^\fIpattern-list\^\fP\fB)\fP
匹配所给模式零次或多次出现
.TP
\fB+(\fP\^\fIpattern-list\^\fP\fB)\fP
匹配所给模式一次或多次出现
.TP
\fB@(\fP\^\fIpattern-list\^\fP\fB)\fP
准确匹配所给模式之一
.TP
\fB!(\fP\^\fIpattern-list\^\fP\fB)\fP
任何除了匹配所给模式之一的字串
.RE
.PD
.SS Quote Removal
.PP
经过前面的扩展之后，所有未引用的字符
.BR \e ,
.BR ' ,
以及并非上述扩展结果的字符 \^\fB"\fP\^ 都被删除。
.SH 重定向(REDIRECTION)
在命令执行前，它的输入和输出可能被
.I redirected (重定向)，
使用一种 shell 可以解释的特殊记法。重定向也可以用于为当前 shell
执行环境 打开和关闭文件。下列重定向操作符可以前置或者放在
.I simple command (简单命令)
之中的任何位置，或者放在
.IR command 
之后。重定向是以出现的顺序进行处理的，从左到右。
.PP
下列描述中，如果文件描述符被忽略，并且第一个重定向操作符是
.BR  ,
那么重定向指的是标准输出 (文件描述符是 1)。
.PP
下列描述中，重定向操作符之后的词如果没有特殊说明，都要经过
brace expansion, tilde expansion, parameter expansion, 
command substitution, arithmetic expansion, quote removal, 
pathname expansion, 还有 word splitting。如果扩展为多于一个词，
.B bash
将报错。
.PP
注意重定向的顺序非常重要。例如，命令
.RS
.PP
ls \fB>\fP dirlist 2\fB>&\fP1
.RE
.PP
将标准输出和标准错误重定向到文件
.IR dirlist ,
而命令
.RS
.PP
ls 2\fB>&\fP1 \fB>\fP dirlist
.RE
.PP
只会将标准输出重定向到文件
.IR dirlist ,
因为在标准输出被重定向到文件
.IR dirlist 
中之前，标准错误被复制为标准输出。
.PP
一些文件名在重定向中被 \fBbash\fP 特殊处理，如下表所示：
.RS
.PP
.PD 0
.TP
.B /dev/fd/\fIfd\fP
如果 \fIfd\fP 是一个合法的整数，文件描述符 \fIfd\fP 将被复制。
.TP
.B /dev/stdin
文件描述符 0 被复制。
.TP
.B /dev/stdout
文件描述符 1 被复制。
.TP
.B /dev/stderr
文件描述符 2 被复制。
.TP
.B /dev/tcp/\fIhost\fP/\fIport\fP
如果 \fIhost\fP 是一个合法的主机名或 Internet 地址，并且 \fIport\fP 是
一个整数端口号或服务名，\fBbash\fP 试图建立与相应的 socket (套接字) 的
TCP 连接。
.TP
.B /dev/udp/\fIhost\fP/\fIport\fP
如果 \fIhost\fP 是一个合法的主机名或 Internet 地址，并且 \fIport\fP 是
一个整数端口号或服务名，\fBbash\fP 试图建立与相应的 socket (套接字) 的
UDP 连接。
.PD
.RE
.PP
打开或创建文件错误将导致重定向出错。
.SS Redirecting Input
.PP
重定向输入使得以
.I word
扩展结果为名的文件被打开并通过文件描述符
.IR n 
读取，如果没有指定
.I n
那么就作为标准输入 (文件描述符为 0) 读取。
.PP
重定向输入的一般形式是：
.RS
.PP
[\fIn\fP]\fB\fP\fIword\fP
.RE
.PP
如果重定向操作符是
.BR > ，
并且启用了内建命令
.B set
的
.B noclobber
选项，那么如果 \fIword\fP 扩展后得到的文件名存在并且是一个普通的文件，
重定向将失败。如果重定向操作符是
.BR >| ,
或者重定向操作符是
.B >
并且没有启用内建命令
.B set
的
.B noclobber
选项，那么即使 \fIword\fP 得出的文件名存在，也会尝试进行重定向。
.SS Appending Redirected Output (添加到重定向后的输出尾部)
.PP
这种方式的输出重定向使得以
.I word
扩展结果为名的文件被打开并通过文件描述符
.IR n 
从尾部添加。如果没有指定
.I n
就使用标准输出 (文件描述符 1)。如果文件不存在，它将被创建。
.PP
重定向的一般形式是：
.RS
.PP
[\fIn\fP]\fB>>\fP\fIword\fP
.RE
.PP
.SS Redirecting Standard Output and Standard Error
.PP
.B Bash
允许使用这种结构将标准输出和标准错误 (文件描述符 1 和 2) 重定向到以
.I word
扩展结果为名的文件中。
.PP
有两种重定向标准输出/标准错误的形式：
.RS
.PP
\fB&>\fP\fIword\fP
.RE
还有
.RS
\fB>&\fP\fIword\fP
.RE
.PP
两种形式中，推荐使用第一种。它与
.RS
.PP
\fB>\fP\fIword\fP 2\fB>&\fP1
.RE
在语义上等价。
.SS Here Documents
.PP
这种重定向使得 shell 从当前源文件读取输入，直到遇到仅包含
.I word
的一行 (并且没有尾部空白，trailing blanks) 为止。直到这一点的所有行被用作
命令的标准输入。
.PP
here-document 的格式是：
.RS
.PP
.nf
\fB
被忽略；必须用
.B \e
来引用字符
.BR \e ,
.BR $ ,
和
.BR ` .
.PP
如果重定向操作符是
.BR <<\- ,
那么所有前导的 tab 字符都被从输入行和包含
.IR delimiter
的行中删除。这样使得 shell 脚本中的 here-document 可以被更好地缩进。
.SS "Here Strings"
here-document 的变种，形式是
.RS
.PP
.nf
\fB<<<\fP\fIword\fP
.fi
.RE
.PP
\fIword\fP 被扩展，提供给命令作为标准输入。
.SS "Duplicating File Descriptors" (复制文件描述符)
.PP
重定向操作符
.RS
.PP
[\fIn\fP]\fB<&\fP\fIword\fP
.RE
.PP
用于复制文件描述符。如果
.I word
扩展为一个或多个数字，
.I n
代表的文件描述符将成为那个文件描述符的复制。如果
.I word
中的数字并未指定一个被用于读取的文件描述符，将产生一个重定向错误。如果
.I word
扩展为
.BR \- ,
文件描述符
.I n
将被关闭。如果没有指定
.I n，
将使用标准输入 (文件描述符 0)。
.PP
类似的，操作符
.RS