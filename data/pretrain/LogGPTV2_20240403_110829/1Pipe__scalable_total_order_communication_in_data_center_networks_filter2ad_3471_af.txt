One line of work leverages logically centralized coordination, e.g.,
centralized sequencers [18, 51, 54] or a token passed among senders
or receivers [36, 60, 78, 86]. As a result, it is challenging to scale
the system. Another line of work buffers messages at receivers
and builds a causality graph at receivers [63, 84], merges streams
deterministically or achieves agreement among receivers [17, 23,
53, 82]. This causes extra delay and network bandwidth overhead.
A third line of work assumes a synchronous network [64], but lossy
links and bad clocks with high skew violate correctness. In 1Pipe,
such components will slow down the whole system but correctness
Figure 16: Per-client throughput of a repli-
cated remote hash table.
is preserved. In 1Pipe, such components should be detected, and
affected hosts can use healthy nodes as proxy, where timestamps
are assigned at the proxy.
A fourth line of work, tree-based algorithms, addresses the trade-
off between efficiency and scalability [87]. At each non-leaf node,
multiple ordered streams of packets are merged into one ordered
stream, called deterministic merge [7, 46]. This usage of timestamp
and ordering is similar to 1Pipe while applied to other fields such
as network switches [49], multi-core processors [55], and sensor
networks [22]. However, it is not practical to implement determin-
istic merge in commodity network switches. First, switches in data
centers have small per-port buffer size [14]. Second, commodity
switches cannot reorder packets in priority queues according to
per-packet metadata [52, 92].
Network and system co-design. Recent years witness a trend
of co-designing distributed systems with programmable network
switches. Mostly Ordered Multicast [85] and NO-Paxos [68] use a
switch as a centralized sequencer or serialization point to achieve
totally ordered broadcast. Different from broadcast, 1Pipe provides
a scattering primitive and a scalable implementation. Eris [51]
proposes in-network concurrency control using switch as a cen-
tralized sequencer. NetChain [52], NetLock [99], NetPaxos [30],
and DAIET [88] offload important distributed middlewares to pro-
grammable switches. Omnisequencing [74] finds out that DCN
topology can provide causal (but not total order) message delivery.
9 CONCLUSION
We propose a causal and total order communication abstraction,
1Pipe, that delivers messages in sender’s clock time order with
restricted failure atomicity. 1Pipe achieves scalability and efficiency
by utilizing programmable data center networks to separate aggre-
gating order information from forwarding data packets. 1Pipe can
simplify and accelerate many applications, and we expect future
work to explore more. One limitation of 1Pipe is that it did not
consider Byzantine failure, and we leave the security problems to
future work.
ACKNOWLEDGEMENTS
We thank Cheng Li, Tianyi Cui, and Zhenyuan Ruan for the techni-
cal discussions. We thank our shepherd, Nathan Bronson, and other
anonymous reviewers for their valuable feedback and comments.
10-1100101248163264128256512Throughput (M txn/s)Number of Processes1PipeLockOCCNonTX 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 201e-61e-51e-41e-31e-22e-25e-21e-1Throughput (M txn/s)Packet Loss Probability1PipeLockOCCNonTX 0 500 1000 1500 2000 25001234Throughput (M op/s)Number of Replicas1Pipe/insertbase/insert1Pipe/lookupbase/lookup1Pipe: Scalable Total Order Communication in Data Center Networks
SIGCOMM ’21, August 23–28, 2021, Virtual Event, USA
REFERENCES
[1] [n. d.]. Arista 7060CX-32 and 7260CX-64. ([n. d.]). https://www.arista.com/en/
products/7060x-series.
[2] [n. d.]. Arista EOS. ([n. d.]). https://www.arista.com/en/products/eos.
[3] [n. d.]. Broadcom Tomahawk. ([n. d.]). https://www.broadcom.com/products/
ethernet-connectivity/switching/strataxgs/bcm56960-series.
[4] [n. d.]. Cavium XPliant Ethernet switch product family. ([n. d.]). http://www.
cavium.com/XPliant-Ethernet-Switch-Product-Family.html.
[5] [n. d.]. etcd: A distributed, reliable key-value store for the most critical data of
a distributed system. ([n. d.]). https://etcd.io
[6] 2013. Highly Accurate Time Synchronization with ConnectX-3 and TimeKeeper.
https://www.mellanox.com/related-docs/whitepapers/WP_Highly_
(2013).
Accurate_Time_Synchronization.pdf.
[7] Marcos Kawazoe Aguilera and Robert E Strom. 2000. Efficient atomic broad-
cast using deterministic merge. In Proceedings of the nineteenth annual ACM
symposium on Principles of distributed computing. ACM, 209–218.
[8] Mohammad Al-Fares, Alexander Loukissas, and Amin Vahdat. 2008. A Scalable,
Commodity Data Center Network Architecture. In Proceedings of the ACM
SIGCOMM 2008 Conference on Data Communication (SIGCOMM ’08). Association
for Computing Machinery, New York, NY, USA, 63–74. https://doi.org/10.1145/
1402958.1402967
[9] Mohammad Alizadeh, Tom Edsall, Sarang Dharmapurikar, Ramanan
Vaidyanathan, Kevin Chu, Andy Fingerhut, Vinh The Lam, Francis Matus,
Rong Pan, Navindra Yadav, et al. 2014. CONGA: Distributed congestion-aware
load balancing for datacenters. In Proceedings of the 2014 ACM conference on
SIGCOMM. 503–514.
[10] Mohammad Alizadeh, Albert Greenberg, David A Maltz, Jitendra Padhye,
Parveen Patel, Balaji Prabhakar, Sudipta Sengupta, and Murari Sridharan. 2010.
Data center tcp (dctcp). In Proceedings of the ACM SIGCOMM 2010 conference.
63–74.
[11] Mohammad Alizadeh, Shuang Yang, Milad Sharif, Sachin Katti, Nick McKeown,
Balaji Prabhakar, and Scott Shenker. 2013. pfabric: Minimal near-optimal data-
center transport. ACM SIGCOMM Computer Communication Review 43, 4 (2013),
435–446.
[12] Infiniband Trade Association et al. [n. d.]. RoCEv2, September 2014. ([n. d.]).
[13] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang, and Mike Paleczny.
2012. Workload analysis of a large-scale key-value store. In Proceedings of
the 12th ACM SIGMETRICS/PERFORMANCE joint international conference on
Measurement and Modeling of Computer Systems. 53–64.
[14] Wei Bai, Kai Chen, Shuihai Hu, Kun Tan, and Yongqiang Xiong. 2017. Congestion
Control for High-speed Extremely Shallow-buffered Datacenter Networks. In
Proceedings of the First Asia-Pacific Workshop on Networking. ACM, 29–35.
[15] Wei Bai, Shuihai Hu, Kai Chen, Kun Tan, and Yongqiang Xiong. 2020. One More
Config is Enough: Saving (DC) TCP for High-speed Extremely Shallow-buffered
Datacenters. In IEEE INFOCOM. 2007.
[16] Ken Birman. 1994. A response to Cheriton and Skeen’s criticism of causal and
totally ordered communication. ACM SIGOPS Operating Systems Review 28, 1
(1994), 11–21.
[17] Ken Birman and Thomas Joseph. 1987. Exploiting virtual synchrony in dis-
tributed systems. In Proceedings of the eleventh ACM Symposium on Operating
systems principles. 123–138.
[18] Kenneth Birman, Andre Schiper, and Pat Stephenson. 1991. Lightweight causal
and atomic group multicast. ACM Transactions on Computer Systems (TOCS) 9,
3 (1991), 272–314.
[19] Kenneth P Birman, Amr El Abbadi, Wally Dietrich, Thomas A Joseph, and
Thomas Raeuchle. 1984. An overview of the ISIS project. Technical Report.
Cornell University.
[20] Pat Bosshart, Dan Daly, Glen Gibb, Martin Izzard, Nick McKeown, Jennifer Rex-
ford, Cole Schlesinger, Dan Talayco, Amin Vahdat, George Varghese, et al. 2014.
P4: Programming protocol-independent packet processors. ACM SIGCOMM
Computer Communication Review 44, 3 (2014), 87–95.
[21] Jiaxin Cao, Rui Xia, Pengkun Yang, Chuanxiong Guo, Guohan Lu, Lihua Yuan,
Yixin Zheng, Haitao Wu, Yongqiang Xiong, and Dave Maltz. 2013. Per-packet
load-balanced, low-latency routing for clos-based data center networks. In
Proceedings of the ninth ACM conference on Emerging networking experiments
and technologies. 49–60.
[22] Suchetana Chakraborty, Sandip Chakraborty, Sukumar Nandi, and Sushanta
Karmakar. 2011. A reliable and total order tree based broadcast in wireless
sensor network. In Computer and Communication Technology (ICCCT), 2011 2nd
International Conference on. IEEE, 618–623.
[23] Tushar Deepak Chandra and Sam Toueg. 1996. Unreliable failure detectors for
reliable distributed systems. Journal of the ACM (JACM) 43, 2 (1996), 225–267.
[24] K Mani Chandy and Leslie Lamport. 1985. Distributed snapshots: Determining
global states of distributed systems. ACM Transactions on Computer Systems
(TOCS) 3, 1 (1985), 63–75.
[25] David R Cheriton and Dale Skeen. 1994. Understanding the limitations of causally
and totally ordered communication. Vol. 27. ACM.
[26] Brian F Cooper, Adam Silberstein, Erwin Tam, Raghu Ramakrishnan, and Russell
Sears. 2010. Benchmarking cloud serving systems with YCSB. In Proceedings of
the 1st ACM symposium on Cloud computing. ACM, 143–154.
[27] James C Corbett, Jeffrey Dean, Michael Epstein, Andrew Fikes, Christopher
Frost, Jeffrey John Furman, Sanjay Ghemawat, Andrey Gubarev, Christopher
Heiser, Peter Hochschild, et al. 2013. Spanner: Google’s globally distributed
database. ACM Transactions on Computer Systems (TOCS) 31, 3 (2013), 8.
[28] Kendall Correll, Nick Barendt, and Michael Branicky. 2005. Design consid-
erations for software only implementations of the IEEE 1588 precision time
protocol. In Conference on IEEE, Vol. 1588. 11–15.
[29] THE TRANSACTION PROCESSING COUNCIL. [n. d.]. TPC-C Benchmark V5.
([n. d.]). http://www.tpc.org/tpcc/
[30] Huynh Tu Dang, Daniele Sciascia, Marco Canini, Fernando Pedone, and Robert
Soulé. 2015. Netpaxos: Consensus at network speed. In Proceedings of the 1st
ACM SIGCOMM Symposium on Software Defined Networking Research. 1–7.
[31] Xavier Défago, André Schiper, and Péter Urbán. 2004. Total order broadcast and
multicast algorithms: Taxonomy and survey. ACM Computing Surveys (CSUR)
36, 4 (2004), 372–421.
[32] Akon Dey, Alan Fekete, Raghunath Nambiar, and Uwe Rohm. 2014. YCSB+ T:
Benchmarking web-scale transactional databases. In Data Engineering Work-
shops (ICDEW), 2014 IEEE 30th International Conference on. IEEE, 223–230.
[33] Advait Dixit, Pawan Prakash, Y Charlie Hu, and Ramana Rao Kompella. 2013.
On the impact of packet spraying in data center networks. In 2013 Proceedings
IEEE INFOCOM. IEEE, 2130–2138.
[34] Aleksandar Dragojević, Dushyanth Narayanan, Orion Hodson, and Miguel
Castro. 2014. FaRM: Fast remote memory. In Proceedings of the 11th USENIX
Conference on Networked Systems Design and Implementation. 401–414.
[35] Aleksandar Dragojević, Dushyanth Narayanan, Edmund B Nightingale, Matthew
Renzelmann, Alex Shamis, Anirudh Badam, and Miguel Castro. 2015. No compro-
mises: distributed transactions with consistency, availability, and performance.
In Proceedings of the 25th symposium on operating systems principles. ACM,
54–70.
[36] Richard Ekwall, André Schiper, and Péter Urbán. 2004. Token-based atomic
broadcast using unreliable failure detectors. In Reliable Distributed Systems, 2004.
Proceedings of the 23rd IEEE International Symposium on. IEEE, 52–65.
[37] Daniel Firestone, Andrew Putnam, Sambhrama Mundkur, Derek Chiou, Alireza
Dabagh, Mike Andrewartha, Hari Angepat, Vivek Bhanu, Adrian Caulfield, Eric
Chung, et al. 2018. Azure accelerated networking: Smartnics in the public cloud.
In 15th {USENIX} Symposium on Networked Systems Design and Implementation
({NSDI} 18). 51–66.
[38] Michael J Fischer, Nancy A Lynch, and Michael S Paterson. 1985. Impossibility
of distributed consensus with one faulty process. Journal of the ACM (JACM)
32, 2 (1985), 374–382.
[39] Peter X Gao, Akshay Narayan, Gautam Kumar, Rachit Agarwal, Sylvia Rat-
nasamy, and Scott Shenker. 2015. phost: Distributed near-optimal datacenter
transport over commodity network fabric. In Proceedings of the 11th ACM Con-
ference on Emerging Networking Experiments and Technologies. 1–12.
[40] Yilong Geng, Shiyu Liu, Zi Yin, Ashish Naik, Balaji Prabhakar, Mendel Rosen-
blum, and Amin Vahdat. 2018. Exploiting a Natural Network Effect for Scalable,
Fine-grained Clock Synchronization. In 15th USENIX Symposium on Networked
Systems Design and Implementation (NSDI 18). USENIX Association, 81–94.
[41] Kourosh Gharachorloo, Daniel Lenoski, James Laudon, Phillip Gibbons, Anoop
Gupta, and John Hennessy. 1990. Memory consistency and event ordering in
scalable shared-memory multiprocessors. Vol. 18. ACM.
[42] Albert Greenberg. 2015. SDN for the Cloud. In Keynote in the 2015 ACM Confer-
ence on Special Interest Group on Data Communication.
[43] Albert Greenberg, James R Hamilton, Navendu Jain, Srikanth Kandula,
Changhoon Kim, Parantap Lahiri, David A Maltz, Parveen Patel, and Sudipta
Sengupta. 2009. VL2: a scalable and flexible data center network. In ACM
SIGCOMM computer communication review, Vol. 39. ACM, 51–62.
[44] Chuanxiong Guo, Lihua Yuan, Dong Xiang, Yingnong Dang, Ray Huang, Dave
Maltz, Zhaoyi Liu, Vin Wang, Bin Pang, Hua Chen, et al. 2015. Pingmesh: A
large-scale system for data center network latency measurement and analysis.
ACM SIGCOMM Computer Communication Review 45, 4 (2015), 139–152.
[45] Vladimir Gurevich. 2017. Programmable Data Plane at Terabit Speeds. P4
Workshop (2017).
[46] Vassos Hadzilacos and Sam Toueg. 1994. A modular approach to fault-tolerant
broadcasts and related problems. Technical Report. Cornell University.
[47] Keqiang He, Eric Rozner, Kanak Agarwal, Wes Felter, John Carter, and Aditya
Akella. 2015. Presto: Edge-based load balancing for fast datacenter networks.
ACM SIGCOMM Computer Communication Review 45, 4 (2015), 465–478.
[48] Shuihai Hu, Wei Bai, Gaoxiong Zeng, Zilong Wang, Baochen Qiao, Kai Chen,
Kun Tan, and Yi Wang. 2020. Aeolus: A Building Block for Proactive Transport
in Datacenters. In Proceedings of the Annual conference of the ACM Special Interest
Group on Data Communication on the applications, technologies, architectures,
and protocols for computer communication. 422–434.
[49] Ofer Iny. 2005. Method and system for switching packets. US Patent No.
US7525995B2 (2005).
SIGCOMM ’21, August 23–28, 2021, Virtual Event, USA
Bojie Li, Gefei Zuo, Wei Bai, and Lintao Zhang
[50] Van Jacobson, Robert Braden, and David Borman. 1992. TCP extensions for
high performance. (1992).
[51] Ellis Michael Jialin Li and Dan R. K. Ports. 2017. Eris: Coordination-Free Con-
sistent Transactions Using In-Network Concurrency Control. In Proceedings of
the 26th Symposium on Operating Systems Principles. ACM.
[52] Xin Jin, Xiaozhou Li, Haoyu Zhang, Nate Foster, Jeongkeun Lee, Robert Soulé,
Changhoon Kim, and Ion Stoica. 2018. NetChain: Scale-Free Sub-RTT Coordi-
nation. In 15th USENIX Symposium on Networked Systems Design and Implemen-
tation (NSDI 18). USENIX Association, 35–49.
[53] Flavio P Junqueira, Benjamin C Reed, and Marco Serafini. 2011. Zab: High-
performance broadcast for primary-backup systems. In 2011 IEEE/IFIP 41st Inter-
national Conference on Dependable Systems & Networks (DSN). IEEE, 245–256.
[54] M Frans Kaashoek and Andrew S Tanenbaum. 1996. An evaluation of the
Amoeba group communication system. In Proceedings of 16th International
Conference on Distributed Computing Systems. IEEE, 436–447.