containment [3,15,34]. Other approaches have focused on detecting drive-by
downloads by employing the properties of HTTP redirections to identify mali-
cious behavior [38,45]. Dynamic analyses have also been used to detect drive-by
downloads and web-hosted malware [11,12,36]. Li et al. [31] investigated the
advertisement delivery process to detect malvertising by automatically gener-
ating detection rules. Web tripwires [43] were proposed to detect in-ﬂight page
changes performed by ISPs to inject advertisements.
6.2 Browser Extension Security
Browser extension security has recently become a hot topic. The Chromium
extension framework substantially improved the ability of users to limit the
432
S. Arshad et al.
amount of privilege conferred upon potentially vulnerable extensions
[7], and
follow-on work has studied the success of this approach [18,33]. Other work has
broadly studied malicious extensions that attempt to exﬁltrate sensitive user
data [32,35]. For instance, Arjun et al. showed that many extensions in the
Chrome Web Store are over-privileged for the actual services they purport to
provide [21].
A recent line of work has focused on the problem of ad injection via browser
extensions. Thomas et al. [46] proposed a detection methodology in which,
they used a priori knowledge of a legitimate DOM structure to report the
deviations from that structure as potential ad injections. However, this app-
roach is not purely client-side and requires cooperation from content publishers.
Expector [48] inspects a browser extension and determines if it injects advertise-
ments into websites. Hulk [28] is a dynamic analysis system that automatically
detects Chrome extensions that perform certain types of malicious behaviors,
including ad injection. WebEval [26] is an automatic system that considers an
extension’s behaviors, code, and author reputation to identify malicious exten-
sions distributed through the Chrome Web Store.
In contrast, our work does not attempt to automatically classify extensions
that engage in content modiﬁcation as malicious or not, but rather focuses on
enabling users to make informed decisions as to whether extensions engage in
desirable behavior or not.
6.3 Provenance Tracking
A signiﬁcant amount of work has examined the use of provenance in various
contexts. For instance, one line of work has studied the collection of provenance
information for generic applications up to entire systems [19,24,42]. However,
to our knowledge, no system considers the provenance of ﬁne-grained web con-
tent comprising the DOM. Provenance tracking is also related to information
ﬂow control (IFC), for which a considerable body of work exists at the operating
system level [16,29,49], the language level [9,40], as well as the web [20,25]. In
contrast to our work, IFC is focused more on enforcing principled security guar-
antees for new applications rather than tracking and indicating data provenance
for existing ones.
Numerous systems have examined the use of dynamic taint analysis, a related
concept to provenance. Some prior work [8,17] focuses on tracking information
ﬂow within the browser, Sabre [14] detects whether extensions access sensitive
information within the browser, and DSI enforcement [41] defends against XSS
attacks by preserving the integrity of document structure in the browser. While
there is certainly an overlap between dynamic taint analysis and provenance,
taint analysis is most often focused on simple reachability between sources and
sinks, while provenance is concerned with precisely tracking principals that inﬂu-
enced data.
Finally, there is a line of work that examines provenance on the web. Some
prior work [22,23,39] concerns coarse-grained ontologies for describing the ori-
gins of data on the web, and does not consider provenance at a ﬁne-grained
Identifying Extension-Based Ad Injection
433
scale within the browser. ESCUDO [27] only considers the principals that can
be controlled by web applications, and it does not handle plug-ins and browser
extensions. LeakTracker [47] performs principal-based tracking on web pages
to study privacy violations related to JavaScript libraries, but it only tracks
injection of scripts into the page, and does not provide any provenance informa-
tion for other types of DOM elements. Excision [6] is the closest work to ours,
which tracks inclusions of diﬀerent resources in web pages and blocks inclusion
of malicious resources by analyzing inclusion sequences on the page. Although
the techniques are similar, they are used for diﬀerent purposes. Excision discards
the injection of DOM elements that do not reference remote content (e.g., div),
and aside from source attributes, that does not track modiﬁcations to DOM ele-
ments. However, OriginTracer identiﬁes all types of DOM modiﬁcation in the
page, and instead of blocking content originating from extensions, it highlights
them in the context of the web page.
7 Conclusion
In this paper, we introduced ﬁne-grained web content provenance tracking
and demonstrated its use for identifying unwanted third-party content such as
injected advertisements. We evaluated a prototype implementation, a modiﬁed
version of Chromium we call OriginTracer, through a user study that demon-
strated a statistically signiﬁcant improvement in the ability of users to iden-
tify unwanted third-party content. Our performance evaluation shows a modest
overhead on a large representative sample of popular websites, while our user
experiments indicate that users are willing to trade oﬀ a slight decrease in per-
formance for more insight into the sources of web content that they browse. We
also performed a comprehensive study on the content modiﬁcations performed
by ad-injecting extensions in the wild.
In future work, we plan to explore other uses of provenance on the web. Due
to the highly interconnected structure of the web and the oftentimes obscure
nature of its trust relationships, we believe that surfacing this information in
the form of provenance is a generally useful capability, and can be applied in
other novel ways in order to lead to safer and more informed web browsing.
Finally, we plan to open source our prototype implementation in the hopes that
it will be useful to the wider research community.
References
1. The ad injection economy. http://googleonlinesecurity.blogspot.com/2015/05/
new-research-ad-injection-economy.html
2. Adblock Plus. https://adblockplus.org/
3. ADsafe. http://www.adsafe.org/
4. Ghostery. https://www.ghostery.com/en/
5. SLOCCount. http://www.dwheeler.com/sloccount/
434
S. Arshad et al.
6. Arshad, S., Kharraz, A., Robertson, W.: Include me out: in-browser detection
of malicious third-party content inclusions. In: Financial Cryptography and Data
Security (FC) (2016)
7. Barth, A., Jackson, C., Reis, C.: The security architecture of the chromium browser.
Technical report (2008). The Google Chrome Team
8. Bauer, L., Cai, S., Jia, L., Passaro, T., Stroucken, M., Tian, Y.: Run-time mon-
itoring and formal analysis of information ﬂows in Chromium. In: Network and
Distributed System Security Symposium (NDSS) (2015)
9. Chong, S., Vikram, K. and Myers, A.C.: SIF: enforcing conﬁdentiality and integrity
in web applications. In: USENIX Security Symposium (2007)
10. Coldewey, D.: Marriott puts an end to shady ad injection service (2012).
http://techcrunch.com/2012/04/09/marriott-puts-an-end-to-shady-ad-injection-
service/
11. Cova, M., Kruegel, C., Vigna, G.: Detection and analysis of drive-by-download
attacks and malicious JavaScript code. In: International World Wide Web Confer-
ence (WWW) (2010)
12. Dewald, A., Holz, T., Freiling, F.C.: ADSandbox: sandboxing JavaScript to ﬁght
malicious websites. In: Symposium on Applied Computing (SAC) (2010)
13. Rachna Dhamija, J.D., Tygar, M.H.: Why phishing works. In: Proceedings of the
SIGCHI Conference on Human Factors in Computing Systems (CHI) (2006)
14. Dhawan, M., Ganapathy, V.: Analyzing information ﬂow in JavaScript-based
browser extensions. In: Annual Computer Security Applications Conference
(ACSAC) (2009)
15. Dong, X., Tran, M., Liang, Z., Jiang, X.: AdSentry: comprehensive and ﬂexible
conﬁnement of JavaScript-based advertisements. In: Annual Computer Security
Applications Conference (ACSAC) (2011)
16. Efstathopoulos, P., Krohn, M., VanDeBogart, S., Frey, C., Ziegler, D., Kohler, E.,
Mazieres, D., Kaashoek, F., Morris, R.: Labels and event processes in the Asbestos
operating system. In: ACM Symposium on Operating Systems Principles (SOSP)
(2005)
17. Egele, M., Kruegel, C., Kirda, E., Yin, H., Song, D.: Dynamic spyware analysis.
In: USENIX Annual Technical Conference (ATC) (2007)
18. Felt, A.P., Greenwood, K., Wagner, D.: The eﬀectiveness of application per-
missions. In: USENIX Conference on Web Application Development (WebApps)
(2011)
19. Gehani, A., Tariq, D.: SPADE: support for provenance auditing in distributed
environments. In: Narasimhan, P., Triantaﬁllou, P. (eds.) Middleware 2012. LNCS,
vol. 7662, pp. 101–120. Springer, Heidelberg (2012)
20. Giﬃn, D.B., Levy, A., Stefan, D., Terei, D., Mazieres, D., Mitchell, J.C., Russo, A.:
Hails: protecting data privacy in untrusted web applications. In: USENIX Sympo-
sium on Operating Systems Design and Implementation (OSDI) (2012)
21. Guha, A., Fredrikson, M., Livshits, B., Swamy, N.: Veriﬁed security for browser
extensions. In: IEEE Symposium on Security and Privacy (Oakland) (2011)
22. Harth, A., Polleres, A., Decker, S.: Towards a social provenance model for the web.
In: Workshop on Principles of Provenance (PrOPr) (2007)
23. Hartig, O.: Provenance information in the web of data. In: Workshop on Linked
Data on the Web (LDOW) (2009)
24. Hasan, R., Sion, R., Winslett, M.: SPROV 2.0: a highly conﬁgurable platform-
independent library for secure provenance. In: ACM Conference on Computer and
Communications Security (CCS) (2009)
Identifying Extension-Based Ad Injection
435
25. Hicks, B., Rueda, S., King, D., Moyer, T., Schiﬀman, J., Sreenivasan, Y., McDaniel,
P., Jaeger, T.: An architecture for enforcing end-to-end access control over web
applications. In: ACM Symposium on Access Control Models and Technologies
(SACMAT) (2010)
26. Jagpal, N., Dingle, E., Gravel, J.P., Mavrommatis, P., Provos, N., Rajab, M.A.,
Thomas, K.: Trends and lessons from three years ﬁghting malicious extensions. In:
USENIX Security Symposium (2015)
27. Jayaraman, K., Du, W., Rajagopalan, B., Chapin, S.J.: ESCUDO: a ﬁne-grained
protection model for web browsers. In: 30th IEEE International Conference on
Distributed Computing Systems (ICDCS) (2010)
28. Kapravelos, A., Grier, C., Chachra, N., Kruegel, C., Vigna, G., Paxson, V.: Hulk:
eliciting malicious behavior in browser extensions. In: USENIX Security Sympo-
sium (2014)
29. Krohn, M., Yip, A., Brodsky, M., Natan Cliﬀer, M., Kaashoek, F., Kohler, E.,
Morris, R.: Information ﬂow control for standard os abstractions. In: Symposium
on Operating Systems Principles (SOSP) (2007)
30. Kumparak, G.: Real evil: ISP inserted advertising. http://techcrunch.com/2007/
06/23/real-evil-isp-inserted-advertising/ (2007)
31. Li, Z., Zhang, K., Xie, Y,. Yu, F., Wang, X.: Knowing your enemy: understanding
and detecting malicious web advertising. In: ACM Conference on Computer and
Communications Security (CCS) (2012)
32. Li, Z., Wang, X.-F., Choi, J.Y.: SpyShield: preserving privacy from spy add-ons.
In: Kruegel, C., Lippmann, R., Clark, A. (eds.) RAID 2007. LNCS, vol. 4637, pp.
296–316. Springer, Heidelberg (2007)
33. Liu, L., Zhang, X., Yan, G., Chen, S.: Chrome extensions: threat analysis and coun-
termeasures. In: Network and Distributed System Security Symposium (NDSS)
(2012)
34. Ter Louw, M., Ganesh, K.T., Venkatakrishnan, V.N.: AdJail: practical enforce-
ment of conﬁdentiality and integrity policies on web advertisements. In: USENIX
Security Symposium (2010)
35. Ter Louw, M., Lim, J.S., Venkatakrishnan, V.N.: Enhancing web browser security
against malware extensions. J. Comput. Virol. 4(3), 179–195 (2008)
36. Lu, L., Yegneswaran, V., Porras, P., Lee, W.: BLADE: An attack-agnostic approach
for preventing drive-by malware infections. In: ACM Conference on Computer and
Communications Security (CCS) (2010)
37. Marvin, G.: Google study exposes “tangled web” of companies proﬁting from ad
injection (2015). http://marketingland.com/ad-injector-study-google-127738
38. Mekky, H., Torres, R., Zhang, Z.L., Saha, S., Nucci, A.: Detecting malicious HTTP
redirections using trees of user browsing activity. In: Annual IEEE International
Conference on Computer Communications (INFOCOM) (2014)
39. Moreau, L.: The foundations for provenance on the web. Found. Trends Web Sci.
2(2–3), 99–241 (2010)
40. Myers, A.C.: JFlow: practical mostly-static information ﬂow control. In: Sympo-
sium on Principles of Programming Languages (POPL) (1999)
41. Nadji, Y., Saxena, P., Song, D.: Document structure integrity: a robust basis for
cross-site scripting defense. In: Network and Distributed System Security Sympo-
sium (NDSS) (2009)
42. Pohly, D.J., McLaughlin, S., Butler, K.: Hi-Fi: collecting high-ﬁdelity whole-system
provenance. In: Annual Computer Security Applications Conference (ACSAC)
(2012)
436
S. Arshad et al.
43. Reis, C., Gribble, S.D., Kohno, T., Weaver, N.C.: Detecting in-ﬂight page changes
with web Tripwires. In: USENIX Symposium on Networked Systems Design and
Implementation (NSDI) (2008)
44. Selenium Contributors. Selenium: Web browser automation. http://www.
seleniumhq.org/
45. Stringhini, G., Kruegel, C., Vigna, G.: Shady paths: leveraging surﬁng crowds to
detect malicious web pages. In: ACM Conference on Computer and Communica-
tions Security (CCS) (2013)
46. Thomas, K., Bursztein, E., Grier, C., Ho, G., Jagpal, N., Kapravelos, A., McCoy,
D., Nappa, A., Paxson, V., Pearce, P., Provos, N., Rajab, M.A.: Ad injection at
scale: assessing deceptive advertisement modiﬁcations. In: IEEE Symposium on
Security and Privacy. IEEE, Oakland (2015)
47. Tran, M., Dong, X., Liang, Z., Jiang, X.: Tracking the trackers: fast and scalable
dynamic analysis of web content for privacy violations. In: Bao, F., Samarati, P.,
Zhou, J. (eds.) ACNS 2012. LNCS, vol. 7341, pp. 418–435. Springer, Heidelberg
(2012)
48. Xing, X., Meng, W., Weinsberg, U., Sheth, A., Lee, B., Perdisci, R., Lee, W.:
Unraveling the relationship between ad-injecting browser extensions and malver-
tising. In: International World Wide Web Conference (WWW) (2015)
49. Zeldovich, N., Boyd-Wickizer, S., Mazieres, D.: Security distributed systems with
information ﬂow control. In: USENIX Symposium on Networked Systems Design
and Implementation (NSDI) (2008)