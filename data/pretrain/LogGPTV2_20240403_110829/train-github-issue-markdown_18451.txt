  * [√] I have searched the issues of this repository and believe that this is not a duplicate.
  * [√] I have checked the FAQ of this repository and believe that this is not a duplicate.
### Environment
  * Dubbo version: 2.7.6-2.7.8
  * Operating System version: Centos 3.10.0-862.el7.x86_64
  * Java version: 1.8.0
### Steps to reproduce this issue
  1. 设置虚IP  
有一台机器因为某些原因，在eth0上设置了虚IP（10.19.15.115,真实IP是10.19.15.111）。
  * 执行 ip a输出如下：
    ...
        eth0:  mtu 1500 qdisc mq state UP group default qlen 1000
        link/ether xx:xx:xx:xx:dc:cc brd ff:ff:ff:ff:ff:ff
        inet 10.19.15.111/22 brd 10.19.15.255 scope global eth0
           valid_lft forever preferred_lft forever
        inet 10.19.15.115/32 scope global eth0
           valid_lft forever preferred_lft forever
    ...
  * 执行 ifconfig 输出如下：
    eth0: flags=4163  mtu 1500
            inet 10.19.15.111  netmask 255.255.252.0  broadcast 10.19.15.255
            ether xx:xx:xx:xx:dc:cc  txqueuelen 1000  (Ethernet)
  2. 编写代码
    public static void main(String[] args) {
            InetAddress localAddress = NetUtils.getLocalAddress();
            System.out.println(localAddress);
    }
  3. 运行程序
Pls. provide [GitHub address] to reproduce this issue.
### Expected Result
`/10.19.15.111`
### Actual Result
What actually happens?
`/10.19.15.115`
此问题在2.7.5以及之前是能够获取期望的正确的IP的。  
因此我认为 #5795 引入了一个 Breakable
change：让Netutils没有机会调用`java.net.InetAddress#getLocalHost()`从hostname获取对应的IP地址：
    Returns the address of the local host. This is achieved by retrieving
         * the name of the host from the system, then resolving that name into
         * an {@code InetAddress}.
    java.net.InetAddress#getLocalHost()
例如改成如下方式？（2.7.5以及以前是先调用`InetAddress.getLocalHost()`的）
     private static InetAddress getLocalAddress0() {
            InetAddress localAddress = null;
         //to provide a chance to retrieve ip from hostname. maybe add an system property like 'dubbo.network.hostname.first'
         if ("true".equals(System.getProperty("dubbo.network.hostname.first"))) {       
            try {
                localAddress = InetAddress.getLocalHost();
                Optional addressOp = toValidAddress(localAddress);
                if (addressOp.isPresent()) {
                    return addressOp.get();
                }
            } catch (Throwable e) {
                logger.warn(e);
            }
          }
         //以上代码放在后面可能没有机会执行了。
            // @since 2.7.6, choose the {@link NetworkInterface} first
            try {
                NetworkInterface networkInterface = findNetworkInterface();
                Enumeration addresses = networkInterface.getInetAddresses();
                while (addresses.hasMoreElements()) {
                    Optional addressOp = toValidAddress(addresses.nextElement());
                    if (addressOp.isPresent()) {
                        try {
                            if (addressOp.get().isReachable(100)) {
                                return addressOp.get();
                            }
                        } catch (IOException e) {
                            // ignore
                        }
                    }
                }
            } catch (Throwable e) {
                logger.warn(e);
            }
            return localAddress;
        }