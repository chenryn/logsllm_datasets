Empirical Out−degree
Algebraic decay
Log−normal tail
Empirical In−degree
Power−law fit
10−6
10−8
100
101
Degree, k
102
In- and out-degrees for weeks 34-2009
Figure 3:
along with parametric distributions that ﬁt.
In-
degrees were ﬁt using PL (exponent 2.90), while out-
degrees’ bulk were ﬁt using algebraic decay (expo-
nent 0.744) and tail with LN (mean µ = 1.66 and
standard deviation σ = 1.135).
4.3 Relevant Metrics for Modeling Growth
As discussed in Section 3.3, certain key metrics are needed
to model gifting UAGs. These metrics will serve as input
parameters for our modeling algorithm.
Probability of Sending to New Targets (α): Table 1 shows
the probability of sending hearts to a new user ranges from
0.41 to 0.73 in weekly UAGs. Also, users are more likely to
target new users in lower activity periods.
Probability a User Remains Inactive (β): Our measure-
ments show (Table 1) the probability a randomly selected
user is inactive throughout a week is in a very narrow range
between 0.85 and 0.91 for iHeart, i.e., it is more or less stable
throughout iHeart’s lifetime.
Active User Duration (dx): Our measurements show be-
tween 70% to 75% of active users in a given week are only
active for a day, and this percentage decays approximately as
a power law with number of days active (e.g., only between
1.5% and 2% users are active for all seven days). Table 1
shows the weekly PL exponent of this distribution (γd).
Daily ARs Sent (mx): Our measurements show that the
distribution of ARs generated per day follows a power law
for iHeart. Our algorithm uses the exponent, γm, of this PL
distribution, and its values are shown in Table 1.
Additionally, Table 1 shows measurements for our exter-
nal constraint on the seeding users (N0) for a given week.
We observe the lowest proportion of seeding users at peak
activity, and highest proportion during lowest user activity.
Week 45-2009 (Thanksgiving) is an exception since only four
days of the week see high user activity, followed by three days
of very low user activity (Figure 1(b)) as the Thanksgiving
weekend kicked in.
4.4 Fitting Graph Models to iHeart UAGs
Existing research on growth processes on OSNs has yielded
viable candidate models for friendship graphs [19]. We tested
some of the more promising algorithms for our applications,
in particular the original versions of the Nearest Neighbor,
Watts-Strogatz, Barabasi-Albert and Forest Fire algorithms.
All of these algorithms rely mainly on preferential attach-
ment, and do not distinguish between behaviors of diﬀerent
types of nodes resulting in out-degree structures that are not
representative of our UAGs. However, these algorithms do
provide decent approximations of in-degrees for our UAGs.
This is evident from the KS statistic values measured using
synthetic graphs from these models against all weekly de-
gree distributions from iHeart. Example KS statistic values
for the Nearest Neighbor and Forest Fire algorithms against
the week 34-2009 UAG from iHeart are shown in Table 7.5
Figure 4 shows the degree structures that resulted in the
lowest average KS values from these models against those
from the week 34-2009 UAG for iHeart.
5. MODELING GIFTING APPLICATIONS
The algorithm described in this section produces synthetic
graphs with degree structures similar to UAGs for our gift-
ing applications while preserving low clustering of nodes. We
will show how our algorithm succeeds in capturing the dif-
ference in in- and out-degree distributions, which were not
reproduced by previous models. We also provide steady-
state equations (Section 5.4) for the synthetic distributions
as a means to gauge user activity levels on gifting applica-
tions without running possibly time-consuming simulations.
5.1 Our UAG Growth Model
We have shown our UAGs exhibit similar structure across
diﬀerent weekly periods in terms of low clustering of nodes,
and class of distribution functions that approximate the real
degree distributions. However, the parameter values for
these distributions that best ﬁt the data diﬀer signiﬁcantly
from week to week. This variability in UAGs must be cap-
tured by our algorithmic model. The basics of our growth
model are as follows:
Our UAG growth model operates at discrete timesteps t,
where each timestep represents a day of user activity. Let
Gt denote the graph at the beginning of timestep t. The
graph G0 is a set of N0 isolated nodes, which correspond
to initial seeding users. Seeding users send ARs in each
turn they are active. They send ARs to new users (i.e., ‘re-
cruit’ them) with probability α, and to existing users cho-
sen preferentially by in-degrees otherwise. When a user is
recruited, with probability β she will choose to remain in-
active throughout the process, and otherwise will be active
at the beginning of the next timestep. Each user is assigned
a ﬁxed duration and daily output of ARs. The duration dx
of user x corresponds to the number of timesteps x is ac-
tive, and the per-timestep output mx of x corresponds to
the number of ARs sent by x daily. After 7 timesteps, the
resulting synthetic graph G7 is produced. The structure of
G7 should be comparable to our UAGs.
Algorithm 1 shows the pseudocode for our UAG growth
model. This algorithm uses four input parameters (α, β, γd
and γm as described in Section 3.3), as well as two exter-
nal constraints M and N0. In the pseudocode, IPL(γ,t) and
5The L metric is deﬁned in Section 5.2.
474100
10−2
)
k
(
P
10−4
10−6
10−8
100
100
10−2
)
k
(
P
10−4
Week 34−2009
Forest Fire
Nearest Neighbor
101
Degree, k
102
Week 34−2009
Forest Fire
Nearest Neighbor
10−6
10−8
100
101
Degree, k
102
(a) In-degree distribution comparison.
(b) Out-degree distribution comparison.
Figure 4: Visual comparison of degree structures for Nearest Neighbor, Forest Fire algorithms with the week
34-2009 UAG from iHeart.
RPL(γ,t) are integer- and real-valued PL distributed ran-
dom variables (respectively) of exponent γ with a cut-oﬀat
t. Moreover, the variable actx is the number of timesteps a
user has previously been active, and diffx is the diﬀerence
between )mx*dx and the ultimate out-degree )mydy* of x.
5.2 Synthetic vs. Empirical UAGs
We implemented Algorithm 1 in Python and tested it on
all 10 weeks of iHeart, iSmile and Hugged user activity. How-
ever, for brevity’s sake, we only present results of simula-
tions using UAGs from weeks 34-2009, 50-2009, 26-2010 for
iHeart, and week 34-2009 for iSmile and Hugged.
We evaluate our simulated graphs’ degree structures us-
ing two goodness of ﬁt measures. In Section 4.2 we used the
KS statistic to evaluate our degree distribution ﬁts. How-
ever, the KS metric does not capture variance in tails as
accurately as, say, the chi-squared metric. Therefore, we
use an additional quantity we call L, which is analogous to
chi-square on a log scale. Given two positive, integer-valued
random variables X and Y , we deﬁne:
L(X, Y ) =
∞Xk=1
[log Pr(X = k) − log Pr(Y = k)]2 log(
k + 1
k
)
Note that log( k+1
k ) = log(k + 1) − log(k). Hence L can be
viewed as a discrete equivalent of the L2 measure d(f, g) =
R ((f(x) − g(x))2dx) on a log-log scale.
Table 8 shows the KS and L values for our simulations
using the 4-parameter model that is Algorithm 1, and Fig-
ure 5 shows the plots for the same. The KS and L values
suggest the empirical degree structure is reasonably well-
modeled in the ‘typical’ week represented by week 34-2009.
For comparison, note the signiﬁcantly larger Lout values in
Table 7 for out-degree distributions generated by the For-
est Fire and Nearest Neighbor models for week 34-2009 on
iHeart. The larger Lout values demonstrate that Algorithm
1 performs signiﬁcantly better than either Forest Fire or
Nearest Neighbor in modeling out-degree distributions for
our applications. Furthermore, Lin values in Tables 8 and 7
show that Algorithm 1 signiﬁcantly outperforms both For-
est Fire and Nearest Neighbor algorithms for in-degrees as
well. Given the simplicity of the attachment rule used in our
model, the fact that the in-degree distributions are captured
so well is surprising. This is evidence that the dynamics of
the real system may be similar to the ‘Preferential Attach-
ment with recruitment’ dynamics in our model.
Our simulations using the 4-parameter model, however,
result in synthetic graphs with comparatively large L values
for the peak (week 50-2009) and post-peak (week 26-2010)
periods for iHeart. This is a result of our inability to measure
the degree of preference a user employs when sending ARs.
Occurrences such as this are due to the inability of simple
metrics to capture behavior of users in social graphs [19]. To
remedy this, we introduce two additional parameters and re-
fer to this as the 6-parameter version of the model shown
by Algorithm 1. The 6-parameter model is identical to the
4-parameter version in all aspects except the choice of the
Active User Duration dx and Daily ARs Sent mx. In the
6-parameter model, these are approximated by LN distribu-
tions rather than PL distributions. LN distributions require
two parameters whereas PL distributions only required one,
so that the total number of parameters becomes 6.
Table 8 shows the L and KS values for our UAGs using
the 6-parameter model. Our 6-parameter model simulations
show that in some cases the error measurements actually
grow larger compared to our 4-parameter model, but only
slightly so. On the other hand, some of the error in the
measurements can be dramatically reduced (out-degrees for
iHeart).
In week 50-2009, Lout drops from 18.08 to 0.62
when the 6-parameter model is used, and in week 26-2010 it
drops from 7.75 to 1.44. An example resulting distribution
using the 6-parameter model is shown in Figure 6.
Furthermore, as mentioned in Section 4.1, our UAGs ex-
hibit very low clustering of nodes. Our UAG growth model’s
synthetic graphs similarly exhibit little or no clustering of
nodes with CCs less than 0.0005. Our synthetic graphs also
consist of connected components of size distributions similar
to our UAGs. That is, more than 90% of users belong to one
connected component, and the second largest component is
of negligible size. We provide proof of the disconnectedness
of our model’s synthetic UAGs in Section 5.4.
5.3 Observations for our Growth Model
By demonstrating our algorithm works well on three gift-
ing applications, we have shown it is possible to model UAGs
for a class of social applications. By decoupling in- and out-
degrees and recognizing diﬀerent types of users, our model
provides a very close approximation of degree structures that
result from use of the AR growth mechanism. As in our em-
pirical UAGs our model produces disconnected graphs such
that most nodes belong to one connected component. Our
synthetic graphs also exhibit little to no clustering of nodes.
475100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree
101
Degree, k
102
103
100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree
101
Degree, k
102
103
100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree
101
Degree, k
102
103
(a) Week 34-2009 for iHeart.
(b) Week 50-2009 for iHeart.
(c) Week 26-2010 for iHeart.
100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree
101
Degree, k
102
100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree
101
Degree, k
102
(d) Week 34-2009 for iSmile.
(e) Week 34-2009 for Hugged.
Figure 5: Simulated degree structures with 4 parameters.
App.
iHeart
Period
34-2009
50-2009
26-2010
Hugged 34-2009
iSmile
34-2009
4 Parameter Model
6 Parameter Model
KSin
0.002
0.01
0.0067
0.0001
9.6e-005
Lin
0.77
2.07
3.68
0.27
0.38
KSout
0.002
0.01
0.0067
0.0001
9.6e-005
Lout
2.07
18.08
7.75
1.1
1.17
KSin
0.004
0.002
0.0069
0.0003
0.0002
Lin KSout Lout
0.69
1.5
0.62
4.23
3.12
1.44
2.03
0.56
0.63
1.78
0.004
0.002
0.007
0.0005
0.0003
Table 8: Error measurements for in-degree and out-degree for the weekly UAGs.
100
10−2
)
k
(
P
10−4
10−6
10−8
100
Empirical In−degree
Empirical Out−degree
Simulated In−degree
Simulated Out−degree