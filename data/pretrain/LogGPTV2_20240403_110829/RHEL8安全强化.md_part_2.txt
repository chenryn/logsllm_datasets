安全管理员的所起到的效果取决于使用的工具及自己所具有的知识。使用目前任何一个评估工具对您的系统运行，几乎可以保证会有一些假的正状态。无论是因为程序错误还是用户错误，其结果都是相同的。工具可能会发现假的正状态，但更严重的是假的负状态。
现在,已定义了漏洞评估与中路测试之间的差异,请仔细检查评估结果,然后先仔细检查插入性测试,作为您最新最佳实践方法的一部分。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
不要尝试在生产环境中利用漏洞。这样做会对您的系统和网络的生产率效率造成负面影响。
:::
以下列表将检查执行漏洞的一些好处。
::: itemizedlist
-   树立主动关注信息安全的意识。
-   在攻击这发现潜在的漏洞之前，发现潜在的漏洞。
-   使系统保持最新，并应用了补丁程序。
-   在开发专业人士方面促进增长和协助。
-   中止商业损失和负面的公共形象。
:::
:::
::: section
::: titlepage
## []{#overview-of-security-hardening-security-hardening.html#establishing-a-methodology-for-vulnerability-assessment_overview-of-security-hardening}建立漏洞评估方法 {.title}
:::
为了帮助选择用于漏洞评估的工具，建立漏洞评估方法是很有帮助的。不幸的是，目前还没有预定义或行业认可的方法；但是，常识和最佳实践可以作为充分的指南。
[*目标是什么？我们是在看一台服务器，还是在看我们的整个网络和网络内的一切？我们是外部还是内部的？*]{.emphasis}这些问题的答案非常重要，因为它们不仅有助于确定选择哪些工具，而且有助于确定使用这些工具的方式。
要了解有关建立方法的更多信息，请参阅以下网站：
::: itemizedlist
-   [https://www.owasp.org/](https://www.owasp.org/){.link} - [**[开放的
    Web 应用程序安全项目]{.citetitle}**]{.strong}
:::
:::
::: section
::: titlepage
## []{#overview-of-security-hardening-security-hardening.html#vulnerability-assessment-tools_overview-of-security-hardening}漏洞评估工具 {.title}
:::
评估可以从使用某种形式的信息收集工具开始。评估整个网络时，请首先画出布局，以查找正在运行的主机。定位后，单独检查每个主机。专注于这些主机需要另外一组工具。了解使用哪些工具可能是查找漏洞的最关键步骤。
以下工具只是可用工具中的一些选择：
::: itemizedlist
-   `Nmap`{.literal}
    是一个流行的工具，可用于查找主机系统以及这些系统上开放的端口。要从
    `AppStream`{.literal} 存储库安装 `Nmap`{.literal}，请以
    `root`{.literal} 用户身份输入 `yum install nmap`{.literal}
    命令。如需更多信息，请参阅 `nmap(1)`{.literal} 手册页。
-   `OpenSCAP`{.literal}套件的工具，如`oscap`{.literal}命令行工具和`scap-workbench`{.literal}图形工具，提供了一个完全自动化的合规性审计。如需更多信息，请参阅[扫描系统以了解安全合规和漏洞](#scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening.html "第 9 章 扫描系统以了解配置合规性和漏洞"){.link}。
-   高级入侵检测环境（`Advanced Intrusion Detection Environment，简称 AIDE`{.literal}）是一个实用工具，它可以创建系统上的文件数据库，然后利用该数据库来确保文件的完整性，并检测系统入侵。如需更多信息，请参阅[使用
    AIDE
    检查完整性](#checking-integrity-with-aide_security-hardening.html "第 10 章 使用 AIDE 检查完整性"){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#overview-of-security-hardening-security-hardening.html#security-threats_overview-of-security-hardening}安全威胁 {.title}
:::
::: section
::: titlepage
## []{#overview-of-security-hardening-security-hardening.html#threats-to-network-security_overview-of-security-hardening}对网络安全的威胁 {.title}
:::
在配置网络的以下方面时，错误的做法可能会增加攻击的风险。
::: title
**不安全的构架**
:::
一个错误配置的网络是未授权用户的主要入口点。让一个基于信任的、开放的本地网络暴露在高度不安全的互联网上，就像让一扇门在一个犯罪猖獗的社区里敞开一样\--在一段时间内可能不会发生任何事情，但[*终究*]{.emphasis}会有人利用这个机会。
::: title
**广播网络**
:::
系统管理员往往没有意识到网络硬件在其安全计划中的重要性。简单硬件（如集线器和路由器）依赖于广播或非交换原则；也就是说，每当节点通过网络将数据传输到接收节点时，集线器或路由器会发送数据包的广播，直到接收节点接收和处理数据。这种方法最容易受到外部入侵者和本地主机上未经授权用户的地址解析协议（[*ARP*]{.emphasis}）或媒体访问控制（[*MAC*]{.emphasis}）地址欺骗的攻击。
::: title
**中央服务器**
:::
另一个潜在的网络弱点是集中式的计算环境。许多企业常用的降低成本措施是将所有服务整合到一台功能强大的机器上。这很方便，因为它比多个服务器配置更易于管理，而且成本也低得多。但是，集中式服务器在网络上引入了单点故障。如果中央服务器受损，可能会导致网络完全不可用或更糟，容易发生数据操作或失窃。在这些情况下，中央服务器成为允许访问整个网络的开放门。
:::
::: section
::: titlepage
## []{#overview-of-security-hardening-security-hardening.html#threats-to-server-security_overview-of-security-hardening}服务器安全隐患 {.title}
:::
服务器安全性与网络安全一样重要，因为服务器通常包含组织的大量重要信息。如果服务器被入侵，则其所有内容可能变得可供攻击者窃取或随意操作。以下小节详细介绍了一些主要问题。
::: title
**未使用的服务和开放端口**
:::
Red Hat Enterprise Linux 8 的完整安装包含超过 1000
个应用程序和库软件包。但是，大多数服务器管理员并没有选择安装发行版中的每一个软件包，而更喜欢安装软件包的基本安装，包括几个服务器应用。
系统管理员经常出现的情况是，安装操作系统时没有注意到底安装了哪些程序。这可能有问题，因为可能会安装不需要的服务，使用默认设置进行了配置，并且可能开启了服务。这可能导致不需要的服务（如
Telnet、DHCP 或
DNS）在服务器或工作站上运行，而管理员没有意识到，这可能会给服务器造成不必要的流量，甚至造成进入系统的潜在通途，导致攻击者进入系统。
::: title
**未应用补丁的服务**
:::
默认安装中包含的大多数服务器应用程序都是经过全面测试的可靠的软件。多年来一直在生产环境中使用，其代码得到了全面优化，发现并修复了许多
bug 。
然而，没有完美的软件，总有进一步提升的空间。较新的软件通常不会象预期的一样严格测试，因为它最近才开始在生产环境中使用，或者可能不像其它服务器软件一样流行。
开发人员和系统管理员通常会在服务器应用程序中找到可利用的 bug ，并在 bug
跟踪和安全相关的网站上发布信息，如 Bugtraq
邮件列表([http://www.securityfocus.com](http://www.securityfocus.com){.link})
或计算机应急响应团队(CERT)网站([http://www.cert.org](http://www.cert.org){.link})。虽然这些机制是提醒社区了解安全隐患的有效方法，但效果取决于系统管理员是否立即对系统进行了补丁。这一点尤其正确，因为攻击者可以访问这些相同的漏洞跟踪服务，并随时使用这些信息来破解未修补的系统。良好的系统管理需要保持警惕，不断地跟踪程序漏洞，并进行适当的系统维护，以确保更安全的计算环境
::: title
**管理员疏忽**
:::
管理员如果没有对系统进行补丁，则会对服务器安全性造成最大的威胁。这既适用于没有经验的管理者，也适用于过于自信或积极进取的管理者。
有些管理员没有给服务器和工作站打补丁，而有些管理员则没有观察系统内核或网络流量的日志消息。另一个常见错误是服务的默认密码或密钥没有改变。例如，一些数据库有默认的管理密码，因为数据库开发人员假定系统管理员在安装后会立即修改这些密码。如果数据库管理员没有修改这个密码，即使是没有经验的破解者也可以使用一个广为人知的默认密码来获得数据库的管理权限。这些只是几个例子，说明不注意管理会导致服务器被入侵。
::: title
**本质上不安全的服务**
:::
如果选择的网络服务本身就不安全，即使是最警惕的组织也会成为漏洞的受害者。例如，有许多服务是在假设它们是在受信任的网络上使用的情况下开发的；然而，一旦服务在互联网上变得可用这一假设就失效了（互联网本身就是不受信任的）。
一个不安全的网络服务是那些需要未加密用户名和密码进行验证的服务。Telnet
和 FTP
是两个这样的服务。如果数据包嗅探软件监测到远程用户和这种服务之间的流量，用户名和密码很容易被截获。
从本质上讲，这类服务也更容易成为安全行业所说的[*中间人*]{.emphasis}攻击的猎物。在这种类型的攻击中，攻击者通过欺骗网络上被破解的名称服务器指向他的机器而不是目标服务器来重定向网络流量。一旦有人打开了到服务器的远程会话，攻击者的机器就充当了一个无形的管道，静静地坐在远程服务和捕获信息的毫无戒备的用户之间。这样，攻击者可以在没有服务器或者用户的情况下收集管理密码和原始数据。
另一类不安全的服务包括网络文件系统和信息服务，如NFS或NIS，它们是明确为局域网使用而开发的，但不幸的是，它们被扩展到包括广域网（为远程用户）。默认情况下,NFS
没有配置任何验证或安全机制以防止供节者挂载 NFS
共享并访问包含的任何内容。NIS
也有网络中的每个计算机都必须知道的重要信息，包括明文 ASCII 或 DBM（ASCII
派生）数据库中的密码和文件权限。获得这个数据库访问权限的攻击者可访问网络中的每个用户帐户，包括管理员的帐户。
默认情况下，Red Hat Enterprise Linux 8
会在发布时关闭所有此类服务。但是，由于管理员经常发现自己被迫使用这些服务，因此仔细配置是至关重要的。
:::
::: section
::: titlepage
## []{#overview-of-security-hardening-security-hardening.html#threats-to-workstation-and-home-pc-security_overview-of-security-hardening}对工作站和家庭 PC 安全的威胁 {.title}
:::
工作站和家庭 PC
可能不像网络或服务器那样容易受到攻击，但是因为它们通常包含敏感数据，如信用卡信息，它们仍然是系统攻击者的目标。工作站也可以在用户不知情的情况下被使用，并被攻击者用作协同攻击中的"机器人"机器。因此，了解工作站的漏洞可让用户避免重装操作系统的麻烦，或者更糟糕的是从数据失窃中恢复。
::: title
**不好的密码**
:::
不好的密码是攻击者获得系统访问权限的最简单的方法之一。
::: title
**存在安全漏洞的客户端应用程序**
:::
虽然管理员可能拥有一个完全安全且打过补丁的服务器，但这并不表示远程用户在访问时是安全的。例如，如果服务器在公共网络上提供了
Telnet 或 FTP
服务，攻击者可以通过网络捕获明文用户名和密码，然后使用帐户信息来访问远程用户的工作站。
即使使用安全协议（如
SSH），如果远程用户不更新其客户端应用，它们也可能会受到某些攻击。例如，SSH
协议版本 1 客户端容易遭受恶意 SSH 服务器的 X
转发攻击。一旦连接到服务器，攻击者可以悄悄地捕获客户端通过网络进行的任何击键动作和鼠标点击动作。这个问题已在
SSH 版本 2
协议中解决了，但用户需要跟踪哪些应用程序有此类漏洞并根据需要进行更新。
:::
:::
::: section
::: titlepage
# []{#overview-of-security-hardening-security-hardening.html#Common_Exploits_and_Attacks_overview-of-security-hardening}常见的漏洞和攻击 {.title}
:::
[表 1.1
"常见的漏洞"](#overview-of-security-hardening-security-hardening.html#tabl-Common_Exploits "表 1.1. 常见的漏洞"){.xref}
详细介绍入侵者访问组织网络资源时使用的一些最常见的漏洞和入口点。这些常见漏洞的关键在于解释了如何进行攻击以及管理员如何正确地保护其网络免受此类攻击。
::: table
[]{#overview-of-security-hardening-security-hardening.html#tabl-Common_Exploits}
**表 1.1. 常见的漏洞**
::: table-contents
+-------------------+-----------------------+-----------------------+
| 漏洞              | Description           | 备注                  |
+:==================+:======================+:======================+
| 空密码或默认密码  | 将管理密码            | 通常与网络硬件（      |
|                   | 置为空，或使用产品供  | 如路由器、防火墙、VPN |
|                   | 应商设置的默认密码.这 | 和网络附加            |
|                   | 在路由器和防火墙等硬  | 存储(NAS)设备）相关。 |
|                   | 件中最常见，但一些在  |                       |
|                   | Linux                 | 在很多传统操          |
|                   | 上运                  | 作系统中很常见，尤其  |
|                   | 行的服务也可能包含默  | 是那些捆绑了服务（如  |
|                   | 认的管理员密码（虽然  | UNIX 和               |
|                   | Red Hat Enterprise    | Windows）的操作系统。 |
|                   | Linux 8               |                       |
|                   | 不一起提供）。        | 管理员有时会匆忙创建  |
|                   |                       | 特权用户帐户，并将密  |
|                   |                       | 码置为空，从而为发现  |
|                   |                       | 该帐户的恶意用户创建  |
|                   |                       | 了一个完美的入口点。  |
+-------------------+-----------------------+-----------------------+
| 默认的共享密钥    | 出于开发或            | 最常                  |
|                   | 评估测试的目的，安全  | 在无线接入点和预配置  |
|                   | 服务有时会打包默认的  | 的安全服务器设备中。  |
|                   | 安全密钥。如果这些密  |                       |
|                   | 钥保持不变，并放在互  |                       |
|                   | 联网上的生产环境中，  |                       |
|                   | 则拥有相同默认密钥的  |                       |
|                   | [**所有**]{.strong}   |                       |
|                   | 用户都可以访问该      |                       |
|                   | 共享密钥的资源以及其  |                       |
|                   | 包含的任何敏感信息。  |                       |
+-------------------+-----------------------+-----------------------+
| IP 欺骗           | 远                    | 欺骗比较困难，因      |
|                   | 程计算机充当本地网络  | 为它涉及到攻击者预测  |
|                   | 上的节点，找到您服务  | TCP/IP                |
|                   | 器的漏洞，并安装一个  | 序列号以协            |
|                   | 后门程序或特洛伊木马  | 调到目标系统的连接，  |
|                   | 来控制您的网络资源。  | 但有几个工具都可帮助  |
|                   |                       | 攻击者执行此类攻击。  |
|                   |                       |                       |
|                   |                       | 具体取决于目          |
|                   |                       | 标系统运行的服务（如  |
|                   |                       | `rsh`{.literal}、     |
|                   |                       | `telnet`{.literal}、  |
|                   |                       | FTP等），这些服务使用 |
|                   |                       | [*基于源*]{.emphasis} |
|                   |                       | 的身份验证技术，与    |
|                   |                       | `ssh`{.literal} 或    |
|                   |                       | SSL/TLS               |
|                   |                       | 中使用的其            |
|                   |                       | 他形式的加密身份验证  |
|                   |                       | 相比，不建议这样做。  |
+-------------------+-----------------------+-----------------------+
| 窃听              | 通过窃听              | 这种类型的攻击主要适  |
|                   | 两个节点之间的连接，  | 用于明文传输协议，如  |
|                   | 来收集网络上两个活动  | Telnet、FTP 和 HTTP   |
|                   | 节点之间传递的数据。  | 传输。                |
|                   |                       |                       |
|                   |                       | 远程攻击              |
|                   |                       | 者必须能够访问局域网  |
|                   |                       | 中一个被破坏的系统才  |
|                   |                       | 能执行此类攻击；通常  |
|                   |                       | 黑客使用主动攻击（如  |
|                   |                       | IP                    |
|                   |                       | 欺骗或中间人）来      |
|                   |                       | 破坏局域网上的系统。  |
|                   |                       |                       |
|                   |                       | 安全措施              |
|                   |                       | 包括带有加密密钥交换  |
|                   |                       | 、一次性密码或加密身  |
|                   |                       | 份验证的服务，以防止  |
|                   |                       | 密码嗅探；还建议在传  |
|                   |                       | 输过程中进行强加密。  |
+-------------------+-----------------------+-----------------------+
| 服务漏洞          | 攻击者发              | 基于 HTTP 的服务（如  |
|                   | 现在互联网上运行的服  | CGI）容易受到远       |
|                   | 务有缺陷或漏洞；通过  | 程命令执行甚至交互式  |
|                   | 此漏洞，攻击者破坏整  | shell                 |
|                   | 个系统以及其可能保存  | 访问的攻击。即使 HTTP |
|                   | 的任何数据，并可能破  | 服务以非特权          |
|                   | 坏网络中的其他系统。  | 用户（如\"nobody\"）  |
|                   |                       | 的身份运行，可以读取  |
|                   |                       | 的配置文件和网络映射  |
|                   |                       | 等信息，或者攻击者可  |
|                   |                       | 以发起拒绝服务攻击，  |
|                   |                       | 从而耗尽系统资源或使  |
|                   |                       | 其对其他用户不可用。  |
|                   |                       |                       |
|                   |                       | 服务有                |
|                   |                       | 时可能会有在开发和测  |
|                   |                       | 试过程中没有被注意到  |
|                   |                       | 的漏洞；这些漏洞（如  |