innerHTML
STRING TO SEARCH
HtmlEncode
URLEncode
207
Code Crawling
Input Controls
The input controls below are server classes used to produce and display web application form fields. Looking for 
such references helps locate entry points into the application.
webcontrols.dropdownlist
STRING TO SEARCH
htmlcontrols.htmlinputhidden
webcontrols.hiddenfield
webcontrols.hyperlink
webcontrols.textbox
webcontrols.label
webcontrols.linkbutton
webcontrols.listbox
webcontrols.checkboxlist
WEB.config
The .NET Framework relies on .config files to define configuration settings. The .config files are text-based XML 
files. Many .config files can, and typically do, exist on a single system. Web applications refer to a web.config 
file located in the application’s root directory. For ASP.NET applications, web.config contains information about 
most aspects of the application’s operation.
httpRuntime
sessionState
maxRequestLength
Debug
Credentials
identity impersonate
timeout
remote
connectionStrings
authentication mode
Allow
Deny
forms protection
appSettings
ConfigurationSettings
appSettings
webcontrols.dropdownlist
CustomErrors
httpCookies
httpHandlers
STRING TO SEARCH
requestEncoding
responseEncoding
Trace
authorization
compilation
webcontrols.linkbutton
webcontrols.listbox
webcontrols.checkboxlist
global.asax
Each application has its own global.asax file if one is required. Global.asax sets the event code and values for 
an application using scripts. One must ensure that application variables do not contain sensitive information, 
as they are accessible to the whole application and to all users within it.
STRING TO SEARCH
Application_OnAuthenticateRequest
Application_OnAuthorizeRequest
Session_OnStart
Session_OnEnd
208
Logging
Logging can be a source of information leakage. It is important to examine all calls to the logging subsystem and to 
determine if any sensitive information is being logged. Common mistakes are logging userID in conjunction with 
passwords within the authentication functionality or logging database requests which may contain sensitive data.
STRING TO SEARCH
log4net
Console.WriteLine
System.Diagnostics.Debug
System.Diagnostics.Trace
machine.config
It is important that many variables in machine.config can be overridden in the web.config file for a particular 
application.
Threads and Concurrency  
Locating code that contains multithreaded functions as concurrency issues can result in race conditions, 
which may result in security vulnerabilities. The Thread keyword is where new threads objects are created. 
Code that uses static global variables that hold sensitive security information may cause session issues. Code 
that uses static constructors may also cause issues between threads. Not synchronizing the Dispose method 
may cause issues if a number of threads call Dispose at the same time, this may cause resource release issues.
STRING TO SEARCH
validateRequest
enableViewState
enableViewStateMac
STRING TO SEARCH
Thread
Dispose
Class Design
Public and Sealed relate to the design at class level. Classes that are not intended to be derived from should 
be sealed. Make sure all class fields are Public for a reason. Don’t expose anything that is not necessary.
STRING TO SEARCH
Public
Sealed
Code Crawling
209
Code Crawling
Reflection, Serialization
Code may be generated dynamically at runtime. Code that is generated dynamically as a function of external 
input may give rise to issues. If code contains sensitive data, does it need to be serialized?
MyClass
STRING TO SEARCH
Serializable
AllowPartiallyTrustedCallersAttribute
GetObjectData
System.Reflection
STRING TO SEARCH
catch
finally
trace enabled
customErrors mode
StrongNameIdentity
StrongNameIdentityPermission
Exceptions & Errors
Ensure that the catch blocks do not leak information to the user in the case of an exception. Ensure when 
dealing with resources that the finally block is used. Having trace enabled is not great from an information 
leakage perspective. Ensure customized errors are properly implemented
Cryptography
If cryptography is used then is a strong enough cipher used, i.e. AES or 3DES? What size key is used? The larger 
the better. Where is hashing performed? Are passwords that are being persisted hashed? They should be. How 
are random numbers generated? Is the PRNG “random enough”?
xor
STRING TO SEARCH
RNGCryptoServiceProvider
SHA
MD5
base64
DES
RC2
System.Security.Cryptography
System.Random
Random
Storage
If storing sensitive data in memory, it is recommend to usemy the following.
STRING TO SEARCH
SecureString
ProtectedMemory
210
Authorization, Assert & Revert
Bypassing the .Net code access security permission? Not a good idea. Below is a list of potentially dangerous 
permissions such as calling unmanaged code, outside the CLR.
Legacy Methods
Some standard functions that should be checked in any context include the following.
Searching for Code in Java
Input and Output Streams
These are used to read data into one’s application. They may be potential entry points into an application. 
The entry points may be from an external source and must be investigated. These may also be used in path 
traversal attacks or DoS attacks.
STRING TO SEARCH
printf
strcpy
ControlDomainPolicy
ControlPolicy
SkipVerification
ControlEvidence
SerializationFormatter
ControlPrincipal
STRING TO SEARCH
RequestMinimum
RequestOptional
Assert
Debug.Assert
CodeAccessPermission
MemberAccess
ControlAppDomain
UnmanagedCode
java.io.FileOutputStream
File
ObjectInputStream
PipedInputStream
STRING TO SEARCH
FileInputStream
ObjectInputStream
FilterInputStream
PipedInputStream
SequenceInputStream
StringBufferInputStream
BufferedReader
ByteArrayInputStream
StreamTokenizer
getResourceAsStream
java.io.FileReader
java.io.FileWriter
java.io.RandomAccessFile
java.io.File
renameTo
Mkdir
Code Crawling
211
Code Crawling
Servlets
These API calls may be avenues for parameter/header/URL/cookie tampering, HTTP Response Splitting and 
information leakage. They should be examined closely as many of such APIs obtain the parameters directly 
from HTTP requests.
STRING TO SEARCH
javax.servlet.*
getParameterNames
getParameterValues
getParameter
getLocalName
getAttribute
getAttributeNames
getLocalAddr
getPrincipal
getUserPrincipal
isUserInRole
getInputStream
HttpServletRequest
getQueryString
getHeaderNames
getHeaders
getAuthType
getRemoteUser
getCookies
isSecure
getServerName
getRemoteAddr
getRemoteHost
getRealPath
getParameterMap
getScheme
getProtocol
getContentType
getName
getPath
getDomain
getComment
getValueNames
getRequestedSessionId
getRequestURI
getRequestURL
getServerName
getValue
getMethod
getPath
getReader
getRealPath
setHeader
setAttribute
putValue
javax.servlet.http.Cookie
getOutputStream
getWriter
addCookie
addHeader
Cross Site Scripting
These API calls should be checked in code review as they could be a source of Cross Site Scripting vulnerabilities.
STRING TO SEARCH
javax.servlet.ServletOutputStream.print
strcpy
Response Splitting