```  
测试 :   
1\. 监控日期继承表存在气泡SQL,  
```  
digoal=> create table tbl(id int, crt_time timestamp(0));  
CREATE TABLE  
digoal=> create table tbl_201201 (id int, crt_time timestamp(0)) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> create table tbl_201202 (id int, crt_time timestamp(0)) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> create table tbl_201204 (id int, crt_time timestamp(0)) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> create table tbl_201205 (id int, crt_time timestamp(0)) inherits(tbl);  
NOTICE:  merging column "id" with inherited definition  
NOTICE:  merging column "crt_time" with inherited definition  
CREATE TABLE  
digoal=> select * from v_mon_partition_tables  
  where   
  gap<>predict_gap   
  and pdate <> '22220101'::date   
  and lag_pdate is not null;  
 dbname | inhparent |  inhrelid  |   pdate    | lag_pdate  | gap | predict_gap   
--------+-----------+------------+------------+------------+-----+-------------  
 digoal | tbl       | tbl_201204 | 2012-04-01 | 2012-02-01 |  60 |          31  
(1 row)  
```  
2\. 何时过期监控SQL, 例如保持未来有10个子表可用,并且未来2年(731day)都有子表已经创建,  
```  
select * from  
(  
select dbname,inhparent,lag_inhrelid,inhrelid,max_pdate,predict_gap,future_tables_cnt,row_number() over (partition by inhparent order by pdate desc) AS rn  
from v_mon_partition_tables  
  where   
  (future_tables_cnt '22220101'::date   
  and lag_pdate is not null  
) t order by rn;  
 dbname | inhparent |  inhrelid  |   pdate    | max_pdate  | gap |  future_tables_cnt    
--------+-----------+------------+------------+------------+-----+---------------------  
 digoal | tbl       | tbl_201202 | 2012-02-01 | 2012-05-01 |  31 | -8.0000000000000000  
 digoal | tbl       | tbl_201204 | 2012-04-01 | 2012-05-01 |  60 | -8.0000000000000000  
 digoal | tbl       | tbl_201205 | 2012-05-01 | 2012-05-01 |  30 | -8.2666666666666667  
(3 rows)  
```  
创建超过未来2年的子表(现在是2013-01) :   
```  
create table tbl_201206 (id int, crt_time timestamp(0)) inherits(tbl);  
.....................  
create table tbl_201507 (id int, crt_time timestamp(0)) inherits(tbl);  
```  
再次执行监控SQL :   
```  
select * from  
(  
select dbname,inhparent,lag_inhrelid,inhrelid,max_pdate,predict_gap,future_tables_cnt,row_number() over (partition by inhparent order by pdate desc) AS rn  
from v_mon_partition_tables  
  where   
  (future_tables_cnt '22220101'::date   
  and lag_pdate is not null  
) t order by rn;  
 dbname | inhparent | inhrelid | pdate | max_pdate | gap | future_tables_cnt   
--------+-----------+----------+-------+-----------+-----+-------------------  
(0 rows)  
```  
3\. 继承表的权限是否一致,  
当前未赋任何权限, 所以权限是一致的.  
```  
digoal=>  select dbname,inhparent,inhrelid,acl_inhparent,acl_inhrelid from v_mon_partition_tables  
digoal->   where acl_inhparent<>acl_inhrelid;  
 dbname | inhparent | inhrelid | acl_inhparent | acl_inhrelid   
--------+-----------+----------+---------------+--------------  
(0 rows)  
```  
当修改父表的权限后, 如果未给子表赋予权限, 那么权限将不一致, 所以查询有结果 :   
```  
digoal=> grant select on tbl to skycac;  
GRANT  
digoal=>  select dbname,inhparent,inhrelid,acl_inhparent,acl_inhrelid from v_mon_partition_tables  
  where acl_inhparent<>acl_inhrelid;  
 dbname | inhparent |  inhrelid  |              acl_inhparent              | acl_inhrelid   
--------+-----------+------------+-----------------------------------------+--------------  
 digoal | tbl       | tbl_201201 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201202 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201204 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201205 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201206 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201207 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201208 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201209 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201210 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201211 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201212 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201301 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201302 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201303 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201304 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201305 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201306 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201307 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201308 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201309 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201310 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201311 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201312 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201401 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201402 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201403 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201404 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201405 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201406 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201407 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201408 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201409 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201410 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201411 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201412 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201501 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201502 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201503 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201504 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201505 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201506 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
 digoal | tbl       | tbl_201507 | {digoal=arwdDxt/digoal,skycac=r/digoal} | {}  
(42 rows)  
```  
-----------------------------------------------------------------------------------------------------------------------  
脚本中未修改, 以上SQL已调整, 注意同步调整以下脚本的内容.  
-----------------------------------------------------------------------------------------------------------------------  
用以上的SQL写个SHELL脚本就可以进行监控了, 或者结合nagios来进行监控.  
例如 :   
```  
ocz@db-172-16-3-150-> cat t.sh  
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export PATH=$PGHOME/bin:$PATH:.  
# 参数判断  
if [ $# -ne 3 ]; then  
echo -e "Please check your parameter."  
echo -e "$0 HOST PORT ROLE \n"  
exit 1  
fi  
TODAY=`date +%Y%m%d`  
EMAIL="PI:EMAIL"  
HOST=$1  
PORT=$2  
ROLE=$3  
for DB in `psql -q -t -h $HOST -p $PORT -U $ROLE postgres -c "select datname from pg_database where datname not in ('postgres','template0','template1')"`  
do  
echo -e "------`date +%F\ %T`----Partition Table MON----IP:$HOST PORT:$PORT DBNAME:$DB------"  
psql -h $HOST -p $PORT -U $ROLE $DB = '0' and i = '18' and substr(v_date,1,2) = 4 and v_len =365 then  
    pdate - date_trunc('year', (pdate - interval '1 year'))::date  
  when pdate-lag_pdate >=28 then  
    pdate - date_trunc('month', (pdate - interval '1 month'))::date  
  when pdate-lag_pdate >=7 then  
    pdate-lag_pdate  
  when pdate-lag_pdate >=1 then  
    pdate - date_trunc('day', (pdate - interval '1 day'))::date  
  else   
    0.9  
  end AS predict_gap  
from   
(  
select   
  row_number() over (partition by inhparent order by mon_part_conv_to_date((inhrelid::regclass)::text)) AS rn,  
  current_database() AS dbname,   
  (inhparent::regclass)::text AS inhparent,   
  (inhrelid::regclass)::text AS inhrelid,   
  mon_part_get_acl(inhparent) AS acl_inhparent,   
  mon_part_get_acl(inhrelid) AS acl_inhrelid,   
  mon_part_conv_to_date((inhrelid::regclass)::text) AS pdate,   
  lag(mon_part_conv_to_date((inhrelid::regclass)::text), 1) over (partition by inhparent order by mon_part_conv_to_date((inhrelid::regclass)::text)) AS lag_pdate,  
  max(mon_part_conv_to_date((inhrelid::regclass)::text)) over (partition by inhparent) AS max_pdate  
from pg_inherits   
) t   
) t;  
select '-- 监控日期继承表气泡:' as monitor;  
select dbname,inhparent,inhrelid,pdate,lag_pdate,gap,predict_gap from v_mon_partition_tables  
  where   
  gap<>predict_gap   
  and pdate <> '22220101'::date   
  and lag_pdate is not null;  
select '-- 监控日期继承表过期(需满足大于未来10个表,且大于未来2年(731day)):' as monitor;  
select * from  
(  
select dbname,inhparent,inhrelid,max_pdate,predict_gap,future_tables_cnt,row_number() over (partition by inhparent order by pdate desc) AS rn  
from v_mon_partition_tables  
  where   
  (future_tables_cnt '22220101'::date   