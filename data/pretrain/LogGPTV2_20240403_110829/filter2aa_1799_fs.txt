# Table of Contents: Windows Internals, Part 1, 7th Edition

## Chapter 4: Threads
### Section 1: Creating Threads
- **Creating threads** (Page 193)
- **Thread internals** (Page 194)
  - **Data structures** (Page 194)
  - **Birth of a thread** (Page 206)
- **Examining thread activity** (Page 207)
- **Limitations on protected process threads** (Page 212)

### Section 2: Thread Scheduling
- **Overview of Windows scheduling** (Page 214)
- **Priority levels** (Page 215)
- **Thread states** (Page 223)
- **Dispatcher database** (Page 228)
- **Quantum** (Page 231)
- **Priority boosts** (Page 238)
- **Context switching** (Page 255)
- **Scheduling scenarios** (Page 256)
- **Idle threads** (Page 260)
- **Thread suspension** (Page 264)
  - **(Deep) freeze** (Page 264)
  - **Thread selection** (Page 266)
- **Multiprocessor systems** (Page 268)
  - **Thread selection on multiprocessor systems** (Page 283)
  - **Processor selection** (Page 284)
  - **Heterogeneous scheduling (big.LITTLE)** (Page 286)
  - **Group-based scheduling** (Page 287)
  - **Dynamic fair share scheduling** (Page 289)
  - **CPU rate limits** (Page 292)
  - **Dynamic processor addition and replacement** (Page 295)
- **Worker factories (thread pools)** (Page 297)
  - **Worker factory creation** (Page 298)

### Conclusion
- **Conclusion** (Page 300)

## Chapter 5: Memory Management
### Section 1: Introduction to the Memory Manager
- **Introduction to the memory manager** (Page 301)
- **Memory manager components** (Page 302)
- **Large and small pages** (Page 303)
- **Examining memory usage** (Page 305)
- **Internal synchronization** (Page 308)
- **Services provided by the memory manager** (Page 309)
  - **Page states and memory allocations** (Page 310)
  - **Commit charge and commit limit** (Page 313)
  - **Locking memory** (Page 314)
  - **Allocation granularity** (Page 314)
  - **Shared memory and mapped files** (Page 315)
  - **Protecting memory** (Page 317)
  - **Data Execution Prevention** (Page 319)
  - **Copy-on-write** (Page 321)
  - **Address Windowing Extensions** (Page 323)

### Section 2: Kernel-Mode Heaps and Process Heaps
- **Kernel-mode heaps (system memory pools)** (Page 324)
  - **Pool sizes** (Page 325)
  - **Monitoring pool usage** (Page 327)
  - **Look-aside lists** (Page 331)
- **Heap manager** (Page 332)
  - **Process heaps** (Page 333)
  - **Heap types** (Page 334)
    - **The NT heap** (Page 334)
    - **Heap synchronization** (Page 334)
    - **The low-fragmentation heap** (Page 335)
    - **The segment heap** (Page 336)
    - **Heap security features** (Page 341)
    - **Heap debugging features** (Page 342)
    - **Pageheap** (Page 343)
    - **Fault-tolerant heap** (Page 347)

### Section 3: Virtual Address Space Layouts
- **Virtual address space layouts** (Page 348)
  - **x86 address space layouts** (Page 349)
  - **x86 system address space layout** (Page 352)
  - **x86 session space** (Page 353)
  - **System page table entries** (Page 355)
  - **ARM address space layout** (Page 356)
  - **64-bit address space layout** (Page 357)
  - **x64 virtual addressing limitations** (Page 359)
  - **Dynamic system virtual address space management** (Page 359)
  - **System virtual address space quotas** (Page 364)
  - **User address space layout** (Page 365)

### Section 4: Address Translation and Page Fault Handling
- **Address translation** (Page 371)
  - **x86 virtual address translation** (Page 371)
  - **Translation look-aside buffer** (Page 377)
  - **x64 virtual address translation** (Page 380)
  - **ARM virtual address translation** (Page 381)
- **Page fault handling** (Page 383)
  - **Invalid PTEs** (Page 384)
  - **Prototype PTEs** (Page 385)
  - **In-paging I/O** (Page 386)
  - **Collided page faults** (Page 387)
  - **Clustered page faults** (Page 387)

### Section 5: Page Files and Stacks
- **Page files** (Page 389)
  - **Commit charge and the system commit limit** (Page 394)
  - **Commit charge and page file size** (Page 397)
- **Stacks** (Page 398)
  - **User stacks** (Page 399)
  - **Kernel stacks** (Page 400)
  - **DPC stack** (Page 401)
  - **Virtual address descriptors** (Page 401)
    - **Process VADs** (Page 402)
    - **Rotate VADs** (Page 403)
  - **NUMA** (Page 404)
  - **Section objects** (Page 405)

### Section 6: Working Sets and Memory Management
- **Working sets** (Page 412)
  - **Demand paging** (Page 413)
  - **Logical prefetcher and ReadyBoot** (Page 413)
  - **Placement policy** (Page 416)
  - **Working set management** (Page 417)
  - **Balance set manager and swapper** (Page 421)
  - **System working sets** (Page 422)
  - **Memory notification events** (Page 423)
- **Page frame number database** (Page 425)
  - **Page list dynamics** (Page 428)
  - **Page priority** (Page 436)
  - **Modified page writer and mapped page writer** (Page 438)
  - **PFN data structures** (Page 440)
  - **Page file reservation** (Page 443)
  - **Physical memory limits** (Page 446)
    - **Windows client memory limits** (Page 447)
- **Memory compression** (Page 449)
  - **Compression illustration** (Page 450)
  - **Compression architecture** (Page 453)
- **Memory partitions** (Page 456)
- **Memory combining** (Page 459)
  - **The search phase** (Page 460)
  - **The classification phase** (Page 461)
  - **The page combining phase** (Page 462)
  - **From private to shared PTE** (Page 462)
  - **Combined pages release** (Page 464)
- **Memory enclaves** (Page 467)
  - **Programmatic interface** (Page 468)
  - **Memory enclave initializations** (Page 469)
  - **Enclave construction** (Page 469)
  - **Loading data into an enclave** (Page 471)
  - **Initializing an enclave** (Page 472)
- **Proactive memory management (SuperFetch)** (Page 472)
  - **Components** (Page 473)
  - **Tracing and logging** (Page 474)
  - **Scenarios** (Page 475)
  - **Page priority and rebalancing** (Page 476)
  - **Robust performance** (Page 478)
  - **ReadyBoost** (Page 479)
  - **ReadyDrive** (Page 480)
  - **Process reflection** (Page 480)

### Conclusion
- **Conclusion** (Page 482)

## Chapter 6: I/O System
### Section 1: I/O System Components
- **I/O system components** (Page 483)
- **The I/O manager** (Page 485)
- **Typical I/O processing** (Page 486)
- **Interrupt Request Levels and Deferred Procedure Calls** (Page 488)
  - **Interrupt Request Levels** (Page 488)
  - **Deferred Procedure Calls** (Page 490)

### Section 2: Device Drivers
- **Device drivers** (Page 492)
  - **Types of device drivers** (Page 492)
  - **Structure of a driver** (Page 498)
  - **Driver objects and device objects** (Page 500)
  - **Opening devices** (Page 507)

### Section 3: I/O Processing
- **I/O processing** (Page 510)
  - **Types of I/O** (Page 511)
  - **I/O request packets** (Page 513)
  - **I/O request to a single-layered hardware-based driver** (Page 525)
  - **I/O requests to layered drivers** (Page 533)
  - **Thread-agnostic I/O** (Page 536)
  - **I/O cancellation** (Page 537)
  - **I/O completion ports** (Page 541)
  - **I/O prioritization** (Page 546)
  - **Container notifications** (Page 552)

### Section 4: Driver Verifier and Plug and Play
- **Driver Verifier** (Page 552)
  - **I/O-related verification options** (Page 554)
  - **Memory-related verification options** (Page 555)
- **The Plug and Play manager** (Page 559)
  - **Level of Plug and Play support** (Page 560)
  - **Device enumeration** (Page 561)
  - **Device stacks** (Page 563)
  - **Driver support for Plug and Play** (Page 569)
  - **Plug-and-play driver installation** (Page 571)

### Section 5: General Driver Loading and Installation
- **General driver loading and installation** (Page 575)
  - **Driver loading** (Page 575)
  - **Driver installation** (Page 577)

### Section 6: The Windows Driver Foundation
- **The Windows Driver Foundation** (Page 578)
  - **Kernel-Mode Driver Framework** (Page 579)
  - **User-Mode Driver Framework** (Page 587)

### Section 7: The Power Manager
- **The power manager** (Page 590)
  - **Connected Standby and Modern Standby** (Page 594)
  - **Power manager operation** (Page 595)
  - **Driver power operation** (Page 596)
  - **Driver and application control of device power** (Page 599)
  - **Power management framework** (Page 600)
  - **Power availability requests** (Page 602)

### Conclusion
- **Conclusion** (Page 603)

## Chapter 7: Security
### Section 1: Security Ratings
- **Security ratings** (Page 605)
  - **Trusted Computer System Evaluation Criteria** (Page 605)
  - **The Common Criteria** (Page 607)

### Section 2: Security System Components
- **Security system components** (Page 608)
- **Virtualization-based security** (Page 611)
  - **Credential Guard** (Page 612)
  - **Device Guard** (Page 617)

### Section 3: Protecting Objects
- **Protecting objects** (Page 619)
  - **Access checks** (Page 621)
  - **Security identifiers** (Page 625)
  - **Virtual service accounts** (Page 646)
  - **Security descriptors and access control** (Page 650)
  - **Dynamic Access Control** (Page 666)
  - **The AuthZ API** (Page 666)
  - **Conditional ACEs** (Page 667)

### Section 4: Account Rights and Privileges
- **Account rights and privileges** (Page 668)
  - **Account rights** (Page 669)
  - **Privileges** (Page 670)
  - **Super privileges** (Page 675)

### Section 5: Access Tokens and Security Auditing
- **Access tokens of processes and threads** (Page 677)
- **Security auditing** (Page 677)
  - **Object access auditing** (Page 679)
  - **Global audit policy** (Page 682)
  - **Advanced Audit Policy settings** (Page 683)

### Section 6: AppContainers and Logon
- **AppContainers** (Page 684)
  - **Overview of UWP apps** (Page 685)
  - **The AppContainer** (Page 687)
- **Logon** (Page 710)
  - **Winlogon initialization** (Page 711)
  - **User logon steps** (Page 713)
  - **Assured authentication** (Page 718)
  - **Windows Biometric Framework** (Page 719)
  - **Windows Hello** (Page 721)

### Section 7: User Account Control and Exploit Mitigations
- **User Account Control and virtualization** (Page 722)
  - **File system and registry virtualization** (Page 722)
  - **Elevation** (Page 729)
- **Exploit mitigations** (Page 735)
  - **Process-mitigation policies** (Page 735)
  - **Control Flow Integrity** (Page 740)
  - **Security assertions** (Page 752)

### Section 8: Application Identification and Kernel Patch Protection
- **Application Identification** (Page 756)
  - **AppLocker** (Page 757)
  - **Software Restriction Policies** (Page 762)
- **Kernel Patch Protection** (Page 764)
  - **PatchGuard** (Page 765)
  - **HyperGuard** (Page 768)

### Conclusion
- **Conclusion** (Page 770)

## Index
- **Index** (Page 771)

---

This optimized table of contents provides a clear and organized structure, making it easier to navigate through the chapters and sections. Each section is clearly labeled with its corresponding page numbers, ensuring that readers can quickly find the information they need.