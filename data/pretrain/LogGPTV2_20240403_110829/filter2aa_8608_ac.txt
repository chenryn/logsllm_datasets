以"属性=值"的格式显示指定单元或任务的所有属性。 单元用其名称表示，而任务则用其id表示。 如果没有指定任何单元或任务， 那么显示管理器(systemd)自身的属性。 除非使用了
\fB\-\-all\fR
选项， 否则默认不显示属性值为空的属性。 可以使用
\fB\-\-property=\fR
选项限定仅显示特定的属性。 此命令的输出适合用于程序分析， 而不适合被人类阅读(应该使用
\fBstatus\fR
命令)。
.RE
.PP
\fBcat \fR\fB\fIPATTERN\fR\fR\fB\&.\&.\&.\fR
.RS 4
显示指定单元的单元文件内容。 在显示每个单元文件的内容之前， 会额外显示一行单元文件的绝对路径。
.RE
.PP
\fBset\-property \fR\fB\fINAME\fR\fR\fB \fR\fB\fIASSIGNMENT\fR\fR\fB\&.\&.\&.\fR
.RS 4
在运行时修改单元的属性值。 主要用于修改单元的资源控制属性值而无需直接修改单元文件。 并非所有属性都可以在运行时被修改， 但大多数资源控制属性(参见
\fBsystemd.resource-control\fR(5))可以。 所作修改会立即生效，并永久保存在磁盘上，以确保永远有效。 但是如果使用了
\fB\-\-runtime\fR
选项， 那么此修改仅临时有效，下次重启此单元后，将会恢复到原有的设置。 设置属性的语法与单元文件中的写法相同。
.sp
例如：
\fBsystemctl set\-property foobar\&.service CPUShares=777\fR
.sp
注意，此命令可以同时修改多个属性值， 只需依次将各个属性用空格分隔即可。
.sp
与单元文件中的规则相同， 设为空表示清空当前已存在的列表。
.RE
.PP
\fBhelp \fR\fB\fIPATTERN\fR\fR\fB\&.\&.\&.|\fR\fB\fIPID\fR\fR\fB\&.\&.\&.\fR
.RS 4
显示指定单元的手册页(若存在)。 指定PID表示显示该进程所属单元的手册页(若存在)。
.RE
.PP
\fBreset\-failed [\fR\fB\fIPATTERN\fR\fR\fB\&.\&.\&.]\fR
.RS 4
重置指定单元的失败(failed)状态。 如果未指定任何单元，则重置所有单元的失败(failed)状态。 当某个单元因为某种原因操作失败(例如退出状态码不为零或进程被强制杀死或启动超时)， 将会自动进入失败(failed)状态， 退出状态码与导致故障的原因 将被记录到日志中以方便日后排查。
.RE
.PP
\fBlist\-dependencies\fR [\fINAME\fR]
.RS 4
显示单元的依赖关系。 也就是显示由
\fIRequires=\fR,
\fIRequisite=\fR,
\fIConsistsOf=\fR,
\fIWants=\fR,
\fIBindsTo=\fR
所形成的依赖关系。 如果没有明确指定单元的名称， 那么表示显示
default\&.target
的依赖关系树。
.sp
默认情况下，仅以递归方式显示 target 单元的依赖关系树，而对于其他类型的单元，仅显示一层依赖关系(不递归)。 但如果使用了
\fB\-\-all\fR
选项， 那么将对所有类型的单元都强制递归的显示完整的依赖关系树。
.sp
还可以使用
\fB\-\-reverse\fR,
\fB\-\-after\fR,
\fB\-\-before\fR
选项指定仅显示特定类型的依赖关系。
.RE
.SS "单元文件命令"
.PP
\fBlist\-unit\-files \fR\fB[\fIPATTERN\&.\&.\&.\fR]\fR
.RS 4
列出所有已安装的单元文件及其启用状态(相当于同时使用了
\fBis\-enabled\fR
命令)。 如果给出了模式(\fIPATTERN\fR)参数， 那么表示该命令仅作用于单元文件名称与至少一个模式相匹配的单元(仅匹配文件名，不匹配路径)。
.RE
.PP
\fBenable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR, \fBenable \fR\fB\fIPATH\fR\fR\fB\&.\&.\&.\fR
.RS 4
启用指定的单元或单元实例(多数时候相当于将这些单元设为"开机时自动启动"或"插入某个硬件时自动启动")。 这将会按照单元文件中
"[Install]"
小节的指示， 在例如
/etc/systemd/system/multi\-user\&.target\&.wants/
这样的目录中，创建指向单元文件自身的软链接。 创建完软连接之后，systemd 将会自动重新加载自身的配置(相当于执行
\fBdaemon\-reload\fR
命令)，以确保所做的变更立即生效。 注意，除非同时使用了
\fB\-\-now\fR
选项(相当于同时执行
\fBstart\fR
命令)， 否则启用一个单元\fI并不会\fR导致该单元被启动。 注意，对于形如
foo@bar\&.service
这样的单元实例， 软链接自身的文件名是实例化之后的单元名称， 但是软连接所指向的目标文件则是该单元的模板文件。
.sp
如果此命令的参数是一个有效的单元名称(\fINAME\fR)，那么将自动搜索所有单元目录。 如果此命令的参数是一个单元文件的绝对路径(\fIPATH\fR)，那么将直接使用指定的单元文件。 如果参数是一个位于标准单元目录之外的单元文件， 那么将会在标准单元目录中额外创建一个指向此单元文件的软连接， 以确保该单元文件能够被
\fBstart\fR
之类的命令找到。
.sp
除非使用了
\fB\-\-quiet\fR
选项， 否则此命令还会显示对文件系统所执行的操作(Created symlink \&.\&.\&.)。
.sp
此命令是维护
\&.{wants,requires}/
目录与单元别名的首选方法。 注意，此命令仅会按照单元文件中
"[Install]"
小节预设的名称创建软链接。 另一方面，系统管理员亦可手动创建所需的软链接， 特别是在需要创建不同于默认软链接名称的时候。 不过需要注意的是，系统管理员必须在创建完软连接之后手动执行
\fBdaemon\-reload\fR
命令， 以确保所做的变更立即生效。
.sp
不要将此命令与
\fBstart\fR
命令混淆，它们是相互独立的命令： 可以启动一个尚未启用的单元，也可以启用一个尚未启动的单元。
\fBenable\fR
命令只是设置了单元的启动钩子(通过创建软链接)， 例如在系统启动时或者某个硬件插入时，自动启动某个单元。 而
\fBstart\fR
命令则是具体执行单元的启动操作， 例如对于服务单元来说就是启动守护进程，而对于套接字单元来说则是绑定套接字，等等。
.sp
若与
\fB\-\-user\fR
选项连用，则表示变更仅作用于用户实例，否则默认作用于系统实例(相当于使用
\fB\-\-system\fR
选项)。 若与
\fB\-\-runtime\fR
选项连用，则表示仅作临时性变更(重启后所有变更都将丢失)，否则默认为永久性变更。 若与
\fB\-\-global\fR
选项连用，则表示变更作用于所有用户(在全局用户单元目录上操作)，否则默认仅作用于当前用户(在私有用户单元目录上操作)。 注意，当与
\fB\-\-runtime\fR
选项连用时，systemd 守护进程不会重新加载自身的配置。
.sp
不可将此命令应用于已被
\fBmask\fR
命令屏蔽的单元，否则将会导致错误。
.RE
.PP
\fBdisable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
停用指定的单元或单元实例(多数时候相当于撤销这些单元的"开机时自动启动"以及"插入某个硬件时自动启动")。 这将会从单元目录中删除所有指向单元自身及所有支持单元的软链接。 这相当于撤销
\fBenable\fR
或
\fBlink\fR
命令所做的操作。 注意，此命令会删除\fI所有\fR指向单元自身及所有支持单元的软链接， 包括手动创建的软连接以及通过
\fBenable\fR
与
\fBlink\fR
命令创建的软连接。 注意，虽然
\fBdisable\fR
与
\fBenable\fR
是一对相反的命令，但是它们的效果并不一定总是完全对称的。 因为
\fBdisable\fR
删除的软连接数量有可能比上一次
\fBenable\fR
命令创建的软连接数量更多。
.sp
此命令的参数仅能接受单元的名字，而不能接受单元文件的路径。
.sp
除了停用参数中明确指定的单元之外，那些在被停用单元
"[Install]"
小节的
\fIAlso=\fR
选项中列出的所有单元，也同样会被停用。 也就是说，这个停用动作是沿着
\fIAlso=\fR
选项不断传递的。
.sp
删除完软连接之后， systemd 将会自动重新加载自身的配置(相当于执行
\fBdaemon\-reload\fR
命令)，以确保所做的变更立即生效。 注意，除非同时使用了
\fB\-\-now\fR
选项(相当于同时执行
\fBstop\fR
命令)， 否则停用一个单元\fI并不会\fR导致该单元被停止。
.sp
除非使用了
\fB\-\-quiet\fR
选项， 否则此命令还会显示对文件系统所执行的操作(Removed symlink \&.\&.\&.)。
.sp
有关
\fB\-\-system\fR,
\fB\-\-user\fR,
\fB\-\-runtime\fR,
\fB\-\-global\fR
选项的影响，参见上面对
\fBenable\fR
命令的解释。
.RE
.PP
\fBreenable \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
重新启用指定的单元或单元实例。 这相当于先使用
\fBdisable\fR
命令之后再使用
\fBenable\fR
命令。 通常用于按照单元文件中
"[Install]"
小节的指示重置软链接名称。 此命令的参数仅能接受单元的名字，而不能接受单元文件的路径。
.RE
.PP
\fBpreset \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
按照预设文件(*\&.preset)的指示，重置指定单元的启用(enable)/停用(disable)状态。 其效果等价于按照预设规则，对列出的单元依次使用
\fBdisable\fR
或
\fBenable\fR
命令。
.sp
可以使用
\fB\-\-preset\-mode=\fR
选项控制如何参照预设文件： 既启用又停用、仅启用、仅停用
.sp
如果指定单元的
"[Install]"
小节不包含必要的启用信息， 那么此命令将会悄无声息的忽略该单元。
.sp
有关预设文件的更多说明，详见
\fBsystemd.preset\fR(5)
手册与
\m[blue]\fBPreset\fR\m[]\&\s-2\u[1]\d\s+2
文档。
.RE
.PP
\fBpreset\-all\fR
.RS 4
按照预设文件(*\&.preset)的指示， 重置全部单元的启用(enable)/停用(disable)状态(参见上文)。
.sp
可以使用
\fB\-\-preset\-mode=\fR
选项控制如何参照预设文件： 既启用又停用、仅启用、仅停用
.RE
.PP
\fBis\-enabled \fR\fB\fINAME\fR\fR\fB\&.\&.\&.\fR
.RS 4
检查是否有至少一个指定的单元或单元实例已经被启用。如果有，那么返回"0"，否则返回非零。 除非使用了
\fB\-\-quiet\fR
选项，否则此命令还会显示指定的单元或单元实例的当前启用状态：
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&is\-enabled 命令的输出
.TS
allbox tab(:);
lB lB lB.
T{
状态
T}:T{
含义
T}:T{
返回值
T}
.T&
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l.
T{
"enabled"
T}:T{
已经通过 /etc/systemd/system/*\&.{wants,requires}/ 目录下的软连接被永久启用
T}:T{
0
T}
T{
"enabled\-runtime"
T}:T{
已经通过 /run/systemd/system/*\&.{wants,requires}/ 目录下的软连接被临时启用
T}:T{
0
T}
T{
"linked"
T}:T{
虽然单元文件本身不在标准单元目录中，但是指向此单元文件的一个或多个软连接已经存在于 /etc/systemd/system/ 永久目录中
T}:T{
> 0
T}
T{
"linked\-runtime"
T}:T{
虽然单元文件本身不在标准单元目录中，但是指向此单元文件的一个或多个软连接已经存在于 /run/systemd/system/ 临时目录中
T}:T{
> 0
T}
T{
"masked"
T}:T{
已经被 /etc/systemd/system/ 目录永久屏蔽(软连接指向 /dev/null 文件)，因此 \fBstart\fR 操作会失败
T}:T{
> 0
T}
T{
"masked\-runtime"
T}:T{
已经被 /run/systemd/systemd/ 目录临时屏蔽(软连接指向 /dev/null 文件)，因此 \fBstart\fR 操作会失败
T}:T{
> 0
T}
T{
"static"
T}:T{
尚未被启用，并且单元文件的 "[Install]" 小节中没有可用于 \fBenable\fR 命令的选项
T}:T{
0
T}
T{
"indirect"
T}:T{
尚未被启用，但是单元文件的 "[Install]" 小节中 \fIAlso=\fR 选项的值列表非空(也就是列表中的某些单元可能已被启用)
T}:T{
0
T}
T{
"disabled"
T}:T{
尚未被启用，但是单元文件的 "[Install]" 小节中存在可用于 \fBenable\fR 命令的选项
T}:T{
> 0
T}
T{
"generated"
T}:T{