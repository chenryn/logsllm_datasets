**Steps to reproduce** \- see Plnkr demo below ( ** _touchscreen required_** )
I have a Parent Component with an array (of Child Components) that is rendered
using * **ngFor**.
``
Within MyChildCmp I have an event listener to detect which child is being
dragged
    @HostListener('mousedown', ['$event'])
    @HostListener('touchstart', ['$event'])
    onDragStart(event) {
        this.selected.emit(this.info.id);
    }
The Parent Component enables each Child Component to be ' _Dragged_ ' about
the screen by
    @HostListener('mousemove', ['$event'])
    @HostListener('touchmove', ['$event'])
    onDragMove(event) { 
      ...
    }
    @HostListener('mouseup', ['$event'])
    @HostListener('touchend', ['$event'])
    @HostListener('touchcancel', ['$event'])
    onDragEnd(event) { 
       ...
    }
**However** , if an event causes the _children_ array to be updated **during a
drag** , it causes the TouchEvents (i.e. touchmove, touchend, touchcancel) to
**stop firing** if the Child component was removed from the DOM. Using a mouse
instead of touchscreen **has no issues whatsoever!**
**Use case** : Appointment bookings system. Child Component is a booking, you
drag the booking to the 'Next Day' button, which updates the children array to
the next day's bookings. Angular 2 removes the previous days bookings from the
DOM (even when touchstart is stiil bound to removed element)
See my Plnkr demo below, where I update the _children_ array **_after 2
seconds of dragging_**.
_Plnkr Demo:https://plnkr.co/edit/1RzYpEgCI0y60pCauvGp?p=preview_
**Expected/desired behavior** : If the mouse behaviour works, I'd expect the
touch equivalent to work the same.
Angular2 should give the user programmatic ability to keep a single component
from being removed from the DOM (i.e. the component being dragged) OR first
check if there is an active **_touchstart_** event on a Component it is about
to remove from the DOM. It'd be great if it wasn't removed until _touchend_ or
_touchcancel_ was fired (maybe setting display: none?)
**Other information**  
Tested in: Chrome 49.0.2623.87 m (Win7 Touchscreen) and iOS Safari 9.2.1  
Angular2 Beta14