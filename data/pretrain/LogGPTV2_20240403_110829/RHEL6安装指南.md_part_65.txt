    使用 `cio_ignore`{.command} 命令从忽略的设备列表中删除 FCP
    适配器，并使其出现在 Linux 中：
    :::
    ``` screen
    # cio_ignore -r DeviceNumber
    ```
    ::: para
    使用 FCP 适配器的设备号替换 *DeviceNumber*。例如：
    :::
2.  ::: para
    要使 FCP 适配器在线，请使用以下命令：
    :::
    ``` screen
    # chccwdev -e fc00
    ```
3.  ::: para
    确认 zfcp 设备驱动程序自动端口扫描找到的所需 WWPN：
    :::
    ``` screen
    # ls -l /sys/bus/ccw/drivers/zfcp/0.0.fc00/
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630040710b
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x50050763050b073d
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630e060521
    drwxr-xr-x.  3 root root    0 Apr 28 18:19 0x500507630e860521
    -r--r--r--.  1 root root 4096 Apr 28 18:17 availability
    -r--r--r--.  1 root root 4096 Apr 28 18:19 card_version
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 cmb_enable
    -r--r--r--.  1 root root 4096 Apr 28 18:17 cutype
    -r--r--r--.  1 root root 4096 Apr 28 18:17 devtype
    lrwxrwxrwx.  1 root root    0 Apr 28 18:17 driver ->  ../../../../bus/ccw/drivers/zfcp
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 failed
    -r--r--r--.  1 root root 4096 Apr 28 18:19 hardware_version
    drwxr-xr-x. 35 root root    0 Apr 28 18:17 host0
    -r--r--r--.  1 root root 4096 Apr 28 18:17 in_recovery
    -r--r--r--.  1 root root 4096 Apr 28 18:19 lic_version
    -r--r--r--.  1 root root 4096 Apr 28 18:17 modalias
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 online
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_d_id
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_wwnn
    -r--r--r--.  1 root root 4096 Apr 28 18:19 peer_wwpn
    --w-------.  1 root root 4096 Apr 28 18:19 port_remove
    --w-------.  1 root root 4096 Apr 28 18:19 port_rescan
    drwxr-xr-x.  2 root root    0 Apr 28 18:19 power
    -r--r--r--.  1 root root 4096 Apr 28 18:19 status
    lrwxrwxrwx.  1 root root    0 Apr 28 18:17 subsystem ->  ../../../../bus/ccw
    -rw-r--r--.  1 root root 4096 Apr 28 18:17 uevent
    ```
4.  ::: para
    通过将 FCP LUN 添加到要访问 LUN 的端口（WWPN）激活它：
    :::
    ``` screen
    # echo 0x4020400100000000 > /sys/bus/ccw/drivers/zfcp/0.0.fc00/0x50050763050b073d/unit_add
    ```
5.  ::: para
    找到分配的 SCSI 设备名称：
    :::
    ``` screen
    # lszfcp -DV
    /sys/devices/css0/0.0.0015/0.0.fc00/0x50050763050b073d/0x4020400100000000
    /sys/bus/ccw/drivers/zfcp/0.0.fc00/host0/rport-0:0-21/target0:0:21/0:0:21:1089355792
    ```
:::
::: para
有关详情请参考*《System z 中的 Linux： Red Hat Enterprise Linux 6
中的设备驱动程序、特性和命令》*中《使用光纤的 SCSI》一章。
:::
:::
::: section
::: titlepage
## [⁠]{#ap-s390info.html#ap-s390info-Adding_FCP-Attached_LUNs-Persistently}25.2.2. 永久激活 FCP LUN {.title}
:::
::: para
上面的步骤描述了如何在运行的系统中动态激活 FCP
LUN。但是这种更改是临时的，重启后无法保留。如何将在 Linux 系统中对 FCP
配置的修改保留下来要看 FCP LUN 是否属于 root
文件系统。必须在引导进程早期使用 `initramfs`{.systemitem} 激活那些 root
文件系统所需的 FCP LUN 方可将其挂载到 root
文件系统中。`cio_ignore`{.command}
是以透明方式处理永久设备配置，不需要在忽略列表中手动释放设备。
:::
::: section
::: titlepage
### [⁠]{#ap-s390info.html#ap-s390info-Adding_FCP-Attached_LUNs-Persistently-Part_of_root_file_system}25.2.2.1. FCP LUN 是 Root 文件系统的一部分 {.title}
:::
::: para
添加作为 root 文件系统一部分的 FCP LUN 时唯一需要修改的文件是
`/etc/zipl.conf`{.filename}，然后运行 [**zipl**]{.application}
引导装载程序工具。不需要重新生成 `initramfs`{.systemitem}。
:::
::: para
Red Hat Enterprise Linux 提供在引导进程早期激活 FCP LUN
的参数：*`rd_ZFCP=`*。该参数真是一个用逗号分开的设备总线 ID 列表、前缀为
`0x`{.literal} 的 16 位十六进制 WWPN，以及前缀为
`0x`{.literal}，后接多个 0 以达到 16 位十六进制数的 FCP LUN。
:::
::: para
下面的 `zipl.conf`{.filename} 示例适用于使用在两个 FCP LUN
分区中的物理卷作为 LVM 卷组
`vg_devel1`{.systemitem}，该卷组中包括一个用于 root 文件系统的逻辑卷
`lv_root`{.systemitem}。为方便演示，该示例显示没有多路径的配置。
:::
``` screen
[defaultboot]
default=linux
target=/boot/
[linux]
image=/boot/vmlinuz-2.6.32-19.el6.s390x
ramdisk=/boot/initramfs-2.6.32-19.el6.s390x.img
parameters="root=/dev/mapper/vg_devel1-lv_root
rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a000000000
rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a100000000
rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8
SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!0.0.0009"
```
::: para
要在包含第三 FCP LUN（其设备总线 ID 为 0.0.fc00；WWPN
0x5105074308c212e9；FCP LUN
0x401040a300000000）的分区中另一个物理卷，只要在 `zipl.conf`{.filename}
的引导内核参数行中添加
`rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a300000000`{.literal}
即可。例如：
:::
``` screen
[defaultboot]
default=linux
target=/boot/
[linux]
image=/boot/vmlinuz-2.6.32-19.el6.s390x
ramdisk=/boot/initramfs-2.6.32-19.el6.s390x.img
parameters="root=/dev/mapper/vg_devel1-lv_root
rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a000000000
rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a100000000
rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a300000000
rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8
SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!0.0.0009"
```
::: para
运行 `zipl`{.command} 在下次 IPL 时应用对 `/etc/zipl.conf`{.filename}
的修改：
:::
``` screen
# zipl -V
Using config file '/etc/zipl.conf'
Target device information
Device..........................: 08:00
Partition.......................: 08:01
Device name.....................: sda
Device driver name..............: sd
Type............................: disk partition
Disk layout.....................: SCSI disk layout
Geometry - start................: 2048
File system block size..........: 4096
Physical block size.............: 512
Device size in physical blocks..: 10074112
Building bootmap in '/boot/'
Building menu 'rh-automatic-menu'
Adding #1: IPL section 'linux' (default)
kernel image......: /boot/vmlinuz-2.6.32-19.el6.s390x
kernel parmline...: 'root=/dev/mapper/vg_devel1-lv_root rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a000000000 rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a100000000 rd_ZFCP=0.0.fc00,0x5105074308c212e9,0x401040a300000000 rd_LVM_LV=vg_devel1/lv_root rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=us cio_ignore=all,!0.0.0009'
initial ramdisk...: /boot/initramfs-2.6.32-19.el6.s390x.img
component address:
kernel image....: 0x00010000-0x007a21ff
parmline........: 0x00001000-0x000011ff
initial ramdisk.: 0x02000000-0x028f63ff
internal loader.: 0x0000a000-0x0000a3ff
Preparing boot device: sda.
Detected SCSI PCBIOS disk layout.
Writing SCSI master boot record.
Syncing disks...
Done.
```
:::
::: section
::: titlepage
### [⁠]{#ap-s390info.html#ap-s390info-Adding_FCP-Attached_LUNs-Persistently-Not_part_of_root_file_system}25.2.2.2. FCP LUN 不是 Root 文件系统的一部分 {.title}
:::
::: para
不是 root 文件系统一部分的 FCP LUN，比如数据磁盘，是在
`/etc/zfcp.conf`{.filename} 中永久配置的。每行有一个 FCP LUN，包含 FCP
适配器的设备总线 ID、前缀为 `0x`{.literal} 的 16 位十六进制
WWPN，以及前缀为 `0x`{.literal} 并附加多个 0 以达到 16 位十六进制数的
FCP LUN，中间使用空格或者 tab 分开。`/etc/zfcp.conf`{.filename}
中的条目是在将 FCP 适配器添加到系统中时友 udev
激活和配置。在引导时，系统会添加所有可看到的 FCP 适配器并启动
[**udev**]{.application}。
:::
::: para
/etc/zfcp.conf 所内容示例：
:::
``` screen
0.0.fc00 0x5105074308c212e9 0x401040a000000000
0.0.fc00 0x5105074308c212e9 0x401040a100000000
0.0.fc00 0x5105074308c212e9 0x401040a300000000
0.0.fcd0 0x5105074308c2aee9 0x401040a000000000
0.0.fcd0 0x5105074308c2aee9 0x401040a100000000
0.0.fcd0 0x5105074308c2aee9 0x401040a300000000
```
::: para
对 `/etc/zfcp.conf`{.filename} 的修改只在系统重启或者更改系统 I/O
配置动态添加新 FCP 通道（例如：在 z/VM
里附加一个通道）时生效。另外，可以执行以下命令，为之前没有激活的 FCP
适配器激活 `/etc/zfcp.conf`{.filename} 中的新条目：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    使用 `cio_ignore`{.command} 命令从忽略的设备列表中删除 FCP
    适配器，并使其出现在 Linux 中：
    :::
    ``` screen
    # cio_ignore -r DeviceNumber
    ```
    ::: para
    使用 FCP 适配器的设备号替换 *DeviceNumber*。例如：
    :::
    ``` screen
    # cio_ignore -r fcfc
    ```
2.  ::: para
    要触发激活更改的 uevent，请执行：
    :::
    ``` screen
    echo add > /sys/bus/ccw/devices/Device.Bus.ID/uevent
    ```
    ::: para
    例如：
    :::
    ``` screen
    echo add > /sys/bus/ccw/devices/0.0.fcfc/uevent
    ```
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#ap-s390info.html#ap-s390info-Adding_a_Network_Device}25.3. 添加网络设备 {.title}
:::
::: para
网络设备驱动程序模块自动由 [**udev**]{.application} 载入。
:::
::: para
可动态或者永久在 IBM System z 中添加网络接口。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    动态
    :::
    ::: procedure
    1.  ::: para
        载入设备驱动程序
        :::
    2.  ::: para
        从忽略的设备列表中删除网络设备。
        :::
    3.  ::: para
        创建组设备。
        :::
    4.  ::: para
        配置该设备。
        :::
    5.  ::: para
        在线设置设备。
        :::
    :::
-   ::: para
    永久
    :::
    ::: procedure
    1.  ::: para
        创建配置脚本。
        :::
    2.  ::: para
        激活该接口。
        :::
    :::
:::
::: para
下面的部分为每个 IBM System z
网络设备驱动程序的每个任务提供基本信息。[第 25.3.1 节 "添加 qeth
设备"](#ap-s390info.html#ap-s390info-Adding_a_Network_Device-qeth_Device){.xref}
描述如何在现有 Red Hat Enterprise Linux 实例中添加 qeth
设备。[第 25.3.2 节 "添加 LCS
设备"](#ap-s390info.html#ap-s390info-Adding_a_Network_Device-LCS_Device){.xref}
描述如何在 Red Hat Enterprise Linux 现有实例中添加 lcs
设备。[第 25.3.3 节
"映射子通道和网络设备名称"](#ap-s390info.html#ap-s390info-Adding_a_Network_Device-Mapping_Subchannels_and_network_device_names){.xref}
描述如何永久保留网络设备名称。[第 25.3.4 节 "为网络 Root 文件系统配置
System z
网络设备"](#ap-s390info.html#ap-s390info-Adding_a_Network_Device-Configuring_network_device_for_Network_Root_File_System){.xref}
描述如何将网络设备配置为使用只能通过网络访问的 root 文件系统。
:::
::: section
::: titlepage
## [⁠]{#ap-s390info.html#ap-s390info-Adding_a_Network_Device-qeth_Device}25.3.1. 添加 qeth 设备 {.title}
:::
::: para
qeth 网络设备驱动程序支持 System z QDIO 模式、HiperSocket、z/VM 客体 LAN
以及 z/VM VSWITCH 的 OSA 快速特性。
:::
::: para
根据所添加接口的类型，qeth 设备驱动程序分配以下三个基本接口名之一：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    hsi*n* 用于 HiperSocket 设备
    :::
-   ::: para
    hsi*n* 用于以太网特性
    :::
:::
::: para
*n* 的值是一个唯一的整数值来区分不同的设备。*n* 为 0
代表此种类型中的第一个设备，1 为第 2 个设备，依次类推。
:::
::: section
::: titlepage
### [⁠]{#ap-s390info.html#ap-s390info-Adding_a_Network_Device-qeth_Device-Dynamically}25.3.1.1. 动态添加 qeth 设备 {.title}
:::
::: para
要动态添加 qeth 设备，请按照以下步骤执行：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    决定是否载入 qeth 设备驱动程序模块。以下示例先生载入的 qeth 模块：
    :::
    ``` screen
    # lsmod | grep qeth
    qeth_l3                  127056  9
    qeth_l2                   73008  3
    ipv6                  492872  155ip6t_REJECT,nf_conntrack_ipv6,qeth_l3