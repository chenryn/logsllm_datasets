#### 细节
在进程列表上面有一大堆有用的信息。有些细节看起来有点儿奇怪，让人困惑。但是一旦你花点儿时间来逐个过一遍，你会发现，在紧要关头，这些是非常有用的。
第一行包含系统的大致信息：
* `top`：我们正在运行 `top`！你好！`top`！
* `XX:YY:XX`：当前时间，每次屏幕更新的时候更新
* `up`（接下去是 `X day, YY:ZZ`）：系统的 [uptime](https://en.wikipedia.org/wiki/Uptime)，或者自从系统启动后已经过去了多长时间
* `load average`（后跟三个数字）：分别是过去一分钟、五分钟、15 分钟的[系统负载](https://en.wikipedia.org/wiki/Load_(computing))
第二行（`Task`）显示了正在运行的任务的信息，不用解释。它显示了进程总数和正在运行的、休眠中的、停止的进程数和僵尸进程数。这实际上是上述 `S`（状态）列的总和。
第三行（`%Cpu(s)`）显示了按类型划分的 CPU 使用情况。数据是屏幕刷新之间的值。这些值是：
* `us`：用户进程
* `sy`：系统进程
* `ni`：[nice](https://en.wikipedia.org/wiki/Nice_(Unix)#Etymology) 用户进程
* `id`：CPU 的空闲时间，这个值比较高时说明系统比较空闲
* `wa`：等待时间，或者消耗在等待 I/O 完成的时间
* `hi`：消耗在硬件中断的时间
* `si`：消耗在软件中断的时间
* `st`：“虚拟机管理程序从该虚拟机窃取的时间”
你可以通过点击 `t`（toggle）来展开或折叠 `Task` 和 `%Cpu(s)` 行。
第四行（`Kib Mem`）和第五行（`KiB Swap`）提供了内存和交换空间的信息。这些数值是：
* 总内存容量
* 已用内存
* 空闲内存
* 内存的缓冲值
* 交换空间的缓存值
默认它们是用 KiB 为单位展示的，但是按下 `E`（扩展内存缩放 extend memory scaling）可以轮换不同的单位：KiB、MiB、GiB、TiB、PiB、EiB（kilobytes、megabytes、gigabytes、terabytes、petabytes 和 exabytes）
`top` 用户手册有更多选项和配置项信息。你可以运行 `man top` 来查看你系统上的文档。还有很多 [HTML 版的 man 手册](http://man7.org/linux/man-pages/man1/top.1.html)，但是请留意，这些手册可能是针对不同 top 版本的。
### 两个 top 的替代品
你不必总是用 `top` 查看系统状态。你可以根据你的情况用其它工具来协助排查问题，尤其是当你想要更图形化或更专业的界面的时候。
#### htop
`htop` 很像 `top`，但是它带来了一些非常有用的东西：它可以以图形界面展示 CPU 和内存使用情况。
![](/data/attachment/album/201808/21/085623piirpzvx4rpxpyry.png)
这是我们在刚才运行 `top` 的同一环境中 `htop` 的样子。显示更简洁，但功能却很丰富。
任务统计、负载、uptime 和进程列表仍然在，但是它有了漂亮、彩色、动态的每核 CPU 使用情况，还有图形化的内存使用情况。
以下是不同颜色的含义（你也可以通过按下 `h` 来获得这些信息的帮助）。
CPU 任务优先级或类型：
* 蓝色：低优先级
* 绿色：正常优先级
* 红色：内核任务
* 蓝色：虚拟任务
* 条状图末尾的值是已用 CPU 的百分比
内存：
* 绿色：已经使用的内存
* 蓝色：缓冲的内存
* 黄色：缓存内存
* 条状图末尾的值显示已用内存和总内存
如果颜色对你没用，你可以运行 `htop -C` 来禁用它们；那样 `htop` 将使用不同的符号来展示 CPU 和内存类型。
它的底部有一组激活的快捷键提示，可以用来操作过滤结果或改变排序顺序。试着按一些快捷键看看它们能做什么。不过尝试 `F9` 时要小心，它会调出一个信号列表，这些信号会杀死（即停止）一个过程。我建议在生产环境之外探索这些选项。
`htop` 的作者 Hisham Muhammad（是的，`htop` 的名字就是源自 Hisham 的）在二月份的 [FOSDEM 2018](https://fosdem.org/2018/schedule/event/htop/) 做了一个[简短的演讲](https://www.youtube.com/watch?v=L25waVhy78o)。他阐述了 `htop` 不仅有简洁的图形界面，还有更现代的进程信息统计展示方式，这都是之前的工具（如 `top`）所不具备的。
你可以在[手册页面](https://linux.die.net/man/1/htop)或 [htop 网站](https://hisham.hm/htop/index.php)阅读更多关于 `htop` 的信息。（提示：网站背景是一个动态的 `htop`。）
#### docker stats
如果你在用 Docker，你可以运行 `docker stats` 来为容器状态生成一个有丰富上下文的界面。
这可能比 `top` 更有帮助，因为它不是按进程分类，而是按容器分类的。这点特别有用，当某个容器运行缓慢时，查看哪个容器耗资源最多比运行 `top` 再找到容器的进程要快。
借助于上面对 `top` 和 `htop` 术语的解释，你应该会更容易理解 `docker stats` 中的那些。然而，[docker stats 文档](https://docs.docker.com/engine/reference/commandline/stats/)对每一列都提供了详尽的描述。
---
via: 
作者：[Katie McLaughlin](https://opensource.com/users/glasnt) 选题：[lujun9972](https://github.com/lujun9972) 译者：[ypingcn](https://github.com/ypingcn) 校对：[pityonline](https://github.com/pityonline)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出