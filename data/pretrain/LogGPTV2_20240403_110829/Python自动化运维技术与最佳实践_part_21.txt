"changed*: false
注意返回JSON的层次结构，preferences（facts文件名前缀）→general（INI的节名）
key:value（INI的键与值），最后就可以在我们的模板或playbook中通过以下方式进行调用：
(( ansible_local .preferences-general. open_files 1)
9.9.3注册变量
变量的另一个用途是将一条命令的运行结果保存到变量中，供后面的playbook使用。下
面是一个简单的示例：
hosts: web_servers
tasks1
- she1l: /usr/bin/foo
register: foo_result
Ignore_errors1 True
she11: /usr/bin/bar
vhen: foo_result.rc "= 5
上述示例注册了一个foo_result 变量，变量值为 shell:/ustr/bin/foo 的运行结果，ignore
errors：True为忽略错误。变量注册完成后，就可以在后面playbook中使用了，当条件语句
when:foo_result.rc =5成立时，shell/usr/bin/bar命令才会运行，其中foo_result.rc 为返回/
usr/bin/foo的resultcode（返回码）。图 9-8返回“rc=0”的返回码。
---
## Page 166
第9章集中化管理平台Ansible详解145
92.168.1.211
图9-8命令执行结果
9.10条件语句
有时候一个playbook的结果取决于一个变量，或者取决于上一个任务（task）的执行结
果值，在某些情况下，一个变量的值可以依赖于其他变量的值，当然也会影响Ansible的执
行过程。
下面主要介绍When声明。
有时候我们想跳过某些主机的执行步骤，比如符合特定版本的操作系统将不安装某个软
件包，或者磁盘空间爆满了将进行清理的步骤。在Ansible中很容易做到这一点，通过When
子句实现，其中将引用Jinja2表达式。下面是一个简单的示例：
tasks1
tuose.e pozoseg uerqog unopanqa。 1aueu
conmand: /sbin/shutdown -t now
when: ans Lb1e_os_fam1ly == *Debian*
通过定义任务的Facts本地变量ansible_os_family（操作系统版本名称）是否为Debian，
结果将返回 BOOL类型值，为True 时将执行上一条语句command:/sbin/shutdown-tnow，为
False时该条语句都不会触发。我们再看一个示例，通过判断一条命令执行结果做不同分支的
二级处理。
tasks:
conmand: /bin/false
register: result
ignore_errors: True
command: /bin/something
when1 resultlfailed
command: /bin/something_else
command: /bin/sti11/sonething_e1se
vhen: resultlsuccess
when1 resultIskipped
“when:resultisuccess”的意思为当变量result 执行结果为成功状态时，将执行/bin/
something_else 命令，其他同理，其中 success为Ansible内部过滤器方法，返回Ture代表命
令运行成功。
---
## Page 167
146第二部分高级篇
9.11循环
通常一个任务会做很多事情，如创建大量的用户、安装很多包，或重复轮询特定的步
骤，直到某种结果条件为止，Ansible为我们提供了此支持。下面是一个简单的示例：
- name: add several users
user1name=((item 1) state=present groups=wheel
xith_items:
- testuser1
- testuser2
这个示例实现了一个批量创建系统用户的功能，with_items会自动循环执行上面的语句
“user:name={{item}}state=present groups=wheel”，循环的次数为with_items 的元素个数，
这里有2个元素，分别为 testuser1、testuser2，会分别替换{{item}}项。这个示例与下面的
示例是等价的：
- name: add user testuserl
user: mame=testuserl state=present groups=wheel
name: add user testuser2
user: nane=testuser2 state=present groups=whee1
当然，元素也支持字典的形式，如下：
- name1 add several users
user: nane=(( item.nane 1) state=present groups=(( item.groups 1)
with_itens:
(tooga,1edno16*,tzoen2se1,1oueu ] -
循环也支持列表（List）的形式，不过是通过with_fattened语句来实现的，例如：
 file: roles/foo/vars/main.ym1
iaspq sabexoed
[,abexoed-zeq, ',abeyoed-ooy, ] -
packages_apps:
[[,ofexoed-oxs, ',abeyoed-euo,] ] -
[[,obexoed-anta,1 *(,obexoed-pex,1 1 -
以上定义了两个列表变量，分别是需要安装的软件包名，以便后面进行如下引用：
- nane1 flattened 1oop demo
yun: name=(( iten )) state=installed
vith_flattened:
sdde"sebeyoed -
---
## Page 168
第9章集中化管理平台Ansible洋解147
通过使用with_flattened语句循环引用定义好的列表变量。
9.12示例讲解
官网提供的Haproxy+LAMP+Nagios经典示例，也是目前国内最常用的技术架构，此案
例访[间地加址 为：https://github.com/ansible/ansible-examples/tree/master/lamp_haproxy。下面将
对该示例进行详细说明，内容覆盖前面涉及的几乎所有知识点，起到温故的作用，同时作为
对Ansible的总结内容。
下面介绍playbook的基本信息。
1.目录结构
示例playbook 目录结构见图 9-9。
图9-9示例目录结构
---
## Page 169
148第二部分高级篇
2.设备环境说明
两台Web主机、1台数据库主机、1台负载均衡器主机、1台监控主机，hosts配置如下：
[ hosts ]
[webservers]
web1
web2
[dbservers]
db1
[lbservers]
1b1
[monitoring]
sotbou
3. palybook 人口文件 site.yml
需要注意的是base-apache角色，由于webservers及monitoring 都需要部署Apache环
境，为提高复用性，将部署Apache独立成base-apache角色。
[ Site.yml 】
- bosts: al1
role81
hosts: dbservers
- common
user: root
role8:
- db
- hosts1 webservers
user: root
roles:
- base-apache
- veb
hosts: lbservers
user: root
role8:
- haproxy
hosts: monitoring
user: root
eoedt-oseq -
- nag108
---
## Page 170
第9章集中化管理平台Ansible详解149
4.定义组变量
下面定义playbook全局变量，变量作用域为所有主机。
[ group_vars/all ]
 Variables here are applicable to all bost groups
httpd_port: 80
stpserver: 192.168.1.2
all文件定义了匹配所有主机作用域的变量，一般为系统公共类基础配置，如ntpserver
地址、sysctl 变量、iptables 配置等。
下面为定义webservers组的变量，变量作用域为webservers 组主机。
[ group_vars/webservers ]
 Variables for the web server configuration
# Ethernet interface on which the web server should listen,
 Defaults to the first interface. Change this to:
1face1 ethl
-..to override.
lface: *(( ansible_default_ipv4.interface 1)*
repository: https://github. com/bennojoy/mywebapp git
+ this is the repository that holds our sample webapp
# this is the sbalsum of v5 of the test webapp.
rebapp_ver8ion: 351e47276cc66b018f4890a04709d4cc3d3edb0d
webservers文件定义了webservers 组作用城的变量。本示例涉及Apache相关配置，其
中“iface:‘{ansible_default_ipv4.interface}}”引用了Facts 获取的本地网卡接口名信息，另
外定义了一个GitHub的repository，方便下载Web测试文件，如内部搭建git版本控制环境，
此处也可以修改成本地的服务地址。
下面为定义dbservers组的变量，变量作用域为dbservers组主机。
[ group_vars/dbservers 】
+ The variables file used by the playbooks in the dbservers group
---
## Page 171
150第二部分高级篇
autopopulated.
nyeqlservice: nysqld
mysq1_port1 3306
dbuser1 root
dbnane: foodb
oqe ipaonssedn
dbservers文件定义了dbservers组作用域变量，本示例涉及MySQL数据库的基本应用
信息。
下面为定义Ibservers 组作用域变量文件，本示例主要涉及haproxy环境涉及的配置参
数值。
[ group_vars/lbservers 
 Variables for the HAproxy configuration
 HAProxy supports *http” and *tcp*, For SSL, SMTP, etc, use "tcp*,
mode: http
 Port on which HAProxy should listen
listenport: 8888
 A nane for the proxy daemon, this wil be the suffix in the logs.
daenonnane 1 myapp1b
 Balancing Algorithm. Avallable options:
roundrobin, source, leastconn, source, uri
(if persistance is required use, "sosrce*)
balance: roundrobin
 Ethernet interface on which the load balancer should 1isten
 Defaults to the first Interface. Change this to1
iface: ethl
 ...to override.
iface: *(1 ansible_default_ipv4.interface 1)*
5.playbook角色详解
本示例划分了6个角色，包括 base-apache、common、db、haproxy、nagios、web，分别
对应6个功能环境部署，根据不同业务场景的需求，可以随意加、减角色，如将base-apache
更换成nginx，然后在 site.yml 中引用。
---
## Page 172
第9章集中化管理平台Ansible详解151
（1）common角色
common的主要功能是部署、配置系统基础服务，包括yum源、安装nagios插件、NTP
服务、iptables、SELinux等.任务（tasks）的定义如下：
[ roles/common/tasks/main.yml ]
 This role contains common plays that will run on all nodes.
name: Create the repository for EPEL
copy: src=epel.repo dest=/etc/yum,repos.d/epel ,repo
name: Create the GPG key for EPBL
copy: src=RPM-GPG=KEY-EPEL-6 dest=/etc/pki/rpm-gpg
nane: instal1 some useful naglos plugins
yum: nane=({ item )} state=present
with_itens1
nagios-nrpe
dens=sutbn[d-soT5eu -
sxesn-gutbntd-so16eu
nagios-plugins=procs
peot-eut6nd-sotbeu
- nagios-plugins-disk
- name: Install ntp
yum: nane=ntp state=present
dqu :s6e3
name: Configure ntp file
template: src=ntp.conf,2 dest=/etc/ntp-conf
notify: restart ntp
tags: ntp
same: Start the ntp service
service: name=ntpd state=started enabled=trve
tagsi ntp
name: insert iptabies tenplate
template: 8rc=iptables.12 dest=/ete/sysconfig/iptables
notify: restart iptables
- name: test to see if selinux is running
cosnand: getenforce
changed_when: false
reglster: sestatus
上述代码定义了两个远程文件复制copy，其中src（源文件）的默认位置在roles/
common/files，使用 with_item标签实现循环安装nagios 插件，同时安装ntp服务，引用模
---
## Page 173
152第二部分高级篇
块文件roles/common/templatesntp.conf.j2，且同步到目标主机/etc/ntp.conf位置。配置系统
iptables，引|用roles/common/templates/ iptables.j2模板，notify:restart iptables”，状态或模
板发生变化时将通知处理程序（handlers）来处理。“command:getenforce”运行getenforce来
检测selinux是否在运行状态，“changed_when:false”作用为不记录命令运行结果的 changed
状态，即 changed为 False。
下面定义common角色的处理程序。
[ roles/common/handlers/main.yml ]
Handlers for connon notifications
==
dsu 1zeleeu 1outu
service: name=ntpd state=restarted
- nane: restart iptables
service: name=iptables state=restarted
上述代码定义了两个处理程序，功能分别为重启ntp、iptables服务，其中“name:restart
同理。
下面定义了common角色iptables的配置模板：
[ roles/common/templates/iptables.j2 】
($if (inventory_hostname in groups[*vebservers*]) or (inventory_hostname in
[$([,5uTxoTuou, ) ednoxb
Iaaoov [- 08 4xodp--  do d- Lndn1 V-
($JTpue $)
( for host In groups ['nonltoring*] )
-A INPUT -p tcp -s ({ hostvars[host] -ansible_default_ipv4.address 1} --dport
143Y [- 9999
($2ogpue $)
“inventory_hostname”作为存放在Ansible 的inventory文件中的主机名或IP，好处
是可以不依靠Facts的主机名参数ansible_hostmname 或其他原因，一般情况下inventory_
hostname 等于ansible_hostname，但有时候我们习惯在Ansible的inventory 中使用IP地址，
而 ansible_hostname 则返回主机名。模板使用了jinja2 的语法，本例if..endif语句判断当前
的inventory_hostname 是否在webservers及monitoring 组中（定义具体在hosts 文件中），条
件成立则添加 80端口访问权限（-A INPUT-p tcp--dport 80-jACCEPT）。For..endfor语句实
现了循环开通允许monitoring组主机访问5666端口，使用hostvars[host]得到主机对象，可
以获得主机的 Facts 倍息，如 hostvars[host].ansible_default_ipv4.address 获取主机 IP。
---
## Page 174
第9章集中化管理平台Ansible详解153
（2）haproxy角色
haproxy角色主要实现了haproxy平台的部署、配置功能，任务（tasks）的定义：
[ roles/haproxy/tasks ]
This role 1nstalls KAProxy and configures 1t.
nane: Download and install haproxy and socat
yun: name=(( item )] state=present