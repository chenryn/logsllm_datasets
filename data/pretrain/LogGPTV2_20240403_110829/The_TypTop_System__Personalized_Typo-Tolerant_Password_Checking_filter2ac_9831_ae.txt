### Appendix A.2: Model Construction

To compute the induced cache inclusion function \(\tilde{\tau}\) for \((p, \tau)\) and TypTop with a given caching policy, we simulate the associated transcript generator \(\mathcal{T}\) using the password distribution \(p\) and the typo distribution \(\tau\). For each password \(w\), we sample \(n\) strings \(\tilde{w}_1, \ldots, \tilde{w}_n\) according to \(\tau_w\). This simulates a user with a registered password \(w\) who makes a series of login attempts, including some typos. We run PChecker (with default parameters) on input \((w, \tilde{w}_1, \ldots, \tilde{w}_n, w)\), where the final correct password entry ensures at least one cache update. We repeat this simulation \(m\) times for each password \(w\), and set \(\tilde{\tau}_w(\tilde{w})\) to be the fraction of these \(m\) runs in which the typo \(\tilde{w}\) is included in the final cache of the password \(w\). We repeat this process for all four caching policies described in Section 4.

Preliminary simulations on a small subset of randomly sampled passwords with different values of \(m\) and \(n\) showed that \(\tilde{\tau}_w\) changed very little for \(n \geq 1000\) and \(m \geq 200\). Therefore, we set \(n = 1000\) and \(m = 200\) for our full simulation. Given the computational cost, running the simulation for each password in the RockYou leak would be impractical. Instead, we estimate \(\tilde{\tau}_w\) using the \(k\) most probable passwords in the RockYou leak for \(k \in \{1, \ldots, 10\} \times 10^4\). With this setup, we compute the edge-weight \(b_{\tilde{\tau}}(\tilde{w}) = \sum_{w} \tilde{\tau}_w(\tilde{w})\) for each possible typo \(\tilde{w}\), and report the maximum observed edge-weight for each \(k\) and caching policy in Figure 6.

For all four caching policies, we found that \(\tilde{\tau}_w\) comfortably satisfies the desired 5-sparsity condition (recall that we implement TypTop with cache size \(t = 5\)) for all \(k \leq 10^5\). The largest observed edge-weight was 4.2 for the MFU caching policy, as shown in Figure 6.

### Online Attacks and Countermeasures

Another type of online attack against adaptive checkers involves an adversary who can interleave their guesses with correct password submissions by the legitimate user. For TypTop, these correct submissions trigger cache updates, potentially allowing one of the attacker's guesses, stored in the wait list, to enter the cache.

Recall that we set TypTop’s admissible typo policy to only allow typos within DL distance one of the real password into the cache. This provides a degree of protection against interleaving attacks. Additionally, we propose a simple countermeasure to virtually eliminate such attacks. By associating an origin tag (such as an IP address in web logins or TTY ID in SSH logins) with each entry in the wait list, only entries from locations where the user has successfully authenticated are allowed to enter the cache. This may exclude occasional typos made by a legitimate user from a new location, but it significantly enhances security. A detailed treatment of this attack and countermeasures is deferred to future work.

### Evaluating Utility

In this section, we investigate how successful TypTop is at correcting users' password typos under different parameter settings and select the best-performing ones for real-world deployment. To gather data about users' password typing patterns, we conducted an experiment on Amazon Mechanical Turk (MTurk).

We define the utility of a typo-tolerant PBAS as the fraction of typos accepted by the checker across the population. Formally, the utility of a PBAS \(\Pi\) is defined as \( \text{Utility}(\Pi) = \frac{\# (\text{typos accepted by } \Pi)}{\# (\text{typos observed})} \). This metric allows for a direct comparison with results from Chatterjee et al. [8].

#### Data Collection from MTurk

Our study, designed to capture the password typing behavior of a user who first registers a password and then re-enters it for subsequent logins, asks MTurk workers to choose a password and type it repeatedly over a period. The design is similar to that of Komanduri et al. [19] and consists of two stages: registration and login.

**Registration Stage:**
- Workers choose a password of at least 8 characters, distinct from their existing passwords.
- They must type the password twice and complete a short survey.
- They then attempt to log in with their registered password via a login form, requiring correct manual typing.

**Login Stage:**
- After registration, we create a sequence of 10-50 user-specific HITs for each worker.
- Each HIT consists of the same login form, followed by demographic or password typing questions.
- New HITs are created an hour after the last submission to prevent back-to-back completions.
- Workers are paid $0.05 per HIT, with a $0.04 bonus for every five HITs completed.

**Data Cleansing and Demographics:**
- Data from 42 workers were discarded due to incompatibility issues.
- Of the remaining 438 workers, 271 (61.9%) made at least 10 login attempts.
- Demographics: 48% male, 52% female; 35 (13%) left-handed, 236 (87%) right-handed; age groups: 18–30 (43%), 31–45 (40%), 46–60 (11%), 60+ (6%).

#### Analysis of Passwords and Typos

- **Passwords:** Unique, with a median length of 10 and average length of 10.9 characters, and average zxcvbn strength of 31.5 bits.
- **Typos:** 484 incorrect submissions within DL distance 2, classified as typos. Figure 7 shows the categorization of typos.
- **DL Distances:** 366 login attempts (4.2%) required at least one resubmission due to a typo. 167 users (62%) made at least one typo, with 95 (35%) making at least two typos in different login attempts.

#### Simulation Setup

We perform simulations using the MTurk data to evaluate the utility of various combinations of cache sizes, caching schemes, and typo admission policies.

- **Cache Size:** Consider caches of size \(t\) for \(t \in \{2, 3, 5\}\).
- **Caching Schemes:** LRU, LFU, PLFU, MFU, and Best-\(t\). We also compare with the relaxed checker approach of Chatterjee et al. [8].
- **Typo Admission Policy:** Admissible typos must satisfy:
  1. \( \text{DL}(w, \tilde{w}) \leq d \)
  2. \( \mu_{\tilde{w}} > m \)
  3. \( \mu_{\tilde{w}} > \mu_w - \sigma \)
  - Investigated all combinations of \(d \in \{1, 2\}\), \(m \in [0, 40]\), and \(\sigma \in [0, 9]\).
- **Warming Up the Cache:** Caches are warmed with the \(t\) most probable typos according to our typo model.

For each set of parameter choices, we simulate each worker's login behavior and report the utility for each configuration. The utility of a checker \(\Pi\) is defined as \( \text{Utility}(\Pi) = \frac{\# (\text{typos accepted by } \Pi)}{\# (\text{typos observed})} \).

Figure 8 shows the utility of different caching policies, cache sizes, and edit distance cutoffs for admissible typos, applied to the login transcripts of all MTurk workers who made at least one typo.