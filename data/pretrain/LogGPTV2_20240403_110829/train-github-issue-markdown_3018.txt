I was doing some testing using unsigned and signed integers with NumPy 1.20.3,
and found out that when you multiply them with each other, it results in a
64-bit float.  
Same goes for addition/subtraction.  
As far as I know, this was not the case for earlier NumPy versions (as
currently many parts of my code no longer work that previously worked just
fine with this).  
To me, it sounds a bit strange that multiplying two integers with each other
results in a float.
### Reproducing code example:
    import numpy as np
    print(type(np.uint(1)*1))
    >>> 
### NumPy/Python version information:
Python: 3.8.8  
NumPy: 1.20.3