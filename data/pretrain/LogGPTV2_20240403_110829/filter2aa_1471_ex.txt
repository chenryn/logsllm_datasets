BCD (Boot Configuration Database), 392, 398–399
BCD library for boot operations, 790–792
BCD options
Windows hypervisor loader (Hvloader), 796–797
Windows OS Loader, 792–796
bcdedit command, 398–399
BI (Background Broker Infrastructure), 244, 256–258
BI (Broker Infrastructure), 238
BindFlt (Windows Bind minifilter driver), 248
BitLocker
encryption offload, 717–718
recovery procedure, 801
turning on, 804
block volumes, DAX (Direct Access Disks), 728–730
BNO (Base Named Object) Isolation, 167
BOOLEAN status, 208
boot application, launching, 800–801
Boot Manager
BCD objects, 798
overview, 785–799
and trusted execution, 805
boot menu, 799–800
boot process. See also Modern boot menu
BIOS, 781
driver loading in safe mode, 848–849
hibernation and Fast Startup, 840–844
hypervisor loader, 811–813
images start automatically, 837
kernel and executive subsystems, 818–824
kernel initialization phase 1, 824–829
Measured Boot, 801–805
ReadyBoot, 835–836
safe mode, 847–850
Secure Boot, 781–784
Secure Launch, 816–818
shutdown, 837–840
Smss, Csrss, Wininit, 830–835
trusted execution, 805–807
UEFI, 777–781
VSM (Virtual Secure Mode) startup policy, 813–816
Windows OS Loader, 808–810
WinRE (Windows Recovery Environment), 845
boot status file, 850
Bootim.exe command, 832
booting from iSCSI, 811
BPB (boot parameter block), 657
BTB (Branch Target Buffer), 11
bugcheck, 40
C
C-states and timers, 76
cache
copying to and from, 584
forcing to write through to disk, 595
cache coherency, 568–569
cache data structures, 576–582
cache manager
in action, 591–594
centralized system cache, 567
disk I/O accounting, 600–601
features, 566–567
lazy writer, 622
mapping views of files, 573
memory manager, 567
memory partitions support, 571–572
NTFS MFT working set enhancements, 571
read-ahead thread, 622–623
recoverable file system support, 570
stream-based caching, 569
virtual block caching, 569
write-back cache with lazy write, 589
cache size, 574–576
cache virtual memory management, 572–573
cache-aware pushlocks, 200–201
caches and storage memory, 10
caching
with DMA (direct memory access) interfaces, 584–585
with mapping and pinning interfaces, 584
caching and file systems
disks, 565
partitions, 565
sectors, 565
volumes, 565–566
\Callback directory, 160
cd command, 144, 832
CDFS legacy format, 602
CEA (Common Event Aggregator), 238
Centennial applications, 246–249, 261
CFG (Control Flow Integrity), 343
Chain of Trust, 783–784
change journal file, NTFS on-disk structure, 675–679
change logging, NTFS, 637–638
check-disk and fast repair, NTFS recovery support, 707–710
checkpoint records, NTFS recovery support, 698
!chksvctbl command, 103
CHPE (Compile Hybrid Executable) bitmap, 115–118
CIM (Common Information Model), WMI (Windows Management
Instrumentation), 488–495
CLFS (common logging file system), 403–404
Clipboard User Service, 472
clock time, 57
cloning ReFS files, 755
Close method, 141
clusters. See also bad-cluster recovery
defined, 566
NTFS on-disk structure, 655–656
cmd command, 253, 261, 275, 289, 312, 526, 832
COM-hosted task, 479, 484–486
command line, activating apps through, 261–262
Command Prompt, 833, 845
commands
!acpiirqarb, 49
!alpc, 224
!apciirqarb, 48
!apic, 37
!arbiter, 48
bcdedit, 398–399
Bootim.exe, 832
cd, 144, 832
!chksvctbl, 103
cmd, 253, 261, 275, 289, 312, 526, 832
db, 102
defrag.exe, 646
!devhandles, 151
!devnode, 49
!devobj, 48
dg, 7–8
dps, 102–103
dt, 7–8
dtrace, 527
.dumpdebug, 547
dx, 7, 35, 46, 137, 150, 190
.enumtag, 547
eventvwr, 288, 449
!exqueue, 83
fsutil resource, 693
fsutil storagereserve findById, 687
g, 124, 241
Get-FileStorageTier, 649
Get-VMPmemController, 737
!handle, 149
!idt, 34, 38, 46
!ioapic, 38
!irql, 41
k, 485
link.exe/dump/loadconfig, 379
!locks, 198
msinfo32, 312, 344
notepad.exe, 405
!object, 137–138, 151, 223
perfmon, 505, 519
!pic, 37
!process, 190
!qlocks, 176
!reg openkeys, 417
regedit.exe, 468, 484, 542
Runas, 397
Set-PhysicalDisk, 774
taskschd.msc, 479, 484
!thread, 75, 190
.tss, 8
Wbemtest, 491
wnfdump, 237
committing a transaction, 697
Composition object, 129
compressing
nonsparse data, 673–674
sparse data, 671–672
compression and ghosting, ReFS (Resilient File System), 769–770
compression and sparse files, NTFS, 637
condition variables, 205–206
connection ports, dumping, 223–224
container compaction, ReFS (Resilient File System), 766–769
container isolation, support for, 626
contiguous file, 643
copying
to and from cache, 584
encrypted files, 717
CoreMessaging object, 130
corruption record, NTFS recovery support, 708
CoverageSampler object, 129
CPL (Code Privilege Level), 6
CPU branch predictor, 11–12
CPU cache(s), 9–10, 12–13
crash dump files, WER (Windows Error Reporting), 543–548
crash dump generation, WER (Windows Error Reporting), 548–551
crash report generation, WER (Windows Error Reporting), 538–542
crashes, consequences of, 421
critical sections, 203–204
CS (Code Segment)), 31
Csrss, 830–835, 838–840
D
data compression and sparse files, NTFS, 670–671
data redundancy and fault tolerance, 629–630
data streams, NTFS, 631–632
data structures, 184–189
DAX (Direct Access Disks). See also disks
block volumes, 728–730
cached and noncached I/O in volume, 723–724
driver model, 721–722
file system filter driver, 730–731
large and huge pages support, 732–735
mapping executable images, 724–728
overview, 720–721
virtual PMs and storage spaces support, 736–739
volumes, 722–724
DAX file alignment, 733–735
DAX mode I/Os, flushing, 731
db command, 102
/debug switch, FsTool, 734
debugger
breakpoints, 87–88
objects, 241–242
!pte extension, 735
!trueref command, 148
debugging. See also user-mode debugging
object handles, 158
trustlets, 374–375
WoW64 in ARM64 environments, 122–124
decryption process, 715–716
defrag.exe command, 646
defragmentation, NTFS, 643–645
Delete method, 141
Dependency Mini Repository, 255
Desktop object, 129
!devhandles command, 151
\Device directory, 161
device shims, 564
!devnode command, 49
!devobj command, 48
dg command, 4, 7–8
Directory object, 129
disk I/Os, counting, 601
disks, defined, 565. See also DAX (Direct Access Disks)
dispatcher routine, 121
DLLs
Hvloader.dll, 811
IUM (Isolated User Mode), 371–372
Ntevt.dll, 497
for Wow64, 104–105
DMA (Direct Memory Access), 50, 584–585
DMTF, WMI (Windows Management Instrumentation), 486, 489
DPC (dispatch or deferred procedure call) interrupts, 54–61, 71. See also
software interrupts
DPC Watchdog, 59
dps (dump pointer symbol) command, 102–103
drive-letter name resolution, 620
\Driver directory, 161
driver loading in safe mode, 848–849
driver objects, 451
driver shims, 560–563
\DriverStore(s) directory, 161
dt command, 7, 47
DTrace (dynamic tracing)
ETW provider, 533–534
FBT (Function Boundary Tracing) provider, 531–533
initialization, 529–530
internal architecture, 528–534
overview, 525–527
PID (Process) provider, 531–533
symbol server, 535
syscall provider, 530
type library, 534–535
dtrace command, 527
.dump command, LiveKd, 545
dump files, 546–548
Dump method, 141
.dumpdebug command, 547
Duplicate object service, 136
DVRT (Dynamic Value Relocation Table), 23–24, 26
dx command, 7, 35, 46, 137, 150, 190
Dxgk* objects, 129
dynamic memory, tracing, 532–533
dynamic partitioning, NTFS, 646–647
E
EFI (Extensible Firmware Interface), 777
EFS (Encrypting File System)
architecture, 712
BitLocker encryption offload, 717–718
decryption process, 715–716
described, 640
first-time usage, 713–715
information and key entries, 713
online support, 719–720
overview, 710–712
recovery agents, 714
EFS information, viewing, 716
EIP program counter, 8
enclave configuration, dumping, 379–381
encrypted files
backing up, 716–717
copying, 717
encrypting file data, 714–715
encryption NTFS, 640
encryption support, online, 719–720
EnergyTracker object, 130
enhanced timers, 78–81. See also timers
/enum command-line parameter, 786
.enumtag command, 547
Error Reporting. See WER (Windows Error Reporting)
ETL file, decoding, 514–515
ETW (Event Tracing for Windows). See also tracing dynamic memory
architecture, 500
consuming events, 512–515
events decoding, 513–515
Global logger and autologgers, 521
and high-frequency timers, 68–70
initialization, 501–502
listing processes activity, 510
logger thread, 511–512
overview, 499–500
providers, 506–509
providing events, 509–510
security, 522–525
security registry key, 503
sessions, 502–506
system loggers, 516–521
ETW provider, DTrace (dynamic tracing), 533–534
ETW providers, enumerating, 508
ETW sessions
default security descriptor, 523–524
enumerating, 504–506
ETW_GUID_ENTRY data structure, 507
ETW_REG_ENTRY, 507
EtwConsumer object, 129
EtwRegistration object, 129
Event Log provider DLL, 497
Event object, 128
Event Viewer tool, 288
eventvwr command, 288, 449
ExAllocatePool function, 26
exception dispatching, 85–91
executive mutexes, 196–197
executive objects, 126–130
executive resources, 197–199
exFAT, 606
explicit file I/O, 619–622
export thunk, 117
!exqueue command, 83
F
F5 key, 124, 397
fast I/O, 585–586. See also I/O system
fast mutexes, 196–197
fast repair and check-disk, NTFS recovery support, 707–710
Fast Startup and hibernation, 840–844
FAT12, FAT16, FAT32, 603–606
FAT64, 606
Fault Reporting process, WER (Windows Error Reporting), 540
fault tolerance and data redundancy, NTFS, 629–630
FCB (File Control Block), 571
FCB Headers, 201
feature settings and values, 22–23
FEK (File Encryption Key), 711
file data, encrypting, 714–715
file names, NTFS on-disk structure, 664–666
file namespaces, 664
File object, 128
file record numbers, NTFS on-disk structure, 660
file records, NTFS on-disk structure, 661–663
file system drivers, 583
file system formats, 566
file system interfaces, 582–585
File System Virtualization, 248