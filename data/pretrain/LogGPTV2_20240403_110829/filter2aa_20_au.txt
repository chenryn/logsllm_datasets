XSS 漏洞
4.4.1 节
HTTP 消息头注入
HTTP 消息头注入漏洞
4.7.2 节
恶意利用 Referer
嵌入在 URL 中的会话 ID
4.6.3 节
中间件
同应用程序
中间件的安全隐患
7.1 节
网络
网络监听
Cookie 的安全属性不完善等
4.8.2 节
挟持会话 ID
应用程序
会话固定攻击
会话 ID 固定漏洞
4.6.4 节
由上表可知，造成会话劫持的安全隐患多种多样，因此，应对会话劫持就需要将这些安全隐患各个击破。而本节所要讲述的就是生成会话 ID 时产生的如下安全隐患。
会话 ID 可预测
会话 ID 嵌入 URL
固定会话 ID
其他安全隐患请参考表中“解说”所示页的内容。
会话劫持的影响
用户被会话劫持后，他人就能伪装成该用户，进而造成如下影响。
查看用户的重要信息（个人信息、邮件等）
利用用户的权限进行操作（转账、购物等）
使用用户的账号发送邮件、发布文章、更改设置等
4.6.2 会话 ID 可预测
概要
如果 Web 应用中会话 ID 的生成规则不完善，用户的会话 ID 就有可能被他人成功预测，从而造成会话劫持。
会话 ID 被他人预测成功所造成的影响，同前面讲述的会话劫持的影响一样。
为了避免生成可预测的会话 ID 而引入安全隐患，应当停止自己实现会话管理机制，而使用久经考验的编程语言或中间件（PHP、Java/J2EE、ASP.NET 等）提供的会话管理机制。
会话 ID 可预测漏洞总览
攻击手段与影响
首先我们来看一下针对会话 ID 可预测漏洞的典型的攻击模式及其影响。
针对会话 ID 可预测漏洞的攻击有以下三个步骤。
1. 收集对象应用的会话 ID
2. 推测会话 ID 的生成规则
3. 在对象应用中试验推测出的会话 ID
常见的会话 ID 生成方法
为了预测会话 ID 的生成规则，首先就需要对常见的会话 ID 生成规则有所了解。由于本书并非攻击指导书，因此不会详细说明推测会话 ID 的方法。但就笔者多年来诊断安全隐患的经验来说，会话 ID 的生成大多都是基于以下项目。
用户 ID 或邮箱地址
远程 IP 地址
日期与时间（UNIX 时间戳或年月日时分秒的字符串）
随机数
生成会话 ID 时，有时会原封不动地使用上述值，有时也会选取几种组合使用，然后再进行加密（十六进制或 Base64）或者散列函数处理。图 4-51 即展示了常见的会话 ID 的生成方法。
图 4-51 常见的会话 ID 生成方法
其中，用户 ID 和日期时间是外界能够得知的数据，而这也就是造成安全隐患的根源。
针对会话 ID 可预测漏洞展开攻击时，攻击者会基于已知信息推导会话 ID 的生成规则，将收集到的会话 ID 按照图 4-51 的模型逐个进行验证。
使用推测出的会话 ID 尝试伪装
攻击者推测出会话 ID 之后，就会在对象应用中试用。如果攻击取得成功，会话就会处于有效的状态，因此攻击者能立刻得到攻击是否成功的反馈。
伪装造成的影响
攻击者成功伪装成用户后，就能够以用户的权限使用对象应用中的所有功能，如查看重要信息、发布 / 更新 / 删除数据或文章、购物、转账等。
但是，那些浏览前需要再次输入密码的页面，即使伪装成功后也无法访问。因为会话劫持的攻击者并不知道用户的密码。因此，关键处理前要求用户再次输入密码（再认证），是防范会话劫持的辅助性对策。
另一方面，如果更改密码时不需要输入当前密码，攻击者就能够通过更改密码而掌握用户的密码，这时攻击将造成更大的危害。
安全隐患的产生原因
正如前面所说，产生会话 ID 可预测漏洞的技术性原因，主要在于会话 ID 是基于可预测的信息生成的。而更深层的原因，则可以说是源于在应用中自制会话管理机制。通常情况下，在 Web 应用开发中，特意去开发生成会话 ID 的程序毫无意义。原因如下。
主流的 Web 应用开发工具中提供有会话管理机制
开发能够生成安全的会话 ID 的程序有很高的技术要求
而且，即使主流的 Web 应用开发工具中生成会话 ID 的部分存在漏洞，也肯定会有安全性方面的专家指出而使其得到完善。因此，如果是普通用途的 Web 应用，都应当使用开发工具中提供的会话管理机制。
对策
防范会话 ID 可预测漏洞最现实以及最有效的对策，就是使用 Web 应用开发工具中提供的会话管理机制。
由于某些特殊原因而不得不自制会话管理机制时，建议使用密码学级别的伪随机数生成器 33
 来生成足够多位数的会话 ID。
33
 指理论上能够保证在足够长的时间内无法被预测的随机数。
改善 PHP 的会话 ID 的随机性的方法
PHP 中默认生成会话 ID 的方法为将下列值组合后再经过 MD5 散列函数处理。
远程 IP 地址
当前时间
随机数（不是密码学级别的伪随机数）
这也符合图 4-51 中常见的会话 ID 的生成方法。由于其生成会话 ID 的算法相当复杂，目前还没有该会话 ID 的破解方法，但是这样的设计在理论上并不能保证安全性。
但我们可以编辑 php.ini 文件来改善会话 ID 的生成规则，使其生成基于安全的随机数的会话 ID。这里我们将 php.ini 设置如下。
[Session]
;; Windows 中不需要设置 entropy_file
session.entropy_file = /dev/urandom
session.entropy_length = 32
/dev/urandom 是 Linux 等多数基于 Unix 的操作系统中提供的随机数生成器，可作为设备文件使用。Linux 中的 /dev/urandom 经受了全世界专家的检验，并没有曝出重大问题，因此可以安心使用 34
 。
Windows 中没有类似于 /dev/urandom 的功能，但在 PHP5.3.3 以后的版本中，通过将 session.entropy_length 设为 0 以外的值，就能基于 Windows Random API 生成的值来生成会话 ID。
由于此设置不会产生副作用，因此建议读者们在开发时将上述设置作为开发标准。
34
 /dev/urandom 的实现方法因 OS 而异，在 Linux 以外的操作系统中使用 /dev/urandom 时，请事先调查确认有无安全隐患的相关记录。
参考：自制会话管理机制产生的其他隐患
自制会话管理机制时，除了会话 ID 可预测漏洞外，还需警惕其他安全隐患。就笔者多年来诊断安全隐患的经验来看，以下安全隐患需要注意。
SQL 注入漏洞
目录遍历漏洞
具体来说，PHP 官方文档中会话管理机制的自定义 API 的示例脚本中就存在目录遍历漏洞 35
 。同样，由于自定义 PHP 的会话管理机制而混入 SQL 注入漏洞的案例也时有发生。
35
 详情见笔者的博客：http://www.tokumaru.org/d/20080818.html#p01
 。写作本书时已经确认在 PHP 的最新版本 5.3.5 中也存在此问题。
正因为存在这些案例，因此，在自制或自定义会话管理机制时，务必要进行慎重的设计和仔细的检查。除非迫不得已，还是推荐直接使用既有的会话管理机制。
4.6.3 会话 ID 嵌入 URL
概要
会话 ID 有时并不保存在 Cookie 中，而是被保存于 URL。PHP、Java 和 ASP.NET 等都提供了将会话 ID 嵌入 URL 的功能。由于一些手机的浏览器不支持 Cookie，因此手机版 Web 应用也广泛采用将会话 ID 嵌入 URL 的做法。而面向 PC 的网站偶尔也能看到 URL 中包含会话 ID。以下就是会话 ID 嵌入 URL 的示例。
http://example.jp/mail/123?SESSID=2F3BE9A31F093C
会话 ID 嵌入 URL 有可能会导致会话 ID 经由 Referer 消息头外泄，从而造成伪装攻击。
而为了防范会话 ID 嵌入 URL 而导致伪装攻击，可以在程序中设置禁止将会话 ID 嵌入 URL。手机版的 Web 应用等有时不得不将会话 ID 嵌入 URL，此情况下的对策请参考 7.4 节。
会话 ID 嵌入 URL 所导致的安全隐患总览
攻击手段与影响
下面我们就来看一下使 URL 中的会话 ID 通过 Referer 外泄的方法，以及会话 ID 外泄后造成的影响。
首先来看 PHP 的情况下是如何使会话 ID 嵌入到 URL 中的。
会话 ID 嵌入 URL 所需的条件
前面已经提到过，PHP 可以通过设置将会话 ID 嵌入到 URL 中。设置项目如表 4-14 所示。
表 4-14 php.ini 的会话 ID 设置项目
项目
解说
默认值
session.use_cookies
使用 Cookie 保存会话 ID
有效（On）
session.use_only_cookies
仅将会话 ID 保存于 Cookie
有效（On）
session.use_trans_sid
自动将会话 ID 嵌入 URL
无效（Off）
将上述设置进行组合后，会话 ID 的保存位置就可以被归纳为下表。
表 4-15 use_cookies 与 use_only_cookies 的组合
会话 ID 的保存位置
use_cookies
use_only_cookies
会话 ID 仅保存在 Cookie 中
On
On
可以使用 Cookie 时保存在 Cookie 中，不能使用 Cookie 时嵌入 URL
On
Off
无意义的组合
Off
On
始终将会话 ID 嵌入 URL
Off
Off
其中，session.use_trans_sid 选项设为 On 时会话 ID 会被自动嵌入 URL，而设为 Off 的话则仅当应用中显示将会话 ID 嵌入 URL 时，会话 ID 才会被嵌入 URL。
范例脚本解说
以下为将会话 ID 设置为嵌入 URL（不使用 Cookie）的范例脚本。为了不影响应用的全局设置，这里我们在 .htaccess 文件内做如下设置。
代码清单 /462/.htaccess
php_flag session.use_cookies Off
php_flag session.use_only_cookies Off
php_flag session.use_trans_sid On
示例脚本包含了 3 个 PHP 文件。
起始页面
包含外部链接的页面