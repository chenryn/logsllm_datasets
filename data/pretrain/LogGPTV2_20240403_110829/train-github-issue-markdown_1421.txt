### Issue Description
When using version `^2.0.0-beta.25`, a `ReferenceError: 'Promise' is not defined` occurs in Internet Explorer 11.

### Full Error Log
```
ReferenceError: 'Promise' is not defined
   at updateOnClient (http://localhost:3000/_next/-/commons.js:16822:3)
   at mount (http://localhost:3000/_next/-/commons.js:16800:3)
   at componentWillMount (http://localhost:3000/_next/-/commons.js:16741:7)
   at Anonymous function (http://localhost:3000/_next/-/main.js:16665:11)
   at measureLifeCyclePerf (http://localhost:3000/_next/-/main.js:16392:5)
   at ReactCompositeComponent.performInitialMount (http://localhost:3000/_next/-/main.js:16664:9)
   at ReactCompositeComponent.mountComponent (http://localhost:3000/_next/-/main.js:16575:7)
   at ReactReconciler.mountComponent (http://localhost:3000/_next/-/main.js:1493:5)
   at ReactMultiChild.Mixin.mountChildren (http://localhost:3000/_next/-/main.js:21058:11)
   at ReactDOMComponent.Mixin._createContentMarkup (http://localhost:3000/_next/-/main.js:17995:9)
```

### Analysis
The error indicates that the `Promise` object, which is part of the ECMAScript 2015 (ES6) standard, is not recognized by Internet Explorer 11. This is because IE11 does not natively support Promises.

### Solution
To resolve this issue, you can use a polyfill to provide Promise support for older browsers like Internet Explorer 11. One commonly used polyfill is `es6-promise`.

#### Steps to Implement the Polyfill
1. **Install the `es6-promise` package**:
   ```bash
   npm install es6-promise
   ```

2. **Import and initialize the polyfill in your entry file (e.g., `index.js` or `app.js`)**:
   ```javascript
   import 'es6-promise/auto';
   ```

By including the polyfill, you ensure that the `Promise` object is available in all supported environments, including Internet Explorer 11.

### Additional Considerations
- **Babel Transpilation**: If you are using Babel, make sure it is configured to transpile ES6+ code to ES5. This can be done by adding the `@babel/preset-env` preset to your Babel configuration.
- **Testing**: After implementing the polyfill, thoroughly test your application in Internet Explorer 11 to ensure that the issue is resolved and that other functionalities work as expected.

This approach should help you address the `ReferenceError` and improve compatibility with older browsers.