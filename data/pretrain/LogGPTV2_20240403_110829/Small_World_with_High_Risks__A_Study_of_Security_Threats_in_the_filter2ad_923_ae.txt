tayatrai et al. [21] use network analysis techniques to study
the topology of the JavaScript package ecosystem and to ex-
tract insights about dependencies and their relations. Another
study by Kabbedijk et al. [17] looks at the social aspect of
the Ruby software ecosystem by identifying different roles
maintainers have in the ecosystem, depending on the number
of developers they cooperate with and on the popularity of
their packages. Overall, the research ﬁeld is rising with a lot
of studied software ecosystems in addition to the very popular
ones such as JavaScript which is the focus of our study.
Ecosystem Evolution Studying the evolution of an ecosys-
tem shows how fast it grows and whether developers still
contribute to it. Wittern et al. [34] study the whole JavaScript
ecosystem, including GitHub and npm until September 2015.
They focus on dependencies, the popularity of packages and
version numbering. They ﬁnd that the ecosystem is steadily
growing and exhibiting a similar effect to a power law dis-
tribution as only a quarter of packages is dependent upon.
Comparing these numbers with our results, we see a con-
tinuous near-exponential growth in the number of released
packages and that only 20% of all packages are dependent
upon. A similar study that includes the JavaScript ecosystem
by Kikas et al. [18] collects data until May 2016 and focuses
on the evolution of dependencies and the vulnerability of the
USENIX Association
28th USENIX Security Symposium    1007
dependency network. They conﬁrm the same general growth
as the previous study. Furthermore, they ﬁnd packages that
have a high impact with up to 30% of other packages and ap-
plications affected. Our study gives an update on these studies
and additionally looks at the evolution of maintainers as they
are a possible vulnerability in the ecosystem. The dependency
network evolution was also studied for other ecosystems. De-
can et al. [14] compare the evolution of seven different pack-
age managers focusing on the dependency network. Npm is
the largest ecosystem in their comparison and they discover
that dependencies are frequently used in all these ecosystems
with similar connectedness between packages. Bloemen et
al. [4] look at software package dependencies of the Linux
distribution Gentoo where they use cluster analysis to explore
different categories of software. German et al. [15] study the
dependency network of the R language and the community
around its user-contributed packages. Bavota et al. [3] an-
alyze the large Apache ecosystem of Java libraries where
they ﬁnd that while the number of projects grows linearly, the
number of dependencies between them grows exponentially.
Comparing this to the npm ecosystem, we ﬁnd the number of
packages to grow super-linearly while the average number of
dependencies between them grows linearly.
7 Conclusions
We present a large-scale study of security threats resulting
from the densely connected structure of npm packages and
maintainers. The overall conclusion is that npm is a small
world with high risks. It is “small” in the sense that packages
are densely connected via dependencies. The security risk are
“high” in the sense that vulnerable or malicious code in a sin-
gle package may affect thousands of others, and that a single
misbehaving maintainer, e.g., due to a compromised account,
may have a huge negative impact. These ﬁndings show that
recent security incidents in the npm ecosystem are likely to
be the ﬁrst signs of a larger problem, and not only unfortunate
individual cases. To mitigate the risks imposed by the current
situation, we analyze the potential effectiveness of several
mitigation strategies. We ﬁnd that trusted maintainers and a
code vetting process for selected packages could signiﬁcantly
reduce current risks.
Acknowledgments
This work was supported by the German Federal Ministry of Educa-
tion and Research and by the Hessian Ministry of Science and the
Arts within CRISP, by the German Research Foundation within the
ConcSys and Perf4JS projects. The authors would also like to thank
the team at r2c for their engineering support in obtaining the data
for this work.
References
[1] Rabe Abdalkareem, Olivier Nourry, Sultan Wehaibi,
Suhaib Mujahid, and Emad Shihab. Why do developers
use trivial packages? an empirical case study on npm.
In FSE, 2017.
[2] Rabe Abdalkareem, Olivier Nourry, Sultan Wehaibi,
Suhaib Mujahid, and Emad Shihab. Why do develop-
ers use trivial packages? an empirical case study on
npm. In Proceedings of the 2017 11th Joint Meeting
on Foundations of Software Engineering, ESEC/FSE
2017, Paderborn, Germany, September 4-8, 2017, pages
385–395, 2017.
[3] Gabriele Bavota, Gerardo Canfora, Massimiliano Di
Penta, Rocco Oliveto, and Sebastiano Panichella. The
evolution of project inter-dependencies in a software
ecosystem: The case of apache. In 2013 IEEE Interna-
tional Conference on Software Maintenance, Eindhoven,
The Netherlands, September 22-28, 2013, pages 280–
289, 2013.
[4] Remco Bloemen, Chintan Amrit, Stefan Kuhlmann, and
Gonzalo Ordóñez-Matamoros. Gentoo package depen-
dencies over time. In 11th Working Conference on Min-
ing Software Repositories, MSR 2014, Proceedings, May
31 - June 1, 2014, Hyderabad, India, pages 404–407,
2014.
[5] Christopher Bogart, Christian Kästner, James D. Herb-
sleb, and Ferdian Thung. How to break an API: cost
negotiation and community values in three software
ecosystems. In Proceedings of the 24th ACM SIGSOFT
International Symposium on Foundations of Software
Engineering, FSE 2016, Seattle, WA, USA, November
13-18, 2016, pages 109–120, 2016.
[6] Fraser Brown, Shravan Narayan, Riad S. Wahby, Daw-
son R. Engler, Ranjit Jhala, and Deian Stefan. Finding
In 2017
and preventing bugs in javascript bindings.
IEEE Symposium on Security and Privacy, SP 2017,
San Jose, CA, USA, May 22-26, 2017, pages 559–578,
2017.
[7] Kyriakos C. Chatzidimitriou, Michail D. Papamichail,
Themistoklis G. Diamantopoulos, Michail Tsapanos,
and Andreas L. Symeonidis. npm-miner: an infrastruc-
ture for measuring the quality of the npm registry. In
Proceedings of the 15th International Conference on
Mining Software Repositories, MSR 2018, Gothenburg,
Sweden, May 28-29, 2018, pages 42–45, 2018.
[8] Eleni Constantinou and Tom Mens. An empirical com-
parison of developer retention in the rubygems and npm
software ecosystems. ISSE, 13(2-3):101–115, 2017.
1008    28th USENIX Security Symposium
USENIX Association
[9] James C. Davis, Christy A. Coghlan, Francisco Servant,
and Dongyoon Lee. The impact of regular expression
denial of service (redos) in practice: an empirical study
at the ecosystem scale. In Proceedings of the 2018 ACM
Joint Meeting on European Software Engineering Con-
ference and Symposium on the Foundations of Software
Engineering, ESEC/SIGSOFT FSE 2018, Lake Buena
Vista, FL, USA, November 04-09, 2018, pages 246–256,
2018.
[10] James C. Davis, Eric R. Williamson, and Dongyoon
Lee. A sense of time for javascript and node.js: First-
class timeouts as a cure for event handler poisoning. In
27th USENIX Security Symposium, USENIX Security
2018, Baltimore, MD, USA, August 15-17, 2018., pages
343–359, 2018.
[11] Alexandre Decan, Tom Mens, and Maëlick Claes. An
empirical comparison of dependency issues in OSS
packaging ecosystems. In IEEE 24th International Con-
ference on Software Analysis, Evolution and Reengineer-
ing, SANER 2017, Klagenfurt, Austria, February 20-24,
2017, pages 2–12, 2017.
[12] Alexandre Decan, Tom Mens, and Eleni Constantinou.
On the evolution of technical lag in the npm package
dependency network. In 2018 IEEE International Con-
ference on Software Maintenance and Evolution, ICSME
2018, Madrid, Spain, September 23-29, 2018, pages 404–
414, 2018.
[13] Alexandre Decan, Tom Mens, and Eleni Constanti-
nou. On the impact of security vulnerabilities in the
npm package dependency network. In Proceedings of
the 15th International Conference on Mining Software
Repositories, MSR 2018, Gothenburg, Sweden, May 28-
29, 2018, pages 181–191, 2018.
[14] Alexandre Decan, Tom Mens, and Philippe Grosjean.
An empirical comparison of dependency network evo-
lution in seven software packaging ecosystems. CoRR,
abs/1710.04936, 2017.
[15] Daniel M. Germán, Bram Adams, and Ahmed E. Hassan.
In 17th
The evolution of the R software ecosystem.
European Conference on Software Maintenance and
Reengineering, CSMR 2013, Genova, Italy, March 5-8,
2013, pages 243–252, 2013.
[16] Liang Gong. Dynamic Analysis for JavaScript Code.
PhD thesis, University of California, Berkeley, 2018.
[18] Riivo Kikas, Georgios Gousios, Marlon Dumas, and
Dietmar Pfahl. Structure and evolution of package de-
pendency networks. In Proceedings of the 14th Inter-
national Conference on Mining Software Repositories,
MSR 2017, Buenos Aires, Argentina, May 20-28, 2017,
pages 102–112, 2017.
[19] Raula Gaikovina Kula, Ali Ouni, Daniel M. Germán,
and Katsuro Inoue. On the impact of micro-packages:
An empirical study of the npm javascript ecosystem.
CoRR, abs/1709.04638, 2017.
[20] Tobias Lauinger, Abdelberi Chaabane, Sajjad Arshad,
William Robertson, Christo Wilson, and Engin Kirda.
Thou shalt not depend on me: Analysing the use of
outdated javascript libraries on the web. In NDSS, 2017.
[21] Nuttapon Lertwittayatrai, Raula Gaikovina Kula, Saya
Onoue, Hideaki Hata, Arnon Rungsawang, Pattara Lee-
laprute, and Kenichi Matsumoto. Extracting insights
from the topology of the javascript package ecosys-
tem. In 24th Asia-Paciﬁc Software Engineering Con-
ference, APSEC 2017, Nanjing, China, December 4-8,
2017, pages 298–307, 2017.
[22] Timothy Libert. Exposing the hidden web: An analysis
of third-party HTTP requests on 1 million websites.
CoRR, abs/1511.00619, 2015.
[23] Konstantinos Manikas. Revisiting software ecosystems
research: A longitudinal literature study. Journal of
Systems and Software, 117:84–103, 2016.
[24] Tom Mens. An ecosystemic and socio-technical view
on software maintenance and evolution. In 2016 IEEE
International Conference on Software Maintenance and
Evolution, ICSME 2016, Raleigh, NC, USA, October 2-7,
2016, pages 1–8, 2016.
[25] Gianluca Mezzetti, Anders Møller, and Martin Toldam
Torp. Type regression testing to detect breaking changes
in node.js libraries. In 32nd European Conference on
Object-Oriented Programming, ECOOP 2018, July 16-
21, 2018, Amsterdam, The Netherlands, pages 7:1–7:24,
2018.
[26] Nick Nikiforakis, Luca Invernizzi, Alexandros Kaprav-
elos, Steven Van Acker, Wouter Joosen, Christopher
Kruegel, Frank Piessens, and Giovanni Vigna. You
are what you include: large-scale evaluation of remote
JavaScript inclusions. In CCS, pages 736–747, 2012.
[17] Jaap Kabbedijk and Slinger Jansen. Steering insight:
An exploration of the ruby software ecosystem. In Soft-
ware Business - Second International Conference, IC-
SOB 2011, Brussels, Belgium, June 8-10, 2011. Proceed-
ings, pages 44–55, 2011.
[27] Brian Pfretzschner and Lotﬁ Ben Othmane. Identiﬁca-
tion of dependency-based attacks on node.js. In Proceed-
ings of the 12th International Conference on Availability,
Reliability and Security, Reggio Calabria, Italy, August
29 - September 01, 2017, pages 68:1–68:6, 2017.
USENIX Association
28th USENIX Security Symposium    1009
[28] Alexander Serebrenik and Tom Mens. Challenges in
software ecosystems research. In Proceedings of the
2015 European Conference on Software Architecture
Workshops, Dubrovnik/Cavtat, Croatia, September 7-11,
2015, pages 40:1–40:6, 2015.
[29] Cristian-Alexandru Staicu and Michael Pradel. Freezing
the web: A study of redos vulnerabilities in javascript-
based web servers. In 27th USENIX Security Symposium,
USENIX Security 2018, Baltimore, MD, USA, August
15-17, 2018., pages 361–376, 2018.
[30] Cristian-Alexandru Staicu, Michael Pradel, and Ben-
jamin Livshits. SYNODE: understanding and automat-
ically preventing injection attacks on NODE.JS.
In
25th Annual Network and Distributed System Security
Symposium, NDSS 2018, San Diego, California, USA,
February 18-21, 2018, 2018.
[31] Nikolai Philipp Tschacher. Typosquatting in program-
ming language package managers. PhD thesis, Univer-
sität Hamburg, Fachbereich Informatik, 2016.
[32] Nikos Vasilakis, Ben Karel, Nick Roessler, Nathan
Dautenhahn, André DeHon, and Jonathan M. Smith.
Breakapp: Automated, ﬂexible application compartmen-
In 25th Annual Network and Distributed
talization.
System Security Symposium, NDSS 2018, San Diego,
California, USA, February 18-21, 2018, 2018.
[33] Jie Wang, Wensheng Dou, Yu Gao, Chushu Gao, Feng
Qin, Kang Yin, and Jun Wei. A comprehensive study on
real world concurrency bugs in node.js. In Proceedings
of the 32nd IEEE/ACM International Conference on
Automated Software Engineering, ASE 2017, Urbana,
IL, USA, October 30 - November 03, 2017, pages 520–
531, 2017.
[34] Erik Wittern, Philippe Suter, and Shriram Rajagopalan.
A look at the dynamics of the javascript package ecosys-
In Proceedings of the 13th International Con-
tem.
ference on Mining Software Repositories, MSR 2016,
Austin, TX, USA, May 14-22, 2016, pages 351–361,
2016.
1010    28th USENIX Security Symposium
USENIX Association