# 前言
Kerberos协议是一种网络认证协议，其设计目标是通过密钥系统为客户/服务器应用程序提供强大的认证服务。在令牌窃取攻击中，该攻击的核心就是Kerberos协议。Kerberos协议要解决的实际上就是一个身份认证的问题，顾名思义，
**当一个客户机去访问一个服务器的某服务时，服务器如何判断该客户机是否有权限来访问本服务器上的服务，同时保证在该过程中的通讯内容即便被拦截或者被篡改也不影响整个通讯的安全性**
。
# 概念说明
先来简要说明几个主要的名词
    (1)Client:访问服务的客户机
    (2)Server:提供服务的服务器
    (3)KDC(Key Distribution Center):密钥分发中心 
    (4)KDC中分成两个部分:Authentication Service和Ticket Granting Service
        Authentication Service(AS):身份验证服务
        Ticket Granting Service(TGS):票据授予服务
        AS和TGS如下：
        Authentication Service：AS的作用就是验证Client端的身份，验证通过之后，AS就会给TGT票据(Ticket Granting Ticket)给Client.
        Ticket-granting cookie(TGC):存放用户身份认证凭证的cookie，在浏览器和CAS Server间通讯时使用，是CAS Server用来明确用户身份的凭证。TGT封装了TGC值以及此Cookie值对应的用户信息.
        Ticket-granting ticket(TGT):TGT对象的ID就是TGC的值，在服务器端，通过TGC查询TGT.
        Ticket Granting Service(TGS)：TGS的作用是通过AS发送给Client的TGT换取访问Server端的ST(Server Ticket)给Client.
        SEerver Ticket(ST):ST服务票据，由TGS服务发布.
    (5)Active Directory(AD):活动目录
    (6)Domain Controller(DC):域控制器
    (7)Ticket-granting cookie(TGC):存放用户身份认证凭证的cookie，在浏览器和CAS Server间通讯时使用，是CAS Server用来明确用户身份的凭证。TGT封装了TGC值以及此Cookie值对应的用户信息.
    (8)Ticket-granting ticket(TGT):TGT对象的ID就是TGC的值，在服务器端，通过TGC查询TGT.
# 认证过程
`Kerberos`认证的过程形象地比喻如下：
    疫情期间，小明去拿一个重要包裹，由于包裹是来自海外的，所以需要严格登记：
    （1）拿包裹的时候，为了证明自己是合法公民，小明先把身份证给工作人员
    （2）快递点的身份认证系统通过身份认证后，给小明一张身份认证通过证明
    （3）小明拿着身份认证通过证明，来到快递收发处等一张拿快递的号码牌
    （4）售票处给了张号码牌
    （5）小明拿着号码牌拿快递去了
    （6）在拿快递时，小明拿出自己的身份认证材料给快递点的工作人员，工作人员向快递公司的数据管理中心发了消息，问问小明是不是有包裹要拿
    （7）数据管理中心将小明的快递单号，身份信息等发了过来
    （8）工作人员将数据管理中心发来的信息与小明给的材料对比，得出小明是好公民，有一个重要包裹，于是带着小明来到仓库的金库，把装有老魔杖的包裹给了小明
在`Kerboeros`协议认证过程中，会用到两个基础认证模块，分别是`AS_REQ&AS_REP`和`TGS_REQ&TGS_REP`，以及在认证过程中可能会使用到的`S4U`和`PAC`这两个认证模块。
使用`wireshark`抓包得到数据包，PS: **在抓包的时候，先用`mimikatz`将机器中的票据清除**
`域控：10.10.10.10（windows server 2008 R2）`
`域成员：10.10.10.80（windows 7）`
域用户账号密码：`hunter1/1qaz@WSX`
`Kerberos认证`中有两个问题
    （1）AS如何验证Client的身份？
        AS与Client之间的认证使用AS_REQ&AS_REP模块 
    （2）Client如何获取ST？
        Client与TGS之间认证使用TGS_REQ&TGS_REP模块
因为`kerberos`协议的实现，需要三方的参与，分别如下：
    1.client 访问服务的客户机
    2.Server 提供服务的服务器
    3.KDC(Key Distribution Center) 密钥分发中心 
        KDC服务会默认安装在一个域的域控中，所以可以直接理解为，AD与KDC均为域控制器,KDC服务框架中包含一个KRBTGT账户，它是在创建域时系统自动创建的一个账号。
`Kerberos`认证过程如下图所示
其中：`KDC`中有`AS认证服务`与`TGS认证服务`
    (1)Client向KDC的AS认证服务请求TGT票据=>AS_REQ
    (2)Client通过认证后，KDC将会发放TGT票据=>AS_REP
    (3)Client带上TGT票据，向TGS认证服务请求ST服务票据=>TGS_REQ
    (4)Client通过了TGS认证服务后，TGS将会发放ST服务票据=>TGS_REP
    (5)Client使用ST服务票据向服务端请求服务=>AP_REQ
    (6)Server拿到PAC询问KDC，Client是否有权限
    (7)KDC将Client的权限信息发给Server
    (8)Server根据KDC返回的权限信息对比，判断Client是否有权限访问该服务，并把结果返回给Client=>AP_REP
注：（6）（7）两步不一定发生，需要将目标主机配置为验证KDC PAC验证。
    域中每个用户的Ticket都是由krbtgt的密码Hash来计算生成的,因此只要我们拿到了krbtgt的密码Hash,就可以随意伪造Ticket,进而使用Ticket登陆域控制器,使用krbtgt用户hash生成的票据被称为Golden Ticket,此类攻击方法被称为票据传递攻击。
先前提到两个问题，第一个问题
    （1）AS如何验证Client的身份？
        AS与Client之间的认证使用AS_REQ&AS_REP模块
## AS_REQ&AS_RE
**分析AS-REQ的数据包**
`AS-REQ`：当某个域用户试图访问域中的某个服务，于是输入用户名和密码，本机`Kerberos`服务会向`KDC`的`AS`认证服务发送一个`AS-REQ`认证请求。该请求包中包含：`请求用户名`，`客户端主机名`，`加密类型`和`Autherticator(用户NTLM
Hash加密的时间戳)`以及一些信息。
`Client`向`KDC`发起`AS_REQ`请求凭据是用户hash加密的时间戳。请求凭据放在`PA_DATA`里面。
    Pvno  kerberos协议版本号：05（Hex）
    5MSG-TYPE 类型 AS_REQ对应（krb-as-req）0a（Hex）
    PA-DATA  预认证信息数据 一个列表，包含若干个认证消息用于认证，每个认证消息有type和value。
    AS_REQ 阶段主要用到的有两个
      1.ENC_TIMESTAMP
      这个是预认证，就是用用户hash加密时间戳，作为value 发送给AS服务器。然后AS服务器那边有用户hash，使用用户hash进行解密，获得时间戳，如果能解密，且时间戳在一定的范围内，则证明认证通过。