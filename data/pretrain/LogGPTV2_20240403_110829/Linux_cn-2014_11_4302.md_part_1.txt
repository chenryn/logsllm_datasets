---
author: Adrien Brochard
category: 软件开发
comments_data:
- date: '2014-11-25 22:03:03'
  message: 南望Visual Studio王师又一年
  postip: 58.23.15.163
  username: 微博评论
- date: '2014-11-25 22:03:03'
  message: GDB是个有好工具，有了GDB让我觉得自己当年printf(&quot;123\n&quot;);是一种多么SB的行为[偷笑][偷笑][偷笑]
  postip: 58.23.15.163
  username: 微博评论
- date: '2014-11-25 22:03:03'
  message: 直接attach进程
  postip: 58.23.15.163
  username: 微博评论
- date: '2014-11-25 22:03:03'
  message: 回复@施先进:嗯，直接 attach 进程，这个是神器啊，这篇只是给小白看的。
  postip: 58.23.15.163
  username: 微博评论
- date: '2014-11-25 22:31:28'
  message: 感觉自己不会用gdb
  postip: 123.120.75.127
  username: 微博评论
- date: '2014-11-25 22:31:28'
  message: '@比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 123.120.75.127
  username: 微博评论
- date: '2014-11-25 22:31:28'
  message: Repost
  postip: 123.120.75.127
  username: 微博评论
- date: '2014-11-25 23:03:11'
  message: Mark
  postip: 54.226.197.82
  username: 微博评论
- date: '2014-11-25 23:03:11'
  message: w
  postip: 54.226.197.82
  username: 微博评论
- date: '2014-11-26 00:03:36'
  message: '@我的印象笔记'
  postip: 27.159.195.234
  username: 微博评论
- date: '2014-11-26 00:33:01'
  message: '[doge]'
  postip: 27.159.210.146
  username: 微博评论
- date: '2014-11-26 01:03:02'
  message: '@我的印象笔记'
  postip: 58.23.15.163
  username: 微博评论
- date: '2014-11-26 07:33:01'
  message: '简单调试只记住 b, r, w, bt, next, step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 220.181.108.180
  username: 微博评论
- date: '2014-11-26 07:33:01'
  message: '[思考]'
  postip: 220.181.108.180
  username: 微博评论
- date: '2014-11-26 07:33:01'
  message: 马克
  postip: 220.181.108.180
  username: 微博评论
- date: '2014-11-26 09:03:01'
  message: '用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V: 简单调试只记住 b, r, w, bt, next, step 就行了//@Murakumo丛云:
    @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 183.17.252.114
  username: 微博评论
- date: '2014-11-26 10:03:01'
  message: 'GBD调试core[熊猫] //@比尔盖子V:简单调试只记住 b, r, w, bt, next, step 就行了 //@Murakumo丛云:
    @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 14.18.206.201
  username: 微博评论
- date: '2014-11-26 10:03:01'
  message: GBD调试core[熊猫]
  postip: 14.18.206.201
  username: 微博评论
- date: '2014-11-26 10:03:01'
  message: '→_→//@游荡的坎德人: 用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V: 简单调试只记住 b, r, w, bt, next,
    step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 14.18.206.201
  username: 微博评论
- date: '2014-11-26 10:03:01'
  message: '@我的印象笔记'
  postip: 14.18.206.201
  username: 微博评论
- date: '2014-11-26 11:03:01'
  message: '→_→//@Linux中国:→_→//@游荡的坎德人: 用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V: 简单调试只记住
    b, r, w, bt, next, step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 113.108.10.15
  username: 微博评论
- date: '2014-11-26 11:03:01'
  message: 好难。
  postip: 113.108.10.15
  username: 微博评论
- date: '2014-11-26 12:03:00'
  message: 这个Po我感觉来得很是时候~ //@尼可熊吉:转发微博
  postip: 96.42.135.195
  username: 微博评论
- date: '2014-11-26 14:03:03'
  message: '//@Linux中国:→_→//@游荡的坎德人: 用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V: 简单调试只记住 b,
    r, w, bt, next, step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 66.249.79.126
  username: 微博评论
- date: '2014-11-26 15:33:01'
  message: '→_→//@Cth_framebuffer: →_→//@Linux中国:→_→//@游荡的坎德人: 用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V:
    简单调试只记住 b, r, w, bt, next, step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 66.249.79.118
  username: 微博评论
- date: '2014-11-26 19:38:48'
  message: 感觉是有帮助的，调试一定离不开，和gcc一起让我对Linux开发有了信心
  postip: 222.195.191.68
  username: 来自 - 山东青岛青岛职业技术学院 的 MSIE/Windows 用户
- date: '2014-11-27 10:33:01'
  message: 像Lua这样的脚本语言就只能print调试了
  postip: 125.78.43.200
  username: 微博评论
- date: '2014-11-28 22:33:02'
  message: '→_→//@比尔盖子V: →_→//@Cth_framebuffer: →_→//@Linux中国:→_→//@游荡的坎德人: 用客户做祭品血祭恶魔之后一切都运行的丝滑流畅……//@比尔盖子V:
    简单调试只记住 b, r, w, bt, next, step 就行了//@Murakumo丛云: @比尔盖子V //@马鹿峻锋连聊C: 感觉自己不会用gdb'
  postip: 58.22.151.86
  username: 微博评论
- date: '2014-12-02 18:39:54'
  message: 如果和Vim搞一块也是极好的。。。至少，我可以一次性完成写完代码后的所有工作了
  postip: 39.187.202.231
  username: yongci
- date: '2015-03-25 09:52:18'
  message: 对初步熟悉GDB的人很合适，但是在实际项目中很多人都比较迷茫啦，要是能结合实际项目来讲解可能实用性会更强
  postip: 113.106.106.98
  username: jbiaojerry
- date: '2016-09-10 10:59:53'
  message: 很不错，言简意赅，特别喜欢Linux中国的代码风格
  postip: 175.12.149.50
  username: 来自湖南的 Firefox 48.0|Fedora 用户
- date: '2018-12-28 23:57:26'
  message: 简单明了，赞一个。
  postip: 123.149.79.47
  username: 来自河南郑州的 Firefox 60.0|GNU/Linux 用户
count:
  commentnum: 32
  favtimes: 19
  likes: 0
  sharetimes: 43
  viewnum: 33810
date: '2014-11-25 21:48:02'
editorchoice: false
excerpt: 没有调试器的情况下编写程序时最糟糕的状况是什么？编译时跪着祈祷不要出错？用血祭召唤恶魔帮你运行程序？或者在每一行代码间添加printf(&quot;test&quot;)语句来定位错误点？如你所知，编写程序时不使用调试器的话是不方便的。幸好，linux下调试还是很方便的。大多数人使用的IDE都集成了调试器，但
  linux 最著名的调试器是命令行形式的C/C++调试器GDB。然而，与其他命令行工具一致，DGB需要一定的练习才能完全掌握。这里，我会告诉你GDB的基本情况及使用方法。  安装GDB
  大多数的发行版仓库中都有GDB Debian 或 Ubuntu $ sudo apt-get install gdb
fromurl: http://xmodulo.com/gdb-command-line-debugger.html
id: 4302
islctt: true
largepic: /data/attachment/album/201411/25/214812k9he3imidt9z1939.png
permalink: /article-4302-1.html
pic: /data/attachment/album/201411/25/214812k9he3imidt9z1939.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 没有调试器的情况下编写程序时最糟糕的状况是什么？编译时跪着祈祷不要出错？用血祭召唤恶魔帮你运行程序？或者在每一行代码间添加printf(&quot;test&quot;)语句来定位错误点？如你所知，编写程序时不使用调试器的话是不方便的。幸好，linux下调试还是很方便的。大多数人使用的IDE都集成了调试器，但
  linux 最著名的调试器是命令行形式的C/C++调试器GDB。然而，与其他命令行工具一致，DGB需要一定的练习才能完全掌握。这里，我会告诉你GDB的基本情况及使用方法。  安装GDB
  大多数的发行版仓库中都有GDB Debian 或 Ubuntu $ sudo apt-get install gdb
tags:
- gdb
- 调试
- 开发
thumb: false
title: 使用GDB命令行调试器调试C/C++程序
titlepic: false
translator: SPccman
updated: '2014-11-25 21:48:02'
---
没有调试器的情况下编写程序时最糟糕的状况是什么？编译时跪着祈祷不要出错？用血祭召唤恶魔帮你运行程序？或者在每一行代码间添加printf("test")语句来定位错误点？如你所知，编写程序时不使用调试器的话是不方便的。幸好，linux下调试还是很方便的。大多数人使用的IDE都集成了调试器，但 linux 最著名的调试器是命令行形式的C/C++调试器GDB。然而，与其他命令行工具一致，DGB需要一定的练习才能完全掌握。这里，我会告诉你GDB的基本情况及使用方法。
![](/data/attachment/album/201411/25/214812k9he3imidt9z1939.png)
### 安装GDB
大多数的发行版仓库中都有GDB
Debian 或 Ubuntu
```
$ sudo apt-get install gdb
```
Arch Linux
```
$ sudo pacman -S gdb
```
Fedora,CentOS 或 RHEL：
```
$sudo yum install gdb
```
如果在仓库中找不到的话，可以从[官网中下载](https://www.gnu.org/software/gdb/)。
### 示例代码
当学习GDB时，最好有一份代码，动手试验。下列代码是我编写的简单例子，它可以很好的体现GDB的特性。将它拷贝下来并且进行实验——这是最好的方法。
```
#include 
#include 
int main(int argc, char **argv)
{
    int i;
    int a=0, b=0, c=0;
    double d;
    for (i=0; i97)
            d = i / 2.0;
        b++;