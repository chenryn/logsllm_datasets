2016-01-13
Docker 实战
1 《高可用架构》创刊号卷首语
6 互联网金融创业公司的Docker实战
21 Docker在芒果TV的实践之路
41 微博基于Docker容器的混合云迁移实战
64 使用开源Calico构建Docker多租户网络
84 张磊：关于Docker、开源，以及教育的尝试
95 Joyent首席技术官关于容器的新年愿望
Docker 实战
《高可用架构》创刊号卷首语：
参加那么多技术大会你学到了什么？
在2015年末北京一场技术大会上，一群网上相识的同行正在会场
附近一家餐厅相聚午餐，来自广州的架构师小白率先起身赶往下午场，
因为他需要回去公司转述参加本次大会的一些精华，尽管要完成这
个作业、也就是总结一些对大家有启发的内容相比于前几年越来越难，
对于部分参会人员，即使写一条140字的微博感悟可能也有挑战。
在另外一个会议，Tim 也碰到来自武汉一家技术公司的创始人猫总，
作者/ 杨卫华 他来北京参会主要为了定期感受一下帝都互联网的氛围，同时也是
杨卫华（Tim Yang），新浪 趁机拜访一些同行。对于大部分技术人员来说，参加技术会议是弥
微博研发副总经理，2008
补自己日常岗位或者环境视野不足的一个有效途径，技术人员由于
年加入新浪， 2009年起参
自身产品及业务需要，可能长期专注在技术某一个特定领域，但整
与新浪微博的技术架构工作，
个技术行业在发生日新月异的变化，通过技术大会可以在较短的时
在海量及峰值访问、大数据、
间内，了解行业的动态及发展方向，了解其他团队正在做的项目及
NoSQL存储、异地机房分
研究成果，可以在较短时间内迅速补充自身视野的不足，并根据对
布式架构及开放平台等方面
参与并推动多次技术改进。 技术行业新的理解，调整自身的技术研发方向。
工作之余喜欢各种技术交流，
经常通过微博发表技术观点。 但是技术大会也存在一些效率的问题，比如现在的技术会议出于商
业的考虑，参会人数较多，一个分会场的演讲通常有数百人参加，
高可用架构 1
因此可能存在体验较难保证的问题，比如热门 Topic 的座位不够、
后排屏幕看不清、音响声音不够清晰、会场空气流通差或温度不舒
适的问题，导致获取知识的效果大打折扣。
在另外一方面，由于一场大会的讲师通常非常多元化，来自不同的
行业及公司，分享的内容侧重点各不相同。但存在讲师对听众缺乏
了解，不了解听众的诉求与期望，因此很容易出现讲师内容对大部
分听众针对性不强的问题。听众需要具有代表性的行业发展动态，
但由于编辑精力及视野的局限、讲师自身能力及视野的局限，这一
点很难保证。讲师分享的内容有如在一些没有菜单的私房菜餐厅，
餐厅提供什么顾客就吃什么，这种方式非常考验厨师的功底，对应
就是策划编辑及讲师的功底。但是大多时候，组织方的主要重心只
是保证上一桌菜并保证表面光鲜，能够进一步将顾客吸引过来，至
于味道怎么样，只有吃完后大家才知道。这种情况下，参与技术大
会是否能够获取优质内容成为了一件预期不可确定的活动。
由于能否获得干货不可确定，资深一些的技术群体往往将技术大会
定位成社交活动，他们认为参加会议主要是为了结识讲师及不同领
域的同行，平时不太有机会一次遇到这么多技术同行，而通过主办
方的组织，同行有机会聚集在一起，通过线下交流来拓宽自己视野，
了解不同团队最近的动态与变化。但是这只适合有一定人脉资源及
自身有一定影响力的人物，他可以实现私下联系或者通过日常交流
的论坛或群聊召集同圈子的人聚集在一起，然后再在会场周围进行
小圈子活动。但对于大多数人来说，在一个人山人海的大会，缺乏
高可用架构 2
一些组织机制来达成社交的目的。讲师由于面对一大群提问的人员，
很难与某一个人员进行长期或者深度的交流；参与者由于与讲师地
位不对等。也很难短时间达成社交的目的。而由于人数及体验的考虑，
主办方组织的的宴会大多针对 VIP 及讲师，普通参会人员很难参
与其中，因此普通参会者很难去在一个上千人的大会中达成社交目的。
从上面来看，大部分参加技术人员的需求主要有：拓宽视野为主的
知识需求、以及拓展人脉为主的社交需求。这些需求是否有更好、
更简单的方法来实现？下面简单谈下获取高质量内容的一些思考。
首先知识获取的需求肯定可以互联网化，通过网络本来就可以获
取多媒体，包括视频、语音、图片、文字等，而大屏幕显示器、
iPad、Kindle等设备可以让阅读及观赏保持一个较好的体验。在
优质内容的广度和深度可以保证的前提下，这些数字化的内容可以
更方便、更及时、更广泛的触达最终的读者，并通过评论、群聊等
讨论等反馈交流机制获得更深度的理解。
如何通过互联网产生高质量内容是非常有挑战的问题，在心理程度上，
大会讲师可以得到比一篇文章作者更高的光环和荣誉，因此有经验
的讲师在有意愿的前提下，更愿意去参加线下会议来提升自己的专
业声望。由于自媒体的流行，通过类似博客的工具写作门槛非常低，
大部分文章的质量良莠不齐，因此大部分从业人员很难通过短期的
写文章脱颖而出得到业界的认可。
不过情况也在发生微妙的变化，近半年，基于在线群聊的“微课堂”
高可用架构 3
突然在各个圈子开始流行，这些“微课堂”大多是组织方邀请各种
背景的讲师，直接通过在线图片、文字或语音的方式跟所有群里面
的成员介绍一个专业的话题，参与的成员可以实时的跟讲师互动提
问。参加者可以更有效率的了解分享话题的内容，而且在不离开自
身舒适的环境的情况下。这种方法看起来不太正式，但却可以通过
非常低的成本获取相同量的内容。
微课堂也存在策划编辑及讲师视野局限及选题把关的问题，因此纯
运营型的组织其实很难做好这件事情，有可能是将线下大会 Topic
质量参差不齐的情况再一次带到线上。如果有一批具有专业背景且
有情怀的人，在一个合适在线平台的组织下，尝试不同的方式（不
局限目前的微课堂的形式），更容易将这个事情简单的回归本身，
通过互联网来轻量的产生及获取高质量内容。
在架构的软件交付领域，2015 年最突飞猛进的莫过于 Docker
了，在 2014 年末时，Tim 曾经计划将“2015年主要精力投入到
Docker 上”，2015 年也已经过去，团队在 Docker 工作中也取
得了不少收获。因此本期主要围绕 Docker 的架构，从 2015 年
高可用架构多篇文章整理，以及业界对于 2016 年的 Docker 发
展一些展望。
关于“高可用架构”
高可用架构由新浪微博 Tim Yang 发起创建的一个社区组织，主
要关注互联网架构及高可用、可扩展及高性能领域的知识传播，订
高可用架构 4
阅用户覆盖主流互联网及软件领域系统首席架构师、技术负责人等
技术从业群体。
用微信扫描关注公众号可以更多了解微博、腾讯、Twitter、Uber
等公司在 2015 年架构领域的分享及实践，以及获得高可用架构
群的申请方法。■
高可用架构 5
Docker 实战
互联网金融创业公司的Docker实战
背景介绍
雪球（http://xueqiu.com）是一家涉足证券行业的互联网金融公司，
成立于2010年，去年获得C轮融资。雪球的产品形态包括社区、
行情、组合、交易等，覆盖沪深港美市场的各个品种。
与传统社交网络的单一好友关系不同，雪球在用户、股票基金及衍
作者/ 高磊 生品、组合三个维度上都进行深度的相互连接。同时雪球的用户活
雪球运维架构师。2012年 跃度和在线时长极高，以致我们在进行技术方案选型和评估的时候
主持研发和运维 Redis 集群 必须提出更高的要求。
等分布式系统，专注于中小
型公司运维架构和运维体系 目前雪球的 DAU 为1M，带宽为1.5G，物理机数量为200+，云
建设，目前在雪球负责技术
虚拟机数量约50个。雪球采用了 Docker 容器作为线上服务的一
保障工作，在Docker容器
个基本运行单元，雪球的容器数量近1k。
及其周边生态系统积累了大
量一线经验。
容器选型
我们的服务面临的操作系统环境大致有五种：物理机、自建虚拟机、
云虚拟机、LXC 容器、Docker 容器。
高可用架构 6
我们主要的考虑的选型指标包括“成本”、“性能”、“稳定性”三个
硬性基础指标，以及“资源隔离能力”、“标准化能力”、“伸缩能力”
这几个附加指标。这五类操作系统环境在雪球的实践如下：
高可用架构 7
应用迁移
我们 SRE 团队借助 Docker 对整个公司的服务进行了统一的标准
化工作，在上半年已经把开发测试、预发布、灰度、生产环境的所
有无状态服务都迁移到了 Docker 容器中。雪球借助 Docker 对
服务进行的标准化和迁移工作，主要是顺着 Docker 的 Build ->
Ship -> Run 这三个流程进行的。同时在迁移过程中填了许多坑，
算是摸着石头过河的阶段。
我们首先设计了自己的 Docker Image 层级体系。在 Base 这一层，
我们从 ubuntu-upstart 镜像开始制作 base 镜像。这里做了动
静分离，静态的部分（static.sh 和对应的 static 文件）和动态的
部分 (runtime.sh) 都会被添加进 base 镜像，静态部分会在构建
base 镜像过程中被执行，而动态部分会在启动 project 镜像的过
程中被执行。详情如下图所示：
高可用架构 8
其中静态部分我们更推荐灵活的使用 shell 脚本来完成多个基础配
置，而不是写冗长的 Dockerfile。下图是一个很好的对比，左面
是gitlab官方的dockerfile，右面是我们的动静分离实践。
然后基于 base 镜像，我们又添加进入了 JDK、NodeJS 等运行
环境，并在JDK的基础上进一步构建了 Resin 镜像。在上述镜像
中再添加一层业务执行代码，则构成了业务镜像。不同的业务镜像
是每个业务运行的最小单元。在雪球我们大力的推进了服务化，去
状态。这样的一个业务镜像就具备了迁移部署、动态伸缩的能力。
需要提醒的是 docker build 镜像的过程中会遇到临时容器的一些
问题，主要涉及访问外网和dameon能力。Docker 构建这块就跟
大家分享这么多。接下来咱们聊聊分发这一步。
高可用架构 9
分发的过程痛点不多，主要是 Registry 的一些与删除相关的
Bug、Push 镜像的性能，以及高可用问题。而本质上高可用依赖
于存储的高可用。在雪球我们使用了硬件存储，接下来计划借助
Ceph 等分布式文件系统去解决。
说完分发，我们谈谈运行这个环节，Docker 运行的部分可以探讨
的内容较多，这里分为网络模型、使用方式、运维生态圈三部分
来介绍。绝大多数对 Docker 的网络使用模型可以汇总为三类：
bridge（NAT）、bridge（去NAT）、host。Docker 默认的桥接
是用的第一种 NAT 方式，也即是把命名空间中的 veth 网卡绑定
到自己的网桥 docker0。然后主机使用iptables来配置 NAT，并
使用 DHCP 服务器 dnsmasq 来分配 IP 地址。
在雪球我们对 Bridge 模式去掉了 NAT，也即把宿主机的 IP 从物
理网卡上移除，直接配置到网桥上去，并且使用静态的 IP 分配策略。
据了解，有好多其他公司在自己的IDC机房中也是采用了去NAT
的桥接模式，这样的好处是 Docker 的 IP 可以直接暴露到交换机
上，性能最高。而端口映射方案不容易做服务发现，雪球并没有使用。
其中去 NAT 的 Bridge 模式需要在宿主机上禁用 iptables 和 ip_
forward，以及禁用相关的内核模块，以避免网络流量毛刺风暴问题。
说完网络，我们看下一些使用场景。我们在 docker run 的时
候 通 过 —mac-address 传 入 了 静 态 MAC 地 址，并 通 过 前