Here's an example:
    julia> A = sprand(5,5,1/5);
    julia> A = max.(A,A');
    julia> A = spones(A);
    julia> full(A)
    5×5 Array{Float64,2}:
     0.0  1.0  0.0  0.0  1.0
     1.0  0.0  0.0  0.0  0.0
     0.0  0.0  0.0  1.0  1.0
     0.0  0.0  1.0  0.0  0.0
     1.0  0.0  1.0  0.0  0.0
    julia> issymmetric(A)
    true
    julia> B = A[5:-1:1,5:-1:1];
    julia> full(B)
    5×5 Array{Float64,2}:
     0.0  0.0  1.0  0.0  1.0
     0.0  0.0  1.0  0.0  0.0
     1.0  1.0  0.0  0.0  0.0
     0.0  0.0  0.0  0.0  1.0
     1.0  0.0  0.0  1.0  0.0
    julia> issymmetric(B)
    false
Here, `issymmetric(B)` should return true but it returns false. The issue is
not with the `issymmetric` function. Take a look at the following:
    julia> isequal(A,A')
    true
    julia> isequal(B,B')
    false
    julia> issymmetric(full(B))
    true
    julia> issymmetric(sparse(full(B)))
    true
    julia> for i = 1:5
           for j = 1:5
           if B[i,j] != 0
           println("[i,j] = [$i,$j] and B[i,j] is $(B[i,j])")
           end
           end
           end
    [i,j] = [2,3] and B[i,j] is 1.0
    [i,j] = [3,2] and B[i,j] is 1.0
    [i,j] = [4,5] and B[i,j] is 1.0
    [i,j] = [5,1] and B[i,j] is 1.0
    [i,j] = [5,4] and B[i,j] is 1.0
    julia> nnz(B)
    8
    julia> B[1,5]
    0.0
    julia> full(B)[1,5]
    1.0
if we use `collect(5:-1:1)` instead, everything seems to work fine.
    julia> B = A[collect(5:-1:1),collect(5:-1:1)];
    julia> full(B)
    5×5 Array{Float64,2}:
     0.0  0.0  1.0  0.0  1.0
     0.0  0.0  1.0  0.0  0.0
     1.0  1.0  0.0  0.0  0.0
     0.0  0.0  0.0  0.0  1.0
     1.0  0.0  0.0  1.0  0.0
    julia> issymmetric(B)
    true
    julia> for i = 1:5
           for j = 1:5
           if B[i,j] != 0
           println("[i,j] = [$i,$j] and B[i,j] is $(B[i,j])")
           end
           end
           end
    [i,j] = [1,3] and B[i,j] is 1.0
    [i,j] = [1,5] and B[i,j] is 1.0
    [i,j] = [2,3] and B[i,j] is 1.0
    [i,j] = [3,1] and B[i,j] is 1.0
    [i,j] = [3,2] and B[i,j] is 1.0
    [i,j] = [4,5] and B[i,j] is 1.0
    [i,j] = [5,1] and B[i,j] is 1.0
    [i,j] = [5,4] and B[i,j] is 1.0
    julia> nnz(B)
    8
versioninfo for reference:
    julia> versioninfo()
    Julia Version 0.6.0-pre.alpha.146
    Commit c399558 (2017-03-15 15:20 UTC)
    Platform Info:
      OS: macOS (x86_64-apple-darwin13.4.0)
      CPU: Intel(R) Core(TM) i5-2435M CPU @ 2.40GHz
      WORD_SIZE: 64
      BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
      LAPACK: libopenblas64_
      LIBM: libopenlibm
      LLVM: libLLVM-3.9.1 (ORCJIT, sandybridge)
P.S. I looked for this bug elsewhere -- didn't find anything, I hope it's not
a duplicate bug