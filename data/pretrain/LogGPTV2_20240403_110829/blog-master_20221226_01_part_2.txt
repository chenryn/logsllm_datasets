3 PC_FilterBetween  
PC_FilterBetween(p pcpatch, dimname text, float8 value1, float8 value2) returns pcpatch:  
Returns a patch with only points whose values are between (excluding) the supplied values for the requested dimension.  
4 PC_FilterEquals  
PC_FilterEquals(p pcpatch, dimname text, float8 value) returns pcpatch:  
Returns a patch with only points whose values are the same as the supplied values for the requested dimension.  
```  
9、返回包住点集的几何"bound box"或"bound box的对角线"  
通常用于在几何图像上创建geo索引:    
```  
SELECT ST_AsText(PC_EnvelopeGeometry(pa)) FROM patches LIMIT 1;  
POLYGON((-126.99 45.01,-126.99 45.09,-126.91 45.09,-126.91 45.01,-126.99 45.01))  
CREATE INDEX ON patches USING GIST(PC_EnvelopeGeometry(patch));  
```  
```  
SELECT ST_AsText(PC_BoundingDiagonalGeometry(pa)) FROM patches;  
                  st_astext  
------------------------------------------------  
LINESTRING Z (-126.99 45.01 1,-126.91 45.09 9)  
LINESTRING Z (-126 46 100,-126 46 100)  
LINESTRING Z (-126.2 45.8 80,-126.11 45.89 89)  
LINESTRING Z (-126.4 45.6 60,-126.31 45.69 69)  
LINESTRING Z (-126.3 45.7 70,-126.21 45.79 79)  
LINESTRING Z (-126.8 45.2 20,-126.71 45.29 29)  
LINESTRING Z (-126.5 45.5 50,-126.41 45.59 59)  
LINESTRING Z (-126.6 45.4 40,-126.51 45.49 49)  
LINESTRING Z (-126.9 45.1 10,-126.81 45.19 19)  
LINESTRING Z (-126.7 45.3 30,-126.61 45.39 39)  
LINESTRING Z (-126.1 45.9 90,-126.01 45.99 99)  
CREATE INDEX ON patches USING GIST(PC_BoundingDiagonalGeometry(patch) gist_geometry_ops_nd);  
```  
## pgpointcloud 函数接口解读  
1、点  
PC_MakePoint(pcid integer, vals float8[]) returns pcpoint:  
- 构建点, pcid为schema, 相同schema可以表达为某一类点  
PC_AsText(p pcpoint) returns text:  
- 将二进制点转换成text表达  
PC_PCId(p pcpoint) returns integer (from 1.1.0):  
- 获取点的schema id  
PC_Get(pt pcpoint) returns float8[]:  
- 获取点的所有维度值  
PC_Get(pt pcpoint, dimname text) returns numeric:  
- 获取指定维度值: x,y,z,Intensity  
PC_MemSize(pt pcpoint) returns int4:  
- 点占据内存大小  
2、点集  
PC_Patch(pts pcpoint[]) returns pcpatch:  
- 将多个点聚合为点集  
PC_MakePatch(pcid integer, vals float8[]) returns pcpatch:  
- 构造点集  
PC_NumPoints(p pcpatch) returns integer:  
- 返回点集中有多少点  
PC_PCId(p pcpatch) returns integer:  
- 返回点集的schema id  
PC_AsText(p pcpatch) returns text:  
- 将点集二进制格式转换为文本格式  
PC_Summary(p pcpatch) returns text (from 1.1.0):  
- 返回点集的统计信息: 点个数, srid, 各个维度的avg,min,max统计等  
PC_Uncompress(p pcpatch) returns pcpatch:  
- 解压点集  
PC_Union(p pcpatch[]) returns pcpatch:  
- 将多个点集聚合为一个点集  
PC_Intersects(p1 pcpatch, p2 pcpatch) returns boolean:  
- 判断两个点集的bound box是否相交  
PC_Explode(p pcpatch) returns SetOf[pcpoint]:  
- 将点集展开为点(返回多条记录)  
PC_PatchAvg(p pcpatch, dimname text) returns numeric:  
- 返回点集指定维度的平均值  
PC_PatchMax(p pcpatch, dimname text) returns numeric:  
- 返回点集指定维度的最大值  
PC_PatchMin(p pcpatch, dimname text) returns numeric:  
- 返回点集指定维度的最小值  
PC_PatchMin(p pcpatch) returns pcpoint:  
- 返回点集所有维度的最小值  
PC_PatchAvg(p pcpatch) returns pcpoint:  
- 返回点集所有维度的平均值  
PC_PatchMax(p pcpatch) returns pcpoint:  
- 返回点集所有维度的最大值  
PC_FilterGreaterThan(p pcpatch, dimname text, float8 value) returns pcpatch:  
- 过滤在某个‘指定维度’上大于‘指定’的点, 构成一个新的点集返回  
PC_FilterLessThan(p pcpatch, dimname text, float8 value) returns pcpatch:  
- 过滤在某个‘指定维度’上小于‘指定值’的点, 构成一个新的点集返回  
PC_FilterBetween(p pcpatch, dimname text, float8 value1, float8 value2) returns pcpatch:  
- 过滤在某个‘指定维度’上落在某‘指定值’范围内的点, 构成一个新的点集返回  
PC_FilterEquals(p pcpatch, dimname text, float8 value) returns pcpatch:  
- 过滤在某个‘指定维度’上等于‘指定值’的点, 构成一个新的点集返回  
PC_Compress(p pcpatch,global_compression_scheme text,compression_config text) returns pcpatch:  
- 压缩点集  
PC_PointN(p pcpatch, n int4) returns pcpoint:  
- 返回点集内的第N个点  
PC_IsSorted(p pcpatch, dimnames text[], strict boolean default true) returns boolean:  
- 判断点集在某些维度上是否有序  
PC_Sort(p pcpatch, dimnames text[]) returns pcpatch:  
- 对点集按指定维度排序. 有点像电子管电视机的扫描顺序的概念  
PC_Range(p pcpatch, start int4, n int4) returns pcpatch:  
- 返回点集中指定区间的点  
PC_SetPCId(p pcpatch, pcid int4, def float8 default 0.0) returns pcpatch:  
- 设置点集的schema id  
PC_Transform(p pcpatch, pcid int4, def float8 default 0.0) returns pcpatch:  
- 转换点集schema id  
PC_MemSize(p pcpatch) returns int4:  
- 返回点集内存占用  
3、GIS互动  
PC_Intersects(p pcpatch, g geometry) returns boolean:  
PC_Intersects(g geometry, p pcpatch) returns boolean:  
- 判断点集的bound box是否与几何对象交叉  
PC_Intersection(pcpatch, geometry) returns pcpatch:  
- 提取点集内落在几何对象内的点构成新点集并返回  
Geometry(pcpoint) returns geometry:  
pcpoint::geometry returns geometry:  
- 将点转换为几何对象  
PC_EnvelopeGeometry(pcpatch) returns geometry:  
- 提取点集的bound box, 返回由bound box四个点组成的polygon  
PC_BoundingDiagonalGeometry(pcpatch) returns geometry:  
- 提取点集的bound box, 返回由bound box左下和右上点组成的对角线段  
## 详细参考:  
https://pgpointcloud.github.io/pointcloud/functions/index.html  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")