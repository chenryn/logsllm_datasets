### 优化后的文本

#### 定义
\[ \text{DB}(\lambda) = \max_{\text{AdvPriv}_A \in \text{Poly}(\lambda)} \]
如果 \(\text{AdvPriv}_{\text{DB}}(\lambda)\) 是可忽略的，则 DB 是隐私保护的。

**定理 5.**
如果 PKE 是一个 IND-CCA2 安全的公钥加密方案，并且对于任何证明者 \(P\)，其公开标识符 \(id_{\text{pub}}(P)\) 被设置为 null，则 TREADPub 是隐私保护的，并且
\[ \text{AdvPriv}_{\text{TREADPub}}(\lambda) \leq \text{AdvIND-CCA2}_{\text{PKE}}(\lambda). \]
该定理的证明见附录 B.2。

### 3.6 证明者匿名性
最后，我们展示了我们的协议的匿名版本能够保护证明者的匿名性，即使面对恶意验证者。这些恶意验证者可能试图通过关联认证会话来对合法证明者进行画像，从而威胁其隐私。例如，在公共交通运输系统场景中，这种威胁尤为相关。

验证者在协议执行过程中唯一能获取到的关于证明者身份的信息是证明者生成的签名。因此，如果使用安全的群签名方案，协议将不会泄露任何关于证明者身份的信息。否则，验证者将能够破坏群签名方案的安全性。

匿名构造被定义为 TREAD 的一个实例，其中 \(E = \text{PKE}\) 和 \(S = \text{G-SIG}\)，分别为公钥加密和群签名方案。在这种协议中，\(id_{\text{prv}}(P)\) 只应标识相应的群身份。因此，验证者不应获得任何关于证明者身份的信息。为了形式化这一属性，我们扩展了 [19] 中的模型，借鉴了可撤销群签名 [22] 的匿名模型。

**定义 9 (证明者匿名性).**
设 DB 为一个距离绑定方案。对于对手 A 在 DB 上的匿名性实验 \(\text{ExpAnon}_{A, \text{DB}}(\lambda)\) 定义如下：A 与挑战者交互，挑战者运行算法 \(\text{DB.gen}(1^\lambda)\) 生成设置参数，并将其发送给 A。在实验过程中，A 可以访问以下预言机：

- \(\text{DB.Joinh}(·)\): 输入 \(i\)，创建一个新的合法证明者 \(P_i\) 使用 \(\text{DB.joinMK}(i, UL)\)。
- \(\text{DB.Joinc}(·)\): 输入 \(i\)，创建一个被篡改的证明者 \(P_i\) 使用 \(\text{DB.joinMK}(i, UL)\)，返回私钥 \(psk_i\) 并将 \(P_i\) 添加到 CU。
- \(\text{DB.Revoke}(·)\): 输入 \(i\)，运行 \(\text{DB.revokeMK}(i, RL, UL)\) 来撤销证明者 \(P_i\)。
- \(\text{DB.Corrupt}(·)\): 输入 \(i\)，模拟 \(P_i\) 的腐败，返回私钥 \(psk_i\) 并将 \(P_i\) 添加到 CU。
- \(\text{DB.Prover}(·)\): 输入 \(i\)，模拟诚实证明者 \(P_i\) 使用 \(psk_i\) 的会话。
- \(\text{DB.Verifier}\): 模拟验证者 V 使用 \(sk_v\) 的会话。

首先，A 发送一对证明者 \((i_0, i_1)\) 给挑战者。如果 \(i_0\) 或 \(i_1\) 在 CU 中，挑战者中止实验。否则，挑战者随机选择 \(b \leftarrow \{0, 1\}\)。A 然后可以访问 \(\text{DB.Revoke}(·)\) 和 \(\text{DB.Corrupt}(·)\) 对 \(i_0\) 和 \(i_1\)（如果 A 使用这些输入，预言机返回 ⊥）。此后，A 可以访问以下挑战预言机：
- \(\text{DB.Proverb}\): 模拟证明者 \(P_{ib}\) 使用 \(psk_{ib}\) 的会话。

最终，A 返回 \(b'\)。如果 \(b = b'\)，挑战者返回 1，表示 A 的猜测正确；否则返回 0。

我们定义 A 在此实验中的优势为
\[ \text{AdvAnon}_{A, \text{DB}}(\lambda) = \left| \Pr[\text{ExpAnon}_{A, \text{DB}}(\lambda) = 1] - \frac{1}{2} \right|. \]

并且在 PA 实验中的优势为
\[ \text{AdvAnon}_{\text{DB}}(\lambda) = \max_{A \in \text{Poly}(\lambda)} \{\text{AdvAnon}_{A, \text{DB}}(\lambda)\}. \]

如果 \(\text{AdvAnon}_{\text{DB}}(\lambda)\) 是可忽略的，则 DB 是证明者匿名的。

**定理 6.**
如果 G-SIG 是一个匿名可撤销的群签名方案 [22]，并且对于任何证明者 \(P\)，其公开标识符 \(id_{\text{pub}}(P)\) 和私有标识符 \(id_{\text{prv}}(P)\) 要么被设置为 null，要么是群身份，则 TREADAN O 是证明者匿名的，并且
\[ \text{AdvAnon}_{\text{TREADAN O}}(\lambda) \leq \text{AdvAnon}_{\text{G-SIG}}(\lambda). \]
该定理的证明见附录 B.3。

### 4. 结论
本文提出了一种新的可证明的 TF 抵抗方法。具体来说，我们不再依赖于提取机制来确保 TF 同谋可以冒充帮助他的恶意证明者，而是构建了一个通用而简单的基于重放的构造。在这个构造中，一个由恶意证明者帮助的对手可以直接适应他学到的身份验证信息，以相同概率成功进行新的身份验证会话。然而，这以稍微降低 MF 和 MF 抵抗能力为代价。

我们还加强了已经很强的 SimTF 概念，并证明如果对手在恶意证明者的帮助下以不可忽略的成功概率成功认证，他可以将获胜概率放大到压倒性的概率。我们还介绍了三个协议实例。第一个是对称密钥轻量级 DB 协议，没有隐私。第二个是公钥协议，对外部窃听者具有隐私保护。最后一个提供了针对恶意验证者的完全证明者匿名性。我们的设计是通用的，可以用于扩展现有的 DB 协议。

### 5. 参考文献
[略]

### 附录
#### A. 定义
本节介绍我们在正式证明中隐含使用的经典定义。

**定义 10.** 对称密钥加密方案 SKE 是一个三元组算法 \((\text{SKE.gen}, \text{SKE.enc}, \text{SKE.dec})\)，满足：
- \(\text{SKE.gen}(1^\lambda)\): 从全局安全参数 \(\lambda\) 返回一个密钥 \(sk\)。
- \(\text{SKE.enc}_{sk}(m)\): 从消息 \(m\) 和密钥 \(sk\) 返回一个密文 \(c\)。
- \(\text{SKE.dec}_{sk}(c)\): 从密文 \(c\) 和密钥 \(sk\) 返回一个明文 \(m\)。

对称密钥加密方案被认为是正确的当且仅当 \(\text{SKE.dec}_{sk}(\text{SKE.enc}_{sk}(m)) = m\) 对于任何消息 \(m\) 和由 \(\text{SKE.gen}\) 生成的任何密钥 \(sk\) 成立。

**定义 11.** 公钥加密方案 PKE 是一个三元组算法 \((\text{PKE.gen}, \text{PKE.enc}, \text{PKE.dec})\)，满足：
- \(\text{PKE.gen}(1^\lambda)\): 从全局安全参数 \(\lambda\) 返回一个公钥/私钥对 \((pk, sk)\)。
- \(\text{PKE.enc}_{pk}(m)\): 从消息 \(m\) 和公钥 \(pk\) 返回一个密文 \(c\)。
- \(\text{PKE.dec}_{sk}(c)\): 从密文 \(c\) 和私钥 \(sk\) 返回一个明文 \(m\)。

公钥加密方案被认为是正确的当且仅当 \(\text{PKE.dec}_{sk}(\text{PKE.enc}_{pk}(m)) = m\) 对于任何消息 \(m\) 和由 \(\text{PKE.gen}\) 生成的任何密钥对 \((pk, sk)\) 成立。

**定义 12.** 设 SKE : \((\text{SKE.gen}, \text{SKE.enc}, \text{SKE.dec})\) 为对称密钥加密方案。SKE 被认为是不可区分的对抗自适应选择密文攻击（IND-CCA2），当对于任何对手 \(A = (A_0, A_1)\)，优势概率 \(\text{AdvIND-CCA2}_{A, \text{SKE}}(1^\lambda)\) 是可忽略的：
\[ k \leftarrow \text{SKE.gen}(1^\lambda), b \leftarrow \{0, 1\} \]
\[ b' \leftarrow A_{\text{SKE.enc}_k(\text{LR}_b), \text{SKE.dec}_k}(\lambda) \]
\[ \text{AdvIND-CCA2}_{A, \text{SKE}}(1^\lambda) = \left| \Pr[b = b'] - \frac{1}{2} \right| \]
其中预言机 \(\text{SKE.enc}_k(\text{LR}_b)\) 和 \(\text{SKE.dec}_k\) 定义为：
- \(\text{SKE.enc}_k(\text{LR}_b(m_0, m_1))\): 对于消息对 \((m_0, m_1)\) 返回 \(\text{SKE.enc}_k(m_b)\)，其中 \(b\) 是随机位。
- \(\text{SKE.dec}_k(c)\): 如果 \(c\) 是由 \(\text{SKE.enc}_k(\text{LR}_b)\) 生成的，返回 \(\bot\)；否则返回 \(\text{SKE.dec}_k(c)\)。

**定义 13.** 设 PKE : \((\text{PKE.gen}, \text{PKE.enc}, \text{PKE.dec})\) 为公钥加密方案。PKE 被认为是不可区分的对抗自适应选择密文攻击，当对于任何对手 \(A = (A_0, A_1)\)，优势概率 \(\text{AdvIND-CCA2}_{A, \text{PKE}}(1^\lambda)\) 是可忽略的：
\[ (pk, sk) \leftarrow \text{PKE.gen}(1^\lambda), b \leftarrow \{0, 1\} \]
\[ b' \leftarrow A_{\text{PKE.enc}_{pk}(\text{LR}_b), \text{PKE.dec}_{sk}}(\lambda) \]
\[ \text{AdvIND-CCA2}_{A, \text{PKE}}(1^\lambda) = \left| \Pr[b = b'] - \frac{1}{2} \right| \]
其中预言机 \(\text{PKE.enc}_{pk}(\text{LR}_b)\) 和 \(\text{PKE.dec}_{sk}\) 定义为：
- \(\text{PKE.enc}_{pk}(\text{LR}_b(m_0, m_1))\): 对于消息对 \((m_0, m_1)\) 返回 \(\text{PKE.enc}_{pk}(m_b)\)，其中 \(b\) 是随机位。
- \(\text{PKE.dec}_{sk}(c)\): 如果 \(c\) 是由 \(\text{PKE.enc}_{pk}(\text{LR}_b)\) 生成的，返回 \(\bot\)；否则返回 \(\text{PKE.dec}_{sk}(c)\)。

**定义 14.** 消息认证码方案 MAC 是一个三元组算法 \((\text{MAC.gen}, \text{MAC.sig}, \text{MAC.ver})\)，满足：
- \(\text{MAC.gen}(1^\lambda)\): 从全局安全参数 \(\lambda\) 返回一个密钥 \(sk\)。