  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
My app should be deployed to now.sh using a custom webpack config and a custom
.babelrc
## Current Behavior
Deploy fails in `next build` stage.
    > Using external babel configuration
    07/12 10:59 AM (33m)
    > location: "/home/nowuser/src/.babelrc"
    07/12 10:59 AM (33m)
    > Using "webpack" config function defined in next.config.js.
    07/12 10:59 AM (32m)
    > Failed to build on /tmp/917ccbd0-55db-4437-a2c0-544b2502d880
    07/12 10:59 AM (32m)
    { Error: ./pages/_document.js?entry
    Module build failed: SyntaxError: Unexpected token (24:6)
      22 |   render() {
      23 |     return (
    > 24 |       
         |       ^
      25 |         
      26 |            (/home/nowuser/src/node_modules/next/node_modules/webpack/lib/Compiler.js:354:14)
## Steps to Reproduce (for bugs)
  1. run `now`
## Context
  1. next.config.js
    const path = require('path')
    const glob = require('glob')
    module.exports = {
      webpack: (config, { dev }) => {
        config.module.rules.push(
          {
            test: /\.(css|graphql|gql|scss|sass)/,
            loader: 'emit-file-loader',
            options: {
              name: 'dist/[path][name].[ext]',
            },
          }
          ,
          {
            test: /\.css$/,
            use: ['babel-loader', 'raw-loader', 'postcss-loader'],
          },
          {
            test: /\.s(a|c)ss$/,
            use: ['babel-loader', 'raw-loader', 'postcss-loader',
              {
                loader: 'sass-loader',
                options: {
                  includePaths: ['styles', 'node_modules']
                    .map((d) => path.join(__dirname, d))
                    .map((g) => glob.sync(g))
                    .reduce((a, c) => a.concat(c), [])
                }
              }
            ]
          },
          {
            test: /\.(graphql|gql)$/,
            exclude: /node_modules/,
            loader: 'graphql-tag/loader'
          }
        )
        return config
      }
    }
  2. .babelrc
    {
      "env": {
        "development": {
          "presets": "./babel-preset"
        },
        "production": {
          "presets": "./babel-preset"
        },
        "test": {
          "presets": [
            ["env", { "modules": "commonjs" }],
            "./babel-preset"
          ]
        }
      }
    }
  3. babel-preset.js
    const nextBabelPreset = require('next/babel');
    nextBabelPreset.plugins = nextBabelPreset.plugins.map(plugin => {
    	if (!Array.isArray(plugin) && plugin.indexOf('styled-jsx/babel') !== -1) {
    		return require.resolve('styled-jsx-postcss/babel');
    	}
    	return plugin
    });
    module.exports = nextBabelPreset;
## Your Environment
Tech | Version  
---|---  
next | 3  
node | 8  
OS | Mac  
browser |  
etc |