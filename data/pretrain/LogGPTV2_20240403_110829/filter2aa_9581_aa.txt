# 空间测绘
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
## 大纲
* [语料收集](#语料收集)
* [Github](#github)
* [Google](#google)
* [Shodan](#shodan)
* [BinaryEdge](#binaryedge)
* [Censys](#censys)
* [Zoomeye](#zoomeye)
* [FoFa](#fofa)
* [Dnsdb](#dnsdb)
* [知风](#知风)
* [ONYPHE](#onyphe)
* [GreyNoise](#greynoise)
* [Thingful](#thingful)
* [LeakIX](#leakIX)
* [spyse](#spyse)
* [quake](#quake)
* [netlas](#netlas)
---
**相关文章**
- [Shodan BinaryEdge ZoomEye 网络空间搜索引擎测评](https://paper.seebug.org/970/)
- [让网络空间测绘技术不再那么飘忽不定](https://mp.weixin.qq.com/s/lr39F9kNOfHlMimgymzVwg)
- [A Survey on Cyberspace Search Engines](https://link.springer.com/chapter/10.1007/978-981-33-4922-3_15)
- [Offensive OSINT s01e01 - OSINT & RDP](https://www.offensiveosint.io/offensive-osint-s01e01-osint-rdp/)
- [Quake使用案例——利用高级组合语法拓线发掘某工控系统](https://quake.360.cn/quake/#/reportDetail?id=5fcf6443e886ea8fc5c5e2ea&title=Quake%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B)
- [网络空间测绘溯源技术剖析](https://www.anquanke.com/post/id/265148)
- [网络空间测绘理论体系概述](https://mp.weixin.qq.com/s/CxZAfsTzY4r1AQLcNP-JGg)
**相关工具**
- [ffffffff0x/ones](https://github.com/ffffffff0x/ones) - 可用于多个网络资产测绘引擎 API 的命令行查询工具
- [projectdiscovery/uncover](../../安全工具/uncover.md) - Quickly discover exposed hosts on the internet using multiple search engines.
**常用搜索接口**
```
https://www.exploit-db.com/search?q=
https://habr.com/en/search/?q=
https://so.csdn.net/so/search/s.do?q=
http://so.51cto.com/?keywords=
https://juejin.im/search?query=&type=all
```
---
## 语料收集
**杂项**
- [haiyangma/dics](https://github.com/haiyangma/dics)
**人名**
- [wainshine/Chinese-Names-Corpus](https://github.com/wainshine/Chinese-Names-Corpus) - 中文人名语料库。中文姓名,姓氏,名字,称呼,日本人名,翻译人名,英文人名。可用于中文分词、人名实体识别。
**地名**
- [modood/Administrative-divisions-of-China: 中华人民共和国行政区划:省级(省份直辖市自治区)、 地级(城市)、 县级(区县)、 乡级(乡镇街道)、 村级(村委会居委会) ,中国省市区镇村二级三级四级五级联动地址数据 Node.js 爬虫.](https://github.com/modood/Administrative-divisions-of-China)
**黑产 seo 关键词**
- [fwwdn/sensitive-stop-words](https://github.com/fwwdn/sensitive-stop-words) - 互联网常用敏感词、停止词词库
- [observerss/textfilter](https://github.com/observerss/textfilter) - 敏感词过滤的几种实现+某1w词敏感词
- [lining0806/TextMining](https://github.com/lining0806/TextMining) - 敏感词过滤系统
- [funNLP/data/敏感词库](https://github.com/fighting41love/funNLP/tree/master/data/%E6%95%8F%E6%84%9F%E8%AF%8D%E5%BA%93) - 反动词表、暴恐词表
- [IllegalWordsDetection/blob/master/MinGanCi.txt](https://github.com/NewbieGameCoder/IllegalWordsDetection/blob/master/MinGanCi.txt) - 敏感词
- [Ldundun/DFA/blob/master/sw.txt](https://github.com/Ldundun/DFA/blob/master/sw.txt) - 敏感词
- [qloog/sensitive_words](https://github.com/qloog/sensitive_words) - 敏感词库整理
- [57ing/Sensitive-word](https://github.com/57ing/Sensitive-word) -  收集的一些敏感词汇，细分了暴恐词库、反动词库、民生词库、色情词库、贪腐词库、其他词库等
- [bzvs1992/SensitiveWordFilter](https://github.com/bzvs1992/SensitiveWordFilter)
- [adlered/DangerousSpamWords](https://github.com/adlered/DangerousSpamWords) - 超轻量的中文敏感字、敏感词库，字典词典
- [seo_word](https://github.com/No-Github/AboutSecurity/blob/master/Dic/Regular/seo/seo_word.txt)
---
## Github
**相关文章**
- [Auditing GitHub users’ SSH key quality](https://blog.benjojo.co.uk/post/auditing-github-users-keys)
- [Github搜索语法-信息搜集指南](https://payloads.online/archivers/2019-01-31/2)
**语法**
| 限定词 	            | 案例 |
| - | - |
| in:name 	        | `in:name python` 查出仓库名中有 python 的项目（python in:name 也是一样的） |
| in:description 	    | `in:name,description python` 查出仓库名或者项目描述中有 python 的项目 |
| in:readme 	        | `in:readme python` 查出 `readme.md` 文件里有 python 的项目 |
| repo:owner/name 	| `repo:octocat/hello-world` 查出 octocat 的 hello-world 项目（指定了某个人的某个项目） |
| user:USERNAME 	    | `user:1335951413 stars:=5` 查出 star数大于等于 5 个 的项目（支持大于小于区间等） |
| pushed:YYYY-MM-DD 	| `css pushed:>2013-02-01` 查出仓库中包含 css 关键字，并且在 2013年1月 之后更新过的项目 |
| language:LANGUAGE 	| `rails language:javascript` 查出仓库包含 rails 关键字，并且使用 javscript 语言的项目 |
| created:YYYY-MM-DD 	| `webos created:5` 查出有 5 个以上 topic 的项目（支持大于小于区间等） |
| archived:true/false | `archived:true GNOME` 查出已经封存了并且含有 GNOME 关键字的项目（已经不再维护了的项目） |
| license:LICENSE_KEYWORD | `license:apache-2.0` 查出仓库的开源协议是 apache-2.0 的 |
| size:n 	| `size:1000` 查出仓库大小等于 1MB 的项目 |
| size:n 	| `size:>=30000` 查出仓库大小至少大于 30MB 的项目 |
| size:n 	| `size:50..120` 查出仓库大小在 50KB 至 120KB 之间的项目 |
| is:public/private | `is:public org:github` 查出仓库所有组织是 github 并且公开的项目 |
| is:public/private | `is:private github` 查出含有 github 关键字并且是私有的项目（私有的别人看不到，所以这个是用来搜索自己的私有项目的） |
> 项目名字(name)里有 python 的
```
in:name python
```
> 名字(name)里有 python 的并且 stars 大于 3000 的
```
in:name python starts:>3000
```
> 名字(name)里有 python 的并且 stars 大于 3000 、forks 大于 200 的
```
in:name python starts:>3000 forks:>200
```
> 详情(readme)里面有 python 的并且 stars 大于 3000 的
```
in:readme python starts:>3000
```
> 描述(description)里面有 python 的并且 stars 大于 3000 的
```
in:description python starts:>3000
```
> 描述(description)里面有 python 的并且是 python 语言的
```
in:description python language:python
```
> 描述(description)里面有 python 的并且 2019-12-20 号之后有更新过的
```
in:description python pushed:>2019-12-20
```
**例子**
- 敏感信息
    ```
    create user identified by
    create user zabbix@'%' identified by
    各单位
    XX市XX局版权所有
    技术支持：xxxx公司
    去github上搜开发公司的客服电话
    ```
    - [leaky-repo](https://github.com/Plazmaz/leaky-repo) - 仓库收集了泄露文件的案例
- 交流
    ```
    内部
    钉钉群
    ```
**监控工具**
- [BishopFox/GitGot](https://github.com/BishopFox/GitGot) - 快速搜索 GitHub 上公共数据的敏感信息
- [UKHomeOffice/repo-security-scanner](https://github.com/UKHomeOffice/repo-security-scanner)- 查找意外提交给 git 仓库的秘密的 CLI 工具,例如密码,私钥
- [gwen001/github-search](https://github.com/gwen001/github-search) - 在GitHub上执行基本搜索的工具。
- [eth0izzle/shhgit](https://github.com/eth0izzle/shhgit) - 实时的监控 github 寻找敏感信息
- [lightless233/geye](https://github.com/lightless233/geye) - 一款面向企业级以及白帽子的"More Fastest" Github监控工具
- [Securityautomation/DumpTheGit](https://github.com/Securityautomation/DumpTheGit) - 搜索公开的代码仓库, 查找敏感信息
- [4x99/code6](https://github.com/4x99/code6) - GitHub 代码泄露监控系统
- [zricethezav/gitleaks](https://github.com/zricethezav/gitleaks) - 用于检测 git repos 中的硬编码机密，例如密码，api 密钥和令牌
- [hahwul/gitls](https://github.com/hahwul/gitls) - 从组织/用户中包含的所有公共存储库中提取 URL
- [madneal/gshark](https://github.com/madneal/gshark) - Scan for sensitive information easily and effectively.
- [trufflesecurity/trufflehog](https://github.com/trufflesecurity/trufflehog) - Find credentials all over the place
---
- [cve-search/git-vuln-finder](https://github.com/cve-search/git-vuln-finder) - 从 git 提交消息中寻找潜在的软件漏洞
**同类代码托管网站**
```
https://usersnap.com/ | Usersnap - Customer Feedback & Visual Bug Tracking
https://www.assembla.com/home | Secure Git, Secure Software Development in the Cloud | Assembla
https://osdn.net/ | Develop and Download Open Source Software - OSDN
https://gitee.com/ | 码云 Gitee — 基于 Git 的代码托管和研发协作平台
https://xiaolvyun.baidu.com/#page1 | 百度效率云 | Git代码托管,版本管理,项目管理,持续集成,持续交付,研发工具云端解决方案
https://sourceforge.net/ | SourceForge - Download, Develop and Publish Free Open Source Software
https://launchpad.net/ | Launchpad
https://bitbucket.org/ | Bitbucket | The Git solution for professional teams
https://coding.net/ | CODING - 一站式软件研发管理平台
https://about.gitlab.com/ | The first single application for the entire DevOps lifecycle - GitLab | GitLab
```
**代码搜索网站**
```
https://searchcode.com/
https://grep.app/
```
**新版github 代码搜索引擎**
- [GitHub Code Search](https://cs.github.com/)
    - [Recon Weekly #2: GitHub Code Search Preview (for Hackers)](https://www.sshell.co/github-code-search/)
---
## Google
**案例**
- [GGvulnz — How I hacked hundreds of companies through Google Groups](https://medium.com/@milanmagyar/ggvulnz-how-i-hacked-hundreds-of-companies-through-google-groups-b69c658c8924) - 作者描述了如何通过 google group 的搜索结果获得未授权的访问链接
- [Google Dorks for Bug Bounty](https://www.cyberick.com/post/google-dorks-for-bug-bounty)
- [How to master Google Hacking (Dorking)](https://blog.blockmagnates.com/how-to-master-google-hacking-dorking-bd9b6e3d28fa)
**搜索引擎语法**
- 包含关键字: `intitle:关键字`
- 包含多个关键字: `allintitle:关键字 关键字2`
- 搜索特定类型的文件: `关键字 filetype:扩展名` ,例如 `人类简史 filetype:pdf`
- 搜索特定网站的内容: `关键字 site:网址`
- 排除不想要的结果: `关键字 -排查条件` ,例如搜索 "运动相机",但只想看 GoPro 品牌以外的产品 `运动相机 -GoPro`
- 双引号的用处:例如: `"how to write a code"` 如果没有引号,搜索的大部分结果是以 `write code` 为关键字.包含引号后,会确保将完整的字符串做为期望的检索结果提交给搜索引擎.
- 搜索缓存: `cache: +后缀` ，如：`cache: regontool.org`
**搜索语法合集**
- [Google Hacking Database](https://www.exploit-db.com/google-hacking-database)
- [K0rz3n/GoogleHacking-Page](https://github.com/K0rz3n/GoogleHacking-Page)
- [BullsEye0/google_dork_list](https://github.com/BullsEye0/google_dork_list)
**dork工具**
- [dwisiswant0/go-dork](https://github.com/dwisiswant0/go-dork) - Go 语言编写的快速 Dork 扫描仪。
**例子**
- **常见语法**
    ```
    site:*.site.com -www
    site:*.*.site.com -www
    site:*.*.*.site.com -www
    inurl:tw
    inurl:jp