::: para
由 Red Hat Enterprise Linux 7 所提供的 `SSH`{.systemitem}
协议，即使此协议的运行支持 SSH-1 以及 SSH-2
版本的协议，但是可能的情况下，只使用后者。 SSH-2 版本比起旧版 SSH-1
作了一些的改进，并且大多数高级配置选项只在使用 SSH-2 时才可用。
:::
::: para
建议用户使用 SSH-2，这可使 `SSH`{.systemitem}
协议对所使用的认证和通讯的保护范围达到最大化。通过使用
`/etc/ssh/sshd_config`{.filename} 文件中的 `Protocol`{.option}
配置指令，可指定 `sshd`{.systemitem}
守护进程所支持的协议版本或是其他版本的协议。默认设置是  `2`{.literal}。
:::
##### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#idm140694712155248}密钥类型
::: para
默认情况下，`ssh-keygen`{.command} 命令会生成一对
SSH-2``{=html}RSA``{=html}
默认密钥；使用 `-t`{.option} 选项，通过指令它也可生成
``{=html}DSA``{=html} 或
``{=html}ECDSA``{=html}
密钥。``{=html}ECDSA``{=html}（Elliptic
Curve Digital Signature
Algorithm，椭圆曲线数字签名算法）在同等的密钥长度下可提供更好的操作。它也可生成较短的密钥。
:::
##### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#idm140694715900640}非默认端口
::: para
默认情况下， `sshd`{.systemitem} 守护进程会侦听 `22`{.literal}
网络端口。更改端口会减少系统受到基于自动网络扫描而造成的攻击，从而增加其安全性。通过使用
`/etc/ssh/sshd_config`{.filename} 配置文件中 `Port`{.option}
指令，可指定端口。请注意，要允许使用非默认端口，必须更改 SELinux
默认设置。通过作为 `root`{.systemitem} 输入以下指令，修改
`ssh_port_t`{.option} SELinux 类型，您可以完成此操作：
:::
``` screen
~]# semanage -a -t ssh_port_t -p tcp port_number
```
::: para
在上述命令中，用 `Port`{.option} 指令指定的新端口号代替*port_number* 。
:::
##### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#idm140694715592496}非 root 登录
::: para
如果特殊使用情况下，无需作为 `root`{.systemitem}
用户登录，那么您应该考虑在 `/etc/ssh/sshd_config`{.filename} 文件中把
`PermitRootLogin`{.option} 配置指令设置成 `no`{.literal}。通过禁止作为
`root`{.systemitem}
用户登录，管理者可以审核哪个用户作为常规用户登录后运行了什么特权命令，且之后可获取`root`{.systemitem}
权限。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_Network_Access}4.4. 安全访问网络 {.title}
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Securing_Services_With_TCP_Wrappers_and_xinetd}4.4.1. 使用 TCP Wrappers 以及 xinetd 保证服务安全 {.title}
:::
::: para
TCP （ Transmission Control Protocol，传输控制协议） Wrapper
程序不仅仅是可以拒绝对某种服务的访问。这个部分将阐明如何使用它们传送连接提示信息程序，警告存在来自某些主机的攻击，以及增强日志记录功能。关于
TCP Wrapper 功能和控制语言的信息，请参阅 `hosts_options(5)`{.filename}
手册页。关于可用的状态标志寄存器，请参阅 `xinetd.conf(5)`{.filename}
的手册页。您可将此状态标志寄存器作为选项运用于某一服务。
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Enhancing_Security_With_TCP_Wrappers-TCP_Wrappers_and_Connection_Banners}4.4.1.1. TCP Wrapper 和连接提示 {.title}
:::
::: para
在用户连接到服务时显示适当的提示可让潜在的攻击者知道已经惊动了系统管理员。您还可以控制展示给用户的信息内容。要在服务中添加
TCP Wrapper 提示，则须使用 `banner`{.option} 选项。
:::
::: para
本例使用 `vsftpd`{.command} 来执行 banner
。要启用，则须创建提示信息文件。它是在系统中随处可见，但必须与守护进程的名称保持一致。在本例中，名为
`/etc/banners/vsftpd`{.filename} 的文件含有以下命令行：
:::
``` programlisting
220-Hello, %c 
220-All Activity on ftp.example.com is logged.
220-Inappropriate use will result in your access privileges being removed.
```
::: para
`%c`{.command} 令牌提供各种客户端信息，比如用户名和主机名，或者用户名和
IP 地址，这些信息可用来生成连接，甚至造成威胁。
:::
::: para
要在连入连接显示此提示信息，则须将下列命令行添加到
`/etc/hosts.allow`{.filename} 文件：
:::
``` programlisting
vsftpd : ALL : banners /etc/banners/
```
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Enhancing_Security_With_TCP_Wrappers-TCP_Wrappers_and_Attack_Warnings}4.4.1.2. TCP Wrapper 和攻击警告 {.title}
:::
::: para
如果已经探测出某个主机或者网络正在攻击该服务器，那么通过使用
`spawn`{.command} 指令，使用 TCP Wrapper
可警示管理员关于来自该主机或者网络的后续攻击。
:::
::: para
在这个示例中，假设已经探测到来自 206.182.68.0/24
网络的破解者尝试攻击服务器。请将下列命令行放入
`/etc/hosts.deny`{.filename}
文件，以拒绝任何来自该网络的连接尝试，并将这些尝试记录在特定的文件中：
:::
``` programlisting
ALL : 206.182.68.0 : spawn /bin/echo `date` %c %d >> /var/log/intruder_alert
```
::: para
`%d`{.command} 令牌提供破解者企图访问的服务名称。
:::
::: para
要允许连接并予以记录，则须将 `spawn`{.command} 指令放入
`/etc/hosts.allow`{.filename} 文件 。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**备注**
:::
::: admonition
::: para
因为 `spawn`{.command} 指令可执行所有 shell
命令，所以最好生成一个特定脚本以提示管理员，或者在特定客户端尝试连接到服务器的事件中，执行一系列命令。
:::
:::
:::
:::
::: section
::: titlepage
### [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sect-Security_Guide-Enhancing_Security_With_TCP_Wrappers-TCP_Wrappers_and_Enhanced_Logging}4.4.1.3. TCP Wrapper 和改进的日志 {.title}
:::
::: para
如果比起其它连接类型更令人担忧，那么可使用 `severity`{.command}
选项提升该服务的日志级别。
:::
::: para
在这个示例中，假设尝试连接到 FTP 服务器 23 端口（Telnet
端口）的任何人就是破解者。要指出这一点，则须在日志文件中使用
`emerg`{.command} 标记替换默认标记 `info`{.command}，并拒绝连接。
:::
::: para
要做到这一点，则须将下列命令行放入 `/etc/hosts.deny`{.filename} ：
:::
``` programlisting
in.telnetd : ALL : severity emerg
```
::: para
这使用默认 `authpriv`{.command} 日志工具，但会将优先权从默认值
`info`{.command} 提高到
`emerg`{.command}，即将日志信息直接发送到控制台。
:::
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Verifying_Which_Ports_Are_Listening}4.4.2. 验证使用侦听的端口 {.title}
:::
::: para
应当避免打开不必要的端口，因为这会增加您系统受到攻击的可能性。如果在系统运行之后，您发现有意外打开的端口处于侦听状态，那么这可能就是入侵的迹象，应该对此进行调查。
:::
::: para
作为 root
用户，从控制台发出以下命令，以判定哪个端口正在侦听来自网络的连接：
``` screen
~]# netstat -pan -A inet,inet6 | grep -v ESTABLISHED
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address       Foreign Address     State     PID/Program name
tcp        0      0 0.0.0.0:111         0.0.0.0:*           LISTEN    1608/rpcbind
tcp        0      0 127.0.0.1:53        0.0.0.0:*           LISTEN    2581/unbound
tcp        0      0 0.0.0.0:22          0.0.0.0:*           LISTEN    2048/sshd
tcp        0      0 127.0.0.1:631       0.0.0.0:*           LISTEN    3202/cupsd
tcp        0      0 0.0.0.0:54136       0.0.0.0:*           LISTEN    2279/rpc.statd
tcp        0      0 127.0.0.1:25        0.0.0.0:*           LISTEN    2708/master
tcp        0      0 127.0.0.1:8953      0.0.0.0:*           LISTEN    2581/unbound
tcp        0      0 127.0.0.1:8955      0.0.0.0:*           LISTEN    2634/dnssec-trigger
tcp6       0      0 :::111              :::*                LISTEN    1608/rpcbind
tcp6       0      0 :::60881            :::*                LISTEN    2279/rpc.statd
tcp6       0      0 ::1:53              :::*                LISTEN    2581/unbound
tcp6       0      0 :::22               :::*                LISTEN    2048/sshd
tcp6       0      0 ::1:631             :::*                LISTEN    3202/cupsd
tcp6       0      0 ::1:25              :::*                LISTEN    2708/master
tcp6       0      0 ::1:8953            :::*                LISTEN    2581/unbound
udp        0      0 127.0.0.1:766       0.0.0.0:*                     2279/rpc.statd
udp        0      0 0.0.0.0:59186       0.0.0.0:*                     674/avahi-daemon: r
udp        0      0 0.0.0.0:33639       0.0.0.0:*                     2279/rpc.statd
udp        0      0 0.0.0.0:889         0.0.0.0:*                     1608/rpcbind
udp        0      0 127.0.0.1:53        0.0.0.0:*                     2581/unbound
udp        0      0 0.0.0.0:68          0.0.0.0:*                     2642/dhclient
udp        0      0 0.0.0.0:111         0.0.0.0:*                     1608/rpcbind
udp        0      0 0.0.0.0:46198       0.0.0.0:*                     2642/dhclient
udp        0      0 0.0.0.0:123         0.0.0.0:*                     697/chronyd
udp        0      0 0.0.0.0:5353        0.0.0.0:*                     674/avahi-daemon: r
udp        0      0 127.0.0.1:323       0.0.0.0:*                     697/chronyd
udp6       0      0 :::3885             :::*                          2642/dhclient
udp6       0      0 :::889              :::*                          1608/rpcbind
udp6       0      0 ::1:53              :::*                          2581/unbound
udp6       0      0 :::111              :::*                          1608/rpcbind
udp6       0      0 :::123              :::*                          697/chronyd
udp6       0      0 ::1:323             :::*                          697/chronyd
udp6       0      0 :::33235            :::*                          2279/rpc.statd
raw6       0      0 :::58               :::*                7         2612/NetworkManager
```
请注意，输入 `-l`{.option} 选项时，并不会显示 SCTP （ stream control
transmission protocol，流控制传输协议）服务器。
:::
::: para
查核系统所需的服务和命令的输出信息时，关闭那些非特别需要或未经授权的，再重复检查。继续执行，然后使用来自另一系统的
[**nmap**]{.application}
来进行外部检查，此系统是通过网络连接到第一个系统的。这可用于验证
[**iptables**]{.application} 的规则。扫描来自外部系统的
[**ss**]{.application} 输出信息（除了本机 127.0.0.0 或 ::1
区间）中显示的每一个 IP 地址。使用 `-6`{.literal} 选项，对 IPv6
（Internet Protocol Version
6，网际网路通讯协定第六版）地址进行扫描。更多信息，请参阅
`man nmap(1)`{.filename} 。
:::
::: para
以下示例是从另一系统的控制台发出的命令，用于判定哪个端口正在侦听 TCP
网络连接：
:::
``` screen
~]# nmap -sT -O 192.168.122.1
```
::: para
关于 `ss`{.command}，`nmap`{.command}，以及 `services`{.filename}
的更多信息，请参阅手册页。
:::
:::
::: section
::: titlepage
## [⁠]{#chap-Hardening_Your_System_with_Tools_and_Services.html#sec-Disabling_Source_Routing}4.4.3. 禁用源路由 {.title}
:::
::: para
源路由是一种互联网协议机制，可允许 IP
数据包携带地址列表的信息，以此分辨数据包沿途经过的路由器。通过某一路径时，会出现一可选项，记录为中间路径。所列出的中间路径，即"路径记录"，可提供返回至源路由路径上的目的地。这就允许源路由可指定某一路径，无论是严格的还是松散的，可忽略路径列表上的一些或全部路由器。它可允许用户恶意重定向网络流量。因此，应禁用源路由。
:::
::: para
`accept_source_route`{.option} 选项会导致网络接口接收"*严格源路由选项*"
（``{=html}SSR，Strict Source
Route``{=html}） 或"*松散源路由选项*
"（``{=html}LSR，Loose Source
Routing``{=html}） 数据包。源路由数据包的接收是由 sysctl
设置所控制。作为 root 用户，发出以下命令，丢弃 SSR 或 LSR 数据包：
:::
``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.accept_source_route=0
```
::: para
如上述所言，可能的话（禁止转发可能会干扰虚拟化技术），也应禁止数据包的转发。作为
root 用户，发出以下所列出的命令：
:::
::: para
这些命令禁止在所有界面上对 IPv4 和 IPv6 数据包进行转发。
:::
``` screen
~]# /sbin/sysctl -w net.ipv4.conf.all.forwarding=0
```
``` screen
~]# /sbin/sysctl -w net.ipv6.conf.all.forwarding=0
```
::: para
这些命令禁止在所有界面上对所有组播数据包进行转发。
:::