User: When using Ansible to automatically manage Linux servers, how to write a Playbook file to realize the file backup function?
Assistant: The following is a simple Playbook file example that implements the Linux server file backup function: ```yaml - hosts: server vars: backup_dir: /backup tasks: - name: Create backup directory file: path: "{{ backup_dir }}" state: directory mode: '0700' - name: Backup files archive: path: /path/to/files/ dest: "{{ backup_dir }}/backup-{{ ansible_date_time.date }}.tar.gz" format: gz ``` In this Playbook, we first specify the server to operate on, using the `hosts` keyword to specify `server`. Then, we define a variable called `backup_dir` for the directory where the backup files will be stored. In the `tasks` section, we first created the backup directory, used the `file` module to create the directory, and specified the permissions of the directory. Next, use the `archive` module to back up the files. The `path` parameter specifies the file path to be backed up, the `dest` parameter specifies the path and name of the backup file, and the `format` parameter specifies the compression format of the backup file. Use `{{ ansible_date_time.date }}` to dynamically generate the name of the backup file, with the date as a suffix. The above is a simple Playbook file example using Ansible to implement Linux file backup. Of course, in actual application scenarios, more complex configurations and operations can be performed as needed.