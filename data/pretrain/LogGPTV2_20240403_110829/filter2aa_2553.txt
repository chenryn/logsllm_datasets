Do you like to read? I know how to take 
over your Kindle with an e-book
Slava Makkaveev
How popular is Amazon Kindle?
10th Generation
■
Kindle Oasis
■
Kindle Paperwhite
■
Kindle
9th Generation
■
Kindle Oasis 
8th Generation
■
Kindle Oasis
■
Kindle
7th Generation
■
Kindle Voyage
■
Kindle Paperwhite
■
Kindle
6th Generation
■
Kindle Paperwhite
The 11th Generation is on the way
5th Generation
■
Kindle Paperwhite
■
Kindle
4th Generation
■
Kindle Touch
■
Kindle
3rd Generation
■
Kindle Keyboard
2nd Generation
■
Kindle DX
■
Kindle
1st Generation
■
Kindle
The easiest way to remotely reach a 
Kindle is through an e-book
How to deliver an e-book to my Kindle device?
When you are logged into your Amazon account
■
From your browser (Chrome browser extension)
■
From your desktop (PC application)
■
From your Android device (Android application)
Without authentication
■
Via USB cable
■
From your email (as an attachment) to PI:EMAIL
●
The ability to spoof was ﬁxed at the end of 2020
●
A veriﬁcation link will be sent to your Amazon account
A phishing campaign is the right way to go
Dozens of free online libraries are open to everyone
■
Kindle Store
■
Project Gutenberg
■
Open Library
■
The Online Books Page
■
The Literature Network
■
Classic Reader
■
Classic Bookshelf
■
Chest of Books
■
Fiction.us
■
PublicLiterature.org
■
Authorama
■
Bibliomania
■
International Children's 
Digital Library
...
A malware e-book can be easily uploaded
Inside the Kindle E-reader
How to research a Kindle device?
The ofﬁcial source code consists of third-party open source projects with 
small Amazon tweaks
1)
The latest ﬁrmware is available for download
2)
It is possible to Jailbreak
Kindle Touch Architecture
Linux OS
D-Bus
LIPC + app registry
Native apps
(busybox)
JRE
Booklets
Pillow
Java Apps
HTML/Javascript
Webkit
X.org
User Interface
High-level services
Low-level services / system
What Kindle components are 
responsible for parsing e-books?
The /usr/bin/scanner service
■
Periodically scans /mnt/us/documents for new ﬁles
■
Uses “extractor” libraries to extract metadata from the e-book
/var/local/appreg.db
kfx
/usr/lib/ccat/libyjextractorE.so
azw1, tpz
/usr/lib/ccat/libtopazE.so
pdf
/usr/lib/ccat/libpdfE.so
azw3
/usr/lib/ccat/libmobi8extractorE.so
azw, mbp, mobi, prc
/usr/lib/ccat/libEBridge.so
If the scanner does not match the ﬁle extension or a parsing error occurs, the 
e-book is not shown to the user
Java framework is responsible for opening the book on click
■
MobiReader-impl.jar 
■
YJReader-impl.jar
■
PDFReader-impl.jar
■
HTMLReader-impl.jar
For example, com.amazon.ebook.booklet.pdfreader.impl.PDFModel
■
TopazReader-impl.jar
■
...
/opt/amazon/ebook/lib/ 
execv
Opening a PDF ﬁle
PDFReader-impl.jar
nativeOpenPDFDocument
/usr/java/lib/
libPDFClientJNI.so
/usr/bin/
pdfreader
/usr/lib/
libFoxitWrapper.so
fork
http://127.0.0.1:7667
/command/openBook
openPDFDocumentFrom
Library
libFoxitWrapper.so
openPDFDocumentFromLibrary
Opens the PDF document
getCurrentPage
Parses the PDF page to internal structures
renderPageFromLibrary
Renders the PDF page converting it to an image. 
When called, the stream ﬁlters begin to be parsed
It is a wrapper for the Foxit PDF SDK presented by /usr/lib/libfpdfemb.so
Fuzzing PDF ﬁlters
The classic fuzzing scheme is enough
Kindle devices are based on NXP i.MX processors (ARM)
■
Predictor
■
Decrypt
■
Flate
■
Fax
■
Lzw
■
AsciiHex
■
RunLen
■
Ascii85
■
Jpeg
■
Jbig2
■
Jpx
PDF stream ﬁlters/codecs
Libfpdfemb.so supports
The Jbig2Module object
CVE-2021-30354.
Integer Overﬂow
Malformed JBIG2Globals stream
■
Image information region (width: 0x80, height: 1, stride: 0x10)
■
“Reﬁnement” region
the reﬁning 
rectangle
Width: 0
Height: 0x10
(0, 0x40000000)
height_new = height + y = 0x40000010
mem_size = (height + y) * stride = 0x100 
 (Integer Overﬂow)
Managed heap overﬂow
1) Decompress jbig2 data
2) And XOR with the heap content
3) At offset 0x1234 * 0x10 bytes
Writing through the XOR allows to bypass ASLR
Code execution in the pdfreader process
■
The data segments are Read/Write/Execute
■
The base address of the data segments is not randomized
■
Operates with the framework user rights
Our test payload /var/tmp/framework/payload.sh
Logged out:
uid=9000(framework) gid=150(javausers) groups=150(javausers)
CVE-2021-30355.
Improper Privilege Management
Patching the Application Registry
The framework user has read/write access to /var/local/appreg.db
Link a “command” entry to our payload.sh
The appmgrd service
■
Searches the registry for the app matching the argument 
■
Launches the app if found
■
Operates with the root user rights
Requesting the Application Manager to launch the app
The framework user can send a LIPC message to start an application
Our payload.sh logged out:
root: uid=0(root) gid=0(root)
Each app is responsible for lowering its own permissions at startup :-)
Demo. Remote C&C
Summary
■
How to execute malicious code hidden in an e-book (CVE-2021-30354)
■
How to gain root privileges on Kindle devices (CVE-2021-30355)
What can we do?
Own the Kindle device
■
Brick 
■
Convert to a bot
■
Attack other devices in your local network
Own the Amazon account
■
Remove or resell e-books, taking money for ourselves
What did we ﬁnd?
Thank you!
PI:EMAIL
@_cpresearch_
research.checkpoint.com