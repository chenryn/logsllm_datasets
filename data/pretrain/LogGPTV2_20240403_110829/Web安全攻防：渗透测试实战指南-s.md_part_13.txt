图4-13 访问]id=-1 union select1,2,3时页面的结果
返回的结果为2：3，意味着在union select1,2,3中，2和3的位置可以输入MySQL
语句。我们尝试在2的位置查询当前数据库名（使用databaseO函数），访问id=1union
select1,databaseO,3，页面成功返回了数据库信息，如图4-14所示。
-me /
*41 : 248>
图4-14利用Union注入获取database()
得知了数据库库名后，接下来输入以下命令查询表名。
select table_name from 1nformation_schema.tables where table_schema=sq] 1init e,1
尝试在2的位置粘贴语句，这里需要加上括号，结果如图4-15所示，页面返回了
数据库的第一个表名。如果需要看第二个表名，则修改limit中的第一位数字，例如使
用limit1,1就可以获取数据库的第二个表名，如图4-16所示。
  # 09
ps**+-R: 1
图4-15利用Union注入获取第一个表名
---
## Page 117
Web安金政防：渗造测试实践指南
图4-16利用Union注入获取第二个表名
现在，所有的表名全部查询完毕，已知库名和表名，开始查询字段名，这里以
emails表名为例，查询语句如下所示。
select colunn_nane from information_schena.colunns where table_schena=′sql′ and
table_name=ema11s 1imit 0,1;
尝试在2的位置粘贴语句，括号还是不可少，结果如图4-17所示，获取了emails
表的第一个字段名，通过使用limit1,1，获取了emails表的第二个字段名，如图4-18
所示。
 1
图4-17利用Union注入获取第一个字段名
m*i1_i4 : 31c*
Ipgrade-Dssesre-Beqserta: 1
图4-18利用Union注入获取第二个字段名
当获取了库名、表名和字段名时，就可以构造SQL语句查询数据库的数据，例如
查询字段email_id对应的数据，构造的SQL语句如下所示。
select enail_id from sql.emails 1imit 0,1;
结果如图4-19所示，页面返回了emailid的第一条数据。
---
## Page 118
第4章Web安全原理剖析
/1.
图4-19利用Union注入获取数据
4.1.5Union注入代码分析
在Union注入页面中，程序获取GET参数ID，将ID拼接到SQL语句中，在数据库
中查询参数ID对应的内容，然后将第一条查询结果中的usermame和address输出到页面，
由于是将数据输出到页面上的，所以可以利用Union语句查询其他数据，代码如下。
?php
$con=mysqli_connect("1ocalhost","root*,"123456","test");
1f (mysql1_connect_errno())
echo“连接失败：“，mysql1_connect_error（）;
[.PT.]139S-PT$
(pTs',=.PT. auaun suasn uou, × 4oatas,duoos)uanbbsAu = tnsaus
$row = mysqli_fetch_array(Sresult);
echo $row[‘username′] . *:*. $row['address'];
echo "";
?>
当访问id=1union select 1,2,3时，执行的SQL语句为：
此时SQL语句可以分为select*from users whereid=1和union select 1,2,3两条，利
用第二条语句（Union查询）就可以获取数据库中的数据。
4.1.6Boolean注入攻击
Boolean注入攻击的测试地址：htp:/www.ccctf.cn/boolean.php?id=1。
访问该网址时，页面返回yes，如图4-20所示。
---
## Page 119
100Web安全政防：渗造测试实战指南
201716-35-00 0F
图4-20访间id=1时页面的结果
在URL后添加一个单引号，再次访间，发现返回结果由yes变成no，如图4-21所示。
图4-21访间id=1时页面的结果
访问id=1'and1=1%23，id=1'and1=2%23，发现返回的结果分别是yes和no，更
改ID的值，发现返回的仍然是yes或者no，由此可判断，页面只返回yes或no，而没有
返回数据库中的数据，所以此处不可使用Union注入。此处可以尝试利用Boolean注入，
Boolean注入是指构造SQL判断语句，通过查看页面的返回结果来推测哪些SQL判断
条件是成立的，以此获取数据库中的数据。我们先判断数据库名的长度，语句如下
所示。
and 1ength(database())>=1-*+
有单引号，所以需要注释符来注释。1的位置上可以是任意数字，如”andlength
（database()>=3--+和'andlength（database(）>=4--+，我们可以构造这样的语句，然后观
察页面的返回结果，如图4-22~图4-24所示。
(-m
lpgrede-ine
re-leqoerte1 1
图4-22判断数据库库名的长度（1）
f-6-14
re-deperte: :
图4-23判断数据库库名的长度（2）
---
## Page 120
第4章Web安全原理剖析101
 sse9t c1e sg 1eg 9
9y-_782/3.4.31
图4-24判断数据库库名的长度（3）
然后可以发现当数值为3时，返回的结果是yes：而当数值为4时，返回的结果是
no。整个语句的意思是，数据库库名的长度大于等于3，结果为yes；大于等于4，结
果为mo，由此判断出数据库库名的长度为3。
接着，使用逐字符判断的方式获取数据库库名。数据库库名的范围一般在a~Z、
0~9之内，可能还有一些特殊字符，这里的字母不区分大小写。逐字符判断的SQL语
句为：
*and substr(database(),1,1)=′t'--+
substr是截取的意思，其意思是截取databaseO的值，从第一个字符开始，每次只
返回一个。
substr的用法跟limit的有区别，需要注意。limit是从o开始排序，面这里是从1开
始排序。可以使用Burp的爆破功能爆破其中的r值，如图4-25所示，发现当值是s时，
页面返回yes，其他值均返回no，因此判断数据库库名的第一位为s，如图4-26所示。
图4-25利用substr判断数据库的库名
---
## Page 121
102Web安全攻防：渗遗测试实战指南
200
178
12
200
200
178
178
XH
Mest-fypei
Tes
图4-26利用Burp爆破数据库库名
其实还可以使用ASCII码的字符进行查询，s的ASCII码是115，而在MySQL中，
ASCII转换的函数为ord，则逐字符判断的SQL语句应改为如下所示。
and ord(substr(database(),1,1))=115--+
结果如图4-27所示，返回的结果是ye，
图4-27利用ord判断数据库库名
从Union注入中我们已经知道，数据库名是'sql，因此判断第二位字母是否是q
可以使用以下语句。
and substr(database(),2,1)-'q-*+
结果如图4-28所示，返回的结果是yes：
---
## Page 122
第4章Web安全原理剖析1103
 0s x 10-12: rv:53.4)
-
T#
图4-28利用substr判断数据库的库名
查询表名、字段名的语句也应粘贴在databaseO的位置，从Union注入中已经知道
数据库'sqlr的第一个表名是emails，第一个字母应当是e，判断语句如下所示。
‘ and substr((select table_name from Information_schena.tables where
table_schena=*sql′ 1imit 0,1),1,1)=′e′--+
结果如图4-29所示，我们的结论是正确的，依此类推，就可以查询出所有的表名
与字段名。
 1
图4-29利用substr判断数据库的表名
4.1.7
Boolean注入代码分析
在Boolean注入页面中程序先获取GET参数ID，通过preg_match判断其中是否存
在union/sleep/benchmark等危险字符。然后将参数ID拼接到SQL语句，从数据库中查
询，如果有结果，则返回yes，否则返回no。当访问该页面时，代码根据数据库查询
结果返回yes或no，而不返回数据库中的任何数据，所以页面上只会显示yes或no，代
码如下所示。
输入usermame=1时，SQL语句为select*from users whereusermame=1°。执行时，
会因为多了一个单引号而报错。利用这种错误回显，我们可以通过floorO、updatexml0
等函数将要查询的内容输出到页面上。
---
## Page 126
第4章Web安全原理剖析107
4.2
SQL注入进阶
4.2.1时间注入攻击
时间注入攻击的测试地址：http://ccctf.cn/sql/time/time.php?id=1。
访问该网址时，页面返回yes，在网址的后面加上一个单引号，再次访问，页面
返回no。这个结果与Boolean注入非常相似，本小节将介绍遇到这种情况时的另外一
种注入方法—时间盲注。它与Boolean注入的不同之处在于，时间注入是利用sleepO
或benchmarkO等函数让MySQL的执行时间变长。时间盲注多与IF（exprl,expr2,expr3）
结合使用，此if语句含义是：如果exprl是TRUE，则IFO的返回值为expr2：否则返回
值则为expr3。所以判断数据库库名长度的语句应为：
1f (length(database())>1,sleep(5),1)
上面这行语句的意思是，如果数据库库名的长度大于1，则MySQL查询休眠5秒，
否则查询1。
而查询1的结果，大约只有几十毫秒，根据BurpSuite中页面的响应时间，可以判
断条件是否正确，结果如图4-35所示。
图4-35利用时间盲注执行sleep()
---
## Page 127
108Web安全攻防：渗造测试实战指南
可以看出，页面的响应时间是5267毫秒，也就是5.267秒，表明页面成功执行了
sleep(5），所以长度是大于1的，我们尝试将判断数据库库名长度语句中的长度改为10，
结果如图4-36所示。
图4-36利用时间盲注执行select1
可以看出，执行的时间是0.404秒，表明页面没有执行sleep（5），面是执行了select
1，所以数据库的库名长度大于10是错误的。通过多次测试，就可以得到数据库库名
的长度。得出数据库库名长度后，我们开始查询数据库库名的第一位字母。查询语
句跟Boolean盲注的类似，使用substr函数，这时的语句应修改为：
1f(substr(database(),1,1)='s',sleep(5),1)
结果如图4-37所示。
---
## Page 128
第4章Web安全原理划析4109
图4-37利用时间盲注获取库名
可以看出，程序延迟了5秒才返回，说明数据库库名的第一位字母是s，依此类推
即可得出完整的数据库的库名、表名、字段名和具体数据。
4.2.2时间注入代码分析
在时间注意注入页面中，程序获取GET参数ID，通过preg_match判断参数ID中是
否存在Union危险字符，然后将参数ID拼接到SQL语句中。从数据库中查询SQL语句，
如果有结果，则返回yes，否则返回no。当访间该页面时，代码根据数据库查询结果
返回yes或no，而不返回数据库中的任何数据，所以页面上只会显示yes或no，和
Boolean注入不同的是，此处没有过滤sleep等字符，代码如下所示。
ou）xa
---
## Page 129
110Web安全攻防：渗遗测试实战指南
(..*Ps..PT. auaun sjasn wous 。satas_uoos)fuanbrbsfu = tnsas