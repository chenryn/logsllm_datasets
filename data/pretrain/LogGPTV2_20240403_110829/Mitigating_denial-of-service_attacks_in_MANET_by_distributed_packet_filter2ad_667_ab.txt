pected not to receive any attack packet. Network band-
width will also be largely protected. However, verifying
every packet at every forwarder causes unnecessarily high
loads at the forwarders, especially when a large fraction of
the packets is legitimate.
To reduce the costs of veriﬁcation, without severely com-
promising its eﬀectiveness, a forwarder may decide to prob-
abilistically verify a packet. Since nodes are selﬁsh, we need
to incentivize them to verify with suﬃciently high probabil-
ities.
2.2
Incentives and game rationality
We apply a reward system in which nodes are given credit
for acting as forwarders. Speciﬁcally, a forwarder is credited
for forwarding a packet if the packet successfully arrives at
the destination.
We assume the existence of an accounting system, sim-
ilar to a “central bank”, for securely keeping track of the
rewards, and preventing cheating in claiming false rewards.
In our DoS mitigation approach, the signed MAC of each for-
warded packet is stored at the forwarder. The stored MACs
can be presented to the accounting system as evidence for
collecting rewards.
In the DoS resilient forwarding game, a node’s payoﬀ is the
reward for forwarding minus the forwarding costs. The costs
account for all expended resources in the forwarding, such
as the energy consumed for packet receive and transmission,
and for performing any required cryptographic operation.
In the DoS defense, forwarders verify the MACs of re-
ceived packets. A selﬁsh forwarder may try to maximize its
payoﬀ by not verifying, but rely on another forwarder on the
packet’s route to verify and accomplish the job of ﬁltering
out any attack packet. Clearly, if every forwarder reasons
in the same way and avoids all veriﬁcation, then all attack
packets will be allowed to reach their destinations. To avoid
the degeneration of the DoS defense into a system in which
no veriﬁcation is performed at all, a forwarder is punished
for forwarding a bad packet that successfully makes it to
the destination. Hence, if a forwarder presents the MAC of
a bad packet in claiming its reward, a penalty instead of a
reward will be given. The penalty subtracts from the node’s
total credit for forwarding other good packets.
We formulate the DoS resilient packet forwarding sys-
tem as a multiplayer game between forwarder nodes in a
MANET. Forwarder nodes take part in the same game if
they are on the same route between a sender and receiver.
Since routes in a MANET can be highly dynamic, the set
of nodes playing against each other can change often. As
discussed, a player’s payoﬀ in the game is its reward for
forwarding the good packets, less its penalty for forwarding
the bad packets and its costs of forwarding and veriﬁcation.
A player’s strategy is its probability of verifying a received
packet. The player’s strategy may be adaptive so that the
probability of veriﬁcation may change over time.
2.3 Game Formulation: Reward, cost, and penalty
A forwarder may perform the following operations: (1)
forwarding a packet without veriﬁcation, (2) verifying and
forwarding a legitimate packet, and (3) verifying and drop-
ping a bad packet. Let G be the reward for a forwarder if it
has forwarded a legitimate packet, and the packet is success-
fully delivered to the destination. Let Cp be the penalty for
a forwarder if it has forwarded a bad packet without veriﬁca-
tion, and the packet reaches its destination. Let cr, ct, and
cv be the costs for packet receive, transmit, and signature
veriﬁcation, respectively.
When a forwarder forwards a legitimate packet, its pay-
oﬀs are g1 = G − cr − ct and g2 = G − cr − ct − cv for the
Hashed and signedMACTimestampnumberSequenceDestinationaddressPreviousDataaddressSourcehopNexthopcases of veriﬁcation and no veriﬁcation, respectively.
If a
forwarder veriﬁes a bad packet and then drops it, the for-
warder has a payoﬀ of g3 = −(cr + cv). If a forwarder for-
wards a bad packet without veriﬁcation, its payoﬀ is either
(1) g4 = −(cr + ct), if the packet is veriﬁed and dropped by
a forwarder later in the route, or (2) g5 = −Cp − cr − ct, if
the packet ﬁnally arrives at the destination.
2.4
n-player game
In formulating the n player game, we assume that each
forwarder on a network path knows that the path has n
hops. However, a forwarder does not know its position on
the path; i.e., it does not know how many hops it is away
from the source or the destination. In the game, each for-
warder plays against the other n − 1 forwarders. Since all
the forwarders know the same information, they are treated
as homogeneous and hence will use the same strategy.
We denote patt as the probability that a packet is an at-
tacking packet. We assume that upon receiving a packet,
a forwarder veriﬁes the packet with probability pv. Nash
equilibrium will be reached only if under pv, the expected
payoﬀ for the forwarder remains the same whether it veriﬁes
the packet or not. Mathematically, the relationship can be
given as follows:
(1 − patt)g2 + pattg3 = (1 − patt)g1 +
patt((1 − pv)n−1g5 + (1 − (1 − pv)n−1)g4).
(1)
The left hand side is the expected payoﬀ when the for-
warder veriﬁes the packet. The right hand side is the ex-
pected payoﬀ when it does not verify the packet, while the
remaining forwarders will verify with probability pv. The
number of forwarders on the path is n. Based on Eqn. (1),
pv can be calculated as
1
n−1
)
(2)
pv = 1 − (
(1 − patt)(g2 − g1) + patt(g3 − g4)
patt(g5 − g4)
The expected payoﬀ of a player in this game can be cal-
culated as
G = (1 − patt)g2 + pattg3.
(3)
Notice that the expected payoﬀ of each forwarder is the
same as the expected payoﬀ if the forwarder veriﬁes every
packet. However, under the proposed game, a forwarder
obtains the same gain with less consumed resources because
the payoﬀ deduction is partially caused by the penalty. This
keeps the forwarders operational in the network for a longer
time, by conserving nodal resources.
2.5 Analytical Results
In Fig. 2 we show the payoﬀs at a forwarder, and in Fig. 3,
we show the probability that an attacking packet can reach
the destination. For comparison, we also show the cases
when the optimum strategy is used under the assumption
that nodes are collaborative, and when the worst strategy is
used under the assumption that a node just forwards packets
without doing anything. The results indicate that the game-
theoretic approach can successfully mitigate DoS attacks.
3. CONCLUSIONS
We have proposed a signature-based DoS mitigation sys-
tem for mobile ad hoc networks. The system deﬁnes a game
in which forwarders will probabilistically verify packets re-
ceived for forwarding, and hence will have a chance to drop
Figure 2: Payoﬀs at Nash equilibria.
Figure 3: Probabilities of a successful attack.
bad packets sent by attackers. We have formulated diﬀer-
ent forms of the game for diﬀerent network scenarios, and
analyzed the corresponding payoﬀ, eﬀectiveness, and Nash
equilibrium properties. We have showed that the games can
induce useful DoS mitigation eﬀects. It is also shown that
key game parameters, such as the penalty for forwarding a
bad packet without veriﬁcation, can aﬀect the probability
that a node will verify a received packet.
4. REFERENCES
[1] S. Buchegger and J.-Y. L. Boudec. Performance
analysis of the conﬁdant protocol. In MobiHoc ’02:
Proceedings of the 3rd ACM international symposium
on Mobile ad hoc networking & computing, 2002.
[2] L. Buttyan and J. Hubaux. Nuglets: a virtual currency
to stimulate cooperation in self-organized ad hoc
networks. In Technical report, EPFL, 2001.
[3] Y.-C. Hu, D. B. Johnson, and A. Perrig. Ariadne: A
secure on-demand routing protocol for ad hoc networks.
In Proceedings of Mobicom, 2002.
[4] J. Kong, P. Zerfos, H. Luo, S. Lu, and L. Zhang.
Providing robust and ubiquitous security support for
mobile ad-hoc networks. In Proceedings of ICNP, 2001.
0.10.150.20.250.3−8−6−4−2024681012Probability of an Attacking Packet (patt)GainsGain at optimum strategyGain at Nash EquilbriaGain when doing nothing0.10.150.20.250.300.050.10.150.20.250.3Probability of an Attacking Packet (patt)Probability of a successful attackProbability when doing nothingProbability at Nash equilibriaProbability at optimumstrategy