### Your question
Why does the base url not get picked up?  
playwirght.config.ts
    import { PlaywrightTestConfig } from '@playwright/test';
    const config: PlaywrightTestConfig = {
      timeout: 30000,
      globalTimeout: 600000,
      workers: 2,
      projects: [
        {
          name: "chrome",
          use: {
            headless: false,
            baseURL: 'http://dev.getmyboat.com/',
            channel: 'chrome',
            viewport: { width: 1280, height: 720 },
            ignoreHTTPSErrors: false,
            video: 'on-first-retry',
            screenshot: 'only-on-failure'
          }
        }
      ],
      reporter: [["dot"], ["json", { outputFile: "test-result.json" }],
      ['experimental-allure-playwright']],
      // globalSetup: require.resolve('./global-setup'),
    };
    export default config;
test
    import { test, Browser, BrowserContext } from "@playwright/test"
    import registerPage from '../Pages/registerPage';
    import {getOwnerToken, getRenterToken} from "../../utils/authUtils"
    declare const browser: Browser
    test.describe("Register New User", async () => {
        let context: BrowserContext;
        test("@smoke1 C613 Validate user is able to Register/Create account", async ({ browser }) => {
            context = await browser.newContext({
                storageState: "cookies/banner.json"
            });
            const page = await context.newPage();
            await page.goto('/s/auth/register');
            const regPage = new registerPage(page);
            await regPage.registerUser()
            await regPage.clickCreateAccount()
            await regPage.clickAccept()
            await page.waitForNavigation({
                url: 'http://dev.getmyboat.com/'
            })
        });
        test.afterAll(async ({ browser }) => {
            await browser.close();
        })
        test.afterEach(async ({ context }) => {
            await context.close();
        })
    });
results
        page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
        =========================== logs ===========================
        navigating to "/s/auth/register", waiting until "load"
        ============================================================
          12 |         });
          13 |         const page = await context.newPage();
        > 14 |         await page.goto('/s/auth/register');
             |                    ^
          15 |         const regPage = new registerPage(page);
          16 |         await regPage.registerUser()
          17 |         await regPage.clickCreateAccount()