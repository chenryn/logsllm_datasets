# 修改文件并插入如下一行内容
# 检查文件系统的挂载情况

---
## Page 79
### 创建和管理 LVM 卷组及逻辑卷
- 使用 `pvcreate` 命令初始化物理卷。创建完成后，可以分别使用 `pvdisplay`, `vgdisplay`, 和 `lvdisplay` 查看效果。
- 将多个物理卷组合成一个卷组的命令是 `vgcreate`。
- 从已有的卷组中提取容量来创建逻辑卷的命令是 `lvcreate`。

#### 示例
1. **pvcreate**
   - 用法：`pvcreate [选项] 物理卷 [物理卷..]`
   - 描述：初始化指定的物理设备以供LVM使用。
   - 示例：
     ```bash
     [root@centos6 ~]# pvcreate /dev/sdb{1,2,3}
     [root@centos6 ~]# pvcreate /dev/sdc4 /dev/sde
     ```

2. **vgcreate**
   - 用法：`vgcreate [选项] 卷组名称 物理设备路径 [物理设备路径..]`
   - 描述：根据提供的物理卷列表创建一个新的卷组。
   - 示例：
     ```bash
     [root@centos6 ~]# vgcreate test_vg2 -s 16M /dev/sdc5 /dev/sdc6
     [root@centos6 ~]# vgcreate test_vg1 /dev/sdb5 /dev/sdb6
     ```

图2-5展示了LVM的整体概念示意图。
![](图2-5 LVM概念示意图)

---

## Page 80
### LVM 分区实例
这里我们利用一块500GB的硬盘（/dev/sdb）创建四个各为100GB大小的分区，并基于这些分区构建一个名为 `test_vg` 的卷组，最后从该卷组中创建两个分别为120GB大小的逻辑卷，命名为 `test_web` 和 `test_data`。

1. **使用 fdisk 创建分区**
   ```bash
   [root@centos6 ~]# fdisk /dev/sdb
   Command (m for help): n
   Partition type:
    p primary (0 primary, 0 extended, 4 free)
    e extended
   Select (default p):
   Partition number (1-4, default 1):
   First sector (2048-1048575999, default 2048):
   Last sector, +sectors or +size{K,M,G} (2048-1048575999, default 1048575999): +100G
   ```
   对其他三个分区重复上述步骤。

2. **将分区转换为物理卷**
   ```bash
   [root@centos6 ~]# pvcreate /dev/sdb{1,2,3,5}
   [root@centos6 ~]# pvdisplay
   ```

3. **创建卷组**
   ```bash
   [root@centos6 ~]# vgcreate test_vg /dev/sdb{1,2,3,5}
   [root@centos6 ~]# vgdisplay
   ```

---

## Page 81
### 创建逻辑卷
- 使用 `lvcreate` 在现有卷组内创建新的逻辑卷。
- `-n` 参数用于指定新逻辑卷的名称；`-L` 直接定义逻辑卷的大小，单位可以是 B, S, K, M, G, T 或 P；`-l` 则允许通过指定PE数量间接设定逻辑卷大小。

#### 示例
```bash
[root@centos6 ~]# lvcreate -L 2G -n test_lv1 test_vg1
```

---

## Page 82
### 格式化与挂载
- 一旦逻辑卷被创建出来，接下来就需要对其进行格式化并挂载到系统中的某个目录下。

#### 示例
```bash
[root@centos6 ~]# mkfs.ext4 /dev/test_vg/test_web
[root@centos6 ~]# mount /dev/test_vg/test_web /test/web
[root@centos6 ~]# df -h
```

为了使更改永久生效，还需更新 `/etc/fstab` 文件：
```plaintext
/dev/test_vg/test_web  /test/web  ext4  defaults  0  0
```

---

## Page 83 & 84
### 扩展逻辑卷
当现有的逻辑卷空间不足时，可以通过以下步骤扩展其容量：

1. 如果当前卷组有足够的空闲PE，则直接使用 `lvextend` 增加逻辑卷大小。
2. 当卷组没有足够剩余空间时，首先需要向卷组添加新的物理卷，再执行扩展操作。
3. 最后，使用 `resize2fs` 更新文件系统大小以反映逻辑卷的变化。

#### 示例
假设要将 `test_data` 逻辑卷扩展至360GB：
```bash
[root@centos6 ~]# lvextend -L 360G /dev/test_vg/test_data
[root@centos6 ~]# resize2fs /dev/test_vg/test_data
```

以上即为使用LVM管理存储资源的基本流程。