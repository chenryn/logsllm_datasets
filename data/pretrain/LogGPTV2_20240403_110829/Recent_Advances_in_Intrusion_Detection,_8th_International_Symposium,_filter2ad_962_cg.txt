False negatives may arise if an attacker forges a frame that appears as a nor-
mal out-of-order frame transmitted immediately after a beacon/probe response
frame. However, this attack is relatively easy to detect as the monitor node can
compare the attack frame with the frame with the same sequence number to
determine whether one is a duplicate of the other.
Abnormal Sequence Number Advance. If the current frame is abnormal
advance, whether there are false positives or negatives depend on the veriﬁcation
process. During the veriﬁcation process, if next SN is “smaller” than current SN,
the algorithm concludes that the current frame is a spoofed frame. This decision
logic could generate false positives when frames are transmitted out of order.
However, the false positive rate is expected to be very small because all out-of-
order frames are due to beacon/probe response and thus only frames from an
AP that are sent together with a beacon/probe response frame can lead to a
false positive.
If the proposed algorithm cannot conclude that the victim STA is not being
spoofed in the veriﬁcation period, it will not raise alarm. Therefore, if the vic-
tim STA’s frames are all lost or delayed, false negatives may arise because the
monitor node has no way to check whether the victim STA is being spoofed.
Fundamental Limitation. The proposed sequence number-based spoof detec-
tion algorithm has one fundamental limitation: It requires the victim node to
be in the same wireless network as the attacker node, so that it can use ARP
request/response to obtain the most up-to-date value of the victim node’s se-
quence number. Therefore, if an attacker spoofs a legitimate STA/AP that does
not exist in the current wireless network, the proposed algorithm cannot detect
this spooﬁng attack, as it is not possible to synchronize sequence numbers or
perform veriﬁcation checks. Fortunately, most of the spooﬁng attacks require
both the victim node and the attacker node to be present in the same wireless
network simultaneously.
322
F. Guo and T.-c. Chiueh
5 Evaluation
5.1 Testbed Setup
The testbed consists of one AP, one victim STA, one attacker STA and one
monitor node. The monitor node is co-located with the AP so as to receive all
the frames that the AP sends and receives. It has two WLAN interfaces: one is
running in RF monitoring mode to capture frames and the other is running in
managed (station) mode to probe a STA when it is put in the veriﬁcation state.
The monitor node runs the proposed spoof detection algorithm. One implemen-
tation issue is how to probe an STA to obtain its current sequence number when
frames travelling on the underlying WLAN are encrypted using WEP, and the
monitor node does not share any key with the underlying WLAN. To probe an
STA, the monitor node uses ARP requests. Even if WEP is enabled, the monitor
node does not have to know the WEP key to send an ARP request to the target
STA, as it can just replay previously captured ARP requests to the target STA.
The monitor node learns which frame is ARP request by examining ARP frame’s
special frame size and request/reply pattern.
The attacker STA runs Linux 2.4.20 with the hostap [20] driver. It can spoof
frames as an AP or a victim STA. The victim STA runs Linux 2.4.20 or Windows
XP. We tested 7 diﬀerent WLAN NICs for victim STA and 2 diﬀerent APs.
The 7 diﬀerent WLAN NICs are Lucent IEEE 802.11 WaveLAN silver PC card,
Orinoco Gold PC card, Cisco AIRONET 350 series PC card, Linksys WPC 11 PC
card, Netgear WAG311 802.11a/g PCI adapter, Netgear MA311 PCI adapter,
and Orinoco 802.11abg PCI adapter. The two diﬀerent APs are Linksys WAP11
and Orinoco BG-2000.
5.2 False Positive Test
From the attack analysis in Section 4.4, the proposed algorithm can generate
false positives in the following two scenarios: (1) when normal data frames from
the same STA can arrive out of order, and (2) when the sequence number for
a node wraps around once every four consecutive sequence numbers. To test if
these two scenarios actually appear in commercial WLAN devices, we tested 7
diﬀerent WLAN NICs and 2 diﬀerent APs. For each NIC and AP combination,
a STA downloads a 89-Mbytes ﬁle via a web browser. The 4 PC-card NICs are
installed on a notebook that is far away from the AP. The 3 PCI adapter NICs
are installed on a desktop computer located close to the AP.
Out-of-Order Data Frame Arrival. In all the tests, none of the 7 WLAN
interfaces transmits frames out of order, and none of the 2 APs transmit out-
of-order frames that are not due to beacon/probe response. As a result, the
proposed spoof detection algorithm generates no false positives in all these tests.
When an WLAN interface is placed far away from the AP, as in the case
of Figure 5, the inter-frame sequence number gap occasionally is larger than 2,
because the monitor may fail to receive some of the frames from the WLAN
interface. This in return puts the receiving STA in the veriﬁcation state. In the
Sequence Number-Based MAC Address Spoof Detection
323
1000
p
a
G
r
e
b
m
u
N
e
c
n
e
q
e
S
100
10
1
0
10000
20000
Frame Index
30000
Fig. 5. The inter-frame sequence number gaps for Cisco’s PC-card WLAN interface.
This NIC is placed far away from AP, so the monitor node experiences many frame
losses. However, with the help of the veriﬁcation process, these frame losses do not lead
to any false positive.
veriﬁcation process, since the algorithm freezes last SN, if subsequent sequence
numbers are large than current SN, the inter-frame sequence number gap should
increase, as indicated by the vertical lines in the ﬁgures. During veriﬁcation
period, there is no sequence number smaller than current SN. Thus false positive
is eliminated.
Short Sequence Number Wrap-Around. Normally the sequence number
of a STA only wraps around after reaching 4095, as speciﬁed in the IEEE802.11
standard. From our experiments, all WLAN interfaces except the Cisco NIC
wrap around after reaching 4095. The Cisco NIC wraps around after reaching
2047, as shown in Figure 5. As a result, around every 2000 frames, the inter-
frame sequence number gap becomes 2049. Despite this abnormal wrap-around,
the proposed algorithm does not generate false positives, because this abnormal
wrap-around is only treated as abnormal sequence number advance and triggers
a veriﬁcation process. In the veriﬁcation process, the algorithm ﬁnds out that all
subsequent sequence numbers are not “smaller” than the current sequence num-
ber, and so eventually the abnormal wrap-around does not cause false positives.
It is unlikely that a STA’s sequence number can wrap around every 4 con-
secutive frames in normal operation. However, when a WLAN NIC is reset re-
peatedly, short wrap-around may happen. We tested 7 diﬀerent WLAN NICs.
After an NIC is reset, it will start active probing in all channels. The monitor
node normally will receive 2 probe requests with a sequence number of 5 and 8
in its monitored channel. Then it receives authentication and association with
a sequence number of 12 and 13 respectively. During repeated resetting, the se-
quence number will wrap around after 13. But since the sequence numbers are
not consecutive, they won’t fall into the duplicate range, and so there is no false
324
F. Guo and T.-c. Chiueh
positive in this case. For APs, the beacon interval is normally 100 msec. When
the AP is reset, the sequence number of beacons already exceeds 4.
In summary, in all of our tests, the proposed spoof detection algorithm never
generates false positives, because in actual WLAN traﬃc no frames arrive out
of order when they follow a normal data frame, and no STA/AP wraps around
its sequence number every 4 consecutive sequence numbers.
5.3 False Negative Test
Based on the analysis in Section 4.4, an attacker can evade the detection of
the proposed algorithm (1) when she can forge an out-of-order frame from the
AP and the original frame is lost, (2) when she can simulate the victim STA’s
sequence number while it is inactive, or (3) when the monitor node cannot
receive any probe responses from the victim node during the entire veriﬁcation
time period. Each of these three cases is examined more closely next.
Out-of-Order Frames from the AP. In this case, the AP sends a data
frame followed by a beacon/probe response frame but the data frame is lost,
and the attacker forges a frame with the same sequence number as the lost data
frame. At this point, to the monitor node, the current frame is the beacon/probe
response frame, the forged frame falls into the duplicate range of current SN,
and it does not have a copy of the lost frame to verify the content of this out-
of-order spoofed frame. So the spooﬁng goes undetected. This attack can only
spoof frames from the AP, and requires the AP to lose a data frame that is sent
before a beacon/robe response frame, and the attacker to be able to observe
and react to such event fast enough before the AP transmits new frames. Given
the stringent timing requirement of this attack, it is unlikely that attackers can
successfully exploit this false negative.
To measure the probability of this false negative in actual WLAN traﬃc, we
collected frame traces when an STA downloads a 89-Mbyte ﬁle through the AP.
The STA downloaded the ﬁle 2 times when it is close to the AP and another 2
Table 2. Percentage of frames that are sent before a beacon or probe response frame
and eventually lost when downloading a 89-Mbyte ﬁle. These represent the upper bound
for the type of false negatives in which an attacker forges an out-of-order frame from
the AP.
STA Loca-
tion
AP
Frames
Far
Far
Near
Near
87,764
86,816
63,799
65,013
Frames
Lost Be-
fore Bea-
con/Probe
Response
32
21
19
20
False Neg-
ative Per-
centage
0.036%
0.024%
0.029%
0.031%
Sequence Number-Based MAC Address Spoof Detection
325
times when it is far away from the AP. The results are in Table 2. When the
downloading STA is far away from the AP, the monitor node captures more
frames as more frames are retransmitted.
From the frame traces, we counted the number of instances in which AP’s
frame is lost before a beacon/robe response frame. Only these frames can poten-
tially lead to this type of false negatives. As shown in Table 2, regardless of the
location of the downloading STA, the percentage of lost frames whose sequence
number is in the duplicate range of a beacon/robe response frame remains con-
sistently low, under 0.03%. Because this percentage is almost negligible and the
timing requirement for successful exploit is so stringent, we believe this type of
false negative will not be a threat in practice.
Simulating Victim STA’s Sequence Number. In this case, an attacker
simulates the victim STA’s sequence number when the victim is inactive, and
eventually misleads the monitor node into thinking that subsequent frames from
the victim are actually spoofed frames. To demonstrate this attack, we need a
way to manipulate an IEEE 802.11 frame’s sequence number without modifying
the ﬁrmware on the WLAN NIC. We used the following procedure to mount this
attack. First we monitor the victim STA’s sequence number, then we transmit a
suﬃcient number of frames from the attacker NIC so that its current sequence
number is the same as the victim’s. Next we change the attacker NIC’s MAC
Table 3. The frame trace that shows how an attacker correctly simulates a victim’s
sequence number while it is inactive. Although the current algorithm can eventually
detect the spooﬁng activity, it cannot detect all the spoofed frames in real time.
Frame Attacker Victim Gap
Index Frame SN Frame SN
1
2
3
4
5
6
7
8
9
10
11
12
13
14
22
23
24
25
26
27
28
29
30
31
32
21
1
1
1
1
1
1
1
1
22
23
4089
4090
1
1
1
326
F. Guo and T.-c. Chiueh
address to be the same as the victim’s and ﬁnally transmit a series of spoofed
frames, which to the monitor node are as real as those from the victim STA.
Table 3 shows the sequence number trace of this attack scenario.
In the beginning, the victim’s current sequence number is 21. From frame 2
to frame 9, the attacker simulates the sequence numbers of the victim and sends
spoofed frames without being detected. To speed up the test, the monitor node
sends out a periodic probing every 10 frames. So frame 10 is triggered by the
probing and is a probe response from the victim with a sequence number of
22. At this point, the inter-frame sequence number gap is 4089, which triggers
the veriﬁcation process. So frame 11 is again a probe response from the victim.
But since our sequence number baseline is already tricked as 29 by the attacker,
frame 11 looks normal in the veriﬁcation process because its gap is 4090 and
is bigger than 4089. Fortunately, frame 12 from attacker indeed reveals that its
gap is “smaller” than frame 10’s gap and raises a spooﬁng alarm.
In the above test, the proposed algorithm will not report the attacker’s frames
as spoofed frames. Instead, it will label the victim’s frames (frame 10 and 11)
as spoofed frames because the detection algorithm is tricked into believing that
the attacker’s sequence number is the victim’s current sequence number.
To successfully exploit this type of false negative, an attacker needs to con-
stantly monitor the victim’s sequence number, and needs to have a way to change
its sequence number state to be the same as the victim’s before the latter changes.
If the victim is inactive, the attacker’s spoofed frames will not get caught until
the monitor node starts probing the victim. So in the current design, the spoof-
ing will be caught within 2000 frames, in the worst case. If the victim is active,
each frame the victim sends will expose the attacker’s spooﬁng attempt. In this
false negative, not every frame can be detected. But as soon as the victim node
becomes active, the spooﬁng activity will be detected.
If the spoofed frames are data frames, this false negative does not pose a
serious threat as long as the spooﬁng activity is eventually detected. However,
for management or control frames such as deauthentication and disassociation,
delayed detection of spooﬁng is undesirable. Our current solution to this problem
is to double-check the validity of the sequence number of every sensitive manage-
ment frame so that spoof detection of these types of frames is in real time even
if the attacker can correctly simulates the victim’s sequence number. Because
the number of sensitive management frames is small in real WLAN traﬃc, the
performance impact of additional checking is small.
No Probe Response During Veriﬁcation Period. If the monitor node does
not receive any response from the victim during the veriﬁcation period, it will
terminate the veriﬁcation process and no spooﬁng alert will be raised. Therefore,
the algorithm relies on that the victim node can respond to probes, which are
in the form of ARP request/response, before the veriﬁcation period ends.
The ARP request/response round-trip time is tested on both idle channels
and fully loaded channels. We sent ARP requests from the monitor node to the
victim every one second. When the channel is idle, the round-trip time for an
ARP probe is only around 3 msec. When channel is fully loaded, the ARP probe
Sequence Number-Based MAC Address Spoof Detection
327
round-trip time increases to around 100 msec. However, during the whole test,
regardless of whether the channel is idle or busy, no ARP responses are lost.