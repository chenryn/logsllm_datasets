title:"Mix-in-Place" anonymous networking using secure function evaluation
author:Nilesh Nipane and
Italo Dacosta and
Patrick Traynor
“Mix-In-Place” Anonymous Networking Using
Secure Function Evaluation
Nilesh Nipane, Italo Dacosta and Patrick Traynor
Converging Infrastructure Security (CISEC) Laboratory
Georgia Tech Information Security Center (GTISC)
Georgia Institute of Technology
{nnipane3, idacosta, traynor}@cc.gatech.edu
ABSTRACT
Anonymous communications systems generally trade off perfor-
mance for strong cryptographic guarantees of privacy. However,
a number of applications with moderate performance requirements
(e.g., chat) may require both properties. In this paper, we develop
a new architecture that provides provably unlinkable and efﬁcient
communications using a single intermediary node. Nodes partici-
pating in these Mix-In-Place Networks (MIPNets) exchange mes-
sages through a mailbox in an Oblivious Proxy (OP). Clients lever-
age Secure Function Evaluation (SFE) to send and receive their
messages from the OP while blindly but reversibly modifying the
appearance of all other messages (i.e., mixing in place) in the mail-
box. While an Oblivious Proxy will know that a client participated
in exchanges, it can not be certain which, if any, messages that
client transmitted or received. We implement and measure our pro-
posed design using a modiﬁed version of Fairplay and note reduc-
tions in execution times of greater than 98% over the naïve applica-
tion of garbled circuits. We then develop a chat application on top
of the MIPNet architecture and demonstrate its practical use for as
many as 100 concurrent users. Our results demonstrate the poten-
tial to use SFE-enabled “mixing” in a single proxy as a means of
providing provable deniability for applications with near real-time
performance requirements.
1.
INTRODUCTION
The lack of privacy on the Internet is well documented. Whether
by neighbors [55], ISPs [60], advertisers [65] or governments [54],
most online communications are easily observable by parties other
than the source and intended destination. Unfortunately, the use of
encryption is often not enough to guarantee privacy or anonymity.
Simply knowing that two endpoints exchange messages may pro-
vide sufﬁcient context to reveal sensitive information. Speciﬁcally,
trafﬁc analysis has repeatedly been demonstrated as an effective
means of uncovering not only individual relationships, but also
larger structures in corporate [44], social [35] and other [13] or-
ganizations.
Private communication over open networks has been studied for
more than 30 years. A range of systems have been created during
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’11 Dec. 5-9, 2011, Orlando, Florida USA
Copyright 2011 ACM 978-1-4503-0672-0/11/12 ...$10.00.
(cid:2)(cid:1)
this time across a design space that includes tradeoffs in privacy
guarantees, performance and threat model and has resulted in two
general anonymous communication architectures – relay-based and
superposed. The best known of the former is Tor [17], which is
the intellectual descendent of Chaum’s mix architecture [10]. Tor
delivers iteratively encrypted messages through a series of prox-
ies and achieves high levels of privacy in the presence of a large
amount of cross trafﬁc. This approach also provides high perfor-
mance, making it ideal for applications such as web surﬁng. Su-
perposed communications architectures provide cryptographically-
strong guarantees of privacy without the multi-hop and cross trafﬁc
assumptions of systems such as Tor, but do so at great expense to
performance. Accordingly, such systems are generally more appro-
priate for very low bandwidth applications such as ballot casting.
An architecture somewhere between these two classes, in which
the strong guarantees of superposed systems and the performance
of relay-based systems without the need for multiple intermedi-
aries could help facilitate anonymous communications for different
classes of applications (e.g., private messages between members
of a corporate board, deniable chatting between an executive and
a recruiter in a coffee shop, etc). This architecture addresses that
void.
In this paper, we develop a protocol and supporting infrastruc-
ture capable of providing strong guarantees of sender and receiver
anonymity for applications with moderate performance constraints
(e.g., chat). Mix-in-Place Anonymous Networks (MIPNets) attempt
to retain the intuitive security properties of traditional mix networks
while reducing the attack surface introduced by requiring the use
of multiple intermediary proxies. Using Secure Function Evalua-
tion (SFE), clients are able to send and are restricted to receive a
subset of the messages stored in an Oblivious Proxy (OP). These
exchanges also blindly but reversibly modify the appearance (but
not the contents) of all other messages stored in the OP, making it
appear to an adversary that the contents of all messages are over-
written during each exchange. Accordingly, an adversary is unable
to determine which messages are actually modiﬁed, yet alone their
source and destination. Whereas traditional mix networks rely on
a cascade of nodes, this approach achieves unlinkability by mix-
ing communications in place through a cascade of functions, con-
stantly and indeﬁnitely perturbing the appearance of messages in
the system.
Intuitively, MIPNets work as follows. Clients use SFE to read
and write to a central mailbox (the OP) in a round-robin fashion.
Because each exchange changes the appearance of all messages in
the mailbox, individual interactions can not be determined by the
OP or any other party. However, realizing this seemingly simple
system presents a number of signiﬁcant challenges. First, our pro-
posed approach must function like a superposed architecture and
prevent the kinds of side-channel attacks that have made identiﬁca-
tion possible in current mix networks. We achieve this by building
our architecture based on a ring topology, thereby excluding the
majority of timing, temporal perturbation and frequency-based at-
tacks. We also take a number of steps to make this architecture
robust against actively malicious participants, who may attempt to
pollute the contents of messages or deny service to other clients
within the MIPNet. Finally, we signiﬁcantly improve the perfor-
mance of the underlying cryptographic operations and implement
a number of optimizations in the hopes of making this architec-
ture usable by classes of applications requiring strong guarantees
of anonymity in environments where sufﬁcient cross trafﬁc is not a
given and better performance than superposed systems.
We address these challenges through the following contributions:
• Develop an architecture that provably guarantees the un-
linkability of communications between participants: We
present a new architecture for anonymous communication
based on Secure Function Evaluation. While a number of
provably anonymous communications systems have been pro-
posed previously, this is the ﬁrst use of SFE in this domain.
Nodes send and receive messages through an Oblivious Proxy,
which is unaware of their contents, destination or veracity.
Moreover, the appearance of all messages is blindly altered
after each exchange, further obfuscating the attacker’s view
of communications.
• Improve and tune performance of SFE primitives: We
build and characterize our architecture using a modiﬁed ver-
sion of Fairplay [42]. We not only implement a more efﬁcient
oblivious transfer primitive for Fairplay, but also explore nu-
merous compilation and run-time options to reduce execu-
tion time over the naïve use of SFE in our architecture by as
much as 98.5%, allowing these heavyweight cryptographic
operations to form the basis of practical, performance con-
scious, privacy-preserving applications. The use of these
cryptographic primitives as the basis of near real-time ap-
plications has not previously been considered possible.
• Implement and measure core architecture and build an
anonymous instant messaging application: We perform an
extensive performance analysis of our proposed architecture.
We then construct a sample instant messaging client running
on top of our system and demonstrate the ability to process
keypresses as fast as they are entered for groups of as many
as 100 users.
We note that MIPNets are not intended to be a replacement for
traditional mix networks such as Tor [17]; rather, they target a dif-
ferent portion of the application space. MIPNets are designed to
provide higher assurance of anonymity for classes of applications
that require it (e.g., chat in hostile networks with low cross trafﬁc)
and are willing to make tradeoffs to achieve these guarantees.
2. RELATED WORK
Anonymity in computer networks has been studied since the in-
ception of such networks. Outside of systems with a trusted and
centralized authority [2], two classes of solutions have arisen. Note
that these solutions differ signiﬁcantly from trusted anonymous prox-
ies [8, 56, 78], which operate as a single-hop ﬁltering point and can
therefore potentially be coerced into revealing the link between a
source and destination, and from anonymous publication and stor-
age systems such as Freenet [12], Free Haven [16] and Publius [73].
Applying cryptographic modiﬁcations to trafﬁc through a proxy
or mix in an untrusted network was ﬁrst proposed by Chaum [10].
In this scheme, clients select a series of mix nodes, called a cas-
cade, through which their messages should pass. Each message is
then encrypted with the public key of each mix in the reverse or-
der of the path to its destination. As such messages traverse the
cascade, each mix node decrypts the message and exposes the next
layer of the encrypted packet and forwarding instructions. While
originally suggested for store and forward protocols, the mix ar-
chitecture was eventually realized for all trafﬁc via Onion Rout-
ing [59, 68]. This approach also motivated the creation of a num-
ber of other related efforts [51, 30, 14, 25, 6, 24, 15, 47, 20], with
Tor [17] being the most widely used and studied of all such sys-
tems. Extensions to these schemes include the use of universal re-
encryption [27, 29], steganography [31] and mix rings for perfor-
mance [9]. Crowds [61] and Hordes [39] similarly forward packets
among a series of nodes.
While providing anonymity against a number of adversaries [69,
21], mix networks have become the target of an increasing number
of attacks. These attacks introduced a number of techniques allow-
ing adversaries with limited knowledge and control of a network to
link sender and receiver. Through attacks on timing [79, 76, 38, 49,
74, 48, 64, 57, 75, 67] and other vectors [43, 3], such identiﬁcation
may be practically possible.
Chaum also suggested a second class of anonymous communi-
cations mechanisms with the Dining Cryptographers Problem [11].
This technique allows a sender to anonymously transmit a single
bit as follows: Alice and Bob (who wants to transmit a single bit
to Charles) ﬂip a coin in secret. Alice reports the result of the ﬂip
to Charles. As the message Charles receives will be the XOR of
all of the bits reported by the participants, Bob’s report of the coin
ﬂip depends on the bit that he wishes to send. For instance, if Al-
ice reports 0 (heads) and Bob wishes to transmit a 1 (tails), Bob
claims the ﬂip resulted in a 1. From Charles’ perspective, each
party is equally likely to have lied about the result, thereby protect-
ing the sender’s identity. A number of systems have attempted to
implement such DC-net protocols through a variety of communica-
tions mechanisms [52, 18, 63] and with resistance to collisions and
maliciousness [72, 7, 71, 70, 28]. Herbivore [66] addresses many
of these issues by broadcasting all messages to all hosts across a
star topology and scales through the use of cliques. Such networks
are susceptible to denial of service and statistical analysis attacks,
wherein nodes in different cliques communicating frequently can
be correlated with higher accuracy. The Pynchon Gate [62] and
pMixes [45] use Private Information Retrieval (PIR) protocols to
achieve receiver anonymity. Senders place messages into mail-
boxes in a common node where receivers use PIR to retrieve them
without a passive adversary being able to determine the content de-
livered to the destination. However, this approach is limited in a
number of ways, including that sender anonymity is not guaranteed
and the potential for timing correlation attacks.
3. SECURE FUNCTION EVALUATION
3.1 Background
Before presenting the details of the MIPNet architecture, we pro-
vide an overview of the cryptographic primitives used to commu-
nicate between clients and the OP.
Secure Function Evaluation [42, 37, 1, 26, 22, 23, 40, 53, 41, 33]
allows two or more parties to execute a joint computation tradition-
ally requiring the oversight of a trusted third party without any ex-
ternal intervention. More formally, participants Alice and Bob have
input vectors (cid:2)a = a0 ··· an−1 and (cid:2)b = b0 ··· bm−1 and wish to
learn f ((cid:2)a,(cid:2)b) without revealing any information about their inputs
(cid:2)(cid:1)
that can not be inherently inferred from the output of f ((cid:2)a,(cid:2)b). As an
example, SFE creates “circuits” that solve the Millionaires’ prob-
lem [77], wherein two millionaires want to know who has more
money without revealing their actual wealth. Assuming that each
millionaire enters their net worth honestly to a function asking the
high level question “Do I have greater worth than the other partic-
ipant?”, SFE can return the correct Boolean values to each party
without disclosing either input.
While these cryptographic mechanisms have been understood
for decades, their uptake and use in real systems has been slow.
In particular, the use of such protocols has long required in-depth
knowledge of the underlying cryptographic constructions and com-
pelled interested parties to implement their own libraries. The Fair-
play compiler [42, 5] greatly simpliﬁes such efforts. Fairplay al-
lows programmers to specify their protocol in a high-level language
and then creates a garbled/encrypted Boolean circuit encoding a
SFE-version of the desired function. In an exchange between Alice
and Bob, Bob uses Fairplay to encode circuits for himself and then
transmits a set to Alice. Both parties input their data, exchange
their results and then uses them to compute the answer.
The security of these operations is guaranteed through the use of
Oblivious Transfers (OT) [58, 77, 50]. A 1-out-of-n OT protocol
allows Bob to learn one of the n pieces of data possessed by Alice
without Alice learning the identity of the speciﬁc object. OT proto-
cols also allow for Alice to prevent Bob from learning the contents
of the remaining n − 1 pieces of data. Fairplay implements an op-
timized 1-out-of-2 OT protocol proposed by Naor and Pinkas [50],
which is based on the Difﬁe-Hellman problem. This protocol is se-
cure in the random oracle model, which is implemented using the
SHA-1 hash function.
Two parties engaging in an SFE exchange using Fairplay per-
form a single OT for each input into the circuit. After these ex-
changes, Alice is able to evaluate the garbled circuit without fur-
ther interacting with Bob. Malicious behavior by Alice is defended
against by both the security of the OT protocol and the use of SHA-
1 to encode the secret used to encrypt the circuit. The same con-
structions also prevent Bob from malicious behavior, assuming that
the circuits encoded by Bob are correct.
The authors of Fairplay recommend the use of a cut-and-choose
protocol in the event that Bob’s creation of the circuits can not be
trusted. In particular, Bob can be required to create m garbled cir-
cuits for the function f and send them to Alice. Alice then ran-
domly selects the circuit she wishes to use for her exchange and re-
quests the secrets corresponding to the m − 1 other circuits. Alice
can then independently evaluate the correctness of the ungarbled
circuits and can execute the remaining circuit with probability 1
m
of maliciousness.
3.2 Extensions to Fairplay
Fairplay not only provides an OT primitive on top of which SFE
can be built, but also makes it straightforward to implement sup-
plemental OT schemes should improvements become available. We
implemented an additional k-out-of-n scheme based on a Two-Lock
cryptosystem. Such schemes are often more efﬁcient than related
OT mechanisms.
A Two-Lock cryptosystem is deﬁned as follows: Assume that
there are two encryption algorithms A and B. Alice encrypts a