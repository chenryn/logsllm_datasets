[Ong14] D. Ongaro and J. Ousterhout, “In Search of an Understandable Consensus
[Ohn88] T. Ohno, Toyota Production System: Beyond Large-Scale Production: Produc-
[Oco12] P. O'Connor and A. Kleyner, Practical Reliability Engineering, 5th edition:
translationbyLewisGalantiereasWind,Sand andStars.
research.google.com/pubs/pub32583.html),inProc.ofLinuxWorld2007,2007.
University Press, 1999.
Algorithm (Extended Version)(https://ramcloud.stanford.edu/raft.pdf).
tivity Press,1988.
tificProgramming Journal vol.13,no.4,2005.
Wiley,2012.
1997.
10.1007%2F978-3-642-25959-3_11),in13th IntlConfonDistributed Computing
and
PDL-14-102,2014.
rience"
beginners.html),inQualityProgress,July 2004.
(http://asq.org/quality-progress/2004/07/quality-tools/root-cause-analysis-for-
www.youtube.com/watch?v=W71BTkUbdqE).
Google stores billionsof lines of code in a singlerepositoryin Communicationsof
Design andImplementation,November 2010.
参考文献
(http://pdl.cmu.edu/PDL-FTP/SelfStar/CMU-PDL-14-102_abs.shtml),
University Parallel Data Lab Technical Report CMU-
Pipelining"
Notifications"
(http://rd.springer.com/chapter/
---
## Page 479
[Wal89] D. R. Wallace and R. U. Fuji, “Software Verification and Validation: An
[Ver15] A.Verma,L.Pedrosa,M.R.Korupolu,D. Oppenheimer,E.Tune,and 
[Tat99] S. Tatham, “How to Report Bugs Effectively” (http://www.chiark.green
[Slo11] B. Treynor Sloss, “Gmail back soon for everyone” (http://gmailblog.blog
[Skel13] M.Skelton,“Operability can Improve if Developers Write a Draft Run Book”
[Sin15] A. Singh et al.,Jupiter Rising: A Decade of Clos Topologies and Centralized
[Sig10] B. H. Sigelman et al., “Dapper, a Large-Scale Distributed Systems Tracing
[Shu13] J. Shute et al, “F1: A Distributed SQL Database That Scales" (https://
[Shaoo] G. Shao, F. Berman, and R. Wolski, “Master/Slave Computing on the Grid”
[Sec13] Securities and Exchange Commission,“Order In the Matter of Knight Capital
[Sch90] F. B. Schneider, “Implementing Fault-Tolerant Services Using the State
[Sch15] B. Schwartz, “The Factors That Impact Availability, Visualized” (https:/
[Sch14] E. Schmidt, J. Rosenberg, and A. Eagle, How Google Works (http:/
end.org.uk/~sgtatham/bugs.html), 1999.
spot.com/2011/02/gmail-back-soon-for-everyone.html),blogpost,28February2011
research.google.com/pubs/pub41344.html),in Proc.VLDB 2013, 2013.
www.howgoogleworks.net): Grand Central Publishing, 2014.
post,21 December 2015.
www.vividcortex.com/blog/the-factors-that-impact-availability-visualized),
IEEE Software, vol. 6, no. 3 (May 1989), pp. 10, 17.
Overview"
enceonComputerSystems,2015.
Wilkes,
pub43837.html),inSIGCOMM15.
Control in Google's Datacenter
cal Report, 2010.
putingWorkshop,2000.
(http://www.cs.ucsb.edu/~rich/publications/shao-hcw.pdf),in Heterogeneous Com-
3-15570,2013.
AmericasLLC"
Computing Surveys, vol. 22, no. 4,1990.
(http://www-usr.inf.ufsm.br/~ceretta/papers/fuji89_software_vv.pdf),
(https://www.sec.gov/litigation/admin/2013/34-70694.pdf),file
Network"
(https://research.google.com/pubs)
参考文献
blog
437
---
## Page 480
438
[Wri13] H. K. Wright, D. Jasper, M. Klimek, C. Carruth, Z.Wan, “Large-Scale Auto-
[Wri12a] H.K.Wright,“Release Engineering Processes,Their Faults and Failures
[Woo96]A.Wood,Predicting Software Reliability”(http://ieeexplore.ieee.org/stamp/
[Whil2] J. A.Whittaker,J. Arbon, and J. Carollo,How Google Tests Software:
[Warl4] R. Ward and B. Beyer, “BeyondCorp: A New Approach to Enterprise Secu-
stamp.jsp?arnumber=544240), in Computer,vol. 29, no. 11, 1996.
Addison-Wesley,2012.
University of Texas atAustin,2012.
(http://www.hyrumwright.org/papers/dissertation.pdf),(section 7.2.2.2) PhD Thesis,
6,December 2014.
mentation,2014.
551.
research.google.com/en/us/pubs/archive/41342.pdf),inProceedings of the29thInter-
1284.
national Conference on Software Engineering (ICSE12).(IEEE,2012),pp.1281-
参考文献
---
## Page 481
+：
索引所列页码为本书英文版页码，请参照正文侧边用“”表示的原书页码。
automation
attribution policy,xx
asynchronous distributed consensus,289
archives vs.backups,343
AppEngine,146
Apache Mesos,15
alerts
agilitys.stability，
aggregation,114,180
aggregate availability
AdSense,31
Ads Database,73-75
acknowledgments,xxi-xxiv
ACID datastore semantics,287,341
access control, 89
abusiveclientbehavior,382
/varz HTTPhandler,109
Symbols
best practices for change management, 10
vs.autonomous systems,67
applying to cluster turnups,75-81
software for,18
false-positive,180
defined,56
(see also software simplicity)
oenefitsof,67-70
(see alsoBorgmon;time-seriesmonitor-
ing)
equation,27,477
barriertools,193,195,293
backends,fake,204
backend servers,19,231
B4network,15
8
availability table,477
availability,38,341
Auxoncasestudy,207-209,11-213
autonomous systems,67
automationtools,194
for incident management, 166
failures, 479
capacity planning,482
(see also service availability)
use cases for,70-73
specialized application of,79
hierarchyofautomationclasses,72
Google's approach to,70
focus on reliability, 83
Diskerase example,85
database example,73-75
cross-industrylessons,467
Borg example, 81
439
---
## Page 482
440
capacity planning
CAPA (corrective and preventative action), 465
CAPtheorem,286
canarying, 34, 155,189, 380
D
Byzantinefailures,290,304
build environments,190
break-glass mechanisms,
Borg Naming Service (BNS), 16
Bigtable, 17, 31, 65
bibliography, 501
mpuses,14
org,14-16,81-83,329
lobstore,17,342
laze build tool, 90
preventing serveroverloadwith,266
mandatory steps for,11
intent-based (see intent-based capacity
further reading on,106
drawbacks of traditional plans,208
drawbacks of "queries per second", 248
distributed consensus systems and,307
Diskerase example, 85
bestpracticesfor,482
approaches to,105
vectors,112-113
configuration, 121
(see also time-series monitoring)
rgmon,108-123
service level objectives,480
rollouts,480
reward systems,174
postmortems,171-172,482
overloads and failure,483
monitoring,481
lerting,18,118
planning)
ules,114-118
索引
201
communication and collaboration