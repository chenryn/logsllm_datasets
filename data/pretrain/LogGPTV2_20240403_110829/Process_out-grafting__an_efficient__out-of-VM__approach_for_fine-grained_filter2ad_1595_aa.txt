# Title: Process Out-Grafting: An Efficient "Out-of-VM" Approach for Fine-Grained Process Execution Monitoring

## Authors:
- Deepa Srinivasan, NC State University, PI:EMAIL
- Zhi Wang, NC State University, PI:EMAIL
- Xuxian Jiang, NC State University, PI:EMAIL
- Dongyan Xu, Purdue University, PI:EMAIL

## Abstract
The rapid growth of malware has highlighted the limitations of traditional in-host malware defense systems, leading to the development of secure virtualization-based out-of-VM solutions. By running vulnerable systems as virtual machines (VMs) and moving security software outside the VMs, these solutions isolate anti-malware software from the vulnerable system. However, this approach introduces a semantic gap, which hinders the compatibility with existing defense software. In this paper, we introduce process out-grafting, an architectural approach that addresses both isolation and compatibility challenges in out-of-VM approaches for fine-grained process-level execution monitoring. Specifically, by relocating a suspect process from inside a VM to run side-by-side with the out-of-VM security tool, our technique effectively removes the semantic gap and supports existing user-mode process monitoring tools without any modification. Additionally, by forwarding the system calls back to the VM, we can smoothly continue the execution of the out-grafted process without compromising the isolation of the monitoring tool. We have developed a KVM-based prototype and used it to natively support several existing tools without modification. Evaluation results, including measurements with benchmark programs, demonstrate the effectiveness and practicality of our approach with minimal performance overhead.

## Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection - Invasive Software

## General Terms
Security

## Keywords
Virtualization, Process Monitoring, Semantic Gap

### 1. Introduction
Malware, such as viruses and trojans, continues to evolve, posing a significant threat to end users and enterprises. A recent report from McAfee [3] highlights the rapid growth of malware, with over 20 million new pieces of malware identified in 2010, translating to nearly 55,000 new samples discovered daily. This alarming trend underscores the inadequacy of existing malware defenses in containing the threat and keeping pace with malware growth.

Traditional anti-malware tools are typically deployed within vulnerable systems, making them prime targets for malware. Although these in-host tools are valuable for monitoring system behavior and detecting malicious activities, they lack the necessary isolation to prevent themselves from being infected. To address this, researchers have proposed out-of-VM approaches [8, 15, 20, 21, 30, 31, 37], which leverage virtualization to run vulnerable systems as VMs and move anti-malware tools outside the VMs. This approach enhances isolation but introduces a semantic gap, making it difficult to support existing defense software.

Researchers have explored various introspection-based systems, such as VMwatcher [21] and Virtuoso [12], to bridge the semantic gap. However, these systems still face compatibility issues and require significant effort to adapt existing tools for different guest operating systems. This is particularly challenging for fine-grained monitoring, which requires intercepting and interpreting a wide variety of events, such as user-library function calls or system calls.

In this paper, we present process out-grafting, an architectural approach that addresses both isolation and compatibility challenges for out-of-VM, fine-grained user-mode process execution monitoring. Our approach confines vulnerable systems as VMs and deploys security tools outside the VMs. Instead of analyzing the entire VM, out-grafting focuses on individual processes, allowing existing user-mode process monitoring tools (e.g., strace, ltrace, and gdb) to monitor internal suspect processes without modification.

### 2. System Design

#### 2.1 Goals and Assumptions
Process out-grafting is a virtualization-based approach designed to advance current out-of-VM methods for fine-grained process-level execution monitoring. Our main design goals are:

- **Isolation**: Strictly isolate process monitoring tools from untrusted processes.
- **Compatibility**: Support existing fine-grained process monitoring tools (e.g., strace, ltrace, gdb) without modification.
- **Efficiency**: Minimize additional performance overhead caused by isolation and localize monitoring overhead to the monitored process.

We assume no trust from the suspect process and that an attacker may introduce malicious software to compromise the production VM. However, we assume the presence of a trusted hypervisor [25, 40] to enforce isolation between running VMs.

#### 2.2 On-demand Grafting
Our first key technique, on-demand grafting, relocates a suspect process from the production VM to the security VM for close inspection. This technique enables efficient, native inspection from existing process-level monitoring tools by avoiding unnecessary hypervisor intervention and eliminating the semantic gap from VM isolation. The relocation can be initiated based on administrative policies, such as periodic, random, or event-triggered scrutiny.

To out-graft a running process, we first locate it using the base address of its page table directory. The hypervisor then redirects or transfers its execution from the production VM to the security VM. In the following sections, we detail when, what, and how to transfer the suspect process execution across the two VMs.

### 3. Implementation and Evaluation
We have implemented a proof-of-concept prototype on KVM/Linux (version kvm-2.6.36.1) and tested it to out-graft various processes from different VMs running either Fedora 10 or Ubuntu 9.04. Our evaluation includes scenarios using traditional process monitoring tools (strace, ltrace, gdb) to monitor an out-grafted process from another VM. We also demonstrate that advanced hardware-assisted monitoring tools [26] can be deployed in the security VM to monitor a process in the production VM, which may be inconvenient or impossible to run inside the production VM. Performance evaluations with standard benchmark programs show that our prototype incurs a small performance overhead, and the monitoring overhead is largely confined within the security VM.

### 4. Discussion and Future Work
We discuss possible limitations and explore future improvements, such as enhancing the robustness of the system and extending its capabilities to include kernel-level monitoring.

### 5. Related Work
We review related work in the field of virtualization-based security and process monitoring, highlighting the contributions and differences of our approach.

### 6. Conclusion
In conclusion, process out-grafting is an effective and practical approach for fine-grained process execution monitoring in out-of-VM environments. It addresses the challenges of isolation and compatibility, enabling the use of existing monitoring tools without modification. Our implementation and evaluation demonstrate the feasibility and efficiency of this approach.

---

This revised version aims to enhance the clarity, coherence, and professionalism of the original text.