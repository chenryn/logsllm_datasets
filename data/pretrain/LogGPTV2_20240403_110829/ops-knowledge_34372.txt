Question: In an x86 assembly program, function 'bar' is called with several arguments, and it declares a large local array. What must the developer ensure to prevent stack corruption during the function call? Select all that apply.
"A": "The stack pointer (esp) must be decremented sufficiently to allocate space for the local array and prevent overwriting other data on the stack.",
"B": "The saved frame pointer (sfp/old ebp) must be pushed onto the stack after the local array is allocated to ensure proper stack frame structure.",
"C": "The order of argument pushing onto the stack should be maintained as specified by the calling convention to prevent stack misalignment.",
"D": "The instruction pointer (eip/rip) must be incremented instead of decremented to account for the large local array allocation."
Answer: AC