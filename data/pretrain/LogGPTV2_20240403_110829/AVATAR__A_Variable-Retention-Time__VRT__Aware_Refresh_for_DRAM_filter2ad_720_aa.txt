title:AVATAR: A Variable-Retention-Time (VRT) Aware Refresh for DRAM
Systems
author:Moinuddin K. Qureshi and
Dae-Hyun Kim and
Samira Manabi Khan and
Prashant J. Nair and
Onur Mutlu
2015 45th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2015 45th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
AVATAR: A Variable-Retention-Time (VRT) Aware
Refresh for DRAM Systems
Moinuddin K. Qureshi†
Dae-Hyun Kim†
Samira Khan‡
Prashant J. Nair†
Onur Mutlu‡
†Georgia Institute of Technology
{moin, dhkim, pnair6}@ece.gatech.edu
‡Carnegie Mellon University
{samirakhan, onur}@cmu.edu
Abstract—Multirate refresh techniques exploit
the non-
uniformity in retention times of DRAM cells to reduce the DRAM
refresh overheads. Such techniques rely on accurate proﬁling of
retention times of cells, and perform faster refresh only for a few
rows which have cells with low retention times. Unfortunately,
retention times of some cells can change at runtime due to
Variable Retention Time (VRT), which makes it impractical to
reliably deploy multirate refresh.
Based on experimental data from 24 DRAM chips, we develop
architecture-level models for analyzing the impact of VRT. We
show that simply relying on ECC DIMMs to correct VRT failures
is unusable as it causes a data error once every few months. We
propose AVATAR, a VRT-aware multirate refresh scheme that
adaptively changes the refresh rate for different rows at runtime
based on current VRT failures. AVATAR provides a time to failure
in the regime of several tens of years while reducing refresh
operations by 62%-72%.
Keywords—Dynamic Random Access Memory, Refresh Rate,
Variable Retention Time, Error Correcting Codes, Performance,
Memory Scrubbing
I.
INTRODUCTION
Dynamic Random Access Memory (DRAM) has been the
basic building block of computer memory systems. A DRAM
cell stores data as charge in a capacitor. Since this capacitor
leaks over time, DRAM cells must be periodically refreshed to
ensure data integrity. The Retention Time of a single DRAM
cell refers to the amount time during which it can reliably
hold data. Similarly, the retention time of a DRAM device
(consisting of many cells) refers to the time that it can reliably
hold data in all of its constituent cells. To guarantee that all
cells retain their contents, DRAM uses the worst-case refresh
rate determined by the cell with the minimum retention time as
a whole. JEDEC standards specify that DRAM manufacturers
ensure that all cells in a DRAM have a retention time of at
least 64ms, which means each cell should be refreshed every
64ms for reliable operation.
Despite ensuring reliable operation, using such high refresh
rates introduce two problems: 1) refresh operations block
memory, preventing it from performing read and write re-
quests. 2) refresh operations consume signiﬁcant energy [6,28,
35]. In fact, as technology continues to scale and the capacity
of DRAM chips increases, the number of refresh operations
also increases. While the refresh overheads have been quite
small (less than a few percent) in previous generations of
DRAM chips, these overheads have become signiﬁcant for
current generation (8Gb) DRAM chips, and they are projected
to increase substantially for future DRAM technologies [18,28,
34, 35]. Figure 1 illustrates the trend, showing the throughput
loss (the percentage of time for which the DRAM chip is
unavailable due to refresh) for different generations of DRAM.
As the memory capacity increases, memory throughput reduces
and refresh power grows. In fact, at the 32Gb-64Gb densities,
the overheads of performance and power reach up to 25-50%
and 30-50% respectively. Such overheads represent a Refresh
Wall, and we need scalable mechanisms to overcome them.
  350
  300
Non Refresh Power
Refresh Power
Future
)
  250
  200
DDR3
  100
)
%
(
s
s
o
L
t
u
p
h
g
u
o
r
h
T
y
r
o
m
e
M
  80
  60
  40
  20
  0
DDR3
Future
2Gb 4Gb
8Gb 16Gb
32Gb
64Gb
Device Capacity
n
o
i
t
p
m
u
s
n
o
C
r
e
w
o
P
W
m
(
e
c
i
v
e
d
r
e
p
  150
  100
  50
  0
2Gb 4Gb
8Gb 16Gb 32Gb 64Gb
Device Capacity
Fig. 1.
Refresh Wall for scaling DRAM memory systems. (a) Memory
throughput loss and (b) Power overheads of refresh (source [28]). The refresh
overheads are signiﬁcant and unmanageable for high-density chips.
To ensure that DRAM cells retain data reliably, DRAM
conservatively employs the refresh interval of 64ms based on
the DRAM cell with the shortest retention time. In fact, the vast
majority of DRAM cells in a typical DRAM device can operate
reliably with much longer refresh intervals [19, 29]. Multirate
refresh mechanisms (e.g., [4, 21, 28, 36, 38, 41, 44]) exploit
this discrepancy by identifying the few cells that require high
refresh rates and refreshing only those portions of memory
at the nominal refresh rate of 64ms. The rest of memory has
a much lower refresh rate (4-8x less than the nominal rate).
Multirate refresh schemes rely on an accurate retention time
proﬁle of DRAM cells. However, accurately identifying cells
with short retention times remains a critical obstacle due to
Variable Retention Time (VRT). VRT refers to the tendency of
some DRAM cells to shift between a low (leaky) and a high
(less leaky) retention state, which is shown to be ubiquitous
in modern DRAMs [29]. Since the retention time of a DRAM
cell may change due to VRT, DRAM cells may have long
retention times during testing but shift to short retention times
at runtime, introducing failures1 during system operation. A
recent paper [18] from Samsung and Intel identiﬁes VRT as
one of the biggest impediments in scaling DRAM to smaller
technology nodes.
This paper has two goals: 1) To analyze the impact of
VRT on multirate refresh by developing experiment-driven
models. 2) To develop a practical scheme to enable multirate
refresh in the presence of VRT. To understand how VRT
impacts multirate refresh, we use an FPGA-based testing
framework [19, 24, 25, 29] to evaluate the impact of a reduced
refresh rate on DRAMs in a temperature-controlled environ-
ment.
Prior works indicate that even after several rounds of test-
ing performed for several days, new (previously unidentiﬁed)
1We use terms of failure and error interchangeably in this paper.
978-1-4799-8629-3/15 $31.00 © 2015 IEEE
978-1-4799-8629-3/15 $31.00 © 2015 IEEE
DOI 10.1109/DSN.2015.58
DOI 10.1109/DSN.2015.58
427
427
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
bit errors continue to occur [19,29]. However, we observe two
important properties that provide us insights for developing an
effective solution. First, after the initial testing, the number of
active (failing) VRT cells during a given time period stabilizes
close to an average value and follows a lognormal distribution.
We refer to this constantly changing pool of active VRT cells
as the Active-VRT Pool (AVP). Second, although new bit errors,
previously unseen, continue to surface even after several hours,
the rate at which these new bit errors emerge stabilizes at a
relatively low rate that we refer to as the Active-VRT Injection
(AVI) rate. In our studies of 24 modern DRAM chips, we
ﬁnd that 1) 2GB memory has an Active-VRT pool of 350
to 500 cells on average within a 15-minute period; 2) AVI rate
stabilizes at approximately one new cell within a 15-minute
period.
The AVP and AVI metrics motivate much of the remaining
analysis in this paper. The continual discovery of new bit errors
even after hours of tests precludes the possibility of relying
solely on memory tests to identify and eliminate bit errors.
We can potentially use error correction code (ECC) DIMMs
to correct VRT-related data errors: for example, we can use
either in-DRAM ECC or SECDED DIMMs to correct VRT-
related errors, as suggested by a recent study [18]. We refer
to the approach of using SECDED for treating VRT-related
errors the same way as soft errors as a VRT-Agnostic multirate
refresh scheme. Our analysis shows that simply relying on
ECC DIMMs still causes an uncorrectable error once every
six to eight months (even in the absence of any soft errors).
Such a high rate of data loss is unacceptable in practice,
making multirate refresh impractical to reliably deploy even
for a memory system employing DIMMs with ECC capability.
This paper introduces the ﬁrst practical, effective, and
reliable multirate refresh scheme called AVATAR (A Variable-
Retention-Time Aware multirate Refresh), which is a system-
level approach that combines ECC and multirate refresh to
compensate for VRT bit errors. The key insight in AVATAR
is to adaptively change the refresh rate for rows that have
encountered VRT failures at runtime. AVATAR uses ECC and
scrubbing to detect and correct VRT failures and upgrade rows
with such failures for faster refresh. This protects such rows
from further vulnerability to retention failures. We show that
the pool of upgraded rows increases very slowly (depending
on AVI), which enables us to retain the beneﬁts of reduced
refresh rate (i.e. slower refresh) for most of the rows. AVATAR
performs infrequent (yearly) testing of the upgraded rows so
that rows not exhibiting VRT anymore can be downgraded to
slower refresh.
We show that AVATAR improves the reliability of a tra-
ditional multirate refresh scheme by 100 times, increasing the
time to failure from a few months to several tens of years
(even in the presence of high soft-error rates, as discussed in
Section VI-C). AVATAR provides this high resilience while re-
taining most of the refresh savings of VRT-Agnostic multirate
refresh and incurring no additional storage compared to VRT-
Agnostic multirate refresh. AVATAR is especially beneﬁcial
for future high-density chips that will be severely limited by
refresh. For example, our evaluations show that for a 64Gb
DRAM chip, AVATAR improves performance by 35% and
reduces the Energy Delay Product (EDP) by 55%.
II. BACKGROUND AND MOTIVATION
A. DRAM Organization and DRAM Refresh
A DRAM cell consists of one transistor and one capacitor
(1T-1C), as shown in Figure 2. DRAM cells are organized
as banks, a two-dimensional array consisting of rows and
columns. The charge stored in the capacitor tends to leak over
time. To maintain data integrity, DRAM systems periodically
perform a refresh operation, which simply brings the data from
a given row into the sense ampliﬁers and restores it back to
the cells in the row. Thus, refresh operations are performed at
the granularity of a DRAM row.2
Wordline
e
n
i
l
t
i
B
Cell Array
r
e
d
o
c
e
D
w
o
R
Cell Transistor
Cell Capacitor
Bitline Sense Amplifier Bank
Fig. 2. DRAM Organization (source [14]).
B. Refresh Wall for Scaling DRAM
As the capacity of DRAM increases, the time spent in
performing refresh also increases. The performance and power
of future high-density DRAMs are expected to be severely
constrained by overheads of refresh operations (Figure 1).
As the increased variability of DRAM cells with smaller
geometries might reduce the DRAM refresh period from 64ms
to 32ms even for operation at normal temperature [16, 17],
the refresh problem is likely to become worse for future
DRAMs [18, 28, 34, 35]. Thus, techniques that can eliminate
or reduce refresh operations can be greatly effective in over-
coming the Refresh Wall.
C. Multirate Refresh
The retention time of different DRAM cells is known to
vary, due to the variation in cell capacitance and leakage
current of different cells. The distribution of the retention time
tends to follow a log-normal distribution [10, 22], with typical
DRAM cells having a retention time that is several times
higher than the minimum speciﬁed retention time. Multirate
refresh techniques exploit this non-uniformity in retention time
of DRAM cells to reduce the frequency of DRAM refresh.
Multirate refresh schemes (e.g., [21, 28, 36, 38, 41, 44]) group
rows into different bins based on the retention time proﬁling
and apply a higher refresh rate only for rows belonging to the
lower retention time bin.
1) Implementation: Figure 3(a) shows a generic implemen-
tation of multirate refresh scheme using two rates: a Fast
Refresh that operates at the nominal rate (64ms) and a Slow
Refresh that is several times slower than the nominal rate.
Multirate refresh relies on retention testing to identify rows
that must be refreshed using Fast Refresh, and populates the
2For more detail on DRAM operation and refresh, we refer the reader to [6,
23, 25, 26, 28, 29, 35].
428428
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
Refresh Rate Table (RRT) with this information. At runtime,
RRT is used to determine the refresh rate for different rows.
For an 8GB DIMM with an 8KB row buffer, the size of RRT is
128KB.3 For our studies, we assume that the RRT information
is available at the memory controller, similar to RAIDR [28].
Slow Refresh Rate=1/8x 
Slow Refresh Rate=1/4x
A. Causes of VRT
10
50
Num Rows Using Fast Refresh (%)
20
30
40
0: SlowRefresh
1: FastRefresh
100
)
%
(
h
s
e
r
f
I
n
o
e
R
n
1
0
0
0
0
0 R
(b)
i
t
c
u