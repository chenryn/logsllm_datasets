原文地址：
**产品** ：0.85（2014年发布）到9.4.5（包括9.4.5，2019年发布）的所有GLPI版本。 有关受影响版本的更多详细信息，请参见专题部分。
**类型** ：远程代码执行（理论：未验证；实际：已验证）
**摘要**
：GLPI的备份功能（CVE-2020-11060），存在远程代码执行（RCE）漏洞。通过创建PHP/GZIP文件，可以滥用任意路径和哈希路径泄露来在GLPI主机上执行代码。我们描述了一种利用方法，使用技术人员帐户通过特制的gzip/php
webshell在WiFi网络备注实现RCE。
_已更新，加入关于受影响版本的更多详细信息。_
摘自[Wikipedia](https://en.wikipedia.org/wiki/GLPi "Wikipedia"):
> _GLPI（法语缩写：Gestionnaire Libre de Parc Informatique，或英文“ Open Source IT
> Equipment Manager”）是一个开源的IT资产管理、问题跟踪系统和服务台系统，编写语言为PHP。_
其源码可以在[GitHub](https://github.com/glpi-project/glpi "GitHub")上找到。
本文深入探讨了GLPI中发现的一个漏洞，在研究过程中还发现了其他漏洞，可以在这里查看：[Multiple vulnerabilities in
GLPI](https://offsec.almond.consulting/multiple-vulnerabilities-in-glpi.html
"Multiple vulnerabilities in GLPI")
# Vulnerability details
## CSRF
具有maintenance权限的GLPI用户可以通过菜单执行SQL/XML dumps：  
这些操作存在跨站请求伪造（CSRF）漏洞。实际上，执行GET请求时不会进行额外的检查：
  * SQL备份：
  * XML备份：[http://host/front/backup.php?xmlnow=xmlnow](http://http://host/front/backup.php?xmlnow=xmlnow "http://host/front/backup.php?xmlnow=xmlnow")
[默认情况下](https://glpi-install.readthedocs.io/en/latest/install/index.html#files-and-directories-locations
"默认情况下")，dumps存储在`GLPI_DUMP_DIR`目录中，也就是说，可以在以下目录中找到：[http//host/files/_dumps/](http://host/files/_dumps/
"http//host/files/_dumps/")。
[filename参数定义](https://github.com/glpi-project/glpi/blob/3717a5ae3419d01d30c7223f0c18330891e06bbb/front/backup.php#L411
"filename参数定义")如下所示：
    listTables();
    $numtab = 0;
    while ($t = $result->next()) {
       $tables[$numtab] = $t['TABLE_NAME'];
       $numtab++;
    }
    for (; $offsettable 压缩数据集由一系列块组成，对应于连续的输入数据块。块大小是任意的，除了不可压缩的块限制为65,535字节。  
>
> 每个块使用LZ77算法和Huffman编码的组合进行压缩。每个块的Huffman树独立于其前续或后续块的树，LZ77算法可以使用在前一个块中出现过的重复字符串的引用，最多在此之前32K输入字节
[DEFLATE](https://tools.ietf.org/html/rfc1951#page-10 "DEFLATE")定义了3种有效块类型：
> 00-未压缩  
>  01-用固定的Huffman编码压缩  
>  10-用动态Huffman编码压缩  
>  11-保留（错误）
为了选择一种块类型，gzip使用的压缩器会比较未压缩、固定和动态Huffman编码几种类型中哪个更短。