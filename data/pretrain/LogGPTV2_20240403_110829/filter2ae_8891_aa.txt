**产品**: 所有从0.85（2014年发布）到9.4.5（包括9.4.5，2019年发布）的GLPI版本。更多受影响的具体版本信息，请参阅专题部分。

**类型**: 远程代码执行（理论：未验证；实际：已验证）

**摘要**: GLPI的备份功能存在远程代码执行（RCE）漏洞（CVE-2020-11060）。攻击者可以通过创建PHP/GZIP文件来滥用任意路径和哈希路径泄露，在GLPI主机上执行恶意代码。本报告描述了一种利用方法，即使用技术人员帐户通过特制的gzip/php webshell在WiFi网络备注中实现RCE。
_更新说明: 已加入关于受影响版本的更多信息。_

根据[Wikipedia](https://en.wikipedia.org/wiki/GLPi)的定义:
> GLPI (Gestionnaire Libre de Parc Informatique, 或者英文中的 "开源IT资产管理") 是一个用PHP编写的开源IT资产管理系统、问题追踪系统和服务台解决方案。
其源代码可在[GitHub](https://github.com/glpi-project/glpi)上获得。

本文详细探讨了在GLPI中发现的一个关键安全漏洞，并在研究过程中发现了其他相关漏洞。更多相关信息请访问：[GLPI中的多个漏洞](https://offsec.almond.consulting/multiple-vulnerabilities-in-glpi.html)

# 漏洞详情
## CSRF
拥有维护权限的GLPI用户能够通过菜单执行SQL/XML导出操作：
这些操作容易受到跨站请求伪造(CSRF)攻击的影响。实际上，在执行GET请求时并没有进行额外的安全检查：
  * SQL备份：
  * XML备份：`http://host/front/backup.php?xmlnow=xmlnow`
默认情况下，导出的数据将被存储于`GLPI_DUMP_DIR`目录下，通常位于：`http://host/files/_dumps/`

关于[filename参数定义](https://github.com/glpi-project/glpi/blob/3717a5ae3419d01d30c7223f0c18330891e06bbb/front/backup.php#L411)，如下所示：
```php
listTables();
$numtab = 0;
while ($t = $result->next()) {
   $tables[$numtab] = $t['TABLE_NAME'];
   $numtab++;
}
// 剩余代码省略...
```

压缩数据集由一系列块组成，每个块对应连续的一段输入数据。除了不可压缩的块限制为65,535字节外，块大小可以是任意值。每个块采用LZ77算法与Huffman编码相结合的方式进行压缩。每个块的Huffman树独立于前后块，而LZ77算法则可以引用前一区块内出现过的重复字符串，最多追溯至之前的32K字节。

[DEFLATE](https://tools.ietf.org/html/rfc1951#page-10) 定义了三种有效的块类型：
- 00 - 未压缩
- 01 - 使用固定Huffman编码压缩
- 10 - 使用动态Huffman编码压缩
- 11 - 保留（表示错误）

为了确定最合适的块类型，gzip压缩器会比较不同压缩方式下的输出长度，选择最短的一种。