必须对每一个子目录执行 cwd 以及 ls 以产生
远端 ls 结果。在这种情形下 remote_dir 必须
是绝对的（从 / 开始）而非相对的。使用 ftp
里的 pwd 指令以找出远端档案区域之路径开始
处。（如果 remote_fs 是 vms 则不可使用。）
[false]
.TP
flags_recursive 
传送给远端 ls 用以执行递回列出的旗标。
['-lRat']
.TP
flags_nonrecursive
传送给远端 ls 用以执行非递回列出的旗标。
['-lat']
.TP
remote_fs 
远端档案储存型态。处理 unix, dls, netware
vms, dosftp, macos, lsparse 以及 infomac。
细节参阅下面 FILESTORES 段落。[unix]
.TP
vms_keep_version
映射 vms 档案时，保留版本编号。若为 false
，会抽离版本而只保留基本的档案名称。[true]
.TP
vms_xfer_text 
要以文字模式(TEXT mode) 传输之 vms 档案的
样板（忽略大小写）。
['readme$|info$|listing$|.c$']
.TP
name_mappings 
远端到本地的路径名称对映（一个 perl s 指令
eg. s:old:new:）。['']
.TP
external_mapping
执行名称对映的外部函式。['']
.TP
get_newer 
如果远端档案的日期比本地的新则取回。[true]
.TP
get_size_change 
如果档案的大小与本地的不同则取回。如果档案
是在撷取时压缩的，则其大小会自动地忽略掉。
[true]
.TP
compress_patt 
储存在本地之前要先压缩之档案的正规表示式。
参阅 get_size_change 选项。['']
.TP
compress_excl 
不压缩之档案的正规表示式（忽略大小写）。
[\.(z|gz)$]
.TP
compress_prog 
用来压缩档案的程式。如果设为 compress 或是
gzip 这两个字的话，则将会自动地设定完整的
路径名称以及正确的 compress_suffix(副档名)
。使用 gzip 的时候，会使用第九级 (gzip -9)
压缩。注意到可以在 compress_prog 之后设定
compress_suffix 将其重设为非标准值。
[compress]
.TP
compress_suffix 
压缩程式附加到档案后的字元。若压缩程式选项
compress_prog 为 compress 的话，则此预设值
为 .Z 。若 compress_prog 为 gzip 的话，则
此预设值为 .gz。['']
.TP
compress_conv_patt
如果 compress_prog 是 gzip 的话，符合这个
样板的档案会被解压缩并在本地储存前以 gzip
重新压缩。压缩转换只对 compress 到 gzip 此
转换有意义。[(\.Z|\.taz)$]
.TP
compress_conv_expr
把副档名从 compress 转为 gzip 形式的 perl
表示式。[s/\.Z$/\.gz/;s/\.taz$/\.tgz/]
.TP
compress_size_floor
只压缩比此数值小的档案。[0]
.TP
force_times 
强制要求本地时间符合远端时间。[yes]
.TP
retry_call 
如果初始连线失败，一分钟之后重试一次。这是
用来处理一些反向找寻(lookup)进入(incoming)
主机但有时会在第一次尝试时超过时间的节点。
[yes]
.TP
update_log 
档案名称，系相对于 local_dir 选项之设定值
，此处会保留一份更新报告。['']
.TP
mail_to 
将一份系统执行工作记录寄给这个以逗点隔开之
列表上的人。['']
.TP
user 
给予本地路径名称之使用者名称或使用者号码。
['']
.TP
group 
给予本地路径名称之群组名称或群组号码。['']
.TP
file_mode 
给予本地建立之档案的权限。[0444]
.TP
dir_mode 
给予本地建立之目录的权限。[0755]
.TP
timeout 
在此秒数后结束 ftp 要求。[40]
.TP
ftp_port 
远端 ftp 伺服程式的埠号。[21]
.TP
proxy 
设为 1 以使用代理转接(proxy)式的 ftp 服务
。[0]
.TP
proxy_ftp_port 
代理服务之 ftp 伺服程式的埠号。[4514]
.TP
proxy_gateway 
代理服务之名称，也可用 INTERNET_HOST 变数
来提供。[internet-gateway]
.TP
mode_copy 
指出是否需要拷贝模式位元(mode bits) 的旗标
。[false]
.TP
interactive 
非批次(non-batch) 传输。系以 -g 旗标实作。
[false]
.TP
text_mode 
如果为 true 的话，档案以文字模式传输。Un*x
较喜欢以二进位传输所以这是预设值。[false]
.TP
force 
如果为 true 的话，所有档案都将被传输而不去
理会档案的大小或时间。[false]
.TP
get_file 
以执行 get 而非 put 作为预设。[true]
.TP
verbose 
冗余讯息。[false]
.TP
delete_source 
一旦传输完成后删除来源档案。（此选项已不再
支援。）[false]
.TP
disconnect 
档案包裹结束后从远端节点结束连线。[false]
.TP
mail_prog 
呼叫执行以将信件寄送给 mail_to 列表的程式
。可以传递 mail_subject 参数。预设为 mailx
Mail, mail 或任何在你的系统上可用的东西。
['']
.TP
mail_subject 
mirror update ['-s]
.TP
hostname Mirror 
自动地跳过节点名称符合此主机的档案
包裹。预设为本地主机名称。['']
.TP
use_files 
将 mirroe 所使用的 associative arrays 放到
暂存档里。[false]
.TP
umask 
预设不允许任何 setuid 的东西通过。[07000]
.TP
remote_group 
如果存在则设定远端 'site group' 。['']
.TP
remote_gpass 
如果存在则设定远端 'site gpass' 。['']
.TP
remote_idle 
如果非空(not null)，则尝试并将远端闲置计时
(idle timer)设为此值。['']
.TP
make_bad_symlinks
如果为 true 的话，将会把符号链结连到不允许
（不存在）的路径名称。旧版预设值为 true 。
[false]
.TP
follow_local_symlinks
应该要跟从档案或是目录所指向处之路径名称的
正规表示式。这使得 mirror 不能够见到本地的
符号链结。['']
.TP
get_missing 
确实取回档案。当设为 false 的时候，只执行
删除以及建立符号链结。用来删除比 max_days
更旧的过时档案而不必撷取这些旧档案。[true]
.PP
每一组关键字定义如何映射一份特定的档案包裹而且应该要以一行
唯一的 package 开始。档案包裹的名称用在产生报告及 -p 参数
上，所以应使用较具记忆性的名称。定义每个档案包裹所需的最小
需求是 package, site, remote_dir 以及 local_dir 。一旦找到
一行 package 叙述，所有的预设值都会重设。
.PP
如果 package 的名称是 defaults 的话，则不会连线到任何节点
去，但是所给任何关键字的预设值都会改变。一般而言所有的预设
值都在 mirror.defaults 这个将会在任何 package 细节前自动
载入的档案里。
.PP
.nf
# Sample mirror.defaults
package=defaults
# The LOCAL hostname - if not the same as `hostname` returns
# (I advertise the name src.doc.ic.ac.uk but the machine is
# really puffin.doc.ic.ac.uk.)
hostname=src.doc.ic.ac.uk
# Keep all local_dirs relative to here
local_dir=/public/
remote_password=PI:EMAIL
.fi
.PP
如果档案包裹不是 defaults 的话，则 mirror 将会执行下列步骤
。除非侦测出一个内部错误，任何错误都将会使得目前的档案包裹
被跳过并且尝试下一个。
.PP
如果 mirror 并非已经连上该节点，它将会从任何已经连上的节点
离线并尝试连线到远端节点的 ftp 伺服程式去。它接著将会使用
所给的远端使用者名称及密码签入。一旦连上， mirror 开启二进
位传输模式。接下来它切换到所给的本地目录并扫描之以取得已经
存在的本地档案的细节。如果必要，将会建立本地目录。一旦这项
作业完成，会以类似的方式扫描远端目录。 Mirror 系切换到远端
目录并执行 ftp LIST 指令，然后依据 recursive 选项的值传递
flags_recursive 选项或 flags_nonrecursive 选项来完成。此外
也可以撷取一个包含有目录列表的档案。每一个远端路径名称都将
会执行任何指定的对映(mapping) 以建立本地路径名称。然后任何
由 exclude_patt, max_days, get_newer 以及 get_size_change
关键字指定的检验都会施行在档案或符号链结上。只有 exclude-
patt 检验会施行在子目录上。
.PP
上述过程建立一份所有需要的远端档案以及要储存它们之本地路径
名称的列表。
.PP
一旦目录列表完成，所有需要的档案都会从远端节点撷取到它们的
本地路径名称。作法是把档案撷取到目标目录里的暂存档。如果有
需要，暂存档会被压缩(compressed, gzip'ed) 或是切割（或者是
压缩后再切割）。当传输成功后再把暂存档改名。
.SH "档案储放 FILESTORES"
.PP
Mirror 使用远端目录列表以找出可以取得哪些档案。 Mirror 本
来的目标是连线到 unix 的 ftp 伺服程式使用标准的 ls 指令。
要使用于非标准 ls 的 unix 主机或非 unix 的主机上它必须要设
remote_fs 变数以符合将会传回(return)的目录列表类型。此变数
(remote_fs) 与其它变数特别是 flags_recursive, recurse_hard
以及 get_size_change 之间有些交互作用。下列的节次将会秀些
在不同档案服务处执行 ftp 的 dir 指令所产生的结果以及相关
变数的建议。在配合某些设定与众不同的档案服务处的时候你可能
必须变更此处所建议的变数设定。
.PP
.nf
remote_fs=unix
total 65
-rw-r--r-- 1 ukuug ukuug 2245 Jun 28 20:06 README
-rw-r--r-- 1 ukuug ukuug 61949 Jun 29 19:13 mirror-2.1.tar.gz
.fi
.PP
这是预设值而且你应该不必重设任何其它变数。
.PP
.nf
remote_fs=dls
00index.txt 189916
0readme 5793
1_x/ = OS/2 1.x-specific files
.fi
.PP
这是某些 unix 档案服务处所使用的 ls 变化型。它在列表中提供
其所知项目的描述。把 flags_recursive 设为 -dtR 即可。