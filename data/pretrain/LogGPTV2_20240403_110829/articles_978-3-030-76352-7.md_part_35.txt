taneously. The T-GCN model can be seen as an improvement of LSTM-FCN,
since a convolution is applied that is not bound to the euclidean domain. After
that, the convolution result is processed by a recurrent neural network (RNN).
Althougharecentpublication,T-GCNutilizesagraphconvolutionmethodthat
is outperformed by other GCNN models.
5 Conclusion
InthispaperwepresentedTELESTO,anoveltimeseriesclassificationmodelto
identifyreoccurringanomaliesinservicesdeployedinaIaaScloudenvironment.
Therefore, we model KPIs of hypervisors and virtual machines that are hosting
applications as multivariate time series. A method to transform multivariate
time series into graphs is presented. The proposed model is based on GCNNs
andthus,invarianttochangesoftheinputdimensionality.Weapplyconvolution
on both the spatial and temporal dimension to extract a set of features that are
usedforclassifyinganomaliesviagraphclassification.Toevaluatethemethod,a
cloudsystemtogetherwithtwoapplicationshostedwithinanIaaSservicemodel
were deployed. Synthetic injections of anomalies provided the required ground
truth for evaluation. TELESTO was able to outperform two state of the art
GCNNs, revealed promising results for anomaly classification and thus, is able
to detect reoccurring anomalies in services deployed in cloud environments.
For future work we want to examine ways to encode temporal information
from preceding graphs for the classification of subsequent graphs. Further, dif-
ferent time series augmentation methods can be tested to synthetically increase
the amount of data.
References
1. Bodik,P.,Goldszmidt,M.,Fox,A.,Woodard,D.B.,Andersen,H.:Fingerprinting
the datacenter: automated classification of performance crises. In: Proceedings of
the 5th European conference on Computer systems (2010)
2. Cheng, M., Li, Q., Lv, J., Liu, W., Wang, J.: Multi-scale lstm model for bgp
anomaly classification. IEEE Trans. Serv. Comput. (2018)
3. Clevert,D.,Unterthiner,T.,Hochreiter,S.:Fastandaccuratedeepnetworklearn-
ingbyexponentiallinearunits(elus).In:4thInternationalConferenceonLearning
Representations, ICLR 2016, Conference Track Proceedings (2016)
4. Dang,Y.,Lin,Q.,Huang,P.:Aiops:real-worldchallengesandresearchinnovations.
In: IEEE/ACM 41st International Conference on Software Engineering: Compan-
ion Proceedings (ICSE-Companion). IEEE (2019)
5. Du, J., Zhang, S., Wu, G., Moura, J.M.F., Kar, S.: Topology adaptive graph con-
volutional networks. arXiv preprint arXiv:1710.10370 (2017)
6. Fawaz, H.I., et al.: Inceptiontime: finding alexnet for time series classification.
Data Min. Knowl. Disc. 34, 1936–1962 (2020). https://doi.org/10.1007/s10618-
020-00710-y
226 D. Scheinert and A. Acker
7. Fey,M.,Lenssen,J.E.:Fastgraphrepresentationlearningwithpytorchgeometric.
arXiv preprint arXiv:1903.02428 (2019)
8. Glorot, X., Bengio, Y.: Understanding the difficulty of training deep feedforward
neural networks. In: Proceedings of the Thirteenth International Conference on
Artificial Intelligence and Statistics (2010)
9. Gulenko,A.,Wallschl¨ager,M.,Schmidt,F.,Kao,O.,Liu,F.:Asystemarchitecture
for real-time anomaly detection in large-scale nfv systems. Procedia Comput. Sci.
94, 491–496 (2016)
10. He,K.,Zhang,X.,Ren,S.,Sun,J.:Deepresiduallearningforimagerecognition.In:
ProceedingsoftheIEEEConferenceonComputerVisionandPatternRecognition
(2016)
11. Ioffe, S., Szegedy, C.: Batch normalization: accelerating deep network training by
reducinginternalcovariateshift.In:InternationalConferenceonMachineLearning
(2015)
12. Kaj´o, M., Nov´aczki, S.: A genetic feature selection algorithm for anomaly classi-
ficationinmobilenetworks.In:19thInternationalICINconference-Innovationsin
Clouds, Internet and Networks (2016)
13. Karim,F.,Majumdar,S.,Darabi,H.,Chen,S.:Lstmfullyconvolutionalnetworks
for time series classification. IEEE access 6, 1662–1669 (2017)
14. Kingma, D.P., Ba, J.: Adam: a method for stochastic optimization. In: 3rd Inter-
national Conference on Learning Representations, ICLR 2015, Conference Track
Proceedings (2015)
15. Kipf, T.N., Welling, M.: Semi-supervised classification with graph convolutional
networks. In: 5th International Conference on Learning Representations, ICLR
2017, Conference Track Proceedings (2017)
16. Li, Y., Tarlow, D., Brockschmidt, M., Zemel, R.S.: Gated graph sequence neural
networks. In: 4th International Conference on Learning Representations, ICLR
2016, Conference Track Proceedings (2016)
17. Nedelkoski,S.,Cardoso,J.,Kao,O.:Anomalydetectionfromsystemtracingdata
using multimodal deep learning. In: 2019 IEEE 12th International Conference on
Cloud Computing (CLOUD). IEEE (2019)
18. Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I., Salakhutdinov, R.:
Dropout:asimplewaytopreventneuralnetworksfromoverfitting.J.Mach.Learn.
Res. 15(1), 1929–1958 (2014)
19. Vaswani, A., et al.: Attention is all you need. In: Advances in Neural Information
Processing Systems (2017)
20. Veliˇckovi´c,P.,Cucurull,G.,Casanova,A.,Romero,A.,Li`o,P.,Bengio,Y.:Graph
attention networks. In: International Conference on Learning Representations
(2018)
21. Wetzig, R., Gulenko, A., Schmidt, F.: Unsupervised anomaly alerting for iot-
gatewaymonitoringusingadaptivethresholdsandhalf-spacetrees.In:2019Sixth
International Conference on Internet of Things: Systems, Management and Secu-
rity (IOTSMS). IEEE (2019)
22. Wu, L., Tordsson, J., Elmroth, E., Kao, O.: Microrca: root cause localization of
performanceissuesinmicroservices.In:IEEE/IFIPNetworkOperationsandMan-
agement Symposium (NOMS) (2020)
23. Xu,K.,Hu,W.,Leskovec,J.,Jegelka,S.:Howpowerfularegraphneuralnetworks?
In: 7th International Conference on Learning Representations, ICLR 2019 (2019)
TELESTO: A Graph Neural Network Model for Anomaly Classification 227
24. Xu, K., Li, C., Tian, Y., Sonobe, T., Kawarabayashi, K., Jegelka, S.: Representa-
tion learning on graphs with jumping knowledge networks. In: Proceedings of the
35th International Conference on Machine Learning, ICML 2018. Proceedings of
Machine Learning Research, vol. 80. PMLR (2018)
25. Zhang, S., Tong, H., Xu, J., Maciejewski, R.: Graph convolutional networks: a
comprehensive review. Comput. Soc. Netw. 6(1), 1–23 (2019)
26. Zhao,L.,Song,Y.,Zhang,C.,Liu,Y.,Wang,P.,Lin,T.,Deng,M.,Li,H.:T-gcn:
a temporal graph convolutional network for traffic prediction. IEEE Trans. Intell.
Transp. Syst. 21(9), 3848–3858 (2019)
Discovering Alarm Correlation Rules
for Network Fault Management
B
Philippe Fournier-Viger1( ) , Ganghuan He1, Min Zhou2,
Mourad Nouioua1,3, and Jiahong Liu1
1 Harbin Institute of Technology (Shenzhen), Shenzhen, China
2 Huawei Noah’s Ark Lab, Shenzhen, China
PI:EMAIL
3 University of Bordj Bou Arreridj, El Anceur, Algeria
Abstract. Faultmanagementiscriticaltotelecommunicationnetworks.
It consists of detecting, diagnosing, isolating and fixing network prob-
lems, a task that is time-consuming. A promising approach to improve
faultmanagementistofindpatternsrevealingtherelationshipsbetween
network alarms, to then only show the most important alarms to net-
workoperators.However,alimitationofcurrentalgorithmsofthistype
is that they ignore the network topology. But the network topology is
importanttounderstandhowalarmspropagateonanetwork.Thispaper
addresses this issue by modeling a real-life telecommunication network
as a dynamic attributed graph and then extracting correlation patterns
between network alarms called Alarm Correlation Rules. Experiments
on a large telecommunication network show that interesting patterns
are found that can greatly compress the number of alarms presented to
network operators, which can reduce network maintenance costs.
· ·
Keywords: Faultmanagement Dynamicgraph Correlationpatterns
1 Introduction
Intoday’ssociety,telecommunicationnetworksarekeytosupportpersonalcom-
munications as well as those of businesses and other organizations. To ensure
theproperoperationoflargetelecommunicationnetworks,acrucialtaskisfault
management, which consists of detecting, diagnosing, isolating and fixing net-
work problems. The purpose of fault management is to preserve network avail-
ability,security,reliabilityandoptimizeitsperformance[1].However,akeyissue
withfaultmanagementforlargeandheterogeneoustelecommunicationnetworks
(e.g. covering cities) is that millions of alarms may be generated by network
devices,andthatthenumberoftechniciansorbudgetformaintaininganetwork
is limited [3]. Thus, it is easy for technicians to be overloaded with thousands of
alarmsandbeingunabletoinvestigateallofthem.Forexample,thetelecommu-
nicationnetworkofamedium-sizedcitytypicallycontainsmultipledevicetypes
where some devices may produce more than 300 different alarms. The alarms
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.228–239,2021.
https://doi.org/10.1007/978-3-030-76352-7_24
Discovering Alarm Correlation Rules 229
arerecordedbyeachnetworkdeviceandcanbestoredcentrallyandanalyzedto
supportfaultmanagement.Moreover,dataisalsocollectedaboutQPIs(Quality
Performance Indicators) of each network device over time. For network experts,
understanding the relationships between alarms is not easy because faults are
often caused by complex interactions between network devices.
To improve fault management, some expert systems were designed that rely
onaknowledgebasecreatedbyhandtofindthecausesofnetworkproblems[2].
But this approach is costly, time consuming, prone to errors and cannot adapt
tochanges.Asanalternative,anemergingapproachistorelyonpatternmining
techniques to automatically discover relationships between alarms in alarm logs
and then to hide (compress) alarms that are correlated with previous alarms
[3–7]. It was shown that this can greatly reduce the number of alarms presented
to network operators and thus reduce maintenance costs. But such approaches
generally represent alarm log data as a sequence of alarms and the network
topology is ignored [3–7]. But the topology is important to understand how
alarms propagate on a network.
A promising research direction is thus to consider the network topology as a
dynamicgraphandtoextractricherandmorecomplexpatternsfromittoreveal
complextemporalrelationshipsbetweenalarms.Though,severalalgorithmshave
been proposed to mine patterns in dynamic graphs, none is specifically designs
for alarm analysis [16–19]. To find more complex relationships between alarms
basedonthenetworktopology,thispapermodelsalarmsdataasanetwork(i.e.
adynamicgraph)whereverticesaredevicesandedgesarecommunicationlinks.
Moreover, alarms are viewed as spreading following the information flow (which
depends on the topology) and where QPIs are represented as attributes of net-
work devices. From this representation, this paper proposes to extract a novel
type of patterns called Alarm Correlation Rules using a novel correlation mea-
sure named ACOR (Alarm CORrelation). An experimental evaluation with real
datafromalargetelecommunicationnetworkshowsthattheproposedrulescan
provide greater alarm compression than the state-of-the-art AABD system [3].
The paper is organized as follows. Section2 reviews related work. Section3
presents the proposed framework. Then, Sect.4 describes results obtained for a
large scale telecommunication network. Finally, Sect.5 draws a conclusion.
2 Related Work
Todiscoverrelationshipsbetweenalarmsintelecommunicationnetworks,several
studies have applied pattern mining techniques [3–7] such as association rule
mining [11] episode mining [8–10] and sequential pattern mining (SPM) [12,13].
The first system to discover alarm patterns is TASA (Telecommunication
Alarm Sequence Analyzer) [5,6]. It takes as input a sequence of alarms with
timestamps and applies an episode mining algorithm to find alarms that fre-
quently appear together within a sliding window. Moreover, TASA offers a sep-
arate module that applies association rule mining to find sets of properties that
are common to alarm occurrences (while ignoring time). TASA was applied to
data from several telecommunication service providers.
230 P. Fournier-Viger et al.
Lozonavu et al. [7] proposed a system for mining alarm patterns that first
partitionstheinputalarmsequenceintoasetofsequencessuchthatalarmshav-
ing close timestamps are grouped together. Then, a SPM algorithm is applied
to find all subsequences of alarms appearing in many of those sequences. Pat-
ternsarethenusedtogenerateagraphindicatingrelationshipsbetweenalarms,
where the confidence (conditional probability) that an alarm precedes another
is calculated. This visualization can help network operators to understand the
relationships between alarms. The system was applied to a 3G mobile network.
Wangetal.[3]proposedasystemcalledAABD(AutomaticAlarmBehavior
Discovery). This system first filters out invalid alarms (e.g. with missing times-
tamps) and transient alarms (that appear only for a short time) from the input
alarm sequence. Then, the most frequent alarms are identified and the input
sequenceispartitionedbasedonthesealarms.Then,aSPM[12,13]algorithmis
applied to find frequent alarm sequences. These patterns are then used to gen-
eraterulesindicatingthatanalarmmaybecausedbyanotheralarmtoperform
alarm compression (reduce the number of alarms presented to network opera-
tors). AABD achieved good compression for alarms of a real telecommunication
network where it was shown that this approach based on transient alarm detec-
tioncanreducethenumberofalarmspresentedtooperatorsbymorethan84%.
But the rule generation process of AABD relies on a knowledge base provided
by domain expert, which is time-consuming to create and maintain.
An alarm management system adopting a similar approach was designed by
Rau´l et al. [4]. It takes as input an alarm sequence with time where alarms
have attributes. A modified SPM algorithm was applied to extract sequences of
alarms frequently appearing in a sliding-window. Patterns are selected based on
threemeasuresthatarethesupport,confidenceandlift.Thesystemwasapplied
to data from a large Portugese telecommunication company and patterns were
used to reduce the number of alarms presented to the user by up to 70%.
The above pattern mining approaches to study network alarms are useful
but handle simple data types, that is mostly discrete sequences where alarms
areviewedaseventsthathavesomeattributevaluesandtimestamps.Toextract
patterns that consider the network topology and provide different insights, this
paperconsidersamorecomplexdatarepresentationbyaddingthespatialdimen-
sion(thenetworktopology)tothepatternminingprocess.Thenetworkisviewed
as a dynamic graph where alarms are spreading along edges (communication
links) between vertices (network devices) to find spatio-temporal patterns.
3 The Proposed Framework
This section presents the proposed framework for discovering alarm correlation
rules and performing alarm compression. This framework is illustrated in Fig.1.
It consists of three main steps: (1) obtaining and pre-processing alarm and net-
work topology data, (2) extracting alarm correlation rules from it, and (3) uti-
lizing the rules to select alarms to be presented to the user. These three steps
are described in details in the next paragraphs.
Discovering Alarm Correlation Rules 231
1) Obtaining and preparing data 2) Extracting alarm 3)Alarmcompression
correlationrules
Single element heterogeneous mapping Alarm
graph stream
correlation
Historical Pre-processing analysis
alarm data
Cross element
Attributed correlation
graph analysis
Construct static
Topology heterogeneous Cross domain
data graph correlation Send remaining alarms
analysis to network center
Fig.1. The proposed alarm discovery and compression framework
Step 1. Obtaining and Preparing the Data. In previous studies, histor-
ical alarm logs were analyzed to find patterns involving multiple alarms. But
most studies represent alarms log data as a sequence of alarms ordered by time.
Because these studies ignore the network topology, it may lead to obtaining
imprecise results or ignoring some important underlying patterns. In this work,
we make the observation that telecommunication alarm data can be naturally
modeled as a network (a dynamic graph) in which alarms can spread following
the information flow. Thus, we not only consider the historical alarm log but
also the network topology. The following paragraphs describes how these two