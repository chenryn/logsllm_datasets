My issue is about scipy.signal.medfilt(values, window). It works perfectly
between values[(window+1)/2 : -(window+1)/2]. Near the edges it returns a
ascending sorted list of values at the beginning and descending sorted list of
values at the end.
This should be _either_ metioned in the document _or_ fixed as a proper
median.
The input list at the example below:  
`values = [0,1,1,0.8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1]`
**should produce** (assuming nanmedian behavior for values outside the list):
0: median([nan, nan, nan,0,1,1,0.8]) = (0.8+1)/2 = 0.9  
1: median([nan,nan,0,1,1,0.8,1]) = 1  
2: median([nan,0,1,1,0.8,1,1) = 1  
3: median([0,1,1,0.8,1,1,1]) = 1  
4: median([1,1,1,0.8,1,1,1]) = 1
The output should thus start as [0.9,1,1,1,1,1,...]
**alternatively** if the window size is reduced when approaching the edge:
0: median([0]) = 0  
1: median([0,1) = 0.5  
2: median([0,1,1]) = 1  
3: median([0,1,1,0.8]) =(0.8+1)/2 = 0.9  
4: median([0,1,1,0.8,1]) = 1.0
The output should then start [0,0.5,1,0.9,1,1,1,1,1,...]
**Instead the actual output** start is [0,0.8,1,1,...] which is a sorted list
of first 4 elements.
The same happens at the end.
This current output is perfectly ok _if_ it would be mentioned in the
documentation. For example: "Medfilt returns the median with a running window
when index is greater than (window+1)/2. The beginning of the output is the
ascending list of input values upto the (window+1)/2. Behavior is the same
near the end of the input list but with descending input values from indices -
(window+1)/2"
#### Reproducing code example:
    from scipy.signal import medfilt 
    values = [0,1,1,0.8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1]
    print(medfilt(values,7))
#### Scipy/Numpy/Python version information:
Python 3.8 64bit
    1.4.0 1.17.4 sys.version_info(major=3, minor=8, micro=0, releaselevel='final', serial=0)
Python 2.7 32bit
    ('1.2.2', '1.15.4', sys.version_info(major=2, minor=7, micro=15, releaselevel='final', serial=0))