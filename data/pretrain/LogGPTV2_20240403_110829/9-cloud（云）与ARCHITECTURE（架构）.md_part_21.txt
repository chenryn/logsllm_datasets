192.168.1.66 kibana
192.168.1.67 logstash
2）安装java-1.8.0-openjdk和logstash
\[root@logstash \~\]# yum -y install java-1.8.0-openjdk
\[root@logstash \~\]# yum -y install logstash
\[root@logstash \~\]# java -version
openjdk version \"1.8.0_131\"
OpenJDK Runtime Environment (build 1.8.0_131-b12)
OpenJDK 64-Bit Server VM (build 25.131-b12, mixed mode)
\[root@logstash \~\]# touch /etc/logstash/logstash.conf
\[root@logstash \~\]# /opt/logstash/bin/logstash \--version
logstash 2.3.4
\[root@logstash \~\]# /opt/logstash/bin/logstash-plugin list //查看插件
\...
logstash-input-stdin //标准输入插件
logstash-output-stdout //标准输出插件
\...
\[root@logstash \~\]# vim /etc/logstash/logstash.conf
input{
stdin{
}
}
filter{
}
output{
stdout{
}
}
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
//启动并测试
Settings: Default pipeline workers: 2
Pipeline main started
aa //logstash 配置从标准输入读取输入源,然后从标准输出输出到屏幕
2018-09-15T06:19:28.724Z logstash aa
备注：若不会写配置文件可以找帮助，插件文档的位置：
https://github.com/logstash-plugins
3）codec类插件
\[root@logstash \~\]# vim /etc/logstash/logstash.conf
input{
stdin{
codec =\> \"json\" //输入设置为编码json
}
}
filter{
}
output{
stdout{
codec =\> \"rubydebug\" //输出设置为rubydebug
}
}
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
Settings: Default pipeline workers: 2
Pipeline main started
{\"a\":1}
{
\"a\" =\> 1,
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T06:34:14.538Z\",
\"host\" =\> \"logstash\"
}
4）file模块插件
\[root@logstash \~\]# vim /etc/logstash/logstash.conf
input{
file {
path =\> \[ \"/tmp/a.log\", \"/var/tmp/b.log\" \]
sincedb_path =\> \"/var/lib/logstash/sincedb\" //记录读取文件的位置
start_position =\> \"beginning\" //配置第一次读取文件从什么地方开始
type =\> \"testlog\" //类型名称
}
}
filter{
}
output{
stdout{
codec =\> \"rubydebug\"
}
}
\[root@logstash \~\]# touch /tmp/a.log
\[root@logstash \~\]# touch /var/tmp/b.log
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
另开一个终端：写入数据
\[root@logstash \~\]# echo a1 \> /tmp/a.log
\[root@logstash \~\]# echo b1 \> /var/tmp/b.log
之前终端查看：
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
Settings: Default pipeline workers: 2
Pipeline main started
{
\"message\" =\> \"a1\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T06:44:30.671Z\",
\"path\" =\> \"/tmp/a.log\",
\"host\" =\> \"logstash\",
\"type\" =\> \"testlog\"
}
{
\"message\" =\> \"b1\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T06:45:04.725Z\",
\"path\" =\> \"/var/tmp/b.log\",
\"host\" =\> \"logstash\",
\"type\" =\> \"testlog\"
}
5）tcp、udp模块插件
\[root@logstash \~\]# vim /etc/logstash/logstash.conf
input{
file {
path =\> \[ \"/tmp/a.log\", \"/var/tmp/b.log\" \]
sincedb_path =\> \"/var/lib/logstash/sincedb\"
start_position =\> \"beginning\"
type =\> \"testlog\"
}
tcp {
host =\> \"0.0.0.0\"
port =\> \"8888\"
type =\> \"tcplog\"
}
udp {
host =\> \"0.0.0.0\"
port =\> \"9999\"
type =\> \"udplog\"
}
}
filter{
}
output{
stdout{
codec =\> \"rubydebug\"
}
}
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
//启动
另开一个终端查看，可以看到端口
\[root@logstash tmp\]# netstat -antup \| grep 8888
tcp6 0 0 :::8888 :::\* LISTEN 22191/java
\[root@logstash tmp\]# netstat -antup \| grep 9999
udp6 0 0 :::9999 :::\* 22191/java
在另一台主机上写一个脚本，发送数据，使启动的logstash可以接收到数据
\[root@se5 \~\]# vim tcp.sh
function sendmsg(){
if \[\[ \"\$1\" == \"tcp\" \]\];then
exec 9\/dev/tcp/192.168.1.67/8888
else
exec 9\/dev/udp/192.168.1.67/9999
fi
echo \"\$2\" \>&9
exec 9\ \"is tcp test\\n\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T07:45:00.638Z\",
\"type\" =\> \"udplog\",
\"host\" =\> \"192.168.1.65\"
}
{
\"message\" =\> \"is tcp ss\\n\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T07:45:08.897Z\",
\"type\" =\> \"udplog\",
\"host\" =\> \"192.168.1.65\"
}
6）syslog插件练习
\[root@logstash \~\]# systemctl list-unit-files \| grep syslog
rsyslog.service enabled
syslog.socket static
\[root@logstash \~\]# vim /etc/logstash/logstash.conf
start_position =\> \"beginning\"
type =\> \"testlog\"
}
tcp {
host =\> \"0.0.0.0\"
port =\> \"8888\"
type =\> \"tcplog\"
}
udp {
host =\> \"0.0.0.0\"
port =\> \"9999\"
type =\> \"udplog\"
}
syslog {
port =\> \"514\"
type =\> \"syslog\"
}
}
filter{
}
output{
stdout{
codec =\> \"rubydebug\"
}
}
另一个终端查看是否检测到514
\[root@logstash \~\]# netstat -antup \| grep 514
tcp6 0 0 :::514 :::\* LISTEN 22728/java
udp6 0 0 :::514 :::\* 22728/java
另一台主机上面操作,本地写的日志本地可以查看
\[root@se5 \~\]# vim /etc/rsyslog.conf
local0.info /var/log/mylog //自己添加这一行
\[root@se5 \~\]# systemctl restart rsyslog //重启rsyslog
\[root@se5 \~\]# ll /var/log/mylog //提示没有那个文件或目录
ls: cannot access /var/log/mylog: No such file or directory
\[root@se5 \~\]# logger -p local0.info -t nsd \"elk\" //写日志
\[root@se5 \~\]# ll /var/log/mylog //再次查看，有文件
-rw\-\-\-\-\-\-- 1 root root 29 Sep 15 16:23 /var/log/mylog
\[root@se5 \~\]# tail /var/log/mylog //可以查看到写的日志
Sep 15 16:23:25 se5 nsd: elk
\[root@se5 \~\]# tail /var/log/messages
//可以查看到写的日志，因为配置文件里有写以.info结尾的可以收到
\...
Sep 15 16:23:25 se5 nsd: elk
把本地的日志发送给远程1.67
\[root@se5 \~\]# vim /etc/rsyslog.conf
local0.info \@192.168.1.67:514
//写一个@或两个@@都可以，一个@代表udp，两个@@代表tcp
\[root@se5 \~\]# systemctl restart rsyslog
\[root@se5 \~\]# logger -p local0.info -t nds \"001 elk\"
\[root@logstash bin\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
//检测到写的日志
{
\"message\" =\> \"001 elk\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-05T09:15:47.000Z\",
\"type\" =\> \"syslog\",
\"host\" =\> \"192.168.1.65\",
\"priority\" =\> 134,
\"timestamp\" =\> \"Jun 5 17:15:47\",
\"logsource\" =\> \"kibana\",
\"program\" =\> \"nds1801\",
\"severity\" =\> 6,
\"facility\" =\> 16,
\"facility_label\" =\> \"local0\",
\"severity_label\" =\> \"Informational\"
}
rsyslog.conf配置向远程发送数据，远程登陆1.65的时侯，把登陆日志的信息（/var/log/secure）转发给logstash即1.67这台机器
\[root@se5 \~\]# vim /etc/rsyslog.conf
57 authpriv.\* @@192.168.1.67:514
//57行的/var/log/secure改为@@192.168.1.67:514
\[root@se5 \~\]# systemctl restart rsyslog
\[root@logstash \~\]# /opt/logstash/bin/logstash -f
/etc/logstash/logstash.conf
//找一台主机登录1.65，logstash主机会有数据
Settings: Default pipeline workers: 2
Pipeline main started
{
\"message\" =\> \"Accepted password for root from 192.168.1.254 port
33780 ssh2\\n\",
\"@version\" =\> \"1\",
\"@timestamp\" =\> \"2018-09-15T08:40:57.000Z\",
\"type\" =\> \"syslog\",
\"host\" =\> \"192.168.1.65\",
\"priority\" =\> 86,
\"timestamp\" =\> \"Sep 15 16:40:57\",
\"logsource\" =\> \"se5\",
\"program\" =\> \"sshd\",
\"pid\" =\> \"26133\",
\"severity\" =\> 6,
\"facility\" =\> 10,
\"facility_label\" =\> \"security/authorization\",
\"severity_label\" =\> \"Informational\"
}
{
\"message\" =\> \"pam_unix(sshd:session): session opened for user root
by (uid=0)\\n\",
\"@version\" =\> \"1\",