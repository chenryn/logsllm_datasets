nally runs our proposed algorithm in Section 5.6 on the smoothed
mobility traces to assign the M sensing tasks. As discussed, each
task can be divided into a number of subtasks at different locations
in the desired sensing region. Each mobile participant receives ei-
ther zero or one subtask assignment, and he may accept or decline
the assignment (e.g., when the subtask location is too far from his
2For example, Google Now continuously tracks users’ locations
and display relevant information to users in the form of “cards”
[26].
Center of the 
sensing region
A
B
Center of the 
sensing region
Original 
trace
Perturbed 
trace
Figure 4: The DPSense framework.
original route). A sensing task is completed if the number of mo-
bile participants accepting the subtask assignment is no less than
the predeﬁned diversity order. Each participant could be granted
some monetary rewards or reputation points that are proportional
to the distance he has to travel to perform the sensing task. How
the participants are actually rewarded is orthogonal to this paper.
5.2 Generating Differentially Private Mobili-
ty Traces
We use the location release algorithm in [27] which is based
on Markov inference and the planar isotropic mechanism (PIM).
The algorithm accepts a true mobility trace as input and outputs a
perturbed mobile trace that satisﬁes differential privacy on the δ-
location set. Speciﬁcally, the algorithm sequentially perturbs each
location in the mobility trace through the following steps.
• First, prior probabilities are derived using posterior probabil-
ities and the matrix M t based on the Markov model.
• Second, a δ-location set is generated to identify the set con-
taining the minimum number of locations that have prior
probability sum no less than 1 − δ.
• Third, the location at the current timestamp is perturbed by
adding a noise generated using PIM based on the K-norm
mechanism.
• Fourth, location inference is conducted based on the output
perturbed location to update the posterior probability of the
user in each location of the δ-location set.
It is proved in [27] that the algorithm guarantees differential priva-
cy. We subsequently call the perturbed mobility trace as the PIM
trace and refer interested readers to [27] for detailed illustrations.
5.3 Smoothing Perturbed Mobile Traces
Since the SSP can only use the perturbed mobility trace for task
assignment, it is intuitive that the closer the perturbed trace is to
the original location trace, the more accurate the SSP can estimate
299Table 1: Summary of Notation
Symbol Deﬁnition
N
M
Tj
ts
j
Rj
div∗
j
Sj,k
nj
Li
γ
li,κ
ti,κ
Lo
i
Lh
i
lo
i,κ
lh
i,κ
μ
α
β
Total number of participants
Total number of sensing tasks
The jth sensing task
Sensing timestamp for task Tj
Sensing region for task Tj
Desired sensing diversity order for Tj
Sensing sub-task set
Number of subtasks for task Tj
True mobility trace of participant i
Number of timestamps for each mobility trace
The κth location in Li
The κth timestamp in Li
PIM trace of participant i
Smoothed PIM trace of participant i
The κth location in Lo
i
The κth location in Lh
i
Size of the sliding window
Distance weight ratio
Diversity order multiplicator
i=1 and sliding window size μ.
i }N
i=1.
i ← ∅.
Lh
for all κ ∈ {(cid:11)μ/2(cid:12) + 1, . . . , γ − (cid:11)μ/2(cid:12)} do
Algorithm 1 PIM Traces Smoothing
Input: A set of PIM traces {Lo
i}N
Output: A set of smoothed traces {Lh
1: for all i ∈ {1, . . . , N} do
2:
3:
4:
5:
end for
6:
7: end for
8: return {Lh
(cid:3)κ+(cid:5)μ/2(cid:6)
(cid:4){(lh
x=κ−(cid:5)μ/2(cid:6) lo
i,κ, ti,κ)}
lh
i,κ = 1
μ
i ← Lh
Lh
i }N
i=1.
i,x
i
each participant’s travel cost, and the higher probability that the
sensing task can be completed while ensuring differential location
privacy to mobile participants. It is therefore essential to reduce the
negative impact the noise added to the mobility trace. Recall that
for the original location at each timestamp, noise is generated in the
isotropic space using the K-norm mechanism. The probability of
generating noise of a certain value and the probability of generating
noise of the exact inverse value are the same. By averaging multiple
consecutive locations, the deviation of the averaged location to the
original true location could be smaller in contrast to the difference
between the disturbed location to the original true location. When
the noise amplitude is large, the average could reduce the negative
impact introduced due to the noise.
Based on the above intuition, we propose to smooth each us-
er’s differentially private mobility trace using a sliding window and
assign tasks based on smoothed location traces. Speciﬁcally, we
deﬁne the size of the sliding window as μ, where μ is an odd in-
teger and system parameter. For each timestamp, we generate a s-
moothed location as the average of the previous consecutive (cid:11)μ/2(cid:12)
PIM locations, the current PIM location, and the next consecutive
(cid:11)μ/2(cid:12) PIM locations. The details of the smoothing algorithm are
summarized in Algorithm 1. We will show in our simulations the
effectiveness of the sliding window and the impact of μ.
5.4 Accepting/Declining Task Assignments
Participants may accept or decline an assigned sensing task for
various reasons. We now introduce a model to characterize the
probability that an assigned task is accepted, which takes into ac-
count of both the physical travel distance and potential wait time.
We ﬁrst consider the impact of physical travel distance. Accord-
ing to our system model in Section 2.2, each task Tj includes Rj as
j as the sensing time period, and div∗
the physical sensing region, ts
j
as the targeted diversity order. The SSP further divides Tj into nj
subtasks {Sj,k}nj
k=1, respectively. Consider
subtask Sj,k and participant i as an example. Let Li be participant
i’s true mobility trace and v be the average speed. For participant
i to travel from location li,κ at time ti,κ to perform subtask Sj,k at
sensing location ls
j,k, the time of arrival at the sensing location is
subject to the following condition,
k=1 at locations {ls
j,k}nj
j − ti,κ),
where dist(·,·) denotes the Euclidian distance.
j,k) ≤ v(ts
dist(li,κ, ls
(4)
We then consider the participant’s potential waiting time. In par-
ticular, participant i may arrive at the sensing location ls
j,k early. If
he needs to wait for a long time period to perform the task, he may
reject the task at the very beginning. We therefore deﬁne synthetic
distance to jointly consider the travel distance and the waiting time
for a given sensing task, which is computed as
dist∗
=
(li,κ, ls
⎧⎪⎪⎨⎪⎪⎩dist(li,κ, ls
αv(ts
αdist(li,κ, ls
∞
j,k)
j,k)+
j − ti,κ)−
j,k)
if dist(li,κ, ls
j,k) ≤ v(ts
j − ti,κ),
(5)
otherwise.
Synthetic distance deﬁned above essentially converts the waiting
time into additional travel distance. The system parameter α indi-
cates the weight of the waiting-time equivalent distance versus that
of the true travel distance. Since simply waiting generally involves
less effort in comparison with the actual travel, it is reasonable to
require that α ≤ 1.
We use a simple linear distribution model to characterize the
probability that participant i will accept subtask Sj,k. Let the MTD
be the maximal travel distance within which a participant is will-
ing to travel to perform a sensing task, which can be obtained from
historical data [14]. Similar to [23], we calculate the probability
that participant i will accept subtask Sj,k at sensing location ls
j,k
by departing from li,κ at time ti,κ as
Pr[Pi ← Sj,k|ti,κ]
1 − dist∗(li,κ,ls
MTD
j,k)
(cid:9)
=
0
(li,κ, ls
j,k)  0 do
dist∗
(li∗,κ∗ , ls
min{dist∗
j,k∗ ← 1;.
bi∗,κ∗