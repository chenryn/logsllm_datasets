title:Modeling Privacy and Tradeoffs in Multichannel Secret Sharing Protocols
author:Devin J. Pohly and
Patrick D. McDaniel
2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Modeling Privacy and Tradeoffs in Multichannel
Secret Sharing Protocols
Devin J. Pohly
SIIS Laboratory
Pennsylvania State University
University Park, PA 16802
Email: PI:EMAIL
Patrick McDaniel
SIIS Laboratory
Pennsylvania State University
University Park, PA 16802
Email: PI:EMAIL
Abstract—Privacy is an important aspect of network commu-
nications, but privacy protocols require an investment of network
resources. For any such protocol to be of use, we need to
understand quantitatively how much privacy to expect, as well
as the tradeoff between privacy and other network properties,
for any given conﬁguration of networks and parameters. We
develop a practical privacy measure and protocol model for
multichannel secret sharing protocols which integrates privacy
and measurable network properties, deriving optimality results
for the overall privacy and performance of these protocols. After
proving these results, we evaluate the effectiveness of our model
by providing a reference implementation and comparing its
behavior to the optimality results derived from the model. In
our benchmarks, the behavior of this proof-of-concept protocol
matched that which is predicted by our model; furthermore, our
results demonstrate the feasibility of implementing secret sharing
protocols which transmit at a rate within 3–4% of optimal. This
model and its results allow us to understand quantitatively the
tradeoffs between privacy and network performance in secret-
sharing based protocols.
I. INTRODUCTION
Online privacy is an ongoing battle between those who
wish to be discreet in their communications and those who
wish to surveil, monetize, and otherwise exploit the contents
and circumstances of these activities. ISPs, for example, are
situated to collect their users’ data easily, and we continue
to see examples of this privileged position being used to spy
on Internet activities [1]. Protecting privacy from adversarial
ISPs is a complex challenge involving both conﬁdentiality and
anonymity. To further complicate matters, the desired degree
of privacy and what can be sacriﬁced to gain it depend on
the context of the communication. For example, the need for
privacy when listening to streaming music is not so high as to
warrant signiﬁcant degradation. On the other hand, the degree of
privacy needed when organizing a grassroots protest against an
oppressive regime merits whatever reduction in performance
is necessary to protect the transmission and its sender. In
either case, limited network resources must be divided between
protecting privacy and improving performance.
It is therefore important that we understand the speciﬁc
privacy tradeoffs inherent in different protocols under various
conﬁgurations. Anonymity systems with well-understood trade-
offs include onion routers such as Tor and DC-nets such as
Dissent. Tor [2] provides low-latency anonymity based on a
model in which trafﬁc from different sources appears to come
from any of a variety of exit nodes, using encryption to hide
the identity of the parties involved. Its privacy and network
behavior have both been formally modeled so as to understand
the tradeoffs involved [3], [4]. Dissent [5], on the other hand,
invests more resources in privacy, sacriﬁcing the low latency
of Tor for a stronger information-theoretic anonymity model,
and understanding the DC-net approach formally has led to
improvements in its scalability [6]. Privacy in the form of
conﬁdentiality is typically provided by encryption via TLS
or IPsec, although these solutions are not always available or
practical. For example, a majority of trafﬁc on the modern
Web is served by content distribution networks (CDNs), which
break the end-to-end trust assumptions of TLS in such a way
that it is often simply not offered [7]. Multichannel secret
sharing protocols such as SMT [8] or MICSS [9] offer a highly
tunable solution, but the practical impact of their complexity
(as illustrated in Figure 1) has yet to be rigorously modeled.
In this paper, we address this with three major contributions:
• We deﬁne a rigorous privacy measure and protocol model
for multichannel secret sharing systems that quantify the
expected privacy and performance for any set of network
properties and protocol parameters.
• Given a formal speciﬁcation of the network properties
of the available channels, we use our model to derive
optimality results showing the maximal achievable privacy
and performance proﬁle of a given multichannel setup in
terms of privacy, loss, delay, and rate.
• We demonstrate the effectiveness of this model in ex-
pressing protocol behavior by developing a reference
implementation and collecting benchmarks which come
within 3–4% of the predicted optimal throughput in a
quiescent network.
II. BACKGROUND
A. Privacy Systems and Tradeoffs
Enforcing privacy in a public network always comes at a
cost. Hiding communications or the identities of those involved
adds performance and logistical overhead to otherwise fast and
simple communications. Privacy systems involve complexities
such as the encryption layers and additional hops of onion
978-1-4673-8891-7/16 $31.00 © 2016 IEEE
DOI 10.1109/DSN.2016.41
371
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:34 UTC from IEEE Xplore.  Restrictions apply. 
(a) TLS
(b) Tor
(c) Multichannel
Fig. 1: Why privacy and performance are complex to model for multichannel protocols vs. other privacy approaches
routing, or the grouping logic required to make DC-nets
scale [6]. Understanding the balance between privacy and other
factors in a given privacy system is therefore necessary when
developing, deploying, and using it.
One aspect of privacy systems is anonymity: protecting
the identity of the participants in a transmission. The most
widely deployed and researched anonymity system is the onion-
routing network Tor [2]. Tor is designed to provide anonymous
network communication for privacy-conscious users while
keeping latency to an acceptable minimum. In order to do
this, it must strike a number of balances between privacy
and performance, for example between improving latency and
deterring trafﬁc analysis attacks [10] or between long and
short path lengths [11]. To better understand the interplay of
these tradeoffs, research has created models to analyze the
performance of onion routing [12], [13] as well as the degree
of anonymity it provides [3], [14]. Other network anonymity
systems, such as Dissent [6] and Crowds [15], shift the balance
more heavily toward privacy, requiring further modeling and
research to improve performance.
Another important aspect of privacy systems and protocols
is protecting the conﬁdentiality of communications. As with
anonymity, this does not come for free. Even setting aside
practical setup costs—for instance, obtaining and maintaining
TLS certiﬁcates or an IPsec gateway—there are logistical
security problems. Consider that in today’s Internet, trafﬁc
is largely served by content distribution networks such as
Akamai and CloudFlare. These networks do not coexist well
with TLS. Sites must give the CDN permission to impersonate
them, either by giving away a private key or by authorizing
the CDN to add them as alternate names on the CDN’s own
certiﬁcates [7]. This lulls users into a false sense of security
by giving the appearance of end-to-end encryption. The easier
alternative, chosen by major sites such as the New York Times
and CNN, is not to provide transport security at all, leaving
their users’ privacy unprotected.
B. Secret Sharing and the One-Time Pad
First articulated by Frank Miller in 1882 [16], the one-
time pad has long been recognized as a strong technique for
achieving secrecy. It was among the ciphers examined by
Claude Shannon in his early works on information theory [17],
wherein he deﬁned perfect secrecy and proved that the one-
time pad (or “Vernam system”) is perfectly secure. In the same
work, he showed that achieving this property requires as many
bits of keying material as there is information in the message
itself. The distribution of this key is typically considered a
primary disadvantage of the one-time pad system.
Despite this property, perfect secrecy continues to be a topic
of interest. Shannon himself states, “Perfect secrecy systems
have a place in the practical picture—they may be used. . . where
the greatest importance is attached to complete secrecy.” A
signiﬁcant development on this front took place in 1979 with
the independent invention of secret sharing by Shamir [18]
and Blakley [19]. Secret sharing, like a one-time pad, provides
information-theoretically provable conﬁdentiality, but it allows
for parameterization of both the multiplicity m of shares
generated for each secret and the threshold k of shares required
to recover the secret. Blakley explores the similarities between
one-time pads and secret sharing in a subsequent paper [20],
proposing what he and colleague R. D. Dixon term the “courier
mode” of secret sharing. In this approach, each share is carried
by a different courier to its recipient, and the robustness of
the system can be described in terms of its parameters. The
maximum number of abnegations (lost couriers) which can be
tolerated is m − k, and the maximum number of betrayals to
the enemy before the secret is compromised is k− 1. Blakley’s
vision is that, one day, threshold schemes may be incorporated
into network protocols to provide both privacy protection and
resilience to loss.
C. Secure Multichannel Protocols
Blakley’s idea was later formulated by Dolev et al. [8] as the
problem of perfectly secure message transmission, in which a
sender must relay a message privately and reliably over multiple
wires. The original work focused on the degree of connectivity
necessary to achieve this. Further results were found which
deal with Byzantine adversaries using multicast channels [21],
[22] or minimize the number of exchanges required [23] or
total data transmitted [24]. These works model networks as
graphs, abstracting away performance characteristics such as
throughput and latency.
In the meantime, recent efforts from researchers and the
IETF have made multipath protocols a practical reality. These
protocols use several channels simultaneously, with the goal
of increasing performance and resiliency. Prominent among
current research and standardization efforts is the Multi-
Path TCP (MPTCP) transport protocol [25], which is already
seeing widespread use in mobile devices [26] and large data
centers [27]. These protocols exploit the multiplicity of the
channels themselves—the fact that there is more than one way
to transmit data between hosts—to improve communication.
372
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:34 UTC from IEEE Xplore.  Restrictions apply. 
There is, however, little work or analysis at the intersection
of these two areas, joining the ideas of perfectly secure message
transmission with the pragmatism of multipath protocols. The
MICSS protocol [9], for example, provides a ﬁrst step, but
it is limited in terms of its ﬂexibility. If perfect secrecy is to
ﬁnd a place in real networks, we must understand not only its
theoretical properties but how it affects quantities such as loss,
delay, and throughput.
III. DEFINITIONS AND MODEL
If we are to understand the overall behavior of a multichannel
secret sharing system, we must model each of the pieces
involved in its operation. We begin by expressing a threat
model in terms of risk metrics for each individual channel,
then deﬁne the overall privacy and performance properties
for which we derive optimal values. After establishing this
context, we model the system itself. There are two major parts
to this, which we will ﬁrst examine independently: the set of
channels which exist between endpoints, and the secret sharing
scheme used to protect the data. Finally, we use all of the above
deﬁnitions to model the protocol which ties them together.
A. Overall Threat and Performance Model
The purpose of a secret sharing protocol, like any mechanism
for conﬁdential communication, is to transmit data from sender
to receiver in the presence of a particular adversary. At a
high level, the sender gives the protocol a sequence of source
symbols x1x2x3 ··· , and the protocol conveys this sequence
to the receiver by transmitting share symbols y over various
channels. However, there is an adversary present who may
have the ability to eavesdrop on one or more of these channels.
We represent the adversarial presence as a vector (cid:2)z of risk
metrics estimated using network risk assessment techniques
(e.g. [28], [29]). Each component zi represents the likelihood
that the adversary can observe a share symbol as it is being
sent on channel i.
We are interested in four speciﬁc network properties which
are measured or estimated for each invididual channel in the
set C, and which we want to determine for the overall protocol:
• Privacy/Risk. As described above, the likelihood of an
adversary observing any given share on each channel
is modeled by the risk vector (cid:2)z. We will derive an
overall risk metric ZC. Closely related to our threat model,
this property represents the likelihood that the adversary
can learn an arbitrary source symbol by observing its
corresponding share symbols, given the individual zi for
each of the channels. The likelihood that any given data
is communicated conﬁdentially is then 1 − ZC.
• Loss. The lossiness vector (cid:2)l gives the probability for
each channel that a given share symbol does not reach
the receiver. Even if lost, the share may still have been
observed by an attacker. We will derive the overall
lossiness LC, that is, the probability that the number
of shares of a given source symbol that reach the receiver
is insufﬁcient to reconstruct that symbol.
• Delay. The delay vector (cid:2)d gives the expected amount of
time for each channel that elapses from the transmission
of a share symbol to its arrival at the receiver, assuming
it is not lost. This is the total network delay, i.e., half of
the round-trip time for the channel. We will derive the
overall delay DC, which is the expected amount of time
from the sending of a source symbol to its reconstruction
at the receiver. This will be affected by share loss as well.
• Rate. The rate vector (cid:2)r gives the maximum number of
share symbols which can be sent on each channel in one
unit time. We will derive the overall achievable rate RC,
which is the number of source symbols which can be sent
in one unit time over the entire channel set C. This is the
raw rate, not successful throughput, so it is independent
of losses on the channel.
Ideally, ZC, LC, and DC will be as low as possible and RC
will be as high as possible, but these properties cannot be fully
optimized simultaneously. Instead, we investigate how tunable
protocol parameters affect the balance among them, so that
these parameters can be chosen and adjusted accordingly.
B. Channel Set
One signiﬁcant part of a secret sharing protocol is the set of
channels between the communicating hosts. Each channel is a
distinct means of transferring data from one host to the other.
In the simplest case, this is a set of some n identical channels,
but the channels available in a realistic situation will typically
include some amount of diversity. We choose to assume the
latter for our model, as it is both the more practical and the
more general case. As we will see in Section IV, this introduces
more complexity in deriving optimality results, particularly for
the rate at which data can be sent.
We model the available network resources as a set C of
channels, where the number of channels n = |C|, and for each
channel i ∈ C the quadruple
(zi, li, di, ri) ∈ [0, 1] × [0, 1) × [0,∞) × (0,∞)
represents its individual properties, as deﬁned in Section III-A.
Note the speciﬁc ranges in this deﬁnition: the lossiness of a
channel is strictly less than 1, and the rate is strictly greater
than 0. In other words, any channel which has zero probability
of successfully transmitting shares is excluded from the set C.
For the purpose of this work, we assume that all of the
channels in use are disjoint. This of course will vary from
network to network, but it is a ﬁtting assumption here because
we are interested in characterizing optimal behavior. If two
channels overlap, the bottleneck may reduce their combined
throughput, and queueing and congestion may increase loss and
delay. In terms of privacy, an attacker who is able to eavesdrop
at a shared edge or vertex obtains data from multiple channels
with the same effort required to eavesdrop on a single channel,
leading to reduced privacy as well. The optimal case for all
four channel properties, therefore, is when the channels are
completely disjoint.
373
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:36:34 UTC from IEEE Xplore.  Restrictions apply. 
c1:
c2:
c3:
c1:
c2:
c3:
(a) μ = 1 and RC = 15
(b) μ = 1.5 and RC = 10
c1:
c2:
c3:
(c) μ = 2 and RC = 7,
c3 underutilized
c1:
c2:
c3:
(d) μ = 3 and RC = 3,
c2 and c3 underutilized
Fig. 2: Choosing M over one unit time to maximize rate with (cid:2)r = (3, 4, 8)
C. Secret Sharing Scheme and Protocol
The other signiﬁcant component of a secret sharing protocol