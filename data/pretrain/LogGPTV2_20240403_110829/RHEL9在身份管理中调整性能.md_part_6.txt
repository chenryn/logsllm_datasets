::: itemizedlist
-   [目录服务器 11
    性能调节指南](https://access.redhat.com/documentation/en-us/red_hat_directory_server/11/html/performance_tuning_guide/index){.link}
:::
:::
:::
[]{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html}
::: chapter
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm}第 7 章 调整 KDC 的性能 {.title}
:::
以下小节介绍了如何调整 Kerberos
密钥分发中心(KDC)的性能，该中心负责对用户、主机和服务进行身份验证。
::: section
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#proc_adjusting-the-length-of-the-kdc-listen-queue_assembly_adjusting-the-performance-of-the-kdc}调整 KDC 监听队列的长度 {.title}
:::
您可以通过在 `/var/kerberos/krb5kdc/kdc.conf`{.literal} 文件的
`[kdcdefaults]`{.literal} 部分中设置 `kdc_tcp_listen_backlog`{.literal}
选项来调整 KDC 守护进程的监听队列长度的大小。对于遇到大量 Kerberos
流量的一些 IdM 部署，默认值 `5`{.literal}
可能太低，但将此值设置为非常高。
::: informaltable
  ---------- --------------------
  默认值     `5`{.literal}
  有效范围   `1 - 10`{.literal}
  ---------- --------------------
:::
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/var/kerberos/krb5kdc/kdc.conf`{.literal} 文件。
2.  将 TCP 侦听后端设置为所需的值，如 `7`{.literal}。
    ``` literallayout
    [kdcdefaults]
     ...
     kdc_tcp_listen_backlog = 7
    ```
3.  保存并关闭 `/var/kerberos/krb5kdc/kdc.conf`{.literal} 文件。
4.  重启 KDC 来加载新设置。
:::
:::
::: section
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#ref_options-controlling-kdc-behavior-per-realm_assembly_adjusting-the-performance-of-the-kdc}每个域控制 KDC 行为的选项 {.title}
:::
要跟踪每个 Kerberos 域的锁定和解锁用户帐户，KDC
每次成功和失败的身份验证后都会写入其数据库。通过调整
`/etc/krb5.conf`{.literal} 文件的 `[dbmodules]`{.literal}
部分中的以下选项，您可以通过最大程度地减少 KDC
写入信息的频率来提高性能。
::: variablelist
[disable_last_success]{.term}
:   如果设置为 `true`{.literal}，这个选项会阻止 KDC
    更新到需要预身份验证的主条目的
    `Last successful authentication`{.literal} 字段。
    ::: informaltable
      ---------- ---------------------------------------
      默认值     `false`{.literal}
      有效范围   `true`{.literal} 或 `false`{.literal}
      ---------- ---------------------------------------
    :::
[disable_lockout]{.term}
:   如果设置为 `true`{.literal}，这个选项会阻止 KDC 更新到
    `Last failed authentication`{.literal}，并且
    `Failed password 尝试`{.literal}
    预身份验证的主条目字段。设置此标志可能会提高性能，但禁用帐户锁定可能会被视为安全风险。
    ::: informaltable
      ---------- ---------------------------------------
      默认值     `false`{.literal}
      有效范围   `true`{.literal} 或 `false`{.literal}
      ---------- ---------------------------------------
    :::
:::
::: itemizedlist
**其它资源**
-   [根据每个域（realm）调整 KDC
    设置](#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#proc_adjusting-kdc-settings-per-realm_assembly_adjusting-the-performance-of-the-kdc "根据每个域（realm）调整 KDC 设置"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#proc_adjusting-kdc-settings-per-realm_assembly_adjusting-the-performance-of-the-kdc}根据每个域（realm）调整 KDC 设置 {.title}
:::
这个过程调整每个 Kerberos 域的 KDC 行为。
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/krb5.conf`{.literal} 文件。
2.  在 `[dbmodules]`{.literal} 部分以及相应的 Kerberos
    域中指定任何选项及其所需值。在本例中，您要为 `EXAMPLE.COM`{.literal}
    Kerberos 域设置 `disable_last_success`{.literal} 变量。
    ``` literallayout
    [dbmodules]
        EXAMPLE.COM = {
            disable_last_success = true
        }
    ```
3.  保存并关闭 `/etc/krb5.conf`{.literal} 文件。
4.  重启 KDC 来加载新设置。
:::
::: itemizedlist
**其它资源**
-   [每个域控制 KDC
    行为的选项](#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#ref_options-controlling-kdc-behavior-per-realm_assembly_adjusting-the-performance-of-the-kdc "每个域控制 KDC 行为的选项"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#adjusting-the-number-of-krb5kdc-processes_assembly_adjusting-the-performance-of-the-kdc}调整 `krb5kdc`{.literal} 进程的数量 {.title}
:::
这个步骤描述了如何手动调整密钥分发中心(KDC)开始处理进入的连接的进程数。
默认情况下，IdM 安装程序检测到 CPU 内核数，并在
`/etc/sysconfig/krb5kdc`{.literal}
文件中输入值。例如，该文件可能包含以下条目：
``` literallayout
KRB5KDC_ARGS='-w 2'
[...]
```
在这个示例中，当 `KRB5KDC_ARGS`{.literal} 参数设置为 `-w 2`{.literal}
时，KDC
会启动两个独立的进程，以处理与主进程的进入连接。您可能希望调整这个值，特别是在虚拟环境中，您可以轻松根据要求添加或删除虚拟
CPU 的数量。要防止性能问题甚至 IdM 服务器因为端口 88 上出现过 TCP/IP
队列造成无响应，请通过手动将 `KRB5KDC_ARGS`{.literal}
参数设置为更高的值来模拟更多进程。
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/sysconfig/krb5kdc`{.literal} 文件。
2.  指定 `KRB5KDC_ARGS`{.literal}
    参数的值。在这个示例中，您要将进程数设置为 10：
    ``` literallayout
    KRB5KDC_ARGS='-w 10'
    [...]
    ```
3.  保存并关闭 `/etc/sysconfig/krb5kdc`{.literal} 文件。
4.  重新载入 systemd 配置：
    ``` literallayout
    # systemctl daemon-reload
    ```
5.  重启 `krb5kdc`{.literal} 服务：
    ``` literallayout
    # systemctl restart krb5kdc.service
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_adjusting-the-performance-of-the-kdc_tuning-performance-in-idm.html#_additional_resources_3}其它资源 {.title}
:::
::: itemizedlist
-   [MIT Kerberos 文档 -
    kdc.conf](https://web.mit.edu/Kerberos/krb5-latest/doc/admin/conf_files/kdc_conf.html){.link}.
:::
:::
:::
[]{#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm.html}
::: chapter
::: titlepage
# []{#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm.html#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm}第 8 章 为大型 IdM-AD 信任部署调整 SSSD 性能 {.title}
:::
检索用户和组信息是系统安全服务守护进程(SSSD)的非常数据密集型操作，特别是在带有对大型
Active Directory(AD)域的信任的 IdM 部署中。您可以通过调整 SSSD
从身份提供程序检索哪些信息以及时长来提高性能。
::: section
::: titlepage
# []{#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm.html#proc_tuning-sssd-in-idm-servers-for-large-idm-ad-trust-deployments_assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments}为大型 IdM-AD 信任部署在 IdM 服务器中调整 SSSD {.title}
:::
此流程对 IdM 服务器中的 SSSD 服务配置应用调整选项，以改进从大型 AD
环境检索信息时的响应时间。
::: itemizedlist
**先决条件**
-   您需要 `root`{.literal} 权限来编辑 `/etc/sssd/sssd.conf`{.literal}
    配置文件。
:::
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/sssd/sssd.conf`{.literal} 配置文件。
2.  在您的 Active Directory 域的 `[domain]`{.literal}
    部分添加以下选项。如果您还没有 AD 域的 domain 部分，请创建一个。
    ``` literallayout
    [domain/ad.example.com]
    ignore_group_members = true
    subdomain_inherit = ignore_group_members
    ...
    ```
3.  保存并关闭服务器上的 `/etc/sssd/sssd.conf`{.literal} 文件。
4.  重启 SSSD 服务以载入配置更改。
    ``` literallayout
    [root@client ~]# systemctl restart sssd
    ```
:::
::: itemizedlist
**其它资源**
-   [为大型 IdM-AD 信任部署在 IdM 服务器和客户端中调整 SSSD
    的选项](#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm.html#options-in-sssdconf-for-tuning-servers-and-clients_assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments "sssd.conf 中的选项，用于为大型 IdM-AD 信任部署调整 IdM 服务器和客户端"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments_tuning-performance-in-idm.html#proc_tuning-the-config-timeout-for-the-ipa-extdom-plugin-on-idm-servers_assembly_tuning-sssd-performance-for-large-idm-ad-trust-deployments}在 IdM 服务器上为 ipa-extdom 插件调整配置超时 {.title}
:::
IdM 客户端无法直接从 Active Directory(AD)接收有关用户和组的信息，因此
IdM 服务器使用 `ipa-extdom`{.literal} 插件接收 AD
用户和组的信息，并将这些信息转发到请求的客户端。
`ipa-extdom`{.literal} 插件向 SSSD 发送一个请求，以获取有关 AD
用户的数据。如果信息不在 SSSD 缓存中，SSSD 会从 AD
域控制器(DC)请求数据。您可以调整配置超时值，它定义
`ipa-extdom`{.literal} 插件在插件取消连接前等待来自 SSSD
的回复时间，并为调用者返回超时错误。默认值为 10000 毫秒（10 秒）。
以下示例将配置超时调整为 20 秒（20000 毫秒）。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
调整配置超时时要小心：
::: itemizedlist
-   如果您设置了一个太小的值（如 500 毫秒），SSSD
    可能没有足够的时间来回复，请求始终会返回超时。
-   如果您设置了一个太大的值，如 30000 毫秒（30
    秒），则单个请求可能会阻止与 SSSD
    的连接这个时间。因为一个线程一次只能连接到
    SSSD，来自插件的所有其他请求都必须等待。
-   如果 IdM 客户端发送了许多请求，它们可以阻止为 IdM 服务器上的
    Directory 服务器配置的所有可用
    worker。因此，服务器可能无法为某种时间响应任何类型的请求。
:::
只在以下情况下更改配置超时：
::: itemizedlist
-   如果在请求 AD 用户和组的信息时，IdM
    客户端会在访问自己的搜索超时前经常收到超时错误，则配置超时值
    [**太小**]{.strong}。
-   如果 IdM 服务器上的 Directory Server 经常被锁定，并且
    `pstack`{.literal} 程序报告许多或所有 worker 线程在此时间处理
    `ipa-extdom`{.literal} 请求，则该值 [**太大**]{.strong}。
:::
:::