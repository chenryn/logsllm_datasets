---
author: Mike Bursell
category: 软件开发
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 3717
date: '2021-07-17 12:22:46'
editorchoice: false
excerpt: 从 Rust 标准库学习一些有用的关键字。
fromurl: https://opensource.com/article/20/10/keywords-rust
id: 13589
islctt: true
largepic: /data/attachment/album/202107/17/122247gst0t0m4zg0s7hgb.jpg
permalink: /article-13589-1.html
pic: /data/attachment/album/202107/17/122247gst0t0m4zg0s7hgb.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 从 Rust 标准库学习一些有用的关键字。
tags:
- Rust
thumb: false
title: 我的 7 大 Rust 关键字
titlepic: true
translator: mcfd
updated: '2021-07-17 12:22:46'
---

> 从 Rust 标准库中学习一些有用的关键字。

![Rustacean t-shirt](/data/attachment/album/202107/17/122247gst0t0m4zg0s7hgb.jpg "Rustacean t-shirt")

我已经使用 [Rust](https://www.rust-lang.org/) 几个月了，编写的内容比我预期的要多。随着不断学习，我改进了代码，并完成了一些超出最初意图的更复杂的任务。尽管如此，许多早期编写的代码已被废弃。我仍然非常喜欢这门语言，认为讨论一些在 Rust 中频繁出现的重要关键字可能会对初学者或来自其他语言（如 Java）的新手有所帮助。请参阅我的文章 [为什么作为一个 Java 程序员的我喜欢学习 Rust](https://opensource.com/article/20/5/rust-java)。

事不宜迟，让我们开始吧。获取更多信息的好地方是 Rust 官方文档，你可以从 [std 标准库](https://doc.rust-lang.org/std/) 开始。

### 1. `const` 
使用 `const` 来声明常量。如果你需要在不同模块中使用常量，请创建一个 `lib.rs` 文件，并将所有常量放在一个命名良好的模块中。我在不同文件中的 `const` 变量名和值发生过冲突，通过创建一个共享模块可以避免这些问题。

### 2. `let` 
虽然你并不总是需要用 `let` 声明变量，但这样做会使代码更清晰。如果可能，请明确指定变量类型。Rust 会尽力猜测变量类型，但不一定总能在运行时正确推断。在这种情况下，编译器 [Cargo](https://doc.rust-lang.org/cargo/) 会提示错误，帮助你调试。

### 3. `match` 
`match` 在 Rust 中被广泛使用，类似于其他语言中的 `switch` 语句。它使代码更清晰易读。如果错过某些情况，Cargo 会提示你。我的经验法则是，在处理不同选项或进行分支时，如果可以使用 `match`，那就一定要用。

### 4. `mut` 
在声明变量时，如果其值会在声明后发生变化，你需要将其声明为可变的（Rust 中变量默认是不可变的）。常见的错误是在不需要改变的情况下声明变量为可变。如果 Cargo 提示你一个可变变量没有被改变，检查该变量的作用域以确保你使用的是正确的变量。

### 5. `return` 
我很少使用 `return`，通常只需在函数的最后一行提供返回值即可。注意不要在最后一行末尾添加分号（`;`），否则编译器会报错。

### 6. `unsafe` 
如果你需要执行一些不能保证 Rust 内存安全的操作，就需要使用 `unsafe` 关键字。除非你是非常低级的系统程序员，否则应尽量避免使用 `unsafe`。

### 7. `use` 
当你想使用另一个 crate 中的结构体、变量、函数等时，需要在代码块的开头声明 `use`。常见的错误是忘记了在 `Cargo.toml` 文件中添加该 crate（最好指定最小版本号）。

这不是我写过的最复杂的文章，但我相信对于刚开始学习 Rust 的人来说会有帮助。我计划在未来撰写更多关于关键函数和其他 Rust 必知知识的文章。如果你有任何需求，请告诉我！

*本文最初发表于 [Alice, Eve, and Bob](https://aliceevebob.com/2020/09/01/rust-my-top-7-keywords/) 经作者许可转载。*

via: 
作者：[Mike Bursell](https://opensource.com/users/mikecamel)  
选题：[lujun9972](https://github.com/lujun9972)  
译者：[mcfd](https://github.com/mcfd)  
校对：[wxy](https://github.com/wxy)

本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。