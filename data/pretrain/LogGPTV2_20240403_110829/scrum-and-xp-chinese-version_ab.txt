是谁。
•	产品负责人必须要有产品 Backlog，其中包括团队对它进行
的估算。
•
• 团队必须要有燃尽图，而且要了解他们自己的生产率。在一个 Sprint 中，外人不能干涉团队的工作。
仅有的 30 个实践 Scrum 的在场人士中，只有 3 个能够通过 Nokia 的 Scrum 测试。看来只有这几个团队才有可能在将来得到我的风投
伙伴的钱了。伙伴的钱了。
如果按照 Henrik 列出的实践执行，那么你就会拥有如下产物：产 品 Backlog、对于这个 Backlog 的估算、燃尽图；你会了解团队的 生产率，并掌握在切实有效的 Scrum 过程中所包含的众多基础实 践。这些收获就是本书的价值所在。你将会通过 Nokia 的 Scrum 测
试，对工作的投资也会物有所值。如果你的公司还正处于创业阶段，
也许还会收到风险投资团队的资金注入。你也许会塑造软件开发的
未来，成为下一代软件产品中领军产品的创建者。
Jeff Sutherland, 
Ph.D., Co-Creator of ScrumPh.D., Co-Creator of Scrum 
序——Mike Cohn Scrum 和极限编程（XP）都要求团队在每一次迭代的结尾完成一些 可以交付的工作片段。迭代要短，有时间限制。将注意力集中于在 短时间内交付可工作的代码，这就意味着 Scrum 和 XP 团队没有时 间进行理论研究。他们不会花时间用建模工具来画 UML 图、编写 完美的需求文档，也不会为了应对在可预计的未来中所有可能发生 的变化而去写代码。实际上，Scrum 和 XP 都关注如何把事情做好。这些团队承认在开发过程中会犯错，但是他们明白：要投入实践中，
动手去构建产品，这才是找出错误的最好方式；不要只是停留在理
论层次上对软件进行分析和设计。论层次上对软件进行分析和设计。
注重实践而非理论研究，这正是本书的独到之处。Henrik Kniberg 很清楚，初涉门径的人更需要这种书籍。他没有对“什么是 Scrum”进行冗长的描述，只是给出了一些网站作为参考。从一开始他就在 讲他的团队如何管理产品 Backlog，并基于它进行工作。接着他又 讲述了成功的敏捷项目中包含的所有元素和实践。没有理论、没有 引用、没有脚注、没有废话。Henrik 的书没有从哲学角度上分析为 什么 Scrum 可以工作，没有分析为什么你可能会尝试不同的选择。它描述的是一个成功敏捷团队的工作过程。
所以本书的副标题——“我们如何实施 Scrum”——才显得格外贴 切。这也许不是你实施Scrum的方式，这是Henrik的团队实施Scrum 的方式。你也许会问：“为什么我需要关心别的团队怎样实施 Scrum？”这是因为通过关注其他团队的实施过程，尤其是成功的 案例，我们就可以学到更好的实施方式。这不是，也永远不会是“Scrum 最佳实践”的罗列，因为团队和项目的真实场景要比其他 一切都重要的多。我们应该了解的是优秀实践及其应用范围，而不是最佳实践。在读过足够多的成功团队的实践经验以后，你便会做 好充分的准备，来面对实施 Scrum 和 XP 的过程中将会遇到的艰难 险阻。
Henrik 提供了很多优秀实践，还有对应的使用场景；通过它们，我 们能够更好地掌握如何在自己的项目中，在战壕里使用 Scrum 和 XP。
Mike Cohn 
Agile Estimating and Planning 和 User Stories Applied for Agile Software Development 的作者
前言——嘿，Scrum 成了! 
Scrum 成了! 至少对我们来说它已经成功了（这里指的是我当前在 Stockholm 的客户，名字略过不提）。希望它对你们也一样有用！也许这本书会对你们实施 Scrum 的过程有所助益。这是我第一次看到一种开发方法论（哦，对不起，Ken，它是一种 框架）可以脱离开书本成功运作。它拿来就能用。所有人——包括 开发人员、测试人员和经理——都为此而高兴。它帮助我们走出了 艰难的境地，而且让我们在严重的市场动荡和大规模的公司裁员中 依然能够集中精力在项目上。
我不该说我为此感到惊讶，但实情确实如此。在一开始我大致的翻 了几本讲 Scrum 的书，它们把 Scrum 描述的挺不错，却给我留下 了一种太过美好以致不太真实的感觉（我们都知道“某些东西看上 去太好了……”这类说法的含义）。所以我没法不对它有点怀疑。但在使用 Scrum 一年以后，先前的零星疑虑早已烟消云散。我被它 深深的震撼了（我们团队中的大部分人都和我一样），以后只要没 有充分的理由来阻止我，我都会继续使用 Scrum。
简介| 1 
 1 	简介简介| 1 
 1 	简介
你即将在组织中开始使用 Scrum。或者你已经用过了几个月。你已 经了解了基础概念，读过了几本书，也许你还已经通过了 Scrum Master 认证。先恭喜一下！
但是你仍会感到迷茫。
用Ken Schwaber的话说，Scrum不是方法学，它是一个框架。也就 是说Scrum不会告诉你到底该做些什么。靠！
下面有一个好消息和一个坏消息。好消息是我即将和你们分享我使 用 Scrum 的经验，还有种种恼人的细节。而坏消息是，这只是我个 人的经历。你不应该完全仿照我的做法。实际上如果换个不同的场
景，我也许就会换种实践方式了。
Scrum 的强大和令人痛苦之处就在于你不得不根据自己的具体情 况来对它进行调整。过去的一年中，我在一个大约 40 人的开发团队里面试验性地使用 了 Scrum。当时公司正处于困境，没日没夜地加班，产品质量低下，很多人都忙着四处救火，交付日期也一再拖延。公司已经决定了使 用 Scrum，但是并没有完全落实，剩下的部分就是我的工作了。在 那个时候，对团队中的大多数人来说，“Scrum”就只是一个陌生 的、时时能够从走廊上听到回音的时髦词汇；如此而已，和他们日
常的工作没有丝毫的关系。
2 | 硝烟中的 SCRUM 和 XP
一年过去了，我们在公司里从上到下都实现了 Scrum。我们试过多 种团队尺寸（3-12 人）、sprint 长度（2-6 个星期）；定义“完成”的不同方式；不同形式的产品 backlog 和 sprint backlog（Excel、Jira、索引卡）；多种测试策略、演示方式、多个 Scrum 团队的信息同步 方式……。我们还试验了 XP 实践——各种各样的每日构建，结对 编程，测试驱动开发，等等；还试过把 XP 和 Scrum 进行结合。这是一个持续学习的过程，所以故事尚未结束。我相信，如果公司
能够保持做 sprint 回顾的良好习惯，他们就会不断得到新的收获，重新领悟到怎样在他们特有的场景中，把 Scrum 用得恰到好处。
免责声明
这篇文档讲述的不是“正确”实现 Scrum 的方式！它只是表明了一
种方式，是我们在一年内不断修正调整后的结果。你也可以认为我
们的做法是完全错误的。
本文中所说的一切都是我个人的观点，不代表 Crisp 或者我当前客
户的任何意见。因此我将避免提到任何特定的产品或者人名。
撰写本书的原因
在学习 Scrum 的过程中，我读过了 Scrum 和敏捷方面的书，浏览 了许多有关 Scrum 的网站和论坛，通过了 Ken Schwaber 的认证，
用各种问题刁难他，还花了大量的时间跟同事进行讨论。但在纷乱
芜杂的信息中，我感到最有价值的就是那些真枪实弹的故事。它们芜杂的信息中，我感到最有价值的就是那些真枪实弹的故事。它们
把“原则与实践”变成了……嗯……“如何真正动手去做的过程”，
同时还帮我意识到（有时候会帮我避免）Scrum 新丁容易犯的典型
错误。
所以，现在轮到我做出一些回报了。下面就是我以 Scrum 为枪的战
斗经历。
希望本书对有同样经历的读者起到抛砖引玉的作用，给我反馈，向
我开炮！
简介| 3 
Scrum 到底是什么? 
哦，对不起，你完全不了解 Scrum 或者 XP？那你最好先去看一下
这几个链接：
• http://agilemanifesto.org/ 
• http://www.mountaingoatsoftware.com/scrum
• http://www.xprogramming.com/xpmag/whatisxp.htm 
要是你真没耐心去访问这些网站，也没关系。随便翻翻看看吧。大要是你真没耐心去访问这些网站，也没关系。随便翻翻看看吧。大
多数 Scrum 的相关术语都会在书中慢慢讲到，你会感兴趣的。
2 
我们怎样编写产品 backlog 
产品 backlog 是 Scrum 的核心，也是一切的起源。从根本上说，它 就是一个需求、或故事、或特性等组成的列表，按照重要性的级别 进行了排序。它里面包含的是客户想要的东西，并用客户的术语加 以描述。
我们叫它故事（story），有时候也叫做 backlog 条目。
我们的故事包括这样一些字段：
		ID——统一标识符，就是个自增长的数字而已。以防重命 	名故事以后找不到它们。
	Name（名称）——简短的、描述性的故事名。比如“查看 	你自己的交易明细”。它必须要含义明确，这样开发人员 	和产品负责人才能大致明白我们说的是什么东西，跟其他
|  | 故事区分开。它一般由 2 到 10 个字组成。|  | 故事区分开。它一般由 2 到 10 个字组成。
Importance（重要性）——产品负责人评出一个数值，指 示这个故事有多重要。例如 10 或 150。分数越高越重要。 | 故事区分开。它一般由 2 到 10 个字组成。
Importance（重要性）——产品负责人评出一个数值，指 示这个故事有多重要。例如 10 或 150。分数越高越重要。 |
|---|---|---|
|  |o |我一直都想避免“优先级”这个说法，因为一般说 |
|  |来优先级 1 都表示“最高”优先级，如果后来有其 |来优先级 1 都表示“最高”优先级，如果后来有其 |
他更重要的东西就麻烦了。它的优先级评级应该是
 什么呢？优先级 0？优先级-1？
Initial estimate（初始估算）——团队的初步估算，表示与
其他故事相比，完成该故事所需的工作量。最小的单位是其他故事相比，完成该故事所需的工作量。最小的单位是
我们怎样编写产品 BACKLOG | 5 
故事点（story point），一般大致相当于一个“理想的人天（man-day）”。
o 问一下你的团队，“如果可以投入最适合的人员来 完成这个故事（人数要适中，通常为 2 个），把你
们锁到一个屋子里，有很多食物，在完全没有打扰 的情况下工作，那么需要几天，才能给出一个经过 测试验证，可以交付的完整实现呢？”如果答案是“把 3 个人关在一起，大约需要 4 天时间”，那么 初始估算的结果就是 12 个故事点。
o 	不需要保证这个估值绝对无误（比如两个故事点的 	故事就应该花两天时间），而是要保证相对的正确 	性（即，两个点的故事所花费的时间应该是四个点 	的故事所需的一半）
 How to demo（如何做演示）——它大略描述了这个故事应 该如何在 sprint 演示上进行示范，本质就是一个简单的测试规范。“先这样做，然后那样做，就应该得到……的结 果”。
o 	如果你在使用 TDD（测试驱动开发），那么这段 	描述就可以作为验收测试的伪码表示。
	Notes（注解）——相关信息、解释说明和对其它资料的引 	用等等。一般都非常简短。
| 产品 BACKLOG（示例） | 产品 BACKLOG（示例） | 产品 BACKLOG（示例） | 产品 BACKLOG（示例） | 产品 BACKLOG（示例） | 产品 BACKLOG（示例） |
|---|---|---|---|---|---|
| ID  |Name  |Imp  |Est |How to demo  |Notes  |
| 1  |存款 |30  |5  |登录，打开存款界 面，存入 10 欧元，转到我的账户余额 界面，检查我的余 额增加了 10 欧元。 |需要 UML 顺 序图。目前不 需要考虑加  密的问题。 || 2  |查看自己的 交易明细 |10  |8  |登录，点击“交易”，存入一笔款项。返 回交易页面，看到 新的存款显示在页 面上。 |使用分页技  术避免大规  模的数据库  查询。和查看 用户列表的  设计相似。 |
6 | 硝烟中的 SCRUM 和 XP
我们曾试过很多字段，但最后发现，只有上面提到的六个字段我们 会一直使用下去。