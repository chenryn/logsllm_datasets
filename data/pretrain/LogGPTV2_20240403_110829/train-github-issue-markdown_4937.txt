#### Code Sample, a copy-pastable example if possible
As expected:
    import pandas as pd
    all_cols = list("abcdefg")
    informative_cols = ["a","c","g"]
    dfrandom = pd.DataFrame(pd.np.random.rand(5, len(all_cols)), columns=all_cols)
    field = informative_cols[0]
    print(field)
    print(type(dfrandom[field]))
    print(type(dfrandom[informative_cols][field]))
returns:
    a
However, unexpectedly:
    import pandas as pd
    all_cols = list("abcdefg")
    informative_cols = ["a","c","g"]
    dfrandom = pd.DataFrame(pd.np.random.rand(5, len(all_cols)), columns=all_cols)
    field = informative_cols[0]
    print(field)
    print(type(dfrandom[field]))
    print(type(dfrandom[informative_cols][field]))
returns:
    0_AnatomicRegionSequence_CodeMeaning
#### Problem description
Subsetting one single column with a string must output the same result
independent of copying and previous subsetting.  
Because expected output is consistent and unexpected is inconsistent
#### Expected Output
    0_AnatomicRegionSequence_CodeMeaning
#### Output of `pd.show_versions()`
INSTALLED VERSIONS \------------------ commit: None python: 3.6.1.final.0
python-bits: 64 OS: Linux OS-release: 4.2.0-42-generic machine: x86_64
processor: x86_64 byteorder: little LC_ALL: None LANG: en_US.UTF-8 LOCALE:
en_US.UTF-8
pandas: 0.20.2  
pytest: None  
pip: 9.0.1  
setuptools: 36.0.1  
Cython: None  
numpy: 1.13.0  
scipy: 0.19.0  
xarray: None  
IPython: 6.1.0  
sphinx: None  
patsy: 0.4.1  
dateutil: 2.6.0  
pytz: 2017.2  
blosc: None  
bottleneck: None  
tables: None  
numexpr: None  
feather: None  
matplotlib: 2.0.2  
openpyxl: None  
xlrd: None  
xlwt: None  
xlsxwriter: None  
lxml: None  
bs4: None  
html5lib: 0.999999999  
sqlalchemy: None  
pymysql: None  
psycopg2: None  
jinja2: 2.9.6  
s3fs: None  
pandas_gbq: None  
pandas_datareader: None