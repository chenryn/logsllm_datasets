.ex
.rb "$" " ./a.out"
start of region:        0x804c000
got sigsegv at address: 0x804e000
.ee
.in
.ss program source
\&
.ex
#include 
#include 
#include 
#include 
#include 
#include 
#include 
#define handle_error(msg) \e
    do { perror(msg); exit(exit_failure); } while (0)
static char *buffer;
static void
handler(int sig, siginfo_t *si, void *unused)
{
    /* note: calling printf() from a signal handler is not safe
       (and should not be done in production programs), since
       printf() is not async\-signal\-safe; see signal\-safety(7).
       nevertheless, we use printf() here as a simple way of
       showing that the handler was called. */
    printf("got sigsegv at address: %p\en", si\->si_addr);
    exit(exit_failure);
}
int
main(int argc, char *argv[])
{
    int pagesize;
    struct sigaction sa;
    sa.sa_flags = sa_siginfo;
    sigemptyset(&sa.sa_mask);
    sa.sa_sigaction = handler;
    if (sigaction(sigsegv, &sa, null) == \-1)
        handle_error("sigaction");
    pagesize = sysconf(_sc_page_size);
    if (pagesize == \-1)
        handle_error("sysconf");
    /* allocate a buffer aligned on a page boundary;
       initial protection is prot_read | prot_write. */
    buffer = memalign(pagesize, 4 * pagesize);
    if (buffer == null)
        handle_error("memalign");
    printf("start of region:        %p\en", buffer);
    if (mprotect(buffer + pagesize * 2, pagesize,
                prot_read) == \-1)
        handle_error("mprotect");
    for (char *p = buffer ; ; )
        *(p++) = \(aqa\(aq;
    printf("loop completed\en");     /* should never happen */
    exit(exit_success);
}
.ee
.sh see also
.br mmap (2),
.br sysconf (3),
.br pkeys (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright (c) 1993 by thomas koenig (PI:EMAIL)
.\" and copyright (c) 2004 by michael kerrisk 
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" modified sat jul 24 13:32:44 1993 by rik faith (PI:EMAIL)
.\" modified mon jun 23 14:09:52 1997 by aeb - add eintr.
.\" modified tue jul  7 12:26:42 1998 by aeb - changed return value wait3
.\" modified 2004-11-11, michael kerrisk 
.\"	rewrote much of this page, and removed much duplicated text,
.\"		replacing with pointers to wait.2
.\"
.th wait4 2  2021-03-22 "linux" "linux programmer's manual"
.sh name
wait3, wait4 \- wait for process to change state, bsd style
.sh synopsis
.nf
.b #include 
.pp
.bi "pid_t wait3(int *" "wstatus" ", int " options ", struct rusage *" rusage );
.bi "pid_t wait4(pid_t " pid ", int *" wstatus ", int " options ,
.bi "            struct rusage *" rusage );
.fi
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br wait3 ():
.nf
    since glibc 2.26:
        _default_source
            || (_xopen_source >= 500 &&
                ! (_posix_c_source >= 200112l
                   || _xopen_source >= 600))
    from glibc 2.19 to 2.25:
        _default_source || _xopen_source >= 500
    glibc 2.19 and earlier:
        _bsd_source || _xopen_source >= 500
.\"          || _xopen_source && _xopen_source_extended
.fi
.pp
.br wait4 ():
.nf
    since glibc 2.19:
        _default_source
    glibc 2.19 and earlier:
        _bsd_source
.fi
.sh description
these functions are nonstandard; in new programs, the use of
.br waitpid (2)
or
.br waitid (2)
is preferable.
.pp
the
.br wait3 ()
and
.br wait4 ()
system calls are similar to
.br waitpid (2),
but additionally return resource usage information about the
child in the structure pointed to by
.ir rusage .
.pp
other than the use of the
.i rusage
argument, the following
.br wait3 ()
call:
.pp
.in +4n
.ex
wait3(wstatus, options, rusage);
.ee
.in
.pp
is equivalent to:
.pp
.in +4n
.ex
waitpid(\-1, wstatus, options);
.ee
.in
.pp
similarly, the following
.br wait4 ()
call:
.pp
.in +4n
.ex
wait4(pid, wstatus, options, rusage);
.ee
.in
.pp
is equivalent to:
.pp
.in +4n
.ex
waitpid(pid, wstatus, options);
.ee
.in
.pp
in other words,
.br wait3 ()
waits of any child, while
.br wait4 ()
can be used to select a specific child, or children, on which to wait.
see
.br wait (2)
for further details.
.pp
if
.i rusage
is not null, the
.i struct rusage
to which it points will be filled with accounting information
about the child.
see
.br getrusage (2)
for details.
.sh return value
as for
.br waitpid (2).
.sh errors
as for
.br waitpid (2).
.sh conforming to
4.3bsd.
.pp
susv1 included a specification of
.br wait3 ();
susv2 included
.br wait3 (),
but marked it legacy;
susv3 removed it.
.sh notes
including
.i 
is not required these days, but increases portability.
(indeed,
.i 
defines the
.i rusage
structure with fields of type
.i struct timeval
defined in
.ir  .)
.ss c library/kernel differences
on linux,
.br wait3 ()
is a library function implemented on top of the
.br wait4 ()
system call.
.sh see also
.br fork (2),
.br getrusage (2),
.br sigaction (2),
.br signal (2),
.br wait (2),
.br signal (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/rpc.3
.\" copyright (c) 1993 by thomas koenig (PI:EMAIL)
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" modified sat jul 24 17:35:15 1993 by rik faith 
.\" modified sun feb 19 22:02:32 1995 by rik faith 
.\" modified tue oct 22 23:28:12 1996 by eric s. raymond 
.\" modified sun jan 26 21:56:56 1997 by ralph schleicher
.\"    
.\" modified mon jun 16 20:24:58 1997 by nicol√°s lichtmaier 
.\" modified sun oct 18 22:11:28 1998 by joseph s. myers 
.\" modified mon nov 16 17:24:47 1998 by andries brouwer 
.\" modified thu nov 16 23:28:25 2000 by david a. wheeler
.\"    
.\"
.\" "nroff" ("man") (or "tbl") needs a long page to avoid warnings
.\" from "grotty" (at imagined page breaks).  bug in grotty?
.if n .pl 1000v
.th suffixes 7  2020-08-13 "linux" "linux programmer's manual"
.sh name
suffixes \- list of file suffixes
.sh description
it is customary to indicate the contents of a file with the file suffix,
which (typically) consists of a period, followed by one or more letters.
many standard utilities, such as compilers, use this to recognize the type of
file they are dealing with.
the
.br make (1)
utility is driven by rules based on file suffix.
.pp
following is a list of suffixes which are likely to be found on a
linux system.
.pp
.ts
l | l
_ | _
li |  l .
suffix	file type
 ,v	files for rcs (revision control system)
 -	backup file
 .c	c++ source code, equivalent to \fi.cc\fp
 .f	fortran source with \fbcpp\fp(1) directives
	or file compressed using freeze
 .s	assembler source with \fbcpp\fp(1) directives
 .y	file compressed using yabba
 .z	file compressed using \fbcompress\fp(1)
 .[0\-9]+gf	tex generic font files
 .[0\-9]+pk	tex packed font files
 .[1\-9]	manual page for the corresponding section
 .[1\-9][a-z]	manual page for section plus subsection
 .a	static object code library
 .ad	x application default resource file
 .ada	ada source (may be body, spec, or combination)
 .adb	ada body source
 .ads	ada spec source
 .afm	postscript font metrics
 .al	perl autoload file
 .am	\fbautomake\fp(1) input file
 .arc	\fbarc\fp(1) archive
 .arj	\fbarj\fp(1) archive
 .asc	pgp ascii-armored data
 .asm	(gnu) assembler source file
 .au	audio sound file
 .aux	latex auxiliary file
 .avi	(msvideo) movie
 .awk	awk language program
 .b	lilo boot loader image
 .bak	backup file
 .bash	\fbbash\fp(1) shell script
 .bb	basic block list data produced by
	gcc \-ftest\-coverage
 .bbg	basic block graph data produced by
	gcc \-ftest\-coverage
 .bbl	bibtex output
 .bdf	x font file
 .bib	tex bibliographic database, bibtex input
 .bm	bitmap source
 .bmp	bitmap
 .bz2	file compressed using \fbbzip2\fp(1)
 .c	c source
 .cat	message catalog files
 .cc	c++ source
 .cf	configuration file
 .cfg	configuration file
 .cgi	www content generating script or program
 .cls	latex class definition
 .class	java compiled byte-code
 .conf	configuration file
 .config	configuration file
 .cpp	equivalent to \fi.cc\fr
 .csh	\fbcsh\fp(1) shell script
 .cxx	equivalent to \fi.cc\fr
 .dat	data file
 .deb	debian software package
 .def	modula-2 source for definition modules
 .def	other definition files
 .desc	initial part of mail message unpacked with
	\fbmunpack\fp(1)
 .diff	file differences (\fbdiff\fp(1) command output)
 .dir	dbm data base directory file
 .doc	documentation file
 .dsc	debian source control (source package)
 .dtx	latex package source file
 .dvi	tex's device independent output
 .el	emacs-lisp source
 .elc	compiled emacs-lisp source
 .eps	encapsulated postscript
 .exp	expect source code
 .f	fortran source
 .f77	fortran 77 source
 .f90	fortran 90 source
 .fas	precompiled common-lisp
 .fi	fortran include files
 .fig	fig image file (used by \fbxfig\fp(1))
 .fmt	tex format file
 .gif	compuserve graphics image file format
 .gmo	gnu format message catalog
 .gsf	ghostscript fonts
 .gz	file compressed using \fbgzip\fp(1)
 .h	c or c++ header files
 .help	help file
 .hf	equivalent to \fi.help\fp
 .hlp	equivalent to \fi.help\fp
 .htm	poor man's \fi.html\fp
 .html	html document used with the world wide web
 .hqx	7-bit encoded macintosh file
 .i	c source after preprocessing
 .icon	bitmap source
 .idx	reference or datum-index file for hypertext
	or database system
 .image	bitmap source
 .in	configuration template, especially for gnu autoconf
 .info	files for the emacs info browser
 .info-[0\-9]+	split info files
 .ins	latex package install file for docstrip
 .itcl	itcl source code;
	itcl ([incr tcl]) is an oo extension of tcl
 .java	a java source file
 .jpeg	joint photographic experts group format
 .jpg	poor man's \fi.jpeg\fp
 .kmap	\fblyx\fp(1) keymap
 .l	equivalent to \fi.lex\fp or \fi.lisp\fp
 .lex	\fblex\fp(1) or \fbflex\fp(1) files
 .lha	lharc archive
 .lib	common-lisp library
 .lisp	lisp source
 .ln	files for use with \fblint\fp(1)
 .log	log file, in particular produced by tex
 .lsm	linux software map entry
 .lsp	common-lisp source
 .lzh	lharc archive
 .m	objective-c source code
 .m4	\fbm4\fp(1) source
 .mac	macro files for various programs
 .man	manual page (usually source rather than formatted)
 .map	map files for various programs
 .me	nroff source using the me macro package
 .mf	metafont (font generator for tex) source
 .mgp	magicpoint file
 .mm	sources for \fbgroff\fp(1) in mm - format
 .mo	message catalog binary file
 .mod	modula-2 source for implementation modules
 .mov	(quicktime) movie
 .mp	metapost source
 .mp2	mpeg layer 2 (audio) file
 .mp3	mpeg layer 3 (audio) file
 .mpeg	movie file
 .o	object file
 .old	old or backup file
 .orig	backup (original) version of a file, from \fbpatch\fp(1)
 .out	output file, often executable program (a.out)
 .p	pascal source
 .pag	dbm data base data file
 .patch	file differences for \fbpatch\fp(1)
 .pbm	portable bitmap format
 .pcf	x11 font files
 .pdf	adobe portable data format
	(use acrobat/\fbacroread\fp or \fbxpdf\fp)
 .perl	perl source (see .ph, .pl, and .pm)
 .pfa	postscript font definition files, ascii format
 .pfb	postscript font definition files, binary format
 .pgm	portable greymap format
 .pgp	pgp binary data
 .ph	perl header file
 .php	php program file
 .php3	php3 program file
 .pid	file to store daemon pid (e.g., crond.pid)
 .pl	tex property list file or perl library file
 .pm	perl module
 .png	portable network graphics file
 .po	message catalog source
 .pod	\fbperldoc\fp(1) file
 .ppm	portable pixmap format
 .pr	bitmap source
 .ps	postscript file
 .py	python source
 .pyc	compiled python
 .qt	quicktime movie
 .r	ratfor source (obsolete)
 .rej	patches that \fbpatch\fp(1) couldn't apply
 .rpm	rpm software package
 .rtf	rich text format file
 .rules	rules for something
 .s	assembler source
 .sa	stub libraries for a.out shared libraries
 .sc	\fbsc\fp(1) spreadsheet commands
 .scm	scheme source code
 .sed	sed source file
 .sgml	sgml source file
 .sh	\fbsh\fp(1) scripts
 .shar	archive created by the \fbshar\fp(1) utility
 .so	shared library or dynamically loadable object
 .sql	sql source
 .sqml	sqml schema or query program
 .sty	latex style files
 .sym	modula-2 compiled definition modules
 .tar	archive created by the \fbtar\fp(1) utility
 .tar.z	tar(1) archive compressed with \fbcompress\fp(1)
 .tar.bz2	tar(1) archive compressed with \fbbzip2\fp(1)
 .tar.gz	tar(1) archive compressed with \fbgzip\fp(1)
 .taz	tar(1) archive compressed with \fbcompress\fp(1)
 .tcl	tcl source code
 .tex	tex or latex source
 .texi	equivalent to \fi.texinfo\fp
 .texinfo	texinfo documentation source
 .text	text file
 .tfm	tex font metric file
 .tgz	tar archive compressed with \fbgzip\fp(1)
 .tif	poor man's \fi.tiff\fp
 .tiff	tagged image file format
 .tk	tcl/tk script
 .tmp	temporary file
 .tmpl	template files
 .txt	equivalent to \fi.text\fp
 .uu	equivalent to \fi.uue\fp
 .uue	binary file encoded with \fbuuencode\fp(1)
 .vf	tex virtual font file
 .vpl	tex virtual property list file
 .w	silvio levi's cweb
 .wav	wave sound file
 .web	donald knuth's web
 .wml	source file for web meta language
 .xbm	x11 bitmap source
 .xcf	gimp graphic
 .xml	extended markup language file
 .xpm	x11 pixmap source
 .xs	perl xsub file produced by h2xs
 .xsl	xsl stylesheet
 .y	\fbyacc\fp(1) or \fbbison\fp(1) (parser generator) files
 .z	file compressed using \fbpack\fp(1) (or an old \fbgzip\fp(1))
 .zip	\fbzip\fp(1) archive
 .zoo	\fbzoo\fp(1) archive
 \(ti	emacs or \fbpatch\fp(1) backup file
 rc	startup (`run control') file, e.g., \fi.newsrc\fp
.te