to their global values. Fig. 8 also shows the estimation error
per iteration using this algorithm.
It should be noted that Fig. 8 only compares the estimation
results per iteration for the proposed algorithms, and not the
time needed to execute an iteration. It should be noted that every
iteration of H-ADMM involves sequential communication
between the hierarchies of PDCs, and hence, the actual time
for completing one iteration of H-ADMM will be larger than
that of S-ADMM. Similarly, every iteration of D-ADMM may
be slower than a corresponding iteration of S-ADMM since
the former involves sequential communication, while the latter
involves parallel communication between PDCs.
Table II shows the estimates of the four inter-area eigen-
values obtained from the four algorithms, and compares them
with their actual values and the results of the centralized Prony.
It can be seen that all these algorithms yield accurate estimates
of the slow eigenvalues with relative error less than 1 percent.
The drawbacks of these architectures compared to the
centralized case are obvious. S-ADMM, unlike centralized
Prony, needs both uplink and downlink communications. D-
ADMM suffers from loss of data privacy. H-ADMM involves
higher communication delays at the cost of lesser computations.
B. IEEE 145-bus Model
We next consider the IEEE 145-bus model as a larger case
study [24]. We assume the system to be divided into 8 areas.
Each area contains 1 local PDC and 10 PMUs. The identity of
PMU buses are listed in Table III. The simulated measurements
are obtained using PST nonlinear dynamics simulation routine
s_simu and the data file data50m.m [23]. A three-phase
fault is applied on the line connecting buses 6 and 7. The fault
starts at t = 0.1 sec, clears at bus 6 at t = 0.15 sec and at bus 7
at t = 0.20 sec. The measurements are downsampled using
Sensitivity to Network Delay
low sensitivity to inter-area delay
high sensitivity to inter-area delay
high sensitivity to intra-area delay
Data Volume Per PDC
high
high
low
(a) S-ADMM
(b) A-ADMM
(c) D-ADMM (G1)
(d) D-ADMM (G2)
(e) H-ADMM
Fig. 6: The estimation of σ and Ω per iteration k (solid lines) versus their
actual values obtained from PST (dashed lines). (a) S-ADMM algorithm. (The
values are calculated at the ISO from ¯ak based on the Step 2 of the Prony
algorithm.) (b) A-ADMM. (c) and (d) D-ADMM with G1 and G2, respectively.
(The values are calculated using ak
1.) (e) H-ADMM.
Iteration(k)01020304050σ0.20.30.40.50.6σ1σ2σ3σ4Iteration(k)01020304050Ω(rad/sec)234567Ω1Ω2Ω3Ω4Iteration(k)01020304050σ0.10.20.30.40.50.6σ1σ2σ3σ4Iteration(k)01020304050Ω(rad/sec)234567Ω1Ω2Ω3Ω4Iteration(k)01020304050σ0.20.30.40.50.6σ1σ2σ3σ4Iteration(k)01020304050Ω(rad/sec)234567Ω1Ω2Ω3Ω4Iteration(k)01020304050σ0.20.30.40.50.6σ1σ2σ3σ4Iteration(k)01020304050Ω(rad/sec)234567Ω1Ω2Ω3Ω4Iteration(k)01020304050σ0.20.30.40.50.6σ1σ2σ3σ4Iteration(k)01020304050Ω(rad/sec)234567Ω1Ω2Ω3Ω4TABLE II: The estimated slow eigenvalues of the IEEE 68-bus model using centralized Prony (Steps 1 and 2), and the distributed Prony algorithms at k = 50
8
Actual
(−σi ± jΩi)
−0.3256 ± j2.2262
−0.3143 ± j3.2505
−0.4312 ± j3.5809
−0.4301 ± j4.9836
Centralized
Prony
−0.3250 ± j2.2230
−0.3146 ± j3.2531
−0.4318 ± j3.5849
−0.4308 ± j4.9865
S-ADMM
−0.3249 ± j2.2231
−0.3155 ± j3.2535
−0.4316 ± j3.5838
−0.4315 ± j4.9871
A-ADMM
−0.3249 ± j2.2231
−0.3147 ± j3.2533
−0.4321 ± j3.5849
−0.4280 ± j4.9801
Distributed Prony
D-ADMM (G1)
−0.3250 ± j2.2231
−0.3137 ± j3.2525
−0.4323 ± j3.5865
−0.4333 ± j4.9857
D-ADMM (G2)
−0.3250 ± j2.2231
−0.3136 ± j3.2525
−0.4323 ± j3.5864
−0.4296 ± j4.9834
H-ADMM
−0.3249 ± j2.2231
−0.3147 ± j3.2533
−0.4319 ± j3.5838
−0.4310 ± j4.9883
(a) D-ADMM (G1)
(b) D-ADMM (G2)
Fig. 7: The communication graphs used in Architecture 2.
TABLE III: The computational area partitioning of the IEEE 145 bus model.
The buses written in boldface are equipped with PMUs (10 PMUs per area)
Area
1
2
3
4
5
6
7
8
Buses
1, 2, 33, 37, 49, 50, 93, 99, 102, 110, 3, 4, 5, 34, 35, 36, 38, 39,
40, 41, 42, 43, 44, 45, 47, 48, 53, 55, 84, 87, 88, 113, 114
6, 7, 8, 57, 63, 66, 67, 101, 104, 111, 9, 10, 11, 32, 51, 52, 56, 69
13, 14, 20, 58, 59, 72, 98, 100, 103, 112,12, 15, 16, 17, 18, 19, 21,
54, 70, 71
115, 116, 117, 118, 140, 141, 142, 143, 144, 145, 46, 85
130, 131, 132, 133, 134, 135, 136, 137, 138, 139
61, 82, 95, 119, 120, 121, 122, 126, 128, 129, 62, 86, 123, 127
60, 64, 65, 79, 80, 90, 94, 97, 107, 124, 68, 92, 125
22, 77, 81, 89, 91, 96, 105, 106, 108, 109, 23, 24, 25, 26, 27, 28,
29, 30, 31, 73, 74, 75, 76, 78, 83
T = 0.1 seconds. The initial 10 samples (1 second) of the
measurements are gathered before starting the iterations. We
set 2n = 120 and ρ = 10−5. Fig. 9 shows how the estimates
of σ and Ω per iteration (the solid lines) converge to the actual
values (the dashed lines) for four selected slow modes of the
system after 200 iterations.
The average computation time per iteration per PDC in this
case is 4.7 milliseconds. For the same number of PMUs p,
if we reduce the number of PMUs per PDC to 4, and hence,
increase the number of PDCs up to 20, the average run-time per
iteration reduces down to 1.9 milliseconds. This clearly shows
that the proposed distributed algorithms are more beneficial
in terms of computation time as the network becomes large
since larger the network, easier it is to control the ratio of the
number of PMUs and PDCs in each area.
VI. REAL-TIME SIMULATIONS USING EXOGENI
Besides the conventional approach of estimating oscillation
modes using offline software programs such as Matlab, we also
implement our distributed algorithms using C/C++ in a realistic
US-wide network testbed called ExoGENI [25]. This testbed
is designed to support research and innovation in networking,
operating systems, future Internet architectures, and networked
data-intensive cloud computing. We have recently integrated
our Real-time Digital Simulator (RTDS)-based hardware-in-
the-loop PMU testbed at NC State with ExoGENI, thereby
forming a federated testbed called ExoGENI-WAMS. Details
about this testbed can be found in [26]. An advantage of
using ExoGENI is that we can run parallel applications with
performance isolation. Each application can run in its own
virtual infrastructure that consists of virtual machine (VM) and
storage connected by virtual networking channels. Therefore, in
our proposed architecture, the oscillation monitoring algorithms
can run in perfect isolation. Even the PMU data resolutions
between these application layers can be varied without any
interference by parallel downsampling.
We use this federated testbed to serve as a platform for
evaluating the end-to-end delays in implementing the S-ADMM
algorithm using real-time data streaming from multiple PMUs
to multiple PDCs that are realized using virtual computers
or machines (VMs). ExoGENI allows users to create custom
topologies using resources from multiple federated providers
via a control and management software called the Open
Fig. 8: Computation of the error term E(k) =(cid:80)N
the four proposed algorithms per iteration.
1
2(cid:107) ˆH k
j ak
j − ˆck
j (cid:107)2
2 for
j=1
Fig. 9: The estimation of σ and Ω using S-ADMM for the 145-bus model
Fig. 10: The execution flowchart of the distributed Prony using S-ADMM
1G2GIteration(k)05101520253035404550E10-1210-6100S-ADMMA-ADMMD-ADMM(G1)D-ADMM(G2)H-ADMMIteration(k)050100150200σ0.20.30.40.50.6σ1σ2σ3σ4Iteration(k)050100150200Ω(rad/sec)1.522.533.544.5Ω1Ω2Ω3Ω4Server startConfigStartAlgorithmSend aWaitReceive zWaitStopWaitReceive aSend zWaitStopFind RootsConfigStartAlgorithmSend aWaitReceive zWaitStopConfigProny Client 1Prony Client 3Prony ServerServerstartStartConfigStartAlgorithmWaitReceive zWaitStopProny Client 4ConfigStartAlgorithmSend aWaitReceive zWaitStopProny Client 2Send aCalculate zTABLE IV: T1: measurement exchange streaming delay, T2: computation
delay, T3: averaging plus parameter exchanging delay (All time delays are
measured for a single iteration, units are in milliseconds).
Algorithm
Centralized Prony
Distributed Prony
T1(ms)
42.8
0.1
T2(ms)
14.6
0.0932
T3(ms)
N/A
12.7081
Total Time
57.4
12.9
Resource Control Architecture (ORCA) to orchestrate the
networked cloud resource provisioning. We implement the
Architecture 1 in the flowchart shown in Fig. 10, where four
VMs serve as local PDCs (clients) and the fifth VM serves
as the central server. The IEEE 39-bus power system model
introduced in [17] is used here. The clients accept local PMU
data coming from the RTDS running this model, execute (11),
and send the estimates to the server. The server averages the
estimates and transmits the average back to the four clients
to proceed to the next step. The component-wise end-to-end
delays for every iteration are shown in Table IV. It can be
seen that although S-ADMM has a significantly large delay
T3, its end-to-end time is only 22% of that for the centralized
Prony. This is because both T1 and T2 for the distributed case
are much smaller than their centralized counterparts.
VII. CONCLUSIONS
In this paper, we presented four cyber-physical estimation
algorithms for wide-area oscillation monitoring using Syn-
chrophasors. Our algorithms demonstrate how multitudes of
geographically dispersed PMUs and PDCs can communicate
with each other, and how the various binding factors in the
network protocols can pose bottlenecks for their communication.
The results, thereby provide valuable insights and guidance
in deploying future PMU and PDC infrastructures, not only
for power systems but for any generic cyber-physical sensor
network where monitoring and control decisions need to be
made under critical time-constraints. Our future work will be
to evaluate the reliability of the proposed architectures under
different cyber-attack scenarios.
REFERENCES
[1] A. G. Phadke and J. S. Thorp, Synchronized Phasor Measurements and
Their Applications. New York, Springer, 2008.
[2] A. Bose, ‘‘Smart Transmission Grid Applications and Their Supporting
Infrastructure,” IEEE Transactions on Smart Grid, vol. 1(1), 2010.
[3] P. T. Myrda, J. Taft, and P. Donner, ‘‘Recommended Approach to
a NASPInet Architecture,” 45th Hawaii International Conference on
System Science (HICSS), 2012.
[4] D. P. Bertsekas and J. N. Tsitsiklis, Parallel and Distributed Computation:
Numerical Methods, Prentice-Hall, Inc., 1989.
[5] C. W. Taylor, D. C. Erickson, K. E. Martin, R. W. Wilson, and V.
Venkatasubramanian, ‘‘WACS Wide-Area Stability and Voltage Control
System: R & D and Online Demonstration,” Proceedings of the IEEE,
vol. 93(5), pp. 892–906, 2005.
[6] R. Hasan, R. Bobba, and H. Khurana, ‘‘Analyzing NASPInet Data
Flows,” IEEE Power Systems Conference and Exposition (PSCE), 2009.
[7] J. J. Sanchez-Gasca and J. H. Chow, ‘‘Performance Comparison of
Three Identification Methods for the Analysis of Electromechanical
Oscillations,” IEEE Transactions on Power Systems, vol. 14(3), 1999.
[8] J. F. Hauer, C. J. Demeure, and L. L. Scharf, ‘‘Initial Results in Prony
Analysis of Power System Response Signals,” IEEE Transactions on
Power Systems, vol. 5(1), pp. 80–89, 1990.
[9] N. Zhou, D. J. Trudnowski, J. W. Pierre, and W. A. Mittelstadt,
‘‘Electromechanical Mode Online Estimation Using Regularized Robust
RLS Methods,” IEEE Transactions on Power Systems, vol. 23(4), 2008.
9
[10] A. R. Messina and V. Vittal, ‘‘Nonlinear, Non-stationary Analysis of
Interarea Oscillations via Hilbert Spectral Analysis,” IEEE Transactions
on Power Systems, vol. 21(3), pp. 1234–1241, 2006.
[11] S. Boyd, N. Parikh, E. Chu, B. Peleato, and J. Eckstein, ‘‘Distributed
Optimization and Statistical Learning via the Alternating Direction
Method of Multipliers,” Foundations and Trends in Machine Learning,
vol. 3(1), pp. 1–122, 2011.
[12] S. Kar and G. Hug, ‘‘Distributed Robust Economic Dispatch in Power
Systems: A Consensus + Innovations Approach,” IEEE PES General
Meeting, 2012.
[13] Z. Zhang and M. -Y. Chow, ‘‘Convergence Analysis of the Incremental
Cost Consensus Algorithm Under Different Communication Network
Topologies in a Smart Grid,” IEEE Transactions on Power Systems, vol.
27(4), pp. 1761–1768, 2012.
[14] E. Dall’Anese, H. Zhu, and G. B. Giannakis, ‘‘Distributed Optimal Power
Flow for Smart Microgrids,” IEEE Transactions on Smart Grid, vol.
4(3), pp. 1464–1475, 2013.
[15] A. D. Dominguez-Garcia and C. N. Hadjicostis, ‘‘Coordination of
Distributed Energy Resources for Provision of Ancillary Services:
Architectures and Algorithms,” in Encyclopedia of Systems and Control,
J. Baillieul, and T. Samad (Eds.) Springer-Verlag, London, 2014.
[16] T. Erseghe, ‘‘Distributed Optimal Power Flow Using ADMM,” IEEE
Transactions on Power Systems, vol. 29(5), pp. 2370–2380, 2014.
[17] S. Nabavi and A. Chakrabortty, ‘‘A Real-Time Distributed Prony-
Based Algorithm for Modal Estimation of Power System Oscillations,”
American Control Conference (ACC), Portland, OR, 2014.
[18] S. Nabavi and A. Chakrabortty, ‘‘Distributed Estimation of Inter-area
Oscillation Modes in Large Power Systems Using Alternating Direction
Multiplier Method,” IEEE PES General Meeting, 2014.
[19] A. A. Fouad and P. M. Anderson, Power System Control and Stability,
IEEE Press, Piscataway, NJ, 2003.
[20] E. Wei and A. Ozdaglar, ‘‘On the O(1/k) Convergence of Asynchronous
Distributed Alternating Direction Method of Multipliers,” ArXiv preprint,
2013 [online] Available: http://arxiv.org/abs/1307.8254.
[21] R. Zhang and J. T. Kwok, ‘‘Asynchronous Distributed ADMM for
Consensus Optimization,” 31st International Conference on Machine
Learning, 2014.
[22] E. Wei and A. Ozdaglar, ‘‘Distributed Alternating Direction Method of
Multipliers,” IEEE Conference on Decision and Control, Dec. 2012.
[23] J. H. Chow and K. W. Cheung, ‘‘A Toolbox for Power System Dynamics
and Control Engineering Education and Research,” IEEE Transactions
on Power Systems, vol. 7(4), pp. 1559–1564, 1992.
[24] ‘‘Transient Stability Test Systems for Direct Stability Methods,” IEEE
Transactions on Power Systems, vol. 7(1), pp. 37–43, 1992.
[25] http://www.geni.net/
[26] J. Zhang, A. Chakrabortty, and Y. Xin, ‘‘Distributed Implementation
of Wide-Area Monitoring Algorithms for Power Systems Using a US-
Wide ExoGENI-WAMS Testbed,” invited paper for the 1st International
Workshop on Trustworthiness of Smart Grids, Atlanta, GA, June 2014.
Seyedbehzad Nabavi (S’12) received the B.S. degree from Amirkabir
University of Technology, Tehran, Iran, in 2009, and the M.S. degree from
North Carolina State University (NCSU), Raleigh, NC, in 2011, both in
Electrical Engineering. He is pursuing his Ph.D. in Electrical Engineering in
NCSU. His research interest is wide-area monitoring of power systems.
Jianhua Zhang (S’12) received the B.E. degree from the Jimei University,
China, in 2002, the M.E. degrees from Xiamen University, China in 2005, and
New Mexico Tech in 2010 respectively. She is pursuing her Ph.D. in Electrical
Engineering in NCSU. Her research interests are in wide-area monitoring,
security and control of power systems.
Aranya Chakrabortty (S’02–M’06–SM’15) received his PhD degree in
Electrical Engineering from Rensselaer Polytechnic Institute, Troy, NY in
2008. Since Fall 2010, he has been an Assistant Professor in the Electrical and
Computer Engineering department of North Carolina State University, Raleigh,
NC, where he is also affiliated to the FREEDM Systems Center. His research
interests are in all branches of control theory with applications to power
systems, especially in wide-area monitoring and control using Synchrophasors.
He received the NSF CAREER award in 2011.