# 【技术分享】硬件黑客技术——扩展你渗透的攻击面
|
##### 译文声明
本文是翻译文章，文章来源：unprovable.github.io
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[shan66](http://bobao.360.cn/member/contribute?uid=2522399780)
预估稿费：260RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**前言**
****
为了充分利用待评估的硬件，您应该熟悉多种安全测试领域——基础设施、网络、移动应用程序——因为这些现代设备都为我们提供了丰富的攻击面。硬件黑客技术可以极大扩展我们的渗透能力，不仅能够带来一些新的攻击方式，同时，还能增加我们的攻击深度。
**动机**
****
**持久性的问题**
目前，漏洞的“半衰期”（ **用户为其服务/软件中已识别的漏洞安装安全补丁所需的时间的一半**
）已经非常短暂了；对于托管的Web服务来说，可能只有几分钟，即使是维护可执行文件和各种服务所需的时间，也只有几个小时；就算是对于具有严格的回滚测试要求的客户来说，这个时间也只有几周而已。但是，对于硬件的安全漏洞来说，这个半衰期可能是几年时间，并且，如果开发人员不能正确使用相应的固件更新程序的话，那么这个半衰期就是直到该设备报废为止了。设备一旦安装，它就呆在那里长期运行，即使购买设备的人参加了相关的培训课程，常常也是三分钟热度，很少会记下如何更新它——当他真的需要动手更新的时候，就傻眼了。这就是硬件安全的真实写照。
**仅得到shell还远远不够**
在网络上面，确实有大量的“硬件黑客技术”指南，但是它们大多停留在“…现在你连接…”的阶段，让读者自己进行相关的攻击、测试和实验。它们根本不会指出真正的风险在哪里，以及如何处置。
是的，我明白（大多数）硬件黑客技术指南的价值仅限于通过UART获得设备上的r00t
shell，但坦白来说，这不是一个可行的攻击向量！当您通过UART访问受害者的设备的时候，难道不会引起受害者的警觉吗？或者，为了安装和审计开发用的头文件，还得随身携带该设备吗？
之前，我曾经[写过一篇](https://unprovable.github.io/jekyll/update/2016/12/06/Hardware-Hacks-Pt.-2.html)如何获取廉价UART的文章（大概只需要10英镑），不过，即使拥有了UART，这也只是万里长征的第一步而已！话说回来，如果能够对设备硬件进行这种低层的访问的话，许多原先无法进行的许多事情，现在也能够顺利完成了。
我稍后会提供UART的详细信息，但现在我只想解释一下，在安全人员的眼里，“硬件黑客技术”到底是什么意思，以及为什么该技术是有用的。
**什么是硬件黑客技术**
****
首先，我们来聊聊“硬件黑客技术”到底啥意思。这是一个非常宽泛的话题——它涵盖了电路改装、回收再利用技术、破坏游戏机上的DRM、访问内置于产品PCB中的IC的调试功能，设计并获得了一个arduino/RasPi/（通用微控制器）来完成手头项目中的某项任务、访问/写入受保护的ROM区域、逆向没有公开的数据表的IC，等等。
由于硬件黑客技术是一个很广的话题，所以我不想陷入定义的泥潭——这些都可以称之为“黑客技术”。
对于我来说，作为一名渗透测试人员和安全研究人员，硬件黑客就是从攻击者的角度分析IoT/硬件，以期找到恶意利用系统的途径。所以，我对“如果我可以使用芯片访问调试/终端界面的话，我会做些什么？”的回答是，使用这种深层次的权限来测试系统的弱点和安全漏洞。这就是我的兴趣之所在，并且一开始就明确表示过了。
因此，以下是我面对设备会想到的各种问题：
**除了（产品说明书中）的功能之外，我还能做什么？**
1.我真的拿微控制器来控制灯光吗？
2.我有固件控制的收音机可以回收利用吗？
3.如果硬件具有许多高级功能，并且这些功能已经超出你的任务所需，那么是否可以将其用于其他方面吗？
4.我可以把它变成一个恶意敲诈设备吗？例如用来完成窃听、录像、泄露敏感的用户数据或个人身份信息（PII）等。
我可以从硬件中获得其所有者的相关数据吗？例如PII、用户名、密码、2FA密钥、密码私钥等。
我可以把设备变为僵尸网络/BTC矿机吗？这是利用黑掉的设备赚钱的最简单的方法——让它们将挖到的BTC发到自己的钱包，或将其添加到僵尸网络，然后出售DDoS服务。
还能想到通过这个设备和其他设备来受益的其他恶意活动吗?
**一些攻击场景和常见的漏洞**
假设你是一名渗透测试人员，在测试的过程中需要黑掉一部设备——那么，现在该怎么办？事实上，从安全角度来看，与硬件黑客有关的攻击对象和攻击手法有很多，特别是：
**过时的软件**
对于物联网来说，供应链是一个重大的问题。[英国最近的一次大规模的黑客攻击](https://www.theregister.co.uk/2016/12/08/talktalk_routers_may_be_botnet_imperva_says/)表明，设备的通用底层软件中存在许多严重的安全漏洞。但这些缺陷到底是怎么来的？在某种程度上，这是一个供应链问题。
这里的软件通常（不正确地）指的是ZyXEL（[Allegrosoft](https://www.allegrosoft.com/)为嵌入式系统制造的软件），包括非常受欢迎的RomPager服务器软件。很明显，在这次黑客攻击之后，人们才发现这个软件存在安全问题。不过据消息人士透露，Allegro早在2005年就修复了这个漏洞，根据checkpoint披露的“misfortune
cookie”漏洞来看，它们在本质上是相似的。
那么，究竟是什么地方出了问题？嗯，像任何其他公司一样，Allegro公司也是要赚钱的，所以他们直接向IC厂商出售其软件。反过来，这些制造商开发出一款芯片后，会随芯片销售/赠送一套相应的SDK，这样公司就能迅速将产品推向市场。所以，问题就出在制造商从未进行升级，所以产品设计师也从未升级过，但是年复一年，这些这些设备一直在生产、销售和应用中——所以这个漏洞从2005年开始就存在了，直到2017年攻击事件发生才引起人们的注意，所以问题主要出在供应链的延迟线效应上面。
有时候，您会见到一些从未听说过的网络服务器（因为早在2003年它们就已经停产了，如D-Link的Boa
webserver），而且有些DNS服务器比您内衣品牌的历史都要悠久，许多内核版本都是属于博物馆级别的，更不要说它们正在运行的busybox的版本了。
**Wi-Fi之痛**
在已经发现的攻击中，许多都是针对商业Wi-Fi环境的。但从这点来看，你从少年时起的Wi-Fi经验倒是没有浪费。
**远程命令执行（RCE）**
许多情况下，您可以通过互联网发送命令，并在本地设备上以r00t身份来运行各种命令。这显然是非常糟糕的——这种漏洞是许多攻击的源头。许多设备也通过BASH脚本运行所有的东西（甚至网页），因为可以省去PHP服务的开销。不过，这样做也会带来安全方面的风险：通过注入RCE字符串，攻击者就可能从管理设备的Web应用程序的某处找到某些有用的东西。