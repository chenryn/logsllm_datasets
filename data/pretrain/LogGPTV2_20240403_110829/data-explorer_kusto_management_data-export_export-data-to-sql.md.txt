---
title:  Export data to SQL
description: This article describes Export data to SQL in Azure Data Explorer.
ms.reviewer: orspodek
ms.topic: reference
ms.date: 06/20/2023
---
# Export data to SQL
Export data to SQL allows you to run a query and have its results sent to a table in an SQL database, such as an SQL database hosted by the Azure SQL Database service.
## Permissions
You must have at least [Table Admin](../access-control/role-based-access-control.md) permissions to run this command.
## Syntax
`.export` [`async`] `to` `sql` *sqlTableName* *sqlConnectionString* [`with` `(`*propertyName* `=` *propertyValue* [`,` ...]`)`] ` ... > Database Features > Bulk Import and Export of Data](/sql/relational-databases/import-export/prerequisites-for-minimal-logging-in-bulk-import).
5. Data export is performed using SQL bulk copy and provides no transactional guarantees on the target SQL database. See [Transaction and Bulk Copy Operations](/dotnet/framework/data/adonet/sql/transaction-and-bulk-copy-operations).
6. The SQL table name is restricted to a name consisting of letters, digits, spaces, underscores (`_`), dots (`.`) and hyphens (`-`).
7. The SQL connection string is restricted as follows: `Persist Security Info`
   is explicitly set to `false`, `Encrypt` is set to `true`, and `Trust Server Certificate`
   is set to `false`.
8. The primary key property on the column can be specified when creating
   a new SQL table. If the column is of type `string`, then SQL might refuse to create the
   table due to other limitations on the primary key column. The workaround is to manually create the table in SQL before exporting the data. The reason for this limitation is that primary key columns in SQL can't be of unlimited size, but Kusto table columns
   have no declared size limitations.
## Azure DB Microsoft Entra integrated authentication Documentation
* [Use Microsoft Entra authentication for authentication with SQL Database](/azure/sql-database/sql-database-aad-authentication)
## Examples
In this example, Kusto runs the query and then exports the first record set produced by the query to the `MySqlTable` table in the `MyDatabase` database in server `myserver`.
```kusto 
.export async to sql MySqlTable
    h@"Server=tcp:myserver.database.windows.net,1433;Authentication=Active Directory Integrated;Initial Catalog=MyDatabase;Connection Timeout=30;"
    <| print Id="d3b68d12-cbd3-428b-807f-2c740f561989", Name="YSO4", DateOfBirth=datetime(2017-10-15)
```
In this example, Kusto runs the query and then exports the first record set produced by the query to the `MySqlTable` table in the `MyDatabase` database in server `myserver`.
If the target table doesn't exist in the target database, it's created.
```kusto 
.export async to sql ['dbo.MySqlTable']
    h@"Server=tcp:myserver.database.windows.net,1433;Authentication=Active Directory Integrated;Initial Catalog=MyDatabase;Connection Timeout=30;"
    with (createifnotexists="true", primarykey="Id")
    <| print Message = "Hello World!", Timestamp = now(), Id=12345678
```