            }
            if (g_finded_low)
                break;
        }
        return 0;
    }
    DWORD CalcThreadHigh(PVOID start_v) {
        DWORD64 ustartv = (DWORD64)start_v;
        for (DWORD64 i = 0; i > 8;
        DWORD64 _3 = (v & 0xFFFFFF) >> 16;
        DWORD64 _4 = (v & 0xFFFFFFFF) >> 24;
        DWORD64 _5 = (v & 0xFFFFFFFFFF) >> 32;
        DWORD64 _6 = (v & 0xFFFFFFFFFFFF) >> 40;
        DWORD64 _7 = (v & 0xFFFFFFFFFFFFFF) >> 48;
        DWORD64 _8 = (v & 0xFFFFFFFFFFFFFFFF) >> 56;
        return _2 | (_1 > 56);
    }
    DWORD64 re9(DWORD64 v) {
        DWORD64 nv = ((v >> 32) & 0xFFFFFFFF) | (v > 8;
        DWORD64 _3 = (v & 0xFFFFFF) >> 16;
        DWORD64 _4 = (v & 0xFFFFFFFF) >> 24;
        DWORD64 _5 = (v & 0xFFFFFFFFFF) >> 32;
        DWORD64 _6 = (v & 0xFFFFFFFFFFFF) >> 40;
        DWORD64 _7 = (v & 0xFFFFFFFFFFFFFF) >> 48;
        DWORD64 _8 = (v & 0xFFFFFFFFFFFFFFFF) >> 56;
        return _8 | (_7  0x30)
    s.add(k[7] < 0x40)
    s.add((k[7] - 0x30) * 11 + 1 == k[9])
    s.add(k[8] % 17 == 16)
    s.add(k[9] == k[8] * 2)
    # s.add(md5(k[10] * b'a').digest()[0] - 1 == k[3])
    s.add(k[12] == k[14] / 2 - 2)
    s.add(k[13] == (k[10] * k[8] % 32) * 2 - 1)
    s.add(k[14] == (k[12] ^ k[9] ^ k[15]) * 3 - 23)
    if s.check():
        model = s.model()
        for i in range(16):
            if i == 5:
                continue
            print (chr(model[k[i]].as_long()), end='')
    else:
        print ("No result")
    #flag{f92de703d}
## Crypto:
###  Silver Water Industries(Low:
go语言写的加密，审计一下代码，大致意思就是首先随机产生一个token和N，然后加密token，加密方式为一个字节8个比特，每次产生一个x,若该比特为0，结果为x^2
%N,否则结果为-x^2 %n。显然利用二次剩余来做，如果c,n的雅可比符号为1则为0,否则为1,还原token，再传给服务器
    from gmpy2 import *
    n=285093357453242924013602862066919842439
    c=['[7901544350463174591988078511923324618 184537633212194745105080990647249325476 38267354157968351348766484298141745170 115578755446448863198748495896654060883 227909878717027446328962010664108571738 68952806770118848950271133491209711403 102984378629787175198877216543195333448 113165098929714836603634331678300868297]',
    '[275785769863995996812546673147981657234 282132616793095905121920207741461086689 199143850961491870800209491624969361487 183070115427467531790361759454036865061 174393613375943957860321020903916142619 275194645696846365608618082603600388856 69288446973059562436205397370105909769 250845592176683528425664336374779963821]',
    '[240850912688047949049104289493502779367 37079483245590817588925021564795982646 284919536320463992115907743100691646551 267192067339793515017095456897132371813 121182789195982671419488187218656063538 130399763650220078736112759705997664043 58302430717741410187195454791677533281 52776571634234783572905063268137693827]',
    '[169777727664099029285002240103810929277 154451872004779288578874468507232138100 82607738862097099187707193194906553213 74662089586650151383705654824195379245 163301594729741444134552005626107105446 108759358332127220212407980222708706220 246214280347131537365215918063843772859 116415814239906926802482107105787268443]',
    '[908795231417421999718079313192191569 113455638257352165842372458444946217639 227447469062670411453330654385127815004 283532690966429919679614173872514718001 276175993211834485081856703624558763131 173640901552892130398996800843730480762 76779834958653181435792827716925863702 206290664138933571395486720765404890504]',
    '[123026279266464883266609008668623052393 40509778382957676307060245062252843393 95602462953785104138868279951166751882 43531259745075979730966911287989076615 82865327448522727488114604383808371535 207895953061666333553235571802877275412 65646216101552631749973551787307289641 123721676641648433423267884043005926042]',
    '[84235175585568651415313489109394597433 19269802923648441086555654660091822017 55658696563260880937491989834257209829 234537578061003475348324817681194241847 59802057487646966284905470410391468989 128776397130280003156298859718500600288 58714047777453918627738504174915596756 5382371557403759511409510761755596277]',
    '[142277648732395720338819526212844406606 105745456860747198927985508383729091578 7664467883802846117259187758423823692 192823773181406078295010428559954020697 35520988140119792330289151131523684908 76369098233361904415663724932463253635 257882448880941611481506133326850304617 201269699223045546065503672803127316556]',
    '[184609218721168183180805721365560584754 185020056544825781738449415772019342386 128805039558112680342001303071294028640 10656747463930421123322245691391167264 256942413240582039041230005139151025018 199624812561500081484838114437018161725 261608146489322534451783563132106825107 197042738069178244994802319518477132885]',
    '[270173223698478270395600379839285853220 57941625935617136420077100942293109042 42866159881477101699934525188688478291 246776886005156260287696971384169750083 137171422362434302212095391922793796625 189256954049770715201795707892595939413 122402164719872436761127887207817393790 98066517796093669928393689884743077086]',