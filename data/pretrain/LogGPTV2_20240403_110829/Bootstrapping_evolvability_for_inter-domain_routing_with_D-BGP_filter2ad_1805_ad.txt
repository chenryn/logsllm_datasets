3.4 Example usage
Evolvability for critical fixes: D-BGP allows E1 and E2 from the ex-
ample in Section 2.2 to include Wiser’s path costs in IAs they advertise
to ASes in the gulfs. They also include the address of a service portal
that neighbors on the other side of the BGP gulf can contact to peri-
odically send the costs of paths those neighbors receive from them.
This allows path costs to be scaled before path selection (the scaling
value must be guessed to initially select paths). Path costs and the
portal address are passed through the gulf so that the source AS (S)
is able to see them and use them to select the lower cost, longer path.
Off-path discovery for custom protocols: D-BGP allows Island
T in the example from Section 2.3 to discover and use one of the
MIRO island’s alternate paths as follows. First, the MIRO island (M)
uses IAs to advertise a path to a service portal it provides. It includes
an island descriptor within the IA similar to the one described in
Section 3.2. Second, Island T receives the IA, along with the island
descriptor, which has been passed through the BGP gulf. Third, Island
T contacts the service portal to negotiate use of the alternate path and
the tunnel address to use. Fourth, Island T tunnels its traffic destined
for the destination (D) to Island M.
Evolvability for replacement protocols: D-BGP enables the right-
most SCION island in the example from Section 2.4 to advertise both
of its within-island paths to the SCION island (S). To do so, the left-
most border router in the rightmost SCION island creates an IA for
the prefix advertised that includes control information for a SCION
path that has been redistributed into BGP. It also includes both of its
within-island paths within an island descriptor. When the SCION
island (S) receives the IA, it extracts the SCION-specific control in-
formation, chooses a within-island path, and encodes it in a SCION
header, which it attaches to data packets. It encapsulates the packet
with an IPv4 header so that the packet can cross the gulf.
3.5 Limitations & discussion
Limitations of evolvability features: D-BGP is subject to the limita-
tions of the evolvability features it incorporates. Most notably, the
benefits afforded to new protocols can be curtailed by indiscriminate
path choices within gulfs and ill-informed path choices within upgraded
islands. Both will result in routing paths that are less compliant with
the desired protocols’ goals than other possible paths that could have
been selected. The former occurs because ASes in gulfs will not take
Protocols that aim to optimize some global objective function are
affected by both limitations. To help protocols of this category that
are especially sensitive to decreased routing compliance, ASes could
employ the following techniques to increase it. They could wait until
a minimum threshold number of ASes install a given new protocol
before using it to select paths (i.e., before deploying it). Alternatively,
they could deploy a version of the new protocol that is capable of
switching between either the baseline’s path-selection algorithm or
the new protocol’s algorithm depending on the number of domains
on individual routing paths that have themselves deployed it. Either in
addition to or instead of the above approaches, they could use tunnels.
Protocols that only aim to expose information local to islands are
only affected by the first limitation. They are less sensitive to reduced
compliance, but could also use the above approaches to increase it.
Limitations of using BGP as a starting point: There are three
key limitations. First, D-BGP cannot accelerate incremental bene-
fits for critical fixes that add secure path advertisements (e.g., BG-
PSec [8]) because attackers could send spoofed advertisements to
the first gulf AS on routing paths regardless of how many other is-
lands are included [12, 31]. However, D-BGP’s extensions could be
deployed alongside these protocols. Second, D-BGP’s advertisements
are hampered by BGP’s single best-path limitation, which prevents
them from disseminating multiple inter-island paths. This means is-
lands running path-based (e.g., SCION [63]) or multi-hop protocols
(e.g., Pathlet Routing [21]) must choose a single best inter-island path
for a prefix at their borders. Using a path-based protocol, multi-hop
protocol, or a version of BGP that supports advertising multiple paths
per destination [57] as the starting point for integrating our evolvabil-
ity features would eliminate this limitation. Third, because BGP only
supports one-way advertisements (from destinations to sources), D-
BGP cannot naturally facilitate the deployment of two-way protocols,
such as Wiser [32] or R-BGP [29]. Control information sent from
sources to destinations must occur out-of-band of D-BGP.
Potential concerns with D-BGP: We do not anticipate D-BGP’s
evolvable Internet will result in increased convergence times because
BGP already gives ASes significant flexibility when making routing
decisions and in choosing the rate at which to disseminate advertise-
ments. Since D-BGP’s IAs will be larger than BGP’s advertisements
(see Section 6.2), D-BGP may increase convergence times when a
large number of them must be transferred at the same time (i.e., after
session resets between D-BGP peers). Incorporating fault-tolerance
mechanisms within D-BGP speakers could mitigate the need for such
transfers [51]. Islands may cause convergence issues if they switch to
using new protocols very often—e.g., at the same rate as link failures
(about 172 per day over a two-month period as measured from four
Internet vantage points [28]). But, we anticipate that islands will de-
ploy new protocols more slowly than the rate at which link failures
occur and will use planned rollouts to minimize disruptions.
Our D-BGP design does not allow for prefix aggregation by proxies,
which may negatively impact control-message sizes and processing
overhead. Our initial D-BGP design incorporated proxy-aggregation
support, but we removed it because we found that proxy aggregation
is barely used today (only 0.1% paths are aggregated [9]) and many
Bootstrapping evolvability for inter-domain routing with D-BGP
SIGCOMM ’17, August 21–25, 2017, Los Angeles, CA, USA
of the protocols we analyzed have limited potential to use it. For
example, BGPSec’s attestations cannot be aggregated [9] and it is not
clear how to aggregate Wiser’s path costs.
Deployment of D-BGP itself: This section and the following ones
assume that D-BGP is the baseline protocol. But, getting to this point
requires a transitional phase during which D-BGP is incrementally
being deployed across contiguous domains. During this phase, D-
BGP speakers could simply drop IAs’ extra fields before sending
advertisements to legacy ones that have not deployed it. They could
translate between D-BGP’s path vector and BGP’s path vector (which
only allows 2-bytes per entry) using techniques similar to how 4-byte-
per-entry path vectors are being deployed today within BGP [56]. We
leave a thorough discussion of how D-BGP could be incrementally
deployed to future work.
4 D-BGP’S EVOLVABLE INTERNET
To show D-BGP’s utility, Figure 6 illustrates the type of rich and evolv-
able Internet with many routing options it could enable. This rich
Internet is composed of several different types of protocols, includ-
ing BGP, different critical fixes to it, different types of replacement
protocols (path-based, multi-hop), and custom protocols. This Inter-
net could either converge to using a single critical fix or replacement
protocol Internet-wide or could continue to exist in its current hetero-
geneous state. Our example uses protocols already discussed in this
paper, but other types of critical fixes [6,59], custom protocols [1,36],
and replacement protocols [19,61] could also be used.
Figure 7 shows one possible IA in this rich, evolvable Internet. It is
the one disseminated by Island G to Island 8 for the 131.4.0.0/24 prefix.
This IA illustrates how Pathlet-Routing islands could use IAs, how
Wiser islands could exchange path costs using them, and how SCION
islands could use them. The path shown in the IA traverses Island G
(Pathlet Routing), Island 11 (Wiser // MIRO), Island F (SCION), AS
14 (BGP), and Island D (Pathlet Routing). An alternate path to this
prefix would have been through AS 10 (BGP). But, because Island F
has only one peering point with Island 11, it had to pick one of the
two inter-island paths due to BGP’s single best-path limitation.
Path descriptors for this IA include one for Wiser, which describes
Island 11’s contribution to the path cost, and various ones shared by
Wiser and BGP. This IA contains many island descriptors. Island D
has included island descriptors for Pathlet Routing. These descriptors
contain forwarding IDs (e.g., 1) and the within-island pathlets that
correspond to them (e.g., (dr1, dr2)). This means that traffic received
by Island D’s border router dr1 whose headers contain a forwarding
ID of 1 will be forwarded to some within-island router dr2. dr2 will
examine the packet header and forward traffic as per the next ID
listed. Island D has exposed pathlets that can be combined into two
distinct within-island paths to the destination.
Island F has included one island descriptor describing the within-
island paths that can be used within its island. These paths are spec-
ified at the level of member ASes’ border routers (fr). Island 11 has
inserted an island descriptor stating the IP address of a portal Wiser
islands on the other side of gulfs can contact to exchange the path
costs they advertise to each other. For this advertisement, Island 11’s
across-gulf neighbors are Islands 8 and B. Island 11’s descriptor also
includes information about its MIRO service.
Figure 6: A rich & evolvable Internet facilitated by D-BGP.
Figure 7: IA at point 1 of the rich-world topology.
Island G has exposed a set of pathlets that provide connectivity
between its island border routers gr1 and gr10. It has also exposed an
inter-island multi-hop pathlet to Island D’s border router (shown by
(gr10, dr1) in Figure 7 and the dotted line in Figure 6). Doing so allows
Pathlet Routing’s decision modules to work without knowledge of
gulfs when creating end-to-end paths out of the pathlets they receive.
5 BEAGLE: A D-BGP PROTOTYPE
To understand challenges involved in implementing our D-BGP de-
sign, we extended Quagga 0.99.24.1’s BGP daemon to support IAs
and IA processing. Quagga is a software-based, open-source router
that is used in datacenters [40]. It supports IPv4- and IPv6-based
network protocols. Therefore, Beagle, the name of our prototype, can
support inter-domain routing protocols that use IPv4 or IPv6, either
BGP131.5.0.0/24WISER || MIROSCIONPathlet RoutingBGPWiserPathlet RoutingBGPSecBGPWiserLegend: ReplacementCritical fixBGP 110FD12131.1.0.0/24Custom11G814BSCIONCPathlet RoutingCost-exchange portalMIRO service portalgr10A131.2.0.0/24131.3.0.0/24131.4.0.0/24gr1dr1Inter-island pathlet13fr1fr7Protocol(s)Field(s)WiserWiser, BGPPath cost OriginNext hopBaseline Address:131.4.0.0/24PathdescriptorsPath vectorIsland descriptorsValue(s)75Protocol(s)Field(s)Value(s)EGP195.2.27.0/32Island IDs “Island IDG“D“DPathletWithin-island pathlets1: (dr1, dr2), 5: (dr2, dr4),Routing9: (dr4, 131.1.4.0/24)3: (dr1, dr3), 4: (dr3, dr4),GPathletRoutingWithin-island pathlets7:( gr3, gr10), 8:(gr10,dr1)3:(gr4 ,gr10), 6: (gr1, gr3),“F111: (gr1 , gr4),SCIONWithin-island fr1 fr9 fr11 fr7pathsfr1 fr2 fr3 fr7FMIRO154.63.23.2Portal addr154.63.23.1CoordinationWiserPortal addr1114SIGCOMM ’17, August 21–25, 2017, Los Angeles, CA, USA
R.R. Sambasivan et al.
natively (e.g., BGP and its critical fixes), or by using within-island tun-
nels to mimic needed additional data-plane features (e.g., as needed
for multi-hop protocols and path-based ones). Modifying Quagga to
create Beagle involved adding or modifying 769 lines of code. We do
not include the automatically generated protocol-buffer [37] code we
used to serialize IAs in this number.
Beagle works by interposing on Quagga’s BGP advertisement pro-
cessing for IPv4. It adds APIs that allow protocols to define their
own decision modules and to allow replacement protocols to define
translation modules and redistribution modules. It modifies Quagga’s
processing to extract the active protocol’s control information (and
any shared information) from IAs and send it to the relevant decision
module. Decision modules share Quagga’s IPv4 RIB.
Overall, we found it easy to add support for IAs and IA processing
to create Beagle. The main difficulties were as follows. First, we had
to re-architect Quagga slightly to support multiple inter-domain
routing protocols’ decision modules; currently, the assumption that
only BGP’s path-selection algorithm will be used is baked into the
code. Second, we found Quagga’s hand-rolled routines for serializing
advertisements and memory management brittle and complicated.
Thus, for the purposes of experimentation, Beagle disseminates IAs
out-of-band by storing them in a lookup service. We would need to
implement more extensive modifications to extend Beagle to support
natively network protocols that are not based on IPv4 or IPv6. For
example, we would need to break Quagga’s (and BGP’s) requirement
that direct neighbors support the same set of network protocols.
Overhead of Beagle’s code modifications: We ran a stress test on
Beagle and Quagga to understand the overhead of Beagle’s serializa-
tion and processing additions. The test used multiple peers to send
advertisements to the router under test (either Beagle or Quagga).
Each peer sent 150,000 advertisements (advertisements were col-
lected from RIPE [11]). We used BGP’s path-selection algorithm to
select paths when benchmarking both routers to isolate the overhead
of our evolvability extensions. The test was run on a single machine
with two Intel E5-2640 CPUs (16 cores each), with one core assigned
to the router under test. Six concurrent peers were used to saturate
the router’s CPU. Our results, which are the average of three runs of
the stress test, show that Beagle’s processing overhead is negligible
compared to Quagga (40,700 prefixes/s vs 40,900 prefixes/s for BGP-
only advertisements). When IAs are additionally exchanged, Beagle’s
performance decreases with IA size due to extra serialization cost
(e.g., 7073 prefixes/s for 32KB IAs and 926 prefixes/s for 256KB IAs).
We chose to implement Pathlet Routing within Beagle to demonstrate
one way this replacement protocol could incorporate our evolvability
features.
Our basic Pathlet-Routing implementation (without modifications
to support being deployed across gulfs) totals 509 lines of code. It
names pathlets by assigning unique IP addresses to them. It uses IAs
that carry individual pathlets as its advertisement format. Our basic
Wiser implementation only required 109 lines of code as it is very
similar to BGP.
We found that it was straightforward to modify both protocols to
be deployed across gulfs. For Pathlet Routing, 293 lines of additional
code was required. We had to create a module to redistribute a set
of pathlets that could be used to reach within-island destinations or
islands’ egress points into BGP. We also had to create translation mod-
ules to translate between within-island advertisements (which only
carry single pathlets) and IAs that cross gulfs (which can carry many).
Our translation-module implementation was simplified somewhat
because we only added island IDs to IAs and omitted within-island
ASes.
For Wiser, only 255 lines of additional code was needed. We only
needed to create a cost-exchange service to allow downstream islands
to exchange path costs with upstream ones. In a purely contiguous
deployment, this need for downstream communication could be
averted if upgraded ASes’ border routers coordinate to sum the cost
of paths they receive from direct neighbors [32].
Testing our modifications: To verify that our modifications work,
we deployed Wiser and Pathlet Routing across a gulf using the topol-
ogy shown in Figure 8. D-BGP, as implemented by Beagle, is the
baseline. The lookup service is used to exchange IAs out-of-band.
We verified that the source AS S in Island B could see important
per-protocol control information for paths to the destination AS D
in Island A. The islands shown use either Wiser or Pathlet Routing
depending on the protocol we are testing. In Wiser’s case, the lookup
service is also used as cost-exchange portals for both islands.
To test our Wiser modifications, we set up path costs so that the
longer path to AS D has a higher cost than the shorter one. We
verified that AS D saw these path costs. For Pathlet Routing, we
disseminated four one-hop pathlets to AS D within island A using
its advertisement format (shown by the single dotted arrows). We
configured Border AS A2 to create a two-hop pathlet out of two of
the one-hop pathlets it receives. It translates this two-hop pathlet and
6 EVALUATION