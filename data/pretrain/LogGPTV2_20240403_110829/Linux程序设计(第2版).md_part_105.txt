542
Linux程序设计
proc tree::BuildwhenIdle wid {
variable tree
it[![info exists tree(Swid:buildpending}l}{
set tree(Swid:buildpending)1
after idle *tree::Build Swid*
1
最后的tree:labelat例程将返回给定x和y素材坐标处的结点。关键在于使用了画布素材的内
建命令。如下所示：
tree::labelat *
Returns the tree node closest to x,y co-ordinates
Arguments:
w1d
tree widget
co-ordinates
Results:
The node closest to x.y will be returned.
proc tree::labelat (wid x y) (
set x [Swid canvasx $x]
set y [§wid canvasy $y]
foreach n[$wid find overlapping $x Sy $x Sy](
variable tree
if ({info exists tree(Swid:tag:Sm]]}
return $tree ($wid:tag:$m)
return **
因为树素材的基石是画布，所以树素材将支持画布所有的绑定命令，命令的语法也完全
-样。
包文件的生成
现在，我们已经定义好复合型的树索材了，我们该怎样使用它呢？在我们开始使用这个树
素材开发一个新的应用程序之前，需要为这个树素材生成一个pkglndex文件。具体做法是：把
trce.tcl文件拷贝到/usr/local/lib/tcl子目录里，然后在一个wishshell里运行下面这些命令：
S wish
pkg_mkIndex.tree.tol
/q/t//o
这会在/usr/local/lib/tcl子目录里生成一个pkglndex.tcl文件。在创建这个文件之前请先查明没
有旧的pkglndex.tcl文件，因为tcl将覆盖掉它。
生成pkglndex.tcl文件之后，还需要通知你的应用程序你打算使用树素材，这需要把
/usr/local/ib/tcl子目录追加到auto_loadpath路径上，具体做法是增加下面这两行：
Lappend auto_path /usr/local/1ib/tc1
Package require tree
加入java编程群：524621833
---
## Page 561
第16章X富口系统的程序设计
543
16.7使用复合型树素材的应用程序
我们用树素材包来开发一个简单的应用程序。我们将要开发的应用程序将把一个根文件系
统的树状层次结构显示出来。
我们先要通知应用程序两件事：素材包文件的存放地点和要用它来加载树素材包。如下所示：
1/usr/1ocal/bin/wish
 Sinple application showing the use of tree mega widget
lappend auto_path/usr/loca1/lib/tk
package require tree
现在，我们要通知在parent和tail例程上面的树素材。在缺省的情况下，它们就是普通的文件
操作例程dirname和tail，因为我们将要显示的是一个根文件系统。如下所示：
 Create utility procs that tree wiget uses to query parent
and tail conponents of a node
proc parent (item}(
retuzn [file dirname $item]
prec tail(ites)(
1
return [file tail $item]
创建用来显示子目录和文件图像的图像，如下所示：
# Create imanges that we use to display directory and a norral file
image create photo idir -data(
R01GODdhEAAQAPIAAAAAAHh4eLi4uP54APj4+P///wAAAAAAACWAAAAAEAAQAAADPVi63P4w
LkKCtTTmUsXwQqBtAfh910UU4ugGAEucpgnLNY3Gop7fo1wNOBCeiEYQ0acDpp6pGAFArVqt
hQQA0// /
image create photo ifile -data{
R01GODdhEAAQAPIAAAAAAHh4eLi4uPj4+P///WAAAAAAAAAAACwAAAAABAAQAAADPKix2POD
yADrWE8qC8aoN0+BZAnBq1GMOqwigxFxCrGk/cxjjr27fLtout6n9eMIYMTXsFZsogXRKJf6u
POkCADv/
1
我们编写的下面这个例程的功能是这样的：如果用户双击一个项目，而这个项目又恰好是
一个子目录，就把该结点的子结点们动态地增加显示出来。
# Dymamically add entries to the tree widget
proc AddDir {wid dir) (
+
if:[file isdirectory $dir ]（
return:
foreach file [exec ls Sdir]{
if [file isdirectory Sfile}
set file [file join $dir Sfile]
)else(
tree::additem Swid [fiie join sdir Stile} -image idir
tree::additem Swid [file join $dir Sfile]-image ifile
加入iaVa编程群：524621833
---
## Page 562
544
Linux程序设计
5
主程序部分创建出这个树，并为树素材设置好双击动作的绑定。它还负责给这个树素材加
上顶层结点。
main proc
申bot
 Create tree wiget and set up bindings
上
tree::create .t -width 150 -height 400
申
甲自
fpp
 open a node when gete double clicked.
hone
.t bind x {
自
putsCallled"
set child {tree::labelat W &x by]
nied
AddDir % $child
tree::openbranch ew Schi1d
fod
t
AddDir .t /
申root
# nange the wiget
申mo
申
update
var
n
当你运行这个程序的时候，应该看到类似于图16-20这
样的窗口。
图16-20
16.8Tk进程记录查看器
在学习如何创建一个复合素材的方法之后，有没有兴趣用Tk8.0里的新功能（比如事件机制）
-x
那我们为什么不编写一个应用程序把这些命令的输出显示在一个文本窗口里呢？我们还将为他
们运行的命令创建快捷键，这样，用户就可以通过点击这些快捷键再次运行那些命令了。
这个应用程序支持两种形式的记录一文件记录和命令记录。文件记录记的是“tail-f
filename”类型的命令，而命令记录记的是“find/-print”命令。用户可以在文件记录的输出里
指定一个文件名和一个快捷键。一个“tail-ffilename”类型的命令将被构造和关联到指定的快
捷键上去。但对命令记录来说，用户就必须给出完整的命令名和快捷键名。
我们给这个应用程序起名为“TkProcessLogViewer”（Tk进程记录查看器）。那么，打造这
个应用程序都需要哪些材料呢？从用户操作界面方面考虑，我们需要一个用来处理命令的菜单
条、一个用来显示输出的文本素材、一个用来显示错误信息的状态条、几个用来设定命令及其
快捷键名的输人框、还要有一个用来显示当前可用快捷键名的选项按钮。我们还需要有一个用
来终止当前查看操作的“stop”按钮，在菜单条里还应该有一个用来删除不想要的快捷键名的
“delete”按钮。
加入jaVa编程群：524621833
---
## Page 563
第16章X窗口系统的程序设计
545
我们从定义全局变量开始动手，这些变量将用来建造我们的应用程序。我们把所有这些全
局变量保存在一个名为tailOpts的数组里。
!/usr/local/bin/wish8.0
lcgView.tk
that will output data
continuosly. This Gul has the ability to record
again and again without having to retype
get tailRc'-/.tailre*
wn title.
*Process Log Viewer*
wm iconnane .*Log Viewer*
global tailSize textw fileNane tailrd curNick tailOpta statusImgWin
tailSize --> cize in lines of tail output to display
#fileName -->Pile name:variable
tailFd
--> proc fd or file fd of current tail process
tail0pts -->saved options
curNick
statusIngwin --> window showing what kind of error it is!
set fileName */usr/1ocal/prccesslcg/logView.tx*:
set tailsize 20
include your owm path here
file types for the file selection diaiog box.
set tail0pts(types)(
"All files"
"Text files
{.txt
*}
("Text files'
,doc)
{}
{'Tcl Scripts*
{.tcl}
TEXT)
(°C Source Files*
{All Source Files*
(.tcl.c.h)
(.c.h}
{Inage Pilos*
{'Inage Files*
(.ipeg.jpg)
(.gif}
{*Image Files*
(GIFF JPEG}}
set taiiopts(wins) ()
接着，我们来建造用户操作界面。首先是带“File”和“Edit”命令的菜单条。“File”菜单
退出这个应用程序的“exit”按钮。“Edit”菜单里有--个“DeleteNicks”按钮，它被用来编辑
当前快捷键。
global tailSize textw fileName tailfd eurNick tailopts statusIngWin
global viewOptMenu
if [S *,*}{
set w *';
Baild Menu for file
#
menu Sw.benu -tearoff 0
加入java编程群：524621833
---
## Page 564
546
Linux程序设计
 File meru
set m Sw.menu.file
menu Sm -tearoff 0
$w.menu add cascade
-1abelFle*-menu Sm-underline 0
Sm add command -label *Add New ...*
$m add command -1abel *Exit* -coemand {exit) -underline 0
Edit Menu
set m w.menu.edit
menu $m -tearoff 0
Sw.menu add cascade -label*edit"-menu Sn -underline 0
Sm add coxmand -labe1*Delete Nicks..*-coemand (DeleteNicks)-underline 0
 Kelp Menu
set m Sw.nenu.help
menu Sn -tearoff 0
$w.menu add cascade
$m add conmand -label*About...
-1abel*Help*-menu Sm-underline 0
tk_nessageBox -parent
-title*Process Log Viewer*-type\
-underline 0-command (
ok -nessage
Tk Taii Tool \nby Krishna Vedati (kvedatiayahoo.com)*
接着这个例程添加一个用来显示两个记录进程的输出的文本素材和一个用来显示错误和辅
助信息的状态条。
然后，例程创建了几行素材。第一行使用户能够在应用程序里增加文件类型快捷键。第二
行使用户能够增加命令类的快捷键。最后一行上有两个按钮，一个是用来终止当前记录进程执
行的“stop”按钮，另一个是快速选择快捷键用的一个选项按钮。
 Create status/error message ￥indow
frame Sw.status
-relief sunken -bd 2
pack $w.status.lab -side left -fi1l both -expand 1
File name: entry panel
label Sw.file.label-text 'File name:*-width 13 -anchor w
frane Sw.file
button Sw.file.choose-text...-coemand
*set fileNane\{tk_getopenPile -filetypes1Stailopt.a(types）\
-parent \{winfo toplevel $w.file\]\}:*
button $w.file.button-text*Tail File*\
pack Sw.Eile.label Sw.file,entry -side left
-command'AddToViewfile\$fileName*
pack Sw.file.choose -side left
pady5-padx 10
bind Sw.file.entry AddToViewfile \SfileName*