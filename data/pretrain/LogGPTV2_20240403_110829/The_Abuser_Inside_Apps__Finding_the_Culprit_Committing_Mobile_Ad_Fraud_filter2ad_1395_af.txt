the ACM on International Workshop on Security and Privacy Analytics,
2017, pp. 65–72.
[2] Amazon advertising, “Amazon advertising - urls
for app ad-
vertising,” https://advertising.amazon.com/resources/ad-policy/en/mmp-
measurement-urls, 2020, accessed: 2020-05-01.
[3] Android, “Android api
reference,” https://developer.android.com/
reference, 2020, accessed: 2020-05-04.
[4] Android, “Android code search,” https://cs.android.com/, 2020, accessed:
2020-05-04.
[5] Android, “Android Open Source Project,” https://source.android.com/,
2020, accessed: 2020-05-01.
[6] Android,
“Recent
screen,”
https://developer.android.com/guide/
components/activities/recents, 2020, accessed: 2020-05-01.
[7] Android developer, “Android api documentation - intent,” https://
developer.android.com/reference/android/content/Intent, 2020, accessed:
2020-05-01.
[8] Android
Developer,
https:
//developer.android.com/studio/command-line/logcat, 2020, accessed:
2020-05-01.
command-line
“Logcat
tool,”
[9] Android Developer, “UI Automator,” https://developer.android.com/
training/testing/ui-automator, 2020, accessed: 2020-05-01.
[10] Android developers, “Android Virtual Device (AVD),” https://
developer.android.com/studio/run/managing-avds, 2020, accessed: 2020-
05-22.
[11] Android
Documentation,
https:
//developer.android.com/guide/topics/ui/ui-events.html, 2020, accessed:
2020-05-22.
overview,”
“Input
events
[12] Android Documentation, “Manage touch events in a viewgroup,” https://
developer.android.com/training/gestures/viewgroup.html, 2020, accessed:
2020-05-22.
[13] APKMirror, “Apkmirror,” https://www.apkmirror.com/, 2020, accessed:
2020-09-15.
[14] APKMonk, “Apkmonk,” https://www.apkmonk.com/, 2020, accessed:
2020-09-15.
[15] APKPure, “Apkpure,” https://apkpure.com/, 2020, accessed: 2020-09-15.
[16] AppBrain, “Android ad network statistics and market share,” https:
//www.appbrain.com/stats/libraries/ad-networks, 2020, accessed: 2020-
05-01.
[17] AppBrain, “Number of android applications,” https://www.appbrain.com/
stats, 2020, accessed: 2020-05-01.
[18] AppLovin, “Android-sdk-demo,” https://github.com/AppLovin/Android-
SDK-Demo, 2020, accessed: 2020-05-01.
[19] M. Backes, S. Bugiel, and E. Derr, “Reliable third-party library detection
in android and its security applications,” in Proceedings of the ACM
SIGSAC Conference on Computer and Communications Security, 2016,
pp. 356–367.
[20] Cauly, “Android-sdk,” https://github.com/cauly/Android-SDK, 2020,
accessed: 2020-05-01.
[21] G. Chen, W. Meng, and J. Copeland, “Revisiting mobile advertising
threats with MAdLife,” in Proceedings of the World Wide Web Confer-
ence, 2019, pp. 207–217.
[22] K. Chen, X. Wang, Y. Chen, P. Wang, Y. Lee, X. Wang, B. Ma, A. Wang,
Y. Zhang, and W. Zou, “Following devil’s footprints: Cross-platform
analysis of potentially harmful libraries on android and ios,” in IEEE
Symposium on Security and Privacy.
IEEE, 2016, pp. 357–376.
[23] Chen Yu,
“Sophisticated Android
https:
//news.sophos.com/en-us/2018/12/06/android-clickfraud-fake-iphone/,
2018, accessed: 2020-09-15.
clickfraud
apps,”
[24] G. Cho, J. Cho, Y. Song, and H. Kim, “An empirical study of click fraud
in mobile advertising networks,” in Proceedings of the International
Conference on Availability, Reliability and Security, 2015, pp. 382–388.
J. Crussell, R. Stevens, and H. Chen, “MAdFraud: Investigating ad fraud
in android applications,” in Proceedings of the Annual International
Conference on Mobile Systems, Applications, and Services, 2014, pp.
123–134.
[25]
[26] N. Daswani and M. Stoppelman, “The anatomy of clickbot.a,” in
Proceedings of the First Conference on First Workshop on Hot Topics
in Understanding Botnets, 2007, pp. 11–11.
[27] V. Dave, S. Guha, and Y. Zhang, “Measuring and ﬁngerprinting click-
spam in ad networks,” in Proceedings of the conference on Applications,
Technologies, Architectures, and Protocols for Computer Communication,
2012, pp. 175–186.
[28] Dave, Vacha and Guha, Saikat and Zhang, Yin, “Viceroi: Catching click-
spam in search ad networks,” in Proceedings of the ACM Conference
on Computer and Communications Security, 2013, pp. 765–776.
[29] E. Derr, S. Bugiel, S. Fahl, Y. Acar, and M. Backes, “Keep me updated:
An empirical study of third-party library updatability on android,”
in Proceedings of the ACM SIGSAC Conference on Computer and
Communications Security, 2017, pp. 2187–2200.
“Monetization
//play.google.com/about/monetization-ads/ads/,
2020-05-01.
https:
accessed:
[30] Developer
Policy Center,
and
2020,
ads,”
[31] dﬂower, “Google play python api,” https://github.com/dﬂower/google-
play-crawler, 2014, accessed: 2020-05-01.
[32] F. Dong, H. Wang, L. Li, Y. Guo, T. F. Bissyand´e, T. Liu, G. Xu,
and J. Klein, “FraudDroid: Automated ad fraud detection for android
apps,” in Proceedings of ACM Joint Meeting on European Software
Engineering Conference and Symposium on the Foundations of Software
Engineering, 2018, pp. 257–268.
[33] X. Dong, M. Tran, Z. Liang, and X. Jiang, “Adsentry: comprehensive and
ﬂexible conﬁnement of javascript-based advertisements,” in Proceedings
of the Annual Computer Security Applications Conference, 2011, pp.
297–306.
[34] EasyList, “Easylist - ﬁlter lists are sets of rules for adblock,” https:
//easylist.to/, 2020, accessed: 2020-05-224.
[35] Facebook,
“Android
facebook
audience
network,”
//developers.facebook.com/docs/audience-network/android/,
accessed: 2020-05-01.
https:
2020,
[36] M. Feily, A. Shahrestani, and S. Ramadass, “A survey of botnet and
botnet detection,” in Proceedings of the International Conference on
Emerging Security Information, Systems and Technologies, 2009, pp.
268–273.
[37] Genymotion,
//www.genymotion.com/, 2020, accessed: 2020-05-01.
“Genymotion
android
emulator,”
https:
[38] L. Glanz, S. Amann, M. Eichberg, M. Reif, B. Hermann, J. Lerch, and
M. Mezini, “Codematch: obfuscation won’t conceal your repackaged
app,” in Proceedings of the Joint Meeting on Foundations of Software
Engineering, 2017, pp. 638–648.
15
[39] Google, “Android and security,” http://googlemobile.blogspot.com/2012/
02/android-and-security.html, 2012, accessed: 2020-05-01.
[40] Google AdMob, “Get started,” https://developers.google.com/admob/
android/quick-start, 2020, accessed: 2020-05-01.
[41] Google Ads, “How does google stop invalid activity?” https://
www.google.com/ads/adtrafﬁcquality/, 2020, accessed: 2020-05-01.
[42] Google Play, “Naver - google play app,” https://play.google.com/store/
apps/details?id=com.nhn.android.search, 2020, accessed: 2020-05-01.
[43] Google Play, “Pufﬁn Web Browser,” https://play.google.com/store/apps/
details?id=com.cloudmosa.pufﬁnFree, 2020, accessed: 2020-05-01.
[44] M. C. Grace, W. Zhou, X. Jiang, and A.-R. Sadeghi, “Unsafe exposure
analysis of mobile in-app advertisements,” in Proceedings of the ACM
conference on Security and Privacy in Wireless and Mobile Networks,
2012, pp. 101–112.
[45] GUARDSQUARE, “Proguard,” https://www.guardsquare.com/, 2020,
accessed: 2020-05-04.
[46] H. Haddadi, “Fighting online click-fraud using bluff ads,” ACM
SIGCOMM Computer Communication Review, vol. 40, no. 2, pp. 21–25,
2010.
[47] S. Harries,
“How much are
fraudsters
costing advertisers?”
https://www.adjust.com/blog/ad-fraud-roundup-how-much-are-
fraudsters-costing-advertisers/, 2019, accessed: 2020-05-01.
[49]
[48] L.-S. Huang, A. Moshchuk, H. J. Wang, S. Schecter, and C. Jackson,
“Clickjacking: Attacks and defenses,” in Proceedings of the USENIX
Security Symposium, 2012, pp. 413–428.
Insight, “Mobile share of advertising market to exceed 30% in 2020,”
https://www.zenithmedia.com/insights/global-intelligence-issue-06-
2018/mobile-share-of-advertising-market-to-exceed-30-in-2020/, 2018,
accessed: 2020-05-01.
Israel Wernik, Danil Golubenko
“Tekya
Clicker Hides in 24 Children’s Games and 32 Utility Apps,”
https://research.checkpoint.com/2020/google-play-store-played-again-
tekya-clicker-hides-in-24-childrens-games-and-32-utility-apps/, 2020,
accessed: 2020-09-15.
, Aviran Hazum,
[50]
[51] Y. Jing, Z. Zhao, G.-J. Ahn, and H. Hu, “Morpheus: automatically
generating heuristics to detect android emulators,” in Proceedings of the
Annual Computer Security Applications Conference, 2014, pp. 216–225.
[52] A. Karge, “Mobile ad fraud in 2019: Combating the different
types,” https://www.smaato.com/blog/mobile-ad-fraud-in-2019-tools-
and-tactics-used-by-fraudsters/, 2019, accessed: 2020-05-01.
[53] L. Kiguolis, “2spywar, fofy.com - virus removal instruction,” https:
//www.2-spyware.com/remove-fofy-com.html, 2020, accessed: 2020-05-
01.
[54] D. Kleidermache,
“Tackling ads
abuse
in apps
and sdks,”
https://security.googleblog.com/2018/12/tackling-ads-abuse-in-
apps-and-sdks.html, 2018, accessed: 2020-05-01.
[55] Linkmine,
“Linkmine
api,”
1nR2WZLg-G3wuO44rujhgLzVaj0m9webFgm0oq5oR-XA/,
accessed: 2019-11-07.
https://docs.google.com/document/d/
2019,
[56] B. Liu, S. Nath, R. Govindan, and J. Liu, “Decaf: Detecting and
characterizing ad fraud in mobile apps,” in NSDI, 2014, pp. 57–70.
[57] L. Liu, Y. Gu, Q. Li, and P. Su, “Realdroid: Large-scale evasive
malware detection on” real devices”,” in Proceedings of the International
Conference on Computer Communication and Networks, 2017, pp. 1–8.
[58] MG, “How to remove fofy.com from computer,” https://malware-
guide.com/blog/how-to-remove-fofy-com-from-computer, 2020, ac-
cessed: 2020-05-01.
[59] Microsoft News Center,
disrupt
partners
“Microsoft,
the
the
notorious
europol
fbi,
zeroaccess
and
botnet,”
industry
https://news.microsoft.com/2013/12/05/microsoft-the-fbi-europol-
and-industry-partners-disrupt-the-notorious-zeroaccess-botnet/, 2020,
accessed: 2020-05-01.
[60] MoPub,
“mopub-android-sdk,”
https://github.com/mopub/mopub-
android-sdk, 2020, accessed: 2020-05-01.
[61] Naver, “Naver portal,” https://www.naver.com/, 2020, accessed: 2020-
05-01.
[62] NoTracking, “Notracking - block lists,” https://github.com/notracking/
hosts-blocklists/tree/master/adblock, 2020, accessed: 2020-05-22.
16
[63] Ohad Mana, Israel Wernik, Bogdan Melnykov, Aviran Hazum, “Haken
Clicker and Joker Premium Dialer,” https://research.checkpoint.com/
2020/android-app-fraud-haken-clicker-and-joker-premium-dialer/, 2018,
accessed: 2020-09-15.
[64] P. Pearce, V. Dave, C. Grier, K. Levchenko, S. Guha, D. McCoy,
V. Paxson, S. Savage, and G. M. Voelker, “Characterizing large-scale
click fraud in zeroaccess,” in Proceedings of the ACM Conference on
Computer and Communications Security, 2014, pp. 141–152.
[65] P. Pearce, A. P. Felt, G. Nunez, and D. Wagner, “Addroid: Privilege
separation for applications and advertisers in android,” in Proceedings
of the ACM Symposium on Information, Computer and Communications
Security, 2012, pp. 71–72.
[66] A. Pilgun, O. Gadyatskaya, Y. Zhauniarovich, S. Dashevskyi, A. Kush-
niarou, and S. Mauw, “Fine-grained code coverage measurement in
automated black-box android testing,” in ACM Transactions on Software
Engineering and Methodology, 2020, pp. 1–35.
[67] E. PROTALINSKI, “Google has helped 300,000 android developers
https:
ﬁx security vulnerabilities
//venturebeat.com/2019/02/28/google-has-helped-300000-android-
developers-ﬁx-security-vulnerabilities-in-over-1-million-apps/, 2019,
accessed: 2020-05-01.
in over 1 million apps,”
[68] A. Sahami Shirazi, N. Henze, T. Dingler, K. Kunze, and A. Schmidt,
“Upright or sideways? analysis of smartphone postures in the wild,”
in Proceedings of the international conference on Human-computer
interaction with mobile devices and services, 2013, pp. 362–371.
J. Seo, D. Kim, D. Cho, I. Shin, and T. Kim, “Flexdroid: Enforcing
in-app privilege separation in android.” in Proceedings of the Network
and Distributed System Security Symposium, 2016.
[69]
[70] S. Shekhar, M. Dietz, and D. S. Wallach, “Adsplit: Separating smartphone
advertising from applications,” in Presented as part of the USENIX
Security Symposium, 2012, pp. 553–567.
skylot, “Jadx - dex to java decompiler,” https://github.com/skylot/jadx,
2020, accessed: 2020-05-01.
[71]
[72] D.
Smith,
“Mastering
the
android
touch
system,”
https:
//speakerdeck.com/newcircle/dave-smith-mastering-the-android-
touch-system, 2020, accessed: 2020-05-22.
cost
advertisers,”
Smith,
fraud
www.juniperresearch.com/press/press-releases/ad-fraud-to-cost-
advertisers-19-billion-in-2018, 2017, accessed: 2020-05-01.
“Ad
to
https://
[73] S.
[74] S. Son, D. Kim, and V. Shmatikov, “What mobile ads know about
mobile users.” in Proceedings of the Network and Distributed System
Security Symposium, 2016.
[75] TnkFactory, “Tnkad sdk,” http://docs.tnkad.net/tnk-ad-sdk, 2020, ac-
cessed: 2020-05-01.
[76] Unity Technologies, “unity-ads-android,” https://github.com/Unity-
Technologies/unity-ads-android, 2020, accessed: 2020-05-01.
[77] T. Vidas and N. Christin, “Evading android runtime analysis via sandbox
detection,” in Proceedings of the ACM symposium on Information,
computer and communications security, 2014, pp. 447–458.
[78] T. Watanabe, M. Akiyama, F. Kanei, E. Shioji, Y. Takata, B. Sun, Y. Ishi,
T. Shibahara, T. Yagi, and T. Mori, “Understanding the origins of mobile
app vulnerabilities: A large-scale measurement study of free and paid
apps,” in IEEE/ACM International Conference on Mining Software
Repositories, 2017, pp. 14–24.
[79] K. C. Wilbur and Y. Zhu, “Click fraud,” Marketing Science, vol. 28,
[80]
no. 2, pp. 293–308, 2009.
J. Wyke, “The zeroaccess botnet–mining and fraud for massive ﬁnancial
gain,” Sophos Technical Paper, 2012.
[81] L. Zhang and Y. Guan, “Detecting click fraud in pay-per-click streams
of online advertising networks,” in Proceedings of the International
Conference on Distributed Computing Systems, 2008, pp. 77–84.
[82] M. Zhang, W. Meng, S. Lee, B. Lee, and X. Xing, “All your clicks belong
to me: Investigating click interception on the web,” in Proceedings of
the USENIX Security Symposium, 2019, pp. 941–957.
[83] Y. Zhang, J. Dai, X. Zhang, S. Huang, Z. Yang, M. Yang, and H. Chen,
“Detecting third-party libraries in android applications with high precision
and recall,” in IEEE International Conference on Software Analysis,
Evolution and Reengineering, 2018, pp. 141–152.