# Password Authenticated Key Exchange (PAKE) Overview

## Types of PAKEs
- **Balanced**: Peer-to-Peer
- **Augmented (aPAKE)**: Client-Server
- **Doubly Augmented**: Client-Server/Device-Server
- **Identity**: IoT, Wi-Fi

### PAKE Hierarchy
1. Balanced
2. Augmented
3. Doubly Augmented
4. Identity

## Agenda
- **Key Stretching**
  - What?
  - Why?
  - Types
  - What goes wrong?
  - How?
  - Settings
- **Password Authenticated Key Exchange (PAKE)**
  - What?
  - Why?
  - Types
  - How?
  - Properties

## Standard Diffie-Hellman
- Alice: 
  - \( a = \text{random}() \)
  - \( A = a \cdot G \)
  - \( A \rightarrow B \)
- Bob:
  - \( b = \text{random}() \)
  - \( B = b \cdot G \)
  - \( S_B = b \cdot A \)

## PAKE Variants
- **Balanced (Noise-NN)**
  - Alice: Ephemeral Key
  - Bob: Ephemeral Key
- **Augmented (Noise-KN)**
  - Alice: Static Key, Ephemeral Key
  - Bob: Ephemeral Key
- **Doubly Augmented (3DH)**
  - Alice: Static Key, Ephemeral Key
  - Bob: Static Key, Ephemeral Key
- **Identity (Identity exchange + Balanced PAKE)**
  - Examples: CHIP, CRISP, FRY, SPAKE2+, SPAKE2+EE, SRP6a, SPAKE2, SPAKE2-EE

## Example Implementations
- **Balanced**
  - CPace
  - SPEKE[7]
- **Augmented**
  - (strong) AuCPace*
  - B-SPEKE
  - BS-SPEKE*
- **Doubly Augmented**
  - Double BS-SPEKE*
  - OPAQUE[11]
- **Identity**
  - CHIP[12]
  - CRISP[12]
  - FRY
  - SPAKE2+[8]
  - SPAKE2+EE[9]
  - SRP6a
  - SPAKE2[8]
  - SPAKE2-EE[9]

## Security Considerations
- **Hiding the Generator, Ephemeral Keys, Salt**

## PAKE Properties
1. **Forward Secrecy** (every PAKE has this)
2. **Prevent Precomputation**
3. **Secure Registration**
4. **Quantum Annoying** (Paper[13], PQCrypto 2021[14])
5. **Fragile**
6. **Number of Trips** (3 vs 4)

## Quantum Annoying
- **SPEKE Paper (1996)**
  - "If a discrete log pre-computation has been made for the modulus, a password attack must also compute the specific log for each entry in the password dictionary (until a match is found)."
- **EKE Paper (1992)**
  - "With EKE, the password P is used to superencrypt such values; it is not possible to essay a discrete logarithm calculation except for all possible guesses of P."

## Implementation Examples
- **(strong) AuCPace**
- **CPace**
- **BS-SPEKE**
- **Double BS-SPEKE**
- **OPAQUE**

## PAKE API
- **Start a PAKE session:**
  ```python
  message, status = start(myId, otherId, secret, pakeUser=PAKE_USER_CLIENT, pakeMode=PAKE_MODE_USE)
  ```
- **Receive a message:**
  ```python
  message, status = receiveMessage(message)
  ```

- **Get keys:**
  ```python
  sessionKey = getPakeKey()
  storedSecret = getStoredSecret()
  passwordKey = getPasswordKey()
  ```

## Cheat Sheet
- **Balanced**
  - CPace
- **Augmented**
  - BS-SPEKE
- **Doubly Augmented**
  - Double BS-SPEKE
- **Identity**
  - CHIP

- **Balanced PAKEs don’t need key stretching**
- **bcrypt (minimums)**
  - m=256 (256 KiB), t=8, p=1
  - m=256 (256 KiB), t=4, p=2
  - m=256 (256 KiB), t=3, p=3
  - General
    - m=highest per core cache level in KiB
    - t≥max(3, 1900000/1024/m/p)
    - p≤cores

## Contact Information
- **Twitter**: @Sc00bzT
- **GitHub**: Sc00bz
- **Email**: steve at tobtu.com

## References
- [1] https://blog.cynosureprime.com/2015/09/how-we-cracked-millions-of-ashley.html
- [2] Police CyberAlarm https://twitter.com/Paul_Reviews/status/1538124477317451777
- [3] Police CyberAlarm https://twitter.com/Paul_Reviews/status/1544735763807539200
- [4] Password settings https://tobtu.com/minimum-password-settings/
- [5] Send files https://github.com/magic-wormhole
- [6] Phone spoofing https://commsrisk.com/?p=35506
- [7] SPEKE https://jablon.org/jab96.pdf / https://jablon.org/jab97.pdf
- [8] SPAKE2 https://www.di.ens.fr/~mabdalla/papers/AbPo05a-letter.pdf
- [9] SPAKE2-EE https://moderncrypto.org/mail-archive/curves/2015/000424.html
- [10] (strong) AuCPace https://ia.cr/2018/286
- [11] OPAQUE https://ia.cr/2018/163
- [12] CHIP, CRISP https://ia.cr/2020/529
- [13] Quantum annoying formal definition https://ia.cr/2021/696
- [14] Quantum annoying talk https://pqcrypto2021.kr/program.php / https://youtu.be/Ikco7zuAixY
- [15] pake-api.md https://gist.github.com/Sc00bz/9d5c8e98143f68377e17dc82c5955f2b
- [16] EKE https://www.cs.columbia.edu/~smb/papers/neke.pdf
- [17] 10 kH/s/GPU quote https://arstechnica.com/?p=685505

---

This revised version provides a clear and structured overview of PAKEs, including their types, properties, and implementation details. It also includes references and contact information for further reading and inquiries.