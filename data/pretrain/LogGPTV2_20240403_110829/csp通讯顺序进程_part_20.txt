还有一个非常有用的、用来限定前缀长度的下限的定义是
举例
Ns.if length(s) = 125 then output("right,s,X(NIL))
else input("left,Ax.X(append(s,cons
tr ↓ c=message*(trac)
rightsleft
(x,NIL))))
口
---
## Page 150
显然，当i
举例
~
st=（s≤#≤#s+n)
∧.
否则
若=<>或=<>
（参看1.9.2节）
127
口
口
---
## Page 151
的动作是个输出动作，那么被输出的值就等于序列~lef的最
如果没有输入的话，就输出*。更为形式地叙远是，如果这最近
X6值为x的一个变量在右通道上输出刚阙由左通道输入的值，
这个公式可以用来描述，把斐波那契序列输出到右通道上的进程
后一项，即
就不是等式，而是一个不等式了
果是fi的一个有限初始子序列（且#s≥2），那么我们得到的
在以上的讨论中，我们是把fb看作--个无穷序列来处理的。如
显地标出了左移：
有关这个方程式的另一种解释是，它是对无劣和的一个刘画，明
故fib[i+2]=fib[i+1]+fib[
于是fib[i+1]=fib[]+fib[
里还原出斐波那契序列的原始定义来，由
我们再把这个方程两边加上下标，叉可以从这个比较隐嗨的形式
使用将序列左移一位的算子，即可得到上述第二式的另一种形式
是由如下递推关系定义的
128
VARsat(channel(tro)=right=>right=(left))
FIB sat (right≤V(≤right
2.3，5，.….
fib[i+2]=fib[i+1]+fib[
1,2，3,5,··
[=[]=[]
fib"[i]=（fib'+ fib)[]
fib"=fib'+fib
Aright"≤right'+right))
s"≤+
-fib"
+fb
(1.9.4节L1)
口
---
## Page 152
则可以被看作是选择算子的特例：于是导出法则
2.6节中X4。
因此，每大通信中决定传递的实际消息值的是输出进程，参看
0.才能发生。由于输入进程总是准备好接受任意可传递的值，
说，只有当P在通道c上输出值V，Q又同时将它输入的时候，
通信事件.！只有当这两个进程同时执行它时才能发生，也就是
交集之中。如果我们把这两个进程并发地组成系统（PIQ），则
是所有形式为c.的通信事件的集合就包含于P和Q的字母表的
在4.4.5节中给出。
一定可靠，通信协议必须保证满足上述描述。有关的例子我们将
被接受的地方相隔多远，也不管连接这两地之间的通信媒介是否
息，而且不改变消息间的原来次序。不管消息输出的地方与它们
行为，这个协议保证右通道输出的只是那些已从左通道输入的消
息，合
两个序列的穿插序列（参看1.9.3节中定义），并至多缓存一个消
X7进程MERGE输出的是，两个通道left1和left2上输入的
来，这种额外的复杂性对使用选择算子的进程是必不可少的。口
次序，比如要知道最后的一次通信是在右通道上发生的。一般说
某些进程的。我们还需要知道它们各通道上通信事件穿插发生的
其中3。是序列s的最后一个元素（参看1.9.5节）。
这样，输山进程可以被看作是前缀算子的特例，而输入进程
这个例子说明只用进程各个通道上的消息序列是不足以描逝
设P和Q为进程，c为通道，P用它输出，
满足描逃（right≤left）的进程刻画了一个透明的通信协议的
BUFFER satright≤left
MERGE sat 3r,right+ Ar interleaues(left1,left2) 
4.3
通
信
，Q用它输入。于
129
---
## Page 153
示Q在通道上传递的消息序列。幸运的是，由通信的本性可
信进程组成的并行组合系统的描述会具有相当简单的形式。假设
有关的例子将在4.4节和4.5节中给出。
L2 ((c!→P)(cx-→Q(x)))\C=(P|Q(v))\C
的井行组合系统的外面运用屏蔽算子（参见3.5节），这可表示
分接出一条窃听线，从而能时刻记录这些部分之间的内部通信情
何时刻都必须是相同的。因此这个序列必须同时满足P和Q的描
知，当P和Q在上通信时，它们送出或接收到的消息序列在任
表示P在通道上传递的消息序列。同理，在Q的描逃里，C表
是通道名，进程P和Q沿通道c通信。那么在P的描述里，
内部操作屏蔽起来，即在经同一通道相互通信的两个进程所构成
况。它还有助于整个系统的论证。但是如有必要，我们可将这些
个方程式的右边的。这相当于在连接系统各组成部分的连接线上
注意1V是作为整个系统行为中的一个可观察到的动作保留在这
L1 (c!v-→P)1(cx-→Q(x)) =c!v-→(P|Q(v))
X1 假设 P=(leftx→mid!(x×x)-P)
X6可知只用通道名有时是不够的。
全是用它们的通道名来表越时才具有这种简洁性；但由4.2.2节
来，就可形成（PIQ)的行为描述。然而只有在P和Q的描逃完
信的性质的是Q自己，于是只要简单地把P和Q的描述逻辑与起
值就仅受限于P的描逃。同样道理，决定仅属于Q的通道上的通
由于这个通道不可能在Q的描逃中被提到，所以在它上面传递的
迹。
其中C=[c.v∈a}
为法则
130
。对P和Q字母表交集内所有通道来说，上述事实都是成立的。
如果用通道名来表示在通道上传递的消息序列，那么多个通
现在考虑在P的字母表中，但是不在Q的字母表中的通道。
举例
---
## Page 154
个进程，并把它们组合起来，即
和从left2读入的y产生数据（axx+bxy)，并将其向右方输出。
进程字母表的通道则处待连状态。图4.2就是X1的示意图。
程的输出通道和另一个进程的同名的输入通道相连，只属于一个
叫做数据流网络。
到，用通信线路连接电子部件的物理实施方法。这类实施的目的
这个公式正是我们原来想满足的描述。
为满足加工速度的需求，乘法必须并发进行。为此，我们定义两
项都施行同样计算，而且又要求输出和输入的速率相同（一开始
是为了加速产生所要的结果。特别是，当对输入的数据流的每一
而这个描逃蕴合
这里（173×mid)表示173乘以mid通道上每个消息。
持且Q sat(right≤173x mid)
显然P sat(mid≤square*(left))
X2
可能有延迟）时，这种技术分外有效。实现这类数据加工的系统
这样可得到
两支数据流从通道left1和 left2 输人。由从left1读入的x
通信进程系统的示意图和它们的物理实现十分相象。一个进
(1zx+(xxD) 1puxl1fa1)=1zx
用并发算子连接通信进程时，所得到的公式往往使人联想
X22=(left2?y→midz-right!(z+bxy)→X22)
Q=(mid?yright!(173x y)→Q)
4
right≤173xsquare*(left)
图4.2
Q
131
门
---
## Page 155
络，不易保证其无死锁现象了。例如，如将X23的循环中的输出
传送。
它向Left1和left2拷贝来自left的数据，但第一个数据不向left2
X23=(leftzx-→left]!x→(uX.left?x-→left2!x→left1!x→X))
X23可定义为
其中
只需在X2的解上增加新进程X23，就可得到X3的解
权为α和b。更精确地说，我们要求
络时，必然会出现两个或两个以上通道相连的情况。对此类网
接的子图。但在网络X3中有无向回路，而回路网络分解为子网
回路网络，也不会死锁，因为无回路图可分解为仅有一个箭头连
不会死锁的（参考2.7节L2)。作为推论，非终止进程组成的无
X3由左方输入数据流，向右方输出连续输入数对的加权和，
显然，X2sat（mid≤axleft1/right≤mid+bxleft2)
132
网络X3的示意图为图4.3。
只在一根通道上输入输出的、两个彼此通信的并发进程，是
X2= (X21X22)
lef
X23 sat(leftl≤leftAleft2≤left')
→(right≤axleft1+bxleft2)
X23
right≤axleft+bxleft!
X3=(X2|X23)
图4.3
X22
X21
mid
righ
口
口
---
## Page 156
显然需要至少n个处理器的并发操作。因此，需要设计一个不少
输入、一次乘法、一次加法和一次输出。为完成所描述的任务，
在描逃中还规定，每一微秒内，输入一个点的n个坐标，并输出
更形式地表示为
集乘以长度为n的给定向量V，并向右方输出所得的标量积：或
X4通道{lefti<n}上不断输入n-维空向点的坐标。每个坐标
统很象血液通过心脏。
无有向回路，经常用术语脉动阵列称谓之，因为数据通过这类系
会带来很多便利。这类规则网络通常称作累接阵列。若连接图中
时，使用带下标的通道名和多重并发组合的记号
的运算对象和算子的结构紧密相关。当网络规模很大但很规则
流，计算出一个或多个结果流。网络的形状和所计算的表达式中
和2.3节X1一样，这里也使用代数方法，证明了X3不会死锁。
可不必理会。这样，可用这些事件改写X3，得到
有通信看做单一的事件，起名为？。对非连接通道上的通信，也
锁时，往往可不必考虑传递的消息内容，因此可将通道上的所
于n个元素的累接阵列，作为本问题的解案。
一个标量积。每个处理器的速度又近平于，每一微秒内能做一次
left2ix→left11x→颠倒--下，马上就会出现死锁。在证明无死
这些例子说明如何构造数据流网络，由-一个或多个输入数据
让我们用通常的归纳定义替代描述中的习，
(uX.left1-mid→X)
=μX3.(left1→lef12-mid→X3)
l(teft-(uZ,left2-left1-Z))
(uY.left2-→mid-Y)
mid,=0*
有
133
---
## Page 157
fix-1m
该阵列的连接图见图4.4。
NETWORK=
至多包含一次乘法。剩下的事情就是对每个方程设计一个进程，
这样一来，我们将上述描越分割为n+1个简单方程，每个方程中
挠度：而输出的第三个坐标值可控制光线的强度。
通过接阵列，使用线性变换来计算阴极射线管x和y板极上的
物体的二维表示。显示的形状由绝对空间中的一串点来确定的，
应用于图形显示设备，这种设备自动地变换，甚至旋转--个三维
合
134
MULT,=(μX,midg!0-→X)
MULTatI
MULT
MULT,
图4.4
mid;
. mldy
right = midn
mid+1=Vixlefti+midj
righr
MULT';
结果的坐标值的输出速度，也要
用公式表示为
列经通道right:（i<m)向外输出。
矩阵M，所得结果阵列的第i
这个无穷阵列乘以给定的（n×m）
作输人一个无穷阵列的第1列：
同的标量积。通道left(i<n)用
一个坐标集几乎同时得到m个不
X5本例类似于X4，但要求由
mXn个进程。