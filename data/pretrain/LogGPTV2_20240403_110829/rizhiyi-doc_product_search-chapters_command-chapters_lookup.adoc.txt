=== lookup
摘要：
    使用lookup命令可以将外部文件中的结果和当前管道的结果进行join，可为/data/rizhiyi/spldata/lookup下的本地文件、outputlookup生成的文件或kvstore存储或资产实体。
语法：
    lookup  ?  on  *
必要参数：
* lookup-field-list
** 语法
     (, )*
** 描述
    外部文件中需要加入搜索结果的字段列表
** 参数
*** lookup-field
**** 语法
     [as ]
**** 描述
    对字段列表的重命名
* filename-or-kvstorename-or-assetname
** 语法
** 描述
    需要关联的外部文件的uri地址，支持http和https地址，或者本地共享文件的地址，或者已经定义并创建好的kvstore名称，或者已经存在的资产模型名称
* join-field-list
** 语法
     (, )*
** 描述
    join字段列表
** 参数
*** join-field
**** 语法
     = 
**** 描述
    等号左边的field表示主结果中的字段，等号右边的field为外部文件中的字段
可选参数：
* lookup-type
** 语法
    (csv: | kvstore: | asset: )
** 描述
    lookup文件类型，csv：csv文件；kvstore：kv字典；asset：资产实体。不填优先匹配csv，不成功匹配为kv字典
* param-options
** 语法
     ｜  | 
** 描述
    null
** 参数
*** max
**** 语法
    max = 
**** 描述
    指定每个主结果可以连接的最大自结果数，默认为1
*** overwrite
**** 语法
    overwrite = 
**** 描述
    是否覆盖主结果，默认为false
*** case-sensitive-match
**** 语法
    case_sensitive_match = 
**** 描述
    精确匹配时是否区分大小写，默认值为true
*** match-type
**** 语法
    match_type =  (, )*
**** 描述
    lookup的匹配方式，目前支持cidr和wildcard，默认为精确匹配(不需要单独写出)。这里field-list填写的是搜索数据中所使用该规则的字段列表，非csv中需要使用该规则的字段列表。
**** 参数
***** match-type-funcs
****** 语法
    cidr([, ]*) | wildcar([, ]*)
****** 描述
    cidr或wildcard的匹配规则
*** format
**** 语法
    format = 
**** 描述
    csv 文件的格式，可选`rfc`,`default`, 默认为`default`
[NOTE]
====
* http和https不支持重定向
* lookup命令所使用的文件默认的大小限制为8m，对应配置项lookup.max_download_size
* 如果文件下载超时为8s，超过该时间即为读取失败并报错，对应配置项lookup.download_timeout
* 如果指定本地文件，为字典管理列表中的文件
* 由于csv的数据字段都是字符串类型，因此注意join的字段的类型应该为字符串类型才可以lookup成功，如果字段不为字符串类型，可使用eval进行转换。
====
.示例1
====
假设外部csv文件有以下字段：host, user, department, 将搜索结果中的username字段和csv文件的user进行关联，在搜索结果中增加host, user, department字段
[source,bash]
| makeresults count=1 | eval username="hunter" | lookup user,host,department /data/rizhiyi/spldata/lookup/user.csv on username=user
image::images/Image-140318-041912.396.png[]
====
.示例2
====
假设外部csv文件有以下字段：id,mask,pattern,raw, 将搜索结果中的id字段和csv文件的id进行精确匹配，搜索结果中的ip和csv中的mask进行cidr匹配，搜索结果中的rvalue与csv中的pattern进行通配匹配，在搜索结果中增加mask,pattern,raw字段
[source,bash]
appname:a | rename 'value' as rvalue | lookup mask,pattern,raw lookupJoiner.csv on id=id,ip=mask,rvalue=pattern match_type=cidr(ip),wildcard(rvalue)
lookupJoiner.csv内容
"id","mask","pattern","raw"
"1","192.168.1.126/24","abc*","one"
"2","192.168.4.138/24","cd*","two"
"3","aaaaaaaa","abc*","three"
"4","192.168.1.126/24","cd","four"
"5","192.168.1.126/24","ef*","five"PI:EMAIL:/data/rizhiyi/spldata/lookup
关联结果：
image::images/lookup-1.png[]
====
.示例3
====
假设外部csv文件有以下字段：appname,word, 将搜索结果中的app字段和csv文件的appname进行关联，在搜索结果中增加word字段，其中匹配时不区分大小写。
[source,bash]
| makeresults | eval app = "Test" | lookup word match_test.csv on app=appname case_sensitive_match=false
image::images/lookup-2.png[]
====