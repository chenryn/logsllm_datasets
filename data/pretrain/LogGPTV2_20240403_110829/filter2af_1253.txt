# CVE-2019-0233： S2-060 拒绝服务漏洞分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
作者：Hu3sky@360CERT
## 0x01 漏洞简述
2020年8月11日，360CERT监测发现`Apache官方`发布了`S2-060`的风险通告，该漏洞编号为`CVE-2019-0233`，漏洞等级：`中危`。漏洞评分：`6.8`。
当使用`getter`对文件上传执行一个暴露文件的操作时，攻击者可能会构造特定请求，从而将上传文件的工作目录设置为只读。因此，对该文件的后续操作将失败并出现错误。还可以将`Servlet`容器的`temp`目录设置为只读，这样后续的上载操作就会失败，对业务造成影响。
对此，360CERT建议广大用户及时将 `Struts2` 升级到最新版。与此同时，请做好资产自查以及预防工作，以免遭受黑客攻击。
## 0x02 风险等级
360CERT对该漏洞的评定结果如下
评定方式 | 等级  
---|---  
威胁等级 | 中危  
影响面 | 一般  
360CERT评分 | 6.8分  
## 0x03 影响版本
  * Apache Struts2：2.0.0-2.5.20
## 0x04 漏洞详情
从`ParametersInterceptor`拦截器开始看，该拦截器对请求的参数进行处理，前面的过程是`ActionInvocation`对拦截器进行回调处理。
从`ActionContext`获取请求中的请求参数，
此时有四个参数(具体`Action`构造见参考链接)：
    1. [文件名参数] - 这是用户已上传的实际文件。在Action中被设置为“upload”
    2. [文件名参数]ContentType - 这是上传的文件的内容类型。在Action中被设置为“uploadContentType”
    3. [文件名参数]FileName - 这是上传的文件的名称。在Action中被设置为“uploadFileName”
    4. [文件名参数].parentFile.writable - 构造的利用poc
这里要注意原始上传的文件类型是一个`File`类型。然后会调用`setParameters`方法：
### 参数校验
然后对所有`Parameters`的`key`进行检测，调用`isAcceptableParameter`方法。
由于自定义`Action`不是`ParameterNameAware`的实现类，于是，`parameterNameAware`为`null`，
先调用`acceptableName`方法。 依次调用`isWithinLengthLimit`,`isExcluded`,`isAccepted`。
`isWithinLengthLimit`判断最大长度默认为`100`。
`isExcluded`进行表达式正则的检测，是否包含`_memberAccess`等字符。
可以发现，我们的`payload`没有包含特殊字符。
继续跟到`DefaultExcludedPatternsChecker#isExcluded`，初始化了正则表达式的黑名单。
最后调用`isAccepted`，跟到`DefaultExcludedPatternsChecker#isAccepted`。
对一些不可见字符做处理。
三个函数调用完之后，就将其`put`到`acceptableParameters` Map里。
继续往下走，会根据原有的`valueStack`,创建一个新的`valueStack`,叫做`newStack`，之后把前面的几个对`key`检测的正则表达式加到这个新的`valueStack`里面，
### ognl表达式执行
接着，调用`OgnlValueStack.setParameter`，这里会执行`setValue`操作，而执行的过程中就会造成`ognl`表达式的执行，这里会将`root`作为参数传入，而`root`里保存着`Action`信息。
`payload`是一个`ognl`表达式，由于访问的是`ValueStack`的`root`里的属性，所有不需要加`#`就能进行访问，而这里的`upload`是我们自定义上传`Action`里的`File`类型。
首先`target`值是一开始传入的`root`里的上传`Action`，然后会调用`target`对应的`setter`和`getter`方法。
然后获取返回的`upload`，类型为`File`，此时`target`被赋值为`File`，经过`AST`语法解析，`getParentFile`的调用栈为：
中间会根据传入的`payload`调用`getGetMethod`，获取`File`对象对应的`getter`，也就是`getParentFile`。在调用method之前，会进行黑名单的检测，具体是在`com.opensymphony.xwork2.ognl.SecurityMemberAccess#isAccessible`方法里进行黑名单检测，黑名单来自`struts-`
然后`getParentFile`的返回值被`return`，
依然替换作为`target`，值还是`File`，继续调用`setter`。
`setWriteable`的调用栈为：
执行结果： 接着，后续的上传都会失效。
### 版本修复
升级到`Struts 2.5.22`版本，默认情况下将`java.io`和`java.nio`中的类加入黑名单。
### 总结
该漏洞总体来说，危害不是很大，但是能够造成服务器功能失效，对于业务来说，还是具有一定的影响力，该漏洞主要是通过`Action`的`getter`方法，获取到上传的`File`类型的`filename`，再通过`ognl`执行流，去配合执行`File`的`getter/setter`，最终造成文件无法后续上传，由于我们的`ognl`表达式不涉及黑名单也不涉及特殊字符，所以不受沙箱的影响。
## 0x05 时间线
**2020-08-11** Apache发布预警
**2020-09-01** 360CERT发布分析报告
## 0x06 参考链接
  1. [S2-060 安全通告](https://cwiki.apache.org/confluence/display/WW/S2-060)
  2. [Struts2 文件上传](https://www.w3cschool.cn/struts_2/struts_file_uploads.html)
  3. [Class File](https://docs.oracle.com/javase/7/docs/api/java/io/File.html#method_summary)
  4. [S2-060 拒绝服务漏洞分析](https://mp.weixin.qq.com/s/VyLiLrUV0yakh_lzTBYGyQ)