from passive network measurements. In Proceedings of the 15th Workshop on
Mobile Computing Systems and Applications, page 18, 2014.
[10] Athula Balachandran, Vaneet Aggarwal, Emir Halepovic, Jeffrey Pang, Srinivasan
Seshan, Shobha Venkataraman, and He Yan. Modeling web quality-of-experience
on cellular networks. In Proceedings of the 20th annual international conference
on Mobile computing and networking, pages 213–224, 2014.
[11] Athula Balachandran, Vyas Sekar, Aditya Akella, Srinivasan Seshan, Ion Stoica,
and Hui Zhang. Developing a predictive model of quality of experience for
internet video. In ACM SIGCOMM Computer Communication Review, volume 43,
pages 339–350. ACM, 2013.
[12] Daniel S Berger, Benjamin Berg, Timothy Zhu, Siddhartha Sen, and Mor Harchol-
Balter. Robinhood: Tail latency aware caching–dynamic reallocation from cache-
rich to cache-poor. In 13th {USENIX} Symposium on Operating Systems Design
and Implementation ({OSDI} 18), pages 195–212, 2018.
[13] Daniel S Berger, Ramesh K Sitaraman, and Mor Harchol-Balter. Adaptsize: Or-
chestrating the hot object memory cache in a content delivery network. In NSDI,
pages 483–498, 2017.
[14] Enrico Bocchi, Luca De Cicco, and Dario Rossi. Measuring the quality of experi-
ence of web users. ACM SIGCOMM Computer Communication Review, 46(4):8–13,
2016.
[15] Mike Burrows. The Chubby lock service for loosely-coupled distributed systems.
In OSDI, 2006.
[16] Michael Butkiewicz, Daimeng Wang, Zhe Wu, Harsha V Madhyastha, and Vyas
Sekar. Klotski: Reprioritizing web content to improve user experience on mobile
devices. In NSDI, volume 1, pages 2–3, 2015.
[17] Matt Calder, Manuel Schröder, Ryan Stewart Ryan Gao, Jitendra Padhye, Ratul
Mahajan, Ganesh Ananthanarayanan, and Ethan Katz-Bassett. Odin: Microsoft’s
scalable fault-tolerant CDN measurement system. In 15th USENIX Symposium on
Networked Systems Design and Implementation (NSDI 18), 2018.
[18] Fangfei Chen, Ramesh K Sitaraman, and Marcelo Torres. End-user mapping: Next
generation request routing for content delivery. In ACM SIGCOMM Computer
Communication Review, volume 45, pages 167–181. ACM, 2015.
[19] Yingying Chen, Ratul Mahajan, Baskar Sridharan, and Zhi-Li Zhang. A provider-
side view of web search response time. In ACM SIGCOMM Computer Communi-
cation Review, volume 43, pages 243–254, 2013.
[20] Michael Chow, David Meisner, Jason Flinn, Daniel Peek, and Thomas F Wenisch.
The mystery machine: End-to-end performance analysis of large-scale internet
services. In OSDI, pages 217–231, 2014.
[21] Michael Chow, Kaushik Veeraraghavan, Michael J Cafarella, and Jason Flinn.
DQBarge: Improving data-quality tradeoffs in large-scale internet services. In
OSDI, pages 771–786, 2016.
[22] Diego Neves da Hora, Alemnew Sheferaw Asrese, Vassilis Christophides, Renata
Teixeira, and Dario Rossi. Narrowing the gap between QoS metrics and web QoE
using above-the-fold metrics. In International Conference on Passive and Active
Network Measurement, pages 31–43. Springer, 2018.
[23] Florin Dobrian, Vyas Sekar, Asad Awan, Ion Stoica, Dilip Joseph, Aditya Ganjam,
Jibin Zhan, and Hui Zhang. Understanding the impact of video quality on user
engagement. In ACM SIGCOMM Computer Communication Review, volume 41,
pages 362–373, 2011.
[24] Michael L Fredman and Robert Endre Tarjan. Fibonacci heaps and their uses
in improved network optimization algorithms. Journal of the ACM (JACM),
34(3):596–615, 1987.
[25] Qingzhu Gao, Prasenjit Dey, and Parvez Ahammad. Perceived performance
of top retail webpages in the wild: Insights from large-scale crowdsourcing of
above-the-fold QoE. In Proceedings of the Workshop on QoE-based Analysis and
Management of Data Communication Networks, pages 13–18, 2017.
[26] Mingzhe Hao, Huaicheng Li, Michael Hao Tong, Chrisma Pakha, Riza O Suminto,
Cesar A Stuardo, Andrew A Chien, and Haryadi S Gunawi. MittOS: Supporting
millisecond tail tolerance with fast rejecting SLO-aware OS interface. In Proceed-
ings of the 26th Symposium on Operating Systems Principles, pages 168–183. ACM,
2017.
[27] Patrick Hunt, Mahadev Konar, Flavio Paiva Junqueira, and Benjamin Reed.
Zookeeper: Wait-free coordination for internet-scale systems. In USENIX ATC,
2010.
[28] Virajith Jalaparti, Peter Bodik, Srikanth Kandula, Ishai Menache, Mikhail Ry-
balkin, and Chenyu Yan. Speeding up distributed request-response workflows.
In ACM SIGCOMM Computer Communication Review, volume 43, pages 219–230,
2013.
[29] Junchen Jiang, Xi Liu, Vyas Sekar, Ion Stoica, and Hui Zhang. Eona: Experience-
oriented network architecture. In Proceedings of the 13th ACM Workshop on Hot
Topics in Networks, page 11. ACM, 2014.
[30] Roy Jonker and Anton Volgenant. A shortest augmenting path algorithm for
dense and sparse linear assignment problems. Computing, 38(4):325–340, 1987.
[31] Rupa Krishnan, Harsha V Madhyastha, Sridhar Srinivasan, Sushant Jain, Arvind
Krishnamurthy, Thomas Anderson, and Jie Gao. Moving beyond end-to-end
path information to optimize CDN performance. In Proceedings of the 9th ACM
SIGCOMM conference on Internet measurement, pages 190–201. ACM, 2009.
[32] Gautam Kumar, Ganesh Ananthanarayanan, Sylvia Ratnasamy, and Ion Stoica.
Hold’em or fold’em?: Aggregation queries under performance variations. In
Proceedings of the Eleventh European Conference on Computer Systems, page 7,
2016.
[33] Peng Li, Binoy Ravindran, and E Douglas Jensen. Utility accrual resource access
protocols with assured timeliness behavior for real-time embedded systems.
In ACM SIGPLAN/SIGBED Conference on Languages, Compilers, and Tools for
Embedded Systems, 2005.
[34] Peng Li, Haisang Wu, Binoy Ravindran, and E Douglas Jensen. A utility accrual
scheduling algorithm for real-time activities with mutual exclusion resource
constraints. IEEE Transactions on Computers, 55(4):454–469, 2006.
[35] Hongqiang Harry Liu, Raajay Viswanathan, Matt Calder, Aditya Akella, Ratul
Mahajan, Jitendra Padhye, and Ming Zhang. Efficiently delivering online services
over integrated infrastructure. In NSDI, volume 1, page 1, 2016.
[36] Xi Liu, Florin Dobrian, Henry Milner, Junchen Jiang, Vyas Sekar, Ion Stoica,
and Hui Zhang. A case for a coordinated internet video control plane. ACM
SIGCOMM Computer Communication Review, 42(4):359–370, 2012.
[37] Christopher D Manning, Christopher D Manning, and Hinrich Schütze. Founda-
tions of statistical natural language processing. MIT Press, 1999.
[38] Ravi Netravali, Ameesh Goyal, James Mickens, and Hari Balakrishnan. Polaris:
Faster page loads using fine-grained dependency tracking. In NSDI, pages 123–
136, 2016.
[39] Ravi Netravali, Vikram Nathan, James Mickens, and Hari Balakrishnan. Vesper:
Measuring time-to-interactivity for web pages. In 15th USENIX Symposium on
Networked Systems Design and Implementation (NSDI), 2018.
[40] Lenin Ravindranath, Jitendra Padhye, Sharad Agarwal, Ratul Mahajan, Ian Ober-
miller, and Shahin Shayandeh. AppInsight: Mobile app performance monitoring
in the wild. In OSDI, volume 12, pages 107–120, 2012.
[41] Lenin Ravindranath, Jitendra Padhye, Ratul Mahajan, and Hari Balakrishnan.
Timecard: Controlling user-perceived delays in server-based mobile applica-
tions. In Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems
Principles, pages 85–100, 2013.
[42] Sanae Rosen, Bo Han, Shuai Hao, Z Morley Mao, and Feng Qian. Push or request:
An investigation of HTTP/2 server push for improving mobile performance.
In Proceedings of the 26th International Conference on World Wide Web, pages
459–468. International World Wide Web Conferences Steering Committee, 2017.
[43] Vaspol Ruamviboonsuk, Ravi Netravali, Muhammed Uluyol, and Harsha V Mad-
hyastha. Vroom: Accelerating the mobile web with server-aided dependency
resolution. In Proceedings of the Conference of the ACM Special Interest Group on
Data Communication, pages 390–403. ACM, 2017.
[44] Brandon Schlinker, Hyojeong Kim, Timothy Cui, Ethan Katz-Bassett, Harsha V
Madhyastha, Italo Cunha, James Quinn, Saif Hasan, Petr Lapukhov, and Hongyi
Zeng. Engineering egress with edge fabric: Steering oceans of content to the
world. In Proceedings of the Conference of the ACM Special Interest Group on Data
Communication, pages 418–431. ACM, 2017.
[45] P Lalith Suresh, Marco Canini, Stefan Schmid, and Anja Feldmann. C3: Cutting
tail latency in cloud data stores via adaptive replica selection. In 12th USENIX
Symposium on Networked Systems Design and Implementation, pages 513–527,
2015.
[46] Madeleine Udell and Stephen Boyd. Maximizing a sum of sigmoids. Optimization
and Engineering, 2013.
[47] Balajee Vamanan, Jahangir Hasan, and TN Vijaykumar. Deadline-aware datacen-
ter tcp (d2tcp). ACM SIGCOMM Computer Communication Review, 42(4):115–126,
2012.
[48] Matteo Varvello, Jeremy Blackburn, David Naylor, and Konstantina Papagiannaki.
Eyeorg: A platform for crowdsourcing web quality of experience measurements.
In Proceedings of the 12th International on Conference on emerging Networking
SIGCOMM ’19, August 19–23, 2019, Beijing, China
X. Zhang et al.
EXperiments and Technologies, pages 399–412, 2016.
[49] Zhe Wu, Curtis Yu, and Harsha V Madhyastha. Costlo: Cost-effective redundancy
for lower latency variance on cloud storage services. In NSDI, pages 543–557,
2015.
[50] Kok-Kiong Yap, Murtaza Motiwala, Jeremy Rahe, Steve Padgett, Matthew Holli-
man, Gary Baldus, Marcus Hines, Taeeun Kim, Ashok Narayanan, Ankur Jain,
Victor Lin, Colin Rice, Brian Rogan, Arjun Singh, Bert Tanaka, Manish Verma,
Puneet Sood, Mukarram Tariq, Matt Tierney, Dzevad Trumic, Vytautas Valancius,
Calvin Ying, Mahesh Kallahalla, Bikash Koley, and Amin Vahdat. Taking the
edge off with Espresso: Scale, reliability and programmability for global internet
peering. In Proceedings of the Conference of the ACM Special Interest Group on
Data Communication, pages 432–445. ACM, 2017.
[51] Minlan Yu, Wenjie Jiang, Haoyuan Li, and Ion Stoica. Tradeoffs in CDN designs
for throughput oriented traffic. In Proceedings of the 8th international conference
on Emerging networking experiments and technologies, pages 145–156. ACM, 2012.
Appendices are supporting material that has not been peer re-
viewed.
A INCENTIVE TO IMPROVE LATENCY
We show that it is impossible to improve a group of users’ QoE
without reducing at least some of their external delays. Formally,
this can be expressed by the following theorem.
Theorem 1. For n requests r1, . . . , rn, suppose S and S′ are the
server-side delay vector when the external delay vector is C and C′,
+ si) only if there is an ri
such that c′
i Q(c′
i Q(c′
i) >
+ s′
i
i
i 
Q(ci + si) ≥

≥
i Q(c′
i Q(ci + si) and for all i, c′
i ≥ ci (i.e., no request has a better
′
i)
Q(ci + s
′
Q(c
i)
which contradicts the assumption.
s′
external delay). Then
(S is better than S given C)
(Q is monotonic)
′
i + s
□
i
i
+
i
i
B USER STUDY ON WEB QUALITY OF
EXPERIENCE
We provide more details about our user study, which measures
the relationship between page load time (PLT) and quality of user
experience. We conduct this study on participants hired through
Amazon MTurk [1], a crowdsourcing marketplace.
Test procedure: Before entering the study, participants have to
fill out a questionnaire about their basic information, such as age
group, nationality, gender, time spent online per day, and primary
use of internet. Each participant is asked to rate their experience
of the same web page when it is loaded with different PLTs. Since
the actual PLT of a page may be affected by many factors—e.g., the
participants’ browsers, operating systems, and network conditions—
we show each participant a video recording of the web page being
loaded at a certain speed, rather than letting them load the web
page. This ensures that all the participants experience the same
PLTs. The videos of different PLTs are played in a random order.
After watching a video, the participants rate the video with a score
ranging from 1 to 5 (with 1 being the least satisfactory and 5 being
the most satisfactory), and this score is regarded as the QoE for the
PLT shown in the video.
Video recording: In our study, we need to show videos of certain
PLTs. To avoid uncontrollable WAN and server-side delays, we first
download all web page content on a local machine, and then load
the pages on this machine. This reduces the factors affecting PLT to
(1) the browser rendering time on the machine, which is a function
of system configuration (e.g., operating system, computer hardware,
browser version, etc.) but remains fixed, and (2) the web data packet
arrival rate. Since the data packets are loaded from the local machine
itself, we can achieve the desired PLT by tuning the per-packet delay
using a Chrome developer tool called NoThrottling. This allows us
to load each web page at the desired PLT, and record a video of
the loading process. These are the videos that are downloaded and
shown to the participants during the study.
Results: We ran the user study on the three page types in our traces
(Table 1), as well as four other web pages: a Google search results
page and the homepages of Amazon, CNN News, and YouTube.
For each page, we use 50 MTurk participants. Figure 22 shows
the results for the four web pages. We can see that although the
websites have different PLT sensitivities, a sigmoid-like relationship
between QoE and PLT exists for all of them.
Figure 22: The relationship between page load time and user rating
in different websites.
Response validation: A common problem in crowdsourcing is
the validation of participants’ responses. We filtered invalid re-
sponses in two ways:
• Engagement: Spending too long or too short on a video may
indicate that the participant is distracted or unengaged. We set
time thresholds for identifying such participants, and remove any
response that takes more than 35 seconds or less than 2 seconds.
• Outliers: We view the average of all responses as the “ground
truth”. We drop responses from participants whose ratings con-
sistently deviate from the ground truth by 3, across all videos.
 1 2 3 4 5 0 5 10 15 20 25 30(a) AmazonGradePage load time (sec.)MeanError 1 2 3 4 5 0 5 10 15 20 25 30 35(b) CNNGradePage load time (sec.)MeanError 1 2 3 4 5 0 5 10 15 20 25(c) GoogleGradePage load time (sec.)MeanError 1 2 3 4 5 0 5 10 15 20 25 30(d) YouTubeGradePage load time (sec.)MeanError