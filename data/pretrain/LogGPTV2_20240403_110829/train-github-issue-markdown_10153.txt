I am using Anaconda Python distribution. I have noticed, that among 1000
randomly generated unitary matrices (that I get from QR decomposition), there
always is one "bad" matrix. It is bad in the sense of results of DGETRF -- it
returns the same pivot twice.
Here is simple example of what is happening (pivot 247 is duplicated):
    In [1]: import numpy as np
    In [2]: np.random.seed(100)
    In [3]: a = [np.linalg.qr(np.random.randn(1800, 60))[0].copy(order='F') for i in range(141)]
    In [4]: from scipy.linalg.lapack import dgetrf
    In [5]: dgetrf(a[140])[2]
    Out[5]: 0
    In [6]: dgetrf(a[140])[1]
    Out[6]: 
    array([ 624, 1296,  240,  285,  538,  762,  748, 1318,  247,  793,  470,
           1604,  247, 1461, 1694,  975,  781,   80,  805, 1160,  580,   79,
            226,   65,  225,  771, 1403,  242,  515, 1450,  213,  822,  552,
            842,  326, 1223,  248,  702,  350, 1625,  873,  620,  349,  660,
           1663,  406,  547,  749, 1230, 1585,  488, 1298, 1475,  408,  993,
            578, 1068, 1108, 1405,  248], dtype=int32)
I also attach matrix in npz format, which is "bad" for
scipy.linalg.lapack.dgetrf (pivot 810 is duplicated)  
matrix.zip
However, if I use scipy.linalg.lu, then no pivot is duplicated, although
resulting pivots are, practically, the same, as from
scipy.linalg.lapack.dgetrf