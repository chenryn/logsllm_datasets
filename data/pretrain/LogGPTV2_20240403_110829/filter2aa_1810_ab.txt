### Configuring Control Timeouts and Return Codes

1. **Configure Control Timeouts**
2. **Initialize Control (Capture Return Code)**
3. **Send Request (Capture Return Code)**
4. **Grab HTTP Status**
5. **Test Return Codes and Determine Port Status**

### Creating and Using URIs

- **Create URI from IP and Port:**
  - Combine the IP address and port to form a URI.

### Building Tools with `probeIP()`

- **Using the `probeIP()` Building Block:**
  - This function can be used to build further tools.
  - **Port Sweepers:**
    - `scanports(ip, portlist)`
  - **Port Scanners:**
    - `scanhosts(iplist, port)`

### Webserver Detection

- **Webserver Detectors:**
  - These tools can be used to detect web servers.

### Benefits of the SQL-Based Port Scanner

- **A SQL-Based Port Scanner:**
  - Implemented in a stored procedure.
  - Can scan almost all ports.
  - Supports HTTP detection.
- **Advantages:**
  - No need for messy nmap uploads.
  - No antivirus (A/V) footprints.

### Potential Challenges

- **Inter-Protocol Protections:**
  - Cross-protocol attacks have been around for a while and are receiving renewed attention.
  - **Browser Support:**
    - Browsers provide protection by banning connections to specific ports.
    - Firefox bans port 58, Opera bans port 58, Safari bans port 43.
    - Internet Explorer 7 bans 6 ports, IE 6 banned 5 ports, and IE 5 did not ban any ports.
    - Despite these protections, most interesting ports remain accessible.
- **Proxies:**
  - The `setProxy` function can disable proxy requests.
- **Speed:**
  - Performance statistics need to be evaluated.

### Squeezing OLE Juice

- **Integration with Squeeza:**
  - Port scanners generate content that can be pulled through DNS, timing, or HTTP errors.
- **OLE Objects:**
  - OLE objects offer significant potential.
  - T-SQL and `scripting.filesystemobject` can write anything to disk.
  - `scripting.shell` works well even if `xp_cmdshell` is not available.
  - This functionality is available across multiple SQL server versions, making attacks version-independent.

### SQL Server 2005: A Pen Tester's Nightmare?

- **SQL Server 2005:**
  - Considered Microsoft’s flagship product in terms of Secure Development Lifecycle (SDLC).
  - **Challenges:**
    - Highly publicized and frequently exploited.
    - Not directly due to Microsoft's fault, but they had to reduce the attack surface.
    - SD3 principles: Secure by Design, Secure by Default, Secure by Deployment.
    - Renowned security experts have noted the difficulty in attacking SQL 2005 on deployed applications.

### Fundamental Problems with SQL 2005

- **Reducing Attack Surface:**
  - Microsoft needed to reduce the attack surface on SQL 2005.
  - **Issues:**
    - Incoherent and potentially dishonest mixed messages.
    - Features often win over security due to "dancing pigs" and "management by in-flight magazine."
    - **In-Band Signaling:**
      - SQL Server 2005 heavily uses in-band signaling, which is an old and problematic approach.
      - Example: `sp_configure` can re-enable features like `xp_cmdshell` that are supposed to be locked down.

### New Features in SQL 2005

- **Native XML Integration:**
  - Allows access to the database engine using SOAP via HTTP.
  - Promotes interoperability and access in a heterogeneous environment.
  - **Potential Vulnerabilities:**
    - Web Server DoS: SQL Server now interacts directly with `http.sys` in the Win2k3 kernel.
    - Requires local Windows administrator privileges for registration.
- **CLR Integration:**
  - Enables developers to write procedures, triggers, and functions in .NET languages.
  - Allows fine-grained access control.
  - **Loading .NET Assemblies:**
    - Can be loaded from a UNC share or created at runtime from raw hex.
    - Assemblies can be SAFE, EXTERNAL_ACCESS, or UNSAFE.
  - **Applications:**
    - Launching remote shells.
    - Implementing data exfiltration techniques like Squeeza without the limitations of T-SQL.

### References

- “Advanced SQL Injection In SQL Server Applications,” Chris Anley, 2002
- “Building the bridge between the web app and the OS: GUI access through SQL Injection,” Alberto Revelli, 2008
- “IServerXMLHTTPRequest/ServerXMLHTTP,” MSDN, 2008
- “The Extended HTML Form attack revisited,” SandroGauci, 2008
- “Programming Microsoft® SQL Server™ 2005,” Andrew J. Brust, 2006
- “Writing Stored Procedures for Microsoft SQL Server,” Mathew Shepker, 2000
- “Overview of Native XML Web Services for Microsoft SQL Server 2005,” MSDN, 2005