```
$ npm install -g vtop
```
安装好 `vtop` 就可以执行以下命令开始监控了。
```
$ vtop
```
显示界面如下：
![](/data/attachment/album/201812/08/134551k331e56psng3o5pg.png)
如上图所示，`vtop` 界面和 `top`、`htop` 都有所不同，它将不同的内容分别以多个框的布局显示。另外在界面底部也展示了用于与 `vtop` 交互的所有快捷键。
`vtop` 有这些快捷键：
* `dd` ：杀死一个进程。
* `↑`、`k`：向上移动。
* `↓`、`j`：向下移动。
* `←`、`h` ：放大图表。
* `→`、`l`：缩小图表。
* `g` ：跳转到进程列表顶部。
* `Shift+g` ：跳转到进程列表底部。
* `c` ：以 CPU 使用量对进程排序。
* `m` ：以内存使用量对进程排序。
想要了解更多关于 `vtop` 的细节，可以查阅它的[项目主页](http://parall.ax/vtop)或者 [GitHub 仓库](https://github.com/MrRio/vtop)。
#### Gtop
`gtop` 和 `vtop` 一样，都是一个使用 NodeJS 编写、在 MIT 许可下发布的系统活动监视器。
执行以下命令安装 `gtop`：
```
$ npm install gtop -g
```
然后执行以下命令启动：
```
$ gtop
```
显示界面如下：
![](/data/attachment/album/201812/08/134552egihba93ichea8o8.png)
`gtop` 有一个优点，就是它会以不同的颜色来显示不同的模块，这种表现形式非常清晰明了。
主要的快捷键包括：
* `p`：按照进程 ID 对进程排序。
* `c`：按照 CPU 使用量对进程排序。
* `m`：按照内存使用量对进程排序。
* `q`、`Ctrl+c`：退出。
想要了解更多关于 `gtop` 的细节，可以查阅它的 [GitHub 仓库](https://github.com/aksakalli/gtop)。
#### Gotop
`gotop` 也是一个完全自由和开源的图表式系统活动监视器。顾名思义，它是在受到 `gtop` 和 `vtop` 的启发之后用 Go 语言编写的，因此也不再对其展开过多的赘述了。如果你有兴趣了解这个项目，可以阅读《[gotop：又一个图表式系统活动监视器](https://www.ostechnix.com/manage-python-packages-using-pip/)》这篇文章。
#### Ptop
有些人对 NodeJS 和 Go 语言的项目可能不太感冒。如果你也是其中之一，你可以试一下使用 Python 编写的 `ptop`。它同样是一个自由开源的、在 MIT 许可下发布的系统活动监视器。
`ptop` 同时兼容 Python2.x 和 Python3.x，因此可以使用 Python 的软件包管理器 `pip` 轻松安装。如果你没有安装 `pip`，也可以参考[这个教程](https://www.ostechnix.com/manage-python-packages-using-pip/)进行安装。
安装 `pip` 之后，执行以下命令就可以安装 `ptop`：
```
$ pip install ptop
```
又或者按照以下方式通过源代码安装：
```
$ git clone https://github.com/darxtrix/ptop
$ cd ptop/
$ pip install -r requirements.txt # install requirements
$ sudo python setup.py install
```
如果需要对 `ptop` 进行更新，可以这样操作：
```
$ pip install --upgrade ptop
```
即使你不执行更新，`ptop` 也会在第一次启动的时候提示你是否需要更新到最新的版本。
现在可以看一下启动 `ptop` 后的界面。
```
$ ptop
```
就像下面这样：
![](/data/attachment/album/201812/08/134553jomkm0qsi04qvkiv.png)
`ptop` 的快捷键包括以下这些：
* `Ctrl+k`：杀死一个进程。
* `Ctrl+n`：按照内存使用量对进程排序。
* `Ctrl+t`：按照进程启动时间对进程排序。
* `Ctrl+r`：重置所有数据。
* `Ctrl+f`：对进程进行筛选，输入进程的名称就能够筛选出符合条件的进程。
* `Ctrl+l`：查看所选进程的详细信息。
* `g`：跳转到进程列表顶部。
* `Ctrl+q`：退出。
`ptop` 还支持更改显示主题。如果你想让 `ptop` 更好看，可以选择你喜欢的主题。可用的主题包括以下这些：
* colorful
* elegant
* simple
* dark
* light
如果需要更换主题（例如更换到 colorful 主题），可以执行以下命令：
```
$ ptop -t colorful
```
使用 `-h` 参数可以查看帮助页面：
```
$ ptop -h
```
想要了解更多关于 `ptop` 的细节，可以查阅它的 [GitHub 仓库](https://github.com/darxtrix/ptop)。
#### Hegemon
`hegemon` 是一个使用 Rust 编写的系统活动监视器，如果你对 Rust 感兴趣，也可以了解一下。我们最近有一篇关于 `hegemon` 的[文章](https://www.ostechnix.com/hegemon-a-modular-system-monitor-application-written-in-rust/)，想要详细了解的读者不妨阅读。
### 总结
以上就是关于 `top` 工具的 6 个替代方案。我并不会说它们比 `top` 更好或者可以完全替代 `top`，但多了解一些类似的工具总是好的。你有使用过这些工具吗？哪个是你最喜欢的？欢迎在评论区留言。
---
via: 
作者：[SK](https://www.ostechnix.com/author/sk/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[HankChow](https://github.com/HankChow) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出