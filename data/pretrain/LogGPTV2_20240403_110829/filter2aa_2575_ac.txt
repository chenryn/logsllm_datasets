### Redirectors
A redirector is a system that sits between the target's network and your team server. It forwards any incoming connections to your team server for processing. Redirectors provide multiple hosts for your Beacon payloads to "call home" to, enhancing operational security by making it more difficult to trace the true location of your team server.

Cobalt Strike's listener management features support the use of redirectors. When setting up an HTTP or HTTPS Beacon listener, simply specify your redirector hosts. Cobalt Strike does not validate this information; if the provided host is not affiliated with the current host, it assumes it is a redirector. One simple way to turn a server into a redirector is to use `socat`.

**Example:**
```bash
socat TCP4-LISTEN:80,fork TCP4:192.168.12.100:80
```
This command forwards all connections on port 80 to the team server at 192.168.12.100 on port 80.

---

### DNS Beacon
The DNS Beacon is a popular feature in Cobalt Strike. This payload uses DNS requests to communicate back to you. The DNS requests are lookups against domains that your Cobalt Strike team server is authoritative for. The DNS response instructs the Beacon to go to sleep or to connect to you to download tasks. The DNS response also tells the Beacon how to download tasks from your team server.

**Changes in Cobalt Strike 4.0:**
- The DNS Beacon is now a DNS-only payload, with no HTTP communication mode.

**Data Channels:**
- The DNS Beacon can download tasks over DNS TXT records, DNS AAAA records, or DNS A records.
- Use the `mode` command to change the data channel:
  - `mode dns` for DNS A record
  - `mode dns6` for DNS AAAA record
  - `mode dns-txt` for DNS TXT record (default)

**Note:**
- The DNS Beacon does not check in until there’s a task available. Use the `checkin` command to request that the DNS Beacon check in next time it calls home.

**Listener Setup:**
1. Go to **Cobalt Strike -> Listeners**.
2. Press **Add** and select **Beacon DNS** as the Payload type.
3. Add one or more domains to beacon to. Your Cobalt Strike team server must be authoritative for these domains.
4. Create a DNS A record and point it to your Cobalt Strike team server.
5. Use DNS NS records to delegate several domains or sub-domains to your Cobalt Strike team server’s A record.
6. Configure the DNS Host (Stager) field for the DNS Beacon’s TXT record stager. Your Cobalt Strike team server must be authoritative for this domain as well.

**Testing DNS Configuration:**
- Open a terminal and type `nslookup jibberish.beacon domain`.
- If you get an A record reply of 0.0.0.0, your DNS is correctly set up. If not, your DNS configuration is incorrect, and the DNS Beacon will not communicate with you.

**NAT Considerations:**
- If you are behind a NAT device, use your public IP address for the NS record and set your firewall to forward UDP traffic on port 53 to your system.

---

### SMB Beacon
The SMB Beacon uses named pipes to communicate through a parent Beacon. This peer-to-peer communication works with Beacons on the same host and across the network. Windows encapsulates named pipe communication within the SMB protocol, hence the name SMB Beacon.

**Configuration:**
1. Go to **Cobalt Strike -> Listeners**.
2. Press **Add** and choose **Beacon SMB** as your payload option.
3. Set the pipename (explicit or default).

**Compatibility:**
- The SMB Beacon is compatible with most actions in Cobalt Strike that spawn a payload, except user-driven attacks (e.g., Attacks -> Packages, Attacks -> Web Drive-by) that require explicit stagers.

**Linking and Unlinking:**
- Use `link [host] [pipe]` to link the current Beacon to an SMB Beacon waiting for a connection.
- Use `unlink [ip address] [session PID]` to destroy a Beacon link.

**Caveats:**
1. Hosts with an SMB Beacon must accept connections on port 445.
2. You may only link Beacons managed by the same Cobalt Strike instance.

**Troubleshooting:**
- If you get an error 5 (access denied), steal a domain user’s token or use `make_token DOMAIN\user password` to populate your current token with valid credentials for the target.

---

### TCP Beacon
The TCP Beacon uses a TCP socket to communicate through a parent Beacon. This peer-to-peer communication works with Beacons on the same host and across the network.

**Configuration:**
1. Go to **Cobalt Strike -> Listeners**.
2. Press **Add** and choose **Beacon TCP** as your payload option.
3. Set the Port (C2) and check **Bind to localhost only** if needed.

**Compatibility:**
- The TCP Beacon is compatible with most actions in Cobalt Strike that spawn a payload, except user-driven attacks (e.g., Attacks -> Packages, Attacks -> Web Drive-by) that require explicit stagers.

**Connecting and Unlinking:**
- Use `connect [ip address] [port]` to connect the current session to a TCP Beacon waiting for a connection.
- Use `unlink [ip address] [session PID]` to destroy a Beacon link.

---

### External C2
External C2 is a specification that allows third-party programs to act as a communication layer for Cobalt Strike’s Beacon payload. These programs connect to Cobalt Strike to read frames destined for and write frames with output from payloads controlled in this way.

**Configuration:**
1. Go to **Cobalt Strike -> Listeners**.
2. Press **Add** and choose **External C2** as your payload.
3. Set the Port (Bind) and check **Bind to localhost only** if needed.

**Documentation:**
- For more information, visit: [https://www.cobaltstrike.com/help-externalc2](https://www.cobaltstrike.com/help-externalc2)

---

### Foreign Listeners
Cobalt Strike supports foreign listeners, which are aliases for x86 payload handlers hosted in the Metasploit Framework or other instances of Cobalt Strike. To pass a Windows HTTPS Meterpreter session to a friend with `msfconsole`, set up a Foreign HTTPS payload and point the Host and Port values to their handler.

---

### Infrastructure Consolidation
Cobalt Strike’s model for distributed operations involves setting up separate team servers for each phase of your engagement. This separation helps ensure that the remediation of one infrastructure does not affect others.

**Features:**
- Bind multiple HTTP, HTTPS, and DNS listeners to a single Cobalt Strike team server.
- Use port bending to avoid port conflicts on your team server system.
- Malleable C2 profiles can contain multiple variants to add variety to your network indicators.
- Define multiple TCP and SMB Beacons on one team server, each with different pipe and port configurations.

---

### Payload Security Features
Cobalt Strike takes steps to protect Beacon communications and ensure that a Beacon can only receive tasks from and send output to its team server.

**Key Points:**
- When setting up the Beacon payload, Cobalt Strike generates a unique public/private key pair for your team server.
- The team server’s public key is embedded into Beacon’s payload stage.
- Beacon uses the team server’s public key to encrypt session metadata.
- Each Beacon implementation and data channel uses the same encryption scheme.

**Note:**
- The above applies to Beacon once it is staged. Payload stagers do not have built-in security features due to their size.

---

### Getting a Foothold

#### Client-side System Profiler
The system profiler is a reconnaissance tool for client-side attacks. It starts a local web server and fingerprints visitors, providing a list of applications and plugins discovered through the user’s browser. It also attempts to discover the internal IP address of users behind a proxy server.

**Usage:**
1. Go to **Attacks -> Web Drive-by -> System Profiler**.
2. Specify a URI to bind to and a port to start the Cobalt Strike web server.
3. Optionally, specify a Redirect URL and enable SSL.
4. Click **Launch** to start the system profiler.

**Results:**
- View results in **View -> Applications**.

#### Cobalt Strike Web Services
Many Cobalt Strike features run from their own web server, including the system profiler, HTTP Beacon, and web drive-by attacks. Multiple features can be hosted on one web server.

**Management:**
- Go to **View -> Web Drive-by -> Manage** to copy URLs to the clipboard or stop services.
- Use **View -> Web Log** to monitor visits.

**Protection:**
- Cobalt Strike returns a 404 page for requests from Lynx, Wget, or Curl browsers to protect against blue team snooping.

#### User-driven Attack Packages
Cobalt Strike makes it easy to set up several user-driven attacks, taking advantage of listeners you’ve already set up.

**Options:**
- **HTML Application**: Generates an HTML Application that runs a Cobalt Strike payload.
- **MS Office Macro**: Generates a Microsoft Office macro.
- **Payload Generator**: Exports Cobalt Strike’s stagers in various formats.
- **Windows Executable**: Generates a Windows executable artifact.
- **Windows Executable (S)**: Exports Beacon as an executable, service executable, or DLL.

**Hosting Files:**
- Go to **Attacks -> Web Drive-by -> Host File** to host user-driven packages.
- Choose the file, select a URL, and set the MIME type.

**User-driven Web Drive-by Attacks:**
- **Java Signed Applet Attack**: Hosts a self-signed Java applet.
- **Java Smart Applet Attack**: Combines several exploits to disable the Java security sandbox.
- **Scripted Web Delivery (S)**: Generates a stageless Beacon payload and hosts it on Cobalt Strike’s web server.

#### Client-side Exploits
You can use a Metasploit Framework exploit to deliver a Cobalt Strike Beacon. The Beacon is compatible with the Metasploit Framework’s staging protocol.

**Steps:**
1. Use `/windows/meterpreter/reverse_http[s]` as your PAYLOAD and set LHOST and LPORT to point to your Cobalt Strike listener.
2. Set `DisablePayloadHandler` to `True` to avoid standing up a handler within the Metasploit Framework.
3. Set `PrependMigrate` to `True` to prepend shellcode that runs the payload stager in another process.

**Example:**
- Screenshot of `msfconsole` used to set up a Flash Exploit to deliver Cobalt Strike’s HTTP Beacon hosted at 192.168.1.5 on port 80.

---

For more detailed information, visit [Cobalt Strike Documentation](https://www.cobaltstrike.com/).