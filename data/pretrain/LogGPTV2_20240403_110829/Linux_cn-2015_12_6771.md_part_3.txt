    ### 不对已登录用户和最近的评论者使用缓存
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+
                         |wp-postpass|wordpress_logged_in") {
        set $cache_uri 'null cache';
    }
    ### 当请求的文件存在时使用缓存，否则将请求转发给 WordPress
    location / {
        try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html 
                  $uri $uri/ /index.php;
    }    
    location = /favicon.ico {
        log_not_found off; 
        access_log off;
    }
    location = /robots.txt {
        log_not_found off
        access_log off;
    }
    location ~ .php$ {
        try_files $uri /index.php;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        #fastcgi_pass 127.0.0.1:9000;
    }
    ### 尽可能的缓存静态文件
    location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css
           |rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2
           |doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        expires max;
        log_not_found off;
        access_log off;
    }
}
```
### 技巧 8. 为 NGINX 配置安全防范措施
为了防止攻击，可以控制对关键资源的访问并限制机器人对登录功能的过量攻击。
只允许特定的 IP 地址访问 WordPress 的仪表盘。
```
### 对访问 WordPress 的仪表盘进行限制
location /wp-admin {
    deny  192.192.9.9;
    allow 192.192.1.0/24;
    allow 10.1.1.0/16;
    deny  all;
}
```
只允许上传特定类型的文件，以防止恶意代码被上传和运行。
```
### 当上传的不是图像，视频，音乐等时，拒绝访问。
location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
    deny all;
}
```
拒绝其它人访问 WordPress 的配置文件 **wp-config.php**。拒绝其它人访问的另一种方法是将该文件的一个目录移到域的根目录之上的目录。
```
### 拒绝其它人访问 wp-config.php
location ~* wp-config.php {
    deny all;
}
```
对 **wp-login.php** 进行限速来防止暴力破解。
```
### 拒绝访问 wp-login.php
location = /wp-login.php {
    limit_req zone=one burst=1 nodelay;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    #fastcgi_pass 127.0.0.1:9000;
}
```
### 技巧 9. 配置 NGINX 支持 WordPress 多站点
 WordPress 多站点   （    WordPress Multisite    ） ，顾名思义，这个版本 WordPress 可以让你以单个实例管理两个或多个网站。[WordPress.com](https://wordpress.com/) 运行的就是 WordPress 多站点，其主机为成千上万的用户提供博客服务。
你可以从单个域的任何子目录或从不同的子域来运行独立的网站。
使用此代码块添加对子目录的支持。
```
### 在 WordPress 多站点中添加对子目录结构的支持
if (!-e $request_filename) {
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;  
    rewrite ^(/[^/]+)?(/wp-.*) $2 last;                     
    rewrite ^(/[^/]+)?(/.*\.php) $2 last;                   
}
```
使用此代码块来替换上面的代码块以添加对子目录结构的支持，替换为你自己的子目录名。
```
### 添加支持子域名
server_name example.com *.example.com;
```
旧版本（3.4以前）的 WordPress 多站点使用 readfile() 来提供静态内容。然而，readfile() 是 PHP 代码，它会导致在执行时性能会显著降低。我们可以用 NGINX 来绕过这个非必要的 PHP 处理。该代码片段在下面被（==============）线分割出来了。
```
### 避免对子目录中 /blogs.dir/ 结构执行  PHP readfile() 
location ^~ /blogs.dir {
    internal;
    alias /var/www/example.com/htdocs/wp-content/blogs.dir;
    access_log off;
    log_not_found off;
    expires max;
}
============================================================
### 避免对子目录中 /files/ 结构执行  PHP readfile() 
    location ~ ^(/[^/]+/)?files/(?.+) {
    try_files /wp-content/blogs.dir/$blogid/files/$rt_file /wp-includes/ms-files.php?file=$rt_file;
    access_log off;
    log_not_found off;
    expires max;
}
============================================================
### 子域路径的WPMU 文件结构
location ~ ^/files/(.*)$ {
    try_files /wp-includes/ms-files.php?file=$1 =404;
    access_log off;
    log_not_found off;
    expires max;
}
============================================================
### 映射博客 ID 到特定的目录
map $http_host $blogid {
    default           0;
    example.com       1;
    site1.example.com 2;
    site1.com         2;
}
```
### 结论
可扩展性对许多要让他们的 WordPress 站点取得成功的开发者来说是一项挑战。（对于那些想要跨越 WordPress 性能门槛的新站点而言。）为 WordPress 添加缓存，并将 WordPress 和 NGINX 结合，是不错的答案。
NGINX 不仅用于 WordPress 网站。世界上排名前 1000、10000 和 100000 网站中 NGINX 也是 [遥遥领先的 web 服务器](http://w3techs.com/technologies/cross/web_server/ranking)。
欲了解更多有关 NGINX 的性能，请看我们最近的博客，[让应用性能提升 10 倍的 10 个技巧](https://www.nginx.com/blog/10-tips-for-10x-application-performance/)。
NGINX 软件有两个版本：
* NGINX 开源软件 - 像 WordPress 一样，此软件你可以自行下载，配置和编译。
* NGINX Plus - NGINX Plus 包括一个预构建的参考版本的软件，以及服务和技术支持。
想要开始，先到 [nginx.org](http://www.nginx.org/en) 下载开源软件并了解下 [NGINX Plus](https://www.nginx.com/products/)。
---
via: 
作者：[Floyd Smith](https://www.nginx.com/blog/author/floyd/) 译者：[strugglingyouth](https://github.com/strugglingyouth) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出