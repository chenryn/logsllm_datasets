simple
one
w
a
y
c
hec
ksum
of
all
the
existing
les
on
the
lesystem
p
erformed
b
efore
and
after
infection
from
a
sane
op
erating
system
w
ould
detect
the
mo
dication.
Therefore,
securit
y
researc
hers
ha
v
e
conceiv
ed
w
a
ys
to
sub
v
ert
a
running
k
ernel
on
the
y
without
ev
en
touc
hing
the
lesystem.
No-
table
researc
h
include
Bo
otRo
ot[11
℄from
Derek
So
eder
and
Ry
an
P
ermeh,
vb
o
otkit
from
Kumar
and
Kumar[12℄,
capable
of
b
o
otkitting
a
Windo
ws
7
k
ernel,
the
Stoned
b
o
otkit[13
℄,
and
the
K
on-b
o
ot
com-
mercial
b
o
otkit
from
Piotr
Bania[14
℄,
capable
of
sub
v
erting
all
the
existing
NT
k
ernels,
from
Windo
ws
XP
to
Windo
ws
2008
R2
and
Windo
ws
7,
in
b
oth
32
and
64
bits.
Those
attac
ks
w
ork
b
y
b
o
oting
from
an
alternate
media
suc
h
as
a
o
op
y
or
usb
stic
k,
or
b
y
replacing
the
existing
MBR
(and
restore
its
rst
sector
in
memory
,
em
ulating
an
in
terruption
0x19).
Running
a
b
o
otkit
from
an
alternate
medium
lea
v
es
no
forensic
evidence.
It
is
also
w
orth
noticing
that
the
Stoned
Bo
otkit
managed
to
b
o
otkit
the
Windo
ws
k
ernel
in
spite
of
p
ossible
encryption
suc
h
as
T
ruecrypt[15
℄.
It
is
w
orth
men
tionning
that
the
inner
w
orking
of
an
y
b
o
otkit
is
the
same
:
ho
oking
the
in
terruption
0x13
(disk
access)
b
y
patc
hing
the
Iterrupt
V
ector
T
able
(IVT),
set
a
rogue
in
terruption
handler,
and
em
ulate
an
in
terruption
0x19
b
y
loading
the
rst
sector
of
the
rst
b
o
otable
disk
at
0x0000:0x7c00
b
efore
transfering
execution
to
this
lo
cation.
This
rst
sector
will
in
turn
load
the
op
erating
system
normally
,
but
the
rogue
0x13
in
terrupt
handler
will
ho
ok
an
y
read
of
a
sector
from
disk
and
once
the
k
ernel
of
the
main
op
erating
system
is
fully
unpac
k
ed
in
memory
,
patc
h
a
few
carefully
c
hosen
lo
cations
in
order
to
mo
dify
it
on
the
y
.
Public
pa
yloads
include
patc
hing
the
NT
k
ernel
to
accept
an
y
pass-
w
ord
for
an
y
accoun
t,
or
load
an
unsigned
k
ernel
mo
dule,
whic
h
can
eectiv
ely
execute
an
y
op
eration
in
ring
0
once
the
op
erating
system
is
fully
loaded
(eg:
allo
w
lo
cal
privilege
excalation,
remote
con
trol,
etc).
3
Our
main
con
tributions
are:
-
Romkit
not
a
single,
but
h
undreads
of
dieren
t
motherb
oards.
this
is
b
etter
b
y
t
w
o
orders
of
magni-
tude
o
v
er
existing
researc
h.
-
Em
b
ed
an
y
existing
b
o
otkits
as
part
of
a
romkit
without
an
y
mo
dication.
-
Use
of
routable
ip
pac
k
ets
to
upgrade
the
romkit,
execute
remote
pa
yloads
and
optionally
attac
k
the
LAN,
either
using
an
ethernet
or
Wi
stac
k.
-
A
mec
hanism
to
allo
w
b
otnet
resilience
against
la
w
enforcemen
t
DNS
tak
e
o
v
ers,
o
v
er
HTTPS
using
assymetric
cryptograph
y
and
a
replication
mec
hanism
making
the
rom-b
otnet
close
to
imp
ossible
to
sh
utdo
wn.
-
P
ermanen
t
lo
w
ering
of
the
securit
y
lev
el
of
an
y
future
(unkno
wn)
op
erating
system
installed
on
the
computer,
when
existing
b
o
otkits
assume
either
a
GNU/Lin
ux
or
NT
k
ernel.
-
P
ersistance
of
the
infection
ev
en
if
the
main
BIOS
rom
is
ev
er
ashed
b
y
infecting
m
ultiple
PCI
rm
w
ares
(suc
h
as
a
cdrom
rm
w
are)
with
malicious
net
w
ork
rm
w
ares,
capable
of
upgrading
an
y
other
PCI
rom
remotely
(eg:
infect
the
BIOS
or
main
net
w
ork
PCI
rom
bac
k),
while
preserving
func-
tionalit
y
.
-
Disabling
A
ddress
Space
La
y
out
Randomization
(ASLR)[16℄
and
NX
2
from
NT
k
ernels,
making
an
y
future
Windo
ws
op
erating
systems
vulnerabilit
y
trivial
to
exploit
on
an
infected
mac
hine.
-
An
infection
mec
hanism
oering
b
oth
plausible
deniabilit
y
and
non
atribution,
hence
compatible
with
state
lev
el
global
hardw
are
bac
kdo
oring.
2
The
NX
bit
is
the
63th
(leftmost)
bit
of
the
P
age
T
able
En
try
on
amd64
arc
hitectures.
4
3
Ov
erview
of
the
IBM
PC
and
its
legacy
problems
The
IBM
PC
w
as
originaly
designed
around
1981.
It
has
ev
olv
ed
since,
in
particular
with
the
replace-
men
t
of
older
Industry
Standard
Arc
hitecture
(ISA)[17
℄
p
eriferals
in
fa
v
or
of
m
uc
h
faster
P
eripheral
Comp
onen
t
In
terconnect
(PCI)[4℄
devices
in
1996,
and
ev
en
faster
devices
with
PCI
Express
(pushed
b
y
In
tel
in
2004,
commonly
refered
to
as
PCI-E
or
PCIe)[18℄.
But
the
core
design
remains
the
same,
the
cpu
still
b
o
oting
in
8088
compatibilit
y
mo
de
(id
est:
16b
real
mo
de)
ev
en
on
the
most
recen
t
motherb
oards.
It
is
w
orth
men
tioning
that
when
rst
launc
hed,
Windo
ws
95
had
op
en
net
w
ork
shares
(netbios),
whic
h
is
a
clear
sign
that
around
those
dates,
Microsoft
had
not
an
ticipated
the
raise
of
the
In
ternet
and
had
therefore
designed
an
op
eratiing
system
to
b
e
used
primarily
in
LAN
en
vironmen
ts.
Needless
to
sa
y
IBM
couldn't
ha
v
e
an
ticipated
the
in
ternet
either
bac
k
in
1981.
The
basic
design
of
the
IBM
PC
is
presen
ted
in
gure
1
:
from
the
b
ottom
to
the
top,
w
e
nd
the
Sup
er
I/O,
to
whic
h
are
con-
nected
legacy
ISA
devices
(hence
slo
w
devices)
suc
h
as
k
eyb
oards,
mouse,
and
opp
y
driv
es.
The
Sup
er
I/O
is
connected
to
the
South
bridge,
via
an
LPC
bus.
The
South
bridge
is
resp
onsible
for
handling
faster
p
eripherals
(up
to
2133
Mb
/
second
for
PCI-X
2.0),
t
ypically
complian
t
with
the
PCI
standard.
Suc
h
devices
can
b
e
for
instance
net
w
ork
(ethernet),
sound
or
older
graphic
cards.
The
South
bridge
is
himself
connected
to
the
North
bridge
via
the
in
ternal
bus,
whic
h
is
himself
resp
onsible
for
handling
m
uc
h
faster
p
eripherals
t
ypically
complian
t
with
the
PCIe
standard,
with
a
debit
up
to
16
Gb/s
for
the
v
ersion
3.0
of
the
standard.
Suc
h
devices
can
b
e
for
instance
new
er
3D
graphic
cards,
gigabit
ethernet
cards
or
en
treprise
storage
(SAS).
The
North
bridge
can
con
tain
the
cpu
and
has
in
an
y
case
a
high
sp
eed
connection
with
it
through
the
F
ron
t
Side
Bus
(FSB).
Eac
h
la
y
er
of
the
arc
hitecture
con
tains
Direct
Memory
A
ccess
(DMA)
c
hips,
whic
h
are
con
troled
b
y
input/output
memory
managemen
t
unit
(IOMMU)[19℄
for
p
erformance
and
securit
y
reasons.
Fig.
1.
Ov
erview
of
the
IBM
PC
arc
hitecture.
5
Because
p
eripherals
sometimes
need
upgrading,
they
are
con
troled
b
y
via
em
b
edded
rm
w
ares
:
ISA
p
eripherals
had
em
b
edded
ISA
roms,
and
PCI
ha
v
e
PCI
exp
ension
roms.
Ev
en
though
end
users
are
hardly
a
w
are
of
their
v
ery
existence,
those
rm
w
ares
can
b
e
upgraded
(ashed),
usually
using
propri-
etary
and
v
endor
sp
ecic
to
ols.
T
o
a
v
oid
trivial
bac
kdo
oring,
some
cards
oer
a
ph
ysical
switc
h
whic
h
needs
to
b
e
man
ually
actioned
to
allo
w
the
asing
of
the
rm
w
are.
An
other
critical
rm
w
are
is
the
BIOS
rm
w
are,
whic
h
tak
es
place
in
the
motherb
oard.
It
is
rep
onsible
for
detecting
hardw
are
suc
h
as
RAM
and
p
eripherals
at
b
o
ot
time,
initialize
an
In
terrupt
V
ector
T
a-
ble
to
allo
w
in
terraction
with
those
p
eriferals
from
the
RAM,
and
load
the
Master
Bo
ot
Record
from
the
rst
b
o
otable
hard
driv
e
using
in
terruption
0x19.
When
b
o
oting
in
8088
compatibilit
y
mo
de,
the
b
o
ot
loader
can
only
rely
on
the
IVT
to
load
a
k
ernel
in
memory
,
who
will
t
ypically
quic
kly
switc
h
to
protected
mo
de
and
nev
er
use
the
IVT
ev
er
again,
fa
v
ouring
m
uc
h
faster
device
driv
ers
for
hardw
are
in-
terface
from
protected
mo
de.
The
BIOS
rm
w
are
can
also
b
e
upgraded,
and
it
is
in
fact
prett
y
common
to
correct
hardw
are
bugs
suc
h
as
p
cu
bugs
b
y
pushing
a
signed
micro
co
de
up
date
to
the
cpu
from
the
BIOS.
Finally
,
the
BIOS
t
ypically
activ
ates
a
bit
in
con
trol
registers
to
prev
en
t
the
cpu
to
b
e
switc
hed
to
System
Managemen
t
Mo
de
(SSM)
-
whic
h
is
really
the
cpu
patc
h
mo
de
-
in
order
to
prev
en
t
a
class
of
attac
ks
disco
v
ered
b
y
Loic
Duot[1
℄
and
released
publically
b
y
BSDeamon[20℄.
Some
v
endors,
notably
HP
ha
v
e
started
digitally
signing
their
BIOSes
to
a
v
oid
rogue
upgrading.
In
an
y
case,
an
attac
k
er
with
ph
ysical
access
to
the
BIOS
or
p
eripherals
can
replace
the
rm
w
ares
without
relying
on
the
op
erat-
ing
system
b
y
writting
to
the
c
hip
using
for
instance
self
sucian
t
hardw
are
to
ols
based
on
FPGA
c
hips.
One
of
the
problem
with
the
design
of
this
arc