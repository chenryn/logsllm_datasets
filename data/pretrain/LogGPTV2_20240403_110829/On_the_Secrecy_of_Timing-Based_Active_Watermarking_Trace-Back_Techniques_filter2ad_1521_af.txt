e
t
a
W
0.5
 2
M=4
M=6
M=8
 4
K
 6
 8
Figure 12. Watermark duplication rate chang-
ing with M and K
0.85
0.8
0.75
0.7
0.65
0.6
0.55
)
8
=
M
(
e
t
a
r
l
a
v
o
m
e
r
k
r
a
m
r
e
t
a
W
0.5
 2
S=400
S=600
S=800
 4
K
 6
 8
Figure 13. Watermark removal rate (M = 8)
ﬁrst packets increases very fast, and causes duplication rate
to drop dramatically. For larger M and K, our algorithm
does not show much difference from random duplication.
Figure 13 shows the watermark removal rate (i.e., the per-
centage of incorrectly decoded watermark bits after our re-
moval algorithm is applied on the ﬂow) when M = 8. We
can see even when duplication is not successful, the water-
mark can still be removed effectively.
6.6. Detecting Watermark Existence
We evaluate the performance of the SPRT algorithm in
this experiment. The watermark parameters used are the
K=2, original
K=2, modified
K=4, original
K=4, modified
K=6, original
K=6, modified
d
e
r
i
u
q
e
r
r
e
b
m
u
n
t
e
k
c
a
p
g
v
A
80
70
60
50
40
30
20
10
0
1
4
M
6
8
Figure 14. Packets processed
K ; θ ≈ 1
same as in the previous subsections. The real value of θ
depends on K and whether embedding packets are reused
or not. If packets are reused, θ ≈ 1
2K otherwise.
When packets are not reused, the ﬁrst M × K packet delays
are all normal network delays. This may cause problem if
the SPRT terminates as soon as it accepts θ = θ0. Therefore
we test both the original SPRT and the modiﬁed SPRT that
restarts each time θ = θ0 is accepted. We set θ0 = 0.02
based on our observation for network delays, and set θ1 =
0.1 to make it less than 1
K for the largest K. Since S is
unknown to attackers at this stage, S = 1000ms is used.
We set α = β = 0.05.
Table 8 shows the detection rates for both the original
and the modiﬁed SPRT. For the original SPRT algorithm,
the detection rate suddenly drops to 0 for 4 values of M and
K. It is because there are many packets in the beginning of
the ﬂow that are not embedded with watermark. However,
using the modiﬁed SPRT, watermark is detected in all the
cases. Figure 14 compares the average number of packets
processed before the SPRT algorithms terminate. For the
4 values of M and K where the original SPRT’s detection
rate is 0, more packets have been processed by the modiﬁed
SPRT in order to detect the watermark existence.
7. Related Work
The problem of detecting interactive stepping stones
was ﬁrst formulated by Staniford and Heberlein [24].
Their content-based approach compared thumbprints cre-
ated from packet payload. Another content-based scheme
was Sleepy Watermark Tracing [31], which injected non-
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:15 UTC from IEEE Xplore.  Restrictions apply. 
displayable contents into packets. These methods are vul-
nerable to encrypted trafﬁc such as SSH connections. More
recent schemes focused on timing characteristic of pack-
ets. Zhang and Paxson [35] proposed an ON/OFF based
approach to correlate encrypted trafﬁc. Yoda and Etoh [34]
proposed a deviation-based scheme which calculated devia-
tion between an attacking ﬂow and all other ﬂows appeared
around the same time. Wang et al. [30] showed that timing
characteristics of IPDs were preserved across multiple step-
ping stones, and could be used for correlation. The problem
of these methods is that they are all vulnerable to timing per-
turbation. Donoho et al. [5] investigated the theoretical lim-
its of the attackers’ ability to disguise their trafﬁc through
timing perturbation and chaff packets. Using wavelet and
multiscale analysis, they demonstrated that stepping stone
correlation was still possible by observing long term be-
havior. Wang and Reeves [28] proposed an active water-
marking scheme that was robust to random timing pertur-
bation. They analyzed the trade-offs between true positive
rate, the maximum timing perturbation added by attackers,
and the number of packets needed to successfully decode
the watermark. Their work is also the ﬁrst one that iden-
tiﬁes the provable bound on the number of packets needed
to achieve desired correlation effectiveness. Blum et al. [1]
proposed to correlate stepping stone connections by count-
ing the packet number differences in certain time intervals.
Wang et al. [29] also proposed a probabilistic watermark-
ing scheme with even timing adjustments and better true
positive rate. Peng et al. [18] proposed to use active wa-
termarking scheme and packet matching to detect stepping
stone connections when there existed both timing perturba-
tion and extra chaff packets. Several algorithms were pro-
posed with different trade-offs between detection rate, false
positive rate and computation cost. In [27], the authors pro-
vided a watermark approach that could effectively identify
the encrypted peer-to-peer VoIP calls even when they were
transmitted through low-latency anonymizing networks.
Related to tracing through stepping stones, IP trace-back
technologies are developed to identify the origin of attacks
when source IP addresses are spoofed by attackers, such as
in DDoS attacks. One class of IP trace-back approaches is
based on probabilistic packet marking. In these approaches
(e.g. [11, 21, 23, 33]), a router marks each processed packet
with certain information about its path. Such information is
used to rebuild the complete path when the packets are re-
ceived. Another type of IP trace-back is based on packet
logging, where each router logs message digests of the
packets in order to construct the packet path (e.g., [14, 22]).
Various anonymous communication systems have been
proposed to provide privacy for the users of different In-
ternet services. Among them, Onion Routing [25] and its
second generation Tor [4] are seeking to provide a gen-
eral anonymous routing protocol for different Internet ap-
plications. Tarzan [8] is a peer-to-peer anonymous net-
work overlay and provides general-purpose and transparent
anonymizing service. It also uses cover trafﬁc to prevent
trafﬁc analysis of a global observer. Multiple papers have
investigated the timing analysis/attacks to anonymous sys-
tems. In [32], the authors studied the threats of passive log-
ging attacks and described a defense from breaking the as-
sumption of uniformly random path selection. Levine et al.
[13] investigated the passive timing based attacks on low-
latency anonymous systems. Fu et al. [9] studied the degra-
dation of anonymity in a ﬂow-based wireless mix network
under ﬂow marking attacks.
In [16], the authors showed
that the low latency of Tor made it insecure against trafﬁc
analysis attacks by a global adversary.
8. Conclusion
Timing-based active watermarking schemes are effective
for tracing back through stepping stones or an anonymizing
network. However, the schemes themselves are also un-
der the threats of attackers. In this paper, we analyze the
secrecy of a timing-based active watermarking scheme for
tracing through stepping stones [30]. Based on the models
for normal network delays and watermark delays, attackers
can successfully estimate the important watermark parame-
ter S with the (G)EM algorithm. The four cases of water-
mark embedding are investigated, and watermark recovery
and duplication methods are developed. We also investi-
gate the interrelation between the watermark capability and
the minimum number of packets to be delayed, and pro-
pose to use the SPRT algorithm to quickly detect the wa-
termark existence. In experiments, we have shown our at-
tack scheme can efﬁciently and effectively identify the wa-
termark. When watermark parameters are not selected cau-
tiously, almost the entire watermark can be recovered or du-
plicated. The watermark removal algorithm also puts major
threat on the watermark scheme.
Although developed for a speciﬁc scheme, the general
ideas in our attack can be extended and are potentially use-
ful to compromise other approaches that actively manip-
ulate packet timing.
In the future, we would like to in-
vestigate the secrecy of other watermark approaches, such
as [27, 29].
Acknowledgment: The authors would like to thank
Xinyuan Wang and the anonymous reviewers for their valu-
able comments.
References
[1] A. Blum, D. Song, and S. Venkataraman. Detection of In-
teractive Stepping Stones with Maximum Delay Bound: Al-
gorithms and Conﬁdence Bounds. In Proceedings of the 7th
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:15 UTC from IEEE Xplore.  Restrictions apply. 
International Symposium on Recent Advances in Intrusion
Detection (RAID), September 2004.
[2] P. B. Danzig and S. Jamin. Tcplib: A library of TCP/IP traf-
ﬁc characteristics. USC Networking and Distributed Systems
Laboratory TR CS-SYS-91-01, October, 1991.
[3] A. P. Dempster, N. M. Laird, and D. B. Rubin. Maxi-
mum Likelihood from Incomplete Data via the EM Algo-
rithm(with discussion). Journal of the Royal Statistical So-
ciety B, 39:1–38, 1977.
[4] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The
In Proceedings of the
Second-Generation Onion Router.
13th USENIX Security Symposium, August, 2004.
[5] D. Donoho, A. Flesia, U. Shankar, V. Paxson, J. Coit, and
S. Staniford. Multiscale Stepping-stone Detection: Detect-
ing Pairs of Jittered Interactive Streams by Exploiting Max-
imum Tolerable Delay. In Proceedings of the 5th Interna-
tional Symposium on Recent Advances in Intrusion Detec-
tion (RAID), October 2002.
[6] R. Duda, P. Hart, and D. Stork. Pattern Classiﬁcation (2nd
Edition). John Wiley & Sons, 2001.
[7] FindNot.com. FindNot–Anonymous Surﬁng, Anonymous
Email & Anomymous Internet. http://www.findnot.
com/.
[8] M. Freedman and R. Morris.
Tarzan: A Peer-to-Peer
Anonymizing Network Layer.
In Proceedings of the 9th
ACM Conference on Computer and Communications Secu-
rity (CCS), 2002.
[9] X. Fu, Y. Zhu, B. Graham, R. Bettati, and W. Zhao. On Flow
Marking Attacks in Wireless Anonymous Communication
Networks. In Proceedings of the 25th International Confer-
ence on Distributed Computing Systems (ICDCS), 2005.
[10] B. K. Ghosh and P. K. Sen. Handbook of Sequential Analy-
sis. Marcel Dekker, 1991.
[11] M. Goodrich. Efﬁcient Packet Marking for Large-Scale IP
Traceback. In Proceedings of the 9th ACM Conference on
Computer and Communications Security (CCS), 2002.
[12] L. Kaufman and P. Rousseeuw. Finding Groups in Data: An
Introduction to Cluster Analysis. Wiley, New York, 1990.
[13] B. Levine, M. Reiter, C. Wang, and M. Wright. Timing
Analysis in Low-Latency Mix Systems. In Proceedings of
the 8th International Conference on Financial Cryptogra-
phy, Feb 2004.
[14] J. Li, M. Sung, J. Xu, and L. Li. Large-Scale IP Traceback in
High-Speed Internet: Practical Techniques and Theoretical
Foundation. In Proceedings of IEEE Symposium on Security
and Privacy (S&P), 2004.
[15] G. J. Mclachlan and T. Krishnan. The EM Algorithm and
Extensions. John Wiley & Sons, 1997.
[16] S. J. Murdoch and G. Danezis. Low-Cost Trafﬁc Analysis
In Proceedings of the 2005 IEEE Symposium on
Of Tor.
Security and Privacy (S&P), 2005.
[17] V. Paxson. On Calibrating Measurements of Packet Transit
Times. In Proceedings of SIGMETRICS ’98, June 1998.
[18] P. Peng, P. Ning, D. S. Reeves, and X. Wang. Active Timing-
Based Correlation of Perturbed Trafﬁc Flows with Chaff
Packets. In Proceedings of 2nd International Workshop on
Security in Distributed Computing Systems (SDCS), 2005.
[19] Planet-Lab: An Open Platform for Developing, Deploying,
and Accessing Planetary-scale Services. http://www.
planet-lab.org.
[20] S. Rai and D. Matthews. Improving the EM algorithm. Bio-
metrics, 49:587–591, 1993.
[21] S. Savage, D. Wetherall, A. Karlin, and T. Anderson. Prac-
tical Network Support for IP Traceback. In Proceedings of
the ACM SIGCOMM 2000, April 2000.
[22] A. Snoeren, C. Partridge, L. Sanchez, C. Jones, F. Tchak-
ountio, B. Schwartz, S. Kent, and W. Strayer. Single Packet
IP Traceback. ACM/IEEE Trans. on Networking, 10(6):721–
734, Dec. 2002.
[23] D. Song and A. Perrig. Advanced and Authenticated Mark-
ing Scheme for IP Traceback. In Proceedings of IEEE IN-
FOCOM’01, April 2001.
[24] S. Staniford-Chen and L. Heberlein. Holding Intruders Ac-
countable on the Internet. In Proceedings of the 1995 IEEE
Symposium on Security and Privacy (S&P), pages 39–49,
Oakland, CA, 1995.
[25] P. Syverson, D. Goldschlag, and M. Reed. Anonymous Con-
nections and Onion Routing. In Proceedings of the 18th An-
nual Symposium on Security and Privacy (S&P), May 1997.
[26] A. Wald. Sequential Analysis. John Wiley & Sons, 1947.
[27] X. Wang, S. Chen, and S. Jajodia. Tracking Anonymous
Peer-to-Peer VoIP Calls on the Internet. In Proceedings of
the 12th ACM Conference on Computer and Communica-
tions Security (CCS), 2005.
[28] X. Wang and D. S. Reeves. Robust Correlation of Encrypted
Attack Trafﬁc Through Stepping Stones by Manipulation of
Inter-packet Delays. In Proceedings of the 2003 ACM Con-
ference on Computer and Communications Security (CCS),
pages 20–29, 2003.
[29] X. Wang, D. S. Reeves, P. Ning, and F. Feng. Robust
network-based attack attribution through probabilistic wa-
termarking of packet ﬂows. Technical Report TR-2005-10,
North Carolina State University, Department of Computer
Science, February 2005.
[30] X. Wang, D. S. Reeves, and S. F. Wu.
Inter-Packet De-
lay Based Correlation for Tracing Encrypted Connections
Through Stepping Stones. In D. Gollmann, G. Karjoth and
M. Waidner, editors, 7th European Symposium on Research
in Computer Security - ESORICS, October 2002.
[31] X. Wang, D. S. Reeves, S. F. Wu, and J. Yuill. Sleepy Wa-
termark Tracing: An Active Network-Based Intrusion Re-
sponse Framework.
In Proceedings of 16th International
Conference on Information Security (IFIP/Sec), June 2001.
[32] M. Wright, M. Adler, B. N. Levine, and C. Shields. Defend-
ing Anonymous Communications Against Passive Logging
Attacks.
In Proceedings of the 2003 IEEE Symposium on
Security and Privacy (S&P), May 2003.
[33] A. Yaar, A. Perrig, and D. Song. Pi: A Path Identiﬁcation
Mechanism to Defend against DDoS Attacks. In Proceed-
ings of the IEEE Symposium on Security and Privacy (S&P),
2003.
[34] K. Yoda and H. Etoh. Finding a Connection Chain for Trac-
ing Intruders. In F. Guppens, Y. Deswarte, D. Gollmann and
M. Waidners, editors, 6th European Symposium on Research
in Computer Security - ESORICS, October 2000.
[35] Y. Zhang and V. Paxson. Detecting Stepping Stones. In Pro-
ceedings of 9th USENIX Security Symposium, pages 171–
184, August 2000.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:49:15 UTC from IEEE Xplore.  Restrictions apply.