similarity score can be deﬁned as:
DHIST = −DKL(Γu| Γu + Γv
t∈T I(Su(t) = r). Based on the histograms,
) − DKL(Γv| Γu + Γv
),
2
2
where DKL the Kullback-Leibler divergence function [37].
WYCI:
Rossi et al. [32] propose a probabilistic de-
anonymization algorithm. They use the frequency of user login
in different locations to approximate the probability of visiting
these locations by P (r|Lv) =
r is the
times of visit of user v to location r, |R| is the number of
locations in the dataset, and α > 0 is the smoothing parameter,
which is used to eliminate zero probabilities. By following the
recommended setting in [38], we set α = 0.1. Then, their
similarity score is deﬁned as follow:
r +α
r +α|R| , where nv
r∈R nv
(cid:80)
nv
(cid:89)
DWYCI =
t∈T ,S(t)(cid:54)=∅
P (S(t)|Lv).
ME:
Cecaj et al. [8] estimate the probability of trace-
user pairs being the same person according to the number of
Fig. 4. Performance of different algorithms as a function of the number of
records in Weibo’s app-level trajectories.
7
0510152000.050.10.150.20.250.30.350.40.45Hit−Precision#Records  NFLXWYCIPOISMEHISTHMMMSQ(a) App-level (Weibo)
(b) App-level (Dianping)
(c) Check-in (Synchronized)
(d) App-level (Weibo)
(e) App-level (Dianping)
(f) Check-in (Synchronized)
Fig. 5. Complementary cumulative distribution functions (CCDF) and probability mass function (PMF) of the spatial and temporal mismatching (with the ISP
traces). The empirical distribution is compared with the ﬁtting results of Rayleigh, exponential, power-law distributions.
Spatial mismatches are considered in this algorithm. However,
it cannot tolerate temporal mismatches.
Note that POIS, HMM, ME, MSQ algorithms are essen-
tially based on the “concurrent” events and do not expect
temporal mismatches. For these algorithms, we deﬁne “con-
currency” based on 1-hour time bins as the default setting,
i.e., if timestamps of two records are within the same 1-hour
time bin, we regard them as “concurrent”. On the other hand,
POIS, WYCI, HIST, ME and NFLX algorithms are based on
the deﬁnition of “co-located” events and do not expect spatial
mismatches. For these algorithms, we deﬁne the “co-location”
based on the 1km×1km geographic grids, i.e., if two records
are located in the same geographic grid, we regard them as
“co-located”. The resolution values 1 hour and 1 km are set as
the default. We will further analyze the inﬂuence of the spatio-
temporal resolutions to these algorithms later in Section VIII.
Fig. 4 shows the performance of all 7 algorithms for
using Weibo’s app-level trajectories to de-anonymize the ISP
trajectories. The hit-precision is plotted as the function of
the number of records in app-level trajectories. As shown in
Fig. 4, de-anonymization algorithms based on users’ mobility
patterns (e.g., HIST and HMM) have the worst performance
with a maximum hit-precision about 8%. On the other hand,
algorithms based on meeting events including ME and POIS
have better performance, with a maximum hit-precision about
11%. Algorithms such as NFLX and MSQ achieve a better
performance. Even so, their maximum hit-precision is only
about 20%, which is far from the privacy bound obtained in
Section V-A, i.e., 5 points can identify over 75% users.
Note that in our experiment, datasets are already “matched”
— the user population of the external dataset is already a
subset of users in the target ISP dataset. This means for each
trajectory in the external datasets, we know that there must be
a trajectory in the ISP dataset. In practice, the attack is likely to
be more difﬁcult since the external dataset may contain users
that are not in the ISP dataset (i.e. extra noise). To this end, our
results are likely to represent the upper-bound performance of
the de-anonymization algorithms. Next, we further investigate
the reasons behind the under-performance.
VI. REASONS BEHIND UNDERPERFORMANCE
A. Spatio-Temporal Mismatch
We start by investigating the potential spatio-temporal mis-
matches between trajectories in different datasets. Fig. 5 shows
the distribution of spatio-temporal mismatches of external
datasets with respect to the ISP dataset. More speciﬁcally, for
a given user, we match her trajectory in the external dataset
with her ISP trajectory. We deﬁne a spatial mismatch as the
geographical distance between two data records (from two
trajectories) that fall into the same time slots. Similarly, we
deﬁne a temporal mismatch as the minimum time interval
between the external record and the ISP record at the same
location region. Note that we limit the temporal mismatch
within 24 hours to eliminate the inﬂuence of the second visit
to the same location.
Large Spatio-Temporal Mismatches.
Fig. 5(a), (b) and
(c) show the complementary cumulative distribution functions
(CCDF) of spatial mismatches of different datasets. We ob-
serve that the spatial mismatches are prevalent. More than
37% of the records in the app-level trajectory data of Weibo
have spatial mismatches over 2km. It is similar in the other
application, Dianping, of which the spatial mismatch of over
8
10−110010110210−210−1100Spatial Mismatching (km)CCDF  EmpiricalRayleighExponentialPower Law10−110010110210−210−1100Spatial Mismatching (km)CCDF  EmpiricalRayleighExponentialPower Law10−110010110210310−210−1100Spatial Mismatching (km)CCDF  EmpiricalRayleighExponentialPower LawPMFTemporal Mismatching (hour)PMFTemporal Mismatching (hour)PMFTemporal Mismatching (hour)Fourth, deployment of base stations: the base stations (BS)
are placed unevenly in the city. In the ISP trajectory dataset,
we use the connected BS to estimate the user’s location, which
may caused the spatial mismatches, especially in areas where
the base stations are sparse. To investigate this intuition, we
plot Fig. 6. We consider Weibo’s and Dianping’s app-level
trajectory data for Fig. 6(b), and use y = x as a baseline. A
larger radius indicates a sparser placement of base stations.
Not too surprisingly, a larger coverage radius (sparser BS
placement) leads to bigger spatial mismatches. In addition,
spatial mismatches (y axis) are signiﬁcantly larger than the
coverage radius (x axis), indicating that the BS placement is
not the only reason for spatial mismatches.
Finally, user behavior: for the check-in dataset, mismatches
may also come from special user behavior. According to
recent measurement studies [39], [41], 39.9% check-ins (on
Foursquare) are remote check-ins with over 500 meters away
from users’ actual GPS location. Users often check-in at a
remote location (that they are not physically visiting) to earn
virtual badges or compete with their friends. Users may also
check-in a few hours later after they visited a venue [39]. These
factors can lead to major mismatches between the check-ins
and the ISP trajectories.
Such spatio-temporal mismatches can lead to major er-
rors for de-anonymization algorithms. However, many of the
above factors cannot be fundamentally avoided in practice. To
this end, de-anonymization algorithms should design adaptive
mechanisms to tolerant these spatio-temporal mismatches.
B. Data Sparsity
Another possible reason is high sparsity of the real-world
mobility traces. In large-scale trajectory datasets,
the vast
majority of the users have very sparse location records. For
example, in the ISP dataset, users on average have 62 records
in a week, but 22.9% users have less than 1 records and 35.5%
of the users have less than 2 records (Fig. 1). The external
datasets (Weibo and Dianping) are even sparser with less than
5 records per user on average. This means that within the
1-hour time bins of the one-week period, the vast majority
of the time bins are empty (with the location unknown). The
high sparsity makes it difﬁcult to accurately match trajectories
across two datasets. This property is often overlooked when
testing a de-anonymized algorithm on a synthetically generated
dataset or a small dataset contributed by several hundreds of
volunteers.
VII. OUR DE-ANONYMIZATION METHOD
Inspired by the reasons of under-performance of exist-
ing algorithms, we propose new de-anonymization algorithms
by addressing practical factors such as spatio-temporal mis-
matches and data sparsity. First, to address the spatio-temporal
mismatches, we develop a Gaussian mixture model (GMM) to
estimate and amend both spatial and temporal mismatches. The
parameters of GMM are ﬂexible and can be optimized accord-
ing to speciﬁc datasets. Second, to address the data sparsity
issue, we propose two other methods. a) We propose a Markov-
based per-user mobility model to estimate the distribution of
a given user’ missing locations in the “empty” time slots of
the trajectory; b) We leverage the whole dataset to aggregate
(a) Base Station Coverage
(b) Spatial Mismatches
Fig. 6. The coverage radius of base stations, and its relationship with the
spatial mismatches.
31% of the records are larger than 2km. We also observe that
the distribution of Weibo’s app-level data and Dianping’s app-
level data can be approximated by the power-law distribution
in the range of 0 to 10km. After 10km, they can be ap-
proximated better by the exponential distribution. For Weibo’s
check-in data, the power-law part has longer range. The large
spatial mismatches can cause problems to de-anonymization
algorithms that rely on exact location matching [31], [32].
Fig. 5(d), (e) and (f) show the probability mass function
(PMF) of temporal mismatches. The temporal mismatches are
also very prevalent. Only 30% of Weibo’s app-level location
records are in the same time slot with their corresponding
ISP records. The large temporal mismatches indicate that
performing exact temporal matching will introduce errors to
determine the collocation of users [8], [31]. Overall, we can
observe signiﬁcant spatial and temporal mismatches between
different datasets collected from the same set of users.
Finally, we observe that the mismatches follow different
types of distributions. For example, Fig. 5(b) and (c) show
that the spatial mismatch of Weibo’s check-in data can be
approximated by the power-law distribution. For Dianping, the
power-law distribution ﬁts well for the head of the empirical
distribution, but did not capture the tail. To this end, mod-
elling the spatio-temporal mismatches requires a more general
framework.
Possible Reasons behind the Mismatches.
There are a
number of possible reasons that can cause the mismatch. We
discuss some of them below.
First, inherent GPS errors: it is well-known that the GPS
system had intrinsic source of errors [4] such as satellite
errors (ephemeris and satellite clock), earth atmosphere errors
(ionosphere and troposphere), and receiver errors (frequency
drift, signal detection time).
Second, GPS unreachable locations: due to the coverage
of satellite signal, GPS signal is not always available in certain
areas such as indoor and underground [22]. For example, when
a user is on a subway going through a tunnel, the GPS reading
will be interrupted leading to corrupted trajectories. Mean-
while, the user’s smartphone can still connect to the nearby
base station, which can lead to spatio-temporal mismatches
between the ISP and the app-level trajectories.
Third, location updating mechanisms: to save battery life,
many mobile apps do not update user GPS frequently, espe-
cially when the device is sleeping [6]. The slightly outdated
GPS can still be used for non-critical services (e.g., venue
recommendation), but leads to inaccurate user trajectories.
9
00.20.40.60.81Coverage Radius of BS (km)00.20.40.60.81CDF0.10.30.50.70.901234Coverage Radius of BS (km)Median of Spatial Mismatches (km)  App−level (Weibo)App−level (Dianping)BaselineH(cid:88)
Thus, we have(cid:80)Hu
znk as the latent variable to indicate whether Sn are generated
by Lnk (corresponding temporal mismatch is k time units).
znk = 1. Then, in the E step of EM
algorithm, we calculate the distribution of znk conditioned on
the parameters π and σ, which can be expressed as follows,
h=−Hl
π(k)N (Sn|Lnk, σ2(k)I2)
j=−Hl
γ(znk) := P (znk = 1) =
π(k)N (Sn|Lnj, σ2(j)I2)
In the M step, we re-estimate the parameters π and σ using
the distribution of znk, which can be expressed as follows,
(cid:80)Hu
.
(cid:80)N
(cid:80)N
n=1 γ(znk),
n=1 γ(znk)|Sn − Lnk|2,
k = −Hl, ..., Hu,
π(k) = 1
N
σ2(k) = 1
2N
k = −Hl, ..., Hu.
Then, by a ﬁnite number of repeating E and M step, we
obtain the value of π and σ. Speciﬁcally in our problem,
we only consider time delay in adversary’s knowledge. Thus,
we set Hl to be zero. By deﬁning Gπ,σ(p, r1, r2) = π(p) ·
N (r1|r2, σ2(p)I2), (1) can be simpliﬁed as:
(cid:40)
p(S(t)|L) =
Gπ,σ(p, S(t), L(t − p)),
(2)
where u of Hu is ignored for simplicity.
p=0
B. Modelling User Mobility: Markov Model
Based on the graph model shown in Fig. 7, we can observe
that conditioned on a completely observed ISP trajectory L,
S(t) for different t is independent with each other. Then
probability density function (PDF) of a full
trajectory in
external dataset can be calculated as follows,
p(S(t)|L).
p(S|L) =
(cid:89)
(3)
S(t)(cid:54)=∅
However, from the analysis in Section IV-F, we can observe
that users’ locations in many time slots are missing, i.e.,
∃t ∈ T such that L(t) = ∅. In the case, (2) cannot be
applied directly. In addition, S(t) for different t also becomes
dependent with each other. Thus, (3) cannot be applied. To
solve it, we enumerate all possible complete trajectories of L,
and apply the formula of total probability with respect to them.
Speciﬁcally, denote C(L) as the set of all possible complete
trajectories of L. Then the PDF of S(t) conditioned on L can
be calculated as follow:
p(S|L) =
p(LC|L)
p(S(t)|LC).
(4)
(cid:88)
(cid:89)
LC∈C(L)
S(t)(cid:54)=∅
As for the probability p(LC|L), we calculate it by using a
Markov model. Speciﬁcally, we use two different orders, i.e.,
0-order and 1-order, Markov models as follows.
0-Order Markov Model.
In the 0-order Markov model,
location of each time slot is assumed to be independent with
each other. Let E(r) to be the margin distribution of the user,
which can be calculated as follows,
(cid:80)
(cid:80)
t∈T I(L(t) (cid:54)= ∅) +(cid:80)
t∈T I(L(t) = r) + α(r)
E(r) := p(L(t) = r) =