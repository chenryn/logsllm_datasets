4.4 Badge
Complementary to the Button, the Badge is a wearable
display that provides secure display and video capture fa-
cilities for the Annex Ensemble. We have prototyped the
Badge using an embedded Linux computer, coupled with
an FPGA, a touch sensitive LCD, forward and backward
facing cameras, video compression hardware and a Blue-
tooth radio. Like on the Button the FPGA encrypts and de-
crypts Bluetooth communications, but on the Badge it also
provides digital signature and veriﬁcation facilities. This
allows the Badge to be used as an MLS data display, for
example for classiﬁed imagery or video streams, or, poten-
tially, as a trusted GUI for certain MiniSec applications.
The Badge also acts as a trusted, context-aware identity
badge that alters its display depending on the environment,
based on availability (or absence of) securely transmitted
signals from nearby Bricks (see Section 4.6). Outside a De-
fence installation, for example, the display may become in-
active, whereas inside a high security facility it will display
the full credentials of its holder. The Badge can also be used
to assist with the veriﬁcation of an unknown party’s creden-
tials. For example, a security guard might use his Badge
to display the identity photo of a visitor, sourced from their
Codestick (described next) or a trusted database, thus pro-
tecting against the use of forged, stolen or tampered devices.
4.5 Codestick
The Codestick is a high assurance credential exchange
device.
Its primary function is to unburden Defence per-
sonnel from having to remember multiple passwords, carry
around multiple security tokens or forward on security
clearance details in advance of meetings. The Codestick
is designed as a tamper-proof device that can only be acti-
vated by biometric authentication, which we hope will help
it to achieve very high levels of security accreditation.
Two individuals with their own personalised Codesticks
can exchange personal security credentials directly, with-
out recourse to a third party. Secure cryptographic proto-
cols, directed communication mechanisms and trusted high
assurance design ensures that the credential exchanges are
truly peer-to-peer and provide integrity and conﬁdentiality
for all data involved in the transactions. This is a substantial
improvement over Defence’s current credential exchange
system, where each party must get their own security ofﬁcer
to manually exchange clearance information with the other
party’s security ofﬁcer – an awkward, slow and error-prone
process.
The Codestick also provides single sign-on functionality
that allows its owner to automatically log on to Enterprise
networks and any number of web-based systems, and digital
signature, encryption, decryption and signature veriﬁcation
facilities to protect its owner’s email.
Many functions of the Codestick have already reached
stable operation. A user trial of the device is now being
prepared. More information about the Codestick can also
be found in patent number WO 2004/109973 [4].
4.6 Bricks
Although not strictly part of the Annex Ensemble, i.e.
the devices that one would carry around on their person,
Bricks are an essential component in the Annex system.
Bricks are infrastructure devices that form the backbone
of the Annex network or provide other Annex enabled ser-
vices. In the same way that our MiniSec is comprised of
a COTS iPAQ augmented with an SMC card, we have de-
veloped a number of prototype Bricks by adding an SMC
card to existing server or network hardware. Coupling
these SMCs with appropriate trusted object implementa-
tions makes it possible to draw these platforms under the
control of the Annex capability framework, with the many
authorisation and security related beneﬁts that this affords.
The ﬁrst Brick modules we implemented provide gate-
ways between our secure VOIP system and the Public
Switched Telephone Network (PSTN) and GSM phone net-
works. Calls from MiniSec devices to a public telephone
system transit the secure VOIP network to a gateway point,
which, after establishing a new, normal telephone call be-
tween the gateway device and destination telephone, then
acts as the intermediary for audio data between both sys-
tems. We used OpenH323 [21] to implement the PSTN
side of our gateway device. Outgoing calls can be made
by a ﬁxed line telephony card, or, using an extension to
OpenH323 that we developed, via a mobile telephone sup-
porting the Bluetooth Hands Free proﬁle [6]. Incoming calls
from either the PSTN or a Bluetooth enabled mobile phone
are supported by the same processes in reverse.
We have also created experimental IPv6 routers and
wireless access points whose operational parameters can be
controlled by trusted objects running under an Annex Capa-
bility Kernel. We achieved this by connecting a serial line
from a trusted “router control” object on a MiniSec device
to the serial console (i.e. conﬁguration) port on a Cisco
router. As well as implementing the serial communica-
tion channel, the control object also implements a state ma-
chine that models the router’s command line interface to ab-
stract away the conﬁguration terminal’s stateful behaviour,
thus exposing a simple but powerful interface for accessing
the extensive range of conﬁguration options available via
the router’s executive. We made use of this to implement
a proof-of-concept Multi Level Secure network admission
policy, such that only appropriately classiﬁed MiniSec de-
vices could make use of a particular network.
Although the details of our implementation are beyond
the scope of this paper, we used the following basic ap-
proach: (1) the router’s initial trafﬁc ﬁltering policies com-
pletely ﬁrewall all newly connected clients from sending
or receiving any trafﬁc, other than to the MiniSec device
controlling the router; (2) the router control object would
cause the broadcast of an authentication beacon contain-
ing a weakly permissive capability for itself to any poten-
tial MiniSec clients that have roamed onto the network,
thus allowing them to initiate capability-based authentica-
tion with the Brick; (3) this new client would address the
router control object using the beacon capability and attach
a capability to a credential object proving that it is cleared
to the appropriate level (see [20] for more details about this
step); and (4) the router control object would modify the
router’s trafﬁc-ﬁltering rules allowing the newly authenti-
cated MiniSec device to access the network.
5 The Annex Testbed
The Annex testbed is a reference implementation of
It in-
all of the Annex elements described in this paper.
cludes several dozen complete ensembles, although most
elements are only early prototypes. The Annex IPv6 net-
work, which is distributed by a wide area ATM network
connecting DSTO sites almost 1000km apart, is composed
of a number of Cisco routers and 802.11b access points that
employ 802.11i link-layer security; more recently we have
also linked this network to the IPv6 Internet. Our MiniSecs
use a modiﬁed Mobile IPv6 for Linux (MIPL) implementa-
tion, which allows their users to seamlessly roam with their
enesmbles throughout the entire network. This provides an
ideal platform for experimentation with the Annex frame-
work and novel security and mobility applications.
We began conducting both on-site and off-site demon-
strations (via the IPv6 Internet) of our secure mobile tele-
phony application using the Annex testbed in August 2005.
This environment allows users to make any number of con-
current point-to-point calls, conference calls, calls to ex-
ternal telephone numbers by the PSTN or GSM mobile
phones, all under the secure control of the Annex capability
system. Not only does this provide a robust platform for fur-
ther experimentation and implementation, we also believe
that it helps to demonstrate the viability of the overall An-
nex concept and the technologies that underpin it.
6 Conclusion and Further Work
This paper summarised the security and network archi-
tecture that underpins a family of DSTO developed tech-
nologies and devices that are collectively known as the An-
nex System. The centerpiece of all of our devices is the
the Annex Security Architecture explained in Section 2, a
trusted platform for distributed object-capability based soft-
ware, which is inherently more secure and amenable to for-
mal analysis than programs that are developed using current
software engineering practices. In addition, Section 3 de-
scribed how the distributed aspect of our security architec-
ture is based squarely on next generation networking tech-
nologies, such as IPv6 and 802.11i wireless networking, but
includes a small number of important extensions to improve
security, robustness and mobility in the military context.
Although some researchers have been separately inves-
tigating similar security and network architectures, we are
not aware of any other projects that have made signiﬁcant
progress – or even attempts – to combine these types of
technology. Furthermore, because both of these concepts
must be used in tandem to truly progress the state of the art
in secure mobile devices, very few of these projects have
been forced to go beyond simple proof of concept exam-
ples.
In contrast, our contribution has been to not only
combine advances in high assurance software and mobile
devices, but also to demonstrate complex real world appli-
cations based on the fusion of these ideas.
In Section 4 we introduced our reference implementa-
tion of the Annex security and network architecture, a Multi
Level Secure ensemble of devices including: the MiniSec, a
wide area communications hub with an example MLS voice
application; the Button, a small, secure Bluetooth based
speakerphone; the Badge, a secure, wearable, context sen-
sitive display; the Codestick, a high assurance credential
exchange device; and Bricks, a range commodity network
infrastructure devices retroﬁtted for subservience to an aux-
iliary, trusted Annex security device.
We have been performing demonstrations and conduct-
ing scientiﬁc trials of our ensemble of Annex devices since
late 2005. Since then we have also been working on a sec-
ond generation of Annex devices, including a far more re-
ﬁned version of the Codestick device and also a substan-
tially improved MiniSec. Our “MiniSec2” device, which
we hope to publish more details on soon, supports Multi
Level Secure operation for any unmodiﬁed, off the shelf ap-
plications, including document editing and viewing, email,
web browsing, voice and video communications and more.
References
[1] David Alberts and Richard Hayes. Power to the Edge:
Command and Control in the Information Age. CCRP
Publications, 2003.
[2] David. S. Alberts, John J. Gartska, and Frederick P
Stein. Network Centric Warfare: Developing and
Leveraging Information Superiority. CCRP Publica-
tions, 1999.
[3] M. Anderson, R. D. Pose, and C. S. Wallace. A
password capability system. The Computer Journal,
29(1):1–8, 1986.
[4] Mark Anderson. Credential communication device,
International Publication Number
December 2004.
WO 2004/109973.
[5] ATIS Committee T1A1. ATIS Telecom Glossary 2000,
2001. http://www.atis.org/tg2k/.
[6] Bluetooth Car Working Group. Hands-Free Pro-
ﬁle speciﬁcation version 1.5, 2005. http://www.
bluetooth.com.
[7] S. Deering and R. R. Hinden. Internet Protocol, Ver-
sion 6 (IPv6) (RFC 2460), December 1998.
[8] J. B. Dennis and E. C. Van Horn. Programming se-
mantics for multiprogrammed computations. Commu-
nications of the ACM, 9:143–154, 1966.
[9] Virgil D. Gligor.
Review and revocation of ac-
cess privileges distributed through capabilities. IEEE
Transactions on Software Engineering, 5:575–586,
1979.
[24] Richard Smith. Multilevel security.
In Hossein
Bidgoli, editor, Handbook of Information Security:
Threats, Vulnerabilities, Prevention, Detection and
Management. Wiley, New York, 2005.
[25] H. Soliman, C. Castelluccia, and K. El Malki. Hier-
archical Mobile IPv6 mobility management (hmipv6)
(RFC 3775), August 2005.
[26] R. Spencer, S. Smalley, P. Loscocco, M. Hibler,
D. Anderson, and J. Lepreau. The Flask security ar-
chitecture: System support for diverse security poli-
cies. In Proceedings of the Eighth USENIX Security
Symposium, pages 123–139, 1999.
[27] Fred Spiessens and Peter Van Roy. A practical formal
model for safety analysis in capability-based systems.
In TGC 2005, LNCS 3705, pages 248–278, 2005.
[28] Marc Stiegler. A picturebook of secure cooperation,
2004. http://www.skyhunter.com/marcs/
SecurityPictureBook.ppt.
[29] M.V. Wilkes and R. M. Needham. The Cambridge
CAP Computer and its Operating System. Elsevier
North-Holland, 1979.
[30] P. Zimmerman. Pretty Good Privacy, June 1993. Dis-
tributed with PGP software.
[10] D. A. Grove, M. Anderson, and C. J. North. Enhanc-
ing Hierarchical Mobile IPv6 addressing for the An-
nex architecture.
In Proceedings of the 7th Interna-
tional Conference on High Speed Networks and Multi-
media Communications (LNCS 3079), pages 492–502,
2004.
[11] D. A. Grove, T. Newby, C.A. Owen, C.J. North, A.P.
Murray, T.C. Murray, A.V. Uzanov, and T.J. Cuthbert-
son. The second generation Annex TCB. In In prepa-
ration, 2007.
[12] Norm Hardy. The confused deputy (or why capabil-
ities might have been invented). Operating Systems
Review, 22(4):36–38, October 1988.
[13] IETF IPsec working group. IPSec (RFC 4301-4309),
December 1998.
[14] D. Johnson, C. Perkins, and J. Arkko. Mobility sup-
port in IPv6 (RFC 3775), June 2004.
[15] Henry M. Levy. Capability-Based Computer Systems.
Digital Press, 1984.
[16] Mark S. Miller. Robust Composition: Towards a
Uniﬁed Approach to Access Control and Concurrency
Control. PhD thesis, Johns Hopkins University, Balti-
more, Maryland, USA, May 2006.
[17] Mark S. Miller, Chip Morningstar, and Bill Frantz.
Capability-based ﬁnancial instruments.
In Proceed-
ings of Financial Cryptography 2000, February 2000.
[18] Mark S. Miller and Jonathan S. Shapiro. Paradigm re-
gained: Abstraction mechanisms for access control. In
8th Asian Computing Science Conference (ASIAN03),
pages 224–242, December 2003.
[19] Mark S. Miller, Ka-Ping Yee, and Jonathan S. Shapiro.
Capability myths demolished. Technical report, HP
Laboratories, 2003.
[20] T.C. Murray and D.A. Grove. Non-delegatable author-
ities in capability systems. Submitted to the Journal of
Computer Security, 2007.
[21] OpenH323 Project.
http://sourceforge.
net/projects/openh323.
[22] J. H. Saltzer and M. D. Schroeder. The protection of
information in computer systems. Proceedings of the
IEEE, 63(9):1208–1308, September 1975.
[23] Jonathan S. Shapiro and Samuel Weber. Verifying
the EROS conﬁnement mechanism. In Proceedings of
the IEEE Symposium on Security and Privacy, 2000,
pages 166–176, 2000.