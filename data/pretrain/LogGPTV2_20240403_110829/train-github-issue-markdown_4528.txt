**Describe the bug**
We've been hitting this for awhile but finally dug into exactly why it's
happening. With the addition of a normal offset bias for shadows (#18915)
normals are required in the vertex shader to compute the fragment position in
the shadow frame. However if vertex normals are not available on the geometry
then the behavior of this section of code seem unpredictable. On an NVidia GTX
1080 and Intel integrated graphics no shadows are rendered on the mesh with
flat shading enabled but shadows are rendered as expected with a Radeon Pro
560. We are using flat shaded materials on some of our models that do not have
vertex normals and / or it's too expensive to generate them because our
geometry is dynamic.
**To Reproduce**
Steps to reproduce the behavior:
  1. Go to https://jsfiddle.net/1dptcou6/.
  2. See that shadows are not displayed on the plane with `flatShading` enabled and no geometry normals.
  3. Comment out the `flatShading: true` line on material instantiation and line removing vertex normals.
  4. Shadows are rendered as expected.
_**Live example**_
  * https://jsfiddle.net/1dptcou6/
**Expected behavior**
Shadows render normally even when `Material.flatShading = true` and no vertex
normals are available. This worked as expected until r118 onward.
**Platform:**
  * Device: 2017 Microsoft Surface Laptop
  * OS: Windows 10
  * Browser: Chrome
  * Three.js version: r118+
Also observed with NVidia GTX 1080 GPU on Windows and Intel Integrated
Graphics on OSX.
cc @Oletus