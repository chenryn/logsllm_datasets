### Performance Properties of Case 2 and Case 3
- **(d) Available Bandwidth**
- **(e) Capacity**
- **(f) Throughput**

### Figure 13: Performance Properties of Case 2 and Case 3

### Trees Used in Application-Layer Multicast
- **Tree 1:**
  - Berkeley (Source)
  - Stanford
  - Seattle
  - Princeton
  - Pittsburgh

- **Tree 2:**
  - Princeton (Source)
  - Pittsburgh
  - Stanford
  - Berkeley
  - Seattle

### Figure 14: Trees Used in Application-Layer Multicast

The performance of the application-layer multicast depends on the Round-Trip Time (RTT), path loss, and available bandwidth. In this experiment, a 4 MB file is transferred from the source to all the children using an application-layer multicast tree. Each branch of the tree transfers data reliably using TCP, and each branch is independently flow-controlled because each node in the tree implements an application-layer buffer. The tree is built using a topology-aware protocol similar to that used in NICE [2].

We created two different topologies, each containing five nodes at five different locations, as shown in Figure 14. Both trees consist of nodes at Berkeley, Stanford, Seattle, Princeton, and Pittsburgh. Tree 1 has a source at Berkeley, while Tree 2 has a source at Princeton, resulting in two different topologies. Each location is annotated with a unique number. For each tree, we compare the performance where all nodes for all locations belong to network C with that where all nodes in those locations belong to network G. Thus, for each tree, we have a G2G scenario and a C2C scenario.

### 6.1.1 Results

We first compare the throughput obtained from the two different trees shown in Figure 14. For Tree 1, the average throughput of receivers in the G2G scenario was 3935.4 Kbps, while the average throughput in the C2C scenario was 2379.5 Kbps, representing a decrease of 40%. Similarly, for Tree 2, the average throughput of receivers in the G2G scenario was 4916.7 Kbps, while the average throughput in the C2C scenario was 2742.5 Kbps, representing a decrease of 44.2%.

Figure 15 shows the throughput achieved by each receiver for both trees in the C2C and G2G scenarios. In Tree 1, each receiver (2, 3, 4, and 5) receives the file with lower throughput when the nodes belong to commercial networks compared to when they belong to GREN. Specifically, the link from Berkeley to Pittsburgh is particularly worse, which then affects the throughput at Princeton. We verified using Pathneck that the throughput reduction between these nodes in the C2C scenario was due to a bottleneck in the core and not at the access link of the commercial nodes. This can be verified by seeing that in Tree 2, the commercial node at Pittsburgh received a throughput of almost 4 Mbps. In contrast, the link from Berkeley to Pittsburgh was able to transfer at 3 Mbps in the G2G scenario.

In Tree 2, the throughputs are actually comparable in G2G and C2C scenarios for receivers 1, 2, and 3. However, we again see a large gap between the throughput achieved for receiver 4 on the G2G link between Princeton and Pittsburgh (12 Mbps) versus the C2C link between Princeton and Pittsburgh.

### Figure 15: Multicast Performance in Mixed Testbeds

- **Tree 1:**
  - G2G: 3935.4 Kbps
  - C2C: 2379.5 Kbps

- **Tree 2:**
  - G2G: 4916.7 Kbps
  - C2C: 2742.5 Kbps

### Network Connections
| Source | Destination | Connection Type |
|--------|-------------|-----------------|
| ATT    | nbgisp      | I/0.872         |
| ATT    | IRL Berk.   | I/0.268         |
| ATT    | NEC Labs    | A/0.017         |
| ...    | ...         | ...             |

- **CP1:**
  - I/0.872
  - I/0.268
  - A/0.017
  - ...

- **CP2:**
  - A/0.599
  - A/0.034
  - I/0.009
  - ...

This table provides a detailed view of the network connections and their corresponding connection types and values.