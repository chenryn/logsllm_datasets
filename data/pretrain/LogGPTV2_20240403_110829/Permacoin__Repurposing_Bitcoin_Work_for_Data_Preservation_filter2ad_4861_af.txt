is desired, the user should use a standard encryption algo-
rithm and only publish ciphertexts. To avoid linking multiple
ciphertexts to the same origin, the user should connect to the
network via an anonymizing overlay such as Tor [23], using
a separate circuit for each update.
Encouraging Honest Identity Generation. As mentioned in
Section 6, our security holds when rational users choose their
identities honestly, leading to a random (rather than adver-
sarially chosen) storage assignments. We therefore wish to
design a system that provides the right incentives. Our idea is
to associate a proof-of-work with the identity generation pro-
cess, thus making selective identity generation more costly.
Encouraging Better Use of Additional Storage. Although
we have set the per-identity storage requirement (cid:3) in Perma-
coin small enough so that an ordinary user can afford to par-
ticipate, we expect that many users will purchase additional
storage devices to participate competitively. We would like
to encourage them to store many different segments, rather
than multiple copies of the same assigned segments, thus in-
creasing the diversity of storage. It would seem difﬁcult to
achieve such an incentive while preserving the linearity-of-
expected-reward requirement. Our approach here is to sug-
gest that the behavior of Bitcoin participants may in fact be
better predicted by prospect theory [24] rather than expected
utility; participation in our scheme more closely resembles
participation in state lottery gambles (hence our use of the
term scratch-off lottery puzzle). Evidence from the Power-
ball lottery suggests that afﬂuence correlates positively with
the variance and the size of the jackpot [25]. Using this as a
heuristic, we suggest that participants who can afford to pur-
chase many storage devices may prefer a puzzle lottery with a
higher difﬁculty (i.e., higher variance) and a commensurately
larger reward, even if the expectation is the same.
A Weaker Trusted Dealer Assumption.
In practice, the
trusted dealer in Permacoin would be replaced by the function
of the network itself. While our scheme incentivizes the stor-
age of ﬁles, there is no built-in incentive to distribute ﬁles to
other users. However, even a fraction of altruistic users may
form an effective distribution network by sharing segments
voluntarily, in which case the storage incentive still helps by
offsetting the storage cost. Note that this is similar to how Bit-
coin already operates, where the network distributes copies of
historical data to new users despite the mining incentives hav-
ing nothing to do with this function.
Overall Impact. How much would actually be gained if Per-
macoinwere fully successful (for example, if Permacoin were
adopted as a modiﬁcation to Bitcoin – or, alternately, if Per-
macoin as an independent system surpasses Bitcoin, just as
Facebook surpassed MySpace in the 2000’s)?
First, note that in the previous section, we estimated the
storage capacity of the network if Permacoin had hypotheti-
cally been used instead of Bitcoin from the beginning. The
distinction is that the current hardware investment in Bitcoin
has already been made – at best, we can hope Permacoin
leads to better utilization of future equipment investments in
Bitcoin-like systems. We remark that the observed hashpower
488
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:14 UTC from IEEE Xplore.  Restrictions apply. 
of the Bitcoin network has grown steadily since its inception,
and has at least doubled every two months between March
2013 and March 2014.7 If growth continues, then repurpos-
ing the additional investment will lead to a beneﬁt.
Although Permacoin reclaims additional beneﬁt from min-
ing hardware that is simultaneously employed in maintaining
the currency, the performance of the storage service we obtain
is poor compared to typical cloud storage. Large datacen-
ters enjoy economies of scale and save costs on bulk power
and cooling; even Amazon Glacier, which, as mentioned in
Section 6, most closely matches our operating points (cheap
to store, expensive to recover), is much cheaper per gigabyte
and offers similar features like geographic replication of data.
However, Permacoin offers a greater degree of geographic
diversity, and, more importantly, dispersion across more ad-
ministrative domains. Indeed, full decentralization is the key
design goal in Bitcoin, and our approach confers the same
property to data preservation.
9 Related Work
Permacoin spans three main areas of literature.
Proofs of Storage. There is an expansive literature on PORs.
The original construction [5] has been followed by variants,
including some with improved efﬁciency [26, 27], public ver-
iﬁability [5, 27], distributed variants, e.g., [10], and, most re-
cently, the ability to support ﬁle systems, rather than the static
ﬁles of the original construction [21]. A related vein of lit-
erature on Proofs of Data Possession (PDPs) [28] considers
proofs that most, but not necessarily all of a ﬁle is stored.
PORs, unlike PDPs, also support a feature called extraction,
that allows ﬁle recovery through the challenge-response inter-
face. We don’t make use of extraction in our proposal here.
Bitcoin. A purely digital implementation of money has been
a sought-after goal since the development of blind signa-
tures by Chaum in 1982 [29]. Previous attempts (e.g., [30])
awarded monetary value to computational work, but required
an external timestamp service to process transactions in se-
quence. The novel approach underlying Bitcoin [2] is to re-
late the problem of committing transactions to the problem
of Byzantine consensus in a public p2p network, for which
the use of computational puzzles can overcome a lack of pre-
established identities [31]. The result is a system which is
computationally very expensive, yet encourages a high degree
of participation and tolerates substantial misbehavior without
relying on strong identities. The economic assumptions un-
derlying Bitcoin are not yet fully understood. When com-
putational resources are allocated equally among individuals,
cooperation according to Bitcoin’s reference implementation
has been shown to be a Nash equilibrium, but not a unique
one [13]; when an individual or coalition wields a third or
more of the overall power, then it is more proﬁtable to devi-
ate from the protocol [12]. Numerous variations of Bitcoin
have been proposed, such as Litecoin, which use different
7Read from http://blockchain.info/charts/hash-rate
on March 11.
puzzle schemes to alter the incentive structure, for example
to encourage participation with commodity (rather than cus-
tomized) hardware. Ours is among the ﬁrst proposals for puz-
zles with beneﬁcial side-effects. In Primecoin [32], mining
yields Cunningham chains of prime numbers, though these
have no known uses and the puzzle scheme is not proven
to satisfy any security deﬁnition. The “proof-of-stake” [33]
technique proposes to eliminate computational work alto-
gether; this could be an even greater beneﬁt than our ap-
proach, although the security tradeoffs are as of yet unclear.
P2P File Systems and Incentives. Since 2000 there has
been substantial research on peer-to-peer systems for persis-
tent storage of data [8, 34] based on distributed-hash-table
routing techniques (e.g., Pastry [35]). The most popular sys-
tems reward users for contributing their resources to the net-
work. Most incentive schemes are based on reciprocation,
and are designed to prevent free-riding (i.e., users that con-
sume resources without contributing their fair share). In par-
ticular, BitTorrent [7] users that contribute upstream band-
width are rewarded with bandwidth from other users and thus
can download ﬁles faster. Peer-to-peer document backup sys-
tems [36] have been proposed in which users swap contracts
by which they agree to store copies of others’ ﬁles.
Our peer-to-peer storage system in Permacoin is distin-
guished from these in two main ways. First, the entire tar-
get archive is replicated throughout the entire global network,
rather than among a small cross section of peers. This yields
the highest probability of ﬁle recovery, and thus is especially
suitable for data of great public signiﬁcance. Second, the high
cost of global redundancy is offset by the fact that our system
recycles computational resources that are already consumed
on the Bitcoin network.
10 Conclusion
We have presented Permacoin, a modiﬁcation to Bitcoin that
recycles the enormous investment of computational resources
in order to serve a useful auxiliary purpose. Our approach
has been to replace the underlying computational SOP in Bit-
coin with one based on Proofs-of-Retrievability. We have
shown that in a model involving rational participants and a
resource-limited adversary, participants in Permacoin must
locally store diverse portions of a large dataset F , ensuring
full data recovery with high probability. Our analysis has
shown that the system would be feasible, preserving the es-
sential incentive structures underlying Bitcoin and imposing
only a minor overhead. Given the size of the existing Bitcoin
network, we estimate that our scheme would recycle enough
resources to store at least a “Library of Congress” worth of
data (i.e., two hundred terabytes) in a globally distributed net-
work.
Acknowledgements. We thank the anonymous reviewers
for their invaluable suggestions, and members of the Bit-
coin community (especially Gregory Maxwell) for early dis-
cussions leading to this work. This research was funded in
part by NSF under grant numbers CNS-1223623 and CNS-
489
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:14 UTC from IEEE Xplore.  Restrictions apply. 
1314857, and by a Google Faculty Research Award.
References
[1] P. M. Fraser, Ptolemaic Alexandria. Clarendon Press
[2] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash
Oxford, 1972, vol. 3.
system,” 2008.
[3] C. Dwork and M. Naor, “Pricing via processing or com-
batting junk mail,” in CRYPTO, 1993.
[4] A. L. Beberg, D. L. Ensign, G. Jayachandran, S. Khaliq,
and V. S. Pande, “Folding@ home: Lessons from eight
years of volunteer distributed computing,” in Parallel &
Distributed Processing (IPDPS), 2009, pp. 1–8.
[5] A. Juels and B. S. Kaliski Jr, “PORs: Proofs of retriev-
ability for large ﬁles,” in ACM CCS, 2007, pp. 584–597.
[6] R. K. Ko, S. S. Lee, and V. Rajan, “Understanding cloud
failures,” IEEE Spectrum, vol. 49, no. 12, 28 Nov. 2012.
[7] B. Cohen, “Incentives build robustness in bittorrent,” in
Workshop on Economics of Peer-to-Peer systems, vol. 6,
2003, pp. 68–72.
[8] J. Kubiatowicz, D. Bindel, Y. Chen, S. Czerwinski,
P. Eaton, D. Geels, R. Gummadi, S. Rhea, H. Weath-
erspoon, W. Weimer et al., “Oceanstore: An architec-
ture for global-scale persistent storage,” ACM Sigplan
Notices, vol. 35, no. 11, pp. 190–201, 2000.
[9] C. Decker and R. Wattenhofer, “Information propaga-
tion in the Bitcoin network,” in IEEE P2P, 2013.
[10] K. D. Bowers, A. Juels, and A. Oprea, “HAIL: a high-
availability and integrity layer for cloud storage,” in
ACM CCS, 2009, pp. 187–198.
[11] C. Kellogg, “Government shutdown closes Library of
Congress – online too,” Los Angeles Times, 1 Oct. 2013.
[12] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin
mining is vulnerable,” in In FC’14), March 2014.
[13] J. A. Kroll, I. C. Davey, and E. W. Felten, “The eco-
nomics of bitcoin mining or, bitcoin in the presence of
adversaries,” WEIS, 2013.
[14] D. Bradbury, “Alydian targets big ticket miners with
terahash hosting,” http://www.coindesk.com/alydian-
targets-big-ticket-miners-with-terahash-hosting/, Au-
gust 2013.
[15] L. Reyzin and N. Reyzin, “Better than BiBa: Short one-
time signatures with fast signing and verifying,” in In-
formation Security and Privacy.
Springer, 2002, pp.
144–153.
[16] A. Miller, A. Juels, E. Shi, B. Parno, and J. Katz, “Per-
macoin: Repurposing bitcoin work for data preserva-
tion,” online full version: http://cs.umd.edu/∼amiller/
permacoin full.pdf, March 2014.
[17] I. Miers, C. Garman, M. Green, and A. D. Rubin, “Ze-
rocoin: Anonymous distributed e-cash from bitcoin,” in
Security and Privacy (SP), 2013 IEEE Symposium on.
IEEE, 2013, pp. 397–411.
[18] A. L. Shimpo, “The Seagate 600 & 600 Pro SSD re-
view,” URL: www.anandtech.com/show/6935/seagate-
600-ssd-review/5, 7 May 2013.
[19] P. Lyman, H. Varian,
J. Dunn, A. Strygin, and
K. Swearingen, “How much information?” UC Berke-
ley, Tech. Rep., 2000.
[20] B. Parno, C. Gentry, J. Howell, and M. Raykova,
“Pinocchio: Nearly practical veriﬁable computation,” in
IEEE Symposium on Security and Privacy, 2013, pp.
238–252.
[21] E. Shi, E. Stefanov, and C. Papamanthou, “Practical dy-
namic proofs of retrievability,” in ACM CCS, 2013, pp.
325–336.
[22] N. Chandran, B. Kanukurthi, and R. Ostrovsky, “Lo-
cally updatable and locally decodable codes,” (to ap-
pear) TCC, 2014.
[23] R. Dingledine, N. Mathewson, and P. Syverson, “Tor:
The second-generation onion router,” DTIC Document,
Tech. Rep., 2004.
[24] A. Tversky and D. Kahneman, “Advances in prospect
theory: Cumulative representation of uncertainty,” J.
Risk Uncertainty, vol. 5, no. 4, pp. 297–323, 1992.
[25] E. Oster, “Are all lotteries regressive? evidence from the
powerball,” National Tax Journal, June, 2004.
[26] K. D. Bowers, A. Juels, and A. Oprea, “Proofs of re-
trievability: Theory and implementation,” in CCSW,
2009, pp. 43–54.
[27] H. Shacham and B. Waters, “Compact proofs of retriev-
ability,” in Asiacrypt, 2008, pp. 90–107.
[28] G. Ateniese et al., “Provable data possession at un-
trusted stores,” in ACM CCS, 2007, pp. 598–609.
[29] D. Chaum, “Blind signatures for untraceable payments.”
in Crypto, vol. 82, 1982, pp. 199–203.
[30] W. Dai, “b-money,” 1998.
[31] J. Aspnes, C. Jackson, and A. Krishnamurthy, “Expos-
ing computationally-challenged byzantine impostors,”
Department of Computer Science, Yale University, New
Haven, CT, Tech. Rep, 2005.
[32] S. King, “Primecoin: Cryptocurrency with prime num-
ber proof-of-work,” http://www.primecoin.org/static/
primecoin-paper.pdf, 2013.
[33] ——, “Ppcoin:
Peer-to-peer crypto-currency with
proof-of-stake,” http://www.peercoin.net/bin/peercoin-
paper.pdf, 2012.
[34] A. Rowstron and P. Druschel, “Storage management
and caching in past, a large-scale, persistent peer-to-
peer storage utility,” in ACM SIGOPS Operating Sys-
tems Review, vol. 35, no. 5. ACM, 2001, pp. 188–201.
[35] ——, “Pastry: Scalable, decentralized object location,
and routing for large-scale peer-to-peer systems,” in
Middleware, 2001, pp. 329–350.
[36] B. F. Cooper and H. Garcia-Molina, “Peer-to-peer data
trading to preserve information,” ACM TOIS, vol. 20,
no. 2, pp. 133–170, 2002.
490
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:01:14 UTC from IEEE Xplore.  Restrictions apply.