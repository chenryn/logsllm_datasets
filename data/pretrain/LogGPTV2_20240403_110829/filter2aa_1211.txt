# DefCon 21, Las Vegas 2013
## Let’s Screw With nMap
### Gregory Pickett, CISSP, GCIA, GPEN
#### Chicago, Illinois
#### PI:EMAIL
#### Hellfire Security

## Overview
- **Nosey Bastards!**
- **All About Packet Normalization**
- **Working It All Out**
- **Putting It Into Practice**
- **Finishing Up**

## Network Defenders
- We encounter scans and probes on our network daily, both from internal and external sources.
- Everyone is targeting us.
- Identifying our assets is a critical task.

## How They Do It
- Network stack implementation varies significantly across different operating systems.
- These differences allow attackers to identify the type and version of the operating system.
- By matching packet headers to known OS implementations, attackers can pinpoint their targets. For example, if a target uses:
  - MSS of 1460
  - Single NOP
  - Window Size 0
  - Single NOP
  - Single NOP
  - Ending SACK
  - TTL of 128
  - It is likely a Windows 2003 Server.

## Implications
- If attackers identify your assets, they know their weaknesses and how to exploit them without triggering security sensors.
- This is a reality, but it doesn't have to be. We can remove the differences to reduce their advantage and make fingerprinting more difficult.

## My Answer: Packet Normalization
- **What is packet normalization?**
  - A concept not fully developed, with many incomplete expressions.
  - **Normalization** vs. **Scrubbing**:
    - **Scrubbing**: To remove or cancel.
    - **Normalization**: To conform to a standard or norm.
  - Both are used in varying degrees, but scrubbing is more common in firewalls and network devices.

### Scrubbing Techniques
- **Firewall Scrubbing**:
  - Randomize IP ID
  - Clear IP DF
  - Set IP TOS/DSCP and TTL
  - IP Fragment Reassembly
  - Primary concerns: Policy violations, abnormal packets, and flows.
  
- **Custom Patch for Netfilter** (Developed by Nicolas Bareil):
  - Randomize IP ID, TCP Timestamp, and TCP SEQ
  - Clear IP TOS/DSCP
  - IP TTL Tinkering
  - Fingerprint prevention
  
- **Cisco ACE and ASA**:
  - Randomize TCP SEQ
  - Clear TCP Reserved and URG
  - Clear TCP Options
  - Minimum IP TTL
  - Fragment Reassembly
  - Primary concerns: Policy violations, abnormal packets, and flows.

### Incoming Normalization
- Used by IPS and IDS devices:
  - IP Fragment Reassembly
  - IP TTL Evasion
  - Primary concerns: Detecting attacks and evasion.

### Outgoing Normalization
- **Fingerprinting Process**:
  - TCP, UDP, and ICMP probes are sent.
  - Results are compiled into a fingerprint.
  - Compare against a database to identify the operating system.
  
- **Best Practices**:
  - Disrupt existing patterns.
  - Clear unnecessary values.
  - Randomize IP ID, IP TTL, and TCP Options.
  
### Normalizing Specifics
- **IP Time-To-Live (TTL) / Hop Limit**:
  - Assume well-known TTL values.
  - Estimate hops traveled and recalibrate current TTL using a starting TTL of 255.
  
- **TCP Options**:
  - Assume only a few well-known options are needed.
  - Order is unimportant.
  - Read necessary options, discard the rest, and rewrite in proper order.
  - Use MSS, Window, SACK, and MD5 (if present).

## Putting It All Together with IDGuard
- **Platform Selection**:
  - Suitable hardware: Mikrotik Routerboards.
  - Operating system: OpenWrt.
  - Development environment: Debian v6.0 in a VM.
  - Build and configure the environment.
  - Deploy the kernel module.

### Results
- **Operating System Protection**:
  - Unprotected vs. Protected.
  - Examples: Windows 7, Windows Server 2003, Ubuntu Desktop 11.10, Red Hat Enterprise Linux 6, Allied Telesyn AlliedWare, Cisco IOS 12.X, D-Link embedded.
  
- **Other Effects**:
  - Nmap, xprobe2, Nessus, ping, traceroute.

### Deployment to Hardware
- Purchase hardware locally.
- Download OpenWrt kernel image.
- Setup DHCP & TFTP netboot environment.
- Connect and configure the routerboard.
- Flash the OpenWrt images.

### Challenges and Resolutions
- **Authorized Activity**:
  - Exclude authorized scanners and management platforms.
  
- **Banners and Direct Query**:
  - Use perimeter networks and exclude application-layer queries.
  
- **Connectivity and Fragmentation**:
  - Clear DF for upstream fragmentation.
  - Exclude fragments for downstream fragmentation.
  
- **TTL Attenuation and Special Uses**:
  - Place end-point switches to handle TTL issues.
  - Exclude ICMP Echo Requests.
  - Exclude routing protocols for Link-Local Routing Protocols.

### Concerns
- **Performance**:
  - Poorly coded applications and potential breakage.
  
### Benefits
- Shields from casual attackers, automated assaults, and oblique threats.
- Protects unmanaged, unpatched, and unhardened systems.
- Defeats canned exploits.

### What’s Next
- Expand to more platforms.
- Conduct production trials.
- Engage with vendors.

### Final Thoughts
- Accurate target identification is key to a successful attack.
- Let's change that with fingerprint prevention.
- Proof of Concept: SHA256 hash is e97b2c8325a0ba3459c9a3a1d67a6306.
- Updates available at [IDGuard SourceForge](http://idguard.sourceforge.net/).

### Links
- [Packet Mangling](http://www.wisegeek.com/what-is-packet-mangling.htm)
- [OpenBSD PF Scrub](http://www.openbsd.gr/faq/pf/scrub.html)
- [Linux Security Packet Mangling](http://www.linuxsecurity.com.br/info/fw/PacketManglingwithiptables.doc)
- [Nicolas Bareil's Scrub](http://chdir.org/~nico/scrub/)
- [Cisco ASA Configuration Guide](http://www.cisco.com/en/US/docs/security/asa/asa82/configuration/guide/conns_tc/pnorm.pdf)
- [Cisco ACE Configuration Guide](http://www.cisco.com/en/US/docs/interfaces_modules/services_modules/ace/v3.00_A2/configuration/security/guide/tcpipnrm.pdf)
- [SANS Reading Room](http://www.sans.org/reading_room/whitepapers/intrusion/packet-level-normalisation_1128)
- [Nmap OS Detection Methods](http://nmap.org/book/osdetect-methods.html)
- [RCP100 SourceForge](http://rcp100.sourceforge.net)
- [Mikrotik RouterBoard 450G Wiki](http://wiki.hwmn.org/w/Mikrotik_RouterBoard_450G)
- [OpenWrt Snapshots](http://downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-vmlinux.elf)
- [OpenWrt RootFS](http://downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-rootfs.tar.gz)
- [First Linux Kernel Module](https://sites.google.com/site/guenterbartsch/blog/myfirstlinuxkernelmodule)
- [NSLU2 OpenWrt Non-Standard Module Compiling](http://www.farlock.org/nslu2/openwrt-non-standard-module-compiling/)

### Special Thanks
- Aditiya Sood
- Kenny Nguyen and E-CQURITY
- Kathy Gillette
- Nick Pruitt