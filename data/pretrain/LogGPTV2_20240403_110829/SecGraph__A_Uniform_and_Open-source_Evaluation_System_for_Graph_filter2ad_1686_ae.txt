some speciﬁc scenarios, and no algorithm is the best in
all the cases. For instance, to de-anonymize Enron, KL
has the best performance when s = .6 while ADA has
the best performance when s = .95. Multiple reasons are
responsible for the results such as the similarity between
the anonymized and auxiliary graphs, the density of the
anonymized/auxiliary graph, the heuristics employed by
an algorithm, etc.
According to the results, NS is more suitable for the
scenarios where the anonymized and auxiliary graphs are
highly similar while unsuitable when they are not suf-
ﬁciently similar, e.g., it can successfully de-anonymize
95.27% Facebook users when s = .95 while only 0.18%
users when s = .6. The reason is because NS mainly em-
ploys local graph structural properties to adaptively con-
duct user DA, and thus is sensitive to users’ local struc-
tural characteristics. When s is small, most users are in-
distinguishable with respect to their local structures, e.g.,
degree, followed by poor DA performance.
Compared to NS, the other attacks, especially DV,
PFG, ADA, and JLSB, are more stable even with a small
s. For instance, when s = .6, DV, PFG, ADA, and
JLSB can successfully de-anonymize 15.63%, 10.87%,
15.68%, and 14.73% Facebook users, respectively. This
is because these attacks mainly employ global graph
characteristics (e.g., clossness centrality,
the distance
vector to seeds) to perform the DA, which are more re-
silient to noise.
USENIX Association  
24th USENIX Security Symposium  313
11
NS
De-anonymize Enron
PFG
YG ADA KL
De-anonymize Facebook
Table 6: Performance of DA attacks. s is the probability of generating the auxiliary and anonyized graphs from the
original graph. Each value, e.g., 0.1277, in the table indicates the ratio of successfully de-anonymized users.
DV
JLSB NS
s
JLSB
.60 .0037 .1277 .0739 .0310 .1305 .1596 .1191 .0018 .1563 .1087 .2832 .1568 .0599 .1473
.65 .0039 .1601 .0937 .0410 .1651 .1814 .1460 .0020 .1998 .1402 .3346 .2005 .0747 .1799
.70 .0054 .1969 .1397 .0725 .2013 .2026 .1723 .0031 .2437 .1523 .4124 .2444 .0841 .2094
.75 .0055 .2244 .1349 .1004 .2307 .2152 .1958 .8712 .3068 .2041 .4554 .3078 .1196 .2574
.80 .0061 .2841 .1837 .1014 .2896 .2519 .2474 .9056 .3802 .2586 .4970 .3805 .1508 .3042
.85 .3420 .3481 .2180 .1531 .3522 .3123 .2971 .9231 .4561 .3073 .5402 .4576 .1817 .3559
.90 .3660 .4004 .2736 .1885 .4043 .3389 .3443 .9414 .5659 .3977 .5737 .5670 .2552 .4289
.95 .3937 .5814 .4370 .2277 .5898 .5209 .5438 .9527 .7407 .5584 .6071 .7422 .3989 .5542
YG ADA KL
PFG
DV
For the seed-free attacks, PFG and JLSB, they can
achieve comparable performance as seed-based attacks
in most scenarios even without any seed information.
For instance, when s = .95, PFG and JLSB can de-
anonymize 43.7% and 54.38% Enron users, respectively,
which are better than several seed-based algorithms and
further demonstrate the power of structure-based attacks.
The reason for the effectiveness of seed-free attacks is
that in most cases, the combination of a user’s local and
global structural characteristics, e.g., degree, neighbor-
hood degree distribution, closeness/betweenness central-
ity, is sufﬁcient to distinguish him/her from other users.
5.3.4 Robustness of Modern SDA Attacks
The robustness of modern DA attacks with respect to
graph noise (e.g., adding fake edges and deleting true
edges) has been extensively evaluated in existing works
[2,3,5,25]. However, to the best our knowledge, no exist-
ing work has evaluated the robustness of any seed-based
de-anonymizaton attack to incorrect seed mappings. Em-
ploying Enron and Facebook, we address this open is-
sue by conducting such an evaluation and the results are
shown in Table 7. We analyze the results in Table 7 as
follows.
Generally, all the DA algorithms are robust with re-
spect to incorrect seed mappings in most scenarios.
This is because during the DA process, most algorithms
also employ other seed-independent structural proper-
ties, e.g., degree, closeness/betweenness centrality, in ad-
dition to relying on seed-dependent structural properties.
Even for the pure seed-based DA attacks, e.g., YG and
KL, they perform DA in the decreasing order of user de-
grees. Therefore, the negative impacts of incorrect seed
mappings can be partially offset, i.e., even with some in-
correct seed mappings, many users are still distinguish-
able with respect to their structural characteristics.
For all algorithms, when incorrect seed mappings in-
crease, fewer users can be correctly de-anonymized. The
reason is evident: more incorrect seed mappings imply
more incorrect seed-dependent structural information is
provided to each algorithm, followed by the degradation
of the DA performance of each algorithm.
When de-anonymizing Enron, the performance of NS
has a signiﬁcant drop when the percentage of incorrect
seed mappings is increased from 8% to 10%. This is be-
cause of the seed transitional phenomena as observed in
[2], i.e., when the correct effective seed-dependent struc-
tural information is below/above some crucial threshold,
NS’s performance has a signiﬁcant transition.
DV is much more stable than other algorithms. This
is because it is a pure global structure-based attack and
thus incorrect seed mappings have minimum impact on
it.
5.3.5 Anonymization vs DA
Now, we evaluate the effectiveness of state-of-the-art
anonymization techniques against modern DA attacks
employing Enron and Facebook. The methodology is
that we ﬁrst employ different anonymization techniques
to anonymize Enron/Facebook. Then, we sample an
auxiliary graph from Enron/Facebook with probabil-
ity s. Finally, we employ different DA algorithms to
de-anonymize the anonymized data using the auxiliary
graph. We show the results in Table 8 and analyze the
results as follows.
All
the state-of-the-art graph anonymization algo-
rithms are vulnerable to some or all of the modern SDA
attacks, which conﬁrmed our analytical results in Ta-
ble 4. For instance, when s = .85, NS can still suc-
cessfully de-anonymize more than 80% Facebook users
anonymized by Switch, k-DA, Cluster, or DP, and DV
can successfully de-anonymize 15.3% Facebook users
anonymized by RW (t = 2). Similarly, when s = .85,
NS can successfully de-anonymize more than 35% En-
ron users anonymized by k-DA (k = 5), Cluster (k =
5,50), YG can successfully de-anonymize 13.73% and
15.49% Enron users anonymized by Switch (k = .05m)
and DP (ε = 300) respectively, and DV can successfully
de-anonymize 19.23%/24.12% Enron users anonymized
by RW with t = 2/11. Based on the results, we con-
clude that modern SDA attacks are very powerful. As
314  24th USENIX Security Symposium 
USENIX Association
12
Table 7: DA robustness with respect to seed errors. Each algorithm is provided with 50 seed mappings, and Λe/Λ
indicates the percentages of incorrect seed mappings. Each value in the table indicates the ratio of successfully de-
anonymized users.
De-anonymize Enron
De-anonymize Facebook
Λe
NS
Λ
4% .341
6% .341
8% .338
10% .007
12% .007
14% .006
16% .006
18% .006
20% .006
22% .005
24% .005
26% .005
28% .004
30% .004
32% .004
34% .004
36% .004
38% .004
40% .004
42% .003
44% .003
46% .003
48% .003
50% .002
DV YG ADA KL
.302
.342
.303
.342
.348
.310
.310
.348
.311
.348
.307
.348
.303
.348
.348
.308
.306
.348
.303
.348
.304
.348
.303
.348
.348
.300
.307
.348
.305
.348
.304
.348
.300
.348
.347
.301
.302
.347
.302
.347
.303
.347
.299
.347
.347
.297
.298
.347
.148
.133
.135
.147
.142
.112
.129
.099
.126
.125
.116
.118
.112
.120
.106
.081
.084
.096
.065
.071
.106
.050
.059
.063
.336
.329
.329
.323
.313
.306
.297
.293
.285
.280
.268
.255
.253
.247
.235
.230
.216
.199
.186
.182
.169
.160
.153
.146
NS
.922
.917
.918
.918
.915
.916
.916
.913
.913
.912
.910
.889
.886
.884
.888
.887
.889
.888
.886
.882
.881
.881
.881
.874
DV YG ADA KL
.183
.456
.183
.456
.456
.184
.182
.456
.185
.456
.186
.456
.184
.456
.456
.183
.179
.456
.182
.456
.180
.456
.179
.456
.456
.182
.180
.456
.178
.456
.178
.456
.182
.456
.456
.178
.179
.456
.181
.456
.180
.456
.177
.456
.456
.180
.176
.456
.442
.440
.428
.420
.414
.403
.394
.380
.356
.347
.332
.319
.309
.283
.270
.259
.245
.230
.214
.195
.185
.173
.161
.148
.537
.528
.542
.536
.529
.526
.525
.533
.518
.531
.521
.528
.520
.522
.521
.521