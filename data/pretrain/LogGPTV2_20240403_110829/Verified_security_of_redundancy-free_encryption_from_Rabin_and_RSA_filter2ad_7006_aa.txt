title:Verified security of redundancy-free encryption from Rabin and RSA
author:Gilles Barthe and
David Pointcheval and
Santiago Zanella B&apos;eguelin
Veriﬁed Security of Redundancy-Free Encryption
from Rabin and RSA
Gilles Barthe
IMDEA Software Institute
Campus de Montegancedo
28660 Madrid, Spain
PI:EMAIL
David Pointcheval
École Normale Supérieure
45 Rue d’Ulm
75230 Paris Cedex 05, France
PI:EMAIL
Santiago Zanella Béguelin
Microsoft Research
7 JJ Thomson Avenue
CB3 0FB Cambridge, UK
PI:EMAIL
ABSTRACT
Veriﬁed security provides a ﬁrm foundation for crypto-
graphic proofs by means of rigorous programming language
techniques and veriﬁcation methods. EasyCrypt is a frame-
work that realizes the veriﬁed security paradigm and sup-
ports the machine-checked construction and veriﬁcation of
cryptographic proofs using state-of-the-art SMT solvers, au-
tomated theorem provers and interactive proof assistants.
Previous experiments have shown that EasyCrypt is eﬀective
for a posteriori validation of cryptographic systems. In this
paper, we report on the ﬁrst application of veriﬁed security
to a novel cryptographic construction, with strong security
properties and interesting practical features. Speciﬁcally,
we use EasyCrypt to prove in the Random Oracle Model
the IND-CCA security of a redundancy-free public-key en-
cryption scheme based on trapdoor one-way permutations.
Somewhat surprisingly, we show that even with a zero-length
redundancy, Boneh’s SAEP scheme (an OAEP-like construc-
tion with a single-round Feistel network rather than two)
converts a trapdoor one-way permutation into an IND-CCA-
secure scheme, provided the permutation satisﬁes two addi-
tional properties. We then prove that the Rabin function
and RSA with short exponent enjoy these properties, and
thus can be used to instantiate the construction we propose
to obtain eﬃcient encryption schemes. The reduction that
justiﬁes the security of our construction is tight enough to
achieve practical security with reasonable key sizes.
Categories and Subject Descriptors
E.3 [Data encryption]: Public key cryptosystems; F.3.1
[Logics and Meanings of Programs]: Specifying and
Verifying and Reasoning about Programs
General Terms
Security, Veriﬁcation, Languages
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$15.00.
Keywords
Provable security, machine-checked proofs, public-key en-
cryption
1.
INTRODUCTION
More than three decades after its inception by Rivest,
Shamir and Adleman, the RSA algorithm [40] has become
a recommendation of several
international standards for
public-key cryptography and is widely used in practical cryp-
tosystems.
In order to achieve the level of security man-
dated by modern cryptography, RSA is used for instantiat-
ing cryptographic systems based on trapdoor one-way func-
tions, rather than as a standalone primitive. The prevailing
deﬁnition of security for public-key encryption schemes is
the notion of ciphertext indistinguishability against chosen-
ciphertext attacks (IND-CCA) [39], which requires that no ef-
ﬁcient adversary with access to a decryption oracle be able
to distinguish between the ciphertexts resulting from en-
crypting two messages of its choice. Since IND-CCA security
cannot be achieved by deterministic encryption algorithms
like RSA, encryption systems adopt the encode-then-encrypt
paradigm, in which a message is pre-processed and random-
ized before encryption. For instance, the PKCS standard
recommends that the RSA algorithm be used together with
the Optimal Asymmetric Encryption Padding [11] scheme
(OAEP), a two-round Feistel construction due to Bellare and
Rogaway. In OAEP, redundancy is added during the encod-
ing phase with the goal of achieving plaintext-awareness,
that is, of making infeasible for an adversary to obtain a
valid ciphertext other than by encrypting a known plain-
text. Although the formalization of plaintext-awareness has
unveiled subtleties (see Section 6 for a brief discussion), it
is an appealing notion satisﬁed by many prominent encryp-
tion schemes. Furthermore, plaintext-awareness is achieved
by cryptographic transformations [26, 27, 36] that convert
encryption schemes that are just semantically secure under
chosen-plaintext attacks [29] into IND-CCA-secure schemes.
As a consequence, it was a widespread belief that plaintext-
awareness was necessary to achieve IND-CCA security.
In
2003, Phan and Pointcheval [37] proved this intuition wrong,
by proposing the ﬁrst IND-CCA-secure encryption schemes
without redundancy, both in the ideal-cipher model and the
random oracle model. They showed that a trapdoor one-way
permutation combined with a full-domain random permuta-
tion, in a similar way to the FDH signature scheme [12],
suﬃce to build a redundancy-free IND-CCA-secure scheme.
In addition, Phan and Pointcheval showed that a 3-round
version of OAEP together with a partial-domain one-way
724permutation would not require redundancy, as in the clas-
sical OAEP construction [11, 28]. This result was later im-
proved when it was shown that (full-domain) one-wayness
on its own is actually enough to eliminate redundancy in
a 3-round version of OAEP [38]. Abe et al. [2] construct a
redundancy-free scheme based on a 4-round Feistel network
that achieves optimal ciphertext overhead (but that imposes
a minimal message size). This line of work was further devel-
oped in a series of papers, including [20, 33], in the context
of identity-based encryption and DL-based cryptosystems.
In this paper, we revisit the problem of designing
redundancy-free IND-CCA-secure schemes based on trap-
door one-way functions. Our starting point is the SAEP
and SAEP+ padding schemes, put forward by Boneh [19]
in 2001. SAEP and SAEP+ are basically one-round OAEP-
like paddings, that when combined with the Rabin func-
tion or RSA with exponent 3, yield encryption schemes with
eﬃcient security reductions. We generalize Boneh’s con-
struction to an arbitrary trapdoor one-way function and we
show that SAEP padding without redundancy, which we call
ZAEP (Zero-Redundancy Asymmetric Encryption Padding),
achieves IND-CCA security in the Random Oracle Model for
a class of trapdoor one-way functions that satisfy two novel
properties: Common Input Extractability (CIE), and Sec-
ond Input Extractability (SIE). Informally, CIE allows us
to eﬃciently extract the plaintexts and randomness from
two diﬀerent ciphertexts that share the same randomness,
whereas SIE allows us to eﬃciently extract the plaintext
from a ciphertext and its randomness—in both cases, with-
out knowing the trapdoor to the underlying one-way func-
tion. Using Coppersmith algorithm [21], we then show that
the original Rabin function and RSA with short exponent
satisfy these two properties. We thus obtain two eﬃcient
encryption algorithms, that are well-suited to encapsulate
AES keys at a very low cost, with classical RSA moduli,
either under the integer factoring assumption or the RSA
assumption with exponent 3.
Our result is remarkable in two respects. First, ZAEP
is
surprisingly simple in comparison to the previous
redundancy-free 3-round variant of OAEP that was shown
to achieve IND-CCA security. Second, it constitutes the ﬁrst
application of veriﬁed security to a novel cryptographic con-
struction. Speciﬁcally, we formally verify the security re-
duction (and the exact probability bound) of ZAEP using
the EasyCrypt framework [4], which aims to make machine-
checkable security proofs accessible to the working cryp-
tographer by leveraging state-of-the-art methods and tools
for program veriﬁcation. Quite pleasingly, the functional-
ities and expressive power of EasyCrypt proved adequate
for converting an incomplete and intuitive argument into
a machine-checked proof. In less than a week, we were able
to ﬂesh out the details of the proof, including the new se-
curity assumptions, concrete security bound, and sequence
of games, and to build a machine-checked proof. As further
developed in Section 7, our work contributes to evidencing
that, as anticipated by Halevi [30], computer-aided security
proofs may become commonplace in the near future.
Organization of the paper. Section 2 describes the ZAEP
redundancy-free encryption scheme; Section 3 presents some
background on veriﬁed security and the EasyCrypt frame-
work; Section 4 overviews the machine-checked reduction of
the security of ZAEP to the one-wayness of the underlying
trapdoor permutation, while Section 5 discusses possible in-
stantiations. We conclude with a discussion on related work
in Section 6, and an analysis of the signiﬁcance of our re-
sults in Section 7. The EasyCrypt input ﬁle corresponding
to the proof presented in Section 4 appears in an extended
version [7]; all the infrastructure needed to machine-check
this proof is available on request.
2. REDUNDANCY-FREE ENCRYPTION
In 1994, Bellare and Rogaway [11] proposed the padding
scheme OAEP (see Fig. 1(a)), that in combination with a
trapdoor permutation (e.g. RSA) yields an eﬃcient encryp-
tion scheme. When encrypting using OAEP, a random value
r is ﬁrst expanded by a hash function G and then xor-ed
with the redundancy-padded input message. The resulting
value s is then hashed under an independent function H and
the result xor-ed with r to obtain t. The ciphertext is com-
puted by applying the permutation to the concatenation of
s and t. OAEP was proved IND-CCA-secure by Fujisaki et
al. [28] under the assumption that the underlying trapdoor
permutation is partial-domain one-way. This is in general a
stronger assumption than just one-wayness, but fortunately
both assumptions are equivalent in particular for RSA. The
reduction from the security of OAEP to the RSA problem
is not tight for two reasons: (1) the generic reduction from
OAEP security to the partial-domain one-wayness of the un-
derlying permutation is itself not tight, and (2) the reduction
from RSA partial-domain one-wayness to the RSA problem
introduces an extra security gap. In order to obtain a direct
reduction to the RSA problem (or the one-wayness of the
underlying permutation), one needs to add a third round
to the Feistel network used in OAEP [38]. Although this
latter reduction is still not tight, the redundancy resulting
from padding the input message can be removed without
breaking the proof.
Boneh [19] showed that by exploiting Coppersmith algo-
rithm [21], it is possible to shave oﬀ one round of OAEP
without compromising security. Encryption in the resulting
scheme, SAEP (see Fig. 1(c)), works by choosing a random
value r, hashing it under a function G and xor-ing it with the
message padded with a zero-bitstring of length k0. The re-
sulting value s is then concatenated with the random value
r and fed to the RSA function. However, an eﬃcient re-
duction is possible only if a small RSA public exponent is
used, or if the Rabin function is used instead. The security
reduction of SAEP is quite tight, but the redundancy intro-
duced when padding the input message is essential and can-
not be removed—as a by-product, SAEP achieves plaintext-
awareness. We revisit SAEP with zero-length redundancy
(i.e., letting k0 = 0) and show that a reduction to the one-
wayness of the underlying trapdoor permutation is still pos-
sible under additional (but achievable) assumptions.
2.1 A Novel Redundancy-Free Scheme
We recall the SAEP construction [19] with zero-length re-
dundancy (see Fig. 1(d)). We use k to denote the length
of the random value used during encryption and ℓ to de-
note the length of input messages. Let (KGf , f, f −1) be a
family of trapdoor one-way permutations on {0, 1}n, where
n = k + ℓ. For any pair of keys (pk, sk) output by the key
generation algorithm KGf , fpk(·) and f −1
sk (·) are permuta-
tions on {0, 1}n and inverses of each other. We model fpk
and f −1
sk as two-input functions from {0, 1}k × {0, 1}ℓ onto
725m k 0k0
⊕
s
G
H
r
⊕
t
m
⊕
s
⊕
u
F
G
H
r
⊕
t
r
r
m k 0k0
G
⊕
s
r
r
G
m
⊕
s
(a) OAEP
(b) 3-round OAEP
(c) SAEP
(d) ZAEP
Figure 1: Asymmetric Encryption Paddings
{0, 1}n. Let in addition G : {0, 1}k → {0, 1}ℓ be a hash
function, which we model as a random oracle in the reduc-
tion [10]. The ZAEP encryption scheme is composed of the
triple of algorithms (KG, E , D) deﬁned as follows:
Key Generation KG is the same as the key generation al-
gorithm KGf of the underlying trapdoor permutation;
Encryption Given a public key pk and an input message
m ∈ {0, 1}ℓ, the encryption algorithm Epk(m) chooses
uniformly at random a value r ∈ {0, 1}k and outputs
the ciphertext c = fpk(r, G(r) ⊕ m);
Decryption Given a secret key sk and a ciphertext c, the
decryption algorithm Dsk(c) computes (r, s) = f −1
sk (c)
and outputs m = s ⊕ G(r). No additional check is
required because all ciphertexts are valid.
2.2 Adaptive Security of ZAEP
We recall the usual deﬁnitions of trapdoor one-way
function and IND-CCA security for public-key encryption
schemes.
Deﬁnition 1 (Trapdoor one-way function) Consider
trapdoor functions (KG, f, f −1) on {0, 1}n.
a family of
The success probability SuccOW
(I) of an algorithm I in
inverting fpk on a freshly generated public-key pk and a
uniformly chosen input is deﬁned as follows:
f
Pr(cid:20) (pk, sk) ← KG(1η);
x $← {0, 1}n; x′ ← A(fpk(x))
: fpk(x) = fpk(x′)(cid:21)
In an asymptotic setting, a family of trapdoor functions is
one-way if this probability is negligible on the security pa-
rameter η for any eﬃcient (probabilistic polynomial-time)
algorithm I.
Deﬁnition 2 (IND-CCA security) The advantage of an
adversary A = (A1, A2) against the IND-CCA security
of an asymmetric encryption scheme Π = (KG, E , D),