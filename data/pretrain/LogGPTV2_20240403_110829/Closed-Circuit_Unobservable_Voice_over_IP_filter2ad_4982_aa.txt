title:Closed-Circuit Unobservable Voice over IP
author:Carlos Aguilar Melchor and
Yves Deswarte and
Julien Iguchi-Cartigny
Closed-Circuit Unobservable Voice Over IP.
Carlos Aguilar Melchor
XLIM-DMI
Université de Limoges
123, av. Albert Thomas
87060 Limoges Cedex
FRANCE
Yves Deswarte
LAAS-CNRS
Université de Toulouse
7, avenue du Colonel Roche
31077 Toulouse Cedex 4
FRANCE
Julien Iguchi-Cartigny
XLIM-DMI
Université de Limoges
123, av. Albert Thomas
87060 Limoges Cedex
FRANCE
Abstract
Among all the security issues in Voice over IP (VoIP)
communications, one of the most difﬁcult to achieve is traf-
ﬁc analysis resistance. Indeed, classical approaches pro-
vide a reasonable degree of security but induce large round-
trip times that are incompatible with VoIP.
In this paper, we describe some of the privacy and secu-
rity issues derived from trafﬁc analysis in VoIP. We also give
an overview of how to provide low-latency VoIP communi-
cation with strong resistance to trafﬁc analysis. Finally, we
present a server which can provide such resistance to hun-
dreds of users even if the server is compromised.
Unobservability, Anonymity, Voice over IP, Low-Latency
Index Terms
1 Introduction
In an IP network, a communication is composed of pack-
ets. Each packet has a set of headers and a content. When
conﬁdentiality is a concern, in particular with respect to
eavesdropping, it is usually assumed that the eavesdropper
is interested in the contents of the packets. However, some-
times, an eavesdropper will be just interested in the packet
headers (to learn who are the sender or the recipient for ex-
ample) or in their presence (to detect an ongoing communi-
cation or changes in the amount of trafﬁc on the network).
The existence of a communication, when it does begin
or end, the users taking part in it, or the amount of in-
formation exchanged, is part of the meta-data deﬁning a
communication. Hiding the contents of a communication
is easy to achieve through the encryption of the content of
each packet. Hiding the meta-data, on the other side, can
be very difﬁcult. End-to-end encryption cannot be used on
the packet headers as they are needed by the intermediate
nodes of the network for routing purposes. Moreover, in
most of the networks over which IP is implemented an at-
tacker eavesdropping on a communication link will be able
to observe the existence of all the transiting packets. The
systems that try to hide the meta-data associated to a com-
munication are called anonymous communication systems
and the act of trying to discover this meta-data is called traf-
ﬁc analysis.
Strong trafﬁc analysis resistance is hard to obtain. It is
commonly accepted that the only practical way to achieve it
is by the usage of relays that hide the meta-data of the com-
munications.1 There exists an extensive literature on how
to use multiple relays sequentially to obtain trafﬁc analysis
resistance. Some of the proposals are based on an usual
server-client model [15, 10], and others are peer-to-peer
[8, 17], but only two ﬁnalized implementations are currently
widespread and operational: JAP [7] the Java Anon Proxy,
and Tor [6], the second generation onion routing network.
In order to respect the latency constraints of VoIP com-
munication it is not possible (at least over the Internet) to
use multiple relays sequentially, and therefore it is prefer-
able that all the users communicate with only one relay. In
this paper, this relay is called the communication server. We
consider that packets can be routed through this server with
a reasonable round-trip time for VoIP communication (in-
cluding at most 100 ms of processing time in the server).
We have not tested or implemented the servers we propose
in this paper. We aim to present a theoretical overview of
what performance we can achieve with different techniques.
We have also decided to focus on the communication
stream. We do not considered signaling issues. How to
deﬁne a practical signaling protocol that avoids trafﬁc anal-
ysis is well beyond the scope of this paper, as well as how
1In 1985 a relay-independent approach was proposed [14, 16]. How-
ever the anonymous communication systems derived from this technique
with practical implementations have been based on relay usage [12].
SIP or another standard signaling protocol can be modi-
ﬁed or encapsulated to avoid leaking information to an at-
tacker. Obtaining a low-latency VoIP anonymous commu-
nication system is expensive and complex and will proba-
bly require dedicated protocols and servers. With current
latency, bandwidth and processing power it is unrealistic to
consider that an anonymous VoIP communication service
will provide strong resistance to attackers and be compatible
with standard VoIP protocols, allow conferences, codec ne-
gotiation, etc. The service provided will much more likely
be a closed-circuit system with medium size sets of users,
strong limitations on the number of simultaneous commu-
nications and based on protocols dedicated to ensure that
no trafﬁc analysis can be done. These servers are intended
to be used on highly secured environments like embassies,
defense contractors, intelligence agencies, military tactical
communications, high-tech research facilities, etc.
How to provide very low-latency unobservability has
been scarcely studied in the literature. In [13], a large sur-
vey is done of the different approaches to obtain such a ser-
vice based on a technique originally presented in [5] called
superposed sending. This approach will be discussed in sec-
tion 5. In [3] we proposed a thorough study of how to com-
bine different primitives to obtain low-latency unobservable
communication.
The contribution of this paper is twofold. First, we
present how trafﬁc analysis can result in privacy and secu-
rity issues in VoIP. Second, we adapt the techniques of [3]
and propose a set of servers providing strong trafﬁc analysis
resistance for VoIP communications. In particular, we pro-
pose the ﬁrst server able to provide this service to hundreds
of users over the Internet, even if the attackers monitor the
whole network or control the VoIP server. The only asser-
tions done to limit the attackers’ strength is that they are
unable to break the cryptographic primitives used, and that
they do not control the computers of the users they want to
obtain information from.
This paper is divided in two parts. The ﬁrst part (from
section 2 to section 5) deﬁnes the issues of trafﬁc analysis
in the VoIP context, and presents the systems that can be
implemented based on classic techniques. The second part
(section 6) presents our proposal. We have three main rea-
sons that justify the choice of having a very large introduc-
tory part, and then a much smaller section presenting our
system. First, obtaining a low-latency anonymous commu-
nication service is expensive, and therefore it is important
to justify why, especially in sensitive contexts, the cost of
such systems is justiﬁed. Second, one may be tempted to
use lesser forms of trafﬁc analysis resistance as it can be
done with higher latency applications such as web brows-
ing or electronic mail. We therefore introduce the differ-
ent levels of trafﬁc analysis resistance and show why only
the stronger properties can ensure anonymity in interactive
low-latency communication systems. Third, obtaining such
a system with a single server is a pretty unexplored research
domain. It is therefore important to present a thorough anal-
ysis that provides comparative performance overviews and
justiﬁes the complexity of the ﬁnal solution.
Section 2 is devoted to the basic concepts related to traf-
ﬁc analysis resistance. In Section 3 we present the privacy
and security issues related to trafﬁc analysis. The usage of a
trusted third party will be studied in Section 4, and the per-
formance achievable with classical approaches is presented
in Section 5. We present our server in Section 6 and con-
clude in Section 7.
2 Basic notions
Most research in anonymous communication deals with
single messages and the possibility to link them to users.
This approach comes from the fact that the ﬁrst papers on
this domain were oriented towards mailing systems. Indeed,
in these systems a communication is usually composed of a
single unidirectional message, with possibly a reply (with a
very large latency between the two messages).
In a VoIP context, communications are bidirectional and
usually formed of large sets of packets with very low latency
between them. We will therefore deﬁne the trafﬁc analysis
resistance properties directly over communications and not
over messages as it is traditionally done for high latency
anonymous communication systems.
2.1 Deﬁnitions
Informally, let S by a set of communicating users and
C a communication in which at least one user of S takes
part. If for any communication C, an attacker A is unable
to link it to a speciﬁc user in S, we will say that this set is
an anonymity set (with respect to A). A stronger property
of trafﬁc analysis resistance is unobservability. We will say
that a set of users is an unobservability set (with respect to
an attacker A) if A can see the communications associated
to this set but is unable to know for any user of the set if he
is communicating or not. If moreover A is unable to know
if there is any internal communication in the set or not we
will say that it is a completely unobservable set.
It
is important
to remark the differences between
anonymity and unobservability sets. In order to illustrate
them, let us present an example. Let {A, B, C, D, E} be
a set of ﬁve users. A, B are communicating together and
C is communicating with an external user F . D and E are
not communicating. The anonymity set cannot be larger
than {A, B, C} as it just concerns communicating users. If
the communication system used provides communication
unobservability the unobservability set can be as large as
{A, B, C, D, E} as the attacker will be unable to know if a
given user is communicating or not. If {A, B, C, D, E} is
a completely unobservable set, the attacker may be able to
see that a user of this set is communicating with F , but the
communication between A and B will remain unnoticed.
The anonymity sets provide a fair amount of trafﬁc anal-
ysis resistance as long as global observers (attackers able
to observe simultaneously the whole set of users) are not
considered. Indeed, keeping the example proposed in the
previous paragraph, suppose that an attacker can observe si-
multaneously A, B, C, D and E. The attacker can see that
three users {A, B, C} are communicating and two {D, E}
are not. When the communication between A and B is over
he will observe that the set of communicating users will be
reduced to {D} and therefore he will conclude that there has
been an internal communication between A and B. Simi-
larly if D and E begin a communication the attacker will
observe that the set of communicating users has suddendly
increased from {A, B, C} to {A, B, C, D, E} and will con-
clude that D and E have probably started a communication.
More generally, if a global observer is able to know whether
the users communicate or not, he can identify when they
start and stop communicating and therefore correlate these
data to learn who is communicating with whom.
In the case of unidirectional communications, anonymity
and unobservability can be related just to the act of send-
ing or to the act of receiving. In VoIP, as communications
are bidirectional, detecting that a user is receiving or send-
ing messages is equivalent as either he is doing both, or
none. Even if this distinction between sending and receiv-
ing properties is unnecessary in VoIP, the techniques used
to obtain each of them are different: some primitives pro-
vide sender unobservability, while others provide recipient
unobservability. Of course, both sender and recipient un-
observability are necessary to obtain communication unob-
servability in VoIP systems.
As we just deal with systems that resist to strong attack-
ers (and specially to global observers) in this paper, we will
not consider the approaches providing just anonymity sets.
In the following section we present the general idea behind
unobservability primitives.
2.2 Sender and recipient unobservability
We suppose that attackers detect any message in a link
they eavesdrop on. The only way to obtain sender (resp. re-
cipient) unobservability is therefore to send (resp. receive)
regularly dummy trafﬁc among which there may be infor-
mation messages. If it is not possible for the attacker to dis-
tinguish between information messages and dummy trafﬁc
he will not be able to say whether the user is really commu-
nicating or not.
A user can easily decide to send dummy trafﬁc or in-
formation messages without anybody knowing (except pos-
sibly the receiver). On the other hand, obtaining recipient
unobservability has proven to be an more complex issue.
The different alternatives that have been proposed are based
on a trusted third party (see Section 4) or introduce either
large communication costs [16] or computational costs [2].
2.3 Performance bounds
In order to provide correct VoIP communications, an
anonymous system must respect some minimal perfor-
mance bounds. First, the round trip latency must be lower
than 250ms (as recommended by the International Telecom-
munications Union). Second, the throughput must be at
least of 8 Kbits/s, and it would be preferable if this through-
put can be raised up to 32 Kbits/s (G729-EV codecs).
To simplify the examples given, we will suppose that the
throughput used for a VoIP communication is 10 Kbits/s in
this paper.
We will also suppose that the users do not want to use
neither more than ten percent of their available bandwidth
nor over 1 Mbit/s for the communication system. The avail-
able bandwidths will be set in a local network to 100 Mbits/s
and in the case of an Internet connection we will suppose
that the users have a 1 Mbit/s upload 128 Kbits/s download
xDSL line. The server is supposed to have a 100 Mbits/s
connection dedicated to the VoIP trafﬁc whether the users
are in a local area network or are connected through the In-
ternet.
3 Privacy and security issues
As indicated in the previous section, three sorts of trafﬁc
analysis resistance can be distinguished:
• prevent an attacker to know who is communicat-
the communicating users form an
ing with whom: