1.3.3 MC 文件管理
默认的两个目录面板里包含了文件列表。另一个有用的模式是设置右边窗口为”信息”来读取文件访问权限信息。接下
来是一些必要的快捷键。守护进程 gpm(8)运行的时候，你也可以在字符命令行里用鼠标来操作。(在MC里进行复制
和粘贴操作的时候一定要按住shift键。)
快捷键 键绑定功能
F1 帮助菜单
F3 内部文件查看器
F4 内部编辑器
F9 激活下拉菜单
F10 退出MidnightCommander
Tab 在两个窗口间移动
Insert或Ctrl-T 用于多文件操作的标记文件，如副本
Del 删除文件(注意---设置MC为安全删除模式)
光标键 自我解释
Table1.11: MC快捷键绑定
1.3.4 MC 命令行技巧
• cd命令在选中的屏幕中改变目录。
• Ctrl-EnterorAlt-Enter拷贝文件名到命令行。使用cp(1)和mv(1)两个命令来进行处理。
• Alt-Tab显示文件名自动补全提示。
• 通过添加MC命令参数可以指定开始目录；例如，”mc /etc /root”。
Debian参考手册 17/233
• Esc+n-key→Fn(即Esc+1→F1等；Esc+0→F10)
• 先按Esc键和同时按Alt是一样；例如,输入Esc+c和同时Alt-C是一样的。Esc被称为meta键，有时候也称
之为”M-”。
1.3.5 MC 内部编辑器
这个内置编辑器有一个有意思的粘贴方案。摁 F3 开始选择起始点，再摁 F3 选择终点并高亮选择区。此刻你可以
移动你的光标，使用F6将选区移动到当前光标下，F5则将选区复制到当前光标下。 F2 保存文件。 F10 退出。多
数光标键以直观的方式工作。
MC编辑器可以直接以下面的命令方式启动。
$ mc -e filename_to_edit
$ mcedit filename_to_edit
这不是一个多窗口编辑器，但是能通过复用终端来达到同样的效果。在两个窗口间复制，需要用到Alt-Fn 来切换虚拟
终端并使用”File→Insertfile”或者”File→Copytofile”来移动文本。
内部编辑器可以被外部编辑器替代。
同样，许多程序使用环境变量 $EDITOR或 $VISUAL来决定编辑器的使用。如果你准备使用 vim(1)或者 nano(1)
来开始，你或许需要将下面的代码加入”~/.bashrc”来对 mcedit进行设置。
export EDITOR=mcedit
export VISUAL=mcedit
如果可能的话我推荐用”vim”。
如果你使用 vim(1)并不顺手，你可以在大部分系统中继续使用 mcedit(1)来进行工作。
1.3.6 MC 内部查看器
MC是一个非常智能的查看器。这是一个在文档中搜索文本的好工具。我经常使用它在/usr/share/doc目录中查找
文件。这是浏览大量Linux信息的最快方式。这个查看器可以通过下列命令中的任何一个来直接启动。
$ mc -v path/to/filename_to_view
$ mcview path/to/filename_to_view
1.3.7 自动启动 MC
在文件中输入回车，用适当的程序来处理文件的内容(查看第 9.4.11 节)。这是MC一个非常方便的用法。
文件类型 对回车键的响应
可执行文件 执行命令
帮助文档 管道内容查看器软件
html文件 管道内容网页浏览器
”*.tar.gz”和”*.deb”文件 浏览其内容就像查看子目录一样
Table1.12: MC中对回车键的响应
为让这些查看器和虚拟文件特征生效，可查看的文件不能够被设置为可执行。使用chmod(1)或通过MC文件菜单改
变他们的状态。
Debian参考手册 18/233
1.3.8 MC 中的虚拟文件系统
MC能够跨因特网访问文件。在菜单按F9,”Enter”和”h”来激活Shell文件系统。按”sh://[user@]machine[:options]/[remote-dir]”
的形式输入URL,就会看起来像本地使用ssh一样来检索远程目录。
1.4 类 Unix 工作环境基础
虽然MC差不多可以让你做任何事情，但学会从shell提示下使用命令行工具也是非常重要的，可以让你变得熟悉类
Unix工作环境。
1.4.1 登录 shell
因登录shell可以被一些系统初始化程序使用，请谨慎的把登录shell保持为bash(1)，并避免把它转换为chsh(1)。
如果你想使用不同的shell交互提示符，从GUI（图形用户界面）的终端模拟器来设置；或者从~/.bashrc启动，比
如说，在里面放置”exec /usr/bin/zsh -i -l”或”exec /usr/bin/fish -i -l”。
软件包 流行度 大小 POSIXshell 说明
bash V:836,I:999 7175 是 Bash: GNUBourneAgainSHell(事实上的标准)
bash-completion
V:33,I:932 1454 N/A bashshell编程补全
dash V:886,I:996 191 是 DebianAlmquistShell,擅长shell脚本
zsh V:40,I:73 2462 是 Zshell:有许多增强的标准shell
tcsh V:6,I:21 1355 No TENEXCShell: 一个Berkeleycsh的增强版本
mksh V:4,I:12 1566 是 Kornshell的一个版本
csh V:1,I:6 339 No OpenBSDCShell,Berkeleycsh的一个版本
有内置命令的Stand-aloneshell(并不意味着标准
sash V:0,I:5 1157 是
的”/usr/bin/sh”)
ksh V:1,I:11 61 是 Kornshell的真正的AT&T版本
rc V:0,I:1 178 No AT&TPlan9rcshell的一个实现
Policy-compliantOrdinarySHell策略兼容的普通
posh V:0,I:0 190 是
shell(pdksh派生)
Table1.13: shell程序列表
提示
虽然类POSIX共享基本语法，但他们在shell变量和全局扩展等基本事情上，行为可以不同。细节请查阅他们的文
档。
在本教程中，交互式的shell总是指bash.
1.4.2 定制 bash
你可以通过“~/.bashrc”来定制 bash(1)的行为。
尝试下列例子。
# enable bash-completion
if ! shopt -oq posix; then
if [ -f /usr/share/bash-completion/bash_completion ]; then
. /usr/share/bash-completion/bash_completion
Debian参考手册 19/233
elif [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi
fi
# CD upon exiting MC
. /usr/lib/mc/mc.sh
# set CDPATH to a good one
CDPATH=.:/usr/share/doc:~:~/Desktop:~
export CDPATH
PATH=”${PATH+$PATH:}/usr/sbin:/sbin”
# set PATH so it includes user’s private bin if it exists
if [ -d ~/bin ] ; then
PATH=”~/bin${PATH+:$PATH}”
fi
export PATH
EDITOR=vim
export EDITOR
提示
你可以在第 9 章中的第 9.3.6 节找到更多关于 bash的定制技巧。
提示
bash-completion软件包能够让bash进行命令补全.
1.4.3 特殊按键
在类Unix环境，有一些具有特殊含义的按键。请注意，普通的Linux字符控制台，只有左手边的Ctrl和Alt键可
以正常工作。其中有几个值得记住的按键。
快捷键 描述
Ctrl-U 删除光标前到行首的字符
Ctrl-H 删除光标前的一个字符
Ctrl-D 终止输入（如果你在使用shell，则退出shell）
Ctrl-C 终止一个正在运行的程序
Ctrl-Z 通过将程序移动到后台来暂停程序
Ctrl-S 停止屏幕输出
Ctrl-Q 激活屏幕输出
Ctrl-Alt-Del 重启/关闭系统，参见inittab(5)
左 Alt 键（可选择同时按下
Emacs和相似UI的元键（meta-key）
Windows-key）
Up-arrow 向上方向键 开始在 bash中查看命令历史
Ctrl-R 开始在bash的增量命令历史中搜索
Tab 在bash命令行中补全文件名
Ctrl-VTab 在bash命令行中输入Tab而不是进行补全
Table1.14: bash的按键绑定列表
Debian参考手册 20/233
提示
Ctrl-S的终端功能可能被stty(1)禁用。
1.4.4 鼠标操作
Debian系统针对文本的鼠标操作混合2种风格，外加一些新的方法：
• 传统的Unix鼠标操作方式：
– 使用3个按钮（单击）
– 使用主要键
– 由X应用，如xterm，以及文本应用在控制台中使用
• 现代GUI（图形用户界面）鼠标操作方式：
– 使用2个按钮（拖动+单击）
– 使用主要键和剪贴板
– 用于现代的GUI（图形用户界面）应用，比如gnome-terminal
操作 响应
左击并拖动鼠标 主要键的选择作为选择范围
单击左键 主要键的位置作为选择范围的开头
单击右键（传统方式） 主要键的位置作为选择范围的结尾
单击右键（现代方式） 依赖上下文的菜单（剪切、拷贝、粘贴）
点击中键或者Shift-Ins 在光标处插入主要键的选择
Ctrl-X 剪切主要键的选择到剪贴板
Ctrl-C(在终端是Shift-Ctrl-C) 拷贝主要键的选择到剪贴板
Ctrl-V 粘贴剪切板的内容到光标处
Table1.15: Debian上的鼠标操作和相关按键操作列表
这里，主要键的选择会高亮文本范围。在终端程序内，使用Shift-Ctrl-C来代替，这样可以避免终止一个运行的
程序。
在现代滚轮鼠标上的中央滚轮，被认为是中间键，并可以被当做中间键使用。在2键鼠标系统的情况下，同时按左键
和右键就相当于按中间键。
为了在Linux字符控制台中使用鼠标，您需要让gpm(8)作为后台守护进程（daemon）运行。
1.4.5 分页程序
less(1)命令是一个增强版的分页程序（文件内容查看器）。它按照指定的命令参数或标准输出来读取文件。在用
less命令查看的时候如果需要帮助可以按“h”。它的功能比more(1)命令更丰富，通过在脚本的开头执行”eval
$(lesspipe)”或”eval $(lessfile)”它的功能还能变得更加强大。详细请参考”/usr/share/doc/less/LESSOPEN”。
”-R”选项可以实现原始的字符输出还可以启用ANSI颜色转义序列。详细请参考less(1)。
提示
Inthelesscommand,type”h”toseethehelpscreen,type”/”or”?”tosearchastring,andtype”-i”tothechange
casesensitivity.