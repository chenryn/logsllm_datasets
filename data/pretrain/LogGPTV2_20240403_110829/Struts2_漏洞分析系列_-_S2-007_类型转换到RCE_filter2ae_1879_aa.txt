# Struts2 漏洞分析系列 - S2-007/类型转换到RCE
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 漏洞概述
S2-007的漏洞原理是在处理类型转换的错误时会存入错误到内存中，在后续调用流程中触发OGNL表达式注入。
**影响版本：2.0.0 – 2.2.3**
**复现版本：2.2.3**
官方issue地址：
## 0x01 环境搭建
由于本漏洞发生在Bean中某个Property类型转换时，因此需要我们编写一个Action类：
    import com.opensymphony.xwork2.ActionSupport;
    public class LoginAction extends ActionSupport {
        private String username;
        private String password;
        private int age;
        public String getUsername() {
            return username;
        }
        public String getPassword() {
            return password;
        }
        public int getAge() {
            return age;
        }
        public void setUsername(String username) {
            this.username = username;
        }
        public void setPassword(String password) {
            this.password = password;
        }
        public void setAge(int age) {
            this.age = age;
        }
        public String execute() throws Exception{
            if (this.username == null || this.password == null) {
                return "failed";
            }
            if (this.username.equals("admin") && this.password.equals("admin")) {
                return "success";
            }
            return "failed";
        }
    }
接着分别编写两个JSP文件，index.jsp用于模拟用户登陆后的界面，login.jsp用户模拟登陆界面。
index.jsp：
        Admin Console
      Hello admin
login.jsp：
        S2-007
    S2-007 Demo
    link: https://struts.apache.org/docs/s2-007.html
接着编写struts.xml用于定义路由以及成功、失败、错误时的渲染页面：
                index.jsp
                login.jsp
                login.jsp
随后配置一下WEB服务器，部署后通过`'+(#application)+'`这个Payload测试是否回显相关信息：
## 0x02 漏洞分析
###  2.0 上报错误
之前介绍过Struts2存在着许多拦截器用于在请求真正执行到execute方法前的封装，其中就有一个ParametersInterceptor，在这里会将请求中的参数赋到当前请求对应的Bean上，请求中的参数一定是String类型的，但是Bean中的数据类型并不一定是String类型的，这个时候会自动进行一个类型转换，当转换发生错误时，会将错误进行记录。
比如`aaa`必然不可能被转为int类型，但如果是`123（String）`还是可以被转为int类型的，具体转换的逻辑我就不在这展开记录了，本文的重点是错误记录部分。
相关代码：
    com.opensymphony.xwork2.conversion.impl.XWorkConverter#handleConversionException
    protected void handleConversionException(Map context, String property, Object value, Object object) {
            if (context != null && Boolean.TRUE.equals(context.get("report.conversion.errors"))) {
                String realProperty = property;
                String fullName = (String)context.get("conversion.property.fullName");
                if (fullName != null) {
                    realProperty = fullName;
                }
                Map conversionErrors = (Map)context.get("com.opensymphony.xwork2.ActionContext.conversionErrors");
                if (conversionErrors == null) {
                    conversionErrors = new HashMap();
                    context.put("com.opensymphony.xwork2.ActionContext.conversionErrors", conversionErrors);
                }
                ((Map)conversionErrors).put(realProperty, value);
            }
        }
在类型转换过程中触发的异常会通过handleConversionException方法进行搜集，但前提是report.conversion.errors这个键必须为true，默认情况下这个键是为true的。
随后会获取转换出错的property名称以及`com.opensymphony.xwork2.ActionContext.conversionErrors`这个Map并对其进行初始化，最终将property名称以及其对应的值放入这个Map中。
相关调用栈：
    handleConversionException:438, XWorkConverter (com.opensymphony.xwork2.conversion.impl)
    convertValue:338, XWorkConverter (com.opensymphony.xwork2.conversion.impl)
    convertValue:39, OgnlTypeConverterWrapper (com.opensymphony.xwork2.ognl)
    getConvertedType:1060, OgnlRuntime (ognl)
    getConvertedTypes:1077, OgnlRuntime (ognl)
    getConvertedMethodAndArgs:1103, OgnlRuntime (ognl)
    getAppropriateMethod:1189, OgnlRuntime (ognl)
    callAppropriateMethod:1203, OgnlRuntime (ognl)
    setMethodValue:1474, OgnlRuntime (ognl)
    setPossibleProperty:85, ObjectPropertyAccessor (ognl)
    setProperty:162, ObjectPropertyAccessor (ognl)
    setProperty:27, ObjectAccessor (com.opensymphony.xwork2.ognl.accessor)
    setProperty:2245, OgnlRuntime (ognl)
    setProperty:77, CompoundRootAccessor (com.opensymphony.xwork2.ognl.accessor)
    setProperty:2245, OgnlRuntime (ognl)
    setValueBody:127, ASTProperty (ognl)
    evaluateSetValueBody:220, SimpleNode (ognl)
    setValue:301, SimpleNode (ognl)
    setValue:737, Ognl (ognl)
    setValue:209, OgnlUtil (com.opensymphony.xwork2.ognl)
    trySetValue:173, OgnlValueStack (com.opensymphony.xwork2.ognl)
    setValue:160, OgnlValueStack (com.opensymphony.xwork2.ognl)
    setValue:151, OgnlValueStack (com.opensymphony.xwork2.ognl)
    setParameters:288, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
    doIntercept:199, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
    intercept:98, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    doIntercept:207, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
    intercept:98, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:190, StaticParametersInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:75, MultiselectInterceptor (org.apache.struts2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:94, CheckboxInterceptor (org.apache.struts2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:243, FileUploadInterceptor (org.apache.struts2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:100, ModelDrivenInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:141, ScopedModelDrivenInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:270, DebuggingInterceptor (org.apache.struts2.interceptor.debugging)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:145, ChainingInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    doIntercept:171, PrepareInterceptor (com.opensymphony.xwork2.interceptor)
    intercept:98, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:176, I18nInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:164, ServletConfigInterceptor (org.apache.struts2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:190, AliasInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    intercept:187, ExceptionMappingInterceptor (com.opensymphony.xwork2.interceptor)
    invoke:248, DefaultActionInvocation (com.opensymphony.xwork2)
    execute:52, StrutsActionProxy (org.apache.struts2.impl)
    serviceAction:498, Dispatcher (org.apache.struts2.dispatcher)
    doFilter:434, FilterDispatcher (org.apache.struts2.dispatcher)
    internalDoFilter:239, ApplicationFilterChain (org.apache.catalina.core)
    doFilter:206, ApplicationFilterChain (org.apache.catalina.core)
    invoke:219, StandardWrapperValve (org.apache.catalina.core)
    invoke:106, StandardContextValve (org.apache.catalina.core)
    invoke:501, AuthenticatorBase (org.apache.catalina.authenticator)
    invoke:142, StandardHostValve (org.apache.catalina.core)
    invoke:79, ErrorReportValve (org.apache.catalina.valves)
    invoke:610, AbstractAccessLogValve (org.apache.catalina.valves)
    invoke:88, StandardEngineValve (org.apache.catalina.core)
    service:516, CoyoteAdapter (org.apache.catalina.connector)
    process:1086, AbstractHttp11Processor (org.apache.coyote.http11)
    process:659, AbstractProtocol$AbstractConnectionHandler (org.apache.coyote)