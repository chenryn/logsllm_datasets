# Usable Access Control for the World Wide Web
**Author:** Dirk Balfanz  
**Affiliation:** Palo Alto Research Center, 3333 Coyote Hill Road, Palo Alto, CA 94304  
**Email:** [PI:EMAIL]

## Abstract
While publishing content on the World Wide Web has become accessible to non-technical users, controlling access to this content still requires significant technical expertise. This includes configuring web servers, managing public-key certificates, and implementing various access control mechanisms. The lack of such expertise can lead to either unnecessary exposure of content or the decision not to publish it at all. Recent research has focused on enhancing the flexibility and power of access control systems, but not on improving their usability. In this paper, we propose a user-friendly access control system for the World Wide Web that is easy to use for both content providers (who want to protect their content) and authorized content consumers (who want seamless access to protected content). Our system leverages conventional components like access control lists and public-key certificates. We identify specific challenges in existing software that hinder the implementation of usable access control and evaluate the security provided by our proposed system.

## 1. Introduction
On the World Wide Web, there are two primary roles: content providers and content consumers. Content providers publish content via web servers, while content consumers access this content using web browsers. In the early days of the web, many users were both content providers and consumers, as the technical skills required for browsing and publishing were similar. However, with the rise of large content portals like Yahoo! and the proliferation of web client software and online services like AOL and MSN, the balance shifted. A few major content providers emerged, while millions of users became primarily content consumers.

This landscape is now changing again. More users are becoming small-scale content providers, often through services provided by Internet Service Providers (ISPs), which offer web space and tools for publishing content. Applications and services have made it easier for individuals to share content, such as music, files, and photos, often with just a few clicks.

While it is increasingly easy for small-time content providers to publish their content, securing it remains a challenge. Large content providers can manage databases of subscribers, request certificates from certification authorities, and hire developers to implement access control mechanisms. Small content providers, however, often lack these resources and must choose between:

1. **No Access Control:** If the content provider does not care who accesses their content, this is a simple solution. However, many content providers wish to restrict access for privacy or legal reasons.
2. **Complex Access Control Mechanisms:** Using the limited access control features provided by their publishing software, which can be cumbersome and difficult to manage.
3. **Not Publishing Content:** Avoiding the complexity of access control by not publishing their content at all.

In this paper, we explore why controlling access to published content is challenging and propose solutions to improve the situation. Section 2 reviews the concept of usable security and related work. Section 3 examines existing access control systems. Section 4 outlines a user-friendly content publishing system. Section 5 discusses the difficulties in implementing such a system with current technology. Finally, Section 6 provides conclusions.

## 2. Background

### 2.1. Usable Security
Security exploits often occur because users do not correctly configure their systems. Users may ignore security patches, disable access controls, dismiss security warnings, and turn off protections. There are two main reasons for this behavior:

1. **Lack of Understanding:** Users may not understand the security implications of their actions. For example, Internet Explorer's default settings prompt users to make decisions about launching "file or program in an IFRAME," which most users do not fully comprehend.
2. **Inconvenience:** Even if users understand the security implications, they may find the security mechanisms too restrictive. For instance, security mechanisms may prevent viewing executable content in emails, leading users to disable them to access desired content.

The goal of usable security is to minimize the need for users to make security decisions they do not understand or find inconvenient. Security should be implicit and align with the user's intentions. Examples of usable security include SSH, which works like rlogin but is more secure, and collaborative groupware applications that enforce access control based on user-specified group membership.

For content publishing, usable security means associating security mechanisms with actions users already perform. For example, content providers often announce their content to friends and family via email. This action can be used to determine who should have access to the content. Content consumers should be able to access the content by simply clicking a URL, without additional steps.

### 2.2. Trust Management Systems
Trust management systems, such as Keynote, Binder, and high-order logic-based languages, allow for flexible and powerful access control policies. However, these systems are often too technical for non-expert users. Even simpler, identity-based systems like X.509 certificates can be challenging, requiring users to navigate multiple dialog boxes and make decisions about certificate stores and key fingerprints.

Past efforts in trust management have focused on increasing flexibility rather than usability. Non-expert users need simpler, more intuitive ways to control access to their content.

## 3. Controlling Access to Content – The State of the Art

### .MAC
Apple’s .MAC Web hosting service integrates with Macintosh applications like iPhoto, making it easy to export photo collections to the web. To protect access, users can set a password, but this method is insecure and unfriendly. Passwords are often weak, communicated insecurely, and easily shared with unauthorized individuals.

### Web Servers
Web servers like Apache, Tomcat, and IIS offer sophisticated access control mechanisms. Apache and Tomcat separate authentication and authorization, allowing site administrators to specify how users are authenticated and which users are authorized to access specific resources. While this separation is logical, it adds complexity to the setup process. These servers do not provide tools to distribute necessary credentials to users.

IIS, on the other hand, offers integrated Windows authentication, delegating authorization to the file system's access control lists. This simplifies the process, but it still requires a level of technical knowledge to set up and manage.

In the next sections, we will outline a more user-friendly approach to access control and discuss the challenges in implementing such a system with current technology.