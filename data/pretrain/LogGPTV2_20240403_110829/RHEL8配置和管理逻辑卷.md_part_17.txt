# lvs -a -o name,copy_percent,devices my_vg
  LV    Copy%  Devices
  my_lv        /dev/sdb1(1)
```
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-converting-mirror-to-raid-configure-manage-raid}将镜像 LVM 设备转换为 RAID1 设备 {.title}
:::
您可以通过指定 `--type raid1`{.literal} 参数来使用 `lvconvert`{.literal}
命令将现有镜像的片段类型为 `mirror`{.literal} 的 LVM 设备转换为 RAID1
LVM 设备。这会将镜像子卷(`mimage`{.literal})重命名为 RAID
子卷(`rimage`{.literal})。另外，镜像日志也会被删除，并为与对应数据子卷相同的物理卷上的数据子卷创建元数据子卷。`rmeta`{.literal}
下面的例子显示了镜像逻辑卷 `my_vg/my_lv`{.literal} 的布局。
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             15.20 my_lv_mimage_0(0),my_lv_mimage_1(0)
  [my_lv_mimage_0]        /dev/sde1(0)
  [my_lv_mimage_1]        /dev/sdf1(0)
  [my_lv_mlog]            /dev/sdd1(0)
```
下面的命令可将镜像逻辑卷 `my_vg/my_lv`{.literal} 转换为 RAID1 逻辑卷。
``` literallayout
# lvconvert --type raid1 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(0)
  [my_lv_rimage_1]        /dev/sdf1(0)
  [my_lv_rmeta_0]         /dev/sde1(125)
  [my_lv_rmeta_1]         /dev/sdf1(125)
```
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-resizing-raid-configure-manage-raid}重新定义 RAID 逻辑卷大小 {.title}
:::
您可以使用以下方法重新定义 RAID 逻辑卷大小：
::: itemizedlist
-   您可以使用 `lvresize`{.literal} 或者 `lvextend`{.literal}
    命令增大任意类型的 RAID 逻辑卷的大小。这不会改变 RAID
    镜像的数量。对于条带的 RAID 逻辑卷，创建条带 RAID
    逻辑卷时可使用同样的条状限制。
:::
::: itemizedlist
-   您可以使用 `lvresize`{.literal} 或者 `lvreduce`{.literal}
    命令减少任意类型的 RAID 逻辑卷的大小。这不会改变 RAID 镜像的数量。和
    `lvextend`{.literal} 命令一样，使用与创建条状 RAID
    逻辑卷相同的条状限制。
:::
::: itemizedlist
-   您可以使用 `lvconvert`{.literal} 命令的 `--stripes N`{.literal}
    参数更改条状 RAID
    逻辑卷（`raid4/5/6/10`{.literal}）中的条状数量。这通过添加或删除的条带的容量来增加或减少
    RAID 逻辑卷的大小。请注意，`raid10`{.literal}
    卷只能添加条带。这个能力是 RAID [*reshaping*]{.emphasis}
    功能的一部分，它允许您在保持相同的 RAID 级别的情况下修改 RAID
    逻辑卷的属性。有关 RAID 重新性能以及使用 `lvconvert`{.literal}
    命令重新定义 RAID 逻辑卷的示例，请参考
    `lvmraid`{.literal}(7)手册页。
:::
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-changing-raid-imagenum-configure-manage-raid}更改现有 RAID1 设备中的镜像数 {.title}
:::
您可以更改现有 RAID1 阵列中的镜像数量，就如同在早期的 LVM
镜像部署中更改镜像数量。使用 `lvconvert`{.literal}
命令指定要添加或删除的额外元数据/数据子卷对数。
当您使用 `lvconvert`{.literal} 命令向 RAID1
设备添加镜像时，您可以指定所生成设备的镜像总数，或者您可以指定要添加到该设备中的镜像数。您还可以有选择地指定新元数据/数据镜像对所在的物理卷。
元数据子卷（名为 `rmeta`{.literal}）始终存在于与其数据子卷对应的
`rimage`{.literal}相同的物理设备中。元数据/数据子卷对不会在与 RAID
阵列中其它元数据/数据子卷对相同的物理卷中创建（除非您指定了
`--alloc anywhere`{.literal}）。
在 RAID1 卷中添加镜像的命令格式如下：
``` literallayout
lvconvert -m new_absolute_count vg/lv [removable_PVs]
lvconvert -m +num_additional_images vg/lv [removable_PVs]
```
例如：以下命令显示 LVM 设备 `my_vg/my_lv`{.literal}，它是一个双向 RAID1
阵列：
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV                Copy%  Devices
  my_lv             6.25    my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]         /dev/sde1(0)
  [my_lv_rimage_1]         /dev/sdf1(1)
  [my_lv_rmeta_0]          /dev/sde1(256)
  [my_lv_rmeta_1]          /dev/sdf1(0)
```
以下命令可将双向 RAID1 设备 `my_vg/my_lv`{.literal} 转换为三向 RAID1
设备：
``` literallayout
# lvconvert -m 2 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv              6.25 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(0)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rimage_2]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sde1(256)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
当您向 RAID1
阵列中添加镜像时，您可以指定要用于该镜像的物理卷。以下命令将双向 RAID1
设备 `my_vg/my_lv`{.literal} 转换为三向 RAID1
设备，指定用于该阵列的物理卷 `/dev/sdd1`{.literal} :
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             56.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sda1(1)
  [my_lv_rimage_1]        /dev/sdb1(1)
  [my_lv_rmeta_0]         /dev/sda1(0)
  [my_lv_rmeta_1]         /dev/sdb1(0)
# lvconvert -m 2 my_vg/my_lv /dev/sdd1
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             28.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sda1(1)
  [my_lv_rimage_1]        /dev/sdb1(1)
  [my_lv_rimage_2]        /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sda1(0)
  [my_lv_rmeta_1]         /dev/sdb1(0)
  [my_lv_rmeta_2]         /dev/sdd1(0)
```
要从 RAID1 阵列中删除镜像，请使用以下命令。当您使用
`lvconvert`{.literal} 命令从 RAID1
设备中删除镜像时，您可以指定所生成设备的镜像总数，或者您可以指定要从该设备中删除的镜像数量。您还可以选择指定要从中删除该设备的物理卷。
``` literallayout
lvconvert -m new_absolute_count vg/lv [removable_PVs]
lvconvert -m -num_fewer_images vg/lv [removable_PVs]
```
另外，当镜像及其关联的元数据子卷被删除时，任何带有高数值的镜像都将用来填充被删除卷的位置。如果您从一个由
`lv_rimage_0`{.literal}、`lv_rimage_1`{.literal}和
`lv_rimage_2`{.literal}组成的三向 RAID1 阵列中删除
`lv_rimage_1`{.literal}，这会产生一个由 `lv_rimage_0`{.literal} 和
`lv_rimage_1`{.literal} 组成的 RAID1 阵列。子卷 `lv_rimage_2`{.literal}
将重命名并接管空的位置，成为 `lv_rimage_1`{.literal}。
下面的例子显示了一个三向 RAID1 逻辑卷 `my_vg/my_lv`{.literal} 的布局。
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rimage_2]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
下面的命令可将三向 RAID1 逻辑卷转换成双向 RAID1 逻辑卷。
``` literallayout
# lvconvert -m1 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
```
下面的命令可将三向 RAID1 逻辑卷转换成双向 RAID1
逻辑卷，并指定包含镜像的物理卷为 `/dev/sde1`{.literal}。
``` literallayout
# lvconvert -m1 my_vg/my_lv /dev/sde1
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sdf1(1)
  [my_lv_rimage_1]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sdf1(0)
  [my_lv_rmeta_1]         /dev/sdg1(0)
```
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-splitting-raid-image-configure-manage-raid}将 RAID 镜像分离为一个独立的逻辑卷 {.title}
:::
您可以分离 RAID 逻辑卷的镜像形成新的逻辑卷。
分离 RAID 镜像的命令格式如下：
``` literallayout
lvconvert --splitmirrors count -n splitname vg/lv [removable_PVs]
```
和您从现有 RAID1 逻辑卷中删除 RAID 镜像一样，当您从设备的中间部分删除
RAID
数据子卷（及其关联的元数据子卷）时，会使用数字高的镜像来填充空的位置。因此，构成
RAID 阵列的逻辑卷中的索引号将是一个不可中断的整数序列。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果 RAID1 阵列还没有同步，您就无法分离 RAID 镜像。
:::
下面的示例将 RAID1 逻辑卷 `my_lv`{.literal}分成两个线性逻辑卷
`my_lv`{.literal} 和 `new`{.literal}。
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             12.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
# lvconvert --splitmirror 1 -n new my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV      Copy%  Devices
  my_lv          /dev/sde1(1)
  new            /dev/sdf1(1)
```
下面的示例将一个三向 RAID1 逻辑卷 `my_lv`{.literal}分割成一个双向 RAID1
逻辑卷 `my_lv`{.literal} 和一个线性逻辑卷 `new`{.literal}
``` literallayout
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rimage_2]        /dev/sdg1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  [my_lv_rmeta_2]         /dev/sdg1(0)
# lvconvert --splitmirror 1 -n new my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV            Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(1)
  [my_lv_rimage_1]        /dev/sdf1(1)
  [my_lv_rmeta_0]         /dev/sde1(0)
  [my_lv_rmeta_1]         /dev/sdf1(0)
  new                     /dev/sdg1(1)
```
:::
::: section
::: titlepage
# []{#assembly_configure-mange-raid-configuring-and-managing-logical-volumes.html#proc-split-merge-raid-image-configure-manage-raid}分割和合并 RAID 镜像 {.title}
:::
您可以临时分离 RAID1 阵列的镜像进行只读使用，同时使用
`--trackchanges`{.literal} 参数和 `lvconvert`{.literal} 命令的
`--splitmirrors`{.literal}
参数跟踪任何变化。这可让您以后将镜像合并到阵列中，同时只重新同步那些自镜像被分割后更改的阵列的部分。
分离 RAID 镜像的 `lvconvert`{.literal} 命令的格式如下。
``` literallayout
lvconvert --splitmirrors count --trackchanges vg/lv [removable_PVs]
```
当您使用 `--trackchanges`{.literal} 参数分离 RAID
镜像时，您可以指定要分离的镜像，但您无法更改要分离的卷名称。另外，得到的卷有以下限制。
::: itemizedlist
-   创建的新卷为只读。
-   不能调整新卷的大小。
-   不能重命名剩余的数组。
-   不能调整剩余的数组大小。
-   您可以独立激活新卷和剩余的阵列。
:::
您可以通过执行使用 `--merge`{.literal} 参数的后续 `lvconvert`{.literal}
命令来指定 `--trackchanges`{.literal}
参数来分离镜像。当您合并镜像时，只有自镜像分割后更改的阵列部分会被重新同步。
合并 RAID 镜像的 `lvconvert`{.literal} 命令格式如下。