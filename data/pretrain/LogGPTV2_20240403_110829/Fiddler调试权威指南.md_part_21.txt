Host
Path
ET
htp
www.fdder 2.com
/Rdder2/updatehed.ap?dBeta=True[#1]
PUT
h
PUT
27-3145f012805
27-3145R012805
Deta/boardngFass.pdt
[ze]
Data/boardngPas.pdf
[=3]
CONNECT
http
sqm.microsoff.com:443
sgn.nicresoft.com:443
[#4]
POST
httpe
sqm.micresoff.con
hgp/studo/bqrserver.dl
[s#]
Load SAZSaveSAZ
图6-14
要使用SAZClipboard扩展，点击FiddlerTools菜单中的NewSAZClipboard..
可以拖拽WebSession列表到SAZClipboard，或者直接使用下方的按钮加载SAZ文件。
6.8ANYWHERE
大多数现代浏览器都支持地理位置定位，借助这个功能，JavaScript可以确定用户的真实
地理位置。大多数浏览器是通过查询操作系统，获取用户附近的WFi接入点列表，把该列表
提交到某个Web服务，该服务会把附近的接入点映射成经度/维度坐标，从而估测用户的真实
位置。Web服务把坐标值返回给浏览器，浏览器又返回给JavaScript。
器，使得其获取到的位置和你的实际位置不符。AnyWHERE扩展窗口支持键入当前位置，或
从全球地理位置列表中选择一个你感兴趣的位置，如图6-15所示。
136
---
## Page 137
6.8ANYWHERE
X
Latitude,Longitude,Precision,Elevation
Disable
Iravel
IE.TestDrive
FirefoxDemo
图6-15
因为浏览器的地理定位Web服务查询是通过HTTPS传输的，所以要使该附件组件正常
工作，必须启用HTTPS解密功能。该组件支持IE9+、FF4、Chrome和Opera，但是如果浏览
器的地理定位功能不是基于Web服务查询，该组件也会无法正常工作。例如，在包含GPS
的Windows8设备上运行IE10时，Windows会使用GPS而不是Web服务来确定地理位置。
Fiddler下载包中提供了该扩展的源代码。
137
---
## Page 138
口
章
保存、导入和导出数据流
7.1Session的ARCHIVEZIP（SAZ）文件
Fiddler默认的保存格式是SessionArchive Zip（SAZ)文件。SAZ文件是简单的ZIP压缩的
存档文件，是通过Fiddler能够理解的方式构建的。把.SAZ文件重新命名成.ZIP，便可以通过
WindowsExplorer或WinZip查看SAZ文件，看它是如何工作的。
每个Session的header和body，以及元数据（包括注释、颜色标识以及计时信息）.因为SAZ
文件包含所有的数据流，该文件会变得非常庞大，尤其是当它包含图片、音频和视频响应时。
相反地，HTML、Script和CSS文件压缩效果比较好，其压缩率通常是5:1。可以把儿GB的
数据以及成千上万的Session保存成SAZ文件，但是由于这么大的文件难以加载和传输，因
此通常需要使用Fiddler的过滤功能，对所有以给定SAZ文件保存的数据流进行最小化。
还可以在后期把SAZ文件重新加载到Fiddler，查看其包含的Session：这些Session会通
过浅灰色背景色显示以使于辨别。要注意一点，Fiddler在加载SAZ文件时，不会使用Session
原有的SessionID：当加载SAZ文件时，每个Session获取到从当前索引开始的新的ID。在
和其他人共享SAZ文件之前，使用Comments按钮或Edit>Mark菜单，可以标识任何感兴趣
的Session，如图7-1所示。
如果Fiddler重新加载不包含注释的Session，它会自动添加包含原始SessionID的注释，
如图7-2所示。
提示：
AutoResponder选项卡会导入SAZ文件，重放其包含的响应，模拟在SAZ文件中捕捉到
的原始数据流，
---
## Page 139
7.1Session的ARCHIVEZIP（SAZ）文件
Fider-HTTPDeb
Comments
FleEditBulesIoolsY
unsag·Xag
[=]
[z=]
Result Protocol
[≤]
[=4]
图 7-1
图7-2
保护SAZ文件
SAZ文件包含所有捕捉到的Web数据流，如果Fiddler捕捉到这些数据，可能包含敏感信息
（如用户名、密码、cookie以及账号信息）。因此，只应该在信任者和组织之间共享SAZ文件。
如果某个SAZ文件只能保存在某个不受保护的位置或者在不安全的连接中传输，可以对
内容进行加密再保存，使得其他用户无法查看。要实现这点，先在弹出的SaveSessionArchive
对话框中的Save astype下拉条中选中Password-Protected SAZ选项，如图7-3所示。
pyaes
ShCa
P
Fl same oypedss
SeebpePe PeeSAZ
FowFoid
图 7-3
选中以加密格式保存后，需要输入密码，如图7-4所示。
Password-ProtectSAZ(128-bit AES)
okCc
图 7-4
通过密码保护的SAZ文件是使用128位的AES加密方法进行加密的，AES是一种强加
密格式，HTTPS数据流和政府、军队也使用该格式进行加密。当然，要使文件保密，必须对
密码进行保密。如果和其他人共享该文件，必须通过安全的方式告诉对方密码。不要忘记密
码一如果忘了密码，就没有什么方式可以重新打开SAZ文件（只能通过蛮力猜测）。
139
---
## Page 140
第7章保存、导入和导出数据流
Preference fiddler.sazAES.Use256Bit可以设置成true，让Fiddler使用256位AES面不是
128位AES进行加密。此外，遗留的CONFIGbUseAESForSAZ属性可以设置成false，配置
Fiddler使用遗留的PKZIP模糊加密方式，该加密方法速度快，但是对文件内容保护力较差。
7.2FIDDLERCAP
SAZ文件已经被证明对于捕捉和重现Web应用问题是非常有用的，我很快就发现，很多
Web开发人员请求从新的PC用户捕提SAZ文件。为了使得该请求更有效，我创建了
FiddlerCap。FiddlerCap是轻量级的工具，用于支持非技术用户捕捉SAZ文件，使得后期专业
人员可以通过Fiddler调试器进行分析。
FiddlerCap提供简单的用户界面和流式工作流来捕捉Web数据流。和Fiddler本身不同，
它无法修改数据流，而且不包含扩展机制。类似Fiddler，可以通过FiddlerCap收集通过该技
术开发的任何应用产生的Web数据流。FiddlerCap是基于FiddlerCore库创建的，它使用了
FiddlerCore代理实例，在8889端口上运行，可以捕捉Web数据流。
可以通过访问网站http:/fiddlercap.com安装FiddlerCap，该网站还提供如何使用该工具捕
捉Web数据流的简明教程。默认情况下，安装FiddlerCap时会在桌面上生成文件夹，这不需
要管理员权限。为使得全世界的用户可以方使地使用它，FiddlerCap已经提供了西班牙语、
法语、意大利语、日语、葡萄牙语和俄语版本。
完成安装后，该工具会自动打开。窗口会被划分成三个部分：捕提（Capture）、捕提选项
（CaptureOptions）和工具（Tools），如图7-5所示。
EleIobHep
Capture
looh
CeCoogie..
2.og Capturr
Decypt HIPs tfic
stre cokies and POST
QerCache
[1.Sge Capture]
Adalydtia
Clear Captyre
10ms
Sph
Welcometo FiddlerCap
图7-5
140
---
## Page 141
7.2FIDDLERCAP
FiddlerCap窗口右下方的oge按钮能够用于对窗口进行扩展，显示简单的捕捉到的数
据流的Session列表。Session的内容无法查看，但是可以选中某个Session，按下Delete键删
除它
7.2.1Capture窗口
Capture窗口提供收集捕提所需要的最小的控制项集合。按下StartCapture按钮，开始捕
捉Web数据流。此时会打开新的浏览器窗口，重现该问题，虽然FiddlerCap会从任何需要系
统代理的进程流捕捉数据流—而不仅仅是从单个浏览器窗口。用于Firefox的FiddlerHook
扩展对于FiddlerCap不可用。要捕捉Firefox的网络数据流，打开浏览器的Tools>Options>
Advanced>Network>ConnectionSettings选项，选中Use SystemProxySettings选项。
当问题重现后，点击StopCapture按钮，结束数据流捕捉。最后，点击SaveCapture按钮，
选择.SAZ文件的保存位置。默认情况下，SAZ文件会保存到桌面。要通过密码对SAZ文件
进行加密，选中Save astype下拉框中的Password-Protected SAZ选项，如图7-6所示。
eDeop
SechDestop P
File name FidlerCap_120129-11-37.saz
Saveas lype|SesionCapture(s)
d-Pretec
图 7-6
7.2.2CaptureOptions窗口
CaptureOptions窗口控制捕提时使用的选项。
Storebinaries复选框（默认不会选中）控制在捕捉时是否会保存二进制响应体（如图片、
音频、视频和应用/octet流下载）。忽略这些响应体（只保存响应头）可以极大降低最终的SAZ
文件大小，虽然问题是否重现依赖于下载的内容，应该支持保存二进制选项。
DecryptHTTPStraffic复选框（默认不会选中）控制FiddlerCap是否会对HTTPS数据流
解密。如果选中该复选框，会显示一条解释信息：
A note about HTrPS Decryption
HTTPS decryption will enable your debugging buddy to see the raw traffic sent
via the HTTPS protocol.
141
---
## Page 142
第7章保存、导入和导出数据流
This feature works by decrypting SSL traffic and reencrypting it using a locally
generated certificate. FiddlerCap will generate this certificate and remove it when
you close this tool.
You may choose to temporarily install this certificate in the Trusted store
to avoid warnings from your browser or client application.
看完该信息后，会显示WindowsSecurity提示框，支持信任FiddlerCap根证书，如图7-7所示。
Security Warming
DO_NOT_TRUST_FiddlerRloot
Windowescannot validtethat the cetificateisactually rom
coentating'O_NOT_ TRUST_ Fidlefloet'.The following number will
"DO_NOT_TRUSTFidd
Root'. You should confiem its onigin by
od s unof 
Thumbprint (sha1):964FC478 48041EE5 26031C98 2805204D F8604648
   o n 
关闭FiddlerCap时，它会自动删除在捕捉数据流时生成的所有证书，弹出对话框让用户
确定从受信任的证书库中删除根证书。
StorecookiesandPOSTs选项（默认是选中的）会控制FiddlerCap是否保存POST请求体
以及HTTP请求头的 Cookie、Set-Cookie、Set-Cookie2、Authorization和 Proxy-Authorization。
取消该选项可以在一定程度上减少捕捉量，并且减少在捕提中保存的隐私信息量。即使没有
选中该选项，捕捉的数据流显然可能包含其他隐私信息，因此只能在信任方之间共享。
Automaticallydiscard traffic after#minutes选项用于控制在SAZ文件中保存几分钟的数据
流。当尝试捕捉间歇性发生的数据流时，该选项很有用。可以忽略后台运行的FiddlerCap，
老的数据流会周期性目动过期，减少捕提的数据量以及使用的内存。如果遇到某个希望捕提
142
---
## Page 143
7.3Fiddler的Viewer模式
的问题，可以只保存最后几分钟的数据流。
7.2.3Tools窗口
Tools窗口提供的选项有助于重现问题。ClearCookies按钮会清空IE以及其他基于
WinINET的所有持久Cookie。ClearCache按钮会从IE/WinINET缓存清空所有的缓存文件，
确保FiddlerCap可以查看所有的响应，而不是从本地缓存获取。
ClearCapture按钮只有在FiddlerCap开始捕捉时才生效。它会立刻清除所有之前捕捉到
的 Session.
Snapshot按钮会对FiddlerCap正在运行的监视器进行屏幕截图，并添加到捕捉的JPEG格
式的图像中。在新的Session中会保存该屏幕截图，其URL包含当前时间截，格式为
http://localhost/Scrcenshot_h-mm-s.jpg。
按下Flag按钮会弹出对话框，可以为捕提到的数据流添加注释，如图7-8所示。
AddComment
amtadtepre
ow when T dd he it, t hes.
图 7-8
输入的注释文本会保存成新的Session的HTTP响应体，其URL是http:/USERCOMMENT