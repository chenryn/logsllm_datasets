It is not possible to match files with a double-extension using
"$(basename).ext", i.e. ".js.map" or ".min.css".  
You can currently workaround matching ".js.map" files by excluding the
extention in the "when":
    {
       "files.exclude": {
          "**/*.js": { "when": "$(basename).ts"},
          "**/*.js.map": { "when": "$(basename).ts"},   // Does nothing
          "**/*.js.map": { "when": "$(basename)"},      // Works
          "**/*.css": { "when": "$(basename).scss"},
          "**/*.min.css": { "when": "$(basename).scss"} // Does nothing
       }
    }
Ideally I would like to use `"when": "$(basename).ext"` to exclude ".js" and
".js.map" transpiled Typescript files, and ".css" and ".min.css" transpiled
and minified Sass or Less files:
    {
       "files.exclude": {
          "**/*.js": { "when": "$(basename).ts"},
          "**/*.js.map": { "when": "$(basename).ts"},
          "**/*.css": { "when": "$(basename).scss"},
          "**/*.min.css": { "when": "$(basename).scss"}
       }
    }
This issue could possibly be resolved by allowing regex expressions, as
described in #1214