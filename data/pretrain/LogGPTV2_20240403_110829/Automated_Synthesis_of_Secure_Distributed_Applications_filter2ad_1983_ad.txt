of the Proof Carrying Authorization framework [8, 18] and
we envision the usage of our framework in several other
authorization languages, such as Aura [43], PCML5 [9],
F∗ [52], and SecPal [19].
We are currently implementing our framework on top
of JXTA and JGroups, two open-source development plat-
forms for distributed systems. These platforms provide
high-level communication primitives that conceal the net-
work layer and allow the designer to focus on the functional
behavior of the system; our framework provides security-
oriented data abstractions that hide the cryptographic layer
as well.
We have formally proved that the implementations pro-
duced by the compiler enforce the intended authoriza-
tion policies. Local privacy properties expressed via exis-
tential quantiﬁcation are directly guaranteed by the zero-
knowledge property of the employed proofs. Global pri-
vacy properties, such as strong secrecy and anonymity, are
harder to enforce by construction, since they are not closed
by composition and depend on the system as a whole. They
can, however, be veriﬁed directly on the protocols produced
by the compiler using off-the-shelf cryptographic protocol
veriﬁers (e.g., ProVerif [23]). As a future work, it would be
interesting to develop techniques to quantitatively measure
global privacy properties (e.g., in terms of information ﬂow,
k-anonymity, etc.).
Finally, we intend to extend our framework in a number
of directions. For example, we would like to develop prim-
itives to share and process distributed data structures, yet
preserving the privacy of sensitive information; this could
be achieved by a combination of homomorphic encryptions
and secure multiparty computations. It would also be inter-
esting to offer support for other security properties, such as
linear authorization policies [25] and trust properties [27].
Acknowledgments
This work was partially supported by the initiative for excel-
lence and the Emmy Noether program of the German fed-
eral government.
References
[1] C. Abadi.
Foreign Policy,
2010.
Iran, Facebook, and the Limits of On-
http:
line Activism.
//www.foreignpolicy.com/articles/2010/
02/12/irans_failed_facebook_revolution.
[2] M. Abadi. Access Control in a Core Calculus of Depen-
dency. SIGPLAN Notices, 41:263–273, 2006.
[3] M. Abadi, A. Banerjee, N. Heintze, and J. G. Riecke. A
Core Calculus of Dependency. In Proc. Symposium on Prin-
ciples of Programming Languages (POPL’99), pages 147–
160. ACM Press, 1999.
[4] M. Abadi, M. Burrows, B. Lampson, and G. Plotkin. A
Calculus for Access Control in Distributed Systems. ACM
Transactions on Programming Languages and Systems,
15:706–734, September 1993.
[5] M. Abe, G. Fuchsbauer, J. Groth, K. Haralambiev, and
M. Ohkubo. Structure-Preserving Signatures and Commit-
ments to Group Elements. In Proc. Advances in Cryptology
(CRYPTO’10), volume 6223 of Lecture Notes in Computer
Science, pages 209–236. Springer-Verlag, 2010.
[6] J. B. Almeida, E. Bangerter, M. Barbosa, S. Krenn, A.-
R. Sadeghi, and T. Schneider. A Certifying Compiler for
Zero-Knowledge Proofs of Knowledge Based on Sigma-
Protocols. In ESORICS’10, pages 151–167, 2010.
[7] M. M. Andreas Blass, Yuri Gurevich and I. Neeman. Evi-
dential Authorization. The Future of Software Engineering,
pages 77–99, 2011.
[8] A. W. Appel and E. W. Felten. Proof-Carrying Authenti-
cation. In Proc. ACM Conference on Computer and Com-
munications Security (CCS’99), pages 52–62. ACM Press,
1999.
[9] K. Avijit, A. Datta, and R. Harper. Distributed Programming
In Proc. ACM SIGPLAN
with Distributed Authorization.
workshop on Types in language design and implementation
(TLDI’10), pages 27–38. ACM Press, 2010.
[10] M. Backes, S. Lorenz, M. Maffei, and K. Pecina. Anony-
In Proc. Privacy Enhancing Tech-
mous Webs of Trust.
nologies Symposium (PETS’10), volume 6205 of Lecture
Notes in Computer Science, pages 130–148. Springer-
Verlag, 2010.
[11] M. Backes, M. Maffei, and C. Hrit¸cu. Union and In-
tersection Types for Secure Protocol Implementations.
In
Proc. Conference on Theory of Security and Applications
(TOSCA’11), Lecture Notes in Computer Science. Springer-
Verlag, 2011.
[12] M. Backes, M. Maffei, and K. Pecina. Automated Synthesis
of Secure Distributed Application. Long version available at
http://lbs.cs.uni-saarland.de/asosda.
[13] M. Backes, M. Maffei, and K. Pecina. A Security API for
In Proc. Network and Dis-
Distributed Social Networks.
tributed System Security Symposium (NDSS’11), 2011.
[14] M. Backes, M. Maffei, K. Pecina, and R. M. Reischuk.
G2C: Cryptographic Protocols from Goal-Driven Speciﬁca-
tions. In Proc. Conference on Theory of Security and Appli-
cations (TOSCA’11), Lecture Notes in Computer Science,
Saarbr¨ucken, Germany, 2011. Springer-Verlag.
[15] M. Backes, M. Maffei, and D. Unruh. Computationally
Sound Veriﬁcation of Source Code. In CCS ’10, pages 387–
398. ACM, 2010.
[16] M. Backes and D. Unruh. Computational Soundness of
Symbolic Zero-Knowledge Proofs Against Active Attack-
ers. In CSF’08, pages 255–269. IEEE, 2008.
[17] L. Bauer, S. Garriss, J. M. McCune, M. K. Reiter, J. Rouse,
and P. Rutenbar. Device-Enabled Authorization in the
In Proc. Information Security Conference
Grey System.
(ISC’05), Lecture Notes in Computer Science, pages 431–
445. Springer-Verlag, 2005.
[18] L. Bauer, M. Schneider, E. Felten, and A. Appel. Access
Control on the Web Using Proof-Carrying Authorization. In
Proc. DARPA Conference on Information Survivability Con-
ference and Exposition (DISCEX’03), volume 2, pages 117–
119, 2003.
[19] M. Y. Becker, C. Fournet, and A. D. Gordon. Design and
Semantics of a Decentralized Authorization Language.
In
Proc. IEEE Symposium on Computer Security Foundations
(CSF’07), pages 3–15. IEEE Computer Society Press, 2007.
[20] M. Belenkiy, J. Camenisch, M. Chase, M. Kohlweiss,
A. Lysyanskaya, and H. Shacham. Randomizable Proofs and
Delegatable Anonymous Credentials. In Proc. Advances in
Cryptology (CRYPTO’09), volume 5677 of Lecture Notes in
Computer Science, pages 108–125. Springer-Verlag, 2009.
[21] J. Bengtson, K. Bhargavan, C. Fournet, A. D. Gordon, and
S. Maffeis. Reﬁnement Types for Secure Implementations.
In Proc. IEEE Symposium on Computer Security Founda-
tions (CSF’08), pages 17–32, 2008.
[22] K. Bhargavan, C. Fournet, and A. Gordon. Modular Veriﬁ-
cation of Security Protocol Code by Typing. ACM SIGPLAN
Notices, 45(1):445–456, 2010.
[23] B. Blanchet, M. Abadi, and C. Fournet. Automated Ceriﬁca-
tion of Selected Equivalences for Security Protocols. Jour-
nal of Logic and Algebraic Programming, 75(1):3–51, 2008.
[24] O. Blazy, G. Fuchsbauer, M. Izabach`ene, A. Jambert,
H. Sibert, and D. Vergnaud. Batch Groth-Sahai. In Proc.
International Conference on Applied Cryptography and Net-
work Security (ACNS’10), volume 6123 of Lecture Notes in
Computer Science, pages 218–235. Springer-Verlag, 2010.
[25] K. D. Bowers, L. Bauer, D. Garg, F. Pfenning, and M. K.
Reiter. Consumable Credentials in Linear-Logic-Based
Access-Control Systems. In Proc. Network and Distributed
System Security Symposium (NDSS’07). Internet Society,
2007.
[26] E. Brickell, J. Camenisch, and L. Chen. Direct Anonymous
Attestation. In CCS’04, pages 132–145. ACM Press, 2004.
[27] G. Caronni. Walking the Web of Trust. In Proc. IEEE In-
ternational Workshops on Enabling Technologies: Infras-
tructure for Collaborative Enterprises (WETICE’00), pages
153–158. IEEE Computer Society Press, 2000.
[28] H. Carter. England Riots: Pair Jailed for Four Years for Us-
ing Facebook to Incite Disorder. Guardian, 2011. http:
//www.guardian.co.uk/uk/2011/aug/16/
uk-riots-four-years-disorder-facebook.
[29] A. Chaudhuri and D. Garg.
PCAL: Language Support
for Proof-Carrying Authorization Systems. In Proc. Euro-
pean Symposium on Research in Computer Security (ES-
ORICS’09), Lecture Notes in Computer Science, pages 184–
199. Springer-Verlag, 2009.
[30] R. Cramer, I. Damg˚ard, and B. Schoenmakers. Proofs of
Partial Knowledge and Simpliﬁed Design of Witness Hiding
Protocols. In Proc. Advances in Cryptology (CRYPTO’94),
volume 839 of Lecture Notes in Computer Science, pages
174–187. Springer-Verlag, 1994.
[31] A. De Caro.
jPBC Library. http://libeccio.dia.
unisa.it/projects/jpbc/download.html.
[32] J. DeTreville. Binder, a Logic-Based Security Language.
In Proc. IEEE Symposium on Security & Privacy (S&P’02),
pages 105–113. IEEE Computer Society Press, 2002.
[33] R. Dingledine, N. Mathewson, and P. F. Syverson. Tor: The
Second-Generation Onion Router. In Proc. USENIX Secu-
rity Symposium (USENIX’04), pages 303–320. USENIX As-
sociation, 2004.
[50] E. Morozov.
Foreign Policy:
National Public Radio,
Facebook Police.
http://www.npr.org/templates/story/
story.php?storyId=106535773.
Iran’s Terrifying
2009.
[51] M. D. Ryan. Cloud computing privacy concerns on our
doorstep. Communications of the ACM, 54:36–38, 2011.
[52] N. Swamy, J. Chen, C. Fournet, K. Bharagavan, and J. Yang.
Security Programming with Reﬁnement Types and Mobile
Proofs. Technical Report MSR-TR-2010-149, Microsoft
Research, 2010.
[53] The National
and Technol-
Recommendataion for Key Management –
ogy.
NIST SP, 800–57, 2011.
Part 1: General (Revised).
http://csrc.nist.gov/groups/ST/toolkit/
key_management.html.
Institute of Standards
[54] J. A. Vaughan. A Conﬁdentiality Extension to the Aura Pro-
In Proc. ACM SIGPLAN workshop
gramming Language.
on Types in language design and implementation (TLDI’11).
ACM Press, 2011.
[55] D. Wolman.
Cairo Activists Use
to Rattle Regime.
http://www.wired.com/techbiz/startups/
magazine/16-11/ff_facebookegypt.
WIRED Magazine,
Facebook
2008.
[34] F. Fassihi.
Iranian Crackdown Goes Global. The Wall
http://online.wsj.com/
Street Journal, 2009.
article/SB125978649644673331.html.
La Polizia
[35] G. Florian.
L’Espresso,
repubblica.it/dettaglio/
la-polizia-ci-spia-su-facebook
/2137277.
su Facebook.
http://espresso.
ci Spia
2010.
[36] C. Fournet. Cryptographic Soundness for Program Veriﬁca-
tion by Typechecking. Unpublished draft, 2011.
[37] K. Frikken, M. Atallah, and J. Li. Attribute-Based Access
Control with Hidden Policies and Hidden Credentials. IEEE
Transactions on Computers, 55(10):1259 –1270, 2006.
[38] D. Garg and F. Pfenning. A Proof-Carrying File System.
In Proc. IEEE Symposium on Security & Privacy (S&P’10),
pages 349–364. IEEE Computer Society Press, 2010.
[39] O. Goldreich, S. Micali, and A. Wigderson. Proofs that yield
nothing but their validity or all languages in NP have zero-
knowledge proof systems. JACM, 38(3):690–728, 1991.
[40] J. Groth and A. Sahai. Efﬁcient Non-interactive Proof Sys-
tems for Bilinear Groups. In Proc. Advances in Cryptology
(EUROCRYPT’08), volume 4965 of Lecture Notes in Com-
puter Science, pages 415–432. Springer-Verlag, 2008.
[41] Y. Gurevich and I. Neeman. DKAL: Distributed-Knowledge
Authorization Language. In CSF’08. IEEE, 2008.
[42] Y. Gurevich and I. Neeman. DKAL 2 – A Simpliﬁed and Im-
proved Authorization Language. Microsoft Research Tech-
nical Report, 2009.
[43] L. Jia, J. A. Vaughan, K. Mazurak, J. Zhao, L. Zarko,
J. Schorr, and S. Zdancewic. AURA: A Programming Lan-
guage for Authorization and Audit. ACM SIGPLAN Notices,
43(9):27–38, 2008.
[44] B. Lampson, M. Abadi, M. Burrows, and E. Wobber.
Authentication in Distributed Systems: Theory and Prac-
tice. ACM Transactions on Computer Systems, 10:265–310,
November 1992.
[45] J. Li, N. Li, and W. H. Winsborough. Automated trust ne-
gotiation using cryptographic credentials. In Proceedings of
the 12th ACM conference on Computer and communications
security, CCS’05, pages 46–57. ACM Press, 2005.
[46] N. Li, J. C. Mitchell, and W. H. Winsborough. Design of a
Role-Based Trust-Management Framework. In Proc. IEEE
Symposium on Security & Privacy (S&P’02), pages 114–
130. IEEE, 2002.
[47] L. Lu, J. Han, Y. Liu, L. Hu, J.-P. Huai, L. Ni, and J. Ma.
Pseudo Trust: Zero-Knowledge Authentication in Anony-
mous P2Ps. IEEE Trans. on Parallel Distributed Systems,
19(10):1325–1337, 2008.
[48] M. Maffei and K. Pecina. Position Paper: Privacy-Aware
In Proc. ACM SIGPLAN
Proof-Carrying Authorization.
Workshop on Programming Languages and Analysis for Se-
curity (PLAS’11), 2011.
[49] S. Meiklejohn, C. C. Erway, A. K¨upc¸ ¨u, T. Hinkle, and
A. Lysyanskaya. ZKPDL: A Language-Based System for
Efﬁcient Zero-Knowledge Proofs and Electronic Cash.
In
Proc. USENIX Security Symposium (USENIX’10), pages
193–206, 2010.
A. Experimental results
s
n
i
e
m
i
t
n
o
i
t
a
r
e
n
e
g
f
o
o
r
P
80
60
40
20
0
n conjuncted 1-argument predicates
One predicate with n arguments
150
100
50
s
n
i
e
m
i
t
n
o
i
t
a
c
ﬁ
i
r
e
v
f
o
o
r
P
300
200
100
B
k
n
i
e
z
i
s
f
o
o
r
P
1
2
3
4
0
1
n
2
3
4
n
0
1
2
3
4
n
Figure 1. Comparison of the experimental evaluation of zero-knowledge proofs for predicates with
various argument lengths against the conjunction of zero-knowledge proofs for predicates with only
one argument. The security parameter is ﬁxed to 80 bits.
s
n
i
e
m
i
t
n
o
i
t
a
r
e
n
e
g
f
o
o
r
P
400
300
200
100
800
600
400
200
s
n
i
e
m