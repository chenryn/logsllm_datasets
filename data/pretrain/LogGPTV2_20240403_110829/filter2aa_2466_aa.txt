By Paul Wouters
_
Theory of DNSSEC
_
Using bind with DNSSEC
_
Securing “.nl” with SECREG
_
Deploying DNSSEC on large scale
 Overview presentation
PART ONE: DNSSEC
_
IPsec basics
_
What is Opportunistic Encryption
_
Protecting the net with OE
_
Installing and Configuring OE
_
Securing the wireless: WaveSEC
_
Testing OE
 Overview presentation
PART TWO: IPsec
_
 From
To
Question
Answer
_
 Clientip
Resolver
A www.freeswan.nl
193.110.157.9
_
-
NS .
NS
A.ROOT-SERVERS.NET.
_
A
198.14.0.4 (GLUE)
_
Resolver
198.14.0.4    
NS nl.     
NS
NS.DOMAIN-REGISTRY.NL
_
A
193.176.144.2 (GLUE)
_
Resolver
193.176.144.2
NS freeswan.nl.
NS ns.xtdnet.nl.
_
A
193.110.157.2 (GLUE)
_
Resolver
193.110.157.2
A www.freeswan.nl.
A  193.110.157.9
(AUTHORATIVE)
Zone view of DNS
_
The Root Registry (InterNic/VeriSign/DoD/IANA/IAB/ICANN)
_
ROOT-SERVERS.NET (IETF)
_
CC:TLD-SERVERS.NET (IETF/RIPE/RIPE NCC)
_
The NL Registry DOMAIN-REGISTRY.NL (SIDN)
_
(AMS-IX,KPN,NIKHEF,SURFNET,RIPE NCC,NIC.SE,NIC.FR,UUNET)
_
Registrar of 157.110.193.IN-ADDR.ARPA. (XTDNET,RIPE,BBC)
_
ISP of 157.110.193.IN-ADDR.ARPA. (XTDNET,BBC,EASYNET,INTERNATION)
_
Registrant (FreeS/WAN)
_
23 Organisations (+everyone with access to routing
or BGP tables)
Organisational view of DNS
_
Client  DHCP Server
_
Client  Resolver
_
Resolver itself (rootfile)
_
Resolver's communication to the net
_
Various glue records and their update mechanism
_
Various nameserver  nameserver communication
_
Various network  network communication
Tip
Vulnerabilities of DNS:
1) Integrity of data
2) Authenticity of data
_
Secure client  resolver communication
–
Secure LAN/DHCP?
–
DNSSEC aware Resolver on Client(!)
_
Secure communication nameservers
–
Zone transfers (AXFR)
–
dynamic updates
_
Secure data storage integrity
–
Zonefiles
–
Caches
Tip
Protect DNS with digital signatures
_
TSIG: Preshared Secret Key to protect AXFR
–
Strictly speaking not necessary with secure zones
–
Secure the IP layer
•
IPsec tunnel between master and slaves
•
Transfer zones from master to slave using SSH/SCP/SFTP
_
SIG0: Public key cryptography
–
See above
–
Useful for dynamic updates
Secure nameserver communication
_
The KEY record: The public key used
unfortunately for DNSSEC only since RFC3445
_
The SIG record: The signatures created by that key
_
The NXT record: For denial of existance
_
The  DS record: For building the chain of trust
_
New flag: the Authenticated Data (AD) flag
Not protected by a signature!
DNSSEC: The new record types
DNSSEC: The KEY record
RRlabel  TTL  IN  KEY     
reeswan.nl.  3600   IN   KEY  256  3  5 (
                       AQPRv8TN8ayfxrtRo1dveOMVSSpT4PGEZvfGjaERldQZ
                       izYKgVBj/l84DjVktGUbkJ3pBiLBAzZ+5nbGkWn+Lz5Z
HMlQnjWde/mKKDlZnwQ13vU+HPt3cszNy9CdBmn6l8=
                       ) ; key id = 56954
ags: authentication, confidentiality
rotocol: DNSSEC = 3, IPsec = 4 [only protocol 3 is allowed since RFC3445]
DNSSEC: The SIG record
RRlabel  TTL  IN  SIG   
reeswan.nl.            3600 IN NS ns.xtdnet.nl.
reeswan.nl.            3600 IN NS ns1.xtdnet.nl.
reeswan.nl.            3600 IN SIG NS 5 2 3600 20030506165654 (
                            20030406165654 56954 freeswan.nl.
                         bTKJvyrwmP+nsFoE8oelC4gFqoyJxkawNIExMVupI+ie
NeyUYdkrpDVBF5yn7U0dLxQu/+wqbOGYjPWx/r1ybZF7
DNSSEC: The NXT record
RRlabel  TTL  IN  NXT 
reeswan.nl. 3600 IN NXT activeOE.freeswan.nl. NS SOA MX SIG KEY
NXT
Denial of existance: We now know there is no RRset abc.freeswan.nl.
DNS: Example zone
DNSSEC: Example zone
_
The Parent should securely delegate authority of the
child zone
–
Parent cannot give a “non-authoritative” answer
_
Parent cannot not sign child zone data
–
It has no private key of child
_
Parent should not sign child zone data
–
It is not authoritative for child zone
_
Parent will need to serve NS (and perhaps glue)
records of child zone
_
Answer needs to be secure
The Delegation problem
DNSSEC: The DS record
RRlabel  TTL IN DS   
reeswan.nl.
345600 IN NS ns.xtdnet.nl.
reeswan.nl.
345600 IN NS ns1.xtdnet.nl.
reeswan.nl.
345600 IN DS 49601 5 1 (
                            C7D3B76F7DEE10E6A73B7D0F6EDAF55FFF60CA78 )
reeswan.nl.
345600 IN SIG DS 1 2 345600 20030416070311 (
                                20030409070311 6869 nl.
W2pmK7IGF1W7SDJxyyTep707lDRQ36IEkmyEhezJO72U
                       3g1YeWTI4r5lSAOkGW/+u74FRuQgMFzYzRisCZKYCiBm
                       rNiatRg+TTf9+yzJcqg9A2CuygNBi8I7aVloYxsM+qri
                       9J1CJQuxAzbKLPAppQw4UP1VOiB4NvHWG2jwFNw= )
These are all the freeswan nl records at the parent
_
In an ideal world: Only one trusted key is needed
–
The root (“.”) key
_
In the real world: Secure entry points
_
Your world: Make your own trusted key(s)
trusted-keys {
“nl.” 256 3 1
“AQOtBQXOH5L/wmOt01PuxXAfSk1bw/dneW
PoCyl4yi8tLCjz+DkAs0mz AAvd9XUNp
YDaf5KTciSs9254oeiE0s0FuYbxS4nm7
veZSPCgWoHULFNJ tKPNeb4EEblNkAsE
GagwQJoIrjlAYKx4CEn3hPwElUlVko23
I5tSSPPs sxrVnQ==”;
};
Tip
Delegation fixed: chain of trust
_
Small keys can be attacked using brute force
_
Large keys are strong, but CPU expensive
_
Keys can become useless
–
Key can be stolen, lost or compromised
–
Key can be based on impure random
–
Key can leak information when in use (DSA)
_
Keys will need to be replaced at some point
–
Parent needs to be (securely) informed to update DS record
–
We want to minimize parent  child interaction
–
Cache, TTL, Signature expiration: Both keys are needed at the
same time
Tip
Problem: Time is not on our side
_
One Zone Signing Key (ZSK, 768bit, one month)
–
768bit
–
Validity of one month
–
Signs all RRsets in the zone (including KEY records)
–
Can be changed without parent notification
_
One Key Signing Key (KSK, 2048bit, one year)
–
Parent's DS record points to this key
–
2048bit
–
Validity of one year
–
Only signs the key records
–
Must inform parent when this key changes
Tip
Two keys: ZSK and KSK
Tip
Scheduled ZSK Rollover
L
normal
prepare
rollover
parent:
DS(KSK)
DS(KSK)
DS(KSK)
child:
KSK
KSK
KSK
ZSK1
ZSK1, ZSK2
ZSK2
KSK(KSK,ZSK1)
KSK(KSK,ZSK1,ZSK2)
KSK(KSK,ZSK2)
ZSK1(zone)
ZSK1(zone)
ZSK2(zone)
Tip
Scheduled KSK Rollover
L
normal
prepare
rollover
parent:
DS(KSK1)DS(KSK1)
DS(KSK2)
child:
KSK1
KSK1,KSK2
KSK2
ZSK
ZSK
ZSK
KSK1(KSK1,ZSK)
KSK1(KSK1,KSK2,ZSK)
KSK2(KSK2,ZSK)
ZSK(zone)
ZSK(zone)
ZSK(zone)
Tip
Unscheduled Rollover
PANIC!!!
- Have emergency procedure ready!
- Have spare KSK in zone for emergency rollover?
- Contact everyone who has your key as trusted key!
- Contact children!
- Short TTL's and short SIG lifetime help contain disaster
- Emergency out of bound contact needed with parent
_
Only use latest snapshot on signer machine
–
As of writing: bind-9.3.0s20021217 [CHECK]
–
./configure –with-openssl
–
Threads broken in latest snapshot, use –disable-threads
_
Do not use “host” or “nslookup”
–
For “host” like output, use “dig +multiline”
–