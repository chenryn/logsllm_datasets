# Summary of the new feature/enhancement
Having multiple languages installed on my machine, I start typing in the wrong
language in the Run search box. I click the correct keys for what I am looking
for, but of course the outcome is something completely different.  
For example, searching for "terminal" would turn out as "אקרצןמשך" (just to
make it clear - this is _not_ a translation. This is gibberish, and the
outcome of clicking on the same keys as "terminal" while the current language
is Hebrew)
A very simple mapping of keyboard keys across different languages can easily
realize I might have meant to write "terminal" and show suggestions based on
both strings (the original gibberish one, and the guess in English).  
Of course, this can happen the other way around, and also with more than two
languages installed.
A very similar idea is already implemented in Google Search - searching for
"אקרצןמשך" will show results for "terminal" (example)
# Proposed technical implementation details (optional)
I've been thinking of implementing this feature for a while now, and I have
not found a programmatic way to get a keypress value from the keyboard, and
translate it into different keyboard layouts/languages. It might be necessary
to start out with some hard-coded map of keyboards in different layouts. But
if there is any way to do it automatically using some low-level windows API
that would make matters so much easier.  
After mapping the input text to different language keyboard layouts, it's
should be a matter of adding more terms to the QueryBuilder, and interleaving
the results. On almost all cases, only a single term will return any results,
as most other terms will be gibberish anyway.  
I think the end result may be completely transparent to the end-user. The
search box will contain some gibberish, and the results will "magically"
contain the results they are expecting.