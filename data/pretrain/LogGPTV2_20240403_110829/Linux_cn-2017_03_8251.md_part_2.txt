本书基于 GNU Free Documentation License Version 1.3 及其更新版本发布。
### 《 GNU C 语言编程教程   （    The GNU C Programming Tutorial    ） 》
![The GNU C Programming Tutorial](/data/attachment/album/201703/01/120742q9ifofxxgip68106.jpg)
作者 Mark Burgess, Ron Hale-Evans ，290页
《   GNU C 语言编程教程    （    The GNU C Programming Tutorial    ） 》以逻辑顺序向读者介绍了 C 语言的基本内容。本书内容涵盖了 C 语言的全部主要内容的细节以及如何使用 C 语言编程，特别强调了GNU/Linux编译器以及相关软件。
一些章节主要介绍了函数，变量以及声明，作用域，表达式和操作符，参数，指针，判定，循环，数组，字符串，输入输出等等。
本书基于 GNU Free Documentation License Version 1.1 版发布。
### 《 C 语言基础   （    Essential C    ） 》
![Essential C](/data/attachment/album/201703/01/120758bw7ojh2m0kmxwplz.png)
作者 Nick Parlante ，45页
《   C 语言基础    （    Essential C    ） 》这份简短的文档解释了 C 语言全部的常用特性和技术。这份文档十分简洁，因此它的目标人群是已经具有其他编程语言背景的人。
内容包括变量，整型，浮点型，类型提升，截断，操作符，控制结构（`if`,`while`,`for`），函数，数值参数，引用参数，结构体，指针，数组，预处理器以及 C 语言标准库函数。
目录：
* 简介
* 基础类型与运算符
* 控制结构
* 复杂数据类型
* 函数
* 杂项
* 高级数组与指针
* 运算符和标准库
根据作者的描述，我们得知这是一本基于开源协议发布的书籍。
### 《 Beej 的 C 语言教程   （    Beej’s Guide to C Programming    ） 》
![Beej’s Guide to C Programming](/data/attachment/album/201703/01/120758y3dki32tjew3teru.png)
作者 Brian “Beej” Hall ，130 pages
《   Beej 的 C 语言教程    Beej’s Guide to C Programming 》试图为那些心存困惑的读者带来一种仅能通过纯粹 C 语言编程而产生的快感。
章节：
* 构建程序的基本结构块
* 变量，表达式和，语句。变量就是一个数字的名字——一个 C 语言表达式可以包含其他的表达式以及运算符。文章还介绍了`if`，`while`，`do while`以及程序重复执行的`for`语句。
* 函数——当程序块变得很大，或是当这些程序块用来执行一些特定的工作时，我们会把它们封装到函数中。
* 变量（续篇）——探讨了变量的作用域和储存类型
* 指针——它们是数据在内存中的地址。就像一个整型的值可以是12，一个指针的值就是数据在内存中的地址
* 结构体——结构体允许你将逻辑上相关的变量分组。随后你可以将其作为一个整体来使用。
* 数组——一组相关数据的线性集合
* 字符串—— C 语言中的字符串就是内存中的一组连续的比特，包含了一组字符
* 动态内存——探讨了malloc(), free(), realloc() 和 calloc() 函数
* 更多内容——指针运算，`typedef`，枚举，结构体声明，命令行参数，多维数组，类型转换和类型提升，不完整类型，`void`指针，`NULL`指针和`static`关键字
* 标准输入输出库——用来进行文件的读写。
* 字符串操作——用来查找子串的函数，连接字符串的函数，获取字符串长度的函数，等等。
* 算数——一些可以满足你基本算数需求的函数。
本书基于[知识共享署名-非商业性使用-禁止演绎 3.0 未本地化版本](https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh)协议发布。
### 《 现代 C 语言   （    Modern C    ） 》
![Modern C](/data/attachment/album/201703/01/120759w2622izindj4onjc.png)
作者 Jens Gustedt ，310页
《   现代 C 语言    （    Modern C    ） 》鼓励读者逐级探索 C 语言的特性。内容一共分为如下五层境界：
* 第一层——使读者了解最基本的 C 语言程序。了解使用 C 语言的目的和数据结构，以及如何去使用它们
* 第二层——详细的说明了大部分主要概念以及特性，包括控制结构，数据类型操作符和函数。这一级的主要目的是让读者能够对于这些运行程序必备的知识，有更深刻的理解。
* 第三层——进入 C 语言的核心部分。详细的解释了指针，让你熟悉 C 语言的内存模型，并且让你了解大多数 C 语言库的接口
* 第四层——深入理解一些特定的主题。比如性能，重入，原子性，线程及泛型编程
* 第五层——探讨了作者对这门语言未来发展趋势的理解
本书基于[知识共享署名-非商业性使用-禁止演绎 3.0 未本地化版本](https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh)协议发布
### 《   GCC 简介    （    An Introduction to GCC    ） 》
![An Introduction to GCC](/data/attachment/album/201703/01/120759q88gagz5f1rh71sa.png)
作者 Brian Gough ，144页
《   GCC 简介    （    An Introduction to GCC    ） 》介绍了 GNU C 语言和 C++编译器——gcc 和 g++，它们是 GNU 编译器套装（GCC）的一部分。
本书介绍了如何使用编译器。通过多年以来对邮件列表中的问题的观察，本书带领读者直击 GCC 的重要内容。
章节介绍：
* 编译c程序——介绍了如何使用 gcc 来编译 C 语言程序。单个文件或多个文件均可以编译，也可以使用操作系统函数和头文件。
* 编译选项——介绍了 gcc 中一些常用的编译选项。这些参数控制一些功能，例如搜索库函数和头文件的路径，提供额外的编译告警和诊断。预处理宏和 C 语言方言。
* 使用预处理器——描述了cpp（GNU C preprocessor）的使用方法，cpp 是 GCC 的一部分。预处理器会在编译前将代码中的宏展开，当 GCC 处理 c 或者 c++ 代码时，预处理器会自动被调用。
* 编译带有调试信息的程序——提供了一个`-g`选项用以在中间文件和可执行文件中存储额外的调试信息。这些调试信息使得我们可以追踪错误，将机器指令中的问题定位到源代码中。
* 优化编译——GCC 是一个优化过的编译器。它提供了很多选项，可以加速编译或是减少编译后文件的体积。
* 编译C++程序——介绍了如何使用 GCC 编译 C++ 程序以及该语言可以使用的命令行选项。
* 平台相关选项——介绍了一些常见平台可以使用的选项
* 排错——GCC提供了一些帮助和诊断选项用于帮助我们定位编译过程中出现的问题。
* 编译器相关工具——介绍了 GCC 编译过程中会用到的一些有用的工具。包括用来创建库的 GNU 归档工具 ar，GNU 性能和覆盖率测试程序 gprof 和 gcov
* 编译器是如何工作的——详细介绍了 GCC 是如何把源文件编译为可执行文件的。编译是一个多阶段过程，涉及很多工具，包括 GNU 编译器本身，GNU 汇编器，以及 GNU 链接器。在编译过程中使用的各种工具，我们统称为编译链。
* 检查编译后的文件——介绍了一些用来检查可执行文件和 obj 文件内容的工具。
* 常见错误信息——介绍了 gcc 和 g++ 产生的最常见的错误和告警信息。每种情况都带有原因分析，样例以及建议的解决办法。
* 获取帮助——如果读者遇到了书中没有提到的问题，还有很多介绍GCC和语言的手册可以参考。
本书基于 GNU Free Documentation 协议发布
---
很多 C 语言书籍都可以免费下载，但是可惜的是它们并没有以开源协议来发布，或其基于何种协议并没有明确说明。以下对其进行介绍，排名不分先后：
* 《   C编程导论    （    Introduction to C Programming    ） 》 – 作者 Rob Miles
* 《   新标准 C 语言    （    The New Standard C: An Economic and Cultural Commentary    ） 》– 作者 Derek M. Jones
* 《   使用标准 C 语言进行面向对象编程    （    Object-Oriented Programming with ANSI-C    ） 》– 作者 Axel-Tobias Schreiner
* 《   编写零缺陷的 C 语言代码    （    Writing Bug-Free C Code    ） 》– 作者 Jerry Jongenius
最后，如果你想买一本权威参考书，请认准《   C 程序设计语言    （    The C Programming Language    ） 》。这本书非常简练，不适合新手，但是被奉为经典。