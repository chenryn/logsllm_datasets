will ﬁnd ways to realize them in practice. We are conﬁdent
that this is possible. Security and privacy concerns can be
addressed with oﬀ-the-shelf solutions that already exist and
have been deployed commercially4. Similar to the case of
collaborative downloading [32], we believe that the right in-
centives can be found since (i) there is no penalty for users
from participating — they all save energy, the gains are al-
most balanced, and QoS is preserved as we show later, and
(ii) ISPs or regulators can provide additional incentives if
there is need (e.g., ISPs could temporarily increase a user’s
backhaul capacity to allow large uploads or downloads). Fi-
nally, notice that although we have solved the aggregation
problem in a distributed way, more centralized/coordinated
techniques, potentially involving changes to the gateway, can
be developed for oﬀering strict accountability and strength-
ened security (see e.g., [33, 32]).
4. GREENING THE ISP PART
Aggregation is the key primitive in reducing the consump-
tion at the user part of access networks.
In this section,
we will argue that switching is the key primitive for sav-
ing energy on the ISP part by putting line cards to sleep.
By switching we mean the ability to terminate a customer’s
twisted pair in a modem/line card of choice at the DSLAM
instead of having it always ﬁxed to the same port.
4.1 Problem description
Consider a line card carrying m modems and assume that
in a certain time slot individual gateways terminating in
these modems have traﬃc with probability p (independently
of each other) and with probability 1 − p they don’t, and so
can be powered oﬀ using SoI. Then, the probability that
the entire line card can be put to sleep is (1 − p)m, i.e., it
drops exponentially with the line card size m. This means
that even if instead of continuous traﬃc we had well behaved
burst traﬃc that utilizes a link fully and then leaves it idle
4For example, FON uses double ESSID (one private, one
shared), combined with RADIUS-based WPA authentica-
tion (http://www.fon.com).
for a long period, the probability that a 48 port card can
sleep under just 5% utilization would still be only 8% – i.e.,
it is highly unlikely that line cards will sleep using just SoI.
What can be done to improve this? If we knew in advance
the traﬃc proﬁle of users, i.e., had pi(t) for each user i ∈ U
and each time slot t of the day, we would assign users i and
j to the same line card if their proﬁles were similar (pi ≈ pj )
and to diﬀerent ones otherwise. The rationale is that if a
user is active we would like also the remaining users to be
active (to fully utilize the line card) and the reverse (to be
able to put it to sleep).
The above strategy has several practical problems includ-
ing that pi’s are not known in advance, are changing, and
that traﬃc is not well behaved but rather continuous as
shown in Sec. 2. For these reasons, our proposal is to intro-
duce switching at the HDF for being able to select dynam-
ically based on state (on/oﬀ) the line card/port to which a
line terminates. A full switching capability that allows any
line to terminate at any port can power oﬀ ⌊n·(1−p)/m⌋ line
cards, where n is the total number of ports of the DSLAM.
Percentage wise this is asymptotically equal to the percent-
age of powered oﬀ gateways.
4.2 Our proposal: small k-switches are enough
A full switching capability maximizes the number of line
cards that can be put to sleep but incurs a cost that depends
on n, the number of ports of a DSLAM (can be 1000 or
more). In this section, we argue that much smaller constant
size switches (as low as 8 × 8) suﬃce for getting close to
optimal performance.
We propose to use a series of k-switches each of which gets
k lines from the HDF and terminates them at k modems
at the DSLAM, allowing any mapping between lines and
modems. We connect arbitrary lines to the switch at the
HDF but take care to connect modems that belong to k
diﬀerent line cards at the DSLAM. As a simple convention
(but this is not necessary or constraining), we assume that
line cards are batched in groups of k (as shown in Fig. 5)
and that a given k-switch connects to one modem at each
line card at the same position (e.g., 1th, 2nd, . . ., mth). The
operation of the switch is simple — it checks the state of each
line and when a line is inactive, it maps that line to the next
free modem starting from the ﬁrst line card and going down
until it ﬁnds an unallocated port. Eﬀectively the k-switch
packs the inactive lines on the top part of its k positions and
the active lines on its bottom part. This way, m k-switches
try to batch the active lines on a minimum number of line
cards out of the k that they cover. Of course, unlike with
342a full switching capability, they might fail to do so, e.g., if
there is a switch whose k lines happen to be all active.
Next, we compute the impact of having these switches on
the ability of line cards to power oﬀ through SoI. Assuming
that individual lines are active with probability p indepen-
dent of each other, it is easy to verify that the probability
that the lth line card out of a set of k line cards can be put
to sleep is:
P {lth line card sleeps}
= P {at least l out of k lines at every switch are inactive}
= (P {at least l out of k lines of a switch are inactive})m
= (cid:16)1 − Pl−1
i=0(1 − p)ipk−i(cid:17)m
(2)
We can use Eq. (2) to select how big k needs to be in order
to be able to put a good number of line cards to sleep given
m (property of the line card) and p (performance of BH2
under a given traﬃc load, topology, etc.). Fig. 5 shows that
even very small switches of size k = 4 or 8 are in position
to put to sleep a good number of line cards even in the
case that BH2 is able to turn oﬀ only half of the gateways
(p = 0.5, something that is not at all uncommon according
to the results shown later in Sect. 5.2.2). The above results
are derived assuming independent traﬃc between users but
as we will show experimentally later, such small switch sizes
are indeed suﬃcient for reaping most of the beneﬁts.
4.3 Discussion
Regarding the feasibility and the cost of installing 4- or 8-
switches at the HDF, we note that switches of much greater
size have already been constructed by large vendors, and
used by several ISPs, albeit, for diﬀerent applications than
the one we envision here. For example, switches for Auto-
mated MDF (ADF) are available from companies like Net-
work Automation5 (ranging from k = 20 up to k = 160000)
and Telepath Networks6 (k = 100 up to k = 100000 with ms
switching times). Given that the cost of switching depends
on k, we believe that their cost will be more than covered
by their contribution in achieving great reductions in en-
ergy consumption as we show next. Finally, we note that
the power consumption of the switches themselves is negli-
gible as these provide simple line switching, not datagram
switching, and therefore do not need a packet processor or
other complicated circuitry. They are simple micro-electro-
mechanical relays that operate with near-zero power con-
sumption [34] and have very low manufacturing costs [35].
5. EVALUATION
5.1 Evaluation methodology
Metrics: Our main quantitative evaluation metric is the
total energy savings of the diﬀerent schemes with respect to
a no-sleep operation. Two indicators of performance are the
number of gateways and the number of DSLAM line cards
that each scheme can put to sleep. We also analyze how the
schemes impact on the completion time of the network ﬂows
compared to the no-sleep scheme. As a measure of fairness,
5http://www.networkautomation.se/
cdd9db52-3383-439a-b08e-fe20800e3937-9.html
6http://www.telepathnetworks.com/s.nl/sc.5/
category.22/.f
we also look at the distribution of the sleeping time of the
gateways compared to the basic Sleep-on-Idle scheme.
Traﬃc traces: We use the packet-level wireless traces from
the CRAWDAD repository in [27]. The traces were obtained
during the 24 hours of Thursday, January 11, 2007, by mon-
itoring the activity of the wireless clients in the four-story
UCSD Computer Science building. The traces contain pack-
ets of 272 clients accessing 40 APs. For simplicity we only
consider downlink traﬃc. The dataset is detailed in [36].
Scenario: Since the traces do not contain topology infor-
mation, we use the algorithm proposed in [37] to generate a
wireless overlap topology. The resulting topology has node
degrees that follow the distribution of per-household wire-
less networks in a residential area, as measured in [38]. The
resulting average number of networks in range of a client
is 5.6, consistent with previous studies (e.g., [39]), and also
with our own independent measurements. We uniformly dis-
tribute the 272 clients over the 40 gateways, and assign a
wireless channel capacity of 12 Mbps between a client and
its home gateway, and, based on the ﬁndings in [40], we as-
sign half of that capacity (i.e., 6 Mbps) between a client
and gateways adjacent to the home gateway. As discussed
in Sec. 2.4, we use ADSL speeds of 6 Mbps for consistency
with our residential traces depicted in Fig. 2. On the ISP
side, we consider a single DSLAM with 48 ports distributed
in 4 line cards of 12 ports each. The gateways are con-
nected to the ports randomly, as shown by our analysis of
the distribution of the ADSL attenuations measured at two
production DSLAMs covering more than 2K users in two
major European cities (see Appendix). Since we only have
4 line cards, the k-switch schemes use 12 4-switches, where
the ith 4-switch is connected to the ith port of each line card,
following a conﬁguration similar to the one in Fig. 5.
Power consumption: We performed detailed measure-
ments of the power consumption of a Netgear WNR 3500L
wireless router for diﬀerent loads and distances from the
clients. We obtained an average consumption of 5 W, with
less than 10% of variation across the load range. We also
measured the power consumption of a Telsey CPVA642WA
ADSL gateway, and obtained a consumption of about 9 W
mostly constant across all utilization levels. This implies
that in terms of bits/Joule it is more eﬃcient to operate the
devices at higher utilization levels. We further measured the
power consumption of the DSLAM we used in our experi-
ments (reported later in Sec. 6). The ISAM 7302 datasheet
reports for the shelf a typical consumption of 21 W and 53 W
max. Each DSL line card is reported to consume typically
98 W, and a maximum of 112 W. We use the above ﬁgures
as inputs for our evaluation.
Algorithms for comparison:
No-sleep: Users only connect to their home gateways. Gate-
ways and line cards never go to sleep. This scheme repre-
sents today’s regular residential network operation, and it is
our baseline for comparison.
Sleep on Idle (SoI): Users only connect to their home gate-
ways. Gateways go to sleep after an idle timeout (see below).
When a gateway goes to sleep, the corresponding modem on
the DSLAM also goes to sleep, and if all the modems in a
line card are sleeping, the entire line card is put to sleep.
When new traﬃc arrives there is a wake-up time (also see
below), that includes the time that the gateway, the line
343]
%
[
l
p
e
e
s
−
o
n
i
s
v
s
g
n
v
a
s
y
g
r
e
n
E
100
Optimal
80
60
40
20
0
0
BH2 + k−switch
SoI
SoI + k−switch
5
10
15
Time [h]
20
24
e
n
i
l
n
o
f
o
r
e
b
m
u
N
s
y
a
w
e
a
g
t
40
30
20
10
0
0
SoI
BH2
BH2 w/o
backup
Optimal
5
10
15
20
24
Time [h]
Figure 6: Energy saving vs. not sleeping.
Figure 7: Number of online gateways for the aggregation
schemes.
card (if necessary) and the DSLAM modem take to wake
up, and the time needed for the modem synchronization.
SoI + k-switch: Same as SoI, but DSL lines are connected
to 12 4-switches as described before in the scenario. To pre-
vent the disruption of active ﬂows, the switching operations
happen only when the gateway is being woken-up.
BH2 + k-switch: Users employ the BH2 algorithm described
in Sec. 3.1. We use a low threshold and high threshold of 10%
and 50% respectively. BH2 decides which gateways to use
every 150 s, with a random oﬀset to prevent synchroniza-
tions. When a user is assigned to a new gateway, it routes
all its new traﬃc to the new gateway. However, its existing
ﬂows are not dropped, but remain at the current gateway
until they ﬁnish. If BH2 has to wake up the user’s home gate-
way in order to return to it, the user’s traﬃc remains routed
over the current remote gateway until the home gateway be-
comes operative. Similar to the SoI + k-switch scheme, the
DSL lines are connected to 12 4-switches. Unless explicitly
stated, BH2 refers to the scheme with one backup.
Optimal: Every minute, the optimal assignment of users
to gateways is computed by solving the centralized ILP of
Eq. (1) and assuming that the users’ ﬂows can then instan-
taneously “migrate” to the optimal assignment. Also, the
DSL lines are connected to a full-switch in the DSLAM,
covering all the available ports. Every minute, all the ac-
tive ports are switched optimally to minimize the number of
active line cards. The switching “migrates” all active ﬂows
with zero downtime and no disruption. Note that optimal
is certainly infeasible in practice with current technology,
but represents a useful upper bound of the potential savings
from aggregating traﬃc at the user side and packing active
ports on the DSLAM line cards.
Wake-up time and idle timeout: We measured the wake-
up time using several gateways connected to both commer-
cial ADSL lines and our DSLAMs in the testbed, and we
obtained an average time of 60 s. Note that the ADSL
resynchronization can be as high as 3 minutes in some cases.
Following a similar analysis with [9], we computed the idle
timeout that has a low probability of putting the device to
sleep right before a new packet arrives (and hence paying
the wake-up time penalty). This is justiﬁed by the results
of Fig. 4 showing that even in peak hours, roughly 82% of
the inter-packet gaps are lower than 60 s.
Sensitivity analysis: We performed extensive sensitivity
analysis and selected the parameters that provide the best
performance in a wider range of situations — we tested both
the convergence and stability of the BH2 algorithm under
diﬀerent loads, by scaling up to 3 times up and down the
DSL capacities. We tested a large range of the low threshold
and the high threshold, and selected the ones that provided
a good trade-oﬀ between convergence and stability. In par-
ticular, we saw that 50% utilization in the gateways was an
accurate estimator of a future saturation (given the low load
this does not happen often). Also, a 10% of low threshold
absorbed most of the high frequency changes in load. We
paid special attention to oscillations, and selected the values
that minimized the number of gateway changes, especially
those that required powering on the sleeping gateways. For
the employed traces, executing BH2 every 2.5 minutes and
estimating load over 1-minute intervals achieved this goal.
5.2 Results
We evaluate the performance of the diﬀerent algorithms
over the scenario discussed above using simulation. For each
scheme, we run the experiments 10 times and average the
results for every second of the day. The simulation starts
with all the gateways sleeping.
5.2.1 Energy savings
Fig. 6 shows the energy savings of the diﬀerent schemes
compared to no-sleep for the duration of the day. Some
important observations:
• During oﬀ-peak hours, most schemes can achieve energy
savings greater than 60%. However, optimal can consis-
tently achieve 80% savings compared to no-sleep.
• During peak hours, both SoI and SoI + k-switch schemes
suﬀer considerably, dropping to less than 20%.
• BH2 + k-switch tracks the optimal much better, and
achieves consistently at least 50% savings, even during peak
hours.
• Focusing on SoI and SoI + k-switch, we see that unlike
SoI, the k-switches allow SoI + k-switch to match the perfor-
mance of BH2 + k-switch during oﬀ-peak hours, but become
ineﬀective during peak hours.
5.2.2 The effect of aggregation on the user side
To understand and interpret the above results we look
deeper at gateway aggregation. Fig. 7 shows the number of
active gateways during the course of the day for BH2, SoI
and the optimal aggregation. Also, for the sake of compar-
ison, we show BH2 when one backup is required, and also
when no backup is enabled. The main observations are:
• During oﬀ-peak hours, there is almost no traﬃc in our
dataset so all schemes can carry the traﬃc with 3-4 gateways
online out of the total 40.
• SoI powers on many gateways (up to 95% of them at 15h)
during the peak hours.
• On the contrary, BH2 manages to track closely the optimal
in terms of active gateways, even during peak.
• Using a backup does not penalize performance in terms of
number of active gateways.
The above results verify our main proposition that the
34460
50
40
30
20
10
i
s
g
n
v