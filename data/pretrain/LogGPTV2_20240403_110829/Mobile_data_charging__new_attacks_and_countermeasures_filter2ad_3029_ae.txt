tions and incoming source rates in the tests. Figure 14 plots the
overcharged volume versus different source rates during the ﬁve-
minute Skype spam attack. The charging volume increase is in
proportion to source rates. It implies that, operators do not enforce
any security mechanism for UDP-based services. The spam vol-
ume can consequently grow much larger. We also make an inter-
esting observation. In Operator-I, even though these packets may
not be actually delivered to the UE (e.g., when the weak radio link
cannot afford high-rate source), they are still charged by the opera-
tor. It shows that the operator might charge the mobile users based
on the volume that arrive at them, not the one that they success-
fully delivery to the UE. Figure 15 plots the data volume caused by
Skype stealth spam for various durations, with the source rate being
50kbps. It shows that the overcharge volume grows in proportion
to the spam duration. There is no sign to end even when the attack
has already lasted 24 hours for Operator-I (the overcharge volume
reaches 500+ MB) during our experiments.
We also note that, the attack is still ongoing even after the victim
signs out from Skype. The Wireshark trace at the victim side (see
Figure 16) indicates that, spam packets still arrive at the UE and
are charged by the operator after the UE logs out Skype. In the
trace, the message of ICMP Port Unreachable shows that the UE
has closed this application port after Skype logout.
In addition to Skype, this spam can be launched via Google Talk.
The attacker also makes a call before the victim accepts it to trap
the mobile user. The performance is similar; we omit it due to
lack of space. Note that, the Skype/GTalk-based attack is a re-
sult of both 3G charging system vulnerability and Skype/GTalk im-
plementation. The operator exposes the vulnerabilities at the ﬁrst
place, which still charges incoming spam packets that mobile appli-
cation do not accept. The root cause is still that there is no feedback
mechanism in the 3G charging system to tear down suspicious or
malicious ﬂows for mobile users. The Skype or other VoIP im-
plementation (to release access information without explicit user
conﬁrmation) is exploited to mount this attack. Once you accept
invitations from strangers or your buddies are compromised, you
are vulnerable to this overcharging attack whenever you go online.
• Spam attack in video streaming
Other channels exist to
launch stealth spam attack in UDP-based services. Video stream-
ing is another example. To trap the victim, the attacker can create
a malicious link to redirect Web-browsing operations to start a re-
altime video streaming. For example, the victim may click one
phishing link which redirects the victim’s browser to:
rtsp://*.*.1.204:554/trackID=5,
202Figure 16: Wireshark traces at the victim after logout from
Skype.
where RTSP is a network protocol to support video streaming [31].
Once the link is clicked, the victim automatically starts a new RTSP
(over UDP) session running on port 554 and releases its conﬁden-
tial access information to the attacker. Once completed, the attacker
blasts spam packets. We implement this attack and test it. We ﬁnd
that it performs similarly to Skype spam attack since both run on
the top of UDP. We omit it due to lack of space. In both cases,
UDP-based spam can inject an arbitrarily large volume of trafﬁc
and force the UE to pay more.
In summary, we have demonstrated that the stealthy spam attack
is a real threat to mobile users. The attack is rooted in the inher-
ent loopholes in the current charging architecture. Unless these
loopholes are ﬁxed, mobile users may always be victims when the
stealth attack or more sophisticated attacks built on it are launched.
On the other hand, the good news for mobile users is that, there is
no obvious and strong incentive for attackers to launch such attacks
now. Attackers cannot have immediate gains for themselves, unless
an ill-intentioned operator contracts hackers to attack its own users
for larger revenue gain or attack users in its competitor’s network
for unexpected user complaints, or a disgruntled attacker uses it
to incur large monetary loss against his adversary. However, we
quickly admit that incentive is an independent and interesting topic
to study. Attackers may come up with unexpected incentives to
launch more sophisticated attacks in this category in the future.
5.4 Remedy for Architecture Weakness
The fundamental problem underlying the stealth spam attack is
that, there is no feedback mechanism from the UE to the carrier’s
charging system. So the operator cannot block unwelcome trafﬁc
based on the UE’s feedback. This is an inherent design limitation
in the current 3G/4G charging system. The IP-based push model
makes spam attack easy. Any one can send to the UE without prior
consent. Given the current architecture weakness, a viable charg-
ing system must have the following three components: (1) The mo-
bile user himself must be aware of such potential attacks and apply
precaution measures. He can simply limit the size of any automatic
downloaded data (such as email fetching); (2) The UE must be able
to detect unwanted trafﬁc and send feedback. The current protocols
at the network layer and the transport layer are designed with such
feedback. However, many applications ignore unwanted data (e.g.,
Skype does so) in general. This has to be ﬁxed to make them suit-
able to run over a metered charging service; (3) The carriers must
take feedback from the UE to stop unwanted trafﬁc.
Speciﬁcally, regarding the feedback mechanisms from the UE,
we propose three solution options:
implicit-block, explicit-allow
and explicit-stop. The implicit-block solution is to enforce the CN
components such as GGSN and NAT boxes. It uses implicit hints
from the UE to justify whether the ongoing trafﬁc is welcome or
not. Once the trafﬁc is unwanted, the CN blocks this ﬂow and stops
charging. The key issue is what messages can serve as hints on
whether the UE’s data packets are still wanted or not. For TCP-
based service, TCP-RESET messages are sent from the UE if the
the corresponding TCP connection is torn down earlier by the UE.
Our study shows that, mobile Web browsers start to send TCP RE-
SET messages upon receiving unintended TCP packets one-minute
after they send the FIN signals. In case of UDP-based service, the
UE responds a ICMP Port Unreachable message to the external
sender upon receiving UDP packets on those closed ports. There-
fore, messages of TCP-RESET and ICMP-Port-Unreachable can
serve as the hints for the CN. To make correct decision, the CN
can further exchange this information with the UE and seek conﬁr-
mation from the mobile user. Using these implicit feedbacks, the
CN should effectively disable the suspicious ﬂows delivered to the
UE. A downside of this solution is that, it takes effects only if the
UE explicitly tear downs the service (e.g., quitting an application,
terminating a TCP connection).
In the explicit-allow remedy, the UE explicitly speciﬁes which
packets are anticipated by adding/modifying the Packet Filters of
Trafﬁc Flow Template (TFT) associated with its PDP context. It
can be done using MS-Initiated PDP Context Modiﬁcation Pro-
cedure deﬁned by 3GPP [15]. The attributes of the packet ﬁlter
include [15]: (1) remote address; (2) local address; (3) protocol
number, i.e., IPv4; (4) local port range; and (5) remote port range,
etc. By adding packet ﬁlters, the UEs may not suffer from large
spam attack when they are trapped or cheated to receive unexpected
packets. One possible downside is that, it requires the UE to be
fully aware of what it intends to send/receive. It requires detailed
domain knowledge on various applications and services.
The explicit-stop solution is to provide explicit feedback from
the UE to the carrier when closing some data services. Once the
phone detects that there exists any malicious or suspicious ﬂow, it
immediately reports to the core network and asks to block such a
ﬂow. The spam ﬂow can be detected by mobile anti-malware soft-
ware, or identiﬁed by mobile applications or systems software (e.g.,
an exception is issued when the application layer or a lower layer in
the protocol stack discards a large number of packets). Malicious
attackers can also be detected through the collaboration of many
phones [20]. This solution framework is ﬂexible enough to inte-
grate with different detection options. It also allows for the UE to
stop data charging at any time, even when the UE was cheated or
unaware of the attack at the start of the service. Its downside is that,
current 3G/4G standards do not offer such mechanisms.
6. RELATED WORK
In recent years, security analysis on mobile devices has been an
active research area (see [23, 24, 26, 36] for a few samples of the
early work). Most of these studies focus on various types of mo-
bile malware on various platforms of iOS, Android and Symbian,
including virus [20, 26], spams such as SMS and making premium
calls [23], DoS attacks [21, 27, 35], phishing [36], and privacy in-
trusion [24], etc. [33] has explored that unwanted trafﬁc can cause
large-scale wastage of logical resources in cellular networks. Our
work uses real experiments to demonstrate that unwanted trafﬁc can
be cast to mobile victims and increase their payment. Certain types
of these mobile malware such as viruses and SMS/MMS spams can
also be used to incur overcharging attack as a byproduct. Despite
these early efforts, security assessment of accounting system in the
3G/4G cellular networks remains a largely unaddressed topic. In
this work, we provide the ﬁrst experimental study that assesses the
vulnerability, as well as new practical attacks, on the 3G/4G ac-
counting system. We expose limitations in its charging architecture
and loopholes in its policy practice. Both types of attacks described
in this paper are also novel in 3G/4G security research.
Despite the popularity of 3G/4G data services, mobile data
charging research (including pricing, accounting, billing) is still in
its infancy. [22] provides a nice tutorial on pricing, charging, and
billing methods for 3G systems up to 2005. [34] offers recent sur-
203vey on pricing models, which are orthogonal to the accounting is-
sue studied in this paper. [30] studies various cases of overcharging
and undercharging in 3G networks but not from the security per-
spective. Finally, we note that several tools such as iodine, dns2tcp
and NSTX [8] have been designed to circumvent data charging by
wired Internet service providers. They are similar to our toll-free-
data service approaches in principle, and we show that such ideas
also work in wireless cellular networks.
7. CONCLUSION
The Internet is going wireless and mobile. Two driving forces
for this trend have been the explosive growth of smartphones and
the rapid deployment of 3G/4G infrastructure. Unlike the wired In-
ternet, cellular networks have implemented usage-based charging,
rather than the simpler ﬂat-rate charging. The 3G/4G standards
stipulate the accounting architecture, yet provide freedom for car-
riers to deﬁne their own charging policy. In this work, we conduct
experiments on operational 3G networks to study the security im-
plication of such an architecture and practice. We have discovered
loopholes and showcased simple attacks, which are validated by
experiments over two operational 3G networks.
Our study yields some insights. On the policy side, differential
charging seems to be a popular practice for mobile data services.
Given a metered charging system, people necessarily have incen-
tives to exploit and abuse any transfer that is free. There is no
simple, bullet-proof solution except eliminating the free service. In
the more general problem setting, as long as differential charging
exists among applications and services, attackers have incentives to
abuse transfers that charge less. The free service simply exempli-
ﬁes an extreme case. While the toll-free-data attack seems to be
readily ﬁxed, we believe that more fundamental issues need to be
addressed in the long run. The current 3G/4G accounting architec-
ture lacks proper validation and veriﬁcation on the traversing trafﬁc
types and content, when offering differential charging for applica-
tions. The scalability of the associated security design also needs
to be considered because of the increasing trafﬁc diversity and vol-
ume, as well as the large user population. On the architecture side,
the charging system records the data volume on behalf of users, but
does not take any user feedback when making charging decisions.
So the carrier cannot block unwelcome trafﬁc by using feedback
from users. The IP-based push model makes spam attack easier.
Anyone can send to the UE without prior consent. Consequently,
as conﬁrmed by our experiments, victims may be charged for what
they never anticipate, and attackers get data services they never pay.
Given the current architecture weakness, a dependable, usage-
based charging system calls for concerted renovations among the
network, the mobile device, and applications. The mobile user him-
self must be aware of such threats and apply precaution measures.
The UE must be able to detect unwanted trafﬁc and send feedback.
Many applications lack such feedback mechanisms and simply ig-
nore unwanted data, e.g., in the case of Skype. This must be ﬁxed
to make them suitable to run over a metered charging service. The
operators must take feedback from the UE to stop unwanted trafﬁc,
and such feedback has to be carefully validated. The network also
needs appropriate trafﬁc validation and veriﬁcation when making
differential charging decisions for different applications and ser-
vices. This work describes our current effort along this direction.
We hope our preliminary study will stimulate further research on
this important topic from both academia and industry.
Acknowledgment
We greatly appreciate the insightful comments and constructive
feedback from the anonymous reviewers.
8. REFERENCES
[1] AndFTP - LYSESOFT, v2.9.8. http://www.lysesoft.com.
[2] DNSSEC. http://www.dnssec.net/.
[3] Fast and Free Facebook Mobile Access with 0.facebook.com.
https://www.facebook.com/blog/blog.php?post=391295167130.
[4] Free Fast Public DNS Servers List.
http://theos.in/windows-xp/free-fast-public-dns-server-list/.
[5] Free Gprs Mobile Tricks.
http://darkwap.mobi/gprs-tricks/Free-Gprs-Mobile-Tricks.
[6] FreeProxy, v4.1. http://www.handcraftedsoftware.org/.
[7] Iodine. http://code.kryo.se/iodine/.
[8] IP Tunneling Through Nameservers.
http://slashdot.org/story/00/09/10/2230242/ip-tunneling-through-
nameservers.
[9] MobileMe. http://www.apple.com/mobileme/.
[10] NSTX. http://thomer.com/howtos/nstx.html.
[11] Opera Mobile, v12.0.0. http://www.opera.com/mobile/.
[12] ProxyDroid, v2.6.1.
https://play.google.com/store/apps/details?id=org.proxydroid.
[13] Skype. http://www.skype.com.
[14] TrafﬁcStats. http://developer.android.com.
[15] 3GPP. TS23.060: GPRS; Service description; Stage 2, Dec. 2006.
[16] 3GPP. TS23.125: Overall High Level Functionality and Architecture
Impacts of Flow Based Charging, Mar 2006.
[17] 3GPP. TS32.240:Telecommunication management; Charging
management; Charging architecture and principles, Sep. 2006.
[18] 3GPP. TS25.301: Radio Interface Protocol Architecture, 2008.
[19] G. America. Global 3G Deployments UMTS HSPA HSPA+, 2010.
[20] J. Cheng, S. H. Wong, H. Yang, and S. Lu. Smartsiren: virus
detection and alert for smartphones. In ACM MobiSys, 2007.
[21] W. Enck, P. Traynor, P. McDaniel, and T. La Porta. Exploiting open
functionality in sms-capable cellular networks. In ACM CCS, 2005.
[22] Z. Ezziane. Charging and Pricing Challenges for 3G systems. IEEE
Communications Surveys and Tutorials, 7(1-4):58–68, 2005.
[23] A. P. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wagner. A survey
of mobile malware in the wild. In Proceedings of SPSM’11, 2011.
[24] C. Guo, H. Wang, and W. Zhu. Smartphone attacks and defenses. In
ACM HotNets-III, 2004.
[25] H. Holma and A. Toskala. LTE for UMTS: Evolution to
LTE-Advanced. Wiley, 2011.
[26] N. Leavitt. Mobile phones: The next frontier for hackers? IEEE
Computer, 38(4):20–23, 2005.
[27] P. P. C. Lee, T. Bu, and T. Woo. On the Detection of Signaling DoS
Attacks on 3G/WiMax Wireless Networks. Computer Networks,
53(15):2601–2616, Oct. 2009.
[28] mobiThinking. Global Mobile Statistics 2012.
http://mobithinking.com/mobile-marketing-tools/latest-mobile-stats.
[29] OECD. Nearly Two-Thirds of US Broadband Subscribers are
Wireless. http://www.websiteoptimization.com/bw/1012/.
[30] C. Peng, G. hua Tu, C. yu Li, and S. Lu. Can We Pay for What We
Get in 3G Data Access? In ACM MOBICOM, 2012.
[31] RFC2326: Real Time Streaming Protocol (RTSP), 1998.
[32] RFC5966: DNS Transport over TCP - Implementation
Requirements, 2010.
[33] F. Ricciato, P. Svoboda, E. Hasenleithner, and W. Fleischer. On the
Impact of Unwanted Trafﬁc onto a 3G Network. In SecPerU’06,
2006.
[34] S. Sen, C. Joe-Wong, S. Ha, and M. Chiang. Pricing Data: A Look at
Past Proposals, Current Plans, and Future Trends. CoRR,
abs/1201.4197, 2012.
[35] P. Traynor, M. Lin, M. Ongtang, V. Rao, T. Jaeger, P. McDaniel, and
T. La Porta. On Cellular Botnets: Measuring the Impact of Malicious
Devices on a Cellular Network Core. In ACM CCS, 2009.
[36] D. S. Wallach. Smartphone security: Trends and predictions. In
Secure Application Development, SecAppDev, 2011.
[37] Z. Wang, Z. Qian, Q. Xu, Z. Mao, and M. Zhang. An Untold Story of
Middleboxes in Cellular Networks. In SIGCOMM, 2011.
[38] WireShark. http://www.wireshark.org/.
204