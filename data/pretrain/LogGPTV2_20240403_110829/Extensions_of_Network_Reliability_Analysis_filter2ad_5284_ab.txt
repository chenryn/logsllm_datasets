in the estimate itself. To address this problem, an approach that
does not require heavy modiﬁcation to the current formalism is
to deﬁne the model parameter pi to be within a bound rather
than to be a ﬁxed number. It was shown that if a Bernoulli
UG is monotone then its reliability with respect to a source
and destination vertex (Section IV-B) is also bounded by two
numbers, both of which we readily know how to compute [19].
The bound approach provides a simple way to incorporate
more uncertainty into the model parameter, however it does
not assume any distribution over the speciﬁed interval. Given
more information, the modeler may be able to infer that within
a bound, the parameter is more likely to take a certain value
than another. Information of such a kind implicitly assumes
that the parameter follows a certain probability distribution.
In the context of UGs, we look for a mean to express the
uncertainty about pi’s using probability distributions.
The extended UG formalism readily lends itself to model-
ing under this emerging situation, simply by switching from
Bernoulli random variables to random variables of any kind,
as long as their supports lie on [0, 1]. The classical choice is
the two-parameter Beta random variables (or Betas in short),
which gives rise to the class of Beta uncertain graphs. A Beta
UG is formally deﬁned as a tuple G = (V,E,X , φ) where
V = {V1, V2, . . . , Vn} and E = {E1, E2, . . . , Em} are the set
of vertices and edges, Xi’s are Beta random variables, i.e.
Xi ∼ Beta(ai, bi) where ai, bi > 0 are the shape parameters,
and φ : E → X ∪ ¬X is the assignment function deﬁned
as before. Selected properties of Beta distributions are given
in Appendix A. As we use Xi for the probability that some
event happens, we use ¬Xi for the probability that such
event does not happen, or ¬Xi = 1 − Xi. Moreover,
if
Xi ∼ Beta(ai, bi) then ¬Xi is also Beta distributed according
to ¬Xi ∼ Beta(bi, ai). Similar to Bernoulli UGs, we call a
Beta UG monotone if the assignment function is restricted to
φ : E → X .
(cid:4)
Given a sampling X1 = p1, X2 = p2, . . . , Xr = pr,
the Beta UG G becomes a Bernoulli UG H = (V,E,
G, (cid:4)X = {(cid:4)
(cid:4)
(cid:4)
φ)
where V and E are the same vertex and edge set as in
Xi = 1) =p i and (cid:4)
(cid:4)
Xr} is the set of Bernoulli random
that for all E ∈ E if φ(E) = Xi then (cid:4)
(cid:4)
φ(E) =¬ Xi then (cid:4)
φ(E) =¬ (cid:4)
φ mirrors φ such
Xi, and if
Xi. For this reason, we can
think of Beta UGs as generative models of Bernoulli UGs.
Speciﬁcally, G generates H with joint density function
r(cid:2)
variables where P r(
(cid:4)X ,
φ(E) =
X1,
X2, . . . ,
wG(H) =
fXi (pi)
i=1
where fXi is the pdf of Xi (Appendix A). To emphasize how
G is realized into H, we ﬁnd it convenient to use the notion
of conditional probability and write
H ≡ (G|X1 = p1, X2 = p2, . . . , Xr = pr).
(3)
IV. RELIABILITY
Our primary interest in UGs as a network modeling tool is
to study the two-terminal reliability problem (also known as S-
T CONNECTEDNESS in [23] and Conn2(G) in [4]). We start
this section with the deﬁnition of reliability of deterministic
graphs (Section IV-A), then extend it to the case of Bernoulli
UGs (Section IV-B) and to Beta UGs (Section IV-C). In doing
so, the reliability metric takes the form of a binary number, a
real number in [0, 1], and ultimately a full-ﬂedged probability
distribution.
90
A. Deterministic graphs
Let G = (V,E) be a deterministic graph, the reliability of
G, with respect to a source vertex s and destination vertex t,
is deﬁned as a binary number
(cid:5)
Rs,t(G) =
1,
0,
if there is a path from s to t in G,
otherwise.
The two vertices s and t remain mostly unchanged throughout
the paper. When the context is clear, we will drop them from
the problem description.
B. Bernoulli uncertain graphs
Let G = (V,E,X , φ) be a Bernoulli UG, the reliability of
G is deﬁned as the reliability of an average possible world
G in G weighted by its probability. By iterating through each
possible world of G, its reliability can be computed as
Rs,t(G) =
wG(G) Rs,t(G)
(4)
(cid:6)
G∈G
where wG(G) is deﬁned in Equation 2.
We obtain an equivalent expression by iterating over each
subset of X . For any X (cid:2) ⊆ X , let E(cid:2) be the subset of E
= {Ei ∈ E : φ(Ei) ∈ X (cid:2) or ¬φ(Ei) ∈ X\X (cid:2)}.
deﬁned as E(cid:2)
In words, E(cid:2) is the set of edges in E that exist when (i) the
random variables in X (cid:2) evaluate to one and (ii) those in X\X (cid:2)
evaluate to zero. Let GX (cid:2) = (V,E(cid:2)
) be the deterministic graph
constructed from E(cid:2), GX (cid:2) is a possible world of G generated
with probability
(cid:2)
(cid:2)
(1 − pj).
wG(GX (cid:2) ) =
pi
Xi∈X (cid:2)
Xj∈X\X (cid:2)
The reliability of G can be written as
Rs,t(G) =
wG(GX (cid:2) ) Rs,t(GX (cid:2) )
(cid:2)
⎛⎝ (cid:2)
X (cid:2)∈2X
(cid:6)
(cid:6)
=
X (cid:2)∈2X
Xi∈X (cid:2)
pi
Xj∈X\X (cid:2)
(1 − pj) Rs,t(GX (cid:2) )
(5)
X is the powerset of X . Sometimes, it is easier to
where 2
compute the reliability using Equation 5 than using Equation
4, especially when there are many fewer random variables than
edges. For other methods to compute or bound the reliability
using cut sets and path sets, please refer to [4].
By adopting Equation 5, the reliability of Beta UG can be
C. Beta uncertain graphs
(cid:6)
⎛⎝ (cid:2)
shown to be
Rs,t(G) =
(cid:2)
X (cid:2)∈2X
Xi∈X (cid:2)
Xi
Xj∈X\X (cid:2)
(1 − Xj)Rs,t(GX (cid:2) )
(6)
which is a multivariate polynomial where each variable Xi
is a Beta. A direct implementation of Equation 6 is given in
Algorithm 1. Using the algorithm, the reliability polynomial
91
⎞⎠
⎞⎠ ,
Algorithm 1 Generating the reliability polynomial of a Beta
uncertain graph.
Input: G = (V,E,X , φ), s, t
Output: Rs,t
1: function GENERATERELPOLYNOMIAL(G, s, t)
Rs,t ← 0
for X (cid:2) ∈ 2
X do
E(cid:2) ← {Ei ∈ E : φ(Ei) ∈ X (cid:2) or ¬φ(Ei) /∈ X (cid:2)}
GX (cid:2) ← (V,E(cid:2)
if s reaches t in GX (cid:2) then
)
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
w = 1
for Xj ∈ X do
w ← wXj
w ← w(1 − Xj)
if Xj ∈ X (cid:2) then
else
Rs,t ← Rs,t + w
return Rs,t
of the Beta UG in Figure 1 can be computed as follows (after
simpliﬁcation)
Rs,t(G) = X1X2 + X4X5 + X1X3X5 − X1X2X3X5−
X1X2X4X5 − X1X3X4X5 + X1X2X3X4X5. (7)
The reliability polynomial of a Beta UG depends not only on
the structure of the graph but also on its assignment function.
Reusing the example in Figure 1, if we assign X1 to edge (s, b)
instead of X4 and call this new Beta UG G(cid:2), then the reliability
polynomial of G(cid:2) is Rs,t(G(cid:2)
) = X1X2 + X1X5 − X1X2X5,
which is not the same as the one obtained by replacing every
occurrence of X4 by X1 in Equation 7.
V. PROPERTIES OF RELIABILITY POLYNOMIALS
A. Recursive form
Inspired by Moskowitz’s factor theorem [16], a reliability
polynomial can be written in a recursive form, which can be
easier to analyze than the explicit form in Equation 6. Under
the recursive form, a reliability polynomial is computed from
two other reliability polynomials of lower degrees. Speciﬁcally,
for any Xi ∈ X , the reliability polynomial in Equation 6 can
be written as
Rs,t(G) = (1 − Xi)Rs,t(G|Xi = 0) + XiRs,t(G|Xi = 1)
where G|Xi = 0 and G|Xi = 1 denote the original UG G
conditioned on Xi = 0 and Xi = 1, respectively. In particular,
if G is monotone then G|Xi = 0 is the Beta UG in which every
edge associated with Xi does not exist; in contrast, G|Xi = 1
is the Beta UG in which every edge associated with Xi exists
with certainty. We simplify the notation by writing
Y = (1 − Xi)Pi + XiQi
(8)
where the subscript i signiﬁes that both Pi and Qi depend
on the choice of Xi. For example, by conditioning on X3,
the reliability polynomial in Equation 7 can be rewritten as
Y = (1 − X3)P3 + X3Q3 where P3 and Q3 are reliability
polynomials deﬁned as
P3 = X1X2 + X4X5 − X1X2X4X5,
Q3 = X1X2 + X4X5 + X1X5 − X1X2X5 − X1X4X5.
(9)
While the bounds on Y ’s raw moments in Equation 14 are
usually tighter than those in Equation 15, the bounds in
Equation 15 only rely on Xj’s and hence can be directly
computed.
(10)
5) Given a Beta UG G, let
H = (G|X1 = EX1, X2 = EX2, . . . , Xr = EXr)
be the Bernoulli UG obtained by evaluating each Beta
random variable to its expected value, we have
EY = Rs,t(H).
(16)
In words, the expected value of the reliability polynomial
of G is the reliability of a special Bernoulli UG constructed
from it. This follows from the linearity of expectation and
the independence of Xi in a product term appearing in
Rs,t(H).
6) Let Var denote the variance of a random variable, we have
Var(Y |Xi = EXi) = VarY − VarXiE(Qi − Pi)
2
.
(17)
Equation 17 shows us the impact of removing the variance
of Xi (i.e. by equating Xi to its expected value) on the
reduction in the variance of Y . This result can be extended
as follows. Let Xi ∼ Beta(ai, bi) and deﬁne a new random
variable Xi(λ) ∼ Beta(λai, λbi) whose expected value is
the same as Xi’s but whose variance can be either smaller
than, equal to, or larger than Xi’s, depending on the choice
of λ >0. Let Yi(λ) = (Y |Xi = Xi(λ)), we have
VarYi(λ) =Var Y − (VarXi − VarXi(λ))E(Qi − Pi)
2
.
C. Beta approximation
Except for Beta UGs of small sizes, studying the reliability
distribution via its reliability polynomial is analytically in-
tractable for two reasons. First, deriving a closed-form expres-
sion for the distribution requires multiple levels of integration
involving the Gamma functions, which is not easy. Second,
the size of a reliability polynomial increases exponentially
with the number of random variables r according to Equation
6. An alternative, which avoids dealing with the complexity
of generating and/or integrating reliability polynomials, is to
construct the empirical reliability distributions by sampling the
Beta UGs. This method works by ﬁrst sampling a Bernoulli
UG from the Beta UG according to Equation 3, then either
(i) computing the reliability of the Bernoulli UG using the
reliability polynomial if the graph is relatively small, or (ii)
estimating the reliability of the Bernoulli UG, again, using
sampling if the graph is large. Given enough samples, the
empirical reliability distribution can be constructed. We used
this method to examine the reliability distributions of small to
medium Beta UGs. In doing so, we observed that under a wide
range of settings, the reliability distribution of a monotone
Beta UG can be approximated by another Beta distribution,
usually with high accuracy. For convenience, we restate the
observation formally in the form of a hypothesis.
Hypothesis 1 Let Y be the reliability polynomial of a mono-
tone Beta UG. There exists a random variable X ∼ Beta(a, b)
whose pdf (or cdf) is sufﬁciently close to the pdf (or cdf) of
Y .
B. General properties
Selected properties of Y , Pi, and Qi are presented below,
where some of which only hold for reliability polynomials of
monotone Beta UGs.
1) As seen from Equation 6, Y, Pi, Qi are multi-afﬁne polyno-
mials, i.e. multivariate polynomials in which each variable
has degree at most one. Furthermore, deg(Y ) ≥ deg(Pi)
and deg(Y ) ≥ deg(Qi) and equality only happens in
degenerate cases.
2) Pi and Qi only contain variables in X\{Xi}, therefore
(Pi, Qi) is independent of Xi, meaning P r(Pi = u, Qi =
v, Xi = x) =P r (Pi = u, Qi = v)P r(Xi = x). However,
Pi and Qi are usually jointly distributed.
3) For any two random variables A and B, we say A is
stochastically larger than B, denoted as A ≥st B,
if
FA(u) ≤ FB(u) for all u, where FA and FB are the cdfs of
A and B. IfY is the reliability polynomial of a monotone
Beta UG, then
Qi ≥st Y ≥st Pi
(11)
because Qi is obtained from Y by Xi = 1 and Pi from Y
by Xi = 0, in the former case increasing the probability of
edges dependent on Xi, in the later case decreasing them.
This result can be extended as follows. Let Ep ⊆ E be a
minimal path set from s to t and Ec ⊆ E a minimal cut
set between s and t, deﬁne two sets of random variables
Xp = ∪E∈Ep φ(E) and Xc = ∪E∈Ec φ(E), we have
1 −
(1 − Xj) ≥st Y ≥st
Xj.
(12)
(cid:2)
Xj∈Xp