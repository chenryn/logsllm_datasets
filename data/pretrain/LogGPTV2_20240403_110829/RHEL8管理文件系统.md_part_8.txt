:::
::: section
::: titlepage
# []{#exporting-nfs-shares_managing-file-systems.html#enabling-nfs-over-rdma-nfsordma_exporting-nfs-shares}通过 RDMA(NFSoRDMA)启用 NFS {.title}
:::
如果存在支持 RDMA 的硬件，远程直接内存访问(RDMA)服务会在 Red Hat
Enterprise Linux 8 中自动正常工作。
::: orderedlist
**流程**
1.  安装 `rdma-core`{.literal} 软件包：
    ``` screen
    # yum install rdma-core
    ```
2.  要启用自动载入 NFSoRDMA [*服务器*]{.emphasis} 模块，请在
    `/etc/rdma/rdma.conf`{.literal} 配置文件的新行中添加
    `SVCRDMA_LOAD=yes`{.literal} 选项。
    `/etc/nfs.conf`{.literal} 文件的 `[nfsd]`{.literal} 部分中的 The
    `rdma=20049`{.literal} 选项指定 NFSoRDMA 服务侦听客户端的端口号。RFC
    5667 标准指定服务器在通过 RDMA 提供 NFSv4 服务时，必须侦听端口
    `20049`{.literal}。
    `/etc/rdma/rdma.conf`{.literal} 文件包含一行，默认设置
    `XPRTRDMA_LOAD=yes`{.literal} 选项，该选项会请求 `rdma`{.literal}
    服务加载 NFSoRDMA [*客户端*]{.emphasis} 模块。
3.  重启 `nfs-server`{.literal} 服务：
    ``` screen
    # systemctl restart nfs-server
    ```
:::
::: itemizedlist
**其它资源**
-   RFC5667 标准：
    [https://tools.ietf.org/html/rfc5667](https://tools.ietf.org/html/rfc5667){.link}。
:::
:::
::: section
::: titlepage
# []{#exporting-nfs-shares_managing-file-systems.html#configuring-an-nfsv4-only-server_exporting-nfs-shares}配置只使用 NFSv4 的服务器 {.title}
:::
作为 NFS 服务器管理员，您可以将 NFS 服务器配置为仅支持
NFSv4，这可最大程度减少开放端口的数量并在系统上运行服务。
::: section
::: titlepage
## []{#exporting-nfs-shares_managing-file-systems.html#benefits-and-drawbacks-of-an-nfsv4-only-server_configuring-an-nfsv4-only-server}只使用 NFSv4 的服务器的好处和缺陷 {.title}
:::
这部分论述了将 NFS 服务器配置为只支持 NFSv4 的优点和缺陷。
默认情况下，NFS 服务器在 Red Hat Enterprise Linux 8 中支持 NFSv3 和
NFSv4 连接。但是，您还可以将 NFS 配置为只支持 NFS 版本 4.0
及更新的版本。这可最小化打开端口的数量并在系统上运行服务，因为 NFSv4
不需要 `rpcbind`{.literal} 服务侦听网络。
当您的 NFS 服务器配置为只使用 NFSv4 时，尝试使用 NFSv3
挂载共享的客户端会失败，并显示类似如下的错误：
``` screen
Requested NFS version or transport protocol is not supported.
```
另外，您还可以禁用 `RPCBIND、MOU`{.literal} `NT`{.literal} 和
`NSM`{.literal} 协议调用的监听，这在仅 NFSv4 的情况下不需要。
禁用这些额外选项的影响有：
::: itemizedlist
-   试图使用 NFSv3 从服务器挂载共享的客户端变得无响应。
-   NFS 服务器本身无法挂载 NFSv3 文件系统。
:::
:::
::: section
::: titlepage
## []{#exporting-nfs-shares_managing-file-systems.html#configuring-the-nfs-server-to-support-only-nfsv4_configuring-an-nfsv4-only-server}将 NFS 服务器配置为只支持 NFSv4 {.title}
:::
这个步骤描述了如何配置 NFS 服务器来支持 NFS 版本 4.0 及更新的版本。
::: orderedlist
**流程**
1.  通过在 `/etc/nfs.conf`{.literal} 配置文件的 `[nfsd]`{.literal}
    部分添加以下行来禁用 NFSv3：
    ``` screen
    [nfsd]
    vers3=no
    ```
2.  （可选）禁用对 `RPCBIND`{.literal}、`MOUNT`{.literal} 和
    `NSM`{.literal} 协议调用的监听，仅 NFSv4
    情况下不需要这些调用。禁用相关服务：
    ``` screen
    # systemctl mask --now rpc-statd.service rpcbind.service rpcbind.socket
    ```
3.  重启 NFS 服务器：
    ``` screen
    # systemctl restart nfs-server
    ```
:::
一旦启动或重启 NFS 服务器，这些改变就会生效。
:::
::: section
::: titlepage
## []{#exporting-nfs-shares_managing-file-systems.html#verifying-the-nfsv4-only-configuration_configuring-an-nfsv4-only-server}验证只读 NFSv4 配置 {.title}
:::
这个步骤描述了如何使用 `netstat`{.literal} 工具验证您的 NFS 服务器是否以
NFSv4 模式配置。
::: itemizedlist
**流程**
-   使用 `netstat`{.literal} 工具列出侦听 TCP 和 UDP 协议的服务：
    ``` screen
    # netstat --listening --tcp --udp
    ```
    ::: example
    []{#exporting-nfs-shares_managing-file-systems.html#idm139716087635360}
    **例 4.3. 只输出 NFSv4 服务器**
    ::: example-contents
    以下是仅 NFSv4 服务器上 `netstat`{.literal} 输出示例；也禁用侦听
    `RPCBIND`{.literal}、`MOUNT`{.literal} 和
    `NSM`{.literal}。在这里，`nfs`{.literal} 是唯一侦听 NFS 服务：
    ``` screen
    # netstat --listening --tcp --udp
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address           Foreign Address         State
    tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN
    tcp        0      0 0.0.0.0:nfs             0.0.0.0:*               LISTEN
    tcp6       0      0 [::]:ssh                [::]:*                  LISTEN
    tcp6       0      0 [::]:nfs                [::]:*                  LISTEN
    udp        0      0 localhost.locald:bootpc 0.0.0.0:*
    ```
    :::
    :::
    ::: example
    []{#exporting-nfs-shares_managing-file-systems.html#idm139716104145808}
    **例 4.4. 配置只读 NFSv4 服务器前的输出**
    ::: example-contents
    相比之下，在配置 NFSv4 服务器前，net `stat`{.literal} 输出中包含
    `sunrpc`{.literal} 和 `mountd`{.literal} 服务：
    ``` screen
    # netstat --listening --tcp --udp
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address           Foreign Address State
    tcp        0      0 0.0.0.0:ssh             0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:40189           0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:46813           0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:nfs             0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:sunrpc          0.0.0.0:*       LISTEN
    tcp        0      0 0.0.0.0:mountd          0.0.0.0:*       LISTEN
    tcp6       0      0 [::]:ssh                [::]:*          LISTEN
    tcp6       0      0 [::]:51227              [::]:*          LISTEN
    tcp6       0      0 [::]:nfs                [::]:*          LISTEN
    tcp6       0      0 [::]:sunrpc             [::]:*          LISTEN
    tcp6       0      0 [::]:mountd             [::]:*          LISTEN
    tcp6       0      0 [::]:45043              [::]:*          LISTEN
    udp        0      0 localhost:1018          0.0.0.0:*
    udp        0      0 localhost.locald:bootpc 0.0.0.0:*
    udp        0      0 0.0.0.0:mountd          0.0.0.0:*
    udp        0      0 0.0.0.0:46672           0.0.0.0:*
    udp        0      0 0.0.0.0:sunrpc          0.0.0.0:*
    udp        0      0 0.0.0.0:33494           0.0.0.0:*
    udp6       0      0 [::]:33734              [::]:*
    udp6       0      0 [::]:mountd             [::]:*
    udp6       0      0 [::]:sunrpc             [::]:*
    udp6       0      0 [::]:40243              [::]:*
    ```
    :::
    :::
:::
:::
:::
::: section
::: titlepage
# []{#exporting-nfs-shares_managing-file-systems.html#related-information-exporting-nfs-shares}相关信息 {.title}
:::
::: itemizedlist
-   Linux NFS wiki:
    [https://linux-nfs.org/wiki/index.php/Main_Page](https://linux-nfs.org/wiki/index.php/Main_Page){.link}
:::
:::
:::
[]{#securing-nfs_managing-file-systems.html}
::: chapter
::: titlepage
# []{#securing-nfs_managing-file-systems.html#securing-nfs_managing-file-systems}第 5 章 保护 NFS {.title}
:::
为最大程度降低 NFS 安全风险并保护服务器上的数据，请在服务器上导出 NFS
文件系统或将其挂载到客户端时考虑以下部分：
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#nfs-security-with-auth_sys-and-export-controls_securing-nfs}带有 AUTH_SYS 和导出控制的 NFS 安全性 {.title}
:::
NFS 提供以下传统选项来控制对导出文件的访问：
::: itemizedlist
-   服务器限制哪些主机可以通过 IP 地址或主机名挂载哪些文件系统。
-   服务器会像对本地用户一样，为 NFS
    客户端上的用户强制实施文件系统权限。通常，NFS 使用
    `AUTH_SYS`{.literal} 调用消息（也称为
    `AUTH_UNIX`{.literal}）执行此操作，该消息依赖于客户端来标记用户的
    UID 和
    GID。请注意，这意味着恶意或者错误配置的客户端可能会轻松地利用这个问题，导致用户可以访问不应该被访问的文件。
:::
为限制潜在的风险，管理员通常将访问权限限制为只读或 squash
用户权限为通用用户和组
ID。不幸的是，这些解决方案会阻止以最初预期的方式使用 NFS 共享。
另外，如果攻击者获得导出 NFS 文件系统的系统所使用的 DNS
服务器的控制，他们可将与特定主机名关联的系统或完全限定域名指向未授权的机器。[*此时，未经授权的计算机是允许系统挂载*]{.emphasis}
NFS 共享，因为没有交换用户名或密码信息来为 NFS 挂载提供额外的安全性。
在通过 NFS
导出目录时应谨慎使用通配符，因为通配符范围可以包含比预期更多的系统。
::: itemizedlist
**其它资源**
-   要保护 NFS 和 `rpcbind`{.literal}，请使用 `nftables`{.literal} 和
    `firewalld`{.literal}。有关配置这些框架的详情，请查看
    `nft(8)和`{.literal} `firewalld-cmd(1)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#nfs-security-with-auth_gss_securing-nfs}使用 `AUTH_GSS`{.literal}的 NFS 安全性 {.title}
:::
NFS 的所有版本都支持 RPCSEC_GSS 和 Kerberos 机制。
与 AUTH_SYS 不同，使用 RPCSEC_GSS Kerberos
机制，服务器不依赖于客户端来正确地表示正在访问该文件的用户。相反，加密用于向服务器验证用户的身份，这可防止恶意客户端在没有该用户的
Kerberos 凭据的情况下模拟用户。使用 RPCSEC_GSS Kerberos
机制是保护挂载的最直接方法，因为配置了 Kerberos 后不需要额外的设置。
:::
::: section
::: titlepage
# []{#securing-nfs_managing-file-systems.html#configuring-an-nfs-server-and-client-to-use-kerberos_securing-nfs}配置 NFS 服务器和客户端使用 Kerberos {.title}
:::
Kerberos
是一种网络身份验证系统，允许客户端和服务器通过使用对称加密和受信任的第三方
KDC 互相身份验证。红帽建议使用 Identity Management(IdM)设置 Kerberos。
::: itemizedlist
**先决条件**
-   安装和配置 Kerberos 密钥分发中心(`KDC`{.literal})。
:::
::: orderedlist
**流程**
1.  ::: itemizedlist
    -   在 NFS 服务器端创建 `nfs/hostname.domain@REALM`{.literal} 主体。
    -   在服务器和客户端端创建 `host/hostname.domain@REALM`{.literal}
        主体。
    -   将对应的密钥添加到客户端和服务器的 keytab 中。
    :::
2.  在服务器端，使用 `sec=`{.literal}
    选项启用所需的安全类别。启用所有安全类型和非加密挂载：
    ``` screen
    /export *(sec=sys:krb5:krb5i:krb5p)
    ```
    与 `sec=`{.literal} 选项一起使用的有效安全类型为：
    ::: itemizedlist
    -   `sys`{.literal}: 无加密保护，默认
    -   `krb5`{.literal} ：仅验证
    -   `krb5i`{.literal} ：完整性保护
    -   `krb5p`{.literal} ：隐私保护
    :::
3.  在客户端，将 `sec=krb5`{.literal} （或 `sec=krb5i`{.literal} 或
    `sec=krb5p`{.literal} ）添加到挂载选项中：
    ``` screen
    # mount -o sec=krb5 server:/export /mnt
    ```
:::
::: itemizedlist
**其它资源**
-   如果您需要以 root 用户身份在 Kerberos 保护的 NFS
    共享中写入文件，并保留这些文件的 root 所有权，请参阅
    [https://access.redhat.com/articles/4040141](https://access.redhat.com/articles/4040141){.link}。请注意，我们不推荐进行此配置。
-   有关 NFS 配置的更多信息，请参阅 [**exports**]{.strong}(5)和
    [**nfs**]{.strong}(5)man page。
:::
:::
::: section
::: titlepage