EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;  
LOG:  available indexes for BitmapScanRegexp(t5):  
LOG:  pg_hint_plan:  
used hint:  
BitmapScanRegexp(t5 t5[^_].*)  
not used hint:  
duplication hint:  
error hint:  
     QUERY PLAN       
--------------------  
 Seq Scan on t5  
   Filter: (id = 1)  
(2 rows)  
/*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/  
EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;  
LOG:  available indexes for BitmapScanRegexp(t5):  
LOG:  pg_hint_plan:  
used hint:  
BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)  
not used hint:  
duplication hint:  
error hint:  
     QUERY PLAN       
--------------------  
 Seq Scan on t5  
   Filter: (id = 1)  
(2 rows)  
/*+ BitmapScan(t5 t5_id[0-9].*)*/  
EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;  
LOG:  available indexes for BitmapScan(t5):  
LOG:  pg_hint_plan:  
used hint:  
BitmapScan(t5 t5_id[0-9].*)  
not used hint:  
duplication hint:  
error hint:  
     QUERY PLAN       
--------------------  
 Seq Scan on t5  
   Filter: (id = 1)  
(2 rows)  
-- Inheritance  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c2 p1_9  
         Filter: (val = 1)  
(19 rows)  
/*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexScanRegexp(p1): p1_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey  
LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey  
LOG:  pg_hint_plan:  
used hint:  
IndexScanRegexp(p1 p1_.*[^0-9]$)  
not used hint:  
duplication hint:  
error hint:  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c2 p1_9  
         Filter: (val = 1)  
(19 rows)  
/*+ IndexScanRegexp(p1 p1_.*val2.*)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexScanRegexp(p1): p1_val2  
LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2  
LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2  
LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2  
LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2  
LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2  
LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2  
LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2  
LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2  
LOG:  pg_hint_plan:  
used hint:  
IndexScanRegexp(p1 p1_.*val2.*)  
not used hint:  
duplication hint:  
error hint:  
                      QUERY PLAN                         
-------------------------------------------------------  
 Append  
   ->  Index Scan using p1_val2 on p1 p1_1  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c1_val2 on p1_c1 p1_2  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c2_val2 on p1_c2 p1_3  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c3_val2 on p1_c3 p1_4  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c4_val2 on p1_c4 p1_5  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c1_c1_val2 on p1_c1_c1 p1_6  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c1_c2_val2 on p1_c1_c2 p1_7  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c3_c1_val2 on p1_c3_c1 p1_8  
         Index Cond: (val = 1)  
   ->  Index Scan using p1_c3_c2_val2 on p1_c3_c2 p1_9  
         Index Cond: (val = 1)  
(19 rows)  
/*+ IndexScanRegexp(p1 p1[^_].*)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexScanRegexp(p1):  
LOG:  available indexes for IndexScanRegexp(p1_c1):  
LOG:  available indexes for IndexScanRegexp(p1_c2):  
LOG:  available indexes for IndexScanRegexp(p1_c3):  
LOG:  available indexes for IndexScanRegexp(p1_c4):  
LOG:  available indexes for IndexScanRegexp(p1_c1_c1):  
LOG:  available indexes for IndexScanRegexp(p1_c1_c2):  
LOG:  available indexes for IndexScanRegexp(p1_c3_c1):  
LOG:  available indexes for IndexScanRegexp(p1_c3_c2):  
LOG:  pg_hint_plan:  
used hint:  
IndexScanRegexp(p1 p1[^_].*)  
not used hint:  
duplication hint:  
error hint:  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c2 p1_9  
         Filter: (val = 1)  
(19 rows)  
/*+ IndexScan(p1 p1_.*val2.*)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexScan(p1):  
LOG:  available indexes for IndexScan(p1_c1):  
LOG:  available indexes for IndexScan(p1_c2):  
LOG:  available indexes for IndexScan(p1_c3):  
LOG:  available indexes for IndexScan(p1_c4):  
LOG:  available indexes for IndexScan(p1_c1_c1):  
LOG:  available indexes for IndexScan(p1_c1_c2):  
LOG:  available indexes for IndexScan(p1_c3_c1):  
LOG:  available indexes for IndexScan(p1_c3_c2):  
LOG:  pg_hint_plan:  
used hint:  
IndexScan(p1 p1_.*val2.*)  
not used hint:  
duplication hint:  
error hint:  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c2 p1_9  
         Filter: (val = 1)  
(19 rows)  
/*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey  
LOG:  pg_hint_plan:  
used hint:  
IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)  
not used hint:  
duplication hint:  
error hint:  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c2 p1_9  
         Filter: (val = 1)  
(19 rows)  
/*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2  
LOG:  pg_hint_plan:  
used hint:  
IndexOnlyScanRegexp(p1 p1_.*val2.*)  
not used hint:  
duplication hint:  
error hint:  
                         QUERY PLAN                           
------------------------------------------------------------  
 Append  
   ->  Index Only Scan using p1_val2 on p1 p1_1  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c1_val2 on p1_c1 p1_2  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c2_val2 on p1_c2 p1_3  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c3_val2 on p1_c3 p1_4  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c4_val2 on p1_c4 p1_5  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c1_c1_val2 on p1_c1_c1 p1_6  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c1_c2_val2 on p1_c1_c2 p1_7  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c3_c1_val2 on p1_c3_c1 p1_8  
         Index Cond: (val = 1)  
   ->  Index Only Scan using p1_c3_c2_val2 on p1_c3_c2 p1_9  
         Index Cond: (val = 1)  
(19 rows)  
/*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/  
EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;  
LOG:  available indexes for IndexOnlyScanRegexp(p1):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):  
LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):  
LOG:  pg_hint_plan:  
used hint:  
IndexOnlyScanRegexp(p1 p1[^_].*)  
not used hint:  
duplication hint:  
error hint:  
           QUERY PLAN              
---------------------------------  
 Append  
   ->  Seq Scan on p1 p1_1  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1 p1_2  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c2 p1_3  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3 p1_4  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c4 p1_5  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c1 p1_6  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c1_c2 p1_7  
         Filter: (val = 1)  
   ->  Seq Scan on p1_c3_c1 p1_8  