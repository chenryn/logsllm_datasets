### 图6. 标签PSI在Pung匿名通信协议中的性能表现

### 参考文献
1. 验证泄露密码的k-匿名性。[链接](https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/) (2018年5月8日访问)
2. Angel, S., Chen, H., Laine, K., Setty, S.: 压缩查询和摊销查询处理的PIR。见：2018 IEEE 安全与隐私研讨会（SP）。pp. 962–979。IEEE (2018)
3. Angel, S., Setty, S.: 在完全不可信的基础设施上进行不可观测的通信。见：OSDI。pp. 551–569 (2016)
4. Bajard, J.C., Eynard, J., Hasan, M.A., Zucca, V.: FV类半同态加密方案的全RNS变体。见：国际密码学及应用领域会议。pp. 423–442。Springer (2016)
5. Baldi, P., Baronio, R., De Cristofaro, E., Gasti, P., Tsudik, G.: 对抗Gattaca：高效且安全的人类全基因组测试。见：第18届ACM计算机与通信安全会议论文集。pp. 691–702。ACM (2011)
6. Boneh, D., Gentry, C., Halevi, S., Wang, F., Wu, D.J.: 使用半同态加密进行私密数据库查询。见：应用密码学与网络安全国际会议。pp. 102–118。Springer (2013)
7. Brakerski, Z.: 从经典GapSVP中得到无需模数切换的全同态加密。见：Safavi-Naini, R., Canetti, R. (编) CRYPTO。计算机科学讲义，卷7417，pp. 868–886。Springer (2012)
8. Brakerski, Z., Gentry, C., Vaikuntanathan, V.: 不需要引导的(分层)全同态加密。见：第三届理论计算机科学创新大会论文集。pp. 309–325。ACM (2012)
9. Brakerski, Z., Vaikuntanathan, V.: 来自环LWE的安全关键消息全同态加密。见：密码学进展——CRYPTO 2011。pp. 505–524。Springer (2011)
10. Brakerski, Z., Vaikuntanathan, V.: 从标准LWE来的高效全同态加密。SIAM 计算机科学期刊 43(2), 831–871 (2014)
11. Chase, M., Chen, H., Ding, J., Goldwasser, S., Gorbunov, S., Hoffstein, J., Lauter, K., Lokam, S., Moody, D., Morrison, T., Sahai, A., Vaikuntanathan, V.: 同态加密的安全性。技术报告，HomomorphicEncryption.org, Redmond WA (2017年7月)
12. Chen, H., Laine, K., Rindal, P.: 基于同态加密的快速私人集合交集。见：2017 ACM SIGSAC 计算机与通信安全会议论文集。pp. 1243–1255。ACM (2017)
13. Cheon, J.H., Kim, A., Kim, M., Song, Y.: 用于近似数值运算的同态加密。见：国际密码学理论及其应用会议。pp. 409–437。Springer (2017)
14. Cheon, J.H., Kim, M., Kim, M.: 加密数据上的搜索与计算。见：金融密码学与数据安全国际会议。pp. 142–159。Springer (2015)
15. Cheon, J.H., Kim, M., Kim, M.: 优化的搜索与计算电路及其在加密数据查询评估中的应用。IEEE 信息取证与安全事务 11(1), 188–199 (2016)
16. Cheon, J.H., Kim, M., Lauter, K.: 编辑距离的同态计算。见：金融密码学与数据安全国际会议。pp. 194–212。Springer (2015)
17. Chillotti, I., Gama, N., Georgieva, M., Izabachene, M.: 更快的全同态加密：在不到0.1秒内完成引导。见：国际密码学理论及其应用会议。pp. 3–33。Springer (2016)
18. Chor, B., Gilboa, N., Naor, M.: 关键词的私密信息检索。Citeseer (1997)
19. Ciampi, M., Orlandi, C.: 将私有集合交集与安全两方计算结合。技术报告，Cryptology ePrint Archive, 报告2018/105 (2018)
20. De Cristofaro, E., Gasti, P., Tsudik, G.: 快速且私密的集合交集和并集基数计算。见：密码学与网络安全部门国际会议。pp. 218–231。Springer (2012)
21. Dowlin, N., Gilad-Bachrach, R., Laine, K., Lauter, K., Naehrig, M., Wernsing, J.: 生物信息学中使用同态加密的手册。IEEE 会刊 105(3), 552–567 (2017)
22. Fan, J., Vercauteren, F.: 比较实用的全同态加密。Cryptology ePrint Archive, 报告2012/144 (2012)，[链接](http://eprint.iacr.org/)
23. Freedman, M.J., Ishai, Y., Pinkas, B., Reingold, O.: 关键词搜索与盲目伪随机函数。见：密码学理论会议。pp. 303–324。Springer (2005)
24. Gentry, C.: 使用理想格的全同态加密。见：STOC。卷9，pp. 169–178 (2009)
25. Gentry, C., Halevi, S., Smart, N.P.: AES电路的同态评估。见：密码学进展——CRYPTO 2012。pp. 850–867。Springer (2012)
26. Gentry, C., Sahai, A., Waters, B.: 从学习错误中获得的同态加密：概念上更简单、渐进更快、基于属性。见：Canetti, R., Garay, J.A. (编) CRYPTO (1)。计算机科学讲义，卷8042，pp. 75–92。Springer (2013)。[链接](https://doi.org/10.1007/978-3-642-40041-4), [链接](http://dx.doi.org/10.1007/978-3-642-40041-4)
27. Halevi, S., Shoup, V.: helib中的算法。见：国际密码学会议。pp. 554–571。Springer (2014)
28. Hart, W., Johansson, F., Pancratz, S.: FLINT: 数论快速库 (2013)，版本2.4.0，[链接](http://flintlib.org)
29. Hazay, C., Lindell, Y.: 针对恶意和隐蔽对手的安全集合交集和模式匹配高效协议。见：Canetti, R. (编) 密码学理论。pp. 155–175。Springer Berlin Heidelberg, Berlin, Heidelberg (2008)
30. Ion, M., Kreuter, B., Nergiz, E., Patel, S., Saxena, S., Seth, K., Shanahan, D., Yung, M.: 私人交集求和协议及其在归因聚合广告转换中的应用。技术报告，Cryptology ePrint Archive, 报告2017/738 (2017)
31. Jarecki, S., Liu, X.: 快速安全的集合交集计算。见：安全与网络密码学国际会议。pp. 418–435。Springer (2010)
32. Kamara, S., Mohassel, P., Raykova, M., Sadeghian, S.: 将私人集合交集扩展到十亿级元素集。见：Christin, N., Safavi-Naini, R. (编) 金融密码学与数据安全。pp. 195–215。Springer Berlin Heidelberg, Berlin, Heidelberg (2014)
33. Khedr, A., Gulak, G., Vaikuntanathan, V.: SHIELD: 加密数据分类器的可扩展同态实现。IEEE 计算机事务 65(9), 2848–2858 (2016)
34. Kim, A., Song, Y., Kim, M., Lee, K., Cheon, J.H.: 基于近似同态加密的逻辑回归模型训练。Cryptology ePrint Archive, 报告2018/254 (2018)，[链接](https://eprint.iacr.org/2018/254)
35. Kiss, Á., Liu, J., Schneider, T., Asokan, N., Pinkas, B.: 移动应用中不等大小集合的私人集合交集。隐私增强技术会议论文集 2017(4), 177–197 (2017)
36. Kolesnikov, V., Kumaresan, R., Rosulek, M., Trieu, N.: 高效批量无意识PRF及其在私人集合交集中的应用。见：2016 ACM SIGSAC 计算机与通信安全会议论文集。pp. 818–829。ACM (2016)
37. Marlinspike, M.: 私人联系发现的困难。公司赞助的博客文章 (2014)，[链接](https://whispersystems.org/blog/contact-discovery/)
38. Meadows, C.: 在没有持续可用第三方的情况下使用的更高效的加密配对协议。见：1986 IEEE 安全与隐私研讨会。pp. 134–134 (1986年4月)。[链接](https://doi.org/10.1109/SP.1986.10022)
39. Nagy, M., De Cristofaro, E., Dmitrienko, A., Asokan, N., Sadeghi, A.R.: 我认识你吗？高效且保护隐私的共同朋友查找协议及其应用。见：第29届年度计算机安全应用会议论文集。pp. 159–168。ACM (2013)
40. Odlyzko, A.: 互联网上的隐私、经济和价格歧视。见：第五届电子商业国际会议论文集。pp. 355–366。ACM (2003)
41. Olumofin, F., Goldberg, I.: 关系数据库上的隐私保护查询。见：隐私增强技术研讨会。pp. 75–92。Springer (2010)
42. Orrù, M., Orsini, E., Scholl, P.: 使用置换哈希的1-out-of-n OT扩展及在私人集合交集中的应用。见：RSA会议密码学家追踪。pp. 381–396。Springer (2017)
43. Pinkas, B., Schneider, T., Segev, G., Zohner, M.: PHASING: 使用置换哈希的私人集合交集。见：第24届USENIX安全研讨会 (USENIX Security 15)。pp. 515–530 (2015)
44. Pinkas, B., Schneider, T., Weinert, C., Wieder, U.: 基于布谷鸟哈希的高效电路私人集合交集。见：年度国际密码技术和应用会议。pp. 125–157。Springer (2018)
45. Pinkas, B., Schneider, T., Zohner, M.: 基于OT扩展的更快私人集合交集。见：USENIX安全研讨会。卷14，pp. 797–812 (2014)
46. Pinkas, B., Schneider, T., Zohner, M.: 基于OT扩展的可扩展私人集合交集。ACM 隐私与安全事务 (TOPS) 21(2), 7 (2018)
47. Resende, A.C.D., Aranha, D.F.: 更快的不平衡私人集合交集。互联网服务与应用杂志 9(1), 1–18 (2018)
48. Rindal, P., Rosulek, M.: 通过双重执行实现恶意安全的私人集合交集。见：2017 ACM SIGSAC 计算机与通信安全会议论文集。pp. 1229–1242。CCS '17, ACM, 纽约, NY, USA (2017)。[链接](https://doi.org/10.1145/3133956.3134044), [链接](http://doi.acm.org/10.1145/3133956.3134044)
49. Rivest, R.L., Adleman, L., Dertouzos, M.L.: 数据库和隐私同态。安全计算基础 4(11), 169–180 (1978)
50. Smart, N.P., Vercauteren, F.: 全同态SIMD操作。设计、代码和密码学 71(1), 57–81 (2014)
51. Wang, F., Yun, C., Goldwasser, S., Vaikuntanathan, V., Zaharia, M.: SPLINTER: 实用的公共数据私密查询。见：NSDI。pp. 299–313 (2017)

### 泄露PSI的安全证明
**参数**：诚实的发送者和接收者分别拥有集合大小 \( N_x \) 和 \( N_y \)。如果发送者或接收者是恶意的，则他们的集合大小分别为 \( N'_x \) 或 \( N'_y \)。

- **输入**：接收者输入 \( Y \subset \{0, 1\}^* \)，确保 \( |Y| \leq N_y \) 如果接收者是诚实的，否则 \( |Y| \leq N'_y \)。
- **输入**：发送者输入 \( X \subset \{0, 1\}^* \) 和泄漏函数，确保 \( |X| \leq N_x \) 如果发送者是诚实的，否则 \( |X| \leq N'_x \)。

功能计算 \( Y^* = \text{leakage}(Y) \)，并将输出 \( (X \cap Y \cap Y^*) \) 给接收者。

**图7. 理想的泄露PSI功能**

**输入**：接收者输入集合 \( Y \subset \{0, 1\}^* \) 大小为 \( N_y \)；发送者输入集合 \( X \subset \{0, 1\}^* \) 大小为 \( N_x \)。\( N_x \) 和 \( N_y \) 是公开的。\( \kappa \) 和 \( \lambda \) 分别表示计算和统计安全性参数。

**输出**：接收者输出 \( Y \cap X \) 如果发送者是诚实的，否则输出 \( Y \cap X \cap \text{leakage}(Y) \)；发送者输出 \( \bot \)。

1. 双方执行图2中的步骤1至7。
   - 在步骤5(b)ii中，发送者将每个 \( x' \in X' \) 的标签定义为 \( H(x') \)，其中 \( H : \{0, 1\}^\sigma \to \{0, 1\}^\sigma \) 是一个足够复杂的随机预言机，使得对于 \( H'( \{ z_i \cdot w_j \mid 1 \leq i < w, 0 \leq j \leq \lfloor \log_w(B) \rfloor \}) = H(z) \)，FHE方案是H'-限制的（定义1）。注意 \( w \) 是步骤7d中的窗口参数。
   - 在步骤7a中，发送者必须提供一个零知识证明，证明所有OPRF实例使用了相同的密钥 \( k \)。

2. 双方执行步骤8，但不评估或发送对称多项式 \( S_{b,j} \)。

3. 代替执行步骤9，接收者执行以下操作：
   - 对于第 \( b \) 批次，接收者解密密文 \( q_{b,1}, \ldots, q_{b,\alpha} \) 以获得 \( r_{b,1}, \ldots, r_{b,\alpha} \)，这些被解释为 \( F \) 中的 \( n/d \) 个元素向量。
   - 设 \( r^* \) 为 \( m \) 个 \( F \) 中的元素向量 \( r^*_{1,1} \| \ldots \| r^*_{\alpha} \)。
   - 对于所有的 \( y' \in Y' \)，如果存在 \( j \) 使得 \( r^*_j[i] = H(y') \)，则输出相应的 \( y \in Y \)，其中 \( i \) 是 \( y' \) 在 \( C \) 中占据的箱子索引。

**图8. 带泄漏的完整恶意PSI协议**

**定理3**：在随机预言机混合模型中，在存在OMGDH硬群 \( G \) 以及语义安全的H-限制的层次化全同态加密方案 \( \Sigma \) 的情况下，图8中的协议 \( \pi \) 以（非黑盒）模拟安全性计算图7中的泄漏PSI功能，其中 \( N'_y = N_y \) 且 \( N'_x = \text{poly}(\kappa) \)。

**证明（证明草稿）**：证明该协议在对抗恶意接收者时是安全的是定理1的直接扩展。

在恶意发送者的情况下，我们需要描述一个非黑盒模拟器，提取发送者的集合和泄漏函数，并将其转发给图7的理想功能。模拟器扮演接收者的角色，使用一个虚拟集合，并在协议结束时提取发送者的集合和函数如下：

首先，模拟器从零知识证明中提取OPRF密钥 \( k \)，并使用随机预言机提取所有使用密钥 \( k \) 查询的OPRF输入，并将其定义为它们的集合 \( X^* \)。根据定义1，所有不在 \( X^* \) 中的项目的标签都是均匀分布的，发送者不能构造出能以不可忽略的概率解密为这些标签的密文。如果不成立，则可以利用这个发送者构造一个矛盾。即，由于所有不在 \( X^* \) 中的OPRF输出在 \( \{0, 1\}^{\text{poly}(\kappa)} \) 中均匀分布，我们可以在输入 \( y \in Y \) 上编程OPRF/随机预言机的输出为定义1中的 \( z \in \{0, 1\}^{\text{poly}(\kappa)} \)，并将发送者的代码设为 \( F^* \)。如果发送者 \( F^* \) 能够生成 \( H(z) \) 的密文，则该密文是一个矛盾，因为假设FHE方案是H-限制的。

泄漏函数定义如下：对于输入 \( Y \)，函数应用OPRF到 \( Y \) 并对其结果进行布谷鸟哈希。通过检查发送者的代码，确定是否为给定的布谷鸟位置计算了正确的标签。如果是，则泄漏函数输出该位置所代表的输入。模拟器然后可以将发送者的集合和此泄漏函数发送给理想功能（图7）。

**备注**：图8中添加了一个零知识证明，证明发送者在所有OPRF调用中使用了相同的密钥。这主要是为了简化证明的表述。实际上，如果任何OPRF响应消息为 \( 0, 1 \in G \)，接收者可以选择终止协议。证明还需要处理发送者使用多个OPRF密钥的情况以及密钥未知的情况（例如，发送回一个随机值而不是 \( H(y) \beta \alpha \)）。这些情况可以通过在泄漏函数中添加额外的逻辑来处理。