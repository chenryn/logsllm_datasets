# 智能设备漏洞挖掘的新方法
## 作者：小灰灰
### 职位：百度安全实验室 高级安全研究员
#### 发布日期：2019年5月30日

## 关于我
- **职位**：百度安全实验室 高级安全研究员
- **研究领域**：物联网 (IoT) 安全、人工智能 (AI) 安全、无人车安全
- **经历**：
  - 多次成功破解硬件设备
  - 曾负责百度安全响应中心 (BSRC)、应急处置和零日漏洞分析
  - 参与百度产品的安全评估及安全监控体系建设

## 传统IoT设备的破解方法
以路由器为例，传统的破解流程通常包括以下步骤：
1. 固件下载
2. 使用Binwalk解包
3. 找到有问题的二进制文件并进行IDA分析
4. 分析WEB脚本文件
5. 在真实设备或QEMU上验证漏洞

然而，当前大多数IoT设备的破解工作主要集中在漏洞分析阶段。

## 当前IoT设备的挑战
随着技术的发展，IoT设备变得越来越多样化，并且大厂商采取了更多的防护措施：
- 不再提供固件下载
- 关闭了telnet、串口和ADB等远程访问接口
- 甚至无从下手

面对这些挑战，我们需要寻找新的方法来破解这些设备。

## IoT设备的结构与应用场景
### 操作系统及硬件
- **完整的Android/Linux发行版**：ARMv5/6/7/x86处理器，EMMC/EMCP/NAND存储
- **精简内核的Linux/OpenWRT**：ARM/MIPS处理器，NAND/SPI Flash存储
- **RTOS实时操作系统**：ESP乐鑫、Arduino片上系统、AVR、STM32系列，SPI Flash存储

### 应用场景
- **智能音箱、智能手表、自动售货机、电视盒子、智能电视、智能广告牌、车机**
- **路由器、迷你智能音箱、智能摄像头**
- **智能门锁、智能电饭煲、智能插座、智能灯、智能手环**

### 特点
- **多功能、大存储、易于开发APP的载体、大多有大屏幕**
- **单一但高级功能，无需屏幕展示内容或小尺寸屏幕**
- **功能单一简单但大多可以通过网络进行简单控制，模拟电路无法实现**

## 第一步：拆解
在开始破解之前，先对设备进行拆解，了解其内部结构：
- 确认是否有价值，使用了哪些芯片解决方案
- 如果没有明确思路，可以考虑哪些地方还可以尝试
- 搜索芯片型号信息和数据手册
- 重点关注存储类型及规格（如SPI Flash、EMMC/EMCP、NandFlash）
- 寻找TTL和JTAG接口
- 通信模块（以太网、蓝牙、Wi-Fi、2G/3G/4G）

### 云拆解资源
- **Google搜索 "xxx teardown"**
- **拆客论坛**
- **iFixit.com**：包含著名厂商的硬件设备，图片清晰、标注详细
- **Fccid.io**：所有带有无线功能并在国外发行的设备，种类繁多
  - 技巧：使用 `site:fccid.io internal photos xxx` 进行搜索

## 第二步：准备工作
### 控制与获取
- 获取文件系统
- Getshell（更方便地分析网络、文件、进程）
- 获取和控制网络数据
- 根据已有内容进行综合分析，寻找有效漏洞

### 获取固件
- **目的**：
  - 了解操作系统及文件系统结构，关注关键目录（如 `/etc`, `/home`, `/usr/bin`，如果是Android则关注 `/system/priv-app`）
  - 分析启动脚本（如 `/etc/inittab`, `/etc/init.d`），加载的二进制文件及配置文件
  - 分析Web目录文件（如CGI、PHP、Lua等）
  - 方便恢复到老版本系统（例如开启了telnet）以便分析
  - 固件可能是新版本APK，需要逆向分析
  - 使用对应处理器的QEMU chroot环境，方便分析二进制和Web文件

- **方法**：
  - 官网下载
  - 监听自升级数据包
  - 逆向分析升级应用及其流程
  - 向论坛求助或联系好心网友
  - 联系客服寻求帮助
  - 获取shell（如telnet、ssh、adb），使用dd、tar、nc转出固件
  - 进入BootLoader读取存储器
  - 特殊主控读取方式（如MTK、NXP系列，通过数据线口获取/刷写文件系统）

### 物理Dump
当常规方法无法轻易获取固件时，可以采用物理Dump的方法：
- **针对不同型号，选择不同的读取方式**
- **步骤**：
  - 选择读取设备和方式（在线或离线）
  - 对固件进行处理

### SPI Flash
- **特点**：串行读写设备，常见容量为4/8/16MB，8针脚SPI接口
- **读写方法**：
  - Arduino + EEPROM库
  - Raspberry Pi SPI接口 + flashrom
  - 编程器读取（如RT809H）
  - 免拆焊（勾针、夹子），但有时不奏效，建议拆下来

### NandFlash
- **特点**：16MB-2GB容量，TSOP48/BGA封装，按块读写
- **读写方法**：
  - 使用编程器读取（如RT809H）
  - 注意坏块管理，写入较为繁琐
  - binwalk可能无法解开，需修改binwalk或去除ECC校验位数据

### EMMC/EMCP
- **特点**：可近似理解为SD卡，全部为BGA封装
- **离线读写**：
  - 使用热风枪吹焊，专用读取座+编程器或直接飞线读取
  - 焊接采用植锡法，对焊接技术要求高
- **在线读写**：
  - 寻找或已知关键焊点，直接飞线到SD读卡器，注意短接晶振

通过以上方法，我们可以更有效地对智能设备进行漏洞挖掘。