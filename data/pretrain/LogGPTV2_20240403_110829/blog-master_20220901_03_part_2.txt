IT-C02YW2EFLVDL:digoal.db.tmp digoal$ ll  
total 3072  
drwxr-xr-x  21 digoal  staff   672B Sep  1 14:31 ..  
drwxr-xr-x   5 digoal  staff   160B Sep  1 14:54 .  
-rw-r--r--   1 digoal  staff   512K Sep  1 14:57 duckdb_temp_storage-2.tmp  
-rw-r--r--   1 digoal  staff   512K Sep  1 14:57 duckdb_temp_storage-0.tmp  
-rw-r--r--   1 digoal  staff   512K Sep  1 14:57 duckdb_temp_storage-1.tmp  
```  
## 推荐的使用姿势  
将数据存放在 parquet 文件中, 由于parquet支持pushdown filter\projection, 支持分区, 支持并行.  查询速度是非常快的.   甚至可以使用远程parquet文件存储 (s3, https, oss) .   
例子:    
将数据导出到parquet文件  
```  
COPY test TO 'test.parquet' (FORMAT 'parquet');   
or 导出整个数据库  
EXPORT DATABASE '/Users/digoal/digoal_parquet' (FORMAT PARQUET);  
```  
然后删除表, 以视图替代:   
```  
drop table test;  
CREATE VIEW test AS SELECT * FROM read_parquet('test.parquet');  
```  
查询试图:   
```  
D describe test;  
┌─────────────┬─────────────┬──────┬─────┬─────────┬───────┐  
│ column_name │ column_type │ null │ key │ default │ extra │  
├─────────────┼─────────────┼──────┼─────┼─────────┼───────┤  
│ id          │ BIGINT      │ YES  │     │         │       │  
│ info        │ VARCHAR     │ YES  │     │         │       │  
│ crt_time    │ TIMESTAMP   │ YES  │     │         │       │  
│ c1          │ BIGINT      │ YES  │     │         │       │  
└─────────────┴─────────────┴──────┴─────┴─────────┴───────┘  
```  
```  
D select count(*) from test;  
┌──────────────┐  
│ count_star() │  
├──────────────┤  
│ 400000000    │  
└──────────────┘  
Run Time (s): real 0.107 user 0.600973 sys 0.013549  
D explain select count(*) from test;  
┌─────────────────────────────┐  
│┌───────────────────────────┐│  
││       Physical Plan       ││  
│└───────────────────────────┘│  
└─────────────────────────────┘  
┌───────────────────────────┐  
│    UNGROUPED_AGGREGATE    │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│        count_star()       │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│         PROJECTION        │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│             42            │  
└─────────────┬─────────────┘                               
┌─────────────┴─────────────┐  
│        PARQUET_SCAN       │  
│   ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─   │  
│        EC=400000000       │  
└───────────────────────────┘                      
D select count(distinct c1) from test;  
┌────────────────────┐  
│ count(DISTINCT c1) │  
├────────────────────┤  
│ 10001              │  
└────────────────────┘  
Run Time (s): real 4.626 user 32.262045 sys 1.084296  
```  
```  
D select count(distinct id) from test;  
Run Time (s): real 1.044 user 5.788092 sys 1.084814  
Error: Out of Memory Error: could not allocate block of 262144 bytes (999924527/1000000000 used)   
```  
```  
checkpoint;  
.quit  
```  
重新启动, 视图依旧存在 , 但是需要注意duckdb的数据文件没有收缩.  所以直接弃用digoal.db, 重新启动一个数据库.  
```  
-rw-r--r--   1 digoal  staff    17G Sep  1 15:30 digoal.db  
rm -rf digoal.db*  
```  
```  
$ ./duckdb ./digoal.db.new  
v0.4.1-dev2371 3825e0ee7  
Enter ".help" for usage hints.  
D CREATE VIEW test AS SELECT * FROM read_parquet('test.parquet');  
D .timer on  
D select count(distinct c1) from test;  
┌────────────────────┐  
│ count(DISTINCT c1) │  
├────────────────────┤  
│ 10001              │  
└────────────────────┘  
Run Time (s): real 4.525 user 32.616092 sys 0.790214  
D select count(distinct id) from test;  
┌────────────────────┐  
│ count(DISTINCT id) │  
├────────────────────┤  
│ 100000000          │  
└────────────────────┘  
Run Time (s): real 36.541 user 151.904681 sys 37.632788  
```  
## 参考  
https://duckdb.org/docs/sql/pragmas  
https://duckdb.org/docs/sql/configuration  
https://duckdb.org/docs/api/cli  
[《DuckDB 读写 Parquet 文件 - 同时支持远程s3, oss, http等parquet文件读写》](../202209/20220901_01.md)    
#### [期望 PostgreSQL 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB for PostgreSQL云原生分布式开源数据库](https://github.com/ApsaraDB/PolarDB-for-PostgreSQL "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")