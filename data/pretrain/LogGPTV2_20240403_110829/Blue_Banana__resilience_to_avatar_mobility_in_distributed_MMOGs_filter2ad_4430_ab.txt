We have implemented 
our Blue Banana prefetching 
[15]. We chose Solipsis 
al­
because 
it al­
avatar proximity 
to build the over­
gorithm 
over Solipsis 
ready takes into account 
lay. 
3.1. Solipsis overview 
2. Global connectivity 
rule. Let Ne be the neighbor 
set 
The avatar of e must be located 
of a node e in the overlay. 
of Ne. 
inside the convex hull of the set formed by avatars 
aims that an avatar will not "tum its back" to 
This property 
a portion 
partitioning 
of the NVE, causing 
inconsistent 
the Solipsis 
overlay 
graph. 
views or possibly 
To ensure these rules, 
Solipsis 
implements 
At each moment, 
a mechanism 
thanks 
and 
a node is aware of the coordinates 
detects 
updates, 
of its neighbors, 
that one of its neighbors 
area sizes of all nodes in its neighbor 
set. As 
enters the aware­
it sends a message to 
called spontaneous  collaboration. 
to periodic 
the awareness 
it locally 
ness area of another 
both entities 
about to be broken. As they receive 
entities 
this technique 
receives 
costly new-neighbor 
sures that a node is always surrounded 
collaboration 
making spontaneous 
to warn them that the local awareness 
rule is 
the two 
that message, 
Our simulations 
query. The global connectivity 
by its neighbor 
set, 
showed that 
most of the time, a node 
become neighbors. 
is very efficient: 
more efficient. 
a 
rule en­
a warning message and does not have to initiate 
To sum up, if the local awareness 
rule is violated 
for a 
into the playing 
node n, it means that an avatar has arrived 
area of n and is not yet included 
n, causing 
is violated 
its neighbor 
updates 
lead to transient 
a transient failure. 
for a node n, it means that n is not surrounded 
spontaneous 
to the local knowledge 
rule 
set. It will then not receive 
for a part of its playing 
If the global connectivity 
failures. 
area, which will mandatorily 
data 
of 
by 
Solipsis 
is an overlay designed 
to sustain 
a distributed 
overlay 
NVE. Each node of the Solipsis 
one avatar. 
distributed 
ing area: the elders of a playing 
which avatars 
are in this playing 
In Solipsis, 
on the nodes that manage the avatars 
area are exactly 
area. Solipsis 
for 
area is 
of this play­
the knowledge 
of a playing 
the nodes 
is responsible 
maintains 
a 
An avatar keeps breaking 
the spontaneous 
it moves because 
is not always able to react on time. For that reason, 
efficient anticipation 
is required. 
mechanism 
rules as long as 
collaboration 
a more 
fundamental 
mechanism 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
173 
DSN 2010: Legtchenko 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:02 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
3.2. Implementation of the anticipation 
Algorithm description. 
Technically, 
if the algorithm 
mechanism 
neighbor 
that the avatar of a node B (for Blue Banana) is 
and if the 
for 
it sends a message to its neigh­
set is not full, B starts 
the speed threshold) 
neighbors: 
observes 
in the state t (i.e, it reaches 
prefetched 
new prefetched 
bor which is closest 
Figure 1. The message contains 
neighbors 
the description 
the direction 
that B is willing 
to its movement vector as illustrated 
the number of prefetched 
of the movement and the speed). 
cone (the apex of the cone, 
of the probability 
to retrieve 
searching 
the TTL) and 
(called 
by 
Algorithm 1: Upon reception 
of a prefetching 
request 
Result: 
gathering 
propagation. 
of prefelching 
candidates 
and prefelching 
requesl 
=  estimateCurrentEmitterPosition 
(msg); 
(neighborSet, 
msg); 
failures. 
and so do in­
if A and B are 
if (emitterPosition, myPosition) 
=  chooseClosest 
::0: minDist then 
trajectoryClosestNodes 
size =  trajectoryClosestNodes.
getSize 0- 1; 
if size> ttl then 
1 emitterPosition 
2 ttl =  msg.getTTL 0; 
3 
4 
5 
6 
time. Indeed, 
7 
8 
9 
10 
11 
12 
13 
14  end 
15 end 
16 if ttl > 0 then 
17  msg.setTTL (ttl -I); 
18  send (msg. findNextNodelnTrajectory 
19 end 
ttl =  ttl - size + I ; 
response.addSet 
send (response, 
size =  ttl; 
trajectoryClosestNodes 
end 
if size> 0 then 
To take 
(trajectoryClosestNodes); 
msg.emit ter 0); 
(msg) ); 
=  trajectoryClosestNodes 
[I .. size I; 
on a node 
position 
Upon the reception 
of a prefetching 
request 
position 
R is located 
Then, if R is located 
by B, making 
1). Then, 
useless. 
the current 
is received 
nodes located 
information 
network latency, 
of B 
the initial 
1 checks if B is not too close from R (line 3): if 
R first estimates 
3 to 13), R analyzes 
R during the message exchange, 
R (for Receptor), 
by using the estimated 
and the speed of the avatar (line 1 of Algorithm 
Algorithm 
B overpasses 
behind of B when the response 
the prefetched 
far enough (lines 
selects 
cone of B (line 4) to send them to B (lines 
the size of this set of candidates 
first TTLs are selected 
interesting 
neighbors, 
10). While the TTL has not expired, 
to its neighbor 
(lines 
and if messages 
neighbors 
arrive on time, B retrieves 
R does not send its response 
inside the new estimated 
inside its probability 
11 to 13). If 
exceeds the TTL, only the 
(line 5 to 9) and if R does not have 
to the movement vector of B 
16 to 19). At the end, if no message have been lost 
R forwards 
that is closest 
its neighbor 
located 
cone. 
set and 
to B (line 
the request 
TTL prefetched 
prefetching 
protocol 
Network overhead. Blue Banana does not interfere 
the maintenance 
bors are not placed in the regular 
in a separated 
work resources 
with 
neigh­
set, but 
one. Therefore,  Solipsis 
does not use net­
to maintain 
the pre fetched 
Soli psis neighbor 
links with prefetched 
of Solipsis: 
neighbors. 
it could be implemented 
mechanism, 
is built on top 
on top of 
to avatar move­
in reaction 
main aim is to provide each node 
our anticipation 
However, 
that adapts itself 
Blue Banana, 
of Solipsis. 
any overlay 
ment. Blue Banana's 
with a prefetched 
fined). For this purpose, 
the avatar's 
a prefetched 
lar neighbor 
substantially 
fundamental 
movement. 
node, the prefetched 
set managed by Solipsis. 
helps Solipsis 
rules, 
minimizing 
native algorithms 
Hence, Blue Banana 
to restore 
the 
node set (the size of the set is user de­
of 
it finds nodes in the direction 
node is added in the regu­
resulting 
transient 
Once the moving avatar approaches 
Important properties 
of the algorithm. The first im­
is the consideration 
of 
But if the network latency 
quality 
neighbor. 
prefetched 
prefetched 
neighbors. 
of the algorithm 
a message from A to B is exactly 
portant 
avatar movement during message transfer 
the NVE changes, 
during a message transfer, 
teresting 
For example, 
2 meters apart and if A runs toward B, B is probably 
an in­
teresting 
is 
around 200ms and if A runs at 36km/h (lOm/s), 
the time to 
transfer 
for A in the NVE: the communication 
B makes B an uninteresting 
prefetched 
into account message transfer 
low and a high bound of the network latency 
last observed 
a prefetching 
tency bounds to roughly 
the node that emitted 
is clearly 
by using the 
round trip times with its neighbors. 
When 
message arrives, 
uses these la­
of 
neighbor. 
a 
time between A and 
rough, it permits 
the algorithm 
the message. 
estimate 
the time to reach B 
time, each node estimates 
the new avatar-position 
Even if this estimation 
The second important 
of the algorithm 
is the 
quality 
generated 
a prefetching 
to prefetch 
request 
number of messages 
a node receiving 
neighbors 
Section 
to answer to the request. 
whose avatars 
2). As a consequence, 
each candidate 
are in the probability 
answers for all its 
cone (see 
does not have 
the neighbors: 
to send more accurate responses. 
• 
• 
• 
• 
• 
Movement vector 
• 
• 
• 
• 
• 
• 
Figure 1. Propagation 
ted to nodes ahead of the movement. 
algorithm: 
the request is transmit­
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
174 
DSN 2010: Legtchenko 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:02 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
We prefer not to spend network resources 
in the present 
with a node which is useless 
in the playing 
area. 
to maintain 
since it is not yet 
a link 
As a consequence, 
once inserted 
neigh­
in the prefetched 
while 
neighbors 
prefetched 
by the moving avatar, 
of a node's avatar is not updated, 
cone. Blue Banana au­
the probability 
bor set, the position 
it can move outside 
tomatically 
removes useless 
they have been overtaken 
the avatar changes its direction 
state. It is possible 
the state of the prefetched 
cally updating 
ever, the risk is to spend network resources 
bly useless 
part of a future work. 
nodes. The comparison 
(i) when 
(ii) when 
or (iii) when it changes its 
another 
policy by periodi­
neighbors. 
to update possi­
of these two policies 
to consider 
How­
is 
of the high predictability 
set, so the neighbor-nodes 
In order to compensate 
the small network overhead, 
Blue 
propagates 
the coordinates 
Banana nodes take advantage 
of 
the avatar movement in desert zones. In Solipsis, 
a node 
periodically 
of its avatar to all 
the members of its neighbor 
can 
update their view of the NVE. Blue Banana doubles 
riod of such updates 
in state t. The neighbors 
position 
tial position 
of dead reckoning
more sophisticated 
ing [7,23,24]. 
for nodes when the state machine is 
of that node simply predict 
the 
by using its ini­
is a simple form 
2, but it could easily be enhanced 
with 
mechanisms 
widely used in online gam­
of the avatar between two updates 
and its speed. This technique 
the pe­
erator can also be reused to evaluate 
other NVEs. 
are gath­
locations 
As presented 
Most of the time, 
are towns or interesting 
2, most of the avatars 
hotspots. 
in section 
ered inside a few density 
hotspots 
kind of distribution 
density 
distribution 
pean blue banana [8] that covers one of the world highest 
concentrations 
of London, 
Brussels, 
approximately 
with hotspots 
of human populations 
of the NVE. This 
also corresponds 
to real 
of population 
Cologne, 
20% of the European 
around the cities 
population. 
Amsterdam, 
and Milan with 
such as the Euro­
Frankfurt 
Moreover, 
as presented 
in Section 2, movements 
of 
density 
between 
however, 
we propose 
Regarding 
of hotspots. 
and straight 
in NVEs, studies 
the player mobility 
to human mobility 
in the 
is most of the time 
pattern 
avatars are chaotic in hotspots 
hotspots. 
have shown that it is quite similar 
real world [17,26]. 
This mobility 
modeled with Levy flights [17,26], 
our own model because Levy flights do not take into ac­
count the specific 
are particular 
are distributed 
tribution 
times long and straight 
urally differentiate 
periods 
movements. 
because 
hotspots 
despite 
they do not ensure that avatars 
and that density 
avatar mobility. 
behaviors 
of exploration 
dis­
and some­
Levy flights nat­
[9] with short and chaotic 
of travel and periods 
with chaotic 
But Levy flights do no help to model hotspots 
sort of random walks in which the increments 
according 
to a "heavy-tailed" 
ones. Therefore, 
stay grouped around 
the two observed 
around hotspots 
probability 
remains the same 
of avatars: 
movements 
Levy flights 
Indeed, 
4. Realistic 
movement trace generation 
Instead, 
we choose to model the density 
and the move­
constraints 
are generally 
During the first one, all the avatars 
limit the scale, hiding this defect [16]. 
positions 
on the map. The gen­
the Second Life world [35] is partitioned 
into 
realistic 
traces 
of 
commercial 
NVE 
which 
architecture 
However, 
called "islands", 
poor scalability: 
are based on a client-server 
implies 
of Blue Banana requires 
all existing 
The evaluation 
avatar movements. 
projects 
usually 
added to artificially 
For instance, 
separate 
regions 
ited in number of simultaneous 
craft game [36] is split into separated 
because of these scaling 
ously involves 
the number of available 
difficult 
not sufficiently 
to measure the efficiency 
to obtain [17]. Therefore 
at most a few hundreds 
limitations, 
and scalability 
Blue Banana, we therefore 
To evaluate 
current 
each of them being lim­
users and the World of War­
realms. Therefore, 
each trace simultane­
of avatars. 
Moreover, 
real traces is small because 
they are 
real traces are 
of Blue Banana. 
need to accu­
numerous and not sufficiently 
large-scaled 
model avatar movements 
This section 
rately 
large-scale 
bility. 
traces. 
in order to generate 
our model of mo­
presents 
realistic 
Because all current 
existing  popular 
NVEs are central­
that our trace gen-
ized and thus limited 
in scale, 
we believe 
2Dead reckoning 
is the process of estimating 
one's current position 
based upon a previously 
determined 
position. 
in NVEs with a model based on 
an automa­
the periods 
We define hotspots, 
of exploration 
from the pe­
i.e, high density 
zones, 
is de­
The trace generation 
the desert. 
ments of avatars 
ton to discriminate 
riods of travel. 
and by opposition, 
composed 
in two phases. 
are placed on their initial 
erator ensures 
hotspots. 
ator computes 
avatars. 
main principally 
that most of the avatars 
are grouped in the 
During the second phase, step by step, the gener­
ones by moving 
that avatars 