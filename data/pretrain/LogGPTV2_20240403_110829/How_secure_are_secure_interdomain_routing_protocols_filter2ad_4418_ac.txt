BGP
OrAuth
soBGP
SBGP
Honest
BGP + DF
1
0.8
0.6
0.4
0.2
0
Any AS
Non-Stub
 > 25 Customers
 > 250 Customers
 soBGP
 SBGP
Figure 3: CCDF for the “Shortest-Path Export-All”
attack strategy.
“Shortest-Path Export-All” attack strategy. The ﬁrst four
bars on the left assume that network does not use defensive
ﬁltering. We show the success of the manipulator’s strat-
egy on each of the four BGP security variants, in a network
with and without defensive ﬁltering of stubs. The horizon-
tal line in Figure 2 shows the fraction of attacks that are
completely eliminated by defensive ﬁltering; since 85% of
ASes in the CAIDA graph are stubs, properly-implemented
defensive ﬁltering guarantees that only 15% of manipulators
can successfully attack any given victim.
Despite the fact that we used sub-optimal strategies for
the manipulator, we have two concrete observations:
1. Even if we assume the manipulator runs the sub-optimal
“Shortest-Path Export-All” attack strategy on a network
that has S-BGP but not defensive ﬁltering, he can still at-
tract 10% of the ASes in the internetwork with probability
> 10%. Furthermore, more clever strategies for S-BGP (e.g.,
Figure 9 and 10) might increase the manipulator’s probabil-
ity of success to the point where defensive ﬁltering alone
performs even better than S-BGP alone.
2.
Even if both S-BGP and defensive ﬁltering are used,
there is still a non-trivial 2% probability that the manipula-
tor can attract 10% of the ASes in the internetwork. Better
attack strategies could increase this probability even further.
This is particularly striking when we compare with the nor-
mal case, where the manipulator manages to attract 10% of
−4 probability
the ASes in the internetwork with about 10
(not shown).
4.3  Attack  strategy  on  di fferent  protocols
The reader may wonder why we chose to focus speciﬁcally
on the probability of attracting 10% of the ASes in the in-
ternetwork in Figure 2. In the interest of full disclosure, we
now present the full picture:
Figure 3: We show the complimentary cumulative dis-
tribution function (CCDF) of the probability that at least a
x-fraction of the ASes in the internetwork forward traﬃc to
the manipulator when he uses the “Shortest-Path Export-
All” attack strategy. Probability is taken over the uniform
random choice of a victim and manipulator, and observe
that Figure 2 simply presents a crosssection of these results
at the x-axis value of x = 10%. We brieﬂy highlight a few
details about this ﬁgure:
Figure 4: Probability of ﬁnding a shorter path.
BGP curve. Here, the manipulator originates, i.e., an-
nounces that he is directly connected to, the victim preﬁx.
This curve looks almost like the CCDF of a uniform distri-
bution, since the manipulator and the victim both announce
one-hop paths to the preﬁx, and are thus are about equally
likely to attract traﬃc.
Origin Authentication curve.
This time the manip-
ulator announces that he has a direct link to the AS that
legitimately owns the victim preﬁx. Because the manipula-
tor’s path is now two hops long, the amount of traﬃc he can
attract on average is reduced.
soBGP and S-BGP curves. For the attack on soBGP,
the manipulator announces the shortest path that exists in
the AS graph. For the attack on S-BGP (and data-plane
veriﬁcation), the manipulator announces the shortest avail-
able path that he learned from his neighbors. Oddly, the
soBGP and S-BGP curves are almost identical, despite the
fact that S-BGP provides stronger security guarantees than
soBGP (see also Section 4.4).
Honest curve. Here the manipulator behaves ‘normally’,
i.e., using the ranking and export policies of Section 2.2.
BGP+Defensive Filtering curve. Defensive ﬁltering
eliminates all “Shortest-Path Export-All” attack strategies
on BGP by stubs, i.e., by 85% of ASes. Thus, this is ap-
proximately ‘BGP’ curve scaled down to 15%.
Diﬀerent-sized ASes are equally aﬀected. This paper
consistently measures the manipulator’s success by counting
the number of ASes that route through him as a result of
his attack strategy. We also produced versions of Figure 3
that count the fraction of ASes of a given size that route
through the manipulator: (a) All ASes, (b) ASes with at
least 25 customers, and (c) ASes with 250 customers. We
omit these graph as they were almost identical.
4 . 4  S-BG P  fo rces  l o ng  pa th  a nno uncements 
Figures 2 and 3 show that S-BGP is not much more eﬀec-
tive in preventing “Shortest-Path Export-All” attack strate-
gies than the less-secure soBGP. To understand why, let’s
compare the lengths of the path that the manipulator can
announce with soBGP and S-BGP:
Figure 4: We show the probability that the manipulator
can announce a path that is shorter than the normal path,
i.e., the path he would have chosen if had used the rankings
in Section 2.2. Probability is taken over a randomly-chosen
victim, and a manipulator that is randomly chosen from one
of the following four classes: (a) Any AS in the graph, (b)
Non-stubs, or ASes with at least one customer (c) Medium-
sized ASes with at least 25 customers, and (d) Large ASes
with at least 250 customers. If we focus on the results for
921
0.8
0.6
0.4
0.2
0
0
Shortest available path. Export all.
Normal path. Export All.
Normal path. Normal export.
0.2
0.4
Fraction of ASes routing through Manipulator
0.6
0.8
1
Figure 5: Aggressive export policies.
S-BGP, it is clear that larger ASes are more likely to ﬁnd
shorter paths through the network; this follows from the fact
that these ASes are both more richly connected (i.e., they
have large degree), as well more central (i.e., they are closer
to most destinations in the internetwork). Furthermore, we
can also see that ASes (especially small ASes) are more likely
to ﬁnd short paths with soBGP than they are with S-BGP.
From Figure 4, we can conclude that S-BGP is doing ex-
actly what it is designed to do: it is limiting the set of paths
the attacker can announce, thus forcing him to announce
longer paths. However, in light of the results in Figures 2-3,
we must ask ourselves why forcing the manipulator to an-
nounce longer paths does not seem to signiﬁcantly limit the
amount of traﬃc he attracts. We could explain by arguing
that path lengths in the Internet are fairly short, (averaging
about 5 hops in our simulations); so the paths that the ma-
nipulator can get away with announcing in soBGP are only
a few hops shorter than the paths he can announce with S-
BGP. Indeed, as we show in the next section, the fact that
AS paths are normally so short means that the length of the
manipulator’s path often plays less of a role than the set of
neighbors that he exports to.
4.5  Export  policy  matters  as  much  as  leng th
We now show that the attacker’s export policy is as im-
portant as the length of the path he announces:
Figure 5: We show another CCDF of the probability that
at least a x-fraction of the ASes in the internetwork for-
ward traﬃc to the manipulator; probability is taken over
a randomly-chosen victim, and a manipulator chosen ran-
domly from the class of ASes that have at least 25 customers.
We consider three diﬀerent strategies:
(a) Announce the
shortest available path to all neighbors (equivalent to the
“Shortest-Path Export-All” attack strategy on S-BGP), (b)
Announce the normal path to all neighbors, and (c) An-
nounce the normal path using the normal (GR2 and NE)
export policy.
This ﬁgure shows that, on average, announcing a shorter
path is much less important than announcing a path to more
neighbors (i.e., the curves for (a) and (b) are very close,
while the curves for (b) and (c) are quite far apart). Indeed,
when we considered smaller manipulators (not shown), the
curves for (a) and (b) are even closer together. One way to
explain the small gap between (a) and (b) is to note that
the manipulator’s normal path is very often also his shortest
path (this holds for 64% of (manipulator, victim) pairs from
this class); and even when it is not, his normal path tend to
be quite short.
To understand the large gap between (b) and (c), we note
that by violating the normal export policy, the manipulator
can announce paths to his providers, even when his normal
path is not through a customer. His providers are more likely
to choose the customer path through the manipulator, over
some possibly shorter, non-customer path.
4.6  Different  sized  mani pul ators  a nd  victims
Next, we would like to determine which ASes in the Inter-
net are likely to be the most successful manipulators, or the
most vulnerable victims. We consider ASes from four diﬀer-
ent classes: (a) All ASes (b) Non-stubs (ASes with at least
1 customer), (c) ASes with at least 25 customers, (roughly
modeling “Tier 2 ASes”), and (d) Large ASes with at least
250 customers (“Tier 1 ASes”). In the interest of space, we
only summarize our ﬁndings here. Graphs and detailed re-
sults are in the full version [1].
Manipulators. We make the surprising observation that
(c) “Tier 2s” tend to be the most eﬀective manipulators,
attracting more traﬃc than even the (d) “Tier 1s”. In fact,
we found that in many cases, even smaller (b) non-stubs
tend to attract more traﬃc than the “Tier 1s”. Here we
assume that the victim is chosen from the set of all ASes.
Victims. We found that (c) “Tier 2” ASes tend to be the
least vulnerable to attacks. Furthermore, when we consid-
ered attacks on soBGP or S-BGP, we make the surprising
observation that the (d) “Tier 1” ASes are even more vulner-
able than (a) smaller ASes at the edge of the internetwork.
Here the manipulator is chosen from the set of all ASes.
One might expect Tier 1 ASes to attract more traﬃc than
other classes of ASes, but these results indicate that this is
not the case; instead, Tier 2s tend to attract the most traﬃc.
To see why, notice that while Tier 1s are more central (and
thus have short paths to most ASes in the internetwork),
they are also more expensive. That is, a Tier 1 is always
a provider/peer of its neighbors, so even if those neighbors
learn a short path through the Tier 1, they will prefer to
route over a (potentially longer) path through one of their
own customers. On the other hand, Tier 2s tend to be both
central as well as the customer of large Tier 1 ASes, and
therefore in the position to attract the maximum amount
of traﬃc. Thus, these results again follow from the fact
that creating customer paths is often more important than
creating short paths.
4.7  Summary
In some sense, the results of this section suggest that se-
cure routing protocols like S-BGP and soBGP are only deal-
ing with one half of the problem: while they do restrict the
path the manipulator can choose to announce, they fail to re-
strict his export policies. Indeed, because defensive ﬁltering
restricts both the export policies and the paths announced
by stubs, we ﬁnd that it provides a level of protection that
is at least comparable to that provided by S-BGP, and even
data-plane veriﬁcation, alone.
Even if we eliminate attacks by stubs via defensive ﬁl-
tering, we found that the internetwork is still vulnerable to
non-stub ASes that both (a) deviate from normal routing
policies by announcing shorter paths, and (b) deviate from
normal export policies by announcing non-customer paths
to all their neighbors. Furthermore, we have seen that it is
exactly these non-stub ASes (and in particular, the Tier 2s)
that are in the position to launch the most devastating at-
tacks. The success of these attack strategies can be limited
with soBGP, S-BGP, or data-plane veriﬁcation.
93T1b
p
T1a
m
T1c
v
Prefix
Prefix   
T1b
p
T1a
m
T1c
v
Prefix
Prefix   
Figure 6: (a) Normal outcome. (b) Blackhole.
5. SMART INTERCEPTION ATTACKS
We now turn our attention to traﬃc interception attacks
[2, 3, 5]. In an interception attack, the manipulator would
like to attract as much traﬃc as possible to his network (in
order to eavesdrop or tamper with traﬃc) before forward-
ing it on to the victim IP preﬁx. Thus, we require that
an interception attack preserves an available path from the
manipulator to victim.
5 . 1  A  s t ub  tha t  crea tes  a  bl a ckho l e
To provide some intuition, we ﬁrst show how a manipula-
tor could lose a working path to a victim:
Figure 6:
For simplicity, let’s consider an attack on
BGP where the manipulator falsely originates the victim’s
preﬁx. The manipulator m is a web-hosting company in
Illinois, and wants to attract traﬃc destined for the victim
v a web-hosting company in France. The manipulator is a
multi-homed stub with two providers, a Tier 1 AS T 1a, and
a Chicago-area telecom provider p. The left ﬁgure shows the
normal outcome, where the manipulator has a path to victim
available through each of his providers. The right ﬁgure
shows what happens when the manipulator announces the
victim’s preﬁx to each of his providers; since each of them
prefer short customer paths, they will forward their traﬃc
through the manipulator. The manipulator has now created
a blackhole; he has no available path to the victim v through
either of his providers.
5.2 When do interception attacks succeed?
The reader may be surprised to learn that there are many
situations in which blackholes are guaranteed not to occur.
We can prove that, within our model of routing policies,
the manipulator can aggressively announce paths to certain
neighbors while still preserving a path to the victim:
Theorem 5.1. Assume that GR1 holds, and that all ASes
use the routing policies in Section 2.2. Suppose the manipu-
lator has an available path through a neighbor of a type x in
the normal outcome. If there is (cid:2) in entry (x, y) of Table 1,
then a path through that neighbor will still be available, even
if the manipulator announces any path to any neighbor of
type y.
The full version [1] presents the proofs. We also not that
the results marked with (cid:2)∗
hold even if the internetwork
does not obey GR1. We also observe that this theorem is
‘sharp’; if there is an X in entry (x, y) of Table 1, we show
by counterexample that the manipulator can sometimes lose
an available path of type x if he announces certain paths to
a neighbor of type y. Indeed, Figure 6 is a counterexample
that proves the X in the lower-right entry of Table 1.
Results of this form were presented in an earlier work
[2]. However, [2] claims that a peer-path cannot be lost
To preserve a May announce to neighboring...