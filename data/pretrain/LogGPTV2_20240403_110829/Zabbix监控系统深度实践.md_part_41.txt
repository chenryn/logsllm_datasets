上传代码包
特作·
编辑代码
·341°
---
## Page 357
342
RET 发送GET请求，appid 和 secret 替换为自己的 appID 和 appsecret 即可，返回值如下。
https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSEC
试号”。
是不相同的，一定要再一次关注这里显示的二维码，用微信扫一扫后，关注“微信公众平台测
请测试账号，真的是长期需要了，再进行微信认证。
账号获得。微信认证需要300元，申请测试账号则免费，但有时间限制是1年，建议各位先申
而我们的需求是调用API向特定的用户发送信息，这个功能需要通过微信认证，或者申请测试
输人完毕后，就可以验证了。
以自定义。需要注意的是，这里修改了，在SAE 的 index.py中，TOKEN这个变量也需要统一。
Zabbix监控系统深度实践
26.2.3获取access_token
26.2.2
其中，ACCESS_TOKEN即为我们的身份凭证。
access_token是微信公众平台账号调用接口的身份凭证，使用applID 和 appsecret，向
同时获得测试账号的二维码，注意，这个二维码和之前获取到的自己的公众账号的二维码
输人信息后，可以获得applD 和appsecret，如图26-6所示。
验证通过后，要申请测试开发账号，因为申请的只是普通的公众平台的账号，提供的API
最后在微信公众平台的配置中，URL输入在SAE配置的二级域名；TOKEN写zabbix，可
申请测试账号
appsecret
applD
试号信息
e474a9aa0
图26-6
---
## Page 358
send?access_token=ACCESS_TOKEN，推送的是文字信息，POST的内容如下。
就留空。返回值如下：
取所有用户的 openid 的接口如下：
26.2.5
26.2.4
不出意外的话，我们的手机就能收到这个消息了。
发送消息使用POST请求，目标URL是https://api.weixin.qq.com/cgi-bin/message/custom/
openid 是根据用户的微信号加密而成的，只能获取关注我们测试账号的用户的openid。获
"text":
“msgtype" :" text"
"touser" :" OPENID"
"next_openid":"o37IDtySzTLZ6zClUGosGWevrABM"
"data":{
"count":1,
"total":
其中，
发送第一条文字消息
"openid":[
“content" :" Hello World"
：next_openid 表示一个偏移量，意思是从第几个关注用户开始查询，要查询全部的，
获取用户的openid
"OPENID"
第26章微信公众平台报警
343
---
## Page 359
·344。
量（这个是针对2G用户的），综合考虑，使用单纯的文字消息是比较合适的。
间则通知其他工程师。
正确的流程是：工程师通过微信收到微信报警，如果自己有时间就应该马上处理，如果没有时
更新一次，保证了在工作时间中更加快速地生效。
人更新这个用户，我们可以做到工作时间5分钟刷新一次数据库内关系，非工作时间30分钟
15分钟请求一次，可以做到每天24×60/15=96次请求，低于100次。而且，晚上一般不会有
服消息接口时，用户的openid直接从数据库中获取，避免频繁请求获取关注用户的列表。每
的对应表，每15分钟通过获取关注用户接口拉取最新的数据填充。这样每一次在调用发送客
需要发送报警人的信息由 Zabbix 维护，然后在数据库中存储一张“Zabbix用户一微信openid"
息每日限额为50000次。
面几个接口：
26.3微信接口请求次数限制
Zabbix监控系统深度实践
微信报警的目的是快速，使用图片一方面需要上传图片素材，另一方面增加了手机端的流
微信公众平台本身是支持图片报警的，但笔者认为不应该让手机端的报警做的这么厚重
由于获取关注用户这一限制，我们不能频繁地获取到最新的用户列表，笔者的建议是，将
（2）获取关注用户列表（用于获取openid）。
（1）请求 access_token。
微信公众平台对于一些操作都做了每日请求次数的限制，在发送报警的过程中，用到了下
微信对于请求 access_token 没有限制，获取关注用户列表每日限额为100次，发送客服消
（3）发送客服消息。
---
## Page 360
需要浪费时间了吗？是的，这样做，是可以即时解决问题，但却错过了一个思考的机会。一个
没有解决，再把问题提出让大家帮忙。有朋友问，我一开始就提问然后得到解决，那么不就不
Zabbix启动不了。
也会经常收到朋友们的邮件。但是有些问题是可探讨性有些欠缺的，主要有以下几种。
ZabbixQuestionList/提问，笔者尽量做到每个问题都有解答。
上建立了ZabbixQuestionList 项目，就是这个目的，大家可以到https://github.com/baniuyao/
有人如果要提问相同的问题，他可以先进行搜索，看是否已经有解答的方案。笔者在Github
的Issue方式来提问，因为它比较像TODO list的方式，一个问题结束后就可以close掉。后面
forumdisplay.php?f=26，但相对Zabbix论坛，中文版比较冷清。笔者个人比较喜欢Github上
https://ww.zabbix.com/forum/也是比较活跃的地方，其中有中文版https://www.zabbix.com/forum/
交流群”92242469，还有个较为官方的“ZABBIX中文论坛”62239409，Zabbix的官方论坛
笔者希望大家碰到问题，能够先自己思考，想一下解决办法，在思考了一段时间后，还是
（3）没有深度思考，比如明明日志里告诉你数据库没有连接上，仍然询问为什么我的
（2）事先没有仔细阅读资料，问题比较老旧。
（1）问题空泛，比如Zabbix怎么安装，数据库怎么配。
对于提问，在此想多说几句。在群里面，有很多朋友对于Zabbix有很多问题，同时笔者
Zabbix的社区目前不是非常活跃，大家交流主要是在qq群，比较国内活跃的群有“zabbix
第27章
社区论坛
·345?
---
## Page 361
?346
都没有提高。
形成了思维定势：有问题一提问，而不是有问题一思考一提问，最后在自己的技术领域中一点
单的问题，这样问题解决后，下次碰到类似的情况，还是不会思考，只会提问。久而久之，就
候，双方都是一个提高的过程。但如果一点都不思考，有问题就抛出来，很有可能是个非常简
好的问题，提问的人在思考的过程中已经获益颇多，而回答的人在和提问人一起讨论问题的时
Zabbix监控系统深度实践
---
## Page 362
大多数是在通知中可用，即报警信息中，至于具体的使用范围，请到上述URL中查询。
这里主要会说明一些笔者认为常用的宏（比如Inventory就没有介绍的必要）。下面介绍的这些宏
manual/appendix/macros/supported_by_location。在本附录中，笔者不会完整的将表格翻译一遍，
记录的是Zabbix现在支持的宏和使用的范围，地址在https://www.zabbix.com/documentation/2.2/
Zabbix自带宏
附录
[ITEM.KEY}
(ITEM.ID)
[ITEM.DESCRIPTION]
(HOST.IP)
(EVENT.VALUE)
{EVENT.TIME)
(EVENT.STATUS)
(EVENT.RECOVERY.VALUE)
(EVENT.RECOVERY.TIME)
(EVENT.RECOVERY.STATUS)
(EVENT.RECOVERY.DATE)
(EVENT.ID)
(EVENT.DATE)
(EVENT.AGE)
(EVENT.ACK.STATUE)
(EVENT.ACK.HISTORY)
Zabbix自带的宏非常多，而且也不是在任何地方都能使用，Zabbix官网有一张表格，里面
宏名称
Item的key
Item的id，和items表中的itemid表一致
配置界面中配置的Description
Trigger中的Expression中的第N个Item（下简称Item）的Description，即Item
Trigger中的Expression中的第N个Host的IP。最多支持9个，可以这样使用
Event的状态，返回的是数字
Event产生的时间
Event的状态，返回的是字符串
Recovery类型Event的状态，返回的是数字
Recovery类型Event产生的时间
Recovery类型Event的状态，返回的是字符串
Trigger恢复时候产生的Recovery类型的Event产生的时间
(HOST.IP1)
Event的id，和数据库中events 表的eventid 对应
Event产生的日期
Event产生到现在的时间，对于报警升级时的信息提示，十分有用
Event的ACK状态
Event的ACK的历史
说
明
·347·
---
## Page 363
·348
Zabbix监控系统深度实践
(TRIGGER.VALUE)
(TRIGGER.URL)
(TRIGGER.TEMPLATE.NAME)
(TRIGGER.STATUS)
(TRIGGER.STATE)
(TRIGGER.SERVERITY)
(TRIGGER.NSERVERITY)
(TRIGGER.NAME)
[TRIGGER.ID)
{TRIGGER.EXPRESSION}
PROBLEM.UNACK)
[TRIGGER.PROBLEM.EVENTS.
PROBLEM.ACK}
(TRIGGER.PROBLEM.EVENTS.
UNACK}
TRIGGER.EVENTS.PROBLEM.
(TRIGGER.EVENTS.PROBLEM.ACK)
(TRIGGER.DESCRIPTION)
(PROXY.NAME)
(NODE.NAME)
{NODE.ID)
(ITEM.STATE)
{ITEM.LASTVALUE}
宏名称
Trigger的状态，返回的是数字，“0”表示“oK”，“1”表示“Problem”
以后收到同样的报警以后就可以知道报警的解决方案是什么了
经有了解决方法，并且记录到了wiki，那么这里就可以记录下来。这样的话
Triger所在的Template，如果返回的是“UNKNOWN”
Trigger的状态，返回的是字符串“Problem”或者“OK”
Trigger最近一次状态，返回值是“Unknown”
Trigger的 Serverity的字符串形式
表示“Information”，“2”表示“Warning”，“3”表示“Average”，“4”表示“High”
Trigger的 Serverty的数字形式。默认情况下，“0”表示“Not classified"，“1”"
Trigger的名称
Trigger的id，和triggers表中的triggerid 对应
Trigger的Expression，这个能够让我们知道报警的具体逻辑
同上，所有Problem状态的Triger中没有被ACK的Evennt
Trigger 的 URL,
的是所有Problem状态的Trigger的被ACK的Event
和(TRIGGER.EVENT.PROBLEM.ACK}类似，
Trigger中没有被ACK的Event数量
Trigger中被ACK的Event 数量
Host上
Trigger的Description
类似(NODE.NAME）
Node的名称
的id
Trigger中的Expression中的第N个Iem所在Host属于的Node（下简称Node）
Item的名称
Item最近一次获取的数据
”表示“Disaster”。
严重程度依次上升
说
明
或者“Normal’
，只是这里会多加一个限制，返回
表示Trigger是定义在
续
表
---
## Page 364
追逐技术的梦想。
有很多新东西要学习。不禁感叹，技术的发展真是非常迅速。
会做数据科学的基础架构的工作，和Zabbix没多大关系。为了写好这本书，查阅了很多文档，
本都是一个套路一先拼命两个礼拜，完成很多作业后，就开始玩了。直到临近开学，才开始
就要变成后面几天的压力了。
细化到每天要写的篇幅。一旦哪天有事或者状态不佳或者是才思枯竭，那这天应该完成的部分
实在具有人生里程碑的意义。
录一番。就像古人打了胜仗要立碑述功一样。虽然没有那么隆重，但写这本书对我个人而言，
在写这本书的过程中，我经常会想后记要怎么写。因为自古至今，做了什么大事，都喜欢要记
后记
恶补。幸好这次写书不像如此，虽说一周中某一天会有延迟，但每一周的进度都是总体跟得上的。
一个月完成，然后第二个月就可以肆无忌禅地玩了。但根据我自己和同学的经验来看，大家基
最后，再一次感谢我的父母和亲爱的老婆，你们对我的支持是对我莫大的鼓励。谢谢你们。
吃技术饭就意为着要“活到老，学到老”。在这我希望我能和各位一起保持对技术的热情，
我在PPTV使用的Zabbix版本是1.8，写书时Zabbix的版本是2.2。中间的时间我在唯品
这个很像以前念书时候的暑假作业，一开始上来非常拼命，一天做两天的暑假作业，妄图
写书最大的感受是一
终于到了后记部分了，感觉很有成就感，因为能够写到后记，就说明这本书已经完成了。
一累。因为自己限定了时间，我需要将大任务分割成小任务，然后再
2014年6月16日于上海
·349°
姚仁捷
---
## Page 365
?350?
结果。
式就是发布简单的版本，根据用户的反馈，进行一次一次的迭代，最后收敛到一个用户满意的
哪个更强呢？从80分做到100分，需要花多大的精力呢？对于软件开发本身来说，正确的方
确实能做到100分。但我们要这么想，从0分到80分，用户的快感，和80分到100分的快感
可以了，已经能做到60分了，再加上基本的导航，80分就到了。当然，做出科幻片似的前端
别人是没有工具可以用的，这种情况，叫做“0分”。你的产品只要基本的将数据变成曲线就
一定要把前端界面搞的跟科幻片一样才行，否则就是“不可用”状态。其实在你的产品推出之前
一个Bug 都没有，然后界面酷拽炫，高大上，才能推出去给别人用。比如做个数据可视化工具，
先可用，再好用
之亦然。用户会把“产品”和你这个人绑定起来，因“产品”来对你进行加减法。
在PPTV做的监控系统，目前在唯品会做的日志平台。你做出来的每一个被他人使用的工具，
产品。而是指的是程序员做的每一个“东西”。
品”，不是一般意义上的“产品”—某个App是个产品，某个网站是个产品，某个活动是个
友聊天下来的感觉，我发现，很多程序员对于“产品”这两个字是没有概念的。这里提到的“产
我们在做“产品”
程序员职业生涯的一些感悟
我一直在做系统开发相关的工作，做出来的东西，大多数面对的用户是程序员。比如最早
我是个程序员，我相信买这本书的大多数也是程序员。在我工作的过程中，以及跟其他朋
这6个字，是我对于产品的基本观点。大多数程序员都是完美主义者，巴不得开发的东西
---
## Page 366
对于一个任务的完成时间，几乎所以程序员都会高估自己的战斗力，所以肯定是任务的实际完
程序员这个种族
美的方法。
的可以用Angular JS。现在前端工程师非常难招，学习一下，以后工资能高点，这是个两全其
发个简单的 Demo 绰绰有余。比如 Python 的 bottle.py、web.py，Ruby 的 ruby on rails，再高级点
哪个更好用呢？有人说前端太难了，没法做。这里我要澄清下：前端不难。1周入门，2周开
而且，想象一下，一个是对着黑洞洞的终端敲命令，一个是在Chrome中鼠标点点就完成工作，
除非只是一个脚本，否则一个易用的前端非常的重要
习如何使用这个产品。这是推销产品的一个好方式。
作领域也不通，不会用产品是非常正常的。一个好的文档，能让用户了解这个产品的背景，学
文档的地步了。首先，这种令人发指的易用性是不存在的，其次，不同用户的知识面不同，工
极限了，如果不会用，一定是用户自己智商的问题。简单来说，就是易用性已经到达了不需要
文档很重要
是要一个“能用”的版本，千万不能把半成品推出去给别人用。
这个产品想要在用户心里变成非垃圾，是非常困难的。所以说，在推出一个产品的时候，一定
求，然后再慢慢完善它。用户对于产品的自信，是不可恢复的。当用户认为一个产品垃圾之后，
用”不是说东西还没法稳定的运行就推出去，而是把最基本的功能跑通，满足用户最痛点的需
的冲动。其实这两个观点并不矛盾。我对于一个“产品”的观点是“先可用，再好用”，这里的“可
不要把半成品推出去给别人使用
程序员的自信心基本都是爆表状态，也都是乐观主义者、完美主义者。乐观主义者体现在
一个好用的前端，会使得产品的易用性是呈指数级增长，并且可以将用户拓展到非程序员。
一般越牛的程序员越不情愿写文档。而另一方面，程序员觉得自己的产品易用性已经到达
看到这句话，大家是不是觉得更前面说的“先可用，再好用”是矛盾的，瞬间有了想打我
程序员职业生涯的一些感悟
·351°
---
## Page 367
·352
个时间单位就能正确评价新程序员了。
用了9个时间单位。在我意识到我也有这个“程序员互相看不起”的问题之后，现在改进到5
设这个新程序员的水平是4分，那么以前从我认为这人水平是0，到正确判断出这人水平是4，
员的评价，才能回到客观中。如下图，横坐标轴表示时间，纵坐标轴是新程序员的水平。假
对于他问我的问题我也很反感，反正就是怎么看怎么不顺眼。在接触了解以后，对这位新程序
确。在我年少轻狂的时候，每当公司来了个新程序员，我第一反应是这个人技术肯定不如我，
以程序员对于自己推出的产品的要求就是完美无瑕。
成时间晚于程序员自己估计的时间；完美主义者体现在程序员认为自己能解决所有的问题，所
Zabbix监控系统深度实践
现在回头想想，如果大家也意识到自己有这个问题，就慢慢改吧，哈哈。
程序员另一个特征就是容易同行相轻，这个想法是诸超提出来的，自己想想真是非常的正
G
2
1
2
3
■曾经的我
我眼中的程序员
5
9
一现在的我
8
D
10
2014年8月于上海
11
姚仁捷
12
---