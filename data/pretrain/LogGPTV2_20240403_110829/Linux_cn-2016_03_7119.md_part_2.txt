* 授权: GNU GPL v2
* 版本号: 3.4.2
### Varnish Cache
Varnish Cache 是一个为性能和灵活性而生的 web 加速器。它新颖的架构设计能带来显著的性能提升。根据你的架构，通常情况下它能加速响应速度300-1000倍。Varnish 将页面存储到内存，这样 web 服务器就无需重复地创建相同的页面，只需要在页面发生变化后重新生成。页面内容直接从内存中访问，当然比其他方式更快。
此外 Varnish 能大大提升响应 web 页面的速度，用在任何应用服务器上都能使网站访问速度大幅度地提升。
按经验，Varnish Cache 比较经济的配置是1-16GB内存+ SSD 固态硬盘。
其特性包括：
* 新颖的设计
* VCL - 非常灵活的配置语言。VCL 配置会转换成 C，然后编译、加载、运行，灵活且高效
* 能使用 round-robin 轮询和随机分发两种方式来负载均衡，两种方式下后端服务器都可以设置权重
* 基于 DNS、随机、散列和客户端 IP 的 分发器   （    Director    ） 
* 多台后端主机间的负载均衡
* 支持 Edge Side Includes，包括拼装压缩后的 ESI 片段
* 重度多线程并发
* URL 重写
* 单 Varnish 能够缓存多个虚拟主机
* 日志数据存储在共享内存中
* 基本的后端服务器健康检查
* 优雅地处理后端服务器“挂掉”
* 命令行界面的管理控制台
* 使用内联 C 语言来扩展 Varnish
* 可以与 Apache 用在相同的系统上
* 单个系统可运行多个 Varnish
* 支持 HAProxy 代理协议。该协议在每个收到的 TCP 请求——例如 SSL 终止过程中——附加一小段 http 头信息，以记录客户端的真实地址
* 冷热 VCL 状态
* 可以用名为 VMOD 的 Varnish 模块来提供插件扩展
* 通过 VMOD 定义后端主机
* Gzip 压缩及解压
* HTTP 流的通过和获取
* 神圣模式和优雅模式。用 Varnish 作为负载均衡器，神圣模式下可以将不稳定的后端服务器在一段时间内打入黑名单，阻止它们继续提供流量服务。优雅模式允许 Varnish 在获取不到后端服务器状态良好的响应时，提供已过期版本的页面或其它内容。
* 实验性支持持久化存储，无需 LRU 缓存淘汰
![](/data/attachment/album/201603/17/223550eoavsnrj7nw1uaza.png)
* 网站: [www.varnish-cache.org](https://www.varnish-cache.org/)
* 开发: Varnish Software
* 授权: FreeBSD
* 版本号: 4.1.0
### Polipo
Polipo 是一个开源的 HTTP 缓存代理，只需要非常低的资源开销。
它监听来自浏览器的 web 页面请求，转发到 web 服务器，然后将服务器的响应转发到浏览器。在此过程中，它能优化和整形网络流量。从本质来讲 Polipo 与 WWWOFFLE 很相似，但其实现技术更接近于 Squid。
Polipo 最开始的目标是作为一个兼容 HTTP/1.1 的代理，理论它能在任何兼容 HTTP/1.1 或更早的 HTTP/1.0 的站点上运行。
其特性包括：
* HTTP 1.1、IPv4 & IPv6、流量过滤和隐私保护增强
* 如确认远程服务器支持的话，则无论收到的请求是管道处理过的还是在多个连接上同时收到的，都使用 HTTP/1.1  管道   （    pipelining    ） 
* 下载被中断时缓存起始部分，当需要续传时用 区间   （    Range    ） 请求来完成下载
* 将 HTTP/1.0 的客户端请求升级为 HTTP/1.1，然后按照客户端支持的级别进行升级或降级后回复
* 全面支持 IPv6 （作用域（链路本地）地址除外）
* 作为 IPv4 和 IPv6 网络的网桥
* 内容过滤
* 能使用 Poor Man 多路复用技术   （    Poor Man's Multiplexing    ） 降低延迟
* 支持 SOCKS 4 和 SOCKS 5 协议
* HTTPS 代理
* 扮演透明代理的角色
* 可以与 Privoxy 或 tor 一起运行
* 网站: [www.pps.univ-paris-diderot.fr/~jch/software/polipo/](http://www.pps.univ-paris-diderot.fr/%7Ejch/software/polipo/)
* 开发: Juliusz Chroboczek, Christopher Davis
* 授权: MIT License
* 版本号: 1.1.1
### Tinyproxy
Tinyproxy 是一个轻量级的开源 web 代理守护进程，其设计目标是快而小。它适用于需要完整 HTTP 代理特性，但系统资源又不足以运行大型代理的场景，比如嵌入式部署。
Tinyproxy 对小规模网络非常有用，这样的场合下大型代理会使系统资源紧张，或有安全风险。Tinyproxy 的一个关键特性是其缓冲连接的理念。从效果上看， Tinyproxy 对服务器的响应进行了高速缓冲，然后按照客户端能够处理的最高速度进行响应。该特性极大的降低了网络延滞带来的问题。
特性：
* 易于修改
* 隐匿模式 - 定义哪些 HTTP 头允许通过，哪些又会被拦截
* 支持 HTTPS - Tinyproxy 允许通过 CONNECT 方法转发 HTTPS 连接，任何情况下都不会修改数据流量
* 远程监控 - 远程访问代理统计数据，让你能清楚了解代理服务当前的忙碌状态
* 平均负载监控 - 通过配置，当服务器的负载接近一定值后拒绝新连接
* 访问控制 - 通过配置，仅允许指定子网或 IP 地址的访问
* 安全 - 运行无需额外权限，减小了系统受到威胁的概率
* 基于 URL 的过滤 - 允许基于域和URL的黑白名单
* 透明代理 - 配置为透明代理，这样客户端就无需任何配置
* 代理链 - 在流量出口处采用上游代理服务器，而不是直接转发到目标服务器，创建我们所说的代理链
* 隐私特性 - 限制允许从浏览器收到的来自 HTTP 服务器的数据（例如 cookies），同时限制允许通过的从浏览器到 HTTP 服务器的数据（例如版本信息）
* 低开销 - 使用 glibc 内存开销只有2MB，CPU 负载按并发连接数线性增长（取决于网络连接速度）。 Tinyproxy 可以运行在老旧的机器上而无需担心性能问题。
* 网站: [banu.com/tinyproxy](https://banu.com/tinyproxy/)
* 开发: Robert James Kaes和其他贡献者
* 授权: GNU GPL v2
* 版本号: 1.8.3
---
via: 
译者：[fw8899](https://github.com/fw8899) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出