I am working on an implementation of group convolutions in Keras, after Cohen
& Welling 2016. For 2D group-convolutions I've subclassed `Conv2D` as
`GroupConv2D`, now I want to add 3D group-convolutions, and it makes more
sense to subclass `Conv` as `GroupConv`, and then subclass that as
`GroupConv2D` and `GroupConv3D`, as is done with regular convolutions in
Keras. However `Conv` itself is not exported so I can't do that.
Is it possible to make `Conv` public? Or is there perhaps a different way for
me to do this without `Conv` being public? Without using the tensorflow
backend I can import it (`from keras.layers.convolutional import Conv` works
but `from tensorflow.keras.layers.convolutional import Conv` does not), but
that seems like a bad idea, or is that fine?