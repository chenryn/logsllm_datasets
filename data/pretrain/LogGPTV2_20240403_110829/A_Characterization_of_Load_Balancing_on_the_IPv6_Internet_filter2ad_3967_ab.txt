### Probing Identifiers in the TCP Sequence Number Field

We execute Multiple Destination Addresses (MDA) between each source and destination pair. Each execution varies the four gray fields shown in Fig. 2. This approach allows us to identify load balancers and determine which header fields they use when computing a probe's flow identifier. At each hop, we probe with up to 256 different flow identifiers, a limitation imposed by the 8 bits available in the traffic class field and the destination address. Using 256 different flow identifiers, MDA can identify up to 39 distinct next hops at a confidence level of α = 0.95; 256 probes were sufficient for 99.99% of the measured hops.

### Dataset

We collected IPv6 route measurements from 7 vantage points on CAIDA’s Ark platform and from 5 vantage points on the Linode cloud hosting service, as detailed in Table 1. The vantage points are distributed across 7 countries in 3 continents. Each vantage point measures routes to a list of 51,927 destinations, constructed by sampling two addresses from each /48 prefix in a hitlist of 700,000 IPv6 addresses by Gasser et al. [9]. The dataset was collected on Ark from August 29th to October 3rd, 2016, and on Linode from September 12th to October 3rd, 2016. We chose these platforms because, at the time of writing, PlanetLab does not support IPv6, and RIPE Atlas does not support MDA.

We discard MDA measurements that contain loops at the interface level or do not observe any router (less than 1% of measurements). We consider MDA measurements that do not reach the destination up to the furthest hop common to all four MDA runs toward that destination. Our analysis focuses on IP interfaces, and we do not perform IP-to-router aliasing, meaning a single physical router might be counted multiple times (once for each interface we measure).

For IPv6 to AS mapping, we used the AS mapping database provided by Team Cymru. To better understand load balancing behavior, we also queried reverse DNS entries (PTR records) for IPv6 addresses in our measurements.

### Results

In this section, we characterize the prevalence of IPv6 load balancing (Section 5.1), the behavior of IPv6 routers performing load balancing (Section 5.2), and diamond properties (Section 5.3). Finally, we discuss some IPv6-specific confounding factors (Section 5.4). Our results generally align with previous reports on the IPv4 Internet, but we highlight a few key differences.

#### 5.1 Load Balancing Prevalence

Table 1 shows the fraction of routes from each vantage point that traverse a load balancer (‘Overall’ column). We find that load balancing is prevalent in IPv6 routes. The heterogeneity among vantage points can be attributed to load balancers one or two hops upstream of some vantage points (marked with a (cid:3)). For Linode, these load balancers are within Linode’s own network, as identified by IP-to-AS mapping. These load balancers appear on most routes and significantly impact observations. To mitigate this impact, we also show the fraction of routes traversing a load balancer when ignoring load balancers two IP hops upstream of vantage points if they are on the same (origin) AS (‘Filtered’ column). After filtering, we observe more homogeneous load balancing prevalence across vantage points. The filtered results provide a better representation of load balancing on IPv6 transit networks and may be more representative of other vantage points. We find that of the 45% of routes that traverse a Tier-1 AS, as identified by CAIDA’s AS-relationship inference algorithm [10], 29% traverse a load balancer inside the Tier-1.

Figure 3 illustrates the distribution of the number of load balancers over all routes in our dataset for each platform. We observe that routes often traverse multiple load balancers. (Note that one hop can have multiple load balancers, e.g., hop 2 in Fig. 1.) Specifically, 76% of Linode routes traverse three or more load balancers, often due to traversing three load balancers in Linode’s network (see ‘Diamond 1’ in Fig. 1). Figure 3 also shows the number of load balancers traversed when ignoring load balancers two IP hops upstream of vantage points if they are on the same (origin) AS (dotted lines). After filtering, we observe similar load balancing from Ark and Linode vantage points.

Figure 4 shows the distribution of the number of diamonds over all routes in our dataset. Since diamonds start and end on interfaces that all packets traverse, the number of diamonds on a route provides a lower bound for the number of load balancers that packets traverse to reach the destination. Although Figure 3 indicates that routes can traverse many load balancers, these are grouped into a small number of diamonds. As we will show later (Section 5.3), diamonds are complex and contain many load balancers. This result is consistent with previous findings for IPv4 load balancing [1].

#### 5.2 Classes of Load Balancing Behavior

We now investigate the IPv6 header fields that load balancers use to compute flow identifiers to choose next hops. We identify load balancers by their IPv6 addresses. Table 2 shows the fraction of load balancers in each class and the percentage of routes that traverse at least one load balancer in each class. We also report results from Augustin et al. [1] for IPv4 load balancers. (Note that Augustin’s results are from 2011, so the differences we discuss might also be due to network evolution and not only IP version).

We find that per-destination, per-flow, and per-packet load balancers are not only the most common load balancer classes but also the most prevalent across route measurements. This is expected, as these classes were used for IPv4 load balancing. Despite this similarity, we observe a significantly higher fraction of IPv6 routes traversing per-packet load balancers. We discuss this further in Section 5.4.

We also find other classes of load balancers. For example, 3.2% of load balancers perform per-flow load balancing considering the traffic class field (in addition to the destination address and source port). This behavior is the default in at least JunOS 15.1. We could not find any reports on how many IPv4 load balancers consider the TOS field to compare. Interestingly, we find 6% of load balancers that use only the TCP ports for load balancing. We manually investigated these load balancers and found this behavior can be configured in RouterOS under the name of “per-application load balancing.” Surprisingly, we find only 0.8% of load balancers that consider IPv6’s flow label (with or without other fields). Overall, 4% of the load balancers consider either IPv6’s traffic class or flow label fields.

#### 5.3 Diamond Characteristics

We now characterize diamonds on routes with load balancing using the same methodology and metrics as Augustin et al. [1] and compare the observations.

**Diamond Length:** Figure 5 shows the distribution of diamond lengths. We find that diamonds are usually short, and that load balancers one or two hops upstream of vantage points have longer diamonds than average. If we ignore these load balancers (dashed lines), both datasets observe very similar distributions.