**Title: Distributed Implementation of Wide-Area Monitoring Algorithms for Power Systems Using a US-Wide ExoGENI-WAMS Testbed**

**Authors: Jianhua Zhang, Aranya Chakrabortty, and Yufeng Xin**

### 1. Distributed Optimization Algorithms for Wide-Area Oscillation Monitoring in Power Systems Using Inter-Regional PMU–PDC Architectures

**Authors: Seyedbehzad Nabavi (Student Member, IEEE), Jianhua Zhang (Student Member, IEEE), and Aranya Chakrabortty (Senior Member, IEEE)**

**Abstract:**
In this paper, we present a set of distributed algorithms for estimating the electromechanical oscillation modes of large power system networks using synchrophasors. As the number of Phasor Measurement Units (PMUs) in the North American grid scales up to thousands, system operators are increasingly adopting distributed cyber-physical architectures for wide-area monitoring and control operations. Traditional centralized approaches are becoming untenable due to factors such as data volume, security, communication overhead, and real-time constraints. To address this challenge, we propose three different communication and computational architectures that enable estimators at various utility company control centers to run local optimization algorithms using local PMU data and then communicate with other estimators to reach a global solution. Both synchronous and asynchronous communications are considered. Each architecture integrates a centralized Prony-based algorithm with several variants of the Alternating Direction Method of Multipliers (ADMM). We discuss the relative advantages and bottlenecks of each architecture using simulations of IEEE 68-bus and IEEE 145-bus power systems, as well as an Exo-GENI-based software-defined network.

**Index Terms:** Distributed optimization, Prony, phasor measurement units, Alternating Direction Method of Multipliers (ADMM)

### I. Introduction

Following the Northeast blackout of 2003, Wide-Area Measurement System (WAMS) technology using Phasor Measurement Units (PMUs) has significantly matured for the North American grid [1]. However, as the number of PMUs scales up to the thousands under the US Department of Energy’s smart grid demonstration initiative, Independent System Operators (ISOs) and utility companies face the challenge of efficiently harvesting, processing, and utilizing the resulting vast volumes of real-time data for wide-area monitoring and control. The current centralized WAMS architecture will no longer be sustainable under such data explosion, necessitating the development of a completely distributed cyber-physical architecture [2].

For example, in the Eastern Interconnection (EI) of the US grid, about 60 PMUs are currently streaming data via the Internet to a super phasor data concentrator (SPDC) handling approximately 100,000 data points per second. This architecture will become untenable as the EI scales up to 300-400 PMUs by 2015. Research is being conducted by the Data and Network Management Task Team (DNMTT) of the North American Synchrophasor Initiative (NASPI) on implementing this distributed architecture, focusing on protocols, Quality-of-Service, latency, bandwidth, and security [3].

However, little attention has been paid to the critical aspect of developing distributed algorithms [4]. Due to the lack of a cyber-physical research infrastructure and the priorities set by PMU installations, the NASPI community has not yet delved into translating currently used centralized algorithms for wide-area monitoring and control [5] into a distributed computing framework. Developing such algorithms is imperative not only for increasing reliability by eliminating single-point failures but also for minimizing network transit. Transmitting data across a wide-area communication network (WAN) is expensive, and the links can be relatively slow, making distributed PMU data processing a natural choice [6].

Motivated by this challenge, in this paper, we propose three different distributed communication and computational architectures for modal estimation of electromechanical oscillations, one of the most critical wide-area monitoring applications. Several centralized algorithms have been proposed over the past decade, including the Eigenvalue Realization Algorithm (ERA) [7], Prony analysis [8], mode metering [9], and Hilbert-Huang transform [10]. However, these algorithms are based on offline techniques and use only a small, observable set of PMUs. In contrast, we formulate the mode estimation problem as a global consensus problem for the coefficients of the characteristic polynomial of the system and solve it using ADMM. The required communication network for this distributed estimation is shown in Fig. 1. The physical grid is divided into multiple balancing regions or areas, which may or may not be coherent but belong to different utility companies. PMUs in each area communicate their data in real-time to estimator(s) or Phasor Data Concentrators (PDCs) located at the local control center via a Virtual Private Network (VPN). These local PDCs can then share information with each other and with a central PDC located at the ISO through a controllable wide-area network such as a Software Defined Network (SDN).

The key idea is to use this distributed network protocol to run local consensus at the PDCs inside each area, iteratively generate myopic estimates of the coefficients of the characteristic polynomial, and let the PDCs communicate either with each other or with the central PDC to reach a global solution using several variants of ADMM [11]. Both synchronous and asynchronous communications are considered. Our proposed framework demonstrates how ADMM can be a beneficial tool for distributed mode estimation in power systems, highlighting potential performance bottlenecks, accuracy issues, and computation delays. The innovation of this work lies in proposing a bridge between the cyber and physical implementation of distributed WAMS. We illustrate our algorithms via offline and real-time simulations of two IEEE prototype power system models and discuss the benefits and drawbacks of each algorithm in light of security and data privacy.

Distributed consensus algorithms in power systems have been reported in recent papers, primarily in the context of distributed optimal power flow, distributed generation, and demand-side management, but not for wide-area oscillation monitoring [12]–[16]. Preliminary results on the first architecture proposed in this paper have been reported in our conference papers [17], [18]. However, the results outlined in this paper are significantly more expansive, including two new architectures with unique sets of distributed algorithms, a discussion of their convergence properties, the pertinent issue of asynchronous communication in real-world SDNs, and a case study of end-to-end delay evaluation using a US-wide Exo-GENI network.

The remainder of the paper is organized as follows: Section II presents the power system model of interest. Section III describes the centralized Prony method. Section IV proposes the distributed modal estimation strategies. Sections V and VI show the simulation results. Section VII concludes the paper.

### II. Problem Formulation

We consider a power system consisting of \( n \) generator buses and \( n_l \) load buses. Each synchronous generator is modeled by a second-order swing equation, while each load bus is modeled by two algebraic equations for active and reactive power balance. We convert this differential-algebraic model to a completely differential model using standard techniques of Kron reduction [19] and arrive at a linearized state variable model for the \( n \)-machine system as:

\[
\begin{pmatrix}
\Delta \dot{\delta}(t) \\
\Delta \dot{\omega}(t)
\end{pmatrix}
=
\begin{pmatrix}
0_{n \times n} & M^{-1}L - M^{-1}D \\
\omega_s I_n & 0_{n \times n}
\end{pmatrix}
\begin{pmatrix}
\Delta \delta(t) \\
\Delta \omega(t)
\end{pmatrix},
\]
where \( \Delta \delta = [\Delta \delta_1, \ldots, \Delta \delta_n]^T \), \( \Delta \omega = [\Delta \omega_1, \ldots, \Delta \omega_n]^T \), \( M = \text{diag}(M_1, \ldots, M_n) \), and \( D = \text{diag}(D_1, \ldots, D_n) \). Here, \( \Delta \delta_i \), \( \Delta \omega_i \), \( M_i \), and \( D_i \) represent the small-signal angle deviation, the small-signal frequency deviation, inertia, and mechanical damping of generator \( i \), respectively. \( I_n \) is the \( (n \times n) \) identity matrix, and \( \omega_s \) is the synchronous speed of the system. The definition of matrix \( L \) is referred to in [17]. We consider the output vector \( y(t) \) to be a set of phase angle measurements \( \Delta \theta_i(t) \), \( i = 1, \ldots, p \), measured by PMUs at \( p \) designated buses. Other outputs such as bus voltages and frequencies may also be considered, but we restrict our analysis to phase angles only. The eigenvalues of \( A \) are denoted by \( (-\sigma_l \pm j\Omega_l) \), where \( j \equiv \sqrt{-1} \). Our objective is to estimate these \( 2n \) eigenvalues of \( A \) from \( y(t) \) in a distributed fashion using multiple computational resources. For this purpose, we next describe how the commonly used Prony algorithm for modal estimation can be cast as a distributed optimization problem. We first recall the centralized Prony algorithm and then reformulate it as a distributed algorithm using three different cyber-physical architectures.

### III. Modal Estimation Using the Prony Method

A generic expression for the solution of \( \Delta \theta_i(t) \) in (1) can be written as:

\[
\Delta \theta_i(t) = \sum_{l=1}^n \left( r_{il} e^{(-\sigma_l + j\Omega_l)t} + r_{il}^* e^{(-\sigma_l - j\Omega_l)t} \right).
\]

Each component in the RHS of (2) is referred to as a mode, where \( r_{il} \) is the residue of mode \( l \) reflected in the \( i \)-th output. Sampling \( \Delta \theta_i(t) \) with a uniform sampling period of \( T \), a generic expression for the z-transform of \( \Delta \theta_i(k) \equiv \Delta \theta_i(t)|_{t=kT} \), \( k = 0, 1, \ldots, m-1 \), with \( m \) being the total number of measured samples, can be rewritten as:

\[
\Delta \theta_i(z) = \frac{b_0 + b_1 z^{-1} + b_2 z^{-2} + \cdots + b_{2n} z^{-2n}}{1 + a_1 z^{-1} + a_2 z^{-2} + \cdots + a_{2n} z^{-2n}}.
\]

Our objective is to estimate \( \sigma_l \), \( \Omega_l \), and \( r_{il} \) in (2). We next state the three steps of the Prony algorithm by which this can be achieved from (3) [8].

**Step 1.** The first step of the Prony algorithm is to find \( a_1 \) through \( a_{2n} \) by solving:

\[
\begin{pmatrix}
\Delta \theta_i(2n+1) \\
\Delta \theta_i(2n+2) \\
\vdots \\
\Delta \theta_i(2n+\ell)
\end{pmatrix}
=
\begin{pmatrix}
\Delta \theta_i(2n-1) & \Delta \theta_i(2n) & \cdots & \Delta \theta_i(\ell) \\
\Delta \theta_i(2n) & \Delta \theta_i(2n+1) & \cdots & \Delta \theta_i(\ell+1) \\
\vdots & \vdots & \ddots & \vdots \\
\Delta \theta_i(2n+\ell-1) & \Delta \theta_i(2n+\ell-2) & \cdots & \Delta \theta_i(2n+\ell-1)
\end{pmatrix}
\begin{pmatrix}
-a_1 \\
-a_2 \\
\vdots \\
-a_{2n}
\end{pmatrix},
\]

where \( \ell \) is an integer satisfying \( 2n + \ell \leq m-1 \). Let us concatenate \( c_i \) and \( H_i \) in (4) for PMU \( i = 1, \ldots, p \). One can find \( a \) by solving a least squares (LS) problem defined as:

\[
\min_a \left\| \begin{pmatrix}
H_1 \\
\vdots \\
H_p
\end{pmatrix}
a -
\begin{pmatrix}
c_1 \\
\vdots \\
c_p
\end{pmatrix}
\right\|_2,
\]

where \( \|\cdot\|_2 \) denotes the 2-norm of a vector.

**Step 2.** Once \( a \) is computed, the next step is to find the roots of the discrete-time characteristic polynomial as shown in the denominator of (3). Let these roots be denoted by \( z_l \), \( l = 1, \ldots, 2n \). Finally, the eigenvalues of \( A \) in (1) can be calculated as \( \ln(z_l)/T \).

**Step 3.** The final step is to find the residues \( r_{il} \) in (2). This can be done by forming the following Vandermonde equation and solving it for the residues \( r_{i1} \) through \( r_{in} \):

\[
\begin{pmatrix}
\Delta \theta_i(0) \\
\Delta \theta_i(1) \\
\vdots \\
\Delta \theta_i(m)
\end{pmatrix}
=
\begin{pmatrix}
1 & 1 & \cdots & 1 \\
(z_1)^{1/T} & (z_2)^{1/T} & \cdots & (z_{2n})^{1/T} \\
(z_1)^{2/T} & (z_2)^{2/T} & \cdots & (z_{2n})^{2/T} \\
\vdots & \vdots & \ddots & \vdots \\
(z_1)^{m/T} & (z_2)^{m/T} & \cdots & (z_{2n})^{m/T}
\end{pmatrix}
\begin{pmatrix}
r_{i1} \\
r_{i1}^* \\
\vdots \\
r_{in} \\
r_{in}^*
\end{pmatrix}.
\]

**Fig. 1: Distributed architecture for wide-area PMU-PDC communications.**

This figure illustrates the distributed architecture for wide-area PMU-PDC communications, showing how PMUs in each area communicate their data in real-time to estimator(s) or Phasor Data Concentrators (PDCs) located at the local control center via a Virtual Private Network (VPN). These local PDCs can then share information with each other and with a central PDC located at the Independent System Operator (ISO) through a controllable wide-area network such as a Software Defined Network (SDN).