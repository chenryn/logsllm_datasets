pacity, in different ways. Plan A leaves bandwidth unused
while Plan B has two-hop routing paths. We can do better if
we control the network-layer topology. Plan C reconﬁgures
the topology (Figure 3(d)). Two router ports on R0 are all
connected to R1. Now both F0 and F1 can enjoy a band-
width of 20 units and ﬁnish within 0.5 time unit. Plan C is
2× faster than Plan A, and 1.5× faster than Plan B.
3. OWAN DESIGN
In this section, we ﬁrst provide an overview of Owan.
Then, we present the algorithms to compute the optical and
routing conﬁgurations to optimize bulk transfers. Finally, we
describe how to deal with updates and some practical issues.
3.1 Owan Overview
Owan is a centralized system that orchestrates bulk trans-
fers on the WAN. Figure 4 shows the system architecture.
Abstractly, Owan works as follows.
1. Clients submit bulk transfer requests to the controller. A
request is a tuple (srci, dsti, sizei, deadlinei) that de-
notes the source, destination, size, and deadline (optional)
of transfer request i.
2. The controller has a global view of the physical topology
and transfer requests. It computes the optical circuits that
build the network-layer topology, the paths and the send-
ing rates for transfers.
3. The controller sends the rate allocation to each client and
clients enforce rates on their applications. The controller
directly programs routers and ROADMs to set up rout-
Figure 2: Example of topology reconﬁguration. Dif-
ferent line types/colors in (a) and (c) denote different
wavelengths. A router port or a wavelength carries 10
bandwidth units. By reconﬁguring how wavelengths are
switched in ROADMs (rectangle nodes), we can change
how routers (circle nodes) are connected.
(b) and (d)
show the resulting network-layer topologies.
add/drop port connected to another router port. Commercial
ROADMs can be reconﬁgured in hundreds of milliseconds
and future ROADMs can reduce the time to tens of millisec-
onds and even lower [6, 12, 13].
Due to optical signal loss and some non-linear impacts on
optical signals, a wavelength normally has limited transmis-
sion range, which is called optical reach. When an optical
signal transmits beyond the optical reach, a regenerator de-
vice is required to regenerate the signal. In order to dynami-
cally establish optical circuits on demand, operators usually
pre-deploy some regenerators at certain concentration sites
such that between any two ROADMs, there is at least one
path using those limited regenerator concentration sites to
satisfy the optical reach constraint [14, 15].
Network layer: A router is usually co-located with a ROADM.
Customer-facing router ports are connected to customer equip-
ment, such as data-center routers or metro-network routers;
network-facing router ports are connected to ROADM ports
via standard short-reach wavelength. A network-layer link
is implemented by an optical circuit. By reconﬁguring the
optical layer, we can change the connectivity of router ports
in the network layer, i.e., the network-layer topology.
Topology reconﬁguration example: We use the example
in Figure 2 to illustrate how the network-layer topology can
be reconﬁgured with optical devices.
In the network, we
have four routers R0-R3 and four ROADMs O0-O3. Each
router has two WAN-facing ports. In conﬁguration A, each
ROADM converts electrical packets from two router ports to
different wavelengths and sends them to different ROADMs.
For example, O0 sends the solid/blue wavelength to O1 and
the dashed/red wavelength to O2 (Figure 2(a)). In the result-
ing network-layer topology, each router is connected to two
other routers (Figure 2(b)). In conﬁguration B, a ROADM
multiplexes two wavelengths on to the same ﬁber and is con-
nected to only one other ROADM. For example, both wave-
89
R0 O0 R0 R2 R2 R3 R3 R1 R1 O1 O3 O2 10 10 10 10 R0 O0 R0 R2 R2 R3 R3 R1 R1 O1 O3 O2 10 10  (a) Optical-layer configuration A. (b) Network-layer topology A. (c) Optical-layer configuration B. (d) Network-layer topology B. 10 10  Figure 3: Example of optimizing bulk transfers. (a) Plan A transmits F0 and F1 simultaneously. (b-c) Plan B ﬁrst
transmits F0 and then F1. (d) Plan C reconﬁgures the topology and has the lowest average transfer completion time. (e)
Time series to show the transfer completions of these three plans.
Symbol
V
E
G
F
N S
OC
RC
p
rf,p
rcf
θ
Description
The set of sites.
The set of network-layer links.
The network-layer topology.
The set of transfers.
The network state N S = (OC, RC).
The set of optical circuits.
The routing conﬁguration RC = {rcf|f ∈ F}.
A routing path.
The rate of transfer f on routing path p.
The routing conﬁguration of f: {rf,p|p ∈ Pf}.
The capacity of a wavelength.
Table 1: Key notations in problem formulation.
Problem formulation: The problem of ﬁnding the optimal
network state is an online optimization problem. There are
a stream of new transfers arriving at the system. At each
time slot, we need to compute a network state N S that op-
timizes the average transfer completion time or the number
of transfers that meet their deadlines. The problem has the
following constraints.
1. The number of router ports connected to ROADM ports
at each site v is limited, denoted by f pv. This constrains
the total ingress and egress capacity of the router in the
network-layer topology.
2. A wavelength can traverse at most distance η before it
needs to be regenerated.
If an optical circuit is longer
than η, it has to use regenerators on its path to regenerate
the signal.
3. The number of regenerators at each site v is limited, de-
noted by rgv. A regenerator can regenerate one optical
circuit and transform the circuit to a different wavelength
if needed.
4. The optical circuits in the same ﬁber have to use different
wavelengths. A ﬁber can carry at most φ different wave-
lengths and each wavelength can support a capacity of θ.
5. The total rate of transfers on a network-layer link cannot
exceed its capacity θ.
As an additional consideration, we want to keep the changes
to the network incremental, i.e., only updating a small num-
ber of optical links when we perform an update. This mini-
mizes the disturbance during the network update process.
Algorithm overview: The problem has a large number of
constraints and variables. Some constraints, like the num-
Figure 4: System architecture.
ing paths and optical circuits. On public WANs, the con-
troller also needs to enforce rates with rate limiters on
routers in case clients do not properly enforce these rate
limits on their applications.
The above process is an online process. We divide time into
time slots. A time slot is much longer than the time to re-
conﬁgure the network and adjust sending rates, i.e., a few
minutes vs. hundreds or thousands of milliseconds. The ma-
jor job for the controller is to compute the conﬁgurations at
each time slot to optimize bulk transfers.
3.2 Computing Network State
All the conﬁgurations are denoted as network state. We
precisely deﬁne the network state and formulate the problem
as follows. Table 1 summarizes the key notations.
Network state: A WAN is represented as a graph G =
(V, E) where V is the set of all sites and E is the set of
links in the network-layer topology. A site v consists of one
ROADM, a set of pre-deployed regenerators (could be zero),
and zero or one router.
A network state N S is a conﬁguration of the devices in the
WAN. It includes the optical conﬁguration OC and the rout-
ing conﬁguration RC. OC is the set of optical circuits to be
conﬁgured on the optical devices, which builds the network-
layer topology. A network-layer link between u and v is im-
plemented by a circuit ocuv in the optical layer. RC is the set
of routing conﬁgurations to be installed on routers (and end
hosts if rates are enforced by clients). Speciﬁcally, the rout-
ing conﬁguration of a transfer f, denoted by rcf , includes
its routing paths and rate limits for each path.
90
R0 R2 R3 R1 10 10 10 10 (a) Plan A. F0(Demand=10) F1(Demand=10) (b) Plan B-1. R0 R2 R3 R1 10 10 10 10 F0(Demand=10) (c) Plan B-2. R0 R2 R3 R1 10 10 10 10 F1(Demand=10) (e) Time series. F0 F1 Time 0.5 1 0 A F0 F1 Time 0.5 1 0 B F0 F1 Time 0.5 1 0 C (d) Plan C. F0(Demand=10) F1(Demand=10) R0 R2 R3 R1 10 10  10 10  O0 O1 O2 Controller Request Submission/ Rate Allocation Routing Configuration Optical Configuration R0 R2 R1 C0 C1 C2 Access Network Wide Area Network Client DC Router ROADM Algorithm 1 Compute Next Network State (Main Routine)
1: function ComputeN etworkState(G)
scurrent ← G
2:
ecurrent ← ComputeEnergy(s)
3:
T ← ecurrent
4:
s∗ ← scurrent
5:
e∗ ← ecurrent
6:
while T >  do
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
sneighbor ← ComputeN eighbor(scurrent)
eneighbor ← ComputeEnergy(sneighbor)
if eneighbor > e∗ then
s∗ ← sneighbor
e∗ ← eneighbor
scurrent ← sneighbor
ecurrent ← eneighbor
if P (ecurrent, eneighbor, T ) > Rand(0, 1) then
T ← T × α
return s∗
ber of router ports at each site, the number of regenerators at
each site, and the number of wavelengths on each ﬁber, are
integral. Even if the network-layer topology is given, opti-
mizing for average transfer completion time is NP-hard [16].
A naive approach is to separately optimize the optical layer
and the network layer. However, as the routing decisions
are highly coupled with the underlying optical conﬁgura-
tion, this greedy approach does not yield good performance
results, as we will show in §5.4.
Instead, we use simulated annealing [17] to search for an
approximate solution. The motivation for using simulated
annealing is that we have a huge search space with integral
variables. Simulated annealing is effective in ﬁnding accept-
able local optimums in a reasonable amount of time while
ﬁnding the global optimum is computationally expensive.
Furthermore, the potential loss of using local optimums is
compensated by the fact that the trafﬁc demand changes over
time and we frequently reconﬁgures the network to adapt to
the trafﬁc demand changes.
At a high level, we use the network-layer topology G as
the state in simulated annealing. We use the current topol-
ogy as the initial state and probabilistically jump to a neigh-
bor state in each iteration, aiming to ﬁnd a topology with the
highest total throughput. To minimize changes to the net-
work, we construct neighbor states by randomly changing
four links of the current state, which is the minimal number
of links to change to satisfy the port number constraints.
Our approach has two beneﬁts. First, using the network-
layer topology G as the state in simulated annealing, in-
stead of the entire network state N S, signiﬁcantly reduces
the search space. If we search for N S, we have to decide
both the optical circuits, the routing paths, and the rate as-
signments for the network. Instead, if we search for G, we
only need to decide the links in the network-layer topology.
Second, by using the current topology as the initial state, we
are likely to end up with a topology that is not very different
from the current one. This reduces the number of changes
we need to make for network updates. Now we describe the
algorithms in more details.
Algorithm 2 Generate A Random Neighbor State
1: function ComputeN eighbor(s)
2:
3:
4:
5:
6:
7:
luv, lpq ← RandomlySelectT woEdges(El)