ISP 2(cid:13)
AS 1(cid:13)
Static or IGP(cid:13)
route(cid:13)
143.206.0.0/16(cid:13)
Customer AS(cid:13)
(a) Legitimate MOAS:(cid:13)
     multihoming with static link(cid:13)
AS 2(cid:13)
AS 3(cid:13)
ISP 1(cid:13)
60.253.58.0/24(cid:13)
Path: AS 1(cid:13)
ISP 2(cid:13)
60.253.58.0/24(cid:13)
Path: AS 1(cid:13)
AS 64626(cid:13)
60.253.58.0/24(cid:13)
Customer AS(cid:13)
(b) Legitimate MOAS:(cid:13)
     multihoming with private AS(cid:13)
83.210.62.0/24(cid:13)
Path: AS 2(cid:13)
83.210.62.0/24(cid:13)
Path: AS M(cid:13)
AS M(cid:13)
Attacker  AS(cid:13)
AS 2(cid:13)
Victim AS(cid:13)
61.168.0.0/16(cid:13)
Path: AS 2, AS 1(cid:13)
AS 2(cid:13)
Provider AS(cid:13)
61.168.0.0/16(cid:13)
Path: AS 1(cid:13)
61.168.0.0/16(cid:13)
Path: AS 6, AS M, AS 1(cid:13)
AS 6(cid:13)
61.168.0.0/16(cid:13)
Path: AS M, AS 1(cid:13)
Attacker (cid:13)
neighbor AS(cid:13)
AS M(cid:13)
Attacker  AS(cid:13)
Invalid Path(cid:13)
P(cid:13)1(cid:13): 61.168.0.0/16(cid:13)
AS 1(cid:13)
(c) Attack type 1 (MOAS):(cid:13)
     hijack a prefix.(cid:13)
(d) Attack type 2: hijack a prefix and its AS(cid:13)
Victim AS(cid:13)
142.157.0.0/16(cid:13)
Path: AS 2(cid:13)
142.157.192.0/18(cid:13)
Path: AS 2, AS 1(cid:13)
AS 2(cid:13)
142.157.0.0/16(cid:13)
194.167.103.0/24(cid:13)
Path: AS 6(cid:13)
 205.152.0.0/16(cid:13)
Path: AS 6(cid:13)
AS 6(cid:13)
205.152.0.0/16(cid:13)
194.167.0.0/16(cid:13)
Path: AS 7(cid:13)
202.152.144.0/24(cid:13)
Path: AS 7, AS 2(cid:13)
AS 7(cid:13)
194.167.0.0/16(cid:13)
142.157.192.0/18(cid:13)
Path: AS 1(cid:13)
Provider(cid:13)
Provider 1(cid:13)
Provider 2(cid:13)
164.83.240.0/24(cid:13)
Path: AS M(cid:13)
87.117.0.0/16(cid:13)
Path: AS 2, AS 1(cid:13)
AS 2(cid:13)
164.83.0.0/16(cid:13)
Path: AS 8(cid:13)
AS M(cid:13)
Attacker  AS(cid:13)
Provider AS(cid:13)
202.152.144.0/24(cid:13)
AS 2(cid:13)
194.167.103.0/24(cid:13)
AS 65522(cid:13)
164.83.0.0/16(cid:13)
AS 8(cid:13)
Victim AS(cid:13)
142.157.192.0/18(cid:13)
AS 1(cid:13)
Customer(cid:13)
(e)  Legitimate subMOAS:(cid:13)
single-homing and aggregation(cid:13)
87.117.162.0/24(cid:13)
Path: AS 5, AS M, AS 1(cid:13)
AS 5(cid:13)
87.117.162.0/24(cid:13)
Path: AS M, AS 1(cid:13)
Attacker (cid:13)
neighbor AS(cid:13)
AS M(cid:13)
Attacker  AS(cid:13)
Invalid Path(cid:13)
141.212.110.0/24(cid:13)
Path: AS 1(cid:13)
AS 1(cid:13)
P(cid:13)2(cid:13): 87.117.162.0/24(cid:13)
P(cid:13)1(cid:13): (cid:13)87.117.0.0/16(cid:13)
Customer(cid:13)
Customer(cid:13)
(f) Legitimate subMOAS:(cid:13)
multihoming and aggregation(cid:13)
(private AS number)(cid:13)
(g) Attack type 3 (subMOAS):(cid:13)
hijack a subnet of a prefix(cid:13)
Victim AS(cid:13)
(h) Attack type 4: Hijack a subnet of a(cid:13)
prefix and its AS(cid:13)
Figure 1. Common legitimate MOAS/subMOAS cases and (cid:2)rst four IP hijacking attack types.
an AS path that traverses its own AS to reach the victim
AS. It is conceivable that the attacker uses a compromised
router to pretend to be the victim AS X by advertising the
route with AS path fXg. However, by default many BGP
routers can reject routes with AS paths not starting with the
AS number of their neighbor router in the BGP session. To
ensure reachability, attackers in AS Y can instead advertise
a route traversing its own AS reaching the victim AS X,
i.e., with AS path fY; Xg for stolen pre(cid:2)xes owned by AS
X, as illustrated in Figure 1(d). It is dif(cid:2)cult to (cid:2)lter such
routes unless a BGP router has accurate knowledge of the
BGP topology. By creating false AS edges, attackers can
avoid MOAS con(cid:3)icts, while still achieving the goal of us-
ing stolen pre(cid:2)xes to send and receive traf(cid:2)c. Interestingly,
some DNS root servers use IP anycast for legitimate rea-
sons, matching this attack pro(cid:2)le.
3.3. Type 3: Hijack a subnet of a preﬂx
Another way to avoid MOAS con(cid:3)icts is to announce
a subnet of an existing pre(cid:2)x.
For example, an at-
tacker may hijack 129.222.32.0/19 given the existence of
129.222.0.0/16 in the routing table. If there are no other
advertisements for this pre(cid:2)x and no (cid:2)ltering for this route,
the route is likely to be globally used due to longest pre(cid:2)x
based forwarding. For attackers, this approach eliminates
the challenging task of making the hijacked route attrac-
tive enough to be selected as the best path by other net-
works. For fear of such attacks, some networks today in-
tentionally deaggregate their address space by announcing
many small pre(cid:2)xes such as /24. However, deaggregation
severely increases routing table size and may increase rout-
ing instability. To capture this routing anomaly, we extend
the de(cid:2)nition of MOAS to include such origin con(cid:3)icts in-
volving subnets of pre(cid:2)xes as subMOAS con(cid:3)icts. Simi-
lar to MOAS, there are several valid reasons for subMOAS
(Figures 1 (e),(f),(g)).
† Multi-homing with static links: Similar to MOAS,
except that the static routing between the two ASes is
con(cid:2)gured to reach a subnet pre(cid:2)x, or the other session
announces the subnet.
† Multi-homing with private AS numbers:
For
load balancing and redundancy, a customer may
multi-home and announce overlapping pre(cid:2)xes to its
providers. If private AS number is used, the pre(cid:2)x and
its subnet will appear to have the provider’s AS as the
origin AS, resulting in subMOAS con(cid:3)icts.
† Aggregation with single-homing or multi-homing:
A customer C obtains a pre(cid:2)x P from its provider A,
who may aggregate P into a larger pre(cid:2)x and advertise
only the aggregate with origin AS A to reduce routing
table size.
If the customer advertises P to its other
provider B, who usually cannot aggregate. A sub-
MOAS con(cid:3)ict results: the bigger pre(cid:2)x with origin
AS A and its subnet P with origin AS C. Similarly
for single-homing, the provider A announces both the
aggregate with origin AS A and P with origin AS C.
3.4. Type 4: Hijack a subnet and its AS
This is the most stealthy hijacking attack shown in Fig-
ure 1(h), combining the advantages of both the second and
third attack types to avoid both MOAS and subMOAS con-
(cid:3)icts. Because of longest pre(cid:2)x matching, attackers can ex-
clusively receive traf(cid:2)c destined to the hijacked pre(cid:2)x. For
example, an attacker hijacks a subnet P 0 of pre(cid:2)x P owned
by AS1. Assume attacker’s AS is AS2. He announces the
AS path fAS2; AS1g for pre(cid:2)x P 0.
If attacker’s neigh-
bors cannot validate whether AS2 really has a connection
to AS1, they will propagate this route. Since P 0 is more
speci(cid:2)c than P , most routers adopt it.
3.5. Type 5: Hijacking on a legitimate path
Instead of forwarding the traf(cid:2)c to the expected next-hop
network, the attacker intercepts traf(cid:2)c and originates traf(cid:2)c
using the address block of the downstream network.
In the (cid:2)rst four attack types, attackers attempt to an-
nounce an attractive route, so that routers in different net-
works on the Internet, even given alternative routes, will
still select the hijacking route as the best route. One of the
steps in route selection process is preferring routes with the
shortest AS path [41]. Note that given the shortest AS path
preference, networks topologically close to the victim AS
are less likely impacted as they tend to choose the correct
routes which are usually shorter than the hijacking routes.
Based on the same reasoning, routing tables of networks
close to the attacker’s AS announcing the hijacking route
are more likely polluted. For the (cid:2)fth attack type, the at-
tacker does not need to announce a new route but merely
violate the rule of forwarding traf(cid:2)c. We do not focus on
this attack type, but our techniques can also identify it by
simply performing traceroute-like probing to show that traf-
(cid:2)c stops within the malicious network.
Based on the above taxonomy, we highlight two impor-
tant attack strategies to improve hijacking success and avoid
detection. Such understanding helps devise detection tech-
niques. The (cid:2)rst strategy is announcing a subnet of an
existing pre(cid:2)x, resulting in two advantages. First, if the
hijacking route is not (cid:2)ltered2, each router receiving such
route will select it as the best path regardless of its AS path
length. Second, simple MOAS-based routing anomaly de-
tection will overlook this type of attack. Note that attackers
2In general, pre(cid:2)xes smaller than /24 are likely (cid:2)ltered to limit the size
of routing tables [6] based on the longest pre(cid:2)x matching rule [41].
do not have the incentive to announce a supernet or cov-
ering pre(cid:2)x (using past terminology [33]), as it makes the
hijacked route less attractive. Such announcement is only
useful if there exists address blocks within the supernet not
covered by existing route announcements. Essentially, it in-
volves allocated but unannounced routes, and can be iden-
ti(cid:2)ed in a similar fashion as unallocated routes through a
bogon-like list. We leave this as future work.
Existing work on detecting IP hijacking usually relies on
MOAS detection. Aside from false positives caused by le-
gitimate reasons for MOAS, they also suffer from 1false
negatives, because attackers could avoid MOAS con(cid:3)icts
using attack type 2 and 4. This is attacker’s second strategy
with the disadvantage that the announced AS path is longer
and may not be selected as the best path. However, an-
nouncing a subnet combined with this strategy, as illustrated
in type-4 attack, overcomes this disadvantage, creating the
most devious attack. We next propose detection techniques.
4. Real-time Detection of IP Hijacking
The focus of our detection algorithm is to distinguish the
unique characteristics of IP hijacking attacks based on data-
plane properties of the network using the suspected pre(cid:2)x.
Operationally it is critical to have a highly accurate detec-
tion scheme with low false positives and negatives. The
fundamental difference between IP hijacking and valid rout-
ing updates lies in the ownership of the IP pre(cid:2)x. For valid
MOAS and subMOAS con(cid:3)icts, despite the disagreeing ori-
gin ASes, there is only one owner for the pre(cid:2)x, correspond-
ing to a unique network numbered with the pre(cid:2)x. Traf(cid:2)c
sent from anywhere on the Internet destined to the pre(cid:2)x
will arrive at the same network location. In the case of IP
hijacking, the attacker illegally takes control over the pre(cid:2)x.
Traf(cid:2)c sent from different network locations, depending on
routing policies, may arrive at either the true owner or the
hijacked owner. Such a con(cid:3)ict must exist, as traf(cid:2)c sent
from networks topologically close to the true owner or from
within the owner network must always arrive at the correct
network. This holds even in the case for subMOAS, as IGP
routing within the true owner network is unaffected. If hi-
jacking is successful, as evidenced in the suspicious routing
updates, networks advertising such updates will choose the
hijacked route and reach the attacker network instead. To
summarize, the consistency of the destination network is
the major criteria underlying our detection algorithm.
4.1. Fingerprint-based consistency checks
When IP hijacking occurs, a given IP address in the hi-
jacked pre(cid:2)x may be used by different end hosts. Similarly,
two distinct networks can use the same IP pre(cid:2)x. There-
fore we can check the consistency of destination hosts by
verifying whether their properties match. Note that we do
not require end-host cooperation, which can readily provide
strong cryptographic authentication information.
Instead,
we propose a general approach using (cid:2)ngerprints to char-
acterize properties of networks and hosts of the IP pre(cid:2)x.
We can generally focus on either host-based or network-
based (cid:2)ngerprints. End host properties such as the Oper-
ating System (OS), the actual physical device, host con(cid:2)g-
urations (e.g., (cid:2)rewall rules), host software, host services,
etc. can all constitute host (cid:2)ngerprints serving as signa-
tures to help detect inconsistency. Network characteristics
including network con(cid:2)gurations like (cid:2)rewall policies, re-
source properties like bandwidth information, characteris-
tics of routers connecting the network, etc. can provide dis-
tinguishing network-level (cid:2)ngerprints.
There are several considerations in choosing properties
for detecting inconsistency implying real IP hijacking. One
challenge is that many networks have (cid:2)rewalls preventing
external networks from probing internal hosts. We discuss
later in x5.4 how these dif(cid:2)culties are eliminated with as-
sistance from potential victim networks. Probing cost, in
terms of network overhead, and probing duration need to
be considered. Another consideration is accuracy caused
by inherent errors in measurement due to limited precision
and external in(cid:3)uences. Combining multiple (cid:2)ngerprints
can lower both false positives and false negatives. Aside
from measurement errors, false positives can also result
from legitimate changes in such (cid:2)ngerprints. For example,
load balancing in server farms and responses speci(cid:2)c to the
source IP address (such as those generated from (cid:2)rewalls)
may possibly result in con(cid:3)icting (cid:2)ngerprints. However
these uncertainties can be identi(cid:2)ed beforehand by compar-
ing (cid:2)ngerprints from multiple probing places, so that hosts