title:Measuring and Mitigating AS-level Adversaries Against Tor
author:Rishab Nithyanand and
Oleksii Starov and
Phillipa Gill and
Adva Zair and
Michael Schapira
Measuring and mitigating AS-level adversaries
against Tor
Rishab Nithyanand∗, Oleksii Starov∗, Adva Zair†, Phillipa Gill∗ and Michael Schapira†
∗Stony Brook University
Email: {rnithyanand, ostarov, phillipa}@cs.stonybrook.edu
†Hebrew University of Jerusalem
Email: {adva.zair@mail, schapiram@cs}.huji.ac.il
5
1
0
2
c
e
D
6
2
]
R
C
.
s
c
[
6
v
3
7
1
5
0
.
5
0
5
1
:
v
i
X
r
a
ABSTRACT
The popularity of Tor as an anonymity system has made
it a popular target for a variety of attacks. We focus on trafﬁc
correlation attacks, which are no longer solely in the realm of
academic research with recent revelations about the NSA and
GCHQ actively working to implement them in practice.
Our ﬁrst contribution is an empirical study that allows
us to gain a high ﬁdelity snapshot of the threat of trafﬁc
correlation attacks in the wild. We ﬁnd that up to 40% of
all circuits created by Tor are vulnerable to attacks by trafﬁc
correlation from Autonomous System (AS)-level adversaries,
42% from colluding AS-level adversaries, and 85% from state-
level adversaries. In addition, we ﬁnd that in some regions
(notably, China and Iran) there exist many cases where over
95% of all possible circuits are vulnerable to correlation
attacks, emphasizing the need for AS-aware relay-selection.
To mitigate the threat of such attacks, we build Astoria–an
AS-aware Tor client. Astoria leverages recent developments in
network measurement to perform path-prediction and intelli-
gent relay selection. Astoria reduces the number of vulnerable
circuits to 2% against AS-level adversaries, under 5% against
colluding AS-level adversaries, and 25% against state-level
adversaries. In addition, Astoria load balances across the Tor
network so as to not overload any set of relays.
I.
INTRODUCTION
Tor is a popular anonymity system for users who wish
to access the Internet anonymously or circumvent censor-
ship [15]. The increasing popularity of Tor has recently made
it a high-value target for blocking and denial of service [13],
[29],
[43] and trafﬁc correlation attacks to deanonymize
users [24], [25], [30], [31], [37]. Trafﬁc correlation attacks,
which correlate trafﬁc entering the Tor network with trafﬁc
exiting it, are no longer solely in the realm of academic
research with recent revelations about the NSA and GCHQ
actively working to implement them in practice, in collusion
with Internet Service Providers (ISPs) [3], [5], [7].
Trafﬁc correlation attacks have been shown to be feasible
and practical for network-level attackers. Speciﬁcally, a trafﬁc
correlation attack may be implemented by any autonomous
system (AS) that lies on both the path from the Tor client
to the entry relay and on the path from the exit relay to the
destination. Previous studies have demonstrated the potential
for this type of attack [16], [18], [25]. Proposed defenses
include relay selection strategies to avoid ASes that are in
a position to launch them [9]. However, recent work [41] has
shown that these strategies perform poorly in practice.
The threat of network-level adversaries has been exacer-
bated by a recent study which highlights that the set of ASes
that are in a position to perform trafﬁc correlation analysis
is potentially much larger due to asymmetric routing, routing
instabilities, and intentional manipulations of the Internet’s
routing system [39], [40]. These attacks signiﬁcantly raise
the bar for relay-selection systems. Speciﬁcally, they require
the relay-selection system be able to accurately measure or
predict network paths in both the forward and reverse direction.
Measuring the reverse path between two Internet hosts is non-
trivial, especially when the client does not have control over
the destination, as is commonly the case for popular Web
services. While solutions for measuring reverse paths have
been proposed [27], they are still not widely deployed or
available.
In this paper, we make contributions in two dimensions.
First, we quantify the threat posed by these new attacks.
Second, we develop a relay selection method to minimize their
impact.
Measuring the threat faced by Tor. We leverage up-to-
date maps of the Internet’s topology [23] combined with
algorithmic simulations [22] to predict which ASes are in
a position to perform trafﬁc correlation analysis on forward
or reverse paths. We validate this technique and show that it
provides a reasonable estimate on the threat faced from AS-
level attackers. We then augment our analysis with techniques
to identify ASes owned by a single organization (sibling ASes)
in order to gain a clearer picture of which ASes are likely to
collude with each other. This provides a more complete picture
of network-level threats than previous work. In addition, we
consider the threat from state-level attackers that have insight
into trafﬁc transiting through all regional ASes. Through these
techniques and our experiments, we make the following key
observations:
•
•
Up to 40% of circuits constructed by the current Tor
client are vulnerable to network-level attackers.
Up to 37% of all sites in our study, when loaded from
Brazil, China, Germany, Spain, France, England, Iran,
Italy, Russia, and the United States had main page
requests that were reached via a vulnerable path (i.e., a
path that contained network-level entities in a position
to launch trafﬁc correlation attacks), when loaded by
the vanilla Tor client.
•
•
•
•
Connections from China were found to be most vul-
nerable to network-level attackers with up to 86% of
all Tor circuits and 56% of all main page requests
to sites in the study being vulnerable to colluding
network-level attackers.
For up to 8% of the requests generated from China and
Iran, over 95% of all possible Tor constructed circuits
were vulnerable to correlation attacks by network-
level attackers.
Reducing the number of entry guards can result in an
increase in vulnerability of Tor circuits. In particular,
we found that using a single guard signiﬁcantly in-
creases the threat from trafﬁc correlation attacks, while
the difference between using two and three guards is
marginal.
State-level attackers are in a position to launch cor-
relation attacks on up to 85% of all Tor constructed
circuits.
Mitigating the threat of AS-level adversaries. We propose,
construct, and evaluate Astoria– an AS-aware Tor client that
includes security and relay bandwidth considerations when
creating Tor circuits. Astoria is the ﬁrst AS-aware Tor client
to consider the recently proposed asymmetric correlation at-
tacks [39], [40]. When there are safe alternatives, Astoria
actively avoids using circuits on which asymmetric correlation
attacks might be launched. It also leverages methods for
identifying sibling ASes [10] when determining whether or not
a given circuit is safe. In the absence of a safe path, Astoria
uses a linear program to minimize the threat posed by any
adversary. Finally, Astoria considers the bandwidth capabilities
of relays while making AS-aware relay selection decisions.
When there are multiple safe relay selections, Astoria aims
to be a good network citizen and distributes load across Tor
relays in the same manner as the vanilla Tor client. Therefore,
in spite of selecting safer relays, Astoria will not overload any
single set of relays.
Paper outline.
In Section II we brieﬂy overview how the
current Tor client performs relay selection and circuit construc-
tion, describe the current state of research in relay selection
for Tor, and introduce our adversary model. In Section III
we describe the components of our measurement toolkit used
for detecting network-level attackers on Tor circuits. We then
present some interesting results regarding the vulnerability of
Tor constructed circuits and the general potential for attack by
single AS-, sibling AS-, and state-level attackers. In Section
IV, we present the details of our AS-aware client – Astoria. A
performance and security evaluation of Astoria is performed in
Section V. In Section VI, we discuss the known shortcomings
of Astoria and motivate directions for future research on AS-
aware clients. We make our conclusions in Section VII.
II. BACKGROUND AND MOTIVATION
We now provide background on Tor relay selection, related
work in this area, and our adversary model.
A. Tor relay selection
The Tor anonymity network consists of approximately
6,000 relays (Tor routers). Most requests made through a Tor
client are sent to their destination via a three-hop path known
as a circuit. Each circuit consists of an entry, middle, and exit
relay. The entry-relay communicates directly with the client
and the exit-relay communicates with the destination. The
fundamental idea is that no single relay in the circuit learns
the source and destination.
In its early days, Tor selected relays for each circuit hop
uniformly at random from the set of available relays. This was
changed in order to improve performance (by preferring to
route through higher bandwidth relays [8]) and security [11].
In today’s Tor network, based on certain performance char-
acteristics such as reliability, bandwidth served, and up-time,
relays may earn certain ﬂags that make them a preferential
choice for various roles during circuit construction.
One such ﬂag is the guard ﬂag. New relays joining the
Tor network are monitored for stability and performance via
remote measurements for a period of up to eight days [4]. At
this point, relays that have demonstrated stability and reliability
are assigned a guard ﬂag. Relays with a guard ﬂag earn the
ability to serve as the entry-relay to the Tor network. By default
the Tor client selects three guards to be used as entry-relays
for all circuits for a prolonged period of time. The main ideas
behind the selection of a ﬁxed set of entry-relays are (1) to
reduce the possibility that a client will select an entry- and
exit-relay operated by the same entity (after prolonged use),
(2) prevent attacker-owned entry-relays from denying service
to clients that are not also using an exit-relay owned by the
attacker, and (3) increase the cost to an attacker that wishes
to be chosen as an entry-relay, by requiring them to earn the
guard ﬂag [4].
In addition to picking relays that are more stable and
reliable, for other locations on a circuit, the Tor client also
requires that (1) no two routers on a circuit share the same /16
subnet and (2) no routers in the same family (as advertised by
the router) may be chosen on the same circuit. [8].
B. Related work
The threat of correlation attacks by AS-level adversaries on
the Tor network was ﬁrst identiﬁed and empirically evaluated
by Feamster and Dingledine [18] in 2004, when the Tor
network had only 33 relays and signiﬁcantly different relay
selection algorithms. The study revealed that 10-30% of all
circuits constructed by Tor had a common AS that could
observe both ends of the circuit. Shortly after, by constructing
efﬁcient trafﬁc correlation attacks while considering network-
level adversaries, Murdoch and Danezis [30] and Murdoch
and Zieli´nski [31] demonstrated that the threat from AS-level
attackers was one of practical concern. In 2009, Edman and
Syverson [16] found that the threat of AS-level adversaries
had not reduced since [18], in spite of revised relay selection
strategies and substantially larger number of relays in the
network.
In addition, Edman and Syverson [16] were the ﬁrst to
consider threats from network-level attackers due to the asym-
metric nature of Internet routing. Using the 2009 topology of
the Internet, AS paths inferred by Qiu’s algorithm [32], and
AS relationships inferred by Gao’s algorithm [20] they found
that in their experiments up to 39% of all Tor circuits were
vulnerable to network-level adversaries that performed attacks
2
However, recent work by Vanbever et al. [40] and Sun et
al. [39] highlights the fact that an adversary on the reverse
path may also learn packet size and timing information via
the TCP Acknowledgement (ACK) ﬁeld. Figure 1(b) illustrates
this case. AS 2 can directly observe packet timings between the
source and entry-relay AS (Entry AS), but can only observe
ACKs from the destination back to the exit-relay AS (Exit
AS).
In this view, an adversary has the potential
to launch
a trafﬁc correlation attack on a Tor circuit as long as the
following criteria are satisﬁed:
1, AS(cid:48)
Let psrc→entry = {AS1, AS2, . . . , ASn} be the set of
ASes on the path from the source (Tor client) to the selected
entry-relay (this set includes the entry-relay AS), pentry→src =
{AS(cid:48)
m} be the set of ASes on the path from the
entry-relay back to the source, and pentry↔src = pentry→src∪
psrc→entry. We similarly deﬁne paths to and from the exit-
relay and destination (e.g., a popular content provider, or other
Web service) as pexit→dst, pdst→exit, and pexit↔dst.
2, . . . , AS(cid:48)
We say that a Tor circuit is vulnerable to a trafﬁc correlation
attack if there exists an AS Ai such that:
Ai ∈ {psrc↔entry ∩ pexit↔dst}
(1)