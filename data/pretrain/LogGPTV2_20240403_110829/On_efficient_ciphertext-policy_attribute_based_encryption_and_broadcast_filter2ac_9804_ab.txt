1 ; A+
−
k
.
0
Key Generation :Each user u is tagged with the attribute
u ∪ L
−
list Lu = L+
u when joining the system. We have
u ⊂ {1;··· ; k}, L
u ⊂ {k + 1;··· ; 2k}. We also have
−
L+
= {2k + 1;··· ; 3k}. The TA ﬁrst selects k random num-
∗
L
bers {r1; r2;··· ; rk} from Zp and calculate r =
k
i=1 ri.
The TA computes D = g(cid:13)r = vr. For every i ∈ L+
= i; for every i ∈ L
calculates Di = g(cid:13)((cid:11)i+ri′ ) where i
′
TA calculates Di = g(cid:13)((cid:11)i+ri′ ) where i
= i − 2k.
i ∈ L
u , TA
−
u ,
= i − k; for every
, TA calculates Fi = g(cid:13)((cid:11)i+ri′ ) where i
∑
∗
′
′
The private key for user u is computed as:
SKu = (D; {Di|∀i ∈ L+
u }; {Di|∀i ∈ L
∗}):
{Fi|∀i ∈ L
u };
−
Encryption: The encrypter picks a random t in Zp and sets
the one-time symmetric encryption key Key = e(gK ; g1)kt.
Suppose AND-gate policy is W with k attributes. Each
attribute is either positive/negative or wildcards.
The encryptor ﬁrst encrypts the message using symmetric
key Key as {M}Key. The encryptor also sets C0 = gt.
j∈W gK+1−j)t. The ciphertext
Then, it calculates C1 = (v
is:
∏
∏
CT = (W;{M}Key; gt; (v
j∈W
= (W;{M}Key; C0; C1):
gK+1−j)t)
Decryption: The decryptor u needs to checks whether
Lu |= W when receiving the ciphertext. If not, u returns
⊥.
Then for ∀i ∈ W , u calculates the following terms:
e(gi; C1) = e(g(cid:11)i
; gt((cid:13)+
= e(g; g)t(cid:13)(cid:11)i+t
∏
e(C0; Di ·
gK+1−j+i)
∑
j∈W;j̸=i
= e(gt; g(cid:13)((cid:11)i+ri′ )+
= e(g; g)t(cid:13)((cid:11)i+ri′ )+t
∑
j∈W (cid:11)K+1−j ))
∑
j∈W (cid:11)K+1−j+i
; and
)
j∈W;j̸=i (cid:11)K+1−j+i
j∈W;j̸=i (cid:11)K+1−j+i
∑
∏
:
gK+1−j+i)
j∈S;j̸=i
Then, we calculate
e(gi; C1)=e(C0; di ·
= e(g; g)
−t(cid:13)ri′ +t(cid:11)K+1
:
After we calculate all k terms, we make a production of
all the quotient terms and get:
−t(cid:13)(r1+r2+···+rk)+kt(cid:11)k+1
e(g; g)
−t(cid:13)r+kt(cid:11)K+1
= e(g; g)
:
We calculate:
e(D; C0) = e(g; g)t(cid:13)r:
Then, we produce these two terms and get
Key = e(g; g)kt(cid:11)K+1
= e(gK ; g1)kt
and decrypt the message.
4. ABBE
In ABBE with N users, each user is issued an n-bit binary
ID b0b1 ··· bn, where bi represents the i’th bit in the user’s
binary ID, where n = log N . Accordingly, we can deﬁne
n bit-assignment attributes {B1; B2;··· ; Bn}. Each user
is assigned n bit-assignment attribute values according to
his/her ID. If the bi = 1, he/she is assigned the B+
i , if
−
the bi = 0, he/she is assigned the B
i . For example, in
a system with 8 possible users, each user is assigned 3 bit-
assignment attributes to represent the bit values in their ID,
as illustrated in Figure 1:
754bit-assignment attributes to identity each user. We can refer
BGW scheme in [2] as maximalist. In BGW scheme, for a
system with N users, each user is mapped to a unique public
key. Given all N public keys, the number of combinations
is 2N − 1, which equals to the number of receiver subsets in
the system. Thus, each encryptor needs maximal number of
public keys to perform broadcast encryption.
To compare the minimalist and maximalist storage strat-
egy, we can treat each attribute or public key as an bi-
nary variable v ∈ {1; 0}. We denote p = Pv=1 as the per-
centage of totals users who have this attributes or public
key and 1 − p = Pv=0 as the percentage of totals users
who do not have this attributes or public key, given that
P(v=1) + P(v=0) = 1.
Definition 3. The entropy of an attribute or a public
key is de(cid:12)ned as:
H(v) = p log p
−1 + (1 − p) log(1 − p)
−1:
(cid:3)
Based on the Deﬁnition 3 , we see the entropy of each
attribute in minimalist strategy as Ha(1=2) = 1 since ,for
each particular attribute, exact half of the users have it while
the other half do not have it. On the other hand, the en-
tropy of public key in maximalist strategy is Ha(1=N ) =
(1=N ) log(N ) + ((N − 1)=N ) log(N=(N − 1)) < 1. Hence, we
can conclude that minimalist strategy attains maximal bi-
nary entropy while the maximalist strategy attains minimal
binary entropy.
5. CONCLUSION
In this paper, a Constant Ciphertext Policy Attribute
Based Encryption (CCP-ABE) was proposed. Compared
with existing CP-ABE constructions, CCP-ABE signiﬁcantly
reduces the ciphertext size from linear to constant and sup-
ports expressive access policies. Based on CCP-ABE, we
further proposed an Attribute Based Broadcast Encryption
(ABBE) scheme that attains information theoretical mini-
mal storage overhead. Thus, a storage restricted user can
easily pre-install all required key materials to perform en-
cryption and decryption.
6. REFERENCES
[1] J. Bethencourt, A. Sahai, and B. Waters. Ciphertext-policy
attribute-based encryption. In SP ’07: Proceedings of the 2007
IEEE Symposium on Security and Privacy, pages 321{334,
Washington, DC, USA, 2007. IEEE Computer Society.
[2] D. Boneh, C. Gentry, and B. Waters. Collusion resistant
broadcast encryption with short ciphertexts and private keys.
In Advances in Cryptology{CRYPTO 2005, pages 258{275.
Springer, 2005.
[3] D. Boneh and B. Waters. Conjunctive, subset, and range
queries on encrypted data. In TCC’07: Proceedings of the 4th
conference on Theory of cryptography, pages 535{554, Berlin,
Heidelberg, 2007. Springer-Verlag.
[4] L. Cheung and C. Newport. Provably secure ciphertext policy
abe. In CCS ’07: Proceedings of the 14th ACM conference on
Computer and communications security, pages 456{465, New
York, NY, USA, 2007. ACM.
[5] J. Katz, A. Sahai, and B. Waters. Predicate encryption
supporting disjunctions, polynomial equations, and inner
products. In EUROCRYPT’08: Proceedings of the theory and
applications of cryptographic techniques 27th annual
international conference on Advances in cryptology, pages
146{162, Berlin, Heidelberg, 2008. Springer-Verlag.
[6] E.J. McCluskey. Minimization of Boolean functions. Bell
System Technical Journal, 35(5):1417{1444, 1956.
Figure 1: An illustration of bit-assignment at-
tributes assignment for a 3-bit ID space.
With the 3n + 3m attribute values, the authority runs
Setup(n + m) algorithm and generate public keys and pri-
vate keys.
Here, we focus on how an encryptor can specify the list
of receivers explicitly using n bit-assignment attributes. We
ﬁrst deﬁne some of the terms used in the following presen-
tations:
• Literal : A variable or its complement, e.g., b1, b1, etc.
• Product Term: Literals connected by AND, e.g., b2b1b0.
• Sum-of-Product Expression (SOPE): Product terms con-
nected by OR, e.g., b2b1b0 + b2.
Given the set of receivers S, the membership functions
fS(), which is in the form of SOPE, speciﬁes the list of re-
ceivers:
{
fS(bu
1 ; bu
2 ; : : : ; bu
n) =
iﬀ u ∈ S;
iﬀ u =∈ S:
0
1
For example, if the subgroup S = {000; 001; 011; 111}, then
fS = b0b1b2 + b0b1b2 + b0b1b2 + b0b1b2.
S
Then, the broadcast encryptor runs the Quine-McCluskey
algorithm [6] to reduce fS to minimal SOPE f min
. The
reduction can consider do not care values ∗ on those IDs that
are not currently assigned to any receiver to further reduce
number of product terms in the membership function. For
example, if S = {000; 001; 011; 111}, f min
S = b0b1 + b1b2.
Since f min
is in the form of SOPE, encryption is per-
formed on each product term. That is, for each product
term E in f min
, the encryptor speciﬁes an AND-gate access
policy W using the following rules:
1. For positive literal bi ∈ f min
in the access
, set B+
i
S
S
S
policy W .
2. For negative literal bi ∈ f min
S
policy W .
−
, set B
i
in the access
3. Set B
∗
i for the rest of bit-assignment attributes.
.
For each W , the encryptor uses Encrypt(PK; W; M) al-
gorithm to encrypt the message. The total number of en-
crypted message equals to the number of product terms in
f min
S
For example, if S = {000; 001; 011; 111}, f min
= b0b1 +
b1b2. We can ﬁnd that f min
contains 2 product terms. the
message M for S can be encrypted into 2 ciphertexts with
2 product terms respectively.
4.1 Information Theoretical Optimality
S
S
If we denote our optimal bit-assignment attributes assign-
ment to be minimalist, which requires the least number of
755