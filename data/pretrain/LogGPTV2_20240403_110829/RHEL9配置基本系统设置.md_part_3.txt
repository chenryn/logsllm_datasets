:::
这个步骤描述了使用 `nmcli`{.literal}
实用程序在以下设置中添加以太网连接：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal} 和 `/24`{.literal} 子网掩码
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
::: orderedlist
**流程**
1.  为以太网连接添加新的 NetworkManager 连接配置集：
    ``` literallayout
    # nmcli connection add con-name Example-Connection ifname enp7s0 type ethernet
    ```
    可以进一步修改您创建的 `Example-Connection`{.literal} 连接配置集。
2.  设置 IPv4 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.addresses 192.0.2.1/24
    ```
3.  设置 IPv6 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv6.addresses 2001:db8:1::1/64
    ```
4.  将 IPv4 和 IPv6 连接方法设置为 `manual`{.literal}：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.method manual
    # nmcli connection modify Example-Connection ipv6.method manual
    ```
5.  设置 IPv4 和 IPv6 默认网关：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.gateway 192.0.2.254
    # nmcli connection modify Example-Connection ipv6.gateway 2001:db8:1::fffe
    ```
6.  设置 IPv4 和 IPv6 DNS 服务器地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns "192.0.2.200"
    # nmcli connection modify Example-Connection ipv6.dns "2001:db8:1::ffbb"
    ```
    要设置多个 DNS 服务器，以空格分隔并用引号括起来。
7.  为 IPv4 和 IPv6 连接设置 DNS 搜索域：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns-search example.com
    # nmcli connection modify Example-Connection ipv6.dns-search example.com
    ```
8.  激活连接配置集：
    ``` literallayout
    # nmcli connection up Example-Connection
    Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/13)
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    程序来验证这个主机是否可以向其它主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:1::2
        ```
        如果命令失败，请验证 IP 和子网的设置。
    -   在远程子网中查找 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 198.162.3.1
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        ::: itemizedlist
        -   如果命令失败，则使用 ping 默认网关来验证设置。
            对于 IPv4：
            ``` literallayout
            # ping 192.0.2.254
            ```
            对于 IPv6:
            ``` literallayout
            # ping 2001:db8:1::fff3
            ```
        :::
    :::
4.  使用 `host`{.literal} 实用程序来验证名称解析是否正常工作。例如：
    ``` literallayout
    # host client.example.com
    ```
    如果命令返回任何错误，如 `connection timed out`{.literal} 或
    `no servers could be reached`{.literal}，请验证您的 DNS 设置。
:::
::: orderedlist
**故障排除步骤**
1.  如果连接失败，或者网络接口在上线和关闭状态间切换：
    ::: itemizedlist
    -   确保网络电缆插入到主机和交换机。
    -   检查连接失败是否只存在于这个主机上，或者其他连接到该服务器连接的同一交换机的主机中。
    -   验证网络电缆和网络接口是否如预期工作。执行硬件诊断步骤并替换有缺陷的电缆和网络接口卡。
    -   如果磁盘中的配置与设备中的配置不匹配，则启动或重启
        NetworkManager
        会创建一个代表该设备的配置的内存连接。有关详情以及如何避免这个问题，请参阅
        [NetworkManager
        服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}
    :::
:::
::: itemizedlist
**其他资源**
-   `nm-settings(5)`{.literal}、`nmcli`{.literal} 和
    `nmcli(1)`{.literal} man page
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_networking/managing-the-default-gateway-setting_configuring-and-managing-networking#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-and-managing-network-access_configuring-basic-system-settings.html#proc_adding-a-connection-profile-using-nmtui_assembly_configuring-and-managing-network-access}使用 nmtui 添加连接配置集 {.title}
:::
`nmtui`{.literal} 应用程序为 NetworkManager
提供了一个文本用户界面。以下介绍了如何添加新连接配置集的步骤。
::: itemizedlist
**先决条件**
-   已安装 `NetworkManager-tui`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  启动 NetworkManager 文本用户界面工具：
    ``` literallayout
    # nmtui
    ```
2.  选择 `Edit a connection`{.literal} 菜单项，点 [**Enter**]{.keycap}。
3.  选择 [Add]{.guibutton} 按钮，点 [**Enter**]{.keycap}。
4.  选择 `Ethernet`{.literal}，点 [**Enter**]{.keycap}。
5.  输入连接详情信息。
    ::: informalfigure
    ::: mediaobject
    ![在 nmtui 中添加连接](images/add-connection-in-nmtui.png)
    :::
    :::
6.  选择 [OK]{.guibutton} 保存更改。
7.  选择 `Back`{.literal} 返回主菜单。
8.  选择 `Activate a connection`{.literal} 并点 [**Enter**]{.keycap}。
9.  选择新的连接条目，点 [**Enter**]{.keycap} 键激活连接。
10. 选择 [Back]{.guibutton} 返回主菜单。
11. 选择 `Quit`{.literal}。
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp1s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp1s0
    ...
    ```
    如果磁盘中的配置与设备中的配置不匹配，则启动或重启 NetworkManager
    会创建一个代表该设备的配置的内存连接。有关详情以及如何避免此问题，请参阅
    [NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}。
    ::: itemizedlist
    **其他资源**
    -   [测试基本网络设置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_networking/testing-basic-network-settings_configuring-and-managing-networking){.link}
    -   `nmtui(1)`{.literal} 手册页
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-and-managing-network-access_configuring-basic-system-settings.html#ref_managing-networking-in-the-rhel-web-console_assembly_configuring-and-managing-network-access}在 RHEL 9 web 控制台中管理网络 {.title}
:::
在 Web 控制台中，使用 [Networking]{.guibutton} 菜单可以：
::: itemizedlist
-   显示当前接收并发送的数据包
-   显示可用网络接口最重要的信息
-   显示网络日志的内容。
-   添加各种网络接口类型（bond、team、bridge、VLAN）
:::
::: figure
[]{#assembly_configuring-and-managing-network-access_configuring-basic-system-settings.html#figu-Manag-networking-cockpit}
**图 3.1. 在 RHEL web 控制台中管理网络**
::: figure-contents
::: mediaobject
![CS getting started networking
new](images/cs_getting_started_networking_new.png)
:::
:::
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-and-managing-network-access_configuring-basic-system-settings.html#ref_managing-networking-using-rhel-system-roles_assembly_configuring-and-managing-network-access}使用 RHEL 系统角色管理网络 {.title}
:::
您可以使用 `network`{.literal} 角色在多目标机器上配置网络连接。
`network`{.literal} 角色可以配置以下类型的接口：
::: itemizedlist
-   Ethernet
-   Bridge
-   Bonded
-   VLAN
-   MacVLAN
-   Infiniband
:::
每个主机所需的网络连接都作为 `network_connections`{.literal}
变量中的列表提供。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
`network`{.literal} 角色更新或者创建目标系统中的所有连接配置集，与在
`network_connections`{.literal}
变量中指定的方法完全相同。因此，如果选项只在系统中出现而没有出现在
`network_connections`{.literal} 变量中，`network`{.literal}
角色会从指定的配置集中删除选项。
:::
以下示例演示了如何应用 `network`{.literal}
角色来确保存在与所需参数的以太网连接：
::: title
**应用网络角色的 playbook 示例，以设置使用所需参数的以太网连接**
:::
``` literallayout
# SPDX-License-Identifier: BSD-3-Clause
---
- hosts: network-test
  vars:
    network_connections:
      # Create one ethernet profile and activate it.
      # The profile uses automatic IP addressing
      # and is tied to the interface by MAC address.
      - name: prod1
        state: up
        type: ethernet
        autoconnect: yes
        mac: "00:00:5e:00:53:00"
        mtu: 1450
  roles:
    - rhel-system-roles.network
```
::: itemizedlist
**其他资源**
-   [RHEL
    系统角色入门](#getting-started-with-rhel-system-roles_configuring-basic-system-settings.html "第 1 章 RHEL 系统角色入门"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-and-managing-network-access_configuring-basic-system-settings.html#_additional_resources_3}其他资源 {.title}
:::
::: itemizedlist
-   [配置和管理网络](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_and_managing_networking/index){.link}
:::
:::