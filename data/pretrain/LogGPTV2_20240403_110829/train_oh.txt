### wcsncat() Function Attributes

- **Thread Safety**: `mt-safe`

For a detailed explanation of the terms used in this section, please refer to the [attributes(7)](https://man7.org/linux/man-pages/man7/attributes.7.html) manual page.

### Conformance

- POSIX.1-2001
- POSIX.1-2008
- C99

### See Also

- [strncat(3)](https://man7.org/linux/man-pages/man3/strncat.3.html)
- [wcscat(3)](https://man7.org/linux/man-pages/man3/wcscat.3.html)

### Colophon

This page is part of release 5.13 of the Linux [man-pages] project. For more information about the project, reporting bugs, and the latest version of this page, visit [https://www.kernel.org/doc/man-pages/](https://www.kernel.org/doc/man-pages/).

### Copyright and License

- **Copyright 2008 Michael Kerrisk**
- **License**: Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies. Permission is also granted to copy and distribute modified versions under the same conditions, with the entire resulting work distributed under identical terms. The author(s) assume no responsibility for errors or omissions, or for damages resulting from the use of the information contained herein.

---

### random_r, srandom_r, initstate_r, setstate_r - Reentrant Random Number Generator

#### Synopsis

```c
#include <stdlib.h>

int random_r(struct random_data *restrict buf, int32_t *restrict result);
int srandom_r(unsigned int seed, struct random_data *buf);
int initstate_r(unsigned int seed, char *restrict statebuf, size_t statelen, struct random_data *restrict buf);
int setstate_r(char *restrict statebuf, struct random_data *restrict buf);
```

#### Feature Test Macro Requirements for glibc

- Since glibc 2.19: `_default_source`

For more details on feature test macros, see [feature_test_macros(7)](https://man7.org/linux/man-pages/man7/feature_test_macros.7.html).

---

### vhangup - Virtually Hang Up the Current Terminal

#### Synopsis

```c
#include <unistd.h>

int vhangup(void);
```

#### Feature Test Macro Requirements for glibc

- Since glibc 2.21: `_default_source`
- In glibc 2.19 and 2.20: `_default_source || (_XOPEN_SOURCE && _XOPEN_SOURCE < 500)`

For more details on feature test macros, see [feature_test_macros(7)](https://man7.org/linux/man-pages/man7/feature_test_macros.7.html).

---

### ttys - Serial Terminal Lines

#### Description

The devices `/dev/ttys[0-3]` are character devices for the serial terminal lines. They are typically created using the following commands:

```sh
mknod -m 660 /dev/ttys0 c 4 64 # Base address 0x3f8
mknod -m 660 /dev/ttys1 c 4 65 # Base address 0x2f8
mknod -m 660 /dev/ttys2 c 4 66 # Base address 0x3e8
mknod -m 660 /dev/ttys3 c 4 67 # Base address 0x2e8
chown root:tty /dev/ttys[0-3]
```

#### Files

- `/dev/ttys[0-3]`

#### See Also

- [chown(1)](https://man7.org/linux/man-pages/man1/chown.1.html)
- [mknod(1)](https://man7.org/linux/man-pages/man1/mknod.1.html)
- [tty(4)](https://man7.org/linux/man-pages/man4/tty.4.html)
- [agetty(8)](https://man7.org/linux/man-pages/man8/agetty.8.html)
- [mingetty(8)](https://man7.org/linux/man-pages/man8/mingetty.8.html)
- [setserial(8)](https://man7.org/linux/man-pages/man8/setserial.8.html)

#### Colophon

This page is part of release 5.13 of the Linux [man-pages] project. For more information about the project, reporting bugs, and the latest version of this page, visit [https://www.kernel.org/doc/man-pages/](https://www.kernel.org/doc/man-pages/).

- **Copyright (C) 1994 Jochen Hein**
- **License**: This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

---

### charmap - Character Set Description File

#### Description

A character set description (charmap) defines all available characters and their encodings in a character set. The `localedef(1)` command can use charmaps to create locale variants for different character sets.

##### Syntax

The charmap file starts with a header that may include the following keywords:

- `<charset>`: Followed by the name of the character map.
- `<comment_char>`: Followed by a character that will be used as the comment character for the rest of the file. It defaults to the number sign (`#`).
- `<escape_char>`: Followed by a character that should be used as the escape character for the rest of the file to mark characters that should be interpreted in a special way. It defaults to the backslash (`\`).
- `<mb_cur_max>`: Followed by the maximum number of bytes for a character. The default value is 1.
- `<mb_cur_min>`: Followed by the minimum number of bytes for a character. This value must be less than or equal to `<mb_cur_max>`. If not specified, it defaults to `<mb_cur_max>`.

The character set definition section starts with the keyword `charmap` in the first column. The following lines may have one of the two forms to define the character set:

- `\ byte-sequence comment`: Defines exactly one character and its byte sequence, where `comment` is optional.
- `.. byte-sequence comment`: Defines a character range and its byte sequence, where `comment` is optional.

The character set definition section ends with the string `end charmap`.

The character set definition section may optionally be followed by a section to define widths of characters. The `width_default` keyword can be used to define the default width for all characters not explicitly listed. The default character width is 1.

The width section for individual characters starts with the keyword `width` in the first column. The following lines may have one of the two forms to define the widths of the characters:

- `\ width`: Defines the width of exactly one character.
- `... width`: Defines the width for all the characters in the range.

The width definition section ends with the string `end width`.

#### Files

- `/usr/share/i18n/charmaps`: Usual default character map path.

#### Conformance

- POSIX.2

#### Examples

The euro sign is defined as follows in the UTF-8 charmap:

```plaintext
\xE2\x82\xAC euro sign
```

#### See Also

- [iconv(1)](https://man7.org/linux/man-pages/man1/iconv.1.html)
- [locale(1)](https://man7.org/linux/man-pages/man1/locale.1.html)
- [localedef(1)](https://man7.org/linux/man-pages/man1/localedef.1.html)
- [locale(5)](https://man7.org/linux/man-pages/man5/locale.5.html)
- [charsets(7)](https://man7.org/linux/man-pages/man7/charsets.7.html)

#### Colophon

This page is part of release 5.13 of the Linux [man-pages] project. For more information about the project, reporting bugs, and the latest version of this page, visit [https://www.kernel.org/doc/man-pages/](https://www.kernel.org/doc/man-pages/).

- **Copyright (C) 2006 Michael Kerrisk**
- **License**: Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies. Permission is also granted to copy and distribute modified versions under the same conditions, with the entire resulting work distributed under identical terms. The author(s) assume no responsibility for errors or omissions, or for damages resulting from the use of the information contained herein.

---

### sem_open - Initialize and Open a Named Semaphore

#### Synopsis

```c
#include <fcntl.h>           /* For O_* constants */
#include <sys/stat.h>        /* For mode constants */
#include <semaphore.h>

sem_t *sem_open(const char *name, int oflag);
```

#### Description

The `sem_open` function initializes and opens a named semaphore. For more details, see the [sem_open(3)](https://man7.org/linux/man-pages/man3/sem_open.3.html) manual page.