normal AS path
Section VII-A:
Declining Presence
of Default Routes
Discovers the prevalence and distribution
of default routes on the Internet
For 1,460 samples, 55% of fringe or
no-customer ASes had default routes, while
< 10% of transit ASes had default routes
Waterfall of Liberty,
RAD, Nyx, Feasible
Nyx, LIFEGUARD
Section VII-B:
Growth of /25
Reachability
Uncovers how many ASes must lose
reachability to poisoned ASes when
leveraging BGP poisoning
56% of observed ASes will propagate /25
preﬁxes and 31% of ASes respond to
traceroutes for a /25
RAD, Nyx, Feasible
Nyx, LIFEGUARD
Default routes do impact
poisoning-enabled systems
negatively, but can be avoided in
speciﬁc topological cases,
especially when the system is not
deployed at the edge of the
Internet
Reachability of /25 preﬁxes limits
some systems using poisoning, but
for most cases, poisoning-enabled
systems claims hold up in an
Internet that has changed greatly
since the earliest measurements of
/25 reachability
• We discuss insights and recommendations for the use
(or threat model inclusion) of poisoning in security
and measurement work going forward. We cover these
insights within Sections V, VI,and VII, with sum-
maries in subsections at the end of these sections.
• We conclude the paper with discussion in Section VIII
about the reproducibility and limitations of our exper-
iments.
II. BACKGROUND AND MOTIVATION
A. The Border Gateway Protocol (BGP)
The Internet is composed of many autonomous systems,
or ASes, which are sets of routers and IP addresses under
singular administrative control [16]. Each AS has one or more
IP preﬁxes allocated to it, containing large amounts of IP
addresses (e.g. an /8 or /16 subnet), or they can contain
relatively few IPs (e.g. a /23 or /24). Today, a /24 is the most
speciﬁc, or smallest, preﬁx recommended to be allowed by
the most current best practices documents [12]. mThe Border
Gateway Protocol [44] (BGP) is the de facto routing protocol
of the Internet. BGP allows the exchange of information, called
advertisements, between ASes about routes to blocks of IP
addresses (e.g. preﬁxes), allowing each AS to have knowledge
of how to forward packets toward their destinations. BGP
advertisements are conﬁned to the control-plane of the Internet,
while protocols such as TCP and UDP are conﬁned to the data-
plane.
To carry out the routing decision process, BGP harnesses a
path-vector routing algorithm with policies to build and prop-
agate AS paths, or routes, via BGP advertisements. Individual
routers can deﬁne their own policies for which routes are
considered "best" and then use the preferred routes to forward
packets. In practice, these routes are often not the shortest, but
rely on the speciﬁc policies deﬁned in router conﬁgurations.
These can include the cheapest route, the most favorable for
congestion directly upstream, or any number of preferences a
network operator sets for which upstream AS should be used.
Outbound AS-level BGP paths are controlled by using the
local routing policy to force a particular installed route as the
ﬁrst choice. BGP also includes a "loop detection" mechanism,
where a BGP router receiving a new advertisement will ﬁrst
scan the entire path, and if it is already on the path, will drop
(ignore) the advertisement and refuse to propagate the path to
its neighbors.
To stabilize the control plane, mechanisms such as route-
ﬂap dampening [62], [43] (RFD) and Minimum Route Ad-
vertisement Interval (MRAI) timers [44] limit the number of
advertisements a single AS can propagate to amounts capable
of being handled by connected ASes. These mechanisms can
slow the process of BGP convergence, or the time taken for
the Internet to settle on a set of stable routes to destinations
based on BGP updates. However, as router processing power
has increased, RFD becomes less widely used and is now
disabled by default in Cisco routers [37]. Additionally, RIPE
recommends setting RFD with a high BGP update suppression
threshold [37]. MRAI timers also vary widely in conﬁguration,
with a default value of 30 seconds. We discuss in Section III
how our experiments account for the presence of RFD and
MRAI timers with appropriate wait times between BGP ad-
vertisements.
3
(a) Critical links congested (Nyx) or
decoy router placed (RAD)
(b) Lying about paths and prepending ASes
to avoid
(c) Loop detection triggered and new path taken
Fig. 1: Illustration of BGP Poisoning
B. BGP Poisoning
While network operators can control the path their out-
bound trafﬁc takes, they cannot directly control the path their
inbound trafﬁc takes. However, BGP poisoning is a trafﬁc
engineering technique that allows network operators to indi-
rectly control inbound trafﬁc. Poisoning is not a standardized
behavior in BGP, rather it is a side-effect of the loop detection
mechanism mentioned earlier.
In detail, AS-level operators may use BGP poisoning to
prevent one or more ASes from installing, utilizing, and
propagating a particular path [52], [23], [1]. The AS utilizing
the technique (poisoning AS) determines a set of ASes they
want inbound trafﬁc to route around (poisoned ASes). In order
to do this, the poisoning AS inserts the poisoned ASNs into
the AS_PATH. According to the BGP speciﬁcation [44], the
poisoned ASes should drop the poisoning AS’s path because
of BGP’s aforementioned loop detection mechanism.
We illustrate BGP poisoning in Figure 1. In 1a, AS 1
wishes to move the best path of AS 4 to AS 1 off of the link
over AS 3. Some security-related reasons for this could include
avoiding congestion outside the control of the victim AS,
attacking censorship circumvention systems, or routing around
privacy-compromising regions of the Internet. In Figure 1b,
AS 1 will now advertise a new BGP path, but now including
the AS to avoid prepended at the end of the advertised path.
This is the "poisoning" of the link over AS 3 by AS 1. This
path will then be seen by AS 2 and AS 3. In Figure 1c, this
advertisement will propagate past AS 2 to AS 4, but will be
dropped at AS 3 due to BGP’s loop detection mechanism,
since AS 3 sees its own AS number on the path. Now that AS
3 drops the path, it no longer has a route to AS 1 and will
not advertise the path to AS 1 over itself. At this point, the
new return path swaps to the path via AS 2, completing this
poisoning instance.
BGP poisoning allows an operator to indirectly control
the inbound AS-level path for their preﬁxes, though other
less effective mechanisms for inbound path control exist. The
Multi-Exit Discriminator (MED) [31] attribute can inﬂuence
a neighboring AS’s tie-breaking process, but routers only
employ MED after LOCAL_PREF and AS_PATH length. This
property still leaves the decision to use the route in the hands of
the neighboring AS’s operators. Other techniques such as self-
prepending, employing overlapping preﬁxes to trigger longest-
preﬁx matches, and applying communities to routes may have
an effect, but all rely on the remote AS’s local policy.
C. How Does BGP Poisoning Impact the Internet’s Security?
There are certain security systems that directly use BGP
poisoning to achieve their stated goals. In addition, other
security systems rely on certain AS path properties to provide
security guarantees. If an adversary could choose routes used
by these security systems via BGP poisoning, then the claims
of these systems would be undermined.
In the realm of censorship, BGP poisoning has been used
by Schuchard et al. [50] with Routing Around Decoys (RAD)
to attack censorship circumvention systems, speciﬁcally those
predicated on Decoy Routing (DR). Decoy routing is a recent
technique in censorship circumvention where circumvention
is implemented with help from volunteer Internet autonomous
systems, called decoys. These decoys appear to route trafﬁc
to a decoy destination, but instead form a covert tunnel to
the actual destination to evade the censor. In the RAD paper,
only outbound BGP paths were altered to allow censors to
route around decoys, but inbound paths could also be altered
to avoid decoy routers. In response to this approach to routing
around decoys, work by Houmansadr et al. [20], [36] presented
including the Waterfall of Liberty.
defenses against RAD,
Waterfall places decoy routers on return paths under the
assumption that RAD adversaries can not control these paths.
Our study exposes the relative invalidity of this assumption.
Following from Waterfall, additional work was done by
Goldberg et al. and others [7], [33] built on top of the return
path decoy placement; thus, literature continues to emerge
while operating under assumptions not entirely true in prac-
tice. Arguing that RAD placement was infeasible ﬁnancially,
Houmansadr et al. [35] showed the costs of RAD in practice,
while Gosain et al. [15] places decoy routers to intercept the
most trafﬁc. Both approaches could be circumvented when
BGP poisoning works successfully at certain topological posi-
tions.
In particular, Smith et al. uses BGP poisoning to provide
DDoS resistance with Nyx [52] and Katz-Bassett et al. uses
poisoning for link failure avoidance with LIFEGUARD [23].
Nyx uses poisoning to alter the return paths of remote ASes
to a poisoning AS, in an attempt to route the remote ASes’
trafﬁc around Link Flooding DDoS Attacks. LIFEGUARD
4
uses poisoning to route around localized link failures between
cloud hosts in AWS. Despite their success in simulation and
limited sample sizes in practice, these systems assumptions
need expansion and further validation at a wider scale to
be used effectively for network defense. Tran et al.’s [60]
feasibility study of Nyx raises issues with poisoning needed
to steer trafﬁc, but fails to evaluate their assumptions via real-
world active measurements. Instead, they rely on passive mea-
surement and simulation. Our ﬁndings demonstrate how the
real-world limitations of BGP poisoning affect these systems,
speciﬁcally when BGP path steering via poisoning is used in
a defensive context.
Since BGP poisoning is a non-standard technique, it is not
widely known how feasible it is across the entire Internet, and
further it is not known how its real-world feasibility differs
from its de facto feasibility when simulated. This lack of
understanding directly impacts existing security systems. As
a result, we need to understand the real-world feasibility of
BGP poisoning to shed light on the validity of these security
systems’ claims.
D. Poisoning, RPKI, and BGPsec
The IETF has worked to add capabilities to cryptograph-
ically validate BGP advertisements in order to mitigate fab-
rication of AS paths, but adoption of these capabilities has
been slow[14], [55]. Given that BGP poisoning functions
by fabricating portions of the AS level path, these defenses
potentially present complications for operators using BGP
poisoning.
Route Origin Validation (ROV) introduced the Resource
Public Key Infrastructure (RPKI). RPKI distributes trusted
AS-level certiﬁcates along with Route Origin Authorizations
(ROA)—signed attestations that an AS is permitted to advertise
a preﬁx [25], [26]. To perform ROV, an AS will take each
advertisement, query the RPKI for any ROA that matches the
advertisement’s preﬁx and length, and ensure that the last AS
in the path matches the AS in a ROA. In the case that no ROA
exists for the preﬁx, no validation can be performed. BGP
poisoning can conform with ROA/ROV by appending a valid
origin AS to the end of the path [34]. This allows poisoning-
enabled systems to function in the face of ROV, although with
a longer path. In Section III we highlight how advertisements
used in our experiments conform to ROV.
BGPsec, ﬁrst proposed as “S-BGP” in 2000 and standard-
ized in 2017, adds the capability for full path validation by
ensuring that each AS in the path has explicitly authorized
the advertisement of the route to the subsequent AS in the
path [27]. BGPsec,
if fully deployed, prevents poisoning,
even with the previously-mentioned ROV bypass. However as
of this writing, no commercial implementations of BGPsec
exist [55], though partial deployments continue [29]. In partial
deployments of BGPSec, routers will simply prefer routes
that conform to BGPSec validation over routes which do
not, rather than strictly dropping non-conforming routes. As
a result, systems which use poisoning as a primitive, such as
Nyx [52], may continue to operate so long as a strict full global
deployment of BGPSec is not realized.
E. Key Terminology
We use the following terms in the rest of this paper:
Steered AS: The steered AS is a remote AS whose trafﬁc
is steered by the poisoning AS onto new paths revealed via
poisoning.
Steered Path: Steered AS trafﬁc is moved onto a new steered
path by the poisoning AS’ advertisements.
Poisoning AS: The poisoning AS exerts control over the
steered AS for security, measurement, performance, or other
purposes.
Poisoned AS: Poisoned ASes are those being prepended to
advertisements by the poisoning AS to steer paths.
III. EXPERIMENT INFRASTRUCTURE
Fig. 2: Distribution of RIPE Atlas traceroute probes at
experiments with overlaid BGP routers
time of
The software-driven infrastructure used in our experiments
to uncover the feasibility of BGP poisoning coordinates a
vast amount of Internet infrastructure. We leverage thousands
of network probes across 10% of the ASes on the Internet
and 92% of the countries around the world, 5 geographically
diverse BGP router locations —including two within Internet
Exchange Points (IXPs) —and 37 BGP update collectors
spread throughout the Internet. Our sample size of experiment
vantage and measurement points represents the best available
publicly at the time of the experiments. The major components
of our measurement infrastructure are shown in Figure 3. For a
detailed discussion of our ethical considerations, please see the
next section after we ﬁrst cover our experiment infrastructure.
We employ both existing and new network infrastructure in
the control-plane and data-plane:
Control-Plane Infrastructure: We use BGP routers to adver-
tise paths with poisoned announcements. The routers originate
in a cooperating university AS, the University of Tennessee,
Knoxville (AS 3450), and 4 routers from PEERING [49]
advertised as AS 47065. Figure 2 shows the routers distributed
both geographically and topologically across 3 countries: USA,
Brazil, and the Netherlands. While this geographic diversity
does not necessarily correspond with topological (i.e. AS-level)
diversity), we used all available BGP routers from PEERING
to generalize our results.
Advertisements were sent to 26 upstream transit ASes plus
300 peers. This includes two IXPs within PEERING. We
employ 8 unused, unique /24 preﬁxes from PEERING and
two /24 preﬁxes from the university AS. Active experiments
pause 2 minutes between measurements after each BGP adver-
tisement, and in some cases 10 minutes or more for different
measurements depending on infrastructure constraints. These
wait times help prevent route-ﬂap dampening [62], [43] and
ensure expiration of MRAI timers [44].
5
timers [44]. We highlight additional data on BGP convergence
times in the related work under Section VIII-D.
IV. ETHICAL CONSIDERATIONS
Our
study conducts active measurements of
routing
behavior on the live Internet. As a result, we took several