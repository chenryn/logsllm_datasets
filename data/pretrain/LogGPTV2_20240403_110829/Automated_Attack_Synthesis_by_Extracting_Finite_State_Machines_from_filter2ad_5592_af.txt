60.37
62.02
58.95
59.58
61.25
56.61
44.76
46.36
49.58
Strict
31.36
33.48
63.98
Span-level
Exact
36.14
39.11
85.65
Partial
59.78
62.19
85.65
TABLE VII: Examples of FSM Extraction Errors
FSM
Gold TCP
Transition
FIN_WAIT_1 FIN!−−−→ LAST_ACK
Error Type
Not Found
Gold DCCP
PARTOPEN DCCP-CLOSE?
−−−−−−−−→ OPEN
Incorrect
Reason
Target state not
explicit
Text is ambigu-
ous
LINEARCRF+R
NEURALCRF+R
and
SYN_SENT SYN!ACK!
−−−−−−→ SYN_RECEIVED
Partially Recov-
ered (expected
SYN?ACK!)
Receive action
is not explicit
Type
58.81
62.14
63.98
Text Excerpt
CLOSE-WAIT STATE: Since the
remote side has already sent FIN,
RECEIVEs must be satisﬁed by
text already on hand, but not yet
delivered to the user.
The client leaves the PARTOPEN
state for OPEN when it receives
a valid packet other than DCCP-
Response, DCCP-Reset, or DCCP-
Sync from the server.
If the state is SYN-SENT then
enter SYN-RECEIVED,
form a
SYN,ACK segment and send it.
REFERENCES
[1] R. Pandita, X. Xiao, W. Yang, W. Enck, and T. Xie, “Whyper: Towards
automating risk assessment of mobile applications,” in USENIX Security,
2013.
[2] E. Wong, L. Zhang, S. Wang, T. Liu, and L. Tan, “DASE: document-
assisted symbolic execution for improving automated software testing,”
in ACM/IEEE ICSE, 2015.
[3] R. Witte, Q. Li, Y. Zhang, and J. Rilling, “Text Mining and Software En-
gineering: an Integrated Source Code and Document Analysis Approach,”
IET Software, 2008.
[4] P. M. Comparetti, G. Wondracek, C. Kruegel, and E. Kirda, “Prospex:
Protocol speciﬁcation extraction,” in IEEE SP, 2009.
[5] Y. Wang, Z. Zhang, D. D. Yao, B. Qu, and L. Guo, “Inferring protocol
state machine from network traces: a probabilistic approach,” in ACNS,
2011.
[6] J. Caballero, P. Poosankam, C. Kreibich, and D. Song, “Dispatcher:
Enabling Active Botnet Inﬁltration Using Automatic Protocol Reverse-
Engineering,” in ACM CCS, 2009.
[7] C. Y. Cho, E. C. R. Shin, D. Song et al., “Inference and analysis of
formal models of botnet command and control protocols,” in ACM CCS,
2010.
[8] W. Cui, J. Kannan, and H. Wang, “Discoverer: Automatic protocol reverse
engineering from network traces,” in USENIX Security, 2007.
[9] N. Kothari, T. D. Millstein, and R. Govindan, “Deriving state machines
from tinyos programs using symbolic execution,” in IPSN, 2008.
[10] C. Y. Cho, D. Babi´c, P. Poosankam, K. Z. Chen, E. X. Wu, and D. Song,
“MACE: Model-inference-assisted concolic exploration for protocol and
vulnerability discovery,” in USENIX Security, 2011.
[11] Z. Lin, X. Jiang, D. Xu, and X. Zhang, “Automatic protocol format reverse
engineering through context-aware monitored execution.” in NDSS, 2008.
[12] J. Caballero, H. Yin, Z. Liang, and D. Song, “Polyglot: Automatic
extraction of protocol message format using dynamic binary analysis,”
in ACM CCS, 2007.
[13] D. Lie, A. Chou, D. Engler, and D. L. Dill, “A simple method for
extracting models from protocol code,” in IEEE ISCA, 2001.
[14] J. Corbett, M. Dwyer, J. Hatcliff, S. Laubach, C. Pasareanu, Robby,
and H. Zheng, “Bandera: extracting ﬁnite-state models from java source
code,” in ICSE, 2000, pp. 439–448.
[15] G. J. Holzmann, “The model checker SPIN,” IEEE Transactions on
software engineering, vol. 23, no. 5, pp. 279–295, 1997.
[16] S. Jero, H. Lee, and C. Nita-Rotaru, “Leveraging state information for
automated attack discovery in transport protocol implementations,” in
IEEE/IFIP DSN, 2015.
[17] Q. Kang, J. Xing, and A. Chen, “Automated attack discovery in data plane
systems,” in 12th USENIX Workshop on Cyber Security Experimentation
and Test (USENIX 19), 2019.
[18] M. von Hippel, C. Vick, S. Tripakis, and C. Nita-Rotaru, “Automated at-
tacker synthesis for distributed protocols,” in Computer Safety, Reliability,
and Security, 2020, pp. 133–149.
[19] T. F. Dullien, “Weird machines, exploitability, and provable unexploitabil-
ity,” IEEE Transactions on Emerging Topics in Computing, 2017.
[20] S. Jero, E. Hoque, D. Choffnes, A. Mislove, and C. Nita-Rotaru,
“Automated attack discovery in TCP congestion control using a model-
guided approach,” in NDSS, 2018, best paper award.
[21] Y. Chen, L. Xing, Y. Qin, X. Liao, X. Wang, K. Chen, and W. Zou, “Devils
in the guidance: predicting logic vulnerabilities in payment syndication
services through automated documentation analysis,” in USENIX Security,
2019.
[22] A. Peterson, S. Jero, E. Hoque, D. Choffnes, and C. Nita-Rotaru,
“aBBRate: Automating BBR attack exploration using a model-based
approach,” in RAID, 2020.
[23] R. J. Mooney, “Learning for semantic parsing,” in Computational
Linguistics and Intelligent Text Processing, A. Gelbukh, Ed. Berlin,
Heidelberg: Springer Berlin Heidelberg, 2007, pp. 311–324.
[24] J. Cheng, S. Reddy, V. Saraswat, and M. Lapata, “Learning structured
natural language representations for semantic parsing,” in Proceedings
of the 55th Annual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers). Vancouver, Canada: Association
for Computational Linguistics, Jul. 2017, pp. 44–55. [Online]. Available:
https://www.aclweb.org/anthology/P17-1005
[25] M. Gardner, P. Dasigi, S.
Iyer, A. Suhr, and L. Zettlemoyer,
the 56th Annual
“Neural semantic parsing,” in Proceedings of
Linguistics:
Meeting
Tutorial
for
Computational Linguistics, Jul. 2018, pp. 17–18. [Online]. Available:
https://www.aclweb.org/anthology/P18-5006
Melbourne, Australia: Association
for Computational
of
Abstracts.
the Association
[26] J. P. Chiu and E. Nichols, “Named entity recognition with bidirectional
the Association for Computational
LSTM-CNNs,” Transactions of
Linguistics, vol. 4, pp. 357–370, 2016.
[27] D. Wadden, U. Wennberg, Y. Luan, and H. Hajishirzi, “Entity, relation,
and event extraction with contextualized span representations,” in
Proceedings of the 2019 Conference on Empirical Methods in Natural
Language Processing and the 9th International Joint Conference on
Natural Language Processing (EMNLP-IJCNLP). Hong Kong, China:
Association for Computational Linguistics, Nov. 2019, pp. 5784–5789.
[Online].
[28] “Transmission Control Protocol,” RFC 793, Sep. 1981.
Available: https://rfc-editor.org/rfc/rfc793.txt
[29] J. Pennington, R. Socher, and C. D. Manning, “Glove: Global vectors
for word representation,” in Empirical Methods in Natural Language
Processing (EMNLP), 2014, pp. 1532–1543.
[30] T. Mikolov, I. Sutskever, K. Chen, G. S. Corrado, and J. Dean, “Dis-
tributed representations of words and phrases and their compositionality,”
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:58:43 UTC from IEEE Xplore.  Restrictions apply. 
1565
CLOSED
!
T
E
S
E
R
_
P
C
C
D
DCCP_REQUEST!
REQUEST
DCCP_RESPONSE?
DCCP_ACK!
LISTEN
DCCP_REQUEST?
DCCP_RESPONSE!
LISTEN
!
T
E
S
E
R
_
P
C
C
D
DCCP_REQUEST?
CLOSED
DCCP_REQUEST!
REQUEST
DCCP_RESPONSE?
DCCP_ACK!
DCCP_RESPONSE?
DCCP_DATA!
RESPOND
PARTOPEN
RESPOND
PARTOPEN
DCCP_ACK!
DCCP_RESET?
DCCP_ACK?
*?
DCCP_DATAACK! or
(DCCP_RESPONSE?
DCCP_ACK!)
OPEN
DCCP_CLOSEREQ!
CLOSING
?
Q
E
R
E
S
O
L
C
_
P
C
C
D
DCCP_CLOSE?
DCCP_RESET!
CLOSEREQ
TIMEWAIT
(a) DCCP Gold FSM.
CLOSED
?
E
S
N
O
P
S
E
R
_
P
C
C
D
!
K
C
A
_
P
C
C
D
DCCP_REQUEST!
REQUEST
DCCP_RESPONSE?
DCCP_DATA!
LISTEN
DCCP_REQUEST?
RESPOND
DCCP_RESET!
PARTOPEN
OPEN
DCCP_CLOSEREQ!
DCCP_ACK?
D C C P _ R E S P O N S E ?
D C C P _ C L O S E R E Q ?
CLOSING
DCCP_ACK!
DCCP_RESET?
DCCP_CLOSEREQ!
CLOSEREQ
TIMEWAIT
DCCP_RESET?,
or as an
-transition
(c) DCCP LINEARCRF+R FSM.
DCCP_ACK?
DCCP_DATA? or (DCCP_RESPONSE?
DCCP_RESET? DCCP_SYNC?)
DCCP_DATA?
OPEN
CLOSING
DCCP_CLOSEREQ!
?
Q
E
R
E
S
O
L
C
_
P
C
C
D
DCCP_CLOSEREQ!
CLOSEREQ
TIMEWAIT
DCCP_RESET?,
or as an
-transition
(b) DCCP NEURALCRF+R FSM.
CLOSED
ACK?
SYN!
SYN!
LAST ACK
SYN!
LISTEN
SYN SENT
FIN? ACK! ACK?
SYN RECEIVED
FIN?
!
K
C
A
ACK?
!
N
I
F
ACK!
ACK?
ESTABLISHED
FIN? ACK!
ACK?
FIN WAIT 1
CLOSE WAIT
ACK?
FIN? ACK! ACK?
FIN? ACK! ACK?
!
N
I
F
FIN WAIT 2
FIN?
ACK!
ACK?
ACK?
CLOSING
TIME WAIT
ACK?
FIN? ACK! ACK?
(d) TCP Gold FSM.
Fig. 8: DCCP Gold, NEURALCRF+R, and LINEARCRF+R FSMs; and TCP Gold FSM.
in Advances in Neural Information Processing Systems 26, C. J. C.
Burges, L. Bottou, M. Welling, Z. Ghahramani, and K. Q. Weinberger,
Eds. Curran Associates, Inc., 2013, pp. 3111–3119.
[31] M. E. Peters, M. Neumann, M. Iyyer, M. Gardner, C. Clark, K. Lee,
and L. Zettlemoyer, “Deep contextualized word representations,” in
Proceedings of the 2018 Conference of the North American Chapter
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:58:43 UTC from IEEE Xplore.  Restrictions apply. 
1666
CLOSED
SYN!
SYN!
LISTEN
SYN RECEIVED
SYN!
ACK? FIN!
(SYN! ACK!) or
(ACK? FIN!)
SYN SENT
(SYN! ACK!) or
(ACK? FIN!)
ESTABLISHED