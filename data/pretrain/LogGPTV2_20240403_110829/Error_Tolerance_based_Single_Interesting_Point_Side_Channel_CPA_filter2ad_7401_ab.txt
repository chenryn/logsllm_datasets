Location [1] if the frequency of it is obviously higher than
that of Location [2]. Then, a column of power consumption
PLocation[1] is selected.
(b). For each guessing key keyi, the attacker calculates a
column of assumed power consumption Pkeyi (i.e. Hamming
weight), then a correlation coeﬃcient ρ in equation (9) will
be calculated.
However, for a hardware implemented DES algorithm on
FPGA, Hamming distance model is used. Let HD denote
the Hamming distance of value and value
, thus,
′
HD = HW (cid:16)value ⊕ value
′(cid:17) .
(4)
Let Pdata and Pop denote the data-dependent and operation-
dependent power consumption component. According to [9],
if we get a column of HD which we named HDi and the cor-
responding power consumption matrix, then the correlation
coeﬃcient of HDi corresponding to guessing key keyi and a
column of power consumption Ptotal will be
ρ (HDi, Ptotal) = ρ (HDi, Pdata + Pop + Pnoise) .
(5)
If we only consider a column of power consumption in our
SIP-CPA, then, the operations are the same. Then,
ρ(cid:0)PLocation[1], Pkeyi(cid:1) =
cov (cid:0)PLocation[1], Pkeyi(cid:1)
qvar (cid:0)PLocation[1](cid:1) var (Pkeyi )
(9)
(c). Suppose that the length of key bits associated with
the intermediate state is L. We choose the max correlation
coeﬃcient corresponding to the correct key keyi from all the
2L correlation coeﬃcients.
We can also use a function to combine correlation coef-
ﬁcients of interesting points to perform SIP-CPA. Suppose
that there are δ interesting points with highest and very close
frequencies, then, we average the correlation coeﬃcients of
them and get a new correlation coeﬃcient
ρnew = Pδ
j=1 ρ(cid:0)PLocation[j], Pkeyi(cid:1)
δ
(10)
ρ (HDi, Pop) = 0.
(6)
Then, SIP-CPA is performed.
Then,
ρ (HDi, Ptotal) = ρ (HDi, Pdata + Pnoise) .
(7)
In the ideal case, the power consumption component Pnoise
is inﬁnitely small, the Hamming distance model can accu-
rately proﬁle the power consumption of the chip.
If the
4. EXPERIMENTAL RESULTS
In this section, we introduce our experimental results on
AES implemented on an AT89S52 single chip and DES al-
gorithm implemented on the Side Channel Attack Standard
Evaluation Board (SASEBO). To evaluate the eﬃciency
822P
Key
MOV A, KEY[i]
MOV R1, PlaintextByte[i]
XOR
State
SBOX
State(cid:98)
XRL A, R1
MOVC A, @A+DPTR
Attack point
ShiftRows
LCALL ShiftRows
MixColumns
LCALL MixColumns
Figure 1: Attack point of AES in our experiments.
t
i
n
e
c
i
f
f
e
o
c
n
o
i
t
l
a
e
r
r
o
C
0.5
0.4
0.3
0.2
0.1
0
0
200
400
600
0.7
0.6
0.5
0.4
0.3
0.2
0.1
t
i
n
e
c
i
f
f
e
o
c
n
o
i
t
l
a
e
r
r
o
c
e
g
a
r
e
v
A
0
0
X: 22
Y: 0.4031
X: 80
Y: 0.3015
X: 311
Y: 0.2003
100
200
300
Time samples
400
500
600
Figure 3: The means of the sorted correlation co-
eﬃcients using Frequency based Interesting Points
Selection algorithm (FIPS).
200
100
y
c
n
e
u
q
e
r
F
0
0
200
100
y
c
n
e
u
q
e
r
F
0
0
200
100
y
c
n
e
u
q
e
r
F
0
0
(a)
200
400
600
800
Time samples
1000
(b)
1200
1400
1600
1800
2000
200
400
600
800
Time samples
1000
(c)
1200
1400
1600
1800
2000
200
400
600
800
1000
1200
1400
1600
1800
2000
800
Time samples
1000
1200
1400
1600
1800
2000
Figure 4: The frequencies of the 2001th ∼ 4000th time
samples corresponding to thresholds 22(a), 80(b)
and 311(c) respectively.
Figure 2: Correlation coeﬃcients of the 2001th ∼
4000th time samples when performing CPA using
4000 power traces.
of CPA and our SIP-CPA, quantitative metrics such as ﬁrst
order success rate [14] and guessing entropy [14] [3] are used.
4.1 Experiments on An AT89S52 Single Chip
Our ﬁrst experiment is on an AT 89S52 single chip. The
clock frequency of this chip is 12MHz. The minimum in-
structions takes 12 clock cycles for execution. We use Tek-
tronix DPO 7254 oscilloscope to capture the power traces,
and the sampling rate is set to 1GS/s. The outputs of S-
box in the ﬁrst round of AES encryption are chosen as the
attack point(as shown in Figure 1). We test the instruction
’M OV CA, @A + DP T R’, which treats the value of register
A as the oﬀset value and treats the Sbox of AES algorithm
as the base address, then looks up table Sbox and writes the
result back to register A (as shown in Figure 1). The value
of A then becomes the ﬁrst byte of the state matrix state
.
We randomly select 80 power traces from a total number
of 150 and repeat this operation 400 times using Algorithm
1 and Algorithm 2. The time sample window k
is set to
2000 so that all time samples are in the threshold. The
total number of successful repetitions is 112 and the success
rate is about 30%. The correlation coeﬃcients of the 2001th
∼ 4000th time samples when performing CPA using 4000
power traces are shown in Figure 2.
′
′
We have statistics on the distribution of correlation coef-
ﬁcients corresponding to the correct key. Speciﬁcally, we di-
vide the correlation coeﬃcients into three thresholds( greater
than 0.2, greater than 0.3 and greater than 0.4). Then,
we calculate the average number of time samples for each
threshold k(= T H). Finally, we obtain three correlation
coeﬃcient thresholds 22, 80 and 311 (as shown in Figure 3).
The frequency of each interesting points are shown in Fig-
ure 4. With the increase of the threshold k(= T H), the
frequencies of all time samples increase. We can be able
to extract good interesting points to perform SIP-CPA by
using the threshold k = 80.
It is diﬃcult to accurately determine the locations of in-
teresting points by using traditional CPA under the condi-
tion that the attacker only has a small number of power
traces. However, by comparing Figure 2 and Figure 4, we
get a conclusion that our Frequency based Interesting Points
Selection algorithm (FIPS) (Algorithm 1 and Algorithm 2)
can eﬀectively determine the locations of interesting points.
Time samples with higher correlation coeﬃcients will be se-
lected with greater probability using Algorithm 1 and Algo-
rithm 2.
The number of interesting points with highest frequencies
are 1, 7 and 13. The corresponding frequencies are 107,
111 and 112 respectively (as shown in Figure 5). These
interesting points are not necessarily in the same clock cycle.
We can still use a combination of them to perform SIP-CPA.
By using the interesting points with highest frequencies in
823120
100
X: 13
Y: 112
y
c
n
e
u
q
e
r
F
80
60
40
20
0
0
50
100
TH = 80
TH = 311
TH = 22
120
100
80
60
40
20
y
p
o
r
t
n
e
g
n
s
s
e
u
G
i
150
The sorted time samples
200
250
300
350
400
0
10
20
30
40
50
Number of power traces
Traditional CPA
SIP−CPA TH=22
SIP−CPA TH=80
SIP−CPA TH=311
60
70
80
Figure 5: All time samples in each threshold is
sorted according to their frequencies.
Figure 7: Guessing entropy in our experiments on
AT 89S52.
Traditional CPA
SIP−CPA TH=22
SIP−CPA TH=80
SIP−CPA TH=311
Li-1  (32 bit)
Ri-1  (32 bit)
SBOX
48 bit
F
Expansion
48 bit
XOR
48 bit
Substitution
32 bit
XOR
32 bit
Ri  (32 bit)
e
t
a
r
s
s
e
c
c
u
S
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
10
20
30
50
Number of power traces
40
60
70
80
Li  (32 bit)
Figure 6:
AT 89S52.
Success rate in our experiments on
(a) 
(b)
Figure 5, our SIP-CPA is performed. With diﬀerent number
of power traces being used, the ﬁrst order success rate are
shown in Figure 6. We randomly select 150 power traces
from a total number of 5000 and repeat the operation 200
times. The ﬁrst order success rate is about 0.675. To get the
same success rate, our SIP-CPA only needs about 25 power
traces if the correlation coeﬃcient threshold is set to 80 or
311 (as shown in Fig.6). If the threshold is set to 22, our
SIP-CPA only needs about 40 power traces.
Compared to CPA, our SIP-CPA is more powerful. We
achieve success rates of 1.00 by using 80, 50 and 50 power
traces when the correlation coeﬃcient threshold k is set to
22, 80 and 311 respectively. To get a success rate of 1.00,
traditional CPA needs more than 200 power traces. For
traditional CPA, the success rate is only about 33% when
about 80 power traces are used. In order to get the same
success rate, our SIP-CPA only needs about 23, 12 and 12
power traces if the correlation coeﬃcient threshold k is set
to 22, 80 and 311 respectively.
The average guessing entropy of CPA is 108.22 when 10
power traces are used (as shown in Figure 7). With the
increase number of power traces, guessing entropy of CPA
declines slowly. When average 80 power traces are used, the
guessing entropy is still greater than 4. To get the same
guessing entropy, our SIP-CPA only needs about 35, 22 and
22 power traces if the threshold k(= T H) is set to 22,80 and
311 respectively.
The guessing entropy of our SIP-CPA is diﬀerent under
the three thresholds 22, 80 and 311. It decreases signiﬁcantly
when k(= T H) is varied from 22 to 80. However, there is
Figure 8: DES algorithm. (a) shows a round of DES,
and (b) shows the S-box of DES.
only a very small change when the threshold is varied from
80 to 311.
Experimental results show that the success rate (guess-
ing entropy) will not grow (decline) when the threshold k(=
T H) reaches a certain value. If the threshold k(= T H) is
particularly large and equal to the total number of time sam-
ples, then all time samples will be in the threshold in each
repetition. The attacker will fail to extract the interesting
points. So, it is very important for the attacker to choose
a suitable correlation coeﬃcient as the threshold k. 80 is a
good threshold on this experiment(as shown in Figure 6 and
Figure 7).
4.2 Experiments on the SASEBO
Our second experiment is on DES algorithm implemented
on the Side Channel Attack Standard Evaluation Board
(SASEBO). We use the power trace set of DP A contest
V 1 provided on the website of DPA contest [1]. 5000 power
traces of secmatv1 are downloaded. We attack the ﬁrst S-