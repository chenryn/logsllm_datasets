                    else if(is_string($option))
                    {
                            if (is_numeric($option[0])) {
                            $option = explode(',', $option); //3
                            $where .= "{$this->fieldList["pri"]} IN(" . implode(',', array_fill(0, count($option), '?')) . ")";
                            $data=$option;
                            continue;
                        } 
                        else 
                        {
当 `$args` 的一个元素的值 为字符串时，就会直接并入 where 子句
           $where .= $option; //2
                            continue;
                        }    
                    }
                    .........................
                    ..............................
                $where=rtrim($where, "OR ");
                return array("where"=>$where, "data"=>$data);
当 $args 的一个元素的值 为字符串时，就会直接并入 where 子句，之后返回。 这样，数据的来源没有过滤，处理过程也没过滤，造成了注入。
同时这里依旧存在 CSRF 漏洞。下面我的测试 POC
访问后，执行的 SQL 语句为：
DELETE FROM ls_acate WHERE jinyu'
该漏洞发生在 del 函数中，而且有很多文件都是直接复制了该函数，所以使用了该函数的都。。。。。。 下面我搜到的一部分
    admin/controls/acate.class.php
    admin/controls/admin.class.php
    admin/controls/admingroup.class.php
    admin/controls/appraise.class.php
    admin/controls/brand.class.php
                    comment.class.php
                    consult.class.php
                    express.class.php
                    ........
上面的注入需要管理员权限，下面就不需要任何权限了。。
漏洞文件 ： home/controls/user.class.php
关键代码：
    function del_consult(){
            $consult=D("Consult");
            if($_GET['id']){
                if($consult->delete($_GET['id'])){
                    $this->success("删除成功!", 1);
                } else {
                    $this->error("删除失败!", 1);
                }
            } 
        }
这里和上面的也差不多， delete($_GET['id']) 将 id 参数带入了漏洞函数，造成注入。。
提交 http://localhost/lesh/index.php/user/del_consult?id=jinyu'
执行的语句：
DELETE FROM ls_consult WHERE jinyu'
同样的复制了该函数的都有漏洞。。。
为了文章知识的完整性,下面来看一个 二次注入 的例子，来源 
PHPSHE 二次注入一枚
    case 'register':
            if (isset($_p_pesubmit)) {
                if($db->pe_num('user', array('user_name'=>pe_dbhold($_g_user_name)))) pe_error('用户名已存在...');
                if($db->pe_num('user', array('user_email'=>pe_dbhold($_g_user_email)))) pe_error('邮箱已存在...');
                if (strtolower($_s_authcode) != strtolower($_p_authcode)) pe_error('验证码错误');
                $sql_set['user_name'] = $_p_user_name;
                $sql_set['user_pw'] = md5($_p_user_pw);
                $sql_set['user_email'] = $_p_user_email;
                $sql_set['user_ip'] = pe_ip();
                $sql_set['user_atime'] = $sql_set['user_ltime'] = time();
                if ($user_id = $db->pe_insert('user', pe_dbhold($sql_set))) {
                    add_pointlog($user_id, 'reg', $cache_setting['point_reg'], '注册帐号');
                    $info = $db->pe_select('user', array('user_id'=>$user_id));
                    $_SESSION['user_idtoken'] = md5($info['user_id'].$pe['host_root']);
                    $_SESSION['user_id'] = $info['user_id'];
                    $_SESSION['user_name'] = $info['user_name'];
                    $_SESSION['pe_token'] = pe_token_set($_SESSION['user_idtoken']);
                    //未登录时的购物车列表入库
                    if (is_array($cart_list = unserialize($_c_cart_list))) {
                        foreach ($cart_list as $k => $v) {
                            $cart_info['cart_atime'] = time();
                            $cart_info['product_id'] = $k;
                            $cart_info['product_num'] = $v['product_num'];
                            $cart_info['user_id'] = $info['user_id'];
                            $db->pe_insert('cart', pe_dbhold($cart_info));
用户注册时 ，进行了转义，
然后登入时将完整的值带入了session
    case 'login':
            if (isset($_p_pesubmit)) {
                $sql_set['user_name'] = $_p_user_name;
                $sql_set['user_pw'] = md5($_p_user_pw);
                if (strtolower($_s_authcode) != strtolower($_p_authcode)) pe_error('验证码错误');
                if ($info = $db->pe_select('user', pe_dbhold($sql_set))) {
                    $db->pe_update('user', array('user_id'=>$info['user_id']), array('user_ltime'=>time()));
                    if (!$db->pe_num('pointlog', " and `user_id` = '{$info['user_id']}' and `pointlog_type` = 'reg' and `pointlog_text` = '登录帐号' and `pointlog_atime` >= '".strtotime(date('Y-m-d'))."'")) {
                        add_pointlog($info['user_id'], 'reg', $cache_setting['point_login'], '登录帐号');                
                    }
                    $_SESSION['user_idtoken'] = md5($info['user_id'].$pe['host_root']);
                    $_SESSION['user_id'] = $info['user_id'];
                    $_SESSION['user_name'] = $info['user_name'];
    z  module/index/order.php 出库
    case 'comment':
            $order_id = pe_dbhold($_g_id);
            $info = $db->pe_select('order', array('order_id'=>$order_id, 'user_id'=>$_s_user_id));
            if (!$info['order_id']) pe_error('参数错误...');
            $info_list = $db->pe_selectall('orderdata', array('order_id'=>$order_id));
            if (isset($_p_pesubmit)) {
                pe_token_match();
                if ($info['order_comment']) pe_error('请勿重复评价...');
                foreach ($info_list as $k=>$v) {
                    $sql_set[$k]['comment_star'] = intval($_p_comment_star[$v['product_id']]);
                    $sql_set[$k]['comment_text'] = pe_dbhold($_p_comment_text[$v['product_id']]);
                    $sql_set[$k]['comment_atime']= time();
                    $sql_set[$k]['product_id'] = $v['product_id'];
                    $sql_set[$k]['order_id'] = $order_id;
                    $sql_set[$k]['user_ip'] = pe_dbhold(pe_ip());
                    $sql_set[$k]['user_id'] = $_s_user_id;
                    $sql_set[$k]['user_name'] = $_s_user_name;
                    if (!$sql_set[$k]['comment_text']) pe_error('评价内容必须填写...');
                }
                if ($db->pe_insert('comment', $sql_set)) {
                    order_callback('comment', $order_id);
                    pe_success('评价成功!');
zmodule/index/order.php 出库
        case 'comment':
                $order_id = pe_dbhold($_g_id);
                $info = $db->pe_select('order', array('order_id'=>$order_id, 'user_id'=>$_s_user_id));
                if (!$info['order_id']) pe_error('参数错误...');
                $info_list = $db->pe_selectall('orderdata', array('order_id'=>$order_id));
                if (isset($_p_pesubmit)) {
                    pe_token_match();
                    if ($info['order_comment']) pe_error('请勿重复评价...');
                    foreach ($info_list as $k=>$v) {
                        $sql_set[$k]['comment_star'] = intval($_p_comment_star[$v['product_id']]);
                        $sql_set[$k]['comment_text'] = pe_dbhold($_p_comment_text[$v['product_id']]);
                        $sql_set[$k]['comment_atime']= time();
                        $sql_set[$k]['product_id'] = $v['product_id'];
                        $sql_set[$k]['order_id'] = $order_id;
                        $sql_set[$k]['user_ip'] = pe_dbhold(pe_ip());
                        $sql_set[$k]['user_id'] = $_s_user_id;
                        $sql_set[$k]['user_name'] = $_s_user_name;
                        if (!$sql_set[$k]['comment_text']) pe_error('评价内容必须填写...');
                    }
                    if ($db->pe_insert('comment', $sql_set)) {
                        order_callback('comment', $order_id);
                        pe_success('评价成功!');
我们注册个用户 aaaaaaa' ,购买商品后评价，可以看到 单引号带入了。