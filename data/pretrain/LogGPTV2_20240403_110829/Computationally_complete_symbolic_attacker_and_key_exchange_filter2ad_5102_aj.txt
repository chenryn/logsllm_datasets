had in the KDM case earlier. But that is the same as (now for both
IND and KDM cases) φ1,{|K|}R1
(cid:73)O K. By the ‘encryptions
with uncompromised keys do not compromise’ axiom, with roles
K(cid:48) ≡ KAB, (cid:126)x ≡ (cid:104)(cid:105) and x ≡ K, we have that either φ1 (cid:73)O K,
or φ1, K (cid:73)sic2 KAB or φ1 (cid:73)skc2 KAB. However, φ1 (cid:54)(cid:73)OK be-
cause of the ‘fresh keys are not compromised’ axiom, and the same
is true for φ1 (cid:54)(cid:73)OKAB. So for the KDM case we have a contra-
diction and we are done. For the IND case, again by the ‘fresh
items do not compromise’ axiom, φ1, K (cid:73)sic2 KAB together with
fresh(K; φ1, KAB) implies φ1 (cid:73)sic2 KAB, hence again we ar-
rived at a contradiction.
KAB
It may seem to the reader that the axioms provided in [5] (that
is, without key compromise) could also be sufﬁcient to prove that
φ3  N is inconsistent with the axioms there by removing items
from φ3 in a different order from what we just did in Example 11.1.
Namely, the idea would be to proceed the following way: given
φ3  N, ﬁrst remove the ﬁrst encryption (by the secrecy axiom as
KAB was never sent out), and receive (cid:104)(A, B),{|h2, N|}R2
K (cid:105)  N.
Then remove the second encryption (by secrecy as K is not in
KAB
the frame any more after removing the ﬁrst encryption) receiving
(A, B)  N contradicting the no-telepathy axiom. However, ap-
plication of the secrecy axiom in [5] (and also in this paper) to
(cid:104)(A, B),{|h2, N|}R2
K (cid:105)  N requires h2 (cid:52) (A, B), which means
(A, B)h2, but that does not hold, because h2 was computed from
(cid:104)(A, B),{|K|}R1
(cid:105). Secrecy axiom can only be used if the frame
contains all necessary information for the computation of handles
in the plaintext. It is in fact possible to show that φ3  N is consis-
tent with the axioms of [5]. Although those axioms are inconsistent
with h2  K, they do allow h2 to carry partial information about K
sufﬁcient to compromise the second encryption. Without the han-
dle h2 in the second encryption, the axioms of [5] are sufﬁcient to
prove inconsistency, but except for initial ones, protocol messages
are normally responses to agent inputs and contain handles.
EXAMPLE 11.2. Now suppose
φ3 ≡ (cid:104)(A, B),{|K|}R1
KAB
K (cid:105)
,{|KAB, h2, N|}R2
KAB
, receive φ1,{|K|}R1
and let us try to show that φ3 ON contradicts the axioms. Note that
there is a key cycle in this example, K and KAB encrypt each other.
So assume φ3 ON. For IND-CCA2 security, from the ‘uncompro-
mised key securely encrypts’ axiom we get φ2, KAB, h2, N (cid:73)sic2
K if we follow the same steps as we did in Example 11.1. Then
the same way as before, we can remove h2 and N, and since φ2 ≡
φ1,{|K|}R1
, KAB (cid:73)sic2 K. But this does
not lead to a contradiction! According to the equational theory,
K = sdec({|K|}R1
, KAB), and by the ‘functions are computable’
axiom, we get φ1,{|K|}R1
, KAB sic2 K. So we always have
φ1,{|K|}R1
, KAB (cid:73)sic2 K too by the ‘derivability implies com-
promise’ axiom, there is no contradiction. However, if we have
KDM security, then just as in the previous example, using the ‘un-
compromised key securely encrypts’ axiom, φ3 skc2 N immedi-
ately leads to φ2 (cid:73)skc2 K, and the rest of the derivation is the
same as in the previous example. So in this case, while φ3 sic2 N
is consistent with the axioms, φ3 skc2 N is inconsistent.
KAB
KAB
KAB
KAB
EXAMPLE 11.3. With names KK(cid:48)KABN R1R2R3, consider
φ3 = (cid:104)(A, B),{|K|}R1
KAB
,{|{|KAB|}R2
K(cid:48) , h2, N|}R3
K (cid:105).
K and KAB are still in cycles, but they do not disturb each other
because of K(cid:48). Again, assuming IND-CCA2 security, from φ3sic2
N ﬁrst φ2,{|KAB|}R2
K(cid:48) , h2, N (cid:73)sic2 K is derived using the ‘un-
compromised key securely encrypts’ axiom as in Example 11.1. As
in Example 11.1, h2 and N are removed: φ2,{|KAB|}R2
K(cid:48) (cid:73)sic2 K.
At this point, the ‘encryptions with uncompromised keys do not
compromise’ axiom implies that either φ2(cid:73)sic2K or φ2,KAB (cid:73)sic2
K(cid:48). In the former case, we are back at the situation of Example
11.1 and we arrive at a contradiction. In the latter case, by function
(encryption) application on φ1,{|K|}R1
, KAB (cid:73)sic2 K(cid:48), we get
φ1, K, KAB, R1 (cid:73)sic2 K(cid:48). By ‘the fresh items do not compro-
mise’ axiom, K, KAB, R1 can be removed receiving φ1 (cid:73)sic2 K(cid:48)
contradicting the ‘fresh keys are uncompromised’ axiom.
KAB
12. THE SYMMETRIC
NEEDHAM-SCHROEDER PROTOCOL
With the axioms that we presented, we have proven the amended
symmetric Needham-Schroeder protocol:
1. A → B : A
2. B → A : {A, N1}KBT
3. A → T : (cid:104)A, B, N2, {A, N1}KBT (cid:105)
4. T → A : {N2, B, K, {K, N1, A}KBT }KAT
5. A → B : {K, N1, A}KBT
12456. B → A : {N3}K
7. A → B : {N3 − 1}K
This protocol ﬁrst has a key distribution part, and then the dis-
tributed key is used to securely encrypt a nonce. We showed that
no symbolic (hence computational) attacker succeeds the follow-
ing way (motivated by [25]). Using IND-CCA2 and INT-CTXT
axioms, we ﬁrst showed by an inductive technique that the key
K from the trusted party meant for honest A and B are never
corrupted (corruption is inconsistent with the axioms and agent
checks). Then, again with an inductive technique we showed that
N3 is never leaked. Finally, agreement and authentication were
shown. Besides the presented axioms, we also needed that adding
1 and subtracting 1 are inverses of each other, and x − 1 (cid:54)= x.
We needed an additional property, namely, that applying the ﬁrst
projection of a pairing on an honestly generated nonce cannot re-
sult the nonce itself with more than negligible probability. Triples,
quadruples were constructed out of pairs. The detailed proof is
available online at the ﬁrst author’s homepage. We assumed that
A is running the initiator role in all his sessions, and B is running
the responder’s role. There is only one trusted party. They all are
allowed to run any number of multiple parallel sessions with honest
and corrupted agents.
On a note about dynamic corruption, the proof works even if the
protocol allows the release of the key K at a later time. Secrecy
can still be proven until that point, authentication that was carried
out earlier can still be veriﬁed.
13. CONCLUSIONS
In this paper we further expanded the framework proposed by
Bana and Comon-Lundh [7] for computationally complete sym-
bolic adversary. We have shown how key exchange can be han-
dled. Proofs with this technique are computationally sound with-
out the need of any further assumptions such as no bad keys, etc.
that are assumed in other literature. We presented a modular set of
axioms that are computationally sound for implementations using
IND-CCA2, KDM-CCA2 and INT-CTXT secure encryptions re-
spectively. We illustrated their power via simple examples and the
veriﬁcation of an entire protocol.
We are investigating extensions of the general soundness theo-
rem in order to account for unbounded number of sessions and also
to be able to handle indistinguishability properties. More impor-
tantly, we are also researching automation.
14. REFERENCES
[1] P. Adão, G. Bana, J. Herzog, and A. Scedrov. Soundness and
completeness of formal encryption: the cases of key-cycles
and partial information leakage. Journal of Computer
Security, 17(5):737–797, 2009.
[2] M. Backes, A. Malik, and D. Unruh. Computational
soundness without protocol restrictions. In CCS’12, pages
699–711. ACM, 2012.
[3] M. Backes, B. Pﬁtzmann, and M. Waidner. A composable
cryptographic library with nested operations. In CCS’03,
pages 220–230. ACM, 2003.
[4] M. Backes, B. Pﬁtzmann, and M. Waidner. The reactive
simulatability (rsim) framework for asynchronous systems.
Information and Computation, 205(12):1685–1720, 2007.
[5] G. Bana, P. Adão, and H. Sakurada. Computationally
Comlete Symbolic Attacker in Action. In FSTTCS’12,
LIPIcs, pages 546–560. Schloss Dagstuhl, 2012.
[6] G. Bana and H. Comon-Lundh. Towards unconditional
soundness: Computationally complete symbolic attacker.
Available at IACR ePrint Archive, Report 2012/019.
[7] G. Bana and H. Comon-Lundh. Towards unconditional
soundness: Computationally complete symbolic attacker. In
POST’12, LNCS, pages 189–208. Springer, 2012.
[8] G. Bana, K. Hasebe, and M. Okada. Computational
semantics for ﬁrst-order logical analysis of cryptographic
protocols. In Formal to Practical Security, volume 5458 of
LNCS, pages 33–58. Springer, 2009.
[9] G. Barthe, B. Grégoire, and S. Zanella Béguelin. Formal
certiﬁcation of code-based cryptographic proofs. In
POPL’09, pages 90–101. ACM, 2009.
[10] G. Barthe, B. Grégoire, and S. Zanella Béguelin. Formal
certiﬁcation of code-based cryptographic proofs. In POPL,
pages 90–101. ACM, 2009.
[11] M. Bellare, A. Boldyreva, and S. Micali. Public-key
encryption in a multi-user setting. In EUROCRYPT’00,
pages 258–274. Springer, 2000.
[12] M. Bellare, A. Desai, D. Pointcheval, and P. Rogaway.
Relations among notions of security for public-key
encryption schemes. In CRYPTO’98, LNCS. Springer, 1998.
[13] M. Bellare and Ch. Namprempre. Authenticated encryption:
Relations among notions and analysis of the generic
composition paradigm. J. Cryptology, 21(4):469–491, 2008.
[14] B. Blanchet. A computationally sound mechanized prover
for security protocols. IEEE Transactions on Dependable
and Secure Computing, 5(4):193–207, 2008.
[15] J. Camenisch, N. Chandran, and V. Shoup. A public key
encryption scheme secure against key dependent chosen
plaintext and adaptive chosen ciphertext attacks. In
EUROCRYPT’09, LNCS, pages 351–368. Springer, 2009.
[16] H. Comon, C. Marché, and R. Treinen, editors. Constraints
in Computational Logics: Theory and Applications,
International Summer School, CCS’99, LNCS, 2001.
[17] H. Comon-Lundh and V. Cortier. Computational soundness
of observational equivalence. In CCS’08, pages 109–118.
ACM, 2008.
[18] H. Comon-Lundh and V. Cortier. How to prove security of
communication protocols? A discussion on the soundness of
formal models w.r.t. computational ones. In STACS’11,
LIPIcs, pages 29–44. Schloss Dagstuhl, March 2011.
[19] H. Comon-Lundh, V. Cortier, and G. Scerri. Tractable
inference systems: an extension with a deducibility
predicate. In CADE’13, LNAI. Springer, 2013.
[20] V. Cortier and B. Warinschi. Computationally sound,
automated proofs for security protocols. In ESOP’05, LNCS,
pages 157–171, 2005.
[21] A. Datta, A. Derek, J. C. Mitchell, V. Shmatikov, and
M. Turuani. Probabilistic polynomial-time semantics for a
protocol security logic. In ICALP’05, LNCS, pages 16–29.
Springer, 2005.
[22] A. Datta, A. Derek, J. C. Mitchell, and B. Warinschi.
Computationally sound compositional logic for key exchange
protocols. In CSFW ’06, pages 321–334. IEEE, 2006.
[23] Melvin Fitting. An embedding of classical logic in s4. The
Journal of Symbolic Logic, 35(4):529–534, 1970.
[24] R. Küsters and M. Tuengerthal. Computational soundness for
key exchange protocols with symmetric encryption. In
CCS’09, pages 91–100. ACM, 2009.
[25] F. J. Thayer, J. C. Herzog, and J. D. Guttman. Strand spaces:
Proving security protocols correct. Journal of Computer
Security, 7(1):191–230, 1999.
1246