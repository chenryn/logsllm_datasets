[]{#known-issues.html#BZ-1871860}
::: title
**使用 `IPv6_rpfilter`{.literal} 选项的系统启用低网络吞吐量**
:::
`firewalld.conf`{.literal} 文件中启用了 `IPv6_rpfilter`{.literal}
选项的系统当前在高流量场景（如 100-Gbps
链接）中性能不佳和低网络吞吐量。要临时解决这个问题，请禁用
`IPv6_rpfilter`{.literal} 选项。为此，请在
`/etc/firewalld/firewalld.conf`{.literal} 文件中添加以下行：
``` screen
IPv6_rpfilter=no
```
因此，系统性能更好，但也降低了安全性。
([BZ#1871860](https://bugzilla.redhat.com/show_bug.cgi?id=1871860){.link})
:::
::: section
::: titlepage
# []{#known-issues.html#known-issue_kernel}内核 {.title}
:::
[]{#known-issues.html#BZ-1666538}
::: title
**有大量持久内存的系统在引导过程中出现延迟**
:::
有大量持久内存的系统需要很长时间才能引导，因为初始化内存是序列化的。因此，如果
`/etc/fstab`{.literal}
文件中列出了持久的内存文件系统，系统在等待设备可用时可能会超时。要临时解决这个问题，请将
`/etc/systemd/system.conf`{.literal} 文件中的
`DefaultTimeoutStartSec`{.literal} 选项配置为足够大的值。
(BZ#1666538)
[]{#known-issues.html#BZ-1906482}
::: title
**重新载入相同的崩溃扩展可能会导致分段错误**
:::
当您加载已加载的崩溃扩展文件的副本时，可能会触发分段错误。目前，crash
工具会检测是否加载了原始文件。因此，由于崩溃实用程序中同时存在两个相同的文件，发生命名空间冲突，从而触发崩溃实用程序导致分段错误。
您可以通过只载入崩溃扩展文件一次来解决这个问题。因此，在上述场景中不再会出现分段错误。
([BZ#1906482](https://bugzilla.redhat.com/show_bug.cgi?id=1906482){.link})
[]{#known-issues.html#BZ-1793389}
::: title
**在内存热插拔或拔出操作后 vmcore 捕获失败**
:::
执行内存 hot-plug 或 hot-unplug
操作后，会更新包含内存布局信息的设备树。因此，`makedumpfile`{.literal}
实用程序会尝试访问不存在的物理地址。如果以下条件都满足，就会出现问题：
::: itemizedlist
-   IBM Power System 的 little-endian 变体运行 RHEL 8。
-   在系统中启用了 `kdump`{.literal} 或者 `fadump`{.literal} 服务。
:::
因此，如果在内存 hot-plug 或 hot-unplug
操作后触发了内核崩溃，捕获内核将无法保存 `vmcore`{.literal}。
要临时解决这个问题，在 hot-plug 或 hot-unplug 后重启 `kdump`{.literal}
服务：
``` screen
# systemctl restart kdump.service
```
因此，`vmcore`{.literal} 在上述场景中被成功保存。
(BZ#1793389)
[]{#known-issues.html#BZ-1659609}
::: title
**debug 内核无法在 RHEL 8 的崩溃捕获环境中引导**
:::
由于 debug 内核的内存密集型性质，在使用 debug 内核并触发内核 panic
时出现问题。因此，调试内核无法作为捕获内核引导，而是生成一个堆栈追踪。要临时解决这个问题，根据需要增加崩溃内核内存。因此，debug
内核会在崩溃捕获环境中成功引导。
(BZ#1659609)
[]{#known-issues.html#BZ-1940674}
::: title
**在引导时分配崩溃内核内存失败**
:::
在特定的 Ampere Altra 系统中，当在 BIOS 设置中禁用 32
位区域时，在启动期间分配崩溃内核内存会失败。因此，`k`{.literal} dump
服务无法启动。这是因为区域内存碎片低于 4
GB，且没有足够大的片段来容纳崩溃内核内存。
要临时解决这个问题，在 BIOS 中启用 32 位内存区域，如下所示：
::: orderedlist
1.  在您的系统中打开 BIOS 设置。
2.  打开 [**Chipset**]{.strong} 菜单。
3.  在 [**Memory Configuration**]{.strong} 下，启用
    `SSlave 32-bit`{.literal} 选项。
:::
因此，32 位区域中的崩溃内核内存分配可以成功，`kdump`{.literal}
服务可以正常工作。
（BZ#1940674）
[]{#known-issues.html#BZ-2004000}
::: title
**Kdump 在使用默认崩溃内核内存的一些 KVM 虚拟机上会失败**
:::
在有些 KVM 虚拟机上，当为 `kdump`{.literal}
使用默认内存捕获内核崩溃转储时 `，`{.literal} kdump
会失败。因此，崩溃内核显示以下错误：
``` screen
/bin/sh: error while loading shared libraries: libtinfo.so.6: cannot open shared object file: No such file or directory
```
要解决这个问题，请至少增加 `crashkernel=`{.literal} 选项，使其满足 kdump
的大小要求。例如，最终值必须是当前值和 32M 的总和。
如果是 `crashkernel=auto`{.literal} 参数，则为：
::: orderedlist
1.  检查当前的内存大小，并将大小增加到 32M，如下所示：
    ``` screen
    echo $(($(cat /sys/kernel/kexec_crash_size)/1048576+32))M
    ```
2.  将内核 `crashkernel`{.literal} 参数配置为
    `崩溃kernel=x`{.literal}，其中 `x`{.literal} 是增大的大小。
:::
(BZ#2004000)
[]{#known-issues.html#BZ-1920086}
::: title
**QAT 管理器不会离开 LKCF 的备用设备**
:::
Intel® QuickAssist
Technology(QAT)管理器(`qatmgr`{.literal})是一个用户空间进程，默认情况下，它使用系统中的所有
QAT 设备。因此，没有为 Linux 内核加密框架(LKCF)留下的 QAT
设备。不需要解决这种情况，因为此行为是正常的，大多数用户都会使用来自用户空间的加速。
(BZ#1920086)
[]{#known-issues.html#BZ-1947839}
::: title
**`tboot-1.9.12-2`{.literal} 工具会在 RHEL 8 中造成引导失败**
:::
1.9.12-2 版本的 `tboot`{.literal}
实用程序会导致某些具有受信任的平台模块(TPM)2.0
的系统无法以旧模式引导。因此，系统会在尝试从 tboot Grand Unified
Bootloader(GRUB)条目引导后停止。要解决这个问题，请降级为 1.9.10 版本的
`tboot`{.literal}。
(BZ#1947839)
[]{#known-issues.html#BZ-1868526}
::: title
**内核 ACPI 驱动程序报告无法访问 PCIe ECAM 内存区域**
:::
固件提供的高级配置和电源接口（ACPI）表没有在 PCI
总线设备中定义内存区域。因此，在系统引导时会出现以下警告信息：
``` screen
[    2.817152] acpi PNP0A08:00: [Firmware Bug]: ECAM area [mem 0x30000000-0x31ffffff] not reserved in ACPI namespace
[    2.827911] acpi PNP0A08:00: ECAM at [mem 0x30000000-0x31ffffff] for [bus 00-1f]
```
但是，内核仍然可以访问 `0x30000000-0x31ffff`{.literal}
内存区域，并可以正确地将该内存区域分配给 PCI
增强配置访问机制(ECAM)。您可以通过以下输出通过 256 字节偏移访问 PCIe
配置空间来验证 PCI 是正常工作的：
``` screen
03:00.0 Non-Volatile memory controller: Sandisk Corp WD Black 2018/PC SN720 NVMe SSD (prog-if 02 [NVM Express])
 ...
        Capabilities: [900 v1] L1 PM Substates
                L1SubCap: PCI-PM_L1.2- PCI-PM_L1.1- ASPM_L1.2+ ASPM_L1.1- L1_PM_Substates+
                          PortCommonModeRestoreTime=255us PortTPowerOnTime=10us
                L1SubCtl1: PCI-PM_L1.2- PCI-PM_L1.1- ASPM_L1.2- ASPM_L1.1-
                           T_CommonMode=0us LTR1.2_Threshold=0ns
                L1SubCtl2: T_PwrOn=10us
```
因此，您可以忽略警告信息。
有关此问题的更多信息，请参阅 [\"Firmware
错误：在系统引导](https://access.redhat.com/solutions/5428671){.link}
解决方案中，M 区域 `mem 0x30000000-0x31ffffff`{.literal} 未保留在 ACPI
命名空间中\"。
(BZ#1868526)
[]{#known-issues.html#BZ-1609288}
::: title
**`tuned-adm profile powerave`{.literal} 命令会导致系统变得无响应**
:::
执行 `tuned-adm 配置集 powersave`{.literal} 命令会导致 Penguin Valkyrie
2000 2-socket 系统具有较旧
Thunderx(CN88x)处理器的无响应状态。因此，需要重启系统以便恢复工作。要临时解决这个问题，如果您的系统符合上述说明，请避免使用
`powersave`{.literal} 配置集。
(BZ#1609288)
[]{#known-issues.html#BZ-1654962}
::: title
**使用 `irqpoll`{.literal} 会导致 `vmcore`{.literal} 生成失败**
:::
由于在 Amazon Web Services(AWS)云平台上运行的 64 位 ARM 架构中的 thenvme
`驱动程序`{.literal} 存在问题，当您向第一个内核提供 `irqpoll`{.literal}
内核命令行参数时，会导致 `vmcore`{.literal}
生成失败。因此，在内核崩溃时，不会在 `/var/crash/`{.literal} 目录中转储
`vmcore`{.literal} 文件。要临时解决这个问题：
::: orderedlist
1.  将 `irqpoll`{.literal} 附加到`/etc/sysconfig/kdump`{.literal}
    文件中的`KDUMP_COMMANDLINE_REMOVE`{.literal}。
    ``` screen
    KDUMP_COMMANDLINE_REMOVE="hugepages hugepagesz slub_debug quiet log_buf_len swiotlb"
    ```
2.  从 `/etc/sysconfig/kdump`{.literal} 文件中的
    `KDUMP_COMMANDLINE_APPEND`{.literal} 中删除 `irqpoll`{.literal}。
    ``` screen
    KDUMP_COMMANDLINE_APPEND="irqpoll nr_cpus=1 reset_devices cgroup_disable=memory udev.children-max=2 panic=10 swiotlb=noforce novmcoredd"
    ```
3.  重启 `kdump`{.literal} 服务：
    ``` screen
    systemctl restart kdump
    ```
:::
因此，第一个内核会正确引导，在内核崩溃时可以捕获 `vmcore`{.literal}
文件。
请注意，`kdump`{.literal} 服务可能会使用大量崩溃内核内存转储
`vmcore`{.literal} 文件。确定捕获内核有足够的内存可用于
`kdump`{.literal} 服务。
有关这个已知问题的详情，请参考 [irqpoll 内核命令行参数可能会导致 vmcore
生成失败](https://access.redhat.com/articles/6562431){.link}。
(BZ#1654962)
[]{#known-issues.html#BZ-1602962}
::: title
**HP NMI 监视器并不总是生成崩溃转储**
:::
在某些情况下，HP NMI watchdog 的 `hpwdt`{.literal} 驱动无法声明一个由
HPE watchdog timer 生成的不可屏蔽中断（NMI），因为 NMI 被
`perfmon`{.literal} 驱动所消耗。
缺少的 NMI 是由以下两个条件之一引发的：
::: orderedlist
1.  Integrated Lights-Out (iLO) 服务器管理软件中的 [**Generate
    NMI**]{.strong} 按钮。这个按钮由用户触发。
2.  `hpwdt`{.literal} watchdog。默认过期会向服务器发送一个 NMI。
:::
在系统无响应时通常会出现这两个序列。在一般情况下，用于这两种情况的 NMI
处理程序调用 `kernel panic()`{.literal} 功能，如果配置了,
`kdump`{.literal} 服务会生成 `vmcore`{.literal} 文件。
由于缺少 NMI，没有调用 `kernel panic()`{.literal} 且不收集
`vmcore`{.literal}。
第一种情况(1.)，如果系统不响应，它会一直处于这个状态。要临时解决这种情况，请使用虚拟
[**Power**]{.strong} 按钮来重置或者启用服务器。
在第二个示例中（2.），缺少的 NMI 之后会在 9
秒后被自动系统恢复（ASR）重置。
HPE Gen9 服务器行以单位数字显示这个问题。Gen10 频率更小。
(BZ#1602962)
[]{#known-issues.html#BZ-1930576}
::: title
**将虚拟功能附加到虚拟机时连接会失败**
:::
使用传奇 `ionic`{.literal}设备驱动程序的 Pensando 网卡会默默地接受 VLAN
标签配置请求，并在将网络虚拟功能(`VF`{.literal})附加到虚拟机(`VM`{.literal})上时尝试配置网络连接。这些网络连接会失败，因为卡的固件还没有支持这个功能。