290.82
27.5
251.69
311.4
17.17
‚Äî
46.81
267.69
170.82
18.25
108.92
16.39
16.26
113.02
Online
2.26
5.09
1.71
2.79
3.11
97.06
5.26
1.75
1.24
4.64
0.59
0.38
3.11
0.63
38.53
74.15
25.03
40.15
45.11
1929.76
48.34
27.73
22.37
39.7
7.10
6.10
40.38
7.90
717.08
1153.23
452.7
687.77
726.81
‚Äî
798.26
489.7
371.77
609.49
109.41
128.43
721.81
120.49
Total
2.26
5.47
2.17
3.36
3.74
97.06
5.93
2.22
1.24
5.01
0.69
0.95
3.74
0.67
38.53
74.57
31.16
40.71
45.75
1929.76
49.02
36.16
22.37
40.02
7.46
6.67
41.01
8.96
717.08
1154
554.26
688.34
727.46
‚Äî
798.94
597.26
371.77
610.25
117.81
129.10
722.45
121.81
CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea
Mike Rosulek and Ni Trieu
ùëõ2
ùëõ1
Protocol
10 Gbps
Running time (seconds)
50 Mbps
1 Mbps
Table 3: Communication cost in MB and running time in seconds of PSI protocols; the sender and receiver set size is ùëõ1 and ùëõ2,
respectively. ‚ÄúSH", ‚Äú1M", and ‚Äú2M" refer to semi-honest, 1-sided malicious and 2-sided malicious protocol, respectively. Cells
with "‚Äî" denote setting not supported or program out of memory.
5.2 Experiments and Evaluation
Experimental Setup. We implement our protocol in C++, and run
our protocol on a single Intel Xeon with 2.30GHz and 256GB RAM.
The parties communicate over a simulated 10Gbps network with
0.2ms round-trip time for LAN setting. We also run all protocols in
WAN setting with 80ms round-trip time and two different network
bandwidths 50 Mbps, and 1 Mbps.
Protocol Evaluation. In the following, we benchmark the state of
the art semi-honest and malicious PSI protocols [11, 16, 29, 36, 42,
43]. We now briefly discuss several protocols not included in our
comparison: The Jarecki-Liu protocol [34] is a malicious-secure,
Session 4C: Private Set Intersection CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea1177Compact and Malicious Private Set Intersection for Small Sets
CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea
DH-based protocol. However, it achieves a weaker ideal functional-
ity where the adversary can choose items adaptively. The recent PSI
protocol of Rindal & Schoppmann [48] is based on silent vector-OLE,
and is extremely efficient for large sets. However, its implementa-
tion is not yet publicly available and its high fixed costs make it
inefficient for small sets (as illustrated in Table 1). The work of Chen
et al. [12] is the state-of-the-art (one-sided) malicious FHE-based
PSI. Its first step is essentially classic DH-PSI, before even doing
any FHE operations. Since our entire protocol is more efficient
than DH-PSI, we expect ours would be much faster than theirs for
small-to-medium-size sets.
We also do not include RSA-based PSI protocols [3, 17], by which
we mean protocols that require at least one RSA exponentiation
per item. RSA elements are 16 √ó (= 4096/256) larger than elliptic
curve (ECC) elements. A simple benchmark on our experimental
hardware (openssl speed rsa4096 ecdhx25519) shows that RSA-
4096 exponentiation is 100√ó slower than ECC exponentiation (even
RSA-2048 was 20√ó slower). Therefore, RSA-based protocols will
always be ‚àº100√ó slower than ours. If they send one RSA value per
item, they will have 16√ó more communication than ours.
We report detailed comparisons in Table 2 and Table 3 for small
set size {27, 28, 29, 210} and large set size ùëõ ‚àà {212, 216, 220}. As ex-
pected, our protocol shows a significant performance improvement
when the set is small.
We note that our poly-DH PSI protocol is very amenable to pre-
computation (by precomputing exponentiation). When reporting
performance of these protocols, we split total running time into
two phases:
‚Ä¢ Offline: operations like generating random pairs (ùëüùëñ, ùëîùëüùëñ), which
can be done without any interaction and before the inputs are
known.
‚Ä¢ Online: everything else, starting when the parties have deter-
mined their inputs.
Bandwidth Comparison. Our polynomial-based protocol requires
the lowest communication among all PSI protocols. The commu-
nication of our polynomial-based protocol is approximately 2√ó
smaller than that of classic DH PSI. Compared to malicious DH-
based PSI protocol [16] (DKT), our protocol shows about 3 ‚àí 4√ó
improvement.
Consider a semi-honest PSI with unequal set size, the commu-
nication cost is (ùëõ1|G| + ùëõ2‚Ñì) bits for the polynomial-based PSI
protocol, and about (ùëõ1 + ùëõ2)|G| + ùëõ2‚Ñì) bits for classic DH-based
PSI. Concretely, for ùëõ1 = 216 and ùëõ2 = 220, the polynomial-based
protocol takes 12.58 MB of communication while classic DH PSI
needs 46.14 MB, a 3.67√ó improvement.
We also compare bandwidth to the state-of-the-art OT-based
semi-honest PSI protocols [11, 36, 42] and malicious PSI proto-
col [43]. Note that [36] (KKRT), [43](PaXoS) are the fastest PSI
protocol to date and [11] (CM) has the fastest in networks with
moderate bandwidth (e.g., 30-100 Mbps) while [42] (SpOT-low) has
the least communication among practical semi-honest protocols.
The communication cost of our protocol is about 3‚àí4.6√ó, 1.4‚àí1.7√ó,
and 3.7 ‚àí 7.8√ó less than that of [36], [42], and [43], respectively.
Runtime Comparison. For small set (e.g ùëõ = 29), our polynomial-
based protocol is faster than all DH-based and OT-based schemes in
both LAN and WAN settings. Starting from ùëõ = 210, our protocol is
slower than the OT-based protocols in LAN setting. However, bench-
marking all protocols in the WAN setting with 1 Mbps network
bandwidth and 80 ms round-trip latency, our protocol shows an
1 ‚àí 3.17√ó faster than others due to the fact that the communication
cost is smallest.
The polynomial-based protocol shows its benefit in the unbal-
anced setting where the sender‚Äôs set size is larger than the receiver‚Äôs
set size (ùëõ2 > ùëõ1). It means that the sender only needs to send the
receiver a short fingerprint ‚Ñì per each item in his set while in
DH-based protocol the sender additional requires to send a group
element per each item. Since the implementation of PaXoS and DKT
does not support to compute a PSI for asymmetric set, we omit to
report their performance costs. Table 3 shows that in most of the
cases the running time of our polynomial-based protocol is faster
than other semi-honest protocols. Consequently, our protocol is
faster than other malicious protocols. For ùëõ1 = 216 and ùëõ2 = 220 in
WAN setting with 1Mpbs bandwidth, the baseline DH protocol runs
in 574.26 seconds, while the polynomial-based protocol requires
117.81 seconds, a factor of 4.9√ó and 3.1√ó improvement, respectively.
A summary of the state of the art (including this work) is pre-
sented in Figure 1 where the running time is measured in the LAN
setting. Our PSI prototocol‚Äôs performance is mostly unaffected by
changing the network bandwidth and latency, due to its extremely
low communication complexity.
Conclusions. For small sets (ùëõ ‚â§ 512) our protocol is the best in
terms of both communication and computation. As we previously
discussed in Section 1, on sets of this size our protocol is less expen-
sive than the base OTs required for OT extension and PSI protocols
that are based on OTs.
ACKNOWLEDGEMENTS. The first author is partially supported
by a Facebook research award. The second author is partially sup-
ported by NSF awards #2031799, #2101052, and #2115075. We are
grateful to the CCS 2021 anonymous reviewers whose feedback
was instrumental in improving several aspects of this paper.
REFERENCES
[1] https://www.imperialviolet.org/2013/12/25/elligator.html.
[2] Michel Abdalla, Mihir Bellare, and Phillip Rogaway. The oracle Diffie-Hellman
assumptions and an analysis of DHIES. In David Naccache, editor, CT-RSA 2001,
volume 2020 of LNCS, pages 143‚Äì158. Springer, Heidelberg, April 2001.
[3] Giuseppe Ateniese, Emiliano De Cristofaro, and Gene Tsudik. (If) size matters:
Size-hiding private set intersection.
In Dario Catalano, Nelly Fazio, Rosario
Gennaro, and Antonio Nicolosi, editors, PKC 2011, volume 6571 of LNCS, pages
156‚Äì173. Springer, Heidelberg, March 2011.
[4] Donald Beaver. Correlated pseudorandomness and the complexity of private
computations. In 28th ACM STOC, pages 479‚Äì488. ACM Press, May 1996.
[5] Mihir Bellare, Viet Tung Hoang, Sriram Keelveedhi, and Phillip Rogaway. Efficient
garbling from a fixed-key blockcipher. In 2013 IEEE Symposium on Security and
Privacy, pages 478‚Äì492. IEEE Computer Society Press, May 2013.
[6] Daniel J. Bernstein, Mike Hamburg, Anna Krasnova, and Tanja Lange. Elligator:
elliptic-curve points indistinguishable from uniform random strings. In Ahmad-
Reza Sadeghi, Virgil D. Gligor, and Moti Yung, editors, ACM CCS 2013, pages
967‚Äì980. ACM Press, November 2013.
[7] Guido Bertoni, Joan Daemen, Micha√´l Peeters, and Gilles Van Assche. On the
indifferentiability of the sponge construction. In Nigel P. Smart, editor, EURO-
CRYPT 2008, volume 4965 of LNCS, pages 181‚Äì197. Springer, Heidelberg, April
2008.
[8] Elette Boyle, Geoffroy Couteau, Niv Gilboa, Yuval Ishai, Lisa Kohl, Peter Rindal,
and Peter Scholl. Efficient two-round OT extension and silent non-interactive
secure computation. In Lorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang,
Session 4C: Private Set Intersection CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea1178CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea
Mike Rosulek and Ni Trieu
and Jonathan Katz, editors, ACM CCS 2019, pages 291‚Äì308. ACM Press, November
2019.
[9] Tatiana Bradley, Sky Faber, and Gene Tsudik. Bounded size-hiding private set
intersection. In Vassilis Zikas and Roberto De Prisco, editors, SCN 16, volume
9841 of LNCS, pages 449‚Äì467. Springer, Heidelberg, August / September 2016.
[10] Andrea Cerulli, Emiliano De Cristofaro, and Claudio Soriente. Nothing refreshes
like a repsi: Reactive private set intersection.
In Bart Preneel and Frederik
Vercauteren, editors, Applied Cryptography and Network Security, pages 280‚Äì300,
Cham, 2018. Springer International Publishing.
[11] Melissa Chase and Peihan Miao. Private set intersection in the internet setting
from lightweight oblivious PRF. In Daniele Micciancio and Thomas Ristenpart,
editors, CRYPTO 2020, Part III, volume 12172 of LNCS, pages 34‚Äì63. Springer,
Heidelberg, August 2020.
[12] Hao Chen, Zhicong Huang, Kim Laine, and Peter Rindal. Labeled PSI from fully
homomorphic encryption with malicious security. In David Lie, Mohammad
Mannan, Michael Backes, and XiaoFeng Wang, editors, ACM CCS 2018, pages
1223‚Äì1237. ACM Press, October 2018.
[13] Chongwon Cho, Dana Dachman-Soled, and Stanislaw Jarecki. Efficient concur-
rent covert computation of string equality and set intersection. In Kazue Sako,
editor, CT-RSA 2016, volume 9610 of LNCS, pages 164‚Äì179. Springer, Heidelberg,
February / March 2016.
[14] Dana Dachman-Soled, Tal Malkin, Mariana Raykova, and Moti Yung. Efficient
robust private set intersection. In Michel Abdalla, David Pointcheval, Pierre-Alain
Fouque, and Damien Vergnaud, editors, ACNS 09, volume 5536 of LNCS, pages
125‚Äì142. Springer, Heidelberg, June 2009.
[15] Emiliano De Cristofaro, Paolo Gasti, and Gene Tsudik. Fast and private computa-
tion of cardinality of set intersection and union. In Josef Pieprzyk, Ahmad-Reza
Sadeghi, and Mark Manulis, editors, CANS 12, volume 7712 of LNCS, pages 218‚Äì
231. Springer, Heidelberg, December 2012.
[16] Emiliano De Cristofaro, Jihye Kim, and Gene Tsudik. Linear-complexity private
set intersection protocols secure in malicious model. In Masayuki Abe, editor,
ASIACRYPT 2010, volume 6477 of LNCS, pages 213‚Äì231. Springer, Heidelberg,
December 2010.
[17] Emiliano De Cristofaro and Gene Tsudik. Practical private set intersection
protocols with linear complexity. In Radu Sion, editor, FC 2010, volume 6052 of
LNCS, pages 143‚Äì159. Springer, Heidelberg, January 2010.
[18] Sumit Kumar Debnath and Ratna Dutta. Secure and efficient private set intersec-
tion cardinality using bloom filter. In Javier Lopez and Chris J. Mitchell, editors,
ISC 2015, volume 9290 of LNCS, pages 209‚Äì226. Springer, Heidelberg, September
2015.
[19] Daniel Demmler, Peter Rindal, Mike Rosulek, and Ni Trieu. Pir-psi: Scaling private
contact discovery. Proceedings on Privacy Enhancing Technologies, 2018(4):159 ‚Äì
178, 2018.
[20] Changyu Dong, Liqun Chen, and Zikai Wen. When private set intersection
meets big data: an efficient and scalable protocol.
In Ahmad-Reza Sadeghi,
Virgil D. Gligor, and Moti Yung, editors, ACM CCS 2013, pages 789‚Äì800. ACM
Press, November 2013.
[21] Michael J. Freedman, Kobbi Nissim, and Benny Pinkas. Efficient private matching
and set intersection. In Christian Cachin and Jan Camenisch, editors, EURO-
CRYPT 2004, volume 3027 of LNCS, pages 1‚Äì19. Springer, Heidelberg, May 2004.
[22] Daniele Friolo, Daniel Masny, and Daniele Venturi. A black-box construction of
fully-simulatable, round-optimal oblivious transfer from strongly uniform key
agreement. In Dennis Hofheinz and Alon Rosen, editors, TCC 2019, Part I, volume
11891 of LNCS, pages 111‚Äì130. Springer, Heidelberg, December 2019.
[23] Gayathri Garimella, Benny Pinkas, Mike Rosulek, Ni Trieu, and Avishay Yanai.
Oblivious key-value stores and amplification for private set intersection. In Tal
Malkin and Chris Peikert, editors, CRYPTO 2021, Part II, volume 12826 of LNCS,
pages 395‚Äì425, Virtual Event, August 2021. Springer, Heidelberg.
[24] Chun Guo, Jonathan Katz, Xiao Wang, and Yu Yu. Efficient and secure multiparty
computation from fixed-key block ciphers. In 2020 IEEE Symposium on Security
and Privacy, pages 825‚Äì841. IEEE Computer Society Press, May 2020.
[25] Carmit Hazay. Oblivious polynomial evaluation and secure set-intersection from
algebraic prfs. J. Cryptol., 31(2):537‚Äì586, April 2018.
[26] Carmit Hazay and Kobbi Nissim. Efficient set operations in the presence of
malicious adversaries.