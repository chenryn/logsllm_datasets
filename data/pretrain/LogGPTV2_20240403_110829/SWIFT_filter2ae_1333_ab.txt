  *   * 
该域内容必须与前一份该帐户对帐单报文域“62a”相同。只有当该报文系某一时期对帐单的第一分页,或对帐单没有分页,这份报文中该域代号才为“60F”。
  * 域61:对帐单细目
列明每笔业务的详情。在报文的容量允许范围内,该域可重复使用,其内容共有九个子域,顺序如下:
  *   * 
  1. 如系通过SWIFT报文收付的金额及其费用,其类型表现为:“Snnn”字母“S”后的三位数字即SWIFT报文格式代号。
  2. 如系通过非SWIFT报文收付的金额及其费用,其类型表现为“Nxxx”字母“N”后的三个字母为下列代码之一所替换以表示该资金收付的理由:
  3.   4. 由本对帐单首次通知开户人的收付金额(该收付发生在帐户行,在发送本对帐单之前未曾通知过开户人),其类型表现为:“Fxxx”。字母“F”后的三个字母必须为适当的代码以表示该借记或贷记的原由(代码同2)。
  5. 
* 域62a:帐面余额(结束余额)
如对帐单没有分页,或某报文是对帐单的最后一个分页(在对帐单由数份报文组成时),在这样的报文中,该域代号为“62F”,其内容为该对帐单结束时的帐面结存的最后余额,其余额必须出现在下期对帐单的域“60F”中。如该报文不是对帐单的最后一个分页,该域代号为“62M”,其内容为过渡帐面余额,其余额必须出现在下一分页的“60M”中。其内容有四个子域,结构同域“60a”。
* 域64:有效余额
如该域列明贷方余额,则为有效余额。如列明借方余额,则开户人须为此支付利息。其内容有四个子域,结构同域“60a”。
**0x02 攻击事件分析**
1\. 整体流程
图 1 整体关系流程
针对越南先锋银行的攻击中,相关恶意代码内置了8家银行的SWIFT CODE,越南银行均在这些银行中设有代理帐户。目前看到的Fake PDF
Reader样本目的不是攻击列表中的这些银行,而是用来删除越南银行与其他家银行间的转帐确认(篡改MT950对帐单)。这样银行的监测系统就不会发现这种不当交易了。
2\. 功能概述
Fake PDF Reader伪装成Foxit reader(福昕PDF阅读器),原始Foxit Reader.exe被重命名为Foxlt
Reader.exe,在银行系统调用Foxit打印pdf时激活,将pdf转换为xml,根据配置文件匹配是否有符合要求的报文,找到匹配的报文修改后转换回pdf并调用原始的FoxitReader打印。并删除临时文件和数据库的符合条件的交易记录。
图 2 关系图
图 3 配置文件格式
3\. 案例:MT950对帐单(PDF)详解
图 18 MT950对帐单(PDF)
上图是MT950对帐单的PDF版本,图中就对帐单的关键报文域进行了对应的解释(黑体字所示),另外蓝色框是Fake PDF
Reader恶意程序需要判断和修改的地方(蓝色字体是相关具体动作的说明)。
下图是正常的PDF对帐单和篡改后的PDF对帐单,其中左图红色底色部分内容,就是攻击者想要删掉帐单记录和需要修改的帐面余额和有效余额。
图 19 正常PDF对帐单(左图),篡改后的PDF对帐单(右图)
4\. 技术细节
Fake PDF Reader分析
图 4 功能流程图
Fake PDF Reader程序来自于Foxit PDF SDK,依赖动态库fpdfsdk.dll。
A、读取配置文件
配置文件使用异或加密,KEY为7C4D5978h。路径为 c:windowstempWRTULMutilps32.dat。
图 5 读取配置文件
B、处理参数
参数个数必须大于等于4个,应该为:“FoxitReader路径”、“/t”、“pdf路径”和“打印机ip”。
C、PDF修改
图 6 PDF修改执行流程
  * PDF转XML:以参数-xml调用了pdf2html库,转换成xml,文件放在临时目录。
图 7 PDF转XML
  *   * 读取xml文件:查找Instance Type and Transmission所在的行,跳过9行,匹配SWIFT消息类型字符串,有FIN 950则进入950消息处理,没有则进入非950消息处理。
  * 950消息处理:匹配Sender字段,查找发报方的SWIFT Code,匹配是否在列表中。符合条件则定位Opening Balance行,并跳过9行,读取Amount数值,转换为Int64。继续跳过2行,匹配是否为Debit,循环读取Opening Balance的所有交易和配置文件中的字符串比较,符合则设置删除标记并对数据做累加操作,继续读取Closing Balance节中的Amount字段,转换为Int64。根据前面累加的数据和此数据对比,平帐后写入数据并设置Debit/Credit标记。完成修改后,新添加1页,重新添加所有行,并删除前面的1页。
  *   * 图 8 恶意代码内部预设的SWIFT COD
  *   * 表 4 恶意代码内部预设的SWIFT CODE对应的具体银行名称
  *   * 非950消息处理:从Sender行开始读取,和配置文件匹配,成功后删除整页。
  * 修复xml中的行的坐标,修复指定行的字体,并修正Closing Avail Bal (Avail Funds)的值。
  * 删除临时文件。
  * 
图 9 删除临时文件
  * XML转PDF。
D、使用原参数调用真正的FoxitReader.exe
图 10 调用真正的FoxitReader
E、失败则调用LogClear
图 11 调用LogClear
F、最后删除临时文件
LogClear分析
图 12 功能流程图
根据传入参数个数进行相关初始化操作,如果有进行初始化操作,如果没有参数则直接开始执行清除操作;
命令参数格式:'-f  -l '
图 13 相关参数格式
进一步进行循环删除文件中记录的内容,根据参数格式化一个文件名称,进行删除消息文件相关记录操作。
文件名格式:%s\%s_%d%.2d%.2d.txt,第一个%s是从配置文件中读取的路径,第二个%s的字符串内容如下,后面的%d依次表示年、月、日。
图 14 读取的相关内容
最后通过sqlcmd.exe 执行数据库操作删除数据库中消息文件相关记录.
图 15 清理错误日志1
图 16 清理错误日志2
图 17 清理graft_history
同源性分析
在本报告中主要就越南先锋银行相关攻击事件、样本展开深入分析,暂不就其他攻击
事件中的同源样本展开详细介绍,本节只简单证明二者之间的存在一定的联系。
关于越南先锋银行、孟加拉国央行和Lazarus组织之间的关系,我们在之后的关联分析报告中会有详细的介绍。
**0x03 总结**
从将恶意程序构造伪装成Foxit
reader(福昕PDF阅读器)到对MT950对帐单PDF文件的解析和精确的篡改等攻击手法,都反映出攻击者对银行内部交易系统和作业流程非常熟悉。
针对越南先锋银行的针对性攻击和之前针对孟加拉国央行等其他银行的攻击之间,并非独立无关的攻击事件,从360追日团队对相关样本同源性分析和其他厂商的研究分析来看,针对越南先锋银行和孟加拉国央行的攻击有可能来自同一个组织,其幕后组织有可能是Operation
Blockbuster所揭秘披露的Lazarus组织。