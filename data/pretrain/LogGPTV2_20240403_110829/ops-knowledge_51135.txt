User: 如何使用Ansible自动化配置和管理大量的服务器？请提供一个示例Playbook。
Assistant: 使用Ansible可以非常方便地自动化配置和管理大量的服务器。以下是一个示例Playbook，用于在多个服务器上安装Nginx：

```
---
- name: Install Nginx
  hosts: webservers
  become: true

  tasks:
    - name: Add Nginx Repository
      apt_repository:
        repo: 'ppa:nginx/stable'
        state: present
      tags: ['apt']

    - name: Install Nginx
      apt:
        name: nginx
        state: latest
      tags: ['apt']

    - name: Start Nginx Service
      service:
        name: nginx
        state: started
        enabled: true
      tags: ['nginx']
```

解释如下：

- `name`：Playbook名称，描述该Playbook将要做什么。
- `hosts`：指定要操作的主机组。
- `become`：使用sudo或root权限来运行任务。
- `tasks`：指定要在主机上执行的任务列表。

接下来，让我们分析这个Playbook的任务：

- 第一个任务通过`apt_repository`模块添加Nginx存储库。
- 第二个任务使用`apt`模块安装最新版本的Nginx。
- 第三个任务使用`service`模块启动Nginx服务，并确保它在服务器启动时自动启动。

要运行这个Playbook，请使用以下命令：

```
ansible-playbook nginx.yml
```

其中`nginx.yml`是Playbook的文件名。通过运行该命令，Ansible将自动在所有Web服务器上安装和配置Nginx。可以使用`ansible`命令来验证：

```
ansible webservers -m shell -a 'systemctl status nginx'
```

使用Ansible可以轻松地自动化配置和管理大量的服务器。这个示例Playbook只是一个简单的例子，你可以根据自己的要求编写更复杂的Playbook。