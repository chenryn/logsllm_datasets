title:Application Driven Network: providing On-Demand Services for Applications
author:Yi Wang and
Dong Lin and
Changtai Li and
Junping Zhang and
Peng Liu and
Chengchen Hu and
Gong Zhang
Application Driven Network: providing On-Demand
Yi Wang†, Dong Lin†, Changtai Li†, Junping Zhang‡,
Services for Applications
Peng Liu‡, Chengchen Hu§, Gong Zhang†
‡Huawei Wireless Technology Lab, China
†Huawei Future Network Theory Lab, Hong Kong
§Xi’an Jiaotong University, China
ABSTRACT
Application Driven Network (ADN) is a new paradigm that
provides on-demand differentiated services for applications.
A physical network in ADN is sliced into various logically
isolated sub-networks. Each network slice can have its own
network architecture and protocol to serve one application
exclusively. ADN enhances the user experience while keep-
ing the resource efﬁciency by further imposing multiplexing
among these logically isolated sub-networks.
CCS Concepts
(cid:15)Networks ! Network design principles;
Keywords
Application Driven Network; NFV; SDN; DiffServ
1.
INTRODUCTION
Traditional resource efﬁcient architecture has become a
barrier to meet the diverse application requirements, and it
is inevitable that the future network should be application
driven. Application diversity leads to the varied resource
requirements. Although the bandwidth of network increases
and the unit cost decreases, current networks are still facing
poor user experience and low application satisfactory.
Bandwidth guarantees can be achieved through static reser-
vations [2], which lead to inefﬁcient utilization of network
resources as the slice of one application cannot be used by
another application. Considering that the average bandwidth
utilization of an application is low and the trafﬁc is bursty
in nature [3], work-conservation manner provides minimum
bandwidth guarantees.
However, applications demand more performance guaran-
tees beyond bandwidth, such as latency, co-ﬂow ﬁnish time.
In reality, there are many applications that the current net-
work can not well supported due to their diverse require-
ments. Thus, we aim to propose a new network paradigm
that:(cid:15) Meets the application requirement efﬁciency while
achieving the resource efﬁciency.
(cid:15) Provides minimum performance guarantees.
Permission to make digital or hard copies of all or part of this work for personal
or classroom use is granted without fee provided that copies are not made or
distributed for proﬁt or commercial advantage and that copies bear this notice
and the full citation on the ﬁrst page. Copyrights for components of this work
owned by others than the author(s) must be honored. Abstracting with credit is
permitted. To copy otherwise, or republish, to post on servers or to redistribute to
lists, requires prior speciﬁc permission and/or a fee. Request permissions from
permissions@acm.org.
SIGCOMM ’16, August 22 - 26, 2016, Florianopolis , Brazil
c⃝ 2016 Copyright held by the owner/author(s). Publication rights licensed to
ACM. ISBN 978-1-4503-4193-6/16/08. . . $15.00
DOI: http://dx.doi.org/10.1145/2934872.2959075
617
Figure 1: The high-level overview of ADN architecture.
(cid:15) Evolves current IP network to provide on-demand
QoS for different applications.
In this paper, we propose Application Driven Network
(ADN), a solution that achieves our goals. ADN proposes to
build networks for applications and provide a logically inde-
pendent network to satisfy the unique requirement of every
application. ADN can be optimized according to the char-
acteristics of various application conﬁgurations while main-
taining the total resources unchanged. It is shown that the
complexity and performance can be improved when the de-
lay requirements of different applications are pre-known [1].
To be more speciﬁc, a physical network in ADN is sliced
into various logically isolated sub-networks. Each network
slice can have its own network architecture, protocol and
serves one application exclusively. ADN enhances the user
experience while keeping the resource efﬁciency by further
imposing multiplexing among these logically isolated sub-
networks. Their weights are dynamically adjusted according
to the running states.
ADN evolves current IP network to provide on-demand
QoS for different applications by mapping the distinct prop-
erties of applications to respective network resources. To
abstract the application requirements on the network, ADN
analyzes the different requirements of different applications
on the network, construct multi-dimensional application ab-
straction model and arrange network resources to satisfy dif-
ferent applications. Existing approaches such as NFV and
network slicing can divide the original uniﬁed and unique
network (such as wireless air interfaces, link bandwidth, com-
puting power, storage spaces) into multiple logical indepen-
Figure 2: The framework and workﬂow of ADN.
dent elements. ADN use this basis to further multiplex the
network resources to meet the application requirements. Based
on the fast/slow neural control theory [4], ADN provides fast
and slow control for network resource with respect to time,
space and value, etc. A slow controller takes slow varying
parameters such as network topology and trafﬁc property as
inputs, and determines the optimal network slicing and op-
erating points. A fast controller conducts real-time measure-
ments over fast varying parameters such as the queues in
switches and link states, and uses Kalman ﬁlter algorithm to
operate each slice at the optimal control point with the mini-
mal cost. With both the fast and slow controllers, the global
network can operate at the optimal control point, fulﬁlling
the services with respect to applications.
2. ARCHITECTURE OVERVIEW
ADN consists of a resource orchestrator for mapping the
application requirement to the network slice, controls for
managing slices, virtualization-capable network devices for
providing logical sub-networks. Figure 1 is an overview of
ADN architecture.
(cid:15) S-Plane abstracts the application requirements of
networks, such as bandwidth, latency, number of
connections, and allocates appropriate sub-networks
for applications. In the running time, S-Plane
measures the states of sub-networks and adjusts
resources among slices dynamically.
(cid:15) C-Plane controls one sub-network to provide the
speciﬁc service for the associated application. Similar
to the SDN controller, C-Plane is a local controller
with the capability to react the sub-network changes
rapidly.
(cid:15) D-Plane is the abstraction of network devices which
can provide logically independent slices for
applications via network function virtualization.
The framework and workﬂow of ADN are illustrated in
Figure 2. When applications use the network to transfer
information, applications can submit their requirements of
QoS directly or indirectly to the Application Abstractor, which
abstracts the demands to network resources and sends slice
policies to the Global Controller in S-Plane. For applica-
tions running in conventional models, i.e., directly using the
network without requiring QoS speciﬁcally, ADN abstracts
the QoS requirements of applications by measuring and an-
alyzing their trafﬁcs in a runtime.
The global controller receives slice policies from the ap-
plication abstractor and then allocates physical network re-
sources including control plane resources in C-Plane and
618
Figure 3: The framework of ADN demo.
data plane resources in D-Plane to applications. To improve
the network performance, the global controller dynamically
adjusts the weights of slices according to the network run-
ning states which are collected and analyzed from the mea-
surement data.
A local controller manages the network resources in a
slice. It measures the running states of a sub-network and
conduct ﬂow and congestion controls. Given only partial
and local view, the local controller responses to the network
dynamics more rapidly and therefore helps to improve the
performance of applications in the same slice.
NFV plays a critical role in D-Plane providing multiple
network slices which can be dynamically created, modiﬁed,
deleted and multiplexed by the global controller.
3. DEMONSTRATION
In our demo, there are two types of applications with dif-
ferent service level requirements running on the very same
network infrastructure at the same time. The overall band-
width is insufﬁcient yet the bandwidth allocations can be
better arranged given the different natures of the applica-
tions. As illustrated in Figure 3, the Live Stream application
requires high bandwidth and is sensitive to the network la-
tency. On the contrary, the File Download application is also
bandwidth-hungry yet is tolerant to large network latency.
Bandwidth and latency are the key metrics in ADN. To sat-
isfy both, ADN leverages complex speed limitation function
and queue scheduling on switches to achieve a performance-
guaranteed and multiplexing-capable isolation among net-
work slices.
In our demo, each application is assigned to a network
slice, while the controller monitors the network dynamics
and allocates bandwidths among different slices accordingly.
The demo shows the progress that ADN adapts to the ap-
plications’ requirements and allocations the network band-
width dynamically such that the user experiences of all ap-
plications are maximized.
4. REFERENCES
[1] M. Alizadeh, S. Yang, M. Sharif, et al. pfabric: Minimal
near-optimal datacenter transport. SIGCOMM, 2013.
[2] H. Ballani, P. Costa, et al. Towards predictable
datacenter networks. In SIGCOMM, 2011.
[3] T. Benson, A. Akella, et al. Network trafﬁc
characteristics of data centers in the wild. In
SIGCOMM, 2010.
[4] J. C. Doyle and M. Csete. Architecture, Constraints,
and Behavior. PNAS, 2011.
Local ControllerApplicationAbstractorS-PlaneGlobal ControllerC-PlaneLocal ControllerClientNetwork Slice 2Network Slice 1D-PlaneClientApp-SliceMappingApp-SliceMappingSlicePoliciesSlicesManagementManagingOne SliceMeasurementMeasurementApplicationRequirement123456123Live StreamLive StreamFile DownloadControllers