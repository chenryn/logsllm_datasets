title:The Return of Eratosthenes: Secure Generation of RSA Moduli using
Distributed Sieving
author:Cyprien Delpech de Saint Guilhem and
Eleftheria Makri and
Dragos Rotaru and
Titouan Tanguy
Secure Generation of RSA Moduli using Distributed Sieving
The return of Eratosthenes:
Cyprien Delpech de Saint Guilhem
imec-COSIC, KU Leuven
Belgium
PI:EMAIL
Dragos Rotaru
imec-COSIC, KU Leuven
Belgium
Cape Privacy
New York, United States
PI:EMAIL
Eleftheria Makri
imec-COSIC, KU Leuven
Belgium
ABRR, Saxion University of Applied Sciences
The Netherlands
PI:EMAIL
Titouan Tanguy
imec-COSIC, KU Leuven
Belgium
PI:EMAIL
ABSTRACT
Secure multiparty generation of an RSA biprime is a challenging task,
which increasingly receives attention, due to the numerous privacy-
preserving applications that require it. In this work, we construct a
new protocol for the RSA biprime generation task, secure against a
malicious adversary, who can corrupt any subset of protocol partic-
ipants. Our protocol is designed with generic multiparty computa-
tion (MPC), making it both platform-independent and allowing for
weaker security models to be assumed (e.g., honest majority), should
the application scenario require it. By carefully “postponing” the
check of possible inconsistencies in the shares provided by malicious
adversaries, we achieve noteworthy efficiency improvements. Con-
cretely, we are able to produce additive sharings of the prime candi-
dates, from multiplicative sharings via a semi-honest multiplication,
without degrading the overall (active) security of our protocol. This
is the core of our sieving technique, increasing the probability of our
protocol sampling a biprime. Similarly, we perform the first biprimal-
ity test, requiring several repetitions, without checking input share
consistency, and perform the more costly consistency check only in
case of success of the Jacobi symbol based biprimality test. Moreover,
we propose a protocol to convert an additive sharing over a ring, into
an additive sharing over the integers. Besides being a necessary sub-
protocol for the RSA biprime generation, this conversion protocol
is of independent interest. The cost analysis of our protocol demon-
stratedthatourapproachimprovesthecurrentstate-of-the-art(Chen
et al.—Crypto 2020), in terms of communication efficiency. Con-
cretely, for the two-party case with malicious security, and primes of
2048 bits, our protocol improves communication by a factor of ∼37.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or
a fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484754
CCS CONCEPTS
• Theory of computation → Cryptographic protocols.
KEYWORDS
RSA modulus, Multiparty Computation, Active Security
ACM Reference Format:
Cyprien Delpech de Saint Guilhem, Eleftheria Makri, Dragos Rotaru, &
Titouan Tanguy. 2021. The return of Eratosthenes: Secure Generation of RSA
Moduli using Distributed Sieving. In Proceedings of the 2021 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’21), November
15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA, 16
pages. https://doi.org/10.1145/3460120.3484754
1 INTRODUCTION
An RSA modulus, also known as a biprime, and usually denoted by the
variable 𝑁 ,referstoanumberwhichistheproductoftwoprimenum-
bers, usually denoted by 𝑝 and 𝑞; thus, 𝑁 =𝑝·𝑞. The RSA modulus is a
crucial component of the first public key encryption scheme, the RSA
scheme [33], as well as many other public key encryption schemes
that followed it. The security of the RSA cryptosystem is based on the
hardness of factoring, and as such 𝑁 is part of the public key of the
RSA scheme [33], while its factors 𝑝 and 𝑞 determine the secret key.
Specifically, the security of the cryptosystem is determined by the
bit-length of the biprime, and therefore efficient methods to generate
(large) biprimes have been of interest since RSA was devised.
Initially, the generation of the parameters of a public key cryp-
tosystem(includingthebiprimegeneration)wasassignedtoatrusted
third party. However, there are applications were no single party can
be entrusted with such a task, which gave rise to the study of dis-
tributed biprime generation. The problem of secure distributed RSA
modulus generation is being studied since 1997, when the seminal
work of Boneh and Franklin [5] appeared. After the initial interest
in the problem, in the years around the work of Boneh and Franklin,
with literature attempting to improve the efficiency, or security as-
pects of the original work, the subject ceased being studied for about
a decade. Then, again, during the last decade the interest on secure
Session 2D: Secure Multiparty Computation CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea594distributed RSA modulus generation is increasing. This is due to
the sheer number of recent applications, requiring distributed RSA
modulus generation.
Traditionally, the study of distributed RSA modulus generation
has found numerous applications in threshold cryptography [13–
15, 19, 32]. Nowadays, blockchain applications requiring permis-
sionless consensus, also need to deploy the techniques of thresh-
old cryptography, which explains the recently revived interest in
RSA modulus generation. A concrete example of applications for
the RSA modulus generation in the context of decentralized sys-
tems and consensus protocols is that of Verifiable Delay Functions
(VDFs) [4, 30, 39]. Threshold cryptography requiring the distributed
generation of an RSA modulus is now expanding beyond academia,
as companies and foundations (e.g., Unbound, the VDF Alliance, the
Ethereum Foundation, Ligero) are providing services based on top
of these technologies to the public.
1.1 Related Work
The study of secure multiparty RSA modulus generation was ini-
tiated by Boneh and Franklin [5]. Boneh and Franklin [5] devised
a biprimality test to perform the distributed RSA modulus genera-
tion, instead of individually testing the primality of the two prime
factors of 𝑁 . Given that 𝑁 is the public output of their protocol,
this granted them an efficiency advantage, since their expensive
multiparty computations can be computed modulo the public 𝑁 this
way. On the other hand, the biprimality testing approach, requires
that two prime numbers are simultaneously sampled, which leads to
an increased number of iteratively invoking the subroutines of the
protocol, since efficient primality testing is probabilistic in nature.
Trial division, applied individually on each of the prime candidates,
somewhat relaxes the abovementioned performance penalty. The
blueprint of Boneh and Franklin [5], which is also adopted by most
of the follow-up protocols in the literature, consists of three main
steps: (1) pick prime candidates (via trial division); (2) securely mul-
tiply candidates; (3) biprimality testing (followed by the RSA key
generation step, whenever key generation is actually needed).
The Boneh-Franklin protocol was implemented, together with
some newly introduced optimizations by Malkin et al. [29]. Malkin
et al. [29] first deploy a (simpler) Fermat test to check biprimality,
which with low probability introduces false positives. If this sim-
pler test passes, then they deploy the Boneh-Franklin biprimality
test, to eliminate any potential false positives. The most important
optimization proposed by Malkin et al. [29] is a distributed sieving
technique, which results in a 10× improvement in running time for
the generation of a 1024-bit biprime. The distributed sieving ensures
that the candidate primes 𝑝 and 𝑞 are not divisible by the first small
primes, up to a predetermined bound. This is done by each party
randomly selecting multiplicative shares, which are coprime to the
predeterimined bound (and therefore their product is also coprime
to the bound), and then transforming these to additive shares to
proceed with the rest of the protocol.
Frankel et al. [16] were the first to propose a distributed RSA
key generation in the malicious security, honest majority setting.
One of the main tools, devised and used for the RSA key generation
by Frankel et al. [16], is an unconditionally secure multiplication
protocol over the integers. To generate the RSA modulus Frankel et
al. [16] deploy a maliciously secure version of the Boneh-Franklin
biprimality test, and then show how to produce the actual RSA keys:
a more efficient version for small keys, and a less efficient one for
larger keys. Although their tailored protocol is more efficient than
a solution merely deploying a passive to active security compiler, it
still remains inefficient.
presence of a malicious party, who can learn up to𝑝∈Plog(𝑝)/𝑝
Limited to the two-party case, Poupard and Stern [31] propose a
maliciously secure protocol for the RSA modulus generation, based
on OT. Although their protocol is less efficient than the Boneh-
Franklin one, it is secure in a more stringent security model, and it
can serve two parties (instead of three that are required by the Boneh-
Franklin protocol), in application scenarios where this is needed.
However, the protocol suffers from a leakage of information in the
bits of the prime factor 𝑝, with P being the set of tested primes.
Another OT-based, two-party protocol for the RSA key generation
(and the RSA modulus generation) was proposed by Gilboa [20].
Unlike Poupard and Stern’s solution, Gilboa’s protocol offers only
semi-honest security, but it is more efficient. The well-known OT-
based multiplication protocol of Gilboa, which by now is a classic,
and adaptations thereof are frequently used in the construction of
secure multiparty computation protocols, is also the basis of the RSA
key generation protocol that they devised.
Algesheimer et al. [1] perfom a distributed primality test, unlike
the protocol of Boneh and Franklin [5] that was based on biprimality
testing. Specifically, they show how to perform a distributed version
oftheMiller-Rabinprimalitytest,anddoproceedwiththemultiparty
computations modulo a secret prime, that the previous work avoided.
To achieve this, they deploy three types of secret sharing schemes,
and show how to convert shares from one to another. Moreover,
their constructions allow the generation of an RSA modulus, whose
prime factors are actually safe primes. Both the work of Algesheimer
et al. [1] and the work of Boneh and Franklin [5] are proven secure
in the semi-honest, honest majority security model, and require
minimally three parties.
Damgård and Mikkelsen [12] were the first to efficiently achieve
malicious security for the task of distributed RSA modulus genera-
tion, though in the honest majority setting. In fact, the first to adjust
the protocol of Boneh and Franklin to the active security model were
Frankel et al. [16], but malicious security was achieved at the cost of
protocol efficiency. The work of Damgård and Mikkelsen [12] can be
seen as a hybrid of two of its predecessors [1, 5], trying to combine
the most efficient aspects of both of these approaches. Concretely,
by using replicated secret sharing they can do both multiplications,
and the modular reductions suggested by Algesheimer et al. [1],
which require the protocol to work over the integers (instead of a
field), without having to convert between different secret sharing
schemes. The downside of the Damgård and Mikkelsen’s [12] pro-
tocol is that it does not scale well in the number of parties, and it is
not straightforward to extend to more than three parties.
Hazay et al. [22, 23] deploy partially homomorphic encryption
to complete the two first steps of the Boneh and Franklin blueprint,
and proceed to step 3 with biprimality testing. They achieve the first
general 𝑛-party protocol (i.e., for any 𝑛 ≥ 2) in the active security
model, and the dishonest majority setting. Active security in this
setting is achieved by deploying tailored zero-knowledge proofs.
Hazay et al. [22, 23] build upon Gilboa’s technique [20] achieving
Session 2D: Secure Multiparty Computation CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea595two-party actively secure RSA modulus generation à la Boneh and
Franklin, but they are the first to adapt also the trial division step
of the protocol, achieving therefore a significant efficiency boost.
For the multiplication step that follows to compute the candidate
biprime, Hazay et al. [22, 23] carefully use a combination of the
Paillier and ElGamal encryption schemes.
In the two party setting, Frederiksen et al. [17] propose an OT-
based, maliciously secure protocol for the distributed RSA modulus
generation, which is more efficient than previous work. The effi-
ciency improvement is due to one single compact zero-knowledge
argument of correct behavior at the end of the protocol, instead of
the numerous (one per message) tailored zero-knowledge proofs re-
quired in the protocol of Hazay et al. [22, 23]. The maliciously secure
protocol of Frederiksen et al. [17] is provably secure, and concretely
efficient, as shown by the authors with an implementation. How-
ever, it suffers from some information leakage at the trial division
step. This leakage is formalized in the functionality, and taken into
account in the security proof, and it is argued to be justified both in
theory and in practice, as leakage of a few bits of the prime factors
should not be able to break the RSA assumption, and therefore also
not the security of the protocol. Nevertheless, in the malicious case,
this leakage may lead to selective failure attacks, which also impacts
the efficiency of the protocol.
Recently, Chen et al. [7] successfully ovecame the limitations of
the proposal of Frederiksen et al. [17]. Benefiting from the efficiency
advantages that a CRT number representation allows, Chen et al. [7]
devise a maliciously secure 𝑛-party protocol, tolerating 𝑛−1 (active)
corruptions, while avoiding both the deployment of expensive cryp-
tographic primitives, and the information leakage incurred by the
protocol of Frederiksen et al. [17]. Leveraging the CRT representa-
tion, Chen et al. [7] not only gain efficiency from the linearity of the
smaller in bit-size computations that can be performed locally, but
they also constructively sample their primes such that they are not
divisible by the small primes used for the CRT representation. This