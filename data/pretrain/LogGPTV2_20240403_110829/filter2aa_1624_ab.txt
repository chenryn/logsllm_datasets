# 6120 – Lesson 2
- **Store critical data on-chip if possible:**
  - This makes it harder to probe the hardware during initial investigations.
  - It provides faster access to data.
  - It may result in a smaller current swing.

# 6120 – Lesson 3
- **Use a fast serial bus:**
  - Simple power analysis becomes more difficult at higher speeds due to capacitive and inductive effects.
  - Higher speeds can make attacks inaccessible to the simple tools demonstrated.

# Titan – Hardware
- **Mechanical Components:**
  - Motor-driven acme screw to unblock the bolt.
- **Microcontroller:**
  - STM8S105K6 MCU running at 2 MHz.
- **Keypad:**
  - Identical to the one used in the S&G 6120.
  - Uses a resistor ladder.
  - Powered by a 9V alkaline battery.
- **Design and Production:**
  - Designed around 2010 and currently in production.
  - UL listed as a Type 1 high-security electronic lock.

# Titan – MCU
- **Keypad Emulation:**
  - The keypad is a resistor ladder connected to a voltage divider with a 20.0 kΩ source leg.
  - For example, the key "3" corresponds to a resistance of 7.68 kΩ, which translates to 1.40 V.
  - The lock tolerates a voltage error of ±0.10 V.
  - Debounce time is approximately 30 ms.
  - Key interval is about 120 ms.

# Titan – Timing Attack
- **Power Analysis for Timing Markers:**
  - Monitor the current drawn.
  - Current consumption increases about 29.6 ms before the keycode comparison completes.
  - This rise serves as a reference point for timing, with a jitter of about ±10 μs.
  - Keycode comparison takes between 200-300 μs, depending on the number of digits before a mismatch.
  - At the end of the comparison, the current rises by another 275 A.
  - Success or failure is determined based on the delay of this rise relative to the reference point (approximately 29.6 ms earlier).
  - Each additional correct digit adds a 28 μs delay.

- **Noise and Oversampling:**
  - Noise sources include ADC sampling jitter, lock clock jitter, ADC noise, and unknown current consumption noise.
  - The timing is tight, and the amplitude difference between noise and signal is small.
  - Oversampling each time delay for each digit multiple times (e.g., 10x oversampling) produces reliable results but increases recovery time.
  - Lower oversampling multipliers are less reliable.

- **Error Detection:**
  - If the average times do not show the expected increase (28 μs) during testing for the next digit, the previous digit's value is likely incorrect.
  - Retry the digit if the time is significantly too early or too late.

- **Attack Algorithm:**
  - Start with a keycode beginning with "0" and five don't-care digits.
  - Watch for timing signs indicating a match or mismatch.
  - If a mismatch is detected, increment the first digit and retry until a match signature (28 μs longer delay) is observed.
  - Repeat the process for the second, third, fourth, and fifth digits.
  - The sixth digit is a special case, requiring brute force (10 possibilities).
  - This reduces the worst-case attempt count from 1,000,000 to as few as 60.

- **Keypad Sequence Comparison:**
  - The entire six-digit keypad sequence is captured before starting the comparison.
  - The entered code is compared one digit at a time to the keycode stored in EEPROM.
  - If a mismatch is found, the loop exits immediately.

# Titan – Lockout Defeat
- **Normal Operation:**
  - Five incorrect codes in a row lead to a 10-minute penalty lockout period.
  - The incorrect code count is tracked in EEPROM.

- **Goals:**
  - Prevent the increment of the failure counter.
  - Reset the failure counter.

- **Method:**
  - Reduce the Vdd below the STM8 brownout voltage (2.7V) before the EEPROM write completes.
  - With the STM8 running and a battery voltage of 9.0V, it takes about 2.7 ms between floating Vbatt and Vdd going below the brownout voltage.
  - This can be reduced to about 600 μs if Vbatt starts at 3.5V and a key on the keypad is held down to increase current drain.
  - To defeat the firmware battery check, reduce the voltage only after the STM8 has been woken up.

# Titan – EEPROM Write Timeline
- **Initial Conditions:**
  - MCU Vdd = 5V
  - MCU clock = 2 MHz
  - Destination in EEPROM has existing data (not 0x00).

- **Timeline:**
  - t ≈ 0: EEPROM erase of destination block begins.
  - t = 0: EEPROM write begins.
  - t = 500 μs: Old data no longer readable; values now return 0x00.
  - t = 2.5 ms: New data starts to be readable.
  - t = 3.0 ms: Earliest time that the MCU will consider the write complete.
  - t = 6.0 ms: Latest time that the MCU will consider the write complete.

# Titan – Normal Wrong Code
- **Sequence:**
  - User finishes entering an incorrect keycode.
  - De-bounce complete; firmware starts comparing the entered keycode to the stored keycode.
  - Firmware finds a mismatch.
  - EEPROM write starts for the "failed attempt" counter.
  - EEPROM block erased; failed-attempt count at 0x00.
  - EEPROM write of new non-zero failed attempt count complete.
  - "Wrong code" buzzer sounds.

# Titan – Lockout Prevented
- **Sequence:**
  - User finishes entering an incorrect keycode.
  - De-bounce complete; firmware starts comparing the entered keycode to the stored keycode.
  - Firmware finds a mismatch.
  - EEPROM write starts for the "failed attempt" counter.
  - EEPROM block erased; failed-attempt count at 0x00.
  - Power removed from the lock.
  - MCU drops below minimum voltage before EEPROM write completes.
  - Invalid-attempt count left at 0x00 (default EEPROM erased value).

# Titan – Lockout Defeat
- **Failure Count:**
  - Stored in EEPROM.
  - EEPROM writes on STM8 are asynchronous.
  - 500 μs to complete if the EEPROM block is already blank.
  - 3 ms to complete if the block has existing data.
  - EEPROM writes become blocking if a second write is attempted before the first finishes.

- **Method:**
  - Cut power to the STM8 after it reveals if a digit in the keycode is valid but before the failure is recorded.
  - This allows for unlimited attempts.

- **Options:**
  - Kill power before the erase-write cycle starts.
  - Kill power after the erase part of the cycle starts but before the new value is written.
  - Erased values in EEPROM are 0x00 in the STM8, which is a valid count: "zero failures".

# Support Hardware – Custom PCB
- **Microammeter:**
  - Low-side current sense for simplicity.
  - Gain: 40 dB.
  - Low-pass filter (second-order, fc=25 kHz).
- **Power Control:**
  - Quickly apply or remove power to/from the lock.
  - Easily switch the lock from a 9V supply to a 3.5V supply.
- **Keypress Simulator:**
  - Use a DAC and buffer to provide voltages that simulate keys being pressed on the keypad.

# Titan – Attack Improvement
- **Automated Code Recovery:**
  - First five digits via timing attack.
  - Sixth digit through brute force (10 attempts).
  - Check if the buzzer line indicates an error beep sequence.
  - Two longish beeps (~0.5 s) indicate a wrong code.
  - No beep indicates a correct code.
  - Every fifth attempt, try a known-wrong keycode and kill the power during the invalid-attempt count EEPROM update to reset the count to 0x00.

# Titan – Lessons
- **Lesson 1:**
  - Use constant-time comparisons to defend against timing attacks.
- **Lesson 2:**
  - Assume failure first.
  - Increment the "failed attempt" counter before key comparison begins.
  - Clear the "failed attempt" count only if the correct code was actually entered.
  - Do not make the erased value of the EEPROM/flash a valid value for the counter (treat 0x00 and/or 0xFF as invalid).
- **Lesson 3:**
  - Run the MCU clock faster to reduce the margin for timing attacks.
  - Be cautious that a faster MCU clock does not lead to the emission of other stronger signals.

# Are There Better Locks? Yes!
- **FF-L-2740B Federal Specification:**
  - GSA-approved locks for securing material classified up to Top Secret.
  - Mandates significantly better design:
    - Internal power source (no power analysis).
    - Resistance to various attacks for at least 20 man-hours.
    - Approval revoked if design is found vulnerable.

# Disclosure
- **First Contact Attempt:**
  - February 2016.
- **Continued Attempts:**
  - Through various channels over the following months.
  - No useful response received.

# References
1. Gun safe analysis: [http://gunsafereviewsguy.com/](http://gunsafereviewsguy.com/)
2. “Safes and Containers: Insecurity Design Excellence” by Tobias, Fiddler, and Bluzmanis. DEF CON 20.
3. “Safe to Armed in Seconds: A Study of Epic Fails of Popular Gun Safes” by Deviant Ollam Cluebat Quartermaster. DEF CON 19.
4. “Hacking smart safes” by Salazar and Petro. DEF CON 23.
5. DoD Lock Program: [http://www.navfac.navy.mil/navfac_worldwide/specialty_centers/exwc/products_and_services/capital_improvements/dod_lock.html](http://www.navfac.navy.mil/navfac_worldwide/specialty_centers/exwc/products_and_services/capital_improvements/dod_lock.html)
6. Hat-tip to Dave (EEVblog) for his video: [https://www.youtube.com/watch?v=mdnHHNeesPE](https://www.youtube.com/watch?v=mdnHHNeesPE)