6120 – Lesson 2 
• Store critical data on-chip if possible 
– Harder to probe when initially investigating 
hardware 
– Faster access to data 
– Possibly smaller current swing 
6120 – Lesson 3 
• Use a fast serial bus 
– Simple power analysis is harder at higher speeds 
due to capacitive and inductive effects 
– Higher speeds could make attack inaccessible to 
the simple tools shown in the demo 
Titan – Hardware 
• Motor-driven acme screw to unblock bolt 
• STM8S105K6 MCU runs at 2 MHz 
• Keypad identical to one with S&G 6120 
– Resistor ladder 
– 9v alkaline battery  
• Designed c.a. 2010, currently in production 
• UL listed Type 1 high-security electronic lock 
Titan – MCU 
Titan – Keypad emulation 
• Keypad is resistor ladder hooked to voltage 
divider with a 20.0 k source leg 
– e.g., “3” is 7.68 k 
• Simulate by sending the voltage that the 
divider would produce for a given key 
– e.g., 7.68 k is 1.40 V 
• Lock tolerates voltage error of ±0.10 V 
• Debounce time ~30 ms 
• Key interval ~120 ms 
Titan – Timing attack 
Current 
Time 
Current 
Time 
Digit wrong 
Digit correct 
t=0 
Titan – Timing attack 
• Power analysis for timing markers 
– Watch current drawn 
• Current consumption jumps about 29.6 ms before keycode 
comparison completes 
– Use this rise as a reference point for timing 
– Reasonably stable time reference (jitter about ±10 s)  
• Keycode comparison takes about 200-300 s 
– Depends on how many digits before mismatch 
• At end of keycode comparison, current rises another 275 
A 
– Determine success/failure based on delay of this rise relative to 
reference point ≈29.6 ms earlier 
– 28 s more delay per additional correct digit 
Titan – Timing attack 
• It’s like in the movies where they get one digit 
of the electronic lock’s code at a time 
– …and the others are all changing rapidly 
Image: The Thomas Crown Affair (1999) 
Titan – Timing attack 
•
Noise 
– Jitter in ADC sampling times 
– Jitter in lock clock 
– Noise from the ADC itself 
– Noise of unknown origin in current consumption 
– Timing is very tight and amplitude difference between noise and signal is very 
small 
•
Oversample 
– Sample each time delay for each digit multiple times 
– 10x oversampling produces very reliable results 
– Adds significantly to recovery time 
– Will work with lower oversampling multiplier but less reliable 
•
Detect errors 
– If average times aren’t the expected amount longer (28 s) during testing for 
the next digit, the previous digit’s value is probably wrong, so go back 
– If the time for a digit is way too early or too late, retry it 
Titan – Timing attack 
• Attack algorithm: 
– Try keycode starting with 0 
• Remaining five key digits don’t-care 
– Watch for timing signs showing trial digit match/mismatch  
– If mismatch, try again with keycode starting with 1 
• Retry with increasingly high digit values (2, 3, 4, etc.) until “match” 
signature encountered (i.e., 28 s longer delay) 
– Once first digit in keycode discovered, repeat for second, 
third, fourth, fifth digit 
– Sixth digit is a special case (brute force the 10 possibilities) 
• Reduces worst-case attempt count from 1,000,000 to 
as few as 60 
Titan – Timing attack 
• Entire six-digit keypad sequence is captured 
before starting comparison 
• Entered code is compared one digit at a time 
to the keycode stored in EEPROM 
• If digit in entered keycode sequence doesn’t 
match, exits loop immediately 
Titan – Lockout defeat 
• Normally, 5 incorrect codes in a row leads to a 
10-minute penalty lockout period 
• Incorrect code count tracked in EEPROM 
• One of two goals: 
– Prevent increment of failure counter, or: 
– Be able to reset failure counter 
Titan – Lockout defeat 
• Goal is to get Vdd below STM8 brownout voltage 
(2.7v) before the EEPROM write has completed 
• If STM8 is running (not halted), and the battery 
voltage (Vbatt) is 9.0v, roughly 2.7 ms elapse 
between floating Vbatt and Vdd going below the 
STM8 brownout voltage 
• Can be reduced to about 600 s if Vbatt starts at 
3.5v and a key on keypad is held down (to 
increase current drain) 
• To defeat the FW battery check, voltage must be 
reduced only after the STM8 has been woken up 
Titan – EEPROM write timeline 
EEPROM erase of 
destination block begins 
t≈0 
EEPROM write begins 
t=0 
Old data no longer readable; 
values now all return 0x00 
t=500 s 
Earliest time that 
MCU will consider 
write “complete” 
t=3.0 ms 
New data starts to be 
readable 
t=2.5 ms 
Time 
Initial conditions: 
MCU Vdd = 5v 
MCU clock = 2 MHz 
Destination in EEPROM has existing data (i.e., not 0x00) 
How EEPROM in STM8 behaves after starting a byte-size write 
Latest time that MCU will 
consider write “complete” 
t=6.0 ms 
Titan – Normal wrong code 
User finishes 
entering 
incorrect 
keycode 
Debounce complete; 
FW starts comparing entered 
keycode to stored keycode 
FW finds mismatch 
between entered 
keycode and 
stored keycode 
EEPROM write starts for 
“failed attempt” counter 
EEPROM block erased; 
failed-attempt count at 
0x00 
EEPROM write of new 
non-zero failed attempt 
count complete 
“Wrong code” 
buzzer sounds 
Time 
Titan – Lockout prevented 
User finishes 
entering 
incorrect 
keycode 
Debounce complete; 
FW starts comparing entered 
keycode to stored keycode 
FW finds mismatch 
between entered 
keycode and 
stored keycode 
EEPROM write starts for 
“failed attempt” counter 
EEPROM block erased; 
failed-attempt count at 
0x00 
Time 
Remove power 
from lock 
MCU drops below minimum 
voltage before EEPROM write 
completes 
Invalid-attempt count 
left at 0x00 (default 
EEPROM erased 
value) 
Titan – Lockout defeat 
• Failure count stored in EEPROM 
• EEPROM writes on STM8 are asynchronous  
– 500 s to complete if EEPROM block already blank 
– 3 ms to complete if block has existing data 
– EEPROM writes become blocking if second write 
attempted before first finishes 
• If we can cut power to the STM8 after it has 
revealed if a digit in the keycode is valid but 
before the failure has been recorded… 
–  …we get as many attempts as we want! 
Titan – Lockout defeat 
• Either: 
– Kill power before the erase-write cycle starts, or 
– Kill power after the erase part of the cycle starts 
but before the new value is written 
• Usually, erased values in EEPROM are 0xFF 
– Not in the STM8 
– In the STM8, EEPROM erased value is 0x00 
– Thus, erased value is a valid count: “zero failures” 
Titan – Lockout defeat 
• Measured EEPROM behavior when power cut 
– Block already erased 
• 500 s (or less) to commit new data 
– Existing data in block 
• About 500 s from start of cycle until old data no 
longer readable and bytes return 0x00 
• About 3 ms from start of cycle until new data becomes 
persistent 
Support hardware – Custom PCB 
• Microammeter 
– Low-side current sense for simplicity 
– Gain: 40 dB 
– Low-pass filter (second-order, fc=25 kHz) 
• Power control 
– Quickly apply or remove power to/from lock 
– Easily switch lock from 9 V supply to 3.5 V supply 
• Keypress simulator 
– Use DAC and buffer to provide voltages that simulate 
keys being pressed on the keypad 
Titan – Attack improvement 
3.8 
years 
15 
minutes 
Titan – Automated code recovery 
• First five digits via timing attack 
• Sixth digit through brute force (10 attempts) 
– Try keycode ending with each possible value 
– Check if buzzer line indicates error beep sequence 
• Two longish beeps (~0.5 s) = Wrong code 
• No beep = Correct code 
– Every fifth attempt, try a known-wrong keycode and 
kill the power during the invalid-attempt count 
EEPROM update to reset the count to 0x00 
– Go through all ten possibilities this way 
Titan – Lesson 1 
• Use constant-time comparisons 
– Would defend against timing attack 
Titan – Lesson 2 
• Assume failure first 
– Increment “failed attempt” counter before key 
comparison begins, not after 
– Then, clear “failed attempt” count only if the 
correct code was actually entered 
• However… 
– Don’t make the erased value of the EEPROM/flash 
a valid value for the counter (i.e., treat 0x00 
and/or 0xFF as invalid) 
Titan – Lesson 3 
• Run MCU clock faster 
– Less margin for timing attacks 
– Not a total solution, but could increase the 
difficulty of the attack 
– Be careful that a faster MCU clock doesn’t lead to 
emission of other stronger signals 
Are there better locks? Yup! 
• FF-L-2740B federal specification 
– GSA-approved locks 
– For securing material classified up to Top Secret 
• Mandates significantly better design 
– Power source internal (no power analysis) 
– Resistance to various attacks for at least 20 man-
hours 
– Approval revoked if design found vulnerable 
Disclosure 
• First attempt to contact S&G in February 2016 
• Continued attempts through various channels 
over the following months 
• Never got a useful response 
References 
[1] Gun safe analysis http://gunsafereviewsguy.com/ 
[2] “Safes and Containers: Insecurity Design Excellence” Tobias, Fiddler, 
and Bluzmanis. DEF CON 20 
[3] “Safe to Armed in Seconds: A Study of Epic Fails of Popular Gun 
Safes” Deviant Ollam Cluebat Quartermaster. DEF CON 19 
[4] “Hacking smart safes” Salazar and Petro. DEF CON 23 
[5] DoD Lock Program 
http://www.navfac.navy.mil/navfac_worldwide/specialty_centers/e
xwc/products_and_services/capital_improvements/dod_lock.html  
Also, a hat-tip to Dave (EEVblog) for nearly giving me a heart attack 
when I ran across this video of his and thought he beat me to the 
punch: https://www.youtube.com/watch?v=mdnHHNeesPE