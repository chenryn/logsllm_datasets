### Table IV: Memory Layout (Object) Forensics Accuracy

| Instances | Accuracy |
|-----------|----------|
| 30        | 100%     |
| 39        | 100%     |
| 118       | 100%     |
| 57        | 100%     |
| 2         | 100%     |
| 5         | 100%     |
| 10        | 100%     |
| 53        | 100%     |
| 4         | 100%     |

The instances were correctly marked with their types. 

### Memory Pattern Predicates

To locate a specific line rating, such as `0x3FC00000`, the corresponding pattern predicate encodes the offset to get the node’s initial member value, `0x05E50000`, which points to the next node. The second element of each node, for example, `0x04F50000` in the top node, points to the previous node. A more complex second-degree predicate would be:

```
*(*(*(*(candidate addr - 0x1033C0)) + 0x04) + 0x04) == candidate addr - 0x1033C0
```

This can be represented as:

```
A → next → next → previous → previous → A
```

where `A` represents the data structure that stores the line rating `0x3FC00000`.

### Attack Payload and Memory Corruption

The attack payload checks for patterns on identified candidates before corrupting their values. The code searches for specific values in memory and modifies the identified candidate. Table III (not shown here) demonstrates how many hits our implementation finds for individual target power system parameter values in the PowerWorld memory space. The results empirically prove the infeasibility of memory corruption attacks without the use of signature predicates.

The next column in Table III shows how well the signatures dismiss irrelevant candidates and identify true target values. Table IV (above) shows the forensics analysis accuracy for five different EMS software packages. Using code pointer signatures and extracted knowledge about class hierarchies, our implementation was able to correctly recognize the class types of all object instances within the EMS memory.

The payload initializes the OPF algorithm in its corresponding thread. Once it changes the identified memory addresses, it restarts the control loop through the call to the `CreateThread` function within `kernel32.dll`, which is loaded by almost all Windows processes.

### Case Study Demonstration

As a concrete example, we demonstrate how the state of the underlying power system (the same model used in Section IV) is affected once the memory corruption is completed (Figure 8).

- **Before the Corruption (Figure 8a)**: The EMS GUI visualizes the safe state of power system operation, where transmission lines are mostly fully utilized, but no line ratings (capacity constraints) are violated.
- **Optimal Attack Generation**: The optimal attack generation algorithm computes the adversary-optimal values for the line ratings and chooses to:
  - Modify the B1-B3 transmission line to 120 MW from 150 MW.
  - Modify the line rating for the B2-B3 transmission line to 240 MW from 150 MW.
- **After the Corruption (Figure 8b)**: The power system enters an unsafe state after the OPF control algorithm uses the corrupted line ratings, producing wrong control outputs to the power generators.

### Memory Data Corruption in Powertools

In another scenario, the attacker changed the line rating for two branches using the Powertools package (Figure 8c). Similar to the PowerWorld case, the exploit locates the sensitive parameters (line ratings) and modifies them during program execution. As a result, the memory corruption impacted the power flow iterations of DC-OPF performed by the Powertools software, causing it to converge to a different, incorrect value. The attack implementation approach against PowerWorld and Powertools was identical.

### Discussions and Potential Mitigation

Our attack and similar domain-specific memory data corruption attacks can be mitigated through several potential solutions:

1. **Protection of Sensitive Data**:
   - Fine-grained data isolation mechanisms, such as hardware-supported Intel SGX, can protect sensitive data like power system parameters within protected enclave regions.
   - Distinguish between fixed and regularly updated data regions to facilitate lower-overhead protection, such as read-only memory pages for fixed data once they are loaded into memory.

2. **Control Command Verification**:
   - Use controller output verification mechanisms, such as an extended version of TSV [19], to ensure the safety of issued control commands before they reach the actuators.

3. **Intrusion-Tolerant Replication**:
   - Use redundancy, such as N-version programming, by maintaining a redundant controller software that monitors the main controller's output and compares it to its own calculations.

4. **Algorithmic Redundancy**:
   - Develop carefully designed algorithmic tools (e.g., attack-aware optimal dispatch) to provide safe operating regimes and limit the impact of successful attacks.

### Related Work

We review the most related recent work on control system security. Existing solutions to protect the control networks' trusted computing base (TCB) are insufficient due to delayed software patches and frequent discovery of new vulnerabilities. Traditional perimeter security attempts to keep adversaries out of the protected control system entirely, but this approach has limitations.

False data injection (FDI) attacks have been explored, where compromised sensors send corrupted measurements to mislead state estimation procedures. State estimation is a fundamental domain-specific monitoring tool for cyber-physical platforms, but existing real-world solutions do not consider adversarial settings and may miss malicious incidents such as controller code execution attacks.

### Acknowledgements

This work was supported by the NSF grants CNS-1239054, CNS-1453126, CNS-1453046, and the ONR grant N00014-15-1-2741.

### References

[1] Powertools; available at http://hhijazi.github.io/PowerTools/, 2017.
[2] A. Abur and A. Expósito. Power System State Estimation: Theory and Implementation. Marcel Dekker, 2004.
[3] O. Alsac, N. Vempati, B. Stott, and A. Monticelli. Generalized state estimation. IEEE Trans. on Power Systems, 13(3):1069–1075, 1998.
[4] J. Arrillaga and B. Smith. AC-DC Power Systems Analysis. The Institution of Electrical Engineers, 1998.
[5] M. Assante. Confirmation of a Coordinated Attack on the Ukrainian Power Grid. SANS Industrial Control Systems Security Blog, 2016.
[6] D. Bienstock. Electrical transmission system cascades and vulnerability - an operations research viewpoint, volume 22 of MOS-SIAM Series on Optimization. SIAM, 2016.
[7] C. M. Davis and T. J. Overbye. Multiple element contingency screening. Power Systems, IEEE Transactions on, 26(3):1294–1301, 2011.
[8] Department of Energy. Dynamic Line Rating Systems for Transmission Lines; available at https://www.smartgrid.gov/files/SGDP Transmission DLR Topical Report 04-25-14 FINAL.pdf, 2016.
[9] Department of Energy. Improving Efficiency with Dynamic Line Ratings; available at https://www.smartgrid.gov/files/NYPA Improving-Efficiency-Dynamic-Line-Ratings.pdf, 2016.
[10] N. Falliere, L. O. Murchu, and E. Chien. W32.Stuxnet Dossier. Technical report, Symantic Security Response, Oct. 2010.
[11] D. Formby, P. Srinivasan, A. Leonard, J. Rogers, and R. Beyah. Who’s in control of your control system? device fingerprinting for cyber-physical systems. In NDSS, 2016.
[12] J. Glover, M. Sarma, and T. Overbye. Power System Analysis and Design. Cengage Learning, 2011.
[13] V. M. Igure, S. A. Laughter, and R. D. Williams. Security issues in SCADA networks. Computers & Security, 25(7):498–506, 2006.
[14] E. V. Kuz’min and V. A. Sokolov. On construction and verification of PLC-programs. Modelirovanie i Analiz Informatsionnykh Sistem [Modeling and Analysis of Information Systems], 19(4):25–36, 2012.
[15] T. G. Lewis. Critical infrastructure protection in homeland security: defending a networked nation. John Wiley & Sons, 2006.
[16] Z. Lin, X. Zhang, and D. Xu. Automatic reverse engineering of data structures from binary execution. In Proceedings of Information Security Symposium, page 5. CERIAS-Purdue University, 2010.
[17] Y. Liu, P. Ning, and M. K. Reiter. False data injection attacks against state estimation in electric power grids. ACM Transactions on Information and System Security (TISSEC), 14(1):13, 2011.
[18] Z. Lu and Z. Zhang. Bad data identification based on measurement replace and standard residual detection. Automation of Electric Power Systems, 13:011, 2007.
[19] S. McLaughlin, S. Zonouz, D. Pohly, and P. McDaniel. A trusted safety verifier for controller code. In NDSS, 2014.
[20] T. H. Morris, A. K. Srivastava, B. Reaves, K. Pavurapu, S. Abdelwahed, R. Vaughn, W. McGrew, and Y. Dandass. Engineering future cyber-physical energy systems: Challenges, research needs, and roadmap. In North American Power Symposium (NAPS), pages 1–6. IEEE, 2009.
[21] D. G. Peterson. Project Basecamp at S4. http://www.digitalbond.com/2012/01/19/project-basecamp-at-s4/, January 2012.
[22] J. Pollet. Electricity for Free? The Dirty Underbelly of SCADA and Smart Meters. In Black Hat USA, 2010.
[23] F. Rashid. ICS-CERT: Response to cyber incidents against critical infrastructure jumped 52 percent in 2012. Security Week, 10, 2013.
[24] H. Sandberg, S. Amin, and K. H. Johansson. Cyberphysical security in networked control systems: An introduction to the issue. IEEE Control Systems, 35(1):20–23, Feb 2015.
[25] H. Singh and F. Alvarado. Network topology determination using least absolute value state estimation. Power Systems, IEEE Transactions on, 10(3):1159–1165, 1995.
[26] P. Sun, R. Han, M. Zhang, and S. Zonouz. Trace-free memory data structure forensics via past inference and future speculations. In the 32nd Annual Conference on Computer Security Applications, pages 570–582. ACM, 2016.
[27] Y. Sun and T. J. Overbye. Visualizations for power system contingency analysis data. IEEE Trans. on Power Systems, 19(4):1859–66, 2004.
[28] L. Szekeres, M. Payer, T. Wei, and D. Song. SOK: Eternal war in memory. In IEEE Symposium on Security and Privacy, pages 48–62, 2013.
[29] R. Tan, V. Badrinath Krishna, D. K. Yau, and Z. Kalbarczyk. Impact of integrity attacks on real-time pricing in smart grids. In Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, pages 439–450. ACM, 2013.
[30] R. Tan, H. H. Nguyen, E. Y. Foo, X. Dong, D. K. Yau, Z. Kalbarczyk, R. K. Iyer, and H. B. Gooi. Optimal false data injection attack against automatic generation control in power grids. In ACM/IEEE International Conference on Cyber-Physical Systems (ICCPS), pages 1–10, 2016.
[31] U.S. Department of Energy Office of Electricity Delivery and Energy Reliability. North American Electric Reliability Corporation Critical Infrastructure Protection (NERC-CIP), 2015.
[32] S. E. Valentine. PLC code vulnerabilities through SCADA systems. PhD thesis, University of South Carolina, 2013.
[33] Y. Wang, Z. Xu, J. Zhang, L. Xu, H. Wang, and G. Gu. SRID: State relation based intrusion detection for false data injection attacks in SCADA. In European Symposium on Research in Computer Security, pages 401–418. Springer, 2014.
[34] A. J. Wood and B. F. Wollenberg. Power Generation, Operation, and Control. John Wiley & Sons, 2012.
[35] B. Zeng and Y. An. Solving bilevel mixed integer program by reformulations and decomposition. 2014.