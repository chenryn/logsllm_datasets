introduction: an antenna is planted that can read a security code
from a mobile phone screen without a visible-spectrum line of
sight. This story is the basis for the attacker model, which is
illustrated in Figure 1 and characterized in detail in Table I. In
this section, we provide an explanation of the attacker model
and its motivation.
Our attacker model makes the following assumptions:
• The set of symbols displayed on the phone is ﬁnite and
known (i.e., digits 0-9). This assumption holds true of any
information expressed as alphanumeric characters.
• The attacker has access to a proﬁling device sufﬁciently
similar to the target device, which is used to collect
training data for the machine learning classiﬁer.
• The context for the attack is a side-channel analysis setup
for a passive adversary, featuring an antenna that has been
positioned to collect electromagnetic emanations and an
3
Dimension
Message
Message
appearance
Attack
hardware
Device
proﬁling
Computational
resources
Description
A six digit security code; each content digit
can be 0-9 with equal probability.
The standard size, position, and font with
which a security code appears as a push
message during a conventional authentication
procedure. Plain background and standard
brightness are used.
Close ﬁeld antenna and standard SDR; we
assume immediate proximity of the antenna.
We assume full access to the proﬁling device
for the purpose of collecting training data; We
can display an image on the device. We have
sufﬁcient time to collect data from several
sessions. (2-3 hours.)
About 24 hours on a standard laptop, or 1 hour
on a laptop with a GPU for training. For
recovery, once the emage has been captured, a
matter of seconds.
TABLE I: Five-dimensional attacker model: Speciﬁcations of
the attacker model used in our security code attack
intercepted signal of electromagnetic emanation of cables.
For completeness, we discuss the future implications of
the choices made in our setup. Here, we choose to work in
close range and use a near-ﬁeld magnetic probe. We note that
in the future, additional effort can be invested in order to
design the antenna that takes into account the electromagnetic
properties of the leaking device. A broad description of these
characteristics and how to select a matching antenna to the
electromagnetic leakage is discussed in [45]. We assume that
better antennas will relax the constraints of our attacker model
in the future. Some relevant work about designing antennas for
a better electromagnetic setup was done in [59].
We next turn to discuss the “proﬁling stage” of the attack in
more detail. As previously mentioned, if an emage has a low
signal-to-noise ratio (SNR), it is impossible for the attacker
to read the emage with the naked eye. In this case, in order
to interpret the image and recover the screen content, the
attacker must use machine learning to analyze and interpret
the emage. To realize the machine learning classiﬁer, it is
necessary to train it on examples of the signal of the antenna,
which is the “proﬁling” part of our attack. The attacker uses the
proﬁling device to display speciﬁc images with known content
and captures the emages that correspond to these emages.
The collected emages are labeled with the image content and
constitutes the training data set.
Once the model is trained, the attacker will be able to
record emages from the device under attack to derive the secret
information displayed. The process is illustrated in Figure 1.
The success of the attack is measured as the classiﬁcation
accuracy, which quantiﬁes the ability of the classiﬁer to recover
the six-digit security code.
In our experiments, we ﬁrst set up our attack using the same
device at the proﬁling device and the target device. Considering
the same target for proﬁling and attack phases allows us to
understand the danger of the attack under best-case conditions
Fig. 1: Screen gleaning attack. The target emits electro-
magnetic side-band intercepted by an antenna connected to
a software-deﬁned radio (SDR). The leaked information is
collected and reconstructed as a gray-scale image (emage).
From emage, the 6-digit security code is cropped and fed into
a CNN classiﬁer for recognition.
SDR device for signal processing. The antenna picks up
the signal from close range.
• During the attack, the attacker can collect electromagnetic
traces from the target device representing the image
displayed on the screen. The traces are analyzed for the
appearance and identiﬁcation of the pincode.
We now explain the attack in more detail. The device under
attack (Figure 1 upper left) is assumed to be a standard device
(e.g. a phone) and comply with the standards imposed by
EMC regulations laws. The attacker can only rely on unin-
tentional electromagnetic leakage of the device under attack
to reconstruct the image displayed on the victim’s screen.
The leaked electromagnetic signal is characterized by several
physical properties of the screen (e.g., resolution, refresh rate)
and by the technology used for the image rendering (e.g., CRT,
TFT-LCD). The work of Marinov [54] led to the development
of a software toolkit (Figure 1 upper middle) capable of
reconstructing the image from emanations of a video monitor.
This tool, TempestSDR, is publicly available [53] and used as
a starting block of our work.
It is important to understand that the challenges involved
with the capture and interpretation of electromagnetic emana-
tions from the display cable of a mobile phone are different
from those with other devices considered in conventional
TEMPEST studies. Given the advance in video display tech-
nology, modern screens now use less energy and their circuitry
is getting smaller. The resulting electromagnetic coupling is
lowered and the carrying frequency of the electromagnetic
emanation is increased. Additionally, basic design compliance
to guarantee the electromagnetic compatibility of the products
helps to reduce unintentional leakages. These factors make
the exploitation of this signal more complex and degrade the
4
Code: 129891CNN Classiﬁerstudied here would be blocked in the case that video encoding
is applied to the video signal. The vulnerability of encoded
signals needs to be investigated in future work.
The cable, which conveys the electric information, acts
as an undesired antenna and transmits the video signal in
the electromagnetic spectrum in the surrounding area. An
impedance mismatch between the cable and socket on both the
motherboard and the display can enhance the ribbon cable’s
leakage. The difference of impedance is possibly caused by a
dimension mismatch between the socket and the ribbon cable.
The connecting cable is often designed to be smaller than the
socket to avoid possible interference between neighboring con-
nectors. Since each manufacturer is free to use a different offset
for these cables, different phones radiate with varying signal
strengths. Future research should prove the hypothesis that
different phones have different signal strengths radiated, by
means of quantifying the radiated signal. According to [54], the
frequency of the leaked signal is dependent on several screen
properties and can be estimated at a speciﬁc frequency (and
its harmonics) with the following relation: fv = xt × yt × fr,
where xt and yt are respectively height and with of the screen
in pixels and fr is the screen refresh rate in Hertz (Hz).
The principal target in the experiment section is an Apple
iPhone 6s with an IPS LCD screen of size 1334 × 750 pixels.
We also present results using different targets to prove the
portability of the attack. The different targets used are listed
in Table II with the center frequency of the strongest video
signal leakage, the SNR of the leakage as well as relevant
information about
technology and
Operating System version). The SNR is computed at the center
frequency of the signal with a bandwidth of 50 MHz and a
resolution of 25 kHz.
the targets (screen size,
2) Equipment: Figure 2 shows an overview of the setup
with the elements labeled as follows. The antenna we use is
a passive Langer RF-R 400 magnetic probe (A). The target
is an iPhone 6s (B). The signal from the probe is ampliﬁed
with a Minicircuits ZKL-2 ampliﬁer (C) and digitized with
a Software-Deﬁned Radio (SDR), an Ettus X310 (D) with a
UBX-160 daughter-board. The signal acquired by the SDR is
then interpreted with TempestSDR [53], an open-source tool
capable of reconstructing an image from the display by the
obtained sequence of electromagnetic leakages [54].
3) Positioning and Parameters: We use SCA equipment to
show a proof of concept of this attack because the parameters
and positioning settings are close in the two contexts. Nonethe-
less, using more specialized equipment for TEMPEST attacks
may achieve better results. The magnetic probe is placed on
top of the target, at a close distance (< 1cm). The best position
and distance of the probe from the target is manually optimized
to observe the best possible signal to noise ratio (SNR).
TempestSDR has a number of parameters to conﬁgure the
SDR and to recover the image from the signal. The SDR has
the following parameters: center frequency, bandwidth, and
sampling rate. The bandwidth and sampling rate are ﬁxed to
12.5 MHz and 25 M samples per second respectively. The SDR
captures a bandwidth of 12.5 MHz around the adjustable center
frequency. We adjust the center frequency to determine the
best SNR. The parameters to recover an image from a signal
are: height and width in pixels and refresh rate in frames per
Fig. 2: Measurement setup. (A) near-ﬁeld probe, (B) targeted
phone displaying a security code, (C) power ampliﬁer, and (D)
the software-deﬁned radio.
for training data collection. Later, we extend the attack to using
two different devices. We consider a device of the same make
and model to collect data, and also the situation in which the
proﬁling device is another phone altogether.
We close this section by explicitly summarizing the differ-
ence between our attack model and those previously studied
in the literature. Because of the speciﬁc challenges of mobile
phones discussed above, the types of attacks that are successful
are not the same as the attacks previously discussed in the
literature for other devices. While the TEMPEST technique has
been known for decades, there have been no demonstrations of
it on mobile devices. The attack model for mobile phones until
now has assumed the exploitation of reﬂections of a visible-
spectrum signal, which means that the information is supposed
to be visually accessible to humans [6], [8]. Other attack setups
exploiting electromagnetic side-band have the goal to do key
recovery from cryptographic implementations running on the
phone [29]. Our work is different as it shows for the ﬁrst
time the threat of TEMPEST on a range of mobile phones for
a (machine learning-assisted) adversary that can extract the
screen content that could appear incomprehensible to humans.
In Section VI, we will provide additional discussion of the
attacker model, describing how future work can build on and
extend it. We emphasize that the attack that we present in this
section is important because it reveals the danger in anticipa-
tion of the development of more sophisticated attackers.
IV. ATTACK SETUP
A. Measurement Setup
1) Target: A TEMPEST attack can potentially be per-
formed on any communication device, whether mechanical or
electrical, as long as the signal involved for the communication
can be intercepted by a third party using unconventional
means. It is non-trivial to deﬁne such a means, and also the
cause of the communication leakage, because this leak has not
been designed. Leaks have been shown in the literature to be
of several forms linked to the physically inherent properties of
the communication signal.
Our work focuses on electronic personal mobile devices
leaking an analogue video signal as electromagnetic emana-
tion. The signal leaks from the ribbon cable that connects the
graphical computing unit to the screen. Note that the attack we
5
Phone
iPhone 6s
iPhone 6-A
iPhone 6-B
iPhone 6-C
Honor 6X
Samsung Galaxy A3
Leakage Center Frequency
295 MHz
105 MHz
105 MHz
105 MHz
465 MHz
295 MHz
SNR
33.4dB
25.0dB
26.8dB
24.9dB
36.6dB
25.9dB
Screen Technology
OS
IPS LCD
IPS LCD
IPS LCD
IPS LCD
IPS LCD
AMOLED
IOS 10.2.1
IOS 12.4.8
IOS 12.4.8
IOS 12.4.8
Android 7.0
Android 5.0
TABLE II: Screen speciﬁcation of the targets
Fig. 3: Automation workﬂow
second. There are also sliders to adjust the gain and low pass
ﬁlter of the SDR. The values for the width and the height do
not necessarily correspond to the dimensions of the screen as
more pixels may be transmitted than those that are displayed.
The selected refresh rate should be the closest possible to the
actual refresh rate and can be conﬁgured with high precision
in the software. The parameters require high precision and
differ among devices, they should be determined following the
description in [54, Section 4.2].
4) Automation: The TempestSDR software contains a built-
in function to store a processed frame. The image captured
from the reconstruction of the frame is called the emage. For
timing efﬁciency and reliability of the capturing process, we
use an automated approach to emage acquisition. Speciﬁcally,
we set up an application that synchronizes the selection of an
image in the image bank, displays it on the screen and saves the
emage (see Figure 3). This application consists of a Javascript
server and a simple website. Additionally, a small modiﬁcation
to the TempestSDR software was made to automatically save
images and communicate with the server. The TempestSDR
sends a signal to the server to display an image from the image
bank. The server communicates this to the webpage loaded on
the phone and the webpage reports back when the image is
changed. The TempestSDR captures a parametrizable number
of emages and asks for a new image.
B. Machine Learning Setup
Here, we describe the collecting process of emage data
sets used to train our security code classiﬁer. Given an emage
from the device under attack, the classiﬁer can produce a
prediction of the message, which contains a six-digit security
code, displayed on the smartphone screen.
It is important to note that the attacks we investigate here
Fig. 4: Screen display used to collect digits from a multi-crop
grid for training our classiﬁer (left) and from an automated
text message containing a security code for testing (right).
can be formulated within a discrimination scenario. This means
that the goal of the attack is to discriminate between a set
of messages about which the attacker has full information.
For example, in the security code scenario, the attacker knows
that the security code consists of six places and the symbol
in each of those places is a digit from 0-9. It is important
to contrast the discrimination scenario with a reconstruction
scenario. The scenarios differ in the amount of information
about the content of the screen available to the attacker. It
is also possible to formulate screen gleaning attacks within a
reconstruction scenario. Here, the goal is to recover the content
of the screen exactly as displayed on the screen without using
any prior knowledge of what content might be displayed. The
reconstruction problem will be discussed further as an outlook
onto future work in Section VIII.
1) Data Collection: To train a classiﬁer, the attacker needs
to collect
training data from the same distribution as the
practical data shown on the target device or from similar types
of data from other devices. Practically, collecting security code
data directly from text messages needs a large amount of
annotation effort, since people have to inspect each message
and crop the code one by one. Considering such inconvenience,
we propose to generate images depicting different numbers
(0-9) over the whole image, and collect data using a multi-
crop approach. Speciﬁcally, each single image is split into
40 × 40 = 1600 cells of digits, as shown in Figure 4 (left).