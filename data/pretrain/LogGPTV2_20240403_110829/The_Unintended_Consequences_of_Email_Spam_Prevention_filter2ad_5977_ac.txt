analysis here to an aggregate: the ratio of all induced queries to all main queries.
These results show that although the SPF’s standard intends to “avoid unrea-
sonable load on the DNS” by limiting the number of DNS-querying terms in an
SPF record, a malicious SPF record can use nested include statements to cir-
cumvent this limitation using recursion.
4.2 Security of DNS Resolvers
Having received DNS queries from domain names within organizations, we can
study the deployment of suggested DNS security mechanisms on DNS resolvers.
166
S. Scheﬄer et al.
Closed vs open. A fundamental defense against DNS-based attacks is to deploy
recursive DNS resolvers as closed. And even among open DNS infrastructures,
DNS queries are often passed from an open to a closed resolver before recursion
occurs [23]. Our measurement technique gives us the IP address of the recursive
resolver that queries the authoritative nameserver, regardless of whether it is
open or closed, which is the one that matters for determining how SPF checks
are handled. To check whether the resolver is closed, we send it a DNS query
from our machine using dig.
If it responds to our query, then we assume it is
open. If it does not, we assume it is closed.
Port Randomization and TXID Randomization. It is widely accepted
that DNS resolvers should randomize the source port and transaction ID in
their queries, and then validate these ﬁelds as echoed in the DNS responses in
order to defend against DNS poisoning [11].
To check whether or not port randomization and TXID randomization were
enabled, we looked at the queries we received from each DNS server in chrono-
logical order. We used two thresholds to test whether the query transaction IDs
were feasibly close to nonrandom order: ﬁrst, we checked whether 70% of query
TXID numbers (resp. port numbers) we received from each DNS server were
within 500 of the previous one. The second check is for whether 50% of query
TXID numbers (resp. port numbers) were with 1000 of the previous one.
0x20 Randomization. Dagon et al. proposed that resolvers would randomize
the latter-cases in domain names queries as a cache poisoning defense [4]. Since
the queried domain name is echoed in the response, this provides additional
entropy to DNS queries that the resolver could validate.
The capitalization patterns of the queries we receive inform us whether or
not the querying server utilizes 0x20 randomization. If the server is using 0x20
randomization, we would expect there to be roughly 50% uppercase and lower-
case letters in the queries across all queries received from this nameserver. We
check whether the ratio of uppercase letters is between 30% and 70%, and if it
does, we determine that this querier has 0x20 randomization.
DNS Conﬁguration Results. We received queries for our SPF records from
8889 total nameserver IP addresses. For each of these, we measured whether the
server is open or closed. We required at least 4 queries received from a nameserver
in order to determine whether it used randomization. 5718 nameservers sent us at
least 4 queries; for these servers we measured whether source port randomization,
transaction ID randomization, and 0x20 randomization were used.
Of 1160 open nameservers that sent us at least 4 queries, 1153 (99%) used
both transaction ID randomization and port randomization, and the remaining
7 (1%) used only transaction ID randomization. No open nameservers used 0x20
randomization. Of 4558 closed nameservers that sent us at least 4 queries, 4547
(99%) of them used both transaction ID randomization and port randomization.
10 closed nameservers used only transaction ID randomization, and 1 used only
port randomization. Only one closed nameserver used 0x20 randomization; it
was among the 4547 that also used both other defenses.
The Unintended Consequences of Email Spam Prevention
167
We ﬁnd that DNS defenses are nearly ubiquitous - 99% of all nameservers
used both transaction ID randomization and port randomization, and the
defenses of closed resolvers only barely diﬀer from the defensees of open resolvers.
Furthermore, most nameservers have taken the extra precaution of being closed.
Of 8889 nameservers that queried us, 7303 (82%) did not respond to DNS query
from outside the organization. One implication of this is that open resolvers are
only a small part of the DNS ecosystem, and so DNS measurements conducted
only on open resolvers may not be representative.
5 Related Work
The Domain Name System has been the main focus of many denial of service
attacks for many years [21], and many methods for detection and mitigation
have been proposed [1,13,17,19,26]. Prior surveys of the Domain Name System
that measure both DoS mitigation and defenses against cache poisoning [2,23,24]
have focused on open resolvers.
Recent work by Klein et. al. [16] also measures the responses of closed DNS
servers by probing them using email. If an MTA receives an email sent to a
nonexistent user, it will query the MX record of the sender’s domain name in
order to determine where to send a bounceback email. Sending emails to nonex-
istant users does not allow studying the deployment of SPF since the recipient
MTA would discard the email before checking the sender’s validity. Huston [12]
measures the behavior of closed DNS resolvers in IPv6. The method works simi-
larly to our own, by causing a remote server to query its own closed DNS server,
but it uses targeted advertisements rather than email spam prevention.
Several works have evaluated the deployment of Sender Policy Framework
in the context of email security [6–8,10,18], and several mention the risk of
utilizing SPF in DoS attacks [9,20]. The updated SPF standard [15] took this
into account in the new version, and made a recommendation to limit the number
of DNS query-causing terms checked. However, we have shown that this defense
can be circumvented using include statements.
6 Recommendations
Standard update. The most recent version of the SPF standard (2014)[15,
Sect. 11.1] discusses the possibility of malicious SPF terms and proposes to limit
the number of “void lookups” (lookups that result in a response with 0 answers,
or that cause a name error) to 2 per SPF record, after which an error is returned.
This is in addition to the maximum of 10 DNS query-causing terms limit. We
recommend that both of these limits be global, rather than “resetting” when
recursion occurs in include statements.
Implementations. We recommend that new versions of the SPF library [3,22]
follow our previous suggestion to using global counts of DNS queries and void
lookups per email, rather than resetting these to 0 when recursion occurs and a
new SPF record is fetched. We envision this being the default option.
168
S. Scheﬄer et al.
Acknowledgements. We thank Jared Mauch for contributing the machines we used
to scan the Internet address space for MTAs and store our results. Sharon Goldberg
thanks Haya Shulman for useful discussions about DNS resolvers and email. This
research was supported, in part, by NSF grants 414119 and 1350733.
References
1. Ballani, H., Francis, P.: Mitigating DNS DoS attacks. In: Proceedings of Computer
and Communications Security, pp. 189–198. ACM (2008)
2. Borgwart, A., Shulman, H., Waidner, M.: Towards automated measurements of
internet’s naming infrastructure. In: Software Science, Technology and Engineering
(SWSTE), pp. 117–124. IEEE (2016)
3. The SPF Council. Sender Policy Framework, April 2014. http://www.openspf.org/
4. Dagon, D., Antonakakis, M., Vixie, P., Jinmei, T., Lee, W.: Increased DNS forgery
resistance through 0x20-bit encoding: security via leet queries. In: Proceedings of
Computer and Communications Security, pp. 211–222. ACM (2008)
5. Durumeric, Z., Wustrow, E., Halderman, J.A.: ZMap: fast internet-wide scanning
and its security applications. In: King, S.T. (ed.) USENIX Security Symposium,
pp. 605–620. USENIX Association (2013). ISBN:978-1-931971-03-4
6. Durumeric, Z., Adrian, D., Mirian, A., Kasten, J., Bursztein, E., Lidzborski, N.,
Thomas, K., Eranti, V., Bailey, M., Halderman, J.A.: Neither snow nor rain nor
MITM: an empirical analysis of email delivery security. In: Internet Measurement
Conference, pp. 27–39. ACM (2015). http://dl.acm.org/citation.cfm?id=2815675.
ISBN:978-1-4503-3848-6
7. Foster, I.D., Larson, J., Masich, M., Snoeren, A.C., Savage, S., Levchenko, K.:
Security by any other name: on the eﬀectiveness of provider based email security.
In: Proceedings of Computer and Communications Security, pp. 450–464. ACM
(2015)
8. Gojmerac, I., Zwickl, P., Kovacs, G., Steindl, C.: Large-scale active measurements
of DNS entries related to e-mail system security. In: International Conference on
Communications, pp. 7426–7432, June 2015. https://doi.org/10.1109/ICC.2015.
7249513
9. Herzberg, A.: DNS-based email sender authentication mechanisms: a critical
review. Comput. Secur. 28(8), 731–742 (2009)
10. Holz, R., Amann, J., Mehani, O., Wachs, M., Kˆaafar, M.A.: TLS in the Wild:
An Internet-wide Analysis of TLS-based Protocols for Electronic Communication.
CoRR, abs/1511.00341 (2015). http://arxiv.org/abs/1511.00341
11. Hubert, A., van Mook, R.: Measures for Making DNS More Resilient against Forged
Answers. RFC 5452 (Proposed Standard), January 2009. http://www.ietf.org/rfc/
rfc5452.txt
12. Huston, G.: IPv6 and the DNS, October 2016. https://blog.apnic.net/2016/10/20/
ipv6-and-the-dns/
13. Kambourakis, G., Moschos, T., Geneiatakis, D., Gritzalis, S.: Detecting DNS
ampliﬁcation attacks. In: Lopez, J., H¨ammerli, B.M. (eds.) CRITIS 2007. LNCS,
vol. 5141, pp. 185–196. Springer, Heidelberg (2008). https://doi.org/10.1007/978-
3-540-89173-4 16
14. Kaminsky, D.: Its the End of the Cache as we Know It. Black-Hat USA (2008)
15. Kitterman, S.: Sender Policy Framework (SPF) for Authorizing Use of Domains
in Email, Version 1. RFC 7208 (Proposed Standard), April 2014. http://www.ietf.
org/rfc/rfc7208.txt. Updated by RFC 7372
The Unintended Consequences of Email Spam Prevention
169
16. Klein, A., Shulman, H., Waidner, M.: Internet-wide study of DNS cache injections.
In: INFOCOM, pp. 1–9. IEEE (2017)
17. K¨uhrer, M., Hupperich, T., Rossow, C., Holz, T.: Exit from hell? Reducing the
impact of ampliﬁcation DDoS attacks. In: USENIX Security Symposium, pp. 111–
125 (2014)
18. Malatras, A., Coisel, I., Sanchez, I.: Technical recommendations for improving
security of email communications. In: Information and Communication Technology,
Electronics and Microelectronics, pp. 1381–1386. IEEE (2016)
19. Moore, D., Shannon, C., Brown, D.J., Voelker, G.M., Savage, S.: Inferring internet
denial-of-service activity. ACM Trans. Comput. Syst. 24(2), 115–139 (2006)
20. Mori, T., Sato, K., Takahashi, Y., Ishibashi, K.: How is e-mail sender authenti-
cation used and misused? In: Proceedings of the 8th Annual Collaboration, Elec-
tronic Messaging, Anti-Abuse and Spam Conference, CEAS 2011, pp. 31–37. ACM,
New York (2011). http://doi.acm.org/10.1145/2030376.2030380. ISBN:978-1-4503-
0788-8
21. Paxson, V.: An analysis of using reﬂectors for distributed denial-of-service attacks.
ACM SIGCOMM Comput. Commun. Rev. 31(3), 38–47 (2001)
22. Schlitt, W.: libspf2 - SPF Library. https://www.libspf2.org/
23. Schomp, K., Callahan, T., Rabinovich, M., Allman, M.: On measuring the client-
side DNS infrastructure. In: Proceedings of Internet Measurement Conference,
pp. 77–90. ACM, New York (2013). http://doi.acm.org/10.1145/2504730.2504734.
ISBN:978-1-4503-1953-9
24. Sisson, G.: DNS Survey, The Measurement Factory, November 2010. http://dns.
measurement-factory.com/surveys/201010/dns survey 2010.pdf
25. Wong, M., Schlitt, W.: Sender Policy Framework (SPF) for Authorizing Use of
Domains in E-Mail, Version 1. RFC 4408 (Experimental), April 2006. Obsoleted
by RFC 7208, updated by RFC 6652. http://www.ietf.org/rfc/rfc4408.txt
26. Zargar, S.T., Joshi, J., Tipper, D.: A survey of defense mechanisms against dis-
tributed denial of service (DDoS) ﬂooding attacks. IEEE Commun. Surv. Tutor.
15(4), 2046–2069 (2013)