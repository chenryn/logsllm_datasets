### Analysis of Aggregate Queries

The ratio of all induced queries to all main queries reveals that, despite the SPF standard's intention to "avoid unreasonable load on the DNS" by limiting the number of DNS-querying terms in an SPF record, a malicious SPF record can circumvent this limitation using nested include statements and recursion.

### 4.2 Security of DNS Resolvers

Upon receiving DNS queries from domain names within organizations, we can study the deployment of suggested DNS security mechanisms on DNS resolvers.

#### Closed vs. Open Resolvers

A fundamental defense against DNS-based attacks is to deploy recursive DNS resolvers as closed. Even in open DNS infrastructures, DNS queries are often passed from an open to a closed resolver before recursion occurs [23]. Our measurement technique provides the IP address of the recursive resolver that queries the authoritative nameserver, regardless of whether it is open or closed, which is crucial for determining how SPF checks are handled. To determine if a resolver is closed, we send a DNS query from our machine using `dig`. If the resolver responds to our query, we assume it is open; otherwise, we assume it is closed.

#### Port Randomization and TXID Randomization

It is widely accepted that DNS resolvers should randomize the source port and transaction ID (TXID) in their queries and then validate these fields in the DNS responses to defend against DNS poisoning [11].

To check for port and TXID randomization, we analyzed the queries received from each DNS server in chronological order. We used two thresholds:
1. We checked if 70% of the query TXID numbers (or port numbers) were within 500 of the previous one.
2. We checked if 50% of the query TXID numbers (or port numbers) were within 1000 of the previous one.

#### 0x20 Randomization

Dagon et al. proposed that resolvers randomize the case of domain names in queries as a cache poisoning defense [4]. Since the queried domain name is echoed in the response, this provides additional entropy to DNS queries that the resolver can validate.

We determined whether the querying server uses 0x20 randomization by analyzing the capitalization patterns of the queries. If the server uses 0x20 randomization, we would expect approximately 50% uppercase and 50% lowercase letters in the queries. We checked if the ratio of uppercase letters was between 30% and 70%, and if so, we concluded that the querier uses 0x20 randomization.

### DNS Configuration Results

We received queries for our SPF records from 8,889 total nameserver IP addresses. For each nameserver, we measured whether it was open or closed. We required at least four queries from a nameserver to determine if it used randomization. 5,718 nameservers sent us at least four queries, allowing us to measure source port randomization, transaction ID randomization, and 0x20 randomization.

- **Open Nameservers**: Of the 1,160 open nameservers that sent at least four queries, 1,153 (99%) used both transaction ID randomization and port randomization, and the remaining 7 (1%) used only transaction ID randomization. No open nameservers used 0x20 randomization.
- **Closed Nameservers**: Of the 4,558 closed nameservers that sent at least four queries, 4,547 (99%) used both transaction ID randomization and port randomization. Ten closed nameservers used only transaction ID randomization, and one used only port randomization. Only one closed nameserver used 0x20 randomization, and it was among the 4,547 that also used both other defenses.

### Findings

Our results show that DNS defenses are nearly ubiquitous: 99% of all nameservers used both transaction ID randomization and port randomization. The defenses of closed resolvers are only slightly different from those of open resolvers. Furthermore, most nameservers have taken the extra precaution of being closed. Of the 8,889 nameservers that queried us, 7,303 (82%) did not respond to DNS queries from outside the organization. This implies that open resolvers are only a small part of the DNS ecosystem, and DNS measurements conducted only on open resolvers may not be representative.

### 5. Related Work

The Domain Name System (DNS) has been a primary target for denial-of-service (DoS) attacks for many years [21], and various methods for detection and mitigation have been proposed [1, 13, 17, 19, 26]. Prior surveys of the DNS that measure DoS mitigation and defenses against cache poisoning [2, 23, 24] have focused on open resolvers.

Recent work by Klein et al. [16] measures the responses of closed DNS servers by probing them using email. If an MTA receives an email sent to a nonexistent user, it will query the MX record of the sender’s domain name to determine where to send a bounceback email. However, sending emails to nonexistent users does not allow studying the deployment of SPF since the recipient MTA would discard the email before checking the sender’s validity. Huston [12] measures the behavior of closed DNS resolvers in IPv6. The method is similar to ours, causing a remote server to query its own closed DNS server, but it uses targeted advertisements rather than email spam prevention.

Several works have evaluated the deployment of Sender Policy Framework (SPF) in the context of email security [6–8, 10, 18], and some mention the risk of using SPF in DoS attacks [9, 20]. The updated SPF standard [15] took this into account and recommended limiting the number of DNS query-causing terms. However, we have shown that this defense can be circumvented using include statements.

### 6. Recommendations

#### Standard Update

The most recent version of the SPF standard (2014) [15, Sect. 11.1] discusses the possibility of malicious SPF terms and proposes limiting the number of "void lookups" (lookups that result in a response with 0 answers or cause a name error) to 2 per SPF record, after which an error is returned. This is in addition to the maximum of 10 DNS query-causing terms limit. We recommend that both of these limits be global, rather than resetting when recursion occurs in include statements.

#### Implementations

We recommend that new versions of the SPF library [3, 22] follow our suggestion to use global counts of DNS queries and void lookups per email, rather than resetting these to 0 when recursion occurs and a new SPF record is fetched. We envision this as the default option.

### Acknowledgements

We thank Jared Mauch for contributing the machines we used to scan the Internet address space for MTAs and store our results. Sharon Goldberg thanks Haya Shulman for useful discussions about DNS resolvers and email. This research was supported, in part, by NSF grants 414119 and 1350733.

### References

[References listed as provided in the original text]

This revised version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.