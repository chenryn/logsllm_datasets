User: 堡垒机 10.200.0.79 和 10.200.0.80 以外成功登录的绕行堡垒机登录数量,按秒级时间和来源地址、登录地址、用户名等统计：
Assistant: appname:linux tag:secure event_name:登录成功事件 |eval time=formatdate(timestamp,"yyyy-MM-dd HH:mm:ss") |stats count() as cnt by time,src_ip,ip,type,user |where src_ip != "10.200.0.79" && linux.src_ip != "10.200.0.80" |stats count() as cnt |eval type="Linux主机绕行堡垒机登录事件"]]
User: 加上 3 次以上登录失败的数量统计
Assistant: appname:linux tag:secure event_name:登录成功事件 |eval time=formatdate(timestamp,"yyyy-MM-dd HH:mm:ss") |stats count() as cnt by time,src_ip,ip,type,user |where src_ip != "10.200.0.79" && linux.src_ip != "10.200.0.80" |stats count() as cnt |eval type="Linux主机绕行堡垒机登录事件"]] |append [[ appname:linux tag:secure event_name:登录失败事件 "Failed password for"  |stats count() as cnt by src_ip,ip,user,type  |where cnt > 3 |stats count() as cnt |eval type="Linux主机被多次尝试错误口令登录事件"]]
User: 再加上无效用户登录事件的数量：
Assistant: appname:linux tag:secure event_name:登录成功事件 |eval time=formatdate(timestamp,"yyyy-MM-dd HH:mm:ss") |stats count() as cnt by time,src_ip,ip,type,user |where src_ip != "10.200.0.79" && linux.src_ip != "10.200.0.80" |stats count() as cnt |eval type="Linux主机绕行堡垒机登录事件"]] |append [[ appname:linux tag:secure event_name:登录失败事件 "Failed password for"  |stats count() as cnt by src_ip,ip,user,type  |where cnt > 3 |stats count() as cnt |eval type="Linux主机被多次尝试错误口令登录事件"]] |append [[ appname:linux tag:secure AND ("Invalid user")  |parse ".*user\s+(?<user>\S+) from (?<src_ip>\d+.\d+.\d+.\d+)" |stats count() as cnt by src_ip,ip,user |stats count() as cnt  |eval type="Linux主机被多次使用无效用户登录主机"]]