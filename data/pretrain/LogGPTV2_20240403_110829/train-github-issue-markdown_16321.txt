This is not a very common situation, but it's one that we did observe, so I'm
opening this ticket to document this potential behavior. We were relying on
active_queues() to provide an accurate look at the workers, and these a the
following log messages in the log concerned us.
    py.warnings:WARNING: /home/bmbouter/Documents/qpidkombu/repos/celery/celery/app/control.py:34: DuplicateNodenameWarning: Received multiple replies from node name True.
    py.warnings:WARNING: Please make sure you give each node a unique nodename using the `-n` option.
    py.warnings:WARNING:   W_DUPNODE.format(dup),
    py.warnings:WARNING:
We saw this output exactly once from each worker some time after each restart.
In our case we had a task that uses inspect, such as:
    controller = control.Control(app=app)
    @task
    def my_task():
        active_queues = controller.inspect().active_queues()
To reproduce, start 8 workers with unique names, and have them ready to run
the my_task. Then dispatch 50 my_task using:
    for i in range(50):
        my_task.delay()
We do not have any duplicate workers. We have exactly 8, and each one gets a
different name. We verified this manually, yet we saw the warnings about
duplicate workers.
When turning on debug logging, I saw a many output lines like this one:
    kombu.pidbox:DEBUG: pidbox received method active_queues() [reply_to:{u'routing_key': u'37ff7c3e-8007-38c4-a836-544cfe8380e6', u'exchange': u'reply.celery.pidbox'} ticket:6f2aa08e-68bc-4750-849c-7f02b98da7b6
Each pid showed that it received a pidbox request (the active_queues command)
with a reply_to routing key of '37ff7c3e-8007-38c4-a836-544cfe8380e6'. I
believe the root cause of this issue is that this routing key does not change
with pidbox command to pidbox command. It also cannot correlate one the
responses with the requests.
If I issue an active_queue command with reply_to = 'foo', and I wait 1 second
to timeout, and 1 worker responds later than 1 second, it's reply is going to
go into my queue and not be read by my active_queue command. Then if I issue a
second active_queue() command, and use the same reply_to = 'foo', and the
worker responds in time this time, as I process the replies I'll see a
duplicate reply from the worker.
This causes the active_queues() information to be incorrect.
A correlation value could be introduced that correlates replies with requests,
or the reply queue could be different with each pidbox command potentially.
The fact that the logs were only printed once I is also interesting. I
verified that this actually happens a lot more than once, but the logging
warning is only shown once! That logging occurs here.