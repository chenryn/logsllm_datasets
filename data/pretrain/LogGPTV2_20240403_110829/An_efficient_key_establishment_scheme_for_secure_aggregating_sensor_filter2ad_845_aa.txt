# An Efficient Key Establishment Scheme for Secure Aggregating Sensor Networks

**Authors:**
- Erik-Oliver Blaß
  - University of Karlsruhe
  - 76128 Karlsruhe, Germany
  - +49 721 608-6416
  - Email: [Your Email Here]
- Martina Zitterbart
  - University of Karlsruhe
  - 76128 Karlsruhe, Germany
  - +49 721 608-6400
  - Email: [Your Email Here]

## Abstract
Key establishment is a fundamental requirement for secure communication in wireless sensor networks. A new node joining the network must efficiently and autonomously set up secret keys with its communication partners without relying on a central infrastructure. Current research often focuses on probabilistic key distribution from larger key pools, which results in high communication and memory costs that scale linearly with the network size and only guarantee secure connections with a certain probability. This paper presents a novel approach for efficient and secure key establishment by leveraging the aggregation paradigm in sensor networks. Keys are split into shares and forwarded using disjoint paths, minimizing memory consumption and radio transmissions to logarithmic behavior.

## Categories and Subject Descriptors
C.2.0 [Computer Systems Organization]: Computer-Communication Networks—Security and Protection

## General Terms
- Security
- Algorithms

## Keywords
- Sensor Networks
- Key Establishment
- Aggregation
- Efficiency

## 1. Introduction
With the increasing use of sensor networks in daily life, data security has become a critical aspect of this technology. In many scenarios, such as health monitoring, the confidentiality of transported data is essential. Since data is transmitted wirelessly between nodes, it is vulnerable to interception and eavesdropping. Additionally, the small and low-cost nature of sensor hardware makes it susceptible to tampering. Therefore, data transportation from a sensor node to a data sink must be protected against these threats.

To protect data, a security relationship between communicating nodes must be established, typically through cryptographic keys. However, key distribution and establishment in wireless sensor networks pose significant challenges due to limited memory and processing power. Public-key cryptography, while feasible, is too resource-intensive for frequent use. Symmetric key primitives are more suitable, but they require self-organizing protocols that do not rely on central authorities.

This paper introduces a new, efficient key establishment protocol for sensor networks. The protocol leverages the fact that nodes only need to share keys with those on their aggregation tree. The benefits include:
- **Efficient Scaling:** O(log n) behavior in terms of memory consumption and radio transmissions, compared to O(n) in related work.
- **Autonomous Operation:** Key establishment is done without the need for online infrastructures like key-distribution centers.
- **Dynamic Support:** The protocol can handle dynamic changes in the aggregation structure and nodes leaving the network.
- **Guaranteed Security:** Unlike related work, our scheme ensures secure key establishment, not just with a probability p < 1.

## 2. Threat Model
In a typical scenario, an attacker has a limited budget, time, and effort to compromise at most k nodes. If the attacker captures one or more nodes, they can impersonate a legitimate node and participate in key establishment protocols, thereby gaining access to the new key. The challenge is to design a key establishment protocol that can handle the presence of compromised nodes, even if their identities are unknown.

### 2.1 Single Malicious Node
For simplicity, we first consider the case of exactly one malicious node. The key establishment scheme can be extended to handle k malicious nodes, as discussed in Section 5.4.

## 3. Use of a Master Device
When a new sensor node, say i, joins the network, it needs an initial trust anchor to establish keys securely. This initial pairing cannot be done autonomously without user interaction, as it would allow an attacker to add malicious nodes. A Master Device (MD), representing the user, establishes this initial trust. The MD can use a location-limited channel, such as physical contact, to securely exchange information with the new node. Examples of MDs include rings or key fobs like iButtons. The MD is stateless and does not know the current network configuration, ensuring it remains offline during normal operation.

### 3.1 Notation
- A symmetric key shared between node x and node y is denoted as Kx,y.
- Encryption of data using K is denoted as C = EK(data).
- Decryption of C is not explicitly used in this paper.

## 4. Key Establishment Scheme
The key establishment scheme is defined inductively. Assume a subtree of a sensor network's aggregation tree, where nodes e, f, and g send their measured values to b, which aggregates them and sends the result to a. Secret keys have been established between adjacent vertices, and there are also pairwise keys between, for example, g and a. When a new node, say i, wants to join the network, it must establish keys with aggregation nodes f, b, a, etc. The key establishment process is as follows:

### 4.1 Inductive Hypothesis
At a certain point, the network and key configuration are assumed to be in a known state. A new node, i, wants to join the network and must establish keys with its aggregation nodes.

### 4.2 Key Splitting and Forwarding
Keys are split into shares and forwarded using disjoint paths in the network. This ensures that even if some nodes are compromised, the key shares remain secure.

### 4.3 Handling Multiple Malicious Nodes
The scheme can be extended to handle k malicious nodes by using additional redundancy and verification steps. This is discussed in detail in Section 5.4.

## 5. Conclusion
This paper presents a novel key establishment scheme for secure aggregating sensor networks. By leveraging the aggregation paradigm and using key splitting and disjoint path forwarding, the scheme achieves efficient scaling and robust security. Future work will focus on further optimizations and practical implementations.

---

**Note:** Please replace `[Your Email Here]` with the actual email addresses of the authors.