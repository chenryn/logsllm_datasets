2. δ(α) (cid:54)= 0 but δ(α)(β) = 0 ∈ Zq.
Then it is easy to see that
Pr[ ˆH(µ) = ˆH(µ(cid:48)) ∧ µ (cid:54)= µ(cid:48) | (µ, µ(cid:48)) ← A(K)] ≤ Pr[δ(α) = 0 ∧ µ (cid:54)= µ(cid:48) | (µ, µ(cid:48)) ← A(K)] +
Pr[δ(α)(β) = 0 ∧ δ(α) (cid:54)= 0 ∧ µ (cid:54)= µ(cid:48) | (µ, µ(cid:48)) ← A(K)]
In what follows we prove that both probabilities on the right hand side are negligible under the
assumption that (cid:96)-BDHI holds.
The case δ(α) = 0. Assume for the sake of contradiction that there exists a PPT adversary A such
that Pr[δ(α) = 0 ∧ µ (cid:54)= µ(cid:48) | (µ, µ(cid:48)) ← A(K), (K, κ) $← ˆH.KeyGen] is non-negligible. We show how
to build a PPT algorithm B that uses such A to break the c-BDHI assumption with non-negligible
probability.
i=0, and its goal is to compute e(g, h)1/z ∈ GT .
B takes as input the tuple {(gzi, hzi)}c
First, B chooses a random β $← Zq, implicitly sets α = z, and simulates K by computing the
values gαiβj , hαiβj for i = 0, . . . , c and j = 0, . . . , N . It is easy to see that all these values can be
eﬃciently computed by B with the knowledge of {(gzi, hzi)}c
Next, B runs A on input K and with non-negligible probability obtains µ (cid:54)= µ(cid:48) ∈ Zq[X][Y ].
j=0 δj,kY j ∈ Zq[Y ] for all
k = 0, . . . , N . If δ is nonzero there exists an index ¯k such that λ¯k is nonzero over Zq[Y ]. Furthermore
if δ(α) = 0 over Zq[X] means that λk(α) = 0 for all k.
j=0 δj,kY j)X k, and let λk(Y ) = (cid:80)c
Set δ(X, Y ) = µ − µ(cid:48) = (cid:80)N
k=0((cid:80)c
i=0.
19
the ﬁrst index 0 ≤ j ≤ c such that ωj (cid:54)= 0, and where ω(cid:48)(Y ) =(cid:80)c
Deﬁne ω(Y ) = λ¯k(Y ) and recalling that ω(Y ) is nonzero write ω(Y ) = Y j(ωj + Y · ω(cid:48)(Y )), for
i=j+1 ωi· Y i−j−1. Now, since α = z
and ω(z) = 0, we have ωj = −z · ω(cid:48)(z). Therefore, B can compute
 c(cid:89)
e
i=j+1
−1/ωj
(gzi−j−1
)ωi, h
= e(g, h)−ω(cid:48)(z)/ωj = e(g, h)1/z
which concludes this case of the proof.
The case δ(α) (cid:54)= 0. This case of the proof is rather similar to the previous one. Assume for the sake
of contradiction that there exists a PPT adversary A such that Pr[δ(α)(β) = 0 ∧ δ(α) (cid:54)= 0 ∧ µ (cid:54)=
µ(cid:48) | (µ, µ(cid:48)) ← A(K), (K, κ) $← ˆH.KeyGen] is non-negligible. We show how to build a PPT algorithm
B that uses such A to break the N -BDHI assumption with non-negligible probability.
i=0, and its goal is to compute e(g, h)1/z ∈ GT .
B takes as input the tuple {(gzi, hzi)}N
First, B chooses a random α $← Zq, implicitly sets β = z, and simulates K by computing the
values gαiβj , hαiβj for i = 0, . . . , c and j = 0, . . . , N . It is easy to see that all these values can be
eﬃciently computed by B with the knowledge of {(gzi, hzi)}N
Next, B runs A on input K and with non-negligible probability obtains µ (cid:54)= µ(cid:48) ∈ Zq[X][Y ]. Set
Since ω(X) is nonzero write ω(X) = X j(ωj + X · ω(cid:48)(X)), for the ﬁrst index 0 ≤ j ≤ N such
i=j+1 ωi · X i−j−1. Now, since β = z and ω(z) = 0, we have
j=0 δj,kY j)X k, and let ω(X) = δ(α) =(cid:80)N
i=0 ωiX i ∈ Zq[X].
k=0((cid:80)c
δ(X, Y ) = µ − µ(cid:48) =(cid:80)N
that ωj (cid:54)= 0, and where ω(cid:48)(X) = (cid:80)N
 N(cid:89)
ωj = −z · ω(cid:48)(z). Therefore, B can compute
(gzi−j−1
−1/ωj
)ωi, h
i=0.
e
= e(g, h)−ω(cid:48)(z)/ωj = e(g, h)1/z
(cid:117)(cid:116)
i=j+1
which concludes the proof.
4.3 Amortized closed-form Eﬃcient Pseudorandom Functions
Here we recall the notion of pseudorandom functions with amortized closed-form eﬃciency [7] which
extend closed-form-eﬃcient PRFs [12].
A PRF consists of two algorithms (F.KG, F) such that the key generation F.KG takes as input
the security parameter 1λ and outputs a secret key K and some public parameters pp that specify
domain X and range R of the function, and the function FK(x) takes input x ∈ X and uses the
secret key K to compute a value R ∈ R. As usual, a PRF must satisfy the pseudorandomness
property. Namely, we say that (F.KG, F) is secure if for every PPT adversary A we have that:
| Pr[AFK (·)(1λ, pp) = 1] − Pr[AΦ(·)(1λ, pp) = 1] | ≤ (λ)
where (λ) is negligible, (K, pp) $← F.KG(1λ), and Φ : X → R is a random function.
For any PRF (F.KG, F) amortized closed-form eﬃciency is deﬁned as follows.
Deﬁnition 9 (Amortized Closed-Form Eﬃciency [7]). Consider a computation Comp that
takes as input n random values R1, . . . , Rn ∈ R and a vector of m arbitrary values z = (z1, . . . , zm),
and assume that the computation of Comp(R1, . . . , Rn, z1, . . . , zm) requires time t(n, m).
20
Let L = (L1, . . . , Ln) be arbitrary values in the domain X of F such that each can be interpreted as
Li = (∆, τi). We say that a PRF (F.KG, F) satisﬁes amortized closed-form eﬃciency for (Comp, L)
if there exist algorithms CFEvaloﬀ
1. Given ω←CFEvaloﬀ
Comp,τ and CFEvalon
Comp,∆ such that:
Comp,τ (K, z), we have that
CFEvalon
Comp,∆(K, ω) = Comp(FK(∆, τ1), . . . , FK(∆, τn), z1, . . . , zm)
2. the running time of CFEvalon
Comp,∆(K, ω) is o(t).
A Realization Based on Decision Linear in Bilinear Groups. Below we show a realization
of amortized closed-form eﬃcient PRFs based on the decision linear assumption. The scheme is
obtained by adapting the one of [7] to work with asymmetric bilinear groups. This function will be
crucial to achieve eﬃciency for our schemes for quadratic multi-variate polynomials.
q → Zq be a degree-2 arithmetic circuit, and without loss of generality, parse
Let f : Zt
t(cid:88)
t(cid:89)
t(cid:88)
t(cid:89)
f (Z1, . . . , Zt) =
ηi,j · Zi · Zj +
ηk · Zk,
(4)
i,j=1
k=1
for some ηi,j, ηk ∈ Zq. We deﬁne ˆf : (G1 × G2)t → GT as the compilation of f on group elements
as:
ˆf (A1, B1, . . . , At, Bt) =
e(Ai, Bj)ηi,j ·
e(Ak, h)ηk .
(5)
i,j=1
k=1
Below, we describe the PRF with amortized closed-form eﬃciency for Comp(R1, S1, . . . , Rt, St, f ) =
ˆf (R1, S1, . . . , Rt, St):
F.KG(1λ). Let bgpp be some bilinear group parameters, where g ∈ G1 and h ∈ G2 are generators.
– Choose two seeds K1, K2 for a family of PRFs F(cid:48)
– Output K = (K1, K2). The parameters deﬁne a function F with domain X = {0, 1}∗×{0, 1}∗
: {0, 1}∗ → Z2
q.
K1,2
FK(∆, τ ).
and range R = G1 × G2, as described below.
(τ ) and (a, b)←F(cid:48)
CFEvaloﬀ
K1
– Generate values (u, v)←F(cid:48)
– Output R = gua+vb, S = hua+vb.
q → Zq.
– For i = 1 to t, compute (ui, vi)←F(cid:48)
(τi), and interpret (ui, vi) as a linear form ρi that maps
– Next, run ρ←f (ρ1, . . . , ρt), i.e. compute a (possibly quadratic) form ρ such that for all
τ (K, f ). Parse K = (K1, K2) as a secret key for the PRF, and f as a function Zt
(z1, z2) to ρi(zi, z2) = ui · z1 + vi · z2.
z1, z2 ∈ Zq
(∆).
K2
K1
ρ(z1, z2) = f (ρ1(z1, z2), . . . , ρt(z1, z2)).
– Finally, output ωf = ρ.
CFEvalon
∆ (K, ωf ). Parse K = (K1, K2) as a secret key and ωf = ρ as in the previous algorithm. The
online evaluation algorithm does the following:
– Generate (a, b)←F(cid:48)
K2
– Compute w = ρ(a, b).
(∆).
21
– Output W = e(g, h)w.
The function above is secure under the decision linear assumption in asymmetric bilinear groups,
recalled below.
Deﬁnition 10 (Decision Linear [16]). Let G be a bilinear group generator, and let bgpp $←
G(1λ). Let r0, r1, r2, x1, x2
Let T = (g, h, gx1, gx2, gx1r1, gx2r2, hx1, hx2, hx1r1, hx2r2).
We deﬁne the advantage of an adversary A in solving the decision linear problem as
$← Zq be chosen uniformly at random.
AdvdlinA (λ) = | Pr[A(bgpp, T, gr1+r2, hr1+r2) = 1]−
Pr[A(bgpp, T, gr0, hr0) = 1]|
We say that the decision linear assumption holds for G if for every PPT algorithm A, AdvdlinA (λ)
is negligible.
Theorem 4. If the Decision Linear assumption holds for G, and F(cid:48) is a family of pseudorandom
functions, then the function F described above is a pseudorandom function with amortized closed-
form eﬃciency for Comp = ˆf as deﬁned above.
The proof of theorem 4 follows the one of [7, Theorem 2].
A Realization Based on DDH over 2k-Residues in Z∗
closed-form eﬃcient PRF based on the DDH assumption in the subgroup of 2k-residues of Z∗
N .
2k be a linear function f (Z1, . . . , Zt) =(cid:80)t
N . here we propose another amortized
i=1 fi · Zi. We deﬁne ˆf : (Z∗
N )t → Z∗
Let f : Zt
as the compilation of f on elements of the multiplicative group Z∗
2k → Z
N
N as:
ˆf (A1, . . . , At) =
Afi
i mod N
(6)
Below we describe the PRF with amortized closed-form eﬃciency for Comp(R1, . . . , Rt, f ) = ˆf (R1, . . . , Rt):
F.KG(1λ). Let N = pq be the product of two quasi-safe primes p = 2kp(cid:48) + 1 and q = 2kq(cid:48) + 1. Let
Rk be the following subgroup of Z∗
– Choose two seeds K1, K2 for a family of PRFs F(cid:48)
– Output K = (K1, K2) and pp = (N, k). These parameters deﬁne a function F with domain
N}, and let g ∈ Rk be a generator.
: {0, 1}∗ → Zp(cid:48)q(cid:48).
N , Rk = {x2k : x ∈ Z∗
K1,2
X = {0, 1}∗ × {0, 1}∗ and range Z∗
N , as described below.
t(cid:89)
i=1
22
CFEvaloﬀ
τ (K, f ). Parse K = (K1, K2) as a secret key for the PRF, and f as a function (Z
2k )t → Z
2k .
CFEvalon
∆ (K, ωf ). Parse K = (K1, K2) as a secret key and ωf = ρ as in the previous algorithm. The
FK(∆, τ ).
K1
(τ ) and b←F(cid:48)
– Generate values v←F(cid:48)
– Output R = gvb mod N .
– For i = 1 to t, compute vi←F(cid:48)
– Next, compute ρ←f (v1, . . . , vt) mod p(cid:48)q(cid:48).
– Finally, output ωf = ρ.
(τi).
K1
K2
(∆).
online evaluation algorithm does the following:
– Generate b←F(cid:48)
– Output W = gρb mod N .
(∆).
K2
The function above can be proven secure from the DDH assumption in Rk, that we recall below.
Deﬁnition 11 (DDH). Let N = pq be the product of two quasi-safe primes p = 2kp(cid:48) + 1 and
q = 2kq(cid:48) + 1. Deﬁne Rk = {x2k : x ∈ Z∗
N}, and let g ∈ Rk be a generator. Let a, b, c $← Zp(cid:48)q(cid:48)
be chosen uniformly at random. We deﬁne the advantage of an adversary A in solving the DDH
problem as
AdvddhA (λ) = | Pr[A(N, k, g, ga, gb, gab) = 1] − Pr[A(N, k, g, ga, gb, gc) = 1]|
We say that the DDH assumption holds in Rk if for every PPT algorithm A we have that AdvddhA (λ)
is negligible.
Theorem 5. If the DDH assumption holds for Rk, and F(cid:48) is a family of pseudorandom func-
tions, then the function F described above is a pseudorandom function with amortized closed-form
eﬃciency for Comp = ˆf as deﬁned above.
Proof. The pseudo randomness property is immediate from the deﬁnition of the function and by
the random self reducibility of DDH.