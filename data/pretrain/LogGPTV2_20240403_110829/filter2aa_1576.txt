1
threat protection | compliance | archiving & governance | secure communication
Malware Command and Control Channels
- a journey into Darkness -
By Brad Woodberg 
-
Emerging Threats Product Manager  / Proofpoint
2
Agenda
C2 Intro and Background (7 mins)
Modern C2 Techniques (6 mins)
Case Studies (15 mins)
Predictions for C2 (5 mins)
Defense (10 mins)
Wrap Up (2 mins)
3
Why Command & Control?
Vulnerabilities, Exploits, and Malware grab the headlines and analyst focus 
While very interesting, it is also very noisy, many exploits fail, very FP prone.
If you can effectively detect C2 activity, you have a high fidelity indicator that an 
asset is actually compromised.
With C2, the tables are turned on attackers, they go on defense, and we go on 
offense.
4
T-0: Initial Infection
Modern malware is delivered in one of two ways:
− Executable Content:  Binary executables, embedded 
executable content like macros typically through web or 
email channels on the network.
− Exploit Driven: An exploit against a software vulnerability 
such as those against Flash, PDF, Java, Office Docs, 
Browsers, and other network enabled applications.
Regardless of how modern malware compromises a 
system, it is rarely autonomous.
Dridex
CVE-2016-4117
Angler EK
5
T-1: Rough Landings
Initial malware execution may occur under non-ideal scenarios:
Malware may land on a non-target asset
Malware may not have sufficient privileges when it executes
Malware may be delivered in pieces to evade detection / fit into buffers
Malware may require payload before it is malicious (e.g. TinyLoader) 
Malware may require coordination with C2 for operating instructions before it 
takes action (e.g. Crypto Ransomware waiting to receive a key)
Enter Command and Control
6
T-2: Escalation
Complete malware breach by acquiring additional executables, payloads, and 
configurations.
− May be as simple as a word doc downloading an EXE (e.g. Dridex), 
− Or as complex as a dropper downloading an entirely new malware (e.g. Tinyloader / 
AbaddonPoS)
Escalation stage is often carried out by contacting C2 Infrastructure
This communication often leverages different infrastructure, protocols, and 
methods than the initial infection.
− Often because infection infrastructure is rented, and C2 is managed by a different actor.
7
Initial Infection in Action: Angler Exploit Kit
Redirect to 
Angler 
Infrastructure
TDS Evaluates 
Target Client
Exploit / 
Payload 
Delivered
Target 
Compromised, 
C2
8
Lateral Infection vs. C2
Lateral Infection is not the same as C2!
Lateral Infection focuses on Three Phases:
− Introsection: Local device scanning
− Network Scanning: mapping the network for 
potential targets and pivot points.
− Exploit and Spread:  Compromise other assets.
− LI typically involves using native networking 
protocols to scan and spread within an 
organization (e.g. Locky using SMB to infect file 
shares)
Lateral Infection is typically East / West by 
definition vs. North / South
Datacenter
Workstation
Workstation
C2
Lateral
Internet
9
Lateral Infection vs. C2 Continued
C2 is typically North / South
C2 will be less likely to be native enterprise networking protocols (e.g. AD 
protocols) and instead HTTP/SSL, custom application stacks, or outright custom 
channels such as encrypted channels.
C2 is often more evasive than LI
− This is primarily because with C2 the attacker controls both sides of the communication, 
where with LI they only control the client!
10
Exfiltration
This phase is where the malware 
delivers on it’s intended purpose
Exfiltrated data often includes 
stealing intellectual property, 
exposing attributes of a target 
network, or larger escalation of 
an attack.
May or may not leverage the 
standard C2 infrastructure 
including control channels, C2 
servers &c.
May be possible to fingerprint 
activity heuristically
11
Targeted vs. Crimeware
At a high level we can categorize malware into two families, Crimeware and 
Targeted.  
− Crimeware:  This is malware that is often general purpose and widely distributed.  Often as 
part of exploit kits and mass mailing campaigns.
− Targeted:  This is malware that is custom built to target individual organizations or a small 
subset of targets often within a specific vertical.
Under Targeted Malware there is a third category which is Targeted Espionage which is typically 
much more advanced.
12
Crimeware vs. Targeted
Crimeware:
General Purpose
Widely distributed
Go to greater lengths to 
evade detection from a 
protocol perspective
Yet quite chatty on C2 
channels
Targeted:
Highly selective victims
Will be custom built to 
navigate individual 
networks, common 
platforms.
Often does not go to great 
lengths from an obfuscation 
perspective
Targeted Espionage:
Most exotic form of malware
Far more sophisticated than 
traditional targeted.  
May lack network based C2 
channels altogether.
May leverage insiders as 
well as covert HW to bridge 
air gaps.
13
Cat and Mouse 
Early malware just used fixed non-standard ports to communicate e.g. Back Orifice 
1998).
Early malware often heavily leveraged IRC channels for a simple C2 infrastructure 
e.g. PrettyPark (1999)
As organizations tamped down on allowing ports outside of TCP 80/443 to 
communicate to the internet, so did malware evolve.
At the time, the malware just took advantage of the fact that stateful firewalls didn’t 
look beyond the L4 header to allow traffic to communicate out of the network.
Layer 3 Network Layer (IP)
Layer 4 Transport Layer (TCP/UDP)
Layer 7 Network Application Layer (HTTP)
Layer [8] Software Application Layer (Dropbox)
Layer [9] Content Layer (Docs, HTML)
Access List
Stateful Firewall
NGFW/IPS
Sandbox/Execution
CASB
Enter the Stateful Firewall which leveraged Layer 7 payload inspection (similar to IPS) to identify 
applications rather than attacks.
Malware noted that keeping explicit strings in the payload would be easy to identify (e.g. GhostRat).  
The same is true for potentially unwanted applications like Bittorent / Tor / Skype which also leveraged 
evasion techniques.
To evade NGFW and other deep inspection technologies, malware shifted to leverage steganographic
techniques to hide in plain sight.  E.g. Sninfs
Finally, malware has evolved even further to leverage highly obfuscated and embedded communication channels like jpgs, 
flash, encoded ASCII.
In addition to the advanced obfuscation, malware has gone to great lengths to hide itself in legitimate, cloud applications.
14
C2 Hosting
Early days C2 infrastructure was very fixed.  Similar to traditional computing, it was physical machines in data centers with
static IP’s.
While DNS was prominent, domain names for malware would not change very quickly.  
Configuration Updates via CNC
This weak link made for a great target for vendors providing defense mechanisms.  So malware evolved as well to domain 
generation algorithms (DGA’s) which could quickly cycle through generated domain names to eliminate single points of 
failure.  E.g. Conficker
The issue with DGA’s is that the algorithm can be reverse engineered, and it still relies on DNS. Enter P2P Mechanisms 
like GameOver-Zeus
To offset the potential disruptions for DGA’s, malware started leveraging common cloud services which enterprises are 
adverse to blocking as they may serve a business function. 
Timeline
Complexity
Static IP
DNS
Dynamic 
Configuration 
Updates
DGA
P2P
Common Cloud 
Services / Steg
15
C2 - Counter Defense Techniques
Attackers think economically, want their malware to last as long as possible thus 
bringing the most ROI.  
Botnet authors utilize several counter detection techniques to ensure the viability 
of their malware.
− Filter who can connect (e.g. IP filtering to eliminate non-targets, researchers and 
sandboxing tools.)  
− Secret Handshakes: E.g. leverage custom TCP stacks or special low level handshakes that 
only illicit responses if correct handshake is used (e.g. Poison Ivy)
− Encryption:  Predefined SSL Certificates embedded in malware for authenticating 
client/servers
− Steganography:  Hiding in plain sight, exceptionally difficult to detect, looks like standard 
legitimate apps and traffic.
16
Case Studies
Now that we’ve covered the background and evolution, let’s take a look at actual 
malware C2 channels to reinforce our examples.
Note that there are often a great many variants for each malware and some 
leverage different communication than the mainstream samples which we will 
cover.
17
Gh0stRAT
Basic C2 Protocol
Common strains support a 
basic non-encoded string in the 
PCAP.
‘Gh0st’ string in initial payload 
to identify malware
Non-Standard Port easily 
filterable
18
PoisonIvy
Unknown Encrypted, 256 Byte 
handshake
Does not contain explicit strings in 
handshake which are easy to key 
on.
Available since 2005, still very 
popular and little changed despite 
being in the wild so long.
256 Byte Handshake is exchanged 
in a CHAP like sequence.  Client 
sends a hello which allows the 
server to prevent it from 
communicating with an unknown 
client.
The server will only accept the client 
communication if it has been 
encrypted with the right password.
19
NanoLocker
Some malware leverage 
common network utilities 
and infrastructure to 
embed C2 functionality 
NanoLocker leverages 
ICMP to ping a hardcoded 
address 52.91.55.122 with 
an ICMP payload of the 
ransomware Bitcoin 
address.  It will also send 
follow up payloads of the 
number of files encrypted 
on the system.
20
GameOver/Zeus
GameOver / Zeus attempted to 
obfuscate its activities by 
leveraging P2P protocols to avoid 
single points of failure similar to 
how traditional P2P filesharing
services work (loosely based on 
Kademlia DHT techniques
Zeus leveraged basic rolling XOR 
for packet payloads to make 
signature based IDS difficult.  UDP 
Payloads
− Emphasizes the point that often 
times the malware authors will just 
attempt to stay one step ahead of 
security solutions rather than 
implement the most state of the art 
attacks.
21
Dridex using Pastebin as C2
Virtually any cloud service 
can be used for C2.  in this 
example Pastebin is 
leveraged.  
While sites like Pastebin
might be simple to turn off, 
Twitter, Amazon, and 
Facebook may have 
legitimate business 
purposes.
Malware may hide in 
comments, images, video 
and uploaded content.
22
ToR as a C2 Channel
After an initial infection, 
malware hops to TOR2Web 
a clientless TOR 
implementation for C2 
Activity
TOR allows botnet 
operators to evade 
communication snooping in 
intermediate systems.
23
AridViper
Targeted malware which leverages basic HTTP over standard ports to blend in.
This stream is composed of initial client registration to C2 server, along with post 
registration activity to validate interesting files on the system.
Arid Viper originally focused on Israeli targets 
24
Trends and Projections
Encryption:
− Let’s Encrypt could be huge game 
changer for malware
− Previously cost/overhead was high for 
SSL, Let’s Encrypt eliminates this 
limitation.
− Won’t impact state sponsored or targeted 
attacks much, but will impact Crimeware 
heavily.
Source: Let’s Encrypt:  https://letsencrypt.org/stats/
25
Advanced Steg ** Recorded Demo **
Steganography
− Hiding in plan site really is a 
powerful covert channel.  
− Attackers may choose to take 
techniques which are not 
computationally difficult to 
generate, but are computationally 
difficult to detect, especially in real 
time network streams.
− Sky is the limit, this could be a 
very interesting topic for future 
discussions all on it’s own.
26
Leveraging Cloud Apps
Hiding C2 in Cloud Apps
− This is likely to be a continuing trend.  It helps to solve the attacker challenge of hosting and 
potential blacklisting of standalone C2 infrastructure by overlaying it on top of cloud 
applications which often have business legitimacy.
− This makes it harder to detect and harder for organizations to take action on because they 
cannot block these apps.
− Puts the onus on Cloud providers to detect malicious activity.  The effectiveness will vary 
widely depending on how invested these providers are.
− Cloud apps can be deployed with little more than an email address, often free compute 
infrastructure for attackers!
27
IPv6
IPv6
− Today IPv4 is still the predominate routed protocol on the internet, 
particularly outside of APAC and universities.  This is changing
− IPv6 presents a big challenge because of the massive number of 
IPv6 addresses.  We will be looking to do more blacklisting based 
on networks rather than IP’s.  
− IPv6 also may expose weaknesses in security software that does 
not support it yet or has underlying flaws and vulnerabilities.
− It is enabled by default in virtually every modern OS!  Including 
IPv6inV4 Tunneling
Source: RFC 4213: https://tools.ietf.org/html/rfc4213, Nordmark and Gilligan
28
Layered Evasions
Layered Evasions
− Stacking numerous evasions from the IP level up the chain into the application layer to try 
to evade malicious activity detection by trying to fool detection capabilities (similar to 
traditional IDS layering evasion techniques.
IP Fragmentation
TCP Segment Overlaps
SSL Encryption
HTTP: Chunking, GZIP, Base64, 
Embedded Content (Encoding, Compression, 
Metadata, Dynamic Content)
IP Protocol 41 (IPv6 in IPv4 Tunnel)
29
C2 Detection Is Critical!
High fidelity Indicator
May prevent malware from successfully executing
May prevent escalation to attack other hosts inside/outside the network
May prevent sensitive data from making it out
Makes more hoops for the attacker to jump through and therefore more 
opportunities to make a mistake.
30
Defense Mechanisms Phase 1
Eliminate the Known Bad
− Block access to known bad IP’s, countries
− Block Access to Malicious Domains
Minimize the attack surface
− Restrict FW/NGFW to least privilege including
• Restrict Firewall Ports!, no any any any policy
• Block unnecessary / undesirable L7 applications with an NGFW
• Block unknown / unknown encrypted applications at the FW level with NGFW
• Block queries to known/suspicious DNS domains
31
Defense Mechanisms Phase 2
Fingerprint Known Malware
− Where possible, identify malware with both pattern matching and behavioral 
identification from a high fidelity source.  If you can accurately identify 
malware itself, then you can have a higher degree of confidence of an 
infection.
− Especially if you can identify the malware by it’s C2 channel
SSL Interception
− SSL Interception is an increasingly important function if it can be leveraged.
− It allows you to not only inspect encrypted streams, but also breaks any malware that uses 
predefined certificates.
− If you cannot do SSL interception, you can at least look at the network streams to try to 
fingerprint the certificate or identify anomalous SSL protocols.
32
Defense Mechanisms Phase 3
SSL Interception
− SSL Interception is an increasingly important function if it can be leveraged.
− It allows you to not only inspect encrypted streams, but also breaks any malware that uses 
predefined certificates.
− If you cannot do SSL interception, you can at least look at the network streams to try to 
fingerprint the certificate or identify anomalous SSL protocols
Known SSL Certs
− Where possible, use IDS or other technology to detect known malicious SSL certs which 
provide high fidelity indicators of an attack (even if SSL MiTM isn’t possible)
33
Defense Mechanisms Phase 3
Heuristics
− Pattern matching is not a perfect catch all for identifying suspicious activity due to highly 
evasive techniques.
− One high fidelity indicator of compromise can be to examine DNS data to try to identify 
domain generation algorithms used by modern malware.  
− Some IDS can also identify this activity, but placement is very important because it needs to 
be between the client and the DNS server, otherwise all attacks will look like they are 
coming from the DNS server.
Network Profiling
− Leveraging a network profiling IDS like BRO can also help to not only identify malicious 
activity but also to provide a strong audit trail in the event that a breach occurs.
34
Defense Mechanisms Closing the Loop 4
REVIEW YOUR SECURITY LOGS!
−
As we’ve seen with many high profile breaches, it is often the case that malicious activity is detected, 
but it isn’t acted upon.
−
Most off the shelf malware and attacks provide many IOC’s to key on which can be detected by freely 
available software and systems.
−
There are commercial and open source solutions available that can help to solve the problem of the 
signal to noise, auxiliary endpoint verification, and end to end IR containment.
35
Summary
Summary
− In modern computer security, it’s not a matter of if, but when, and what they will take, and 
how much it will cost you to deal with it.  The attack surface is simply too massive, to put all 
of your hopes in the fact that you might be able to keep malware out.  In taking the fight to 
the attackers, we need to be smart, and to holistically detect breaches.  Not only on the 
initial phases, but perhaps where the attackers are most exposed and we have the most 
defensive capabilities to detect them by detecting the C2 channels.  
− As we continue to up our game, we should expect that the malicious actors will do the 
same, and come up with even more creative ways to leverage the same technology which 
can be used for incredible good for their own malicious purposes.  But at the very least, we 
can keep them on their game, and further tip the economics of hacking by making their job 
that much harder. We’ll do it by exploiting them for a change; at their weakest point, the 
command and control channel.
36
Thank You’s!
37
Q&A