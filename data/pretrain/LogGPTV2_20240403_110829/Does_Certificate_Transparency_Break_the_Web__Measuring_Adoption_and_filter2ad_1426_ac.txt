time of writing, a blocked connection could occur because (a)
Chrome requires CT compliance for the website’s CA, or (b)
the website has opted into CT via the Expect-CT header.
1) Current impact: CT noncompliance currently imposes a
negligible end user impact. We consider Chrome metrics for
the week ending February 1, 2018. Of all HTTPS connections
and requests for which CT compliance was required, 100.0%
were successfully compliant. (Note that multiple HTTP re-
quests can share a single HTTPS connection.) CT compliance
failures represented 0.02% of all main-frame certiﬁcate errors
(that is, certiﬁcate errors that occur when loading the main
resource of a page). These CT-related main-frame errors
therefore make up a negligible fraction of all connections for
which CT compliance is required.
From late July 2018 onwards, Chrome began additionally
blocking connections when a website uses a noncompliant
certiﬁcate issued after April 2018 (Section II-C2). In the week
ending September 2, 2018, CT-compliance was required for
42.6% of connections, meaning that these connections would
be blocked if they were noncompliant. Of these connections
that were required to be CT-compliant, 99.5% were success-
fully compliant. Similarly, of HTTP requests for which CT
was required, 99.7% were compliant. CT compliance failures
represented 3.4% of all main-frame certiﬁcate errors during
this time.
2) Historical impact: Historically, even when new CT re-
quirements have gone into effect, the immediate user impact is
small. For example, in fall 2016, Chrome began requiring CT
compliance for certiﬁcates issued by the Symantec CA [14]. In
the week ending September 9, 2016, shortly after the enforce-
ment change was released to the Stable channel, CT errors
represented only 1.2% of all certiﬁcate errors. During this
time period, several popular websites were serving certiﬁcates
with malformed SCTs that Chrome rejected. This mishap was
due to an option provided by the CA to strip full domains
names from the certiﬁcates submitted to CT logs. The resulting
SCTs were not accepted by Chrome as valid. This option
was intended for private internal domains, but it was selected
accidentally by a number of large public websites [28].
Most instances of this error were quickly corrected: CT
errors had dropped to 0.3% of all certiﬁcate errors by the
week ending October 14, 2016.
3) Causes of blocked connections: CT-related breakage is
fairly rare, but when it does occur, it is most commonly
due to the name-stripping option discussed above, a CA
implementation error, or a lack of CA support for CT.
We examined CT-caused certiﬁcate errors from the certiﬁ-
cate error reports described in Section III-B. We used reports
for CT errors that occurred during the week ending July 2,
2018 for Chrome 67 and the week ending September 2, 2018
for Chrome 68, the current Stable releases during these weeks,
respectively.
The Chrome 67 dataset contained CT errors from 119
unique websites, and the Chrome 68 dataset contained 9,649.
We manually inspected the 10 websites that caused the most
CT errors during this week in each dataset. For privacy
TABLE III
THE CAUSES OF NONCOMPLIANCE AMONG THE TOP 10 WEBSITES THAT
CAUSE CT ERRORS IN CHROME, FOR THE WEEKS ENDING JULY 2, 2018
(CHROME 67) AND SEPTEMBER 2, 2018 (CHROME 68).
Chrome 67
Chrome 68
Name stripped
8
0
Not enough
Not diverse
SCTs
SCTs
1
0
No SCTs
0
10
1
0
reasons, we restricted this analysis to websites that had been
visited by Googlebot. We found the following four causes of
noncompliance, with the breakdown shown in Table III.
• Name stripping. These websites serve malformed SCTs
as part of the name stripping option described above.
• Not enough SCTs. These websites serve certiﬁcates with
embedded SCTs, but not enough of them as required by
the Chrome CT policy. (The policy requires a varying
number of embedded SCTs depending on the certiﬁcate
lifetime.) These errors likely represent a bug in the CA’s
implementation of CT.
• Not diverse SCTs. These websites serve certiﬁcates with
embedded SCTs, but they do not satisfy the log diversity
requirement of the Chrome CT policy (for example, the
SCTs come from all Google logs). Again, these errors
likely represent a bug in the CA’s implementation of CT.
• No SCTs. These websites do not serve SCTs at all,
indicating that their CAs have not yet implemented CT
support despite Chrome’s requirement.
B. EV downgrades
If an EV certiﬁcate is not compliant with Chrome’s CT
policy, Chrome removes the EV browser UI but does not block
the connection. This restriction went into effect in early 2015.
At the time of rollout, Chrome included a whitelist of EV
certiﬁcates that had appeared in CT logs as of January 1,
2015 but did not have embedded SCTs. Certiﬁcates on this
whitelist were treated as CT-compliant until June 2017, when
the whitelist was little-used enough that it was removed.
Chrome does not support EV on mobile platforms, so this
section only includes data from desktop Chrome.
1) Current
impact: Currently, EV downgrades are rare
but not unheard-of. In the week ending February 1, 2018,
EV status was removed for 1.0% of connections with EV
certiﬁcates. 90% of these removals were due to an insufﬁcient
number of SCTs, and the remaining 10% failed to meet the
log diversity requirement.
2) Historical impact: Since the EV CT requirement came
into effect, the frequency of EV downgrades has always been
low, as shown in Fig. 5. EV downgrades never exceeded 4% of
connections with EV certiﬁcates. This result is largely thanks
to the EV whitelist, which preserved the EV UI on more than
70% of connections initially and still accounted for about 7%
of EV connections a year later.
The Chrome EV plan was announced in September
2013 [29], but most CAs did not begin embedding SCTs
(cid:19)(cid:18)(cid:24)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:53:26 UTC from IEEE Xplore.  Restrictions apply. 
TOP ISSUERS OF EV CERTIFICATES WITHOUT EMBEDDED SCTS FROM
JANUARY 1, 2015 THROUGH JULY 6, 2018, AS OBSERVED BY CT LOGS.
TABLE IV
Issuing organization
Verizon Cybertrust Se-
curity
Symantec Corporation
SwissSign AG
Certplus
Cybertrust Japan Co.,
Ltd
StartCom CA
D-Trust GmbH
GlobalSign nv-sa
QuoVadis Limited
DigiCert Inc
Fig. 5. The CT-compliance of HTTPS connections with Extended Validation
certiﬁcates, as measured from Chrome from May 2015 through October 2017
(approximately the period during which the EV whitelist was in effect).
EV certiﬁcates
w/o SCTs
8550
Total EV
certiﬁcates % w/o SCTs
99.9%
8556
1923
1719
1391
1373
443
245
149
142
125
495528
1908
1391
24748
7356
725
52675
24398
210322
3.9%
90.1%
100.0%
5.5%
6.0%
33.8%
0.3%
0.6%
0.1%
VI. USER IMPACT
In this section, we measure the user impact of CT in two
key areas: the performance costs of SCT validation and the
user experience when CT causes errors or breakage.
A. Performance
SCT validation in Chrome. CT was designed to minimize
performance impact by allowing clients to verify public key
signatures from logs rather than blocking connections while
communicating with the logs directly. In Chrome 69, SCT
validation has a moderate performance impact compared to
certiﬁcate validation.
For the week ending September 24, 2018, among HTTPS
connections with SCTs, 99% of SCT validations complete in
under 13.3 milliseconds, with a mean of 1.9 and median of
1.1 milliseconds. In comparison, certiﬁcate validations take 88
milliseconds on average, with a median of 14 milliseconds.
Chrome caches the results of certiﬁcate validations, so the
actual time spent validating certiﬁcates when setting up an
HTTPS connection is 18 milliseconds on average, with a
median of less than 1 millisecond. A similar optimization
could be applied to SCT validation to reduce the performance
impact of CT. In this design, Chrome would cache the results
of SCT validations and would not repeat validation for the
same set of certiﬁcate and SCTs when it has a result cached
already.
Performance issues in Firefox. Firefox’s experimental CT
implementation has been blocked for over a year on an
unresolved performance regression [32]. The underlying cause
is not yet clear, and signiﬁcant investigation and investment
is needed before Firefox’s CT code will be enabled by
default [33]. This issue demonstrates that CT deployment is a
substantial investment for browser implementers, a hurdle that
we discuss further in Section IX-B.
B. User Experience of Errors
Though users encounter CT errors rarely, they react to them
in unsafe ways. These behaviors are especially concerning
because CT errors tend to occur on security-sensitive sites.
Fig. 6. The percentage of EV certiﬁcates issued each day with embedded
SCTs, as observed in CT logs. After January 1, 2015, Chrome required all
EV certiﬁcates to be logged.
into EV certiﬁcates until the month before the January 2015
deadline. Fig. 6 shows the percentage of EV certiﬁcates issued
each day with embedded SCTs, as observed in CT logs.
Some CAs continued to issue EV certiﬁcates after January
2015 without embedded SCTs, even though these certiﬁcates
would not receive EV UI treatment unless the site owner
served SCTs themselves via TLS extension or OCSP response.
Table IV shows the count of EV certiﬁcates issued after
January 1, 2015 without embedded SCTs, grouped by issuing
organization. Some organizations are combined because they
represent the same corporate entity. (For example, the issuer
organization names “GeoTrust Inc.”, “VeriSign, Inc.”, and
“Symantec Corporation” were all Symantec brands during
this time period, so they are all combined under “Symantec
Corporation”.) The table shows the 10 organizations that have
issued the most EV certiﬁcates without embedded SCTs.
Fortunately, the end user impact of these certiﬁcates has
been low, perhaps because they are used on less popular
websites or on websites that are not accessed by Chrome users.
We also note that prior work suggests that users may not even
notice the absence of an EV indicator [30], [31].
(cid:19)(cid:18)(cid:25)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:53:26 UTC from IEEE Xplore.  Restrictions apply. 
1) Error clickthrough: Users bypass CT errors, choosing to
proceed in spite of the security warning, at a much higher rate
than certiﬁcate errors in general. We note that the error UI
is nearly identical across all types of certiﬁcate errors, and
that prior work has been successful at improving the UI’s
adherence but not comprehension [34].
In the week ending July 2, 2018, users proceeded through
47.8% of CT errors shown in Chrome 67, compared to 28.0%
of all bypassable certiﬁcate errors8. (For comparison, users
proceeded through 4.9% of Safe Browsing errors that warn
about phishing or malware.)
Similarly, in Chrome 68, which began enforcing CT for
newly issued certiﬁcates. During the week ending September
2, 2018, when Chrome 68 was the current Stable release, users
proceeded through 49.0% of CT errors, compared to 28.2%
of all bypassable certiﬁcate errors.
This ﬁnding underscores the need to deploy CT gradually
with minimal breakage. Otherwise, users might learn to bypass
certiﬁcate errors whenever they see them, undermining the
security beneﬁts of CT and of HTTPS in general.
2) Types of affected sites: Users experience CT errors most
often on websites in important, security-sensitive domains,
such as government portals and ﬁnancial services. We manu-
ally categorized the top 10 websites that caused CT errors in
Chrome from Table III. For the Chrome 67 websites, four
were ﬁnancial services, two were enterprise administrative
portals, and one was a government site. Three lacked sufﬁcient
information for us to be able to categorize them. Of the
Chrome 68 websites, eight were government sites, one was
a corporate login portal, and one could not be categorized.
The Chrome 68 results are consistent with prior ﬁndings that
government websites are disproportionately responsible for
certiﬁcate errors in Chrome [18].
3) Help forum case studies: To further understand how CT
errors impact end users, we reviewed CT-related posts in the
Chrome product help forum as described in Section III-E. The
Appendix contains the full results of our coding procedure.
Many of the help forum posts came from a Chrome bug
during fall 2016. Out-of-date Chrome builds exhibited this
bug by showing CT errors for large numbers of websites that
were correctly CT-logged [35]. This incident, while not a CT
compliance issue, provides insight into how users react to
widespread CT errors, and also demonstrates the complexity
of building web browser support for CT (Section IX-B).
Incorrect solutions. 60% of threads were labelled as “In-
correct ﬁx or explanation suggested or tried, or issue was
perceived to be solved by something unrelated”. (For com-
parison, CT was correctly identiﬁed as the source of the issue
in 41% of the threads.) Users commonly disabled antivirus
software, checked system date settings, or disabled extensions
in an attempt to ﬁx the error.
I have tried resetting to default settings (so disabling
all extensions). [36]
8The Chrome error UI does not allow users to bypass certiﬁcate erorrs on
sites with certain security settings, such as HTTP Strict Transport Security.
In these scenarios, users lose their data and settings without
resolving the issue. Users might also end up in a less secure
state, for example by disabling extensions that make their
browsing more secure.
Bypassing errors. Users bypassed CT errors by clicking
through the warning or by trying different browsers. In 8%
of the threads, users mentioned that they clicked through the
warning or tried to, and in 19% of the threads, users noted that
affected websites worked in other browsers, or that they would
even consistently use another browser to access the affected
sites:
I had to download another browser, which im start-
ing to like. [36]
These responses show that browsers take a ﬁrst-mover
risk by implementing new security requirements such as CT:
breakage could cause users to switch to other browsers. The
tendency to switch browsers also demonstrates that other
browsers must adopt CT in order for CT to have its intended
security beneﬁts. Otherwise, in an attack that uses a noncom-
pliant certiﬁcate, users might simply ignore the warning and
switch to another browser that leaves them vulnerable.
Poor user experience. In 9% of threads, users expressed
anger, frustration, or impatience, and in 9%, they mentioned
a speciﬁc task (such as homework or bill-paying) that they
could not complete because of the error:
This makes it nearly impossible to manage bills. [37]
These threads demonstrate the generally poor user experi-