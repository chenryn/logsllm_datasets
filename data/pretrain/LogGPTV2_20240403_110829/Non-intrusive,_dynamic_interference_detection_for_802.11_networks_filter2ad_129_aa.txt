title:Non-intrusive, dynamic interference detection for 802.11 networks
author:Kan Cai and
Michael Blackstock and
Michael J. Feeley and
Charles Krasic
Non-Intrusive, Dynamic Interference Detection
for 802.11 Networks
Kan Cai, Michael Blackstock, Michael J. Feeley and Charles Krasic
Dept. of Computer Science, University of British Columbia
Vancouver, B.C., Canada
{kcai, michael, feeley, krasic}@cs.ubc.ca
ABSTRACT
In densely packed 802.11 environments, access-point do-
mains signiﬁcantly overlap and wireless hosts interfere with
each other in complex ways. Knowing which devices inter-
fere is an essential ﬁrst step to minimizing this interference,
improving eﬃciency and delivering quality connectivity
throughout the network. This knowledge, however, is ex-
tremely diﬃcult to obtain without either taking a running
network oﬄine for measurements or having client hosts
monitor and report airspace anomalies, something typically
outside the control of network administrators.
In this paper we describe a technique we have developed to
reveal wireless-network interference relationships by exam-
ining the network traﬃc at wired routers that connects wire-
less domains to the Internet. This approach, which we call
VOID (Vvirless Online Interference Detection), searches for
correlated throughput changes that occur when traﬃc from
one node causes a throughput drop at other nodes in its ra-
dio range. In one analysis round we identify each node’s in-
terference neighbours using a single set of performance data
collected from a wired-network router. We have evaluated
VOID in Emulab testbeds consisting of tens of nodes as well
as a six-node testbed in a live wireless network. The initial
results have shown the promise of VOID to accurately corre-
late interfering devices together and eﬀectively discriminate
interfering devices from non-interfering ones.
Categories and Subject Descriptors
C.2.1 [Network Architecture and Design]: Wireless
communication; C.2.3 [Network Operations]: Network
monitoring; C.4 [PERFORMANCE OF SYSTEMS]:
Measurement techniques
General Terms
Measurement, Experimentation
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
Keywords
802.11, Online Interference Detection, Multiple Regression
1.
INTRODUCTION
Wireless network administrators are often baﬄed by one
question: given a device that is experiencing signiﬁcant per-
formance degradation, which nearby devices are the current
interferers? The state-of-the-art approach to estimate in-
terference relationships is to take the network temporarily
oﬄine and to inject synthetic traﬃc for interference mea-
surements [14, 17, 18, 19, 16]. Each node in turn sends
unicast or broadcast packets into the airspace while other
nodes record information such as signal strength and packet
delivery ratios. These measurements are then used to seed
various interference models [19, 14, 18] to predict network
performance at run-time.
In this paper, we present VOID (Vvireless Online Interfer-
ence Detector), an approach that utilizes statistical methods
to recognize the interference patterns from online per-node
throughput summaries taken from upstream wired routers.
It requires no network proﬁling. Its methodology is based
on the observation that, when the airspace is congested,
changes in a victim node’s throughput is more tightly re-
lated to its interferers than other irrelevant devices. The
pattern is that a victim node sends more when its interfer-
ers send less and vice versa.
VOID only requires information available at the wired net-
work, needing neither cooperation from the end-user devices
nor modiﬁcations to the access points. The core of VOID is
a statistical interference correlation engine based on multiple
regression, which can detect multiple interferers to a victim
node in just one measurement round. Therefore, VOID is
capable of producing an interference map in real time, re-
quiring only a few seconds to identify the interferers in a
medium-sized network consisting of tens of devices.
All these beneﬁts are derived from the key diﬀerence be-
tween VOID and prior work: VOID does not directly mea-
sure the impact of RF characteristics on interference in a
given network, rather it statistically infers interference re-
lationships by measuring throughput changes in the upper
network layer.
However, note that VOID is not designed to produce
the static physical-layer interference map as the oﬄine
approaches do. Rather, its goal is to ﬁnd the culprits of
throughput degradation for a victim device at a given time.
Even when a static interference map indicates that it is
possible for a device to interfere with a victim, VOID does
not necessarily ﬂag it as long as it is not currently causing
377the drop in performance for the victim (when it is not
sending data, for example). The interference map VOID
produces is dynamic;
it depends on the current network
topology or traﬃc proﬁle, and is often a subset of the static
interference map.
We have evaluated VOID in a variety of multi-hop, multi-
ﬂow scenarios using Emulab wireless testbed [22]. These
results demonstrate that VOID is eﬀective in ﬁnding true
interferers and ﬁltering out false ones. We have also set up
a controlled testbed, consisting of three competing ﬂows, in
a campus residential wireless network to show the promise
of VOID by identifying these competing ﬂows in presence of
other live traﬃc.
2. RELATED WORK
Correct understanding of the interference relationship is
important since it is the input to many techniques [10, 13,
11, 20, 21, 6, 9] available to administrators to reduce inter-
ference, improve network capacity as well as helping nodes
to achieve their fair bandwidth allocation in the network.
These techniques include power adaptation [6, 9], channel
hopping [9, 11, 6] and user re-association [9] at APs, or traf-
ﬁc scheduling [7, 13] and throttling [10] at central routers.
Our interference detection work is inspired by much of
the prior research work on measurement-based interference
maps. The state-of-the-art approaches [18, 14, 19] to es-
timate interference relationships are to proﬁle the network
ﬁrst, using measurements to accurately capture the RF char-
acteristics of a given wireless network. The measurement
results are then used to seed a variety of interference mod-
els such as RSSI/PDR [19], 802.11 state machine [14] or
Markov chains [18] to predict run-time performance given
traﬃc input.
While these approaches can produce accurate static inter-
ference maps, they have several drawbacks. First, it can be
diﬃcult or impossible for an administrator to gain control
of all the wireless devices and take the network completely
oﬄine for measurement. Second, the interference map may
change over time, requiring these measurements to be taken
periodically to capture these changes. Finally, network pro-
ﬁling is quite time consuming, requiring a few hours for a
moderate-size network consisting of only 20 nodes [19, 17].
Recent work from Vutukuru et. al. [21] uses online traﬃc
to generate the conﬂict graph for a network. A sender main-
tains a local conﬂict table, updated by the feedback (packet
delivery probability) from its receiver. This table is then ex-
changed among senders and used to suggest if two senders
can send simultaneously. More recent work from Ahmed
et. al [5] uses a technique called micro-probing to silent
the network ﬁrst (using CTS-to-self packets) and then take
brief measurements between AP pairs. These approaches,
however, still require driver and protocol modiﬁcation and
cooperation from both APs and mobile clients.
3. METHODOLOGY
VOID uses a statistical method called multiple linear re-
gression (MLR) to correlate interfering devices by recogniz-
ing the interference patterns (throughput changes) from the
wired logs collected at the central routers. In this section,
we describe its methodology in detail.
3.1 Interference Patterns Under Congestion
The causes of signal interference can be quite complex to
analyze in real networks, since they depend on transmis-
sion power, signal propagation and node topology. From
the perspective of the network layer, however, the changes
in underlying interference relationships can be reﬂected in
changes to network throughput.
Given a victim node and its interferers, these interference
patterns are: as the interferers’ throughputs increase, the
victim’s decreases and on the other hand, when the inter-
ferers’ throughputs decrease, the victim’s increases. VOID
exploits this correlation to infer interference relationship by
searching for these patterns in the wired trace. Note that,
however, these patterns only occur when the wireless network
is congested. Previous work [10] has shown that the through-
put of the victim node will not drop as long as the overall
network traﬃc does not exceed the network capacity. This is
because, when the airspace is not completely congested, the
MAC-layer and TCP packet recovery schemes are capable
of salvaging dropped packets themselves. The victim node
can use the airspace when interfering nodes are idle.
3.2 Statistical Methods
In VOID, we assume interference relationships are linear,
that is, the throughput that the victim node can achieve is
approximately linearly related to the (negative) throughputs
of its interferers. When adding a new interferer into the
network, its throughput will cause an additional degradation
in the victim node’s throughput in the presence of other
existing interferers.
Note that this linear interference model is not intended
to reﬂect the true MAC-layer interference interactions —
MAC-layer retransmission, exponential back-oﬀ and inter-
ference summarization could lead to a much more compli-
cated model. Rather, this linear model is a simpliﬁed in-
terference estimation over a series of IP-layer throughput-
change samples, each measured within a time window of tens
of milliseconds to seconds.
Let us consider one victim node and one of its interferers
for analysis.
If the victim node can sense the interferer’s
signal, then it has to back oﬀ while the interferer is trans-
mitting. On the other hand, if the interferer is a hidden
terminal to the victim node, then the victim’s packets will
be corrupted by the interferer’s signal. In either case, the
MAC-layer interference can be reﬂected by the correlated
throughput changes at the upper IP layer: an increase in
the interferer’s throughput and a corresponding drop in the
victim’s, or vice versa. The linear regression engine is thus
used to search for these throughput-change patterns in the
trace and use them to measure, on average in the given time
window, how much damage each of the interferers has caused
to the victim node’s throughput. If due to any reason that
two devices’ throughput changes do not seem to be coor-
dinated, then they will not identiﬁed as interfering even if
they do. We will discuss these scenarios later in Section 5.
In this section, we give an overview of the statistical meth-
ods applied to VOID’s context, without stating the formulas.
Please refer to [8, 15] for formal deﬁnitions and equations of
these statistical terms.
3.2.1 Identifying Interferers Using Regression
To identify the eﬀect of k potential interferers (I1, I2, . . . , Ik)
on a victim node (V ), we assume a linear relationship be-
378tween their throughput values.
If we let the throughputs
of the interferers be (x1, x2, . . . , xk) and that of the victim
node be y, this linear relationship is expressed in Equa-
tion 1. We sample these variables n times and feed the
values into Equation 1 to estimate the coeﬃcients β. Each
sample may also introduce independent error , a variable
assumed with mean zero and constant variance.
yi = β0 + β1x1i + β2x2i + . . . + βkxki + i (i = 1, . . . , n)
(1)
β0 indicates the throughput the victim node would achieve
if all the other interferers are idle, while βi suggests the
additional impact of potential interferer Ii on the victim
node’s throughput when other interferers’ throughputs are
held constant.
If Ii is currently interfering with a victim node (i.e. a
true interferer), then βi should be a negative number. If βi
is close to 0 or a positive number, then Ii may be a false
interferer. A positive number indicates that Ii may in fact
be helping the victim node by reducing the throughputs of
other interferers.
Determining The Best Fit.
The coeﬃcient of determination, R2, measures how well a
regression model ﬁts the sampled data. It is a value between
0 and 1; the higher value R2 is, the better the data ﬁts our
linear model. In VOID, for example, when R2 equals 0.9,
this suggests 90% of the victim node’s throughput change
(y) can be explained by changes in the potential interferers’
throughputs (X).
The F-test is another statistical metric used to test the
signiﬁcance of these interferers in the ﬁnal MLR model. Its
value is based on three parameters: (1) R, (2) the number
of samples and (3) the number of interferers. Given a F-test
value Fv, the F-test probability is used to measure the prob-
ability of F > Fv. The lower value this F-test probability
value is, the better ﬁt this model is.
Detecting Interferers.
The interferers included in the initial multiple regression
model are only the candidates; the resulting regression
model might contain false interferers that contribute little
or nothing to the victim’s throughput variation. Two
statistical metrics called Partial regression (Ri) and F-test