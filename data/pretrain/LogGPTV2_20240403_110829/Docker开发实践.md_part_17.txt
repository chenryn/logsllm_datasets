5
按照提示我们运行docker –d命令，又出现了以下的错误：
root@iZ94nflqok7Z:~# docker -d
6
INFO[0000] +job serveapi(unix:///var/run/docker.sock)
INFO[0000] Listening for HTTP on unix (/var/run/docker.sock)
INFO[0000] +job init_networkdriver()
7
Could not find a free IP address range for interface 'docker0'. Please configure its address manually
and run 'docker -b docker0'
INFO[0000] -job init_networkdriver() = ERR (1)
8
FATA[0000] Could not find a free IP address range for interface 'docker0'. Please configure its address
manually and run 'docker -b docker0'
8
这是由于Docker服务有可能和内网的网卡地址冲突了，此时使用以下命令删除冲突地址
即可：
10
sudo route del -net 172.16.0.0 netmask 255.240.0.0
可是这个时候，我们又会遇到另一个错误： 10
root@iZ94nflqok7Z:~# docker pull registry.mirrors.aliyuncs.com/library/ubuntu
FATA[0005] Error: Invalid registry endpoint https://registry.mirrors.aliyuncs.com/v1/: Get 11
https://registry.mirrors.aliyuncs.com/v1/_ping: dial tcp 10.157.230.35:443: i/o timeout. If this
private registry supports only HTTP or HTTPS with an unknown CA certificate, please add
`--insecure-registry registry.mirrors.aliyuncs.com` to the daemon's arguments. In the case of HTTPS, 13
if you have access to the registry's CA certificate, no need for the flag; simply place the CA
certificate at /etc/docker/certs.d/registry.mirrors.aliyuncs.com/ca.crt
14
此时我们需要将registry.mirrors.aliyuncs.com这个域加入到非安全通信域。修改/etc/default/
docker文件，添加--insecure-registry registry.mirrors.aliyuncs.com到DOCKER_OPTS，如下：
15
DOCKER_OPTS="--insecure-registry registry.mirrors.aliyuncs.com"
然后重启Docker服务即可： 16
root@iZ94nflqok7Z:~# service docker restart
stop: Unknown instance: 17
docker start/running, process 8646
root@iZ94nflqok7Z:~# docker pull registry.mirrors.aliyuncs.com/library/ubuntu:latest
Pulling repository registry.mirrors.aliyuncs.com/library/ubuntu:latest 18
102 第8章 阿里云Docker开发实践
...(略)
root@iZ94nflqok7Z:~# docker images
REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE
registry.mirrors.aliyuncs.com/library/ubuntu latest b39b81afc8ca 9 days ago 188.3 MB
我们发现使用registry.mirrors.aliyuncs.com注册服务器拉取镜像的速度要比到Docker Hub
上拉取镜像的速度快很多。
8.2 部署镜像注册服务器
为了方便项目相关人员协作开发和共享镜像，企业或组织可以使用Docker Hub作为自己的私
有镜像注册服务器，也可以在阿里云ECS云服务器上部署自己的私有镜像注册服务器。作为国内
用户，后者是更值得推荐的一种方法。目前，官方的docker-registry镜像尚不支持阿里云的OSS
存储。幸运的是，个人贡献者Chris给docker-registry专门开发了支持阿里云OSS的驱动，并将其
制作成了Docker镜像。使用这个注册服务器镜像，我们已经能轻松地将镜像存储到阿里云OSS上
了。本镜像的Docker Hub网址是https://registry.hub.docker.com/u/chrisjin/registry/。
OSS（Open Storage Service，开放存储服务）是阿里云对外提供的海量、安全和高可靠的云
存储服务，如图8-5所示。鉴于OSS在存储方面的诸多优良特性，在搭建私有注册服务器时，我们也
推荐使用OSS作为镜像的存储服务。阿里云OSS服务的开通网址为http://www.aliyun.com/product/oss/。
图8-5 阿里云OSS
开通OSS服务之后，我们会得到OSS_BUCKET、STORAGE_PATH和OSS_SECRET。使用支持OSS的
docker-registry，我们就能轻松地在ECS上部署存储在OSS上的注册服务器：
8.3 开发 103
docker run -e OSS_BUCKET= -e STORAGE_PATH=/docker/ -e
1
OSS_KEY= -e OSS_SECRET= -p 5000:5000 -d
chrisjin/registry:ali_oss
如果不使用chrisjin/registry:ali_oss，而是从https://github.com/docker/docker-registry下载 2
官方的docker-registry，通过下面的步骤也能轻松支持OSS。
3
通过pip命令安装OSS驱动：
pip install docker-registry-driver-alioss
4
然后配置config.yml：
5
local: &local
你好，多克！"
res.send(str);
});
app.listen(PORT);
上面的源码仅仅实现了一个/node-web-api/show接口。
 Node包文件package.json。其源码如下：
{
"name": "Docker-Node-Web-APP",
"private": true,
"version": "0.0.1",
"description": "Docker Node Web APP",
"author": "xixihe ",
"dependencies": {
"express": "4.11.0",
}
}
8.3.2 制作和上传镜像
开发人员在自己的机器或者ECS服务器上完成开发之后，接下来应该将项目打包成镜像并自
测它。一切就绪后，就可以将镜像推送至服务器上，并向测试工程师发出提测请求。提测请求中
应该写明该镜像的修改点、启动方式、镜像存储在镜像服务器的位置及项目相关的信息。
进入AliNode文件夹，编写Dockerfile文件，全部内容如下：
# 定义基础镜像
FROM registry.mirrors.aliyuncs.com/library/ubuntu:latest
# 安装Node.js
RUN apt-get update
RUN apt-get install curl
RUN curl -sL https://deb.nodesource.com/setup | sudo bash -
RUN apt-get update
RUN apt-get install -y nodejs
RUN apt-get install -y npm
#复制项目源文件到镜像
COPY ./index.js /src
COPY ./package.json /src
#进入项目源文件目录，使用NPM安装项目依赖库
RUN cd /src; npm install;
#暴露项目所监听的端口
EXPOSE 8080
#定义项目执行入口
CMD ["nodejs", "/src/index.js"]
使用build命令构建镜像并上传至我们的私有注册服务器上：
# docker build -t 120.24.159.50:5000/node-web-api:v1 .
...(略)
8.5 部署 105
# docker images
1
# docker build push 120.24.159.50:5000/node-web-api:v1
...(略)
2
8.4 测试
3
在开始测试之前，测试工程师首先需要确保自己的测试机上已经安装了Docker并且它正处于
运行状态。在必要的情况下，需要保证Docker的版本与最终的生产环境一致。相关操作可以参考 4
第1章。
由于Docker的跨平台特性，理论上测试工程师可以使用Windows、Linux（Ubuntu和CentOS 5
等）、Mac OS中的任意一个作为测试平台，但为了保证与最终生产网络环境的一致性，最终仍有
必要使用ECS机器作为测试机。 6
测试环境搭建好后，根据测试请求里说明的镜像地址拉取镜像，并按要求运行，根据镜像的
7
目的测试所实现的业务。
如果在测试的过程中发现bug或不符合需求，应该尽快反馈给开发人员。开发人员修正后，
8
重新将镜像推送到注册服务器，测试人员从镜像库拉取最新修改的镜像继续测试。反复几轮后，
直到达到可发布的版本。最后，测试人员发布测试合格报告，并注明最终的镜像版本。
8
如果有多个测试工程师同时测试，各自使用自己的测试容器，还能保证测试之间不被干扰。
10
8.5 部署
10
运维工程师在收到测试工程师的测试报告及发布请求后，使用SSH登录到目标发布ECS主机。
首先，运维工程师需要验证阿里云弹性机器是否安装了Docker服务、Docker服务版本是否符合需 11
求、Docker服务是否已经启动，具体操作可参考第1章。接下来，从私有镜像注册服务器拉取测
试报告里注明的最终测试通过的镜像，并运行它。此时，我们的node-web-api服务就已经成功发 13
布到了外网。
由于某些原因，我们不再需要对外提供web-api服务了，运维工程师只要使用docker stop命 14
令停止运行的容器就行了。同时，在有需要的情况下，运维人员也能使用docker start快速从容
器中恢复服务。图8-6展示了本章实践的大致流程。 15
16
17
18
106 第8章 阿里云Docker开发实践
图8-6 ECS Docker实践指示（摘自阿里云官网）
9.1 初始化阿里云Docker环境 107
1
第 9 章 2
在阿里云上部署WordPress
3
4
5
WordPress是一个基于PHP语言和MySQL数据库实现的免费开源的博客系统及内容管理系
统。它拥有强大的插件系统架构和主题模板系统，不但可以用做美观、易用的个人博客网站，还 6
能用来构建功能强大的网络信息发布平台。全世界Alexa排行前100万的网站中，就有超过16.7%
的网站使用WordPress。它已经成为目前因特网上最流行的博客系统。 7
当我们准备以WordPress来搭建一个个人博客网站时，通常需要安装和准备以下几个模块：
9
Apache 2、PHP 5、MySQL、WordPress源码包。依赖软件和源码包准备就绪后，还需完成一系列
繁杂的配置操作，比如WordPress要连接的数据库、Apache的PHP加载模块、Apache URL重写支
9
持等。除了安装复杂外，它在隔离性、安全性、资源限制和后期管理等方面也存在诸多挑战，而
这些问题在Docker容器技术出现后有了明显改观。
10
本章将介绍如何在阿里云上使用Docker技术来部署个人博客网站。相比传统的部署方式，我
们将体验到使用Docker技术的简单与快捷。本章主要内容包括：
10
 初始化阿里云环境，主要是主机环境的配置；
 部署MySQL容器；
11
 部署WordPress容器。
13
9.1 初始化阿里云 Docker 环境
14
首先，登录到阿里云的官网（http://www.aliyun.com/），购买ECS主机。图9-1展示了ECS选项
配置界面。用作个人博客站点的网站，我们选用图9-1展示的配置即可，性价比相对较高。因为
15
我们将同时运行两个容器服务（MySQL和WordPress），为了保证性能，内存需要选择1GB或以上。
另外，某些Docker镜像以默认配置在低内存状态下运行会出现异常，如MySQL。在选择系统镜
16
像时，我们直接从镜像市场中选择Docker运行环境（Ubuntu 64位）镜像，这样可省去Docker繁杂
的安装配置过程。
17
mysql和wordpress镜像的官方地址分别是https://registry.hub.docker.com/_/mysql/和https://registry.
hub.docker.com/u/library/wordpress/。 18
108 第9章 在阿里云上部署WordPress
图9-1 购买ECS选项界面
我们可以直接从阿里云提供的注册服务器拉取mysql和wordpress镜像。因为使用的是阿里云
内部连接，这比到国外的Docker Hub上拉取镜像要快很多。以下代码展示了具体的操作过程：
9.3 部署WordPress容器 109
root@iZ94nflqok7Z:~# docker pull registry.mirrors.aliyuncs.com/library/mysql:latest
1
Pulling repository registry.mirrors.aliyuncs.com/library/mysql
...(略)
Status: Downloaded newer image for registry.mirrors.aliyuncs.com/library/mysql:latest
2
root@iZ94nflqok7Z:~# docker pull registry.mirrors.aliyuncs.com/library/wordpress:latest
Pulling repository registry.mirrors.aliyuncs.com/library/wordpress
...(略)
3
Status: Downloaded newer image for registry.mirrors.aliyuncs.com/library/wordpress:latest
4
9.2 部署 MySQL 容器
MySQL是全世界最流行的开源的关系型数据库管理系统，特别适用于网络应用程序，常与 5
Linux、Apache、PHP搭配成为目前最流行的Web后台开发技术栈之一，合并称为LAMP。而
WordPress也正是典型的基于LAMP技术栈开发的Web系统。我们仅需要下面的一条命令就能启动 6