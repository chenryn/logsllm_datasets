gestion control algorithm by modifying the vSwitch.
Virtualized congestion control vCC [15] is a concurrently
designed system that shares AC(cid:69)DC’s goals and some of its
design details. The paper is complementary in that some
items not addressed in this work are presented, such as a
more detailed analysis of the ECN-coexistence problem, an
exploration of the design space, and a theoretical proof of
virtualized congestion control’s correctness. Our paper pro-
vides an in-depth design and thorough evaluation of a DCTCP-
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.1 1 10 100CDFFlow Completion Time (milliseconds)CUBICDCTCPAC/DC 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.1 1 10 100CDFFlow Completion Time (milliseconds)CUBICDCTCPAC/DCbased virtualized congestion control algorithm on a 10 Gbps
testbed.
7. CONCLUSION
Today’s datacenters host a variety of VMs (virtual ma-
chines) in order to support a diverse set of tenant services.
Datacenter operators typically invest signiﬁcant resources in
optimizing their network fabric, but they cannot control one
of the most important components of avoiding congestion:
TCP’s congestion control algorithm in the VM. In this paper,
we present a technology that allows administrators to regain
control over arbitrary tenant TCP stacks by enforcing con-
gestion control in the vSwitch. Our scheme, called AC(cid:69)DC
TCP, requires no changes to VMs or network hardware. Our
approach is scalable, light-weight, ﬂexible and provides a
policing mechanism to deal with non-conforming ﬂows. In
our evaluation the CPU overhead is less than one percent-
age point and our scheme is shown to effectively enforce
an administrator-deﬁned congestion control algorithm over
a variety of tenant TCP stacks.
Acknowledgement
We would like to thank our shepherd Vishal Misra, Jeff Rasley,
Brent Stephens and the anonymous reviewers for their valu-
able feedback. This work is supported in part by National
Science Foundation (grants CNS-1302041, CNS-1330308
and CNS-1345249), IBM Corporation and the Wisconsin In-
stitute on Software-Deﬁned Datacenters of Madison.
References
[1] M. Al-Fares, S. Radhakrishnan, B. Raghavan, N. Huang, and
A. Vahdat. Hedera: Dynamic Flow Scheduling for Data
Center Networks. In NSDI, 2010.
[2] M. Alizadeh, T. Edsall, S. Dharmapurikar, R. Vaidyanathan,
K. Chu, A. Fingerhut, F. Matus, R. Pan, N. Yadav,
G. Varghese, et al. CONGA: Distributed Congestion-aware
Load Balancing for Datacenters. In SIGCOMM, 2014.
[3] M. Alizadeh, A. Greenberg, D. A. Maltz, J. Padhye, P. Patel,
B. Prabhakar, S. Sengupta, and M. Sridharan. Data Center
TCP (DCTCP). In SIGCOMM, 2010.
[4] M. Alizadeh, A. Kabbani, T. Edsall, B. Prabhakar, A. Vahdat,
and M. Yasuda. Less is More: Trading a Little Bandwidth
for Ultra-low Latency in the Data Center. In NSDI, 2012.
[5] M. Alizadeh, S. Yang, M. Sharif, S. Katti, N. McKeown,
B. Prabhakar, and S. Shenker. pFabric: Minimal
Near-Optimal Datacenter Transport. 2013.
[6] M. Allman, V. Paxson, and E. Blanton. TCP Congestion
Control. RFC 5681, 2009.
http://www.rfc-editor.org/rfc/rfc5681.txt.
[7] H. Balakrishnan, V. Padmanabhan, G. Fairhurst, and
M. Sooriyabandara. TCP Performance Implications of
Network Path Asymmetry. RFC 3449, 2002.
[8] H. Balakrishnan, S. Seshan, E. Amir, and R. H. Katz.
Improving TCP/IP Performance over Wireless Networks. In
MobiCom, 1995.
[9] M. Balakrishnan, T. Marian, K. Birman, H. Weatherspoon,
and E. Vollset. Maelstrom: Transparent Error Correction for
Lambda Networks. In NSDI, 2008.
[10] H. Ballani, P. Costa, T. Karagiannis, and A. Rowstron.
Towards Predictable Datacenter Networks. In SIGCOMM,
2011.
[11] S. Bensley, L. Eggert, D. Thaler, P. Balasubramanian, and
G. Judd. Datacenter TCP (DCTCP): TCP Congestion
Control for Datacenters. Internet-Draft
draft-ietf-tcpm-dctcp-01, 2015. http:
//www.ietf.org/internet-drafts/draft-ietf-tcpm-dctcp-01.txt.
[12] Boosting Data Transfer with TCP Ofﬂoad Engine
Technology. http://www.dell.com/downloads/global/power/
ps3q06-20060132-Broadcom.pdf.
[13] L. S. Brakmo, S. W. O’Malley, and L. L. Peterson. TCP
Vegas: New Techniques for Congestion Detection and
Avoidance. In SIGCOMM, 1994.
[14] J. Chu, N. Dukkipati, Y. Cheng, and M. Mathis. Increasing
TCP’s Initial Window. RFC 6928, 2013.
http://www.rfc-editor.org/rfc/rfc6928.txt.
[15] B. Cronkite-Ratcliff, A. Bergman, S. Vargaftik, M. Ravi,
N. McKeown, I. Abraham, and I. Keslassy. Virtualized
Congestion Control. In SIGCOMM, 2016.
[16] P. Davern, N. Nashid, C. J. Sreenan, and A. Zahran.
HTTPEP: A HTTP Performance Enhancing Proxy for
Satellite Systems. International Journal of Next-Generation
Computing, 2011.
[17] J. Dean and L. A. Barroso. The Tail at Scale.
Communications of the ACM, 2013.
[18] G. Dommety and K. Leung. Mobile IP
Vendor/Organization-Speciﬁc Extensions. RFC 3115, 2001.
[19] N. Dukkipati and N. McKeown. Why Flow-Completion
Time is the Right Metric for Congestion Control. ACM
SIGCOMM Computer Communication Review, 2006.
[20] T. Flach, N. Dukkipati, A. Terzis, B. Raghavan, N. Cardwell,
Y. Cheng, A. Jain, S. Hao, E. Katz-Bassett, and R. Govindan.
Reducing Web Latency: The Virtue of Gentle Aggression. In
SIGCOMM, 2013.
[21] S. Floyd. HighSpeed TCP for Large Congestion Windows.
RFC 3649, 2003. http://www.rfc-editor.org/rfc/rfc3649.txt.
[22] S. Floyd, T. Henderson, and A. Gurtov. The NewReno
Modiﬁcation to TCP’s Fast Recovery Algorithm. RFC 3782,
2004. https://tools.ietf.org/html/rfc3782.
[23] A. Ford, C. Raiciu, M. Handley, and O. Bonaventure. Tcp
extensions for multipath operation with multiple addresses.
RFC 6824, RFC Editor, January 2013.
http://www.rfc-editor.org/rfc/rfc6824.txt.
[24] S. Ghorbani, B. Godfrey, Y. Ganjali, and A. Firoozshahian.
Micro Load Balancing in Data Centers with DRILL. In
HotNets, 2015.
[25] A. Greenberg, J. R. Hamilton, N. Jain, S. Kandula, C. Kim,
P. Lahiri, D. A. Maltz, P. Patel, and S. Sengupta. VL2: A
Scalable and Flexible Data Center Network. In SIGCOMM,
2009.
[26] M. P. Grosvenor, M. Schwarzkopf, I. Gog, R. N. M. Watson,
A. W. Moore, S. Hand, and J. Crowcroft. Queues Don’t
Matter When You Can JUMP Them! In NSDI, 2015.
[27] D. Guniguntala, P. E. McKenney, J. Triplett, and J. Walpole.
The Read-Copy-Update Mechanism for Supporting
Real-time Applications on Shared-memory Multiprocessor
Systems with Linux. IBM Systems Journal, 2008.
[28] C. Guo, G. Lu, H. J. Wang, S. Yang, C. Kong, P. Sun, W. Wu,
and Y. Zhang. SecondNet: A Data Center Network
Virtualization Architecture with Bandwidth Guarantees. In
CoNEXT, 2010.
[29] S. Ha, I. Rhee, and L. Xu. CUBIC: A New TCP-friendly
High-speed TCP Variant. ACM SIGOPS Operating Systems
Review, 2008.
[30] K. He, E. Rozner, K. Agarwal, W. Felter, J. Carter, and
A. Akella. Presto: Edge-based Load Balancing for Fast
Datacenter Networks. In SIGCOMM, 2015.
[31] V. Jacobson, B. Braden, and D. Borman. TCP Extensions for
High Performance. RFC 1323, 1992.
http://www.rfc-editor.org/rfc/rfc1323.txt.
[32] R. K. Jain, D.-M. W. Chiù, and W. R. Hawe. A Quantitative
Measure of Fairness and Discrimination for Resource
Allocation in Shared Computer Systems. Technical Report
DEC-TR-301, Digital Equipment Corporation, 1984.
[33] K. Jang, J. Sherry, H. Ballani, and T. Moncaster. Silo:
Predictable Message Latency in the Cloud. In SIGCOMM,
2015.
[34] V. Jeyakumar, M. Alizadeh, D. Mazières, B. Prabhakar,
C. Kim, and A. Greenberg. EyeQ: Practical Network
Performance Isolation at the Edge. In NSDI, 2013.
[35] L. Jose, L. Yan, M. Alizadeh, G. Varghese, N. McKeown,
and S. Katti. High Speed Networks Need Proactive
Congestion Control. In HotNets, 2015.
[36] G. Judd. Attaining the Promise and Avoiding the Pitfalls of
TCP in the Datacenter. In NSDI, 2015.
[37] L. Kalampoukas, A. Varma, and K. K. Ramakrishnan.
Explicit Window Adaptation: A Method to Enhance TCP
Performance. IEEE/ACM Transactions on Networking, 2002.
[38] V. T. Lam, S. Radhakrishnan, R. Pan, A. Vahdat, and
G. Varghese. Netshare and Stochastic Netshare: Predictable
Bandwidth Allocation for Data Centers. ACM SIGCOMM
Computer Communication Review, 2012.
[39] C. Lee, C. Park, K. Jang, S. Moon, and D. Han. Accurate
Latency-based Congestion Feedback for Datacenters. In
USENIX Annual Technical Conference, 2015.
[40] LiquidIO Server Adapters .
http://www.cavium.com/LiquidIO_Server_Adapters.html.
[41] S. Liu, T. Ba¸sar, and R. Srikant. TCP-Illinois: A Loss-and
Delay-based Congestion Control Algorithm for High-speed
Networks. Performance Evaluation, 2008.
[42] A. Menon and W. Zwaenepoel. Optimizing TCP Receive
Performance. In USENIX Annual Technical Conference,
2008.
[43] R. Mittal, N. Dukkipati, E. Blem, H. Wassel, M. Ghobadi,
A. Vahdat, Y. Wang, D. Wetherall, D. Zats, et al. TIMELY:
RTT-based Congestion Control for the Datacenter. In
SIGCOMM, 2015.
[44] J. C. Mogul. TCP Ofﬂoad Is a Dumb Idea Whose Time Has
Come. In HotOS, 2003.
[45] J. C. Mogul and R. R. Kompella. Inferring the Network
Latency Requirements of Cloud Tenants. In HotOS, 2015.
[46] M. Moshref, M. Yu, A. Sharma, and R. Govindan. Scalable
Rule Management for Data Centers. In NSDI, 2013.
[47] Netronome FlowNIC.
https://netronome.com/product/ﬂownics/.
[48] Network Benchmarking Utility.
https://github.com/mellanox/sockperf.
[49] R. Niranjan Mysore, G. Porter, and A. Vahdat. FasTrak:
Enabling Express Lanes in Multi-tenant Data Centers. In
CoNEXT, 2013.
[50] Open vSwitch. http://openvswitch.org.
[51] J. Perry, A. Ousterhout, H. Balakrishnan, D. Shah, and
H. Fugal. Fastpass: A Centralized Zero-queue Datacenter
Network. In SIGCOMM, 2014.
[52] B. Pfaff, J. Pettit, T. Koponen, E. J. Jackson, A. Zhou,
J. Rajahalme, J. Gross, A. Wang, J. Stringer, P. Shelar,
K. Amidon, and M. Casado. The Design and Implementation
of Open vSwitch. In NSDI, 2015.
[53] L. Popa, G. Kumar, M. Chowdhury, A. Krishnamurthy,
S. Ratnasamy, and I. Stoica. FairCloud: Sharing the Network
in Cloud Computing. In SIGCOMM, 2012.
[54] S. Radhakrishnan, Y. Geng, V. Jeyakumar, A. Kabbani,
G. Porter, and A. Vahdat. SENIC: Scalable NIC for End-host
Rate Limiting. In NSDI, 2014.
[55] J. Rasley, B. Stephens, C. Dixon, E. Rozner, W. Felter,
K. Agarwal, J. Carter, and R. Fonseca. Planck:
Millisecond-scale Monitoring and Control for Commodity
Networks. In SIGCOMM, 2014.
[56] H. Rodrigues, J. R. Santos, Y. Turner, P. Soares, and
D. Guedes. Gatekeeper: Supporting Bandwidth Guarantees
for Multi-tenant Datacenter Networks. In WIOV, 2011.
[57] J. Semke, J. Mahdavi, and M. Mathis. Automatic TCP
Buffer Tuning. ACM SIGCOMM Computer Communication
Review, 1998.
[58] A. Shieh, S. Kandula, A. G. Greenberg, C. Kim, and B. Saha.
Sharing the Data Center Network. In NSDI, 2011.
[59] A. Singh, J. Ong, A. Agarwal, G. Anderson, A. Armistead,
R. Bannon, S. Boving, G. Desai, B. Felderman, P. Germano,
et al. Jupiter Rising: A Decade of Clos Topologies and
Centralized Control in Google’s Datacenter Network. In
SIGCOMM, 2015.
[60] SKB in Linux Networking.
http://vger.kernel.org/~davem/skb.html.
[61] N. T. Spring, M. Chesire, M. Berryman, V. Sahasranaman,
T. Anderson, and B. Bershad. Receiver Based Management
of Low Bandwidth Access Links. In INFOCOM, 2000.
[62] B. Stephens, A. L. Cox, A. Singla, J. Carter, C. Dixon, and
W. Felter. Practical DCB for Improved Data Center
Networks. In INFOCOM, 2014.
[63] K. Tan, J. Song, Q. Zhang, and M. Sridharan. A Compound
TCP Approach for High-speed and Long Distance Networks.
In INFOCOM, 2006.
[64] TCP Ofﬂoad Engine (TOE).
http://www.chelsio.com/nic/tcp-ofﬂoad-engine/.
[65] TCP Probe. http://www.linuxfoundation.org/collaborate/
workgroups/networking/tcpprobe.
[66] TOE. http://www.linuxfoundation.org/collaborate/
workgroups/networking/toe.
[67] V. Vasudevan, A. Phanishayee, H. Shah, E. Krevat, D. G.
Andersen, G. R. Ganger, G. A. Gibson, and B. Mueller. Safe
and Effective Fine-grained TCP Retransmissions for
Datacenter Communication. In SIGCOMM, 2009.
[68] A. Venkataramani, R. Kokku, and M. Dahlin. TCP Nice: A
Mechanism for Background Transfers. SIGOPS Oper. Syst.
Rev., 2002.
[69] G. Wang and T. E. Ng. The Impact of Virtualization on
Network Performance of Amazon EC2 Data Center. In
INFOCOM, 2010.
[70] K. Winstein and H. Balakrishnan. TCP ex Machina:
Computer-generated Congestion Control. In SIGCOMM,
2013.
[71] H. Wu, Z. Feng, C. Guo, and Y. Zhang. ICTCP: Incast
Congestion Control for TCP in Data Center Networks. In
CoNEXT, 2010.
[72] H. Wu, J. Ju, G. Lu, C. Guo, Y. Xiong, and Y. Zhang. Tuning
ECN for Data Center Networks. In CoNEXT, 2012.
[73] D. Xie, N. Ding, Y. C. Hu, and R. Kompella. The Only
Constant is Change: Incorporating Time-varying Network
Reservations in Data Centers. In SIGCOMM, 2012.
[74] Y. Zhu, H. Eran, D. Firestone, C. Guo, M. Lipshteyn,
Y. Liron, J. Padhye, S. Raindel, M. H. Yahia, and M. Zhang.
Congestion Control for Large-Scale RDMA Deployments.
In SIGCOMM, 2015.