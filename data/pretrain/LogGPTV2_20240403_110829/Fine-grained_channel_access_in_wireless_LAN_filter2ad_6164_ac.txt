11:8 (cid:22)s
2:8 (cid:22)s
15:6 (cid:22)s
37:4 (cid:22)s
28:4 (cid:22)s
Table 2: OFDM symbol timings in FICA.
In principle, FICA can allocate each subcarrier independently
to provide maximal ﬂexibility. In practice, however, it is difﬁcult
for a node to use only a single subcarrier to transmit data for two
reasons. First, using only one subcarrier suffers from frequency
selective fading: if that subcarrier encounters deep fading, all data
will be lost. Thus, it is essential for a wireless PHY to code across
multiple subcarriers to achieve a spectrum diversity gain [17]. Sec-
ond, although a preamble may be used for channel estimation and
ABAPtccatRxTxtproptpropM-RTS AM-RTS AM-RTS BM-RTS BABAPtproptproptsifstsifsM-CTS M-CTS M-CTS DATA ADATA BDATA BDATA A151Conﬁguration
20MHz channel
40MHz channel
40MHz channel, 2xMIMO
40MHz channel, 4xMIMO
FICA (Mbps)
802.11n (Mbps)
71.8
145
290
580
72.2
150
300
600
Table 3: Example PHY data rates in FICA vs. 802.11n.
compensation, the wireless channel may change during the period
of data transmission.
It is essential for the receiver to track the
changes in the wireless channel. This tracking is typically done
by adding an additional training subcarrier (pilot) along with other
data subcarriers.
Therefore, following typical practice FICA groups a set of sub-
carriers into a subchannel and uses it as the basis for channel ac-
cess.2 Each subchannel contains sixteen data subcarriers and one
pilot subcarrier. Thus, a single subchannel in FICA is 1.33MHz
wide with a 6% pilot overhead, which is comparable to 802.11 (7%).
With different modulation modes, the PHY data rate of a single
subchannel can range from 512Kbps (BPSK, 1/2 coding on each
subcarrier) to 20.25Mbps (64QAM, 5/6 coding and four spatial
multiplexing streams on four antennas).
With a 1.33MHz subchannel, a 20MHz 802.11 channel contains
14 orthogonal subchannels. FICA uses the remaining spectrum as
guard bands separating adjacent wide-band channels. Note that it is
also straightforward for FICA to support wider band channels, e.g.,
40–100MHz or wider. To support a 40MHz channel, for instance,
we simply double the FFT size for all OFDM symbols; since our
sampling rate is also doubled, the symbol period does not change.
When using a 40MHz channel, we can save the guard bands that
would be necessary to separate two 20MHz channels. Thus, we
can have 29 orthogonal FICA subchannels with a 40MHz channel.
Table 3 shows some example PHY data rates of FICA and com-
pares them to 802.11n. As we will show later, although FICA has
slightly lower data rates than 802.11n, the effective throughputs are
actually dramatically higher due to diminished overheads.
3.3 Frequency Domain Contention
FICA uses the M-RTS/M-CTS signal exchange to avoid sub-
channel collisions. M-RTS/M-CTS use simple binary amplitude
modulation (BAM) to modulate a single bit on each subchannel.
Speciﬁcally, BAM uses On-Off Keying that maps a binary “0” to
zero amplitude in a subcarrier, and it uses a random complex num-
ber on the unit circle (ej(cid:18)) for a binary “1”. Receivers can eas-
ily detect BAM symbols by comparing the energy on a subcarrier
against a threshold, without the need to recover the symbol phase.
The basic idea of frequency domain contention works as follows.
In M-RTS, a group of K subcarriers are allocated for each subchan-
nel, called a contention band. When a node contends for a subchan-
nel, it will ﬁrst randomly pick a subcarrier from the contention band
and send a signal “1” using BAM. At the AP side, there may be
multiple M-RTS signals superposed, and the AP may detect mul-
tiple ones on different subcarriers of the contention band. The AP
then can arbitrate a winning node by selecting a subcarrier based on
some predeﬁned rules, e.g., the one with highest frequency. Then
the AP sends the identiﬁcation of the winning subcarrier for each
subchannel in an M-CTS signal. After receiving the M-CTS, each
node compares the subchannel allocation broadcast by the AP to
the subcarrier it has transmitted for the subchannel. If they match,
2The grouping of subcarriers may be arbitrary, and not necessar-
ily contiguous. In our current implementation, however, we only
group adjacent subcarriers into a subchannel.
the node will transmit data symbols on that corresponding subchan-
nel after a SIFS delay.
There are a few issues that need to be considered.
What if two nodes transmit on the same contention subcarrier?
It is quite possible for two nodes to choose the same random num-
ber and transmit on the same contention subcarrier. Thus, their
transmitted energy is additive at the AP side. If the AP picks this
subcarrier as the winner, a collision will happen since both nodes
will consider themselves the winner and send data symbols on the
same subchannel simultaneously. It is also possible (although the
possibility is small) that two nodes’ signals are destructive and can-
cel each other, so the AP may not be able to detect the transmis-
sions. In this case, though, the nodes involved will conclude that
they were not assigned the subchannels they requested.
How large should K be? Clearly, a large K will have fewer colli-
sions in a subchannel. A larger K, though, means more subcarriers
are used and result in a larger signaling overhead: more subcarriers
need a larger FFT size and therefore a longer FFT period. In FICA
we set K=16, the initial contention window size in 802.11.
Who is responsible for returning the M-CTS? Any node that
overhears M-RTS transmissions can arbitrate subchannel access.
Simultaneous transmissions of M-CTS from different nodes are
also allowed since, in a single broadcast domain, these M-CTS
symbols are likely to have the same contention results and their
energy is additive on each subcarrier. But it is still reasonable that
only the potential receivers should return an M-CTS for an M-RTS
based on the following considerations: (1) the irrelevant nodes can
use power-save mode, since it is unfair for them to spend power re-
sponding to M-RTS signals not for them; (2) non-receiving nodes
may unnecessarily create more exposed terminals if they reply with
an M-CTS and disrupt transmissions that could otherwise happen
without interference.
How we can specify receivers in an M-RTS? It is non-trivial
since multiple nodes may transmit M-RTSs simultaneously to dif-
ferent receivers and the receiver information may be mixed. FICA
resolves nnthis issue by using a membership vector of m subcarri-
ers to represent receiver information in the M-RTS. Before trans-
mitting a M-RTS, a node will hash the receiver’s ID into a value
between 0–(m (cid:0) 1). Then, the corresponding subcarrier will carry
a “1” bit. Any node receiving an M-RTS will check if the subcar-
rier corresponding to its ID has been set. If true, it should return
an M-CTS. It is possible that multiple nodes have hash value col-
lisions. But with a reasonably-sized m — we use 40 bits in the
current design — the number of station collisions should be small:
2–3 in a typical WLAN setting where one AP may be associated
with dozens of stations [14].
3.3.1 M-RTS/M-CTS format
Table 4 summarizes the subcarrier allocation for the M-RTS and
M-CTS symbols. We explain the M-RTS/M-CTS format using a
20MHz channel as a concrete example. M-RTS/M-CTS use a 512-
point FFT in 20MHz channel (for wider channels, a proportionally
longer FFT point size is used).
Tag. The tag band contains a predeﬁned binary sequence to identify
the type of this OFDM symbol. The tag band is interleaved on
selected subcarriers whose indices are multiples of four. Thus, the
tag band creates a repeating pattern in time-domain samples. The
receiver can use this pattern to detect the symbol using correlation.
In a 20MHz channel, the tag band contains 32 subcarriers. For M-
RTS, the tag sequence starts with zero, f0; 1; 0; 1; :::; 0; 1g, while
for M-CTS the sequence becomes f1; 0; 1; :::; 0; 1; 0g.
152M-RTS
Contention band
Tag
NAV
Receiver band
Guard band
M-CTS
16 (cid:2) 14 Resolution band
Tag
32
64
160
32
NAV
Reserved
Guard band
32
24 (cid:2) 14
64
48
32
Table 4: Number of subcarriers allocated for the M-RTS and
M-CTS symbols in a 20MHz channel.
Contention band and resolution band. For M-RTS FICA allo-
cates sixteen subcarriers to each subchannel for contention. So, a
total of 224 subcarriers are allocated for a contention band for all
14 subchannels arbitrated using an M-RTS symbol.
Contention results are embedded in the resolution band in M-
CTS. The resolution band occupies more subcarriers compared to
the contention band in the M-RTS. There are 24 subcarriers for each
subchannel. However, since BAM is less robust compared to phase-
shift keying modulation (e.g., BPSK), we improve BAM’s reliabil-
ity by replicating on multiple subcarriers and using soft-decoding.
It can be shown that, by replicating twice, BAM can achieve the
same performance of BPSK [25]. In FICA, we replicate a bit on
four subcarriers when we require high reliability. Thus, with four-
time replication, we can encode six bits (24=4) to represent the res-
olution results for each channel. Currently, six bits can represent
the winner number (1–16) and two other special states. If these 6
bits are all zero, it means the subchannel is not used (e.g., no node
has contended for this subchannel). Alternately, if the bits are all
ones, the subchannel is reserved by the receiver; thus no transmis-
sion is allowed on this subchannel in this contention period.
Receiver band. The receiver band contains the hash vector for
intended receivers across all subchannels. It contains 40 bits and
each bit again is replicated on four subcarriers for reliability, for a
total of 160 subcarriers.
Network Allocation Vector (NAV). The NAV band encodes the
expected number of OFDM symbols in the following data frame. It
contains 64 subcarriers and, also due to four times replication, can
modulate 16 bits. There could be several ways to encode the data
symbol number in the NAV band. One simple method is to use each
single bit to present a certain number of OFDM symbols. Thus,
sixteen bits can present numbers between 3–48, with a step of 3. As
we discuss later, such a range is sufﬁcient for FICA. In an M-CTS,
only the highest bit is echoed back and all nodes that overhear the
M-CTS should defer their contention for a corresponding period.
3.3.2 Frequency domain backoff
In FICA, nodes will choose how many subchannels to request
via contention based on their trafﬁc requirements. If its trafﬁc re-
quirements are light, a node may request fewer subchannels, while
a heavily loaded node may contend for as many as all subchan-
nels for most efﬁcient communication. However, if there are many
nodes in a network contending for many subchannels, the collision
avoidance mechanism provided by M-RTS/C-RTS may not be suf-
ﬁcient to represent all contenders. Using multiple M-RTS symbols
can further scale collision avoidance, but at the cost of more sig-
nalling overhead as described above.
Instead, we use a novel frequency domain backoff scheme to
scale FICA in a heavily-contended dense network. The basic idea
is to control the maximum number of subchannels that one node
can access based on the observed collision level. It is similar to
existing widely-used congestion control mechanisms. Each node
maintains a state variable, Cmax, which controls the maximum sub-
Cmax = Ctotal;
Cmax = max(Cmax=2; 1);
1: Initialize Cmax:
2: Cmax = Ctotal;
3:
4: Update1: Reset to max
5: if collision detected in any subchannel then
6:
7: else
8:
9: end if
10:
11: Update2: AIMD
12: if p% subchannels have collisions and (p > 0) then
13:
14: else
15:
16: end if
Figure 7: Pseudo-code of the frequency domain backoff algo-
rithms. Update1 emulates the behavior of 802.11 binary expo-
nential backoff. Update2 uses an AIMD strategy.
channels the node can access in the next transmission opportunity.
Thus, when the channel is idle for DIFS, a node may pick up to n
subchannels to contend for, where n = min(Cmax; lqueue) and lqueue
is the number of fragments in the node’s local sending queue.
Cmax = max(Cmax (cid:2) (1 (cid:0) p=100); 1);
Cmax = min(Cmax + 1; Ctotal);
The maximum subchannel count Cmax is updated based on the
contention situation on the channel. There can be multiple update
strategies. For example, we can emulate the behavior of binary
exponential backoff (BEB) used in 802.11. When a collision is
detected on a subchannel that a node has transmitted on, it will
reduce Cmax by half. Once all transmissions are successful, the
node resets Cmax to the total number of subchannels.
Alternatively, we can use an additive increase/multiplicative de-
crease (AIMD) strategy. Assume after transmission, a node detects
that p% of channels have collisions. The node then decreases Cmax
by p% (multiplicative decrease). This reaction is reasonable since
p reﬂects an estimation of the contention level in all subchannels.
And when all accesses to subchannels succeed, the node increases
Cmax by one (additive increase).
It is straightforward to prove that both strategies converge if all
contending nodes are within a single broadcasting domain. Fig-
ure 7 shows the pseudo-code of the adaptive Cmax adjustment algo-
rithms. Later, we evaluate these two strategies and ﬁnd that AIMD
is slightly better than the reset-to-max strategy.
3.4 Multiple access points and two-way trafﬁc
Until now, we have only concentrated on uplink access. Down-
link access follows the same process with roles reversed. In this
case, the AP will send out an M-RTS. In FICA, it is possible for
the AP to transmit simultaneously to multiple clients with a single
transmission burst (but different frames to different subchannels).
The receiver IDs are encoded in the receiver band of M-RTS. All
receiving clients should return M-CTS to the AP. It is necessary for
the downlink transmissions to go through such a contention pro-
cess since in practice there can be multiple APs located nearby on
the same wide-band channel. Thus, these APs should use M-RTS