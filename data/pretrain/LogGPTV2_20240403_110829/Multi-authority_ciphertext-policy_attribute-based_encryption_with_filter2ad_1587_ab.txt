second  section  we  give  the  preliminaries  which  we  use 
throughout  the  paper  and  describe  the  DBDH  problem.  In 
section  3  we  describe  our  proposed  approach,  whereas 
conclude in the last section with the scope of further work.  
A.  Notations 
II.  PRELIMINARIES 
example  generating  random  secret  key.  We  use  x ∈R  A  to 
Most  cryptographic  protocol  requires  randomness,  for 
represent the operation of selecting element x randomly and 
uniformly from element set A. At some places we use “(cid:31)” to 
denote  the  NULL  output.  This  paper  deals  with  the 
computational  security  setting  where  security  was  defined 
based on the string length. For £ ∈ N where N is the set of 
natural numbers, 1£ denotes the strings of length £. If x is a 
string then │x│denotes its length, e.g.│1£ │= £. 
B.  Attribute based encryption  
1)  Bilinear Group 
(xa,yb)=e (x,y)ab. 
generator of G1 and G2 respectively. 
b)  Non degeneracy: e (g1, g2) • 1 where g1 and g2 are 
Definition  2.2  (Discrete  Logarithm  Problem).  Given  two 
The  security  of  the  CP-ABE  system  is  based  on  the 
algebraic group called bilinear groups, which are group with 
bilinear map. 
Definition  2.1 (Bilinear map). Assume G1, G2 and G3 are 
three multiplicative cyclic group of some prime order p. A 
bilinear  map  e  :  G1  ×  G2  •  G3  is  a  deterministic  function 
that takes as input one element from G1, one element from 
G2, and output an element in group G3, which satisfies the 
following criteria. 
a)  Bi-linearity  :  For  all  x ∈ G1,  y ∈ G2,  a,b ∈(cid:1852)(cid:3043),  e 
c)  (cid:1857) must be computed efficiently. 
group  elements  g  and  h,  find  an  integer  a ∈(cid:1852)(cid:3043) such  that 
Diffie-Hellman(DBDH)  problem  in  G  is  a  problem,  for 
input  of  a  tuple  ((cid:1859),(cid:1859) a,(cid:1859)b,(cid:1859) c,Z) ∈  G4×GT  to  decide  Z  = 
e((cid:1859) ,(cid:1859) )abc  or  not.  An  algorithm  A  has  advantage (cid:2035)  in 
AdvDBDH(A):=|Pr[A((cid:1859),(cid:1859)a,(cid:1859)b,(cid:1859)c,e((cid:1859),(cid:1859))abc)=0]• Pr[A((cid:1859),(cid:1859)a,(cid:1859)b,(cid:1859)c,e
((cid:1859),(cid:1859))z)=0]|•(cid:2035)( ),where  e((cid:1859),(cid:1859))z∈  GT  \{e((cid:1859),(cid:1859))abc}.We  say  that 
an advantage of at least (cid:2035) in solving the DBDH problem in 
set  of  attributes.  A  collection  A⊆ 2{A1,A2,…An}  is  monotone  if 
(cid:1482)B,C  :  if    B ∈A  and  B ⊆A  then  C ∈ A.  An  (monotone) 
subsets of (A1,A2,…,An), i.e. A⊆ 2{A1,A2,…An}\{(cid:1486)}. The sets in 
h=ga mod p whenever such integer exist. 
Definition  2.3 (DBDH assumption). The Decision Bilinear 
G.[11] 
Definition  2.4 (Access Structure). Let (A1,A2,…,An) be a 
the DBDH assumption holds in G if no PPT algorithm has 
access structure is a (monotone) collection A of non-empty 
solvingDBDH 
problem 
in 
G 
if 
A are called authorized and the sets that are not in A called 
unauthorized sets. 
C.  Multi authority CP-ABE construction 
It consists of six polynomial time algorithms as follows. 
1.  Setup:  It  will  take  implicit  security  parameter  and 
2.  (cid:2157)(cid:2157)(cid:2191) Setup:This algorithm run by AA to generate PK 
output public parameter MPK and master key MSK. 
and SK for attribute i. 
3.  KeyGen  (MSK,  u):This  algorithm  runs  by  CA  to 
International Conference on Computer & Communication Technology (ICCCT)-2011452create the SK and PK for user u. 
4.  RequestAttributeSK(PK,u,SKi)  :  This  algorithm  run 
by  AA  consist  of  SK  for  attribute  i  and  it  takes 
identity of user, public key of user and as an output it 
adds the attribute i in user u’s secret key. 
5.  Encrypt (PK, M, A): The encryption algorithm takes as 
input  the  message  M,  public parameter  PK  and  access 
structure A over the universe of attributes. Generate the 
output CT such that only those users who had valid set 
of attributes that satisfy the access policy can only able 
to  decrypt.  Assume  that  the  CT  implicitly  contains 
access structure A. 
Set-Up : The challenger runs Setup (and all AAi  setup) and 
gives MPK to A. 
Phase 1 :A sends an attribute list L to the challenger for a 
combinations  of  KeyGen  and  RequestAttributeSK.  Note 
that these queries can be repeated adaptively. 
Challenge :A sends two equal-length messages M0 and M1 
6.  Decrypt(PK,CT,SK)  :  The  decrypt  algorithm  run  by 
user takes input the public parameter, the ciphertext CT 
contains  access  structure  A  and  the  secret  key  SK 
contain of user attribute set S. If S satisfies  the access 
tree  then  algorithm  decrypt  the  CT  and  give  M 
otherwise gives “•”. 
D.  Security game setup  
This  game  is  between  challenger  and  attacker  A,  where 
challenger plays role of CA and all attribute authorities. 
Initialization  :  The  adversary  A  will  sends  the  challenge 
runs Encrypt. The challenger gives the ciphertext to A.  
Phase 2 : Same as Phase 1. A sends L’ to the challenger for 
a query. The challenger answers with a secret key for these 
attributes.  
access structure (cid:1849)(cid:1499) to the challenger. 
Extract  query  where  L  |≠ (cid:1849)(cid:1499) .  Here  Extract  is  the 
to  the  challenger.  The  challenger  selects  μ ∈R  {0,  1},  and 
Guess :A outputs a guess μ’ ∈ {0, 1}. 
The advantage of A is defined as Adv(A):= |Pr(μ’= μ) –(cid:2869)(cid:2870)|. 
bilinear group G0 of prime order p with generator (cid:1859). Then it 
will choose two exponents (cid:2009),(cid:2010)∈R(cid:1852)(cid:3043). Here we assume that 
MPK=G0, (cid:1859), h=(cid:1859)(cid:3081),f=(cid:1859)(cid:2869)/(cid:3081), Y=(cid:1857) (cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3080).  
MSK=( (cid:2010),(cid:1859)(cid:3080)). 
SK for attribute i. It selects exponent (cid:2009)(cid:3036)∈R(cid:1852)(cid:3043). 
PKi=(cid:1859)(cid:3080)(cid:3284) 
PK’i=(cid:1859)(cid:2869)/(cid:3080)(cid:3284) 
A.  Multi authority ABE without constant ciphertext length 
The proposed scheme consists of 6 algorithms. 
Setup  :  This  algorithm  run  by  CA  and  it  will  choose  a 
AAi setup : This algorithm run by AA to generate PK and 
MPK is available to all algorithms. 
III.  THE PROPOSED SCHEME 
SK for user u. The algorithm chooses (cid:1870)∈R(cid:1852)(cid:3043).  
KeyGen (MSK, u):This algorithm runs by CA to create the 
SKi= (cid:2009)(cid:3036) 
SK= (cid:1859)(cid:4666)(cid:3080)(cid:2878)(cid:3045)(cid:4667)/(cid:3081) ,  
PK=(cid:1859)(cid:3045) 
Di=(cid:1859)(cid:3045)/(cid:3080)(cid:3284)(cid:1834)(cid:4666)(cid:1861)(cid:4667)(cid:3045)(cid:3284) 
D’i=(cid:1859)(cid:3080)(cid:3284) (cid:3045)(cid:3284) 
RequestAttributeSK(PK,u,SKi)  :  This  algorithm  run  by 
AA consist of attribute i and it takes identity of user, public 
key of user and as an output it adds the attribute i in user u’s 
secret  key.  Note  that  the  AA  adds  the  attribute  i  in  user’s 
secret key without using the SK of user, so this will prevent 
the attack of malicious AA. It generates exponent (cid:1870)i∈R(cid:1852)(cid:3043). H 
(i) is the universal hash function that is one-way function. 
Encrypt(M,A,PK1,PK2,…,PKN) : This encryption takes as 
input message M, access structure A and the required public 
keys  of  authorities  for  which  sender  uses  the  attributes  in 
access structure A. The working of this algorithm is same as 
given  in  [5],  the  CT  (Ciphertext)  will  be  calculated  as 
follows. 
CT={A, C’=M(cid:1857)(cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3080)(cid:3046), C=hs, 
(cid:1482)y ∈ Y : Cy=(cid:1842)(cid:1837)(cid:3052)(cid:3044)(cid:3300)(cid:4666)(cid:2868)(cid:4667)(cid:3404) (cid:4666)(cid:1859)(cid:3080)(cid:3300)(cid:4667)(cid:3044)(cid:3300)(cid:4666)(cid:2868)(cid:4667), C’y=(cid:1834)(cid:4666)(cid:1853)(cid:1872)(cid:1872)(cid:4666)(cid:1877)(cid:4667)(cid:4667)(cid:3044)(cid:3300)(cid:4666)(cid:2868)(cid:4667)} 
Decrypt(SK,CT)  :    The  decryption  algorithm  takes  secret 
key  of  user  SK  and  ciphertext  CT  as  input  and  return 
message M if attributes in SK satisfy the access structure of 
CT otherwise NULL. The working of this algorithm is same 
as in [5]. The recursive procedure DecryptNode(CT,SK,x) is 
defined as below. 
DecryptNode(CT,SK,x) 
 =     e(Dx ,Cx) 
e(D’x ,C’x) 
=  e((cid:1859)(cid:3045)/(cid:3080)(cid:3299)(cid:1834)(cid:4666)(cid:1861)(cid:4667)(cid:3045)(cid:3299),(cid:4666)(cid:1859)(cid:3080)(cid:3299)(cid:4667)(cid:3044)(cid:3299)(cid:4666)(cid:2868)(cid:4667)) 
   e((cid:1859)(cid:3080)(cid:3299) (cid:3045)(cid:3299),(cid:1834)(cid:4666)(cid:1861)(cid:4667)(cid:3044)(cid:3299)(cid:4666)(cid:2868)(cid:4667)) 
=  (cid:1857)(cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3045) (cid:3044)(cid:3299)(cid:4666)(cid:2868)(cid:4667) 
T=DecryptNode(CT,SK,R)  = (cid:1857)(cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3045) (cid:3044)(cid:3267)(cid:4666)(cid:2868)(cid:4667)  = (cid:1857)(cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3045) (cid:3046) . 
C’/(e(C,D)/T) = C’/( e ( hs,(cid:1859)(cid:4666)(cid:3080)(cid:2878)(cid:3045)(cid:4667)/(cid:3081) ) / (cid:1857)(cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3045) (cid:3046) ) = M 
The algorithm simply begins by calling root node R of tree 
A. 
calculate 
Then algorithms decrypts as follows 
than  we 
satisfied 
tree 
can 
is 
if 
1)  Analysis 
International Conference on Computer & Communication Technology (ICCCT)-2011453is  the  two  different  universal  hash  function  such  that 