user@host# set action-profile profile-1 event np-egress trace
1452
user@host# set action-profile profile-1 event np-egress count
user@host# set action-profile profile-1 event np-egress packet-summary
Results
From configuration mode, confirm your configuration by entering the show security datapath-debug
command. If the output does not display the intended configuration, repeat the configuration
instructions in this example to correct it.
traceoptions {
file e2e.trace size 10m;
}
capture-file e2e.pcap format pcap;
maximum-capture-size 1500;
capture-file files 10;
action-profile {
profile-1 {
preserve-trace-order;
record-pic-history;
event np-ingress {
trace;
packet-summary;
packet-dump;
}
event np-egress {
trace;
packet-summary;
packet-dump;
}
}
}
If you are done configuring the device, enter commit from configuration mode.
1453
Enabling Data Path Debugging
IN THIS SECTION
Procedure | 1453
Procedure
Step-by-Step Procedure
After configuring data path debugging, you must start the process on the device from operational mode.
1. Enable data path debugging.
user@host> request security datapath-debug capture start
datapath-debug capture started on file datapcap
2. Before you verify the configuration and view the reports, you must disable data path debugging.
user@host> request security datapath-debug capture stop
datapath-debug capture succesfully stopped, use show security datapath-debug capture to view
NOTE: You must stop the debug process after you have finished capturing the data. If you
attempt to open the captured files without stopping the debug process, the files obtained
cannot be opened through any third-party software (for example, tcpdump and wireshark).
1454
Verification
IN THIS SECTION
Verifying Data Path Debug Packet Capture Details | 1454
Confirm that the configuration is working properly.
Verifying Data Path Debug Packet Capture Details
Purpose
Verify the data captured by enabling the data path debugging configuration.
Action
From operational mode, enter the show security datapath-debug capture command.
Packet 8, len 152: (C2/F2/P0/SEQ:57935:np-ingress)
00 10 db ff 10 02 00 30 48 83 8d 4f 08 00 45 00
00 54 00 00 40 00 40 01 9f c7 c8 07 05 69 c8 08
05 69 08 00 91 1f 8f 03 2a a2 ae 66 85 53 8c 7d
02 00 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15
16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25
26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35
36 37
Packet 9, len 152: (C2/F2/P0/SEQ:57935:np-egress)
00 30 48 8d 1a bf 00 10 db ff 10 03 08 00 45 00
00 54 00 00 40 00 3f 01 a0 c7 c8 07 05 69 c8 08
05 69 08 00 91 1f 8f 03 2a a2 ae 66 85 53 8c 7d
02 00 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15
16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25
26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35
36 37....
For brevity, the show command output is truncated to display only a few samples. Additional samples
have been replaced with ellipses (...).
1455
To view the results, from CLI operational mode, access the local UNIX shell and navigate to the
directory /var/log/. The result can be read by using the tcpdump utility.
user@host>start shell
%tcpdump -nr/var/log/e2e.pcap
21:50:04.288767 C0/F3 event:1(np-ingress) SEQ:1 IP 192.168.14.2 > 192.168.13.2: ICMP echo
request, id 57627, seq 0, length 64
21:50:04.292590 C0/F3 event:2(np-egress) SEQ:1 IP 192.168.14.2 > 192.168.13.2: ICMP echo
request, id 57627, seq 0, length 64
1:50:04.295164 C0/F3 event:1(np-ingress) SEQ:2 IP 192.168.13.2 > 192.168.14.2: ICMP echo reply,
id 57627, seq 0, length 64
21:50:04.295284 C0/F3 event:2(np-egress) SEQ:2 IP 192.168.13.2 > 192.168.14.2: ICMP echo reply,
id 57627, seq 0, length 64
NOTE: If you are finished with troubleshooting the data path debugging, remove all traceoptions
(not limited to flow traceoptions) and the complete data path debug configuration, including the
data path debug configuration for packet capturing (packet-dump), which needs to be started/
stopped manually. If any part of the debugging configuration remains active, it will continue to
use the resources of the device (CPU/memory).
Using MPLS to Diagnose LSPs, VPNs, and Layer 2
Circuits
IN THIS SECTION
MPLS Connection Checking Overview | 1456
1456
MPLS Connection Checking Overview
IN THIS SECTION
MPLS Enabled | 1458
Loopback Address | 1459
Source Address for Probes | 1459
Using the ping Command | 1459
Use either the J-Web ping MPLS diagnostic tool or the CLI commands ping mpls, ping mpls l2circuit, ping
mpls l2vpn, and ping mpls l3vpn to diagnose the state of label-switched paths (LSPs), Layer 2 and Layer 3
virtual private networks (VPNs), and Layer 2 circuits.
Based on how the LSP or VPN outbound (egress) node at the remote endpoint of the connection replies
to the probes, you can determine the connectivity of the LSP or VPN.
Each probe is an echo request sent to the LSP or VPN exit point as an MPLS packet with a UDP payload.
If the outbound node receives the echo request, it checks the contents of the probe and returns a value
in the UDP payload of the response packet. If the device receives the response packet, it reports a
successful ping response.
Responses that take longer than 2 seconds are identified as failed probes.
Table 166 on page 1456 summarizes the options for using either the J-Web ping MPLS diagnostic tool
or the CLI ping mpls command to display information about MPLS connections in VPNs and LSPs.
Table 166: Options for Checking MPLS Connections
J-Web Ping MPLS ping mpls Purpose Additional Information
Tool Command
Ping RSVP-signaled ping mpls rsvp Checks the operability of an LSP When an RSVP-signaled LSP has
LSP that has been set up by the several paths, the device sends
Resource Reservation Protocol the ping requests on the path
(RSVP). The device pings a that is currently active.
particular LSP using the
configured LSP name.
1457
Table 166: Options for Checking MPLS Connections (Continued)
J-Web Ping MPLS ping mpls Purpose Additional Information
Tool Command
Ping LDP-signaled ping mpls ldp Checks the operability of an LSP When an LDP-signaled LSP has
LSP that has been set up by the several gateways, the device
Label Distribution Protocol sends the ping requests through
(LDP). The device pings a the first gateway.
particular LSP using the
Ping requests sent to LDP-
forwarding equivalence class
signaled LSPs use only the
(FEC) prefix and length.
master routing instance.
Ping LSP to Layer 3 ping mpls l3vpn Checks the operability of the The device does not test the
VPN prefix connections related to a Layer 3 connection between a PE device
VPN. The device tests whether and a customer edge (CE)
a prefix is present in a provider router.
edge (PE) device’s VPN routing
and forwarding (VRF) table, by
means of a Layer 3 VPN
destination prefix.
Locate LSP using ping mpls l2vpn Checks the operability of the –
interface name connections related to a Layer 2
interface
VPN. The device directs
outgoing request probes out the
specified interface.
Instance to which ping mpls l2vpn Checks the operability of the –
this connection connections related to a Layer 2
instance
belongs VPN. The device pings on a
combination of the Layer 2 VPN
routing instance name, the local
site identifier, and the remote
site identifier, to test the
integrity of the Layer 2 VPN
circuit (specified by the
identifiers) between the
inbound and outbound PE
routers.
1458
Table 166: Options for Checking MPLS Connections (Continued)
J-Web Ping MPLS ping mpls Purpose Additional Information
Tool Command
Locate LSP from ping mpls l2circuit Checks the operability of the –
interface name Layer 2 circuit connections. The
interface
device directs outgoing request
probes out the specified
interface.
Locate LSP from ping mpls l2circuit Checks the operability of the –
virtual circuit Layer 2 circuit connections. The
virtual-circuit
information device pings on a combination
of the IPv4 prefix and the virtual
circuit identifier on the
outbound PE router, testing the
integrity of the Layer 2 circuit
between the inbound and
outbound PE routers.
Ping end point of ping mpls lsp-end- Checks the operability of an LSP –
LSP endpoint. The device pings an
point
LSP endpoint using either an
LDP FEC prefix or an RSVP LSP
endpoint address.
Before using the ping MPLS feature, make sure that the receiving interface on the VPN or LSP remote
endpoint has MPLS enabled, and that the loopback interface on the outbound node is configured as
127.0.0.1. The source address for MPLS probes must be a valid address on the J Series device.
This section includes the following topics:
MPLS Enabled
To process ping MPLS requests, the remote endpoint of the VPN or LSP must be configured
appropriately. You must enable MPLS on the receiving interface of the outbound node for the VPN or
LSP. If MPLS is not enabled, the remote endpoint drops the incoming request packets and returns an
“ICMP host unreachable” message to the J Series device.
1459
Loopback Address
The loopback address (lo0) on the outbound node must be configured as 127.0.0.1. If this interface
address is not configured correctly, the outbound node does not have this forwarding entry. It drops the
incoming request packets and returns a “host unreachable” message to the J Series device.
Source Address for Probes
The source IP address you specify for a set of probes must be an address configured on one of the J
Series device interfaces. If it is not a valid J Series device address, the ping request fails with the error
message “Can't assign requested address.”
Using the ping Command
You can perform certain tasks only through the CLI. Use the CLI ping command to verify that a host can
be reached over the network. This command is useful for diagnosing host and network connectivity
problems. The device sends a series of ICMP echo (ping) requests to a specified host and receives ICMP
echo responses.
SEE ALSO
ping
ping mpls ldp
ping mpls lsp-end-point
ping mpls l2circuit
ping mpls l2vpn
ping mpls l3vpn
ping mpls rsvp
Using Packet Capture to Analyze Network Traffic
IN THIS SECTION
Packet Capture Overview | 1460
1460
Example: Enable Packet Capture on a Device | 1463
Example: Configure Packet Capture on an Interface | 1468
Example: Configure a Firewall Filter for Packet Capture | 1471
Example: Configure Packet Capture for Datapath Debugging | 1474
Disable Packet Capture | 1479
Modify Encapsulation on Interfaces with Packet Capture Configured | 1479
Delete Packet Capture Files | 1481
Display Packet Headers | 1482
Packet Capture Overview
IN THIS SECTION
Packet Capture on Device Interfaces | 1461
Firewall Filters for Packet Capture | 1462
Packet Capture Files | 1462
Analysis of Packet Capture Files | 1463
Packet capture is a tool that helps you to analyze network traffic and troubleshoot network problems.
The packet capture tool captures real-time data packets traveling over the network for monitoring and
logging.
NOTE: Packet capture is supported on physical interfaces, reth interfaces, and tunnel interfaces,
such as gr, ip, st0, and lsq-/ls.
Packets are captured as binary data, without modification. You can read the packet information offline
with a packet analyzer such as Wireshark or tcpdump. If you need to quickly capture packets destined
for or originating from the Routing Engine and analyze them online, you can use the J-Web packet
capture diagnostic tool.
1461
NOTE: The packet capture tool does not support IPv6 packet capture.
You can use either the J-Web configuration editor or CLI configuration editor to configure packet
capture.
Network administrators and security engineers use packet capture to perform the following tasks:
• Monitor network traffic and analyze traffic patterns.
• Identify and troubleshoot network problems.
• Detect security breaches in the network, such as unauthorized intrusions, spyware activity, or ping
scans.
Packet capture operates like traffic sampling on the device, except that it captures entire packets
including the Layer 2 header and saves the contents to a file in libpcap format. Packet capture also
captures IP fragments.
You cannot enable packet capture and traffic sampling on the device at the same time. Unlike traffic
sampling, there are no tracing operations for packet capture.
NOTE: You can enable packet capture and port mirroring simultaneously on a device.
This section contains the following topics:
Packet Capture on Device Interfaces
Packet capture is supported on the T1, T3, E1, E3, serial, Gigabit Ethernet, ADSL, G.SHDSL, PPPoE, and
ISDN interfaces.
To capture packets on an ISDN interface, configure packet capture on the dialer interface. To capture
packets on a PPPoE interface, configure packet capture on the PPPoE logical interface.
Packet capture supports PPP, Cisco HDLC, Frame Relay, and other ATM encapsulations. Packet capture
also supports Multilink PPP (MLPPP), Multilink Frame Relay end-to-end (MLFR), and Multilink Frame
Relay UNI/NNI (MFR) encapsulations.
You can capture all IPv4 packets flowing on an interface in the inbound or outbound direction. However,
on traffic that bypasses the flow software module (protocol packets such as ARP, OSPF, and PIM),
packets generated by the Routing Engine are not captured unless you have configured and applied a
firewall filter on the interface in the outbound direction.
Tunnel interfaces support packet capture in the outbound direction only.
1462
Use the J-Web configuration editor or CLI configuration editor to specify the maximum packet size, the
filename to be used for storing the captured packets, the maximum file size, the maximum number of
packet capture files, and the file permissions.
NOTE: For packets captured on T1, T3, E1, E3, serial, and ISDN interfaces in the outbound
(egress) direction, the size of the packet captured might be 1 byte less than the maximum packet
size configured because of the packet loss priority (PLP) bit.
To modify encapsulation on an interface with packet capture configured, you must disable packet
capture.
Firewall Filters for Packet Capture
When you enable packet capture on a device, all packets flowing in the direction specified in packet
capture configuration (inbound, outbound, or both) are captured and stored. Configuring an interface to
capture all packets might degrade the performance of the device. You can control the number of packets
captured on an interface with firewall filters and specify various criteria to capture packets for specific
traffic flows.
You must also configure and apply appropriate firewall filters on the interface if you need to capture
packets generated by the host device, because interface sampling does not capture packets originating
from the host device.
Packet Capture Files
When packet capture is enabled on an interface, the entire packet including the Layer 2 header is
captured and stored in a file. You can specify the maximum size of the packet to be captured, up to 1500
bytes. Packet capture creates one file for each physical interface.
File creation and storage take place in the following way. Suppose you name the packet capture file
pcap-file. Packet capture creates multiple files (one per physical interface), suffixing each file with the
name of the physical interface; for example, pcap-file.fe-0.0.1 for the Gigabit Ethernet interface fe-0.0.1.
When the file named pcap-file.fe-0.0.1 reaches the maximum size, the file is renamed pcap-
file.fe-0.0.1.0. When the file named pcap-file.fe-0.0.1 reaches the maximum size again, the file named
pcap-file.fe-0.0.1.0 is renamed pcap-file.fe-0.0.1.1 and pcap-file.fe-0.0.1 is renamed pcap-file.fe-0.0.1.0.
This process continues until the maximum number of files is exceeded and the oldest file is overwritten.
The pcap-file.fe-0.0.1 file is always the latest file.
Packet capture files are not removed even after you disable packet capture on an interface.
1463
Analysis of Packet Capture Files
Packet capture files are stored in libpcap format in the /var/tmp directory. You can specify user or
administrator privileges for the files.
Packet capture files can be opened and analyzed offline with tcpdump or any packet analyzer that
recognizes the libpcap format. You can also use FTP or the Session Control Protocol (SCP) to transfer the
packet capture files to an external device.
NOTE: Disable packet capture before opening the file for analysis or transferring the file to an
external device with FTP or SCP. Disabling packet capture ensures that the internal file buffer is
flushed and all the captured packets are written to the file.
Example: Enable Packet Capture on a Device
IN THIS SECTION
Requirements | 1463
Overview | 1463
Configuration | 1464
Verification | 1466
This example shows how to enable packet capture on a device, to analyze network traffic and to
troubleshoot network problems.
Requirements
Before you begin:
• Establish basic connectivity.
• Configure network interfaces. See Interfaces User Guide for Security Devices.
Overview
In this example, you set the maximum packet capture size in each file as 500 bytes. The range is from 68
through 1500, and the default is 68 bytes. You specify the target filename for the packet capture file as
1464
pcap-file. You then specify the maximum number of files to capture as 100. The range is from 2 through
10,000, and the default is 10 files. You set the maximum size of each file to 1024 bytes. The range is
from 1,024 through 104,857,600, and the default is 512,000 bytes. Finally, you specify that all users
have permission to read the packet capture files.
Configuration
IN THIS SECTION
Procedure | 1464
Procedure
CLI Quick Configuration
To quickly configure this example, copy the following commands, paste them into a text file, remove any
line breaks, change any details necessary to match your network configuration, copy and paste the
commands into the CLI at the [edit] hierarchy level, and then enter commit from configuration mode.
set forwarding-options packet-capture maximum-capture-size 500
set forwarding-options packet-capture file filename pcap-file files 100 size 1024 world-readable
Step-by-Step Procedure
The following example requires you to navigate various levels in the configuration hierarchy. For
instructions on how to do that, see Using the CLI Editor in Configuration Mode.
To enable packet capture on a device:
1. Set the maximum packet capture size.
[edit]
user@host# edit forwarding-options
user@host# set packet-capture maximum-capture-size 500
1465
2. Specify the target filename.
[edit forwarding-options]
user@host# set packet-capture file filename pcap-file
3. Specify the maximum number of files to capture.
[edit forwarding-options]
user@host# set packet-capture file files 100
4. Specify the maximum size of each file.
[edit forwarding-options]