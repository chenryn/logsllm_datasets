### Elements of the Model

The model is defined as follows:
- **IntL** = {ilicl}
- **Ictg**: IntL → IntC
- **Icls**: S ∪ O → IntL × IntC
- **{p}1, ..., ilicl, {p}f**

**Table 1: Elements of the Model**

### Application Calling and Security Relevance

In the original model [10], the calling of an application is not considered security-relevant. However, in our extended model, we address this issue, as demonstrated by the BioSig example. Once an application is called, it runs within the access classes to which it is assigned.

### Communication Channels and Access Categories

We have defined the allowed communication channels within the model according to the access rules. If two applications, X and Y, are assigned to different access categories, they are completely isolated on the card. However, secure communication between such applications is often desired. There are three main techniques to achieve this:

1. **Multiple Assignment of Objects**: Objects can be assigned to both access categories of X and Y, allowing both applications to access the object.
2. **Multiple Assignment of Subjects**: Applications can be assigned to multiple access categories, and all objects belong to a special access category.
3. **Trusted Channel Programs**: These programs can have different pairs of access classes in different access categories [15]. They can also be used for downgrading or upgrading data within a single access category, a process known as sanitization. However, introducing such channel programs requires careful consideration, as they intentionally violate the overall security policy. They are powerful tools for establishing special communication channels, especially for virus checkers or firewall applications.

The transfer rule for channel programs is:
\[ \text{transfer}(s_i, s_j) \Leftarrow \Rightarrow \text{slsck}_{\text{ilick}}(s_i) \leq \text{slsck}_{\text{w}}(s_i) \geq \text{ilicl}_{\text{r}}(s_j) \land \text{ilicl}_{\text{r}}(s_j) \]

The channel program is assigned to two pairs of access classes for reading and writing, as well as for secrecy and integrity. The pair used for reading will have the clearance of subject \( s_i \), while the one used for writing will have the clearance of subject \( s_j \). This allows the channel to read content from \( s_i \) and write it into a file that can be read by \( s_j \).

### Security Functions (SF)

1. **SF1: No Read Up for Secrecy and No Read Down for Integrity** (see Eq. 1)
2. **SF2: No Write Down for Secrecy and No Write Up for Integrity** (see Eq. 2)
3. **SF3: No Execution Upwards for Secrecy and No Execution Downwards for Integrity** (see Eq. 3)
4. **SF4: Channel Program (Combined Read and Write Clearance)** (Eq. 4)

### Communication Channels Between Applications

Communication is realized via storage channels, where return values are stored in a temporary file. The called application needs write permission to the temporary file, and the calling application needs read permission to the file. Figure 2 summarizes the allowed communication channels between applications assigned to different access categories and classes.

### Integrating External Applications and Devices

To ensure security, every application must be loaded onto the card and assigned to defined access classes. A malicious application could cause significant damage if it were assigned to the highest secrecy and integrity access class. To prevent this, each application is electronically signed by the issuer of the specific card, and the card only accepts applications with a valid electronic signature.

**Security Function SF5**: Authentication of loaded applications and assignment information.

External applications and devices must be authenticated each time they communicate with internal applications. The card authenticates the external application, assigns it to the defined access classes, and establishes a session key to ensure confidentiality and integrity of the transferred data.

**Security Function SF6**: Authentication of external applications, external devices, and assignment information, as well as confidentiality and integrity of the transferred data.

### Evaluation Levels and Assignments

Different evaluation levels are assigned to the highbiosig access class [EAL5h], [EAL6h], [EAL7h]. This allows integration of different evaluation schemes, such as ITSEC evaluation levels. In the BioSig example, higher-evaluated external signature applications are allowed to use the QeSig application due to legal requirements.

### Transport Security and Communication Channels

For transport security, it is sufficient to guarantee the integrity of the transferred data. The communication channels between the card and external applications are similar to those between internal applications. Figure 4 provides a selection of possible communication channels and their classifications.

### Execution Chain and External Devices

The first step in the execution chain is when ExtSig calls QeSig. QeSig then authenticates the user to create the electronic signature. It is only allowed to execute authentication applications of the same or higher integrity level. Finally, external devices, such as IFD and CD, are integrated into the system, following the same security principles.

**Figure 4: Communication Channels and Classifications**

This structured approach ensures the security and integrity of the system, allowing for the safe and controlled interaction between internal and external applications and devices.