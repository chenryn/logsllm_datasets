    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
:::
::: orderedlist
**流程**
1.  进入 backstores 目录：
    ``` screen
    /> backstores/
    ```
2.  创建 1GB RAM 磁盘后备存储：
    ``` screen
    /> backstores/ramdisk/ create name=rd_backend size=1GB
    Generating a wwn serial.
    Created rd_mcp ramdisk rd_backend with size 1GB.
    ```
3.  验证创建的 `ramdisk`{.literal} 存储对象：
    ``` screen
    /backstores> ls
    ```
:::
::: itemizedlist
**其它资源**
-   `targetcli`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-portal_adding-an-iscsi-target}创建 iSCSI 门户 {.title}
:::
创建 iSCSI 门户，为目标添加一个 IP 地址和端口来启用目标。
::: itemizedlist
**先决条件**
-   已安装并运行 `targetcli`{.literal}。更多信息请参阅 ["安装
    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
-   与目标门户组(TPG)关联的 iSCSI 目标。更多信息请参阅 ["创建 iSCSI
    目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。
:::
::: orderedlist
**流程**
1.  进入 TPG 目录：
    ``` screen
    /iscsi> iqn.2006-04.example:444/tpg1/
    ```
2.  使用以下选项之一创建 iSCSI 门户：
    ::: orderedlist
    1.  创建默认门户使用默认 iSCSI 端口
        `3260`{.literal}，并允许目标侦听该端口上的所有 IP 地址：
        ``` screen
        /iscsi/iqn.20...mple:444/tpg1> portals/ create
        Using default IP port 3260
        Binding to INADDR_Any (0.0.0.0)
        Created network portal 0.0.0.0:3260
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        当创建 iSCSI
        目标时，也会创建一个默认门户网站。此门户设置为侦听所有 IP
        地址，其默认端口号为： `0.0.0.0:3260`{.literal}。
        删除默认门户网站：
        `/iscsi/iqn-name/tpg1/portals delete ip_address=0.0.0.0 ip_port=3260`{.literal}
        :::
    2.  使用特定 IP 地址创建门户：
        ``` screen
        /iscsi/iqn.20...mple:444/tpg1> portals/ create 192.168.122.137
        Using default IP port 3260
        Created network portal 192.168.122.137:3260
        ```
    :::
3.  验证新创建的门户网站：
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> ls
    o- tpg.................................. [enambled, auth]
        o- acls ......................................[0 ACL]
        o- luns ......................................[0 LUN]
        o- portals ................................[1 Portal]
           o- 192.168.122.137:3260......................[OK]
    ```
:::
::: itemizedlist
**其它资源**
-   `targetcli`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-lun_adding-an-iscsi-target}创建 iSCSI LUN {.title}
:::
逻辑单元号(LUN)是受 iSCSI 后端存储支持的物理设备。每个 LUN
都有唯一的数字。
::: itemizedlist
**先决条件**
-   已安装并运行 `targetcli`{.literal}。更多信息请参阅 ["安装
    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
-   与目标门户组(TPG)关联的 iSCSI 目标。更多信息请参阅 ["创建 iSCSI
    目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。
-   已创建存储对象。更多信息请参阅 ["iSCSI
    Backstore"一节](#getting-started-with-iscsi_managing-storage-devices.html#iscsi-backstore_adding-an-iscsi-target "iSCSI Backstore"){.xref}。
:::
::: orderedlist
**流程**
1.  创建已创建的存储对象的 LUN：
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> luns/ create /backstores/ramdisk/rd_backend
    Created LUN 0.
    /iscsi/iqn.20...mple:444/tpg1> luns/ create /backstores/block/block_backend
    Created LUN 1.
    /iscsi/iqn.20...mple:444/tpg1> luns/ create /backstores/fileio/file1
    Created LUN 2.
    ```
2.  验证创建的 LUN：
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> ls
    o- tpg.................................. [enambled, auth]
        o- acls ......................................[0 ACL]
        o- luns .....................................[3 LUNs]
        |  o- lun0.........................[ramdisk/ramdisk1]
        |  o- lun1.................[block/block1 (/dev/vdb1)]
        |  o- lun2...................[fileio/file1 (/foo.img)]
        o- portals ................................[1 Portal]
            o- 192.168.122.137:3260......................[OK]
    ```
    默认 LUN 名称从 `0`{.literal} 开始。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    默认情况下，使用读写权限创建 LUN。如果在创建 ACL 后添加了新 LUN，LUN
    会自动映射到所有可用 ACL，并可能导致安全风险。要创建具有只读权限的
    LUN，请参考 ["创建只读 iSCSI
    LUN"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-a-read-only-iscsi-lun_adding-an-iscsi-target "创建只读 iSCSI LUN"){.xref}。
    :::
3.  配置 ACL。更多信息请参阅 ["创建 iSCSI
    ACL"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-acl_adding-an-iscsi-target "创建 iSCSI ACL"){.xref}。
:::
::: itemizedlist
**其它资源**
-   `targetcli`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-iscsi_managing-storage-devices.html#creating-a-read-only-iscsi-lun_adding-an-iscsi-target}创建只读 iSCSI LUN {.title}
:::
默认情况下，使用读写权限创建 LUN。这个步骤描述了如何创建只读 LUN。
::: itemizedlist
**先决条件**
-   已安装并运行 `targetcli`{.literal}。更多信息请参阅 ["安装
    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
-   与目标门户组(TPG)关联的 iSCSI 目标。更多信息请参阅 ["创建 iSCSI
    目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。
-   已创建存储对象。更多信息请参阅 ["iSCSI
    Backstore"一节](#getting-started-with-iscsi_managing-storage-devices.html#iscsi-backstore_adding-an-iscsi-target "iSCSI Backstore"){.xref}。
:::
::: orderedlist
**流程**
1.  设置只读权限：
    ``` screen
    /> set global auto_add_mapped_luns=false
    Parameter auto_add_mapped_luns is now 'false'.
    ```
    这样可防止 LUN 自动映射到现有 ACL，从而允许手动映射 LUN。
2.  创建 LUN：
    ``` screen
    /> iscsi/target_iqn_name/tpg1/acls/initiator_iqn_name/ create mapped_lun=next_sequential_LUN_number tpg_lun_or_backstore=backstore write_protect=1
    ```
    例如：
    ``` screen
    /> iscsi/iqn.2006-04.example:444/tpg1/acls/2006-04.com.example.foo:888/ create mapped_lun=1 tpg_lun_or_backstore=/backstores/block/block2 write_protect=1
    Created LUN 1.
    Created Mapped LUN 1.
    ```
3.  验证所创建的 LUN：
    ``` screen
    /> ls
    o- / ...................................................... [...]
      o- backstores ........................................... [...]
      o- iscsi ......................................... [Targets: 1]
      | o- iqn.2006-04.example:444 .................. [TPGs: 1]
      |   o- tpg1 ............................ [no-gen-acls, no-auth]
      |     o- acls ....................................... [ACLs: 2]
      |     | o- 2006-04.com.example.foo:888 .. [Mapped LUNs: 2]
      |     | | o- mapped_lun0 .............. [lun0 block/disk1 (rw)]
      |     | | o- mapped_lun1 .............. [lun1 block/disk2 (ro)]
      |     o- luns ....................................... [LUNs: 2]
      |     | o- lun0 ...................... [block/disk1 (/dev/vdb)]
      |     | o- lun1 ...................... [block/disk2 (/dev/vdc)]
    ```
    mapping_lun1 行现在在结尾有(`ro`{.literal})（不像 mapping_lun0
    的(`rw`{.literal})）表示它是只读的。
4.  配置 ACL。更多信息请参阅 ["创建 iSCSI
    ACL"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-acl_adding-an-iscsi-target "创建 iSCSI ACL"){.xref}。
:::
::: itemizedlist
**其它资源**
-   `targetcli`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-acl_adding-an-iscsi-target}创建 iSCSI ACL {.title}
:::
在 `targetcli`{.literal}
中，访问控制列表(ACL)用于定义访问规则，每个发起方都对 LUN
有独占访问权限。目标和发起方都有唯一的标识名称。您必须知道配置 ACL
的发起方的唯一名称。iSCSI 发起程序可在
`/etc/iscsi/initiatorname.iscsi`{.literal} 文件中找到。
::: itemizedlist
**先决条件**
-   已安装并运行 `targetcli`{.literal}。更多信息请参阅 ["安装
    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
-   与目标门户组(TPG)关联的 iSCSI 目标。更多信息请参阅 ["创建 iSCSI
    目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。
:::
::: orderedlist
**流程**
1.  进入 acls 目录
    ``` screen
    /iscsi/iqn.20...mple:444/tpg1> acls/
    ```
2.  使用以下选项之一创建 ACL：
    ::: orderedlist
    1.  使用启动器上 `/etc/iscsi/initiatorname.iscsi`{.literal}
        文件中的启动器名称。
    2.  使用更容易记住的名称，请参阅 ["创建 iSCSI
        启动程序"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-initiator_adding-an-iscsi-target "创建 iSCSI 启动程序"){.xref}
        部分以确保 ACL 与启动器匹配。
        ``` screen
        /iscsi/iqn.20...444/tpg1/acls> create iqn.2006-04.com.example.foo:888
        Created Node ACL for iqn.2006-04.com.example.foo:888
        Created mapped LUN 2.
        Created mapped LUN 1.
        Created mapped LUN 0.
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        上例中使用的全局设置 `auto_add_mapped_luns`{.literal} 会自动将
        LUN 映射到任何创建的 ACL。
        :::
        您可以在目标服务器上的 TPG 节点中设置用户创建的 ACL：
        ``` screen
        /iscsi/iqn.20...scsi:444/tpg1> set attribute generate_node_acls=1
        ```
    :::
3.  验证创建的 ACL：
    ``` screen
    /iscsi/iqn.20...444/tpg1/acls> ls
    o- acls .................................................[1 ACL]
        o- iqn.2006-04.com.example.foo:888 ....[3 Mapped LUNs, auth]
            o- mapped_lun0 .............[lun0 ramdisk/ramdisk1 (rw)]
            o- mapped_lun1 .................[lun1 block/block1 (rw)]
            o- mapped_lun2 .................[lun2 fileio/file1 (rw)]
    ```
:::
::: itemizedlist
**其它资源**
-   `targetcli`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-initiator_adding-an-iscsi-target}创建 iSCSI 启动程序 {.title}
:::
iSCSI 启动程序形成连接 iSCSI 目标的会话。有关 iSCSI 目标的详情请参考
["创建 iSCSI
目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。默认情况下，iSCSI
服务被启动，服务会在运行 `lazily`{.literal}
命令后启动。`iscsiadm`{.literal}如果 root 没有在 iSCSI
设备中，或者没有标记为 `node.startup = automatic`{.literal}
的节点，则在执行需要 `iscsid`{.literal} 或 `iscsi`{.literal}
内核模块启动的 `iscsiadm`{.literal} 命令前，iSCSI 服务才会启动。
要强制 `iscsid`{.literal} 守护进程运行和 iSCSI 内核模块载入：
``` screen
# systemctl start iscsid.service
```
::: itemizedlist
**先决条件**
-   在服务器机器上安装并运行 `targetcli`{.literal}。更多信息请参阅
    ["安装
    targetcli"一节](#getting-started-with-iscsi_managing-storage-devices.html#installing-targetcli_adding-an-iscsi-target "安装 targetcli"){.xref}。
-   与服务器机器上的目标门户组(TPG)关联的 iSCSI 目标。更多信息请参阅
    ["创建 iSCSI
    目标"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-target_adding-an-iscsi-target "创建 iSCSI 目标"){.xref}。
-   创建 iSCSI ACL。更多信息请参阅 ["创建 iSCSI
    ACL"一节](#getting-started-with-iscsi_managing-storage-devices.html#creating-an-iscsi-acl_adding-an-iscsi-target "创建 iSCSI ACL"){.xref}。
:::
::: orderedlist
**流程**
1.  在客户端机器上安装 `iscsi-initiator-utils`{.literal}: