xiE[max{bz
0 − xi, 0}]
χibz
0 max{bz
0 − xi, 0}
which has unbiased estimator
(22)
(23)
Although sampling of ﬂows is dependent, it turns out that
the unbiased estimatesbxi = χi max{bz, xi} of the bytes of
different ﬂows have zero covariance.
In priority sampling, inhomogeneity between observa-
tion points arises not only through inhomogeneity of the
number of ﬂows k selected, but also through the back-
ground trafﬁc. Typically we want to estimate the total bytes
not of all sampled ﬂows, but only of a selection of them that
share some property of interest, e.g., a speciﬁc source and
destination. The probability that a given interesting ﬂow
will be amongst the k ﬂows selected, depends also on the
sizes of all ﬂows in the background trafﬁc, which gener-
ally varies between different OPs. Threshold sampling is
independent between ﬂows.
4.3 Threshold and Priority Compared
The estimator (21) appears quite similar to that for thresh-
old sampling (18), except that the role of the threshold z is
played by the random quantitybz0. In fact, the relationship
bz0, the selection probabilities for each ﬂow minimize a cost
is deeper: one can show that, conditioned on the threshold
analogous to Cz.
For applications, we see that threshold sampling is well
suited to streaming applications when buffer space is ex-
pensive (e.g., at a router) since each object is sampled inde-
pendently. Priority sampling is able to constrain the num-
ber of samples taken, at the cost of maintaining a buffer
of k candidate samples during selection. It is well suited
to applications where buffering is less expensive (e.g., in a
data aggregator or database)
4.4 Regularized Variance Estimators
Threshold and priority sampling both give rise to regular-
ized estimators as described in Section 3. Consider ﬁrst
threshold sampling and let zj be the sampling threshold
in force at OP j. Then the quantity τj in (12) is just zj.
Moreover, pij is approximately linear in xi, the sense of
(16), and hence the bounded variance estimator is expected
to perform reasonably for ﬂows whose size xi are small
compared with the zj. For priority sampling, we use the
random thresholds z0
j in place of the zj. Although this in-
troduces additional variability; in practice priority approxi-
mates threshold sampling closely for large number of sam-
ples. In the next sections we show this heuristic performs
well in experiments.
5 Experiments: Router Matrix
This section applies our method to trafﬁc measurement at
routers. As discussed in Section 1.3, while router level
sampling captures large MEs accurately, interface level
sampling offers the opportunity to accurately sample not
just the relatively large ones MEs, i.e., the largest amongst
those seen at each interface. This is particularly impor-
tant for a method such as priority sampling where, in order
to provide a hard constraint on the use of measurement re-
sources, only a ﬁxed number of samples are taken in a given
time period, There is a trade-off: if all resources were de-
ployed for interface sampling, then not all larger ﬂows on
some heavily used interfaces might be sampled.
USENIX Association
Internet Measurement Conference 2005  
97
1
0.0004
0
8e-05
7e-05
0
2e-05
0.0002
2e-05
1e-06
2
0.04
0
0
0.0002
0
0
0.04
0.003
0
3
0.1
0
0.0007
0
0
0.05
0.08
0.0004
0
4
0.004
0
0
0
0
0.003
0.001
5e-06
0
5
0.03
0
0
0.001
0
3e-05
0.02
0.006
0
6
0.8
0
0.5
0.01
0
0.1
0.2
0.0007
0
7
0.02
0
0.0001
0.0004
0
0.006
0.01
3e-05
0
8
0
0
0
0
0
0
0
0
0
1
2
3
4
5
6
7
8
0
0.5
0.01
0
0.2
0.3
0.01
1e-06
Table 1: Router matrix elements for CAMPUS, with row and column sums, normalized by total bytes
This motivates using a combined estimator. In this ap-
plication we explicitly want to take account of estimated
variance, so we use the regularized variance estimator of
Section 3. In experiments using real ﬂow data taken at two
routers, we ﬁnd that:
(i) For a given total number of samples, the regularized es-
timator is more accurate than its individual consistent esti-
mators or averages thereof.
(ii) The regularized estimator is more accurate than the ad
hoc estimator AH1 when estimation error is large.
5.1 Router Data and Trafﬁc Matrices
The data from this experiment comprised sampled NetFlow
records gathered from two routers in a major ISP network.
These record the total bytes of the sampled ﬂow packets,
and the router input and output interfaces traversed by the
ﬂow. Thus, it is possible to map each ﬂow onto the appro-
priate router to router trafﬁc matrix.
The ﬁrst dataset, CAMPUS comprises 16,259,841 Net-
Flow records collected from a backbone router in a corpo-
rate intranet during 24 hour period. The active ﬂow timeout
was 30 minutes. The maximum size was 3.94 GB and av-
erage size 20.4 kB. The router had 8 interfaces. Table 1
shows the interface MEs for a 10 minute period, normal-
ized by total bytes. Note the non-zero MEs range over six
orders of magnitude.
second
dataset,
The
DISTRIBUTION
comprises
1,765,477 NetFlow records collected during 1 hour
from a distribution router in an ISP network. The active
ﬂow timeout was 1 minute, with maximum ﬂow size 3.97
MB and average 1.4 kB. The router had 236 interfaces
(and subinterfaces), whose line rates ranged from 622
MBps (OC-12) down to 1.5 Mbps (T1). Only 1971 MEs
are non-zero. We represent these in Figure 1, where
the interfaces have been sorted in decreasing order of
total input and output bytes in the 1 hour period. The
distribution of trafﬁc per interface is highly skewed:
the
busiest interface carries 46% of the bytes, while the 10
busiest together carry 94%.
Figure 1: Matrix Elements of Dataset DISTRIBUTION. In-
terfaces are ordered by total bytes
5.2 Notation for Estimators
input and output denote the byte estimators de-
rived input and output
interface samples respectively,
while router denote the estimator derived from all
through the router, undifferentiated by inter-
ﬂows
average i,o,r averages input, output and
face.
router, while average i,o averages only input and
output. adhoc i,o,r combines the estimators input,
output and router as described in AH1 of Sec-
tion 2.9, while regular i,o,r is the corresponding reg-
ularized variance estimator from Section 3. bounded
is the bounded variance estimator.
In priority sampling,
regular i,o,r(ki, ko, kr) denotes the regularized estimator
in which ki and ko priority samples were taken and each in-
put and output interface respectively, and kr were taken at
the router level.
A Sample Path Comparison. We compare the perfor-
mance of the various estimators on several of the CAMPUS
MEs from Table 1, as a function of the number of priority
98
Internet Measurement Conference 2005
USENIX Association
050100150200output050100150200input102104106108Figure 2: Estimator Comparison: input, output, router, average i,o,r and regular i,o,r, for 4 matrix elements
from Table 1 representing various relative volumes of the total bytes.
samples k per interface direction. The estimated MEs (nor-
malized through division by the true value) are displayed in
Figure 2 for k roughly log-uniformly distributed between 1
and 1000. Perfect estimation is represented by the value
1. In this evaluation we selected all ﬂows contributing to
a given ME, then progressively accumulated the required
numbers k of samples from the selection. For this reason,
the variation with k is relatively smooth.
There are N = 8 interfaces. Each of the single esti-
mators was conﬁgured using the same number of sample
slots, i.e., input(k), output(k) and router(2N k).
We compare these ﬁrst; see Figure 2. For the smaller MEs
(8→1, 6→3 and 6→5), input and output are notice-
ably more accurate than router: the relatively large MEs
are better sampled at the interface level than at the router
level. average i,o,r(k, k, 2N k) performs poorly because
of the contribution of router, and also because it driven
down by the zero estimation from input and output
when the number of samples k is small; see, e.g., the 8 → 1
ME. Only for a large ME (2→6, constituting about half
the trafﬁc in the router) does router accuracy exceed the
worst of the interface methods. Consequently, the accuracy
of average i,o,r is better in this case too.
When there are noticeable differences between the three
single estimators, regular i,o,r(k, k, 2N k) roughly fol-
In the 2 → 6 ME,
lows the most accurate one.
regular i,o,r follows input most closely while in the
6 → 3 and 6 → 5 MEs, it follows output.
5.3 Conﬁdence Intervals
Recall that each estimation method produces and estimate
of the variance of the ME estimator. This was used to form
upper and lower conﬁdence intervals in Section 3.3. Fig-
ure 3 shows upper and lower conﬁdence limits for estimat-
ing the MEs of CAMPUS using the same router interfaces
as in Figure 2. These use (17) with standard deviation pa-
rameter s = 2.
8→1 is a special case. input has no estimated error
when k ≥ 2. As can be seen from Table 1, 8→1 is the
only ME with ingress at interface 8. It comprises 2 ﬂows,
so the estimated variance and sampling threshold are 0 for
k ≥ 2. The other methods perform poorly (their conﬁ-
dence bounds are off the chart), since neither output nor
router samples this very small ﬂow.
regular i,o,r displays the best overall performance in
Figure 2, i.e., it tends to have the smallest divergence from
USENIX Association
Internet Measurement Conference 2005  
99
00.511.522.533.544.551101001000bytes(normalized)number of priority samplesInterface 8->1: Relative Volume = 10-6inputoutputrouteraverageregular00.511.522.533.541101001000bytes(normalized)number of priority samplesInterface 6->3: Relative Volume = 0.08inputoutputrouteraverageregular00.20.40.60.811.21.41.61101001000bytes(normalized)number of priority samplesInterface 6->5: Relative Volume = 0.02inputoutputrouteraverageregular00.511.522.51101001000bytes(normalized)number of priority samplesInterface 2->6: Relative Volume = 0.5inputoutputrouteraverageregularthe true value. Figure 3 show that the estimated estima-
tor variance tends to be the smallest too, giving narrower
conﬁdence intervals than the other methods.
Estimator Accuracy for Fixed Resources. Now we
perform a more detailed comparison of the estimators with
the DISTRIBUTION dataset, using constant total sampling
slots across comparisons. The router has N = 236 inter-
faces, each bidirectional. For a given number k of sampling
slots per interface direction, we compare router(4N k),
input(4k), output(4k), average i,o,r(k, k, 2N k),
average i,o(2k, 2k),
and
regular i,o,r(k, k, 2N k).
adhoc i,o,r(k, k, 2N k)
For k values of 16 and 128, and each estimation method,
we sorted the relative errors for each ME in increasing
order, and plotted them as a function of rank in the left
hand column of Figure 4.
(The average ﬂow sampling
rates are approximately 1 in 234 for k = 16 and 1 in
30 for k = 128). The curves have the following qualita-
tive features. Moving from left to right, the ﬁrst feature,
present only in some cases, is when the curves start only
at some positive rank, indicating all MEs up to that rank
have been estimated either with error smaller than the res-
olution 10−5. The second feature is a curved portion of
relative errors smaller than 1. The third feature is a ﬂat
portion of relative errors, taking the value 1 for the indi-
vidual, adhoc i,o,r and regular i,o,r methods, and 1/2
and 1/3 for average i,o and average i,o,r respectively.
This happens when a ME has no ﬂows sampled by one of
the individual estimators. The ﬁnal feature at the right hand
side are points with relative errors ε > 1, indicating MEs
that have been overestimated by a factor ε + 1. We make
the following observations:
Interface sampling (input and output) and
(i)
regular i,o,r and adhoc i,o,r are uniformly more accu-
rate that average i,o,r or router.
(ii) Interface sampling performs better than adhoc i,o,r or
regular i,o,r when errors are small. When an ME is
very well estimated on a given interface, any level infor-
mation from another interface makes the estimate worse.
But when the best interface has a large estimation error,
additional information can help reduce it: regular i,o,r
and adhoc i,o,r become more accurate.
(iii) The average-based methods perform poorly; we have
argued that they are hobbled by the worst performing com-
ponent. For example, average i,o performs worse than
input and output since typically only one of these
methods accurate for a relatively large ME.
(iv) regular i,o,r and adhoc i,o,r have similar perfor-
mance, but when there are larger errors, they are worse on
average for adhoc i,o,r.
(v) As expected, estimation accuracy increases with
the number of samples k, although average i,o and
average i,o,r are less responsive.
Although these graphs show that regular i,o,r and
adhoc i,o,r are more accurate than other estimators, is it
not immediately evident that this is due to the plausible
reasons stated earlier, namely, the more accurate inference
of relatively larger ﬂows on smaller interfaces. Also it is
not clear the extent to which interface sampling can pro-
duce sufﬁciently accurate estimates at reasonable sampling
rates. For example, for k=128 (roughly 1 in 30 sampling of
ﬂow records on average) about 25% of the MEs have rela-
tive errors 1 or greater. We need to understand which MEs
are inaccurately estimated.
To better make this attribution we calculate a scaled ver-
sion of a MEs as follows. Let Q denote the set of inter-
faces, and let mxy denote the generic ME from interface
x to interface y. Let M in and M out denote the interface
input and output totals, so that M in
M out
ing mxy then we write the scaled version as
x = Py∈Q mxy and
y =Px∈Q mxy. If eyx is the relative error in estimat-