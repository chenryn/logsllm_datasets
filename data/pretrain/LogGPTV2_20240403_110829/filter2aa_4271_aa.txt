.TH CPIO 1 \" -*- nroff -*-
.SH NAME
cpio \- 存取归档包中的文件
.SH 总览 (SYNOPSIS)
.B cpio
{\-o|\-\-create} [\-0acvABLV] [\-C bytes] [\-H format] [\-M message]
[\-O [[user@]host:]archive] [\-F [[user@]host:]archive]
[\-\-file=[[user@]host:]archive] [\-\-format=format] [\-\-message=message]
[\-\-null] [\-\-reset-access-time] [\-\-verbose] [\-\-dot] [\-\-append]
[\-\-block-size=blocks] [\-\-dereference] [\-\-io-size=bytes] [\-\-quiet]
[\-\-force\-local] [\-\-help] [\-\-version]  archive]
.B cpio
{\-i|\-\-extract} [\-bcdfmnrtsuvBSV] [\-C bytes] [\-E file] [\-H format]
[\-M message] [\-R [user][:.][group]] [\-I [[user@]host:]archive]
[\-F [[user@]host:]archive] [\-\-file=[[user@]host:]archive]
[\-\-make-directories] [\-\-nonmatching] [\-\-preserve-modification-time]
[\-\-numeric-uid-gid] [\-\-rename] [\-\-list] [\-\-swap-bytes] [\-\-swap] [\-\-dot]
[\-\-unconditional] [\-\-verbose] [\-\-block-size=blocks] [\-\-swap-halfwords]
[\-\-io-size=bytes] [\-\-pattern-file=file] [\-\-format=format]
[\-\-owner=[user][:.][group]] [\-\-no-preserve-owner] [\-\-message=message]
[\-\-force\-local] [\-\-no\-absolute\-filenames] [\-\-sparse] [\-\-only\-verify\-crc]
[\-\-quiet] [\-\-help] [\-\-version] [pattern...] [< archive]
.B cpio
{\-p|\-\-pass-through} [\-0adlmuvLV] [\-R [user][:.][group]]
[\-\-null] [\-\-reset-access-time] [\-\-make-directories] [\-\-link] [\-\-quiet]
[\-\-preserve-modification-time] [\-\-unconditional] [\-\-verbose] [\-\-dot]
[\-\-dereference] [\-\-owner=[user][:.][group]] [\-\-no-preserve-owner]
[\-\-sparse] [\-\-help] [\-\-version] destination-directory < name-list
.SH 描述 (DESCRIPTION)
本手册页 描述 GNU 版本 的
.BR cpio .
.B cpio
可以 从 cpio 或 tar 格式 的 归档包(archive) 中 读写 文件, 归档包 是 
一种文件, 它 由 归档文件 及其 相关信息 组成, 例如 文件名, 属主, 时标
(timestamp), 和 访问权限. 归档包 可以 是 磁盘上的 文件, 也可以 是 
磁带或管道.
.B cpio
有 三种 操作模式.
.PP
在 copy-out 模式中,
.B cpio
把 文件 复制到 归档包 中. 它 从 标准输入 读取 文件名列表, 每行一个文件名.
生成的 归档包 写到 标准输出. 产生 文件名列表 的 典型方法 是 使用
.B find
命令; 你 可能 要在
.B find
后面 用上 \-depth 选项, 减少 因为 进入 没有 访问权限 的 目录 引起 的 麻烦.
.PP
在 copy-in 模式中,
.B cpio
从 归档包 读取 文件, 或者 列出 归档包 的 内容, 归档包 来自 标准输入.
任何 非选项 命令行参数 被视为 shell 的 通配符模式串 (globbing pattern);
在 归档包 中, 只 读取 文件名 匹配 这些 模式串 的 文件.
和 shell 环境 不一样, 文件名 起始处 的 '.' 可以 匹配 模式串 
起始处 的 通配符, 文件名中 的 '/' 也可以 匹配 通配符. 如果 没有 给出 
模式串, 那么 读取 所有 文件.
.PP
在 copy-pass 模式中,
.B cpio
把 文件 从 一棵目录树 复制到 另一棵, 它 结合了 copy-in 和 copy-out 的 操作,
但是 没有 使用 归档包. 
.B cpio
从 标准输入 读取 欲复制的 文件名列表; 目标目录 是 非选项命令行参数.
.PP
.B cpio
支持 下列的 归档 格式:
binary, old ASCII, new ASCII, crc, HPUX binary, HPUX old ASCII, old tar, 
和 POSIX.1 tar.  
"binary" 格式 是 过时 格式, 因为 它 保存 文件信息 的 方法 无法 应用在 
不同体系 的 机器 上.
"old ASCII" 格式 可以 跨平台 使用, 但是 不能 用于 超过 65536 个 i 节点 的
文件系统 中.
"new ASCII" 格式 可以 跨平台 使用, 也 适用于 任意大小 的 文件系统 上, 但
不是 所有 版本 的 
.BR cpio
都 支持, 目前 只有 GNU 和 System VR4 的 cpio 能够 支持 "new ASCII" 格式.
"crc" 格式 类似于 "new ASCII" 格式, 而且 对每个 文件 计算 校验和;
.B cpio
在 创建 归档包 时 计算 校验和, 解开 文件 时 进行 校验.
"HPUX" 格式 用于 兼容 HP UNIX 的 cpio, 它 用了 独特的方法 保存 设备文件.
.PP
"tar" 格式 用以 兼容 
.B tar
程序. 它 不能 对 文件名 超过 100 个 字符 的 文件 归档, 也 不能 对 特殊文件
(块设备 或 字符设备) 归档.
"POSIX.1 tar" 格式 不能 对 文件名 超过 255 个 字符 的 文件 归档 (小于 255,
除非 文件名 的 最右边 有一个 "/").
.PP
缺省情况下,
.B cpio
为了 兼容 老式的
.B cpio
程序, 创建 "binary" 格式 的 归档包.
当展开 归档包 时,
.B cpio
能够 自动识别 归档包 的 格式, 而且 能够 读取 不同 字节顺序 的 机器 上
创建 的 归档包.
.PP
.B cpio 
的 某些 选项 只能 用在 相应的 操作模式 上; 参见 总览 小节, 里面 列出了
什么模式 可以用 什么选项.
.SS 选项 (OPTIONS)
.TP
.I "\-0, \-\-null"
在 copy-out 和 copy-pass 模式中, 认为 输入的 文件名 以 null 字符 结尾, 
而不是 换行符, 这样 即使 文件名 中 包含 换行符, 也 不影响 归档. GNU
.B find
是 生成 null 结尾 文件名 列表 的 方法 之一.
.TP
.I "\-a, \-\-reset-access-time"
读取完 文件 后 重置 文件的访问时间, 这样 看上去 就象 没有 访问 过 这个 文件.
.TP
.I "\-A, \-\-append"
添加到 现存的 归档包 中. 仅用于 copy-out 模式. 该 归档包 必须是 用
.I \-O
或
.I "\-F (\-\-file)"
选项 生成的 磁盘文件.
.TP
.I "\-b, \-\-swap"
在 copy-in 模式中, 颠倒 数据中 字 的 字节 顺序. 相当于
.IR "\-sS" .
使用 这个 选项 可以 在 大端数 和 小端数 机器 之间 转换 32 位 整数.
.TP
.I "\-B"
把 I/O 块 大小 设置成 5120 字节. 最初的 块大小 是 512 字节.
.TP
.I "\-\-block-size=BLOCK-SIZE"
设置 I/O 块 大小 为 BLOCK-SIZE * 512 字节.
.TP
.I "\-c"
使用 老式的 跨平台 (ASCII) 归档 格式.
.TP
.I "\-C IO-SIZE, \-\-io-size=IO-SIZE"
设置 I/O 块 大小 为 IO-SIZE 字节.
.TP
.I "\-d, \-\-make-directories"
在 需要的地方 创建 起始目录.
.TP
.I "\-E FILE, \-\-pattern-file=FILE"
在 copy-in 模式中, 从 FILE 里 读取 用于 匹配 文件名 的 模式串. 
FILE 的 内容 如同
.BR cpio
的 非选项 参数.
.TP