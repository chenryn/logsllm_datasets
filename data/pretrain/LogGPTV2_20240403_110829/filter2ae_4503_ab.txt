    function NewQuestion(string _question, bytes32 _responseHash)
        public
        payable
        {
            require(msg.sender==questionSender);
            question = _question;
            responseHash = _responseHash;
        }
说到这，小安比突然发现，虽然都是传入问题和答案，但是`StartGame()` 和 `NewQuestion()`
接口传入的参数却有所区别。`StartGame()`
函数传入的第二个参数是问题答案的明文。然鹅，以太坊上接口调用的参数是可以查询到的！！！也就是说只要找到启动游戏的那笔交易，就可以找到问题的答案。小安比不禁露出了狡黠的笑容。
不过，在看完了 QSP
团队安全大神的文章后，瞬间感觉闪瞎小安比双眼，只能感叹自己还是太年轻呀。合约中那些特殊权限的隐患只是骗子的障眼法，原来套路才刚刚开始。接下来小安比将带领大家分析游戏的陷阱是如果设置的。
### 三、蜜罐陷阱:巧借 Etherscan 缺陷
由于 Etherscan 上仅涉及ETH转账或 Token
转账的交易，部分交易不会显示，合约创建者果断利用了这一特性来隐藏设置答案的交易，将假的答案暴露在Etherscan 上。让聪明且有心者误以为发现了问题答案。
首先，合约创建者先创建了一份中间合约， 然后再创建当前的游戏合约。
    中间合约地址：0x4B2838d9326bD5126F0573D9b5c71C0626Ab28f2
    游戏合约地址：0xcEA86636608BaCB632DfD1606A0dC1728b625387
然后，合约创建者向中间合约发起一笔交易，这笔交易使得中间合约向游戏合约发起两次调用。但是这两次调用在 Etherscan
的交易历史中都不会显示出来。但可以在交易的 Trace 中查看到，两次调用及其参数又可以通过合约的 ABI 解码得出。
从解码后的结果来看，第一次是调用了 `StartGame()` 接口，传入的参数，其中 `_question` 为 `Imagine you are
swimming in the sea and a bunch of hungry sharks surround you. How do you get
out alive?` , 答案为 `sZs`。第二次调用是 `NewQuestion()`
接口，更新了问题和答案，传入的问题与上一次调用一致，答案是一串小安比看不太懂的鬼东西。
也就是说到目前为止，游戏的问题和答案已经偷偷的设置完成了，而第二次调用的参数中的答案才是问题的真正答案。
随后，合约创建者又向游戏合约发起了一笔交易，调用 `StartGame()` 接口，也就是我们之前看到的那个答案 `Stop
Imagining`。而这笔调用实际上并没有起任何作用，也不是问题的答案，因此若将 `Stop Imagining` 作为问题的答案输入，结果必定是错误的。
小安比查阅了另一个区块链浏览器，也印证了该问题。
在Martin Derka 大神转入了 1.05 个 ETH 到 QUESTION 合约不久后，合约创建者立即终止合约，取走了合约中所有的
ETH，至此游戏提出者成功得骗走了ETH。
### 四、蜜罐调查：还有多少坑在等你？
安比（SECBIT）实验室智能合约风险监控平台显示，同类蜜罐合约高达 48 份，而其中已有玩家受骗的合约，竟有 21 份，受骗金额超过 25 ETH。
部分成功套取ETH的蜜罐合约地址：
    0xFf45211eBdfc7EBCC458E584bcEc4EAC19d6A624_ENIGMA_GAME.sol
    0xcEA86636608BaCB632DfD1606A0dC1728b625387_QUESTION.sol
    0x70bf9Df6967Dc96156e76Cc43b928A7eF02E159a_X_GAME.sol
    0x4a73D9fe078fA67601047F88C3e6C270602E5709_ETH_GAME.sol
    0x3CAF97B4D97276d75185aaF1DCf3A2A8755AFe27_G_GAME.sol
    0x8cc5d9de2c8df87f2d40d84aa78049ea6e61f973_GO_TO_PLAY.sol
    0xC034CF94f7cEd9C968cC75210d1B5DdAccACFbf4_ANSWER_AND_RECIVE.sol
    0xeD710216DA4B1416A78768790Ca9Aa3633Ca110f_PLAY_AND_GAIN.sol
    0x1fBf025AD94ddE79f88732F79966A9A435F2772f_BLITZQUIZ.sol
该类蜜罐合约通常都在有玩家受骗后短时间内迅速结束套利，受骗群体较小，金额较少，不会造成大范围的影响，因此也比较容易被忽视。但值得注意的是，在这些同类合约中，有一份合约是
3
天前刚部署上线的（合约地址：0x3fAb284a3cD0A6d88d18D0fdA4bc1a76cdacd68A），目前尚未发现有玩家受骗，也就是说这种诈骗手段还在继续实施。
另外，由于合约中终止游戏接口的实际功能是使问题提出者取走合约中所有
ETH，并不是真正终止合约，也就是说，即使问题提出者成功套取利益，游戏也并没有真正结束，玩家还是有继续掉入合约陷阱中的风险。
小安比提醒各位 DApp 游戏爱好者提高警惕，切勿参与到以上合约的游戏中，也不要参与各种安全性不明的游戏合约。
### 五、蜜罐总结：币圈套路深
设计该类蜜罐合约需要一定的技术积累和对玩家心理的把握，而受骗者大部分都是具备一定专业知识的技术人员，而这些人员往往也更容易参与到DAPP游戏中。不得不说这届骗子很有水平啊，小安比摸了摸自己干瘪的钱包，虽然躲过了被割韭菜的命运，却很难躲得过骗子的套路！于是小安比决定从今以后多加学习，好好修炼内功，防止上当受骗。
安比（SECBIT）实验室提醒广大 DApp
游戏爱好者提高警惕，重视智能合约安全，切勿参与不明合约游戏。区块链浏览器作为一种工具，其产品特性存在着一定的针对性和局限性，因此实际应用中，我们不能完全依赖于某一款区块链浏览器所提供的数据。当然，各类区块链浏览器网站也应在用户界面上作出改进，尽可能降低被利用风险以及由此导致的用户损失。
作为一个爆发式增长的领域，智能合约技术和应用的革新离不开大量涌入的专业人员的贡献，但这其中也不免掺杂了诸多不和谐的因素，诸如本文所提到的合约以及不久前爆出的另一种蜜罐合约[4]。但小安比认为，任何一个领域的发展过程都会面临诸多挑战。也正因这些因素的存在，才促使行业不断寻找新的解决方案，促进技术和社区进步，整个过程需要包括安全团队在内的更多专业人士共同努力。
### 参考文献
[1] Exploiting the interface of Etherscan for Ethereum attacks  
[2] 【得得预警】安全公司：新型DApp游戏诈骗“现形”，隐藏特定交易记录  
[3] ERC20 API: An Attack Vector on Approve/TransferFrom Methods  
[4] 警惕！Solidity缺陷易使合约状态失控  
* * *