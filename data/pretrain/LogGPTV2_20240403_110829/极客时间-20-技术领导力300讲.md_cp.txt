## 从程序员到架构师你可能会问，那是不是一个程序员，只要能写出漂亮的代码，并且能够优雅、高效地实现业务需求，做到准确交付，就一定能成为架构师呢？答案是否定的，即使一个程序员做到了"五精"，把"五精"做得再好，他的个人能力也是有上限的，他所实现的系统的复杂度也是有上限的，而业务的发展会远远超出个人的能力。因此，我们需要把业务需求拆分成多个组件，再将每个组件分发给优秀的程序员来完成，通过互相协作，最终完成一个整体的业务需求。在这里，分发的工作就是架构师的职责，架构师主要在解决 Scalability的问题。它包括两个方面，一方面是人的Scale，比如业务需求变复杂后，单人不足以承担，这时就需要多人协作，那如何分解业务，如何将分解后的业务匹配合适的人，如何协作，就需要架构师来进行判断。另一方面是量的 Scale，比如当 QPS从几十个增加到成千上万个，甚至几十万个的时候，面对这种情况该怎么办？这就是架构师需要解决的问题。因此，当你从实现一个具体的功能，到考虑解决 Scale问题的时候，你就已经开始走上了架构师这条路。即使你的 title还是程序员，但是，你已经开始向架构师这个角色转变了。
## 总结本文，我主要分享了一名优秀程序员所需具备的特质，即精细、精湛、精通、精深、精明这五个特质。另外，从程序员到架构师，不在于title如何，而是当你的着眼点更上一个层级，更多的理解业务需求，然后思考如何解决宏观问题、提炼通用组件、设计协作方式等问题的时候，你就是一名架构师了。下一篇文章中，我将分享优秀架构师所需要具备的特质，以及从架构师到 CTO转变之路的关注点，欢迎持续关注。
## 作者简介洪强宁，爱因互动 CTO ，TGO 鲲鹏会会员，资深 Python程序员，曾任豆瓣网首席架构师与宜信大数据创新中心首席架构师，编程 30余年，拥有 11 年互联网从业经验。![](Images/9d92a80caf1b113da0eab0842f582869.png){savepage-src="https://static001.geekbang.org/resource/image/a8/e1/a84e2a58b232f5dfc55ac79aff07c2e1.jpg"}
# 第126讲 \| 洪强宁：从程序员到架构师，从架构师到CTO（二）你好，我是爱因互动 CTO，TGO会员洪强宁，在上一篇文章，我分享了程序员到架构师的发展之路，以及一名优秀的程序员需要具备的特质，今天我将继续跟你分享一名优秀架构师所需要具备的特质，以及从架构师转变为CTO 的过程中需要注意的地方。
## 优秀架构师需要具备的能力我觉得一名优秀的架构师，需要以下这四个关键能力：取舍、前瞻、抽象、容错。
### 1. 取舍一个架构总是有优有劣，它不会是完美的、普适的，也不存在一个架构在 A场景能用，在 B 场景也最适用的情况，所以就需要我们准确判断，作出取舍。我们可以根据具体的业务需求来调整架构，也就是以当前的业务需求，选出最匹配的架构。另外，架构师还需要根据现状衡量好需求和资源、效率和安全、时延和吞吐等等之间的关系，做出判断。比如对于在线系统，可能更重要的是保证它的高时延，因此就可以牺牲一定的吞吐量，而对于离线系统，吞吐量则更重要一些。
### 2. 前瞻架构师需要具备一定的前瞻性，因为架构的调整周期比较长。这也是程序员和架构师之间一个很大的区别所在。程序员负责一个项目，在当前的互联网协议下，项目的迭代周期非常快，基本以天或周为单位，最多一个月。如果发现不合适的代码，需要重构，程序员基本也能在几天或几周内就能完成重构。``{=html}而架构的调整是相对漫长的过程，可能需要数月，甚至要上年。因此，在设计架构时就需要架构师具备前瞻意识，对很多不确定的事情做出预判，比如未来访问量会增长到什么程度，会不会产生新的业务，这些会对系统产生什么样新的要求等等。