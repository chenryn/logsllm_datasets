User: I am using Django-kombu with Celery but have read at a quite few places that it isn't production ready. 
Basically, I want to create a multiple master - multiple slaves architecture using Celery and pass messages in between them and and back to the main program that did the call. 
I am not able to understand where does Kombu fit in there. Why not RabbitMQ? The tutorials are all very messy with one person suggesting something and the other something else. 
Can someone give me clearer picture of what is a production stack look like when dealing Celery + Django?
Also, do I have to use Dj-Celery?
Assistant: The stable version of kombu is production ready, same for celery.
kombu takes care of the whole messaging between consumers, producers and the message broker which in order are the celery workers, webworkers (or more in general scripts that put tasks in the queue) and the message broker you are using.
You need kombu to run celery (it is actually in the requirements if you look at its setup)
With kombu you can use different message brokers (rabbitmq, redis ...) so the choice is not between using kombu or rabbitmq as they do different things, but between kombu and redis or kombu and rabbitmq etc etc..
If you are ok with redis as message broker, you just have to install:
celery-with-redis and django-celery packages