Certiﬁcate Expiration. Once 30 days and a second time 15
days before the user certiﬁcate expires, the DFN sends users
an expiration warning via email and encourages users to renew
the certiﬁcate.
4https://www.dfn.de/en/
5https://www.pki.dfn.de/ueberblick-dfn-pki/ (german)
History and Milestones. Our university began to issue
S/MIME certiﬁcates in 2004. The ﬁrst root certiﬁcate used to
sign the original CA (G1) through the DFN expired in 2019.
Starting from 2017, certiﬁcates were issued using a new root
CA (G2). Additionally, 479 certiﬁcates issued using the G1
CA had to be replaced with new certiﬁcates issued by the
G2 root CA. Figure 10 in Appendix C illustrates the issued
certiﬁcates per year. In the ﬁrst years, the amount of server
and user certiﬁcates is roughly equal. However, the number of
S/MIME certiﬁcates is only slowly increasing compared to the
number of server certiﬁcates. We can see a drop in requested
certiﬁcates in 2020, probably due to the COVID-19 pandemic.
III. RELATED WORK
We discuss related work in two key areas and put our work
into context: User studies for end-to-end encryption with end
users and email ﬁeld studies.
A. End-to-End Encryption Studies for End Users
The usability of end-to-end encryption has been a research
focus for decades. With their seminal work, Whitten and
Tygar [45] set this line of research off in 1999 when they
evaluated the usability of PGP and identiﬁed challenges for
end-users in a lab study. In their qualitative user study,
participants had trouble with key management, speciﬁcally key
exchange with other participants. One participant forgot the
password for their key pair and thus had to generate a new
one. Another participant was unable to encrypt an email and
others were unable to decrypt emails. Following Whitten and
Tygar, Garﬁnkel and Miller [20] and Roth [29] hypothesized
that some of the challenges could be overcome by simplifying
the key veriﬁcation process. Their solutions were based on
omitting the veriﬁcation of keys by third parties and instead
using a trust on ﬁrst use (TOFU) approach. Garﬁnkel and
Miller tested their approach on lay users and found that color-
coding messages depending on their signature status makes
users signiﬁcantly less susceptible to social engineering attacks
overall. Garﬁnkel et al. surveyed 470 merchants who received
digitally-signed VAT invoices from Amazon and found that
merchants should send signed emails by default as the passive
exposure seems to increase acceptance and trust [19], [21].
Ruoti et al. studied different self-designed and publicly avail-
able encryption tools [31]–[33], [35] to improve the usability
of email encryption in their laboratory. Their research interests
were key management, key distribution, and automatically vs.
manually enabled encryption. In several laboratory studies by
Ruoti et al. [31], [32], [35], participants rated at least one tool
as usable and indicated interest in secure email, but did not
know when or how they wanted to use it. In another recent
journal article, Ruoti et al. came to the conclusion that secure
and usable systems so far had only been tested in short-term
studies and future research should investigate long term us-
ability and adoptability of secure email systems [30]. Atwater
et al. and Lerner et el. proposed clients for PGP similar to
Keybase6 to study how to simplify key distribution [5], [25].
6https://keybase.io/
862
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:55 UTC from IEEE Xplore.  Restrictions apply. 
They proposed to upload users’ public keys to a website and
conﬁrm ownership such that they can retrieve emails from
the corresponding email address. In a lab study, Atwater et
al. found that such a key distribution mechanism enabled
participants to send more encrypted emails and had improved
usability for (webmail) users. Lerner et al. compared their tool
called Conﬁdante with Mailvelope7 and showed that their tool
reduces the error potential [25]. In a lab study, all participants
in the Mailvelope group struggled to import public keys or to
share their own public key. In the Conﬁdante group, three out
of nine participants struggled to import public keys. However,
all of them managed to share their public keys successfully.
Bai et al. proposed encryption prototypes to study user ﬂows
of different key management approaches [8], [9]. In an in-
terview study, participants preferred to register their public
keys on a webpage and automatically retrieve public keys of
communication partners from the webpage over manual key
management. Fahl et al. examined different usability aspects
for Facebook message encryption mechanisms and found that
automatic key management and key recovery capabilities are
important for adoption [16]. McGregor et al. reported that
cooperating journalists used PGP to encrypt their emails when
investigating the Panama Papers [27]. However, journalists
also identiﬁed obstacles when using encryption with multiple
devices. Consequently, they used secure messengers such as
Signal
instead of PGP on their smartphones. Gaw et al.
interviewed nine employees from the same company and found
that users ﬂagged encrypted mails as urgent and found those
to be annoying when used for all messages [22]. They argued
that understanding of social factors is important for adoption.
In a combined lab and ﬁeld study, Mauri´es et al. participants
struggled with Enigmail for Thunderbird and the Mailvelope
browser plugin [26]. Enigmail users needed help to setup the
tool on their computer. The setup process in Mailevelope was
unclear. One participant struggled to import a public key and
send an encrypted email.
In addition to email, mobile messaging apps including
Signal, Threema and WhatsApp, made end-to-end encryption
available for the masses. WhatsApp, for example, introduced
end-to-end encrypted messages for all its users by default in
2016 [43]. In an interview study, Abu-Salma et al. identiﬁed
blockers and barriers for the adoption of end-to-end encryption
including incompatible tooling and misconceptions of end-to-
end encryption features [2]. They argue that usability is not
the primary obstacle and that fragmented userbases or a lack
of multi-device support signiﬁcantly contribute to the non-
adoption of end-to-end encryption. In a different study, Abu-
Salma et al. further explored users’ mental models and found
misconceptions about security properties of messengers [1].
They argue that adoption is no longer the main challenge
for end-to-end encryption tools but that people instead switch
to non secure communication tools and need assistance in
choosing the right one for sensitive information. Stransky et
al. conﬁrmed these ﬁndings in an online study with WhatsApp
7Mailvelope is a browser plugin for PGP: https://www.mailvelope.com/
users. They found that security perceptions of end-to-end
encryption in mobile messaging apps heavily depended on
the reputation and expectations of an app provider, while
visualizing encryption has only limited impact on perceived
security [38]. Similarily, Akgul et al. found that participants
noticed educational messages and that they improved under-
standing of security concepts when they are used in isolation.
However, when those messages were implemented in a realis-
tic environment, they could not ﬁnd signiﬁcant improvements
in the mental models of end-to-end encryption of users [3].
Overall, previous work primarily focused on identifying
blockers and barriers to adopting end-to-end encryption for
email or mobile messaging apps and studied alternatives to
or extensions of existing approaches using laboratory and
interview studies. In contrast, we aim to extend the toolbox
of end-to-end encryption research and provide ground truth
based on longitudinal ﬁeld data by evaluating a large dataset
including millions of data points of thousands of users and
years of their email data.
B. Email Field Studies
In addition to the user studies discussed above, researchers
performed multiple ﬁeld studies on the use of email. In 1996,
Whittaker and Sidner analyzed the mailboxes of 18 NotesMail
users containing 2,482 emails. They postulated email overload
and studied how users handle a mass of emails [44]. In 2006,
Fisher et al. revisited this analysis with a sample of 600
mailboxes containing 28,660 emails [17]. They analyzed users’
email sorting strategies, especially with respect to dealing with
the increased volume of emails, and postulated that large fold-
ers would make email retrieval hard. Alrashed et al. studied a
sample of anonymized email logs from Outlook Web Access
over a four month period, containing about 800 million actions
[4]. They aimed to understand how users handle incoming
emails. They ﬁnd that most emails have a short lifetime and
that deleting email is the most common action on messages
users interacted with once. Avigdor-Elgrabli et al. analyzed
a sample of donated mailboxes of a major email service
provider, containing about 5 million emails [7]. They used
machine learning techniques to identify relationships between
emails. Roth et al. performed a study with anonymized mail-
boxes from 17 voluntary users that contained approximately
139,000 mails to investigate which security mechanisms would
be most appropriate for their communication patterns [29].
They argue that for individual non-commercial users, out-of-
band veriﬁcation of keys would be more feasible than relying
on public key certiﬁcates issued by third parties.
In addition to the above ﬁeld studies that focused on email
usability more broadly, researchers investigated the adoption
of security protocols for email. Foster et al. scanned the
Simple Mail Transfer Protocol (SMTP) conﬁgurations of about
300,000 major email providers and email generators in March
2014 and February 2015, and investigated the behavior of
known email providers [18]. They found that TLS is widely
used and discovered a dramatically low adoption of effective
TLS certiﬁcate validation. Durumeric et al. examined log data
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:55 UTC from IEEE Xplore.  Restrictions apply. 
863
for SMTP handshakes of Google’s Gmail service from January
2014 to April 2015 and compared it with a snapshot of SMTP
conﬁgs of Alexa top million domains as of April 2015 [13].
The authors examined the distribution and use of TLS and
other server-side security mechanisms. They found that the top
mail providers proactively encrypted and authenticated mes-
sages. However, these practices had yet to reach widespread
adoption in a long tail of over 700,000 SMTP servers with
less secure conﬁgurations. Ulrich et al. evaluated the PGP key
database (SKS-Keyserver) in December 2009, examining 2.7
million keys of which 400,000 were expired and 100,000 were
revoked [42].
Overall, the above ﬁeld studies investigate the adoption and
usability of email in a broader context, measure email servers’
security conﬁgurations, and conduct small-scale security anal-
yses of email encryption. We extend previous ﬁeld studies by
focusing on adopting email encryption using a longitudinal
large ﬁeld dataset.
IV. ANALYZING 27 YEARS OF EMAIL DATA
Below, we provide detailed information on the data collec-
tion and analysis process in our work.
We performed our longitudinal analysis of a large email
dataset in coordination with the technical staff of the univer-
sity’s IT department, the data protection ofﬁcer, and the univer-
sity’s staff council (see Section IV-C for more details). We im-
plemented a data collection pipeline to collect pseudonymized8
metadata for all email accounts, including the use of S/MIME
and PGP (cf. Figure 1) at our institution in the last 27 years. At
no point did we collect email subject or body information to
avoid the disclosure of personally identiﬁable information (PII)
to the researchers. We also ensured that metadata included
neither email account names nor the departments’ names or
subdomains. We aimed to keep the number of processing
errors low and consistently tested the pipeline with our own
mailboxes until no further processing errors occurred.
The IT department’s technical staff reviewed the pipeline for
functionality and data protection aspects, and then executed it
on the university’s standby backup email server. The backup
server is a hot-standby of the primary mail server, and auto-
matically takes over in case of a failure. Data between both
servers is constantly synchronized and as a result, the backup
is identical to the live data. The backup server retains all email
data, dating back to early 1994.
Figure 1 provides an overview of the nine-step processing
pipeline: We initially started with a local testing environment
on a small sample emailbox created speciﬁcally for our
study (1); The technical staff reviewed the initial pipeline
and iteratively tested it against the full set of emailboxes of
the researchers and their own emailboxes (2); We exported
the emailboxes to JSON-formatted ﬁles (3); We parsed and
pseudonymized all emails (4); We performed assertion checks
on every email to ensure that neither the emailaddress nor
the domain was present in any result ﬁelds to account for
8The pseudonymization process is described in Sections IV-A and IV-C.
emailclients writing private data to unexpected places (5);
In the case of a succeeding assertion check, we stored the
resulting email metadata for further analysis on a secure server
in the university’s computing center (6a); In the event of a
failure, we dropped all email metadata to avoid the leakage of
private information (6b); The IT department’s technical staff
transferred pseudonymized results to the authors’ secure cloud
storage (7); We analyzed the pseudonymized results (8).
A. Data Collection Pipeline
The university uses Dovecot9 for their email servers. Dove-
cot offers an export feature to extract all emails as a JSON-
formatted ﬁle. We implemented our processing pipeline using
a large JSON ﬁle per mailbox containing all exported emails as
input. For parallel processing, we used the GNU Parallel [40]
tool. On behalf of the researchers, the university’s IT staff
executed the pipeline on the backup email server to make
sure raw emails were not exposed to the researchers. Below,
we describe the metadata we collected. In the cases where
we applied pseudonymization, we provide a description of the
pseudonymization procedure. Table IV in Appendix B gives
an overview of both general and S/MIME and PGP speciﬁc
information.
General Information. For each email we collected the local
user account, message ID, the sender, and the list of receiver
email addresses. If present, we also collected the lists of carbon
copy and blind carbon copy addresses for outgoing emails.
For pseudonymization, we hashed all of these values using
a secret salt10 and the SHA-256 hash function. We grouped
email users into: Student, Staff, Faculty, NX Unknown11 and
External. For data protection reasons, we did not collect the
exact send and receive dates as well as times of an email but
only the corresponding week. If set, we collected the raw user
agent string to identify email client software, operating sys-
tem, and compute platform if possible. We grouped mailbox
folders into: Inbox, Subfolder of Inbox, Outbox, Subfolder
of Outbox, Junk, Trash, and Spam. For further cryptographic
metadata analysis, we stored whether an email was signed
and encrypted or contained Autocrypt headers. Below, we use
the term cryptographic emails for all emails that contained
cryptographic metadata.
Cryptographic Metadata. For all cryptographic emails, we
collected attached cryptographic metadata for S/MIME, PGP
and Autocrypt. Table IV gives an overview of the collected
information and storage formats including pseudonymization.
For S/MIME, we collected the pseudonymized serial num-
ber of the leaf certiﬁcate, validity start and end date (gran-
ularity by week), the signing hash algorithm, the key size
and key type (e.g., 2048 and RSA). We collected the key
usage and extended key usage options (e.g., email signing,
9https://www.dovecot.org/
10The secret salt was only accessible to the IT staff and not
to the
researchers
11Used if the email subdomain did not exist anymore, and the original
purpose was unclear when we performed our experiments.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:55 UTC from IEEE Xplore.  Restrictions apply. 
864
Fig. 1.
Illustration of our data collection and evaluation pipeline.
certiﬁcate signing, code signing), and the number of valid
email addresses for each certiﬁcate. Finally, we collected the
complete certiﬁcate chain, including all metadata for all sign-
ing certiﬁcates. We did not pseudonymize the serial numbers
for non-leaf certiﬁcates.
For PGP, we collected the key type (e.g., public key or
a sub-key),
the signature algorithm, and key length. For
elliptic curve keys, we collected curve information as well
as pseudonymized key IDs, and creation and expiration dates.
For extended PGP keys, we collected update dates. If a key
included subkeys we also stored the above data for the sub
keys.
The pipeline dropped all data (like email subject, email
content, non-key attachments) that we excluded from our
analysis.
B. Data Cleaning
We included all 81,647,559 emails and 37,463 email user
accounts at our university from January 1994 to July 2021 in
the initial analysis (cf. Section V-A). However, we excluded
some emails and email user accounts based on the following
procedure:
Processing Errors. Parsing a dataset that spans millions of
emails from over two decades that were generated and sent by
many different email clients and versions poses a signiﬁcant
challenge. Hence, we were not able to successfully parse
all emails. Our parser failed to parse 0.09% emails in the
dataset. Due to privacy restrictions, we were not allowed to
further investigate root causes of parser failures. However,
Appendix A provides more details on S/MIME and PGP
related parsing errors.
Inactive Email Accounts. Our initial data set included 37,463
total user accounts. However, we identiﬁed 18,302 inactive
email accounts for which we did not ﬁnd any sent emails.
Of them, 17,928 email accounts received but did not send
emails and 374 did neither receive nor send emails. Many
students prefer to use their private email accounts instead of
their automatically created university email accounts, leaving
them inactive.
Invalid Dates. We excluded 307,680 (0.38% of our dataset)
emails with obviously forged header dates, e.g., year  2021 (after data collection) and emails for which the date
parser failed.
C. Ethical Concerns and Data Privacy
To conduct the large scale measurement study on email
data, our institutions, and speciﬁcally the institution where
the data was collected and evaluated, did not require formal
ethical review for this type of study. Therefore, we did not
involve an ethics review committee. However, we followed
our institutions’ guidelines for good scientiﬁc practice, which
includes ethical guidelines. Here, the institutions speciﬁcally
place the burden of determination of whether research is
ethical on the respective researchers. We intensively discussed
within and outside our research team to determine possible
concerns with this research project, and whether this project
would be feasible. We concluded that in addition to following
laws and our institutions’ ethics requirements, we should also
follow the de facto ethics standards of the S&P community.
The data used in this study can be described as pseudonymized
data derived from human subjects, as mentioned in the Call
for Papers.
In addition to ethics, we made sure to address all legal
aspects of our research to adhere to strict German privacy
protection laws and the European General Data Protection
Regulation (GDPR). Therefore, we involved the data pro-
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:02:55 UTC from IEEE Xplore.  Restrictions apply. 
865
 Execute  Execute  Report Errors Secondary Transfer  Verify and Test on own Mail Local Pipeline Test with dedicated sample  Verify and Execute Develop DataCollection and Pseudonymization  Develop Analysis  Execute University IT ServicesResearchersPrimaryAssertion failed,  whole mail removed 123456a6b78 Check for Errors Pseudonymizationtection ofﬁcer and the works committee of the institution
where the data was collected and evaluated, as required by
the German data protection regulations. We developed the
data collection plan jointly with the data protection ofﬁcer,
with the goal to protect users’ privacy and adhere to the
strict German data protection regulations and the regulations
in the state of Lower Saxony. After more than a year of
multiple discussions and hearings, we agreed on the presented
data collection plan (cf. details in Section IV-A). After the
involved authorities had rigorously assessed the legal situation
based on the GDPR, German data protection laws, and state
law of the involved authorities, we were allowed to analyze
pseudonymized metadata of all users at our institution without
requiring user consent. Additionally, our legal counsel decreed
that the beneﬁt of our research to society outweighed the