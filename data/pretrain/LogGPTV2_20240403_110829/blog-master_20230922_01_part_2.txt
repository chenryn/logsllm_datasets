```  
Usage: lantern-create-index --uri  --table  --column  -m  --efc  --ef  -d  --metric-kind  --out   
例如:  
lantern-create-index -u "postgresql://localhost/test" -t "small_world" -c "vec" -m 16 --ef 64 --efc 128 -d 3 --metric-kind cos --out /tmp/index.usearch  
```  
### 打包 lantern_extras    
依赖onnxruntime lib  
https://onnxruntime.ai/  
ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator  
https://github.com/microsoft/onnxruntime/releases/tag/v1.15.1   
使用如下镜像环境进行打包  
[《amd64 , 使用Dockerfile+docker build制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务》](../202307/20230710_03.md)    
[《arm64 , 使用Dockerfile+docker build制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务》](../202308/20230814_02.md)    
1、arm64 打包  
```    
# install pgrx    
cd /tmp  
cargo install --locked --version 0.9.7 cargo-pgrx   
cargo pgrx init  # create PGRX_HOME 后, 立即ctrl^c 退出
cargo pgrx init --pg14=`which pg_config`   # 不用管报警
# build and install lantern_extras     
cd /tmp    
curl -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -L https://github.com/microsoft/onnxruntime/releases/download/v1.15.1/onnxruntime-linux-aarch64-1.15.1.tgz -o onnxruntime-linux-aarch64-1.15.1.tgz    
tar -zxvf onnxruntime-linux-aarch64-1.15.1.tgz   
export ORT_STRATEGY=system  
export ORT_LIB_LOCATION=/tmp/onnxruntime-linux-aarch64-1.15.1/lib  
git clone --depth 1 https://github.com/lanterndata/lantern_extras    
cd /tmp/lantern_extras    
# 配置cargo config  
vi ~/.cargo/config  
[target.aarch64-unknown-linux-gnu]  
rustflags = ["-C", "link-args=-Wl,-rpath,/tmp/onnxruntime-linux-aarch64-1.15.1/lib"]  
[target.'cfg(target_os="linux")']  
# Postgres symbols won't be available until runtime  
rustflags = ["-Clink-arg=-Wl,-undefined,dynamic_lookup"]  
# replace aarch64-unknown-linux-gnu with your architecture.      
# You can get it by running rustc -vV | sed -n 's|host: ||p'     
# 打包 lantern_extras   
cargo pgrx package --package lantern_extras    
# 安装build index命令行工具:  
cd /tmp/lantern_extras    
cargo install --path lantern_cli
Usage: lantern-cli create-index --uri  --table  --column  -m  --efc  --ef  -d  --metric-kind  --out 
root@3501de034e72:/tmp/lantern_extras# /root/.cargo/bin/lantern-cli --help
Usage: lantern-cli 
Commands:
  create-index         Create external index
  create-embeddings    Create embeddings
  show-models          Show embedding models
  measure-model-speed  Show embedding models
  start-daemon         Start in daemon mode
  help                 Print this message or the help of the given subcommand(s)
Options:
  -h, --help     Print help
  -V, --version  Print version
```    
打包好之后, 可以拷贝到当前PG 14指定目录, 在容器中安装 lantern_extras .      
```    
cp target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras.control /usr/share/postgresql/14/extension/    
cp target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras--0.0.3.sql /usr/share/postgresql/14/extension/    
cp target/release/lantern_extras-pg14/usr/lib/postgresql/14/lib/lantern_extras.so $PGHOME/lib/    
psql    
create extension lantern_extras;    
```    
2、amd64 打包  
```    
# install pgrx    
cd /tmp   
cargo install --locked --version 0.9.7 cargo-pgrx   
cargo pgrx init  # create PGRX_HOME 后, 立即ctrl^c 退出
cargo pgrx init --pg14=`which pg_config`   # 不用管报警  
# build and install lantern_extras     
cd /tmp    
curl -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -L https://github.com/microsoft/onnxruntime/releases/download/v1.15.1/onnxruntime-linux-x64-1.15.1.tgz -o onnxruntime-linux-x64-1.15.1.tgz    
tar -zxvf onnxruntime-linux-x64-1.15.1.tgz    
export ORT_STRATEGY=system  
export ORT_LIB_LOCATION=/tmp/onnxruntime-linux-x64-1.15.1/lib  
git clone --depth 1 https://github.com/lanterndata/lantern_extras    
cd lantern_extras    
# 配置cargo config  
vi ~/.cargo/config  
[target.x86_64-unknown-linux-gnu]  
rustflags = ["-C", "link-args=-Wl,-rpath,/tmp/onnxruntime-linux-x64-1.15.1/lib"]  
[target.'cfg(target_os="linux")']  
# Postgres symbols won't be available until runtime  
rustflags = ["-Clink-arg=-Wl,-undefined,dynamic_lookup"]  
# replace x86_64-unknown-linux-gnu with your architecture.      
# You can get it by running rustc -vV | sed -n 's|host: ||p'     
# 打包 lantern_extras  
cargo pgrx package --package lantern_extras   
# 安装build index命令行工具:  
cd /tmp/lantern_extras    
cargo install --path lantern_cli
```    
打包好之后, 可以拷贝到当前PG 14指定目录, 在容器中安装 lantern_extras .      
```    
cp target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras.control /usr/share/postgresql/14/extension/    
cp target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras--0.0.3.sql /usr/share/postgresql/14/extension/    
cp target/release/lantern_extras-pg14/usr/lib/postgresql/14/lib/lantern_extras.so $PGHOME/lib/    
psql    
create extension lantern_extras;    
```    
3、将编译好的文件拷贝到制作docker image的dir中:    
[《arm64 , 使用Dockerfile+docker build制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务》](../202308/20230814_02.md)      
[《arm64 , 使用Dockerfile+docker build制作PolarDB | PostgreSQL 开源docker镜像, 集成大量插件方便学习, 并推送到阿里云镜像服务》](../202308/20230814_02.md)    
```    
docker cp pg:/tmp/lantern_extras/target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras.control ~/pg14/    
docker cp pg:/tmp/lantern_extras/target/release/lantern_extras-pg14/usr/share/postgresql/14/extension/lantern_extras--0.0.3.sql ~/pg14/    
docker cp pg:/tmp/lantern_extras/target/release/lantern_extras-pg14/usr/lib/postgresql/14/lib/lantern_extras.so ~/pg14/    
docker cp pg:/root/.cargo/bin/lantern-cli ~/pg14/    
```    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")