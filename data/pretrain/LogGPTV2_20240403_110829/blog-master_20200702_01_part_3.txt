text9=excluded.text9,  
text10=excluded.text10,  
crt_time=excluded.crt_time;  
```  
```  
pgbench -M prepared -n -r -P 1 -f ./test2.sql -c 52 -j 52 -T 120  
progress: 1.0 s, 1096.0 tps, lat 6.098 ms stddev 2.041  
progress: 2.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 3.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 4.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 5.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 6.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 7.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 8.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 9.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
postgres=# select wait_event from pg_stat_activity ;  
     wait_event        
---------------------  
 AutoVacuumMain  
 LogicalLauncherMain  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 page  
 buffer_content  
 buffer_content  
 page  
 page  
 buffer_content  
 buffer_content  
 page  
 buffer_content  
 buffer_content  
 page  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 page  
 buffer_content  
 page  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 page  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 buffer_content  
 BgWriterHibernate  
 CheckpointerMain  
 WalWriterMain  
```  
大量冲突, 改成do nothing还是会导致大量冲突, 目前zedstore的高并发写入存在问题.  
```  
insert into t_zedstore values (:id,  
random()*10,  
random()*100,  
random()*1000,  
random()*10000,  
random()*100000,  
random()*10,  
random()*100,  
random()*1000,  
random()*10000,  
random()*100000,  
md5((random()*10)::int::text),  
md5((random()*100)::int::text),  
md5((random()*1000)::int::text),  
md5((random()*10000)::int::text),  
md5((random()*10)::int::text),  
md5((random()*100)::int::text),  
md5((random()*1000)::int::text),  
md5((random()*10000)::int::text),  
md5((random()*100)::int::text),  
md5((random()*100)::int::text),  
clock_timestamp()  
) on conflict (id)   
do nothing;  
```  
```  
pgbench -M prepared -n -r -P 1 -f ./test2.sql -c 52 -j 52 -T 120  
progress: 1.0 s, 9536.4 tps, lat 5.403 ms stddev 2.373  
progress: 2.0 s, 9579.0 tps, lat 5.421 ms stddev 2.730  
progress: 3.0 s, 9886.0 tps, lat 5.265 ms stddev 2.483  
progress: 4.0 s, 10011.0 tps, lat 5.201 ms stddev 2.710  
progress: 5.0 s, 10345.0 tps, lat 5.026 ms stddev 2.434  
progress: 6.0 s, 9983.0 tps, lat 5.188 ms stddev 2.554  
progress: 7.0 s, 9892.0 tps, lat 5.277 ms stddev 2.674  
progress: 8.0 s, 10375.0 tps, lat 5.011 ms stddev 2.390  
progress: 9.0 s, 10059.0 tps, lat 5.165 ms stddev 2.678  
progress: 10.0 s, 10123.0 tps, lat 5.135 ms stddev 2.470  
progress: 11.0 s, 5129.5 tps, lat 4.941 ms stddev 2.311  
progress: 12.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 13.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 14.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 15.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 16.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 17.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
progress: 18.0 s, 0.0 tps, lat 0.000 ms stddev 0.000  
```  
等待page lock  
```  
[root@iZbp135pwcjjoxqgfpw9k1Z ~]# pstack 41065  
#0  0x00007f5441b9ae43 in __epoll_wait_nocancel () from /lib64/libc.so.6  
#1  0x000000000075888e in WaitEventSetWait ()  
#2  0x0000000000758ce9 in WaitLatchOrSocket ()  
#3  0x00000000007701df in ProcSleep ()  
#4  0x0000000000764cef in WaitOnLock ()  
#5  0x0000000000766076 in LockAcquireExtended ()  
#6  0x0000000000763f46 in LockPage ()  
#7  0x000000000052d0e3 in zsundo_trim ()  
#8  0x000000000052e32e in zsundo_get_oldest_undo_ptr ()  
#9  0x0000000000520b95 in zsbt_tid_begin_scan ()  
#10 0x000000000052a54f in zedstoream_fetch_row ()  
#11 0x000000000052a9c1 in zedstoream_index_fetch_tuple ()  
#12 0x00000000004d29b2 in index_fetch_heap ()  
#13 0x00000000004d2a1b in index_getnext_slot ()  
#14 0x000000000062cd2b in check_exclusion_or_unique_constraint ()  
#15 0x000000000062d73e in ExecCheckIndexConstraints ()  
#16 0x0000000000653de6 in ExecInsert ()  
#17 0x0000000000655219 in ExecModifyTable ()  
#18 0x000000000062e092 in standard_ExecutorRun ()  
#19 0x000000000077c02a in ProcessQuery ()  
#20 0x000000000077c258 in PortalRunMulti ()  
#21 0x000000000077cc6d in PortalRun ()  
#22 0x000000000077a902 in PostgresMain ()  
#23 0x0000000000482278 in ServerLoop ()  
#24 0x0000000000709d63 in PostmasterMain ()  
#25 0x0000000000482ebe in main ()  
```  
等待buffer_content lock  
```  
[root@iZbp135pwcjjoxqgfpw9k1Z ~]# pstack 41063  
#0  0x00007f544279aafb in do_futex_wait.constprop.1 () from /lib64/libpthread.so.0  
#1  0x00007f544279ab8f in __new_sem_wait_slow.constprop.0 () from /lib64/libpthread.so.0  
#2  0x00007f544279ac2b in sem_wait@@GLIBC_2.2.5 () from /lib64/libpthread.so.0  
#3  0x00000000006f7f52 in PGSemaphoreLock ()  
#4  0x0000000000769a5c in LWLockAcquire ()  
#5  0x000000000051c8c3 in zsbt_descend ()  
#6  0x0000000000521143 in zsbt_tid_multi_insert ()  
#7  0x0000000000528010 in zedstoream_insert_speculative ()  
#8  0x000000000065417f in ExecInsert ()  
#9  0x0000000000655219 in ExecModifyTable ()  
#10 0x000000000062e092 in standard_ExecutorRun ()  
#11 0x000000000077c02a in ProcessQuery ()  
#12 0x000000000077c258 in PortalRunMulti ()  
#13 0x000000000077cc6d in PortalRun ()  
#14 0x000000000077a902 in PostgresMain ()  
#15 0x0000000000482278 in ServerLoop ()  
#16 0x0000000000709d63 in PostmasterMain ()  
#17 0x0000000000482ebe in main ()  
```  
性能对比  
引擎 | 存储空间 | OLTP KV查询 | OLAP 列级聚合统计  
---|--- | --- | ---  
heap | 1千万 4GB | 0.061 毫秒 | 2.6 秒  
zedstore | 1千万 2GB | 0.838 毫秒 | 1.3 秒  
目前zedstore的并发写入还存在问题, 查询没有问题.   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")