# 使用Wireshark捕捉USB通信数据

#### 译文声明
本文是翻译文章，原文来源：360安全播报。译文仅供参考，具体内容和含义请以原文为准。

### 简介
USB（Universal Serial Bus）即通用串行总线，是一种外部总线标准，用于规范电脑与外部设备的连接和通讯。它支持设备的即插即用和热插拔功能，在PC领域广泛应用。随着越来越多的设备采用USB接口作为通信端口，了解其工作方式和运行机制变得尤为重要。无论你是硬件黑客还是对外围设备感兴趣的技术爱好者，掌握USB设备的相关知识都是一个非常具有挑战性的任务。通过使用Wireshark工具，我们可以嗅探并截获USB设备发送的数据流，并将其存储到主机中。本实验使用的操作系统为Windows或Linux。

### 材料准备
- Wireshark 2.0.1 (SVN)
- Linux kernel 4.1.6

请注意，尽管文中推荐了特定版本的软件，但任何高于1.2.0版本的Wireshark均可用于此操作。遗憾的是，关于Windows系统的具体步骤并未在本文中提供，但会在后续更新中补充这部分内容。

### 背景知识
在深入探讨如何使用Wireshark捕捉USB通信前，先来了解一下USB设备的基础知识。根据不同的应用场景，USB主要有以下三种类型：

- **USB UART接口**：这类设备主要用于数据接收与发送。
- **USB HID（人机交互设备）**：如键盘、鼠标等，用于实现用户与计算机之间的互动。
- **USB存储设备**：例如移动硬盘、U盘等，是最常见的USB设备形式之一。

每种类型的USB设备都有其独特的厂商ID和产品ID，这些标识符有助于识别制造商及其产品。例如，下图显示了我电脑上已连接的一些USB设备信息，其中包含了一个罗技无线鼠标的详细信息（Bus 003 Device 010: ID 046d:c52f Logitech, Inc. Unifying Receiver）。

### 准备阶段
为了能够利用Wireshark捕获USB通信数据，你需要确保拥有足够的权限。虽然不建议直接使用root账户进行操作，但在Linux系统下可以通过创建`usbmon`组并添加相应规则来赋予必要的访问权限。执行以下命令完成设置：
```bash
sudo addgroup usbmon
sudo gpasswd -a $USER usbmon
echo 'SUBSYSTEM=="usbmon", GROUP="usbmon", MODE="640"' | sudo tee /etc/udev/rules.d/99-usbmon.rules
```
此外，还需加载`usbmon`内核模块（如果尚未加载的话）：
```bash
sudo modprobe usbmon
```

### 数据捕获过程
启动Wireshark后，你会看到一系列可用接口列表。寻找形如`usbmonX`的条目，其中`X`代表数字编号。选择与目标设备相匹配的那个接口开始监听即可。一旦成功捕获到数据流，你就可以开始分析了。

### 结语
成功获取数据后，下一步取决于你的需求。通常来说，这将帮助你更好地理解设备与主机之间的通信机制；甚至有时候还可以结合个人专业知识来进行逆向工程研究。希望这篇文章对你有所帮助！更多相关信息，请继续关注360安全播报平台。