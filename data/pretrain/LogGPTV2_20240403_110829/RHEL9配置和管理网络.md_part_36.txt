:::
如果您将多个网络接口连接到 LLDP 广播同一 VLAN ID
的不同交换机端口，`nmstate-autoconf`{.literal}
会为这些接口创建一个绑定，并在其上配置通用 VLAN ID。
::: itemizedlist
**先决条件**
-   已安装 `nmstate`{.literal} 软件包。
-   在网络交换机上启用了 LLDP。
-   以太网接口为 up。
:::
::: orderedlist
**步骤**
1.  在以太网接口上启用 LLDP：
    ::: orderedlist
    1.  创建包含以下内容的 YAML 文件，如 `~/enable-lldp.yml`{.literal}
        ：
        ``` literallayout
        interfaces:
          - name: enp1s0
            type: ethernet
            lldp:
              enabled: true
          - name: enp2s0
            type: ethernet
            lldp:
              enabled: true
          - name: enp3s0
            type: ethernet
            lldp:
              enabled: true
        ```
    2.  将设置应用到系统：
        ``` literallayout
        # nmstatectl apply ~/enable-lldp.yml
        ```
    :::
2.  使用 LLDP 配置网络接口：
    ::: orderedlist
    1.  可选，启动空运行来显示并验证 `nmstate-autoconf`{.literal} 生成的
        YAML 配置：
        ``` literallayout
        # nmstate-autoconf -d enp1s0,enp2s0,enp3s0
        ---
        interfaces:
        - name: prod-net
          type: vlan
          state: up
          vlan:
            base-iface: bond100
            id: 100
        - name: mgmt-net
          type: vlan
          state: up
          vlan:
            base-iface: enp3s0
            id: 200
        - name: bond100
          type: bond
          state: up
          link-aggregation:
            mode: balance-rr
            port:
            - enp1s0
            - enp2s0
        ```
    2.  使用 `nmstate-autoconf`{.literal} 根据从 LLDP
        接收的信息生成配置，并将设置应用到系统：
        ``` literallayout
        # nmstate-autoconf enp1s0,enp2s0,enp3s0
        ```
    :::
:::
::: itemizedlist
**后续步骤**
-   如果您的网络中没有 DHCP 服务器，它为接口提供 IP
    设置，请手动配置它们。详情请查看：
    ::: itemizedlist
    -   [配置以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html "第 6 章 配置以太网连接"){.link}
    -   [配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html "第 12 章 配置网络绑定"){.link}
    :::
:::
::: orderedlist
**验证**
1.  显示单个接口的设置：
    ``` literallayout
    # nmstatectl show 
    ```
:::
::: itemizedlist
**其他资源**
-   `nmstate-autoconf(8)`{.literal} man page
:::
:::
:::
[]{#assembly_using-lldp-to-debug-network-configuration-problems_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#assembly_using-lldp-to-debug-network-configuration-problems_configuring-and-managing-networking.html#assembly_using-lldp-to-debug-network-configuration-problems_configuring-and-managing-networking}第 25 章 使用 LLDP 调试网络配置问题 {.title}
:::
您可以使用 Link Layer Discovery
Protocol(LLDP)来调试拓扑中的网络配置问题。这意味着 LLDP
可能会报告与其他主机或路由器和交换机的配置不一致。
::: section
::: titlepage
# []{#assembly_using-lldp-to-debug-network-configuration-problems_configuring-and-managing-networking.html#proc_debugging-an-incorrect-vlan-configuration-using-lldp-information_assembly_using-lldp-to-debug-network-configuration-problems}使用 LLDP 信息调试不正确的 VLAN 配置 {.title}
:::
如果您将交换机端口配置为使用特定的 VLAN 和主机收到这些 VLAN
数据包，您可以使用 Link Layer Discovery
Protocol(LLDP)来调试问题。在没有接收数据包的主机上执行这个步骤。
::: itemizedlist
**先决条件**
-   已安装 `nmstate`{.literal} 软件包。
-   交换机支持 LLDP。
-   LLDP 在邻居设备上已启用。
:::
::: orderedlist
**步骤**
1.  使用以下内容创建 `~/enable-LLDP-enp1s0.yml`{.literal} 文件：
    ``` literallayout
    interfaces:
      - name: enp1s0
        type: ethernet
        lldp:
          enabled: true
    ```
2.  使用 `~/enable-LLDP-enp1s0.yml`{.literal} 文件，在接口
    `enp1s0`{.literal} 上启用 LLDP：
    ``` literallayout
    # nmstatectl apply ~/enable-LLDP-enp1s0.yml
    ```
3.  显示 LLDP 信息：
    ``` literallayout
    # nmstatectl show enp1s0
    - name: enp1s0
      type: ethernet
      state: up
      ipv4:
        enabled: false
        dhcp: false
      ipv6:
        enabled: false
        autoconf: false
        dhcp: false
      lldp:
        enabled: true
        neighbors:
        - - type: 5
            system-name: Summit300-48
          - type: 6
            system-description: Summit300-48 - Version 7.4e.1 (Build 5)
              05/27/05 04:53:11
          - type: 7
            system-capabilities:
            - MAC Bridge component
            - Router
          - type: 1
            _description: MAC address
            chassis-id: 00:01:30:F9:AD:A0
            chassis-id-type: 4
          - type: 2
            _description: Interface name
            port-id: 1/1
            port-id-type: 5
          - type: 127
            ieee-802-1-vlans:
            - name: v2-0488-03-0505
              vid: 488
            oui: 00:80:c2
            subtype: 3
          - type: 127
            ieee-802-3-mac-phy-conf:
              autoneg: true
              operational-mau-type: 16
              pmd-autoneg-cap: 27648
            oui: 00:12:0f
            subtype: 1
          - type: 127
            ieee-802-1-ppvids:
            - 0
            oui: 00:80:c2
            subtype: 2
          - type: 8
            management-addresses:
            - address: 00:01:30:F9:AD:A0
              address-subtype: MAC
              interface-number: 1001
              interface-number-subtype: 2
          - type: 127
            ieee-802-3-max-frame-size: 1522
            oui: 00:12:0f
            subtype: 4
      mac-address: 82:75:BE:6F:8C:7A
      mtu: 1500
    ```
4.  验证输出，以确保设置与您的预期配置匹配。例如，连接到交换机的接口的
    LLDP 信息显示此主机的交换机端口已连接到使用 VLAN ID `448`{.literal}:
    ``` literallayout
    - type: 127
            ieee-802-1-vlans:
            - name: v2-0488-03-0505
              vid: 488
    ```
    如果 `enp1s0`{.literal} 接口的网络配置使用不同的 VLAN
    ID，请相应地进行修改。
:::
::: title
**其他资源**
:::
[配置 VLAN
标记](#configuring-vlan-tagging_configuring-and-managing-networking.html "第 8 章 配置 VLAN 标记"){.link}
:::
:::
[]{#assembly_manually-creating-networkmanager-profiles-in-key-file-format_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#assembly_manually-creating-networkmanager-profiles-in-key-file-format_configuring-and-managing-networking.html#assembly_manually-creating-networkmanager-profiles-in-key-file-format_configuring-and-managing-networking}第 26 章 使用密钥文件格式手动创建 NetworkManager 配置集 {.title}
:::
默认情况下，NetworkManager
以密钥文件格式存储配置集。例如，`nmcli`{.literal}
实用程序、`networking`{.literal} RHEL 系统角色或 `nmstate`{.literal} API
来管理配置集使用这种格式。但是，NetworkManager 仍然支持已弃用的
`ifcfg`{.literal} 格式的配置集。
::: section
::: titlepage
# []{#assembly_manually-creating-networkmanager-profiles-in-key-file-format_configuring-and-managing-networking.html#con_the-key-file-format-of-networkmanager-profiles_assembly_manually-creating-networkmanager-profiles-in-key-file-format}NetworkManager 配置集的密钥文件格式 {.title}
:::
NetworkManager 在磁盘上存储连接配置集时使用 INI 样式的密钥文件格式。
::: title
**使用密钥文件格式的以太网连接配置集示例**
:::
``` literallayout
[connection]
id=example_connection
uuid=82c6272d-1ff7-4d56-9c7c-0eb27c300029
type=ethernet
autoconnect=true
[ipv4]
method=auto
[ipv6]
method=auto
[ethernet]
mac-address=00:53:00:8f:fa:66
```
每个部分都对应一个 NetworkManager 设置名称，如
`nm-settings(5)`{.literal} 和 `nm-settings-keyfile(5)`{.literal} man
page 中所述。每个部分中的每个键值对是 man page
设置规格中列出的属性之一。
NetworkManager 密钥文件中大多数变量都有一个一对一的映射。这意味着
NetworkManager
属性作为相同名称的变量和相同格式存储在密钥文件中。但存在一些例外情况，主要是为了使密钥文件语法更易于阅读。有关这些例外列表，请查看
`nm-settings-keyfile(5)`{.literal} man page。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
出于安全考虑，由于连接配置集可以包含敏感信息，如私钥和密语，NetworkManager
仅使用 `root`{.literal} 拥有的配置文件，并且仅可由 `root`{.literal}
读取并可写入。
:::
根据连接配置集的目的，将其保存在以下目录中：
::: itemizedlist
-   `/etc/NetworkManager/system-connections/`{.literal}
    ：用户创建的持久配置集的一般位置也可以编辑。NetworkManager
    将其自动复制到 `/etc/NetworkManager/system-connections/`{.literal}。
-   `/run/NetworkManager/system-connections/`{.literal}
    ：对于在重启系统时自动删除的临时配置集。
-   `/usr/lib/NetworkManager/system-connections/`{.literal}
    ：对于预先部署的不可变配置集。当您使用 NetworkManager API
    编辑此类配置集时，NetworkManager
    会把这个配置集复制到持久或临时存储。
:::
NetworkManager
不会从磁盘自动重新载入配置集。当您使用密钥文件格式创建或更新连接配置集时，请使用
`nmcli connection reload`{.literal} 命令告知 NetworkManager 的变化。
:::
::: section
::: titlepage
# []{#assembly_manually-creating-networkmanager-profiles-in-key-file-format_configuring-and-managing-networking.html#proc_creating-a-networkmanager-profile-in-key-file-format_assembly_manually-creating-networkmanager-profiles-in-key-file-format}使用密钥文件格式创建 NetworkManager 配置集 {.title}
:::
本节介绍如何以密钥文件格式手动创建 NetworkManager 连接配置集的一般步骤。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
手动创建或更新配置文件可能会导致意外或无法正常工作的网络配置。红帽建议您使用
NetworkManager 工具，如 `nmcli`{.literal}、`网络`{.literal} RHEL
系统角色或 `nmstate`{.literal} API 来管理 NetworkManager 连接。
:::
::: orderedlist
**步骤**
1.  如果您是为硬件接口（如以太网）创建配置集，请显示这个接口的 MAC
    地址：
    ``` literallayout
    # ip address show enp1s0
    2: enp1s0:  mtu 1500 qdisc fq_codel state UP group default qlen 1000
        link/ether 00:53:00:8f:fa:66 brd ff:ff:ff:ff:ff:ff
    ```
2.  创建连接配置集。例如，对于使用 DHCP
    的以太网设备的连接配置集，请使用以下内容创建
    `/etc/NetworkManager/system-connections/example.nmconnection`{.literal}
    文件：