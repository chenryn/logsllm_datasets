User: 请解答这个和日志有关的问题Useful WMI admin scripts In a comment to my response to this question , cop1152 said he loved WMI scripts. Well, so do I!

What are your favourite, best, most useful scripts you'd like to share with the community?

thanks.

Assistant: One I wrote to help a colleague, who RDPd to a server, opened Event Viewer, looked through it for errors. Then repeated for the other 3 servers... every day.

'
' WMI script to read all eventlog errors generated since last time this script was run.
' This script reads a datetime value from a file (EventView_date.txt) and uses it to
' construct a WMI query for all windows EventLog entries since then that are of type
' Error or error (seems winxp writes with a lowercase e)
'
' These results are written to a file (EventView_&lt;dts&gt;.log) and the time the script was
' run is written to the date file. This allows this script to be run several times a day
' and will only retrieve the error entries since the last run.
'
' If the date file is not present a new one will be created with the current date/time.
'
'
' Usage: click the vbs file in Windows Explorer to run using wscript. Some information
'        will be displayed in message boxes (start time, each computer, number of records found)
'        Alternatively type "cscript EventLogErrorView.vbs" in a command prompt to show the
'        same details written to the command prompt. This can be used in a batch file, or in
'        a scheduled task - the command is cscript, the parameter is this vbs file.
'
'
' 

On Error Resume Next

'
' update this to refelect the computers to monitor - comma separated for multiple
'
arrComputers = Array("server1", "server2")



Const wbemFlagReturnImmediately = &amp;h10
Const wbemFlagForwardOnly = &amp;h20

Set objFSO = CreateObject("Scripting.FileSystemObject")

today = ""
Set objDateFile = objFSO.OpenTextFile ("EventView_date.txt")
    today = objDateFile.Readline
    Wscript.echo "today = " &amp; today
    if (isempty(today)) then
        WScript.Echo "Date file not found, using today's date at midnight"
        today = Date &amp; " 00:00:00"
    end if

    today = DateToWMIDateString(today)

' write current datetime to file for next run.
set objDateFile = objFSO.CreateTextFile("EventView_date.txt")
objDateFile.WriteLine(Date &amp; " " &amp; Time)

Set objFile = objFSO.CreateTextFile("EventView_" &amp; today &amp; ".log")



' start processing
WScript.Echo "Processing All Error reports since: " &amp; today &amp; " (" &amp; WMIDateStringToDate(today) &amp; ")"
objFile.WriteLine "Processing All Error reports since: " &amp; today &amp; " (" &amp; WMIDateStringToDate(today) &amp; ")"


For Each strComputer In arrComputers
   objFile.WriteLine
   objFile.WriteLine
   objFile.WriteLine
   objFile.WriteLine "=========================================="
   objFile.WriteLine "Computer: " &amp; strComputer
   objFile.WriteLine "=========================================="

   WScript.Echo "Computer: " &amp; strComputer

' notes:
' timestamp comparisons in WMI queries are in the form YYYYMMDDHHMMSS.milliseconds+exp

   Set objWMIService = GetObject("winmgmts:\\" &amp; strComputer &amp; "\root\CIMV2")
   Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_NTLogEvent WHERE (Type = 'error' OR Type= 'Error') AND TimeGenerated &gt; '" &amp; today &amp; ".000000+000'", "WQL", _
                                          wbemFlagReturnImmediately + wbemFlagForwardOnly)

   dim records
   records = 0

   For Each objItem In colItems
        objFile.WriteLine "CategoryString: " &amp; objItem.CategoryString
        objFile.WriteLine "ComputerName: " &amp; objItem.ComputerName
        strData = Join(objItem.Data, ",")
            objFile.WriteLine "Data: " &amp; strData
        objFile.WriteLine "EventCode: " &amp; objItem.EventCode
        objFile.WriteLine "EventIdentifier: " &amp; objItem.EventIdentifier
        objFile.WriteLine "EventType: " &amp; objItem.EventType

        strInsertionStrings = Join(objItem.InsertionStrings, ",")
        objFile.WriteLine "InsertionStrings: " &amp; strInsertionStrings
        objFile.WriteLine "Logfile: " &amp; objItem.Logfile
        objFile.WriteLine "Message: " &amp; objItem.Message

        objFile.WriteLine "SourceName: " &amp; objItem.SourceName
        objFile.WriteLine "TimeGenerated: " &amp; WMIDateStringToDate(objItem.TimeGenerated)

        objFile.WriteLine "Type: " &amp; objItem.Type
        objFile.WriteLine "User: " &amp; objItem.User
        objFile.WriteLine
        objFile.WriteLine "------------------------------------------"
        objFile.WriteLine

        records = records + 1
   Next

   WScript.Echo "          " &amp; records &amp; " records found"
   objFile.WriteLine "          " &amp; records &amp; " records found"
Next



Function WMIDateStringToDate(dtmDate)
    WMIDateStringToDate = CDate(Mid(dtmDate, 5, 2) &amp; "/" &amp; _
    Mid(dtmDate, 7, 2) &amp; "/" &amp; Left(dtmDate, 4) _
    &amp; " " &amp; Mid (dtmDate, 9, 2) &amp; ":" &amp; Mid(dtmDate, 11, 2) &amp; ":" &amp; Mid(dtmDate,13, 2))
End Function

' takes a dd/mm/yyyy hh:mm:ss format and turns it into yyyymmddhhmmss
Function DateToWMIDateString(dtmDate)
DateToWMIDateString = Year(dtmDate) &amp; PadZeros(Month(dtmDate)) &amp; PadZeros(Day(dtmDate)) &amp; PadZeros(Hour(dtmDate)) &amp; PadZeros(Minute(dtmDate)) &amp; PadZeros(Second(dtmDate))
End Function

Function PadZeros(dtmDate)
If Len(dtmDate) = 1 Then
    PadZeros = "0" &amp; dtmDate
Else
    PadZeros = dtmDate
End If
End Function