important requirement here is to enable key
agreement while ensuring security. More speciﬁcally, a mobile
device is required to encode its key into acoustic signal for
key agreement while being able to successfully derive the
ACR features for authentication. Intuitively, we can use the
frequency changing directions of chirp signal to represent ‘0’
and ‘1’. For example, the chirp signal that sweeps from f0 to
f0 + B represents ‘0’ and the chirp signal that sweeps from
f0 + B to f0 represents ‘1’. However, the coding rate for such
an encoding scheme is very low.
To address these problems, we design a sine wave based
pulse coding method. More speciﬁcally, we add sine waves of
several speciﬁc frequencies (these added sine waves are called
message signal) on the chirp signal to encode key information.
We deﬁne the combined signal as overlapped signal. However,
there still exists a challenge to tradeoff the encoding rate (i.e.,
message transmission speed) and security. If we add more
information in the message signal, the message transmission
speed increases. On the other hand,
it also increases the
difﬁcult to derive the ACR features (it is possible that the ACR
features cannot be derived), and thus the device authentication
may fail.
Next, we introduce how to add message signal on chirp sig-
nal while ensuring the efﬁciency of ACR features extraction.
By applying FFT on the discrete chirp signal, we can
get the amplitude and initial phase information on different
frequencies between f0 to f0 + B. We deﬁne the set of these
frequencies as Fs = {F 1
s } as shown in
Figure 6.
s , ..., F k−1
, F k
s , F 2
s , F 3
s
There are two parameters impacting the performance of sine
wave based pulse coding. First, the frequency of the added sine
wave signal impacts the performance. We need to examine the
impact of the frequency of added sine signal, and search for
the best coding position. Second, the phase of the added sine
wave impacts the performance. We analyze the characteristic
of linear chirp signal and ﬁnd the best phases for coding.
By adding a sine signal of a speciﬁc frequency f∗ on the
original chirp signal, we obtain an overlapped signal. This
overlapped signal has a slope line and a horizontal line on the
corresponding time-frequency spectrum.
(a) f∗ /∈ Fs.
(b) f∗
s ∈ Fs.
Fig. 7: Different added frequencies can have different perfor-
mance.
(a) sine signal phase = 0.
(b) sine signal phase = P iα
s .
Fig. 8: Different added phases can have different performance.
With different f∗, we ﬁnd that the resulted time-frequency
spectrums of the overlapped signal are similar. However, the
resulted energy distribution is different. We can see the impact
of two different f∗ in Figure 7. As shown in Figure 7b, if the
added frequency f∗ is in Fs, the extra energy concentrates
on the selected frequency and the energy on other frequencies
are almost not changed. Otherwise, as shown in Figure 7a,
the energy of multiple frequencies in Fs are impacted and
changed. The energy changing of multiple frequencies will
further impact
the calculation of ACR and decoding the
encoded message. Thus, it is better to add sine signal with
the frequencies in Fs as it introduces less noise. As a result,
we choose the frequency of sine wave from Fs to preserve
ACR features as much as possible.
s for different frequency F i
We also examine the impact of added sine wave phases.
It should be noted that different frequencies on the chirp
signal have different initial phases (as shown in ﬁgure 6 (b)).
Therefore, we should also consider the impact of the phase
of the added sine signal for different frequencies. To show
the impact of phase, we add multiple sine signal of different
frequencies in Fs on a chirp signal. Figure 6(b) shows the
initial phase P i
s in Fs. First, we set
the phases for all added sine waves to 0. We can see that the
energy of corresponding frequencies are signiﬁcantly different
as shown in Figure 8(a). The energy at some frequency is
absorbed. Moreover, the energy at some frequency is even
reduced. This is because the phase of the added signal is
not the same with the original signal on the chirp. In such
a circumstance, it is difﬁcult to design decoding method for
these varying energy distribution. In our encoding, we adjust
the initial phase of sine signal to P i
s in order
s for frequency F i
 f0 f0+BFrequency  Power f0 f0+BFrequency--0.500.5Phase f0 f*Frequency    Powerpure chirpadd sine signal on other frequency f0 fs*Frequency    Powerpure chirpadd sine signal on frequency in Fs F0 Fs1 Fs2 Fs3 Fs4 Fs5Frequency    Powerpure chirpadd sine signals with pahse = 0 F0 Fs1 Fs2 Fs3 Fs4 Fs5Frequency    Powerpure chirpadd sine signals with phase =  Psi(a)
(b)
Fig. 9: (a)Frequency domain energy distribution of original chirp and encoded chirp; (b)Message response and the moving
window average; (c)Normalized message response with ‘0’ and ‘1’ marked on it; (d)Slope of normalized message response
with ‘0’ and ‘1’ marked on it.
(c)
(d)
to obtain uniﬁed energy amplitude on each frequency as shown
in Figure 8(b).
For a speciﬁc frequency in Fs, we add a sine signal with
corresponding initial phase to represent ‘1’ and add nothing
to represent ‘0’. In order to test the performance of sine wave
based pulse coding, we use these 40 coding frequencies (called
encoding frequency)to encode a binary sequence with ‘1’ and
‘0’ alternately. We let Alice transmit this overlapped signal
to Bob. Figure 9(a) illustrates the ACR features from the
pure chirp and the overlapped signal. The trends of these two
curves are very similar. The correlation coefﬁcient is 0.9761
which indicates that the ACR features is preserved for device
authentication. Meanwhile, the encoded information can be
effectively decoded.
B. Decoding
The next task is decoding binary sequence from the encoded
chirp. For the frequency domain energy distribution of a
received overlapped signal, the ﬂuctuations over frequencies is
caused by both the message encoding on coding frequencies
and the channel frequency selectivity. It is difﬁcult to separate
the information of encoding information (called message re-
sponse) from the impact of channel selectivity (called channel
ACR). Meanwhile, the channel ACR also introduces noise
for message decoding. To address this problem, we ﬁnd that
acoustic channel frequency selectivity is stable with the same
devices and the same multipath environment as shown in
section II-B. The impact of channel selectivity on the pure
chirp and the overlapped signal is the same. We can use the
ACR from the pure chirp as the channel ACR of the overlapped
signal. As we have obtained the channel ACR features of pure
chirp in bidirectional initial authentication, message response
of the overlapped signal can be obtained by subtracting the
channel ACR.
The frequency domain energy distribution of a received pure
chirp A1 and a received overlapped signal A2 are shown in
ﬁgure 9(a). We can derive message response in ﬁgure 9(b) by
A2 − A1. In the message response, the presence of spikes on
coding frequencies indicates ‘1’ and ‘0’ otherwise. Meanwhile,
we can see that the impact of channel frequency selectivity is
very small in the message response as shown in Figure 9(b). In
order to remove the base energy difference over frequencies,
we normalize the message response by subtracting the slip
average of message response as shown in ﬁgure 9(b). The
normalized message response is shown in Figure 9(c). We can
easily distinguish the bits ‘1’ from ‘0’ by their energy levels.
To reduce the decoding bit error rate, we further calculate
the ﬁrst derivative of the curve in Figure 9(c). The result is
shown in Figure 9(d). Then we decode ‘1’ and ‘0’ based on
the resulted energy distribution.
C. Dual Microphone based Decoding
We also observe that the coding bits are difﬁcult to decode
on the frequencies that are in the valley of the ACR curve.
Acoustic channel response is very weak on these frequencies,
and the sine signal carrying bit ‘1’ on these frequencies is
easy to be absorbed. We can see the impact of ACR on sine
signal in Figure 9(a) and 9(d), the signal strength is low on
frequencies with low ACR. This phenomenon makes the bits
encoded in the valley of the ACR curve difﬁcult to decode.
Here, we propose a dual microphone based decoding
method to signiﬁcantly enhance the decoding rate. Most s-
martphones have a pair of microphones which are usually on
the top and bottom respectively. For the same sound signal,
these two microphones have different relative positions. Thus,
their ACRs are different. More speciﬁcally, the peaks and
valleys in their ACR curves may be on different frequencies.
This is also validated in real experiments. Figure 10 shows
the different ACRs of the two microphones on the same
smartphone. Therefore, we can combine the signal from two
different microphones for decoding. If the decoding results of
two microphones for a speciﬁc bit are different, we will check
the signal condition of two microphones on this bit. We design
a measuring method to the exam a “valley-peak” value V for
the coding bits. The value of V is with in the range of [0,1].
V = 0 means this bit is absolutely in a valley, V = 1 means
this bit is absolutely in a peak. A value between 0 and 1 means
this bit is between a valley and a peak. The microphone which
has a higher value of V on the debatable bit will be selected to
decide the decoding result. This can signiﬁcantly reduce the
decoding error rate. The detailed result is shown in section
VI-B4.
 f0 f0+BFrequency     PowerPure chirp A1Overlapped signal A2 f0 f0+BFrequency  PowerMessage responseSlip average f0 f0+BFrequency  PowerNormalized messsage response'1''0' f0 f0+BFrequency   Slope of normalized messsage response'1''0'Fig. 10: ACRs of two microphones on
smartphone.
Fig. 11: Response interval CDF in
three circumstances.
Fig. 12: Response interval deviation in
groups.
VI. IMPLEMENTATION AND EVALUATION
In this section, we conduct extensive experiments to evaluate
our D2D authentication and key agreement protocol.
A. Implementation and Experiment Settings
We implement our protocol in Android 6.0.1 and evaluate
it on two mobile devices (i.e., Nexus 5X and Nexus 6P). The
real time audio processing is achieved by Android Fast Mixer
audio path. We set the start frequency f0 and the bandwidth
B of the chirp signal as 14KHz and 7KHz.In order to
evaluate the inﬂuence of surrounding environment, we conduct
the experiments in three different environments (i.e., meeting
room, N-LOS (None Line of Sight) room, and coffee shop).
To mitigate the inﬂuence of environment changes, we clear
all human activity in meeting room. Thus, the multi-path of
audio channel keeps stable in meeting room. Moreover, we
set up the N-LOS condition in the meeting room by blocking
the LOS between a pare of devices with a booklet which is
0.5cm thick. In the coffee shop, the experiments are conducted
during business hours. The walking of some customers makes
the multi-path dynamic in the coffee shop.
Some variables are further set and measured in different
experiment situations. They are deﬁned as follows:
(1) Device distance is the distance between the edges of
two devices when we place them side by side. In our
experiments, we test the performance of our protocol with
different device distance.
(2) Response interval is the time interval between the initia-
tor receives the request signal from itself and the initiator
receives the response signal from responder. We measure
the response interval in our experiments of different envi-
ronments.
B. Evaluation
The evaluation results that show the inﬂuence of response
interval, the performance of authenticate device with ACR,
and the speed of key agreement are respectively illustrated as
following.
1) Quick Response Evaluate: To test the performance of
quick response in different circumstances, we conduct 3
groups of experiments on Nexus 5x in meeting room, N-
LOS meeting room, and coffee shop. Device distance in
three circumstances is set as 0.5cm which is the minimal
distance in N-LOS environment. We set the sampling rate fs
as 48000Hz. We respectively take total 283 request-response
examination in each environment. Figure 11 shows the CDF
(cumulative distribution function) of response interval of all
request-response examinations in three circumstances. We can
see that the distributions of response interval under different
circumstances are similar. This means that the quick response
method works well in all three environments. We can see that
more than 68% response intervals are less than 21ms in all
three circumstances. In the air, the sound speed is constant as
c = 340m/s. If we set the authentication interval threshold
δ as 21ms, considering the attackers may have 0ms round-
trip audio latency, we can get a safe distance Da ≈ 3.57m
by Eq. 4. Safe distance means our method can resist the
attack from any possible high performance devices out of this
distance.
Da =
Autht
1000 × c
2
≈ 3.57m
(4)
2) Authentication Efﬁciency: In every authentication pro-