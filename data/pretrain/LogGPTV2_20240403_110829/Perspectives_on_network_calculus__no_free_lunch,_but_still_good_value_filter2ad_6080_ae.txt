### 优化后的文本

#### 数学公式
\[ W \leq (NM + 1)b \]

### 概率端到端延迟边界
使用Fidler [22] 中的SNC公式和方程(29)中的表示方法，可以推导出概率端到端延迟边界（此处未显示）。

### 图3：容量需求
图3展示了使用DNC和SNC计算的问题Q1(a)和Q2(b)所需的容量C。注意，(a)部分清楚地显示了当 \( b = 3r \) 时的传统多路复用增益。此外，当流的数量达到约10个时，多路复用增益开始显现。而在(b)部分中，当只有一个交叉流 \( N = 1 \) 时，没有分布式多路复用增益；但是，当 \( N \) 足够大（例如50）时，传统多路复用增益开始显现，并补偿了缺乏分布式多路复用增益的情况。

**图3：** 容量规划，使用DNC和SNC分别满足延迟约束（延迟 ≤ 1）和 \( P(\text{延迟} > 1) \leq \varepsilon \)（其中 \( r = 1, \varepsilon = 10^{-3} \)）

#### (a) 单节点
- **CytiCapaC**
  - 300
  - 200
  - 100
  - 0
- **DNC**
- **SNC**
- **1000**
- **DNC**
- **SNC**

#### (b) 多节点 (\( b = 3r \))
- **CytiCapaC**
  - 750
  - 500
  - 250
  - 0
- **N = 50**
- **100**
- **0**
- **2**
- **4**
- **6**
- **8**
- **10**
- **跳数 M**
- **N = 1**
- **b = 3r**
- **b = r**
- **20**
- **80**
- **流数 N**
- **40**
- **60**

### 结论
网络演算（Network Calculus, NC）在过去20年里受到了广泛的研究。例如，在Google Scholar上搜索“网络演算”会得到约3000条结果，相比之下，其“老大哥”排队理论则有约60000条结果。普遍认为，NC作为一种替代或补充的方法，在经典排队理论上具有良好的前景。然而，在NC研究人员以及更广泛的受众中，对其的看法在“找到了圣杯”和“这行不通”之间摇摆不定。本文试图澄清一些与网络演算核心建模抽象相关的重要问题，以更好地定位真相，并减少困惑。具体来说，我们收集了以下事实：

- **网络演算是通过将复杂的（通常是非线性的）排队系统近似为min-plus线性系统来实现的。** 这种近似遵循了传统LTI系统理论和经典排队理论的基本属性，尽管这种类比并不完美。
- **关于到达包络，我们提供了一些陷阱以及如何避免它们的建议。** 最显著且深刻的观察是，ACM Sigcomm 2006上提出的S3BB包络模型对一大类到达过程（平稳且遍历）提供了准确定界，这意味着它通常无法捕捉统计多路复用增益。
- **统计多路复用增益可以通过精心定义的包络和服务过程在SNC中很好地捕捉到。** 特别是在独立调节到达过程的应用场景中，我们严格证明了增益约为 \( \Omega(\sqrt{N}) \)，而在此之前这一结论仅是近似的。因此，隧道尽头的光亮可能并不是迎面而来的火车。
- **我们还讨论了界的紧致性，这是几乎所有NC讨论中都存在的一个悬而未决的问题。** 我们澄清了DNC和SNC的紧致性问题。简而言之，DNC通常提供紧致的界，即这些界是可以达到的；SNC的紧致性取决于所使用的底层概率不等式（如Boole、Chernoﬀ、鞅不等式）。由于这些不等式可以模块化地插入SNC分析中，可以说SNC分析可以像现代概率理论允许的一样紧致。

总而言之，虽然使用NC并不能提供免费午餐，但在解决传统上难以处理的基本排队问题方面，它仍然具有很高的价值，因为它在准确性和分析简便性之间提供了可扩展的权衡。

### 致谢
感谢以下人员对本文稿的建设性影响：Jörg Liebeherr, Almut Burchard, Felix Poloczek, Yuming Jiang, Yashar Ghiassi-Farrokhfal, Markus Fidler, Hao Wang, Karthik Rajkumar，以及柏林工业大学（TU Berlin）WS/11-12学期随机网络演算课程的所有学生。我们还要感谢我们的牧羊人Mark Crovella和匿名的Sigcomm审稿人的评论。

### 参考文献
[略]

希望这些修改能使您的文本更加清晰、连贯和专业。如果需要进一步的调整，请告诉我！