 **TypeScript Version:**
1.8.10
**Code**
This snippet will throw the error "neither type is assignable to each other,
`property` is missing"
    interface IMyInterface  {
      func(num: number): void;
      property: boolean;
    }
    let myObj: IMyInterface;
    let otherObj = {
      func(): void {}
    };
    myObj = otherObj;
but when adding a parameter to our method the error will dissapear
    interface IMyInterface  {
      func(num: number): void;
      property: boolean;
    }
    let myObj: IMyInterface;
    let otherObj = {
      func(num): void {}
    };
    myObj = otherObj;
also fixing what the error complains about will remove the error, but I
shouldn't need to add `property` when already asserting the type:
    interface IMyInterface  {
      func(num: number): void;
      property: boolean;
    }
    let myObj: IMyInterface;
    let otherObj = {
      func(): void {},
      property: false
    };
    myObj = otherObj;
**Expected behavior:**  
No error message
**Actual behavior:**  
An error message is thrown