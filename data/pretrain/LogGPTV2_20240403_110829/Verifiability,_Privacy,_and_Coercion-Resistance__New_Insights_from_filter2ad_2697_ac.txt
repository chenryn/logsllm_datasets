o) or (x
o, o
x, o
x, o
o, x
x, o
o, x
By this attack, the bulletin board can safely change m votes
of honest voters for one candidate to another candidate, where
m is the number of dishonest voters.
A similar attack works for the case of multiple candidates.
Here the simplest case is that the voting machine is dishonest.
First observe that, given any multi-ballot of an honest voter
voting for candidate i, it is easy to construct three simple
542
ballots (which potentially do not form a valid multi-ballot)
such that these simple ballots together with the multi-ballot of
the honest voter form two valid multi-ballots for candidate
j. Hence, for every dishonest voter, a voting machine can
change the simple ballots of this voter in such a way that
they, together with a multi-ballot of an honest voter, result in
two valid votes for the candidate of the machine’s choice. Note
that several side channels are conceivable over which a voter
could reveal himself as dishonest to the voting machine, e.g.,
voting at a speciﬁc time, pressing buttons in a speciﬁc unusual
order, or in case of many candidates, using a pre-agreed pattern
to ﬁll out the ballot. Note that this attack works even if the
voting machine does not know which simple ballots are taken
as receipts.
The Precise Level of Veriﬁability of ThreeBallot. We now study
the precise level of veriﬁability of both the original variant of
ThreeBallot and the variant by de Marneffe et al., showing that
only changing votes beyond the number of dishonest voters
increases the risk of being detected.
In both cases, we assume that there is a protocol participant
ver (a regular protocol participant or an external observer), the
veriﬁer, who does not accept a run iff some voter complains
rightly (i.e. she has a receipt that does not appear correctly
on the bulletin board) or the bulletin board is inconsistent
(e.g., the number of simple ballots is not divisible by three,
two serial numbers occur twice, a candidate got less marks
than the number of voters, etc.). We assume that an honest
voter checks that her receipt occurs on the bulletin board with
probability pcheck—it is realistic to assume that not all voters
check their receipt. Clearly, this probability will affect the level
of veriﬁability. We also make the following assumptions:
1. Only eligible voters will be allowed to vote, and only once.
Also, the number of voters who actually voted is properly
counted. This is typically guaranteed by clerks. A polling
station should at least have one honest clerk who oversees
the actions of other clerks. This assumption prevents that
the voting machine or the bulletin board can place extra
ballots on the bulletin board.
2. Nobody involved in publishing the result, in particular, the
voting machine and the bulletin board, should get to know
which receipts honest voters chose before all ballots have
been published. This assumption is clearly necessary in
order to achieve any reasonable level of veriﬁability, as
otherwise the voting machine and the bulletin board could
safely change the ballots that were not taken as receipts,
and hence, fabricate arbitrary outcomes.
Let Po
3. The veriﬁer ver behaves as described above.
We note that we neither assume the voting machine nor the
bulletin board to be honest.
TB and Pp
TB denote the ThreeBallot protocol
in
the original variant and the variant by de Marneffe et
al., respectively. Based on the assumptions made above, it
is straightforward to formally deﬁne the protocol
instan-
tiations So
TB =
TB({ver},q,VH ,k,(cid:3)p) of Pp
TB, along with the sets Π(a) for
Po
TB({ver},q,VH ,k,(cid:3)p) of Po
TB and Sp
TB = Po
every protocol participant a as introduced in Section V-A.
Note that AH = {ver} does not include the voting machine or
the bulletin board as they are not assumed to be honest. The
veriﬁer ver could also belong to VH. Clerks are not modeled
explicitly. The interface the voters have to the rest of the
system guarantees assumption 1. above. We deﬁne n = |VH|.
We consider the goal γ(cid:2) which, intuitively, states that at
most (cid:2) votes of honest voters are changed, i.e., the published
result is correct (1) up to votes of dishonest voters and (2) up
to (cid:2) votes of honest voters. Note that for dishonest voters not
much can be guaranteed as they might, for example, ignore
the fact that their receipts are not shown or were modiﬁed on
the bulletin board. More precisely, γ(cid:2) is deﬁned as follows: γ(cid:2)
contains all runs for which there exist choices of the dishonest
voters (where a choice is either to abstain or to vote for one
of the candidates) such that the result obtained together with
the choices made by the honest voters in this run differs only
by (cid:2) votes from the published result (i.e. the result that can
be computed from the simple ballots on the bulletin board).
The following theorem states the levels of veriﬁability of the
two variants of ThreeBallot (see Appendix A for the proof),
where q(cid:2) denotes the probability of the event that in a run
of the protocol there exists a candidate c such that the sum
of all votes of honest voters for all candidates except c is at
least (cid:2). Note that if such an event has not occurred, then it is
impossible to violate the goal γ(cid:2)−1, because, by assumption 1.,
dishonest parties cannot add new ballots to the bulletin board
(as opposed to changing/replacing ballots). However, q(cid:2) will
typically be quite close to 1.
Theorem 1. Let B be the set containing the voting machine
and the bulletin board and x ∈ {o, p}. Then, the goal γ(cid:2) is
guaranteed in Sx
(cid:3)(cid:2)+1−min((cid:2)+1,m)
Ver-veriﬁable by ver, where
· pcheck
(cid:3)(cid:2)+1−min((cid:2)+1,m)
,
δ p
Ver
(cid:2)
TB by B and δ x
= q(cid:2)+1 ·
(cid:2)
1− 1
6
Ver = q(cid:2)+1 ·
δ o
1− 1
3
· pcheck
and
with m being the number of dishonest voters. Moreover, δ x
is optimial, i.e., there is no δ(cid:2)  m
the original variant of the protocol provides a better level of
veriﬁability than the variant by de Marneffe et al., since in
this case δ o
Ver
VAV. An attack similar to the one for ThreeBallot also works
for VAV: Let us assume that there exists an honest voter who
< δ p
Ver.
543
votes for candidate j and that the bulletin board, collaborating
with some dishonest voter, wants to switch such a vote to
a vote for candidate i. To do so, the dishonest voter casts a
multi-ballot where i is marked on all three ballots. Moreover,
the dishonest voter takes the A-ballot as receipt and sends
the serial number on her receipt to the bulletin board. Then,
the bulletin board replaces the simple ballot with this serial
number by an A-ballot where candidate j
is marked. The
bulletin board remains consistent, as the three simple ballots
by the dishonest voter, with the A-ballot modiﬁed, together
with the multi-ballot submitted by the honest voter voting for
j constitute two valid votes for candidate i.
Hence, VAV too does not provide a reasonable level of
veriﬁable. The exact (low) level of veriﬁability VAV achieves
can be found in Appendix B.
C. Inadequacy of Individual and Universal Veriﬁability
In our analysis of veriﬁability of ThreeBallot and VAV
above, we used Deﬁnition 1 as proposed by K¨usters et al.[19].
This deﬁnition, applied to voting protocols, captures what is
called global veriﬁability by K¨usters et al. — in short, if the
published result of the election is not correct, the veriﬁer (a
regular protocol participant or an external observer) should not
accept the run, or only with small probability.
However, in the literature (see, e.g., [14], [1], [24], [12]),
veriﬁability of voting protocols has traditionally been ex-
pressed by two forms of veriﬁability, as already mentioned
in the introduction: individual veriﬁability (a voter can check
that her own ballot appears on the bulletin board) and universal
veriﬁability (anyone can check that the election outcome cor-
responds to the ballots published on the bulletin board). Note
that, unlike global veriﬁability, these forms of veriﬁability
assume some particular structure of the voting protocol. Also
note that
these forms of veriﬁability can be captured by
Deﬁnition 1 using appropriate goals γ.
In the literature it was widely believed that individual and
universal veriﬁability together achieve some form of global
veriﬁability. However, our case study on ThreeBallot and VAV
shows that this is not the case. These protocols achieve both
individual and universal veriﬁability, but as we proved, their
level of (global) veriﬁability is completely insufﬁcient: A voter
can check whether her receipt appears on the bulletin board,
which gives her relatively high assurance that all her simple
ballots are unmodiﬁed and appear on the bulletin board; hence,
we have individual veriﬁability. (More precisely, as explained
in Sections III and IV, if fraud would be attempted, even only
on a moderate scale, the probability that at least one voter
would detect a problem with her receipt would be very high.)
We also obviously have universal veriﬁability as the result
of the election can be computed by everyone based on the
information available on the bulletin board.
In general, what individual and universal veriﬁability ignore
is that dishonest authorities/voters can break the integrity of
ballots of honest voters by ill-formed ballots. Therefore, we
advocate using global veriﬁability (see above) which directly
captures the required property.
VI. PRIVACY AND COERCION-RESISTANCE
In this section, we ﬁrst introduce our deﬁnition of privacy.
We also brieﬂy recall the deﬁnition of coercion-resistance from
[18]. We then present our analysis of privacy and coercion-
resistance of the variants of ThreeBallot and VAV described in
Sections III and IV. We conclude the section with a discussion
of the relationship between privacy and coercion-resistance.
A. Deﬁnition of Privacy
Now, a protocol instantiation P
For studying privacy of a protocol P, we assume that,
besides the voting authorities and the voters,
there is an
additional party o called an observer. We denote by O the
set of all programs an observer can run, i.e. all probabilistic
polynomial-time ITMs with the following communication in-
terface: An observer can directly connect to the interface of
dishonest voters and authorities; in fact, the observer subsumes
those parties. In addition, observers can observe publicly
available information, such as messages posted by voting
authorities. We also assume that, in a protocol instantiation
∗ = P(AH ,q,VH ,k,(cid:3)p), among the q voters, there is a voter
P
who is under observation.
∗ = P(AH ,q,VH ,k,(cid:3)p), along
with the set O of observer processes and a program πv of the
voter v under observation, induces a set of processes of the
form (πo (cid:5) πv (cid:5) e), where πo ∈ O and e denotes the concurrent
ˆπv(cid:2), v(cid:2) ∈ VH, of the honest
composition of the processes
voters and the processes ˆπa, a ∈ AH, of the honest authorities;
recall that the dishonest voters and the dishonest authorities
are subsumed by πo. We denote by Pr[(πo (cid:5) πv (cid:5) e)((cid:2)) (cid:9)→ 1]
the probability that πo outputs 1 in a run of the process
(πo (cid:5) πv (cid:5) e) with security parameter 1(cid:2).
In the following deﬁnition, we formalize privacy to be the
inability of the observer πo to distinguish whether the voter v
(cid:2), where
under observation voted for candidate j or candidate j
v runs her honest voting process ˆπv as speciﬁed by the voting
protocol.
∗ = P(AH ,q,VH ,k,(cid:3)p) be a protocol instan-
Deﬁnition 2. Let P
tiation along with a set O of observer processes and a voter
v under observation. Let δ ∈ [0,1]. We say that P
∗ achieves
δ -privacy, if
Pr[(πo (cid:5) ˆπv( j) (cid:5) e)((cid:2)) (cid:9)→ 1]− Pr[(πo (cid:5) ˆπv( j
(cid:2)) (cid:5) e)((cid:2)) (cid:9)→ 1] (1)
is δ -bounded as a function of the security parameter 1(cid:2), for
all j, j
(cid:2) ∈ {1, . . . ,k} and for all πo ∈ O.
In the above deﬁnition we merely require (1) to be δ -
bounded, instead of negligible, because there is always a non-
negligible probability that an observer knows how a voter
voted, e.g., in case all (honest) voters and the voter under
consideration voted for the same candidate. In general, and
as we will see below and in Section VI-C, δ depends on the
distribution (cid:3)p, the number k of candidates, and the number
n = |VH| of honest voters; the number of dishonest voters is
typically not relevant. By δ , we can precisely measure the
level of privacy a voting protocol offers.
544
We note that the above deﬁnition does not imply that an
observer cannot distinguish whether or not a voter voted, i.e.,
abstention may be detected by an observer. If abstention should
(cid:2) range over
not be detectable, one can simply let
{0, . . . ,k} instead of {1, . . . ,k} in the above deﬁnition. The
above deﬁnition is motivated by the fact that for many voting
protocols, including ThreeBallot and VAV, abstention can be
detected by an observer, since, e.g., the observer is present at
the polling station or the observer can see the receipts of all
voters, and in particular, he can see whether a voter does not
have a receipt.
j and j
The above deﬁnition could be generalized in the obvious
way by letting the observer observe many voters at the same
time and quantifying over two tuples of votes, instead over just
(cid:2). While, for simplicity, in our case study we consider
j and j
the version with one observed voter, our ﬁndings and theorems
extend to the case with multiple observed voters.
We note that the above (cryptographic) deﬁnition of privacy
is close in spirit to a deﬁnition in an abstract, Dolev-Yao style
model [9]. Simulation-based deﬁnitions (see, e.g., [21]) are
stronger, but often too strong to be applicable (e.g., in case of
ThreeBallot and VAV).
Privacy of the Ideal Protocol. As we have already mentioned,
the level δ of privacy is bigger than zero for virtually every
voting protocol, as some information is always leaked by the
result of the election, e.g., if one candidate got all votes—
an event with non-negligible probability—, it is clear that
everybody voted for this candidate. In order to have a lower
bound on δ for all voting protocols (where the results are of the
form considered below), we now determine the optimal value
of δ for the ideal voting protocol. An ideal voting protocol
collects the votes of all voters and then correctly publishes
the result, where we assume that a result reveals the number
of votes for every candidate. The argument sketched below
is similar to the one for determining the level of coercion-
resistance of the ideal voting protocol in [18].
As we will see, the level of privacy of the ideal voting
protocol, denoted by δPriv(k,n,(cid:3)p), depends on the number
k of candidates, on the number n of honest voters, and the
probability distribution (cid:3)p on the candidates.
To deﬁne this function, we need the following terminology.
Since the observer knows the votes of the dishonest voters, he