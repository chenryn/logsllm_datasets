portant observation from Figures 3(a) and 3(b) is that
trafﬁc redirecting and dispatching in Collapsar incur
a non-trivial network performance penalty (comparing
with the curve “Direct”). For remote intruders (or those
behind a weak link), such penalty may be “hidden” by
the already degraded end-to-end network performance.
However, for “nearby” intruders, such penalty may be
observable by comparing performance to a real host in
the same network. This is a limitation of the Collapsar
design. Router-based trafﬁc redirection (Section 4.1) as
well as future hardware-based virtualization technology
are expected to alleviate this limitation.
6 Experiments with Collapsar
In this section, we present a number of real-world
network attack incidences captured by our Collapsar
testbed. We also present the recorded intruder activities
to demonstrate the effectiveness and practicality of Col-
lapsar. Finally, we demonstrate the potential of Collapsar
in log mining and event correlation.
6.1 Attack Case Study
In our Collapsar testbed, there are ﬁve production net-
works:
three Ethernet LANs, one wireless LAN, and
one DSL network. A Collapsar center is located in an-
other Ethernet LAN. The virtual honeypots in the Col-
lapsar center run a variety of operating systems, includ-
ing RedHat Linux 7.2/8.0, Windows XP Home Edition,
FreeBSD 4.2, and Solaris 8.0. Before the start of Col-
lapsar operation, the md5sum of every ﬁle in a hon-
eypot (virtual machine), except in the Windows hon-
eypot, has been calculated and stored for future refer-
ences. For each representative attack incidence, we ex-
amine the speciﬁc vulnerability, describe how the sys-
tem was compromised, and show the intruder’s activities
after the break-in. We note that these attacks are well-
known attacks and have previously been reported. Our
only purpose is to demonstrate the effectiveness of Col-
lapsar when facing real-world attacks.
6.1.1 Linux/VMware Honeypot
The ﬁrst recorded incidence was an attack on an Apache
server version 1.3.20-16 running on RedHat 7.2 using the
Linux kernel 2.4.7-10. The honeypot compromised was
a VMware-based virtual machine in the Collapsar cen-
ter, with logical presence in one of the LAN production
networks.
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
120
100
80
60
40
20
0
)
s
p
b
M
(
t
u
p
h
g
u
o
r
h
T
120
100
80
60
40
20
0
VMWare
UML
Direct
)
c
e
s
u
(
y
c
n
e
t
a
L
1600
1400
1200
1000
800
600
400
200
0
6
1
4
2
0
4
2
7
6
3
1
4
6
2
2
9
3
0
2
5
8
4
6
6
7
7
4
0
9
2
3
0
1
0
6
1
1
8
8
2
1
6
1
4
1
4
4
5
1
2
7
6
1
0
0
8
1
8
2
9
1
6
5
0
2
ICMP Payload Length (Bytes)
4
8
16
32
96
64
Socket Buffer Size (Bytes)
128 256 512 1024 2046 4096 8192
(a) TCP throughput degradation
(b) ICMP latency degradation (increase)
Figure 2: Comparing virtualization-incurred overhead: VMware vs. UML
VMWare
UML
Direct
)
c
e
s
u
(
y
c
n
e
t
a
L
5000
4500
4000
3500
3000
2500
2000
1500
1000
500
0
4
8
16
32
64
96
128 256 512 1024 2046 4096 8192
Socket Buffer Size (Bytes)
6
1
4
2
0
4
2
7
6
3
1
4
6
2
2
9
3
0
2
5
8
4
6
6
7
7
4
0
9
2
3
0
1
0
6
1
1
8
8
2
1
6
1
4
1
4
4
5
1
2
7
6
1
0
0
8
1
8
2
9
1
6
5
0
2
ICMP Payload Length (Bytes)
(a) TCP throughput degradation
(b) ICMP latency degradation (increase)
Figure 3: Comparing Collapsar-incurred overhead: VMware vs. UML
VMWare
UML
Direct
VMWare
UML
Direct
(cid:15) Vulnerability description: Apache web server ver-
sions up to and including 1.3.24 contain a vulnera-
bility [14] in the chunk-handling routines. A care-
fully crafted invalid request can cause an Apache
child process to call the memcpy() function in a way
that will write past the end of its buffer, corrupting
the stack and thus resulting in a stack overﬂow. Re-
mote intruders can exploit this vulnerability to ac-