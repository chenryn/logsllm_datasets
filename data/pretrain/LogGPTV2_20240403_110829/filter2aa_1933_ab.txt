30
28.9
Siemens SX1
5
4.8
Table 4: Recognized Siemens Models
2.2.3
Discovered Vulnerable Devices
As written in [1], there are a number of devices that are vulnerable to the SNARF at-
tack. According to this document there is the Ericsson phone T68/T68i, the SonyEr-
icsson phones R520m, T610 and Z1010 and the Nokia phones 6310/6310i, 8910/8910i
and 7650. Adam Laurie also provides information, whether the respective devices
are attackable in invisible or visible mode, only. Since the setup used for this ﬁeld
trial did not use a brute-force approach (as presented by @stake) for detecting also
invisible devices, this study only conﬁrms the vulnerability of visible devices. Due
to limited market take-up and the resulting low penetration-rate of some devices,
the vulnerability of some of the listed devices cannot be conﬁrmed by this study.
As displayed in ﬁgures 2 and 3, the two top-selling bluetooth-enabled models of
SonyEricsson and Nokia are vulnerable to the SNARF attack.
Experiments with the SonyEricsson T610 showed that this model is generally not
vulnerable to the SNARF attack. During an earlier presentation of the SNARF at-
tack in February it happened that T610 phones with recent versions of the T610
ﬁrmware were disclosing personal information. Obviously, newer versions of the
T610 ﬁrmware do allow SNARF attacks.
6
Nokia 6310/6310i
As mentioned above, this study conﬁrms that the Nokia 6310
and the more enhanced Nokia 6310i are very vulnerable to the SNARF attack. About
33 percent of all discovered devices of this type were disclosing personal phone book
entries without requiring user-interaction. Since the snarf-process takes an average
time of 30 seconds (from the discovery to the end of the attack), it is very likely that
a lot more devices could have been read out. Too many people were just passing the
location so that they left the bluetooth-covered area too early to be snarfed. Figure 5
Total
Snarfed
0
200
Nokia 6310/6310i
135
44
Figure 5: Snarfed Nokia Phones
displays the ratio of discovered and provenly vulnerable Nokia 6310/6310i devices.
But as mentioned above, this could have been more.
SonyEricsson T610
Figure 6 shows the ratio of discovered and successfully at-
tacked SonyEricsson T610 devices. As mentioned before, in future when the newer
ﬁrmware is running on an increased number of T610-devices the success rate of the
SNARF attack will also increase. In the CeBIT 2004 ﬁeld trail only 6 percent of all
discovered T610 devices could be read out.
Siemens phones
As far as it has been observed in the CeBIT ﬁeld trial, Siemens
phones are not vulnerable to the SNARF attack. Bluetooth-enabled Siemens phones
like the S55 merely seem to be rather paranoid. Every time a usual scan-request is
received by these phones they cowardly ask for the user’s conﬁrmation. Actually,
this behavior is quite annoying.
2.3
Other Experiences
In preparation for the trial-setup, the Ericsson T68i (which is also on the list of vul-
nerable devices) has been checked. It can be conﬁrmed, that this phone is vulnerable
7
Total
Snarfed
0
50
SonyEricsson T610
33
2
Figure 6: Snarfed SonyEricsson Phones
to the SNARF attack but switches into the hidden mode automatically (three min-
utes after activation of the bluetooth interface). In hidden mode this phone is not
vulnerable (as mentioned in [1]).
3
Final Remarks
3.1
Proclaimer
The information gathered in this ﬁeld trial will not be disclosed to anybody. Per-
sonal information that has been retrieved from vulnerable phones has been deleted.
This study has been made for scientiﬁc demonstration purposes, only.
3.2
What has been done
The SNARF attack used at the CeBIT was intended to ﬁnish as fast as possible. That
is why only the ﬁrst 10 entries of each phone book were read out. About 50 numbers
from each snarfed phone have been retrieved.
3.3
What could have been done
As mentioned in the introduction there could have been done a variety of differ-
ent things with an unauthorized bluetooth connection to the phone. The following
paragraphs give some ideas on the things this security ﬂaw would also allow the
attacker to do.
8
3.3.1
Sending a SMS
The only good way to get to know the number of the snarfed phone is to send
an SMS from the attacked phone to another device. Depending on the manufac-
turer of the phone, SMS messages can either be provided in 7bit encoded ASCII-text
and/or have to be provided as a SMS-PDU which is rather tricky to generate. For
the creation of SMS-PDUs there is a tool called PDUSpy in the download section of
http://www.nobbi.com/.
Nokia phones allow to issue text-mode and PDU-mode messages to the device,
while SonyEricsson phones (and also Siemens phones) only accept PDU-encoded
SMS messages. The sending of an SMS is not visible to the user. Usually, the is-
sued SMS is not stored in the sent-box of the snarfed phone. In rare cases, the SMS
settings of the snarfed phone are set to require a report that is generated at the re-
ceiving phone. In this case the sender that was not aware of having sent a message
would receive a reception-report from the attacker’s phone (which includes a phone
number). By sending PDU encoded messages, it can be controlled by setting a ﬂag
whether a reception report is generated or not.
This method to get the victim’s phone number is causing costs to the holder of the
phone. That is why it has not been done in the CeBIT ﬁeld-trial. But it works for
sure (at least on Nokia devices).
It would also be possible to get the device’s phone number by initiating a phone call
to the number of a phone that is able to display the caller’s number. However, this
method would disclose the number of the dialed phone to the owner of the attacked
phone, because every call initiation is writing an entry into the dialed contacts list
(DC phone book).
3.3.2
Initiating a Phone Call
It is possible to initiate phone calls to virtually any other number. It would be very
lucrative to initiate calls to a premium service number that is ran by the attacker.
As mentioned before, dialed numbers are usually stored in the phone’s calling lists
and are also stored at the provider-site for billing purposes. Therefore, this kind of
abuse is rather unlikely. It would also be very very easy to ﬁnd out and sue the
person being responsible for this premium service.
3.3.3
Writing a Phone Book Entry
As mentioned before, every phone call is writing an entry into the “dialed contacts”
or DC phone book of the respective device. By writing a phone book entry into the
DC phone book, the traces on the device that evidence that a call has been made
can be replaced by any number. Since the operator also stores dialed numbers for
billing purposes, this kind of obfuscation would only delay the process of ﬁnding
9
the responsible person.
Of course it is also possible to do some nasty phone book entries. Just imagine
an entry that has ’Darling’ as a name and the number of a person you dislike. This
owner of the phone could then get into some trouble with his/her spouse ;)
In the CeBIT-trial no phone book entries have been done. Such entries would most
likely overwrite existing ones.
3.4
Vendor Reaction
On news pages it has been stated that the respective vendors are admitting this se-
curity loophole. It has also been implied that there are no intentions to do anything
against it, since it does not seriously damage the phone.
Asking representatives from the respective vendors at the CeBIT, I have been told
that these problems have been solved in actual ﬁrmware-versions that can be up-
graded for free. Whether this security ﬂaw has been ﬁxed in newer ﬁrmware ver-
sions cannot be conﬁrmed.
4
Conclusions
It would be paranoid to imply, that it is no random incident but purposeful that the
best-selling bluetooth phones of the market leaders SonyEricsson and Nokia can be
easily be read out by attackers.
This test report is intended to point out this serious security ﬂaw to bluetooth-users
in order to make them act more careful in this point.
An @stake report [3] introduces some more things to consider with respect to blue-
tooth devices. For example, this report points out effective measures to protect de-
vices from various attacks. Furthermore, the comparable harmless Bluejacking is
another bluetooth activity that helps getting over boring times in airport terminals
or other public places with a high bluetooth-device density.
5
Future Work
Ongoing experiments include a SNARF application on Java/J2ME phones. As a
requirement for this, the respective phones would have to have the MIDP 2.0 API
implemented together with the optionally provided Bluetooth-API. The only phone
that has these features at the moment is the Nokia 6600.
10
6
Acknowledgments
I thank Matthias Zeitler and Peter Haber for drawing my attention to this topic,
Collin R. Mulliner for providing useful information, Elﬁ Redtenbacher for lending
me her vulnerable bluetooth enabled phone and Paul Malone and Guntram Geser
for reading and correcting this report.
11
References
[1] Ben Laurie Adam Laurie. Serious ﬂaws in bluetooth security lead to disclosure
of personal data. Technical report, A.L. Digital Ltd., http://bluestumbler.org/,
January 2004.
[2] Webopedia.
What
is
snarf?
-
a
word
deﬁnition
from
the
we-
bopedia
computer
dictionary.
Technical
report,
Webopedia,
http://www.webopedia.com/TERM/S/snarf.html, January 2003.
[3] Ollie Whitehouse. War nibbling: Bluetooth insecurity. Research report, @stake,
Inc., October 2003.
12