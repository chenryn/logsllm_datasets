title:Policy-based routing with non-strict preferences
author:Chi-Kin Chau
Policy-based Routing with Non-strict Preferences
Chi-kin Chau
Computer Laboratory
University of Cambridge
PI:EMAIL
ABSTRACT
Traditional studies of routing problems often assumed strict
preferences on paths, by eliminating ambiguity in path com-
parisons, or imposing a priori deterministic tie-breaking.
Such an assumption is outpaced by today’s common prac-
tice of non-deterministic, multi-path routing, which is cru-
cial to traﬃc engineering, QoS routing, multicasting and
virtual private networking. A pair of paths may be incom-
parable or equally preferred. In the presence of ambiguous
preferences at pairs, or even multiple collections of paths,
a challenge is to ensure robustness in the complex and so-
phisticated situations of policy-based routing where hetero-
geneous routing policies are allowed among routing systems.
This paper presents an extensive study of policy-based rout-
ing with non-strict preferences, deriving suﬃcient conditions
that ensure the existence, optimality and asynchronous con-
vergence of stable routings.
Categories and Subject Descriptors: C.2 [Computer
Systems Organization]: Computer-Communication Networks
—Network Protocols, Internetworking
General Terms: Design, Theory, Algorithms
Keywords: Policy-based Routing, Robustness
1.
INTRODUCTION
Even though routing is a relatively old problem and stud-
ied extensively in the traditional minimum-weight routing
approach, the issue of strict and non-strict preferences has
usually been overlooked. Routing systems, which might be
routers or ASes, often face the decision of multiple alterna-
tive paths to a destination. The notion of strict preferences
refers to the practice of no ambiguity in comparing every
pair of paths. For instance, it is often assumed that each
routing system may select and announce only one of its al-
ternative available paths, which is so-called uni-path routing.
Essentially, this will enforce strict preferences by a priori de-
terministic tie-breaking (e.g. by selecting the smallest AS
number).
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’06, September 11–15, 2006, Pisa, Italy.
Copyright 2006 ACM 1-59593-308-5/06/0009 ...$5.00.
However, the assumption of strict preferences is outpaced
by today’s common practice of non-deterministic, multi-
path routing to which we refer as non-strict preferences. For
instance, in QoS routing, there are often multiple incompa-
rable objectives to optimise, such as maximising bandwidth
while minimising delay, giving rise to a set of incomparable
paths where no one is strictly superior to the others. In traf-
ﬁc engineering, load balancing may rely on distributing load
over multiple alternative paths simultaneously, or selecting
paths non-deterministically. In virtual private networking,
security policies may require the existence of several dis-
joint paths.
In multicasting, the multicaster must reserve
multiple paths to form a multicast tree. Also, overlay net-
works and tunnelling may be built on multiple connections
reserved in the underlying networks. Furthermore, BGP al-
lows non-deterministic sources of tie-breaking such as MED
and age-based tie-breaking. The wide range of instances of
ambiguous preferences in path comparisons necessitates a
thorough study on the principles and theory of non-strict
preferences in routing.
Nonetheless, we observe that this issue has been often
marginalised in past studies. Even though multi-path rout-
ing is considered where a routing system may select and
announce a set of paths (more generally, one may also con-
sider k-best paths), classical routing theories (e.g. path al-
gebra [2, 8]) only consider assigning equivalence classes to
paths (e.g. paths of the same weight), such that a routing
system may select and announce only one equivalence class
of paths instead. This approach works perfectly well in tra-
ditional settings where all routing systems have a homoge-
neous preference on weights. Hence, there is a consensus
of equivalence classes and the nature of multi-path routing
reduces to uni-path routing.
However, this assumption fails in the complex and sophis-
ticated situations of policy-based routing, where heteroge-
neous routing policies are allowed among routing systems. A
path to a destination may be favoured by some routing sys-
tems, but forbidden by others. Hence, there is no consensus
of equivalence classes of paths. The concern of policy-based
routing with non-strict preferences is heightened when BGP
can be used in both inter-domain and intra-domain routing
to implement policies of traﬃc engineering, QoS routing,
and virtual private networking.
It is possible that no stable routings exist in policy-based
routing due to conﬂicting policies among routing systems,
known as the divergence problem, even with only strict pref-
erences on paths (see [6] for an early study). Hence, the pres-
ence of non-strict preferences further complicates the prob-
lem of policy-based routing, despite its common appearances
in today’s networking.
Recent policy-based routing theories sidestepped the is-
sue of non-strict preferences, such as stable paths problem
(SPP) [6] that only considers strict preferences, and So-
brinho’s routing algebra [9] that assumes proper tie-breaking
is in place to induce strict preferences.
To shed light on the principles of robust networking for
policy-based routing with non-strict preferences is paramount,
demanding a thorough theoretical framework. This paper
aims at contributing to this less illuminated subject. A
recent algebraic policy-based routing theory based on the
simple notion of policy relation [4] has been developed as
a unifying framework for a number of policy-based routing
theories. Drawing on the framework of [4], we present suf-
ﬁcient conditions that ensure the existence, optimality and
asynchronous convergence of stable policy-based routings, in
the presence of non-strict preferences. The novelty of this
work compared to [4] is to demonstrate a useful application
of the framework, not addressed in [4], and also to cast light
on both verifying and generating robust but ﬂexible proto-
cols for policy-based routing.
Furthermore, we probe beyond non-strict preferences for a
set of paths (which we call ﬁrst order non-strict preferences),
by also considering non-strict preferences for a collection of
sets of paths (which we call second order non-strict prefer-
ences), and even higher order non-strict preferences. Our
study of higher order uni-path and multi-path routings is a
ﬁrst step to understand the impact of further ambiguity of
preferences in applications such as multicasting and virtual
private networking. What is remarkable is that our theory
extends naturally to higher order non-strict preferences.
Outline. Section 2 provides some motivating examples.
Sections 3 and 4 present the theory of policy relation on
(ﬁrst order) uni-path and multi-path routings. The issue of
optimality is discussed in Section 5. Higher order non-strict
preferences are considered in Section 6. Some of the more
technical proofs are sketched only. But the details can be
found in the Appendix of the extended paper [3].
2. ROUTING SOLUTIONS AND EXAMPLES
In this section we give a basic deﬁnition of routing solu-
tions, and provide some examples that reveal the subtleties
of policy-based routing with non-strict preferences. These
examples serve to motivate the more general theory we de-
velop in subsequent sections.
2.1 Basic Deﬁnition of Routing Solutions
Suppose given a rooted directed network G = (cid:2)V, E , v0(cid:3),
where the set of vertices, V, and the set of edges, E , are ﬁnite
sets, with a designated vertex v0 ∈ V as the destination. Let
P(v2, v1) be the set of reachable paths in G from v2 to v1.
Denote tuple (v2, v1) as the edge connecting from v2 to v1.
If P ∈ P(v3, v2) and Q ∈ P(v2, v1), then P Q will denote the
concatenated path in P(v3, v1).
Each vertex v (cid:5)= v0 is endowed with a preference order,
(cid:2), over P(v, v0). For each pair of paths P, Q ∈ P(v, v0),
• (strict preference):
write P < Q;
if P is strictly better than Q, we
• (non-strict preference):
ferred, we write P ≈ Q.
if P and Q are equally pre-
In other words, preferences represent cost; lower is better.
Given a subset of paths, P ⊆ P(v, v0), denote the most
preferred set of P as:
min(cid:2) P (cid:3) {P ∈ P | there exists no Q ∈ P such that Q < P}.
Denote P(P(v, v0)) as the power set (i.e.
subsets) of P(v, v0).
the set of all
We deﬁne a (routing) solution as an equilibrium (or a
ﬁxed-point) where each vertex has consistent assignment of
path(s) w.r.t.
its neighbours. A uni-path solution permits
only one path for each vertex, whereas a multi-path solu-
tion disables tie-breaking on equally preferred paths, and
takes the most preferred set as an assignment. Formally, we
deﬁne:
• uni-path solution: a vector θ ∈ Q
• multi-path solution: a vector Θ ∈ Q
v∈V P(v, v0) such
that θv0 = v0 and for all v (cid:5)= v0,
θv ∈ min(cid:2){eP ∈ P(v, v0) | e = (v, u) ∈ E , P = θu}.
v∈V P(P(v, v0))
such that Θv0 = {v0} and for all v (cid:5)= v0,
Θv = min(cid:2){eP ∈ P(v, v0) | e = (v, u) ∈ E , P ∈ Θu}.
Note that the uni-path and multi-path solutions gener-
alise the Bellman-Ford equation in minimum-weight routing,
where a homogeneous preference on weights is assumed. Let
w(e) be the weight of e ∈ E and Wv be the minimum path
weight from v to v0. Then the Bellman-Ford equation is:
Wv = min{w(e) + Wu | e = (v, u) ∈ E}.
Wv can represent all paths with the same speciﬁc weight
in P(v, v0) (i.e. multi-path solution), or any path of the
speciﬁc weight (i.e. uni-path solution).
However, in policy-based routing, a uni-path solution is
not necessarily a member of a multi-path solution, nor is a
multi-path solution necessarily a collection of uni-path so-
lutions. The subtleties are highlighted in Examples 2 and
3.
and announce up to k-best paths as: Θ(k) ∈Q
Also, we remark that, more generally, one may also con-
sider k-best-path solution, such that each vertex may select
v∈V P(P(v, v0))
such that Θ
(k)
v0 = {v0} and for all v (cid:5)= v0,
(k)
v ⊆ min(cid:2){eP ∈ P(v, v0) | e = (v, u) ∈ E , P ∈ Θ
(k)
u },
Θ
(k)
where |Θ
v | ≤ k for all v ∈ V.
2.2 Absence of Solution
First, a paramount issue is whether there always exists a
solution, no matter uni-path or multi-path. The answer is
no. A well-known bad triangle example is given in Figure 1
from [5]. The signiﬁcance of this example is that it leads to
the formulation of dispute wheels which give a suﬃcient con-
dition on the existence of solution, presented in next section.
Example 1. In Figure 1, both uni-path and multi-path
solutions are the same, since every vertex has a strict pref-
erence. Assume that there is a solution, then there are two
cases:
(1) R1 = θv1 :
⇒ T1R1 = θv3 ⇒ R2 = θv2 ⇒ T2R2 = θv1 ⇒ R1 (cid:5)= θv1 .
This is a contradiction.
T
1
v
3
v
1
R
3
R
1
T
3
T
2
v
0
R
2
v
2
v1 : T2R2 < R1 < etc.
v2 : T3R3 < R2 < etc.
v3 : T1R1 < R3 < etc.
Figure 1: A bad triangle.
(2) R1 (cid:5)= θv1 :
⇒ T1R1 (cid:5)= θv3 ⇒ R3 = θv3 ⇒ T3R3 = θv2 ⇒ R1 = θv1 .
This is a contradiction.
Therefore, there is no solution that can simultaneously sat-
isfy all three vertices.
2.3 Absence of Multi-path Solution
Another issue of interest is on the relation between uni-
path and multi-path solutions. Uni-path and multi-path
solutions are not necessarily correlated. The existence of
uni-path solution does not imply the existence of multi-path
solution, and vice versa. This is the extreme case that a
uni-path solution is not necessarily a member of a multi-
path solution, and a multi-path solution is not necessarily a
collection of uni-path solutions.
T
4
v
4
T
1
T
5
v
3
R
3
R
1
v
1
T
3
T
2
v
0
R
2
v
2
v1 :
v2 :
v3 :
v4 : T1R1 ≈ T5R3< etc.
T2R2< R1 < etc.
T3R3< R2 < etc.
T4T1R1< R3 < etc.
Figure 2: An example with only uni-path solution,
but no multi-path solution.
Example 2. Figure 2 shows an instance where there is a
uni-path solution, but there is no multi-path solution. The
uni-path solution is:
θv1 = R1, θv2 = T3R3, θv3 = R3, θv4 = T5R3.
Assume that there is a multi-path solution, then there are
two cases:
(1) T1R1 ∈ Θv4 :
⇒ R1 ∈ Θv1 ⇒ T4T1R1 ∈ Θv3 ⇒ R2 ∈ Θv2
⇒ T2R2 ∈ Θv1 ⇒ R1 /∈ Θv1 . This is a contradiction.
(2) T1R1 /∈ Θv4 :
⇒ R3 ∈ Θv3 ⇒ T3R3 ∈ Θv2 ⇒ R2 /∈ Θv2
⇒ R1 ∈ Θv1 ⇒ T1R1 ∈ Θv4 . This is a contradiction.
Therefore, there is no multi-path solution.
v
1
T ′
2
T
1
v
4
T ′
3
v
5
T ′
1
R ′
2
T
2
R
3
v
3
T
3
v
2
R ′
3
R
2
v
0
2< etc.
T2R2 ≈ T (cid:3)
2R(cid:3)
T3R3< R2 < etc.
2 ≈ T1T (cid:3)
3R(cid:3)
2T (cid:3)
3< R3 < etc.
T (cid:3)
3R(cid:3)
3< R(cid:3)
2 < etc.
1T2T3R3< R(cid:3)
3 < etc.
1T2R2 ≈ T (cid:3)
v1 :
v2 :
v3 :T1T (cid:3)
v4 :
v5 :T (cid:3)
2R(cid:3)
Figure 3: An example with only multi-path solution,
but no uni-path solution.
v
3
R
3
T
3
T ′
2
v
4
T
2
T
1
R ′
2
v
0
R
2
v
2
v
1
v
5
R ′
3
T ′
3
v
1
T
2
v
2
T ′
2
T ′
1
R
2
v
0
R ′
2
v
4
Figure 4: The network in Figure 3 consists of two
intertwined bad triangles.
2.4 Absence of Uni-path Solution
More interestingly, Figure 3 shows an instance where there
is a multi-path solution, but there is no uni-path solution.
Example 3. The network in Figure 3 actually consists of
two intertwined bad triangles (see Figure 4). The multi-path
solution is:
Θv1 = {T2R2, T (cid:3)
2},
2R(cid:3)
2},
Θv2 = {R2}, Θv3 = {T1T (cid:3)
2}, Θv5 = {T (cid:3)
1T2R2}.
Θv4 = {R(cid:3)
2R(cid:3)