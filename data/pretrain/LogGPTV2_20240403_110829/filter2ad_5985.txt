title:Multi-Domain Service Orchestration Over Networks and Clouds: A Unified
Approach
author:Bal&apos;azs Sonkoly and
J&apos;anos Czentye and
R&apos;obert Szab&apos;o and
D&apos;avid Jocha and
J&apos;anos Elek and
Sahel Sahhaf and
Wouter Tavernier and
Fulvio Risso
Multi-Domain Service Orchestration Over Networks and
Clouds: A Uniﬁed Approach
Balázs Sonkoly1, János Czentye1, Robert Szabo2, Dávid Jocha2, János Elek2,
Sahel Sahhaf3, Wouter Tavernier3, Fulvio Risso4
1Budapest University of Technology and Economics; 2Ericsson Research;
3Ghent University – iMinds; 4Politecnico di Torino
PI:EMAIL
ABSTRACT
End-to-end service delivery often includes transparently in-
serted Network Functions (NFs) in the path. Flexible ser-
vice chaining will require dynamic instantiation of both NFs
and traﬃc forwarding overlays. Virtualization techniques
in compute and networking, like cloud and Software De-
ﬁned Networking (SDN), promise such ﬂexibility for service
providers. However, patching together existing cloud and
network control mechanisms necessarily puts one over the
above, e.g., OpenDaylight under an OpenStack controller.
We designed and implemented a joint cloud and network re-
source virtualization and programming API. In this demon-
stration, we show that our abstraction is capable for ﬂexible
service chaining control over any technology domains.
Keywords
NFV; SDN; multi-domain orchestration; SFC control plane
1.
INTRODUCTION
On top of cloud platforms, services can be created, man-
aged and scaled on-demand. Eﬃcient virtualization tech-
niques and novel orchestration algorithms enable ﬂexible
operation and optimal usage of underlying resources. Be-
sides virtual compute and storage resources, basic network-
ing is also provided in order to connect the virtual machines.
In contrast, traditional telecommunication services and car-
rier networks have a lot of limitations concerning service
creation, service deployment or service provisioning due to
built-in mechanisms strongly coupled to physical topologies
and special purpose hardware appliances. Network Function
Virtualization (NFV) opens the door between cloud tech-
nologies and carrier networks by providing software-based
telecommunication services, which can run in virtualized en-
vironments over a wide range of general purpose servers. By
these means, recent achievements from cloud researches can
be leveraged and adopted in carrier environments.
Flexible service deﬁnition and creation may start by ab-
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
SIGCOMM ’15 August 17-21, 2015, London, United Kingdom
c(cid:13) 2015 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-3542-3/15/08.
DOI: http://dx.doi.org/10.1145/2785956.2790025
stracting and formalizing the service into the concept of ser-
vice chain or service graph. It is a generic way to describe
high level services and to assemble processing ﬂows for given
traﬃc. Today, remarkable attention is focused on the con-
cept of Service Function Chaining (SFC) and NFV. IETF,
ETSI, MEF, Linux Foundation and several research projects
address diﬀerent aspects of SFC. For example, IETF is work-
ing on an SFC architecture and data plane elements; ETSI
has proposed a management and orchestration framework
for NFV; Linux Foundation launched the Open Platform
for NFV Project (OPNFV), a carrier-grade open source ref-
erence platform.
UNIFY1 is an EU-funded FP7 project, which aims at
unifying cloud and carrier network resources in a common
orchestration framework. We designed a novel SFC con-
trol plane which is capable of integrating any infrastruc-
ture domains including diﬀerent NF execution environments,
SDN networks or legacy data centers. Our architecture
supports automated, dynamic service creation and multi-
domain NFV orchestration. Central to our design is the
deﬁnition of a joint virtualization and resource program-
ming interface unifying cloud and network resources. In this
demonstration, we highlight the power of this approach to
control SFC deployments over multi-technology domains.
2. PROOF OF CONCEPT
In UNIFY, we have proposed a joint, narrow waist SFC
control plane over compute (with storage) and network re-
sources for ﬂexible service creation. Our control plane de-
sign enables recursive orchestration of several types of re-
sources and supports diﬀerent even legacy technologies and
migration between them. Furthermore, we have introduced
a novel infrastructure element called Universal Node (UN)
which is a COTS hardware based packet processor node with
the capability of i) high performance forwarding and ii) run-
ning high complexity NFs in its virtualized environment.
Our proof of concept prototype realizing the envisioned ar-
chitecture is shown in Fig. 1.
Our virtualization is based on the concept of Big Switch
with Big Software (BiS-BiS) elements, which is a forward-
ing element combined with software (compute and storage)
resources capable of i) running NFs and ii) steering traﬃc
transparently among infrastructure and NF ports. The key
concept is that BiS-BiS combines cloud resources with for-
warding behavior control. The virtualization view may con-
tain arbitrary interconnection of BiS-BiS nodes. SFC pro-
1http://www.fp7-unify.eu
377Figure 1: Joint SFC control plane architecture on top of diﬀerent technological domains.
gramming is realized by i) assigning NFs to BiS-BiS nodes
and by ii) editing the ﬂowrules within BiS-BiS nodes. The
task of the resource orchestrator is to map the conﬁgura-
tions of diﬀerent client virtualizations to a conﬁguration at
the underlying domain virtualizer. Additionally, we intro-
duced the concept of NF decomposition, i.e., an NF mapped
to a BiS-BiS in the client virtualization can be replaced with
an interconnection of NFs (components) during the mapping
process [2]. The data model of the virtualizer is deﬁned in
Yang. In Fig. 1, virtualizers are denoted by green boxes and
they provide virtual views (interconnected BiS-BiS nodes)
for their managers (clients). Managers are resource orches-
trators (shown by red boxes) conﬁguring (controlling) the
given view. The manager - virtualizer relationship is recur-
sive, thus Unify domains can be stacked into a multi-level
control hierarchy similar to ONF’s SDN architecture. The
recursive interface is the Unify interface.
The initial version of our open-source NFV orchestration
framework was presented in [1]. It has been signiﬁcantly re-
designed in order to meet the design goals and requirements
of the joint SFC control plane addressed by UNIFY. Now,
ESCAPEv2 framework i) enables recursive orchestration by
implementing Unify interfaces at north and south; ii) op-
erates on our novel joint resource abstraction models; iii)
supports UNIFY domains directly and several technological
domains via adapters; iv) can be extended easily with ad-
ditional plug and play components/algorithms, like NF im-
plementations, network embedding algorithms, NF decom-
position models.
On top of ESCAPEv2, we have implemented a simple ser-
vice layer with GUI (see the upper left part of Fig. 1) where
users can deﬁne service requests with their requirements,
e.g., bandwidth or delay constraints between arbitrary el-
ements in the service graph. The service layer contains a
service orchestrator which is responsible for mapping the
service request to the virtualizer. If a service orchestrator
sees only a single BiS-BiS node then its orchestration task is
trivial. Such setup allows delegation of all resource manage-
ment to the lower layer Unify domain which is realized by
the resource orchestrator component (see upper right part
of Fig. 1). Here, the domain resource view is constructed by
our domain virtualizer and controller adapter modules. At
the infrastructure level, diﬀerent technologies are supported
and integrated with the framework. We kept our Mininet
based domain orchestrated by a dedicated ESCAPEv2 en-
tity via NETCONF and OpenFlow control channels. Here,
the NFs are run as isolated Click processes. As a legacy data
center solution, we support clouds managed by OpenStack
and OpenDaylight. This requires a UNIFY conform local
orchestrator to be implemented on top of an OpenStack do-
main. The control of legacy OpenFlow networks is realized
by a POX controller and a corresponding adapter module.
And ﬁnally, a proof of concept implementation of our Uni-
versal Node concept is also provided. UN local orchestrator
is responsible for controlling logical switch instances (accel-
erated by Intel’s DPDK) and for managing NFs running as
Docker containers.
During the demo, we showcase i) how to create joint do-
main abstraction for networks and clouds; ii) how to orches-
trate and optimize resource allocation and deploy service
chains over these uniﬁed resources; iii) how we can take ad-
vantage of recursive orchestration and NF decomposition2.
Acknowledgements - This work was conducted within the
framework of the FP7 UNIFY project, which is partially
funded by the Commission of the European Union.
3. REFERENCES
[1] A. Csoma, B. Sonkoly, L. Csikor, F. N´emeth, A. Guly´as,
W. Tavernier, and S. Sahhaf. ESCAPE: Extensible Service
ChAin Prototyping Environment using Mininet, Click,
NETCONF and POX. In Proc. of the ACM SIGCOMM
2014, 2014.
[2] S. Sahhaf, W. Tavernier, D. Colle, and M. Pickavet. Network
service chaining with eﬃcient network function mapping
based on service decompositions. In 1st IEEE Conference on
Network Softwarization, NetSoft 2015, 2015.
2Further details: http://sb.tmit.bme.hu/UNIFY15
378