title:A combinatorial approach to network covert communications with applications
in Web Leaks
author:Xiapu Luo and
Peng Zhou and
Edmond W. W. Chan and
Rocky K. C. Chang and
Wenke Lee
A Combinatorial Approach to Network Covert
Communications with Applications in Web Leaks
Xiapu Luo§, Peng Zhou§, Edmond W. W. Chan§, Rocky K. C. Chang§ and Wenke Lee†
The Hong Kong Polytechnic University§, Georgia Institute of Technology†
{csxluo,cspzhouroc,cswwchan,csrchang}@comp.polyu.edu.hk, PI:EMAIL
Abstract—Various effective network covert channels have re-
cently demonstrated the feasibility of encoding messages into
the timing or content of individual network objects, such as
data packets and request messages. However, we show in this
paper that more robust and stealthy network covert channels
can be devised by exploiting the relationship of the network
objects. In particular, we propose a combinatorial approach
for devising a wide spectrum of covert channels which can
meet different objectives based on the channel capacity and
channel undetectability. To illustrate the approach, we design
WebLeaks and ACKLeaks, two novel covert channels which can
leak information through the data and acknowledgment trafﬁc in
a web session. We implement both channels and deploy them on
the PlanetLab nodes for evaluation. Besides the channel capacity,
we apply the state-of-the-art detection schemes to evaluate their
camouﬂage capability. The experiment results show that their
capacity can be boosted up by our combinatorial approach, and
at the same time they can effectively evade the detection.
I. INTRODUCTION
Network covert channel is an important element in various
attacks (e.g., password leaks [1], data leaks [2], large-scale
DDoS attacks [3], and botnets [4]) and privacy enhancement
systems (e.g., for censorship circumvention [5]–[7]). There are
two general approaches to designing network covert communi-
cation: encoding covert messages in a network object (e.g., IP
packets) and encoding messages in the timing information of
individual network objects (e.g., inter-packet delay). These two
types of channels are usually referred to as storage channels
and timing channels, respectively.
Although the two approaches are different, both share the
commonality that messages are encoded in individual net-
work objects which could be protocol ﬁelds, time intervals,
and others. Exploiting only individual objects could result
in low capacity and vulnerability to detection. For example,
the timing channels can be detected based on the statistical
anomalies caused by their encoding methods [8], [9]. In this
paper, we show that a novel exploitation of the relationship
among network objects will result in more robust and stealthy
covert channels. Using the combinations of objects to encode
messages, for example, will exponentially increase the channel
capacity. It
is also less susceptible to anomaly detection,
because the messages are not encoded by manipulating the
values of single objects.
Exploiting the relationship of network objects for covert
communication is not entirely new though. Several works
propose to encode messages in the order of packets (e.g.,
IPSec packets [10] and TCP packets [11]). Moreover, El-
Atawy and Al-Shaer propose to rearrange packets according to
the statistical distribution of packet reordering measured in the
Internet [12]. The prevalence of packet reordering, however,
is highly dependent on the network paths [13]. In our earlier
work [14], we propose Cloak that encodes messages into
different combinations of TCP packets and TCP ﬂows [14].
Nevertheless, none of the existing works, to the best of our
knowledge, explores the whole design space of exploiting the
relationships among network objects to build covert channels.
The existing methods have exploited only a small design
subspace. For example, Cloak is just an instance of applying
the approach to TCP ﬂows and packets.
To develop a general combinatorial method, we ﬁrst identify
two fundamental properties that affect the inter-relationship
among network objects: distinguishability and sequence de-
tectability. Distinguishability means that a network object can
be differentiated from others, whereas sequence detectability
concerns whether the order of a sequence of network objects
can be discriminated. In this paper, we design a large number
of different message encoding methods, each characterized by
a different design objective in terms of distinguishability and
sequence detectability. We also propose addition and multipli-
cation principles to generalize these methods. On one extreme,
we can design a covert channel with maximal capacity by
making all network objects distinguishable and all sequences
of network objects detectable. On the other, we can also
minimize the channel detectability by making all network
objects indistinguishable. Between them, many other covert
channels can be designed to meet different objectives.
As applications of the combinatorial approach, we propose
two novel covert channels—WebLeaks (in Section III) and
ACKLeaks (in Section IV)—that can leak information through
the data and acknowledgment (ACK) trafﬁc in a web session
(i.e., web leaks). Both do not modify any packets and therefore
can evade existing detection systems inspecting packet payload
[15], [16]. WebLeaks is a cross-layer covert channel that
exploits the combinations and permutations of HTTP requests
and web pages, and that of TCP packets and TCP ﬂows for
message encoding. ACKLeaks, on the other hand, embeds
covert messages into pure TCP ACK packets, without affecting
the upper layer application. We implement WebLeaks and
ACKLeaks, and conduct extensive PlanetLab experiments to
evaluate their performance. We also apply the state-of-the-art
detection schemes inspecting timing information [8], [17], [18]
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
978-1-4244-9233-6/11/$26.00 ©2011 IEEE474to evaluate their camouﬂage capability. The experiment results
show that both channels’ data rates can be boosted up by
our combinatorial approach, and at the same time they can
effectively evade the detection.
In Section II, we introduce the threat model, the combinato-
rial approach, and effective algorithms for message encoding
and decoding. After that, we describe the design of WebLeaks
and ACKLeaks using the combinatorial approach in Sections
III and IV, respectively. In Section V, we report the PlanetLab
experiment results for evaluating their channel capacity and
camouﬂage capability. We then highlight related works in
Section VI and conclude this paper in Section VII.
II. THE COMBINATORIAL APPROACH
A. Threat model
There are three roles in a general context of network
covert communications: encoder, decoder, and warden. An
encoder sends covert messages to a decoder located outside
the encoder’s network by transforming the messages into some
properties of network objects that can be observed by the
decoder. The network objects can be TCP/IP packets, trafﬁc
ﬂows, and application-level requests, and the properties can be
the packets’ content, inter-packet time, packets’ sequencing,
and so on. The decoder, after receiving a copy of the network
objects, extracts from them the covert messages. On the other
hand, a warden, located on the edge of the encoder’s network,
inspects all the trafﬁc coming from and going into the network
to detect covert communication activities.
B. Riders and carriers
In the ensuing discussion, we use rider to refer to a
network object and carrier to a container that accommodates
a sequence of riders. For example, a network ﬂow (a carrier)
carries one or more packets (riders). For the timing channel,
a time interval (a carrier) contains zero or one (e.g., [17]),
exactly one (e.g., [19]), or multiple (e.g., [20]) packets (riders).
A covert channel can employ more than one type of riders
and/or carriers to increase capacity and camouﬂage capability.
We ﬁrst propose nine methods for covert message encoding
using a single type of riders and a single type of carriers in
Section II-C, and then consider multiple types of riders and
carriers in Section II-D.
We use R to denote the number of riders in a covert channel.
Assuming that each carrier accommodates at least one rider1,
then the number of carriers, denoted as I, can vary from 1
to R (i.e., I ∈ [1, R]). That is, R is the only ﬁxed parameter
in this combinatorial approach. The riders and carriers can be
further classiﬁed according to two fundamental properties:
Distinguishability All riders and carriers are generally dis-
tinguishable on the object level, and their distinguishability
could be made based on an unique “ID.” A rider/carrier is
regarded distinguishable if its ID is unique and preserved when
received by the decoder. For example, the IPID could be used
1This assumption can be easily removed to allow some carriers not to
always contain rider.
to distinguish a group of consecutive IP packets. However,
some protocol ﬁelds (e.g., IPID) may be “erased” by packet
scrubbers [21]. Therefore, packets relying on these protocol
ﬁelds for distinguishability may be made indistinguishable.
Similarly, time intervals of various lengths could be used to
distinguish riders and carriers.
Sequence detectability Distinguishable riders/carriers are re-
garded sequence detectable if any sequencing of the riders and
carriers arranged by an encoder can be detected correctly by
a decoder. For example, a sequence of TCP packets in a TCP
connection can be detected by their arrival times and sequence
numbers. A sequence of TCP connections can also be detected
based on their arrival times. However, IP packets can be made
sequence undetectable if packet scrubbers randomize their
IPIDs.
C. Nine methods for message encoding
Based on the distinguishability and sequence detectability
of riders and carriers, we can consider a large number of rider-
carrier cases for a given R. To simplify the discussion, we pro-
pose the nine main cases x– in Table I which are obtained by
ﬁrst considering whether the riders/carriers are distinguishable
and then whether the distinguishable riders/carriers, if any,
are sequence detectable. Our combinatorial approach is to
encode covert messages in the different arrangements of the
riders by distributing them into the I carriers and possibly
sequencing them. Denote the total number of arrangements
by Ti, i = 1, . . . , 9. Based on Information Theory [22], the
capacity of encoding messages using these arrangements is
Ci = ⌊log2
Ti⌋. We have derived Ti for all nine cases, shown
in Table I, and their proofs are sketched in [23].
The nine methods can meet different objectives for covert
communications. First, making riders or carriers distinguish-
able increases the channel capacity (e.g., C2 > C1 and
C4 > C1), as illustrated in Figure 1. Moreover, exploiting the
sequence information in riders or carriers further increases the
channel capacity (e.g., C3 > C2 and C7 > C4). Second, for
most encoding methods, their Ts increase exponentially with
R. A large T may ease the design in terms of providing both
covertness and capacity, because the encoder may use only a
subset of the rider-carrier arrangements that can better mimic
the normal trafﬁc pattern but exclude those that are vulnerable
to warden detection.
The nine methods are general enough to include the pre-
viously proposed covert channels based on packet ordering
and TCP packet-ﬂow combinations. The covert channels based
on the orders of packets [10]–[12] are special scenarios
of method z in Table I. Particularly, for one carrier (i.e.,
I = 1) and R riders that support sequence detectability, we
have R!
I − 1(cid:19) = R!. Similarly, the Cloak channels [14]
I! (cid:18)R − 1
that transform messages into the combinations of TCP ﬂows
(carriers) and TCP packets (riders) could be obtained from
our combinatorial approach. For example, Cloak3’s capacity
is the same as that of method | by ﬁxing the number of
carriers to I (i.e., I!S(R, I)). Note that method | offers a
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:32:51 UTC from IEEE Xplore.  Restrictions apply. 
475TABLE I: The nine rider-carrier cases based on their distinguishability and sequence detectability. P(R, I) is the number of
ways of partitioning an integer R into I integers. S(R, I) is the number of ways of splitting R distinguishable elements into
I indistinguishable sets.
Indistinguishable
Riders
Distinguishable and
sequence undetectable
Sequence detectable
Indistinguishable
Carriers
Distinguishable and
sequence undetectable
Sequence detectable
I=1 P(R, I) x
I=1 S(R, I) y
T1 = PR
T4 = 2R−1
I=1 R − 1
I=1 I! R − 1
I − 1!) {
I − 1! ~
(i.e., PR
T7 = PR
T2 = PR
T5 = PR
T8 = PR
I=1 I!S(R, I) |
I=1(I!)2S(R, I) 
R!
I!  R − 1
I − 1! z
T3 = PR
I=1
T6 = 2R−1R!
I=1 R! R − 1
I=1 I!R! R − 1
I − 1!) }
I − 1! 
(i.e., PR
T9 = PR
150
100
C
3
C
2
C
1
s
t
i
B
50
0
0
150
100
s
t
i
B
50
0
0
5
10
R
15
20
C
6
C
5
C
4
150
100
s
t
i
B
50
0
0
5
10
R
15
20
C
9
C
8
C
7
5
10
R
15
20
(a) x,y,z
(b) {,|,}
(c) ~,,
Fig. 1: A comparison of the channel capacity for the nine message encoding methods.
much higher capacity than Cloak3, because it uses a variable
number of carriers to increase the total number of rider-carrier
arrangements.
D. Generalization
In this section, we generalize the covert channel design
for single types of riders and carriers to multiple types. The
motivation to devising such covert channels is three-fold. First,
exploiting relationships among several types of riders and
carriers can increase the channel capacity. Second, employing
more types of riders and carriers, instead of requiring riders
and carriers to be distinguishable or sequence detectable,
makes the channel less detectable. Third, as the types of
riders/carriers can be based on different features of the same
set of network objects, the covert channel can enjoy higher
capacity without dispatching more network objects and have
better camouﬂage capability due to less footprint.
Assume that an encoder has N types of riders, denoted
as Ri (i = 1, . . . , N ), and M types of carriers, denoted as
Ij (j = 1, . . . , M ). Then she has N × M rider-carrier type
combinations, denoted as Li = (R, I), i = 1, . . . , N × M ).
For a given L, if the combination is feasible in practice, the
encoder can use the proper methods in Table I to create a
covert channel that has TL different arrangements.
We refer to a covert channel employing k (k > 1) type
combinations of riders and carriers (i.e., Li, i = 1, . . . , k) as a
composite covert channel, and use Ψ = {ψ1, . . .} to represent
all the possible arrangements of riders and carriers. A ψ may
contain multiple types of riders and carriers, depending on