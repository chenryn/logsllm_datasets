the vouching site, something which in the traditional case
requires t = RT TS + RT TV if done in succession. In other
words, SAuth introduces RT TS + RT TV which can be just
RT T if logging in to both services. Moreover, this overhead
is incurred only in the absence of a persistent authentication
token, e.g., a cookie, something which we expect to happen
rarely.
3We assume a hash key of 512 bits.
7. RELATED WORK
Decoy Passwords. In Kamouﬂage [27] the authors pro-
pose injecting dummy passwords in password managers to
protect the actual passwords if the master secret that un-
locks the database is compromised. Similarly, honeywords [43]
are fake passwords that are stored on the server together
with the authentic password. Honeywords require a trusted
third party for making sure, each time the user logs in, that
the password entered is the authentic one and not a decoy.
k-Secret Sharing. Shamir et al. [52] proposed splitting
up a secret into k pieces and distributing them to distinct
parties in such a way at any given moment if m < k pieces
are present the original secret can be reconstructed. The
same primitive has been applied to distributed user authen-
tication by splitting up the stored password into multiple
tokens [23,33]. Our proposal, SAuth, can be seen as a mani-
festation of this technique. In our terminology, the process of
verifying each piece of the original password is called vouch-
ing. Instead of generating a password and splitting it up,
we combine passwords the user already has to beneﬁt from
the security of a long and distributed secret.
Bounded Retrieval. Crescenzo et al. [36] propose mak-
ing the authentication database too big for the attacker to
retrieve. The server maintains a set of very large random
ﬁles and each password is mapped to locations within them.
The sum of those locations represents the password’s digest
requiring the full database to brute-force leaked hashes.
Authentication/Authorization. OAuth 2.0 [18] en-
ables a third party to request access to a credential-restricted
resource from its owner and receive that access without
knowledge of the owner’s credentials. OpenID 2.0 [49] pro-
vides a way for an end user to prove ownership of a claimed
identity to a third party without a separate account. Face-
book Connect [46] builds on top of both OAuth and OpenID
to produce an authentication and authorization framework
combined with the social information and graph its users
form. BrowserID [2] or Mozilla Persona is a single-sign-on
mechanism which uses e-mail addresses to represent user
identities. PseudoID [37] employs blind cryptographic sig-
natures to eliminate this privacy concern.
In this paper we propose a federated login system which
may additionally facilitate the following use case; password-
less logins for a plethora of web services, much like Facebook
Connect works today, but instead of using a single sign-on
service, like Facebook, our system enables the use of a feder-
ated sign-on service which could include Facebook, Google
and Twitter all vouching during log-in and thus making it
harder for an attacker to exploit the single sign-on system.
8. CONCLUSION
We have presented SAuth, a novel protocol for synergy-
based enhanced authentication in the face a password database
leak. Users wishing to access their account on service S
also have to authenticate for their account on service V ,
which acts as a vouching party. Both services can be reg-
ular sites already visited by the user every day, such as e-
mail providers or social networks. The vouching process im-
plicitly takes place through the user’s browser and remains
transparent to a large degree. With SAuth, should an at-
tacker acquire the password for service S he will be unable
to log in unless he also compromises the password for V . To
mitigate password reuse habits we employ decoy passwords
196to introduce uncertainty regarding the actual one. SAuth
is an extension and not a replacement of existing authen-
tication methods, operates one layer above them and thus
enables services to employ heterogeneous systems.
We make SAuth publicly available at http://www.cs.
columbia.edu/~kontaxis/sauth/.
9. ACKNOWLEDGMENTS
We thank the anonymous reviewers and our shepherd,
Anupam Datta, for the preparation of the ﬁnal paper. We
also thank Mariana Raykova and Michalis Polychronakis for
early discussions. This work was supported by DARPA
through contract FA8650-11-C-7190. Any opinions, ﬁnd-
ings, conclusions or recommendations expressed herein are
those of the authors, and do not necessarily reﬂect those of
the US Government or DARPA. It was also supported in
part by the FP7-PEOPLE-2010-IOF project XHUNTER,
No. 273765, and SysSec, funded by the European Commis-
sion under Grant Agreement No. 257007.
10. REFERENCES
[1] CloudCracker :: Online Hash Cracker. https://www.
cloudcracker.com.
[2] BrowserID. https://github.com/mozilla/id-specs/
blob/prod/browserid/index.md.
[3] Directory of web sites storing passwords in plain text.
http://plaintextoffenders.com.
[4] E-mail discussion at Debian about the wiki.debian.org
security breach. https://lwn.net/Articles/531727/.
[5] Gmail account security in Iran. http://
googleonlinesecurity.blogspot.com/2011/09/
gmail-account-security-in-iran.html.
[6] Google Accounts Authentication and Authorization.
https://developers.google.com/accounts/docs/
GettingStarted.
[7] Google Declares War on the Password. http://www.
wired.com/wiredenterprise/2013/01/google-
password/all/.
[8] Hacker Posts 6.4 Million LinkedIn Passwords. http://
www.technewsdaily.com/7839-linked-passwords-
hack.html.
[9] How apple and amazon security ﬂaws led to my epic
hacking. http://www.wired.com/gadgetlab/2012/08/
apple-amazon-mat-honan-hacking/.
[10] How to Safely Store a Password. http://codahale.
com/how-to-safely-store-a-password/.
[11] HTTP 1.1. http://tools.ietf.org/html/rfc2616.
[12] IEEE data breach: 100K passwords leak in plain text.
http://www.neowin.net/news/ieee-data-breach-
100k-passwords-leak-in-plain-text.
[13] LinkedIn cleartext passwords. http://dazzlepod.
com/linkedin/.
[14] New 25 GPU Monster Devours Passwords In Seconds.
http://securityledger.com/new-25-gpu-monster-
devours-passwords-in-seconds/.
[15] PayPal Leads Industry Eﬀort to Move Beyond
Passwords. https://www.thepaypalblog.com/2013/
02/paypal-leads-industry-effort-to-move-
beyond-passwords/.
[16] Sony Hacked Again, 1 Million Passwords Exposed.
http://www.informationweek.com/security/
attacks/sony-hacked-again-1-million-passwords-
ex/229900111.
[17] The Domino Eﬀect of the Password Leak at Gawker.
http://voices.yahoo.com/the-domino-effect-
password-leak-gawker-10566853.html.
[18] The OAuth 2.0 Authorization Framework. http://
www.ietf.org/rfc/rfc6749.txt.
[19] TLS 1.2. https://tools.ietf.org/html/rfc5246.
[20] Twitter detects and shuts down password data hack in
progress. http://arstechnica.com/security/2013/
02/twitter-detects-and-shuts-down-password-
data-hack-in-progress/.
[21] URI. http://www.ietf.org/rfc/rfc2396.txt.
[22] B. Adida. Beamauth: Two-factor web authentication
with a bookmark. In Proceedings of the 14th ACM
conference on Computer and Communications
Security, 2007.
[23] A. Bagherzandi, S. Jarecki, N. Saxena, and Y. Lu.
Password-protected secret sharing. In Proceedings of
the 18th ACM conference on Computer and
Communications Security, 2011.
[24] F. Benevenuto, T. Rodrigues, M. Cha, and
V. Almeida. Characterizing user behavior in online
social networks. In Proceedings of the 9th ACM
SIGCOMM conference on Internet measurement
conference, 2009.
[25] R. Biddle, S. Chiasson, and P. Van Oorschot.
Graphical passwords: Learning from the ﬁrst twelve
years. ACM Computing Surveys, 44(4), Sept. 2012.
[26] K. Blashki and S. Nichol. Game geek’s goss: Linguistic
creativity in young males within an online university
forum (94//3 933k’5 9055oneone). Australian Journal
of Emerging Technologies and Society, 3(2), 2005.
[27] H. Bojinov, E. Bursztein, D. Boneh, and X. Boyen.
Kamouﬂage: Loss-resistant password management. In
Proceedings of the 15th European Symposium On
Research In Computer Security, September 2010.
[28] J. Bonneau. Statistical metrics for individual password
strength. In Proceedings of the 20th international
conference on Security Protocols. Springer, 2012.
[29] J. Bonneau, C. Herley, P. C. v. Oorschot, and
F. Stajano. The quest to replace passwords: A
framework for comparative evaluation of web
authentication schemes. In Proceedings of the 33rd
IEEE Symposium on Security and Privacy, 2012.
[30] B. M. Bowen, V. P. Kemerlis, P. V. Prabhu, A. D.
Keromytis, and S. J. Stolfo. A system for generating
and injecting indistinguishable network decoys.
Journal of Computer Security, 20(2-3), 2012.
[31] B. M. Bowen, P. Prabhu, V. P. Kemerlis,
S. Sidiroglou, A. D. Keromytis, and S. J. Stolfo.
BotSwindler: tamper resistant injection of believable
decoys in VM-based hosts for crimeware detection. In
Proceedings of the 13th international conference on
Recent Advances in Intrusion Detection, 2010.
[32] W. E. Burr, D. F. Dodson, and W. T. Polk. Electronic
authentication guideline. US Department of
Commerce, Technology Administration, National
Institute of Standards and Technology, 2004.
[33] J. Camenisch, A. Lysyanskaya, and G. Neven.
Practical yet universally composable two-server
197password-authenticated secret sharing. In Proceedings
of the 2012 ACM conference on Computer and
Communications Security. ACM, 2012.
[34] W. Cheswick. Rethinking passwords. Communications
of the ACM, 56(2), 2013.
[51] S. Schechter, A. J. B. Brush, and S. Egelman. It’s no
secret. Measuring the security and reliability of
authentication via secret questions. In Proceedings of
the 30th IEEE Symposium on Security and Privacy,
2009.
[35] L. S. Clair, L. Johansen, W. Enck, M. Pirretti,
[52] A. Shamir. How to share a secret. Communications of
the ACM, 22(11), 1979.
[53] R. Shay, S. Komanduri, P. G. Kelley, P. G. Leon,
M. L. Mazurek, L. Bauer, N. Christin, and L. F.
Cranor. Encountering stronger password requirements:
user attitudes and behaviors. In Proceedings of the
Symposium on Usable Privacy and Security, 2010.
[54] S.-T. Sun, Y. Boshmaf, K. Hawkey, and K. Beznosov.
A billion keys, but few locks: the crisis of web single
sign-on. In Proceedings of the New Security Paradigms
Workshop. ACM, 2010.
[55] R. Wang, S. Chen, and X. Wang. Signing me onto
your accounts through facebook and google: A
traﬃc-guided security study of commercially deployed
single-sign-on web services. In Proceedings of the 33rd
IEEE Symposium on Security and Privacy, 2012.
[56] M. Weir, S. Aggarwal, B. d. Medeiros, and B. Glodek.
Password cracking using probabilistic context-free
grammars. In Proceedings of the 30th IEEE
Symposium on Security and Privacy, 2009.
[57] H. Wimberly and L. M. Liebrock. Using ﬁngerprint
authentication to reduce system security: An
empirical study. In Proceedings of the 32nd IEEE
Symposium on Security and Privacy, 2011.
[58] M. Wu, R. C. Miller, and S. L. Garﬁnkel. Do security
toolbars actually prevent phishing attacks? In
Proceedings of the SIGCHI Conference on Human
Factors in Computing Systems. ACM, 2006.
[59] Y. Zhang, F. Monrose, and M. K. Reiter. The security
of modern password expiration: an algorithmic
framework and empirical analysis. In Proceedings of
the 17th ACM conference on Computer and
Communications Security.
P. Traynor, P. McDaniel, and T. Jaeger. Password
exhaustion: predicting the end of password usefulness.
In Proceedings of the 2nd international conference on
Information Systems Security. Springer-Verlag, 2006.
[36] G. D. Crescenzo, R. J. Lipton, and S. Walﬁsh.
Perfectly secure password protocols in the bounded
retrieval model. In Theory of Cryptography
Conference. Springer, 2006.
[37] A. Dey and S. Weis. Pseudoid: Enhancing privacy in
federated login. In Hot Topics in Privacy Enhancing
Technologies, 2010.
[38] R. Dhamija and A. Perrig. Deja vu: a user study
using images for authentication. In Proceedings of the
9th USENIX Security Symposium, 2000.
[39] R. Dhamija and J. D. Tygar. The battle against
phishing: Dynamic security skins. In Proceedings of
the Symposium on Usable Privacy and Security, 2005.
[40] D. Florencio and C. Herley. A large-scale study of web
password habits. In Proceedings of the international
conference on World Wide Web. ACM, 2007.
[41] S. Gaw and E. W. Felten. Password management
strategies for online accounts. In Proceedings of the
Symposium on Usable Privacy and Security, 2006.
[42] J. Huang and R. W. White. Parallel browsing
behavior on the web. In Proceedings of the 21st ACM
conference on Hypertext and Hypermedia, 2010.
[43] A. Juels and R. L. Rivest. Honeywords: Making
password-cracking detectable, 2013.
[44] P. G. Kelley, S. Komanduri, M. L. Mazurek, R. Shay,
T. Vidas, L. Bauer, N. Christin, L. F. Cranor, and
J. Lopez. Guess again (and again and again):
Measuring password strength by simulating
password-cracking algorithms. In Proceedings of the
33rd IEEE Symposium on Security and Privacy, 2012.
[45] C. D. Manning and H. Sch¨utze. Foundations of
statistical natural language processing. MIT, 1999.
[46] M. Miculan and C. Urban. Formal analysis of
facebook connect single sign-on authentication
protocol. In Proceedings of the 37th International
Conference on Current Trends in Theory and Practice
of Computer Science. Springer, 2011.
[47] C. Percival. Stronger key derivation via sequential
memory-hard functions. http://tools.ietf.org/
html/draft-josefsson-scrypt-kdf-00.
[48] N. Provos and D. Mazi`eres. A future-adaptive
password scheme. In Proceedings of the USENIX
Annual Technical Conference, 1999.
[49] D. Recordon and D. Reed. Openid 2.0: a platform for
user-centric identity management. In Proceedings of
the ACM workshop on Digital Identity Management,
2006.
[50] B. Ross, C. Jackson, N. Miyake, D. Boneh, and J. C.
Mitchell. Stronger password authentication using
browser extensions. In Proceedings of the 14th
USENIX Security Symposium, 2005.
198