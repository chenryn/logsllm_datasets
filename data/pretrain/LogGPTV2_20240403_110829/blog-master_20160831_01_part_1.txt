## CentOS 6.x x64 部署HAWQ    
### 作者         
digoal          
### 日期        
2016-08-31        
### 标签        
PostgreSQL , HAWQ    
----        
## 背景      
HAWQ与Greenplum师出同门，都是来自pivotal的分析型数据库产品，均以PostgreSQL为基础代码。  
**HAWQ与Greenplum相似之处**   
1\. 强大的SQL兼容性，SQL-92, SQL-99, SQL-2003, OLAP extension  
2\. ORCA查询优化器  
3\. MPP架构，节点间通过高速UDP互联  
4\. 支持多级数据分区，支持LIST，RANGE分区。  
5\. 支持gzip压缩  
6\. 支持python, perl, java, c/c++, R过程语言  
7\. 支持MADLib机器学习库  
8\. 支持丰富的BI工具 Tableau, SAS et al.    
9\. 标准的接口JDBC/ODBC  
10\. 以PostgreSQL为基础代码   
11\. 支持外部数据源（HAWQ称为PXF，目前支持HDFS,HIVE,HBASE）  
**HAWQ与Greenplum不同之处**     
1\. HAWQ的存储层剥离，支持create filesystem。      
2\. 数据交由HDFS进行管理，带来了一些好处，如支持动态分布，支持rank识别，主机识别等，而非全哈希分布，理论上可以比GP可以支持更大的集群。    
3\. 支持虚拟segment，计算时根据数据的分布动态启动虚拟的segment容器，实行运算。也支持根据数据量的大小，QUERY的复杂程度动态调整虚拟segment的多少。      
4\. 只支持数据追加，TRUNCATE；不支持update, delete操作。  Greenplum则同时支持update, delete操作。所以目前的vacuum其实只是针对系统表的操作。      
5\. 目前HAWQ还不支持PostGIS，而Greenplum支持。    
6\. 三级资源管理Integrate with YARN and hierarchical resource queues  
7\. 支持parquet列存储格式  
8\. 与HADOOP深度整合，HDFS存储层、资源管理(YARN)、部署(Ambari)。  
9\. 高效的 HDFS 和 YARN互联: libhdfs3 and libYARN  
10\. 支持snappy, zlib压缩算法，但是不支持quicklz算法。    
11\. 高效的新增和缩减节点，得益于HDFS    
12\. 因为hawq只有AO表，增量备份会比较好做  
13\. 结合HDFS，更容易做高可用，不需要管理segment的高可用，可以认为segment是无状态设备，数据副本的工作交给HDFS。  HAWQ只需要管好MASTER的高可用即可。    
14\. HAWQ暂时不支持索引，不支持普通表使用非HDFS表空间。    
**HAWQ 架构**    
![pic1](20160831_01_pic_001.png)  
![pic2](20160831_01_pic_002.png)  
**HAWQ 数据流**   
与Greenplum类似，支持外部数据源，同时支持从Master写入。  
一、数据来自外部数据源(PXF 架构)    
与Greenplum类似，目前支持3种外部数据源  
1\. gphdfs  
2\. hive  
3\. hbase  
二、数据从master写入  
**HAWQ 生态**  
HAWQ对接了Hadoop生态，将存储交给HDFS，hawq只负责计算。用户可以在其自有的HDFS之上很方便的构建HAWQ，作为查询引擎使用。  
目前HAWQ开源项目处于孵化状态，代码不如经历了多年商业化的Greenplum成熟。  
依托Hadoop生态，以强大的SQL支持为目标，满足Hadoop生态中大部分用户的SQL需求。  
**HAWQ & Greenplum 社区, 人才**  
hawq和greenplum的代码想通之处非常多，所以从人才角度来看，HAWQ和GP可以共用人才。  
**Greenplum如何吸取HAWQ的长处**  
1\. 引入主机分组，打破原有全哈希的数据分布。  
2\. 支持虚拟segment。  
## 安装HAWQ  
以CentOS 6.x x64主机为例  
依赖非常多，一步步来  
### gcc
#### gmp
https://gmplib.org/#DOWNLOAD  
```
cd ~
wget https://gmplib.org/download/gmp/gmp-6.1.1.tar.bz2
tar -jxvf gmp-6.1.1.tar.bz2
cd gmp-6.1.1
./configure --prefix=/home/digoal/app/gmp
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
```
#### mpfr
http://www.mpfr.org/mpfr-current/#download  
```
cd ~
wget http://www.mpfr.org/mpfr-current/mpfr-3.1.4.tar.bz2
tar -jxvf mpfr-3.1.4.tar.bz2
cd mpfr-3.1.4
./configure --prefix=/home/digoal/app/mpfr --with-gmp-include=/home/digoal/app/gmp/include --with-gmp-lib=/home/digoal/app/gmp/lib
make -j 32 
make install
export LD_LIBRARY_PATH=/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
```
#### mpc
http://www.multiprecision.org/  
```
cd ~
wget ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz
tar -zxvf mpc-1.0.3.tar.gz
cd mpc-1.0.3
./configure --prefix=/home/digoal/app/mpc --with-gmp=/home/digoal/app/gmp --with-mpfr=/home/digoal/app/mpfr
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
```
#### isl
```
cd ~
wget ftp://gcc.gnu.org/pub/gcc/infrastructure/isl-0.16.1.tar.bz2
tar -jxvf isl-0.16.1.tar.bz2
cd isl-0.16.1
./configure --prefix=/home/digoal/app/isl --with-gmp-prefix=/home/digoal/app/gmp
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
```
#### cloog
http://www.cloog.org/  
```
cd ~
wget http://www.bastoul.net/cloog/pages/download/count.php3?url=./cloog-0.18.4.tar.gz
tar -zxvf cloog-0.18.4.tar.gz
cd cloog-0.18.4
./configure --prefix=/home/digoal/app/cloog --with-isl-prefix=/home/digoal/app/isl --with-gmp-prefix=/home/digoal/app/gmp
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/cloog/bin:$PATH
```
#### gcc
https://gcc.gnu.org/gcc-4.9/  
```
wget http://gcc.skazkaforyou.com/releases/gcc-4.9.4/gcc-4.9.4.tar.bz2
tar -jxvf gcc-4.9.4.tar.bz2
cd gcc-4.9.4
LDFLAGS="-L/home/digoal/app/cloog/lib -L/home/digoal/app/mpc/lib -L/home/digoal/app/mpfr/lib -L/home/digoal/app/gmp/lib -L/home/digoal/app/isl/lib" ./configure --prefix=/home/digoal/app/gcc4.9.4 --with-mpc=/home/digoal/app/mpc --with-mpfr=/home/digoal/app/mpfr --with-gmp=/home/digoal/app/gmp --with-cloog=/home/digoal/app/cloog --with-isl=/home/digoal/app/isl --disable-isl-version-check --disable-multilib
make -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
### cmake
```
cd ~
wget https://cmake.org/files/v3.6/cmake-3.6.1.tar.gz
tar -zxvf cmake-3.6.1.tar.gz
cd cmake-3.6.1
./configure --parallel=32 --prefix=/home/digoal/app/cmake
make -j 32
make install
export PATH=/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
### json-c-devl
```
cd ~
wget http://oss.metaparadigm.com/json-c/json-c-0.9.tar.gz
tar -zxvf json-c-0.9.tar.gz
cd json-c-0.9
./configure --prefix=/home/digoal/app/json-c-devel 
make
make install
ln -s /home/digoal/app/json-c-devel/include/json /home/digoal/app/json-c-devel/include/json-c
export LD_LIBRARY_PATH=/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
```
### boost
```
cd ~
wget http://sourceforge.net/projects/boost/files/boost/1.56.0/boost_1_56_0.tar.bz2
tar -jxvf boost_1_56_0.tar.bz2
cd boost_1_56_0
./bootstrap.sh --prefix=/home/digoal/app/boost
./b2 --prefix=/home/digoal/app/boost link=static runtime-link=static variant=release
./b2 install
export LD_LIBRARY_PATH=/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
### thrift
```
cd ~
wget http://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz
tar -zxvf thrift-0.9.1.tar.gz
cd thrift-0.9.1
./configure --prefix=/home/digoal/app/thrift --with-boost=/home/digoal/app/boost --without-tests
make -j 32
sudo make install
export LD_LIBRARY_PATH=/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```
### protobuf
```
sudo
# yum install -y autoconf automake libtool curl make gcc-c++ unzip
cd ~
git clone https://github.com/google/protobuf
cd protobuf
git checkout 3.0.0-GA
./autogen.sh
./configure --prefix=/home/digoal/app/protobuf 
make -j 32
make check -j 32
make install
export LD_LIBRARY_PATH=/home/digoal/app/protobuf/lib:/home/digoal/app/thrift/lib:/home/digoal/boost_1_56_0/stage/lib:/home/digoal/app/json-c-devel/lib:/home/digoal/app/gcc4.9.4/lib:/home/digoal/app/gcc4.9.4/lib64:/home/digoal/app/cloog/lib:/home/digoal/app/isl/lib:/home/digoal/app/mpc/lib:/home/digoal/app/mpfr/lib:/home/digoal/app/gmp/lib:$LD_LIBRARY_PATH
export PATH=/home/digoal/app/protobuf/bin:/home/digoal/app/thrift/bin:/home/digoal/boost_1_56_0/stage/bin:/home/digoal/app/cmake/bin:/home/digoal/app/gcc4.9.4/bin:/home/digoal/app/cloog/bin:$PATH
```