their strong connections with other malicious hosts, and their
tenuous relations with legitimate hosts (Section III-C).
Compared with prior approaches [5], [11], [33] that rely
on the contents (e.g., URL patterns) or semantics (e.g.,
drive-by downloads) of speciﬁc types of attacks or speciﬁc
data sources for detection, our approach utilizes only the
topological information of malicious Web infrastructures.
An important advantage of this approach is that it works
on different types of attacks and different sources of data,
regardless whether the attack is drive-by download, scam,
or is carried through spam tweets [14] or malvertising [16],
as long as it exhibits the same topological properties used
for detection, which in our case is the connectivity of ded-
icated malicious HICs. Moreover, such an approach can be
more difﬁcult to evade by active adversaries: the dedicated
malicious HICs could cloak to the crawlers, redirecting
trafﬁc to google.com, but they cannot easily change their
connection structures to receive more trafﬁc from legitimate
hosts or less trafﬁc from other malicious hosts.
A. PageRank-based Detection
The connectivity features of the dedicated malicious HICs
are well captured by the concept of PageRank [3], a tech-
nique widely used to evaluate the importance of web pages.
In the web site ranking scenario, a web page is considered
to be important and therefore has a high rank if it is well
connected, easy to reach from other (randomly-selected)
pages. This rank is computed by propagating the initial score
of each web page across a directed hyperlink graph and
iteratively updating the page’s score based on the ranks of
the pages that link to it. This idea has also been applied
to detect web spam pages [9], comment spams [32] and
spammers on social graphs [4].
In our case, what makes the dedicated malicious HICs
unique is their unbalanced connections from (dedicated or
non-dedicated) malicious HICs v.s. those from legitimate
ones. Using PageRank as the yardstick, malicious HICs get
high ranks from the dark Web and low ranks from the bright
side of the Web. Therefore, our idea is to compute two
different ranks and use them together for detection.
Speciﬁcally, each HIC on the HIC graph maintains a
pair of scores,
the good one that models its popularity
among legitimate hosts, and the bad one that describes its
rank among malicious hosts. The use of both scores help
balance the good trafﬁc that malicious hosts receive, for
example, when DoubleClick is used to forward trafﬁc to
a malicious ad network [16], as well as the bad trafﬁc
that legitimate hosts gets, for example, when a malicious
117
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:54:53 UTC from IEEE Xplore.  Restrictions apply. 
host cloaks, redirecting a visitor’s trafﬁc to google.com.
Given the fact that the overwhelming majority of the HICs
are legitimate and tend to connect to each other and to
even non-dedicated malicious HICs (that may correspond
to compromised hosts), not only truly legitimate HICs but
also those non-dedicated malicious ones tend to have much
higher good scores than their bad scores. On the other hand,
those whose bad scores are high but good scores are low
are very likely to have played key roles connecting different
malicious parties, while being separated from the legitimate
world. In other words, they are likely dedicated malicious
HICs. Thus if the bad score of an HIC is above a preset
threshold α and the ratio of the good score to the bad
score is below a threshold β, we consider this HIC as a
dedicated malicious HIC. We discuss the settings for α and
β in Section V-A.
Speciﬁcally, our approach runs the PageRank algorithm
on the HIC graph described in Section III-C. The PageRank
scores are computed by iteratively applying the following
operations on each HIC on the graph, starting from a set of
initial scores assigned to these HICs. The operation updates
the score (bad or good) P Ri+1(A) of an HIC A at the i +
1 iteration using the score of another HIC X that has an
directed edge originating from X to A at the ith step:
(cid:2)
X∈M (A)
P Ri+1(A) = 1 − d + d
P Ri(X)
L(X)
(1)
where d is a damping factor, M(A) is the set of HICs
pointing to A, and L(X) is the number of outgoing edges
from X to A.
Prior research [16] shows that malicious hosts on a path
tend to stay together and those further away from them are
less likely to be malicious. To model this observation and
further control the level of the malicious rank (score) a non-
dedicated host (e.g., a compromised website) receives, we
adjust the scores of individual HICs, after the PageRank it-
erations, as follows. Consider a node A, which stands i hops
away from its closest known bad node (see Section IV-B),
its PageRank score s (good or bad) is adjusted to s × θi−1,
where θ is a constant value. In our research, we set θ = 0.8
when computing a bad score, which exponentially weakens
as a host is further away from a malicious node. Therefore,
only those very close to the dark world can receive a high
bad score, as such a reputation does not propagate too far.
In contrast, we use θ = 1 for computing a good score,
allowing the inﬂuence of a good host to propagate undamped
throughout the HIC graph. In this way, any host (legitimate
or not) with substantial connections to the legitimate world
tends to get a high good score.
B. PageRank Score Settings and Propagation
To bootstrap the initial scores, we utilize Alexa top 60,000
sites and EasyList sites to assign initial good scores and
Microsoft Forefront to ﬁnd those that need to be given
non-zero initial bad scores. Both known good and known
118
bad hosts receive 1 as their initial good and bad scores
respectively. Others just get 0 to start with. On the HIC
graph, an HIC’s good/bad scores are simply the aggregate
scores of their corresponding hosts. For example, an HIC
with n known legitimate hosts (on the whitelist) and m
known malicious hosts (detected by the scanner) get an
initial good score of n and a bad score of m.
These initial scores are propagated across the HIC graph
through iterated updates of each HIC’s scores using Equa-
tion 1, except that only part of the score P Ri(X) is used to
update P Ri+1(A), based upon the weight of X’s outbound
link to A. This weight is determined by the ratio between
the number of hosts A has and the total number of the hosts
within all the HICs receiving inputs from X. In other words,
if there are S hosts within the HICs getting trafﬁc from X,
S to update P Ri+1(A).
and SA of them are in A, we use SA
Figure 5 illustrates how this update works.
A 
PR(A0)=1 
2 hosts 
B 
PR(B1)=1 – d + d ×  
1 host 
C 
ଶ
ଷ
PR(C1)= 1 – d + d × ଵ
ଷ
Figure 5. Weight distribution. Assuming A has an initial score 1, child
B will receive a score 1 − d + d × 2
3 and child C will receive a score
1 − d + d × 1
3 , as the number of host names within B is two times that of
C.
C. Dedicated malicious HIC identiﬁcation
Reconstruct 
Redirection 
Paths 
Generate 
HIC Graph 
Pagerank 
based 
Detection 
HIC 
Filtering 
Paths 
HIG Graph 
Suspicious HICs 
Dedicated HICs 
Figure 6. Detection Framework
After rounds of iterations, the scores of individual HICs
converge. At that point, we can pick up a set of possibly ded-
icated malicious HICs whose bad scores are high and whose
good to bad score ratios are low according to the thresholds
α and β. To mitigate false positives3, we conservatively
remove from the detection results all the HICs that involve
either a host name on the lists used for bootstraping good
scores or a host name with a doorway URL discovered by
our crawler. The doorway URLs are used here as a heuristic
because they often correspond to compromised web sites as
3Note that false positive here refers to the situation that a non-dedicated
malicious HIC or a legitimate one is labeled as dedicated malicious.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:54:53 UTC from IEEE Xplore.  Restrictions apply. 
opposed to dedicate malicious sites. Figure 6 summarizes
the entire processing ﬂow of our detection.
V. EVALUATION AND RESULT ANALYSIS
In this section, we report our evaluation of the topology-
based detection method. We ﬁrst describe our experiment
setup, and then elaborate our experiment results, including
a comparison study between our technique and the exist-
ing approaches that utilize simple topological features, in-
degree, for ranking malicious websites. Finally we analyze
detected HICs to understand their roles (e.g., exploit servers,
redirectors) in malicious activities.
A. Evaluation
Experiment settings. We run the PageRank algorithm on
the constructed HIC graph as speciﬁed in Section III-C with
a threshold for bad score α = 0.9. Since malicious hosts
could redirect visitors to legitimate services, e.g., when they
cloak, this lower-bound threshold (which is pretty high for a
legitimate host) conservatively ensures that these legitimate
parties will not be misclassiﬁed as malicious.
For the threshold β that records the ratio between good
and bad scores, we select it according to the number of
HICs that have non-zero initial scores. Suppose SG HICs
have non-zero good scores and SB HICs have non-zero bad
scores during bootstrap, the threshold β will be selected as
β = SG
γ, where γ is a parameter and we set it to 10. This
SB
deﬁnition reduces the impact of the particular input dataset
on the detection results.
Our HIC graph contains in total 60,856 HICs (91,464 host
names) with non-zero initial good scores, using the Alexa
top 60,000 site list and EasyList described in Section IV-B.
We also have in total 52,847 HICs (106,872 host names)
marked as malicious by Forefront. In our experiments, we
randomly select a varying subsect (1%, 5%, 10%, 50%, and
90%) of known malicious HICs as seeds for setting the initial
bad scores, simulating scenarios where we have knowledge
about different numbers of conﬁrmed malicious HICs for
detection. In each case, β will be set differently based on
the number of the bad seeds. For all experiments, we run
20 PageRank iterations to propagate scores. Note that the
labeled seed sets may not be clean, as many malicious hosts
cloak or have parked. We consider such cases common in
practice, as it is in general hard to obtain clean, noise-free
seed data.
Metric
Recall
False Detection Rate (FDR)
False Positive Rate (FPR)
Deﬁnition
NT P /(NT P + NF N )
NF P /(NF P + NT P )
NF P /(NF P + NT N )
METRICS DEFINITION. NT P IS THE NUMBER OF TRUE-POSITIVES.
NF N IS THE NUMBER OF FALSE-NEGATIVES. NF P IS THE NUMBER OF
FALSE-POSITIVES. NT N IS THE NUMBER OF TRUE-NEGATIVES.
Table IV
l
l
A
#
/
s
h
t
a
P
d
e
t
c
e
t
e
D
#
s
h
t
a
P
s
u
o
i
c
i
l
a
M
100%
80%
60%
40%
20%
0%
0%
selected seed only
total
40%
20%
#Selected Paths / #Seed Paths 
60%
80% 100%
e
t
a
R
n
o
i
s
n
a
p
x
E
30
25
20
15
10
5
0
0%
25.29 
7.46 
3.75 
1.25 
1.05 
40%
20%
80%
#Selected Paths / # Seed Paths 
60%
100%
(a)
Figure 7.
(b)
(a) Recall. (b) Expansion rate.
Host paths
Host names
t
n
u
o
C
25000
20000
15000
10000
5000
0
0.93% 5.60% 12.30% 58.64% 82.43%
# selected paths / # seed paths 
FDR
FPR
R
D
F
3.0%
2.5%
2.0%
1.5%
1.0%
0.5%
0.0%
0.030%
0.025%
0.020%
0.015%
0.010%
0.005%
0.000%
R
P
F
0% 20% 40% 60% 80% 100%
# selected paths / # seed paths 
(a)
Figure 8.
(b)
(a) New ﬁndings. (b) FDR/FPR.
Results. We use several metrics to evaluate our results
(see Table IV). First, we evaluate the recall of malicious
host paths by examining the percentage of all conﬁrmed
malicious paths being correctly detected by varying our seed
data size. Note that once we detect an HIC as malicious, we
treat all the host paths going through this HIC as malicious.
Figure 7 shows that using 5% known (dedicated or non-
dedicated) malicious HICs as seeds, which correspond to
33,547 (6%) malicious host paths, we can detect 242,776