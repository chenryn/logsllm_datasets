    yarn run v1.3.2
    $ rimraf node_modules/.cache/babel-loader && next
    /project/next.config.js:9
        config.entry = async () => {
                             ^
    SyntaxError: Unexpected token (
        at Object.exports.runInThisContext (vm.js:76:16)
        at Module._compile (module.js:542:28)
        at Object.Module._extensions..js (module.js:579:10)
        at Module.load (module.js:487:32)
        at tryModuleLoad (module.js:446:12)
        at Function.Module._load (module.js:438:3)
        at Module.require (module.js:497:17)
        at require (internal/module.js:20:19)
        at loadConfig (/project/node_modules/next/dist/server/config.js:57:28)
        at getConfig (/project/node_modules/next/dist/server/config.js:40:20)
        at new HotReloader (/project/node_modules/next/dist/server/hot-reloader.js:119:40)
        at Server.getHotReloader (/project/node_modules/next/dist/server/index.js:157:14)
        at new Server (/project/node_modules/next/dist/server/index.js:124:35)
        at Object. (/project/node_modules/next/dist/bin/next-dev:63:11)
        at Module._compile (module.js:570:32)
        at Object.Module._extensions..js (module.js:579:10)
    error Command failed with exit code 1.
  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
## Current Behavior
## Steps to Reproduce (for bugs)
  1. Was on next 4
  2. Upgrade to next 5
  3. Error
  4. 
## Context
Followed this guide:
https://github.com/zeit/next.js/blob/canary/examples/with-
polyfills/next.config.js
My next.config.js:
    // https://github.com/zeit/next.js/blob/master/examples/with-global-stylesheet
    const path = require('path');
    const glob = require('glob');
    module.exports = {
      webpack: (config, { dev }) => {
        const originalEntry = config.entry
        config.entry = async () => {
          const entries = await originalEntry()
          if (entries['main.js']) {
            entries['main.js'].unshift('./client/polyfills.js')
          }
          return entries
        }
        // Set project root path as part of the resoler
        config.resolve = {
          modules: [
            ...config.resolve.modules,
            path.resolve('./')
          ]
        }
        // Original Issue:
        // https://github.com/zeit/next.js/issues/1877#issuecomment-299396974
        if (config.resolve.alias) {
          delete config.resolve.alias['react'];
          delete config.resolve.alias['react-dom'];
        }
        // TODO: Remove this once nextjs issue has been resolved: https://github.com/zeit/next.js/issues/1582
        config.plugins = config.plugins.filter(plugin => {
          if (plugin.constructor.name === 'UglifyJsPlugin') {
            return false;
          } else {
            return true;
          }
        });
        config.module.rules.push(
          // es6 transpilation in node_modules for object.assign
          {
            test: /\.(js|jsx)/,
            loader: 'babel-loader',
            exclude(file) {
              return file.startsWith(__dirname + '/node_modules/subscriptions-transport-ws') ? false : true;
            }
          },
          // yaml
          {
            test: /\.yaml$/,
            use: [
              {
                loader: 'emit-file-loader',
                options: {
                  name: 'dist/[path][name].[ext]'
                }
              },
              'json-loader',
              'yaml-loader'
            ]
          },
          // css|scss
          {
            test: /\.(css|scss)/,
            loader: 'emit-file-loader',
            options: {
              name: 'dist/[path][name].[ext]'
            }
          },
          {
            test: /\.css$/,
            use: ['babel-loader', 'raw-loader', 'postcss-loader']
          },
          {
            test: /\.s(a|c)ss$/,
            use: ['babel-loader', 'raw-loader', 'postcss-loader',
              { loader: 'sass-loader',
                options: {
                  includePaths: ['styles', 'node_modules']
                  .map(d => path.join(__dirname, d))
                  .map(g => glob.sync(g))
                  .reduce((a, c) => a.concat(c), [])
                }
              }
            ]
          },
          {
            test: /\.(graphql|gql)$/,
            exclude: /node_modules/,
            use: [
              {
                loader: 'emit-file-loader',
                options: {
                  name: 'dist/[path][name].[ext]'
                }
              },
              'babel-loader',
              'graphql-tag/loader'
            ]
          }
        );
        return config;
      }
    };
## Your Environment
Tech | Version  
---|---  
next | 5.0.0  
node | 6.9.1  
OS | OSX 10.13.2  
browser | chrome beta 65.0.3325.51  
etc |