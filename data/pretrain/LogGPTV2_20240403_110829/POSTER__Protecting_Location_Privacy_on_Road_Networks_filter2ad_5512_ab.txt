multiple virtual probes to pinpoint user location from fake
GPS locations. Zhang et al. in [34] propose two dummy-POI
selection algorithms so as to support the queries of top-k
POIs. Fei et al. in [35] propose to divide users into groups,
select dummies based on groups, and then share the returned
results from the service provider. However, these dummies
do not have continuous movement patterns which can be
easily discovered by attackers who analyze dummies collected
at different
time stamps. In order to better simulate the
trajectories of dummies, Lei et al. [4] propose two schemes
to generate dummies that exhibit long-term movement patterns
based on human movement behavior. Wang et al. [6] propose a
fog structure to store partial information and generate dummy
trajectories. Since they did not consider the geographical
constraints, as a result, the generated dummy trajectories may
be off-road or at places that are not accessible by real humans.
To solve this problem, Hara et al. [5] added the consideration
of geographical constraints during the dummy generation.
With the similar idea of generating fake dummies to hide
the user’s real location, Zhang et al. [36] proposed to release
some fake contexts to the adversary so as to protect the user’s
sensitive contexts such as location information. Based on
existing dummy generation schemes, Liu et al. [37] ﬁlter out
the dummies that can be identiﬁed by taking into account of
the spatiotemporal correlation. Hayashida et al. [7] propose a
dummy generation method which can estimate user-movement
based on the visiting points inputted by the user. Instead
of generating dummy locations, Pingley et al. propose to
generate dummy queries with different service attributes to
prevent the adversary from correlating a query with a speciﬁc
user. However, these approaches still lack the consideration of
dummies’ behavior rationale. Their generated dummies do not
have daily routines. Such random behavior of dummies can be
easily distinguished from real human trajectories by existing
data mining techniques.
Authorized licensed use limited to: University of Missouri Libraries. Downloaded on March 26,2020 at 16:32:19 UTC from IEEE Xplore.  Restrictions apply. 
714
IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 15, 2020
Another related thread of work is on privacy recommenda-
tion such as Li et al. [38] who propose to automatically learn
user’s privacy preferences.
experiments including the evaluation of the use of advanced
data mining techniques as an attack to our proposed system.
Although there have been extensive studies on location pri-
vacy theories, very few efforts have been devoted to developing
real mobile apps for users to actually control their locations.
Existing applications are mostly preliminary. For example,
in [39], Hornyack et al. develop a system which returns a ﬁxed
location and phone number at all times. While this can ensure
good privacy for the user, the user will never be able to enjoy
most utilities of the location-based services. Shokri et al. [40]
devise an interesting collaborative approach that allows peer
users to form MobiCrowd. When a user needs to contact a
location-based service, his/her request will not be directly sent
to the server but be routed through the MobiCrowd. In this
way, the location-based service provider will not know who
sent the query. However, such strategy falls short when there
are not enough users nearby. Achara et al. [41] developed a
mobile app which can analyze the privacy leakage in smart-
phones. Most recently, Fawaz et al. [2] conducted a detailed
risk analysis of the use of mobile apps in terms of location
privacy leak. They propose an app called LP-Doctor which
allows users to adjust the amount of location information to
be disclosed to various apps. However, the service providers
which have been granted permission to access the locations can
still track the users. Compared to existing works on location-
privacy-preserving mobile apps, our proposed MoveWithMe
is unique in the following aspects:
• It is not constrained by the people density and can be
• It protects not only the user’s discrete locations but also
• It generates decoy trajectories that follow the real-time
• It can prevent the adversaries from knowing which city,
and even which country the user lives in by simulating
different decoys in different cities and countries.
• It guarantees the user’s experience and service quality
in that the user is able to obtain the same query results
without performing extra steps.
• It introduces very little overhead as demonstrated by our
• It does not require any change on existing server and
client structure, and can be immediately adopted by
users.
road conditions such as trafﬁc jams.
implementations.
used at any time and any place.
continuous trajectories.
It is worth noting that the initial idea of having a Move-
WithMe system was ﬁrst presented in our prior poster [42]
which however has a very simple decoy generation algorithm
and a simple app implementation that mainly relies on the
Android platform’s location mocking. In this paper, we have
made the following signiﬁcant improvement. We designed
a much more sophisticated decoy generation algorithm.
We developed a new app framework that is able to automati-
cally capture and modify the data packets between users and
service providers in the back end so as to automate the location
mocking process which has to be done manually in our prior
work. Our app can now be deployed both on Android and
IOS platforms. Moreover, we conducted a whole new set of
III. MOVEWITHME – A LOCATION PRIVACY PRESERVING
SYSTEM FOR SMARTPHONE USERS
The goal of the MoveWithMe system is to prevent the
service provider from proﬁling a user who is using the
location-based services. In what follows, we ﬁrst present our
threat model and then elaborate our proposed system.
A. Threat Model
In our work, there are two main parties: (i) Location-based
service providers;
(ii) Smartphone users who request
location-based services. We assume that the smartphone users
connect
to the Internet via certain VPN (Virtual Private
Network) or anonymity network TOR (The Onion Router) so
that the location-based service providers cannot use the IP
address attached to the service request to pinpoint a user’s
location. We consider two types of location-based service
providers:
• Precise location collectors: Some location-based services
collect users’ precise location information such as the
GPS coordinates or other forms of data which could be
used to reveal the user’s exact locations (e.g. embedded
accelerometer, gyroscope, etc. [43]). For example, navi-
gation apps need the user’s exact locations to calculate the
correct routes; the IoT (Internet-of-Things) device man-
agement platforms may need to know the user’s precise
locations to trigger certain location-based functions.
• Coarse location collectors: Some location-based services
only need coarse location information such as the zip
code. For example, weather forecasting services just need
to know which city a user is located.
if
We consider two kinds of adversaries: (i) location-based
service providers who are interested in proﬁling the users
for business proﬁts; (ii) attackers who have compromised the
location-based servers. These adversaries may attempt to seek
users’ private information in the following ways:
• The adversary proﬁles the users’ daily routines and
preferences by analyzing the users’ accurate locations
or coarse locations collected from the users’
ser-
vice requests. Speciﬁcally,
the user accesses the
location-based services intermittently, the adversary will
obtain the user locations as disconnected spatial points
on the map. If the user uses the service continuously,
the adversary will obtain the user’s trajectories or mov-
ing trends. In either case, the adversary can learn the
time patterns of the users’ movement by analyzing the
timestamps associated with the location information.
• The adversary may try to link accounts of the same user
in different location-based services, combine the collected
location information from different accounts, and obtain
a more complete trajectory information of the user.
• The adversary may exploit many tools such as advanced
data mining tools and statistical tools to try to ﬁlter out
the fake locations/trajectories that the users intend to use
to obfuscate their true locations.
Authorized licensed use limited to: University of Missouri Libraries. Downloaded on March 26,2020 at 16:32:19 UTC from IEEE Xplore.  Restrictions apply. 
KANG et al.: MoveWithMe: LOCATION PRIVACY PRESERVATION FOR SMARTPHONE USERS
715
Fig. 2. The Framework of the MoveWithMe System.
We assume that the adversaries can only passively receive
location information provided by users. That means the adver-
saries are not able to control the user’s mobile device or
directly pull the user’s location information without users’
permissions. Our proposed approach will be robust against
these attacks.
B. System Overview
The MoveWithMe system consists of ﬁve main components:
• Decoy Simulator: The decoy simulator component takes
movement patterns and social proﬁles as inputs to gen-
erate real-time trajectories of the decoys. The decoys’
trajectories also consider moving speed and possible stay
time as well as GPS errors in order to mimic real human
behavior as much as possible. In order to ensure the
consistency of the decoys’ movement and better protect
user’s location privacy, this component is constantly run-
ning in the background even when the real user is not
using a location-based service or is not moving.
• Request
Interceptor: When the user accesses a
the request interceptor compo-
location-based service,
nent will analyze the request based on the pre-deﬁned
intercepting rules. Speciﬁcally, this component will ﬁrst
check if the request contains location information, and
what type it is. Then, it will take the decoys’ locations
from the decoy simulator component, generate several
requests for decoys, mix the simulated requests with the
user’s real request, and send them to the service provider
altogether. Upon receiving the response from the service
provider, this component will ﬁlter out the response to
the decoys’ requests and display only the response to
the user’s request. By intercepting the communication
between the user’s mobile phone and the service provider,
this component is able to prevent the service provider
from identifying the real user request.
• Service Monitor: When the user
is accessing a
location-based service, the request interceptor component
will hand over the request record to the service monitor
component. The service monitor component will record
each location request from the service provider and notify
the user about his/her location usage.
• Location Recorder: This component is in charge of
storing both the real and fake location information in a
historical trace database in order to ensure the consistency
during the decoy generation and adjust the decoy proﬁle
generation parameters if needed. By analyzing the histor-
ical trajectories and with the help of Google Places API,
we can ﬁnd out the user’s moving pattern, daily schedule,
social behaviors, favorite places, etc., which are useful for
generating new patterns and proﬁles for decoys to better
meet the user’s needs.
• Trajectory Display: This function is for the user to
visualize his/her real trajectories and the decoys’ trajec-
tories so that he/she may adjust the privacy settings if
needed.
Figure 2 gives an overview of how the components in
the MoveWithMe system are cooperating with each other
and interacting with location-based services. In particular,
to obtain the protection from MoveWithMe, the smartphone
user just needs to open the MoveWithMe app before visiting
any location-based service websites. If the service monitor
detects that a location-based service requires the user’s phone
to upload the user’s location information, the MoveWithMe
app will automatically send a mixed group of the real user
request and the fake requests based on the decoys’ locations
to confuse the service provider.
The MoveWithMe app needs two permissions from the user,
which are the permission to access the Internet for accessing
Google Directions and Places API, and the permission to
access GPS location. Note that compared to many apps in
the Google Play Store and Apple App Store, the number of
permissions requested by our app is relatively minimal.
C. Decoy Pattern and Proﬁle
In the MoveWithMe system, we model the decoys’ social
and travel behavior patterns and personalized proﬁles as
follows:
Authorized licensed use limited to: University of Missouri Libraries. Downloaded on March 26,2020 at 16:32:19 UTC from IEEE Xplore.  Restrictions apply. 
716
IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 15, 2020
Deﬁnition 1: A decoy’s social and travel behavior pattern
is in the form of (cid:2)P I D,T ,M,P(cid:3), which describes when and
where a decoy may be and in what travel mode:
• PID is the unique ID of the pattern.
• T contains the types of places a decoy may visit. It is
deﬁned as a matrix [(cid:2)T ypei , Randi , Meani , Devi(cid:3)]n,
where T ype denotes the type of a place such as “home,”
“friend’s home,” “university” and “restaurant,” Rand
indicates whether this is a ﬁxed type (F) (e.g., home) or
a randomly selected type (R) (e.g., restaurant), Mean and
Dev are the mean and deviation of the length of time that
a decoy may stay at this type of place, and n (n > 0) is
the total number of place types that a decoy may visit.
• M depicts the travel modes that a decoy may take under
different situations. Speciﬁcally, M is a matrix in the
form of: [(cid:2)Dis_mini , Dis_maxi , Pdi , Pti , Pbi , Pwi(cid:3)]m,
where Pd, Pt, Pb, and Pw are respectively the prob-
four travel modes (driving, public transit
abilities of
system, bicycling, and walking) that a decoy may take
when the estimated travel distance is in the range of
[Dis_min, Dis_max), and m (m > 0) denotes the total
number of travel modes in this pattern.
• P deﬁnes the transition probabilities between differ-
types of places in a week. For the wth day
ent
in a week (let 1 to 7 denote Monday to Sunday
respectively), Pw is a set of probability matrices in
the form of [(cid:2)T ime_sti , T ime_edi ,[PT ype j ,T ypek
]n×n(cid:3)]q,
where PT ype j ,T ypek indicates the probability that a decoy
may transit to T ypek when it leaves a place of T ype j
during the time period [T ime_st, T ime_ed), n is the
total number of place types, and q (q > 0) is the total
number of transition probability matrices.
Deﬁnition 2: A decoy’s personalized proﬁle is in the form of
(cid:2)F I D,SP ,MB,G(cid:3), which is an instantiation of the decoy’s
social and travel pattern.
• FID is the unique ID of the proﬁle.
• SP is a set of speciﬁc places a decoy may visit.
SP is deﬁned as a matrix [(cid:2)Namei , T ypei , Lati ,
Lngi ,[W sw]7(cid:3)]s, where Name is the name of the place,
T ype is the type of the place deﬁned by the decoy’s
pattern, Lat and Lng are the latitude and longitude of the
place respectively, [W sw]7 is the weekly schedule where
SP i .W sw denotes the probability of the place i being
visited by a decoy when it decides to visit SP i .T ype on
the wth day of the week, and s (s > 0) is the total number
of places that a decoy may visit.
• MB depicts the moving behaviors of a decoy. It is in
the form of [(cid:2)Modei , Speed_ fi , Speed_devi(cid:3)]t , where