title:Detecting Malicious Flux Service Networks through Passive Analysis
of Recursive DNS Traces
author:Roberto Perdisci and
Igino Corona and
David Dagon and
Wenke Lee
2009 Annual Computer Security Applications Conference
Detecting Malicious Flux Service Networks through
Passive Analysis of Recursive DNS Traces
Roberto Perdiscia,b, Igino Coronac, David Dagona, and Wenke Leea
aCollege of Computing, Georgia Institute of Technology, Atlanta, GA 30332, USA
bDamballa, Inc. Atlanta, GA 30308, USA
cDIEE, University of Cagliari, 09123 Cagliari, ITALY
PI:EMAIL, PI:EMAIL, {dagon,wenke}@cc.gatech.edu
Abstract—In this paper we propose a novel, passive
approach for detecting and tracking malicious ﬂux ser-
vice networks. Our detection system is based on passive
analysis of recursive DNS (RDNS) trafﬁc traces collected
from multiple large networks. Contrary to previous work,
our approach is not limited to the analysis of suspicious
domain names extracted from spam emails or precom-
piled domain blacklists. Instead, our approach is able to
detect malicious ﬂux service networks in-the-wild, i.e., as
they are accessed by users who fall victims of malicious
content advertised through blog spam, instant messaging
spam, social website spam, etc., beside email spam. We
experiment with the RDNS trafﬁc passively collected at
two large ISP networks. Overall, our sensors monitored
more than 2.5 billion DNS queries per day from millions
of distinct source IPs for a period of 45 days. Our
experimental results show that the proposed approach is
able to accurately detect malicious ﬂux service networks.
Furthermore, we show how our passive detection and
tracking of malicious ﬂux service networks may beneﬁt
spam ﬁltering applications.
I. INTRODUCTION
Internet miscreants and cyber-criminals are always
looking for new ways to cover the traces of their mali-
cious activities while preserving their illicit revenues. To
this end, malicious ﬂux service networks have recently
started to thrive [11]. Malicious ﬂux service networks
can be viewed as illegitimate content-delivery networks
(CDNs). Legitimate CDNs have been used for quite
some time to provide a high degree of availability,
scalability, and performance to legitimate high-volume
Internet services. A CDN usually consists of a relatively
large number of nodes scattered across multiple loca-
tions around the world. Whenever a user requests a ser-
vice provided through a CDN, the CDN’s node closest
(non necessarily in a geographic sense) to the user is
usually chosen to provide the requested content with
high performance. Differently from legitimate CDNs,
whose nodes are professionally administered machines,
the nodes of a malicious ﬂux service network, a.k.a. ﬂux
agents, are represented by malware-infected machines.
The ﬂux-agents are usually part of a botnet and can be
remotely controlled by the malware author, who is often
referred to as the botmaster.
Malicious ﬂux service networks are commonly used
to host phishing websites, illegal adult content, or serve
as malware propagation vectors, for example. The main
technical difference between a malicious ﬂux service
network and a legitimate CDN is that, while the nodes
of a legitimate CDN are highly reliable and tightly
controlled by the CDN administrator, botmasters do not
have complete control over the ﬂux agents. Many of
the compromised machines that form a malicious ﬂux
network may be turned on and off by their owners at
any time, making the uptime of each ﬂux agent hard to
predict. Also, differently from CDNs, it may be hard for
the botmaster to tightly monitor the load on each node,
and redistribute the received content requests accord-
ingly. In order to cope with this problems and maintain
high content availability, botmasters usually set up their
malicious ﬂux services using fast-ﬂux domain names.
In practice, fast-ﬂux domain names are characterized
by the fact that the set of resolved IP addresses (the
ﬂux agents) for these domain names change rapidly,
potentially at every DNS query [12]. Furthermore, since
it is usually hard for the botmaster to control exactly
where the malware propagates and what machines are
infected by her bot software, the ﬂux agents are often
scattered across many different networks [12].
A. Related Work
A number of approaches for detecting fast-ﬂux do-
main names have been recently studied in [3, 9, 8, 7],
for example. To the best of our knowledge,
these
works differ from each other in the number of features
used to characterized fast ﬂux domains and the details
of the classiﬁcation algorithms, but are all limited to
mainly studying fast-ﬂux domains advertised through
email spam1. In particular, given a dataset of spam
1The domain names found in domain blacklists and malware
samples are also considered in some works, but they are very few
compared to the domain names extracted from spam emails.
1063-9527/09 $26.00 © 2009 IEEE
DOI 10.1109/ACSAC.2009.36
311
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:12:17 UTC from IEEE Xplore.  Restrictions apply. 
emails (typically captured by spam traps and ﬁlters),
potential fast-ﬂux domain names are identiﬁed by ex-
tracting them from the URLs found in the body of these
emails [3, 9, 8, 7]. Then, an active probing strategy is
applied, which repeatedly issues DNS queries to collect
information about
the set of resolved IP addresses
and to classify each domain name into either fast-ﬂux
or non-fast-ﬂux. The work in [4] is in part different
from other previous work, because it is not limited to
domains found in spam emails. Hu et al. [4] propose to
analyze NetFlow information collected at border routers
to identify redirection botnets, which are a speciﬁc
kind of botnets used to set up redirection ﬂux service
networks. However, the information they extract from
network ﬂows is not able to detect ﬂux agents that are
being used as transparent proxies, instead of redirection
points. Also, the work in [4] is heavily based on a DNS
analysis module that applies active probing in a way
very similar to [3, 9], in order to collect the information
necessary to perform the classiﬁcation of suspicious
domains collected from spam emails and the correlation
with network ﬂows information.
B. Our Approach
In this paper we propose a novel, passive approach for
detecting and tracking malicious ﬂux service networks.
Our detection system is based on passive analysis of
recursive DNS traces collected from multiple large
networks. In practice, we deploy a sensor in front of
the recursive DNS (RDNS) server of different networks,
passively monitor the DNS queries and responses from
the users to the RDNS, and selectively store information
about potential fast-ﬂux domains into a central DNS
data collector. Since the amount of RDNS trafﬁc in large
networks is often overwhelming, we devised a number
of preﬁltering rules that aim at identifying DNS queries
to potential fast-ﬂux domain names, while discarding
the remaining requests to legitimate domain names. Our
preﬁltering stage is very conservative, nevertheless, it is
able to reduce the volume of the monitored DNS trafﬁc
to a tractable amount without discarding information
about domain names actually related to malicious ﬂux
services. Once information about potential malicious
ﬂux domains has been collected for a certain epoch E
(e.g., one day), we perform a more ﬁne-grain analysis.
First, we apply a clustering process to the domain names
collected during E, and we group together domain
names that are related to each other. For example we
group together domain names that point to the same
Internet service, are related to the same CDN, or are part
of the same malicious ﬂux network. Once the monitored
domain names have been grouped, we classify these
clusters of domains and the related monitored resolved
IP addresses as either being part of a malicious ﬂux
service network or not. This is in contrast with most
previous works, in which single domain names are con-
sidered independently from each other, and classiﬁed as
either fast-ﬂux or non-fast-ﬂux [3, 9, 7].
Our detection approach has a fundamental advantage,
compared to previous work. Passively monitoring live
users’ DNS trafﬁc offers a new vantage point, and
allows us to capture queries to ﬂux domain names that
are advertised through a variety of means, including
for example blog spam, social websites spam, search
engine spam, and instant messaging spam, beside email
spam and precompiled domain blacklists such as the
ones used in [3, 9, 8, 7]. Furthermore, differently
from the active probing approach used in previous
work [3, 9, 8, 7], we passively monitor live users’ trafﬁc
without interacting ourselves with the ﬂux networks.
Active probing of fast-ﬂux domain names [3, 9, 8, 7]
may be detected by the attacker, who often controls the
authoritative name servers responsible for responding to
DNS queries about her fast-ﬂux domain names. If the
attacker detects that an active probing system is trying to
track her malicious ﬂux service network, she may stop
responding to queries coming from the probing system
to prevent unveiling further information. On the other
hand, our detection system is able to detect ﬂux services
in a stealthy way.
We implemented a proof-of-concept version of our
detection system, and experimented with the RDNS
trafﬁc passively collected at two large ISP networks.
Overall, our sensors monitored more than 2.5 billion
DNS queries per day from milions of distinct source
IPs for a period of 45 days. Our experimental results
show that the proposed approach is able to accurately
distinguish between malicious ﬂux services and legiti-
mate CDNs or other legitimate services. Furthermore,
we show how the output of our passive detection and
tracking of malicious ﬂux networks may beneﬁt the
accuracy of spam ﬁltering applications.
II. DETECTING MALICIOUS FLUX NETWORKS
In this paper we focus on detecting malicious ﬂux
networks in-the-wild. We passively observe the RDNS
trafﬁc generated by a large user base, and we assume
that during their normal Internet experience some of
these users will (intentionally or unintentionally) request
malicious content served through a ﬂux network. In
practice, given the large user base we are able to
monitor, it is very likely that at least some of these
users will (unfortunately) fall victims of malicious web
content, and will therefore “click” on (and initiate DNS
312
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:12:17 UTC from IEEE Xplore.  Restrictions apply. 
queries about) ﬂux domain names. We aim to detect
such events, and track the ﬂux domain names and the
IP address of the related ﬂux agents contacted by the
victims in the monitored network. Since we perform
passive analysis and we monitor real users’ activities,
this allows us to stealthily detect and collect information
about “popular” malicious ﬂux networks on the Internet,
regardless of the method used by botmasters to advertise
the malicious content served by their ﬂux networks.
A. Characteristics of Flux Domain Names
Fast-ﬂux domains are characterized by the following
main features: a) short time-to-live (TTL); b) the set
of resolved IPs (i.e., the ﬂux agents) returned at each
query changes rapidly, usually after every TTL; c) the
overall set of resolved IPs obtained by querying the
same domain name over time is often very large; d)
the resolved IPs are scattered across many different
networks [12]. Some legitimate services, such as le-
gitimate CDNs, NTP server pools, IRC server pools,
etc., are served through sets of domain names that share
some similarities with fast-ﬂux domains. For example,
domains related to legitimate CDNs often have a very
low TTL and resolve to multiple IP addresses located in
different networks. Also, domains related to NTP server
pools use a very high number of IP addresses which
change periodically using a round-robin-like algorithm.
Although analyzing the value of each single feature
may not be enough to precisely identify malicious ﬂux
domains and distinguish them from legitimate domains,
in Section II-F we will discuss how using a combination
of features allows us to accurately separate ﬂux network
services from legitimate services.
B. System Overview
Figure 1 presents an overview of our malicious ﬂux
service detection system. For each RDNS sensor, we
monitor the sequence of DNS queries and responses
from/to the users’ machines for a predeﬁned period of
time, or epoch, E (e.g., one day). The amount of DNS
trafﬁc towards RDNS servers is often overwhelming,
even for medium- and small-size networks. Therefore,
our detection system ﬁrst applies a number of ﬁltering
rules to reduce the volume of trafﬁc to be analyzed.
Since we are only interested in ﬂux domain names and
their resolved IPs, the trafﬁc volume reduction ﬁlter F1
is responsible for identifying DNS queries that are most
likely related to ﬂux domains, while ﬁltering out queries
to domains that are very unlikely to be “ﬂuxing”. A list
L of candidate ﬂux domain names is kept in memory
and updated periodically. This list contains historic
information about candidate ﬂux domain names, namely
the maximum TTL ever seen for each domain name, the
set of resolved IPs extracted from the DNS responses
over time, etc. At the end of every period ∆T < E (e.g.,
∆T may be equal to a few hours), the list of candidate
ﬂux domain names is checked by ﬁlter F2 to verify
if they are still likely to be ﬂux domains, according
to the collected historic information. For example, F2
checks whether the set of resolved IPs returned by the
RDNS for a given domain name has grown during ∆T .
In fact, if a domain name was queried several times
during ∆T , but no new resolved IP was observed, it
is unlikely that the domain name is associated to a
malicious ﬂux service. On the other hand, if the set of
resolved IPs returned by the RDNS for a certain domain
name keeps changing after every TTL, the domain name
is considered a good candidate ﬂux domain. The domain
names that are found not to be likely ﬂux-related are
pruned from the list L.
At the end of each epoch E, the remaining candidate
ﬂux domains in L and related historic information
are transfered from the RDNS sensors to our Detec-
tor machine, where we perform further analysis. In
particular, in this phase we aim at clustering together
domain names related to the same service. We group
domains according to their resolved IP sets. Namely,
given two candidate ﬂux domain names, if their set
of resolved IPs collected during the epoch E intersect
(i.e., the two domain names share a signiﬁcant fraction
of resolved IPs), we consider the two domain names
as similar. Given this notion of IP-based similarity,
we apply a hierarchical clustering algorithm to group
domain names that are related to each other. In practice,
each of the obtained clusters represents a separate can-
didate ﬂux service network. It is worth noting that ﬁlter
F1 and F2 are very conservative. They will “accept”
domains related to malicious ﬂux services, but may also
accept a number of domains related to legitimate CDNs,
NTP pools, and other legitimate services that share
some technical similarities with malicious ﬂux service
networks. As a consequence, a cluster of domains may
represent a malicious ﬂux service, a legitimate CDN,
a pool of NTP servers, etc. Therefore, after clustering
each candidate ﬂux service network (i.e., each cluster of
domain names and the related resolved IPs) is given to a
service classiﬁer, which is trained to classify each clus-
ter into either malicious ﬂux service or legitimate/non-