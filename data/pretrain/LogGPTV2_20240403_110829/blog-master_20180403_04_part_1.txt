## PostgreSQL 11 preview - with_llvm JIT支持部署与试用
### 作者                                                               
digoal                                                               
### 日期                                                               
2018-04-03                                                            
### 标签                                                               
PostgreSQL , 操作符 , 计算 , deform , LLVM , JIT  
----                                                               
## 背景    
PostgreSQL 11 JIT，目前支持tuple deform（将磁盘上的tuple转换为内存中TUPLE格式），以及表达式（select, where, 等语义中的表达式，操作符运算，UDF等）的动态编译。  
对海量数据的计算（并且表达式或TUPLE DEFORM已成为瓶颈时）有加速效果。  
特别适合OLAP场景的大量数据的复杂计算。  
[《分析加速引擎黑科技 - LLVM、列存、多核并行、算子复用 大联姻 - 一起来开启PostgreSQL的百宝箱》](../201612/20161216_01.md)  
## 部署PostgreSQL 11 with LLVM  
参考  
[《PostgreSQL 10 + PostGIS + Sharding(pg_pathman) + MySQL(fdw外部表) on ECS 部署指南(适合新用户)》](../201710/20171018_01.md)    
以CentOS 7.x x64为例  
1、install epel  
```  
wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm    
rpm -ivh epel-release-latest-7.noarch.rpm     
```  
2、  
```  
yum install -y cmake3  
yum install -y python  
```  
3、LLVM  
```  
wget http://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz  
tar -xvf llvm-6.0.0.src.tar.xz  
```  
4、CLANG  
```  
wget http://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz  
tar -xvf cfe-6.0.0.src.tar.xz   
mv cfe-6.0.0.src clang  
mv clang llvm-6.0.0.src/tools  
```  
5、安装支持JIT的编译器llvm和clang  
```  
cd llvm-6.0.0.src  
mkdir mybuilddir  
cd mybuilddir  
alias cmake=cmake3  
export CXXFLAGS=-O2  
cmake ..  
cmake --build .  
cmake -DCMAKE_INSTALL_PREFIX=/usr/local/llvm6.0.0 -P cmake_install.cmake  
```  
6、编译PG with llvm  
```  
wget https://ftp.postgresql.org/pub/snapshot/dev/postgresql-snapshot.tar.bz2  
tar -jxvf postgresql-snapshot.tar.bz2   
cd postgresql-11devel  
```  
```  
CLANG=/usr/local/llvm6.0.0/bin/clang LLVM_CONFIG=/usr/local/llvm6.0.0/bin/llvm-config ./configure --prefix=/home/digoal/pgsql11_llvm --with-llvm --with-blocksize=32 --with-segsize=2  
make world -j 128  
make install-world  
```  
7、pg with llvm的目录结构  
bit code (二进制码)  
```  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> pwd  
/home/digoal/pgsql11_llvm/lib  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> ll llvmjit*  
-rwxr-xr-x 1 root root 709M Apr  4 06:58 llvmjit.so  
-rw-r--r-- 1 root root 7.8K Apr  4 06:58 llvmjit_types.bc  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> pwd  
/home/digoal/pgsql11_llvm/lib/bitcode  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> ll  
total 1.8M  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 adminpack  
-rw-r--r--  1 root root 1.4K Apr  4 06:58 adminpack.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 amcheck  
-rw-r--r--  1 root root 2.3K Apr  4 06:58 amcheck.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 auth_delay  
-rw-r--r--  1 root root  376 Apr  4 06:58 auth_delay.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 auto_explain  
-rw-r--r--  1 root root 1.7K Apr  4 06:58 auto_explain.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 autoinc  
-rw-r--r--  1 root root  528 Apr  4 06:58 autoinc.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 bloom  
-rw-r--r--  1 root root 1.8K Apr  4 06:58 bloom.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 btree_gin  
-rw-r--r--  1 root root 5.8K Apr  4 06:58 btree_gin.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 btree_gist  
-rw-r--r--  1 root root  20K Apr  4 06:58 btree_gist.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 citext  
-rw-r--r--  1 root root 1.3K Apr  4 06:58 citext.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 cube  
-rw-r--r--  1 root root 6.4K Apr  4 06:58 cube.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 dblink  
-rw-r--r--  1 root root 5.6K Apr  4 06:58 dblink.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 dict_int  
-rw-r--r--  1 root root  480 Apr  4 06:58 dict_int.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 dict_xsyn  
-rw-r--r--  1 root root  656 Apr  4 06:58 dict_xsyn.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 earthdistance  
-rw-r--r--  1 root root  280 Apr  4 06:58 earthdistance.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 file_fdw  
-rw-r--r--  1 root root 1.8K Apr  4 06:58 file_fdw.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 fuzzystrmatch  
-rw-r--r--  1 root root 5.7K Apr  4 06:58 fuzzystrmatch.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 hstore  
-rw-r--r--  1 root root 6.9K Apr  4 06:58 hstore.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 insert_username  
-rw-r--r--  1 root root  544 Apr  4 06:58 insert_username.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 _int  
-rw-r--r--  1 root root 6.9K Apr  4 06:58 _int.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 isn  
-rw-r--r--  1 root root  64K Apr  4 06:58 isn.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 lo  
-rw-r--r--  1 root root  432 Apr  4 06:58 lo.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 ltree  
-rw-r--r--  1 root root 7.4K Apr  4 06:58 ltree.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 moddatetime  
-rw-r--r--  1 root root  592 Apr  4 06:58 moddatetime.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pageinspect  
-rw-r--r--  1 root root 6.3K Apr  4 06:58 pageinspect.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 passwordcheck  
-rw-r--r--  1 root root  436 Apr  4 06:58 passwordcheck.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_buffercache  
-rw-r--r--  1 root root  660 Apr  4 06:58 pg_buffercache.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pgcrypto  
-rw-r--r--  1 root root  23K Apr  4 06:58 pgcrypto.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_freespacemap  
-rw-r--r--  1 root root  372 Apr  4 06:58 pg_freespacemap.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_prewarm  
-rw-r--r--  1 root root 2.6K Apr  4 06:58 pg_prewarm.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pgrowlocks  
-rw-r--r--  1 root root  968 Apr  4 06:58 pgrowlocks.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_stat_statements  
-rw-r--r--  1 root root 3.1K Apr  4 06:58 pg_stat_statements.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pgstattuple  
-rw-r--r--  1 root root 3.3K Apr  4 06:58 pgstattuple.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_trgm  
-rw-r--r--  1 root root 4.1K Apr  4 06:58 pg_trgm.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 pg_visibility  
-rw-r--r--  1 root root 1.1K Apr  4 06:58 pg_visibility.index.bc  
drwxr-xr-x 25 root root 4.0K Apr  4 06:58 postgres  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 postgres_fdw  
-rw-r--r--  1 root root  12K Apr  4 06:58 postgres_fdw.index.bc  
-rw-r--r--  1 root root 1.3M Apr  4 06:58 postgres.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 refint  
-rw-r--r--  1 root root 1.9K Apr  4 06:58 refint.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 seg  
-rw-r--r--  1 root root 5.2K Apr  4 06:58 seg.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 tablefunc  
-rw-r--r--  1 root root 2.1K Apr  4 06:58 tablefunc.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 tcn  
-rw-r--r--  1 root root  584 Apr  4 06:58 tcn.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 test_decoding  
-rw-r--r--  1 root root 1.5K Apr  4 06:58 test_decoding.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 timetravel  
-rw-r--r--  1 root root 1.2K Apr  4 06:58 timetravel.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 tsm_system_rows  
-rw-r--r--  1 root root  524 Apr  4 06:58 tsm_system_rows.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 tsm_system_time  
-rw-r--r--  1 root root  524 Apr  4 06:58 tsm_system_time.index.bc  
drwxr-xr-x  2 root root 4.0K Apr  4 06:58 unaccent  
-rw-r--r--  1 root root  844 Apr  4 06:58 unaccent.index.bc  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> cd unaccent  
digoal@iZbp13nu0s9j3x3op4zpd4Z-> ll  
total 16K  
-rw-r--r-- 1 root root 15K Apr  4 06:58 unaccent.bc  
```  
7\.1、使用llvm-bcanalyzer观察bc的内容   
```
cd /home/digoal/pgsql11_llvm/lib/bitcode/postgres/access/heap
/usr/local/llvm6.0.0/bin/llvm-bcanalyzer ./heapam.bc 
Summary of ./heapam.bc:
         Total size: 1459456b/182432.00B/45608W
        Stream type: LLVM IR
  # Toplevel Blocks: 4
Per-block Summary:
  Block ID #0 (BLOCKINFO_BLOCK):
      Num Instances: 1
         Total Size: 672b/84.00B/21W
    Percent of file: 0.0460%
      Num SubBlocks: 0
        Num Abbrevs: 16
        Num Records: 3
    Percent Abbrevs: 0.0000%
        Record Histogram:
                  Count    # Bits     b/Rec   % Abv  Record Kind
                      3        60      20.0          SETBID
  Block ID #8 (MODULE_BLOCK):
      Num Instances: 1
         Total Size: 44789b/5598.62B/1399W
    Percent of file: 3.0689%
      Num SubBlocks: 79
        Num Abbrevs: 3
        Num Records: 317
    Percent Abbrevs: 1.5773%
        Record Histogram:
                  Count    # Bits     b/Rec   % Abv  Record Kind
                    222     31488     141.8          FUNCTION
                     89     11128     125.0    3.37  GLOBALVAR
                      1       207                    HASH
                      1        57            100.00  SOURCE_FILENAME
                      1        35            100.00  VSTOFFSET
                      1       465                    DATALAYOUT
                      1       303                    TRIPLE
                      1        21                    VERSION
......