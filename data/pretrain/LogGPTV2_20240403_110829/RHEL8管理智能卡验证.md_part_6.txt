        如果输入文件包含一个 Active Directory 证书，命令的输出会显示使用
        `域组件`{.literal} 信息定义了发行者：
        ``` literallayout
        # openssl x509 -noout -issuer -in ad_user.crt -nameopt RFC2253
        issuer=CN=AD-WIN2012R2-CA,DC=AD,DC=EXAMPLE,DC=COM
        ```
    :::
2.  另外，要根据匹配规则在 CLI
    中创建一个新的映射规则，指定证书签发者必须是
    `ad.example.com`{.literal} 域的提取
    `AD-WIN2012R2-CA`{.literal}，证书上的主题必须与 IdM 中的用户帐户中的
    `certmapdata`{.literal} 条目匹配：
    ``` literallayout
    # ipa certmaprule-add simple_rule --matchrule 'CN=AD-WIN2012R2-CA,DC=AD,DC=EXAMPLE,DC=COM' --maprule '(ipacertmapdata=X509:{issuer_dn!nss_x500}{subject_dn!nss_x500})'
    ```
:::
## []{#_certificate_mapping_rules_for_configuring_authentication_on_smart_cards.html#_additional_information}附加信息
有关匹配规则和映射规则支持的格式，以及优先级和域字段的说明，请查看
`sss-certmap(5)`{.literal} man page。
:::
:::
[]{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html}
::: chapter
::: titlepage
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication}第 4 章 配置和导入本地证书到智能卡 {.title}
:::
本章描述了以下情况：
::: itemizedlist
-   主机没有连接到某个域。
-   您需要在这个主机上使用智能卡进行验证。
-   您需要使用智能卡验证配置 SSH 访问。
-   您需要使用 `authselect`{.literal} 配置智能卡。
:::
使用以下配置来实现这种情况：
::: itemizedlist
-   为希望使用智能卡进行身份验证的用户获取用户证书。证书应该由在域中使用的可信认证认证机构生成。
    如果您无法获得证书，您可以生成由本地证书颁发机构签名的用户证书用于测试。
-   在智能卡中保存证书和私钥。
-   为 SSH 访问配置智能卡验证。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
如果主机可以作为域的一部分，将主机添加到域中，并使用活动目录或者身份管理认证机构生成的证书。
有关如何为智能卡创建 IdM
证书的详情，请参考[为智能卡验证配置身份管理](#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html "第 1 章 为智能卡验证配置身份管理"){.link}。
:::
::: itemizedlist
**先决条件**
-   已安装 authselect
    authselect 工具在 Linux
    主机中配置用户验证，您可以使用它配置智能卡验证参数。有关 authselect
    的详情，请参考[浏览
    authselect](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_authentication_and_authorization_in_rhel/configuring-user-authentication-using-authselect_configuring-authentication-and-authorization-in-rhel#what-is-authselect-used-for_configuring-user-authentication-using-authselect){.link}。
-   RHEL 8 支持的智能卡或者 USB 设备
    详情请参阅 [RHEL8
    中的智能卡支持](https://access.redhat.com/articles/4253861){.link}。
:::
::: section
::: titlepage
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#creating-local-certificates_configuring-and-importing-local-certificates-to-a-smart-card}创建本地证书 {.title}
:::
本节论述了如何执行这些任务：
::: itemizedlist
-   生成 OpenSSL 证书颁发机构
-   创建证书签名请求
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
以下步骤仅用于测试目的。本地自签名证书认证机构使用 AD、IdM 或 RHCS
认证认证机构生成的证书并不像使用 AD、IdM 或 RHCS
认证机构一样安全。即使主机不是域的一部分，您仍应使用企业认证认证机构生成的证书。
:::
::: orderedlist
**流程**
1.  创建可生成证书的目录，例如：
    ``` literallayout
    # mkdir /tmp/ca
    # cd /tmp/ca
    ```
2.  设置证书（将此文本复制到 `ca`{.literal} 目录中的命令行）：
    ``` literallayout
    cat > ca.cnf  serial
    ```
    该命令在串行文件中写入数字 01。它是证书的序列号。当这个 CA
    发布一个新证书时这个数字会加一。
6.  创建一个 OpenSSL root CA 密钥：
    ``` literallayout
    # openssl genrsa -out rootCA.key 2048
    ```
7.  创建自签名 root 认证认证机构证书：
    ``` literallayout
    # openssl req -batch -config ca.cnf \
        -x509 -new -nodes -key rootCA.key -sha256 -days 10000 \
        -set_serial 0 -extensions v3_ca -out rootCA.crt
    ```
8.  为您的用户名创建密钥：
    ``` literallayout
    # openssl genrsa -out example.user.key 2048
    ```
    这个密钥是在本地系统中生成的，因此当密钥保存在卡中时，从系统中删除密钥。
    您还可以直接在智能卡中创建密钥。要做到这一点，请遵循智能卡生产商生成的说明。
9.  创建证书签名请求配置文件（将这个文本复制到 ca 目录中的命令行中）:
    ``` literallayout
    cat > req.cnf 
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#proc_copying-certificate-to-the-sssd-directory_configuring-and-importing-local-certificates-to-a-smart-card}将证书复制到 SSSD 目录中 {.title}
:::
GNOME 桌面管理器(GDM)需要 SSSD.如果使用 GDM，则需要将 PEM 证书复制到
`/etc/sssd/pki`{.literal} 目录中。
::: itemizedlist
**先决条件**
-   已生成本地 CA 颁发机构和证书
:::
::: orderedlist
**流程**
1.  确保已在系统中安装了 SSSD。
    ``` literallayout
    # rpm -q sssd
    sssd-2.0.0.43.el8_0.3.x86_64
    ```
2.  创建 `/etc/sssd/pki`{.literal} 目录：
    ``` literallayout
    # file /etc/sssd/pki
    /etc/sssd/pki/: directory
    ```
3.  将 `rootCA.crt`{.literal} 作为 PEM 文件复制到
    `/etc/sssd/pki/`{.literal} 目录中：
    ``` literallayout
    # cp /tmp/ca/rootCA.crt /etc/sssd/pki/sssd_auth_ca_db.pem
    ```
:::
现在，您已成功生成了证书颁发机构和证书，并将它们保存到
`/etc/sssd/pki`{.literal} 目录中。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果要与另一个应用程序共享证书颁发机构证书，您可以在 sssd.conf
中更改位置：
::: itemizedlist
-   SSSD PAM 响应器 `：[pam]`{.literal} 部分中的
    `pam_cert_db_path`{.literal}
-   SSSD ssh 响应器 `：[ssh]`{.literal} 部分中的 `ca_db`{.literal}
:::
详情请查看 `sssd.conf`{.literal} 的 man page。
红帽建议保留默认路径，并使用 SSSD
的专用证书颁发机构证书文件来确保此处只列出可信证书颁发机构。
:::
:::
::: section
::: titlepage
# []{#configuring-and-importing-local-certificates-to-a-smart-card_managing-smart-card-authentication.html#installing-tools-for-managing-and-using-smart-cards_configuring-and-importing-local-certificates-to-a-smart-card}安装用来管理和使用智能卡的工具 {.title}
:::
要配置智能卡，您需要一些工具来生成证书并将其保存在智能卡中。