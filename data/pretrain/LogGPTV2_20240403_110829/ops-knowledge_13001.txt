User: 如何使用Ansible进行自动化部署？请提供相关配置文件和操作步骤。
Assistant: Ansible 是一种自动化部署工具，可以通过 SSH 远程配置管理，能够自动化地完成诸如配置管理、自动化部署、系统编排等任务，简化了分布式应用的部署和管理工作。

下面是如何使用 Ansible 进行自动化部署的操作步骤。

1. 安装 Ansible

```
sudo apt update
sudo apt install ansible
```

2. 配置 Ansible

编辑 `/etc/ansible/hosts` 文件，加入需要管理的主机 IP 地址。

```
sudo vi /etc/ansible/hosts

[web]
192.168.1.10
192.168.1.11

[db]
192.168.1.12
```

3. 创建 Ansible playbook

创建一个 `.yml` 的 playbook 文件，定义需要执行的任务。

```
sudo mkdir /etc/ansible/playbooks
sudo vi /etc/ansible/playbooks/web.yml

---
- name: Configure Web Server
  hosts: web
  become: true

  tasks:
    - name: Update apt cache
      apt: update_cache=yes

    - name: Install Nginx
      apt: name=nginx state=present

    - name: Create index.html
      copy: content="<h1>Welcome to My Website</h1>" dest=/var/www/html/index.html mode=0644
```

4. 运行 Ansible playbook

使用 ansible-playbook 命令运行 playbook 文件。

```
sudo ansible-playbook /etc/ansible/playbooks/web.yml
```

执行以上命令后，Ansible 会远程连接主机，执行相应的任务，完成部署。

另外，可以在 playbook 文件中使用一些变量，更方便地管理不同环境下的主机。例如：

```
sudo vi /etc/ansible/playbooks/config.yml

---
- name: Configure System
  hosts: "{{ target }}"
  become: true

  vars:
    web_servers:
      - 192.168.1.10
      - 192.168.1.11
    db_servers:
      - 192.168.1.12

  tasks:
    - name: Update apt cache
      apt: update_cache=yes

    - name: Install Nginx
      apt: name=nginx state=present
      when: inventory_hostname in web_servers

    - name: Install MySQL
      apt: name=mysql-server state=present
      when: inventory_hostname in db_servers
```

在运行 ansible-playbook 命令时，通过 `-e` 选项指定需部署主机的变量。

```
sudo ansible-playbook /etc/ansible/playbooks/config.yml -e target=web
```