title:Deja Vu-A User Study: Using Images for Authentication
author:Rachna Dhamija and
Adrian Perrig
USENIX Association
Proceedings of the
9th USENIX Security Symposium
Denver, Colorado, USA
August 14 –17, 2000
THE ADVANCED COMPUTING SYSTEMS ASSOCIATION
© 2000 by The USENIX Association
Phone: 1 510 528 8649
FAX: 1 510 548 5738
All Rights Reserved
Email: PI:EMAIL
For more information about the USENIX Association:
WWW: http://www.usenix.org
Rights to individual papers remain with the author or the author's employer.
 Permission is granted for noncommercial reproduction of the work for educational or research purposes.
This copyright notice must be included in the reproduced paper. USENIX acknowledges all trademarks herein.
D´ej`a Vu: A User Study
Using Images for Authentication 
Rachna Dhamija
Adrian Perrig
PI:EMAIL
PI:EMAIL
SIMS / CS, University of California Berkeley
Abstract
1 Introduction
Current secure systems suffer because they neglect the
importance of human factors in security. We address
a fundamental weakness of knowledge-based authenti-
cation schemes, which is the human limitation to re-
member secure passwords. Our approach to improve the
security of these systems relies on recognition-based,
rather than recall-based authentication. We examine the
requirements of a recognition-based authentication sys-
tem and propose D´ej`a Vu, which authenticates a user
through her ability to recognize previously seen images.
D´ej`a Vu is more reliable and easier to use than tradi-
tional recall-based schemes, which require the user to
precisely recall passwords or PINs. Furthermore, it has
the advantage that it prevents users from choosing weak
passwords and makes it difﬁcult to write down or share
passwords with others.
We develop a prototype of D´ej`a Vu and conduct a user
study that compares it to traditional password and PIN
authentication. Our user study shows that 90% of all
participants succeeded in the authentication tests using
D´ej`a Vu while only about 70% succeeded using pass-
words and PINS. Our ﬁndings indicate that D´ej`a Vu has
potential applications, especially where text input is hard
(e.g., PDAs or ATMs), or in situations where passwords
are infrequently used (e.g., web site passwords).
Keywords: Human factors in security, hash visual-
ization, user authentication through image recognition,
recognition-based authentication.
This publication was supported in part by Contract Number
102590-98-C-3513 from the United States Postal Service. The con-
tents of this publication are solely the responsibility of the author and
do not necessarily reﬂect the ofﬁcial views of the United States Postal
Service.
User authentication is a central component of currently
deployed security infrastructures. We distinguish three
main techniques for user authentication: Knowledge-
based systems, token-based systems, and systems based
on biometrics.
In today’s security systems, knowledge-based schemes
are predominantly used for user authentication. Al-
though biometrics can be useful for user identiﬁcation,
one problem with these systems is the difﬁcult tradeoff
between impostor pass rate and false alarm rate [DP89].
In addition, many biometric systems require specialized
devices, and some can be unpleasant to use.
Most
token-based authentication systems also use
knowledge-based authentication to prevent imperson-
ation through theft or loss of the token. An example is
ATM authentication, which requires a combination of a
token (a bank card) and secret knowledge (a PIN).
For these reasons, knowledge-based techniques are cur-
rently the most frequently used method for user authen-
tication. In this paper we focus on authentication based
on passwords or PINs.
Despite their wide usage, passwords and PINs have a
number of shortcomings. Simple or meaningful pass-
words are easier to remember, but are vulnerable to at-
tack. Passwords that are complex and arbitrary are more
secure, but are difﬁcult to remember. Since users can
only remember a limited number of passwords, they tend
to write them down or will use similar or even identical
passwords for different purposes.
One approach to improve user authentication systems is
to replace the precise recall of a password or PIN with
the recognition of a previously seen image, a skill at
which humans are remarkably proﬁcient. In general, it
is much easier to recognize something than to recall the
same information from memory without help [Nie93].
Classic cognitive science experiments show that humans
have a vast, almost limitless memory for pictures in
particular [Hab70, SCH70]. In fact, experiments show
that we can remember and recognize hundreds to thou-
sands of pictures in fractions of a second of perception
[Int80, PC69]. By replacing precise recall of the pass-
word with image recognition, we can minimize the users
cognitive load, help the user to make fewer mistakes and
provide a more pleasant experience.
The basic concepts of recognition-based authentication
are described by Perrig and Song [PS99].
In this pa-
per, however, we explore the user authentication aspects
more thoroughly, design the D´ej`a Vu system, and make
the following contributions. First, we perform user stud-
ies of a prototype system to validate and improve our
image-based user authentication system. Second, we
analyze the security of D´ej`a Vu, discuss possible real-
world attacks and illustrate countermeasures.
In the next section we enumerate the shortcomings of
password-based authentication. In section 3, we discuss
our approach of recognition-based authentication and in-
troduce our solution, D´ej`a Vu. In section 4, we describe
a user study that compares D´ej`a Vu to traditional au-
thentication methods, and we summarize our ﬁndings.
Finally, we discuss related work in section 5 and present
our conclusions and future work in section 6.
2 Shortcomings of Password-Based Au-
thentication
In this section, we enumerate the problems of password-
based authentication, which we address with our work
in section 3.
Password and PIN-based user authentication have nu-
merous deﬁciencies. Unfortunately, many security sys-
tems are designed such that security relies entirely on a
secret password. Cheswick and Bellovin point out that
weak passwords are the most common cause for system
break-ins [CB94].
The main weakness of knowledge-based authentication
is that it relies on precise recall of the secret informa-
tion. If the user makes a small error in entering the se-
cret, the authentication fails. Unfortunately, precise re-
call is not a strong point of human cognition. People are
much better at imprecise recall, particularly in recogni-
tion of previously experienced stimuli [Int80, PC69].
The human limitation of precise recall is in direct con-
ﬂict with the requirements of strong passwords. Many
researchers show that people pick easy to guess pass-
words. For example, an early study by Morris and
Thompson on password security found that over 15% of
users picked passwords shorter or equal to three char-
acters [MT79]. Furthermore, they found that 85% of
all passwords could be trivially broken through a sim-
ple exhaustive search to ﬁnd short passwords and by us-
ing a dictionary to ﬁnd longer ones. They describe an
effort to counteract poor passwords, which consists of
issuing random pronounceable passwords to users. Un-
fortunately, the random number generator only had 2 15
distinct seeds, and hence the resulting space of “random”
passwords could be searched quickly. Klein conducted
a wide-reaching study of password security in 1989 and
notes that 25% of all passwords can be broken with a
small dictionary [Kle90].
Other notable efforts to design password crackers were
conducted by Feldmeier and Karn [FK89] and Muffett
[Muf92]. Because of these password cracker programs,
users need to create unpredictable passwords, which are
more difﬁcult to memorize. As a result, users often write
their passwords down and “hide” them close to their
work space. Strict password policies, such as forcing
users to change passwords periodically, only increase the
number of users who write them down to aid memora-
bility.
As companies try to increase the security of their IT in-
frastructure, the number of password protected areas is
growing. Simultaneously, the number of Internet sites
which require a username and password combination is
also increasing. To cope with this, users employ similar
or identical passwords for different purposes, which re-
duces the security of the password to that of the weakest
link.
Another problem with passwords is that they are easy to
write down and to share with others. Some users have no
qualms about revealing their passwords to others; they
view this as a feature and not as a risk, as we ﬁnd in the
user study discussed in section 4.
The majority of solutions to the problems of weak pass-
words fall into three main categories. The ﬁrst types
of solutions are proactive security measures that aim to
identify weak passwords before they are broken by con-
stantly running a password cracking programs [MT79,
FK89]. The second type of solution is also technical in
nature, which utilizes techniques to increase the compu-
tational overhead of cracking passwords [Man96]. The
third class of solutions involves user training and educa-
tion to raise security awareness and establishing security
guidelines and rules for users to follow [AS99, Bel93].
Note that all three classes of solutions do not remedy the
main cause of password insecurity, which is the human
limitation of memory for secure passwords. In fact, most
previously proposed schemes for knowledge-based user
authentication rely on perfect memorization. One ex-
ception is the work of Ellsion et al. , which describes a
knowledge based authentication mechanism that can tol-
erate user memory errors [EHMS99]. We discuss these
schemes in detail in section 5.
3 D´ej`a Vu
In this section, we present a solution to address the short-
comings of passwords discussed in the previous section.
In particular, we aim to satisfy the following require-
ments:
(cid:15) The system should not rely on precise recall. In-
stead, it should be based on recognition, to make
the authentication task more reliable and easier for
the user.
(cid:15) The system should prevent users from choosing
weak passwords.
(cid:15) The system should make it difﬁcult to write pass-
words down and to share them with others.
D´ej`a Vu has three phases: portfolio creation, training,
and authentication.
Portfolio Creation Phase
To set up a D´ej`a Vu image portfolio, the user selects a
speciﬁc number of images from a larger set of images
presented by a server. Figure 2 shows the image selec-
tion phase in our prototype.
The type of images used has a strong inﬂuence on the se-
curity of the system. For example, if the system is based
on photographs, it would be easy for users to pick pre-
dictable portfolios, to describe their portfolio images and
to write down this information and share it with others.
For this reason, we use Andrej Bauer’s Random Art to
generate random abstract images [Bau98]. Given an ini-
tial seed, Random Art generates a random mathematical
formula which deﬁnes the color value for each pixel on
the image plane. The image generation process is deter-
ministic and the image depends only on the initial seed.
It is therefore not necessary to store the images pixel-by-
pixel, since the image can be computed quickly from the
seed. All images are hand-selected to ensure consistent
quality.1
Figure 1 illustrates sample Random Art images and ap-
pendix A discusses Random Art in more detail. Other
methods exist for automatically synthesizing images
[Sim91]. We did not explore these and leave this as an
area for future study.
3.1 System Architecture
Training Phase
We propose D´ej`a Vu as a system for user authentication.
D´ej`a Vu is based on the observation that people have
an excellent memory for images [Hab70, SCH70, Int80,
PC69].
Using D´ej`a Vu, the user creates an image portfolio, by
selecting a subset of  images out of a set of sample
images. To authenticate the user, the system presents
a challenge set, consisting of  images. This challenge
contains  images out of the portfolio. We call the re-
maining     images decoy images. To authenticate,
the user must correctly identify the images which are
part of her portfolio.
After the portfolio selection phase, we use a short train-
ing phase to improve the memorability of the portfolio
images. During training, the user points out the pictures
in her portfolio from a challenge set containing decoy
images. The selection and the training phase need to oc-
cur in a secure environment, such that no other person
can see the image portfolio.
1From our experience, about 70% of all generated Random Art im-
ages are aesthetically interesting and are therefore suited for usage in
D´ej`a Vu. The remaining 30% are either too simplistic or fall into a
class of images which are frequently generated and visually similar.
Since we desire visually distinguishable images in the portfolio and
the decoy set, we currently ﬁlter out weak images through hand selec-
tion.
Figure 1: Examples of Random Art images
Authentication Phase
A trusted server stores all portfolio images for each user.
Since each image is derived directly from the seed, the
server only needs to store the seed and not the entire
image. In our prototype implementation, the seed is 8
bytes long, hence the storage overhead for each portfolio
is small. For each authentication challenge, the server
creates a challenge set, which consists of portfolio and
decoy images. If the user correctly identiﬁes all portfolio
images, she is authenticated.
In general, a weakness of this system is that the server
needs to store the seeds of the portfolio images of each
user in cleartext. Tricks similar to the hashed passwords
in the /etc/passwd ﬁle do not work in this case, be-
cause the server needs to present the portfolio to the user,
hidden within the decoy images. For this reason, we
assume the server to be secure and trusted, similar to
Kerberos [SNS88]. To reduce the trust required from
each server, the portfolio can be to split among multi-
ple servers, and each server can contribute a part of the
challenge set for each authentication.
3.2 Attacks and Countermeasures
We identify a number of possible attacks which serve to
impersonate the user. In the following scenarios, Mal-
lory is an attacker who wants to impersonate Alice.
Brute-force attack. Mallory attempts to impersonate
Alice by picking random images in the challenge set,
hoping that they are part of Alice’s portfolio. The prob-
, which depends
ability that Mallory succeeds is 1=  
on the choice of , the number of images in the chal-
lenge set, and , the number of portfolio images shown.
For example, for  = 20 and  = 5, we get 1= 20
5  =
1=15504, which is equivalent to a four-digit PIN. To pre-
vent brute-force attacks, the system may deny access af-
ter a small number of trials.
Educated Guess Attack. If Mallory knows Alice’s taste
in images he might be able predict which images are in
Alice’s portfolio.
Our ﬁrst countermeasure is to use Random Art, which
makes it hard for Mallory to predict Alice’s portfolio im-
ages, even if he knows her preferences. Our user study
shows that if photographs are used instead of Random
Art, it is easier to predict some portfolio images chosen
by Alice, given some knowledge about her.
Since users tend to pick the most aesthetically appealing
pictures for their portfolios, it will be clear which im-
ages in the challenge set are the portfolio images if they
are not all equally appealing. We therefore hand select
images to ensure that no weak images are used. (We call
images weak, if no user would select them for their port-
folio). Hand selecting images is not a drawback, since a
D´ej`a Vu system can function with a ﬁxed set of images,
on the order of 10,000 images.
Figure 2: Portfolio selection window
Observer Attacks. Ross Anderson shows that observa-
tion of PIN codes on ATMs has been used to imperson-
ate users [And94]. Similarly, if Mallory observes Al-
ice during multiple authentications, he can know Alice’s
portfolio perfectly. We propose the following counter-
measures.
(cid:15) If the size of Alice’s portfolio  is larger than the
number of portfolio images in a challenge set ,
the probability that an observer sees the same port-
. Al-
folio images after one observation is 1=  
though the security is still weakened after an ob-
server learns images in a portfolio, an observer still
can not impersonate Alice easily.
Assuming that the images are displayed in a way
that only Alice can see them clearly, the observer
gains no knowledge of the portfolio by observing
which images she selects, since the position of the
portfolio images within the challenge set is ran-
domized.
(cid:15) The method for the image selection is hidden, such
that an observer cannot see whether a given image
is in the portfolio or not. If the observer cannot see
which keys are pressed or can not determine which
images are selected, he gets no useful information.
(cid:15) The portfolio images can be slightly changed in
each authentication. The goal is that a legitimate
user can still recognize her portfolio images, while
leaking less information about the portfolio to an
observer. Further study is needed to explore image
distortion methods and to determine how modiﬁca-
tions in images are perceived by users.
Intersection Attack. If all the portfolio images are part
of the challenge set, and all decoy images are changed in
each challenge, Mallory can use the intersection of two
challenge sets to reveal the portfolio. This is a serious
problem, but we can design a system which can resist
this attack through the following countermeasures.
after an unsuccessful attempt, the system can then re-
place the previously discarded portfolio images and per-
form a training phase with the images the user forgot.
(cid:15) The same challenge set (portfolio images and de-
coy images) is always presented to the user. If it
remains the same, an intersection attack does not
reveal any useful information. The drawback, how-
ever, is that since the decoy images remain the same
across many login sessions, Alice might start to re-
member decoy images and ﬂag them as portfolio
images in future authentication sessions. Future
study is needed to see if this is the case.
(cid:15) A small number of decoy images remain in the
challenge set over multiple authentications. Again,
the problem with this approach is that users may
learn a decoy image if it is repeated enough times
and then mistake it for a portfolio image.
(cid:15) The authentication can be split up into multiple
stages. Each stage presents a challenge set with
a random number of portfolio images.
If a user
makes a mistake in any stage, all subsequent stages
will only display decoy images without any portfo-
lio images. This prevents an adversary from per-
forming repeated impersonation attacks to discover
the entire portfolio.
(cid:15) We ﬁnd in the user study that the failure rate is
much lower for D´ej`a Vu than for password or PIN-
based systems. This increased accuracy allows us
to tighten the bound on unsuccessful logins before
the account is blocked. This, however, opens the