while（i=l;i--)print i)' test.txt
'BEGIN (for（i=l;i(if（NF==1) (getline;print $3};if(NF==6） print $4)
[root@centos6 ~]# df -h lawk'BEGIN
tmpfs
/dev/mapper/Vo1Group00-LogVo100
Filesystem
[root@centos6~]#df-h
（5）getline函数
none
[root@centos6~]#awk'(print length()}'test.txt
显示test.txt文档每行的字符长度：
作用：计算并返回字串z的长度
(4）length(z)函数
/dev/sda1
SizeUsed Avail Use%Mounted on
140M
141M
99M
19G
104K
3.6G
14M
140M
141M
(getline;print $3);if(NF==6) print $4)'
81M
15G
{print "Disk Free:"}
15%
21%/
1%/var/lib/xenstored
0%
/dev/shm
/boot
第3章
自动化运维
145
---
## Page 162
脚本程序的三种不同方式。
本的执行可以有很多种方式，而且各种方式运行的效果也不尽相同，下面我们来分别看看运行
制执行顺序时例外。
助信息。接下来就是脚本的代码部分，这些代码默认会按顺序依次被执行，但通过控制语句控
面的部分为注释，在脚本程序执行时，该部分会被忽略，这些注释为代码的编写与阅读提供辅
统内核读取#后面的路径查找解释器，最终使用该解释器翻译脚本代码并运行。脚本文件中#后
一行#!的作用是指定该脚本程序的命令解释器，例子中是/bin/bash。也就是说，脚本执行后，
件/root/print.sh，脚本内容如下：
我们来看一个完整的Shell脚本，分析其格式风格。第一个例子是Hellotheworld，创建脚本文
从而提高工作效率和生产效率。
可。本节我们就来看看如何编写一些基本的Shell脚本程序，最终实现运维工作自动化、智能化，
其进行修改，使得工作中查看、编辑、审核脚本内容变得非常容易，只需要一款文本编辑器即
写属于自己的脚本，而且脚本一般都以文本文档格式存在，我们可以使用任何文本编辑工具对
另外，脚本的优势在于简单（易学易用），很多人都可以很快完成对脚本的学习，并迅速上手编
Linux 运维之道
3.9.2
3.9.1脚本格式范例
146
脚本编写完成后，我们需要运行并实现脚本程序的功能，那么如何执行脚本呢？其实，脚
在Hello the world的例子中，我们给出了一个相对完善的脚本所应该具有的基本框架。
每一个完善的脚本都要遵循一些既定的规则，Shell脚本也一样，有自己独特的格式，下面
[root@centos6~]# chmod a+x print.sh
exit0
echo"Hellotheworld"
#!/bin/bash
．赋予权限，直接运行脚本
Copyright @ 2012, Jacob Publish Press. All rights reserved.
Date:2012-12-12
运行脚本的方式
系
第
---
## Page 163
处理，因为英文单词与单词之间总存在空格，这样脚本第一步才可以将整篇文档处理为一行一
分钟就可完成编写，效率相当高，该程序使用Shell脚本编写。但该脚本并不适合于中文文档的
费的时间与程序效率尚需考虑，同时贝尔实验室的DougMcllroy提供了一个六步解决方案，几
果中显示这些单词出现的次数，最后按次数排序。很多人花费了大量的时间解决该问题，但花
Pearls，Jon在专栏中提出了一个问题：写一个程序，找出n个出现最频繁的单词，并在输出结
通过对比《红楼梦》前八十回与后四十回的用词频率，看是否相同，词频类似于文章的指纹。
新颖的方式，就是统计小说的用词频率，即一般人写作总有自己的风格、习惯用语。所以有人
载，增删五次，纂成目录，分出章回”。而在这些证明《红楼梦》作者的方法中，有一种是比较
是曹雪芹，高鄂只是续写者。《红楼梦》第一回正文中提到，此书经“曹雪芹于悼红轩中披阅十
源，目前没有一种说法是十全十美的。仅目前，红学界公认的普遍观点是《红楼梦》的原作者
所著，另一种说法是《红楼梦》前八十回为曹雪芹著，后四十回为程伟元与高鹦著。但追究根
通过.或source方式执行脚本，则脚本将在用户当前Shell环境中运行。
时系统将不再关心#!后面的解释器，而是直接使用bash或sh作为解释器解释脚本内容并执行；
的子进程，并在子进程的环境中运行脚本程序；通过bash或 sh命令加载脚本文件并执行，此
3.9.3Shell脚本简单案例
无独有偶，1983年到1987年，贝尔实验室的JonBentley发表了有趣的系列专栏Programming
各有各的论点与论据。其中比较靠谱的有两种说法，一种说法是《红楼梦》全书为曹雪芹
我国的红学研究界一直以来都在为谁是《红楼梦》一书的作者争论不已，每个人的论点不
案例1：使用脚本计算《红楼梦》一书的作者
不同执行方式的区别在于，赋予脚本权限后直接运行脚本将在用户当前Shell下开启一个新
3.没有权限，通过.或 source 运行脚本
2.没有权限，通过bash 或sh 运行脚本
[root@centos6~]#sourceprint.sh
[root@centos6 ~]# sh print.sh
[root@centos6~]# bash print.sh
[root@centos6~]#./print.sh
[root@centos6~]#/root/print.sh
#.与脚本之间有空格
#调用 sh程序解释脚本内容并执行
#调用bash程序解释脚本内容并执行
#通过相对路径执行脚本
#通过绝对路径执行脚本
真8
自动化运维
147
---
## Page 164
计算后将显示词频最高的30个汉字，下面仅给出前十五个汉字的对比数据。
在3.9.5节有详细的解释与案例。
格式排序，如果第一列的词频相同，则按后面的字符继续排序。此外，关于for循环语句，将
复的字符且显示字符出现的个数；sort-kl,ln-k2 按第一列排序（按词频排序），n表示以数字
于上面的案例，在此改写了一份脚本用以处理中文，脚本内容如下。
个单词继，而通过排序求词频，这是前提。但中文的汉字与汉字之间是不存在空格的，所以基
Linux运维之道
148
3945
4008
4024
4081
4148
8541—
下面的对比数据是使用该脚本计算《红楼梦》前八十回与后四十回文章词频的结果，脚本
5104
脚本说明：这里假设屏幕每行可以输出 80个汉字，sort命令对文档排序；uniq-c去除重
5359
5417
6231
6299
6377
6715
7197
7376
vimdiff oneresult tworesult
rm -rf one.txt two.txt onebak.tmp twobak.tmp
grep
grep
done
do
for iin{1..80}
#!/bin/bash
cut
王
儿
也
个
你
这
他
是
我
人
来
"[[:alnum:]]"one.txt>
说
道
t-c$i$1>>one.txt
-c$i $2 >>two.txt
2046
2065
2066
2138
2203
2245
2382
2741
3392
3474
3649
3942来
2378
3741
3758
一有
儿
贾
他
着
这
我
说
人
是
道
onebak.tmp
-30 >tworesult
-30>oneresult
---
## Page 165
更加完善的脚本以供参考，脚本内容如下。
用，如果需要在生产环境中使用类似功能的脚本，还需要稍作处理与优化，在后续章节中会有
搜集，该脚本没有对输出信息做任何设计与排版处理，仅仅作为脚本文件基本格式讲解示例使
色设置，也就是后续的输出不再使用红色输出。
色，1为样式与前景色，31为字体颜色，这里使用红色输出Menu后再次使用N033[0m来关闭颜
命令实现菜单内容的输出。另外，echo使用-e选项开启转义功能，通过V033[1；31m可以输出颜
与用词习惯应该是相同的。
前后章节所使用的频率最高的汉字中有大量的重叠。也就是说，前八十回与后四十回写作风格
echo $(uptime)
echo "Display CPU info:"
为了说明脚本的基本格式，这里使用最简单的命令堆积的方式实现计算机系统基本信息的
案例3：统计系统基本信息
脚本说明：整个脚本仅实现菜单输出，菜单输出前通过clear将屏幕清空，使用的是echo
由于前后章节的基数不同，所以对比的数据词频的量有一定的差异，但通过观察不难发现，
echo
echo"Display system load:"
echo
echo
#This script can be used to collect system basic information.
#!/bin/bash
echo "4.Display
echo
echo
echo
echo
echo
clear
#This is a menu script
#!/bin/bash
下面编写一个脚本实现程序主菜单的显示，脚本主题使用echo命令实现，脚本内容如下。
案例2：制作程序菜单
$(cat/proc/cpuinfo)
"3.Display
"2.Display
"1.Display system CPU info and system load"
*********************************
1system network interface info"
system Mem and swap
info"
第3章
自动化运维
149
---
## Page 166
表3-12
格式中对条件的判断可以使用test命令，也可以使用测试。
是多条命令。也就是说，当判断条件满足时，可以仅执行一条命令，也可以执行一系列命令，
用if语句或case语句，下面分别看看这两种语句的语法格式，并给出应用案例说明使用方法。
工作状态，实现脚本的智能化，让脚本根据不同的环境执行不同的操作。Shell脚本的判断可以使
发现编写脚本其实很简单。
要的优秀脚本。当然，初学者可以先从模仿入手，多看多练，通过日积月累的知识沉淀，你会
们将重点关注这些内容，只有完全掌握了这些知识，再结合Linux命令才可以写出满足实际需
大之处就在于它可以像其他高级编程语言一样进行判断、循环、控制以及函数处理。接下来我
Linux运维之道
命令序列
if条件
3.9.4
150
表3-12为常用f语句的语法格式，其中命令序列代表命令集合，可以是一条命令，也可以
判断语句的使用使得脚本具有了智能判断的功能，通过判断，我们可以分析计算机操作环境、
1.if语句
Shell脚本如果仅仅是命令的堆积的话，那么也就失去了Shell编程的意义，Shell脚本的强
echo $(ip addr show)
echo
echo
echo
echo
echo
echo
echo
语法格式1
判断语句应用
"Display Mem and swap info:"
"Displaynetwork interface info:"
"df -h"
"Display filesystem mount info:"
$（free)
一
一
命令序列
else
命令序列
then
if条件
--
语法格式2
1
一
一
elif条件
命令序列
then
elif条件
命令序列
then
if条件
语法格式3