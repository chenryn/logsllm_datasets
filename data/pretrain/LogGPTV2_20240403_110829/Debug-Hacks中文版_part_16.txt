### Page 131
`crash` 是一个强大的工具，用于查看崩溃转储文件（如 `vmcore`）和实时系统状态。本章节将以内核版本 2.6.18 为例，介绍 `crash` 的使用方法。

#### 启动 `crash`
启动 `crash` 后，会显示一个命令提示符，用户可以通过对话方式与 `crash` 进行交互。`crash` 提供了多种命令，掌握这些命令可以帮助用户轻松获取所需的信息。

#### 使用 `kdump` 获取内核崩溃转储
在某些情况下，磁盘控制器驱动程序的初始化失败可能会导致无法获取内核崩溃转储。为了解决这个问题，可以在驱动程序初始化时添加重置磁盘控制器的处理。此外，可以使用 `kexec` 来跳过磁盘控制器等设备的结束处理，并启动转储内核。

- **设置 SSH 密钥**：为了实现无密码登录，需要事先设置好公钥。
- **配置 `kdump`**：
  ```bash
  # service kdump propagate
  link_delay 10
  path /dump
  ```

### Page 133
`crash` 提供了一些方便的命令来处理十六进制数据和控制输出。

#### 命令介绍
- **ascii**：将十六进制数转换成字符串。
  ```bash
  crash> ascii 6f6d2f6e6962732f
  /sbin/modprobe..
  ```
- **hex, eval**：参考 “HACK#14 从汇编语言查找相应的源代码”。
- **sf**：禁用滚动输出。
  ```bash
  crash> sf
  set scroll off
  ```

#### 设置编辑器
可以通过以下命令设置编辑器的键盘绑定：
```bash
crash> set vi
crash> set emacs
```

### Page 135
`crash` 提供了多种命令来获取进程信息和内存信息。

#### 命令介绍
- **bt (backtrace)**：显示调用栈信息。
  - `-a` 选项：仅显示当前进程（不支持实时系统）。
  - `-l` 选项：显示文件名和行号。
  - `-f` 选项：显示栈帧内的所有栈数据。
  ```bash
  crash> bt 2157
  [ffff810075a5fc10] journal_stop at fffffff880327ae
  [ffff810075a5fa70] do_select at fffffff8001137f
  [ffff810075a5fa20] schedule_timeout at ffffffff800627cd
  [ffff810075a5f938] schedule at fffffff80061f29
  ```

- **rd (read data)**：读取内存中的数据。
  ```bash
  crash> rd exfff81004c579938-e 0xffff81004c57a000 -s
  ```

- **task**：获取栈指针。
  ```bash
  crash> task | grep rsp
  ```

### Page 136
`crash` 还提供了其他一些有用的命令来获取内核信息。

#### 命令介绍
- **kmem**：显示内核内存信息。
  - `-s` 选项：显示 slab 缓存信息。
  - `-i` 选项：显示内存信息，类似于 `free` 命令。
  ```bash
  crash> kmem -i
  TOTAL MEM: 2GB
  FREE: 2GB
  ALLOCATED: 0
  ```

- **irq**：显示内核内部管理的中断信息。
- **files**：显示进程打开的文件。
- **dis**：反汇编代码。
- **dev**：显示字符设备列表。
  - `-p` 选项：显示 PCI 数据。

### Page 137
`crash` 可以用于调试内核停止响应的问题，特别是与信号量相关的问题。

#### 内存映射
- **-p 选项**：显示内存映射。
- **-i 选项**：显示内存信息。
  ```bash
  crash> kmem -i
  TOTAL SWAP: 2GB
  SWAP USED: 0
  SWAP FREE: 2GB
  ```

- **slab 缓存信息**：
  ```bash
  crash> kmem -s
  NAME                OBJSIZE  ALLOCATED  TOTAL SLABS  SSIZE
  ip6_dst_cache       320      9          9            8
  fib6_nodes          320      9          9            8
  ip_fib_hash         320      9          9            8
  ip_fib_alias        320      9          9            8
  ext3_inode_cache    320      9          9            8
  ```

通过这些命令和选项，`crash` 提供了一个强大的工具集，帮助用户进行内核调试和故障排除。