number AHY150100).
REFERENCES
[1] G. Asharov, Y. Lindell, T. Schneider, and M. Zohner, “More efﬁcient
oblivious transfer and extensions for faster secure computation,” in ACM
Conf. on Computer and Communications Security (CCS). ACM, 2013,
pp. 535–548.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:34 UTC from IEEE Xplore.  Restrictions apply. 
837
[2] ——, “More efﬁcient oblivious transfer extensions with security for
malicious adversaries,” in Advances in Cryptology—Eurocrypt 2015,
Part I, ser. LNCS, vol. 9056. Springer, 2015, pp. 673–701.
[3] Bar Ilan Cryptography Research Group, “libscapi: The Secure Compu-
tation API,” 2016.
[4] D. Beaver, “Correlated pseudorandomness and the complexity of private
computations,” in 28th Annual ACM Symposium on Theory of Comput-
ing (STOC). ACM Press, 1996, pp. 479–488.
[5] M. Bellare, V. T. Hoang, S. Keelveedhi, and P. Rogaway, “Efﬁcient
garbling from a ﬁxed-key blockcipher,” in IEEE Symposium on Security
and Privacy, 2013, pp. 478–492.
[6] S. Bhattacharya and M. Nandi, “Full indifferentiable security of the xor
of two or more random permutations using the χ2 method,” in Advances
in Cryptology—Eurocrypt 2018, Part I, ser. LNCS. Springer, 2018, pp.
387–412.
[7] A. Biryukov and D. Wagner, “Advanced slide attacks,” in Advances in
Springer, 2000,
Cryptology—Eurocrypt 2000, ser. LNCS, vol. 1807.
pp. 589–606.
[8] J. Black, M. Cochran, and T. Shrimpton, “On the impossibility of highly-
efﬁcient blockcipher-based hash functions,” Journal of Cryptology,
vol. 22, no. 3, pp. 311–329, 2009.
[9] D. Bogdanov, L. Kamm, B. Kubo, R. Rebane, V. Sokk, and R. Talviste,
“Students and taxes: A privacy-preserving study using secure computa-
tion,” Proc. Privacy Enhancing Technologies, no. 3, pp. 117–135, 2016.
[10] P. Bogetoft, D. L. Christensen, I. Damg˚ard, M. Geisler, T. Jakobsen,
M. Krøigaard, J. D. Nielsen, J. B. Nielsen, K. Nielsen, J. Pagter, M. I.
Schwartzbach, and T. Toft, “Secure multiparty computation goes live,” in
Financial Cryptography and Data Security (FC), ser. LNCS. Springer,
2009, pp. 325–343.
[11] E. Boyle, N. Gilboa, and Y. Ishai, “Function secret sharing,” in Advances
in Cryptology—Eurocrypt 2015, Part II, ser. LNCS, vol. 9057. Springer,
2015, pp. 337–367.
[12] S. Chen, R. Lampe, J. Lee, Y. Seurin, and J. P. Steinberger, “Minimizing
the two-round Even-Mansour cipher,” in Advances in Cryptology—
Crypto 2014, Part I, ser. LNCS, vol. 8616. Springer, 2014, pp. 39–56.
[13] S. Chen and J. P. Steinberger, “Tight security bounds for key-alternating
ciphers,” in Advances in Cryptology—Eurocrypt 2014, ser. LNCS, vol.
8441. Springer, 2014, pp. 327–350.
[14] S. G. Choi, J. Katz, R. Kumaresan, and H.-S. Zhou, “On the security
of the “free-XOR” technique,” in Theory of Cryptography Confer-
ence 2012, ser. LNCS, vol. 7194. Springer, 2012, pp. 39–53.
[15] H. Corrigan-Gibbs, D. Boneh, and D. Mazi`eres, “Riposte: An anony-
mous messaging system handling millions of users,” in IEEE Symposium
on Security and Privacy, 2015, pp. 321–338.
[16] W. Dai, V. T. Hoang, and S. Tessaro, “Information-theoretic indistin-
guishability via the chi-squared method,” in Advances in Cryptology—
Crypto 2017, Part III, ser. LNCS. Springer, 2017, pp. 497–523.
[17] D. Demmler, T. Schneider, and M. Zohner, “ABY—A framework for
efﬁcient mixed-protocol secure two-party computation,” in Network and
Distributed System Security Symposium, 2015.
[18] Y. Dodis, L. Reyzin, R. L. Rivest, and E. Shen, “Indifferentiability
of permutation-based compression functions and tree-based modes of
operation, with applications to MD6,” in Fast Software Encryption
(FSE) 2009, ser. LNCS. Springer, 2009, pp. 104–121.
[19] J. Doerner and A. Shelat, “Scaling ORAM for secure computation,” in
ACM Conf. on Computer and Communications Security (CCS). ACM,
2017, pp. 523–535.
[20] X. Fan, C. Ganesh, and V. Kolesnikov, “Hashing garbled circuits for
free,” in Advances in Cryptology—Eurocrypt 2017, Part III, ser. LNCS.
Springer, 2017, pp. 456–485.
[21] A. Faz-Hern´andez, J. L´opez, and A. K. D. S. de Oliveira, “SoK: A
performance evaluation of cryptographic instruction sets on modern
architectures,” in Proc. 5th ACM on ASIA Public-Key Cryptography
Workshop. ACM, 2018, pp. 9–18.
[22] T. K. Frederiksen, T. P. Jakobsen, J. B. Nielsen, and R. Triﬁletti,
“TinyLEGO: An interactive garbling scheme for maliciously secure two-
party computation,” Cryptology ePrint Archive, Report 2015/309, 2015,
http://eprint.iacr.org/2015/309.
[23] O. Goldreich, S. Goldwasser, and S. Micali, “How to construct random
functions,” J. ACM, vol. 33, no. 4, pp. 792–807, Oct. 1986.
[25] S. Gueron, Y. Lindell, A. Nof, and B. Pinkas, “Fast garbling of
circuits under standard assumptions,” in ACM Conf. on Computer and
Communications Security (CCS). ACM, 2015, pp. 567–578.
[26] M. Hastings, B. Hemenway, D. Noble, and S. Zdancewic, “SoK:
General purpose compilers for secure multi-party computation,” in IEEE
Symposium on Security and Privacy, 2019.
[27] B. Hemenway, S. Lu, R. Ostrovsky, and W. Welser IV, “High-precision
secure computation of satellite collision probabilities,” in Intl. Conf. on
Security and Cryptography for Networks (SCN), ser. LNCS. Springer,
2016, pp. 169–187.
[28] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank, “Extending oblivious
transfers efﬁciently,” in Advances in Cryptology—Crypto 2003, ser.
LNCS, vol. 2729. Springer, 2003, pp. 145–161.
[29] M. Keller, E. Orsini, and P. Scholl, “Actively secure OT extension with
optimal overhead,” in Advances in Cryptology—Crypto 2015, Part I, ser.
LNCS, vol. 9215. Springer, 2015, pp. 724–741.
[30] ——, “MASCOT: Faster malicious arithmetic secure computation with
oblivious transfer,” in ACM Conf. on Computer and Communications
Security (CCS). ACM, 2016, pp. 830–842.
[31] V. Kolesnikov and T. Schneider, “Improved garbled circuit: Free XOR
gates and applications,” in Intl. Colloquium on Automata, Languages,
and Programming (ICALP), ser. LNCS. Springer, 2008, pp. 486–498.
[32] A. Lapets, F. Jansen, K. D. Albab, R. Issa, L. Qin, M. Varia, and
A. Bestavros, “Accessible privacy-preserving web-based data analysis
for assessing and addressing economic inequalities,” in Proc. 1st ACM
SIGCAS Conference on Computing and Sustainable Societies. ACM,
2018, pp. 48:1–48:5.
[33] J. Lee, “Indifferentiability of the sum of random permutations toward
optimal security,” IEEE Trans. Info. Theory, vol. 63, no. 6, pp. 4050–
4054, 2017.
[34] M. Liskov, R. L. Rivest, and D. Wagner, “Tweakable block ciphers,”
Journal of Cryptology, vol. 24, no. 3, pp. 588–613, Jul. 2011.
[35] S. Lucks, “The sum of PRPs is a secure PRF,” in Advances in
Springer, 2000,
Cryptology—Eurocrypt 2000, ser. LNCS, vol. 1807.
pp. 470–484.
[36] A. Luykx, B. Mennink, B. Preneel, and L. Winnen, “Two-permutation-
based hashing with binary mixing,” J. Mathematical Cryptology, pp.
139–150, 2015.
[37] A. Mandal, J. Patarin, and V. Nachef, “Indifferentiability beyond the
birthday bound for the xor of two public random permutations,” in
Progress in Cryptology—Indocrypt 2010, ser. LNCS. Springer, 2010,
pp. 69–81.
[38] U. M. Maurer, R. Renner, and C. Holenstein, “Indifferentiability, im-
possibility results on reductions, and applications to the random oracle
methodology,” in Theory of Cryptography Conference, ser. LNCS, vol.
2951. Springer, 2004, pp. 21–39.
[39] B. Mennink and B. Preneel, “On the XOR of multiple random per-
mutations,” in Intl. Conference on Applied Cryptography and Network
Security (ACNS), ser. LNCS. Springer, 2015, pp. 619–634.
[40] P. Mohassel and Y. Zhang, “SecureML: A system for scalable privacy-
preserving machine learning,” in IEEE Symposium on Security and
Privacy, 2017, pp. 19–38.
[41] J. B. Nielsen, T. Schneider, and R. Triﬁletti, “Constant round maliciously
secure 2PC with function-independent preprocessing using LEGO,” in
Network and Distributed System Security Symposium, 2017.
[42] J. Patarin, “The “coefﬁcients H” technique (invited talk),” in Annual
International Workshop on Selected Areas in Cryptography (SAC), ser.
LNCS. Springer, 2009, pp. 328–345.
[43] M. O. Rabin, “How to exchange secrets with oblivious
trans-
fer,” Cryptology ePrint Archive, Report 2005/187, Aiken Computa-
tion Lab, Harvard University, Tech. Rep. TR-81, 1981, available at
http://eprint.iacr.org/2005/187.
[44] P. Rindal,
“libOTe:
Oblivious Transfer Library,”
41c55052627081363364370ba7f7893b3c413951.
an efﬁcient, portable,
and easy to use
https://github.com/osu-crypto/libOTe,
[45] Unbound
Tech,
“Protecting
seed
secrets
and
//github.com/unbound-tech/blockchain-crypto-mpc,
94d5b83dc83e920a668d6e737c0a720c3abca7dc.
with multi-party
cryptographic
signing
computation.”
keys
https:
2018,
[24] O. Goldreich, S. Micali, and A. Wigderson, “How to play any mental
game or A completeness theorem for protocols with honest majority,” in
19th Annual ACM Symposium on Theory of Computing (STOC). ACM
Press, 1987, pp. 218–229.
of
[46] University
real-world
transfers.”
3760dda51b0080ee0fb79c7184cbe2c00762c2b8.
computational
https://github.com/bristolcrypto/apricot,
“Apricot: Advanced
implementation
Bristol,
of
protocols
for
oblivious
2016,
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:42:34 UTC from IEEE Xplore.  Restrictions apply. 
838
[47] ——, “Multiparty computation with SPDZ, MASCOT, and overdrive of-
ﬂine phases (inactive).” https://github.com/bristolcrypto/SPDZ-2, 2016,
721abfae849625a02ea49aabc534f9cf41ca643f.
[48] F. Wang, C. Yun, S. Goldwasser, V. Vaikuntanathan, and M. Zaharia,
“Splinter: Practical private queries on public data,” in 14th {USENIX}
Symposium on Networked Systems Design and Implementation ({NSDI}
17), 2017, pp. 299–313.
[49] X. Wang, A. J. Malozemoff, and J. Katz, “EMP-toolkit: Efﬁcient
MultiParty computation toolkit,” https://github.com/emp-toolkit, 2016.
[50] X. Wang, S. Ranellucci, and J. Katz, “Authenticated garbling and
efﬁcient maliciously secure two-party computation,” in ACM Conf. on
Computer and Communications Security (CCS). ACM, 2017, pp. 21–
37.
[51] ——, “Global-scale secure multiparty computation,” in ACM Conf. on
Computer and Communications Security (CCS). ACM, 2017, pp. 39–
56.
[52] A. C.-C. Yao, “How to generate and exchange secrets (extended ab-
stract),” in 27th Annual Symposium on Foundations of Computer Science
(FOCS).
IEEE, 1986, pp. 162–167.
[53] S. Zahur, M. Rosulek, and D. Evans, “Two halves make a whole—
reducing data transfer in garbled circuits using half gates,” in Advances
in Cryptology—Eurocrypt 2015, Part II, ser. LNCS, vol. 9057. Springer,
2015, pp. 220–250.
[54] R. Zhu and Y. Huang, “JIMU: Faster LEGO-based secure computation
using additive homomorphic hashes,” in Advances in Cryptology—
Asiacrypt 2017, Part II, ser. LNCS. Springer, 2017, pp. 529–572.
APPENDIX A
RANDOM-OT EXTENSION
Random OT is similar to correlated OT except that both
“messages” of the sender are chosen uniformly by the ideal
functionality; see Figure 6. It also has applications to secure
computation [1]. In Figure 7 we show a protocol realizing this
functionality in the FΔ-ROT-hybrid model, in both the semi-
honest and malicious settings.
Theorem 7. If H is cr (resp., tcr) then protocol ΠR-OT
securely realizes FR-OT for semi-honest (resp., malicious)
adversaries in the FΔ-ROT-hybrid model.
Proof. The proof is very similar to the proof of Theorem 2. As
in that case, security for a corrupted PA is perfect and easy to
show, and we thus focus on a corrupted PB. We consider the
malicious setting; the semi-honest setting follows similarly.
The simulator S for a malicious PB is as follows:
1-2. S obtains the inputs (x1, . . . , xm), as well as the values
{bi}i∈[m], that A sends to FΔ-ROT,
S also chooses a uniform Δ and answers A’s global key
query (if any) using Δ.
{mxi
:= H(bi, i) and sends (x1, . . . , xm) and
3. S sets mxi
i } to FR-OT.
i
A proof of indistinguishability follows as in the proof of
Theorem 1.
APPENDIX B
ON DEFINING CORRELATED OT
We give an explicit attack showing that the protocol for
correlated-OT extension by Asharov et al. [2] does not realize
their correlated-OT functionality in the malicious setting. A
similar attack also works for random-OT extension.
In Figure 8 we show the original correlated-OT functionality
as deﬁned by Asharov et al. [2]. Compared to our version of
the ideal functionality in Figure 4, this ideal functionality is
Functionality FR-OT
Upon receiving (Extend) from PA and (x1, . . . , xm) from PB
with xi ∈ {0, 1} do:
i ∈ {0, 1}k.
1) For each i ∈ [m], sample uniform m0
i , m1
i )}.
2) If PA is corrupted, wait for A to send {(m0
i , m1
If PB is corrupted, wait for A to send {mxi
i }.
3) Send {(m0
i } to PB.
i , m1
i )} to PA and {mxi
Fig. 6. Functionality FR-OT.
Protocol ΠR-OT
Inputs: PB has x1, . . . , xm with xi ∈ {0, 1}.
Protocol:
1) PA chooses uniform Δ and sends (Init, Δ) to FΔ-ROT; PB
to FΔ-ROT, which returns
2) PB
3) Semi-honest security: For i ∈ [m] and b ∈ {0, 1}, PA
computes mb
:= H(bi).
Malicious security: For i ∈ [m] and b ∈ {0, 1}, PA
computes mb
:= H(bi, i).
sends (Init) to FΔ-ROT.
a1, . . . , am to PA and b1, . . . , bm to PA.
i := H(ai ⊕ bΔ); PB sets mxi
i := H(ai⊕bΔ, i); PB sets mxi
(x1, . . . , xm)
sends
i
i
Fig. 7. Protocol ΠR-OT.
Functionality F(cid:3)
C-OT
Upon receiving (Δ1, . . . , Δm) from PA and (x1, . . . , xm) from
PB with xi ∈ {0, 1} do:
1) For each i ∈ [m], sample uniform m0
i ⊕ Δi.
2) Send {(m0
i )} to PA and {mxi
i } to PB.
i and set m1
i
i , m1
m0
:=
Fig. 8. The original functionality F(cid:3)
Asharov et al. [1, 2].
C-OT for correlated OT proposed by
stronger since it does not allow the adversary to specify the
output it receives. In particular, a malicious PB is no longer
i }. Asharov et al. propose
allowed to specify the values {mxi
a protocol that is the same as ours (cf. Figure 5), and claim