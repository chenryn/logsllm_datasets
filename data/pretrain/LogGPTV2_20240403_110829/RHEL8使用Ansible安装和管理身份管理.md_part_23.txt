::: section
::: titlepage
## []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#comparing-hosts-and-users_managing-hosts-using-Ansible-playbooks}IdM 主机和用户的注册和身份验证：比较 {.title}
:::
IdM
中的用户和主机之间存在许多相似性。本节介绍了注册阶段中可以看到的一些相似点，以及部署阶段中涉及身份验证的部分相似点。
::: itemizedlist
-   注册阶段([表 15.1
    "用户和主机注册"](#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-host-enrollment_managing-hosts-using-Ansible-playbooks "表 15.1. 用户和主机注册"){.xref})：
    ::: itemizedlist
    -   管理员可以在用户或主机实际加入 IdM: 之前为用户和主机创建 LDAP
        条目，该命令是 `ipa stageuser-add`{.literal} ；对于主机，命令为
        `ipa host-add`{.literal}。
    -   在主机上执行 ipa-client-install 命令期间会创建一个包含
        [*密钥表*]{.emphasis}
        或缩写、keytab、对称密钥（重装为一定程度的用户密码）的文件，从而在主机上执行
        `ipa-client-install`{.literal} 命令时创建该文件，从而让主机加入
        IdM 域。类似地，用户在激活其帐户时需要创建密码，从而加入 IdM
        域。
    -   虽然用户密码是用户的默认身份验证方法，但 keytab
        是主机的默认身份验证方法。keytab 存储在主机上的文件中。
    :::
    ::: table
    []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-host-enrollment_managing-hosts-using-Ansible-playbooks}
    **表 15.1. 用户和主机注册**
    ::: table-contents
      操作       用户                                                                           主机
      ---------- ------------------------------------------------------------------------------ -------------------------------------------------------------------------------
      预注册     \$ [**IPA stageuser-add [*user_name*]{.emphasis} \[\--password\]**]{.strong}   \$ [**ipa host-add [*host_name*]{.emphasis} \[\--random\]**]{.strong}
      激活帐户   \$ [**ipa stageuser-activate [*user_name*]{.emphasis}**]{.strong}              \$ [**ipa-client install \[\--password\]**]{.strong} （必须在主机本身上运行）
    :::
    :::
-   部署阶段([表 15.2
    "用户和主机会话身份验证"](#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-host-start-session_managing-hosts-using-Ansible-playbooks "表 15.2. 用户和主机会话身份验证"){.xref})：
    ::: itemizedlist
    -   当用户启动新会话时，用户使用密码进行身份验证；类似地，每次打开密码时，主机都会通过显示其
        keytab
        文件进行身份验证。系统安全服务守护进程(SSSD)在后台管理此过程。
    -   如果身份验证成功，用户或主机会获得 Kerberos 票据授予票据(TGT)。
    -   然后，使用 TGT 获取特定服务的特定票据。
    :::
    ::: table
    []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#user-host-start-session_managing-hosts-using-Ansible-playbooks}
    **表 15.2. 用户和主机会话身份验证**
    ::: table-contents
                             用户                                               主机
      ---------------------- -------------------------------------------------- -----------------------------------------------
      默认身份验证方式       [**密码**]{.strong}                                [**keytabs**]{.strong}
      启动会话（普通用户）   \$ [**kinit [*user_name*]{.emphasis}**]{.strong}   [*\[交换机在主机上\]*]{.emphasis}
      身份验证成功的结果     用于获取特定服务访问权限的 [**TGT**]{.strong}      用于获取特定服务访问权限的 [**TGT**]{.strong}
    :::
    :::
:::
TGT 和其他 Kerberos 票据作为服务器定义的 Kerberos
服务和策略的一部分生成。IdM 服务会自动授予 Kerberos ticket、更新
Kerberos 凭证甚至销毁 Kerberos 会话。
:::
::: section
::: titlepage
## []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#alternative-host-authentication_managing-hosts-using-Ansible-playbooks}IdM 主机的替代身份验证选项 {.title}
:::
除了 keytabs 外，IdM 还支持两种其他类型的机器验证：
::: itemizedlist
-   SSH 密钥.主机的 SSH
    公钥已创建并上传到主机条目。从那里，系统安全服务守护进程(SSSD)使用
    IdM 作为身份提供程序，并可与 OpenSSH 和其他服务一起引用位于 IdM
    中的公钥。
:::
::: itemizedlist
-   计算机证书.在这种情况下，计算机使用由 IdM 服务器的证书认证机构签发的
    SSL 证书，然后存储在 IdM
    的目录服务器中。证书然后发送到计算机，当它向服务器进行身份验证时会存在该证书。在客户端上，证书由名为
    [certmonger
    的服务管理](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/#certmonger_certmonger-for-issuing-renewing-service-certs){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-IdM-host-entry-with-FQDN-using-Ansible-playbooks_managing-hosts-using-Ansible-playbooks}使用 Ansible playbook 确保存在带有 FQDN 的 IdM 主机条目 {.title}
:::
本节介绍使用 Ansible playbook 在 Identity
Management(IdM)中存在主机条目。主机条目仅通过其 `完全限定域名`{.literal}
(FQDN)定义。
如果至少适用以下条件之一，则指定主机的 `FQDN`{.literal} 名称就足够：
::: itemizedlist
-   IdM 服务器没有配置为管理 DNS。
-   主机没有静态 IP 地址，或者在配置主机时不知道该 IP 地址。添加仅由
    `FQDN`{.literal} 定义的主机实质上会在 IdM DNS
    服务中创建占位符条目。例如，笔记本电脑可能预配置为 IdM
    客户端，但它们在配置时没有 IP 地址。当 DNS
    服务动态更新其记录时，将检测到主机的当前 IP 地址并更新其 DNS 记录。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果没有 Ansible，则使用 `ipa host-add`{.literal} 命令在 IdM
中创建主机条目。将主机添加到 IdM 的结果是 IdM 中存在的主机状态。由于
Ansible 依赖于 idempotence，要使用 Ansible 将主机添加到
IdM，您必须创建一个 playbook，将主机的状态定义为 present: [**state:
present**]{.strong}。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包安装在 Ansible 控制器上。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要确保的 IdM 中的
    `FQDN`{.literal}。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/host/add-host.yml`{.literal}
    文件中的示例：
    ``` literallayout
    ---
    - name: Host present
      hosts: ipaserver
      become: true
      tasks:
      - name: Host host01.idm.example.com present
        ipahost:
          ipaadmin_password: MySecret123
          name: host01.idm.example.com
          state: present
          force: yes
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-host-is-present.yml
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这个过程会导致在 IdM LDAP 服务器中创建主机条目，但不将主机注册到 IdM
Kerberos 域。为此，您必须将主机部署为 IdM 客户端。[详情请参阅使用
Ansible playbook
安装身份管理客户端](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-an-Identity-Management-client-using-an-ansible-playbook_installing-identity-management){.link}。
:::
::: orderedlist
**验证步骤**
1.  以 admin 用户身份登录您的 IdM 服务器：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    ```
2.  输入 `ipa host-show`{.literal} 命令并指定主机名称：
    ``` literallayout
    $ ipa host-show host01.idm.example.com
      Host name: host01.idm.example.com
      Principal name: host/PI:EMAIL
      Principal alias: host/PI:EMAIL
      Password: False
      Keytab: False
      Managed by: host01.idm.example.com
    ```
:::
输出确认 IdM 中存在 [**host01.idm.example.com**]{.strong}。
:::
::: section
::: titlepage
# []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-IdM-host-entry-with-DNS-information-using-Ansible-playbooks_managing-hosts-using-Ansible-playbooks}使用 Ansible playbook 确保存在含有 DNS 信息的 IdM 主机条目 {.title}
:::
本节介绍使用 Ansible playbook 在 Identity
Management(IdM)中存在主机条目。主机条目通过其 `完全限定域名`{.literal}
(FQDN)及其 IP 地址定义。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果没有 Ansible，则使用 `ipa host-add`{.literal} 命令在 IdM
中创建主机条目。将主机添加到 IdM 的结果是 IdM 中存在的主机状态。由于
Ansible 依赖于 idempotence，要使用 Ansible 将主机添加到
IdM，您必须创建一个 playbook，将主机的状态定义为 present: [**state:
present**]{.strong}。
:::
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包安装在 Ansible 控制器上。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  创建一个 Ansible playbook 文件，其中包含您要确保的 IdM 中的
    `完全限定域名`{.literal} (FQDN)。另外，如果 IdM 服务器配置为管理
    DNS，并且您知道主机的 IP 地址，请为 `ip_address`{.literal}
    参数指定一个值。主机需要 IP 地址才能存在于 DNS
    资源记录中。要简化此步骤，您可以复制并修改
    `/usr/share/doc/ansible-freeipa/playbooks/host/host-present.yml`{.literal}
    文件中的示例。您还可以包含其他附加信息：
    ``` literallayout
    ---
    - name: Host present
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure host01.idm.example.com is present
        ipahost:
          ipaadmin_password: MySecret123
          name: host01.idm.example.com
          description: Example host
          ip_address: 192.168.0.123
          locality: Lab
          ns_host_location: Lab
          ns_os_version: CentOS 7
          ns_hardware_platform: Lenovo T61
          mac_address:
          - "08:00:27:E3:B1:2D"
          - "52:54:00:BD:97:1E"
          state: present
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-host-is-present.yml
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
这个过程会导致在 IdM LDAP 服务器中创建主机条目，但不将主机注册到 IdM
Kerberos 域。为此，您必须将主机部署为 IdM 客户端。[详情请参阅使用
Ansible playbook
安装身份管理客户端](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-an-Identity-Management-client-using-an-ansible-playbook_installing-identity-management){.link}。
:::
::: orderedlist
**验证步骤**
1.  以 admin 用户身份登录您的 IdM 服务器：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    ```
2.  输入 `ipa host-show`{.literal} 命令并指定主机名称：
    ``` literallayout
    $ ipa host-show host01.idm.example.com
      Host name: host01.idm.example.com
      Description: Example host
      Locality: Lab
      Location: Lab
      Platform: Lenovo T61
      Operating system: CentOS 7
      Principal name: host/PI:EMAIL
      Principal alias: host/PI:EMAIL
      MAC address: 08:00:27:E3:B1:2D, 52:54:00:BD:97:1E
      Password: False
      Keytab: False
      Managed by: host01.idm.example.com
    ```
:::
输出确认 IdM 中存在 [**host01.idm.example.com**]{.strong}。
:::
::: section
::: titlepage
# []{#managing-hosts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-multiple-IdM-host-entries-with-random-passwords-using-Ansible-playbooks_managing-hosts-using-Ansible-playbooks}使用 Ansible playbook 确保存在带有随机密码的多个 IdM 主机条目 {.title}
:::
`ipahost`{.literal} 模块允许系统管理员使用一个 Ansible 任务来确保 IdM