是闭环多边形的实体；“Ｒｅｌａｔｉｏｎｓ”用于记录和表达
ＯＳＭ将搜集的地理数据通过开源类库“Ｍａｐ
“Ｎｏｄｅｓ”和“Ｗａｙｓ”之间的关系 ［ｈｔｔｐ：／／ｅｎ．ｗｉｋｉｐｅ
ｎｉｋ”渲染成为地图瓦片，借助开源的 ＡＪＡＸ库
ｄｉａ．ｏｒｇ／ｗｉｋｉ／ＯｐｅｎＳｔｒｅｅｔＭａｐ］；“ｏｓｍ２ｐｇｓｑｌ”支持压缩
“ＯｐｅｎＬａｙｅｒｓ”实现地图的显示、动态更新与用户交
格式的“ｂｚ２”文件直接导入，但是在导入过程中是
互功能［１１］。借鉴这一思路，本文提出基于 ＯＳＭ的
将ＯＳＭ数据解压后以“．ｘｍｌ”格式的数据表形式存
“雪龙在线”平台建设基本框架（图 ２）：搭建本地
储在ＰｏｓｔｇｒｅＳＱＬ数据库中，所以实际要求计算机有
ＯＳＭ全球地图数据库实现地图数据的渲染和切片；
足够的硬盘空间。另一点是内存，全球数据导入需
为“雪龙在线”提供调用接口发布极地网络地图服
要大量的内存开销，随着导入数据量的增加，所需
务；最终以“雪龙在线”为依托集成表达“３Ｓ”多源
的内存在不断增加，这对计算机不论是物理内存还
数据，为极地科学研究的开展和主管部门战略决策
４９４ 极地研究 第２８卷
是虚拟内存都是巨大的考验。数据导入的整个过程 行，“ａｕｔｏｖａｃｕｕｍ”是数据库自动清理空间的命令，
需要花费大量时间，因此要求计算机具有稳定的性 为了让数据库的缓存资源都用了执行数据导入操作
能和持续的供电保障，相比 ＰＣ来说服务器在这方 需要将此项关闭。所以数据库参数配置如下：
面具有明显的优势，在完成相应配置和操作后不必 ｓｈａｒｅｄ＿ｂｕｆｆｅｒｓ＝４ＧＢ
担心数据导入过程中出现机器死机等情况的发生。 ｅｆｆｅｃｔｉｖｅ＿ｃａｃｈｅ＿ｓｉｚｅ＝１６ＧＢ
因此最终采取系统及硬件搭配方案是安装３２ ａｕｔｏｖａｃｕｕｍ＝ｏｆｆ
位Ｕｂｕｎｔｕ１４．０４ＬＴＳ的１ＴＢ硬盘、２０Ｇ内存的服务 使用ｏｓｍ２ｐｇｓｑｌ工具开始数据导入时同样需要
器，其中１ＴＢ的硬盘空间在安装系统时将２０ＧＢ空 对内存进行适当地分配，在命令行中 键 入
间划作交换空间作为虚拟内存使用。 “ｏｓｍ２ｐｇｓｑｌｄｏｓｍｇｉｓｓＳ＂．／ｄｅｆａｕｌｔ．ｓｔｙｌｅ＂Ｃ１６３８４
２．３ 性能优化与数据入库 ＵｗｗｗｄａｔａＷＨｌｏｃａｌｈｏｓｔｖ～／ｐｌａｎｅｔ１４０６２５．ｏｓｍ．
除硬件配置之外，数据库软件 ＰｏｓｔｇｒｅＳＱＬ与导 ｂｚ２”其中“ｓ”命令表示 ｏｓｍ２ｐｇｓｑｌ在“ｓｌｉｍ”模式下
入工具ｏｓｍ２ｐｇｓｑｌ的性能优化也影响数据导入的效 运行，“Ｃ１６３８４”表示分配１６ＧＢ内存用于执行该
率。其中在ＰｏｓｔｇｒｅＳＱＬ配置文件中应当引起重视的 操作。
是“ｓｈａｒｅｄ＿ｂｕｆｆｅｒｓ”“ｅｆｆｅｃｔｉｖｅ＿ｃａｃｈｅ＿ｓｉｚｅ”和“ａｕｔｏ 总结试验中失败的教训得出 ＰｏｓｔｇｒｅＳＱＬ和
ｖａｃｕｕｍ”这几个参数的设置。“ｓｈａｒｅｄ＿ｂｕｆｆｅｒｓ”是将 ｏｓｍ２ｐｇｓｑｌ只有在上述配置下才能保证数据入库过
硬盘中的数据先读取并存储在系统内存中然后再入 程中不会出现“内存不足”等现象导致数据导入半
库的，因此该参数的设置直接影响数据导入的速 途而废。
度；“ｅｆｆｅｃｔｉｖｅ＿ｃａｃｈｅ＿ｓｉｚｅ”是ＰｏｓｔｇｒｅＳＱＬ能够使用的 ＯＳＭ数据完全导入耗时 １８８ｈ，图 ３显示的是
最大内存，其分配的大小关系到整个数据库的运 数据导入完成时的情况。
图３ ＯＳＭ数据导入完成截图
Ｆｉｇ．３．ＳｃｒｅｅｎｓｈｏｔｏｆＯＳＭｄａｔａｉｍｐｏｒｔ
２．４ ＯＳＭ数据的可视化与地图服务发布 简单地显示这三类空间实体，根本无法达到发布网
数据入库完成后的工作就是数据的可视化。 络地图服务的目的。同时发布矢量数据的 ＷＭＳ由
ＰｏｓｔｇｒｅＳＱＬ开源的特点为许多 ＧＩＳ服务器开放了数 于数据量巨大且无法同栅格数据一样进行切片缓
据接口，服务器可以直接调用 ＰｏｓｔＧＩＳ的数据源来 存，势必会增加用户请求地图的响应时间，降低了
进行矢量数据的 ＷＭＳ发布。但是由于 ＧＩＳ服务器 用户体验和交互性能。因此在进行数据发布之前对
（如Ｇｅｏｓｅｒｖｅｒ）对于矢量数据的渲染样式十分有限， 地图数据进行渲染和切片，最终将地图以栅格图片
其根据点、线、面图层来渲染的模式使得地图上只能 的形式发布。
第４期 桂大伟等：ＯＳＭ在极地ＧＩＳ中的应用 ４９５
Ｍａｐｎｉｋ是集地图渲染与瓦片生成于一体的基 至此，１２级ＯＳＭ全球地图数据的入库、渲染与
于Ｃ＋＋编写的工具，为提高渲染效率 Ｍａｐｎｉｋ专门 切片工作得以完成。
针对 ＯＳＭ数据提供一个工具包“Ｍａｐｎｉｋｓｔｙｌｅ”，它
包含了全球范围内海岸线以及境界线数据。执行 ３ ＯＳＭ在极地 ＧＩＳ中的应用前景与展望
渲染和切片命令需要用到 “ｇｅｎｅｒａｔｅ＿ｘｍｌ．ｐｙ”和
“ｇｅｎｅｒａｔｅ＿ｔｉｌｅｓ．ｐｙ”两个脚本工具。“ｇｅｎｅｒａｔｅ＿ｘｍｌ． 本地ＯＳＭ全球数据库的建立意味着为“雪龙在
ｐｙ”将 ＰｏｓｔｇｒｅＳＱＬ数据库中的地图数据包含至名 线”注入了新的“血液”，将切割完成的地图瓦片通
为“ｏｓｍ．ｘｍｌ”的地图文件并产生渲染样式、字体风 过Ａｐａｃｈｅ服务器进行发布让“雪龙在线”进行调用
格等配置信息，实现数据与渲染工具的对接。然 和显示。图４显示的就是以 ＯｐｅｎＳｔｒｅｅｔＭａｐ为底图
后在“ｇｅｎｅｒａｔｅ＿ｔｉｌｅｓ．ｐｙ”中指定地图文件路径、数 的我国第５次南极科考期间“雪龙船”的历史航迹
据框范围、缩放级别等信息完成地图的渲染和切 效果图。较之以往仅使用谷歌影像地图来说，二者
片工作。 能够相互补充，增强可视化效果。
图４ ＯＳＭ叠加第５次南极科考航迹
Ｆｉｇ．４．ＯＳＭｏｖｅｒｌａｙｉｎｇｔｈｅ５ｔｈＡｎｔａｒｃｔｉｃｓｃｉｅｎｔｉｆｉｃｒｅｓｅａｒｃｈｖｏｙａｇｅ