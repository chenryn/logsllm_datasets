title:Filtering spam with behavioral blacklisting
author:Anirudh Ramachandran and
Nick Feamster and
Santosh S. Vempala
Filtering Spam with Behavioral Blacklisting
Anirudh Ramachandran, Nick Feamster, and Santosh Vempala
College of Computing, Georgia Tech
801 Atlantic Drive, Atlanta, GA - 30332, USA
{avr,feamster,vempala}@cc.gatech.edu
ABSTRACT
Spam ﬁlters often use the reputation of an IP address (or IP ad-
dress range) to classify email senders. This approach worked well
when most spam originated from senders with ﬁxed IP addresses,
but spam today is also sent from IP addresses for which blacklist
maintainers have outdated or inaccurate information (or no infor-
mation at all). Spam campaigns also involve many senders, reduc-
ing the amount of spam any particular IP address sends to a single
domain; this method allows spammers to stay “under the radar”.
The dynamism of any particular IP address begs for blacklisting
techniques that automatically adapt as the senders of spam change.
This paper presents SpamTracker, a spam ﬁltering system that
uses a new technique called behavioral blacklisting to classify email
senders based on their sending behavior rather than their iden-
tity. Spammers cannot evade SpamTracker merely by using “fresh”
IP addresses because blacklisting decisions are based on sending
patterns, which tend to remain more invariant. SpamTracker uses
fast clustering algorithms that react quickly to changes in send-
ing patterns. We evaluate SpamTracker’s ability to classify spam-
mers using email logs for over 115 email domains; we ﬁnd that
SpamTracker can correctly classify many spammers missed by cur-
rent ﬁltering techniques. Although our current datasets prevent us
from conﬁrming SpamTracker’s ability to completely distinguish
spammers from legitimate senders, our evaluation shows that Spam-
Tracker can identify a signiﬁcant fraction of spammers that current
IP-based blacklists miss. SpamTracker’s ability to identify spam-
mers before existing blacklists suggests that it can be used in con-
junction with existing techniques (e.g., as an input to greylisting).
SpamTracker is inherently distributed and can be easily replicated;
incorporating it into existing email ﬁltering infrastructures requires
only small modiﬁcations to mail server conﬁgurations.
Categories and Subject Descriptors: C.2.0 [Computer Communi-
cation Networks]: Security and protection
General Terms: Security, Design, Algorithms
Keywords: spam, botnets, blacklist, security, clustering
1.
INTRODUCTION
More than 75% of all email trafﬁc on the Internet is spam [25].
To date, spam-blocking efforts have taken two main approaches:
(1) content-based ﬁltering and (2) IP-based blacklisting. Both of
these techniques are losing their potency as spammers become more
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’07, October 29–November 2, 2007, Alexandria, Virginia, USA.
Copyright 2007 ACM 978-1-59593-703-2/07/0010...$5.00.
agile. To evade content-based ﬁlters, spammers have adopted tech-
niques such as image spam and emails explicitly designed to mis-
lead ﬁlters that “learn” certain keyword patterns; spammers are also
evading IP-based blacklists with nimble use of the IP address space
(e.g., stealing IP addresses on the same local network [19], stealing
IP address blocks with BGP route hijacking [30]). To make matters
worse, as most spam is now being launched by bots [30], spammers
can send a large volume of spam in aggregate while only sending a
small volume of spam to any single domain from a given IP address.
This “low and slow” spam sending pattern and the ease with
which spammers can quickly change the IP addresses from which
they are sending spam has rendered today’s methods of blacklisting
spamming IP addresses less effective than they once were [11]. For
example, our study in Section 2 shows that, of the spam received
at our spam “traps”, as much as 35% was sent from IP addresses
that were not listed by either Spamhaus [37] or SpamCop [36], two
reputable blacklists. Further, 20% of these IP addresses remained
unlisted even after one month. Most of the IP addresses that were
eventually blacklisted evaded the blacklist for about two weeks, and
some evaded the blacklists for almost two months.
Two characteristics make it difﬁcult for conventional blacklists to
keep pace with spammers’ dynamism. First, existing blacklists are
based on non-persistent identiﬁers. An IP address does not sufﬁce
as a persistent identiﬁer for a host: many hosts obtain IP addresses
from dynamic address pools, which can cause aliasing both of hosts
(i.e., a single host may assume different IP addresses over time) and
of IP addresses (i.e., a single IP address may represent different
hosts over time). Malicious hosts can steal IP addresses and still
complete TCP connections, which allows spammers to introduce
more dynamism. IP blacklists cannot keep up. Second, information
about email-sending behavior is compartmentalized by domain and
not analyzed across domains. Today, a large fraction of spam comes
from botnets, large groups of compromised machines controlled by
a single entity. With a much larger group of machines at their dis-
posal, spammers now disperse their “jobs” so that each IP address
sends spam at a low rate to any single domain. By doing so, spam-
mers can remain below the radar, since no single domain may deem
any single spamming IP address as suspicious.
IP blacklists must be continually updated to keep pace with cam-
paigns mounted by armies of “fresh” IP addresses. Unfortunately,
a spam campaign may complete by the time the IP addresses are
blacklisted, at which time a new campaign with new IP addresses is
imminent. Blacklisting all new IP addresses is not an option, either:
it creates a nuisance for administrators when legitimate mail relays
are renumbered, as well as for some mobile users.
To keep pace with this dynamism, we propose a new technique
called behavioral blacklisting, which complements existing black-
lists by categorizing spammers based on how they send email, rather
than the IP address (or address range) from which they are sending
it. The intuition behind behavioral blacklisting is that, while IP ad-
dresses are ephemeral as identiﬁers, spam campaigns, spam lists,
342and spamming techniques are more persistent. If we can identify
email-sending patterns that are characteristic of spamming behav-
ior, then we can continue to classify IP addresses as spammers even
as spammers change their IP addresses.
We design a behavioral blacklisting algorithm that uses the set of
target domains that a particular IP address sends mail to as the pri-
mary indicator of its behavior and incorporate this algorithm into a
system called SpamTracker. We use the set of domains that an IP ad-
dress targets within a ﬁxed time window as the feature for clustering
IP addresses that behave similarly. Our clustering algorithm takes as
input an n × d × t tensor, where n is the number of IP addresses
that sent email to any of d domains within one of t time windows.
The algorithm outputs clusters of IP addresses that exhibit similar
sending patterns. Our evaluation of these clusters shows that spam-
ming IP addresses form large clusters that are highly similar to each
other but distinct from the behavior of IP addresses in other clusters.
IP addresses of legitimate senders, on the other hand, do not form
large clusters. SpamTracker can classify a “fresh” IP address as a
spammer or a legitimate sender based on how closely its sending
behavior (i.e., the set of domains that it targets) maps to a clus-
ter that has been marked as known spamming behavior. Using logs
from an organization that manages email for over 115 domains, we
ﬁnd that SpamTracker detects many spammers before they are listed
in any blacklist, suggesting that SpamTracker can complement to-
day’s IP-based blacklists by catching some spammers earlier than
they would otherwise be caught.
SpamTracker requires little auxiliary information about whether
an email sender is a spammer or a legitimate sender: it takes as in-
put the email-sending patterns of all senders, builds clusters based
on the sending behaviors of (a possibly small set of) known spam-
mers, and classiﬁes each sender based on whether its behavior is
similar to a cluster that resembles known spamming behavior. Un-
like conventional approaches which track individual IP addresses,
SpamTracker tracks behavioral patterns to quickly identify whether
a new IP address exhibits similar patterns to other previously seen
IP addresses. Its ability to track behavior of groups, rather than indi-
vidual IP addresses, allows it to adapt more quickly to ephemeral IP
addresses that may not exhibit strong patterns from the perspective
of any single domain.
Because SpamTracker classiﬁes email based on sending behavior
rather than on more malleable properties of email (e.g., content, or
even IP address), we believe that spammers will have considerably
more difﬁculty in evading SpamTracker’s classiﬁcation methods.
Nevertheless, SpamTracker must be agile enough to adapt to spam-
mers’ changing behaviors: spamming patterns (i.e., which domains
are targeted, and how they are targeted) will change over time, and
adversaries that are aware of the SpamTracker algorithm may ad-
just their sending patterns to avoid falling into a particular cluster.
We believe, however, that automated, large-scale behavior such as
spamming will always give rise to clustering, and the challenge is to
design SpamTracker to adapt the clusters it uses for classiﬁcation,
even as the spammers themselves attempt to evade them.
The paper is organized as follows. Section 2 motivates behav-
ioral blacklisting. Section 3 presents a brief background on cluster-
ing techniques and describes EigenCluster [7], the clustering algo-
rithm that we use in SpamTracker. Section 4 describes the design
and implementation of SpamTracker, and Section 5 presents our
validation results and compares the performance of SpamTracker
to state-of-the-art IP-based blacklists and spam trap deployments.
In Section 6, we discuss various extensions of SpamTracker and
deployment-related concerns. Section 7 presents related work, and
Section 8 concludes.
2. MOTIVATION
This section provides background on current email spamming
practices and the performance of blacklists. In Section 2.1, we
s
P
I
n
e
e
s
n
U
f
o
n
o
i
t
c
a
r
F
 1
 0.1
 0.01
 0.001
 1e-04
 0
Not seen for two months
Not seen for 1 month
Not seen for 1 day
 5
 10
 15
 20
 25
 30
Time (days)
Figure 1: Fraction of spamming IP addresses that were not ob-
served at any of 115 domains for the past 1 day, past month, and
past 2 months.
present the volumes and rates at which IP addresses in our traces
send spam to each domain; we ﬁnd that spammers exhibit send-
ing patterns that make it difﬁcult to reliably detect and track spam-
ming IP addresses. In Section 2.2, we provide background on cur-
rent IP-based blacklisting techniques (e.g., DNS-based blacklists)
and present a study of their effectiveness.
2.1 The Behavior of Spamming IP Addresses
We present statistics on the network-level behavior of spammers,
focusing on the techniques that make building the reputation of any
particular IP address difﬁcult. We study two aspects in particular:
(1) Persistence: How much spam does a particular IP address send
in a day, and how does the set of IP addresses change over time?
(2) Distribution: What is the distribution of spam across target do-
mains for any particular IP address, and how does this distribution
change over time?
2.1.1 Persistence: “New” IP addresses every day
To determine the extent to which spamming IP addresses remain
stable, we study the IP addresses that send spam to over 115 distinct
domains, which collectively received 33 million pieces of spam dur-
ing March 2007.1
Figure 1 shows the number of “new” IP addresses that these do-
mains observed per day over the course of a month. The top line
shows the fraction of IP addresses that were seen in the trace for
a particular day that were never seen before in the trace (other
lines show fraction of spam from IP addresses that appeared on
the immediately preceding day, or within the month). Indeed, spam
is coming from different IP addresses every day, and about 10%
of IP addresses seen on any particular day were never seen be-
fore at any of the target domains. Thus, even given perfect mecha-
nisms for maintaining reputation about email senders and relatively
widespread observation, a signiﬁcant number of IP addresses that
have never been seen before are sending spam on any given day.
Lack of persistence in spamming IP addresses makes maintaining
reputation about spammers based solely on IP addresses difﬁcult,
since the blacklisted IP addresses keep changing. Given no previ-
ous information about the activity of an IP address, a conventional
blacklist will not be able to reliably block spam from that address.
2.1.2 Distribution: Some IPs target many domains
Existing blacklisting techniques collect reputation information
about spam or spam senders based on the activity observed at a sin-
gle domain (e.g., if a spammer sends a signiﬁcant amount of spam
to a single IP address, if it hits a spam trap, etc.) [36, 37]. Although
1Section 5.1 describes this dataset (as well as the others that we
used in our evaluation) in more detail.
d
e
t
e
g
r
a
t
s
n
i
a
m
o
d
e
u
q
i
n
u
f
o
r
e