 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
Real
IDN-Pass IDN-Block
PNTA
Yes
No
Male
Female
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
 100
 90
 80
 70
 60
 50
 40
 30
 20
 10
 0
Short
Long
Younger
Older
Lower
Higher
(a) Domain Type
(b) Computing Background
(c) Gender
(d) Age
(e) Browser Experience
(f) Education Level
Figure 5: The percentages of correct answers for different groups. We include the factors that have statistical signiﬁcance in
Table 8. “PNTA” under computing background stands for “Prefer not to answer.”
user performance albeit negatively. As shown in Figure 5(b),
the differences were relatively small (but statistically signif-
icant). Users with a higher educational level or computing
background seemed to perform worse. While we do not know
the reason, one plausible explanation could be that they were
overly conﬁdent about their knowledge/skills and overlooked
the IDNs. Future research can investigate the reason(s).
Limitations of The User Study.
Our user study has many
limitations. First, there is an inherent limitation for conduct-
ing the study online via MTurk since we cannot guarantee
our participants always paid attention to our questions. How-
ever, recent studies show that MTurk workers are at least as
attentive as subject pool participants [23]. Furthermore, our
inclusion of attention questions ameliorated this concern. Fu-
ture work could consider using eye-tracking to further address
this limitation. Second, there were still differences between
our study setup and real-world web browsing. In particular, we
showed a screenshot of a target website, and thus participants
cannot interact with the websites. The non-interactive screen-
shots helped to protect users and also allowed us to focus on
the domain names rather than other user strategies. We also
reminded our participants to pay attention to domain names,
while in practice, users are likely to make more mistakes if
they are not reminded (per the results of pilot studies). The
point is that even though we primed them, they still cannot
identify a signiﬁcant percentage of homograph IDNs. This
suggests we need to provide more countermeasures to help
users. Finally, our user study only examines user perception
of the authenticity of websites (domain names), which is only
the ﬁrst step in web phishing. Future work can study how
IDNs affect their follow-up actions such as login.
7 Discussion
IDN Homograph in Email and Social Network Services.
Email systems and social network platforms are also popular
channels to disseminate phishing messages. In these applica-
tions, IDN homograph can be used to deceive users too. We
brieﬂy investigated popular email and social network services
regarding their IDN policies. Our overall observation was that
most services had not established effective IDN policies. Due
to space limit, we only brieﬂy summarize our ﬁndings.
For email services, we looked into Gmail, iCloud and Out-
look. As of May 2020, we tested to see if homograph IDNs
(that impersonate popular domain names) can be displayed on
email clients in Unicode. For this test, we need to register the
homograph IDNs and set up the DNS records. We registered
3 IDNs. The ﬁrst IDN is “y©úzåôìß⇥r.com”. This domain
name represents a legitimate usage of IDN and it does not
violate any known IDN policies. We use this IDN to test if the
email clients support IDN. The second IDN is “goog¯ıe.com”.
This IDN impersonates “google.com”. This IDN represents
homograph IDNs that can bypass browser defense. The third
IDN is “þaidu.com”. This IDN impersonates “baidu.com”.
This IDN represents homograph IDNs that can be detected
by browser policies (e.g., by Chrome). We use those IDNs
as email domain names and send emails to our own accounts
under popular email services. We then examine if the sender
email address will be displayed as Unicode. For email clients
that supported IDN, we found the homograph IDNs were con-
sistently displayed in Unicode. For example, Gmail (web and
mobile) and iCloud (mobile) supported IDN and displayed
homograph IDNs in Unicode in the email sender addresses.
This means attackers can use homograph IDNs to impersonate
trusted senders. This observation is true even for a homograph
IDN that is blocked by web browsers. The results suggest that
email clients have not yet established effective policies to
address homograph IDNs.
For social network applications, we examined how homo-
graph IDNs are displayed in messages and posts. As of May
2020, we tested Facebook, Twitter, Messenger, iMessage, and
Whatsapp with homograph IDN URLs that impersonate popu-
lar brands. We found that almost all of them displayed homo-
graph IDNs in Unicode, except for Facebook (which displayed
Punycode). The result again suggests that most social network
applications do not have IDN defense policies.
Intent of IDN Homograph.
Our measurement shows that
homograph IDNs exist in practice and can bypass browser-
level defenses (Section 3). We did not further analyze the
“intent” of homograph IDN registrations because the browser
policies focus on the impersonation behavior rather than the
intent. According to prior studies, many homograph IDNs
are registered by opportunistic domain squatters who seek
to sell the domain name to the target brand for proﬁts [37].
Concrete evidence also shows homograph IDNs are often
used for phishing and abuse [15, 37, 54]. We defer the more
in-depth analysis of the registrants’ intent to future work.
Countermeasures.
Our results suggest the need to im-
prove the defense against homograph IDNs. We discuss the
improvement strategies from two aspects: homograph IDN
detection, and user warnings.
To improve homograph IDN detection, one way is to add
new rules to address the failure cases discovered by our ex-
periments. For example, browsers such as Chrome can extend
the list of target domains (e.g., for skeleton rule), use a more
comprehensive confusable table (instead of the standard Uni-
code confusable table), and increase the number of prohibited
Unicode blocks. Even so, it is difﬁcult for the rules to guar-
antee completeness. For example, the skeleton rule matches
the IDNs against a list of top domain names which do not
cover all the domains. To extend the list (e.g., to cover all
the domains), the immediate challenge is efﬁciency. Consid-
ering the browsers’ need to make decisions in real-time, it
is costly to check the visual similarity between the IDN and
hundreds of millions of domain names. Improving the scala-
bility of the skeleton matching is an open challenge for future
work. In addition, stricter policy may also hurt legitimate
IDNs that have mixed Unicode characters. As mentioned in
Section 3, script mixing is also common among legitimate
domains (34.4% of the IDNs have script mixing). As such, to
add new script-mixing rules, browser vendors must carefully
assess their impact on legitimate IDNs.
In addition to browsers, another line of defense is domain
registrars. Since domain registrars do not have to approve
domain registration in a real-time, it is more feasible for do-
main registrars to run an extensive visual comparison against
existing domain names before a (homograph) IDN can be reg-
istered. Certain domain registrars already have some prelimi-
nary rules in place (e.g., mostly to prevent script mixing) [2].
Related to IDN homograph detection, a key question is
how to communicate the detection decision to end users (i.e.,
user warnings). For example, besides showing the Punycode,
Chrome also shows a warning page to ask users: “Did you
mean [the real domain name]?” with a short explanation
of the reason for showing the warning [9]. Such a warning
page is not yet available in other browsers. Future research
can examine the effectiveness of such warnings, and further
explore the warning design space. Note that user warnings
still depend on accurate detection methods — if the browser
misses the detection of a homograph IDN, the warning page
may not be triggered.
Finally, browsers may take a more extreme approach by
disabling IDNs by default. For users who can beneﬁt from
the support of IDNs (e.g, users speaking certain languages),
browsers can prompt users to enable the IDN support for a
small set of related Unicode scripts.
Responsible Disclosure. We have reported our ﬁndings
to the corresponding bug/security teams of Chrome, Safari
and Firefox. Microsoft IE uses Chromium, and thus is also
covered. Chrome and Firefox have started to investigate and
address the reported issues. Safari’s team has not responded.
8 Related Work
Domain Squatting.
Domain squatting generally refers to
the behavior of registering Internet domains with the names
similar to existing brands and trademarks. While most do-
main squatting activities are driven by proﬁts (i.e., to sell the
domain name to the target brand for a high price), some of
the squatting domain names are found to be used for phishing
or distributing malware [21, 47, 64]. To mimic a target brand,
squatting domain names can be generated by creating a typo
(i.e., typo squatting) [4, 44, 62], ﬂipping a bit (i.e., bit squat-
ting) [47], or using a hyphen to connect related keywords (i.e.,
combo-squatting) [29]. Another strategy is to register look-
alike domain names of popular brands under newly released
TLDs [20,21,30,52]. A recent work shows that such imperson-
ation also occurred in TLS certiﬁcates [58]. Our work focuses
on IDN homograph, which is a form of web homograph via
character substitution [25]. Although IDN homograph is not
necessarily the most prevalent domain squatting method (e.g.,
combo-squatting is more prevalent [64]), empirical results
show that IDNs can be used to construct highly deceptive
phishing websites [35, 37, 74]).
IDN Homograph.
Prior works have looked into IDN ho-
mograph by conducting empirical measurements. Researchers
ﬁnd that many of the IDNs are owned by domain squat-
ters [35, 37] while some IDNs are used for phishing and
abuse [15, 37, 54]. A related project shows that most users
do not have the knowledge of internationalized domain
names [8], which helps to explain why IDNs can be deceptive.
Compared to prior work [8, 35, 37, 61], our novelty comes
from the detailed analysis of browser-level defense, and the
discovered weaknesses of current IDN policies.
Phishing.
Our work is related to the broad topic of phish-
ing. A large body of prior work has looked into phishing
emails and studied different detection methods [12, 14, 16,
26, 40, 53, 67]. Unlike generic spam emails [55, 70], phishing
emails can be highly targeted and thus are more difﬁcult to de-
tect [24]. To deceive victims, attackers can spoof a trusted do-
main name as the sender email address [7, 27] or directly use
squatting domain names [31,33]. Our work is more closely re-
lated to phishing websites, which are usually the landing pages
of the URLs in phishing emails [11, 22, 48, 50, 51, 68, 71–73].
A recent project looks into the end-to-end life cycle of phish-
ing attacks by jointly analyzing phishing URLs, websites, and
phishing emails [49].
Security Indicators on URLs.
Researchers have exam-
ined how users perceive and react to different URL presenta-
tions in browsers under security contexts. Most studies have
reported negative results. For example, a recent study shows
HTTPS Extended Validation (EV) certiﬁcate has little impact
on users’ security behavior [63]. In addition, prior work shows
that domain name highlighting has limited effectiveness in
warning users about malicious URLs [13, 36]. A closely re-
lated project looks into how different URL obfuscation meth-
ods (including IND homograph) affect users’ ability to judge
the authenticity of URLs [57]. The overall results are consis-
tent with ours, showing that users have difﬁculties to correctly
recognize obfuscated URLs. Compared with [57], our user
study further examines the differences in users’ perceptions
of homograph IDNs blocked by browsers and those that can
bypass existing defenses. In addition, our results highlight the
need to improve the detection of IDN homograph, which is
the prerequisite for effective user warning.
9 Conclusion
In this paper, we present a detailed analysis of browsers’ de-
fense policies against IDN homograph. Using more than
9,000 testing cases, we measure the effectiveness of IDN
policies in existing web and mobile browsers and their histori-
cal versions from 2015 to 2020. We show that browsers’ IDN
policies are not yet effective to detect homograph IDNs. Our
user studies show that the homograph IDNs that can bypass
browsers’ defense are still highly deceptive to users. Overall,
the results highlight the need to improve the defense policies.
Acknowledgment
We would like to thank our shepherd Nick Nikiforakis and
anonymous reviewers for their constructive comments and
suggestions. This work was supported in part by NSF grants
CNS-2030521, CNS-1717028 and CNS-1652497.
References
[1] Alexa top 1 million websites. https://www.alexa.com/
topsites.
[2] Idn registration rules of verisign, 2020.
https:
//www.verisign.com/en_US/channel-resources/
domain-registry-products/idn/idn-policy/
registration-rules/index.xhtml.
[3] Perceptual hash, 2020. https://www.phash.org/.
[4] Pieter Agten, Wouter Joosen, Frank Piessens, and Nick Niki-
forakis. Seven months’ worth of mistakes: A longitudinal study
of typosquatting abuse. In Proc. of NDSS, 2015.
[5] Apple.
About safari
international domain name sup-
https://support.apple.com/kb/TA22996?
port, 2016.
locale=en_US&viewlocale=en_US.
[6] Patricia Callejo, Rubén Cuevas, and Áangel Cuevas. An Ad-
driven measurement technique for monitoring the browser mar-
ketplace. IEEE Access, 7, 2019.
[7] Jianjun Chen, Vern Paxson, and Jian Jiang. Composition
kills: A case study of email sender authentication. In Proc. of
USENIX Security, 2020.
[8] Daiki Chiba, Ayako Akiyama Hasegawa, Takashi Koide, Yuta
Sawabe, Shigeki Goto, and Mitsuaki Akiyama. Domainscouter:
Understanding the risks of deceptive IDNs. In Proc. of RAID,
2019.
[9] Catalin Cimpanu. Google chrome to get warnings for
lookalike urls, 2019. https://www.zdnet.com/article/
google-chrome-to-get-warnings.
[10] Adam Costello. Punycode: A bootstring encoding of uni-
code for internationalized domain names in applications
(IDNA). RFC 3492, 2003.
https://tools.ietf.org/
html/rfc3492.
[11] Qian Cui, Guy-Vincent Jourdan, Gregor V. Bochmann, Russell
Couturier, and Iosif-Viorel Onut. Tracking phishing attacks
over time. In Proc. of WWW, 2017.
[12] Prateek Dewan, Anand Kashyap, and Ponnurangam Ku-
maraguru. Analyzing social and stylometric features to identify
spear phishing emails. In Proc. of eCrime, 2014.
[13] Rachna Dhamija, J. D. Tygar, and Marti Hearst. Why phishing
works. In Proc. of CHI, 2006.
[14] Sevtap Duman, Kubra Kalkan-Cakmakci, Manuel Egele,
William K. Robertson, and Engin Kirda.
Emailproﬁler:
Spearphishing ﬁltering with header and stylometric features of
emails. In Proc. of COMPSAC, 2016.
[15] Yahia Elsayed and Ahmed Shosha. Large scale detection of
IDN domain name masquerading. In Proc. of eCrime, 2018.
[16] Ian Fette, Norman Sadeh, and Anthony Tomasic. Learning to
detect phishing emails. In Proc. of WWW, 2007.
[17] Mattias Geniar.
Show idn punycode in ﬁrefox to
avoid phishing urls, 2018.
https://ma.ttias.be/
show-idn-punycode-firefox-avoid-phishing-urls/.
Internationalized domain names (IDN) in google
https://chromium.googlesource.com/
chrome, 2020.
chromium/src/+/master/docs/idn.md.
[18] Google.
[19] Google. Tesseract orc, 2020. https://opensource.google/
projects/tesseract.
[20] Tristan Halvorson, Matthew F. Der, Ian Foster, Stefan Savage,
Lawrence K. Saul, and Geoffrey M. Voelker. From .academy