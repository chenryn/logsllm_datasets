# A Composable Cryptographic Library with Nested Operations

**Authors:**
- Michael Backes, IBM Research Division, Rüschlikon, Switzerland
- Birgit Pfitzmann, IBM Research Division, Rüschlikon, Switzerland
- Michael Waidner, IBM Research Division, Rüschlikon, Switzerland

## Abstract
We present the first idealized cryptographic library that can be used in a manner similar to the Dolev-Yao model for automated proofs of cryptographic protocols involving nested cryptographic operations. This library comes with a cryptographic implementation that is provably secure under active attacks.

## Categories and Subject Descriptors
E.3 [Data]: Data Encryption; F.1.2 [Theory of Computation]: Computation by Abstract Devices, Modes of Computation

## General Terms
Security, Theory, Verification

## Keywords
Cryptography, Simulatability, Security Analysis of Protocols, Cryptographically Composable Operators

## 1. Introduction
Many practically relevant cryptographic protocols, such as SSL/TLS, S/MIME, IPSec, and SET, use cryptographic primitives like signature schemes or encryption in a black-box manner, while adding numerous non-cryptographic features. Vulnerabilities have been a persistent issue in the design of such protocols, from early authentication protocols like Needham-Schroeder to current widely deployed products like Microsoft Passport. Proving the security of these protocols has been challenging.

### 1.1. Cryptographic Approach
One approach to proving the security of such protocols is through reduction proofs, which show that if the overall system can be broken, then one of the underlying cryptographic primitives can also be broken according to their cryptographic definitions. For example, adaptive chosen-message security for signature schemes. While this approach is rigorous, it is highly error-prone due to the complexity of distributed systems and the need to consider all possible interleavings of actions. This makes hand-made proofs extremely difficult and prone to errors.

### 1.2. Formal Methods
Another approach is to use formal methods, where proof tasks are delegated to machines such as model checkers or automatic theorem provers. This involves encoding the cryptographic protocols into the language of these tools. However, none of these tools currently support reduction proofs. The Dolev-Yao model, which represents cryptographic primitives as operators in a term algebra with cancellation rules, has been widely used. For instance, public-key encryption is represented by encryption (E) and decryption (D) operators with the rule \( D(E(m)) = m \). While this model simplifies protocol analysis, it lacks a solid foundation for real cryptographic primitives, leading to potential security gaps when implemented.

### 1.3. Recent Developments
Three years ago, efforts began to bridge the gap between the cryptographic and formal methods approaches. Works like [46, 48] defined general cryptographic models that support secure idealization under arbitrary environments and active attacks, while [2] justified the Dolev-Yao model to some extent. Our paper is the first to offer a provably secure variant of the Dolev-Yao model that covers both active attacks and nested cryptographic operations. This is essential because most cryptographic protocols are vulnerable to active attacks, and the Dolev-Yao model is often used to represent nested protocol messages.

### 1.4. Design Decisions
The primary design decision was how to represent an idealized cryptographic term and its corresponding real message in a way that supports both nesting and general active attacks. We achieve this using handles, which point to Dolev-Yao-like terms in the ideal system and to real cryptographic messages in the real system. Our model for storing these terms is stateful and includes knowledge of who knows which terms, making our ideal cryptographic library more akin to the CSP or Strand-space Dolev-Yao models.

### 1.5. Proof Techniques
The bulk of the work involved proving that the real cryptographic library securely implements the ideal one. This required a novel proof technique combining probabilistic, imperfect bisimulation with static information-flow analysis, followed by cryptographic reduction proofs for error sets of traces where the bisimulation did not work. This proof, while tedious, is intended to justify the use of the ideal cryptographic library for future protocol proofs with higher assurance using automatic tools.

### 1.6. Further Related Literature
Both the cryptographic and idealizing approaches to proving cryptographic systems started in the early 1980s. Early examples include [33, 34], and applied to protocols, these techniques are most effective for small protocols with some interaction between cryptographic primitives. Automated proof methods based on the Dolev-Yao model have evolved, with recent work focusing on using general-purpose model checkers and theorem provers.

Efforts to bridge the gap between the cryptographic approach and automated tools began independently with [46, 48] and [2]. These works considered Dolev-Yao terms with nested operations but were limited to passive adversaries. Our cryptographic library overcomes these limitations by supporting nested operations, being secure against active attacks, and working in the context of arbitrary interactive protocols.

### 1.7. Overview of the Ideal Cryptographic Library
The ideal cryptographic library provides abstract cryptographic operations such as encryption, decryption, signature generation, and nonce generation. These commands have a simple, deterministic semantics based on state, stored in a "database" with entries for each operation and pointers to their arguments. Each entry also contains handles for participants who know the entry, serving as a supply of global and local names for cryptographic objects. The library does not allow cheating, ensuring that commands are executed correctly and securely.

This work exemplifies the usefulness of the cryptographic library by providing the first cryptographically sound security proof of the well-known Needham-Schroeder-Lowe protocol. The proof, relying on idealizations of cryptography, is suitable for formal proof tools and demonstrates the advantages of our approach.