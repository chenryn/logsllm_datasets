sign paradigm, based on the simple idea of signing twice
(or more) identical or related short messages. We believe
that our ﬁrst investigations show that this is a promising
strategy, deserving further study.
A number of interesting questions remain open. First,
from the eﬃciency point of view, which is a frequent concern,
we are aware that the current proposals do not deal with
either the computational cost, or the communication load, in
an eﬃcient way. Thus, for example, can the number of ﬁelds
(cid:2)}) to
in a twin DSA be reduced from four ({c, d} and {c
(cid:2)
three or less? Can we also suppress some ﬁelds in the twin-
GHR, or sign k-bit long messages with only two signatures?
, d
25Finally, can an increase in the number of signatures (e.g.
[16] NIST. Digital Signature Standard (DSS). Federal
three instead of two) yield better security bounds?
7. REFERENCES
[1] M. Abe and T. Okamoto. A Signature Scheme with
Message Recovery as Secure as Discrete Logarithm. In
Asiacrypt ’99, LNCS 1716. Springer-Verlag, Berlin,
1999.
[2] N. Bari´c and B. Pﬁtzmann. Collision-Free
Accumulators and Fail-Stop Signature Schemes
without Trees. In Eurocrypt ’97, LNCS 1233, pages
480–484. Springer-Verlag, Berlin, 1997.
[3] M. Bellare and P. Rogaway. Random Oracles Are
Practical: a Paradigm for Designing Eﬃcient
Protocols. In Proc. of the 1st CCS, pages 62–73. ACM
Press, New York, 1993.
Information Processing Standards PUBlication 186,
November 1994.
[17] K. Nyberg and R. A. Rueppel. Message Recovery for
Signature Schemes Based on the Discrete Logarithm
Problem. In Eurocrypt ’94, LNCS 950, pages 182–193.
Springer-Verlag, Berlin, 1995.
[18] J. M. Pollard. Monte Carlo Methods for Index
Computation (mod p). Mathematics of Computation,
32(143):918–924, July 1978.
[19] R. Rivest, A. Shamir, and L. Adleman. A Method for
Obtaining Digital Signatures and Public Key
Cryptosystems. Communications of the ACM,
21(2):120–126, February 1978.
[20] C. P. Schnorr. Eﬃcient Signature Generation by
Smart Cards. Journal of Cryptology, 4(3):161–174,
1991.
[4] J.-S. Coron and D. Naccache. Security Analysis of the
[21] V. Shoup. Lower Bounds for Discrete Logarithms and
Gennaro-Halevi-Rabin Signature Scheme. In
Eurocrypt ’99, LNCS 1592, pages 91–101.
Springer-Verlag, Berlin, 1999.
[5] R. Cramer and V. Shoup. Signature Scheme based on
the Strong RSA Assumption. In Proc. of the 6th CCS,
pages 46–51. ACM Press, New York, 1999.
[6] T. El Gamal. A Public Key Cryptosystem and a
Signature Scheme Based on Discrete Logarithms.
IEEE Transactions on Information Theory,
IT–31(4):469–472, July 1985.
[7] E. Fujisaki and T. Okamoto. Statistical Zero
Knowledge Protocols to Prove Modular Polynomial
Relations. In Crypto ’97, LNCS 1294, pages 16–30.
Springer-Verlag, Berlin, 1997.
[8] R. Gennaro, S. Halevi, and T. Rabin. Secure
Hash-and-Sign Signature Without the Random
Oracle. In Eurocrypt ’99, LNCS 1592, pages 123–139.
Springer-Verlag, Berlin, 1999.
[9] S. Goldwasser, S. Micali, and R. Rivest. A Digital
Signature Scheme Secure Against Adaptative
Chosen-Message Attacks. SIAM Journal of
Computing, 17(2):281–308, April 1988.
[10] IEEE P1363. Standard Speciﬁcations for Public Key
Cryptography. Available from
http://grouper.ieee.org/groups/1363, August
1998.
[11] M. Jakobsson and C. P. Schnorr. Security of Discrete
Logarithm Cryptosystems in the Random Oracle
Model and Generic Model. Available from
http://www.bell-labs.com/~markusj, 1998.
[12] H. Krawczyk and T. Rabin. Chameleon Hashing and
Signatures. In Proc. of NDSS ’2000. Internet Society,
2000.
[13] A. Menezes, P. van Oorschot, and S. Vanstone.
Handbook of Applied Cryptography. CRC Press, 1996.
Available from
http://www.cacr.math.uwaterloo.ca/hac/.
[14] D. M’Ra¨ıhi and D. Naccache. Batch Exponentiation –
A Fast DLP-based Signature Generation Strategy. In
Proc. of the 3rd CCS, pages 58–61. ACM Press, New
York, 1996.
[15] V. I. Nechaev. Complexity of a Determinate
Algorithm for the Discrete Logarithm. Mathematical
Notes, 55(2):165–172, 1994.
Related Problems. In Eurocrypt ’97, LNCS 1233,
pages 256–266. Springer-Verlag, Berlin, 1997.
APPENDIX
A. TWIN SIGNATURES
WITH MESSAGE RECOVERY
In this appendix, we describe a twin version of the Nyberg-
Rueppel scheme [17] which provides message recovery. Keep-
ing the notations of section 4.1:
1. Generate a random number u, 1 ≤ u < r.
2. Compute c ← σ(u) + m mod r. If c = 0 go to step 1.
3. Compute an integer d ← u − cx mod r.
4. Output the pair {c, d} as the signature.
In the above, f is what is called in [10] a message with
appendix. It simply means that it has an adequate redun-
dancy. The corresponding veriﬁcation is performed by the
following (generic) steps:
1. If c (cid:13)∈ [1, r − 1] or d (cid:13)∈ [0, r − 1], output invalid and stop.
2. Obtain σ(d + cx) from the oracle and compute γ ←
3. Check the redundancy of m ← c − γ mod r.
If in-
correct output invalid and stop; otherwise output the
reconstructed message m, output valid and stop.
σ(d + cx) mod r .
(cid:2)
?
= m
.
In the twin setting, signature generation is alike but is per-
formed twice, so as to output two distinct signatures. How-
ever, no redundancy is needed. The veriﬁer simply checks
that the signatures are distinct and outputs two successive
(cid:2)
It returns valid
versions of the message, say m and m
and invalid otherwise. The security proof is
if m
sketched here, we leave the discussion of adaptive attacks
to the reader.
We keep the notations and assumptions of section 4 and
let A be a generic attacker over Γ which outputs, on input
(cid:2)} and runs the
{σ(1), σ(x)}, two signature pairs {c, d}, {c
(cid:2)
verifying algorithm that produces from these signatures two
messages m, m
and checks whether they are equal. We
wish to show that, if x ∈ Γ and an encoding σ are chosen at
(cid:2)
random, then the probability that m = m
As before, we restrict our attention to behaviors of the full
algorithm corresponding to safe sequences {z1,··· , zn, y}.
is O(tn2/r).
, d
(cid:2)
26candidate is τ ∼
= 5 log2 k, and less than 20k primality tests
have to be performed.
B.3 Extensions
B.3.1 Collision-resistance:
To sign large messages (at the cost of extra assumptions),
one can of course use any collision-resistant hash-function h
before signing (using the classical hash-and-sign technique).
Clearly, the new function m (cid:20)→ p(h(m)) is not mathemati-
cally injective, but just computationally injective (which is
equivalent to collision-resistance), which is enough for the
proof.
B.3.2 Division intractability:
If one wants to improve eﬃciency, using the division-
intractability conjecture proposed in [8], any function that
outputs k-bit strings can be used instead of p. More pre-
cisely:
Deﬁnition (Division Intractability). A function H is
said (n, ν, τ )-division intractable if any adversary which runs
in time τ cannot ﬁnd, with probability greater than ν, a set
of elements a1, . . . , an and b such that H(b) divides the
product of all the H(ai).
As above, that function p would not be injective, but just
collision-resistant, which is enough to prove the following:
Theorem 4. Let us consider the twin-GHR scheme where
p is any (q, ε, t)-division-intractable hash function. Let us
assume that an adversary A succeeds in producing an ex-
istential forgery under an adaptively chosen-message attack
within time t and with probability greater than ε, after q
queries to the signing oracle. Then one can either contra-
dict the division-intractability assumption or solve the Flex-
(cid:2)
within a
ible RSA Problem with probability greater than ε
time bound t
(cid:2)
(cid:3)
(cid:2)
, where
ε − q2
2k/2
(cid:2)
ε
=
1
2
(cid:2)
t
= t + O(q × (cid:28)
2 × k).
and
(cid:2)
+ c
(cid:2)
We let P , Q be the polynomials d + cX and d
X. We
ﬁrst consider the case where either P or Q does not appear
in the Fi list before the signatures are produced.
If this
happens for P , then, P is included in the Fi list at signature
veriﬁcation and the corresponding answer of the oracle is a
random number zi. Since m is computed as c − zi mod r,
(cid:2)
is bounded by t/r. A similar
the probability that m = m
bound holds for Q.
We now assume that both P and Q appear in the Fi
list before A outputs its signatures. We let i denote the
ﬁrst index such that Fi = P and j the ﬁrst index such
that Fj = Q. Note that both Fi and Fj are unmarked (as
(cid:2)
deﬁned in section 3.1). If i = j, then we obtain that c = c
(cid:2)
and d = d
. From this, it follows that the signatures are not
distinct.
As in section 4, we are left with the case where i (cid:13)= j
and we deﬁne Ωi,j, i < j, to be the set of safe sequences
producing two signatures such that the polynomials P , Q,
deﬁned as above appear for the ﬁrst time before the al-
gorithm outputs the signatures, as Fi and Fj. We show
that, for any ﬁxed value w = {z1,··· , zj−1}, Ωi,j ∩ ˆw has
probability ≤ t/r, where ˆw is deﬁned as above. Since we
(cid:2) − zj mod r, we obtain
have m = c − zi mod r and m
(cid:2) − c + zi mod r, from which the upper bound follows.
zj = c
From this bound, we obtain that the probability of Ωi,j is at
most t/r and, taking the union of the various Ωi,js, we con-
clude that the probability to obtain a valid twin signature
is at most O(tn2/r).
= c
(cid:2)
B. THE CHOICE OF FUNCTION P
B.1 A Candidate
The following is a natural candidate:
p : {0, 1}k → P
m (cid:20)→ nextprime(m × 2
τ
)
where τ is suitably chosen to guarantee the existence of a
prime in any set [m × 2τ , (m + 1) × 2τ [, for m < 2k.
Note that the deterministic property of nextprime is not
mandatory, one just needs it to be injective. But then, the
preimage must be easily recoverable from the prime: the
exponent is sent as the signature, from which one checks
the primality and extracts the message (message-recovery).
B.2 Analysis
It is clear that any generator of random primes, using m as
a seed, can be considered as a candidate for p. The function
proposed above is derived from a technique for accelerating
prime generation called incremental search (e.g. [13], page
148).
1. Input: an odd k-bit number n0 (derived from m)
2. Test the s numbers n0, n0 + 2, . . . , n0 + 2(s − 1) for
primality
−2c, for large k.
Under reasonable number-theoretic assumptions, if s =
c· ln 2k, the probability of failure of this technique is smaller
than 2e
Using our notations, in such a way that there exists at
least a prime in any set [m × 2τ , (m + 1) × 2τ [, but with
−80, we obtain from above formu-
lae that c ∼
probability smaller than 2
= 40, and 2τ ≥ 40 ln 2k+τ +1. Therefore, a suitable
27