---
author: Lee Eason
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 1
  viewnum: 3131
date: '2018-11-05 10:22:39'
editorchoice: false
excerpt: 推动大规模的组织变革是一个痛苦的过程。对于 DevOps 来说，尽管也有阵痛，但变革带来的价值则相当可观。
fromurl: https://opensource.com/article/18/10/tales-devops-transformation
id: 10196
islctt: true
largepic: /data/attachment/album/201811/05/102242f22hd19lq6d93d06.png
permalink: /article-10196-1.html
pic: /data/attachment/album/201811/05/102242f22hd19lq6d93d06.png.thumb.jpg
related: []
reviewer: pityonline
selector: lujun9972
summary: 推动大规模的组织变革是一个痛苦的过程。对于 DevOps 来说，尽管也有阵痛，但变革带来的价值则相当可观。
tags:
- DevOps
thumb: false
title: 推动 DevOps 变革的三个方面
titlepic: true
translator: HankChow
updated: '2018-11-05 10:22:39'
---
> 
> 推动大规模的组织变革是一个痛苦的过程。对于 DevOps 来说，尽管也有阵痛，但变革带来的价值则相当可观。
> 
> 
> 
![](/data/attachment/album/201811/05/102242f22hd19lq6d93d06.png)
避免痛苦是一种强大的动力。一些研究表明，[植物也会通过遭受疼痛的过程](https://link.springer.com/article/10.1007%2Fs00442-014-2995-6)以采取措施来保护自己。我们人类有时也会刻意让自己受苦——在剧烈运动之后，身体可能会发生酸痛，但我们仍然坚持运动。那是因为当人认为整个过程利大于弊时，几乎可以忍受任何事情。
推动大规模的组织变革的过程确实是痛苦的。有人可能会因难以改变价值观和行为而感到痛苦，有人可能会因难以带领团队而感到痛苦，也有人可能会因难以开展工作而感到痛苦。但就 DevOps 而言，我可以说这些痛苦都是值得的。
我也曾经关注过一个团队耗费大量时间优化技术流程的过程，在这个过程中，团队逐渐将流程进行自动化改造，并最终获得了成功。
![Improvements after DevOps transformation](/data/attachment/album/201811/05/102242qcz2mgyy2hgzobsr.png "Improvements after DevOps transformation")
图片来源：Lee Eason. CC BY-SA 4.0
这张图表充分表明了变革的价值。一家公司在我主导实行了 DevOps 转型之后，60 多个团队每月提交了超过 900 个发布请求。这些工作量的原耗时高达每个月 350 人/天，而这么多的工作量对于任何公司来说都是不可忽视的。除此以外，他们每月的部署次数从 100 次增加到了 9000 次，高危 bug 减少了 24%，工程师们更轻松了， 净推荐值   Net Promoter Score （NPS）也提高了，而 NPS 提高反过来也让团队的 DevOps 转型更加顺利。正如 [Puppet 发布的 DevOps 报告](https://puppet.com/resources/whitepaper/state-of-devops-report)所预测的，用在技术流程改进上的投入可以在业务成果上明显地体现出来。
而 DevOps 主导者在推动变革时必须关注这三个方面：团队管理，团队文化和团队活力。
### 团队管理
最重要的是，改进对技术流程的投入可以转化为更好的业务成果。
组织架构越大，业务领导与一线员工之间的距离就会越大，当然发生误解的可能性也会越大。而且各种技术工具和实际应用都在以日新月异的速度变化，这就导致业务领导几乎不可能对 DevOps 或敏捷开发的转型方向有一个亲身的了解。
DevOps 主导者必须和管理层密切合作，在进行决策的时候给出相关的意见，以帮助他们做出正确的决策。
公司的管理层只是知道 DevOps 会对产品部署的方式进行改进，而并不了解其中的具体过程。假设你正在帮助一个软件开发团队实现自动化部署，当管理层得知某次部署失败时（这种情况是有的），就会想要了解这件事情的细节。如果管理层了解到进行部署的是软件团队而不是专门的发布管理团队，就可能会坚持使用传统的变更流程来保证业务的正常运作。你可能会失去团队的信任，团队也可能不愿意做出进一步的改变。