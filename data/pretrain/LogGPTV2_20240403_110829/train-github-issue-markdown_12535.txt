I made a simple example script to showcase what I experienced
    import requests
    import time
    print('About to do a request that will timeout')
    start_time = int(time.time())
    try:
        response = requests.get('http://www.google.com:81/', timeout=4)
    except requests.exceptions.RequestException as e:
        print(f'Exception: {str(e)}')
    elapsed_secs = int(time.time()) - start_time
    print(f'After request that should timeout. Elapsed seconds: {elapsed_secs}')
## Expected Result
I expected this to timeout after 4 seconds and per the given timeout.
## Actual Result
What happens instead is that the timeout exception is raised after 2x the
given timeout argument.
    About to do a request that will timeout
    Exception: HTTPConnectionPool(host='www.google.com', port=81): Max retries exceeded with url: / (Caused by ConnectTimeoutError(, 'Connection to www.google.com timed out. (connect timeout=4)'))
    After request that should timeout. Elapsed seconds: 8
## System Information
    $ python -m requests.help
    {
      "chardet": {
        "version": "4.0.0"
      },
      "cryptography": {
        "version": ""
      },
      "idna": {
        "version": "2.10"
      },
      "implementation": {
        "name": "CPython",
        "version": "3.7.9"
      },
      "platform": {
        "release": "5.10.16-arch1-1",
        "system": "Linux"
      },
      "pyOpenSSL": {
        "openssl_version": "",
        "version": null
      },
      "requests": {
        "version": "2.25.1"
      },
      "system_ssl": {
        "version": "101010af"
      },
      "urllib3": {
        "version": "1.26.3"
      },
      "using_pyopenssl": false
    }