语言实战
Go
Go Go
即便不处理类似可扩展的Web并发或者实时性能等复杂的系统
编程问题，应用程序开发也是一件非常困难的事情。尽管使用一些工
具和框架也可以解决这些常见的问题，但Go语言却以一种更加自然 “探索、学习并使用Go语言的简洁
且高效的方式正确处理了这类问题。由谷歌公司开发的Go语言，为 而全面的指导手册。” 语
语言实战
在基础设施中非常依赖高性能服务的初创公司和大企业提供了足够的 ——摘自Hugo创立者Steven Francia
能力。 为本书写的序 言
本书目标读者是已经有一定其他编程语言经验，想要开始学习
“这本权威的书为所有想要开始学习
Go语言或者更深入了解Go语言及其内部机制的中级开发者。本书 实
会提供一个专注、全面且符合习惯的视角。本书关注Go语言的规范 Go语言的人提供了一站式的指引。” Go
和实现，涉及的内容包括语法、Go的类型系统、并发、通道和测试 ——Sam Zaydel，RackTop Systems 战
等主题。
“写得太好了！完整介绍了Go语言。
IN ACTION
强烈推荐。”
本书主要内容
——Adam McKay，SUEZ
●● Go语言规范和实现。
●● Go语言的类型系统。 “这本书把Go语言不寻常的部分讲
●● Go语言的数据结构的内部实现。 得通俗易懂。”
●● 测试和基准测试。●● ——Alex Vidal，Atlassian的HipChat团队
●William●Kennedy●●
〔美〕●●●●●●B●●r●i●a●●n●●●●K●●e●●t●e●●l●s●●e●●n●●●●●●●著
本书假设读者是熟练使用其他语言（如Java、Ruby、Python、
Erik●St.●Martin
C#或者C++）的开发者。
李兆海●●●译
William Kennedy是一位熟练的软件开发者，也是博客GoingGo. 谢孟军●●审校
Net的作者。Brian Ketelsen和Erik St. Martin是全球Go
语言大会GopherCon的组织者，也是Go语言框架Skynet的联合作者。
美术编辑：董志桢
分类建议：计算机／程序设计／Go语言
人民邮电出版社网址：www.ptpress.com.cn
FM44535Go语言实战.indd 1-3 17-1-19 下午2:38
Go
语言实战
Go
IN ACTION
William Kennedy
〔美〕 B r i a n K e t e l s e n 著
Erik St. Martin
李兆海 译
谢孟军 审校
人 民 邮 电 出 版 社
FM44535Go语言实战.indd 4 17-1-19 下午2:36
 著 [美] William Kennedy Brian Ketelsen Erik St. Martin
译 李兆海
审 校 谢孟军
责任编辑 杨海玲
责任印制 焦志炜
 人民邮电出版社出版发行 北京市丰台区成寿寺路11号
邮编 100164 电子邮件 PI:EMAIL
网址 http://www.ptpress.com.cn
北京昌平百善印刷厂印刷
 开本：8001000 1/16
印张：15.25
字数：326千字 2017年3月第1版
印数：1 – 4 000册 2017年3月北京第1次印刷
著作权合同登记号 图字：01-2015-8787 号
定价：59.00元
读者服务热线：(010)81055410 印装质量热线：(010)81055316
反盗版热线：(010)81055315
译者序
Go语言是由谷歌公司在2007年开始开发的一门语言，目的是能在多核心时代高效编写网络
应用程序。Go语言的创始人Robert Griesemer、Rob Pike和Ken Thompson都是在计算机发展过程
中作出过重要贡献的人。自从2009年11月正式公开发布后，Go语言迅速席卷了整个互联网后端
开发领域，其社区里不断涌现出类似vitess、Docker、etcd、Consul等重量级的开源项目。
在 Go 语言发布后，我就被其简洁、强大的特性所吸引，并于 2010 年开始在技术聚会上宣
传Go语言，当时所讲的题目是《Go语言：互联网时代的C》。现在看来，Go语言确实很好地
解决了互联网时代开发的痛点，而且入门门槛不高，是一种上手容易、威力强大的工具。试想一
下，不需要学习复杂的异步逻辑，使用习惯的顺序方法，就能实现高性能的网络服务，并充分利
用系统的多个核心，这是多么美好的一件事情。
本书是国外Go社区多年经验积累的成果。本书默认读者已经具有一定的编程基础，希望更
好地使用Go语言。全书以示例为基础，详细介绍了Go语言中的一些比较深入的话题。对于有经
验的程序员来说，很容易通过学习书中的例子来解决自己实际工作中遇到的问题。辅以文字介绍，
读者会对相关问题有更系统的了解和认识。翻译过程中我尽量保持了原书的叙述方法，并加强了
叙述逻辑，希望读者会觉得清晰易读。
在翻译本书的过程中，感谢人民邮电出版社编辑杨海玲老师的指导和进度安排，让本书能
按时与读者见面。感谢谢孟军对译稿的审校，你的润色使译文读起来流畅了很多。尤其要感谢
我老婆对我的支持，感谢你能理解我出于热爱才会“匍匐”在计算机前码字。
最后，感谢读者购买此书。希望读者在探索Go语言的道路上，能够享受到和我一样的乐趣。
序
在计算机科学领域，提到不同寻常的人，总会有一些名字会闪现在你的脑海中。Rob Pike、
Robert Griesmier和Ken Thompson就是其中几个。他们3个人负责构建过UNIX、Plan 9、B、Java
的JVM HotSpot、V8、Strongtalk①、Sawzall、Ed、Acme 和 UTF8，此外还有很多其他的创造。
在2007年，这3个人凑在一起，尝试一个伟大的想法：综合他们多年的经验，借鉴已有的语言，
来创建一门与众不同的、全新的系统语言。他们随后以开源的形式发布了自己的实验成果，并将
这种语言命名为“Go”。如果按照现在的路线发展下去，这门语言将是这3个人最有影响的一项
创造。
当人们聚在一起，纯粹是为了让世界变得更好的时候，往往也是他们处于最佳状态的时候。
在2013年，为了围绕Go语言构建一个更好的社区，Brian和Erik联合成立了Gopher Academy，
没过多久，Bill和其他一些有类似想法的人也加入迚来。他们首先注意到，社区需要有一个地方
可以在线聚集和分享素材，所以他们在slack创立了Go讨论版和Gopher Academy博客。随着时
间的推移，社区越来越大，他们创建了世界上第一个全球 Go 语言大会—GopherCon。随着与
社区更深入地交流，他们意识到还需要为广大想学习这门新语言的人提供一些资源，所以他们开
始着手写一本书，就是现在你手里拿的这本书。
为Go社区贡献了大量的时间和精力的3位作者，出于对Go语言社区的热爱写就了这本书。
我曾在Bill、Brian和Erik身边，见证了他们在不同的环境和角色（作为Gopher Academy博客的
编辑，作为大会组织者，甚至是在他们的日常工作中，作为父亲和丈夫）下，都会认真负责地撰
写和修订本书。对他们来说，这不仅仅是一本书，也是对他们心爱的语言的献礼。他们并不满足
于写就一本“好”书。他们编写、审校，再写、再修改，再三推敲每页文字、每个例子、每一章，
直到认为本书的内容配得上他们珍视的这门语言。
离开一门使用舒服、掌握熟练的语言，去学习一门不仅对自己来说，对整个世界来说都是全
新的语言，是需要勇气的。这是一条人迹罕至，沿途充满bug，只有少数先行者熟悉的路。这里
① 一个高性能强类型的Smalltalk实现。——译者注
ii 序
充满了意外的错误，文档不明确或者缺失，而且缺少可以拿来即用的代码库。这是拓荒者、先锋
才会选择的道路。如果你正在读这本书，那么你可能正在踏上这段旅途。
本书自始至终是为你—本书的读者精心制作的一本探索、学习和使用Go语言的简洁而全
面的指导手册。在全世界，你也不会找到比 Bill、Brian 和 Erik 更好的导师了。我非常高兴你能
开始探索Go语言的优点，期望能在线上和线下大会上遇到你。
Steve Francia
Go语言开发者，Hugo、Cobra、Viper和SPF13-VIM的创建人
前言
那是2013年10月，我刚刚花几个月的时间写完GoingGo.net博客，就接到了Brian Ketelsen
和Erik St. Martin的电话。他们正在写这本书，问我是否有兴趣参与迚来。我立刻抓住机会，参
与到写作中。当时，作为一个Go语言的新手，这是我迚一步了解这门语言的好机会。毕竟，与
Brian和Erik一起工作、一起分享获得的知识，比我从构建博客中学到的要多得多。
完成前4章后，我们在Manning早期访问项目（MEAP）中发布了这本书。很快，我们收到
了来自语言团队成员的邮件。这位成员对很多细节提供了评审意见，还附加了大量有用的知识、
意见、鼓励和支持。根据这些评审意见，我们决定从头开始重写第2章，并对第4章迚行了全面
修订。据我们所知，对整章迚行重写的情况并不少见。通过这段重写的经历，我们学会要依靠社
区的帮助来完成写作，因为我们希望能立刻得到社区的支持。
自那以后，这本书就成了社区努力的成果。我们投入了大量的时间研究每一章，开发样例代
码，并和社区一起评审、讨论并编辑书中的材料和代码。我们尽了最大的努力来保证本书在技术
上没有错误，让代码符合通用习惯，并且使用社区认为应该有的方式来教Go语言。同时，我们
也融入了自己的思考、自己的实践和自己的指导方式。
我们希望本书能帮你学习Go语言，不仅是当下，就是多年以后，你也能从本书中找到有用
的东西。Brian、Erik 和我总会在线上帮助那些希望得到我们帮助的人。如果你购买了本书，谢
谢你，来和我们打个招呼吧。
William Kennedy
致谢
我们花了18个月的时间来写本书。但是，离开下面这些人的支持，我们不可能完成这本书：
我们的家人、朋友、同学、同事以及导师，整个Go社区，还有我们的出版商Manning。
当你开始撰写类似的书时，你需要一位编辑。编辑不仅要分享喜悦与成就，而且要不惜一切
代价，帮你渡过难关。Jennifer Stout，你才华横溢，善于指导，是很棒的朋友。感谢你这段时间
的付出，尤其是在我们最需要你的时候。感谢你让这本书变成现实。还要感谢为本书的开发和出
版作出贡献的Manning的其他人。
每个人都不可能知晓一切，所以需要社区里的人付出时间和学识。感谢Go社区以及所有参
与本书不同阶段书稿评审并提供反馈的人。特别感谢Adam McKay、Alex Basile、Alex Jacinto、
Alex Vidal、Anjan Bacchu、Benoît Benedetti、Bill Katz、Brian Hetro、Colin Kennedy、Doug Sparling,、
Jeffrey Lim、Jesse Evans、Kevin Jackson、Mark Fisher、Matt Zulak、Paulo Pires、Peter Krey、Philipp
K. Janert、Sam Zaydel以及Thomas O’Rourke。还要感谢Jimmy Frasché，他在出版前对本书书稿
做了快速、准确的技术审校。
这里还需要特别感谢一些人。
Kim Shrier，从最开始就在提供评审意见，并花时间来指导我们。我们从你那里学到了很多，
非常感谢。因为你，本书在技术上达到了更好的境界。
Bill Hathaway在写书的最后一年，深入参与，并矫正了每一章。你的想法和意见非常宝贵。
我们必须给予Bill“第9章合著者”的头衔。没有Bill的参与、天赋以及努力，就没有这一章的
存在。
我们还要特别感谢Cory Jacobson、Jeffery Lim、Chetan Conikee和Nan Xiao为本书持续提供
了评审意见和指导，感谢Gabriel Aszalos、Fatih Arslan、Kevin Gillette和Jason Waldrip帮助评审
样例代码，还要特别感谢Steve Francia帮我们作序，认可我们的工作。
最后，我们真诚地感谢我们的家人和朋友。为本书付出的时间和代价，总会影响到你所
爱的人。
ii 致谢
William Kennedy
我首先要感谢Lisa，我美丽的妻子，以及我的5个孩子：Brianna、Melissa、Amanda、Jarrod
和 Thomas。Lisa，我知道你和孩子们有太多的日夜和周末，缺少丈夫和父亲的陪伴。感谢你让
我这段时间全力投入本书的工作：我爱你们，爱你们每一个人。
我也要感谢我生意上的伙伴Ed Gonzalez、创意经理Erick Zelaya，以及整个Ardan工作室的
团队。Ed，感谢你从一开始就支持我。没有你，我就无法完成本书。你不仅是生意伙伴，还是朋
友和兄长：谢谢你。Erick，感谢你为我、为公司做的一切。我不确定没有你，我们还能不能做到
这一切。
Brian Ketelsen
首先要感谢我的家人在我写书的这4年间付出的耐心。Christine、Nathan、Lauren和Evelyn，
感谢你们在游泳时放过在旁边椅子上写作的我，感谢你们相信这本书一定会出版。
Erik St. Martin
我要感谢我的未婚妻Abby以及我的3个孩子Halie、Wyatt和Allie。感谢你们对我花大量时
间写书和组织会议如此耐心和理解。我非常爱你们，有你们我非常幸运。
还要感谢Bill Kennedy为本书付出的巨大努力，以及当我们需要他的帮助的时候，他总是立
刻想办法组织GopherCon来满足我们的要求。还要感谢整个社区出力评审并给出一些鼓励的话。
关于本书
Go 是一门开源的编程语言，目的在于降低构建简单、可靠、高效软件的门槛。尽管这门语
言借鉴了很多其他语言的思想，但是凭借自身统一和自然的表达，Go 程序在本质上完全不同于
用其他语言编写的程序。Go平衡了底层系统语言的能力，以及在现代语言中所见到的高级特性。
你可以依靠Go 语言来构建一个非常快捷、高性能且有足够控制力的编程环境。使用 Go 语言，
可以写得更少，做得更多。
谁应该读这本书
本书是写给已经有一定其他语言编程经验，并且想学习Go语言的中级开发者的。我们写这
本书的目的是，为读者提供一个专注、全面且符合语言习惯的视角。我们同时关注语言的规范和
实现，涉及的内容包括语法、类型系统，并发、通道、测试以及其他一些主题。我们相信，对于
刚开始学Go语言的人，以及想要深入了解这门语言内部实现的人来说，本书都是极佳的选择。
章节速览
本书由9章组成，每章内容简要描述如下。
 第 1 章快速介绍这门语言是什么，为什么要创造这门语言，以及这门语言要解决什么问
题。这一章还会简要介绍一些Go语言的核心概念，如并发。
 第2章引导你完成一个完整的Go程序，并教你Go作为一门编程语言必须提供的特性。
 第 3 章介绍打包的概念，以及搭建 Go 工作空间和开发环境的最佳实践。这一章还会展
示如何使用Go语言的工具链，包括获取和构建代码。
 第 4 章展示 Go 语言内置的类型，即数组、切片和映射。还会解释这些数据结构背后的
实现和机制。
 第5章详细介绍Go语言的类型系统，从结构体类型到具名类型，再到接口和类型嵌套。这
ii 关于本书
一章还会展示如何综合利用这些数据结构，用简单的方法来设计结构并编写复杂的软件。
第 6 章深入展示 Go 调度器、并发和通道是如何工作的。这一章还将介绍这个方面背后
的机制。
第7章基于第6章的内容，展示一些实际开发中用到的并发模式。你会学到为了控制任
务如何实现一个goroutine池，以及如何利用池来复用资源。
第8章对标准库进行探索，深入介绍3个包，即log、json和io。这一章专门介绍这
3个包之间的某些复杂关系。
第 9 章以如何利用测试和基准测试框架来结束全书。读者会学到如何写单元测试、表组
测试以及基准测试，如何在文档中增加示例，以及如何把这些示例当作测试使用。
关于代码
本书中的所有代码都使用等宽字体表示，以便和周围的文字区分开。在很多代码清单中，代
码被注释是为了说明关键概念，并且有时在正文中会用数字编号来给出对应代码的其他信息。
本书的源代码既可以在 Manning 网站（www.manning.com/books/go-in-action）上下载①，也
可以在GitHub（https://github.com/goinaction/code）上找到这些源代码。
读者在线
购买本书后，可以在线访问由Manning出版社提供的私有论坛。在这个论坛上可以对本书做评论，
咨询技术问题，并得到作者或其他读者的帮助。通过浏览器访问 www.manning.com/books/go-in-action
可以访问并订阅这个论坛。这个网页还提供了注册后如何访问论坛，论坛提供什么样的帮助，以
及论坛的行为准则等信息。
Manning向读者承诺提供一个读者之间以及读者和作者之间交流的场所。Manning并不承诺
作者一定会参与，作者参与论坛的行为完全出于作者自愿（没有报酬）。我们建议你向作者提一
些有挑战性的问题，否则可能提不起作者的兴趣。
只要本书未绝版，作者在线论坛以及早期讨论的存档就可以在出版商的网站上获取到。
关于作者
William Kennedy（@goinggodotnet）是Ardan工作室的管理合伙人。这家工作室位于佛罗里
达州迈阿密，是一家专注移动、Web和系统开发的公司。他也是博客GoingGo.net的作者，迈阿
密Go聚会的组织者。从在培训公司Ardan Labs开始，他就专注于Go语言教学。无论是在当地，
① 本书源代码也可以从www.epubit.com.cn本书网页免费下载。
还是在线上，经常可以在大会或者工作坊中看到他的身影。他总是找时间来帮助那些想获取 Go
语言知识、撰写博客和编码技能提升到更高水平的公司或个人。
Brian Ketelsen（@bketelsen）是XOR Data Exchange的CIO和联合创始人。Brian也是每年
Go语言大会（GohperCon）的合办者，同时也是Gopher Academy的创立者。作为专注于社区的
组织，Gopher Academy一直在促进Go语言的发展和对Go语言开发者的培训。Brian从2010年
就开始使用Go语言。
Erik St. Martin（@erikstmartin）是XOR Data Exchange的软件开发总监。他所在的公司专注
于大数据分析，最早在得克萨斯州奥斯汀，后来搬到了佛罗里达州坦帕湾。Erik长时间为开源软
件及其社区做贡献。他是每年GopherCon的组织者，也是坦帕湾Go聚会的组织者。他非常热爱