services.
In  order  to  execute  any  of  these  algorithms  both  the
peers  have  to  have  previously  agreed  on  pairs  of  secret
keys.  Such  an  agreement  is  performed  by  the  IPsec  key
management  module  implementing  the  ISAKMP/Oakley
protocol.  Such  a  module  mutually  athenticates  the  peers,
then it negotiates the symmetric keys they need to exhange
messages and the cryptographic algorithms they willl use.
IPsec encodes the information needed to perform AH and
ESP services in two additional packet headers called AH
and ESP headers, respectively.
IPsec  may  operate  in  two  different  ways,  depending
upon  whether  the  secure  communication  is  between  two
endpoints directly connected (in which case it operates in
transport mode) or between two intermediate gateways to
which  the  two  endpoints  are  connected  via  a  clear,  i.e.,
unencrypted,  channel  (in  which  case  IPsec  operates  in
tunnel  mode).  For  voice  applications  the  following
considerations  apply:  confidentiality 
is  essential,
authentication  “in  band”  is  expensive,  session  endpoints
usually are not the cryptographic endpoints. Therefore, the
best choice to secure voice traffic is to use the ESP header
in tunnel mode.
2.3 Quality of Service
When executing VoIP applications, QoS protocols must
be adopted in order to be able to meet the requirements on
transmission parameters such as transmission delay, jitter
and  buffering  delay  [3,9].  QoS  protocols  try  to  meet  the
imposed  requirements  using  different  features  such  as
packet  classification,  queueing  mechanisms,  traffic
shaping,  header  compression,  congestion  avoidance
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
strategies  and  Resource  Reservation  protocols.
Unfortunately, such features cannot be taken advantage in
combination with IPsec, as they use fields in the IP header
that IPsec encrypts. Thus, when IPsec is used, the possible
choices of QoS protocols are limited.
In  our  experiments  we  consider  the  following  QoS
protocols:  Diff-serv  environment  with  TOS/DSCP
marking  (Type  Of  Service/Diff-Serv  Code  Point)  to
manage  congestion  and  packet  discard,  the  LLQ  (Low
Latency Queueing) queue management protocol to handle
RTP  packets  properly,  and  the  LFI  (Link  Fragmentation
and Interleaving) protocol for packet fragmentation, which
interleaves fragments with voice packets [10]. Note that in
a diff-serv environment it is necessary to copy the DSCP
field in the external IP header, so that the QoS mechanism
can recognise the packet priorirty and treat it accordingly.
We configured the following QoS features:
• 
the dial peers set the TOS bit for the signaling and
the media flows (IOS ver. 12.2);
the  LLQ  protocol  is  set  with  a  reserved  bandwidth
of  64Kbps  on  the  serial  link  and  on  the  Ethernet
link;
the  serial  link  is  a  PPP  multilink  with  LFI  enabled
and with maximum latency set to 10ms;
• 
• 
•  RTP addresses are forced to match the access lists.
Different tests have been performed in order to estimate
various  parameters  such  as  effective  bandwidth  usage,
impact of various QoS strategies on traffic delay, crypto-
engine  throughput,  impact  of  various  encryption
algorithms on packet delay. The complete set of results is
reported in [1]. For the sake of brevity, we only report here
the most significant results.
3.  Experimental environment
4. 
IPsec and voice transmission
In this section we describe the environment where most
of  the  experiments  described  in  Section  4  and  5  were
performed. As Figure 1 shows, three routers (R1, R2, and
R3)  with  two  independent  IPsec  tunnels  (IPSEC  1  and
IPSEC 2 in the figure) are between the two telephones. A
fourth  routers  (TGN+PKTS)  operates  as  traffic  generator
up to a rate that may lead the links and the crypto-engines
to  saturation.  The  various  subnetworks  parameters  and
types of routers are reported in the figure.
Figure 1: Experimental environment.
Two  main  factors  affect  voice  traffic  when  IPsec  is
used. The first one is the increased packet size because of
the  headers  added  to  the  original  IP  packet,  namely  the
ESP header for confidentiality and the new IP header for
the tunnel. The second one is the time required to encrypt
payload and headers and the construction of the new ones.
In  this  section  we  report  the  results  obtained  in
measuring  the  influence  of  such  factors  on  voice  traffic.
Realistic estimates of such factors can be determined only
through  a  careful  experimental  analysis,  as  most  of  the
parameters involved such as traffic shape, buffering delay
and queueying dealy depend on real traffic condition.
4.1 Packet size
In  Figure  2  the  format  of  voice  packets  with  various
protocols  is  illustrated  for  a  40  bytes  payload,  a  typical
packet  length  for  voice  traffic.  The  picture  shows  how
packet format and size change with and without IPsec and
for various combinations of cryptographic algorithms. The
overall  minimum  size  is  obtained  when  compressed RTP
(cRTP) is adopted (second bar from the bottom) in which
case  the  header  size  is  only  20%  of  the  payload  size,
yielding a 45 bytes long packet, while a regular IP packet
is  80  bytes  long.  As  it  can  be  seen,  the  use  of  IPsec
dramatically  increases  the  size  of  the  packets,  which
reaches 120 and 130 bytes depending on the cryptographic
services  requested.  As  a  consequence,  the  ratio  between
the  actual  payload  and  the  total  packet  length  decreases,
indicating  an  increase  in  “wasted”  bandwidth,  i.e.,
bandwidth that does not carry actual data.
Table 3 reports similar information in details, with the
ratio of the payloadt to total packet length (fourth column
from the right), the relative size increase w.r.t. cRTP (third
column from the right), and the performance reduction in
terms  of  bandwidth  usage  w.r.t.  cRTP  (second  righmost
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
colum).  In  order  to  give  an  immediate  perception  of  the
effective bandwidth reduction, in the righmost column we
also  report  the  number  of  phone  calls  possible  for  each
protocol  type  for  a  128Kbps  line  with  50  packets  per
second  (pps).  As  the  figures  show,  if  IPsec  is  used,  the
number  of  phone  calls  is  half  that  with  IP,  or  about  one
third  of  the  number  of  calls  possible  when  cRTP  is  used
[5,8].
Figure  2:  The  format  of  voice  packets  with
IPsec  (top  two  bars)  and  with  IP  (bottom  two
bars) for a 40 bytes long payload.
Pkt
len.
[Byte] Ratio
82 122 33% 171% 63% 2
94 134 30% 198% 66% 2
0%
Hdr
[Byte]
5
45
40 80
Perf.
Size
Reduc. #call
incr.
89% 0%
7
50% 78% 44% 4
Packet
Type
cRTP
IP
IPsec
DES
IPsec
3DES+SHA
Table  3:  Header  and  total  packet  length,
payload  to  packet  lenght  ratio,  relative  size
increase,  performance  reduction  and  number  of
phone calls on a 128Kbps and 50 pps link for 40
bytes payload packets and various protocols.
We now investigate the impact of different encryption
algorithms to encrypt the payload on the packet size. We
consider  the  combinations  of  DES,  3DES,  NULL  and
SHA  [12]  for  authentication  and  3DES  and  SHA  only.
Figure 3 reports the percentage increase in packet size as a
function  of  the  original  packet  size  for  DES,  3DES,
NULL+SHA (bottom line) and for 3DES+SHA (top line).
As  the  figure  shows,  the  impact  of  different  encryption
algorithms  is  negligible,  especially  as  the  packet  size
increases.
]
%
[
e
s
a
e
r
c
n
I
100%
75%
50%
25%
0%
60
210
360
Packet size increase
DES & 3DES & NULL + SHA
3DES + SHA
660
510
960
Original size [Bytes]
810
1110
1260
Figure  3:  Packet  size  increase  for  two  sets  of
cryptographic functions, as a function of packet
size in bytes.
The  packet  size  increase  has  negative  effects  not  only
on bandwidth usage but it also impacts on the transmission
delay,  router  internal  delays,  queueing  delay,  thus
affecting jitter and overall packet delay. The transmission
delay increases proportionally with the packet size and is
constant  for  every  router  (whether  peers  or  not).  Internal
router  delays  (e.g.,  due  to  checksums  calculation)  are
considered in the generic   IPsec delay. Queueing delay is
sensitive to packet size as well and this is evident with low
bandwidth links.
In  order  to  evaluate  such  parameters  we  injected
multiple traffic streams in our test network, which start at
random  times  in  order  to  create  a  realistic  scenario.
Individual  flows  may  be  distinguished  based  on  the  IP
source  address,  which  allows  to  study  links  with  critical
traffic  (close  to  the  congestion  rate)  and  also  to  evaluate
the  impact  on  the  system  determined  by  the  queueing
delay. The results of these tests are summarized in Figure
4,  where  the  measured  traffic  delay  is  reported  as  a
function of the traffic intensity in pps on a 128 Kbps link
with  90  bytes  long  packets.  Two  sets  of  curves  are
graphed,  the  leftmost  ones  referring  to  DES  encrypted
packets  and  the  rightmost  ones  relative  to  plain
transmission. For  each  of  the  two  cases,  three  curves  are
reported.  The  dashed  ones  were  obtained  by  solving  a
queueing  network  model,  the  ones  with  a  sharp  turn  at
saturation are relative to the ideal case with no queueing,
and the intermediate ones are the actual measured delays.
As  Figure  4  shows,  in  case  of  encrypted  traffic
(leftmost  set  of  curves),  the  traffic  delay  grows  much
earlier (i.e., for smaller traffic rates) than in case of clear
traffic.  Such  a  result  is  not  surprising  since  the  time
requested  by  encryption  cannot  be  neglected.  It  is
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
interesting  to  note  that  the  theoretical  results  capture  the
measured data fairly well in case of clear traffic but they
are not as accurate in case of encrypted traffic. The reason
is that it is not possible to estimate a priori the time spent
by a packet before it accesses to the crypto-engine. In real
life  scenarios,  such  a  phenomenon  is  more  evident  since
packets  often  traverse  a  number  of  routers  greater  than
three, as we had in our experiments.
Figure 4: Packet delay in s for clear (rightmost
curves)  and  DES-encrypted  (leftmost  curves)
traffic  as  a  function  of  traffic  rate  in  pps  on  a
128Kbps  serial  link  with  90  bytes  long  packets.
Dashed  lines  are  the  queueing  theory  predicted
value,  smooth  slod  lines  are  the  measured
values,  and  sharp  turning  lines  are  the  ideal
result in case of no queues.
4.2 Crypto-engine
During the encryption process, a router performs some
operations,  namely  packet  encryption  and  new  headers
construction  (ESP  +  IP  tunnel),  that  influence  the  CPU
utilization and introduce a further delay. We performed a
series of experiments in order to evalute the impact of such
parameters  on  the  transmission  of  voice  traffic.  Our
experiments  show  that  the  crypto-engine  is  a  serious
bottleneck in the transmission of real-time traffic in IPsec.
The main reason, however, is not the low efficiency of the
encryption process but the impossibility to   control packet
access  to  the  crypto-engine.  While  we  can  use  QoS
protocols to speed up the routing phase, there is no way to
indicate  a  priority  in  the  packets  in  order  to  modify
scheduling  choices  of  the  crypto-engine.  In  what  follows
we report the results of the experiments performed in order
to  evaluate  the  perfomance  of  the  crypto-engine.  The
encryption delay  and throughput were measured.
In order to measure  the maximum encoding rate, when
different algorithms are used, we performed the following
experiments. We considered the cryptographic algorithms
DES,  3DES,  NULL  &  SHA,  3DES  &  SHA  (all
implemented in software) and for each case we generated
4  packet  flows  with  packets  of  size   60,  100,  250,  1000
Bytes,  respectively.  Each  flow  starts  from  0  pps  and
increases its rate of 25 pps every 30 s in order to saturate
the crypto-engine. In order to avoid the effect of possible
link saturation, we performed all these experiments with a
100Mbps link. Results are the reported in Figure 5 and 6.
Figure 5 graphs the measured throughput as a function
of  the  global  traffic  flow.  The  straight  line  is  throughput
for  transmission  of  packets  in  the  clear,  therefore  it
increases linearly with traffic. The figure shows that when
encryption is performed, throughput levels off or decreases
after  reaching  a  maximum  value,  which  depends  on  the
algorithm. The best performance is achieved by DES, then
3DES, NULL+SHA, and last is the 3DES+SHA case. The
figure shows that, as expected, the lighter the computation,
the higher the throughput value achieved. It is interesting
to  note  that  even  in  the  best  case,  i.e.,  for  DES,  such  a
maximum  value  is  only  slightly  above  1000  pps.  The
negative  slope  throughput  exhibits  after  reaching  the
maximum  is  due  to  packets  discarded   by  the  engine
because  it  is  saturated.  The  graphs  in  Figure  5  are
particularly  important  for  our  VoIP  and  VoIPsec
comparison,  since  discarded  packets  contribute  to  lower
the quality of the signal during the reconstruction phase.
Plain
DES
3DES
NULL + SHA
3DES + SHA
]
s
p
p
[
t
u
p
h
g
u
o
r
h
T
2500
2000
1500
1000
500
0
Traffic rate [pps]
Figure 5: Throughput of the crypto-engine in pps
as a function of linearly increasing traffic in pps
for plain and encrypted traffic.
Figure  6  illustrates  the  crypto-engine  throughput  in
Mbps  for  each  cryptographic  function  set  for  the  various
packet sizes, namely 60, 100, 250 and 1000 bytes (left to
right bars in each group). As the figure shows, in case of
DES  and  NULL+SHA  longer  packets  significantly