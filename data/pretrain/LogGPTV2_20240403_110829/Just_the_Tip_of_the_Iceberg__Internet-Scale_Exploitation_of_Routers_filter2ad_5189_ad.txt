### 5.3 System Architecture and Connection Patterns

During the study period, these servers connected to 220 distinct infected routers. The most prominent siteKey involved in these connections was `hsFAjj`. However, our NetFlow data also revealed that devices infected with `SK_LCx` and `oDcuak` began to contact these servers towards the end of the period, suggesting a potential link between these siteKeys.

Based on the connection patterns of the compromised routers and the maintenance activities (discussed in Section 5.5), we can deduce the system architecture as depicted in Figure 11. A few infected routers are performing scanning and infections within the same prefix, but the compromised routers remain unconnected among themselves. They share only two common flows: connections on port 2008 to a handful of staging or Command & Control (C&C) servers, and SSH flows on port 22 from a shared origin. When a router is taken over, the new perpetrator does not always aim to eradicate a previous infection after replacing the proxy template and siteKey. In fact, we found numerous instances where routers taken over by a different siteKey continued to beacon to staging servers associated with an unrelated actor, who showed no other commonalities or features with the new owner.

### 5.4 Monetization

Once the vulnerability was triggered and a foothold on the routers established, the adversaries moved to exploit the routers for monetary gain. Over the course of the study period, we observed the evolution of two monetization strategies: the use of the routers as a (free) proxy service and the injection of cryptomining code into users' web browsing sessions.

#### 5.4.1 HTTP Proxies

The first use case of the compromised MikroTik routers was the establishment of HTTP proxies. Here, traffic from a web browser to a web server is tunneled through the HTTP proxy, thus masking the IP address of the client. HTTP proxies are used as a basic variant of a Virtual Private Network (VPN) service, although they are application-protocol specific and have limited authentication options if implemented at all. Starting from July 9, 2018, the first MikroTik routers were repurposed as HTTP proxies, identified by the emergence of large incoming traffic towards specific high TCP ports, namely 36551, 53281, and 58833. This use case remained relatively rare, with only 3,216 out of the total 1.4 million infected routers being abused in this way.

Interestingly, the usage as an HTTP proxy did not seem to serve a monetary gain, as within three days, 95% of the routers with these unusual spikes were posted to free public proxy lists [29], and allowed a connection without user credentials. This usage was short-lived, as most were disabled within 40 days, at which point SOCKS proxies were spun up at TCP port 4145.

#### 5.4.2 SOCKS Proxies

In contrast to HTTP proxies, SOCKS proxies operate at the transport layer and forward traffic transparently with respect to the application layer protocol. This allows them to be used in combination with any application, extending their monetization potential. Shortly after the emergence of this new use case, the HTTP proxies on the MikroTik routers were replaced by SOCKS proxies. By the end of the study, 1,530 MikroTik routers remained in use as SOCKS proxies. Further characterization of the NetFlows is not possible, as the application traffic itself would be forwarded inside the tunnel, and the router would rewrite the outgoing flow to an ephemeral source port. However, we found that the exploitation as SOCKS proxies was under the control of a few actors and not deployed pervasively.

This conclusion is supported by the fact that the use of SOCKS proxies was never encountered alone but only in combination with a cryptomining infection. As discussed in the previous section, adversaries routinely reinfected devices, effectively snatching them away from competitors by changing the cryptomining siteKeys. With the infection script reconfiguring the device, including firewall and proxy settings, we can assess that "ownership" with respect to active cryptomining also indicates control over the SOCKS proxy at that time.

We identified a total of 140 cryptomining keys on the 1.4 million MikroTik routers, but as shown in Table 3, only five siteKeys were in use on a router whenever the device was proxying traffic. Their impact is significant: more than 95% of all SOCKS activity originating from MikroTik routers is the result of proxies operated by these five siteKeys, with `hsFAjj` being one of the early adopters of Man-in-the-Middle (MITM)-based cryptomining. The small number of siteKeys related to SOCKS proxy activity suggests a relation between those siteKeys, as others do not exhibit this behavior.

#### 5.4.3 Cryptojacking Proxies

While the usage as HTTP proxies was not commercialized and only a few actors repurposed a limited number of devices as SOCKS proxies, a large number of actors engaged in cryptojacking user connections. A total of 140 different cryptomining siteKeys were installed on the routers during the study, with a maximum of 106 different siteKeys being active simultaneously.

**Mining Services:** Figure 12 depicts the number of infected routers over time, categorized by the mining service provider used. As seen in the figure, MITM-based mining started with Coinhive, which was the obvious choice due to its widespread deployment in website-based mining [2, 18, 30]. Starting in mid-September, this homogeneity shattered with the emergence of CoinImp and later Omine, each taking approximately equal market shares. This led to a peak of cryptojacking activity on December 19, 2018, with 460,618 routers concurrently infected. This activity continued relatively unchanged until January 26, 2019, when mining activity suddenly disappeared from the bulk of infected routers. The distribution of miner applications between Coinhive, CoinImp, and Omine remained similar and relatively unchanged.

**Evolution of SiteKeys:** Figure 13 shows the evolution of siteKeys installed on MikroTik routers between July 2018 and April 2019, ordered by the time they were first encountered on a router. The size of the circle indicates the number of routers on which this siteKey was installed on a given day. We can see that MITM-based cryptomining was pioneered by three siteKeys: `d68a7a`, `hsFAjj`, and `oDcuak`. `hsFAjj` temporarily controlled 70% of all infected routers and introduced new strategies for controlling and monetizing the routers, remaining a steady force until the general decline.

Approximately one week after these first movers, a large number of new siteKeys started to appear, frequently co-emerging in groups that stay relatively similar in size. Four sequential blocks of 10 siteKeys can be clearly observed, with two using Coinhive and the other two using Omine. While all other siteKeys never reached the same size as `hsFAjj`'s initial deployment (167,182 infections), each was able to hold control over up to 64,539 routers at a time. Although a total of 1.4 million routers were vulnerable and at some point infected, the perpetrators never rolled out their cryptojacking infections to all potential victims simultaneously. Instead, we saw a constant flux, with new routers being infected to maintain consistent mining deployments. This is necessary because once infected, most routers are patched quickly, as shown in Figure 15. The cumulative density function (CDF) of the number of days a router is infected on a logarithmic scale shows that 50% of the devices are patched within 18 days after compromise, whereas only 30% remain active for more than 50 days, urging actors to constantly replace disappearing routers to maintain their installation base.

**Geographical Focus:** Based on the heatmap in Figure 6 and the large deployment of MikroTik devices in certain autonomous systems as shown in Table 2, we found that a number of countries seemed prime candidates for MikroTik devices, which would logically mean that advanced adversaries should focus their activities there. As RouterOS is used in both consumer devices and carrier-grade routers, we would naturally expect some devices to be more lucrative than others, immediately posing the question of whether reinfection of devices—essentially "stealing" routers—would primarily occur in popular areas and target those devices where a lot of money could be made.

Figure 17 shows the number of siteKeys as a function of the amount of NetFlows on port 80 processed by the router during its infection. Counterintuitively, there is no trend that high-value targets are more fought over than low-value ones. Especially routers with much traffic tend to stick with just a low number of siteKeys. This is surprising, as a cryptomining operation on a large router would clearly affect more people, leading to more complaints and thus faster patching. The lack of a fight for high-grossing routers can partially be explained by the location of the routers, indicated by the color of the data points. While routers in Indonesia and Brazil—the hotspots of the infection—cover the entire spectrum and change keys considerably, the most stable infections—and the highest grossing ones—are in countries that do not appear near the top in MikroTik installation counts, such as Iraq. This means that actors targeting niche markets accomplished much more valuable deployments, as these routers mined longer for them.

### 5.5 Maintenance

[Continue with the content of Section 5.5]