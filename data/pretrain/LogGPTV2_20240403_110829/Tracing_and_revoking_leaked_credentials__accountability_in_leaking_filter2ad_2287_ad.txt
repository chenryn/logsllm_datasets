### Optimized Text

**Encryption and Performance Analysis**

Table 1 clearly illustrates the performance cost associated with the a posteriori approach of digital forensics when outsourcing data to cloud environments. In addition to the essential process of digital forensics, only the system setup and user admission procedures are affected. It is important to note that both these procedures are executed once in an offline stage, independent of the file outsourcing process. Surprisingly, incorporating credential leakage traceability does not impact file creation or access: users can create and access files without any significant overhead. These features make our TRLAC (Tracing and Revoking Leaked Access Credentials) scheme an exceptional solution for a posteriori protection of data outsourced to untrusted third parties.

**Comparison with Other Schemes**

Table 2 compares our TRLAC scheme with other schemes that achieve traceability of leaked access credentials, focusing on performance, tracing method (black-box or white-box), bilinear group type (prime-order or composite-order), and revocation support. The schemes in [5], [6], and [12] are designed for broadcast encryption, where \( N \) represents the total number of users in the system. The works from [16] to [18], following [6], aim to provide traceability for attribute-based encryption, with their performance dependent on the number of attributes. Here, \( |U| \) denotes the size of the attribute universe, \( |\gamma| \) the size of the set of attributes associated with a user, \( |A| \) the size of the access structure associated with a ciphertext, and \( |\gamma^*| \) the size of a set satisfying the access structure. The work [14] supports an identity-based traitor tracing system, allowing a data owner to choose only one group to access their data at a time, unlike our TRLAC scheme which supports multiple groups.

It is worth noting that all schemes except ours, [12], and [14] are constructed using composite-order bilinear groups, which have significantly lower performance (about one order of magnitude) compared to prime-order bilinear groups for the same security level. For example, [12] encrypts six times faster and decrypts ten times faster than [5] for the same security level. However, [12]'s decryption time is linear with the size of the vector space used to simulate the orthogonality of composite-order groups. Additionally, [12], as well as [5, 6, 17, 18], requires the ciphertext size to be linear with the quadratic root of the total number of users \( N \), resulting in large encrypted files stored in the cloud.

**Superior Practicality of TRLAC**

Table 2 highlights the superior practicality of our TRLAC scheme. Let \( m \) denote the maximum size of the set of groups. Both the ciphertext size and pairing computations in decryption are constant, providing a cost-effective way for users to securely outsource and access their files. Although [14] achieves similar encryption and decryption efficiency, it lacks revocation support, a critical mechanism for protecting data security after tracing results are available. Compared to other schemes, our TRLAC has a shorter public key size, as \( m \) is typically smaller than the total number of attributes in [16, 17, 18], the quadratic root of the total number of users in [5, 6, 12], and the code length in [14]. While the private key size is linear with the code length \( l \) (which can be relatively short by setting appropriate values for \( \epsilon \) and \( t \)), the key generation algorithm is executed only once by the Trusted Third Party (TTP) in an offline stage, confirming the practical attractiveness of our solution.

### Experimental Analysis

We conducted a series of experiments on a PC with a 4-core Intel Core i3-2130 CPU running at 3.4GHz and 2.0GB RAM, using C programming language in Windows 7. Cryptographic operations were implemented using the Pairing-Based Cryptography library version 0.5.12. We evaluated the performance of each procedure in the TRLAC scheme.

We used Nuida et al.'s fingerprint codes, which are shorter than Tardos codes. To achieve \( t \)-collusion resistant traceability with a total number \( n \) of users and an error probability \( \epsilon \), the length of the fingerprint codes is given by Expression (1). For a practical scenario where a file is accessible by different departments of different companies, each department having up to 100 staff members, and assuming at most \( t \leq 5 \) staff members' credentials are compromised with an error probability \( \epsilon \approx 10^{-5} \), the fingerprint code length \( l \) is approximately 50 bits. In our experiments, we set \( l = 50, 100, \ldots, 500 \). Additionally, the system performance depends on the maximal size \( m \) of the set, determined during the setup phase, and the size \( |S| \) of the set \( S \) decided during encryption. For the above scenario, we set \( m = 100 \) and conducted experiments with \( |S| \) equal to 20, 40, 60, and 80.

**System Setup and User Admission**

The system setup procedure, run by the TTP, outputs a system master public key of size linear in \( m \). For \( m = 100 \), the time consumed by this procedure is about 440.5ms, which is negligible for a TTP with more powerful equipment.

Figure 2 shows the time required to register a user in the system. The time consumed by the user admission procedure grows linearly with the length of the fingerprint codes. For tracing \( t \leq 5 \) employees in a company's department of 100 staff, the required code length is about 50 bits, yielding a time of approximately 200ms to generate a private key. If the number of dishonest employees increases to \( t \leq 30 \), the code length needs to grow to 500 bits, and the time to generate a private key is around 1.9 seconds. These results demonstrate that our system can handle a large number of traitors while maintaining a manageable cost for the TTP.

**File Creation and Access**

Figure 3 shows the time required to create a file for storage in the cloud. The four lines represent different sizes of the set of encryption groups: 20, 40, 60, and 80. The time consumed by file creation is only linear in the size of the encryption groups. Even for the largest value of 80, the time consumed by this procedure is about 630ms, which is a low cost for users to encrypt their outsourced data.

Figure 4 shows the time required to access a file. The time consumed by the file access procedure does not depend on the code length and grows linearly with the size of the encryption groups. For the largest size of 80 groups, the time to access a file is only about 300ms. Therefore, with millisecond-level file creation and access times, our TRLAC scheme provides efficient protection for users to secure their outsourced data.

**Group Revocation**

The group revocation procedure in our scheme is also highly efficient, requiring only two exponentiations per file. In our tests, the TTP took approximately 16.4ms to revoke access rights of a group. This procedure is executed solely by the TTP and does not involve any user computation.

**Conclusion**

Our experimental analyses show that the TRLAC scheme provides an efficient way for users to protect the security of their outsourced data. Users can encrypt their data at a low cost before outsourcing them to the cloud, and the time for any authorized user to access the stored files is minimal. The introduction of traceability incurs almost no extra cost for file creation and access. Even for user admission, the most affected procedure, the cost remains acceptable. A user can also revoke access privileges of a group without performing any additional computations.

### Acknowledgements

This research was supported by the National Key Basic Research Program (973 program) through project 2012CB315905, the Natural Science Foundation of China through projects 61370190, 61173154, 61003214, 61070192, 61021004, 61272501, and 61202465, the Beijing Natural Science Foundation through project 4132056, the Fundamental Research Funds for the Central Universities through project 2012211020212 of Wuhan University, the Research Funds of Renmin University of China through project 14XNLF02, the Open Research Fund of The Academy of Satellite Application, and the Open Research Fund of Beijing Key Laboratory of Trusted Computing. Additional support was provided by the European Commission under FP7 projects DwB (INFRA-2010-262608) and Inter-Trust (FP7-ICT-317731), the Spanish Government through projects IPT-2012-0603-430000, TIN2011-27076-C03-01, TIN2012-32757, and TIN2011-27076-C03-01. Sherman S. M. Chow is supported by the Early Career Scheme and the Early Career Award of the Research Grants Council, Hong Kong SAR (CUHK 439713), and Direct Grant (4055018) of the Chinese University of Hong Kong. Josep Domingo-Ferrer is partly supported as an ICREA-Acad√®mia researcher by the Government of Catalonia and holds the UNESCO Chair in Data Privacy. The views expressed in this paper are his own and do not commit UNESCO.