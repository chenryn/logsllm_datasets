Achieving a similar result against a high trafﬁc period would re-
quire 23,500 infected phones. Assuming that each of these HLRs
service one million users, only 1.2% and 2.4% rates of infection.
Attacks on the more capable system would require an increase in
the number of compromised devices: 141,000, or an infection rate
of 14.1%, for both cases. Because signiﬁcantly higher infection
 0 500 1000 1500 2000 2500 3000 3500 4000 4500 0 500 1000 1500 2000 2500 3000 3500 4000 4500 5000Max Qualified Throughput (TPS)Injected Attack Traffic (TPS)High legitimate trafficLow legitimate traffic 1000 2000 3000 4000 5000 6000 0 4000 8000 12000 16000 20000 24000 28000 32000 36000Max Qualified Throughput (TPS)Injected Attack Traffic (TPS)High legitimate trafficLow legitimate traffic230can be sent in a single time slot, making µ−1 = 4.615 ms. Each
service area is therefore capable of supporting:
ρ =
1
0.004615 s
∗ 0.37 ≈ 80 transmissions per second
Knowing that each base station supports three sectors or service
areas, each with its own RACH, the attack would need to be dis-
tributed over α base stations to deliver such a load to the HLR:
α =
3 sectors/cell ∗ 80 RACH transmissions/sec
5000 messages/sec
α = 21 base stations
Such a small number of towers is reasonable, even when dis-
tributed over a relatively small network. For example, if there are
α = 200 towers per MSC and 10 MSCs per HLR, the network-
wide RACH capacity would 481,074 commands per second. Be-
cause our attack of 5,000 messages per second is approximately
two orders of magnitude smaller than the capacity of such a system,
sufﬁcient capacity exists to launch such an attack. If compromised
hosts are well distributed across such a network, RACH congestion
is unlikely to be the most signiﬁcant bottleneck. It is still possible
that a large number of compromised phones within close proximity
may experience competition for such resources. We will analyze
the implications of this observation on the spread of malware after
analyzing the SDCCH.
8.1.2
SDCCHs are the primary means of conveying signaling between
devices and the network core. Whether for performing a handoff,
receiving a text message, setting up a call or authenticating with
the network, these channels are critical in the proper operation of
these networks. Traynor et al. [59] previously showed that ﬁlling
SDCCHs with SMS messages effectively blocked signaling in a
single cell. Because an elevated signaling load in the core would
elicit a larger-scale outage, a successful attack on an HLR is reliant
upon not overwhelming this resource.
SDCCH Limitations
Sectors in a GSM network typically allocate 8 or 12 SDCCHs.
We model the hold time of this channel as 2.7 seconds, based on our
experiments on the insert_call_forwarding meta-command
from Section 6. While this value represents the time required for
both RACH and SDCCH access, we feel that it is close enough to
allow us to approximate the bottleneck in this portion of the net-
work. We calculate the number of base stations over which such an
attack must be distributed as follows:
ρSDCCH =
α =
α =
= 0.37
1
2.7
sectors ∗ SDCCHs ∗ ρSDCCH
= 375 base stations
3 ∗ 12 ∗ 0.37
msgs/sec
5, 000
If a service provider deploys more capable HLRs, which our sim-
ulations show can handle attack loads of up to 30,000 transactions
per second, 2,252 base stations will be needed to handle the air
interface load of an attack. Given that providers such as Verizon
Wireless and AT&T Wireless are estimated to own or lease upwards
of 30,000 towers each [57], even with SDCCH limitations the dis-
tribution of phones over base stations needed for a successful attack
is feasible.
From these calculations, the characteristics of the wireless bottle-
necks become more obvious. While both the RACH and SDCCHs
can act as bottlenecks, SDCCHs are a far more limiting resource.
If compromised nodes are evenly distributed throughout the net-
work, such contention is unlikely to play a signiﬁcant role in re-
ducing the amount of attack trafﬁc that reaches the HLR. However,
malware that spreads through means of proximity (e.g., Bluetooth-
worms [19]) is less likely to be a successful propagator of such an
attack. Without signiﬁcant dispersion of compromised devices, in-
fections that are highly geographically localized are more likely to
accidentally cancel themselves out rather than impact the network
on a large scale. Coordination of thousands of dispersed compro-
mised phones and avoiding contention when high concentrations of
such devices are present must therefore be considered.
8.2 Command and Control
A botmaster must develop a means of communicating with and
coordinating the actions of these compromised hosts to avoid the
above bottlenecks. Improving and disrupting command and con-
trol structures and mechanisms on the Internet are active areas of
research [11, 21, 20]; however, cellular networks provide signiﬁ-
cant new challenges and opportunities for command and control.
We provide a brief overview of a number of approaches that could
potentially be used to manage cellular botnets.
Internet Coordination: Given that an increasing number of mo-
bile phones can connect to the Internet, an adversary could poten-
tially reapply many of the command and control techniques cur-
rently being used in that domain to cellular botnets. For instance,
devices could easily poll a known communication channel (e.g.,
IRC, webpage). Adversaries attempting to avoid monitoring and
blocking may instead attempt peer-to-peer communication. To re-
duce control overhead, such methods may be used in concert with
time triggered attacks. However, all of these standard techniques
may potentially be constrained by the architecture of the network
itself. Because these networks are not designed to handle a large
number of concurrent ﬂows [60], nodes serviced by the same tower
may suffer from low throughput and high delays when attempt-
ing to access the communication channel. Additionally, because
all trafﬁc from the cellular botnet can be observed by the provider,
even P2P structures may be easily identiﬁed and blocked [36].
Local Wireless Coordination: The highly capable handsets that
enable phone-originated attacks also enable advanced command
and control methods. Nearly all new mobile devices possess Blue-
tooth radios, through which direct communications between mul-
tiple compromised phones can occur. The advantage to such an
approach is that many of the issues facing the use of traditional
command and control approaches (e.g., monitoring and network
bottlenecks) can be avoided. Such communications, however, are
signiﬁcantly limited by range. Worse still, increasing the density of
infected devices to improve connectivity will increase contention
for local resources and may limit an attack to a single sector.
The increasing number of mobile devices equipped with 802.11
wireless radios greatly reduces the range issue. Moreover, because
such devices can associate with traditional wireless access points,
an adversary with an established botnet command and control in-
frastructure can not only manage compromised cellular devices as
part of their larger network, but also use this connection from the
Internet to attack the core of the cellular network. Because both of
these means of communication are separate from cellular networks,
a botmaster would need to consider coverage issues before relying
on either method.
Indirect Local Coordination: As previously mentioned, high rates
of infection within individual cells may cause signiﬁcant contention
for resources and decrease the effective attack throughput. Fig-
ure 17 shows such contention for channels such as the RACH5.
5The details of the simulator used to model these attacks are in-
231provide additional protection against a large-scale attack. In partic-
ular, an attack targeting a large portion of the HLRs in a single net-
work is unlikely to be mitigated by migrating attack trafﬁc to other
servers. Instead, the failure of any one HLR may lead to a signif-
icant increase of trafﬁc to one or more of the others. As a number
of providers consider an architecture in which a small number of
centrally located, highly capable HLRs process trafﬁc for the entire
network, such attacks may in fact be more likely to succeed.
Filtering can to help protect against some variants of this attack.
Because insert_call_forwarding is not critical to the basic
functioning of the network, such ﬁlters could be aggressively tuned
without much worry of the impact of false positives. Call gap-
ping, a technique commonly used for call overload situations for
expected events, could potentially be adapted for signaling over-
load attacks. For such a defense to be effective, a means of rapidly
deploying shedding rules corresponding to a speciﬁc attack and not
simply benign elevated trafﬁc conditions would need to be further
investigated.
Basic ﬁltering and shedding are two examples of possible net-
work defenses a service provider can implement. However, devel-
oping mechanisms intelligent enough to respond to a more dynamic
attack remains challenging, especially if adversaries deliberately
attempt to target nodes other than the HLR. In particular, because
a signiﬁcant amount of context is lost as messages move between
mobile devices and the HLR (e.g., granularity of location), it will
likely become difﬁcult for a provider to separate attacks from other
trafﬁc. Moreover, because of the large overhead associated with the
ﬁrst hop of communications in such networks, ﬁltering in the core
may occur too late to prevent users from experiencing signiﬁcant
congestion. Preventing such devices from ever transmitting mali-
cious trafﬁc is arguably more critical in this environment than the
traditional Internet setting. Accordingly, much work remains to be
done in the development of defenses.
Figure 17: Percentage blocking for all messages on the RACH
as attack trafﬁc increases.
Even without directly communicating with the other nearby in-
fected devices, it is possible to coordinate and improve the through-
put of attack trafﬁc.
The GSM MAC layer includes a back off algorithm that is trig-
gered when a network request times out, but its behavior is tuned
for normal trafﬁc patterns, rather than the sudden ramp up and sus-
tained level of trafﬁc characteristic of an attack. The GSM back off
algorithm sets a phone’s back off timer to a randomly chosen inte-
ger multiple of 10 ms, where the minimum and maximum values
for the back off timer are set as network parameters. The trafﬁc
patterns generated by an attack require a more reactive back off
algorithm:
βavg = αβinst + (1 − α)βavg
if βinst > βavg then
γ = 2γ
else if βinst < βavg then
γ = γ/2
Where βinst is the instantaneous measurement of round trip time,
and βavg is the running average. α is a weight parameter set to
0.5, and γ is the back off timer. This algorithm uses multiplicative
increase and decrease to rapidly react to changing channel condi-
tions. The triggering of an attack leads to the sudden onset of a
large amount of trafﬁc, requiring a very aggressive back off algo-
rithm. Further development and simulation of the exponential back
off algorithm is outside the scope of this paper and has been left as
future work.
Due to its use of local feedback, exponential back off reduces
congestion in areas with a high density of compromised phones
more effectively than time or network triggering. Unfortunately,
reducing RACH contention using exponential back off leads to un-
avoidable inefﬁciencies in the use of available network resources.
9. ATTACK MITIGATION
Given the vastly expanded programmability of these systems,
coupled with their increased connectivity to external data networks,
new defenses must be implemented.
Many cellular networks perform database replication in order to
avoid widespread outages if HLR hardware fails. Should such a
situation occur, trafﬁc is rerouted to another HLR with access to
the backup copy of the database. The impact of attacks against
single HLRs is lessened assuming that the other HLR can support
the additional load [48]. However, such a defense is unlikely to
cluded in the Appendix.
10. CONCLUSION
By providing users with highly limited mobile devices and re-
stricting connectivity with external systems, cellular networks have
long been able to appreciably limit the potential for malicious be-
havior. However, the arrival of highly capable mobile phones, most
of which lack basic security mechanism, signiﬁcantly diminishes
such protections.
In this paper, we have demonstrated that even
relatively small botnets composed entirely of mobile phones pose
signiﬁcant threats to the availability of these network. Depend-
ing on the speciﬁc hardware deployed by a provider, our results
demonstrate the potential to cause nation-wide outages with only
single-digit infection rates. Moreover, because such attacks work
by quietly launching network service requests and not through a
ﬂood of phone calls, users are unlikely to be aware of their exe-
cution. While command and control is potentially more challeng-
ing in this environment, such obstacles can be overcome through
the use of a combination of the multiple network interface features
common to most mobile devices.
While similar attacks have been studied in the context of the In-
ternet, the work in this paper should be viewed as a warning of the
increasingly sophisticated attacks possible in telecommunications
infrastructure. By demonstrating that core elements of the network
are now addressable, this work identiﬁes the potential for attacks
attempting to compromise speciﬁc components. Such threats must
be considered proactively in order to maintain the reliability long
associated with these networks.
 0 0.2 0.4 0.6 0.8 1 0 500 1000 1500 2000 2500Average Percent Blocking During Attack# of Attack clients232Acknowledgments
We would like to thank Chaitrali Amrutkar, William Enck, Mike
Hunter, Fabian Monrose and Frank Park for their invaluable as-
sistance. This work was supported in part by the US National
Science Foundation (CNS-0721579, CNS-0905447, CNS-0721579
and CNS-0916047). Any opinions, ﬁndings, conclusions or recom-