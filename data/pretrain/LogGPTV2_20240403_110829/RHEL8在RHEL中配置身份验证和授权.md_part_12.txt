6**]{.strong} 是调试身份验证问题的良好起点。
::: itemizedlist
**先决条件**
-   您需要 root 密码来编辑 `sssd.conf`{.literal} 配置文件并重新启动 SSSD
    服务。
:::
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/sssd/sssd.conf`{.literal} 文件。
2.  将 `debug_level`{.literal} 选项添加到文件的每个部分，并将 debug
    级别设置为您选择的详细程度。
    ``` literallayout
    [domain/example.com]
    debug_level = 6
    id_provider = ipa
    ...
    [sssd]
    debug_level = 6
    services = nss, pam, ifp, ssh, sudo
    domains = example.com
    [nss]
    debug_level = 6
    [pam]
    debug_level = 6
    [sudo]
    debug_level = 6
    [ssh]
    debug_level = 6
    [pac]
    debug_level = 6
    [ifp]
    debug_level = 6
    ```
3.  保存并关闭 `sssd.conf`{.literal} 文件。
4.  重启 SSSD 服务以加载新的配置设置。
    ``` literallayout
    [root@server ~]# systemctl restart sssd
    ```
:::
::: itemizedlist
**其它资源**
-   [SSSD
    日志文件和日志记录级别](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm "SSSD 日志文件和日志记录级别"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_enabling-detailed-logging-for-sssd-with-the-sssctl-command_assembly_troubleshooting-authentication-with-sssd-in-idm}使用 sssctl 命令为 SSSD 启用详细的日志记录 {.title}
:::
默认情况下，RHEL 8.4 及更新版本中的 SSSD 服务仅记录严重故障（调试级别
2），但不记录在对身份验证问题进行故障排除所需的详细级别。
您可以使用
`sssctl debug-level  命令在命令行中更改 SSSD 服务的 debug 级别，其中`{.literal}
` 值是`{.literal} 0 到 9 之间的数字。debug 级别最多 3
个日志较大的故障，级别 8 和更高级别提供大量详细的日志消息。级别 6
是调试身份验证问题的良好起点。
::: itemizedlist
**先决条件**
-   您需要 root 密码来运行 `sssctl`{.literal} 命令。
:::
::: itemizedlist
**流程**
-   使用 sssctl debug-level 命令将所选的调试级别设置为您所需的详细程度。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
:::
::: itemizedlist
**其它资源**
-   [SSSD
    日志文件和日志记录级别](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm "SSSD 日志文件和日志记录级别"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-server_assembly_troubleshooting-authentication-with-sssd-in-idm}从 SSSD 服务收集调试日志，对 IdM 服务器的身份验证问题进行故障排除 {.title}
:::
如果您在尝试以 IdM 用户身份对 IdM
服务器进行身份验证时遇到问题，请在服务器上的 SSSD
服务中启用详细的调试日志，并收集尝试检索用户信息的日志。
::: itemizedlist
**先决条件**
-   您需要 root 密码来运行 `sssctl`{.literal} 命令并重新启动 SSSD 服务。
:::
::: orderedlist
**流程**
1.  在 IdM 服务器上启用详细的 SSSD 调试日志。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
2.  为遇到身份验证问题的用户在 SSSD 缓存中使对象无效，因此您不会绕过
    LDAP 服务器并检索 SSSD 的信息。
    ``` literallayout
    [root@server ~]# sssctl cache-expire -u idmuser
    ```
3.  通过删除旧的 SSSD 日志来最大程度减少数据集的故障排除。
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
4.  尝试切换至遇到身份验证问题的用户，同时在尝试前后收集时间戳。这些时间戳进一步缩小了数据集的范围。
    ``` literallayout
    [root@server sssd]# date; su idmuser; 日期
    Mon Mar 29 15:33:48 EDT 2021
    su: user idmuser does not exist
    Mon Mar 29 15:33:49 EDT 2021
    ```
5.  [*（可选）如果您不想继续收集详细的*]{.emphasis} SSSD 日志，请降低
    debug 级别。
    ``` literallayout
    [root@server ~]# sssctl debug-level 2
    ```
6.  查看 SSSD 日志，了解失败请求的信息。例如，检查
    `/var/log/sssd/sssd_example.com.log`{.literal} 文件表明 SSSD
    服务没有在 `cn=accounts,dc=example,dc=com`{.literal} LDAP
    子树中找到用户。这可能表示用户不存在，或者存在于其他位置。
    ``` literallayout
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [dp_get_account_info_send] (0x0200): Got request for [0x1][BE_REQ_USER][name=PI:EMAIL]
    ...
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_get_generic_ext_step] (0x0400): calling ldap_search_ext with [(&(uid=idmuser)(objectclass=posixAccount)(uid=)(&(uidNumber=)(!(uidNumber=0))))][cn=accounts,dc=example,dc=com].
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_get_generic_op_finished] (0x0400): Search result: Success(0), no errmsg set
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_search_user_process] (0x0400): Search for users, returned 0 results.
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_search_by_name] (0x0400): No such entry
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_delete_user] (0x0400): Error: 2 (No such file or directory)
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_search_by_name] (0x0400): No such entry
    (Mon Mar 29 15:33:49 2021) [sssd[be[example.com]]] [ipa_id_get_account_info_orig_done] (0x0080): Object not found, ending request
    ```
7.  如果您无法确定导致身份验证问题的原因：
    ::: orderedlist
    1.  收集您最近生成的 SSSD 日志。
        ``` literallayout
        [root@server ~]# sssctl logs-fetch sssd-logs-Mar29.tar
        ```
    2.  创建一个红帽技术支持问题单并提供：
        ::: orderedlist
        1.  SSSD 日志：sssd `-logs-Mar29.tar`{.literal}
        2.  与日志对应的请求的控制台输出，包括时间戳和用户名：
            ``` literallayout
            [root@server sssd]# date; id idmuser; date
            Mon Mar 29 15:33:48 EDT 2021
            id: ‘idmuser’: no such user
            Mon Mar 29 15:33:49 EDT 2021
            ```
        :::
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-client_assembly_troubleshooting-authentication-with-sssd-in-idm}从 SSSD 服务收集调试日志，以对 IdM 客户端的身份验证问题进行故障排除 {.title}
:::
如果您在尝试以 IdM 用户身份向 IdM
客户端进行身份验证时遇到问题，请验证您可以检索 IdM
服务器上的用户信息。如果您无法在 IdM 服务器上检索用户信息，您将无法在
IdM 客户端（从 IdM 服务器检索信息）中检索它。
确认身份验证问题不源自 IdM 服务器后，从 IdM 服务器和 IdM 客户端收集 SSSD
调试日志。
::: itemizedlist
**先决条件**
-   用户仅在 IdM 客户端而不是 IdM 服务器中存在身份验证问题。
-   您需要 root 密码来运行 `sssctl`{.literal} 命令并重新启动 SSSD 服务。
:::
::: orderedlist
**流程**
1.  [**在客户端上：在文本编辑器中打开**]{.strong} /etc/sssd/sssd.conf
    文件。
2.  [**在客户端：**]{.strong} 将 `ipa_server`{.literal} 选项添加到文件的
    `[domain]`{.literal} 部分，并将其设置为 IdM 服务器。这可避免 IdM
    客户端自动发现其他 IdM
    服务器，从而将此测试限制为一个客户端和一个服务器。
    ``` literallayout
    [domain/example.com]
    ipa_server = server.example.com
    ...
    ```
3.  [**在客户端上：**]{.strong} 保存并关闭 `sssd.conf`{.literal} 文件。
4.  [**客户端：重启**]{.strong} SSSD 服务以加载配置更改。
    ``` literallayout
    [root@client ~]# systemctl restart sssd
    ```
5.  [**在服务器和客户端上：启用详细的**]{.strong} SSSD 调试日志。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
    ``` literallayout
    [root@client ~]# sssctl debug-level 6
    ```
6.  [**在服务器和客户端中：为遇到身份验证问题的用户验证**]{.strong} SSSD
    缓存中的对象，因此您不用绕过 LDAP 数据库，并检索 SSSD 信息已经缓存。
    ``` literallayout
    [root@server ~]# sssctl cache-expire -u idmuser
    ```
    ``` literallayout
    [root@client ~]# sssctl cache-expire -u idmuser
    ```
7.  [**在服务器和客户端上：通过删除旧的**]{.strong} SSSD 日志来最小化
    dataset 故障排除。
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
8.  [**在客户端上：尝试在尝试前后收集时间戳时**]{.strong}，尝试切换到遇到身份验证问题的用户。这些时间戳进一步缩小了数据集的范围。
    ``` literallayout
    [root@client sssd]# date; su idmuser; date
    Mon Mar 29 16:20:13 EDT 2021
    su: user idmuser does not exist
    Mon Mar 29 16:20:14 EDT 2021
    ```
9.  [*（可选） []{.strong}
    在服务器和客户端中：如果您不想继续收集详细的*]{.emphasis} SSSD
    日志，请降低调试级别。
    ``` literallayout
    [root@server ~]# sssctl debug-level 0
    ```
    ``` literallayout
    [root@client ~]# sssctl debug-level 0
    ```
10. [**服务器和客户端：查看**]{.strong} SSSD
    日志以获取有关失败请求的信息。
    ::: orderedlist
    1.  在客户端日志中查看来自客户端的请求。
    2.  在服务器日志中查看来自客户端的请求。
    3.  在服务器日志中检查请求的结果。
    4.  查看客户端收到来自服务器的请求结果的结果。
    :::
11. 如果您无法确定导致身份验证问题的原因：
    ::: orderedlist
    1.  收集您最近在 IdM 服务器和 IdM 客户端中生成的 SSSD
        日志。根据主机名或角色标记它们。
        ``` literallayout
        [root@server ~]# sssctl logs-fetch sssd-logs-server-Mar29.tar
        ```
        ``` literallayout
        [root@client ~]# sssctl logs-fetch sssd-logs-client-Mar29.tar
        ```
    2.  创建一个红帽技术支持问题单并提供：
        ::: orderedlist
        1.  SSSD 调试日志：
            ::: orderedlist
            1.  `sssd-logs-server-Mar29.tar`{.literal}，来自服务器
            2.  客户端 `中的 sssd-logs-client-Mar29.tar`{.literal}
            :::
        2.  与日志对应的请求的控制台输出，包括时间戳和用户名：
            ``` literallayout
            [root@client sssd]# date; su idmuser; date
            Mon Mar 29 16:20:13 EDT 2021
            su: user idmuser does not exist
            Mon Mar 29 16:20:14 EDT 2021
            ```
        :::
    :::
:::
:::
:::