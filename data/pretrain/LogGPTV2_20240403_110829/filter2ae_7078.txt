# 深入理解 Win32（四）

## 译文声明
本文为翻译文章，具体内容和含义以原文为准。

## 前言
在上一节中，我们探讨了子窗口以及如何在 OllyDbg (OD) 中定位消息处理函数。本节将介绍资源文件及其在 OD 中定位对话框回调函数的方法。

## 资源文件与对话框创建
### 什么是资源文件？
根据 MSDN 的定义：
- **资源脚本** (.rc) 文件。
- **资源模板** (.rct) 文件。
- 单个资源，例如位图、图标或游标文件，这些通常由 .rc 文件引用。
- 开发环境生成的头文件，如 `Resource.h`。
- 在其他文件类型（如 .exe、.dll 和 .res）中的资源称为“资源”。
- 可以在项目中使用资源文件和资源，也可以处理非当前项目部分或在项目开发环境外部创建的 Visual Studio 资源文件。

### 创建对话框
1. **创建资源文件**：首先创建一个资源文件，并手动添加 `resource.h` 头文件。
2. **添加对话框**：右键点击 rc 文件，选择“添加 Dialog”，然后点击“新建”。
3. **修改对话框属性**：右键点击对话框，修改其属性。
4. **编译**：F7 编译后，在 `resource.h` 中会定义一个对话框。

### 使用 `DialogBox` 函数
```cpp
INT_PTR DialogBox(
  HINSTANCE hInstance,  // 模块句柄
  LPCTSTR lpTemplate,   // 对话框模板
  HWND hWndParent,      // 父窗口句柄
  DLGPROC lpDialogFunc  // 对话框过程
);
```
- `hInstance`：包含对话框模板的模块句柄。
- `lpTemplate`：对话框模板，可以是字符串指针或资源标识符。
- `hWndParent`：父窗口句柄。
- `lpDialogFunc`：对话框过程函数指针。

### 消息处理函数
```cpp
BOOL CALLBACK DialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {
    switch (uMsg) {
        case WM_INITDIALOG:
            MessageBox(NULL, TEXT("WM_INITDIALOG"), TEXT("INIT"), MB_OK);
            return TRUE;
        case WM_COMMAND:
            switch (LOWORD(wParam)) {
                case IDC_BUTTON_OK:
                    MessageBox(NULL, TEXT("IDC_BUTTON_OK"), TEXT("OK"), MB_OK);
                    return TRUE;
                case IDC_BUTTON_ERROR:
                    MessageBox(NULL, TEXT("IDC_BUTTON_ERROR"), TEXT("ERROR"), MB_OK);
                    EndDialog(hwndDlg, 0);
                    return TRUE;
            }
            break;
    }
    return FALSE;
}
```

### 使用宏 `MAKEINTRESOURCE`
如果直接使用 `IDD_DIALOG_MAIN` 定义的宏会导致类型转换错误，应使用 `MAKEINTRESOURCE` 宏进行转换：
```cpp
DialogBox(hInstance, MAKEINTRESOURCE(IDD_DIALOG_MAIN), NULL, DialogProc);
```

## 添加按钮和文本框
1. **添加按钮**：双击资源文件，添加两个按钮并调整属性。
2. **添加文本框**：生成两个文本框，分别为 `UserName` 和 `PassWord`。

### 获取文本框内容
1. **获取文本框句柄**：
    ```cpp
    HWND hEditUser = GetDlgItem(hDlg, IDC_EDIT_USER);
    ```
2. **获取文本框内容**：
    ```cpp
    TCHAR szUserBuff[0x50];
    GetWindowText(hEditUser, szUserBuff, 0x50);
    ```

## 定位对话框回调函数
1. **进入入口函数**：打开 OD，找到 `DialogBoxParamA`。
2. **跟踪回调函数**：Ctrl+G 跟踪到回调函数，设置断点并添加判断条件。
3. **消息断点**：如果程序复杂，难以找到消息处理函数，可使用消息断点。
    - 运行程序，找到 W 按钮位置，右键设置 `ClsProc` 消息断点。
    - 继续单步跟踪，检查 `esp+8` 位置的消息类型是否为 `WM_COMMAND`。

通过上述步骤，可以有效地在 OD 中定位和调试对话框的回调函数。