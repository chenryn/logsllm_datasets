```    
迁移完成, 观察错误日志, 对症下药, 因为采用了原子(--single-transaction)方式导入, 所以解决报错后可以直接重新导入.     
```    
cat pg.dump.log     
SET    
SET    
SET    
SET    
SET    
 set_config     
------------    
(1 row)    
SET    
SET    
SET    
SET    
CREATE EXTENSION    
COMMENT    
CREATE EXTENSION    
COMMENT    
CREATE EXTENSION    
COMMENT    
SET    
CREATE TABLE    
ALTER TABLE    
CREATE TABLE    
ALTER TABLE    
CREATE TABLE    
ALTER TABLE    
CREATE TABLE    
ALTER TABLE    
CREATE TABLE    
ALTER TABLE    
CREATE TABLE    
ALTER TABLE    
COPY 0    
COPY 100000    
COPY 1    
COPY 0    
COPY 10    
COPY 1000000    
ALTER TABLE    
ALTER TABLE    
ALTER TABLE    
CREATE INDEX    
CREATE INDEX    
0.08user 0.01system 0:01.78elapsed 5%CPU (0avgtext+0avgdata 1820maxresident)k    
0inputs+8outputs (0major+512minor)pagefaults 0swaps    
```    
5\.2、数据导出导入有3种方法，方法2:  落地导出导入    
如果没有能同时连接到rds和源迁移库的ECS, 可以先使用pg_dump导出文件, 然后将文件拷贝到能连接rds 的机器, 并使用pg_restore导入     
重要提示:    
导出时, 采用源库相同的pg_dump版本    
导入时, 采用目标库相同的pg_restore版本    
5\.2\.1、导出:    
```    
export PGPASSWORD=xxxx    
digoal@iZbp135pwcjjoxqgfpw9k1Z-> nohup pg_dump -F c -h 127.0.0.1 -p 41921 -U postgres -d postgres --no-tablespaces -f ./pg.dump > ./pg.dump.log 2>&1 &   
digoal@iZbp135pwcjjoxqgfpw9k1Z-> ll pg.dump    
-rw-rw-r-- 1 digoal digoal 4.2M Aug 31 10:17 pg.dump    
```    
等待导出完成, 检查pg.dump.log文件, 确认没有报错.    
5\.2\.2、导入:    
```    
export PGPASSWORD=xxxx    
postgres@iZbp135pwcjjoxqgfpw9k1Z-> nohup pg_restore -U postgres -d db3 --no-tablespaces --single-transaction  /tmp/pg.dump  >./pg.restore.log 2>&1 &    
[1] 7208    
postgres@iZbp135pwcjjoxqgfpw9k1Z->     
[1]+  Done                    nohup pg_restore -U postgres -d db3 --no-tablespaces --single-transaction /tmp/pg.dump > ./pg.restore.log 2>&1    
```    
5\.2\.3、导入结束, 观察错误日志, 对症下药, 因为采用了原子方式导入, 所以解决报错后可以直接重新导入.     
```    
postgres@iZbp135pwcjjoxqgfpw9k1Z-> cat pg.restore.log     
nohup: ignoring input    
```    
5\.2\.4、检查目标库, 数据已完全导入    
```    
postgres=> \c db3    
You are now connected to database "db3" as user "postgres".    
db3=> \dt    
              List of relations    
 Schema |       Name       | Type  |  Owner       
--------+------------------+-------+----------    
 public | a                | table | postgres    
 public | pgbench_accounts | table | postgres    
 public | pgbench_branches | table | postgres    
 public | pgbench_history  | table | postgres    
 public | pgbench_tellers  | table | postgres    
 public | scores           | table | postgres    
(6 rows)    
db3=> \dx    
                                     List of installed extensions    
    Name    | Version |   Schema   |                            Description                                
------------+---------+------------+-------------------------------------------------------------------    
 btree_gin  | 1.3     | public     | support for indexing common datatypes in GIN    
 btree_gist | 1.5     | public     | support for indexing common datatypes in GiST    
 pg_trgm    | 1.4     | public     | text similarity measurement and index searching based on trigrams    
 plpgsql    | 1.0     | pg_catalog | PL/pgSQL procedural language    
(4 rows)    
```    
5\.3、数据导出导入有3种方法，方法3:  落地导出导入:  加速导入: 并行迁移       
导出与5.2方法一致， 只是在使用pg_restore导入时， 采取并行的选项。加速。   
重要提示:  注意并行和--single-transaction不能同时使用, 如果导入没有问题, 可以删除目标库后重来, 替换成-j并行提速.    
```    
drop database db3;     
create database db3 with template template0 encoding 'UTF8' lc_ctype 'en_US.utf8' lc_collate 'C';     
```    
-j 4 表示开启4个并行    
```    
export PGPASSWORD=xxxx    
nohup pg_restore -U postgres -d db3 --no-tablespaces -j 4 /tmp/pg.dump  >./pg.restore.log 2>&1 &    
```    
如果还有问题搞不定, 进入社区群交流, 总会有人能帮助你解决.     
![pic](../pic/dingding_pg_chat.jpg)    
## 3、方法3: 付费, 第三方, 例如 DSG     
http://www.dsgdata.com/    
步骤, 略.    
如果需要联系DSG, 也可以加我微信帮忙转达    
![pic](../pic/digoal_weixin.jpg)    
## 其他
1、如果使用的是公网， 希望压缩加速， 可以使用ssl隧道， 建议参考:   
[《PostgreSQL 备份链路sslcompression压缩 (openssl)》](../201605/20160506_06.md)  
2、反向隧道, 解决无法相互直接访问， 但是有中间层可以相互访问的例子    
[《使用 ssh -R 建立反向/远程TCP端口转发代理》](../201406/20140614_01.md)  
## 常见问题
1、plpgsql 权限问题  
解决思路： 可能老版本的pg_dump不支持create extension if not exist plpgsql的用法， 导致rds pg的plpgsql冲突(rds pg默认已经有plpgsql，而且是超级用户的owner)。  
对于这种情况， 可以尝试高版本pg_dump， 或者使用非原子模式(psql不带--single-transaction选项)导入， 跳过这个错误， 但是在导入完成后， 一定要检查日志文件， 看看有没有其他的错误。  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")