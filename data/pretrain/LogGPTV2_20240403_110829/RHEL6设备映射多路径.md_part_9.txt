                wwid WWID_of_root_device
                alias rootdev
            }
        }
        ```
    3.  ::: para
        编辑 `/etc/fstab`{.filename} 并使用带这个多路径设备的 root
        设备替换旧的设备路径。
        :::
        ::: para
        例如：如果您在 `/etc/fstab`{.filename} 文件中有以下条目：
        :::
        ``` screen
        /dev/sda1 /                       ext4    defaults        1 1
        ```
        ::: para
        您可将该条目更改如下：
        :::
        ``` screen
        /dev/mapper/rootdev /             ext4    defaults        1 1
        ```
    :::
    ::: para
    如果您要编辑 `/etc/fstab`{.filename} 文件，您还需要编辑
    `/etc/grub/grub.conf`{.filename} 文件，并将 root 参数从
    `root=/dev/sda1`{.literal} 改为
    `root=/dev/mapper/rootdev`{.literal}。
    :::
    ::: para
    您编辑 `grub.conf`{.filename} 文件前条目应类似如下。
    :::
    ``` screen
    title Red Hat Enterprise Linux FoundationServer (2.6.32-71.24.1.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-71.24.1.el6.x86_64 ro root=/dev/sda1 rd_NO_LUKS
    rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYTABLE=us
    console=ttyS0,115200n8 crashkernel=auto
            initrd /initramfs-2.6.32-71.24.1.el6.x86_64.img
    ```
    ::: para
    您编辑 `grub.conf`{.filename} 文件后条目应类似如下。
    :::
    ``` screen
    title Red Hat Enterprise Linux FoundationServer (2.6.32-71.24.1.el6.x86_64)
            root (hd0,0)
            kernel /vmlinuz-2.6.32-71.24.1.el6.x86_64 ro root=/dev/mapper/rootdev
    rd_NO_LUKS rd_NO_MD rd_NO_DM LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16
    KEYTABLE=us console=ttyS0,115200n8 crashkernel=auto
            initrd /initramfs-2.6.32-71.24.1.el6.x86_64.img
    ```
6.  ::: para
    关闭机器。
    :::
7.  ::: para
    配置 FC 开关以便可在该机器中看到其它路径。
    :::
8.  ::: para
    引导机器。
    :::
9.  ::: para
    查看 root 文件系统（\'/\'）是否在多路径设备中。
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#move_swap_to_multipath}5.3. 将 swap 文件系统从单一路径设备移动到多路径设备中 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm139642150077392
.indexterm}[]{#MPIO_admin-troubleshoot.html#idm139642150076464
.indexterm}
::: para
默认情况下将 swap
设备设定为逻辑卷。只要您在由该逻辑卷组组成的物理卷中配置多路径。就不要求在将其配置为多路径设备时有任何特殊配置。如果您的
swap 设备不是 LVM 卷，且使用设备名称挂载该卷，您就需要编辑
`fstab`{.filename} 文件将其转换为适当的多路径设备名称。
:::
::: {.orderedlist xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    运行 `/sbin/multipath`{.command} 命令使用 `-v3`{.option} 选项确定
    swap 设备的 WWID 号。该命令的输出应该在路径列表中显示该 swap 设备。
    :::
    ::: para
    您可以在该命令输出中看到有以下格式的行，它显示 swap 设备：
    :::
    ``` screen
    WWID  H:B:T:L devname MAJOR:MINOR
    ```
    ::: para
    例如：如果在 `sda`{.literal} 或者它的分区中设置 swap
    文件系统，您会在输出中看到类似如下的行：
    :::
    ``` screen
    ===== paths list =====
    ...
    1ATA     WDC WD800JD-75MSA3                           WD-WMAM9F 1:0:0:0 sda 8:0
    ...
    ```
2.  ::: para
    在 `/etc/multipath.conf`{.filename} 文件中为 swap 设备配置别名。
    :::
    ``` screen
    multipaths {
        multipath {
            wwid WWID_of_swap_device
            alias swapdev
        }
    }
    ```
3.  ::: para
    编辑 `/etc/fstab`{.filename} 并使用带这个多路径设备的 root
    设备替换旧的设备路径。
    :::
    ::: para
    例如：如果您在 `/etc/fstab`{.filename} 文件中有以下条目：
    :::
    ``` screen
    /dev/sda2 swap                    ext4    defaults        0 0
    ```
    ::: para
    您可将该条目更改如下：
    :::
    ``` screen
    /dev/mapper/swapdev swap          ext4    defaults        0 0
    ```
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipath_daemon}5.4. 多路径守护进程 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm139642156552192 .indexterm}
::: para
如果您在进行多路径配置时遇到问题，您应该确定多路径守护进程正在运行，如
[第 3 章 *设置 DM-Multipath*](#mpio_setup.html){.xref} 所述。必须运行
`multipathd`{.command} 守护进程以便使用多路径设备。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#many_luns}5.5. 大量 LUN 造成的问题 {.title}
:::
::: para
当在某个节点中添加大量 LUN 时，使用多路径设备可明显延长 `udev`{.literal}
设备过滤器为其生成设备节点所用的时间。如果您遇到过这个问题，您可在
`/etc/udev/rules.d/40-multipath.rules`{.filename}
文件中删除以下行解决这个问题：
:::
``` screen
KERNEL!="dm-[0-9]*", ACTION=="add", PROGRAM=="/bin/bash -c '/sbin/lsmod | /bin/grep ^dm_multipath'", RUN+="/sbin/multipath -v0 %M:%m"
```
::: para
这行会在每次向该节点中添加块设备时让 `udev`{.literal} 设备管理器运行
`multipath`{.literal}。虽然删除了这一行，`multipathd`{.command}
守护进程仍将自动生成多路径设备，在引导过程中仍将为带多路径根文件系统的节点调用
`multipath`{.literal}。唯一的改变就是没有运行 `multipathd`{.command}
守护进程不再自动生成多路径设备，对大多数多路径用户来说应该不是个问题。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#queueifnopath_issues}5.6. 有 queue_if_no_path 功能的问题 {.title}
:::
::: para
如果在 `/etc/multipath.conf`{.filename} 文件中指定
`features "1 queue_if_no_path"`{.literal}，那么所有采用 I/O
操作的进程都将被挂起直到恢复了一个或者多个路径。要避免这种情况，请在
`/etc/multipath.conf`{.filename} 文件中设定 `no_path_retry`{.literal}
*`N`* 参数（其中 *`N`* 是该系统应该重试某个路径的次数）。
:::
::: para
当您设定 `no_path_retry`{.literal} 参数时，还要从
`/etc/multipath.conf`{.filename} 文件中删除
`features "1 queue_if_no_path"`{.literal} 选项。但如果您使用默认编译为
`features "1 queue_if_no_path"`{.literal} 选项的多路径设备（很多 SAN
设备都是如此），则您必须添加 `features "0"`{.literal}
覆盖这个默认设置。您可以将
`/usr/share/doc/device-mapper-multipath-0.4.9/multipath.conf.defaults`{.filename}
中您设备的现有 devices 部分复制到 `/etc/multipath.conf`{.filename}
并进行编辑以便适应您的需要。
:::
::: para
如果您需要使用 `features "1 queue_if_no_path"`{.literal}
选项，且您遇到过这里提到的问题，请使用 `dmsetup`{.command} 命令为特定
LUN 编辑运行时策略（就是说对该特定 LUN
来说所有路径都不可用）。例如：如果您想要将多路径设备 `mpath2`{.literal}
的策略从 `"queue_if_no_path"`{.literal} 改为
`"fail_if_no_path"`{.literal}，请执行以下命令。
:::
``` screen
dmsetup message mpathc 0 "fail_if_no_path"
```
::: para
请注意：您必须指定 `mpath`{.literal}*`n`* 别名而不是该路径。
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#MPIO_output}5.7. 多路径命令输出 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm139642169217968 .indexterm}
::: para
当您生成、修改或者列出多路径设备时，您会获得一个当前设备组成的打印输出，格式如下。
:::
::: para
对于每个多路径设备：
:::
``` screen
 action_if_any: alias (wwid_if_different_from_alias) dm_device_name_if_known vendor,product size=size features='features' hwhandler='hardware_handler' wp=write_permission_if_known 
```
::: para
对与每个路径组群：
:::
``` screen
-+- policy='scheduling_policy' prio=prio_if_known status=path_group_status_if_known
```
::: para
对于每个路径：
:::
``` screen
 `- host:channel:id:lun devnode major:minor dm_status_if_known path_status online_status
```
::: para
例如，多路径命令的输出可能是如下形式：
:::
``` screen
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
::: para
如果该路径已经启用并准备好执行 I/O，那么路径的状态就是 `ready`{.literal}
或者 `ghost`{.literal}。如果该路径无法使用，则状态为 `faulty`{.literal}
或者 `shaky`{.literal}。路径的状态由 `multipathd`{.command}
守护进程根据在 `/etc/multipath.conf`{.filename}
文件中定义的通信间隔进行周期性更新。
:::
::: para
dm 状态和路径的状态相似，但从内核来看，dm
有两个状态：`failed`{.literal}（类似 `faulty`{.literal}）和
`active`{.literal}（涵盖所有其它路径状态）。少数情况下，设备的路径状态和
dm 状态会暂时不同。
:::
::: para
*`online_status`* 的可能值为 `running`{.literal} 和
`offline`{.literal}。`offline`{.literal} 意味着这个 SCSI 设备已被禁用。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
当生成或者修改一个多路径设备时，路径组群状态、dm 设备名称、写入权限和 dm
状态是未知的。另外，功能也不一定正确。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#MPIO_admin-troubleshoot.html#multipath_queries}5.8. 使用多路径命令进行多路径查询 {.title}
:::
[]{#MPIO_admin-troubleshoot.html#idm139642167302544 .indexterm}
::: para
您可以使用 `multipath`{.command} 命令的 `-l`{.option} 和 `-ll`{.option}
选项来显示现有多路径配置。 `-l`{.option} 选项显示从 `sysfs`{.literal}
以及设备映射器中收集的多路径拓补信息。`-ll`{.option} 选项显示
`-l`{.option} 显示的所有信息以及该系统额外可用的其它组件。
:::
::: para
当显示多路径配置时，您可以使用 `multipath`{.command} 命令的
`-v`{.option} 选项指定三种详细等级。指定为 `-v0`{.option}
时没有输出。指定为 `-v1`{.option} 则只输出生成或者更新的路径名称。指定
`-v2`{.option} 将输出所有检测到的路径、多路径和设备映射。
:::
::: para
以下示例显示了 `multipath -l`{.command} 命令的输出。
:::
``` screen
# multipath -l
3600d0230000000000e13955cc3757800 dm-1 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=active
| `- 6:0:0:0 sdb 8:16  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 7:0:0:0 sdf 8:80  active ready  running
```
::: para
以下示例显示了 `multipath -l1`{.command} 命令的输出。
:::
``` screen
# multipath -ll
3600d0230000000000e13955cc3757801 dm-10 WINSYS,SF2372
size=269G features='0' hwhandler='0' wp=rw
|-+- policy='round-robin 0' prio=1 status=enabled
| `- 19:0:0:1 sdc 8:32  active ready  running
`-+- policy='round-robin 0' prio=1 status=enabled
  `- 18:0:0:1 sdh 8:112 active ready  running
3600d0230000000000e13955cc3757803 dm-2 WINSYS,SF2372
size=125G features='0' hwhandler='0' wp=rw
`-+- policy='round-robin 0' prio=1 status=active
  |- 19:0:0:3 sde 8:64  active ready  running
  `- 18:0:0:3 sdj 8:144 active ready  running
```
::: para
:::
:::