### SMT and Capital Requirements

We utilized a relatively unoptimized implementation of SMT. Our findings indicate that the capital requirements for extracting the discovered revenues are minimal: most strategies require less than 150.00 ETH (approximately 60,000 USD) without flash loans, and less than 1.00 ETH (approximately 400 USD) with flash loans.

### Security Implications and Quantitative Analysis

Our research quantitatively demonstrates the troubling security implications of profitable transactions on blockchain consensus. Using optimal adversarial strategies provided by a Markov Decision Process (MDP), we quantify the threshold value at which a miner, aware of Maximum Extractable Value (MEV), will fork the blockchain if they fail to claim an unconfirmed MEV opportunity first. For example, on the current Ethereum network, a miner with a 10% hash rate will fork the chain if an MEV opportunity exceeds 4 block rewards. In comparison, the bZx opportunity exceeded the Ethereum block reward by a factor of 874 times. This work thus quantifies the inherent tension between revenue extraction from profitable transactions and blockchain security. As the DeFi ecosystem grows and becomes more popular, we can expect these trading opportunities to expand.

### Acknowledgments

We extend our sincere gratitude to the anonymous reviewers and Nicolas Christin for their thorough reviews and valuable suggestions, which significantly strengthened this paper. We are also grateful to the Lucerne University of Applied Sciences and Arts for generously supporting Kaihua Qin’s Ph.D. studies.

### Forking Thresholds and Future Work

Figure 14 illustrates the minimum MEV value in terms of block rewards required to fork a Proof-of-Work (PoW) blockchain, as determined by the optimal adversarial strategies of the MDP. For instance, on Ethereum (with a block reward of 5.72%), a miner with a 10% hash rate will fork the chain to exploit an MEV opportunity if it yields more than 4 block rewards. Future work will include simulations to explore scenarios where multiple miners either collaborate to share MEV profits or compete against each other, potentially exacerbating the fork rate and further compromising blockchain consensus security.

### Related Work

#### Blockchain and DeFi Research

While blockchain research spans over a decade, DeFi is a relatively recent area with fewer studies. There is a growing body of literature focusing on the security of the DeFi ecosystem. Studies have extensively examined front-running in exchanges, games, gambling, mixers, the network layer, and name services [1, 12, 20, 25, 32, 42, 47, 61]. Daian et al. [20] provide a comprehensive analysis of profiting from transaction ordering. Xu et al. [60] present a detailed study of pump-and-dump schemes and develop a prediction model to estimate the likelihood of such activities. Gudgeon et al. [37] explore the potential for a DeFi crisis due to design weaknesses and present a stress testing framework. Qin et al. [53] investigate DeFi attacks through flash loans and methods to optimize their profit. It is noted that the optimization solution in [53] applies only to previously fixed attack vectors, whereas this work considers the composability of DeFi protocols.

#### Smart Contract Analysis

In addition to the above-mentioned DeFi research, many studies focus on the vulnerability discovery of smart contracts [10, 13, 16, 19, 36, 38, 39, 41, 43, 45, 48, 56, 57]. Traditional smart contract vulnerabilities, such as re-entrancy attacks, unhandled exceptions, locked ether, and overflows, have been extensively studied [48]. To the best of our knowledge, no prior work has addressed the specific issues discussed in this paper.

### References

[1] Consensys/0x-review: Security review of 0x smart contracts. https://github.com/ConsenSys/0x-review.
[2] How many stablecoins are there? - cementdao - medium. https://medium.com/cementdao/how-many-stablecoins-are-there-aa39d201ac12.
[3] Bzx network, 2020.
[4] Aave. Aave Protocol. https://github.com/aave/aave-protocol, 2020.
[5] Akropolis. Akropolis Hack Update.
[6] Nicola Atzei, Massimo Bartoletti, and Tiziana Cimoli. A survey of attacks on Ethereum smart contracts (SOK). In International Conference on Principles of Security and Trust, pages 164–186. Springer, 2017.
[7] Christel Baier and Joost-Pieter Katoen. Principles of Model Checking. MIT Press, 2008.
[8] Richard Bellman. On a routing problem. Quarterly of Applied Mathematics, 16(1):87–90, 1958.
[9] Bitinfocharts. Ethereum block time.
[10] Marcel Böhme, Van-Thuan Pham, Manh-Dung Nguyen, and Abhik Roychoudhury. Directed greybox fuzzing. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages 2329–2344, 2017.
[11] Joseph Bonneau, Andrew Miller, Jeremy Clark, Arvind Narayanan, Joshua A Kroll, and Edward W Felten. SOK: Research perspectives and challenges for Bitcoin and cryptocurrencies. In Security and Privacy (SP), 2015 IEEE Symposium on, pages 104–121. IEEE, 2015.
[12] Lorenz Breidenbach, Phil Daian, Florian Tramèr, and Ari Juels. Enter the hydra: Towards principled bug bounties and exploit-resistant smart contracts. In 27th USENIX Security Symposium (USENIX Security 18), pages 1335–1352, 2018.
[13] Lexi Brent, Anton Jurisevic, Michael Kong, Eric Liu, Francois Gauthier, Vincent Gramoli, Ralph Holz, and Bernhard Scholz. Vandal: A scalable security analysis framework for smart contracts. arXiv preprint arXiv:1809.03981, 2018.
[14] Roberto Bruttomesso, Alessandro Cimatti, Anders Franzén, Alberto Griggio, and Roberto Sebastiani. The MathSAT 4 SMT solver. In International Conference on Computer Aided Verification, pages 299–303. Springer, 2008.
[15] Nitin Chandrachoodan, Shuvra S Bhattacharyya, and KJ Ray Liu. Adaptive negative cycle detection in dynamic graphs. In ISCAS 2001. The 2001 IEEE International Symposium on Circuits and Systems (Cat. No. 01CH37196), volume 5, pages 163–166. IEEE, 2001.
[16] Jialiang Chang, Bo Gao, Hao Xiao, Jun Sun, Yan Cai, and Zijiang Yang. scompile: Critical path identification and analysis for smart contracts. In International Conference on Formal Engineering Methods, pages 286–304. Springer, 2019.
[17] James Chen. Bid and ask definition, Sep 2020.
[18] Boris V Cherkassky and Andrew V Goldberg. Negative-cycle detection algorithms. Mathematical Programming, 85(2), 1999.
[19] Crytic. Echidna: Ethereum fuzz testing framework, February 2020.
[20] Philip Daian, Steven Goldfeder, Tyler Kell, Yunqi Li, Xueyuan Zhao, Iddo Bentov, Lorenz Breidenbach, and Ari Juels. Flash Boys 2.0: Frontrunning, Transaction Reordering, and Consensus Instability in Decentralized Exchanges. arXiv preprint arXiv:1904.05234, 2019.
[21] Leonardo De Moura and Nikolaj Bjørner. Z3: An efficient SMT solver. In International Conference on Tools and Algorithms for the Construction and Analysis of Systems, pages 337–340. Springer, 2008.
[22] Christian Decker and Roger Wattenhofer. Information propagation in the Bitcoin network. In Conference on Peer-to-Peer Computing, pages 1–10, 2013.
[23] Value DeFi. MultiStables Vault Exploit Post-Mortem.
[24] dYdX. dYdX. https://dydx.exchange/, 2020.
[25] Shayan Eskandari, Seyedehmahsa Moosavi, and Jeremy Clark. SOK: Transparent dishonesty: front-running attacks on blockchain. 2019.
[26] Balancer Finance. Balancer Finance.
[27] Compound Finance. Compound finance, 2019.
[28] Harvest Finance. Harvest Flashloan Economic Attack Post-Mortem.
[29] Lester Randolph Ford Jr and Delbert Ray Fulkerson. Flows in Networks. Princeton University Press, 2015.
[30] The Maker Foundation. MakerDAO. https://makerdao.com/en/, 2019.
[31] Arthur Gervais, Ghassan O Karame, Karl Wüst, Vasileios Glykantzis, Hubert Ritzdorf, and Srdjan Capkun. On the security and performance of proof of work blockchains. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pages 3–16. ACM, 2016.
[32] Arthur Gervais, Hubert Ritzdorf, Ghassan O Karame, and Srdjan Capkun. Tampering with the delivery of blocks and transactions in Bitcoin. In Conference on Computer and Communications Security, pages 692–705. ACM, 2015.
[33] Andrew Goldberg and Tomasz Radzik. A heuristic improvement of the Bellman-Ford algorithm. Technical report, STANFORD UNIV CA DEPT OF COMPUTER SCIENCE, 1993.
[34] Andrew V Goldberg. Scaling algorithms for the shortest paths problem. SIAM Journal on Computing, 24(3):494–504, 1995.
[35] Donald Goldfarb, Jianxiu Hao, and Sheng-Roan Kai. Shortest path algorithms using dynamic breadth-first search. Networks, 21(1):29–50, 1991.
[36] Neville Grech, Michael Kong, Anton Jurisevic, Lexi Brent, Bernhard Scholz, and Yannis Smaragdakis. MadMax: Surviving out-of-gas conditions in Ethereum smart contracts. Proceedings of the ACM on Programming Languages, 2(OOPSLA):1–27, 2018.
[37] Lewis Gudgeon, Daniel Perez, Dominik Harz, Arthur Gervais, and Benjamin Livshits. The decentralized financial crisis: Attacking DeFi, 2020.
[38] Campbell R Harvey. CryptoFinance. 2016.
[39] Jingxuan He, Mislav Balunović, Nodar Ambroladze, Petar Tsankov, and Martin Vechev. Learning to fuzz from symbolic execution with application to smart contracts. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, CCS ’19, pages 531–548, New York, NY, USA, 2019. ACM.
[40] Eyal Hertzog, Guy Benartzi, and Galia Benartzi. Bancor protocol. 2017.
[41] Bo Jiang, Ye Liu, and WK Chan. ContractFuzzer: Fuzzing smart contracts for vulnerability detection. In Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering, pages 259–269. ACM, 2018.
[42] Harry A Kalodner, Miles Carlsten, Paul Ellenbogen, Joseph Bonneau, and Arvind Narayanan. An empirical study of Namecoin and lessons for decentralized namespace design. In WEIS. Citeseer, 2015.
[43] Sukrit Kalra, Seep Goel, Mohan Dhawan, and Subodh Sharma. Zeus: Analyzing safety of smart contracts. In NDSS, 2018.
[44] Jeff L Kennington and Richard V Helgason. Algorithms for Network Programming. John Wiley & Sons, Inc., 1980.
[45] Johannes Krupp and Christian Rossow. Teether: Gnawing at Ethereum to automatically exploit smart contracts. In 27th USENIX Security Symposium (USENIX Security 18), pages 1317–1333, 2018.
[46] Kyber. Kyber. https://kyber.network/, 2020.
[47] Duc V Le and Arthur Gervais. AMR: Autonomous coin mixer with privacy-preserving reward distribution. arXiv preprint arXiv:2010.01056, 2020.
[48] Loi Luu, Duc-Hiep Chu, Hrishi Olickel, Prateek Saxena, and Aquinas Hobor. Making smart contracts smarter. In Proceedings of the 2016 ACM SIGSAC conference on computer and communications security, pages 254–269, 2016.
[49] Makiko Mita, Kensuke Ito, Shohei Ohsawa, and Hideyuki Tanaka. What is stablecoin?: A survey on price stabilization mechanisms for decentralized payment systems. arXiv preprint arXiv:1906.06037, 2019.
[50] Amani Moin, Kevin Sekniqi, and Emin Gun Sirer. SOK: A classification framework for stablecoin designs. In Financial Cryptography, 2020.
[51] Edward F Moore. The shortest path through a maze. In Proc. Int. Symp. Switching Theory, 1959, pages 285–292, 1959.
[52] DeFi Pulse. The DeFi Leaderboard. https://defipulse.com/, 2019.
[53] Kaihua Qin, Liyi Zhou, Benjamin Livshits, and Arthur Gervais. Attacking the DeFi ecosystem with flash loans for fun and profit. Financial Cryptography and Data Security (FC), 2021.
[54] Matheus Souza, Mateus Borges, Marcelo d’Amorim, and Corina S Păsăreanu. Coral: Solving complex constraints for Symbolic Pathfinder. In NASA Formal Methods Symposium, pages 359–374. Springer, 2011.
[55] theblockcrypto. DeFi protocol Origin gets attacked, loses 7 million USD.
[56] Sergei Tikhomirov, Ekaterina Voskresenskaya, Ivan Ivanitskiy, Ramil Takhaviev, Evgeny Marchenko, and Yaroslav Alexandrov. SmartCheck: Static analysis of Ethereum smart contracts. In Proceedings of the 1st International Workshop on Emerging Trends in Software Engineering for Blockchain, pages 9–16, 2018.
[57] Petar Tsankov, Andrei Dan, Dana Drachsler-Cohen, Arthur Gervais, Florian Buenzli, and Martin Vechev. Securify: Practical security analysis of smart contracts. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pages 67–82. ACM, 2018.
[58] Uniswap.io, 2018. accessed 12 November, 2019, https://docs.uniswap.io/.

### Token Statistics

| Token | Unique Holders | Transfer Transactions | Markets Trading |
|-------|----------------|----------------------|-----------------|
| SAI   | 181,223        | 3,139,071             | 4               |
| BNT   | 23,966         | 2,620,652             | 144             |
| DAI   | 68,357         | 2,155,535             | 130             |
| BAT   | 288,970        | 1,970,176             | 218             |
| ENJ   | 52,341         | 902,471               | 66              |
| SNT   | 82,663         | 868,007               | 101             |
| KNC   | 65,018         | 820,501               | 73              |
| MKR   | 20,891         | 733,845               | 67              |
| DATA  | 444,833        | 588,097               | 26              |
| MANA  | 38,276         | 565,151               | 77              |
| ANT   | 22,321         | 217,657               | 24              |
| RLC   | 12,880         | 209,255               | 24              |
| RCN   | 19,831         | 203,893               | 24              |
| UBT   | 10,410         | 191,153               | 24              |
| GNO   | 10,695         | 170,507               | 24              |
| RDN   | 13,842         | 143,308               | 24              |
| TKN   | 5,485          | 84,912                | 24              |
| TRST  | 7,738          | 71,223                | 24              |
| AMN   | 2,593          | 53,010                | 24              |
| FXC   | 2,024          | 47,906                | 24              |
| SAN   | 2,247          | 36,054                | 24              |
| AMPL  | 1,931          | 31,124                | 24              |
| HEDG  | 1,709          | 30,770                | 24              |
| POA20 | 560            | 26,390                | 24              |

This revised text aims to be more coherent, clear, and professional, with improved readability and structure.