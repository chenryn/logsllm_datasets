### IE确定文件类型的机制

#### 机制概述
- **Content-Type 注册在注册表中？**
  - Content-Type 是否在 Windows 注册表中注册？
  - Content-Typeがレジストリに登录されているか
- **嗅探内容并确定文件类型**
  - 通过内容嗅探来确定文件类型。
  - Sniff content and determine file-type.
  - コンテンツの内容によってファイルタイプを决定
  - 例如：`Content-Type: image/bmp`
- **网址的副档名和 QUERY_STRING**
  - 根据 URL 的扩展名和 `QUERY_STRING` 确定文件类型。
  - Extension of URL, QUERY_STRING
  - URLの拡张子, QUERY_STRING
  - 示例：
    - `http://example.jp/foo.cgi?param=abc&a.html`
    - `http://example.jp/foo.exe?param=abc&a.html`
    - `http://example.jp/foo?param=abc&a.html`
    - `http://example.jp/foo/?param=abc&a.html`
    - `http://example.jp/foo.php?param=abc&a.html`
    - `http://example.jp/foo.php/a.html?param=abc`
  - 文件类型判断示例：
    - `filetype == html`
    - `filetype != html`

#### 总结
- **总之很复杂！**
  - Anyway, Complicated!
  - とにかく复雑

### XSS案例

#### 案例1
- **URL**
  - `https://www.microsoft.com/en-us/homepage/`
  - `bimapping.js/a.html?v=&k...`
- **HTTP 响应头**
  - `HTTP/1.1 200 OK`
  - `Content-Type: text/javascript; charset=utf-8`
  - `Date: Wed, 22 Jun 2011 13:53:37 GMT`
  - `Content-Length: 2092`
- **响应内容**
  - `var ={"Webtrends":{"enabled":true,"settings":{"interactiontype":{"0":true,"1":true,"2":true,"3":true,"4":true,"5":true,"6":true,"7":true,"8":true,"9":true,"10":true,"11":true,"12":true,"13"....`
- **问题**
  - `"text/javascript"` 未在注册表中注册。

#### 对策
- **使用 "X-Content-Type-Options:nosniff"（仅适用于 IE8+）**
  - Use "X-Content-Type-Options:nosniff" (only for IE8+)
- **仅使用已知的 Content-Type**
  - 不要使用 `"text/javascript"`。
  - Use only well-known Content-Type. Don't use "text/javascript".

### 绕过 Content-Disposition Header

#### 机制
- **浏览器的下载指令**
  - `Content-Disposition: attachment`
  - Download directive for browsers
  - ブラウザへのダウンロード指令
- **防止 XSS 的常用方法**
  - Often used to prevent XSS
  - よくXSSを防ぐために使用される

#### 攻击者绕过方法
- **使用特制的 JavaScript**
  - 攻击者可以通过特制的 JavaScript 绕过 `Content-Disposition: attachment`。
  - Bypass 'Content-Disposition: attachment' with specially crafted JavaScript by attacker
  - 攻撃者の细工したJavaScriptにより'Content-Disposition: attachment'を回避可能

#### 陷阱页面
- **攻击者创建的陷阱页面**
  - 目标内容带有 `Content-Disposition: attachment`。
  - Trap page by attacker
  - Target content with "Content-Disposition: attachment"

#### 发布情况
- **发布时间**
  - 2007年7月在日本悄悄地发表
  - Published: Jul 2007 in Javap by stealth
  - 2007年7月に日本でひっそりと公开
- **受影响版本**
  - 受影响版本：IE6 / IE7 / IE8
  - Affected: IE6 / IE7 / IE8
- **无法由服务器端防止 XSS**
  - No way to prevent XSS by server-side.
  - サーバ侧でXSSを防ぐ手段はない

### MLang编码转换问题

#### 机制概述
- **MLang 功能**
  - MLang 是一个支持多语言的 DLL，包含文本编码转换功能。
  - MLang: DLL for multi-language support including conversion of text encoding.
  - MLangは文字エンコーディングの変换机能を含む、多言语サポートのためのDLL
  - 主要函数：
    - `ConvertINetMultiByteToUnicode`
    - `ConvertINetUnicodeToMultiByte`
    - `ConvertINetString`

#### IE 使用 MLang 处理外部文本
- **处理过程**
  - IE 使用 MLang 将外部文本转换为 Unicode 进行处理。
  - IE handles text as Unicode from outside with conversion by MLang.
  - IEはMLangを使って外部からの文字列をUnicodeに変换して処理
  - 支持的编码：
    - Shift_JIS
    - EUC-KR
    - Big5
    - 转换为 UTF-16LE

#### 转换问题
- **损坏的字节串**
  - 即使给定的是损坏的字节串，MLang 也会尽量将其转换为 Unicode。
  - Converted to Unicode accordingly when given broken byte sequence.
  - 壊れたバイト列を渡したときも、それなりにUnicodeに変换される
- **生成不存在的元字符**
  - 生成原始字节串中不存在的元字符（如 `<` 和 `>`），可能导致 XSS。
  - Meta characters ("<>" etc.) which don't exist in the original byte sequence are generated.
  - もとのバイト列に存在しない“"<>”などが生成され、XSSにつながる

#### 防止方法
- **服务器端验证**
  - 从服务器端防止这种 XSS 问题非常困难。
  - Too hard to prevent XSS for this issue by server-side.
  - サーバ侧でこの问题に対処するのたいへん
  - 需要验证所有字母/字节是否符合指定的字符集编码。
  - Validate all letters/bytes as the charset encoding.
  - 文字エンコーディングとして适切か全文字/全バイトを検证

#### 公布情况
- **详细信息未公布**
  - Not published for details now.
  - 现状は详细は非公开
- **受影响版本**
  - 影响版本：IE6, IE7
  - IE8 已修复
  - Affected: IE6, IE7
  - IE8: fixed
- **报告时间**
  - 2007 年 10 月已报告
  - Reported: Oct 2007

### 结论

- **针对 IE 浏览器实现 XSS 的多种方法**
  - There are many ways to achieve XSS specifically for IE.
  - IEのみでXSSを発生させる方法がたくさんある
- **特别是长期未修补漏洞的 IE 6/7**
  - Especially for IE6/7, which have not been fixed for a long time.
  - 特にIE6/7。长い间修正されていない。

### 致谢
- 感谢 David Ross 和 MSRC 提供的帮助建议。
- 感谢 Google Translate 提供翻译。
- 感谢您的关注！

### 任何问题？
- 邮件：PI:EMAIL
- Twitter: @hasegawayosuke
- 网站: http://utf-8.jp/

谢谢！