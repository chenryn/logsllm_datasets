2015/1034, 2015.
[20] Christopher Domas. Breaking the x86 ISA, v. 2017-
07-27. Black Hat US, 2017.
[21] Michael Eddington. Peach Fuzzer. URL: https://
www.peach.tech/.
[22] Dmitry Evtyushkin and Dmitry Ponomarev. Covert
channels through random number generator: Mecha-
nisms, capacity estimation and mitigations. In CCS,
2016.
[23] Dmitry Evtyushkin, Dmitry Ponomarev, and Nael Abu-
Ghazaleh. Covert channels through branch predictors:
a feasibility study. In HASP, 2015.
[24] Dmitry Evtyushkin, Dmitry Ponomarev, and Nael Abu-
Ghazaleh. Jump Over ASLR: Attacking Branch Pre-
dictors to Bypass ASLR. In MICRO, 2016.
[25] Dmitry Evtyushkin, Ryan Riley, Nael CSE Abu-
Ghazaleh, ECE, and Dmitry Ponomarev. BranchScope:
A New Side-Channel Attack on Directional Branch
Predictor. In ASPLOS, 2018.
[26] Brandon Falk.
Sushi Roll: A CPU research
for cycle-by-cycle
URL:
kernel with minimal noise
microarchitectural
https://gamozolabs.github.io/metrology/
2019/08/19/sushi_roll.html.
introspection, 2019.
[27] Anders Fogh. Covert Shotgun: automatically ﬁnding
SMT covert channels, 2016. URL: https://cyber.
wtf/2016/09/27/covert-shotgun/.
[28] Qian Ge, Yuval Yarom, David Cock, and Gernot Heiser.
A Survey of Microarchitectural Timing Attacks and
Countermeasures on Contemporary Hardware. Journal
of Cryptographic Engineering, 2016.
[29] David Gens, Orlando Arias, Dean Sullivan, Christo-
pher Liebchen, Yier Jin, and Ahmad-Reza Sadeghi.
LAZARUS: Practical Side-Channel Resilient Kernel-
Space Randomization. In RAID, 2017.
[30] Ben Gras, Cristiano Giuffrida, Michael Kurth, Herbert
Bos, and Kaveh Razavi. ABSynthe: Automatic Black-
box Side-channel Synthesis on Commodity Microar-
chitectures. In NDSS, 2020.
[31] Daniel Gruss. Software-based Microarchitectural At-
tacks. PhD thesis, Graz University of Technology,
2017.
[32] Daniel Gruss, Moritz Lipp, Michael Schwarz, Richard
Fellner, Clémentine Maurice, and Stefan Mangard.
KASLR is Dead: Long Live KASLR. In ESSoS, 2017.
USENIX Association
30th USENIX Security Symposium    1429
[33] Daniel Gruss, Clémentine Maurice, Anders Fogh,
Moritz Lipp, and Stefan Mangard. Prefetch Side-
Channel Attacks: Bypassing SMAP and Kernel ASLR.
In CCS, 2016.
[47] Intel. Special Register Buffer Data Sampling, 2020.
URL: https://software.intel.com/security-
software-guidance/deep-dives/deep-dive-
special-register-buffer-data-sampling.
[34] Daniel Gruss, Clémentine Maurice, and Stefan Man-
gard. Rowhammer.js: A Remote Software-Induced
Fault Attack in JavaScript. In DIMVA, 2016.
[48] Gorka Irazoqui, Thomas Eisenbarth, and Berk Sunar.
Mascat: Preventing microarchitectural attacks before
distribution. In CODASPY, 2018.
[35] Daniel Gruss, Clémentine Maurice, Klaus Wagner, and
Stefan Mangard. Flush+Flush: A Fast and Stealthy
Cache Attack. In DIMVA, 2016.
[49] Yeongjin Jang, Sangho Lee, and Taesoo Kim. Break-
ing Kernel Address Space Layout Randomization with
Intel TSX. In CCS, 2016.
[36] Daniel Gruss, Raphael Spreitzer, and Stefan Mangard.
Cache Template Attacks: Automating Attacks on In-
clusive Last-Level Caches. In USENIX Security Sym-
posium, 2015.
[37] David Gullasch, Endre Bangerter, and Stephan Krenn.
Cache Games – Bringing Access-Based Cache Attacks
on AES to Practice. In S&P, 2011.
[38] HyungSeok Han, DongHyeon Oh, and Sang Kil Cha.
CodeAlchemist: Semantics-aware code generation to
In NDSS,
ﬁnd vulnerabilities in javascript engines.
2019.
[39] Aki Helin. Radamsa. URL: https://gitlab.com/
akihe/radamsa.
[40] Nishad Herath and Anders Fogh. These are Not Your
Grand Daddys CPU Performance Counters – CPU
Hardware Performance Counters for Security. In Black
Hat Brieﬁngs, 2015.
[41] Sam Hocevar. Zzuf. URL: https://github.com/
samhocevar/zzuf/.
[42] Ralf Hund, Carsten Willems, and Thorsten Holz. Practi-
cal Timing Side Channel Attacks against Kernel Space
ASLR. In S&P, 2013.
[43] Intel. Intel 64 and IA-32 Architectures Optimization
Reference Manual, 2019.
[44] Intel. Intel 64 and IA-32 Architectures Software De-
veloper’s Manual, Volume 3 (3A, 3B & 3C): System
Programming Guide, 2019.
[45] Intel.
Intel 64 and IA-32 Architectures Software
Developer(cid:48)s Manual Volume 2 (2A, 2B & 2C): Instruc-
tion Set Reference, A-Z, 2019.
[46] Intel. Affected Processors: Transient Execution At-
tacks, 2020. URL: https://software.intel.com/
security-software-guidance/processors-
affected-transient-execution-attack-
mitigation-product-cpu-model.
[50] Paul Kocher, Jann Horn, Anders Fogh, Daniel Genkin,
Daniel Gruss, Werner Haas, Mike Hamburg, Moritz
Lipp, Stefan Mangard, Thomas Prescher, Michael
Schwarz, and Yuval Yarom. Spectre Attacks: Exploit-
ing Speculative Execution. In S&P, 2019.
[51] Paul C. Kocher. Timing Attacks on Implementations
of Diffe-Hellman, RSA, DSS, and Other Systems. In
CRYPTO, 1996.
[52] Esmaeil Mohammadian Koruyeh, Khaled Khasawneh,
Chengyu Song, and Nael Abu-Ghazaleh. Spectre Re-
turns! Speculation Attacks using the Return Stack
Buffer. In WOOT, 2018.
[53] Michael Kurth, Ben Gras, Dennis Andriesse, Cristiano
Giuffrida, Herbert Bos, and Kaveh Razavi. NetCAT:
In S&P,
Practical cache attacks from the network.
2020.
[54] Sangho Lee, Ming-Wei Shih, Prasun Gera, Taesoo
Kim, Hyesoon Kim, and Marcus Peinado. Inferring
Fine-grained Control Flow Inside SGX Enclaves with
Branch Shadowing. In USENIX Security Symposium,
2017.
[55] Moritz Lipp, Daniel Gruss, Raphael Spreitzer, Clémen-
tine Maurice, and Stefan Mangard. ARMageddon:
Cache Attacks on Mobile Devices. In USENIX Secu-
rity Symposium, 2016.
[56] Moritz Lipp, Vedad Hadži´c, Michael Schwarz, Arthur
Perais, Clémentine Maurice, and Daniel Gruss. Take a
Way: Exploring the Security Implications of AMD’s
Cache Way Predictors. In AsiaCCS, 2020.
[57] Moritz Lipp, Michael Schwarz, Daniel Gruss, Thomas
Prescher, Werner Haas, Anders Fogh, Jann Horn, Ste-
fan Mangard, Paul Kocher, Daniel Genkin, Yuval
Yarom, and Mike Hamburg. Meltdown: Reading Ker-
nel Memory from User Space. In USENIX Security
Symposium, 2018.
[58] Fangfei Liu, Qian Ge, Yuval Yarom, Frank Mckeen,
Carlos Rozas, Gernot Heiser, and Ruby B Lee. Catalyst:
1430    30th USENIX Security Symposium
USENIX Association
Defeating last-level cache side channel attacks in cloud
computing. In HPCA, 2016.
[72] Matthias Payer. HexPADS: a platform to detect
“stealth” attacks. In ESSoS, 2016.
[59] Fangfei Liu and Ruby B. Lee. Random Fill Cache
Architecture. In MICRO, 2014.
[60] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and
Ruby B. Lee. Last-Level Cache Side-Channel Attacks
are Practical. In S&P, 2015.
[61] G. Maisuradze and C. Rossow. ret2spec: Speculative
Execution Using Return Stack Buffers. In CCS, 2018.
[62] Giorgi Maisuradze and Christian Rossow. Speculose:
Analyzing the Security Implications of Speculative
Execution in CPUs. arXiv:1801.04084, 2018.
[63] Clémentine Maurice, Christoph Neumann, Olivier
Heen, and Aurélien Francillon. C5: Cross-Cores Cache
Covert Channel. In DIMVA, 2015.
[64] Clémentine Maurice, Manuel Weber, Michael Schwarz,
Lukas Giner, Daniel Gruss, Carlo Alberto Boano, Ste-
fan Mangard, and Kay Römer. Hello from the Other
Side: SSH over Robust Cache Covert Channels in the
Cloud. In NDSS, 2017.
[65] Daniel Moghimi, Moritz Lipp, Berk Sunar, and
Michael Schwarz. Medusa: Microarchitectural Data
Leakage via Automated Attack Synthesis. In USENIX
Security Symposium, 2020.
[66] Daniel Molka, Daniel Hackenberg, Robert Schöne, and
Wolfgang E Nagel. Cache Coherence Protocol and
Memory Performance of the Intel Haswell-EP Archi-
tecture. In ICPP, 2015.
[67] John Monaco. SoK: Keylogging Side Channels. In
S&P, 2018.
[68] Yossef Oren, Vasileios P Kemerlis, Simha Sethumad-
havan, and Angelos D Keromytis. The Spy in the
Sandbox: Practical Cache Attacks in JavaScript and
their Implications. In CCS, 2015.
[69] Dag Arne Osvik, Adi Shamir, and Eran Tromer. Cache
Attacks and Countermeasures: the Case of AES. In
CT-RSA, 2006.
[70] Rohan Padhye, Caroline Lemieux, Koushik Sen, Mike
Papadakis, and Yves Le Traon. Zest: Validity fuzzing
and parametric generators for effective random testing.
arXiv:1812.00078, 2018.
[71] Salvador Palanca, Stephen A Fischer, and Subrama-
niam Maiyuran. CLFLUSH micro-architectural im-
plementation method and system, 2003. US Patent
6,546,462.
[73] Hui Peng, Yan Shoshitaishvili, and Mathias Payer. T-
fuzz: Fuzzing by program transformation. In IEEE
S&P, 2018.
[74] Colin Percival. Cache Missing for Fun and Proﬁt. In
BSDCan, 2005.
[75] Peter Pessl, Daniel Gruss, Clémentine Maurice,
Michael Schwarz, and Stefan Mangard. DRAMA: Ex-
ploiting DRAM Addressing for Cross-CPU Attacks.
In USENIX Security Symposium, 2016.
[76] Moinuddin K Qureshi. CEASER: Mitigating Conﬂict-
Based Cache Attacks via Encrypted-Address and
Remapping. In IEEE MICRO, 2018.
[77] Hany Ragab, Alyssa Milburn, Kaveh Razavi, Herbert
Bos, and Cristiano Giuffrida. CrossTalk: Speculative
Data Leaks Across Cores Are Real. In S&P, 2021.
[78] Sanjay Rawat, Vivek Jain, Ashish Kumar, Lucian Co-
jocar, Cristiano Giuffrida, and Herbert Bos. Vuzzer:
In NDSS,
Application-aware evolutionary fuzzing.
2017.
[79] Michael Schwarz. Software-based Side-Channel At-
tacks and Defenses in Restricted Environments. PhD
thesis, Graz University of Technology, 2019.
[80] Michael Schwarz, Claudio Canella, Lukas Giner, and
Daniel Gruss. Store-to-Leak Forwarding: Leaking
Data on Meltdown-resistant CPUs. arXiv:1905.05725,
2019.
[81] Michael Schwarz, Moritz Lipp, Daniel Gruss, Samuel
Weiser, Clémentine Maurice, Raphael Spreitzer, and
Stefan Mangard. KeyDrown: Eliminating Software-
Based Keystroke Timing Side-Channel Attacks.
In
NDSS, 2018.
[82] Michael Schwarz, Moritz Lipp, Daniel Moghimi,
Jo Van Bulck, Julian Stecklina, Thomas Prescher, and
Daniel Gruss. ZombieLoad: Cross-Privilege-Boundary
Data Sampling. In CCS, 2019.
[83] Michael Schwarz, Clémentine Maurice, Daniel Gruss,
and Stefan Mangard. Fantastic Timers and Where to
Find Them: High-Resolution Microarchitectural At-
tacks in JavaScript. In FC, 2017.
[84] Michael Schwarz, Martin Schwarzl, Moritz Lipp, and
Daniel Gruss. NetSpectre: Read Arbitrary Memory
over Network. In ESORICS, 2019.
USENIX Association
30th USENIX Security Symposium    1431
[85] Benjamin Semal, Konstantinos Markantonakis, Keith
Mayes, and Jan Kalbantner. One covert channel to rule
them all: A practical approach to data exﬁltration in
the cloud. In TrustCom, 2020.
[86] Youngjoo Shin, Hyung Chan Kim, Dokeun Kwon,
Ji Hoon Jeong, and Junbeom Hur. Unveiling Hardware-
based Data Prefetcher, a Hidden Source of Information
Leakage. In CCS, 2018.
[87] Julian Stecklina and Thomas Prescher. LazyFP: Leak-
ing FPU Register State using Microarchitectural Side-
Channels. arXiv:1806.07480, 2018.
[88] Nick Stephens, John Grosen, Christopher Salls, An-
drew Dutcher, Ruoyu Wang, Jacopo Corbetta, Yan
Shoshitaishvili, Christopher Kruegel, and Giovanni Vi-
gna. Driller: Augmenting Fuzzing Through Selective
Symbolic Execution. In NDSS, 2016.
[89] Dean Sullivan, Orlando Arias, Travis Meade, and Yier
Jin. Microarchitectural Mineﬁelds: 4K-aliasing Covert
Channel and Multi-tenant Detection in IaaS Clouds. In
NDSS, 2018.
[90] M Caner Tol, Koray Yurtseven, Berk Gulmezoglu, and
Berk Sunar. Fastspec: Scalable generation and de-
tection of spectre gadgets using neural embeddings.
arXiv:2006.14147, 2020.
[91] Jo Van Bulck, Marina Minkin, Oﬁr Weisse, Daniel
Genkin, Baris Kasikci, Frank Piessens, Mark Silber-
stein, Thomas F. Wenisch, Yuval Yarom, and Raoul
Strackx. Foreshadow: Extracting the Keys to the Intel
SGX Kingdom with Transient Out-of-Order Execution.
In USENIX Security Symposium, 2018.
[92] Jo Van Bulck, Daniel Moghimi, Michael Schwarz,
Moritz Lipp, Marina Minkin, Daniel Genkin, Yarom
Yuval, Berk Sunar, Daniel Gruss, and Frank Piessens.
LVI: Hijacking Transient Execution through Microar-
chitectural Load Value Injection. In S&P, 2020.
[93] Stephan van Schaik, Alyssa Milburn, Sebastian Öster-
lund, Pietro Frigo, Giorgi Maisuradze, Kaveh Razavi,
Herbert Bos, and Cristiano Giuffrida. RIDL: Rogue
In-ﬂight Data Load. In S&P, 2019.
[94] Pepe Vila, Pierre Ganty, Marco Guarnieri, and Boris
Köpf. CacheQuery: Learning Replacement Policies
from Hardware Caches. In PLDI, 2020.
[95] Pepe Vila, Boris Köpf, and Jose Morales. Theory and
Practice of Finding Eviction Sets. In S&P, 2019.
[96] Zhenghong Wang and Ruby B. Lee. New cache de-
signs for thwarting software cache-based side channel
attacks. ACM SIGARCH Computer Architecture News,
35(2), 2007.
[97] Mario Werner, Thomas Unterluggauer, Lukas Giner,
Michael Schwarz, Daniel Gruss, and Stefan Mangard.
ScatterCache: Thwarting Cache Attacks via Cache
Set Randomization. In USENIX Security Symposium,
2019.
[98] Henry Wong. The microarchitecture behind meltdown,
may 2018. URL: http://blog.stuffedcow.net/
2018/05/meltdown-microarchitecture/.
[99] Zhenyu Wu, Zhang Xu, and Haining Wang. Whispers
in the Hyper-space: High-speed Covert Channel At-
tacks in the Cloud. In USENIX Security Symposium,
2012.
[100] Yuan Xiao, Yinqian Zhang, and Radu Teodorescu.
SPEECHMINER: A Framework for Investigating and
Measuring Speculative Execution Vulnerabilities. In
NDSS, 2020.
[101] Yuval Yarom and Katrina Falkner. Flush+Reload: a
High Resolution, Low Noise, L3 Cache Side-Channel
Attack. In USENIX Security Symposium, 2014.
[102] Yuval Yarom, Daniel Genkin, and Nadia Heninger.
CacheBleed: A Timing Attack on OpenSSL Constant
Time RSA. JCEN, 2017.
[103] Michal Zalewski. Technical "whitepaper" for aﬂ-fuzz,
2014. URL: http://lcamtuf.coredump.cx/afl/
technical_details.txt.
[104] Yinqian Zhang, Ari Juels, Alina Oprea, and Michael K.
Reiter. HomeAlone: Co-residency Detection in the
Cloud via Side-Channel Analysis. In S&P, 2011.
[105] Yinqian Zhang and MK Reiter. Düppel: retroﬁtting
commodity operating systems to mitigate cache side
channels in the cloud. In CCS, 2013.
A Clustering Results
Table 7 shows the clustering results for the CPUs on which
Osiris ran. Osiris found multiple thousand side channels that
were clustered based on the instruction extension of Seqtrigger,
Seqmeasure, and Seqreset, resulting in 100 to 200 clusters. How-
ever, as Seqreset is typically not involved in the actual leakage,
clustering based on the instruction extension of only Seqtrigger
and Seqmeasure results in a smaller number of clusters.
Table 7: Cluster Results For Intel Microarchitectures.
Found
CPU Name
Intel Core i7-9750H 68 597
Intel Core i5-4690
51 468
Intel Core i7-9700K 27 512
Extension
186 clusters
168 clusters
104 clusters
Seqmeasure-Seqtrigger only
16 clusters
19 clusters
26 clusters
1432    30th USENIX Security Symposium
USENIX Association