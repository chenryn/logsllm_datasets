### 优化后的文本

#### 图10：每条链路、路由器和数据中心对的时间段内路径变化的直方图和累积分布
- **(a) 链路时间区间**
  - 路径变化 (y1)
  - 累积分布 (y2)
  - y轴刻度: 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
  - x轴刻度: 0.985, 0.988, 0.991, 0.994, 0.997, 1.000

- **(b) 路由器时间区间**
  - 路径变化 (y1)
  - 累积分布 (y2)
  - y轴刻度: 18, 16, 14, 12, 10, 8, 6, 4, 2, 0
  - x轴刻度: 0.995, 0.996, 0.997, 0.998, 0.999, 1.000

- **(c) 数据中心对时间区间**
  - 路径变化 (y1)
  - 累积分布 (y2)
  - y轴刻度: 18, 16, 14, 12, 10, 8, 6, 4, 2, 0
  - x轴刻度: 0.995, 0.996, 0.997, 0.998, 0.999, 1.000

#### 图11：一周内每天各时间段的链路利用率和路径变化计数
- **左y轴**:
  - 70% 流量
  - 99% 流量
- **右y轴**:
  - 路径变化次数
  - 延迟尖峰中的LSP数量
- **x轴**: 时间 (周一至周日)

**相关性与链路利用率**。最后，我们研究了链路利用率对LLPC（低延迟路径变化）和延迟膨胀的影响。我们将时间划分为1小时的时间段。在图11中，左y轴显示了一周内每个时间段的第70百分位和第99百分位的链路利用率（MaxRes线表示链路的最大允许预留配置为85%）。右y轴显示了同一时间段内每个时间段的LLPC数量和延迟尖峰中的LSP数量。我们观察到，尽管MSN通常过度配置（第70百分位的链路利用率仅为20%左右），但总有某些链路完全饱和（第99百分位的链路利用率约为100%）。这有些出乎意料，因为我们预计在非高峰时段流量负载会更均匀地分布，此时有大量的备用容量。然而，记住在自动带宽中，每个LSP都会贪婪地寻找最短路径，因此即使其他链路空闲，许多LSP也可能在争夺少数“关键”链路。

图11还显示了LLPC的数量和延迟尖峰中的LSP数量，它们与链路利用率高度相关，并且都表现出明显的时间模式。这符合我们的预期，因为当整个网络利用率较高时，更多的LSP将被迫切换到更长的路径。

### 表2：MPLS自动带宽参数的影响
| 参数 | 最小带宽 | 最大带宽 |
| --- | --- | --- |
| 低 | 大量路径变化 | 无法保证高需求下的流量传输 |
| 设置优先级 | 更难找到更好的路径 | 
| 保持优先级 | 调整阈值 | 订阅 |
| LSP数量 | 容易放弃当前路径 | 大量路径变化 |
| 较少的LSP空间 | 每个LSP的高流量 | 高 |
| 预留带宽浪费 | 更难找到新路径 | （与静态LSP相同） |
| 容易找到更好的路径 | 坚持当前路径 | LSP增长困难 |
| 资源浪费 | 高LSP开销 |

### 自动带宽参数的影响
LSP路径变化及其对应的延迟尖峰是自动带宽算法和各个LSP配置参数的直接后果。鉴于OSPF网络中LSP的数量庞大，运营商通常会手动配置LSP参数，并使用一些静态值，这些值很少更改。在许多情况下，运营商只是使用路由器供应商（如Cisco和Juniper）设置的默认值。我们研究了不同LSP参数对LSP延迟尖峰的影响，并总结了我们的发现（见表2）。

**LSP优先级** 我们研究了一些在附近数据中心之间穿越的LSP的大延迟尖峰（如图1所示）。在这组延迟尖峰中，LSP不是通过数据中心之间的直接最短路径，而是通过一条相当长的路径（跨越美国）。这是因为在数据中心之间的直接最短路径上的预留带宽被另一组具有（主要是）相等或更高优先级的LSP耗尽。其中一些LSP跨越了长距离并有多种不同的路径选项。它们选择特定链路的决定导致其预留带宽饱和。后来，由于附近数据中心的LSP带宽增加，自动带宽将LSP移动到了一条更长的路径上。当这种不适当的路径选择形成依赖链时，情况变得更加复杂。

在这种情况下，可以通过提高附近数据中心之间的LSP优先级来缓解尖峰。但在数千个LSP中设置优先级以全局最小化网络延迟是一个难题。此外，尚不清楚一组静态优先级是否足以减少问题。作为未来的工作，我们计划研究如何在线调整处于延迟尖峰的LSP的优先级，迫使它们切换到更短的路径，同时确保对其他LSP的影响最小。

**“全有或全无”自动带宽策略** 导致LSP延迟尖峰的第二个原因是自动带宽算法的“全有或全无”策略。这对高流量LSP影响尤为严重。当一个运行在短路径上的LSP的带宽需求增加，而至少有一条链路接近其预留限制时，整个LSP会被迫切换到一条长延迟路径。这导致整个LSP流量必须经过长路径，即使短路径能够承载大部分流量。

作为未来工作的一部分，我们计划设计算法在这些情况下拆分LSP（目前在某些网络中手动完成[10]）。当由于流量需求增加而导致整个LSP被迫切换到长路径时，我们可以实时分割LSP。