# Skrull: Like a King!

## Introduction
On April 21, 2021, we successfully breached the heavily guarded "Skynet" defense system. This presentation will cover the techniques and strategies used to achieve this.

## Presenter: Sheng-Hao Ma
- **Position:** Threat Researcher at TXOne Networks
- **Core Member of CHROOT Security Group**
- **Experience:** Over 10 years in reverse engineering, Windows vulnerabilities, and Intel 8086.
- **Speaking Engagements:** S&P, BlackHat, DEFCON, HITB, HITCON, VXCON, ROOTCON, CYBERSEC, SITCON, etc.
- **Instructor for:** Ministry of National Defense, Ministry of Education, HITCON, and others.
- **Publication:** *Windows APT Warfare (恶意程式前线战术指南)*

## Background
April 21, 2021

### AntiVirus Design
- **Malware Detection:**
  - **Signature Patterns Scanning:** e.g., YARA
  - **Machine Learning (ML):** Heuristic Detection, e.g., SVM
  - **Virtual Machine (VM)**
  - **When to Scan?**
    - Regular Schedule Service
    - Minifilter and PsSetCreateProcessNotifyRoutine
    - Automatic Sample Submission

### Challenges
- How can we inject malware into trusted system processes without triggering AV/EDR?
- How can we ensure our payload is not scanned?
- Can we protect our malware from being reversed, even if the binary is captured?

### Skynet by AV/EDR
- The only way we know about BAD GUYS...

### Outline
A. **AV/EDR Real-Time Scan**
B. **The Treasure Left Since XP: CreateProcessEx**
C. **Force Unlink: Abuse NTFS Streams to Unlink()**
D. **Skrull DRM: 千面人病毒 & Anti-Copy Malware**
E. **Conclusion**

## The Treasure Left Since XP
- **Explorer and EXE File Interaction:**
  - When `C:\fishfish.exe` is clicked, it triggers the following:
    - `kernel32!CreateProcessW`
    - `kernel32!CreateProcessInternalW`
    - `ntdll!ZwCreateProcessEx( section )`
    - `filePtr = fopen( "C:\fishfish.exe" )`
    - `ntdll!RtlCreateProcessParametersEx`
    - `ntdll!ZwCreateThreadEx`

- **Using ZwCreateSection:**
  - Creates the file as a section for mapping into the process.
  - Note: In practice, `fopen()` should be replaced by `CreateFile`.

- **Creating PEB Structure:**
  - Manually write information to create a disguised process path and command line.
  - Example:
    - Path: `"C:\fishfish.exe"`
    - Command Line: `"fishfish.exe http://30cm.tw"`
    - Working Directory: `"C:\Windows\System32"`

- **miniCreateProcessEx:**
  - GitHub: [https://github.com/aaaddress1/PR0CESS](https://github.com/aaaddress1/PR0CESS)

### Scan in "Real-Time"?
- **Microsoft APIs for Security Vendors:**
  - `PsSetCreateProcessNotifyRoutineEx`
  - `PsSetCreateThreadNotifyRoutineEx`
  - These are in the kernel and hard to unhook, which is bad for attackers.

- **PS_CREATE_NOTIFY_INFO:**
  - Contains information about the child process, including the `FILE_OBJECT` corresponding to the file on disk.
  - We can fake this information, but it's not a problem.

- **Process Notify Timing:**
  - The notification occurs during the creation of the first thread, not when the process is created.

### Attacker's Strategy
- **Creating a Controllable File:**
  - Use `fopen("dummy.txt", "wb")` to create a file.
  - Write the malware (e.g., mimikatz) into the file.
  - Make the file look innocent by writing additional data.

- **Injecting Malware:**
  - Use `ntdll!ZwCreateProcessEx( section )` to create the file as a new process.
  - Ensure the file remains under control to avoid detection.

- **Final Steps:**
  - Inject the malware into the process and execute it.

This presentation provides a detailed overview of the techniques and challenges involved in bypassing advanced security measures.