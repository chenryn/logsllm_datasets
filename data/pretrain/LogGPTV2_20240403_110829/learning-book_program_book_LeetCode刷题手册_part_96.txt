Example 2:
Input: ["cool","lock","cook"]
[..*.>.]:ndano
Note:
1. 1 qe, +  ),oqe.,[&
的字符串。
"abc"+"bc"，“c"，“bc"都不是有效字符串)."bac"("bac"也不是有效字符串）这些都不是有效的字符
串。
任意给一个字符串S，要求判断它是否有效，如果有效则输出true。
解题思路
这一题可以类似括号匹配问题，因为“abc”这样的组合就代表是有效的，类似于括号匹配，遇到“a”就
入栈，当遇到“b"字符的时候判断栈顶是不是“a"，当遇到“c”字符的时候需要判断栈顶是不是“a”和
"b"。最后如果栈都清空了，就输出true。
代码
package leetcode
func isvalid1003(S string) bool {
if len(s)  0 && stack[len(stack)-1] ==‘a′{
stack = append(stack, s[i])
}else{
return false
}else{
if len(stack) > 1 && stack[len(stack)-1] ==‘b′ && stack[len(stack)-2]
'a'{
stack = stack[:1en(stack)-2]
}else{
return false
return 1en(stack) == 0
---
## Page 970
1004.MaxConsecutiveOnesIll
题目
Given an array A of Os and 1s, we may change up to K values from O to 1.
s, (juo sujejuo jeq Aeueqns (snongguo) asaguol au jo ygual au wnjay
Example 1:
Input: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2
output: 6
Explanation:
[1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
Example 2:
Input: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K =
output: 10
Explanation:
[0,0,1,1,1,1,1,1,1,1,1,1,0,0, 0,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
Note:
●1  0) 11 A[right]== 1){
if A[right] == 0 {
K=-
right++
}else{
if K == 0 11 (right == len(A) && K > 0) {
res = max(res, right-1eft)
if A[left] == 0 {
K++
left++
return res
1005.MaximizeSumOfArrayAfterKNegations
题目
Given an array A of integers, we must modify the array in the following way: we choose an i and
aes au asoouo (ew am) jeon ul saw y ssaooid su seadau am pue ilv- yim [l aoeda
indlex i multiple times.)
Return the largest possible sum of the array after modifying it in this way.
Example 1:
Input: A = [4,2,3], K = 1
Output: 5
Explanation: Choose indices (1,) and A becomes [4,-2,3] 
Example 2:
Input: A = [3,-1,0,2], K = 3
Output: 6
Explanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].
---
## Page 972
Example 3:
Input: A = [2, -3, -1, 5, -4], K = 2
output: 13
Explanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].
Note:
●1  maxNum {
wnu = wnNxew
}
if D == 1 {
return sum
1ow, high := maxNum, sum
---
## Page 975
for low>1
if calSum(mid,D,weights){
high = mid
}else{
1ow = mid + 1
return low
1017.ConverttoBase-2
题目
Given a number N, return a string consisting of *o" s and *1" s that represents its value in base
2 (negative two).
The returned string must have no leading zeroes, unless the string is *o"
Example 1:
Input: 2
output: "110"
Exp1antion:(-2) A 2 +(-2) A 1 = 2
Example 2:
Input: 3
Output: "111"
Exp1antion:(-2) A 2 + (-2) A 1 + (-2) A 0 = 3
Example 3:
Input: 4
Output: "100"
Explantion: (-2) A 2 = 
Note:
1.0  i, node_j.val > node_i.val, and j is the smallest possible choice. If such a j does not exist,
the next larger value is 0.
Return an array of integers answer, where answer[i] = next_larger(node_(i+1)
---
## Page 977
Note that in the example inputs (not outputs) below, arrays such as [2,1,5] represent the
serialization of a linked list with a head node value of 2, second node value of 1, and third node
value of 5.
Example 1:
Input: [2,1,5]
output: [5,5,0]
Example 2:
Input: [2,7 , 4 , 3, 5]
Output: [7,0,5,5,0]
Example 3:
Input: [1,7, 5 ,1, 9, 2, 5,1]
Output: [7,9,9,9,0,5,0,0]
Note:
● 1 <= node.val <= 10^9 for each node in the linked list.
●The given list has length in the range [0, 10000].
题目大意
给出一个链表，要求找出每个结点后面比该结点值大的第一个结点，如果找不到这个结点，则输出0。
解题思路
这一题和第739题、第496题、第503题类似。也有2种解题方法。先把链表中的数字存到数组中，
整道题的思路就和第739题完全一致了。普通做法就是2层循环。优化的做法就是用单调栈，维护一个