4189 0.00.6
24368
4940?
S
11:55
0:00
pdu/u!qs/asn/ 
apache
4190
0.0
0.6
24368
4932 ?
S
11:55
0:00
\_/usr/sbin/httpd
apache
4191
0.0
0.6
24368
4932 ?
S
11:55
0:00
pdu/uqs/asn/ \
apache
4192
0.0
0.6
24368
4932 ?
S
11:55
0:00
pdnu/u!qs/sn/ ~
apache
4193
0.0
0.6
24368
4932 ?
S
11:55
0:00
pdu/uqs/asn/\
apache
4194
0.0
0.6
24368
4932 ?
S
11:55
0:00
pdu/uqs/asn/ \
apache
4195
00
0.6
24368
4932 ?
S
11:55
0:00
pdu/uqs/asn/ \
apache
41960.00.6
24368 4932?
S
11:55
0:00
\_/usr/sbin/httpd
这里用到了f参数：父与子关系一目了然：
例三：找出消耗内存最多的前10名进程
# ps -auxf | sort -nr -k 4 | head -10
例四：找出使用CPU最多的前10名进程
# ps -auxf | sort -nr -k 3 | head -10
4.2、pstree
功能：pstree命令列出当前的进程，以及它们的树状结构。
格式：pstree[选项][pid|user]
主要选项如下：
---
## Page 65
-3：显示执行程序的命令与完整参数。
-C：取消同名程序，合并显示。
-h：对输出结果进行处理，高亮显示正在执行的程序。
：长格式显示。
-n：以PID大小排序。
-p：显示PID。
-U：显示UID信息。
-G：使用VT100终端编码显示。
-U：使用 UTF-8（Unicode）编码显示。
说明：使用ps命令得到的数据精确，但数据庞大，这一点对掌握系统整体概况来说是不容易的。pstree
正好可以弥补这个缺。它能将当前的执行程序以树状结构显示。pstree支持指定特定程序（PID）
或使用者（USER）作为显示的起始。
应用实例如下。
进程启动的时候可能会产生自已的一个子进程。运行pstree命令就可以很容易地看到这些信息。以超
级用户权限运行pstree：
#init-+-apmd
|-atd
|bdflush
|-gconfd2
-gdn-binary-
-gdm-binary-+X
-startkde-+-kwrapper
-ssh-agent
Igpn
|httpd---8* [httpd]
..下略
命令对程序名称相同的会自动合并，所有“I-httpd--8*[httpd]"即表示系统中有8个httpd进程产生的
子进程。
4.3、top
top命令用来显示系统当前的进程状况。
格式：top [选项]
主要选项如下。
d：指定更新的间隔，以秒计算。
q：没有任何延迟的更新。如果使用者有超级用户，则top命令将会以最高的优先序执行。
c：显示进程完整的路径与名称。
S：累积模式，会将已完成或消失的子进程的CPU时间累积起来。
---
## Page 66
5:安全模式。
i：不显示任何闲置（Idle）或无用（Zombie）的进程。
n：显示更新的次数，完成后将会退出top。
说明：top命令和ps命令的基本作用是相同的，都显示系统当前的进程状况。但是top是一个动态显
示过程，即可以通过用户按键来不断刷新当前状态。这里结合下图来说明它给出的信息。
top-23:49:58up 20:59,3users,1oad average:0.03,0.03,0.00
Tasks:114 total,
2running,110 s1eeping,0stopped,
2zombie
Cpu（s）:0.3%us，1.7%sy，0.0%ni，98.0%id，0.0%wa,0.0%hi，0.0%si，
0.0%st
Mem:
299704k total.
295604k used,
4100k free,
68536k buffers
Swap:
524280k total,
13192k used,
511088k free,
98028k cached
PID USER
PRNIVIRTRESSHRS%CPU%MEM
TIME+COMMAND
9614root
14
-135956
10m5944 S
1.3
3.4
0:30.11X
9748root
17
01725220641724S
0.3
0.7
0:01.48escd
11209root
15
0
21761024
800R
0.3
0.3
0:00.40top
1root
15
。
2048
632
540S
0.0
0.2
0:01.34init
2root
RT
0
0
0
OS
0.0
0.0
0:00.o0migration/o
3root
34
19
0
0
S0
0.0
0.0
0:0o.oo ksoftirqd/o
4root
RT
0
0
0
0S
0.0
0.0
0:00.04watchdog/0
5root
10
-5
0
0S
0'0
0'0
0:00.94events/0
6root
10
-5
0
0
OS
0.0
0'0
0:00.00 khe1per
7root
10
S-
0
0
OS
0.0
0.0
0:00.01 kthread
2006
20
S-
0
0
0S
0'0
0'0
0:00.o0 xenwatch
10root
20
-5
0
0
S0
0.0
0'0
0:00.00 xenbus
12 root
10
-5
0
0
S0
0.0
0'0
0:00.84 kb1ockd/0
13root
20
-5
0
0
0S
0.0
0.0
0:00.00 kacpid
71root
20
-5
0
0S
0.0
0.0
0:00.00cquque/0
75root
10
S-
0
0
0S
0.0
0.0
77root
10
S-
0
0
0S0.0
0.0
10000