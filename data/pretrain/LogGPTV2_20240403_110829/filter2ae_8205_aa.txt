# 前言
我们知道一些游戏为了防止被分析会加入反调试的代码，那么我们的木马样本同样也需要用到反调试技术。攻和防其实是相对的，只有了解了调试的原理，才能更深入的进行对抗，本文就对一些常见的反调试手段进行总结并对深层原理进行探究。
# 调用API
## NtGlobalFlag
在 32 位机器上，`NtGlobalFlag`字段位于`PEB`的`0x68`的偏移处，64 位机器则是在偏移`0xBC`位置，该字段的默认值为
0。当调试器正在运行时，该字段会被设置为一个特定的值
该字段包含有一系列的标志位，由调试器创建的进程会设置以下标志位：
    FLG_HEAP_ENABLE_TAIL_CHECK (0x10)
    FLG_HEAP_ENABLE_FREE_CHECK (0x20)
    FLG_HEAP_VALIDATE_PARAMETERS (0x40)
这里`NtGlobalFlag`的汇编代码如下，如果返回值为`0x70`则程序处于调试状态
    mov eax, fs:[30h] ;Process Environment Block
    mov al, [eax+68h] ;NtGlobalFlag
    and al, 70h
    cmp al, 70h
    je being_debugged
那么可以用代码进行判断如下，若返回为TRUE则处于调试状态，若返回FALSE则未处于调试状态
    bool CheckNtGlobalFlag()
    {
        BOOL IsDebug = FALSE;
        DWORD NtGlobalFlag = 0;
        __asm
        {
            mov eax, fs:[0x30]
            mov eax, [eax + 0x68]
            mov NtGlobalFlag, eax
        }
        if (NtGlobalFlag == 0x70)
        {
            IsDebug = TRUE;
        }
        return IsDebug;
    }
这里直接用编译器打开，处于调试状态
正常打开则处于未调试状态
## IsDebuggerPresent
`IsDebuggerPresent`这个API位于`kernel32.dll`里面，首先通过0x18偏移找到TEB，再通过0x30找到PEB
然后在PEB的0x2偏移找到`BeingDebugged`，这个值用来存储是否处于调试状态，PEB结构如下
    0:023> dt ntdll!_PEB
       +0x000 InheritedAddressSpace : UChar
       +0x001 ReadImageFileExecOptions : UChar
       +0x002 BeingDebugged    : UChar
       +0x003 BitField         : UChar
       +0x003 ImageUsesLargePages : Pos 0, 1 Bit
       +0x003 IsProtectedProcess : Pos 1, 1 Bit
       +0x003 IsImageDynamicallyRelocated : Pos 2, 1 Bit
       +0x003 SkipPatchingUser32Forwarders : Pos 3, 1 Bit
       +0x003 IsPackagedProcess : Pos 4, 1 Bit
       +0x003 IsAppContainer   : Pos 5, 1 Bit
       +0x003 IsProtectedProcessLight : Pos 6, 1 Bit
       +0x003 IsLongPathAwareProcess : Pos 7, 1 Bit
       +0x004 Padding0         : [4] UChar
       +0x008 Mutant           : Ptr64 Void
       +0x010 ImageBaseAddress : Ptr64 Void
       +0x018 Ldr              : Ptr64 _PEB_LDR_DATA
       +0x020 ProcessParameters : Ptr64 _RTL_USER_PROCESS_PARAMETERS
       +0x028 SubSystemData    : Ptr64 Void
       +0x030 ProcessHeap      : Ptr64 Void
       +0x038 FastPebLock      : Ptr64 _RTL_CRITICAL_SECTION
       +0x040 AtlThunkSListPtr : Ptr64 _SLIST_HEADER
       +0x048 IFEOKey          : Ptr64 Void
       +0x050 CrossProcessFlags : Uint4B
       +0x050 ProcessInJob     : Pos 0, 1 Bit
       +0x050 ProcessInitializing : Pos 1, 1 Bit
       +0x050 ProcessUsingVEH  : Pos 2, 1 Bit
       +0x050 ProcessUsingVCH  : Pos 3, 1 Bit
       +0x050 ProcessUsingFTH  : Pos 4, 1 Bit
       +0x050 ProcessPreviouslyThrottled : Pos 5, 1 Bit
       +0x050 ProcessCurrentlyThrottled : Pos 6, 1 Bit
       +0x050 ProcessImagesHotPatched : Pos 7, 1 Bit
       +0x050 ReservedBits0    : Pos 8, 24 Bits
       +0x054 Padding1         : [4] UChar
       +0x058 KernelCallbackTable : Ptr64 Void
       +0x058 UserSharedInfoPtr : Ptr64 Void
       +0x060 SystemReserved   : Uint4B
       +0x064 AtlThunkSListPtr32 : Uint4B
       +0x068 ApiSetMap        : Ptr64 Void
       +0x070 TlsExpansionCounter : Uint4B
       +0x074 Padding2         : [4] UChar
       +0x078 TlsBitmap        : Ptr64 Void
       +0x080 TlsBitmapBits    : [2] Uint4B
       +0x088 ReadOnlySharedMemoryBase : Ptr64 Void
       +0x090 SharedData       : Ptr64 Void
       +0x098 ReadOnlyStaticServerData : Ptr64 Ptr64 Void
       +0x0a0 AnsiCodePageData : Ptr64 Void
       +0x0a8 OemCodePageData  : Ptr64 Void
       +0x0b0 UnicodeCaseTableData : Ptr64 Void
       +0x0b8 NumberOfProcessors : Uint4B
       +0x0bc NtGlobalFlag     : Uint4B
       +0x0c0 CriticalSectionTimeout : _LARGE_INTEGER
       +0x0c8 HeapSegmentReserve : Uint8B
       +0x0d0 HeapSegmentCommit : Uint8B
       +0x0d8 HeapDeCommitTotalFreeThreshold : Uint8B
       +0x0e0 HeapDeCommitFreeBlockThreshold : Uint8B
       +0x0e8 NumberOfHeaps    : Uint4B
       +0x0ec MaximumNumberOfHeaps : Uint4B
       +0x0f0 ProcessHeaps     : Ptr64 Ptr64 Void
       +0x0f8 GdiSharedHandleTable : Ptr64 Void
       +0x100 ProcessStarterHelper : Ptr64 Void
       +0x108 GdiDCAttributeList : Uint4B
       +0x10c Padding3         : [4] UChar
       +0x110 LoaderLock       : Ptr64 _RTL_CRITICAL_SECTION
       +0x118 OSMajorVersion   : Uint4B
       +0x11c OSMinorVersion   : Uint4B
       +0x120 OSBuildNumber    : Uint2B
       +0x122 OSCSDVersion     : Uint2B
       +0x124 OSPlatformId     : Uint4B
       +0x128 ImageSubsystem   : Uint4B
       +0x12c ImageSubsystemMajorVersion : Uint4B
       +0x130 ImageSubsystemMinorVersion : Uint4B
       +0x134 Padding4         : [4] UChar
       +0x138 ActiveProcessAffinityMask : Uint8B
       +0x140 GdiHandleBuffer  : [60] Uint4B
       +0x230 PostProcessInitRoutine : Ptr64     void 
       +0x238 TlsExpansionBitmap : Ptr64 Void
       +0x240 TlsExpansionBitmapBits : [32] Uint4B
       +0x2c0 SessionId        : Uint4B
       +0x2c4 Padding5         : [4] UChar
       +0x2c8 AppCompatFlags   : _ULARGE_INTEGER
       +0x2d0 AppCompatFlagsUser : _ULARGE_INTEGER
       +0x2d8 pShimData        : Ptr64 Void
       +0x2e0 AppCompatInfo    : Ptr64 Void
       +0x2e8 CSDVersion       : _UNICODE_STRING
       +0x2f8 ActivationContextData : Ptr64 _ACTIVATION_CONTEXT_DATA
       +0x300 ProcessAssemblyStorageMap : Ptr64 _ASSEMBLY_STORAGE_MAP
       +0x308 SystemDefaultActivationContextData : Ptr64 _ACTIVATION_CONTEXT_DATA
       +0x310 SystemAssemblyStorageMap : Ptr64 _ASSEMBLY_STORAGE_MAP
       +0x318 MinimumStackCommit : Uint8B
       +0x320 SparePointers    : [4] Ptr64 Void
       +0x340 SpareUlongs      : [5] Uint4B
       +0x358 WerRegistrationData : Ptr64 Void
       +0x360 WerShipAssertPtr : Ptr64 Void
       +0x368 pUnused          : Ptr64 Void
       +0x370 pImageHeaderHash : Ptr64 Void
       +0x378 TracingFlags     : Uint4B
       +0x378 HeapTracingEnabled : Pos 0, 1 Bit
       +0x378 CritSecTracingEnabled : Pos 1, 1 Bit
       +0x378 LibLoaderTracingEnabled : Pos 2, 1 Bit
       +0x378 SpareTracingBits : Pos 3, 29 Bits
       +0x37c Padding6         : [4] UChar
       +0x380 CsrServerReadOnlySharedMemoryBase : Uint8B
       +0x388 TppWorkerpListLock : Uint8B
       +0x390 TppWorkerpList   : _LIST_ENTRY
       +0x3a0 WaitOnAddressHashTable : [128] Ptr64 Void
       +0x7a0 TelemetryCoverageHeader : Ptr64 Void
       +0x7a8 CloudFileFlags   : Uint4B
       +0x7ac CloudFileDiagFlags : Uint4B
       +0x7b0 PlaceholderCompatibilityMode : Char
       +0x7b1 PlaceholderCompatibilityModeReserved : [7] Char
       +0x7b8 LeapSecondData   : Ptr64 _LEAP_SECOND_DATA
       +0x7c0 LeapSecondFlags  : Uint4B
       +0x7c0 SixtySecondEnabled : Pos 0, 1 Bit
       +0x7c0 Reserved         : Pos 1, 31 Bits
       +0x7c4 NtGlobalFlag2    : Uint4B
这里如果用vc6的话会提示没有这个API
需要自己定义这个API
直接运行处于调试状态
直接运行则不会显示处于调试状态
## NtQueryInformationProcess
`NtQueryInformationProcess`是微软未公开的一个API，目前只能够通过一些结构的名字和逆向的方式来推断用途
    // NtQueryInformationProcess 函数原型
    __kernel_entry NTSTATUS NtQueryInformationProcess(
      IN HANDLE           ProcessHandle,                // 进程句柄
      IN PROCESSINFOCLASS ProcessInformationClass,      // 检索的进程信息类型
      OUT PVOID           ProcessInformation,           // 接收进程信息的缓冲区指针
      IN ULONG            ProcessInformationLength,     // 缓冲区指针大小
      OUT PULONG          ReturnLength                  // 实际接收的进程信息大小
    );
    // PROCESSINFOCLASS 结构体原型
    typedef enum _PROCESSINFOCLASS
    {
        ProcessBasicInformation,                    // 0x0
        ProcessQuotaLimits, 
        ProcessIoCounters, 
        ProcessVmCounters, 
        ProcessTimes, 
        ProcessBasePriority, 
        ProcessRaisePriority,
        ProcessDebugPort,                           // 0x7
        ProcessExceptionPort, 
        ProcessAccessToken, 
        ProcessLdtInformation, 
        ProcessLdtSize, 
        ProcessDefaultHardErrorMode, 
        ProcessIoPortHandlers, 
        ProcessPooledUsageAndLimits, 
        ProcessWorkingSetWatch,
        ProcessUserModeIOPL,
        ProcessEnableAlignmentFaultFixup, 
        ProcessPriorityClass, 
        ProcessWx86Information,
        ProcessHandleCount, 
        ProcessAffinityMask, 
        ProcessPriorityBoost, 
        ProcessDeviceMap, 
        ProcessSessionInformation, 
        ProcessForegroundInformation,
        ProcessWow64Information,                    // 0x1A
        ProcessImageFileName,                       // 0x1B
        ProcessLUIDDeviceMapsEnabled, 
        ProcessBreakOnTermination, 
        ProcessDebugObjectHandle,                   // 0x1E
        ProcessDebugFlags,                          // 0x1F
        ProcessHandleTracing, 
        ProcessIoPriority, 
        ProcessExecuteFlags, 
        ProcessResourceManagement, 
        ProcessCookie, 
        ProcessImageInformation, 
        ProcessCycleTime, 
        ProcessPagePriority, 
        ProcessInstrumentationCallback, 
        ProcessThreadStackAllocation, 
        ProcessWorkingSetWatchEx,
        ProcessImageFileNameWin32, 
        ProcessImageFileMapping, 
        ProcessAffinityUpdateMode, 
        ProcessMemoryAllocationMode, 
        ProcessGroupInformation,
        ProcessTokenVirtualizationEnabled, 
        ProcessConsoleHostProcess, 
        ProcessWindowInformation, 
        ProcessHandleInformation,
        ProcessMitigationPolicy,
        ProcessDynamicFunctionTableInformation,
        ProcessHandleCheckingMode,
        ProcessKeepAliveCount,
        ProcessRevokeFileHandles,
        ProcessWorkingSetControl,
        ProcessHandleTable, 
        ProcessCheckStackExtentsMode,
        ProcessCommandLineInformation,
        ProcessProtectionInformation,
        ProcessMemoryExhaustion,
        ProcessFaultInformation, 
        ProcessTelemetryIdInformation, 
        ProcessCommitReleaseInformation, 