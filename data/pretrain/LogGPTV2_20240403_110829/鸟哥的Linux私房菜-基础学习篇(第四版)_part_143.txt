### 磁盘分区与LVM配置

#### System ID
系统ID不改变也没有问题，主要是为了管理员能够清楚地了解该分区的内容。建议将磁盘内容修订为正确的信息。

#### 实体分区
- `/dev/vda{5,6,7,8}` 是我们的实体分区，将在后续步骤中实际使用。
- `/dev/vda9` 保留但暂时不使用。
- `8e` 的出现会使系统识别为“Linux LVM”。即使没有设置为 `8e` 也可以，但某些 LVM 检测命令可能无法识别该分区。

#### 物理卷 (PV) 阶段
创建 PV 很简单，只需使用 `pvcreate` 命令。以下是与 PV 相关的常用命令：

- `pvcreate`：将物理分区转换为 PV。
- `pvscan`：搜索系统中的所有 PV。
- `pvdisplay`：显示系统中 PV 的状态。
- `pvremove`：移除 PV 属性，使分区不再具有 PV 属性。

##### 示例
1. **检查系统中现有的 PV 并创建新的 PV**：
   ```bash
   [root@study ~]# pvscan
   PV /dev/vda3 VG centos lvm2 [30.00 GiB / 14.00 GiB free]
   Total: 1 [30.00 GiB] / in use: 1 [30.00 GiB] / in no VG: 0 [0 ]
   
   [root@study ~]# pvcreate /dev/vda{5,6,7,8}
   Physical volume "/dev/vda5" successfully created
   Physical volume "/dev/vda6" successfully created
   Physical volume "/dev/vda7" successfully created
   Physical volume "/dev/vda8" successfully created
   
   [root@study ~]# pvscan
   PV /dev/vda3 VG centos lvm2 [30.00 GiB / 14.00 GiB free]
   PV /dev/vda8 lvm2 [1.00 GiB]
   PV /dev/vda5 lvm2 [1.00 GiB]
   PV /dev/vda7 lvm2 [1.00 GiB]
   PV /dev/vda6 lvm2 [1.00 GiB]
   Total: 5 [34.00 GiB] / in use: 1 [30.00 GiB] / in no VG: 4 [4.00 GiB]
   ```

2. **详细显示单个 PV 的信息**：
   ```bash
   [root@study ~]# pvdisplay /dev/vda5
   "/dev/vda5" is a new physical volume of "1.00 GiB"
   --- NEW Physical volume ---
   PV Name /dev/vda5
   VG Name 
   PV Size 1.00 GiB
   Allocatable NO
   PE Size 0
   Total PE 0
   Free PE 0
   Allocated PE 0
   PV UUID Cb717z-lShq-6WXf-ewEj-qg0W-MieW-oAZTR6
   ```

#### 卷组 (VG) 阶段
创建 VG 及相关指令如下：

- `vgcreate`：创建 VG。
- `vgscan`：搜索系统中的 VG。
- `vgdisplay`：显示系统中 VG 的状态。
- `vgextend`：在 VG 中添加额外的 PV。
- `vgreduce`：从 VG 中移除 PV。
- `vgchange`：设置 VG 是否激活。
- `vgremove`：删除一个 VG。

##### 示例
1. **创建一个新的 VG**：
   ```bash
   [root@study ~]# vgcreate -s 16M vbirdvg /dev/vda{5,6,7}
   Volume group "vbirdvg" successfully created
   
   [root@study ~]# vgscan
   Reading all physical volumes. This may take a while...
   Found volume group "vbirdvg" using metadata type lvm2
   Found volume group "centos" using metadata type lvm2
   
   [root@study ~]# pvscan
   PV /dev/vda5 VG vbirdvg lvm2 [1008.00 MiB / 1008.00 MiB free]
   PV /dev/vda6 VG vbirdvg lvm2 [1008.00 MiB / 1008.00 MiB free]
   PV /dev/vda7 VG vbirdvg lvm2 [1008.00 MiB / 1008.00 MiB free]
   PV /dev/vda3 VG centos lvm2 [30.00 GiB / 14.00 GiB free]
   PV /dev/vda8 lvm2 [1.00 GiB]
   Total: 5 [33.95 GiB] / in use: 4 [32.95 GiB] / in no VG: 1 [1.00 GiB]
   ```

2. **扩展 VG**：
   ```bash
   [root@study ~]# vgextend vbirdvg /dev/vda8
   Volume group "vbirdvg" successfully extended
   
   [root@study ~]# vgdisplay vbirdvg
   --- Volume group ---
   VG Name vbirdvg
   System ID
   Format lvm2
   Metadata Areas 3
   Metadata Sequence No 1
   VG Access read/write
   VG Status resizable
   MAX LV 0
   Cur LV 0
   Open LV 0
   Max PV 0
   Cur PV 3
   Act PV 3
   VG Size 2.95 GiB
   PE Size 16.00 MiB
   Total PE 189
   Alloc PE / Size 0 / 0
   Free PE / Size 189 / 2.95 GiB
   VG UUID Rx7zdR-y2cY-HuIZ-Yd2s-odU8-AkTW-okk4Ea
   ```

#### 逻辑卷 (LV) 阶段
创建 LV 及相关指令如下：

- `lvcreate`：创建 LV。
- `lvscan`：查询系统中的 LV。
- `lvdisplay`：显示系统中 LV 的状态。
- `lvextend`：增加 LV 的容量。
- `lvreduce`：减少 LV 的容量。
- `lvremove`：删除一个 LV。
- `lvresize`：调整 LV 的容量。

##### 示例
1. **创建一个新的 LV**：
   ```bash
   [root@study ~]# lvcreate -L 2G -n vbirdlv vbirdvg
   ```

通过以上步骤，您可以成功地创建和管理 LVM 分区。希望这些示例对您有所帮助！