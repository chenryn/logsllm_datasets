National Security Agency 
Cybersecurity and Infrastructure Security Agency 
Cybersecurity Technical Report 
Kubernetes Hardening Guidance 
August 2021 
S/N U/OO/168286-21 
PP-21-1104 
Version 1.0 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
ii 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Notices and history 
Document change history 
Date 
Version 
Description 
August 2021 
1.0 
Initial release 
Disclaimer of warranties and endorsement 
The information and opinions contained in this document are provided "as is" and 
without any warranties or guarantees. Reference herein to any specific commercial 
products, process, or service by trade name, trademark, manufacturer, or otherwise, 
does not necessarily constitute or imply its endorsement, recommendation, or favoring 
by the United States Government, and this guidance shall not be used for advertising or 
product endorsement purposes.  
Trademark recognition 
Kubernetes is a registered trademark of The Linux Foundation. ▪ SELinux is a registered 
trademark of the National Security Agency. ▪ AppArmor is a registered trademark of 
SUSE LLC. ▪ Windows and Hyper-V are registered trademarks of Microsoft Corporation. 
▪ ETCD is a registered trademark of CoreOS, Inc. ▪ Syslog-ng is a registered trademark 
of One Identity Software International Designated Activity Company. ▪ Prometheus is a 
registered trademark of The Linux Foundation. ▪ Grafana is a registered trademark of 
Raintank, Inc. dba Grafana Labs ▪ Elasticsearch and ELK Stack are registered 
trademarks of Elasticsearch B.V. 
Copyright recognition 
Information, examples, and figures in this document are based on Kubernetes 
Documentation by The Kubernetes Authors, published under a Creative Commons 
Attribution 4.0 license.  
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
iii 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Publication information 
Author(s)  
National Security Agency (NSA)  
Cybersecurity Directorate  
Endpoint Security 
Cybersecurity and Infrastructure Security Agency (CISA) 
Contact information 
Client Requirements / General Cybersecurity Inquiries:  
Cybersecurity Requirements Center, 410-854-4200, PI:EMAIL 
Media inquiries / Press Desk:  
Media Relations, 443-634-0721, PI:EMAIL 
For incident response resources, contact CISA at CISAServiceDesk@cisa.dhs.gov. 
Purpose 
NSA and CISA developed this document in furtherance of their respective cybersecurity 
missions, including their responsibilities to develop and issue cybersecurity 
specifications and mitigations. This information may be shared broadly to reach all 
appropriate stakeholders. 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
iv 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Executive summary 
Kubernetes® is an open-source system that automates the deployment, scaling, and 
management of applications run in containers, and is often hosted in a cloud 
environment. Using this type of virtualized infrastructure can provide several flexibility 
and security benefits compared to traditional, monolithic software platforms. However, 
securely managing everything from microservices to the underlying infrastructure 
introduces other complexities. The hardening guidance detailed in this report is 
designed to help organizations handle associated risks and enjoy the benefits of using 
this technology. 
Three common sources of compromise in Kubernetes are supply chain risks, malicious 
threat actors, and insider threats. 
Supply chain risks are often challenging to mitigate and can arise in the container build 
cycle or infrastructure acquisition. Malicious threat actors can exploit vulnerabilities and 
misconfigurations in components of the Kubernetes architecture, such as the control 
plane, worker nodes, or containerized applications. Insider threats can be 
administrators, users, or cloud service providers. Insiders with special access to an 
organization’s Kubernetes infrastructure may be able to abuse these privileges. 
This guidance describes the security challenges associated with setting up and securing 
a Kubernetes cluster. It includes hardening strategies to avoid common 
misconfigurations and guide system administrators and developers of National Security 
Systems on how to deploy Kubernetes with example configurations for the 
recommended hardening measures and mitigations. This guidance details the following 
mitigations: 
 Scan containers and Pods for vulnerabilities or misconfigurations. 
 Run containers and Pods with the least privileges possible.  
 Use network separation to control the amount of damage a compromise can 
cause.  
 Use firewalls to limit unneeded network connectivity and encryption to protect 
confidentiality.  
 Use strong authentication and authorization to limit user and administrator 
access as well as to limit the attack surface.  
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
v 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
 Use log auditing so that administrators can monitor activity and be alerted to 
potential malicious activity.  
 Periodically review all Kubernetes settings and use vulnerability scans to help 
ensure risks are appropriately accounted for and security patches are applied. 
For additional security hardening guidance, see the Center for Internet Security 
Kubernetes benchmarks, the Docker and Kubernetes Security Technical 
Implementation Guides, the Cybersecurity and Infrastructure Security Agency (CISA) 
analysis report, and Kubernetes documentation [1], [2], [3], [6]. 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
vi 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Contents 
Kubernetes Hardening Guidance ……………………………………………………..i 
Executive summary ................................................................................................................. iv 
Introduction ............................................................................................................................... 1 
Recommendations ................................................................................................................... 2 
Architectural overview ............................................................................................................. 3 
Threat model ............................................................................................................................. 5 
Kubernetes Pod security .......................................................................................................... 7 
“Non-root” containers and “rootless” container engines ........................................................... 7 
Immutable container file systems ............................................................................................. 8 
Building secure container images ............................................................................................ 8 
Pod Security Policies ............................................................................................................. 10 
Protecting Pod service account tokens .................................................................................. 11 
Hardening container engines ................................................................................................. 12 
Network separation and hardening ....................................................................................... 13 
Namespaces ......................................................................................................................... 13 
Network policies .................................................................................................................... 14 
Resource policies .................................................................................................................. 14 
Control plane hardening ........................................................................................................ 15 
Etcd ................................................................................................................................... 16 
Kubeconfig Files ................................................................................................................ 16 
Worker node segmentation .................................................................................................... 16 
Encryption ............................................................................................................................. 17 
Secrets .................................................................................................................................. 17 
Protecting sensitive cloud infrastructure ................................................................................ 18 
Authentication and authorization .......................................................................................... 18 
Authentication ........................................................................................................................ 19 
Role-based access control .................................................................................................... 20 
Log auditing ............................................................................................................................ 22 
Logging ................................................................................................................................. 22 
Kubernetes native audit logging configuration .................................................................... 24 
Worker node and container logging ................................................................................... 25 
Seccomp: audit mode ........................................................................................................ 26 
SYSLOG ............................................................................................................................ 27 
SIEM platforms ...................................................................................................................... 27 
Alerting .................................................................................................................................. 28 
Service meshes ..................................................................................................................... 29 
Fault tolerance ....................................................................................................................... 30 
Tools ..................................................................................................................................... 31 
Upgrading and application security practices ...................................................................... 32 
Works cited ............................................................................................................................. 33 
Appendix A: Example Dockerfile for non-root application .................................................. 34 
Appendix B: Example deployment template for read-only file systemfilesystem .............. 35 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
vii 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Appendix C: Example Pod Security Policy ........................................................................... 36 
Appendix D: Example namespace ......................................................................................... 38 
Appendix E: Example network policy .................................................................................... 39 
Appendix F: Example LimitRange ......................................................................................... 40 
Appendix G: Example ResourceQuota .................................................................................. 41 
Appendix H: Example encryption .......................................................................................... 42 
Appendix I: Example KMS configuration .............................................................................. 43 
Appendix J: Example pod-reader RBAC Role ....................................................................... 45 
Appendix K: Example RBAC RoleBinding and ClusterRoleBinding ................................... 46 
Appendix L: Audit Policy ........................................................................................................ 48 
Appendix M: Example flags with which to submit Audit Policy file to kube-apiserver ...... 49 
Appendix N: Webhook configuration .................................................................................... 51 
Figures 
Figure 1: High-level view of Kubernetes cluster components .............................................. 1 
Figure 2: Kubernetes architecture .......................................................................................... 3 
Figure 3: Pod components with sidecar proxy as logging container ................................... 7 
Figure 4: A container build workflow, optimized with webhook and admission controller 9 
Figure 5: Cluster leveraging service mesh to integrate logging with network security .....30 
Tables 
Table I: Pod Security Policy components .............................................................................10 
Table II: Control plane ports ...................................................................................................15 
Table III: Worker node ports ...................................................................................................17 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
1 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Introduction 
Kubernetes, frequently abbreviated “K8s”, is an open-source container-orchestration 
system used to automate deploying, scaling, and managing containerized applications. 
It manages all elements that make up a cluster, from each microservice in an 
application to entire clusters. Using containerized applications as microservices can 
provide more flexibility and security benefits compared to monolithic software platforms, 
but also can introduce other complexities.  
Figure 1: High-level view of Kubernetes cluster components 
This guidance focuses on security challenges and suggests hardening strategies where 
possible that are applicable to administrators of National Security Systems and critical 
infrastructure. Although this guidance is tailored to National Security Systems and 
critical infrastructure organizations, administrators of federal and state, local, tribal, and 
territorial (SLTT) government networks are also encouraged to implement the 
recommendations provided. Kubernetes clusters can be complex to secure and are 
often abused in compromises that exploit their misconfigurations. The following 
guidance offers specific security configurations that can help build more secure 
Kubernetes clusters.  
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
2 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Recommendations 
A summary of the key recommendations from each section are: 
 Kubernetes Pod security 
 Use containers built to run applications as non-root users 
 Where possible, run containers with immutable file systems 
 Scan container images for possible vulnerabilities or misconfigurations 
 Use a Pod Security Policy to enforce a minimum level of security 
including: 
 Preventing privileged containers 
 Denying container features frequently exploited to breakout, such 
as hostPID, hostIPC, hostNetwork, allowedHostPath 
 Rejecting containers that execute as the root user or allow 
elevation to root 
 Hardening applications against exploitation using security services 
such as SELinux®, AppArmor®, and seccomp 
 Network separation and hardening 
 Lock down access to control plane nodes using a firewall and role-based 
access control (RBAC) 
 Further limit access to the Kubernetes etcd server 
 Configure control plane components to use authenticated, encrypted 
communications using Transport Layer Security (TLS) certificates 
 Set up network policies to isolate resources. Pods and services in different 
namespaces can still communicate with each other unless additional 
separation is enforced, such as network policies 
 Place all credentials and sensitive information in Kubernetes Secrets 
rather than in configuration files. Encrypt Secrets using a strong 
encryption method 
 Authentication and authorization 
 Disable anonymous login (enabled by default) 
 Use strong user authentication 
 Create RBAC policies to limit administrator, user, and service account 
activity 
 Log auditing 
 Enable audit logging (disabled by default) 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
3 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
 Persist logs to ensure availability in the case of node, Pod, or container 
level failure 
 Configure a metrics logger 
 Upgrading and application security practices 
 Immediately apply security patches and updates 
 Perform periodic vulnerability scans and penetration tests 
 Remove components from the environment when they are no longer 
needed 
Architectural overview 
Kubernetes uses a cluster architecture. A Kubernetes cluster is comprised of a number 
of control planes and one or more physical or virtual machines called worker nodes. The 
worker nodes host Pods, which contain one or more containers. The container is the 
executable image that contains a software package and all its dependencies. See 
Figure 2: Kubernetes architecture.  
Figure 2: Kubernetes architecture1 
The control plane makes decisions about the cluster. This includes scheduling 
containers to run, detecting/responding to failures, and starting new Pods when the 
1 Kubernetes Components by SupriyaSurbi and Fale used under CC BY 4.0 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
4 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
number of replicas listed in a deployment file is unsatisfied. The following logical 
components are all part of the control plane: 
 Controller manager (Default Port: 10252) - monitors the Kubernetes cluster to 
detect and maintain several aspects of the Kubernetes environment including 
joining Pods to services, maintaining the correct number of Pods in a set, and 
responding to the loss of nodes. 
 Cloud controller manager (Default Port: 10258) - an optional component used 
for cloud-based deployments. The cloud controller interfaces with the Cloud 
Service Provider to manage load balancers and virtual networking for the cluster. 
 Kubernetes Application Programing Interface (API) Server (Default Port: 
6443 or 8080) - the interface through which administrators direct Kubernetes. As 
such, the API server is typically exposed outside of the control plane. The API 
Server is designed to scale and may exist on multiple control plane nodes. 
 Etcd® (Default Port Range: 2379-2380) - the persistent backing store where all 
information regarding the state of the cluster is kept. Etcd is not intended to be 
manipulated directly but should be managed through the API Server.  
 Scheduler (Default Port: 10251) - tracks the status of worker nodes and 
determines where to run Pods. Kube-scheduler is intended to be accessible only 
from nodes within the control plane.  
Kubernetes worker nodes are physical or virtual machines dedicated to running 
containerized applications for the cluster. In addition to running a container engine, 
worker nodes host the following two services that allow orchestration from the control 
plane:  
 Kubelet (Default Port: 10251) - runs on each worker node to orchestrate and 
verify Pod execution.  
 Kube-proxy - a network proxy that uses the host’s packet filtering capability to 
ensure correct packet routing in the Kubernetes cluster.  
Clusters are commonly hosted using a cloud service provider (CSP) Kubernetes service 
or on-premises. When designing a Kubernetes environment, organizations should 
understand their responsibilities in securely maintaining the cluster. CSPs administer 
most aspects of managed Kubernetes services, but the organization may need to 
handle some aspects, such as authentication and authorization. 
▲Return to Contents 
U/OO/168286-21 | PP-21-1104 | August 2021 Ver. 1.0 
5 
National 
Security 
Agency 
Cybersecurity 
and Infrastructure 
Security Agency 
Kubernetes Hardening Guidance 
National 
Security 
Agency 
Threat model 
Kubernetes can be a valuable target for data and/or compute power theft. While data 
theft is traditionally the primary motivation, cyber actors seeking computational power 