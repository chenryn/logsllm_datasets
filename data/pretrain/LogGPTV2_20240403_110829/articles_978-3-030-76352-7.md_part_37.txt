original alarms. The final compression rate obtained by the system is thus
590,307 = 87.9%. This is a big reduction that can greatly reduce the work of
4,481,273
network operators.
To put this into perspective, the compression obtained using the alarm cor-
relation rules was compared with that obtained using rules found by AABD.
Whiletheproposedframeworkcanfindthreemaintypesofrules(crossdomain,
crossdeviceandsingledevice),AABDonlyfindssingledevicesrulesintheRAN
domain. Thus, a comparison of the obtained compression was made using only
this type of rules. Using rules found by AABD, 39,603 alarms were removed,
while 44,548 were removed using the proposed framework. Thus, the proposed
methodallowedtoremove12.5%morerulesthanAABDforthescenarioofsingle
devicecompression.Iftheothertypesofrulesfoundbytheproposedframework
238 P. Fournier-Viger et al.
Table 3. Remaining alarms count after applying each compression procedure
Compression procedure Remaining alarms count
Original alarms count 6,199,650 (100%)
Available alarms on topology 4,481,273 (72.2%)
After pre-processing 992,966 (16.0%)
After cross domain compression 874,770 (14.1%)
After cross device compression 756,316 (12.2%)
After single device compression of 634,855 (10.2%)
microwave domain
After single device compression of ran 590,307 (9.5 %)
domain compression
are also used, a much greater compression can be obtained. For example, if
cross domain rules are also used, 162,744 alarms are removed by the proposed
framework, that is 123,141 more than AABD. And if both cross domain and
crossdevicerulesareutilizedaswellassingledevicerulesfromalldomains(not
just RAN), 284,463 more alarms are removed compared to AABD. Note that
AABDcouldalso beusedtofindrulesinother domains butsuchruleswerenot
provided.
5 Conclusion
To find interesting correlations between triggered alarms in telecommunication
networks, we modeled a network as a dynamic attributed graph where alarms
areviewedasdevice(node)attributes.Aframeworkwasdesignedtoextractcor-
relation rules for a single device, between different devices and across different
domains. For this, a novel correlation measure named ACOR (Alarm CORre-
lation) was designed. By considering the network topology, the rules can reveal
interesting relationships between alarms not found by prior approaches. The
solutionwasappliedtodatafromalargetelecommunicationnetwork.Interesting
patterns were discovered and it was found that the patterns can provide greater
alarm compression than the state-of-the-art AABD system [3]. This reduces the
numberofalarmstobeanalysedbynetworkoperatorsandthusthecostsofnet-
workmaintenance.Infuturework,weplantoextractmorecomplexgraph-based
patternstorevealothertypesofinterestinginformationfromnetworkalarmlogs
and designing distributed algorithms for processing very large alarm logs.
References
1. Dusia,A.,Sethi,A.S.:Recentadvancesinfaultlocalizationincomputernetworks.
IEEE Commun. Surv. Tutor. 18(4), 3030–3051 (2016)
Discovering Alarm Correlation Rules 239
2. Ding, J., Kramer, B., Xu, S., Chen, H., Bai, Y.: Predictive fault management in
the dynamic environment of IP networks. In: 2004 IEEE International Workshop
on IP Operations and Management, pp. 233–239 (2004)
3. Wang, J., et al.: Efficient alarm behavior analytics for telecom networks. Inf. Sci.
402, 1–14 (2017)
4. Costa, R., Cachulo, N., Cortez, P.: An intelligent alarm management system for
large-scale telecommunication companies. In: Lopes, L.S., Lau, N., Mariano, P.,
Rocha, L.M. (eds.) EPIA 2009. LNCS (LNAI), vol. 5816, pp. 386–399. Springer,
Heidelberg (2009). https://doi.org/10.1007/978-3-642-04686-5 32
5. Klemettinen,M.,Mannila,H.,Toivonen,H.:Rulediscoveryintelecommunication
alarm data. J. Netw. Syst. Manage. 7(4), 395–423 (1999)
6. Hatonen, K., Klemettinen, M., Mannila, H., Ronkainen, P., Toivonen, H.: TASA:
telecommunication alarm sequence analyzer or how to enjoy faults in your net-
work.In:ProceedingsofNOMS1996-IEEENetworkOperationsandManagement
Symposium, vol. 2, pp. 520–529. IEEE (1996)
7. Lozonavu, M., Vlachou-Konchylaki, M., Huang, V.: Relation discovery of mobile
network alarms with sequential pattern mining. In: 2017 International Confer-
enceonComputing,NetworkingandCommunications(ICNC),pp.363–367.IEEE
(2017)
8. Mannila, H., Toivonen, H., Verkamo, A.I.: Discovering frequent episodes in
sequences.In:Proceedingsof1stInternationalConferenceonKnowledgeDiscovery
and Data Mining (1995)
9. Ao, X., Shi, H., Wang, J., Zuo, L., Li, H., He, Q.: Large-scale frequent episode
mining from complex event sequences with hierarchies. ACM Trans. Intell. Syst.
Technol. (TIST) 10(4), 1–26 (2019)
10. Fournier-Viger,P.,Wang,Y.,Yang,P.,Lin,J.C.-W.,Yun,U.:TKE:miningtop-K
frequent episodes. In: Proceedings of 33rd International Conference on Industrial,
Engineering and Other Applications of Applied Intelligent Systems, pp. 832–845
(2020)
11. Luna, J.M., Fournier-Viger, P., Ventura, S.: Frequent itemset mining: a 25 years
review. Wiley Interdisc. Rev. Data Min. Knowl. Disc. 9(6), e1329 (2019)
12. Pei, J., et al.: Mining sequential patterns by pattern-growth: the PrefixSpan app-
roach. IEEE Trans. Knowl. Data Eng. 16(11), 1424–1440 (2004)
13. Truong, T., Duong, H., Le, B., Fournier-Viger, P.: FMaxCloHUSM: an efficient
algorithm for mining frequent closed and maximal high utility sequences. Eng.
Appl. Artif. Intell. 85, 1–20 (2019)
14. Tsang, S., Koh, Y.S., Dobbie, G.: Finding interesting rare association rules using
rarepatterntree.Trans.Large-ScaleDataKnowl.CenteredSyst.8,157–173(2013)
15. Liu,F.,Deng,Y.:DeterminethenumberofunknowntargetsinOpenWorldbased
on Elbow method. IEEE Trans. Fuzzy Syst. (2020)
16. Kaytoue, M., Pitarch, Y., Plantevit, M., Robardet, C.: Triggering patterns of
topology changes in dynamic graphs. In: IEEE/ACM International Conference
on Advances in Social Networks Analysis and Mining (ASONAM 2014) (2014)
17. Fournier-Viger, P., et al.: A survey of pattern mining in dynamic graphs. Wiley
Interdisc. Rev. Data Min. Knowl. Disc. 10, e1372 (2020)
18. Fournier-Viger,P.,Cheng,C.,Cheng,Z.,Lin,J.C.W.,Selmaoui-Folcher,N.:Find-
ingstronglycorrelatedtrendsindynamicattributedgraphs.In:InternationalCon-
ference on Big Data Analytics and Knowledge Discovery, pp. 250–265 (2019)
19. Desmier, E´., Plantevit, M., Robardet, C., Boulicaut, J.F.: Granularity of co-
evolution patterns in dynamic attributed graphs. In: International Symposium on
Intelligent Data Analysis, pp. 84–95 (2014)
Resource Sharing in Public Cloud System
with Evolutionary Multi-agent Artificial
Swarm Intelligence
B
Beiran Chen1( ), Yi Zhang2, and George Iosifidis1
1 Trinity College Dublin, Dublin, Ireland
{chenbe,iosifidg}@tcd.ie
2 Huawei Technologies, Dublin, Ireland
Abstract. ArtificialIntelligenceforIToperations(AIOps)isanemerg-
ingresearchareaforpubliccloudsystems.TheresearchtopicsofAIOps
havebeenexpandingfromrobustandreliablesystemstocloudresource
allocationingeneral.Inthispaperweproposearesourcesharingscheme
between cloud users, to minimize the resource utilization while guar-
anteeing Quality of Experience (QoE) of the users. We utilise the con-
ceptofrecentlyemergedArtificialSwarmIntelligence(ASI)forresource
sharing between users, by using Artificial-Intelligence-based agents to
mimichumanuserbehaviours.Inaddition,withthevariationofreal-time
resourceutilisation,theswarmofagentssharetheirspareresourcewith
each other according to their needs and their Personality Traits (PT).
In this paper, we first propose and implement an Evolutionary Multi-
robots Personality (EMP) model, which considers the constraints from
the environment (resource usage states of the agents) and the evolution
oftwoagents’PTateachsharingstep.WethenimplementaSingleEvo-
lution Multi-robots Personality (SEMP) model, which only considers to
evolveagent’sPTandneglectstheresourceusagestates.Forbenchmark-
ingwealsoimplementaNashBargainingSolutionSharing(NBSS)model
whichusesgametheorybutdoesnotinvolvePTorrisksofusagestates.
Theobjectiveofourproposedmodelsistomakealltheagentsgetsuffi-
cientresourceswhilereducingthetotalamountofexcessiveresources.The
resultsshowthatourEMPmodelperformsthebest,withleastiteration
stepsleadingtotheconvergenceandbestresourcesavings.
· · ·
Keywords: Artificial Swarm Intelligence AIOps Resource sharing
Reinforcement learning
1 Introduction
The Artificial Intelligence for IT Operations (AIOps) has become one of the
most industrial-favorite research areas in recent years, especially in public cloud
systems. The scope of AIOps has been extending from conventional fault moni-
toring and recovery problems to the optimization of cloud resources, i.e. avoid-
ing sub-optimal resource utilization and preventing potential failures related to
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.240–251,2021.
https://doi.org/10.1007/978-3-030-76352-7_25
Resource Sharing in Public Cloud System 241
it. In public cloud services, cloud hardware resources, such as CPU, memory,
disk, networking, etc., are virtualised before being provided to the customers.
Thesevirtualisedresourcesareabstractedasonelayerabovethephysicalinfras-
tructure layer and exposed to the customers. With this resource virtualisation,
customers all over the world are designated to share the same pool of resources
in the cloud. In public cloud, customer usage patterns are highly dynamic and
asynchronous because the customers locate at different time zones. Therefore,
there exist opportunities for cloud operators (IT operation teams) to re-allocate
resources between users dynamically to save the overall resource usage. Recent
publishedliteraturesuggestresourcesharingtosaveresourcesinthecloud,e.g.,
[6,15].Fromtheserviceprovidersperspective,abusinessmodelthatencourages
sharing excessive resource between customers helps to save the overall cloud
resources for the service providers. In addition, since these shared resources are
excessive,theQoEofusersisnotcompromised.Thisconceptofresourcesharing
providesanewoptionforIToperationteamtooptimizetheresourceutilization
of the cloud.
A successful sharing scheme includes the following key points: 1) to give
enough reward to the users who share; 2) to make sure that the users do not
experience service disruptions while sharing; and 3) to give resources back to
users when they need extra resources in some circumstances. In public cloud
systems, the major challenges for designing an optimal sharing scheme are the
following: 1) the real-time user demands for cloud resources, e.g. CPU, memory,
and network bandwidth are asynchronous, dynamic and hard to predict, which
makes the amount of excessive resources quite uncertain; 2) the users have dif-
ferent personalities, either conservative or generous, which affect their choices
of sharing or requesting resources; 3) traditional centralized resource allocation
algorithms are inefficient to solve this problem due to the difficulty of track-
ing and grouping large scale of users. Decentralized user-to-user sharing is more
effective.
To cope with the resource sharing problem of large scale of cloud users,
we bring in the concept of Artificial Swarm Intelligence (ASI) [9], which is a
recently emerged research field under the umbrella of reinforcement learning.
ThegoalofASIistoprovidesolutionswithAIagentstoimitatehuman/animal
behaviors/personalitiesinaswarmandmakeoptimaldecisionsinadecentralized
way. ASI is a multi-agent based reinforcement learning solution that achieves
collaborative goals with a swarm of agents. With the concept of ASI applying
in the cloud resource allocation system, AIOps team of public cloud system is
capable to achieve optimal resource utilization without compromising the QoE
of the customers.
To implement the ASI, in this paper, we design an EMP model for our
sharing system, which is an evolutionary multi-agent model, originated from
ASI.Thegoalofthissharingprocedureistodynamicallyallocatespareresources
from one agent to another who needs that resource in the meantime. Besides,
we define that each agent has Personality Traits (PT) which leads them to
have different preferences in different situations. In addition, the evolution of
242 B. Chen et al.
their PT during the sharing procedure causes them to make different actions at
each iteration steps to achieve the goal of sharing, i.e. all agents have sufficient
resources and QoE is guaranteed. During the sharing procedure, we use Nash
Bargaining method in game theory to obtain optimal policies.
Our contributions in this paper are the following: 1) building a multi-agent
EMP model based on Artificial Swarm Intelligence for user resource sharing in
the public cloud system; 2) apply PT and game theory for the EMP model
to optimize the sharing policy; and 3) the comprehensive analysis of the per-
formance of our algorithm by comparing our EMP model (including EMP with
AsymmetricNashBargainingstrategy(EMP-A)andEMPwithFixedstepstrat-
egy(EMP-F))with2otherbaselinemodels,SEMPandNBSS).Thispaperpro-
vides a new scope of optimal resource allocation for the AIOps research field in
public cloud system.
2 Background and Related Work
Swarm Intelligence is a concept of designing de-centralized and self-organized
systems for collective behaviours, first introduced in 1989 in the field of cellular
robotics [1]. This concept was firstly derived from natural animal behaviors in
swarms, and later on, has been applied in the Artificial Intelligence field to
establish a research area of ASI since 2015 [9]. The goal of ASI is to design
robotics to optimize the performance of a self-organized system that involves a
group of AI agents. Since it emerged, the ASI system has been firstly used in
many research areas. For instance, in intelligence transportation and logistics
systems, the authors in [13] presented a model to track and chase a target, by
designing an algorithm to control a swarm of autonomous robots to move in a
2-D space. Besides, other research areas using ASI include “human swarming”
for financial market forecasting [11] and disease diagnosing [8], etc.
Inthemeantime,theevolutionofpersonalitiesandthecorrespondingeffects
on collaboration of agents have also been brought to the swarm intelligence
research. For example, the authors in [2] used personality evolution to build a
self-organized algorithm to research on a problem of multiple robots to leave a
room in a self-organized way. The authors in [10] proposed a game-theory based
approach to swarm robots to collaborate with each other to chase a target. The
authors in [3] deal with the evolved control of a swarm of robots to decide the
signalling and connectivity of communications with each other. The authors in
[14] uses ASI to build a SWARM AI platform to measure the personalities of
human groups.
In this paper, we bring the concept of the evolution of the personality of
swarmagentstosolveourresourcesharingproblemincloudsystems.Inaddition,
we use game theory when defining rewards in the system for the agents to take
optimal actions. Our paper use ASI to deal with the resource sharing problem
in cloud system, which brings a novel scope for AIOps researchers to optimize
resource allocation when operating the public cloud system.
Resource Sharing in Public Cloud System 243
3 System Model
As mentioned in previous sections, our system encourages public cloud users to
share spare resources to each other, while agents with Artificial Intelligence act
astheadvisorsoftheuserstoperformthesharing.Inthissection,wedesignthe
EMPmodel,whichisbasedonASIthatconsidersthepersonalitiesoftheagents.
In the EMP model, we design two algorithms EMP-A and EMP-F, considering
bothPTandrisksofrunningshortofresources.Afterthatwedesign2algorithms
ascontrolgroupsforbenchmarking:oneisSEMP,inwhicheveryagentonlycares
about its own PT at each iteration stepwithout considering theriskof shortage
of resources; the other one is NBSS that uses Nash Bargaining Solution (NBS)
for agents without involving the agents’ PT in the sharing.
3.1 The EMP Model
In this EMP model, we focus on the cooperation between the agents without
considering the competitions between them, which aligns with the service sce-
nario in Infrastructure as a Service (IaaS) of public cloud where users should
not realize any competition between them when sharing resources. To quantify
the personality of agents in EMP, we introduce PT for agents, which describe
agents’ intention of selecting their sharing behaviours (i.e. actions).
We set all agents in our system as homogeneous agents with the only differ-
ence between them on the parameter settings of the agents based on the agents’