    [ 19%] Built target c10_DeviceGuard_test
    [ 19%] Built target dispavx_obj
    [ 19%] Built target c10_cuda_CUDATest
    [ 19%] Built target sleefsse2
    [ 20%] Built target sleeffma4
    [ 20%] Built target sleefavx
    [ 20%] Built target sleefsse4
    [ 20%] Built target sleefavx2128
    [ 20%] Built target sleefavx2
    [ 21%] Built target dispsse_obj
    [ 21%] Built target sleefavx512f
    [ 26%] Built target libprotoc
    [ 26%] Built target sleef
    [ 26%] Built target protoc
    [ 27%] Built target gen_onnx_proto
    [ 27%] Built target Caffe2_PROTO
    [ 27%] Built target onnx_proto
    [ 27%] Built target caffe2_protos
    [ 28%] Built target Caffe2_perfkernels_avx
    [ 28%] Built target Caffe2_perfkernels_avx2
    [ 30%] Built target onnx
    [ 59%] Built target caffe2
    [ 59%] Built target shm
    [ 59%] Built target caffe2_module_test_dynamic
    [ 59%] Built target caffe2_observers
    [ 59%] Built target caffe2_pybind11_state
    [ 60%] Built target THD
    [ 60%] Linking CXX shared library ../lib/libcaffe2_gpu.dylib
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/caffe2_gpu.dir/operators/rnn/recurrent_op_cudnn.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > > >(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(generated_message_reflection.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/caffe2_gpu.dir/operators/rnn/recurrent_op_cudnn.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy, std::__1::allocator > >::TypeHandler>(google::protobuf::RepeatedPtrField, std::__1::allocator > >::TypeHandler::Type*, google::protobuf::Arena*, google::protobuf::Arena*)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/caffe2_gpu.dir/operators/rnn/recurrent_op_cudnn.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/caffe2_gpu.dir/operators/rnn/recurrent_op_cudnn.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 60%] Built target python_copy_files
    [ 80%] Built target caffe2_gpu
    [ 80%] Linking CXX executable ../bin/batch_matmul_op_gpu_test
    [ 80%] Linking CXX executable ../bin/operator_fallback_gpu_test
    [ 80%] Linking CXX executable ../bin/operator_gpu_test
    [ 80%] Linking CXX executable ../bin/conv_op_cache_cudnn_test
    [ 80%] Linking CXX executable ../bin/utility_ops_gpu_test
    [ 80%] Linking CXX executable ../bin/roi_align_op_gpu_test
    [ 80%] Linking CXX executable ../bin/elementwise_op_gpu_test
    [ 81%] Linking CXX shared module python/caffe2_pybind11_state_gpu.cpython-36m-darwin.so
    [ 81%] Built target conv_op_cache_cudnn_test
    [ 81%] Built target operator_gpu_test
    [ 81%] Built target batch_matmul_op_gpu_test
    [ 81%] Built target elementwise_op_gpu_test
    [ 81%] Built target utility_ops_gpu_test
    [ 81%] Built target operator_fallback_gpu_test
    [ 81%] Built target roi_align_op_gpu_test
    [ 81%] Built target caffe2_pybind11_state_gpu
    [ 81%] Linking CXX executable ../bin/net_gpu_test
    [ 81%] Linking CXX executable ../bin/context_gpu_test
    [ 81%] Linking CXX executable ../bin/blob_gpu_test
    [ 81%] Linking CXX executable ../bin/dead_code_elim_test
    [ 81%] Linking CXX executable ../bin/cudnn_test
    [ 81%] Linking CXX executable ../bin/conv_to_nnpack_transform_test
    [ 81%] Linking CXX executable ../bin/cuda_rng_test
    [ 81%] Linking CXX executable ../bin/depthwise3x3_conv_op_test
    [ 81%] Built target conv_to_nnpack_transform_test
    [ 81%] Built target dead_code_elim_test
    [ 81%] Built target cudnn_test
    [ 81%] Built target cuda_rng_test
    [ 81%] Built target context_gpu_test
    [ 81%] Built target depthwise3x3_conv_op_test
    [ 81%] Linking CXX executable ../bin/nnpack_test
    [ 81%] Linking CXX executable ../bin/distributed_test
    [ 81%] Linking CXX executable ../bin/converter_nomigraph_test
    [ 81%] Built target net_gpu_test
    [ 81%] Linking CXX executable ../bin/backend_cutting_test
    [ 81%] Linking CXX executable ../bin/blob_test
    [ 81%] Linking CXX executable ../bin/integer_divider_test
    [ 81%] Built target blob_gpu_test
    [ 81%] Linking CXX executable ../bin/int8_roi_align_op_test
    [ 81%] Linking CXX executable ../bin/workspace_test
    [ 82%] Built target distributed_test
    [ 82%] Built target converter_nomigraph_test
    [ 82%] Built target backend_cutting_test
    [ 82%] Built target nnpack_test
    [ 82%] Built target integer_divider_test
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/blob_test.dir/core/blob_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > > >(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(generated_message_reflection.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/blob_test.dir/core/blob_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedSlowWithCopy, std::__1::allocator > >::TypeHandler>(google::protobuf::RepeatedPtrField, std::__1::allocator > >::TypeHandler::Type*, google::protobuf::Arena*, google::protobuf::Arena*)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/blob_test.dir/core/blob_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(message.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/blob_test.dir/core/blob_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 82%] Built target int8_roi_align_op_test
    Scanning dependencies of target cuda_optional_test
    [ 82%] Linking CXX executable ../bin/utility_ops_test
    [ 82%] Linking CXX executable ../bin/int8_test
    [ 82%] Linking CXX executable ../bin/fatal_signal_asan_no_sig_test
    [ 82%] Built target workspace_test
    [ 82%] Linking CXX executable ../bin/cuda_optional_test
    [ 82%] Linking CXX executable ../bin/test_parallel
    [ 82%] Linking CXX executable ../bin/generate_proposals_op_util_nms_test
    [ 82%] Built target blob_test
    [ 82%] Linking CXX executable ../bin/boolean_unmask_ops_test
    [ 82%] Linking CXX executable ../bin/conv_transpose_op_mobile_test
    [ 82%] Built target test_parallel
    [ 82%] Built target fatal_signal_asan_no_sig_test
    [ 82%] Built target int8_test
    [ 82%] Built target cuda_optional_test
    [ 82%] Built target generate_proposals_op_util_nms_test
    [ 83%] Linking CXX executable ../bin/scalar_test
    [ 83%] Linking CXX executable ../bin/ssa_test
    [ 83%] Built target boolean_unmask_ops_test
    [ 83%] Linking CXX executable ../bin/batch_matmul_op_test
    [ 83%] Built target utility_ops_test
    [ 83%] Linking CXX executable ../bin/operator_schema_test
    [ 83%] Built target conv_transpose_op_mobile_test
    [ 84%] Linking CXX executable ../bin/time_observer_test
    [ 84%] Linking CXX executable ../bin/wrapdim_test
    [ 84%] Linking CXX executable ../bin/timer_test
    [ 84%] Linking CXX executable ../bin/inline_container_test
    ld: warning: direct access in function 'google::protobuf::internal::ExtensionSet::MutableString(int, unsigned char, google::protobuf::FieldDescriptor const*)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/operator_schema_test.dir/core/operator_schema_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    ld: warning: direct access in function 'void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom, std::__1::allocator > >::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase const&)' from file '../lib/libprotobuf.a(extension_set.cc.o)' to global weak symbol 'void google::protobuf::internal::arena_destruct_object, std::__1::allocator > >(void*)' from file 'CMakeFiles/operator_schema_test.dir/core/operator_schema_test.cc.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.
    [ 84%] Built target scalar_test
    [ 84%] Built target wrapdim_test
    [ 84%] Built target batch_matmul_op_test
    [ 84%] Built target time_observer_test
    [ 84%] Built target timer_test
    [ 84%] Built target operator_schema_test
    [ 84%] Linking CXX executable ../bin/common_test
    [ 84%] Built target ssa_test
    [ 84%] Linking CXX executable ../bin/TopoSortTest
    [ 84%] Linking CXX executable ../bin/TarjansImplTest
    [ 84%] Linking CXX executable ../bin/SubgraphMatcherTest
    [ 84%] Built target inline_container_test
    [ 84%] Linking CXX executable ../bin/cpuid_test
    [ 84%] Linking CXX executable ../bin/NeuralNetTest
    [ 84%] Linking CXX executable ../bin/simple_queue_test
    [ 84%] Linking CXX executable ../bin/apply_test
    [ 84%] Built target TarjansImplTest
    [ 84%] Built target cpuid_test
    [ 84%] Built target TopoSortTest
    [ 84%] Built target common_test
    [ 84%] Built target NeuralNetTest
    [ 84%] Built target SubgraphMatcherTest
    [ 84%] Built target simple_queue_test
    [ 84%] Built target apply_test
    [ 84%] Linking CXX executable ../bin/MatchTest