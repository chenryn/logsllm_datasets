ICS       
点击此处添加中国标准文献分类号 
备案号： 
中 华 人 民 共 和 国      行 业 标 准 
XX/T XXXXX—XXXX 
研发运营一体化（DevOps）能力成熟度模
型 
第 5 部分：应用设计 
The capability maturity model of DevOps 
Part 5: Application Design 
点击此处添加与国际标准一致性程度的标识 
（征求意见稿） 
     - XX - XX 发布 
XXXX - XX - XX
        发 布  
XX/T XXXXX—XXXX 
I 
目录!
前言.................................................................................. II!
研发运营一体化（DevOps）能力成熟度模型 第 5 部分：应用设计.............................. 1!
1 范围................................................................................. 1!
2 规范性引用文件....................................................................... 1!
3 术语................................................................................. 1!
3.1 软件架构 Software Architecture................................................... 1!
3.2 应用程序 Application............................................................. 1!
3.3 运行时环境 Runtime Environment................................................... 1!
3.4 软件包 Software Package.......................................................... 1!
4 缩略语............................................................................... 1!
5 应用设计............................................................................. 2!
5.1 应用接口......................................................................... 2!
5.2 应用性能......................................................................... 4!
5.3 应用扩展......................................................................... 6!
5.4 故障处理......................................................................... 8!
A..................................................................................... 10!
A..................................................................... 错误! 未定义书签。!
附 录 A （规范性附录） 五级度量指标定义............................. 错误! 未定义书签。!
参考文献.............................................................................. 11!
XX/T XXXXX—XXXX 
II 
前  言 
研发运营一体化是指在IT软件及相关服务的研发及交付过程中，将应用的需求、开发、测试、部署
和运营统一起来，基于整个组织的协作和应用架构的优化，实现敏捷开发、持续交付和应用运营的无缝
集成。帮助企业提升IT效能，在保证稳定的同时，快速交付高质量的软件及服务，灵活应对快速变化的
业务需求和市场环境。 
本标准是“研发运营一体化（DevOps）能力成熟度模型”系列标准的第 5 部分 应用设计，该系列标
准的结构和名称如下:  
第1部分：总体架构 
第2部分：敏捷开发管理 
第3部分：持续交付 
第4部分：技术运营 
第5部分：应用设计 
第6部分：安全风险管理 
第7部分：组织结构 
本标准按照GB/T 1.1-2009给出的规则起草。  
本标准由中国通信标准化协会提出并归口。 
本标准起草单位： 待完善 
本标准主要起草人：待完善 
XX/T XXXXX—XXXX 
1 
研发运营一体化（DevOps）能力成熟度模型 第 5 部分：应用设计 
1 范围 
本标准规定了研发运营一体化（DevOps）能力成熟度模型中应用设计能力的成熟度要求。 
本标准适用于具备IT软件研发、交付、运营能力的组织实施IT软件开发和服务过程的能力进行评价
和指导；可供其他相关行业或组织进行参考；也可作为第三方权威评估机构衡量软件开发交付成熟度的
标准依据。 
2 规范性引用文件 
下列文件对于本文件的应用是必不可少的。凡是注日期的引用文件，仅所注日期的版本适用于本文
件。凡是不注日期的引用文件，其最新版本（包括所有的修改单）适用于本文件。 
[1] YD/T 1171-2001    IP网络技术要求——网络性能参数与指标 
[2] YD/T 1823-2008    IPTV业务系统总体技术要求 
[3] YD/T 1489-2006    数字蜂窝移动通信网移动流媒体业务总体技术要求 
3 术语 
下列术语和定义适用于本文件。 
3.1 软件架构 Software Architecture 
软件架构是计算系统的软件架构是解释该系统所需的结构体的集合,其中包括软件元素,元素之间的相
互关系和二者各自的属性。 
3.2 应用程序 Application program 
指研发团队生产的可基于运行时环境运行的软件包。 
3.3 运行时环境 Runtime Environment 
运行时环境指应用程序进入运行态的软件环境，包括操作系统、中间件、计算机程序设计语言编译
器、计算机程序设计语言解释器、环境变量、SDK 等非研发团队的应用程序产出。 
3.4 软件包 Software Package 
通过计算机程序设计语言编写并生成的可运行计算机的代码集合。 
4 缩略语 
下列缩略语适用于本文件。 
XX/T XXXXX—XXXX 
2 
DevOps      a portmanteau of development and operations     一组过程、方法与系统的统
称 
JSON        JavaScript Object Notation                     JS 对象标记 
HTTP        HyperText Transfer Protocol                    超文本传输协议 
MTTF        Mean Time To Failure                           平均失效前时间 
MTTR        Mean Time Between Failures                     平均恢复前时间 
RPC         Remote Procedure Call                          远程过程调用 
TCP         Transmission Control Protocol                  传输控制协议 
XML         eXtensible Markup Language                     可扩展标记语言 
5 应用设计 
DevOps技术能力包括开发技术、测试技术、运维技术等能力，其中开发技术中最核心的是应用设计
相关技术，应用设计的分级技术要求包括：应用接口、应用性能、应用扩展和故障处理，如表1所示。 
表1 应用设计分级技术要求 
应用设计 
应用接口 
应用性能 
应用扩展 
故障处理 
传输协议 
实际性能 
水平扩展 
日志 
数据协议 
可用性 
垂直扩展 
监控 
内容协议 
故障追踪 
接口治理 
故障修复 
5.1 应用接口 
是指软件系统不同组成部分衔接的约定。 
5.1.1 接口规范 
是指通过接口标准化制定统一的规范和处理方式，降低接口的复杂度，减少接口对接的工作量，从
而提升应用交付的速度和效率。 
5.1.1.1 传输协议 
指应用系统间传输数据所用的协议，例如TCP、HTTP、RPC等。 
5.1.1.2 数据协议 
指应用系统间传输的数据所采用的格式，例如 JSON、XML、私有协议等。 
5.1.1.3 内容管理 
指应用系统间传输的数据内容有统一的标准管理，例如JSON数据应该包含哪些字段。 
表2 应用接口 
级别 
传输协议 
数据协议 
内容协议 
XX/T XXXXX—XXXX 
3 
1 
各应用系统分别对外提供不
同的传输协议，例如 A 系统
提供 HTTP、B 系统提供二进
制，C 系统提供 RPC 
各应用系统分别对外提供不
同的数据协议，例如 A 系统
对外提供 XML 数据，B 系统对
外提供 JSON 数据 
各应用系统分别对外提供不
同的内容协议，例如同样是
JSON 格式，A 系统 Json 数据
键命名风格是下划线，B 系统
Json 数据键命名风格是驼峰
式 
2 
各应用系统约定了统一的传
输协议，例如指定采用 HTTP
传输协议 
各应用系统约定了接口间传
输的数据协议，例如指定数
据协议为 XML 
各应用系统约定了接口间传
输的内容协议，例如 Json 的
命名规范，最大长度等 
3 
各应用系统约定了统一的传
输协议和协议规范，例如采
用
HTTP
协 议 时 ， 指 定
Content-Type、 Connection
等 header 的配置 
各应用系统约定了统一的数
据协议和数据规范，例如采
用 XML 格式时，哪些信息用
属性表示，哪些信息用元素
表示 
各应用系统约定了接口间传
输的内容协议规范，例如指
定 JSON数据必须包含这些字
段 ： requestID ， caller ，
source，time，response 
4 
提供了统一的接口开发库或
者开发包，各应用系统统一
使用开发库或者开发包来完
成协议解析和处理 
提供了统一的数据编解码开
发库或者开发包，各应用系
统统一使用开发库或者开发
包 
提供了统一的内容编解码开
发库或者开发包，各应用系
统统一使用开发库或者开发
包 
5 
提供了统一的开发框架，开
发框架集成了协议处理，可
以通过简单的方式就能够对
外提供接口，例如通过
SpringBoot 的
@RestController 注解方式
提供接口 
提供了统一的开发框架，开
发框架集成了协议处理，可
以通过简单的方式就能够对
外 提 供 接 口 ， 例 如 通 过
SpringBoot 的注解方式 
提供了统一的开发框架，开
发框架集成了协议处理，可
以通过简单的方式就能够对
外 提 供 接 口 ， 例 如
SpringBoot 的注解方式 
5.1.2 接口管理 
接口规范是指利用统一的接口规范约束各个系统按照统一的标准规范操作，并对应用系统提供的
接口进行管理，主要内容包括接口查询和权限控制，如表 2 所示。 
5.1.2.1 接口查询 
应用系统需要查询其它应用系统提供的接口，应确保接口符合规范。 
5.1.2.2 权限控制 
应用系统对外提供的接口，需要进行权限控制，例如部分敏感数据的访问。 
表3 接口管理 
级别 
接口查询 
权限控制 
接口规范管理 
1 
各应用系统自己维护接口文档，通
过邮件或者即时通信的方式传送
接口文档 
各应用系统对外提供的接口没有
权限控制能力 
自行定义的格式的接口规范，接口
规范相对松散。 
XX/T XXXXX—XXXX 
4 
2 
提供统一的接口查询平台，各个应
用系统开发人员在这个平台上手
工填写自己系统的接口信息 
各应用系统自己实现基本的访问
控制权限 
有统一的接口规范，但接口由标准