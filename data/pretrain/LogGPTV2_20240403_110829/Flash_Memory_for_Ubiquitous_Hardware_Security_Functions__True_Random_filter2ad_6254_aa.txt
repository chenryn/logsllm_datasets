title:Flash Memory for Ubiquitous Hardware Security Functions: True Random
Number Generation and Device Fingerprints
author:Yinglei Wang and
Wing-Kei S. Yu and
Shuo Wu and
Greg Malysa and
G. Edward Suh and
Edwin Kan
2012 IEEE Symposium on Security and Privacy
Flash Memory for Ubiquitous Hardware Security Functions: True Random 
Number Generation and Device Fingerprints 
Yinglei Wang, Wing-kei Yu, Shuo Wu, Greg Malysa, G. Edward Suh, and Edwin C. Kan 
School of Electrical and Computer Engineering 
Cornell University 
Ithaca, NY, USA
{yw437, wsy5, sw626, gjm76, gs272, eck5}@cornell.edu 
Abstract— We demonstrate that unmodified commercial Flash 
memory  can  provide  two  important  security  functions:  true 
random number generation and digital fingerprinting. Taking 
advantage of random telegraph noise (a type of quantum noise 
source  in  highly  scaled  Flash  memory  cells)  enables  high 
quality  true  random  number  generation  at  a  rate  up  to  
10Kbits  /  second.  A  scheme  based  on  partial  programming 
exploits process variation in threshold voltages to allow quick 
generation  of  many  unique  fingerprints  that  can  be  used  for 
identification  and  authentication.  Both  schemes  require  no 
change  to  Flash  chips  or  interfaces,  and  do  not  require 
additional hardware.  
Keywords  -  security;  flash  memory;  true  random  number 
generation; hardware fingerprints; device authentication 
I. 
 INTRODUCTION 
Flash  memory  has  gained  a  ubiquitous  place  in  the 
computing  landscape  today.  Virtually  all  mobile  devices 
such  as  smartphones  and  tablets  rely  on  Flash  memory  as 
their non-volatile storage. Flash memory is also moving into 
laptop  and  desktop  computers,  intending  to  replace  the 
mechanical hard drive. Floating-gate non-volatile memory is 
even  more  broadly  used  in  electronic  applications  with  a 
small amount of non-volatile memory. For example, even 8-
bit  or  16-bit  microcontrollers  for  embedded  systems 
commonly have on-chip EEPROMs to store instructions and 
data.  Many  people  also  carry  Flash  memory  as  standalone 
storage medium as in USB memory sticks and SD cards. 
In this  paper,  we propose  to utilize  analog behaviors  of 
off-the-shelf  Flash  memory 
to  enable  hardware-based 
security  functions  in  a  wide  range  of  electronic  devices 
without  requiring  custom  hardware.  More  specifically,  we 
show that a standard Flash memory interface can be used to 
generate  true  random  numbers  from  quantum  and  thermal 
fingerprints  based  on 
noises  and 
manufacturing  variations. The  techniques  can be applied  to 
any floating-gate non-volatile memory in general, and does 
not  require  any  hardware  modifications  to  today’s  Flash 
memory chips, allowing them to be widely deployed. 
to  produce  device 
Both  hardware  random  number  generators  (RNGs)  and 
device fingerprints provide important foundations in building 
secure  systems.  For  example,  true  randomness  is  a  critical 
ingredient  in  many  cryptographic  primitives  and  security 
protocols;  random  numbers  are  often  required  to  generate 
secret  keys  or  prevent  replays  in  communications.  While 
pseudo-random number generators are often used in today’s 
systems,  they  cannot  provide  true  randomness  if  a  seed  is 
reused or predictable. As an example, a recent study showed 
that reuse of virtual machine (VM) snapshots can break the 
Transport  Level  Security  (TLS)  protocol due  to  predictable 
random numbers [1]. Given the importance of a good source 
of  randomness,  high  security  systems  typically  rely  on 
hardware RNGs. 
Instead of requiring custom hardware modules for RNGs, 
we found that analog noise in Flash memory bits can be used 
to  reliably  generate  true  random  numbers.  An  interesting 
finding is that the standard Flash chip interface can be used 
to put a memory bit in partially programmed state so that the 
internal noise can be observed through the digital interface. 
There  exist  two  sources  of  true  randomness  in  Flash  bits, 
Random  Telegraph  Noise  (RTN)  and  thermal  noise.  While 
both sources can be leveraged for RNGs, our scheme focuses 
on  RTN,  which  is  quantum  noise.  Unlike  thermal  noise, 
which  can  be  reduced  significantly  at  extremely  low 
temperatures,  RTN  behavior  continues  at  all  temperature 
ranges.  Moreover,  the  quantum  uncertainty  nature  of  RTN 
provides  a  better  entropy  source  than  system  level  noises 
which  rely  on  the  difficulty  of  modeling  complex  yet 
deterministic  systems.  Our  algorithm  automatically  selects 
bits  with  RTN  behavior  and  converts  RTN  into  random 
binary bits. 
Experimental results demonstrate that the RTN behavior 
exists  in  Flash  memory  and  can  be  converted  into  random 
numbers  through  the  standard  Flash  interface.  The  Flash-
based  RNG  is  tested  using  the  NIST  test  suite  [2]  and  is 
shown to pass all tests successfully. Moreover, we found that 
the RNG works even at a very low temperature (-80 °C). In 
fact, the RTN behavior is more visible at low temperatures.  
On our test platform, the Flash RNG generates about 1K to 
10K bits per second. Overall, the experiments show that true 
random numbers can be generated reliably from off-the-shelf 
Flash memory chips without requiring custom circuits. 
In addition to generating true random numbers, we also 
found that the standard Flash interface can be used to extract 
fingerprints  (or  signatures)  that  are  unique  for  each  Flash 
chip.  For  this  purpose,  our  technique  exploits  inherent 
random  variations  during  Flash  manufacturing  processes. 
More specifically, we show that the distributions of transistor 
threshold  voltages  can  be  measured  through  the  standard 
Flash  interface  using  incremental  partial  programming. 
Experimental  results  show  that  these  threshold  voltage 
distributions  can  be  used  as  fingerprints,  as  they  are 
significantly  different  from  chip  to  chip,  or  even  from 
location to location within a chip. The distributions also stay 
© 2012, Yinglei Wang. Under license to IEEE.
DOI 10.1109/SP.2012.12
33
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:10 UTC from IEEE Xplore.  Restrictions apply. 
relatively  stable  across  temperature  ranges  and  over  time. 
Thanks to the large number of bits (often several gigabits) in 
modern  Flash  chips,  this  technique  can  generate  a  large 
number of independent fingerprints from each chip.  
The  Flash  fingerprints  provide  an  attractive  way  to 
identify  and/or  authenticate  hardware  devices  and  generate 
device-specific  keys,  especially  when  no  cryptographic 
module  is available or  a  large  number  of  independent  keys 
are desired. For example, at a hardware component level, the 
fingerprints  can  be  used  to  distinguish  genuine  parts  from 
counterfeit components without requiring cryptography to be 
added to each component. The fingerprinting technique can 
also  be  used  for  other  authentication  applications  such  as 
turning a Flash device into a two-factor authentication token, 
or identifying individual nodes in sensor networks.  
While  the  notion  of  exploiting  manufacturing  process 
variations  to  generate  silicon  device  fingerprints  and  secret 
keys is not new and has been extensively studied under the 
name  of  Physical  Unclonable  Functions  (PUFs)  [3],  the 
Flash-based  technique  in  this  paper  represents  a  unique 
contribution in terms of its practical applicability. Similar to 
true  RNGs,  most  PUF  designs  require  custom  circuits  to 
convert unique analog characteristics into digital bits. On the 
other  hand,  our  technique  can  be  applied  to  off-the-shelf 
Flash without hardware changes. Researchers have recently 
proposed  techniques  to  exploit  existing  bi-stable  storage 
elements  such as  SRAMs [4]  or  Flash  cells  [5]  to  generate 
device  fingerprints.  Unfortunately,  obtaining  fingerprints 
from  bi-stable  elements  requires  a  power  cycle  (power  off 
and power on) of a device for every fingerprint generation. 
The previous approach to fingerprinting Flash only works for 
a  certain  types  of  Flash  chips  and  takes  long  time  (100 
seconds  for one  fingerprint) because  it relies on rare errors 
called program disturbs. As an example, we did not see any 
program  disturbs  in  SLC  Flash  chips  that  we  used  in 
experiments.  To  the  best  of  our  knowledge,  the  proposed 
device fingerprinting techniques is the first that is fast (less 
than  1  second  for  a  1024-bit  fingerprint)  and  widely 
applicable  without  interfering  with  normal  operation  or 
requiring custom hardware. 
The following list summarizes the main strengths of the 
proposed  security  functions  based  on  Flash  memory  over 
existing approaches for hardware random number generators 
and fingerprints. 
•  Widely  applicable:  Flash  memory  already  exists  in 
many  electronic  devices.  The  proposed  techniques 
can  often  be  implemented  as  system  software  or 
firmware updates without hardware changes. 
•  Non-intrusive: the techniques do not require a reboot 
and  only  have  minimal  interference  with  normal 
memory  operations.  Only  a  small  portion  of  Flash 
needs  to  be  used  for  security  functions  during 
security operations. There is minimal wear-out.  
•  High security: the Flash random number generator is 
based  on  quantum  noise,  which  exists  even  at 
extremely  low  temperatures.  Thanks  to  the  high 
capacity  of  today’s  Flash  memory,  a  very  large 
number of independent  signatures  can  be  generated 
from Flash. 
The rest of the paper is organized as follows. Section II 
provides the basic background on the Flash memory. Based 
on this understanding, Section III and Section IV explain the 
new  techniques  to  generate  random  numbers  and  device 
fingerprints through standard Flash interfaces. Then, Section 
V studies the effectiveness and the security of the proposed 
methods  through  experimental  results  on  real  Flash  chips. 
Section  0  briefly  discusses  a  few  examples  of  application 
scenarios.  Finally,  Section  VII  discusses  related  work  and 
Section VIII concludes the paper.  
II.  FLASH MEMORY BASICS 
This  section  provides  background  material  on  Flash 
memory  and  its  operating  principles  in  order  to  aid 
understanding of our Flash-based security schemes. 
A.  Floating Gate Transistors 
Flash  memory  is  composed  of  arrays  of  floating-gate 
transistors. A floating-gate transistor is a transistor with two 
gates, stacked on top of each other. One gate is electrically 
insulated  (floating).  Figure  1  shows  an  example  of  a 
floating-gate device. The control gate is on top. An insulated 
conductor, surrounded by oxide, is between the control gate 
and  the  channel.  This  conductor  is  the  floating  gate. 
Information is stored as the presence or absence of trapped 
charge  on  the  floating  gate.  The  trapped  negative  charge 
reduces  the  current  flowing  through  the  channel  when  the 
N-type  MOS  transistor  is  on.  This  current  difference  is 
sensed and translated into the appropriate binary value.  
Figure 1. Flash memory cell based on a floating gate transistor. 
Flash  cells  without  charge  on  their  floating-gate  allow 
full  current  flow  in  the  channel  and  hence  are  read  as  a 
binary "1". The presence of charge on the floating-gate will 
discourage  the  presence  of  current  in  the  channel,  making 
the cell store a "0". Effectively, the charge on the floating-
gate  increases  the  threshold  voltage  (Vth)  of  a  transistor. 
Single-level  cells  store  one  bit  of  information;  multi-level 
cells  can  store  more  than  one  bit  by  reading  and  injecting 
charge to adjust the current flow of the transistor. 
Note that the threshold voltage without any charge on the 
floating-gate is different for each transistor due to variations 
in  manufacturing  processes.  As  a  result,  the  amount  of 
charge that needs to be stored to the floating-gate for a cell 
to reliably represent a ''0'' state varies from cell to cell. If the 
threshold voltage is not shifted sufficiently, a cell can be in 
an  unreliable  (partially  programmed)  state  that  can  be 
34
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 11:47:10 UTC from IEEE Xplore.  Restrictions apply. 
interpreted  as  either  1  or  0.  In  this  paper,  we  exploit  the 
threshold  voltage  variations  and  the  partially  programmed 
state to extract fingerprints and random numbers. 
B.  Flash Organization and Operation 
At  a  high-level,  Flash  memory  provides  three  major 
operations:  read,  erase,  and  program  (write).  In  order  to 
read  a  bit  in  a  Flash  cell,  the  corresponding  transistor  is 
turned on and the amount of current is detected. A write to a 
Flash  cell  involves  two  steps.  First,  an  erase  operation 
pushes  charge  off  the  floating-gate  by  applying  a  large 
negative voltage on the control gate. Then, a program (write) 
operation  stores  charge  on  the  floating-gate  by  selectively 
applying a large positive voltage if the bit needs to be zero.  
An important concept in Flash memory operation is that 
of  pages  and  blocks.  Pages  are  the  smallest  unit  in  which 
data is read or written, and are usually 2KB to 8KB. Blocks 
are the smallest unit for an erase operation and made up of 
several pages, usually 32 - 128 pages. Note that Flash does 
not provide bit-level program or erase. To read an address 
from a Flash chip, the page containing the address is read. 
To update a value, the block that includes the address must 
be first erased, then the corresponding page is written with 
an update and other pages in the block are restored. 
III.  RANDOM NUMBER GENERATION 
A.  Random Telegraph Noise (RTN) 
behavior 
can 
distributed.  RTN 
The proposed RNG uses a device effect called Random 
Telegraph  Noise  (RTN)  as  the  source  of  randomness.  In 
general, RTN refers to the alternating capture and emission 
of  carriers  at  a  defect  site  (trap)  of  a  very  small  electronic 
device,  which  generates  discrete  variation  in  the  channel 
current [6]. The capture and emission times are random and 
exponentially 
be 
distinguished  from  other  noise  using  the  power  spectrum 
density  (PSD),  which  is  flat  at  low  frequencies  and  1/f2  at 
high  frequencies.  In  Flash  memory,  the  defects  that  cause 
RTN are located in the tunnel-oxide near the substrate. The 
RTN amplitude is inversely proportional to the gate area and 
nearly  temperature  independent.  As  Flash  memory  cells 
shrink,  RTN  effects  become  relatively  stronger  and  their 
impact on the threshold distribution of Flash memory cells, 
especially  for  multi-level  cells,  can  be  significant.  Because 
RTN can be a major factor in Flash memory reliability, there 
have been a large number of recent studies on RTN in Flash 
memory from a reliability perspective [7] [8] [9]. 
While  RTN  is  a  challenge  to  overcome  from  the 
perspective  of  Flash  memory  operations,  it  can  be  an  ideal 
source  of  randomness.  RTN  is  caused  by  the  capture  and 
emission  of  an  electron  at  a  single  trap,  and  is  a  physical 
phenomenon  with  random  quantum  properties.  Quantum 