tractable policy. ECLs stay up to date with a single entry
of the form "*/Signers/SoftwareHouse". Developers with
the skills to sign code can easily change between their
configured personal
identity to the a trusted signing
identity to re-sign the final version before sharing it by
using the Notes
"Switch ID" menu command and
policy
the
in
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
authenticating against the second ID file. They can use
Change Location to change their email address, if that is
also needed.
Each administrative ECL contains a flag indicating
whether or not client ECLs based on it can be changed by
the user. Users who are not expected to run active content
from sources not listed on their administrative ECL can
have this flag set. If they receive malicious active content
from an untrusted source, it will not be executed. If they
receive useful active content from a source that they'd like
to trust, they have to request that their administrator make
the change to their administrative ECL.
The Notes 6 client logs ECL information, including any
ECL alerts displayed to the user (and the user's choice of
action) and any changes to the ECL. Figure 7 contains
some example messages. Administrators can harvest this
information to see what changes are necessary to make to
the administrative ECLs, to gather information about users'
behavior and to troubleshoot potential issues. Notes 6 also
includes a new Multi-User feature that makes using Notes
from multiple machines (such as home and work, or a
laptop) a much more consistent experience. The users'
personal changes to their configuration information, such
as ECLs, is replicated for them from their client machine
to their home servers. These changes are then replicated
back down to the user's client when the user accesses the
server
installation.
different
client
from
a
01/09/2002 12:01:47 AM ECL Modification: CN=Lotus Notes Template Development/O=Lotus Notes
was granted the right: Access to current database.(Using Workstation)
01/09/2002 12:01:47 AM ECL Alert Result: Code signed by CN=Lotus Notes Template
Development/O=Lotus Notes was allowed to execute with the right: Access to current database.
01/09/2002 12:01:47 AM ECL Alert Details: DB Title: CDB, DB Path:
c:\Lotus\Notes\Data\mail\cbassett.nsf, Design Note Type: Form, Design Note Title: Memo; Memo, Design
Note ID: 2DE, ESA Description: NotesDatabase.GetProfileDocument Signature Status: No error.
Figure 7: Client ECL log
In addition to the features added to make ECLs more
manageable and minimize the user interactions with them,
several informational and design changes were made that
make ECLs more usable. Figure 8 shows the Notes 6
layout of an execution security alert. Additional
text
explains the reason for the alert. The signer's identity is
more prominent. The options are worded in a way that is
easier to understand. It avoids the use of the term "Abort",
which one test subject said sounded quite unpleasant; not
like protection at all. The power user is given a "More
Info" button. It provides extra information that is useful in
the case of behavior that is suspected to be a bug.
Sometimes
the features
that are missing are as
important as those that are present. Years ago, Lotus Notes
had the ability to tunnel its rich mail format over the
Internet when it knew the recipient was capable of
processing it
(by encapsulating and decapsulating at
gateways). This feature was removed to prevent the more
dangerous forms of active content attacks coming from
outside. While it would be desirable to restore that
functionality, this study provides evidence that it is not yet
safe to do so.
6. Related Work
We are not aware of any other work that studies or
evaluates the usability of active content security features.
Alma Whitten's bibliography on human factors in
computer security [4] lists a number of references in the
field. Just as our work evaluates how usable Notes ECLs
are, [6] evaluates the usability of PGP encryption. It
performs a case study of PGP 5.0 to determine whether it
could be used by cryptography novices to achieve effective
electronic mail security. A cognitive walkthrough analysis
found a number of flaws, and laboratory user tests showed
that the majority of subjects could not sign and encrypt a
message in 90 minutes. The tests in [6] are more controlled
and will therefore be easier to compare to other controlled
tests. Our work is a field study, providing richness of
feedback, but lacking the same level of control.
[8] applied user-centered design principles [7] to an
authorization service for distributed systems. Contextual
usability testing provided a rich picture of a security
administrator's job. Formal usability testing provided
direction on simplifying some features and making others
more self-explanatory. Our work is closer to contextual
usability than formal usability studies, since it occurred in
the field, not in the lab. It does not provide the same
concentrated detail that contextual interviews provide, but
it does provide information over a much broader
population than formal, structured lab usability testing.
choice
[1]
look at
[1] and [5]
and management.
the socio-technical system of
password
provides
suggestions for how to better inform users about password
the persuasive power of
security, while [5]
mechanisms, policies,
training and discourse.
Some of our observed user reactions give indications about
the socio-technical system of active content security, and
may be useful in indicating future directions for study.
looks at
tutorials,
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
Figure 8: Notes 6 Execution Security Alert
The Notes ECL features we tested can be compared to
the features in browsers to control the execution of active
content. With version 5.5 of IE and continued in version 6,
it is possible to designate active content sources, web sites,
into several security zones. There are currently four of
those; Internet, Local intranet, Trusted sites, and Restricted
Sites. Security for each of these zones can be configured to
one of the four templates, called High, Medium, Medium-
low, or Low, or it can be customized in detail, starting with
one of these templates. IE allows the user to configure
whether to disable, enable, or prompt on the downloading
of signed and unsigned ActiveX controls, as well as
running ActiveX controls and plug in, and scripting
ActiveX controls (marked safe or not marked safe). There
are no finer grained permissions based on operation within
these categories. It also allows the user to configure
whether
to enable, disable, or prompt when running
unsigned or signed Java content, with a fine grained
permission list based on Java 2. The Local Intranet zone
defaults to Medium-low, which is the same as Medium
without prompts. The prompts for code that cannot be
signed lack the feature of allowing the user to change the
behavior or zone for a site in the context of receiving the
prompt (through that dialog). In addition, when a site has
panes from multiple sources, it is difficult or impossible to
determine the source of the script from the prompt. Users
can choose to trust new publisher certificates in context,
and revoke that trust later. They cannot chose to revoke the
trust in certificates that are shipped trusted by IE. The
Trusted zone is convenient for adding sites the user
commonly visits and is familiar with. Some sites are not
usable without allowing active content to run, so the user
must trust them in order to use them. The Restricted zone
takes some attention from the user to make use of. To
minimize annoying prompts, regularly visited sites or ad
sites that don't need active content to provide the features
of interest to the user can be placed here. It is not clear
how an administrator would configure the defaults for their
site.
Netscape Communicator 4.73 allows
the simpler
options of enabling or disabling Java or Javascript.
7. Future Work and Conclusions
One area for
future work is consideration of
the
appropriate granularity of permissions for what types of
signed active content can be run. One "yes" should not
finer
give
away everything forever. However,
the
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
granularity is more confusing to users, and gives them less
context and information to base a decision on. We believe
that a two tiered level of granularity, similar to Domino
ACL access levels and discrete permissions within those
levels, would provide a starting point. Large grained levels
such as "ability to read anything I can read" would make
sense to many users. Allowing sites to customize the
permissions within levels, or even define new levels, can
provide administrators with desirable control, and users
with still more meaningful granularity.
it
Since the study was a field study and not a controlled
study,
raises a number of questions about what
conditions affect the process of users deciding on their
course of action when faced with a security-related choice.
How would the results have differed if the users had not
been warned of the problem several months in advance?
How would the results have differed if the majority of the
users were encountering the security choice for the first
time? How would the results have differed after an actual
outbreak of malicious active content from the same source
application as the one we tested? A more scientific study
could also vary how dire the warnings were. If the
warnings got more and more dire, would users become
concerned at a certain stage and choose not to execute
potentially dangerous active content? Or would the
warnings have to be extremely dire immediately to cause
users concern? There seems to be very little work on
allowing users to recover from a wrong decision. What
effect would such features have, both on user actions and
on the resulting security of the system? Studies involving
multiple companies and different interfaces would also add
a great deal of information to this area.
More research is needed in shielding users from having
to make security-related decisions while still providing
them with rich and flexible features. The Web-based client
for Domino mail and calendaring, iNotes Web Access,
filters and strips potentially harmful active content on the
server side. Extensions to that might report the filtered
active content to an operator, allowing the operator to
vouch for it. User choices could be more constrained in
more potentially dangerous
situations. For example,
Execution Security Alerts could be configured to not allow
the user to execute the action if there is no signature
information available, or if the signature is from a name
not listed on the ECL or from a foreign domain (or from a
domain not on a list of trusted domains).
The study occurred during the period of time when a
product that was being shipped was changing its defaults
on controlling active content from open to secured. When
we enabled secure defaults in the development group at
IBM, we initially found that some features placed in the
product by groups other than the security group caused
deployment problems for
the secured active content
default. Once all developers and testers were running with
secured defaults, problems that arose between newly-
developed features and secured configurations were found
earlier and by the developers making the changes (who
were in the best position to fix those problems). This
argues for some stage of all development activities
proceeding with the most tightly-secured configurations.
In this paper we detailed the features currently shipping
and soon to be shipping in Lotus Notes that are used to
protect users from potentially harmful active content in
Notes databases (including their email database). We
described the features available to administrators
to
configure user's active content
the
security settings,
features available to users to view and modify them, and
the interactions users are faced with when untrusted active
content attempts to execute in their Notes client.
Our study shows that the majority of the users involved
will take an explicit and straightforward one-time action to
secure their electronic work environment when requested
to, and directed by, a trustworthy colleague. When their
work flow is interrupted with a security dialog, just under
half of that same user population will make a choice that is
unsafe, even after being instructed in the safe course of
action 3 months earlier by the same trustworthy colleague.
The study makes it clear that the common software
practice of warning users of danger but letting them click
on something to proceed anyway is not going to provide
adequate security unless the either the user community or
security-related interfaces undergo some radical
sea
change. This change may include education, or better and
more pertinent information from the software. The more
frequently security warnings appear in everyday use, the
more users will learn to click "OK" without thinking or
even remembering that they have done so. False alarms
should be treated as serious security vulnerabilities instead
of acceptable irritants. Until we are able to write software
applications that can better tell the difference between safe
and unsafe,
taking the "safe" option should be made
routine by both the culture and the software, and taking the
"unsafe" option should be audited and reviewed.
8. Acknowledgements
This study would not have been possible without the
time, skills, and experience of Chuck Bassett, and without
the support of management in SoftwareHouse. We also
thank Amy Smith for her editorial assistance.
9. References
[1] Anne Adams and Martina Angela Sasse. Users Are
compromise security
remedial measures.
the ACM, 42 (12), pp. 40-46
Not The Enemy: Why users
mechanisms
Communications
December 1999.
and how to take
of
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply. 
[2] CNET, Gates memo: "We can and must do better".
http://news.com.com/2009-1001-817210.html?legacy=cnet
[3] Amy E. Smith (with Charlie Kaufman, Chuck
Bassett and Mary Ellen Zurko). Staying Alert with
Execution
Lists.
http://notes.net/today.nsf/f01245ebfc115aaf8525661a006b
86b9/3a9da544637a69b2852568310078b649?OpenDocum
ent.
Control
[4] Whitten, Alma. References for Human Factors in
Security.
Computer
http://www.sims.berkeley.edu/~alma/biblio.html.
[5] Dirk Weirich and Martina Angela Sasse. Pretty
Good Persuasion: A First Step towards Effective Password
Security in the Real World. Proceedings of New Security
Paradigms Workshop, September 2001.
[6] Alma Whitten and J.D. Tygar, Why Johnny Can't
Encrypt: A Usability Evaluation of PGP 5.0. Proceedings
of the 8th USENIX Security Symposium, August 1999.
[7] Mary Ellen Zurko and Richard T. Simon, User-
Centered Security. New Security Paradigms Workshop,
1996.
[8] Mary Ellen Zurko, Richard T. Simon and Tom
Sanfilippo, A User-Centered, Modular Authorization
Service Built on an RBAC Foundation. Proceedings of
IEEE
1999.
Security
and
Privacy,
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:13:27 UTC from IEEE Xplore.  Restrictions apply.