### Tractable Policy and ECL Management

ECLs (Execution Control Lists) can be kept up to date with a single entry, such as "*/Signers/SoftwareHouse". Developers with the necessary skills to sign code can easily switch between their personal identity and a trusted signing identity to re-sign the final version before sharing it. This can be done using the "Switch ID" menu command in Notes, which allows them to authenticate against a second ID file. Additionally, they can use the "Change Location" feature to update their email address if needed.

Each administrative ECL includes a flag that determines whether client ECLs based on it can be modified by the user. For users who are not expected to run active content from unlisted sources, this flag can be set to prevent changes. If these users receive malicious active content from an untrusted source, it will not execute. However, if they receive useful content from a new, trusted source, they must request that their administrator update their administrative ECL.

### Logging and Multi-User Features

The Notes 6 client logs ECL information, including any alerts displayed to the user and the user's actions, as well as any ECL changes. Figure 7 provides example log messages. Administrators can use this information to make necessary updates to the administrative ECLs, gather data on user behavior, and troubleshoot issues. Notes 6 also introduces a Multi-User feature, which ensures a consistent experience when using Notes from multiple devices, such as home and work computers or a laptop. Personal configuration changes, including ECLs, are replicated from the client machine to the home server and then back to the client when the user accesses the server from a different device.

**Example Log Entries:**
- **01/09/2002 12:01:47 AM ECL Modification:** CN=Lotus Notes Template Development/O=Lotus Notes was granted the right: Access to current database. (Using Workstation)
- **01/09/2002 12:01:47 AM ECL Alert Result:** Code signed by CN=Lotus Notes Template Development/O=Lotus Notes was allowed to execute with the right: Access to current database.
- **01/09/2002 12:01:47 AM ECL Alert Details:** DB Title: CDB, DB Path: c:\Lotus\Notes\Data\mail\cbassett.nsf, Design Note Type: Form, Design Note Title: Memo; Memo, Design Note ID: 2DE, ESA Description: NotesDatabase.GetProfileDocument Signature Status: No error.

### Usability Enhancements

In addition to making ECLs more manageable and reducing user interactions, several informational and design changes have been implemented to improve usability. Figure 8 illustrates the layout of an execution security alert in Notes 6, which now includes additional text explaining the reason for the alert. The signer's identity is more prominently displayed, and the options are worded in a more understandable manner. The term "Abort" has been replaced with more user-friendly language. A "More Info" button is provided for power users, offering extra details useful for identifying potential bugs.

### Historical Context and Security Considerations

Years ago, Lotus Notes had the capability to tunnel its rich mail format over the Internet when the recipient could process it. This feature was removed to prevent attacks from external sources. While restoring this functionality would be desirable, this study suggests that it is not yet safe to do so.

### Related Work

To our knowledge, there is no other work that specifically studies the usability of active content security features. Alma Whitten's bibliography [4] lists several references in the field. Similar to our evaluation of Notes ECLs, [6] evaluates the usability of PGP encryption. It conducted a case study of PGP 5.0 to determine if cryptography novices could achieve effective electronic mail security. Cognitive walkthroughs and laboratory tests revealed significant flaws, with most subjects unable to sign and encrypt a message within 90 minutes. Our work, being a field study, provides rich feedback but lacks the same level of control as controlled tests.

[8] applied user-centered design principles to an authorization service for distributed systems. Contextual usability testing provided insights into a security administrator's job, while formal usability testing guided the simplification of features. Our work is closer to contextual usability, providing broader population insights compared to structured lab testing.

[1] and [5] look at the socio-technical system of password management and provide suggestions for better informing users about password security and the persuasive power of training and discourse. Some of our observations may indicate future directions for studying the socio-technical system of active content security.

### Comparison with Browser Security Features

Notes ECL features can be compared to browser features for controlling active content. In Internet Explorer (IE) versions 5.5 and 6, active content sources can be designated into four security zones: Internet, Local Intranet, Trusted Sites, and Restricted Sites. Each zone can be configured with one of four security templates (High, Medium, Medium-Low, Low) or customized. IE allows users to configure the downloading and running of signed and unsigned ActiveX controls and Java content. However, IE lacks the ability to change the behavior or zone for a site in the context of receiving a prompt. Users can trust new publisher certificates in context but cannot revoke trust in pre-trusted certificates. Netscape Communicator 4.73 offers simpler options for enabling or disabling Java and JavaScript.

### Future Work and Conclusions

Future work should consider the appropriate granularity of permissions for signed active content. A two-tiered level of granularity, similar to Domino ACL access levels, might provide a good starting point. Large-grained levels, such as "ability to read anything I can read," would be more intuitive for users. Customizable permissions within levels or the ability to define new levels could offer administrators more control and users more meaningful granularity.

Since this was a field study, it raises questions about the conditions affecting users' decision-making processes in security-related choices. Further research is needed to shield users from making security decisions while still providing rich and flexible features. For example, Execution Security Alerts could be configured to prevent execution if no signature information is available or if the signature is from an untrusted domain.

Our study shows that most users will take a one-time action to secure their environment when directed by a trustworthy colleague. However, when interrupted by a security dialog, nearly half of the same user population will make an unsafe choice, even after being instructed in the safe course of action. This highlights the need for a radical change in either user education or software interfaces. Until software can better differentiate between safe and unsafe actions, taking the "safe" option should be made routine, and "unsafe" actions should be audited and reviewed.

### Acknowledgements

This study would not have been possible without the time, skills, and experience of Chuck Bassett and the support of management in SoftwareHouse. We also thank Amy Smith for her editorial assistance.

### References

1. Anne Adams and Martina Angela Sasse. "Users Are Not The Enemy: Why users compromise security mechanisms and how to take remedial measures." Communications of the ACM, 42 (12), pp. 40-46, December 1999.
2. CNET, Gates memo: "We can and must do better." http://news.com.com/2009-1001-817210.html?legacy=cnet
3. Amy E. Smith (with Charlie Kaufman, Chuck Bassett and Mary Ellen Zurko). "Staying Alert with Execution Control Lists." http://notes.net/today.nsf/f01245ebfc115aaf8525661a006b86b9/3a9da544637a69b2852568310078b649?OpenDocument
4. Whitten, Alma. "References for Human Factors in Computer Security." http://www.sims.berkeley.edu/~alma/biblio.html
5. Dirk Weirich and Martina Angela Sasse. "Pretty Good Persuasion: A First Step towards Effective Password Security in the Real World." Proceedings of New Security Paradigms Workshop, September 2001.
6. Alma Whitten and J.D. Tygar. "Why Johnny Can't Encrypt: A Usability Evaluation of PGP 5.0." Proceedings of the 8th USENIX Security Symposium, August 1999.
7. Mary Ellen Zurko and Richard T. Simon, "User-Centered Security." New Security Paradigms Workshop, 1996.
8. Mary Ellen Zurko, Richard T. Simon, and Tom Sanfilippo. "A User-Centered, Modular Authorization Service Built on an RBAC Foundation." Proceedings of IEEE Security and Privacy, 1999.