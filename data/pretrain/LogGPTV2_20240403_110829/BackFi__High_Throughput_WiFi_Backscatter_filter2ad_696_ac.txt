dBm. The design has an envelope detector, a peak ﬁnder, a
set-threshold circuit and a comparator. The envelope detec-
tor removes the 2.4 GHz carrier frequency from the received
signal and the peak detector detects and holds the peak am-
plitude of the received signal after envelope detection. The
set-threshold circuit obtains the output of the peak detector
and outputs half the amplitude as the threshold. Finally the
comparator compares the signal after the output of the enve-
lope detector with the threshold and outputs one bit when-
ever the received signal is greater than the threshold value
and a zero bit otherwise. The comparator outputs a bit de-
cision every microsecond, corresponding to the bit period in
the preamble. Finally digital logic on the BackFi tag cor-
relates the detected 16-bit long sequence over sliding win-
dows with the known preamble associated with that tag, and
if there is a match it activates the rest of the backscatter cir-
cuitry to begin modulation of its data.
Figure 2: Architecture of the tag used in BackFi: Once the tag
senses the WiFi excitation signal from the reader, it wakes up the
modulation subsystem. The tag then reads the data to be uploaded
and modulates it on the excitation signal by selecting discrete phase
using the Backscatter Phase Modulator.
How does the tag modulate its data?
Fig. 4 shows the various timing events and packet format
used by the BackFi tag. We will describe their functionality
in detail later in this section, here we give a brief overview.
Once the excitation energy is detected and the reader is iden-
tiﬁed (which lasts 16 µs), the tag goes into a silent period
that lasts for another 16 µs. During this time the tag will sup-
press any backscatter transmission, which allows the reader
to estimate the channels needed for self-interference can-
cellation as described in Sec. 4.2. After that the tag trans-
mits its own preamble sequence for 32 µs that is known
at the BackFi reader. Using this sequence the reader can
estimate the channels it needs for decoding the backscatter
data. This sequence is a pseudo random with very high auto-
correlation, and is used by the reader to ﬁnd the symbol tim-
ing from the tag.
The tag then sends its data payload by phase modulating
the received signal. Speciﬁcally, let’s say the tag is using
QPSK modulation, hence there are four symbols [ejθ1, ejθ2,
ejθ3, ejθ4] in the constellation map separated by 90 degrees
on which two bits of information can be modulated. The tag
reads the data that needs to be transmitted, picks out two bits
at a time, maps it to the appropriate QPSK symbol and then
multiples the received excitation signal from the WiFi trans-
mitter with the corresponding phase signal, ejθi, i = 1 . . . 4
to modulate the data on to the WiFi signal. The speciﬁc cir-
cuit by which the phase modulation signal ejθi is generated
is a well studied problem and has been widely used in RFID
Tag Data MemoryChannel EncoderBackscatter Phase ModulatorEnable ModulationRF SplitterRaw Tag DataEncoded bitsPhase Modulation UnitDigital Data PathDigital Control PathRF Signal PathWiFi Excitation Signal from ReaderModulated Backscatter SignalRF Energy Detection and Identification unitRF Energy DetectorReader IdentificationUnitEnergy Detected287Figure 3: Structure of the backscatter phase modulator used in the
tag of BackFi: The four digital signal can be used to select one of
the 16 possible phases at the leaf of the tree. The incoming RF
signal traverses from the top input port all the way to the selected
leaf node and is reﬂected back from the short circuited terminals to
the input RF port.
tags [49]. Fig. 3 shows the detail of the RF phase modulator
we use in the BackFi tag.
The phase modulator consists of several RF Single Pole
Double Throw (SPDT) switches that are connected in a bi-
nary tree structure. These switches can pass incoming RF
signal to one of the two ports. These switches can be con-
trolled using digital signals and the tag uses the data to be
modulated as the control signal for these switches. At the
leaf of the switch tree, different lengths of RF traces are
connected. These trace lengths are designed speciﬁcally to
achieve the discrete phase shift required for the supported
constellation. The number of SPDT switches is determined
by the number of constellation points that are supported. For
example, for BPSK only one switch is needed, for QPSK
three switches are needed and for 16-PSK 15 switches are
needed. Also, if the tag can support higher modulations,
then all the lower modulations can also be supported. For
example, the design in Fig. 3 can support 16-PSK, QPSK,
and BPSK, by appropriately preventing some of the switches
from toggling as shown in the ﬁgure.
To improve the performance of the link the tag also em-
ploys simple channel encoding using convolutional codes.
The convolutional codes are powerful error correcting codes
yet their encoders are very easy to implement using few stan-
dard digital components which incurs small energy penalty
on the tag. For example, a rate 1
2 convolutional encoders
with constraint length of 7, will require 6 shift registers and
8 XOR gates.
Tag Symbol Rate: The BackFi tag also has a choice on
the rate at which it will generate the phase modulation sym-
bols by controlling the switching frequencies on the SPDT
switches. The trade-off here is that higher frequencies con-
sume more power and energy, hence the actual rate to use
is a function of how much energy is available either via bat-
teries or harvesting. In BackFi tags, this is a conﬁgurable
parameter ranging from 0.01 megasymbols/second (MSPS)
to 2.5 MSPS.
Next, the BackFi AP after receiving the phase modulated,
backscattered signal proceeds to decode the tag’s data. As
discussed in the previous section, the two key challenges
Figure 4: The BackFi AP ﬁrst sends out the CTS-to-SELF to force
other WiFi into silent mode. It then sends out the energy detection
and identiﬁcation data to its backscatter client. Once the WiFi ex-
citation signal is received by the tag, it goes through sequence of
operations shown above before modulating its data on the excita-
tion signal. The excitation signal is in fact a WiFi packet meant for
a regular WiFi client which receives and decodes the WiFi packet
without ever noticing the presence of the backscatter communica-
tion that is happening simultaneously.
here are wideband self-interference cancellation and time-
varying decoding. We describe how BackFi addresses these
challenges next. Note that the channel model of the signal
received back at the reader with BackFi is exactly the same
as standard RFID backscatter and has been derived in Eq. 3,
the only difference of course is that x(t) is the WiFi OFDM
signal instead of a tone.
4.2 Self-Interference Cancellation
Like conventional RFID systems, the tag’s backscatter sig-
nal in BackFi is buried under strong self-interference. This
interference stems from two sources: direct leakage from the
AP’s transmit chain to the receive chain and from reﬂections
of the WiFi transmission by non-tag objects in the environ-
ment. But unlike the single tone excitation signal in RFID,
BackFi’s excitation signal is a wideband WiFi OFDM sig-
nal. Because of the wideband nature, scaling the excitation
signal by a single attenuation and phase shift is not sufﬁcient
to model the self-interference. This is because different fre-
quency components of the WiFi signal add constructively
or destructively due to the multi-path effect which results
in frequency dependent scaling and phase shifts. However,
this problem has been studied extensively in recent years
for designing full-duplex radios [12] where self-interference
needs to be suppressed to be able to simultaneously listen
to weak signals that are being received. The difference in
BackFi from those scenarios is that the backscatter signal
(which corresponds to the weak signal we want to receive)
is a modiﬁed version of the transmitted signal, whereas in
standard full duplex that is a completely independent signal
originating from another sender. So BackFi leverages the
recent work on full duplex, but modiﬁes it appropriately to
handle the fact that backscatter signals are highly correlated
with the self-interference signal.
We brieﬂy review the design of self-interference cancella-
tion systems for completeness, but refer the reader to prior
work [12] for a complete description. Self-interference can-
cellation systems ﬁrst estimate the channel henv(t) that the
leaked and reﬂected signal have gone through before reach-
ing back at the receiver. This estimated channel distortion
RF signal from and to antenna......SPDTSPDTSPDTSPDTSPDTSPDTShorted RF terminals with transmission lines of different lengthsSPDTSPDTSPDT...Digital Data16PSK 1je2jeQPSK BPSK 3je4je14je13je15je16jeSilent ModePreamble & Synchronization Tag Data Modulation16µs32µsCTS-to-SELFDetection & IdentificationEnergy detected by the tag and the reader AP is identifiedTag goes into silent mode during which reader estimates environmental contributionsTag modulates with a known preamble which the reader uses to estimate forward backward channel and to find symbol boundaryTag modulates the payload data16µsTimeline of various events at the reader and its backscatter clientExcitation signal / WiFi packet288there is no backscatter during the channel estimation phase,
self-interference cancellation does not model the backscatter
reﬂections and therefore they are not affected by cancella-
tion.
At this stage, the reader/AP is left with just the non-linear
backscatter reﬂection from the tag, and its goal is to decode
the data. We describe this step next.
4.3 Decoder Design of BackFi
As reviewed before, since the WiFi signal x(t) is wide-
band, the excitation signal received at the tag z(t) = x(t) ∗
hf (t) cannot be considered as simple scaled and phase shifted
version of x(t) as with standard RFIDs. Hence after the
removal of the self-interference, the residual signal at the
reader after down-conversion to baseband is given by
(x(t) ∗ hf (t))ejθ(t)(cid:105) ∗ hb(t)
(cid:104)
(cid:124)
(cid:125)
(cid:123)(cid:122)
tag signal
ytag(t) =
.
(4)
Here, the signal x(t) is the WiFi transmission that the
reader is sending. This signal is wideband and varying but
known to the reader. The channels hf and hb are the forward
and the backward channels. These channels can be consid-
ered time invariant for the duration of the tag packet but are
unknown. The goal is of course to recover the tag signal
ejθ(t) from the above equation. This is challenging because
the tag signal is being modiﬁed by a time varying unknown
channel, namely x(t) ∗ hf (t). Contrast this with standard
RFID decoding at the reader in Eq. 2, where the tag sig-
nal is being modiﬁed by a time-invariant channel since both
hf (t) and hb(t) are time-invariant for the duration of the tag
packet. We describe how BackFi tackles this time-varying
decoding problem next.
4.3.1 Estimating the forward/backward channels
First, the BackFi AP estimates the forward and backward
channels, hf (t) and hb(t). We can assume these channels to
be time invariant for the duration of the tag packet, hence to
estimate them we use a standard communication technique:
a preamble. Speciﬁcally, after the tag detects that it should
backscatter and stays quiet for the silent period, it modulates
a constant phase ejθpre on the backscatter signal for a ﬁxed
period of 32µS. Thus during the preamble interval the re-
ceived tag signal at the reader is given by
ypre(t) = x(t) ∗ [hf (t) ∗ hb(t)] .
Now since x(t) is known, this becomes a standard chan-
nel estimation problem encountered in every communication
system. We omit the details of the channel estimation tech-
nique and refer the reader to the vast amount of literature
on this topic [38]. The channel estimation algorithm thus
calculates the value of hf (t) ∗ hb(t).
Note that the above procedure only provides an estimate
of the combined forward-backward channel, but not the in-
dividual channels. Hence the decoding step has to work only
with the combined channel estimate.
Figure 5: Architecture of the reader used in BackFi: The reader
transmits the excitation signal x which is actually a WiFi packet
meant for a client. This signal is reﬂected by the environment,
which the reader cancels using cancellation ﬁlter. The residual sig-
nal after cancellation is used to estimate the forward and backward
channel from and to the tag. The reader then applies MRC to esti-
mate the tag data ˆθ, which is further improved by passing it through
Viterbi decoder.
is applied to a copy of the transmitted WiFi signal to recre-
ate the self-interference accurately, and the distorted signal
is then subtracted from the received signal to eliminate self-
interference. The distortion application and subtraction hap-
pens in two stages, analog and digital. Analog cancellation
is necessary to ensure that the receiver’s ADC is not satu-
rated by self-interference which would drown out the weak
backscatter signal before being received in baseband. Ana-
log cancellation is implemented using a combination of RF
FIR ﬁlters and couplers [12], but cannot completely elimi-
nate self-interference due to the imprecision of analog com-
ponents. Hence a second digital cancellation stage is em-
ployed after the signal is sampled by the receiver’s ADC to
eliminate the residual self-interference. Digital cancellation
is implemented via digital FIR ﬁlters. Fig. 5 shows the de-
sign.
If we directly apply the prior design, it will end up can-
celing parts of the backscatter signal too. The reason is
that prior design aims to accurately estimate the non-linear
transfer function that captures the relationship between the
transmitted signal and the received signal [12]. But as we
have shown in the previous section, the backscatter signal is
actually a non-linear transformation of the transmitted sig-
nal. If naively applied, prior designs would end up canceling
the backscatter signal too which would reduce the SNR and
throughput of tag’s transmissions back to the reader.
To tackle this, BackFi’s link layer design ensures that dur-
ing the channel estimation phase of self-interference can-
cellation, there is no backscatter transmission. Speciﬁcally,
when a BackFi tag is excited by a WiFi transmission, they do
not instantly start backscatter. Instead they employ a silent
period of 16 µs as shown in Fig. 4, during which they do
not backscatter, and only then start modulating their data on