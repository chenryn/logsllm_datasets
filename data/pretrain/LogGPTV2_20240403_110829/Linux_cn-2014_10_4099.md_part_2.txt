```
#### 找出监听端口
找出正等候连接的端口。
```
# lsof -i -sTCP:LISTEN
```
你也可以grep “LISTEN”来完成该任务。
```
# lsof -i | grep -i LISTEN
iTunes     400 daniel   16u  IPv4 0x4575228  0t0 TCP *:daap (LISTEN)
```
#### 找出已建立的连接
你也可以显示任何已经连接的连接。
```
# lsof -i -sTCP:ESTABLISHED
```
你也可以通过grep搜索“ESTABLISHED”来完成该任务。
```
# lsof -i | grep -i ESTABLISHED
firefox-b 169 daniel  49u IPv4 0t0 TCP 1.2.3.3:1863->1.2.3.4:http (ESTABLISHED)
```
### 用户信息
你也可以获取各种用户的信息，以及它们在系统上正干着的事情，包括它们的网络活动、对文件的操作等。
#### 使用-u显示指定用户打开了什么
```
# lsof -u daniel
-- snipped --
Dock 155 daniel  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib
Dock 155 daniel  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib
Dock 155 daniel  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib
Dock 155 daniel  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib
Dock 155 daniel  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib
-- snipped --
```
#### 使用-u  user来显示除指定用户以外的其它所有用户所做的事情
```
# lsof -u ^daniel
-- snipped --
Dock 155 jim  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib
Dock 155 jim  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib
Dock 155 jim  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib
Dock 155 jim  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib
Dock 155 jim  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib
-- snipped --
```
#### 杀死指定用户所做的一切事情
可以消灭指定用户运行的所有东西，这真不错。
```
# kill -9 `lsof -t -u daniel`
```
### 命令和进程
可以查看指定程序或进程由什么启动，这通常会很有用，而你可以使用lsof通过名称或进程ID过滤来完成这个任务。下面列出了一些选项：
#### 使用-c查看指定的命令正在使用的文件和网络连接
```
# lsof -c syslog-ng
COMMAND    PID USER   FD   TYPE     DEVICE    SIZE       NODE NAME
syslog-ng 7547 root  cwd    DIR    3,3    4096   2 /
syslog-ng 7547 root  rtd    DIR    3,3    4096   2 /
syslog-ng 7547 root  txt    REG    3,3  113524  1064970 /usr/sbin/syslog-ng
-- snipped --
```
#### 使用-p查看指定进程ID已打开的内容
```
# lsof -p 10075
-- snipped --
sshd    10068 root  mem    REG    3,3   34808 850407 /lib/libnss_files-2.4.so
sshd    10068 root  mem    REG    3,3   34924 850409 /lib/libnss_nis-2.4.so
sshd    10068 root  mem    REG    3,3   26596 850405 /lib/libnss_compat-2.4.so
sshd    10068 root  mem    REG    3,3  200152 509940 /usr/lib/libssl.so.0.9.7
sshd    10068 root  mem    REG    3,3   46216 510014 /usr/lib/liblber-2.3
sshd    10068 root  mem    REG    3,3   59868 850413 /lib/libresolv-2.4.so
sshd    10068 root  mem    REG    3,3 1197180 850396 /lib/libc-2.4.so
sshd    10068 root  mem    REG    3,3   22168 850398 /lib/libcrypt-2.4.so
sshd    10068 root  mem    REG    3,3   72784 850404 /lib/libnsl-2.4.so
sshd    10068 root  mem    REG    3,3   70632 850417 /lib/libz.so.1.2.3
sshd    10068 root  mem    REG    3,3    9992 850416 /lib/libutil-2.4.so
-- snipped --
```
#### -t选项只返回PID
```
# lsof -t -c Mail
350
```
### 文件和目录
通过查看指定文件或目录，你可以看到系统上所有正与其交互的资源——包括用户、进程等。
#### 显示与指定目录交互的所有一切
```
# lsof /var/log/messages/
COMMAND    PID USER   FD   TYPE DEVICE   SIZE   NODE NAME
syslog-ng 7547 root    4w   REG    3,3 217309 834024 /var/log/messages
```
### 显示与指定文件交互的所有一切
```
# lsof /home/daniel/firewall_whitelist.txt
```
### 高级用法
与[tcpdump](http://danielmiessler.com/study/tcpdump/)类似，当你开始组合查询时，它就显示了它强大的功能。
#### 显示daniel连接到1.1.1.1所做的一切
```
# lsof -u daniel -i @1.1.1.1
bkdr   1893 daniel 3u  IPv6 3456 TCP 10.10.1.10:1234->1.1.1.1:31337 (ESTABLISHED)
```
#### 同时使用-t和-c选项以给进程发送 HUP 信号
```
# kill -HUP `lsof -t -c sshd`
```
#### lsof +L1显示所有打开的链接数小于1的文件
这通常（当不总是）表示某个攻击者正尝试通过删除文件入口来隐藏文件内容。
```
# lsof +L1
(hopefully nothing)
```
#### 显示某个端口范围的打开的连接
```
# lsof -i @fw.google.com:2150=2180
```
### 结尾
本入门教程只是管窥了lsof功能的一斑，要查看完整参考，运行man lsof命令或查看[在线版本](http://www.netadmintools.com/html/lsof.man.html)。希望本文对你有所助益，也随时[欢迎你的评论和指正](http://danielmiessler.com/connect/)。
### 资源
* lsof手册页：
本文由 Daniel Miessler撰写，首次在他[博客](http://danielmiessler.com/study/lsof/)上贴出
---
via: 
作者：[Daniel Miessler](https://plus.google.com/101727609700016666852/posts?rel=author) 译者：[GOLinux](https://github.com/GOLinux) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出