title:Stateful Intrusion Detection for High-Speed Networks
author:Christopher Kr&quot;ugel and
Fredrik Valeur and
Giovanni Vigna and
Richard A. Kemmerer
Stateful Intrusion Detection for High-Speed Networks
Christopher Kruegel
Fredrik Valeur
Giovanni Vigna
Richard Kemmerer
Reliable Software Group
University California, Santa Barbara
fkruegel,fredrik,vigna,PI:EMAIL
Abstract
As networks become faster there is an emerging need for
security analysis techniques that can keep up with the in-
creased network throughput. Existing network-based intru-
sion detection sensors can barely keep up with bandwidths
of a few hundred Mbps. Analysis tools that can deal with
higher throughput are unable to maintain state between dif-
ferent steps of an attack or they are limited to the analysis
of packet headers. We propose a partitioning approach to
network security analysis that supports in-depth, stateful in-
trusion detection on high-speed links. The approach is cen-
tered around a slicing mechanism that divides the overall
network trafﬁc into subsets of manageable size. The trafﬁc
partitioning is done so that a single slice contains all the ev-
idence necessary to detect a speciﬁc attack, making sensor-
to-sensor interactions unnecessary. This paper describes
the approach and presents a ﬁrst experimental evaluation
of its effectiveness.
Keywords: Intrusion Detection, High-Speed Networks, Se-
curity Analysis.
1 Introduction
Network-based intrusion detection systems (NIDSs) per-
form security analysis on packets obtained by eavesdrop-
ping on a network link. The constant increase in network
speed and throughput poses new challenges to these sys-
tems. Current network-based IDSs are barely capable of
real-time trafﬁc analysis on saturated Fast Ethernet links
(100 Mbps) [3]. As network technology presses forward,
Gigabit Ethernet (1000 Mbps) has become the de-facto
standard for large network installations. In order to protect
such installations, a novel approach for network-based in-
trusion detection is necessary to manage the ever-increasing
data volume.
Network speeds have increased faster than the speed of
processors, and therefore centralized solutions have reached
their limit. This is especially true if one considers in-depth,
stateful intrusion detection analysis. In this case, the sensors
have to maintain information about attacks in progress (e.g.,
in the case of multi-step attacks) or they have to perform
application-level analysis of the packet contents. These
tasks are resource intensive and in a single-node setup may
seriously interfere with the basic task of retrieving packets
from the wire.
To be able to perform in-depth, stateful analysis it is
necessary to divide the trafﬁc volume into smaller portions
that can be thoroughly analyzed by intrusion detection sen-
sors. This approach has often been advocated by the high-
performance research community as a way to distribute the
service load across many nodes. In contrast to the case for
standard load balancing, the division (or slicing) of the traf-
ﬁc for intrusion detection has to be performed in a way that
guarantees the detection of all the threat scenarios consid-
ered. If a random division of trafﬁc is used, sensors may not
receive sufﬁcient data to detect an intrusion, because differ-
ent parts of the manifestation of an attack may have been
assigned to different slices. Therefore, when an attack sce-
nario consists of a number of steps, the slicing mechanism
must assure that all of the packets that could trigger those
steps are sent to the sensor conﬁgured to detect that speciﬁc
attack.
This paper presents an approach to in-depth, stateful in-
trusion detection analysis and a tool based on this approach.
The approach allows for meaningful slicing of the network
trafﬁc into portions of manageable size. The slicing ap-
proach and a tool based on the approach are presented in
Section 3, after a discussion of related work in Section 2.
Section 4 presents the results of the quantitative evaluation
of the ﬁrst prototype of the tool. Section 5 presents some
ﬁnal remarks and outlines future research.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
2 Related Work
The possibility of performing network-based intrusion
detection on high-speed links (e.g., on OC-192 links) has
been the focus of much debate in the intrusion detection
community. A common position is to state that high-speed
network-based intrusion detection is not practical because
of the technical difﬁculties encountered in keeping pace
with the increasing network speed and the more widespread
use of encrypted trafﬁc. Others advocate locating highly
distributed network-based sensors at the periphery of com-
puter networks; the idea being that the trafﬁc load is, possi-
bly, more manageable there.
Even though both of the advocated approaches above
have good points, analysis of network trafﬁc on high-speed
links still represents a fundamental need in many practical
network installations. The commercial world attempted to
respond to this need and a number of vendors now claim
to have sensors that can operate on high-speed ATM or
Gigabit Ethernet links. For example, ISS [4] offers Net-
ICE Gigabit Sentry, a system that is designed to monitor
trafﬁc on high-speed links. The company advertises the
system as being capable of performing protocol reassem-
bly and analysis for several application-level protocols (e.g.
HTTP, SMTP, POP) to identify malicious activities. The
tool claims to be the “ﬁrst network-IDS that can handle full
Gigabit speeds.” However, the authors of the tool also state
that “GigaSentry handles a full Gigabit in lab conditions,
but real-world performance will likely be less. [. . . ] Cus-
tomers should expect at least 300 Mbps real-world perfor-
mance, and probably more depending up the nature of their
trafﬁc. [. . . ] GigaSentry can only capture slightly more than
500,000-packets/second.” These comments show the actual
difﬁculties of performing network-based intrusion detection
on high-speed links. Other IDS vendors (like Cisco [1])
offer comparable products with similar features. Unfortu-
nately, no experimental data gathered on real networks is
presented. TopLayer Networks [11] presents a switch that
keeps track of application-level sessions. The network traf-
ﬁc is split with regard to these sessions and forwarded to
several intrusion detection sensors. Packets that belong to
the same session are sent through the same link. This allows
sensors to detect multiple steps of an attack within a single
session. Unfortunately, the correlation of information be-
tween different sessions is not supported. This could result
in missed attacks when attacks are performed against mul-
tiple hosts (e.g., ping sweeps), or across multiple sessions.
Very few research papers have been published that deal
with the problem of intrusion detection on high-speed links.
Sekar et al. [10] describe an approach to perform high-
performance analysis of network data, but unfortunately
they do not provide experimental data based on live traf-
ﬁc analysis. Their claim of being able to perform real-time
intrusion detection at 500 Mbps is based on the processing
of off-line trafﬁc log ﬁles. This estimate is not indicative of
the real effectiveness of the system when operating on live
trafﬁc.
3 A Slicing Approach to High-Speed
Intrusion Detection
The problem of intrusion detection analysis in high-
speed networks can be effectively attacked only if a scal-
able solution is available. Let us consider the trafﬁc on the
monitored network link as a bi-directional stream of link-
layer frames (e.g., Ethernet frames). This stream contains
too much data to be processed in real-time by a centralized
entity and has to be divided into several smaller streams that
are fed into a number of different, distributed sensors. Each
sensor is only responsible for a subset of all detectable in-
trusion scenarios and can therefore manage to process the
incoming volume in real-time. Nevertheless, the division
into streams has to be done in a way that provides each sen-
sor with enough information to detect exactly the same at-
tacks that it would have witnessed when operating directly
on the network link.
3.1 Requirements
The overall goal is to perform stateful intrusion detection
analysis in high-speed networks. The approach presented
in this paper can be characterized by the following require-
ments.
(cid:15) The system implements a misuse detection approach
where signatures representing attack scenarios are
matched against a stream of network events.
(cid:15) Intrusion detection is performed by a set of sensors,
each of which is responsible for the detection of a sub-
set of the signatures.
(cid:15) Each sensor is autonomous and does not interact with
other sensors.
(cid:15) The system partitions the analyzed event stream into
slices of manageable size.
(cid:15) Each trafﬁc slice is analyzed by a subset of the intru-
sion detection sensors.
(cid:15) The system guarantees that the partitioning of trafﬁc
maintains detection of all the speciﬁed attack scenar-
ios. This implies that sensors, signatures, and trafﬁc
slices are conﬁgured so that each sensor has access to
the trafﬁc necessary to detect the signatures that have
been assigned to it.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
Outside
Internet
Switch
Reassemblers
ID Sensors
Slicers
Scatterer
Tap
Inside
Figure 1. High-level architecture of the high-speed intrusion detection system.
(cid:15) Components can be added to the system to achieve
higher throughput. More precisely,
the approach
should result in a scalable design where one can add
components as needed to match increased network
throughput.
3.2 System Architecture
The requirements listed in the previous section have been
used as the basis for the design of a network-based intrusion
detection system. The system consists of a network tap, a
trafﬁc scatterer, a set of  trafﬁc slicers S0; :::; S 1, a
switch, a set of  stream reassemblers R0; :::; R 1, and
a set of  intrusion detection sensors 0; :::;  1. A high-
level description of the architecture is shown in Figure 1.
The network tap component monitors the trafﬁc stream
on a high-speed link. Its task is to extract the sequence F
of link-layer frames hf0; f1; :::; fi that are observable on
the wire during a time period . This sequence of frames
is passed to the scatterer which partitions F into  sub-
sequences Fj : 0 (cid:20) j < . Each Fj contains a (possibly
empty) subset of the frame sequence F . Every frame fi is
an element of exactly one sub-sequence Fj and therefore
[j<
j=0 Fj = F . The scatterer can use any algorithm to parti-
tion F . Hereafter, it is assumed that the splitting algorithm
simply cycles over the  sub-sequences in a round-robin
fashion, assigning fi to Fi mod. As a result, each Fj
contains an -th of the total trafﬁc.
Each sub-sequence Fj is transmitted to a different traf-
ﬁc slicer Sj. The task of the trafﬁc slicers is to route the
frames they receive to the sensors that may need them to
detect an attack. This task is not performed by the scatterer,
because frame routing may be complex, requiring a sub-
stantial amount of time, while the scatterer has to keep up
with the high trafﬁc throughput and can only perform very
limited processing per frame.
The trafﬁc slicers are connected to a switch component,
which allows a slicer to send a frame to one or more of 
outgoing channels Ci. The set of frames sent to a channel
is denoted by F Ci. Each channel Ci is associated with a
stream reassembler component Ri and a number of intru-
sion detection sensors. The set of sensors associated with
channel Ci is denoted by Ci. All the sensors that are asso-
ciated with a channel are able to access all the packets sent
on that channel. The original order of two packets could
be lost if the two frames took different paths over distinct
slicers to the same channel. Therefore, the reassemblers
associated with each channel make sure that the packets ap-
pear on the channel in the same order that they appeared
on the high-speed link. That is, each reassembler Ri must
make sure that for each pair of frames fj ; fk 2 F Ci it holds
that (fj before fk)  j < k.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
Each sensor component j is associated with  differ-
ent attack scenarios Aj = fAj0; :::; Aj 1g. Each attack
scenario Ajk has an associated event space Ejk. The event
space speciﬁes which frames are candidates to be part of the