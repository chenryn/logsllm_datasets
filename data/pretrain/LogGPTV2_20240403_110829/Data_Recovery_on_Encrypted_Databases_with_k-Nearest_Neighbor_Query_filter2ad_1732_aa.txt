title:Data Recovery on Encrypted Databases with k-Nearest Neighbor Query
Leakage
author:Evgenios M. Kornaropoulos and
Charalampos Papamanthou and
Roberto Tamassia
(cid:19)(cid:17)(cid:18)(cid:26)(cid:1)(cid:42)(cid:38)(cid:38)(cid:38)(cid:1)(cid:52)(cid:90)(cid:78)(cid:81)(cid:80)(cid:84)(cid:74)(cid:86)(cid:78)(cid:1)(cid:80)(cid:79)(cid:1)(cid:52)(cid:70)(cid:68)(cid:86)(cid:83)(cid:74)(cid:85)(cid:90)(cid:1)(cid:66)(cid:79)(cid:69)(cid:1)(cid:49)(cid:83)(cid:74)(cid:87)(cid:66)(cid:68)(cid:90)
Data Recovery on Encrypted Databases With
k-Nearest Neighbor Query Leakage
Evgenios M. Kornaropoulos
Brown University
PI:EMAIL
Charalampos Papamanthou
University of Maryland
PI:EMAIL
Roberto Tamassia
Brown University
PI:EMAIL
Abstract—Recent works by Kellaris et al.
(CCS’16) and
Lacharit´e et al. (SP’18) demonstrated attacks of data recovery
for encrypted databases that support rich queries such as range
queries. In this paper, we develop the ﬁrst data recovery attacks
on encrypted databases supporting one-dimensional k-nearest
neighbor (k-NN) queries, which are widely used in spatial data
management. Our attacks exploit a generic k-NN query leakage
proﬁle: the attacker observes the identiﬁers of matched records.
We consider both unordered responses, where the leakage is a set,
and ordered responses, where the leakage is a k-tuple ordered
by distance from the query point.
As a ﬁrst step, we perform a theoretical feasibility study
on exact reconstruction,
i.e., recovery of the exact plaintext
values of the encrypted database. For ordered responses, we
show that exact reconstruction is feasible if the attacker has
additional access to some auxiliary information that is normally
not available in practice. For unordered responses, we prove
that exact reconstruction is impossible due to the inﬁnite number
of valid reconstructions. As a next step, we propose practical
and more realistic approximate reconstruction attacks so as to
recover an approximation of the plaintext values. For ordered
responses, we show that after observing enough query responses,
the attacker can approximate the client’s encrypted database with
considerable accuracy. For unordered responses we characterize
the set of valid reconstructions as a convex polytope in a k-
dimensional space and present a rigorous attack that reconstructs
the plaintext database with bounded approximation error.
As multidimensional spatial data can be efﬁciently pro-
cessed by mapping it to one dimension via Hilbert curves,
we demonstrate our approximate reconstruction attacks on
privacy-sensitive geolocation data. Our experiments on real-
world datasets show that our attacks reconstruct the plaintext
values with relative error ranging from 2.9% to 0.003%.
I. INTRODUCTION
Systems for Searchable Encryption (SE) [7], [9], [11], [12],
[17], [24], [41], [42] allow a client to outsource an encrypted
database to a server who can subsequently answer certain types
of queries by operating solely on the encrypted data. In order
to meet real-world efﬁciency demands, SE constructions allow,
by deﬁnition, some well-deﬁned leakage of information.
In the case of encrypted single-keyword search [7], [9], [11],
[24], [42], this leakage reveals which ﬁle identiﬁers match
the encrypted queried keyword—also known as access pattern
leakage. The impact of this type of leakage had not been
clear for a long time and it was only until recently that the
community started to study its implications. In particular, the
works of Islam et al. [23], Cash et al. [8], and recently Zhang et
al. [47], demonstrate how an attacker can utilize access patterns
to launch query-recovery attacks under various assumptions.
However, in the case of richer queries (e.g., range [16], [22],
[38] and SQL [37], [39]), more severe data-recovery attacks are
possible due to the expressiveness of the query. In particular, the
work by Kellaris, Kollios, Nissim, and O’Neill [25] attacks SE-
type systems that support range queries (e.g., [16], [21], [30])
by observing record identiﬁers whose plaintext values belong
to the queried range. Similarly, a recent work by Lacharit´e,
Minaud, and Paterson [28] further explores range query leakage
to achieve exact and approximate reconstruction for the case of
dense datasets with orders of magnitude fewer queries (when
compared to [25]). Finally, order-preserving encryption based
systems (e.g., CryptDB [39]) supporting even more expressive
queries (such as SQL) have been shown to be vulnerable to
data-recovery attacks [14], [20], [34] even without observing
any queries, just by the setup leakage.
In this work, we explore the implications of another generic
query leakage proﬁle, that of k-nearest neighbor (k-NN) queries,
which return the k nearest points of a database to a given query
point with respect to a distance metric. A spatial database
is engineered to model, store, and query data deﬁned in a
geometric space. There is a plethora of systems and products
(e.g. Geomesa [3], PostGIS for PostgreSQL [5], and IBM’s
Cloudant NoSQL DB Geospatial [4]) that provide scalable
solutions for handling spatial data. Proximity queries such as
k-NN, appear in all of the above systems.
Support for k-NN queries on encrypted databases has drawn
a lot of attention in the database community for more than a
decade [15], [18], [26], [31], [32], [36], [43], [44], [45]. Several
of the above designs, e.g. [26], [43], reveal as query leakage
the k encrypted records returned to the client as response to a
k-NN query. In this work, we analyze what a passive adversary
can achieve by only observing the set of encrypted records
returned by a sequence of k-NN queries. Our leakage-abuse
attacks achieve signiﬁcant accuracy of data recovery for one-
dimensional k-NN queries. Also, as higher-dimensional data
can be efﬁciently queried by mapping it to one-dimensional
values (e.g., via Hilbert curves) [29], [35], [40], [46], our
approach is applicable to a wider family of constructions. Our
ﬁndings suggest a reevaluation of what is considered secure in
the area of k-NN queries for encrypted databases.
(cid:165)(cid:1)(cid:19)(cid:17)(cid:18)(cid:26)(cid:13)(cid:1)(cid:38)(cid:87)(cid:72)(cid:70)(cid:79)(cid:74)(cid:80)(cid:84)(cid:1)(cid:46)(cid:15)(cid:1)(cid:44)(cid:80)(cid:83)(cid:79)(cid:66)(cid:83)(cid:80)(cid:81)(cid:80)(cid:86)(cid:77)(cid:80)(cid:84)(cid:15)(cid:1)(cid:54)(cid:79)(cid:69)(cid:70)(cid:83)(cid:1)(cid:77)(cid:74)(cid:68)(cid:70)(cid:79)(cid:84)(cid:70)(cid:1)(cid:85)(cid:80)(cid:1)(cid:42)(cid:38)(cid:38)(cid:38)(cid:15)
(cid:37)(cid:48)(cid:42)(cid:1)(cid:18)(cid:17)(cid:15)(cid:18)(cid:18)(cid:17)(cid:26)(cid:16)(cid:52)(cid:49)(cid:15)(cid:19)(cid:17)(cid:18)(cid:26)(cid:15)(cid:17)(cid:17)(cid:17)(cid:18)(cid:22)
(cid:18)(cid:17)(cid:20)(cid:20)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
Plaintext Values
400
350
300
250
200
150
100
50
0
Reconstructed Values
400
350
300
250
200
150
100
50
0
Fig. 1. On the left there is a black-and-white picture of the Trojan horse. In the middle there are n = 1840 sampled two-dimensional values from the original
picture projected to a Hilbert curve of order 7 so as to reduce the k-NN queries to one dimension. On the right side we demonstrate the reconstruction of the
plaintext values solely based on the query leakage under the studied assumptions. The depicted setup has relative error 0.01% both in 1D and 2D, and k = 9.
0
100
200
300
400
0
100
200
300
400
A. Our Contributions
We study what a passive and persistent adversary can achieve
by observing the query leakage that only reveals which k
encrypted records are retrieved for a private k-NN query on a
database with n one-dimensional values. We study the case of
unordered responses where the adversary observes the set of
k retrieved records as well as the case of ordered responses
where the adversary observes the k-tuple of retrieved records
ordered in ascending order with respect to the private query
point. We assume that the private query points are generated
uniformly at random. Our exact reconstruction results are:
• Ordered Responses. We show that an adversary with
auxiliary information can achieve exact reconstruction
in time O(k n log n). This auxiliary information is rather
unrealistic, e.g. the lengths of the Voronoi diagram which
is a conceptual partition of the space based on DB, but
our goal is to study the feasibility of exact reconstruction.
• Unordered Responses. We prove that even a compu-
tationally unbounded adversary can not achieve exact
reconstruction for this generic k-NN leakage. Our impos-
sibility proof shows that there exist an inﬁnite number
of DB reconstructions that the observed query leakage
can potentially come from, thus it is infeasible for an
adversary to deterministically output client’s DB.
Even though from the adversarial point of view the above results
do not look promising (i.e. unrealistic auxiliary information
and impossibility), there is still hope. For our main results we
show the following approximate reconstruction results:
• Ordered Responses. We show an attack where the
adversary has no access to auxiliary information but
still approximately reconstructs with failure probability
δ the plaintext values with relative error R in time
O(k n log n + 1
δ )). In the heart of this
2
R
technique is an estimator that approximates the previously-
handed auxiliary information. The recovered values are
at most ±R afar from the client’s DB values with
probability at least 1 − δ, where R, δ are tunable.
• Unordered Responses. In the main result of our work we
study the geometric structure of inﬁnite reconstructions,
(k2 n + log 1
what we call feasible region. Armed with insights about
the geometry of this feasible region, we present a novel
approximation approach that outputs a reconstructed DB
with a upper-bounded worst-case reconstruction accuracy.
Interestingly, the bound is a function of a characteristic
quantity of the feasible region, what we call diameter
the feasible region, and in the evaluation section
of
we examine the interplay between the diameter and the
accuracy of the reconstruction.
Evaluation of Approximate Reconstructions. Since map-
ping higher-dimensional data to one dimension is a standard
approach for both unencrypted [29], [35], [40], [46] and
encrypted DB [26] we conduct experiments on a publicly
available dataset of geolocation trace of the German politician
Malte Spitz. The two-dimensional data is mapped down to one
dimension, via the so-called Hilbert curves [33], where the
discussed k-NN query is simulated for different values of k.
All the experiments for both ordered and unordered took only
a few seconds, achieved reconstruction error from 2.9% to as
low as 0.003% and required the observation of thousands to
hundreds of millions of queries depending on the distribution
of the values. Interestingly, we used orders of magnitude less
number of queries than our theoretical analysis.
In Figure 1 we demonstrate the accuracy of our reconstruc-
tion in a larger dataset, about 2000 data points. The original
picture of the Trojan horse on the left was sampled to create
the two-dimensional set of black plaintext values depicted
in the middle. By projecting the 2D points to the Hilbert
curve we created a 1D dataset where the k-NN query leakage
was simulated (see Section V for details). After mounting
our attack on unordered responses we “folded” the recovered
one-dimensional dataset back to 2D to showcase its accuracy,
depicted on the right. With relative error 0.01% both in 1D
and 2D this visual example demonstrates the dangers of poorly
understood leakage proﬁles.
II. PRELIMINARIES
Database and its Organization. A database is a collection
DB of n records. Let α, β ∈ R. We consider records with one-
dimensional values in the continuous range [α, β] on which one-
(cid:18)(cid:17)(cid:20)(cid:21)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:34 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 2. The partition of [α, β] in Voronoi segments of ordered and unordered responses for k = 2 (left) and k = 3 (right). The curly brackets on the bottom
indicate the unordered responses that correspond to each Voronoi segments. The vertically written k-tuples indicate the ordered responses. The term bi,j
denotes the bisector between vi and vj which is also the Voronoi endpoint that separates the corresponding neighboring Voronoi segments.
dimensional k-nearest neighbor (k-NN) queries are performed.
Thus, each record has two ﬁelds: (1) a unique identiﬁer, idi;
and (2) a value val(idi) ∈ [α, β], for i = 0,··· , n − 1. We
denote with S = (s0, . . . , sn−1) the sequence of record ids
sorted in increasing order with respect to their values. Also,
we write vi = val(si). We denote with pos(idi) the position of
record idi in sequence S. Finally we assume that a database
responds to a k-NN for a ﬁxed k decided at setup-time. For the
sake of simplicity of the analysis, we assume that the mapping
from records to values is injective, that is, there is a single
record in the database associated with a value.
High-Order Voronoi Diagrams in One-Dimension. Given
two values vi and vj of database DB, the bisector bi,j of vi
and vj is the point (vi + vj)/2. For a value vi of DB, the
locus of points of [α, β] for which vi is the nearest neighbor
among the values of DB is called the Voronoi segment of vi,
denoted V (vi). The endpoints of V (vi) are bi−1,i and bi,i+1,
where we conventionally deﬁne b−1,0 = α and bn−1,n = β.
The Voronoi diagram V (DB ) is the partition of range [α, β]
into regions associated with the Voronoi segments of DB.
The notions of Voronoi segment and Voronoi diagram can
be extended to sets and tuples of values in DB. Given a set H
of k values, we deﬁne Voronoi segment Vk(H) as the locus
of points for which the k-nearest values of every query that
lands in this segment comprise set H. If H is a tuple of k
values, we deﬁne the Voronoi segment Vk(H) as the locus of
points whose k-nearest values sorted from closest to furthest
comprise the tuple H. Thus, for a query that lands in the a
locus Vk(H) the server returns the corresponding identiﬁers of
the values of H. We deﬁne the Voronoi diagram of order k of
DB, denoted with Vk(DB ), as the collection of all nonempty
Voronoi segments Vk(H), for all k-sized subsets (or tuples)
H of values in DB. Finally, we denote with R the set of all
possible responses for k-NN queries on DB.
k-NN Responses. We consider two variants of k-NN queries.
If the returned response is a set, then we have an unordered
response, denoted with r, which does not differentiate between
closeness among the values of r to the query point. In case
the response is a k-tuple where the order of the components
indicates the closeness to the query point (from closest to
furthest), then we have an ordered response. In this work, both
type of responses are denoted with r and the exact meaning
is either explicitly stated or can be inferred from the context.
Figure 2 illustrates Voronoi segments for ordered and unordered
responses on a database. In our work we consider k that takes
values from the following range: 2 ≤ k ≤ (cid:4) n
2(cid:5). In case k = 1 it
is not possible to reconstruct the order of the record identiﬁers
due to absence of overlap in the responses. In case k ≥ (cid:4) n
2(cid:5)+1
there is at least one pair of records that appears in all possible
responses, thus order reconstruction is not possible.
We denote with Len(r) the length of the Voronoi seg-
ment Vk(r) associated with response r. For the case of
unordered responses the set of Voronoi endpoints of Vk(DB )
is {b0,k, b1,k+1, . . . , bn−k−1,n−1}. The above set of bisectors
is also denoted as Bk because each bisector refers to values
that are k-positions apart wrt the ordering of S. For the case
of ordered responses, the set of Voronoi endpoints of Vk(DB )
consists of the union of the sets of bisectors B1, B2, . . . , Bk.
In Sections III-B through III-D and IV-A we study attacks
on ordered responses and in Sections III-E and IV-B through
IV-D we study attacks on unordered responses.
Adversarial Model. In our work, we assume that
the
adversary is passive and persistent, that is, the adversary sees all
the communication between the client and the server. The goal
of the adversary is to reconstruct the plaintext value of each
record of the encrypted database by just observing the encrypted
identiﬁers returned as responses to k-NN queries. If the attacker
recovers the exact values, then the attack is called exact
reconstruction. If the attacker recovers an approximation of
the values, then the attack is called approximate reconstruction
and in our work is accompanied by rigorous approximation
guarantees. Our adversary does not have the power to issue
queries or inject data and has no prior knowledge about the
distribution of the data.
Leakage Proﬁle Under Attack. To design generic attacks
that are applicable to a family of present solutions, e.g. [26],
[43], for k-NN queries, we consider a leakage proﬁle that
is typical in this line of work. Given a ﬁxed k the only
information that our adversary sees is the query leakage