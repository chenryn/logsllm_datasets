In this case, the Projection inference of ID can be applied;
it is easy then to derive from σ a solution to the inferred cap
constraint set Γ(cid:48), which proves our claim.
So we may assume henceforth, that for every cap con-
straint S (cid:46)(SYM,HE) u in Γ, each term in S is either a pure
variable or a constant, or has ‘e’ as its top symbol. (Note:
by Lemma 8, the symbols d, π1, π2 cannot appear in Γ.)
Case 2: Suppose then that for some cap constraint S (cid:46) u
in Γ, the set S contains only terms with ‘e’ on top, and u
is neither a variable nor a constant. We have two subcases
here:
- case 2.1: Either the top symbol of the RHS term u of
the constraint is ‘p’: in which case, a Cap Decomposi-
tion inference is applicable to Γ;
- case 2.2: Or else the top symbol of the RHS term u
is ‘e’:
in this subcase, (depending on the symbol set
SYM) either Homomorphic Deduction or Decryption
can be applied Γ.
In both subcases, one can derive from σ a solution for the
inferred system Γ(cid:48).
Case 3: So, we assume henceforth, that in every cap con-
straint S (cid:46)(SYM,HE) u in Γ, pure variables or constants have
to appear as members of S (the RHS u can be a variable, or
a constant, or a term with ‘p’ or ‘e’ on top).
Now, suppose Γ contains a constraint S (cid:46)(SYM,HE) u where
the term u has ‘p’ or ‘e’ as top symbol;
in such a case,
one of the Degeneracy, Cap Decomposition, Decryption or
Homomorphic Deduction inference rules can be applied to
prove our claim. So we may assume that the RHS of all
constraints in Γ are either pure variables or constants. We
have then two subcases to consider:
- Case 3.1: Suppose the RHS of all constraints in Γ are
constants. In this case, the terms to the left of any constraint
in Γ must all be ground terms, because of the Variable Intro-
duction property. In this case, the Degeneracy rule applies
and proves our claim.
- Case 3.2: So remains ﬁnally to consider the case where
for some cap constraint in Γ, the RHS term is a pure variable.
Let S1 (cid:46)(SYM,HE) z1,··· , Sr (cid:46)(SYM,HE) zr be all the cap
constraints in Γ, whose RHS are pure variables. For any
j, 1 ≤ j ≤ r, let the e-height of zj (wrt the given solution
σ) be deﬁned as the number of times the symbol ‘e’ appears
in the ground term zjσ; we then choose the ﬁrst index p ∈
{1, . . . , r} for which the e-height of zp is maximal. It follows
that zp cannot appear at a non-root position in any of the
terms in any of the sets Sj, 1 ≤ j ≤ r: indeed, due to our
previous reductions, any term in an Sj that contains zp at
a non-root position would have ‘e’ as top symbol, and the
corresponding RHS variable zj would be of a strictly bigger
e-height. In other words, if zp appears in any of the Sj, then
it is a member by itself of the set Sj.
Now, by assumption the substitution σ solves each con-
straint in Γ, and in particular Sp (cid:46)(SYM,HE) zp, with p as
chosen above; by Deﬁnition 4, this implies that zpσ is equal,
modulo HE, to some term t ∈ Cap({t1σ, . . . , tmσ}, SYM),
where the t1, . . . , tm are some non-variable terms (not con-
taining zp) over the LHS of the constraints in Γ; and this
term t must also be in Cap(Sσ, SYM) for every constraint in
Γ of the form S (cid:46)(SYM,HE) zp, i.e., whose RHS is zp.
We then deﬁne a substitution θ : zp (cid:55)→ Pv(t1,··· , tm),
where v is some legal bit string sequence of length m, and
apply the Variable Substitution inference to Γ, wrt θ. The
system thus inferred Γ(cid:48) = Γθ has a smaller number of vari-
ables: V ars(Γ(cid:48)) = V ars(Γ) (cid:114){zp}. From the given minimal
ground solution σ for Γ, we then derive a ground substitu-
tion σ(cid:48) on the set of variables of Γ(cid:48), by setting yσ(cid:48) = yσ, for
every variable y of Γ(cid:48).
The claim is that σ(cid:48) extends naturally to a solution for the
constraint system Γ(cid:48). To prove this, note ﬁrst that the RHS
of any constraint in Γ(cid:48) is either a variable (cid:54)= zp of Γ, or is the
term Pv(t1,··· , tm). It is therefore obvious that σ(cid:48) solves
any constraint in Γ(cid:48) whose RHS is a variable; so, we only
need to consider a constraint in Γ(cid:48) of the form S(cid:48) (cid:46)(SYM,HE)
Pv(t1,··· , tm), with S(cid:48) = Sθ, obtained by applying θ to a
constraint in Γ of the form S (cid:46)(SYM,HE) zp.
To prove our current claim, we may suppose zp (cid:54)∈ S, or
Pv(t1,··· , tm) (cid:54)∈ S(cid:48). Therefore Sσ = S(cid:48)σ(cid:48), and our above
term t ∈ Cap({t1σ, . . . , tmσ}, SYM) is also in the cap closure
Cap(S(cid:48)σ(cid:48), SYM). Now, the symbols p, π1, π2 are in SYM in
all cases; on the other hand, by Lemma 13, they do not
appear in t; these facts put together allow us to conclude
that σ(cid:48) does induce a solution also for the cap constraint
S(cid:48) (cid:46)(SYM,HE) Pv(t1,··· , tm) of the inferred system Γ(cid:48).
5.3
Illustrative Example - Contd.
In Section 3, we discussed the “NEEDHAM-SCHROEDER
SYMMETRIC KEY PROTOCOL” and the attack on it
based on homomorphism; we also saw how we generated
the following cap constraints.
i. {A, B, Na} (cid:46)({p,π1,π2,e,d},HE) p(p(A, B), Na)
ii. {A, B, Na, e(p(p(p(Na, B), Kab), e(p(Kab, A), Kbs)), Kas)}
(cid:46)({p,π1,π2,e,d},HE) p(e(p(x, B), Kas), x)
To solve (i), we use Cap Decomposition twice and get
the following constraints; each of them can be solved using
Degeneracy.
i-1. {A, B, Na} (cid:46)({p,π1,π2,e,d},HE) A
i-2. {A, B, Na} (cid:46)({p,π1,π2,e,d},HE) B
i-3. {A, B, Na} (cid:46)({p,π1,π2,e,d},HE) Na
To solve (ii), ﬁrst we use Cap Decomposition:
Deduced constraint ii-1.
{A, B, Na, e(p(p(p(Na, B), Kab), e(p(Kab, A), Kbs)), Kas)}
(cid:46)({p,π1,π2,e,d},HE) x
Deduced constraint ii-2.
{A, B, Na, e(p(p(p(Na, B), Kab), e(p(Kab, A), Kbs)), Kas)}
(cid:46)({p,π1,π2,e,d},HE) e(p(x, B), Kas)
Now, ii-1 can be solved by using Degeneracy: set x to Na.
And ii-2 can be solved by using Homomorphic Deduction,
Projection and Degeneracy:
(Homomorphic Deduction)
{p(p(p(Na, B), Kab), e(p(Kab, A), Kbs))}
(cid:46)({p,π1,π2},HE) p(x, B)
(Projection)
{p(p(Na, B), Kab), e(p(Kab, A), Kbs)}
{p(Na, B), Kab), e(p(Kab, A, Kbs)}
(cid:46)({p,π1,π2},HE) p(x, B)
(Degeneracy) ∅
(cid:46)({p,π1,π2},HE) p(x, B)
6. CONCLUSION
There are two basic reasons why the approach presented in
this paper works for active deduction modulo Homomorphic
Encryption. One is that normalized narrowing wrt the sys-
tem HE+ (equivalent to HE) terminates; and the other is
that such a narrowing allows us to ‘reduce’ deduction mod-
ulo HE+ to deduction modulo the subtheory Eh, for which
uniﬁcation is essentially syntactic. It would be of interest
to try to generalize our approach to other algebraic intruder
theories for which similar reductions are possible, and to
cases where the encryption schemes are assumed to satisfy
certain group homomorphism properties. We also would like
to mention a couple of other points:
i) The form of the rules of our rewrite system HE might
lead to conclude that our approach would work only for sym-
metric encryption schemes; but it is not hard to adapt the
system HE and the approach to handle asymmetric keys.
ii) The approach presented is appropriate for encryption
based on ECB (Electronic Code Book) block chaining. A
block chaining technique less vulnerable than ECB is CBC
(Cipher Block Chaining); cf. e.g., [16]. Some works ([10])
have considered a version of homomorphism theory that is
incomplete for such an encryption, i.e., might miss some
attacks. The following convergent AC-rewrite system R1
(where + = XOR is AC) models such an encryption:
x + x → 0
p2(cons(x, y)) → y
x + 0 → x,
p1(cons(x, y)) → x,
dec(enc(x, y), y) → x
cbc(cons(x, y), z, w) →
cbc(nil, z, k) → nil
cons( enc(z + x, w), cbc(y, enc(z + x, w), w) )
while enc(m, k) (resp. dec(m, k)) stands for message block
m encrypted (resp. decrypted) with key k. Passive deduc-
tion modulo R1 can be shown to be decidable, by extending
the results of [1] to AC-rewriting. Reﬁning the approach
of our current paper, into one that would be complete for
active deduction modulo R1, is part of ongoing work.
In this paper we have given an algorithm for a homo-
morphic operator over a free theory, which models the ECB
encryption algorithm. This is just a ﬁrst step in model-
ing encryption algorithms. We hope to extend our result to
homomorphic operators over more expressive theories, and
more useful for cryptographic protocol analysis.
7. REFERENCES
[1] S. Anantharaman, P. Narendran, M. Rusinowitch.
“Intruders with Caps”. In Proc. of Int. Conf. RTA’07 ,
LNCS 4533, pp. 20–35, Springer-Verlag, June 2007.
[2] S. Anantharaman, H. Lin, C. Lynch, P. Narendran,
M. Rusinowitch. “Uniﬁcation modulo Homomorphic
Encryption”. In Proc. of Int. Conf. FROCOS 2009,
TRENTO-Italy, LNAI 5749, pp. 100–116,
Springer-Verlag, September 2009.
[3] A. Armando, L. Compagna. “SATMC: A SAT-based
Model Checker for Security Protocols”. In Proc. of
JELIA 2004 , LNCS 3229, pp. 730–733, Springer-Verlag,
2004.
[4] D. Basin, S. M¨odersheim, L. Vigan`o. “An On-The-Fly
Model-Checker for Security Protocol Analysis”. In Proc.
of ESORICS’03, LNCS 2808, pp. 253–270.
Springer-Verlag, 2003.
[5] M. Baudet. “Deciding security of protocols against
oﬀ-line guessing attacks”. In Proc. of ACM Conf. on
Computer and Communications Security, pp. 16–25,
2005.
[6] Y. Chevalier, M. Kourjieh. “Key Substitution in the
Symbolic Analysis of Cryptographic Protocols”. In Proc.
Int. Conf FSTTCS’07 , LNCS 4855, pp. 121–132,
Springer-Verlag, December 2007.
[7] Y. Chevalier, R. K¨usters, M. Rusinowitch, M. Turuani.
“An NP Decision Procedure for Protocol Insecurity with
XOR”. In Proc. of the Logic In Computer Science
Conference, LICS’03, pp. 261–270, 2003.
[8] H. Comon-Lundh, R. Treinen. “Easy Intruder
Deductions.” Veriﬁcation: Theory and Practice In
LNCS 2772, pp. 225–242, Springer-Verlag, February
2004.
[9] V. Cortier, S. Delaune, P. Lafourcade. “A Survey of
Algebraic Properties Used in Cryptographic Protocols”.
In Journal of Computer Security 14(1): 1–43, 2006.
[10] V. Cortier, M. Rusinowitch, E. Zalinescu. “A
resolution strategy for verifying cryptographic protocols
with CBC encryption and blind signatures”. In Proc. of
the 7th ACM SIGPLAN Symposium PPDP 2005, pp.
12–22.
Here cbc(ls, vs, k) stands for the encryption, with k as key,
of the list ls of message blocks, with vs as padding vector;
[11] S. Delaune, F. Jacquemard. “A decision procedure for
the veriﬁcation of security protocols with explicit
destructors”. In Proc. of the 11th ACM Conference on
Computer and Communications Security (CCS’04), pp.
278–287, Washington, D.C., USA, October 2004. ACM
Press.
[12] S. Delaune, P. Lafourcade, D. Lugiez, R. Treinen,
“Symbolic protocol analysis for monoidal equational
theories.” In Information and Computation 206(2-4), pp.
312-351, 2008.
[13] S. Escobar, C. Meadows, J. Meseguer. “A
Rewriting-Based Inference System for the NRL Protocol
Analyzer and its Meta-Logical Properties.” In Theoretical
Computer Science, Vol. 367(1-2), pp. 162–202, 2006.
[14] F. J.-T. Fabrega, J. C. Herzog, J. D. Guttman.
“Strand Spaces: Why is a Security Protocol Correct?” In
Proc. of IEEE Symposium on Security and Privacy, May
1998.
[15] J.M. Hullot. “Canonical Forms and Uniﬁcation”. In
Proc. of the Int. Conf. on Automated Deduction
CADE-5, LNCS 87, pp. 318–334, Springer-Verlag, 1980.
[16] S. Kremer, M. D. Ryan. “Analysing the vulnerability
of protocols to produce known-pair and chosen-text
attacks”. In Proc. of the 2nd Int. Workshop on Security
Issues in Coordination Models, Languages, and Systems
(SecCo 2004), ENTCS, Vol. 128, Issue 5, pp. 87–104,
2004.
[17] C. Meadows, P. Narendran. “A uniﬁcation algorithm
for the group Diﬃe-Hellman protocol”. In Workshop on
Issues in the Theory of Security (in conjunction with
POPL’02), Portland, Oregon, USA, January 14-15 ,
2002.
[18] J. Millen, V. Shmatikov. “Constraint Solving for
Bounded-Process Cryptographic Protocol Analysis” In
Proc. of the 8th ACM Conference on Computer and
Communications Security pp. 166–175, 2001.
[19] E. Tiden, S. Arnborg. “Uniﬁcation Problems with
One-sided Distributivity”. In J. of Symb.
Computation 3(1–2): 183–202, 1987.
[20] C. Weidenbach. “Towards an automatic analysis of
security protocols”. In Proc. of the 16th Int. Conf. on
Automated Deduction, CADE-16 , LNAI 1632, pp.
378–382, Springer-Verlag, 1999.