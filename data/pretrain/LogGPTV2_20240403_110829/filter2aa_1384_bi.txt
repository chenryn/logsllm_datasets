appendix D
Capsulecorp
 internal network
 penetration test report
Executive summary
Acme Consulting Services, LLC (ACS) was hired by Capsulecorp, Inc. (CC) to con-
duct an Internal Network Penetration Test targeting its corporate IT infrastructure.
The purpose of this engagement was to assess the security posture of CC’s internal
network environment and determine its susceptibility to known network attack vec-
tors. ACS conducted this engagement from CC’s corporate headquarters located at
123 Sesame Street. The engagement testing activities began on Monday, May 18,
2020, and concluded on Friday, May 22, 2020. This document represents a point in
time and summarizes the technical results of the engagement as observed by ACS
during the testing window.
Engagement scope
CC provided the following IP address range. ACS performed blind host discovery
and was authorized by CC to treat all enumerable hosts as in-scope.
Summary of observations
During the engagement, ACS identified multiple security deficiencies, which
allowed for direct compromise of CC assets within the target environment. ACS was
IP address range
Active Directory domain
10.0.10.0/24
capsulecorp.local
255
APPENDIX D
Capsulecorp internal network penetration test report
able to take advantage of missing operating system patches, default or easily guessable
credentials, and insecure application configuration settings to compromise produc-
tion assets within CC’s corporate network. 
 Additionally, ACS was able to use shared credentials from compromised systems to
access additional networked hosts and ultimately was able to obtain full domain
admin-level access to the CAPSULECORP.local Active Directory domain. If a legiti-
mate attacker with malicious intent were to obtain this level of access to CC’s internal
network, the resulting business impact would be potentially catastrophic.
 ACS will present the following recommendations to strengthen the overall security
posture of CC’s internal network environment:
 Improve operating system patching procedures.
 Enhance system hardening policies and procedures.
 Ensure hosts and services utilize complex and unique passwords.
 Limit the use of shared credentials.
Engagement methodology
ACS utilized a four-phase methodology modeled after real-world attack behavior
observed throughout modern corporate environments. The methodology assumes
that an attacker has no upfront knowledge about the network environment and no
access beyond physically plugging a device into CC’s network. This methodology emu-
lates an external attacker who manages to enter a facility under a false pretense as well
as a malicious insider, customer, vendor, or custodial worker who has physical access to
the CC corporate office.
Information gathering
Beginning with nothing but a list of IP address ranges, ACS performed host-discovery
sweeps utilizing freely available open source tools. The outcome of the discovery
sweep is a list of enumerable targets reporting an IP address within the range listed in
the “Engagement scope” section.
 Identified targets were then enumerated, further utilizing standard network port-
scanning techniques to identify which network services were listening on each host.
These network services act as the attack surface, which can potentially allow unautho-
rized access to hosts in the event that an insecure configuration, missing patch, or
weak authentication mechanism is identified within the service.
 Each individual identified network service was then analyzed further to determine
weaknesses such as default or easily guessable credentials, missing security updates,
and improper configuration settings that would allow access or compromise. 
Focused penetration
Identified weaknesses from the previous phase were attacked in a controlled manner
tailored specifically to minimize disruption to production services. ACS’s focus during
this phase was to obtain non-destructive access to target hosts, so no Denial-of-Service
attacks were used throughout the engagement.
256
APPENDIX D
Capsulecorp internal network penetration test report
 Once access to a compromised host was obtained, ACS sought to identify creden-
tials stored in known sensitive areas present on enterprise operating systems. These
areas included individual text documents, application configuration files, and even
operating system-specific credential stores that have inherent weaknesses, such as
Windows registry hive files.
Post-exploitation and privilege escalation
Credentials obtained during the previous phase were tested against previously un-
accessed hosts in an effort to gain additional access and ultimately spread to as wide a
network reach as possible. The ultimate goal during this phase was to identify critical
users with unrestricted access to CC’s network and impersonate those users’ levels of
access to illustrate that an attacker could do the same.
 Real breach scenarios often involve an effort by the attacker to maintain persistent
and reliable re-entry into the network environment after systems are accessed. ACS
simulated this behavior on select compromised hosts. ACS accessed production Win-
dows domain controllers and obtain hashed credentials using non-destructive meth-
ods to bypass security controls in the ntds.dit extensible storage engine database.
Documentation and cleanup
All instances of a compromise were logged, and screenshots were gathered to provide
evidence for the final engagement deliverable. Post-engagement cleanup activities
ensured that CC systems were returned to the state they were in prior to the engage-
ment with ACS. Miscellaneous files created during testing were securely destroyed.
Any non-destructive configuration changes made to facilitate a compromise were
reversed. No destructive configuration changes that would impact system perfor-
mance in any way were made.
 In the rare cases where ACS creates a user account on a compromised system, ACS
may choose to deactivate rather than delete the user account. 
Attack narrative
ACS began the engagement with no upfront knowledge beyond what is listed in the pre-
vious engagement scope. Additionally, ACS had no access beyond plugging a laptop
into an unused data port in an unoccupied conference room at CC’s corporate office.
 ACS performed host and service discovery using Nmap to establish a list of poten-
tial network targets and enumerate their potential attack surface in the form of listen-
ing network services that would be available to any network routable device.
Enumerated network services were split into protocol-specific target lists, against
which ACS then attempted vulnerability discovery. Efforts were made to discover low-
hanging-fruit (LHF) attack vectors, which are commonly used by real-world attackers
during breaches of modern enterprises.
 ACS identified three (3) targets that were susceptible to compromise due to insuf-
ficient patching, weak or default credentials, and insecure system configuration set-
tings. These three targets, tien.capsulecorp.local, gohan.capsulecorp.local, and
trunks.capsulecorp.local, were compromised using freely available open source tools. 
257
APPENDIX D
Capsulecorp internal network penetration test report
 Once access to a compromised target was obtained, ACS attempted to use creden-
tials obtained from that target to access additional hosts that shared credentials. Ulti-
mately, it was possible with shared credentials to access the raditz.capsulecorp.local
server, which had a privileged domain admin user account logged on during the time
of the engagement.
 ACS was able to use freely available open source software called Mimikatz to safely
extract the clear-text credentials for the user PI:EMAIL from the
raditz.capsulecorp.local machine. With this account, it was trivial to access the domain
controller goku.capsulecorp.local with unrestricted administrator privileges. At this
point, ACS effectively had complete control over the CAPSULECORP.local Active
Directory domain.
Technical observations
The following observations were made during the technical testing portion of the
engagement.        
Default credentials found on Apache Tomcat—High
Observation
One (1) Apache Tomcat server was identified as having a default password for the 
administrator account. It was possible to authenticate to the Tomcat web manage-
ment interface and control the application using a web browser.
Impact
An attacker could deploy a custom web application archive (WAR) file to command the 
underlying Windows operating system of the server hosting the Tomcat application.
In the case of the CAPSULECORP.local environment, the Tomcat application was 
running with administrative privileges to the underlying Windows operating sys-
tem. This means the attacker would have unrestricted access to the server.
Evidence
Operating system command. Output is 
displayed below.
Operating system command execution via a WAR file
258
APPENDIX D
Capsulecorp internal network penetration test report
Asset affected
10.0.10.203, trunks.capsulecorp.local
Recommendation
CC should change all default passwords and ensure that strong passwords are 
being enforced for all user accounts with access to the Apache Tomcat server.
CC should consult its official password policy as defined by its internal IT/security 
teams. If such a policy doesn’t exist, CC should create one following industry 
standards and best practices.
Additionally, CC should consider the necessity of the Tomcat Manager web app. If 
a business need is not present, the Manager web app should be disabled via the 
Tomcat configuration file.
Additional references
https://wiki.owasp.org/index.php/Securing_tomcat#Securing_Manager_WebApp
Default credentials found on Jenkins—High
Observation
One (1) Jenkins server was identified as having a default password for the admin-
istrator account. It was possible to authenticate to the Jenkins web management 
interface and control the application using a web browser.
Impact
An attacker could execute arbitrary Groovy Script code to command the underlying 
Windows operating system of the server hosting the Jenkins application. 
In the case of the CAPSULECORP.local environment, the Jenkins application was 
running with administrative privileges to the underlying Windows operating system. 
This means the attacker would have unrestricted access to the server.
Evidence
Asset affected
10.0.10.203, vegeta.capsulecorp.local
Recommendation
CC should change all default passwords and ensure that strong passwords are 
being enforced for all user accounts with access to the Jenkins application.
CC should consult its official password policy as defined by its internal IT/security 
teams. If such a policy doesn’t exist, CC should create one following industry stan-
dards and best practices.
Additionally, CC should investigate the business need for the Jenkins Script con-
sole. If a business need is not present, the Script console should be disabled, 
removing the ability to run arbitrary Groovy Script from the Jenkins interface.
Default credentials found on Apache Tomcat—High (continued)
Operating system command execution via Groovy Script
259
APPENDIX D
Capsulecorp internal network penetration test report
Default credentials found on Microsoft SQL database—High
Observation
One (1) Microsoft SQL database server was identified as having a default pass-
word for the built-in sa administrator account. It was possible to authenticate to 
the database server with administrative privileges.
Impact
An attacker could access the database server and create, read, update, or delete 
confidential records from the database. Additionally, the attacker could use a  
built-in stored procedure to run operating system commands on the underlying 
Windows server hosting the Microsoft SQL database.
In the case of the CAPSULECORP.local environment, the MSSQL database was run-
ning with administrative privileges to the underlying Windows operating system. 
This means the attacker would have unrestricted access to the server.
Evidence
Asset affected
10.0.10.201, gohan.capsulecorp.local
Recommendation
CC should ensure that strong and complex passwords are enforced across all user 
accounts having access to the database server.
Additionally, the database server should be reconfigured to run within the context 
of a less privileged non-administrative user account.
Additionally, review the documentation “Securing SQL Server” from Microsoft and 
ensure that all security best practices are met.
Additional references
https://docs.microsoft.com/en-us/sql/relational-databases/security/securing-
sql-server
Missing Microsoft security update MS17-010—High
Observation
One (1) Windows server was identified as missing a critical Microsoft security 
update. MS17-10, codenamed Eternal Blue, was missing from the affected host. 
ACS was able to use publicly available open source exploit code to compromise 
the affected host and gain control of the operating system.
Operating system command execution via MSSQL stored procedure
260
APPENDIX D
Capsulecorp internal network penetration test report
Impact
An attacker could trivially exploit this issue and gain system-level access on the 
target machine. With this access, the attacker could alter, copy, or destroy confi-
dential information on the underlying operating system. 
Evidence
Asset affected
10.0.10.208 – tien.capsulecorp.local
Recommendation
CC should investigate why this patch from 2017 was missing on the affected host. 
Additionally, CC should ensure that all corporate assets are properly up to date 
with the latest patches and security updates.
Test security updates in a pre-production staging area first to ensure that all    
business-critical functionality is operating at capacity, and then apply the updates 
to production systems.
Shared local administrator account credentials—Medium
Observation
Two (2) systems were identified as having the same password for the local admin-
istrator account. 
Impact
An attacker who manages to gain access to one of these systems can trivially access 
the other due to the shared credentials. In the case of the CAPSULECORP.local envi-
ronment, ACS was ultimately able to use access from one of these two systems to 
gain complete control of the CAPSULECORP.local Active Directory domain.
Evidence
Assets affected
10.0.10.208 – tien.capsulecorp.local
10.0.10.207 – raditz.capsulecorp.local
Recommendation
CC should ensure that passwords are not shared across multiple user accounts or 
machines.
Missing Microsoft security update MS17-010—High (continued)
Successful exploitation of MS17-010
Shared password hash for the local administrator account
261
APPENDIX D
Capsulecorp internal network penetration test report
Appendix 1: Severity definitions
The following severity definitions apply to the findings listed in the “Technical obser-
vations” section.
Critical
A critical severity finding poses a direct threat to business operations. A successful
attack against the business using a critical finding would have a potentially cata-
strophic impact on the business’s ability to function normally.
High
A finding of high severity allows for a direct compromise of a system or application. A
direct compromise means an otherwise restricted area of the scoped environment
could be accessed directly and used to alter confidential systems or data.
Medium
A finding of medium severity could potentially result in a direct compromise of a sys-
tem or application. To use a medium finding, an attacker needs to obtain one addi-
tional piece of information or access or perhaps one additional medium finding to
fully compromise a system or application.
Low
A low severity finding is more of a best practice deficiency than a direct risk to systems
or information. By itself, a low finding would not provide attackers with a means to
compromise targets but may provide information that is useful in another attack.
Appendix 2: Hosts and services
The following hosts, ports, and services were enumerated during the engagement.
IP address
Port
Protocol
Network service
10.0.10.1
53
domain
Generic
10.0.10.1
80
http
10.0.10.125
80
http
10.0.10.138
80
http
10.0.10.151
57143
10.0.10.188
22
ssh
OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 Ubuntu Linux; 
protocol 2
10.0.10.188
80
http
Apache httpd 2.4.29 (Ubuntu)
10.0.10.200
5357
http
Microsoft HTTPAPI httpd 2 SSDP/UPnP
10.0.10.200
5985
http
Microsoft HTTPAPI httpd 2 SSDP/UPnP
262
APPENDIX D
Capsulecorp internal network penetration test report
10.0.10.200
9389
mc-nmf
.NET Message Framing
10.0.10.200
3389
ms-wbt-server
Microsoft Terminal Services
10.0.10.200
88
kerberos-sec
Microsoft Windows Kerberos server time: 5/21/19 
19:57:49Z
10.0.10.200
135