# Table 8. Comparison with Existing IP-Based Blacklists (DNSBL)
| Blacklist Name | False Negative (FN) | False Positive (FP) | Threshold | Our FN | Our FP | Combined FN | Combined FP |
| --- | --- | --- | --- | --- | --- | --- | --- |
| Spamhaus | 11.54% | 0.31% | 0.97 | 8.6% | 0.27% | 5.32% | 0.33% |
| Spamcop | 22.32% | 0.18% | 0.98 | 11.5% | 0.18% | 6.56% | 0.22% |
| SORBS | 63.06% | 0.10% | 0.99 | 15.3% | 0.17% | 11.34% | 0.20% |

The reason for these results is that the IPs in question are less frequently used by spammers, making them less likely to be observed and blacklisted by spam traps. Indeed, we found that over 75% of such IPs belong to smaller clusters (with fewer than 15 active hosts), which are less likely to be abused by spammers due to the limited number of potentially compromised IPs. Despite this, since most IPs in these clusters send spam, the aggregated spam ratio is high enough to identify newly appearing spammer IPs within the cluster.

## 7.2 Integration with SpamAssassin

The cluster reputation history collected can be used as a feature to predict future spam. We integrated it with SpamAssassin to quantify how many of its false negatives (FNs) we can reduce using cluster-based reputation history. As shown in Figure 5, about 4% of emails fall into the score range from two to five given a threshold of 5, which may contribute to false negatives. To determine whether a particular email is spam, we need to examine the email content. Due to privacy concerns, we examined several of our own personal accounts with permission. We also used a honeypot account, where all emails are considered spam, along with the personal accounts to estimate the overall improvement from cluster-based reputation. SpamAssassin generates a false negative rate of 16% for the honeypot email account.

We studied how much of SpamAssassin’s false negatives can be reduced and how many false positives (FPs) may be introduced by incorporating the cluster-based reputation scheme. We assigned scores for IP addresses that fall within bad clusters with varying parameters and evaluated the accuracy as shown in Table 7. FNR stands for False Negatives Reduced, and FPI indicates False Positives Introduced. "Matched" indicates how many IP addresses fall into existing clusters built over seven months of training data. The number of matched IPs serves as an upper bound for emails that can be classified as spam by the cluster-based scheme. The spam ratio threshold determines whether a cluster is considered bad, and an additional score is added for incoming emails. The score assigned is added to the original score assigned by SpamAssassin.

Since we are not directly blocking emails based on cluster reputation, we relaxed the spam ratio threshold to 0.7, 0.8, and 0.9, with the score assigned being 1, 2, and 3, respectively. For the honeypot account, we detected about 50% of the missed spam by SpamAssassin when setting the threshold of the spam ratio to 0.9 and the score assigned to 3. This is despite having the history for only 60% of the clusters that the spammer's IP addresses fall into. For other personal accounts, we observed similar false negative reductions with a small amount of false positives introduced. If we use a spam ratio threshold of 0.9 and an assigned score of 3, we incur at most one false positive instance for all accounts, translating to a 0.0036% false positive rate. Upon inspection, the false positive email was a paper invitation sent from China (the conference was held in China) whose IP address fell into a cluster where almost all IPs sent purely spam to us. Interestingly, this IP has no reverse DNS name and is listed on the SORBS blacklist, indicating that either the machine was compromised or the IP resides in a dynamic IP range (although we checked that this IP is not identified as dynamic by UDMap).

On the other hand, when applying BGP clustering directly to the same account with a spam ratio of 0.9 and an assigned score of 3, we still reduced a similar number of false negatives but observed 7 false positives, clearly indicating the downside of its inaccurate administrative boundary. For personal account 3, we did not observe any false positives for any threshold experimented. However, we could not reduce any false negatives because there was only one false negative instance out of 11 spam emails by SpamAssassin, and the IP address of this spam happened to fall within a cluster for which we do not have any history.

## 8. Concluding Remarks

In conclusion, we have studied the characteristics of different types of network clusters and investigated how to combine them into a uniform one. We compared the performance of a combined clustering approach integrating both DNS and prefix information with previously proposed BGP prefix clusters and existing widely used IP-based blacklists (DNSBL) to demonstrate improved spam detection accuracy. We also integrated our proposed cluster-based reputation into SpamAssassin to catch 30-50% of the spam missed by SpamAssassin at the cost of a very small increase in false positives. Our technique is designed to be robust against potential evasion attempts due to the inherent stable properties of the network information used. Another advantage is that our system can work well in a single vantage point, making it easy to deploy locally without requiring multiple vantage points (which are presumably much harder to obtain).

We argue that our cluster scheme is robust against various attacks. The most likely strategies of spammers would be to cause us to construct either too coarse-grained clusters where good and bad IPs are mixed or to mislead us into constructing too fine-grained clusters, which in the extreme become IP-based blacklists. We consider next how likely spammers can succeed in such endeavors.

BGP prefix information cannot be easily controlled by spammers unless they perform prefix hijacking attacks or own a fairly large prefix, both of which are unlikely due to high costs or overhead. DNS information is more amenable to modification if spammers own an IP range and control its reverse DNS mapping. Spammers can construct rDNS names in a way that is most beneficial to them, e.g., by setting rDNS to be the same as that of their neighboring good IP ranges. To be truly effective, such neighboring IP ranges must belong to the same prefix as the spammers' IP ranges. Furthermore, they need to ensure that the rDNS can resolve reverse DNS requests for them. They can also construct their rDNS in a way that every single IP has a different rDNS. This will cause our clustering algorithm to falsely cluster each IP into a separate cluster. However, this attack would again require spammers to own IP address ranges, and such rDNS naming patterns themselves would be an indication of malicious activities because constructing rDNS in such a fashion is highly unusual.

IP-based blacklists capture the individual IP's history, including sudden behavioral changes (e.g., legitimate mail servers becoming compromised to send spam). It is more difficult for the cluster-based approach to drastically modify a cluster's behavior as it must observe behavioral changes for many IP addresses in the cluster. By tracking history over a sufficiently long period, our approach can dynamically adapt to the behavioral changes in spamming. However, we expect the case where legitimate mail servers become compromised for spamming to be relatively rare (compared to DSL users getting compromised and abused for spamming). In our dataset, as previously shown in §5.5, we did not observe significant history changes for clusters. Our clustering approach attempts to capture regions of the Internet that "should" not have legitimate servers with high probability (e.g., DSL clusters). In that sense, any sending host is potentially bad. A detailed analysis of the behavioral change of clusters is out of the scope of this paper and will be pursued as future work.

## Acknowledgments
We thank our anonymous reviewers and Feng Qian for suggestions that improved the quality of this paper. This work is in part supported by NSF CNS-0643612, DARPA, and the Department of Navy.

## References
[1] The Apache Project. //spamassassin.apache.org/.
[2] Dialup rDNS. http://home.comcast.net/˜mcwebber/blocking.txt.
[3] Generic Regular Expressions for Popular Naming Conventions. http://www.ddf.net/spam/bad_relays.txt.
[4] Microsoft: 3% of e-mail is stuff we want; the rest is spam. http://arstechnica.com/security/news/2009/04/microsoft-97-percent-of-all-e-mail-is-spam.ars.
[25] S. Sinha, M. Bailey, and F. Jahanian. Shades of Grey: On the Effectiveness of Reputation-based "Blacklists". In Malware 2008, 2008.
[26] S. Sinha, M. Bailey, and F. Jahanian. Improving Spam Blacklisting through Dynamic Thresholding and Speculative Aggregation. In Proc. of the 17th Annual Network and Distributed System Security Symposium (NDSS), 2010.
[27] V. M. Telecommunications and V. Metsis. Spam Filtering with Naive Bayes – Which Naive Bayes? In Third Conference on Email and Anti-Spam (CEAS), 2006.
[28] S. Venkataraman, S. Sen, O. Spatscheck, P. Haffner, and D. Song. Exploiting Network Structure for Proactive Spam Mitigation. In Proceedings of 16th USENIX Security Symposium on USENIX Security Symposium, 2007.
[29] Y. Xie, F. Yu, K. Achan, E. Gillum, M. Goldszmidt, and T. Wobber. How Dynamic Are IP Addresses? In SIGCOMM, 2007.
[30] Y. Xie, F. Yu, K. Achan, R. Panigrahy, G. Hulten, and I. Osipkov. Spamming Botnets: Signatures and Characteristics. In SIGCOMM, 2008.
[31] L. Zhuang, J. Dunagan, D. R. Simon, H. J. Wang, I. Osipkov, G. Hulten, and J. Tygar. Characterizing Botnets from Email Spam Records. In LEET 08: First USENIX Workshop on Large-Scale Exploits and Emergent Threats, 2008.
[5] RFC 4408, Sender Policy Framework (SPF) for Authorizing Use of Domains in E-Mail, Version 1. http://tools.ietf.org/html/rfc4408.
[6] RFC for Draft, Generic Naming Suggested Unassigned Large Networks DNS and Hosts. http://tools.ietf.org/id/draft-msullivan-dnsop-generic-naming-schemes-00.txt.
[7] SORBS. http://www.au.sorbs.net/.
[8] SpamCop. http://www.spamcop.net/.
[9] Spamhaus. http://www.spamhaus.org/.
[10] Whois IP Address/Domain Name Lookup. http://cqcounter.com/whois/.
[11] D. S. Anderson, C. Fleizach, S. Savage, and G. M. Voelker. Spamscatter: Characterizing Internet Scam Hosting Infrastructure. In 14th Conference on USENIX Security Symposium, 2007.
[12] K. Chiang and L. Lloyd. A Case Study of the Rustock Rootkit and Spam Bot. In The First Workshop in Understanding Botnets, 2007.
[13] Dynablock Dynamic IP List. http://www.njabl.org/, http://www.spamhaus.org/pbl/index.lasso, 2007.
[14] S. Hao, N. A. Syed, N. Feamster, A. Gray, and S. Krasser. Detecting Spammers with SNARE: Spatio-Temporal Network-Level Automatic Reputation Engine. In Proceedings of Usenix Security Symposium, March 2009.
[15] T. Holz, C. Gorecki, K. Rieck, and F. Freiling. Measuring and Detecting Fast-Flux Service Networks. In Proceedings of the Network and Distributed System Security Symposium, 2008.
[16] J. Jung and E. Sit. An Empirical Study of Spam Traffic and the Use of DNS Black Lists. In IMC '04: Proceedings of the 4th ACM SIGCOMM Conference on Internet Measurement, 2004.
[17] M. Konte, N. Feamster, and J. Jung. Dynamics of Online Scam Hosting Infrastructure. In Proc. Passive and Active Measurement Conference (PAM), 2009.
[18] B. Krishnamurthy and J. Wang. On Network-Aware Clustering of Web Clients. In Proceedings of ACM SIGCOMM, 2000.
[19] F. Li and M.-H. Hsieh. An Empirical Study of Clustering Behavior of Spammers and Group-Based Anti-Spam Strategies. In CEAS 2006: Proceedings of the 3rd Conference on Email and Anti-Spam, 2006.
[20] B. Medlock. An Adaptive, Semi-Structured Language Model Approach to Spam Filtering on a New Corpus. In CEAS 2006 - Third Conference on Email and Anti-Spam, July 2006.
[21] A. Ramachandran and N. Feamster. Understanding the Network-Level Behavior of Spammers. In Proceedings of Sigcomm, 2006.
[22] A. Ramachandran, N. Feamster, and S. Vempala. Filtering Spam with Behavioral Blacklisting. In Proceedings of the 14th ACM Conference on Computer and Communications Security, 2007.
[23] A. Ramachandran, N. Feamster, and S. Vempala. Filtering Spam with Behavioral Blacklisting. In CCS '07: Proceedings of the 14th ACM Conference on Computer and Communications Security, 2007.
[24] Route Views Project. http://www.routeviews.org.