title:BIAS: Bluetooth Impersonation AttackS
author:Daniele Antonioli and
Nils Ole Tippenhauer and
Kasper Rasmussen
2020 IEEE Symposium on Security and Privacy
BIAS: Bluetooth Impersonation AttackS
Daniele Antonioli
School of Computer and Communication Sciences
EPFL
daniele.antonioli@epﬂ.ch
Nils Ole Tippenhauer
CISPA Helmholtz Center
for Information Security
Kasper Rasmussen
Department of Computer Science
University of Oxford
tippenhauer@cispa.saarland
PI:EMAIL
Abstract—Bluetooth (BR/EDR) is a pervasive technology for
wireless communication used by billions of devices. The Bluetooth
standard includes a legacy authentication procedure and a secure
authentication procedure, allowing devices to authenticate to
each other using a long term key. Those procedures are used
during pairing and secure connection establishment to prevent
impersonation attacks. In this paper, we show that the Bluetooth
speciﬁcation contains vulnerabilities enabling to perform imper-
sonation attacks during secure connection establishment. Such
vulnerabilities include the lack of mandatory mutual authenti-
cation, overly permissive role switching, and an authentication
procedure downgrade. We describe each vulnerability in detail,
and we exploit them to design, implement, and evaluate master
and slave impersonation attacks on both the legacy authentication
procedure and the secure authentication procedure. We refer to
our attacks as Bluetooth Impersonation AttackS (BIAS).
Our attacks are standard compliant, and are therefore effective
against any standard compliant Bluetooth device regardless the
Bluetooth version, the security mode (e.g., Secure Connections),
the device manufacturer, and the implementation details. Our
attacks are stealthy because the Bluetooth standard does not
require to notify end users about the outcome of an authentication
procedure, or the lack of mutual authentication. To conﬁrm
that the BIAS attacks are practical, we successfully conduct
them against 31 Bluetooth devices (28 unique Bluetooth chips)
from major hardware and software vendors, implementing all
the major Bluetooth versions, including Apple, Qualcomm, Intel,
Cypress, Broadcom, Samsung, and CSR.
Index Terms—Bluetooth, Authentication, Impersonation, At-
tacks, Wireless Security
I. INTRODUCTION
Bluetooth is a pervasive technology for low power wireless
networks. Bluetooth provides Bluetooth BR/EDR and Bluetooth
Low Energy (BLE) wireless stacks. In this paper we focus on
Bluetooth BR/EDR and refer to it as Bluetooth. Bluetooth is
deployed in billions of devices such as mobile phones, IoT
devices, laptops, cars, medical devices and industrial devices.
Bluetooth is regulated by the Bluetooth Special Interest Group
(SIG), that maintains and reviews the Bluetooth standard [6].
The standard is freely available and it contains around 3000
pages. A single vulnerability in a security mechanism deﬁned
in the standard translates into billions of exploitable devices.
The Bluetooth standard speciﬁes a security architecture
that provides conﬁdentially and integrity at the link layer [6,
p. 1646]. Two Bluetooth devices that have never met before
and want to establish a secure connection, ﬁrst have to pair.
While pairing, the devices agree upon and authenticate a long
term key. This key is then used to derive session keys for
subsequent secure connections. Two Bluetooth devices are
expected to pair once and securely connect multiple times.
During secure connection establishment the devices have to
authenticate the possession of the long term key that they have
established while pairing.
In a recent paper, researchers showed that Bluetooth secure
connection establishment is vulnerable to man-in-the-middle
attacks, even if the victims are already paired [4]. In that work
however, the attack assumes that there is a legitimate secure
connection to break into. The attacker cannot target isolated
Bluetooth devices, because the attacker cannot prove possession
of the victims’ long term key during secure connection
establishment.
In this paper, we demonstrate that the Bluetooth standard
contains vulnerabilities enabling an attacker to imperson-
ate a device and to establish a secure connection with a
victim, without possessing the long term key shared by
the impersonated device and the victim. Our attacks target
the authentication phase of secure connection establishment.
In particular we attack the legacy authentication procedure
used for Legacy Secure Connections (LSC) and the secure
authentication procedure used for Secure Connections (SC).
The attacker does not have to be present when the victim
and the impersonated device are paring, and does not need to
observe any previous communication between them. We show
how to exploit the identiﬁed vulnerabilities to mount master and
slave impersonation attacks on both the legacy authentication
procedure and the secure authentication procedure. Our attacks
work even when the victims are using Bluetooth’s strongest
security modes, e.g., SSP and Secure Connections. Our attacks
target the standardized Bluetooth authentication procedure, and
are therefore effective against any standard compliant Bluetooth
device. We refer to our attacks as Bluetooth Impersonation
Attacks (BIAS).
Our proof of concept implementation leverages a Bluetooth
development kit (described in detail in Section VI) to send the
required messages, however any device with full access to the
Bluetooth ﬁrmware and a Bluetooth baseband transceiver can
perform the BIAS attacks. We use our implementation to verify
that the vulnerabilities in the authentication mechanisms are
indeed present in real devices, and not just a quirk of the stan-
dard. We successfully attack 31 Bluetooth devices (28 unique
Bluetooth chips) from major hardware and software vendors,
representing all the major Bluetooth versions, including Apple,
Qualcomm, Intel, Cypress, Broadcom, Samsung, and CSR.
© 2020, Daniele Antonioli. Under license to IEEE.
DOI 10.1109/SP40000.2020.00093
549
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:45 UTC from IEEE Xplore.  Restrictions apply. 
We summarize our main contributions as follows:
• We present the BIAS attacks, the ﬁrst attacks capable
of bypassing Bluetooth’s authentication procedure during
secure connection establishment. Our attacks allow to
impersonate Bluetooth master and slave devices and
establish secure connections without knowing the long
term key shared between the victim and the impersonated
device. Our attacks exploit several ﬂaws that we identify in
the Bluetooth standard, such as lack of integrity protection,
encryption, and mutual authentication. Our attacks are
standard compliant, they are effective against Legacy
Secure Connections and Secure Connections, and they are
stealthy, i.e., no messages are show to the end user.
• We present our BIAS toolkit, that automates the con-
duction of the BIAS attacks on Bluetooth. Our toolkit
conﬁgures an attack device in order to support several
features, such as features impersonation, role switching,
unilateral authentication, and Secure Connections down-
grade.
• To demonstrate that the BIAS attacks are a serious threat,
we use our implementation to successfully attack 16
Legacy Secure Connections and 15 Secure Connections
devices, evaluating a total of 28 unique Bluetooth chips.
Our device sample includes diverse software and hardware
vendors, and all major Bluetooth versions.
We disclosed the BIAS attacks and related mitigations to
the Bluetooth SIG in December 2019. The Bluetooth SIG
acknowledged our ﬁndings and issued an errata to update the
standard.
The rest of the paper is organized as follows: in Section II
we introduce the Bluetooth stack. In Section III we present
our system and adversary model and in Section IV we present
our BIAS attacks on Legacy Secure Connections and Secure
Connections. In Section V we discuss an alternative BIAS
reﬂection attacks on Secure Connections. Our implementation
is discussed in Section VI. We evaluate the impact and
effectiveness of our attacks in Section VII and we discuss
the attacks and our proposed countermeasures in Section VIII.
We present the related work in Section IX. We conclude the
paper in Section X.
II. BACKGROUND
A. Bluetooth BR/EDR
Bluetooth Basic Rate Extended Data Rate (BR/EDR), re-
ferred in this section as Bluetooth, is a wireless technology
for low power and short range communication, and it is the
de facto standard for wireless personal area network (PAN).
Bluetooth at the physical layer uses the 2.4 GHz ISM band with
frequency hopping spread spectrum. Two connected Bluetooth
devices hop between 79 channels at regular time interval, and
each channel has a bandwidth of 1 MHz. Bluetooth allows to
use adaptive frequency hopping to mitigate interference with
wireless devices in range. A Bluetooth network is composed of
a master device that coordinates and synchronizes up to seven
slave devices. Two devices can switch master and slave roles
anytime after establishing an Asynchronous Connection-Less
(ACL) physical link, i.e., after baseband paging [6, p. 2100].
The speciﬁcation of Bluetooth is freely available [6], and it
is maintained by the Bluetooth SIG. The speciﬁcation divides
the Bluetooth stack into two main components the host and
the controller and speciﬁes a standard interface them, i.e., the
Host Controller Interface (HCI). The standard speciﬁes also
an HCI protocol that is used by the host to send commands
to the controller, and by the controller sends event to the
host. The host is implemented by the device main operating
system, while the controller is implemented by the ﬁrmware
of the device Bluetooth chip. The standard does not provide
a reference implementation for the host and the controller,
and the Bluetooth vendors typically use their proprietary
implementations.
The Bluetooth standard deﬁnes mechanisms to protect a
Bluetooth connection at the link layer using Legacy Secure
Connections procedures or Secure Connections procedures.
Pairing is used by two Bluetooth devices to agree upon a long
term key. The most secure and widespread pairing mechanism
is Secure Simple Pairing (SSP), which uses Elliptic Curve
Difﬁe Hellman (ECDH) for key agreement [6, p. 1691]. If
the pairing devices support Secure Connections, then SSP is
performed on the P-256 curve, otherwise on the P-192 curve.
After pairing, and according to the security procedures in use,
the devices compute a long term key from the ECDH shared
secret, and they mutually authenticate such key. Pairing is
performed over the air, and it uses the Link Manager Protocol
(LMP).
Once two paired devices share a long term key,
then
they can establish multiple secure connections. Each secure
connection uses a different session key, that is computed from
the long term key and other public parameters. Bluetooth secure
connection establishment is neither encrypted nor integrity
protected, and it is used by two devices to exchange their
capabilities, authenticate the long term key, compute the session
key, and activate the secure connection. If the connecting
devices support Secure Connections, then the secure connection
establishment uses the secure authentication procedure and
the connection is encrypted and integrity protected using
AES CCM. Otherwise, with Legacy Secure Connections, the
secure connection establishment uses the legacy authentication
procedure, and the connection is encrypted using the E0 stream
cipher. The secure connection establishment is conducted over
the air, and it uses the LMP protocol.
III. SYSTEM AND ATTACKER MODEL
In this section we deﬁne our system and attacker models,
as well as the notation we use in the rest of the paper.
A. System Model
We consider two victim devices, Alice and Bob, who are
using a secure Bluetooth link to communicate (see Figure 1).
Note that we do not require both victims to be present at
the time of the attack, we only assume that two legitimate
devices exist and have communicated in the past. We assume
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:45 UTC from IEEE Xplore.  Restrictions apply. 
550
C. Notation
KL indicates the long term key resulting from pairing, know
as the link key. Bluetooth authentication procedures involve
challenge response protocols, and we indicate a challenge sent
by a veriﬁer with C, and a response from a prover with R. We
indicate with HL() the hash function used for Legacy Secure
Connections authentication, and with HS() the hash function
used for Secure Connections authentication. Those functions
generate R from a number of parameters, including C. We
indicate the concatenation operator with (cid:2) and with rand(n) a
function to generate n random bytes. A Bluetooth address is
indicated with BTADD. We use M, S, A, B and C subscripts
to indicate quantities related to the master, slave, Alice, Bob
and Charlie. For example, the master sends CM to the slave,
and the slave responds by sending RS back.
IV. BLUETOOTH IMPERSONATION ATTACKS (BIAS)
Alice and Bob pair once to agree upon KL, and then
authenticate that they posses KL upon secure connection es-
tablishment using either Legacy Secure Connections or Secure
Connections. The 3-tuple that uniquely identiﬁes their secure
bond is (KL, BTADDA, BTADDB). When impersonating
Alice or Bob, Charlie can change his Bluetooth address to
BTADDA or BTADDB, but he cannot prove the ownership of
KL. This is the fundamental assumption behind Bluetooth’s
authentication guarantees, and this assumption should protect
against impersonation attacks.
In our work we present Bluetooth impersonation attacks
exploiting that: i) Bluetooth secure connection establishment
is neither encrypted nor integrity protected, ii) Legacy Secure
Connections secure connection establishment does not require
mutual authentication, iii) a Bluetooth device can perform a role
switch anytime after baseband paging, iv) devices who paired
using Secure Connections can use Legacy Secure Connections
during secure connection establishment. As our impersonation
attacks are at the architectural level of Bluetooth, they are
effective against any standard compliant Bluetooth device. Our
attacks are also stealthy, because the standard does not require
to notify the user about (the lack of) mutual authentication
and the usage of Secure Connections. We call our attacks
Bluetooth Impersonation AttackS (BIAS).
To conduct the BIAS attacks, Charlie targets Legacy Secure
Connections and Secure Connections authentication procedures
during secure connection establishment. Both procedures
authenticate KL using a challenge response protocol, and the
procedure selection depends on Alice and Bob’ supported
features. The standard claims that both procedures protect
secure connection establishment against impersonation attacks,
as an attacker who does not know KL cannot provide a
correct response to a challenge. The presented BIAS attacks
on Legacy Secure Connections (see Section IV-A) and Secure
Connections (see Section IV-B), demonstrate that Bluetooth
secure connection establishment is vulnerable to master and
slave impersonation attacks.
Fig. 1: Bluetooth Impersonation AttackS (BIAS) overview.
Alice and Bob, the victims, share a long term key that is
unknown to the attacker. The goal of the attacker (Charlie) is to
establish a “secure connection” with Bob while impersonating
Alice, or Alice while impersonating Bob. As Alice and Bob
have different Bluetooth roles, the attacker cannot use the same
impersonation attack for both.
that Alice and Bob already share a long term key, known as
the link key. The key has been agreed by having completed
Bluetooth’s Secure Simple Pairing (either using Legacy Secure
Connections or Secure Connections), and by having used a
strong association model (such as passkey entry).
Without loss of generality, we assume that Bob is the
Bluetooth master and Alice is the Bluetooth slave. Bob wants
to establish a secure connection with Alice using the existing
key described above. Conversely, Alice is willing to accept a
connection from Bob using this key. Our impersonation attacks
take place during secure connection establishment, that is when
Alice and Bob exchange their capabilities, authenticate the long
term key, compute the session key, and activate encryption. The
secure connection is established either using Legacy Secure
Connections or Secure Connections, according the capabilities
of Alice and Bob. In both cases we assume that all the security
primitives in use, such as AES and HMAC, are perfectly secure.
Alice and Bob can have established previous secure connections
using the long term key, although this is not a requirement.
B. Attacker Model
The attacker goal is to establish a secure Bluetooth con-
nection with Alice (or Bob), pretending to be Bob (or Alice).
In Section IV we show how this can be accomplished by
impersonating either Alice or Bob.
The attacker (Charlie) does not posses the long term key
shared by Alice and Bob, and he does not observe them
while they securely pair. Charlie is capable of eavesdropping,
decoding and manipulating unencrypted packets, as well as
jamming the Bluetooth spectrum. Charlie knows the public
information about Alice and Bob, such as their Bluetooth names,
Bluetooth addresses, protocol version numbers, and capabilities.
As secure connection establishment is not encrypted, Charlie
can collect Alice and Bob’s characteristics by eavesdropping
their communication. After the secure connection between
Alice and Bob is already established, Charlie can jam the
Bluetooth spectrum to force Alice and Bob to disconnect, and
re-establish a secure connection.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:19:45 UTC from IEEE Xplore.  Restrictions apply. 
551
Alice (slave)
A
Charlie (master)
Charlie (slave)