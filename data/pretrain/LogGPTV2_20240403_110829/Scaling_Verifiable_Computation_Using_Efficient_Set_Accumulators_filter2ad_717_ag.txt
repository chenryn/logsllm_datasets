vey [119] gives a thorough treatment of the area’s beginnings.
Our work builds most directly on xJsnark’s [79] multipreci-
sion arithmetic and on the RAM primitives ﬁrst described
by Ben-Sasson et al. [12] and further reﬁned by Ben-Sasson
et al. [13, 16], in Buffet [116], and in xJsnark. Buffet and
xJsnark both extend lines of work concerned with efﬁciently
compiling high-level programs to constraints, including Pep-
per [107], Ginger [108], Pinocchio [96], and Pantry [32].
Several other works in this area deal with persistent state.
Pantry [32] was the ﬁrst to use Merkle trees for stateful compu-
tations, and its persistent RAM primitive inspired ours (§5.2).
vSQL [123] builds a veriﬁable subset of SQL, building on
2088    29th USENIX Security Symposium
USENIX Association
All of these proceed in “guess-and-check” fashion, which is
inefﬁcient when implemented in constraints (see §4.1). Most
closely, Maurer [87, 88] and Shawe-Taylor [109] describe
prime generation methods based on Pocklington certiﬁcates;
Clavier et al. [46] optimize for embedded devices. To our
knowledge, no prior work tackles this problem in our context.
9 Discussion and conclusion
We have shown that in veriﬁable state applications with mod-
erate to large state, accessed thousands of times, RSA accu-
mulators are less costly than Merkle trees.
There are two caveats: ﬁrst, RSA accumulators require
a trusted setup. In practice, most SNARKs [15, 64, 70, 96]
also require a trusted setup, so this is not a signiﬁcant bur-
den. Moreover, it is possible to mitigate trust requirements
by generating an RSA modulus using a multiparty compu-
tation [25, 60]. A conjectured alternative that avoids trusted
setup is a class group of imaginary quadratic order [24, 35];
exploring efﬁcient constraint implementations is future work.
Second, for very large sets (say, > 225) P ’s cost (in time)
for advice generation is high (§4.4). For small batch sizes, this
cost overwhelms the time saved because of reduced constraint
count. Note, however, that there will be some batch size at
which RSA breaks even, since per-swap cost is smaller than
Merkle for (cid:39) 210 elements. Moreover, reducing the number of
constraints also reduces P ’s RAM requirements; meanwhile,
P ’s advice generation task requires little memory. This means
that even if an RSA accumulator requires greater total proving
time than a Merkle tree, the RSA accumulator’s use may still
be justiﬁed because it reduces the amount of RAM P needs to
generate a proof. Since RAM is a major bottleneck [116, 121]
(§1), such a time-space tradeoff may have signiﬁcant practical
beneﬁt. Exploring this tradeoff is future work.
Acknowledgments
This work was supported in part by the NSF, the ONR, the
Simons Foundation, the Stanford Center for Blockchain Re-
search, and the Ripple Foundation. The authors thank Justin
Drake, Srinath Setty, and Justin Thaler for helpful comments.
References
[1] M. R. Albrecht, L. Grassi, C. Rechberger, A. Roy, and T. Tiessen.
MiMC: Efﬁcient encryption and cryptographic hashing with minimal
multiplicative complexity. In ASIACRYPT, Dec. 2016.
[2] S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubramaniam. Ligero:
Lightweight sublinear arguments without a trusted setup. In ACM
CCS, Oct. / Nov. 2017.
[3] L. Babai, L. Fortnow, L. A. Levin, and M. Szegedy. Checking
computations in polylogarithmic time. In ACM STOC, May 1991.
[4] M. Backes, M. Barbosa, D. Fiore, and R. M. Reischuk. ADSNARK:
Nearly practical and privacy-preserving proofs on authenticated data.
In IEEE S&P, May 2015.
[5] N. Bari and B. Pﬁtzmann. Collision-free accumulators and fail-stop
signature schemes without trees. In EUROCRYPT, May 1997.
[6] P. S. L. M. Barreto, B. Lynn, and M. Scott. Constructing elliptic
curves with prescribed embedding degrees. In SCN, Sept. 2003.
[7] barryWhiteHat. roll_up: Scale ethereum with SNARKs.
https://github.com/barryWhiteHat/roll_up.
[8] M. Bellare and P. Rogaway. Random oracles are practical: A
paradigm for designing efﬁcient protocols. In ACM CCS, Nov. 1993.
[9] Bellman circuit library, community edition.
https://github.com/matter-labs/bellman.
[10] Bellman-BigNat.
https://github.com/alex-ozdemir/bellman-bignat.
[11] E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev. Scalable zero
knowledge with no trusted setup. In CRYPTO, Aug. 2019.
[12] E. Ben-Sasson, A. Chiesa, D. Genkin, and E. Tromer. Fast reductions
from RAMs to delegatable succinct constraint satisfaction problems:
extended abstract. In ITCS, Jan. 2013.
[13] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza.
SNARKs for C: Verifying program executions succinctly and in zero
knowledge. In CRYPTO, Aug. 2013.
[14] E. Ben-Sasson, A. Chiesa, M. Riabzev, N. Spooner, M. Virza, and
N. P. Ward. Aurora: Transparent succinct arguments for R1CS. In
EUROCRYPT, May 2019.
[15] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza. Scalable zero
knowledge via cycles of elliptic curves. In CRYPTO, Aug. 2014.
[16] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza. Succinct
non-interactive zero knowledge for a von neumann architecture. In
USENIX Security, Aug. 2014.
[17] J. C. Benaloh and M. de Mare. One-way accumulators: A
decentralized alternative to digital sinatures (extended abstract). In
EUROCRYPT, May 1994.
[18] V. Beneš. Mathematical theory of connecting networks and telephone
trafﬁc. Mathematics in Science and Engineering. Elsevier Science,
1965.
[19] N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer. From extractable
collision resistance to succinct non-interactive arguments of
knowledge, and back again. In ITCS, Jan. 2012.
[20] M. Blum, W. S. Evans, P. Gemmell, S. Kannan, and M. Naor.
Checking the correctness of memories. In FOCS, Oct. 1991.
[21] A. J. Blumberg, J. Thaler, V. Vu, and M. Walﬁsh. Veriﬁable
computation using multiple provers. Cryptology ePrint Archive,
Report 2014/846, 2014. http://eprint.iacr.org/2014/846.
[22] D. Boneh, J. Bonneau, B. Bünz, and B. Fisch. Veriﬁable delay
functions. In CRYPTO, Aug. 2018.
[23] D. Boneh, B. Bünz, and B. Fisch. A survey of two veriﬁable delay
functions. Cryptology ePrint Archive, Report 2018/712, 2018.
https://eprint.iacr.org/2018/712.
[24] D. Boneh, B. Bünz, and B. Fisch. Batching techniques for
accumulators with applications to IOPs and stateless blockchains. In
CRYPTO, Aug. 2019.
[25] D. Boneh and M. K. Franklin. Efﬁcient generation of shared RSA
keys (extended abstract). In CRYPTO, Aug. 1997.
[26] J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W.
Felten. SoK: Research perspectives and challenges for bitcoin and
cryptocurrencies. In IEEE S&P, May 2015.
[27] S. Bowe. BLS12-381: New zk-SNARK elliptic curve construction.
https://electriccoin.co/blog/new-snark-curve/, Mar.
2017.
[28] S. Bowe. Cultivating Sapling: Faster zk-SNARKs.
https://electriccoin.co/blog/cultivating-sapling-
faster-zksnarks/, Sept. 2017.
USENIX Association
29th USENIX Security Symposium    2089
[29] S. Bowe, A. Chiesa, M. Green, I. Miers, P. Mishra, and H. Wu. Zexe:
Enabling decentralized private computation. Cryptology ePrint
Archive, Report 2018/962, 2018.
https://eprint.iacr.org/2018/962.
[30] J. Brandt and I. Damgård. On generation of probable primes by
incremental search. In CRYPTO, Aug. 1993.
[31] J. Brandt, I. Damgård, and P. Landrock. Speeding up prime number
generation. In ASIACRYPT, Nov. 1993.
[32] B. Braun, A. J. Feldman, Z. Ren, S. Setty, A. J. Blumberg, and
M. Walﬁsh. Verifying computations with state. In SOSP, Nov. 2013.
[33] E. F. Brickell, D. M. Gordon, K. S. McCurley, and D. B. Wilson. Fast
exponentiation with precomputation (extended abstract). In
EUROCRYPT, May 1993.
[34] J. Brillhart, D. H. Lehmer, and J. L. Selfridge. New primality criteria
and factorizations of 2m ± 1. Math. Comp., 29(130):620–647, Apr.
1975.
[35] J. Buchmann and S. Hamdy. A survey on IQ cryptography. In Public
Key Cryptography and Computational Number Theory, 2001.
[36] B. Bünz, J. Bootle, D. Boneh, A. Poelstra, P. Wuille, and G. Maxwell.
Bulletproofs: Short proofs for conﬁdential transactions and more. In
IEEE S&P, May 2018.
[37] B. Bünz, B. Fisch, and A. Szepieniec. Transparent SNARKs from
DARK compilers. Cryptology ePrint Archive, Report 2019/1229,
2019. https://eprint.iacr.org/2019/1229.
[38] P. Camacho, A. Hevia, M. A. Kiwi, and R. Opazo. Strong
accumulators from collision-resistant hashing. In ISC, Sept. 2008.
[39] J. Camenisch, M. Kohlweiss, and C. Soriente. An accumulator based
on bilinear maps and efﬁcient revocation for anonymous credentials.
In PKC, Mar. 2009.
[40] J. Camenisch and A. Lysyanskaya. Dynamic accumulators and
application to efﬁcient revocation of anonymous credentials. In
CRYPTO, Aug. 2002.
[41] D. Catalano and D. Fiore. Vector commitments and their applications.
In PKC, Feb. / Mar. 2013.
[42] A. Chepurnoy, C. Papamanthou, and Y. Zhang. Edrax: A
cryptocurrency with stateless transaction validation. Cryptology
ePrint Archive, Report 2018/968, 2018.
https://eprint.iacr.org/2018/968.
[43] A. Chiesa, Y. Hu, M. Maller, P. Mishra, N. Vesely, and N. Ward.
Marlin: Preprocessing zkSNARKs with universal and updatable SRS.
Cryptology ePrint Archive, Report 2019/1047, 2019.
https://eprint.iacr.org/2019/1047.
[44] A. Chiesa, D. Ojha, and N. Spooner. Fractal: Post-quantum and
transparent recursive proofs from holography. Cryptology ePrint
Archive, Report 2019/1076, 2019.
https://eprint.iacr.org/2019/1076.
[45] A. Chiesa, E. Tromer, and M. Virza. Cluster computing in zero
knowledge. In EUROCRYPT, Apr. 2015.
[46] C. Clavier, B. Feix, L. Thierry, and P. Paillier. Generating provable
primes efﬁciently on embedded devices. In PKC, May 2012.
[47] G. Cormode, M. Mitzenmacher, and J. Thaler. Practical veriﬁed
computation with streaming interactive proofs. In ITCS, Jan. 2012.
[48] J.-S. Coron and D. Naccache. Security analysis of the
Gennaro-Halevi-Rabin signature scheme. In EUROCRYPT, May
2000.
[49] C. Costello, C. Fournet, J. Howell, M. Kohlweiss, B. Kreuter,
M. Naehrig, B. Parno, and S. Zahur. Geppetto: Versatile veriﬁable
computation. In IEEE S&P, May 2015.
[50] R. J. F. Cramer. Modular design of secure yet practical cryptographic
protocols. PhD thesis, Universiteit van Amsterdam, Jan. 1997.
[51] I. Damgård and N. Triandopoulos. Supporting non-membership
proofs with bilinear-map accumulators. Cryptology ePrint Archive,
Report 2008/538, 2008. http://eprint.iacr.org/2008/538.
[52] A. Delignat-Lavaud, C. Fournet, M. Kohlweiss, and B. Parno.
Cinderella: Turning shabby X.509 certiﬁcates into elegant
anonymous credentials with the magic of veriﬁable computation. In
IEEE S&P, May 2016.
[53] Ethereum. https://ethereum.org.
[54] ETH Gas Station. https://ethgasstation.info.
[55] A. Fiat and A. Shamir. How to prove yourself: Practical solutions to
identiﬁcation and signature problems. In CRYPTO, Aug. 1987.
[56] D. Fiore, C. Fournet, E. Ghosh, M. Kohlweiss, O. Ohrimenko, and
B. Parno. Hash ﬁrst, argue later: Adaptive veriﬁable computations on
outsourced data. In ACM CCS, Oct. 2016.
[57] Secure hash standard. NIST FIPS PUB 180-4, Aug. 2015.
[58] K. Floersch. Ethereum smart contracts in L2: Optimistic rollup.
https://medium.com/plasma-group/ethereum-smart-
contracts-in-l2-optimistic-rollup-2c1cef2ec537.
[59] P.-A. Fouque and M. Tibouchi. Close to uniform prime number
generation with fewer random bits. In ICALP, July 2014.
[60] T. K. Frederiksen, Y. Lindell, V. Osheter, and B. Pinkas. Fast
distributed RSA key generation for semi-honest and malicious
adversaries. In CRYPTO, Aug. 2018.
[61] M. Fredrikson and B. Livshits. Zø: An optimizing distributing
zero-knowledge compiler. In USENIX Security, Aug. 2014.
[62] A. Gabizon. AuroraLight: Improved prover efﬁciency and SRS size
in a sonic-like system. Cryptology ePrint Archive, Report 2019/601,
2019. https://eprint.iacr.org/2019/601.
[63] A. Gabizon, Z. J. Williamson, and O. Ciobotaru. PLONK:
Permutations over lagrange-bases for oecumenical noninteractive
arguments of knowledge. Cryptology ePrint Archive, Report
2019/953, 2019. https://eprint.iacr.org/2019/953.
[64] R. Gennaro, C. Gentry, B. Parno, and M. Raykova. Quadratic span
programs and succinct NIZKs without PCPs. In EUROCRYPT, May
2013.
[65] A. Gluchowski. Optimistic vs. ZK rollup: Deep dive.
https://medium.com/matter-labs/optimistic-vs-zk-
rollup-deep-dive-ea141e71e075.
[66] GNU multiple precision arithmetic library. https://gmplib.org.
[67] S. Goldwasser, Y. T. Kalai, and G. N. Rothblum. Delegating
computation: interactive proofs for muggles. In ACM STOC, May
2008.
[68] J. Gordon. Strong primes are easy to ﬁnd. In EUROCRYPT, Apr.
1985.
[69] L. Grassi, D. Kales, D. Khovratovich, A. Roy, C. Rechberger, and
M. Schofnegger. Starkad and Poseidon: New hash functions for zero
knowledge proof systems. Cryptology ePrint Archive, Report
2019/458, 2019. https://eprint.iacr.org/2019/458.
[70] J. Groth. On the size of pairing-based non-interactive arguments. In
EUROCRYPT, May 2016.
[71] J. Hendrik W. Lenstra. Factoring integers with elliptic curves. Annals
of Mathematics, 126(3):649–673, 1987.
[72] D. Hopwood, S. Bowe, T. Hornby, and N. Wilcox. Zcash protocol
speciﬁcation. https://github.com/zcash/zips/blob/master/