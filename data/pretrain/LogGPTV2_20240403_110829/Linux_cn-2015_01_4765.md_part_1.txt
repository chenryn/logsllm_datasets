---
author: Jaroslav Štěpánek
category: 系统运维
comments_data:
- date: '2015-01-28 09:33:02'
  message: '@有道云笔记收藏'
  postip: 220.181.108.157
  username: 微博评论
- date: '2015-01-28 11:03:01'
  message: 有些没用过的配置，留看
  postip: 218.30.103.250
  username: 微博评论
count:
  commentnum: 2
  favtimes: 5
  likes: 0
  sharetimes: 11
  viewnum: 54518
date: '2015-01-28 09:06:00'
editorchoice: false
excerpt: 随着基于 Web 的应用和服务的增多，IT 系统管理员肩上的责任也越来越重。当遇到不可预期的事件如流量达到高峰，流量增大或者内部的挑战比如硬件的损坏或紧急维修，无论如何，你的
  Web 应用都必须要保持可用性。甚至现在流行的 devops 和持续交付（CD）也可能威胁到你的 Web 服务的可靠性和性能的一致性。 不可预测，不一致的性能表现是你无法接受的。但是我们怎样消除这些缺点呢？大多数情况下一个合适的负载均衡解决方案可以解决这个问题。今天我会给你们介绍如何使用
  HAProxy 配置 HTTP 负载均衡器。  什么是 HTTP 负载均衡？ HTTP 负载
fromurl: http://xmodulo.com/haproxy-http-load-balancer-linux.html
id: 4765
islctt: true
largepic: /data/attachment/album/201501/27/221127l63m13ftwpf66rxp.jpg
permalink: /article-4765-1.html
pic: /data/attachment/album/201501/27/221127l63m13ftwpf66rxp.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 随着基于 Web 的应用和服务的增多，IT 系统管理员肩上的责任也越来越重。当遇到不可预期的事件如流量达到高峰，流量增大或者内部的挑战比如硬件的损坏或紧急维修，无论如何，你的
  Web 应用都必须要保持可用性。甚至现在流行的 devops 和持续交付（CD）也可能威胁到你的 Web 服务的可靠性和性能的一致性。 不可预测，不一致的性能表现是你无法接受的。但是我们怎样消除这些缺点呢？大多数情况下一个合适的负载均衡解决方案可以解决这个问题。今天我会给你们介绍如何使用
  HAProxy 配置 HTTP 负载均衡器。  什么是 HTTP 负载均衡？ HTTP 负载
tags:
- 负载均衡
- HAProxy
thumb: false
title: 使用 HAProxy 配置 HTTP 负载均衡器
titlepic: false
translator: liaoishere
updated: '2015-01-28 09:06:00'
---
随着基于 Web 的应用和服务的增多，IT 系统管理员肩上的责任也越来越重。当遇到不可预期的事件如流量达到高峰，流量增大或者内部的挑战比如硬件的损坏或紧急维修，无论如何，你的 Web 应用都必须要保持可用性。甚至现在流行的 devops 和持续交付（CD）也可能威胁到你的 Web 服务的可靠性和性能的一致性。
不可预测，不一致的性能表现是你无法接受的。但是我们怎样消除这些缺点呢？大多数情况下一个合适的负载均衡解决方案可以解决这个问题。今天我会给你们介绍如何使用 [HAProxy](http://www.haproxy.org/) 配置 HTTP 负载均衡器。
![](/data/attachment/album/201501/27/221127l63m13ftwpf66rxp.jpg)
### 什么是 HTTP 负载均衡？
HTTP 负载均衡是一个网络解决方案，它将进入的 HTTP 或 HTTPs 请求分配至一组提供相同的 Web 应用内容的服务器用于响应。通过将请求在这样的多个服务器间进行均衡，负载均衡器可以防止服务器出现单点故障，可以提升整体的可用性和响应速度。它还可以让你能够简单的通过添加或者移除服务器来进行横向扩展或收缩，对工作负载进行调整。
### 什么时候，什么情况下需要使用负载均衡？
负载均衡可以提升服务器的使用性能和最大可用性，当你的服务器开始出现高负载时就可以使用负载均衡。或者你在为一个大型项目设计架构时，在前端使用负载均衡是一个很好的习惯。当你的环境需要扩展的时候它会很有用。
### 什么是 HAProxy？
HAProxy 是一个流行的开源的 GNU/Linux 平台下的 TCP/HTTP 服务器的负载均衡和代理软件。HAProxy 是单线程，事件驱动架构，可以轻松的处理 [10 Gbps 速率](http://www.haproxy.org/10g.html) 的流量，在生产环境中被广泛的使用。它的功能包括自动健康状态检查，自定义负载均衡算法，HTTPS/SSL 支持，会话速率限制等等。
### 这个教程要实现怎样的负载均衡
在这个教程中，我们会为 HTTP Web 服务器配置一个基于 HAProxy 的负载均衡。
### 准备条件
你至少要有一台，或者最好是两台 Web 服务器来验证你的负载均衡的功能。我们假设后端的 HTTP Web 服务器已经配置好并[可以运行](http://linux.cn/article-1567-1.html)。
在 Linux 中安装 HAProxy
-------------------
对于大多数的发行版，我们可以使用发行版的包管理器来安装 HAProxy。
### 在 Debian 中安装 HAProxy
在 Debian Wheezy 中我们需要添加源，在 /etc/apt/sources.list.d 下创建一个文件 "backports.list" ，写入下面的内容
```
deb http://cdn.debian.net/debian wheezy­backports main 
```
刷新仓库的数据，并安装 HAProxy
```
# apt­ get update
# apt ­get install haproxy 
```
### 在 Ubuntu 中安装 HAProxy
```
# apt ­get install haproxy 
```
### 在 CentOS 和 RHEL 中安装 HAProxy
```
# yum install haproxy 
```
配置 HAProxy
----------
本教程假设有两台运行的 HTTP Web 服务器，它们的 IP 地址是 192.168.100.2 和 192.168.100.3。我们将负载均衡配置在 192.168.100.4 的这台服务器上。
为了让 HAProxy 工作正常，你需要修改 /etc/haproxy/haproxy.cfg 中的一些选项。我们会在这一节中解释这些修改。一些配置可能因 GNU/Linux 发行版的不同而变化，这些会被标注出来。
### 1. 配置日志功能
你要做的第一件事是为 HAProxy 配置日志功能，在排错时日志将很有用。日志配置可以在 /etc/haproxy/haproxy.cfg 的 global 段中找到他们。下面是针对不同的 Linux 发型版的 HAProxy 日志配置。
#### CentOS 或 RHEL:
在 CentOS/RHEL中启用日志，将下面的：
```
log         127.0.0.1 local2 
```
替换为：
```
log         127.0.0.1 local0 
```
然后配置 HAProxy 在 /var/log 中的日志分割，我们需要修改当前的 rsyslog 配置。为了简洁和明了，我们在 /etc/rsyslog.d 下创建一个叫 haproxy.conf 的文件，添加下面的内容：
```
$ModLoad imudp 
$UDPServerRun 514  
$template Haproxy,"%msg%\n" 
local0.=info ­/var/log/haproxy.log;Haproxy 
local0.notice ­/var/log/haproxy­status.log;Haproxy 
local0.* ~ 
```
这个配置会基于 $template 在 /var/log 中分割 HAProxy 日志。现在重启 rsyslog 应用这些更改。
```
# service rsyslog restart 
```
#### Debian 或 Ubuntu:
在 Debian 或 Ubuntu 中启用日志，将下面的内容
```
log /dev/log        local0 
log /dev/log        local1 notice 
```
替换为：
```
log         127.0.0.1 local0 
```
然后为 HAProxy 配置日志分割，编辑 /etc/rsyslog.d/ 下的 haproxy.conf （在 Debian 中可能叫 49-haproxy.conf），写入下面你的内容
```
$ModLoad imudp 
$UDPServerRun 514  
$template Haproxy,"%msg%\n" 
local0.=info ­/var/log/haproxy.log;Haproxy 
local0.notice ­/var/log/haproxy­status.log;Haproxy 
local0.* ~ 
```
这个配置会基于 $template 在 /var/log 中分割 HAProxy 日志。现在重启 rsyslog 应用这些更改。
```
 # service rsyslog restart 
```
### 2. 设置默认选项
下一步是设置 HAProxy 的默认选项。在 /etc/haproxy/haproxy.cfg 的 default 段中，替换为下面的配置：
```
    defaults 
    log     global 
    mode    http 
    option  httplog 
    option  dontlognull 
    retries 3 
    option redispatch 
    maxconn 20000 
    contimeout      5000 
    clitimeout      50000 
    srvtimeout      50000
```