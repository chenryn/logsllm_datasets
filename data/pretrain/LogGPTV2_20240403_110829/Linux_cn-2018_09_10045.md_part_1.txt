---
author: Jim Salter
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 3694
date: '2018-09-25 14:58:05'
editorchoice: false
excerpt: 开源编程不仅仅是将代码上传到 GitHub。了解开源编程的真正含义以及它所不包含的内容。
fromurl: https://opensource.com/article/18/3/what-open-source-programming
id: 10045
islctt: true
largepic: /data/attachment/album/201809/25/145810p6v1de6m6l6t6em6.jpg
permalink: /article-10045-1.html
pic: /data/attachment/album/201809/25/145810p6v1de6m6l6t6em6.jpg.thumb.jpg
related: []
reviewer: wxy, pityonline
selector: ''
summary: 开源编程不仅仅是将代码上传到 GitHub。了解开源编程的真正含义以及它所不包含的内容。
tags:
- 开源
thumb: false
title: 何谓开源编程？
titlepic: true
translator: Valoniakim
updated: '2018-09-25 14:58:05'
---

> 开源编程不仅仅是将代码上传到 GitHub。了解开源编程的真正含义以及它所不包含的内容。

简而言之，开源编程是指编写可以自由获取和修改的代码。然而，这并不像听起来那么简单。虽然任何人都可以在GitHub、Bitbucket、SourceForge等平台上发布几行代码，但要有效地进行开源编程，还需要投入大量的努力和个人规划。

![](/data/attachment/album/201809/25/145810p6v1de6m6l6t6em6.jpg)

### 对开源编程的误解

首先需要明确的是：仅仅将代码放置在GitHub的公开仓库中，并不意味着该代码已经开源。在大多数国家和地区，版权自动产生，无需创作者采取任何额外行动。这意味着，在创作者明确授权之前，只有作者有权使用和分发其作品。未经许可使用的代码，无论有多少人在使用，都可能引发法律问题。

有些开发者认为“我的代码显然是免费提供给大家使用的”，并且他们无意对使用者提起诉讼。但这并不能保证这些代码是安全的。即使创作者看起来很友好，他们仍然有权利起诉任何未经授权就使用或修改其代码的人。

显然，你不应该在没有指定开源许可证的情况下发布代码，并期望别人使用和贡献。我建议你也尽量避免使用那些疑似未授权的代码。如果你开发了一个函数或例程，而它与之前的某个疑似未授权代码非常相似，那么原作者可能会对你提起侵权诉讼。

例如，Jill Schmill发布了AwesomeLib到GitHub上，但并未明确授权。即便Jill Schmill不打算起诉任何人，但如果她将AwesomeLib的完整版权出售给EvilCorp，后者就可以起诉所有先前违规使用该代码的人。这种情况就像埋下了一颗定时炸弹，迟早会爆炸。

因此，请记住，无许可证的代码是非常危险的。

### 选择合适的开源许可证

假设你正在编写一个新程序，并希望以开源方式发布它，你需要做的就是选择一个最符合你需求的[许可证](https://opensource.com/tags/licensing)。你可以从GitHub支持的[choosealicense.com](https://choosealicense.com/)开始。这个网站设计得像一个简单的问卷，只需点击几下就能找到合适的许可证。

请注意，在选择许可证时不要过于自信。如果你选择了广泛使用的[Apache许可证](https://choosealicense.com/licenses/apache-2.0/)或[GPLv3](https://choosealicense.com/licenses/gpl-3.0/)，人们很容易理解他们的权利和义务，你也不需要请律师来审查其中的漏洞。你选择的许可证越少见，带来的麻烦就越多。

最重要的一点是：**千万不要试图自己创建许可证！** 自定义许可证会给用户带来更多的困惑和困扰。如果现有的许可证确实无法满足你的需求，你可以在现有许可证的基础上附加一些特定条款，并特别标注出来提醒用户注意。