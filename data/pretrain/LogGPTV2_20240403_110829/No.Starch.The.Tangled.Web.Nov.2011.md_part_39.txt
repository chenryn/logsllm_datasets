non-simple requests and preflight, 238
basedon, 142n
request types, 236–237
DNS names, in URLs, browser
security checks, 237–238
acceptance,27
cross-origin subresources, 183
DNS pinning, 142n, 190
cross-site request forgery (XSRF, CSRF),
DNS rebinding, 142n, 189
84, 190, 262
DNT request header, 193
exploitation of flaws, 190
 directive, 71
login forms and, 145–146
document.cookie API (JavaScript), 61
cross-site script inclusion (XSSI), 104n, 262
document.domain property (JavaScript),
cross-site scripting (XSS), 71, 262
143–144
bugs, and password managers, 228
document-level scrollbar, 180
exploitation of flaws, 190
document namespace, mapping HTML
filtering, 251–252, 253
elements to, 110
crossdomain.xml file, 155, 162
document object (JavaScript), 108
CSP (Content Security Policy), 242–245,
Document Object Model, 12, 108,
250, 253
109–111, 142–146
CSRF (cross-site request forgery), 84,
document rendering helpers, 130–131
190,262
documents
exploitation of flaws, 190
changing location of existing, 174–178
login forms and, 145–146
script access to other, 111–112
CSS. See Cascading Style Sheets (CSS)
document type detection logic, 198–206
CUPS (Common UNIX Printing System),
Domain parameter, for cookie, 61
152–153
domains
currentStyle API, 184
hardcoded, 227
CVSS (Common Vulnerability Scoring
problems with restrictions, 151–152
System), 6–7
DOMService mechanism, 158
CWE (Common Weakness Enumeration), 6
DoS (denial-of-service) attacks, 214–219,
Cyrillic alphabet, homoglyphs in, 35
248, 264
286 INDEX
downloaded files, 205–206 ExternalInterface.call() API, 133
drag-and-drop, 180 External XML Entity (XXE) attack, 76
DRM (Digital Rights Management), 131
duplicate headers, resolution of, 47–48 F
Dutta, Sunava, 239
false positives, risk in XSS filtering, 251–252
fault tolerance, 11
E
feeds, 123–124
E4X. See ECMAScript for XML (E4X) feed: scheme, 37
Earthlink, 153 Felten, Ed, 193
ECMA (European Computer Manufac- file extensions, browser response to, 205
turers Association), 11, 96 file formats. See also plug-ins
ECMAScript, 96 audio and video, 119
escape codes, 112 bitmap images, 118
strict mode, 104 HTML. See HTML
ECMAScript for XML (E4X), 106–107 non-renderable, 124
Eich, Brendan, 95 plaintext, 64, 85, 117–118
Electronic Frontier Foundation, 109 XML. See XML
Eloquent JavaScript (Haverbeke), 97 file inclusion, 265
 tag (HTML), 83 file path, hierarchical, in URLs, 27–28
mixed content, 183 file: protocol, 159–160, 188
src=..., 128 files, downloaded, 205–206
EMF file format, 83 File Transfer Protocol (FTP), 26n, 205–206
encapsulating pseudo-protocols, 37–38 filtering
encoding schemes, for headers, 49–51 pop-up, 217–218
encryption, protocol-level, 64–66 reserved characters, in HTML, 71
enctype="text/plain", for  tag, 81 Firefox (Mozilla), 13, 17
endless loop, 101, 215 and ActiveX, 137
ENQUIRE, 9, 10 cached pages in, 37
 directive, 76 character set inheritance, 209
entity encoding, in HTML, 76–78 CORS in, 239
error-handling rules, for certificates, 65–66 and credential portion of URLs, 26
escaping reserved characters, in HTML,71 data: URLs in, 168
escaping scheme, 91 DNT request header, 193
Esser, Stefan, 209 entity names, 77
ETag/If-None-Match header pair, 59 external content directives, 90
European Computer Manufacturers Asso- Gecko parsing engine, 70n
ciation (ECMA), 11, 96 history.pushState() API, 256
eval() function, 102 javascript: URLs in, 169
eval-script, 242n local file access, 160
Evans, Chris, 181, 182 modal dialogs for prompts, 219
EV SSL (Extended Validation SSL), 65 multiple cookies for, 62
exception printable characters in, 32
for eval() function, 102 privileged JavaScript in, 161
recovery in JavaScript, 100 prompt displayed when saving Content-
execution time for scripts, 215–216 Type: image/jpeg document, 205
Expires directive, 48, 59 redirects to about:blank, 166
Expires parameter, for cookie, 61 and RFC 2047 encoding, 50
explicit conditionals, in HTML, 75–76 RSS and Atom renderers for, 124
expression(...) function (CSS), 89 same-origin policy loopholes, 185
Extended Validation SSL (EV SSL), 65 stored password retrieval, 228
Extensible Application Markup Language Strict Transport Security support, 248
(XAML), 134 SWF file handling without
extension matching, 202n Content-Type, 199
INDEX 287
Firefox (continued) getElementsByTagName() function, 109
time limits on continuously executing GET method (HTTP), 42, 52, 58, 80–81
scripts, 215 GetRight download utility, 137
UTF-8 text in, 50 getters, in JavaScript, 103
Windows Presentation Foundation getURL() function, 133
plug-ins, 136 GIFAR vulnerability, 129
Worker API, 258 GIF file format, 83, 129
firefoxurl: protocol, 17, 36 GML (Generalized Markup Language),
Flash applets, 11 8–9
fonts Gontmakher, Alex, 35
CSP directive for, 243 Gonzalez, Albert, 5n
Flash programs enumeration of, 132 gopher: scheme, 36
Forbidden status code (403), 56 Gosling, James, 134
forecasting, statistical, 6 GPS data, 226n
format-string vulnerability, 266 Grossman, Jeremiah, 179
form-based password managers, 227–229 Guninski, Georgi, 176
form feed character, in HTML tag, 74
forms, 80–82 H
Found status code (302), 55
fragment ID, in URLs, 28–29 Hansen, Robert, 179
frame-ancestors directive, 243 hardcoded domains, 227
framebusting, 264 Haverbeke, Marijn, Eloquent JavaScript, 97
frame descendant policy, and cross-domain HDP file format, 83
communications, 176–178 header injection, 45, 239, 262
frames, 82 headers
disabling navigation descendant model, character set and encoding schemes,
230–231 49–51
hijacking risks, 175–176 Content Security Policy encoded in, 242
name attribute of, 175 in HTTP requests, 43
sandboxed, 245–247 resolution of duplicate or conflicting,
unsolicited, 178–181 47–48
and window interactions, 174–181 semicolon-delimited values, 48–49
frame-src directive, 243 HEAD request (HTTP), 53
From-Origin header, 240 hexadecimal notation, 77, 112
FTP (File Transfer Protocol), 26n, 205–206 hierarchical file path, in URLs, 27–28
ftp: scheme, 36 history object (JavaScript), 108
full-screen mode, proposals for, 259 history.pushState() API, 256
fully qualified absolute URLs, 24 Hodges, Jeff, 248
fully restricted URL scheme, 188 homoglyphs, in Cyrillic alphabet, 35
functional notation, in CSS, 89 Host request header, 43
functions hostnames
JavaScript, overriding, 102–103 extra periods, and cookie-setting
resolution for JavaScript, 98–99 algorithms, 159
non-fully qualified, 159
HTML (Hypertext Markup Language), 9,
G
69–86
Gabrilovich, Evgeniy, 35 basic concepts, 70–73
Gecko parsing engine, 70n case of tags, 72
Generalized Markup Language converting to plaintext, 85
(GML),8–9 CSS interaction with, 90
geolocation data, 226 document misidentified as, 198
geolocation discovery, 258 document parsing modes, 71–72
geolocation-sharing prompts, 223 embedded in feed formats, 124
getComputedStyle API, 184 entity encoding, 76–78
getElementById() function, 109 explicit and implicit conditionals, 75–76
288 INDEX
HTTP integration semantics, 78–79 images
hyperlinking and content inclusion, bitmap, 118
79–84 in HTML, 83
in-browser sanitizers, 250–251 risk of content sniffing on, 202
mapping elements to document Scalable Vector Graphics (SVG), 83,
namespace, 110 121–122
parser behavior, 73–76 image/svg+xml document type, 124
tag interactions, 74–75  tag (HTML), 83
type-specific content inclusion, 82–84 src parameter, 181
version 4, 12 for SVG images, 122
version 5, 70, 119, 131 implicit caching, 59
HTTP (HyperText Transfer Protocol), 9, implicit conditionals, in HTML, 75–76
41–67 @import, in CSS, 89–90
authentication, 62–63 IndexedDB design, 258
basic syntax, 42–51 indicator of hierarchical URLs, 25–26
binary, 257 information security, 1–8
caching behavior, 58–60 inheritance, for vbscript: scheme, 169–170
cookie semantics, 60–62 inline-script setting, 242n
downgrade, 264 innerHTML property, 110–111
history, 41–42 innerStaticHTML API, 251
HTML integration semantics, 78–79 integer overflow, 266
newline handling, 45 Interactive Voice Response (IVR)
proxy requests, 46–47 systems,236
request types, 52–54 interconnected systems, losses in, 5
semantics battle, 72–73 internal networks, access to, 189–190
simultaneous connections, 216 Internal Revenue Service, 231
version 0.9, 42–43, 44 Internal Server Error (500), 56
version 1.0, 42, 43, 44, 48, 59 International Organization for Standard-
version 1.1, 42–43, 45, 48, 57, 198 ization (ISO), 11
httponly flag, for cookie, 61, 150 Internationalized Domain Names in
http: scheme, 36 Applications (IDNA), 34–35
HTTPS, 65 Internet Assigned Numbers Authority
documents, 138n, 183 (IANA), 24, 152
downgrade risks, 248 Internet Engineering Task Force (IETF), 11
https: scheme, 36 Internet Explorer, 10, 11–12
hyperlinking, and content inclusion, 79–84 ActiveX and, 137
Hypertext Markup Language (HTML). and  blocks, 75
SeeHTML (Hypertext Markup \ (backslash) in URLs, 29
Language) acceptance of backtick as quote, 74
HyperText Transfer Protocol (HTTP). See characters in URL scheme name
HTTP (HyperText Transfer Protocol) ignored by, 25
clickjacking, 182
I content sniffing, 202
cookies, 149
IANA (Internet Assigned Numbers data: URLs in, 168
Authority), 24, 152 delete attempt of JavaScript function, 103
ICO file format, 83 extension matching, 202
IDNA (Internationalized Domain Names fallback display, 118
in Applications), 34–35 and file extensions in URLs, 130
IETF (Internet Engineering Task Force), 11 frames, 177
If-Modified-Since header, 59 JavaScript in, 96
If-None-Match header, 59 JSON.parse() function alternative, 104
 tag (HTML), 82, 176, 209, 245–247 local file access, 160
image/jpeg document type, 118, 202, 205 markup controlled charset on, 209
INDEX 289
Internet Explorer (continued) JavaScript, 10, 11n, 83, 95–107
and multiline headers, 45 character encoding in, 112–113
multiline string literals support, 91 code and object inspection capabilities,
non-recognition of vertical tab, 112 101–102
NUL character and, 73, 74 code execution, 100
origin check and port number, 142 code inclusion modes and nesting risks,
printable characters in, 32 113–114
proprietary security-restricted document.domain property, 143–144
parameter,246 Document Object Model, 12, 108,
redirects to about:blank, 166–167 109–111
and RFC 2047 encoding, 50 embedded in PDF documents, 130
same-origin policy and, 143n, 185 execution order control, 100–101
Silverlight and, 134 labeled statements support, 105n
stored password retrieval, 228 MIME type, 118n
SWF file handling without Netscape and, 95–96
Content-Type, 199 runtime environment for, 102–104
text/plain document type, 200–201 script processing model, 97–100
third-party cookies blocking, 193 setters and getters, 103
time limits on continuously executing standard object hierarchy, 107–112
scripts, 215 variable declaration, 99
Trident parsing engine, 70n and WML Script (WMLS), 123
VBScript, 96, 114 JavaScript Object Notation (JSON),
window.open() function and, 218 104–106, 112
Windows Presentation Foundation javascript: scheme, 37, 169–170
plug-ins, 136 Jobs, Steve, 131
XDomainRequest approach to, 148 JPEG file format, 83
XSS-detection logic, 251 JScript, 11n
Zone.Identifier metadata, 231 JScript.Encode, 113n
zone model, 229–231 JSObject mechanism, 158
Internet Information Server, and Host JSON (JavaScript Object Notation),
headers, 47 104–106, 112
Internet service providers, 153 JSONP (JSON with padding), 106n, 245
Internet zone, for Internet Explorer, 230 JSON.parse() function, alternatives, 104
interstitials, 218
intrusions K
escalation of, 5
nonmonetary costs, 5 Kaminsky, Dan, 153
Invisible Gorilla experiment, 223 katakana, 33
IP addresses, and cookies, 158 keepalive sessions, 56–57, 216
ISO (International Organization for Stan- keystroke redirection, 180
dardization), 11 Kinugawa, Masato, 210
ISO-8859-1 (Western European
codepage), 50 L
itms: scheme, 36
itpc: scheme, 36 language parameter, for  tag, 113n
IVR (Interactive Voice Response) Lessig, Lawrence, 192
systems,236 LF (newline), HTTP quirks in
handling,45
LFI (local file inclusion), 265
J
Lie, Wium, Håkon, 87
Jackson, Collin, 16, 177, 184, 240  directive, 88
jar: scheme, 37  tag, 181
Java, 134–135, 157–158 LiveScript, 95
Java Runtime Environment (JRE), 135 livescript: scheme, 37
290 INDEX
loadPolicyFile() method, 155–156 Threats Against and Protection of Microsoft’s
local file inclusion (LFI), 265 Internal Network, 5n
local files, access issues, 159–160 Windows operating system, 10
local intranet zone, for Internet Microsoft Office, 130
Explorer,229 Microsoft Silverlight, 119, 134, 157
local machine zone, for Internet MIME (Multipurpose Internet Mail Exten-
Explorer,229 sions), 43n, 81n
localhost, danger of, 152–153 malformed types, 199
localStorage object (JavaScript), 148 mapping types to plaintext, 118
location.hash, 256 for plug-ins, 128
location headers, sending user- specialized for content in sandboxed
controlled,67 frame, 247
location.host property, 173 Mitchell, John C., 177, 240
location object (JavaScript), 108, 153–154 mixed content, 183, 262–263
location of documents, changing, 174–178 mmst: scheme, 36
login forms, autocompletion by mmsu: scheme, 36
browsers,228 Mocha language, 95
lookup functions, in Document Object mocha: scheme, 37
Model, 109 modal behavior of dialogs, 218–219