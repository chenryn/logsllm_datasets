### References

1. **Based on the Worst-Case Hardness of Lattice Problems.**
   - In: Asiacrypt, 2008.

2. **D. E. Knuth. The Art of Computer Programming, Volume II: Seminumerical Algorithms, 3rd Edition.**
   - Addison-Wesley, 1998.

3. **J. Li, N. Li, and R. Xue. Universal Accumulators with Efficient Nonmembership Proofs.**
   - In: ACNS, 2007.

4. **B. Libert, S. Ling, F. Mouhartem, K. Nguyen, and H. Wang. Zero-Knowledge Arguments for Matrix-Vector Relations and Lattice-Based Group Encryption.**
   - In: Asiacrypt 2016.

5. **B. Libert, S. Ling, F. Mouhartem, K. Nguyen, and H. Wang. Signature Schemes with Efficient Protocols and Dynamic Group Signatures from Lattice Assumptions.**
   - In: Asiacrypt, 2016.

6. **B. Libert, S. Ling, K. Nguyen, and H. Wang. Zero-Knowledge Arguments for Lattice-Based Accumulators: Logarithmic-Size Ring Signatures and Group Signatures Without Trapdoors.**
   - In: Eurocrypt, 2016.

7. **B. Libert, S. Ling, K. Nguyen, and H. Wang. Zero-Knowledge Arguments for Lattice-Based PRFs and Applications to e-Cash.**
   - In: Asiacrypt, 2017. To appear.

8. **B. Libert, T. Peters, and M. Yung. Scalable Group Signatures with Revocation.**
   - In: Eurocrypt, 2012.

9. **S. Ling, K. Nguyen, D. Stehlé, and H. Wang. Improved Zero-Knowledge Proofs of Knowledge for the ISIS Problem, and Applications.**
   - In: PKC 2013, 2013.

10. **H. Lipmaa. On Diophantine Complexity and Statistical Zero-Knowledge Arguments.**
    - In: Asiacrypt, 2003.

11. **H. Lipmaa, N. Asokan, and V. Niemi. Secure Vickrey Auctions Without Threshold Trust.**
    - In: Financial Cryptography, 2002.

12. **V. Lyubashevsky. Lattice-Based Identification Schemes Secure Under Active Attacks.**
    - In: PKC, 2008.

13. **V. Lyubashevsky, C. Peikert, and O. Regev. On Ideal Lattices and Learning with Errors Over Rings.**
    - In: Eurocrypt, 2010.

14. **R. C. Merkle. A Certified Digital Signature.**
    - In: Crypto, 1989.

15. **D. Micciancio and C. Peikert. Trapdoors for Lattices: Simpler, Tighter, Faster, Smaller.**
    - In: Eurocrypt, 2012.

16. **D. Micciancio and C. Peikert. Hardness of SIS and LWE with Small Parameters.**
    - In: Crypto 2013, 2013.

17. **D. Micciancio and S. Vadhan. Statistical Zero-Knowledge Proofs with Efficient Provers: Lattice Problems and More.**
    - In: Crypto, 2003.

18. **T. Nakanishi, H. Fujii, Y. Hira, and N. Funabiki. Revocable Group Signature Schemes with Constant Costs for Signing and Verifying.**
    - In: PKC, 2009.

19. **T. Pedersen. Non-Interactive and Information-Theoretic Secure Verifiable Secret Sharing.**
    - In: Crypto, volume 576 of LNCS, pages 129–140. Springer, 1991.

20. **O. Regev. On Lattices, Learning with Errors, Random Linear Codes, and Cryptography.**
    - In: STOC, 2005.

21. **J. Stern. A New Paradigm for Public Key Identification.**
    - Information Theory, IEEE Transactions on, 42(6), 1996.

22. **X. Xie, R. Xue, and M. Wang. Zero-Knowledge Proofs from Ring-LWE.**
    - In: CANS, 2013.

### Detailed Description of the Protocol in Section 5.2

#### Tree Paths
We traverse the paths from nodes \( y \) and \( z \) to the root \( u \) and capture all the relations as equations modulo \( q \) and modulo 2. Let the nodes on the path from \( y \) be denoted by \( d_{\ell} = y, d_{\ell-1}, \ldots, d_1, d_0 = u \in \{0, 1\}^k \) and their siblings by \( e_{\ell}, e_{\ell-1}, \ldots, e_1 \in \{0, 1\}^k \). The bits determining this path are \( v_{\ell-1}, \ldots, v_0 \).

Following the tree construction from Section 2.1, for all \( i \in \{\ell - 1, \ldots, 1, 0\} \):
\[ d_i = \begin{cases} 
h_B(d_{i+1}, e_{i+1}) & \text{if } v_i = 0; \\
h_B(e_{i+1}, d_{i+1}) & \text{if } v_i = 1.
\end{cases} \]
This can be rewritten as:
\[ d_i = v_i \cdot h_B(d_{i+1}, e_{i+1}) + (1 - v_i) \cdot h_B(e_{i+1}, d_{i+1}). \]

Interpreting this, we get:
\[ B_0 \cdot (v_i \cdot d_{i+1}) + B_1 \cdot (v_i \cdot d_{i+1}) + B_0 \cdot ((1 - v_i) \cdot e_{i+1}) + B_1 \cdot ((1 - v_i) \cdot e_{i+1}) = G \cdot d_i \mod q. \]

For each \( i = \ell - 1, \ldots, 0 \), let:
- \( d_{i+1} = d_{i+1}^* + d_{i+1}' \)
- \( e_{i+1} = e_{i+1}^* + e_{i+1}' \)
where:
- \( d_{i+1}^* = v_i \cdot d_{i+1} \)
- \( d_{i+1}' = (1 - v_i) \cdot d_{i+1} \)
- \( e_{i+1}^* = v_i \cdot e_{i+1} \)
- \( e_{i+1}' = (1 - v_i) \cdot e_{i+1} \)

Then, we have the following equations modulo \( q \):
\[ B_0 \cdot d_{\ell-1}^* + B_1 \cdot e_{\ell-1}^* + B_0 \cdot d_{\ell-1}' + B_1 \cdot e_{\ell-1}' - G \cdot d_{\ell-1} = 0 \mod q, \]
\[ B_0 \cdot d_{\ell-2}^* + B_1 \cdot e_{\ell-2}^* + B_0 \cdot d_{\ell-2}' + B_1 \cdot e_{\ell-2}' - G \cdot d_{\ell-2} = 0 \mod q, \]
\[ \vdots \]
\[ B_0 \cdot d_0^* + B_1 \cdot d_0' + B_0 \cdot e_0' + B_1 \cdot e_0^* = G \cdot u \mod q. \]

By rewriting the matrix-vector products as sums of vector-bit products and combining the equations, we obtain one linear equation modulo \( q \) that contains a total of \( 5k\ell - k \) secret bits.

Modulo 2, for all \( i = \ell - 1, \ldots, 0 \):
\[ v_i + (1 - v_i) = 1 \mod 2, \]
\[ d_{i+1,j} + d_{i+1,j}^* + d_{i+1,j}' + v_i \cdot d_{i+1,j} = 0 \mod 2, \quad \forall j \in [0, k - 1], \]
\[ d_{i+1,j}^* + v_i \cdot d_{i+1,j} = 0 \mod 2, \quad \forall j \in [0, k - 1], \]
\[ d_{i+1,j}' + v_i \cdot e_{i+1,j} = 0 \mod 2, \quad \forall j \in [0, k - 1], \]
\[ e_{i+1,j}^* + v_i \cdot e_{i+1,j} = 0 \mod 2, \quad \forall j \in [0, k - 1], \]
\[ e_{i+1,j}' + v_i \cdot e_{i+1,j} = 0 \mod 2, \quad \forall j \in [0, k - 1]. \]

These equations contain \( (7k + 2)\ell \) secret bits and \( 4k\ell \) quadratic terms.

Next, we proceed analogously for the path from \( z \) to \( u \), determined by the bits \( w_{\ell-1}, \ldots, w_0 \), and obtain a linear equation involving \( 5k\ell - k \) secret bits over \( \mathbb{Z}_q \), as well as \( (5k + 1)\ell \) equations over \( \mathbb{Z}_2 \), which contain \( (7k + 2)\ell \) secret bits and \( 4k\ell \) quadratic terms.

#### Range Membership \( Y \in SM \)
If \( V' \in [1, M - 1] \), then \( S_{V'} \) and \( S_{V' + 1} \) are consecutive elements of Set, and \( S_{V'} < X' < S_{V' + 1} \). This implies \( X'' = X' \notin \text{Set} \), leading to a contradiction.

The security of our protocol relies on the binding property of the commitment \( COM \) used in the interaction, the binding property of the commitment used to commit \( X \), and the security of the Merkle hash tree. These components rely on the assumption that \( SIVP_{\tilde{O}(n)} \) is hard.

The communication cost of the protocol is:
\[ O((m_1 + m_2) \log q) + O(N + |T|) \cdot \kappa = O(n \log^2 q \cdot \log M) \cdot \kappa = \tilde{O}(n \cdot \log M). \]

Repeating the protocol \( \kappa = \omega(\log n) \) times to achieve negligible soundness error results in a total communication cost of order:
\[ \tilde{O}(n \cdot \log M). \]

The protocol assumes that the bit-size \( k \) of all elements \( \{S_i\}_{i=1}^M \) is \( k = n \lceil \log q \rceil \), necessary to build the Merkle tree in a bottom-up fashion using the same SIS-based hash function as in [45]. If set elements \( \{S_i\}_{i=1}^M \) cost less than \( n \lceil \log q \rceil \) bits to represent, they can be padded with zeroes. For binary representations exceeding \( n \lceil \log q \rceil \) bits, a collision-resistant hash function can be applied to reduce them to \( k = n \lceil \log q \rceil \) bits. The leaves of the Merkle tree should be sorted lexicographically by their \( k \)-bit hash values. To maintain zero-knowledge compatibility, a SIS-based hash function \( HSIS : \{0, 1\}^m \to \mathbb{Z}_q^n \) like Ajtai's function [2] can be used to prove that a committed \( m \)-bit element hashes into some \( k \)-bit string not in the Merkle tree.