Question: Consider the following Java code snippet for handling file reading exceptions:

java
public class InputFileRead {
  private File readFile = null;
  private FileReader reader = null;
  private String inputFilePath = 'c:\\somedirectory\\';
  public void readInputFile() {
    try {
      reader = new FileReader(readFile);
      // Read file contents
    } catch (RuntimeException rex) {
      System.err.println('Error: Cannot open input file in the directory ' + inputFilePath);
    } catch (FileNotFoundException ex) {
      // Handle exception
    }
  }
}


Which of the following modifications would be considered a secure practice to address the vulnerability identified in the CWE 537 Java Runtime Error Message Containing Sensitive Information?
"A": "Replace the 'RuntimeException' catch block with a generic error message that does not reveal the default file path.",
"B": "Modify the 'FileNotFoundException' catch block to include the absolute path of the file that could not be found.",
"C": "Log the error message with the default file path to a secure system log accessible only by authorized personnel.",
"D": "Remove the try-catch block entirely, allowing the application to crash and rely on the underlying system's error handling."
Answer: AC