To effectively monitor system resource usage and diagnose performance issues on a Linux server, follow these steps:

### 1. Monitoring System Resource Usage
- **`top` Command**: This command displays the real-time status of running processes, sorted by their CPU usage. It provides an overview of system load and process statuses.
- **`vmstat` Command**: Use this to display virtual memory statistics, including CPU, memory, disk I/O, and process queue information.
- **`free` Command**: This command shows the current memory usage, detailing total, used, and free memory.
- **`iostat` Command**: Utilize `iostat` for insights into disk I/O operations, such as disk usage, throughput, and response times.
- **`sar` (System Activity Reporter) Command**: Collects and reports system activity information, which can be useful for long-term analysis of CPU, memory, and I/O usage.

### 2. Identifying Performance Bottlenecks
- **`top` Command**: Also useful for identifying high-CPU usage processes that may indicate a bottleneck.
- **`iostat` Command**: Helps in detecting high I/O wait times or excessive disk read/write operations, pointing towards potential I/O bottlenecks.
- **`netstat` Command**: Useful for monitoring network connections and identifying any network-related performance issues.
- **`pidstat` Command**: Part of the `sysstat` package, `pidstat` allows you to view detailed per-process statistics regarding CPU, memory, and I/O usage, aiding in pinpointing problematic processes.

### 3. Diagnosing System Performance Issues
- **`dmesg` Command**: Accesses the kernel ring buffer, providing access to system log messages and error reports, crucial for diagnosing hardware or driver issues.
- **`strace` Command**: Enables tracing of system calls made by a process, helping to understand its behavior and identify inefficiencies or errors.
- **`lsof` (List Open Files) Command**: Lists all open files and the associated processes, useful for finding locked or improperly closed files.
- **`tcpdump` Command**: Captures and analyzes network traffic, essential for troubleshooting network-related performance problems.

By systematically applying these commands, administrators can gain a comprehensive understanding of their Linux server's performance, enabling them to efficiently identify and resolve issues.