431
---
## Page 452
一个插件和包含它的那个库对象文件。例如：
记得。如果你重启服务器时没带这些选项，那么服务器就不会加载这些插件。
选项的话，你就必须使用一个很长的选项值，并且必须编辑它才能更改需要加载的那个插件集合。
阅读的行来列出它们，并且可以根据需要选择性地对它们进行注释。如果使用--plugin-load
这样，将它们单独列出来：
项的实例会把插件添加到被加载插件的集合里。例如，要想全部加载这三个插件，可以像下面
--plugin-load 选项的每个实例都会重置被加载插件的列表，而--plugin-load-add 选项不
的所有插件，可以把下面几行内容放到服务器的选项文件里，并重启服务器：
列出库名，但没有列出插件名时，服务器会加载该库里的所有插件。例如，想要加载两个库！
lib_name说明符构成。当同时列出插件名和库名时，服务器只会加载该库里的那个插件。当
统选择适当的后缀来代替。
文件，在Windows 里则为mylib.al1。这里的讨论会把.so作为库的后缀。请你针对自己的系
会
两
432
会。如果多次指定了--plugin-load，那么只有最后一个才会起作用。--plugin-load-add选
对于使用选项--plugin-load 或--plugin-load-add 加载的插件，服务器在重启后不会
丙个选项的值都是一个列表，由一个或多个以分号分隔开的plugin_name=lib_name
想要在运行时加载插件，可以使用INSTALL PLUGIN 语句。此语句的每个实例都可以指定
如果你有很多插件，那么使用--plugin-load-add 选项更方便，因为你可以通过多个易于
plugin-load-add=users=info_tables.so
plugin-load-add=locks=info_tables.so
 -un-- -p-u--
插件名的大小写无关紧要。如果你的文件系统区分大小写，文件名的大小写就比较重要。
要想只加载 info_tables.so里的LOcKs 插件，可以使用下面的内容：
plugin-load=my_engine=my_engine.so;locks=info_tables.so;users=info_tables.so
这等效于像下面这样更加详尽地单独列出每一个插件：
举例说明，假设我们有两个插件库对象文件，都安装在服务器的插件目录里：
插件库带有一个与平台特定相关的文件名后缀。例如，在Linux 里名为 mylib.so 的插件
INSTALL PLUGIN locks SONAME'info_tables.so';
INSTALL PLUGIN my_engine SONAME'my_engine.so;
plugin-load-add=my_engine=my_engine.so
[mysqld]
plugin-load=locks=info_tables.so
[mysqld]
[mysqld]
plugin-load=my_engine.so;info_tables.so
[mysqld]
要想在服务器启动时加载插件，可以使用选项--plugin-load或--plugin-load-add。
口
口
口
通
口
过插件接口，可以完成如下操作。
一个是名为info_tables.so的库，其中包含多个插件。这些插件实现了INFORMATION
件，可以使用INSTALL PLUGIN。
在运行时，
在运行时，
在服务器启动时，从文件里单独或成组地加载插件；
_SCHEMA库的LOCKS表和USERS表，分别用于显示与当前锁和连接客户端有关的信息。
储引擎。
册的插件。使用--skip-grant-tables选项可以跳过这一操作。要想在这个表里注册插
第12章MySQL的基本管理
检查哪些插件可用。
单独加载或卸载插件；
福
口
这
---
## Page 453
12.5.1选择存储引擎
的性能有关的信息请参考12.7.2节。
器使用某些存储引擎，并且特别针对InnoDB提供了一些常规的配置信息。与InnoDB和MyISAM
MySQL中各存储引擎的一般性讨论请参考2.6.1节。下面将讨论如何通过配置让MySQL服务
12.5
定一个可选值，这些值具体如下。
--my_engine=OFF可以分别激活或停用存储引擎插件my_engine。可以在插件名后面紧接着指
会控制它的激活状态。为此，可以在该插件后面加上一个选项。例如，--my_engine=ON 或
的，或者该插件是使用选项--plugin-load 或--plugin-load-add 指定的，那么服务器可能
或者 INFORMATION_SCHEMA 库的 PLUGINS 表来查看存在哪些插件。例如：
要对该表拥有INSERT权限和DELETE 权限。
服务器关闭时才能停用，那么执行UNINSTALLPLUGIN 语句会导致一个错误。
器在后续的重启中便不会再加载它。如果某个插件被设计成不允许在运行时进行卸载，只有在
启中就可以自动加载该插件。
是说，这条语句不仅会加载插件，还会在mysql.plugin表里注册它，这样服务器在随后的重
MySQL服务器支持多种存储引擎，并且在决定何种引擎可供使用方面高度的可配置。关于
在决定哪些存储引擎可供使用方面，MySQL服务器提供了非常灵活的控制。默认可用且可
如果服务器在启动时加载某个插件的原因是该插件是内建的、注册在 mysql.plugin 表里
mySql> SHOWPLUGINS;
不管你是在服务器启动时加载插件，还是在运行时加载，都可以使用 SHOWPLUGINS 语句
这些选项值不区分大小写，也不会将插件名与选项名进行匹配。
INSTALL PLUGIN 还能从mysql.plugin表里注销插件（如果它列在其中的话），这样服务
可以使用UNINSTALLPLUGIN在运行时卸载插件。例如：
口FORCE：类似于ON，但如果插件加载失败，服务器不会启动。
口ON：激活插件。如果在插件名后面没有值，就默认为这个值。
OFF：不激活插件。等效的选项还有--disable-plugin_name、--skip-plugin_name和
UNINSTALL PLUGIN USerS;
口FORCE_PLUS_PERMANENT：类似于FORCE，不过服务器还会阻止在运行时使用UNINSTALL
Imy_engineIACTIVE I STORAGE ENGINE
INSTALL PLUGIN uSers SONAME'info_tables.So';
PLUGIN卸载该插件。此选项值是在MySQL5.5.7里引人的。
-plugin_name和--plugin_name=1。如果插件加载失败，服务器会在运行时禁用它。
USERS
LOCKS
存储引擎配置
--plugin_name=0.
Name
IStatusIType
ACTIVE
ACTIVE
INFORMATION
INFORMATION SCHEMA
1 info_tables.so | GPL
I info_tables.soI
Imy_engine.so
Library
12.5存储引擎配置
。等效的选项还有-enable
|GPL
GPL
ILicense
433
---
## Page 454
5.6.3版本起，它只能用于永久表；对于TEMPORARY表，需要用独立变量default_tmp_storage_
客户端都可以使用这条语句来更改自己的默认存储引擎。
储引擎。执行第二条语句不需要拥有任何特殊权限，它只会影响当前客户端的会话，并且任何
擎，可以在服务器选项文件里加入下面几行内容：
default_storage_engine来选择不同的默认引擎。例如，要想让MyISAM成为默认的存储引
12.5.2选择默认存储引擎
查询 INFORMATION_SCHEMA 库的 ENGINES表。例如：
态的启动选项。更多与启动时控制存储引擎插件状态的选项有关的信息请参考12.4节。
占用量。（不过，如果你禁用了某个存储引擎，那么就无法访问由这个存储引擎创建的表。）
在启动时选择性地启用或禁用它们。例如，你可以禁用不需要的引擎，从而减少服务器的内存
MyISAM、MEMORY、MERGE和CSV。还有其他几种可供使用的存储引擎，你可以根据需要
被禁用的存储引擎是InnoDB（它也是默认存储引擎）。默认可用的且不可禁用的存储引擎有
434
编译默认的存储引擎是InnoDB，但你可以在服务器启动时或者运行时通过设置系统变量
要想在运行时看到有哪些可用的存储引擎及其状态，可以使用 SHOW ENGINES 语句，或者
对于MySQL安装包里的某个给定的存储引擎，表12-2展示了其默认状态和用于更改其状
SELECT @@GLOBAL.default_storage_engine, @@SESSION. default_storage_engine;
要想查看全局和当前会话的默认存储引擎，可以使用下面这条语句：
执行第一条语句需要拥有 SUPER 权限，并且它会为之后建立的所有客户端连接设置默认存
SET GLoBAL default_storage_engine = engine_name;
要想在运行时更改默认存储引擎，可以使用下面这些语句中的某一条：
default_storage_engine = myisam
更多相关信息请参考2.6.1.1节。
mySql>SELECT ENGINE, SUPPORT FROM INFORMATION_SCHEMA.ENGINES;
SET SEsSION default_storage_engine = engine_name;
[mysqld]
ENGINE
MRG_MYISAM
MyISAM
MERGE
MEMORY
MyISAM
InnoDB
FEDERATED
CSV
BLACKHOLE
ARCHIVE
MEMORY
InnoDB
CSV
存储引擎
第12章MySQL的基本管理
ISUPPORT
可用时的默认状态
YES
YES
YES
DEFAULT
YES
启用
启用
禁
启用
启用
启用
表12-2存储引擎的配置控制
用
不能禁用
不能禁用
不能禁用
--innodb=OFF，表示禁用
--federated，表示启用
不能禁用
--blackhole=OFF，表示禁用
--archive=OFF，表示禁用
更改状态的选项
用
---
## Page 455
因为数据目录是默认的。文件配置如下：
innodata1和innodata2的文件构成。在这种情况下，不需要设置innodb_data_home_dir，
创建一个名为 idbata1、大小为10 MB的自扩展文件，并把它作为表空间。
行配置，以使服务器在每次启动时都能使用相同的配置。
的各种选项进行配置。可以在服务器的命令行里指定这些选项，但实际上很少这样做。一般都
个磁盘文件组成的。各个组成文件既可以是常规文件，也可以是原始分区，可以通过此处讲
着 InnoDB的数据字典。
file_per_table。在这种情况下，虽然无需太大的系统表空间，但也还是需要的，因为它包含
使其实现每个表都拥有自己独立的表空间，可以在启动服务器时启用系统变量innodb_
存储着与表结构有关的信息的InnoDB数据字典。
格式的文件。这个文件存放在InnoDB 表所属的数据库的数据库目录里。系统表空间还包含有
一个虚拟的文件系统。）对于存储在系统表空间里的InnoDB表，唯一与之关联的文件便是.frm
InnoDB 存储引擎将其当作一个巨大的数据结构。（从某种意义上讲，可以把这个表空间想象为
InnoDB 表都存放在一个单独的系统表空间里。从逻辑上讲，该表空间是一个统一的存储块，
冲区。
让其采用每个表对应一个表空间的工作模式。InnoDB存储引擎有其自己的日志文件和内存缓
管理着一个用于存储表内容和其数据字典的系统表空间。你也可以选择对InnoDB进行配置，
12.5.3
以外的某个存储引擎；否则服务器将无法启动。
storage_engine （在 MySQL5.6里，还包括 default_tmp_storage_engine）设置为 InnoDB
12.5.3.1
MEMORY，以避免InnoDB引擎带来的事务开销。
engine来指定默认引擎。后者的典型用法是：针对 TEMPORARY 表使用存储引擎 MyISAM或者
如果在启动服务器时使用了--innodb=OFF 来禁用 InnoDB引擎，就需要将变量default_
假设，你要在数据目录里创建一个表空间一
有了这些默认值，即使你没有指定上述两个系统变量，InnoDB也会在服务器的数据目录里
在默认的情况下，InnoDB存储引擎不使用每个表对应单独几个文件的模式，而是将所有的
虽然InnoDB系统表空间在逻辑上只是一个单独的存储区域，但它实际上却是由一个或者
在MySQL5.5里，InnoDB成为了MySQL的默认存储引擎（以前是MyISAM)。InnoDB
innodb_data_file_path=innodata1:4G;innodata2:4G
[mysqld]
口 innodb_data_file_path。它用于定义位于InnoDB 主目录下的那些表空间组成文件的规
使用下面的系统变量可以控制系统表空间里文件的数量、大小和位置。
口
1.lnnoDB系统表空间配置参数
于10MB。默认是一个名为ibdata1、大小为10MB的自扩展文件。
和某些其他可能有的选项，这些选项之间用冒号分隔。表空间各组成文件的总大小不得小
格。这个选项的值由多个以分号分隔的文件规格构成。每个规格都包含文件名、文件大小
服务器数据目录。
innodb_data_home_dir。它用于定义构成表空间的所有组成文件的父目录。其默认值为
配置InnoDB表空间
配置InnoDB存储引擎
一它由两个大小皆为4GB，名字分别为
12.5存储引擎配置
435
述
多
---
## Page 456
空间文件和日志文件)。接着，指定要使用的配置选项，重启服务器。(在做这件事情之前，请
系统表空间。要想显式地配置表空间，需要先停止服务器，删除与InnoDB 有关的文件（如表
件)。要想对只包含常规文件的系统表空间进行初始化设置，可以执行以下步骤。
autoextend_increment。
表空间的最后一个组成文件可被列为自扩展的。
格式与第二种类似，只是它包含了一个用于表明该自动扩展文件允许增长到的最大大小。只有
的是一个可自动扩展的文件，即当该文件被填满时，InnoDB会自动以递增方式扩展它。第三种
面带有M或G，分别表示以兆字节（megabyte）或吉字节（gigabyte）为单位。第二种格式指定
以下几种语法：