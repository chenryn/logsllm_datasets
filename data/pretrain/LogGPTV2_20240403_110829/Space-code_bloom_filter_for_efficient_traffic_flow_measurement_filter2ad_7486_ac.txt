k(cid:17)
θ−β1 − θ − β
(cid:16)1 − α
k(cid:17)
k(cid:17)
(cid:16)α
2 !(cid:18) θ − 2
+ θ − β
q − ··· + (−1)
θ (cid:19)
β
θ
q
q
Xβ=0"(cid:18) θ
. θ
β!
l(cid:19)
1 !(cid:18) θ − 1
θ (cid:19)
θ−β θ − β
θ − β!(cid:18) β
θ(cid:19)
q#
(1)
4.2 MLE with observations from multiple SCBF’s
in MRSCBF
Now we describe the MLE process for MRSCBF. Let Θ1, Θ2,
..., Θr be the set of groups that are matched by the element x in
SCBF 1, 2, ..., r respectively. Since Θ1, ··· ,Θr are independent,
when independent hash functions are used in SCBF’s, we have
r
P r[Θ1, ··· , Θr|F = f ] =
Yi=1
Therefore M LE(Θ1,··· , Θr) = argmax
f 	
Note that P r[Θi|F = f ] can be computed from Equation 1.
(2)
i=1 P r[Θi|F = f ].
P r[Θi|F = f ]
r
However, although above MLE decoding formula is in principle
correct, it cannot be used in practice since the complexity of pre-
computing the decoding table is prohibitive. We solve this problem
by choosing the observations from the “best three consecutive res-
olutions”, namely, Θj−1, Θj, Θj+1 for a certain j depending on
the speciﬁc values of |Θi|, i = 1, 2, ..., r. Our analysis shows that
M LE(Θj−1, Θj , Θj+1) will achieve accuracy very close to MLE
based on all the observations. The theory behind selecting the “best
three” is involved and omitted here due to space limitations.
δ
-
1
1
0.8
0.6
0.4
0.2
0
0
ε=1
ε=0.5
ε=0.25
ε=0.2
1000 2000 3000 4000 5000 6000 7000 8000 9000 10000
f
Figure 5: Probability that the estimate ˆF is within a factor of
(1 ± ) of the actual frequency F for various values of .
5. EVALUATION
5.1 The accuracy of MLE decoding
The accuracy of estimation by a MRSCBF is a function of the
various design parameters, including the number of groups (li),
the sampling rate (pi) (resolution), and the number of hash func-
tions (ki), used in each SCBF i, i = 1, 2, ..., r. The accuracy
of the MLE decoding for a single group can be characterized by
the probability of the estimated value ˆF being within the interval
[(1 − )F, (1 + )F ], where F is the real value.
It can also be
characterized as the mean of the difference between the the real
and estimated values E[| ˆF − F|]. Both characterizations can be
computed from Equation 2 in a straightforward way.
Figure 5 shows the plot of (1−δ) for different values of f, where
1 − δ = P r[(1 − )F ≤ ˆF ≤ (1 + )F ]. The parameters used
for the MRSCBF are r = 9 virtual SCBFs, l = 32 groups in each
bloom ﬁlter, sampling frequencies of 1, 1/4, 1/16, ··· , 1/4r−1 for
the r SCBFs and k = 4 hash functions per group in the ﬁrst SCBF
and k = 6 for the rest. Each curve corresponds to a speciﬁc level of
relative error tolerance (i.e. a speciﬁc choice of ), and represents
the probability that the estimated value is within this factor of the
actual value. For example, the curve for  = 0.25 shows that about
80% of the time, the estimate is within 25% of the actual value. The
mean of the difference between the the real and estimated values
(E[| ˆF − F|]) is about 15% of the actual value F .
5.2 Packet header trace measurements
To evaluate the performance of MRSCBF on real-world Internet
trafﬁc, we experiment on a set of three packet header traces ob-
tained from a tier-1 ISP backbone. These traces were collected by
a Gigascope probe [11] on a high speed link leaving a data center
in April, 2003. Among them two were gathered on weekdays and
one on a weekend. Each of the packet header traces lasts a few
hours and consists of 588∼632 million packet headers and carries
280∼329 GB trafﬁc. The number of unique IP addresses observed
in each trace is around 10 million.
We ran MRSCBF on the packet header traces to estimate the
length of each ﬂow, identiﬁed by either the source or the desti-
nation IP address. We observe that MRSCBF is able to process
∼2 million packets before paging to disk with a ﬁlter array of size
1MB. According to the “50% golden rule” (Section 3.1), a ﬁlter is
considered full when half the bits in the array have been set to 1. As
mentioned in the previous subsection, the number of virtual SCBFs
in the MRSCBF used in our experiments is 9. With sampling fre-
quencies of 1, 1/4, 1/16, ··· , 1/48, this conﬁguration covers the
it is a write-only data structure (blind streaming). We developed
procedures for estimating the ﬂow volume from observations of
MRSCBF based on the Maximum Likelihood Estimation (MLE)
principle. Our analysis shows that our estimation procedure will
guarantee constant relative error with high probability. We also ex-
periment MRSCBF and its MLE algorithm on Tier-1 ISP backbone
trafﬁc traces. The experimental results agree very well with our
theoretical analysis. In our future work, we will explore the fun-
damental tradeoff between measurement accuracy and complexity,
and apply the SCBF data structure to other network measurement
problems.
7. REFERENCES
[1] C. Estan and G. Varghese, “New Directions in Trafﬁc
Measurement and Accounting,” in Proc. ACM SIGCOMM,
Aug. 2002.
[2] “http://www.caida.org,” .
[3] M. Charikar, K. Chen, and Farach-Colton, “Finding frequent
items in data streams,” in ICALP. Lecture Notes in Computer
Science, Springer-Verlag, Heidelberg, Germany, 2002, pp.
693–703.
[4] R. M. Karp, S. Shenker, and C. H. Papadimitriou, “A simple
algorithm for ﬁnding frequent elements in streams and bags,”
ACM Transactions on Database Systems (TODS), vol. 28,
pp. 51–55, 2003.
[5] Burton H. Bloom, “Space/time trade-offs in hash coding with
allowable errors,” CACM, vol. 13, no. 7, pp. 422–426, 1970.
[6] L. Fan, P. Cao, J. Almeida, and A.Z. Broder, “Summary
cache: a scalable wide-area Web cache sharing protocol,”
IEEE/ACM Transactions on Networking, vol. 8, no. 3, pp.
281–293, 2000.
[7] S. Cohen and Y. Matias, “Spectral bloom ﬁlters,” in
Proc. ACM SIGMOD Conference on Management of Data,
2003.
[8] N. Alon, Y. Matias, and M. Szegedy, “The space complexity
of approximating the frequency moments,” in Proceedings of
the ACM Symposium on Theory of Computing, 1996.
[9] E.D. Demaine, J.I. Munro, and A. Lopez-Ortiz, “Frequency
estimation of internet packet streams with limited space,” in
European Symposium on Algorithms (ESA). Lecture Notes in
Computer Science, Springer-Verlag, Heidelberg, Germany,
2002.
[10] P. J. Bickel and K. A. Doksum, Mathematical Statistics,
Basic Ideas and Selected Topics, Prentice Hall, 2001.
[11] Chuck Cranor, Theodore Johnson, and Oliver Spatscheck,
“Gigascope: a stream database for network applications,” in
Proceedings of SIGMOD 2003, Jun 2003.
[12] Cristian Estan, George Varghese, and Mike Fisk, “Bitmap
algorithms for counting active ﬂows on high speed links,”
Tech. Rep., UCSD, 2003.
estimated
original
10
100
1000
10000
100000
Original flow length (packets)
(a)
estimated
original
)
s
t
e
k
c
a
p
(
h
t
g
n
e
l
w
o
l
f
d
e
t
a
m
i
t
s
E
100000
10000
1000
100
10
1
1
100000
10000
1000
100
10
)
s
t
e
k
c
a
p
(
h
t
g
n
e
l
w
o
l
f
d
e
t
a
m
i
t
s
E
1
0.001
0.01
0.1
1
10
100
Normalized rank of flows
(b)
Figure 6: The original and estimated ﬂow length distributions
(both x and y axis are in log scale). (a) Original vs estimated
ﬂow length; (b) Distribution of the original and estimated ﬂow
length.
range of ﬂow sizes from 1 to approximately 48 = 65536. To ex-
tend this range of coverage, one simply needs to add more virtual
SCBFs with smaller sampling frequencies to the MRSCBF. Fig-
ure 6 shows the distribution of actual and estimated ﬂow size, in
terms of the number of packets in the ﬂow, in a trace segment con-
taining 2 million packets taken from the large packet header trace
obtained on April 17, 2003. The MRSCBF over-estimated the total
number of packets by about 3%. We obtained similar results over
various segments taken from all three packet header traces. Fig-
ure 6(a) agrees with our theoretical analysis shown in Figure 5. It
shows that MRSCBF achieves a constant relative error tolerance.
Each point in the graph corresponds to a ﬂow, with its x coordinate
being the actual number of packets in this ﬂow, and its y coordi-
nate the number estimated by MRSCBF. Note that both axes are
in logarithm scales. The fact that all the points are concentrated
within a narrow band of ﬁxed width along the y = x line indicates
that our estimates are consistently within a constant factor of the
actual frequency. Figure 6(b) shows the distribution of the original
and estimated ﬂow sizes (both of them are sorted by the number
of packets in a ﬂow). We found that MRSCBF gives near perfect
ﬂow volume distribution. This is very useful in applications such
as network anomaly detection.
6. CONCLUSIONS
Per-ﬂow trafﬁc accounting is important in a number of network
applications. However, current solutions such as maintaining per-
ﬂow state or random sampling are either not scalable or not accu-
rate. We propose a novel data structure called Space Code Bloom
Filter that performs approximate yet reasonably accurate per-ﬂow
accounting without maintaining per-ﬂow state. It is very amenable
to pipelined hardware implementation since its logic is simple and